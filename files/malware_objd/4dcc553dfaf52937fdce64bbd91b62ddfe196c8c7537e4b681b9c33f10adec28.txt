
4dcc553dfaf52937fdce64bbd91b62ddfe196c8c7537e4b681b9c33f10adec28.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	into   
  4025ec:	add    eax,0x7c7ca901
  4025f1:	jl     0x40266f
  4025f3:	rcr    DWORD PTR [edi+0x7c],cl
  4025f6:	jl     0x40260d
  4025f8:	cs pop ss
  4025fa:	cmp    DWORD PTR [ecx],edx
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	jp     0x40267f
  402605:	ins    BYTE PTR es:[edi],dx
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0x5ee4bb0e]
  40269c:	bound  esi,QWORD PTR ds:0xea747326
  4026a2:	or     ecx,DWORD PTR [eax+0x4bcb7d52]
  4026a8:	(bad)  [edx+0x4fc6bc3e]
  4026ae:	mov    esi,0x2ebac9fa
  4026b3:	jmp    0x4026dd
  4026b5:	mov    esp,fs
  4026b7:	add    ebp,DWORD PTR [eax-0x26]
  4026ba:	inc    ebp
  4026bb:	lea    edi,[esi+0x4e]
  4026be:	cmp    DWORD PTR [edx-0x2f2e9569],0x57d3a498
  4026c8:	dec    esi
  4026c9:	pop    eax
  4026ca:	icebp  
  4026cb:	pop    ecx
  4026cc:	mov    esi,0xb6a0e8d1
  4026d1:	cwde   
  4026d2:	add    dl,BYTE PTR [eax+ebp*8+0x57]
  4026d6:	test   DWORD PTR [esi-0x7f],edi
  4026d9:	or     eax,0x709d7eda
  4026de:	push   ebp
  4026df:	mov    edi,DWORD PTR [ebx-0x1a0cba7]
  4026e5:	xchg   edx,eax
  4026e6:	or     al,BYTE PTR [edx]
  4026e8:	inc    eax
  4026e9:	add    ebp,DWORD PTR [bx+di]
  4026ec:	cmp    ebx,esp
  4026ee:	fld    DWORD PTR [edx]
  4026f0:	mov    BYTE PTR [edi+0x12],bh
  4026f3:	and    eax,0xa5ef854c
  4026f8:	xor    eax,0x951d4d3b
  4026fd:	daa    
  4026fe:	mov    al,BYTE PTR [edi]
  402700:	in     al,0x9c
  402702:	leave  
  402703:	or     eax,edx
  402705:	add    esp,DWORD PTR [ebx-0x68]
  402708:	adc    bh,BYTE PTR [ebp+0x448a89ab]
  40270e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270f:	push   eax
  402710:	inc    ecx
  402711:	jl     0x402716
  402713:	xchg   ebx,eax
  402714:	lock out 0x62,al
  402717:	jecxz  0x402787
  402719:	lock test al,0x1d
  40271c:	fwait
  40271d:	ror    DWORD PTR [eax],1
  40271f:	xchg   ebp,eax
  402720:	(bad)  
  402721:	shl    DWORD PTR [edi],cl
  402723:	pop    edi
  402724:	add    DWORD PTR [ebp+0x64ee8bd9],edi
  40272a:	fmul   st(2),st
  40272c:	or     al,0x9b
  40272e:	imul   ebp,DWORD PTR [edx+0x63],0x5d64d9d6
  402735:	scas   eax,DWORD PTR es:[edi]
  402736:	hlt    
  402737:	xlat   BYTE PTR ds:[ebx]
  402738:	add    al,0x1c
  40273a:	mov    ah,0xf3
  40273c:	push   ecx
  40273d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40273e:	out    dx,al
  40273f:	mov    ds:0x6adb7fa5,al
  402744:	inc    edi
  402745:	mov    WORD PTR [eax],es
  402747:	jp     0x402775
  402749:	push   eax
  40274a:	push   cs
  40274b:	mov    ?,edx
  40274d:	xchg   edx,eax
  40274e:	fs icebp 
  402750:	sub    eax,0x91f48dd8
  402755:	jbe    0x402713
  402757:	add    DWORD PTR ds:0xeaf7bb0c,esp
  40275d:	push   ds
  40275e:	dec    edx
  40275f:	jnp    0x402767
  402761:	xor    al,0x8b
  402763:	adc    al,0xe9
  402765:	std    
  402766:	cli    
  402767:	mov    al,0x65
  402769:	sbb    al,0x3a
  40276b:	lahf   
  40276c:	test   DWORD PTR [esi-0x62d6f7c9],esi
  402772:	push   ebx
  402773:	jne    0x40276d
  402775:	ret    0xa081
  402778:	jns    0x40271b
  40277a:	pop    edx
  40277b:	hlt    
  40277c:	mov    ds:0xc3e74a4b,eax
  402781:	push   es
  402782:	sbb    dh,dl
  402784:	or     dh,BYTE PTR [edi-0x34]
  402787:	sub    BYTE PTR [ebx-0x3f],0x20
  40278b:	jne    0x402755
  40278d:	icebp  
  40278e:	(bad)  
  40278f:	jno    0x40280a
  402791:	scas   eax,DWORD PTR es:[edi]
  402792:	test   al,0x30
  402794:	cwde   
  402795:	sbb    DWORD PTR [esi-0x2a],edx
  402798:	sub    ah,BYTE PTR [eax-0x47]
  40279b:	es inc eax
  40279d:	ins    BYTE PTR es:[edi],dx
  40279e:	pusha  
  40279f:	stos   BYTE PTR es:[edi],al
  4027a0:	ss jbe 0x40276a
  4027a3:	jl     0x402787
  4027a5:	aam    0xd6
  4027a7:	mov    esp,edx
  4027a9:	sub    eax,0x9d222678
  4027ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027af:	test   al,0x25
  4027b1:	dec    eax
  4027b2:	mov    ecx,0x94a6ca3d
  4027b7:	pop    ecx
  4027b8:	mov    esp,0xb95afda9
  4027bd:	add    eax,0xea7169fd
  4027c2:	(bad)
  4027c6:	mul    DWORD PTR ds:0xdad3f0c1
  4027cc:	inc    edx
  4027cd:	inc    eax
  4027ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027cf:	adc    al,0x2
  4027d1:	in     al,0xfa
  4027d3:	dec    eax
  4027d4:	dec    ebx
  4027d6:	js     0x402760
  4027d8:	in     eax,0xa1
  4027da:	add    edi,eax
  4027dc:	sti    
  4027dd:	xchg   ebp,eax
  4027de:	and    eax,0xa1802ce4
  4027e3:	jg     0x402786
  4027e5:	jo     0x4027ae
  4027e7:	data16 mov ch,0x1
  4027ea:	out    0x8,eax
  4027ec:	fcom   DWORD PTR ds:0x270b84e6
  4027f2:	mov    cl,0x41
  4027f4:	xchg   edx,eax
  4027f5:	inc    esp
  4027f6:	mov    ds:0xff0bf28f,eax
  4027fb:	(bad)  
  4027fc:	mov    eax,ds:0x41fae311
  402801:	xor    esi,DWORD PTR [esi-0x1015fcc5]
  402807:	popa   
  402808:	xor    edx,DWORD PTR ss:[ebp-0x3a]
  40280c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40280d:	test   BYTE PTR [edi+0x7356c025],0x72
  402814:	adc    BYTE PTR [edi+ebp*1-0x3b],0xb
  402819:	sti    
  40281a:	aaa    
  40281b:	mov    ebp,DWORD PTR [ebx]
  40281d:	cdq    
  40281e:	or     bh,BYTE PTR [eax+0x17]
  402821:	and    eax,0x99826e2e
  402826:	sbb    dh,BYTE PTR [ebx-0x58]
  402829:	mov    dl,0x5f
  40282b:	scas   al,BYTE PTR es:[edi]
  40282c:	dec    edi
  40282d:	popf   
  40282e:	in     al,0xa9
  402830:	mov    eax,ds:0xcb035677
  402835:	cli    
  402836:	ss jb  0x4028a0
  402839:	into   
  40283a:	or     edx,DWORD PTR [edx-0x70]
  40283d:	sbb    al,0x6f
  40283f:	pop    esp
  402840:	dec    edx
  402841:	pop    es
  402842:	call   0xd693:0x6ec7
  402848:	sti    
  402849:	imul   ebp,DWORD PTR [ebp-0x3],0xffffff91
  40284d:	jmp    DWORD PTR [edx]
  40284f:	dec    ebx
  402850:	int    0xe4
  402852:	call   0x76147427
  402857:	(bad)  
  402858:	fucomp st(0)
  40285a:	aaa    
  40285b:	adc    BYTE PTR [ecx-0x29],0xe7
  40285f:	call   FWORD PTR [ebp+0x29]
  402862:	jne    0x4028d7
  402864:	fldcw  WORD PTR [ecx]
  402866:	ror    BYTE PTR [ecx+0x547ca8cd],cl
  40286c:	adc    ah,al
  40286e:	cdq    
  40286f:	js     0x402831
  402871:	fdivr  QWORD PTR [edi-0x68]
  402874:	rol    DWORD PTR [edx],1
  402876:	fild   QWORD PTR [ebx]
  402878:	pop    ecx
  402879:	ss xchg ebp,eax
  40287b:	mov    al,0xec
  40287d:	xor    ebx,DWORD PTR [ebx]
  40287f:	dec    eax
  402880:	xchg   esp,eax
  402881:	cdq    
  402882:	pop    edi
  402883:	xor    ebx,eax
  402885:	push   ds
  402886:	fmulp  st(7),st
  402888:	pop    ebx
  402889:	rol    esp,1
  40288b:	mov    al,0x44
  40288d:	mov    ss,esi
  40288f:	arpl   WORD PTR [esp+edx*8],si
  402892:	adc    dh,BYTE PTR [ecx-0x7a9e5ad4]
  402898:	es mov ah,0x97
  40289b:	popa   
  40289c:	fstp   QWORD PTR [ebp-0x616de419]
  4028a2:	gs dec ecx
  4028a4:	push   esi
  4028a5:	cmp    al,0x5e
  4028a7:	aad    0x65
  4028a9:	and    BYTE PTR [edi],al
  4028ab:	mov    eax,0x2f1add25
  4028b0:	add    bh,BYTE PTR [ecx+0x7b781601]
  4028b6:	adc    DWORD PTR [ebx+0x5184a0ca],edi
  4028bc:	jnp    0x402888
  4028be:	aas    
  4028bf:	ja     0x4028b1
  4028c1:	fisubr WORD PTR [ebx]
  4028c3:	mov    cl,BYTE PTR [ebp+edi*8-0x1e]
  4028c7:	addr16 fcmovne st,st(7)
  4028ca:	inc    eax
  4028cb:	ins    BYTE PTR es:[edi],dx
  4028cc:	dec    ebx
  4028cd:	sbb    eax,0x934cf0c2
  4028d2:	test   DWORD PTR [ebp-0x69],esp
  4028d5:	cmc    
  4028d6:	test   BYTE PTR [esi],dl
  4028d8:	xor    eax,0x73626202
  4028dd:	sbb    DWORD PTR [ebp+0x74],esp
  4028e0:	rcl    cl,cl
  4028e2:	stos   DWORD PTR es:[edi],eax
  4028e3:	push   0x1b
  4028e5:	stc    
  4028e6:	nop
  4028e7:	xor    eax,0x111e406a
  4028ec:	dec    esi
  4028ed:	mov    dl,0xb
  4028ef:	push   0x7
  4028f1:	inc    ebp
  4028f2:	das    
  4028f3:	inc    ecx
  4028f4:	dec    edi
  4028f5:	and    eax,0xc9d51f1b
  4028fa:	stos   BYTE PTR es:[edi],al
  4028fb:	jge    0x402930
  4028fd:	in     eax,dx
  4028fe:	mov    ebx,0xcf4cf8c6
  402903:	ss int3 
  402905:	aaa    
  402906:	out    dx,al
  402907:	int3   
  402908:	aaa    
  402909:	in     eax,0x85
  40290b:	jle    0x4028b5
  40290d:	loope  0x40294a
  40290f:	mov    al,ch
  402911:	xchg   esi,eax
  402912:	jb     0x4028d6
  402914:	imul   ecx,DWORD PTR [ebx],0xd7bb172c
  40291a:	imul   edx,edi,0x2d
  40291d:	loope  0x4028a4
  40291f:	jge    0x402993
  402921:	jle    0x40294c
  402923:	ret    0xcde6
  402926:	or     BYTE PTR [edx+0x5f0d1676],dh
  40292c:	fcom   DWORD PTR [edx+0x660039a7]
  402932:	mov    esi,0xd660d177
  402937:	xchg   esi,eax
  402938:	cmp    eax,0x14db5f1f
  40293d:	jmp    0x91a4ffd5
  402942:	sub    DWORD PTR ds:0x3f1854d7,0x8
  402949:	std    
  40294a:	pop    esp
  40294b:	rcr    esi,1
  40294d:	mov    edx,0xc35257a3
  402952:	xlat   BYTE PTR ds:[ebx]
  402953:	sub    al,0x83
  402955:	adc    eax,0x16c75085
  40295a:	and    DWORD PTR [esi+edx*4-0x12],edi
  40295e:	icebp  
  40295f:	mov    al,ds:0xa66220b0
  402964:	sbb    al,0xb2
  402966:	xor    al,0xd4
  402968:	push   es
  402969:	jp     0x402978
  40296b:	shl    BYTE PTR [edi+0x9f11fa7],1
  402971:	shl    ch,1
  402973:	or     DWORD PTR ds:0x8bf15971,eax
  402979:	lods   al,BYTE PTR ds:[esi]
  40297a:	dec    ecx
  40297b:	xor    BYTE PTR [ebx-0x5f],ah
  40297e:	fs add ch,bh
  402981:	or     ebp,esp
  402983:	sub    bh,BYTE PTR [eax-0x3b]
  402986:	add    BYTE PTR [edx],bl
  402988:	aaa    
  402989:	clc    
  40298a:	mov    bh,0xd0
  40298c:	test   BYTE PTR [eax+0x46],bh
  40298f:	mov    edx,0x2cd8cc62
  402994:	imul   eax,DWORD PTR [ebx+0x113e95c2],0x9f4e2cf2
  40299e:	pop    edx
  40299f:	push   ecx
  4029a0:	cmp    al,0x66
  4029a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a4:	xor    ah,dh
  4029a6:	mov    eax,0x1d8a28d8
  4029ab:	lods   eax,DWORD PTR ds:[esi]
  4029ac:	std    
  4029ad:	call   0xc2111c71
  4029b2:	call   0xd54:0x99bf0ec9
  4029b9:	pop    ss
  4029ba:	ror    BYTE PTR [ebx],0xd8
  4029bd:	xor    BYTE PTR [eax+edx*4+0x22c74e88],ch
  4029c4:	or     DWORD PTR [eax-0x56],edx
  4029c7:	fidivr WORD PTR [esi-0x30080f45]
  4029cd:	push   ds
  4029ce:	pop    esp
  4029cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029d0:	push   es
  4029d1:	mov    ds:0xd5aea692,eax
  4029d6:	push   ebx
  4029d7:	dec    esp
  4029d8:	xor    al,0xcd
  4029da:	cwde   
  4029db:	(bad)  
  4029dc:	pop    ebx
  4029dd:	cmp    DWORD PTR [eax+0x74],eax
  4029e0:	pushf  
  4029e1:	fcos   
  4029e3:	std    
  4029e4:	movups XMMWORD PTR [eax+0x4dd827df],xmm3
  4029eb:	ret    0x3825
  4029ee:	ret    0x4e83
  4029f1:	sti    
  4029f2:	xor    BYTE PTR [ebx],bl
  4029f4:	test   eax,0x742cf707
  4029f9:	xchg   ecx,eax
  4029fa:	jmp    0xa587cb7a
  4029ff:	push   ebp
  402a00:	(bad)  
  402a01:	loope  0x402a17
  402a03:	cli    
  402a04:	jle    0x402a39
  402a06:	inc    eax
  402a07:	(bad)  
  402a08:	dec    ebp
  402a09:	inc    edx
  402a0a:	sub    eax,eax
  402a0c:	jo     0x402a7c
  402a0e:	mov    dl,0xdf
  402a10:	jge    0x402a08
  402a12:	pop    ss
  402a13:	jg     0x4029fe
  402a15:	nop
  402a16:	jp     0x4029e6
  402a18:	mul    DWORD PTR [ecx+0x64]
  402a1b:	xchg   DWORD PTR [edi],edx
  402a1d:	mov    ds:0x358d85c4,eax
  402a22:	aas    
  402a23:	mov    edi,0x51d678ae
  402a28:	dec    edx
  402a29:	mov    BYTE PTR [ecx+0x69],bl
  402a2c:	in     eax,dx
  402a2d:	div    DWORD PTR [ecx-0x35aafb7e]
  402a33:	repnz xchg edi,eax
  402a35:	inc    edi
  402a37:	cmp    ecx,DWORD PTR [edi-0x22b1c2a6]
  402a3d:	add    eax,edx
  402a3f:	adc    ch,cl
  402a41:	test   DWORD PTR [esi-0x20],edi
  402a44:	test   eax,0x4c1cde61
  402a49:	lock iret 
  402a4b:	pop    ecx
  402a4c:	mov    WORD PTR [edi+0x67],cs
  402a4f:	adc    bx,si
  402a52:	shl    BYTE PTR [edi-0x6d41000b],0x12
  402a59:	mov    dh,0x78
  402a5b:	addr16 (bad) 
  402a5d:	mov    esp,0xafa40e31
  402a62:	test   DWORD PTR [eax],ecx
  402a64:	retf   0xaf34
  402a67:	rcr    BYTE PTR [edi+ecx*4-0x1e],1
  402a6b:	je     0x402a6b
  402a6d:	or     al,0x64
  402a6f:	xor    ecx,DWORD PTR [edi]
  402a71:	(bad)  [edx+0x10]
  402a74:	popa   
  402a75:	inc    esi
  402a76:	pop    ebx
  402a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a78:	add    edi,DWORD PTR [esi]
  402a7a:	jae    0x402a67
  402a7c:	mov    WORD PTR [edx+0x4b3b6982],ds
  402a82:	imul   eax,DWORD PTR [eax],0xffffff95
  402a85:	and    al,0xe7
  402a87:	and    esi,DWORD PTR [ecx+eax*4]
  402a8a:	push   edi
  402a8b:	lods   al,BYTE PTR ds:[esi]
  402a8c:	xor    eax,DWORD PTR [ebx+ecx*2]
  402a8f:	ds dec ebp
  402a91:	lods   eax,DWORD PTR ds:[esi]
  402a92:	mov    eax,ecx
  402a94:	push   cs
  402a95:	sub    BYTE PTR [ebp-0x46c18433],cl
  402a9b:	mov    esp,0x20bdd9cf
  402aa0:	call   0xb9262032
  402aa5:	push   esi
  402aa6:	cwde   
  402aa7:	pop    esp
  402aa8:	and    BYTE PTR [ecx+0x624775ee],dh
  402aae:	ja     0x402a88
  402ab0:	mov    DWORD PTR [edi],esp
  402ab2:	add    al,0x2d
  402ab4:	mov    eax,DWORD PTR [edx+edx*1]
  402ab7:	leave  
  402ab8:	xchg   esp,eax
  402ab9:	mov    edx,0x88c9e7ac
  402abe:	add    edi,ecx
  402ac0:	push   ds
  402ac1:	pop    ecx
  402ac2:	sub    ebx,edx
  402ac4:	push   es
  402ac5:	mov    eax,0xfea4cf91
  402aca:	leave  
  402acb:	sub    dl,BYTE PTR [edx]
  402acd:	sahf   
  402ace:	ds mov al,0xf
  402ad1:	mov    ?,WORD PTR [ecx-0x4c]
  402ad4:	ins    DWORD PTR es:[edi],dx
  402ad5:	bound  eax,QWORD PTR [esi-0x4c]
  402ad8:	xor    al,0xa6
  402ada:	pop    esp
  402adb:	xor    DWORD PTR [ebx-0x5a],edi
  402ade:	cwde   
  402adf:	ret    0x3edb
  402ae2:	scas   al,BYTE PTR es:[edi]
  402ae3:	pop    eax
  402ae4:	in     eax,dx
  402ae5:	pop    esp
  402ae6:	(bad)  
  402ae7:	les    ebx,FWORD PTR [ecx+0x7f]
  402aea:	or     BYTE PTR [esi],ah
  402aec:	add    BYTE PTR [eax],0xe4
  402aef:	sbb    DWORD PTR ds:0x77a8bd66,0x12
  402af6:	inc    eax
  402af7:	jle    0x402b71
  402af9:	mov    edx,esi
  402afb:	das    
  402afc:	ss cmp eax,0xa7b43c50
  402b02:	xor    eax,0xf0abbc05
  402b07:	(bad)  
  402b08:	clc    
  402b09:	stos   DWORD PTR es:[edi],eax
  402b0a:	push   ds
  402b0b:	xchg   BYTE PTR [edi-0x59],al
  402b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b0f:	jne    0x402b25
  402b11:	sbb    eax,0xe981e42a
  402b16:	adc    al,0xd3
  402b18:	les    esp,FWORD PTR [ecx-0x19e929d4]
  402b1e:	or     BYTE PTR [ecx-0x3a47a3e2],dl
  402b24:	not    BYTE PTR [esi]
  402b26:	inc    edi
  402b27:	cmp    al,0xd0
  402b29:	leave  
  402b2a:	cmp    DWORD PTR [ebx],edx
  402b2c:	add    al,0xd1
  402b2e:	jae    0x402b5b
  402b30:	jg     0x402b44
  402b32:	lds    ecx,FWORD PTR [esi+0x63]
  402b35:	xchg   ebp,eax
  402b36:	out    0xf9,al
  402b38:	ret    0xaa4b
  402b3b:	xchg   esp,eax
  402b3c:	add    eax,0x96fd387
  402b41:	xchg   esi,eax
  402b42:	aad    0xe9
  402b44:	add    al,0x70
  402b46:	dec    esi
  402b47:	js     0x402b59
  402b49:	(bad)  
  402b4a:	push   esp
  402b4b:	popf   
  402b4c:	(bad)  
  402b4d:	pop    ecx
  402b4e:	leave  
  402b4f:	mov    ds:0xd15277f7,al
  402b54:	lahf   
  402b55:	pop    ss
  402b56:	fistp  WORD PTR [ebx]
  402b58:	jle    0x402bcd
  402b5a:	inc    edi
  402b5b:	fwait
  402b5c:	xchg   edi,eax
  402b5d:	push   ds
  402b5e:	cmp    DWORD PTR [edx-0x6a],0xe2e705b4
  402b65:	adc    DWORD PTR [ebx],0xffffffa9
  402b68:	repnz sub BYTE PTR [esi],bl
  402b6b:	pop    ebp
  402b6c:	es or  al,0x4d
  402b6f:	adc    ebx,DWORD PTR [edx+0x17]
  402b72:	mov    ah,BYTE PTR [ecx*8-0x27018b65]
  402b79:	mov    ebp,0x90f0225
  402b7e:	and    al,BYTE PTR [edx-0x6f9576c1]
  402b84:	sbb    cl,BYTE PTR [edx]
  402b86:	push   eax
  402b87:	adc    cl,BYTE PTR [edi]
  402b89:	ds aad 0xc1
  402b8c:	test   DWORD PTR [edi],ebp
  402b8e:	mov    cl,0xc9
  402b90:	mov    esp,0x89409652
  402b95:	xor    BYTE PTR [edi-0x3f],ah
  402b98:	jno    0x402b56
  402b9a:	or     dl,BYTE PTR [esi-0x322a8ae]
  402ba0:	adc    edx,DWORD PTR ss:[ebx+ebx*8+0x108ab565]
  402ba8:	mov    bh,0xbd
  402baa:	or     ch,BYTE PTR [ebx]
  402bac:	cmp    al,0x18
  402bae:	iret   
  402baf:	xchg   ecx,eax
  402bb0:	sub    BYTE PTR [esp+ecx*1-0x61090dd0],dl
  402bb7:	call   0x46159e6d
  402bbc:	pop    eax
  402bbd:	xor    al,0x70
  402bbf:	stc    
  402bc0:	xor    eax,0x787c1b0d
  402bc5:	add    dl,BYTE PTR [esi+edx*1]
  402bc8:	cs xor eax,0xacba8522
  402bce:	rcl    BYTE PTR [ebx-0x2c9484a9],1
  402bd4:	or     al,0x36
  402bd6:	shl    ebp,1
  402bd8:	xchg   edx,eax
  402bd9:	imul   esi,DWORD PTR ds:0xa9eb2cda,0xb2671a41
  402be3:	sbb    eax,0xd2d0ef1e
  402be8:	jl     0x402c1e
  402bea:	mov    bl,0xdc
  402bec:	pop    ds
  402bed:	ins    DWORD PTR es:[edi],dx
  402bee:	lods   eax,DWORD PTR ds:[esi]
  402bef:	fnstsw WORD PTR ds:0xf0d7d34f
  402bf5:	pop    ebp
  402bf6:	and    al,0xbe
  402bf8:	mov    eax,0xa41ad9a0
  402bfd:	add    al,0xe9
  402bff:	xchg   edx,eax
  402c00:	outs   dx,DWORD PTR ds:[esi]
  402c01:	jl     0x402c7b
  402c03:	push   0x91addfd6
  402c08:	inc    ebp
  402c09:	pop    esi
  402c0a:	in     al,0x99
  402c0c:	push   0xb759a666
  402c11:	outs   dx,BYTE PTR ds:[esi]
  402c12:	fistp  WORD PTR [ebp-0x57a29de0]
  402c18:	mov    bh,0x98
  402c1a:	and    ebp,ebp
  402c1c:	daa    
  402c1d:	jbe    0x402c73
  402c1f:	in     eax,dx
  402c20:	fistp  QWORD PTR [ebp+0x32bea7f4]
  402c26:	mov    al,0xc1
  402c28:	inc    edi
  402c29:	repz (bad) 
  402c2b:	or     esp,DWORD PTR [ebx+0x38322975]
  402c31:	dec    ebx
  402c32:	adc    BYTE PTR [edi-0x36],dh
  402c35:	mov    bh,0x2a
  402c37:	cwde   
  402c38:	xor    eax,0x58bbabf8
  402c3d:	test   BYTE PTR [eax+0x31],ch
  402c40:	int    0x4f
  402c42:	rcl    BYTE PTR [edi+0x53c26aa1],1
  402c48:	adc    edx,DWORD PTR [eax-0x7059bc47]
  402c4e:	add    DWORD PTR [ecx],edx
  402c50:	xchg   ebp,eax
  402c51:	jb     0x402c3e
  402c53:	(bad)  
  402c54:	xlat   BYTE PTR ds:[ebx]
  402c55:	cld    
  402c56:	xor    DWORD PTR [ecx],eax
  402c58:	xchg   ecx,eax
  402c59:	outs   dx,BYTE PTR ds:[esi]
  402c5a:	out    dx,al
  402c5b:	xchg   ebx,eax
  402c5c:	mov    ds:0x92e6f8d6,eax
  402c61:	leave  
  402c62:	repz out 0xb8,eax
  402c65:	imul   ebx,edi,0xb74f51f3
  402c6b:	xor    DWORD PTR [edi],esp
  402c6d:	shl    DWORD PTR [ecx+eax*8-0x6d],0x44
  402c72:	mul    BYTE PTR ds:0x8d484ebb
  402c78:	inc    BYTE PTR [ebp+esi*8+0x27738e1]
  402c7f:	shl    ecx,1
  402c81:	dec    esp
  402c82:	lds    edi,FWORD PTR [eax+0x63]
  402c85:	or     dh,BYTE PTR [edx-0x19]
  402c88:	test   DWORD PTR [eax-0x3f],0xf5d2ad60
  402c8f:	or     eax,0xf0631b5f
  402c94:	cld    
  402c95:	mov    ecx,0x2ab0d8ad
  402c9a:	jp     0x402cf8
  402c9c:	mov    DWORD PTR [ebx],ecx
  402c9e:	push   cs
  402c9f:	add    al,ah
  402ca1:	div    DWORD PTR [ecx-0x55835a8d]
  402ca7:	mov    dl,0x3
  402ca9:	xchg   ebx,eax
  402caa:	sbb    dh,al
  402cac:	dec    ebp
  402cad:	pop    esi
  402cae:	xchg   esp,eax
  402caf:	jno    0x402d01
  402cb1:	push   cs
  402cb2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402cb4:	mov    al,ds:0x576bc539
  402cb9:	xchg   ecx,eax
  402cba:	nop
  402cbb:	stos   DWORD PTR es:[edi],eax
  402cbc:	jo     0x402c95
  402cbe:	shl    DWORD PTR [ebx],cl
  402cc0:	or     ecx,esi
  402cc2:	mov    ds:0xe6d60152,eax
  402cc7:	dec    ebx
  402cc8:	jno    0x402d37
  402cca:	jnp    0x402c8a
  402ccc:	cli    
  402ccd:	(bad)  
  402cce:	sti    
  402ccf:	push   ebx
  402cd0:	icebp  
  402cd1:	cmp    ch,dh
  402cd3:	add    ecx,esi
  402cd5:	std    
  402cd6:	jg     0x402c72
  402cd8:	push   ss
  402cd9:	fdiv   QWORD PTR [edi-0xa]
  402cdc:	je     0x402cfa
  402cde:	or     eax,0x51d82fd
  402ce3:	push   esi
  402ce4:	dec    esi
  402ce5:	or     BYTE PTR [esp+ebx*4],bh
  402ce8:	pop    edx
  402ce9:	xor    esi,DWORD PTR [esi+0x6c40b8a3]
  402cef:	imul   ecx,edx,0xffffffff
  402cf2:	jo     0x402d22
  402cf4:	jmp    0x17dbc173
  402cf9:	push   esp
  402cfa:	out    dx,eax
  402cfb:	iret   
  402cfc:	adc    edi,ebp
  402cfe:	inc    eax
  402cff:	pushf  
  402d00:	adc    al,0xeb
  402d02:	and    esp,0xffffffb3
  402d05:	mov    esp,0xf5b57f2
  402d0a:	mov    al,ds:0x65c558bc
  402d0f:	(bad)  
  402d10:	test   BYTE PTR [eax],0x6
  402d13:	jecxz  0x402d1e
  402d15:	mov    bl,0x53
  402d17:	or     al,0x2f
  402d19:	mov    bl,BYTE PTR [ecx+0xd]
  402d1c:	arpl   WORD PTR [ebp-0x59],di
  402d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d20:	add    edx,DWORD PTR [edx+0x428dcf3c]
  402d26:	jne    0x402d27
  402d28:	push   0xffffffda
  402d2a:	pop    ebp
  402d2b:	addr16 (bad) 
  402d2d:	hlt    
  402d2e:	fmul   DWORD PTR [esi]
  402d30:	cmp    DWORD PTR [edi+0x7d0d0d74],eax
  402d36:	sub    edx,0xffffffd2
  402d39:	outs   dx,DWORD PTR ds:[esi]
  402d3a:	imul   ebx,DWORD PTR [ecx+0x3c6d2558],0x18
  402d41:	mov    bl,0xd3
  402d43:	mov    ecx,gs
  402d45:	pop    ecx
  402d46:	int3   
  402d47:	ret    
  402d48:	or     eax,0x9ca0fffb
  402d4d:	(bad)  
  402d4e:	shl    BYTE PTR [ebx+ecx*4-0x45],1
  402d52:	jae    0x402dc9
  402d54:	rcr    DWORD PTR [ebx],cl
  402d56:	sbb    ah,BYTE PTR [esi]
  402d58:	xchg   ecx,eax
  402d59:	outs   dx,BYTE PTR ds:[esi]
  402d5a:	lahf   
  402d5b:	sbb    BYTE PTR ss:[ebx*8-0xeaba52f],dh
  402d63:	add    eax,0x65564333
  402d69:	ins    DWORD PTR es:[edi],dx
  402d6a:	sbb    BYTE PTR [esi],bh
  402d6c:	ja     0x402dd4
  402d6e:	in     al,0x15
  402d70:	cmp    dh,0xdd
  402d73:	mov    esi,0x32758320
  402d78:	jns    0x402d6a
  402d7a:	sbb    ecx,DWORD PTR cs:[edi+0x23e5eb89]
  402d81:	or     bh,ch
  402d83:	cmp    al,0x97
  402d85:	inc    edx
  402d86:	js     0x402dcc
  402d88:	fsincos 
  402d8a:	mov    ah,0xbd
  402d8c:	sub    esp,ebx
  402d8e:	ins    DWORD PTR es:[edi],dx
  402d8f:	test   eax,0xb9b5e6bf
  402d94:	js     0x402d67
  402d96:	xor    esi,0xffffffd6
  402d99:	test   DWORD PTR [esi+0x15],0xe7ca2df4
  402da0:	mov    ds:0x3a18d0c7,al
  402da5:	xor    eax,0xb547d0c
  402daa:	call   0x620c:0xf9c152a2
  402db1:	dec    ebx
  402db2:	inc    DWORD PTR [eax]
  402db4:	mov    ecx,0x8df295ed
  402db9:	aaa    
  402dba:	fstp   DWORD PTR gs:[edi+0x7d]
  402dbe:	ss xchg esp,eax
  402dc0:	daa    
  402dc1:	push   DWORD PTR [ebx]
  402dc3:	daa    
  402dc4:	add    al,0x86
  402dc6:	mov    al,cl
  402dc8:	push   es
  402dc9:	xchg   edi,eax
  402dca:	cwde   
  402dcb:	xor    esp,0xffffffde
  402dce:	xchg   edi,eax
  402dcf:	mov    eax,ds:0xadd55d3d
  402dd4:	add    ah,bl
  402dd6:	add    DWORD PTR [ebp+0x52],esi
  402dd9:	push   0x28
  402ddb:	dec    ebx
  402ddc:	cdq    
  402ddd:	aas    
  402dde:	fidiv  WORD PTR [edx]
  402de0:	test   al,0x54
  402de2:	ins    BYTE PTR es:[edi],dx
  402de3:	jns    0x402dc8
  402de5:	sub    al,0xca
  402de7:	sbb    BYTE PTR [esi-0x11],0xb8
  402deb:	adc    al,0xb3
  402ded:	jnp    0x402ded
  402def:	or     eax,0x636fe5dd
  402df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df5:	jmp    0x28a301ad
  402dfa:	and    ah,BYTE PTR ds:0x84981281
  402e00:	add    ebx,ebp
  402e02:	scas   eax,DWORD PTR es:[edi]
  402e03:	add    al,BYTE PTR [edi]
  402e05:	sbb    edi,esp
  402e07:	mov    ds:0x9325bab7,al
  402e0c:	xchg   BYTE PTR [edx-0x64],dl
  402e0f:	jecxz  0x402db4
  402e11:	or     eax,0xc707f186
  402e16:	jl     0x402dd0
  402e18:	cwde   
  402e19:	add    BYTE PTR [ebp-0x178629a0],ch
  402e1f:	lods   al,BYTE PTR ds:[esi]
  402e20:	shl    edx,0x24
  402e23:	cwde   
  402e24:	es pop edx
  402e26:	dec    esp
  402e27:	scas   eax,DWORD PTR es:[edi]
  402e28:	pop    ebx
  402e29:	(bad)  
  402e2a:	mov    WORD PTR [ebp-0xb0630ff],cs
  402e30:	aad    0xfa
  402e32:	das    
  402e33:	int3   
  402e34:	inc    edx
  402e35:	and    al,0x9c
  402e37:	out    dx,al
  402e38:	jb     0x402de3
  402e3a:	sub    cl,0x1a
  402e3d:	(bad)  
  402e3e:	icebp  
  402e3f:	mov    dh,0xcd
  402e41:	xchg   esp,eax
  402e42:	xor    ah,BYTE PTR ds:0xe493b808
  402e48:	inc    ebx
  402e49:	dec    esi
  402e4a:	mov    eax,0x6b0d04ab
  402e4f:	or     esp,ebx
  402e51:	dec    ecx
  402e52:	or     eax,0x6591000a
  402e57:	fidivr WORD PTR [ebp-0x46]
  402e5a:	pop    ebx
  402e5b:	mov    bl,0x22
  402e5d:	pop    ecx
  402e5e:	daa    
  402e5f:	xchg   esp,eax
  402e60:	sub    BYTE PTR [ecx-0x2cd54d21],al
  402e66:	inc    esi
  402e67:	jge    0x402e4f
  402e69:	fwait
  402e6a:	dec    esp
  402e6b:	int    0xbd
  402e6d:	mov    ah,0xbb
  402e6f:	hlt    
  402e70:	push   ebp
  402e71:	xchg   ebx,ebp
  402e73:	mov    ah,0x23
  402e75:	sub    esp,DWORD PTR [ebx+0x67]
  402e78:	rcl    DWORD PTR [ebx],cl
  402e7a:	cmp    BYTE PTR [eax+0x1d82ec5e],al
  402e80:	sbb    al,0x7f
  402e82:	in     al,0x55
  402e84:	jo     0x402f03
  402e86:	popa   
  402e87:	and    BYTE PTR [ebx+edi*2],cl
  402e8a:	imul   edi,DWORD PTR [ecx-0x17],0xd297f324
  402e91:	xchg   DWORD PTR [esi+0x25],ebx
  402e94:	in     eax,0xb6
  402e96:	xor    ecx,DWORD PTR [edi+ebp*1+0x0]
  402e9a:	jmp    0x321a:0x620fe4c3
  402ea1:	sti    
  402ea2:	push   esp
  402ea3:	hlt    
  402ea4:	jmp    0x6d87:0x3ea81cb3
  402eab:	cmp    edi,DWORD PTR [eax-0x3c8f89c2]
  402eb1:	mov    ebx,0x33c11de9
  402eb6:	call   ecx
  402eb8:	rcr    esi,cl
  402eba:	test   DWORD PTR [eax+0x153769b7],ebx
  402ec0:	aaa    
  402ec1:	push   0x12
  402ec3:	cmp    DWORD PTR [esi+0x2],ecx
  402ec6:	mov    ah,BYTE PTR [edi]
  402ec8:	jnp    0x402edb
  402eca:	pushf  
  402ecb:	imul   DWORD PTR [edi+0x1ea42d82]
  402ed1:	and    al,0xb2
  402ed3:	sub    bl,dl
  402ed5:	nop
  402ed6:	dec    esp
  402ed7:	enter  0xfa86,0x98
  402edb:	mov    esp,0xe18c640e
  402ee0:	stos   BYTE PTR es:[edi],al
  402ee1:	pusha  
  402ee2:	jg     0x402f39
  402ee4:	adc    al,0xa9
  402ee6:	adc    al,BYTE PTR [edx+0x1e]
  402ee9:	stos   DWORD PTR es:[edi],eax
  402eea:	sti    
  402eeb:	pop    eax
  402eec:	sub    al,0x7e
  402eee:	ja     0x402eaf
  402ef0:	sub    eax,0x536ccb7c
  402ef5:	fnsave [edi-0x2320d709]
  402efb:	jmp    0xd1d6aa5f
  402f00:	dec    esp
  402f01:	adc    eax,0xd3afa612
  402f06:	dec    edi
  402f07:	loop   0x402ef8
  402f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f0a:	ins    BYTE PTR es:[edi],dx
  402f0b:	in     eax,dx
  402f0c:	div    BYTE PTR [eax-0x37]
  402f0f:	imul   DWORD PTR [edi+0x5e]
  402f12:	mov    esi,0xed20f51e
  402f17:	ss addr16 jno 0x402f3d
  402f1b:	hlt    
  402f1c:	sbb    al,0x2
  402f1e:	sbb    bl,BYTE PTR [ecx-0x13]
  402f21:	repz xor BYTE PTR [eax],bh
  402f24:	imul   edx,DWORD PTR [ebx+edi*4+0x47],0xd
  402f29:	inc    esp
  402f2a:	out    0x91,eax
  402f2c:	adc    BYTE PTR [edx],ch
  402f2e:	ror    ch,cl
  402f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f31:	push   ecx
  402f32:	sub    BYTE PTR [eax-0x6b],ch
  402f35:	(bad)
  402f39:	inc    esp
  402f3a:	jae    0x402ec5
  402f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f3d:	cwde   
  402f3e:	shr    esi,cl
  402f40:	jo     0x402f99
  402f42:	aad    0xfd
  402f44:	xor    ch,BYTE PTR ds:0x23a2f9b4
  402f4a:	rcr    DWORD PTR [esi],1
  402f4c:	inc    ecx
  402f4d:	mov    cl,BYTE PTR [ecx-0x8]
  402f50:	ins    BYTE PTR es:[edi],dx
  402f51:	inc    edi
  402f52:	pop    es
  402f53:	stos   DWORD PTR es:[edi],eax
  402f54:	mov    WORD PTR [edi+0x43],es
  402f57:	or     BYTE PTR [edi-0x3956f408],ah
  402f5d:	lea    edi,[ecx-0x2a]
  402f60:	ret    0xb7f2
  402f63:	jg     0x402fe0
  402f65:	inc    esi
  402f66:	xor    DWORD PTR [eax-0x3f],eax
  402f69:	imul   ecx,DWORD PTR [edi],0xdf08e4c8
  402f6f:	mov    cl,0x1f
  402f71:	add    al,0x33
  402f73:	mov    ecx,0x7b41a09b
  402f78:	and    eax,0x2a9f4042
  402f7d:	imul   ebx,DWORD PTR [ecx+0xd],0x3939284d
  402f84:	enter  0xc242,0x5e
  402f88:	repnz ror DWORD PTR [edx+0x63],1
  402f8c:	and    esi,DWORD PTR [esi]
  402f8e:	iret   
  402f8f:	pushf  
  402f90:	int    0xc4
  402f92:	mov    ecx,0xb8949115
  402f97:	mov    eax,0xd60e4738
  402f9c:	jbe    0x402ffc
  402f9e:	mov    al,0x95
  402fa0:	pop    bx
  402fa2:	mov    ch,0xb9
  402fa4:	push   eax
  402fa5:	pop    ebx
  402fa6:	dec    edi
  402fa7:	sbb    DWORD PTR [eax],0x57f6af14
  402fad:	pop    ds
  402fae:	or     bl,BYTE PTR [ecx+ebx*4+0x12]
  402fb2:	frstor [edx]
  402fb4:	mov    al,0xc4
  402fb6:	jo     0x403008
  402fb8:	clc    
  402fb9:	lds    edx,FWORD PTR [ebx*2+0x2fe71431]
  402fc0:	add    cl,BYTE PTR [edx]
  402fc2:	xchg   esp,eax
  402fc3:	ja     0x403018
  402fc5:	xor    al,0xed
  402fc7:	ds cmp eax,0xfba1e2a2
  402fcd:	push   edx
  402fce:	sbb    esi,DWORD PTR [esi]
  402fd0:	jno    0x403048
  402fd2:	jle    0x402fd4
  402fd4:	sub    ebx,esi
  402fd6:	jmp    0x983378e4
  402fdb:	aam    0xde
  402fdd:	push   cs
  402fde:	add    dl,BYTE PTR [eax-0x41331e86]
  402fe4:	dec    ebx
  402fe5:	xchg   al,dh
  402fe7:	dec    eax
  402fe8:	sub    eax,0xbd763116
  402fed:	shl    edx,0xd5
  402ff0:	js     0x402f99
  402ff2:	imul   esi,DWORD PTR [ebp+0x21e12d0b],0x7181c61d
  402ffc:	sub    bl,BYTE PTR [ebp-0xa96240c]
  403002:	inc    ecx
  403003:	push   0x79
  403005:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403007:	push   edx
  403008:	push   ebp
  403009:	xlat   BYTE PTR ds:[ebx]
  40300a:	mov    cl,0xc4
  40300c:	pop    ds
  40300d:	aam    0x6f
  40300f:	fisttp QWORD PTR [edi]
  403011:	dec    DWORD PTR [edx]
  403013:	bound  esi,QWORD PTR [edi+0x6d]
  403016:	jp     0x40306a
  403018:	pop    esp
  403019:	inc    esp
  40301a:	or     eax,0x751a49ef
  40301f:	push   esi
  403020:	aaa    
  403021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403022:	outs   dx,DWORD PTR ds:[esi]
  403023:	pop    ds
  403024:	or     cl,BYTE PTR [ecx-0x30]
  403027:	out    0xc8,eax
  403029:	and    DWORD PTR [ebp-0x16],esi
  40302c:	pop    esi
  40302d:	mov    BYTE PTR [esi],0xf4
  403030:	jbe    0x403068
  403032:	jb     0x403076
  403034:	stos   BYTE PTR es:[edi],al
  403035:	and    bl,BYTE PTR [edx+0x508850bd]
  40303b:	pusha  
  40303c:	jae    0x403000
  40303e:	je     0x403044
  403040:	sbb    edi,DWORD PTR [eax-0x68]
  403043:	push   ebx
  403044:	icebp  
  403045:	push   cs
  403046:	imul   edx,DWORD PTR [ecx],0x17
  403049:	mov    bl,0x4c
  40304b:	push   esi
  40304c:	adc    BYTE PTR [ecx],cl
  40304e:	loop   0x402fe9
  403050:	in     eax,0x3a
  403052:	or     al,0x31
  403054:	aam    0xe9
  403056:	jne    0x40307b
  403058:	sbb    ch,BYTE PTR [esi+edi*1-0x5d]
  40305c:	and    al,0x78
  40305e:	sbb    ebx,DWORD PTR [edi-0xc]
  403061:	mov    esi,0x6d36cae4
  403066:	outs   dx,BYTE PTR ds:[esi]
  403067:	mov    eax,fs
  403069:	fs xor ah,dh
  40306c:	cs (bad) 
  40306f:	lea    eax,[edx]
  403071:	add    al,0xae
  403073:	outs   dx,DWORD PTR ds:[esi]
  403074:	mov    eax,ds:0xc47e1993
  403079:	and    DWORD PTR [eax-0x36],eax
  40307c:	into   
  40307d:	mov    ecx,0x93db491b
  403082:	and    dl,ch
  403084:	xchg   ecx,eax
  403085:	bound  esi,QWORD PTR [eax-0x2]
  403088:	xor    ecx,ebx
  40308a:	inc    ecx
  40308b:	retf   
  40308c:	push   ebx
  40308d:	inc    edi
  40308e:	dec    ecx
  40308f:	and    eax,0xaf31c2a0
  403094:	mov    ah,0x8a
  403096:	lea    ebx,[ebx]
  403098:	jp     0x403088
  40309a:	cmc    
  40309b:	jne    0x4030de
  40309d:	in     eax,dx
  40309e:	mov    ecx,ebp
  4030a0:	das    
  4030a1:	ins    BYTE PTR es:[edi],dx
  4030a2:	jecxz  0x4030ec
  4030a4:	xchg   edx,eax
  4030a5:	retf   
  4030a6:	outs   dx,BYTE PTR ds:[esi]
  4030a7:	mov    esp,edx
  4030a9:	pop    edi
  4030aa:	scas   eax,DWORD PTR es:[edi]
  4030ab:	push   ss
  4030ac:	xlat   BYTE PTR ds:[ebx]
  4030ad:	scas   al,BYTE PTR es:[edi]
  4030ae:	das    
  4030af:	gs (bad) 
  4030b1:	ins    DWORD PTR es:[edi],dx
  4030b2:	mov    ah,0xe1
  4030b4:	adc    eax,esi
  4030b6:	sbb    al,0x6
  4030b8:	mov    bl,0xad
  4030ba:	mov    bh,0x19
  4030bc:	outs   dx,BYTE PTR ds:[esi]
  4030bd:	and    ah,BYTE PTR es:[eax+0x7b]
  4030c1:	and    al,0x27
  4030c3:	in     al,dx
  4030c4:	test   al,0xf8
  4030c6:	addr16 pop ebp
  4030c8:	lods   eax,DWORD PTR ds:[esi]
  4030c9:	call   DWORD PTR [ebp-0x3fd8771]
  4030cf:	add    eax,0x6050a878
  4030d4:	sub    DWORD PTR [ebx],esi
  4030d6:	stc    
  4030d7:	scas   al,BYTE PTR es:[edi]
  4030d8:	jmp    0x4030e5
  4030da:	cmp    DWORD PTR [edi+0x3221275c],ebp
  4030e0:	(bad)  
  4030e1:	stos   DWORD PTR es:[edi],eax
  4030e2:	bound  ebp,QWORD PTR [edi+edx*1]
  4030e5:	cmp    dl,BYTE PTR [edx-0x5381b1a5]
  4030eb:	sbb    dh,BYTE PTR [ebx]
  4030ed:	xchg   ebx,eax
  4030ee:	sbb    al,0x69
  4030f0:	adc    al,0xc2
  4030f2:	fsub   st(0),st
  4030f4:	jns    0x4030c0
  4030f6:	scas   al,BYTE PTR es:[edi]
  4030f7:	std    
  4030f8:	mov    BYTE PTR [edi+eax*8+0x71],0x45
  4030fd:	mov    ecx,0xb71d2663
  403102:	mov    dh,0x90
  403104:	lock popf 
  403106:	add    ah,BYTE PTR [ecx-0x7af71a5e]
  40310c:	out    0xc,al
  40310e:	scas   al,BYTE PTR es:[edi]
  40310f:	std    
  403110:	in     eax,0xe6
  403112:	test   DWORD PTR [edi+ebx*2],0xac989d67
  403119:	add    eax,0x84e1e243
  40311e:	inc    edi
  40311f:	sar    bl,1
  403121:	ds ins BYTE PTR es:[edi],dx
  403123:	(bad)  
  403124:	repz cmc 
  403126:	and    BYTE PTR [esi-0x77],dh
  403129:	mov    eax,ds:0x581852a7
  40312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312f:	cli    
  403130:	jnp    0x40312a
  403132:	xor    DWORD PTR [ebp-0x38],ebp
  403135:	dec    eax
  403136:	adc    ch,bh
  403138:	add    esp,edx
  40313a:	test   al,0x61
  40313c:	adc    DWORD PTR [ebx+esi*1-0x3efc1603],esi
  403143:	push   ebx
  403144:	clc    
  403145:	jge    0x4030db
  403147:	xchg   ebx,eax
  403148:	(bad)  
  403149:	ss hlt 
  40314b:	les    edx,FWORD PTR [eax]
  40314d:	aad    0xb9
  40314f:	pop    esi
  403150:	fsubr  DWORD PTR [eax+ebp*8-0x42c068f0]
  403157:	std    
  403158:	xor    dh,cl
  40315a:	sbb    bl,bl
  40315c:	icebp  
  40315d:	in     al,dx
  40315e:	dec    esi
  40315f:	popa   
  403160:	outs   dx,BYTE PTR ds:[esi]
  403161:	mov    dl,0x5c
  403163:	fnstenv [edx-0x36]
  403166:	in     al,dx
  403167:	stc    
  403168:	push   0x2ebcff0c
  40316d:	cmc    
  40316e:	and    BYTE PTR [ecx+ecx*4],0xd6
  403172:	ins    DWORD PTR es:[edi],dx
  403173:	sahf   
  403174:	mov    cl,0x8a
  403176:	cmp    edx,DWORD PTR [ebx]
  403178:	fdivr  DWORD PTR [edx-0x71]
  40317b:	adc    ah,BYTE PTR [ecx+0x27a22180]
  403181:	adc    ebx,esp
  403183:	mov    edx,0x4dddcef
  403188:	shl    BYTE PTR [ecx],0xa8
  40318b:	cwde   
  40318c:	mov    gs,WORD PTR [ebx]
  40318e:	xchg   edi,eax
  40318f:	daa    
  403190:	dec    edx
  403191:	push   ds
  403192:	arpl   WORD PTR [ecx-0x7a],di
  403195:	dec    ecx
  403196:	mov    BYTE PTR [ebx+ebx*2-0x48153549],bh
  40319d:	cmp    al,0x69
  40319f:	gs dec esp
  4031a1:	push   edi
  4031a2:	retf   
  4031a3:	stos   DWORD PTR es:[edi],eax
  4031a4:	lods   eax,DWORD PTR ds:[esi]
  4031a5:	and    cl,ah
  4031a7:	aaa    
  4031a8:	cmp    al,0xf9
  4031aa:	xchg   ebx,eax
  4031ab:	mov    WORD PTR [edi+0x351ed443],ss
  4031b1:	iret   
  4031b2:	inc    esi
  4031b3:	add    eax,DWORD PTR [esi]
  4031b5:	dec    edx
  4031b6:	inc    edi
  4031b7:	in     eax,0xf5
  4031b9:	stc    
  4031ba:	das    
  4031bb:	and    BYTE PTR [esi-0x2ff384f6],al
  4031c1:	dec    esi
  4031c2:	add    al,0x65
  4031c4:	xor    DWORD PTR [ecx-0x74],0xffffffa5
  4031c8:	add    eax,0x3f0eb7c2
  4031cd:	jo     0x403213
  4031cf:	(bad)  
  4031d0:	mov    bl,0x13
  4031d2:	div    bl
  4031d4:	test   eax,0xea64da74
  4031d9:	rcr    DWORD PTR [edi-0x24],0xfa
  4031dd:	add    al,0xaa
  4031df:	inc    eax
  4031e0:	jp     0x403239
  4031e2:	(bad)  
  4031e3:	loopne 0x4031e5
  4031e5:	popf   
  4031e6:	mov    dh,0x75
  4031e8:	mov    al,0x9
  4031ea:	xchg   DWORD PTR [edx],ecx
  4031ec:	or     eax,0x8d02c54b
  4031f1:	ror    BYTE PTR [ecx+edx*4],1
  4031f4:	cwde   
  4031f5:	test   al,0x93
  4031f7:	ins    DWORD PTR es:[edi],dx
  4031f8:	aaa    
  4031f9:	out    0x6d,al
  4031fb:	inc    eax
  4031fc:	(bad)  
  4031fd:	mul    eax
  4031ff:	addr16 call 0xfef4:0x7964a1da
  403207:	jp     0x403285
  403209:	(bad)  
  40320a:	push   ds
  40320b:	xor    eax,0xbd461707
  403210:	popf   
  403211:	popa   
  403212:	jo     0x40324f
  403214:	adc    al,0xcc
  403216:	int3   
  403217:	push   esp
  403218:	adc    DWORD PTR [esi+0x44],0xd45d5990
  40321f:	(bad)  
  403220:	sbb    dl,BYTE PTR [edi-0x77eaceb4]
  403226:	mov    dl,0x5d
  403228:	and    bh,BYTE PTR [ebx-0x43]
  40322b:	push   edi
  40322c:	es pop esp
  40322e:	lds    esi,FWORD PTR [edi+0x47c62bfa]
  403234:	repz mov al,ch
  403237:	lahf   
  403238:	jo     0x4031da
  40323a:	adc    DWORD PTR [edi+0x285f041a],edi
  403240:	nop
  403241:	out    dx,eax
  403242:	push   ebp
  403243:	xchg   ecx,eax
  403244:	popa   
  403245:	jecxz  0x403277
  403247:	(bad)  
  40324a:	push   ebx
  40324b:	jb     0x4031f9
  40324d:	dec    esp
  40324e:	xchg   dl,dh
  403250:	push   eax
  403251:	dec    edi
  403252:	jp     0x4031dd
  403254:	into   
  403255:	pop    eax
  403256:	push   esp
  403257:	outs   dx,DWORD PTR ds:[esi]
  403258:	jge    0x4032cc
  40325a:	hlt    
  40325b:	es pop edi
  40325d:	sub    edx,DWORD PTR cs:[ebx+0x33]
  403261:	aas    
  403262:	ret    0x4bf6
  403265:	mov    BYTE PTR [esi+0x67c980b],dh
  40326b:	test   DWORD PTR [edi],edi
  40326d:	jl     0x403200
  40326f:	popf   
  403270:	dec    esp
  403271:	shr    BYTE PTR [si],1
  403274:	pop    ebp
  403275:	shr    BYTE PTR [edi+ebx*8+0x27f4a772],cl
  40327c:	cmp    DWORD PTR [ebp+0x68],eax
  40327f:	sub    BYTE PTR [esi-0x16fe6eb7],0x3a
  403286:	pop    ecx
  403287:	sub    ecx,0xffffff8f
  40328a:	adc    BYTE PTR [edi+ebp*2+0x7fe26563],bh
  403291:	jg     0x4032f1
  403293:	add    edi,DWORD PTR [edi+0x41]
  403296:	xor    ebp,ecx
  403298:	sub    bl,BYTE PTR [esi+ecx*8+0x6eac65e7]
  40329f:	push   ebx
  4032a0:	dec    esi
  4032a1:	xchg   ebp,eax
  4032a2:	xchg   edi,eax
  4032a3:	retf   0xbfb7
  4032a6:	cmp    esi,DWORD PTR [ecx+ecx*4+0x78]
  4032aa:	aam    0x82
  4032ac:	(bad)  
  4032ad:	mov    ds:0x84a52e64,al
  4032b2:	sbb    BYTE PTR ds:[esp+edi*2],bl
  4032b6:	sbb    dh,bh
  4032b8:	out    0x89,al
  4032ba:	adc    al,0x49
  4032bc:	sbb    al,BYTE PTR [ebx-0x4d]
  4032bf:	xchg   esi,eax
  4032c0:	(bad)  
  4032c1:	stos   BYTE PTR es:[edi],al
  4032c2:	fsubr  DWORD PTR [ebx]
  4032c4:	push   ecx
  4032c5:	mov    al,ds:0xd8ec98a1
  4032ca:	pusha  
  4032cb:	cs inc edi
  4032cd:	nop
  4032ce:	ins    BYTE PTR es:[edi],dx
  4032cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032d0:	jmp    0xcc05:0x3f7c46a8
  4032d7:	dec    ebp
  4032d8:	repz arpl WORD PTR [edi+0x7e],ax
  4032dc:	jno    0x403295
  4032de:	hlt    
  4032df:	cdq    
  4032e0:	and    ch,BYTE PTR [esi]
  4032e2:	mov    eax,ds:0xf2764e09
  4032e8:	xlat   BYTE PTR ds:[ebx]
  4032e9:	jae    0x4032ff
  4032eb:	dec    eax
  4032ec:	fstp   QWORD PTR [edi+0x37]
  4032ef:	cli    
  4032f0:	fmul   st(5),st
  4032f2:	es dec ebp
  4032f4:	cs mov al,0xec
  4032f7:	retf   
  4032f8:	xchg   ecx,eax
  4032f9:	imul   esp,DWORD PTR [edi-0x1],0x3fd3046c
  403300:	inc    ecx
  403301:	jae    0x403322
  403303:	dec    eax
  403304:	(bad)  
  403305:	outs   dx,DWORD PTR ds:[esi]
  403306:	js     0x4032f1
  403308:	cld    
  403309:	mov    edx,0x5cd72888
  40330e:	push   ss
  40330f:	lahf   
  403310:	sub    eax,0xe263e4d8
  403315:	jno    0x403341
  403317:	fs es mov ecx,0x8ffcd0e
  40331e:	clc    
  40331f:	push   ss
  403320:	dec    edi
  403321:	sub    ch,BYTE PTR [ecx]
  403323:	jnp    0x40339b
  403325:	xor    DWORD PTR [esi+0x1171ee78],0xf238f070
  40332f:	xor    DWORD PTR [ecx+0x51c7df54],ebp
  403335:	push   edx
  403336:	mov    dl,0x59
  403338:	lods   al,BYTE PTR ds:[esi]
  403339:	sub    ebp,eax
  40333b:	mov    ah,0x2d
  40333d:	je     0x40332f
  40333f:	sub    eax,0xef9bfd98
  403344:	adc    ebp,esi
  403346:	jno    0x403389
  403348:	or     dh,BYTE PTR [esi+eiz*2+0xbb39734]
  40334f:	icebp  
  403350:	inc    edx
  403351:	ss pop esp
  403353:	sub    DWORD PTR [ecx+0x54],0xffffffe8
  403357:	sbb    al,0xa3
  403359:	inc    ebx
  40335a:	pushf  
  40335b:	sub    al,0x95
  40335d:	cli    
  40335e:	pusha  
  40335f:	mov    ds:0x6d7ed36b,al
  403364:	rcr    DWORD PTR [ebp-0x62],1
  403367:	ss je  0x403390
  40336a:	data16 mov dh,0xd1
  40336d:	test   BYTE PTR [esi],dh
  40336f:	aam    0x98
  403371:	adc    ebx,edi
  403373:	jecxz  0x4032f5
  403375:	jecxz  0x403339
  403377:	mov    ds:0x608dfe18,eax
  40337c:	push   cs
  40337d:	fiadd  WORD PTR [edi]
  40337f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403380:	cs loop 0x403346
  403383:	shr    BYTE PTR [eax-0x1291ae58],0x75
  40338a:	mov    DWORD PTR [edx+edi*4+0x3a],ebx
  40338e:	xlat   BYTE PTR ds:[ebx]
  40338f:	lahf   
  403390:	jp     0x40334b
  403392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403393:	sbb    ecx,DWORD PTR [edx+eax*8]
  403396:	jnp    0x4033b7
  403398:	mov    dl,0xb
  40339a:	add    BYTE PTR [ebx-0x64],cl
  40339d:	lods   eax,DWORD PTR ds:[esi]
  40339e:	cwde   
  40339f:	gs aam 0x7d
  4033a2:	dec    edi
  4033a3:	xor    bl,BYTE PTR [ebp+edi*1+0x22]
  4033a7:	mov    ds:0xee579cee,eax
  4033ac:	pop    es
  4033ad:	sub    BYTE PTR gs:[edi-0x36],al
  4033b1:	dec    ebp
  4033b2:	mov    WORD PTR [eax],es
  4033b4:	push   eax
  4033b5:	leave  
  4033b6:	or     eax,0x8fd25c1e
  4033bb:	cld    
  4033bc:	bound  eax,QWORD PTR [ebx+eiz*4]
  4033bf:	cmp    al,dh
  4033c1:	or     BYTE PTR [esi+0x1be700c9],al
  4033c7:	inc    esp
  4033c8:	cmp    cl,BYTE PTR [edi-0x55]
  4033cb:	jl     0x403437
  4033cd:	mov    dl,0x5b
  4033cf:	pop    ebx
  4033d0:	push   ebx
  4033d1:	outs   dx,BYTE PTR ds:[esi]
  4033d2:	fld    DWORD PTR [esi+0x48f78572]
  4033d8:	std    
  4033d9:	adc    al,0x16
  4033db:	scas   al,BYTE PTR es:[edi]
  4033dc:	pop    edx
  4033dd:	jo     0x4033a2
  4033df:	imul   ebx,DWORD PTR [eax],0xa6efb6ac
  4033e5:	iret   
  4033e6:	adc    edi,eax
  4033e8:	vmwrite ebx,DWORD PTR [ebx]
  4033eb:	xchg   ecx,eax
  4033ec:	sub    al,0x97
  4033ee:	out    0xaf,al
  4033f0:	xchg   edi,eax
  4033f1:	mov    cl,0x42
  4033f3:	add    esi,DWORD PTR [ebp-0x3]
  4033f6:	out    dx,eax
  4033f7:	inc    ebx
  4033f8:	mov    edi,0xc733527e
  4033fd:	mov    ds:0x187ed45b,al
  403402:	mov    al,0xd8
  403404:	jns    0x403388
  403406:	lahf   
  403407:	jmp    0x9380:0x6d2f9d66
  40340e:	shl    DWORD PTR [esi+eax*1+0x76],0x3f
  403413:	pop    es
  403414:	cld    
  403415:	dec    esp
  403416:	popf   
  403417:	lods   eax,DWORD PTR ds:[esi]
  403418:	mov    esp,es
  40341a:	test   esp,ebp
  40341c:	out    0x53,al
  40341e:	xchg   esp,eax
  40341f:	loope  0x403455
  403421:	int3   
  403422:	push   ebp
  403423:	cmp    DWORD PTR [ebp+edx*1+0x4e5091ad],ecx
  40342a:	sub    eax,DWORD PTR [esi-0x2e]
  40342d:	xor    DWORD PTR [eax-0x1af9ae6e],esi
  403433:	ins    DWORD PTR es:[edi],dx
  403434:	cmp    esi,eax
  403436:	mov    ah,cl
  403438:	push   edi
  403439:	or     dh,BYTE PTR [eax-0x5be6b40a]
  40343f:	sbb    eax,0x15ea876
  403444:	inc    bl
  403446:	stos   DWORD PTR es:[edi],eax
  403447:	stc    
  403448:	dec    esi
  403449:	jbe    0x403480
  40344b:	sub    dl,al
  40344d:	std    
  40344e:	out    dx,eax
  40344f:	enter  0xb972,0x87
  403453:	push   DWORD PTR [edx]
  403455:	sbb    edi,ebp
  403457:	push   ebp
  403458:	popa   
  403459:	and    eax,0x11b7e29f
  40345e:	test   BYTE PTR [esi-0x4b1fca8c],dh
  403464:	and    esp,DWORD PTR [ebp+ebx*8-0x41]
  403468:	test   BYTE PTR [ebp+0x6f],cl
  40346b:	retf   0x5752
  40346e:	dec    eax
  40346f:	popa   
  403470:	mov    ebx,0xffd03995
  403476:	lds    esi,FWORD PTR [edx]
  403478:	pop    ss
  403479:	outs   dx,BYTE PTR ds:[esi]
  40347a:	xchg   ah,ch
  40347c:	add    al,0x1f
  40347e:	cmp    cl,dh
  403480:	inc    edi
  403481:	add    eax,DWORD PTR [edx+esi*1]
  403484:	jne    0x4034f9
  403486:	fisttp QWORD PTR [esi]
  403488:	xchg   cl,ch
  40348a:	pop    edx
  40348b:	inc    edi
  40348c:	in     al,0xd1
  40348e:	mul    dl
  403490:	mov    WORD PTR [ecx+0x3917c622],gs
  403496:	jae    0x4034d1
  403498:	pop    ebp
  403499:	xor    BYTE PTR [edx+0x574fb6de],ah
  40349f:	mov    eax,ds:0xfe5d59ea
  4034a4:	sbb    eax,0xd80c54d
  4034a9:	and    DWORD PTR ds:0x881b0bcb,0x5cfb7146
  4034b3:	dec    ebp
  4034b4:	sub    BYTE PTR [edx+eax*8],bl
  4034b7:	call   0x98ad:0xc8976cb1
  4034be:	mov    ds:0xc25295cb,al
  4034c3:	mov    esi,0x5dca46b7
  4034c8:	leave  
  4034c9:	popf   
  4034ca:	das    
  4034cb:	fild   QWORD PTR [esi+0x77be4a]
  4034d1:	pushf  
  4034d2:	cmp    DWORD PTR [ecx+0x3e],edi
  4034d5:	leave  
  4034d6:	aaa    
  4034d7:	or     BYTE PTR [eax+0x6d8d20e4],0x1d
  4034de:	hlt    
  4034df:	jmp    0x1e1d:0x5c67cb66
  4034e6:	push   0x9fa275f5
  4034eb:	(bad)  
  4034ec:	fdiv   st(1),st
  4034ee:	push   cs
  4034ef:	bound  ebx,QWORD PTR [eax+0x24764cd6]
  4034f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f6:	or     eax,0xf8c5915c
  4034fb:	add    eax,0xf5d7b6e5
  403500:	aam    0xb2
  403502:	xchg   ecx,eax
  403503:	sbb    dl,BYTE PTR ds:0x4dc6fbdb
  403509:	fs push edx
  40350b:	and    al,0x2f
  40350d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40350e:	(bad)  
  403510:	pop    es
  403511:	inc    edx
  403512:	popf   
  403513:	push   ds
  403514:	das    
  403515:	mov    cl,dl
  403517:	(bad)  
  403518:	hlt    
  403519:	mov    cl,0x80
  40351b:	xchg   edx,eax
  40351c:	idiv   BYTE PTR [ebp+eax*2-0x5b]
  403520:	js     0x4034c5
  403522:	out    0xd3,eax
  403524:	xor    ebp,DWORD PTR [ecx-0x23265c04]
  40352a:	lea    esi,[eax-0x31]
  40352d:	popf   
  40352e:	mov    ?,WORD PTR [eax+0x34]
  403531:	push   ecx
  403532:	xor    eax,0x552c8a39
  403537:	sahf   
  403538:	aas    
  403539:	jp     0x4034ca
  40353b:	ret    
  40353c:	sub    BYTE PTR [eax+0x5b],bl
  40353f:	or     edx,ebx
  403541:	and    dl,BYTE PTR [ebx]
  403543:	sub    BYTE PTR [ebx+eiz*4-0x5f],ch
  403547:	shl    dl,cl
  403549:	aaa    
  40354a:	inc    edx
  40354b:	mov    bl,0x5c
  40354d:	add    al,dh
  40354f:	jl     0x40353c
  403551:	pop    ebp
  403552:	push   esp
  403553:	sub    ebp,eax
  403555:	popa   
  403556:	push   ds
  403557:	sbb    DWORD PTR [edi+0x43],edx
  40355a:	cld    
  40355b:	out    0xea,al
  40355d:	jb     0x40357b
  40355f:	add    BYTE PTR [edi+0x215abfbc],ah
  403565:	push   0x15ec3d88
  40356a:	push   0x37a1206f
  40356f:	scas   al,BYTE PTR es:[edi]
  403570:	inc    edi
  403571:	(bad)  
  403572:	xlat   BYTE PTR ds:[ebx]
  403573:	sub    al,0xde
  403575:	mul    edx
  403577:	mov    ds:0x640ad32a,eax
  40357c:	xchg   ecx,eax
  40357d:	sub    DWORD PTR [edi],0x25
  403580:	sar    DWORD PTR [edx],0x73
  403583:	xor    al,0x1b
  403585:	icebp  
  403586:	lds    ebx,FWORD PTR [eax+0x2f4b919b]
  40358c:	mov    dh,0xee
  40358e:	jg     0x403541
  403590:	sub    eax,0x23b04da
  403595:	cs xchg edi,eax
  403597:	test   al,0xaf
  403599:	cld    
  40359a:	lds    ebp,FWORD PTR [eax+0x4]
  40359d:	and    BYTE PTR [edx],dh
  40359f:	adc    ebx,0x14
  4035a2:	add    eax,0xb4adc633
  4035a7:	aam    0x50
  4035a9:	aam    0x51
  4035ab:	push   0x73ae77a1
  4035b0:	lods   eax,DWORD PTR ds:[esi]
  4035b1:	fiadd  WORD PTR [edx]
  4035b3:	pop    ebx
  4035b4:	xor    edi,DWORD PTR [edi+0x7a]
  4035b7:	sbb    ebp,edi
  4035b9:	sub    bl,BYTE PTR [edi-0x337909f3]
  4035bf:	sub    bl,BYTE PTR [edi+0x64]
  4035c2:	cmp    ch,BYTE PTR [ebp+0x41a5c544]
  4035c8:	inc    esi
  4035c9:	add    DWORD PTR [edx],edi
  4035cb:	or     BYTE PTR [ecx+0x128e13b1],0xa8
  4035d2:	push   ebp
  4035d3:	mov    ecx,0xdfd2510f
  4035d8:	ror    BYTE PTR [eax+esi*4],1
  4035db:	push   ebx
  4035dc:	loopne 0x4035cb
  4035de:	inc    ecx
  4035df:	or     esp,DWORD PTR [bx+di+0x3f]
  4035e3:	lahf   
  4035e4:	loop   0x4035e2
  4035e6:	push   DWORD PTR [edi]
  4035e8:	cld    
  4035e9:	nop
  4035ea:	call   0x8cd9:0x59a512ee
  4035f1:	add    eax,0x8ff47106
  4035f6:	ja     0x403605
  4035f8:	retf   0xb85f
  4035fb:	(bad)  
  4035fc:	jl     0x40365e
  4035fe:	inc    ebp
  4035ff:	lds    esi,FWORD PTR [ebp+eiz*1+0x6057fdd6]
  403606:	mov    eax,ss
  403608:	xor    ebp,0xf09ab004
  40360e:	in     eax,0x80
  403610:	test   al,0xc1
  403612:	add    ah,BYTE PTR [esi]
  403614:	sub    eax,0x605a9554
  403619:	arpl   WORD PTR [esi-0x6e],cx
  40361c:	dec    eax
  40361d:	dec    eax
  40361e:	jge    0x4035c7
  403620:	test   BYTE PTR [edx+0x69],dh
  403623:	inc    ebx
  403624:	call   DWORD PTR [edx]
  403626:	fadd   DWORD PTR [edx]
  403628:	pop    ds
  403629:	int    0x68
  40362b:	xchg   ecx,eax
  40362c:	push   ds
  40362d:	jmp    0x3a669402
  403632:	push   es
  403633:	cs sub al,0x26
  403636:	ins    DWORD PTR es:[edi],dx
  403637:	sub    ch,BYTE PTR [eax]
  403639:	icebp  
  40363a:	xchg   esp,eax
  40363b:	or     eax,DWORD PTR [edi+0x2624c8ed]
  403641:	pop    edi
  403642:	or     DWORD PTR ds:0xd014ccb,ebx
  403648:	popf   
  403649:	enter  0x64f7,0x7d
  40364d:	ret    0x918e
  403650:	gs imul eax,edx,0xb9a57482
  403657:	pop    ebp
  403658:	cwde   
  403659:	sub    eax,0x6d3d442e
  40365e:	ret    
  40365f:	dec    ecx
  403660:	mov    esi,DWORD PTR [ebp-0x4d]
  403663:	(bad)  [ebx]
  403665:	scas   al,BYTE PTR es:[edi]
  403666:	daa    
  403667:	xor    eax,0xe018c515
  40366c:	test   al,0x96
  40366e:	imul   esi,DWORD PTR [ebx+esi*4],0xba1ee55
  403675:	push   cs
  403676:	popa   
  403677:	jno    0x4036a6
  403679:	sub    ebp,edi
  40367b:	test   edi,0xcbc9e7aa
  403681:	ins    BYTE PTR es:[edi],dx
  403682:	stos   DWORD PTR es:[edi],eax
  403683:	scas   eax,DWORD PTR es:[edi]
  403684:	ror    BYTE PTR [edi],0x8f
  403687:	sbb    DWORD PTR [ebx+0x3c],ebp
  40368a:	stos   DWORD PTR es:[edi],eax
  40368b:	and    BYTE PTR [ecx+0x4e],bh
  40368e:	mov    ch,BYTE PTR [edx]
  403690:	pop    edx
  403691:	push   es
  403692:	aas    
  403693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403694:	and    di,di
  403697:	test   eax,0xf647962a
  40369c:	push   ecx
  40369d:	push   ecx
  40369e:	adc    DWORD PTR [edi-0x35],edi
  4036a1:	int3   
  4036a2:	dec    BYTE PTR [edx]
  4036a4:	addr16 out dx,al
  4036a6:	fnstsw WORD PTR [edi+0x220469f9]
  4036ac:	pop    esi
  4036ad:	push   eax
  4036ae:	push   ds
  4036af:	call   DWORD PTR ds:0xe05a39b9
  4036b5:	push   esi
  4036b6:	mov    ds:0xa99e6a06,eax
  4036bb:	sar    BYTE PTR [eax+0x58286534],0xd1
  4036c2:	inc    eax
  4036c3:	out    0x99,eax
  4036c5:	xchg   ecx,eax
  4036c6:	movd   DWORD PTR [eax-0xa],mm1
  4036ca:	pcmpgtd mm1,QWORD PTR [edx]
  4036cd:	xchg   edi,eax
  4036ce:	mov    bl,0x3f
  4036d0:	adc    dl,BYTE PTR [ebx-0x6a]
  4036d3:	aas    
  4036d4:	arpl   WORD PTR [edi-0x9],ax
  4036d7:	das    
  4036d8:	repz cli 
  4036da:	fs xchg edx,eax
  4036dc:	test   esp,ebp
  4036de:	dec    ebp
  4036df:	and    eax,0x20b2e093
  4036e4:	and    bl,bl
  4036e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e7:	test   eax,0x4c84bccf
  4036ec:	pop    edi
  4036ed:	addr16 inc edi
  4036ef:	inc    edx
  4036f0:	loopne 0x403694
  4036f2:	inc    ebp
  4036f3:	stc    
  4036f4:	fs mov al,0x36
  4036f7:	cmp    dh,bh
  4036f9:	sbb    ebp,esi
  4036fb:	(bad)  
  4036fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036fd:	retf   0x2b6
  403700:	test   DWORD PTR [edi],edx
  403702:	sub    BYTE PTR [esi+ebx*8+0x4373d0ec],dh
  403709:	sar    DWORD PTR [edi-0x68],0xcb
  40370d:	sub    DWORD PTR [eax+0x66],eax
  403710:	fcom   DWORD PTR [esi+ebx*2+0x3543c6d3]
  403717:	adc    esp,DWORD PTR ds:0x518b4132
  40371d:	cli    
  40371e:	add    cl,BYTE PTR [ebx+ebp*2+0x708eb1b2]
  403725:	(bad)  
  403726:	fld    QWORD PTR [ecx-0x1844335e]
  40372c:	mov    esi,0x88a43463
  403731:	shl    BYTE PTR [eax-0x27],1
  403734:	inc    edi
  403735:	pop    ebp
  403736:	pushf  
  403737:	les    eax,FWORD PTR [ecx]
  403739:	pop    esi
  40373a:	push   esp
  40373b:	ret    
  40373c:	mov    esp,0x60eb0ef9
  403741:	push   edx
  403742:	adc    ecx,DWORD PTR [edi+ebp*4]
  403745:	sbb    BYTE PTR [edx],dh
  403747:	sbb    esp,DWORD PTR [ebx+0x15]
  40374a:	test   ecx,esi
  40374c:	aaa    
  40374d:	aas    
  40374e:	jmp    0x4044:0xf7bf2e89
  403755:	push   ebx
  403756:	lea    edx,[edx-0x23d10cd9]
  40375c:	add    bh,cl
  40375e:	push   ebp
  40375f:	push   esp
  403760:	loopne 0x4036e7
  403762:	mov    dh,0xb9
  403764:	adc    DWORD PTR [eax-0x71],0x60
  403768:	ss inc ebp
  40376a:	cmp    esi,DWORD PTR [eax+0x7c9b7d72]
  403770:	out    dx,al
  403771:	iret   
  403772:	xchg   ecx,eax
  403773:	cli    
  403774:	sbb    al,BYTE PTR [edi]
  403776:	or     esp,DWORD PTR [eax]
  403778:	(bad)  
  40377a:	adc    edx,edx
  40377c:	push   esp
  40377d:	pop    ds
  40377e:	push   0x71
  403780:	push   cs
  403781:	lods   al,BYTE PTR ds:[esi]
  403782:	outs   dx,BYTE PTR ds:[esi]
  403783:	in     al,dx
  403784:	fmul   QWORD PTR gs:[ecx+0x33e07255]
  40378b:	(bad)  
  40378c:	fist   WORD PTR [esi+ebp*8+0x1f]
  403790:	sub    dh,BYTE PTR [eax+0x2fafc043]
  403796:	sbb    ebp,ecx
  403798:	sub    al,0x67
  40379a:	data16 js 0x403811
  40379d:	sbb    al,dh
  40379f:	nop
  4037a0:	aam    0xe7
  4037a2:	iret   
  4037a3:	pop    edx
  4037a4:	jle    0x403748
  4037a6:	ja     0x403747
  4037a8:	lds    esp,FWORD PTR [ebx+edx*4]
  4037ab:	jb     0x4037f2
  4037ad:	outs   dx,BYTE PTR ds:[esi]
  4037ae:	in     al,0x41
  4037b0:	test   BYTE PTR [ebx+0x8b6254d],0x14
  4037b7:	sbb    al,0x73
  4037b9:	mov    al,BYTE PTR ds:0x3e3197a3
  4037bf:	(bad)  
  4037c0:	xchg   esi,eax
  4037c1:	int    0xbb
  4037c3:	imul   eax,DWORD PTR [bx+si],0xbad42dee
  4037ca:	mov    edi,0xfe9ad3b7
  4037cf:	ds mov ah,0x74
  4037d2:	jmp    0x15f12ada
  4037d7:	and    eax,0x546263f4
  4037dc:	jb     0x40378a
  4037de:	aaa    
  4037df:	stos   BYTE PTR es:[edi],al
  4037e0:	out    0xeb,al
  4037e2:	mov    ecx,0xb0384506
  4037e7:	sub    DWORD PTR [ebx-0x7e],esi
  4037ea:	mov    dl,0xf0
  4037ec:	retf   0x1101
  4037ef:	fs das 
  4037f1:	inc    esi
  4037f2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4037f4:	push   eax
  4037f5:	pop    ss
  4037f6:	mov    es,ecx
  4037f8:	ficom  WORD PTR [edx-0x47]
  4037fb:	sbb    DWORD PTR [eax+0x744f70e5],edi
  403801:	mov    edi,0x6e88714e
  403806:	jge    0x403852
  403808:	xchg   ebp,eax
  403809:	das    
  40380a:	lds    esi,FWORD PTR [edx]
  40380c:	pushf  
  40380d:	sbb    eax,0x94435837
  403812:	xchg   edx,eax
  403813:	test   bl,al
  403815:	cmp    al,0xa9
  403817:	inc    edi
  403818:	shl    BYTE PTR [ebx+0x51c23abb],1
  40381e:	adc    ecx,DWORD PTR [edi]
  403820:	lock xor DWORD PTR [esi],ebx
  403823:	cs repz adc edi,eax
  403827:	lds    ebp,FWORD PTR ss:[ecx-0x6a40f2a3]
  40382e:	nop
  40382f:	stc    
  403830:	(bad)  [ebx]
  403832:	in     eax,dx
  403833:	gs jne 0x40384d
  403836:	jecxz  0x4037bc
  403838:	outs   dx,DWORD PTR ds:[esi]
  403839:	add    bl,BYTE PTR [edx+0x2f2140be]
  40383f:	add    dh,dh
  403841:	cld    
  403842:	jmp    0xd5dfcba8
  403847:	outs   dx,BYTE PTR ds:[esi]
  403848:	lds    ecx,FWORD PTR [ebx-0x48]
  40384b:	enter  0xb3f5,0x44
  40384f:	dec    edx
  403850:	int3   
  403851:	inc    eax
  403852:	inc    edi
  403853:	sbb    edi,DWORD PTR [esi]
  403855:	or     edx,DWORD PTR [ebp-0x272febac]
  40385b:	add    DWORD PTR [ecx-0x34],esi
  40385e:	mov    eax,ds:0xf72238be
  403863:	les    edx,FWORD PTR [ecx-0x7f6b3e8f]
  403869:	ss int 0xba
  40386c:	(bad)  
  40386d:	cli    
  40386e:	loopne 0x4038bf
  403870:	repz cmp DWORD PTR [eax],edi
  403873:	fdivr  DWORD PTR [edi+0x403816a3]
  403879:	test   BYTE PTR [ecx+0x55],dl
  40387c:	pop    edi
  40387d:	inc    edx
  40387e:	sbb    ecx,esi
  403880:	xchg   ebp,eax
  403881:	mov    ebp,0x47b09611
  403886:	push   ds
  403887:	adc    DWORD PTR [ecx+ecx*2-0x59cda224],esi
  40388e:	xor    dh,BYTE PTR [edx]
  403890:	jno    0x4038c9
  403892:	mov    esp,0x3a6df7ba
  403897:	out    dx,eax
  403898:	enter  0xe33b,0x3a
  40389c:	shl    DWORD PTR [ebp-0x2b8c1c0c],cl
  4038a2:	stos   BYTE PTR es:[edi],al
  4038a3:	je     0x40389f
  4038a5:	dec    ebp
  4038a6:	arpl   WORD PTR [edi+edi*1+0x2e],cx
  4038aa:	inc    ebp
  4038ab:	mov    ds:0x9871ba0b,al
  4038b0:	push   edx
  4038b1:	mov    BYTE PTR [edx],dl
  4038b3:	sahf   
  4038b4:	stos   BYTE PTR es:[edi],al
  4038b5:	iret   
  4038b6:	jnp    0x4038e5
  4038b8:	in     al,0x81
  4038ba:	cmp    DWORD PTR [esp+edx*8+0x62],eax
  4038be:	(bad)  
  4038bf:	in     eax,dx
  4038c0:	adc    BYTE PTR [esi],ch
  4038c2:	push   ecx
  4038c3:	push   eax
  4038c4:	dec    ebx
  4038c5:	imul   edx,DWORD PTR [ebx+0x25fc8d7d],0xfffffffc
  4038cc:	sub    eax,0x66cad7b7
  4038d1:	xlat   BYTE PTR ds:[ebx]
  4038d2:	mov    esi,0x120b8e0d
  4038d7:	sahf   
  4038d8:	aam    0xf9
  4038da:	gs jnp 0x4038d0
  4038dd:	dec    edi
  4038de:	aad    0x2e
  4038e0:	pushf  
  4038e1:	in     eax,dx
  4038e2:	clc    
  4038e3:	xchg   DWORD PTR [esi-0x6d],ebx
  4038e6:	stos   BYTE PTR es:[edi],al
  4038e7:	lods   al,BYTE PTR ds:[esi]
  4038e8:	inc    eax
  4038e9:	imul   ebp,DWORD PTR [edi+ecx*2-0x7d],0xffffff80
  4038ee:	fcomp  QWORD PTR ds:0xf9b029ab
  4038f4:	out    0xf9,eax
  4038f6:	xchg   ecx,eax
  4038f7:	(bad)  
  4038f8:	loopne 0x403909
  4038fa:	into   
  4038fb:	scas   al,BYTE PTR es:[edi]
  4038fc:	push   0xffffffed
  4038fe:	sbb    BYTE PTR [edx-0xc],dl
  403901:	imul   edx,DWORD PTR [ecx],0x6a
  403904:	mov    al,ds:0xdd38790b
  403909:	mov    WORD PTR ds:0x8a82e5ca,ss
  40390f:	adc    bl,BYTE PTR [ecx]
  403911:	adc    eax,0x7f2cc8eb
  403916:	ss (bad) 
  403919:	test   eax,0x79241320
  40391e:	jecxz  0x403954
  403920:	cli    
  403921:	pop    eax
  403922:	mov    edi,0x8a387e0f
  403927:	sbb    ah,0xd8
  40392a:	or     eax,0x27cecaa2
  40392f:	rol    BYTE PTR [edi-0x2],1
  403932:	fist   DWORD PTR [ecx]
  403934:	cmc    
  403935:	ins    DWORD PTR es:[edi],dx
  403936:	jecxz  0x403928
  403938:	push   es
  403939:	and    eax,0xc8902df1
  40393e:	inc    eax
  40393f:	sub    eax,0xc266baa2
  403944:	sub    eax,0xa5ecb7f5
  403949:	xchg   ecx,eax
  40394a:	xchg   edi,eax
  40394b:	fsub   st,st(5)
  40394d:	pop    ecx
  40394e:	jmp    0x3cee:0xb9d30f50
  403955:	je     0x403946
  403957:	adc    eax,0x6fe806e4
  40395c:	sbb    cl,BYTE PTR ds:0x9632ca21
  403962:	into   
  403963:	out    dx,eax
  403964:	sahf   
  403965:	jle    0x403934
  403967:	jmp    0x4039a2
  403969:	into   
  40396a:	scas   al,BYTE PTR es:[edi]
  40396b:	mov    bl,0x1c
  40396d:	dec    eax
  40396e:	mov    ebx,0xdc8d8d99
  403973:	jecxz  0x403918
  403975:	add    bh,0xe3
  403978:	cmp    eax,DWORD PTR [eax-0x5e]
  40397b:	sub    BYTE PTR [ecx-0x33c41dea],dl
  403981:	xor    DWORD PTR ds:0x253f70df,esp
  403987:	cmp    cl,BYTE PTR [ebx]
  403989:	into   
  40398a:	mov    dh,0x2b
  40398c:	jnp    0x4039c2
  40398e:	out    0xc9,al
  403990:	and    dl,BYTE PTR [esi+0x7]
  403993:	fsub   DWORD PTR [esp+edi*2]
  403996:	enter  0x9da5,0x42
  40399a:	call   0xfb6a:0xaeff28a4
  4039a1:	leave  
  4039a2:	add    ah,al
  4039a4:	sbb    bl,BYTE PTR [ecx+0x3d]
  4039a7:	add    al,BYTE PTR [ecx-0xb]
  4039aa:	push   cs
  4039ab:	pop    ecx
  4039ac:	scas   eax,DWORD PTR es:[edi]
  4039ad:	lahf   
  4039ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039af:	xchg   esi,eax
  4039b0:	cmp    BYTE PTR [edx],ch
  4039b2:	xchg   ebp,eax
  4039b3:	push   eax
  4039b4:	fcom   QWORD PTR [edx-0x298125f3]
  4039ba:	sbb    bh,BYTE PTR [ebx]
  4039bc:	mov    ecx,0x1fdce889
  4039c1:	dec    edi
  4039c2:	cmp    ch,BYTE PTR [ecx+0x5332ddbb]
  4039c8:	pushf  
  4039c9:	ins    DWORD PTR es:[edi],dx
  4039ca:	sub    ah,dh
  4039cc:	xchg   ebx,eax
  4039cd:	or     BYTE PTR [ecx-0x44],bh
  4039d0:	pop    edx
  4039d1:	adc    dh,ch
  4039d3:	xchg   esp,eax
  4039d4:	lds    esi,FWORD PTR [esp+edi*2+0x47312ee0]
  4039db:	rcl    edi,1
  4039dd:	xor    edi,edi
  4039df:	es loop 0x4039df
  4039e2:	xor    eax,0x5600df3b
  4039e7:	mov    ?,edi
  4039e9:	scas   al,BYTE PTR es:[edi]
  4039ea:	push   cs
  4039eb:	mov    dl,0x4f
  4039ed:	or     esp,DWORD PTR [edx]
  4039ef:	outs   dx,DWORD PTR ds:[esi]
  4039f0:	pop    esi
  4039f1:	jle    0x4039cc
  4039f3:	(bad)  
  4039f4:	push   ecx
  4039f5:	retf   
  4039f6:	cwde   
  4039f7:	bound  esp,QWORD PTR ss:[edi-0x5330f751]
  4039fe:	lds    edi,FWORD PTR [esi]
  403a00:	adc    DWORD PTR [edi],0x8165d7fb
  403a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a07:	and    esi,DWORD PTR [edi+0x699f41c4]
  403a0d:	xchg   edi,eax
  403a0e:	imul   esi,DWORD PTR [eax-0x329460a7],0x1c5bf903
  403a18:	test   al,0x6e
  403a1a:	push   0xe5e5548e
  403a1f:	nop    esi
  403a22:	push   cs
  403a23:	test   eax,0xf2e3b425
  403a28:	mov    eax,eax
  403a2a:	enter  0xcf95,0x60
  403a2e:	and    eax,0xc7b09855
  403a33:	add    ah,bl
  403a35:	ficomp DWORD PTR [ebx-0x119f13f3]
  403a3b:	jmp    0x9ba9:0xb58f01e3
  403a42:	es nop
  403a44:	sar    BYTE PTR [edi],cl
  403a46:	out    dx,eax
  403a47:	fs push ecx
  403a49:	xor    dh,dl
  403a4b:	ins    DWORD PTR es:[edi],dx
  403a4c:	pop    esp
  403a4d:	arpl   WORD PTR [ebp-0x68521e8f],ax
  403a53:	pop    ds
  403a54:	iret   
  403a55:	es ins DWORD PTR es:[edi],dx
  403a57:	leave  
  403a58:	jb     0x403ac2
  403a5a:	jmp    0x3144:0xe04ef58c
  403a61:	sbb    eax,0xf5e61caf
  403a66:	lock clc 
  403a68:	pop    edx
  403a69:	dec    ebp
  403a6a:	add    al,al
  403a6c:	cdq    
  403a6d:	mov    esi,0x87bcd08a
  403a72:	scas   al,BYTE PTR es:[edi]
  403a73:	clc    
  403a74:	jo     0x403a2f
  403a76:	sbb    al,0xec
  403a78:	mov    al,ds:0x80673296
  403a7d:	pop    ss
  403a7e:	or     ebx,DWORD PTR [esi+0x4e0b0895]
  403a84:	inc    edx
  403a85:	add    eax,0x80a46cd1
  403a8a:	popf   
  403a8b:	inc    edx
  403a8c:	pop    ds
  403a8d:	sahf   
  403a8e:	scas   eax,DWORD PTR es:[edi]
  403a8f:	leave  
  403a90:	fpatan 
  403a92:	repnz enter 0xae0c,0x3a
  403a97:	imul   eax,DWORD PTR [edx],0xffffff9d
  403a9a:	xchg   ebp,eax
  403a9b:	xchg   ecx,eax
  403a9c:	pop    edx
  403a9d:	into   
  403a9e:	in     al,dx
  403a9f:	adc    cl,BYTE PTR [edi-0x38b6462a]
  403aa5:	cld    
  403aa6:	outs   dx,DWORD PTR ds:[esi]
  403aa7:	retf   0xd9ca
  403aaa:	or     al,0xb
  403aac:	gs cmp eax,0x825477ad
  403ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ab3:	in     eax,0xa
  403ab5:	sbb    BYTE PTR [ebx+0x73681e54],bh
  403abb:	cli    
  403abc:	push   es
  403abd:	jo     0x403b2c
  403abf:	jbe    0x403ac8
  403ac1:	pop    ebx
  403ac2:	xor    eax,0xdd130a70
  403ac7:	pop    esp
  403ac8:	lahf   
  403ac9:	fldln2 
  403acb:	xor    bh,BYTE PTR [edx]
  403acd:	aam    0xc1
  403acf:	mov    bh,ch
  403ad1:	sar    BYTE PTR [esi],cl
  403ad3:	mov    ebp,0x618d3f2f
  403ad8:	mov    eax,ds:0x1754c79c
  403add:	add    esp,DWORD PTR [edx+0x3de0f83e]
  403ae3:	imul   esp,DWORD PTR [edx],0xffffffcf
  403ae6:	xchg   ebp,eax
  403ae7:	sbb    eax,0xe06dbaae
  403aec:	out    dx,eax
  403aed:	out    0xd4,al
  403aef:	xchg   edi,eax
  403af0:	xor    eax,0xb352b78e
  403af5:	mov    ecx,0xf2f0c0f3
  403afa:	mov    esi,0xbf9b9297
  403aff:	out    dx,al
  403b00:	mov    eax,0x8415c644
  403b05:	xchg   BYTE PTR [esi-0xa35c4cb],al
  403b0b:	ins    BYTE PTR es:[edi],dx
  403b0c:	inc    esi
  403b0d:	dec    esi
  403b0e:	in     eax,dx
  403b0f:	aad    0x3c
  403b11:	lods   eax,DWORD PTR ds:[esi]
  403b12:	jmp    0x403aca
  403b14:	add    bh,BYTE PTR [eax+edx*1-0x26]
  403b18:	div    DWORD PTR [edx+edx*2+0x2d8f2cdd]
  403b1f:	xrelease xchg BYTE PTR cs:[esi],bh
  403b23:	leave  
  403b24:	cmc    
  403b25:	pop    ss
  403b26:	lods   eax,DWORD PTR ds:[esi]
  403b27:	jecxz  0x403b65
  403b29:	aaa    
  403b2a:	xchg   BYTE PTR [esi+ebp*8],ch
  403b2d:	mov    ah,0x38
  403b2f:	sub    ebx,DWORD PTR [esi-0xb]
  403b32:	shr    DWORD PTR [edx+0xfce737d],1
  403b38:	mov    bh,0xa
  403b3a:	das    
  403b3b:	pop    ds
  403b3c:	xor    DWORD PTR [eax+ecx*2],0x34
  403b40:	pop    eax
  403b41:	inc    ebx
  403b42:	call   0xec5ceb6
  403b47:	clc    
  403b48:	ss dec edi
  403b4a:	int    0x95
  403b4c:	mov    ?,eax
  403b4e:	cdq    
  403b4f:	(bad)  
  403b50:	retf   0x59cf
  403b53:	xor    al,0x10
  403b55:	inc    esp
  403b56:	inc    ebp
  403b57:	lds    esi,FWORD PTR [edx]
  403b59:	adc    DWORD PTR [eax],ebp
  403b5b:	stos   DWORD PTR es:[edi],eax
  403b5c:	dec    ebp
  403b5d:	jp     0x403b8f
  403b5f:	fimul  DWORD PTR [ebp+0x39e86644]
  403b65:	mov    al,0x4e
  403b67:	push   es
  403b68:	inc    ebp
  403b69:	inc    esp
  403b6a:	pop    ebp
  403b6b:	inc    ebx
  403b6c:	pop    esp
  403b6d:	leave  
  403b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b6f:	mov    WORD PTR [eax],fs
  403b71:	stos   DWORD PTR es:[edi],eax
  403b72:	xchg   edx,eax
  403b73:	inc    edx
  403b74:	mov    eax,0x5f6d6fed
  403b79:	ja     0x403bf2
  403b7b:	lock xchg ecx,eax
  403b7d:	or     BYTE PTR [esp],al
  403b80:	xchg   ebp,eax
  403b81:	call   0x1c898a8e
  403b86:	add    eax,0x11699bcc
  403b8b:	inc    esi
  403b8c:	and    eax,0xd667db27
  403b91:	xchg   edi,eax
  403b92:	stos   DWORD PTR es:[edi],eax
  403b93:	adc    bl,BYTE PTR [edx+0x77]
  403b96:	mov    al,0x6
  403b98:	retf   
  403b99:	loop   0x403b77
  403b9b:	dec    ebx
  403b9c:	sbb    ah,BYTE PTR [edx-0x66e051d6]
  403ba2:	loope  0x403b2f
  403ba4:	pop    ebp
  403ba5:	lds    edi,FWORD PTR ds:[edx+0x4d]
  403ba9:	imul   edi,DWORD PTR [edi*8-0x7088b6c7],0x3aac341d
  403bb4:	test   al,0xa6
  403bb6:	out    0x6,eax
  403bb8:	daa    
  403bb9:	call   0x5c206c11
  403bbe:	pop    es
  403bbf:	cmp    esp,ebp
  403bc1:	push   edi
  403bc2:	out    dx,al
  403bc3:	imul   ecx,DWORD PTR [edi-0x2d0f4428],0xffffffab
  403bca:	jl     0x403c08
  403bcc:	pop    ds
  403bcd:	(bad)  
  403bce:	lea    esp,[edi+ebp*4-0x3094a4fe]
  403bd5:	es push esi
  403bd7:	dec    eax
  403bd8:	test   DWORD PTR [ebx],edi
  403bda:	sbb    eax,0x35031e6c
  403bdf:	in     eax,dx
  403be0:	cmp    al,0x11
  403be2:	cmp    DWORD PTR [esi],ebp
  403be4:	cli    
  403be5:	cmp    DWORD PTR [ecx+esi*8+0x2974c86e],0x7b
  403bed:	sbb    WORD PTR [esi-0x63],si
  403bf1:	mov    ah,0xb7
  403bf3:	xor    BYTE PTR [edx+0x2f],cl
  403bf6:	jecxz  0x403c46
  403bf8:	and    eax,0xeb7abd2
  403bfd:	(bad)  
  403bfe:	ds int3 
  403c00:	inc    ebp
  403c01:	cmp    BYTE PTR [esi-0x78b755de],bh
  403c07:	jae    0x403c18
  403c09:	mov    al,ds:0x5d995ac8
  403c0e:	aaa    
  403c0f:	jle    0x403bf9
  403c11:	aam    0x67
  403c13:	push   edi
  403c14:	inc    esi
  403c15:	adc    eax,0xb80c1313
  403c1a:	popf   
  403c1b:	rol    DWORD PTR [esi],1
  403c1d:	xor    eax,0xf5bfa061
  403c22:	pushf  
  403c23:	repnz and al,0x89
  403c26:	and    eax,0x42fdaae4
  403c2b:	dec    ebp
  403c2c:	stc    
  403c2d:	lahf   
  403c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c2f:	and    eax,esp
  403c31:	jp     0x403c44
  403c33:	jecxz  0x403c8a
  403c35:	sbb    eax,0xedfc03f1
  403c3a:	(bad)  
  403c3b:	jns    0x403c7a
  403c3d:	loopne 0x403c52
  403c3f:	clc    
  403c40:	js     0x403bd7
  403c42:	icebp  
  403c43:	shl    DWORD PTR ds:[ebp-0x2ab96943],0x87
  403c4b:	adc    ch,bh
  403c4d:	iret   
  403c4e:	jmp    0xfbfa6210
  403c53:	or     BYTE PTR ds:[ecx],dh
  403c56:	mov    ebp,0x40261a88
  403c5b:	jb     0x403c0b
  403c5d:	cmp    DWORD PTR [edi-0x4ce8da37],esp
  403c63:	cmc    
  403c64:	pop    eax
  403c65:	pop    edi
  403c66:	dec    ebp
  403c67:	pop    es
  403c68:	(bad)  
  403c6a:	in     al,dx
  403c6b:	mov    esi,0x62a8907
  403c70:	jg     0x403c83
  403c72:	into   
  403c73:	xor    DWORD PTR [ebx-0x26f457a4],edi
  403c79:	mov    dl,0xc7
  403c7b:	and    esp,DWORD PTR [edx]
  403c7d:	mov    ebp,0xd1c33c02
  403c82:	cmp    edi,DWORD PTR [edx-0x1a]
  403c85:	pusha  
  403c86:	cdq    
  403c87:	sti    
  403c88:	mov    ebx,0x2222c0c7
  403c8d:	shl    BYTE PTR [esi+edi*1],cl
  403c90:	inc    ebp
  403c91:	mov    al,ds:0xf4b1ae6
  403c96:	cmc    
  403c97:	or     eax,0x8faf099d
  403c9c:	shr    BYTE PTR [ecx+0xa],cl
  403c9f:	xor    eax,0x9f4a9d7c
  403ca4:	call   0xcd8a:0xd3150331
  403cab:	mov    ch,0x9
  403cad:	push   ebp
  403cae:	aas    
  403caf:	sbb    eax,0x9abf550
  403cb4:	test   DWORD PTR ds:0x6b9286a1,esi
  403cba:	dec    esp
  403cbb:	pop    edx
  403cbc:	inc    esi
  403cbd:	shl    DWORD PTR [ebx],cl
  403cbf:	jmp    0x403cd4
  403cc1:	xor    BYTE PTR [ebx+0x74],ah
  403cc4:	pop    es
  403cc5:	ror    edx,cl
  403cc7:	leave  
  403cc8:	sbb    BYTE PTR [eax],bl
  403cca:	mov    ah,0x5c
  403ccc:	xor    cl,ch
  403cce:	xor    BYTE PTR [esi],bh
  403cd0:	shl    dl,1
  403cd2:	mov    ds:0x158b25bd,eax
  403cd7:	(bad)  
  403cd8:	push   edx
  403cd9:	sub    edi,eax
  403cdb:	sbb    dl,BYTE PTR [ebp-0x7e5e7110]
  403ce1:	dec    esi
  403ce2:	sti    
  403ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce4:	xchg   ecx,eax
  403ce5:	test   DWORD PTR [esi],eax
  403ce7:	js     0x403c6e
  403ce9:	sbb    eax,0x85128e98
  403cee:	dec    esp
  403cef:	jecxz  0x403ccd
  403cf1:	aaa    
  403cf2:	xlat   BYTE PTR ds:[ebx]
  403cf3:	cli    
  403cf4:	pop    ebp
  403cf5:	cmp    DWORD PTR [eax+esi*2+0x666ff2c3],ebx
  403cfc:	(bad)  
  403cfd:	ror    esp,cl
  403cff:	inc    ebx
  403d00:	xchg   esi,esp
  403d02:	das    
  403d03:	stc    
  403d04:	sub    eax,0xc878caf1
  403d09:	push   eax
  403d0a:	enter  0x3578,0x4b
  403d0e:	ins    BYTE PTR es:[edi],dx
  403d0f:	or     eax,0xd8f7b377
  403d14:	inc    ecx
  403d15:	inc    esi
  403d16:	cmp    eax,0x4df0ea6a
  403d1b:	or     edx,0xffffffbb
  403d1e:	xchg   edi,eax
  403d1f:	ja     0x403cf2
  403d21:	push   es
  403d22:	int3   
  403d23:	iret   
  403d24:	mov    eax,0xf4923047
  403d29:	mov    ?,WORD PTR [esi+0x5ceeccdc]
  403d2f:	repz imul edx,DWORD PTR [eax],0x21
  403d33:	mov    ds:0xb369313f,al
  403d38:	clc    
  403d39:	in     eax,dx
  403d3a:	sub    al,0x86
  403d3c:	mov    ds:0x6bff4b85,al
  403d41:	in     eax,dx
  403d42:	cdq    
  403d43:	scas   eax,DWORD PTR es:[edi]
  403d44:	or     edx,DWORD PTR [edi]
  403d46:	push   edx
  403d47:	xchg   ebx,eax
  403d48:	inc    esp
  403d49:	es xchg ebp,eax
  403d4b:	sub    cl,BYTE PTR [edx+ebx*8]
  403d4e:	sahf   
  403d4f:	pusha  
  403d50:	or     ah,ah
  403d52:	pop    edx
  403d53:	aad    0xe2
  403d55:	test   al,0x4d
  403d57:	xchg   DWORD PTR [esi-0x3181e1ae],eax
  403d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d5e:	mov    ch,0x70
  403d60:	jecxz  0x403cf7
  403d62:	gs sahf 
  403d64:	dec    esp
  403d65:	jnp    0x403dbd
  403d67:	xor    BYTE PTR [ecx-0x59583af4],al
  403d6d:	pop    ebp
  403d6e:	fsubr  QWORD PTR [ebp-0x3562929a]
  403d74:	out    dx,al
  403d75:	dec    ebp
  403d76:	lods   al,BYTE PTR ds:[esi]
  403d77:	sub    dl,BYTE PTR [edx+ebp*2-0x70]
  403d7b:	rcl    DWORD PTR [esi-0x1e],1
  403d7e:	dec    edx
  403d7f:	addr16 adc al,0x90
  403d82:	mov    ds,WORD PTR [esi+0xb]
  403d85:	in     al,dx
  403d86:	mov    ah,0xa9
  403d88:	iret   
  403d89:	outs   dx,DWORD PTR ds:[esi]
  403d8a:	sub    DWORD PTR [edi-0x1f],ebx
  403d8d:	sub    BYTE PTR [ebx],ah
  403d8f:	sbb    al,0x52
  403d91:	jbe    0x403d78
  403d93:	push   ebx
  403d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d95:	call   0xa45f:0x1c61bb94
  403d9c:	mov    al,0x9d
  403d9e:	aas    
  403d9f:	cwde   
  403da0:	mov    dh,BYTE PTR [eax-0x4a430949]
  403da6:	dec    edi
  403da7:	push   es
  403da8:	int3   
  403da9:	clc    
  403daa:	call   0xc158:0x24b05e3c
  403db1:	xor    DWORD PTR [ebp+eax*4-0x3c13c1fc],0x8de0b83f
  403dbc:	addr16 cwde 
  403dbe:	test   BYTE PTR [ebp-0x42fb7971],bh
  403dc4:	int3   
  403dc5:	sbb    eax,0x7af130d
  403dca:	shr    DWORD PTR [edi-0x677ebafd],0x9f
  403dd1:	sbb    DWORD PTR [ecx],eax
  403dd3:	loopne 0x403dc9
  403dd5:	mov    eax,0x679d0e6b
  403dda:	inc    ecx
  403ddb:	sub    DWORD PTR [ebx],edi
  403ddd:	pop    ebx
  403dde:	sbb    edi,DWORD PTR [ebp+0x24]
  403de1:	mov    al,ds:0xfae0c242
  403de6:	loopne 0x403e42
  403de8:	xor    BYTE PTR [esi+0x56],ch
  403deb:	cld    
  403dec:	pop    ss
  403ded:	out    0x29,eax
  403def:	fbld   TBYTE PTR [esi-0x8c61919]
  403df5:	add    DWORD PTR [edx],0x102cd6d5
  403dfb:	dec    edi
  403dfc:	cmp    eax,0x11963ee9
  403e01:	out    0x85,eax
  403e03:	in     eax,dx
  403e04:	pop    edi
  403e05:	push   edi
  403e06:	cdq    
  403e07:	mov    WORD PTR [eax+0x6c],gs
  403e0a:	sbb    DWORD PTR [ebx+0x2d],edi
  403e0d:	outs   dx,DWORD PTR ds:[esi]
  403e0e:	sbb    eax,0xfff0ed34
  403e13:	push   ss
  403e14:	push   ecx
  403e15:	jbe    0x403e3a
  403e17:	nop
  403e18:	pusha  
  403e19:	stos   BYTE PTR es:[edi],al
  403e1a:	mov    bl,0x28
  403e1c:	dec    ebp
  403e1d:	fld    st(7)
  403e1f:	cld    
  403e20:	shr    DWORD PTR [ebp-0x34a67c41],0x38
  403e27:	lds    eax,FWORD PTR [ebx-0x172d4d82]
  403e2d:	cmc    
  403e2e:	fild   DWORD PTR [edx]
  403e30:	sub    eax,edx
  403e32:	or     bl,BYTE PTR [ebp+0x72]
  403e35:	add    eax,0x9270c1a3
  403e3a:	sti    
  403e3b:	jmp    0xfbe0:0x2ca79e36
  403e42:	sti    
  403e43:	xor    DWORD PTR [eax+0x48d4e993],esi
  403e49:	cmp    eax,0xed637cd3
  403e4e:	jne    0x403e07
  403e50:	sub    DWORD PTR [ebx],edx
  403e52:	loopne 0x403e06
  403e54:	ret    0x1c6b
  403e57:	pop    ecx
  403e58:	jo     0x403e9c
  403e5a:	inc    esp
  403e5b:	(bad)  [esi-0x66b876e3]
  403e61:	jbe    0x403df7
  403e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e64:	inc    esp
  403e65:	mov    al,0x65
  403e67:	jnp    0x403df5
  403e69:	pop    esp
  403e6a:	pop    edi
  403e6b:	cmp    DWORD PTR [esi],ebx
  403e6d:	xchg   ebx,eax
  403e6e:	aad    0x96
  403e70:	jae    0x403ea2
  403e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e73:	(bad)  
  403e74:	pop    eax
  403e75:	mov    ?,WORD PTR [ecx+eiz*1-0x11]
  403e79:	cmp    DWORD PTR [ebp-0x15],ecx
  403e7c:	leave  
  403e7d:	loopne 0x403e38
  403e7f:	cmp    eax,0xe0935e4b
  403e84:	test   dl,dh
  403e86:	outs   dx,BYTE PTR ds:[esi]
  403e87:	pop    esp
  403e88:	rcr    DWORD PTR [ebp-0x3d],0x7d
  403e8c:	pop    eax
  403e8d:	loope  0x403edf
  403e8f:	sub    al,0xe3
  403e91:	inc    ecx
  403e92:	test   DWORD PTR [ebp+eiz*2+0x6e24448e],esi
  403e99:	fnstenv [eax-0x6de0da6b]
  403e9f:	movntq QWORD PTR [esi+0x60],mm6
  403ea3:	lahf   
  403ea4:	pop    eax
  403ea5:	push   0x47
  403ea7:	cmc    
  403ea8:	jo     0x403f0d
  403eaa:	ss adc cl,0x14
  403eae:	xlat   BYTE PTR ds:[ebx]
  403eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eb0:	push   eax
  403eb1:	sahf   
  403eb2:	or     BYTE PTR [ebx+0x6c],0x63
  403eb6:	sbb    al,0xc2
  403eb8:	sbb    DWORD PTR [edi-0x53268bb7],ebp
  403ebe:	cmp    eax,0x3b47d4b
  403ec3:	popf   
  403ec4:	push   esi
  403ec5:	mov    edi,0xe3fd0318
  403eca:	pop    edi
  403ecb:	out    0xa4,eax
  403ecd:	repz push ecx
  403ecf:	pop    ebp
  403ed0:	sbb    dh,BYTE PTR es:[edi-0x33173d6e]
  403ed7:	(bad)  
  403ed8:	mov    dl,0x35
  403eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403edb:	arpl   WORD PTR [esi-0x73],di
  403ede:	add    al,0x42
  403ee0:	loopne 0x403e77
  403ee2:	ja     0x403eed
  403ee4:	std    
  403ee5:	xchg   edi,eax
  403ee6:	mov    edi,0xecbbfc8f
  403eeb:	mov    edx,0xef96c18c
  403ef0:	ins    BYTE PTR es:[edi],dx
  403ef1:	inc    ecx
  403ef2:	in     eax,dx
  403ef3:	retf   0x115a
  403ef6:	in     al,0x87
  403ef8:	in     eax,0x93
  403efa:	retf   0xb026
  403efd:	sub    al,BYTE PTR [edi]
  403eff:	mov    ecx,0xa5f24a87
  403f04:	xchg   esp,eax
  403f05:	mov    DWORD PTR [ebx-0x646da531],edx
  403f0b:	aam    0xe9
  403f0d:	inc    ecx
  403f0e:	dec    esp
  403f0f:	push   ebp
  403f10:	aad    0xe7
  403f12:	jl     0x403f1a
  403f14:	mov    al,0x80
  403f16:	mov    BYTE PTR [eax-0x21],dh
  403f19:	clc    
  403f1a:	push   eax
  403f1b:	mov    eax,0xa212171f
  403f20:	iret   
  403f21:	das    
  403f22:	pushf  
  403f23:	ret    0x4e7b
  403f26:	cmp    dl,BYTE PTR [ebp+0x34]
  403f29:	fmul   QWORD PTR [eax+0xe]
  403f2c:	adc    BYTE PTR [edx-0x4ea63ae1],al
  403f32:	and    al,0xcb
  403f34:	adc    al,0x8b
  403f36:	mov    dh,0xb9
  403f38:	mov    eax,0xe899364e
  403f3d:	in     eax,dx
  403f3e:	rcl    BYTE PTR [edx+ebp*2],0xec
  403f42:	mov    esp,DWORD PTR [esi+0x137b1483]
  403f48:	mov    edi,0xa378af67
  403f4d:	stos   BYTE PTR es:[edi],al
  403f4e:	push   es
  403f4f:	push   ecx
  403f50:	je     0x403f80
  403f52:	(bad)
  403f57:	es stos DWORD PTR es:[edi],eax
  403f59:	popa   
  403f5a:	dec    edi
  403f5b:	sub    al,0xaa
  403f5d:	punpcklbw mm6,DWORD PTR [edi-0x77]
  403f61:	shl    DWORD PTR [ecx+ebp*4],cl
  403f64:	dec    esi
  403f65:	mov    ebp,DWORD PTR [edi+0x22]
  403f68:	xor    DWORD PTR [edx],eax
  403f6a:	jno    0x403f57
  403f6c:	inc    edx
  403f6d:	icebp  
  403f6e:	add    eax,0x87d3e410
  403f73:	movhlps xmm2,xmm3
  403f76:	cld    
  403f77:	or     DWORD PTR [eax-0x2d],edx
  403f7a:	and    dh,BYTE PTR [edx]
  403f7c:	fnsave [ecx-0x44]
  403f7f:	ror    bh,cl
  403f81:	jb     0x403f22
  403f83:	aad    0x9e
  403f85:	dec    edx
  403f86:	fistp  DWORD PTR [ebp+0x3a7b9d11]
  403f8c:	shl    DWORD PTR [edi+0xa],cl
  403f8f:	pop    es
  403f90:	xor    bl,BYTE PTR [ebx+0x7643a2ca]
  403f96:	mov    bh,0xfa
  403f98:	ins    BYTE PTR es:[edi],dx
  403f99:	repz add dl,BYTE PTR [edx-0x7d]
  403f9d:	daa    
  403f9e:	cmp    al,0xb4
  403fa0:	mov    esp,0x44cce362
  403fa5:	nop
  403fa6:	loop   0x404025
  403fa8:	sbb    BYTE PTR [edi+0x68],cl
  403fab:	out    0x26,al
  403fad:	jg     0x403f86
  403faf:	jno    0x403fc1
  403fb1:	sub    ebp,DWORD PTR [eax-0x27fda31f]
  403fb7:	out    dx,al
  403fb8:	icebp  
  403fb9:	(bad)  
  403fba:	xor    al,dh
  403fbc:	push   ds
  403fbd:	mov    BYTE PTR [ebx],ah
  403fbf:	(bad)  
  403fc0:	(bad)  
  403fc1:	sahf   
  403fc2:	and    al,BYTE PTR [esi]
  403fc4:	xor    BYTE PTR [ecx-0x79ff91cb],0x69
  403fcb:	icebp  
  403fcc:	(bad)  
  403fcd:	test   eax,0xbb25d08f
  403fd2:	mov    fs,WORD PTR [edx-0x571bf37f]
  403fd8:	xor    BYTE PTR [eax+0x6064b60a],dl
  403fde:	dec    esi
  403fdf:	jno    0x403fbd
  403fe1:	pop    eax
  403fe2:	xchg   ebx,eax
  403fe3:	not    DWORD PTR [ebx-0x71ba6192]
  403fe9:	and    esp,ebx
  403feb:	cmp    eax,0x7a96c1f2
  403ff0:	push   cs
  403ff1:	pop    es
  403ff2:	push   ebp
  403ff3:	std    
  403ff4:	jne    0x403ff8
  403ff6:	push   ds
  403ff7:	outs   dx,DWORD PTR ds:[esi]
  403ff8:	cmc    
  403ff9:	sub    esi,esi
  403ffb:	mov    bh,BYTE PTR [edi+0x3b]
  403ffe:	ins    DWORD PTR es:[edi],dx
  403fff:	pop    ebp
  404000:	jp     0x403fff
  404002:	or     al,0xe5
  404004:	push   edx
  404005:	adc    al,0xb4
  404007:	mov    ch,0x9e
  404009:	inc    eax
  40400a:	jnp    0x403ff3
  40400c:	jb     0x404050
  40400e:	pop    ebp
  40400f:	scas   al,BYTE PTR es:[edi]
  404010:	adc    al,0xb3
  404012:	jne    0x403fe5
  404014:	in     eax,0xea
  404016:	jnp    0x403fed
  404018:	cmc    
  404019:	pushf  
  40401a:	cmp    DWORD PTR [eax+ebx*1+0x7e7fdea2],edi
  404021:	adc    BYTE PTR [edi-0x7fc05f6f],0x47
  404028:	or     dl,BYTE PTR [edx-0x156834a4]
  40402e:	xchg   DWORD PTR [edx+0x18],edi
  404031:	jnp    0x4040ae
  404033:	out    dx,eax
  404034:	cwde   
  404035:	and    bh,BYTE PTR [edx+0x3a5c6ceb]
  40403b:	add    DWORD PTR [esi-0x32ba677a],edi
  404041:	and    eax,0x979bb07d
  404046:	shl    BYTE PTR [esi-0x5a],cl
  404049:	jnp    0x403fd5
  40404b:	sub    al,0xe8
  40404d:	mov    dl,0x22
  40404f:	and    edx,DWORD PTR [esi+ecx*8+0x14c2a526]
  404056:	pusha  
  404057:	cld    
  404058:	mov    ecx,0xf3dc2d34
  40405d:	mov    esp,0xd9396c8f
  404062:	cs retf 0x380
  404066:	dec    edx
  404067:	fisttp QWORD PTR [edx+eiz*2+0x4857fed2]
  40406e:	dec    eax
  40406f:	or     edi,DWORD PTR [edx]
  404071:	dec    ecx
  404072:	fstp   TBYTE PTR [esi]
  404074:	mov    dh,0x0
  404076:	cwde   
  404077:	stos   DWORD PTR es:[edi],eax
  404078:	repnz scas al,BYTE PTR es:[edi]
  40407a:	imul   ebp,ebp,0x3
  40407d:	inc    esi
  40407e:	lahf   
  40407f:	popa   
  404080:	scas   eax,DWORD PTR es:[edi]
  404081:	mov    edi,0x91b41a4
  404086:	aad    0x70
  404088:	ret    0xd19c
  40408b:	xchg   BYTE PTR [ecx-0x61],ch
  40408e:	les    esi,FWORD PTR ds:0x7d27854c
  404094:	fdivr  QWORD PTR [esp+ebp*2]
  404097:	(bad)  
  404098:	jmp    0x27d8:0x469ff8f
  40409f:	cs pop edx
  4040a1:	pop    ebp
  4040a2:	je     0x4040f6
  4040a4:	jne    0x404047
  4040a6:	pop    eax
  4040a7:	cmp    ecx,esi
  4040a9:	aam    0x9d
  4040ab:	cmp    ch,dl
  4040ad:	std    
  4040ae:	lahf   
  4040af:	xchg   DWORD PTR [ecx-0x12],edi
  4040b2:	test   al,0x94
  4040b4:	mov    ch,0xab
  4040b6:	adc    eax,0xf77b4c5f
  4040bb:	dec    esi
  4040bc:	fadd   QWORD PTR [ebp+0x5aa5396d]
  4040c2:	or     eax,0x1108c7c7
  4040c7:	fadd   DWORD PTR [eax]
  4040c9:	inc    ebp
  4040ca:	test   eax,0xab829cb4
  4040cf:	mov    ecx,0xc0a6177d
  4040d4:	loope  0x404101
  4040d6:	inc    ebx
  4040d7:	out    0x29,al
  4040d9:	pop    ds
  4040da:	mov    edx,0x92893ab6
  4040df:	pop    DWORD PTR [ebp-0x6e]
  4040e2:	fnsave [esi]
  4040e4:	(bad)  
  4040e5:	pusha  
  4040e6:	lock inc edi
  4040e8:	xor    BYTE PTR [edi-0x75da21f],dl
  4040ee:	pause  
  4040f0:	ins    DWORD PTR es:[edi],dx
  4040f1:	stos   BYTE PTR es:[edi],al
  4040f2:	pop    ebx
  4040f3:	rcl    DWORD PTR [edi+0x37],1
  4040f6:	xor    BYTE PTR [ebp-0x1c174a8a],dh
  4040fc:	cmp    eax,DWORD PTR [ebp+0x1c]
  4040ff:	adc    edx,DWORD PTR [edi]
  404101:	mov    edx,0xd9c5568c
  404106:	stc    
  404107:	ds call 0xe087:0xf719e950
  40410f:	scas   al,BYTE PTR es:[edi]
  404110:	arpl   WORD PTR [ebp+0x339d6fc6],cx
  404116:	push   eax
  404117:	pop    edx
  404118:	test   al,0x64
  40411a:	sub    DWORD PTR [esi+0x4998acab],ecx
  404120:	sti    
  404121:	retf   
  404122:	test   ah,dh
  404124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404125:	xchg   ecx,edx
  404127:	dec    esi
  404128:	das    
  404129:	fwait
  40412a:	sti    
  40412b:	xor    eax,0xac300080
  404130:	and    DWORD PTR [esi+0xd5d57d7],edx
  404136:	cmp    dl,BYTE PTR [esi]
  404138:	mov    dl,ah
  40413a:	pop    esp
  40413b:	pop    edx
  40413c:	inc    ebx
  40413d:	fwait
  40413e:	sbb    al,0xd9
  404140:	sub    eax,0xb90a44e9
  404145:	xlat   BYTE PTR ds:[ebx]
  404146:	dec    esi
  404148:	(bad)  
  404149:	dec    ebp
  40414a:	mov    ?,WORD PTR [eax]
  40414c:	leave  
  40414d:	push   ebx
  40414e:	sub    DWORD PTR [ebx+ecx*4],esi
  404151:	inc    esi
  404152:	jne    0x40415c
  404154:	and    ebx,DWORD PTR [ebx]
  404156:	(bad)  
  404157:	clc    
  404158:	daa    
  404159:	fsubr  DWORD PTR [esi]
  40415b:	aam    0x80
  40415d:	mov    dh,ah
  40415f:	test   eax,0xc41a2afe
  404164:	dec    DWORD PTR [ecx+0x9b5d224]
  40416a:	jl     0x404156
  40416c:	sbb    DWORD PTR [edi+0x7a],ebp
  40416f:	mov    cl,0xb
  404171:	retf   
  404172:	inc    edx
  404173:	push   ecx
  404174:	fisub  DWORD PTR [eax+0x1c221c38]
  40417a:	out    0x27,al
  40417c:	xchg   esp,eax
  40417d:	pop    es
  40417e:	addr16 sbb eax,0xe96b885c
  404184:	adc    BYTE PTR [eax+0x1],ah
  404187:	xor    DWORD PTR [edi],0xffffffcf
  40418a:	jnp    0x40411a
  40418c:	adc    eax,DWORD PTR [edi-0xeffdd25]
  404192:	in     al,0xb1
  404194:	arpl   WORD PTR [edi-0x45dbcb94],si
  40419a:	sub    BYTE PTR [eax-0x1b4fa6a5],0x28
  4041a1:	jmp    0x40420b
  4041a3:	sahf   
  4041a4:	adc    eax,0x821e91ae
  4041a9:	repz cmp cl,BYTE PTR [ecx+0x47]
  4041ad:	test   DWORD PTR [ebp+0x41],ecx
  4041b0:	(bad)  
  4041b1:	adc    bh,BYTE PTR [esi]
  4041b3:	mov    ecx,0xd4a36dd5
  4041b8:	cli    
  4041b9:	jecxz  0x4041c8
  4041bb:	xchg   ecx,eax
  4041bc:	daa    
  4041bd:	fcmovbe st,st(5)
  4041bf:	out    dx,al
  4041c0:	adc    BYTE PTR [edi],ah
  4041c2:	in     eax,0xd1
  4041c4:	scas   al,BYTE PTR es:[edi]
  4041c5:	clc    
  4041c6:	mov    esp,0xf4fe9cbc
  4041cb:	dec    ebx
  4041cc:	imul   edi,DWORD PTR [esi+0x223d85d7],0x77
  4041d3:	fwait
  4041d4:	(bad)  
  4041d5:	xlat   BYTE PTR ds:[ebx]
  4041d6:	ins    BYTE PTR es:[edi],dx
  4041d7:	add    eax,0x83970d04
  4041dc:	mov    ebp,0x698be701
  4041e1:	out    dx,al
  4041e2:	xchg   esp,eax
  4041e3:	push   ss
  4041e4:	add    eax,0xaf7dea9b
  4041e9:	(bad)  
  4041ea:	mov    ebp,0xaf922287
  4041ef:	stos   BYTE PTR es:[edi],al
  4041f0:	in     al,0x46
  4041f2:	data16 fstp TBYTE PTR [ecx-0x42]
  4041f6:	test   DWORD PTR [esp+eax*1],ebx
  4041f9:	jnp    0x4041c2
  4041fb:	pop    edx
  4041fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fd:	push   0x845e2db5
  404202:	imul   edi,DWORD PTR [eax+0x3d8fda63],0xffffffe3
  404209:	jmp    0x433d:0x9113f77a
  404210:	lds    esi,FWORD PTR ds:[ebp+0x38557ed8]
  404217:	aaa    
  404218:	sbb    DWORD PTR [edi+0x2315dd99],ebx
  40421e:	aas    
  40421f:	mov    dh,0x5c
  404221:	inc    ebx
  404222:	push   edx
  404223:	icebp  
  404224:	jecxz  0x404263
  404226:	push   ss
  404227:	mov    edi,0xfec624ed
  40422c:	ins    DWORD PTR es:[edi],dx
  40422d:	out    dx,al
  40422e:	cmp    BYTE PTR [edi+0x45ca23b7],bl
  404234:	jecxz  0x4041e7
  404236:	imul   eax,ecx,0xffffff86
  404239:	es push esi
  40423b:	js     0x4041da
  40423d:	call   0x80b9bd06
  404242:	or     eax,0xce3fe8a9
  404247:	icebp  
  404248:	and    cl,bl
  40424a:	dec    esp
  40424b:	outs   dx,DWORD PTR ds:[esi]
  40424c:	fsubr  DWORD PTR [edx-0x73]
  40424f:	mov    esi,DWORD PTR [esi-0x50]
  404252:	xchg   esi,eax
  404253:	rcl    bl,cl
  404255:	xor    eax,0x5316d0d6
  40425a:	jmp    FWORD PTR [eax+0x37f57eec]
  404260:	sub    eax,0xb5ac9c73
  404265:	imul   eax,ebx,0x1a7ebc29
  40426b:	clc    
  40426c:	outs   dx,BYTE PTR ds:[esi]
  40426d:	sub    eax,0x38513e0d
  404272:	mov    esp,0x772249dd
  404277:	jbe    0x404279
  404279:	cmp    eax,0x3c2b603
  40427e:	jle    0x4042e7
  404280:	push   ebp
  404281:	(bad)  
  404282:	aam    0xd6
  404284:	jae    0x404214
  404286:	out    0x64,eax
  404288:	and    edi,0xcbfe5392
  40428e:	cmp    cl,BYTE PTR [esi-0x5778912]
  404294:	xchg   dl,cl
  404296:	fsubrp st(1),st
  404298:	loope  0x40426b
  40429a:	fsub   QWORD PTR [ebp+edi*8-0x14]
  40429e:	test   BYTE PTR [esi+ecx*2],dh
  4042a1:	mov    bl,0x8d
  4042a3:	pushf  
  4042a4:	mov    al,0x7d
  4042a6:	jecxz  0x4042ba
  4042a8:	outs   dx,BYTE PTR ds:[esi]
  4042a9:	and    BYTE PTR [eax+ebx*2-0x23eac4ee],bl
  4042b0:	or     eax,0x81d9a17f
  4042b5:	inc    ebx
  4042b6:	dec    ecx
  4042b7:	sub    edx,DWORD PTR [ebx-0x72]
  4042ba:	adc    edi,DWORD PTR [edx-0x6eb4be1e]
  4042c0:	mov    ebx,0x704c9c04
  4042c5:	push   ds
  4042c6:	(bad)  
  4042c8:	std    
  4042c9:	push   edx
  4042ca:	jge    0x404283
  4042cc:	das    
  4042cd:	and    ch,cl
  4042cf:	mov    al,0xbb
  4042d1:	aad    0xf
  4042d3:	pop    ecx
  4042d4:	jnp    0x4042b9
  4042d6:	inc    edx
  4042d7:	or     eax,0xc091b833
  4042dc:	test   eax,0x47ae39ec
  4042e1:	pop    ebp
  4042e2:	or     eax,0xf20ae6aa
  4042e7:	dec    ebx
  4042e8:	mov    eax,ds:0xad7ea6a7
  4042ed:	ror    ah,cl
  4042ef:	in     al,0x7f
  4042f1:	add    bh,0x4f
  4042f4:	mov    ds:0xc18891d5,al
  4042f9:	popf   
  4042fa:	jns    0x404308
  4042fc:	xchg   edx,eax
  4042fd:	popf   
  4042fe:	jmp    0x4042e9
  404300:	jno    0x404349
  404302:	fisubr WORD PTR [esi-0x44]
  404305:	push   ebx
  404306:	add    eax,0xa94d80c4
  40430b:	inc    esi
  40430c:	and    eax,0x4afb7321
  404311:	or     edx,DWORD PTR [esi-0x36]
  404314:	adc    eax,0x574a494b
  404319:	popf   
  40431a:	aaa    
  40431b:	sahf   
  40431c:	ss dec ecx
  40431e:	repnz fwait
  404320:	dec    ebx
  404321:	mov    al,0xcd
  404323:	mov    ds:0x35b4fc0e,al
  404328:	mov    ch,0x95
  40432a:	adc    ecx,ebp
  40432c:	int3   
  40432d:	cmp    BYTE PTR [edi+eiz*4+0x6823fe01],dh
  404334:	cld    
  404335:	inc    ebp
  404336:	and    DWORD PTR ds:0xace73487,0x67
  40433d:	jge    0x404359
  40433f:	jb     0x4042d4
  404341:	and    eax,DWORD PTR [esi]
  404343:	cmp    dh,BYTE PTR [ebp+0x24590418]
  404349:	mov    edi,0x10409fc7
  40434e:	sub    eax,DWORD PTR [eax-0x2]
  404351:	aaa    
  404352:	add    DWORD PTR gs:[edi],esp
  404355:	sbb    DWORD PTR [ecx+edx*4-0x6c],edi
  404359:	xor    esi,DWORD PTR [esi+0x7a]
  40435c:	dec    eax
  40435d:	fist   DWORD PTR [ebx-0x5b89e171]
  404363:	jge    0x4042fc
  404365:	int    0x9c
  404367:	push   0x15
  404369:	fimul  WORD PTR [eax+0x1ea90419]
  40436f:	mov    edx,0x657e1089
  404374:	scas   al,BYTE PTR es:[edi]
  404375:	in     eax,0xf3
  404377:	add    dl,BYTE PTR ds:0x643f3e43
  40437d:	mov    ds:0xeb9b8cc0,al
  404383:	in     eax,0xc9
  404385:	push   edi
  404386:	div    DWORD PTR [ecx-0x5]
  404389:	and    al,0x17
  40438b:	in     al,dx
  40438c:	xchg   ebp,eax
  40438d:	shl    BYTE PTR [edx+esi*1-0x40ac735d],1
  404394:	inc    ecx
  404395:	or     ebx,DWORD PTR [edx+edx*8+0x5c3773ea]
  40439c:	data16 fmulp st(2),st
  40439f:	pop    edi
  4043a0:	sbb    DWORD PTR [edi+0x284e4159],esi
  4043a6:	ds int 0x42
  4043a9:	fs sahf 
  4043ab:	out    dx,al
  4043ac:	mov    ch,0x84
  4043ae:	cmp    DWORD PTR [esi+ebp*8-0x1cd24471],ebp
  4043b5:	out    0x3a,eax
  4043b7:	mov    eax,0x8acc3e52
  4043bc:	out    0x9c,eax
  4043be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bf:	stos   BYTE PTR es:[edi],al
  4043c0:	jmp    0xe292155e
  4043c5:	les    edi,FWORD PTR [edx]
  4043c7:	xor    BYTE PTR [ebx-0x3c],0xbe
  4043cb:	ins    BYTE PTR es:[edi],dx
  4043cc:	sbb    BYTE PTR [edx+0x1f],ch
  4043cf:	fs xchg ebx,eax
  4043d1:	adc    dh,BYTE PTR [edx+0xd]
  4043d4:	neg    BYTE PTR [ecx-0x1b]
  4043d7:	int3   
  4043d8:	xchg   esp,eax
  4043d9:	call   0xb38ea38f
  4043de:	push   eax
  4043df:	jb     0x4043c6
  4043e1:	aam    0xc6
  4043e3:	je     0x404456
  4043e5:	call   0x211c:0xa5b53d6f
  4043ec:	dec    edx
  4043ed:	mov    ebx,0x301efc5d
  4043f2:	dec    esi
  4043f3:	cmp    bh,bl
  4043f5:	ror    BYTE PTR [eax-0x70],1
  4043f8:	adc    BYTE PTR [ecx+0xb0a9c0b],bh
  4043fe:	test   eax,0x261d59e6
  404403:	leave  
  404404:	pop    ecx
  404405:	fst    DWORD PTR [ebx+0x75]
  404408:	mov    ch,0xd9
  40440a:	xor    BYTE PTR [eax],0x7b
  40440d:	(bad)  
  40440e:	sti    
  40440f:	sub    BYTE PTR [edi+ebx*4+0x7cccc5e],al
  404416:	nop
  404417:	int3   
  404418:	les    ebx,FWORD PTR [edx-0x27]
  40441b:	sub    al,0x3e
  40441d:	push   0x42
  40441f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404420:	scas   al,BYTE PTR es:[edi]
  404421:	pop    ds
  404422:	add    DWORD PTR [edx-0x43],esi
  404425:	loopne 0x404419
  404427:	lock fdivr DWORD PTR [ebp-0x232fc5e0]
  40442e:	ja     0x40448c
  404430:	inc    esp
  404431:	add    eax,0x3f70f704
  404436:	mov    edi,0x1d530c64
  40443b:	and    ch,BYTE PTR [ebx-0x3792e2fc]
  404441:	xchg   esp,eax
  404442:	mov    ecx,0xb1aaccd9
  404447:	mov    edi,0xe64b0379
  40444c:	sbb    cl,BYTE PTR [esi-0x12bc8110]
  404452:	push   0x30dfa734
  404457:	sub    DWORD PTR ds:0xe2359266,0xffffff97
  40445e:	jge    0x404432
  404460:	push   esi
  404461:	leave  
  404462:	stos   DWORD PTR es:[edi],eax
  404463:	aaa    
  404464:	ror    DWORD PTR [ebp-0x7b654b84],cl
  40446a:	aas    
  40446b:	or     eax,DWORD PTR [ebp-0x2a]
  40446e:	aad    0x7e
  404470:	dec    esp
  404471:	pop    ss
  404472:	fwait
  404473:	pop    esi
  404474:	or     BYTE PTR [eax+0x9],dh
  404477:	out    dx,al
  404478:	push   ss
  404479:	and    ebx,DWORD PTR [eax]
  40447b:	pop    ss
  40447c:	sar    DWORD PTR [ebp-0x20025b56],1
  404482:	in     eax,0xb2
  404484:	ss in  eax,0xc
  404487:	cwde   
  404488:	retf   0x89b4
  40448b:	sbb    BYTE PTR [ebx],bl
  40448d:	je     0x40444d
  40448f:	mov    cs,WORD PTR [ebx]
  404491:	mov    ecx,0x19e7b51b
  404496:	cmp    al,0xe5
  404498:	test   al,0x21
  40449a:	push   esp
  40449b:	sub    BYTE PTR [edi-0x28],al
  40449e:	int    0x32
  4044a0:	push   ebp
  4044a1:	test   DWORD PTR [edx],0xcdbb2892
  4044a7:	je     0x40451b
  4044a9:	xchg   ebx,eax
  4044aa:	jbe    0x404504
  4044ac:	scas   eax,DWORD PTR es:[edi]
  4044ad:	mov    edx,0xc72d6875
  4044b2:	mov    ds:0xfab24b68,al
  4044b7:	push   ebx
  4044b8:	cmc    
  4044b9:	mov    dl,BYTE PTR [esi+0x6d]
  4044bc:	jmp    0x8256ca92
  4044c1:	dec    eax
  4044c2:	xchg   ecx,eax
  4044c3:	mov    cl,BYTE PTR ds:0x5df92b5e
  4044c9:	cmp    DWORD PTR [edx-0x6a26f4fd],edx
  4044cf:	mov    eax,ds:0x3afd3811
  4044d4:	pop    esp
  4044d5:	shl    BYTE PTR [edi+0x546652dc],cl
  4044db:	in     eax,dx
  4044dc:	xchg   edx,eax
  4044dd:	mov    al,ds:0xcc3f6746
  4044e2:	jae    0x404545
  4044e4:	sub    ecx,eax
  4044e6:	pushf  
  4044e7:	repnz xor BYTE PTR ds:0x1f6f1630,cl
  4044ee:	adc    al,dh
  4044f0:	inc    ebx
  4044f1:	das    
  4044f2:	js     0x4044df
  4044f4:	cmp    DWORD PTR [ecx+0xe902075],esp
  4044fa:	xor    DWORD PTR [edx-0x6d],esp
  4044fd:	(bad)  
  4044fe:	mov    ch,0x19
  404500:	mov    ebp,0x710980fd
  404505:	or     al,0xbc
  404507:	xchg   edi,eax
  404508:	jne    0x4044a9
  40450a:	dec    ecx
  40450b:	mov    ds:0x7126f3cd,al
  404510:	pop    ds
  404511:	adc    al,BYTE PTR [esi]
  404513:	je     0x4044f7
  404515:	pop    esp
  404516:	iret   
  404517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404518:	sbb    eax,DWORD PTR [ebx+0x446264f3]
  40451e:	in     al,0x32
  404520:	out    dx,al
  404521:	or     dl,BYTE PTR [ecx+0x6f8bc9d1]
  404527:	push   0xffffff83
  404529:	fidivr DWORD PTR [eax-0x10]
  40452c:	xchg   esi,eax
  40452d:	fild   QWORD PTR [ebx+0x7e]
  404530:	jmp    0x915717e8
  404535:	dec    esi
  404536:	(bad)  
  404538:	mov    ebp,0x4d64088
  40453d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40453e:	cmp    ch,cl
  404540:	cli    
  404541:	fcom   DWORD PTR [ebx-0x42]
  404544:	aas    
  404545:	or     eax,0xa8d17f5f
  40454a:	out    dx,al
  40454b:	adc    al,0x6d
  40454d:	jle    0x4044ef
  40454f:	mov    al,0xd0
  404551:	gs loope 0x40453a
  404554:	mov    bh,0xf
  404556:	or     ebx,DWORD PTR [esi+0x25]
  404559:	jmp    0xa75e4104
  40455e:	arpl   WORD PTR [esp+ebp*8-0x30],di
  404562:	das    
  404563:	xchg   ebp,eax
  404564:	repz ret 
  404566:	adc    ebx,DWORD PTR [edi+eiz*8-0x3a]
  40456a:	into   
  40456b:	push   esi
  40456c:	lods   eax,DWORD PTR ds:[esi]
  40456d:	popf   
  40456e:	sub    al,0xbc
  404570:	cmp    edx,ebx
  404572:	aam    0x27
  404574:	push   edi
  404575:	push   ds
  404576:	arpl   WORD PTR [ecx],bx
  404578:	cmp    eax,0x839f9b01
  40457d:	iret   
  40457e:	scas   al,BYTE PTR es:[edi]
  40457f:	jns    0x4045a1
  404581:	retf   
  404582:	sub    al,0x53
  404584:	fld    DWORD PTR [esi-0x64ae286c]
  40458a:	jb     0x404518
  40458c:	and    dl,dh
  40458e:	arpl   WORD PTR [ebx+0x31],sp
  404591:	jmp    0x29eb32af
  404596:	and    ah,cl
  404598:	loopne 0x404528
  40459a:	mov    edi,eax
  40459c:	xor    al,0x23
  40459e:	cmp    edi,ecx
  4045a0:	stos   BYTE PTR es:[edi],al
  4045a1:	mov    edx,0x1b9a22f1
  4045a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a7:	ss xchg ebp,eax
  4045a9:	sbb    al,0x1
  4045ab:	pop    ss
  4045ac:	rcr    ch,1
  4045ae:	pop    ebx
  4045af:	in     eax,0x74
  4045b1:	call   0xc26c56eb
  4045b6:	mov    ebx,0x19b93bf3
  4045bb:	sub    al,0x27
  4045bd:	pop    esp
  4045be:	fcom   DWORD PTR [ebp+0x52]
  4045c1:	dec    ebx
  4045c2:	mov    dh,0x8d
  4045c4:	sub    al,0x37
  4045c6:	or     esp,DWORD PTR [edx]
  4045c8:	cmp    esi,esp
  4045ca:	ds cmp al,0xdd
  4045cd:	push   esi
  4045ce:	(bad)  [ecx]
  4045d0:	add    bl,BYTE PTR [edx+eax*8-0x71880b77]
  4045d7:	into   
  4045d8:	je     0x4045da
  4045da:	hlt    
  4045db:	in     al,dx
  4045dc:	or     esi,DWORD PTR [ecx-0x41e2e56a]
  4045e2:	dec    ebp
  4045e3:	push   DWORD PTR ds:0x4a692d75
  4045e9:	push   edi
  4045ea:	and    eax,0xb89a880a
  4045ef:	pop    es
  4045f0:	xchg   ebx,eax
  4045f1:	ja     0x4045bf
  4045f3:	lea    esi,[edi]
  4045f5:	inc    edx
  4045f6:	lea    eax,[ebp+0x10]
  4045f9:	fcom   DWORD PTR [eax+0x417eb029]
  4045ff:	cmp    ebx,ecx
  404601:	shr    ebx,1
  404603:	cmc    
  404604:	int    0xd5
  404606:	ror    BYTE PTR [ecx],0xab
  404609:	repnz daa 
  40460b:	mov    eax,ds:0xf20e3fbf
  404610:	sti    
  404611:	mov    ecx,DWORD PTR [ebx+eax*2-0x60]
  404615:	ror    bl,0xef
  404618:	ror    DWORD PTR [esi-0x493f66e7],cl
  40461e:	sub    bl,BYTE PTR [eax+0x69]
  404621:	into   
  404622:	hlt    
  404623:	daa    
  404624:	dec    ebx
  404625:	stos   BYTE PTR es:[edi],al
  404626:	js     0x404616
  404628:	inc    ecx
  404629:	rcl    BYTE PTR [edx],1
  40462b:	ret    0x12cd
  40462e:	jg     0x40464c
  404630:	adc    BYTE PTR [ebp+0x42],0x25
  404634:	js     0x404693
  404636:	fsub   DWORD PTR [esi-0xec6853a]
  40463c:	bound  ebx,QWORD PTR [ecx-0x1ffbfd]
  404642:	iret   
  404643:	lods   al,BYTE PTR fs:[esi]
  404645:	push   cs
  404646:	mov    eax,0xea1127a7
  40464b:	gs pop ds
  40464d:	jl     0x4045e5
  40464f:	inc    esi
  404650:	mov    al,ds:0xd9b426b2
  404655:	push   ebx
  404656:	adc    DWORD PTR [edi],esp
  404658:	xchg   ecx,eax
  404659:	lods   eax,DWORD PTR ds:[esi]
  40465a:	push   ebp
  40465b:	mov    eax,ds:0x8f7c480d
  404660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404661:	call   FWORD PTR [eax-0x2e]
  404664:	add    cl,BYTE PTR ds:0x91ed05be
  40466a:	inc    ecx
  40466b:	add    BYTE PTR [eax],ah
  40466d:	nop
  40466e:	or     DWORD PTR ds:0x67845ae2,edi
  404674:	sbb    al,BYTE PTR [esi]
  404676:	mov    ecx,0x8620b2a2
  40467b:	cmp    esp,DWORD PTR [esi]
  40467d:	test   DWORD PTR [ebx],esi
  40467f:	dec    ecx
  404680:	mov    ds,WORD PTR [ebp-0xc]
  404683:	push   ecx
  404684:	xor    DWORD PTR [eax+0x123cec2d],ebx
  40468a:	iret   
  40468b:	test   DWORD PTR ds:0xbfb12f38,esp
  404691:	cmp    BYTE PTR [esi],dl
  404693:	mov    ah,0xfe
  404695:	out    dx,al
  404696:	or     ah,BYTE PTR [ebx]
  404698:	fistp  QWORD PTR [edx-0x1a]
  40469b:	add    eax,0xb6c775d2
  4046a0:	js     0x4046aa
  4046a2:	jnp    0x4046ae
  4046a4:	cmp    BYTE PTR es:[edi],ah
  4046a7:	xchg   ebp,eax
  4046a8:	aaa    
  4046a9:	loopne 0x404664
  4046ab:	adc    DWORD PTR [edx],esi
  4046ad:	inc    ebp
  4046ae:	cmp    al,0x96
  4046b0:	and    BYTE PTR [ecx+0x1f24405a],0xab
  4046b7:	ds jno 0x40467c
  4046ba:	out    0x2a,al
  4046bc:	cmovg  edi,DWORD PTR [esi*4-0x7bc3b989]
  4046c4:	(bad)  
  4046c5:	xor    esi,DWORD PTR [ecx+0x4f]
  4046c8:	xchg   esp,eax
  4046c9:	mov    dh,0xb6
  4046cb:	push   esp
  4046cc:	popf   
  4046cd:	or     al,0x72
  4046cf:	(bad)  
  4046d0:	sub    esp,DWORD PTR [esi-0x1c]
  4046d3:	sbb    bl,BYTE PTR [edi]
  4046d5:	xchg   esi,eax
  4046d6:	pop    edi
  4046d7:	mov    ecx,0x37665af2
  4046dc:	ret    
  4046dd:	sub    cl,BYTE PTR fs:[eax]
  4046e0:	pop    ss
  4046e1:	mov    ds:0x319eef5f,al
  4046e6:	mov    ecx,0x2edefa02
  4046eb:	mov    bl,0xc0
  4046ed:	mov    ds:0x53400934,al
  4046f2:	mov    al,ds:0x67dceca1
  4046f7:	pcmpgtd mm2,mm7
  4046fa:	xchg   eax,esp
  4046fc:	jecxz  0x4046af
  4046fe:	xchg   esp,eax
  4046ff:	mov    edi,edi
  404701:	mov    bh,0xfc
  404703:	jo     0x4046fc
  404705:	les    ebp,FWORD PTR [ebp-0x43]
  404708:	out    dx,al
  404709:	mov    ecx,0x25ad8464
  40470e:	xchg   edx,eax
  40470f:	imul   ebx,esi,0xfc7c949e
  404715:	xor    esi,DWORD PTR [ebx-0x350a7cc9]
  40471b:	push   es
  40471c:	or     ebp,DWORD PTR [ebx+0x3d]
  40471f:	(bad)  
  404720:	mov    bh,0xd5
  404722:	test   al,0xa6
  404724:	das    
  404725:	cli    
  404726:	sbb    BYTE PTR [ebx-0x4e],al
  404729:	inc    ecx
  40472a:	ds stc 
  40472c:	in     eax,dx
  40472d:	jmp    0x404703
  40472f:	aas    
  404730:	bound  esi,QWORD PTR [edi+0x3f7bfa8f]
  404736:	out    dx,eax
  404737:	ja     0x40474f
  404739:	inc    BYTE PTR [edi-0x1a78614c]
  40473f:	std    
  404740:	ret    
  404741:	or     ch,BYTE PTR [edx-0x4feafab4]
  404747:	(bad)  
  404749:	(bad)  
  40474b:	ss cmp eax,0x5aec7437
  404751:	cmc    
  404752:	call   0xd84849d2
  404757:	dec    ebp
  404758:	popa   
  404759:	adc    eax,0xd07c7006
  40475e:	pusha  
  40475f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404760:	xlat   BYTE PTR ds:[ebx]
  404761:	out    dx,eax
  404762:	jo     0x4047a6
  404764:	xchg   edi,eax
  404765:	jno    0x40472e
  404767:	sahf   
  404768:	jmp    0x404777
  40476a:	in     eax,dx
  40476b:	dec    BYTE PTR [esi+0x2ef513aa]
  404771:	fcomp  QWORD PTR [edx+0x18]
  404774:	js     0x404762
  404776:	repz call 0xc170:0x1a49c163
  40477e:	jo     0x4047ce
  404780:	fistp  WORD PTR [esi-0x27b955e1]
  404786:	adc    bl,BYTE PTR fs:[eax+0x71673e4f]
  40478d:	fwait
  40478e:	cmp    edx,ebp
  404790:	test   DWORD PTR ds:0x1f390164,0xe714409c
  40479a:	push   esp
  40479b:	adc    eax,0x19f4c38a
  4047a0:	and    BYTE PTR [ebp-0x10a6e223],dh
  4047a6:	dec    esp
  4047a7:	jb     0x4047d9
  4047a9:	xor    al,0x78
  4047ab:	push   esp
  4047ac:	push   ds
  4047ad:	and    bl,dl
  4047af:	dec    esi
  4047b0:	and    ah,dh
  4047b2:	jg     0x4047a5
  4047b4:	sbb    edi,DWORD PTR [eax+0x23]
  4047b7:	ret    
  4047b8:	jle    0x4047f0
  4047ba:	sbb    eax,0x82b8d748
  4047bf:	ss or  ebx,esi
  4047c2:	pop    edi
  4047c3:	call   0x7c5b7230
  4047c8:	mov    fs,WORD PTR [esi+0x14715f8e]
  4047ce:	je     0x4047b2
  4047d0:	cld    
  4047d1:	es mov ecx,0xf985d5fa
  4047d7:	xor    ch,BYTE PTR [eax-0x20]
  4047da:	ret    
  4047db:	pop    esp
  4047dc:	add    dl,BYTE PTR [esp+ebx*8+0x134cc152]
  4047e3:	cmc    
  4047e4:	push   eax
  4047e5:	xchg   DWORD PTR [eax+ebx*2-0x60],ebp
  4047e9:	mov    eax,0x1756275a
  4047ee:	sahf   
  4047ef:	movq   mm6,QWORD PTR [eax+0x43]
  4047f3:	sbb    al,0x5e
  4047f5:	xchg   ebx,eax
  4047f6:	xchg   edx,eax
  4047f7:	sbb    ebp,DWORD PTR [ebp+0x416374a]
  4047fd:	or     al,0x34
  4047ff:	aaa    
  404800:	jmp    0x4047cc
  404802:	sub    dl,BYTE PTR [eax]
  404804:	cld    
  404805:	std    
  404806:	popa   
  404807:	mov    bh,0x67
  404809:	fcomip st,st(6)
  40480b:	leave  
  40480c:	call   0x281c1159
  404811:	loope  0x404863
  404813:	rcr    BYTE PTR [ecx+ebp*2+0x3b037811],cl
  40481a:	stos   DWORD PTR es:[edi],eax
  40481b:	mov    ah,BYTE PTR fs:[ebx-0x6eb2d73e]
  404822:	push   edx
  404823:	dec    edi
  404824:	dec    eax
  404825:	fidiv  DWORD PTR [edi]
  404827:	fild   QWORD PTR [ebx]
  404829:	sub    eax,0x86236aca
  40482e:	out    0xe2,eax
  404830:	scas   al,BYTE PTR es:[edi]
  404831:	es push eax
  404833:	mov    DWORD PTR [eax],ebx
  404835:	push   esp
  404836:	pop    ss
  404837:	test   DWORD PTR [eax+eiz*8+0x6d32e949],ecx
  40483e:	sti    
  40483f:	jg     0x404801
  404841:	dec    edx
  404842:	dec    ebx
  404843:	cmp    DWORD PTR [eax+0x7d71847],ebx
  404849:	ffreep st(6)
  40484b:	out    dx,al
  40484c:	mov    esp,0x28fb532c
  404851:	jecxz  0x4048c0
  404853:	pop    ss
  404854:	leave  
  404855:	fst    QWORD PTR [edi]
  404857:	loopne 0x404888
  404859:	add    eax,0x50142157
  40485e:	mov    DWORD PTR [ebx-0x5e],edi
  404861:	adc    ah,dh
  404863:	xchg   ebx,eax
  404864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404865:	or     al,0x28
  404867:	scas   al,BYTE PTR es:[edi]
  404868:	inc    dx
  40486a:	xchg   ebx,eax
  40486b:	mov    esi,eax
  40486d:	test   al,0x5
  40486f:	sub    BYTE PTR [ecx],0xc0
  404872:	adc    al,bl
  404874:	and    al,0xba
  404876:	push   0x71
  404878:	hlt    
  404879:	mov    dh,0x61
  40487b:	and    dl,BYTE PTR [edi+0x6d]
  40487e:	enter  0x500a,0x53
  404882:	div    DWORD PTR [ebp+ecx*8+0x59]
  404886:	sqrtps xmm3,XMMWORD PTR ds:0x1d08fb7e
  40488d:	cwde   
  40488e:	sbb    eax,0xeb40439e
  404893:	fbld   TBYTE PTR ds:0x16d308c0
  404899:	xchg   ebx,eax
  40489a:	out    0xdf,eax
  40489c:	mov    eax,ds:0xb1f7636f
  4048a1:	push   ebp
  4048a2:	sub    ch,dl
  4048a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a5:	xchg   ebp,eax
  4048a6:	out    dx,al
  4048a7:	repz stc 
  4048a9:	push   edi
  4048aa:	bound  esi,QWORD PTR fs:[esi+0x69122fff]
  4048b1:	gs jg  0x404895
  4048b4:	jg     0x4048f5
  4048b6:	out    dx,eax
  4048b7:	sti    
  4048b8:	out    0x68,eax
  4048ba:	fnstsw WORD PTR [edi-0x5b]
  4048bd:	fcmovne st,st(7)
  4048bf:	mov    al,0x19
  4048c1:	add    BYTE PTR [eax+ebx*4+0x2fccafd3],al
  4048c8:	sub    BYTE PTR [ebp-0x5e],bh
  4048cb:	cmp    ebx,DWORD PTR [ebx-0x4d]
  4048ce:	cmp    eax,0xeb912a22
  4048d3:	dec    esp
  4048d4:	and    ch,BYTE PTR [ebx]
  4048d6:	mov    DWORD PTR [esi+0x27],ebp
  4048d9:	mov    ch,0x8a
  4048db:	sub    DWORD PTR [ebx],ebp
  4048dd:	xchg   BYTE PTR [edi],al
  4048df:	rol    DWORD PTR [edi+edx*1],0x61
  4048e3:	and    al,0x14
  4048e5:	xor    DWORD PTR [ecx],ebp
  4048e7:	mov    dh,0x9a
  4048e9:	scas   eax,DWORD PTR es:[edi]
  4048ea:	xor    dh,bl
  4048ec:	pop    esi
  4048ed:	xchg   DWORD PTR [ecx+0x45],ecx
  4048f0:	inc    edx
  4048f1:	ror    BYTE PTR [ebp-0x582f9d7c],cl
  4048f7:	in     eax,dx
  4048f8:	ds adc al,0xb8
  4048fb:	inc    esp
  4048fc:	push   ss
  4048fd:	dec    eax
  4048fe:	test   eax,0xa984658
  404903:	fiadd  WORD PTR [edi+esi*1+0x77dbbe1d]
  40490a:	clc    
  40490b:	(bad)  
  40490c:	jp     0x4048ea
  40490e:	xchg   esp,eax
  40490f:	jl     0x404975
  404911:	adc    DWORD PTR [eax+0x2ab09372],edx
  404917:	cmp    BYTE PTR [edx],bl
  404919:	jb     0x404972
  40491b:	mov    BYTE PTR [edi-0x5b],0x51
  40491f:	inc    ecx
  404920:	arpl   WORD PTR [ebx+0x4b],sp
  404923:	push   eax
  404924:	nop
  404925:	mov    gs:0xd158c19,eax
  40492b:	cwde   
  40492c:	in     al,dx
  40492d:	lock cmp DWORD PTR ds:0xe8b91702,edi
  404934:	in     eax,0x47
  404936:	out    dx,al
  404937:	daa    
  404938:	pop    ds
  404939:	inc    ebp
  40493a:	imul   esp,DWORD PTR [ecx-0x41],0xffffffe7
  40493e:	mov    eax,DWORD PTR [ebx-0x42e9a517]
  404944:	sar    BYTE PTR [ebx+0xd],0xaf
  404948:	push   gs
  40494a:	test   al,0x75
  40494c:	xchg   esi,eax
  40494d:	or     DWORD PTR ds:0x7ba7f521,0x6d9f47b7
  404957:	dec    ecx
  404958:	in     al,dx
  404959:	ja     0x4048fb
  40495b:	int    0xa2
  40495d:	aad    0xfa
  40495f:	push   esp
  404960:	hlt    
  404961:	(bad)
  404964:	jmp    0xdd6d2e0b
  404969:	shr    bh,0x15
  40496c:	arpl   ax,ax
  40496e:	mov    dh,0xd1
  404970:	enter  0x813b,0x35
  404974:	push   esi
  404975:	mov    es,esp
  404977:	mov    ebx,DWORD PTR [ebp+0x5ae94025]
  40497d:	pop    ss
  40497e:	pop    ss
  40497f:	jge    0x4049e9
  404981:	xchg   edx,eax
  404982:	sbb    DWORD PTR [ecx],edx
  404984:	inc    ebp
  404985:	and    al,0xc2
  404987:	loop   0x404932
  404989:	xlat   BYTE PTR ds:[ebx]
  40498a:	and    DWORD PTR [eax],0x28cc4c9d
  404990:	(bad)  
  404991:	retf   
  404992:	or     al,BYTE PTR [edx]
  404994:	dec    ebp
  404995:	orps   xmm0,XMMWORD PTR [ecx+0x64f0ce]
  40499c:	add    BYTE PTR [edx+0x751089b],bh
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0xa6c59025
  4056ec:	std    
  4056ed:	rcr    DWORD PTR [edi+0x7c],cl
  4056f0:	jl     0x40573c
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	sbb    DWORD PTR [eax+0x10e6421b],0x2bae3b8b
  4056ff:	js     0x4056bd
  405701:	xchg   ebx,eax
  405702:	gs cwde 
  405704:	out    0x12,eax
  405706:	pop    esi
  405707:	jl     0x40570d
  405709:	sbb    BYTE PTR [edx-0x3af31d93],dl
  40570f:	push   es
  405710:	push   0xdfcebe2b
  405715:	(bad)  
  405716:	(bad)  
  405717:	aaa    
  405718:	pushf  
  405719:	ss call 0x98d2973a
  40571f:	jbe    0x4056ac
  405721:	adc    DWORD PTR [ebp-0x1],edi
  405724:	lahf   
  405725:	fwait
  405726:	mov    ebx,0x626d06fe
  40572b:	cmp    al,0x66
  40572d:	outs   dx,DWORD PTR ds:[esi]
  40572e:	add    cl,BYTE PTR [edi]
  405730:	adc    eax,0x579729a6
  405735:	jne    0x405767
  405737:	popa   
  405738:	shl    BYTE PTR [ecx+0x1f1d116e],0xd4
  40573f:	inc    ebx
  405740:	inc    ebx
  405741:	hlt    
  405742:	outs   dx,DWORD PTR ds:[esi]
  405743:	dec    ebp
  405744:	adc    eax,0x3a58b5df
  405749:	leave  
  40574a:	lods   eax,DWORD PTR ds:[esi]
  40574b:	dec    esi
  40574c:	outs   dx,BYTE PTR ds:[esi]
  40574d:	enter  0x8fe,0x29
  405751:	and    eax,0x203a6dc
  405756:	xchg   edi,eax
  405757:	outs   dx,BYTE PTR ds:[esi]
  405758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405759:	loopne 0x405740
  40575b:	aam    0x24
  40575d:	mov    edi,0x441deb2f
  405762:	add    eax,0x54420b7d
  405767:	dec    ecx
  405768:	(bad)  
  405769:	mov    dl,0x2
  40576b:	adc    esi,DWORD PTR [edi]
  40576d:	inc    eax
  40576e:	fbld   TBYTE PTR [eax*2+0x4a7fe299]
  405775:	pop    ebp
  405776:	mov    ch,0xbc
  405778:	cld    
  405779:	sbb    al,0x23
  40577b:	xchg   ecx,eax
  40577c:	or     al,0xc3
  40577e:	fidivr DWORD PTR es:[edi+0x11]
  405782:	mov    esi,0xa0385cef
  405787:	loopne 0x4057fe
  405789:	mov    ch,0xe2
  40578b:	xlat   BYTE PTR ds:[ebx]
  40578c:	push   esi
  40578d:	ins    DWORD PTR es:[edi],dx
  40578e:	fcom   DWORD PTR [esi+ecx*8+0x23861cb8]
  405795:	sti    
  405796:	xchg   ebp,eax
  405797:	rcr    DWORD PTR [eax],1
  405799:	jno    0x40577c
  40579b:	stos   WORD PTR es:[edi],ax
  40579d:	lea    esi,[ebp-0x3]
  4057a0:	outs   dx,BYTE PTR ds:[esi]
  4057a1:	xor    eax,0x40ced426
  4057a6:	mov    eax,0xba04f9ba
  4057ab:	cmp    BYTE PTR [ecx+0x58],ah
  4057ae:	push   esi
  4057af:	mov    ch,0xd6
  4057b1:	pusha  
  4057b2:	push   esi
  4057b3:	cwde   
  4057b4:	ret    0x8f96
  4057b7:	pop    ss
  4057b8:	inc    edi
  4057b9:	inc    ebx
  4057ba:	aam    0xf8
  4057bc:	xchg   esp,eax
  4057bd:	ja     0x40579d
  4057bf:	fimul  WORD PTR [eax-0x23]
  4057c2:	call   0x357d:0xe868faa1
  4057c9:	stos   BYTE PTR es:[edi],al
  4057ca:	adc    eax,0x3a8dce1f
  4057cf:	fcomp  DWORD PTR [ecx-0x6757c1a1]
  4057d5:	xor    DWORD PTR [esi+0x20aaa5f4],edx
  4057db:	add    eax,0x61c7037d
  4057e0:	rcl    ah,0x6a
  4057e3:	xchg   esp,eax
  4057e4:	mov    ?,WORD PTR [ecx-0x44]
  4057e7:	(bad)  
  4057e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e9:	retf   
  4057ea:	cmp    ebx,DWORD PTR [ebx+0x23]
  4057ed:	dec    edx
  4057ee:	add    DWORD PTR [edi],edi
  4057f0:	jno    0x405789
  4057f2:	in     eax,0x35
  4057f4:	xor    ah,al
  4057f6:	neg    al
  4057f8:	jmp    0xf321f57a
  4057fd:	dec    ebx
  4057fe:	adc    DWORD PTR [ebp+0x1f],edx
  405801:	scas   eax,DWORD PTR es:[edi]
  405802:	xchg   ebx,eax
  405803:	outs   dx,BYTE PTR ds:[esi]
  405804:	push   0xffffff84
  405806:	call   0x7445ddfd
  40580b:	and    al,0x12
  40580d:	std    
  40580e:	push   eax
  40580f:	icebp  
  405810:	xchg   esi,eax
  405811:	jge    0x40588b
  405813:	scas   eax,DWORD PTR es:[edi]
  405814:	mov    ah,0x2
  405816:	dec    edi
  405817:	je     0x4057f5
  405819:	mov    ch,0x7d
  40581b:	(bad)  [eax]
  40581d:	clc    
  40581e:	imul   ebp,DWORD PTR [ebp-0x74467718],0x74
  405825:	mov    cl,al
  405827:	loop   0x4058a8
  405829:	mov    edx,0x11f9ac73
  40582e:	int    0xfe
  405830:	mov    ds:0x59e08601,eax
  405835:	fucomip st,st(4)
  405837:	add    eax,0x3dcc7a28
  40583c:	into   
  40583d:	mov    dh,0xb8
  40583f:	jno    0x405814
  405841:	mov    eax,0x1043b746
  405846:	pop    edx
  405847:	mov    ds:0x8b8506ed,eax
  40584c:	leave  
  40584d:	and    ebx,ecx
  40584f:	inc    eax
  405850:	rcl    BYTE PTR ds:0xf6ff032b,0x5d
  405857:	xor    cl,BYTE PTR [edi+edx*8]
  40585a:	push   es
  40585b:	sbb    esp,DWORD PTR [eax+eiz*8+0x54]
  40585f:	loopne 0x405880
  405861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405862:	bnd jle 0x405833
  405865:	push   es
  405866:	retf   0x8fab
  405869:	not    eax
  40586b:	pop    es
  40586c:	push   esi
  40586d:	fld    QWORD PTR [ebx]
  40586f:	dec    edi
  405870:	cmp    BYTE PTR [ecx-0x3c],ch
  405873:	scas   al,BYTE PTR es:[edi]
  405874:	pop    ss
  405875:	repnz or eax,0xf298152a
  40587b:	imul   esp,DWORD PTR [ebx-0x3fce861],0xb
  405882:	and    ebx,DWORD PTR [ebp+0x1e3da018]
  405888:	mov    al,ds:0x154c79a
  40588d:	fucomi st,st(3)
  40588f:	and    BYTE PTR [esi+0x57],0x7b
  405893:	fdiv   DWORD PTR [ebp+edx*8+0x1c8e7e70]
  40589a:	std    
  40589b:	lea    edx,[ecx-0xa]
  40589e:	aas    
  40589f:	out    0xc1,al
  4058a1:	or     DWORD PTR [ecx+0x64],0x1f
  4058a5:	jmp    0x40584b
  4058a7:	icebp  
  4058a8:	arpl   sp,ax
  4058aa:	pop    ss
  4058ab:	das    
  4058ac:	mov    esi,0x407a8a18
  4058b1:	es push 0x5380e57a
  4058b7:	enter  0xda2a,0x19
  4058bb:	mov    DWORD PTR [ebp+0xc],eax
  4058be:	jo     0x40593d
  4058c0:	jle    0x4058ab
  4058c2:	sbb    edx,0xa83ddd24
  4058c8:	outs   dx,DWORD PTR ds:[esi]
  4058c9:	xchg   DWORD PTR [ecx-0x1f458e66],eax
  4058cf:	add    dh,BYTE PTR [eax-0x61b7018]
  4058d5:	or     al,BYTE PTR [edi+0x59d08541]
  4058db:	jae    0x4058f8
  4058dd:	xor    al,0x47
  4058df:	cmc    
  4058e0:	mov    cs,WORD PTR ds:0x1571318e
  4058e6:	lahf   
  4058e7:	cs out dx,al
  4058e9:	rcr    DWORD PTR [eax+0x70],1
  4058ec:	inc    ecx
  4058ed:	fwait
  4058ee:	pop    esp
  4058ef:	jmp    0x405955
  4058f1:	dec    esi
  4058f2:	call   0xc2596e3a
  4058f7:	and    cl,dl
  4058f9:	aaa    
  4058fa:	fadd   DWORD PTR [ebp+0x1edf7454]
  405900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405901:	inc    ebx
  405902:	outs   dx,BYTE PTR ds:[esi]
  405903:	mov    ebp,0x206ac80
  405908:	adc    DWORD PTR [bx+si-0x6b],ecx
  40590c:	mul    DWORD PTR [ecx-0x377a479a]
  405912:	(bad)  
  405913:	push   esi
  405914:	mov    al,0x22
  405916:	dec    edx
  405917:	loop   0x4058a1
  405919:	in     al,dx
  40591a:	jne    0x4058f2
  40591c:	ins    DWORD PTR es:[edi],dx
  40591d:	mov    BYTE PTR ds:0x32354712,dl
  405923:	lds    esi,FWORD PTR [eax-0x2aad6225]
  405929:	mov    dh,0x81
  40592b:	not    esi
  40592d:	int    0x6c
  40592f:	cs fwait
  405931:	or     al,0xd7
  405933:	lgs    ebx,FWORD PTR gs:[edx]
  405937:	int    0x22
  405939:	hlt    
  40593a:	cmp    al,0xf0
  40593c:	add    ah,BYTE PTR [ebx-0x353e478]
  405942:	xor    DWORD PTR fs:[esi+ebx*4-0x1f],0xd5b643e9
  40594b:	mov    ecx,0x72665a60
  405950:	in     al,0xa5
  405952:	jg     0x4059a9
  405954:	adc    BYTE PTR [edx+0x45],0x7
  405958:	pop    ebp
  405959:	add    DWORD PTR [eax+0x5f],0xffffffa5
  40595d:	pusha  
  40595e:	add    al,0xda
  405960:	cmp    al,0x91
  405962:	pushf  
  405963:	mov    dl,0x26
  405965:	imul   BYTE PTR [esi-0x79]
  405968:	cli    
  405969:	imul   ecx,DWORD PTR [ecx+0x5a2f42e1],0x20
  405970:	xor    BYTE PTR [edi+0x11b8dde2],0xd7
  405977:	popf   
  405978:	ss jmp 0x8d7e:0x6d48f5d9
  405980:	scas   eax,DWORD PTR es:[edi]
  405981:	test   BYTE PTR [edx-0x29ae3f18],cl
  405987:	lea    esi,[esi-0x11]
  40598a:	and    dl,al
  40598c:	cmp    edx,esi
  40598e:	mov    ebp,0x85a947cc
  405993:	push   ds
  405994:	mov    al,ds:0xedf35e37
  405999:	out    0x37,eax
  40599b:	mov    cl,0x26
  40599d:	sbb    ebp,DWORD PTR [edi+edx*8+0x19]
  4059a1:	(bad)  
  4059a2:	in     al,0x9c
  4059a4:	out    0xcb,al
  4059a6:	(bad)  
  4059a7:	arpl   bp,dx
  4059a9:	pop    eax
  4059aa:	fs xchg edi,eax
  4059ac:	int    0xc4
  4059ae:	aad    0xa4
  4059b0:	jbe    0x405a10
  4059b2:	ror    al,0x91
  4059b5:	popf   
  4059b6:	add    BYTE PTR [edx],cl
  4059b8:	jbe    0x405a0d
  4059ba:	inc    esi
  4059bb:	test   BYTE PTR [edi+0x3f],bh
  4059be:	jle    0x405947
  4059c0:	dec    esi
  4059c1:	or     ebp,0xffffffdc
  4059c4:	aam    0xdc
  4059c6:	(bad)  
  4059c7:	int3   
  4059c8:	cli    
  4059c9:	iret   
  4059ca:	and    al,0x4d
  4059cc:	dec    esi
  4059cd:	inc    ebp
  4059ce:	js     0x405995
  4059d0:	pop    esp
  4059d1:	(bad)  
  4059d2:	pop    eax
  4059d3:	pushf  
  4059d4:	test   al,0x2e
  4059d6:	int3   
  4059d7:	pop    eax
  4059d8:	out    0x6e,al
  4059da:	inc    edx
  4059db:	pop    ds
  4059dc:	mov    ds,ebp
  4059de:	jne    0x405975
  4059e0:	arpl   bp,ax
  4059e2:	es daa 
  4059e4:	data16 jns 0x4059e2
  4059e7:	jl     0x4059d9
  4059e9:	ins    BYTE PTR es:[edi],dx
  4059ea:	pop    ebp
  4059eb:	pop    ebp
  4059ec:	rcl    BYTE PTR [ebp+0x5d],0xd5
  4059f0:	jmp    0xd107:0x411378a1
  4059f7:	mov    ds:0x3c622c93,eax
  4059fc:	cmp    al,0x9f
  4059fe:	xor    dl,BYTE PTR [edi-0x4608b69c]
  405a04:	lods   eax,DWORD PTR ds:[esi]
  405a05:	inc    ebx
  405a06:	sbb    al,0x4e
  405a08:	sbb    al,0xdb
  405a0a:	gs mov edx,0x1511aaaa
  405a10:	(bad)  
  405a11:	out    0xa0,eax
  405a13:	in     al,0x6f
  405a15:	fidivr WORD PTR ds:0x7b4e1c8e
  405a1b:	fdiv   st,st(0)
  405a1d:	aaa    
  405a1e:	xor    eax,0x3018a8bd
  405a23:	pop    eax
  405a24:	push   ds
  405a25:	popa   
  405a26:	xchg   edx,eax
  405a27:	shl    BYTE PTR [ecx-0x63d3eebf],0x1a
  405a2e:	dec    edi
  405a2f:	sbb    DWORD PTR fs:[edi-0x62562d9],edi
  405a36:	mov    edx,0x1eae457b
  405a3b:	sub    BYTE PTR [edx+0x118e2a6f],0xb
  405a42:	das    
  405a43:	stos   DWORD PTR es:[edi],eax
  405a44:	retf   0x4a4
  405a47:	inc    edx
  405a48:	push   ds
  405a49:	pushf  
  405a4a:	add    ah,bl
  405a4c:	mov    bl,0xbd
  405a4e:	out    dx,al
  405a4f:	mov    esi,0xb7a8b2f2
  405a54:	stc    
  405a55:	out    dx,eax
  405a56:	pop    ss
  405a57:	push   0x7a
  405a59:	inc    esp
  405a5a:	mov    esp,0xd5c8aec9
  405a5f:	into   
  405a60:	(bad)
  405a63:	add    al,0x31
  405a65:	test   eax,0x2e903e5d
  405a6a:	dec    ebp
  405a6b:	cmp    al,BYTE PTR [eax+0x28]
  405a6e:	sahf   
  405a6f:	test   DWORD PTR [edx],0xa317438b
  405a75:	fimul  DWORD PTR [ecx-0x78]
  405a78:	sbb    DWORD PTR [edi+0x32],edx
  405a7b:	mov    al,0xb2
  405a7d:	mov    edx,0xe749ef2d
  405a82:	push   esp
  405a83:	bound  ebx,QWORD PTR [esi+0xc]
  405a86:	pop    ebx
  405a87:	retf   
  405a88:	mov    ah,0xbc
  405a8a:	test   eax,0x4c095552
  405a8f:	(bad)  
  405a90:	leave  
  405a91:	(bad)  
  405a92:	cmp    al,0xbc
  405a94:	(bad)  
  405a95:	es xchg ebp,eax
  405a97:	lea    eax,[ecx]
  405a99:	inc    edi
  405a9a:	fadd   DWORD PTR [edi+0x616ed57d]
  405aa0:	dec    eax
  405aa1:	adc    ebx,edx
  405aa3:	hlt    
  405aa4:	fild   WORD PTR [esi+0x1]
  405aa7:	and    ah,BYTE PTR [esi]
  405aa9:	push   esp
  405aaa:	out    dx,eax
  405aab:	dec    edx
  405aac:	stos   DWORD PTR es:[edi],eax
  405aad:	leave  
  405aae:	pop    es
  405aaf:	mov    edx,0x34624ed9
  405ab4:	jmp    0x70a4edc0
  405ab9:	xor    dh,bh
  405abb:	sbb    ebx,DWORD PTR [ebx+eiz*2+0x68]
  405abf:	jbe    0x405ac2
  405ac1:	jns    0x405a5d
  405ac3:	add    edx,DWORD PTR [edx-0x4dfb2690]
  405ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aca:	test   BYTE PTR [ebp-0x5f],al
  405acd:	std    
  405ace:	scas   al,BYTE PTR es:[edi]
  405acf:	lahf   
  405ad0:	and    BYTE PTR [esi-0x4d2f2f5d],bl
  405ad6:	aas    
  405ad7:	std    
  405ad8:	xchg   ebx,eax
  405ad9:	mov    bl,0xc0
  405adb:	mov    dl,BYTE PTR [esi-0x15]
  405ade:	lahf   
  405adf:	jb     0x405b11
  405ae1:	sub    dh,ah
  405ae3:	inc    esi
  405ae4:	adc    DWORD PTR [edx+0x2dddacfb],ebp
  405aea:	leave  
  405aeb:	mov    al,0x59
  405aed:	xor    eax,0x425aac0a
  405af2:	outs   dx,DWORD PTR ds:[esi]
  405af3:	aaa    
  405af4:	sar    DWORD PTR [ebx+0x54],1
  405af7:	jle    0x405b4a
  405af9:	test   DWORD PTR [esi+0x16],edx
  405afc:	pop    ebp
  405afd:	retf   0x21cf
  405b00:	cmc    
  405b01:	xchg   edi,eax
  405b02:	leave  
  405b03:	(bad)  
  405b04:	aaa    
  405b05:	out    dx,eax
  405b06:	ja     0x405aa3
  405b08:	dec    eax
  405b09:	sahf   
  405b0a:	pop    edx
  405b0b:	aad    0x64
  405b0d:	xor    eax,0x8ba5225a
  405b12:	sub    al,0xf2
  405b14:	sbb    ah,BYTE PTR [ebp+0x77]
  405b17:	xchg   esi,eax
  405b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b19:	and    BYTE PTR [eax],cl
  405b1b:	inc    ebx
  405b1c:	scas   al,BYTE PTR es:[edi]
  405b1d:	dec    esi
  405b1e:	add    al,0x34
  405b20:	loop   0x405aec
  405b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b23:	ins    DWORD PTR es:[edi],dx
  405b24:	pop    eax
  405b25:	lock mov ecx,ebx
  405b28:	mov    edi,0x19707cd8
  405b2d:	jecxz  0x405b00
  405b2f:	xor    al,0x18
  405b31:	xchg   ebp,eax
  405b32:	xchg   esi,eax
  405b33:	inc    ecx
  405b34:	mov    dh,0x8c
  405b36:	xchg   ecx,eax
  405b37:	cwde   
  405b38:	cld    
  405b39:	or     eax,0x7f9b40b0
  405b3e:	gs shr edx,cl
  405b41:	stos   DWORD PTR es:[edi],eax
  405b42:	shl    edx,cl
  405b44:	cmp    esp,esp
  405b46:	fcom   DWORD PTR [ebx-0x1058e828]
  405b4c:	jle    0x405b3f
  405b4e:	jae    0x405b1f
  405b50:	push   esi
  405b51:	pop    ss
  405b52:	push   0xffffffd1
  405b54:	stos   BYTE PTR es:[edi],al
  405b55:	into   
  405b56:	add    esp,edx
  405b58:	stos   DWORD PTR es:[edi],eax
  405b59:	and    edi,ebp
  405b5b:	dec    eax
  405b5c:	add    dh,BYTE PTR [ebx-0x38f44ac2]
  405b62:	int    0x41
  405b64:	jmp    0xe7cf:0x9e2929dc
  405b6b:	xor    eax,0x594fb30e
  405b70:	pushf  
  405b71:	push   ecx
  405b72:	hlt    
  405b73:	es push esi
  405b75:	adc    al,0x57
  405b77:	xchg   esp,eax
  405b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b79:	ss cmp eax,0x5520f37c
  405b7f:	stos   DWORD PTR es:[edi],eax
  405b80:	xor    BYTE PTR [eax+ebp*2],bh
  405b83:	xchg   BYTE PTR [ecx-0x41b96f6d],bl
  405b89:	mov    eax,0xb0acf043
  405b8e:	(bad)  
  405b8f:	sbb    ch,BYTE PTR [ecx-0x25]
  405b92:	xor    al,0x8f
  405b94:	into   
  405b95:	and    dh,al
  405b97:	setns  BYTE PTR [ebx]
  405b9a:	rol    DWORD PTR [ebp+edi*4+0x5c],0x97
  405b9f:	lods   al,BYTE PTR ds:[esi]
  405ba0:	cmp    ch,BYTE PTR [ebp-0x5c024cec]
  405ba6:	pop    esi
  405ba7:	xor    ecx,ecx
  405ba9:	stos   BYTE PTR es:[edi],al
  405baa:	cmc    
  405bab:	mov    ecx,0xdcc65f2e
  405bb0:	adc    al,BYTE PTR [esp+ebx*1+0x19500821]
  405bb7:	and    BYTE PTR [edi],al
  405bb9:	dec    esp
  405bba:	shl    BYTE PTR [ebx+0x37],0x5a
  405bbe:	out    dx,al
  405bbf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc1:	ins    DWORD PTR es:[edi],dx
  405bc2:	imul   ecx,DWORD PTR [edx+0x18e3b8e3],0xffffff9a
  405bc9:	xchg   esi,eax
  405bca:	xor    edx,ebx
  405bcc:	leave  
  405bcd:	mov    esp,0x35943f08
  405bd2:	ins    BYTE PTR es:[edi],dx
  405bd3:	fdiv   QWORD PTR [edi+ecx*1-0x10]
  405bd7:	fsub   DWORD PTR [edx]
  405bd9:	sbb    eax,0xe4e010df
  405bde:	mov    dh,0x89
  405be0:	(bad)  
  405be1:	aas    
  405be2:	call   0xa520:0x7f0d5e3e
  405be9:	or     BYTE PTR [edx],ch
  405beb:	test   al,0x9c
  405bed:	mov    al,ds:0x93b2d9a4
  405bf2:	jno    0x405ba5
  405bf4:	pop    ebx
  405bf5:	pop    ebx
  405bf6:	stos   DWORD PTR es:[edi],eax
  405bf7:	call   0x642d:0xc1f8326b
  405bfe:	(bad)  
  405bff:	mov    ah,0xf7
  405c01:	in     eax,0xdb
  405c03:	fld    QWORD PTR [ebx]
  405c05:	mov    ebp,0x822c221e
  405c0a:	jnp    0x405bfa
  405c0c:	pusha  
  405c0d:	push   edi
  405c0e:	add    esp,esp
  405c10:	pop    es
  405c11:	ja     0x405c7a
  405c13:	mov    esi,0xb82d6ae
  405c18:	jl     0x405c8e
  405c1a:	mov    DWORD PTR [ecx+ecx*8+0x726a6257],ebp
  405c21:	or     DWORD PTR [eax-0x79],ebx
  405c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c25:	xor    DWORD PTR ds:0x323ab174,esi
  405c2b:	push   eax
  405c2c:	outs   dx,DWORD PTR ds:[esi]
  405c2d:	mov    ebx,0xf88e4576
  405c32:	inc    ecx
  405c33:	and    ebp,esi
  405c35:	pop    ds
  405c36:	add    al,0x85
  405c38:	aas    
  405c39:	inc    ecx
  405c3a:	mov    ds:0xc739a95a,eax
  405c3f:	xchg   ebp,eax
  405c40:	mov    ebp,0xd6662a62
  405c45:	fidiv  DWORD PTR [ebx-0x22cf9fd1]
  405c4b:	rol    DWORD PTR ds:0xde948fc2,cl
  405c51:	jne    0x405c76
  405c53:	mov    al,0x58
  405c55:	icebp  
  405c56:	out    0x59,eax
  405c58:	sti    
  405c59:	aas    
  405c5a:	outs   dx,BYTE PTR ds:[esi]
  405c5b:	inc    esp
  405c5c:	ret    
  405c5d:	das    
  405c5e:	xchg   ecx,eax
  405c5f:	cld    
  405c60:	repnz pop es
  405c62:	icebp  
  405c63:	jle    0x405bf3
  405c65:	sbb    BYTE PTR [ecx-0x7b],al
  405c68:	xchg   esi,eax
  405c69:	ins    DWORD PTR es:[edi],dx
  405c6a:	clc    
  405c6b:	(bad)  
  405c6c:	mov    esi,?
  405c6e:	or     bh,cl
  405c70:	pushf  
  405c71:	add    DWORD PTR [eax+edi*1],0xec9babac
  405c78:	push   cs
  405c79:	xchg   esp,eax
  405c7a:	inc    esi
  405c7b:	add    BYTE PTR [edx],al
  405c7d:	in     eax,0x9e
  405c7f:	push   0x9fe9debb
  405c84:	add    edi,DWORD PTR [edi+0x253a774]
  405c8a:	ins    DWORD PTR es:[edi],dx
  405c8b:	jl     0x405c5c
  405c8d:	xchg   edi,eax
  405c8e:	cld    
  405c8f:	enter  0x424f,0x4b
  405c93:	sub    edi,DWORD PTR [edi+0x1f67c102]
  405c99:	test   DWORD PTR [ecx+0x19],ebp
  405c9c:	inc    esp
  405c9d:	cmc    
  405c9e:	sbb    eax,DWORD PTR [edi+eax*1]
  405ca1:	sbb    BYTE PTR [edx-0x550f06b3],cl
  405ca7:	data16 ja 0x405c4e
  405caa:	dec    ecx
  405cab:	ror    BYTE PTR [ecx+edx*1-0x1f1ced5c],cl
  405cb2:	inc    edi
  405cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cb4:	(bad)  [ebp+0x7e9326fb]
  405cba:	(bad)  
  405cbc:	repz fs pop ebx
  405cbf:	leave  
  405cc0:	adc    edx,ecx
  405cc2:	cmp    BYTE PTR [ebx+0x35],ah
  405cc5:	(bad)  
  405cc6:	sbb    DWORD PTR [ebx],esp
  405cc8:	gs out dx,eax
  405cca:	inc    ebp
  405ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ccc:	jbe    0x405d18
  405cce:	pop    ds
  405ccf:	jns    0x405cc4
  405cd1:	in     eax,dx
  405cd2:	dec    ah
  405cd4:	jmp    0x4337663f
  405cd9:	add    DWORD PTR [esp+ebp*4],esp
  405cdc:	loope  0x405cca
  405cde:	push   esi
  405cdf:	into   
  405ce0:	mov    ah,0x4
  405ce2:	sti    
  405ce3:	gs pushf 
  405ce5:	or     dh,BYTE PTR [edi-0x19]
  405ce8:	cdq    
  405ce9:	cmc    
  405cea:	sar    BYTE PTR [edx],0x92
  405ced:	inc    ebx
  405cee:	inc    ecx
  405cef:	mov    edx,eax
  405cf1:	outs   dx,BYTE PTR ds:[esi]
  405cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf3:	fnsave [esp+ebp*8+0x52ca6711]
  405cfa:	fcomp  QWORD PTR [edi]
  405cfc:	push   edx
  405cfd:	push   eax
  405cfe:	inc    ebx
  405cff:	cmp    eax,0x1111ae08
  405d04:	js     0x405ca6
  405d06:	mov    ds:0xdec8c4d9,eax
  405d0b:	fs icebp 
  405d0d:	out    dx,al
  405d0e:	push   0x5d8ab81d
  405d13:	ins    BYTE PTR es:[edi],dx
  405d14:	sub    BYTE PTR [eax],dl
  405d16:	inc    edi
  405d17:	fbstp  TBYTE PTR ds:0xc4f583ed
  405d1d:	imul   ebp,DWORD PTR [ebx-0x328c51f2],0xffffffe0
  405d24:	stos   BYTE PTR es:[edi],al
  405d25:	inc    eax
  405d26:	mov    BYTE PTR ds:0x8a4de109,al
  405d2c:	xchg   ebp,eax
  405d2d:	xor    eax,0x6573ea00
  405d32:	int3   
  405d33:	inc    ebx
  405d34:	jl     0x405cdf
  405d36:	and    esi,DWORD PTR fs:[ecx+eiz*4-0x60dd9075]
  405d3e:	clc    
  405d3f:	out    0x76,al
  405d41:	in     al,0x29
  405d43:	dec    esp
  405d44:	popa   
  405d45:	rcr    DWORD PTR [edx],0xe5
  405d48:	sub    ch,ch
  405d4a:	shl    DWORD PTR [eax+ecx*8+0x3b],cl
  405d4e:	clc    
  405d4f:	les    ebx,FWORD PTR [ebx+0x1]
  405d52:	test   eax,0x5159fd52
  405d57:	lea    ebx,[esi+0x69ac7c9b]
  405d5d:	xlat   BYTE PTR ds:[ebx]
  405d5e:	lods   al,BYTE PTR ds:[esi]
  405d5f:	int3   
  405d60:	adc    edx,eax
  405d62:	jp     0x405cea
  405d64:	cmp    eax,0x7b59d3ae
  405d69:	pop    esi
  405d6a:	or     eax,eax
  405d6c:	jp     0x405d85
  405d6e:	lods   al,BYTE PTR ds:[esi]
  405d6f:	push   eax
  405d70:	jnp    0x405da6
  405d72:	(bad)  
  405d73:	jno    0x405d07
  405d75:	in     al,0xb8
  405d77:	xchg   BYTE PTR [esi+0xe],dh
  405d7a:	jns    0x405d88
  405d7c:	xlat   BYTE PTR ds:[ebx]
  405d7d:	clc    
  405d7e:	(bad)  
  405d7f:	sti    
  405d80:	mov    ah,0x51
  405d82:	and    esp,DWORD PTR [ebx-0x6]
  405d85:	rcl    BYTE PTR [esi-0x6c],1
  405d88:	sub    bl,0xce
  405d8b:	add    ecx,DWORD PTR [ecx-0x3e847a38]
  405d91:	or     DWORD PTR [ebx+0x5ca7cea],ebp
  405d97:	std    
  405d98:	add    BYTE PTR [edx-0x3919cf7d],0xfc
  405d9f:	stc    
  405da0:	fwait
  405da1:	ds nop
  405da3:	stos   BYTE PTR es:[edi],al
  405da4:	into   
  405da5:	imul   ecx,esi,0xa362808a
  405dab:	es jo  0x405d62
  405dae:	xor    al,0x54
  405db0:	jecxz  0x405d4c
  405db2:	mov    bh,BYTE PTR [eax+0x5a]
  405db5:	fdivr  QWORD PTR [ecx+0x1c]
  405db8:	out    dx,eax
  405db9:	push   esp
  405dba:	in     eax,dx
  405dbb:	mov    cs,WORD PTR [ebp-0x3a]
  405dbe:	mov    bh,0x21
  405dc0:	xchg   ecx,eax
  405dc1:	xor    eax,0xb9d37f7b
  405dc6:	cmp    eax,0xb9cfcbbc
  405dcb:	stos   BYTE PTR es:[edi],al
  405dcc:	mov    ah,0xf7
  405dce:	fistp  QWORD PTR [ecx]
  405dd0:	cmp    eax,0x2df9a471
  405dd5:	stc    
  405dd6:	pcmpeqw mm1,mm2
  405dd9:	in     eax,dx
  405dda:	pop    ebp
  405ddb:	pop    ebx
  405ddc:	repnz inc ecx
  405dde:	jb     0x405de1
  405de0:	(bad)  
  405de1:	out    0xe7,eax
  405de3:	jo     0x405dcb
  405de5:	pop    eax
  405de6:	cmp    ebp,DWORD PTR [ebp+0x11]
  405de9:	or     al,0x25
  405deb:	pop    edi
  405dec:	jge    0x405dee
  405dee:	retf   0x140c
  405df1:	das    
  405df2:	scas   eax,DWORD PTR es:[edi]
  405df3:	sbb    cl,BYTE PTR [edi]
  405df5:	and    DWORD PTR [esi],edi
  405df7:	clc    
  405df8:	mov    ch,0x20
  405dfa:	cmp    BYTE PTR [ebp+edx*4-0x4265e90a],ah
  405e01:	dec    esp
  405e02:	jo     0x405de1
  405e04:	dec    ebp
  405e05:	repnz sub bl,cl
  405e08:	setge  BYTE PTR [edi-0x3a]
  405e0c:	lds    esi,FWORD PTR [ebp-0x5a570016]
  405e12:	lock into 
  405e14:	adc    BYTE PTR [ecx],bh
  405e16:	xchg   esi,eax
  405e17:	sub    ah,BYTE PTR [esi]
  405e19:	dec    ebp
  405e1a:	mov    esi,0x72a2326b
  405e1f:	add    esi,eax
  405e21:	cld    
  405e22:	add    cl,BYTE PTR [edi-0x64]
  405e25:	(bad)  
  405e27:	xor    DWORD PTR [edi],0xee9b1e97
  405e2d:	jmp    esi
  405e2f:	mov    dl,0x9b
  405e31:	int3   
  405e32:	cmp    eax,DWORD PTR [edi-0x53]
  405e35:	jmp    0x3222:0xa56a7891
  405e3c:	cld    
  405e3d:	jecxz  0x405e9c
  405e3f:	pop    eax
  405e40:	(bad)  
  405e41:	(bad)
  405e45:	js     0x405dff
  405e47:	sbb    DWORD PTR [eax+0x566ae38b],edx
  405e4d:	setge  BYTE PTR [ebp-0x2347145b]
  405e54:	data16 jle 0x405e28
  405e57:	sti    
  405e58:	div    DWORD PTR [eax-0x6ebbe5ec]
  405e5e:	popf   
  405e5f:	or     BYTE PTR ds:0x47989897,dl
  405e65:	test   al,0x7
  405e67:	stos   BYTE PTR es:[edi],al
  405e68:	outs   dx,BYTE PTR ds:[esi]
  405e69:	pushf  
  405e6a:	cmp    bl,al
  405e6c:	xor    esi,DWORD PTR [edx+0x3f]
  405e6f:	push   esi
  405e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e71:	lock loopne 0x405e0b
  405e74:	mov    cl,0x8d
  405e76:	mov    ch,0x6
  405e78:	xchg   ebp,eax
  405e79:	mov    al,BYTE PTR [edi+0x6e52ed30]
  405e7f:	cmp    ebp,DWORD PTR [esi-0x6e]
  405e82:	test   eax,0x35176014
  405e87:	push   ds
  405e88:	adc    DWORD PTR [eax+0x5e],ecx
  405e8b:	call   0x216db779
  405e90:	aad    0xb4
  405e92:	not    edi
  405e94:	cld    
  405e95:	stos   DWORD PTR es:[edi],eax
  405e96:	lahf   
  405e97:	or     al,0x57
  405e99:	out    dx,eax
  405e9a:	je     0x405f1a
  405e9c:	int    0x69
  405e9e:	shl    BYTE PTR [ecx+edx*2+0x53b293cc],1
  405ea5:	cmp    DWORD PTR [ecx+0x137b2f70],esp
  405eab:	xor    ecx,DWORD PTR ds:0xa27ce4c3
  405eb1:	dec    ebx
  405eb2:	call   0x7f29:0x60b8d4e7
  405eb9:	cmp    DWORD PTR [eax-0xee36cca],ecx
  405ebf:	ins    BYTE PTR es:[edi],dx
  405ec0:	inc    ebx
  405ec1:	scas   al,BYTE PTR es:[edi]
  405ec2:	es inc edx
  405ec4:	mov    ecx,0x84860080
  405ec9:	js     0x405ec3
  405ecb:	push   ds
  405ecc:	arpl   WORD PTR [edi-0x30],di
  405ecf:	inc    eax
  405ed0:	push   ds
  405ed1:	mov    ?,WORD PTR [ebp+0x508ca153]
  405ed7:	pusha  
  405ed8:	and    DWORD PTR [esi+0x4c4751e6],ebx
  405ede:	mov    esp,0x737062b4
  405ee3:	mov    ds:0x43405de7,eax
  405ee8:	mov    eax,ds:0x3d72dd7a
  405eed:	pop    ebp
  405eee:	xor    dh,bh
  405ef0:	mov    ah,0xd6
  405ef2:	mov    cl,0xe6
  405ef4:	cmc    
  405ef5:	jno    0x405f68
  405ef7:	mov    edi,0x31804a6a
  405efc:	out    0xb0,eax
  405efe:	mov    ah,0xea
  405f00:	jle    0x405f1d
  405f02:	jo     0x405f45
  405f04:	cli    
  405f05:	jg     0x405f77
  405f07:	cmp    edi,edi
  405f09:	push   es
  405f0a:	icebp  
  405f0b:	hlt    
  405f0c:	lahf   
  405f0d:	test   al,dh
  405f0f:	pop    ebx
  405f10:	push   ss
  405f11:	pop    ss
  405f12:	outs   dx,BYTE PTR ds:[esi]
  405f13:	xor    eax,0xe82efc95
  405f18:	mov    bh,0xe4
  405f1a:	add    al,0xd3
  405f1c:	xor    ebx,DWORD PTR [edi]
  405f1e:	push   ds
  405f1f:	adc    eax,0xb850d183
  405f24:	mov    edx,DWORD PTR [esi-0x2e]
  405f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f28:	jnp    0x405ecf
  405f2a:	sub    al,0xf5
  405f2c:	dec    eax
  405f2d:	or     BYTE PTR [eax-0xc],ch
  405f30:	push   edx
  405f31:	stc    
  405f32:	(bad)  
  405f33:	jg     0x405edf
  405f35:	and    DWORD PTR [edi],edi
  405f37:	arpl   WORD PTR [edx+0x2e],si
  405f3a:	jne    0x405f27
  405f3c:	call   0x95587a13
  405f41:	mov    eax,0x37c0949d
  405f46:	jae    0x405f3b
  405f48:	sahf   
  405f49:	dec    ecx
  405f4a:	jle    0x405f4f
  405f4c:	mov    esp,0xcb644f79
  405f51:	jp     0x405eeb
  405f53:	sub    eax,0x73c73dd8
  405f58:	inc    ebx
  405f59:	repnz sub edx,DWORD PTR [esi]
  405f5c:	int    0x7c
  405f5e:	and    ch,BYTE PTR [esi]
  405f60:	pop    es
  405f61:	aam    0x47
  405f63:	test   eax,0xe6eeb4f0
  405f68:	sub    al,0x8b
  405f6a:	ds mov cl,0xe8
  405f6d:	pusha  
  405f6e:	repz mov dh,0x73
  405f71:	xor    DWORD PTR [ecx],eax
  405f73:	retf   
  405f74:	in     eax,dx
  405f75:	test   al,0x81
  405f77:	inc    ecx
  405f78:	push   ebx
  405f79:	les    esi,FWORD PTR [ecx-0x6e]
  405f7c:	cmp    BYTE PTR [edx+0x25280610],cl
  405f82:	sbb    ebp,DWORD PTR [ecx]
  405f84:	xchg   esi,eax
  405f85:	or     BYTE PTR [esi+0x69],0x77
  405f89:	outs   dx,BYTE PTR ds:[esi]
  405f8a:	das    
  405f8b:	pop    es
  405f8c:	stos   BYTE PTR es:[edi],al
  405f8d:	test   BYTE PTR [edi],ch
  405f8f:	int    0x6
  405f91:	out    dx,al
  405f92:	(bad)  
  405f94:	aad    0x18
  405f96:	jae    0x405fef
  405f98:	jnp    0x405fdb
  405f9a:	lods   eax,DWORD PTR ds:[esi]
  405f9b:	or     cl,BYTE PTR ds:0x8e6977ef
  405fa1:	stc    
  405fa2:	adc    DWORD PTR [ecx+0x656dce92],esi
  405fa8:	cwde   
  405fa9:	mov    ecx,0xb5357979
  405fae:	mov    bl,0x90
  405fb0:	shl    edx,1
  405fb2:	dec    edi
  405fb3:	pop    edi
  405fb4:	xchg   ecx,esi
  405fb6:	cmp    al,0xfc
  405fb9:	mov    ds:0xbe493d81,al
  405fbe:	jle    0x405f89
  405fc0:	mov    ah,BYTE PTR [ebx+0x31462933]
  405fc6:	mov    ah,0x12
  405fc8:	(bad)  
  405fc9:	cmp    esi,DWORD PTR [edx+0x45]
  405fcc:	and    esi,eax
  405fce:	fidivr DWORD PTR [ecx-0x67ceba13]
  405fd4:	mov    es,esp
  405fd6:	mov    dh,0x91
  405fd8:	sbb    edx,DWORD PTR [ebp+0x3f]
  405fdb:	leave  
  405fdc:	pop    edi
  405fdd:	arpl   WORD PTR [ebp+0x62],bx
  405fe0:	jae    0x405ff3
  405fe2:	mov    es,WORD PTR [esi-0x22670c59]
  405fe8:	xchg   DWORD PTR ds:0x4b04990e,esp
  405fee:	lds    esp,FWORD PTR ds:0xf336fe01
  405ff4:	cld    
  405ff5:	push   0x85904cae
  405ffa:	sub    al,0xe2
  405ffc:	inc    edi
  405ffd:	adc    cl,BYTE PTR [ebx+0x4e]
  406000:	lock das 
  406002:	sbb    al,0x22
  406004:	mov    DWORD PTR [ebx],0x28f4d5d1
  40600a:	sbb    DWORD PTR [edx],esi
  40600c:	fdiv   DWORD PTR [ebx+0x69]
  40600f:	sbb    esi,ebx
  406011:	scas   eax,DWORD PTR es:[edi]
  406012:	add    ch,BYTE PTR [ecx-0x5c5790f0]
  406018:	pop    edx
  406019:	test   al,0x94
  40601b:	imul   esp,DWORD PTR [edx-0x64],0x89f1b35f
  406022:	aam    0xfb
  406024:	std    
  406025:	xchg   ecx,eax
  406026:	pop    ecx
  406027:	sub    DWORD PTR [edx-0x3b],esp
  40602a:	push   esp
  40602b:	sub    DWORD PTR ds:0x3fe1bf12,esi
  406031:	jle    0x40605d
  406033:	add    esi,0x44
  406036:	or     DWORD PTR [eax+0x1a970d10],esi
  40603c:	dec    esp
  40603d:	sbb    DWORD PTR [esi-0x5a33ee51],0x71c92924
  406047:	repz inc ebx
  406049:	in     al,dx
  40604a:	jge    0x406048
  40604c:	loopne 0x405fe3
  40604e:	jns    0x4060a1
  406050:	add    ecx,DWORD PTR gs:[edi+0xf]
  406054:	xchg   esi,eax
  406055:	cmp    al,0x25
  406057:	jp     0x40609a
  406059:	cmp    al,0x76
  40605b:	mov    dh,0xcc
  40605d:	mov    ah,0x6e
  40605f:	arpl   WORD PTR [esi+0x5df6ebd9],si
  406065:	fcomip st,st(0)
  406067:	jecxz  0x406096
  406069:	xchg   esp,eax
  40606a:	jl     0x406060
  40606c:	jae    0x406087
  40606e:	sub    al,0xae
  406070:	and    eax,0x9ad1d702
  406075:	push   0xed192585
  40607a:	cmp    DWORD PTR [ebx-0x6745baeb],0x56718a24
  406084:	xor    esi,0xffffff97
  406087:	mov    eax,ds:0xf8e127bd
  40608c:	sbb    al,0x27
  40608e:	xchg   DWORD PTR [esi-0x72],edi
  406091:	and    eax,0x31a6f59a
  406096:	js     0x4060ce
  406098:	mov    ch,0xc5
  40609a:	pop    edx
  40609b:	lahf   
  40609c:	push   ebp
  40609d:	mov    dh,0x9b
  40609f:	add    BYTE PTR [esi-0x71],bl
  4060a2:	in     al,dx
  4060a3:	inc    ecx
  4060a4:	xchg   esi,eax
  4060a5:	out    dx,al
  4060a6:	mov    DWORD PTR [bx+si],edi
  4060a9:	ins    DWORD PTR es:[edi],dx
  4060aa:	or     BYTE PTR [edx],bh
  4060ac:	test   al,0xa7
  4060ae:	scas   eax,DWORD PTR es:[edi]
  4060af:	ret    
  4060b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b1:	push   esi
  4060b2:	xchg   ch,cl
  4060b4:	sub    al,0xc8
  4060b6:	mov    ah,0x67
  4060b8:	into   
  4060b9:	add    BYTE PTR [ebp-0x38d5ee0b],ah
  4060bf:	std    
  4060c0:	hlt    
  4060c1:	std    
  4060c2:	call   0x130f:0xc08213b3
  4060c9:	dec    ebp
  4060ca:	mov    edx,0x706f3d8d
  4060cf:	ds out 0xed,eax
  4060d2:	in     eax,0x7c
  4060d4:	mov    eax,0x1919ca12
  4060d9:	inc    ecx
  4060da:	outs   dx,DWORD PTR ds:[esi]
  4060db:	popa   
  4060dc:	xor    al,BYTE PTR [edi-0x7a]
  4060df:	jns    0x40606a
  4060e1:	inc    ecx
  4060e2:	dec    edx
  4060e3:	adc    ebx,DWORD PTR [ecx+edx*8-0x63]
  4060e7:	and    esp,esi
  4060e9:	or     DWORD PTR ss:[esi-0x5f],0x14
  4060ee:	jbe    0x406081
  4060f0:	fbld   TBYTE PTR [ebx]
  4060f2:	add    ecx,DWORD PTR [ebx+eiz*4+0x1be116e3]
  4060f9:	push   0x8b68a4ea
  4060fe:	add    eax,0x269ab44e
  406103:	cmp    BYTE PTR [eax*8-0x4de48caa],bh
  40610a:	or     eax,0x73281a74
  40610f:	or     DWORD PTR [ecx],edi
  406111:	leave  
  406112:	outs   dx,DWORD PTR ds:[esi]
  406113:	xchg   esp,eax
  406114:	xchg   ebp,eax
  406115:	fs sbb eax,0x27ad932c
  40611b:	imul   ebp,DWORD PTR [ecx],0x8e8513a0
  406121:	std    
  406122:	cmp    ecx,DWORD PTR [ebx+0x11e74b6f]
  406128:	aam    0xa4
  40612a:	mov    ds:0xc5468a41,eax
  40612f:	mov    al,0xba
  406131:	mov    eax,0x7fdd25af
  406136:	inc    eax
  406137:	pushf  
  406138:	(bad)
  40613c:	test   al,0x8e
  40613e:	lods   al,BYTE PTR ds:[esi]
  40613f:	iret   
  406140:	js     0x4060f3
  406142:	retf   
  406143:	punpckhdq mm2,QWORD PTR [edx-0x7f]
  406147:	or     bh,BYTE PTR [edi]
  406149:	repnz lock push ds
  40614c:	lds    esp,FWORD PTR [edx+edi*1+0x55]
  406150:	push   ds
  406151:	imul   eax,edi,0x67
  406154:	sbb    eax,0xdeac4177
  406159:	mov    bl,0x6a
  40615b:	(bad)  
  40615d:	jo     0x40615c
  40615f:	or     BYTE PTR [edx+0x5b27114a],dh
  406165:	mov    ah,0x37
  406167:	lea    esi,[esi]
  406169:	iret   
  40616a:	lods   al,BYTE PTR ds:[esi]
  40616b:	mov    ah,0x68
  40616d:	pushf  
  40616e:	add    eax,0xed425f33
  406173:	xor    BYTE PTR [ebx],bh
  406175:	test   eax,0xc86efd35
  40617a:	out    dx,eax
  40617b:	mov    ds:0x3cd09f14,al
  406180:	stc    
  406181:	sar    BYTE PTR [ecx+0x24],1
  406184:	repz sbb DWORD PTR [eax-0x48],esi
  406188:	jnp    0x4061dc
  40618a:	cmp    al,0xd
  40618c:	ds xchg ebx,eax
  40618e:	dec    edi
  40618f:	stos   DWORD PTR es:[edi],eax
  406190:	nop
  406191:	fcomp  QWORD PTR [ecx]
  406193:	mov    ecx,DWORD PTR [eax]
  406195:	into   
  406196:	test   eax,0xa1c65528
  40619b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40619d:	push   ecx
  40619e:	ja     0x406170
  4061a0:	push   edx
  4061a1:	repz cmp bl,BYTE PTR [eax+0xe392a87]
  4061a8:	inc    esp
  4061a9:	fcomp  QWORD PTR [esi+0x53]
  4061ac:	stos   DWORD PTR es:[edi],eax
  4061ad:	or     ebx,ebp
  4061af:	dec    ebx
  4061b0:	addr16 mov ecx,0xbdb57a93
  4061b6:	test   BYTE PTR [edi+0x47],0x2c
  4061ba:	out    0x8b,al
  4061bc:	sbb    DWORD PTR ds:0x7a64bbe1,eax
  4061c2:	fnstsw ax
  4061c4:	jbe    0x406156
  4061c6:	int3   
  4061c7:	pop    es
  4061c8:	retf   
  4061c9:	or     ebx,edx
  4061cb:	repz add cl,BYTE PTR [ebx+0x5e]
  4061cf:	popf   
  4061d0:	pop    es
  4061d1:	xchg   edx,eax
  4061d2:	popa   
  4061d3:	sbb    edx,ebp
  4061d5:	scas   al,BYTE PTR es:[edi]
  4061d6:	dec    eax
  4061d7:	xor    edi,edx
  4061d9:	cmc    
  4061da:	ret    0xd748
  4061dd:	add    BYTE PTR [edx+edi*1],dh
  4061e0:	mov    ebp,0x4269f2d0
  4061e5:	add    bh,BYTE PTR [ebp-0x45]
  4061e8:	adc    BYTE PTR [edi],ch
  4061ea:	mul    esp
  4061ec:	sub    DWORD PTR [ebx+0x3c],0x7
  4061f0:	push   esp
  4061f1:	sbb    dh,BYTE PTR [eax]
  4061f3:	xor    eax,edi
  4061f5:	jo     0x40619c
  4061f7:	(bad)  
  4061f8:	sbb    al,0x3d
  4061fa:	std    
  4061fb:	ds push esp
  4061fd:	mov    eax,0x95acf6a7
  406202:	and    DWORD PTR [edx+edx*4+0x47],ecx
  406206:	test   bh,dl
  406208:	addr16 and eax,0xa57f0a69
  40620e:	pop    eax
  40620f:	test   BYTE PTR [edi],bl
  406211:	dec    esi
  406212:	mov    ah,0xe6
  406214:	xor    esi,edi
  406216:	cdq    
  406217:	inc    esp
  406218:	in     al,0xc1
  40621a:	mov    ?,esp
  40621c:	outs   dx,DWORD PTR ds:[esi]
  40621d:	push   cs
  40621e:	fs jge 0x406247
  406221:	sub    al,BYTE PTR [esi+ecx*4]
  406224:	into   
  406225:	dec    edi
  406226:	cmp    dl,dh
  406228:	iret   
  406229:	pop    edi
  40622a:	xchg   ebx,eax
  40622b:	jae    0x406201
  40622d:	push   ebx
  40622e:	push   ds
  40622f:	rcl    ebp,cl
  406231:	pop    esp
  406232:	sbb    DWORD PTR [ebx-0x5d],edi
  406235:	add    eax,DWORD PTR [ecx]
  406237:	mov    esi,0xd4310d27
  40623c:	in     al,dx
  40623d:	mov    ch,0x40
  40623f:	pop    ecx
  406240:	test   edi,esp
  406242:	inc    esp
  406243:	ret    0xbf42
  406246:	fs popa 
  406248:	int    0xf4
  40624a:	lea    edx,[edi]
  40624c:	mov    al,ds:0x6ed79874
  406251:	cs test al,0xcb
  406254:	aad    0x7d
  406256:	add    al,0x56
  406258:	cli    
  406259:	add    DWORD PTR [esp+edi*8+0x35],ecx
  40625d:	stos   DWORD PTR es:[edi],eax
  40625e:	fld    st(5)
  406260:	or     eax,0x90cf5676
  406265:	aaa    
  406266:	jns    0x4061ec
  406268:	std    
  406269:	inc    esp
  40626a:	ds inc esi
  40626c:	adc    al,0x84
  40626e:	xor    dl,ch
  406270:	addr16 push esp
  406272:	fnsave [ebp-0x31ea9b06]
  406278:	hlt    
  406279:	pop    esp
  40627a:	mov    ecx,0x129f3dca
  40627f:	dec    ebx
  406280:	sar    BYTE PTR [edi],cl
  406282:	aas    
  406283:	push   esp
  406284:	dec    ebx
  406285:	sub    esi,eax
  406287:	fidiv  DWORD PTR [ecx-0x2]
  40628a:	mov    ds:0x9ea7cf9c,eax
  40628f:	adc    ebp,ebp
  406291:	loop   0x4062a6
  406293:	(bad)  
  406294:	adc    al,0x6c
  406296:	xchg   DWORD PTR [ebx],ecx
  406298:	sbb    eax,0xcd0a6dce
  40629d:	add    ebx,DWORD PTR [edi-0x4ee1d4ab]
  4062a3:	add    esi,ecx
  4062a5:	jmp    0x8e5a:0xe49b9771
  4062ac:	test   edi,esp
  4062ae:	fisubr DWORD PTR ds:0x2aa2b236
  4062b4:	(bad)  
  4062b5:	xor    eax,0x16d58385
  4062ba:	inc    edx
  4062bb:	push   ds
  4062bc:	adc    al,0x3f
  4062be:	pop    ebp
  4062bf:	mov    eax,0xf6414526
  4062c4:	sbb    edx,DWORD PTR [esp+eiz*2+0x71]
  4062c8:	lahf   
  4062c9:	mov    ah,0x76
  4062cb:	loope  0x406272
  4062cd:	pop    eax
  4062ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062cf:	inc    edx
  4062d0:	leave  
  4062d1:	lods   eax,DWORD PTR ds:[esi]
  4062d2:	mov    ebp,0x43258d7e
  4062d7:	icebp  
  4062d8:	(bad)  
  4062d9:	mov    esi,0x3cc46d59
  4062de:	adc    eax,esp
  4062e0:	stc    
  4062e1:	lds    edx,FWORD PTR gs:[edi-0x24]
  4062e5:	sbb    BYTE PTR [ecx],0x94
  4062e8:	mov    ch,dl
  4062ea:	imul   edx,DWORD PTR [ebx-0x1c2da063],0xb190845f
  4062f4:	sbb    DWORD PTR [edi],0x924c37b6
  4062fa:	mov    ebx,0x433266da
  4062ff:	lock mov ds:0xb2b49512,al
  406305:	aad    0x7
  406307:	pop    eax
  406308:	sub    esp,DWORD PTR [ecx-0x8784479]
  40630e:	mov    ds:0x6913ef0c,al
  406313:	mov    eax,DWORD PTR ds:0x18fad1a0
  406319:	xor    BYTE PTR [esi],bh
  40631b:	jle    0x406393
  40631d:	imul   ecx,DWORD PTR [esp+edx*8],0x30120408
  406324:	pop    ss
  406325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406326:	inc    ecx
  406327:	and    bh,BYTE PTR [eax+ecx*4-0x79]
  40632b:	cmp    eax,0x9cac48aa
  406330:	ins    BYTE PTR es:[edi],dx
  406331:	sub    al,0x92
  406333:	mov    ch,0xff
  406335:	leave  
  406336:	jbe    0x4063b0
  406338:	mov    bh,0xff
  40633a:	adc    al,0x96
  40633c:	stos   BYTE PTR es:[edi],al
  40633d:	mov    ebx,ebp
  40633f:	mov    bh,0xf
  406341:	cmp    eax,0x8299a2f9
  406346:	mov    edx,DWORD PTR [edi]
  406348:	pop    ebx
  406349:	jno    0x406388
  40634b:	dec    edi
  40634c:	inc    esi
  40634d:	add    DWORD PTR [edx-0x22],esi
  406350:	xchg   esi,eax
  406351:	mov    ecx,0x858e5012
  406356:	adc    DWORD PTR [edi+0x41],0x66
  40635a:	aam    0x30
  40635c:	jns    0x4063c1
  40635e:	jl     0x4062e7
  406360:	jb     0x4062e7
  406362:	(bad)  
  406363:	and    eax,0x4cc32f30
  406368:	xor    eax,0xd4194568
  40636d:	cs (bad) 
  40636f:	(bad)  
  406371:	and    dh,dh
  406373:	push   edi
  406374:	hlt    
  406375:	jo     0x406345
  406377:	jae    0x4063a3
  406379:	pusha  
  40637a:	nop
  40637b:	jo     0x40637c
  40637d:	out    dx,al
  40637e:	cli    
  40637f:	adc    BYTE PTR [esi+0x14],ch
  406382:	lahf   
  406383:	jmp    0x6006:0x3ae37ce5
  40638a:	aaa    
  40638b:	test   eax,0xad694b46
  406390:	popa   
  406391:	mov    al,0x63
  406393:	imul   ebx,DWORD PTR [ebp+edx*4-0x7425118f],0x4c344595
  40639e:	xor    BYTE PTR [edi+0x51204c05],dl
  4063a4:	fld    DWORD PTR [edi]
  4063a6:	clc    
  4063a7:	mov    BYTE PTR [edi],bl
  4063a9:	pmulhuw mm5,QWORD PTR [esi-0x60f023c1]
  4063b0:	adc    DWORD PTR [ebp+eax*1+0x4b1f9593],esi
  4063b7:	adc    ebp,DWORD PTR [ebx]
  4063b9:	mov    ?,WORD PTR [esi]
  4063bb:	add    dl,BYTE PTR [edi-0xb207b9]
  4063c1:	gs cli 
  4063c3:	adc    al,0xbf
  4063c5:	bnd jle 0x406444
  4063c8:	es in  eax,0x28
  4063cb:	pop    ebx
  4063cc:	push   ecx
  4063cd:	xchg   esp,eax
  4063ce:	test   al,0x33
  4063d0:	xlat   BYTE PTR ds:[ebx]
  4063d1:	repnz sahf 
  4063d3:	jecxz  0x40640f
  4063d5:	(bad)  
  4063d7:	mov    BYTE PTR [eax+0x356c673a],dl
  4063dd:	cmp    eax,DWORD PTR [edx+ebp*2-0x3546f698]
  4063e4:	jle    0x406410
  4063e6:	and    dh,al
  4063e8:	cmp    al,0xb7
  4063ea:	pop    eax
  4063eb:	sti    
  4063ec:	scas   al,BYTE PTR es:[edi]
  4063ed:	(bad)  
  4063ee:	lods   al,BYTE PTR ds:[esi]
  4063ef:	add    al,BYTE PTR [ebx-0x28868212]
  4063f5:	enter  0x8b1b,0x98
  4063f9:	mov    ds,WORD PTR [esi+0x14]
  4063fc:	retf   
  4063fd:	ss jo  0x40639f
  406400:	js     0x4063be
  406402:	(bad)  
  406404:	pusha  
  406405:	lea    edx,[ebp+0x5e]
  406408:	inc    DWORD PTR [ecx]
  40640a:	popa   
  40640b:	shrd   edx,eax,cl
  40640e:	cmp    cl,BYTE PTR [ecx]
  406410:	aad    0x55
  406412:	outs   dx,BYTE PTR ds:[esi]
  406413:	push   0xffffffee
  406415:	(bad)  
  406416:	inc    ecx
  406417:	es lock in eax,dx
  40641a:	mov    WORD PTR [eax+0xb413724],gs
  406420:	inc    edi
  406421:	push   edx
  406422:	add    DWORD PTR [eax],ebx
  406424:	cdq    
  406425:	jp     0x406406
  406427:	fld    DWORD PTR [edx+0x25]
  40642a:	xor    eax,0xa4d11c73
  40642f:	test   al,0xca
  406431:	cmc    
  406432:	adc    al,0x30
  406434:	mov    ecx,0x6c33f29b
  406439:	push   0x12
  40643b:	push   ecx
  40643c:	add    BYTE PTR [ecx+0x4957f84d],cl
  406442:	and    eax,0x3d0f3630
  406447:	outs   dx,BYTE PTR ds:[esi]
  406448:	add    al,0xb0
  40644a:	inc    edi
  40644b:	ficom  DWORD PTR [ebp+0x2d]
  40644e:	or     eax,0x8e92bdad
  406453:	pop    edx
  406454:	call   0xc94b89d8
  406459:	lds    eax,FWORD PTR [eax-0x7d1774cf]
  40645f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406460:	(bad)  
  406461:	mov    eax,0x601f89c
  406466:	fimul  WORD PTR [ecx]
  406468:	dec    eax
  406469:	je     0x40647b
  40646b:	repz (bad) 
  40646d:	aas    
  40646e:	inc    edx
  40646f:	bound  esi,QWORD PTR [ebx+edi*1+0x58]
  406473:	inc    esi
  406474:	push   0xfffffffa
  406476:	xor    esp,0x32
  406479:	rcr    BYTE PTR [ebx],1
  40647b:	sbb    BYTE PTR [ecx],ch
  40647d:	xlat   BYTE PTR ds:[bx]
  40647f:	fldenv [edx+0x1d09daa3]
  406485:	gs jg  0x406475
  406488:	iret   
  406489:	out    dx,eax
  40648a:	dec    ebp
  40648b:	retf   0x3dc4
  40648e:	lds    ecx,FWORD PTR [ebx]
  406490:	ret    
  406491:	cmp    ah,ah
  406493:	daa    
  406494:	cmc    
  406495:	inc    edi
  406496:	ds inc ebx
  406498:	pushf  
  406499:	clc    
  40649a:	les    esi,FWORD PTR [esi]
  40649c:	lock ins DWORD PTR es:[edi],dx
  40649e:	xor    al,BYTE PTR [ebp-0x17f0740e]
  4064a4:	fmul   QWORD PTR [esi]
  4064a6:	jmp    0x406454
  4064a8:	xchg   ebx,eax
  4064a9:	mov    dl,0xe5
  4064ab:	xchg   DWORD PTR [ebp-0x5],edi
  4064ae:	pushf  
  4064af:	xchg   DWORD PTR [edx+0x1d],eax
  4064b2:	inc    eax
  4064b3:	lock lods eax,DWORD PTR ds:[esi]
  4064b5:	jp     0x406531
  4064b7:	call   DWORD PTR [esi]
  4064b9:	cmp    cl,BYTE PTR [ebx]
  4064bb:	test   al,0x47
  4064be:	xchg   edi,eax
  4064bf:	test   cl,0x36
  4064c2:	iret   
  4064c3:	ret    0x2813
  4064c6:	mov    ecx,0xba609c0b
  4064cb:	scas   al,BYTE PTR es:[edi]
  4064cc:	mov    dl,0x38
  4064ce:	mov    al,0x16
  4064d0:	push   0xffffffcc
  4064d2:	push   0x3bbe4119
  4064d7:	cmp    DWORD PTR [ecx-0x5c],esi
  4064da:	and    cl,cl
  4064dc:	mov    edi,0xe9e447c7
  4064e1:	jge    0x406499
  4064e3:	cmp    al,BYTE PTR [esi]
  4064e5:	jb     0x4064dd
  4064e7:	not    BYTE PTR [eax+0x2044d6b3]
  4064ed:	mov    dh,0x9c
  4064ef:	jo     0x406547
  4064f1:	push   ds
  4064f2:	jge    0x4064db
  4064f4:	in     eax,dx
  4064f5:	cmp    BYTE PTR [esi-0x77],bl
  4064f8:	ret    0x8959
  4064fb:	icebp  
  4064fc:	stos   BYTE PTR es:[edi],al
  4064fd:	addr16 jmp 0xe3ecbafb
  406503:	nop
  406504:	pop    ss
  406505:	std    
  406506:	mov    eax,ds:0xb432b795
  40650b:	and    al,ch
  40650d:	inc    esi
  40650e:	ficomp WORD PTR [esi-0x4eca7075]
  406514:	repz aaa 
  406516:	pop    es
  406517:	add    bh,bl
  406519:	in     al,0xb6
  40651b:	jae    0x406519
  40651d:	push   0xb86e1c94
  406522:	cmp    esp,0xffffffbe
  406525:	fnstcw WORD PTR [edx]
  406527:	inc    edx
  406528:	loope  0x40653c
  40652a:	sub    al,0xe8
  40652c:	rol    ch,1
  40652e:	cmp    al,0x4f
  406530:	xor    al,0x45
  406532:	popa   
  406533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406534:	les    ebp,FWORD PTR [ebp+0x7f]
  406537:	sbb    eax,0x39eae341
  40653c:	lods   eax,DWORD PTR ds:[esi]
  40653d:	push   DWORD PTR [esi-0x53]
  406540:	adc    al,0xa9
  406542:	mov    eax,0xcc60b9fe
  406547:	fucomi st,st(7)
  406549:	bound  esp,QWORD PTR [edx-0x29]
  40654c:	inc    esp
  40654d:	sbb    ecx,DWORD PTR [esi+0x31]
  406550:	outs   dx,DWORD PTR ds:[esi]
  406551:	clc    
  406552:	ds gs cmp eax,0x64d728ef
  406559:	cmp    al,0xe5
  40655b:	dec    ecx
  40655c:	mov    al,0xa8
  40655e:	jae    0x40650b
  406560:	ds es retf 
  406563:	(bad)  
  406564:	jge    0x40650e
  406566:	hlt    
  406567:	sbb    esp,edx
  406569:	inc    eax
  40656a:	inc    DWORD PTR [edi]
  40656c:	pop    ss
  40656d:	out    dx,eax
  40656e:	popa   
  40656f:	pop    ecx
  406570:	mov    eax,ds:0xff98b302
  406575:	stc    
  406576:	daa    
  406577:	jg     0x4065c3
  406579:	rol    BYTE PTR [ecx-0x6b784645],1
  40657f:	retf   0xf62
  406582:	push   edi
  406583:	sbb    eax,0x3dc423dc
  406588:	rcr    BYTE PTR [edx-0xcd5d7a2],1
  40658e:	clc    
  40658f:	cmc    
  406590:	fisttp DWORD PTR [edx]
  406592:	dec    ecx
  406593:	lds    edi,FWORD PTR [ecx-0x6eba79a3]
  406599:	cs repz rol bh,cl
  40659d:	dec    esp
  40659e:	(bad)  
  40659f:	mov    ecx,0x29e3a21f
  4065a4:	cs mov edi,0x3b0209a4
  4065aa:	or     al,0x73
  4065ac:	add    al,0x1b
  4065ae:	das    
  4065af:	icebp  
  4065b0:	add    ebx,esi
  4065b2:	pop    ss
  4065b3:	out    dx,eax
  4065b4:	aam    0xbe
  4065b6:	jo     0x40657b
  4065b8:	je     0x4065c4
  4065ba:	jmp    0x475b:0xc6bd308f
  4065c1:	xor    ebx,DWORD PTR [eax+0x7ed8ff5b]
  4065c7:	jg     0x4065b7
  4065c9:	pop    eax
  4065ca:	imul   ebx,DWORD PTR [ebx],0x6
  4065cd:	int    0xe5
  4065cf:	xor    BYTE PTR [ecx+0x150063b2],bh
  4065d5:	push   ss
  4065d6:	push   es
  4065d7:	out    dx,eax
  4065d8:	and    BYTE PTR [eax],bl
  4065da:	scas   eax,DWORD PTR es:[edi]
  4065db:	push   ebp
  4065dc:	call   0xbe866c2b
  4065e1:	cmp    al,0x40
  4065e3:	add    BYTE PTR cs:[edi],ch
  4065e6:	jbe    0x406601
  4065e8:	xchg   ebx,eax
  4065e9:	or     al,0x9
  4065eb:	cmp    al,0x32
  4065ed:	jns    0x406659
  4065ef:	pushf  
  4065f0:	mov    ds:0xe5971b8f,al
  4065f5:	fcmovu st,st(4)
  4065f7:	loope  0x4065bd
  4065f9:	outs   dx,DWORD PTR ds:[esi]
  4065fa:	ins    BYTE PTR es:[edi],dx
  4065fb:	lock mov DWORD PTR [ecx-0x9],edi
  4065ff:	adc    BYTE PTR [ecx-0x1035882b],ah
  406605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406606:	imul   BYTE PTR [ecx+0x5b61f4df]
  40660c:	vpcomd xmm14,xmm2,XMMWORD PTR [eax-0x3f599f6b],0xb5
  406616:	les    esi,FWORD PTR [ecx]
  406618:	fcomp  QWORD PTR [edi]
  40661a:	push   ebp
  40661b:	popf   
  40661c:	test   BYTE PTR [edi+edi*4],ah
  40661f:	xchg   edi,eax
  406620:	mov    ds:0x4ca24353,eax
  406625:	in     eax,0xfd
  406627:	adc    ah,dh
  406629:	hlt    
  40662a:	cli    
  40662b:	adc    ebx,ebx
  40662d:	xchg   bl,cl
  40662f:	and    al,0x8b
  406631:	sar    BYTE PTR [ebp-0x1d],cl
  406634:	add    DWORD PTR [edx],0xffffff9f
  406637:	arpl   WORD PTR [eax],bp
  406639:	dec    ebx
  40663a:	push   cs
  40663b:	aam    0xd5
  40663d:	mov    ebp,0x6d74d27a
  406642:	push   cs
  406643:	or     eax,0xeec9cd32
  406648:	fcomi  st,st(7)
  40664a:	pop    es
  40664b:	shl    BYTE PTR [ecx-0x4ec427c8],0x47
  406652:	mov    esp,0x135a41a2
  406657:	dec    eax
  406658:	ja     0x4066c9
  40665a:	inc    edx
  40665b:	adc    ah,BYTE PTR [edx+0xa6bf5bb]
  406661:	ret    0x2a1f
  406664:	cld    
  406665:	dec    edi
  406666:	push   ecx
  406667:	adc    ebp,ebx
  406669:	dec    esp
  40666a:	add    ah,bl
  40666c:	and    ch,ch
  40666e:	into   
  40666f:	xor    bh,cl
  406671:	pop    edi
  406672:	push   esp
  406673:	sbb    ecx,ecx
  406675:	pop    edi
  406676:	addr16 jl 0x406696
  406679:	out    dx,al
  40667a:	mov    edx,0x9f25fe21
  40667f:	retf   0x23c0
  406682:	jb     0x406633
  406684:	out    0xc2,al
  406686:	icebp  
  406687:	xor    cl,bh
  406689:	adc    BYTE PTR [edi],al
  40668b:	push   ss
  40668c:	fcomp  DWORD PTR [ebx]
  40668e:	inc    eax
  40668f:	dec    ecx
  406690:	dec    esi
  406691:	and    ecx,DWORD PTR [ebx-0x437553af]
  406697:	mov    BYTE PTR [ebp-0x2a],bh
  40669a:	cmp    dl,BYTE PTR [esi+ebx*1]
  40669d:	icebp  
  40669e:	inc    ebp
  40669f:	mov    al,ds:0xb0bb7d4d
  4066a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a5:	sbb    edx,DWORD PTR [ebx]
  4066a7:	aam    0x87
  4066a9:	mov    bl,0x5c
  4066ab:	push   0x1e
  4066ad:	mov    ch,0xe2
  4066af:	dec    esp
  4066b0:	leave  
  4066b1:	pop    ebx
  4066b2:	xchg   edx,eax
  4066b3:	or     eax,0x7e693d31
  4066b8:	jo     0x406726
  4066ba:	loopne 0x406727
  4066bc:	aad    0x4
  4066be:	repnz out 0x8b,al
  4066c1:	iret   
  4066c2:	add    ebx,DWORD PTR [ebx+0x5cc448a]
  4066c8:	(bad)  
  4066c9:	adc    eax,0x35431eae
  4066ce:	mov    ds:0x940261e8,al
  4066d3:	loopne 0x4066bf
  4066d5:	(bad)  
  4066d6:	stos   BYTE PTR es:[edi],al
  4066d7:	vandnps xmm5,xmm5,XMMWORD PTR [esi+0x5cf9e446]
  4066df:	jg     0x406758
  4066e1:	pop    esp
  4066e2:	pop    ebp
  4066e3:	sar    BYTE PTR [esi],cl
  4066e5:	mov    WORD PTR [esi-0x369302d1],cs
  4066eb:	out    0x41,eax
  4066ed:	xor    ebx,edi
  4066ef:	loopne 0x40673b
  4066f1:	loope  0x406696
  4066f3:	mov    cl,0x24
  4066f5:	addr16 (bad) 
  4066f8:	pop    edx
  4066f9:	aaa    
  4066fa:	xchg   ebp,eax
  4066fb:	stc    
  4066fc:	inc    ebx
  4066fd:	jbe    0x4066d1
  4066ff:	aam    0x88
  406701:	mov    ds:0x723b4088,eax
  406706:	sub    eax,0x1ffa69c1
  40670b:	dec    ebp
  40670c:	fisttp DWORD PTR [edi-0x6c7c9f1a]
  406712:	jp     0x40677c
  406714:	jp     0x406771
  406716:	xor    BYTE PTR [edi],0x54
  406719:	pop    ss
  40671a:	fsubp  st(3),st
  40671c:	cmp    eax,eax
  40671e:	sbb    DWORD PTR [eiz*2+0x2633769e],edx
  406725:	mov    ebp,0x949a62bd
  40672b:	test   DWORD PTR [edi+eiz*2+0xf],ebx
  40672f:	stos   BYTE PTR es:[edi],al
  406730:	push   eax
  406731:	dec    esp
  406732:	inc    ebp
  406733:	xor    BYTE PTR [esi],bh
  406735:	jbe    0x4066f2
  406737:	loope  0x40671e
  406739:	adc    DWORD PTR [esi-0x90cb047],edi
  40673f:	cmp    al,al
  406741:	sahf   
  406742:	cmp    BYTE PTR [ecx+eiz*2+0x64911cf2],al
  406749:	daa    
  40674a:	dec    ecx
  40674b:	cmp    eax,0x979740b5
  406750:	fstp   DWORD PTR [eax+ebx*2-0x1cd90f4d]
  406757:	xchg   edi,eax
  406758:	add    eax,0xe349ef4b
  40675d:	dec    eax
  40675e:	(bad)  
  40675f:	mov    ebx,0x275d2019
  406764:	mov    esp,0x5504bc10
  406769:	rol    DWORD PTR [edx+0x15],0xac
  40676d:	into   
  40676e:	pop    es
  40676f:	add    al,BYTE PTR [ebx+0x31f45b26]
  406775:	(bad)  
  406776:	(bad)  
  406777:	mov    eax,0x399c5c01
  40677c:	cmp    dh,ah
  40677e:	cdq    
  40677f:	mov    ch,al
  406781:	add    eax,0x36be5172
  406786:	jns    0x4067f0
  406788:	mov    ecx,0x83737bfb
  40678d:	(bad)  
  40678f:	inc    edx
  406790:	scas   al,BYTE PTR es:[edi]
  406791:	or     BYTE PTR [edx-0xe],dh
  406794:	mov    edx,DWORD PTR [edi+eiz*8+0x2e3d471b]
  40679b:	add    al,0xd6
  40679d:	mov    dl,0x23
  40679f:	fwait
  4067a0:	(bad)  
  4067a1:	push   cs
  4067a2:	push   esi
  4067a3:	loop   0x40678e
  4067a5:	dec    BYTE PTR [eax-0x4]
  4067a8:	dec    ebp
  4067a9:	aas    
  4067aa:	cmp    DWORD PTR [ebx],0x10
  4067ad:	mov    ds:0xc16d1623,eax
  4067b2:	or     ecx,DWORD PTR [eax]
  4067b4:	add    bh,BYTE PTR ss:[ebx+0x1cdc93a1]
  4067bb:	repz push edx
  4067bd:	call   0x1890:0x5742a708
  4067c4:	test   DWORD PTR [edi+edi*8],0xd0baaeb5
  4067cb:	or     al,BYTE PTR [edx-0x55]
  4067ce:	scas   eax,DWORD PTR es:[edi]
  4067cf:	fnsave [ecx]
  4067d1:	or     BYTE PTR [esp+edx*8],bh
  4067d4:	test   DWORD PTR [esi+edx*2-0x19f240d0],edx
  4067db:	mul    BYTE PTR [edi+0x29253f20]
  4067e1:	pop    ds
  4067e2:	aas    
  4067e3:	popf   
  4067e4:	int    0xf5
  4067e6:	jae    0x4067ce
  4067e8:	or     eax,0x6ba4b5a1
  4067ed:	imul   esi,ebp,0x59
  4067f0:	je     0x4067dc
  4067f2:	je     0x4067ca
  4067f4:	sub    BYTE PTR [edi-0x23727afb],0x2f
  4067fb:	mov    DWORD PTR [edi-0x5db0c86d],eax
  406801:	(bad)  
  406802:	fidivr WORD PTR [edx]
  406804:	sbb    bl,al
  406806:	mov    BYTE PTR [ecx+esi*2+0x7ea6f1b0],bl
  40680d:	and    esi,DWORD PTR [edx+0x14]
  406810:	neg    BYTE PTR [edi+0x52]
  406813:	jno    0x4067ce
  406815:	retf   
  406816:	or     BYTE PTR [esi+0x78de3f5c],0x30
  40681d:	pop    edx
  40681e:	xor    dh,BYTE PTR ss:[edi+0xf]
  406822:	mov    ds:0x8057cab7,eax
  406827:	pop    edx
  406828:	fst    DWORD PTR [esi]
  40682a:	jae    0x40680e
  40682c:	push   ecx
  40682d:	xchg   edx,eax
  40682e:	cs and ebx,edi
  406831:	xchg   ecx,eax
  406832:	hlt    
  406833:	push   0x64b4cb60
  406838:	sub    DWORD PTR [ebp+0x5d],eax
  40683b:	mov    cl,0xc3
  40683d:	sbb    esp,DWORD PTR [ecx-0x39910944]
  406843:	and    BYTE PTR [edi-0x194418c5],dh
  406849:	add    BYTE PTR [ebp+0x76],0xd3
  40684d:	loop   0x406813
  40684f:	jecxz  0x40684f
  406851:	fwait
  406852:	add    eax,0x75f3046c
  406857:	xchg   ebx,eax
  406858:	je     0x4068ce
  40685a:	push   esi
  40685b:	or     BYTE PTR [ebp+0x4b3268f],ch
  406861:	cld    
  406862:	sbb    ebx,DWORD PTR [eax+0x6b]
  406865:	rcl    DWORD PTR [ebx],0xe5
  406868:	enter  0xfbb7,0x0
  40686c:	cs test eax,0xc496935f
  406872:	loopne 0x4068b8
  406874:	gs retf 
  406876:	mov    dl,0x48
  406878:	xchg   ebp,eax
  406879:	retf   
  40687a:	mov    esp,0xb2bee1da
  40687f:	jmp    0x406859
  406881:	clc    
  406882:	hlt    
  406883:	jmp    0x4068d5
  406885:	inc    esp
  406886:	fs or  ah,BYTE PTR cs:[esi]
  40688a:	mov    ch,0x48
  40688c:	int3   
  40688d:	adc    BYTE PTR [eax+ecx*1-0x550c57fd],dh
  406894:	mov    ah,0x53
  406896:	icebp  
  406897:	xchg   ecx,eax
  406898:	enter  0xcfb4,0x68
  40689c:	mov    bl,0x3a
  40689e:	or     BYTE PTR [esi],al
  4068a0:	adc    al,al
  4068a2:	xchg   esi,eax
  4068a3:	es sub eax,0x9387e8b7
  4068a9:	mov    bh,0xce
  4068ab:	push   ds
  4068ac:	(bad)  
  4068ad:	jmp    0x4068fa
  4068af:	mov    cl,0xe9
  4068b1:	dec    ecx
  4068b2:	dec    edi
  4068b3:	xchg   esi,eax
  4068b4:	das    
  4068b5:	cli    
  4068b6:	sahf   
  4068b7:	xchg   edi,eax
  4068b8:	(bad)  
  4068ba:	pop    ebx
  4068bb:	mov    BYTE PTR [esi-0x63],bh
  4068be:	sbb    ch,BYTE PTR es:[eax]
  4068c1:	cmp    al,0x2
  4068c3:	inc    esp
  4068c4:	retf   0x5ce7
  4068c7:	test   eax,0x4925f896
  4068cc:	ja     0x40688a
  4068ce:	mov    ch,0x5e
  4068d0:	les    ecx,FWORD PTR [ecx-0x63]
  4068d3:	mov    edi,ebp
  4068d5:	jmp    0x4488:0xcdc18abc
  4068dc:	add    DWORD PTR [edi],0xffffff9c
  4068df:	jmp    0x79a0:0x4d4b2988
  4068e6:	mov    esp,0x3273f7d7
  4068eb:	dec    edx
  4068ec:	in     al,0xb8
  4068ee:	pop    ebp
  4068ef:	retf   
  4068f0:	aad    0xfc
  4068f2:	mov    ecx,0x7999371a
  4068f7:	inc    edi
  4068f8:	xor    esi,edi
  4068fa:	push   0x23
  4068fc:	out    dx,al
  4068fd:	sub    BYTE PTR ds:0x745f6aa4,0xa4
  406904:	mov    bh,0xf5
  406906:	stc    
  406907:	cld    
  406908:	(bad)  
  406909:	imul   ebx,DWORD PTR [ebx-0x52478fe7],0x2b
  406910:	outs   dx,BYTE PTR ds:[esi]
  406911:	sbb    BYTE PTR [edx+0x113be175],ch
  406917:	adc    edi,0x3d0dbae0
  40691d:	data16 out 0xcc,al
  406920:	loopne 0x406960
  406922:	adc    dh,BYTE PTR [ebx-0x11]
  406925:	or     eax,edi
  406927:	sbb    dh,bh
  406929:	out    dx,eax
  40692a:	xor    eax,0x5fc6f29b
  40692f:	add    esp,ebp
  406931:	sub    al,BYTE PTR [edx+0x6c]
  406934:	in     al,dx
  406935:	bound  esp,QWORD PTR [edx+0x161bd326]
  40693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693c:	mov    cl,BYTE PTR [esi-0x58]
  40693f:	xor    dl,BYTE PTR [eax]
  406941:	icebp  
  406942:	inc    eax
  406943:	ins    DWORD PTR es:[edi],dx
  406944:	pop    edx
  406945:	sub    BYTE PTR [edi],0xcf
  406948:	sub    ebx,DWORD PTR ds:0xa470ba48
  40694e:	push   ss
  40694f:	pop    es
  406950:	cmp    dl,BYTE PTR [esi-0x27]
  406953:	xchg   edx,eax
  406954:	adc    esp,esi
  406956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406957:	inc    eax
  406958:	(bad)  
  406959:	lahf   
  40695a:	test   eax,0x32def2f4
  40695f:	outs   dx,BYTE PTR ds:[esi]
  406960:	add    al,0x4
  406962:	mov    ds:0x21b76abb,eax
  406967:	aad    0x9b
  406969:	daa    
  40696a:	xchg   ebx,eax
  40696b:	push   ds
  40696c:	out    dx,eax
  40696d:	mov    eax,ds:0x30a5f887
  406972:	icebp  
  406973:	in     al,dx
  406974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406975:	push   ebp
  406976:	ja     0x4069c6
  406978:	or     eax,0xf2ba00d0
  40697d:	cwde   
  40697e:	or     al,0x44
  406980:	pop    ecx
  406981:	inc    esi
  406982:	pop    ds
  406983:	(bad)  
  406984:	xchg   DWORD PTR [eax+ecx*4],ebx
  406987:	mov    ds:0xa6b72c93,eax
  40698c:	popf   
  40698d:	out    dx,eax
  40698e:	or     BYTE PTR [eax-0x4f],al
  406991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406992:	cmp    al,0x36
  406994:	mov    WORD PTR [edx],ss
  406996:	add    BYTE PTR [ebx+0x20b89ba1],dl
  40699c:	gs cli 
  40699e:	fnstsw WORD PTR [ebx+ebp*2]
  4069a1:	and    BYTE PTR [ebp+ebp*1+0x62],bh
  4069a5:	mov    edi,0x5a6751b4
  4069aa:	popf   
  4069ab:	(bad)  
  4069ac:	outs   dx,BYTE PTR ds:[esi]
  4069ad:	fwait
  4069ae:	std    
  4069af:	cmp    DWORD PTR [edx],0x85714674
  4069b5:	jnp    0x40693a
  4069b7:	cdq    
  4069b8:	inc    DWORD PTR [ebx+eiz*8]
  4069bb:	xor    BYTE PTR [ebx+ecx*2+0x4250c305],ah
  4069c2:	mov    fs,WORD PTR ds:0xdfb00214
  4069c8:	out    dx,al
  4069c9:	push   edx
  4069ca:	outs   dx,DWORD PTR ds:[esi]
  4069cb:	scas   eax,DWORD PTR es:[edi]
  4069cc:	push   ds
  4069cd:	(bad)  
  4069ce:	cli    
  4069cf:	mov    edx,0xa5ba7be9
  4069d4:	in     al,0x29
  4069d6:	push   ecx
  4069d7:	mov    BYTE PTR [esi+esi*4+0x6d],al
  4069db:	dec    esi
  4069dc:	jnp    0x4069b2
  4069de:	jae    0x40696d
  4069e0:	test   al,0x90
  4069e2:	mov    ecx,0x849b387e
  4069e7:	pusha  
  4069e8:	jge    0x406a63
  4069ea:	sub    DWORD PTR [edi-0x63],0xffffffec
  4069ee:	out    dx,eax
  4069ef:	or     al,0x2e
  4069f1:	xchg   esp,eax
  4069f2:	pop    ebp
  4069f3:	in     eax,0xc8
  4069f5:	ds xchg edx,eax
  4069f7:	les    ebp,FWORD PTR [eax]
  4069f9:	js     0x40698d
  4069fb:	scas   eax,DWORD PTR es:[edi]
  4069fc:	mov    eax,0xe7721a13
  406a01:	cwde   
  406a02:	pslld  mm0,QWORD PTR [eax+0x2bead520]
  406a09:	repnz inc edx
  406a0b:	sub    esi,esp
  406a0d:	js     0x406a8b
  406a0f:	shl    BYTE PTR [edi-0x1a],cl
  406a12:	dec    ebx
  406a13:	or     DWORD PTR [edi-0x5ef8d331],0xffffffe9
  406a1a:	sbb    BYTE PTR [ebp-0x6ebaef11],bl
  406a20:	ret    
  406a21:	mov    edi,DWORD PTR [ebx]
  406a23:	call   0x87394d1d
  406a28:	into   
  406a29:	push   0xffffffbd
  406a2b:	enter  0x45b,0xef
  406a2f:	jl     0x406a33
  406a31:	lock jg 0x406a99
  406a34:	cdq    
  406a35:	add    DWORD PTR [edx],ebp
  406a37:	not    cl
  406a39:	push   0x8d8c35e8
  406a3e:	adc    ah,BYTE PTR [eax+0x9]
  406a41:	lahf   
  406a42:	daa    
  406a43:	iret   
  406a44:	jge    0x406a67
  406a46:	xchg   esi,eax
  406a47:	dec    eax
  406a48:	xchg   BYTE PTR [ecx],al
  406a4a:	add    edx,ebx
  406a4c:	jmp    0x406a24
  406a4e:	fidiv  WORD PTR [ebp-0x2f75bff6]
  406a54:	out    0x8f,eax
  406a56:	iret   
  406a57:	add    DWORD PTR [edx+edx*2-0x21],ebx
  406a5b:	gs iret 
  406a5d:	imul   ecx,edi,0x4d
  406a60:	xlat   BYTE PTR ds:[ebx]
  406a61:	jmp    0xbb9d:0x1b5c428c
  406a68:	(bad)  
  406a69:	push   edi
  406a6a:	inc    ebp
  406a6b:	mov    ecx,0xef8f6b98
  406a70:	mov    ds:0xce447627,al
  406a75:	or     BYTE PTR [ebx-0x18],bh
  406a78:	rcl    ebx,0xbf
  406a7b:	sbb    ch,BYTE PTR [ecx-0x11]
  406a7e:	jo     0x406ab6
  406a80:	in     al,dx
  406a81:	mov    ch,0x1e
  406a83:	into   
  406a84:	arpl   sp,dx
  406a86:	in     al,dx
  406a87:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a89:	or     cl,dl
  406a8b:	(bad)  
  406a8c:	out    dx,al
  406a8d:	mov    DWORD PTR [ecx],esp
  406a8f:	sub    bl,bl
  406a91:	sbb    cl,BYTE PTR [ebx]
  406a93:	stos   BYTE PTR es:[edi],al
  406a94:	cld    
  406a95:	pop    esi
  406a96:	mov    ebp,0x2968121f
  406a9b:	arpl   WORD PTR [ecx-0x3e],bx
  406a9e:	sub    esi,DWORD PTR [esi-0xfd12efb]
  406aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aa5:	dec    esp
  406aa6:	cmp    ecx,DWORD PTR [edi]
  406aa8:	pop    ebp
  406aa9:	sub    al,0x93
  406aab:	inc    ebx
  406aac:	pop    ebx
  406aad:	xor    BYTE PTR [eax-0x66e2aca],al
  406ab3:	mov    bh,0xb5
  406ab5:	or     DWORD PTR fs:[ecx],edx
  406ab8:	inc    edi
  406ab9:	fnstsw WORD PTR [edx+esi*1-0x442ece6]
  406ac0:	add    eax,0x2d0039f1
  406ac5:	xchg   edi,eax
  406ac6:	xchg   ecx,eax
  406ac7:	mov    BYTE PTR [ebx+0x6a],0x59
  406acb:	xor    BYTE PTR [eax-0x43f8ca27],bh
  406ad1:	jge    0x406b50
  406ad3:	daa    
  406ad4:	ret    
  406ad5:	and    al,0x2
  406ad7:	inc    ebx
  406ad8:	dec    esi
  406ad9:	push   edx
  406ada:	sbb    ah,BYTE PTR [eax]
  406adc:	cld    
  406add:	sub    esi,ebp
  406adf:	xchg   BYTE PTR [ecx+0xe],al
  406ae2:	adc    DWORD PTR [ecx],ecx
  406ae4:	xlat   BYTE PTR ds:[ebx]
  406ae5:	out    dx,eax
  406ae6:	pop    es
  406ae7:	jle    0x406aeb
  406ae9:	shl    BYTE PTR [edi+ebp*1],0x65
  406aed:	add    DWORD PTR [eax+eiz*4-0x353d62e4],esi
  406af4:	mov    ds:0x97c5dc67,al
  406af9:	push   ds
  406afa:	stos   BYTE PTR es:[edi],al
  406afb:	in     al,dx
  406afc:	xor    ebp,DWORD PTR [eax+0x4a]
  406aff:	les    esi,FWORD PTR [ebx+ebx*1+0x4b]
  406b03:	mov    dh,BYTE PTR [edi-0xa6e603a]
  406b09:	add    BYTE PTR [ecx+ebx*1],dl
  406b0c:	(bad)  
  406b0d:	stos   DWORD PTR es:[edi],eax
  406b0e:	push   ds
  406b0f:	dec    esi
  406b10:	hlt    
  406b11:	jg     0x406aab
  406b13:	xchg   ecx,eax
  406b14:	push   edi
  406b15:	in     al,dx
  406b16:	shr    DWORD PTR [eax],cl
  406b18:	sub    eax,0xb4e6b949
  406b1d:	je     0x406ad4
  406b1f:	lods   eax,DWORD PTR ds:[esi]
  406b20:	cdq    
  406b21:	and    cl,ch
  406b23:	retf   0x6f13
  406b26:	mov    dl,0xfd
  406b28:	jb     0x406b6f
  406b2a:	js     0x406b47
  406b2c:	mov    BYTE PTR [esi-0x35],ah
  406b2f:	cmc    
  406b30:	cli    
  406b31:	dec    esp
  406b32:	add    eax,0x14be582
  406b37:	jg     0x406ad5
  406b39:	xchg   edi,eax
  406b3a:	adc    ah,BYTE PTR [ecx]
  406b3c:	sub    ecx,0x6b98fa16
  406b42:	(bad)  
  406b43:	imul   esp,DWORD PTR [edx+0x40],0xffffffeb
  406b47:	pop    es
  406b48:	outs   dx,BYTE PTR ds:[esi]
  406b49:	and    al,0x5
  406b4b:	outs   dx,DWORD PTR ds:[esi]
  406b4c:	in     al,0x58
  406b4e:	test   eax,0x5945f0ce
  406b53:	dec    edx
  406b54:	and    DWORD PTR [ebp-0x4],esi
  406b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b58:	gs mov al,0xbf
  406b5b:	dec    ecx
  406b5c:	rol    BYTE PTR [edx+edi*8-0x74035b97],cl
  406b63:	lahf   
  406b64:	pushf  
  406b65:	add    cl,BYTE PTR [eax-0x5f86473b]
  406b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b6c:	cmp    al,0xe0
  406b6e:	push   es
  406b6f:	in     al,dx
  406b70:	pop    edx
  406b71:	retf   
  406b72:	hlt    
  406b73:	lea    esi,[ebp+0x6cc37432]
  406b79:	add    eax,0x695aa32e
  406b7e:	clc    
  406b7f:	(bad)  
  406b81:	xor    al,ch
  406b83:	jmp    0xb1c31112
  406b88:	push   0xffffff8e
  406b8a:	inc    esp
  406b8b:	(bad)  
  406b8c:	stos   DWORD PTR es:[edi],eax
  406b8d:	iret   
  406b8e:	dec    ebx
  406b8f:	xor    BYTE PTR [edx-0x6435aee3],dh
  406b95:	call   0x1111:0x20e7257c
  406b9c:	test   DWORD PTR [ebp+0x3d],eax
  406b9f:	fidivr DWORD PTR [ebp-0x5c]
  406ba2:	sbb    edi,DWORD PTR [edi+0x21]
  406ba5:	scas   al,BYTE PTR es:[edi]
  406ba6:	aaa    
  406ba7:	les    edi,FWORD PTR [ecx]
  406ba9:	jo     0x406b54
  406bab:	mov    ch,0x1d
  406bad:	loope  0x406bfc
  406baf:	outs   dx,DWORD PTR ds:[esi]
  406bb0:	or     al,0xc3
  406bb2:	adc    ebp,DWORD PTR [esi]
  406bb4:	ror    BYTE PTR [ecx-0x26],0x82
  406bb8:	arpl   si,bp
  406bba:	mov    eax,ds:0xd3ac81bf
  406bbf:	xchg   ebp,eax
  406bc0:	sbb    esp,DWORD PTR [ebp+0x698b5e89]
  406bc6:	mov    esi,0x17c2daf9
  406bcb:	mov    dl,BYTE PTR [ebx+0x2443df6]
  406bd1:	push   0x4fc33583
  406bd6:	mov    WORD PTR [edx+0x2f61b081],?
  406bdc:	test   al,0x80
  406bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdf:	push   DWORD PTR [edi-0xc]
  406be2:	adc    al,0x5e
  406be4:	add    eax,0x62c0b229
  406be9:	lods   al,BYTE PTR ds:[esi]
  406bea:	jp     0x406bfb
  406bec:	mov    esp,0x6d0726be
  406bf1:	js     0x406bb1
  406bf3:	push   esp
  406bf4:	(bad)  
  406bf5:	sub    eax,0x1f968bd4
  406bfa:	fcomp  DWORD PTR [ebx]
  406bfc:	jmp    0x406c0e
  406bfe:	sub    bl,BYTE PTR ds:0xbed3d562
  406c04:	xchg   ecx,eax
  406c05:	or     dl,dl
  406c07:	aas    
  406c08:	sub    BYTE PTR [ecx-0x26f71f4c],bl
  406c0e:	push   es
  406c0f:	adc    BYTE PTR [esi],ch
  406c11:	leave  
  406c12:	add    bl,BYTE PTR [ebp-0x6b]
  406c15:	push   ss
  406c16:	add    eax,0x4be21928
  406c1b:	cmc    
  406c1c:	imul   esi
  406c1e:	cmp    eax,0x4852da6a
  406c23:	loope  0x406c29
  406c25:	das    
  406c26:	sti    
  406c27:	mov    ebp,0x4cf1137d
  406c2c:	xchg   edx,eax
  406c2d:	mov    al,ds:0xbd7a8ef4
  406c32:	addr16 push 0x64
  406c35:	arpl   di,si
  406c37:	ins    DWORD PTR es:[edi],dx
  406c38:	mov    eax,ds:0x1675ebd8
  406c3d:	fst    QWORD PTR [edi+0x66872eab]
  406c43:	cmp    DWORD PTR [edx],eax
  406c45:	rcl    BYTE PTR [edx],cl
  406c47:	jle    0x406cc4
  406c49:	out    0x26,eax
  406c4b:	adc    eax,0x32a1c758
  406c50:	lods   eax,DWORD PTR ds:[esi]
  406c51:	mov    bl,BYTE PTR [ecx]
  406c53:	push   ds
  406c54:	adc    al,0x66
  406c56:	pop    edi
  406c57:	fucomp st(2)
  406c59:	fwait
  406c5a:	sub    cl,BYTE PTR [esi]
  406c5c:	ins    BYTE PTR es:[edi],dx
  406c5d:	dec    edx
  406c5e:	es push 0xd9ba250d
  406c64:	inc    esi
  406c65:	xchg   esp,eax
  406c66:	sbb    al,0x1b
  406c68:	call   0x7ad7:0xbca320fa
  406c6f:	jmp    0x406bfe
  406c71:	fs int3 
  406c73:	mov    ds:0x729ffc5c,eax
  406c78:	stc    
  406c79:	fidivr WORD PTR [eax]
  406c7b:	pop    ss
  406c7c:	sub    edx,edx
  406c7e:	imul   edi,edi,0xffffffdf
  406c81:	scas   eax,DWORD PTR es:[edi]
  406c82:	ret    
  406c83:	mov    dl,ah
  406c85:	aam    0x41
  406c87:	adc    al,BYTE PTR [esi-0x4d]
  406c8a:	jae    0x406cd3
  406c8c:	push   es
  406c8d:	ret    
  406c8e:	fcom   QWORD PTR [ecx]
  406c90:	xor    DWORD PTR [ecx-0x47],ebx
  406c93:	addr16 bnd js 0x406c5f
  406c97:	fwait
  406c98:	mov    cl,0xf8
  406c9a:	pop    es
  406c9b:	xchg   DWORD PTR [edx+eiz*2],ebp
  406c9e:	mov    cl,0xc
  406ca0:	out    dx,al
  406ca1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406ca3:	jae    0x406ce6
  406ca5:	mov    eax,0x45694b0e
  406caa:	outs   dx,BYTE PTR ds:[esi]
  406cab:	push   es
  406cac:	mov    ah,BYTE PTR [ebx+0x44861871]
  406cb2:	enter  0x9930,0xc0
  406cb6:	pushf  
  406cb7:	stos   BYTE PTR es:[edi],al
  406cb8:	mov    BYTE PTR [esp+eiz*8+0x4],al
  406cbc:	add    DWORD PTR [esi],0xc
  406cbf:	call   0x62e64143
  406cc4:	sbb    ch,BYTE PTR ds:0xdb52020b
  406cca:	sbb    ebp,ecx
  406ccc:	dec    esi
  406ccd:	mov    ebx,0x36671686
  406cd2:	into   
  406cd3:	imul   ebp,DWORD PTR [ebx-0x5b33ce07],0x6d
  406cda:	push   edx
  406cdb:	push   0xffffff8c
  406cdd:	xor    al,0x90
  406cdf:	ret    0x837a
  406ce2:	retf   0x97cf
  406ce5:	mov    WORD PTR [eax+0x59],ss
  406ce8:	(bad)  [edi+0x7b5a5eac]
  406cee:	add    ebx,DWORD PTR [ebp-0x77]
  406cf1:	or     BYTE PTR [ecx+0x30df7981],dh
  406cf7:	mul    DWORD PTR [eax]
  406cf9:	ins    DWORD PTR es:[edi],dx
  406cfa:	mov    ebx,0xee185cd6
  406cff:	pop    edx
  406d00:	mov    bh,0x43
  406d02:	mov    edx,DWORD PTR [ebp+0x76]
  406d05:	rcl    BYTE PTR [eax+0x5d],cl
  406d08:	pushf  
  406d09:	test   al,0x65
  406d0b:	fild   WORD PTR [ebx-0x30]
  406d0e:	and    ch,dh
  406d10:	dec    esi
  406d11:	and    ch,ch
  406d13:	pop    ebp
  406d14:	xchg   ebp,eax
  406d15:	sub    al,0xcb
  406d17:	sbb    dh,dh
  406d19:	xchg   edx,eax
  406d1a:	stos   BYTE PTR es:[edi],al
  406d1b:	fistp  DWORD PTR [eax-0x1346150a]
  406d21:	ins    DWORD PTR es:[edi],dx
  406d22:	mov    bh,0x57
  406d24:	and    ch,BYTE PTR [edi-0x464f83bb]
  406d2a:	ret    0x7cbf
  406d2d:	dec    edx
  406d2e:	mov    BYTE PTR [ebp*4-0x2620d44],ah
  406d35:	sbb    eax,0xa68bcaef
  406d3a:	jmp    DWORD PTR [edi+0x24]
  406d3d:	out    0x91,eax
  406d3f:	mov    DWORD PTR [esi+0x3d0f15f1],ebx
  406d45:	sbb    bh,BYTE PTR [edi+0x58]
  406d48:	adc    BYTE PTR [esi],0xa3
  406d4b:	and    DWORD PTR [edx+0x55],0xb8f03ad5
  406d52:	neg    BYTE PTR [eax+0x7fa037f0]
  406d58:	nop
  406d59:	mov    bh,0xac
  406d5b:	aad    0x37
  406d5d:	xchg   edx,eax
  406d5e:	or     BYTE PTR [edi+0x79],ch
  406d61:	dec    eax
  406d62:	mov    cl,0x30
  406d64:	push   es
  406d65:	add    al,0xbf
  406d67:	pushf  
  406d68:	push   es
  406d69:	jb     0x406d49
  406d6b:	inc    esi
  406d6c:	jae    0x406d7b
  406d6e:	(bad)  
  406d70:	fidivr WORD PTR [eax]
  406d72:	push   es
  406d73:	dec    ecx
  406d74:	and    al,0x8e
  406d76:	iret   
  406d77:	scas   al,BYTE PTR es:[edi]
  406d78:	xor    dh,BYTE PTR [esi-0x3c2384b]
  406d7e:	clc    
  406d7f:	lods   al,BYTE PTR ds:[esi]
  406d80:	loopne 0x406d55
  406d82:	repz jo 0x406d0c
  406d85:	inc    ecx
  406d86:	(bad)  
  406d88:	mov    ch,0x39
  406d8a:	jg     0x406dd8
  406d8c:	pop    ss
  406d8d:	pop    eax
  406d8e:	outs   dx,BYTE PTR ds:[esi]
  406d8f:	enter  0x502f,0x65
  406d93:	mov    WORD PTR [edi-0x3d68eac2],?
  406d99:	mov    gs,WORD PTR [eax-0x1dbee8be]
  406d9f:	inc    esi
  406da0:	cmp    esi,DWORD PTR [edx-0x42539af3]
  406da6:	mov    DWORD PTR [ebp+0x6b2182ce],edx
  406dac:	push   0xd4e935cc
  406db1:	jnp    0x406da5
  406db3:	dec    edx
  406db4:	(bad)  
  406db5:	jne    0x406dd6
  406db7:	cmp    DWORD PTR [ebp+ebp*2+0x1d],ebp
  406dbb:	fwait
  406dbc:	inc    eax
  406dbd:	ret    
  406dbe:	adc    dh,0x38
  406dc1:	aam    0x33
  406dc3:	ror    DWORD PTR [edx+0x48352df],1
  406dc9:	daa    
  406dca:	outs   dx,BYTE PTR ds:[esi]
  406dcb:	push   0x7d
  406dcd:	iret   
  406dce:	sbb    bh,bl
  406dd0:	into   
  406dd1:	inc    edi
  406dd2:	and    al,0xc0
  406dd4:	popf   
  406dd5:	sbb    eax,0xb9a02459
  406dda:	jge    0x406d90
  406ddc:	lods   al,BYTE PTR ds:[esi]
  406ddd:	sbb    DWORD PTR [edx+0x59],ebp
  406de0:	daa    
  406de1:	or     eax,0x8ead3aa9
  406de6:	inc    edx
  406de7:	adc    BYTE PTR [edx-0x8ba59f3],bh
  406ded:	aas    
  406dee:	cs jmp 0x45af:0x4a1866ae
  406df6:	lods   eax,DWORD PTR ds:[esi]
  406df7:	loope  0x406d8a
  406df9:	jmp    0xf11b:0xdac5fe3a
  406e00:	add    DWORD PTR [ebp+0xa],0xd8fc661f
  406e07:	mov    esp,0x6c277895
  406e0c:	pop    ebx
  406e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e0e:	xlat   BYTE PTR ds:[ebx]
  406e0f:	add    DWORD PTR [eax+edi*4],ebp
  406e12:	iret   
  406e13:	push   ebx
  406e14:	not    DWORD PTR [edx+0x44]
  406e17:	out    0x26,eax
  406e19:	mov    edi,0xefbab07c
  406e1e:	das    
  406e1f:	mov    esp,0xf587f0e6
  406e24:	xor    eax,0xb9e37943
  406e29:	stos   DWORD PTR es:[edi],eax
  406e2a:	out    dx,al
  406e2b:	jb     0x406e8d
  406e2d:	sbb    BYTE PTR [ecx+0x176f88a2],ah
  406e33:	add    BYTE PTR [esi-0x2c],dl
  406e36:	mov    DWORD PTR [ecx+0x2c],esi
  406e39:	cmp    DWORD PTR [ecx+edi*2],esp
  406e3c:	loope  0x406e8c
  406e3e:	xchg   edx,eax
  406e3f:	inc    ebp
  406e40:	dec    edi
  406e41:	jmp    0x2e68:0x45e9b04c
  406e48:	das    
  406e49:	mov    ch,0xc6
  406e4b:	add    dh,bl
  406e4d:	xchg   edi,eax
  406e4e:	fsub   QWORD PTR [edx]
  406e50:	fdivrp st(4),st
  406e52:	clc    
  406e53:	add    DWORD PTR [ebp+0x4c],ebp
  406e56:	xchg   esp,eax
  406e57:	sub    eax,0x4b75f99
  406e5c:	int    0x13
  406e5e:	mov    edi,0xa90513dd
  406e63:	loopne 0x406e8f
  406e65:	adc    edx,DWORD PTR [ebp+0x39]
  406e68:	jecxz  0x406df1
  406e6a:	nop
  406e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e6c:	xor    cl,dl
  406e6e:	push   es
  406e6f:	xchg   esp,eax
  406e70:	mov    WORD PTR [ebp-0x5dd4418a],ss
  406e76:	popf   
  406e77:	cmp    BYTE PTR [edi+0x345a3957],cl
  406e7d:	fwait
  406e7e:	add    ah,ah
  406e80:	cs fs pop es
  406e83:	jp     0x406e80
  406e85:	pop    es
  406e86:	arpl   WORD PTR [edx+0x7fef459b],di
  406e8c:	sti    
  406e8d:	int3   
  406e8e:	rcr    DWORD PTR [ebx+0x4a],cl
  406e91:	jp     0x406eb6
  406e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e94:	das    
  406e95:	dec    edi
  406e96:	add    al,0xdf
  406e98:	mov    ds:0xcd30c026,eax
  406e9d:	ret    0x12c0
  406ea0:	jmp    FWORD PTR [ecx]
  406ea2:	int3   
  406ea3:	push   es
  406ea4:	sub    al,0x71
  406ea6:	hlt    
  406ea7:	xchg   esi,eax
  406ea8:	lahf   
  406ea9:	fs ins DWORD PTR es:[edi],dx
  406eab:	repz sbb BYTE PTR [eax],ch
  406eae:	jge    0x406e5b
  406eb0:	or     eax,0x4935f70c
  406eb5:	jp     0x406ebd
  406eb7:	mov    eax,0xdcac3117
  406ebc:	loop   0x406e77
  406ebe:	mov    cl,0x69
  406ec0:	fsub   DWORD PTR [eax+edi*2+0x7a]
  406ec4:	fnstcw WORD PTR [ebx-0x3bd5cb1f]
  406eca:	mov    ah,0x1e
  406ecc:	bound  ecx,QWORD PTR [edi+0x7ac6db64]
  406ed2:	mov    ds:0x5a61dbb8,eax
  406ed7:	(bad)  [ecx-0x22c3dde5]
  406edd:	sub    al,BYTE PTR [esi-0x20]
  406ee0:	pop    bp
  406ee2:	popa   
  406ee3:	psrlw  mm6,QWORD PTR [esi-0x460041d8]
  406eea:	rol    BYTE PTR [edx-0x61],1
  406eed:	mov    dl,0x11
  406eef:	push   es
  406ef0:	jle    0x406f54
  406ef2:	adc    dh,BYTE PTR [eax]
  406ef4:	xchg   DWORD PTR [ebx+0x756577da],ecx
  406efa:	into   
  406efb:	jae    0x406f74
  406efd:	test   DWORD PTR [edx],ebx
  406eff:	push   ebx
  406f00:	clc    
  406f01:	push   ss
  406f02:	sar    esi,1
  406f04:	push   edi
  406f05:	pop    ss
  406f06:	xlat   BYTE PTR ds:[ebx]
  406f07:	add    eax,0x266c4cb6
  406f0c:	in     al,dx
  406f0d:	loopne 0x406ee9
  406f0f:	daa    
  406f10:	fidiv  WORD PTR [edx-0x30f1df97]
  406f16:	add    bh,dl
  406f18:	pop    edi
  406f1a:	mov    dl,0xf5
  406f1c:	popa   
  406f1d:	jns    0x406f64
  406f1f:	add    esi,DWORD PTR [eax+0x47e4e99]
  406f25:	xor    DWORD PTR [ebp+0x14],ebp
  406f28:	cmp    al,0xbf
  406f2a:	pop    edx
  406f2b:	test   DWORD PTR [esi-0x6c9e35d0],0xeb2e2f67
  406f35:	mov    al,ds:0x336736e4
  406f3a:	pushf  
  406f3b:	cmp    al,0xa3
  406f3d:	std    
  406f3e:	sbb    eax,0x9182aad2
  406f43:	dec    edi
  406f44:	xor    ecx,ebp
  406f46:	sbb    esi,ebx
  406f48:	adc    al,0x8f
  406f4a:	pop    ss
  406f4b:	data16 (bad) 
  406f4d:	rcr    ah,1
  406f4f:	imul   ebx
  406f51:	cmp    BYTE PTR [esi-0x28],bl
  406f54:	dec    esp
  406f55:	inc    esi
  406f56:	inc    esi
  406f57:	pusha  
  406f58:	ret    0xdf44
  406f5b:	(bad)  
  406f5c:	lahf   
  406f5d:	inc    esi
  406f5e:	add    eax,0xfd37e7dc
  406f63:	xchg   ebp,eax
  406f64:	cmp    BYTE PTR [ebx+0xa],bh
  406f67:	pusha  
  406f68:	mov    edx,DWORD PTR [ebx-0x1a]
  406f6b:	jl     0x406fbf
  406f6d:	pop    ebx
  406f6e:	jo     0x406f4e
  406f70:	pop    edi
  406f71:	push   edi
  406f72:	jle    0x406f1e
  406f74:	or     esp,DWORD PTR [ebp-0x9c590f]
  406f7a:	xchg   edi,eax
  406f7b:	push   es
  406f7c:	pop    esp
  406f7d:	jbe    0x406f2e
  406f7f:	push   es
  406f80:	(bad)  
  406f81:	(bad)  
  406f83:	pushf  
  406f84:	sub    ebx,ebp
  406f86:	xchg   ebp,eax
  406f87:	test   eax,0xe1125ad4
  406f8c:	mov    edx,0x9916972b
  406f91:	jecxz  0x406f14
  406f93:	test   al,0x8c
  406f95:	jg     0x406ffc
  406f97:	mov    edi,0x4cdfe6f7
  406f9c:	add    ebx,DWORD PTR [eax-0x4c]
  406f9f:	outs   dx,DWORD PTR ds:[esi]
  406fa0:	(bad)  
  406fa1:	out    0x63,al
  406fa3:	pop    ds
  406fa4:	xlat   BYTE PTR ds:[ebx]
  406fa5:	(bad)  
  406fa6:	retf   
  406fa7:	arpl   WORD PTR [ecx+eax*4-0x115bb01a],bx
  406fae:	es inc ecx
  406fb0:	addr16 popf 
  406fb2:	pop    esp
  406fb3:	mov    ah,0x82
  406fb5:	adc    eax,0xe4ef4c3e
  406fba:	push   ecx
  406fbb:	jle    0x406f83
  406fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fbe:	dec    eax
  406fbf:	inc    ebx
  406fc0:	mov    esp,0xa3a4ea3f
  406fc5:	loopne 0x40701b
  406fc7:	push   ebp
  406fc8:	jne    0x406f68
  406fca:	pop    ebp
  406fcb:	sbb    DWORD PTR [ebp+0x5140e9e3],esp
  406fd1:	push   es
  406fd2:	leave  
  406fd3:	and    BYTE PTR ds:0xde3e6b6a,al
  406fd9:	jmp    0x16dc:0xdf959f9
  406fe0:	pop    edx
  406fe1:	cmp    DWORD PTR [ecx-0x1d],esi
  406fe4:	xchg   esi,eax
  406fe5:	cli    
  406fe6:	(bad)  
  406fe7:	pop    ebp
  406fe8:	sub    dh,bh
  406fea:	and    edi,edx
  406fec:	push   edi
  406fed:	xor    eax,0x9b4a9f4d
  406ff2:	add    BYTE PTR [edx+0x188d8491],ch
  406ff8:	push   0x62
  406ffa:	jns    0x40704f
  406ffc:	xchg   ebp,eax
  406ffd:	xchg   edx,eax
  406ffe:	rcr    DWORD PTR [esi-0x10],1
  407001:	adc    ch,0x8
  407004:	mov    ah,0x72
  407006:	fwait
  407007:	mov    ds:0x6ecaa486,al
  40700c:	push   ss
  40700d:	(bad)  
  40700f:	add    ah,BYTE PTR [ebx+ebp*4]
  407012:	popf   
  407013:	fmul   st(0),st
  407015:	mov    ebx,0xb7f5324
  40701a:	sub    al,0x1f
  40701c:	mov    edi,0x2a5b80ea
  407021:	xchg   ebx,eax
  407022:	les    ecx,FWORD PTR ds:0x353e0ad9
  407028:	in     al,dx
  407029:	out    0x88,eax
  40702b:	(bad)  
  40702d:	inc    eax
  40702e:	ret    0x87a7
  407031:	pop    esp
  407032:	int    0x37
  407034:	leave  
  407035:	(bad)  
  407036:	cdq    
  407037:	add    edi,ecx
  407039:	lods   eax,DWORD PTR ss:[esi]
  40703b:	outs   dx,BYTE PTR ds:[esi]
  40703c:	jle    0x407074
  40703e:	js     0x4070b8
  407040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407041:	push   ecx
  407042:	popf   
  407043:	lahf   
  407044:	or     esi,DWORD PTR [edi-0x4fa20a35]
  40704a:	shr    DWORD PTR [esi+ecx*1+0x1e69d83d],1
  407051:	arpl   WORD PTR [ecx],dx
  407053:	or     DWORD PTR [eax+0x25],0x917f2ee7
  40705a:	(bad)  
  40705b:	cld    
  40705c:	and    BYTE PTR [ebx-0x78],0x9c
  407060:	xchg   esp,eax
  407061:	shl    dl,cl
  407063:	sub    al,0x6e
  407065:	push   0xffffffdc
  407067:	inc    esi
  407068:	mov    BYTE PTR [esp+ecx*4],0xfc
  40706c:	rol    eax,cl
  40706e:	gs mov ecx,0x40b33796
  407074:	push   cs
  407075:	pop    edx
  407076:	mov    ah,0x8f
  407078:	xchg   ebx,eax
  407079:	mov    ecx,0x94de1e97
  40707e:	add    bl,BYTE PTR [ecx+0x21b4d459]
  407084:	loope  0x4070da
  407086:	sub    esp,DWORD PTR [ebx+ebx*8-0x2980b5d5]
  40708d:	lods   eax,DWORD PTR ds:[esi]
  40708e:	hlt    
  40708f:	cmp    DWORD PTR [ebx-0x59],edi
  407092:	dec    ebp
  407093:	rcr    BYTE PTR [edx+ebx*8-0x4a],1
  407097:	out    0xd1,eax
  407099:	xchg   DWORD PTR [ebx+0x1fc101e3],esp
  40709f:	int3   
  4070a0:	ins    BYTE PTR es:[edi],dx
  4070a1:	mov    ds:0xe32f952c,al
  4070a6:	les    edi,FWORD PTR [esi]
  4070a8:	mov    al,ds:0x448d3fee
  4070ad:	lods   al,BYTE PTR ds:[esi]
  4070ae:	sub    ebx,ebx
  4070b0:	adc    eax,0xdfe25736
  4070b5:	in     eax,0x64
  4070b7:	pop    ebp
  4070b8:	jge    0x40703c
  4070ba:	ja     0x407067
  4070bc:	aad    0x96
  4070be:	cli    
  4070bf:	das    
  4070c0:	mov    eax,ds:0x7ceedaac
  4070c5:	hlt    
  4070c6:	ficom  DWORD PTR [ecx-0x77124df8]
  4070cc:	ret    0x3b0a
  4070cf:	xor    ah,bh
  4070d1:	adc    bh,ch
  4070d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070d4:	push   ds
  4070d5:	adc    bh,BYTE PTR [ebx+0x6d]
  4070d8:	dec    esp
  4070d9:	sahf   
  4070da:	sub    al,0x7e
  4070dc:	push   esi
  4070dd:	sbb    DWORD PTR [ebx+0x12e8c809],ebx
  4070e3:	aas    
  4070e4:	pop    di
  4070e6:	pop    esi
  4070e7:	jbe    0x407158
  4070e9:	sub    edi,eax
  4070eb:	mov    al,ds:0xbda03ca8
  4070f0:	jge    0x407074
  4070f2:	xchg   ebp,eax
  4070f3:	stc    
  4070f4:	sahf   
  4070f5:	cmc    
  4070f6:	xchg   edx,eax
  4070f7:	jne    0x407148
  4070f9:	loopne 0x40712b
  4070fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fc:	in     al,dx
  4070fd:	into   
  4070fe:	rcr    BYTE PTR fs:[eax-0x2],0x92
  407103:	push   edx
  407104:	xchg   esp,eax
  407105:	mov    ebx,0xf88d3038
  40710a:	jl     0x4070e8
  40710c:	mov    dl,0x22
  40710e:	push   ebp
  40710f:	ds in  eax,dx
  407111:	sbb    BYTE PTR [ecx+eax*4+0x64],ah
  407115:	sub    al,0x4d
  407117:	ins    BYTE PTR es:[edi],dx
  407118:	mov    edx,0xcccd357f
  40711d:	add    BYTE PTR [eax-0xe8f6069],cl
  407123:	mov    ebp,0x181bbfd
  407128:	push   ss
  407129:	ins    DWORD PTR es:[edi],dx
  40712a:	(bad)  
  40712b:	cmp    eax,DWORD PTR [edx-0x8]
  40712e:	mov    bl,0xb7
  407130:	cmp    BYTE PTR [edi+0x37549730],ah
  407136:	add    BYTE PTR [edx],al
  407138:	dec    ebp
  407139:	push   0xbee5448b
  40713e:	imul   ecx,DWORD PTR [edx],0x7ed54486
  407144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407145:	and    edi,esp
  407147:	sub    DWORD PTR [ebp-0x12],eax
  40714a:	mov    ds:0x4f30ea7f,al
  40714f:	iret   
  407150:	xchg   esp,eax
  407151:	pop    ds
  407152:	xor    BYTE PTR [ecx+0x5],0x33
  407156:	inc    ebx
  407157:	fistp  QWORD PTR [eax+0x19]
  40715a:	pop    es
  40715b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40715c:	ins    BYTE PTR es:[edi],dx
  40715d:	sub    DWORD PTR [ebx-0x7f],edi
  407160:	scas   al,BYTE PTR es:[edi]
  407161:	cmc    
  407162:	jbe    0x40714f
  407164:	sub    DWORD PTR [edi-0x42ff418b],ecx
  40716a:	std    
  40716b:	mov    eax,0xf47fd215
  407170:	test   al,0x69
  407172:	sbb    al,0xfa
  407174:	jg     0x4071bd
  407176:	arpl   WORD PTR [ecx+0x4b19a899],ax
  40717c:	cdq    
  40717d:	xchg   ebx,eax
  40717e:	mov    dh,0x4f
  407180:	pop    ebx
  407181:	xchg   esp,eax
  407182:	(bad)  
  407183:	push   ebx
  407184:	mov    edi,0x3419667a
  407189:	push   esi
  40718a:	in     eax,dx
  40718b:	inc    edx
  40718c:	mov    ebp,DWORD PTR cs:[edx]
  40718f:	or     BYTE PTR [ebx+0x3a174285],cl
  407195:	inc    edi
  407196:	cmp    ch,dh
  407198:	ds mov ah,0xbd
  40719b:	retf   
  40719c:	jecxz  0x4071ee
  40719e:	adc    bh,BYTE PTR [si-0x16]
  4071a2:	sbb    BYTE PTR [ebx+0x2b],dh
  4071a5:	shl    DWORD PTR [ecx+esi*2-0x20bd496d],0xd6
  4071ad:	push   edx
  4071ae:	xor    DWORD PTR [ebx],edx
  4071b0:	cmp    BYTE PTR [edi-0x6d],0x6a
  4071b4:	dec    edi
  4071b5:	test   al,0xed
  4071b7:	mov    al,0x42
  4071b9:	add    DWORD PTR [ebp+0x7e],esi
  4071bc:	jecxz  0x4071d5
  4071be:	pop    es
  4071bf:	lods   al,BYTE PTR ds:[esi]
  4071c0:	and    edi,DWORD PTR [ebx+0x66]
  4071c3:	popa   
  4071c4:	int    0x34
  4071c6:	sub    BYTE PTR [edx-0x393a9aaa],dh
  4071cc:	pop    esi
  4071cd:	in     eax,dx
  4071ce:	ret    
  4071cf:	lods   al,BYTE PTR ds:[esi]
  4071d0:	xor    al,0xad
  4071d2:	adc    BYTE PTR ds:0x107a78e,dl
  4071d8:	cmp    eax,0x3e190e01
  4071dd:	xor    BYTE PTR [edx-0x3d8cacc8],ch
  4071e3:	jns    0x4071d9
  4071e5:	les    edi,FWORD PTR [ecx+0x6]
  4071e8:	and    al,0x2f
  4071ea:	add    al,0xdf
  4071ec:	out    0x60,al
  4071ee:	(bad)  
  4071ef:	scas   al,BYTE PTR es:[edi]
  4071f0:	arpl   WORD PTR [edi-0x51],bp
  4071f3:	jl     0x4071f2
  4071f5:	and    eax,0xe36fcee8
  4071fa:	jns    0x407274
  4071fc:	xor    eax,0x23ba7ea7
  407201:	mov    al,ds:0xf7e4818f
  407206:	jmp    0xc78b:0x1953a3c7
  40720d:	push   esi
  40720e:	adc    eax,DWORD PTR ds:0x474651e6
  407214:	mov    dl,0xcb
  407216:	pushf  
  407217:	mov    DWORD PTR [edx+0x63],edi
  40721a:	jmp    0xf7f842d4
  40721f:	pop    esi
  407220:	cmp    eax,DWORD PTR [ebx]
  407222:	lea    dx,[edi+0x38]
  407226:	push   ss
  407227:	inc    ecx
  407228:	jp     0x407255
  40722a:	not    BYTE PTR [esi+eax*4]
  40722d:	pop    edx
  40722e:	add    ebx,DWORD PTR [esi+edx*8-0x45]
  407232:	xchg   edx,eax
  407233:	or     DWORD PTR [esi+0x44ea476a],ebp
  407239:	out    0xeb,al
  40723b:	xor    eax,0x5def2061
  407240:	outs   dx,BYTE PTR ds:[esi]
  407241:	push   ds
  407242:	cmc    
  407243:	sub    eax,0x4b19017d
  407248:	adc    DWORD PTR [esi-0x4d],eax
  40724b:	push   0x7003cb25
  407250:	sub    al,0x5d
  407252:	mov    WORD PTR [edi],gs
  407254:	icebp  
  407255:	jp     0x40724e
  407257:	iret   
  407258:	cmp    esp,DWORD PTR [esi-0x2f]
  40725b:	add    al,BYTE PTR [eax-0x2e]
  40725e:	inc    edx
  40725f:	mov    eax,0x5ce84c8c
  407264:	dec    ebx
  407265:	pop    esi
  407266:	add    eax,0x3d8ace6
  40726b:	push   0xffffffe0
  40726d:	mov    fs,WORD PTR [edx+0x727faff6]
  407273:	dec    esi
  407274:	sub    ch,BYTE PTR [edx]
  407276:	dec    edx
  407277:	adc    esp,DWORD PTR [ecx+0x3467d422]
  40727d:	mov    edx,0x5a2bf6a1
  407282:	mov    ds:0x76d06516,al
  407287:	test   ch,bl
  407289:	add    DWORD PTR [ebp-0x70dcfcba],ebp
  40728f:	and    DWORD PTR [eax+0x13],ebp
  407292:	mov    edi,DWORD PTR [edi]
  407294:	je     0x407235
  407296:	pop    ebp
  407297:	or     al,0xa4
  407299:	cmc    
  40729a:	loope  0x4072cd
  40729c:	je     0x4072e4
  40729e:	add    dh,ah
  4072a0:	test   al,0x98
  4072a2:	test   eax,0x10ef0caf
  4072a7:	imul   esi,DWORD PTR [ecx+edx*1],0x71
  4072ab:	out    0xdf,al
  4072ad:	gs sahf 
  4072af:	inc    eax
  4072b0:	retf   
  4072b1:	sbb    ebx,DWORD PTR [ecx+0x29]
  4072b4:	pop    edx
  4072b5:	out    0xa1,eax
  4072b7:	retf   0x1921
  4072ba:	in     eax,dx
  4072bb:	popf   
  4072bc:	ror    DWORD PTR [ecx-0x48],0xe
  4072c0:	sub    dh,BYTE PTR [ebx]
  4072c2:	daa    
  4072c3:	idiv   BYTE PTR [esi]
  4072c5:	sub    ebp,DWORD PTR [ebx+0x39c19d0c]
  4072cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072cc:	mov    bl,BYTE PTR [ebp+0x4b]
  4072cf:	sti    
  4072d0:	jle    0x4072db
  4072d2:	mov    WORD PTR ds:[edi+0x4b],cs
  4072d6:	out    0x2d,al
  4072d8:	xor    al,0xa
  4072da:	jmp    0x4072ee
  4072dc:	scas   al,BYTE PTR es:[edi]
  4072dd:	fild   DWORD PTR [edi-0x18]
  4072e0:	push   0xffffffb5
  4072e2:	cld    
  4072e3:	or     ah,ah
  4072e5:	jl     0x4072f3
  4072e7:	mov    WORD PTR ss:[eax],sp
  4072eb:	inc    edx
  4072ec:	lds    ebp,FWORD PTR [edi-0x4952bf5]
  4072f2:	scas   al,BYTE PTR es:[edi]
  4072f3:	jle    0x407296
  4072f5:	ret    0x56de
  4072f8:	pop    edi
  4072f9:	jmp    0x8878:0xc976705f
  407300:	gs fwait
  407302:	jno    0x4072d4
  407304:	or     BYTE PTR [edi],ch
  407306:	pushf  
  407307:	(bad)  [edi-0x20634ee0]
  40730d:	sti    
  40730e:	mov    ds:0xbd04730e,eax
  407313:	push   ss
  407314:	shl    DWORD PTR [ebx],0x53
  407317:	jbe    0x4072a5
  407319:	pop    edi
  40731a:	ja     0x4072f6
  40731c:	(bad)  
  40731d:	mov    edi,0x7a7756f
  407322:	in     eax,dx
  407323:	neg    DWORD PTR [edi-0x78]
  407326:	cdq    
  407327:	jmp    0x5623:0x300a5e97
  40732e:	frstor [edi-0x50a943e0]
  407334:	in     al,0x4e
  407336:	mov    cl,0x68
  407338:	xchg   edx,eax
  407339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733a:	push   esp
  40733b:	jge    0x4072cc
  40733d:	popf   
  40733e:	repz pop ebp
  407340:	cmp    edx,DWORD PTR [esi-0x41c44c8b]
  407346:	xor    al,0x8d
  407348:	inc    ecx
  407349:	mov    bl,0x4d
  40734b:	jle    0x4072eb
  40734d:	bound  esi,QWORD PTR [edi]
  40734f:	ins    DWORD PTR es:[edi],dx
  407350:	repz jno 0xef0be7cf
  407357:	cmp    dh,BYTE PTR [ebp-0x3b]
  40735a:	mov    ebx,esi
  40735c:	loope  0x4073a7
  40735e:	push   ebx
  40735f:	stos   DWORD PTR es:[edi],eax
  407360:	fmul   DWORD PTR [edx]
  407362:	sbb    al,0x36
  407364:	push   cs
  407365:	(bad)  
  407367:	lea    edi,[ecx]
  407369:	in     al,dx
  40736a:	aam    0x38
  40736c:	and    BYTE PTR [eax],al
  40736e:	pop    ds
  40736f:	dec    ebp
  407370:	cmp    BYTE PTR [edi+0x65cf0058],0x66
  407377:	mov    edx,0x36533aba
  40737c:	inc    edx
  40737d:	rcr    dh,0x9
  407380:	bound  esi,QWORD PTR [esi-0x42]
  407383:	mov    bh,BYTE PTR [ebp+esi*2-0x4374ef8b]
  40738a:	jb     0x407406
  40738c:	arpl   cx,ax
  40738e:	adc    al,ah
  407390:	jno    0x40731d
  407392:	fs dec edi
  407394:	or     al,0x83
  407396:	ins    BYTE PTR es:[edi],dx
  407397:	mov    ss,WORD PTR [edx-0x3]
  40739a:	pop    es
  40739b:	sar    BYTE PTR [ebp+0x29c442e],1
  4073a1:	ins    DWORD PTR es:[edi],dx
  4073a2:	dec    esp
  4073a3:	push   edx
  4073a4:	test   ebp,edx
  4073a6:	mov    edx,0x4e4e8b09
  4073ab:	cdq    
  4073ac:	mov    eax,ds:0xef27f424
  4073b1:	ins    DWORD PTR es:[edi],dx
  4073b2:	fstp   DWORD PTR es:[esi]
  4073b5:	push   ds
  4073b6:	ror    DWORD PTR [edi+edi*8+0x2c],1
  4073ba:	adc    eax,0xb0ee69f8
  4073bf:	dec    eax
  4073c0:	jns    0x407410
  4073c2:	jo     0x407356
  4073c4:	aad    0xcb
  4073c6:	dec    esp
  4073c7:	sahf   
  4073c8:	mov    BYTE PTR [ecx-0x7a],bl
  4073cb:	and    BYTE PTR [ecx+0x74fdf8f6],dh
  4073d1:	cmp    BYTE PTR [edx],0xa2
  4073d4:	pcmpeqb mm0,mm7
  4073d7:	jne    0x4073e8
  4073d9:	jle    0x40744f
  4073db:	pop    esi
  4073dc:	mov    bh,0xa4
  4073de:	xor    DWORD PTR [esi+ebx*4+0x19],esp
  4073e2:	and    BYTE PTR [esi+0x2412cc4d],bl
  4073e8:	shl    DWORD PTR [edi],cl
  4073ea:	jb     0x4073c6
  4073ec:	sti    
  4073ed:	ss jecxz 0x40741e
  4073f0:	jmp    0x5833e1e0
  4073f5:	dec    edi
  4073f6:	gs ret 
  4073f8:	pop    ecx
  4073f9:	adc    DWORD PTR [ecx],edx
  4073fb:	mov    ebp,0x9dec017
  407400:	push   esi
  407401:	adc    bh,BYTE PTR [ecx]
  407403:	jle    0x40746c
  407405:	rcr    DWORD PTR [ecx],0x4
  407408:	inc    esp
  407409:	aad    0x29
  40740b:	sbb    eax,0xd033ce0
  407410:	mov    cl,0xf6
  407412:	xor    eax,0x366f1cc2
  407417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407418:	shr    esp,0x0
  40741b:	enter  0x5976,0x8
  40741f:	adc    eax,0x664eb68e
  407424:	cmp    BYTE PTR [ebx+edi*2+0x67d920db],al
  40742b:	jns    0x407414
  40742d:	jae    0x407406
  40742f:	mov    ecx,0xb12bc03b
  407434:	out    dx,eax
  407435:	frstor [edx]
  407437:	int    0x90
  407439:	mov    cl,0x92
  40743b:	bound  esi,QWORD PTR [eax-0x7f]
  40743e:	repz in al,0x5a
  407441:	(bad)  
  407442:	adc    al,0xd3
  407444:	fild   QWORD PTR [esp+ebp*2+0x59]
  407448:	xor    DWORD PTR [edx+0x60],ecx
  40744b:	inc    esp
  40744c:	jne    0x407447
  40744e:	cli    
  40744f:	mov    ebp,DWORD PTR [eax]
  407451:	call   0x5aa72109
  407456:	mov    al,0x9b
  407458:	inc    edi
  407459:	mov    al,BYTE PTR [esi+eax*4]
  40745c:	sbb    eax,0x5b98ef79
  407461:	mov    fs,WORD PTR [edx+0x210602ec]
  407467:	adc    cl,cl
  407469:	icebp  
  40746a:	xor    bl,BYTE PTR [ebx+0x3d5eab42]
  407470:	cld    
  407471:	sub    edx,DWORD PTR [esi-0x176736e2]
  407477:	mov    ah,0x21
  407479:	test   BYTE PTR [esi+eiz*1-0x1748ac2f],al
  407480:	ror    DWORD PTR [ebx],1
  407482:	pop    ecx
  407483:	fwait
  407484:	dec    eax
  407485:	mov    dh,BYTE PTR [edi+edi*8]
  407488:	mov    fs,edx
  40748a:	lahf   
  40748b:	shr    BYTE PTR ds:0x99bc4249,1
  407491:	shl    BYTE PTR [edx+0x3b],0x8e
  407495:	mov    al,ds:0x1f93ffe5
  40749a:	cld    
  40749b:	cdq    
  40749c:	xchg   dh,cl
  40749e:	sbb    ch,ch
  4074a0:	int3   
  4074a1:	xor    DWORD PTR [ebx+0x67d74c25],ecx
  4074a7:	mov    WORD PTR [edx],?
  4074a9:	sahf   
  4074aa:	std    
  4074ab:	cmc    
  4074ac:	pop    ecx
  4074ad:	mov    BYTE PTR [esi+ecx*2-0x2ebbf789],ch
  4074b4:	pavgw  mm2,QWORD PTR [edx+0x6428bd90]
  4074bb:	stos   DWORD PTR es:[edi],eax
  4074bc:	int    0xf6
  4074be:	xor    esp,edi
  4074c0:	jne    0x40753e
  4074c2:	mul    BYTE PTR [ecx]
  4074c4:	pop    ds
  4074c5:	arpl   WORD PTR [esi+0x7e072fcb],sp
  4074cb:	cmp    bh,ch
  4074cd:	scas   al,BYTE PTR es:[edi]
  4074ce:	retf   0x2a3d
  4074d1:	mov    esp,0x456e33e4
  4074d6:	xchg   esi,eax
  4074d7:	test   al,0xc6
  4074d9:	in     eax,dx
  4074da:	jb     0x407480
  4074dc:	sbb    BYTE PTR [ebx],dh
  4074de:	mov    ch,0xd8
  4074e0:	in     al,0x8c
  4074e2:	mov    esi,0x9dfa354c
  4074e7:	xchg   BYTE PTR [ecx],al
  4074e9:	pop    edi
  4074ea:	div    DWORD PTR [ecx+0x6]
  4074ed:	stos   DWORD PTR es:[edi],eax
  4074ee:	ret    0x2a64
  4074f1:	pop    es
  4074f2:	adc    al,cl
  4074f4:	sti    
  4074f5:	daa    
  4074f6:	test   al,0xe3
  4074f8:	jo     0x4074b4
  4074fa:	push   0xfffffff1
  4074fc:	push   0xffffffd6
  4074fe:	mov    ebx,0xb7d724f6
  407503:	dec    ebp
  407504:	in     al,0x7f
  407506:	mov    DWORD PTR [ebx+eax*2+0x7c],ecx
  40750a:	or     cl,cl
  40750c:	int3   
  40750d:	pop    edi
  40750e:	retf   
  40750f:	leave  
  407510:	jo     0x407583
  407512:	jp     0x407562
  407514:	aas    
  407515:	add    BYTE PTR [esi],dh
  407517:	in     eax,0x64
  407519:	xlat   BYTE PTR ds:[ebx]
  40751a:	jle    0x40755e
  40751c:	je     0x4074c5
  40751e:	jl     0x4074a6
  407520:	sbb    eax,0xe6eb8335
  407525:	(bad)  
  407526:	adc    esi,DWORD PTR [esi]
  407528:	or     al,0xd0
  40752a:	int    0x23
  40752c:	dec    esi
  40752d:	adc    dl,dl
  40752f:	daa    
  407530:	ret    0xf775
  407533:	sahf   
  407534:	rcl    DWORD PTR [ebx+ebp*2],1
  407537:	adc    ecx,DWORD PTR [esi-0xb]
  40753a:	or     al,BYTE PTR [ebx]
  40753c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40753d:	std    
  40753e:	cdq    
  40753f:	int3   
  407540:	call   0x40649f7d
  407545:	mov    esi,0xcf39c601
  40754a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40754b:	call   0xfe1e5982
  407550:	push   ds
  407551:	pextrw esp,mm5,0x16
  407555:	call   0xd7bf:0x4c953daa
  40755c:	and    BYTE PTR [esi+eax*4-0xc872505],ah
  407563:	ds pop ebp
  407565:	inc    ebp
  407566:	jne    0x4075d9
  407568:	push   0x6e02bdde
  40756d:	int3   
  40756e:	pop    esi
  40756f:	or     ecx,esi
  407571:	dec    eax
  407572:	dec    edi
  407573:	ins    WORD PTR es:[edi],dx
  407575:	jg     0x4075b8
  407577:	jmp    0xdcca80da
  40757c:	xor    DWORD PTR [edi-0x12581890],edx
  407582:	inc    ebp
  407583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407584:	jne    0x407584
  407586:	repnz les eax,FWORD PTR [edi]
  407589:	daa    
  40758a:	add    DWORD PTR [ebx],edx
  40758c:	push   ebp
  40758d:	push   eax
  40758e:	sahf   
  40758f:	lods   al,BYTE PTR ds:[esi]
  407590:	test   BYTE PTR [ecx],al
  407592:	mov    cl,0x90
  407594:	outs   dx,BYTE PTR ds:[esi]
  407595:	popa   
  407596:	add    eax,0xf5cb67ce
  40759b:	adc    dl,BYTE PTR [ebx+0x58]
  40759e:	dec    esp
  40759f:	pop    edi
  4075a0:	mov    ds,esi
  4075a2:	hlt    
  4075a3:	xor    DWORD PTR [edi+0x53],0xffffffc1
  4075a7:	repnz addr16 mul eax
  4075ab:	sti    
  4075ac:	mov    dl,0xe3
  4075ae:	out    dx,eax
  4075af:	adc    ebp,esi
  4075b1:	cmp    eax,0x40502493
  4075b6:	jl     0x407567
  4075b8:	vpmacssdql xmm6,xmm7,xmm0,XMMWORD PTR [ebx-0x1c0a0ee9]
  4075c2:	das    
  4075c3:	mov    edi,0x1efa641f
  4075c8:	or     BYTE PTR [eax],al
  4075ca:	fbld   TBYTE PTR [edx]
  4075cc:	xor    DWORD PTR [ecx+0x2ddcd2d4],ebx
  4075d2:	in     al,dx
  4075d3:	cmp    eax,DWORD PTR [eax+0x10]
  4075d6:	adc    cl,BYTE PTR [edx]
  4075d8:	jmp    0x39955c3e
  4075dd:	mov    eax,ds:0xc97fd52a
  4075e2:	push   ecx
  4075e3:	(bad)  
  4075e5:	sbb    eax,0xf0e0d06b
  4075ea:	pusha  
  4075eb:	xchg   edi,eax
  4075ec:	xor    BYTE PTR [eax+0x73e12deb],ah
  4075f2:	(bad)  
  4075f3:	(bad)  
  4075f5:	cmp    al,0xb7
  4075f7:	xlat   BYTE PTR ds:[ebx]
  4075f8:	(bad)  
  4075f9:	inc    BYTE PTR [edi-0xb]
  4075fc:	mov    esi,0x70478a81
  407601:	gs das 
  407603:	or     al,0xa9
  407605:	fadd   DWORD PTR [eax+0x40]
  407608:	sti    
  407609:	mov    bl,0xb6
  40760b:	xchg   ebp,eax
  40760c:	pop    edi
  40760d:	mov    edx,0xa04985b9
  407612:	dec    ebx
  407613:	sub    DWORD PTR [esi+0x1b5c6841],eax
  407619:	scas   al,BYTE PTR es:[edi]
  40761a:	icebp  
  40761b:	mov    dl,0x3b
  40761d:	int    0x53
  40761f:	cdq    
  407620:	dec    edx
  407621:	sub    BYTE PTR [ecx+0x217d0b44],0x5f
  407628:	push   esi
  407629:	pop    edx
  40762a:	scas   al,BYTE PTR es:[edi]
  40762b:	jle    0x407694
  40762d:	clc    
  40762e:	jb     0x4075e4
  407630:	cdq    
  407631:	pop    DWORD PTR [eax+0x64faed10]
  407637:	imul   ecx,DWORD PTR [eax+0x450e8f52],0x7
  40763e:	jo     0x4076aa
  407640:	dec    esi
  407641:	jge    0x4076bd
  407643:	fnsave [ecx-0x4c4fe8dd]
  407649:	int    0x2a
  40764b:	stos   BYTE PTR es:[edi],al
  40764c:	mov    esi,0x912ec9af
  407651:	add    BYTE PTR [edi+0xa],ch
  407654:	lock pop ecx
  407656:	jl     0x407637
  407658:	sub    al,0x16
  40765a:	inc    eax
  40765b:	imul   esi,edi,0xffffff9f
  40765e:	push   0x2
  407660:	mov    bh,0xbd
  407662:	push   edx
  407663:	es ds add al,0xff
  407667:	pop    edi
  407668:	inc    esi
  407669:	adc    dh,dl
  40766b:	adc    dh,bh
  40766d:	sar    cl,1
  40766f:	xlat   BYTE PTR ds:[ebx]
  407670:	lahf   
  407671:	xchg   BYTE PTR [eax+0x4d9bbd17],dl
  407677:	xor    eax,DWORD PTR [ecx-0x5d2a7a44]
  40767d:	and    al,0x6f
  40767f:	loop   0x4076e5
  407681:	loope  0x40766a
  407683:	das    
  407684:	mov    dh,0x93
  407686:	and    DWORD PTR [ecx-0xcc5ce75],edi
  40768c:	and    dl,0x5f
  40768f:	xor    al,BYTE PTR [ecx-0x645a680d]
  407695:	push   cs
  407696:	sbb    DWORD PTR [ebx+0x19],edi
  407699:	imul   esp,DWORD PTR [edx],0x85c41725
  40769f:	mov    ah,0xdf
  4076a1:	dec    eax
  4076a2:	push   0xffffffef
  4076a4:	sti    
  4076a5:	xlat   BYTE PTR ds:[ebx]
  4076a6:	call   0xd655:0x204dbdf1
  4076ad:	gs data16 daa 
  4076b0:	or     DWORD PTR [edx],edx
  4076b2:	ja     0x4076dc
  4076b4:	sar    DWORD PTR [ecx-0x36],0x4d
  4076b8:	xacquire xchg DWORD PTR [esi+0x4d71727],ebp
  4076bf:	inc    esi
  4076c0:	push   ebx
  4076c1:	cld    
  4076c2:	mov    edi,DWORD PTR [eax]
  4076c4:	dec    esp
  4076c5:	sti    
  4076c6:	not    ebx
  4076c8:	push   esi
  4076c9:	arpl   sp,sp
  4076cb:	clc    
  4076cc:	inc    esi
  4076cd:	adc    BYTE PTR [ebp-0x3a86a1f],dh
  4076d3:	xor    ch,bh
  4076d5:	sahf   
  4076d6:	cwde   
  4076d7:	das    
  4076d8:	(bad)  
  4076da:	push   ss
  4076db:	ins    BYTE PTR es:[edi],dx
  4076dc:	pop    ds
  4076dd:	xchg   esp,eax
  4076de:	push   edi
  4076df:	dec    esp
  4076e0:	cmp    cl,BYTE PTR [ebx-0x59bd7c8c]
  4076e6:	call   0x4e6f:0xc23ef82d
  4076ed:	and    al,0xcb
  4076ef:	jo     0x40767c
  4076f1:	std    
  4076f2:	xchg   ebp,eax
  4076f3:	test   edi,0x18475d01
  4076f9:	mov    ah,0xe9
  4076fb:	shl    esp,0x77
  4076fe:	add    eax,0x9e54ab9e
  407703:	je     0x4076ab
  407705:	mov    al,0xb
  407707:	(bad)  
  407708:	jnp    0x407739
  40770a:	mov    esp,esi
  40770c:	mov    dl,0x91
  40770e:	sbb    ebp,DWORD PTR [ecx]
  407710:	data16 mov ch,0x1c
  407713:	or     BYTE PTR ss:[edi+0x3],0x78
  407718:	add    eax,0x19a8d66d
  40771d:	xor    BYTE PTR [ebp*1+0x68d7b283],bh
  407724:	pop    ecx
  407725:	imul   ebx,DWORD PTR [ebp+0x17],0x62892cdb
  40772c:	push   edx
  40772d:	mov    ?,WORD PTR [esp+ebx*4-0x1c03c1ba]
  407734:	or     WORD PTR ds:0xd4eb7aee,bp
  40773b:	inc    ecx
  40773c:	fisttp QWORD PTR [ebx-0x6]
  40773f:	enter  0xc566,0xef
  407743:	ret    0x18a4
  407746:	xor    BYTE PTR [esi-0x1cdc9eb8],al
  40774c:	mov    ds:0x5bf3e81e,eax
  407751:	js     0x407781
  407753:	dec    ebp
  407754:	fcmovb st,st(1)
  407756:	mov    ah,0xd2
  407758:	imul   DWORD PTR [ecx+0x50]
  40775b:	shr    DWORD PTR ds:0xc30d93dc,1
  407761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407762:	ror    BYTE PTR cs:[ecx],cl
  407765:	and    BYTE PTR [ebx-0x16468cbc],al
  40776b:	fsub   DWORD PTR [ebp-0x36f1a4c1]
  407771:	lods   al,BYTE PTR ds:[esi]
  407772:	jmp    0x4077f1
  407774:	xchg   ebx,eax
  407775:	pop    ds
  407776:	daa    
  407777:	jb     0x407782
  407779:	adc    eax,0x9425004f
  40777e:	sub    ebp,eax
  407780:	call   0x2808:0x9c501e53
  407787:	shr    esp,cl
  407789:	and    eax,0xbb05a3d1
  40778e:	dec    edi
  40778f:	ss push edi
  407791:	pop    eax
  407792:	mov    edi,0x7282fe8d
  407797:	mov    ebp,0x49b62211
  40779c:	adc    al,0xc4
  40779e:	cmp    DWORD PTR [ebp-0x5f3a6171],esi
  4077a4:	loopne 0x4077f1
  4077a6:	int    0x4e
  4077a8:	fild   WORD PTR [edx]
  4077aa:	lock jmp 0x9711:0x298d249d
  4077b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077b3:	das    
  4077b4:	retf   0xa573
  4077b7:	push   esp
  4077b8:	fdecstp 
  4077ba:	sbb    al,0x32
  4077bc:	mov    ch,0xc9
  4077be:	nop
  4077bf:	dec    ecx
  4077c0:	data16 jg 0x4077fd
  4077c3:	push   ebp
  4077c4:	cmp    esi,DWORD PTR [ecx-0x45bfa1e6]
  4077ca:	add    edi,DWORD PTR [eax+eax*8]
  4077cd:	adc    ebp,DWORD PTR [esi+0x1ce3b72c]
  4077d3:	mov    esi,0x165a1d87
  4077d8:	cwde   
  4077d9:	mov    bh,0x25
  4077db:	cmp    bl,ch
  4077dd:	test   al,0x5c
  4077df:	push   0x37
  4077e1:	push   eax
  4077e2:	pop    ebp
  4077e3:	inc    ecx
  4077e4:	xlat   BYTE PTR ds:[ebx]
  4077e5:	into   
  4077e6:	outs   dx,DWORD PTR ds:[esi]
  4077e7:	out    dx,al
  4077e8:	dec    edi
  4077e9:	push   ebp
  4077ea:	jl     0x40778a
  4077ec:	pop    es
  4077ed:	mov    eax,0x8b08fc86
  4077f2:	ds and al,0x9e
  4077f5:	xchg   esp,eax
  4077f6:	ins    BYTE PTR es:[edi],dx
  4077f7:	add    DWORD PTR [edx-0x15],0x7d
  4077fb:	dec    edx
  4077fc:	adc    DWORD PTR [edx],0x22
  4077ff:	jns    0x407835
  407801:	imul   eax,ebx,0x20043b4b
  407807:	jp     0x40785f
  407809:	std    
  40780a:	mov    bh,0x39
  40780c:	and    esi,DWORD PTR [ecx-0x7b01646d]
  407812:	ins    DWORD PTR es:[edi],dx
  407813:	pop    ecx
  407814:	xor    ecx,ebp
  407816:	and    eax,edi
  407818:	sub    eax,0xcd2a2ec6
  40781d:	inc    esi
  40781e:	xor    DWORD PTR [edi+0x252283d],esi
  407824:	or     BYTE PTR [esi],0x83
  407827:	push   esp
  407828:	jmp    0x407889
  40782a:	add    eax,0x73e509b
  40782f:	pop    esi
  407830:	mov    eax,ds:0x2541fe3f
  407835:	push   ebp
  407836:	stos   BYTE PTR es:[edi],al
  407837:	and    ecx,DWORD PTR [ebx+0x38ebfe20]
  40783d:	iret   
  40783e:	fsubr  DWORD PTR [esi+0x210e5ee0]
  407844:	mov    al,0x35
  407846:	rol    BYTE PTR [eax-0x7d],0xf0
  40784a:	ror    DWORD PTR [ebp+0x2248f8b9],cl
  407850:	fist   DWORD PTR [esi-0x39]
  407853:	mov    dh,0xcb
  407855:	inc    edx
  407856:	rcr    BYTE PTR [ebp+ebp*8-0x24],0x4a
  40785b:	add    cl,bh
  40785d:	(bad)  
  40785e:	jg     0x40781a
  407860:	imul   ebx,DWORD PTR [ecx-0x7fa08eb1],0xe4f6a45d
  40786a:	int    0xb
  40786c:	push   eax
  40786d:	add    al,BYTE PTR [edx+0xc]
  407870:	cwde   
  407871:	sbb    al,0x1e
  407873:	cli    
  407874:	mov    dh,BYTE PTR [eax]
  407876:	icebp  
  407877:	adc    dh,BYTE PTR [eax+0x5118383]
  40787d:	pop    eax
  40787e:	sahf   
  40787f:	ret    
  407880:	fwait
  407881:	popa   
  407882:	push   es
  407883:	scas   eax,DWORD PTR es:[edi]
  407884:	ins    BYTE PTR es:[edi],dx
  407885:	push   eax
  407886:	jnp    0x40780f
  407888:	mov    al,ds:0x31695aab
  40788d:	lods   al,BYTE PTR ds:[esi]
  40788e:	sub    edx,DWORD PTR [esi]
  407890:	inc    esp
  407891:	test   eax,0x41e1cb4d
  407896:	es loop 0x407843
  407899:	mov    bl,0x7
  40789b:	mov    ss,WORD PTR [esi-0x79]
  40789e:	jmp    0x9e2a:0xbe187d35
  4078a5:	mov    ecx,0x4482467e
  4078aa:	mov    dl,0x64
  4078ac:	in     al,0x5e
  4078ae:	clc    
  4078af:	ja     0x40792d
  4078b1:	cmc    
  4078b2:	cdq    
  4078b3:	test   al,ah
  4078b5:	lock ins BYTE PTR es:[edi],dx
  4078b7:	sub    eax,0x7fa83ae7
  4078bc:	int3   
  4078bd:	rcr    BYTE PTR [edx-0x1d],1
  4078c0:	dec    esi
  4078c1:	xor    BYTE PTR [esi-0x49],cl
  4078c4:	out    0xfd,eax
  4078c6:	lahf   
  4078c7:	and    DWORD PTR [ecx],ebp
  4078c9:	pushf  
  4078ca:	jne    0x40789e
  4078cc:	adc    BYTE PTR ds:0xdde3049d,al
  4078d2:	repnz mov edx,0x8f542614
  4078d8:	inc    esp
  4078d9:	push   es
  4078da:	jge    0x4078a7
  4078dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078dd:	jno    0x407959
  4078df:	pop    ecx
  4078e0:	cmp    eax,DWORD PTR [ecx+edx*1-0x27cbd0d0]
  4078e7:	arpl   WORD PTR [ebp-0x120db2ad],si
  4078ed:	xchg   BYTE PTR [ebp+0x7e],ah
  4078f0:	rcl    DWORD PTR [ecx+0x6bd6eecd],1
  4078f6:	add    ah,dh
  4078f8:	pop    esi
  4078f9:	and    eax,0x6f1e49d3
  4078fe:	jmp    0x407887
  407900:	int    0x65
  407902:	ret    0xb3de
  407905:	outs   dx,DWORD PTR ds:[esi]
  407906:	xchg   ecx,eax
  407907:	adc    eax,0x84b0dc7d
  40790c:	xchg   ebp,eax
  40790d:	jae    0x4078ff
  40790f:	inc    eax
  407910:	jg     0x407990
  407912:	js     0x4078d3
  407914:	and    cl,al
  407916:	push   0xffffffc6
  407918:	fstp   DWORD PTR [eax]
  40791a:	cmc    
  40791b:	xchg   esp,eax
  40791c:	jbe    0x40797b
  40791e:	pushf  
  40791f:	and    eax,DWORD PTR [eax*1-0x27f017f3]
  407926:	xchg   esi,eax
  407927:	repnz scas al,BYTE PTR es:[edi]
  407929:	scas   al,BYTE PTR es:[edi]
  40792a:	mov    ch,0x82
  40792c:	aad    0x1a
  40792e:	jno    0x4078eb
  407930:	cs or  cl,bh
  407933:	mov    edi,0xaee57070
  407938:	sbb    al,0xbf
  40793a:	jnp    0x4078f2
  40793c:	lods   al,BYTE PTR ds:[esi]
  40793d:	sbb    BYTE PTR [eax+edx*8],cl
  407940:	scas   al,BYTE PTR es:[edi]
  407941:	mov    DWORD PTR [esi-0x22889d04],0x712ac137
  40794b:	ror    DWORD PTR [ecx-0x1f],1
  40794e:	pop    ecx
  40794f:	mov    BYTE PTR [eax-0x7ce4018b],bl
  407955:	sub    ecx,eax
  407957:	mov    dl,0x75
  407959:	pop    ds
  40795a:	pusha  
  40795b:	lods   eax,DWORD PTR ds:[esi]
  40795c:	jnp    0x4078f2
  40795e:	imul   edx,DWORD PTR [edx-0x66],0xffffffcc
  407962:	hlt    
  407963:	ds xchg ebp,eax
  407965:	imul   ecx,DWORD PTR [ecx],0xd0103478
  40796b:	xchg   ecx,eax
  40796c:	fadd   QWORD PTR [edx-0x3ad4235c]
  407972:	into   
  407973:	adc    BYTE PTR [esi-0x18457f9],cl
  407979:	(bad)  
  40797b:	leave  
  40797c:	stc    
  40797d:	push   0x1c
  40797f:	lods   eax,DWORD PTR ds:[esi]
  407980:	jae    0x407986
  407982:	xlat   BYTE PTR cs:[ebx]
  407984:	push   edi
  407985:	add    esi,DWORD PTR [esi-0x1a]
  407988:	xchg   DWORD PTR [edx+0x57],edx
  40798b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798c:	mov    ds:0x4392f578,eax
  407991:	cwde   
  407992:	mov    ebp,0x1fe2ebe2
  407997:	cmp    eax,0x74683010
  40799c:	fsubrp st(2),st
  40799e:	xchg   esp,eax
  40799f:	test   eax,0x89a469c3
  4079a4:	xchg   esp,eax
  4079a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079a6:	loop   0x40799a
  4079a8:	es sub al,0x49
  4079ab:	xchg   ebp,eax
  4079ac:	xchg   esp,eax
  4079ad:	invd   
  4079af:	cmp    al,0x89
  4079b1:	pop    ebp
  4079b2:	(bad)  
  4079b3:	mov    cl,0xb6
  4079b5:	jne    0x4079fd
  4079b7:	xchg   esi,eax
  4079b8:	sbb    ch,BYTE PTR ds:0x87bae762
  4079be:	mov    dl,0xe8
  4079c0:	jb     0x4079e8
  4079c2:	mov    dh,0xcb
  4079c4:	sbb    esi,DWORD PTR [ecx-0xb7db1a2]
  4079ca:	fiadd  WORD PTR [ecx-0x4c]
  4079cd:	jmp    0x407a24
  4079cf:	mov    ds:0x22671668,eax
  4079d4:	jmp    0x407984
  4079d6:	add    edi,DWORD PTR [edx-0x3d7046df]
  4079dc:	push   0xb
  4079de:	sbb    ch,0x4
  4079e1:	idiv   DWORD PTR [eax]
  4079e3:	cmc    
  4079e4:	add    DWORD PTR [ebp-0x445fb7e],ebp
  4079ea:	push   DWORD PTR [esi+0x5462f6c7]
  4079f0:	je     0x407999
  4079f2:	inc    ebp
  4079f3:	pop    esp
  4079f4:	add    ecx,DWORD PTR [ebp+esi*4-0x692fec95]
  4079fb:	add    eax,0x1ed45ace
  407a00:	rcr    esp,0x37
  407a03:	aad    0xec
  407a05:	xchg   DWORD PTR [esi-0x3f],esp
  407a08:	mov    ds:0x15c25d93,al
  407a0d:	test   al,0x67
  407a0f:	pushf  
  407a10:	or     DWORD PTR [esi],eax
  407a12:	pop    ds
  407a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a14:	dec    ebx
  407a15:	and    al,0x5b
  407a17:	and    BYTE PTR [ecx+0x5fca8207],bl
  407a1d:	dec    edx
  407a1e:	fdivrp st(4),st
  407a20:	clc    
  407a21:	and    eax,DWORD PTR [esi]
  407a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a24:	xor    BYTE PTR [esi+ebp*8],ch
  407a27:	mov    cl,0xb1
  407a29:	mov    ch,0xaf
  407a2b:	push   DWORD PTR ds:0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xdd28:0xcec5c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	into   
  407ebd:	nop
  407ebe:	cmp    ah,BYTE PTR [edi]
  407ec0:	imul   eax,DWORD PTR [esi+edi*4+0x0],0x7fb557ba
  407ec8:	ins    BYTE PTR es:[edi],dx
  407ec9:	(bad)  [ebx]
  407ecb:	dec    esp
  407ecc:	sbb    al,0xad
  407ece:	shl    BYTE PTR [edx+edi*1-0x45b4ab14],1
  407ed5:	into   
  407ed6:	push   esp
  407ed7:	(bad)  
  407ed8:	adc    bl,BYTE PTR [edx]
  407eda:	icebp  
  407edb:	xrelease xchg DWORD PTR [eax-0x66aa4ca6],ecx
  407ee2:	sub    BYTE PTR [ebp+0xb57ab05],cl
  407ee8:	rcl    DWORD PTR [edx+ebp*1],1
  407eeb:	xor    bh,al
  407eed:	pushf  
  407eee:	mov    edx,0xa0430c42
  407ef3:	or     DWORD PTR fs:[edx-0x3913fb0a],ebp
  407efa:	sbb    edi,DWORD PTR [edx+eiz*2+0x8f7c810]
  407f01:	sbb    al,0x66
  407f03:	jb     0x407f3a
  407f05:	outs   dx,BYTE PTR ds:[esi]
  407f06:	sbb    eax,0x71647da8
  407f0b:	retf   
  407f0c:	fsubr  QWORD PTR [ebp-0x6d6d1b33]
  407f12:	out    0xdc,al
  407f14:	xor    eax,0xb0bba690
  407f19:	gs jb  0x407f03
  407f1c:	mov    dh,0x2f
  407f1e:	xchg   BYTE PTR [ecx-0x70],bh
  407f21:	pop    ecx
  407f22:	fst    QWORD PTR [edx+0x6d365fb6]
  407f28:	push   ss
  407f29:	add    al,0x2b
  407f2b:	iret   
  407f2c:	outs   dx,DWORD PTR ds:[esi]
  407f2d:	enter  0xd4ae,0x84
  407f31:	iret   
  407f32:	mov    BYTE PTR [ecx+0x37],0x16
  407f36:	loop   0x407eee
  407f38:	sbb    DWORD PTR [ecx+0x19],0x184b2946
  407f3f:	js     0x407f73
  407f41:	push   eax
  407f42:	and    esp,DWORD PTR [eax-0x265c9424]
  407f48:	call   0xe63d:0xa25ced65
  407f4f:	inc    eax
  407f50:	push   eax
  407f51:	adc    eax,0xab84ade1
  407f56:	xchg   DWORD PTR [esi],ebp
  407f58:	jbe    0x407fa4
  407f5a:	lods   al,BYTE PTR ds:[esi]
  407f5b:	shr    DWORD PTR [eax+eax*1+0xeb13a0e],1
  407f62:	adc    eax,0x424f803e
  407f67:	dec    esi
  407f68:	rcr    DWORD PTR [edi+eax*2],cl
  407f6b:	sbb    bh,BYTE PTR [ebx-0x6d]
  407f6e:	bound  esi,QWORD PTR cs:[edx+esi*8-0x11933d42]
  407f76:	push   cs
  407f77:	push   ss
  407f78:	mov    bh,0xf5
  407f7a:	mov    ebp,0x2964723
  407f7f:	call   0xb879:0x756c763c
  407f86:	pushf  
  407f87:	xor    al,0xcf
  407f89:	(bad)  
  407f8b:	in     al,0xe7
  407f8d:	add    bl,BYTE PTR [ebx-0x1fa401e7]
  407f93:	cmp    eax,0x32016aec
  407f98:	xchg   esp,eax
  407f99:	lea    edx,[eax]
  407f9b:	repnz test BYTE PTR [esi+0x7c],bh
  407f9f:	popa   
  407fa0:	jl     0x407fd0
  407fa2:	push   esp
  407fa3:	or     BYTE PTR [edi-0x53fab149],bl
  407fa9:	es (bad) 
  407fab:	xor    dl,al
  407fad:	sub    al,BYTE PTR [edi+0x43]
  407fb0:	jbe    0x407f65
  407fb2:	fadd   DWORD PTR [eax+ecx*1+0x33]
  407fb6:	mov    WORD PTR [edx+edi*4+0x2cda8866],es
  407fbd:	fisttp DWORD PTR [ecx+0xd89ee57]
  407fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc4:	xlat   BYTE PTR ds:[ebx]
  407fc5:	pop    esi
  407fc6:	pop    eax
  407fc7:	call   0xfa9b:0xb65971dc
  407fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fcf:	mov    DWORD PTR [ebp-0x4e91157],edi
  407fd5:	in     eax,dx
  407fd6:	ja     0x407f9a
  407fd8:	clc    
  407fd9:	sbb    BYTE PTR [ebp+0x39ea44a0],0x52
  407fe0:	pop    ebp
  407fe1:	xor    edx,DWORD PTR [ebx-0x26fe8d2a]
  407fe7:	mov    ebp,0x1789cfe7
  407fec:	js     0x408040
  407fee:	in     al,0xfb
  407ff0:	(bad)  
  407ff1:	ficomp DWORD PTR [edx]
  407ff3:	lea    esi,[esi]
  407ff5:	mov    al,ds:0xaee4fef8
  407ffa:	les    ebx,FWORD PTR [ebp+eiz*4-0x8]
  407ffe:	out    0x3d,al
  408000:	fisttp QWORD PTR [ebp-0x63]
  408003:	arpl   WORD PTR [ecx],cx
  408005:	ss (bad) 
  408007:	cmc    
  408008:	pop    eax
  408009:	or     eax,0x109d7750
  40800e:	gs xor eax,0xe3f9b528
  408014:	lds    edx,FWORD PTR [eax]
  408016:	dec    ebx
  408017:	in     eax,dx
  408018:	aad    0x67
  40801a:	sub    BYTE PTR ss:[ecx],ah
  40801d:	and    ch,BYTE PTR [esi-0x2a]
  408020:	sub    eax,0x9e0efcb9
  408025:	xchg   esp,eax
  408026:	cmp    esp,DWORD PTR [edi]
  408028:	add    al,BYTE PTR [edi]
  40802a:	xchg   ebp,eax
  40802b:	fcom   QWORD PTR [ecx-0x71f07e62]
  408031:	inc    ebp
  408032:	loopne 0x408054
  408034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408035:	xchg   edi,eax
  408036:	jns    0x407fda
  408038:	stos   BYTE PTR es:[edi],al
  408039:	imul   edi,DWORD PTR [ebx],0xc1ebcfc0
  40803f:	sbb    eax,DWORD PTR [esi+0x61]
  408042:	lahf   
  408043:	sbb    eax,0xf04a716d
  408048:	add    al,0x46
  40804a:	xchg   esi,eax
  40804b:	frstor [esi+0x7e]
  40804e:	daa    
  40804f:	addr16 loop 0x408065
  408052:	rcl    DWORD PTR [esi],cl
  408054:	jge    0x407fda
  408056:	repz xchg edi,eax
  408058:	xchg   ebp,eax
  408059:	aaa    
  40805a:	cmp    al,0xa5
  40805c:	sub    BYTE PTR ds:0x593b9f0e,cl
  408062:	icebp  
  408063:	xchg   edi,eax
  408064:	add    al,BYTE PTR [edx]
  408066:	and    al,bh
  408068:	mov    WORD PTR [ecx-0x48],gs
  40806b:	mov    dh,0x40
  40806d:	inc    edx
  40806e:	mov    ds:0x5fe36857,al
  408073:	cmp    BYTE PTR [ebp+0x59da6525],al
  408079:	mov    ds,eax
  40807b:	mov    al,ds:0xf869a9e1
  408080:	fcom   QWORD PTR [ebx-0x32]
  408083:	mov    ds:0x3ffc7643,eax
  408088:	xchg   BYTE PTR [ecx+edi*8-0x6e],cl
  40808c:	outs   dx,BYTE PTR ds:[si]
  40808e:	mov    ds:0xa24c0d7b,eax
  408093:	js     0x40802c
  408095:	rol    BYTE PTR [edx+0x6842dda9],1
  40809b:	outs   dx,DWORD PTR ds:[esi]
  40809c:	test   eax,0x313f335c
  4080a1:	xor    DWORD PTR [ecx-0x2f1813f4],esi
  4080a7:	leave  
  4080a8:	iret   
  4080a9:	xchg   BYTE PTR [edi-0x12],ah
  4080ac:	sbb    BYTE PTR [esp+eiz*4+0x5fb28b31],bl
  4080b3:	mov    ch,0x90
  4080b5:	mov    al,ds:0x28f5c085
  4080ba:	dec    edi
  4080bb:	lods   eax,DWORD PTR ds:[esi]
  4080bc:	sub    al,0x58
  4080be:	push   cs
  4080bf:	mov    edi,0x6cc8a683
  4080c4:	sub    eax,0xb7d1dcd1
  4080c9:	and    ah,BYTE PTR [esi+edi*4+0x4]
  4080cd:	inc    ebp
  4080ce:	cmp    al,0x70
  4080d0:	mov    edi,0x352baeae
  4080d5:	add    eax,0x98a5bbe
  4080da:	push   edi
  4080db:	jnp    0x408114
  4080dd:	dec    BYTE PTR [ebp-0x67e8e804]
  4080e3:	(bad)  
  4080e4:	mov    esp,0xdd034a26
  4080e9:	dec    esi
  4080ea:	sub    ebx,DWORD PTR [ecx-0x63]
  4080ed:	sub    eax,0x346330dc
  4080f2:	jmp    0x408102
  4080f4:	add    bl,ch
  4080f6:	faddp  st(0),st
  4080f8:	xchg   esi,eax
  4080f9:	dec    edx
  4080fa:	jnp    0x4080cf
  4080fc:	pop    edi
  4080fd:	retf   
  4080fe:	ret    
  4080ff:	in     al,0xde
  408101:	sbb    al,0xa8
  408103:	das    
  408104:	outs   dx,BYTE PTR ds:[esi]
  408105:	cld    
  408106:	ror    edi,cl
  408108:	xchg   esi,eax
  408109:	jmp    0x408186
  40810b:	inc    esp
  40810c:	fcmovb st,st(7)
  40810e:	jg     0x4080b2
  408110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408111:	sub    eax,0xbe422974
  408116:	int3   
  408117:	push   cs
  408118:	rcr    DWORD PTR [ebp+0x5db5fad1],1
  40811e:	call   0x5b86:0xefcb412d
  408125:	or     bl,bh
  408127:	jae    0x4080fa
  408129:	jo     0x408173
  40812b:	xchg   edx,eax
  40812c:	add    BYTE PTR fs:0xf92b3540,al
  408133:	mov    ecx,0x19e1a273
  408138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408139:	xlat   BYTE PTR ds:[ebx]
  40813a:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40813c:	cli    
  40813d:	and    ch,BYTE PTR [ebp+0x4c]
  408140:	out    0x3a,eax
  408142:	adc    bl,BYTE PTR [ecx+ebx*1+0x25]
  408146:	push   esi
  408147:	xchg   edx,eax
  408148:	das    
  408149:	mov    ah,0xb2
  40814b:	sbb    ah,BYTE PTR [ebx-0x68953535]
  408151:	outs   dx,DWORD PTR ds:[esi]
  408152:	sbb    eax,0x38eea81c
  408157:	adc    al,0x53
  408159:	and    dh,BYTE PTR [edx+0x45]
  40815c:	test   eax,0xf219b6fe
  408161:	sti    
  408162:	cwde   
  408163:	mov    cs,esi
  408165:	mov    bl,0xbc
  408167:	pop    ebx
  408168:	dec    edi
  408169:	add    esi,DWORD PTR [eax+ebp*1]
  40816c:	sbb    eax,0x22bb9632
  408171:	mov    esp,0x7cb94bca
  408176:	jo     0x408146
  408178:	popf   
  408179:	in     eax,0xb5
  40817b:	ret    
  40817c:	xchg   cl,cl
  40817e:	sbb    BYTE PTR [edx-0x14],ah
  408181:	std    
  408182:	call   0xfa87:0x24d70aa2
  408189:	sbb    BYTE PTR [ecx],cl
  40818b:	and    DWORD PTR fs:[edi+0x7240fccd],eax
  408192:	arpl   WORD PTR [edx+eax*4-0xc],si
  408196:	push   0x4c
  408198:	inc    esi
  408199:	mov    edi,0xadba734e
  40819e:	(bad)  
  40819f:	fadd   st(7),st
  4081a1:	addr16 inc esp
  4081a3:	mov    ebp,DWORD PTR [ecx+0x3588ad9a]
  4081a9:	dec    edi
  4081aa:	jmp    0xcca3:0xbe9b8fec
  4081b1:	shl    DWORD PTR [ebx],cl
  4081b3:	imul   ecx,esi,0x9d6b1d03
  4081b9:	mul    BYTE PTR [edx]
  4081bb:	mov    al,ds:0xa350cc73
  4081c0:	(bad)  
  4081c1:	test   al,0xfd
  4081c3:	xor    ebx,DWORD PTR [ebx+0xefbde57]
  4081c9:	xlat   BYTE PTR ds:[ebx]
  4081ca:	(bad)  
  4081cc:	icebp  
  4081cd:	popa   
  4081ce:	add    DWORD PTR [ecx],ebx
  4081d0:	push   esi
  4081d1:	pusha  
  4081d2:	aas    
  4081d3:	inc    ebp
  4081d4:	sbb    eax,0xf1ba7dc0
  4081d9:	mov    ebp,0xc340bcfd
  4081de:	out    dx,eax
  4081df:	inc    edi
  4081e0:	ins    BYTE PTR es:[edi],dx
  4081e1:	(bad)  
  4081e2:	(bad)  
  4081e3:	lods   al,BYTE PTR ds:[esi]
  4081e4:	mov    al,0x70
  4081e6:	in     al,dx
  4081e7:	pop    ebp
  4081e8:	fidiv  DWORD PTR [esi+edi*1]
  4081eb:	jle    0x4081a9
  4081ed:	mov    ds:0xef2d3400,eax
  4081f2:	jge    0x408193
  4081f4:	mov    dl,0x25
  4081f6:	inc    ebp
  4081f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f8:	add    edi,edx
  4081fa:	dec    esi
  4081fb:	popa   
  4081fc:	xor    ebx,DWORD PTR fs:[edx+ebx*1]
  408200:	adc    al,0x26
  408202:	push   es
  408203:	ins    DWORD PTR es:[edi],dx
  408204:	jmp    0x4081ed
  408206:	inc    edx
  408207:	ja     0x40827f
  408209:	push   esi
  40820a:	lds    ecx,FWORD PTR [eax]
  40820c:	push   ecx
  40820d:	cmp    BYTE PTR [ebx+0x74],ch
  408210:	jo     0x4081c2
  408212:	or     BYTE PTR [ecx-0x34],dl
  408215:	enter  0x7624,0xa7
  408219:	push   edi
  40821a:	(bad)  
  40821b:	push   ss
  40821c:	(bad)  
  40821d:	adc    eax,edi
  40821f:	mov    bl,0x41
  408221:	aam    0xba
  408223:	pop    esi
  408224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408225:	daa    
  408226:	lea    ecx,[edi]
  408228:	sbb    al,0x9c
  40822a:	pop    ds
  40822b:	pop    ds
  40822c:	sbb    eax,0xe8f3db0c
  408231:	gs dec esi
  408233:	pop    edi
  408234:	fbstp  TBYTE PTR [eax]
  408236:	cmp    DWORD PTR [edi+0x2ac44914],edi
  40823c:	xchg   cl,al
  40823e:	call   0xee0e:0x1bebc222
  408245:	(bad)  
  408246:	stos   BYTE PTR es:[edi],al
  408247:	out    dx,al
  408248:	push   0x3348fa1c
  40824d:	rcr    ebp,1
  40824f:	sbb    bh,0x90
  408252:	(bad)  
  408253:	cwde   
  408254:	mov    dl,BYTE PTR [ebx-0x5c4d9d60]
  40825a:	xlat   BYTE PTR ds:[ebx]
  40825b:	fldcw  WORD PTR [ebp+0x4279e323]
  408261:	push   edi
  408262:	fist   WORD PTR [eax-0x180633dd]
  408268:	mov    eax,ds:0x561b299b
  40826d:	pop    eax
  40826e:	inc    esp
  40826f:	imul   edx,DWORD PTR [ecx],0x26
  408272:	(bad)  
  408273:	jp     0x408279
  408275:	sbb    dh,BYTE PTR [esi]
  408277:	pop    ebp
  408278:	les    edi,FWORD PTR [ebp+0x65f3793b]
  40827e:	push   ebx
  40827f:	add    BYTE PTR [edi-0x52dc146b],ch
  408285:	aad    0x6b
  408287:	lahf   
  408288:	jne    0x40826f
  40828a:	sbb    eax,0xa384b5c2
  40828f:	in     al,dx
  408290:	sub    DWORD PTR [edi-0x65],edx
  408293:	ret    
  408294:	inc    ecx
  408295:	test   eax,0xc681c380
  40829a:	mov    ecx,0x2fcb56fd
  40829f:	fwait
  4082a0:	cmp    DWORD PTR [edi-0x27402cfc],edx
  4082a6:	ret    
  4082a7:	cmp    BYTE PTR [esi],0x86
  4082aa:	fcom   QWORD PTR [ebx+edx*2-0x42]
  4082ae:	jb     0x408280
  4082b0:	mov    dl,0xa0
  4082b2:	pop    ebp
  4082b3:	adc    eax,0x7e85d58f
  4082b8:	pop    ebp
  4082b9:	jecxz  0x408323
  4082bb:	loopne 0x408321
  4082bd:	jecxz  0x4082ef
  4082bf:	out    0xf4,eax
  4082c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082c2:	xchg   ebp,eax
  4082c3:	push   ebx
  4082c4:	and    eax,0xc5c5c94e
  4082c9:	dec    edx
  4082ca:	inc    edx
  4082cb:	mov    al,0x33
  4082cd:	retf   0x1e06
  4082d0:	daa    
  4082d1:	test   al,0x10
  4082d3:	or     ecx,edx
  4082d5:	pop    ds
  4082d6:	jl     0x4082ca
  4082d8:	dec    edi
  4082d9:	xchg   ecx,eax
  4082da:	cwde   
  4082db:	and    bl,dl
  4082dd:	ins    DWORD PTR es:[edi],dx
  4082de:	xlat   BYTE PTR ds:[ebx]
  4082df:	cmc    
  4082e0:	test   BYTE PTR [ebp+0x1d],dl
  4082e3:	fcomi  st,st(7)
  4082e5:	mov    ds:0xd1f18493,eax
  4082ea:	inc    ebx
  4082eb:	in     al,dx
  4082ec:	xor    bl,BYTE PTR [ebx-0x2aea18ca]
  4082f2:	add    ah,bl
  4082f4:	pop    esi
  4082f5:	pop    ebx
  4082f6:	push   edi
  4082f7:	push   esi
  4082f8:	add    eax,0xd97dd3f7
  4082fd:	lock loop 0x40834b
  408300:	mov    eax,ds:0x9a1f15ad
  408305:	(bad)
  408308:	mov    eax,0x351bce0c
  40830d:	jne    0x408340
  40830f:	js     0x40837b
  408311:	fucomi st,st(7)
  408313:	sub    eax,0x6fe93012
  408318:	xor    eax,0x6a4a098a
  40831d:	in     al,0x5b
  40831f:	xor    dl,BYTE PTR ds:0xed31d0a1
  408325:	mov    ?,WORD PTR [ebp+0x69]
  408328:	stc    
  408329:	xchg   esp,eax
  40832a:	outs   dx,DWORD PTR ds:[esi]
  40832b:	mov    eax,ds:0x16abb16c
  408330:	and    eax,0x3594ce0a
  408335:	ins    DWORD PTR es:[edi],dx
  408336:	dec    esp
  408337:	adc    esp,DWORD PTR [si+0x966]
  40833c:	jle    0x40837e
  40833e:	les    ebx,FWORD PTR [esi-0x1f]
  408341:	xor    esi,ebx
  408343:	(bad)  
  408344:	js     0x40836b
  408346:	jle    0x408385
  408348:	sbb    dl,cl
  40834a:	mov    edx,0xa5c777c2
  40834f:	fisub  WORD PTR [ebx+edx*1-0xb]
  408353:	xchg   esi,eax
  408354:	fsubr  QWORD PTR [edi+0x648388ec]
  40835a:	or     al,0xb3
  40835c:	push   edx
  40835d:	cld    
  40835e:	xchg   DWORD PTR [eax],edi
  408360:	lock sbb eax,0x3dbe69e2
  408366:	push   ds
  408367:	nop
  408368:	fldenv [esi+0x54]
  40836b:	push   ecx
  40836c:	mov    eax,ds:0x69dbdfc3
  408371:	lds    esp,FWORD PTR [eax]
  408373:	mov    dh,0x8d
  408375:	ds pop ss
  408377:	sub    eax,0x25d436e0
  40837c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837d:	dec    ebx
  40837e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837f:	mov    bh,0x65
  408381:	push   ebp
  408382:	push   ebp
  408383:	test   DWORD PTR [edx+0x6d82d9f2],esi
  408389:	and    ebx,DWORD PTR [eax-0x57621efe]
  40838f:	sar    BYTE PTR [eax-0x34],0x7d
  408393:	inc    esp
  408394:	inc    edx
  408395:	inc    edx
  408396:	mov    esp,0xd0cebd6e
  40839b:	push   0x4
  40839d:	in     eax,0x10
  40839f:	push   ss
  4083a0:	xor    eax,0xfc27cd88
  4083a5:	jo     0x408337
  4083a7:	or     BYTE PTR [edx],ch
  4083a9:	shr    ch,0x45
  4083ac:	adc    al,0x94
  4083ae:	enter  0x14eb,0x44
  4083b2:	cli    
  4083b3:	stc    
  4083b4:	shl    BYTE PTR [ecx+0x6c],cl
  4083b7:	mov    ds:0x428f43,eax
  4083bc:	popa   
  4083bd:	ficom  WORD PTR [edi-0x5189bf9c]
  4083c3:	push   cs
  4083c4:	push   eax
  4083c5:	popa   
  4083c6:	lea    ecx,[eax+eiz*2]
  4083c9:	arpl   cx,bx
  4083cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083cc:	lahf   
  4083cd:	adc    BYTE PTR [ecx+ebx*8-0x9],dh
  4083d1:	pop    ds
  4083d2:	mov    ebx,0xfa676295
  4083d7:	inc    edi
  4083d8:	mov    esp,0x959f9ade
  4083dd:	pop    esi
  4083de:	pushf  
  4083df:	retf   
  4083e0:	retf   0xe108
  4083e3:	fsub   DWORD PTR [ebx+eiz*1+0x5f4fb715]
  4083ea:	mov    cl,0x41
  4083ec:	scas   al,BYTE PTR es:[edi]
  4083ed:	and    al,0x83
  4083ef:	repnz sub dl,ah
  4083f2:	iret   
  4083f3:	bnd ret 
  4083f5:	add    esi,edi
  4083f7:	rol    BYTE PTR ss:[eax+0x4e],cl
  4083fb:	sub    edx,DWORD PTR [ebx-0x10b5ba20]
  408401:	out    0xce,eax
  408403:	add    edx,ebp
  408405:	and    eax,0x5d255e1d
  40840a:	lahf   
  40840b:	xchg   edx,eax
  40840c:	inc    edi
  40840d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840e:	sub    eax,ecx
  408410:	icebp  
  408411:	dec    eax
  408412:	out    dx,eax
  408413:	sub    BYTE PTR [ecx+edi*8+0x4bbf9018],cl
  40841a:	ss scas eax,DWORD PTR es:[edi]
  40841c:	xchg   DWORD PTR [ebp-0x7869acfc],edi
  408422:	sub    al,bh
  408424:	jo     0x4083d1
  408426:	ja     0x408457
  408428:	aas    
  408429:	das    
  40842a:	pop    ds
  40842b:	add    bl,BYTE PTR [edi+0x24]
  40842e:	dec    ecx
  40842f:	pop    ebp
  408430:	and    eax,0x1156d104
  408435:	sar    BYTE PTR [ecx-0x6a],1
  408438:	fs pop esp
  40843a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40843b:	cpuid  
  40843d:	xchg   esp,eax
  40843e:	add    DWORD PTR [esi-0x14],esp
  408441:	ja     0x4084b1
  408443:	cs cmp eax,0x4fd1979c
  408449:	xchg   cl,cl
  40844b:	and    al,0x7c
  40844d:	jp     0x408438
  40844f:	mov    al,ds:0x40af42c7
  408454:	mov    esp,DWORD PTR [eax-0x1448b259]
  40845a:	push   ebx
  40845b:	fcomp  st(1)
  40845d:	in     al,dx
  40845e:	ret    
  40845f:	leave  
  408460:	mov    BYTE PTR [esi-0x7dd1b51f],bh
  408466:	xor    BYTE PTR [ecx],cl
  408468:	rol    DWORD PTR [edi-0x13],cl
  40846b:	pop    esp
  40846c:	gs aaa 
  40846e:	mov    dl,ah
  408470:	scas   eax,DWORD PTR es:[edi]
  408471:	or     dl,BYTE PTR [eax]
  408473:	pop    edi
  408474:	add    esp,ebp
  408476:	adc    bh,BYTE PTR [esi-0x8]
  408479:	jmp    0xa2e7bf53
  40847e:	repnz shr BYTE PTR ds:0xdf97ade,0x92
  408486:	add    al,0x57
  408488:	jno    0x408427
  40848a:	cmovno esp,eax
  40848d:	jecxz  0x4084af
  40848f:	add    al,dl
  408491:	int3   
  408492:	punpckhwd mm2,QWORD PTR [ecx-0xb]
  408496:	xchg   al,ch
  408498:	outs   dx,DWORD PTR ds:[esi]
  408499:	frstor cs:[edx]
  40849c:	or     esp,esi
  40849e:	es pop ds
  4084a0:	jb     0x408513
  4084a2:	repnz dec ebp
  4084a4:	mov    BYTE PTR [ebp-0x73],ah
  4084a7:	pop    edi
  4084a8:	dec    esi
  4084a9:	sbb    edx,edx
  4084ab:	xchg   edx,eax
  4084ac:	inc    eax
  4084ad:	mov    ebx,0xb390afb2
  4084b2:	scas   al,BYTE PTR es:[edi]
  4084b3:	lock add ebp,edx
  4084b6:	ret    
  4084b7:	jo     0x4084b2
  4084b9:	(bad)  
  4084ba:	data16 loopne 0x4084a9
  4084bd:	push   ecx
  4084be:	call   0x6ca8:0xd37cc53d
  4084c5:	cmp    ch,dl
  4084c7:	jb     0x4084e3
  4084c9:	mov    ecx,0x61e43ca3
  4084ce:	jle    0x408510
  4084d0:	nop
  4084d1:	repnz stc 
  4084d3:	cwde   
  4084d4:	adc    al,dl
  4084d6:	pusha  
  4084d7:	into   
  4084d8:	test   BYTE PTR [edx],ah
  4084da:	loope  0x4084c7
  4084dc:	sbb    al,0x3f
  4084de:	bound  ecx,QWORD PTR [ecx-0x6e]
  4084e1:	inc    esi
  4084e2:	mov    ebx,esi
  4084e4:	inc    edx
  4084e5:	ret    0xa5c1
  4084e8:	repz mov ah,0xbd
  4084eb:	in     al,0xca
  4084ed:	push   cs
  4084ee:	jmp    0xb31c620f
  4084f3:	dec    ecx
  4084f4:	mov    ds:0x76134912,al
  4084f9:	add    edx,ebx
  4084fb:	mov    ebp,0x973a8055
  408500:	das    
  408501:	inc    edx
  408502:	call   0xafae7278
  408507:	icebp  
  408508:	out    0x2,al
  40850a:	jo     0x4084ee
  40850c:	dec    eax
  40850d:	inc    edx
  40850e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40850f:	and    al,0xcc
  408511:	push   esi
  408512:	sbb    al,0x7e
  408514:	not    BYTE PTR [edi]
  408516:	cmp    DWORD PTR [edi],esp
  408518:	and    eax,0xe24414cc
  40851d:	test   BYTE PTR [eax],dh
  40851f:	jnp    0x40851f
  408521:	mov    ebp,0x8429aca9
  408526:	mov    edx,0x9a9b416b
  40852b:	rol    DWORD PTR [edi-0x56622011],1
  408531:	out    dx,al
  408532:	(bad)  
  408533:	dec    eax
  408534:	retf   0xff2c
  408537:	sub    eax,0x3c0ac268
  40853c:	cmp    al,0x1b
  40853e:	je     0x408525
  408540:	xor    BYTE PTR [edi],al
  408542:	dec    ebp
  408543:	js     0x408567
  408545:	call   0xa854:0x43b1b3ec
  40854c:	cmp    esp,ebx
  40854e:	rol    DWORD PTR [eax-0x77],0xd1
  408552:	not    DWORD PTR [ebp+eiz*4-0x5]
  408556:	inc    ebx
  408557:	jg     0x4085b4
  408559:	cmp    ebp,DWORD PTR [eax]
  40855b:	mov    BYTE PTR [ecx+0xf],al
  40855e:	test   DWORD PTR [edx-0x55b37dda],edx
  408564:	or     eax,0x87e4756a
  408569:	sub    edx,DWORD PTR [ecx-0x7c]
  40856c:	into   
  40856d:	in     eax,dx
  40856e:	push   ebx
  40856f:	clc    
  408570:	repz cmp al,0x7d
  408573:	(bad)  
  408574:	xchg   ecx,eax
  408575:	in     al,dx
  408576:	iret   
  408577:	mov    ds:0x5ad48442,eax
  40857c:	clc    
  40857d:	xchg   ebx,eax
  40857e:	pop    es
  40857f:	mov    esi,0x64b387b
  408584:	add    al,0xfc
  408586:	cmp    bl,bh
  408588:	mov    bl,0xe2
  40858a:	ins    DWORD PTR es:[edi],dx
  40858b:	es test al,0x6a
  40858e:	adc    cl,BYTE PTR [ebx-0x28]
  408591:	aaa    
  408592:	adc    esi,ecx
  408594:	xor    ch,BYTE PTR [eax-0x4f]
  408597:	jmp    DWORD PTR [ebx+0x730ce154]
  40859d:	stc    
  40859e:	sub    eax,0xbc0a965c
  4085a3:	pop    ebx
  4085a4:	nop
  4085a5:	into   
  4085a6:	sar    DWORD PTR [eax],0x76
  4085a9:	lods   al,BYTE PTR ds:[esi]
  4085aa:	mov    ah,0xca
  4085ac:	mov    eax,ds:0xab5e6c27
  4085b1:	cmp    DWORD PTR ds:0x260e2697,0x5c
  4085b8:	cs enter 0xac43,0x6c
  4085bd:	jge    0x40855a
  4085bf:	sub    edx,0x740738d6
  4085c5:	lock je 0x4085c5
  4085c8:	adc    eax,0xb2a90c67
  4085cd:	mov    esi,0xd477c7d2
  4085d2:	and    al,ah
  4085d4:	into   
  4085d5:	mov    DWORD PTR [esi-0x59],esp
  4085d8:	mov    cs,ebx
  4085da:	inc    ebx
  4085db:	call   0x2a87:0xcd96b4ba
  4085e2:	cdq    
  4085e3:	jmp    0x40865b
  4085e5:	mov    ah,0x33
  4085e7:	push   esi
  4085e8:	push   ds
  4085e9:	dec    edi
  4085ea:	lods   al,BYTE PTR ds:[esi]
  4085eb:	out    dx,eax
  4085ec:	gs dec eax
  4085ee:	retf   0x9b87
  4085f1:	js     0x40864e
  4085f3:	scas   al,BYTE PTR es:[edi]
  4085f4:	call   0x87806e22
  4085f9:	mov    edx,0x407663f9
  4085fe:	cmc    
  4085ff:	push   esp
  408600:	and    eax,0xdcbc7123
  408605:	pop    esi
  408606:	xor    DWORD PTR [esi+0x32],eax
  408609:	nop
  40860a:	push   eax
  40860b:	pushfw 
  40860d:	jb     0x408608
  40860f:	xchg   edi,eax
  408610:	sbb    bh,ah
  408612:	enter  0x9680,0x45
  408616:	repnz rol ah,0x68
  40861a:	and    edx,DWORD PTR [ecx]
  40861c:	neg    BYTE PTR [esi+0x7ce7a402]
  408622:	out    dx,al
  408623:	leave  
  408624:	mov    ah,0xf4
  408626:	je     0x4086a3
  408628:	sti    
  408629:	and    al,0xaa
  40862b:	add    ah,BYTE PTR [ebp-0x53bb6ef8]
  408631:	out    dx,eax
  408632:	idiv   BYTE PTR [esi+0x24d94ac2]
  408638:	cmp    eax,0xe54a7f27
  40863d:	call   0x67a6:0xdad3adf8
  408644:	mov    esp,DWORD PTR [edx+edi*2+0x5e]
  408648:	adc    eax,0x3929b9b
  40864d:	inc    eax
  40864e:	sub    cl,BYTE PTR [edx+0x56dfe5a1]
  408654:	jbe    0x4086d0
  408656:	stc    
  408657:	(bad)  
  408659:	or     DWORD PTR [eax-0x23e3acfb],eax
  40865f:	sub    al,0xc0
  408661:	inc    ebx
  408662:	pop    ss
  408663:	arpl   WORD PTR [ecx+0x5b],bp
  408666:	and    ecx,DWORD PTR [ebx+0x57642564]
  40866c:	dec    esi
  40866d:	sbb    eax,0xc8b82c91
  408672:	push   0x33
  408674:	xor    BYTE PTR [ecx-0x3e],dl
  408677:	or     DWORD PTR [ecx+0x13fe71f1],0x63
  40867e:	test   BYTE PTR [ebp+0x2c],0x94
  408682:	jno    0x408638
  408684:	test   eax,0x49726bca
  408689:	inc    eax
  40868a:	sbb    BYTE PTR [esi],dh
  40868c:	fstp   st(3)
  40868e:	mov    BYTE PTR [ebp+0x3c],bl
  408691:	dec    edi
  408692:	daa    
  408693:	xchg   esi,eax
  408694:	nop
  408695:	mov    WORD PTR [ebx],ss
  408697:	add    esp,edi
  408699:	pinsrw mm3,WORD PTR [eax],0xcf
  40869d:	sbb    BYTE PTR [edx-0x5e],bl
  4086a0:	xchg   ecx,eax
  4086a1:	push   ebp
  4086a2:	dec    eax
  4086a3:	mov    WORD PTR [ecx+0x72],es
  4086a6:	nop
  4086a7:	dec    edi
  4086a8:	ins    DWORD PTR es:[edi],dx
  4086a9:	xor    BYTE PTR [esi-0x19],bh
  4086ac:	mov    ebp,DWORD PTR [ebx+ebx*2-0x7be2d5cd]
  4086b3:	or     ecx,DWORD PTR [esi-0x51]
  4086b6:	xchg   esi,eax
  4086b7:	sbb    al,0x91
  4086b9:	mov    cl,BYTE PTR [edi-0x31]
  4086bc:	jg     0x40872a
  4086be:	in     eax,dx
  4086bf:	xchg   edi,eax
  4086c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c1:	(bad)  
  4086c2:	enter  0x71a2,0x14
  4086c6:	push   cs
  4086c7:	fst    DWORD PTR [ebx+0x78]
  4086ca:	sbb    ch,BYTE PTR [ebp-0x7ba0064c]
  4086d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d1:	aam    0xc9
  4086d3:	jbe    0x40872d
  4086d5:	sbb    BYTE PTR [esi-0x628000e2],0x5c
  4086dc:	repz jecxz 0x4086b1
  4086df:	ss sbb eax,0x8ae218bf
  4086e5:	mov    DWORD PTR [ecx+0x5ca99302],eax
  4086eb:	jns    0x40868b
  4086ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ee:	sti    
  4086ef:	dec    ecx
  4086f0:	cli    
  4086f1:	es lock inc eax
  4086f4:	xchg   ecx,eax
  4086f5:	fadd   DWORD PTR [edi-0x58]
  4086f8:	push   ds
  4086f9:	and    BYTE PTR ds:[ebp+0x44fe6863],bl
  408700:	or     ah,BYTE PTR [ebp+0x50e9ab0b]
  408706:	adc    al,0x9e
  408708:	mov    al,ds:0x11a72cd6
  40870d:	sbb    bl,BYTE PTR ds:0x8c0faf59
  408713:	adc    dh,BYTE PTR [ebx]
  408715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408716:	xor    BYTE PTR [ebx-0x774c8b30],0xcd
  40871d:	sbb    DWORD PTR [ebp-0x7889d87e],edx
  408723:	push   ecx
  408724:	retf   0x8991
  408727:	vmread DWORD PTR [edi-0x2f2f45c7],edi
  40872e:	repnz add eax,0x727f40f1
  408734:	inc    ebp
  408735:	outs   dx,DWORD PTR ds:[esi]
  408736:	push   0x800d2475
  40873b:	std    
  40873c:	cmp    ch,BYTE PTR [edi+0x5f62c3e0]
  408742:	adc    esi,DWORD PTR [eax-0x24dba50e]
  408748:	in     al,dx
  408749:	scas   eax,DWORD PTR es:[edi]
  40874a:	mov    ecx,0x99465712
  40874f:	fidivr WORD PTR [eax+0x22]
  408752:	jno    0x408753
  408754:	dec    eax
  408755:	jno    0x40870f
  408757:	rcr    ah,0xc5
  40875a:	pusha  
  40875b:	addr16 sub dl,bl
  40875e:	mov    bh,0x4
  408760:	int    0x9c
  408762:	cmp    cl,ch
  408764:	dec    esp
  408765:	and    al,0x93
  408767:	sti    
  408768:	mov    ds:0xa32309a4,al
  40876d:	add    al,0xae
  40876f:	push   ss
  408770:	outs   dx,DWORD PTR ds:[esi]
  408771:	pop    ebx
  408772:	or     al,0x97
  408774:	and    DWORD PTR gs:[esi+0x5f],esi
  408778:	and    eax,0xdcbf134a
  40877d:	add    BYTE PTR [ecx-0x58],al
  408780:	jp     0x4087d6
  408782:	jo     0x4087af
  408784:	aas    
  408785:	iret   
  408786:	aas    
  408787:	adc    DWORD PTR [eax],ebx
  408789:	scas   al,BYTE PTR es:[edi]
  40878a:	jg     0x4087a4
  40878c:	aas    
  40878d:	pop    ss
  40878e:	imul   esi,DWORD PTR [ecx],0xcbe7508a
  408794:	les    edx,FWORD PTR [esp+eax*1]
  408797:	fwait
  408798:	pop    esp
  408799:	xchg   dl,ch
  40879b:	adc    al,0x6e
  40879d:	add    dh,BYTE PTR [edi+0x191b5dd4]
  4087a3:	hlt    
  4087a4:	gs jmp 0x522d:0xb4c1027d
  4087ac:	xor    al,0x1e
  4087ae:	cld    
  4087af:	and    bh,ch
  4087b1:	mov    eax,0x375db8f
  4087b6:	mov    ebp,0x2a4a7c60
  4087bb:	push   ecx
  4087bc:	add    BYTE PTR [ecx],dh
  4087be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087bf:	lea    edx,[esi-0x7daf45e2]
  4087c5:	in     al,dx
  4087c6:	xor    BYTE PTR [edi+0x7c],bh
  4087c9:	imul   edx,eax,0xd1bcd70b
  4087cf:	xor    bl,BYTE PTR [ebp+0x31]
  4087d2:	sar    DWORD PTR [bp+di],0xbf
  4087d6:	mov    ah,0xdc
  4087d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d9:	adc    ch,BYTE PTR [esi-0x32]
  4087dc:	add    DWORD PTR fs:[edi+eax*2-0x55],0x42c99c61
  4087e5:	aas    
  4087e6:	scas   eax,DWORD PTR es:[edi]
  4087e7:	stos   BYTE PTR es:[edi],al
  4087e8:	rcr    BYTE PTR [ebx+ebp*8+0xd5ead17],cl
  4087ef:	jp     0x40886a
  4087f1:	mov    ebp,0xc9d2ef67
  4087f6:	call   0x31b7e4e1
  4087fb:	jmp    0x4087ab
  4087fd:	mov    ebp,0x73c9837f
  408802:	fs aad 0x14
  408805:	push   es
  408806:	je     0x40881e
  408808:	adc    ch,BYTE PTR [ebp-0x1b]
  40880b:	jo     0x4087a7
  40880d:	inc    ecx
  40880e:	push   ds
  40880f:	mov    ecx,0xd97ab11
  408814:	jmp    0x63838b5b
  408819:	cwde   
  40881a:	imul   ecx,DWORD PTR [eax+0x5f],0x41
  40881e:	call   0x1389d55a
  408823:	inc    ebp
  408824:	push   ss
  408825:	es cmp ch,ch
  408828:	and    ebx,0x71
  40882b:	addr16 aam 0x69
  40882e:	xchg   ebp,eax
  40882f:	pop    ds
  408830:	stos   BYTE PTR es:[edi],al
  408831:	(bad)  
  408832:	xor    ebp,DWORD PTR [ecx]
  408834:	stos   BYTE PTR es:[edi],al
  408835:	push   esi
  408836:	xor    eax,0x121138c8
  40883b:	or     dl,BYTE PTR [esi]
  40883d:	das    
  40883e:	ja     0x40888d
  408840:	out    dx,al
  408841:	inc    edi
  408842:	aaa    
  408843:	cdq    
  408844:	push   cs
  408845:	fiadd  DWORD PTR [edx]
  408847:	xchg   edx,eax
  408848:	mov    WORD PTR [ebx-0x66b5ca89],?
  40884e:	pusha  
  40884f:	gs pop ebx
  408851:	(bad)  
  408852:	push   eax
  408853:	xor    BYTE PTR [eax],0x5
  408856:	stos   BYTE PTR es:[edi],al
  408857:	(bad)  [ebp+ebp*1-0x131b308e]
  40885e:	cmp    al,0xc2
  408860:	sub    ah,BYTE PTR [eax-0x6c3a18ab]
  408866:	cwde   
  408867:	shl    BYTE PTR [ecx],0x73
  40886a:	sub    edx,esi
  40886c:	add    BYTE PTR [ebx],0xb9
  40886f:	cmp    edx,DWORD PTR [esi-0xbd2c5f3]
  408875:	rcr    DWORD PTR [eax+ecx*2],0x4e
  408879:	scas   al,BYTE PTR es:[edi]
  40887a:	ins    DWORD PTR es:[edi],dx
  40887b:	dec    ebp
  40887c:	mov    ebx,0xb0582db6
  408881:	inc    ecx
  408882:	mov    ebp,0x73007c80
  408887:	std    
  408888:	mov    ecx,0xe1991ab1
  40888d:	dec    ecx
  40888e:	jae    0x40886d
  408890:	sbb    al,0x93
  408892:	cmp    ebx,ecx
  408894:	push   es
  408895:	cwde   
  408896:	jmp    0xb1da712d
  40889b:	les    ebp,FWORD PTR [ebp+0x46]
  40889e:	mov    dh,BYTE PTR [eax]
  4088a0:	or     DWORD PTR [esi+0x47acd4e7],0xcfbe74a9
  4088aa:	sbb    al,0xba
  4088ac:	aas    
  4088ad:	enter  0x9a61,0x7
  4088b1:	push   ebx
  4088b2:	call   0x5be9:0x458fb08a
  4088b9:	cmp    ecx,DWORD PTR [eax+0x3e]
  4088bc:	push   0x77
  4088be:	test   edx,esp
  4088c0:	add    al,BYTE PTR [edx-0x11]
  4088c3:	and    al,BYTE PTR [eax]
  4088c5:	imul   eax,DWORD PTR [edx-0xb],0x2081d432
  4088cc:	dec    eax
  4088cd:	xchg   BYTE PTR [ebx-0x75],bl
  4088d0:	mov    edi,edi
  4088d2:	mov    esi,0x833cf87
  4088d7:	out    0xa3,al
  4088d9:	inc    edi
  4088da:	je     0x408935
  4088dc:	lds    edx,FWORD PTR [ecx-0x499aa293]
  4088e2:	stc    
  4088e3:	push   0x1f7a917c
  4088e8:	push   ds
  4088e9:	out    dx,eax
  4088ea:	daa    
  4088eb:	and    esi,DWORD PTR [eax-0x31]
  4088ee:	xchg   ebp,eax
  4088ef:	sub    dh,BYTE PTR [eax]
  4088f1:	mov    dh,0xca
  4088f3:	and    edi,eax
  4088f5:	mov    dh,0x57
  4088f7:	jno    0x4088c7
  4088f9:	repnz push ecx
  4088fb:	xchg   ebp,eax
  4088fc:	into   
  4088fd:	arpl   bx,ax
  4088ff:	(bad)  
  408901:	ds sub al,0x9
  408904:	and    bh,dl
  408906:	loopne 0x408974
  408908:	mov    edi,0x75caf178
  40890d:	ja     0x4088b4
  40890f:	sbb    eax,0xe40b646e
  408914:	aad    0xbe
  408916:	mov    ch,0x6f
  408918:	sub    eax,0x2ac4e2f2
  40891d:	mov    dh,0x21
  40891f:	mov    ah,0x80
  408921:	adc    BYTE PTR [ecx-0x3e8a9e5b],ch
  408927:	cmp    ebp,edx
  408929:	pushf  
  40892a:	jne    0x408936
  40892c:	dec    edi
  40892d:	imul   esi,DWORD PTR [ecx-0xa1ef539],0xffffffa6
  408934:	adc    BYTE PTR [esi+0x2],ch
  408937:	scas   eax,DWORD PTR es:[edi]
  408938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408939:	(bad)  
  40893a:	xchg   edx,eax
  40893b:	ins    BYTE PTR es:[edi],dx
  40893c:	sub    al,0x68
  40893e:	push   0xb66c2350
  408943:	fcomi  st,st(0)
  408945:	cwde   
  408946:	test   DWORD PTR [esp+0x364c781],ecx
  40894d:	call   0xecd4:0x11ca3d01
  408954:	mov    esi,esp
  408956:	push   eax
  408957:	xchg   ecx,eax
  408958:	cmp    DWORD PTR [edi],edx
  40895a:	jg     0x408966
  40895c:	sub    dl,BYTE PTR [ecx]
  40895e:	mov    bl,0x97
  408960:	call   0xd282:0x98c05653
  408967:	xor    ebp,DWORD PTR [edx]
  408969:	push   ss
  40896a:	xchg   BYTE PTR [edx-0x6e8de960],bh
  408970:	add    dh,BYTE PTR [ecx-0x1fdf8af4]
  408976:	aas    
  408977:	scas   al,BYTE PTR es:[edi]
  408978:	pusha  
  408979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897a:	or     eax,0x533ad16b
  40897f:	leave  
  408980:	loopne 0x40890a
  408982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408983:	jmp    0x408949
  408985:	mov    ds:0x22551071,eax
  40898a:	jmp    0xe37731e3
  40898f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408990:	out    dx,al
  408991:	cmp    al,0xb1
  408993:	push   ds
  408994:	bound  ebp,QWORD PTR [ecx-0x15]
  408997:	and    BYTE PTR [ebp+0x7a],al
  40899a:	mov    cl,ah
  40899c:	jg     0x4089ba
  40899e:	jg     0x4089d4
  4089a0:	xchg   edi,eax
  4089a1:	test   ah,bl
  4089a3:	or     bh,BYTE PTR [esp+eax*2+0x69]
  4089a7:	daa    
  4089a8:	mov    BYTE PTR [ecx+0x7e],dl
  4089ab:	adc    cl,BYTE PTR [esi-0x2f]
  4089ae:	les    ebx,FWORD PTR [esp+esi*1]
  4089b1:	pop    edi
  4089b2:	call   0x6f74:0x99ae7e97
  4089b9:	push   cs
  4089ba:	push   0xbd0614a4
  4089bf:	xor    ecx,DWORD PTR [eax]
  4089c1:	das    
  4089c2:	pop    es
  4089c3:	cdq    
  4089c4:	jl     0x408a2d
  4089c6:	or     DWORD PTR [ebx],esp
  4089c8:	and    edi,DWORD PTR [esp+eiz*8-0x5919e7a2]
  4089cf:	retf   
  4089d0:	jae    0x4089e6
  4089d2:	sti    
  4089d3:	fxch   st(3)
  4089d5:	stc    
  4089d6:	xor    al,0x4f
  4089d8:	icebp  
  4089d9:	sub    al,0x9b
  4089db:	popa   
  4089dc:	mov    ecx,0x1d2d2f31
  4089e1:	adc    eax,0x9261fc9b
  4089e6:	pop    es
  4089e7:	ja     0x40897c
  4089e9:	add    ebp,DWORD PTR [esi+0x3b]
  4089ec:	mov    ah,0x60
  4089ee:	dec    ecx
  4089ef:	mov    edx,0xb968e099
  4089f4:	jns    0x408a45
  4089f6:	mov    edi,0x44793912
  4089fb:	mov    ds:0xee7fa8d5,eax
  408a00:	pop    ss
  408a01:	(bad)  
  408a02:	xchg   bh,al
  408a04:	pusha  
  408a05:	mov    ah,al
  408a07:	fnstenv ds:0xce3df161
  408a0d:	xchg   edx,eax
  408a0e:	push   0xffffffa7
  408a10:	in     eax,dx
  408a11:	ins    BYTE PTR es:[edi],dx
  408a12:	fild   WORD PTR [edx]
  408a14:	loope  0x4089d9
  408a16:	lods   al,BYTE PTR ds:[esi]
  408a17:	popf   
  408a18:	aad    0xa
  408a1a:	xor    al,0xea
  408a1c:	mov    al,ds:0x3a4b033f
  408a21:	call   0x7dc44e69
  408a26:	test   al,0xdf
  408a28:	cmp    bl,al
  408a2a:	test   DWORD PTR [edx+0x1a],edi
  408a2d:	daa    
  408a2e:	gs popa 
  408a30:	mov    WORD PTR [edx+0x24878367],cs
  408a36:	mov    dl,0xfd
  408a38:	inc    ebx
  408a39:	scas   eax,DWORD PTR es:[edi]
  408a3a:	pop    esp
  408a3b:	fst    QWORD PTR [eax]
  408a3d:	mov    ah,0x64
  408a3f:	mov    WORD PTR [ebx+0x37870779],?
  408a45:	(bad)  
  408a46:	sbb    al,0xa
  408a48:	push   0xadab31c5
  408a4d:	mov    esi,DWORD PTR [ebx+0x55401d75]
  408a53:	jmp    0x1159:0x7854a4c4
  408a5a:	dec    ebp
  408a5b:	inc    esp
  408a5c:	mov    ebx,0x81b2e670
  408a61:	cmp    BYTE PTR [edx+0x6fa2e479],dh
  408a67:	dec    esp
  408a68:	gs hlt 
  408a6a:	pop    eax
  408a6b:	stos   BYTE PTR es:[edi],al
  408a6c:	dec    eax
  408a6d:	jecxz  0x408a7f
  408a6f:	dec    esp
  408a70:	mov    bh,BYTE PTR [ebp+eiz*1-0x45]
  408a74:	data16 loop 0x408acf
  408a77:	or     eax,ebx
  408a79:	outs   dx,BYTE PTR ds:[esi]
  408a7a:	hlt    
  408a7b:	sti    
  408a7c:	adc    BYTE PTR [edx+0x2d],al
  408a7f:	aad    0x17
  408a81:	add    dh,BYTE PTR [edi+0x7bdc1296]
  408a87:	sub    eax,0xb7d18b4a
  408a8c:	xchg   ebp,eax
  408a8d:	lahf   
  408a8e:	cmp    edi,DWORD PTR [edx]
  408a90:	fadd   DWORD PTR [esi+0x54]
  408a93:	xchg   BYTE PTR [esi],ah
  408a95:	ss cmp ch,dh
  408a98:	xor    ah,BYTE PTR ds:0xd3510cf5
  408a9e:	inc    DWORD PTR [edi]
  408aa0:	pop    ebp
  408aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa2:	pop    esp
  408aa3:	pushf  
  408aa4:	imul   ebx,DWORD PTR [edx],0xf712c6ab
  408aaa:	or     DWORD PTR [esi-0x304d7add],0x75
  408ab1:	mov    dh,0xfe
  408ab3:	jbe    0x408ae0
  408ab5:	jno    0x408aa7
  408ab7:	jno    0x408a5a
  408ab9:	stos   BYTE PTR es:[edi],al
  408aba:	inc    ebx
  408abb:	and    ebp,esp
  408abd:	in     al,0x1f
  408abf:	push   ecx
  408ac0:	les    ecx,FWORD PTR es:[edx]
  408ac3:	sbb    BYTE PTR ds:0xd06b4f8e,dl
  408ac9:	jno    0x408a73
  408acb:	add    dl,BYTE PTR [edi+0x319baa1a]
  408ad1:	dec    eax
  408ad2:	sbb    DWORD PTR [edx+0x27],esi
  408ad5:	adc    al,0x18
  408ad7:	pusha  
  408ad8:	or     BYTE PTR ds:0x15ecbae8,0x74
  408adf:	pop    esi
  408ae0:	dec    edi
  408ae1:	aas    
  408ae2:	xlat   BYTE PTR ds:[ebx]
  408ae3:	jb     0x408af3
  408ae5:	out    dx,al
  408ae6:	ins    BYTE PTR es:[edi],dx
  408ae7:	adc    ebx,DWORD PTR [ebp-0x3b2e402d]
  408aed:	mov    DWORD PTR [ebx+eax*8+0x6b],ebx
  408af1:	dec    eax
  408af2:	cmp    esi,DWORD PTR ds:0xa76af4fc
  408af8:	mov    cl,0xc7
  408afa:	push   cs
  408afb:	mov    al,0x83
  408afd:	adc    dl,0xa3
  408b00:	lea    ebp,ds:0x8e25be65
  408b06:	call   0xa0d40389
  408b0b:	or     BYTE PTR [ebp+0x29],0x88
  408b0f:	mov    bl,0xc5
  408b11:	jmp    0xa0bdd0c6
  408b16:	sub    al,0xf9
  408b18:	hlt    
  408b19:	jns    0x408b2a
  408b1b:	nop
  408b1c:	mov    dl,0xe5
  408b1e:	call   0xc1e0:0xa2a44e5b
  408b25:	(bad)  
  408b26:	cli    
  408b27:	clc    
  408b28:	xor    eax,0x7ed470bd
  408b2d:	and    eax,0xbcb39b21
  408b32:	push   0x7c2810dc
  408b37:	xchg   ecx,eax
  408b38:	pop    es
  408b39:	int    0x54
  408b3b:	cmp    BYTE PTR [ecx],dh
  408b3d:	or     eax,0x712d1ab0
  408b42:	sbb    BYTE PTR [eax+ecx*8],0x62
  408b46:	mov    edi,0x81178fcd
  408b4b:	xchg   DWORD PTR [esi+ebp*4-0x594378de],ebp
  408b52:	outs   dx,DWORD PTR ds:[esi]
  408b53:	pop    ebp
  408b54:	push   cs
  408b55:	sbb    eax,0xe65bea5a
  408b5a:	inc    eax
  408b5b:	pop    edx
  408b5c:	outs   dx,DWORD PTR ds:[esi]
  408b5d:	cmc    
  408b5e:	sub    dl,bl
  408b60:	imul   eax,DWORD PTR [edi+0x36],0xaa474279
  408b67:	push   0xe6a4897b
  408b6c:	mov    ah,0x2d
  408b6e:	fstp   DWORD PTR [edi+0x76a618aa]
  408b74:	lahf   
  408b75:	scas   eax,DWORD PTR es:[edi]
  408b76:	sub    eax,0x3131d037
  408b7b:	dec    edi
  408b7c:	xor    ebx,DWORD PTR [eax+edx*1]
  408b7f:	pop    ss
  408b80:	and    esi,DWORD PTR cs:[eax+0x3d49242b]
  408b87:	jecxz  0x408c00
  408b89:	pop    esi
  408b8a:	scas   eax,DWORD PTR es:[edi]
  408b8b:	mov    BYTE PTR [ebx],al
  408b8d:	mov    cl,0x97
  408b8f:	jo     0x408b40
  408b91:	add    BYTE PTR [ebx-0x4a],0x5d
  408b95:	arpl   si,cx
  408b97:	xchg   edi,eax
  408b98:	jo     0x408ba0
  408b9a:	or     eax,edi
  408b9c:	push   ecx
  408b9d:	dec    edx
  408b9e:	xchg   edi,eax
  408b9f:	scas   al,BYTE PTR es:[edi]
  408ba0:	and    ebx,ebp
  408ba2:	es mov esp,0xec2c5e28
  408ba8:	into   
  408ba9:	adc    al,0xaa
  408bab:	xor    ebp,DWORD PTR ds:0x5536646a
  408bb1:	xlat   BYTE PTR ds:[ebx]
  408bb2:	cmp    BYTE PTR [ebp+0x77],dh
  408bb5:	aaa    
  408bb6:	out    dx,eax
  408bb7:	xor    al,0xe0
  408bb9:	call   0x965f5a30
  408bbe:	sub    ax,0xe57a
  408bc2:	adc    eax,0x5d35bc7b
  408bc7:	call   0xdada:0xaaf82e37
  408bce:	dec    cx
  408bd0:	ret    
  408bd1:	xchg   esp,eax
  408bd2:	fnsave [eax+eax*2-0x43]
  408bd6:	or     dh,BYTE PTR [ecx]
  408bd8:	imul   esi,DWORD PTR [edi+0x57],0x5bbddd98
  408bdf:	lock xacquire add BYTE PTR [ecx+0x18],cl
  408be4:	mov    ds:0x7e509c37,al
  408be9:	add    BYTE PTR [eax],dh
  408beb:	dec    eax
  408bec:	jbe    0x408c68
  408bee:	bound  ebp,QWORD PTR [edi+eiz*8]
  408bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf2:	sbb    edi,DWORD PTR [esi-0x26127d2d]
  408bf8:	retf   0x1755
  408bfb:	int3   
  408bfc:	(bad)  
  408bfe:	adc    cl,bl
  408c00:	mov    edi,0x2b8d434a
  408c05:	test   al,0xc2
  408c07:	jb     0x408c12
  408c09:	and    bl,bh
  408c0b:	and    al,0xd0
  408c0d:	xlat   BYTE PTR ds:[ebx]
  408c0e:	cmp    BYTE PTR [edi+0x110eb477],0x2b
  408c15:	rcr    bl,0x5c
  408c18:	cld    
  408c19:	rol    BYTE PTR [eax+edx*8-0x1a],cl
  408c1d:	push   ebx
  408c1e:	cmp    DWORD PTR [ebp+0x40],esi
  408c21:	jmp    0x408c34
  408c23:	mov    esi,0x6b5fe2d1
  408c28:	popa   
  408c29:	add    DWORD PTR [ecx+eax*1+0x2f3b8e23],esp
  408c30:	les    ecx,FWORD PTR [ebx-0x32]
  408c33:	in     al,dx
  408c34:	hlt    
  408c35:	test   esi,esi
  408c37:	cmp    esi,ecx
  408c39:	pop    ebx
  408c3a:	cdq    
  408c3b:	xor    DWORD PTR [edi-0x56a56394],ebx
  408c41:	mov    eax,0xdddaa82b
  408c46:	xchg   cl,dh
  408c48:	sbb    DWORD PTR [eax-0x80],0xb
  408c4c:	xor    eax,0xcb0553a4
  408c51:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c53:	dec    ebx
  408c54:	and    al,0xfd
  408c56:	loope  0x408ca4
  408c58:	sub    DWORD PTR [ebx-0x4bdcacd3],esp
  408c5e:	and    al,0xd7
  408c60:	outs   dx,DWORD PTR ds:[esi]
  408c61:	ror    DWORD PTR [ebp+0x31],1
  408c64:	rcl    DWORD PTR [ebp-0x520e461d],0x9
  408c6b:	loope  0x408cc1
  408c6d:	sbb    al,0x42
  408c6f:	mov    bh,0x5f
  408c71:	scas   eax,DWORD PTR es:[edi]
  408c72:	mov    ds:0xda071ddb,eax
  408c77:	test   eax,0x135983d1
  408c7c:	ja     0x408ccf
  408c7e:	jle    0x408c7e
  408c80:	sbb    DWORD PTR [ecx-0x3976bd71],ebx
  408c86:	xchg   edx,eax
  408c87:	les    ebp,FWORD PTR [ebx-0x4b952ef2]
  408c8d:	stos   BYTE PTR es:[edi],al
  408c8e:	xchg   edx,eax
  408c8f:	aad    0x4a
  408c91:	jnp    0x408c85
  408c93:	adc    ah,BYTE PTR [edi]
  408c95:	scas   eax,DWORD PTR es:[edi]
  408c96:	repz dec eax
  408c98:	addr16 dec edx
  408c9a:	cmp    DWORD PTR [eax-0x5526eae3],esi
  408ca0:	mov    ch,0xb3
  408ca2:	test   BYTE PTR [edi+0x31],bh
  408ca5:	iret   
  408ca6:	jl     0x408c7c
  408ca8:	mov    eax,0x5ae1ecd6
  408cad:	dec    ebx
  408cae:	in     al,0x1a
  408cb0:	and    esp,0x8c2c53df
  408cb6:	(bad)  
  408cb7:	pop    esi
  408cb8:	inc    ecx
  408cb9:	xchg   DWORD PTR [edx-0x58],ebx
  408cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbd:	push   edx
  408cbe:	or     edi,edi
  408cc0:	(bad)
  408cc4:	add    DWORD PTR [edi],ecx
  408cc6:	mov    ds:0xe7ad7f34,al
  408ccb:	sub    DWORD PTR [ecx+0x55ac07f4],esp
  408cd1:	scas   eax,DWORD PTR es:[edi]
  408cd2:	loope  0x408c64
  408cd4:	sbb    dh,al
  408cd6:	popf   
  408cd7:	lds    edx,FWORD PTR [edi+0x47]
  408cda:	popa   
  408cdb:	ins    DWORD PTR es:[edi],dx
  408cdc:	jmp    0x561a:0xc339c48e
  408ce3:	push   0x5f95f493
  408ce8:	div    DWORD PTR [edi-0x1d]
  408ceb:	sub    ch,BYTE PTR [esi-0x5f]
  408cee:	or     eax,0x63183647
  408cf3:	mov    al,bl
  408cf5:	xchg   esi,eax
  408cf6:	(bad)  
  408cf7:	hlt    
  408cf8:	std    
  408cf9:	xchg   esi,eax
  408cfa:	jne    0x408d59
  408cfc:	jo     0x408cac
  408cfe:	cmp    BYTE PTR [eax],0xf7
  408d01:	call   0x901e:0x9a3f1685
  408d08:	mov    edx,0xe9c793b5
  408d0d:	cmp    esi,DWORD PTR [edi]
  408d0f:	cli    
  408d10:	sub    cl,ah
  408d12:	and    edi,DWORD PTR [edi+eax*4+0x5a019c87]
  408d19:	mov    dl,0xdc
  408d1b:	js     0x408d62
  408d1d:	inc    ebx
  408d1e:	and    BYTE PTR [esi],dl
  408d20:	out    0xa5,eax
  408d22:	pop    eax
  408d23:	je     0x408d79
  408d25:	pop    ebp
  408d26:	adc    eax,0x4aa3e5cd
  408d2b:	and    cl,dh
  408d2d:	pop    ds
  408d2e:	ins    BYTE PTR es:[edi],dx
  408d2f:	push   es
  408d30:	sub    al,BYTE PTR ds:0x8086eeee
  408d36:	test   al,0x59
  408d38:	mov    cl,0x69
  408d3a:	push   cs
  408d3b:	mov    ebp,0x1143f43b
  408d40:	out    dx,eax
  408d41:	push   cs
  408d42:	dec    esi
  408d43:	pop    ds
  408d44:	repnz mov BYTE PTR [ecx-0x60],ch
  408d48:	je     0x408d81
  408d4a:	inc    DWORD PTR [edx-0x38]
  408d4d:	(bad)  
  408d4e:	into   
  408d4f:	or     al,0x53
  408d51:	fcomp  QWORD PTR [ebx]
  408d53:	dec    eax
  408d54:	test   al,0x36
  408d56:	imul   esi,DWORD PTR [ebx+edi*4],0x43d6562
  408d5d:	sbb    ecx,eax
  408d5f:	sbb    esp,DWORD PTR [eax+0x608815f2]
  408d65:	fsubp  st(2),st
  408d67:	je     0x408cec
  408d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6a:	fwait
  408d6b:	sub    eax,0x5a958c56
  408d70:	loopne 0x408dd6
  408d72:	cld    
  408d73:	or     eax,DWORD PTR [ebx+0x6d6c7cbe]
  408d79:	nop
  408d7a:	arpl   WORD PTR [eax],sp
  408d7c:	jbe    0x408dbf
  408d7e:	std    
  408d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d80:	shl    DWORD PTR [ecx-0x5bbb1c40],cl
  408d86:	mov    ebx,0x9639f8d1
  408d8b:	pop    cx
  408d8d:	xchg   esi,eax
  408d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d8f:	inc    ebp
  408d90:	cmp    ch,BYTE PTR [esi+0x56]
  408d93:	fbld   TBYTE PTR [edx-0x57ede82e]
  408d99:	fst    QWORD PTR [edi-0x3a]
  408d9c:	pop    edx
  408d9d:	test   DWORD PTR [ebx+0x2fc73cff],ebp
  408da3:	jb     0x408d80
  408da5:	xlat   BYTE PTR ds:[ebx]
  408da6:	mov    dl,0xb6
  408da8:	jecxz  0x408e02
  408daa:	inc    DWORD PTR [esi+edi*4]
  408dad:	out    0x15,eax
  408daf:	mov    eax,ds:0xe67f9c81
  408db4:	adc    eax,DWORD PTR [ecx-0x7565e5a]
  408dba:	add    al,0xd8
  408dbc:	data16 in al,0x6c
  408dbf:	mov    DWORD PTR [edx],edi
  408dc1:	sub    al,0xb6
  408dc3:	adc    al,0xe
  408dc5:	(bad)  
  408dc6:	mov    WORD PTR [ebx+ecx*8],cs
  408dc9:	mov    BYTE PTR [ebp+0x4e],bl
  408dcc:	and    esi,edi
  408dce:	popf   
  408dcf:	aad    0xce
  408dd1:	(bad)  
  408dd2:	jecxz  0x408d95
  408dd4:	rcr    BYTE PTR [ebx-0x3ad04327],1
  408dda:	fs std 
  408ddc:	cmp    eax,0xef892eb5
  408de1:	or     ch,BYTE PTR [ebx-0x67]
  408de4:	call   FWORD PTR [esi+esi*2+0x36]
  408de8:	jae    0x408ddf
  408dea:	push   0x917fc9e2
  408def:	xchg   DWORD PTR [edx+0x41bc1df2],edi
  408df5:	push   cs
  408df6:	sbb    edi,DWORD PTR [eax-0x12]
  408df9:	add    dl,bh
  408dfb:	lahf   
  408dfc:	push   edi
  408dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dfe:	iret   
  408dff:	loop   0x408dbb
  408e01:	cs addr16 inc ebx
  408e04:	jmp    0x8b283f55
  408e09:	aam    0x1
  408e0b:	push   ebp
  408e0c:	lds    ebx,FWORD PTR [esp+ebp*2]
  408e0f:	cld    
  408e10:	es jo  0x408df9
  408e13:	jbe    0x408df6
  408e15:	jne    0x408dc6
  408e17:	xchg   edi,eax
  408e18:	sub    ebp,ebp
  408e1a:	ret    
  408e1b:	je     0x408e7c
  408e1d:	enter  0xb1e7,0x27
  408e21:	push   eax
  408e22:	into   
  408e23:	cwde   
  408e24:	xor    al,0xf1
  408e26:	xor    al,0x2e
  408e28:	stos   DWORD PTR es:[edi],eax
  408e29:	cmp    BYTE PTR [ebp-0x5],ch
  408e2c:	add    ch,BYTE PTR [edx+edi*8]
  408e2f:	ror    DWORD PTR [edi+0x74],cl
  408e32:	daa    
  408e33:	push   edi
  408e34:	push   eax
  408e35:	mov    ecx,0x2d44dbdd
  408e3a:	xchg   ebx,eax
  408e3b:	inc    esi
  408e3c:	inc    edx
  408e3d:	fidivr DWORD PTR [esp+esi*8+0x4e]
  408e41:	cmp    ebx,DWORD PTR ds:0x96270cb6
  408e47:	dec    ebp
  408e48:	push   edi
  408e49:	xor    eax,0xb3f14deb
  408e4e:	mov    ecx,0xe405d5b9
  408e53:	fsub   QWORD PTR [edx+0x59]
  408e56:	add    al,0x2c
  408e58:	sub    al,BYTE PTR ds:0xb60bb20c
  408e5e:	daa    
  408e5f:	add    BYTE PTR [ecx-0x5d],bl
  408e62:	inc    esi
  408e63:	(bad)  
  408e64:	cli    
  408e65:	push   0xfffffffb
  408e67:	(bad)
  408e6b:	dec    ecx
  408e6c:	sbb    DWORD PTR [esi-0x9],eax
  408e6f:	mov    ecx,0x9b9732f3
  408e74:	adc    eax,0x6a7da107
  408e79:	and    BYTE PTR [eax-0x3d09997d],al
  408e7f:	push   ss
  408e80:	scas   al,BYTE PTR es:[edi]
  408e81:	jmp    0x408e72
  408e83:	test   cl,cl
  408e85:	loopne 0x408e57
  408e87:	and    al,0xaa
  408e89:	nop
  408e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e8b:	(bad)  
  408e8c:	div    al
  408e8e:	jle    0x408eea
  408e90:	sub    al,0xe4
  408e92:	xchg   esi,eax
  408e93:	pop    ebx
  408e94:	inc    ebp
  408e95:	pushf  
  408e96:	ret    0xf953
  408e99:	inc    ecx
  408e9a:	dec    edx
  408e9b:	push   0x45
  408e9d:	jecxz  0x408e7e
  408e9f:	pop    ebp
  408ea0:	cmp    ch,BYTE PTR [esi]
  408ea2:	addr16 jo 0x408e36
  408ea5:	je     0x408eaa
  408ea7:	jecxz  0x408ed1
  408ea9:	(bad)  
  408eab:	push   ds
  408eac:	shl    BYTE PTR [eax+0x38],cl
  408eaf:	push   esi
  408eb0:	ss jo  0x408eae
  408eb3:	(bad)  
  408eb4:	push   ss
  408eb5:	adc    BYTE PTR ds:0xa4fd4382,0xc2
  408ebc:	aaa    
  408ebd:	cmp    al,0x73
  408ebf:	adc    cl,BYTE PTR [edx]
  408ec1:	mov    ah,dh
  408ec3:	pop    edx
  408ec4:	or     BYTE PTR [eax-0x39],ch
  408ec7:	lea    esi,[esi]
  408ec9:	fbld   TBYTE PTR [ebp+esi*8-0x75ce5502]
  408ed0:	adc    eax,esi
  408ed2:	xchg   esi,eax
  408ed3:	push   edx
  408ed4:	xchg   ebp,eax
  408ed5:	xchg   esi,eax
  408ed6:	(bad)  
  408ed7:	xchg   esi,eax
  408ed8:	xor    DWORD PTR [edx+0x748edefe],esi
  408ede:	sub    eax,0x79379bfa
  408ee3:	ss push ebx
  408ee5:	enter  0xdef4,0x8
  408ee9:	dec    ecx
  408eea:	and    DWORD PTR [esi-0x63aa172b],eax
  408ef0:	mov    esi,0xcfdcbdde
  408ef5:	or     eax,0x6608c025
  408efa:	nop
  408efb:	jp     0x408e8b
  408efd:	adc    DWORD PTR [ebp+0xb500bd9],ebx
  408f03:	xor    DWORD PTR ss:[eax-0x377d7265],esp
  408f0a:	inc    esp
  408f0b:	pushf  
  408f0c:	outs   dx,BYTE PTR ds:[esi]
  408f0d:	retf   
  408f0e:	inc    edi
  408f0f:	rcl    BYTE PTR [edx+0x7684c536],cl
  408f15:	mov    esi,0xd0b8400f
  408f1a:	xor    bl,ah
  408f1c:	jnp    0x408f1f
  408f1e:	loop   0x408eaf
  408f20:	add    eax,0x1b72c6c6
  408f25:	(bad)  
  408f26:	pop    ebp
  408f27:	jne    0x408fa7
  408f29:	adc    al,BYTE PTR [edi+0x1c]
  408f2c:	in     al,dx
  408f2d:	aaa    
  408f2e:	mov    esp,0x7b815a6e
  408f33:	mov    bh,0xcd
  408f35:	(bad)  
  408f36:	xor    ecx,ebx
  408f38:	dec    edi
  408f39:	pop    bp
  408f3b:	scas   al,BYTE PTR es:[edi]
  408f3c:	(bad)  
  408f3d:	ficom  WORD PTR [edx]
  408f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f40:	jmp    0x408f72
  408f42:	aaa    
  408f43:	sbb    eax,0x8be2aac4
  408f48:	xchg   edx,eax
  408f49:	mov    ?,WORD PTR [edx-0x6ede4268]
  408f4f:	clc    
  408f50:	cmp    ah,BYTE PTR [esi-0x26]
  408f53:	aas    
  408f54:	sbb    ah,al
  408f56:	add    bh,BYTE PTR [edx+eax*4+0x6d]
  408f5a:	xor    al,0x8b
  408f5c:	xor    al,0x5c
  408f5e:	mov    al,0x66
  408f60:	dec    ebp
  408f61:	inc    edx
  408f62:	mov    ebx,0xc84db64c
  408f67:	pop    esp
  408f68:	in     eax,dx
  408f69:	dec    edx
  408f6a:	add    eax,0x312b81d2
  408f6f:	in     al,0xee
  408f71:	int3   
  408f72:	sar    esi,0xe4
  408f75:	xchg   esi,eax
  408f76:	(bad)  
  408f77:	jmp    DWORD PTR [ebx+ecx*8]
  408f7a:	dec    ecx
  408f7b:	mov    bl,0x8a
  408f7d:	stos   DWORD PTR es:[edi],eax
  408f7e:	iret   
  408f7f:	adc    al,0x59
  408f81:	ds mov ebp,0xbddfafda
  408f87:	scas   al,BYTE PTR es:[edi]
  408f88:	into   
  408f89:	adc    ecx,DWORD PTR [ecx+edi*1-0x726d317c]
  408f90:	pusha  
  408f91:	add    edx,DWORD PTR [ecx+0x13]
  408f94:	pushaw 
  408f96:	icebp  
  408f97:	mov    edi,0x19c074d4
  408f9c:	or     BYTE PTR [esi+0x6a0b703b],0xba
  408fa3:	mov    al,0x72
  408fa5:	dec    ecx
  408fa6:	sub    cl,BYTE PTR [edx-0x6ff904a9]
  408fac:	sar    bh,cl
  408fae:	jg     0x408f9e
  408fb0:	or     eax,0x3d342c03
  408fb5:	push   edi
  408fb6:	push   es
  408fb7:	add    ecx,DWORD PTR ds:[edx]
  408fba:	push   es
  408fbb:	lahf   
  408fbc:	mov    eax,ds:0xfce383d3
  408fc1:	mov    DWORD PTR [ecx],edx
  408fc3:	std    
  408fc4:	adc    eax,0xd9b0b4c3
  408fc9:	jno    0x40902a
  408fcb:	sti    
  408fcc:	adc    esp,DWORD PTR [ebx+0x5d]
  408fcf:	test   DWORD PTR [ebx],ebx
  408fd1:	dec    edx
  408fd2:	in     al,0x1f
  408fd4:	mov    edi,0xf0f48193
  408fd9:	sub    al,0x8a
  408fdb:	jmp    0xab96eac6
  408fe0:	or     eax,DWORD PTR [edx+0x65ef5087]
  408fe6:	idiv   DWORD PTR [edi+0x11]
  408fe9:	hlt    
  408fea:	loope  0x408fce
  408fec:	ds cwde 
  408fee:	sbb    BYTE PTR [ebp-0x2bf4f29f],dh
  408ff4:	pop    es
  408ff5:	aas    
  408ff6:	repnz and edx,DWORD PTR [edx-0x31]
  408ffa:	dec    eax
  408ffb:	inc    eax
  408ffc:	cmp    esp,DWORD PTR [ecx-0x510c731d]
  409002:	lods   eax,DWORD PTR ds:[esi]
  409003:	mov    dl,0x73
  409005:	xor    DWORD PTR [eax],esp
  409007:	and    DWORD PTR [ecx+eax*4],edx
  40900a:	adc    bh,BYTE PTR [edi-0x5bd57629]
  409010:	push   edi
  409011:	jle    0x408fba
  409013:	out    dx,eax
  409014:	sahf   
  409015:	adc    edx,esp
  409017:	pop    esp
  409018:	adc    DWORD PTR [ebx+0x73],esi
  40901b:	pop    ecx
  40901c:	push   ebx
  40901d:	jb     0x408fa4
  40901f:	fnstsw WORD PTR [edx]
  409021:	push   edi
  409022:	xor    BYTE PTR [ebp+0x3f],bl
  409025:	xor    al,0x51
  409027:	pushf  
  409028:	add    DWORD PTR ds:0xef025811,edi
  40902e:	in     al,dx
  40902f:	ret    0x9433
  409032:	jns    0x408fe7
  409034:	daa    
  409035:	int    0x4d
  409037:	mov    esi,0xd8a222f4
  40903c:	adc    al,0xf6
  40903e:	push   es
  40903f:	or     DWORD PTR [eax],esp
  409041:	and    ecx,esi
  409043:	out    0x30,eax
  409045:	mov    ds:0x7d0a1a8,eax
  40904a:	push   ss
  40904b:	iret   
  40904c:	fld    TBYTE PTR [eax-0x44b7b5cb]
  409052:	push   ss
  409053:	je     0x409071
  409055:	xor    bh,cl
  409057:	mov    esp,0x60d35383
  40905c:	ins    BYTE PTR es:[edi],dx
  40905d:	sti    
  40905e:	cmp    al,BYTE PTR [ecx-0x58de2fc8]
  409064:	jmp    0x308e:0x59016853
  40906b:	pop    ebp
  40906c:	jecxz  0x409003
  40906e:	rol    DWORD PTR [ebp-0x5a],0x42
  409072:	es retf 
  409074:	sbb    eax,0xb6af4b62
  409079:	xchg   edx,eax
  40907a:	es loopne 0x409080
  40907d:	jmp    0x32f4:0x5ff3e34
  409084:	or     BYTE PTR [esi-0x4c],ch
  409087:	fwait
  409088:	loop   0x40909b
  40908a:	sub    eax,0xe99fa930
  40908f:	test   esi,esp
  409091:	(bad)  
  409093:	jno    0x409105
  409095:	and    BYTE PTR [ecx+ebp*4-0x458b0c72],dl
  40909c:	jg     0x4090b8
  40909e:	daa    
  40909f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090a0:	retf   
  4090a1:	mov    ds:0xbf3430,eax
  4090a6:	retf   
  4090a7:	or     al,0x29
  4090a9:	mov    eax,0x4b0c9e3c
  4090ae:	and    ebx,DWORD PTR [ebp+0x64]
  4090b1:	loopne 0x4090ce
  4090b3:	dec    DWORD PTR [edx-0x37]
  4090b6:	inc    esi
  4090b7:	lods   al,BYTE PTR ds:[esi]
  4090b8:	test   eax,0x4647fb51
  4090bd:	add    eax,0xf4bbef7a
  4090c2:	lea    esi,[edi+ebx*1+0x54]
  4090c6:	jp     0x409063
  4090c8:	addr16 (bad) 
  4090ca:	mov    al,ds:0x2ab75838
  4090cf:	jmp    0x4684:0x326a5c74
  4090d6:	xor    DWORD PTR [ecx+0x32],ebx
  4090d9:	jae    0x40909e
  4090db:	push   ds
  4090dc:	(bad)  
  4090dd:	and    esp,esi
  4090df:	adc    al,0x95
  4090e1:	push   ebp
  4090e2:	and    edi,DWORD PTR [ecx+esi*4]
  4090e5:	retf   
  4090e6:	adc    al,0x9
  4090e8:	cmp    bh,BYTE PTR [ecx]
  4090ea:	(bad)  
  4090eb:	mov    ss,ecx
  4090ed:	pop    ecx
  4090ee:	cli    
  4090ef:	cmp    dl,BYTE PTR [ecx+0x33ce992c]
  4090f5:	sar    BYTE PTR [ebp-0x5f988207],0x48
  4090fc:	fstp   QWORD PTR [ebx]
  4090fe:	xlat   BYTE PTR ds:[ebx]
  4090ff:	mov    esi,gs
  409101:	sbb    al,0x95
  409103:	(bad)  
  409104:	out    0x5e,al
  409106:	into   
  409107:	mov    ch,BYTE PTR ds:0x315213aa
  40910d:	idiv   DWORD PTR [esi+0x21]
  409110:	push   esp
  409111:	cs push eax
  409113:	jmp    0xa2bcad77
  409118:	sar    DWORD PTR [edi+0x13616ee7],0xde
  40911f:	xor    eax,0x55216f9
  409124:	inc    ebp
  409125:	mov    al,ds:0xe155be65
  40912a:	outs   dx,DWORD PTR ds:[esi]
  40912b:	xchg   ecx,eax
  40912c:	pop    eax
  40912d:	pop    ebx
  40912e:	jno    0x409136
  409130:	mov    ecx,0x588ccfe1
  409135:	mov    esi,0x136804fe
  40913a:	fnstenv [ebp+0x50be331d]
  409140:	(bad)  
  409141:	cmp    bh,cl
  409143:	mov    al,0x88
  409145:	pop    ds
  409146:	std    
  409147:	mov    cl,0xec
  409149:	and    BYTE PTR [edx+0x13],ch
  40914c:	lock adc cl,bl
  40914f:	(bad)  
  409150:	outs   dx,BYTE PTR ds:[esi]
  409151:	jle    0x4091d2
  409153:	mov    dl,ah
  409155:	xor    al,0x83
  409157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409158:	and    BYTE PTR [edx],ch
  40915a:	sbb    eax,0x767fcbed
  40915f:	rcr    DWORD PTR [esi],0x3
  409162:	and    ebx,0x1c
  409165:	mov    esi,0x678bccdc
  40916a:	mov    esp,0x5d64a7a6
  40916f:	jnp    0x40912f
  409171:	sub    eax,esi
  409173:	dec    ebp
  409174:	inc    edx
  409175:	adc    ebp,DWORD PTR [ecx+0x75]
  409178:	push   edi
  409179:	das    
  40917a:	sub    eax,0x78d718c2
  40917f:	or     al,0x46
  409181:	out    0xeb,eax
  409183:	jnp    0x4091ea
  409185:	inc    edi
  409186:	or     dh,BYTE PTR [ebp+0x1d]
  409189:	test   al,0xfb
  40918b:	fcmovne st,st(2)
  40918d:	stc    
  40918e:	gs shr dh,cl
  409191:	rol    ebx,0x1a
  409194:	pusha  
  409195:	xchg   edi,eax
  409196:	mov    ebp,0x6b16d99
  40919b:	dec    ebp
  40919c:	out    0x25,al
  40919e:	cmc    
  40919f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a0:	loopne 0x4091eb
  4091a2:	or     al,0xa1
  4091a4:	rcr    BYTE PTR [ebp+0x731e1a6],cl
  4091aa:	pusha  
  4091ab:	lahf   
  4091ac:	out    0x49,eax
  4091ae:	add    edi,DWORD PTR [ebx+0x39]
  4091b1:	xchg   ecx,eax
  4091b2:	add    eax,DWORD PTR [ecx-0x4d]
  4091b5:	xchg   esp,eax
  4091b6:	mov    ebx,0x64bb118e
  4091bb:	dec    ebp
  4091bc:	ss gs xor esi,0x24ff29fc
  4091c4:	adc    DWORD PTR [edi-0x2fd14b66],ebp
  4091ca:	(bad)  
  4091cb:	in     al,dx
  4091cc:	mov    esi,0x2a066d63
  4091d1:	sbb    al,0x98
  4091d3:	add    ecx,DWORD PTR [edx+0x4f020a86]
  4091d9:	mov    ebx,0x9899e23e
  4091de:	jp     0x4091ca
  4091e0:	jge    0x4091f5
  4091e2:	pop    esi
  4091e3:	or     esi,0xa357ba1f
  4091e9:	test   eax,0xb44fc530
  4091ee:	xchg   esp,eax
  4091ef:	jbe    0x4091b9
  4091f1:	fsubr  DWORD PTR ds:0x6d8cc667
  4091f7:	in     eax,dx
  4091f8:	jmp    0xc71a4291
  4091fd:	test   eax,0x34bb78a9
  409202:	test   DWORD PTR ds:0xe5a3b895,ebx
  409208:	rcl    DWORD PTR [edx-0x76],1
  40920b:	add    eax,0xf822f29c
  409210:	mov    al,ds:0x8959c2d9
  409215:	xchg   ebp,eax
  409216:	retf   0x6d73
  409219:	or     al,0x84
  40921b:	pop    ecx
  40921c:	je     0x40925e
  40921e:	push   0x64ebdf00
  409223:	xor    BYTE PTR [edx+0x2df03854],0x85
  40922a:	es leave 
  40922c:	jg     0x409231
  40922e:	jge    0x4091ef
  409230:	out    dx,al
  409231:	or     dh,BYTE PTR [ecx]
  409233:	ja     0x40922e
  409235:	rcr    DWORD PTR [ecx-0x241849f6],0xc8
  40923c:	mov    ds:0xdff5a422,eax
  409241:	int3   
  409242:	dec    edx
  409243:	pop    es
  409244:	mov    dl,bh
  409246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409247:	(bad)  
  409248:	jecxz  0x409252
  40924a:	xchg   DWORD PTR [ecx],ecx
  40924c:	adc    eax,0x16d757c5
  409251:	mov    eax,0x89c57afe
  409256:	fucomp st(1)
  409258:	and    ebp,DWORD PTR [ebx-0x3a11dfed]
  40925e:	pushf  
  40925f:	repz cmp al,0xe3
  409262:	fninit 
  409264:	cmp    al,0x9b
  409266:	push   cs
  409267:	aas    
  409268:	cmp    ah,bh
  40926a:	push   ebp
  40926b:	das    
  40926c:	aaa    
  40926d:	cmp    esp,ebx
  40926f:	inc    ebx
  409270:	jo     0x4092c5
  409272:	mov    esi,DWORD PTR [eax+ebp*1-0x45]
  409276:	mov    cl,0xa7
  409278:	and    esp,0x72
  40927b:	les    eax,FWORD PTR [edx+0x6189865c]
  409281:	(bad)  
  409283:	push   edi
  409284:	xlat   BYTE PTR ds:[ebx]
  409285:	dec    edi
  409286:	mov    esp,0x34d395da
  40928b:	mov    ah,0x7
  40928d:	(bad)  
  40928e:	jnp    0x4092a7
  409290:	fst    st(7)
  409292:	icebp  
  409293:	mov    ds:0xd436a142,al
  409298:	addr16 popf 
  40929a:	js     0x409231
  40929c:	or     eax,0x941c84cc
  4092a1:	clc    
  4092a2:	or     eax,0x7a003ce7
  4092a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a8:	jmp    0x63aa108c
  4092ad:	pop    edx
  4092ae:	or     al,0x95
  4092b0:	stos   BYTE PTR es:[edi],al
  4092b1:	and    BYTE PTR [eax+0x59],0x97
  4092b5:	add    ecx,DWORD PTR [eax]
  4092b7:	xchg   ebx,eax
  4092b8:	sar    DWORD PTR [edx],0x53
  4092bb:	mov    eax,0x1b092410
  4092c0:	lods   eax,DWORD PTR ds:[esi]
  4092c1:	outs   dx,BYTE PTR ds:[esi]
  4092c2:	mov    DWORD PTR gs:[esi-0x7619f6ed],eax
  4092c9:	call   0x2f43:0x765105d
  4092d0:	and    eax,0x6d551dab
  4092d5:	mov    al,ds:0xfffad6c0
  4092da:	(bad)  
  4092db:	and    BYTE PTR [ebp+0x2b],al
  4092de:	frstor [ebx]
  4092e0:	adc    ebx,ebx
  4092e2:	in     eax,dx
  4092e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092e4:	add    esp,DWORD PTR [ecx]
  4092e6:	rcr    BYTE PTR [edi+0x64136d2e],0xc4
  4092ed:	hlt    
  4092ee:	adc    bl,BYTE PTR [esi+0x738d127b]
  4092f4:	fcmove st,st(1)
  4092f6:	push   esi
  4092f7:	ret    
  4092f8:	mov    BYTE PTR [ebx+0x45],cl
  4092fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fc:	cs pushf 
  4092fe:	outs   dx,BYTE PTR ds:[esi]
  4092ff:	and    DWORD PTR [edi],0x22
  409302:	fs das 
  409304:	jmp    0xf2822a50
  409309:	cmp    BYTE PTR [ecx],bl
  40930b:	aaa    
  40930c:	or     ch,dl
  40930e:	fstp   QWORD PTR [ecx+0xd7d9c57]
  409314:	scas   al,BYTE PTR es:[edi]
  409315:	mov    WORD PTR [esi],ds
  409317:	aaa    
  409318:	jns    0x4092a0
  40931a:	in     eax,0x50
  40931c:	sbb    DWORD PTR [bx+si],0x47
  409320:	mov    dl,0xeb
  409322:	jne    0x40932f
  409324:	sub    eax,DWORD PTR [eax+ebx*1]
  409327:	mov    al,ds:0x298e9c8f
  40932c:	xor    esp,esp
  40932e:	sbb    dl,BYTE PTR [esp+ecx*8]
  409331:	les    ebx,FWORD PTR [ecx+0x27]
  409334:	mov    al,BYTE PTR [ebp+0x1e]
  409337:	loope  0x4092ca
  409339:	leave  
  40933a:	jecxz  0x40934e
  40933c:	push   cs
  40933d:	pop    ss
  40933e:	cmp    edi,eax
  409340:	xchg   ebx,eax
  409341:	das    
  409342:	mov    esi,0xa8941d5c
  409347:	arpl   WORD PTR [eax+eiz*1],dx
  40934a:	aad    0x73
  40934c:	fsubr  st,st(5)
  40934e:	add    bh,BYTE PTR [edx+edi*4+0x4e925b27]
  409355:	cbw    
  409357:	jp     0x40931f
  409359:	in     eax,dx
  40935a:	int    0x36
  40935c:	outs   dx,DWORD PTR ds:[esi]
  40935d:	sbb    eax,0xb9d8fb3
  409362:	pop    ebp
  409363:	xchg   ebx,esi
  409365:	pop    ds
  409366:	sbb    al,0x7b
  409368:	push   0x16e2115
  40936d:	jnp    0x409315
  40936f:	nop
  409370:	ret    
  409371:	loop   0x409336
  409373:	loopne 0x4093cb
  409375:	mov    al,ds:0x261b90c0
  40937a:	jge    0x409363
  40937c:	mov    bl,BYTE PTR [eax-0x5e14b1db]
  409382:	in     al,dx
  409383:	mov    eax,0xbde20628
  409388:	fs dec ebx
  40938a:	sub    BYTE PTR [ecx+edi*2+0x4f3b8121],bh
  409391:	mov    eax,0x277dcd8
  409396:	mov    DWORD PTR [esi],ebp
  409398:	sbb    al,0xd0
  40939a:	ret    0x7aa6
  40939d:	mov    dl,0x7a
  40939f:	es loope 0x409381
  4093a2:	sti    
  4093a3:	jbe    0x40939b
  4093a5:	pop    esi
  4093a6:	mov    DWORD PTR [edx],eax
  4093a8:	(bad)  
  4093a9:	js     0x40935a
  4093ab:	inc    ebp
  4093ac:	xchg   ebp,eax
  4093ad:	gs push ecx
  4093af:	cwde   
  4093b0:	sub    eax,0x7493eee3
  4093b5:	inc    edx
  4093b6:	push   0xffffffb3
  4093b8:	and    DWORD PTR [eax-0x10],0x122af7b6
  4093bf:	xlat   BYTE PTR ds:[ebx]
  4093c0:	push   esi
  4093c1:	sbb    eax,0x96e066
  4093c6:	jbe    0x40935c
  4093c8:	arpl   WORD PTR [ecx+0x5d],sp
  4093cb:	outs   dx,BYTE PTR ds:[esi]
  4093cc:	(bad)
  4093cf:	pop    es
  4093d0:	xor    al,dh
  4093d2:	mov    dh,0x55
  4093d4:	pop    ecx
  4093d5:	mov    al,ds:0xbac8e078
  4093da:	je     0x409408
  4093dc:	dec    ecx
  4093dd:	jbe    0x4093c7
  4093df:	mov    ch,0x66
  4093e1:	stos   DWORD PTR es:[edi],eax
  4093e2:	and    eax,0x8f06544
  4093e7:	in     eax,dx
  4093e8:	fadd   DWORD PTR [ebx+0x73]
  4093eb:	ds out dx,eax
  4093ed:	sub    esi,esi
  4093ef:	mov    dh,0xac
  4093f1:	cmp    edx,DWORD PTR [ecx-0x5593fd13]
  4093f7:	xor    BYTE PTR [ebp+0x32],bh
  4093fa:	es mov dl,bl
  4093fd:	or     eax,0xfe6c754b
  409402:	or     DWORD PTR [eax-0x705bf693],edi
  409408:	push   ss
  409409:	xor    eax,0x8e28507d
  40940e:	test   DWORD PTR [esi-0x7e],0xfd93fce9
  409415:	jo     0x409410
  409417:	test   DWORD PTR [ebx],eax
  409419:	mov    dh,0x2
  40941b:	or     edx,DWORD PTR [ebx+0x4a]
  40941e:	pusha  
  40941f:	xor    al,0xb0
  409421:	and    edi,DWORD PTR [eax-0x7f5bb7d2]
  409427:	inc    esi
  409428:	loop   0x409454
  40942a:	es jns 0x40946a
  40942d:	add    BYTE PTR [edi+0x71],cl
  409430:	mov    dh,0x5b
  409432:	jl     0x4093cf
  409434:	adc    al,0x74
  409436:	jnp    0x409473
  409438:	arpl   WORD PTR [ecx+0x73e4f6b6],si
  40943e:	add    BYTE PTR [edx+0x5c24b1f5],ah
  409444:	aaa    
  409445:	out    0x9,eax
  409447:	cmp    al,BYTE PTR [esi+0x22615a36]
  40944d:	je     0x409418
  40944f:	push   esi
  409450:	xlat   BYTE PTR ds:[ebx]
  409451:	test   al,0x55
  409453:	mov    edx,0x96f9a34e
  409458:	les    ecx,FWORD PTR [esp+eiz*4]
  40945b:	test   eax,0x591b031
  409460:	nop
  409461:	xlat   BYTE PTR ds:[ebx]
  409462:	cmp    BYTE PTR [edx-0x54],dh
  409465:	add    DWORD PTR [edi+0x3eae724e],esi
  40946b:	sbb    esp,DWORD PTR [eax+0x12a01417]
  409471:	xor    ch,cl
  409473:	loope  0x409453
  409475:	pop    ebp
  409476:	mov    ah,0xd7
  409478:	xchg   esi,eax
  409479:	js     0x4094cb
  40947b:	mov    dh,0x44
  40947d:	cld    
  40947e:	call   0x423d:0xc51480dd
  409485:	repnz push ebx
  409487:	es (bad) 
  409489:	(bad)  
  40948a:	std    
  40948b:	mov    edx,0x6ed15e1d
  409490:	and    BYTE PTR [eax-0x9d79735],dl
  409496:	xchg   ecx,eax
  409497:	int3   
  409498:	push   ds
  409499:	daa    
  40949a:	xchg   ebx,eax
  40949b:	(bad)  
  40949c:	adc    bh,BYTE PTR [ecx+edx*8-0x32]
  4094a0:	push   edx
  4094a1:	and    BYTE PTR [ebx],dh
  4094a3:	jmp    0x7cb3f547
  4094a8:	cmp    eax,0x35111e3d
  4094ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ae:	sbb    eax,0x4fe5414d
  4094b3:	nop
  4094b4:	ficomp DWORD PTR [ecx]
  4094b6:	xor    DWORD PTR [ebp+ebx*2-0x29],0xd8cf81f6
  4094be:	ins    BYTE PTR es:[edi],dx
  4094bf:	(bad)  
  4094c0:	lock add eax,0xf7cc1337
  4094c6:	inc    ebp
  4094c7:	test   al,0x9b
  4094c9:	push   cs
  4094ca:	jns    0x40950d
  4094cc:	add    al,0x17
  4094ce:	mov    dl,0xe0
  4094d0:	mov    WORD PTR [ebp+eiz*1+0x7cc86639],ds
  4094d7:	mov    edi,0x6ba9f2b4
  4094dc:	test   BYTE PTR [eax+0x6b],al
  4094df:	pop    ss
  4094e0:	ins    DWORD PTR es:[edi],dx
  4094e1:	sub    esi,eax
  4094e3:	xchg   edx,eax
  4094e4:	mov    ds:0xd68b5aff,al
  4094e9:	cmc    
  4094ea:	xchg   ebx,eax
  4094eb:	pop    edx
  4094ec:	js     0x4094ca
  4094ee:	pop    edx
  4094ef:	loopne 0x40949f
  4094f1:	(bad)  
  4094f2:	div    dh
  4094f4:	shl    BYTE PTR [edx],0xf3
  4094f7:	in     al,dx
  4094f8:	sahf   
  4094f9:	test   ebp,0x2538a3c2
  4094ff:	xor    eax,0x2d270eba
  409504:	aaa    
  409505:	add    edx,edx
  409507:	cli    
  409508:	push   DWORD PTR [ebp+0x23]
  40950b:	jge    0x409538
  40950d:	xchg   esp,eax
  40950e:	shl    DWORD PTR [edx-0x12c73997],0x2b
  409515:	sub    BYTE PTR [esi+0x20],0x80
  409519:	jle    0x409570
  40951b:	dec    ebx
  40951c:	out    0xe8,eax
  40951e:	mov    bh,0x87
  409520:	addr16 dec eax
  409522:	sub    esi,DWORD PTR [ecx]
  409524:	mov    esp,0x2b2eee79
  409529:	aaa    
  40952a:	scas   al,BYTE PTR es:[edi]
  40952b:	int    0xbe
  40952d:	sar    WORD PTR [eax+0x3fcaf108],0xf8
  409535:	inc    ebx
  409536:	cld    
  409537:	and    dh,BYTE PTR es:[ebx]
  40953a:	dec    ebp
  40953b:	add    eax,0xf3ddf2e0
  409540:	aad    0x93
  409542:	les    ebx,FWORD PTR [esi+0x43]
  409545:	xor    eax,0xff74ddb9
  40954a:	sub    BYTE PTR [ecx],0x57
  40954d:	inc    edi
  40954e:	sahf   
  40954f:	mov    edx,0xfc17bf5f
  409554:	jge    0x409536
  409556:	mov    eax,ds:0x64daa79c
  40955b:	and    ebx,DWORD PTR [ebx+0x7b49a5c7]
  409561:	xchg   ebp,eax
  409562:	nop
  409563:	inc    ecx
  409564:	out    dx,al
  409565:	cmp    DWORD PTR [ebp-0x5e],0x1b83a97e
  40956c:	pop    esi
  40956d:	or     bl,BYTE PTR [ecx]
  40956f:	jbe    0x409508
  409571:	int    0xc7
  409573:	push   0x7f
  409575:	out    dx,al
  409576:	aad    0x25
  409578:	fisttp DWORD PTR [edx+0x65]
  40957b:	adc    al,0xc8
  40957d:	stos   BYTE PTR es:[edi],al
  40957e:	add    DWORD PTR [edx+0x4922fe4d],esi
  409584:	add    al,0xf7
  409586:	adc    DWORD PTR [esp+ecx*4],eax
  409589:	adc    BYTE PTR [ebx-0x28],ch
  40958c:	stos   DWORD PTR es:[edi],eax
  40958d:	(bad)  [edx-0x305c29e1]
  409593:	inc    edx
  409594:	ins    BYTE PTR es:[edi],dx
  409595:	fdivr  QWORD PTR es:[ebp+0x228a92cd]
  40959c:	dec    ebx
  40959d:	sub    al,0x40
  40959f:	mov    ecx,0x542dc311
  4095a4:	test   BYTE PTR [esi-0x3bc00f1a],bl
  4095aa:	lahf   
  4095ab:	ds mov esp,0x45d0f3e3
  4095b1:	inc    ecx
  4095b2:	fucomp st(5)
  4095b4:	xor    bh,BYTE PTR [esi-0x1bea043]
  4095ba:	cmp    DWORD PTR [esi+ecx*2-0x39e46b9a],0xc999dfc
  4095c5:	sub    BYTE PTR [ebx+0x6b],dh
  4095c8:	nop
  4095c9:	or     ebx,DWORD PTR [ecx+ecx*1+0x4a]
  4095cd:	sub    esp,DWORD PTR [ebx-0x39]
  4095d0:	push   ebx
  4095d1:	lods   al,BYTE PTR ds:[esi]
  4095d2:	lds    edi,FWORD PTR [eax]
  4095d4:	js     0x409575
  4095d6:	retf   
  4095d7:	and    DWORD PTR cs:[ebp+0x1c476fcb],0x7e407597
  4095e2:	outs   dx,DWORD PTR ds:[esi]
  4095e3:	adc    BYTE PTR [edi],dh
  4095e5:	clc    
  4095e6:	mov    cl,0xbd
  4095e8:	mov    ah,0x94
  4095ea:	adc    al,0xac
  4095ec:	sbb    BYTE PTR [ecx],0x61
  4095ef:	mov    cl,0xe8
  4095f1:	lahf   
  4095f2:	pop    esp
  4095f3:	dec    ecx
  4095f4:	into   
  4095f5:	ss stc 
  4095f7:	push   ebx
  4095f8:	jecxz  0x40957e
  4095fa:	or     ecx,DWORD PTR [edx-0xd]
  4095fd:	cld    
  4095fe:	xor    BYTE PTR [esp+edx*8+0x5aa336fb],al
  409605:	fcmovne st,st(0)
  409607:	(bad)  
  409609:	imul   DWORD PTR [eax-0x1940c8d6]
  40960f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409610:	mov    ch,0xde
  409612:	int3   
  409613:	mov    ecx,0x88532069
  409618:	adc    al,0x2b
  40961a:	mov    dl,0x81
  40961c:	icebp  
  40961d:	dec    ebp
  40961e:	pop    esi
  40961f:	lahf   
  409620:	(bad)  
  409621:	sbb    eax,0x7de5fc54
  409626:	add    BYTE PTR [ecx+0x2c],0x39
  40962a:	pop    esp
  40962b:	aaa    
  40962c:	stos   BYTE PTR es:[edi],al
  40962d:	lods   al,BYTE PTR ds:[esi]
  40962e:	and    DWORD PTR [ebp+0x3c0bb44f],0x4fc078bf
  409638:	and    BYTE PTR [eax+0x2ac2c90f],cl
  40963e:	call   0x5e27dc63
  409643:	jae    0x4096c4
  409645:	iret   
  409646:	mov    ds:0xb3a4929a,al
  40964b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40964c:	sub    al,0xf5
  40964e:	daa    
  40964f:	dec    esi
  409650:	jnp    0x4096af
  409652:	sbb    cl,BYTE PTR [edi+0x5]
  409655:	push   edx
  409656:	shr    edi,1
  409658:	adc    bl,BYTE PTR [ecx-0x1f]
  40965b:	ins    BYTE PTR es:[edi],dx
  40965c:	push   edx
  40965d:	xor    al,0x4f
  40965f:	jns    0x4096b3
  409661:	dec    esi
  409662:	outs   dx,DWORD PTR ds:[esi]
  409663:	jmp    0xa91af902
  409668:	push   edx
  409669:	push   eax
  40966a:	or     al,0x2b
  40966c:	xchg   edx,eax
  40966d:	mov    ds:0x600f9fbd,al
  409672:	jl     0x409617
  409674:	bnd jae 0x409670
  409677:	inc    ecx
  409678:	sub    BYTE PTR [ecx-0x33],0x4
  40967c:	inc    edx
  40967d:	ins    BYTE PTR es:[edi],dx
  40967e:	ficom  WORD PTR [edi]
  409680:	inc    ebp
  409681:	je     0x4096e5
  409683:	daa    
  409684:	or     ebp,DWORD PTR [edx-0x4ceb5426]
  40968a:	enter  0xa5d5,0x9d
  40968e:	push   ebp
  40968f:	lods   eax,DWORD PTR ds:[esi]
  409690:	stos   BYTE PTR es:[edi],al
  409691:	sbb    al,0x88
  409693:	inc    ecx
  409694:	push   edx
  409695:	adc    al,0x4e
  409697:	add    al,0xce
  409699:	sub    edx,DWORD PTR [ebx+0x1b]
  40969c:	jle    0x4096c3
  40969e:	fmulp  st(4),st
  4096a0:	(bad)  
  4096a1:	sub    esp,esp
  4096a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a4:	lea    esp,[ebx-0x61]
  4096a7:	stos   DWORD PTR es:[edi],eax
  4096a8:	jl     0x409655
  4096aa:	pavgw  mm2,QWORD PTR [ebx]
  4096ad:	in     eax,dx
  4096ae:	retf   0x21ec
  4096b1:	fwait
  4096b2:	add    eax,0x9b91c756
  4096b7:	lea    ecx,[ebx-0x753af2eb]
  4096bd:	push   edx
  4096be:	jmp    0xfec5c455
  4096c3:	je     0x4096f2
  4096c5:	ins    DWORD PTR es:[edi],dx
  4096c6:	retf   0x6c34
  4096c9:	into   
  4096ca:	jmp    0x718c94e7
  4096cf:	dec    edx
  4096d0:	ror    DWORD PTR [eax],cl
  4096d2:	popf   
  4096d3:	out    dx,al
  4096d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d5:	sbb    BYTE PTR [edx+0x3a8e4cd1],dh
  4096db:	jae    0x4096be
  4096dd:	xlat   BYTE PTR ds:[ebx]
  4096de:	dec    ebx
  4096df:	dec    esp
  4096e0:	ret    0x36f1
  4096e3:	test   dl,bl
  4096e5:	gs mov ch,0xec
  4096e8:	push   edx
  4096e9:	and    DWORD PTR [esi+ecx*4],edx
  4096ec:	sbb    eax,0xd15c5133
  4096f1:	pop    ebx
  4096f2:	mov    bh,0x6
  4096f4:	stos   BYTE PTR es:[edi],al
  4096f5:	pop    esp
  4096f6:	cdq    
  4096f7:	ss push esi
  4096f9:	int    0xf1
  4096fb:	mov    esi,0x82358547
  409700:	ss call 0x22729c1b
  409706:	or     ch,cl
  409708:	retf   0xe576
  40970b:	jp     0x409720
  40970d:	pop    edi
  40970e:	pop    edi
  40970f:	or     dh,bh
  409711:	pop    ss
  409712:	aad    0x7b
  409714:	js     0x349b533e
  40971a:	inc    eax
  40971b:	dec    edi
  40971c:	call   0x8c95:0xc8c580c
  409723:	xchg   edx,eax
  409724:	sbb    ch,BYTE PTR cs:[esi+0x1a]
  409728:	sbb    eax,0x28dde17f
  40972d:	in     eax,dx
  40972e:	das    
  40972f:	ficomp WORD PTR [edi-0x4c]
  409732:	call   0xc6ad:0xd3974595
  409739:	int    0x95
  40973b:	xor    esi,esp
  40973d:	sahf   
  40973e:	daa    
  40973f:	and    ecx,edi
  409741:	cs jb  0x4097a9
  409744:	pop    ds
  409745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409746:	popf   
  409747:	adc    al,0xa6
  409749:	dec    ebp
  40974a:	mov    cl,0x36
  40974c:	int    0x23
  40974e:	pop    esi
  40974f:	mov    edx,0xfb007e7c
  409754:	mov    edx,0x93a0b5e9
  409759:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975b:	sub    al,0xed
  40975d:	add    edx,DWORD PTR [ecx+0x709d9aa7]
  409763:	mov    bl,0x2c
  409765:	outs   dx,BYTE PTR ds:[esi]
  409766:	out    0x7,al
  409768:	sbb    DWORD PTR [esi],esi
  40976a:	mov    edx,0x28fd8543
  40976f:	xchg   edx,eax
  409770:	lods   al,BYTE PTR ds:[esi]
  409771:	leave  
  409772:	loopne 0x409758
  409774:	xor    al,0xd4
  409776:	add    al,BYTE PTR [ebx-0x50]
  409779:	imul   BYTE PTR ds:0x8ad1f322
  40977f:	retf   
  409780:	mov    ch,0xf2
  409782:	dec    edi
  409783:	gs dec esi
  409785:	xor    al,bh
  409787:	adc    BYTE PTR [ecx],cl
  409789:	rol    DWORD PTR [edi+0x50],1
  40978c:	int    0x41
  40978e:	dec    edi
  40978f:	or     eax,0x6a3b1f0d
  409794:	and    BYTE PTR ds:0x8acbca32,ah
  40979a:	leave  
  40979b:	dec    esi
  40979c:	mov    ebx,edi
  40979e:	stc    
  40979f:	ja     0x4097d6
  4097a1:	movq   mm3,QWORD PTR [edx]
  4097a4:	push   eax
  4097a5:	mov    bl,0x26
  4097a7:	mov    ebx,0xda940812
  4097ac:	pop    ebx
  4097ad:	pop    ds
  4097ae:	pop    es
  4097af:	daa    
  4097b0:	xchg   edi,eax
  4097b1:	push   ds
  4097b2:	into   
  4097b3:	xchg   esp,eax
  4097b4:	hlt    
  4097b5:	jbe    0x629e7064
  4097bb:	outs   dx,DWORD PTR ds:[esi]
  4097bc:	push   ebp
  4097bd:	or     DWORD PTR [edx],0xffffff81
  4097c0:	or     ch,al
  4097c2:	sbb    DWORD PTR [ebx+0x6e],0xc8c0d23e
  4097c9:	add    ecx,DWORD PTR [esi+0x3ca89483]
  4097cf:	div    DWORD PTR [eax+0x2c3ed5fa]
  4097d5:	jo     0x4097e6
  4097d7:	lds    ecx,FWORD PTR [edi+0x60a61790]
  4097dd:	xchg   BYTE PTR [eax+0x1e],dl
  4097e0:	xor    al,0xb4
  4097e2:	call   0x46d2:0x35f6f883
  4097e9:	out    0xb3,eax
  4097eb:	outs   dx,DWORD PTR ds:[esi]
  4097ec:	push   ebp
  4097ed:	sar    DWORD PTR [edi],cl
  4097ef:	jne    0x409868
  4097f1:	add    BYTE PTR [ebp+esi*8+0x40],al
  4097f5:	mov    ds:0x9f9eba02,eax
  4097fa:	mov    ah,0xff
  4097fc:	daa    
  4097fd:	lock (bad) 
  4097ff:	cmc    
  409800:	and    BYTE PTR fs:[edi+ecx*1],dh
  409804:	cmp    BYTE PTR [edx+0x248be2c1],bl
  40980a:	xchg   esp,eax
  40980b:	stos   DWORD PTR es:[edi],eax
  40980c:	stc    
  40980d:	push   edi
  40980e:	sbb    edx,DWORD PTR [eax-0x1c7910ba]
  409814:	sbb    BYTE PTR [esi],0xf2
  409817:	push   ss
  409818:	inc    ebp
  409819:	adc    DWORD PTR [edi],edx
  40981b:	sbb    al,ch
  40981d:	es mov ah,0x16
  409820:	pop    ebp
  409821:	pop    es
  409822:	mov    dl,0x8c
  409824:	retf   
  409825:	sahf   
  409826:	jmp    0x4098a2
  409828:	jbe    0x40986c
  40982a:	les    ebp,FWORD PTR [eax-0xc3f5911]
  409830:	fwait
  409831:	aad    0xc4
  409833:	push   eax
  409834:	test   edx,esp
  409836:	jno    0x409846
  409838:	loopne 0x409810
  40983a:	mov    bl,0x9a
  40983c:	xchg   ebp,eax
  40983d:	lds    ebp,FWORD PTR [ecx-0x6f]
  409840:	(bad)  ds:0xc7b125d5
  409846:	jns    0x409889
  409848:	adc    edi,eax
  40984a:	jp     0x409867
  40984c:	and    DWORD PTR [ebp-0x54ef89c7],0x1e096c19
  409856:	(bad)  
  409857:	xchg   DWORD PTR cs:[edi-0x27],eax
  40985b:	jns    0x40989c
  40985d:	lds    eax,FWORD PTR [ebx+ebp*8+0x11d74e25]
  409864:	cmp    bl,BYTE PTR [ecx+ebp*2+0x299e0e70]
  40986b:	xor    bl,BYTE PTR [ecx+0x37]
  40986e:	bound  esi,QWORD PTR [edx+ebx*2]
  409871:	pushf  
  409872:	pop    edi
  409873:	fild   QWORD PTR [ecx-0x259f478b]
  409879:	mov    al,0xb4
  40987b:	enter  0x3670,0xa5
  40987f:	xchg   ebx,eax
  409880:	push   edi
  409881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409882:	mov    ch,0xca
  409884:	adc    esp,DWORD PTR [eax]
  409886:	push   es
  409887:	jnp    0x409872
  409889:	dec    edi
  40988a:	inc    ebx
  40988b:	pop    esp
  40988c:	mov    bh,0x61
  40988e:	dec    edx
  40988f:	jl     0x409852
  409891:	push   es
  409892:	adc    al,0x5c
  409894:	out    dx,eax
  409895:	scas   al,BYTE PTR es:[edi]
  409896:	aaa    
  409897:	sar    BYTE PTR [ebx+0x7c],1
  40989a:	and    al,0x9b
  40989c:	xchg   ebx,eax
  40989d:	push   ebp
  40989e:	iret   
  40989f:	add    ebp,ebx
  4098a1:	jo     0x409920
  4098a3:	js     0x4098d2
  4098a5:	dec    eax
  4098a6:	push   0xffffffd7
  4098a8:	inc    esp
  4098a9:	jnp    0x409895
  4098ab:	imul   esp,DWORD PTR [ebp+0x19b1ef86],0xba9e1cec
  4098b5:	and    edx,DWORD PTR [eax+0x2db6e321]
  4098bb:	add    dl,dl
  4098bd:	dec    ebx
  4098be:	test   BYTE PTR [ecx+0x62],ah
  4098c1:	xchg   edx,eax
  4098c2:	imul   ax,WORD PTR es:0x8fa848c7,0x3b
  4098cb:	or     dh,dh
  4098cd:	popf   
  4098ce:	jne    0x409917
  4098d0:	xchg   edx,eax
  4098d1:	pop    ecx
  4098d2:	rcl    bl,1
  4098d4:	mov    BYTE PTR [edx+0x7d9df417],bh
  4098da:	bound  eax,QWORD PTR [ebp-0x1e]
  4098dd:	adc    DWORD PTR [ebx],0xab2d800f
  4098e3:	push   edx
  4098e4:	inc    eax
  4098e5:	sub    eax,0x7a97bd8e
  4098ea:	sar    DWORD PTR [ebp+0x6],1
  4098ed:	add    cl,BYTE PTR [edi-0x3f6f7d78]
  4098f3:	dec    eax
  4098f4:	inc    eax
  4098f5:	popa   
  4098f6:	dec    ecx
  4098f7:	and    al,0xaa
  4098f9:	mov    ah,0x7a
  4098fb:	in     al,dx
  4098fc:	popf   
  4098fd:	enter  0x614c,0xac
  409901:	test   eax,0x39590892
  409906:	lock add BYTE PTR [ecx],dl
  409909:	daa    
  40990a:	sub    BYTE PTR [eax],dh
  40990c:	pop    bp
  40990e:	pop    ebp
  40990f:	sub    BYTE PTR [ecx],dh
  409911:	xchg   esi,ebx
  409913:	fldcw  WORD PTR [ecx]
  409915:	jae    0x409975
  409917:	cli    
  409918:	add    DWORD PTR [eax],edx
  40991a:	dec    ebx
  40991b:	mov    esp,0x4a302800
  409920:	pop    edx
  409921:	cmp    eax,0x4bd697f4
  409926:	fwait
  409927:	leave  
  409928:	out    0x37,al
  40992a:	arpl   WORD PTR [ebx+0x1f1ec6d4],ax
  409930:	sti    
  409931:	ret    
  409932:	aaa    
  409933:	not    DWORD PTR [edx-0x80]
  409936:	mov    DWORD PTR [ebx],esp
  409938:	in     al,dx
  409939:	out    0xa3,eax
  40993b:	das    
  40993c:	xor    bl,BYTE PTR [edx]
  40993e:	sbb    BYTE PTR [ecx-0x6eaf740c],ah
  409944:	inc    edx
  409945:	or     BYTE PTR [edx+0x2e],dl
  409948:	cli    
  409949:	loope  0x409987
  40994b:	cli    
  40994c:	pop    edi
  40994d:	push   esp
  40994e:	dec    esp
  40994f:	cmp    al,0x3c
  409951:	lds    ebp,FWORD PTR [edi-0x735d2db]
  409957:	dec    ebp
  409958:	and    BYTE PTR [edx],cl
  40995a:	outs   dx,BYTE PTR ds:[esi]
  40995b:	mov    esp,0xe84612be
  409960:	mov    dh,0x66
  409962:	pop    es
  409963:	inc    ebp
  409964:	call   0x701b:0x489b2ca4
  40996b:	jg     0x409967
  40996d:	imul   ecx,DWORD PTR [ecx],0xfffffff3
  409970:	sbb    al,0x8c
  409972:	xor    edx,ebx
  409974:	cmp    dl,BYTE PTR [edx+edx*1]
  409977:	(bad)  
  409979:	jns    0x40999d
  40997b:	lds    ebx,FWORD PTR [ecx]
  40997d:	imul   esp,DWORD PTR [esi+0x40ef5384],0xefa931a1
  409987:	int3   
  409988:	pushf  
  409989:	lods   eax,DWORD PTR ds:[esi]
  40998a:	icebp  
  40998b:	sti    
  40998c:	mov    ecx,0xe78dcb05
  409991:	inc    esi
  409992:	leave  
  409993:	sti    
  409994:	pushf  
  409995:	pop    ds
  409996:	cmp    DWORD PTR [edi+0x884569],esp
  40999c:	inc    ebx
  40999d:	jp     0x4099a3
  40999f:	pop    ss
  4099a0:	cs inc ebx
  4099a2:	jb     0x409a08
  4099a4:	or     al,ah
  4099a6:	push   ds
  4099a7:	iret   
  4099a8:	mov    eax,0x87de5eb3
  4099ad:	(bad)  
  4099ae:	sub    DWORD PTR [edi+0x20],ecx
  4099b1:	dec    eax
  4099b2:	loope  0x40999c
  4099b4:	adc    al,0xd3
  4099b6:	xchg   esp,eax
  4099b7:	sub    dl,BYTE PTR [esi+0x33]
  4099ba:	push   eax
  4099bb:	mov    eax,ds:0xa6c8a707
  4099c0:	xor    esp,DWORD PTR [ebp+eax*2-0x7]
  4099c4:	mov    bh,bl
  4099c6:	mov    al,bh
  4099c8:	(bad)  
  4099c9:	jmp    0x91726fb4
  4099ce:	push   0xb2b7ee04
  4099d3:	xor    DWORD PTR [ebx],esi
  4099d5:	(bad)  
  4099d6:	fmul   QWORD PTR [ecx+0x1f]
  4099d9:	std    
  4099da:	jnp    0x4099bf
  4099dc:	push   cs
  4099dd:	stc    
  4099de:	sti    
  4099df:	cmc    
  4099e0:	inc    esi
  4099e1:	cld    
  4099e2:	jmp    0x409a04
  4099e4:	add    DWORD PTR ds:0x6b2c526b,esi
  4099ea:	fld    QWORD PTR [esi]
  4099ec:	cmp    al,0x62
  4099ee:	ins    BYTE PTR es:[edi],dx
  4099ef:	stc    
  4099f0:	mov    eax,0x3e520d6a
  4099f5:	xor    eax,0x94cc6ac0
  4099fa:	(bad)  
  4099fb:	adc    ah,cl
  4099fd:	inc    ebp
  4099fe:	icebp  
  4099ff:	test   al,0x55
  409a01:	pop    esi
  409a02:	or     DWORD PTR [esi-0x5f],0xa751ec97
  409a09:	push   eax
  409a0a:	inc    ecx
  409a0b:	hlt    
  409a0c:	dec    eax
  409a0d:	jg     0x4099c2
  409a0f:	mov    cl,0x92
  409a11:	pop    ebx
  409a12:	inc    eax
  409a13:	js     0x409a0f
  409a15:	ret    
  409a16:	pop    esi
  409a17:	gs popa 
  409a19:	and    ebp,DWORD PTR [ecx+0x71]
  409a1c:	test   eax,0x653d181f
  409a21:	pop    es
  409a22:	fcmovb st,st(6)
  409a24:	mov    DWORD PTR [ebx+0x76fa122e],ebp
  409a2a:	add    DWORD PTR [ecx],ebp
  409a2c:	mov    WORD PTR ds:0x1fc0b992,?
  409a32:	scas   al,BYTE PTR es:[edi]
  409a33:	std    
  409a34:	cmp    BYTE PTR [ebp+0x1d0f43cb],dh
  409a3a:	cmp    dl,dl
  409a3c:	inc    ebx
  409a3d:	xor    eax,0xe82d88b5
  409a42:	mov    esp,DWORD PTR [ebp+ebp*4-0x58189419]
  409a49:	cs out dx,al
  409a4b:	ins    DWORD PTR es:[edi],dx
  409a4c:	ins    BYTE PTR es:[edi],dx
  409a4d:	adc    bh,BYTE PTR [ecx]
  409a4f:	mov    bh,0x3e
  409a51:	mov    ecx,0x2e282286
  409a56:	clc    
  409a57:	mov    cl,0xec
  409a59:	sub    dl,dh
  409a5b:	nop
  409a5c:	sub    dl,BYTE PTR [edi]
  409a5e:	repz push 0x2d
  409a61:	popa   
  409a62:	mov    esp,0x7cc38d63
  409a67:	xor    edx,ecx
  409a69:	cmp    DWORD PTR ds:0x303a6bef,edx
  409a6f:	das    
  409a70:	fidiv  WORD PTR [ebx]
  409a72:	popf   
  409a73:	jmp    0xe78834f5
  409a78:	dec    ecx
  409a79:	sahf   
  409a7a:	mov    ah,bl
  409a7c:	scas   al,BYTE PTR es:[edi]
  409a7d:	pusha  
  409a7e:	fidivr DWORD PTR [edi+0x7]
  409a81:	ret    0xef94
  409a84:	adc    DWORD PTR [eax+ebx*4+0x49],ebp
  409a88:	fidivr DWORD PTR [esi]
  409a8a:	pushf  
  409a8b:	and    DWORD PTR [eax],ebx
  409a8d:	sub    dh,BYTE PTR [ebx]
  409a8f:	ins    DWORD PTR es:[edi],dx
  409a90:	mov    dl,0x93
  409a92:	xchg   edx,eax
  409a93:	scas   al,BYTE PTR es:[edi]
  409a94:	fisttp DWORD PTR [edx]
  409a96:	pop    esp
  409a97:	arpl   WORD PTR [esi+0x5c],bp
  409a9a:	push   0x5b0149a7
  409a9f:	jmp    0xe509:0x33cdc0b4
  409aa6:	test   eax,0xdb7f3481
  409aab:	fdiv   DWORD PTR [ebx+0x5c]
  409aae:	fcomp  DWORD PTR [edi-0x501c886a]
  409ab4:	jl     0x409b1e
  409ab6:	xor    ah,cl
  409ab8:	or     DWORD PTR [ecx-0x7541087a],0xfa4abc6d
  409ac2:	aad    0x6d
  409ac4:	mov    edx,0xcc78bded
  409ac9:	xor    dl,BYTE PTR [ebx]
  409acb:	lahf   
  409acc:	jp     0x409add
  409ace:	cs inc esi
  409ad0:	or     eax,0xa1e40d2c
  409ad5:	xlat   BYTE PTR ds:[ebx]
  409ad6:	or     eax,0xd124c712
  409adb:	jl     0x409a63
  409add:	fnstcw WORD PTR gs:[esi-0x6d5ad113]
  409ae4:	adc    DWORD PTR [esi+0x283d16c8],ebp
  409aea:	cmc    
  409aeb:	jg     0x409b2c
  409aed:	adc    BYTE PTR [esi+0x6b],0x43
  409af1:	xchg   ebp,eax
  409af2:	xor    ecx,ebx
  409af4:	mov    WORD PTR ds:0xf19f630c,ss
  409afa:	push   esp
  409afb:	cmp    DWORD PTR [edx],edi
  409afd:	mov    ebx,0x4d20cf7e
  409b02:	jb     0x409ae7
  409b04:	xchg   edx,eax
  409b05:	xor    al,BYTE PTR [ebx+0x3f]
  409b08:	test   DWORD PTR [eax-0x50],edx
  409b0b:	repnz push es
  409b0d:	fcomp  DWORD PTR [ebx-0x6c9e5e2c]
  409b13:	xchg   edx,eax
  409b14:	enter  0x3286,0x34
  409b18:	push   edi
  409b19:	jnp    0x409b71
  409b1b:	call   0x53bf:0xe21c1910
  409b22:	lea    ebp,[esi]
  409b24:	(bad)  
  409b25:	inc    ecx
  409b26:	mov    ss,edi
  409b28:	out    dx,eax
  409b29:	mov    BYTE PTR [esi-0x460f75f6],ch
  409b2f:	ret    0xe4eb
  409b32:	out    0xf5,al
  409b34:	sub    al,0xa2
  409b36:	data16 daa 
  409b38:	int3   
  409b39:	(bad)  
  409b3a:	stos   DWORD PTR es:[edi],eax
  409b3b:	mov    dl,0xe3
  409b3d:	xor    al,0x46
  409b3f:	push   esp
  409b40:	xor    al,BYTE PTR [edi+0x54]
  409b43:	fidivr WORD PTR [edx-0x2b]
  409b46:	ret    0x4493
  409b49:	inc    edi
  409b4a:	leave  
  409b4b:	push   ecx
  409b4c:	push   edi
  409b4d:	xchg   esi,eax
  409b4e:	mov    ch,0x46
  409b50:	push   edx
  409b51:	mov    es,WORD PTR [ecx]
  409b53:	sahf   
  409b54:	sub    BYTE PTR [edi+ebx*2-0x13d2df23],al
  409b5b:	aam    0xee
  409b5d:	and    ebp,eax
  409b5f:	fcomp  QWORD PTR [eax-0x2bc6ff4]
  409b65:	or     eax,0xb8eec809
  409b6a:	sti    
  409b6b:	clc    
  409b6c:	mov    DWORD PTR [esi+0xf],0x16f16b38
  409b73:	inc    edi
  409b74:	mov    eax,0xca86011b
  409b79:	push   es
  409b7a:	mov    ah,0x95
  409b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b7d:	aad    0x43
  409b7f:	push   es
  409b80:	enter  0x1551,0xd
  409b84:	add    eax,0xf5fa25c0
  409b89:	mov    dl,0xa7
  409b8b:	sbb    bh,ch
  409b8d:	jae    0x409b9a
  409b8f:	out    0xc4,al
  409b91:	jp     0x409c0a
  409b93:	ins    DWORD PTR es:[edi],dx
  409b94:	pop    edx
  409b95:	push   eax
  409b96:	mov    ah,0xac
  409b98:	cdq    
  409b99:	in     eax,dx
  409b9a:	std    
  409b9b:	mov    ecx,0x8f32736f
  409ba0:	test   DWORD PTR [ebx+esi*4-0x1acf24e8],0xb63e4252
  409bab:	test   esi,esi
  409bad:	push   esp
  409bae:	into   
  409baf:	dec    ebx
  409bb0:	add    bl,BYTE PTR [eax+ebx*4]
  409bb3:	sub    ebp,0xf50d24fa
  409bb9:	inc    ecx
  409bba:	imul   BYTE PTR [ebp+0x3680ed38]
  409bc0:	pop    ebx
  409bc1:	mov    esi,0xae1da7c6
  409bc6:	and    esp,esp
  409bc8:	add    eax,0xf93b8b7b
  409bcd:	pop    ds
  409bce:	sub    eax,0xc619c6b5
  409bd3:	jp     0x409be5
  409bd5:	jle    0x409b6e
  409bd7:	mov    al,ds:0x2bababc3
  409bdc:	adc    DWORD PTR [esi-0x18],eax
  409bdf:	fidivr DWORD PTR fs:[ebx-0x115dad0f]
  409be6:	das    
  409be7:	dec    ecx
  409be8:	mov    bl,0xcd
  409bea:	add    edi,DWORD PTR [ebx+ebp*2]
  409bed:	mov    esp,0xb3db75fc
  409bf2:	mov    ds:0x676acf3b,al
  409bf7:	ror    BYTE PTR [ebx-0x695f030a],cl
  409bfd:	pop    esi
  409bfe:	jbe    0x409b84
  409c00:	or     ecx,DWORD PTR fs:[ebx-0x5ec20621]
  409c07:	jb     0x409bf3
  409c09:	test   DWORD PTR [ecx],edx
  409c0b:	gs in  eax,dx
  409c0d:	fild   DWORD PTR [ebp-0x15]
  409c10:	fstp   TBYTE PTR [ebp+0x79]
  409c13:	lods   al,BYTE PTR ds:[esi]
  409c14:	test   eax,0x9fa99c47
  409c19:	xchg   esp,eax
  409c1a:	jle    0x409bfc
  409c1c:	push   ebx
  409c1d:	es jp  0x409c1d
  409c20:	sbb    DWORD PTR [ebp-0x7f10618],edi
  409c26:	adc    al,BYTE PTR [esi+0x670347a1]
  409c2c:	mov    al,0x2e
  409c2e:	call   0xd673:0xc9efcb3b
  409c35:	xor    BYTE PTR [ecx+edx*4-0x4a],bl
  409c39:	not    BYTE PTR [edx+0x243566e5]
  409c3f:	fcom   QWORD PTR [edx]
  409c41:	fbld   TBYTE PTR [ebx]
  409c43:	test   eax,0x7d493dcb
  409c48:	pop    esp
  409c49:	pop    edi
  409c4a:	mov    ds:0xe92a2312,al
  409c4f:	loop   0x409ca2
  409c51:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  409c53:	rcr    DWORD PTR ds:0x8bc10126,cl
  409c59:	add    al,0x6d
  409c5b:	out    0x4c,eax
  409c5d:	pop    eax
  409c5e:	test   eax,0x6db71060
  409c63:	lahf   
  409c64:	dec    eax
  409c65:	clc    
  409c66:	loop   0x409cc1
  409c68:	pushf  
  409c69:	test   eax,0x75841ee1
  409c6e:	mov    edx,0xedf90fe6
  409c73:	xor    al,0xf5
  409c75:	mov    bh,0x2c
  409c77:	ret    
  409c78:	fadd   st,st(0)
  409c7a:	cs pop edi
  409c7c:	push   edx
  409c7d:	xor    BYTE PTR [ecx],cl
  409c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c80:	jno    0x409ca2
  409c82:	ins    BYTE PTR es:[edi],dx
  409c83:	rcr    eax,cl
  409c85:	in     al,0xf8
  409c87:	hlt    
  409c88:	inc    edx
  409c89:	call   0x8e805a9a
  409c8e:	mov    dh,0x6e
  409c90:	inc    esp
  409c91:	inc    edi
  409c92:	ins    BYTE PTR es:[edi],dx
  409c93:	into   
  409c94:	or     edi,ebp
  409c96:	xchg   bl,dh
  409c98:	adc    DWORD PTR [esi+0xa],esp
  409c9b:	jnp    0x409ca3
  409c9d:	ret    0x7d7a
  409ca0:	and    al,0xb6
  409ca2:	add    bl,al
  409ca4:	fsub   QWORD PTR [ebx+eax*8]
  409ca7:	add    ebp,DWORD PTR [ecx-0x53]
  409caa:	and    al,BYTE PTR ds:[edx-0x47]
  409cae:	test   eax,0x5c01a0f1
  409cb3:	div    DWORD PTR [edx+0x562281b6]
  409cb9:	inc    edx
  409cba:	mov    eax,ds:0xeae04180
  409cbf:	dec    eax
  409cc0:	cmp    DWORD PTR ds:0x16900de5,eax
  409cc6:	js     0x409c81
  409cc8:	sub    eax,0xecc3212b
  409ccd:	push   eax
  409cce:	add    al,0x88
  409cd0:	call   0xfff640a8
  409cd5:	or     edx,ebx
  409cd7:	add    BYTE PTR [ebp+0x1f],bl
  409cda:	cld    
  409cdb:	add    DWORD PTR ds:0x13834c58,esp
  409ce1:	sbb    DWORD PTR [eax],0x92d6699
  409ce7:	call   0x4106:0xa32f79fb
  409cee:	stc    
  409cef:	jmp    0x54d9:0xb28abbba
  409cf6:	pop    edx
  409cf7:	(bad)  
  409cf8:	push   edx
  409cf9:	rol    eax,1
  409cfb:	popf   
  409cfc:	dec    esi
  409cfd:	lods   eax,DWORD PTR ds:[esi]
  409cfe:	push   ecx
  409cff:	sbb    DWORD PTR [bx+di+0x785],esp
  409d04:	mov    ah,0x12
  409d06:	or     ebx,DWORD PTR [ebp+eax*1-0x42]
  409d0a:	cmp    al,0x5b
  409d0c:	fidivr WORD PTR [edx-0x5dae115a]
  409d12:	push   0xffffffcf
  409d14:	je     0x409cfb
  409d16:	fistp  DWORD PTR [ebp+0x1]
  409d19:	repz std 
  409d1b:	push   ebx
  409d1c:	jb     0x409d59
  409d1e:	into   
  409d1f:	popa   
  409d20:	(bad)  
  409d21:	out    dx,al
  409d22:	je     0x409d0f
  409d24:	mov    eax,ds:0x126ca582
  409d29:	ins    DWORD PTR es:[edi],dx
  409d2a:	lds    eax,FWORD PTR [edx-0x2c]
  409d2d:	push   ds
  409d2e:	cmp    ah,BYTE PTR [ebx+0x95ee594]
  409d34:	push   ds
  409d35:	ror    BYTE PTR [esi],cl
  409d37:	cld    
  409d38:	(bad)  
  409d39:	loop   0x409d4a
  409d3b:	data16 jne 0x409d33
  409d3e:	xor    DWORD PTR [ecx+0x12],ebp
  409d41:	mov    eax,0x5a40e30c
  409d46:	call   0x786f8e91
  409d4b:	mov    dh,0xf2
  409d4d:	imul   edx,DWORD PTR [ebx+0x4601b39e],0xffffffa0
  409d54:	sbb    BYTE PTR [esi],dh
  409d56:	xchg   esp,eax
  409d57:	sahf   
  409d58:	inc    esi
  409d59:	pusha  
  409d5a:	push   esp
  409d5b:	daa    
  409d5c:	xchg   ecx,eax
  409d5d:	iret   
  409d5e:	xchg   esp,eax
  409d5f:	sub    eax,0x9d541790
  409d64:	mov    ds:0x22506aca,eax
  409d69:	fs and eax,0x70a2fe2e
  409d6f:	add    DWORD PTR [edi+0x53],edx
  409d72:	inc    edi
  409d73:	daa    
  409d74:	fs or  al,0x48
  409d77:	sub    BYTE PTR ds:0x5833aaa1,dh
  409d7d:	inc    esp
  409d7e:	inc    ebp
  409d7f:	scas   eax,DWORD PTR es:[edi]
  409d80:	pop    edi
  409d81:	xor    esi,esp
  409d83:	inc    esp
  409d84:	push   0xffffffe2
  409d86:	int    0xba
  409d88:	icebp  
  409d89:	data16 xor bl,BYTE PTR [esi]
  409d8c:	or     dl,BYTE PTR [esi-0x18]
  409d8f:	aad    0x3a
  409d91:	pop    ds
  409d92:	xor    DWORD PTR [esi+0x6e],0x332759a3
  409d99:	mov    DWORD PTR [edx-0x2962979b],esp
  409d9f:	scas   eax,DWORD PTR es:[edi]
  409da0:	mov    al,0x54
  409da2:	sbb    al,0x51
  409da4:	xor    cl,dl
  409da6:	push   ecx
  409da7:	xor    BYTE PTR [ebx],cl
  409da9:	or     al,0x9b
  409dab:	dec    ebx
  409dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dad:	push   edi
  409dae:	sub    esp,edi
  409db0:	mov    ebp,DWORD PTR [eax]
  409db2:	jbe    0x409d35
  409db4:	or     ebp,esp
  409db6:	jno    0x409ddf
  409db8:	adc    al,0x63
  409dba:	ret    0xa666
  409dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dbe:	sbb    ebp,DWORD PTR [ebx+0x76]
  409dc1:	ficom  DWORD PTR [ecx+0x2dc0bbe6]
  409dc7:	inc    ebp
  409dc8:	daa    
  409dc9:	aad    0xf6
  409dcb:	mov    al,0xc1
  409dcd:	iret   
  409dce:	mov    BYTE PTR [ecx+0x43],0x1a
  409dd2:	shl    DWORD PTR [esp+eax*8+0xc],1
  409dd6:	aad    0x60
  409dd8:	inc    esi
  409dd9:	sub    DWORD PTR [esi+0x409b185f],ebx
  409ddf:	ss out dx,al
  409de1:	outs   dx,BYTE PTR ds:[esi]
  409de2:	out    dx,eax
  409de3:	xchg   DWORD PTR [edx+0x79],edx
  409de6:	dec    DWORD PTR [ecx]
  409de8:	fsub   DWORD PTR [edi-0x7c]
  409deb:	mov    dh,dl
  409ded:	rcl    DWORD PTR [edi-0x44281e6c],cl
  409df3:	push   ebx
  409df4:	sbb    al,0x14
  409df6:	jb     0x409de8
  409df8:	into   
  409df9:	call   0x979c:0x987b0a9b
  409e00:	loopne 0x409dd8
  409e02:	inc    edx
  409e03:	clc    
  409e04:	xchg   ebx,eax
  409e05:	call   0xda4b:0x5740c088
  409e0c:	and    DWORD PTR [eax-0x22],0xedc3f108
  409e13:	arpl   WORD PTR [ebx-0x765d4efb],ax
  409e19:	scas   eax,DWORD PTR es:[edi]
  409e1a:	jns    0x409e9a
  409e1c:	int3   
  409e1d:	inc    eax
  409e1e:	mov    ds:0x8eb19468,al
  409e23:	sti    
  409e24:	xor    eax,0x408f9adc
  409e29:	(bad)  
  409e2a:	(bad)  
  409e2b:	or     dl,al
  409e2d:	sbb    eax,0x3e3ff249
  409e32:	mov    ebx,0xd946570a
  409e37:	jnp    0x409eaa
  409e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e3a:	sbb    BYTE PTR [edx+0x67],ch
  409e3d:	test   BYTE PTR [edi-0x3d],al
  409e40:	push   edi
  409e41:	jmp    0xcd90:0xa0f1cd20
  409e48:	ins    DWORD PTR es:[edi],dx
  409e49:	jo     0x409e8e
  409e4b:	or     DWORD PTR [edi],esp
  409e4d:	out    dx,al
  409e4e:	ins    DWORD PTR es:[edi],dx
  409e4f:	ds pusha 
  409e51:	jbe    0x409eba
  409e53:	(bad)  
  409e54:	push   ss
  409e55:	and    eax,0x9ef308ef
  409e5a:	cdq    
  409e5b:	jle    0x409ebc
  409e5d:	and    eax,0xdbaa3e29
  409e62:	call   0x92e47552
  409e67:	mov    cl,0xf7
  409e69:	fist   DWORD PTR [esi+0x6df7c946]
  409e6f:	jbe    0x409eda
  409e71:	imul   ebp,DWORD PTR cs:0xcd967cbd,0x6b
  409e79:	inc    edi
  409e7a:	lods   eax,DWORD PTR ds:[esi]
  409e7b:	(bad)  
  409e7d:	mov    ds:0x8ee066ad,al
  409e82:	mov    ch,0xe5
  409e84:	mov    edi,DWORD PTR [edx-0x22296da8]
  409e8a:	pop    ss
  409e8b:	jmp    0x409e0f
  409e8d:	adc    al,0x3f
  409e8f:	mov    eax,0x88f9f308
  409e94:	jecxz  0x409e1e
  409e96:	mov    al,ds:0x4e508527
  409e9b:	mov    ecx,0xd63571f1
  409ea0:	adc    eax,0xbad51b0a
  409ea5:	aaa    
  409ea6:	mov    edx,0x1d5d4e83
  409eab:	or     al,0x5b
  409ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eae:	enter  0x157b,0x7
  409eb2:	xor    eax,0x4a1c41bd
  409eb7:	mov    al,0x51
  409eb9:	outs   dx,DWORD PTR ds:[esi]
  409eba:	in     al,0xc0
  409ebc:	jmp    0x82b8ce92
  409ec1:	cli    
  409ec2:	mov    dl,0xcc
  409ec4:	xchg   BYTE PTR [esi-0x710be7e8],ch
  409eca:	adc    bl,BYTE PTR [edx+0x1906f0a3]
  409ed0:	mov    esi,0xea95ec97
  409ed5:	xchg   ecx,eax
  409ed6:	es sbb eax,0xa414459
  409edc:	and    eax,DWORD PTR [eax+0x57]
  409edf:	pop    es
  409ee0:	adc    al,BYTE PTR [edi-0x78]
  409ee3:	neg    DWORD PTR [eax-0x2ba865ce]
  409ee9:	xor    BYTE PTR [ebx],cl
  409eeb:	ds push ecx
  409eed:	jge    0x409f4f
  409eef:	mov    DWORD PTR [esi+edx*4-0x4f61465b],0x1abd487e
  409efa:	mov    DWORD PTR [edx-0x5ea4d565],edx
  409f00:	retf   0x6ed2
  409f03:	xchg   esp,eax
  409f04:	pop    ebp
  409f05:	adc    al,0x19
  409f07:	jmp    DWORD PTR [esi-0x7b]
  409f0a:	sbb    ah,BYTE PTR [esi+0x12]
  409f0d:	mov    ebx,0x21c2a0d9
  409f12:	push   esp
  409f13:	xor    cl,BYTE PTR [ecx+0x10]
  409f16:	xchg   ecx,eax
  409f17:	sub    esi,edi
  409f19:	es xor dh,ah
  409f1c:	pop    esp
  409f1d:	xchg   esp,eax
  409f1e:	neg    DWORD PTR [ebx]
  409f20:	inc    eax
  409f21:	sub    ebx,eax
  409f23:	psubusw mm7,QWORD PTR [ebx-0x5a9b0cfc]
  409f2a:	call   0x682b:0x1fd8d63d
  409f31:	mov    ebp,DWORD PTR [edi-0x29]
  409f34:	or     DWORD PTR [ebx+0x19],esi
  409f37:	out    dx,eax
  409f38:	inc    edx
  409f39:	clc    
  409f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3b:	mov    edx,0x7b1fb2a0
  409f40:	jl     0x409edb
  409f42:	push   ecx
  409f43:	(bad)  
  409f44:	pop    eax
  409f45:	cmp    eax,DWORD PTR [ecx+0x4e6fddf9]
  409f4b:	sahf   
  409f4c:	pop    ss
  409f4d:	mov    dl,0x88
  409f4f:	cmpxchg DWORD PTR [ebx-0x3dc19cbd],eax
  409f56:	cmp    bh,BYTE PTR [ecx+0x54]
  409f59:	or     bl,BYTE PTR [ecx]
  409f5b:	stc    
  409f5c:	mov    ebp,0x518df47c
  409f61:	push   ebx
  409f62:	or     al,0x20
  409f64:	lods   al,BYTE PTR ds:[esi]
  409f65:	mov    bl,0x92
  409f67:	mov    WORD PTR [ebp-0x6d],?
  409f6a:	mov    ecx,0xa902dd2d
  409f6f:	int3   
  409f70:	push   ecx
  409f71:	xchg   DWORD PTR [eax+0x3d60dd35],esi
  409f77:	push   edx
  409f78:	ret    
  409f79:	out    0x60,al
  409f7b:	inc    esi
  409f7c:	loopne 0x409efe
  409f7e:	ds adc al,0xa4
  409f81:	gs test eax,0xbd068b23
  409f87:	popa   
  409f88:	into   
  409f89:	and    edx,DWORD PTR [ecx+0x16]
  409f8c:	pop    edi
  409f8d:	push   esp
  409f8e:	jo     0x409f18
  409f90:	mov    ah,0x94
  409f92:	xchg   DWORD PTR [ebx],ebx
  409f94:	into   
  409f95:	leave  
  409f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f97:	push   es
  409f98:	ds dec eax
  409f9a:	pushf  
  409f9b:	cmp    DWORD PTR [ebx],0x29
  409f9e:	dec    eax
  409f9f:	pusha  
  409fa0:	push   esp
  409fa1:	mov    ah,0xfa
  409fa3:	dec    esi
  409fa4:	add    BYTE PTR [esi],al
  409fa6:	xor    BYTE PTR [ebp-0x672481dc],0xe2
  409fad:	mov    dh,0xab
  409faf:	inc    edx
  409fb0:	sub    al,0x18
  409fb3:	ret    0x89ca
  409fb6:	push   0xffffffc3
  409fb8:	stos   BYTE PTR es:[edi],al
  409fb9:	mov    dl,0xe1
  409fbb:	pop    esp
  409fbc:	inc    edx
  409fbd:	int3   
  409fbe:	out    dx,eax
  409fbf:	test   eax,0xe3dc118d
  409fc4:	bound  ebx,QWORD PTR [eax+0x540b82e1]
  409fca:	fcom   QWORD PTR [ebp-0x41]
  409fcd:	dec    ecx
  409fce:	cmp    DWORD PTR [ebx-0x7d2295df],esi
  409fd4:	mov    ch,0x4d
  409fd6:	(bad)  
  409fd7:	add    al,0xd3
  409fd9:	shl    DWORD PTR ds:0xe3c45afe,1
  409fdf:	into   
  409fe0:	sahf   
  409fe1:	and    ch,ch
  409fe3:	inc    ebp
  409fe4:	mov    esp,0xe7171aeb
  409fe9:	dec    esp
  409fea:	ret    0xd427
  409fed:	ja     0x40a02f
  409fef:	aas    
  409ff0:	pop    esp
  409ff1:	pop    edx
  409ff2:	push   ebx
  409ff3:	jge    0x409fe9
  409ff5:	cmp    DWORD PTR [ebp+0x1fcb7649],0x7cf7408c
  409fff:	mov    edx,0x67cbd84
  40a004:	inc    esi
  40a005:	imul   ebx,DWORD PTR [ecx-0x65b6fcb],0x561aaa4f
  40a00f:	pop    ebp
  40a010:	out    dx,al
  40a011:	popf   
  40a012:	scas   eax,DWORD PTR es:[edi]
  40a013:	adc    ch,BYTE PTR ds:0x7cda4fdd
  40a019:	arpl   WORD PTR [edx+0x571d889d],bp
  40a01f:	sub    ecx,DWORD PTR [eax-0x1f]
  40a022:	ret    0x2f9a
  40a025:	popf   
  40a026:	push   edx
  40a027:	fstp   st(7)
  40a029:	xchg   ebp,eax
  40a02a:	pusha  
  40a02b:	mov    al,ds:0x471a301e
  40a030:	ret    
  40a031:	cmc    
  40a032:	jp     0x409fe4
  40a034:	cmp    BYTE PTR [ebx-0x54],cl
  40a037:	ss jnp 0x40a08f
  40a03a:	outs   dx,DWORD PTR ds:[esi]
  40a03b:	push   esp
  40a03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a03d:	mov    esi,0x8a21c455
  40a042:	test   DWORD PTR [edi+0x1e9b36d7],edx
  40a048:	fcomp  QWORD PTR [eax*4+0x6bf8b8b2]
  40a04f:	test   eax,0xc8153ec6
  40a054:	add    DWORD PTR [esi-0x11],eax
  40a057:	stos   DWORD PTR es:[edi],eax
  40a058:	test   DWORD PTR [ebp-0x32b232d1],esp
  40a05e:	loope  0x40a09b
  40a060:	(bad)  
  40a061:	sbb    BYTE PTR [edi-0x20fa1c41],0x87
  40a068:	sti    
  40a069:	mov    ah,cl
  40a06b:	dec    ecx
  40a06c:	or     eax,0x26ee2245
  40a071:	xchg   ecx,eax
  40a072:	add    DWORD PTR [edx],esi
  40a074:	enter  0x8e0c,0x82
  40a078:	jmp    0x2aa08a46
  40a07d:	push   ebp
  40a07e:	xchg   ebx,eax
  40a07f:	and    ebx,DWORD PTR [edi-0x6d43562a]
  40a085:	ficom  WORD PTR [edx]
  40a087:	mov    esp,0x864b33f2
  40a08c:	push   ecx
  40a08d:	imul   bl
  40a08f:	test   al,0x39
  40a091:	scas   al,BYTE PTR es:[edi]
  40a092:	jecxz  0x40a01b
  40a094:	sub    eax,eax
  40a096:	pop    ebx
  40a097:	cmc    
  40a098:	push   ds
  40a099:	nop
  40a09a:	mov    bl,0xfd
  40a09c:	sbb    al,0x5f
  40a09e:	jnp    0x40a0e6
  40a0a0:	and    DWORD PTR ds:0x53841a9b,ebx
  40a0a6:	push   esp
  40a0a7:	jae    0x40a07d
  40a0a9:	pop    ss
  40a0aa:	ins    BYTE PTR es:[edi],dx
  40a0ab:	dec    eax
  40a0ac:	out    0xc4,eax
  40a0ae:	ret    
  40a0af:	cmp    BYTE PTR [ecx],bl
  40a0b1:	test   DWORD PTR [esi],eax
  40a0b3:	adc    BYTE PTR [eax-0x3e],al
  40a0b6:	push   edi
  40a0b7:	jmp    0x2ab76f4f
  40a0bc:	dec    esp
  40a0bd:	jmp    ecx
  40a0bf:	adc    dl,BYTE PTR [edi-0x28]
  40a0c2:	xchg   ebx,eax
  40a0c3:	sbb    DWORD PTR [edi+edi*2],eax
  40a0c6:	and    al,0x8d
  40a0c8:	sbb    eax,0xa26029e7
  40a0cd:	imul   ebp,DWORD PTR [esp+ebx*1+0x4a],0x7
  40a0d2:	ins    BYTE PTR es:[edi],dx
  40a0d3:	leave  
  40a0d4:	sub    eax,DWORD PTR [edi]
  40a0d6:	xorps  xmm6,XMMWORD PTR [esi]
  40a0d9:	gs xchg bh,ch
  40a0dc:	lahf   
  40a0dd:	(bad)  
  40a0de:	cmc    
  40a0df:	push   esp
  40a0e0:	int    0xa7
  40a0e2:	xchg   edi,eax
  40a0e3:	mov    edi,DWORD PTR [edx+0x17]
  40a0e6:	adc    edx,DWORD PTR [eax+ebx*2+0x78]
  40a0ea:	out    dx,al
  40a0eb:	xchg   edi,eax
  40a0ec:	es inc edx
  40a0ee:	(bad)  
  40a0ef:	out    dx,al
  40a0f0:	xchg   ecx,eax
  40a0f1:	mov    dl,0xb5
  40a0f3:	sub    esi,esp
  40a0f5:	std    
  40a0f6:	imul   ecx,DWORD PTR [ebx+edx*1],0x3634eed9
  40a0fd:	test   eax,0x93bb510c
  40a102:	jle    0x40a108
  40a104:	pop    ebp
  40a105:	stc    
  40a106:	xchg   edx,eax
  40a107:	das    
  40a108:	and    ebx,edx
  40a10a:	stos   DWORD PTR es:[edi],eax
  40a10b:	bound  eax,QWORD PTR [edi+0x42]
  40a10e:	or     eax,0x21bc1cf0
  40a113:	push   ecx
  40a114:	jge    0x40a13e
  40a116:	jmp    0xffff:0xdba7b5da
  40a11d:	frstor [edx]
  40a11f:	daa    
  40a120:	xor    ecx,DWORD PTR [esi+0x608492d3]
  40a126:	sub    DWORD PTR [ebx],eax
  40a128:	mov    cl,0xa9
  40a12a:	adc    edi,DWORD PTR [edx+0x7d]
  40a12d:	push   ebx
  40a12e:	sti    
  40a12f:	and    BYTE PTR [ecx],bl
  40a131:	dec    esi
  40a132:	or     bh,dh
  40a134:	in     eax,0x10
  40a136:	inc    ebx
  40a137:	mov    edi,0xfb9957ce
  40a13c:	ret    0xf36d
  40a13f:	shl    DWORD PTR [esi+0xe],0x98
  40a143:	jo     0x40a16d
  40a145:	stc    
  40a146:	cmp    al,bh
  40a148:	hlt    
  40a149:	hlt    
  40a14a:	scas   al,BYTE PTR es:[edi]
  40a14b:	add    cl,BYTE PTR [eax]
  40a14d:	call   FWORD PTR ds:0x2d3c4bae
  40a153:	push   es
  40a154:	mov    ds:0x69c1531f,eax
  40a159:	(bad)  
  40a15a:	(bad)  [ecx-0x1cf6a959]
  40a160:	and    eax,0x9028524b
  40a165:	mov    esi,0xe64a5ef0
  40a16a:	scas   al,BYTE PTR es:[edi]
  40a16b:	add    BYTE PTR [esi+0x3382e02],dh
  40a171:	dec    edi
  40a172:	scas   al,BYTE PTR es:[edi]
  40a173:	ja     0x40a1ac
  40a175:	mov    eax,0xa9d05426
  40a17a:	inc    esp
  40a17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a17c:	cs and eax,0x2897504b
  40a182:	and    DWORD PTR [eax],ecx
  40a184:	fild   WORD PTR [eax+0x75]
  40a187:	push   esp
  40a188:	jmp    0x40a163
  40a18a:	push   es
  40a18b:	dec    ebp
  40a18c:	sbb    BYTE PTR [ecx-0x1f5bc848],dl
  40a192:	loopne 0x40a142
  40a194:	xor    ax,0xe2fc
  40a198:	aaa    
  40a199:	add    al,0x86
  40a19b:	cmp    al,0x95
  40a19d:	lods   eax,DWORD PTR ds:[esi]
  40a19e:	imul   ecx,DWORD PTR [ebp-0x7d],0xe365835b
  40a1a5:	pushw  ds
  40a1a7:	push   ss
  40a1a8:	stos   BYTE PTR es:[edi],al
  40a1a9:	mov    esi,0xefd2f71a
  40a1ae:	mov    ebx,0x66259b52
  40a1b3:	dec    ecx
  40a1b4:	in     al,0x71
  40a1b6:	jg     0x40a1f2
  40a1b8:	push   edx
  40a1b9:	and    ah,BYTE PTR [esi+0x20]
  40a1bc:	adc    al,0x4
  40a1be:	loope  0x40a19a
  40a1c0:	in     eax,0x92
  40a1c2:	add    eax,0x62f30064
  40a1c7:	xchg   ebp,eax
  40a1c8:	push   DWORD PTR [ebx]
  40a1ca:	addr16 out 0x50,al
  40a1cd:	fsubr  st(0),st
  40a1cf:	ds add al,0x7e
  40a1d2:	and    dl,ah
  40a1d4:	cwde   
  40a1d5:	retf   
  40a1d6:	xchg   BYTE PTR [esi+eax*2],ch
  40a1d9:	dec    eax
  40a1da:	xchg   edx,eax
  40a1dc:	mov    al,0x89
  40a1de:	inc    ebp
  40a1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e0:	mov    ecx,0x9c4d878a
  40a1e5:	fild   DWORD PTR [ebx+edx*8]
  40a1e8:	aam    0xcf
  40a1ea:	cmp    BYTE PTR [ebx-0x6cdaeb04],al
  40a1f0:	fwait
  40a1f1:	inc    eax
  40a1f2:	(bad)  
  40a1f4:	cs lahf 
  40a1f6:	emms   
  40a1f8:	add    eax,DWORD PTR [ecx]
  40a1fa:	iret   
  40a1fb:	cmp    eax,0xdf916f28
  40a200:	xchg   esp,eax
  40a201:	inc    esp
  40a202:	push   ds
  40a203:	adc    bh,BYTE PTR [edx-0x5c22f315]
  40a209:	lock ja 0x40a236
  40a20c:	sbb    al,0x6f
  40a20e:	rol    DWORD PTR [ecx],0x1a
  40a211:	jno    0x40a1d6
  40a213:	jmp    0xe33b74a2
  40a218:	das    
  40a219:	popf   
  40a21a:	xchg   esp,eax
  40a21b:	sub    esp,esi
  40a21d:	push   edi
  40a21e:	lahf   
  40a21f:	shr    BYTE PTR [ebx],1
  40a221:	jmp    0x75bfc8cc
  40a226:	cmp    DWORD PTR [edx-0x5e],ebp
  40a229:	and    DWORD PTR [esi-0x41],edi
  40a22c:	jle    0x40a1d7
  40a22e:	and    DWORD PTR [ebx-0x49093ccc],edi
  40a234:	idiv   BYTE PTR [eax]
  40a236:	jne    0x40a2b0
  40a238:	cld    
  40a239:	inc    ecx
  40a23a:	fidiv  WORD PTR [ebx+ecx*8-0x1a]
  40a23e:	push   ds
  40a23f:	inc    esp
  40a240:	(bad)  
  40a241:	xchg   edx,eax
  40a242:	retf   
  40a243:	arpl   WORD PTR [ecx-0x4a],cx
  40a246:	add    DWORD PTR [esi],ebx
  40a248:	dec    edx
  40a249:	and    bl,dl
  40a24b:	arpl   WORD PTR [ebx-0x4b4a0d14],bx
  40a251:	xchg   ecx,eax
  40a252:	inc    edx
  40a253:	das    
  40a254:	es inc eax
  40a256:	push   eax
  40a257:	scas   eax,DWORD PTR es:[edi]
  40a258:	fmul   QWORD PTR [ebp-0x1a3bc77c]
  40a25e:	add    BYTE PTR fs:[ebx-0x6ccf383],cl
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	mov    eax,0xecd205c
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	pop    esp
  40abe4:	popa   
  40abe5:	outs   dx,BYTE PTR ds:[esi]
  40abe6:	icebp  
  40abe7:	ret    
  40abe8:	and    DWORD PTR [ecx],eax
  40abea:	(bad)  
  40abeb:	sub    BYTE PTR [edi],bl
  40abed:	push   ebx
  40abee:	mov    ds:0xc2320c15,al
  40abf3:	pop    es
  40abf4:	inc    esp
  40abf5:	cmp    al,0x59
  40abf7:	sub    DWORD PTR [edi],0x8e071cb6
  40abfd:	ror    ebp,cl
  40abff:	scas   al,BYTE PTR es:[edi]
  40ac00:	adc    BYTE PTR [esi],ch
  40ac02:	cdq    
  40ac03:	mov    ecx,0x2f2b7e38
  40ac08:	ja     0x40ac5f
  40ac0a:	addr16 adc ah,0xcf
  40ac0e:	test   eax,0xc1097490
  40ac13:	in     eax,dx
  40ac14:	sbb    bh,BYTE PTR [edi]
  40ac16:	arpl   WORD PTR [esi-0x5f3cce21],di
  40ac1c:	retf   0x5626
  40ac1f:	xchg   DWORD PTR [edx-0x6d],esp
  40ac22:	mov    ebp,0xe99b3ae
  40ac27:	xor    BYTE PTR [esi+0x58dad78d],ah
  40ac2d:	push   ebx
  40ac2e:	enter  0xce0f,0x6b
  40ac32:	mov    al,0xb0
  40ac34:	cmp    DWORD PTR [eax],ebp
  40ac36:	sub    BYTE PTR [eax+0x7727cf94],0xad
  40ac3d:	(bad)  
  40ac3e:	aad    0x96
  40ac40:	xchg   ecx,eax
  40ac41:	push   ds
  40ac42:	xor    esi,DWORD PTR ds:0x49fbf53c
  40ac48:	aas    
  40ac49:	xchg   al,ch
  40ac4b:	sbb    ch,BYTE PTR [edx-0x28]
  40ac4e:	scas   eax,DWORD PTR es:[edi]
  40ac4f:	sub    dl,BYTE PTR [edi-0x30]
  40ac52:	jl     0x40ac67
  40ac54:	aaa    
  40ac55:	hlt    
  40ac56:	jns    0x40ac3c
  40ac58:	mov    edx,DWORD PTR [edx+0x13]
  40ac5b:	fstp   DWORD PTR [ebx+0x6b]
  40ac5e:	jbe    0x40acd9
  40ac60:	jbe    0x40ac1e
  40ac62:	xchg   ebx,eax
  40ac63:	add    DWORD PTR [eax],ebp
  40ac65:	and    cl,BYTE PTR [eax-0x60]
  40ac68:	inc    ebp
  40ac69:	stos   BYTE PTR es:[edi],al
  40ac6a:	out    dx,al
  40ac6b:	xor    edx,DWORD PTR [edx-0x13dffb9f]
  40ac71:	loop   0x40acb7
  40ac73:	aaa    
  40ac74:	dec    esp
  40ac75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac76:	(bad)  
  40ac77:	sbb    dl,al
  40ac79:	out    dx,al
  40ac7a:	xor    eax,0x53f8aaea
  40ac7f:	popf   
  40ac80:	jle    0x40acd2
  40ac82:	fadd   DWORD PTR [esi-0x1dae36ea]
  40ac88:	sub    DWORD PTR [edx],ebp
  40ac8a:	dec    ebx
  40ac8b:	push   edi
  40ac8c:	jnp    0x40acc7
  40ac8e:	out    dx,eax
  40ac8f:	pusha  
  40ac90:	imul   ebx,DWORD PTR gs:[edx-0x6c],0x9d51285e
  40ac98:	fld    DWORD PTR [edi+0x55]
  40ac9b:	fnsave [esi]
  40ac9d:	or     eax,0xfa690add
  40aca2:	push   es
  40aca3:	loope  0x40acd3
  40aca5:	xchg   BYTE PTR [ebx-0x7d],ch
  40aca8:	cwde   
  40aca9:	pop    ecx
  40acaa:	test   al,0x48
  40acac:	push   ds
  40acad:	mul    DWORD PTR ds:0x1a4eb66a
  40acb3:	add    eax,0xe5adf71b
  40acb8:	outs   dx,BYTE PTR ds:[esi]
  40acb9:	popa   
  40acba:	ror    BYTE PTR [edx+ebp*1+0x2cbddbd8],cl
  40acc1:	in     eax,dx
  40acc2:	outs   dx,DWORD PTR ds:[esi]
  40acc3:	xor    ebp,DWORD PTR [ebx]
  40acc5:	xchg   DWORD PTR [eax-0x6b13ee9a],esi
  40accb:	jle    0x40ad4b
  40accd:	jae    0x40ac56
  40accf:	and    eax,0xa0ca576
  40acd4:	mov    ah,0x59
  40acd6:	popa   
  40acd7:	xchg   edi,eax
  40acd8:	mov    WORD PTR [edi],ds
  40acda:	stc    
  40acdb:	popf   
  40acdc:	mov    ecx,DWORD PTR [edx]
  40acde:	dec    ebx
  40acdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ace0:	xor    ah,BYTE PTR gs:[ebx-0x21d79f2]
  40ace7:	imul   eax,edi,0x906f83eb
  40aced:	add    eax,0x5a28a415
  40acf2:	fld    QWORD PTR [edx-0x74e17b25]
  40acf8:	jne    0x40acbb
  40acfa:	test   DWORD PTR [ebx-0x2a],edi
  40acfd:	sub    edi,ebp
  40acff:	sub    eax,DWORD PTR [ebx+0x6]
  40ad02:	and    ch,dh
  40ad04:	sub    dl,BYTE PTR [ebx+0xc4fd546]
  40ad0a:	add    BYTE PTR [esi+0x17c26061],cl
  40ad10:	or     dl,BYTE PTR [ebx+0x52003734]
  40ad16:	dec    ebp
  40ad17:	scas   al,BYTE PTR es:[edi]
  40ad18:	xchg   edx,eax
  40ad19:	pop    ebx
  40ad1a:	cmp    DWORD PTR [esi+0x3e],0xa1f6a05d
  40ad21:	push   0x27
  40ad23:	mov    al,0x26
  40ad25:	dec    ebx
  40ad26:	bnd jge 0x40acc7
  40ad29:	jbe    0x40acd6
  40ad2b:	or     edx,edi
  40ad2d:	ds es hlt 
  40ad30:	bound  ebx,QWORD PTR [edi+0x57ab4c35]
  40ad36:	out    dx,eax
  40ad37:	and    bl,BYTE PTR [esi-0x6f]
  40ad3a:	dec    ecx
  40ad3b:	leave  
  40ad3c:	ret    0xbb6e
  40ad3f:	sbb    esp,DWORD PTR [ebp-0x6e]
  40ad42:	sub    dl,BYTE PTR [edx-0x46]
  40ad45:	btc    DWORD PTR [edx],ebx
  40ad48:	and    DWORD PTR [edx+0x2f],esp
  40ad4b:	in     eax,dx
  40ad4c:	mov    esp,0xa93066ae
  40ad51:	jecxz  0x40ad7a
  40ad53:	and    eax,DWORD PTR [edx+0x2e]
  40ad56:	js     0x40ad9c
  40ad58:	ins    BYTE PTR es:[edi],dx
  40ad59:	and    eax,0x1ca64933
  40ad5e:	and    eax,DWORD PTR [ebp-0x3a]
  40ad61:	imul   ebp,DWORD PTR [ecx+0x5e2b64c4],0x50
  40ad68:	lods   eax,DWORD PTR ds:[esi]
  40ad69:	sbb    BYTE PTR [eax-0x3ffa9ed1],ch
  40ad6f:	lds    esp,FWORD PTR [ecx-0x3d311da6]
  40ad75:	jp     0x40ad05
  40ad77:	mov    eax,DWORD PTR [eax+0x21edb96c]
  40ad7d:	enter  0x1d0e,0x80
  40ad81:	aaa    
  40ad82:	mov    ebx,0xc860fa78
  40ad87:	aaa    
  40ad88:	adc    eax,0x93087806
  40ad8d:	rol    BYTE PTR [eax-0x27],cl
  40ad90:	adc    al,ah
  40ad92:	retf   0x45aa
  40ad95:	push   ds
  40ad96:	aas    
  40ad97:	xor    DWORD PTR [ecx-0x2cbb4794],0xffffffbe
  40ad9e:	in     al,0x5c
  40ada0:	jns    0x40ad5d
  40ada2:	sub    al,BYTE PTR [edx+0x4c]
  40ada5:	pop    es
  40ada6:	mov    ch,ch
  40ada8:	sbb    DWORD PTR [esi],0x115f94d
  40adae:	arpl   WORD PTR [esi+0xd3781cd],bp
  40adb4:	cmp    ch,cl
  40adb6:	and    DWORD PTR [ecx],ecx
  40adb8:	jno    0x40ad3b
  40adba:	daa    
  40adbb:	fist   DWORD PTR [edi-0x6fe7b868]
  40adc1:	jecxz  0x40ad94
  40adc3:	push   0x2
  40adc5:	push   esp
  40adc6:	(bad)
  40adca:	out    0x81,al
  40adcc:	iret   
  40adcd:	dec    edx
  40adce:	jo     0x40adbe
  40add0:	nop
  40add1:	in     eax,0xc4
  40add3:	gs ret 0xe007
  40add7:	in     al,dx
  40add8:	jns    0x40ae21
  40adda:	xchg   ecx,eax
  40addb:	pop    esp
  40addc:	out    dx,eax
  40addd:	pop    ebx
  40adde:	mov    edi,0xb4a8e174
  40ade3:	xlat   BYTE PTR ds:[ebx]
  40ade4:	push   eax
  40ade5:	sub    eax,0x3a7961e8
  40adea:	jp     0x40ade3
  40adec:	mov    esi,0xdaee9acb
  40adf1:	cmc    
  40adf2:	dec    edi
  40adf3:	xchg   ebx,eax
  40adf4:	sbb    BYTE PTR [ecx+ebx*2],0xc
  40adf8:	in     eax,dx
  40adf9:	stc    
  40adfa:	cmp    DWORD PTR gs:[eax],ebp
  40adfd:	loope  0x40ae48
  40adff:	add    dh,BYTE PTR [ebx-0x3cd1af2b]
  40ae05:	xor    BYTE PTR [edi],bl
  40ae07:	test   eax,0xc611a1a
  40ae0c:	jb     0x40ae50
  40ae0e:	js     0x40ae89
  40ae10:	mul    BYTE PTR [edx+0x7de39930]
  40ae16:	sbb    ebx,esp
  40ae18:	push   eax
  40ae19:	jmp    0xcb05:0x7b83fd31
  40ae20:	int3   
  40ae21:	add    al,0x6e
  40ae23:	ret    0x770d
  40ae26:	cmp    eax,0x1e80f8c5
  40ae2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2c:	sub    ebp,edi
  40ae2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2f:	xchg   edx,eax
  40ae30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae31:	mov    cl,0x55
  40ae33:	sbb    al,0x5d
  40ae35:	les    ecx,FWORD PTR [ebx+0x42e73615]
  40ae3b:	sar    BYTE PTR [ebx-0x21],cl
  40ae3e:	popa   
  40ae3f:	xchg   ecx,eax
  40ae40:	mov    cl,dl
  40ae42:	jg     0x40ae8b
  40ae44:	sub    edx,edi
  40ae46:	mov    dl,0x15
  40ae48:	adc    cl,BYTE PTR [ecx]
  40ae4a:	not    cl
  40ae4c:	pop    ds
  40ae4d:	scas   eax,DWORD PTR es:[edi]
  40ae4e:	xchg   esp,eax
  40ae4f:	cmp    bl,BYTE PTR [ebx+eax*4+0x471dc9f6]
  40ae56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae57:	add    ecx,0x30f9290
  40ae5d:	arpl   WORD PTR [edx-0x7db22918],si
  40ae63:	scas   al,BYTE PTR es:[edi]
  40ae64:	(bad)  
  40ae65:	inc    bx
  40ae67:	cmp    bh,dh
  40ae69:	(bad)  
  40ae6a:	push   ss
  40ae6b:	leave  
  40ae6c:	popa   
  40ae6d:	inc    ebp
  40ae6e:	push   ds
  40ae6f:	sub    eax,ecx
  40ae71:	ds int3 
  40ae73:	inc    ecx
  40ae74:	or     cl,BYTE PTR [ebp+0xff90f0f]
  40ae7a:	clc    
  40ae7b:	adc    esp,eax
  40ae7d:	ja     0x40ae01
  40ae7f:	les    eax,FWORD PTR ds:0xfeada42c
  40ae85:	lods   eax,DWORD PTR ds:[esi]
  40ae86:	xor    cl,al
  40ae88:	inc    ebx
  40ae89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae8a:	hlt    
  40ae8b:	cwde   
  40ae8c:	(bad)  
  40ae8d:	and    DWORD PTR [edi-0x4b],eax
  40ae90:	push   esp
  40ae91:	mov    edx,0x68b0ee38
  40ae96:	push   ebx
  40ae97:	test   DWORD PTR [ebx-0x6a],edi
  40ae9a:	cmp    DWORD PTR [edx-0x29],esi
  40ae9d:	jle    0x40ae8b
  40ae9f:	and    bl,bl
  40aea1:	call   0xf247a20f
  40aea6:	or     bl,BYTE PTR [ecx]
  40aea8:	sub    BYTE PTR [edi-0x28229f57],0x3d
  40aeaf:	push   edi
  40aeb0:	stc    
  40aeb1:	add    cl,BYTE PTR [edx-0x267b0e6b]
  40aeb7:	xchg   esp,eax
  40aeb8:	add    al,0xf2
  40aeba:	out    0x3b,al
  40aebc:	push   ebp
  40aebd:	(bad)  
  40aebe:	(bad)  
  40aebf:	(bad)  
  40aec0:	aas    
  40aec1:	ja     0x40ae4c
  40aec3:	jg     0x40af0b
  40aec5:	std    
  40aec6:	mov    ch,0x74
  40aec8:	cmp    ebp,ecx
  40aeca:	out    dx,al
  40aecb:	dec    edx
  40aecc:	add    al,0x29
  40aece:	cmp    ch,BYTE PTR [edx]
  40aed0:	outs   dx,BYTE PTR ds:[esi]
  40aed1:	inc    eax
  40aed2:	rol    bh,1
  40aed4:	jo     0x40aeb2
  40aed6:	in     al,dx
  40aed7:	pop    edx
  40aed8:	aad    0x46
  40aeda:	xchg   ecx,eax
  40aedb:	in     eax,dx
  40aedc:	shr    DWORD PTR [edi-0x9562095],1
  40aee2:	fwait
  40aee3:	shl    WORD PTR [esi],1
  40aee6:	and    edi,DWORD PTR [edx]
  40aee8:	and    esi,esi
  40aeea:	push   0x42c3cd1b
  40aeef:	mov    esi,0xf9154cd0
  40aef4:	lods   eax,DWORD PTR ds:[esi]
  40aef5:	add    DWORD PTR [eax+0x280bebbc],esi
  40aefb:	xlat   BYTE PTR ds:[ebx]
  40aefc:	mov    ds:0x5721641b,al
  40af01:	clc    
  40af02:	inc    esi
  40af03:	dec    eax
  40af04:	sbb    ebp,DWORD PTR [ebp+eax*1+0x2aaa1351]
  40af0b:	retf   0x8885
  40af0e:	mov    ds:0x9964a72c,al
  40af13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af15:	(bad)  
  40af16:	js     0x40af33
  40af18:	jle    0x40aedf
  40af1a:	sbb    DWORD PTR [edi-0x691c225e],edi
  40af20:	aad    0xe3
  40af22:	ja     0x40aea5
  40af24:	adc    al,0x76
  40af26:	mov    ebp,0x2412ba98
  40af2b:	jnp    0x40af7e
  40af2d:	or     BYTE PTR [eax],al
  40af2f:	dec    esp
  40af30:	repz not ebx
  40af33:	out    0x66,eax
  40af35:	and    al,0xb
  40af37:	ss xchg ecx,eax
  40af39:	stos   DWORD PTR es:[edi],eax
  40af3a:	mov    ecx,0xeda8cddb
  40af3f:	js     0x40aef7
  40af41:	enter  0xfb78,0x98
  40af45:	jo     0x40af29
  40af47:	xor    eax,0x64cda86b
  40af4c:	fdivrp st(2),st
  40af4e:	clc    
  40af4f:	lock out dx,al
  40af51:	dec    eax
  40af52:	test   eax,0x9fc44c3b
  40af57:	or     esi,eax
  40af59:	ret    0xedb0
  40af5c:	jns    0x40af25
  40af5e:	jae    0x40af05
  40af60:	and    DWORD PTR [esi+edx*4-0x67],0x2e15b88e
  40af68:	push   edi
  40af69:	retf   
  40af6a:	pusha  
  40af6b:	out    0xa7,al
  40af6d:	nop
  40af6e:	test   DWORD PTR [edi-0x53159ffa],esp
  40af74:	iret   
  40af75:	inc    esi
  40af76:	xchg   esi,eax
  40af77:	mov    BYTE PTR [ebp-0x9],al
  40af7a:	jns    0x40af31
  40af7c:	daa    
  40af7d:	pop    es
  40af7e:	iret   
  40af7f:	scas   al,BYTE PTR es:[edi]
  40af80:	shl    ah,1
  40af82:	jns    0x40af16
  40af84:	mov    eax,es
  40af86:	enter  0xa099,0x47
  40af8a:	cmp    dl,al
  40af8c:	add    al,0x7b
  40af8e:	or     esi,ebx
  40af90:	push   0xffffffae
  40af92:	cs aas 
  40af94:	sub    esi,DWORD PTR [eax+0x2]
  40af97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af98:	jg     0x40af52
  40af9a:	loopne 0x40afc3
  40af9c:	mov    ecx,0xb3ed8902
  40afa1:	mov    dl,0x7f
  40afa3:	jno    0x40afb5
  40afa5:	fdiv   QWORD PTR [ebp+0x18]
  40afa8:	into   
  40afa9:	xchg   ebx,eax
  40afaa:	adc    al,0x80
  40afac:	test   BYTE PTR [edi],bh
  40afae:	jg     0x40b024
  40afb0:	ret    
  40afb1:	mov    eax,ds:0x26238e36
  40afb6:	out    0xee,eax
  40afb8:	xor    ebp,DWORD PTR [edi]
  40afba:	jl     0x40afa4
  40afbc:	test   eax,0xbf4f120a
  40afc1:	sub    al,0xad
  40afc3:	sbb    BYTE PTR [ebp+0x71],bl
  40afc6:	int3   
  40afc7:	dec    edi
  40afc8:	push   0x1555434d
  40afcd:	mov    ebp,0x6747e93b
  40afd2:	retf   
  40afd3:	dec    ebp
  40afd4:	imul   esi,DWORD PTR [edx-0x29ca2862],0xffffffac
  40afdb:	add    ch,ch
  40afdd:	mov    edx,0x17b713aa
  40afe2:	aaa    
  40afe3:	add    ecx,eax
  40afe5:	push   edi
  40afe6:	sbb    bh,cl
  40afe8:	add    eax,0x7948253a
  40afed:	repz ds int3 
  40aff0:	xor    DWORD PTR [ebx],ecx
  40aff2:	or     esp,DWORD PTR [edx+0x61b868b9]
  40aff8:	je     0x40afe6
  40affa:	imul   ebp,ebp,0xec8dc684
  40b000:	adc    DWORD PTR ds:0x31319e81,ebp
  40b006:	call   0xdafa:0x28488d5d
  40b00d:	mov    esp,ebp
  40b00f:	dec    edi
  40b010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b011:	jmp    0x4b0:0xf789f787
  40b018:	jmp    0xf88e:0x59087947
  40b01f:	loopne 0x40b079
  40b021:	pusha  
  40b022:	leave  
  40b023:	out    dx,eax
  40b024:	push   cs
  40b025:	dec    eax
  40b026:	mov    dh,0xd
  40b028:	lods   eax,DWORD PTR ds:[esi]
  40b029:	and    eax,0x8c987b31
  40b02e:	jle    0x40afcd
  40b030:	jne    0x40b077
  40b032:	outs   dx,BYTE PTR ds:[esi]
  40b033:	or     eax,0xb5fed719
  40b038:	xchg   BYTE PTR [eax+ebx*4],bh
  40b03b:	mov    ds:0x49e81d6d,eax
  40b040:	cld    
  40b041:	and    al,0xa0
  40b043:	mov    eax,0xf011e20f
  40b048:	mov    ch,0xc8
  40b04a:	stos   BYTE PTR es:[edi],al
  40b04b:	fst    QWORD PTR [edx]
  40b04d:	jno    0x40aff2
  40b04f:	push   edx
  40b050:	jecxz  0x40b067
  40b052:	popa   
  40b053:	or     BYTE PTR [edi+edx*1+0x35],bl
  40b057:	lods   al,BYTE PTR ds:[esi]
  40b058:	dec    esp
  40b059:	leave  
  40b05a:	(bad)  
  40b05b:	call   0x3b7e9b49
  40b060:	mov    fs,WORD PTR [edx-0x3d]
  40b063:	add    eax,DWORD PTR [esi]
  40b065:	and    ebx,DWORD PTR [edx-0x2baa257d]
  40b06b:	inc    edx
  40b06c:	push   esi
  40b06d:	fimul  DWORD PTR cs:[edx+0xa]
  40b071:	aaa    
  40b072:	fcom   DWORD PTR [ebx-0x19325f6c]
  40b078:	daa    
  40b079:	sub    DWORD PTR ss:[edx],esp
  40b07c:	retf   
  40b07d:	xlat   BYTE PTR ds:[ebx]
  40b07e:	iret   
  40b07f:	outs   dx,BYTE PTR ds:[esi]
  40b080:	cmp    al,0x18
  40b082:	retf   0x772a
  40b085:	pop    ds
  40b086:	jb     0x40b05f
  40b088:	repnz push cs
  40b08a:	pop    ss
  40b08b:	cmp    esi,DWORD PTR [ebp+ebx*1+0x59f88d49]
  40b092:	push   ds
  40b093:	je     0x40b0df
  40b095:	adc    DWORD PTR [ebx+0x6],0x7f
  40b099:	dec    ebp
  40b09a:	mov    ecx,0xf653958a
  40b09f:	xor    eax,0xd6e0bab0
  40b0a4:	cmp    DWORD PTR ds:[edi+0xc7da3a4],ebx
  40b0ab:	pop    ebp
  40b0ac:	fadd   QWORD PTR [edx-0x41c58ac9]
  40b0b2:	lods   al,BYTE PTR ds:[esi]
  40b0b3:	jne    0x40b0d2
  40b0b5:	push   ds
  40b0b6:	or     eax,0x15a878c2
  40b0bb:	test   BYTE PTR [edi-0x3e],ch
  40b0be:	clc    
  40b0bf:	fwait
  40b0c0:	xchg   ebp,eax
  40b0c1:	jnp    0x40b11c
  40b0c3:	push   ss
  40b0c4:	rcr    BYTE PTR [ebp+0x1c],0x55
  40b0c8:	pop    ds
  40b0c9:	(bad)  
  40b0ca:	mov    ecx,0xd399801
  40b0cf:	fnsave [ebx]
  40b0d1:	js     0x40b0d3
  40b0d3:	scas   al,BYTE PTR es:[edi]
  40b0d4:	imul   edi,DWORD PTR [edi-0x5d8af925],0x4ef6fa85
  40b0de:	xchg   ebx,eax
  40b0df:	xlat   BYTE PTR ds:[ebx]
  40b0e0:	xchg   ecx,eax
  40b0e1:	dec    esp
  40b0e2:	jne    0x40b12b
  40b0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e5:	cmc    
  40b0e6:	popa   
  40b0e7:	sbb    DWORD PTR [esi+0x1bb6c29f],ebp
  40b0ed:	mov    DWORD PTR [ecx],ecx
  40b0ef:	outs   dx,BYTE PTR ds:[esi]
  40b0f0:	mov    gs,WORD PTR [esi-0x317bd3b4]
  40b0f6:	inc    edi
  40b0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0f8:	push   esi
  40b0f9:	sbb    edi,edi
  40b0fb:	pop    edi
  40b0fc:	test   al,0xe9
  40b0fe:	test   eax,0xfcae2dd8
  40b103:	loop   0x40b11b
  40b105:	or     BYTE PTR [ebx],bl
  40b107:	imul   ecx,DWORD PTR [edx+0x6c],0xcd1454c3
  40b10e:	sbb    DWORD PTR [edx-0xd],esp
  40b111:	pop    ss
  40b112:	pop    es
  40b113:	mov    ds:0xe2d6e805,eax
  40b118:	xor    dh,ch
  40b11a:	add    eax,0x34c5756b
  40b11f:	fnstsw WORD PTR [esi+ecx*1+0xea31b77]
  40b126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b127:	mov    esi,0x80b1eaa4
  40b12c:	jbe    0x40b0c5
  40b12e:	loop   0x40b194
  40b130:	pop    esi
  40b131:	fldenv [edi-0x4d]
  40b134:	cli    
  40b135:	retf   0x9e92
  40b138:	adc    ebx,DWORD PTR [ebp+0x38]
  40b13b:	sub    ebx,eax
  40b13d:	ss sbb edx,esp
  40b140:	mov    edi,0x67c3c79f
  40b145:	ret    0x13cf
  40b148:	retf   0x5837
  40b14b:	xor    eax,0x728f0379
  40b150:	repz fdivr QWORD PTR [ebp+0x23]
  40b154:	cmp    cl,bl
  40b156:	addr16 cmp eax,0xa11a5e73
  40b15c:	jmp    0x40b161
  40b15e:	cwde   
  40b15f:	sbb    al,0x19
  40b161:	sahf   
  40b162:	rol    BYTE PTR [ebx+0x2632853e],1
  40b168:	jne    0x40b11f
  40b16a:	ins    DWORD PTR es:[edi],dx
  40b16b:	or     ebp,DWORD PTR es:[eax-0x118462b4]
  40b172:	mov    eax,0x87181fbc
  40b177:	js     0x40b15b
  40b179:	into   
  40b17a:	adc    edi,DWORD PTR [esi-0x6e]
  40b17d:	lock out 0x9,al
  40b180:	stc    
  40b181:	pop    esi
  40b182:	add    DWORD PTR [edi+ecx*4+0x4f],esi
  40b186:	inc    ebp
  40b187:	call   0xd68c:0x47ee8e28
  40b18e:	ins    DWORD PTR es:[edi],dx
  40b18f:	mov    ?,WORD PTR [ebx]
  40b191:	bnd call 0x93245fb4
  40b197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b198:	push   es
  40b199:	repnz aas 
  40b19b:	div    cl
  40b19d:	dec    esi
  40b19e:	cdq    
  40b19f:	retf   0x1d9b
  40b1a2:	sbb    DWORD PTR [ecx],ebx
  40b1a4:	clc    
  40b1a5:	shr    BYTE PTR [ecx],0xef
  40b1a8:	repnz ror BYTE PTR [esi],0xd2
  40b1ac:	(bad)  
  40b1ad:	jp     0x40b13c
  40b1af:	jae    0x40b19f
  40b1b1:	xor    eax,0xf196c7b9
  40b1b6:	sbb    BYTE PTR [esi-0x19],ah
  40b1b9:	inc    eax
  40b1ba:	pusha  
  40b1bb:	xchg   edx,eax
  40b1bc:	data16 mov ah,0xae
  40b1bf:	jmp    0x40b1e7
  40b1c1:	call   FWORD PTR [edi+0x1b]
  40b1c4:	cs ret 
  40b1c6:	and    DWORD PTR [edi+0x5b1d8e8c],0xffffffa7
  40b1cd:	stos   DWORD PTR es:[edi],eax
  40b1ce:	loop   0x40b1b8
  40b1d0:	xchg   ebp,eax
  40b1d1:	mov    cl,0x43
  40b1d3:	jo     0x40b225
  40b1d5:	enter  0xc6dd,0x7b
  40b1d9:	arpl   WORD PTR [esi],ax
  40b1db:	add    dl,ah
  40b1dd:	xchg   ebp,eax
  40b1de:	aas    
  40b1df:	push   es
  40b1e0:	mov    ecx,edx
  40b1e2:	out    dx,al
  40b1e3:	fs int3 
  40b1e5:	xor    DWORD PTR [edi+ecx*4],ecx
  40b1e8:	xchg   ebx,eax
  40b1e9:	(bad)  [edi-0x1ad413e1]
  40b1ef:	hlt    
  40b1f0:	inc    esi
  40b1f1:	sbb    edx,DWORD PTR ss:[ebx+0x6f]
  40b1f5:	dec    eax
  40b1f6:	push   0xffffffba
  40b1f8:	mov    al,0x85
  40b1fa:	fs cmp eax,0xf40b7dd3
  40b200:	pop    esp
  40b201:	pushf  
  40b202:	sbb    al,0x43
  40b204:	add    al,0x1a
  40b206:	adc    ebp,DWORD PTR [esi-0x43c9c437]
  40b20c:	pop    esi
  40b20d:	mov    ecx,0x3d8b3082
  40b212:	cdq    
  40b213:	stos   DWORD PTR es:[edi],eax
  40b214:	adc    DWORD PTR [esi-0x1],edx
  40b217:	sbb    DWORD PTR [ecx-0x5818721f],edx
  40b21d:	(bad)  
  40b21e:	or     dh,BYTE PTR [esi+0x32]
  40b221:	jns    0x40b262
  40b223:	pop    edi
  40b224:	and    DWORD PTR [edi-0x6d],ebp
  40b227:	ja     0x40b1f4
  40b229:	cld    
  40b22a:	xchg   ecx,eax
  40b22b:	mov    dh,0xc1
  40b22d:	sbb    eax,0x7625be0f
  40b232:	call   0xd9ce1cf0
  40b237:	(bad)  
  40b238:	into   
  40b239:	sbb    eax,DWORD PTR [ebp+0x55]
  40b23c:	cmp    esp,edx
  40b23e:	xor    bh,BYTE PTR [esp+edx*4]
  40b241:	inc    dx
  40b243:	fdivr  st,st(2)
  40b245:	mov    ebx,0x894a362c
  40b24a:	xlat   BYTE PTR ds:[ebx]
  40b24b:	jecxz  0x40b297
  40b24d:	mov    ds:0x18272e75,eax
  40b252:	xlat   BYTE PTR ds:[ebx]
  40b253:	inc    esi
  40b254:	pop    gs
  40b256:	or     eax,0xaffbdf93
  40b25b:	mov    edi,0x83ac17b3
  40b260:	jg     0x40b20b
  40b262:	retf   
  40b263:	fdivr  DWORD PTR [esi-0x4497f4e1]
  40b269:	xchg   DWORD PTR [esp+ecx*4+0x276e2bc9],edi
  40b270:	ins    DWORD PTR es:[edi],dx
  40b271:	xor    eax,0xa64a49d1
  40b276:	rol    DWORD PTR [ecx+0x35],0x69
  40b27a:	xchg   edx,eax
  40b27b:	out    dx,al
  40b27c:	imul   ebp,DWORD PTR [edi+0x2ad772ef],0xcb83e770
  40b286:	call   0xd4b4b831
  40b28b:	mov    ds:0x6d334660,al
  40b290:	daa    
  40b291:	stos   DWORD PTR es:[edi],eax
  40b292:	mov    esi,0x31188385
  40b297:	test   al,0xc5
  40b299:	dec    esp
  40b29a:	into   
  40b29b:	jp     0x40b2ae
  40b29d:	dec    ebx
  40b29e:	nop
  40b29f:	sub    eax,0x9dd8eaff
  40b2a4:	inc    edi
  40b2a5:	mov    esp,DWORD PTR [ebx+0x575431cc]
  40b2ab:	inc    eax
  40b2ac:	(bad)  
  40b2ad:	jle    0x40b271
  40b2af:	add    edi,DWORD PTR [ebx]
  40b2b1:	mov    esi,edx
  40b2b3:	loopne 0x40b31a
  40b2b5:	ss push edi
  40b2b7:	repnz loope 0x40b254
  40b2ba:	jne    0x40b26e
  40b2bc:	push   0x4b
  40b2be:	imul   edi,edi,0xd
  40b2c1:	jp     0x40b26c
  40b2c3:	mov    ecx,0xac6b2fba
  40b2c8:	cmp    cl,BYTE PTR [esi+eiz*2+0x7b]
  40b2cc:	rol    BYTE PTR [ecx],1
  40b2ce:	sbb    eax,0xda7790e3
  40b2d3:	sahf   
  40b2d4:	aad    0xb9
  40b2d6:	sar    BYTE PTR [eax],cl
  40b2d8:	aam    0x73
  40b2da:	lock repnz mov ebp,esp
  40b2de:	scas   eax,DWORD PTR es:[edi]
  40b2df:	or     al,0x3d
  40b2e1:	sub    BYTE PTR ds:0x88eacf8c,bl
  40b2e7:	imul   esi,DWORD PTR [eax],0x17
  40b2ea:	add    ecx,DWORD PTR [esi]
  40b2ec:	mov    dl,0xb8
  40b2ee:	int    0x1
  40b2f0:	fdivr  QWORD PTR [edx]
  40b2f2:	sub    eax,0x34021b75
  40b2f7:	push   cs
  40b2f8:	in     eax,0x71
  40b2fa:	jnp    0x40b2bf
  40b2fc:	pop    edx
  40b2fe:	shl    eax,cl
  40b300:	sti    
  40b301:	bound  ebp,QWORD PTR [edi+0x1b6a76d]
  40b307:	and    bl,BYTE PTR [ecx*1+0x4eada058]
  40b30e:	pop    ecx
  40b30f:	fisubr DWORD PTR [eax+edx*8]
  40b312:	adc    ch,BYTE PTR [ebx]
  40b314:	pop    eax
  40b315:	and    ecx,DWORD PTR [edi]
  40b317:	or     DWORD PTR [ebx-0x403831ac],0x10
  40b31e:	sbb    dh,ch
  40b320:	fadd   DWORD PTR [esi+ebx*1+0x47f7d114]
  40b327:	cmp    DWORD PTR [edi],esp
  40b329:	stos   BYTE PTR es:[edi],al
  40b32a:	sbb    dl,BYTE PTR ds:0x663fa6c1
  40b330:	dec    ebp
  40b331:	jne    0x40b2cb
  40b333:	lods   al,BYTE PTR ds:[esi]
  40b334:	dec    esp
  40b335:	lea    ebp,[esi]
  40b337:	in     al,0x72
  40b339:	js     0x40b2d3
  40b33b:	jp     0x40b35f
  40b33d:	mov    dh,0xba
  40b33f:	scas   al,BYTE PTR es:[edi]
  40b340:	in     al,0x75
  40b342:	xchg   ecx,eax
  40b343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b344:	and    eax,0x1b09a1de
  40b349:	mov    edx,0x14e4a563
  40b34e:	push   es
  40b34f:	inc    ebx
  40b350:	cmp    BYTE PTR [eax],al
  40b352:	add    al,0xa5
  40b354:	out    0x45,al
  40b356:	inc    edx
  40b357:	mov    cs,WORD PTR [edi-0x4372dbc7]
  40b35d:	test   eax,0xc427fc89
  40b362:	inc    ebp
  40b363:	sbb    BYTE PTR [ebx-0x4437acb4],al
  40b369:	dec    ebx
  40b36a:	das    
  40b36b:	aas    
  40b36c:	or     edi,DWORD PTR [edx-0x3e]
  40b36f:	rcl    BYTE PTR [ecx],1
  40b371:	xchg   edi,eax
  40b372:	jno    0x40b352
  40b374:	imul   eax,DWORD PTR [eax-0x5877fb31],0xfe0e9f74
  40b37e:	or     DWORD PTR [edx],ebp
  40b380:	inc    esp
  40b381:	sbb    eax,0x9ef0f9ca
  40b386:	mov    ebp,0x41917bcf
  40b38b:	push   eax
  40b38c:	mov    al,ds:0x42e13f19
  40b391:	pop    ss
  40b392:	rcl    BYTE PTR [edi-0x39d101a9],cl
  40b398:	mov    cl,0x16
  40b39a:	rcl    ebp,cl
  40b39c:	test   eax,0x26832f4b
  40b3a1:	cmp    ebx,DWORD PTR [esi-0x4c]
  40b3a4:	push   cs
  40b3a5:	pop    eax
  40b3a6:	xchg   esi,eax
  40b3a7:	jo     0x40b420
  40b3a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3aa:	sbb    eax,0x67539596
  40b3af:	gs mov al,0x4f
  40b3b2:	test   al,0x94
  40b3b4:	dec    esi
  40b3b5:	add    DWORD PTR [eax-0x2f],esi
  40b3b8:	or     al,0xb1
  40b3ba:	xchg   esp,eax
  40b3bb:	fisub  DWORD PTR [ebx-0x57df1a77]
  40b3c1:	into   
  40b3c2:	mov    ds:0xd93ecfba,al
  40b3c7:	or     al,0xde
  40b3c9:	inc    ebx
  40b3ca:	iret   
  40b3cb:	fisttp QWORD PTR [edx+0x18]
  40b3ce:	popf   
  40b3cf:	nop
  40b3d0:	loope  0x40b3ef
  40b3d2:	aam    0x69
  40b3d4:	retf   
  40b3d5:	pop    eax
  40b3d6:	dec    eax
  40b3d7:	sub    al,0x1
  40b3d9:	or     eax,0x1750ef21
  40b3de:	xchg   ebx,ecx
  40b3e0:	push   ss
  40b3e1:	mov    bl,ah
  40b3e3:	mov    ds:0x8dca6b5a,ax
  40b3e9:	or     dh,ah
  40b3eb:	pop    edi
  40b3ec:	xchg   ebx,eax
  40b3ed:	xor    eax,0xb94e4645
  40b3f2:	imul   ebx,DWORD PTR [ecx+ebx*4],0x8a053878
  40b3f9:	jg     0x40b478
  40b3fb:	mov    esp,0xe1d9e15e
  40b400:	mov    ds:0xaad6dc4f,eax
  40b405:	mov    BYTE PTR [ecx+0x7d8a8b2],ah
  40b40b:	lods   eax,DWORD PTR ds:[esi]
  40b40c:	xchg   ecx,eax
  40b40d:	or     dl,ah
  40b40f:	loope  0x40b3de
  40b411:	mov    ah,bl
  40b413:	mov    DWORD PTR [ecx+0x1e],edx
  40b416:	iret   
  40b417:	call   0x6b32:0x20a7f77
  40b41e:	adc    ecx,DWORD PTR [ebp+0x7a]
  40b421:	inc    ebp
  40b422:	dec    edi
  40b423:	and    al,0x3f
  40b425:	imul   ebx,DWORD PTR [edi+edi*2-0x35396b7],0x5f806197
  40b430:	push   es
  40b431:	(bad)
  40b434:	or     al,0x1c
  40b436:	arpl   dx,di
  40b438:	in     al,dx
  40b439:	cli    
  40b43a:	mov    ds:0xb1a9ca6f,eax
  40b43f:	pusha  
  40b440:	pop    es
  40b441:	leave  
  40b442:	jecxz  0x40b42b
  40b444:	jl     0x40b3f1
  40b446:	cs popf 
  40b448:	inc    esp
  40b449:	setg   BYTE PTR [edi]
  40b44c:	pushf  
  40b44d:	stos   DWORD PTR es:[edi],eax
  40b44e:	in     eax,0x25
  40b450:	inc    esp
  40b451:	dec    ebp
  40b452:	test   al,0x45
  40b454:	inc    ebx
  40b455:	inc    edx
  40b456:	pop    eax
  40b457:	xor    BYTE PTR [ecx-0x4f484a6b],al
  40b45d:	jge    0x40b428
  40b45f:	adc    ecx,DWORD PTR [esi+0x74]
  40b462:	mov    eax,0xdcf41400
  40b467:	mov    edx,0xb8c1b578
  40b46c:	call   0x90f9:0xb88e074f
  40b473:	and    cl,BYTE PTR [edx+0x52c39749]
  40b479:	retf   
  40b47a:	xor    BYTE PTR [ecx],0x8
  40b47d:	sbb    al,0x6
  40b47f:	popf   
  40b480:	loop   0x40b494
  40b482:	call   0xfc0594cb
  40b487:	pop    eax
  40b488:	sar    DWORD PTR [esi],0x8a
  40b48b:	pusha  
  40b48c:	and    al,dh
  40b48e:	in     eax,0x20
  40b490:	test   DWORD PTR [eax-0x12],esp
  40b493:	bound  edx,QWORD PTR [ebx]
  40b495:	xor    BYTE PTR [eax],dh
  40b497:	xchg   BYTE PTR [ecx],al
  40b499:	aad    0xfd
  40b49b:	out    dx,eax
  40b49c:	fcmovnb st,st(0)
  40b49e:	dec    esp
  40b49f:	ins    BYTE PTR es:[edi],dx
  40b4a0:	scas   al,BYTE PTR es:[edi]
  40b4a1:	or     DWORD PTR [esi],edi
  40b4a3:	dec    ebp
  40b4a4:	dec    DWORD PTR [esi]
  40b4a6:	inc    edi
  40b4a7:	xor    dh,dl
  40b4a9:	jmp    0x40b46c
  40b4ab:	xlat   BYTE PTR ds:[ebx]
  40b4ac:	stos   DWORD PTR es:[edi],eax
  40b4ad:	fnsave [ecx+eax*2-0x757a00d3]
  40b4b4:	pop    es
  40b4b5:	addr16 lock xchg si,ax
  40b4b9:	jo     0x40b446
  40b4bb:	jmp    0x40b486
  40b4bd:	add    esp,DWORD PTR [edx+0x21]
  40b4c0:	mov    esi,0xce4abde
  40b4c5:	das    
  40b4c6:	cmp    eax,0x3760a9c9
  40b4cb:	mov    ah,0xa6
  40b4cd:	inc    eax
  40b4ce:	je     0x40b4fb
  40b4d0:	sahf   
  40b4d1:	stc    
  40b4d2:	sar    DWORD PTR [esi-0x7702ab19],cl
  40b4d8:	inc    DWORD PTR [ebx+0x30]
  40b4db:	inc    esi
  40b4dc:	dec    ebx
  40b4dd:	adc    DWORD PTR ds:0xf3c9dfb1,ecx
  40b4e3:	push   es
  40b4e4:	out    0x35,eax
  40b4e6:	into   
  40b4e7:	imul   esi,DWORD PTR [esi+0x19161d7a],0xd20a410d
  40b4f1:	mov    esp,0xa357d318
  40b4f6:	nop
  40b4f7:	pop    es
  40b4f8:	fist   DWORD PTR [edi-0x73d4c9af]
  40b4fe:	jmp    0x36f8:0xc69997d1
  40b505:	mov    dh,0x4f
  40b507:	(bad)  
  40b508:	mov    eax,ds:0x6379c02c
  40b50d:	jns    0x40b541
  40b50f:	sahf   
  40b510:	sub    al,0xf2
  40b512:	imul   esi,DWORD PTR [ebx+eax*4+0x65],0xffffffd4
  40b517:	xchg   al,bh
  40b519:	cmp    dl,bh
  40b51b:	jle    0x40b4de
  40b51d:	add    BYTE PTR [edx],cl
  40b51f:	dec    ebx
  40b520:	inc    edx
  40b521:	add    eax,0x52f0974a
  40b526:	or     ebx,DWORD PTR [ebx+0x20a02e32]
  40b52c:	ins    DWORD PTR es:[edi],dx
  40b52d:	rcl    BYTE PTR ds:0x3ce62e7c,1
  40b533:	sti    
  40b534:	jg     0x40b55d
  40b536:	xor    eax,0xaf5d27d5
  40b53b:	int    0xc2
  40b53d:	xchg   ecx,eax
  40b53e:	xchg   esp,eax
  40b53f:	scas   al,BYTE PTR es:[edi]
  40b540:	jns    0x40b4dc
  40b542:	add    BYTE PTR [ebx-0x27a498ac],bl
  40b548:	inc    eax
  40b549:	jmp    0x40b504
  40b54b:	(bad)  
  40b54c:	hlt    
  40b54d:	push   es
  40b54e:	sub    bh,BYTE PTR [edi-0x48]
  40b551:	scas   eax,DWORD PTR es:[edi]
  40b552:	xchg   edi,eax
  40b553:	and    DWORD PTR [edi],eax
  40b555:	fcmovnbe st,st(1)
  40b557:	daa    
  40b558:	or     edi,DWORD PTR [ecx-0x1f2e65ba]
  40b55e:	repz (bad) 
  40b560:	and    BYTE PTR [ebx-0x6c2232a],cl
  40b566:	jmp    FWORD PTR [ebx]
  40b568:	frstor [eax]
  40b56a:	xor    DWORD PTR [ecx+0x57],edi
  40b56d:	push   0xfcfcdfab
  40b572:	push   ss
  40b573:	fxch   st(7)
  40b575:	aaa    
  40b576:	xchg   di,ax
  40b578:	repz add eax,0x702c9d75
  40b57e:	leave  
  40b57f:	inc    edi
  40b580:	xor    ebx,DWORD PTR [eax+0x32a7f909]
  40b586:	jae    0x40b557
  40b588:	test   DWORD PTR [edx],0xe486096c
  40b58e:	(bad)  
  40b58f:	xchg   ebp,eax
  40b590:	dec    ebx
  40b591:	or     DWORD PTR [ebp-0x57],esp
  40b594:	xchg   ebx,eax
  40b595:	jl     0x40b56e
  40b597:	js     0x40b605
  40b599:	push   edx
  40b59a:	(bad)  
  40b59b:	fidiv  WORD PTR [eax-0x711c5d2e]
  40b5a1:	ins    BYTE PTR es:[edi],dx
  40b5a2:	stos   BYTE PTR es:[edi],al
  40b5a3:	loope  0x40b622
  40b5a5:	lahf   
  40b5a6:	leave  
  40b5a7:	sub    al,bl
  40b5a9:	inc    edi
  40b5aa:	and    BYTE PTR [esi+0x1e82e7ae],bh
  40b5b0:	mov    bh,al
  40b5b2:	adc    BYTE PTR [ecx],ah
  40b5b4:	and    dl,BYTE PTR [ebx+0x7459506e]
  40b5ba:	retf   
  40b5bb:	jle    0x40b617
  40b5bd:	push   cs
  40b5be:	xor    eax,0x6fb76f1
  40b5c3:	adc    dh,BYTE PTR [ebp-0x11]
  40b5c6:	scas   eax,DWORD PTR es:[edi]
  40b5c7:	mov    eax,ds:0x86c63b5f
  40b5cc:	retf   
  40b5cd:	jmp    0xc1ff7503
  40b5d2:	and    eax,DWORD PTR [edx+0x41312a69]
  40b5d8:	imul   ecx,DWORD PTR [edx-0x77fe667c],0x40
  40b5df:	int    0xc4
  40b5e1:	jp     0x40b5e6
  40b5e3:	xchg   edi,eax
  40b5e4:	pop    edx
  40b5e5:	sub    eax,0x9c3f2ba
  40b5ea:	dec    edx
  40b5eb:	mov    bl,0xed
  40b5ed:	(bad)  
  40b5ee:	sbb    al,0x3c
  40b5f0:	stos   BYTE PTR es:[edi],al
  40b5f1:	mov    ebx,0x71d24b74
  40b5f6:	push   ecx
  40b5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5f8:	stos   BYTE PTR es:[edi],al
  40b5f9:	int3   
  40b5fa:	cmp    DWORD PTR [ebx+0x69426a4a],ebp
  40b600:	(bad)  
  40b602:	mov    ds:0x722623de,al
  40b607:	push   ebp
  40b608:	lods   al,BYTE PTR ds:[esi]
  40b609:	push   ebp
  40b60a:	mov    edx,0x7c9854f4
  40b60f:	inc    ebp
  40b610:	add    al,0xb4
  40b612:	sub    dl,BYTE PTR [ebx+0x1c]
  40b615:	ins    BYTE PTR es:[edi],dx
  40b616:	add    ecx,DWORD PTR [edi-0x393a097e]
  40b61c:	(bad)  
  40b61d:	shl    BYTE PTR [eax+0x39d7f605],1
  40b623:	cli    
  40b624:	ins    DWORD PTR es:[edi],dx
  40b625:	scas   al,BYTE PTR es:[edi]
  40b626:	sti    
  40b627:	or     bl,BYTE PTR [edi]
  40b629:	mov    dh,0x66
  40b62b:	ja     0x40b631
  40b62d:	retf   0xa112
  40b630:	pop    ebp
  40b631:	scas   al,BYTE PTR es:[edi]
  40b632:	leave  
  40b633:	stos   BYTE PTR es:[edi],al
  40b634:	cdq    
  40b635:	hlt    
  40b636:	lock sti 
  40b638:	bts    DWORD PTR [eax+0x11],ecx
  40b63c:	sti    
  40b63d:	fs out 0xcf,eax
  40b640:	mov    dh,0x59
  40b642:	and    edx,DWORD PTR [esi+0x66d1fbe7]
  40b648:	inc    ecx
  40b649:	data16 arpl WORD PTR [ebx],bp
  40b64c:	or     eax,esp
  40b64e:	xor    al,BYTE PTR [eax+edx*2+0x4e]
  40b652:	dec    edi
  40b653:	(bad)  
  40b654:	rcr    DWORD PTR [esi+ecx*4-0x328de51f],1
  40b65b:	xchg   esp,eax
  40b65c:	loopne 0x40b624
  40b65e:	and    ebx,DWORD PTR [edx+0x11]
  40b661:	in     al,0x7b
  40b663:	dec    ebp
  40b664:	mov    ecx,ss
  40b666:	cdq    
  40b667:	jne    0x40b68a
  40b669:	cmc    
  40b66a:	mov    eax,0x71d0f98a
  40b66f:	fdiv   DWORD PTR [ebx+0x728a31e]
  40b675:	jg     0x40b6a7
  40b677:	test   bl,ah
  40b679:	outs   dx,DWORD PTR ds:[esi]
  40b67a:	add    BYTE PTR [ecx+0x16],bl
  40b67d:	int    0xc9
  40b67f:	gs dec edi
  40b681:	pop    ss
  40b682:	xchg   esp,eax
  40b683:	xchg   esi,eax
  40b684:	or     eax,0xb7921694
  40b689:	xchg   edi,eax
  40b68a:	adc    esp,DWORD PTR [edx]
  40b68c:	scas   al,BYTE PTR es:[edi]
  40b68d:	icebp  
  40b68e:	push   esp
  40b68f:	mov    bl,0x1e
  40b691:	sub    ebp,0xf6b77af9
  40b697:	shr    DWORD PTR [edx+esi*8],cl
  40b69a:	push   es
  40b69b:	enter  0x10a,0xde
  40b69f:	adc    dh,BYTE PTR [esi-0x6f61a742]
  40b6a5:	lahf   
  40b6a6:	jle    0x40b6c9
  40b6a8:	lods   eax,DWORD PTR ds:[esi]
  40b6a9:	jp     0x40b62c
  40b6ab:	out    dx,eax
  40b6ac:	test   eax,0xdf379e5b
  40b6b1:	clc    
  40b6b2:	ja     0x40b68b
  40b6b4:	push   ss
  40b6b5:	and    bl,BYTE PTR [eax+0x139cf648]
  40b6bb:	add    BYTE PTR [edi],0x57
  40b6be:	dec    ebx
  40b6bf:	cwde   
  40b6c0:	xor    BYTE PTR [edx+0x33017ad2],cl
  40b6c6:	mov    cl,0x68
  40b6c8:	jnp    0x40b671
  40b6ca:	pop    esi
  40b6cb:	mov    ebp,0x7a8e441e
  40b6d0:	mov    esi,0x2c9cc581
  40b6d5:	repnz push ecx
  40b6d7:	mov    ds:0x3d113c84,eax
  40b6dc:	dec    eax
  40b6dd:	loopne 0x40b741
  40b6df:	(bad)  
  40b6e0:	push   ebx
  40b6e1:	fs pusha 
  40b6e3:	cmp    ebp,DWORD PTR [ecx-0x74]
  40b6e6:	mov    ch,0x9e
  40b6e8:	sahf   
  40b6e9:	retf   
  40b6ea:	or     al,0x4d
  40b6ec:	stos   DWORD PTR es:[edi],eax
  40b6ed:	inc    ebx
  40b6ee:	pop    es
  40b6ef:	sti    
  40b6f0:	dec    ebp
  40b6f1:	xchg   edi,eax
  40b6f2:	pop    es
  40b6f3:	data16 jno 0x40b6f7
  40b6f6:	and    BYTE PTR [ebp-0x7a],ah
  40b6f9:	push   ecx
  40b6fa:	push   0xca963fc5
  40b6ff:	pop    ss
  40b700:	cmp    ah,dh
  40b702:	push   esp
  40b703:	mov    esi,edi
  40b705:	sti    
  40b706:	repz or al,0xb6
  40b709:	mov    bl,0x1c
  40b70b:	add    eax,DWORD PTR [esi-0x3f600dc3]
  40b711:	or     al,0x41
  40b713:	mov    ecx,0x7a72de14
  40b718:	mov    esp,0xd9cd0ff5
  40b71d:	adc    esp,esi
  40b71f:	jmp    0x4917:0x3cc85652
  40b726:	sbb    dh,dl
  40b728:	aas    
  40b729:	xor    al,0x3a
  40b72b:	test   al,0xbe
  40b72d:	adc    bh,ah
  40b72f:	paddusb mm3,QWORD PTR [eax+0x10]
  40b733:	push   cs
  40b734:	fmul   QWORD PTR [ecx]
  40b736:	jno    0x40b763
  40b738:	into   
  40b739:	(bad)  
  40b73b:	cli    
  40b73c:	or     BYTE PTR [esi+0x47b60200],ch
  40b742:	xchg   ebx,eax
  40b743:	sub    eax,DWORD PTR [edx]
  40b745:	cmp    dh,dh
  40b747:	data16 fsubr DWORD PTR [ecx-0x36fa8198]
  40b74e:	mov    eax,ds:0xb9f37d62
  40b753:	aaa    
  40b754:	and    BYTE PTR [ecx-0x6e38d8d6],ch
  40b75a:	and    cl,ah
  40b75c:	mov    bh,0x13
  40b75e:	jbe    0x40b798
  40b760:	cmp    BYTE PTR [ebp-0x2],cl
  40b763:	sahf   
  40b764:	out    dx,eax
  40b765:	or     BYTE PTR [ebx],ah
  40b767:	mov    eax,DWORD PTR [ecx]
  40b769:	sub    al,BYTE PTR [edx+0x5b]
  40b76c:	xor    al,BYTE PTR [edi-0x3e]
  40b76f:	int3   
  40b770:	ins    BYTE PTR es:[edi],dx
  40b771:	repz push esp
  40b773:	cmp    eax,0x5672f824
  40b778:	sar    BYTE PTR [ecx],cl
  40b77a:	pop    edi
  40b77b:	cld    
  40b77c:	mov    bh,0x53
  40b77e:	pop    bx
  40b780:	xchg   ebp,eax
  40b781:	mov    ch,0x3e
  40b783:	pusha  
  40b784:	stos   DWORD PTR es:[edi],eax
  40b785:	nop
  40b786:	ret    0xf325
  40b789:	jl     0x40b7a6
  40b78b:	sub    DWORD PTR [ecx+0x4],ebx
  40b78e:	sbb    eax,ebx
  40b790:	xchg   ecx,eax
  40b791:	push   ebp
  40b792:	shl    BYTE PTR [ecx],cl
  40b794:	stos   BYTE PTR es:[edi],al
  40b795:	ror    BYTE PTR [eax-0x2f079b20],1
  40b79b:	sbb    cl,bl
  40b79d:	int3   
  40b79e:	or     esi,edx
  40b7a0:	cdq    
  40b7a1:	ja     0x40b728
  40b7a3:	push   edx
  40b7a4:	leave  
  40b7a5:	xchg   ecx,eax
  40b7a6:	call   0x4758:0x835f565a
  40b7ad:	cmp    DWORD PTR [ecx+0x19],edi
  40b7b0:	test   eax,0x25e26f6d
  40b7b5:	adc    ch,BYTE PTR ds:0x377305e6
  40b7bb:	mov    eax,ds:0xc732c37e
  40b7c0:	jne    0x40b7ba
  40b7c2:	xchg   ebp,eax
  40b7c3:	(bad)  
  40b7c5:	add    eax,0x6e79625e
  40b7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7cb:	pop    esi
  40b7cc:	add    al,0xea
  40b7ce:	xchg   edi,eax
  40b7cf:	or     eax,0xff87e3d3
  40b7d4:	sar    BYTE PTR [edi+0x4da4b072],0x43
  40b7db:	add    eax,0x4a266c9d
  40b7e0:	sub    BYTE PTR [ecx],cl
  40b7e2:	jmp    0x40b815
  40b7e4:	mov    ds:0xc9e9b249,eax
  40b7e9:	imul   esi,DWORD PTR [edi+0x66f4a611],0xcbdd49d3
  40b7f3:	test   cl,0x28
  40b7f6:	in     eax,dx
  40b7f7:	ror    bl,cl
  40b7f9:	stos   DWORD PTR es:[edi],eax
  40b7fa:	cmp    edx,DWORD PTR [eax-0x23]
  40b7fd:	adc    al,BYTE PTR [esi]
  40b7ff:	pop    ebp
  40b800:	psubw  mm2,QWORD PTR [edx]
  40b803:	frstor [ebx+0x1b5cc6be]
  40b809:	xchg   edx,eax
  40b80a:	ret    0x33d4
  40b80d:	inc    ecx
  40b80e:	js     0x40b842
  40b810:	or     ebx,DWORD PTR [edx+0x25]
  40b813:	das    
  40b814:	jl     0x40b86e
  40b816:	jmp    edi
  40b818:	push   es
  40b819:	mov    BYTE PTR [edi+0x29],bl
  40b81c:	and    DWORD PTR [eax-0x12],ebx
  40b81f:	stc    
  40b820:	popa   
  40b821:	(bad)
  40b824:	retf   0x2bbd
  40b827:	jle    0x40b7f6
  40b829:	add    dl,al
  40b82b:	cmp    eax,0x2cb61709
  40b830:	jns    0x40b870
  40b832:	arpl   WORD PTR [ebx+ebp*2],sp
  40b835:	cmc    
  40b836:	out    0x3e,al
  40b838:	add    esi,ebp
  40b83a:	sbb    al,0xb0
  40b83d:	inc    edx
  40b83e:	dec    eax
  40b83f:	mov    ebp,0xb05b5051
  40b844:	sub    BYTE PTR [edi+0x7a],ah
  40b847:	popa   
  40b848:	mov    al,0x56
  40b84a:	dec    esp
  40b84b:	dec    ecx
  40b84c:	pop    ss
  40b84d:	dec    edi
  40b84e:	xor    eax,0xac080476
  40b853:	mov    cl,0xd3
  40b855:	xchg   ebx,eax
  40b856:	dec    ebx
  40b857:	addr16 xor ecx,eax
  40b85a:	not    DWORD PTR [ebx]
  40b85c:	push   0xffffffad
  40b85e:	nop
  40b85f:	loopne 0x40b82a
  40b861:	rcr    DWORD PTR [ebx+0x43956652],1
  40b867:	outs   dx,DWORD PTR ds:[esi]
  40b868:	ss ret 
  40b86a:	lahf   
  40b86b:	adc    BYTE PTR [ebp+0x24],cl
  40b86e:	in     al,dx
  40b86f:	mov    eax,0x91b2f76
  40b874:	sar    ebx,0x56
  40b877:	popa   
  40b878:	outs   dx,BYTE PTR ds:[esi]
  40b879:	sub    al,0x94
  40b87b:	fstp   QWORD PTR ds:0x4a952630
  40b881:	js     0x40b841
  40b883:	cli    
  40b884:	out    dx,eax
  40b885:	in     eax,0xcf
  40b887:	or     cl,bh
  40b889:	mov    ecx,0x36d8922f
  40b88e:	outs   dx,DWORD PTR ds:[esi]
  40b88f:	adc    al,0x20
  40b891:	or     al,0x46
  40b893:	imul   eax,esi,0xbaaef575
  40b899:	lahf   
  40b89a:	xchg   edx,eax
  40b89b:	xor    edi,ecx
  40b89d:	jno    0x40b8dc
  40b89f:	pop    es
  40b8a0:	lea    esi,[eax-0x1a]
  40b8a3:	(bad)  
  40b8a4:	fcmovnu st,st(2)
  40b8a6:	push   ds
  40b8a7:	call   0xc30dba08
  40b8ac:	jb     0x40b92c
  40b8ae:	xlat   BYTE PTR ds:[ebx]
  40b8af:	daa    
  40b8b0:	or     eax,0x45342d70
  40b8b5:	jbe    0x40b8df
  40b8b7:	pop    es
  40b8b8:	test   al,0xea
  40b8ba:	rcr    BYTE PTR [esi-0x70],1
  40b8bd:	or     al,0x38
  40b8bf:	jp     0x40b8f7
  40b8c1:	or     ebx,edi
  40b8c3:	dec    edx
  40b8c4:	popa   
  40b8c5:	loopne 0x40b8a1
  40b8c7:	mov    cl,0x41
  40b8c9:	mov    edx,0x8d4f37ed
  40b8ce:	mov    ds:0xd16c7db4,al
  40b8d3:	cli    
  40b8d4:	mov    WORD PTR [ebp+0x1bc9ce05],fs
  40b8da:	hlt    
  40b8db:	das    
  40b8dc:	jle    0x40b8c6
  40b8de:	jne    0x40b8e8
  40b8e0:	fisubr DWORD PTR [edx]
  40b8e2:	cdq    
  40b8e3:	dec    edi
  40b8e4:	xor    BYTE PTR [esi+0x3d770933],cl
  40b8ea:	inc    edx
  40b8eb:	and    DWORD PTR [ecx+ebp*1-0x74],esp
  40b8ef:	fdivr  QWORD PTR [esi+edi*1]
  40b8f2:	mov    ecx,0x43ea13cc
  40b8f7:	loopne 0x40b890
  40b8f9:	mov    ds:0x4e1dcd30,eax
  40b8fe:	cdq    
  40b8ff:	nop
  40b900:	add    ah,cl
  40b902:	mov    ds:0xd9038eb0,al
  40b907:	ret    0xf672
  40b90a:	imul   esi,DWORD PTR [eax],0x1c
  40b90d:	test   BYTE PTR [ebp-0x38],al
  40b910:	pcmpeqw mm7,QWORD PTR [esi+0x41]
  40b914:	sbb    ah,dh
  40b916:	aad    0x78
  40b918:	mov    esi,0xa1a8f0c3
  40b91d:	lods   al,BYTE PTR ds:[esi]
  40b91e:	or     edi,DWORD PTR [eax+esi*2]
  40b921:	rcr    al,1
  40b923:	jecxz  0x40b99c
  40b925:	inc    esi
  40b926:	xchg   edi,eax
  40b927:	dec    ebp
  40b928:	add    edi,edi
  40b92a:	std    
  40b92b:	jnp    0x40b984
  40b92d:	test   DWORD PTR [ebp+0x6],ebx
  40b930:	repz cmc 
  40b932:	out    0x66,al
  40b934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b935:	addr16 xchg ebx,eax
  40b937:	rol    dl,1
  40b939:	sbb    eax,0x3da0e1b1
  40b93e:	into   
  40b93f:	dec    ebp
  40b940:	xchg   DWORD PTR [edx+0x503bbb9c],esp
  40b946:	cs (bad) 
  40b948:	sahf   
  40b949:	je     0x40b942
  40b94b:	clc    
  40b94c:	ret    0x1e8c
  40b94f:	xchg   edx,eax
  40b950:	cmp    edx,DWORD PTR [ebx-0x2c9073bb]
  40b956:	sbb    dl,BYTE PTR [ebp+0x75]
  40b959:	pop    ecx
  40b95a:	sbb    dl,BYTE PTR [esp+eax*2-0x5b9cbff0]
  40b961:	js     0x40b92c
  40b963:	sbb    DWORD PTR [ebp-0x49],0xffffffc2
  40b967:	je     0x40b95e
  40b969:	push   esi
  40b96a:	xchg   esi,eax
  40b96b:	cmp    DWORD PTR [edx],0xe8826d1c
  40b971:	jb     0x40b997
  40b973:	aaa    
  40b974:	jo     0x40b993
  40b976:	mov    al,ds:0x876727c9
  40b97b:	add    BYTE PTR [ebx-0x15],dl
  40b97e:	stos   DWORD PTR es:[edi],eax
  40b97f:	push   ebx
  40b980:	nop
  40b981:	add    dh,BYTE PTR [ebp+0x41]
  40b984:	ins    BYTE PTR es:[edi],dx
  40b985:	push   ss
  40b986:	sub    edi,ecx
  40b988:	cmp    BYTE PTR [ecx+0x19ef32c2],ch
  40b98e:	xor    esp,DWORD PTR [edx+0x40]
  40b991:	les    ebp,FWORD PTR [ebp+0x1b]
  40b994:	dec    edi
  40b995:	dec    ecx
  40b996:	sbb    eax,0xefd742ce
  40b99b:	enter  0x7848,0xaa
  40b99f:	icebp  
  40b9a0:	push   0xffffffa2
  40b9a2:	pushf  
  40b9a3:	mov    DWORD PTR [eax],ebp
  40b9a5:	adc    DWORD PTR [ebx],0x5edffa6e
  40b9ab:	jge    0x40b97f
  40b9ad:	retf   0x2af6
  40b9b0:	mov    al,0x77
  40b9b2:	data16 add al,0x95
  40b9b5:	and    ebp,eax
  40b9b7:	lds    esp,FWORD PTR [ebp-0x3717de64]
  40b9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9be:	pop    eax
  40b9bf:	int3   
  40b9c0:	(bad)  
  40b9c1:	fcmovnu st,st(2)
  40b9c3:	ret    0x742
  40b9c6:	hlt    
  40b9c7:	int3   
  40b9c8:	leave  
  40b9c9:	jge    0x40ba02
  40b9cb:	dec    ebp
  40b9cc:	aas    
  40b9cd:	dec    edx
  40b9ce:	or     al,0xe8
  40b9d0:	mov    al,0x22
  40b9d2:	popa   
  40b9d3:	jp     0x40b9a4
  40b9d5:	pop    edx
  40b9d6:	in     eax,0x9e
  40b9d8:	sub    bh,BYTE PTR [edi+0x1]
  40b9db:	sbb    esp,esi
  40b9dd:	adc    al,bl
  40b9df:	mov    esp,0xace5588a
  40b9e4:	not    BYTE PTR [esi-0x43]
  40b9e7:	es or  ecx,eax
  40b9ea:	cwde   
  40b9eb:	(bad)  
  40b9ec:	fild   QWORD PTR [ebp+ecx*2+0x5fddaab2]
  40b9f3:	add    al,0x6e
  40b9f5:	pop    edx
  40b9f6:	dec    eax
  40b9f7:	push   ds
  40b9f8:	lods   eax,DWORD PTR ds:[esi]
  40b9f9:	bound  ebp,QWORD PTR [edx]
  40b9fb:	dec    esi
  40b9fc:	adc    al,0xaf
  40b9fe:	add    eax,0x7a15b90a
  40ba03:	imul   esi,eax,0x168f4651
  40ba09:	jecxz  0x40ba1e
  40ba0b:	retf   
  40ba0c:	pop    esi
  40ba0d:	pushf  
  40ba0e:	add    BYTE PTR ds:0x93e87d52,ch
  40ba14:	sbb    cl,BYTE PTR fs:[ebp+0x62]
  40ba18:	lea    esp,[ecx-0x71]
  40ba1b:	jle    0x40b9b7
  40ba1d:	daa    
  40ba1e:	js     0x40b9f3
  40ba20:	gs pop edx
  40ba22:	mov    bh,0x4f
  40ba24:	add    eax,0x77927718
  40ba29:	sbb    DWORD PTR [ebp-0x42893733],edi
  40ba2f:	cmp    al,0x9
  40ba31:	jo     0x40ba00
  40ba33:	push   esi
  40ba34:	dec    edx
  40ba35:	jbe    0x40ba0d
  40ba37:	rol    BYTE PTR [esi+0x71238c85],cl
  40ba3d:	xor    DWORD PTR [ebp-0xaf60136],esp
  40ba43:	pop    eax
  40ba44:	xor    al,0xe1
  40ba46:	fmulp  st(3),st
  40ba48:	dec    esp
  40ba49:	and    al,0xe8
  40ba4b:	call   0x369fbe67
  40ba50:	pop    ecx
  40ba51:	jl     0x40b9e5
  40ba53:	mov    cl,BYTE PTR [edi]
  40ba55:	dec    edi
  40ba56:	pop    ss
  40ba57:	adc    DWORD PTR [eax+edi*2-0x479b099],0xffffff9e
  40ba5f:	add    DWORD PTR [eax],0xc
  40ba62:	ins    BYTE PTR es:[edi],dx
  40ba63:	dec    edi
  40ba64:	daa    
  40ba65:	push   es
  40ba66:	test   DWORD PTR [ebx-0x79],edx
  40ba69:	mov    esi,DWORD PTR [esi+0x6123a7d5]
  40ba6f:	mov    eax,0x115ae936
  40ba74:	out    dx,eax
  40ba75:	jge    0x40bac7
  40ba77:	cwde   
  40ba78:	mov    edx,0xdc81c29c
  40ba7d:	add    eax,0xb787b08d
  40ba82:	cs iret 
  40ba84:	xor    bh,BYTE PTR [edi]
  40ba86:	arpl   WORD PTR [ebx-0x44],dx
  40ba89:	fld    QWORD PTR [esi-0x6f]
  40ba8c:	jmp    0x7b2447ae
  40ba91:	sub    DWORD PTR [eax+ebp*1],esi
  40ba94:	inc    ebp
  40ba95:	and    BYTE PTR [edi+0x44cf1ea2],cl
  40ba9b:	dec    esp
  40ba9c:	int    0x8a
  40ba9e:	mov    esi,0xb6adc0e1
  40baa3:	sub    al,bh
  40baa5:	cmp    eax,0x4e7985a8
  40baaa:	push   esp
  40baab:	cmp    eax,0xddb3c093
  40bab0:	repz push esp
  40bab2:	sbb    esi,eax
  40bab4:	out    0x1,eax
  40bab6:	inc    esi
  40bab7:	retf   0x42b
  40baba:	jbe    0x40bb14
  40babc:	cmp    ecx,DWORD PTR [edi-0x78]
  40babf:	push   ebx
  40bac0:	jge    0x40ba79
  40bac2:	mov    WORD PTR [edi-0xa],?
  40bac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac7:	sub    dh,BYTE PTR [edx+esi*8+0x3]
  40bacb:	stc    
  40bacc:	push   0xb983e7aa
  40bad1:	sub    al,0x12
  40bad3:	pop    ds
  40bad4:	sub    al,0xc4
  40bad6:	push   ecx
  40bad7:	jle    0x40bb30
  40bad9:	out    dx,eax
  40bada:	sar    BYTE PTR [esi+0x4b],0xbb
  40bade:	inc    ebp
  40badf:	ret    0x70b1
  40bae2:	loop   0x40bb0d
  40bae4:	mov    ?,WORD PTR ds:0x64ddc8e7
  40baea:	sbb    DWORD PTR [edi-0x737ec6fd],eax
  40baf0:	loopne 0x40bb55
  40baf2:	xchg   ebp,eax
  40baf3:	test   DWORD PTR [ecx],0xeeb840e5
  40baf9:	inc    ebp
  40bafa:	push   ebp
  40bafb:	pop    esp
  40bafc:	ja     0x40baf0
  40bafe:	push   0xffffffbd
  40bb00:	cld    
  40bb01:	add    eax,0x203ea7f9
  40bb06:	cld    
  40bb07:	fiadd  WORD PTR [edx]
  40bb09:	and    eax,0xa0d1742a
  40bb0e:	sbb    BYTE PTR [esi-0x44f89f11],0x6e
  40bb15:	xchg   edi,eax
  40bb16:	jns    0x40bb86
  40bb18:	or     DWORD PTR [ebx+eiz*4-0x707000e1],esi
  40bb1f:	jp     0x40bb18
  40bb21:	bnd ret 0x69ec
  40bb25:	adc    DWORD PTR [edi],eax
  40bb27:	hlt    
  40bb28:	xor    eax,0xcae5737b
  40bb2d:	pop    edi
  40bb2e:	adc    eax,0x35e77119
  40bb33:	add    dl,BYTE PTR [esi]
  40bb35:	in     al,0xec
  40bb37:	test   dl,0x35
  40bb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3b:	mov    cl,0xfd
  40bb3d:	iret   
  40bb3e:	ss xchg ebp,eax
  40bb40:	xchg   esp,esi
  40bb42:	xchg   ebp,eax
  40bb43:	call   0x8127:0x9c50475d
  40bb4a:	mov    cl,0x7
  40bb4c:	adc    eax,0xc6aabcb0
  40bb51:	in     al,dx
  40bb52:	retf   0x2479
  40bb55:	in     eax,0xe3
  40bb57:	adc    BYTE PTR [esi+0x27778a48],bh
  40bb5d:	mov    ebx,0xc798aa4f
  40bb62:	mov    ebp,0x500988b
  40bb67:	jns    0x40bb30
  40bb69:	xor    al,0xb9
  40bb6b:	in     eax,dx
  40bb6c:	aam    0x2e
  40bb6e:	and    cl,dh
  40bb70:	push   es
  40bb71:	cwde   
  40bb72:	scas   eax,DWORD PTR es:[edi]
  40bb73:	bound  edx,QWORD PTR [edi-0x6c1806e2]
  40bb79:	(bad)  
  40bb7a:	pop    esp
  40bb7b:	mov    ecx,esp
  40bb7d:	outs   dx,BYTE PTR ds:[esi]
  40bb7e:	mov    ebp,DWORD PTR [edx]
  40bb80:	les    edx,FWORD PTR [edx+ebp*4-0x7a]
  40bb84:	push   0x970de3d4
  40bb89:	hlt    
  40bb8a:	imul   eax,DWORD PTR [ecx],0x6a
  40bb8d:	cs loop 0x40bc02
  40bb90:	adc    ah,ch
  40bb92:	jmp    0x40bbf1
  40bb94:	stos   DWORD PTR es:[edi],eax
  40bb95:	popf   
  40bb96:	std    
  40bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb98:	pushf  
  40bb99:	jnp    0x40bb46
  40bb9b:	push   esi
  40bb9c:	data16 out dx,al
  40bb9e:	shl    BYTE PTR [edi+0x59],cl
  40bba1:	mov    DWORD PTR [ecx-0x51],edi
  40bba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba5:	faddp  st(4),st
  40bba7:	popf   
  40bba8:	pop    es
  40bba9:	mov    ch,0x35
  40bbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbac:	xor    BYTE PTR [ecx-0x4c],ah
  40bbaf:	ret    
  40bbb0:	pop    esp
  40bbb1:	and    esp,ebp
  40bbb3:	sahf   
  40bbb4:	lods   eax,DWORD PTR ds:[esi]
  40bbb5:	adc    ecx,DWORD PTR [ecx]
  40bbb7:	les    eax,FWORD PTR [eax+0x1fa1251c]
  40bbbd:	wrmsr  
  40bbbf:	ins    BYTE PTR es:[edi],dx
  40bbc0:	icebp  
  40bbc1:	xor    ah,BYTE PTR [eax+0x29]
  40bbc4:	mov    ah,0x1a
  40bbc6:	pop    esp
  40bbc7:	repz rcr dh,1
  40bbca:	repnz adc DWORD PTR [edx],esp
  40bbcd:	or     al,0xc
  40bbcf:	sahf   
  40bbd0:	sar    BYTE PTR [edi+ebx*8-0x634bcff0],cl
  40bbd7:	cli    
  40bbd8:	inc    esi
  40bbd9:	mov    edx,0x318208a9
  40bbde:	stos   DWORD PTR es:[edi],eax
  40bbdf:	ss es int3 
  40bbe2:	retf   
  40bbe3:	mov    ebx,0xd989fb93
  40bbe8:	lock push edi
  40bbea:	setae  ah
  40bbed:	jo     0x40bc56
  40bbef:	push   ebx
  40bbf0:	and    bl,BYTE PTR [ebp+0x37861f19]
  40bbf6:	loope  0x40bc1d
  40bbf8:	fsubr  DWORD PTR gs:[ecx]
  40bbfb:	or     DWORD PTR [eax],esi
  40bbfd:	or     dl,BYTE PTR [ebx+0x67]
  40bc00:	in     al,dx
  40bc01:	cdq    
  40bc02:	dec    ecx
  40bc03:	push   ebx
  40bc04:	push   ds
  40bc05:	in     al,dx
  40bc06:	or     al,0x3b
  40bc08:	sub    eax,0x46b5bdf6
  40bc0d:	and    esi,DWORD PTR [eax]
  40bc0f:	inc    edi
  40bc10:	leave  
  40bc11:	or     dl,BYTE PTR [edx+eax*4]
  40bc14:	out    dx,al
  40bc15:	je     0x40bb97
  40bc17:	add    esp,DWORD PTR [eax+ecx*2]
  40bc1a:	xor    DWORD PTR [eax],edi
  40bc1c:	or     eax,0xd3726d8c
  40bc21:	mov    ch,0x1c
  40bc23:	dec    edi
  40bc24:	mov    ebp,0x64215ff2
  40bc29:	mov    dl,0x12
  40bc2b:	adc    DWORD PTR [edx-0x41],ebp
  40bc2e:	mov    dl,0xd0
  40bc30:	es jp  0x40bc15
  40bc33:	call   0x4b253ecf
  40bc38:	dec    edx
  40bc39:	mov    dl,0xb9
  40bc3b:	push   0x5e
  40bc3d:	jl     0x40bc66
  40bc3f:	out    0xc7,eax
  40bc41:	inc    eax
  40bc42:	or     DWORD PTR [eax],edx
  40bc44:	sahf   
  40bc45:	inc    esi
  40bc46:	or     BYTE PTR [ecx+eax*1-0x49],bh
  40bc4a:	(bad)
  40bc4e:	add    esi,ebx
  40bc50:	(bad)  
  40bc52:	xor    eax,0xb258cc6d
  40bc57:	xor    dh,bh
  40bc59:	mov    dh,0xdf
  40bc5b:	clc    
  40bc5c:	popf   
  40bc5d:	out    0xed,eax
  40bc5f:	fld    DWORD PTR ds:0x7643d0a
  40bc65:	pop    ebp
  40bc66:	in     eax,0x2c
  40bc68:	div    DWORD PTR [esi]
  40bc6a:	xchg   edx,eax
  40bc6b:	ficom  WORD PTR [esi-0x68233bc6]
  40bc71:	jbe    0x40bc9a
  40bc73:	sbb    esp,DWORD PTR [edi+ebx*8+0x77c9f64b]
  40bc7a:	jge    0x40bc1a
  40bc7c:	mov    fs,ecx
  40bc7e:	out    0xe5,eax
  40bc80:	mov    ch,BYTE PTR [eax-0x45]
  40bc83:	cmp    BYTE PTR [edx],0xd4
  40bc86:	pop    esi
  40bc87:	shr    BYTE PTR ds:0x36c31f9d,0xd9
  40bc8e:	popf   
  40bc8f:	xor    DWORD PTR [edi+0x7c],esi
  40bc92:	or     DWORD PTR [ecx+0x6c],ebx
  40bc95:	jmp    0x32becb7b
  40bc9a:	xchg   BYTE PTR [eax+0x45ac1205],al
  40bca0:	cdq    
  40bca1:	iret   
  40bca2:	(bad)  
  40bca3:	pop    ds
  40bca4:	and    eax,DWORD PTR [edx-0x77740cb9]
  40bcaa:	sub    eax,esp
  40bcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcad:	adc    al,0xf7
  40bcaf:	and    cl,BYTE PTR [ebx]
  40bcb1:	dec    ebx
  40bcb2:	gs cmc 
  40bcb4:	cwde   
  40bcb5:	inc    ebx
  40bcb6:	mov    ebx,0x82199708
  40bcbb:	mov    edx,0x93726fb8
  40bcc0:	ret    0x44eb
  40bcc3:	je     0x40bcf9
  40bcc5:	rol    DWORD PTR [edx+0x13],0x28
  40bcc9:	sub    ch,BYTE PTR [edx-0x164df85]
  40bccf:	lock add al,0x3d
  40bcd2:	hlt    
  40bcd3:	add    ah,0x25
  40bcd6:	ds sti 
  40bcd8:	inc    esp
  40bcd9:	pusha  
  40bcda:	retf   0x2daf
  40bcdd:	sub    DWORD PTR [ecx+0x42],eax
  40bce0:	ins    DWORD PTR es:[edi],dx
  40bce1:	adc    edi,DWORD PTR [edi+0x6b]
  40bce4:	inc    eax
  40bce5:	outs   dx,DWORD PTR ds:[esi]
  40bce6:	mov    esi,0x1cac605d
  40bceb:	xchg   DWORD PTR [esi+0x52],edx
  40bcee:	data16 je 0x40bcce
  40bcf1:	popf   
  40bcf2:	mov    edi,0x99952928
  40bcf7:	cli    
  40bcf8:	fimul  DWORD PTR [edx]
  40bcfa:	int    0x14
  40bcfc:	sbb    eax,ebx
  40bcfe:	sub    al,0xf4
  40bd00:	scas   eax,DWORD PTR es:[edi]
  40bd01:	jbe    0x40bd5f
  40bd03:	mov    ebx,0x34d69a88
  40bd08:	jae    0x40bd77
  40bd0a:	into   
  40bd0b:	xor    al,bh
  40bd0d:	popf   
  40bd0e:	pop    edx
  40bd0f:	adc    eax,0x78757313
  40bd14:	fsub   QWORD PTR [ecx+0x5e698086]
  40bd1a:	jb     0x40bd60
  40bd1c:	out    0xcb,al
  40bd1e:	les    ecx,FWORD PTR [esp+ecx*1]
  40bd21:	cmp    BYTE PTR [ebx],ch
  40bd23:	or     ebx,0x75a4259c
  40bd29:	push   esi
  40bd2a:	xor    eax,0x51b7aca1
  40bd2f:	int3   
  40bd30:	push   esi
  40bd31:	fnstsw WORD PTR ds:0xae4c260d
  40bd37:	call   0x5cc7caee
  40bd3c:	cmp    ecx,0xd64e80bc
  40bd42:	xchg   DWORD PTR [esi*4-0x1873d217],ebx
  40bd49:	in     eax,dx
  40bd4a:	(bad)  
  40bd4b:	cmp    eax,0x3780fe1d
  40bd50:	lea    ebp,es:[ecx+0x28]
  40bd54:	mov    cs,WORD PTR [ebp+0x14a8fdd4]
  40bd5a:	mov    ch,0x8a
  40bd5c:	jecxz  0x40bd32
  40bd5e:	test   BYTE PTR [edi+eax*2],bh
  40bd61:	mov    ds,WORD PTR [esi-0x7f]
  40bd64:	xlat   BYTE PTR es:[ebx]
  40bd66:	and    DWORD PTR [edi+0x2684fb3],esp
  40bd6c:	jne    0x40bd84
  40bd6e:	(bad)  
  40bd6f:	call   0x9aa4:0xfec8decc
  40bd76:	out    dx,al
  40bd77:	sub    DWORD PTR [edx],ecx
  40bd79:	nop
  40bd7a:	mov    eax,ds:0x6c5b873d
  40bd7f:	and    bl,bl
  40bd81:	sub    al,ah
  40bd83:	retf   
  40bd84:	mov    ds:0x76f16657,eax
  40bd89:	mov    ds:0x3d9d3d60,eax
  40bd8e:	scas   al,BYTE PTR es:[edi]
  40bd8f:	add    dl,BYTE PTR [ecx-0xf3b9e9c]
  40bd95:	pop    ss
  40bd96:	in     eax,0xc2
  40bd98:	or     ebp,DWORD PTR [ebx]
  40bd9a:	lods   al,BYTE PTR ds:[esi]
  40bd9b:	cwde   
  40bd9c:	mov    al,0xc1
  40bd9e:	shl    al,0xcb
  40bda1:	out    dx,al
  40bda2:	add    DWORD PTR [eax+0x4a],0xffffffff
  40bda6:	retf   0x73d2
  40bda9:	jnp    0x40bd68
  40bdab:	les    eax,FWORD PTR [ebp-0x6fea8266]
  40bdb1:	stos   DWORD PTR es:[edi],eax
  40bdb2:	out    0x93,al
  40bdb4:	repz push 0xace58003
  40bdba:	cmp    ebp,DWORD PTR [eax]
  40bdbc:	sahf   
  40bdbd:	cmc    
  40bdbe:	cmp    BYTE PTR [ebp-0x4a],bh
  40bdc1:	stos   BYTE PTR es:[edi],al
  40bdc2:	retf   
  40bdc3:	ds lock icebp 
  40bdc6:	cmp    edi,edi
  40bdc8:	in     eax,0xbb
  40bdca:	or     bl,BYTE PTR [ebp+ebp*8+0xedfe4ff]
  40bdd1:	loope  0x40bd89
  40bdd3:	add    eax,0xeff43a2d
  40bdd8:	jne    0x40bdbc
  40bdda:	iret   
  40bddb:	sub    cl,BYTE PTR [ebx-0x78392631]
  40bde1:	dec    esi
  40bde2:	ret    
  40bde3:	mov    ds:0xd86262b8,eax
  40bde8:	hlt    
  40bde9:	outs   dx,BYTE PTR ds:[esi]
  40bdea:	mov    al,ds:0xbb6958ef
  40bdef:	loop   0x40be07
  40bdf1:	lahf   
  40bdf2:	out    dx,al
  40bdf3:	js     0x40be53
  40bdf5:	(bad)  
  40bdf6:	ret    0x4c9a
  40bdf9:	sub    al,0x76
  40bdfb:	push   edx
  40bdfc:	lahf   
  40bdfd:	push   0xc
  40bdff:	mov    esp,ebx
  40be01:	mov    dl,BYTE PTR [edx+0x663585d]
  40be07:	loop   0x40be84
  40be09:	pop    edx
  40be0a:	les    esp,FWORD PTR [ebp+ecx*8-0x18]
  40be0e:	int    0x35
  40be10:	popa   
  40be11:	sbb    eax,ebp
  40be13:	push   esi
  40be14:	mov    ebp,0x9bc9a2b9
  40be19:	neg    bl
  40be1b:	and    al,0xa7
  40be1d:	push   0x949ce135
  40be22:	mov    esi,0xfd76b4b8
  40be27:	push   esi
  40be28:	nop
  40be29:	cmp    al,0x75
  40be2b:	push   edx
  40be2c:	ja     0x40be3e
  40be2e:	es or  eax,0x2d2099c1
  40be34:	out    0xf2,al
  40be36:	xor    DWORD PTR [eax],ecx
  40be38:	mov    ds:0x235fd356,eax
  40be3d:	xchg   ebp,eax
  40be3e:	sub    eax,0xf9bbb832
  40be43:	jne    0x40bdec
  40be45:	push   ecx
  40be46:	jmp    0x40beb8
  40be48:	(bad)  
  40be49:	xor    al,0xd0
  40be4b:	cmp    BYTE PTR [ecx-0x6c],dh
  40be4e:	cwde   
  40be4f:	(bad)  
  40be51:	iret   
  40be52:	xlat   BYTE PTR cs:[ebx]
  40be54:	call   0xdf23:0x2dda3389
  40be5b:	mov    eax,0x6dd1ba28
  40be60:	sbb    bh,bl
  40be62:	or     eax,DWORD PTR [ebx+0x44]
  40be65:	stos   BYTE PTR es:[edi],al
  40be66:	les    eax,FWORD PTR [ebx]
  40be68:	and    bh,BYTE PTR [ebp-0x762813dd]
  40be6e:	jg     0x40be27
  40be70:	mov    ch,0x75
  40be72:	xlat   BYTE PTR ds:[ebx]
  40be73:	repz cmp BYTE PTR [eax+0x44],cl
  40be77:	jp     0x40be94
  40be79:	mov    ecx,0x1de396c6
  40be7e:	dec    ecx
  40be7f:	sbb    esp,DWORD PTR [edi]
  40be81:	pop    ds
  40be82:	ins    DWORD PTR es:[edi],dx
  40be83:	retf   0x5241
  40be86:	(bad)  
  40be87:	in     al,0x1
  40be89:	fidivr DWORD PTR [eax]
  40be8b:	stos   BYTE PTR es:[edi],al
  40be8c:	add    BYTE PTR [ebp+0x30],dl
  40be8f:	push   cs
  40be90:	pop    esp
  40be91:	pusha  
  40be92:	pop    es
  40be93:	mov    ecx,0x81473912
  40be98:	inc    ebp
  40be99:	xchg   esp,eax
  40be9a:	lock js 0x40be7a
  40be9d:	sub    BYTE PTR [eax*4+0x26162959],0xfe
  40bea5:	enter  0xd628,0x6a
  40bea9:	and    ebx,0x23e81588
  40beaf:	scas   al,BYTE PTR es:[edi]
  40beb0:	fidiv  WORD PTR [eax+0x118d5446]
  40beb6:	shr    DWORD PTR [esi-0x44],0x83
  40beba:	mov    ds:0xe2f481e7,eax
  40bebf:	inc    eax
  40bec0:	and    BYTE PTR ds:0xbf038511,dh
  40bec6:	or     DWORD PTR [edx-0x6c953303],ebp
  40becc:	xor    ch,BYTE PTR [ebx+0x18df9f0e]
  40bed2:	lahf   
  40bed3:	icebp  
  40bed4:	push   edx
  40bed5:	jnp    0xb04dd821
  40bedb:	xor    al,0x61
  40bedd:	inc    ebp
  40bede:	cmp    eax,0x5f8c8448
  40bee3:	xor    BYTE PTR [edi],cl
  40bee5:	je     0x40bf57
  40bee7:	mov    dh,0xe6
  40bee9:	arpl   WORD PTR [ecx+edx*1-0x2230aac5],ax
  40bef0:	mov    DWORD PTR [edx+ecx*1+0x1f],esp
  40bef4:	add    BYTE PTR [ebx+ebp*2+0x19],ch
  40bef8:	call   0xff3d:0xf5100bff
  40beff:	fisttp QWORD PTR [esi-0x784e1fa3]
  40bf05:	sahf   
  40bf06:	mov    esi,0xa1d3b102
  40bf0b:	(bad)  
  40bf0c:	mov    dh,0xfd
  40bf0e:	xor    al,0x67
  40bf10:	loop   0x40bf60
  40bf12:	arpl   WORD PTR [ebx-0x5e],bx
  40bf15:	out    0xd9,al
  40bf17:	or     DWORD PTR [eax+ebx*2+0x42c60d40],ebx
  40bf1e:	test   DWORD PTR [eax-0x7b],ecx
  40bf21:	jmp    0x5412:0xb6528643
  40bf28:	scas   al,BYTE PTR es:[edi]
  40bf29:	mov    ebx,0x271cc24d
  40bf2e:	cwde   
  40bf2f:	pop    edx
  40bf30:	fild   WORD PTR [ebp+0x571dc020]
  40bf36:	push   esp
  40bf37:	mov    ebp,?
  40bf39:	push   0xf200c29b
  40bf3e:	mov    gs,WORD PTR [ecx-0x73fc39ae]
  40bf44:	adc    bh,cl
  40bf46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf47:	jnp    0x40bfbd
  40bf49:	retf   0xdd08
  40bf4c:	loope  0x40bedd
  40bf4e:	cmovl  ecx,ebx
  40bf51:	int3   
  40bf52:	xchg   BYTE PTR ds:0x18b5be74,dh
  40bf58:	dec    eax
  40bf59:	mov    al,ds:0xbeb909a8
  40bf5e:	in     eax,dx
  40bf5f:	or     al,0x96
  40bf61:	and    eax,0x3c24bc60
  40bf66:	xlat   BYTE PTR ds:[ebx]
  40bf67:	and    ebp,esi
  40bf69:	jg     0x40bfde
  40bf6b:	push   0xffffffb0
  40bf6d:	fmul   st,st(1)
  40bf6f:	inc    ebx
  40bf70:	dec    ebp
  40bf71:	retf   0xcb9c
  40bf74:	not    BYTE PTR [eax-0x15]
  40bf77:	loopne 0x40bfc9
  40bf79:	hlt    
  40bf7a:	push   edx
  40bf7b:	pop    ebp
  40bf7c:	mov    dh,0xe1
  40bf7e:	fdivr  DWORD PTR [ebx-0xfacdfc5]
  40bf84:	xchg   DWORD PTR [esi],edx
  40bf86:	cmp    ecx,DWORD PTR [ebp+edx*2-0x432483d6]
  40bf8d:	imul   esp,DWORD PTR ds:0x251dc28d,0xf2c1c0dc
  40bf97:	into   
  40bf98:	cmp    DWORD PTR [ebx+0x35ab3689],esp
  40bf9e:	fidivr WORD PTR [ecx+edx*4+0x7fae420b]
  40bfa5:	and    dl,BYTE PTR [ecx-0xf]
  40bfa8:	sbb    al,0x53
  40bfaa:	js     0x40bf57
  40bfac:	xor    DWORD PTR [edi-0x6467c80d],esp
  40bfb2:	dec    eax
  40bfb3:	xchg   BYTE PTR [ebp+0x29e0aed0],cl
  40bfb9:	je     0x40bfd6
  40bfbb:	ja     0x40bfec
  40bfbd:	mov    ah,0xa7
  40bfbf:	dec    ebx
  40bfc0:	mov    al,0x22
  40bfc2:	sub    al,0x28
  40bfc4:	push   ds
  40bfc5:	cmp    eax,0xffffff97
  40bfc8:	ficomp DWORD PTR [ebp+0x69]
  40bfcb:	mov    eax,0xc9d1b401
  40bfd0:	xchg   ebx,eax
  40bfd1:	imul   esi,DWORD PTR [edi],0x9063a3bc
  40bfd7:	and    DWORD PTR [eax-0x2647c797],ebx
  40bfdd:	jge    0x40c039
  40bfdf:	in     al,dx
  40bfe0:	and    al,0x8e
  40bfe2:	fs loop 0x40bff0
  40bfe5:	cli    
  40bfe6:	cmp    BYTE PTR ds:0x7d51e3a0,0x71
  40bfed:	jb     0x40bfc4
  40bfef:	mov    DWORD PTR [ebx*2-0xa892caa],ebp
  40bff6:	dec    edx
  40bff7:	jmp    0xd795:0x410f9032
  40bffe:	stos   DWORD PTR es:[edi],eax
  40bfff:	test   DWORD PTR [ecx],ebx
  40c001:	aam    0x8a
  40c003:	mov    ah,0xff
  40c005:	push   es
  40c006:	mov    bl,cl
  40c008:	mov    edx,0xe9c2929e
  40c00d:	imul   ebx,DWORD PTR [ebp-0x2c0a6bf7],0xb
  40c014:	js     0x40c016
  40c016:	arpl   WORD PTR [edi+ebx*4],bx
  40c019:	lods   eax,DWORD PTR ds:[esi]
  40c01a:	(bad)  
  40c01b:	cld    
  40c01c:	push   0xffffffb7
  40c01e:	fist   DWORD PTR [eax]
  40c020:	icebp  
  40c021:	rol    DWORD PTR [esi-0x67],cl
  40c024:	sbb    esp,DWORD PTR [ecx+0x36]
  40c027:	mov    al,ds:0xe106b99a
  40c02c:	leave  
  40c02d:	(bad)  
  40c02e:	lea    esp,[ebp+0x35]
  40c031:	in     eax,dx
  40c032:	cmp    eax,DWORD PTR [esi+eax*2+0x23672df]
  40c039:	cmc    
  40c03a:	mov    edi,0x4f02ac42
  40c03f:	add    eax,0x9195cfe7
  40c044:	sbb    ah,dl
  40c046:	xlat   BYTE PTR ds:[ebx]
  40c047:	xor    esp,esp
  40c049:	imul   esp,DWORD PTR [ecx-0x7c4d6a55],0x2386047
  40c053:	retf   0x533a
  40c056:	pop    ecx
  40c058:	inc    edi
  40c059:	scas   eax,DWORD PTR es:[edi]
  40c05a:	mov    ds:0x6aa4cef6,eax
  40c05f:	ror    DWORD PTR [ebx+0xf],0xbf
  40c063:	cs push edi
  40c065:	fst    QWORD PTR [ebp-0x2e554737]
  40c06b:	mov    cl,0x25
  40c06d:	aaa    
  40c06e:	cmp    BYTE PTR [ebx+edx*2],al
  40c071:	inc    ebp
  40c072:	popf   
  40c073:	and    ebp,esp
  40c075:	lods   eax,DWORD PTR ds:[esi]
  40c076:	dec    esi
  40c077:	sahf   
  40c078:	xor    al,BYTE PTR [edi-0xa]
  40c07b:	inc    eax
  40c07c:	adc    eax,0x77061d5a
  40c081:	mov    ss,WORD PTR [eax+edi*2+0x1509b270]
  40c088:	jg     0x40c024
  40c08a:	mov    esi,0x7eb26e0d
  40c08f:	(bad)  
  40c090:	loope  0x40c105
  40c092:	adc    DWORD PTR [ebp+0x9fd2da4],0xfbd99441
  40c09c:	mov    dl,0x31
  40c09e:	ds mov edx,0xd7f2dc57
  40c0a4:	fidivr DWORD PTR [ecx+eax*4]
  40c0a7:	xor    BYTE PTR [ebp+0x60],cl
  40c0aa:	add    eax,0x55cdbc10
  40c0af:	adc    ebx,DWORD PTR [edx-0x689a97b7]
  40c0b5:	pusha  
  40c0b6:	mov    esi,esi
  40c0b8:	sub    al,0xca
  40c0ba:	jno    0x40c126
  40c0bc:	retf   0x258e
  40c0bf:	aas    
  40c0c0:	dec    edx
  40c0c1:	mov    dh,0x87
  40c0c3:	stos   DWORD PTR es:[edi],eax
  40c0c4:	sub    DWORD PTR [edx-0x42],ecx
  40c0c7:	sbb    BYTE PTR [ebx],bl
  40c0c9:	das    
  40c0ca:	pop    ecx
  40c0cb:	fisubr DWORD PTR [edx+0x3]
  40c0ce:	jge    0x40c054
  40c0d0:	out    0x87,eax
  40c0d2:	fs pop ds
  40c0d4:	call   0x5bf7d2f
  40c0d9:	mov    al,0x12
  40c0db:	mov    ebx,0xae052731
  40c0e0:	jbe    0x40c0f5
  40c0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e3:	ins    DWORD PTR es:[edi],dx
  40c0e4:	mov    DWORD PTR [ebp+0x321eea17],esi
  40c0ea:	inc    eax
  40c0eb:	shl    BYTE PTR [ebx],cl
  40c0ed:	xlat   BYTE PTR ds:[ebx]
  40c0ee:	lock shr DWORD PTR [ecx+edx*4+0x6f],1
  40c0f3:	aad    0xdc
  40c0f5:	sbb    eax,0xcaaf8083
  40c0fa:	ficomp DWORD PTR [edi]
  40c0fc:	pop    ebx
  40c0fd:	div    dh
  40c0ff:	xchg   edi,eax
  40c100:	dec    eax
  40c101:	(bad)  
  40c102:	xor    ebx,DWORD PTR [esi]
  40c104:	push   esi
  40c105:	mov    ch,0x72
  40c107:	add    cl,cl
  40c109:	fisubr WORD PTR [esi-0x6e]
  40c10c:	repnz and DWORD PTR [edx+0x74],0x63
  40c111:	jbe    0x40c0a3
  40c113:	add    BYTE PTR [esi+edi*8+0x4d860a07],al
  40c11a:	xchg   esp,eax
  40c11b:	sbb    eax,0x64c20318
  40c120:	inc    edi
  40c121:	xchg   esi,eax
  40c122:	mov    ds:0xdc037ada,eax
  40c127:	(bad)  
  40c129:	and    al,0x54
  40c12b:	push   ecx
  40c12c:	sbb    ch,cl
  40c12e:	outs   dx,BYTE PTR ds:[esi]
  40c12f:	push   cs
  40c130:	lea    edx,[ebx+0x23]
  40c133:	mov    edi,0xf5588391
  40c138:	(bad)  
  40c139:	ins    DWORD PTR es:[edi],dx
  40c13a:	xor    BYTE PTR [ebx+0x4e],bl
  40c13d:	inc    esi
  40c13e:	in     al,0x10
  40c140:	fs dec ebx
  40c142:	or     dh,al
  40c144:	sub    edi,DWORD PTR [esi+eiz*8]
  40c147:	push   0xd494cddd
  40c14c:	cld    
  40c14d:	mov    cl,0xf
  40c14f:	and    BYTE PTR [esi],0xa8
  40c152:	mov    edx,DWORD PTR [eax+0x4a]
  40c155:	inc    ebp
  40c156:	adc    al,0xdd
  40c158:	rol    BYTE PTR [ebx],0xc7
  40c15b:	push   eax
  40c15c:	xor    edi,esi
  40c15e:	(bad)  
  40c15f:	pop    ds
  40c160:	aas    
  40c161:	(bad)  
  40c162:	cs pop ss
  40c164:	cmp    ebx,esp
  40c166:	mov    esi,0xac09c6dd
  40c16b:	xchg   ecx,eax
  40c16c:	jp     0x40c179
  40c16e:	push   cs
  40c16f:	mov    eax,ds:0x55fc23c9
  40c174:	ins    BYTE PTR es:[edi],dx
  40c175:	ins    BYTE PTR es:[edi],dx
  40c176:	jbe    0x40c133
  40c178:	out    dx,al
  40c179:	popa   
  40c17a:	cmp    esi,esp
  40c17c:	shl    BYTE PTR [edi+0x3a747737],0x83
  40c183:	inc    edi
  40c184:	sahf   
  40c185:	add    edi,0xffffffde
  40c188:	inc    ebx
  40c189:	inc    edi
  40c18a:	icebp  
  40c18b:	mov    eax,0xc14d4219
  40c190:	std    
  40c191:	loopne 0x40c197
  40c193:	call   0x679d3cee
  40c198:	cld    
  40c199:	or     bh,dh
  40c19b:	into   
  40c19c:	ror    DWORD PTR [edi-0x138f1762],0x9e
  40c1a3:	repnz test eax,0x6b5d9551
  40c1a9:	in     eax,0xd8
  40c1ab:	iret   
  40c1ac:	xchg   esi,edi
  40c1ae:	push   ebp
  40c1af:	ja     0x40c207
  40c1b1:	push   ecx
  40c1b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b3:	mul    edi
  40c1b5:	adc    BYTE PTR [ebx-0x1f],dl
  40c1b8:	sub    ebx,DWORD PTR [edi+0x25]
  40c1bb:	or     DWORD PTR [ecx],esi
  40c1bd:	push   0x10
  40c1bf:	lods   eax,DWORD PTR ds:[esi]
  40c1c0:	xchg   ebx,eax
  40c1c1:	cmp    cl,0x26
  40c1c4:	add    eax,0x547a2177
  40c1c9:	mov    ch,0xf4
  40c1cb:	cli    
  40c1cc:	enter  0x265b,0x63
  40c1d0:	or     bl,BYTE PTR [esi-0x61122f0e]
  40c1d6:	fnstcw WORD PTR [ebx]
  40c1d8:	xor    ch,BYTE PTR [eax-0x65b10806]
  40c1de:	or     DWORD PTR es:[esi],esp
  40c1e1:	sub    eax,0x18
  40c1e4:	dec    esi
  40c1e5:	popf   
  40c1e6:	xor    dl,BYTE PTR [ebx-0x29]
  40c1e9:	inc    ebx
  40c1ea:	in     eax,dx
  40c1eb:	loopne 0x40c17a
  40c1ed:	and    BYTE PTR gs:[edx],bh
  40c1f0:	repnz loopne 0x40c19e
  40c1f3:	xchg   edx,eax
  40c1f4:	in     eax,0x27
  40c1f6:	pop    eax
  40c1f7:	sub    eax,0x6c74b3c5
  40c1fc:	ins    BYTE PTR es:[edi],dx
  40c1fd:	inc    ecx
  40c1fe:	fstp   QWORD PTR [ebp+0x6a8ebbcc]
  40c204:	or     eax,0x1fbd5c97
  40c209:	test   al,0x51
  40c20b:	mov    ebx,0x651503cb
  40c210:	add    bh,0xe1
  40c213:	leave  
  40c214:	icebp  
  40c215:	fisub  WORD PTR [edx]
  40c217:	mov    ds:0x27b51136,eax
  40c21c:	mov    edx,0x1966441c
  40c221:	add    bh,BYTE PTR [ecx-0x13]
  40c224:	out    dx,al
  40c225:	pop    ss
  40c226:	mov    dl,0xc0
  40c228:	int3   
  40c229:	inc    BYTE PTR [ebp-0x3]
  40c22c:	mov    edx,0x76d300ee
  40c231:	bound  esi,QWORD PTR [ebx-0x623bbe49]
  40c237:	test   al,0x21
  40c239:	push   ebp
  40c23a:	repnz xor al,0x78
  40c23d:	ja     0x40c206
  40c23f:	clc    
  40c240:	repz and BYTE PTR [edi],bh
  40c243:	mov    dh,0xbe
  40c245:	aas    
  40c246:	pusha  
  40c247:	jmp    0x40c244
  40c249:	ins    DWORD PTR es:[edi],dx
  40c24a:	stos   BYTE PTR es:[edi],al
  40c24b:	cmp    dl,0x3b
  40c24e:	stos   BYTE PTR es:[edi],al
  40c24f:	lahf   
  40c250:	or     DWORD PTR [ebx+0x13],edx
  40c253:	bound  esp,QWORD PTR [esi+0x1d56da83]
  40c259:	adc    al,ch
  40c25b:	add    edx,ebp
  40c25d:	(bad)  
  40c25e:	sub    ecx,DWORD PTR cs:[ebx-0x734e1955]
  40c265:	in     al,dx
  40c266:	pop    ss
  40c267:	imul   ecx,DWORD PTR [esi],0x34
  40c26a:	fnsave [edx+0x3f86b222]
  40c270:	cmp    eax,0x4ea8cb9f
  40c275:	xor    ch,BYTE PTR [eax-0x557d624f]
  40c27b:	dec    esi
  40c27c:	cs jecxz 0x40c27c
  40c27f:	jle    0x40c2d0
  40c281:	imul   esi,DWORD PTR [esi-0x20cbe423],0x3a
  40c288:	ret    0x3179
  40c28b:	in     eax,0x2c
  40c28d:	ss jle 0x40c30c
  40c290:	leave  
  40c291:	inc    esi
  40c292:	dec    ebx
  40c293:	stos   BYTE PTR es:[edi],al
  40c294:	pop    esi
  40c295:	fld    DWORD PTR [ebp-0x16]
  40c298:	and    ebp,DWORD PTR [eax]
  40c29a:	loop   0x40c2f3
  40c29c:	mov    ebx,0xbe9f782e
  40c2a1:	sbb    BYTE PTR [eax+0x6387a2ec],bh
  40c2a7:	call   0xdf306881
  40c2ac:	sahf   
  40c2ad:	push   ebx
  40c2ae:	or     esp,DWORD PTR [edx-0x73e91b47]
  40c2b4:	xor    BYTE PTR [edi-0x3a253959],cl
  40c2ba:	adc    dl,BYTE PTR [edx-0x400c681d]
  40c2c0:	test   DWORD PTR [ebx],0xdbc9aae6
  40c2c6:	ret    
  40c2c7:	pop    edi
  40c2c8:	adc    esi,DWORD PTR [ebp+0x5b712c97]
  40c2ce:	sbb    bh,BYTE PTR [edx+0x7a4732c6]
  40c2d4:	dec    esp
  40c2d5:	mov    edx,0xa8b22859
  40c2da:	pop    edx
  40c2db:	call   0x7deff4ef
  40c2e0:	xchg   DWORD PTR [ecx],esp
  40c2e2:	xor    al,0x3
  40c2e4:	inc    eax
  40c2e5:	jbe    0x40c320
  40c2e7:	andnps xmm6,xmm2
  40c2ea:	sub    bl,BYTE PTR [ebp-0x50c50956]
  40c2f0:	push   0xb0b1a4c1
  40c2f5:	inc    esi
  40c2f6:	jne    0x40c293
  40c2f8:	scas   al,BYTE PTR es:[edi]
  40c2f9:	xor    eax,0x562b1afd
  40c2fe:	or     dh,ah
  40c300:	test   eax,0x36ec7b12
  40c305:	cmp    esp,DWORD PTR [eax]
  40c307:	or     DWORD PTR [esi-0xd],0xaa0e3207
  40c30e:	mov    esi,0x7081eb72
  40c313:	neg    BYTE PTR [ecx-0x44886fff]
  40c319:	mov    dh,0xa3
  40c31b:	mov    ds,WORD PTR [eax]
  40c31d:	sbb    edi,esp
  40c31f:	jb     0x40c355
  40c321:	add    edi,DWORD PTR [ebx]
  40c323:	push   0xaa8dad81
  40c328:	mov    eax,ds:0x9aa4ad4f
  40c32d:	dec    edi
  40c32e:	das    
  40c32f:	scas   eax,DWORD PTR es:[edi]
  40c330:	mov    eax,ds:0xc4dc55e4
  40c335:	cmc    
  40c336:	jnp    0x40c311
  40c338:	mov    ebp,0x5cf32826
  40c33d:	jbe    0x40c386
  40c33f:	pop    ebp
  40c340:	jne    0x40c367
  40c342:	fistp  QWORD PTR [ecx]
  40c344:	mov    dl,BYTE PTR [ecx-0x1a]
  40c347:	fcomp  QWORD PTR [edi]
  40c349:	enter  0x1062,0x4f
  40c34d:	xchg   edi,eax
  40c34e:	push   esi
  40c34f:	mov    ebp,DWORD PTR [ecx+ebp*4+0x62c65fd3]
  40c356:	popa   
  40c357:	ficom  DWORD PTR [edx-0x25]
  40c35a:	retf   
  40c35b:	lods   eax,DWORD PTR ds:[esi]
  40c35c:	mov    ebp,0xa03b4ca8
  40c361:	inc    ecx
  40c362:	push   esp
  40c363:	out    dx,al
  40c364:	xchg   ebx,eax
  40c365:	pop    esi
  40c366:	or     DWORD PTR [esi+0x18],0xb033f4cc
  40c36d:	pop    ecx
  40c36e:	jae    0x40c324
  40c370:	mov    dh,0x6e
  40c372:	outs   dx,DWORD PTR ds:[esi]
  40c373:	add    esp,edi
  40c375:	popa   
  40c376:	sbb    eax,0xb365ab3f
  40c37b:	shl    DWORD PTR [edx-0x13],0x97
  40c37f:	pop    es
  40c380:	xchg   ebp,eax
  40c381:	addr16 hlt 
  40c383:	mov    cs,WORD PTR [ebx]
  40c385:	fwait
  40c386:	inc    ecx
  40c387:	sub    DWORD PTR [esi],ebx
  40c389:	fcom   DWORD PTR [ecx-0x3c9e229d]
  40c38f:	dec    BYTE PTR ds:0xbccc381f
  40c395:	das    
  40c396:	xor    DWORD PTR [eax+edi*2-0x4e7dee15],ecx
  40c39d:	fwait
  40c39e:	lods   eax,DWORD PTR ds:[esi]
  40c39f:	xor    al,0x8e
  40c3a1:	xor    al,0xae
  40c3a3:	jle    0x40c36c
  40c3a5:	mov    edi,0xbbae2337
  40c3aa:	stc    
  40c3ab:	push   ds
  40c3ac:	(bad)  
  40c3ad:	jl     0x40c364
  40c3af:	sbb    DWORD PTR [ebp-0x4],ebx
  40c3b2:	sub    esp,esp
  40c3b4:	xor    bh,ah
  40c3b6:	ficom  WORD PTR [ecx+eax*2+0x122518c5]
  40c3bd:	sub    ebp,DWORD PTR [esi+ebp*8+0x63]
  40c3c1:	fsubr  DWORD PTR [edi]
  40c3c3:	jg     0x40c3dc
  40c3c5:	icebp  
  40c3c6:	xlat   BYTE PTR ds:[ebx]
  40c3c7:	mov    bh,0x2a
  40c3c9:	neg    DWORD PTR [edi]
  40c3cb:	into   
  40c3cc:	scas   al,BYTE PTR es:[edi]
  40c3cd:	hlt    
  40c3ce:	push   cs
  40c3cf:	out    0xd,al
  40c3d1:	inc    ebx
  40c3d2:	push   edi
  40c3d3:	dec    ecx
  40c3d4:	xor    al,0x46
  40c3d6:	aad    0xb8
  40c3d8:	push   ss
  40c3d9:	or     DWORD PTR [edi+0x33],esp
  40c3dc:	fimul  WORD PTR [ecx+0x38]
  40c3df:	pop    ebx
  40c3e0:	xchg   esp,ebx
  40c3e2:	sub    eax,0xc7dd7b36
  40c3e7:	test   eax,0x8a15b2c
  40c3ec:	icebp  
  40c3ed:	cmp    eax,0x919d5750
  40c3f2:	ror    DWORD PTR [edi+0x655af3ba],1
  40c3f8:	jnp    0x40c397
  40c3fa:	xchg   BYTE PTR [ecx],al
  40c3fc:	stc    
  40c3fd:	enter  0x8fa4,0x10
  40c401:	push   esi
  40c402:	add    BYTE PTR [edi+0x4e],ch
  40c405:	imul   esp,DWORD PTR [eax-0x56],0xe
  40c409:	sub    DWORD PTR [ebx-0x20],edx
  40c40c:	add    DWORD PTR [edi+ecx*2-0x3e],ebx
  40c410:	push   es
  40c411:	sbb    BYTE PTR [edx-0x32151d30],bl
  40c417:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40c419:	add    ah,al
  40c41b:	jno    0x40c495
  40c41d:	jp     0x40c46e
  40c41f:	ins    BYTE PTR es:[edi],dx
  40c420:	or     edx,eax
  40c422:	mov    ebx,0xba7562ad
  40c427:	pop    eax
  40c428:	stos   BYTE PTR es:[edi],al
  40c429:	test   DWORD PTR [esp+ebx*8-0x63e42feb],ebp
  40c430:	rcr    DWORD PTR [ecx],0x62
  40c433:	loope  0x40c41a
  40c435:	mov    edx,0xe4cbf9db
  40c43a:	jle    0x40c48b
  40c43c:	mov    ecx,0x483db155
  40c441:	std    
  40c442:	dec    ecx
  40c443:	adc    eax,0x172f2254
  40c448:	js     0x40c41e
  40c44a:	cmp    ah,bh
  40c44c:	mov    eax,ds:0x6d49b08a
  40c451:	add    al,0x98
  40c453:	push   eax
  40c454:	in     al,dx
  40c455:	cmp    bh,BYTE PTR [ebx]
  40c457:	loopne 0x40c499
  40c459:	and    ecx,ebx
  40c45b:	mov    ebp,edi
  40c45d:	pop    ss
  40c45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45f:	jle    0x40c496
  40c461:	push   ecx
  40c462:	or     DWORD PTR [ebx+ecx*2+0x53],esp
  40c466:	sbb    DWORD PTR [ebx],edi
  40c468:	es ds xchg ebp,eax
  40c46b:	ds jb  0x40c4d3
  40c46e:	bound  eax,QWORD PTR [edi]
  40c470:	xchg   edx,eax
  40c471:	jno    0x40c493
  40c473:	cmp    ebp,0xffffffcc
  40c476:	(bad)  
  40c477:	mov    ecx,0x68a86c2f
  40c47c:	add    eax,0xbd5de05b
  40c481:	xchg   edi,eax
  40c482:	mov    bl,0xd6
  40c484:	pop    es
  40c485:	pop    edx
  40c486:	or     esp,ebx
  40c488:	xor    edx,DWORD PTR [esi+0x12]
  40c48b:	inc    ebx
  40c48c:	xchg   DWORD PTR ds:0xc89c9fed,esp
  40c492:	mov    edx,0x6c9ac531
  40c497:	sbb    bh,0x8a
  40c49a:	fwait
  40c49b:	jae    0x40c4c7
  40c49d:	xchg   ebp,eax
  40c49e:	push   ebp
  40c49f:	cdq    
  40c4a0:	pop    ss
  40c4a1:	jno    0x40c45e
  40c4a3:	mov    ch,0xc
  40c4a5:	push   edx
  40c4a6:	aaa    
  40c4a7:	sub    edi,DWORD PTR [ecx+0x7304f889]
  40c4ad:	mov    al,0xcc
  40c4af:	mov    ds:0xa57a471f,al
  40c4b4:	repz or dh,ah
  40c4b7:	jg     0x40c4ee
  40c4b9:	add    cx,WORD PTR [eax-0x7e]
  40c4bd:	pop    esi
  40c4be:	aas    
  40c4bf:	shr    BYTE PTR [ebp-0x32aef467],1
  40c4c5:	cmc    
  40c4c6:	lahf   
  40c4c7:	pop    eax
  40c4c8:	stc    
  40c4c9:	push   cs
  40c4ca:	lds    edi,FWORD PTR ss:[ebx+edi*1+0x4c746d95]
  40c4d2:	fisub  WORD PTR ds:0xe537382
  40c4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d9:	adc    eax,0xed5ce24c
  40c4de:	mov    al,0xd0
  40c4e0:	push   ds
  40c4e1:	(bad)  
  40c4e3:	xchg   edi,eax
  40c4e4:	pop    es
  40c4e5:	add    ecx,esp
  40c4e7:	inc    edx
  40c4e8:	cmp    BYTE PTR [edi],0x6a
  40c4eb:	adc    al,0xd5
  40c4ed:	cdq    
  40c4ee:	dec    esi
  40c4ef:	xor    DWORD PTR [eax+0x79],0x3f
  40c4f3:	jo     0x40c523
  40c4f5:	jmp    0x40c54a
  40c4f7:	push   edx
  40c4f8:	mov    WORD PTR [eax-0x519be4c],gs
  40c4fe:	push   ebp
  40c4ff:	out    dx,al
  40c500:	push   ebp
  40c501:	jno    0x40c51a
  40c503:	das    
  40c504:	cmc    
  40c505:	aad    0xfb
  40c507:	bound  ebp,QWORD PTR [eax+0x426717f3]
  40c50d:	cli    
  40c50e:	(bad)  
  40c50f:	aad    0xa6
  40c511:	mov    bh,0xd6
  40c513:	dec    ecx
  40c514:	jae    0x40c4ce
  40c516:	xchg   BYTE PTR [edx],cl
  40c518:	inc    ecx
  40c519:	fwait
  40c51a:	or     esi,DWORD PTR [esi-0x11]
  40c51d:	lahf   
  40c51e:	xor    dh,BYTE PTR [ebx-0x63]
  40c521:	aas    
  40c522:	div    BYTE PTR [ecx+ebx*1-0x5cb4a81]
  40c529:	or     ebx,ebp
  40c52b:	pop    esp
  40c52c:	dec    eax
  40c52d:	jne    0x40c4ef
  40c52f:	inc    esp
  40c530:	sti    
  40c531:	sbb    edi,ecx
  40c533:	fdivr  QWORD PTR [edi]
  40c535:	aas    
  40c536:	jbe    0x40c57a
  40c538:	iret   
  40c539:	aaa    
  40c53a:	test   al,0xb
  40c53c:	test   ah,cl
  40c53e:	(bad)  
  40c53f:	sahf   
  40c540:	jmp    0xb5a1:0x4b38ad49
  40c547:	push   ebp
  40c548:	pop    edx
  40c549:	not    ch
  40c54b:	xchg   ebx,eax
  40c54c:	shl    DWORD PTR [edi],0xcc
  40c54f:	and    ah,BYTE PTR [eax+0x46dd8c1d]
  40c555:	aad    0x27
  40c557:	rcl    bh,cl
  40c559:	test   al,0xb7
  40c55b:	fisttp QWORD PTR [esi]
  40c55d:	sbb    al,0x1c
  40c55f:	(bad)  
  40c560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c561:	mov    bl,0x94
  40c563:	cmp    eax,0xa2e8d2c0
  40c568:	scas   eax,DWORD PTR es:[edi]
  40c569:	mov    dl,0xef
  40c56b:	out    0x3b,al
  40c56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56e:	in     al,0x2
  40c570:	fucom  st(2)
  40c572:	xchg   ebp,eax
  40c573:	xchg   edi,eax
  40c574:	push   esp
  40c575:	mov    cl,0x35
  40c577:	sub    esp,DWORD PTR [ebx+ebp*2+0x14596f31]
  40c57e:	xor    al,0xdf
  40c580:	fwait
  40c581:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c583:	pop    ebp
  40c584:	ds jbe 0x40c5b1
  40c587:	idiv   dh
  40c589:	fnstcw WORD PTR [edi]
  40c58b:	bound  edx,QWORD PTR [esi]
  40c58d:	push   cs
  40c58e:	mov    cs,WORD PTR [edx+0x215e1f7f]
  40c594:	cmp    DWORD PTR [edi+eiz*2+0x5d64ffc4],ebp
  40c59b:	dec    ecx
  40c59c:	pushf  
  40c59d:	(bad)  
  40c59e:	mov    dh,0xe3
  40c5a0:	shl    DWORD PTR [esi],cl
  40c5a2:	sbb    bh,BYTE PTR [edx-0x386e242d]
  40c5a8:	mov    esi,DWORD PTR [edi-0x27]
  40c5ab:	stos   DWORD PTR es:[edi],eax
  40c5ac:	adc    bh,bh
  40c5ae:	add    al,0xd6
  40c5b0:	pop    eax
  40c5b1:	(bad)  
  40c5b2:	in     al,dx
  40c5b3:	and    ah,BYTE PTR [ebp-0x2e]
  40c5b6:	mov    DWORD PTR [edx+0x3c],ebp
  40c5b9:	in     al,0x4b
  40c5bb:	mov    esp,0x20932fee
  40c5c0:	xor    bl,BYTE PTR [ebx+0x29]
  40c5c3:	add    al,0xac
  40c5c5:	iret   
  40c5c6:	sub    ebp,DWORD PTR [edi+0x77a814f0]
  40c5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5cd:	pop    eax
  40c5ce:	sub    eax,0x5806ffdf
  40c5d3:	sub    DWORD PTR [esp+ecx*2],edx
  40c5d6:	cwde   
  40c5d7:	pop    esi
  40c5d8:	retf   
  40c5d9:	jae    0x40c593
  40c5db:	inc    ebx
  40c5dc:	fsubr  DWORD PTR [eax]
  40c5de:	ins    BYTE PTR es:[edi],dx
  40c5df:	pop    ecx
  40c5e0:	ds jns 0x40c5a3
  40c5e3:	aad    0x22
  40c5e5:	push   edx
  40c5e6:	xor    DWORD PTR [eax+0x74],esi
  40c5e9:	add    eax,0xf24aa3b7
  40c5ee:	fidivr WORD PTR [ebx-0xf]
  40c5f1:	(bad)  
  40c5f2:	retf   0x44b1
  40c5f5:	xor    ebp,edi
  40c5f7:	sbb    esi,DWORD PTR [edi+esi*4]
  40c5fa:	dec    ecx
  40c5fb:	rep ins BYTE PTR es:[edi],dx
  40c5fd:	add    DWORD PTR [ecx-0x39],eax
  40c600:	jno    0x40c61f
  40c602:	adc    al,0x34
  40c604:	loop   0x40c5d7
  40c606:	out    0x9,al
  40c608:	pusha  
  40c609:	add    eax,0x5ecb0e15
  40c60e:	arpl   WORD PTR [esi],bx
  40c610:	cmp    DWORD PTR [ecx],eax
  40c612:	fistp  QWORD PTR [ecx+0x6ef33a6e]
  40c618:	jmp    0xaac5:0xe7a5a79e
  40c61f:	pushf  
  40c620:	repz mov ?,WORD PTR [edx-0x2e]
  40c624:	xchg   BYTE PTR [eax-0x431ccb6e],dh
  40c62a:	loope  0x40c613
  40c62c:	push   0x1a
  40c62e:	fldenv [edx+0x2d]
  40c631:	icebp  
  40c632:	ds inc esi
  40c634:	jmp    0x408ed72d
  40c639:	add    bl,dh
  40c63b:	sub    ch,bh
  40c63d:	mov    esp,0xa15a431a
  40c642:	in     eax,0x7d
  40c644:	fisubr WORD PTR [esi+0x422d382f]
  40c64a:	inc    ecx
  40c64b:	out    dx,al
  40c64c:	pop    edi
  40c64d:	ins    BYTE PTR es:[edi],dx
  40c64e:	lds    edx,FWORD PTR [ebx+0x35]
  40c651:	test   al,0xbf
  40c653:	pop    ebp
  40c654:	sti    
  40c655:	add    DWORD PTR [ebx+ecx*2-0x11],edi
  40c659:	call   0x6c49:0x3b48585b
  40c660:	push   esi
  40c661:	pop    esp
  40c662:	lahf   
  40c663:	icebp  
  40c664:	push   0xfe856f26
  40c669:	and    bh,bl
  40c66b:	jbe    0x40c6a5
  40c66d:	bound  edi,QWORD PTR [edi+0x2dc3d479]
  40c673:	adc    eax,0x4df038bc
  40c678:	bound  edi,QWORD PTR [eax]
  40c67a:	ss push edx
  40c67c:	dec    esp
  40c67d:	jne    0x40c6ab
  40c67f:	bound  ebp,QWORD PTR [esi+0x79]
  40c682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c683:	inc    ebp
  40c684:	jmp    0x9ea8d4f9
  40c689:	int3   
  40c68a:	push   ds
  40c68b:	xor    DWORD PTR [edi-0x33],edi
  40c68e:	xchg   edi,ebp
  40c690:	popa   
  40c691:	push   ss
  40c692:	xchg   ecx,eax
  40c693:	test   edx,esi
  40c695:	jle    0x40c6c1
  40c697:	imul   DWORD PTR [ecx]
  40c699:	and    DWORD PTR [edi],ebp
  40c69b:	sub    esi,DWORD PTR [ebx+ebx*4-0x14]
  40c69f:	xchg   ebp,eax
  40c6a0:	gs pop ebp
  40c6a2:	dec    ebp
  40c6a3:	sub    eax,0xb6ae3314
  40c6a8:	int    0x13
  40c6aa:	aaa    
  40c6ab:	aad    0x5b
  40c6ad:	pop    edx
  40c6ae:	pop    edi
  40c6af:	loope  0x40c689
  40c6b1:	das    
  40c6b2:	lods   eax,DWORD PTR ds:[esi]
  40c6b3:	sub    eax,0x58e785bc
  40c6b8:	jl     0x40c6b6
  40c6ba:	mov    al,0x5
  40c6bc:	(bad)  
  40c6bd:	into   
  40c6be:	stos   DWORD PTR es:[edi],eax
  40c6bf:	xor    eax,0xb358135d
  40c6c4:	pop    ebp
  40c6c5:	inc    ebp
  40c6c6:	fsubr  DWORD PTR [ebx-0x2c34e1bd]
  40c6cc:	iret   
  40c6cd:	sahf   
  40c6ce:	out    dx,al
  40c6cf:	dec    edx
  40c6d0:	jbe    0x40c68b
  40c6d2:	push   ds
  40c6d3:	cmp    BYTE PTR [esi-0x28],0x31
  40c6d7:	dec    ebp
  40c6d8:	mov    esi,0xbdc75bb8
  40c6dd:	mov    al,0xde
  40c6df:	retf   0x2918
  40c6e2:	or     eax,0x2592c765
  40c6e7:	addr16 pop ds
  40c6e9:	aad    0xc8
  40c6eb:	xchg   ecx,eax
  40c6ec:	xchg   esp,eax
  40c6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ee:	ds mov esi,0xcf46bb60
  40c6f4:	cmp    BYTE PTR [edi],bh
  40c6f6:	xchg   DWORD PTR ds:0xf5c14724,esi
  40c6fc:	inc    ebx
  40c6fd:	add    DWORD PTR [edx+0x4411f846],0xdc42dd80
  40c707:	sub    DWORD PTR [esi],ebx
  40c709:	les    ecx,FWORD PTR [ebx]
  40c70b:	lahf   
  40c70c:	lods   al,BYTE PTR ds:[esi]
  40c70d:	ret    
  40c70e:	test   al,0xdc
  40c710:	lea    eax,[edx-0x63da1dba]
  40c716:	iret   
  40c717:	jl     0x40c6bc
  40c719:	out    0xba,al
  40c71b:	mov    bh,0xe8
  40c71d:	push   edi
  40c71e:	test   al,0x72
  40c720:	push   ebx
  40c721:	je     0x40c6fc
  40c723:	dec    edi
  40c724:	retf   
  40c725:	shl    DWORD PTR [ecx+esi*2+0x7248ebf8],0x0
  40c72d:	mov    ch,0xc3
  40c72f:	aam    0x88
  40c731:	ins    BYTE PTR es:[edi],dx
  40c732:	loop   0x40c790
  40c734:	mov    cl,0x27
  40c736:	mov    BYTE PTR [eax],bl
  40c738:	inc    eax
  40c739:	clc    
  40c73a:	neg    bh
  40c73c:	jmp    0x8764:0xa85460d3
  40c743:	mov    eax,0x99e1b878
  40c748:	ins    BYTE PTR es:[edi],dx
  40c749:	ret    
  40c74a:	sub    cl,BYTE PTR [ebp+0x5b8bd254]
  40c750:	enter  0xcc4f,0xe9
  40c754:	mov    esp,0x489096c1
  40c759:	jns    0x40c6fa
  40c75b:	jg     0x40c6f9
  40c75d:	mov    ah,0x8a
  40c75f:	rol    ch,1
  40c761:	lock repz rol WORD PTR [esp+ebp*8-0x7568679d],cl
  40c76b:	mov    edx,0xdf69898d
  40c770:	mov    ah,BYTE PTR [edi+0x3a3ef0fc]
  40c776:	out    0x27,al
  40c778:	outs   dx,BYTE PTR ds:[esi]
  40c779:	xchg   ebp,eax
  40c77a:	jnp    0x40c7fa
  40c77c:	jne    0x40c7a4
  40c77e:	loopne 0x40c7fe
  40c780:	seto   BYTE PTR [edi-0x3e1fde10]
  40c787:	addr16 es je 0x40c769
  40c78b:	ins    DWORD PTR es:[edi],dx
  40c78c:	dec    ebp
  40c78d:	or     DWORD PTR ds:0x61c7833c,esp
  40c793:	xchg   ecx,eax
  40c794:	mov    WORD PTR [esi+0x49b4ba92],cs
  40c79a:	push   esp
  40c79b:	int    0x9a
  40c79d:	clc    
  40c79e:	jo     0x40c7b9
  40c7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a1:	(bad)  
  40c7a2:	xor    bh,BYTE PTR [eax]
  40c7a4:	xlat   BYTE PTR ds:[ebx]
  40c7a5:	mov    BYTE PTR [edi+0x469f2266],dh
  40c7ab:	sub    cl,BYTE PTR [edx]
  40c7ad:	cmp    esp,DWORD PTR [eax+0x67]
  40c7b0:	loop   0x40c78d
  40c7b2:	pop    ecx
  40c7b3:	sub    DWORD PTR [ecx+0x6c357bd0],0x8f7107ce
  40c7bd:	or     dl,BYTE PTR [edi+0x7a]
  40c7c0:	cmp    eax,0xe33b35a1
  40c7c5:	jbe    0x40c747
  40c7c7:	cmp    eax,0xc4d53e0c
  40c7cc:	repnz inc edi
  40c7ce:	ins    BYTE PTR es:[edi],dx
  40c7cf:	jb     0x40c79c
  40c7d1:	fadd   st,st(7)
  40c7d3:	shl    DWORD PTR [ebx],1
  40c7d5:	das    
  40c7d6:	jbe    0x40c857
  40c7d8:	inc    ecx
  40c7d9:	adc    edi,DWORD PTR [edx-0x5b93db27]
  40c7df:	or     eax,0x9dd58ddf
  40c7e4:	cmp    al,0x11
  40c7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7e7:	or     ecx,edx
  40c7e9:	sub    ch,BYTE PTR [edi+0xccdc77]
  40c7ef:	out    0x3b,eax
  40c7f1:	jp     0x40c814
  40c7f3:	aad    0x6b
  40c7f5:	sbb    eax,0xe00b98c8
  40c7fa:	jae    0x40c865
  40c7fc:	(bad)  
  40c7fd:	dec    edx
  40c7fe:	test   ebx,esi
  40c800:	mov    ah,0xe6
  40c802:	mov    edi,0x3217a0ea
  40c807:	in     eax,dx
  40c808:	(bad)  
  40c809:	sub    dl,BYTE PTR cs:0x28d595c2
  40c810:	shr    BYTE PTR ds:0xdacdfbff,0xf6
  40c817:	inc    esp
  40c818:	pusha  
  40c819:	ror    DWORD PTR [eax-0x2],0xeb
  40c81d:	add    al,BYTE PTR [ecx+0x513d01cd]
  40c823:	loop   0x40c7f2
  40c825:	sbb    ebx,esp
  40c827:	jg     0x40c80b
  40c829:	leave  
  40c82a:	jb     0x40c88d
  40c82c:	inc    edi
  40c82d:	xchg   edi,eax
  40c82e:	(bad)  
  40c82f:	mov    eax,0x3dba956c
  40c834:	retf   
  40c835:	pop    esi
  40c836:	xchg   edi,eax
  40c837:	fisub  DWORD PTR [ebp+0x2f0fc6e8]
  40c83d:	ds (bad) 
  40c83f:	outs   dx,DWORD PTR ds:[esi]
  40c840:	out    dx,eax
  40c841:	add    BYTE PTR [ecx],bh
  40c843:	inc    edi
  40c844:	inc    eax
  40c845:	test   BYTE PTR [edi+edi*2],ah
  40c848:	fsubr  QWORD PTR [edi]
  40c84a:	daa    
  40c84b:	mov    edi,0x6fe9ed3a
  40c850:	enter  0x9e41,0x4d
  40c854:	int3   
  40c855:	push   esi
  40c856:	pop    ss
  40c857:	and    al,0x1b
  40c859:	and    ecx,DWORD PTR [esi-0x6fe17bf4]
  40c85f:	mov    dh,0xc
  40c861:	xchg   ebx,eax
  40c862:	pop    ebp
  40c863:	lock mov al,ds:0x78ec2cd5
  40c869:	xor    edi,DWORD PTR [eax+0x66]
  40c86c:	ss cmc 
  40c86e:	loop   0x40c843
  40c870:	ins    BYTE PTR es:[edi],dx
  40c871:	pop    esp
  40c872:	daa    
  40c873:	cmp    DWORD PTR [esi+eiz*8],edx
  40c876:	or     DWORD PTR [edi+0x7f],0x2a
  40c87a:	retf   0x7746
  40c87d:	fst    DWORD PTR [ebp+0x3b]
  40c880:	out    0x42,al
  40c882:	outs   dx,BYTE PTR ds:[esi]
  40c883:	xchg   DWORD PTR [ecx],ebp
  40c885:	jp     0x40c81a
  40c887:	imul   eax,DWORD PTR [ecx],0xfffffff9
  40c88a:	test   BYTE PTR [eax],cl
  40c88c:	or     al,0x7c
  40c88e:	mov    es,WORD PTR [edi]
  40c890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c891:	push   ds
  40c892:	jne    0x40c8f2
  40c894:	scas   al,BYTE PTR es:[edi]
  40c895:	bound  edx,QWORD PTR [esi]
  40c897:	ds ins DWORD PTR es:[edi],dx
  40c899:	test   al,0x69
  40c89b:	cmp    DWORD PTR [ebp-0x40d25e84],ecx
  40c8a1:	cwde   
  40c8a2:	mov    eax,ds:0x930dafe8
  40c8a7:	leave  
  40c8a8:	pop    ebp
  40c8a9:	or     DWORD PTR [ebx-0x387262c],esi
  40c8af:	mov    ds:0x6f176442,eax
  40c8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b5:	nop
  40c8b6:	sbb    al,0x19
  40c8b8:	lahf   
  40c8b9:	iret   
  40c8ba:	pop    ecx
  40c8bb:	sbb    ebx,DWORD PTR [ecx-0x24]
  40c8be:	dec    esi
  40c8bf:	sub    BYTE PTR [esi+edx*8-0x3],bh
  40c8c3:	inc    eax
  40c8c4:	lods   eax,DWORD PTR ds:[esi]
  40c8c5:	lods   al,BYTE PTR ds:[esi]
  40c8c6:	(bad)  
  40c8c7:	fisttp QWORD PTR es:[ebp-0x30]
  40c8cb:	cmp    BYTE PTR [edi+0x6889b028],ah
  40c8d1:	pusha  
  40c8d2:	lahf   
  40c8d3:	ja     0x40c906
  40c8d5:	(bad)  
  40c8d6:	cld    
  40c8d7:	push   edi
  40c8d8:	dec    edx
  40c8d9:	fisttp DWORD PTR [eax]
  40c8db:	int3   
  40c8dc:	scas   al,BYTE PTR es:[edi]
  40c8dd:	test   DWORD PTR [esi-0x6f],0xef6a0686
  40c8e4:	test   eax,0x78f7594d
  40c8e9:	daa    
  40c8ea:	cwde   
  40c8eb:	add    BYTE PTR [ebp+0x33e57b35],ah
  40c8f1:	mov    WORD PTR [ecx],gs
  40c8f3:	retf   0x4776
  40c8f6:	push   ecx
  40c8f7:	(bad)  
  40c8f8:	sahf   
  40c8f9:	fisttp QWORD PTR [edi+0x59]
  40c8fc:	(bad)  
  40c8fe:	sbb    cl,BYTE PTR [eax+0x1b6dadbc]
  40c904:	pop    ecx
  40c905:	fs out dx,al
  40c907:	sahf   
  40c908:	into   
  40c909:	nop
  40c90a:	lahf   
  40c90b:	cdq    
  40c90c:	xor    eax,DWORD PTR ds:0x82263ee1
  40c912:	call   0x83e9207a
  40c917:	enter  0x37ec,0xfb
  40c91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c91c:	repz cmp DWORD PTR [edi-0x69],0xffffffd9
  40c921:	pop    ebx
  40c922:	rol    BYTE PTR [ecx+0x4bf224fa],cl
  40c928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c929:	test   eax,0xff4148ec
  40c92e:	and    DWORD PTR [ebp-0x27ea6d7f],0xffffff98
  40c935:	xor    eax,0xcc68082d
  40c93a:	mov    eax,0xfa4bfa9d
  40c93f:	pusha  
  40c940:	fisttp DWORD PTR [eax]
  40c942:	dec    ebx
  40c943:	adc    al,0x49
  40c945:	idiv   BYTE PTR [ebp+0x2e]
  40c948:	mov    esp,0xe4b6893d
  40c94d:	scas   eax,DWORD PTR es:[edi]
  40c94e:	sar    ecx,1
  40c950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c951:	lods   eax,DWORD PTR ds:[esi]
  40c952:	jae    0x40c8ff
  40c954:	sbb    DWORD PTR [edx+0x16],ebx
  40c957:	pop    edx
  40c958:	xor    bh,BYTE PTR [ebp+ebx*8-0x34]
  40c95c:	retf   0x2de
  40c95f:	inc    eax
  40c960:	ds jmp 0xff5e9fcd
  40c966:	pop    eax
  40c967:	xchg   DWORD PTR [ebx+0x74],esp
  40c96a:	retf   
  40c96b:	popa   
  40c96c:	hlt    
  40c96d:	add    eax,0x924caaf0
  40c972:	out    0x83,eax
  40c974:	xor    dl,BYTE PTR [esi-0x542d069f]
  40c97a:	xlat   BYTE PTR ds:[ebx]
  40c97b:	fstp   QWORD PTR [edx+0x1d]
  40c97e:	mov    ss,WORD PTR [edx-0x9c17308]
  40c984:	adc    bh,BYTE PTR [ecx-0x4d]
  40c987:	fbstp  TBYTE PTR [edx+0x5c]
  40c98a:	cmp    DWORD PTR [esi+0x743098bf],ebp
  40c990:	adc    cl,BYTE PTR [edi-0x66479a23]
  40c996:	imul   ebp,DWORD PTR [ecx],0xffffff80
  40c999:	imul   esp,DWORD PTR [ecx],0xffffffaa
  40c99c:	and    al,0xfd
  40c99e:	inc    ebx
  40c99f:	lds    ebp,FWORD PTR [eax+0x1e9eddfe]
  40c9a5:	outs   dx,BYTE PTR ds:[esi]
  40c9a6:	xor    DWORD PTR [edx-0x11],ebp
  40c9a9:	xchg   ebp,eax
  40c9aa:	pop    es
  40c9ab:	sahf   
  40c9ac:	dec    eax
  40c9ad:	stos   DWORD PTR es:[edi],eax
  40c9ae:	sbb    eax,esi
  40c9b0:	data16 aaa 
  40c9b2:	and    dh,bh
  40c9b4:	jbe    0x40ca22
  40c9b6:	xor    dl,BYTE PTR [edi+0x4c8cfe61]
  40c9bc:	fiadd  WORD PTR [edx+0x2]
  40c9bf:	stc    
  40c9c0:	pop    ecx
  40c9c1:	sbb    eax,0x504b291b
  40c9c6:	ret    
  40c9c7:	outs   dx,BYTE PTR ds:[esi]
  40c9c8:	xchg   DWORD PTR [ecx],esp
  40c9ca:	xor    DWORD PTR [esi-0x5095ba43],edi
  40c9d0:	push   edi
  40c9d1:	test   al,0x6c
  40c9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9d4:	mov    edx,0x49d29f18
  40c9d9:	not    BYTE PTR [ebx+edx*1-0x2fc1bff]
  40c9e0:	pusha  
  40c9e1:	retf   
  40c9e2:	icebp  
  40c9e3:	sbb    eax,0x2d0a075c
  40c9e8:	dec    ebp
  40c9e9:	test   DWORD PTR [ecx-0x12],ebp
  40c9ec:	cmp    DWORD PTR [ecx],esi
  40c9ee:	test   DWORD PTR [esp+edi*1-0x73a14929],edi
  40c9f5:	push   edx
  40c9f6:	xchg   DWORD PTR [ebx+0x5f],edi
  40c9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9fa:	scas   eax,DWORD PTR es:[edi]
  40c9fb:	add    ebp,ebp
  40c9fd:	sub    bl,BYTE PTR [eax-0xc]
  40ca00:	or     eax,0x7465004f
  40ca05:	pop    ss
  40ca06:	mov    bh,0x78
  40ca08:	sbb    BYTE PTR [ecx-0x20b96bab],al
  40ca0e:	xchg   edi,eax
  40ca0f:	into   
  40ca10:	sub    BYTE PTR [ebp+eax*4-0x7617d164],0x95
  40ca18:	fmul   QWORD PTR [esp+eax*4+0x29]
  40ca1c:	inc    ecx
  40ca1d:	jns    0x40ca7c
  40ca1f:	hlt    
  40ca20:	and    ebx,DWORD PTR [edi+0x2a]
  40ca23:	stos   DWORD PTR es:[edi],eax
  40ca24:	xchg   esp,eax
  40ca25:	and    eax,0x402eb261
  40ca2a:	adc    eax,0x16ce1fcf
  40ca2f:	push   cs
  40ca30:	(bad)  
  40ca31:	push   ebx
  40ca32:	xchg   DWORD PTR [esi+0x2cb76e8],edi
  40ca38:	jmp    0xecfb39b3
  40ca3d:	rcl    BYTE PTR [edi+0x7db383a1],0x84
  40ca44:	lods   al,BYTE PTR ds:[esi]
  40ca45:	push   0x38
  40ca47:	lds    esi,FWORD PTR [ebx-0x553bc900]
  40ca4d:	xchg   BYTE PTR [edi+eax*4+0x71a58c68],ah
  40ca54:	fnstcw WORD PTR [esi-0x499722bf]
  40ca5a:	mov    BYTE PTR [esi-0x4dbab73d],ah
  40ca60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca61:	mov    bl,0x2d
  40ca63:	mov    dh,0xba
  40ca65:	loope  0x40c9f5
  40ca67:	pop    ds
  40ca68:	shl    DWORD PTR [ecx+ebp*8],cl
  40ca6b:	xchg   ebp,eax
  40ca6c:	adc    edx,esp
  40ca6e:	mov    ecx,?
  40ca70:	add    al,0xe
  40ca72:	sub    bh,BYTE PTR ds:0x9fa531b1
  40ca78:	adc    bh,bh
  40ca7a:	mov    esp,edx
  40ca7c:	xor    esp,esp
  40ca7e:	pop    ecx
  40ca7f:	and    al,0x7c
  40ca81:	pop    eax
  40ca82:	std    
  40ca83:	jbe    0x40ca9b
  40ca85:	xor    BYTE PTR [eax+eax*1-0x80],bh
  40ca89:	add    BYTE PTR [eax],0x89
  40ca8c:	out    dx,eax
  40ca8d:	shl    dh,cl
  40ca8f:	in     al,dx
  40ca90:	and    ah,BYTE PTR [edx+0x6b7d25f5]
  40ca96:	icebp  
  40ca97:	pop    ecx
  40ca98:	xor    BYTE PTR [edi+0x3d],0x1
  40ca9c:	arpl   WORD PTR ds:0x3230c27d,dx
  40caa2:	stos   DWORD PTR es:[edi],eax
  40caa3:	sar    DWORD PTR [edx+0x2b],cl
  40caa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa7:	fstp   DWORD PTR [edx]
  40caa9:	das    
  40caaa:	in     eax,0xc4
  40caac:	xor    BYTE PTR ds:0x526324f6,al
  40cab2:	data16 fs sbb al,0xae
  40cab6:	mov    ah,0x20
  40cab8:	out    0x3c,al
  40caba:	xlat   BYTE PTR ds:[ebx]
  40cabb:	inc    ebp
  40cabc:	pop    ds
  40cabd:	in     al,dx
  40cabe:	test   eax,0xa1d939fa
  40cac3:	xor    eax,0xc050db5d
  40cac8:	leave  
  40cac9:	xchg   ecx,eax
  40caca:	into   
  40cacb:	add    cl,bl
  40cacd:	sahf   
  40cace:	mov    ds:0x1bd585f2,al
  40cad3:	mul    BYTE PTR [edx-0x55]
  40cad6:	shr    DWORD PTR [ebx-0x338a06f4],cl
  40cadc:	mov    bl,0xd
  40cade:	xlat   BYTE PTR ds:[ebx]
  40cadf:	call   0xb426:0x48433462
  40cae6:	push   edx
  40cae7:	dec    ecx
  40cae8:	imul   ecx,DWORD PTR [edx-0x7b1dfb46],0xffffff80
  40caef:	push   esp
  40caf0:	or     al,0xa6
  40caf2:	shl    BYTE PTR [bx+di],0xbe
  40caf6:	jge    0x40cb4c
  40caf8:	and    eax,DWORD PTR [esi+0x6e6b7485]
  40cafe:	mov    ah,0xed
  40cb00:	test   bl,ch
  40cb02:	aaa    
  40cb03:	retf   
  40cb04:	inc    esi
  40cb05:	ins    BYTE PTR es:[edi],dx
  40cb06:	popf   
  40cb07:	mov    bh,0x71
  40cb09:	pop    ebx
  40cb0a:	(bad)  
  40cb0b:	mov    ds:0xabf7c99c,al
  40cb10:	sub    al,dh
  40cb12:	cli    
  40cb13:	xor    eax,0x1e55f068
  40cb18:	mov    ah,0xa6
  40cb1a:	xchg   DWORD PTR [ebx-0x78b24381],eax
  40cb20:	fnstenv [edx+0x36]
  40cb23:	cmp    al,0xeb
  40cb25:	cmp    cl,dh
  40cb27:	mov    eax,0x31d12d38
  40cb2d:	or     ebx,DWORD PTR [edx+0x59a3e059]
  40cb33:	sub    eax,0xfa589c08
  40cb38:	xchg   ecx,eax
  40cb39:	dec    ebp
  40cb3a:	xchg   ecx,eax
  40cb3b:	imul   al
  40cb3d:	cmp    eax,0x5d531a8a
  40cb42:	sub    BYTE PTR [edx+0x1e0bd4b],bl
  40cb48:	sub    eax,0xa2dd889a
  40cb4d:	pop    ss
  40cb4e:	mov    eax,0xcf14a311
  40cb53:	mov    ds:0xd4d29fca,eax
  40cb58:	and    BYTE PTR [edi-0x61],bl
  40cb5b:	sub    edx,ebx
  40cb5d:	lahf   
  40cb5e:	and    ah,BYTE PTR [ecx+0x42ee8eac]
  40cb64:	mov    cs,WORD PTR [edi-0x6b]
  40cb67:	dec    edx
  40cb68:	sbb    al,0x5f
  40cb6a:	sar    dl,1
  40cb6c:	fs stc 
  40cb6e:	add    BYTE PTR [ebx-0x7],bl
  40cb71:	fsub   DWORD PTR [ecx-0x1628417c]
  40cb77:	loopne 0x40cafc
  40cb79:	sbb    ecx,DWORD PTR [ebx]
  40cb7b:	fldcw  WORD PTR [edx]
  40cb7d:	mov    DWORD PTR [esi],ebx
  40cb7f:	mov    ch,0xb1
  40cb81:	dec    edi
  40cb82:	in     eax,0xde
  40cb84:	pop    ebp
  40cb85:	into   
  40cb86:	popa   
  40cb87:	ins    DWORD PTR es:[edi],dx
  40cb88:	inc    esp
  40cb89:	or     eax,0x676e9663
  40cb8e:	push   edi
  40cb8f:	push   0x1d
  40cb91:	jnp    0x40cb52
  40cb93:	(bad)  
  40cb95:	aas    
  40cb96:	jmp    0x40cb56
  40cb98:	icebp  
  40cb99:	add    ebp,eax
  40cb9b:	jns    0x40cbd6
  40cb9d:	hlt    
  40cb9e:	push   0x59dc4a25
  40cba3:	js     0x40cb5e
  40cba5:	add    DWORD PTR [edx],eax
  40cba7:	iret   
  40cba8:	inc    esi
  40cba9:	push   edx
  40cbaa:	cld    
  40cbab:	xor    DWORD PTR ds:0x24e7dd3a,esp
  40cbb1:	in     eax,0x14
  40cbb3:	mov    al,ds:0xf5ee9b5
  40cbb8:	xchg   ebp,eax
  40cbb9:	enter  0xa4e8,0x3f
  40cbbd:	xchg   esi,eax
  40cbbe:	cmc    
  40cbbf:	push   edx
  40cbc0:	cmp    DWORD PTR [ecx+0x5e],eax
  40cbc3:	out    0xb,al
  40cbc5:	push   ebx
  40cbc6:	jno    0x40cbd7
  40cbc8:	idiv   eax
  40cbca:	out    0xd,eax
  40cbcc:	inc    DWORD PTR [ecx+0x38f89e04]
  40cbd2:	xchg   edi,eax
  40cbd3:	gs mov esp,0x2a1005bd
  40cbd9:	dec    eax
  40cbda:	frndint 
  40cbdc:	fisubr WORD PTR [eax+0x45]
  40cbdf:	xchg   ebx,eax
  40cbe0:	cmp    DWORD PTR [edi],ebx
  40cbe2:	and    al,0xa5
  40cbe4:	aam    0x3
  40cbe6:	inc    esi
  40cbe7:	fdiv   DWORD PTR [esi-0x5b]
  40cbea:	mul    ah
  40cbec:	out    dx,al
  40cbed:	out    dx,al
  40cbee:	jns    0x40cbcc
  40cbf0:	cmp    DWORD PTR [ebp+0x36],esp
  40cbf3:	icebp  
  40cbf4:	div    DWORD PTR [eax-0x2d7efc5e]
  40cbfa:	mov    bl,0x9b
  40cbfc:	push   es
  40cbfd:	dec    ecx
  40cbfe:	xor    edi,0xc058616a
  40cc04:	push   esp
  40cc05:	(bad)  
  40cc06:	or     dh,BYTE PTR [edi+0x6b5cec37]
  40cc0c:	mov    bh,0x1c
  40cc0e:	sbb    ebx,DWORD PTR ds:0x6ca33e81
  40cc14:	dec    eax
  40cc15:	fwait
  40cc16:	jmp    0x6c79901a
  40cc1b:	dec    ebx
  40cc1c:	fadd   QWORD PTR [ebp-0x76]
  40cc1f:	mov    bl,0x25
  40cc21:	add    dh,BYTE PTR [edx+0x11812305]
  40cc27:	or     ecx,ebx
  40cc29:	or     esp,edx
  40cc2b:	mov    ebx,0xa504d137
  40cc30:	mov    DWORD PTR [edx+0xf8abfbe],edx
  40cc36:	mov    edx,0x173969bc
  40cc3b:	out    dx,al
  40cc3c:	int    0x3a
  40cc3e:	fsubr  DWORD PTR [esi-0x1]
  40cc41:	(bad)  
  40cc42:	je     0x40cc28
  40cc44:	mov    cl,0x1d
  40cc46:	push   ss
  40cc47:	int    0xa4
  40cc49:	scas   al,BYTE PTR es:[edi]
  40cc4a:	or     esi,DWORD PTR [ebx+0x6c]
  40cc4d:	or     eax,0x9fbf9944
  40cc53:	pop    ebx
  40cc54:	and    BYTE PTR [ecx+0x47],ah
  40cc57:	imul   esp,DWORD PTR [ecx-0x6f],0xdb477408
  40cc5e:	fistp  QWORD PTR [edi-0x22]
  40cc61:	sbb    DWORD PTR [esi],eax
  40cc63:	add    eax,0xb219895c
  40cc68:	sbb    ecx,edi
  40cc6a:	in     al,dx
  40cc6b:	je     0x40cc94
  40cc6d:	sar    BYTE PTR [edi+0x40],1
  40cc70:	lds    eax,FWORD PTR cs:[edi-0x17676f18]
  40cc77:	cdq    
  40cc78:	test   eax,0x3692ae0f
  40cc7d:	sub    DWORD PTR [edi-0x38],eax
  40cc80:	inc    edx
  40cc81:	and    al,BYTE PTR [ebx]
  40cc83:	int    0xfa
  40cc85:	iret   
  40cc86:	xchg   esp,eax
  40cc87:	fsub   QWORD PTR [ecx+0x7e]
  40cc8a:	dec    esp
  40cc8b:	or     ch,BYTE PTR [ecx-0x3fe2d612]
  40cc91:	cmp    esi,DWORD PTR [esi+0x3750be84]
  40cc97:	loopne 0x40cd0d
  40cc99:	mov    esp,0x2268dfcb
  40cc9e:	or     al,0x13
  40cca0:	mov    ds:0x7ab8cbfb,eax
  40cca5:	mov    ah,0x1d
  40cca7:	jl     0x40cc86
  40cca9:	sub    bl,BYTE PTR [ecx-0x58b55a45]
  40ccaf:	sub    esi,esi
  40ccb1:	mov    esi,0x99263ca3
  40ccb6:	and    eax,0x5750ac04
  40ccbb:	test   eax,0x3271023a
  40ccc0:	mov    ah,0x86
  40ccc2:	hlt    
  40ccc3:	mov    eax,0x3d37675b
  40ccc8:	dec    edi
  40ccc9:	cli    
  40ccca:	push   cs
  40cccb:	imul   esp,DWORD PTR [edx+0x1a],0xffffffea
  40cccf:	push   eax
  40ccd0:	sub    eax,0xc34d3a20
  40ccd5:	xlat   BYTE PTR ds:[ebx]
  40ccd6:	(bad)  
  40ccd7:	sbb    dh,BYTE PTR [ebx-0x6bdd4ba7]
  40ccdd:	hlt    
  40ccde:	adc    esi,DWORD PTR [eax]
  40cce0:	push   cs
  40cce1:	push   cs
  40cce2:	stos   BYTE PTR es:[edi],al
  40cce3:	imul   eax,ebp,0x1307d194
  40cce9:	xchg   DWORD PTR [edx],ebp
  40cceb:	scas   eax,DWORD PTR es:[edi]
  40ccec:	mov    ecx,0x48692f95
  40ccf1:	cld    
  40ccf2:	rcl    DWORD PTR [ebx],cl
  40ccf4:	pop    edi
  40ccf5:	into   
  40ccf6:	ret    
  40ccf7:	inc    esp
  40ccf8:	mov    ds:0x82d94cb9,eax
  40ccfd:	fisttp WORD PTR [ecx]
  40ccff:	loopne 0x40cce9
  40cd01:	repz fisub DWORD PTR [eax]
  40cd04:	mov    bh,0x44
  40cd06:	adc    ch,dl
  40cd08:	add    BYTE PTR [edx+0x21],cl
  40cd0b:	fsubr  st,st(3)
  40cd0d:	shr    bh,cl
  40cd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd10:	mov    DWORD PTR [ebx+ecx*2+0x4270ffdd],edi
  40cd17:	shl    BYTE PTR [edi+0x66b08265],0xaa
  40cd1e:	jge    0x40cd58
  40cd20:	dec    ebp
  40cd21:	fisubr WORD PTR [edx-0xc370f04]
  40cd27:	cld    
  40cd28:	int3   
  40cd29:	add    al,0xb8
  40cd2b:	or     ebp,esi
  40cd2d:	pusha  
  40cd2e:	ss pop esp
  40cd30:	xor    BYTE PTR [ecx+0x33],dh
  40cd33:	and    BYTE PTR [edx-0x55c49e01],dh
  40cd39:	inc    edx
  40cd3a:	mov    dh,0x3f
  40cd3c:	mov    ebx,DWORD PTR [esi-0x76]
  40cd3f:	je     0x40cda0
  40cd41:	add    DWORD PTR es:[ecx-0x1f0693e3],esi
  40cd48:	jp     0x40cd06
  40cd4a:	cmp    DWORD PTR [eax-0x7ec4ae3b],ebp
  40cd50:	retf   0x28f6
  40cd53:	rcr    BYTE PTR [esi+0x4fd17cc4],0x95
  40cd5a:	(bad)  
  40cd5b:	jg     0x40cd63
  40cd5d:	test   BYTE PTR [edx+0x33],0xcd
  40cd61:	test   BYTE PTR [esi+0x43],bl
  40cd64:	xor    al,0xa6
  40cd66:	xchg   esi,eax
  40cd67:	sti    
  40cd68:	out    0x1e,eax
  40cd6a:	adc    al,BYTE PTR [esi-0x6ab37488]
  40cd70:	or     BYTE PTR [ecx+0x72],cl
  40cd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd74:	dec    ecx
  40cd75:	sti    
  40cd76:	jg     0x40cd18
  40cd78:	pop    es
  40cd79:	loop   0x40cdfa
  40cd7b:	enter  0xadd7,0x2d
  40cd7f:	adc    DWORD PTR [eax],edi
  40cd81:	std    
  40cd82:	dec    esp
  40cd83:	cmp    DWORD PTR [ebx-0x63],esp
  40cd86:	pop    ecx
  40cd87:	add    al,0xfb
  40cd89:	sar    DWORD PTR [ebp+ecx*1+0x7cffe8b],cl
  40cd90:	retf   0x2e8f
  40cd93:	mov    eax,ds:0x58225885
  40cd98:	adc    al,0x13
  40cd9a:	aam    0x5
  40cd9c:	jg     0x40cd6e
  40cd9e:	jmp    0xf4a0433f
  40cda3:	jecxz  0x40cd3d
  40cda5:	fucomp st(0)
  40cda7:	aaa    
  40cda8:	push   ds
  40cda9:	sbb    bh,ah
  40cdab:	stc    
  40cdac:	lahf   
  40cdad:	xor    BYTE PTR [edx+0x665069b2],ah
  40cdb3:	in     al,dx
  40cdb4:	repz mov ecx,0x32c5f37d
  40cdba:	test   al,0x6d
  40cdbc:	or     al,0x7b
  40cdbe:	xor    DWORD PTR [edi],edx
  40cdc0:	push   edx
  40cdc1:	pop    esp
  40cdc2:	dec    esi
  40cdc3:	dec    ebp
  40cdc4:	dec    esp
  40cdc5:	sub    eax,0xe5fe16d7
  40cdca:	add    DWORD PTR [ecx],eax
  40cdcc:	mov    ?,WORD PTR [ecx+0x37]
  40cdcf:	retf   0x91bb
  40cdd2:	xchg   DWORD PTR [edi-0x70],eax
  40cdd5:	xchg   edx,eax
  40cdd6:	push   ebx
  40cdd7:	inc    eax
  40cdd8:	aam    0xa1
  40cdda:	pop    ss
  40cddb:	xchg   bl,bl
  40cddd:	outs   dx,DWORD PTR ds:[esi]
  40cdde:	les    esp,FWORD PTR [eax]
  40cde0:	nop
  40cde1:	rcr    DWORD PTR [ebx+0x41],0x64
  40cde5:	dec    ebp
  40cde6:	mov    ds:0x7de4fe79,al
  40cdeb:	jle    0x40cda1
  40cded:	inc    ecx
  40cdee:	mov    esi,0x88ac3ffe
  40cdf3:	(bad)  
  40cdf4:	rol    dl,cl
  40cdf6:	xchg   ebx,eax
  40cdf7:	sahf   
  40cdf8:	int3   
  40cdf9:	in     al,dx
  40cdfa:	mov    cl,0x87
  40cdfc:	jp     0x40ce64
  40cdfe:	popa   
  40cdff:	cld    
  40ce00:	outs   dx,BYTE PTR ds:[esi]
  40ce01:	outs   dx,DWORD PTR ds:[esi]
  40ce02:	shr    DWORD PTR [edi],0x46
  40ce05:	mov    dh,0x93
  40ce07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce08:	scas   eax,DWORD PTR es:[edi]
  40ce09:	sahf   
  40ce0a:	adc    DWORD PTR ds:[edx],ebx
  40ce0d:	mov    al,BYTE PTR [ecx-0x398d96ae]
  40ce13:	mov    ebp,0xbc5b2383
  40ce18:	mov    edx,0xc81c9ae0
  40ce1d:	pushf  
  40ce1e:	xor    al,0xcd
  40ce20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce21:	ror    al,cl
  40ce23:	popf   
  40ce24:	mov    dh,dl
  40ce26:	dec    esi
  40ce27:	mov    ebp,0xdcd07f05
  40ce2c:	aam    0x35
  40ce2e:	push   ebx
  40ce2f:	inc    ecx
  40ce30:	mov    bh,0x76
  40ce32:	jecxz  0x40ce44
  40ce34:	push   ebp
  40ce35:	outs   dx,BYTE PTR ds:[esi]
  40ce36:	cmp    al,0x20
  40ce38:	push   esi
  40ce39:	mov    BYTE PTR [edi+0x42],0x59
  40ce3d:	mov    ch,0x54
  40ce3f:	dec    eax
  40ce40:	and    DWORD PTR [esi-0x3e],0xffffffa1
  40ce44:	neg    DWORD PTR [esi]
  40ce46:	adc    eax,0xca440f1c
  40ce4b:	mov    BYTE PTR [esi],bl
  40ce4d:	test   DWORD PTR [ecx+0x6a6d7bee],esi
  40ce53:	dec    ebx
  40ce54:	aaa    
  40ce55:	inc    esp
  40ce56:	ss mov edi,0x3a07b8e4
  40ce5c:	hlt    
  40ce5d:	push   0x9d12c0d0
  40ce62:	fbld   TBYTE PTR [edx]
  40ce64:	(bad)  
  40ce65:	les    edx,FWORD PTR [ebp+edx*2-0x340dd17a]
  40ce6c:	int    0x8d
  40ce6e:	mov    bl,0xf1
  40ce70:	(bad)  
  40ce71:	and    BYTE PTR [ebp-0x50],ah
  40ce74:	inc    eax
  40ce75:	jb     0x40ce8d
  40ce77:	inc    eax
  40ce78:	gs ja  0xd60b1d39
  40ce7f:	sbb    ah,BYTE PTR [esi-0x4c545d55]
  40ce85:	call   0x110b4b48
  40ce8a:	pusha  
  40ce8b:	fstp   QWORD PTR [esi+esi*4-0x7b]
  40ce8f:	outs   dx,DWORD PTR ds:[esi]
  40ce90:	out    0x90,eax
  40ce92:	and    DWORD PTR [edi-0x167dd0b4],edi
  40ce98:	add    cl,BYTE PTR [edi]
  40ce9a:	repz pop esi
  40ce9c:	out    dx,eax
  40ce9d:	das    
  40ce9e:	and    al,BYTE PTR [esi-0x5f]
  40cea1:	fwait
  40cea2:	retf   0xe9bf
  40cea5:	push   ds
  40cea6:	dec    esp
  40cea7:	inc    ebp
  40cea8:	shl    BYTE PTR [edx+0x4283e8f0],cl
  40ceae:	xor    al,0x6d
  40ceb0:	push   ss
  40ceb1:	mov    bh,0x1f
  40ceb3:	push   ds
  40ceb4:	lds    ebx,FWORD PTR [esi+0x21563add]
  40ceba:	(bad)  
  40cebb:	pop    ebp
  40cebc:	pop    edi
  40cebd:	gs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cec0:	xchg   ebx,eax
  40cec1:	adc    eax,0x6f602c48
  40cec6:	jbe    0x40ce96
  40cec8:	push   ss
  40cec9:	sub    DWORD PTR [ecx-0x1755b4e9],ebp
  40cecf:	and    eax,0x466dbb95
  40ced4:	push   ebp
  40ced5:	call   0xd5cbb935
  40ceda:	popa   
  40cedb:	and    DWORD PTR [edx],0xffffff86
  40cede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cedf:	sub    BYTE PTR [ebx],0xe8
  40cee2:	imul   eax,DWORD PTR [ecx+0x1f],0x1c
  40cee6:	dec    edi
  40cee7:	mov    al,ds:0x627410a8
  40ceec:	push   ecx
  40ceed:	(bad)  
  40ceef:	mov    eax,ds:0x1ba62c9e
  40cef4:	ss pop esi
  40cef6:	stc    
  40cef7:	into   
  40cef8:	xchg   edi,eax
  40cef9:	std    
  40cefa:	adc    al,0x7
  40cefc:	pop    eax
  40cefd:	mov    al,0xec
  40ceff:	jae    0x40ced8
  40cf01:	add    bh,BYTE PTR [edi]
  40cf03:	dec    ebp
  40cf04:	jns    0x40cf71
  40cf06:	test   al,0x5f
  40cf08:	xor    eax,0xf6deec
  40cf0d:	mov    cl,0x7d
  40cf0f:	dec    ecx
  40cf10:	jl     0x40cf78
  40cf12:	xor    al,0xc4
  40cf14:	sbb    BYTE PTR [esi-0xdfd9fd7],cl
  40cf1a:	addr16 push ds
  40cf1c:	xor    eax,0x5bcff803
  40cf21:	xchg   ebx,eax
  40cf22:	arpl   WORD PTR [esp+edx*8+0x73ab274c],bx
  40cf29:	adc    cl,BYTE PTR [edx+esi*2-0x3e9ced14]
  40cf30:	push   esp
  40cf31:	pop    ecx
  40cf32:	xor    ebx,esi
  40cf34:	xchg   edx,eax
  40cf35:	mov    ch,0x4c
  40cf37:	call   0x72c30133
  40cf3c:	and    eax,0xe68947ae
  40cf41:	stc    
  40cf42:	mov    edx,0x34102b55
  40cf47:	adc    BYTE PTR [ebx],dl
  40cf49:	and    al,0xa4
  40cf4b:	pop    ebp
  40cf4c:	or     BYTE PTR [ecx-0x7043a336],bl
  40cf52:	sub    DWORD PTR [eax-0x2b],eax
  40cf55:	fcomp  DWORD PTR [ebx-0x3d79a943]
  40cf5b:	out    0x67,eax
  40cf5d:	push   ss
  40cf5e:	push   esi
  40cf5f:	sub    BYTE PTR [ebx-0x5d],dl
  40cf62:	(bad)  
  40cf63:	or     dh,cl
  40cf65:	pusha  
  40cf66:	or     DWORD PTR [edi+0xb],ecx
  40cf69:	rcr    DWORD PTR [esi-0x76],cl
  40cf6c:	jnp    0x40cf45
  40cf6e:	sbb    DWORD PTR [edx+ecx*1-0x381720a2],esi
  40cf75:	fadd   QWORD PTR [ebx+0x379b349]
  40cf7b:	shl    DWORD PTR [ebx],1
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	xor    BYTE PTR [edi-0x1d9ac828],ch
  40cfb6:	jl     0x40d034
  40cfb8:	jmp    0x40d019
  40cfba:	jl     0x40d038
  40cfbc:	xor    al,0x41
  40cfbe:	inc    edi
  40cfbf:	or     ecx,0xc2563a13
  40cfc5:	push   ds
  40cfc6:	mov    cl,0x88
  40cfc8:	das    
  40cfc9:	es into 
  40cfcb:	dec    edx
  40cfcc:	xor    bh,BYTE PTR [ebx-0x49]
  40cfcf:	mov    dh,0xc3
  40cfd1:	pop    ss
  40cfd2:	pop    ds
  40cfd3:	sti    
  40cfd4:	test   edi,ecx
  40cfd6:	rcr    DWORD PTR [esi-0x4e],1
  40cfd9:	and    ebp,DWORD PTR [esi-0xd]
  40cfdc:	(bad)  
  40cfde:	inc    edx
  40cfdf:	out    0xad,al
  40cfe1:	mov    dh,0x5c
  40cfe3:	or     eax,0x2d36df2e
  40cfe8:	pop    eax
  40cfe9:	jg     0x40d02a
  40cfeb:	push   es
  40cfec:	inc    ecx
  40cfed:	cmp    al,0x57
  40cfef:	push   edx
  40cff0:	popf   
  40cff1:	push   esi
  40cff2:	dec    esp
  40cff3:	cmp    eax,eax
  40cff5:	xchg   ebx,eax
  40cff6:	cmp    ecx,DWORD PTR [edi+0x3793e612]
  40cffc:	cwde   
  40cffd:	int3   
  40cffe:	mov    gs:0x7ef9c817,al
  40d004:	cs aad 0x20
  40d007:	mov    WORD PTR [esi],?
  40d009:	ja     0x40cfb7
  40d00b:	cli    
  40d00c:	arpl   WORD PTR [eax],dx
  40d00e:	retf   
  40d00f:	das    
  40d010:	test   eax,0xaea6b35c
  40d015:	dec    ecx
  40d016:	push   ebx
  40d017:	(bad)  
  40d018:	outs   dx,DWORD PTR ds:[esi]
  40d019:	push   ecx
  40d01a:	xchg   ebp,eax
  40d01b:	lds    esi,FWORD PTR [ebx+0x527b62d6]
  40d021:	push   cs
  40d022:	rcr    dl,cl
  40d024:	stc    
  40d025:	ror    DWORD PTR [eax],1
  40d027:	nop
  40d028:	cdq    
  40d029:	repz sub bh,0x93
  40d02d:	fcomp  QWORD PTR [ecx]
  40d02f:	jge    0x40cfb2
  40d031:	dec    ecx
  40d032:	lea    ebp,[eax-0x1a]
  40d035:	mov    esp,0x412db07c
  40d03a:	cmp    al,0x58
  40d03c:	mov    ds:0xfb73cf6b,al
  40d041:	pop    ebx
  40d042:	and    eax,0xe991a64a
  40d047:	sti    
  40d048:	sbb    BYTE PTR [ecx],0xeb
  40d04b:	push   ss
  40d04c:	push   esp
  40d04d:	xor    BYTE PTR [eax-0x43349e10],0x1f
  40d054:	das    
  40d055:	into   
  40d056:	or     ch,BYTE PTR fs:[eax]
  40d059:	pop    ss
  40d05a:	es push edi
  40d05c:	push   esi
  40d05d:	aad    0x1
  40d05f:	dec    ecx
  40d060:	js     0x40d07e
  40d062:	pop    ds
  40d063:	sub    edx,DWORD PTR [edi+0x74]
  40d066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d067:	int    0x18
  40d069:	mov    ds:0xf4a3888c,eax
  40d06e:	xchg   esp,eax
  40d06f:	xor    DWORD PTR [edx+0x15],edx
  40d072:	es add esi,ebx
  40d075:	jns    0x40d05a
  40d077:	inc    BYTE PTR [ecx+0xf]
  40d07a:	retf   0xb746
  40d07d:	jecxz  0x40d027
  40d07f:	fistp  DWORD PTR [ebx]
  40d081:	add    ch,BYTE PTR [ebx-0xb0af5ab]
  40d087:	mov    ecx,0x9132fd48
  40d08c:	cmp    ebp,DWORD PTR [edx-0x620f19a6]
  40d092:	stos   DWORD PTR es:[edi],eax
  40d093:	and    BYTE PTR [edi+ecx*1+0x51ad8049],ah
  40d09a:	mov    ss,WORD PTR [ecx+0x36]
  40d09d:	je     0x40d042
  40d09f:	imul   ebx,DWORD PTR [ecx+edi*8],0x3890516b
  40d0a6:	mov    ah,0x52
  40d0a8:	les    ebx,FWORD PTR [eax+0x72]
  40d0ab:	ins    DWORD PTR es:[edi],dx
  40d0ac:	bswap  eax
  40d0ae:	out    dx,al
  40d0af:	fist   DWORD PTR [edi+0x28bcc132]
  40d0b5:	sbb    eax,DWORD PTR [edx-0x21]
  40d0b8:	pop    esi
  40d0b9:	jle    0x40d043
  40d0bb:	cs pop ebp
  40d0bd:	fnstsw WORD PTR [ebx-0x25a9902a]
  40d0c3:	popf   
  40d0c4:	mov    ch,0x63
  40d0c6:	shl    BYTE PTR [edx+0x6bb400cf],cl
  40d0cc:	daa    
  40d0cd:	push   0x4d
  40d0cf:	pop    es
  40d0d0:	idiv   DWORD PTR [eax-0x3bab0a50]
  40d0d6:	dec    esi
  40d0d7:	in     eax,0x81
  40d0d9:	jmp    0x40d05e
  40d0db:	inc    esp
  40d0dc:	retf   
  40d0dd:	push   cs
  40d0de:	mov    ecx,0x46aac1d7
  40d0e3:	stos   DWORD PTR es:[edi],eax
  40d0e4:	xor    BYTE PTR [ebp+0x5b0a8a90],bh
  40d0ea:	es push ebx
  40d0ec:	fs mov dh,0x44
  40d0ef:	inc    eax
  40d0f0:	sub    ah,ch
  40d0f2:	dec    edi
  40d0f3:	push   edx
  40d0f4:	addr16 (bad) 
  40d0f6:	mov    bh,0x31
  40d0f8:	aas    
  40d0f9:	inc    edx
  40d0fa:	pop    ebx
  40d0fb:	inc    edi
  40d0fc:	and    ecx,DWORD PTR [eax+ebp*2]
  40d0ff:	sub    bh,0xff
  40d102:	mov    dh,0xa4
  40d104:	test   DWORD PTR [ecx+0x2cd4e895],ebx
  40d10a:	cmp    bh,BYTE PTR [ebx+0x7e]
  40d10d:	jle    0x40d174
  40d10f:	aam    0x72
  40d111:	addr16 or al,0x41
  40d114:	outs   dx,DWORD PTR ds:[esi]
  40d115:	push   cs
  40d116:	adc    eax,0xa0501bf4
  40d11b:	ret    0xa82c
  40d11e:	adc    al,bh
  40d120:	mov    ch,0x4b
  40d122:	mov    dl,0x5f
  40d124:	adc    eax,0x77d35f72
  40d129:	rol    ebp,0x36
  40d12c:	mov    ecx,0x24b32b3f
  40d131:	pop    es
  40d132:	rcl    DWORD PTR [esi-0x37],1
  40d135:	push   es
  40d136:	mov    DWORD PTR [ebx+0x9],edi
  40d139:	fcmove st,st(5)
  40d13b:	repz or ebp,edx
  40d13e:	lock repnz stc 
  40d141:	ficom  WORD PTR [eax-0x6876cf96]
  40d147:	cmp    DWORD PTR [ebp-0x18],ebx
  40d14a:	lds    eax,FWORD PTR [eax]
  40d14c:	jecxz  0x40d174
  40d14e:	sbb    al,0x44
  40d150:	sbb    dl,bh
  40d152:	jne    0x40d182
  40d154:	sub    DWORD PTR ds:0xc789b875,0xec458cd2
  40d15e:	pop    ebx
  40d15f:	cmp    esi,DWORD PTR [ebx-0x70]
  40d162:	std    
  40d163:	inc    ecx
  40d164:	jb     0x40d1e4
  40d166:	xchg   BYTE PTR [edi+ecx*2+0x8b684d5],cl
  40d16d:	(bad)  
  40d16e:	add    BYTE PTR [esi],ah
  40d170:	test   DWORD PTR [edx-0x36f726b5],esp
  40d176:	(bad)  
  40d178:	dec    esp
  40d179:	sar    DWORD PTR [esi],1
  40d17b:	xchg   esi,eax
  40d17c:	inc    esi
  40d17d:	adc    al,dl
  40d17f:	adc    ebp,DWORD PTR [edx+0x5bcf337]
  40d185:	sar    BYTE PTR [edi-0xe808194],1
  40d18b:	mov    WORD PTR [esi-0x268729a1],?
  40d191:	call   0x9227:0x7635627c
  40d198:	aaa    
  40d199:	add    bh,ch
  40d19b:	mov    bl,0x6a
  40d19d:	mov    DWORD PTR [eax+0x5c49f82a],eax
  40d1a3:	sbb    esi,DWORD PTR gs:[edi]
  40d1a6:	push   edi
  40d1a7:	sti    
  40d1a8:	push   ss
  40d1a9:	jno    0x40d1d8
  40d1ab:	fcmovnb st,st(6)
  40d1ad:	pop    ds
  40d1ae:	rcl    eax,1
  40d1b0:	sub    al,0xcd
  40d1b2:	ret    0x8759
  40d1b5:	arpl   WORD PTR [ebx],di
  40d1b7:	loop   0x40d1ee
  40d1b9:	sbb    al,BYTE PTR ds:[ecx]
  40d1bc:	push   ss
  40d1bd:	repnz iret 
  40d1bf:	stos   BYTE PTR es:[edi],al
  40d1c0:	mov    al,ds:0x8beac08d
  40d1c5:	mov    bh,0xb3
  40d1c7:	popa   
  40d1c8:	cmp    cl,BYTE PTR [esi-0x67]
  40d1cb:	mov    ebp,es
  40d1cd:	cdq    
  40d1ce:	mov    DWORD PTR [ecx+0x6d2b930a],eax
  40d1d4:	add    cl,cl
  40d1d6:	call   0x9d57:0x2cd84621
  40d1dd:	jmp    0xa3350b42
  40d1e2:	cld    
  40d1e3:	bswap  ebp
  40d1e5:	and    BYTE PTR es:[ebx+edx*2-0x30f0a2b8],bh
  40d1ed:	das    
  40d1ee:	cmp    BYTE PTR [edi],bh
  40d1f0:	mov    ah,0x99
  40d1f2:	pop    ebx
  40d1f3:	or     DWORD PTR [ebx+0x3e460b75],ecx
  40d1f9:	mul    BYTE PTR es:[eax-0x70b75291]
  40d200:	test   eax,0x9b873075
  40d205:	mov    esi,0xa72c9f34
  40d20a:	push   ebp
  40d20b:	retf   0xf2cb
  40d20e:	pop    edx
  40d20f:	xor    al,0xe9
  40d211:	mov    dl,bh
  40d213:	dec    ecx
  40d214:	jnp    0x2774e360
  40d21a:	mov    ebp,esi
  40d21c:	in     eax,0x39
  40d21e:	mov    BYTE PTR [eax],al
  40d220:	mov    ebx,0x422543d7
  40d225:	aad    0xc2
  40d227:	xchg   BYTE PTR [ebp-0x50],dh
  40d22a:	test   eax,0x2de893e3
  40d22f:	fbld   TBYTE PTR [ecx]
  40d231:	bnd jae 0x40d1f0
  40d234:	out    0xa2,eax
  40d236:	jp     0x40d296
  40d238:	mov    esp,0x631c837f
  40d23d:	dec    ecx
  40d23e:	mov    esi,0x844a2369
  40d243:	jnp    0x40d1eb
  40d245:	sub    bh,cl
  40d247:	out    0xe3,eax
  40d249:	sti    
  40d24a:	icebp  
  40d24b:	aad    0x6a
  40d24d:	sub    al,0x2a
  40d24f:	cdq    
  40d250:	repz pop ebx
  40d252:	in     al,dx
  40d253:	adc    DWORD PTR [edx+0x2563836d],esi
  40d259:	ins    DWORD PTR es:[edi],dx
  40d25a:	and    al,0x54
  40d25c:	leave  
  40d25d:	dec    esi
  40d25e:	mov    cs,WORD PTR [eax+0x1b]
  40d261:	inc    esp
  40d262:	inc    esp
  40d263:	pop    edi
  40d264:	repz jmp 0xb31225d4
  40d26a:	inc    edi
  40d26b:	push   0x8
  40d26d:	or     eax,0x25af592b
  40d272:	dec    esi
  40d273:	pop    ecx
  40d274:	sbb    al,0xc6
  40d276:	outs   dx,DWORD PTR ds:[esi]
  40d277:	loop   0x40d2e1
  40d279:	xor    BYTE PTR [ecx],bh
  40d27b:	out    0x97,al
  40d27d:	push   ss
  40d27e:	mov    esp,esp
  40d280:	sbb    BYTE PTR [ebp-0x675d2812],al
  40d286:	std    
  40d287:	cmp    BYTE PTR [eax+0x3d8c2ab0],ch
  40d28d:	(bad)  
  40d28e:	fisttp QWORD PTR fs:[eax-0x47]
  40d292:	jecxz  0x40d289
  40d294:	fistp  DWORD PTR [ebx+0x37c39bf7]
  40d29a:	sbb    eax,0x2d3b9644
  40d29f:	push   ss
  40d2a0:	inc    esi
  40d2a1:	xchg   edx,eax
  40d2a2:	bound  ebp,QWORD PTR [ebp-0x3e]
  40d2a5:	shl    BYTE PTR [edx],cl
  40d2a7:	pop    edx
  40d2a8:	ret    
  40d2a9:	outs   dx,DWORD PTR ds:[esi]
  40d2aa:	inc    esp
  40d2ab:	stc    
  40d2ac:	cld    
  40d2ad:	push   es
  40d2ae:	ins    BYTE PTR es:[edi],dx
  40d2af:	fnsave [edx+0x1d]
  40d2b2:	mov    bl,0x5d
  40d2b4:	test   al,0x72
  40d2b6:	xchg   ecx,eax
  40d2b7:	xor    al,0xa0
  40d2b9:	int    0x95
  40d2bb:	cmp    edi,DWORD PTR [eax]
  40d2bd:	mov    esi,gs
  40d2bf:	sub    al,BYTE PTR [eax]
  40d2c1:	repz dec BYTE PTR gs:[edx-0x24]
  40d2c6:	add    DWORD PTR [esi+0x3e],eax
  40d2c9:	ss cmp al,0x34
  40d2cc:	pop    ss
  40d2cd:	jle    0x40d322
  40d2cf:	pop    eax
  40d2d0:	mov    ecx,0x5884d8e3
  40d2d5:	(bad)  
  40d2d6:	push   ebx
  40d2d7:	mov    ds:0xb130f74a,al
  40d2dc:	dec    edx
  40d2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2de:	and    al,0xa3
  40d2e0:	jnp    0x40d29c
  40d2e2:	and    DWORD PTR [ebp-0x7d],ebp
  40d2e5:	test   bl,dl
  40d2e7:	dec    esp
  40d2e8:	xlat   BYTE PTR ds:[ebx]
  40d2e9:	mov    DWORD PTR [esi],ebp
  40d2eb:	scas   al,BYTE PTR es:[edi]
  40d2ec:	scas   al,BYTE PTR es:[edi]
  40d2ed:	mov    ss,ebp
  40d2ef:	imul   edi,DWORD PTR [esi+esi*8-0x7c240b69],0x3ef13316
  40d2fa:	in     al,dx
  40d2fb:	or     DWORD PTR [esi-0x20],ebp
  40d2fe:	inc    esp
  40d2ff:	cdq    
  40d300:	not    DWORD PTR ss:[ebx]
  40d303:	sbb    al,0xf2
  40d305:	aad    0xe6
  40d307:	sbb    esp,DWORD PTR [edx+0x6c4600c3]
  40d30d:	hlt    
  40d30e:	xchg   edx,eax
  40d30f:	jbe    0x40d359
  40d311:	push   0x78e0c4c5
  40d316:	cmovge eax,DWORD PTR [esi*1-0x5616b38c]
  40d31e:	hlt    
  40d31f:	test   al,0x2c
  40d321:	ror    DWORD PTR [edi+0x18608685],1
  40d327:	mov    WORD PTR [edx-0x47],cs
  40d32a:	addr16 push cs
  40d32c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d32d:	shr    ah,cl
  40d32f:	pop    edx
  40d330:	call   0x838c:0xbb61a6f3
  40d337:	test   DWORD PTR [eax-0x3e],esp
  40d33a:	cmp    BYTE PTR [edx+0x7fda8462],dl
  40d340:	and    esp,DWORD PTR ds:0xfc082074
  40d346:	and    al,0x55
  40d348:	jae    0x40d376
  40d34a:	rcr    cl,cl
  40d34c:	mov    edx,0xd326dcb6
  40d351:	mov    ch,0x98
  40d353:	cmp    dl,0x71
  40d356:	lahf   
  40d357:	stos   BYTE PTR es:[edi],al
  40d358:	ins    BYTE PTR es:[edi],dx
  40d359:	ret    
  40d35a:	push   edi
  40d35b:	and    eax,DWORD PTR ss:[ebx-0xa]
  40d35f:	mov    cl,0x6b
  40d361:	push   eax
  40d362:	sbb    dh,BYTE PTR [edi-0x23797ca9]
  40d368:	pusha  
  40d369:	and    BYTE PTR [ebp+0x39fb721e],bh
  40d36f:	idiv   ebp
  40d371:	stc    
  40d372:	dec    eax
  40d373:	js     0x40d381
  40d375:	int    0x6c
  40d377:	push   ss
  40d378:	stos   BYTE PTR es:[edi],al
  40d379:	cwde   
  40d37a:	lea    edi,[ebx-0x59e3cf96]
  40d380:	jo     0x40d310
  40d382:	test   BYTE PTR [esi],bh
  40d384:	mov    esi,0x73a2ec85
  40d389:	call   0x578e:0xb1c6eeca
  40d390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d391:	sub    BYTE PTR [esi-0x74678aa8],al
  40d397:	add    dh,BYTE PTR [edi-0x60]
  40d39a:	scas   eax,DWORD PTR es:[edi]
  40d39b:	dec    edi
  40d39c:	adc    eax,0x3bd22d98
  40d3a1:	loope  0x40d36f
  40d3a3:	jnp    0x40d3b4
  40d3a5:	ds pop edx
  40d3a7:	aam    0xcd
  40d3a9:	mov    WORD PTR [eax+0x56],?
  40d3ac:	imul   esp,DWORD PTR [edi-0xb8054e5],0x674eacd8
  40d3b6:	(bad)  
  40d3b7:	repz inc ebx
  40d3b9:	adc    BYTE PTR [ebp-0x45],dh
  40d3bc:	in     eax,0x9f
  40d3be:	sar    BYTE PTR [edx+0x68],cl
  40d3c1:	mov    dh,BYTE PTR [edi-0x74ca2ac0]
  40d3c7:	inc    edi
  40d3c8:	imul   eax,esi,0x3b239e22
  40d3ce:	mov    esi,0xddc85e6e
  40d3d3:	scas   al,BYTE PTR es:[edi]
  40d3d4:	(bad)  
  40d3d5:	jecxz  0x40d44a
  40d3d7:	cmp    al,0xbc
  40d3d9:	push   edi
  40d3da:	loopne 0x40d3b4
  40d3dc:	shr    ebp,cl
  40d3de:	mov    ds:0xb81f0709,al
  40d3e3:	(bad)  
  40d3e4:	mov    edi,0x9a4ba8c5
  40d3e9:	nop
  40d3ea:	and    ebp,DWORD PTR [ecx+ebx*8]
  40d3ed:	adc    BYTE PTR [edi+0x4eea04a],0x5e
  40d3f4:	pushf  
  40d3f5:	mov    edi,esi
  40d3f7:	xchg   ah,al
  40d3f9:	mov    ebp,DWORD PTR [edx+0x44]
  40d3fc:	inc    edx
  40d3fd:	enter  0xcbb2,0xe7
  40d401:	jmp    DWORD PTR ds:0x800360e
  40d407:	inc    esi
  40d408:	mov    ch,BYTE PTR [edi+ebx*8+0x498b8559]
  40d40f:	push   esi
  40d410:	xor    eax,0x74e2eeec
  40d415:	xchg   esp,eax
  40d416:	fidiv  WORD PTR [eax+0xe]
  40d419:	rep outs dx,DWORD PTR ds:[esi]
  40d41b:	sbb    eax,0x625177a
  40d420:	rcl    BYTE PTR [ebx],0x29
  40d423:	jl     0x40d47c
  40d425:	jge    0x40d3d8
  40d427:	add    DWORD PTR [edx+edi*8+0x4ed5a70a],ebp
  40d42e:	jnp    0x40d3f9
  40d430:	and    eax,0x45ae66ee
  40d435:	jmp    DWORD PTR [esi-0x31174b72]
  40d43b:	lods   al,BYTE PTR ds:[esi]
  40d43c:	xchg   DWORD PTR [edx-0x38375aae],ecx
  40d442:	shl    BYTE PTR ds:0x34f84199,cl
  40d448:	mov    bh,0xbb
  40d44a:	test   eax,0x9e4b3290
  40d44f:	mov    ch,0xfb
  40d451:	inc    esp
  40d452:	lock mov al,BYTE PTR [edx+edi*2-0x58]
  40d457:	lahf   
  40d458:	scas   al,BYTE PTR es:[edi]
  40d459:	mov    ds:0x7eea5fbc,eax
  40d45e:	in     eax,0xb7
  40d460:	out    dx,al
  40d461:	sub    eax,0x353f40c0
  40d466:	out    0x75,al
  40d468:	loop   0x40d40c
  40d46a:	scas   eax,DWORD PTR es:[edi]
  40d46b:	jg     0x40d469
  40d46d:	sub    DWORD PTR [edx],0x4e748f30
  40d473:	cmp    BYTE PTR [eax],0x61
  40d476:	sub    cl,BYTE PTR [ecx-0x47]
  40d479:	sub    ecx,esi
  40d47b:	pushf  
  40d47c:	mov    dl,0xe9
  40d47e:	lds    ebx,FWORD PTR [ebx]
  40d480:	stos   BYTE PTR es:[edi],al
  40d481:	or     esp,edx
  40d483:	cmp    ebp,DWORD PTR [edx+0x70]
  40d486:	adc    al,0xaa
  40d488:	mov    dh,0x6a
  40d48a:	or     al,0x3a
  40d48c:	pushf  
  40d48d:	jns    0x40d482
  40d48f:	mov    edi,fs
  40d491:	test   eax,0x2eadd2ea
  40d496:	xor    BYTE PTR [eax+0x715d94e7],cl
  40d49c:	mov    eax,edx
  40d49e:	cld    
  40d49f:	xchg   edi,eax
  40d4a0:	cli    
  40d4a1:	pusha  
  40d4a2:	dec    ebp
  40d4a3:	hlt    
  40d4a4:	push   ebp
  40d4a5:	pop    edi
  40d4a6:	pop    ecx
  40d4a7:	cli    
  40d4a8:	call   0x34ac:0xf2e4631b
  40d4af:	fisub  DWORD PTR gs:[ebp-0x46]
  40d4b3:	xchg   ecx,eax
  40d4b4:	data16 jle 0x40d50e
  40d4b7:	fs int 0x54
  40d4ba:	in     eax,0xad
  40d4bc:	pop    es
  40d4bd:	aas    
  40d4be:	push   ds
  40d4bf:	sub    BYTE PTR [eax-0x60],al
  40d4c2:	jl     0x40d4f7
  40d4c4:	cmp    DWORD PTR [eax],esp
  40d4c6:	mov    edx,DWORD PTR [ecx-0x1a3abcd8]
  40d4cc:	ja     0x40d465
  40d4ce:	xor    BYTE PTR [ecx+0x36],ch
  40d4d1:	retf   0x52b5
  40d4d4:	(bad)  
  40d4d5:	aam    0x90
  40d4d7:	adc    esi,DWORD PTR [ebx+esi*8-0x55]
  40d4db:	add    eax,0x35074fa8
  40d4e0:	(bad)  
  40d4e1:	push   edx
  40d4e2:	xor    BYTE PTR ds:0x862e0499,al
  40d4e8:	pop    ebp
  40d4e9:	loope  0x40d557
  40d4eb:	push   es
  40d4ec:	mov    eax,ds:0x764942ca
  40d4f1:	mov    ss,edx
  40d4f3:	sub    DWORD PTR [bp+0x40],edx
  40d4f7:	xchg   ebx,eax
  40d4f8:	xchg   BYTE PTR [ebx+0xa500132],al
  40d4fe:	cmp    esp,DWORD PTR [edx]
  40d500:	mov    WORD PTR [edx+ecx*2+0x6],ss
  40d504:	xchg   DWORD PTR [ebp+0x5c64fc22],esi
  40d50a:	lea    edx,[eax-0xc]
  40d50d:	jmp    0x40d54c
  40d50f:	gs push 0x5466e259
  40d515:	sbb    BYTE PTR [edx-0x37],dl
  40d518:	gs addr16 mov ebp,0x1053ed85
  40d51f:	dec    edx
  40d520:	xchg   ebp,eax
  40d521:	xor    BYTE PTR [esi-0x2addd885],ah
  40d527:	sub    BYTE PTR [ebp-0x37],ah
  40d52a:	or     bh,BYTE PTR [esi-0x10c0e069]
  40d530:	mov    ?,WORD PTR [esi+ebp*2-0x3635f2c8]
  40d537:	add    eax,0x846260c7
  40d53c:	(bad)  
  40d53d:	or     eax,0xcf978d14
  40d542:	xchg   ebp,eax
  40d543:	fisubr DWORD PTR [eax-0x503f239e]
  40d549:	or     al,0xab
  40d54b:	mov    edi,DWORD PTR [ecx-0xe]
  40d54e:	or     eax,0x24f37a7f
  40d553:	inc    edx
  40d554:	mov    bl,0x67
  40d556:	aad    0x47
  40d558:	xor    BYTE PTR [edi-0x1b50355d],ch
  40d55e:	pop    es
  40d55f:	pushf  
  40d560:	test   eax,0x4e8fd9d7
  40d565:	add    bh,ch
  40d567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d568:	js     0x40d596
  40d56a:	in     al,0xff
  40d56c:	enter  0xa0fc,0x9
  40d570:	imul   edi,DWORD PTR [edi],0x52
  40d573:	pop    es
  40d574:	pop    esp
  40d575:	and    ecx,esi
  40d577:	push   ds
  40d578:	dec    ecx
  40d579:	and    DWORD PTR [edi+ebp*8+0x47ebd271],edi
  40d580:	push   edi
  40d581:	loope  0x40d548
  40d583:	jnp    0x40d558
  40d585:	mov    edx,0x43a251bc
  40d58a:	hlt    
  40d58b:	mov    edx,0xc0563991
  40d590:	call   0xa303:0x393c60b8
  40d597:	ret    
  40d598:	mov    ecx,0x9349c606
  40d59d:	cmc    
  40d59e:	add    al,0xa2
  40d5a0:	dec    ecx
  40d5a1:	and    BYTE PTR [ecx+0x14],cl
  40d5a4:	test   BYTE PTR [ecx+0x39],ch
  40d5a7:	xor    eax,0xe2f4e697
  40d5ac:	(bad)  
  40d5ad:	not    DWORD PTR [ebx]
  40d5af:	lea    edx,[esi-0x37ef5b3e]
  40d5b5:	aad    0xfe
  40d5b7:	mov    esi,0xb6b3cd8e
  40d5bc:	jns    0x40d5ac
  40d5be:	mov    bl,0xe7
  40d5c0:	gs test al,0x17
  40d5c3:	or     al,0x3d
  40d5c5:	cmp    bl,bh
  40d5c7:	fcom   QWORD PTR [ecx+0x73]
  40d5ca:	adc    edi,DWORD PTR [ecx+0x17]
  40d5cd:	ss xchg edx,eax
  40d5cf:	add    eax,0xeab5ccda
  40d5d4:	push   ecx
  40d5d5:	inc    esp
  40d5d7:	ret    
  40d5d8:	jg     0x40d5d7
  40d5da:	inc    edi
  40d5db:	or     al,0x19
  40d5dd:	cdq    
  40d5de:	dec    esp
  40d5df:	js     0x40d57d
  40d5e1:	call   0x7db30a0c
  40d5e6:	push   edi
  40d5e7:	inc    eax
  40d5e8:	data16 mov dl,0x4d
  40d5eb:	loope  0x40d5ba
  40d5ed:	mov    esi,DWORD PTR ds:0xd2bd65e7
  40d5f3:	ficom  WORD PTR [ecx+0x4521d331]
  40d5f9:	repz sbb ecx,eax
  40d5fc:	cli    
  40d5fd:	lds    edi,FWORD PTR [ebx]
  40d5ff:	mov    ebx,0xcf4b5786
  40d604:	outs   dx,BYTE PTR ds:[esi]
  40d605:	shr    DWORD PTR [ecx-0x3acd8d7],1
  40d60b:	pop    es
  40d60c:	popf   
  40d60d:	test   al,0x82
  40d60f:	jl     0x40d67c
  40d611:	and    DWORD PTR [esi],edx
  40d613:	xor    DWORD PTR [edx],edi
  40d615:	jle    0x40d5ec
  40d617:	xchg   ecx,eax
  40d618:	cli    
  40d619:	xchg   DWORD PTR gs:[edi-0x62],edi
  40d61d:	mov    dl,0x61
  40d61f:	push   es
  40d620:	ds xchg esp,eax
  40d622:	fmul   QWORD PTR [edx]
  40d624:	retf   0x1614
  40d627:	bound  edx,QWORD PTR [esi-0x3bfcf54c]
  40d62d:	mov    ?,edi
  40d62f:	arpl   WORD PTR [edx+eiz*4],sp
  40d632:	mov    edi,0xd4f9e120
  40d637:	sbb    dh,ah
  40d639:	imul   edi,DWORD PTR [esi+0x12],0xffffffd3
  40d63d:	adc    bh,BYTE PTR [esi]
  40d63f:	les    ebx,FWORD PTR [ebp-0xd0078a4]
  40d645:	data16 icebp 
  40d647:	out    dx,al
  40d648:	in     al,0x64
  40d64a:	mov    ds:0x4a0d73f5,eax
  40d64f:	repnz pop ebx
  40d651:	mov    edi,0xca48cd97
  40d656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d657:	repnz loopne 0x40d692
  40d65a:	rcl    edx,1
  40d65c:	outs   dx,BYTE PTR ds:[esi]
  40d65d:	pusha  
  40d65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d65f:	add    DWORD PTR [edi-0x22],0x2c86e062
  40d666:	jl     0x40d627
  40d668:	test   al,0x2d
  40d66a:	inc    edx
  40d66b:	out    0x54,al
  40d66d:	jmp    0x32eca0d3
  40d672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d673:	dec    edx
  40d674:	fadd   QWORD PTR [ecx+0x2e]
  40d677:	jmp    0xf982:0xccbdc8a1
  40d67e:	sbb    BYTE PTR [esp+esi*1+0x13e3976b],ch
  40d685:	inc    eax
  40d686:	out    dx,eax
  40d687:	stc    
  40d688:	push   ebp
  40d689:	xor    DWORD PTR ds:0x6d88ae36,edi
  40d68f:	jg     0x40d643
  40d691:	ins    DWORD PTR es:[edi],dx
  40d692:	pop    ebx
  40d693:	bound  edi,QWORD PTR [edi]
  40d695:	xchg   ebp,eax
  40d696:	sub    al,0x35
  40d698:	add    BYTE PTR [ecx],al
  40d69a:	sub    ebx,DWORD PTR [edx-0x1d9637f7]
  40d6a0:	mov    bl,0xb
  40d6a2:	cmp    esi,edx
  40d6a4:	hlt    
  40d6a5:	imul   ecx,DWORD PTR [ebp+0x2b1b8b2e],0x24d96361
  40d6af:	ret    0xaf98
  40d6b2:	push   0x30
  40d6b4:	add    dh,BYTE PTR [eax]
  40d6b6:	mov    ds:0x973d5b9d,eax
  40d6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6bc:	jmp    0x72a441b
  40d6c1:	scas   eax,DWORD PTR es:[edi]
  40d6c2:	int3   
  40d6c3:	dec    edi
  40d6c4:	mov    ecx,0xfc5f38cf
  40d6c9:	dec    ebx
  40d6ca:	fsub   DWORD PTR [ebx+0x50]
  40d6cd:	inc    eax
  40d6ce:	in     al,dx
  40d6cf:	retf   0x6cab
  40d6d2:	sbb    DWORD PTR [edi],0xcf03a5bf
  40d6d8:	cmp    ch,dl
  40d6da:	push   edi
  40d6db:	adc    al,0x86
  40d6dd:	jl     0x40d6a2
  40d6df:	mov    bl,BYTE PTR [edi]
  40d6e1:	xchg   ebp,eax
  40d6e2:	imul   edi,DWORD PTR [esi-0x60],0x6b
  40d6e6:	cmc    
  40d6e7:	enter  0x2f02,0xdb
  40d6eb:	xchg   esi,eax
  40d6ec:	int    0xfd
  40d6ee:	push   ds
  40d6ef:	cmp    edi,ebp
  40d6f1:	mov    ebp,esi
  40d6f3:	loope  0x40d6c2
  40d6f5:	sahf   
  40d6f6:	clc    
  40d6f7:	cmp    dh,BYTE PTR [eax]
  40d6f9:	mov    edx,0x43e19667
  40d6fe:	adc    bl,cl
  40d700:	mov    WORD PTR [ebx+eax*4],ds
  40d703:	lahf   
  40d704:	gs jnp 0x40d6ff
  40d707:	inc    ecx
  40d708:	mov    cl,0x91
  40d70a:	mov    esp,edx
  40d70c:	add    eax,0xaf6bb97
  40d711:	ret    0x7754
  40d714:	es daa 
  40d716:	jo     0x40d719
  40d718:	or     ebp,ebp
  40d71a:	pop    ecx
  40d71b:	rcl    BYTE PTR [ebp-0x262e0b61],1
  40d721:	mov    edi,0x7e61a155
  40d726:	ins    DWORD PTR es:[edi],dx
  40d727:	cld    
  40d728:	xchg   esi,eax
  40d729:	aad    0xcc
  40d72b:	cwde   
  40d72c:	retf   0xab73
  40d72f:	xor    al,0x93
  40d731:	adc    al,BYTE PTR [eax+0x5b]
  40d734:	jmp    0x40d753
  40d736:	dec    esi
  40d737:	fisub  WORD PTR [ebx+0x30909714]
  40d73d:	xor    al,0xa5
  40d73f:	cmp    eax,0xe424b3e8
  40d744:	rcr    BYTE PTR [edx],0xc8
  40d747:	mov    bl,0x1f
  40d749:	jg     0x40d781
  40d74b:	adc    bl,BYTE PTR [edx+0x73]
  40d74e:	dec    ebx
  40d74f:	repz pop ebx
  40d751:	pop    ebx
  40d752:	add    ebx,DWORD PTR [ecx]
  40d754:	test   BYTE PTR [eax],bh
  40d756:	popf   
  40d757:	(bad)  
  40d758:	adc    eax,0x1efb298d
  40d75d:	jle    0x40d6f2
  40d75f:	xchg   ecx,eax
  40d760:	xor    DWORD PTR [esi],edx
  40d762:	sub    al,dl
  40d764:	add    bh,BYTE PTR [edi]
  40d766:	mov    bh,0x1f
  40d768:	xchg   edi,eax
  40d769:	pop    ebp
  40d76a:	jmp    0x7986740d
  40d76f:	pop    ss
  40d770:	fistp  WORD PTR [edi+eax*8+0x51de9eea]
  40d777:	inc    ebp
  40d778:	and    esp,0x15b34024
  40d77e:	fsub   DWORD PTR [edi-0x58ef89c6]
  40d784:	xchg   esi,eax
  40d785:	in     al,0x5e
  40d787:	ins    DWORD PTR es:[edi],dx
  40d788:	xor    DWORD PTR ds:0xa1bb2316,esi
  40d78e:	or     cl,BYTE PTR [edx+0x0]
  40d791:	(bad)  
  40d793:	xor    ah,0x7
  40d796:	iret   
  40d797:	adc    eax,0x3dc362b1
  40d79c:	adc    BYTE PTR [ecx],bh
  40d79e:	in     eax,dx
  40d79f:	add    edx,DWORD PTR [eax+eax*1+0x3e]
  40d7a3:	outs   dx,BYTE PTR ds:[esi]
  40d7a4:	or     DWORD PTR [edi],esi
  40d7a6:	stc    
  40d7a7:	jb     0x40d780
  40d7a9:	mov    ah,0x67
  40d7ab:	jo     0x40d7bf
  40d7ad:	cwde   
  40d7ae:	in     al,dx
  40d7af:	pushf  
  40d7b0:	push   0x6c323244
  40d7b5:	js     0x40d788
  40d7b7:	xchg   ebx,eax
  40d7b8:	adc    ecx,DWORD PTR [eax+ebx*2-0x1b3292d7]
  40d7bf:	ss popf 
  40d7c1:	push   ecx
  40d7c2:	or     DWORD PTR [eax+0x686c0517],esp
  40d7c8:	retf   
  40d7c9:	dec    edi
  40d7ca:	loop   0x40d811
  40d7cc:	xchg   edx,eax
  40d7cd:	(bad)  
  40d7ce:	jge    0x40d7cd
  40d7d0:	ror    BYTE PTR [edi-0xecebfd6],0xeb
  40d7d7:	xor    esp,esi
  40d7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7da:	inc    esp
  40d7db:	popf   
  40d7dc:	add    DWORD PTR [ebx+0x3d],ebx
  40d7df:	mov    esi,0x254f4414
  40d7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e5:	jp     0x40d788
  40d7e7:	es cdq 
  40d7e9:	cmc    
  40d7ea:	fild   QWORD PTR [ebp+0x61b88567]
  40d7f0:	hlt    
  40d7f1:	xor    eax,0x9dd1337e
  40d7f6:	data16 jl 0x40d835
  40d7f9:	clc    
  40d7fa:	mov    al,0xfc
  40d7fc:	inc    esp
  40d7fd:	pushf  
  40d7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ff:	sbb    ecx,eax
  40d801:	mov    ebp,0x34770440
  40d806:	mov    ds:0x1c24f4f6,eax
  40d80b:	xchg   ebx,eax
  40d80c:	lock add dh,BYTE PTR [ebx-0x73]
  40d810:	sub    bh,BYTE PTR es:[ecx]
  40d813:	out    0x9a,al
  40d815:	cmp    ch,BYTE PTR [eax-0x8]
  40d818:	sbb    esi,DWORD PTR [eax+0x2]
  40d81b:	mov    dh,0xf5
  40d81d:	(bad)  
  40d81e:	js     0x40d7e4
  40d820:	mov    bl,0xcb
  40d822:	div    DWORD PTR [ecx+0x5cf0ab7]
  40d828:	cmp    al,0xae
  40d82a:	mov    ebp,0x27db9dd1
  40d82f:	or     al,0xdc
  40d831:	sub    ah,BYTE PTR [esi+0x2f694f86]
  40d837:	mov    ecx,0x5120a900
  40d83c:	ror    ecx,1
  40d83e:	add    DWORD PTR [esp+ebx*4-0x74],esp
  40d842:	aam    0xe3
  40d844:	mov    eax,0xabfbb254
  40d849:	sub    bl,BYTE PTR [edx+0x4e8dab19]
  40d84f:	mov    edx,0xbe083241
  40d854:	scas   eax,DWORD PTR es:[edi]
  40d855:	fstp   TBYTE PTR [edx+0x26]
  40d858:	shr    BYTE PTR [eax+0x1572d85a],0x2f
  40d85f:	adc    ah,BYTE PTR [edx]
  40d861:	retf   
  40d862:	retf   
  40d863:	outs   dx,DWORD PTR ds:[esi]
  40d864:	iret   
  40d865:	push   0xfffffffe
  40d867:	push   0xffffff97
  40d869:	ss ret 
  40d86b:	and    BYTE PTR [ecx-0x39],ch
  40d86e:	outs   dx,BYTE PTR ds:[esi]
  40d86f:	scas   al,BYTE PTR es:[edi]
  40d870:	push   DWORD PTR [eax+0x3927daa5]
  40d876:	push   edx
  40d877:	data16 and al,0xa1
  40d87a:	push   eax
  40d87b:	add    esi,edi
  40d87d:	mov    bh,0xba
  40d87f:	mov    WORD PTR [edx+0x7e5bc54a],gs
  40d885:	bound  esp,QWORD PTR [ecx+0x71]
  40d888:	ins    DWORD PTR es:[edi],dx
  40d889:	mov    bl,BYTE PTR [edx-0x66]
  40d88c:	cmc    
  40d88d:	xchg   DWORD PTR [ecx],ebp
  40d88f:	add    dl,dh
  40d891:	xchg   edi,eax
  40d892:	push   ebx
  40d893:	in     al,0x94
  40d895:	pop    ebp
  40d896:	shr    BYTE PTR [ebp+0x73],cl
  40d899:	popf   
  40d89a:	pop    ss
  40d89b:	mov    bl,0xe3
  40d89d:	add    edx,DWORD PTR [edx+ebx*1-0xfdd0def]
  40d8a4:	xchg   edi,eax
  40d8a5:	jns    0x40d82c
  40d8a7:	ror    BYTE PTR fs:[ebp+0x68],cl
  40d8ab:	adc    al,0x18
  40d8ad:	into   
  40d8ae:	xor    ch,BYTE PTR [edi+ecx*8]
  40d8b1:	inc    esp
  40d8b2:	push   ss
  40d8b3:	repnz in al,dx
  40d8b5:	add    al,0x6
  40d8b7:	ins    BYTE PTR es:[edi],dx
  40d8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8b9:	mov    BYTE PTR [edi-0x7],0x9a
  40d8bd:	push   0xd1a1eb67
  40d8c2:	lds    edx,FWORD PTR [ebx-0x3f]
  40d8c5:	push   edx
  40d8c6:	xchg   ebx,eax
  40d8c7:	dec    ebp
  40d8c8:	not    DWORD PTR [edi+0x183c224b]
  40d8ce:	dec    esi
  40d8cf:	pop    edx
  40d8d0:	cmp    al,BYTE PTR [ecx]
  40d8d2:	cmc    
  40d8d3:	sbb    DWORD PTR [edx+0x1ebb0b9a],esi
  40d8d9:	mov    esp,0xef2c1b34
  40d8de:	cmp    BYTE PTR ds:0xde32168f,0xec
  40d8e5:	add    eax,0x2e875a40
  40d8ea:	xor    ch,BYTE PTR [ecx+0x15a7fc3e]
  40d8f0:	inc    ecx
  40d8f1:	mov    WORD PTR [ebp-0x18468af],es
  40d8f7:	scas   eax,DWORD PTR es:[edi]
  40d8f8:	pop    eax
  40d8f9:	sbb    DWORD PTR [ebx],eax
  40d8fb:	jmp    0x6c05:0x11e32ea6
  40d902:	push   edi
  40d903:	push   0xccc2de1c
  40d908:	jle    0x40d8c4
  40d90a:	push   edi
  40d90b:	mov    cs,WORD PTR [ebx-0x54a1d928]
  40d911:	mov    ebp,0x46d4eae7
  40d916:	jl     0x40d96c
  40d918:	push   edx
  40d919:	stos   BYTE PTR es:[edi],al
  40d91a:	inc    eax
  40d91b:	cmp    eax,edi
  40d91d:	cdq    
  40d91e:	push   esp
  40d91f:	test   al,0x23
  40d921:	inc    esp
  40d922:	add    DWORD PTR [esi+0x426abbb1],ecx
  40d928:	(bad)  
  40d929:	ss mov esp,0xf37a4edb
  40d92f:	mov    eax,0xad458072
  40d934:	call   0xf33a:0x962a2e9e
  40d93b:	sahf   
  40d93c:	push   ds
  40d93d:	call   DWORD PTR [eax-0x50]
  40d940:	adc    eax,0x4c222336
  40d945:	mov    ch,0xec
  40d947:	lods   al,BYTE PTR ds:[esi]
  40d948:	cdq    
  40d949:	aaa    
  40d94a:	test   DWORD PTR [ecx+0x66],ebp
  40d94d:	fsubr  QWORD PTR [esi+0x1344beb1]
  40d953:	dec    eax
  40d954:	fcomi  st,st(0)
  40d956:	inc    edx
  40d957:	es mov ah,0xf3
  40d95a:	xchg   ebx,eax
  40d95b:	xor    DWORD PTR [eax-0x3c40875b],edx
  40d961:	retf   
  40d962:	inc    edi
  40d963:	cli    
  40d964:	xor    eax,0xdc25216
  40d969:	mov    al,BYTE PTR [edi]
  40d96b:	adc    DWORD PTR [ecx+eiz*8-0x6f],eax
  40d96f:	imul   ebx,edi,0x58e58fcc
  40d975:	lds    ebp,FWORD PTR [edx+0x7a]
  40d978:	out    dx,al
  40d979:	cmp    bl,BYTE PTR [ebp+0x51]
  40d97c:	sub    DWORD PTR [esp+edi*2-0x6f],esp
  40d980:	ja     0x40d92c
  40d982:	aaa    
  40d983:	mov    ebx,0x87156ff6
  40d988:	in     al,0xa
  40d98a:	lock sub al,0xa2
  40d98d:	mov    edx,0x5db229af
  40d992:	into   
  40d993:	addr16 cmp al,0x4
  40d996:	fst    QWORD PTR [esp+edi*1]
  40d999:	popa   
  40d99a:	(bad)  
  40d99b:	ficomp WORD PTR ds:0xeb7645a6
  40d9a1:	sti    
  40d9a2:	xor    edx,DWORD PTR [ebx+0x13]
  40d9a5:	pmulhw mm2,mm7
  40d9a8:	das    
  40d9a9:	sub    eax,ebx
  40d9ab:	mov    ds:0xb6e0b12d,al
  40d9b0:	pop    ds
  40d9b1:	call   0xe88a:0xcd375f4b
  40d9b8:	in     eax,dx
  40d9b9:	and    cl,BYTE PTR [edx-0x6bd20343]
  40d9bf:	mov    BYTE PTR [edx],dl
  40d9c1:	fdiv   QWORD PTR [ebx+0x24]
  40d9c4:	mov    edx,0xaeaf612c
  40d9c9:	imul   ebx,DWORD PTR [ecx-0x77],0x79
  40d9cd:	pop    es
  40d9ce:	mov    WORD PTR [ebx-0x7d],es
  40d9d1:	mov    ah,0x9
  40d9d3:	rol    ebp,0xda
  40d9d6:	pop    eax
  40d9d7:	pop    esp
  40d9d8:	sub    al,0x2c
  40d9da:	mov    ecx,0xe25c388
  40d9df:	and    DWORD PTR [ebp+0x4746c1ab],0x39560516
  40d9e9:	test   al,0x12
  40d9eb:	es xor eax,0x853ddeaf
  40d9f1:	push   ebx
  40d9f2:	ss dec edi
  40d9f4:	mov    bl,0x98
  40d9f6:	pop    ebp
  40d9f7:	jne    0x40da75
  40d9f9:	imul   ebp,ebx,0xffffff9a
  40d9fc:	and    dl,BYTE PTR [edi]
  40d9fe:	push   gs
  40da00:	jl     0x40da4e
  40da02:	dec    esp
  40da03:	push   ds
  40da04:	ins    DWORD PTR es:[edi],dx
  40da05:	aas    
  40da06:	aaa    
  40da07:	outs   dx,BYTE PTR ds:[esi]
  40da08:	xor    ah,ah
  40da0a:	sbb    cl,BYTE PTR [ebx-0x32]
  40da0d:	jmp    FWORD PTR [ebx-0x2b654de1]
  40da13:	out    dx,eax
  40da14:	not    BYTE PTR [ebp-0x3f]
  40da17:	(bad)  [ecx-0x6d]
  40da1a:	and    cl,0x61
  40da1d:	aas    
  40da1e:	in     eax,0x81
  40da20:	ja     0x40d9ef
  40da22:	add    eax,0x61a8fd11
  40da27:	inc    ebp
  40da28:	add    eax,0x61edd864
  40da2d:	add    eax,DWORD PTR [eax+0x1abfea4c]
  40da33:	jp     0x40da1a
  40da35:	sub    DWORD PTR [eax-0x1da3b5fd],edx
  40da3b:	jae    0x40da97
  40da3d:	out    0x33,al
  40da3f:	ret    0x7ecb
  40da42:	dec    edi
  40da43:	mov    ?,ecx
  40da45:	int3   
  40da46:	lock fst DWORD PTR [esi]
  40da4a:	or     BYTE PTR [ecx-0x1085c20e],al
  40da50:	mov    BYTE PTR [edx-0x74fca2c],cl
  40da56:	xor    bl,BYTE PTR [ebp-0xaf79f2d]
  40da5c:	cmp    ebx,DWORD PTR [ebx+0x4b]
  40da5f:	nop
  40da60:	xchg   edx,eax
  40da61:	das    
  40da62:	aaa    
  40da63:	das    
  40da64:	jp     0x40da48
  40da66:	in     eax,0x1a
  40da68:	sahf   
  40da69:	data16 jl 0x40da10
  40da6c:	and    al,0xd8
  40da6e:	daa    
  40da6f:	aaa    
  40da70:	enter  0x3f95,0x2d
  40da74:	or     BYTE PTR ds:0xbd7f2918,ch
  40da7a:	fwait
  40da7b:	xchg   BYTE PTR [ebp-0x28],ah
  40da7e:	mov    eax,ds:0xffe86e3c
  40da83:	in     al,0xd3
  40da85:	push   eax
  40da86:	and    BYTE PTR [ebx+0x65],bl
  40da89:	fsubr  st(7),st
  40da8b:	pop    ecx
  40da8c:	mov    ecx,0xb42bab71
  40da91:	mov    ecx,0x8e3294c7
  40da96:	dec    edx
  40da97:	push   edi
  40da98:	es addr16 jb 0x40da6c
  40da9c:	cwde   
  40da9d:	(bad)  
  40da9e:	out    dx,al
  40da9f:	in     ax,0xec
  40daa2:	inc    DWORD PTR [edx+0x24]
  40daa5:	int    0xed
  40daa7:	inc    edx
  40daa8:	(bad)  
  40daa9:	dec    edx
  40daaa:	aaa    
  40daab:	jnp    0x40daab
  40daad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daae:	jbe    0x40da48
  40dab0:	rcr    edx,cl
  40dab2:	into   
  40dab3:	in     al,0x15
  40dab5:	mov    ebp,0x13d9ad92
  40daba:	leave  
  40dabb:	lods   eax,DWORD PTR ds:[esi]
  40dabc:	dec    BYTE PTR [eax]
  40dabe:	ds pop esi
  40dac0:	adc    dl,BYTE PTR [ecx]
  40dac2:	pop    edi
  40dac3:	outs   dx,BYTE PTR ds:[esi]
  40dac4:	or     edx,DWORD PTR [edi-0x16]
  40dac7:	stos   BYTE PTR es:[edi],al
  40dac8:	ins    DWORD PTR es:[edi],dx
  40dac9:	mov    dh,0xad
  40dacb:	cmc    
  40dacc:	ds ds pop ecx
  40dacf:	mov    eax,0xcf48ff75
  40dad4:	cdq    
  40dad5:	das    
  40dad6:	mov    ebp,0xecddac1e
  40dadb:	jmp    0x40db3e
  40dadd:	add    al,0x41
  40dadf:	sbb    eax,0x5fa1a49e
  40dae4:	pop    ss
  40dae5:	jno    0x40db47
  40dae7:	clc    
  40dae8:	jnp    0x40db56
  40daea:	out    dx,al
  40daeb:	mov    ebp,0xc3b1d78e
  40daf0:	call   0x5bc2b9f8
  40daf5:	mov    BYTE PTR [esi-0x16d032c6],cl
  40dafb:	mov    esi,0xa4cac759
  40db00:	fadd   DWORD PTR [ebp+esi*8-0x4b]
  40db04:	cdq    
  40db05:	out    0x6e,eax
  40db07:	mov    edi,0xb692e0c9
  40db0c:	das    
  40db0d:	lock jl 0x40db5c
  40db10:	outs   dx,BYTE PTR ds:[esi]
  40db11:	inc    esp
  40db12:	mov    cl,0xc1
  40db14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db15:	mov    edi,0xad63d4b
  40db1a:	retf   0x5cb0
  40db1d:	fisub  DWORD PTR [ebx-0x5a]
  40db20:	mov    eax,0x240dfbf3
  40db25:	in     eax,0x18
  40db27:	mov    eax,?
  40db29:	mov    al,0x85
  40db2b:	out    dx,eax
  40db2c:	and    DWORD PTR [ebx-0x40],eax
  40db2f:	add    ebx,DWORD PTR [ebp+0x17]
  40db32:	leave  
  40db33:	pop    ebp
  40db34:	adc    al,0x31
  40db36:	xor    DWORD PTR [edx],0xffffffdd
  40db39:	push   DWORD PTR [ebx+edx*2]
  40db3c:	(bad)  
  40db3d:	out    0x36,al
  40db3f:	outs   dx,DWORD PTR ds:[esi]
  40db40:	pop    ds
  40db41:	lods   al,BYTE PTR ds:[esi]
  40db42:	xchg   esi,eax
  40db43:	in     eax,dx
  40db44:	repz add al,0x23
  40db47:	xchg   edx,eax
  40db48:	cdq    
  40db49:	rol    DWORD PTR [ebp-0x24],1
  40db4c:	(bad)  
  40db4d:	sub    al,0x68
  40db4f:	ss out dx,al
  40db51:	jbe    0x40dbbf
  40db53:	fild   QWORD PTR [eax-0x16]
  40db56:	push   ss
  40db57:	adc    BYTE PTR [eax+0x5b6f0f0c],ch
  40db5d:	iret   
  40db5e:	scas   al,BYTE PTR es:[edi]
  40db5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db60:	push   ebx
  40db61:	fs std 
  40db63:	pop    es
  40db64:	out    dx,al
  40db65:	adc    BYTE PTR [eax+0x34cf6e9b],0x87
  40db6c:	xlat   BYTE PTR ds:[ebx]
  40db6d:	int    0x46
  40db6f:	add    BYTE PTR [ebp+eiz*8+0x3f39bfcf],cl
  40db76:	cld    
  40db77:	adc    eax,0x655dece2
  40db7c:	push   ebp
  40db7d:	add    al,0x6f
  40db7f:	popf   
  40db80:	xchg   BYTE PTR [esi+0x2d],dl
  40db83:	add    ah,ch
  40db85:	xchg   DWORD PTR [esi],edi
  40db87:	dec    eax
  40db88:	mov    eax,ds:0xeb6434aa
  40db8d:	mov    ch,0xe4
  40db8f:	push   ecx
  40db90:	sub    ch,BYTE PTR [ebp-0x120a1db]
  40db96:	pop    ecx
  40db97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db98:	cmc    
  40db99:	das    
  40db9a:	inc    esp
  40db9b:	and    BYTE PTR [esi],ch
  40db9d:	retf   
  40db9e:	test   al,0x9d
  40dba0:	pop    sp
  40dba2:	mov    ebx,0xd1cd8118
  40dba7:	not    cl
  40dba9:	mov    ebx,0xcd0517ab
  40dbae:	jne    0x40db6a
  40dbb0:	scas   al,BYTE PTR es:[edi]
  40dbb1:	mov    bl,0xb
  40dbb3:	jb     0x40dbf0
  40dbb5:	add    al,0xc1
  40dbb7:	lods   al,BYTE PTR ds:[esi]
  40dbb8:	sub    bl,bl
  40dbba:	fisub  WORD PTR [edi+0x29]
  40dbbd:	mov    ch,0xb5
  40dbbf:	add    eax,0xd2bdfc6e
  40dbc4:	lock push ecx
  40dbc6:	stc    
  40dbc7:	pop    edi
  40dbc8:	mov    ebx,0x7ec26e5d
  40dbcd:	scas   eax,DWORD PTR es:[edi]
  40dbce:	ds icebp 
  40dbd0:	ss add dh,ah
  40dbd3:	dec    ebx
  40dbd4:	enter  0x49ee,0xa3
  40dbd8:	jg     0x40dc22
  40dbda:	sbb    bh,BYTE PTR [edi-0x11]
  40dbdd:	inc    edi
  40dbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbdf:	xchg   ebx,eax
  40dbe0:	ret    
  40dbe1:	pop    ecx
  40dbe2:	hlt    
  40dbe3:	stos   BYTE PTR es:[edi],al
  40dbe4:	pop    edx
  40dbe5:	out    dx,eax
  40dbe6:	sub    eax,0x82c84382
  40dbeb:	add    BYTE PTR [ebp+ebp*2-0x7c],dl
  40dbef:	inc    ebx
  40dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf1:	jge    0x40db83
  40dbf3:	or     eax,0x3779ff82
  40dbf8:	loop   0x40dbc5
  40dbfa:	retf   
  40dbfb:	inc    esi
  40dbfc:	in     al,0x39
  40dbfe:	mov    esi,0xa7eeeb34
  40dc03:	mov    ch,ch
  40dc05:	inc    edi
  40dc06:	pop    esp
  40dc07:	adc    al,0xb3
  40dc09:	mov    ebx,0x3cb2bb76
  40dc0e:	jp     0x40dc52
  40dc10:	daa    
  40dc11:	mov    dl,0x65
  40dc13:	sbb    DWORD PTR [edi-0x35ed4cf9],esp
  40dc19:	mov    esi,0xe65e161
  40dc1e:	retf   0xf6a9
  40dc21:	mov    ebx,0x7955f173
  40dc26:	outs   dx,DWORD PTR ds:[esi]
  40dc27:	stc    
  40dc28:	outs   dx,DWORD PTR ds:[esi]
  40dc29:	popf   
  40dc2a:	aam    0x6f
  40dc2c:	push   0x454b0184
  40dc31:	pop    edx
  40dc32:	xor    cl,bl
  40dc34:	or     DWORD PTR [eax],0x21
  40dc37:	inc    esi
  40dc38:	and    DWORD PTR [ebx+0x2c],0x7
  40dc3c:	into   
  40dc3d:	ror    edi,cl
  40dc3f:	push   0x3e889b95
  40dc44:	and    cl,BYTE PTR [ecx+0x29aaf8ff]
  40dc4a:	mov    esp,0x279d1bde
  40dc4f:	jno    0x40dcb5
  40dc51:	int3   
  40dc52:	pop    ds
  40dc53:	jg     0x40dc56
  40dc55:	pop    esp
  40dc56:	cmp    DWORD PTR [ebx],eax
  40dc58:	mov    eax,ds:0xcd019d82
  40dc5d:	out    dx,eax
  40dc5e:	mov    ds,WORD PTR [ebx-0x1f61ee20]
  40dc64:	into   
  40dc65:	sbb    al,0xb5
  40dc67:	add    cl,BYTE PTR [esi-0x7643c2ab]
  40dc6d:	in     eax,0x10
  40dc6f:	aaa    
  40dc70:	sub    al,0x5c
  40dc72:	fldcw  WORD PTR [esp+edi*1-0xd]
  40dc76:	bound  esi,QWORD PTR [edx-0x11e27968]
  40dc7c:	cmp    bh,BYTE PTR [edi-0x6f880ab1]
  40dc82:	lock iret 
  40dc84:	in     eax,0x85
  40dc86:	xchg   esi,eax
  40dc87:	xchg   DWORD PTR [ebp-0x63],esi
  40dc8a:	cwde   
  40dc8b:	xor    esp,DWORD PTR [esi+0x10]
  40dc8e:	dec    bx
  40dc90:	pop    es
  40dc91:	sbb    al,0xa
  40dc93:	test   al,0x8b
  40dc95:	xchg   ebx,ebp
  40dc97:	xchg   ecx,eax
  40dc98:	dec    ebp
  40dc99:	cli    
  40dc9a:	out    dx,eax
  40dc9b:	or     bh,BYTE PTR [ebx+esi*8-0x67]
  40dc9f:	pop    edi
  40dca0:	inc    ebx
  40dca1:	push   cs
  40dca2:	ficom  WORD PTR [esi-0x7f]
  40dca5:	jne    0x40dca4
  40dca7:	sbb    esi,edi
  40dca9:	jae    0x40dcd7
  40dcab:	push   edi
  40dcac:	test   al,0x15
  40dcae:	test   DWORD PTR [ebx+0x43],edx
  40dcb1:	ss in  eax,0x1b
  40dcb4:	jne    0x40dce5
  40dcb6:	cmp    al,0xa7
  40dcb8:	popf   
  40dcb9:	sub    edi,0x26
  40dcbc:	xor    eax,0x4cfdf98b
  40dcc1:	popa   
  40dcc2:	jmp    0x96ae568
  40dcc7:	pop    es
  40dcc8:	aam    0xbf
  40dcca:	cdq    
  40dccb:	cld    
  40dccc:	shl    BYTE PTR [ecx+0x43197f4a],1
  40dcd2:	lods   al,BYTE PTR ds:[esi]
  40dcd3:	mov    edi,DWORD PTR [esi-0x138fdc6f]
  40dcd9:	xchg   DWORD PTR [eax-0x194104b],esi
  40dcdf:	dec    esp
  40dce0:	jp     0x40dc90
  40dce2:	adc    al,0x67
  40dce4:	cld    
  40dce5:	ds pusha 
  40dce7:	scas   eax,DWORD PTR es:[edi]
  40dce8:	fcom   DWORD PTR [edx-0x6c]
  40dceb:	inc    eax
  40dcec:	mov    DWORD PTR [esi+0x58],edx
  40dcef:	repnz mov WORD PTR [ebx-0x6755da68],cs
  40dcf6:	add    eax,0xaf5718a8
  40dcfb:	sub    BYTE PTR [ebp+ebx*8+0x5eabbe0f],cl
  40dd02:	mov    al,ds:0xe958bf6f
  40dd07:	(bad)  
  40dd08:	retf   0xca4b
  40dd0b:	mov    ch,0xaa
  40dd0d:	cmc    
  40dd0e:	test   BYTE PTR [ebx],bh
  40dd10:	stos   BYTE PTR es:[edi],al
  40dd11:	je     0x40dca7
  40dd13:	xor    cl,BYTE PTR [ebx+0x32]
  40dd16:	dec    ebx
  40dd17:	aad    0x8
  40dd19:	push   cs
  40dd1a:	xor    BYTE PTR [edx],al
  40dd1c:	sub    ebx,DWORD PTR [ebp-0x4e]
  40dd1f:	scas   eax,DWORD PTR es:[edi]
  40dd20:	dec    esp
  40dd21:	jg     0x40dcad
  40dd23:	lahf   
  40dd24:	add    ah,BYTE PTR [edx-0x30]
  40dd27:	jge    0x40dce2
  40dd29:	add    eax,0xc915b0d0
  40dd2e:	dec    esp
  40dd2f:	mov    cl,0x1e
  40dd31:	bound  edi,QWORD PTR [esi+edi*4+0x35dc7e8a]
  40dd38:	jnp    0x40dd2c
  40dd3a:	sbb    eax,0xaefb33d9
  40dd3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd40:	xchg   ecx,eax
  40dd41:	in     al,dx
  40dd42:	or     DWORD PTR ds:0xc5e3e0e4,esp
  40dd48:	cs xchg ecx,eax
  40dd4a:	xor    BYTE PTR [ebp-0x305b0ee3],cl
  40dd50:	sar    DWORD PTR [edx-0x4fc035cd],1
  40dd56:	js     0x40dce5
  40dd58:	sub    ah,BYTE PTR [ebx+0x3b24f6cc]
  40dd5e:	sub    DWORD PTR [edi],eax
  40dd60:	sub    DWORD PTR [edx+ebx*4+0xd],esi
  40dd64:	and    bl,bl
  40dd66:	rcl    DWORD PTR [ebp+0x56],0xd3
  40dd6a:	jmp    DWORD PTR [ebx-0x6af3e9f6]
  40dd70:	xlat   BYTE PTR ds:[ebx]
  40dd71:	sub    BYTE PTR [esi],bh
  40dd73:	inc    edi
  40dd74:	xor    DWORD PTR [edx-0xd83ba4c],0xffffffec
  40dd7b:	push   eax
  40dd7c:	jbe    0x40dd89
  40dd7e:	out    dx,al
  40dd7f:	pushf  
  40dd80:	xchg   ebx,eax
  40dd81:	cmp    esi,DWORD PTR [edx-0x1e]
  40dd84:	int    0x36
  40dd86:	or     BYTE PTR [eax+0x330365b3],ah
  40dd8c:	add    al,BYTE PTR [edx+ebp*4+0x6d68e434]
  40dd93:	fisubr WORD PTR [edi]
  40dd95:	outs   dx,BYTE PTR ds:[esi]
  40dd96:	mov    ebx,0xa251ab64
  40dd9b:	mov    ebp,0xba76cb23
  40dda0:	fmul   DWORD PTR [edi-0x2edab094]
  40dda6:	out    dx,eax
  40dda7:	jno    0x40de1e
  40dda9:	mov    ds,WORD PTR [ebx+0x78]
  40ddac:	xchg   edx,eax
  40ddad:	(bad)  
  40ddae:	mov    edx,0x4745f962
  40ddb3:	popf   
  40ddb4:	mov    ah,0x13
  40ddb6:	out    dx,eax
  40ddb7:	lds    esp,FWORD PTR [ecx]
  40ddb9:	stos   DWORD PTR es:[edi],eax
  40ddba:	mov    DWORD PTR ds:0xeb9e44db,ebp
  40ddc0:	mov    eax,ds:0xbfae9dfe
  40ddc5:	retf   0x85f8
  40ddc8:	or     dh,ah
  40ddca:	jge    0x40de0d
  40ddcc:	mov    bl,0xa5
  40ddce:	cs xchg edx,eax
  40ddd0:	stc    
  40ddd1:	inc    ecx
  40ddd2:	inc    esp
  40ddd3:	dec    esi
  40ddd4:	lds    edi,FWORD PTR [ebp-0xc]
  40ddd7:	ds cmp eax,0x3b9b
  40dddd:	fucomi st,st(3)
  40dddf:	push   edi
  40dde0:	or     edx,eax
  40dde2:	jecxz  0x40ddaa
  40dde4:	lock outs dx,DWORD PTR ss:[esi]
  40dde7:	sbb    BYTE PTR [eax+0x3f],0x51
  40ddeb:	les    esp,FWORD PTR cs:[esi-0x7f1b8e75]
  40ddf2:	out    dx,eax
  40ddf3:	adc    al,0xa8
  40ddf5:	inc    ecx
  40ddf6:	loope  0x40ddbf
  40ddf8:	inc    edi
  40ddf9:	cld    
  40ddfa:	nop
  40ddfb:	iret   
  40ddfc:	pop    ss
  40ddfd:	xchg   edi,eax
  40ddfe:	mov    gs,WORD PTR [ecx]
  40de00:	daa    
  40de01:	test   BYTE PTR [edi-0x26],dl
  40de04:	cmp    DWORD PTR [ecx],ecx
  40de06:	jg     0x40ddcd
  40de08:	inc    edx
  40de09:	out    0xbe,eax
  40de0b:	jo     0x40de6a
  40de0d:	sub    ch,cl
  40de0f:	out    dx,eax
  40de10:	ds or  ch,dl
  40de13:	int3   
  40de14:	mov    WORD PTR [eax+0x3f09564d],fs
  40de1a:	xor    edi,ebp
  40de1c:	retf   
  40de1d:	ins    DWORD PTR es:[edi],dx
  40de1e:	shr    dl,1
  40de20:	aas    
  40de21:	pop    ecx
  40de22:	cmc    
  40de23:	add    edi,DWORD PTR [esi+ecx*2+0x4f]
  40de27:	pop    ds
  40de28:	(bad)  
  40de29:	das    
  40de2a:	sub    dh,BYTE PTR ds:0xe2fb2718
  40de30:	mov    ecx,0x97985b65
  40de35:	cmp    al,0xc9
  40de37:	lds    ebx,FWORD PTR [edx]
  40de39:	mov    ah,0x9f
  40de3b:	loop   0x40de0c
  40de3d:	pop    ds
  40de3e:	out    0x88,al
  40de40:	jo     0x40ddd5
  40de42:	and    ebx,DWORD PTR [ebx]
  40de44:	add    BYTE PTR [edx-0xe1b1a6c],ah
  40de4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de4d:	fdivr  QWORD PTR [eax+0x1d]
  40de50:	(bad)  
  40de51:	jno    0x40de27
  40de53:	sbb    BYTE PTR [ebx+0x58],ch
  40de56:	and    cl,BYTE PTR [esi]
  40de58:	lock xor al,0xd
  40de5b:	add    ecx,DWORD PTR [ebp+0x1b552203]
  40de61:	inc    esp
  40de62:	jo     0x40de19
  40de64:	rcr    DWORD PTR [ebx-0x55caafbc],cl
  40de6a:	xchg   dh,cl
  40de6c:	hlt    
  40de6d:	adc    eax,edi
  40de6f:	xor    DWORD PTR [esi-0x3c],eax
  40de72:	loope  0x40debb
  40de74:	test   eax,0xf5be7d73
  40de79:	cdq    
  40de7a:	mov    dl,0x3e
  40de7c:	mov    ebx,0xef1b0dff
  40de81:	jmp    0x40de7e
  40de83:	mov    eax,0x4299b10e
  40de88:	fbld   TBYTE PTR [edx-0x33c8beb1]
  40de8e:	jecxz  0x40deb4
  40de90:	xor    eax,0x3f940283
  40de95:	stos   DWORD PTR es:[edi],eax
  40de96:	add    al,0x35
  40de98:	xchg   esp,eax
  40de99:	mov    ch,0xae
  40de9b:	xchg   esp,eax
  40de9c:	aas    
  40de9d:	dec    esp
  40de9e:	test   BYTE PTR [esi],0xf2
  40dea1:	jno    0x40deca
  40dea3:	or     cl,BYTE PTR [edx]
  40dea5:	cmp    ebp,esp
  40dea7:	lock out dx,eax
  40dea9:	cmp    al,0xa4
  40deab:	out    0xf1,al
  40dead:	jmp    0x355a:0x47da9504
  40deb4:	push   0x1cbe2d1
  40deb9:	test   DWORD PTR [ebp+eax*2-0x76],0x53e0026e
  40dec1:	xchg   ecx,eax
  40dec2:	sub    edx,DWORD PTR [ecx+0x2]
  40dec5:	cmp    DWORD PTR [edi+edi*2+0x2936d455],ebp
  40decc:	sbb    al,0xee
  40dece:	retw   
  40ded0:	jl     0x40df18
  40ded2:	push   ebp
  40ded3:	and    ch,BYTE PTR [ecx+0x8b41b2e]
  40ded9:	adc    bh,BYTE PTR [esi]
  40dedb:	nop
  40dedc:	pop    ecx
  40dedd:	int    0x15
  40dedf:	ror    BYTE PTR [ebp+0x44],0x99
  40dee3:	dec    esp
  40dee4:	retf   
  40dee5:	jl     0x40debf
  40dee7:	jmp    0x900aaeba
  40deec:	ds xor al,0xb9
  40deef:	dec    ecx
  40def0:	pop    ds
  40def1:	imul   esp,edx,0xfffffff0
  40def4:	fdivr  QWORD PTR [ebx-0x41eae5f0]
  40defa:	push   ss
  40defb:	push   cs
  40defc:	sbb    eax,0x267d4a71
  40df01:	sar    al,1
  40df03:	and    eax,0x280e851e
  40df08:	arpl   WORD PTR ds:0xacbf6813,dx
  40df0e:	loope  0x40df0b
  40df10:	mov    bh,0x70
  40df12:	sbb    ecx,DWORD PTR [ebx+0x22acc51a]
  40df18:	jmp    0xabe4:0xb6cb9792
  40df1f:	int3   
  40df20:	inc    esi
  40df21:	sbb    dh,BYTE PTR ds:0x7bd37fde
  40df27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df28:	cld    
  40df29:	mov    cl,0xf2
  40df2b:	sar    BYTE PTR [ecx+0x56d3fa3],1
  40df31:	jl     0x40deee
  40df33:	sub    al,0x4f
  40df35:	or     al,0x19
  40df37:	cdq    
  40df38:	int    0x18
  40df3a:	dec    edx
  40df3b:	out    0x5c,eax
  40df3d:	sahf   
  40df3e:	xchg   DWORD PTR [ebp-0x6b],esp
  40df41:	jmp    0xcd6b15f3
  40df46:	jge    0x40df79
  40df48:	lods   al,BYTE PTR ds:[esi]
  40df49:	test   al,0xcb
  40df4b:	adc    ch,BYTE PTR [esp]
  40df4e:	xchg   WORD PTR [esi+0x1f],bp
  40df52:	(bad)  
  40df53:	fidivr WORD PTR [ecx-0x5dc6dd0c]
  40df59:	or     bh,BYTE PTR [edx+0x3d]
  40df5c:	dec    esi
  40df5d:	mov    ?,WORD PTR [bp+di+0x1fa5]
  40df62:	scas   al,BYTE PTR es:[edi]
  40df63:	js     0x40df76
  40df65:	loopne 0x40df26
  40df67:	(bad)  
  40df69:	stc    
  40df6a:	inc    ecx
  40df6b:	push   edx
  40df6c:	lods   eax,DWORD PTR ds:[esi]
  40df6d:	mov    eax,0xea4483fd
  40df72:	pop    edi
  40df73:	push   ds
  40df74:	sbb    al,0x5a
  40df76:	add    DWORD PTR [eax],ebx
  40df78:	lods   eax,DWORD PTR ds:[esi]
  40df79:	adc    BYTE PTR [esi-0x6710c9c6],0x7c
  40df80:	sub    eax,0x52b3eb3b
  40df85:	pop    esi
  40df86:	or     DWORD PTR ds:0x9d209264,edx
  40df8c:	test   eax,0x878d66c4
  40df91:	fimul  WORD PTR [eax-0x6822bf8e]
  40df97:	cmp    BYTE PTR [ebx+esi*2+0x21],al
  40df9b:	mov    dl,0xe
  40df9d:	xlat   BYTE PTR ds:[ebx]
  40df9e:	bound  ebp,QWORD PTR [edi-0xcb5353a]
  40dfa4:	loope  0x40dfc8
  40dfa6:	sub    eax,0x260c16ea
  40dfab:	sbb    al,0xda
  40dfad:	inc    esp
  40dfae:	cmp    edi,ebx
  40dfb0:	push   ebx
  40dfb1:	push   es
  40dfb2:	or     DWORD PTR [esp+edi*8+0x6c],edi
  40dfb6:	mov    es,WORD PTR [edi-0x48]
  40dfb9:	cmp    DWORD PTR [eax],eax
  40dfbb:	adc    ebp,edi
  40dfbd:	xlat   BYTE PTR ds:[ebx]
  40dfbe:	push   ebp
  40dfbf:	in     eax,0x5e
  40dfc1:	mov    ds:0x16ee5573,eax
  40dfc6:	xlat   BYTE PTR ds:[ebx]
  40dfc7:	out    dx,al
  40dfc8:	test   BYTE PTR [eax-0x4eda039b],0x13
  40dfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd0:	xor    DWORD PTR [ebx-0x324e129],esi
  40dfd6:	sbb    dh,BYTE PTR [edi]
  40dfd8:	dec    BYTE PTR [esi]
  40dfda:	aad    0x93
  40dfdc:	xor    BYTE PTR [edi],ah
  40dfde:	sti    
  40dfdf:	dec    esi
  40dfe0:	pop    ds
  40dfe1:	stc    
  40dfe2:	cmp    DWORD PTR [eax-0x7e3c7acb],edx
  40dfe8:	and    al,0x37
  40dfea:	or     DWORD PTR [esi+0x14],eax
  40dfed:	jo     0x40e021
  40dfef:	lea    eax,[eax]
  40dff1:	jmp    0x4fb896e2
  40dff6:	xor    al,0x5c
  40dff8:	in     eax,dx
  40dff9:	push   ebx
  40dffa:	ins    DWORD PTR es:[edi],dx
  40dffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dffc:	push   es
  40dffd:	cmp    al,0x66
  40dfff:	ror    al,1
  40e001:	sbb    bl,BYTE PTR [eax]
  40e003:	dec    esi
  40e004:	sub    ch,BYTE PTR [esi+0x79]
  40e007:	mov    ecx,0x28a3d864
  40e00c:	jb     0x40dfe4
  40e00e:	add    DWORD PTR [edx],esi
  40e010:	adc    DWORD PTR [ecx+ebx*4+0x53],ebx
  40e014:	outs   dx,DWORD PTR ds:[esi]
  40e015:	sub    DWORD PTR [ebx+0x10],ebx
  40e018:	das    
  40e019:	jb     0x40e03b
  40e01b:	dec    edi
  40e01c:	jne    0x40dfbb
  40e01e:	lods   eax,DWORD PTR ds:[esi]
  40e01f:	call   0xd9e2871f
  40e024:	(bad)  
  40e025:	cdq    
  40e026:	pusha  
  40e027:	sbb    DWORD PTR [esi+0x1954335b],0x5a
  40e02e:	icebp  
  40e02f:	mov    DWORD PTR [esi],ebx
  40e031:	pop    edi
  40e032:	mov    al,ds:0x36094147
  40e037:	sbb    eax,0x56f12987
  40e03c:	push   0x7497dbcb
  40e041:	push   edi
  40e042:	mov    bh,0x2b
  40e044:	mov    al,0xf9
  40e046:	je     0x40e09a
  40e048:	rcl    BYTE PTR [eax],cl
  40e04a:	or     al,0xf1
  40e04c:	inc    eax
  40e04d:	xchg   ebp,eax
  40e04e:	jno    0x40e043
  40e050:	xor    al,0xd0
  40e052:	dec    edi
  40e053:	jb     0x40e09e
  40e055:	xchg   dh,bh
  40e057:	push   ecx
  40e058:	mov    al,ds:0x90637ca4
  40e05d:	sub    DWORD PTR [ebx+0x4e97731c],0xffffffcd
  40e064:	div    BYTE PTR [edx]
  40e066:	mov    DWORD PTR [ebx-0x2a],esi
  40e069:	sub    eax,0xa67dc43b
  40e06e:	nop
  40e06f:	pop    eax
  40e070:	loop   0x40e00d
  40e072:	xor    DWORD PTR [eax+0x52],ecx
  40e075:	in     al,dx
  40e076:	cmp    al,0xf6
  40e078:	mov    ah,0x19
  40e07a:	hlt    
  40e07b:	fnstenv [eax-0x4c]
  40e07e:	jecxz  0x40e0d0
  40e080:	cmp    al,0x81
  40e082:	or     al,0x7c
  40e084:	daa    
  40e085:	(bad)  
  40e086:	pop    ebx
  40e087:	cld    
  40e088:	pop    esp
  40e089:	add    bh,BYTE PTR [esi]
  40e08b:	stos   DWORD PTR es:[edi],eax
  40e08c:	xchg   edx,eax
  40e08d:	cdq    
  40e08e:	nop
  40e08f:	rcr    BYTE PTR [ebx+0x61],0xc6
  40e093:	data16 fidivr DWORD PTR [eax]
  40e096:	dec    edx
  40e097:	dec    ebx
  40e098:	mov    BYTE PTR [esp+edi*1-0x3],0x8c
  40e09d:	mov    ds:0x351b6182,al
  40e0a2:	sahf   
  40e0a3:	aas    
  40e0a4:	jp     0x40e033
  40e0a6:	cmp    al,0x80
  40e0a8:	cmp    al,0x87
  40e0aa:	xor    eax,0x8d868103
  40e0af:	std    
  40e0b0:	jle    0x40e0e9
  40e0b2:	inc    ebp
  40e0b3:	in     al,dx
  40e0b4:	clc    
  40e0b5:	jo     0x40e0b6
  40e0b7:	mov    esi,0xbe6b8cd
  40e0bc:	ret    0x82d
  40e0bf:	imul   esp,DWORD PTR [ebx],0x1e670163
  40e0c5:	and    ebp,edi
  40e0c7:	and    BYTE PTR [ebp-0x6],ch
  40e0ca:	dec    esi
  40e0cb:	or     BYTE PTR [ebx+0x5d2a6f52],bh
  40e0d1:	inc    ecx
  40e0d2:	xchg   ebx,eax
  40e0d3:	cli    
  40e0d4:	sbb    eax,DWORD PTR [ebx+0x24e31a7e]
  40e0da:	pop    eax
  40e0db:	out    0x54,al
  40e0dd:	jbe    0x40e0ba
  40e0df:	and    ecx,DWORD PTR [eax+ecx*2]
  40e0e2:	adc    DWORD PTR [edx+0x67],0xfffffff8
  40e0e6:	out    0xa2,al
  40e0e8:	(bad)  
  40e0e9:	shr    BYTE PTR [eax+0x7e],1
  40e0ec:	add    eax,0x27e1c029
  40e0f1:	sub    BYTE PTR [edx+0x32f04062],bl
  40e0f7:	ja     0x40e0f9
  40e0f9:	popa   
  40e0fa:	retf   
  40e0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fc:	sbb    eax,0x6aff099c
  40e101:	test   BYTE PTR [ebx],dh
  40e103:	xor    al,cl
  40e105:	push   ebp
  40e106:	push   esp
  40e107:	inc    eax
  40e108:	xor    bl,bl
  40e10a:	popa   
  40e10b:	adc    BYTE PTR [esi+0x76],dl
  40e10e:	or     DWORD PTR [esi+0x29],esp
  40e111:	pop    edi
  40e112:	and    DWORD PTR [ecx+0x21],ebx
  40e115:	or     DWORD PTR ds:0x7035a7d6,ebx
  40e11b:	pop    edx
  40e11c:	dec    ecx
  40e11d:	addr16 call 0x37089555
  40e123:	mov    ebp,0x8179c30c
  40e128:	mov    DWORD PTR [esi+0xc],ecx
  40e12b:	aaa    
  40e12c:	retf   
  40e12d:	cmp    BYTE PTR [edi+0x11],0x1c
  40e131:	add    edi,eax
  40e133:	sub    DWORD PTR [edx+0x7f],0xffffff8c
  40e137:	test   DWORD PTR [edi-0x6bddafed],ebp
  40e13d:	pop    es
  40e13e:	pop    ecx
  40e13f:	mov    edx,0xcbf28862
  40e144:	sub    dh,BYTE PTR [edi+0x5a44ced9]
  40e14a:	pop    edx
  40e14b:	(bad)  [ecx-0xc8458c]
  40e151:	pop    ebx
  40e152:	icebp  
  40e153:	ret    0x52a9
  40e156:	mov    bh,BYTE PTR [edi]
  40e158:	div    DWORD PTR ds:0x6ed78ee8
  40e15e:	mov    edi,0x1c908ae8
  40e163:	aam    0x71
  40e165:	and    DWORD PTR [esp+esi*1],ebx
  40e168:	mov    esi,DWORD PTR [ebp-0x5a]
  40e16b:	jmp    0xdee04ba8
  40e170:	jb     0x40e16b
  40e172:	test   BYTE PTR [ecx+0x20be6866],0xc5
  40e179:	pop    esi
  40e17a:	sub    eax,0x24336339
  40e17f:	or     eax,0x9d30ca98
  40e184:	enter  0xdf09,0x8f
  40e188:	dec    eax
  40e189:	icebp  
  40e18a:	push   ebp
  40e18b:	(bad)  
  40e18c:	cmp    eax,0x422fc3a
  40e191:	adc    cl,BYTE PTR [edx-0x18]
  40e194:	cmp    ch,BYTE PTR [edi-0x2]
  40e197:	mov    eax,0x5b239b8e
  40e19c:	inc    esi
  40e19d:	mov    edi,0xb901a38b
  40e1a2:	jb     0x40e1fd
  40e1a4:	xchg   BYTE PTR [edx],ah
  40e1a6:	cli    
  40e1a7:	jo     0x40e1d4
  40e1a9:	shl    BYTE PTR [edx-0x4dac0d03],0xa8
  40e1b0:	retf   
  40e1b1:	loopne 0x40e202
  40e1b3:	add    cl,bh
  40e1b5:	fmul   DWORD PTR [ecx]
  40e1b7:	cld    
  40e1b8:	call   0xcb15:0x98bcb9cf
  40e1bf:	jne    0x40e188
  40e1c1:	in     eax,dx
  40e1c2:	pop    ecx
  40e1c3:	jg     0x40e19c
  40e1c5:	push   ecx
  40e1c6:	retf   0x3813
  40e1c9:	and    eax,0xb9367315
  40e1ce:	sti    
  40e1cf:	and    dl,BYTE PTR [ebx-0x39]
  40e1d2:	dec    edi
  40e1d3:	xor    DWORD PTR [ebp+0x7d],edi
  40e1d6:	sub    eax,0xdbfa9dc1
  40e1db:	mov    ch,0xfd
  40e1dd:	pop    ds
  40e1de:	fst    DWORD PTR [eax+0x59]
  40e1e1:	cli    
  40e1e2:	adc    DWORD PTR [ecx-0x588b8d1f],ebp
  40e1e8:	test   edx,esp
  40e1ea:	and    esp,ecx
  40e1ec:	ret    
  40e1ed:	cmp    edi,0xd289f6c4
  40e1f3:	pop    ebp
  40e1f4:	shl    BYTE PTR [ebp-0x81df997],0xf8
  40e1fb:	jne    0x40e1ee
  40e1fd:	test   dl,bl
  40e1ff:	das    
  40e200:	test   DWORD PTR [edi-0x3e],0x4894f40f
  40e207:	xchg   esp,eax
  40e208:	sbb    BYTE PTR [esi+0x35],ah
  40e20b:	ss loop 0x40e19b
  40e20e:	test   eax,0x9205c6a3
  40e213:	aas    
  40e214:	inc    esi
  40e215:	test   al,0xab
  40e217:	mov    al,BYTE PTR [edi-0x2b]
  40e21a:	mov    BYTE PTR [eax],bh
  40e21c:	pushf  
  40e21d:	ins    DWORD PTR es:[edi],dx
  40e21e:	jp     0x40e27f
  40e220:	xchg   DWORD PTR [esi-0x3a],ebp
  40e223:	jne    0x40e237
  40e225:	cmp    BYTE PTR [ecx-0x5792c70a],bh
  40e22b:	jmp    0x40e1d4
  40e22d:	dec    esi
  40e22e:	mov    eax,0x5fa37714
  40e233:	pop    ds
  40e234:	cs mov cl,0x98
  40e237:	scas   al,BYTE PTR es:[edi]
  40e238:	dec    esi
  40e239:	mov    edx,0x4b2bc6e8
  40e23e:	jecxz  0x40e1ed
  40e240:	cld    
  40e241:	ss jbe 0x40e2ad
  40e244:	mov    dh,0x4b
  40e246:	push   edx
  40e247:	(bad)  
  40e248:	mov    ebx,0x2bb36af4
  40e24d:	ret    
  40e24e:	(bad)  
  40e24f:	dec    eax
  40e250:	aas    
  40e251:	or     eax,0xf73fc698
  40e256:	rcl    BYTE PTR [ebx],cl
  40e258:	imul   ebp,DWORD PTR [ecx+0x7],0xffffff8a
  40e25c:	jo     0x40e267
  40e25e:	mov    esi,0xb1280b4
  40e263:	jle    0x40e280
  40e265:	mov    ebx,DWORD PTR [esi-0x7cd7fcc5]
  40e26b:	sar    ah,0x50
  40e26e:	add    edi,DWORD PTR ds:0xa0ba26a7
  40e274:	nop
  40e275:	cmc    
  40e276:	xor    edx,DWORD PTR [ebx+0x3f1b74d8]
  40e27c:	inc    edi
  40e27d:	mov    eax,0xf8bbeea6
  40e282:	into   
  40e283:	arpl   WORD PTR [edi-0x56],si
  40e286:	es mov edx,0xd285c699
  40e28c:	pop    ds
  40e28d:	xor    DWORD PTR [edi+eiz*4],0x1e
  40e291:	ins    BYTE PTR es:[edi],dx
  40e292:	dec    esi
  40e293:	or     edx,ebp
  40e295:	xor    eax,0xcba62172
  40e29a:	int3   
  40e29b:	lea    edi,[edx+0x1e10fd44]
  40e2a1:	mov    ds:0x845a53d5,eax
  40e2a6:	int    0x2d
  40e2a8:	outs   dx,BYTE PTR ds:[esi]
  40e2a9:	in     al,dx
  40e2aa:	out    0xbb,al
  40e2ac:	sbb    esp,DWORD PTR ds:[eax+0x3f]
  40e2b0:	push   ebx
  40e2b1:	(bad)  
  40e2b2:	stc    
  40e2b3:	pusha  
  40e2b4:	daa    
  40e2b5:	jle    0x40e245
  40e2b7:	mov    ebp,0x8ca0f437
  40e2bc:	pusha  
  40e2bd:	popa   
  40e2be:	mov    dl,0x90
  40e2c0:	jp     0x40e2c4
  40e2c2:	sbb    eax,0x3f9cd79a
  40e2c7:	fcmovbe st,st(5)
  40e2c9:	addr16 inc esp
  40e2cb:	mov    ds:0xf88bfdfc,eax
  40e2d0:	int    0xc1
  40e2d2:	cmp    esi,DWORD PTR [ecx+0x10]
  40e2d5:	jmp    0x40e309
  40e2d7:	jns    0x40e28f
  40e2d9:	jl     0x40e2e6
  40e2db:	xor    BYTE PTR [ecx+esi*8-0x728157d3],ch
  40e2e2:	mov    ch,0xf7
  40e2e4:	cdq    
  40e2e5:	add    al,0xa2
  40e2e7:	dec    esp
  40e2e8:	xchg   edi,ebx
  40e2ea:	push   edi
  40e2eb:	mov    cl,0xa4
  40e2ed:	shr    DWORD PTR [ecx-0x48],1
  40e2f0:	mov    esi,0x1590a50f
  40e2f5:	ret    0xebbb
  40e2f8:	dec    eax
  40e2f9:	comiss xmm2,DWORD PTR [eax+ebp*8+0x6a]
  40e2fe:	in     eax,0x7c
  40e300:	pop    esi
  40e301:	sub    BYTE PTR [ebp-0x45],0x23
  40e305:	jl     0x40e2b9
  40e307:	dec    eax
  40e308:	fcom   DWORD PTR [edx+0x40e28bac]
  40e30e:	xlat   BYTE PTR ds:[ebx]
  40e30f:	dec    eax
  40e310:	inc    ebp
  40e311:	sbb    BYTE PTR [ebp+0x1e],ch
  40e314:	data16 mov bh,BYTE PTR [edx-0x4f]
  40e318:	stc    
  40e319:	rol    esi,cl
  40e31b:	fcmovnbe st,st(6)
  40e31d:	inc    eax
  40e31e:	retf   
  40e31f:	scas   eax,DWORD PTR es:[edi]
  40e320:	xchg   edx,eax
  40e321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e323:	pop    es
  40e324:	push   0xffffffb5
  40e326:	shld   DWORD PTR [ecx-0x1f6be374],eax,cl
  40e32d:	test   BYTE PTR [ebx],dl
  40e32f:	out    dx,eax
  40e330:	ja     0x40e354
  40e332:	out    0xf6,eax
  40e334:	retf   0x61cd
  40e337:	les    esp,FWORD PTR [edx+0x661242f9]
  40e33d:	hlt    
  40e33e:	pop    es
  40e33f:	stc    
  40e340:	and    eax,0xa9fd1888
  40e345:	iret   
  40e346:	call   0xccf6f849
  40e34b:	pop    edx
  40e34c:	jle    0x40e2e6
  40e34e:	(bad)  
  40e34f:	fimul  DWORD PTR [ecx-0x180ad650]
  40e355:	scas   eax,DWORD PTR es:[edi]
  40e356:	or     BYTE PTR cs:[ecx+ebp*2-0x699d0809],al
  40e35e:	add    ecx,DWORD PTR [ebp+eax*8-0x70]
  40e362:	retf   0xdfce
  40e365:	push   0x56
  40e367:	mov    ss,eax
  40e369:	js     0x40e351
  40e36b:	cwde   
  40e36c:	jle    0x40e379
  40e36e:	inc    eax
  40e36f:	aas    
  40e370:	jo     0x40e3c0
  40e372:	jmp    0xfa8322ca
  40e377:	add    eax,0x81596f7
  40e37c:	std    
  40e37d:	add    cl,cl
  40e37f:	pop    edx
  40e380:	sbb    eax,0x3ff170aa
  40e385:	cmp    DWORD PTR [edi-0xbd5920a],esi
  40e38b:	mov    eax,ds:0x7537b3ab
  40e390:	adc    al,0xbb
  40e392:	push   ecx
  40e393:	sahf   
  40e394:	loop   0x40e355
  40e396:	sar    bl,0xc3
  40e399:	push   ss
  40e39a:	call   0x3d3725a4
  40e39f:	xor    eax,0xa1272ffd
  40e3a4:	adc    BYTE PTR [edx],dl
  40e3a6:	jge    0x40e37b
  40e3a8:	sub    eax,0xdbea05ee
  40e3ad:	xor    eax,0x5a921ff9
  40e3b2:	push   eax
  40e3b3:	and    DWORD PTR [edi],eax
  40e3b5:	stos   BYTE PTR es:[edi],al
  40e3b6:	test   eax,0xaeac4e24
  40e3bb:	int    0x8f
  40e3bd:	pop    es
  40e3be:	add    ch,BYTE PTR [edi+esi*4-0x56c8dedb]
  40e3c5:	xchg   esp,eax
  40e3c7:	fnstenv [edx]
  40e3c9:	push   0x74
  40e3cb:	push   edx
  40e3cc:	push   ebx
  40e3cd:	sbb    edx,ebx
  40e3cf:	xchg   DWORD PTR [edi+0x71],eax
  40e3d2:	in     eax,0xd6
  40e3d4:	add    BYTE PTR [ebp-0x1ee83924],ch
  40e3da:	xlat   BYTE PTR ds:[ebx]
  40e3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3dc:	lods   al,BYTE PTR ds:[esi]
  40e3dd:	push   cs
  40e3de:	jge    0x40e45d
  40e3e0:	adc    al,BYTE PTR [esi]
  40e3e2:	test   al,0xd6
  40e3e4:	test   eax,0xf3d1dede
  40e3e9:	and    DWORD PTR [edx+0x55],0x1fa0fdae
  40e3f0:	call   0x18c7:0x6f433215
  40e3f7:	mov    esp,cs
  40e3f9:	icebp  
  40e3fa:	jne    0x40e43c
  40e3fc:	bound  ebp,QWORD PTR [edi+0x36e2ea2d]
  40e402:	mov    bh,0xd7
  40e404:	int3   
  40e405:	cdq    
  40e406:	add    edx,ecx
  40e408:	mov    ch,0x93
  40e40a:	shl    BYTE PTR [edx-0x29],0x6f
  40e40e:	xchg   ebp,eax
  40e40f:	xchg   ebp,eax
  40e410:	mov    es:0xe9860add,al
  40e416:	inc    ebx
  40e417:	jo     0x40e3dd
  40e419:	(bad)  [ebp-0x4]
  40e41c:	push   ss
  40e41d:	(bad)  
  40e41e:	jp     0x40e49b
  40e420:	push   0x7961b53f
  40e425:	sbb    cl,BYTE PTR [edi]
  40e427:	and    DWORD PTR [eax-0x2],ebx
  40e42a:	sub    DWORD PTR [ebp+0x60f6e283],esi
  40e430:	push   ebx
  40e431:	sub    eax,0xc33c86c7
  40e436:	sbb    eax,0xc4d5af73
  40e43b:	test   BYTE PTR [eax-0x3d],0xa6
  40e43f:	fist   DWORD PTR [edx+0x63]
  40e442:	and    al,0x8
  40e444:	out    0x59,eax
  40e446:	test   ah,al
  40e448:	jbe    0x40e413
  40e44a:	(bad)  
  40e44c:	mov    ch,dh
  40e44e:	jge    0x40e495
  40e450:	sbb    esp,DWORD PTR [edx-0x7d]
  40e453:	or     al,0xd6
  40e455:	mov    ch,0xb7
  40e457:	fwait
  40e458:	pop    ss
  40e459:	ret    0x7dee
  40e45c:	and    cl,ch
  40e45e:	sar    DWORD PTR [ebp-0x79dc424d],1
  40e464:	add    ebx,DWORD PTR [ebx-0x47efea63]
  40e46a:	mov    ebx,0x2bc01083
  40e46f:	mov    ebp,0x9702cd7e
  40e474:	int    0xec
  40e476:	adc    al,ah
  40e478:	out    0x4a,al
  40e47a:	cmc    
  40e47b:	adc    edx,DWORD PTR [esi+0x75]
  40e47e:	iret   
  40e47f:	pop    ss
  40e480:	mov    esi,edi
  40e482:	nop
  40e483:	mov    bh,0xb7
  40e485:	fwait
  40e486:	sahf   
  40e487:	addr16 mov ah,0x91
  40e48a:	imul   eax,ebx,0xf60902e0
  40e490:	jne    0x40e4b3
  40e492:	dec    edx
  40e493:	adc    al,0xc4
  40e495:	test   al,0xba
  40e497:	xlat   BYTE PTR ds:[ebx]
  40e498:	push   edi
  40e499:	dec    edx
  40e49a:	jne    0x40e4ff
  40e49c:	dec    edi
  40e49d:	jnp    0x40e4a8
  40e49f:	(bad)  
  40e4a0:	call   DWORD PTR [ecx-0x62]
  40e4a3:	and    ah,BYTE PTR [edx-0x32217b8c]
  40e4a9:	data16 jp 0x40e45d
  40e4ac:	pop    eax
  40e4ad:	aad    0xd5
  40e4af:	jo     0x40e527
  40e4b1:	into   
  40e4b2:	add    edx,DWORD PTR [ebp+0x76]
  40e4b5:	pop    edi
  40e4b6:	cmp    eax,eax
  40e4b8:	icebp  
  40e4b9:	xchg   esi,eax
  40e4ba:	or     BYTE PTR [ebx-0x62],dh
  40e4bd:	stc    
  40e4be:	enter  0xe86,0x15
  40e4c2:	aaa    
  40e4c3:	mov    ds:0x2abb9801,eax
  40e4c8:	mov    ds:0x1336ffb0,eax
  40e4cd:	jnp    0x40e53f
  40e4cf:	call   0x3aa81f96
  40e4d4:	mov    ch,0x20
  40e4d6:	nop
  40e4d7:	call   0x7bb8:0x9756c420
  40e4de:	dec    ecx
  40e4df:	jae    0x40e47c
  40e4e1:	mov    ebp,0xc519d0bb
  40e4e6:	(bad)  
  40e4e7:	scas   al,BYTE PTR es:[edi]
  40e4e8:	push   eax
  40e4e9:	imul   eax,eax,0x28
  40e4ec:	shl    DWORD PTR [edi-0x40],0xf9
  40e4f0:	inc    esp
  40e4f1:	pop    edi
  40e4f2:	add    al,0x1f
  40e4f4:	xor    DWORD PTR [edi+esi*8],0xb6b4b9ef
  40e4fb:	inc    ebp
  40e4fc:	pushf  
  40e4fd:	outs   dx,DWORD PTR ds:[esi]
  40e4fe:	mov    bh,0x9a
  40e500:	sbb    dh,bh
  40e502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e503:	xor    DWORD PTR [edx+0x2d],0xffffffc6
  40e507:	mov    bl,0xcb
  40e509:	xchg   edi,eax
  40e50a:	pop    ebx
  40e50b:	stos   BYTE PTR es:[edi],al
  40e50c:	xor    al,0x73
  40e50e:	jle    0x40e4a4
  40e510:	inc    esp
  40e511:	sbb    eax,0xcaca68eb
  40e516:	or     esi,DWORD PTR [edx+0x20]
  40e519:	daa    
  40e51a:	stos   DWORD PTR es:[edi],eax
  40e51b:	or     al,0x57
  40e51d:	xor    dl,BYTE PTR [ecx+ebx*4+0x36]
  40e521:	sbb    al,0xe8
  40e523:	pop    ss
  40e524:	mov    ah,0xdb
  40e526:	mov    DWORD PTR [edi],edx
  40e528:	dec    ebx
  40e529:	inc    esi
  40e52a:	xchg   edi,eax
  40e52b:	stos   DWORD PTR es:[edi],eax
  40e52c:	jecxz  0x40e51e
  40e52e:	and    al,0x9a
  40e530:	xchg   edi,eax
  40e531:	mov    ds:0xf1eb4bbc,al
  40e536:	mov    dh,0x8f
  40e538:	imul   edx,ebx,0xfd72a055
  40e53e:	xchg   esi,eax
  40e53f:	push   esp
  40e540:	js     0x40e553
  40e542:	add    BYTE PTR [ebp+0x76],ah
  40e545:	int3   
  40e546:	mov    al,0x3d
  40e548:	sub    esp,DWORD PTR [eax-0x39]
  40e54b:	jae    0x40e4fc
  40e54d:	loope  0x40e59e
  40e54f:	cwde   
  40e550:	call   0xdb46:0xcb1739ee
  40e557:	out    dx,al
  40e558:	fisttp QWORD PTR [edi-0x269e57c3]
  40e55e:	lods   eax,DWORD PTR ds:[esi]
  40e55f:	aas    
  40e560:	sahf   
  40e561:	xchg   esi,eax
  40e562:	sbb    esi,edx
  40e564:	xchg   BYTE PTR [ebx],bh
  40e566:	sar    BYTE PTR [ecx-0x45724d85],1
  40e56c:	retf   0x9982
  40e56f:	push   ebx
  40e570:	arpl   bp,sp
  40e572:	push   edx
  40e573:	(bad)  
  40e575:	push   edx
  40e576:	push   0x77
  40e578:	sub    bh,BYTE PTR [edi+ebp*8-0x2a10e280]
  40e57f:	push   ecx
  40e580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e581:	push   eax
  40e582:	jmp    0x40e507
  40e584:	sbb    al,0xcb
  40e586:	dec    ecx
  40e587:	ret    0x934a
  40e58a:	out    0xb5,eax
  40e58c:	mov    ch,0x55
  40e58e:	cli    
  40e58f:	dec    esi
  40e590:	dec    edx
  40e591:	add    bh,bh
  40e593:	push   eax
  40e594:	cmp    ebx,ebx
  40e596:	icebp  
  40e597:	ja     0x40e5b6
  40e599:	xlat   BYTE PTR ds:[ebx]
  40e59a:	pop    eax
  40e59b:	xchg   BYTE PTR [ebp-0x80],cl
  40e59e:	icebp  
  40e59f:	jbe    0x40e5c2
  40e5a1:	adc    edx,DWORD PTR [edx+0x63]
  40e5a4:	ins    DWORD PTR es:[edi],dx
  40e5a5:	mov    dl,0xa8
  40e5a7:	cmp    bh,BYTE PTR [esp+esi*2+0x73]
  40e5ab:	clc    
  40e5ac:	mov    ds:0xb0239117,al
  40e5b1:	inc    edi
  40e5b2:	sub    al,0x29
  40e5b4:	xor    dh,ch
  40e5b6:	push   ecx
  40e5b7:	and    DWORD PTR ds:0xc4cf9d17,ecx
  40e5bd:	push   edi
  40e5be:	inc    ecx
  40e5bf:	fild   DWORD PTR [edi+0x74]
  40e5c2:	adc    BYTE PTR [ecx+ebx*8+0x6dd8fc7b],ah
  40e5c9:	or     BYTE PTR [ecx+edi*1-0x23a27c89],bl
  40e5d0:	int    0x1c
  40e5d2:	fistp  QWORD PTR fs:[eax+0x4dc9bdf0]
  40e5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5da:	pop    ss
  40e5db:	cdq    
  40e5dc:	pop    edx
  40e5dd:	jno    0x40e5ea
  40e5df:	mov    ebx,0xb38d721c
  40e5e4:	jmp    0xa1ca5c07
  40e5e9:	outs   dx,DWORD PTR ds:[esi]
  40e5ea:	jmp    0x40e56f
  40e5ec:	adc    BYTE PTR [ebx],dl
  40e5ee:	outs   dx,BYTE PTR ds:[esi]
  40e5ef:	call   0xb0de6600
  40e5f4:	or     dh,BYTE PTR [edi-0x60]
  40e5f7:	mov    dl,0x58
  40e5f9:	inc    ebp
  40e5fa:	adc    dh,BYTE PTR [ecx+0x32]
  40e5fd:	mov    dh,0x55
  40e5ff:	(bad)  
  40e600:	pushf  
  40e601:	add    al,0x0
  40e603:	loope  0x40e5e1
  40e605:	jns    0x40e5fe
  40e607:	test   eax,0x61c98416
  40e60c:	ins    BYTE PTR es:[edi],dx
  40e60d:	in     al,dx
  40e60e:	inc    DWORD PTR [ecx]
  40e610:	mov    ah,0x25
  40e612:	jne    0x40e65a
  40e614:	xchg   esp,eax
  40e615:	adc    dl,BYTE PTR [ebx]
  40e617:	stos   BYTE PTR es:[edi],al
  40e618:	xchg   edx,eax
  40e619:	aam    0xcf
  40e61b:	and    eax,0xee1430f5
  40e620:	clc    
  40e621:	xor    eax,0xd603cb6b
  40e626:	mov    dh,0xfa
  40e628:	call   FWORD PTR [edx+0x49]
  40e62b:	int    0xea
  40e62d:	cdq    
  40e62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62f:	mov    eax,ds:0xb03857ae
  40e634:	cdq    
  40e635:	adc    BYTE PTR [edi+ecx*1],0x7b
  40e639:	xchg   edx,eax
  40e63a:	mov    BYTE PTR [edi],0xa5
  40e63d:	push   ecx
  40e63e:	xchg   esp,eax
  40e63f:	ins    BYTE PTR es:[edi],dx
  40e640:	inc    esp
  40e641:	dec    ebx
  40e642:	fucomp st(4)
  40e644:	(bad)  
  40e645:	loope  0x40e5ee
  40e647:	sbb    ah,BYTE PTR [ecx-0x6e16c848]
  40e64d:	jns    0x40e5e7
  40e64f:	jl     0x40e5eb
  40e651:	mov    dh,0x26
  40e653:	popf   
  40e654:	fisttp DWORD PTR [esi]
  40e656:	loopne 0x40e5eb
  40e658:	das    
  40e659:	aas    
  40e65a:	push   0x622e2bf8
  40e65f:	sub    DWORD PTR [eax+0x38954b61],0x1c
  40e666:	(bad)  
  40e667:	ins    BYTE PTR es:[edi],dx
  40e668:	push   ebx
  40e669:	test   esp,esi
  40e66b:	mov    ebx,0xf1b4bbce
  40e670:	fs push 0xd6562b82
  40e676:	(bad)  
  40e678:	xchg   edi,eax
  40e679:	jg     0x40e672
  40e67b:	xor    al,al
  40e67d:	test   eax,0x3693e8f9
  40e682:	(bad)
  40e685:	gs jae 0x40e66e
  40e688:	call   0x35e2:0x5fae985d
  40e68f:	adc    BYTE PTR [eax-0x3f],ch
  40e692:	fmul   st(1),st
  40e694:	(bad)  
  40e695:	ja     0x40e627
  40e697:	out    dx,eax
  40e698:	add    ecx,DWORD PTR [ecx]
  40e69a:	sti    
  40e69b:	or     ah,cl
  40e69d:	in     al,dx
  40e69e:	jbe    0x40e6ac
  40e6a0:	test   al,0x56
  40e6a2:	test   al,0x5a
  40e6a4:	loope  0x40e673
  40e6a6:	xor    al,0x79
  40e6a8:	mov    ebp,0x9f732996
  40e6ad:	dec    esp
  40e6ae:	mov    ds:0x358b9e9,eax
  40e6b3:	pop    esi
  40e6b4:	sub    DWORD PTR [esi-0x2],ebp
  40e6b7:	das    
  40e6b8:	ins    BYTE PTR es:[edi],dx
  40e6b9:	lea    ecx,[edx+ebp*1]
  40e6bc:	test   al,0xe4
  40e6be:	jnp    0x40e6c1
  40e6c0:	sub    eax,0x8ec7d87f
  40e6c5:	(bad)  [edx+0x598c5719]
  40e6cb:	sub    dl,dl
  40e6cd:	out    0x9d,al
  40e6cf:	mul    DWORD PTR [ecx]
  40e6d1:	add    DWORD PTR [ebx],ebp
  40e6d3:	inc    ebp
  40e6d4:	jne    0x40e668
  40e6d6:	es jbe 0x40e65f
  40e6d9:	jno    0x40e68d
  40e6db:	dec    ebp
  40e6dc:	lods   eax,DWORD PTR ds:[esi]
  40e6dd:	fisttp WORD PTR [ecx-0x7b]
  40e6e0:	fidiv  DWORD PTR [edi]
  40e6e2:	pop    ebp
  40e6e3:	js     0x40e702
  40e6e5:	dec    ebp
  40e6e6:	fs mov edx,0x5c907082
  40e6ec:	ja     0x40e6e7
  40e6ee:	in     al,dx
  40e6ef:	push   ss
  40e6f0:	push   eax
  40e6f1:	loopne 0x40e6d6
  40e6f3:	(bad)  
  40e6f5:	lods   al,BYTE PTR ss:[esi]
  40e6f7:	and    eax,0xa11f2531
  40e6fc:	shl    BYTE PTR [esi],1
  40e6fe:	pusha  
  40e6ff:	push   ss
  40e700:	dec    ebx
  40e701:	jg     0x40e696
  40e703:	mov    WORD PTR [ebx+0x7b],cs
  40e706:	repnz xor esi,DWORD PTR [edx-0x611b78fe]
  40e70d:	jno    0x40e745
  40e70f:	aas    
  40e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e711:	add    esi,DWORD PTR [esi]
  40e713:	icebp  
  40e714:	mov    ds:0xb1683237,eax
  40e719:	ss pop esi
  40e71b:	inc    edx
  40e71c:	xchg   eax,ebp
  40e71e:	mov    al,ds:0xe8a2617c
  40e723:	lods   eax,DWORD PTR ds:[esi]
  40e724:	ss out 0x54,eax
  40e727:	mov    eax,0x621fbe30
  40e72c:	push   edi
  40e72d:	inc    ebp
  40e72e:	inc    eax
  40e72f:	fisttp QWORD PTR [edi+0x12]
  40e732:	iret   
  40e733:	or     eax,0x14ddaa8e
  40e738:	aaa    
  40e739:	push   ss
  40e73a:	arpl   WORD PTR [ecx],si
  40e73c:	test   al,0x7b
  40e73e:	int    0xc1
  40e740:	in     al,dx
  40e741:	(bad)  
  40e742:	cdq    
  40e743:	sub    BYTE PTR [edi+eax*4-0x38ae4bca],cl
  40e74a:	frstor [edx]
  40e74c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e74e:	ret    
  40e74f:	loope  0x40e792
  40e751:	jg     0x40e76d
  40e753:	dec    edi
  40e754:	fdecstp 
  40e756:	test   DWORD PTR [ebx+0x18],0x80637f56
  40e75d:	(bad)  
  40e75e:	ror    esp,1
  40e760:	mov    edx,0xb3983826
  40e765:	add    ecx,DWORD PTR [ecx+0x7035aa17]
  40e76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e76c:	inc    ecx
  40e76d:	add    eax,0xae2bfab4
  40e772:	adc    DWORD PTR [ebp+eax*1-0xf],esi
  40e776:	es stos DWORD PTR es:[edi],eax
  40e778:	or     BYTE PTR [ebp+0x6e],0x9c
  40e77c:	inc    ebp
  40e77d:	arpl   WORD PTR [edx-0x5d],bx
  40e780:	jns    0x40e79a
  40e782:	neg    bl
  40e784:	inc    esi
  40e785:	add    al,0x95
  40e787:	adc    BYTE PTR [ecx+0x24102cfd],bl
  40e78d:	dec    ebp
  40e78e:	ins    DWORD PTR es:[edi],dx
  40e78f:	fidiv  WORD PTR [esi]
  40e791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e792:	xor    eax,0x78493777
  40e797:	xor    DWORD PTR [ebx],ebp
  40e799:	sub    cl,0x47
  40e79c:	pop    esi
  40e79d:	inc    esi
  40e79e:	shl    DWORD PTR [esi],cl
  40e7a0:	push   ds
  40e7a1:	daa    
  40e7a2:	sub    BYTE PTR [edi+0x15],dh
  40e7a5:	shl    BYTE PTR [esp+eax*2-0x74],0xa0
  40e7aa:	push   esi
  40e7ab:	stos   DWORD PTR es:[edi],eax
  40e7ac:	les    edi,FWORD PTR [ebx]
  40e7ae:	dec    edx
  40e7af:	imul   eax,ebx,0x51aaeaa1
  40e7b5:	clc    
  40e7b6:	jge    0x40e7e3
  40e7b8:	pop    edx
  40e7b9:	ins    DWORD PTR es:[edi],dx
  40e7ba:	add    eax,0x59c6b968
  40e7bf:	mov    ebx,0x540678ce
  40e7c4:	mov    ch,0x8c
  40e7c6:	inc    esp
  40e7c7:	mov    cl,0xe5
  40e7c9:	jbe    0x40e75c
  40e7cb:	pop    ds
  40e7cc:	xlat   BYTE PTR ds:[ebx]
  40e7cd:	add    ebp,DWORD PTR [esi+0x50]
  40e7d0:	stos   BYTE PTR es:[edi],al
  40e7d1:	pushf  
  40e7d2:	xor    al,0x7
  40e7d4:	sub    eax,0x9b36190c
  40e7d9:	ficom  WORD PTR [ebx-0x418ee168]
  40e7df:	mov    edi,0x4406002
  40e7e4:	mov    dl,0xd1
  40e7e6:	repz pop esi
  40e7e8:	adc    al,0xdb
  40e7ea:	xor    dl,cl
  40e7ec:	mov    gs,WORD PTR ds:0x12f6
  40e7f1:	fisubr DWORD PTR [edi-0x6c]
  40e7f4:	push   esp
  40e7f5:	xchg   DWORD PTR ds:0x99c9bda4,edi
  40e7fb:	ss ds jbe 0x40e790
  40e7ff:	or     dl,al
  40e801:	sbb    BYTE PTR [edi+ecx*4],al
  40e804:	fisttp QWORD PTR [ebp+0x264dc912]
  40e80a:	fidivr WORD PTR [ecx]
  40e80c:	out    dx,al
  40e80d:	rcr    ebx,0x84
  40e810:	in     eax,dx
  40e811:	adc    edi,DWORD PTR [esp+ebx*2]
  40e814:	fcomp  DWORD PTR [edx+0x6e]
  40e817:	ins    DWORD PTR es:[edi],dx
  40e818:	adc    DWORD PTR [ecx],ebx
  40e81a:	push   edx
  40e81b:	dec    edi
  40e81c:	xchg   ebx,eax
  40e81d:	mov    ds:0xcd5dda51,eax
  40e822:	add    DWORD PTR ds:0xa4deb643,edi
  40e828:	pop    esi
  40e829:	jg     0x40e81a
  40e82b:	cdq    
  40e82c:	pop    ebx
  40e82d:	sbb    DWORD PTR [ebp+0x62735a20],esp
  40e833:	repnz sub DWORD PTR [ecx-0x6],0xffffffd0
  40e838:	xor    ch,BYTE PTR [eax-0x2b]
  40e83b:	mov    al,BYTE PTR [esi-0x71]
  40e83e:	push   eax
  40e83f:	out    dx,al
  40e840:	cwde   
  40e841:	fst    QWORD PTR [edx]
  40e843:	pusha  
  40e844:	sbb    al,0x2a
  40e846:	jae    0x40e822
  40e848:	(bad)  
  40e849:	xchg   esp,eax
  40e84a:	outs   dx,BYTE PTR ds:[esi]
  40e84b:	or     cl,BYTE PTR [ebp-0x7c6961b1]
  40e851:	div    BYTE PTR [edi+esi*2-0x3a5d0c3a]
  40e858:	and    BYTE PTR [eax-0x307f40d8],bl
  40e85e:	push   DWORD PTR [edx+0x71]
  40e861:	cmp    BYTE PTR [ebp+0x11727],al
  40e867:	sbb    BYTE PTR [ebx],0x46
  40e86a:	(bad)  
  40e86b:	leave  
  40e86c:	idiv   cl
  40e86e:	pop    ecx
  40e86f:	fpatan 
  40e871:	and    esp,ecx
  40e873:	pop    es
  40e874:	push   ds
  40e875:	xchg   al,bh
  40e877:	jecxz  0x40e898
  40e879:	push   ds
  40e87a:	dec    eax
  40e87b:	pop    ebx
  40e87c:	loopne 0x40e803
  40e87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87f:	into   
  40e880:	pop    edx
  40e881:	fimul  WORD PTR [eax]
  40e883:	ins    DWORD PTR es:[edi],dx
  40e884:	add    eax,0xbe33e8a6
  40e889:	xor    al,ch
  40e88b:	nop
  40e88c:	js     0x40e8f7
  40e88e:	add    ecx,ebx
  40e890:	inc    eax
  40e891:	out    0x89,al
  40e893:	retf   0x321c
  40e896:	daa    
  40e897:	mov    dh,0xec
  40e899:	shl    DWORD PTR [ebx+edi*2+0x26],cl
  40e89d:	fcomp  DWORD PTR [ecx-0x15043e21]
  40e8a3:	enter  0xae1,0x9
  40e8a7:	fwait
  40e8a8:	mov    ebx,0xa98965f5
  40e8ad:	push   0x2410f779
  40e8b2:	mov    bl,0x6b
  40e8b4:	sahf   
  40e8b5:	xchg   esp,eax
  40e8b6:	stos   DWORD PTR es:[edi],eax
  40e8b7:	mov    bl,0x35
  40e8b9:	shl    DWORD PTR ds:0xc713325e,1
  40e8bf:	stos   BYTE PTR es:[edi],al
  40e8c0:	or     al,0x1c
  40e8c2:	sahf   
  40e8c3:	dec    edx
  40e8c4:	das    
  40e8c5:	pop    esp
  40e8c6:	daa    
  40e8c7:	fsub   QWORD PTR [ebx-0x5e]
  40e8ca:	(bad)  
  40e8cb:	xor    al,0xb7
  40e8cd:	lods   al,BYTE PTR ds:[esi]
  40e8ce:	popf   
  40e8cf:	mov    eax,es
  40e8d1:	repz or al,BYTE PTR [edx-0x2e]
  40e8d5:	inc    eax
  40e8d6:	test   eax,0xbedc173b
  40e8db:	pop    es
  40e8dc:	shl    BYTE PTR [ecx],0x24
  40e8df:	pop    ecx
  40e8e0:	pmaxsw mm0,QWORD PTR [edi+0x6df36684]
  40e8e7:	sbb    eax,DWORD PTR [edx-0x7fa04a18]
  40e8ed:	out    dx,al
  40e8ee:	dec    eax
  40e8ef:	adc    bh,BYTE PTR [ebx]
  40e8f1:	adc    DWORD PTR [eax-0x25],edx
  40e8f4:	cmp    DWORD PTR [ebp+0x656e11c7],edi
  40e8fa:	xor    bl,ch
  40e8fc:	inc    eax
  40e8fd:	mov    DWORD PTR [eax+0x4ad0475],esi
  40e903:	xor    BYTE PTR [eax],0x2f
  40e906:	aas    
  40e907:	leave  
  40e908:	adc    DWORD PTR ds:0xdeec8211,esp
  40e90e:	fstp   TBYTE PTR [edx]
  40e910:	mov    ebx,0xe87ca8ea
  40e915:	xchg   ebx,eax
  40e916:	cli    
  40e917:	pop    ecx
  40e918:	jmp    0x40e92f
  40e91a:	dec    ebp
  40e91b:	mov    ebp,0xfe036650
  40e920:	cmp    eax,0x34659f8a
  40e925:	imul   ecx,DWORD PTR [esi-0x19],0xffffff8b
  40e929:	shr    ecx,0x7
  40e92c:	mov    ebp,edi
  40e92e:	mov    esp,0x25bd697d
  40e933:	mov    ebp,0x57c431f0
  40e938:	cdq    
  40e939:	jnp    0x40e8f6
  40e93b:	sub    BYTE PTR [ebx+0x33],ah
  40e93e:	xchg   esi,eax
  40e93f:	xor    DWORD PTR [eax+0xe3b3861],0xffffffca
  40e946:	js     0x40e8ee
  40e948:	and    al,cl
  40e94a:	xchg   ah,bh
  40e94c:	inc    ebp
  40e94d:	mov    al,ds:0xb1835d0b
  40e952:	arpl   WORD PTR [eax+ebp*8+0x6d],ax
  40e956:	shl    BYTE PTR [edx+0x4a],1
  40e959:	inc    esi
  40e95a:	shr    BYTE PTR [eax+eiz*2-0x24],cl
  40e95e:	sti    
  40e95f:	sbb    al,0x7b
  40e961:	sub    esp,ecx
  40e963:	and    cl,BYTE PTR [ebx-0x63]
  40e966:	adc    ebp,edx
  40e968:	adc    al,0x49
  40e96a:	push   cs
  40e96b:	inc    edi
  40e96c:	sub    al,0x2d
  40e96e:	loope  0x40e948
  40e970:	xor    al,0x14
  40e972:	pop    edi
  40e973:	fdiv   st,st(5)
  40e975:	push   eax
  40e976:	add    edi,edx
  40e978:	mov    ah,0x7b
  40e97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e97b:	sub    edx,DWORD PTR [edx-0xe]
  40e97e:	adc    al,0x1e
  40e980:	mov    bl,0xc7
  40e982:	mov    esp,0xfc586f57
  40e987:	sbb    BYTE PTR ds:0x26b2ac13,0x41
  40e98e:	xchg   DWORD PTR [ecx],edx
  40e990:	or     al,BYTE PTR ds:[esi]
  40e993:	call   FWORD PTR [ebx-0x21e20308]
  40e999:	cmp    ah,cl
  40e99b:	fstp   DWORD PTR [eax]
  40e99d:	imul   edi,DWORD PTR [eax-0xeb4900f],0x94456f94
  40e9a7:	(bad)  
  40e9a8:	fwait
  40e9a9:	sub    ebp,DWORD PTR [edx+0x3ad9a472]
  40e9af:	xchg   ecx,eax
  40e9b0:	adc    al,0xa3
  40e9b2:	inc    esi
  40e9b3:	xlat   BYTE PTR ds:[ebx]
  40e9b4:	fldcw  WORD PTR ds:0x1e81b08e
  40e9ba:	and    DWORD PTR ds:0xda964164,edx
  40e9c0:	pop    edi
  40e9c1:	dec    ecx
  40e9c2:	jl     0x40ea3b
  40e9c4:	xor    al,0xe9
  40e9c6:	sub    ah,ah
  40e9c8:	adc    BYTE PTR ds:0x8832a3a7,0x62
  40e9cf:	rol    esi,1
  40e9d1:	cmp    al,0x28
  40e9d3:	sbb    eax,0x293d9613
  40e9d8:	cmp    al,0x4a
  40e9da:	sub    eax,0xc8ec1938
  40e9df:	mov    es,WORD PTR [edi]
  40e9e1:	jecxz  0x40e966
  40e9e3:	dec    esi
  40e9e4:	inc    edi
  40e9e5:	call   0xe6b09aad
  40e9ea:	test   al,0x63
  40e9ec:	or     DWORD PTR [ecx+eiz*8],ecx
  40e9ef:	in     eax,0xa9
  40e9f1:	scas   al,BYTE PTR es:[edi]
  40e9f2:	mov    esi,0xf9031582
  40e9f7:	and    dh,BYTE PTR [esi+edx*4]
  40e9fa:	loopne 0x40e994
  40e9fc:	push   ds
  40e9fd:	into   
  40e9fe:	mov    cs,WORD PTR [ebx+0x30e0875e]
  40ea04:	push   esi
  40ea05:	shr    BYTE PTR [edx],cl
  40ea07:	cmp    DWORD PTR [edi+0x669d7b63],esp
  40ea0d:	mov    eax,ds
  40ea0f:	jns    0x40e9ed
  40ea11:	stos   DWORD PTR es:[edi],eax
  40ea12:	push   esp
  40ea13:	add    eax,0x6f121f41
  40ea18:	pop    esi
  40ea19:	cmp    eax,0x439bd931
  40ea1e:	inc    ecx
  40ea1f:	add    ecx,0xffffffbe
  40ea22:	mov    esi,0x2daf3ee9
  40ea27:	imul   eax,DWORD PTR [edx-0x64],0xeb19b6e4
  40ea2e:	(bad)  
  40ea2f:	sbb    DWORD PTR [edx-0x16e41c52],edx
  40ea35:	fcomp  DWORD PTR [esi+0x513c0d86]
  40ea3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea3c:	imul   edi,edx,0x82b884dc
  40ea42:	shr    DWORD PTR [ecx],1
  40ea44:	adc    ah,BYTE PTR [esi+edx*1]
  40ea47:	mov    cl,0x99
  40ea49:	xchg   BYTE PTR [ebp-0x7334978],bl
  40ea4f:	ja     0x40ea64
  40ea51:	sbb    BYTE PTR [ebx+0x755d017e],cl
  40ea57:	add    BYTE PTR [edx],bl
  40ea59:	test   eax,0x6b826b74
  40ea5e:	or     al,bh
  40ea60:	push   cs
  40ea61:	in     al,0x8b
  40ea63:	pushf  
  40ea64:	jno    0x40ea61
  40ea66:	add    al,0xc2
  40ea68:	push   edx
  40ea69:	push   esp
  40ea6a:	shl    BYTE PTR [edi+0x31],1
  40ea6d:	imul   esi,DWORD PTR [ebx],0x22
  40ea70:	jns    0x40ea83
  40ea72:	sahf   
  40ea73:	fiadd  WORD PTR [edi*2+0x66908a79]
  40ea7a:	mov    ah,0xaf
  40ea7c:	enter  0x4fa7,0x2b
  40ea80:	sub    ah,BYTE PTR [ecx+0x63bf320c]
  40ea86:	in     eax,dx
  40ea87:	jns    0x40ead5
  40ea89:	pop    ss
  40ea8a:	xor    BYTE PTR [edx-0x69c65490],dh
  40ea90:	wbinvd 
  40ea92:	repz pop ecx
  40ea94:	push   es
  40ea95:	cwde   
  40ea96:	lea    esp,[ebp-0x71141439]
  40ea9c:	pop    eax
  40ea9d:	call   ebp
  40ea9f:	add    esp,ecx
  40eaa1:	sub    edi,edi
  40eaa3:	inc    esp
  40eaa4:	push   ds
  40eaa5:	call   0x4d180788
  40eaaa:	push   ebp
  40eaab:	test   eax,0xbcf47cfa
  40eab0:	cli    
  40eab1:	ins    DWORD PTR es:[edi],dx
  40eab2:	jbe    0x40ea85
  40eab4:	test   al,0xb
  40eab6:	stc    
  40eab7:	sti    
  40eab8:	ins    BYTE PTR es:[edi],dx
  40eab9:	popf   
  40eaba:	jge    0x40eabf
  40eabc:	or     eax,0xcb58ebcc
  40eac1:	cli    
  40eac2:	sbb    eax,0x54166f6
  40eac7:	repnz fdivr DWORD PTR [ecx-0x69]
  40eacb:	sub    ecx,DWORD PTR [ebx+0x71]
  40eace:	retf   
  40eacf:	imul   DWORD PTR [ecx]
  40ead1:	sub    edx,esp
  40ead3:	mul    BYTE PTR [esi-0x4edf71c9]
  40ead9:	cmp    eax,0xa4a4b833
  40eade:	mov    dh,0x9e
  40eae0:	hlt    
  40eae1:	pop    ss
  40eae2:	mov    edx,0xc82498f3
  40eae7:	ins    DWORD PTR es:[edi],dx
  40eae8:	pop    ebp
  40eae9:	jl     0x40eb39
  40eaeb:	and    DWORD PTR [ebp+0x22a318cc],edi
  40eaf1:	cmp    al,0x23
  40eaf3:	sub    al,BYTE PTR [edx]
  40eaf5:	fbld   TBYTE PTR [eax+0xf8fac6]
  40eafb:	pop    esi
  40eafc:	jmp    0x40eb02
  40eafe:	sub    eax,0x989689bc
  40eb03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb04:	(bad)  
  40eb05:	iret   
  40eb06:	jb     0x40eae4
  40eb08:	iret   
  40eb09:	jne    0x40eb83
  40eb0b:	lahf   
  40eb0c:	imul   edi,DWORD PTR [edi],0x78869c98
  40eb12:	mov    ebx,edx
  40eb14:	rcr    BYTE PTR ds:0xb2f0fd3f,cl
  40eb1a:	int3   
  40eb1b:	xor    DWORD PTR [eiz*4+0x751b2151],ecx
  40eb22:	hlt    
  40eb23:	push   ecx
  40eb24:	and    al,0x4a
  40eb26:	sub    DWORD PTR [ebp-0x79de82df],ebx
  40eb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb2d:	and    dl,al
  40eb2f:	test   BYTE PTR [edx+0x6f8712a0],0xe2
  40eb36:	daa    
  40eb37:	inc    ebx
  40eb38:	jnp    0x40eb02
  40eb3a:	lods   eax,DWORD PTR ds:[esi]
  40eb3b:	ffree  st(0)
  40eb3d:	in     al,dx
  40eb3e:	or     eax,0xf468ae7f
  40eb43:	arpl   dx,dx
  40eb45:	pop    ebx
  40eb46:	sahf   
  40eb47:	push   ds
  40eb48:	pop    esp
  40eb49:	fisttp QWORD PTR [ecx]
  40eb4b:	and    cl,BYTE PTR [esi]
  40eb4d:	cmp    bl,al
  40eb4f:	xchg   edx,eax
  40eb50:	fs jle 0x40eb5e
  40eb53:	into   
  40eb54:	aad    0xa8
  40eb56:	shl    DWORD PTR ds:0xdcc9de2f,cl
  40eb5c:	rcl    BYTE PTR [esi+0x208e1a06],cl
  40eb62:	or     cl,BYTE PTR [ecx]
  40eb64:	out    0x4d,eax
  40eb66:	and    ah,BYTE PTR [ebp+edi*2+0x49e24c0f]
  40eb6d:	sti    
  40eb6e:	inc    edx
  40eb6f:	stc    
  40eb70:	hlt    
  40eb71:	mov    bl,0x6c
  40eb73:	jmp    0x40eaff
  40eb75:	pop    ebp
  40eb76:	fstp   DWORD PTR [esi+0x42]
  40eb79:	dec    edi
  40eb7a:	mov    edi,0x4c151bce
  40eb7f:	iret   
  40eb80:	shl    ecx,1
  40eb82:	lods   al,BYTE PTR ds:[esi]
  40eb83:	jnp    0x40eb7f
  40eb85:	fwait
  40eb86:	lock stos DWORD PTR es:[edi],eax
  40eb88:	inc    edx
  40eb89:	cld    
  40eb8a:	sbb    eax,0xd6a3bb57
  40eb8f:	clc    
  40eb90:	imul   ebx,eax,0xed9ce67
  40eb96:	mov    DWORD PTR [edi],ebx
  40eb98:	cs pop eax
  40eb9a:	mov    edx,0xfcd233da
  40eb9f:	mov    eax,ecx
  40eba1:	jmp    0xa23280ef
  40eba6:	jmp    0xcce9:0x47a404b5
  40ebad:	(bad)  
  40ebae:	data16 clc 
  40ebb0:	out    0x54,eax
  40ebb2:	das    
  40ebb3:	and    BYTE PTR [ebp+0x1],ch
  40ebb6:	(bad)  
  40ebb8:	sub    ebp,DWORD PTR [eax+0x52]
  40ebbb:	in     al,0x23
  40ebbd:	pop    ss
  40ebbe:	scas   eax,DWORD PTR es:[edi]
  40ebbf:	sbb    ch,BYTE PTR [esi-0x7d]
  40ebc2:	out    dx,eax
  40ebc3:	imul   esp,DWORD PTR [eax+0x7d],0x42cfe7f1
  40ebca:	into   
  40ebcb:	sub    BYTE PTR ds:0x8c145915,al
  40ebd1:	repnz imul ebx,DWORD PTR [ecx-0x40],0xffffffc0
  40ebd6:	scas   eax,DWORD PTR es:[edi]
  40ebd7:	mov    al,ds:0xf46ec2f1
  40ebdc:	add    eax,0x87c671a8
  40ebe1:	pusha  
  40ebe2:	je     0x40ebc9
  40ebe4:	lds    ebx,FWORD PTR [eax-0xc]
  40ebe7:	popa   
  40ebe8:	cs call 0xfb6f:0xe6ae9fb0
  40ebf0:	or     BYTE PTR [edx],al
  40ebf2:	fiadd  WORD PTR [ebp-0x14811a5]
  40ebf8:	cmp    bh,ah
  40ebfa:	(bad)  
  40ebfb:	mov    ah,0x8e
  40ebfd:	dec    ebp
  40ebfe:	mov    eax,ds:0x954ead80
  40ec03:	mov    dl,0x7a
  40ec05:	xlat   BYTE PTR ds:[ebx]
  40ec06:	or     ch,0x9c
  40ec09:	outs   dx,BYTE PTR ds:[esi]
  40ec0a:	jns    0x40eb95
  40ec0c:	daa    
  40ec0d:	add    al,0xbe
  40ec0f:	call   0x4c42:0xcb2ffe80
  40ec16:	inc    eax
  40ec17:	pop    edx
  40ec19:	xchg   dl,ch
  40ec1b:	pusha  
  40ec1c:	inc    edi
  40ec1d:	adc    DWORD PTR [esi],eax
  40ec1f:	pushf  
  40ec20:	pop    esi
  40ec21:	or     eax,0x8e0b0667
  40ec26:	dec    edi
  40ec27:	sbb    eax,0x9d827cb4
  40ec2c:	xchg   BYTE PTR [ebp-0x625a1a4c],bl
  40ec32:	(bad)  
  40ec33:	(bad)  
  40ec34:	xor    BYTE PTR [ebp+0x40b7c025],dl
  40ec3a:	push   eax
  40ec3b:	leave  
  40ec3c:	xlat   BYTE PTR ds:[ebx]
  40ec3d:	mov    ebp,0xfed20e7e
  40ec42:	hlt    
  40ec43:	push   esi
  40ec44:	xor    BYTE PTR [ebp-0x5cd0ed0],dh
  40ec4a:	cli    
  40ec4b:	pop    eax
  40ec4c:	push   esp
  40ec4d:	call   0xa456:0x7cc0e600
  40ec54:	loop   0x40ebe1
  40ec56:	cmp    DWORD PTR [eax],0xffffff88
  40ec59:	or     al,0x60
  40ec5b:	sahf   
  40ec5c:	push   0xffffffaa
  40ec5e:	shr    BYTE PTR [ebx],0x6a
  40ec61:	sbb    al,0xf1
  40ec63:	jno    0x40eca4
  40ec65:	out    dx,eax
  40ec66:	arpl   WORD PTR [esi-0x501ce6e6],bp
  40ec6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec6d:	and    eax,0x21f3428
  40ec72:	retf   
  40ec73:	xchg   ebp,eax
  40ec74:	test   DWORD PTR [edx],esp
  40ec76:	in     al,0x2e
  40ec78:	sub    eax,0xdc3a60e3
  40ec7d:	pop    es
  40ec7e:	ror    eax,1
  40ec80:	lods   al,BYTE PTR ds:[esi]
  40ec81:	pop    ecx
  40ec82:	push   cs
  40ec83:	jns    0x40ecb6
  40ec85:	xlat   BYTE PTR ds:[ebx]
  40ec86:	outs   dx,DWORD PTR ds:[esi]
  40ec87:	out    0xf7,eax
  40ec89:	lea    ecx,[eax]
  40ec8b:	push   edi
  40ec8c:	int3   
  40ec8d:	add    al,ch
  40ec8f:	repnz sbb ebx,DWORD PTR [edi+0x157b0e7]
  40ec96:	jae    0x40ece1
  40ec98:	mov    dl,BYTE PTR [eax-0x68]
  40ec9b:	add    al,0x5
  40ec9e:	es (bad) 
  40eca0:	(bad)  
  40eca1:	sbb    BYTE PTR [edx+eiz*8],dh
  40eca4:	rcr    DWORD PTR [ecx],cl
  40eca6:	out    0xd8,al
  40eca8:	sbb    BYTE PTR [edx],dh
  40ecaa:	popa   
  40ecab:	js     0x40ec54
  40ecad:	add    edx,DWORD PTR [ebx+0x5093c491]
  40ecb3:	iret   
  40ecb4:	cmp    edi,ebx
  40ecb6:	or     esp,0xbbd3def8
  40ecbc:	test   dl,bh
  40ecbe:	je     0x40ec46
  40ecc0:	mov    al,ds:0xcb36d657
  40ecc5:	cmc    
  40ecc6:	xor    edx,eax
  40ecc8:	test   eax,0xb04fbab7
  40eccd:	xor    al,0xf2
  40eccf:	xor    al,0xf2
  40ecd1:	loope  0x40ed48
  40ecd3:	add    eax,0xa5e10017
  40ecd8:	sbb    al,0xf4
  40ecda:	dec    edx
  40ecdb:	mov    ss,WORD PTR [eax+0x7a]
  40ecde:	retf   0x5843
  40ece1:	xor    edx,DWORD PTR [ecx-0x3f]
  40ece4:	and    esp,edx
  40ece6:	xchg   edx,eax
  40ece7:	clc    
  40ece8:	imul   eax,DWORD PTR [ebx],0x8f951a3c
  40ecee:	or     al,0x94
  40ecf0:	jb     0x40ed06
  40ecf2:	mov    ah,0xd3
  40ecf4:	adc    eax,0x93f0be96
  40ecf9:	das    
  40ecfa:	inc    BYTE PTR [ecx]
  40ecfc:	mov    dh,0x55
  40ecfe:	adc    BYTE PTR [edx-0x371789fb],dh
  40ed04:	lahf   
  40ed05:	ds loopne 0x40eca2
  40ed08:	repnz imul ebx,ecx,0xffffff95
  40ed0c:	pop    ebp
  40ed0d:	out    0x7c,eax
  40ed0f:	ins    BYTE PTR es:[edi],dx
  40ed10:	inc    esp
  40ed11:	repz mov ch,0xb7
  40ed14:	jge    0x40ec9e
  40ed16:	imul   ecx,DWORD PTR [ebp+0x12],0x65c2c03
  40ed1d:	pop    esi
  40ed1e:	outs   dx,BYTE PTR ds:[esi]
  40ed1f:	mov    ah,0xc2
  40ed21:	dec    ebp
  40ed22:	test   BYTE PTR [ecx],bl
  40ed24:	inc    al
  40ed26:	in     al,dx
  40ed27:	mov    DWORD PTR [esi-0x14],esp
  40ed2a:	dec    ebp
  40ed2b:	or     eax,esi
  40ed2d:	inc    ecx
  40ed2e:	das    
  40ed2f:	pop    edx
  40ed30:	xchg   ebx,eax
  40ed31:	jo     0x40eda4
  40ed33:	daa    
  40ed34:	sbb    bh,BYTE PTR [esi]
  40ed36:	push   ss
  40ed37:	enter  0x251f,0xa5
  40ed3b:	in     eax,dx
  40ed3c:	mov    ah,0xfa
  40ed3e:	mov    edi,0x71fe4f56
  40ed43:	pop    eax
  40ed44:	call   0xec026cdc
  40ed49:	jge    0x40ed8d
  40ed4b:	add    dh,bh
  40ed4d:	dec    edi
  40ed4e:	mov    edi,0xfd83430
  40ed53:	stc    
  40ed54:	push   0x7f973002
  40ed59:	lea    esi,[edi]
  40ed5b:	pop    ebp
  40ed5c:	loop   0x40ed4d
  40ed5e:	sbb    eax,0x66fec009
  40ed63:	test   eax,0x5b6a757b
  40ed68:	ins    DWORD PTR es:[edi],dx
  40ed69:	inc    esp
  40ed6a:	clc    
  40ed6b:	pop    ds
  40ed6c:	and    edi,DWORD PTR [edx]
  40ed6e:	stos   BYTE PTR es:[edi],al
  40ed6f:	pushf  
  40ed70:	lds    edx,FWORD PTR ds:0xcdd0087a
  40ed76:	cmp    esi,DWORD PTR [ebx]
  40ed78:	outs   dx,BYTE PTR ds:[esi]
  40ed79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed7a:	cs adc dh,dh
  40ed7d:	clc    
  40ed7e:	inc    edx
  40ed7f:	imul   eax,esi,0x5a
  40ed82:	add    ah,ah
  40ed84:	retf   
  40ed85:	mov    eax,0x2ca305fa
  40ed8a:	(bad)  
  40ed8b:	push   edx
  40ed8d:	out    dx,al
  40ed8e:	fist   DWORD PTR [ecx-0xc]
  40ed91:	cdq    
  40ed92:	mov    ecx,0xb687236c
  40ed97:	mov    BYTE PTR fs:[esi+ecx*4-0x52],cl
  40ed9c:	jle    0x40ede9
  40ed9e:	loope  0x40ee00
  40eda0:	(bad)  [edx-0x6df00f50]
  40eda6:	mov    ebp,0x29d70413
  40edab:	cli    
  40edac:	outs   dx,DWORD PTR ds:[esi]
  40edad:	mov    cl,0x7
  40edaf:	or     al,0xd9
  40edb1:	and    dh,BYTE PTR [esp+eax*4+0x1b075fa9]
  40edb8:	inc    BYTE PTR [ecx]
  40edba:	not    ah
  40edbc:	add    bh,BYTE PTR [edx]
  40edbe:	outs   dx,BYTE PTR ds:[esi]
  40edbf:	lock shl DWORD PTR [ecx+0x53808249],1
  40edc6:	in     al,dx
  40edc7:	and    DWORD PTR [eax+0x44e3cc53],ecx
  40edcd:	cmp    eax,0x14b73afd
  40edd2:	cmc    
  40edd3:	cmp    bl,BYTE PTR ds:0xcd83165b
  40edd9:	repz jbe 0x40edab
  40eddc:	mov    esp,0x77798007
  40ede1:	push   esi
  40ede2:	add    al,0x9b
  40ede4:	pusha  
  40ede5:	xchg   ebx,eax
  40ede6:	mov    ds:0xad7dcbba,eax
  40edeb:	add    ah,BYTE PTR [ebx-0x8]
  40edee:	sbb    al,0xe3
  40edf0:	call   FWORD PTR gs:[esi+0x11]
  40edf4:	push   es
  40edf5:	and    bh,ch
  40edf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf8:	push   ds
  40edf9:	outs   dx,BYTE PTR ds:[esi]
  40edfa:	aam    0xc
  40edfc:	popf   
  40edfd:	fdivr  DWORD PTR [esi+0xb]
  40ee00:	cmp    al,0xe1
  40ee02:	push   cs
  40ee03:	push   0xb219e49
  40ee08:	xlat   BYTE PTR ds:[ebx]
  40ee09:	imul   edx,DWORD PTR [edi],0xffffffda
  40ee0c:	push   0x8c488140
  40ee11:	lock jnp 0x40ee0f
  40ee14:	test   edi,esp
  40ee16:	jno    0x40edc4
  40ee18:	mov    dl,BYTE PTR [ecx-0xe563c5c]
  40ee1e:	jge    0x40ee0b
  40ee20:	and    al,0xa3
  40ee22:	int    0x42
  40ee24:	mov    ebp,edx
  40ee26:	xchg   ebp,eax
  40ee27:	mov    eax,0xd78eafb3
  40ee2c:	sbb    ebp,DWORD PTR [edx-0x49e1aeaa]
  40ee32:	cmp    eax,0xae8fa58a
  40ee37:	int3   
  40ee38:	test   al,0xbd
  40ee3a:	and    DWORD PTR ds:0x2f5e31d3,0x7f
  40ee41:	adc    BYTE PTR [eax+0x24],0xbf
  40ee45:	dec    esi
  40ee46:	sub    cl,BYTE PTR [ebx]
  40ee48:	dec    ebx
  40ee49:	pop    esi
  40ee4a:	sub    DWORD PTR [ecx+0x49],edx
  40ee4d:	out    0xe7,al
  40ee4f:	scas   al,BYTE PTR es:[edi]
  40ee50:	mov    ebx,0xe45221e1
  40ee55:	pop    edi
  40ee56:	or     eax,0xdb0341d5
  40ee5b:	lods   al,BYTE PTR gs:[esi]
  40ee5d:	out    0x74,al
  40ee5f:	add    ebp,edi
  40ee61:	mov    ?,WORD PTR [ebx+esi*4-0x5040feaa]
  40ee68:	pop    edi
  40ee69:	stc    
  40ee6a:	xchg   BYTE PTR [ebp-0x23ab79f7],bl
  40ee70:	(bad)
  40ee73:	rcr    DWORD PTR [edi],cl
  40ee75:	in     eax,dx
  40ee76:	inc    ecx
  40ee77:	jbe    0x40ee5d
  40ee79:	rol    BYTE PTR [ebp+0x36ce949d],0x6
  40ee80:	fimul  WORD PTR [edi+0x46]
  40ee83:	sbb    ebp,esp
  40ee85:	mov    WORD PTR ds:0x7cc236df,es
  40ee8b:	inc    ebp
  40ee8c:	sub    ebx,DWORD PTR [ebp+0x5d]
  40ee8f:	jle    0x40eec4
  40ee91:	jnp    0x40ee47
  40ee93:	xchg   edx,eax
  40ee94:	inc    ebx
  40ee95:	ror    BYTE PTR [ebx-0x6c],0x80
  40ee99:	jmp    0xe211ac80
  40ee9e:	jle    0x40ef14
  40eea0:	rcl    DWORD PTR [ecx],cl
  40eea2:	out    dx,eax
  40eea3:	or     ecx,ebx
  40eea5:	mov    eax,ds:0x36f99f09
  40eeaa:	loope  0x40ef1e
  40eeac:	or     esi,DWORD PTR [eax-0x78]
  40eeaf:	ja     0x40eee2
  40eeb1:	push   edx
  40eeb2:	outs   dx,BYTE PTR ds:[esi]
  40eeb3:	cmp    edi,ebp
  40eeb5:	out    dx,al
  40eeb6:	(bad)  
  40eeb7:	sti    
  40eeb8:	xor    ecx,esi
  40eeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eebb:	test   DWORD PTR [edx+edi*8+0x12],ebx
  40eebf:	sbb    DWORD PTR [esi],esi
  40eec1:	into   
  40eec2:	sbb    BYTE PTR [edx+ecx*4+0x5],dh
  40eec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec7:	test   al,0xd9
  40eeca:	fmul   DWORD PTR [eax]
  40eecc:	in     eax,0x7
  40eece:	jae    0x40ee70
  40eed0:	pop    es
  40eed1:	jno    0x40ef19
  40eed3:	sub    edi,DWORD PTR [esi+0x28221d67]
  40eed9:	and    DWORD PTR [esi-0x14],ecx
  40eedc:	sub    dh,BYTE PTR [eax+esi*1-0x6ca7d5b5]
  40eee3:	cmp    ebp,DWORD PTR [edx+0x39a54e0b]
  40eee9:	dec    edi
  40eeea:	lods   eax,DWORD PTR ds:[esi]
  40eeeb:	test   DWORD PTR [ecx],0xf369f2fd
  40eef1:	mov    ebx,DWORD PTR [eax+0x40dbc68c]
  40eef7:	(bad)  
  40eef8:	int    0x79
  40eefa:	out    dx,al
  40eefb:	mov    al,0x3b
  40eefd:	(bad)
  40ef02:	pop    ebp
  40ef03:	fild   WORD PTR ds:0xfac4ec85
  40ef09:	mov    al,ds:0x94ddcfc5
  40ef0e:	xor    DWORD PTR es:[ebp+esi*8-0x2042d1af],0x31
  40ef17:	cld    
  40ef18:	icebp  
  40ef19:	fsubr  QWORD PTR [eax+0x5f]
  40ef1c:	adc    BYTE PTR [ecx],al
  40ef1e:	or     DWORD PTR [edi+edx*1-0x37],ebx
  40ef22:	imul   esi,DWORD PTR [esi-0xc0e7dc6],0xda7846e4
  40ef2c:	add    eax,0x9f2b14a0
  40ef31:	xlat   BYTE PTR ds:[ebx]
  40ef32:	jns    0x40ef8e
  40ef34:	jecxz  0x40ef33
  40ef36:	call   0x78e165e6
  40ef3b:	ins    BYTE PTR es:[edi],dx
  40ef3c:	and    DWORD PTR [eax+0x10308e2b],esi
  40ef42:	xchg   edi,eax
  40ef43:	jmp    0xb91c026d
  40ef48:	fsubr  st(5),st
  40ef4a:	cmp    BYTE PTR [esi],cl
  40ef4c:	add    BYTE PTR [esi+0x5f238e7e],0x97
  40ef53:	cmc    
  40ef54:	mov    edi,0x87345311
  40ef59:	fdivr  DWORD PTR [edx]
  40ef5b:	sub    bh,al
  40ef5d:	test   al,0xbc
  40ef5f:	ret    0xf54c
  40ef62:	stc    
  40ef63:	and    BYTE PTR [ecx-0x4c5b165],al
  40ef69:	add    eax,0x5a4b0329
  40ef6e:	ins    DWORD PTR es:[edi],dx
  40ef6f:	mov    edx,0x47ea75f6
  40ef74:	sbb    dh,BYTE PTR [esi-0xc]
  40ef77:	xchg   ecx,eax
  40ef78:	inc    edx
  40ef79:	in     al,0x5c
  40ef7b:	test   DWORD PTR [ebx],ecx
  40ef7d:	iret   
  40ef7e:	cld    
  40ef7f:	jp     0x40ef23
  40ef81:	ins    DWORD PTR es:[edi],dx
  40ef82:	ds jo  0x40ef8f
  40ef85:	add    esi,DWORD PTR [edi-0x77]
  40ef88:	mov    ah,0x4a
  40ef8a:	leave  
  40ef8b:	into   
  40ef8c:	clc    
  40ef8d:	and    eax,0x256d256e
  40ef92:	jns    0x40ef78
  40ef94:	sbb    dh,BYTE PTR [edx+0x466f4808]
  40ef9a:	dec    esi
  40ef9b:	out    dx,al
  40ef9c:	or     BYTE PTR [ecx],bl
  40ef9e:	(bad)  [eax+0x6e3b8d58]
  40efa4:	xchg   ebx,eax
  40efa5:	daa    
  40efa6:	and    DWORD PTR [ecx],edi
  40efa8:	dec    edi
  40efa9:	fwait
  40efaa:	loopne 0x40efe5
  40efac:	xor    DWORD PTR [edi],esp
  40efae:	and    BYTE PTR [ebx-0x42dcf6bc],al
  40efb4:	xchg   edi,eax
  40efb5:	rol    dl,1
  40efb7:	adc    BYTE PTR [edi-0x41],ah
  40efba:	inc    esp
  40efbb:	out    dx,al
  40efbc:	jae    0x40ef4f
  40efbe:	enter  0x6002,0xdf
  40efc2:	and    DWORD PTR [edi+0x16a894f2],edi
  40efc8:	xchg   BYTE PTR [edi+eiz*2+0x73892ba7],ah
  40efcf:	(bad)  
  40efd1:	sbb    DWORD PTR [ebp-0x3],ebx
  40efd4:	fdiv   DWORD PTR [edx-0x25]
  40efd7:	sub    edi,DWORD PTR [esi+ebp*2+0x3beded02]
  40efde:	nop
  40efdf:	jmp    FWORD PTR [edx+esi*8]
  40efe2:	jmp    0x44c5cc56
  40efe7:	and    esp,DWORD PTR [ebp-0x41a3c8c5]
  40efed:	jle    0x40f04c
  40efef:	xchg   edi,eax
  40eff0:	cmp    BYTE PTR [ebp+0x1],dh
  40eff3:	jmp    DWORD PTR [ebx-0x20]
  40eff6:	xor    edx,DWORD PTR [ebp+0x57]
  40eff9:	mov    cl,0x1c
  40effb:	(bad)
  40f000:	sbb    DWORD PTR [eax+0x2e],ebx
  40f003:	dec    edx
  40f004:	sahf   
  40f005:	es push edx
  40f007:	cmp    BYTE PTR [esi],dl
  40f009:	dec    ecx
  40f00a:	sar    DWORD PTR [edi-0x5c3d37fb],0x23
  40f011:	data16 jl 0x40f092
  40f014:	es mov al,0x40
  40f017:	sub    BYTE PTR [edi-0x23],dl
  40f01a:	dec    ebx
  40f01b:	bound  ebp,QWORD PTR [edi]
  40f01d:	fnstcw WORD PTR [ecx]
  40f01f:	mov    dl,0x47
  40f021:	(bad)  
  40f023:	adc    BYTE PTR [edi+ecx*8],0x60
  40f027:	cmp    DWORD PTR [edx+0x3cfdc8c0],esp
  40f02d:	fist   WORD PTR [edi+0x2aed13dd]
  40f033:	outs   dx,BYTE PTR ds:[esi]
  40f034:	xor    eax,0x3ae40ff
  40f039:	dec    eax
  40f03a:	fwait
  40f03b:	pop    ecx
  40f03c:	in     al,dx
  40f03d:	jo     0x40eff3
  40f03f:	mov    ch,BYTE PTR [esp+ecx*1-0x6a]
  40f043:	nop
  40f044:	packssdw mm5,QWORD PTR [ecx+0x8]
  40f048:	mov    ecx,0x603f1cb3
  40f04d:	jb     0x40efe1
  40f04f:	imul   ecx,DWORD PTR [edi+0x7637df86],0x1c
  40f056:	test   al,0xbc
  40f058:	aas    
  40f059:	pop    ebp
  40f05a:	sub    BYTE PTR [ebp+0x162e904e],dl
  40f060:	aaa    
  40f061:	in     eax,0xd1
  40f063:	add    al,0x84
  40f065:	(bad)  
  40f067:	aas    
  40f068:	pop    ebp
  40f069:	xor    edx,esp
  40f06b:	int    0x68
  40f06d:	xor    esp,DWORD PTR [ecx]
  40f06f:	test   DWORD PTR [ebx],edx
  40f071:	call   0x2daa1a2
  40f076:	shr    esi,0x50
  40f079:	add    al,BYTE PTR [ebp+0x5a]
  40f07c:	adc    DWORD PTR [edx+0x1ffd3b2a],eax
  40f082:	and    eax,0x1387c732
  40f087:	sar    DWORD PTR [ebx+0x35],0xc1
  40f08b:	std    
  40f08c:	adc    BYTE PTR [ecx-0x7b],bl
  40f08f:	lods   eax,DWORD PTR ds:[esi]
  40f090:	dec    esi
  40f091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f092:	outs   dx,DWORD PTR ds:[esi]
  40f093:	outs   dx,DWORD PTR ds:[esi]
  40f094:	inc    ebx
  40f095:	addr16 push ebx
  40f097:	add    BYTE PTR ds:0x17ef8aa7,bl
  40f09d:	xchg   esi,eax
  40f09e:	adc    edi,DWORD PTR [edi]
  40f0a0:	ret    0x91af
  40f0a3:	icebp  
  40f0a4:	loopne 0x40f078
  40f0a6:	sub    DWORD PTR [ebp+0x443ab333],0x30
  40f0ad:	mov    esi,0xcefa239b
  40f0b2:	ret    
  40f0b3:	jge    0x40f10d
  40f0b5:	mov    ds:0x3f820bfe,al
  40f0ba:	mov    ds:0x88e5bd50,al
  40f0bf:	push   ebx
  40f0c0:	pop    edx
  40f0c1:	or     eax,0xbe6dde6f
  40f0c6:	push   ebx
  40f0c7:	push   esp
  40f0c8:	lock mov cl,0x4c
  40f0cb:	fisttp WORD PTR [ecx]
  40f0cd:	(bad)  
  40f0cf:	hlt    
  40f0d0:	mov    eax,ds:0xa36c8b9
  40f0d5:	test   al,0x95
  40f0d7:	data16 jno 0x40f105
  40f0da:	ret    
  40f0db:	push   ebp
  40f0dc:	mov    bh,0x1d
  40f0de:	ret    
  40f0df:	inc    DWORD PTR [edx-0x6a91c37d]
  40f0e5:	int    0xdf
  40f0e7:	mov    cl,0x2b
  40f0e9:	xchg   esp,eax
  40f0ea:	pop    ss
  40f0eb:	cmp    al,0x51
  40f0ed:	xor    BYTE PTR [edi+0x6],al
  40f0f0:	nop
  40f0f1:	push   ds
  40f0f2:	lock mov edi,0x1c73c593
  40f0f8:	push   edx
  40f0f9:	outs   dx,BYTE PTR ds:[esi]
  40f0fa:	add    esi,DWORD PTR [edi-0x6e]
  40f0fd:	ret    0xd004
  40f100:	int3   
  40f101:	push   edi
  40f102:	ins    DWORD PTR es:[edi],dx
  40f103:	dec    eax
  40f104:	fstp   DWORD PTR [ebx]
  40f106:	mov    bl,0xbf
  40f108:	or     BYTE PTR [edx+0x2c],0xf2
  40f10c:	lds    esp,FWORD PTR [eax]
  40f10e:	mov    bl,0xc0
  40f110:	gs xchg ebp,eax
  40f112:	push   0xfffffff0
  40f114:	fdivp  st(6),st
  40f116:	jp     0x40f131
  40f118:	cld    
  40f119:	jb     0x40f11e
  40f11b:	lods   eax,DWORD PTR ds:[esi]
  40f11c:	xor    bh,BYTE PTR [eax]
  40f11e:	scas   eax,DWORD PTR es:[edi]
  40f11f:	hlt    
  40f120:	addr16 arpl dx,cx
  40f123:	bound  esp,QWORD PTR [ecx+edx*4+0x40]
  40f127:	ds cmp al,0xc6
  40f12a:	pop    ebx
  40f12b:	call   0x548c2f9f
  40f130:	or     DWORD PTR [ebx+0x1de91dac],edi
  40f136:	mov    ah,0x4f
  40f138:	sbb    al,0x76
  40f13a:	jno    0x40f0d8
  40f13c:	jne    0x40f110
  40f13e:	mov    ds:0x2731d5de,eax
  40f143:	and    al,0xd4
  40f145:	daa    
  40f146:	pop    ebx
  40f147:	push   ecx
  40f148:	xchg   ecx,eax
  40f149:	je     0x40f1c2
  40f14b:	out    0x6d,al
  40f14d:	imul   esp,ebp,0xd
  40f150:	adc    DWORD PTR [edx+0x5],0x31
  40f154:	add    al,0x58
  40f156:	xchg   esi,eax
  40f157:	mov    eax,ds:0x6eae910
  40f15c:	test   BYTE PTR [ecx+0x1c],dl
  40f15f:	cs jne 0x40f0ff
  40f162:	sar    BYTE PTR ds:[ecx],0xf5
  40f166:	loop   0x40f0ea
  40f168:	mov    esi,0x39d28c97
  40f16d:	data16 mov al,0x30
  40f170:	or     eax,0x63e63b4f
  40f175:	and    ecx,ecx
  40f177:	dec    ecx
  40f178:	icebp  
  40f179:	adc    dh,ah
  40f17b:	fisub  DWORD PTR [ebx]
  40f17d:	add    esi,DWORD PTR [ecx+0x25594d57]
  40f183:	dec    edx
  40f184:	push   ebp
  40f185:	repz jne 0x40f1f4
  40f188:	aam    0x26
  40f18a:	daa    
  40f18b:	pushw  ss
  40f18d:	repnz (bad) 
  40f190:	icebp  
  40f191:	stos   BYTE PTR es:[edi],al
  40f192:	js     0x40f206
  40f194:	dec    eax
  40f195:	cmc    
  40f196:	xor    esi,ebp
  40f198:	jmp    0x40f165
  40f19a:	rol    ch,0x31
  40f19d:	mov    al,0x34
  40f19f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f1a1:	jge    0x40f1c3
  40f1a3:	or     ebx,DWORD PTR [ebx-0x1bde0cba]
  40f1a9:	into   
  40f1aa:	sti    
  40f1ab:	gs sahf 
  40f1ad:	mov    ebx,0xf77ff01f
  40f1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b3:	arpl   WORD PTR [ebx-0x7b],cx
  40f1b6:	add    eax,0x553feba
  40f1bb:	add    eax,0x79194d1e
  40f1c0:	jl     0x40f201
  40f1c2:	jecxz  0x40f1b2
  40f1c4:	push   es
  40f1c5:	(bad)  
  40f1c6:	bnd ret 0x165e
  40f1ca:	sbb    ebp,edx
  40f1cc:	mov    eax,0x505e8ef7
  40f1d1:	sar    BYTE PTR [ecx+0x7c],0x89
  40f1d5:	test   DWORD PTR [ebp+eax*2-0x19],ebp
  40f1d9:	jo     0x40f1dc
  40f1db:	sbb    al,0x67
  40f1dd:	push   edi
  40f1de:	or     esi,DWORD PTR [edx]
  40f1e0:	ret    0x5a0b
  40f1e3:	mov    bl,0x94
  40f1e5:	iret   
  40f1e6:	sar    DWORD PTR [edx+0x56c56b08],1
  40f1ec:	add    esp,DWORD PTR [edx]
  40f1ee:	sti    
  40f1ef:	in     al,dx
  40f1f0:	pop    eax
  40f1f1:	ror    DWORD PTR [edx-0x44],1
  40f1f4:	add    cl,ah
  40f1f6:	sbb    eax,0xaf89940b
  40f1fb:	push   ecx
  40f1fc:	popf   
  40f1fd:	iret   
  40f1fe:	gs leave 
  40f200:	cmp    DWORD PTR [edx-0x6d],esp
  40f203:	cmp    ch,al
  40f205:	and    ecx,esi
  40f207:	cdq    
  40f208:	push   eax
  40f209:	and    DWORD PTR [ebx-0x1a049528],ebx
  40f20f:	dec    ebp
  40f210:	cmp    DWORD PTR [ebx],edi
  40f212:	push   ebx
  40f213:	add    al,0xa
  40f215:	xor    al,0x63
  40f217:	mov    eax,0xfd0daa07
  40f21c:	rcl    BYTE PTR [ebx-0x47e8f00a],1
  40f222:	push   ebp
  40f223:	jp     0x40f1ed
  40f225:	and    dh,BYTE PTR [esi]
  40f227:	retf   0x3c69
  40f22a:	dec    ecx
  40f22b:	push   ebp
  40f22c:	sbb    BYTE PTR [ecx-0x49],bh
  40f22f:	fsubrp st(7),st
  40f231:	pop    ds
  40f232:	fsubrp st(0),st
  40f234:	pop    ecx
  40f235:	hlt    
  40f236:	outs   dx,BYTE PTR ds:[esi]
  40f237:	(bad)  [edx+0x2136daf3]
  40f23d:	aam    0x17
  40f23f:	push   es
  40f240:	add    eax,0xb82e3148
  40f245:	or     al,0x62
  40f247:	sbb    BYTE PTR [esi-0x6029e229],ah
  40f24d:	fcomi  st,st(4)
  40f24f:	aas    
  40f250:	out    0xa4,al
  40f252:	cld    
  40f253:	aam    0xba
  40f255:	test   al,0xa8
  40f257:	or     eax,0x983af42e
  40f25c:	sub    eax,0x35a75fba
  40f261:	outs   dx,DWORD PTR ds:[esi]
  40f262:	and    eax,0x7fcd4398
  40f267:	sub    BYTE PTR [ebx+edi*2+0x20],0xc7
  40f26c:	mov    esi,0xd9fa8f7
  40f271:	jne    0x40f205
  40f273:	fucomi st,st(1)
  40f275:	add    eax,0x79ffa36c
  40f27a:	add    al,BYTE PTR [edx-0x62]
  40f27d:	adc    ebp,esp
  40f27f:	daa    
  40f280:	in     al,0x64
  40f282:	xchg   edx,eax
  40f283:	xchg   ebp,eax
  40f284:	into   
  40f285:	iret   
  40f286:	and    eax,0xe1422a2e
  40f28b:	cmp    eax,0x18c7c239
  40f290:	shl    BYTE PTR [bx+si+0x2f0b],1
  40f295:	pop    eax
  40f296:	stos   BYTE PTR es:[edi],al
  40f297:	jbe    0x40f2cb
  40f299:	jecxz  0x40f306
  40f29b:	mov    ch,0x40
  40f29d:	repnz clc 
  40f29f:	test   DWORD PTR [esi],ebp
  40f2a1:	mov    bl,0xd
  40f2a3:	dec    esi
  40f2a4:	mov    edi,0x2ee1e89c
  40f2a9:	mov    eax,ds:0xfc9805f8
  40f2ae:	sub    eax,0x832701e1
  40f2b3:	push   0x36
  40f2b5:	sub    ecx,DWORD PTR [ebp-0x33]
  40f2b8:	push   edi
  40f2b9:	fcomp  QWORD PTR [ebx+0x20adea2b]
  40f2bf:	add    eax,0x56f8b21a
  40f2c4:	stos   DWORD PTR es:[edi],eax
  40f2c5:	test   al,0xd8
  40f2c8:	push   eax
  40f2c9:	arpl   WORD PTR [ebx],di
  40f2cb:	dec    esp
  40f2cc:	iret   
  40f2cd:	mov    ebx,0x8b434294
  40f2d2:	repnz xor BYTE PTR [ecx+0x2c],ah
  40f2d6:	ins    DWORD PTR es:[edi],dx
  40f2d7:	out    dx,eax
  40f2d8:	add    eax,0x32b1471c
  40f2dd:	sar    DWORD PTR [edi+0x1e41880d],1
  40f2e3:	jge    0x40f35e
  40f2e5:	xchg   edx,eax
  40f2e6:	xchg   DWORD PTR [esi-0x42651376],esi
  40f2ec:	test   al,0xdc
  40f2ee:	xor    ebx,esp
  40f2f0:	push   esp
  40f2f1:	dec    edi
  40f2f2:	mov    ch,0x1d
  40f2f4:	cmp    BYTE PTR [ebp+edi*1+0x3271462e],dl
  40f2fb:	call   0xa7e64b95
  40f300:	out    dx,al
  40f301:	outs   dx,BYTE PTR ds:[esi]
  40f302:	sbb    ah,BYTE PTR [edi+ebp*2]
  40f305:	gs aad 0xb
  40f308:	push   cs
  40f309:	mov    ds:0xf1997936,al
  40f30e:	loopne 0x40f2af
  40f310:	fsubr  QWORD PTR [edi+0x79]
  40f313:	rcl    DWORD PTR [ebp+0x6f056595],cl
  40f319:	ret    
  40f31a:	(bad)  
  40f31b:	loop   0x40f30b
  40f31d:	mov    dl,ah
  40f31f:	popa   
  40f320:	stc    
  40f321:	inc    edi
  40f322:	lock xchg esi,edi
  40f325:	or     al,0x4e
  40f327:	stc    
  40f328:	cmp    eax,0x2aff50e4
  40f32d:	cmc    
  40f32e:	ror    BYTE PTR [ebp-0x4f9e072f],0x78
  40f335:	add    al,0xf0
  40f337:	mov    esi,DWORD PTR [ebx-0x21]
  40f33a:	gs pushfw 
  40f33d:	fisubr DWORD PTR [edx]
  40f33f:	jno    0x40f36d
  40f341:	fs call 0x36bdc807
  40f347:	jmp    0x40f37e
  40f349:	push   ebx
  40f34a:	jg     0x40f358
  40f34c:	sub    DWORD PTR [ebx+0x15ffd3e6],edi
  40f352:	imul   eax,DWORD PTR [ebx],0x40d81d7
  40f358:	inc    eax
  40f359:	inc    ebx
  40f35a:	add    BYTE PTR [eax+eiz*2],bl
  40f35d:	inc    ebx
  40f35e:	add    BYTE PTR [ebx],ah
  40f360:	ror    DWORD PTR [ecx-0x25e44bab],cl
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	mov    ch,BYTE PTR [ecx-0x3223c123]
  40f70d:	jl     0x40f78b
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	mov    ch,0xa0
  40f715:	int    0x54
  40f717:	push   ebx
  40f718:	lods   al,BYTE PTR ds:[esi]
  40f719:	mov    cl,0xca
  40f71b:	rcr    bh,cl
  40f71d:	(bad)  
  40f71e:	into   
  40f71f:	imul   ebp,DWORD PTR [ebx],0x5b4abc17
  40f725:	or     DWORD PTR [eax-0x79],esp
  40f728:	mov    al,0x3d
  40f72a:	rol    DWORD PTR [ebx+esi*2+0x4c2d09d4],cl
  40f731:	and    esi,DWORD PTR [ebx+0x5c9e73d7]
  40f737:	(bad)
  40f73a:	and    ecx,esi
  40f73c:	rol    BYTE PTR [esi],1
  40f73e:	sahf   
  40f73f:	sub    DWORD PTR [esi],esp
  40f741:	xor    edx,DWORD PTR [eax-0x6a596d37]
  40f747:	cmp    cl,0xc9
  40f74a:	push   0x67
  40f74c:	int3   
  40f74d:	xchg   ebp,eax
  40f74e:	sub    edi,DWORD PTR [esi+0x6a5d5281]
  40f754:	mov    eax,ds:0xf6f65007
  40f759:	and    esi,DWORD PTR [eax+0x42]
  40f75c:	(bad)  
  40f75d:	es js  0x40f755
  40f760:	or     DWORD PTR [edx+0x27],edi
  40f763:	arpl   cx,di
  40f765:	jmp    0x40f768
  40f767:	adc    bl,BYTE PTR [ecx]
  40f769:	dec    edi
  40f76a:	fidiv  WORD PTR [edi]
  40f76c:	shl    BYTE PTR [ecx-0x5401a798],0x40
  40f773:	mov    dh,0xf
  40f775:	xchg   edx,eax
  40f776:	popw   es
  40f778:	data16 (bad) 
  40f77a:	loope  0x40f7cc
  40f77c:	xchg   ebp,eax
  40f77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f77e:	pop    esp
  40f77f:	jne    0x40f79e
  40f781:	push   ecx
  40f782:	(bad)  
  40f783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f784:	jle    0x40f73a
  40f786:	sti    
  40f787:	push   ds
  40f788:	out    0x97,al
  40f78a:	cdq    
  40f78b:	(bad)  
  40f78c:	mov    ebp,DWORD PTR [eax-0x9]
  40f78f:	das    
  40f790:	jl     0x40f76e
  40f792:	xlat   BYTE PTR ds:[ebx]
  40f793:	fisub  DWORD PTR [ecx+eiz*1+0x4b]
  40f797:	adc    al,0x69
  40f799:	xchg   ebx,eax
  40f79a:	adc    dl,BYTE PTR [ebx]
  40f79c:	or     dh,BYTE PTR [ebx]
  40f79e:	push   ss
  40f79f:	out    dx,al
  40f7a0:	pop    ebp
  40f7a1:	and    eax,0xbed70c58
  40f7a6:	loope  0x40f7e9
  40f7a8:	xor    al,0xcd
  40f7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7ab:	cld    
  40f7ac:	inc    esi
  40f7ad:	fcomp  DWORD PTR [si]
  40f7b0:	adc    BYTE PTR [eax],al
  40f7b2:	jmp    0xf0b7a671
  40f7b7:	call   0x28ca:0xcdd48f82
  40f7be:	das    
  40f7bf:	test   al,0xbb
  40f7c1:	ins    DWORD PTR es:[edi],dx
  40f7c2:	popa   
  40f7c3:	iret   
  40f7c4:	xor    eax,0x8be15b06
  40f7c9:	dec    ebp
  40f7ca:	repz out 0xf6,eax
  40f7cd:	dec    edx
  40f7ce:	dec    ecx
  40f7cf:	xchg   ebx,eax
  40f7d0:	add    edi,DWORD PTR [edi-0x49bb5cfd]
  40f7d6:	das    
  40f7d7:	outs   dx,DWORD PTR ds:[esi]
  40f7d8:	or     bh,BYTE PTR [esi]
  40f7da:	jmp    0x1876:0x1f8f9894
  40f7e1:	lock push esi
  40f7e3:	xlat   BYTE PTR ds:[ebx]
  40f7e4:	int3   
  40f7e5:	ja     0x40f799
  40f7e7:	outs   dx,BYTE PTR ds:[esi]
  40f7e8:	add    DWORD PTR ss:[esi-0x58],ebx
  40f7ec:	dec    eax
  40f7ed:	retf   0xf0ce
  40f7f0:	in     eax,0xe5
  40f7f2:	test   al,0x49
  40f7f4:	bswap  ebx
  40f7f6:	inc    edx
  40f7f7:	mov    eax,DWORD PTR [edx+0xbf16bca]
  40f7fd:	mov    ebp,0x80ad4fa8
  40f802:	int    0x63
  40f804:	aas    
  40f805:	xor    ch,dh
  40f807:	mov    ah,0xae
  40f809:	ror    BYTE PTR [esi],1
  40f80b:	xor    eax,0xd8fe9c60
  40f810:	sti    
  40f811:	aaa    
  40f812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f813:	mov    cl,0x99
  40f815:	(bad)  
  40f816:	aas    
  40f817:	(bad)  
  40f818:	(bad)  
  40f819:	retf   0x4767
  40f81c:	out    dx,al
  40f81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f81f:	and    BYTE PTR [eax+0x55],cl
  40f822:	push   edx
  40f823:	fadd   st(0),st
  40f825:	mov    ds:0x1677f43c,al
  40f82a:	addr16 adc al,0xf9
  40f82d:	sbb    al,BYTE PTR [esi+0x299da837]
  40f833:	xchg   edx,eax
  40f834:	ficomp DWORD PTR [edi+eax*1-0x17]
  40f838:	sub    al,0x16
  40f83a:	mov    ebp,0xe4b35f16
  40f83f:	es jg  0x40f8ac
  40f842:	xchg   edi,eax
  40f843:	jecxz  0x40f7ed
  40f845:	add    BYTE PTR [ecx],al
  40f847:	jmp    0x40f811
  40f849:	fs jg  0x40f7fa
  40f84c:	and    DWORD PTR [ebx+0x3e029833],0xffffff8d
  40f853:	vprotq xmm2,xmm6,0x93
  40f859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f85a:	inc    eax
  40f85b:	or     DWORD PTR [eax],0x76
  40f85e:	add    edx,DWORD PTR ds:0x2902c5d7
  40f864:	jmp    0xe68cacce
  40f869:	dec    ebx
  40f86a:	dec    ebx
  40f86b:	cmp    al,0x64
  40f86d:	jmp    0x40f7fb
  40f86f:	jmp    0x40f7f4
  40f871:	aad    0xea
  40f873:	fimul  DWORD PTR gs:[edi+edi*1-0x4c]
  40f878:	dec    eax
  40f879:	sbb    al,0x20
  40f87b:	out    0xd5,eax
  40f87d:	or     al,0x93
  40f87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f880:	or     bh,BYTE PTR [eax+0x1a]
  40f883:	out    0xd0,al
  40f885:	push   ebp
  40f886:	push   ss
  40f887:	fwait
  40f888:	ret    
  40f889:	mov    bl,0xb4
  40f88b:	sar    DWORD PTR [eax],cl
  40f88d:	inc    ebx
  40f88e:	xchg   edx,eax
  40f88f:	cmp    ch,ah
  40f891:	lahf   
  40f892:	xor    ebp,DWORD PTR [ecx+0x7e3496a1]
  40f898:	mov    eax,0xe9d670d7
  40f89d:	push   edx
  40f89e:	aam    0x55
  40f8a0:	mov    esp,0x4baca925
  40f8a5:	call   0xa8e3ecaa
  40f8aa:	adc    dh,BYTE PTR [esi]
  40f8ac:	cwde   
  40f8ad:	mov    edx,0x290446fd
  40f8b2:	mov    BYTE PTR [ebx+0x646ff4a2],dh
  40f8b8:	fsub   DWORD PTR [eax-0x3e]
  40f8bb:	outs   dx,BYTE PTR ds:[esi]
  40f8bc:	mov    ch,0xb4
  40f8be:	aaa    
  40f8bf:	jp     0x40f932
  40f8c1:	mov    ch,0x8b
  40f8c3:	or     BYTE PTR [ebp+0x40],cl
  40f8c6:	push   eax
  40f8c7:	add    al,0x80
  40f8c9:	xor    al,0xaf
  40f8cb:	div    ah
  40f8cd:	stos   BYTE PTR es:[edi],al
  40f8ce:	out    0x8a,eax
  40f8d0:	or     eax,0xfda2474b
  40f8d5:	adc    DWORD PTR [edi+0x68b020b7],eax
  40f8db:	loope  0x40f8a9
  40f8dd:	jns    0x40f903
  40f8df:	ret    
  40f8e0:	pop    es
  40f8e1:	dec    eax
  40f8e2:	int    0x21
  40f8e4:	pop    ss
  40f8e5:	or     bh,BYTE PTR [ebx+0x6a]
  40f8e8:	cmp    esi,ebx
  40f8ea:	jmp    DWORD PTR [ebp-0x77]
  40f8ed:	add    BYTE PTR [ebx-0x2f1fbd6a],bl
  40f8f3:	mov    ebx,0x4f3b4a92
  40f8f8:	fild   WORD PTR [esi]
  40f8fa:	mov    eax,0x4a0faac5
  40f8ff:	add    DWORD PTR [edi-0x2f833861],edx
  40f905:	and    dh,BYTE PTR [edi+0x1]
  40f908:	pop    esp
  40f909:	gs in  al,dx
  40f90b:	sbb    DWORD PTR [ebp+0x4244e01e],eax
  40f911:	sbb    esi,DWORD PTR [edx-0x2144b1be]
  40f917:	push   esi
  40f918:	mov    ebx,0xcb4ad825
  40f91d:	adc    DWORD PTR [edx+edx*2-0x56],edi
  40f921:	sub    ebx,ebp
  40f923:	add    dh,BYTE PTR [ebx+0x70]
  40f926:	ja     0x40f99a
  40f928:	inc    edi
  40f929:	sti    
  40f92a:	or     al,bl
  40f92c:	popf   
  40f92d:	mov    esi,0x892ca6c
  40f932:	ins    BYTE PTR es:[edi],dx
  40f933:	xor    eax,0x41fcb62a
  40f938:	adc    BYTE PTR [eax],0x4f
  40f93b:	add    eax,0x31727a24
  40f940:	push   ebx
  40f941:	outs   dx,BYTE PTR fs:[esi]
  40f943:	pushf  
  40f944:	inc    esi
  40f945:	test   DWORD PTR [ecx-0x6d],0x3c79d6e1
  40f94c:	in     eax,dx
  40f94d:	pop    eax
  40f94e:	popa   
  40f94f:	out    dx,eax
  40f950:	dec    ebp
  40f951:	push   ebp
  40f952:	sbb    bh,ch
  40f954:	shl    BYTE PTR ds:0x248f6764,1
  40f95a:	(bad)  
  40f95b:	leave  
  40f95c:	vpmuludq xmm3,xmm4,XMMWORD PTR [edi]
  40f960:	imul   edx,DWORD PTR [ebx-0x5b],0x59
  40f964:	jo     0x40f9c1
  40f966:	sbb    al,0x2c
  40f968:	mov    esp,edx
  40f96a:	mov    ds:0xaf404c6f,eax
  40f96f:	aam    0x7d
  40f971:	mov    esi,0xc8a79b9
  40f976:	sub    DWORD PTR [esi-0x1a324fd7],eax
  40f97c:	lock int3 
  40f97e:	ret    
  40f97f:	pop    ds
  40f980:	sbb    al,0xf5
  40f982:	mov    ecx,0x7c77864f
  40f987:	add    eax,0x80e4fbf3
  40f98c:	pop    ds
  40f98d:	out    0xf5,al
  40f98f:	scas   eax,DWORD PTR es:[edi]
  40f990:	xchg   esi,eax
  40f991:	xchg   DWORD PTR [ebp+0xa43ff5f],esi
  40f997:	mov    dl,0xbb
  40f999:	(bad)  
  40f99a:	daa    
  40f99b:	shl    BYTE PTR [ecx+0x14],cl
  40f99e:	rcr    BYTE PTR [edx+0x65],1
  40f9a1:	pusha  
  40f9a2:	scas   al,BYTE PTR es:[edi]
  40f9a3:	sub    eax,0x1d5c2e7f
  40f9a8:	pop    ds
  40f9a9:	mov    esi,0xe51f0f7c
  40f9ae:	mov    ah,0x52
  40f9b0:	gs xor eax,esp
  40f9b3:	dec    esi
  40f9b4:	repz jo 0x40fa35
  40f9b7:	push   esi
  40f9b8:	jnp    0x40f9d8
  40f9ba:	scas   eax,DWORD PTR es:[edi]
  40f9bb:	lock ins BYTE PTR es:[edi],dx
  40f9bd:	ja     0x40f986
  40f9bf:	xchg   ecx,eax
  40f9c0:	xor    BYTE PTR [edi],0x9f
  40f9c3:	xchg   edi,eax
  40f9c4:	jle    0x40fa1a
  40f9c6:	enter  0xa42b,0x15
  40f9ca:	ins    BYTE PTR es:[edi],dx
  40f9cb:	(bad)  
  40f9cc:	push   edi
  40f9cd:	sar    BYTE PTR [eax],0xb3
  40f9d0:	sahf   
  40f9d1:	xor    bl,BYTE PTR [edi+edi*8]
  40f9d4:	out    dx,al
  40f9d5:	pusha  
  40f9d6:	sbb    bh,BYTE PTR [ecx-0x5aaad1dc]
  40f9dc:	sti    
  40f9dd:	dec    edi
  40f9de:	sub    DWORD PTR [esi],esi
  40f9e0:	mov    eax,0x1351fd28
  40f9e5:	les    edi,FWORD PTR [eax]
  40f9e7:	xchg   ecx,eax
  40f9e8:	sub    al,0xf3
  40f9ea:	cmovbe eax,DWORD PTR [ebp+0x7b5a57a4]
  40f9f1:	add    BYTE PTR [ecx],ch
  40f9f3:	cmp    edx,DWORD PTR [esi]
  40f9f5:	push   cs
  40f9f6:	adc    eax,0x3f3aecda
  40f9fb:	shl    BYTE PTR [ebp-0x2a30a5f4],0xff
  40fa02:	sar    BYTE PTR [esi],cl
  40fa04:	push   ecx
  40fa05:	lds    ecx,FWORD PTR [ebp+0x6ed69a07]
  40fa0b:	dec    ebp
  40fa0c:	aaa    
  40fa0d:	ins    DWORD PTR es:[edi],dx
  40fa0e:	adc    al,0xdf
  40fa10:	push   edi
  40fa11:	inc    edx
  40fa12:	and    edx,0x4b
  40fa15:	daa    
  40fa16:	popa   
  40fa17:	imul   ebp,DWORD PTR [edx-0x62a034f3],0x3b
  40fa1e:	dec    ecx
  40fa1f:	cmp    DWORD PTR [eax+0x5f],esp
  40fa22:	dec    ecx
  40fa23:	imul   ecx,DWORD PTR [edx-0x182c7222],0x12626a81
  40fa2d:	fmul   QWORD PTR [eax+ebx*2-0x3f]
  40fa31:	sub    edi,DWORD PTR [esi+edx*2-0x719dbedc]
  40fa38:	mov    ebp,0x75850495
  40fa3d:	cmp    eax,0x28c6fe2c
  40fa42:	inc    eax
  40fa43:	test   DWORD PTR [ebp-0x10eb3e47],esi
  40fa49:	jecxz  0x40fa89
  40fa4b:	jmp    0x40fa95
  40fa4d:	fdivr  st(0),st
  40fa4f:	or     al,0xb7
  40fa51:	(bad)  
  40fa52:	and    cl,BYTE PTR [esi]
  40fa54:	pop    ebx
  40fa55:	xlat   BYTE PTR ds:[ebx]
  40fa56:	(bad)  
  40fa57:	xchg   edi,eax
  40fa58:	pushf  
  40fa59:	ret    0x5d1a
  40fa5c:	pop    edi
  40fa5d:	daa    
  40fa5e:	push   ecx
  40fa5f:	dec    eax
  40fa60:	jmp    0x63d87af4
  40fa65:	mov    cl,dh
  40fa67:	fisttp WORD PTR [ebx]
  40fa6a:	adc    al,dl
  40fa6c:	jl     0x40fa38
  40fa6e:	ss sahf 
  40fa70:	pop    ebx
  40fa71:	push   cs
  40fa72:	inc    edx
  40fa73:	mov    edi,0x2dea792f
  40fa78:	and    bl,al
  40fa7a:	pop    ecx
  40fa7b:	sub    al,0x72
  40fa7d:	and    eax,0x12a45fbb
  40fa82:	(bad)  
  40fa83:	stc    
  40fa84:	fldenv [ecx]
  40fa86:	imul   edx,DWORD PTR [edi-0x1a],0xffffffe6
  40fa8a:	jbe    0x40fa2b
  40fa8c:	push   ss
  40fa8d:	cmp    DWORD PTR [esi+0x687430cd],ebx
  40fa93:	test   DWORD PTR [edx-0x4f],edx
  40fa96:	enter  0x472e,0x3f
  40fa9a:	ins    DWORD PTR es:[edi],dx
  40fa9b:	jmp    0x40fa90
  40fa9d:	mov    esi,0x1973aac9
  40faa2:	push   edx
  40faa3:	into   
  40faa4:	jmp    0x40fb08
  40faa6:	and    bl,BYTE PTR [esi-0x71ab8d0c]
  40faac:	fyl2x  
  40faae:	addr16 jmp 0x233c:0x3c2cd3a5
  40fab6:	mov    ebx,0x20b50249
  40fabb:	sbb    ebp,DWORD PTR [eax+0xa]
  40fabe:	popf   
  40fabf:	jmp    0x40fab2
  40fac1:	aas    
  40fac2:	outs   dx,BYTE PTR ds:[esi]
  40fac3:	(bad)  
  40fac4:	test   al,0xa4
  40fac6:	shl    DWORD PTR [esi*1-0xe13f77b],0xbc
  40face:	push   esi
  40facf:	mov    dh,BYTE PTR [ecx]
  40fad1:	sub    ah,BYTE PTR [ecx+0x65524e91]
  40fad7:	outs   dx,BYTE PTR ds:[esi]
  40fad8:	add    ecx,DWORD PTR [edx+0x3986b3ff]
  40fade:	arpl   bx,bx
  40fae0:	inc    edx
  40fae1:	sar    BYTE PTR [ecx+ecx*1],cl
  40fae4:	cmp    esp,esp
  40fae6:	je     0x40faf1
  40fae8:	mov    al,ds:0x9ba0856a
  40faed:	mov    al,0x66
  40faef:	mov    bl,BYTE PTR [esi+0x4bc79ca9]
  40faf5:	adc    DWORD PTR [eax-0xd],esp
  40faf8:	nop
  40faf9:	shr    BYTE PTR [eax+ebx*4+0x40],cl
  40fafd:	scas   al,BYTE PTR es:[edi]
  40fafe:	leave  
  40faff:	jmp    0xc9f4:0x457f8be0
  40fb06:	mov    cl,0xad
  40fb08:	push   cs
  40fb09:	(bad)  
  40fb0a:	lock in eax,0x55
  40fb0d:	popf   
  40fb0e:	add    BYTE PTR [esi-0x15101c8a],bh
  40fb14:	push   esp
  40fb15:	adc    eax,0x7ab3e9f5
  40fb1a:	push   ebx
  40fb1b:	mov    WORD PTR ds:[edi-0x58],es
  40fb1f:	daa    
  40fb20:	jg     0x40fab4
  40fb22:	sub    al,BYTE PTR [eax]
  40fb24:	pop    es
  40fb25:	in     eax,0x64
  40fb27:	(bad)  
  40fb29:	inc    eax
  40fb2a:	mov    al,0x54
  40fb2c:	inc    ebx
  40fb2d:	push   esi
  40fb2e:	shr    BYTE PTR [esi-0x1f],1
  40fb31:	mov    edx,DWORD PTR ss:[ecx-0x327326f2]
  40fb38:	or     al,bh
  40fb3a:	(bad)  
  40fb3b:	fisubr WORD PTR [ebx+0x5737580a]
  40fb41:	mov    ch,BYTE PTR [edx-0xccedab0]
  40fb47:	mov    al,ds:0x47009300
  40fb4c:	mov    eax,ds:0xff31e6b1
  40fb51:	clc    
  40fb52:	mov    eax,ds:0x8eb82df1
  40fb57:	test   al,0x95
  40fb59:	neg    BYTE PTR [edi-0x5c]
  40fb5c:	pushf  
  40fb5d:	loope  0x40fbaa
  40fb5f:	push   0x779e243e
  40fb64:	cs jp  0x40fb21
  40fb67:	jb     0x40fb4a
  40fb69:	mov    ecx,DWORD PTR [bp+di-0x4181]
  40fb6e:	and    esp,DWORD PTR [eax+ebx*2-0x76d70286]
  40fb75:	jbe    0x40fbea
  40fb77:	push   ebx
  40fb78:	ret    
  40fb79:	sbb    DWORD PTR [eax-0xa90a733],ecx
  40fb7f:	lods   al,BYTE PTR ds:[esi]
  40fb80:	(bad)  
  40fb81:	sub    BYTE PTR [ebp-0x4f],al
  40fb84:	jge    0x40fbcd
  40fb86:	adc    BYTE PTR [esi-0x5f5b105c],al
  40fb8c:	enter  0xd0fa,0xc4
  40fb90:	call   0xf0e5:0xec9aefd0
  40fb97:	mov    BYTE PTR [esp+ebx*4],0x34
  40fb9b:	dec    edi
  40fb9c:	fstp   QWORD PTR [edi-0x35]
  40fb9f:	cli    
  40fba0:	stos   DWORD PTR es:[edi],eax
  40fba1:	push   edx
  40fba2:	call   0xe24f:0x1a7d827b
  40fba9:	pop    ebx
  40fbaa:	inc    eax
  40fbab:	test   dl,ch
  40fbad:	sub    al,0xcd
  40fbaf:	xchg   ecx,eax
  40fbb0:	addr16 mov ecx,0x9e9f7702
  40fbb6:	dec    ebx
  40fbb7:	push   eax
  40fbb8:	retf   
  40fbb9:	(bad)  [eax+edi*4+0x2d752343]
  40fbc0:	shr    DWORD PTR [edi-0x4ecc059b],cl
  40fbc6:	lfence 
  40fbc9:	data16 mov dh,0x64
  40fbcc:	call   0xad89:0x3b535563
  40fbd3:	cmp    al,0x6b
  40fbd5:	pop    ecx
  40fbd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd7:	add    esp,DWORD PTR [edx+0x538aaaa2]
  40fbdd:	and    ebp,DWORD PTR [ebp+0x1f]
  40fbe0:	out    0x1b,al
  40fbe2:	aam    0xaf
  40fbe4:	in     al,0x7f
  40fbe6:	mov    edx,0x87272d27
  40fbeb:	pop    ebx
  40fbec:	jmp    0xa214:0xe447c357
  40fbf3:	(bad)  ds:0x9300c049
  40fbf9:	or     DWORD PTR [eax],esp
  40fbfb:	jp     0x40fc45
  40fbfd:	jle    0x40fc1e
  40fbff:	dec    ebx
  40fc00:	mov    cs,WORD PTR [eax+0x41d5b62f]
  40fc06:	std    
  40fc07:	je     0x40fba5
  40fc09:	mov    edi,0x7098ee9a
  40fc0e:	cli    
  40fc0f:	mov    al,ds:0x5b9b5d76
  40fc14:	popf   
  40fc15:	jge    0x40fc1e
  40fc17:	and    al,0xdc
  40fc19:	xchg   edi,eax
  40fc1a:	into   
  40fc1b:	sbb    DWORD PTR [ebx-0x48],edx
  40fc1e:	nop
  40fc1f:	loope  0x40fc17
  40fc21:	stos   DWORD PTR es:[edi],eax
  40fc22:	fcmovu st,st(3)
  40fc24:	int3   
  40fc25:	sub    eax,0xba5e30d
  40fc2a:	xor    BYTE PTR [edi+eiz*4],cl
  40fc2d:	loope  0x40fbe5
  40fc2f:	clc    
  40fc30:	push   ecx
  40fc31:	(bad)  
  40fc32:	int3   
  40fc33:	sar    ebp,cl
  40fc35:	fistp  DWORD PTR [ecx]
  40fc37:	repnz arpl WORD PTR [eax-0x4ec90efd],sp
  40fc3e:	jb     0x40fc2a
  40fc40:	sub    al,0xf8
  40fc42:	lods   al,BYTE PTR ds:[esi]
  40fc43:	inc    esp
  40fc44:	mov    dl,0xb
  40fc46:	shr    esi,1
  40fc48:	in     eax,0xec
  40fc4a:	mov    ds:0xc4cba57e,al
  40fc4f:	mov    ds:0xf1da02cc,eax
  40fc54:	test   ah,ah
  40fc56:	scas   eax,DWORD PTR es:[edi]
  40fc57:	push   0xe9c309e2
  40fc5c:	mov    esp,0x400f025d
  40fc61:	inc    ebp
  40fc62:	ret    
  40fc63:	pop    ss
  40fc64:	jnp    0x40fbea
  40fc66:	fnstcw WORD PTR [ecx+eax*8-0x7e]
  40fc6a:	cmp    eax,0x3a51365
  40fc6f:	jp     0x40fc6b
  40fc71:	out    0x20,eax
  40fc73:	popf   
  40fc74:	add    al,0x84
  40fc76:	add    al,0xb8
  40fc78:	inc    esi
  40fc79:	icebp  
  40fc7a:	ret    0xf93b
  40fc7d:	mov    fs,WORD PTR [esi-0x7ca55ef6]
  40fc83:	sub    DWORD PTR ds:0x46b8b385,ebp
  40fc89:	fist   WORD PTR [ebp+0x105562d0]
  40fc8f:	pop    ebx
  40fc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc91:	mov    esp,0x3c66ebaf
  40fc96:	stos   BYTE PTR es:[edi],al
  40fc97:	icebp  
  40fc98:	fdiv   QWORD PTR [edx+ecx*2]
  40fc9b:	repnz mov esp,0x10807b21
  40fca1:	sbb    al,0xe
  40fca3:	pusha  
  40fca4:	stc    
  40fca5:	cld    
  40fca6:	dec    edi
  40fca7:	add    BYTE PTR [edx],0x1f
  40fcaa:	or     bl,BYTE PTR [edi]
  40fcac:	cmc    
  40fcad:	add    BYTE PTR [ecx+0x4f3619b8],bh
  40fcb3:	int    0x62
  40fcb5:	cmp    ch,bl
  40fcb7:	fisub  DWORD PTR [edx-0x154b2bd5]
  40fcbd:	mov    ds:0xba3bf84f,eax
  40fcc2:	adc    BYTE PTR [esi],0xc2
  40fcc5:	mov    bl,dh
  40fcc7:	gs sahf 
  40fcc9:	add    eax,0xf9d83cf8
  40fcce:	in     al,dx
  40fccf:	into   
  40fcd0:	stos   BYTE PTR es:[edi],al
  40fcd1:	sub    edi,esp
  40fcd3:	rcr    BYTE PTR [edi+edx*8-0x6d],1
  40fcd7:	adc    al,0xf2
  40fcd9:	adc    eax,0x6de8af5
  40fcde:	pop    esp
  40fcdf:	push   edi
  40fce0:	sub    al,0xb5
  40fce2:	mov    edx,es
  40fce4:	sahf   
  40fce5:	add    DWORD PTR [edx+0xc673689],0x40554807
  40fcef:	pop    ss
  40fcf0:	dec    ebp
  40fcf1:	(bad)  
  40fcf2:	push   esp
  40fcf3:	cmp    eax,0xe85aefbc
  40fcf8:	les    esi,FWORD PTR [ebx]
  40fcfa:	dec    BYTE PTR [edi]
  40fcfc:	cmc    
  40fcfd:	xor    ebp,0xffffffb4
  40fd00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd02:	popfw  
  40fd04:	push   eax
  40fd05:	repnz xor eax,0xde98c55c
  40fd0b:	fsubr  QWORD PTR [edi]
  40fd0d:	scas   al,BYTE PTR es:[edi]
  40fd0e:	test   bh,ah
  40fd10:	pop    esi
  40fd11:	jmp    0x40fcb0
  40fd13:	mov    BYTE PTR [ecx],bl
  40fd15:	mov    bh,0xeb
  40fd17:	arpl   WORD PTR [esi+0x34591878],dx
  40fd1d:	xor    dh,BYTE PTR [ecx]
  40fd1f:	shr    BYTE PTR gs:[esi+0x1f],0xe5
  40fd24:	repnz add ecx,DWORD PTR [esi-0xd2cc6da]
  40fd2b:	ins    BYTE PTR es:[edi],dx
  40fd2c:	imul   eax,esi,0x6f
  40fd2f:	pop    ds
  40fd30:	mov    esi,0x269485af
  40fd35:	mov    al,0xee
  40fd37:	mov    al,0xce
  40fd39:	retf   
  40fd3a:	add    al,0xbe
  40fd3c:	test   eax,0x18183c5c
  40fd41:	in     eax,dx
  40fd42:	add    cl,BYTE PTR [eax]
  40fd44:	xor    al,0x39
  40fd46:	cld    
  40fd47:	sbb    BYTE PTR [edi],ah
  40fd49:	mov    esi,DWORD PTR [ecx]
  40fd4b:	lds    ebp,FWORD PTR [ecx]
  40fd4d:	lds    eax,FWORD PTR [edx+0x17648a4]
  40fd53:	lods   eax,DWORD PTR ds:[esi]
  40fd54:	jge    0x40fce9
  40fd56:	cmp    al,0xf7
  40fd58:	aas    
  40fd59:	pop    ebp
  40fd5a:	lock fcmove st,st(1)
  40fd5d:	les    edx,FWORD PTR [esi+0x6bd5d943]
  40fd63:	fistp  WORD PTR [edi]
  40fd65:	xchg   ebp,eax
  40fd66:	cmp    eax,0x326a4889
  40fd6b:	in     eax,dx
  40fd6c:	jbe    0x40fd91
  40fd6e:	xor    BYTE PTR [ebx-0x4b6d95d8],ch
  40fd74:	cs pop ebp
  40fd76:	outs   dx,DWORD PTR ds:[esi]
  40fd77:	aad    0x4
  40fd79:	xchg   DWORD PTR [ebx-0x5e923cd5],eax
  40fd7f:	pop    ebp
  40fd80:	push   edx
  40fd81:	sbb    ch,BYTE PTR [ebp+0x1b490137]
  40fd87:	call   0xc353:0x76394302
  40fd8e:	leave  
  40fd8f:	adc    cl,BYTE PTR [bx]
  40fd92:	jmp    0x9183:0xbec84e47
  40fd99:	and    dh,BYTE PTR [edx-0x27c63d2]
  40fd9f:	or     DWORD PTR [eax+0x27],eax
  40fda2:	xor    al,0xe1
  40fda4:	outs   dx,BYTE PTR ds:[esi]
  40fda5:	mov    ds:0xa2ae6323,al
  40fdaa:	mov    ecx,0xe39173b4
  40fdaf:	loopne 0x40fe0f
  40fdb1:	ds pop ds
  40fdb3:	pop    ebx
  40fdb4:	iret   
  40fdb5:	aaa    
  40fdb6:	stos   DWORD PTR es:[edi],eax
  40fdb7:	dec    ebp
  40fdb8:	mov    al,ds:0xb92ef0bb
  40fdbd:	xchg   edx,eax
  40fdbe:	mov    eax,ds:0x7600205e
  40fdc3:	fdiv   DWORD PTR [esi-0x222a2404]
  40fdc9:	test   al,0xa3
  40fdcb:	xor    bh,ah
  40fdcd:	sub    BYTE PTR [ebp-0x57],al
  40fdd0:	test   al,0x7f
  40fdd2:	out    dx,al
  40fdd3:	push   ax
  40fdd5:	pop    ecx
  40fdd6:	pop    esi
  40fdd7:	fidivr DWORD PTR [ebp-0x3eceae6]
  40fddd:	rcr    DWORD PTR [ebp-0x4ee2eb8],1
  40fde3:	ds ins BYTE PTR es:[edi],dx
  40fde5:	scas   al,BYTE PTR es:[edi]
  40fde6:	sbb    ah,dh
  40fde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde9:	(bad)  
  40fdea:	sub    al,0x8b
  40fdec:	jnp    0x40fdfa
  40fdee:	adc    DWORD PTR [edi],eax
  40fdf0:	dec    ebx
  40fdf1:	loopne 0x40fe29
  40fdf3:	or     al,0xf0
  40fdf5:	xchg   edx,eax
  40fdf6:	shl    DWORD PTR [esi],0x5a
  40fdf9:	sbb    eax,ecx
  40fdfb:	rcl    BYTE PTR [ebp+0x29],0xf8
  40fdff:	xchg   ecx,eax
  40fe00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe01:	cmc    
  40fe02:	push   ecx
  40fe03:	test   BYTE PTR [edx+eiz*2+0x34],0xc
  40fe08:	inc    esi
  40fe09:	jle    0x40fda9
  40fe0b:	outs   dx,BYTE PTR ds:[esi]
  40fe0c:	aad    0x3f
  40fe0e:	push   esi
  40fe0f:	mov    ebp,0x6ede331e
  40fe14:	xchg   esi,eax
  40fe15:	mov    dh,dl
  40fe17:	jecxz  0x40fde0
  40fe19:	(bad)  
  40fe1a:	in     eax,dx
  40fe1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe1c:	sub    eax,0x7e688f9b
  40fe21:	pop    eax
  40fe22:	jge    0x40fe50
  40fe24:	sbb    DWORD PTR [esi+0x53ad7bb8],ecx
  40fe2a:	push   ecx
  40fe2b:	test   al,0x58
  40fe2d:	pop    esp
  40fe2e:	mov    ch,0xfc
  40fe30:	xchg   esi,eax
  40fe31:	icebp  
  40fe32:	outs   dx,BYTE PTR ds:[esi]
  40fe33:	pop    ss
  40fe34:	popa   
  40fe35:	(bad)  
  40fe36:	jmp    0x40fe27
  40fe38:	pop    ds
  40fe39:	sti    
  40fe3a:	pop    edi
  40fe3b:	scas   eax,DWORD PTR es:[di]
  40fe3d:	(bad)  
  40fe3f:	mov    eax,0xe3686287
  40fe44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe45:	test   eax,0x8e3238e2
  40fe4a:	adc    al,0x51
  40fe4c:	test   DWORD PTR [edi],ecx
  40fe4e:	dec    eax
  40fe4f:	int    0xe6
  40fe51:	mov    ebp,0x61324c2f
  40fe56:	scas   al,BYTE PTR es:[edi]
  40fe57:	adc    eax,0xb8bf9696
  40fe5c:	inc    ecx
  40fe5d:	mov    edi,DWORD PTR [ebx-0x2c61d129]
  40fe63:	xchg   edx,eax
  40fe64:	jmp    0xbdc81604
  40fe69:	mov    dl,0x9f
  40fe6b:	pop    ds
  40fe6c:	jmp    0x40fe55
  40fe6e:	sahf   
  40fe6f:	in     al,0xfd
  40fe71:	add    DWORD PTR [ebp+0x71],eax
  40fe74:	jge    0x40fe5b
  40fe76:	test   BYTE PTR [eax+0x3518f906],bl
  40fe7c:	inc    esp
  40fe7d:	idiv   BYTE PTR [edx+0x6e8c07c9]
  40fe83:	sub    ebp,esp
  40fe85:	or     eax,0xb8c22bca
  40fe8a:	lds    eax,FWORD PTR [eax]
  40fe8c:	inc    esp
  40fe8d:	adc    eax,DWORD PTR [edi-0x1bbba500]
  40fe93:	cld    
  40fe94:	jno    0x40fe86
  40fe96:	mov    cs,WORD PTR [edi]
  40fe98:	jle    0x40fe71
  40fe9a:	sbb    eax,0x19db4d49
  40fe9f:	and    al,0xf9
  40fea1:	out    0xc3,al
  40fea3:	adc    eax,0x9c893a6
  40fea8:	jecxz  0x40fed8
  40feaa:	jbe    0x40fe94
  40feac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fead:	adc    ebx,DWORD PTR cs:[ebx+0xe88874f]
  40feb4:	inc    ebp
  40feb5:	adc    eax,DWORD PTR [ebp+0x4d]
  40feb8:	sbb    DWORD PTR [edx],eax
  40feba:	pop    edi
  40febb:	mov    esi,0xc6ff0944
  40fec0:	jmp    0x40fed6
  40fec2:	or     bl,BYTE PTR [esi+0x14f8e39c]
  40fec8:	scas   eax,DWORD PTR es:[edi]
  40fec9:	jl     0x40fe5e
  40fecb:	call   0x173a:0x3c18b6dc
  40fed2:	mov    ebp,0x333c4eb8
  40fed7:	ds enter 0x19b0,0x35
  40fedc:	ror    DWORD PTR [esi],cl
  40fede:	jne    0x40ff0b
  40fee0:	(bad)  
  40fee1:	push   cs
  40fee2:	sahf   
  40fee3:	adc    al,dh
  40fee5:	push   ebp
  40fee6:	iret   
  40fee7:	add    BYTE PTR [eax+0x3c],bl
  40feea:	or     BYTE PTR [edx],bl
  40feec:	jl     0x40ff57
  40feee:	ins    BYTE PTR es:[edi],dx
  40feef:	stc    
  40fef0:	sub    ebp,DWORD PTR [ecx+0x22369219]
  40fef6:	and    BYTE PTR [ebx-0x3d],cl
  40fef9:	call   0x58898f56
  40fefe:	repnz adc esi,DWORD PTR [ebx]
  40ff01:	add    eax,DWORD PTR [ebp-0x753fee08]
  40ff07:	and    al,BYTE PTR [esi+edx*8-0x44]
  40ff0b:	fwait
  40ff0c:	dec    ebx
  40ff0d:	or     DWORD PTR [edx+0x11],esp
  40ff10:	je     0x40ff22
  40ff12:	mov    eax,esp
  40ff14:	inc    ecx
  40ff15:	pop    esi
  40ff16:	and    BYTE PTR [edx-0x13585a4a],dl
  40ff1c:	xor    bh,BYTE PTR [ebp+esi*4+0x6a0c7f99]
  40ff23:	mov    gs,WORD PTR [esi]
  40ff25:	ss out 0xd3,eax
  40ff28:	mov    ah,0x57
  40ff2a:	or     ebp,DWORD PTR [edx-0x1e]
  40ff2d:	xor    ebx,DWORD PTR [eax+ebp*8]
  40ff30:	jae    0x40ff7a
  40ff32:	imul   eax,DWORD PTR [eax+edi*1+0x5c],0xad32c1c5
  40ff3a:	or     ah,ah
  40ff3c:	adc    DWORD PTR [ebx+0x69],ecx
  40ff3f:	cs inc edi
  40ff41:	nop
  40ff42:	bound  ebp,QWORD PTR [ecx+0xd]
  40ff45:	xor    eax,0xaebb33f4
  40ff4a:	loop   0x40ffb8
  40ff4c:	and    BYTE PTR [edx],bl
  40ff4e:	(bad)  [edx-0x1c962a5e]
  40ff54:	mov    edx,0x6053ce5c
  40ff59:	sub    ecx,DWORD PTR [esi]
  40ff5b:	lea    eax,[esi+0x28]
  40ff5e:	lea    esp,[ebx-0x181013a5]
  40ff64:	outs   dx,DWORD PTR ds:[esi]
  40ff65:	xchg   edi,eax
  40ff66:	pop    edi
  40ff67:	data16 aad 0x47
  40ff6a:	shl    ebx,0xf4
  40ff6d:	add    BYTE PTR [ebx-0x66],cl
  40ff70:	mov    dl,BYTE PTR [ebx]
  40ff72:	or     BYTE PTR [edx],bl
  40ff74:	mov    dh,0xe2
  40ff76:	sub    eax,0x2b830de0
  40ff7b:	inc    edi
  40ff7c:	mov    bl,0x4d
  40ff7e:	sub    BYTE PTR [edi+0x1a],dl
  40ff81:	push   si
  40ff83:	dec    eax
  40ff84:	cmp    BYTE PTR [eax],bh
  40ff86:	jo     0x40ff57
  40ff88:	scas   eax,DWORD PTR es:[edi]
  40ff89:	and    al,dh
  40ff8b:	bound  esp,QWORD PTR [edi+0x7aaa2de2]
  40ff91:	lahf   
  40ff92:	(bad)  
  40ff94:	loope  0x40ffa3
  40ff96:	out    dx,eax
  40ff97:	add    BYTE PTR [edx+0x44],0x26
  40ff9b:	es scas al,BYTE PTR es:[edi]
  40ff9d:	fdiv   DWORD PTR [eax+0x12]
  40ffa0:	repz icebp 
  40ffa2:	sbb    ebp,ecx
  40ffa4:	sub    DWORD PTR [edx-0x1b],edi
  40ffa7:	jae    0x40ff9b
  40ffa9:	es dec eax
  40ffab:	inc    eax
  40ffac:	sahf   
  40ffad:	jnp    0x40ff8d
  40ffaf:	push   0x5f
  40ffb1:	loopne 0x40ff4b
  40ffb3:	xor    edx,esi
  40ffb5:	scas   eax,DWORD PTR es:[edi]
  40ffb6:	sti    
  40ffb7:	add    ch,BYTE PTR [ecx]
  40ffb9:	(bad)  
  40ffba:	lock pusha 
  40ffbc:	inc    ebx
  40ffbd:	mov    esi,0x6f57f402
  40ffc2:	inc    ecx
  40ffc3:	and    ch,BYTE PTR fs:[ebx]
  40ffc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc7:	mov    BYTE PTR es:[ecx+edx*4-0x31],dh
  40ffcc:	lahf   
  40ffcd:	test   DWORD PTR [ecx],edx
  40ffcf:	inc    edx
  40ffd0:	test   BYTE PTR [esi+edi*2+0x3b6d38f2],0x22
  40ffd8:	cmc    
  40ffd9:	adc    ebp,DWORD PTR es:[edi+0x4ed9e81c]
  40ffe0:	mov    bl,al
  40ffe2:	loop   0x40ff79
  40ffe4:	xchg   BYTE PTR [ecx+edi*8-0x29],cl
  40ffe8:	jge    0x410018
  40ffea:	loope  0x410030
  40ffec:	jg     0x410057
  40ffee:	fidiv  WORD PTR ds:0xc3c517ae
  40fff4:	iret   
  40fff5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fff7:	scas   al,BYTE PTR es:[edi]
  40fff8:	push   es
  40fff9:	sahf   
  40fffa:	(bad)  
  40fffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffc:	add    bh,BYTE PTR [eax-0xe]
  40ffff:	pop    esp
  410000:	shl    BYTE PTR [esi],0xdc
  410003:	dec    ecx
  410004:	cmp    ecx,0x64
  410007:	mov    WORD PTR [edx],?
  410009:	leave  
  41000a:	test   DWORD PTR [edi+0x77],edi
  41000d:	hlt    
  41000e:	test   BYTE PTR [ebp-0x70],bl
  410011:	mov    esp,eax
  410013:	and    esi,DWORD PTR [esi+0x61]
  410016:	and    edi,esp
  410018:	adc    bl,bl
  41001a:	lock xchg edx,eax
  41001c:	xchg   ebp,eax
  41001d:	pop    eax
  41001e:	xchg   ebp,eax
  41001f:	xchg   ebp,eax
  410020:	imul   eax,eax,0x71
  410023:	call   0xea9:0x5332f957
  41002a:	leave  
  41002b:	sbb    al,0x3e
  41002d:	dec    esi
  41002e:	xor    DWORD PTR [esi+edi*8],ebx
  410031:	add    cl,BYTE PTR [edx+0xb163db3]
  410037:	loope  0x40ffd6
  410039:	shl    BYTE PTR [esi+0x4a3e911f],cl
  41003f:	mov    WORD PTR [edx],es
  410041:	cmp    DWORD PTR [ebx+eax*8],edx
  410044:	ret    0x96d7
  410047:	mov    ebp,0xe3121c6f
  41004c:	pop    ebx
  41004d:	mov    ebp,0x616fed73
  410052:	mov    bh,0x73
  410054:	or     DWORD PTR ds:0x5489d529,ebp
  41005a:	std    
  41005b:	cld    
  41005c:	ins    BYTE PTR es:[edi],dx
  41005d:	xor    al,al
  41005f:	add    DWORD PTR [ecx],ecx
  410061:	adc    eax,0x1a7501e
  410066:	cmp    BYTE PTR [ecx-0x36],0x1d
  41006a:	pop    ss
  41006b:	lods   al,BYTE PTR ds:[esi]
  41006c:	(bad)  
  41006d:	loope  0x4100dc
  41006f:	sbb    bh,BYTE PTR [eax+edi*2]
  410072:	adc    BYTE PTR [ecx],cl
  410074:	mov    ebx,0xcb09400a
  410079:	pop    eax
  41007a:	pop    eax
  41007b:	cli    
  41007c:	dec    esp
  41007d:	push   0xffffffee
  41007f:	xabort 0xad
  410082:	pusha  
  410083:	mov    edi,0x331fd2f1
  410088:	cmc    
  410089:	jbe    0x4100c5
  41008b:	cli    
  41008c:	sub    BYTE PTR [ebx-0x1299be75],ah
  410092:	ins    BYTE PTR es:[edi],dx
  410093:	ins    BYTE PTR es:[edi],dx
  410094:	fsubr  st(0),st
  410096:	aas    
  410097:	mov    ch,0xd4
  410099:	lahf   
  41009a:	shr    dh,0x83
  41009d:	test   al,0x9a
  41009f:	push   ds
  4100a0:	ror    ebp,0x9f
  4100a3:	xor    edx,DWORD PTR [ecx-0x75193edb]
  4100a9:	loope  0x410063
  4100ab:	push   cs
  4100ac:	sbb    BYTE PTR [eax-0x6eb5ea54],al
  4100b2:	mov    al,0x84
  4100b4:	mov    cl,0xa4
  4100b6:	stc    
  4100b7:	retf   0x780f
  4100ba:	sub    ah,BYTE PTR [edi]
  4100bc:	jae    0x4100be
  4100be:	lods   eax,DWORD PTR ds:[esi]
  4100bf:	cmp    eax,0x1ef97c64
  4100c4:	sbb    dh,BYTE PTR [eax]
  4100c6:	push   edx
  4100c7:	inc    esp
  4100c8:	cmp    BYTE PTR [ebx],dl
  4100ca:	in     al,dx
  4100cb:	mov    ecx,0x4f02330
  4100d0:	and    DWORD PTR [ecx-0x34],esi
  4100d3:	dec    esp
  4100d4:	outs   dx,DWORD PTR ds:[esi]
  4100d5:	push   edi
  4100d6:	xchg   DWORD PTR [esi-0x11a5b466],edi
  4100dc:	ret    
  4100dd:	jbe    0x410107
  4100df:	mov    bh,0x33
  4100e1:	pop    edx
  4100e2:	aaa    
  4100e3:	fst    QWORD PTR [ecx-0x57]
  4100e6:	push   esi
  4100e7:	mov    ch,0x80
  4100e9:	imul   BYTE PTR ds:0xf9be4bd6
  4100ef:	mov    cl,0xe4
  4100f1:	unpckhps xmm4,XMMWORD PTR [edi]
  4100f4:	dec    edx
  4100f5:	into   
  4100f6:	inc    esi
  4100f7:	adc    dl,BYTE PTR [edx-0x5e]
  4100fa:	test   al,0xef
  4100fc:	ins    BYTE PTR es:[edi],dx
  4100fd:	sbb    esp,ebp
  4100ff:	sub    eax,0x4429eff
  410104:	pusha  
  410105:	jl     0x4100ae
  410107:	push   esi
  410108:	lds    ebx,FWORD PTR [ebx+esi*8+0x1]
  41010c:	xchg   edi,eax
  41010d:	(bad)  
  41010e:	in     eax,0xff
  410110:	test   BYTE PTR [ebx-0x2fdb3f91],bh
  410116:	enter  0x410a,0xee
  41011a:	and    al,0x6f
  41011c:	lea    esp,[edx-0x39]
  41011f:	xchg   edx,eax
  410120:	xor    DWORD PTR [eax],eax
  410122:	outs   dx,BYTE PTR ds:[esi]
  410123:	sub    eax,0x1410ba19
  410128:	mov    dh,0xda
  41012a:	pop    esi
  41012b:	pop    ecx
  41012c:	das    
  41012d:	dec    esp
  41012e:	les    esi,FWORD PTR [ebp+esi*8-0x22ba5e60]
  410135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410136:	dec    sp
  410138:	mov    ah,0xce
  41013a:	nop
  41013b:	pop    edi
  41013c:	(bad)
  41013f:	pop    esi
  410140:	retf   0x16cd
  410143:	add    esi,edi
  410145:	push   0xffffffe7
  410147:	mov    esi,0xd05aca99
  41014c:	fild   QWORD PTR [edx+edi*8]
  41014f:	xchg   ebp,eax
  410150:	mov    ecx,0x953ae44f
  410155:	ja     0x41012e
  410157:	fcom   DWORD PTR [esi-0x35]
  41015a:	int3   
  41015b:	test   DWORD PTR [eax-0x775e41f6],ebp
  410161:	popa   
  410162:	push   es
  410163:	addr16 gs out 0x47,al
  410167:	(bad)  
  410169:	dec    ebp
  41016a:	loop   0x410162
  41016c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41016d:	in     eax,0xb3
  41016f:	xor    al,0x91
  410171:	pusha  
  410172:	pop    es
  410173:	mov    al,0xfc
  410175:	inc    edx
  410176:	popf   
  410177:	sbb    al,0x83
  410179:	stos   BYTE PTR es:[edi],al
  41017a:	icebp  
  41017b:	adc    al,0xa1
  41017d:	js     0x4101bf
  41017f:	mov    BYTE PTR cs:[edx-0x79],dh
  410183:	jae    0x410184
  410185:	xor    eax,0xf62a032c
  41018a:	jb     0x4101da
  41018c:	adc    DWORD PTR [ebx],ecx
  41018e:	aaa    
  41018f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410190:	push   es
  410191:	and    al,0xd9
  410193:	or     al,0x32
  410195:	sub    al,0xcb
  410197:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410199:	inc    esi
  41019a:	gs or  esi,0xff00d1c0
  4101a1:	mov    dh,dl
  4101a3:	xlat   BYTE PTR ds:[ebx]
  4101a4:	hlt    
  4101a5:	or     edi,DWORD PTR [edi-0x4d]
  4101a8:	adc    al,0xc9
  4101aa:	and    ecx,ecx
  4101ac:	sub    cl,BYTE PTR [edi]
  4101ae:	xchg   esi,eax
  4101af:	pop    edi
  4101b0:	push   esi
  4101b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b2:	addr16 loopne 0x4101e3
  4101b5:	ret    0xe5a0
  4101b8:	sub    dl,bh
  4101ba:	loopne 0x4101d3
  4101bc:	gs gs pop esp
  4101bf:	mov    esi,0xc4602239
  4101c4:	sub    eax,esi
  4101c6:	pop    ebx
  4101c7:	xor    eax,0x41741853
  4101cc:	fcomp  DWORD PTR [edx+ebp*2]
  4101cf:	out    dx,eax
  4101d0:	mov    eax,ds:0x5cf7abfe
  4101d5:	mov    cl,0xe1
  4101d7:	cmp    al,0x80
  4101d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101da:	(bad)
  4101dd:	cld    
  4101de:	jns    0x4101ce
  4101e0:	pop    ebx
  4101e1:	jo     0x4101b0
  4101e3:	cmp    al,0x82
  4101e5:	dec    ebp
  4101e6:	out    dx,al
  4101e7:	addr16 cmp al,0xbd
  4101ea:	ins    DWORD PTR es:[edi],dx
  4101eb:	jbe    0x41026c
  4101ed:	aas    
  4101ee:	cld    
  4101ef:	xor    DWORD PTR [ecx-0x18],esp
  4101f2:	pop    ss
  4101f3:	xchg   edx,eax
  4101f4:	clc    
  4101f5:	mov    esi,0x95c8616d
  4101fa:	inc    edx
  4101fb:	repz sar BYTE PTR [esi],1
  4101fe:	dec    ebp
  4101ff:	jne    0x4101ca
  410201:	mov    ebx,0x676c9ab7
  410206:	in     eax,0x2a
  410208:	pop    ebp
  410209:	test   al,0xcb
  41020b:	and    DWORD PTR [ecx],0x62e7235a
  410211:	jge    0x41028c
  410213:	adc    al,0x72
  410215:	jno    0x410276
  410217:	and    al,0x30
  410219:	mov    eax,ds:0x57e08f63
  41021e:	push   ds
  41021f:	int    0x58
  410221:	call   0xcaa:0x2739f10
  410228:	adc    DWORD PTR [eax],esi
  41022a:	xchg   edi,eax
  41022b:	rcl    ebp,1
  41022d:	hlt    
  41022e:	or     BYTE PTR [esi-0x1c],0x6f
  410232:	sbb    al,0xcd
  410234:	mov    dh,0x68
  410236:	xchg   esp,eax
  410237:	loope  0x4101f6
  410239:	lea    esi,[ebp-0x59]
  41023c:	test   DWORD PTR [eax-0x54],edi
  41023f:	out    0x82,al
  410241:	and    BYTE PTR [edi+ebp*1-0x7be6329c],dl
  410248:	mov    bh,0xe2
  41024a:	or     eax,0x86e367d
  41024f:	adc    DWORD PTR [ecx-0x44d660a],0x668acde4
  410259:	push   ds
  41025a:	fwait
  41025b:	outs   dx,BYTE PTR ds:[esi]
  41025c:	push   edi
  41025d:	pop    edi
  41025e:	mov    ebp,ebx
  410260:	out    0xc5,al
  410262:	sbb    edi,DWORD PTR [ebx]
  410264:	add    BYTE PTR [edi],bh
  410266:	ret    0x1044
  410269:	jo     0x410275
  41026b:	outs   dx,BYTE PTR ds:[esi]
  41026c:	in     eax,dx
  41026d:	cmp    BYTE PTR [edx],al
  41026f:	mov    ebp,DWORD PTR [esi]
  410271:	jnp    0x410253
  410273:	rol    DWORD PTR [edi-0x1b],0xb4
  410277:	outs   dx,BYTE PTR ds:[esi]
  410278:	cmp    DWORD PTR [ebx-0x52],ebp
  41027b:	push   ds
  41027c:	sahf   
  41027d:	(bad)  
  41027e:	ds push ebx
  410280:	fcompp 
  410282:	cld    
  410283:	xor    edx,0x2e69e2
  410289:	mov    al,0x61
  41028b:	sbb    dl,BYTE PTR [ecx+0x4ed795e0]
  410291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410292:	and    DWORD PTR [esi-0x46],edi
  410295:	(bad)  
  410296:	aaa    
  410297:	xor    al,0xd7
  410299:	sub    DWORD PTR [ecx-0x35fc075f],0x6b
  4102a0:	fwait
  4102a1:	xchg   DWORD PTR [ebx+0x3ca73910],ebx
  4102a7:	inc    ebx
  4102a8:	in     eax,dx
  4102a9:	cmp    al,dh
  4102ab:	inc    esp
  4102ac:	int3   
  4102ad:	jbe    0x4102fa
  4102af:	sub    ecx,DWORD PTR [ecx+ecx*2]
  4102b2:	xchg   ebp,eax
  4102b3:	push   0xffffffc2
  4102b5:	dec    ecx
  4102b6:	pop    esp
  4102b7:	mov    BYTE PTR [eax+0x74d275b1],0xb0
  4102be:	sar    ebx,1
  4102c0:	inc    ecx
  4102c1:	jnp    0x4102a3
  4102c3:	pop    edi
  4102c4:	dec    edx
  4102c5:	adc    bl,BYTE PTR [eax-0x1b]
  4102c8:	mov    bh,0x95
  4102ca:	mov    ah,0x52
  4102cc:	dec    ebp
  4102cd:	or     edi,esp
  4102cf:	aaa    
  4102d0:	call   0xe7e6:0xe6411eb7
  4102d7:	push   eax
  4102d8:	sub    DWORD PTR [ebx],edi
  4102da:	xchg   cl,ah
  4102dc:	mov    dh,0xd7
  4102de:	imul   edx,DWORD PTR [ebp-0x7],0x796ad4f7
  4102e5:	je     0x410337
  4102e7:	sar    bl,1
  4102e9:	mov    edx,0xfe745ce0
  4102ee:	push   0xffffffe5
  4102f0:	pushf  
  4102f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f2:	repz lea ecx,[edi+0x3245bf78]
  4102f9:	xchg   dl,bh
  4102fb:	js     0x410339
  4102fd:	mov    bh,0x32
  4102ff:	lock push eax
  410301:	or     esp,edi
  410303:	retf   0xe358
  410306:	shl    BYTE PTR [ebx+0x298b5255],1
  41030c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030d:	lds    esp,FWORD PTR [edx-0x65dd798]
  410313:	jl     0x410372
  410315:	(bad)  
  410316:	push   esi
  410317:	bndldx bnd1,[edi]
  41031a:	repnz into 
  41031c:	xchg   ebx,eax
  41031d:	push   ds
  41031e:	add    al,0x66
  410320:	mov    cl,0x18
  410322:	mov    ch,0xf6
  410324:	cli    
  410325:	push   cs
  410326:	outs   dx,DWORD PTR ds:[esi]
  410327:	cmc    
  410328:	dec    ebp
  410329:	dec    ecx
  41032a:	ret    0x1f93
  41032d:	rcr    BYTE PTR [ebx],0x15
  410330:	cmp    BYTE PTR [edi],dh
  410332:	mov    dl,0xd9
  410334:	scas   eax,DWORD PTR es:[edi]
  410335:	imul   BYTE PTR [esi]
  410337:	xor    ebx,edi
  410339:	pop    eax
  41033a:	not    DWORD PTR [ebx+0x23]
  41033d:	outs   dx,BYTE PTR ds:[esi]
  41033e:	xor    BYTE PTR [ebp-0x16],bl
  410341:	cld    
  410342:	ror    bh,cl
  410344:	outs   dx,DWORD PTR ds:[esi]
  410345:	dec    eax
  410346:	pop    edi
  410347:	gs mov cl,0xda
  41034a:	aad    0x29
  41034c:	jbe    0x4103a8
  41034e:	mov    bl,0xf7
  410350:	push   esp
  410351:	xor    DWORD PTR [ebx],esi
  410353:	sub    DWORD PTR [eax],0xffffffd2
  410356:	and    BYTE PTR [eax],al
  410358:	xchg   BYTE PTR [edi+0xd],ch
  41035b:	push   ds
  41035c:	rcr    DWORD PTR [esi],0xab
  41035f:	test   DWORD PTR [edx-0x39],esi
  410362:	sti    
  410363:	test   esp,ebp
  410365:	ja     0x4103cc
  410367:	cmp    bl,BYTE PTR [eax+ebp*8-0x7f]
  41036b:	push   edx
  41036c:	cld    
  41036d:	pop    edi
  41036e:	sti    
  41036f:	add    eax,0x7f50e6bf
  410374:	outs   dx,BYTE PTR ds:[esi]
  410375:	outs   dx,BYTE PTR ds:[esi]
  410376:	out    0xa8,al
  410378:	push   ds
  410379:	sub    bl,BYTE PTR [ecx]
  41037b:	jle    0x4103c0
  41037d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41037e:	mov    ecx,0x67d66baf
  410383:	mov    ecx,0x8c2a0da
  410388:	(bad)
  41038c:	inc    edx
  41038d:	mov    esi,0xbb1093f9
  410392:	xor    al,0xf0
  410394:	(bad)  
  410395:	mov    ebx,0x21ff6157
  41039a:	xlat   BYTE PTR ds:[ebx]
  41039b:	xor    eax,0x39407da3
  4103a0:	cs retf 
  4103a2:	push   esi
  4103a3:	jnp    0x4103e0
  4103a5:	jecxz  0x41039c
  4103a7:	neg    BYTE PTR [edi-0x5ea0ab6c]
  4103ad:	cmp    ecx,edi
  4103af:	xor    al,0xe1
  4103b1:	repnz std 
  4103b3:	sub    dh,al
  4103b5:	add    eax,0x226b76e5
  4103ba:	inc    ecx
  4103bb:	stos   DWORD PTR es:[edi],eax
  4103bc:	inc    esp
  4103be:	push   edi
  4103bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c0:	cmp    al,0xa9
  4103c2:	mov    dl,BYTE PTR [eax+0x33]
  4103c5:	test   eax,0x1f61ea36
  4103ca:	lods   al,BYTE PTR ds:[esi]
  4103cb:	jmp    0x80770692
  4103d0:	outs   dx,BYTE PTR ds:[esi]
  4103d1:	std    
  4103d2:	(bad)  
  4103d4:	pop    esp
  4103d5:	aam    0x33
  4103d7:	mov    edx,DWORD PTR [ebx+0x50194fe0]
  4103dd:	jp     0x4103ee
  4103df:	mov    BYTE PTR [ecx-0x1],bh
  4103e2:	int3   
  4103e3:	xchg   BYTE PTR [edi+0x2a10f00],dl
  4103e9:	pop    ebp
  4103ea:	adc    esp,ebp
  4103ec:	dec    edi
  4103ed:	(bad)
  4103f1:	(bad)  
  4103f2:	or     ebx,DWORD PTR [esi]
  4103f4:	xchg   esi,eax
  4103f5:	ret    
  4103f6:	inc    ecx
  4103f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f8:	sub    edi,DWORD PTR [esi+0x577e232]
  4103fe:	mov    ch,0xda
  410401:	xor    eax,DWORD PTR [edi]
  410403:	mov    ds:0x20c09c36,eax
  410408:	push   cs
  410409:	mov    eax,0xad207bfd
  41040e:	xchg   edi,eax
  41040f:	dec    esp
  410410:	icebp  
  410411:	bound  edx,QWORD PTR [edi]
  410413:	scas   eax,DWORD PTR es:[edi]
  410414:	or     ebp,DWORD PTR [ecx+esi*4]
  410417:	xchg   ecx,eax
  410418:	shr    DWORD PTR [ecx+0x3a034467],cl
  41041e:	xor    bl,BYTE PTR [esi+0x5aa9fe39]
  410424:	into   
  410425:	push   ds
  410426:	cmp    DWORD PTR [esp+ebp*2],esi
  410429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41042a:	cld    
  41042b:	ss movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41042e:	xor    DWORD PTR [esi],esi
  410430:	fiadd  DWORD PTR [ebp+ecx*4+0x50]
  410434:	mov    gs,WORD PTR [esi]
  410436:	cmp    BYTE PTR [edi-0x44b55e10],0x25
  41043d:	and    BYTE PTR [ebp+esi*8+0x42],ch
  410441:	into   
  410442:	jns    0x410458
  410444:	xchg   ecx,eax
  410445:	xchg   edx,eax
  410446:	sub    dl,bh
  410448:	test   eax,0xbd90a858
  41044d:	jne    0x41046a
  41044f:	das    
  410450:	push   edx
  410451:	shl    BYTE PTR [eax+ebp*1-0x2b],1
  410455:	aaa    
  410456:	xor    al,0xf3
  410458:	cmp    ebp,ecx
  41045a:	mov    bl,0xa1
  41045c:	sbb    eax,0xcb5ef2c4
  410461:	adc    BYTE PTR [ebp+0x372ccc38],al
  410467:	and    eax,0x5813bf89
  41046c:	inc    edx
  41046d:	mov    cl,al
  41046f:	fst    QWORD PTR [ebx-0x66]
  410472:	cmp    BYTE PTR [ebx-0x61],ch
  410475:	jb     0x4104d9
  410477:	lds    ebp,FWORD PTR cs:[ecx-0x31]
  41047b:	adc    bh,cl
  41047d:	mov    gs,WORD PTR [ecx-0x75dce63e]
  410483:	mov    cl,al
  410485:	std    
  410486:	(bad)
  41048a:	loop   0x410485
  41048c:	sub    DWORD PTR [edx+ebx*1],eax
  41048f:	jbe    0x4104a2
  410491:	sbb    DWORD PTR [esi+ebx*1],edx
  410494:	enter  0x106c,0xb5
  410498:	repz mov esi,0x4d4c488c
  41049e:	fwait
  41049f:	sbb    al,BYTE PTR [eax-0x24]
  4104a2:	sbb    bl,BYTE PTR [ecx-0x1326174b]
  4104a8:	retf   0x9642
  4104ab:	xor    DWORD PTR [edi-0x7e6aca55],eax
  4104b1:	adc    eax,DWORD PTR [ebx-0x45cb7dae]
  4104b7:	icebp  
  4104b8:	mov    si,0xc1bc
  4104bc:	test   al,0xf1
  4104be:	daa    
  4104bf:	shr    bh,0xd3
  4104c2:	addr16 daa 
  4104c4:	inc    ecx
  4104c5:	jmp    0x41044c
  4104c7:	mov    BYTE PTR [ebx-0x28f776e1],dl
  4104cd:	in     eax,0x60
  4104cf:	mov    BYTE PTR [esi+ebx*4],0xeb
  4104d3:	es push ecx
  4104d5:	add    BYTE PTR [edx-0x175c0270],ch
  4104db:	or     DWORD PTR [esi+0x4],edi
  4104de:	cmp    DWORD PTR [ebp-0x61],ebp
  4104e1:	xchg   BYTE PTR [ebp*8-0x77da7196],cl
  4104e8:	mov    esi,0xa756a64b
  4104ed:	inc    edx
  4104ee:	pop    ds
  4104ef:	and    eax,0xede97c11
  4104f4:	dec    ebx
  4104f5:	jg     0x41047d
  4104f7:	iret   
  4104f8:	jae    0x410546
  4104fa:	or     bl,dh
  4104fc:	sbb    eax,0x4a8298c7
  410501:	xor    DWORD PTR [edi+0x5],edx
  410504:	loope  0x41050c
  410506:	adc    edx,DWORD PTR [edi+0x4729a201]
  41050c:	adc    ebx,DWORD PTR [edi+0x65]
  41050f:	cs push 0xfffffff9
  410512:	sub    al,0x7d
  410514:	mov    eax,ds:0xd8e9068b
  410519:	fcmovu st,st(3)
  41051b:	push   ss
  41051c:	dec    esp
  41051d:	jg     0x4104ef
  41051f:	dec    ecx
  410520:	int3   
  410521:	xor    BYTE PTR ds:0x3cc860a9,0xa7
  410528:	out    0xf,eax
  41052a:	push   es
  41052b:	pop    edi
  41052c:	mov    eax,0x1828adc4
  410531:	push   ecx
  410532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410533:	mov    dh,0xcb
  410535:	imul   ebx,DWORD PTR [ebx-0x5e],0x261d7214
  41053c:	and    ebx,DWORD PTR [edx]
  41053e:	adc    BYTE PTR ds:0x302bb7c5,bh
  410544:	lods   al,BYTE PTR ds:[esi]
  410545:	mov    ebx,0xb871b7c8
  41054a:	leave  
  41054b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41054c:	scas   eax,DWORD PTR es:[edi]
  41054d:	push   eax
  41054e:	or     esi,DWORD PTR [ebx+edx*4+0x5555ba48]
  410555:	jae    0x410525
  410557:	push   eax
  410558:	je     0x41054b
  41055a:	popf   
  41055b:	mov    ebx,ebx
  41055d:	sbb    ah,BYTE PTR ds:0xaaec8dff
  410563:	or     BYTE PTR [edx+ebx*2+0x3a4ffaa5],dl
  41056a:	int    0xf2
  41056c:	inc    esi
  41056d:	shr    dh,0xd1
  410570:	out    dx,al
  410571:	aas    
  410572:	pop    ebp
  410573:	push   ebx
  410574:	stos   DWORD PTR es:[edi],eax
  410575:	add    eax,DWORD PTR ds:0xf4fcb376
  41057b:	inc    edi
  41057c:	xchg   BYTE PTR [edi+0x4b],bh
  41057f:	dec    esp
  410580:	pop    ebx
  410581:	ins    BYTE PTR es:[edi],dx
  410582:	push   ebx
  410583:	add    DWORD PTR cs:[edx-0x4c],eax
  410587:	xchg   edi,eax
  410588:	xchg   edi,edi
  41058a:	ss addr16 imul bl
  41058e:	pop    edx
  41058f:	cwde   
  410590:	call   0xb6d31939
  410595:	hlt    
  410596:	lock sahf 
  410598:	adc    al,0xf2
  41059a:	test   eax,0x98b1c63d
  41059f:	cli    
  4105a0:	cdq    
  4105a1:	xchg   esi,eax
  4105a2:	xor    BYTE PTR [ebp-0x14],bh
  4105a5:	dec    esp
  4105a6:	or     al,0x2f
  4105a8:	imul   esi,ecx,0x972cbed5
  4105ae:	xor    BYTE PTR [eax-0x54],bh
  4105b1:	lldt   WORD PTR [ebx+ecx*2]
  4105b5:	fst    DWORD PTR [edi+ecx*8+0x5f]
  4105b9:	add    dl,BYTE PTR ds:0xa2ed1882
  4105bf:	inc    edi
  4105c0:	xchg   BYTE PTR ds:0xc12019c8,ch
  4105c6:	leave  
  4105c7:	call   0x11dd33f4
  4105cc:	into   
  4105cd:	sbb    esp,ecx
  4105cf:	and    al,0x0
  4105d1:	mov    al,ds:0xbb832d16
  4105d6:	dec    ebp
  4105d7:	jmp    FWORD PTR [eax+0x3afb57e3]
  4105dd:	scas   eax,DWORD PTR es:[edi]
  4105de:	pop    ecx
  4105df:	call   0x52cd6d5b
  4105e4:	cs mov bl,0x8e
  4105e7:	fisubr WORD PTR [ecx+ebx*8-0x58]
  4105eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ec:	and    DWORD PTR [esi+0x6eb63f67],edx
  4105f2:	xor    esi,edx
  4105f4:	jge    0x4105ac
  4105f6:	pop    esp
  4105f7:	shl    BYTE PTR [eax+0x63fd965d],cl
  4105fd:	sti    
  4105fe:	adc    eax,0x4a4fc355
  410603:	xor    eax,0xa9c90923
  410608:	cmp    DWORD PTR [edx],ebp
  41060a:	enter  0xdb88,0x43
  41060e:	inc    edx
  41060f:	sub    ax,0x326e
  410613:	dec    esi
  410614:	ds sbb ebx,ebp
  410617:	popf   
  410618:	pop    edi
  410619:	push   esi
  41061a:	into   
  41061b:	push   es
  41061c:	pusha  
  41061d:	sbb    al,0x55
  41061f:	lahf   
  410620:	test   al,0x51
  410622:	jle    0x410678
  410624:	enter  0xe732,0x90
  410628:	(bad)  
  410629:	mov    ch,0x86
  41062b:	ins    DWORD PTR es:[edi],dx
  41062c:	xchg   esi,eax
  41062d:	cmp    eax,0xf1d116ff
  410632:	adc    eax,0x72093785
  410637:	scas   eax,DWORD PTR es:[edi]
  410638:	pop    edx
  410639:	bound  esp,QWORD PTR [eax+ebp*1-0x7d]
  41063d:	jae    0x410692
  41063f:	lods   eax,DWORD PTR ds:[esi]
  410640:	scas   al,BYTE PTR es:[edi]
  410641:	hlt    
  410642:	xchg   esi,eax
  410643:	shl    BYTE PTR gs:[edx+0x5c357d32],cl
  41064a:	mov    al,ds:0x890158ca
  41064f:	mov    ds:0x512e3d51,eax
  410654:	mov    ebx,0x65757a7d
  410659:	mov    al,0x67
  41065b:	jae    0x4106c8
  41065d:	int3   
  41065e:	adc    ch,BYTE PTR [ecx]
  410660:	mov    cl,0x21
  410662:	add    al,0xf0
  410664:	loopne 0x41062b
  410666:	mov    esi,0x269bc3e9
  41066b:	mov    edx,0xd0cc0b06
  410670:	fwait
  410671:	popf   
  410672:	mov    gs,eax
  410674:	sub    al,0x86
  410676:	inc    esi
  410677:	iret   
  410678:	xor    eax,0x293a0710
  41067d:	pop    edi
  41067e:	add    al,0x6
  410680:	pop    esp
  410681:	push   0xea216280
  410686:	daa    
  410687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410688:	fidivr DWORD PTR [edx+0x1ce9329a]
  41068e:	imul   ecx,DWORD PTR [ebx+0x6d],0xfffffff5
  410692:	arpl   WORD PTR [edx+eax*2],cx
  410695:	clc    
  410696:	xchg   ebx,eax
  410697:	sar    BYTE PTR [ebx-0x10],cl
  41069a:	cmp    al,0x6c
  41069c:	mov    esp,0x4fbd92ec
  4106a1:	mov    WORD PTR [edx+0x2961b280],ds
  4106a7:	push   cs
  4106a8:	jb     0x410635
  4106aa:	push   ds
  4106ab:	rcl    esi,0xbc
  4106ae:	leave  
  4106af:	dec    edi
  4106b0:	jb     0x4106a4
  4106b2:	or     BYTE PTR [ebx+0x2f5b0f85],bh
  4106b8:	and    ecx,DWORD PTR [edi-0x64d67718]
  4106be:	fist   WORD PTR [ecx+0x7a]
  4106c1:	xchg   DWORD PTR [edi],ecx
  4106c3:	das    
  4106c4:	cdq    
  4106c5:	les    esi,FWORD PTR [eax+edi*4+0x1f2adf8b]
  4106cc:	push   ss
  4106cd:	cmp    ch,ah
  4106cf:	jnp    0x410693
  4106d1:	adc    esi,ebp
  4106d3:	imul   edx,DWORD PTR [esi+0x3133b275],0xaae7cd50
  4106dd:	cmp    al,0xd0
  4106df:	sbb    bh,bh
  4106e1:	mov    dh,BYTE PTR [edx-0x8fb7f55]
  4106e7:	inc    esi
  4106e8:	mov    eax,0xff75e30c
  4106ed:	in     eax,0x5d
  4106ef:	ins    DWORD PTR es:[edi],dx
  4106f0:	fisubr WORD PTR [edx-0x10]
  4106f3:	(bad)  
  4106f4:	out    0x89,al
  4106f6:	mov    ah,0xd7
  4106f8:	inc    esi
  4106f9:	aam    0xd3
  4106fb:	gs out 0x72,eax
  4106fe:	imul   ecx,DWORD PTR [edi-0x7a455555],0x64
  410705:	ret    0x9f01
  410708:	dec    esp
  410709:	test   eax,0xd7d21700
  41070e:	inc    edi
  41070f:	imul   eax,DWORD PTR [ecx-0x44],0xc9939a0
  410716:	and    cl,BYTE PTR [edi-0x32]
  410719:	rcr    BYTE PTR [ecx-0xf],cl
  41071c:	sbb    dl,bl
  41071e:	push   0xffffff85
  410720:	sahf   
  410721:	add    ecx,DWORD PTR [esi+0x29]
  410724:	xlat   BYTE PTR ds:[ebx]
  410725:	adc    ebp,DWORD PTR [edx]
  410727:	jmp    0x4106d6
  410729:	jge    0x4107aa
  41072b:	sub    DWORD PTR [edi+eiz*4+0x3288401f],eax
  410732:	adc    DWORD PTR [ebp+0x273d1066],ecx
  410738:	test   al,0x20
  41073a:	mov    ds:0x2e4dfc4b,al
  41073f:	neg    BYTE PTR [esi+0x29]
  410742:	call   0x9b6b:0xf59df13
  410749:	xchg   esi,eax
  41074a:	dec    ebp
  41074b:	fs repnz popf 
  41074e:	dec    edi
  41074f:	mov    BYTE PTR [edx+ebx*2-0x5a],ch
  410753:	sub    DWORD PTR [esi+ebp*4],edx
  410756:	out    0x55,al
  410758:	mov    edx,0x3df01c78
  41075d:	lock mov cl,BYTE PTR [ecx]
  410760:	nop
  410761:	lods   al,BYTE PTR ds:[esi]
  410762:	(bad)  
  410763:	mov    ebx,0x2d9bd285
  410768:	jecxz  0x4107d9
  41076a:	pop    esp
  41076b:	sub    BYTE PTR [edx+ecx*8],dh
  41076e:	xor    BYTE PTR [edx],al
  410770:	leave  
  410771:	ror    DWORD PTR [ebx-0x22],cl
  410774:	jecxz  0x41071c
  410776:	cwde   
  410777:	adc    ebp,DWORD PTR [esi-0x18]
  41077a:	cmp    dl,al
  41077c:	leave  
  41077d:	xchg   edi,eax
  41077e:	(bad)  
  41077f:	push   eax
  410780:	mov    dh,0x8
  410782:	mov    WORD PTR [edx+eiz*1+0x19ad70a3],es
  410789:	popf   
  41078a:	fcom   QWORD PTR [edx]
  41078c:	dec    edi
  41078d:	pop    esp
  41078e:	mov    ds:0x8e879d5d,eax
  410793:	mov    edx,0x40545d63
  410798:	dec    edx
  410799:	mov    esp,0xc2742624
  41079e:	arpl   WORD PTR [ecx-0x68],dx
  4107a1:	adc    ch,BYTE PTR [esi+0x14319314]
  4107a7:	hlt    
  4107a8:	inc    edi
  4107a9:	addr16 push ebx
  4107ab:	cmp    eax,0x9dde646b
  4107b0:	add    BYTE PTR [ecx],dh
  4107b2:	jb     0x410761
  4107b4:	mov    esp,0x6f17d14b
  4107b9:	add    eax,0xffffff8e
  4107bc:	xchg   esp,eax
  4107bd:	fdivr  DWORD PTR [eax-0x1b]
  4107c0:	pop    ds
  4107c1:	and    esi,ecx
  4107c3:	popf   
  4107c4:	sub    al,0xcb
  4107c6:	and    eax,0x9863b419
  4107cb:	outs   dx,DWORD PTR ds:[esi]
  4107cc:	mov    es,WORD PTR [esi]
  4107ce:	test   DWORD PTR [ebx+0x66661506],edx
  4107d4:	out    dx,al
  4107d5:	push   ebp
  4107d6:	daa    
  4107d7:	scas   al,BYTE PTR es:[edi]
  4107d8:	in     eax,0xd9
  4107da:	pushf  
  4107db:	mov    ebx,0x2d3fabd2
  4107e0:	add    al,BYTE PTR [ecx-0x740315e9]
  4107e6:	adc    al,0x7f
  4107e9:	into   
  4107ea:	push   0x1a
  4107ec:	stos   BYTE PTR es:[edi],al
  4107ed:	clc    
  4107ee:	xchg   esi,eax
  4107ef:	outs   dx,DWORD PTR ds:[esi]
  4107f0:	fs or  al,0x4b
  4107f3:	add    ecx,DWORD PTR [esi+0x47f7809a]
  4107f9:	(bad)  
  4107fa:	sahf   
  4107fb:	push   esp
  4107fc:	retf   0x626e
  4107ff:	inc    ecx
  410800:	and    BYTE PTR [ecx+0x53701958],cl
  410806:	adc    BYTE PTR [ecx],0xe3
  410809:	out    dx,eax
  41080a:	push   0x8eb13078
  41080f:	test   eax,0x3c9d0fc0
  410814:	jo     0x410856
  410816:	cmp    DWORD PTR [ebp+0x5b],edi
  410819:	inc    eax
  41081a:	dec    ebx
  41081b:	mov    esi,0x4b8de199
  410820:	fucomip st,st(4)
  410822:	inc    eax
  410823:	pop    edx
  410824:	jno    0x410829
  410826:	adc    BYTE PTR [eax-0x30eaa416],al
  41082c:	nop
  41082d:	cmp    esp,edi
  41082f:	cmp    BYTE PTR [eax-0xe],0x48
  410833:	xchg   eax,esp
  410835:	pop    ss
  410836:	push   ebp
  410837:	popa   
  410838:	xor    esi,DWORD PTR [ecx]
  41083a:	inc    ecx
  41083b:	jo     0x410855
  41083d:	fs cmp eax,0xe0d35ba
  410843:	or     eax,0x7a3d9920
  410848:	imul   BYTE PTR [eax+0x177e6883]
  41084e:	addr16 sti 
  410850:	adc    esi,DWORD PTR [esi-0x57a2a54d]
  410856:	or     DWORD PTR [esp+eax*4],edi
  410859:	push   0xfffffff2
  41085b:	fimul  WORD PTR [esi+0x7e]
  41085e:	sti    
  41085f:	jb     0x4107ff
  410861:	xchg   edx,eax
  410862:	cwde   
  410863:	sub    BYTE PTR [ebp-0x6989a91],0xc2
  41086a:	sahf   
  41086b:	inc    ebp
  41086c:	xor    BYTE PTR [esi-0x64],ch
  41086f:	fisttp WORD PTR [ecx-0x7]
  410872:	mov    ss,WORD PTR [edx+0x62]
  410875:	pop    ss
  410876:	fucomip st,st(7)
  410878:	add    cl,BYTE PTR [ebx+0x32]
  41087b:	outs   dx,BYTE PTR ds:[esi]
  41087c:	daa    
  41087d:	mov    ebx,0xbddeadeb
  410882:	cmp    al,0x17
  410884:	dec    esi
  410885:	mov    DWORD PTR [eax],0xb48c0ab2
  41088b:	sub    eax,0xc81b0c52
  410890:	scas   al,BYTE PTR es:[edi]
  410891:	addr16 mov esp,0xd281ce3d
  410897:	sbb    edx,DWORD PTR [ebp+0x4a7b9ee4]
  41089d:	pushf  
  41089e:	jne    0x410862
  4108a0:	mov    DWORD PTR [ecx],ebx
  4108a2:	ja     0x4108cc
  4108a4:	test   al,0x9e
  4108a6:	fadd   DWORD PTR [edi+0x504f7ea7]
  4108ac:	add    dl,BYTE PTR [esi-0x2f]
  4108af:	outs   dx,BYTE PTR ds:[esi]
  4108b0:	in     al,dx
  4108b1:	xchg   ebp,eax
  4108b2:	sti    
  4108b3:	outs   dx,DWORD PTR ds:[esi]
  4108b4:	ret    0x380e
  4108b7:	or     eax,0xf01f6d5f
  4108bc:	push   0xffffffed
  4108be:	cmc    
  4108bf:	adc    DWORD PTR [edi+0x2d],edi
  4108c2:	pop    eax
  4108c3:	pop    esp
  4108c4:	fwait
  4108c5:	push   ecx
  4108c6:	hlt    
  4108c7:	dec    edi
  4108c8:	int3   
  4108c9:	mov    ?,WORD PTR [ecx]
  4108cb:	lods   al,BYTE PTR ds:[esi]
  4108cc:	rcl    bh,cl
  4108ce:	adc    al,0x15
  4108d0:	(bad)  
  4108d2:	mov    ebp,0x856cc678
  4108d7:	mov    bl,0x30
  4108d9:	add    edx,edi
  4108db:	das    
  4108dc:	sar    DWORD PTR [esi-0x66],1
  4108df:	sahf   
  4108e0:	push   ebp
  4108e1:	clc    
  4108e2:	cmp    edi,DWORD PTR [ebp+0x3f1e9259]
  4108e8:	lock jo 0x41094e
  4108eb:	ins    BYTE PTR es:[edi],dx
  4108ec:	push   eax
  4108ed:	add    dh,dl
  4108ef:	retf   
  4108f0:	mov    dl,BYTE PTR cs:0x4438180b
  4108f7:	test   BYTE PTR [edi+0x343ee9a6],al
  4108fd:	clc    
  4108fe:	adc    ah,BYTE PTR [ebx-0x2d93a755]
  410904:	pop    ebx
  410905:	dec    esi
  410906:	cmp    edi,DWORD PTR [edx+0x7731c9cd]
  41090c:	clc    
  41090d:	inc    ebx
  41090e:	xchg   ebp,eax
  41090f:	jmp    0x3ecf:0x4f10d589
  410916:	inc    ebp
  410917:	fsub   st,st(1)
  410919:	jno    0x410989
  41091b:	imul   edi,DWORD PTR [ebx],0xffffffcd
  41091e:	test   al,0x13
  410920:	repnz dec ecx
  410922:	cdq    
  410923:	lock scas al,BYTE PTR es:[edi]
  410925:	or     eax,0x6f277440
  41092a:	bound  ecx,QWORD PTR [edi]
  41092c:	test   DWORD PTR [eax-0x2c96b4dd],edx
  410932:	scas   eax,DWORD PTR es:[edi]
  410933:	pop    ebp
  410934:	dec    ecx
  410935:	out    dx,al
  410936:	push   esp
  410937:	mov    edx,DWORD PTR [eax+ebx*1-0x21]
  41093b:	test   al,0xd2
  41093d:	dec    ebx
  41093e:	js     0x4109b1
  410940:	mov    eax,ds:0x8d066084
  410945:	cmp    eax,0xf1f5d0f1
  41094a:	jg     0x4109c3
  41094c:	inc    eax
  41094d:	inc    edx
  41094e:	dec    ebp
  41094f:	out    dx,eax
  410950:	mov    al,0xea
  410952:	aam    0x63
  410954:	(bad)  
  410955:	xor    BYTE PTR [edx],al
  410957:	dec    eax
  410958:	dec    esi
  410959:	cmp    edi,DWORD PTR [esi-0x1c]
  41095c:	sub    edx,edi
  41095e:	sub    al,0x27
  410960:	sub    esp,0x42cb21ae
  410966:	push   DWORD PTR [ebx*4-0x48f0fecf]
  41096d:	(bad)  
  41096e:	cmp    DWORD PTR ds:0x9314e38d,ecx
  410974:	popf   
  410975:	mov    WORD PTR [edi],ds
  410977:	push   ds
  410978:	sbb    ah,dl
  41097a:	cmp    BYTE PTR [eax-0x3a729e52],ch
  410980:	mov    eax,0xbca28bcd
  410985:	or     al,0x72
  410987:	repnz shl DWORD PTR [edi-0x1d472699],cl
  41098e:	loope  0x410919
  410990:	cmp    al,0xd8
  410992:	sbb    eax,0x9fda1b42
  410997:	ror    esi,0xf9
  41099a:	add    BYTE PTR [ebx+ebp*1-0x28],cl
  41099e:	push   ebx
  41099f:	sbb    al,0x37
  4109a1:	cmp    eax,0xbae8812c
  4109a6:	dec    esp
  4109a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a8:	arpl   si,bx
  4109aa:	mov    edi,0x7eed6554
  4109af:	push   esp
  4109b0:	mov    ah,0xbf
  4109b2:	mov    dl,0x6b
  4109b4:	rcl    DWORD PTR [ebp+0x2c],1
  4109b7:	rcr    BYTE PTR [eax-0x36],1
  4109ba:	jmp    0x4109d9
  4109bc:	leave  
  4109bd:	jne    0x4109cb
  4109bf:	sar    bl,1
  4109c1:	es mov esi,0xb4dd7c72
  4109c7:	add    eax,0x68b76306
  4109cc:	outs   dx,BYTE PTR ds:[esi]
  4109cd:	or     ecx,ecx
  4109cf:	adc    eax,esi
  4109d1:	rep outs dx,BYTE PTR ds:[esi]
  4109d3:	adc    al,0x27
  4109d5:	add    eax,0xc7658a12
  4109da:	or     dl,BYTE PTR [edx+edi*4+0x6a]
  4109de:	cs jne 0x410a2f
  4109e1:	add    bl,dh
  4109e3:	adc    al,0xa7
  4109e5:	or     DWORD PTR [esi-0x178746c3],ebp
  4109eb:	(bad)  [eax]
  4109ed:	adc    BYTE PTR [ebx+ebx*8-0x51],0x6f
  4109f2:	push   ss
  4109f3:	je     0x410a56
  4109f5:	in     eax,0xb7
  4109f7:	ret    0x4261
  4109fa:	and    dl,BYTE PTR [ebx+0x3991a782]
  410a00:	jae    0x410a50
  410a02:	cli    
  410a03:	mov    cl,BYTE PTR [edi-0x4fde8afa]
  410a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a0a:	mov    edi,0x60eed2a1
  410a0f:	add    esp,DWORD PTR [esi-0x47e82ba5]
  410a15:	mov    ds:0x88e58ebc,eax
  410a1a:	pop    ebp
  410a1b:	inc    esp
  410a1c:	add    eax,DWORD PTR [edx-0x33]
  410a1f:	retf   0x367c
  410a22:	aad    0x72
  410a24:	pop    esi
  410a25:	mov    ecx,0x6ca40589
  410a2a:	pop    esp
  410a2b:	jp     0x4109be
  410a2d:	sbb    esp,edx
  410a2f:	or     al,ah
  410a31:	mov    ?,WORD PTR [esi+0x7cfebdd8]
  410a37:	jb     0x410a7f
  410a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3a:	jle    0x410a50
  410a3c:	sbb    edi,edi
  410a3e:	jb     0x410a5e
  410a40:	add    al,0xef
  410a42:	xchg   edx,eax
  410a43:	mov    ebx,0x37ed19b
  410a48:	pop    ss
  410a49:	addr16 mov al,0xfb
  410a4c:	mov    al,0x8c
  410a4e:	popf   
  410a4f:	shl    BYTE PTR [ebx+0x38],1
  410a52:	das    
  410a53:	call   0x9b890882
  410a58:	pop    ebp
  410a59:	adc    DWORD PTR ds:0xc757eb29,ecx
  410a5f:	neg    edi
  410a61:	sbb    al,0x5
  410a63:	jl     0x410a5e
  410a65:	mov    dl,0x1b
  410a67:	or     DWORD PTR [edi+0x20cac6c8],0xffffffbb
  410a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a6f:	jns    0x410a4a
  410a71:	xlat   BYTE PTR ds:[ebx]
  410a72:	out    dx,al
  410a73:	loope  0x410abd
  410a75:	jp     0x410a36
  410a77:	cwde   
  410a78:	or     ch,BYTE PTR ds:0x48b43b2f
  410a7e:	xor    DWORD PTR [eax],0x3f
  410a81:	add    DWORD PTR [eax-0x8502626],edi
  410a87:	popf   
  410a88:	xchg   dl,cl
  410a8a:	ret    
  410a8b:	outs   dx,DWORD PTR ds:[esi]
  410a8c:	add    DWORD PTR [edx+eax*8-0x6f],ebp
  410a90:	mov    edi,DWORD PTR [esi]
  410a92:	add    eax,0x8b68b919
  410a97:	mov    ebx,0xe1eb12bc
  410a9c:	add    DWORD PTR [ebp+0x56],ebp
  410a9f:	pop    esp
  410aa0:	xchg   esp,eax
  410aa1:	jmp    0xd854edc4
  410aa6:	and    DWORD PTR [ecx-0x78c089f7],eax
  410aac:	mov    ecx,0x21a1998
  410ab1:	les    edi,FWORD PTR ds:0xa9eaed6c
  410ab7:	ds mov ecx,0x500dad2b
  410abd:	push   eax
  410abe:	int3   
  410abf:	out    dx,al
  410ac0:	cmp    BYTE PTR [esi+0x4f6b66a0],ch
  410ac6:	loope  0x410b19
  410ac8:	adc    eax,0x83fbea5
  410acd:	scas   eax,DWORD PTR es:[edi]
  410ace:	out    dx,al
  410acf:	cmp    DWORD PTR [ebp-0x56598972],ebp
  410ad5:	sbb    BYTE PTR [ebp-0x2],ah
  410ad8:	ja     0x410b4b
  410ada:	cdq    
  410adb:	lahf   
  410adc:	mov    bl,0x4e
  410ade:	dec    ecx
  410adf:	push   edx
  410ae0:	mov    bh,0x44
  410ae2:	retf   
  410ae3:	or     ebx,eax
  410ae5:	ret    
  410ae6:	sbb    eax,0x3494f77c
  410aeb:	loopne 0x410a82
  410aed:	std    
  410aee:	xor    ebx,DWORD PTR [ebp+0x2d3ee51e]
  410af4:	hlt    
  410af5:	pop    ebx
  410af6:	rcl    DWORD PTR [ecx-0x48772f75],0x3e
  410afd:	mov    al,0xa3
  410aff:	sub    al,bl
  410b01:	push   edi
  410b02:	je     0x410b2f
  410b04:	call   0x8ac55165
  410b09:	pop    edi
  410b0a:	xchg   edi,eax
  410b0b:	cmp    al,0xe1
  410b0d:	out    dx,al
  410b0e:	push   0xffffffb6
  410b10:	daa    
  410b11:	mov    WORD PTR [edx],es
  410b13:	xchg   DWORD PTR [esi+0x1ac153a9],ebx
  410b19:	mov    WORD PTR [edx],?
  410b1b:	cmp    edx,ebx
  410b1d:	and    dh,0xd4
  410b20:	pop    eax
  410b21:	(bad)  
  410b22:	(bad)  
  410b23:	cdq    
  410b24:	cmp    eax,0xe47ff7d3
  410b29:	inc    ebp
  410b2a:	sbb    DWORD PTR [eax-0x24],ebx
  410b2d:	arpl   WORD PTR [ebx+0x26b8385],si
  410b33:	xor    DWORD PTR [eax+0x74],eax
  410b36:	pop    eax
  410b37:	cmp    al,0x45
  410b39:	sbb    BYTE PTR [eax+0x13],dh
  410b3c:	mov    esp,0x62df4700
  410b41:	adc    DWORD PTR [ebx],ecx
  410b43:	xchg   BYTE PTR [ebx+0x3e],al
  410b46:	scas   al,BYTE PTR es:[edi]
  410b47:	mov    dl,0x87
  410b49:	aaa    
  410b4a:	in     al,0x1b
  410b4c:	push   eax
  410b4d:	mov    edx,DWORD PTR [eax-0x17]
  410b50:	retf   0x48e4
  410b53:	mov    dh,0xe4
  410b55:	repz push ss
  410b57:	inc    edx
  410b58:	mov    ecx,0xf01b7421
  410b5d:	dec    ebx
  410b5e:	dec    BYTE PTR [esi+0x732e490d]
  410b64:	or     eax,0xed356ab7
  410b69:	or     ebp,0x47
  410b6c:	sbb    DWORD PTR [edx-0x1d],0xffffffba
  410b70:	rcl    BYTE PTR [ebx+eiz*2+0x1d3392ac],1
  410b77:	ss mov bl,0x37
  410b7a:	(bad)  
  410b7b:	loopne 0x410b19
  410b7d:	fwait
  410b7e:	idiv   DWORD PTR [ecx+0x3e]
  410b81:	out    dx,eax
  410b82:	jo     0x410ba7
  410b84:	(bad)  
  410b85:	jne    0x410b3c
  410b87:	xchg   ebx,eax
  410b88:	jge    0x410bd5
  410b8a:	push   edx
  410b8b:	les    eax,FWORD PTR [ecx-0x45]
  410b8e:	xchg   edx,eax
  410b8f:	xchg   bl,ch
  410b91:	xchg   esi,eax
  410b92:	loope  0x410b3b
  410b94:	push   ebp
  410b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b98:	retf   0xcf50
  410b9b:	out    0x2a,al
  410b9d:	test   DWORD PTR [ebp+0x31],ebx
  410ba0:	pop    edi
  410ba1:	jge    0x410c1a
  410ba3:	repz and al,0x64
  410ba6:	inc    ecx
  410ba7:	inc    edi
  410ba8:	and    ch,BYTE PTR [eax+0x5]
  410bab:	jecxz  0x410bc1
  410bad:	or     bl,BYTE PTR [ecx-0x315d3cd]
  410bb3:	cmp    eax,0x2b6b6b38
  410bb8:	sbb    edi,ecx
  410bba:	sub    al,0x4a
  410bbc:	xchg   ecx,eax
  410bbd:	out    dx,al
  410bbe:	inc    esi
  410bbf:	cld    
  410bc0:	dec    ebx
  410bc1:	jl     0x410b66
  410bc3:	loopne 0x410bc8
  410bc5:	mov    WORD PTR [eax+0x40],?
  410bc8:	pop    edx
  410bc9:	popa   
  410bca:	or     esp,DWORD PTR [edx-0x68]
  410bcd:	pop    ss
  410bce:	and    eax,0x239b8759
  410bd3:	aas    
  410bd4:	dec    ebx
  410bd5:	les    esi,FWORD PTR [esp+eax*4-0x3f]
  410bd9:	aad    0x51
  410bdb:	xchg   edi,eax
  410bdc:	cdq    
  410bdd:	mov    dl,0x69
  410bdf:	cmc    
  410be0:	rcr    bh,1
  410be2:	mov    bl,0x51
  410be4:	xchg   esp,eax
  410be5:	ja     0x410bd1
  410be7:	cmc    
  410be8:	lods   eax,DWORD PTR ds:[esi]
  410be9:	fcom   QWORD PTR [edi+0x13]
  410bec:	pop    eax
  410bed:	push   esp
  410bee:	push   eax
  410bef:	je     0x410b9f
  410bf1:	scas   al,BYTE PTR es:[edi]
  410bf2:	and    ch,bh
  410bf4:	inc    edi
  410bf5:	push   ecx
  410bf6:	dec    ebp
  410bf7:	mov    ds:0x43a16643,al
  410bfc:	or     bh,BYTE PTR [esi+eiz*1+0x24a07547]
  410c03:	cwde   
  410c04:	(bad)  
  410c06:	call   0x4ea7:0x58d16f0a
  410c0d:	cld    
  410c0e:	div    BYTE PTR [ebx+0x19]
  410c11:	push   cs
  410c12:	and    bl,bh
  410c14:	imul   ecx,DWORD PTR [ebx+0xf],0x48
  410c18:	xor    BYTE PTR ds:0x5d645a1,ah
  410c1e:	arpl   WORD PTR ds:0x6a059b8c,bx
  410c24:	imul   ecx,esp,0xf82b29b5
  410c2a:	mov    al,0x1a
  410c2c:	xor    BYTE PTR [esi-0xf55bcf],dl
  410c32:	jae    0x410c72
  410c34:	add    ecx,esp
  410c36:	sbb    eax,0x62b85f2a
  410c3b:	call   0x3128:0xabf42385
  410c42:	and    eax,0x51250124
  410c47:	xor    esp,ecx
  410c49:	retf   
  410c4a:	jmp    FWORD PTR [esi+0x2b]
  410c4d:	push   esi
  410c4e:	les    edx,FWORD PTR [edx-0x2ca11554]
  410c54:	popf   
  410c55:	xor    esp,DWORD PTR [ebp+0x1f259e30]
  410c5b:	sub    eax,0xc1f8e27c
  410c60:	push   eax
  410c61:	inc    ecx
  410c62:	or     edx,ebx
  410c64:	cwde   
  410c65:	cmp    ebp,eax
  410c67:	xor    eax,0xf88d4fc5
  410c6c:	mov    dl,0x6a
  410c6e:	or     eax,0xbecabbe2
  410c73:	repnz mov WORD PTR [eax+0x1cec091c],cs
  410c7a:	add    cl,bh
  410c7c:	gs sbb eax,0xc1ea5d78
  410c82:	mov    ebp,0xd5b7faa6
  410c87:	pop    esi
  410c88:	xchg   ebp,eax
  410c89:	xor    ecx,edi
  410c8b:	push   es
  410c8c:	mov    dl,0xfd
  410c8e:	ins    DWORD PTR es:[edi],dx
  410c8f:	ret    0x755
  410c92:	and    bh,BYTE PTR [ecx+0xd549a93]
  410c98:	inc    esp
  410c99:	xchg   edi,eax
  410c9a:	cmp    eax,0xf9e5e5bf
  410c9f:	mov    edx,ecx
  410ca1:	jnp    0x410c97
  410ca3:	mov    eax,0x79550b79
  410ca8:	lea    edi,[esi]
  410caa:	xlat   BYTE PTR ds:[ebx]
  410cab:	scas   al,BYTE PTR es:[edi]
  410cac:	adc    BYTE PTR [edi+0x13],0xa9
  410cb0:	idiv   bl
  410cb2:	dec    edx
  410cb3:	xor    eax,edi
  410cb5:	out    0x2d,eax
  410cb7:	rol    DWORD PTR [ebp+ecx*4+0x5a],cl
  410cbb:	mov    ecx,ecx
  410cbd:	stos   DWORD PTR es:[edi],eax
  410cbe:	inc    edi
  410cbf:	and    DWORD PTR ss:[ebx+ebx*4-0x6c755143],esi
  410cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc8:	clc    
  410cc9:	clc    
  410cca:	out    0x99,eax
  410ccc:	rol    BYTE PTR [edi-0x5837ee82],1
  410cd2:	inc    eax
  410cd3:	popa   
  410cd4:	jbe    0x410cc9
  410cd6:	fwait
  410cd7:	sub    BYTE PTR [edi],al
  410cd9:	in     eax,dx
  410cda:	call   0x3b95:0xbd0cfee5
  410ce1:	push   esp
  410ce2:	push   edi
  410ce3:	dec    ebx
  410ce4:	(bad)  [ecx]
  410ce6:	(bad)  
  410ce7:	mov    bl,0xe2
  410ce9:	bound  eax,QWORD PTR [edi-0x22]
  410cec:	pop    ebp
  410ced:	inc    DWORD PTR [ebx]
  410cef:	and    ecx,DWORD PTR [ebx-0x76]
  410cf2:	pop    ecx
  410cf3:	sub    eax,0x8fca31b2
  410cf8:	cmp    cl,BYTE PTR [eax+0x3]
  410cfb:	sbb    DWORD PTR [ecx+0x27],esi
  410cfe:	ret    0xc178
  410d01:	mov    al,0x11
  410d03:	and    eax,0x5ae32e1d
  410d08:	icebp  
  410d09:	lahf   
  410d0a:	jle    0x410d0b
  410d0c:	add    DWORD PTR [eax-0x413a189d],ebx
  410d12:	ss loopne 0x410d61
  410d15:	les    esi,FWORD PTR [esi+0x43]
  410d18:	scas   eax,DWORD PTR es:[edi]
  410d19:	mov    gs,esp
  410d1b:	repz pushf 
  410d1d:	sbb    DWORD PTR [edi],0xe
  410d20:	ds add al,0x68
  410d23:	js     0x410d92
  410d25:	popf   
  410d26:	jge    0x410d5a
  410d28:	cld    
  410d29:	add    eax,esi
  410d2b:	in     eax,dx
  410d2c:	sub    eax,DWORD PTR [edi]
  410d2e:	mov    ds:0x93cbd946,al
  410d33:	jno    0x410db4
  410d35:	adc    bl,BYTE PTR [di+0x59]
  410d39:	dec    eax
  410d3a:	arpl   WORD PTR [esi],bx
  410d3c:	retf   0x3cea
  410d3f:	scas   eax,DWORD PTR es:[edi]
  410d40:	add    eax,0xa8ba9615
  410d45:	xlat   BYTE PTR ds:[ebx]
  410d46:	test   BYTE PTR [edi],cl
  410d48:	and    eax,DWORD PTR [eax]
  410d4a:	or     ch,BYTE PTR [ebx-0x65b8ad4f]
  410d50:	int3   
  410d51:	or     ebp,DWORD PTR [eax-0x49ff111b]
  410d57:	outs   dx,DWORD PTR ds:[esi]
  410d58:	fs pop edx
  410d5a:	mov    ?,WORD PTR [edx+0x3c]
  410d5d:	ins    BYTE PTR es:[edi],dx
  410d5e:	add    al,0x48
  410d60:	dec    edx
  410d61:	mov    edi,0x93d0315
  410d66:	shl    DWORD PTR [edx-0x1f],1
  410d69:	shr    DWORD PTR [eax],1
  410d6b:	shl    bl,1
  410d6d:	sub    eax,0x99505377
  410d72:	mov    dh,0x3
  410d74:	and    eax,0x8cd0921a
  410d79:	inc    esp
  410d7a:	jecxz  0x410ddf
  410d7c:	test   BYTE PTR [ebx-0x54],dh
  410d7f:	mov    ds:0x671cef1f,eax
  410d84:	fstp   TBYTE PTR [esi-0x24]
  410d87:	or     DWORD PTR [ebx],esp
  410d89:	dec    ebp
  410d8a:	(bad)  
  410d8b:	mov    eax,0xdc4cd48a
  410d90:	xlat   BYTE PTR ds:[bx]
  410d92:	call   0x730d9ac
  410d97:	popa   
  410d98:	lds    eax,FWORD PTR [esi+0x2cc396a7]
  410d9e:	xchg   ecx,eax
  410d9f:	dec    esi
  410da0:	adc    bh,ah
  410da2:	cmp    BYTE PTR [ebp-0x4f896c56],ch
  410da8:	stc    
  410da9:	cmp    al,0xf9
  410dac:	stos   BYTE PTR es:[edi],al
  410dad:	jle    0x410d42
  410daf:	jne    0x410e2c
  410db1:	sbb    eax,0x86f7220f
  410db6:	fbld   TBYTE PTR [ebx+0x7c10f813]
  410dbc:	jp     0x410d6d
  410dbe:	fldcw  WORD PTR [ebp+0x4bcf03c5]
  410dc4:	mov    cl,BYTE PTR [esi+0x77508533]
  410dca:	dec    esi
  410dcb:	das    
  410dcc:	mov    ah,0xe9
  410dce:	js     0x410d76
  410dd0:	outs   dx,BYTE PTR ds:[esi]
  410dd1:	lock jns 0x410db7
  410dd4:	lods   eax,DWORD PTR ds:[esi]
  410dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dd6:	adc    ecx,DWORD PTR [ebp-0xf]
  410dd9:	out    dx,eax
  410dda:	mov    eax,0x60ebf225
  410ddf:	(bad)  
  410de0:	out    0x30,al
  410de2:	fnstsw WORD PTR [edx+edi*1+0x3e]
  410de6:	xchg   edx,eax
  410de7:	xor    eax,0x5dbb52aa
  410dec:	scas   eax,DWORD PTR es:[edi]
  410ded:	or     ebx,DWORD PTR ss:[edx-0x18]
  410df1:	aas    
  410df2:	fsubr  QWORD PTR [edi]
  410df4:	sub    al,0x92
  410df6:	(bad)  
  410df8:	sub    DWORD PTR [edx+0x6d0023dd],ebx
  410dfe:	and    BYTE PTR [ecx+0x72f3d6b5],cl
  410e04:	xor    DWORD PTR [edx-0x5103a081],0x99555dc
  410e0e:	mov    ds:0x84ac704d,al
  410e13:	int    0xc5
  410e15:	loop   0x410dd9
  410e17:	jmp    0x410e8a
  410e19:	dec    esi
  410e1a:	(bad)  
  410e1b:	retf   
  410e1c:	les    ebp,FWORD PTR [ecx]
  410e1e:	or     DWORD PTR [ebx+0x27],ecx
  410e21:	and    BYTE PTR [esi-0x19cd0741],al
  410e27:	sub    eax,0x7fc0b899
  410e2c:	sti    
  410e2d:	outs   dx,BYTE PTR ds:[esi]
  410e2e:	ss leave 
  410e30:	icebp  
  410e31:	mov    bl,0x74
  410e33:	test   BYTE PTR [esi],ah
  410e35:	push   es
  410e36:	mov    dh,0xc6
  410e38:	mov    esi,0x2d60a177
  410e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e3e:	lods   al,BYTE PTR ds:[esi]
  410e3f:	push   ecx
  410e40:	ret    0x72dd
  410e43:	and    al,0x96
  410e45:	push   eax
  410e46:	dec    eax
  410e47:	bound  ebx,QWORD PTR [edx-0x17]
  410e4a:	cmp    eax,0x6ba8d66e
  410e4f:	mov    bl,0x74
  410e51:	inc    edi
  410e52:	jmp    0xa5412a5d
  410e57:	(bad)  
  410e58:	jne    0x410e47
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	fucomi st,st(7)
  410e5d:	(bad)  
  410e5e:	(bad)  
  410e5f:	cli    
  410e60:	cwde   
  410e61:	jle    0x410e1b
  410e63:	imul   ebp,DWORD PTR [esi],0xffffffce
  410e66:	dec    ebx
  410e67:	xor    esp,DWORD PTR [eax]
  410e69:	int    0x49
  410e6b:	pop    ds
  410e6c:	ror    DWORD PTR [ebx+0x6f],cl
  410e6f:	addr16 xchg ebp,eax
  410e71:	pop    esi
  410e72:	pop    edi
  410e73:	inc    ebx
  410e74:	nop
  410e75:	fsubr  st(6),st
  410e77:	sbb    bl,BYTE PTR [edx+0x221ad88]
  410e7d:	xchg   DWORD PTR [ecx-0x37e225fa],esp
  410e83:	retf   
  410e84:	or     eax,0xa4f0ea8d
  410e89:	pop    ebp
  410e8a:	shl    DWORD PTR [ebx+edi*1],0x11
  410e8e:	mov    eax,ds:0x5651e5d4
  410e93:	jns    0x410e83
  410e95:	push   esi
  410e96:	out    0x3d,al
  410e98:	jno    0x410ebd
  410e9a:	daa    
  410e9b:	mov    DWORD PTR [eax],edx
  410e9d:	fwait
  410e9e:	int3   
  410e9f:	daa    
  410ea0:	out    0xe9,eax
  410ea2:	sub    esi,eax
  410ea4:	shr    bh,cl
  410ea6:	fimul  DWORD PTR [ecx-0x710490e7]
  410eac:	ins    BYTE PTR es:[edi],dx
  410ead:	jmp    0x766e:0x3ee4973
  410eb4:	xchg   ebx,eax
  410eb5:	mov    ebx,0x71a19193
  410eba:	ret    0x3319
  410ebd:	(bad)  
  410ebe:	sub    al,0x9b
  410ec0:	mov    esi,0x816cf729
  410ec5:	rcl    DWORD PTR [ecx+0x3cf48c2b],cl
  410ecb:	pop    eax
  410ecc:	add    BYTE PTR [edx+ebp*8],cl
  410ecf:	xchg   ah,ch
  410ed1:	mov    esi,0xdd8cc202
  410ed6:	xchg   ebx,eax
  410ed7:	icebp  
  410ed8:	cld    
  410ed9:	mov    edi,0xe6e158fa
  410ede:	mov    dl,0x6e
  410ee0:	cs jmp 0x410ece
  410ee3:	pop    ds
  410ee4:	pop    esp
  410ee5:	popf   
  410ee6:	xor    DWORD PTR [eax-0x1f],esi
  410ee9:	(bad)  [esi]
  410eeb:	push   cs
  410eec:	sub    ebx,edi
  410eee:	mov    edi,0x13b04d81
  410ef3:	shl    BYTE PTR [eax+0x2b],cl
  410ef6:	jmp    0x410f77
  410ef8:	jmp    0xc944:0x3a704b8d
  410eff:	fsub   DWORD PTR [esi]
  410f01:	aas    
  410f02:	xchg   edi,eax
  410f03:	aad    0x60
  410f05:	aaa    
  410f06:	xor    al,0x54
  410f08:	(bad)
  410f0b:	or     eax,0xa7d57b2d
  410f10:	ins    BYTE PTR es:[edi],dx
  410f11:	sbb    al,0xab
  410f13:	mov    edi,0xc477e458
  410f18:	jecxz  0x410eeb
  410f1a:	mov    al,ds:0x8e43863a
  410f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f20:	mov    edi,0xd77f4da0
  410f25:	adc    BYTE PTR [edi+ebp*2],0xbc
  410f29:	or     al,BYTE PTR [esi-0x30]
  410f2c:	or     eax,0xd9557222
  410f31:	pop    ebp
  410f32:	ss or  al,0xe5
  410f35:	fidivr DWORD PTR ds:0x643443bc
  410f3b:	push   edx
  410f3c:	lea    ebx,[eax-0x5b]
  410f3f:	cmp    BYTE PTR [edi-0x6],bl
  410f42:	mov    bh,0x11
  410f44:	inc    edi
  410f45:	xor    al,0x4e
  410f47:	lea    ecx,[esi]
  410f49:	sbb    DWORD PTR [edi+0x7a],edx
  410f4c:	push   0xb1d66cb5
  410f51:	xor    DWORD PTR [eax],esp
  410f53:	int3   
  410f54:	cwde   
  410f55:	pusha  
  410f56:	mov    edx,0x9957c01c
  410f5b:	mov    al,0xee
  410f5d:	jbe    0x410f4c
  410f5f:	and    eax,0x45438694
  410f64:	in     al,0x7b
  410f66:	xor    eax,0x9
  410f69:	and    al,0xa6
  410f6b:	nop
  410f6c:	push   eax
  410f6d:	mov    edx,0x3dd60231
  410f72:	xlat   BYTE PTR ds:[ebx]
  410f73:	cwde   
  410f74:	shr    BYTE PTR [edx-0x1d],0x1
  410f78:	xchg   BYTE PTR [esi+0x61],dl
  410f7b:	sub    al,al
  410f7d:	xlat   BYTE PTR ds:[ebx]
  410f7e:	or     ecx,DWORD PTR [ecx-0x15418895]
  410f84:	gs or  bh,0xca
  410f88:	push   ds
  410f89:	or     DWORD PTR [edx],eax
  410f8b:	mov    eax,0xd034d5ad
  410f90:	mov    ds:0xabf4ab5b,eax
  410f95:	das    
  410f96:	sahf   
  410f97:	test   al,0x90
  410f99:	dec    ebp
  410f9a:	clc    
  410f9b:	dec    esp
  410f9c:	mov    dh,0x1c
  410f9e:	jecxz  0x410f4b
  410fa0:	mov    al,ds:0x4d64ccf
  410fa5:	and    eax,DWORD PTR [edx+0x7d]
  410fa8:	xchg   edx,eax
  410fa9:	mov    ch,0x2a
  410fab:	push   0xffffffcc
  410fad:	in     eax,0xbc
  410faf:	push   esi
  410fb0:	fistp  QWORD PTR [ecx]
  410fb2:	imul   eax,DWORD PTR [eax+0x3349b7f6],0x24
  410fb9:	test   al,0x83
  410fbb:	cs int 0xdc
  410fbe:	out    dx,eax
  410fbf:	xchg   edi,eax
  410fc0:	sub    DWORD PTR [ebx-0x76],esp
  410fc3:	not    DWORD PTR [ecx]
  410fc5:	add    DWORD PTR [ebx+0xd],esp
  410fc8:	prefetcht2 BYTE PTR [ebx]
  410fcb:	cmp    cl,BYTE PTR [ecx+0x1098824b]
  410fd1:	jb     0x411017
  410fd3:	push   edi
  410fd4:	dec    edi
  410fd5:	xor    al,0x16
  410fd7:	ret    0x32ea
  410fda:	cmp    ebx,ebp
  410fdc:	cwde   
  410fdd:	push   esi
  410fde:	mov    edx,0xdd8e7bab
  410fe3:	lock mov ebx,0xb672310e
  410fe9:	cmp    al,0x27
  410feb:	aad    0xf4
  410fed:	xchg   edi,eax
  410fee:	bound  edi,QWORD PTR [ebx]
  410ff0:	adc    cl,BYTE PTR [edi+0x3f]
  410ff3:	(bad)  
  410ff4:	icebp  
  410ff5:	pop    esp
  410ff6:	sbb    cl,ah
  410ff8:	rol    BYTE PTR [ebx],1
  410ffa:	ja     0x41105a
  410ffc:	pop    es
  410ffd:	call   0xef95fea7
  411002:	aaa    
  411003:	fst    QWORD PTR [edi+0x33]
  411006:	and    DWORD PTR [eax+edx*8],0x5
  41100a:	icebp  
  41100b:	sbb    eax,0xe301927c
  411010:	pusha  
  411011:	xchg   ebp,eax
  411012:	xor    eax,0xefbd9bc0
  411017:	int    0xcc
  411019:	add    eax,0xf80f1e6b
  41101e:	pop    ecx
  41101f:	sbb    edx,DWORD PTR [ecx]
  411021:	dec    ebx
  411022:	jns    0x411067
  411024:	out    dx,eax
  411025:	in     eax,dx
  411026:	sbb    eax,0xa7139971
  41102b:	rol    DWORD PTR [ebp-0x6d2d42aa],0xbe
  411032:	mov    dh,0x84
  411034:	pop    edi
  411035:	add    esi,ebp
  411037:	ja     0x410fcf
  411039:	add    eax,0xcaeaa047
  41103e:	push   0xffffffb5
  411040:	mov    esp,0x90fdf550
  411045:	arpl   WORD PTR [ecx],cx
  411047:	cld    
  411048:	icebp  
  411049:	sub    DWORD PTR [edi],ebx
  41104b:	xlat   BYTE PTR ds:[ebx]
  41104c:	inc    esp
  41104d:	pushf  
  41104e:	push   es
  41104f:	mov    ebp,0x509a0f05
  411054:	ja     0x41102c
  411056:	imul   edi,DWORD PTR [eax+0x4b1a042],0x97cb1470
  411060:	sbb    edi,DWORD PTR [edx]
  411062:	add    ebx,DWORD PTR [edx-0x16b2908c]
  411068:	pop    ss
  411069:	xor    BYTE PTR [ebx-0x603ed16f],dh
  41106f:	lods   al,BYTE PTR ds:[esi]
  411070:	sbb    dh,BYTE PTR [esi]
  411072:	push   esi
  411073:	cmp    bl,BYTE PTR [edi]
  411075:	jg     0x411080
  411077:	iret   
  411078:	inc    esp
  411079:	cmc    
  41107a:	test   BYTE PTR [edx+0x33],cl
  41107d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107e:	xchg   edi,eax
  41107f:	push   ecx
  411080:	inc    eax
  411081:	adc    DWORD PTR [ebp+0x63],edi
  411084:	lea    eax,[edx+eiz*2]
  411087:	push   ss
  411088:	xchg   BYTE PTR [edx],dh
  41108a:	cs in  eax,dx
  41108c:	xor    ebx,edx
  41108e:	xor    al,BYTE PTR [edi-0x75]
  411091:	dec    edx
  411092:	dec    ecx
  411093:	hlt    
  411094:	jge    0x411026
  411096:	add    eax,0xcdc392ca
  41109b:	add    esi,0x95662072
  4110a1:	pop    edi
  4110a2:	hlt    
  4110a3:	aam    0xea
  4110a5:	in     eax,0xdd
  4110a7:	mov    bl,0x26
  4110a9:	in     ax,dx
  4110ab:	in     eax,dx
  4110ac:	(bad)
  4110af:	nop
  4110b0:	jnp    0x4110c7
  4110b2:	sbb    al,0x8c
  4110b4:	das    
  4110b5:	in     eax,0x38
  4110b7:	pushf  
  4110b8:	dec    eax
  4110b9:	retfw  
  4110bb:	rcl    DWORD PTR [ebx+ebx*8-0x1a],1
  4110bf:	outs   dx,BYTE PTR ds:[esi]
  4110c0:	dec    eax
  4110c1:	popa   
  4110c2:	adc    ebx,DWORD PTR [ebx+0x64027790]
  4110c8:	or     eax,0x52a9b6d2
  4110cd:	sbb    BYTE PTR [eax+0x33],ah
  4110d0:	xor    al,0xe
  4110d2:	xchg   edi,eax
  4110d3:	aaa    
  4110d4:	jg     0x4110a5
  4110d6:	or     DWORD PTR [ecx],edi
  4110d8:	mov    es,WORD PTR [edx+0x5b455886]
  4110de:	push   edx
  4110df:	jmp    0x41107b
  4110e1:	por    mm1,QWORD PTR [edx+0x39228003]
  4110e8:	dec    esp
  4110e9:	cmp    al,0x33
  4110eb:	adc    al,0x30
  4110ed:	stos   DWORD PTR es:[edi],eax
  4110ee:	sub    dh,BYTE PTR [ebx+0x22]
  4110f1:	aam    0xff
  4110f3:	addr16 and eax,0xfc65fc83
  4110f9:	ins    DWORD PTR es:[edi],dx
  4110fa:	pop    eax
  4110fb:	push   ss
  4110fc:	in     al,dx
  4110fd:	lods   al,BYTE PTR ds:[esi]
  4110fe:	fldenv [ecx-0x61]
  411101:	pop    ebp
  411102:	push   0x9bc52a0f
  411107:	mov    al,0x1d
  411109:	retf   0x579f
  41110c:	cmp    al,0x6e
  41110e:	sub    al,0x5
  411110:	call   0x9f5d:0xb05be1b5
  411117:	lahf   
  411118:	gs dec ebp
  41111a:	fs inc edx
  41111c:	push   ss
  41111d:	fst    st(1)
  41111f:	sub    eax,0x93cfb0c7
  411124:	push   es
  411125:	sub    al,0xae
  411127:	inc    edi
  411128:	int3   
  411129:	or     ch,BYTE PTR [esi-0x66]
  41112c:	ret    0xda30
  41112f:	addr16 mov edi,0xc1f97022
  411135:	or     eax,0x5af4ce1c
  41113a:	sub    ebp,esp
  41113c:	gs dec esi
  41113e:	xlat   BYTE PTR ds:[ebx]
  41113f:	dec    esp
  411140:	xchg   edi,eax
  411141:	and    DWORD PTR ds:0xfdd3d3ef,edi
  411147:	xchg   esp,eax
  411148:	mov    bh,0x2d
  41114a:	mov    edi,esi
  41114c:	sub    eax,0x9ca28326
  411151:	add    DWORD PTR [ecx],ebp
  411153:	data16 or al,0x6d
  411156:	shr    BYTE PTR [ecx],0xc0
  411159:	pop    es
  41115a:	aam    0x89
  41115c:	xchg   esp,eax
  41115d:	mov    dh,0xe9
  41115f:	xor    ecx,DWORD PTR ds:0x33c7d07e
  411165:	lods   eax,DWORD PTR ds:[esi]
  411166:	cmc    
  411167:	(bad)  
  411168:	push   ss
  411169:	cmp    edi,edx
  41116b:	lea    edx,[edx+0x50138cf6]
  411171:	lods   al,BYTE PTR ds:[esi]
  411172:	mov    DWORD PTR [edi],esi
  411174:	xchg   esi,eax
  411175:	out    dx,al
  411176:	xchg   ecx,eax
  411177:	mov    eax,ds:0xa37e9422
  41117c:	(bad)  
  41117d:	scas   al,BYTE PTR es:[edi]
  41117e:	xchg   DWORD PTR [esi+0x14ced4a],edx
  411184:	or     BYTE PTR es:[ebx-0xc90db00],bh
  41118b:	rcl    al,cl
  41118d:	sti    
  41118e:	mov    eax,ds:0xa81a3255
  411193:	jne    0x4111b6
  411195:	push   eax
  411196:	loope  0x411190
  411198:	or     DWORD PTR [ecx+ebx*1],ebp
  41119b:	dec    ebp
  41119c:	mov    cl,dh
  41119e:	(bad)  
  41119f:	retf   
  4111a0:	test   al,0x7e
  4111a2:	fisttp WORD PTR [esi]
  4111a4:	add    BYTE PTR [eax],al
  4111a6:	sbb    ebx,edx
  4111a8:	call   0x34cc:0x8cceeccf
  4111af:	das    
  4111b0:	jnp    0x411172
  4111b2:	pop    eax
  4111b3:	fwait
  4111b4:	sub    dl,al
  4111b6:	inc    edi
  4111b7:	mov    ch,0x9c
  4111b9:	outs   dx,DWORD PTR ds:[esi]
  4111ba:	adc    ebx,ebx
  4111bc:	(bad)  
  4111bd:	es push ebx
  4111bf:	jno    0x4111aa
  4111c1:	adc    DWORD PTR ss:[esi-0x1a],esi
  4111c5:	ss pop esi
  4111c7:	enter  0x9c81,0x78
  4111cb:	fldcw  WORD PTR [edx-0x1d]
  4111ce:	adc    DWORD PTR [ebx],esp
  4111d0:	mov    ebx,0xdd1dfa0d
  4111d5:	sub    DWORD PTR [ebx],0xfffffffb
  4111d8:	mov    al,dl
  4111da:	ret    0xaf0f
  4111dd:	sub    al,0xe6
  4111df:	fisttp WORD PTR [ebp+ebx*8-0x2]
  4111e3:	pop    eax
  4111e4:	add    DWORD PTR [ebp-0x5f],edi
  4111e7:	or     edi,DWORD PTR [esi+0x5e8015f5]
  4111ed:	sub    eax,0xd6142c13
  4111f2:	jno    0x41121a
  4111f4:	inc    edx
  4111f5:	hlt    
  4111f6:	pop    edx
  4111f7:	dec    ebp
  4111f8:	fwait
  4111f9:	xor    edx,DWORD PTR [ecx-0x1cb758c]
  4111ff:	iret   
  411200:	push   ecx
  411201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411202:	enter  0xc869,0x43
  411206:	or     DWORD PTR [ebp+0x6eae5d1b],ebp
  41120c:	das    
  41120d:	mov    dh,0x5e
  41120f:	retf   
  411210:	and    eax,0xb91fd11
  411215:	jno    0x4111cb
  411217:	bound  ecx,QWORD PTR [eax+0x2e]
  41121a:	mov    bh,0x41
  41121c:	sub    al,0x27
  41121e:	adc    dl,ch
  411220:	mov    edx,0x9d1760e0
  411225:	frstor ds:0x2aa259ae
  41122b:	pushf  
  41122c:	jmp    0xbea3:0x332d5058
  411233:	jge    0x4111df
  411235:	gs dec ebp
  411237:	jno    0x4111cb
  411239:	pop    ebp
  41123a:	test   al,0xbf
  41123c:	push   edx
  41123d:	xor    al,cl
  41123f:	leave  
  411240:	fistp  DWORD PTR [esi+0x5]
  411243:	les    ecx,FWORD PTR [ecx+edi*4+0x60]
  411247:	popf   
  411248:	shl    BYTE PTR [esi+ebp*2],cl
  41124b:	outs   dx,BYTE PTR ds:[esi]
  41124c:	ret    0x8c6e
  41124f:	(bad)  
  411250:	out    dx,eax
  411251:	dec    esp
  411252:	push   0xffffffe0
  411254:	call   0x61e8:0x6402c5ef
  41125b:	aam    0xce
  41125d:	push   0x3134fb93
  411262:	and    edx,esp
  411264:	mov    ecx,DWORD PTR [ecx+0x1d6d23]
  41126a:	pop    ebx
  41126b:	mov    DWORD PTR [ebp+0x12],0x482b1369
  411272:	dec    esi
  411273:	xor    eax,0xd061658c
  411278:	mov    al,ds:0xb0c11469
  41127d:	out    dx,al
  41127e:	frstor [edx]
  411280:	leave  
  411281:	dec    esi
  411282:	aad    0xcc
  411284:	retf   
  411285:	nop
  411286:	fisttp DWORD PTR ss:[eax+0x1af89097]
  41128d:	nop
  41128e:	test   ah,dl
  411290:	hlt    
  411291:	push   edx
  411292:	pop    edi
  411293:	mov    ebx,DWORD PTR [eax+0x45d277d]
  411299:	imul   ebx,ecx,0xffffffae
  41129c:	mov    DWORD PTR [edx],eax
  41129e:	and    eax,0x53b42615
  4112a3:	imul   eax,DWORD PTR [edx+ebp*1],0xe8bd1761
  4112aa:	dec    ebx
  4112ab:	pop    eax
  4112ac:	cmp    ah,BYTE PTR [edx]
  4112ae:	inc    ebx
  4112af:	pop    ebx
  4112b0:	or     dl,BYTE PTR [edi+0x38]
  4112b3:	dec    ebx
  4112b4:	lock call 0xb1224fed
  4112ba:	repnz push 0x44ef71ff
  4112c0:	inc    ebp
  4112c1:	rcl    DWORD PTR [ebx-0x58],0xe7
  4112c5:	mov    dx,WORD PTR [edx+edi*4+0x7e]
  4112ca:	rol    BYTE PTR [edx],0x6f
  4112cd:	gs aas 
  4112cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d0:	je     0x4112ff
  4112d2:	push   ebp
  4112d3:	pop    esi
  4112d4:	aam    0x2d
  4112d6:	jns    0x411336
  4112d8:	cli    
  4112d9:	push   edi
  4112da:	inc    edi
  4112db:	dec    edx
  4112dc:	enter  0x3a83,0x54
  4112e0:	pop    edx
  4112e1:	scas   eax,DWORD PTR es:[edi]
  4112e2:	nop
  4112e3:	cmp    al,BYTE PTR [ebx]
  4112e5:	fistp  DWORD PTR cs:0x897f9cc0
  4112ec:	fiadd  WORD PTR ds:0xd8084737
  4112f2:	gs bswap ecx
  4112f5:	xchg   ecx,eax
  4112f6:	div    DWORD PTR [ebx+0x4cd818ce]
  4112fc:	xchg   edx,eax
  4112fd:	mov    dl,0xff
  4112ff:	push   es
  411300:	xor    ebx,0x9d3e7f0c
  411306:	(bad)  
  411307:	les    ebx,FWORD PTR [edi-0x67]
  41130a:	cmp    cl,BYTE PTR [esi-0x6e]
  41130d:	sahf   
  41130e:	push   edi
  41130f:	xlat   BYTE PTR ds:[ebx]
  411310:	push   0xffffff91
  411312:	jge    0x4112bc
  411314:	jmp    0x4112e7
  411316:	es xor al,0xab
  411319:	sub    DWORD PTR [ebx],esp
  41131b:	pop    es
  41131c:	inc    esp
  41131d:	fistp  DWORD PTR [esi]
  41131f:	sub    al,0xd3
  411321:	mov    eax,0xabf8dea8
  411326:	scas   al,BYTE PTR es:[edi]
  411327:	lea    edi,[esi]
  411329:	jecxz  0x4113a1
  41132b:	inc    eax
  41132c:	jno    0x4112d6
  41132e:	dec    ebx
  41132f:	dec    ebx
  411330:	pop    edx
  411331:	retf   
  411332:	pop    esp
  411333:	jns    0x4112c7
  411335:	stos   BYTE PTR es:[edi],al
  411336:	pop    es
  411337:	iret   
  411338:	aaa    
  411339:	and    dh,BYTE PTR [edx]
  41133b:	mov    ebp,eax
  41133d:	jg     0x4112db
  41133f:	stc    
  411340:	mov    esp,0xa4f7a52f
  411345:	cld    
  411346:	xchg   edx,eax
  411347:	jp     0x411301
  411349:	int3   
  41134a:	add    al,BYTE PTR [eax-0x9]
  41134d:	pop    ds
  41134e:	stos   DWORD PTR es:[edi],eax
  41134f:	push   es
  411350:	ins    DWORD PTR es:[edi],dx
  411351:	and    edx,DWORD PTR [edx+0x3]
  411354:	(bad)  
  411356:	push   0xf0692279
  41135b:	mov    ds,WORD PTR [eax+0x1e8a63a4]
  411361:	scas   eax,DWORD PTR es:[edi]
  411362:	fsub   st(7),st
  411364:	inc    ebp
  411365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411366:	xor    eax,0x50cb2141
  41136b:	push   ebp
  41136c:	xchg   ebx,eax
  41136d:	dec    edi
  41136e:	retf   0x3cf6
  411371:	xchg   BYTE PTR [eax-0x11d129f],bh
  411377:	push   eax
  411378:	repz adc esi,eax
  41137b:	das    
  41137c:	xchg   ebx,eax
  41137d:	in     al,dx
  41137e:	lea    esi,[esi+0x171bcb4f]
  411384:	jmp    0x50ba09a
  411389:	mov    edx,DWORD PTR [edi+0x57]
  41138c:	mov    edi,edi
  41138e:	(bad)  
  41138f:	mov    edx,0x2d3736ef
  411394:	pop    edi
  411395:	ret    0xa0f5
  411398:	lock sub edx,DWORD PTR [ebx+0x2413e41d]
  41139f:	jmp    0x411415
  4113a1:	aad    0x89
  4113a3:	jo     0x4113d6
  4113a5:	lods   al,BYTE PTR fs:[esi]
  4113a7:	int    0x24
  4113a9:	sbb    eax,0xaf8561d5
  4113ae:	and    dh,BYTE PTR [esi-0x6847e510]
  4113b4:	mov    dh,0xa
  4113b6:	int    0x5f
  4113b8:	les    eax,FWORD PTR [ebx-0x1fb3e835]
  4113be:	add    BYTE PTR [esi-0x46],ah
  4113c1:	(bad)  
  4113c2:	lock test BYTE PTR ds:0x4935e391,dh
  4113c9:	or     edx,DWORD PTR [edi]
  4113cb:	mov    ebx,0x6dbc9488
  4113d0:	int3   
  4113d1:	xchg   ebp,eax
  4113d2:	outs   dx,BYTE PTR ds:[esi]
  4113d3:	jl     0x4113a4
  4113d5:	imul   ebx,DWORD PTR [esi-0x3d],0x52
  4113d9:	or     DWORD PTR [ebx+0x5c],ebp
  4113dc:	outs   dx,DWORD PTR ds:[esi]
  4113dd:	aam    0xe0
  4113df:	imul   eax,eax,0x838db56d
  4113e5:	sub    BYTE PTR ds:0x18dd7cc3,cl
  4113eb:	stos   DWORD PTR es:[edi],eax
  4113ec:	mov    ds:0xd4e63edd,al
  4113f1:	std    
  4113f2:	add    DWORD PTR [eax],ebx
  4113f4:	fmul   DWORD PTR [ebp+edx*1-0x27]
  4113f8:	pop    ecx
  4113fa:	dec    ebx
  4113fb:	mov    al,ds:0xcc530961
  411400:	imul   ebx,DWORD PTR [ebx-0xe],0x91a9b006
  411407:	sbb    al,0x86
  411409:	xor    eax,DWORD PTR ds:0xbd7167c2
  41140f:	popa   
  411410:	xchg   edx,eax
  411411:	jnp    0x411403
  411413:	fnstenv ds:0xbe1b7e4
  411419:	test   DWORD PTR ds:0xea1975cb,esi
  41141f:	jmp    0xdc90:0x999f7605
  411426:	and    al,BYTE PTR [ecx+edx*8+0x42aef157]
  41142d:	test   DWORD PTR [eax-0x32cd7f0c],edi
  411433:	and    DWORD PTR [ebp+ebx*4-0x6b],esp
  411437:	sub    esp,eax
  411439:	sbb    bl,BYTE PTR [eax+ecx*4]
  41143c:	jno    0x411421
  41143e:	jne    0x4113f4
  411440:	arpl   WORD PTR [edi],di
  411442:	mov    bh,BYTE PTR [esi+ebx*2-0x1]
  411446:	ret    0xcc19
  411449:	ins    BYTE PTR es:[edi],dx
  41144a:	fidiv  WORD PTR [edx-0x2d]
  41144d:	ss (bad) 
  41144f:	jmp    0xd5f1:0x14dc98fb
  411456:	xchg   DWORD PTR [ebx+eax*4],ebx
  411459:	jae    0x411491
  41145b:	sub    esp,DWORD PTR [edi-0x15]
  41145e:	pushf  
  41145f:	dec    ecx
  411460:	add    al,0x2d
  411462:	cmp    eax,0x2795fde1
  411467:	fst    DWORD PTR [eax+0xc78946f]
  41146d:	in     eax,dx
  41146e:	jecxz  0x411415
  411470:	cmp    BYTE PTR [ecx+ecx*1+0x1a24362d],ah
  411477:	xor    al,0x26
  411479:	fnstenv [ebx]
  41147b:	stos   DWORD PTR es:[edi],eax
  41147c:	dec    eax
  41147d:	stc    
  41147e:	stos   BYTE PTR es:[edi],al
  41147f:	cmp    BYTE PTR [ebx-0x45],dh
  411482:	or     dh,0x47
  411485:	adc    dl,BYTE PTR ds:[esi]
  411488:	test   eax,0xc6bf407c
  41148d:	cli    
  41148e:	aad    0xb5
  411490:	mov    al,gs:0xe1b63496
  411496:	mov    bl,BYTE PTR [ebp-0x6cd5df67]
  41149c:	pop    ds
  41149d:	sar    DWORD PTR [edx+0x79],cl
  4114a0:	add    ebp,DWORD PTR [eax]
  4114a2:	dec    edi
  4114a3:	pop    ebp
  4114a4:	imul   ecx,DWORD PTR [eax+0x61],0xa40723e
  4114ab:	popa   
  4114ac:	adc    eax,ebp
  4114ae:	xchg   esi,eax
  4114af:	fidivr DWORD PTR [ebp-0x7de54d7c]
  4114b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b6:	jle    0x4114db
  4114b8:	inc    DWORD PTR [eax+0x5b]
  4114bb:	push   esi
  4114bc:	jns    0x411464
  4114be:	imul   esp,DWORD PTR [eax+0x5d],0x2
  4114c2:	dec    edx
  4114c3:	mov    bh,0x96
  4114c5:	fadd   DWORD PTR [edi+edx*1+0x1c]
  4114c9:	pop    esi
  4114ca:	inc    edx
  4114cb:	imul   ebx,DWORD PTR [ebp-0x5f],0xffffffe7
  4114cf:	cdq    
  4114d0:	repz add al,0xa2
  4114d3:	inc    esp
  4114d4:	mov    cl,0x7d
  4114d6:	jo     0x411467
  4114d8:	pop    esi
  4114d9:	fdivr  st,st(6)
  4114db:	pop    edx
  4114dc:	aad    0x95
  4114de:	lods   eax,DWORD PTR ds:[esi]
  4114df:	mov    bl,0xc8
  4114e1:	sub    eax,0x38ade94f
  4114e6:	mov    BYTE PTR [ebp-0x77de4d3f],cl
  4114ec:	mov    gs,edx
  4114ee:	add    al,0x97
  4114f0:	inc    edx
  4114f1:	cmp    al,0xb9
  4114f3:	cmp    edi,DWORD PTR [ebp-0x6c17af25]
  4114f9:	fmul   DWORD PTR [eax]
  4114fb:	test   eax,0x3ec5be87
  411500:	mov    WORD PTR [ebx+0x4e],fs
  411503:	sub    al,0x3
  411505:	(bad)  
  411506:	jmp    0x66e5be27
  41150b:	gs mov cl,ah
  41150e:	cs sub dl,cl
  411511:	in     eax,0x7
  411513:	nop
  411514:	nop
  411515:	inc    ecx
  411516:	(bad)  
  411517:	mov    edi,0xe938c803
  41151c:	call   0xd0054524
  411521:	inc    ebx
  411522:	sbb    dh,bl
  411524:	pop    ebx
  411525:	enter  0xb108,0x5b
  411529:	cmovbe ebx,DWORD PTR [ecx]
  41152c:	push   ecx
  41152d:	lea    ebx,[edx+0x5e]
  411530:	dec    esp
  411531:	sbb    BYTE PTR [eax-0x48],dh
  411534:	and    al,0x5e
  411536:	and    ebx,ecx
  411538:	mov    ebx,0x1f418ee4
  41153d:	push   edx
  41153e:	mov    ?,WORD PTR [esi+0x1a]
  411541:	xchg   esp,eax
  411542:	into   
  411543:	sbb    al,0xa
  411545:	push   ebx
  411546:	push   ss
  411547:	sbb    DWORD PTR [ebx+edx*4+0x65],edx
  41154b:	cmp    cl,BYTE PTR ds:0xe139caeb
  411551:	or     dl,BYTE PTR [ebx+0x5a]
  411554:	popa   
  411555:	fld    st(7)
  411557:	loopne 0x411516
  411559:	into   
  41155a:	leave  
  41155b:	sub    eax,0x877567ad
  411560:	aad    0x4e
  411562:	inc    esi
  411563:	jbe    0x41156f
  411565:	(bad)  
  411566:	lods   eax,DWORD PTR ds:[esi]
  411567:	jae    0x4115a8
  411569:	test   eax,0x54b15142
  41156e:	lahf   
  41156f:	pop    ebp
  411570:	int    0x9b
  411572:	out    dx,al
  411573:	pusha  
  411574:	out    0xfe,al
  411576:	mov    esp,0xf7da4a75
  41157b:	dec    edi
  41157c:	pop    esi
  41157d:	adc    BYTE PTR [ecx],dl
  41157f:	or     edx,edi
  411581:	dec    ebp
  411582:	fldcw  WORD PTR [bx+si-0x5b]
  411586:	mov    ecx,0xb28d8d66
  41158b:	push   ecx
  41158c:	fdivr  st,st(3)
  41158e:	fwait
  41158f:	test   dh,dl
  411591:	dec    ebx
  411592:	mov    dl,0xcb
  411594:	push   esi
  411595:	mov    eax,ds:0x49713b89
  41159a:	push   ecx
  41159b:	adc    eax,DWORD PTR [eax+esi*2]
  41159e:	mov    al,0xe7
  4115a0:	xor    BYTE PTR [ebx-0x4b88417],cl
  4115a6:	mov    edi,0x8e716e6
  4115ab:	inc    ebp
  4115ac:	imul   edi
  4115ae:	push   ecx
  4115af:	jnp    0x4115c6
  4115b1:	inc    ecx
  4115b2:	pop    edx
  4115b3:	repnz retf 
  4115b5:	inc    eax
  4115b6:	fs push esp
  4115b8:	scas   eax,DWORD PTR es:[edi]
  4115b9:	scas   al,BYTE PTR es:[edi]
  4115ba:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115bc:	test   DWORD PTR [ebp+0x17ab4a27],eax
  4115c2:	sbb    al,0x89
  4115c4:	stos   BYTE PTR es:[edi],al
  4115c5:	scas   al,BYTE PTR es:[edi]
  4115c6:	adc    al,BYTE PTR [ebx]
  4115c8:	sti    
  4115c9:	std    
  4115ca:	cs call 0x224b9d4b
  4115d0:	cli    
  4115d1:	xor    edi,DWORD PTR [edx+0x1a219a49]
  4115d7:	sub    eax,0xadbc8a95
  4115dc:	xchg   ecx,eax
  4115dd:	nop
  4115de:	sub    DWORD PTR [ebx],ebx
  4115e0:	mov    esp,0x90d75abb
  4115e5:	cmp    edx,esp
  4115e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115e8:	add    edi,DWORD PTR [eax+0x1c]
  4115eb:	rol    DWORD PTR [ebx+0x1c],cl
  4115ee:	imul   edx,DWORD PTR [edx+0x7c],0x2a3cad1c
  4115f5:	(bad)  
  4115f6:	scas   eax,DWORD PTR es:[edi]
  4115f7:	call   0x31f0:0x9fa985af
  4115fe:	sbb    eax,0x9066ab46
  411603:	lock inc sp
  411606:	adc    DWORD PTR ds:0xa9cef1cc,edi
  41160c:	or     bl,al
  41160e:	xchg   edi,eax
  41160f:	mov    WORD PTR [ebx-0x53],?
  411612:	and    edx,DWORD PTR [eax-0x18]
  411615:	fldcw  WORD PTR [edx+0x52b53e1b]
  41161b:	mov    al,ds:0x19268e3b
  411620:	add    ebx,DWORD PTR [eax]
  411622:	repz mov cl,0x86
  411625:	int    0x5f
  411627:	adc    esp,DWORD PTR [edi+0x21]
  41162a:	mov    edx,0xc3425e85
  41162f:	stos   DWORD PTR es:[edi],eax
  411630:	and    al,0x1
  411632:	add    al,0xd4
  411634:	imul   ebx,DWORD PTR [ecx-0x6a5aa020],0x4e
  41163b:	fidiv  DWORD PTR [eax]
  41163d:	outs   dx,DWORD PTR ds:[esi]
  41163e:	cmc    
  41163f:	fprem1 
  411641:	cmp    al,0x2c
  411643:	pop    ebp
  411644:	bound  ecx,QWORD PTR [esi]
  411646:	mov    cl,0xbe
  411648:	in     al,dx
  411649:	push   ds
  41164a:	pop    ebp
  41164b:	sbb    eax,0xbf849abe
  411650:	ror    BYTE PTR [ecx+edx*8-0x4760d177],1
  411657:	lods   eax,DWORD PTR ds:[esi]
  411658:	xchg   esp,eax
  411659:	daa    
  41165a:	xor    eax,0xece9535e
  41165f:	cmp    eax,0xfe825224
  411664:	lods   eax,DWORD PTR ds:[esi]
  411665:	cmp    esp,DWORD PTR fs:[esi]
  411668:	imul   DWORD PTR [esi+0x27cc4025]
  41166e:	shr    DWORD PTR [ebx],1
  411670:	out    dx,al
  411671:	pushf  
  411672:	jbe    0x411669
  411674:	dec    ecx
  411675:	clc    
  411676:	ins    BYTE PTR es:[edi],dx
  411677:	cmp    eax,0x15c6321a
  41167c:	aas    
  41167d:	paddw  mm2,mm6
  411680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411681:	cs pop ebx
  411683:	jno    0x4116d8
  411685:	xchg   esi,eax
  411686:	shl    DWORD PTR [edx],0xfb
  411689:	lods   eax,DWORD PTR ds:[esi]
  41168a:	mov    ebp,0x962dc6b3
  41168f:	adc    edi,DWORD PTR [ecx+0x3c]
  411692:	or     DWORD PTR [edi+0x45],ebx
  411695:	cmp    DWORD PTR [ecx+0x757ae2dc],edx
  41169b:	mov    cl,0xb9
  41169d:	lahf   
  41169e:	mov    al,0x71
  4116a0:	shl    DWORD PTR [ebx+0x77],cl
  4116a3:	cwde   
  4116a4:	inc    ebx
  4116a5:	pop    ebp
  4116a6:	ins    DWORD PTR es:[edi],dx
  4116a7:	stos   DWORD PTR es:[edi],eax
  4116a8:	pop    ds
  4116a9:	jne    0x4116bc
  4116ab:	rol    BYTE PTR [ecx],0xa7
  4116ae:	mov    eax,ds:0xae6d7ca6
  4116b3:	adc    edi,DWORD PTR [edi+0x77f89476]
  4116b9:	int    0xeb
  4116bb:	push   ebx
  4116bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116bd:	fsubr  QWORD PTR [ebp+edi*1-0x65]
  4116c1:	or     al,0xa5
  4116c3:	mov    cl,0xa3
  4116c5:	(bad)
  4116c8:	loopne 0x4116b7
  4116ca:	pop    edi
  4116cb:	lods   al,BYTE PTR ds:[esi]
  4116cc:	rol    BYTE PTR [ecx],0x3a
  4116cf:	dec    esp
  4116d0:	mov    fs,esp
  4116d2:	loop   0x4116e4
  4116d4:	mov    dx,0xa220
  4116d8:	jae    0x4116d7
  4116da:	fld    QWORD PTR [edx+0x2a696ca8]
  4116e0:	ja     0x41173e
  4116e2:	jne    0x4116b0
  4116e4:	push   ecx
  4116e5:	jo     0x411760
  4116e7:	gs data16 in al,0x82
  4116eb:	scas   al,BYTE PTR es:[edi]
  4116ec:	and    al,0x7d
  4116ee:	out    0xb4,al
  4116f0:	cld    
  4116f1:	cli    
  4116f2:	into   
  4116f3:	adc    al,0x6b
  4116f5:	push   DWORD PTR [edx]
  4116f7:	jg     0x41172a
  4116f9:	cmp    DWORD PTR [ecx],ebx
  4116fb:	cld    
  4116fc:	test   DWORD PTR [edi-0x70db3e4d],0x5a94dad
  411706:	mov    cs,esp
  411708:	ds aas 
  41170a:	mov    edi,ebx
  41170c:	pop    ebp
  41170d:	(bad)  
  41170e:	push   eax
  41170f:	mov    al,ds:0x87c54630
  411714:	fcmovb st,st(1)
  411716:	sub    ecx,DWORD PTR [ebx-0x3ccf8ecc]
  41171c:	xchg   edx,eax
  41171d:	jp     0x4116d7
  41171f:	push   edx
  411720:	out    dx,al
  411721:	in     eax,0x98
  411723:	dec    ecx
  411724:	jp     0x4116af
  411726:	ficomp DWORD PTR [eax-0x7a]
  411729:	popf   
  41172a:	int    0x4d
  41172c:	inc    esi
  41172d:	inc    ecx
  41172e:	inc    esp
  41172f:	ret    0xd345
  411732:	mov    eax,ds:0xecf0bad5
  411737:	(bad)  
  411738:	fldenv [edx+0x9c0f9f5]
  41173e:	bound  ebx,QWORD PTR [ebp+edx*2-0x463a066b]
  411745:	(bad)  [edi-0x2]
  411748:	and    eax,0x791fcae5
  41174d:	xor    BYTE PTR [edx+0x40],dh
  411750:	xor    DWORD PTR [edx-0x197d0c4e],0xed9031
  41175a:	xchg   ebp,eax
  41175b:	shl    ebp,1
  41175d:	dec    edi
  41175e:	loope  0x411708
  411760:	ja     0x4117e1
  411762:	add    eax,0xaf2cfb23
  411767:	mov    esp,0xf2c5df4
  41176c:	jns    0x411724
  41176e:	push   esp
  41176f:	mov    ch,0xec
  411771:	sub    DWORD PTR [eax],ecx
  411773:	xchg   DWORD PTR [ecx+0x4b4de3a4],eax
  411779:	ja     0x411712
  41177b:	nop
  41177c:	aaa    
  41177d:	cdq    
  41177e:	mov    WORD PTR [ecx-0x1f],ss
  411781:	popf   
  411782:	pop    esi
  411783:	mov    eax,0x274d9c4b
  411788:	je     0x41177d
  41178a:	xchg   esp,eax
  41178b:	fadd   DWORD PTR [eax]
  41178d:	(bad)  
  41178e:	fidiv  DWORD PTR [edx]
  411790:	lahf   
  411791:	shl    BYTE PTR [esi],1
  411793:	or     ah,bl
  411795:	jbe    0x411784
  411797:	(bad)  
  411798:	imul   BYTE PTR [ebx+0x45dbbd61]
  41179e:	lods   al,BYTE PTR ds:[esi]
  41179f:	and    esi,DWORD PTR [edi+0x3ae96140]
  4117a5:	jno    0x411795
  4117a7:	jne    0x41178b
  4117a9:	test   BYTE PTR ds:0x6e490dd7,dh
  4117af:	mov    al,0x6b
  4117b1:	dec    ebp
  4117b2:	out    dx,al
  4117b3:	daa    
  4117b4:	arpl   di,dx
  4117b6:	test   dl,0x62
  4117b9:	cmp    ah,bl
  4117bb:	xchg   BYTE PTR [eax],dl
  4117bd:	test   eax,0x3800ed5
  4117c2:	xor    ecx,DWORD PTR [ebp+0x33]
  4117c5:	push   ss
  4117c6:	loopne 0x4117c4
  4117c8:	daa    
  4117c9:	je     0x4117c1
  4117cb:	pop    edi
  4117cc:	pop    esi
  4117cd:	inc    esi
  4117ce:	pop    edi
  4117cf:	in     al,dx
  4117d0:	push   ebx
  4117d1:	and    al,0xd4
  4117d3:	sub    bl,0xf0
  4117d6:	adc    BYTE PTR [ecx+0x555e7295],cl
  4117dc:	out    0xc,eax
  4117de:	adc    eax,0x72c40814
  4117e3:	in     eax,0x40
  4117e5:	dec    edx
  4117e6:	mov    ds:0x95457846,al
  4117eb:	pop    ecx
  4117ec:	std    
  4117ed:	jae    0x4117b7
  4117ef:	(bad)  
  4117f0:	fistp  QWORD PTR [esi+0x46]
  4117f3:	sahf   
  4117f4:	fmul   DWORD PTR [ebx-0x340d7487]
  4117fa:	mov    edi,?
  4117fc:	imul   esp,eax,0x3c
  4117ff:	cmp    eax,0x81ce91ac
  411804:	int    0x77
  411806:	fstp   TBYTE PTR [ebp+0x21e8b5b7]
  41180c:	loop   0x41179f
  41180e:	or     ebp,ebx
  411810:	mov    eax,ds:0x70a3d853
  411815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411816:	add    DWORD PTR [edi],edx
  411818:	pop    ebx
  411819:	clc    
  41181a:	sbb    DWORD PTR [esi+0x19],ebp
  41181d:	mov    DWORD PTR [edx+0x58b33200],esi
  411823:	pushf  
  411824:	cmc    
  411825:	dec    ebp
  411826:	push   es
  411827:	sub    BYTE PTR [esi+0x53],cl
  41182a:	je     0x411815
  41182c:	dec    esp
  41182d:	mov    ebx,0x4ff05d39
  411832:	out    dx,al
  411833:	loope  0x41186d
  411835:	ret    0x9001
  411838:	cmp    BYTE PTR [eax],0x5c
  41183b:	pop    ebp
  41183c:	adc    al,dl
  41183e:	mov    dh,0x68
  411840:	push   esi
  411841:	push   ds
  411842:	in     eax,dx
  411843:	loopne 0x4117f0
  411845:	mov    cl,0x54
  411847:	pop    es
  411848:	cmp    BYTE PTR [ecx],dl
  41184a:	loopne 0x4117cf
  41184c:	push   edi
  41184d:	jae    0x411893
  41184f:	jne    0x4117de
  411851:	mov    ds:0xad71f5a3,al
  411856:	push   0x82cb365c
  41185b:	ja     0x411891
  41185d:	sub    DWORD PTR [ecx],ecx
  41185f:	pop    ss
  411860:	sbb    eax,0x7b2925a8
  411865:	push   ebp
  411866:	push   esp
  411867:	popf   
  411868:	cs xchg ecx,eax
  41186a:	je     0x4118e3
  41186c:	mov    al,0x2c
  41186e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41186f:	adc    dh,BYTE PTR [ebx+edx*8]
  411872:	xchg   esi,eax
  411873:	and    ebp,DWORD PTR [ecx-0xe90f38e]
  411879:	push   cs
  41187a:	(bad)  
  41187b:	cmp    esi,DWORD PTR [esi+0x2d]
  41187e:	scas   al,BYTE PTR es:[edi]
  41187f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411880:	je     0x4118f8
  411882:	sbb    al,0x4b
  411884:	jb     0x4118bd
  411886:	cmp    eax,0x87b39124
  41188b:	repnz (bad) 
  41188d:	fadd   QWORD PTR [ebp+0x647609a6]
  411893:	pop    ecx
  411894:	inc    edi
  411895:	retf   
  411896:	dec    ecx
  411897:	out    dx,eax
  411898:	jnp    0x41188b
  41189a:	lea    esi,[ebx]
  41189c:	pop    esp
  41189d:	push   0x6a549f37
  4118a2:	xchg   ebp,eax
  4118a3:	inc    eax
  4118a4:	mov    dl,0xe6
  4118a6:	push   esi
  4118a7:	pushf  
  4118a8:	xchg   esi,eax
  4118a9:	cmc    
  4118aa:	push   es
  4118ab:	sbb    BYTE PTR [ecx+0x7c51e4b8],ah
  4118b1:	test   al,0xe0
  4118b3:	mov    ds:0x2bd3df91,al
  4118b8:	xor    eax,0x1aa66ef1
  4118bd:	enter  0x1420,0x9f
  4118c1:	xor    eax,0x2464a2e3
  4118c6:	ret    
  4118c7:	bound  esi,QWORD PTR [ecx-0x33]
  4118ca:	fs push esi
  4118cc:	xor    edi,DWORD PTR ds:0xf0bf985e
  4118d2:	stos   DWORD PTR es:[edi],eax
  4118d3:	stos   DWORD PTR es:[edi],eax
  4118d4:	out    0xcb,eax
  4118d6:	enter  0x9f6f,0x5d
  4118da:	sbb    al,0xb4
  4118dc:	or     ecx,DWORD PTR [ebx+0xa]
  4118df:	add    eax,0x29442b56
  4118e4:	dec    esp
  4118e5:	scas   al,BYTE PTR es:[edi]
  4118e6:	aas    
  4118e7:	or     bl,ch
  4118e9:	sar    DWORD PTR [ebp-0x3fb7694d],0x0
  4118f0:	sbb    ebx,DWORD PTR [esi+ebx*4]
  4118f3:	cli    
  4118f4:	rol    BYTE PTR ds:0x1f7f26c1,0x3a
  4118fb:	sbb    BYTE PTR [edx+edi*2],ch
  4118fe:	sti    
  4118ff:	inc    edi
  411900:	jmp    0x4118e8
  411902:	gs jp  0x4118d6
  411905:	inc    edi
  411906:	in     eax,dx
  411907:	dec    eax
  411908:	ror    DWORD PTR [eax],0x61
  41190b:	pop    es
  41190c:	pop    edi
  41190d:	sub    dh,BYTE PTR [esp+eax*8]
  411910:	cmp    dl,BYTE PTR [ebx]
  411912:	mov    esi,0x6e335ac9
  411917:	mov    ebx,0xb09852a2
  41191c:	(bad)  
  41191d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41191e:	into   
  41191f:	mov    al,ds:0xd3bce473
  411924:	xor    eax,0xce6c9786
  411929:	loopne 0x4118c6
  41192b:	xchg   ecx,eax
  41192c:	push   ds
  41192d:	xchg   esi,eax
  41192e:	popa   
  41192f:	(bad)  
  411930:	cmp    al,0x55
  411932:	adc    al,0x7d
  411934:	(bad)  
  411935:	sbb    DWORD PTR [ecx-0x5b],edx
  411938:	mov    ebx,0x3e87bbb8
  41193d:	sar    DWORD PTR [ebx+edi*8],0x88
  411941:	psubb  mm5,QWORD PTR [edx+0x1e]
  411945:	rcl    BYTE PTR [eax+0x43f7cc8f],1
  41194b:	sub    BYTE PTR [ecx-0x23],cl
  41194e:	sbb    cl,cl
  411950:	sbb    eax,0xa95ec3a
  411955:	and    edx,edi
  411957:	fcomp  QWORD PTR [ebp-0x6c]
  41195a:	jns    0x41195f
  41195c:	(bad)  
  41195d:	iret   
  41195e:	jne    0x411962
  411960:	rcl    esi,1
  411962:	scas   al,BYTE PTR es:[edi]
  411963:	and    BYTE PTR [edi-0x1f2cab1b],ah
  411969:	not    DWORD PTR [eax+0x437a59d6]
  41196f:	mov    al,ds:0x84aa32b3
  411974:	mov    dh,0xa2
  411976:	add    BYTE PTR ds:0x1d0ead97,dh
  41197c:	sbb    eax,0x397fd2b1
  411981:	adc    eax,0xf16d42b
  411986:	sahf   
  411987:	xor    al,BYTE PTR [eax-0x5b]
  41198a:	and    eax,0x1dc063b5
  41198f:	jae    0x4119b8
  411991:	push   edx
  411992:	pushf  
  411993:	leave  
  411994:	ret    
  411995:	sub    DWORD PTR [ebp-0x61349e0a],eax
  41199b:	push   cs
  41199c:	inc    ecx
  41199d:	scas   al,BYTE PTR es:[edi]
  41199e:	or     DWORD PTR [ecx-0x6e],edi
  4119a1:	or     eax,0xc7711553
  4119a6:	sbb    eax,0x63a927d3
  4119ab:	out    0xa4,al
  4119ad:	xchg   ebx,eax
  4119ae:	into   
  4119af:	fild   DWORD PTR [ebp-0x3be50837]
  4119b5:	call   0x834d:0xfe281942
  4119bc:	push   ebx
  4119bd:	cmp    ch,dh
  4119bf:	aas    
  4119c0:	sub    ecx,esi
  4119c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c3:	mov    bh,0xd4
  4119c5:	call   0xa6dd1398
  4119ca:	pop    ds
  4119cb:	int3   
  4119cc:	fwait
  4119cd:	int    0x91
  4119cf:	cmp    al,0x2d
  4119d1:	cmp    DWORD PTR [edx],ebx
  4119d3:	aam    0x7f
  4119d5:	rcr    BYTE PTR [ebx+edi*2-0x463d5fad],1
  4119dc:	and    DWORD PTR [ebp-0x390483f3],0x14
  4119e3:	jne    0x4119b7
  4119e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e6:	sbb    al,dl
  4119e8:	xchg   DWORD PTR [ecx],edi
  4119ea:	inc    ecx
  4119eb:	jbe    0x41196f
  4119ed:	xchg   DWORD PTR [ecx],edx
  4119ef:	pandn  mm5,QWORD PTR [eax]
  4119f2:	pop    eax
  4119f3:	dec    ebp
  4119f4:	(bad)  
  4119f5:	into   
  4119f6:	and    DWORD PTR [eax-0x40068d63],ebx
  4119fc:	out    dx,al
  4119fd:	rcl    DWORD PTR [edi],1
  4119ff:	in     al,dx
  411a00:	mov    ch,BYTE PTR [ebx]
  411a02:	xor    eax,DWORD PTR [ecx-0x25]
  411a05:	and    al,0x84
  411a07:	retf   
  411a08:	mov    bl,0x73
  411a0a:	(bad)  
  411a0b:	bound  ebp,QWORD PTR [edx]
  411a0d:	(bad)  ds:0x62bce4fb
  411a13:	stos   DWORD PTR es:[edi],eax
  411a14:	fst    DWORD PTR [esi+0x7c]
  411a17:	ds loope 0x4119d2
  411a1a:	daa    
  411a1b:	jp     0x411a39
  411a1d:	and    dh,BYTE PTR [edi]
  411a1f:	xchg   ebx,eax
  411a20:	sbb    al,0xb1
  411a22:	mov    edi,0x2afa6fbb
  411a27:	pop    ds
  411a28:	lahf   
  411a29:	dec    ebx
  411a2a:	push   0x11251c67
  411a2f:	mov    ds:0x11c9ce78,eax
  411a34:	test   BYTE PTR [ebx-0x677abfd7],dl
  411a3a:	out    0x4e,al
  411a3c:	fistp  QWORD PTR [esi+ebp*4-0x10]
  411a40:	inc    eax
  411a41:	aad    0xa6
  411a43:	aad    0x7f
  411a45:	scas   eax,DWORD PTR es:[edi]
  411a46:	fs pusha 
  411a48:	pop    ecx
  411a49:	mov    al,ds:0x328df49d
  411a4e:	scas   eax,DWORD PTR es:[edi]
  411a4f:	add    bh,BYTE PTR [esi-0x2d]
  411a52:	(bad)  
  411a53:	fnstcw WORD PTR [esi]
  411a55:	aas    
  411a56:	or     BYTE PTR [eax],bl
  411a58:	sub    BYTE PTR [edi+ebx*4-0x6e],al
  411a5c:	push   eax
  411a5d:	imul   eax,DWORD PTR [edi-0x10],0xaeda52b
  411a64:	imul   edi,esi,0xca11883a
  411a6a:	in     eax,0x19
  411a6c:	jp     0x411ad2
  411a6e:	xchg   ecx,eax
  411a6f:	ins    DWORD PTR es:[edi],dx
  411a70:	sbb    DWORD PTR [ebp+0x23043319],eax
  411a76:	scas   al,BYTE PTR es:[edi]
  411a77:	sub    DWORD PTR [eax-0x1b],0xffffff86
  411a7b:	xor    al,0xca
  411a7d:	sbb    ah,BYTE PTR [ecx+0x4]
  411a80:	(bad)  
  411a81:	out    0x30,al
  411a83:	add    eax,0x2a56d1b8
  411a88:	call   0xfdd7:0x4965d3dd
  411a8f:	cmp    ebp,ebx
  411a91:	idiv   al
  411a93:	mov    ds:0x2712dc73,eax
  411a98:	mov    ah,0xf3
  411a9a:	xchg   esi,eax
  411a9b:	ins    DWORD PTR es:[edi],dx
  411a9c:	nop
  411a9d:	sbb    eax,DWORD PTR [ecx+0x4a2c312f]
  411aa3:	rcr    ebp,1
  411aa5:	or     edx,ebx
  411aa7:	pop    ebx
  411aa8:	mov    BYTE PTR [ecx],cl
  411aaa:	mov    edx,DWORD PTR [ebp-0x18]
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	cmp    bh,BYTE PTR [ebx]
  411bf9:	jne    0x411c23
  411bfb:	dec    ebx
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c04:	xor    ebx,edi
  411c06:	nop
  411c07:	adc    ah,BYTE PTR [esi+0x3b0ca654]
  411c0d:	push   edx
  411c0e:	not    DWORD PTR [eax-0x22a25e4f]
  411c14:	push   ebx
  411c15:	jne    0x411c2b
  411c17:	adc    esi,eax
  411c19:	sbb    esi,DWORD PTR [edx-0x22]
  411c1c:	sub    al,0xe5
  411c1e:	xchg   ecx,eax
  411c1f:	imul   BYTE PTR [ebx-0x69f7c7bd]
  411c25:	loop   0x411be8
  411c27:	jo     0x411c61
  411c29:	ja     0x411c8f
  411c2b:	sbb    al,BYTE PTR [edi+0x1bcbfc9e]
  411c31:	aam    0xe
  411c33:	out    0x4c,al
  411c35:	ja     0x411be4
  411c37:	jne    0x411ca2
  411c39:	push   0xf93e88cc
  411c3e:	out    dx,al
  411c3f:	xor    eax,0xbc71666e
  411c44:	lea    esp,[eax-0x2706f85e]
  411c4a:	lahf   
  411c4b:	pop    ebp
  411c4c:	jnp    0x411c1f
  411c4e:	(bad)  
  411c4f:	je     0x411c74
  411c51:	sti    
  411c52:	or     BYTE PTR [esi],cl
  411c54:	cdq    
  411c55:	enter  0xe330,0x75
  411c59:	(bad)  
  411c5a:	iret   
  411c5b:	xchg   ecx,eax
  411c5c:	push   0xffffffc6
  411c5e:	add    eax,0x2e26e92e
  411c63:	bndldx (bad),[ebx-0x35]
  411c67:	sbb    al,0x2d
  411c69:	xchg   edi,eax
  411c6a:	ror    BYTE PTR [eax+0x16],cl
  411c6d:	dec    edx
  411c6e:	repnz les edi,FWORD PTR [ecx-0x31a68eb2]
  411c75:	loopne 0x411c25
  411c77:	sahf   
  411c78:	xor    bl,BYTE PTR [ebx+0x59]
  411c7b:	mov    esp,0xc7a6322
  411c80:	dec    edi
  411c81:	push   ebp
  411c82:	sbb    BYTE PTR [ecx-0x80],bl
  411c85:	dec    eax
  411c86:	in     al,0x51
  411c88:	shl    BYTE PTR [edi+eax*8],0x8d
  411c8c:	in     eax,0x4e
  411c8e:	and    cl,al
  411c90:	push   esp
  411c91:	fisttp DWORD PTR [ecx+esi*1]
  411c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c95:	and    ecx,0xb4845d1f
  411c9b:	add    ch,BYTE PTR [edi-0x77]
  411c9e:	or     dh,BYTE PTR [ecx+0x4e]
  411ca1:	fisttp QWORD PTR [esi+ebp*1+0x444686ae]
  411ca8:	fnsetpm(287 only) 
  411caa:	arpl   cx,bx
  411cac:	xor    al,0x25
  411cae:	bound  ebx,QWORD PTR [ebp+0x4cb782ab]
  411cb4:	sub    DWORD PTR [ebp+0x1168f977],edi
  411cba:	sbb    bl,cl
  411cbc:	jmp    0x2cd9:0x363492ca
  411cc3:	sbb    DWORD PTR [eax],ebp
  411cc5:	sbb    al,0xf2
  411cc7:	lahf   
  411cc8:	push   ebp
  411cc9:	fldenv [esi-0x158e0444]
  411ccf:	pop    esp
  411cd0:	pop    ss
  411cd1:	popa   
  411cd2:	hlt    
  411cd3:	jl     0x411d12
  411cd5:	mov    eax,ds:0xb46f0064
  411cda:	inc    ebp
  411cdb:	in     eax,0x84
  411cdd:	sti    
  411cde:	int3   
  411cdf:	pusha  
  411ce0:	aas    
  411ce1:	dec    ebx
  411ce2:	xchg   ecx,eax
  411ce3:	mov    ecx,DWORD PTR [edx+0x2b]
  411ce6:	lods   al,BYTE PTR cs:[esi]
  411ce8:	mov    ah,0xc1
  411cea:	retf   0x2d66
  411ced:	cmp    dh,bh
  411cef:	ret    0xcb2
  411cf2:	sub    DWORD PTR [ebp+0x17],ebx
  411cf5:	leave  
  411cf6:	es xor esp,esp
  411cf9:	fcomp  st(2)
  411cfb:	test   BYTE PTR [ecx+ebp*4+0x69dce276],ch
  411d02:	xor    ecx,DWORD PTR [ebx+edx*4+0x69]
  411d06:	outs   dx,DWORD PTR ds:[esi]
  411d07:	imul   esp,DWORD PTR [esi+0x62686aa0],0x10c67ca3
  411d11:	adc    edi,ecx
  411d13:	mov    al,ds:0xede87590
  411d18:	inc    eax
  411d19:	adc    ch,BYTE PTR [ebx+0x49]
  411d1c:	shl    BYTE PTR [ebx+0x32],cl
  411d1f:	(bad)  
  411d20:	lahf   
  411d21:	jl     0x411d56
  411d23:	xchg   esi,eax
  411d24:	push   edx
  411d25:	cmp    eax,0xeb0bb4cf
  411d2a:	fwait
  411d2b:	(bad)  
  411d2c:	data16 mov bl,0x44
  411d2f:	dec    ebp
  411d30:	aam    0xfb
  411d32:	out    0x47,eax
  411d34:	pop    ebx
  411d35:	add    dh,bl
  411d37:	push   ds
  411d38:	ss ins DWORD PTR es:[edi],dx
  411d3a:	dec    ebp
  411d3b:	and    edx,DWORD PTR [edx+ecx*2-0x76101c97]
  411d42:	fcomi  st,st(6)
  411d44:	call   0x923f:0xf353dce9
  411d4b:	out    0x55,al
  411d4d:	add    BYTE PTR [esi-0x70],bl
  411d50:	lahf   
  411d51:	aas    
  411d52:	stc    
  411d53:	fwait
  411d54:	sbb    BYTE PTR [edx],cl
  411d56:	in     al,0x3e
  411d58:	sub    BYTE PTR [edi-0x132b84da],dh
  411d5e:	rcl    DWORD PTR ds:0x50d4fbd2,cl
  411d64:	shl    BYTE PTR [edi-0x1e],cl
  411d67:	jle    0x411da9
  411d69:	add    eax,0xe1e0919e
  411d6e:	add    eax,0x6f819448
  411d73:	stos   BYTE PTR es:[edi],al
  411d74:	and    al,0xbe
  411d76:	sub    ch,BYTE PTR [ebx-0x2]
  411d79:	stos   BYTE PTR es:[edi],al
  411d7a:	pop    edx
  411d7b:	push   es
  411d7c:	xchg   ebx,eax
  411d7d:	aas    
  411d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7f:	pop    edi
  411d80:	dec    eax
  411d81:	lods   al,BYTE PTR ss:[esi]
  411d83:	call   0x25f410e9
  411d88:	sub    BYTE PTR [edx],ah
  411d8a:	call   0x5e41eb97
  411d8f:	mov    BYTE PTR [edi-0x1f912966],al
  411d95:	or     DWORD PTR [edi],ecx
  411d97:	adc    al,0x16
  411d99:	mov    al,0x83
  411d9b:	and    BYTE PTR ds:0x3f7d3f7d,ah
  411da1:	lods   eax,DWORD PTR ds:[esi]
  411da2:	mov    bh,0x88
  411da4:	sbb    BYTE PTR [ecx],dh
  411da6:	mov    esi,0xe9c7d46e
  411dab:	and    al,0xb0
  411dad:	pop    eax
  411dae:	mov    al,0xcc
  411db0:	js     0x411e08
  411db2:	cmp    bh,cl
  411db4:	mov    DWORD PTR [edx+0x7662d43c],ecx
  411dba:	jge    0x411e27
  411dbc:	outs   dx,BYTE PTR ds:[esi]
  411dbd:	test   dl,ah
  411dbf:	dec    ebp
  411dc0:	repz out 0xb5,al
  411dc3:	pushf  
  411dc4:	arpl   WORD PTR [edi-0xe],bp
  411dc7:	inc    ebx
  411dc8:	pop    eax
  411dc9:	call   0x8491:0x4cd8148f
  411dd0:	je     0x411dcb
  411dd2:	xlat   BYTE PTR ds:[ebx]
  411dd3:	pushf  
  411dd4:	xchg   ebx,eax
  411dd5:	push   ds
  411dd6:	mov    al,ds:0xba2d52cb
  411ddb:	sub    DWORD PTR [edx+0xa],eax
  411dde:	inc    ebp
  411ddf:	adc    ebp,DWORD PTR [ebx]
  411de1:	loope  0x411da5
  411de3:	ss xchg ebp,eax
  411de5:	cdq    
  411de6:	push   0x22695e6f
  411deb:	sbb    al,0xb1
  411ded:	test   eax,0x5a63784b
  411df2:	push   ebp
  411df3:	mov    ch,bh
  411df5:	xchg   ecx,eax
  411df6:	je     0x411df0
  411df8:	xchg   BYTE PTR [esi+ecx*2],ch
  411dfb:	(bad)  [edx-0x61270d0d]
  411e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e02:	test   BYTE PTR [esi-0x23fed94f],dh
  411e08:	lock xchg ebp,eax
  411e0a:	in     eax,dx
  411e0b:	pop    edi
  411e0c:	rcl    DWORD PTR [ecx-0x4fbfbf36],cl
  411e12:	call   0xba71:0xf76e1870
  411e19:	push   es
  411e1a:	fwait
  411e1b:	int3   
  411e1c:	cmc    
  411e1d:	aaa    
  411e1e:	call   0xbdc7:0x531054ee
  411e25:	pushf  
  411e26:	sbb    eax,0x74f8b935
  411e2b:	mov    ch,0xdd
  411e2d:	pusha  
  411e2e:	call   0x3af9:0xdceeec32
  411e35:	mov    dl,0xe9
  411e37:	or     ah,dh
  411e39:	cmp    BYTE PTR [ebp-0x5c],dl
  411e3c:	pop    esi
  411e3d:	push   edi
  411e3e:	cs call 0x2bb2:0x8381786
  411e46:	sub    cl,dh
  411e48:	scas   al,BYTE PTR es:[edi]
  411e49:	mov    dh,0xf3
  411e4b:	mov    WORD PTR [eax+0x2aeee7a0],cs
  411e51:	push   cs
  411e52:	push   es
  411e53:	cmp    al,bl
  411e55:	cwde   
  411e56:	int    0x66
  411e58:	add    edi,ebx
  411e5a:	dec    eax
  411e5b:	sahf   
  411e5c:	arpl   WORD PTR [eax],si
  411e5e:	lods   eax,DWORD PTR ds:[esi]
  411e5f:	in     eax,dx
  411e60:	push   es
  411e61:	inc    edx
  411e62:	outs   dx,DWORD PTR ds:[esi]
  411e63:	je     0x411e0c
  411e65:	jmp    0x272907b1
  411e6a:	add    DWORD PTR [edi+eax*4],0x9aa484f2
  411e71:	lods   al,BYTE PTR ds:[esi]
  411e72:	stos   BYTE PTR es:[edi],al
  411e73:	add    BYTE PTR [eax],cl
  411e75:	dec    esi
  411e76:	mov    ds:0x4ae69066,eax
  411e7b:	inc    eax
  411e7c:	out    0x2e,eax
  411e7e:	mov    dh,BYTE PTR [edi-0x5d]
  411e81:	sbb    eax,0x988c7c9b
  411e86:	xchg   esi,eax
  411e87:	fdivr  QWORD PTR [esi+0x184b0177]
  411e8d:	mov    eax,0x755e86ca
  411e92:	sub    esp,DWORD PTR [eax+edi*4+0x1b10fd24]
  411e99:	gs sahf 
  411e9b:	add    eax,0xa1bb9a87
  411ea0:	cmp    al,0x54
  411ea2:	stc    
  411ea3:	cwde   
  411ea4:	test   eax,0xb7704fde
  411ea9:	adc    DWORD PTR [ecx-0x10],edx
  411eac:	rcl    edx,0x76
  411eaf:	int3   
  411eb0:	pop    ebp
  411eb1:	dec    esi
  411eb2:	ret    
  411eb3:	fwait
  411eb4:	pop    ds
  411eb5:	jmp    0x411edf
  411eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb8:	fsub   QWORD PTR [esi]
  411eba:	add    eax,0xa1fb6458
  411ebf:	push   cs
  411ec0:	sar    DWORD PTR [ebx-0x44241a16],cl
  411ec6:	jmp    0x6481:0x7814bb5
  411ecd:	jle    0x411f11
  411ecf:	das    
  411ed0:	add    DWORD PTR [edi-0x73],edi
  411ed3:	fld    DWORD PTR [ecx-0x764cac31]
  411ed9:	add    al,0x3a
  411edb:	xchg   esp,eax
  411edc:	out    dx,al
  411edd:	xor    edx,DWORD PTR [edi]
  411edf:	lahf   
  411ee0:	push   esi
  411ee1:	iret   
  411ee2:	push   ebp
  411ee3:	mov    edx,0xdb5bdb83
  411ee8:	jmp    0x66311354
  411eed:	jb     0x411f32
  411eef:	and    al,0xb7
  411ef1:	test   al,0x3
  411ef3:	dec    edx
  411ef4:	lahf   
  411ef5:	xor    bh,BYTE PTR [edi-0x348fefe]
  411efb:	jo     0x411f66
  411efd:	loop   0x411ec0
  411eff:	inc    edx
  411f00:	sbb    al,BYTE PTR [ebx]
  411f02:	clc    
  411f03:	test   BYTE PTR [eax+ecx*2-0x1f],0xe9
  411f08:	idiv   DWORD PTR [eax+0x2b5c612b]
  411f0e:	xchg   edx,eax
  411f0f:	push   ebp
  411f10:	clc    
  411f11:	dec    esi
  411f12:	jno    0x411f63
  411f14:	pop    ecx
  411f15:	and    eax,0xb511e19a
  411f1a:	call   0x38ac:0x8fa97220
  411f21:	xor    eax,0xa14ecff
  411f26:	and    edi,eax
  411f28:	fiadd  DWORD PTR [esi+0x1e1ebc8f]
  411f2e:	xchg   edx,eax
  411f2f:	xor    edi,DWORD PTR [ebx-0x4b]
  411f32:	nop
  411f33:	fld    QWORD PTR [eax+0x3287b134]
  411f39:	xor    ah,al
  411f3b:	daa    
  411f3c:	(bad)  
  411f3d:	shr    BYTE PTR [edi+0x1bd31076],cl
  411f43:	inc    eax
  411f44:	dec    eax
  411f45:	push   ebx
  411f46:	fcom   QWORD PTR [edi+0x10e90dab]
  411f4c:	jnp    0x411ee9
  411f4e:	sub    dl,BYTE PTR [eax+0x5]
  411f51:	inc    eax
  411f52:	mov    esp,0xb057d596
  411f57:	jecxz  0x411fd0
  411f59:	adc    BYTE PTR [edi+0x51],cl
  411f5c:	in     al,dx
  411f5d:	fst    QWORD PTR fs:[ecx+0x4a4107b0]
  411f64:	or     ch,bh
  411f66:	mov    ebp,0xe9285c5f
  411f6b:	into   
  411f6c:	das    
  411f6d:	lds    ecx,FWORD PTR [ecx-0x17]
  411f70:	repnz ffree st(5)
  411f73:	test   esp,ebp
  411f75:	fiadd  WORD PTR [eax]
  411f77:	cmc    
  411f78:	and    al,0x93
  411f7a:	jbe    0x411f33
  411f7c:	xchg   edi,eax
  411f7d:	mov    al,ds:0xfeb7143f
  411f82:	cmc    
  411f83:	and    edi,DWORD PTR [ecx+0x1c]
  411f86:	mov    bl,0x1
  411f88:	ja     0x411fc0
  411f8a:	sti    
  411f8b:	xor    eax,0x4d1d3ccc
  411f90:	ja     0x411f5c
  411f92:	test   BYTE PTR [ebx+0x59],0xae
  411f96:	jecxz  0x411f27
  411f98:	sub    ecx,DWORD PTR [esi+0x7e29cd0f]
  411f9e:	cs aaa 
  411fa0:	fadd   st(5),st
  411fa2:	jbe    0x411fd5
  411fa4:	cs dec eax
  411fa6:	jbe    0x411fa7
  411fa8:	fisttp DWORD PTR [edx-0x4cc40aab]
  411fae:	gs out 0x91,eax
  411fb1:	iret   
  411fb2:	mov    bl,0xa1
  411fb4:	and    al,0xc6
  411fb6:	push   ds
  411fb7:	stos   BYTE PTR es:[edi],al
  411fb8:	and    BYTE PTR [edx],0xd3
  411fbb:	(bad)  
  411fbc:	lea    ebx,[esp+ebx*8-0x12199c66]
  411fc3:	mov    eax,ds:0x4a4c985b
  411fc8:	popf   
  411fc9:	push   ebx
  411fca:	pop    eax
  411fcb:	cmp    al,0x83
  411fcd:	dec    esp
  411fce:	and    eax,eax
  411fd0:	cmp    ch,0xf2
  411fd3:	(bad)  
  411fd4:	xlat   BYTE PTR ds:[ebx]
  411fd5:	loopne 0x411fc2
  411fd7:	adc    eax,0x33c69e37
  411fdc:	popa   
  411fdd:	std    
  411fde:	clc    
  411fdf:	pushf  
  411fe0:	out    dx,eax
  411fe1:	sub    eax,0x88c5d076
  411fe6:	js     0x41202a
  411fe8:	mov    ?,WORD PTR [edi-0x18093fca]
  411fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fef:	or     ah,BYTE PTR [edi]
  411ff1:	daa    
  411ff2:	dec    esp
  411ff3:	fs dec ebp
  411ff5:	imul   esi,DWORD PTR [ecx+edi*8+0x6feaa09d],0xfffffffa
  411ffd:	jnp    0x412006
  411fff:	dec    ebp
  412000:	cli    
  412001:	enter  0x4e7a,0x5
  412005:	xchg   BYTE PTR [eax+0x29e2ef06],dh
  41200b:	fstp   QWORD PTR [ebx+edx*8-0x67bbb030]
  412012:	jae    0x411ffa
  412014:	and    al,0x8e
  412016:	nop
  412017:	imul   edx,DWORD PTR [eax],0xffffff9a
  41201a:	enter  0x466e,0x4e
  41201e:	inc    ecx
  41201f:	aam    0xca
  412021:	pop    ds
  412022:	add    BYTE PTR [edx-0x20df000b],bl
  412028:	clc    
  412029:	cmp    BYTE PTR [ebx-0x5fcbbe99],bh
  41202f:	cmp    DWORD PTR [bp+di],edx
  412032:	mov    bh,0xbb
  412034:	and    ecx,DWORD PTR ds:0xb08ee7ca
  41203a:	in     al,0x79
  41203c:	sbb    BYTE PTR [edi-0xa],0x16
  412040:	stos   DWORD PTR es:[edi],eax
  412041:	push   ds
  412042:	and    BYTE PTR [ebp-0x10],bl
  412045:	dec    esi
  412046:	sbb    edx,ecx
  412048:	or     DWORD PTR [esi+edx*2+0x6b],ebx
  41204c:	sbb    al,BYTE PTR [ebp-0x5]
  41204f:	push   cs
  412050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412051:	xor    bl,BYTE PTR [ecx]
  412053:	push   esi
  412054:	mov    ebx,0x2254f668
  412059:	inc    ecx
  41205a:	xor    edx,0x7a423ae9
  412060:	xchg   ebp,eax
  412061:	xor    DWORD PTR [esi-0xff86b4d],esp
  412067:	stos   BYTE PTR es:[edi],al
  412068:	daa    
  412069:	je     0x4120c3
  41206b:	js     0x4120e2
  41206d:	and    ch,BYTE PTR [edi]
  41206f:	rcl    BYTE PTR [edx],cl
  412071:	and    BYTE PTR [edx],dh
  412073:	pop    esi
  412074:	mov    bl,0x5a
  412076:	(bad)  
  412077:	push   ecx
  412078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412079:	sbb    eax,0x14299f07
  41207e:	sbb    eax,DWORD PTR [edi-0x74a81762]
  412084:	arpl   sp,sp
  412086:	ja     0x4120cc
  412088:	add    cl,BYTE PTR [ecx]
  41208a:	outs   dx,BYTE PTR ds:[esi]
  41208b:	sub    al,BYTE PTR [ebp+0x2f]
  41208e:	dec    edx
  41208f:	popf   
  412090:	popf   
  412091:	cmp    eax,DWORD PTR [edi+0x2f1a1106]
  412097:	lock arpl WORD PTR gs:[ebx],bp
  41209b:	sbb    cl,bl
  41209d:	xchg   edx,eax
  41209e:	push   ss
  41209f:	mov    bh,0xd6
  4120a1:	pop    ebp
  4120a2:	pop    ss
  4120a3:	adc    DWORD PTR [ebx-0x4e],edx
  4120a6:	push   0xf57bd8ac
  4120ab:	cmp    DWORD PTR [edi+0x25303585],ebx
  4120b1:	mov    esp,0x56c73037
  4120b6:	test   BYTE PTR [ecx+0x522f61ee],0x86
  4120bd:	les    ebp,FWORD PTR [edi-0xd]
  4120c0:	loop   0x4120f6
  4120c2:	xchg   ecx,eax
  4120c3:	dec    ecx
  4120c4:	sbb    dh,BYTE PTR [esi]
  4120c6:	mov    ds:0x57629b6f,al
  4120cb:	pop    ebp
  4120cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120cd:	pop    ss
  4120ce:	cld    
  4120cf:	sbb    al,dh
  4120d1:	(bad)  [ecx]
  4120d3:	mov    eax,0x627049a
  4120d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d9:	clc    
  4120da:	cwde   
  4120db:	mov    dh,0x69
  4120dd:	es xor ecx,eax
  4120e0:	mov    WORD PTR [ebx+0x33cdebbd],gs
  4120e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120e7:	jae    0x412086
  4120e9:	jb     0x412073
  4120eb:	jmp    0xbde5551
  4120f0:	out    dx,al
  4120f1:	xor    eax,0xcfda49f2
  4120f6:	clc    
  4120f7:	pop    ebx
  4120f8:	in     al,dx
  4120f9:	mov    ds:0xddde7af8,eax
  4120fe:	push   cs
  4120ff:	addr16 push ecx
  412101:	cmc    
  412102:	pop    ecx
  412103:	xchg   edi,eax
  412104:	rcl    esi,0xfb
  412107:	popf   
  412108:	or     BYTE PTR [ecx-0x6eee12de],0x9d
  41210f:	jns    0x412143
  412111:	call   FWORD PTR [ecx-0x562dc3d9]
  412117:	jp     0x4120ee
  412119:	in     eax,0xec
  41211b:	pop    ebx
  41211c:	or     ecx,DWORD PTR [ebx+0x39]
  41211f:	jno    0x4120f4
  412121:	stos   BYTE PTR es:[edi],al
  412122:	sub    ch,dh
  412124:	jecxz  0x4120eb
  412126:	push   0xd70070cd
  41212b:	or     al,0x6a
  41212d:	mov    ebx,0x2ec2d68a
  412132:	dec    eax
  412133:	dec    esi
  412134:	fcom   DWORD PTR [ebp-0x37]
  412137:	pop    edi
  412138:	xchg   edx,eax
  412139:	add    edx,DWORD PTR [ebp+0x52b8006f]
  41213f:	pop    esp
  412140:	test   al,0x47
  412142:	js     0x41212d
  412144:	iret   
  412145:	or     eax,0x1ae9c91b
  41214a:	fcom   DWORD PTR [edx]
  41214c:	xor    al,0xd8
  41214e:	mov    bl,0x2d
  412150:	mov    bh,0xab
  412152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412153:	xor    esp,DWORD PTR [ecx+0x1db23347]
  412159:	mov    gs,WORD PTR [esi]
  41215b:	sub    esi,DWORD PTR [edi-0x6423e312]
  412161:	lods   eax,DWORD PTR ds:[esi]
  412162:	cmc    
  412163:	xchg   edx,eax
  412164:	lods   al,BYTE PTR ds:[esi]
  412165:	ficom  WORD PTR [edx-0x25af2593]
  41216b:	loop   0x41210e
  41216d:	aam    0xe5
  41216f:	inc    edi
  412170:	xor    BYTE PTR [ecx],dh
  412172:	lahf   
  412173:	(bad)
  412178:	or     eax,0x770472b1
  41217d:	in     al,0x3d
  41217f:	cdq    
  412180:	test   DWORD PTR [edx+eiz*8],0xa8ef681b
  412187:	dec    ebp
  412188:	xchg   ebp,eax
  412189:	mov    bh,0x54
  41218b:	adc    DWORD PTR [ebp+0x4a987f28],edi
  412191:	lea    edi,fs:[edx]
  412194:	push   cs
  412195:	mov    esi,0xa77413d5
  41219a:	in     al,0x3
  41219c:	jno    0x41215e
  41219e:	in     al,0x32
  4121a0:	mov    al,0x3f
  4121a2:	cs popa 
  4121a4:	add    dl,cl
  4121a6:	(bad)  
  4121a7:	pop    edx
  4121a8:	inc    eax
  4121a9:	int    0xdb
  4121ab:	aas    
  4121ac:	cmp    BYTE PTR [ecx+0x50],0x67
  4121b0:	scas   al,BYTE PTR es:[edi]
  4121b1:	sahf   
  4121b2:	test   BYTE PTR [eax+eiz*8-0x36e0ad96],0x65
  4121ba:	push   0x76
  4121bc:	and    eax,0xf1f92005
  4121c1:	inc    edi
  4121c2:	adc    al,0xba
  4121c4:	lea    edi,[ebp+0x6e]
  4121c7:	retf   
  4121c8:	retf   
  4121c9:	push   esi
  4121ca:	pusha  
  4121cb:	mov    ch,0x34
  4121cd:	xchg   edi,eax
  4121ce:	mov    dh,0x6a
  4121d0:	in     eax,dx
  4121d1:	pop    edx
  4121d2:	(bad)  
  4121d3:	js     0x41220e
  4121d5:	repnz cmp DWORD PTR [ecx-0x36],ebx
  4121d9:	pop    ebx
  4121da:	dec    eax
  4121db:	and    al,0xe1
  4121dd:	or     al,0xfc
  4121df:	push   eax
  4121e0:	mov    bl,0x30
  4121e2:	js     0x41222c
  4121e4:	mov    eax,ds:0xaa4d8fec
  4121e9:	inc    esi
  4121ea:	pop    esp
  4121eb:	repnz stc 
  4121ed:	bound  ecx,QWORD PTR [esi+ebx*4+0x300c948d]
  4121f4:	or     ebp,edx
  4121f6:	push   0xffffff97
  4121f8:	or     eax,0x66cf454
  4121fd:	pop    edi
  4121fe:	push   ecx
  4121ff:	imul   edi,DWORD PTR [esi+0x387ec0e8],0x554bbb3d
  412209:	stos   DWORD PTR es:[edi],eax
  41220a:	cmc    
  41220b:	jmp    0x7935:0x3a3f6da6
  412212:	sbb    al,0xc9
  412214:	jp     0x4121df
  412216:	sub    DWORD PTR [eax],edi
  412218:	retf   0x205e
  41221b:	cmp    edi,esp
  41221d:	dec    edx
  41221e:	mov    edi,0xccf57059
  412223:	sub    cl,ch
  412225:	mov    eax,ds:0x2d409f84
  41222a:	mov    esi,0xb4567447
  41222f:	cwde   
  412230:	enter  0x2d48,0xd4
  412234:	arpl   WORD PTR [ebx-0x2d],bp
  412237:	gs jmp 0x4121cd
  41223a:	js     0x41223f
  41223c:	sahf   
  41223d:	aam    0x10
  41223f:	push   cs
  412240:	xchg   edx,eax
  412242:	cmc    
  412243:	pusha  
  412244:	aam    0xc7
  412246:	jns    0x4121f1
  412248:	push   ebp
  412249:	mov    dh,0xd7
  41224b:	pop    ds
  41224c:	inc    edx
  41224d:	dec    ebp
  41224e:	jne    0x41228a
  412250:	(bad)  
  412251:	dec    ebp
  412252:	push   ss
  412253:	hlt    
  412254:	mov    bh,BYTE PTR [eax]
  412256:	in     al,0x70
  412258:	xchg   ebp,eax
  412259:	stc    
  41225a:	add    eax,0x452c277a
  41225f:	sub    DWORD PTR [edx+0x3443626e],0x11280a96
  412269:	jge    0x4122a1
  41226b:	add    DWORD PTR [ecx+0x41],eax
  41226e:	cld    
  41226f:	sub    edx,DWORD PTR ds:0xa9ed927c
  412275:	inc    ebx
  412276:	mov    es,esp
  412278:	ds rcl esp,0xda
  41227c:	and    esp,DWORD PTR [ebp+ecx*8-0x75]
  412280:	std    
  412281:	test   eax,0xa49381e1
  412286:	or     ch,BYTE PTR [edx]
  412288:	pop    ebp
  412289:	std    
  41228a:	ret    
  41228b:	add    eax,0x1261c17e
  412290:	xchg   esi,eax
  412291:	xchg   ecx,eax
  412292:	and    eax,0xb5959f76
  412297:	sbb    eax,0xa4003f67
  41229c:	add    dl,BYTE PTR [esi+0x67]
  41229f:	test   al,0x36
  4122a1:	xchg   edx,eax
  4122a2:	test   ecx,ecx
  4122a4:	xor    BYTE PTR [eax],0x6b
  4122a7:	sar    DWORD PTR [ebx+0x23177620],1
  4122ad:	es pop ss
  4122af:	pop    edi
  4122b0:	mov    edi,edi
  4122b2:	aas    
  4122b3:	sbb    al,0x7f
  4122b5:	(bad)  
  4122b7:	pop    es
  4122b8:	adc    eax,0x9fad9d51
  4122bd:	jb     0x412241
  4122bf:	push   0xfffffff8
  4122c1:	pop    edi
  4122c2:	dec    edi
  4122c3:	shl    ebx,1
  4122c5:	push   ss
  4122c6:	mov    dh,0xf
  4122c8:	add    eax,esi
  4122ca:	(bad)  
  4122cb:	mov    ah,0x46
  4122cd:	add    BYTE PTR [edi],dh
  4122cf:	les    ebx,FWORD PTR [edx-0x7e]
  4122d2:	mov    eax,0x8cd72252
  4122d7:	mov    ebx,0x57c3dcf1
  4122dc:	fcmovu st,st(7)
  4122de:	xor    eax,0x906b81b9
  4122e3:	dec    ebp
  4122e4:	(bad)  
  4122e5:	mov    ecx,0xfc21dc3c
  4122ea:	jnp    0x4122bf
  4122ec:	les    ebp,FWORD PTR [edx+0x2b47e818]
  4122f2:	mov    cl,0xf4
  4122f4:	or     dh,BYTE PTR [edi-0x9134f09]
  4122fa:	faddp  st(7),st
  4122fc:	mov    bl,0xdf
  4122fe:	imul   ebp,eax,0xffffff82
  412301:	in     eax,dx
  412302:	jo     0x412306
  412304:	or     al,0x54
  412306:	cld    
  412307:	sub    ebp,DWORD PTR [edi-0x33]
  41230a:	retf   
  41230b:	out    dx,al
  41230c:	sub    eax,ebp
  41230e:	pop    esi
  41230f:	rcr    esp,cl
  412311:	jbe    0x412379
  412313:	pop    ecx
  412314:	cvtdq2ps xmm6,XMMWORD PTR [edx+0x3]
  412318:	jo     0x412307
  41231a:	xchg   DWORD PTR [ecx+esi*8],esp
  41231d:	in     eax,dx
  41231e:	cmp    al,0xa6
  412320:	push   0xde01f931
  412325:	fmul   QWORD PTR [eax]
  412327:	ins    DWORD PTR es:[edi],dx
  412328:	sub    eax,0x51bd3e0c
  41232d:	and    bh,BYTE PTR [esp+edx*4]
  412330:	out    0xe0,eax
  412332:	repz (bad) 
  412334:	push   cs
  412335:	nop
  412336:	xchg   ebp,eax
  412337:	add    al,cl
  412339:	lock xor al,0xc0
  41233c:	pop    ds
  41233d:	mov    esp,0xde54e95c
  412342:	adc    al,0x2a
  412344:	xchg   ebp,eax
  412345:	in     eax,dx
  412346:	push   cs
  412347:	shl    BYTE PTR [ebx],1
  412349:	pop    edx
  41234a:	sub    eax,DWORD PTR [edx-0x3f]
  41234d:	dec    eax
  41234e:	mov    ebp,0x9f116c62
  412353:	ds retf 
  412355:	dec    ecx
  412356:	stos   DWORD PTR es:[edi],eax
  412357:	and    al,0x2d
  412359:	xor    ebx,ebx
  41235b:	(bad)  
  41235d:	jg     0x41236f
  41235f:	push   ds
  412360:	and    al,0x66
  412362:	xchg   ebx,eax
  412363:	dec    ecx
  412364:	jns    0x4123a0
  412366:	pop    esi
  412367:	sub    ecx,DWORD PTR [edi+0x4c]
  41236a:	push   ss
  41236b:	lods   al,BYTE PTR ds:[esi]
  41236c:	cmp    esi,edx
  41236e:	pop    esp
  41236f:	adc    al,BYTE PTR [eax]
  412371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412372:	lods   al,BYTE PTR ds:[esi]
  412373:	nop
  412374:	jbe    0x4123e6
  412376:	jno    0x41235c
  412378:	fbstp  TBYTE PTR [ebx-0x4d3a3b50]
  41237e:	jns    0x412338
  412380:	fs sbb ebp,edi
  412383:	out    0x1c,al
  412385:	xor    eax,0xe07be827
  41238a:	sti    
  41238b:	in     al,dx
  41238c:	stc    
  41238d:	in     al,0x9d
  41238f:	pop    esi
  412390:	pop    es
  412391:	ins    DWORD PTR es:[edi],dx
  412392:	jg     0x4123d0
  412394:	mov    dh,0x89
  412396:	jecxz  0x4123a2
  412398:	push   DWORD PTR [eax+0x2985b461]
  41239e:	in     al,0x20
  4123a0:	sbb    eax,0x14c1f49
  4123a5:	cmp    DWORD PTR [edi],edi
  4123a7:	add    al,0x27
  4123a9:	push   ecx
  4123aa:	and    ch,BYTE PTR [ebx]
  4123ac:	dec    edi
  4123ad:	cdq    
  4123ae:	inc    edi
  4123af:	mov    ch,0x6e
  4123b1:	add    al,0x2c
  4123b3:	push   edx
  4123b4:	sbb    ah,dh
  4123b6:	and    eax,0xdea2bbd8
  4123bb:	stos   DWORD PTR es:[edi],eax
  4123bc:	dec    esi
  4123bd:	hlt    
  4123be:	imul   DWORD PTR [ecx-0x16]
  4123c1:	aas    
  4123c2:	pop    esi
  4123c3:	std    
  4123c4:	cmp    eax,0xb8314e9a
  4123c9:	adc    bh,BYTE PTR [eax]
  4123cb:	mov    edx,esp
  4123cd:	aad    0x77
  4123cf:	or     bh,BYTE PTR [esi]
  4123d1:	adc    eax,0x923b5405
  4123d6:	jl     0x41237c
  4123d8:	sub    al,0xca
  4123da:	push   ds
  4123db:	jbe    0x4123ba
  4123dd:	jmp    0x6049:0x7730acbc
  4123e4:	aaa    
  4123e5:	xchg   BYTE PTR [edx],bl
  4123e7:	push   0xb285d404
  4123ec:	aam    0x5a
  4123ee:	dec    edi
  4123ef:	(bad)  
  4123f0:	pmaxsw mm4,QWORD PTR [eax-0x45]
  4123f4:	jle    0x412413
  4123f6:	and    DWORD PTR cs:[ebx+0x1c],ebp
  4123fa:	in     al,0xca
  4123fc:	(bad)  
  4123fd:	retf   
  4123fe:	xor    dh,BYTE PTR [edi+0x5a]
  412401:	xchg   edx,eax
  412402:	lock retf 
  412404:	mov    ebp,0xc85a6168
  412409:	lahf   
  41240a:	add    ecx,ebx
  41240c:	sti    
  41240d:	cmp    DWORD PTR [esi+eiz*8+0x406d78b6],edx
  412414:	xlat   BYTE PTR ds:[ebx]
  412415:	mov    dh,0x17
  412417:	jmp    0x1a54:0x518cc924
  41241e:	out    0xe9,al
  412420:	mov    WORD PTR [esi-0x62e99e94],?
  412426:	popf   
  412427:	js     0x41245e
  412429:	lods   al,BYTE PTR ds:[esi]
  41242a:	jmp    0x2a8c9f67
  41242f:	mov    ds:0x9ef3948a,al
  412434:	ss in  al,0x79
  412437:	shl    BYTE PTR [edi],cl
  412439:	add    al,0x7a
  41243b:	ror    BYTE PTR [ebx-0x93414ee],1
  412441:	cmp    edi,DWORD PTR [eax+esi*1+0x49512515]
  412448:	cmp    ah,BYTE PTR [esi]
  41244a:	test   DWORD PTR [ecx],0xd9a3bc67
  412450:	and    al,BYTE PTR [edx+0x518ce74e]
  412456:	sbb    ebx,DWORD PTR fs:[esi]
  412459:	jmp    0x365e371c
  41245e:	and    BYTE PTR [edi+0x65f4edc5],dh
  412464:	daa    
  412465:	retf   0x53b2
  412468:	pop    es
  412469:	lea    ebp,ds:0x64fe7e59
  41246f:	pop    esi
  412470:	call   0xe0d8:0xc5eeaf6c
  412477:	arpl   WORD PTR [esp+ebx*2-0x48],di
  41247b:	mov    al,ds:0x7380f324
  412480:	jg     0x41249e
  412482:	sub    BYTE PTR [edi+0x4d4d5e40],dl
  412488:	pop    ds
  412489:	popa   
  41248a:	pop    edx
  41248b:	dec    edi
  41248c:	lock hlt 
  41248e:	xor    al,BYTE PTR [edi+0x7e4903b6]
  412494:	sti    
  412495:	fcmove st,st(6)
  412497:	(bad)  
  412498:	xor    eax,0xfd7c42f7
  41249d:	xlat   BYTE PTR ds:[ebx]
  41249e:	add    DWORD PTR [eax+0x77],ebx
  4124a1:	sti    
  4124a2:	ret    0x7cd4
  4124a5:	cmp    DWORD PTR [edi+esi*4-0x47836368],edi
  4124ac:	cdq    
  4124ad:	sbb    dh,bh
  4124af:	mov    ebp,0x5d82a1de
  4124b4:	xchg   ebp,edx
  4124b6:	sar    DWORD PTR [eax+edi*8-0x1b5b4b98],1
  4124bd:	sbb    al,0xdd
  4124bf:	sbb    BYTE PTR [eax],ch
  4124c1:	jecxz  0x412501
  4124c3:	addr16 push ecx
  4124c5:	xor    al,0xe4
  4124c7:	push   0x64
  4124c9:	sub    ecx,DWORD PTR [ecx+ecx*1]
  4124cc:	dec    edx
  4124cd:	mov    edi,0xaf10e3d1
  4124d2:	retf   0xf03f
  4124d5:	aas    
  4124d6:	mov    dh,0xb5
  4124d8:	ds xchg ecx,eax
  4124da:	push   edi
  4124db:	fnstsw WORD PTR [edi+edx*4-0x419c7de1]
  4124e2:	mov    es,WORD PTR [esp+ebp*4+0x69]
  4124e6:	sub    bh,BYTE PTR [eiz*4-0x2982fbde]
  4124ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ee:	repnz sbb BYTE PTR [eax-0x61],dl
  4124f2:	mov    dh,0xf8
  4124f4:	imul   esi,edi,0x37
  4124f7:	push   edi
  4124f8:	pusha  
  4124f9:	adc    ecx,DWORD PTR [esi]
  4124fb:	popf   
  4124fc:	out    0xba,al
  4124fe:	mov    bl,0xac
  412500:	mov    ah,0xca
  412502:	call   0x4d7b57a2
  412507:	cmp    eax,0x97386d6e
  41250c:	stc    
  41250d:	out    0x9,eax
  41250f:	out    dx,al
  412510:	loop   0x4124d3
  412512:	adc    al,0xa
  412514:	adc    DWORD PTR [eax],edi
  412516:	aaa    
  412517:	adc    al,bh
  412519:	or     al,dl
  41251b:	loop   0x41253c
  41251d:	jns    0x4124d3
  41251f:	mov    dh,0x89
  412521:	ficomp DWORD PTR [ebx+0xf]
  412524:	cmp    al,0x60
  412526:	scas   al,BYTE PTR es:[edi]
  412527:	fld    st(2)
  412529:	inc    ebx
  41252a:	add    ch,al
  41252c:	cld    
  41252d:	pop    ss
  41252e:	mov    ecx,0x39f2e15c
  412533:	mov    ch,0x56
  412535:	pop    ebp
  412536:	outs   dx,BYTE PTR ds:[esi]
  412537:	in     eax,dx
  412538:	les    edi,FWORD PTR [edx-0x68]
  41253b:	mov    ebp,0xa9bbf931
  412540:	xor    ebx,DWORD PTR [esi+0x46]
  412543:	adc    eax,0xaa22b13a
  412548:	mov    esi,0xd5083911
  41254d:	lock scas eax,DWORD PTR es:[edi]
  41254f:	fldcw  WORD PTR [ebx+edx*2]
  412552:	shl    DWORD PTR [eax],1
  412554:	enter  0xfa1d,0xcc
  412558:	int    0x13
  41255a:	in     eax,0x83
  41255c:	xor    eax,0x33f88653
  412561:	inc    edi
  412562:	xor    al,0xf0
  412564:	enter  0x9e66,0x8e
  412568:	(bad)  
  412569:	mov    ebx,ds
  41256b:	sub    ch,BYTE PTR [eax+0x14]
  41256e:	popa   
  41256f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412570:	pop    edx
  412571:	and    bh,0x8e
  412574:	arpl   WORD PTR [edx],dx
  412576:	idiv   BYTE PTR [edi-0x2b]
  412579:	pop    ecx
  41257a:	xor    dh,ch
  41257c:	rcl    esi,0x57
  41257f:	out    0xcc,eax
  412581:	add    ebp,eax
  412583:	jae    0x412596
  412585:	dec    ecx
  412586:	aad    0x99
  412588:	mov    ah,BYTE PTR [edi+ecx*4+0x3]
  41258c:	pushf  
  41258d:	mov    edi,0x692b8912
  412592:	inc    eax
  412593:	test   eax,0x403cd0c4
  412598:	test   al,0xce
  41259a:	inc    ebp
  41259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41259c:	lods   eax,DWORD PTR ds:[esi]
  41259d:	out    0x88,al
  41259f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a0:	mov    ecx,0x27be38f1
  4125a5:	adc    esp,DWORD PTR [esp+eiz*4]
  4125a8:	lds    eax,FWORD PTR [esi+0x36]
  4125ab:	mov    bh,0xc4
  4125ad:	popa   
  4125ae:	fst    QWORD PTR [ebx+0x3209d5c]
  4125b4:	inc    ecx
  4125b5:	sub    cl,BYTE PTR [edi-0x63146037]
  4125bb:	and    edi,esp
  4125bd:	dec    eax
  4125be:	pop    ecx
  4125bf:	mov    al,0x64
  4125c1:	mov    WORD PTR [eax+ecx*2+0x3d],ds
  4125c5:	sbb    bh,BYTE PTR [ebx]
  4125c7:	nop
  4125c8:	mov    ah,0x1a
  4125ca:	out    0x14,eax
  4125cc:	mov    ch,0xb9
  4125ce:	xchg   esp,eax
  4125cf:	xchg   ebp,eax
  4125d0:	ins    DWORD PTR es:[edi],dx
  4125d1:	pop    esi
  4125d2:	out    0x94,al
  4125d4:	dec    edi
  4125d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d6:	push   esi
  4125d7:	adc    eax,ecx
  4125d9:	mov    esp,0x491b405c
  4125de:	sub    ch,BYTE PTR [ecx]
  4125e0:	into   
  4125e1:	xor    eax,0xb9d5662d
  4125e6:	fs cmp eax,0x6fc58b7f
  4125ec:	stc    
  4125ed:	and    DWORD PTR [esi],edi
  4125ef:	sub    BYTE PTR [edi-0x62],ah
  4125f2:	icebp  
  4125f3:	in     al,dx
  4125f4:	cmp    al,BYTE PTR [ebx+0x48]
  4125f7:	xchg   ecx,eax
  4125f8:	jge    0x4125cc
  4125fa:	(bad)  
  4125fb:	xchg   edi,eax
  4125fc:	stc    
  4125fd:	cmp    BYTE PTR [esi],dl
  4125ff:	jmp    0x4125ce
  412601:	cmp    dh,BYTE PTR ds:0x9254e52d
  412607:	pop    edi
  412608:	xchg   edx,eax
  412609:	ds arpl si,bp
  41260c:	xlat   BYTE PTR ds:[ebx]
  41260d:	push   es
  41260e:	fyl2xp1 
  412610:	out    dx,al
  412611:	and    BYTE PTR [edx+0xa],ah
  412614:	rcl    BYTE PTR [edx+0x7d],cl
  412617:	int3   
  412618:	sti    
  412619:	in     eax,dx
  41261a:	push   edx
  41261b:	mov    BYTE PTR [ecx],bl
  41261d:	dec    ebx
  41261e:	adc    BYTE PTR [edi+esi*4-0x34],ah
  412622:	inc    edi
  412623:	mov    ah,0xa9
  412625:	aam    0xe0
  412627:	retf   0x89c3
  41262a:	mov    dl,0x79
  41262c:	fwait
  41262d:	or     eax,0xa08a3259
  412632:	adc    bh,bl
  412634:	retf   
  412635:	sub    eax,0x551d92a2
  41263a:	retf   
  41263b:	inc    edx
  41263c:	mov    bh,0xbb
  41263e:	mov    eax,ds:0xb64c3aea
  412643:	mov    ah,0x2c
  412645:	xor    al,0x9b
  412647:	xchg   BYTE PTR ds:0x71d59566,ch
  41264d:	(bad)  
  41264e:	sbb    BYTE PTR ds:0x2d023a45,dh
  412654:	sbb    DWORD PTR [ebx],ebx
  412656:	test   DWORD PTR ss:[ebx-0x705c6b44],esi
  41265d:	mov    ecx,0x4f549342
  412662:	jnp    0x412649
  412664:	adc    al,0xc5
  412666:	push   ebx
  412667:	cmp    BYTE PTR [edx],al
  412669:	scas   al,BYTE PTR es:[edi]
  41266a:	sbb    DWORD PTR [ebp-0x28],esi
  41266d:	retf   
  41266e:	imul   esp,DWORD PTR [edx-0x64cc8887],0xffffff9d
  412675:	int    0x64
  412677:	jnp    0x4126d2
  412679:	cmp    DWORD PTR [edi-0x5b192773],esi
  41267f:	jp     0x4126f2
  412681:	mov    ebx,DWORD PTR [ebp+eax*4+0x70]
  412685:	or     BYTE PTR [edi-0x7b8a180a],bh
  41268b:	shr    dh,cl
  41268d:	cmp    al,0x8
  41268f:	clc    
  412690:	aas    
  412691:	adc    eax,0x3b94b918
  412696:	into   
  412697:	sbb    cl,bh
  412699:	mov    cs,WORD PTR [ecx]
  41269b:	add    ah,BYTE PTR [eax+0x69]
  41269e:	rol    BYTE PTR [eax],0xb2
  4126a1:	or     BYTE PTR [ecx+0x7f],bl
  4126a4:	mov    al,0xf7
  4126a6:	and    ah,BYTE PTR [ecx]
  4126a8:	cdq    
  4126a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126aa:	sbb    dl,0xb9
  4126ad:	call   0x218e:0x6db76cd
  4126b4:	ror    BYTE PTR [esi+0x28],cl
  4126b7:	(bad)  
  4126b8:	shl    BYTE PTR [esi+0x255eb56],1
  4126be:	stos   BYTE PTR es:[edi],al
  4126bf:	lea    eax,[edx+eiz*1]
  4126c2:	inc    ebp
  4126c3:	loop   0x412667
  4126c5:	rcl    esi,1
  4126c7:	cmp    al,0x7c
  4126c9:	es mov esp,ss
  4126cc:	test   BYTE PTR [edi+eax*4],0xa
  4126d0:	mov    eax,0x4c00e86f
  4126d5:	push   0x90bec2bf
  4126da:	sahf   
  4126db:	ret    0xa635
  4126de:	scas   al,BYTE PTR es:[edi]
  4126df:	(bad)  
  4126e0:	mov    edx,DWORD PTR [edi+0x7a]
  4126e3:	sub    eax,0x138b5c0d
  4126e8:	cmp    ax,0x7a8c
  4126ec:	call   FWORD PTR ss:0x4feaf87c
  4126f3:	inc    ecx
  4126f4:	test   al,0xe9
  4126f6:	das    
  4126f7:	or     al,al
  4126f9:	and    ah,al
  4126fb:	inc    edi
  4126fc:	inc    esi
  4126fd:	pop    ss
  4126fe:	push   ebp
  4126ff:	frstor [ecx]
  412701:	ror    BYTE PTR [eax-0x72],cl
  412704:	and    ch,BYTE PTR [edx+esi*2-0x4c]
  412708:	inc    ebp
  412709:	xor    al,0x56
  41270b:	mov    bl,0x96
  41270d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270e:	pop    ecx
  41270f:	or     BYTE PTR [ecx-0x4e],bh
  412712:	les    ebp,FWORD PTR [esi-0x7c4165f5]
  412718:	arpl   bp,si
  41271a:	cmp    DWORD PTR [eax+0x5a],ebp
  41271d:	push   edx
  41271e:	mov    bl,BYTE PTR [edi-0x29]
  412721:	mov    DWORD PTR [edi+ecx*2-0x4cb54f5c],edi
  412728:	and    ch,BYTE PTR [ecx-0x80]
  41272b:	or     dl,BYTE PTR [eax]
  41272d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272e:	mov    edx,0x1792253e
  412733:	adc    BYTE PTR [ebp-0x4f26212e],0xc7
  41273a:	pop    edx
  41273b:	dec    si
  41273d:	addr16 mov ds:0x3a63,eax
  412741:	je     0x412766
  412743:	repz cmp al,0x24
  412746:	push   cs
  412747:	add    eax,0x5ee06778
  41274c:	clc    
  41274d:	fild   DWORD PTR [esi]
  41274f:	and    DWORD PTR [eax-0x60ffdf37],ebp
  412755:	xchg   ebp,eax
  412756:	mov    al,ds:0x6f177664
  41275b:	shr    dh,1
  41275d:	aad    0x71
  41275f:	(bad)  [edi-0x9]
  412762:	ds mov eax,0x94f3f7c0
  412768:	push   0x980b145e
  41276d:	and    al,0x1
  41276f:	ret    
  412770:	loopne 0x412701
  412772:	int    0x69
  412774:	std    
  412775:	out    0xa7,eax
  412777:	dec    esi
  412778:	in     eax,0x37
  41277a:	xchg   edi,eax
  41277b:	mov    dl,0xdd
  41277d:	jbe    0x412767
  41277f:	or     eax,0xc8484dcd
  412784:	xchg   edx,eax
  412785:	fild   DWORD PTR [ebx+0x20f07a4d]
  41278b:	push   ss
  41278c:	imul   edx,DWORD PTR [ecx+edi*1],0x4f8b402c
  412793:	mov    ecx,0x37ec958c
  412798:	(bad)  
  412799:	sub    ebx,DWORD PTR [esi]
  41279b:	cmp    al,BYTE PTR [esi-0x7a0a7dab]
  4127a1:	pop    esp
  4127a2:	add    DWORD PTR [ecx-0x6cc7e09b],0xff74ae3b
  4127ac:	fmul   QWORD PTR [ebx]
  4127ae:	push   es
  4127af:	and    al,0x6b
  4127b1:	in     al,dx
  4127b2:	(bad)  
  4127b4:	fisubr DWORD PTR [eax-0x61]
  4127b7:	aam    0xb
  4127b9:	xor    al,0x12
  4127bb:	sbb    eax,0xf7a020b1
  4127c0:	xchg   esp,eax
  4127c1:	stos   BYTE PTR es:[edi],al
  4127c2:	in     eax,dx
  4127c3:	lea    eax,[ebx]
  4127c5:	popa   
  4127c6:	sub    ebx,ecx
  4127c8:	scas   eax,DWORD PTR es:[edi]
  4127c9:	sub    esp,DWORD PTR [esi-0x4d59269c]
  4127cf:	in     al,dx
  4127d0:	push   cs
  4127d1:	shr    BYTE PTR [ebx+0x75],0x67
  4127d5:	cli    
  4127d6:	fs test eax,0x712179cc
  4127dc:	cmp    al,0xe2
  4127de:	push   ds
  4127df:	imul   edx
  4127e1:	xchg   edi,eax
  4127e2:	cmp    edi,ebx
  4127e4:	repnz outs dx,DWORD PTR ds:[esi]
  4127e6:	sub    BYTE PTR [ebx],bl
  4127e8:	imul   DWORD PTR [eax]
  4127ea:	xor    edx,edi
  4127ec:	(bad)  
  4127ee:	sub    DWORD PTR [edi-0x40],esi
  4127f1:	scas   eax,DWORD PTR es:[edi]
  4127f2:	xor    al,0x57
  4127f4:	mov    ebp,0x57d2e083
  4127f9:	sub    al,0xde
  4127fb:	enter  0xbdb3,0xbd
  4127ff:	aaa    
  412800:	scas   eax,DWORD PTR es:[edi]
  412801:	push   edx
  412802:	lods   eax,DWORD PTR ss:[esi]
  412804:	and    BYTE PTR [ebx],0x36
  412807:	mov    ds:0xff9d8f0f,eax
  41280c:	dec    ch
  41280e:	nop
  41280f:	pop    edx
  412810:	mul    DWORD PTR [esi]
  412812:	adc    BYTE PTR [ecx+edx*2+0x44d4c138],bh
  412819:	or     ch,BYTE PTR [eax-0x6c]
  41281c:	pushf  
  41281d:	push   cs
  41281e:	in     al,0xcf
  412820:	pop    esp
  412821:	das    
  412822:	push   0xfff4d2bb
  412827:	enter  0x8d50,0x29
  41282b:	adc    DWORD PTR [edx],0x6cbe07ce
  412831:	ret    
  412832:	pop    edi
  412833:	xchg   ebx,eax
  412834:	or     esp,DWORD PTR [ebx]
  412836:	call   ebp
  412838:	sahf   
  412839:	stos   DWORD PTR es:[edi],eax
  41283a:	or     al,0xfe
  41283c:	cld    
  41283d:	xchg   esi,eax
  41283e:	jns    0x41287d
  412840:	into   
  412841:	and    BYTE PTR [edi+ebx*4+0x16],bh
  412845:	fstp   TBYTE PTR [esi]
  412847:	icebp  
  412848:	and    eax,0x9c3ff29d
  41284d:	leave  
  41284e:	mov    cl,0xe3
  412850:	jge    0x412850
  412852:	aad    0x3b
  412854:	push   edi
  412855:	mov    eax,ds:0xbe5c4509
  41285a:	xor    eax,0x173f7b00
  41285f:	shr    DWORD PTR [esi],0x10
  412862:	mov    ds,WORD PTR [eax+eax*2]
  412865:	mov    dl,0xff
  412867:	xor    DWORD PTR [ebp+0x7945f1f3],ecx
  41286d:	mov    eax,0x3f2a35c0
  412872:	sub    DWORD PTR [eax+0x5da56a33],edi
  412878:	cli    
  412879:	arpl   WORD PTR [edx+0x7dc50b95],bx
  41287f:	xor    DWORD PTR [eax+eax*2],ecx
  412882:	add    DWORD PTR [ecx+eiz*8+0x1afb10ca],esp
  412889:	push   cs
  41288a:	lods   eax,DWORD PTR ds:[esi]
  41288b:	pop    edx
  41288c:	xchg   DWORD PTR [ebx],edi
  41288e:	adc    WORD PTR [ebp-0x46],bp
  412892:	(bad)  
  412893:	push   ebp
  412894:	imul   edx,edi,0xc59b6305
  41289a:	or     eax,0x86ee95ab
  41289f:	push   edi
  4128a0:	push   edx
  4128a1:	sbb    BYTE PTR [edi-0x39],dh
  4128a4:	jns    0x4128b2
  4128a6:	xchg   ebp,eax
  4128a7:	iret   
  4128a8:	stos   BYTE PTR es:[edi],al
  4128a9:	data16 rol BYTE PTR [edi+0x603cff1c],cl
  4128b0:	add    dh,cl
  4128b2:	jo     0x4128e1
  4128b4:	sbb    BYTE PTR [esp+ecx*1+0x17],0x4a
  4128b9:	test   ah,cl
  4128bb:	out    dx,al
  4128bc:	(bad)  
  4128be:	imul   ebx,DWORD PTR [esi+0x2f],0xb8b155b3
  4128c5:	aam    0xf5
  4128c7:	push   cs
  4128c8:	sub    BYTE PTR [eax-0x2b],ah
  4128cb:	jmp    0xf2912ff1
  4128d0:	retf   0x4670
  4128d3:	xchg   esp,eax
  4128d4:	stc    
  4128d5:	sbb    al,0x92
  4128d7:	or     ah,BYTE PTR [ebx]
  4128d9:	pop    esi
  4128da:	add    al,0xdd
  4128dc:	bound  edx,QWORD PTR [edx+0x61]
  4128df:	adc    bh,BYTE PTR [edx+0x77]
  4128e2:	xor    BYTE PTR [esi],ah
  4128e4:	bound  esp,QWORD PTR [eax+eax*8+0x62d82ae8]
  4128eb:	push   ebp
  4128ec:	jp     0x4128b0
  4128ee:	add    eax,DWORD PTR [ebx-0x20b3ef86]
  4128f4:	call   0x3a61d3cd
  4128f9:	popf   
  4128fa:	inc    ecx
  4128fb:	pop    edi
  4128fc:	mov    al,ds:0xe8bd217f
  412901:	cmp    DWORD PTR ds:0xa7eecb0b,esi
  412907:	pop    esp
  412908:	sub    bl,ah
  41290a:	push   edx
  41290b:	mov    ebx,0xa8b82d1c
  412910:	test   al,0x10
  412912:	adc    eax,0x60721c08
  412917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412918:	sbb    al,0x49
  41291a:	inc    eax
  41291b:	sbb    BYTE PTR [esi+0xc0d6be6],0xe3
  412922:	mov    esi,0x78b76a80
  412927:	pop    esi
  412928:	cmp    al,0x30
  41292a:	cmp    dl,ch
  41292c:	add    bh,BYTE PTR [eax-0x119c0864]
  412932:	sub    edi,esp
  412934:	mov    dl,0x6a
  412936:	loope  0x4128c0
  412938:	add    esp,esi
  41293a:	sbb    bl,BYTE PTR [edx-0x5d]
  41293d:	(bad)  
  41293e:	out    dx,al
  41293f:	sbb    al,0x55
  412941:	mov    ebp,0xfb27c52d
  412946:	fsub   DWORD PTR [ebx]
  412948:	dec    eax
  412949:	xor    al,0xcc
  41294b:	jns    0x4128e1
  41294d:	imul   esp,edi,0x1a638fae
  412953:	jmp    0x7c46:0xa7e7dc71
  41295a:	std    
  41295b:	and    BYTE PTR ds:0x45e03a67,ah
  412961:	rcl    edx,cl
  412963:	mov    dh,0x70
  412965:	fmul   DWORD PTR [ecx+esi*2]
  412968:	scas   eax,DWORD PTR es:[edi]
  412969:	cs push edx
  41296b:	mov    ebx,0xf2265827
  412970:	sub    al,0x97
  412972:	add    esp,DWORD PTR [edi-0x623610ec]
  412978:	mov    bl,0x2c
  41297a:	mov    cl,0x0
  41297c:	jecxz  0x412967
  41297e:	xchg   edx,eax
  41297f:	sub    DWORD PTR [edx],eax
  412981:	inc    esi
  412982:	jns    0x41290d
  412984:	dec    ebp
  412985:	dec    esi
  412986:	sahf   
  412987:	in     eax,0x7e
  412989:	scas   eax,DWORD PTR es:[edi]
  41298a:	sbb    BYTE PTR [edi-0x5e],dl
  41298d:	test   eax,0x319533eb
  412992:	inc    edx
  412993:	jl     0x412942
  412995:	imul   ebx,DWORD PTR [ebp+ecx*8+0x4e],0xffffff8d
  41299a:	int3   
  41299b:	mov    ds:0x1cb17978,al
  4129a0:	sub    edx,edx
  4129a2:	xchg   edx,eax
  4129a3:	retf   0xccfd
  4129a6:	aas    
  4129a7:	add    ebp,edi
  4129a9:	pop    ecx
  4129aa:	popf   
  4129ab:	dec    BYTE PTR [ebx-0x1b85385d]
  4129b1:	mov    ch,bl
  4129b3:	and    eax,DWORD PTR [ecx+0x68]
  4129b6:	lea    ebx,[edx+0x14]
  4129b9:	fnsave [ebp+0x7]
  4129bc:	lock aas 
  4129be:	stc    
  4129bf:	lods   al,BYTE PTR ds:[esi]
  4129c0:	and    ebp,DWORD PTR [esi-0x6e]
  4129c3:	arpl   WORD PTR [ebx-0x79],ax
  4129c6:	sqrtps xmm5,XMMWORD PTR [ecx+0x57f344ea]
  4129cd:	pop    ss
  4129ce:	rcr    DWORD PTR [edi+0xd],1
  4129d1:	mov    edi,0x5e747982
  4129d6:	xchg   ecx,eax
  4129d7:	sub    BYTE PTR [esi-0x32],ah
  4129da:	cmc    
  4129db:	fisttp WORD PTR [esi]
  4129dd:	sbb    al,0xd9
  4129df:	popf   
  4129e0:	cmp    eax,0xb7efb433
  4129e5:	or     DWORD PTR [edx],ecx
  4129e7:	dec    eax
  4129e8:	push   ebx
  4129e9:	add    ebx,ebx
  4129eb:	je     0x412a0b
  4129ed:	sub    dl,dh
  4129ef:	add    edi,ebx
  4129f1:	cmp    eax,0x1511504b
  4129f6:	std    
  4129f7:	dec    ebx
  4129f8:	jno    0x4129e9
  4129fa:	mov    al,0xaf
  4129fc:	leave  
  4129fd:	in     eax,dx
  4129fe:	xchg   ecx,eax
  4129ff:	(bad)  
  412a00:	push   ss
  412a01:	xchg   esp,eax
  412a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a03:	(bad)  
  412a05:	fsub   QWORD PTR [eax+0x4e17c719]
  412a0b:	cs inc ecx
  412a0d:	mov    dl,0x89
  412a0f:	data16 arpl WORD PTR [esp+edx*1],dx
  412a13:	pusha  
  412a14:	pop    ss
  412a15:	dec    ebp
  412a16:	jmp    0xc0d9b633
  412a1b:	(bad)  
  412a1c:	outs   dx,BYTE PTR ds:[esi]
  412a1d:	rcr    BYTE PTR [ecx+0x3485a31a],cl
  412a23:	pop    es
  412a24:	xor    al,BYTE PTR [ecx-0x2f6476bb]
  412a2a:	adc    ebp,esp
  412a2c:	push   ebx
  412a2d:	cli    
  412a2e:	lods   al,BYTE PTR ds:[esi]
  412a2f:	retf   0xc877
  412a32:	add    al,0xa9
  412a34:	xor    BYTE PTR ds:0x4eb5dc91,0x20
  412a3b:	(bad)  
  412a3c:	ins    DWORD PTR es:[edi],dx
  412a3d:	or     dh,bl
  412a3f:	std    
  412a40:	cs cmc 
  412a42:	mov    bl,0x49
  412a44:	loopne 0x412a9f
  412a46:	out    0xde,al
  412a48:	rcr    BYTE PTR [esi-0x75],cl
  412a4b:	or     BYTE PTR ds:0xb6d4c6b,bl
  412a51:	jle    0x412a64
  412a53:	mov    al,0x92
  412a55:	pop    es
  412a56:	sbb    ch,ch
  412a58:	ror    BYTE PTR [ebx+0x3d4cd82d],1
  412a5e:	sub    eax,DWORD PTR [eax+0x2cdfc350]
  412a64:	jmp    0x412ae4
  412a66:	mov    al,0x30
  412a68:	xchg   edi,eax
  412a69:	or     esp,DWORD PTR [esi+edi*4+0x28]
  412a6d:	mov    DWORD PTR [ecx],edx
  412a6f:	dec    ebp
  412a70:	and    eax,0x4891db49
  412a75:	mov    eax,ds:0x5dff9b5
  412a7a:	dec    eax
  412a7b:	pop    esp
  412a7c:	or     ah,BYTE PTR [edx+edx*8+0x65aa5f65]
  412a83:	fidivr WORD PTR [edx]
  412a85:	adc    eax,0x331fef07
  412a8a:	mov    esi,0x383d7a83
  412a8f:	std    
  412a90:	sbb    cl,cl
  412a92:	pop    esp
  412a93:	ret    0xb851
  412a96:	xor    eax,0xe4c3866a
  412a9b:	popa   
  412a9c:	or     al,ah
  412a9e:	inc    edx
  412a9f:	rol    ch,cl
  412aa1:	out    dx,eax
  412aa2:	lock arpl WORD PTR [esp+ebx*1+0x46929dcc],ax
  412aaa:	dec    eax
  412aab:	mov    edi,0x5b1ba330
  412ab0:	and    esi,edi
  412ab2:	out    0x63,al
  412ab4:	cmp    al,0x6c
  412ab6:	pop    ebp
  412ab7:	xor    al,0x7a
  412ab9:	in     eax,dx
  412aba:	push   eax
  412abb:	shl    BYTE PTR [ebp+0x83b8938],0x96
  412ac2:	and    esp,DWORD PTR [ebp+0x37]
  412ac5:	cmp    eax,0xa8ed08ab
  412aca:	rol    BYTE PTR [ebx],0x45
  412acd:	push   0xeeb202e7
  412ad2:	or     ebx,0x8ba49bd5
  412ad8:	pop    ss
  412ad9:	cli    
  412ada:	loop   0x412b18
  412adc:	mov    ebx,0x3eca7271
  412ae1:	rcl    DWORD PTR ds:0xc0fedf2a,1
  412ae7:	inc    esp
  412ae8:	adc    eax,DWORD PTR [edi-0x2f]
  412aeb:	jp     0x412b0e
  412aed:	loopne 0x412af9
  412aef:	push   eax
  412af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412af1:	adc    eax,0xc95d3b24
  412af6:	shl    ebp,0x77
  412af9:	lock lods al,BYTE PTR ds:[esi]
  412afb:	test   eax,0x4d2db28e
  412b00:	pushf  
  412b01:	jge    0x412ab7
  412b03:	sbb    BYTE PTR [ecx],cl
  412b05:	jmp    0x4deb:0x1eccd0c8
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0e:	out    0x75,al
  412b10:	and    bl,BYTE PTR [edi]
  412b12:	imul   edi,DWORD PTR [eax],0x51626f62
  412b18:	outs   dx,DWORD PTR ds:[esi]
  412b19:	ret    
  412b1a:	dec    ebx
  412b1b:	add    al,0xab
  412b1d:	scas   eax,DWORD PTR es:[edi]
  412b1e:	push   edi
  412b1f:	push   cs
  412b20:	mov    BYTE PTR [edi],al
  412b22:	(bad)  
  412b23:	out    dx,eax
  412b24:	mov    bh,BYTE PTR [ecx+0x21d034e5]
  412b2a:	sbb    esp,ecx
  412b2c:	jnp    0x412b26
  412b2e:	pop    edi
  412b2f:	adc    DWORD PTR [ebp+0x5b],ebx
  412b32:	push   edi
  412b33:	fs adc al,0xbb
  412b36:	lods   eax,DWORD PTR ds:[esi]
  412b37:	push   0xaa21a9e
  412b3c:	int    0xee
  412b3e:	pop    ds
  412b3f:	popf   
  412b40:	mov    cl,0xe3
  412b42:	int3   
  412b43:	mov    al,ds:0x53eaa6da
  412b48:	pop    ebx
  412b49:	push   ecx
  412b4a:	xor    ebp,DWORD PTR [eax]
  412b4c:	test   DWORD PTR [esi+0x13],edx
  412b4f:	pop    ds
  412b50:	and    BYTE PTR [ebx],0x19
  412b53:	mov    ds:0xa0a757cd,al
  412b58:	xor    ebp,ecx
  412b5a:	(bad)  
  412b5b:	xchg   edi,eax
  412b5c:	sbb    BYTE PTR [eax],dl
  412b5e:	mov    al,ds:0x626868c6
  412b63:	dec    esi
  412b64:	mov    dh,0xb
  412b66:	xchg   esp,eax
  412b67:	jae    0x412b5f
  412b69:	inc    esp
  412b6a:	dec    esp
  412b6b:	or     DWORD PTR [esi+0x5438e4e6],0x10
  412b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b73:	mov    dh,0xdf
  412b75:	jno    0x412b64
  412b77:	sbb    al,0x7c
  412b79:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  412b7b:	addr16 iret 
  412b7d:	ret    
  412b7e:	mov    al,ds:0x5962068a
  412b83:	test   edx,esi
  412b85:	add    esi,DWORD PTR [ebx+0x2]
  412b88:	mov    ebp,0xe1a34601
  412b8d:	loop   0x412b71
  412b8f:	jae    0x412bdc
  412b91:	mov    ebx,0x54b60ff5
  412b96:	fist   WORD PTR [ecx-0x15]
  412b99:	adc    edi,eax
  412b9b:	xor    esi,DWORD PTR [ebx+ebp*1]
  412b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9f:	cmp    DWORD PTR [ebx],eax
  412ba1:	xor    BYTE PTR [ebp-0x6539adef],bl
  412ba7:	sub    al,0xde
  412ba9:	aad    0xd7
  412bab:	pop    es
  412bac:	sbb    BYTE PTR [esi+ecx*1+0x2138cd1d],ch
  412bb3:	shr    ah,0x55
  412bb6:	and    eax,0x2f0d096c
  412bbb:	aaa    
  412bbc:	jo     0x412b4a
  412bbe:	les    eax,FWORD PTR [ebx+edi*1+0x14]
  412bc2:	inc    DWORD PTR [edx]
  412bc4:	fsub   DWORD PTR [edx+0x2d25f740]
  412bca:	imul   edi,edi,0xadde0822
  412bd0:	sbb    BYTE PTR [ebx-0x7863381d],dh
  412bd6:	pop    esp
  412bd7:	lock push eax
  412bd9:	pop    edi
  412bda:	arpl   WORD PTR [esi-0x3fb4cc5e],di
  412be0:	fisttp WORD PTR [edi]
  412be2:	and    BYTE PTR [ecx],ch
  412be4:	icebp  
  412be5:	pop    ebx
  412be6:	push   ebx
  412be7:	ins    DWORD PTR es:[edi],dx
  412be8:	inc    esi
  412be9:	adc    ch,BYTE PTR [edi-0x60]
  412bec:	add    cl,bh
  412bee:	inc    esi
  412bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf0:	clc    
  412bf1:	mov    dh,0xe8
  412bf3:	push   cs
  412bf4:	xor    eax,0xe9473e14
  412bf9:	shr    ah,0xe2
  412bfc:	test   BYTE PTR ds:0x131fd6a,al
  412c02:	rol    BYTE PTR [edi],1
  412c04:	sbb    al,0x9b
  412c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c07:	add    eax,DWORD PTR [ebp-0x83bbc96]
  412c0d:	out    dx,eax
  412c0e:	xchg   BYTE PTR [eax],bh
  412c10:	or     eax,DWORD PTR [eax+ebx*8-0x77]
  412c14:	mov    esp,0x29616af
  412c19:	mov    eax,ds:0x1a6a2f9f
  412c1e:	fist   WORD PTR [edi+0x27]
  412c21:	fwait
  412c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c23:	pop    edi
  412c24:	ret    
  412c25:	mov    eax,ds:0xecf5be0e
  412c2a:	jmp    0x412c2d
  412c2c:	cld    
  412c2d:	(bad)  
  412c2e:	in     al,dx
  412c2f:	scas   eax,DWORD PTR es:[edi]
  412c30:	xor    BYTE PTR [esi+edx*2-0x2f3414d3],dh
  412c37:	push   eax
  412c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c39:	ins    BYTE PTR es:[edi],dx
  412c3a:	or     BYTE PTR [esi-0x37],ch
  412c3d:	test   al,0x16
  412c3f:	ins    DWORD PTR es:[edi],dx
  412c40:	xchg   esp,eax
  412c41:	mov    edi,0xb47e97e1
  412c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c47:	in     eax,dx
  412c48:	push   ds
  412c49:	jg     0x412c5e
  412c4b:	pushf  
  412c4c:	sbb    eax,0xa0320a9f
  412c51:	sbb    BYTE PTR [ebp+0x4c],al
  412c54:	sub    al,ch
  412c56:	pop    ebx
  412c57:	cmp    eax,0x23198816
  412c5c:	in     al,0x24
  412c5e:	pop    edi
  412c5f:	rcr    DWORD PTR [eax],0x34
  412c62:	push   ds
  412c63:	pop    edx
  412c64:	jb     0x412c08
  412c66:	retf   0x7732
  412c69:	adc    bl,BYTE PTR [esi]
  412c6b:	add    BYTE PTR [ecx-0x4249efb6],0x59
  412c72:	adc    ah,bh
  412c74:	sub    DWORD PTR [ecx-0x632b7876],ecx
  412c7a:	mov    DWORD PTR [ebx],esp
  412c7c:	js     0x412c3e
  412c7e:	aaa    
  412c7f:	ja     0x412c9d
  412c81:	inc    eax
  412c82:	inc    eax
  412c83:	sti    
  412c84:	jae    0x412c9e
  412c86:	cdq    
  412c87:	push   esp
  412c88:	dec    ebp
  412c89:	aad    0x74
  412c8b:	mov    cl,0x78
  412c8d:	jmp    0xfd56:0x5e36fbb9
  412c94:	dec    edi
  412c95:	enter  0x66f4,0x18
  412c99:	or     al,0xd6
  412c9b:	and    esi,0x53
  412c9e:	ss mov bh,0x8e
  412ca1:	jno    0x412cdf
  412ca3:	and    dh,bl
  412ca5:	xchg   edx,eax
  412ca6:	add    BYTE PTR [ecx-0x435cf8fa],0xdd
  412cad:	jp     0x412cf9
  412caf:	in     eax,dx
  412cb0:	retf   
  412cb1:	mov    ebp,DWORD PTR [ebp+0x45e51af5]
  412cb7:	xor    edi,DWORD PTR [edi-0x77f0c5be]
  412cbd:	adc    eax,0x3c2d395b
  412cc2:	sub    ebp,DWORD PTR [esi-0x2f]
  412cc5:	dec    esi
  412cc6:	scas   eax,DWORD PTR es:[edi]
  412cc7:	pop    es
  412cc8:	and    eax,0xa57d2c6c
  412ccd:	jecxz  0x412d31
  412ccf:	mov    BYTE PTR [ebp+ecx*1+0x7d1cc496],dh
  412cd6:	fwait
  412cd7:	popa   
  412cd8:	or     eax,0x79b0bfc6
  412cdd:	sbb    cl,bl
  412cdf:	or     al,0x53
  412ce1:	sub    bl,BYTE PTR [ecx+0x21]
  412ce4:	(bad)  
  412ce5:	out    dx,eax
  412ce6:	loopne 0x412cb8
  412ce8:	sub    BYTE PTR ds:0x131e710e,al
  412cee:	das    
  412cef:	push   cs
  412cf0:	lods   eax,DWORD PTR ds:[esi]
  412cf1:	fwait
  412cf2:	cld    
  412cf3:	out    0x72,al
  412cf5:	lods   al,BYTE PTR ds:[esi]
  412cf6:	push   edi
  412cf7:	fwait
  412cf8:	in     al,dx
  412cf9:	out    dx,al
  412cfa:	add    eax,0x10ebf2
  412cff:	mov    WORD PTR [edi],ss
  412d01:	mov    ebp,0x9783e13
  412d06:	push   edx
  412d07:	jmp    0x1b752f77
  412d0c:	jo     0x412d60
  412d0e:	outs   dx,DWORD PTR ds:[esi]
  412d0f:	xchg   esi,eax
  412d10:	cli    
  412d11:	(bad)  
  412d13:	sbb    BYTE PTR [edx+0x2790866e],al
  412d19:	das    
  412d1a:	xor    DWORD PTR [eax+0x6e],edi
  412d1d:	sahf   
  412d1e:	adc    esi,DWORD PTR [esp+ebp*1+0x49]
  412d22:	and    edx,DWORD PTR [ecx-0x3618167d]
  412d28:	cmp    eax,0x40df239b
  412d2d:	call   0x2ad45076
  412d32:	and    dh,BYTE PTR [eax-0x51]
  412d35:	sub    BYTE PTR [eax],dh
  412d37:	mov    edx,0xb1b17c8e
  412d3c:	dec    ecx
  412d3d:	xor    eax,0xd2b74e72
  412d42:	inc    esi
  412d43:	mov    ebx,0x10f977b4
  412d48:	pop    esp
  412d49:	gs xchg edi,eax
  412d4b:	aaa    
  412d4c:	es (bad) 
  412d4e:	outs   dx,BYTE PTR ds:[esi]
  412d50:	mov    WORD PTR [edx-0x6929cc24],?
  412d56:	stos   BYTE PTR es:[edi],al
  412d57:	xor    esi,DWORD PTR [edi-0x40]
  412d5a:	aaa    
  412d5b:	popa   
  412d5c:	mov    dl,0x73
  412d5e:	(bad)  
  412d5f:	aas    
  412d60:	popf   
  412d61:	mov    esi,0xe9a91b10
  412d66:	pop    eax
  412d67:	outs   dx,BYTE PTR ds:[esi]
  412d68:	fnstenv ds:0x6ca220b2
  412d6e:	loopne 0x412d37
  412d70:	cmp    ch,ch
  412d72:	jae    0x412d8a
  412d74:	loope  0x412db6
  412d76:	pop    ss
  412d77:	fwait
  412d78:	xchg   DWORD PTR [ecx],ebp
  412d7a:	pop    ss
  412d7b:	adc    BYTE PTR [ecx+0x49d9bea8],al
  412d81:	push   ds
  412d82:	or     esp,edi
  412d84:	and    al,cl
  412d86:	push   cs
  412d87:	dec    ecx
  412d88:	push   cs
  412d89:	enter  0xfb2c,0x20
  412d8d:	mov    ebx,0xbeeb7342
  412d92:	jb     0x412dbe
  412d94:	cdq    
  412d95:	out    0xe0,al
  412d97:	push   ds
  412d98:	hlt    
  412d99:	in     eax,0xbd
  412d9b:	lods   al,BYTE PTR ds:[esi]
  412d9c:	add    al,0xe3
  412d9e:	dec    ebx
  412d9f:	jnp    0x412d37
  412da1:	and    BYTE PTR [ebx+0x103e5e9b],dh
  412da7:	or     ch,ch
  412da9:	loop   0x412d68
  412dab:	in     eax,0x23
  412dad:	sub    eax,0xc2e32367
  412db2:	lds    edx,FWORD PTR [ebx-0x4e85bee5]
  412db8:	pushf  
  412db9:	dec    ecx
  412dba:	mov    eax,0xa01dc5b7
  412dbf:	test   DWORD PTR [ecx+0x76e9b03a],ecx
  412dc5:	mov    edx,esp
  412dc7:	loopne 0x412d92
  412dc9:	inc    ebx
  412dca:	push   0x3f
  412dcc:	mov    edi,0x89f69438
  412dd1:	push   eax
  412dd2:	aad    0x31
  412dd4:	push   ecx
  412dd5:	in     eax,dx
  412dd6:	dec    eax
  412dd7:	out    0x52,al
  412dd9:	fstp   st(0)
  412ddb:	jbe    0x412d76
  412ddd:	popa   
  412dde:	test   al,0x27
  412de0:	dec    ecx
  412de1:	push   edx
  412de2:	pop    edx
  412de3:	sub    eax,0xafa734e
  412de8:	lahf   
  412de9:	pop    ebp
  412dea:	aad    0x81
  412dec:	call   ebx
  412dee:	adc    BYTE PTR [ecx],cl
  412df0:	out    0x30,eax
  412df2:	shl    BYTE PTR [edx-0x41],0x10
  412df6:	cmp    eax,0x35d955a2
  412dfb:	pop    edi
  412dfc:	cmp    al,0xb2
  412dfe:	mov    ah,BYTE PTR [edx+0x15]
  412e01:	adc    esi,ebx
  412e03:	add    al,0x17
  412e05:	jo     0x412de0
  412e07:	mov    gs,WORD PTR [edi+0x6c]
  412e0a:	xchg   esi,eax
  412e0b:	gs das 
  412e0d:	hlt    
  412e0e:	cmp    DWORD PTR [edi],esi
  412e10:	daa    
  412e11:	scas   eax,DWORD PTR es:[edi]
  412e12:	cli    
  412e13:	xchg   esi,eax
  412e14:	dec    esp
  412e15:	sbb    eax,0x3e845d8e
  412e1a:	xchg   ebp,eax
  412e1b:	sub    BYTE PTR [esi+esi*8+0x7b],ah
  412e1f:	push   cs
  412e20:	push   ds
  412e21:	rcl    DWORD PTR [esi+0x5e3143e9],1
  412e27:	test   eax,0xba981f6f
  412e2c:	push   cs
  412e2d:	shl    DWORD PTR [ecx-0x6e14808f],cl
  412e33:	adc    BYTE PTR fs:[ebx],dh
  412e36:	add    al,0x12
  412e38:	dec    esi
  412e39:	test   DWORD PTR [eax-0x3b],0x26dd1456
  412e40:	sub    edi,DWORD PTR ss:[edi]
  412e43:	pop    es
  412e44:	push   edx
  412e45:	cli    
  412e46:	push   cs
  412e47:	inc    ebp
  412e48:	fcomp  QWORD PTR [ebx-0x4b]
  412e4b:	or     esp,DWORD PTR [ebx-0x66]
  412e4e:	jno    0x412e85
  412e50:	adc    esp,eax
  412e52:	scas   al,BYTE PTR es:[edi]
  412e53:	inc    esi
  412e54:	adc    BYTE PTR [ebx-0x2d],bh
  412e57:	cld    
  412e58:	jl     0x412de4
  412e5a:	fnstenv [ecx-0x604671f6]
  412e60:	add    al,0xa0
  412e62:	push   esp
  412e63:	ins    BYTE PTR es:[edi],dx
  412e64:	jmp    0x6da7:0x136c13f2
  412e6b:	xchg   edi,eax
  412e6c:	lds    ebp,FWORD PTR [esi]
  412e6e:	shl    ah,cl
  412e70:	fs stc 
  412e72:	mov    DWORD PTR [ecx+0x2ca2e9bc],0xa7c9c281
  412e7c:	cs nop
  412e7e:	cvtpi2ps xmm7,QWORD PTR [ebp+esi*2+0x65]
  412e83:	into   
  412e84:	scas   eax,DWORD PTR es:[edi]
  412e85:	adc    DWORD PTR [edi+0x68],ecx
  412e88:	in     al,0x9c
  412e8a:	lods   al,BYTE PTR ds:[esi]
  412e8b:	hlt    
  412e8c:	pop    esi
  412e8d:	aas    
  412e8e:	cmp    eax,0xf21972fe
  412e93:	imul   eax,DWORD PTR [eax-0x8366475],0xfe7e499
  412e9d:	retf   0x5798
  412ea0:	xchg   BYTE PTR [edi],bl
  412ea2:	stos   DWORD PTR es:[edi],eax
  412ea3:	ret    
  412ea4:	xor    bh,BYTE PTR [edi]
  412ea6:	jmp    0xb229c13b
  412eab:	fwait
  412eac:	dec    BYTE PTR [ebx]
  412eae:	or     DWORD PTR [edx-0x5bb6151e],edx
  412eb4:	or     al,0xf2
  412eb6:	jmp    0x412f25
  412eb8:	or     al,0xb0
  412eba:	arpl   WORD PTR [ebp+0x77],ax
  412ebd:	out    0xe2,eax
  412ebf:	test   BYTE PTR [ecx-0x6f],ch
  412ec2:	cmp    dh,BYTE PTR [ebx]
  412ec4:	test   DWORD PTR [esi-0x6d856529],ebp
  412eca:	inc    ecx
  412ecb:	out    0x44,eax
  412ecd:	pop    es
  412ece:	mov    esi,0x54811e33
  412ed3:	mov    ecx,0xed6efb0e
  412ed8:	jae    0x412e9d
  412eda:	daa    
  412edb:	jb     0x412e89
  412edd:	adc    ebp,DWORD PTR [eax+0x345c7d51]
  412ee3:	sub    ah,BYTE PTR [eax+0x6e]
  412ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee8:	lods   al,BYTE PTR ds:[esi]
  412ee9:	xchg   esp,eax
  412eea:	inc    ecx
  412eeb:	push   ecx
  412eec:	pusha  
  412eed:	rol    BYTE PTR [edx+0x75c216c5],1
  412ef3:	loope  0x412e93
  412ef5:	sbb    bl,BYTE PTR [edx-0x47]
  412ef8:	hlt    
  412ef9:	cmp    eax,0x1334b1ab
  412efe:	cmp    al,0x5f
  412f00:	or     ecx,ebp
  412f02:	fmul   QWORD PTR [edi+0x1f]
  412f05:	(bad)  
  412f06:	jae    0x412ed1
  412f08:	and    al,0x34
  412f0a:	dec    ebx
  412f0b:	push   ebp
  412f0c:	imul   esi,DWORD PTR [edi+0x36],0x2e
  412f10:	cdq    
  412f11:	inc    eax
  412f12:	push   ds
  412f13:	pop    ds
  412f14:	int3   
  412f15:	aad    0xd1
  412f17:	sbb    eax,0x2e0e073f
  412f1c:	inc    ebp
  412f1d:	fsub   QWORD PTR [esi]
  412f1f:	or     esi,DWORD PTR [ebx-0x2122235c]
  412f25:	lods   al,BYTE PTR ds:[esi]
  412f26:	cld    
  412f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f28:	scas   al,BYTE PTR es:[edi]
  412f29:	popa   
  412f2a:	aas    
  412f2b:	xor    dh,BYTE PTR [ebx]
  412f2d:	inc    esi
  412f2e:	and    BYTE PTR [eax],dh
  412f30:	xlat   BYTE PTR ds:[ebx]
  412f31:	rol    ebx,1
  412f33:	scas   al,BYTE PTR es:[edi]
  412f34:	pop    ds
  412f35:	push   ebx
  412f36:	mov    cl,0x17
  412f38:	dec    esp
  412f39:	mov    bl,0x94
  412f3b:	xchg   DWORD PTR [ecx],ecx
  412f3d:	(bad)  
  412f3e:	dec    edi
  412f3f:	pop    ss
  412f40:	cmp    ebx,edi
  412f42:	lock pop ds
  412f44:	dec    esi
  412f45:	mov    esi,0x9f3f4ee4
  412f4a:	add    DWORD PTR [eax-0x43],edi
  412f4d:	cmp    eax,0x6caeeffd
  412f52:	call   0x3a5a1c03
  412f57:	cmp    DWORD PTR ds:0x97788b17,esp
  412f5d:	clc    
  412f5e:	outs   dx,DWORD PTR ds:[esi]
  412f5f:	lahf   
  412f60:	in     al,dx
  412f61:	jb     0x412f16
  412f63:	mov    ds:0x25702748,eax
  412f68:	enter  0x91b0,0x9b
  412f6c:	dec    eax
  412f6d:	push   edi
  412f6e:	cmp    bl,bh
  412f70:	dec    ebp
  412f71:	call   0x8935:0x66d2932b
  412f78:	in     al,dx
  412f79:	daa    
  412f7a:	test   DWORD PTR [edi+0x3f1851e9],esp
  412f80:	dec    edi
  412f81:	(bad)  
  412f83:	lock mov al,0x3
  412f86:	sub    eax,DWORD PTR [esi]
  412f88:	sub    bh,dh
  412f8a:	adc    DWORD PTR [eax],eax
  412f8c:	pop    esi
  412f8d:	imul   ecx,DWORD PTR [edi+0x445380e4],0xffffffde
  412f94:	cmp    dl,dh
  412f96:	pop    edx
  412f97:	fst    st(2)
  412f99:	inc    esi
  412f9a:	test   DWORD PTR [edi-0x3],edi
  412f9d:	or     BYTE PTR [ebx-0x34290c75],bl
  412fa3:	add    ch,BYTE PTR [esi]
  412fa5:	div    BYTE PTR [ebp+0x63]
  412fa8:	push   ds
  412fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412faa:	mov    gs,WORD PTR [ebp+0x5]
  412fad:	mov    ebp,DWORD PTR ds:[eax+0x15]
  412fb1:	mov    ebp,0x676be3d0
  412fb6:	adc    DWORD PTR [esi+0x1d501c2a],0x68f46dd0
  412fc0:	pop    eax
  412fc1:	std    
  412fc2:	add    al,al
  412fc4:	dec    edi
  412fc5:	loope  0x412fd9
  412fc7:	jnp    0x412fb2
  412fc9:	pop    esp
  412fca:	inc    eax
  412fcb:	adc    al,BYTE PTR [ebp-0xe]
  412fce:	hlt    
  412fcf:	pop    ecx
  412fd0:	arpl   WORD PTR [edi],sp
  412fd2:	sahf   
  412fd3:	std    
  412fd4:	rcl    BYTE PTR [edx],1
  412fd6:	daa    
  412fd7:	test   eax,0xedb7cda8
  412fdc:	add    edx,DWORD PTR [edx]
  412fde:	bound  esi,QWORD PTR [eax+edi*8]
  412fe1:	mov    al,ds:0x5a7274eb
  412fe6:	sbb    al,0xf9
  412fe8:	bound  ebx,QWORD PTR [eax-0x8bee65c]
  412fee:	mov    ebx,0xb14f3211
  412ff3:	inc    esi
  412ff4:	cmp    eax,0xed448c50
  412ff9:	cdq    
  412ffa:	(bad)  
  412ffb:	jno    0x413066
  412ffd:	jne    0x41300d
  412fff:	sbb    al,0x28
  413001:	mov    ah,0x7b
  413003:	inc    ebp
  413004:	adc    ch,BYTE PTR [edi-0x3c]
  413007:	aas    
  413008:	in     al,dx
  413009:	and    edi,DWORD PTR [ebx+0x2cc80f82]
  41300f:	sub    eax,0x52a02855
  413014:	sub    esp,ebx
  413016:	adc    bl,BYTE PTR [edi+0x60182144]
  41301c:	test   BYTE PTR ds:0xd0336f21,dh
  413022:	test   BYTE PTR [eax-0x5d32bc1e],0x9d
  413029:	add    dh,BYTE PTR [edi-0x1a3e0901]
  41302f:	inc    esi
  413030:	icebp  
  413031:	mov    eax,0xc5cfdc5b
  413036:	das    
  413037:	fadd   QWORD PTR [ebx+esi*1-0x49]
  41303b:	jbe    0x412ff4
  41303d:	xchg   ebx,eax
  41303e:	scas   eax,DWORD PTR es:[edi]
  41303f:	mov    BYTE PTR [edi+eax*2],cl
  413042:	stc    
  413043:	add    al,0x69
  413045:	mov    ch,BYTE PTR [ebx+edx*2-0x10a41d8b]
  41304c:	stos   BYTE PTR es:[edi],al
  41304d:	cwde   
  41304e:	cmp    eax,ecx
  413050:	shl    bh,0x67
  413053:	rol    BYTE PTR [ebx+0x167cd19d],1
  413059:	fcmovne st,st(1)
  41305b:	and    ebp,ebx
  41305d:	out    0x4a,al
  41305f:	inc    bx
  413062:	and    dl,BYTE PTR [eax+0x215d01b9]
  413068:	inc    esp
  41306a:	push   es
  41306b:	ds push esp
  41306d:	adc    al,0x1b
  41306f:	jns    0x4130b7
  413071:	jecxz  0x413007
  413073:	int    0x53
  413075:	add    BYTE PTR [esi-0x6853fd99],dh
  41307b:	loop   0x4130c2
  41307d:	fdivr  st,st(0)
  41307f:	jae    0x413007
  413081:	cwde   
  413082:	shr    BYTE PTR ds:0xeba9f291,cl
  413088:	jae    0x41308a
  41308a:	stos   BYTE PTR es:[edi],al
  41308b:	mov    DWORD PTR [esi],edx
  41308d:	sahf   
  41308e:	and    bl,BYTE PTR ds:0x78b3c184
  413094:	stos   BYTE PTR es:[edi],al
  413095:	sub    ebp,DWORD PTR [eax+ebp*2-0x6b]
  413099:	inc    edx
  41309a:	xchg   esp,eax
  41309b:	repz aam 0xa1
  41309e:	jge    0x413108
  4130a0:	xor    dl,BYTE PTR [ebx]
  4130a2:	aas    
  4130a3:	clc    
  4130a4:	inc    bx
  4130a6:	gs hlt 
  4130a8:	jle    0x4130ea
  4130aa:	sbb    ah,BYTE PTR [edx]
  4130ac:	xor    BYTE PTR [esi-0x4a],cl
  4130af:	add    DWORD PTR [ecx-0x55],edx
  4130b2:	xor    eax,0x6bb2443
  4130b7:	ss scas al,BYTE PTR es:[edi]
  4130b9:	sbb    eax,0x99c511ef
  4130be:	add    al,0x8
  4130c0:	dec    ecx
  4130c1:	jb     0x413064
  4130c3:	shl    DWORD PTR [eax+ebp*4+0x68],cl
  4130c7:	inc    ebx
  4130c8:	out    0xe3,eax
  4130ca:	push   edi
  4130cb:	adc    edi,ecx
  4130cd:	stos   BYTE PTR es:[edi],al
  4130ce:	leave  
  4130cf:	jg     0x4130ff
  4130d1:	or     eax,0xee75ef47
  4130d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d7:	push   esi
  4130d8:	sub    ah,BYTE PTR [ebx-0x73]
  4130db:	repnz test eax,0xe2248626
  4130e1:	arpl   WORD PTR [esi],si
  4130e3:	fnstcw WORD PTR [ecx+0x57]
  4130e6:	sub    edx,edi
  4130e8:	(bad)  [esi]
  4130ea:	scas   al,BYTE PTR es:[edi]
  4130eb:	mov    esi,0x4a72e20b
  4130f0:	sbb    dh,BYTE PTR [ebp-0x17]
  4130f3:	or     edx,0x2e
  4130f6:	imul   BYTE PTR [ecx-0x20]
  4130f9:	pop    es
  4130fa:	xor    BYTE PTR [edi-0x74],cl
  4130fd:	pushf  
  4130fe:	push   ebp
  4130ff:	ins    DWORD PTR es:[edi],dx
  413100:	xchg   DWORD PTR [esi-0x11d4f7ad],edi
  413106:	outs   dx,BYTE PTR ds:[esi]
  413107:	test   al,0x55
  413109:	push   esi
  41310a:	and    esp,ebx
  41310c:	pop    eax
  41310d:	stc    
  41310e:	fnsave [ebp+eax*8+0x54352298]
  413115:	mov    DWORD PTR [ecx-0x53375b73],ebp
  41311b:	fsub   QWORD PTR ds:[ebp-0x62]
  41311f:	push   0x9
  413121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413122:	pop    ebp
  413123:	out    0x6b,al
  413125:	cmp    edx,ebx
  413127:	xchg   BYTE PTR [ebx+0x2fd1a0ab],bh
  41312d:	xor    eax,0xce3203d1
  413132:	out    dx,al
  413133:	pop    ebx
  413134:	fsubr  QWORD PTR [esi-0x53]
  413137:	pop    DWORD PTR [ebx-0x1e]
  41313a:	repnz into 
  41313c:	adc    eax,DWORD PTR [eax+0x46379900]
  413142:	loop   0x413137
  413144:	cmp    ebp,ebp
  413146:	clc    
  413147:	test   BYTE PTR [edi],ah
  413149:	xchg   edi,eax
  41314a:	fild   DWORD PTR [edi-0x6d]
  41314d:	inc    ebx
  41314e:	jg     0x413158
  413150:	push   es
  413151:	and    DWORD PTR [edx+0x482e2178],ecx
  413157:	adc    al,0x88
  413159:	push   ebx
  41315a:	mov    eax,0xe2383338
  41315f:	fbld   TBYTE PTR [edx-0x707e400c]
  413165:	jg     0x413153
  413167:	leave  
  413168:	call   0xd0fc:0x4d04b620
  41316f:	push   cs
  413170:	in     al,0x41
  413172:	in     eax,0x6
  413174:	push   ds
  413175:	outs   dx,BYTE PTR ds:[esi]
  413176:	add    DWORD PTR [eax-0x71],esp
  413179:	mov    al,0x3d
  41317b:	scas   al,BYTE PTR es:[edi]
  41317c:	repz xor DWORD PTR [ecx-0x1a],ebx
  413180:	and    esp,ebp
  413182:	pop    ebx
  413183:	out    0xf9,al
  413185:	pop    es
  413186:	add    cl,dh
  413188:	and    edi,ecx
  41318a:	stos   BYTE PTR es:[edi],al
  41318b:	iret   
  41318c:	cdq    
  41318d:	sbb    eax,0x7463a164
  413192:	jno    0x4131e5
  413194:	dec    esi
  413195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413196:	imul   ecx,DWORD PTR [ecx],0xffffffeb
  413199:	pusha  
  41319a:	stc    
  41319b:	xor    eax,0x749530ff
  4131a0:	jmp    0xe03c:0xcfe7b55
  4131a7:	and    cl,BYTE PTR [ebx]
  4131a9:	xchg   esi,eax
  4131aa:	fdiv   st(5),st
  4131ac:	leave  
  4131ad:	shr    DWORD PTR [edi],0xd4
  4131b0:	jmp    DWORD PTR [ebp+0x18db650c]
  4131b6:	sbb    ebp,DWORD PTR [eax]
  4131b8:	test   DWORD PTR [edx+0x55],0x1e88746f
  4131bf:	pop    edi
  4131c0:	es mov ebx,edx
  4131c3:	fwait
  4131c4:	in     al,0x63
  4131c6:	ja     0x756a00b4
  4131cc:	cmp    ch,al
  4131ce:	dec    eax
  4131cf:	push   edi
  4131d0:	shl    bh,1
  4131d2:	(bad)  
  4131d3:	jae    0x41320d
  4131d5:	inc    ecx
  4131d6:	dec    eax
  4131d7:	ffree  st(6)
  4131d9:	aas    
  4131da:	jae    0x413234
  4131dc:	xor    ecx,DWORD PTR [edx-0x5ec4f8b5]
  4131e2:	mov    bl,0x88
  4131e4:	call   0xbc545558
  4131e9:	rcl    DWORD PTR cs:[esi+esi*8-0x5e],cl
  4131ee:	and    bl,BYTE PTR [ecx-0x114c5d01]
  4131f4:	mov    edx,0x9ebac2f7
  4131f9:	pop    edx
  4131fa:	xor    ch,BYTE PTR [edx-0x62e1ffa2]
  413200:	int    0xe1
  413202:	loope  0x413197
  413204:	lea    esi,[edi+0x1109ffc7]
  41320a:	inc    ecx
  41320b:	inc    edx
  41320c:	rcl    edi,1
  41320e:	dec    eax
  41320f:	loopne 0x41320b
  413211:	retf   0xe4f4
  413214:	jl     0x413197
  413216:	sbb    DWORD PTR [esp+ebx*2-0x5fd5af24],esp
  41321d:	cwde   
  41321e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41321f:	retf   0xa619
  413222:	arpl   WORD PTR [edx+0xf],si
  413225:	push   ecx
  413226:	xor    BYTE PTR [edx-0x21],dl
  413229:	cld    
  41322a:	and    eax,0xc09a214a
  41322f:	jge    0x41322f
  413231:	pop    eax
  413232:	mov    dh,0x3b
  413234:	ins    DWORD PTR es:[edi],dx
  413235:	or     al,0xf6
  413237:	mov    bh,0x8d
  413239:	lock enter 0xffc9,0x73
  41323e:	pop    eax
  41323f:	inc    edx
  413240:	push   esp
  413241:	in     al,0x8e
  413243:	mov    dh,0x37
  413245:	xchg   esp,eax
  413246:	test   eax,0xacdc9f1f
  41324b:	inc    ebp
  41324c:	xlat   BYTE PTR ds:[ebx]
  41324d:	ja     0x4132a7
  41324f:	add    bh,BYTE PTR [esi]
  413251:	out    0x6d,eax
  413253:	jp     0x413251
  413255:	sbb    al,0x5a
  413257:	lahf   
  413258:	cwde   
  413259:	xchg   esi,eax
  41325a:	ret    
  41325b:	sbb    BYTE PTR [edi+0x3ddd5fb2],bh
  413261:	adc    dh,BYTE PTR [edx+0x71b4c18]
  413267:	add    eax,DWORD PTR [edi+0x7700d5be]
  41326d:	dec    esi
  41326e:	repz cli 
  413270:	add    ebx,DWORD PTR [edx-0x16]
  413273:	add    esi,DWORD PTR [esi+ecx*4]
  413276:	jae    0x413293
  413278:	or     al,0xf9
  41327a:	retf   
  41327b:	pop    esi
  41327c:	mov    WORD PTR [edx],?
  41327e:	sti    
  41327f:	sub    BYTE PTR [eax+edx*2],bh
  413282:	and    BYTE PTR [edi+ebp*1-0x76143ade],ah
  413289:	xchg   DWORD PTR [esi-0xaaf92cf],ebx
  41328f:	xor    eax,0x91873137
  413294:	ss cli 
  413296:	xchg   esi,eax
  413297:	jno    0x4132d4
  413299:	dec    eax
  41329a:	xchg   DWORD PTR [ecx],ebx
  41329c:	xor    eax,0xc7ffcdb1
  4132a1:	mov    ds:0x3e99ab9f,eax
  4132a6:	or     bh,ah
  4132a8:	add    dl,BYTE PTR ds:0x93ee5eed
  4132ae:	jmp    0xf2cd96d5
  4132b3:	in     eax,0xf6
  4132b5:	imul   ebx,esp,0xffffff87
  4132b8:	sbb    al,0x98
  4132ba:	inc    edx
  4132bb:	mov    ecx,DWORD PTR [edx-0xeca635e]
  4132c1:	inc    esp
  4132c2:	imul   esp,edx,0x134b33d2
  4132c8:	sbb    DWORD PTR [edi+ecx*4],edi
  4132cb:	pop    esi
  4132cc:	dec    esp
  4132cd:	bound  esi,QWORD PTR [edx-0xd]
  4132d0:	test   al,0xf2
  4132d2:	inc    esi
  4132d3:	add    BYTE PTR [eax+ebx*8],bl
  4132d6:	mov    ch,0x5a
  4132d8:	in     eax,dx
  4132d9:	int    0x1e
  4132db:	scas   al,BYTE PTR es:[edi]
  4132dc:	cmp    al,0xcd
  4132de:	icebp  
  4132df:	add    cl,dh
  4132e1:	cli    
  4132e2:	stos   BYTE PTR es:[edi],al
  4132e3:	int    0xd6
  4132e5:	inc    esi
  4132e6:	push   ebx
  4132e7:	and    BYTE PTR [edi-0x1c00a88d],0x4
  4132ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ef:	test   DWORD PTR [edi],esp
  4132f1:	mov    ds,WORD PTR [esi]
  4132f3:	icebp  
  4132f4:	(bad)  
  4132f5:	mov    ds:0xda92751b,eax
  4132fa:	fdivr  QWORD PTR [ebx]
  4132fc:	add    ah,al
  4132fe:	enter  0x5800,0xc5
  413302:	cmp    eax,0x873ed531
  413307:	xchg   esp,eax
  413308:	mov    ebp,0xa3eabc0
  41330d:	inc    edx
  41330e:	jo     0x413309
  413310:	xchg   edx,eax
  413311:	(bad)  
  413312:	out    0xc6,al
  413314:	push   0xffffff9c
  413316:	in     eax,0x35
  413318:	jp     0x4132fa
  41331a:	jmp    0xdd57ad44
  41331f:	fmul   st(6),st
  413321:	rcr    DWORD PTR [eax+0x27],0x2a
  413325:	shl    ebx,0x8
  413328:	cmc    
  413329:	dec    eax
  41332a:	jno    0x41337a
  41332c:	idiv   DWORD PTR [ebx-0xf17f68c]
  413332:	fwait
  413333:	daa    
  413334:	dec    eax
  413335:	pop    edi
  413336:	jne    0x413371
  413338:	cdq    
  413339:	add    eax,0x44c6c1d4
  41333e:	in     eax,dx
  41333f:	push   eax
  413340:	jp     0x413321
  413342:	inc    esi
  413343:	push   cs
  413344:	js     0x413318
  413346:	jae    0x4133aa
  413348:	pop    esp
  413349:	daa    
  41334a:	popf   
  41334b:	idiv   ebp
  41334d:	push   esi
  41334e:	retf   0xde22
  413351:	pop    ebp
  413352:	sbb    BYTE PTR [ecx+eax*2-0xa570017],ch
  413359:	inc    edx
  41335a:	push   edi
  41335b:	inc    ecx
  41335c:	mov    esi,0x771ea59e
  413361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413362:	in     eax,dx
  413363:	lahf   
  413364:	lods   al,BYTE PTR ds:[esi]
  413365:	push   edx
  413366:	loop   0x41338d
  413368:	loope  0x4133ca
  41336a:	or     eax,0xe3d9e9a6
  41336f:	(bad)  
  413370:	cs and DWORD PTR cs:[esi+0x75],ebp
  413375:	repnz inc eax
  413377:	mov    ch,0x30
  413379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337a:	mov    dl,0x4
  41337c:	test   ch,0x9
  41337f:	mov    ebp,0x32a99755
  413384:	shl    BYTE PTR [esi],cl
  413386:	fisttp QWORD PTR [ebx]
  413388:	xor    DWORD PTR [ebp-0x11031de7],0x4d
  41338f:	retf   0x74dc
  413392:	aad    0xb0
  413394:	ret    0xb84a
  413397:	outs   dx,BYTE PTR ds:[esi]
  413398:	inc    esi
  413399:	cld    
  41339a:	fild   DWORD PTR [edi-0x4d0afc88]
  4133a0:	add    ah,BYTE PTR [edi+0x3457c73e]
  4133a6:	imul   edi,DWORD PTR [edx+0x27],0xc7de6
  4133ad:	out    0x19,al
  4133af:	rcl    DWORD PTR [edx],cl
  4133b1:	shl    al,1
  4133b3:	jl     0x413357
  4133b5:	push   ebp
  4133b6:	shl    BYTE PTR [eax+0x55c49a65],0x8c
  4133bd:	xor    DWORD PTR [esi-0x57481e41],0xedec6cba
  4133c7:	lea    ecx,[ebx+0x77963e46]
  4133cd:	stc    
  4133ce:	mov    BYTE PTR [ebp-0x78],bh
  4133d1:	sbb    al,0xea
  4133d3:	loopne 0x4133f5
  4133d5:	jno    0x41342d
  4133d7:	or     dh,BYTE PTR [ecx+0x6b]
  4133da:	sub    ch,BYTE PTR [edi+0x5c]
  4133dd:	pop    edi
  4133de:	mov    ch,0x99
  4133e0:	int    0xaa
  4133e2:	lods   al,BYTE PTR ds:[esi]
  4133e3:	pop    edi
  4133e4:	sbb    edi,eax
  4133e6:	aas    
  4133e7:	adc    al,0x8
  4133e9:	sbb    al,0x8c
  4133eb:	ror    dl,cl
  4133ed:	popf   
  4133ee:	adc    dh,BYTE PTR [ebp-0x66]
  4133f1:	inc    edx
  4133f2:	ja     0x413470
  4133f4:	inc    ebx
  4133f5:	mov    ebx,0x1104b73e
  4133fa:	int3   
  4133fb:	and    cl,dl
  4133fd:	pop    ebx
  4133fe:	ins    BYTE PTR es:[edi],dx
  4133ff:	xlat   BYTE PTR ds:[ebx]
  413400:	mov    BYTE PTR [ebp+0x76c4988b],0xb1
  413407:	lock add BYTE PTR ss:[ebx],ch
  41340b:	xor    bl,bl
  41340d:	imul   esp,DWORD PTR [eax-0x36],0x79b95025
  413414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413415:	sahf   
  413416:	mov    bl,0xe9
  413418:	pusha  
  413419:	pop    esi
  41341a:	mov    edx,0x86ba5cc
  41341f:	(bad)  
  413420:	call   0x17dafd86
  413425:	sar    BYTE PTR [ebp+0x1c],cl
  413428:	test   ch,bh
  41342a:	ror    BYTE PTR [esi],0x4e
  41342d:	dec    esi
  41342e:	cmp    dl,BYTE PTR [edx]
  413430:	pop    eax
  413431:	hlt    
  413432:	add    DWORD PTR [edx+0x3c],eax
  413435:	fidiv  WORD PTR [edx]
  413437:	xchg   esi,eax
  413438:	fdiv   DWORD PTR [ebp-0x50]
  41343b:	add    DWORD PTR [esi+edx*2-0x98b61cf],0x8cf67ed0
  413446:	push   edi
  413447:	or     eax,0x7f48dfa1
  41344c:	sub    DWORD PTR [edx],edi
  41344e:	pushf  
  41344f:	icebp  
  413450:	or     dl,BYTE PTR [ebp+eiz*4+0x6193646e]
  413457:	int    0x94
  413459:	lahf   
  41345a:	xchg   ebx,eax
  41345b:	push   edx
  41345c:	pop    ebp
  41345d:	lock repnz ficom DWORD PTR [ebp-0x2b]
  413462:	ins    BYTE PTR es:[edi],dx
  413463:	rcl    DWORD PTR [bx+si],0xb2
  413467:	test   DWORD PTR [eax+ebx*8-0x6f],ecx
  41346b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41346c:	push   eax
  41346d:	cs loopne 0x413415
  413470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413471:	sbb    dl,BYTE PTR [ecx-0x35]
  413474:	cmp    ebx,DWORD PTR [ebx-0x5a9a8a2a]
  41347a:	fs push ecx
  41347c:	push   ds
  41347d:	jle    0x4134d7
  41347f:	cmp    DWORD PTR [edx],eax
  413481:	nop
  413482:	outs   dx,DWORD PTR ds:[esi]
  413483:	addr16 mov edi,0x67722d3b
  413489:	cld    
  41348a:	xor    eax,0x23eef134
  41348f:	test   eax,0x6380af79
  413494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413495:	fidiv  WORD PTR [edx]
  413497:	data16 or BYTE PTR [ebp+0x5d],dl
  41349b:	outs   dx,BYTE PTR fs:[esi]
  41349d:	(bad)  
  41349e:	lahf   
  41349f:	sahf   
  4134a0:	rol    DWORD PTR [esi-0x18],0x45
  4134a4:	icebp  
  4134a5:	outs   dx,BYTE PTR ds:[esi]
  4134a6:	push   esp
  4134a7:	fcom   DWORD PTR [edx]
  4134a9:	pop    ds
  4134aa:	ret    0x55ba
  4134ad:	in     eax,0x7b
  4134af:	(bad)  
  4134b0:	iret   
  4134b1:	mov    ecx,0x6d2d58df
  4134b6:	ror    ecx,1
  4134b8:	and    al,0x28
  4134ba:	sbb    eax,0xbde979ea
  4134bf:	xchg   edi,eax
  4134c0:	shl    DWORD PTR ds:[esi+esi*2],cl
  4134c4:	adc    DWORD PTR [edx],0xffffffe4
  4134c7:	iret   
  4134c8:	mov    ecx,0xf0ac2b2a
  4134cd:	stos   BYTE PTR es:[edi],al
  4134ce:	cwde   
  4134cf:	xor    dh,BYTE PTR [ebx]
  4134d1:	adc    eax,ebx
  4134d3:	add    ah,BYTE PTR [ecx]
  4134d5:	test   eax,esp
  4134d7:	push   eax
  4134d8:	push   0xa9c0fca7
  4134dd:	fldenv [esi]
  4134df:	cdq    
  4134e0:	test   BYTE PTR [ebx+0x71c2a30],cl
  4134e6:	imul   eax,DWORD PTR [ecx-0x54],0x15
  4134ea:	pop    ebp
  4134eb:	push   edx
  4134ec:	xchg   DWORD PTR [edx+eax*1-0x309e9670],ebp
  4134f3:	dec    esi
  4134f4:	lea    edx,[edx-0x70]
  4134f7:	jns    0x413482
  4134f9:	dec    esi
  4134fa:	das    
  4134fb:	fs push cs
  4134fd:	sbb    bh,BYTE PTR [edx+edi*2-0x7f]
  413501:	cmp    BYTE PTR [edi-0x70478bc3],0x5a
  413508:	jnp    0x413534
  41350a:	das    
  41350b:	xor    eax,0xbdbf5bd2
  413510:	shl    BYTE PTR [esp+edi*2+0x39],0x36
  413515:	call   0xc6f5682f
  41351a:	call   0xb832:0x79384941
  413521:	loopne 0x4134c2
  413523:	inc    esp
  413524:	push   ebx
  413525:	pop    eax
  413526:	pop    ebp
  413527:	inc    eax
  413528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413529:	and    al,bh
  41352b:	or     bh,ah
  41352d:	scas   al,BYTE PTR es:[edi]
  41352e:	jmp    0x413567
  413530:	imul   esi,DWORD PTR [ebp+ebx*4-0x4be3c43],0x96596214
  41353b:	pusha  
  41353c:	cdq    
  41353d:	mov    BYTE PTR [eax+0x5fb3c9ab],ch
  413543:	inc    edx
  413544:	jnp    0x4134d6
  413546:	push   esp
  413547:	xor    DWORD PTR [edx+ecx*8+0x78],ebx
  41354b:	and    BYTE PTR [esi],bl
  41354d:	cmp    al,0xf2
  41354f:	nop
  413550:	int    0x6d
  413552:	cwde   
  413553:	out    0x6e,al
  413555:	loopne 0x4135ae
  413557:	cmp    bl,cl
  413559:	mov    cl,0xaf
  41355b:	addr16 push 0xffffffea
  41355e:	cmp    DWORD PTR [esp+eax*4+0x38adf5e3],edx
  413565:	js     0x4135c4
  413567:	lods   al,BYTE PTR ds:[esi]
  413568:	imul   eax,DWORD PTR [eax],0x57
  41356b:	fwait
  41356c:	mov    eax,ds:0xd35f0f34
  413571:	jno    0x413548
  413573:	jmp    0xea6864d8
  413578:	int    0x13
  41357a:	repz add BYTE PTR [edx+0x6e1f80a5],bl
  413581:	data16 add al,0x51
  413584:	(bad)  
  413585:	ss jmp 0x2797:0x7b461
  41358d:	aaa    
  41358e:	mov    ecx,ebp
  413590:	ins    BYTE PTR es:[edi],dx
  413591:	(bad)  
  413592:	jmp    0x129b:0x413b60e9
  413599:	push   ds
  41359a:	mov    dh,BYTE PTR [ecx]
  41359c:	and    cl,BYTE PTR [esi+0x14]
  41359f:	out    0x1,al
  4135a1:	sti    
  4135a2:	call   FWORD PTR [ebx+ecx*8+0x2e]
  4135a6:	in     eax,dx
  4135a7:	push   ss
  4135a8:	enter  0x2e5f,0xdf
  4135ac:	sub    al,0x71
  4135ae:	adc    al,0x32
  4135b0:	or     ebx,eax
  4135b2:	ins    BYTE PTR es:[edi],dx
  4135b3:	ins    DWORD PTR es:[edi],dx
  4135b4:	add    eax,0x81391ed2
  4135b9:	idiv   BYTE PTR [ebp-0x75350143]
  4135bf:	jns    0x41361f
  4135c1:	inc    esi
  4135c2:	ins    BYTE PTR es:[edi],dx
  4135c3:	cdq    
  4135c4:	adc    ebp,DWORD PTR [ebx-0x2e1f877c]
  4135ca:	push   ecx
  4135cb:	dec    edi
  4135cc:	or     eax,DWORD PTR [ecx]
  4135ce:	fmul   DWORD PTR [edx+ecx*1]
  4135d1:	xchg   edi,eax
  4135d2:	dec    ebx
  4135d3:	pop    esp
  4135d4:	fistp  WORD PTR [esi+0x28]
  4135d7:	mov    BYTE PTR [edi],ah
  4135d9:	sbb    edi,DWORD PTR [ebx-0x68]
  4135dc:	cmp    BYTE PTR ds:0x83761e64,0xb5
  4135e3:	icebp  
  4135e4:	rcl    DWORD PTR [edi+ebp*8],1
  4135e7:	xchg   esp,eax
  4135e8:	jmp    0x413584
  4135ea:	xchg   esp,eax
  4135eb:	mov    ds:0xc186835,al
  4135f0:	fsubr  st(7),st
  4135f2:	lock sub DWORD PTR [eax+ebp*2-0x40],eax
  4135f7:	lock pusha 
  4135f9:	pop    edi
  4135fa:	sbb    dl,BYTE PTR [eax+0x1c7e17d0]
  413600:	dec    edi
  413601:	jl     0x4135f0
  413603:	xchg   ebx,eax
  413604:	jno    0x413663
  413606:	shr    eax,0xc7
  413609:	les    edi,FWORD PTR [ebx+0x4e]
  41360c:	add    edi,DWORD PTR [esi-0x37]
  41360f:	(bad)  
  413610:	dec    ecx
  413611:	xor    BYTE PTR [edi+0x2092b592],bl
  413617:	loope  0x413671
  413619:	pop    ebp
  41361a:	cmp    eax,0x4afeb381
  41361f:	in     eax,dx
  413620:	cmp    DWORD PTR [eax-0x7d],edi
  413623:	test   DWORD PTR [edx-0x6cbc1f25],eax
  413629:	popa   
  41362a:	and    al,dl
  41362c:	ret    
  41362d:	je     0x41366b
  41362f:	and    BYTE PTR [edx+esi*1-0x5d178bc6],0x9b
  413637:	daa    
  413638:	inc    ecx
  413639:	mov    WORD PTR [eax-0x404b35e5],es
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	and    al,0xd
  413642:	mov    DWORD PTR ds:0x241ae301,0xd21db6a
  41364c:	sub    DWORD PTR [esi-0x7612fe43],eax
  413652:	inc    esp
  413653:	clc    
  413654:	sahf   
  413655:	mov    ecx,0xd0cbb822
  41365a:	and    BYTE PTR [edi-0x7a],cl
  41365d:	fs sahf 
  41365f:	test   al,0xe2
  413661:	ror    DWORD PTR [esi-0x4d27c93],0xea
  413668:	loopne 0x4136bb
  41366a:	cs int3 
  41366c:	popf   
  41366d:	fwait
  41366e:	jnp    0x413682
  413670:	repnz (bad) 
  413672:	aad    0x34
  413674:	mov    ecx,0x25b36ae9
  413679:	jns    0x41365c
  41367b:	add    al,0xac
  41367d:	inc    BYTE PTR [edi]
  41367f:	lahf   
  413680:	push   cs
  413681:	xchg   esp,eax
  413682:	jmp    0xbd61a657
  413687:	jp     0x41366e
  413689:	push   esp
  41368a:	cmp    BYTE PTR [edx-0x2],bl
  41368d:	pop    ebx
  41368e:	ins    BYTE PTR es:[edi],dx
  41368f:	ins    BYTE PTR es:[edi],dx
  413690:	sub    eax,0x37ea167d
  413695:	call   0x2e03:0x1d741978
  41369c:	ds ds test al,0xcc
  4136a0:	and    eax,0x84595c8d
  4136a5:	outs   dx,BYTE PTR ds:[esi]
  4136a6:	imul   esp,DWORD PTR [esi-0x11],0xffffff9b
  4136aa:	jmp    0x4136d2
  4136ac:	dec    ebp
  4136ad:	loope  0x413712
  4136af:	sub    ecx,DWORD PTR [edx-0x69db7ce8]
  4136b5:	int    0x16
  4136b7:	xchg   ebp,eax
  4136b8:	add    al,0x15
  4136ba:	leave  
  4136bb:	std    
  4136bc:	mov    ch,0x1e
  4136be:	pop    ebp
  4136bf:	inc    edi
  4136c0:	fsubr  DWORD PTR [eax+0x18]
  4136c3:	and    DWORD PTR [eax+0x6b30f1e0],ebx
  4136c9:	mov    ebx,0x64d92365
  4136ce:	push   0x68be0021
  4136d3:	sbb    bh,dh
  4136d5:	add    bh,BYTE PTR ds:0x16b8133b
  4136db:	jne    0x413680
  4136dd:	aaa    
  4136de:	ins    DWORD PTR es:[edi],dx
  4136df:	xchg   edi,eax
  4136e0:	mov    eax,ds:0x5f18bd93
  4136e5:	les    edi,FWORD PTR [ecx+0x65]
  4136e8:	retf   
  4136e9:	mov    DWORD PTR [ecx+ebp*4],eax
  4136ec:	frstor [edi+edx*8-0x45fe0b1d]
  4136f3:	mov    ebp,DWORD PTR [edi]
  4136f5:	lods   al,BYTE PTR ds:[esi]
  4136f6:	dec    eax
  4136f7:	pop    esp
  4136f8:	jns    0x413699
  4136fa:	adc    bh,dl
  4136fc:	lahf   
  4136fd:	jnp    0x4136ad
  4136ff:	sbb    eax,0x625a9e60
  413704:	sub    al,0x5c
  413706:	jno    0x41376e
  413708:	or     eax,0xbee63571
  41370d:	xchg   BYTE PTR [ecx+0x2b17aefa],dh
  413713:	fcom   DWORD PTR [edi]
  413715:	add    ch,BYTE PTR [esi]
  413717:	sub    eax,0xcf8aae28
  41371c:	clc    
  41371d:	sbb    esp,DWORD PTR [ebp-0x405aafff]
  413723:	inc    ebp
  413724:	jg     0x41377f
  413726:	mov    bh,BYTE PTR [ebx+0x5e]
  413729:	xchg   ebx,eax
  41372a:	imul   BYTE PTR ds:[esi-0x3a]
  41372e:	ret    
  41372f:	in     al,0xd1
  413731:	or     DWORD PTR [esp+edx*8-0x4c],ecx
  413735:	loop   0x41370a
  413737:	xchg   esp,eax
  413738:	(bad)  
  413739:	cmp    ch,ch
  41373b:	jg     0x413743
  41373d:	add    ebp,0x98dd1124
  413743:	inc    edx
  413744:	sub    al,0xd7
  413746:	jnp    0x413731
  413748:	stos   DWORD PTR es:[edi],eax
  413749:	or     DWORD PTR [ebx-0x48],ecx
  41374c:	xchg   ebx,eax
  41374d:	ret    
  41374e:	adc    DWORD PTR [esi-0x4c],esi
  413751:	lods   al,BYTE PTR ds:[esi]
  413752:	mov    WORD PTR [edi-0x56],?
  413755:	stos   BYTE PTR es:[edi],al
  413756:	mov    ds:0x540131c6,eax
  41375b:	add    eax,0xa925fa5e
  413760:	fsubr  DWORD PTR [edi+edi*1+0x7f08de51]
  413767:	jne    0x4137a6
  413769:	data16 (bad) 
  41376b:	(bad)  
  41376c:	push   edi
  41376d:	int    0xd2
  41376f:	inc    edx
  413770:	fistp  QWORD PTR [eax]
  413772:	xor    al,0x10
  413774:	test   BYTE PTR [ebp+ebx*1+0x18],ah
  413778:	mov    eax,0x4d871595
  41377d:	fnstcw WORD PTR [edi+0xb]
  413780:	xchg   esp,eax
  413781:	cli    
  413782:	loope  0x41377d
  413784:	call   0xad5dcf77
  413789:	aam    0x84
  41378b:	rcl    BYTE PTR [edi+0x42e5f05],1
  413791:	aad    0x4d
  413793:	lds    ebp,FWORD PTR [ebx+ecx*1-0x42]
  413797:	pop    ds
  413798:	ins    DWORD PTR es:[edi],dx
  413799:	ds js  0x4137e7
  41379c:	pop    ecx
  41379d:	pop    ebp
  41379e:	inc    edi
  41379f:	ffreep st(6)
  4137a1:	dec    edi
  4137a2:	or     al,0x49
  4137a4:	push   eax
  4137a5:	push   0xffffffea
  4137a7:	and    DWORD PTR [ebp-0x2d],edi
  4137aa:	fsub   QWORD PTR [esp+eax*4+0x34]
  4137ae:	ret    0x56ac
  4137b1:	xchg   ebx,eax
  4137b2:	xor    eax,0xf2b07e22
  4137b7:	lods   al,BYTE PTR ds:[esi]
  4137b8:	inc    ebp
  4137b9:	push   ecx
  4137ba:	enter  0xf40,0x1b
  4137be:	in     eax,dx
  4137bf:	fadd   QWORD PTR [edx+0xe]
  4137c2:	pop    ebp
  4137c3:	mov    esp,DWORD PTR cs:[ecx-0x2b]
  4137c7:	push   esi
  4137c8:	pop    eax
  4137c9:	xor    DWORD PTR [ebx-0x49],0xffffff9d
  4137cd:	push   esi
  4137ce:	and    al,0xe8
  4137d0:	jmp    0x9d0985b9
  4137d5:	pop    ds
  4137d6:	jl     0x413782
  4137d8:	xor    DWORD PTR [edx+0x79],eax
  4137db:	dec    ecx
  4137dc:	and    al,0xec
  4137de:	pusha  
  4137df:	les    eax,FWORD PTR [esi]
  4137e1:	xor    bh,BYTE PTR [eax]
  4137e3:	mov    bl,0x47
  4137e5:	mov    ecx,0x393e125a
  4137ea:	call   0xfefb9a76
  4137ef:	mov    dl,0xa5
  4137f1:	mov    al,0xab
  4137f3:	mov    cl,0x3a
  4137f5:	pop    edx
  4137f6:	sub    eax,DWORD PTR ss:[ebx]
  4137f9:	dec    ecx
  4137fa:	sti    
  4137fb:	jne    0x41380c
  4137fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137fe:	fisub  WORD PTR ss:[ecx+0x3f]
  413802:	enter  0x9250,0xac
  413806:	das    
  413807:	daa    
  413808:	dec    ebp
  413809:	inc    edx
  41380a:	sbb    dl,al
  41380c:	mov    ecx,0xcfba2510
  413811:	add    DWORD PTR [eax],ebx
  413813:	int    0xcd
  413815:	addr16 push ds
  413817:	(bad)  
  413818:	ins    DWORD PTR es:[edi],dx
  413819:	sbb    ah,BYTE PTR [ebx+0x2d557db4]
  41381f:	pusha  
  413820:	pop    ss
  413821:	repz push edx
  413823:	das    
  413824:	sub    al,0x5d
  413826:	gs mul eax
  413829:	inc    esi
  41382a:	xor    al,0x36
  41382c:	sbb    al,BYTE PTR [ebp+0x13]
  41382f:	leave  
  413830:	ins    DWORD PTR es:[edi],dx
  413831:	mov    eax,ds:0x1fb71d45
  413836:	and    al,cl
  413838:	cmp    esi,DWORD PTR [edx+esi*1+0x757a5e36]
  41383f:	repz fwait
  413841:	push   ds
  413842:	add    bh,BYTE PTR [edi]
  413844:	arpl   WORD PTR [ebp-0x1a176950],bx
  41384a:	std    
  41384b:	sub    BYTE PTR [esi-0x4b],bl
  41384e:	push   ebx
  41384f:	ja     0x413818
  413851:	mov    edi,0xf9b46bc2
  413856:	and    al,0xce
  413858:	mov    ch,0x55
  41385a:	pop    esp
  41385b:	jle    0x413874
  41385d:	mov    ecx,0xa5a83856
  413862:	pop    ebx
  413863:	xor    DWORD PTR [ecx],ebx
  413865:	adc    ah,BYTE PTR [eiz*1-0x7a5ce1fc]
  41386c:	sbb    dh,BYTE PTR [ecx]
  41386e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386f:	adc    eax,0xefeb7356
  413874:	push   cs
  413875:	inc    edx
  413876:	xor    esi,DWORD PTR [eax-0x35]
  413879:	push   esi
  41387a:	into   
  41387b:	retf   0xbaf4
  41387e:	pushf  
  41387f:	aas    
  413880:	sti    
  413881:	ins    DWORD PTR es:[edi],dx
  413882:	int3   
  413883:	pop    edx
  413884:	aas    
  413885:	xchg   ebp,ebx
  413887:	pop    edi
  413888:	dec    edi
  413889:	xchg   BYTE PTR [edx-0x2],ah
  41388c:	fxtract 
  41388e:	ficom  WORD PTR ds:0x111a4d3b
  413894:	push   es
  413895:	and    cl,dh
  413897:	mov    ecx,0x361c14a8
  41389c:	pop    ebx
  41389d:	sahf   
  41389e:	les    edx,FWORD PTR [edi+edx*2+0x4f]
  4138a2:	gs jbe 0x4138ac
  4138a5:	lahf   
  4138a6:	frstor [ebp*2+0x74a099ce]
  4138ad:	sbb    al,0x18
  4138af:	inc    esp
  4138b0:	jo     0x4138e0
  4138b2:	daa    
  4138b3:	(bad)  
  4138b4:	cmc    
  4138b5:	mov    ah,0x35
  4138b7:	jbe    0x41386f
  4138b9:	daa    
  4138ba:	jno    0x413901
  4138bc:	pmulhuw mm0,mm6
  4138bf:	jno    0x413911
  4138c1:	les    ecx,FWORD PTR [ebp+0x5570426e]
  4138c7:	js     0x4138f2
  4138c9:	and    ch,BYTE PTR [eax-0x11d2e6dd]
  4138cf:	bswap  edx
  4138d1:	sub    BYTE PTR [ecx+0x33],bh
  4138d4:	add    al,0xa
  4138d6:	cmp    al,0xe9
  4138d8:	push   ds
  4138d9:	ss cmc 
  4138db:	loop   0x413890
  4138dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138de:	or     esi,DWORD PTR [esi-0x4d]
  4138e1:	cld    
  4138e2:	shl    DWORD PTR [eax-0x7b],cl
  4138e5:	push   0xffffffdb
  4138e7:	add    al,BYTE PTR ds:0xdb18e200
  4138ed:	into   
  4138ee:	pop    ebp
  4138ef:	iret   
  4138f0:	inc    edx
  4138f1:	cld    
  4138f2:	fs stos DWORD PTR es:[edi],eax
  4138f4:	ds mov al,0x7c
  4138f7:	add    BYTE PTR [eax+0xf],ch
  4138fa:	aas    
  4138fb:	(bad)  
  4138fc:	pop    ss
  4138fd:	cdq    
  4138fe:	add    al,0xf0
  413900:	(bad)  
  413901:	ficom  WORD PTR [edx+0x383f0a68]
  413907:	jmp    0x2a20:0x204ec5fd
  41390e:	push   esp
  41390f:	push   esi
  413910:	pop    eax
  413911:	int    0x74
  413913:	adc    dl,BYTE PTR ds:0x5ba44d31
  413919:	aas    
  41391a:	jno    0x413975
  41391c:	and    BYTE PTR [ebp+0x5ab539dc],dl
  413922:	dec    edx
  413923:	int    0xb4
  413925:	mov    esp,0x3fc17878
  41392a:	jmp    0x413950
  41392c:	cmp    DWORD PTR [esi-0x2b],ecx
  41392f:	pop    ebx
  413930:	inc    ebx
  413931:	fisubr DWORD PTR [esp+esi*1-0x1c]
  413935:	(bad)  
  413936:	mov    al,0x24
  413938:	xchg   ebp,eax
  413939:	pop    edx
  41393a:	push   cs
  41393b:	test   al,0x82
  41393d:	mov    bh,0x5
  41393f:	mov    BYTE PTR [edi+edi*4],0xa4
  413943:	sbb    eax,0x722f30fd
  413948:	fdivp  st(6),st
  41394a:	adc    BYTE PTR [ebp-0x3b],bh
  41394d:	push   eax
  41394e:	mov    ds:0x148bf4b,eax
  413953:	sub    edi,edi
  413955:	mov    al,0xa0
  413957:	cs mov ebx,0xf4519782
  41395d:	adc    eax,0x53
  413960:	pop    ds
  413961:	sti    
  413962:	pushf  
  413963:	dec    edi
  413964:	push   ds
  413965:	clc    
  413966:	fiadd  DWORD PTR [edx-0x33]
  413969:	scas   al,BYTE PTR es:[edi]
  41396a:	loop   0x413957
  41396c:	xchg   edx,eax
  41396d:	std    
  41396e:	shr    ebx,0x1c
  413971:	mov    ah,0x16
  413973:	push   ss
  413974:	gs lahf 
  413976:	xchg   BYTE PTR [esp+ebp*4+0x138dcc0b],al
  41397d:	lock leave 
  41397f:	sar    DWORD PTR [ebp+0x16],1
  413982:	xchg   ebx,eax
  413983:	stc    
  413984:	jmp    0xc8f7:0x4ce7c7f7
  41398b:	retf   
  41398c:	test   eax,0x97539f35
  413991:	aam    0x68
  413993:	xchg   esp,eax
  413994:	mov    ebp,0xa8343fc7
  413999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399a:	and    BYTE PTR [ecx-0x40578b10],0x3f
  4139a1:	lods   eax,DWORD PTR ds:[esi]
  4139a2:	pop    eax
  4139a3:	and    DWORD PTR ds:0xac628689,eax
  4139a9:	mov    ch,BYTE PTR [edi-0x608a6992]
  4139af:	jge    0x41399e
  4139b1:	xor    ah,BYTE PTR [esi+edi*4-0x2739d018]
  4139b8:	adc    eax,0x4034d235
  4139bd:	sub    cl,BYTE PTR [edx-0x1d53c7f1]
  4139c3:	mov    edx,0x76457be
  4139c8:	loope  0x4139e3
  4139ca:	or     DWORD PTR ds:0xe6681cda,ecx
  4139d0:	data16 jp 0x413963
  4139d3:	js     0x41399d
  4139d5:	jecxz  0x4139b3
  4139d7:	neg    DWORD PTR [ebx]
  4139d9:	sbb    eax,0xd2624b03
  4139de:	rol    ecx,cl
  4139e0:	jbe    0x413a05
  4139e2:	pop    ds
  4139e3:	push   ss
  4139e4:	iret   
  4139e5:	or     eax,0xccfa453
  4139ea:	add    al,0x89
  4139ec:	fs int3 
  4139ee:	jmp    0xacf2:0x897b596d
  4139f5:	dec    eax
  4139f6:	jle    0x4139d0
  4139f8:	mov    cl,0x72
  4139fa:	pop    esp
  4139fb:	xchg   ebp,eax
  4139fc:	mov    ecx,fs
  4139fe:	jb     0x413993
  413a00:	sub    eax,0xfdbc17e1
  413a05:	arpl   WORD PTR [eax-0x6f4ba9c3],dx
  413a0b:	mov    ah,0xbd
  413a0d:	mov    WORD PTR [edx+ebp*1+0x7d69419],fs
  413a14:	ja     0x41399b
  413a16:	sbb    bh,BYTE PTR [esp+ebx*2+0x5bde5a68]
  413a1d:	mov    ss,WORD PTR [ebp+0x4bcf1e5]
  413a23:	xlat   BYTE PTR ds:[ebx]
  413a24:	mov    ch,0xe7
  413a26:	das    
  413a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a28:	enter  0x555f,0xda
  413a2c:	std    
  413a2d:	sbb    al,0xc4
  413a2f:	push   edx
  413a30:	inc    ebx
  413a31:	inc    edi
  413a32:	mov    dl,0xc2
  413a34:	test   DWORD PTR [esi],ebx
  413a36:	push   edi
  413a37:	nop
  413a38:	les    ebp,FWORD PTR [esi+0x6fa39e53]
  413a3e:	dec    esp
  413a3f:	add    ah,BYTE PTR [ebx+0x52cd5df0]
  413a45:	add    BYTE PTR [ebx-0x562680cc],dh
  413a4b:	shr    BYTE PTR [edx],1
  413a4d:	lods   al,BYTE PTR ds:[esi]
  413a4e:	xchg   ebx,eax
  413a4f:	push   es
  413a50:	inc    ebp
  413a51:	dec    edx
  413a52:	mov    al,0x25
  413a54:	mov    ebp,0x3e816290
  413a59:	sbb    eax,0x3cbccb91
  413a5e:	ins    DWORD PTR es:[edi],dx
  413a5f:	out    0x8d,al
  413a61:	xor    dl,BYTE PTR [ebx+0x951fa91]
  413a67:	leave  
  413a68:	push   ds
  413a69:	mov    ah,0xff
  413a6b:	test   DWORD PTR [ebx],esp
  413a6d:	pop    es
  413a6e:	push   eax
  413a6f:	jmp    0xb3553485
  413a74:	push   edx
  413a75:	pop    esp
  413a76:	int3   
  413a77:	push   ebx
  413a78:	xchg   edi,eax
  413a79:	xor    BYTE PTR [esi],ch
  413a7b:	fldz   
  413a7d:	out    dx,eax
  413a7e:	movntq (bad),mm2
  413a7f:	out    0xd5,eax
  413a81:	fadd   QWORD PTR [esi]
  413a83:	clc    
  413a84:	cmp    ecx,DWORD PTR [esi-0x70]
  413a87:	cwde   
  413a88:	int    0x2
  413a8a:	pop    es
  413a8b:	push   esp
  413a8c:	mov    esp,0x56d51b19
  413a91:	cmp    bh,BYTE PTR [ebp+0x1716e540]
  413a97:	sub    al,0x46
  413a99:	call   0xb5bc474
  413a9e:	mov    bl,0x9b
  413aa0:	(bad)  
  413aa2:	sti    
  413aa3:	push   ss
  413aa4:	mov    edi,0xe222edd
  413aa9:	retf   0x5fce
  413aac:	cli    
  413aad:	sub    esi,DWORD PTR [esi+esi*8+0x347aab93]
  413ab4:	jne    0x413b1a
  413ab6:	adc    dh,BYTE PTR [edi+0x32]
  413ab9:	sub    edx,DWORD PTR [edx*1+0x16f5d850]
  413ac0:	mov    ds:0x25f2dffe,al
  413ac5:	fucomp st(6)
  413ac7:	sub    BYTE PTR ds:0xae98d085,al
  413acd:	rcl    BYTE PTR [edx+0x6fb23747],1
  413ad3:	cs das 
  413ad5:	jp     0x413a94
  413ad7:	cmc    
  413ad8:	push   edi
  413ad9:	jp     0x413b2f
  413adb:	or     esp,esp
  413add:	mov    bl,0xf6
  413adf:	ficomp WORD PTR [edi]
  413ae1:	(bad)  
  413ae2:	ss gs call 0x7024:0xcc4ebe33
  413aeb:	push   ebp
  413aec:	cli    
  413aed:	out    0x84,eax
  413aef:	and    ah,BYTE PTR [ebx-0x472a04e5]
  413af5:	pusha  
  413af6:	xor    cl,BYTE PTR [edx+0x51ca4799]
  413afc:	aad    0x6a
  413afe:	test   al,0xdb
  413b00:	out    0xcf,eax
  413b02:	jb     0x413a92
  413b04:	and    al,0x80
  413b06:	sbb    dh,BYTE PTR [si]
  413b09:	ss test al,0xb3
  413b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0d:	call   0xbaf8:0xa475e212
  413b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b15:	stos   DWORD PTR es:[edi],eax
  413b16:	jne    0x413b09
  413b18:	cmp    eax,0xe1854c23
  413b1d:	or     DWORD PTR [esi-0x608f48ed],ecx
  413b23:	mov    eax,DWORD PTR [ebx]
  413b25:	xor    eax,0x718d6d01
  413b2a:	jo     0x413b7e
  413b2c:	je     0x413b44
  413b2e:	sar    BYTE PTR [ecx-0x7a],0x1
  413b32:	xor    al,0xdb
  413b34:	xchg   ebx,eax
  413b35:	mov    eax,0xe9114a04
  413b3a:	sbb    eax,0xd6570c32
  413b3f:	into   
  413b40:	mov    ecx,0xc64d9709
  413b45:	clc    
  413b46:	call   0x6de1:0x25363073
  413b4d:	lea    ecx,[ebp+ebp*1+0xe]
  413b51:	xor    edi,DWORD PTR [eax+eax*2-0x3c2a68fb]
  413b58:	sub    ch,BYTE PTR [ebx+0x1575cb25]
  413b5e:	xchg   ebp,eax
  413b5f:	xor    dl,BYTE PTR [esi-0x64204ae8]
  413b65:	jno    0x413be6
  413b67:	sub    ebp,esp
  413b69:	add    al,0xb0
  413b6b:	xchg   esp,eax
  413b6c:	mov    ecx,DWORD PTR [eax-0x4b]
  413b6f:	sub    al,0x53
  413b71:	clc    
  413b72:	mov    al,0xfb
  413b74:	loopne 0x413bc5
  413b76:	lea    ecx,[esi+0x35a7cdd]
  413b7c:	sbb    DWORD PTR [edi],esp
  413b7e:	test   eax,0x7e472c17
  413b83:	rcl    DWORD PTR [eax],1
  413b85:	fsubr  QWORD PTR [esi]
  413b87:	pop    es
  413b88:	out    dx,al
  413b89:	shl    edi,0x29
  413b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b8d:	push   edi
  413b8e:	es jae 0x413b97
  413b91:	add    al,0x1d
  413b93:	(bad)  
  413b94:	into   
  413b95:	sub    BYTE PTR [ebp+ebp*4+0x27292311],cl
  413b9c:	mov    bh,0x63
  413b9e:	aad    0xb3
  413ba0:	sti    
  413ba1:	mov    ecx,0xc5194736
  413ba6:	push   cs
  413ba7:	shl    DWORD PTR [edx+0x51],0x5d
  413bab:	neg    dh
  413bad:	push   0x45
  413baf:	ror    BYTE PTR [esi-0x37],0xc2
  413bb3:	in     al,dx
  413bb4:	loop   0x413b75
  413bb6:	mov    dl,0xa6
  413bb8:	enter  0x7fd6,0x6e
  413bbc:	fild   WORD PTR [ebx+0x41]
  413bbf:	in     eax,0xfe
  413bc1:	cmp    eax,esp
  413bc3:	mov    esi,0xb1041fca
  413bc8:	adc    al,0x9c
  413bca:	shl    esi,1
  413bcc:	xchg   esp,eax
  413bcd:	imul   esi,DWORD PTR [ebx],0x7b
  413bd0:	mov    WORD PTR [edx-0x23],es
  413bd3:	jl     0x413b5f
  413bd5:	loop   0x413be3
  413bd7:	loopne 0x413b6a
  413bd9:	aaa    
  413bda:	adc    eax,0x82289886
  413bdf:	jo     0x413c2b
  413be1:	imul   edx,edi,0x3d28db4c
  413be7:	in     al,0x60
  413be9:	or     eax,0xa44f49f8
  413bee:	pslld  mm3,QWORD PTR [eax-0x4c173136]
  413bf5:	fld    DWORD PTR [ebx-0x151a37bf]
  413bfb:	sub    BYTE PTR [ebx+0x71149d72],bh
  413c01:	xchg   ecx,eax
  413c02:	out    dx,al
  413c03:	adc    BYTE PTR [ebx],0x3
  413c06:	inc    esi
  413c07:	cmc    
  413c08:	jmp    0x37fb5d3a
  413c0d:	pop    ecx
  413c0e:	push   edx
  413c0f:	fimul  WORD PTR [edx]
  413c11:	mov    cl,0x99
  413c13:	jb     0x413bdf
  413c15:	adc    ch,BYTE PTR [eax]
  413c17:	pop    edi
  413c18:	add    ecx,DWORD PTR [edx]
  413c1a:	addr16 out 0xa0,eax
  413c1d:	push   edi
  413c1e:	inc    esp
  413c1f:	movd   mm1,edi
  413c22:	int3   
  413c23:	aaa    
  413c24:	and    DWORD PTR [ebp-0x60],esi
  413c27:	jg     0x413c72
  413c29:	push   esi
  413c2a:	xchg   BYTE PTR [ebp+0x767e2970],ah
  413c30:	mov    ecx,0x351d78c7
  413c35:	push   ecx
  413c36:	adc    ch,al
  413c38:	sbb    DWORD PTR [esi-0x54a1c890],ebx
  413c3e:	cmp    eax,0x95c22665
  413c43:	(bad)  
  413c45:	enter  0x89a7,0x4d
  413c49:	dec    eax
  413c4a:	mov    edx,0x1f852153
  413c4f:	into   
  413c50:	dec    ecx
  413c51:	sub    al,0x9f
  413c53:	imul   ebx,DWORD PTR ds:0x6b73f0d4,0x3e3f8972
  413c5d:	cld    
  413c5e:	push   esi
  413c5f:	outs   dx,DWORD PTR ds:[esi]
  413c60:	jnp    0x413c87
  413c62:	mov    ds:0x4ec0eed5,al
  413c67:	inc    esp
  413c68:	mov    bh,0x5a
  413c6a:	loop   0x413bee
  413c6c:	test   al,0x5a
  413c6e:	ret    
  413c6f:	test   eax,0xf057c29e
  413c74:	inc    esi
  413c75:	clc    
  413c76:	out    0xa6,al
  413c78:	(bad)  
  413c79:	mov    cl,0xa8
  413c7b:	mov    ebx,0xf179a641
  413c80:	add    bh,BYTE PTR [edi+0x5a]
  413c83:	and    al,0xf
  413c85:	rcl    esi,cl
  413c87:	data16 mov ch,0xc4
  413c8a:	sub    DWORD PTR [edi-0xa1df35c],ebp
  413c90:	push   esi
  413c91:	jbe    0x413cd2
  413c93:	mov    ds:0xb60bf22b,al
  413c98:	cmp    edi,0xb955d579
  413c9e:	loopne 0x413c4e
  413ca0:	test   eax,0x81c19468
  413ca5:	imul   ebx,DWORD PTR [ebp-0x419f08a9],0xffffffde
  413cac:	gs inc eax
  413cae:	jno    0x413cbf
  413cb0:	retf   
  413cb1:	xor    dh,al
  413cb3:	adc    edx,ecx
  413cb5:	dec    edx
  413cb6:	pop    ds
  413cb7:	jle    0x413d28
  413cb9:	es jo  0x413ca0
  413cbc:	dec    eax
  413cbd:	mov    dh,0xea
  413cbf:	int3   
  413cc0:	fld    TBYTE PTR [bx+di-0x21]
  413cc4:	(bad)  [edi-0x4ff80d05]
  413cca:	in     al,0x2e
  413ccc:	add    eax,0x3fb47a77
  413cd1:	mov    bh,0xb1
  413cd3:	(bad)  [ebx-0x5]
  413cd6:	jmp    DWORD PTR ds:0x7f47e5c2
  413cdc:	sti    
  413cdd:	xchg   ecx,eax
  413cde:	out    0xe9,al
  413ce0:	dec    esp
  413ce1:	dec    ebx
  413ce2:	lods   al,BYTE PTR ds:[esi]
  413ce3:	iret   
  413ce4:	call   0x4dac:0xa3db674b
  413ceb:	cld    
  413cec:	xchg   edi,eax
  413ced:	jecxz  0x413d17
  413cef:	jo     0x413d52
  413cf1:	inc    esp
  413cf2:	and    DWORD PTR [edx-0x513bdd4f],0x7ca3a7ae
  413cfc:	push   ecx
  413cfd:	pop    eax
  413cfe:	push   edx
  413cff:	sub    eax,0xdfe20b44
  413d04:	inc    eax
  413d05:	dec    ecx
  413d06:	or     dh,ch
  413d08:	adc    ah,dl
  413d0a:	into   
  413d0b:	in     al,dx
  413d0c:	sub    edi,esi
  413d0e:	mov    bh,0xb9
  413d10:	popf   
  413d11:	ja     0x413ce0
  413d13:	test   DWORD PTR [ebp+0x60],esi
  413d16:	repnz push es
  413d18:	mov    eax,0x3c328191
  413d1d:	(bad)  [edi]
  413d1f:	jb     0x413cf4
  413d21:	sbb    DWORD PTR [esi+0x5b34144a],ecx
  413d27:	jo     0x413d08
  413d29:	mov    al,ds:0x60f1348
  413d2e:	scas   al,BYTE PTR es:[edi]
  413d2f:	jmp    0x400e9e63
  413d34:	icebp  
  413d35:	cmp    BYTE PTR [eax],bh
  413d37:	scas   al,BYTE PTR es:[edi]
  413d38:	pop    ds
  413d39:	loop   0x413d1b
  413d3b:	imul   ebp,DWORD PTR [ecx-0x19],0x6ca74dc3
  413d42:	jmp    DWORD PTR [edx+eiz*2]
  413d45:	das    
  413d46:	leave  
  413d47:	push   cs
  413d48:	jb     0x413dc5
  413d4a:	repz ret 0x26e7
  413d4e:	sbb    eax,DWORD PTR [esi-0x7a08926a]
  413d54:	mov    esi,0xab0fb101
  413d59:	ret    0xad20
  413d5c:	bound  esi,QWORD PTR [ebp+0x4ffb067e]
  413d62:	jns    0x413d3b
  413d64:	add    DWORD PTR ds:0x311d6f6d,0x60c7a05d
  413d6e:	out    dx,eax
  413d6f:	sbb    al,dh
  413d71:	or     eax,0x554fcf2f
  413d76:	pop    es
  413d77:	js     0x413da2
  413d79:	or     BYTE PTR [edx-0x4b32f898],dh
  413d7f:	das    
  413d80:	das    
  413d81:	adc    bl,BYTE PTR ds:0x54620d2
  413d87:	jae    0x413df6
  413d89:	out    dx,al
  413d8a:	add    bl,BYTE PTR gs:[eax+0x1e]
  413d8e:	(bad)  
  413d8f:	pop    ecx
  413d90:	mov    dh,0x4d
  413d92:	and    DWORD PTR [eax],ebx
  413d94:	push   ebx
  413d95:	push   ecx
  413d96:	jae    0x413ddc
  413d98:	into   
  413d99:	mov    esi,0x96c17e05
  413d9e:	test   ebp,ebx
  413da0:	add    al,0x9e
  413da2:	jno    0x413dff
  413da4:	ret    
  413da5:	int3   
  413da6:	push   es
  413da7:	inc    edi
  413da8:	retf   
  413da9:	(bad)  
  413daa:	sti    
  413dab:	fistp  DWORD PTR [eax+0x46d6924e]
  413db1:	retf   0x44f
  413db4:	std    
  413db5:	sbb    al,al
  413db7:	shrd   DWORD PTR [edx],ebx,cl
  413dba:	dec    ebp
  413dbb:	sbb    dl,BYTE PTR [ecx]
  413dbd:	mov    dl,0x22
  413dbf:	imul   esp,DWORD PTR [esi],0x19958d57
  413dc5:	inc    edx
  413dc6:	ins    DWORD PTR es:[edi],dx
  413dc7:	mov    al,0x50
  413dc9:	dec    eax
  413dca:	aad    0x31
  413dcc:	lods   al,BYTE PTR ds:[esi]
  413dcd:	arpl   WORD PTR [esi+0x5a],sp
  413dd0:	int3   
  413dd1:	dec    BYTE PTR [esi+ecx*1]
  413dd4:	into   
  413dd5:	std    
  413dd6:	sub    al,0x2d
  413dd8:	pop    esi
  413dd9:	mov    esp,0xe25adc0d
  413dde:	xor    ebx,ecx
  413de0:	push   esi
  413de1:	xchg   DWORD PTR [esi+ebp*4],ebx
  413de4:	jle    0x413dc5
  413de6:	inc    edx
  413de7:	ins    BYTE PTR es:[edi],dx
  413de8:	push   esp
  413de9:	test   BYTE PTR [ecx+0x6449b8fd],ah
  413def:	dec    ecx
  413df0:	ins    BYTE PTR es:[edi],dx
  413df1:	in     eax,0xfd
  413df3:	scas   al,BYTE PTR es:[edi]
  413df4:	arpl   WORD PTR [ebp+edi*8-0x24],si
  413df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df9:	push   0xe28943b6
  413dfe:	les    edx,FWORD PTR [esi]
  413e00:	cmp    DWORD PTR [esi+0x11],ebp
  413e03:	lock shl DWORD PTR [edx],1
  413e06:	push   ecx
  413e07:	mov    eax,0x40815c6
  413e0c:	addr16 in eax,dx
  413e0e:	jle    0x413e6c
  413e10:	jp     0x413e47
  413e12:	add    dl,BYTE PTR [ebx+0x21]
  413e15:	and    al,dh
  413e17:	adc    al,bl
  413e19:	imul   cl
  413e1b:	xor    al,ch
  413e1d:	mov    WORD PTR [edx+0x59],?
  413e20:	xor    DWORD PTR [ebp-0x3e],0x83c5ec87
  413e27:	out    dx,eax
  413e28:	push   edi
  413e29:	popf   
  413e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2b:	and    esi,DWORD PTR [esp+esi*2-0x459a018c]
  413e32:	js     0x413dd8
  413e34:	mov    DWORD PTR [ebx],0x18b35ba6
  413e3a:	pusha  
  413e3b:	icebp  
  413e3c:	aaa    
  413e3d:	in     eax,0xef
  413e3f:	test   BYTE PTR [edi+ebp*8-0x35],bh
  413e43:	into   
  413e44:	or     DWORD PTR [esi-0x70040b6a],esp
  413e4a:	fwait
  413e4b:	cdq    
  413e4c:	pop    eax
  413e4d:	jb     0x413e20
  413e4f:	mov    dl,0x76
  413e51:	aaa    
  413e52:	dec    esi
  413e53:	sub    DWORD PTR [edi+0x475d1501],0xb
  413e5a:	mov    bl,BYTE PTR [ebx]
  413e5c:	call   DWORD PTR [esi-0x6b984e23]
  413e62:	gs sti 
  413e64:	push   esi
  413e65:	xchg   ebx,eax
  413e66:	pop    ebp
  413e67:	ins    BYTE PTR es:[edi],dx
  413e68:	push   ecx
  413e69:	fmul   DWORD PTR [ecx]
  413e6b:	dec    esi
  413e6c:	jmp    0x3d12:0xbb51eb48
  413e73:	cmp    bl,BYTE PTR [esi]
  413e75:	icebp  
  413e76:	shl    DWORD PTR [ebp+0x65],0x95
  413e7a:	pop    eax
  413e7b:	add    al,0x8b
  413e7d:	test   DWORD PTR [ebp+edi*8+0x766cc873],0x81906fa6
  413e88:	stos   DWORD PTR es:[edi],eax
  413e89:	add    eax,0xb4c1bdc3
  413e8e:	mov    eax,ds:0x3af9b9dd
  413e93:	sti    
  413e94:	shl    BYTE PTR [esi-0x3a],cl
  413e97:	dec    ecx
  413e98:	and    eax,0xb24de618
  413e9d:	mov    ch,0x9f
  413e9f:	or     BYTE PTR [ecx],0x16
  413ea2:	xchg   edi,eax
  413ea3:	xchg   esp,eax
  413ea4:	mov    ds,esp
  413ea6:	jnp    0x413e39
  413ea8:	scas   al,BYTE PTR es:[edi]
  413ea9:	adc    esp,edx
  413eab:	inc    esi
  413eac:	popf   
  413ead:	mov    ah,0xf5
  413eaf:	je     0x413edc
  413eb1:	mov    WORD PTR [esi-0xb15f6af],fs
  413eb7:	dec    esp
  413eb8:	jno    0x413ebe
  413eba:	in     al,dx
  413ebb:	push   esi
  413ebc:	xchg   ebp,eax
  413ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ebe:	or     eax,0xe96e75b4
  413ec3:	sbb    edi,esp
  413ec5:	adc    BYTE PTR [edx],bh
  413ec7:	test   ebp,ebx
  413ec9:	retf   0x7a5b
  413ecc:	adc    ebp,DWORD PTR [ecx+0x2a82fe2]
  413ed2:	and    bh,dl
  413ed4:	xlat   BYTE PTR ds:[ebx]
  413ed5:	mov    edi,0xa751422a
  413eda:	sbb    DWORD PTR [eax+0x60],edi
  413edd:	mov    bh,0xb5
  413edf:	adc    al,0xd9
  413ee1:	sbb    esp,DWORD PTR [esi]
  413ee3:	xor    DWORD PTR [esi-0x40],esi
  413ee6:	popf   
  413ee7:	jecxz  0x413eba
  413ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eea:	enter  0x1ae0,0xb
  413eee:	repz pop ss
  413ef0:	cmc    
  413ef1:	mov    dl,0x81
  413ef3:	mov    bl,0xfa
  413ef5:	mov    eax,0xfe6371be
  413efa:	jge    0x413f09
  413efc:	xor    DWORD PTR [esp+ecx*4],eax
  413eff:	repnz mov bh,0xd0
  413f02:	out    0xef,al
  413f04:	dec    ebx
  413f05:	cs mov bh,bh
  413f08:	sub    al,0x91
  413f0a:	dec    edi
  413f0b:	or     al,0x99
  413f0d:	adc    DWORD PTR [eax-0x4b],esp
  413f10:	sbb    DWORD PTR [ebx],ebx
  413f12:	mov    ah,0xa1
  413f14:	icebp  
  413f15:	push   ecx
  413f16:	mov    dl,0x4f
  413f18:	into   
  413f19:	test   BYTE PTR [ecx-0x74],0x46
  413f1d:	scas   eax,DWORD PTR es:[edi]
  413f1e:	(bad)  
  413f20:	(bad)  
  413f21:	outs   dx,DWORD PTR ds:[esi]
  413f22:	int    0xe2
  413f24:	add    eax,0xe794d25a
  413f29:	or     ebp,DWORD PTR [ebx-0x79]
  413f2c:	xor    DWORD PTR [eax-0x24],edx
  413f2f:	rcr    DWORD PTR [esi+edi*4],1
  413f32:	xchg   ebx,eax
  413f33:	lds    edi,FWORD PTR [eax-0x72]
  413f36:	push   ecx
  413f37:	mov    ebp,fs
  413f39:	ss mov dl,0xa6
  413f3c:	fstp   DWORD PTR [esi]
  413f3e:	push   cs
  413f3f:	aam    0x5c
  413f41:	push   edi
  413f42:	ds dec edx
  413f44:	inc    esi
  413f45:	leave  
  413f46:	sbb    al,BYTE PTR [ecx]
  413f48:	mov    ch,0x6a
  413f4a:	dec    edx
  413f4b:	inc    esi
  413f4c:	pop    esi
  413f4d:	(bad)  
  413f4e:	pushf  
  413f4f:	imul   BYTE PTR [ecx]
  413f51:	ror    DWORD PTR [eax],1
  413f53:	and    eax,0xc60801c5
  413f58:	icebp  
  413f59:	dec    ebp
  413f5a:	push   esi
  413f5b:	in     eax,0x6f
  413f5d:	pop    ebx
  413f5e:	gs je  0x413f63
  413f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f62:	sbb    eax,0xc3867d97
  413f67:	outs   dx,DWORD PTR ds:[esi]
  413f68:	dec    esp
  413f69:	sbb    BYTE PTR [esi-0x4a005651],cl
  413f6f:	add    WORD PTR [ebp+ebp*1-0x4e],bx
  413f74:	not    BYTE PTR [ebx-0x39ca47bc]
  413f7a:	jmp    0xc88b0547
  413f7f:	inc    ebx
  413f80:	lock popf 
  413f82:	xor    DWORD PTR [ebp-0x7f],edx
  413f85:	jle    0x413f6f
  413f87:	lahf   
  413f88:	or     DWORD PTR [esi+esi*1+0x5d],ecx
  413f8c:	ret    
  413f8d:	loop   0x413fe0
  413f8f:	int3   
  413f90:	popf   
  413f91:	dec    ecx
  413f92:	jp     0x413f3e
  413f94:	mov    gs,ebx
  413f96:	mov    ecx,es
  413f98:	rcr    DWORD PTR [eax],0x8b
  413f9b:	push   ebp
  413f9c:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	test   BYTE PTR [esi],dl
  414015:	xor    al,0xa4
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	mov    dl,0x89
  414021:	jno    0x4140a2
  414023:	fnop   
  414025:	jle    0x41408f
  414027:	repnz cmp bl,BYTE PTR [ebx]
  41402a:	out    dx,al
  41402b:	pop    eax
  41402c:	mov    ah,0xcf
  41402e:	cmp    DWORD PTR [edi+ebp*4+0x3b90455a],esp
  414035:	xchg   ebp,eax
  414036:	xchg   ecx,eax
  414037:	ins    DWORD PTR es:[edi],dx
  414038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414039:	and    edx,ebx
  41403b:	out    0xad,eax
  41403d:	stos   BYTE PTR es:[edi],al
  41403e:	ja     0x4140bc
  414040:	xor    BYTE PTR [edx],0xe8
  414043:	push   ebp
  414044:	pop    ds
  414045:	movnti DWORD PTR [eax],esi
  414048:	xchg   ecx,eax
  414049:	or     al,0x76
  41404b:	dec    eax
  41404c:	pop    eax
  41404d:	fdiv   DWORD PTR [edx+0x61]
  414050:	mov    ?,WORD PTR [eax]
  414052:	sub    al,ch
  414054:	js     0x413ff6
  414056:	or     DWORD PTR [bp-0x560c],eax
  41405b:	adc    al,0x69
  41405d:	xor    BYTE PTR [edx+0x63],0x71
  414061:	ss movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414064:	lds    esi,FWORD PTR [edx+ebp*4-0x80]
  414068:	pop    esi
  414069:	out    dx,al
  41406a:	mov    dh,0x93
  41406c:	push   esi
  41406d:	xor    ah,BYTE PTR [esi+eiz*4+0x3d2e614e]
  414074:	dec    esi
  414075:	(bad)  
  414076:	mov    ebp,0x4732583e
  41407b:	addr16 xchg ebx,eax
  41407d:	cld    
  41407e:	clc    
  41407f:	mov    DWORD PTR [edi+0x49fc0c6d],ebx
  414085:	mov    al,ds:0x5fee4d96
  41408a:	inc    eax
  41408b:	mov    esi,0xf463e8c0
  414090:	fsubr  st(7),st
  414092:	in     eax,0x38
  414094:	js     0x4140e2
  414096:	out    0x35,al
  414098:	int    0xe9
  41409a:	outs   dx,DWORD PTR ds:[esi]
  41409b:	nop
  41409c:	sub    eax,0xffdb1f28
  4140a1:	sbb    BYTE PTR [esi+eax*1],dl
  4140a4:	pusha  
  4140a5:	inc    ebp
  4140a6:	adc    al,BYTE PTR [edi]
  4140a8:	stc    
  4140a9:	gs cdq 
  4140ab:	sbb    BYTE PTR [edx],bl
  4140ad:	in     eax,dx
  4140ae:	sub    eax,0xd4a526a8
  4140b3:	shr    DWORD PTR [edi],cl
  4140b5:	es sub eax,0xa71dd90f
  4140bb:	neg    DWORD PTR [edi]
  4140bd:	pusha  
  4140be:	cs push edi
  4140c0:	add    BYTE PTR [edi+0x61db3480],dh
  4140c6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4140c8:	je     0x4140dc
  4140ca:	fwait
  4140cb:	mov    BYTE PTR [ecx+edi*8+0x35],ah
  4140cf:	xchg   ebx,eax
  4140d0:	in     al,0x9e
  4140d2:	dec    edx
  4140d3:	dec    esi
  4140d4:	ret    0x6ca9
  4140d7:	std    
  4140d8:	das    
  4140d9:	mov    dh,0x44
  4140db:	xor    eax,0x4956d340
  4140e0:	daa    
  4140e1:	out    dx,eax
  4140e2:	in     eax,dx
  4140e3:	xor    DWORD PTR [ebx+eiz*1-0x9b6cd38],edx
  4140ea:	mov    dl,0x84
  4140ec:	bound  edx,QWORD PTR [eax+0x73ea4231]
  4140f2:	push   cs
  4140f3:	ret    0x785e
  4140f6:	jns    0x4140ef
  4140f8:	fldenv [ebx+0x5d]
  4140fb:	scas   eax,DWORD PTR es:[edi]
  4140fc:	jmp    0x4ca6:0xdb00c0b0
  414103:	and    BYTE PTR [eax+ecx*1-0x23],ch
  414107:	(bad)  
  414108:	aam    0x8a
  41410a:	dec    ecx
  41410b:	cs in  al,dx
  41410d:	sbb    ebp,DWORD PTR [ebx-0x2170f470]
  414113:	pop    es
  414114:	aas    
  414115:	inc    ecx
  414116:	sub    DWORD PTR [ecx+ebx*4],esi
  414119:	bound  esp,QWORD PTR [edi]
  41411b:	cmp    BYTE PTR [ecx+0x7b807914],0x36
  414122:	aam    0x9e
  414124:	mov    bh,0x3e
  414126:	sbb    DWORD PTR [ecx+0x30],ebp
  414129:	rcr    DWORD PTR [esi+0x432cfe2a],0x78
  414130:	(bad)  
  414131:	cmc    
  414132:	cmp    al,BYTE PTR [eax-0x11a5c81e]
  414138:	xchg   BYTE PTR [esi-0x77668aba],ch
  41413e:	ss jmp 0x41419a
  414141:	or     ebx,DWORD PTR [esi-0x1f31cd0b]
  414147:	imul   DWORD PTR [ebx]
  414149:	push   edi
  41414a:	xor    esp,DWORD PTR [ecx+edx*4-0x1a]
  41414e:	scas   al,BYTE PTR es:[edi]
  41414f:	stos   BYTE PTR es:[edi],al
  414150:	retf   0x197e
  414153:	and    BYTE PTR [edx],al
  414155:	push   ebx
  414156:	shl    BYTE PTR [ecx+0x77],cl
  414159:	cld    
  41415a:	(bad)  
  41415b:	push   edx
  41415c:	out    dx,al
  41415d:	leave  
  41415e:	aam    0xec
  414160:	dec    esi
  414161:	mov    esp,0x304be1ee
  414166:	push   es
  414167:	push   0xfa9c9921
  41416c:	(bad)  
  41416d:	adc    eax,0x854cd89a
  414172:	aad    0x31
  414174:	outs   dx,DWORD PTR ds:[esi]
  414175:	pop    esi
  414176:	xchg   esp,eax
  414177:	(bad)  
  414178:	retf   0xc75d
  41417b:	xchg   edx,eax
  41417c:	je     0x414136
  41417e:	push   cs
  41417f:	inc    ebx
  414180:	lods   al,BYTE PTR ds:[esi]
  414181:	sbb    DWORD PTR [esi+0x69],0x80168048
  414188:	xchg   ebx,eax
  414189:	scas   eax,DWORD PTR es:[edi]
  41418a:	xchg   BYTE PTR ds:0xb339cadc,ch
  414190:	outs   dx,BYTE PTR ds:[esi]
  414191:	pop    es
  414192:	mov    bh,0x6c
  414194:	and    cl,BYTE PTR [ebx+edx*4+0x75]
  414198:	and    bl,BYTE PTR [ecx+0x53]
  41419b:	(bad)  
  41419c:	xchg   ebp,eax
  41419d:	mov    edi,0x92def472
  4141a2:	mov    eax,0xc06a155f
  4141a7:	outs   dx,DWORD PTR ds:[esi]
  4141a8:	or     al,0xb1
  4141aa:	ja     0x41415d
  4141ac:	shl    BYTE PTR [edx+0x7637bdbf],1
  4141b2:	adc    DWORD PTR [edi+0x24fdf586],edi
  4141b8:	xor    BYTE PTR [edi-0x7f],bl
  4141bb:	and    al,0xd7
  4141bd:	mov    WORD PTR [ebx+0x1de9c0e0],?
  4141c3:	icebp  
  4141c4:	pop    ebp
  4141c5:	sar    BYTE PTR [ebp+0x236a59c1],1
  4141cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141cc:	hlt    
  4141cd:	int    0x1f
  4141cf:	cli    
  4141d0:	mov    dl,0x9d
  4141d2:	mov    bl,0x10
  4141d4:	repz bound ecx,QWORD PTR [ebx+0x7e]
  4141d8:	fmul   DWORD PTR [ecx]
  4141da:	ds mov esp,gs
  4141dd:	adc    dl,BYTE PTR [ebp+edi*2-0x4e]
  4141e1:	(bad)
  4141e4:	pop    esi
  4141e5:	push   esp
  4141e6:	or     al,0xe
  4141e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e9:	dec    edx
  4141ea:	out    dx,al
  4141eb:	pushf  
  4141ec:	mov    dh,0xe5
  4141ee:	pop    esp
  4141ef:	ds and eax,0xbc1e5677
  4141f5:	mov    es,WORD PTR [eax+0x5f]
  4141f8:	enter  0xd4b1,0x3b
  4141fc:	sbb    DWORD PTR gs:[edi],eax
  4141ff:	dec    esp
  414200:	mov    bh,0xe7
  414202:	clts   
  414204:	out    dx,al
  414205:	pop    ss
  414206:	xor    bh,BYTE PTR [eax-0x4c25b3c6]
  41420c:	push   esi
  41420d:	out    dx,al
  41420e:	imul   edi,DWORD PTR [ebx+0x45],0x1113245d
  414215:	cwde   
  414216:	rcr    BYTE PTR [ebx-0x45],cl
  414219:	inc    edi
  41421a:	or     edx,edx
  41421c:	pop    ss
  41421d:	ret    
  41421e:	mov    ebx,0x7e828ee7
  414223:	mov    ecx,0x72c33850
  414228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414229:	push   esi
  41422a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41422b:	mov    ch,al
  41422d:	out    0x9d,eax
  41422f:	jne    0x4141b2
  414231:	lods   eax,DWORD PTR ds:[esi]
  414232:	pushf  
  414233:	inc    ecx
  414234:	bound  ecx,QWORD PTR [edx]
  414236:	push   cs
  414237:	int    0x17
  414239:	(bad)  
  41423a:	mov    al,ds:0x8d762795
  41423f:	inc    edi
  414240:	(bad)  
  414241:	pop    ebx
  414242:	mov    ?,WORD PTR [esi+0x60349d60]
  414248:	xor    BYTE PTR [eax+ebx*2],cl
  41424b:	fbld   TBYTE PTR [ecx]
  41424d:	sbb    al,0x2e
  41424f:	xchg   esi,eax
  414250:	test   DWORD PTR [ecx-0x30],0x368e7608
  414257:	push   es
  414258:	jmp    0x414213
  41425a:	stos   DWORD PTR es:[edi],eax
  41425b:	fisttp QWORD PTR [edi+esi*1-0xa98734f]
  414262:	mov    ecx,0x85304828
  414267:	mov    DWORD PTR [edx-0x2d819895],ebx
  41426d:	or     edi,edx
  41426f:	dec    ecx
  414270:	push   ecx
  414271:	outs   dx,BYTE PTR ds:[esi]
  414272:	stos   DWORD PTR es:[edi],eax
  414273:	ds push 0x15
  414276:	out    0xc4,eax
  414278:	xchg   ecx,eax
  414279:	popa   
  41427a:	jmp    0x41429f
  41427c:	scas   eax,DWORD PTR es:[edi]
  41427d:	lds    ebp,FWORD PTR [ecx+0x613d4b14]
  414283:	clc    
  414284:	push   esp
  414285:	stos   DWORD PTR es:[edi],eax
  414286:	ror    bl,1
  414288:	pop    ss
  414289:	popa   
  41428a:	gs fsub st(2),st
  41428d:	nop
  41428e:	retf   
  41428f:	add    eax,0xd95abc64
  414294:	xor    ecx,DWORD PTR [eax-0x26365cfe]
  41429a:	ins    DWORD PTR es:[edi],dx
  41429b:	sahf   
  41429c:	jne    0x414226
  41429e:	stos   DWORD PTR es:[edi],eax
  41429f:	lock lods al,BYTE PTR ds:[esi]
  4142a1:	retf   
  4142a2:	fld    TBYTE PTR [ebx+0x27]
  4142a5:	mov    ds:0x946cf39a,al
  4142aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ab:	mov    dh,0x55
  4142ad:	jno    0x414256
  4142af:	jp     0x414313
  4142b1:	push   eax
  4142b2:	test   DWORD PTR [eax],eax
  4142b4:	jl     0x41426f
  4142b6:	cmp    al,0x55
  4142b8:	lds    edi,FWORD PTR [esi+0x6a]
  4142bb:	outs   dx,BYTE PTR ds:[esi]
  4142bc:	adc    DWORD PTR [edi-0x392037f3],esp
  4142c2:	jl     0x41425e
  4142c4:	int3   
  4142c5:	mov    edx,0x4b903237
  4142ca:	jg     0x4142e8
  4142cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142cd:	xchg   edi,eax
  4142ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142d0:	leave  
  4142d1:	imul   eax,DWORD PTR [ebx+0x6d0e2370],0x19
  4142d8:	mov    BYTE PTR [edx],bl
  4142da:	xor    al,0x54
  4142dc:	adc    esp,DWORD PTR [ecx-0x4f6e2cbf]
  4142e2:	xor    BYTE PTR [ebp+0x3f0fc901],ah
  4142e8:	adc    ch,bl
  4142ea:	loop   0x414316
  4142ec:	into   
  4142ed:	movzx  ecx,BYTE PTR [edi]
  4142f0:	sar    edi,0x2f
  4142f3:	stc    
  4142f4:	or     DWORD PTR [ebx+ebx*4],eax
  4142f7:	test   BYTE PTR [edx],al
  4142f9:	add    BYTE PTR [edx-0x460cca9c],cl
  4142ff:	push   edi
  414300:	clc    
  414301:	and    eax,0x1f3bb665
  414306:	xlat   BYTE PTR ds:[ebx]
  414307:	daa    
  414308:	sub    DWORD PTR [esi],esi
  41430a:	int    0x3
  41430c:	sub    eax,0xed893f7b
  414311:	add    ebx,esp
  414313:	mov    ecx,0xc68327a7
  414318:	sub    al,BYTE PTR [ebp-0x769d84ea]
  41431e:	xor    al,0x93
  414320:	and    bl,BYTE PTR [esi-0x8]
  414323:	xlat   BYTE PTR ds:[ebx]
  414324:	push   es
  414325:	jbe    0x414333
  414327:	adc    eax,0x8145ce03
  41432c:	pusha  
  41432d:	push   eax
  41432e:	adc    cl,dl
  414330:	pop    ebp
  414331:	int    0xe1
  414333:	mov    ch,0xc1
  414335:	lahf   
  414336:	fwait
  414337:	mov    esp,0xafd5ebce
  41433c:	dec    ecx
  41433d:	repz div BYTE PTR [esi+0x2d]
  414341:	mov    ds,WORD PTR [edx+ebp*4]
  414344:	lods   eax,DWORD PTR ds:[esi]
  414345:	and    BYTE PTR [esi+0x16c89b1d],ch
  41434b:	or     BYTE PTR [ecx+0x61dd15d2],bl
  414351:	es mov ebx,ebx
  414354:	(bad)  
  414355:	sbb    ah,BYTE PTR [ecx+0x29]
  414358:	fbstp  TBYTE PTR [ebx+edi*4+0x1b]
  41435c:	mov    bh,0x97
  41435e:	xchg   esp,eax
  41435f:	and    eax,0xd2f9e75b
  414364:	arpl   sp,cx
  414366:	or     ah,bh
  414368:	in     al,0x2d
  41436a:	out    0x2a,eax
  41436c:	in     al,dx
  41436d:	adc    cl,BYTE PTR [ebx-0x1ebc6748]
  414373:	push   ebp
  414374:	fsub   st,st(6)
  414376:	inc    edi
  414377:	fbld   TBYTE PTR [ebp-0x3f5b9352]
  41437d:	pop    ecx
  41437e:	je     0x41434a
  414380:	xchg   edx,eax
  414381:	loopne 0x414336
  414383:	outs   dx,DWORD PTR ds:[esi]
  414384:	adc    BYTE PTR [ebx+0x275f22ea],ah
  41438a:	pop    ebx
  41438b:	nop
  41438c:	mov    esi,0xdd377dc7
  414391:	and    DWORD PTR [esp+eax*8],edx
  414394:	sub    bh,BYTE PTR [esi+ebp*8-0x5c]
  414398:	test   BYTE PTR [ebp-0x3f],ch
  41439b:	xchg   esi,eax
  41439c:	hlt    
  41439d:	rcr    BYTE PTR [eax+ecx*1+0x142c53c5],0x72
  4143a5:	sahf   
  4143a6:	sub    al,BYTE PTR [esi]
  4143a8:	mov    ebx,0x24c12faf
  4143ad:	in     al,dx
  4143ae:	sub    BYTE PTR [edi],dh
  4143b0:	push   ebx
  4143b1:	mov    esi,eax
  4143b3:	add    BYTE PTR [edi],ch
  4143b5:	push   eax
  4143b6:	pusha  
  4143b7:	push   ebp
  4143b8:	xchg   ecx,eax
  4143b9:	les    eax,FWORD PTR [eax+0x16]
  4143bc:	mov    edx,DWORD PTR [ebp+0x64a40f6]
  4143c2:	xor    BYTE PTR [ecx-0x7f72ac73],bl
  4143c8:	sbb    DWORD PTR [ebx],edx
  4143ca:	(bad)
  4143cd:	fwait
  4143ce:	test   BYTE PTR [eiz*4-0x7dece590],dl
  4143d5:	adc    ebx,DWORD PTR [ebp-0x4c12e489]
  4143db:	push   edi
  4143dc:	dec    edx
  4143dd:	not    BYTE PTR [edi+eax*1+0x6]
  4143e1:	mov    BYTE PTR [ecx+eiz*8],0xb6
  4143e5:	xchg   esi,eax
  4143e6:	(bad)  
  4143e7:	loope  0x414441
  4143e9:	loope  0x41444e
  4143eb:	(bad)  [edi+ebp*2]
  4143ee:	mov    edi,0xf99bee03
  4143f3:	and    ch,BYTE PTR [eax]
  4143f5:	jno    0x41445d
  4143f7:	push   es
  4143f8:	pop    edx
  4143f9:	(bad)  
  4143fa:	stos   DWORD PTR es:[edi],eax
  4143fb:	gs fwait
  4143fd:	pop    eax
  4143fe:	(bad)  
  4143ff:	and    bh,BYTE PTR [edx-0x12282aa3]
  414405:	in     eax,dx
  414406:	push   esi
  414407:	imul   ebp,DWORD PTR [eax-0x685c47ba],0xffffffb9
  41440e:	mov    eax,ds:0x4b70fbba
  414413:	fs or  bl,bh
  414416:	mov    ch,0xff
  414418:	repnz neg BYTE PTR [ebx+0x25]
  41441c:	push   0x21dd261c
  414421:	xlat   BYTE PTR ds:[ebx]
  414422:	aad    0x42
  414424:	test   DWORD PTR [eax+0x5],ebp
  414427:	nop
  414428:	and    al,0x42
  41442a:	fild   QWORD PTR [eax+ebx*1]
  41442d:	in     eax,dx
  41442e:	sbb    al,BYTE PTR [ecx+edx*1]
  414431:	push   edi
  414432:	mov    ecx,0xebfd1653
  414437:	stos   DWORD PTR es:[edi],eax
  414438:	nop
  414439:	jmp    eax
  41443b:	cmp    eax,0x9e83cf04
  414440:	push   0xfffffff3
  414442:	ret    
  414443:	sahf   
  414444:	fcmovu st,st(1)
  414446:	call   0x8c2d:0x2b3b4fbc
  41444d:	sub    al,0xe1
  41444f:	push   0xffffff83
  414451:	icebp  
  414452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414453:	fcomp  DWORD PTR [eax+0x9]
  414456:	xchg   ebp,eax
  414457:	inc    ebx
  414458:	cli    
  414459:	jle    0x4144c7
  41445b:	test   BYTE PTR [eax+ebx*2-0x5c],bh
  41445f:	inc    ebp
  414460:	mov    ebp,0xffefc12
  414465:	call   0x39a9:0xfec9cc75
  41446c:	fsubp  st(6),st
  41446e:	lea    ebp,[ebx-0x6ed0132d]
  414474:	sbb    al,0xa5
  414476:	push   es
  414477:	aam    0xb
  414479:	and    cl,al
  41447b:	jb     0x414466
  41447d:	mov    edi,?
  41447f:	or     ebp,edi
  414481:	addr16 mov al,ds:0x47ea
  414485:	sub    bh,ch
  414487:	dec    edi
  414488:	aaa    
  414489:	push   cs
  41448a:	sbb    ebp,edx
  41448c:	or     edi,DWORD PTR [edx+0x2bdbc6e8]
  414492:	or     bl,BYTE PTR [edx]
  414494:	or     ch,BYTE PTR [ebx+0x1c4ebf06]
  41449a:	inc    edx
  41449b:	add    al,0x6a
  41449d:	in     al,dx
  41449e:	mov    eax,edx
  4144a0:	jns    0x41445a
  4144a2:	adc    eax,0x99315897
  4144a7:	lahf   
  4144a8:	push   edi
  4144a9:	sbb    al,0x9f
  4144ab:	cli    
  4144ac:	push   es
  4144ad:	mov    eax,0x3079ada0
  4144b2:	cs jne 0x414450
  4144b5:	add    esi,esi
  4144b7:	dec    ecx
  4144b8:	ror    BYTE PTR [ebx+0x6a],cl
  4144bb:	adc    DWORD PTR [ecx+0x54767918],0xd951bc25
  4144c5:	in     al,dx
  4144c6:	(bad)  
  4144c7:	in     eax,0x4a
  4144c9:	lahf   
  4144ca:	outs   dx,BYTE PTR ds:[esi]
  4144cb:	xlat   BYTE PTR ds:[ebx]
  4144cc:	pop    esi
  4144cd:	jge    0x41454a
  4144cf:	xor    BYTE PTR [edx+ecx*1],cl
  4144d2:	xchg   esi,eax
  4144d3:	pop    ss
  4144d4:	dec    esp
  4144d5:	push   esp
  4144d6:	mov    DWORD PTR [ebp+ecx*1-0x55],edi
  4144da:	push   esp
  4144db:	inc    edx
  4144dc:	xchg   ecx,eax
  4144dd:	jge    0x414465
  4144df:	ficomp WORD PTR [ebx-0x57d10d74]
  4144e5:	mov    esi,0x79426f90
  4144ea:	ins    DWORD PTR es:[edi],dx
  4144eb:	rol    al,cl
  4144ed:	mov    al,0x20
  4144ef:	push   0x60
  4144f1:	or     BYTE PTR [eax+0x30],bh
  4144f4:	jne    0x414494
  4144f6:	aas    
  4144f7:	xor    ch,bl
  4144f9:	xchg   ebp,eax
  4144fa:	jae    0x41448b
  4144fc:	sbb    eax,0xf1ee32c3
  414501:	sbb    al,0x13
  414503:	sub    edx,DWORD PTR [edi-0x4ba3a206]
  414509:	and    eax,0x15f797d8
  41450e:	mov    al,ds:0xe10b1315
  414513:	pusha  
  414514:	in     eax,0x12
  414516:	xlat   BYTE PTR ds:[ebx]
  414517:	sbb    DWORD PTR [edx-0x73],0xfffffff4
  41451b:	call   0xcc0528f9
  414520:	pop    eax
  414521:	sti    
  414522:	jge    0x414562
  414524:	cmp    eax,0xfbc46aa4
  414529:	mov    ds:0x2d275f69,al
  41452e:	retf   
  41452f:	cmp    al,0x6f
  414531:	pop    edx
  414532:	jae    0x414547
  414534:	stos   DWORD PTR es:[edi],eax
  414535:	jno    0x41450b
  414537:	mov    fs,WORD PTR [edx]
  414539:	loopne 0x41452d
  41453b:	cwde   
  41453c:	xchg   esi,eax
  41453d:	adc    al,BYTE PTR gs:[eax-0x17]
  414541:	test   al,0x53
  414543:	fcomp  QWORD PTR [edx+edx*2-0x2c]
  414547:	push   cs
  414548:	scas   eax,DWORD PTR es:[edi]
  414549:	lods   eax,DWORD PTR ds:[esi]
  41454a:	mul    ecx
  41454c:	dec    ebx
  41454d:	jl     0x414530
  41454f:	cmp    al,0xdc
  414551:	sti    
  414552:	mov    ah,BYTE PTR [edx+0x891e247]
  414558:	mov    esp,0x50edb78f
  41455d:	add    BYTE PTR [ecx+esi*1+0x73],dh
  414561:	mov    cl,0xd6
  414563:	xor    eax,DWORD PTR ds:0x1acd96df
  414569:	ret    0x6b47
  41456c:	cmp    eax,0xa9bd9d70
  414571:	sub    ah,dl
  414573:	xor    al,0x36
  414575:	cld    
  414576:	xchg   edx,eax
  414577:	jb     0x41455f
  414579:	sub    DWORD PTR [ebx],esi
  41457b:	xchg   esp,eax
  41457c:	pop    edi
  41457d:	dec    edx
  41457e:	int    0x5a
  414580:	adc    eax,0xeb758a25
  414585:	jno    0x4145a3
  414587:	ja     0x41452f
  414589:	push   0x20
  41458b:	pop    ecx
  41458c:	shr    DWORD PTR [edx+edx*4],0xf8
  414590:	repz aam 0xfe
  414593:	push   0x409e705a
  414598:	xor    edi,ecx
  41459a:	outs   dx,DWORD PTR ds:[esi]
  41459b:	in     al,0xe6
  41459d:	test   DWORD PTR [edx+0x6573b240],0x9246d81b
  4145a7:	adc    BYTE PTR [ecx-0x65],dl
  4145aa:	sahf   
  4145ab:	ss pop ebx
  4145ad:	fld    DWORD PTR [esi-0x2b283f57]
  4145b3:	xor    ebp,DWORD PTR [ecx-0x280b54a2]
  4145b9:	cli    
  4145ba:	es iret 
  4145bc:	jne    0x414569
  4145be:	fwait
  4145bf:	push   eax
  4145c0:	out    dx,eax
  4145c1:	or     al,0x53
  4145c3:	mov    al,0x2d
  4145c5:	stc    
  4145c6:	cmc    
  4145c7:	scas   eax,DWORD PTR es:[edi]
  4145c8:	neg    BYTE PTR [edx+0x3a28829]
  4145ce:	xlat   BYTE PTR ds:[ebx]
  4145cf:	arpl   WORD PTR [esi-0x54],cx
  4145d2:	bound  esp,QWORD PTR [eax]
  4145d4:	or     DWORD PTR [edx],0x6715c4f9
  4145da:	lock hlt 
  4145dc:	inc    edx
  4145dd:	(bad)  
  4145de:	jmp    0x41457a
  4145e0:	rcr    BYTE PTR [esi],0xcc
  4145e3:	in     al,dx
  4145e4:	jnp    0x4145e5
  4145e6:	enter  0xb5c,0x9b
  4145ea:	sub    eax,0x7c71b213
  4145ef:	push   ss
  4145f0:	lahf   
  4145f1:	fdivr  st(2),st
  4145f3:	sbb    cl,BYTE PTR [edi+0x161eec6f]
  4145f9:	add    ebx,eax
  4145fb:	sbb    al,0x37
  4145fd:	push   0x40
  4145ff:	loopne 0x414617
  414601:	adc    ch,BYTE PTR [edx]
  414603:	sbb    dh,ah
  414605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414606:	dec    eax
  414607:	cli    
  414608:	xor    eax,0xf9267928
  41460d:	mov    dh,0x51
  41460f:	sub    al,0x37
  414611:	adc    eax,0xf27ed105
  414616:	cld    
  414617:	scas   eax,DWORD PTR es:[edi]
  414618:	cmp    esp,DWORD PTR [edi+0x68]
  41461b:	jns    0x414637
  41461d:	sbb    esp,0xfe831db2
  414623:	push   ebx
  414624:	enter  0x68cb,0xf9
  414628:	sbb    esp,DWORD PTR [ebp-0xa]
  41462b:	fwait
  41462c:	mov    al,0xa0
  41462e:	mov    WORD PTR [ebp-0x36edc2a6],ss
  414634:	push   esi
  414635:	aam    0xb6
  414637:	mov    dl,0x99
  414639:	fsubr  DWORD PTR [ebp-0x6638b1fb]
  41463f:	cs mov bh,0xd8
  414642:	xchg   WORD PTR [edi-0x76],si
  414646:	pushf  
  414647:	(bad)  
  414648:	pop    edi
  414649:	dec    ax
  41464b:	mov    bl,0x76
  41464d:	pop    eax
  41464e:	fs daa 
  414650:	popf   
  414651:	test   eax,0xe63d48f1
  414656:	add    DWORD PTR [ebx+0x34],eax
  414659:	loopne 0x4146d4
  41465b:	ss nop
  41465d:	jp     0x414677
  41465f:	rol    BYTE PTR [ecx-0x6d],cl
  414662:	jae    0x4146c2
  414664:	or     DWORD PTR [ecx+ebx*1],edi
  414667:	pop    esp
  414668:	mul    BYTE PTR [eax]
  41466a:	xchg   ebp,eax
  41466b:	inc    ebx
  41466c:	test   BYTE PTR [ebp-0x7a09d75f],dl
  414672:	das    
  414673:	push   ds
  414674:	pop    ebx
  414675:	xchg   esp,eax
  414676:	jno    0x4146bf
  414678:	inc    eax
  414679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467a:	cmp    ebx,0xc0b807ed
  414680:	adc    cl,BYTE PTR [ebp-0x2c]
  414683:	jnp    0x414663
  414685:	fs cwde 
  414687:	loopne 0x414703
  414689:	dec    ebx
  41468a:	push   ecx
  41468b:	cwde   
  41468c:	retf   
  41468d:	mov    ebx,0x3eeb06e5
  414692:	and    BYTE PTR ds:0xe719d0ab,ch
  414698:	sti    
  414699:	pop    edx
  41469a:	cmc    
  41469b:	cwde   
  41469c:	daa    
  41469d:	xor    cl,BYTE PTR [ebp+0x240b8f9c]
  4146a3:	inc    ebp
  4146a4:	aaa    
  4146a5:	call   0x72114882
  4146aa:	out    0x8c,al
  4146ac:	pop    ebx
  4146ad:	mov    ebp,DWORD PTR [esi]
  4146af:	push   eax
  4146b0:	mov    cl,0x52
  4146b2:	addr16 add eax,0x6d692384
  4146b8:	add    al,0x40
  4146ba:	pop    ebx
  4146bb:	mov    ch,0x46
  4146bd:	and    bh,BYTE PTR fs:[ecx+0x2455cf0c]
  4146c4:	test   BYTE PTR ds:0x23749592,ah
  4146ca:	sbb    dh,BYTE PTR [ecx+ebp*8-0x2def8f08]
  4146d1:	sub    al,0x6d
  4146d3:	cmp    DWORD PTR [esi],esp
  4146d5:	pop    eax
  4146d6:	or     cl,BYTE PTR [ebx+ecx*4]
  4146d9:	inc    ecx
  4146da:	mov    bh,0xc9
  4146dc:	lods   eax,DWORD PTR ds:[esi]
  4146dd:	mov    ebp,0xbc5803ae
  4146e2:	push   cs
  4146e3:	mov    ebp,0x3b278b68
  4146e8:	jno    0x414728
  4146ea:	and    ah,dl
  4146ec:	xor    esp,ecx
  4146ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ef:	and    al,0x57
  4146f1:	mov    ebx,0x44b29b41
  4146f6:	retf   
  4146f7:	ret    
  4146f8:	pop    ss
  4146f9:	ret    0x9d20
  4146fc:	in     al,0xad
  4146fe:	add    eax,0xcae656ad
  414703:	mov    esi,0xee44b401
  414708:	push   ss
  414709:	sub    al,0x73
  41470b:	repnz mov DWORD PTR [eax-0xa4baa2],ecx
  414712:	push   esi
  414713:	and    al,BYTE PTR [ebp+0x3e]
  414716:	imul   esi,DWORD PTR [esi-0x4d],0x57885a
  41471d:	in     al,dx
  41471e:	cmc    
  41471f:	cmovne esi,eax
  414722:	or     al,0x79
  414724:	sbb    eax,0x6c308745
  414729:	sub    BYTE PTR [ebx],dl
  41472b:	pop    esi
  41472c:	ja     0x41478b
  41472e:	dec    eax
  41472f:	pop    ds
  414730:	xor    al,0x3d
  414732:	gs push ds
  414734:	mov    ds:0xd0c904d9,al
  414739:	jmp    0x6caa6588
  41473e:	inc    eax
  41473f:	scas   al,BYTE PTR es:[edi]
  414740:	mov    esi,edi
  414742:	iret   
  414743:	test   DWORD PTR [ecx+eiz*2-0x10b54512],0x6a78f5d2
  41474e:	lods   eax,DWORD PTR ds:[esi]
  41474f:	add    al,0xf1
  414751:	xor    DWORD PTR [edi],edi
  414753:	(bad)  
  414755:	pushf  
  414756:	sbb    ebp,DWORD PTR [ecx+0x78]
  414759:	xchg   esi,eax
  41475a:	push   ss
  41475b:	call   0xb989:0x7f6f6749
  414762:	clc    
  414763:	sti    
  414764:	jmp    0x4147c4
  414766:	push   0x37
  414768:	jnp    0x41475e
  41476a:	mov    dh,0x3
  41476c:	das    
  41476d:	lea    eax,[ebx+0x51727ba7]
  414773:	jmp    0xe271d128
  414778:	xchg   edx,eax
  414779:	xchg   esp,eax
  41477a:	push   edi
  41477b:	mov    ebp,0xf870834
  414780:	std    
  414781:	fist   DWORD PTR [ebp+0x1d7f9eb2]
  414787:	je     0x41479a
  414789:	cwde   
  41478a:	cmp    DWORD PTR [ebp+0x4f803818],esi
  414790:	stos   BYTE PTR es:[edi],al
  414791:	xchg   esp,eax
  414792:	cmc    
  414793:	fidiv  WORD PTR [ebp+0x6af1808f]
  414799:	xor    esi,DWORD PTR [ebp+eiz*2+0x1fb15b57]
  4147a0:	mov    ch,0x51
  4147a2:	or     al,0x37
  4147a4:	nop
  4147a5:	pop    eax
  4147a6:	(bad)  
  4147a7:	(bad)  
  4147a8:	stc    
  4147a9:	xor    bl,dh
  4147ab:	push   cs
  4147ac:	add    DWORD PTR [ebp+eiz*1-0x153480c9],0x60
  4147b4:	or     al,0x57
  4147b6:	sub    BYTE PTR [esi-0x6eb8c425],0xec
  4147bd:	aad    0x15
  4147bf:	sub    dl,BYTE PTR [edi-0x1c81ac7a]
  4147c5:	mov    esp,0x2cfebbb9
  4147ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147cb:	sbb    cl,ah
  4147cd:	in     eax,dx
  4147ce:	daa    
  4147cf:	cmp    bl,BYTE PTR [edi]
  4147d1:	adc    eax,DWORD PTR [edx+0x293353e]
  4147d7:	scas   eax,DWORD PTR es:[edi]
  4147d8:	dec    edi
  4147d9:	lock dec edx
  4147db:	dec    ecx
  4147dc:	int3   
  4147dd:	push   ds
  4147de:	aam    0x8
  4147e0:	inc    edi
  4147e1:	call   0x54f7:0x77b80cd8
  4147e8:	cmp    BYTE PTR [edx+0x3c],dl
  4147eb:	adc    ah,BYTE PTR [esi-0x63]
  4147ee:	mov    ebp,edi
  4147f0:	jg     0x41485e
  4147f2:	dec    edx
  4147f3:	clc    
  4147f4:	mov    dl,0xae
  4147f6:	cdq    
  4147f7:	cmp    bh,BYTE PTR [edx+ecx*8+0x6fc0ded4]
  4147fe:	push   cs
  4147ff:	neg    BYTE PTR [ecx-0x1c]
  414802:	push   ebx
  414803:	clc    
  414804:	sbb    esi,DWORD PTR [edx+ebx*1-0x4f]
  414808:	jl     0x41483a
  41480a:	shl    BYTE PTR [esi-0x62377bf7],cl
  414810:	sbb    cl,dl
  414812:	aaa    
  414813:	xlat   BYTE PTR ds:[ebx]
  414814:	dec    esi
  414815:	or     al,0x55
  414817:	xor    ecx,edi
  414819:	in     eax,0xbc
  41481b:	inc    edi
  41481c:	ss retf 0x10c6
  414820:	xor    DWORD PTR [esi+0x39c386c4],0x23e2e09
  41482a:	das    
  41482b:	mov    edi,DWORD PTR [eax-0x51]
  41482e:	mov    ch,0xfe
  414830:	outs   dx,BYTE PTR ds:[esi]
  414831:	push   0x7a149d3d
  414836:	test   eax,0xa4a5952e
  41483b:	sbb    edx,eax
  41483d:	jmp    0xb9908798
  414842:	(bad)  
  414844:	mov    ebp,0xf5b6296b
  414849:	push   cs
  41484a:	push   ecx
  41484b:	cwde   
  41484c:	dec    ebp
  41484d:	pop    eax
  41484e:	and    DWORD PTR [ebx-0x30],ecx
  414851:	gs aaa 
  414853:	xchg   ecx,eax
  414854:	(bad)  
  414855:	loop   0x414850
  414857:	ss push ebp
  414859:	mov    ah,0x42
  41485b:	mov    ecx,0xfa32bced
  414860:	mov    ebx,0xfe573fcb
  414865:	fcmovnb st,st(6)
  414867:	mov    esi,0x8f797f31
  41486c:	pop    ebp
  41486d:	xchg   esi,eax
  41486e:	cmp    DWORD PTR [ecx+0x74],esi
  414871:	mov    ds:0xbf3d5a6b,al
  414876:	call   0x6287:0x79ed54c3
  41487d:	jp     0x414841
  41487f:	jo     0x4148c1
  414881:	mov    ebx,0xca4fe4c1
  414886:	xlat   BYTE PTR ds:[ebx]
  414887:	xchg   esi,eax
  414888:	push   ecx
  414889:	jno    0x4148d4
  41488b:	icebp  
  41488c:	sahf   
  41488d:	aaa    
  41488e:	mov    ah,bh
  414890:	shl    DWORD PTR [esi],cl
  414892:	inc    eax
  414893:	pop    ds
  414894:	pop    ebx
  414895:	imul   ebx,edi,0x29
  414898:	mov    ebx,0xc12af6f7
  41489d:	add    ah,BYTE PTR [ebp+0x18e6ecf5]
  4148a3:	mov    dl,0x55
  4148a5:	mov    bh,0x53
  4148a7:	scas   al,BYTE PTR es:[edi]
  4148a8:	shr    DWORD PTR [edi],1
  4148aa:	fcomp  QWORD PTR [ebx]
  4148ac:	retf   
  4148ad:	mov    al,ds:0x3ed2c958
  4148b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b3:	sti    
  4148b4:	loop   0x4148d9
  4148b6:	ds jns 0x4148e5
  4148b9:	fs int 0x48
  4148bc:	outs   dx,BYTE PTR ds:[esi]
  4148bd:	je     0x4148b9
  4148bf:	lods   eax,DWORD PTR ds:[esi]
  4148c0:	jecxz  0x4148ea
  4148c2:	shl    DWORD PTR [ecx+edi*8],cl
  4148c5:	call   0x68aa:0xc46d3862
  4148cc:	ret    
  4148cd:	loope  0x414852
  4148cf:	mov    ah,0x13
  4148d1:	inc    esp
  4148d2:	cli    
  4148d3:	imul   ebx,DWORD PTR [esi]
  4148d6:	mov    eax,0x2dabf101
  4148db:	pop    es
  4148dc:	daa    
  4148dd:	mov    edi,0xc356fb0e
  4148e2:	and    BYTE PTR [ecx+ebp*8-0x40],0xa4
  4148e7:	jg     0x414894
  4148e9:	pop    ss
  4148ea:	cmp    DWORD PTR [eax-0x4e],ecx
  4148ed:	xor    eax,0x4cfc70c1
  4148f2:	scas   eax,DWORD PTR es:[edi]
  4148f3:	aas    
  4148f4:	pop    eax
  4148f6:	mov    ds:0x1e011ec1,al
  4148fb:	lds    ebp,FWORD PTR [edx]
  4148fd:	jne    0x4148f8
  4148ff:	mov    WORD PTR [eax*8-0x680d242a],ss
  414906:	sbb    al,0xb4
  414908:	fmul   DWORD PTR [esi*2-0x477de040]
  41490f:	add    BYTE PTR [ebx-0x22e7f05d],cl
  414915:	int    0xaa
  414917:	push   0xfee49acb
  41491c:	sahf   
  41491d:	out    0xbd,eax
  41491f:	ret    0xadbe
  414922:	xor    BYTE PTR [ebx],0x23
  414925:	jnp    0x414997
  414927:	or     BYTE PTR [eax],bl
  414929:	aas    
  41492a:	inc    edi
  41492b:	xchg   esp,eax
  41492c:	shr    BYTE PTR [esi+0x483ddb79],0xb6
  414933:	jge    0x4149a1
  414935:	pop    es
  414936:	and    al,0x77
  414938:	loopne 0x4148c6
  41493a:	in     eax,dx
  41493b:	pop    esp
  41493c:	loopne 0x414915
  41493e:	inc    edx
  41493f:	(bad)  
  414940:	mov    esp,0x77242591
  414945:	push   eax
  414946:	fld    st(5)
  414948:	cdq    
  414949:	mov    esp,0x341ae621
  41494e:	pop    ebx
  41494f:	jmp    0x41496e
  414951:	sub    al,0x4b
  414953:	jl     0x4149c3
  414955:	ss pop ecx
  414957:	pop    eax
  414958:	daa    
  414959:	cmovb  ecx,DWORD PTR [ebx-0x76580cea]
  414960:	pop    ebp
  414961:	addr16 pop edx
  414963:	js     0x414971
  414965:	cwde   
  414966:	cmp    eax,0x7fa09991
  41496b:	mov    WORD PTR [ecx+0x4f81a83f],es
  414971:	add    ebx,DWORD PTR [esi+0x49]
  414974:	jecxz  0x414990
  414976:	cmp    al,0xf4
  414978:	dec    edi
  414979:	out    0x50,eax
  41497b:	leave  
  41497c:	and    al,0x0
  41497e:	cwde   
  41497f:	aam    0x2d
  414981:	mov    dh,0xaf
  414983:	(bad)  
  414984:	mov    ds:0x19fe6c21,eax
  414989:	test   eax,0x672b1ad8
  41498e:	jle    0x41496d
  414990:	jp     0x4149e9
  414992:	mov    ecx,0x5ca6a49c
  414997:	mov    WORD PTR [ebx+ecx*1-0x3d152223],cs
  41499e:	sahf   
  41499f:	xchg   esp,eax
  4149a0:	data16 jge 0x414969
  4149a3:	sahf   
  4149a4:	xchg   ebp,eax
  4149a5:	sub    eax,0xea480d85
  4149aa:	sub    dl,BYTE PTR [esp+edx*1]
  4149ad:	jmp    0xdef4a1a
  4149b2:	shl    dl,cl
  4149b4:	mov    BYTE PTR [esi+0xd],dl
  4149b7:	cs aam 0x4
  4149ba:	or     ebx,DWORD PTR [ebx]
  4149bc:	mov    al,ds:0xb4906289
  4149c1:	cmp    BYTE PTR [esi+ebx*8],ch
  4149c4:	dec    edi
  4149c5:	or     BYTE PTR [ecx],0x8b
  4149c8:	jg     0x4149a3
  4149ca:	icebp  
  4149cb:	(bad)  
  4149cc:	jp     0x4149aa
  4149ce:	or     al,0x93
  4149d0:	or     bh,ch
  4149d2:	adc    BYTE PTR [edx+0x7d50a1c0],0xdd
  4149d9:	leave  
  4149da:	(bad)  
  4149db:	popa   
  4149dc:	mov    esp,0x1e0ebade
  4149e1:	cmp    edx,DWORD PTR ds:0xd46e546e
  4149e7:	mov    edx,0xfa1985e5
  4149ec:	lock and al,bh
  4149ef:	add    eax,0x18d0aa1e
  4149f4:	scas   eax,DWORD PTR es:[edi]
  4149f5:	inc    edx
  4149f6:	inc    ecx
  4149f7:	jnp    0x4149b1
  4149f9:	hlt    
  4149fa:	es cld 
  4149fc:	inc    esi
  4149fd:	xchg   ecx,eax
  4149fe:	ficomp WORD PTR [edi+ebp*1-0x6bd614ab]
  414a05:	leave  
  414a06:	mov    ebp,DWORD PTR [edi-0x3d]
  414a09:	mov    DWORD PTR [esi+0x4d],ebx
  414a0c:	mov    WORD PTR [ebp-0x7e],?
  414a0f:	xchg   ecx,eax
  414a10:	das    
  414a11:	fistp  QWORD PTR [edx+0x76aa82f3]
  414a17:	dec    BYTE PTR [ebx+ebp*8-0x32]
  414a1b:	add    edi,DWORD PTR [edx]
  414a1d:	(bad)  
  414a1e:	pop    ebx
  414a1f:	loop   0x414a90
  414a21:	or     bh,BYTE PTR [ebp+0x407684e2]
  414a27:	shr    BYTE PTR [ebp-0x40],cl
  414a2a:	out    0x2a,eax
  414a2c:	inc    edx
  414a2d:	push   es
  414a2e:	and    BYTE PTR [ebx],al
  414a30:	fstp   DWORD PTR [eax]
  414a32:	gs test edi,0x617d8640
  414a39:	add    al,0xf2
  414a3b:	push   0x14cb3d4b
  414a40:	out    0x99,eax
  414a42:	xor    DWORD PTR [edi-0x76655e5d],ebx
  414a48:	xor    dh,BYTE PTR [ebp-0x77e8cb55]
  414a4e:	sbb    BYTE PTR [ebx+0x2d],bl
  414a51:	inc    ebx
  414a52:	enter  0x29cd,0xfb
  414a56:	ds push ecx
  414a58:	mov    esi,0x7aecef91
  414a5d:	nop
  414a5e:	sbb    cl,dl
  414a60:	cdq    
  414a61:	mov    WORD PTR [ecx-0x7f],fs
  414a64:	out    0x5c,eax
  414a66:	cmp    dh,BYTE PTR [ecx]
  414a68:	mov    ebx,0xa2f78b3c
  414a6d:	or     cl,bh
  414a6f:	sbb    cl,BYTE PTR [edi-0x49da1daa]
  414a75:	inc    bx
  414a77:	fst    st(0)
  414a79:	aam    0x14
  414a7b:	loop   0x414a65
  414a7d:	pop    ebp
  414a7e:	ja     0x414a89
  414a80:	dec    edx
  414a81:	jg     0x414a17
  414a83:	mov    eax,ds:0xd57b91cc
  414a88:	popa   
  414a89:	xchg   DWORD PTR [eax+ebx*4-0x25],ecx
  414a8d:	inc    edx
  414a8e:	dec    edi
  414a8f:	or     BYTE PTR [esi+0x74b32671],cl
  414a95:	ret    0xe5fd
  414a98:	scas   eax,DWORD PTR es:[edi]
  414a99:	std    
  414a9a:	xchg   edx,eax
  414a9b:	call   0x9be9:0x5b18f4bc
  414aa2:	mov    BYTE PTR [edi-0x7f],cl
  414aa5:	lahf   
  414aa6:	mov    al,0x8b
  414aa8:	test   eax,0xe22b165a
  414aad:	pop    ds
  414aae:	sbb    esp,DWORD PTR [esi]
  414ab0:	add    eax,0xe3812f65
  414ab5:	aad    0xd1
  414ab7:	xchg   esi,eax
  414ab8:	push   ebx
  414ab9:	add    ebp,DWORD PTR [eax-0x637a841c]
  414abf:	cmovs  esi,DWORD PTR [ecx]
  414ac2:	bound  esi,QWORD PTR [esi+0x33fb7a2b]
  414ac8:	scas   al,BYTE PTR es:[edi]
  414ac9:	ror    DWORD PTR ds:0x740313b2,1
  414acf:	pop    esp
  414ad0:	mov    ch,0x39
  414ad2:	out    0x3d,eax
  414ad4:	int    0xc3
  414ad6:	into   
  414ad7:	mov    eax,ds:0xa90646c
  414adc:	xchg   esp,eax
  414add:	scas   eax,DWORD PTR es:[edi]
  414ade:	dec    esi
  414adf:	fidiv  DWORD PTR [edi]
  414ae1:	mov    dh,0x2b
  414ae3:	xchg   edx,eax
  414ae4:	mov    eax,0xac09a450
  414ae9:	cld    
  414aea:	fadd   QWORD PTR [edx+0x38]
  414aed:	sti    
  414aee:	out    dx,al
  414aef:	bound  ecx,QWORD PTR [edx+0x12]
  414af2:	xor    BYTE PTR [esi+0x58],0x73
  414af6:	es pop ecx
  414af8:	inc    esi
  414af9:	mov    ah,0xed
  414afb:	inc    edi
  414afc:	inc    eax
  414afd:	nop
  414afe:	out    0x18,eax
  414b00:	aad    0x70
  414b02:	mov    ds:0x91b9137e,eax
  414b07:	sub    esp,DWORD PTR [eax]
  414b09:	pop    ebp
  414b0a:	mov    esp,edx
  414b0c:	jnp    0x414b7c
  414b0e:	inc    edi
  414b0f:	call   0xfd66:0xe03327fd
  414b16:	rol    DWORD PTR [ebp-0x43],0x67
  414b1a:	pop    esi
  414b1b:	or     edi,edi
  414b1d:	fwait
  414b1e:	sbb    DWORD PTR [esi],esp
  414b20:	vshufpd xmm0,xmm7,XMMWORD PTR [esi],0xd0
  414b25:	mov    BYTE PTR [edi],ch
  414b27:	repnz sbb eax,0x6e568925
  414b2d:	rcr    BYTE PTR [edx],1
  414b2f:	cmp    bh,BYTE PTR [ebp-0x39]
  414b32:	or     al,0x1a
  414b34:	imul   edi,DWORD PTR [eax],0xc8cd115f
  414b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b3b:	data16 ins BYTE PTR es:[edi],dx
  414b3d:	jbe    0x414bb6
  414b3f:	fbld   TBYTE PTR [edx-0x5bf74009]
  414b45:	pop    edi
  414b46:	sub    eax,0xac325ef4
  414b4b:	out    dx,eax
  414b4c:	iret   
  414b4d:	mov    bl,0x9e
  414b4f:	mov    ds:0x52309219,al
  414b54:	inc    edx
  414b55:	sub    ah,BYTE PTR [esi-0xc3f2f56]
  414b5b:	cwde   
  414b5c:	sbb    eax,0xbbf4445a
  414b61:	sahf   
  414b62:	fadd   st,st(1)
  414b64:	xor    edi,DWORD PTR [ecx-0x1920c5f9]
  414b6a:	pop    ecx
  414b6b:	xchg   BYTE PTR [ebx],bl
  414b6d:	adc    DWORD PTR [eax+eiz*8+0x30],eax
  414b71:	mov    al,0xeb
  414b73:	cmp    al,0xab
  414b75:	jnp    0x414bd8
  414b77:	add    eax,0x40bd0ca4
  414b7c:	mov    ebp,0x19f85c12
  414b81:	test   DWORD PTR es:[eax],esi
  414b84:	inc    edx
  414b85:	lods   al,BYTE PTR ds:[esi]
  414b86:	sub    DWORD PTR [edi-0x65],edi
  414b89:	cli    
  414b8a:	push   es
  414b8b:	loopne 0x414b1e
  414b8d:	push   edi
  414b8e:	pop    ebp
  414b8f:	pusha  
  414b90:	mov    dh,0x49
  414b92:	(bad)  
  414b93:	shl    ebp,1
  414b95:	sbb    edi,DWORD PTR [esi+0x74dfee3e]
  414b9b:	loopne 0x414b4c
  414b9d:	xchg   edi,eax
  414b9e:	sbb    esi,DWORD PTR [ebx+0x52]
  414ba1:	hlt    
  414ba2:	or     al,0xd0
  414ba4:	mov    DWORD PTR [ebx-0x37],ebp
  414ba7:	sub    eax,0x3c3e2441
  414bac:	mov    dh,0xda
  414bae:	fisttp WORD PTR [esi+0x4]
  414bb1:	mov    ds:0x75b97186,al
  414bb6:	enter  0x1194,0xdf
  414bba:	je     0x414b97
  414bbc:	addr16 popa 
  414bbe:	cmp    ch,dl
  414bc0:	add    bh,BYTE PTR [eax-0x2e]
  414bc3:	cmp    DWORD PTR [edx],ebx
  414bc5:	bswap  ebp
  414bc7:	mov    eax,0xc82b4837
  414bcc:	cmp    DWORD PTR [esi+edx*1+0xf],edi
  414bd0:	cli    
  414bd1:	dec    ebp
  414bd2:	rcl    DWORD PTR [eax+edx*4-0x36],1
  414bd6:	xor    dl,BYTE PTR [eax+0x7dbab722]
  414bdc:	adc    dh,BYTE PTR [esi+0x1d]
  414bdf:	js     0x414be1
  414be1:	pop    edx
  414be2:	mov    eax,ds:0xc429d53f
  414be7:	sub    DWORD PTR [eax-0x2c8275b],edx
  414bed:	push   ds
  414bee:	lods   eax,DWORD PTR ds:[esi]
  414bef:	(bad)  
  414bf0:	int3   
  414bf1:	pop    ds
  414bf2:	inc    edi
  414bf3:	hlt    
  414bf4:	pop    edi
  414bf5:	mov    DWORD PTR ds:0xe619249d,esp
  414bfb:	inc    ebp
  414bfc:	retf   
  414bfd:	sbb    esp,DWORD PTR [ebx+edx*2-0x50]
  414c01:	rcl    BYTE PTR [ebp+0x6a],1
  414c04:	mov    ebp,0x6b157795
  414c09:	out    dx,al
  414c0a:	neg    ah
  414c0c:	xchg   edx,eax
  414c0d:	adc    DWORD PTR [esi+0x10],ebp
  414c10:	and    edi,DWORD PTR [eax]
  414c12:	sub    al,0x7b
  414c14:	clc    
  414c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c16:	xor    eax,0xc29cde1b
  414c1b:	jne    0x414bdb
  414c1d:	(bad)  
  414c1e:	sub    DWORD PTR [eax+0x6ddfef36],ebp
  414c24:	js     0x414c62
  414c26:	dec    ecx
  414c27:	jae    0x414beb
  414c29:	and    ch,BYTE PTR [eax+0x7]
  414c2c:	or     BYTE PTR [edx],bh
  414c2e:	push   ebp
  414c2f:	mov    edx,0xdab07aae
  414c34:	aam    0xe7
  414c36:	inc    ebx
  414c37:	and    BYTE PTR [ebp-0x161c205c],0x4b
  414c3e:	popa   
  414c3f:	les    eax,FWORD PTR [ecx]
  414c41:	dec    ebp
  414c42:	sub    bh,bl
  414c44:	addr16 mov ds:0xdd3c,eax
  414c48:	mov    edx,0x733ddbe6
  414c4d:	dec    edx
  414c4e:	sub    al,0x5d
  414c50:	ins    BYTE PTR es:[edi],dx
  414c51:	mov    ebp,0xfce1902e
  414c56:	sbb    eax,esp
  414c58:	iretw  
  414c5a:	gs dec esp
  414c5c:	add    DWORD PTR [ebx+edx*1],0x12
  414c60:	scas   eax,DWORD PTR es:[edi]
  414c61:	cli    
  414c62:	xor    bh,cl
  414c64:	and    BYTE PTR [edi],ah
  414c66:	inc    ecx
  414c67:	ds lock call 0xe19e:0x98129fc9
  414c70:	cli    
  414c71:	dec    BYTE PTR [ebx-0x65]
  414c74:	bound  ebp,QWORD PTR [ecx+0x39]
  414c77:	xor    ch,bh
  414c79:	add    al,0x51
  414c7c:	mov    bh,0x10
  414c7e:	rcl    BYTE PTR [ebp-0xc682c31],cl
  414c84:	jo     0x414c7e
  414c86:	mov    dl,0x55
  414c88:	fnstcw WORD PTR [ecx+0x401a5ea0]
  414c8e:	lahf   
  414c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c90:	xlat   BYTE PTR ds:[ebx]
  414c91:	cmp    al,0x9a
  414c93:	(bad)  
  414c94:	sbb    BYTE PTR [edi],bh
  414c96:	mov    ebp,0xf9c67e9
  414c9b:	in     eax,0x15
  414c9d:	dec    ecx
  414c9e:	pushf  
  414c9f:	pop    ds
  414ca0:	xor    DWORD PTR [edx+0x51],esp
  414ca3:	add    BYTE PTR cs:0xae4913eb,bl
  414caa:	xchg   edx,eax
  414cab:	mov    BYTE PTR [eax+0xa],dl
  414cae:	pop    ecx
  414caf:	fld    TBYTE PTR [ebp+0x66d39547]
  414cb5:	popa   
  414cb6:	jl     0x414d16
  414cb8:	adc    al,0x5a
  414cba:	dec    BYTE PTR [edi-0x73928e4a]
  414cc0:	mov    esp,0xaf826d92
  414cc5:	xor    edi,DWORD PTR [ebx+0x6baadcb2]
  414ccb:	sbb    cl,bl
  414ccd:	jmp    0x16a5d940
  414cd2:	lahf   
  414cd3:	cmp    DWORD PTR [edx+ebx*8],ebx
  414cd6:	enter  0x609b,0x88
  414cda:	add    eax,0x7cd95049
  414cdf:	mov    al,0xd9
  414ce1:	add    al,0xfc
  414ce3:	sub    al,0x1e
  414ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce6:	sbb    BYTE PTR [eax-0x37],ah
  414ce9:	push   esp
  414cea:	sub    BYTE PTR [esi-0x5a54db28],al
  414cf0:	(bad)  
  414cf1:	xchg   ebx,eax
  414cf2:	and    al,0xd4
  414cf4:	ins    DWORD PTR es:[edi],dx
  414cf5:	in     al,dx
  414cf6:	call   0xa7ba:0x69677754
  414cfd:	or     al,0x2f
  414cff:	adc    ch,bl
  414d01:	jb     0x414d3a
  414d03:	xchg   edx,eax
  414d04:	xor    eax,ebp
  414d06:	fstp   TBYTE PTR [ecx+0x3]
  414d09:	push   esi
  414d0a:	mov    ch,0x5d
  414d0c:	sbb    eax,0xfbc5f3ba
  414d11:	xchg   esi,eax
  414d12:	inc    ecx
  414d13:	cmc    
  414d14:	cmp    ecx,DWORD PTR [eax+ecx*8]
  414d17:	add    al,0x7e
  414d19:	mov    ebx,0x79d87e75
  414d1e:	or     dh,BYTE PTR [edi-0x431f33f2]
  414d24:	jno    0x414d49
  414d26:	mov    cl,0x13
  414d28:	lods   al,BYTE PTR ds:[esi]
  414d29:	call   0x98977f8b
  414d2e:	into   
  414d2f:	or     al,0xcd
  414d31:	adc    bl,BYTE PTR [ebp+0x39119086]
  414d37:	das    
  414d38:	or     eax,DWORD PTR gs:[ebx]
  414d3b:	add    esi,ecx
  414d3d:	xor    edi,edx
  414d3f:	loop   0x414d5d
  414d41:	jo     0x414d4c
  414d43:	add    BYTE PTR [eax-0x5a],0x13
  414d47:	dec    ebx
  414d48:	add    BYTE PTR [ebx],dl
  414d4a:	clc    
  414d4b:	jg     0x414cd5
  414d4d:	mov    edx,0x9f708b7f
  414d52:	out    dx,al
  414d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d54:	push   ecx
  414d55:	pop    ebp
  414d56:	jnp    0x414d53
  414d58:	jns    0x414d3d
  414d5a:	jmp    0x17aed9a5
  414d5f:	inc    ebx
  414d60:	icebp  
  414d61:	test   al,0x2
  414d63:	ret    
  414d64:	mov    al,0xbf
  414d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d67:	adc    eax,0x86602aa
  414d6c:	push   esp
  414d6d:	popf   
  414d6e:	gs push ebx
  414d70:	mov    DWORD PTR [esi+ebp*2+0x663b2d0a],esi
  414d77:	push   esp
  414d78:	sbb    BYTE PTR [ebx+0x2e],dl
  414d7b:	scas   eax,DWORD PTR es:[edi]
  414d7c:	mov    WORD PTR [edi+0x66c04d9b],ss
  414d82:	jge    0x414d60
  414d84:	dec    edx
  414d85:	and    dh,BYTE PTR [edx-0x71d515d7]
  414d8b:	out    dx,eax
  414d8c:	jp     0x414d34
  414d8e:	fwait
  414d8f:	stos   DWORD PTR es:[edi],eax
  414d90:	cdq    
  414d91:	repz shr eax,0x28
  414d95:	repnz clc 
  414d97:	mov    cl,0xfc
  414d99:	sbb    eax,0x34919bea
  414d9e:	sub    bh,bh
  414da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da1:	xchg   BYTE PTR [ecx+0x26144099],bl
  414da7:	mov    bh,0x8c
  414da9:	inc    ecx
  414daa:	lods   eax,DWORD PTR ds:[esi]
  414dab:	cmp    BYTE PTR [eax],al
  414dad:	aas    
  414dae:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414db0:	loope  0x414da6
  414db2:	add    eax,0x46cf867f
  414db7:	push   esi
  414db8:	jl     0x414dff
  414dba:	xchg   ebp,ebp
  414dbc:	mov    ah,0xb9
  414dbe:	or     DWORD PTR [esp+ebx*8+0x5],0x44
  414dc3:	cli    
  414dc4:	mov    ebp,esp
  414dc6:	sar    BYTE PTR [ecx-0x1a],1
  414dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dca:	mov    bl,0xb8
  414dcc:	dec    ecx
  414dcd:	repnz fistp QWORD PTR [edx+edx*8-0x50]
  414dd2:	mov    ds:0x78d05507,al
  414dd7:	je     0x414e48
  414dd9:	jb     0x414d69
  414ddb:	sbb    eax,0x635c3752
  414de0:	jecxz  0x414e54
  414de2:	dec    edi
  414de3:	mov    ds:0xca1c3e1e,al
  414de8:	xor    eax,esp
  414dea:	inc    ebp
  414deb:	xchg   esp,eax
  414dec:	int3   
  414ded:	pop    ebp
  414dee:	xchg   edi,eax
  414def:	dec    edi
  414df0:	mov    esp,0x2e9e8e6
  414df5:	call   0x463c62ef
  414dfa:	cmp    ecx,ecx
  414dfc:	bound  edi,QWORD PTR [esp+eiz*4-0x4eca894d]
  414e03:	sbb    esi,DWORD PTR es:[ebp+0x18628a92]
  414e0a:	mov    eax,ds:0x9d83e836
  414e0f:	adc    bl,al
  414e11:	sub    ch,BYTE PTR [edx-0x1b4e7953]
  414e17:	lods   al,BYTE PTR ds:[esi]
  414e18:	mov    ecx,0x7cbb1af0
  414e1d:	add    DWORD PTR [edi-0x1e],edx
  414e20:	inc    esi
  414e21:	dec    edx
  414e22:	lods   eax,DWORD PTR ds:[esi]
  414e23:	mov    ch,0x53
  414e25:	sub    DWORD PTR [ecx-0xfea11e4],0x538fcd96
  414e2f:	addr16 inc ebx
  414e31:	test   DWORD PTR [ebp+edi*4+0x6aa39a00],edi
  414e38:	ror    edi,0xcb
  414e3b:	cmp    ch,bh
  414e3d:	adc    DWORD PTR [eax-0x494e4709],ebp
  414e43:	pop    ebx
  414e44:	sti    
  414e45:	sbb    al,0xdd
  414e47:	mov    dh,0x94
  414e49:	jp     0x414eb1
  414e4b:	add    ebx,esi
  414e4d:	add    al,0xa9
  414e4f:	pop    ds
  414e50:	dec    eax
  414e51:	cs fwait
  414e53:	inc    ebx
  414e54:	das    
  414e55:	push   esi
  414e56:	ins    BYTE PTR es:[edi],dx
  414e57:	mov    al,ds:0xbe367635
  414e5c:	mov    bl,0xfb
  414e5e:	push   esp
  414e5f:	(bad)  
  414e60:	mov    bl,0x36
  414e62:	jp     0x414e65
  414e64:	mov    bl,0xf3
  414e66:	loopne 0x414eb7
  414e68:	lahf   
  414e69:	or     dl,cl
  414e6b:	xor    ecx,eax
  414e6d:	pop    edx
  414e6e:	add    ebx,DWORD PTR [ecx]
  414e70:	mov    edx,0xf347b725
  414e75:	and    eax,0x39a92444
  414e7a:	mov    ah,0x5e
  414e7c:	pushf  
  414e7d:	pop    ebp
  414e7e:	mov    bh,0xd8
  414e80:	or     DWORD PTR [ebx+0x5b],esp
  414e83:	push   ebp
  414e84:	ret    0x848c
  414e87:	mov    al,0xf3
  414e89:	test   al,0x94
  414e8b:	add    ebp,DWORD PTR [ebp+0x47b1347]
  414e91:	xchg   ebx,eax
  414e92:	sti    
  414e93:	test   al,0x9a
  414e95:	jns    0x414e4c
  414e97:	and    al,0xf3
  414e99:	addr16 ret 
  414e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9c:	pop    ds
  414e9d:	in     al,0x7
  414e9f:	jno    0x414e2d
  414ea1:	leave  
  414ea2:	stos   DWORD PTR es:[edi],eax
  414ea3:	addr16 dec esi
  414ea5:	enter  0x8400,0x2b
  414ea9:	sub    eax,0x979c16e5
  414eae:	fcomp  DWORD PTR [ecx+0x4eb46bee]
  414eb4:	adc    eax,0x2f3c55c4
  414eb9:	pop    ecx
  414eba:	int3   
  414ebb:	stos   DWORD PTR es:[edi],eax
  414ebc:	neg    BYTE PTR [edx-0x61098ed7]
  414ec2:	inc    edi
  414ec3:	mov    bl,0xe6
  414ec5:	and    bl,bl
  414ec7:	adc    edx,DWORD PTR [esi-0xc]
  414eca:	dec    edi
  414ecb:	stc    
  414ecc:	mov    ds:0x41e478b0,al
  414ed1:	mov    ds:0x363f623d,al
  414ed6:	jg     0x414e9d
  414ed8:	test   eax,0xe69003ba
  414edd:	outs   dx,DWORD PTR ds:[esi]
  414ede:	xchg   esi,eax
  414edf:	cdq    
  414ee0:	ds inc edi
  414ee2:	xchg   ebx,eax
  414ee3:	popa   
  414ee4:	pop    esp
  414ee5:	sub    eax,DWORD PTR [ebx]
  414ee7:	or     al,0x73
  414ee9:	dec    ecx
  414eea:	add    eax,0x546ed246
  414eef:	ret    0xe694
  414ef2:	cld    
  414ef3:	adc    dl,dh
  414ef5:	or     ch,BYTE PTR [edx+0x75ea5c08]
  414efb:	lgs    ecx,FWORD PTR [eax+0x11]
  414eff:	dec    edi
  414f00:	jp     0x414f3b
  414f02:	rol    BYTE PTR [esp+ecx*4+0x5c],0x13
  414f07:	adc    DWORD PTR [esp+esi*8-0x50ae040c],ebp
  414f0e:	and    dl,BYTE PTR [ebx+0x31644f5d]
  414f14:	icebp  
  414f15:	int3   
  414f16:	ficom  WORD PTR [edx-0x3cdcc62d]
  414f1c:	inc    ecx
  414f1d:	sub    al,0xfb
  414f1f:	adc    BYTE PTR [ecx+0x7],dl
  414f22:	sub    edi,DWORD PTR [edi]
  414f24:	in     al,0xd7
  414f26:	or     BYTE PTR [edi],dl
  414f28:	leave  
  414f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f2a:	aad    0x65
  414f2c:	pusha  
  414f2d:	sbb    eax,DWORD PTR [eax+0x6e998160]
  414f33:	cwde   
  414f34:	sti    
  414f35:	jo     0x414f3c
  414f37:	push   ebp
  414f38:	rcr    eax,1
  414f3a:	or     dl,BYTE PTR [ecx-0x40]
  414f3d:	mov    edx,0xbaf8ac58
  414f42:	jg     0x414eeb
  414f44:	xor    BYTE PTR [esi-0x3f3825da],bh
  414f4a:	push   eax
  414f4b:	pop    ebx
  414f4c:	rcl    BYTE PTR ds:0x3ddba948,1
  414f52:	icebp  
  414f53:	call   0x10fd4a35
  414f58:	les    ebp,FWORD PTR [edx+0x5a]
  414f5b:	popa   
  414f5c:	mov    eax,0xdc9480ed
  414f61:	add    BYTE PTR [ebp+0x5d],dl
  414f64:	sbb    eax,0xef238406
  414f69:	jb     0x414f10
  414f6b:	nop
  414f6c:	imul   edx,ecx,0xb6e2cfe6
  414f72:	lea    ebx,[ebp+0x74456402]
  414f78:	or     bl,BYTE PTR [esi]
  414f7a:	push   eax
  414f7b:	arpl   WORD PTR [edi-0x19],bx
  414f7e:	iret   
  414f7f:	sti    
  414f80:	pop    ebx
  414f81:	test   eax,0xecad891b
  414f86:	fstp   DWORD PTR [ecx-0x66]
  414f89:	jg     0x414f9f
  414f8b:	in     eax,0xf8
  414f8d:	ins    DWORD PTR es:[edi],dx
  414f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f8f:	add    esp,DWORD PTR [esi+0x30]
  414f92:	add    DWORD PTR [ebx],esp
  414f94:	into   
  414f95:	(bad)  
  414f96:	cmp    ecx,DWORD PTR [edx+0x5b02d02]
  414f9c:	ret    
  414f9d:	pop    eax
  414f9e:	je     0x414faf
  414fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa1:	xor    bh,ah
  414fa3:	(bad)  
  414fa4:	jp     0x414fe1
  414fa6:	ss dec ebp
  414fa8:	loop   0x414ff4
  414faa:	sub    al,0x9c
  414fac:	xor    al,BYTE PTR [edx-0x754e715]
  414fb2:	cmp    BYTE PTR [eax+0x30036f71],bl
  414fb8:	repz sub BYTE PTR [edx-0x2c],dh
  414fbc:	cmp    DWORD PTR [ecx+0x5e],ebp
  414fbf:	add    ecx,DWORD PTR [eax+0x389cefb4]
  414fc5:	shl    DWORD PTR [ecx+0x35e354e],1
  414fcb:	stos   BYTE PTR es:[edi],al
  414fcc:	leave  
  414fcd:	push   0x82a2638b
  414fd2:	dec    eax
  414fd3:	mov    fs,esi
  414fd5:	mov    ebp,DWORD PTR [esi+0x6e]
  414fd8:	pop    ecx
  414fd9:	inc    edi
  414fda:	jae    0x41501a
  414fdc:	int    0x24
  414fde:	fild   DWORD PTR [ecx+0x1990c3c9]
  414fe4:	dec    esi
  414fe5:	xchg   edx,eax
  414fe6:	dec    esi
  414fe7:	jno    0x41503e
  414fe9:	das    
  414fea:	cs pop ecx
  414fec:	andps  xmm2,XMMWORD PTR [esi-0x179e278a]
  414ff3:	leave  
  414ff4:	dec    esp
  414ff5:	cld    
  414ff6:	int3   
  414ff7:	jl     0x41503d
  414ff9:	sub    DWORD PTR [eax-0x2e2942b],ecx
  414fff:	push   0x5c
  415001:	inc    edi
  415002:	sahf   
  415003:	pusha  
  415004:	jg     0x414fb4
  415006:	(bad)  
  415007:	test   DWORD PTR [esi+edi*2-0x41],0xd5e03720
  41500f:	das    
  415010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415011:	mov    al,ds:0x8570e313
  415016:	iret   
  415017:	xchg   ecx,eax
  415018:	pushf  
  415019:	sub    ecx,eax
  41501b:	shl    esi,1
  41501d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41501e:	(bad)  
  41501f:	test   al,0xd4
  415021:	or     al,0x71
  415023:	sar    BYTE PTR [edx+eax*4+0x42151b90],cl
  41502a:	js     0x4150ab
  41502c:	popf   
  41502d:	add    al,0xde
  41502f:	jno    0x4150ad
  415031:	mov    ch,0x53
  415033:	add    eax,0x5e7e447a
  415038:	and    edi,ebx
  41503a:	or     al,0xc6
  41503c:	ret    
  41503d:	cli    
  41503e:	das    
  41503f:	jbe    0x415034
  415041:	jecxz  0x414fe0
  415043:	dec    ebp
  415044:	(bad)  
  415046:	stos   BYTE PTR es:[edi],al
  415047:	jns    0x415070
  415049:	xchg   ch,dl
  41504b:	push   ss
  41504c:	adc    BYTE PTR [ebp-0x33],cl
  41504f:	in     eax,0xf
  415051:	push   esi
  415052:	clc    
  415053:	nop
  415054:	lods   eax,DWORD PTR ds:[esi]
  415055:	sahf   
  415056:	jns    0x4150b2
  415058:	fldcw  WORD PTR ds:0xd250cb7c
  41505e:	and    DWORD PTR [ecx-0x2916064f],0xf8255b6c
  415068:	xlat   BYTE PTR cs:[ebx]
  41506a:	(bad)  
  41506b:	inc    esi
  41506c:	jp     0x415070
  41506e:	jo     0x4150e8
  415070:	mov    ch,0x29
  415072:	cld    
  415073:	jnp    0x415076
  415075:	mov    ebp,0x1b9cd458
  41507a:	pushf  
  41507b:	fdivp  st(7),st
  41507d:	test   eax,0x2ccba79c
  415082:	xchg   ebp,eax
  415083:	jmp    0x683db99c
  415088:	cmc    
  415089:	repz dec ebx
  41508b:	sbb    DWORD PTR [edi-0x6b],0xffffffba
  41508f:	xor    dl,BYTE PTR [edx+0x7]
  415092:	jno    0x41503d
  415094:	test   DWORD PTR [eax+0xb6bcaf0],ebx
  41509a:	dec    edx
  41509b:	pushf  
  41509c:	inc    ebx
  41509d:	fadd   st,st(0)
  41509f:	add    BYTE PTR [eax-0x3bb693eb],dh
  4150a5:	mov    esi,DWORD PTR [esi]
  4150a7:	add    al,0xdc
  4150a9:	adc    bh,BYTE PTR [eax*4+0x6b2a6326]
  4150b0:	(bad)  [eax-0x6a052a03]
  4150b6:	mov    ecx,DWORD PTR [edi+0x66]
  4150b9:	(bad)  
  4150bb:	shr    BYTE PTR [edx+ebx*4+0x38],0x58
  4150c0:	sbb    BYTE PTR [edx+esi*2-0x5ee10033],ch
  4150c7:	jnp    0x415079
  4150c9:	int3   
  4150ca:	adc    ah,0x20
  4150cd:	xchg   edi,eax
  4150ce:	jbe    0x415076
  4150d0:	pop    esi
  4150d1:	add    ebx,DWORD PTR [ebx]
  4150d3:	jbe    0x41512f
  4150d5:	sub    dh,ch
  4150d7:	or     edx,DWORD PTR [eax]
  4150d9:	jns    0x415100
  4150db:	int    0x21
  4150dd:	mov    bl,0x6e
  4150df:	mov    esp,0xf4f6af5f
  4150e4:	test   BYTE PTR [edi-0xb84e780],cl
  4150ea:	in     eax,dx
  4150eb:	lock mov ebx,0xe48294e5
  4150f1:	fwait
  4150f2:	push   es
  4150f3:	(bad)  
  4150f4:	pop    ebx
  4150f5:	jg     0x415155
  4150f7:	dec    ebx
  4150f8:	mov    ds:0x9dd8aede,al
  4150fd:	gs stos BYTE PTR es:[edi],al
  4150ff:	adc    eax,edx
  415101:	xchg   esi,eax
  415102:	aam    0x88
  415104:	fdivr  DWORD PTR [ecx-0x799b2f81]
  41510a:	stos   BYTE PTR es:[edi],al
  41510b:	dec    ecx
  41510c:	stc    
  41510d:	add    edi,DWORD PTR [eax+ebx*1-0x759e9891]
  415114:	fs (bad) 
  415116:	and    eax,0x4121a141
  41511b:	mov    ch,0x70
  41511d:	dec    ebx
  41511e:	fsubr  QWORD PTR [ecx]
  415120:	call   0x2beb:0x97045136
  415127:	xchg   esp,eax
  415128:	sub    eax,0xbac58a0b
  41512d:	loopne 0x415171
  41512f:	data16 jo 0x4150d0
  415132:	mov    esp,0x89e7cd45
  415137:	out    dx,eax
  415138:	pushf  
  415139:	sti    
  41513a:	sbb    BYTE PTR [ebp-0x739ae3ee],ah
  415140:	push   cs
  415141:	cmp    al,dh
  415143:	mov    ds,WORD PTR [eax]
  415145:	push   cs
  415146:	or     ch,BYTE PTR [ebp+0x3f598ed6]
  41514c:	popf   
  41514d:	push   0x41
  41514f:	jg     0x41515e
  415151:	fsub   DWORD PTR [edi+edx*1-0x3d47eaab]
  415158:	mov    bh,0xe7
  41515a:	jno    0x415189
  41515c:	lds    esp,FWORD PTR [edx-0x58]
  41515f:	mov    ds:0x71c32cde,eax
  415164:	mov    ebx,0xb5eb721d
  415169:	jno    0x41519e
  41516b:	mov    ah,0x16
  41516d:	aas    
  41516e:	xchg   edx,esp
  415170:	clc    
  415171:	dec    edi
  415172:	int3   
  415173:	(bad)  
  415174:	xlat   BYTE PTR ds:[ebx]
  415175:	and    eax,0x27bf7c42
  41517a:	aam    0x33
  41517c:	loope  0x415145
  41517e:	and    edi,DWORD PTR [edx+0x38]
  415181:	loopne 0x41510a
  415183:	int    0xbb
  415185:	fldenvw [eax+0x78]
  415189:	ins    BYTE PTR es:[edi],dx
  41518a:	clc    
  41518b:	ds xchg edx,eax
  41518d:	add    BYTE PTR [esp+ebp*2+0x35ca266a],bl
  415194:	loopne 0x4151e8
  415196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415197:	cmp    eax,0xb733ba3f
  41519c:	pop    ecx
  41519d:	mov    ds:0xb16e830f,al
  4151a2:	jp     0x41519e
  4151a4:	mov    al,ds:0xe5601796
  4151a9:	add    al,0xc5
  4151ab:	xor    ecx,eax
  4151ad:	push   es
  4151ae:	lock push es
  4151b0:	push   edx
  4151b1:	push   es
  4151b2:	xor    ah,ch
  4151b4:	ja     0x4151a9
  4151b6:	pop    edi
  4151b7:	dec    ecx
  4151b8:	popa   
  4151b9:	in     al,dx
  4151ba:	mov    ?,edx
  4151bc:	test   BYTE PTR [ecx-0x68b4f839],ah
  4151c2:	mov    eax,ds:0xc3791ebc
  4151c7:	dec    eax
  4151c8:	ss std 
  4151ca:	sub    eax,0x77dc1c
  4151cf:	jp     0x4151de
  4151d1:	les    esi,FWORD PTR [ebx-0x6b8f10ba]
  4151d7:	fwait
  4151d8:	inc    edi
  4151d9:	cmp    eax,edi
  4151db:	xor    BYTE PTR ds:0x5c08c3f9,ch
  4151e1:	fild   QWORD PTR [esi+0x12509744]
  4151e7:	je     0x41519b
  4151e9:	push   edi
  4151ea:	mov    DWORD PTR [ecx+0x5e],esp
  4151ed:	fstp   DWORD PTR [ecx+0x10168e3e]
  4151f3:	hlt    
  4151f4:	nop
  4151f5:	xchg   edi,eax
  4151f6:	(bad)  
  4151f7:	in     eax,dx
  4151f8:	cli    
  4151f9:	sub    ebx,DWORD PTR [ebx-0x2b899f50]
  4151ff:	ins    DWORD PTR es:[edi],dx
  415200:	and    bl,BYTE PTR [edi-0x76]
  415203:	bound  ecx,QWORD PTR [edi+0x49]
  415206:	xlat   BYTE PTR ds:[ebx]
  415207:	test   BYTE PTR [ecx+0x39],bh
  41520a:	xchg   ah,bh
  41520c:	mov    bh,0xad
  41520e:	add    DWORD PTR [ebp-0x1d],esi
  415211:	or     DWORD PTR [ecx-0xb13f0e8],esp
  415217:	xchg   esp,eax
  415218:	sbb    dh,BYTE PTR [ebp+0x23]
  41521b:	ins    BYTE PTR es:[edi],dx
  41521c:	sbb    bh,dl
  41521e:	jno    0x415253
  415220:	adc    dl,bl
  415222:	loopne 0x415297
  415224:	mov    ebx,ebx
  415226:	stos   DWORD PTR es:[edi],eax
  415227:	cmp    al,0x7d
  415229:	test   eax,0x7abcebca
  41522e:	pop    edx
  41522f:	retf   0x5ed2
  415232:	dec    esi
  415233:	adc    al,BYTE PTR ds:0x999dd54e
  415239:	lds    edi,FWORD PTR [eax]
  41523b:	add    BYTE PTR [ebx+0x63],ch
  41523e:	add    DWORD PTR [ecx+0x2e],ebx
  415241:	xchg   ecx,eax
  415242:	mov    ch,0x6
  415244:	mov    ebp,0x5c98e1c8
  415249:	sub    bh,ah
  41524b:	cmc    
  41524c:	sbb    bh,cl
  41524e:	or     esi,DWORD PTR [ebx+0x7c]
  415251:	mov    edx,0x1b918c12
  415256:	cmp    eax,0xb37814e5
  41525b:	or     eax,0x2c3413ae
  415260:	out    dx,al
  415261:	pop    ss
  415262:	ficomp DWORD PTR [edi+0x52955ded]
  415268:	jecxz  0x4152b2
  41526a:	in     eax,dx
  41526b:	adc    edi,DWORD PTR [ecx+0x6d27c9c2]
  415271:	xchg   ebp,eax
  415272:	mov    esi,DWORD PTR [edi]
  415274:	cmp    al,0x40
  415276:	loop   0x415205
  415278:	pop    edx
  415279:	push   esp
  41527a:	inc    ebp
  41527b:	push   ecx
  41527c:	movsx  ebx,BYTE PTR [ebx]
  41527f:	dec    eax
  415280:	cmp    ah,ah
  415282:	mov    ds:0x55287666,eax
  415287:	shl    BYTE PTR [eax+0x501eb762],0xcd
  41528e:	adc    al,0x78
  415290:	push   edx
  415291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415292:	jmp    0xb337:0x1ad80efa
  415299:	daa    
  41529a:	inc    ecx
  41529b:	ret    0x842a
  41529e:	jo     0x41525a
  4152a0:	dec    edx
  4152a1:	or     eax,0xbd5fae63
  4152a6:	call   0x817f:0x3f1568dd
  4152ad:	outs   dx,DWORD PTR ds:[esi]
  4152ae:	xchg   esi,eax
  4152af:	cmp    ch,dh
  4152b1:	pop    edx
  4152b2:	in     eax,0x6
  4152b4:	icebp  
  4152b5:	rol    BYTE PTR [ecx-0x5b],1
  4152b8:	lea    esp,[edx+0xc]
  4152bb:	push   ebx
  4152bc:	imul   esp,DWORD PTR [esi],0xd6f5e41f
  4152c2:	aad    0xd8
  4152c4:	adc    edx,edx
  4152c6:	(bad)  [ecx-0x1a]
  4152c9:	mov    ds:0x1118dc29,eax
  4152ce:	cdq    
  4152cf:	test   al,0xa9
  4152d1:	lahf   
  4152d2:	shr    al,0xab
  4152d5:	out    0x24,eax
  4152d7:	push   es
  4152d8:	sub    ch,BYTE PTR [edi-0x6ed67733]
  4152de:	cmp    BYTE PTR [ecx],ah
  4152e0:	(bad)  
  4152e1:	pop    ebx
  4152e2:	out    0x5e,al
  4152e4:	hlt    
  4152e5:	mov    edx,0xfcb5c4db
  4152ea:	ret    0xa9b1
  4152ed:	adc    ch,BYTE PTR [edi-0x1d286e8e]
  4152f3:	xlat   BYTE PTR ds:[ebx]
  4152f4:	cli    
  4152f5:	jp     0x41530a
  4152f7:	sbb    esp,DWORD PTR [ebp-0x53aa5e8d]
  4152fd:	icebp  
  4152fe:	inc    edi
  4152ff:	sbb    eax,0x1bbd795
  415304:	or     BYTE PTR [eax+0xed6f2f0],bh
  41530a:	sbb    edx,DWORD PTR [ecx+0x31]
  41530d:	jp     0x415300
  41530f:	inc    eax
  415310:	jns    0x415296
  415312:	popa   
  415313:	lods   al,BYTE PTR ds:[esi]
  415314:	adc    edi,DWORD PTR [ecx-0x653d73b0]
  41531a:	(bad)  
  41531b:	mov    edi,0xf8e7dc04
  415320:	dec    edi
  415321:	out    dx,al
  415322:	test   esp,ebx
  415324:	fwait
  415325:	inc    edi
  415326:	popw   ss
  415328:	lods   al,BYTE PTR ds:[esi]
  415329:	(bad)  
  41532b:	stos   BYTE PTR es:[edi],al
  41532c:	cdq    
  41532d:	inc    ebx
  41532e:	iret   
  41532f:	fmul   DWORD PTR [ebp-0x4ba4ff32]
  415335:	imul   ebp,esi,0x2f0143b8
  41533b:	mov    ch,0x53
  41533d:	call   0xd9a872b5
  415342:	call   0x2f1cb438
  415347:	mov    ch,0x1e
  415349:	imul   ebx,DWORD PTR [ecx+0x55e6bc7e],0x1710fcd6
  415353:	sbb    al,0xcf
  415355:	mov    ?,WORD PTR [ebx+ebx*1-0x18]
  415359:	push   ss
  41535a:	sbb    DWORD PTR [esi],esp
  41535c:	loope  0x415388
  41535e:	lods   eax,DWORD PTR ds:[esi]
  41535f:	js     0x41534d
  415361:	push   ebp
  415362:	xchg   esi,eax
  415363:	pop    es
  415364:	inc    ecx
  415365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415366:	mov    esp,0x3cd9abbf
  41536b:	neg    ebp
  41536d:	fdiv   QWORD PTR [ebx+esi*1+0x15aa69d8]
  415374:	and    bh,dh
  415376:	out    0x8b,eax
  415378:	dec    edi
  415379:	sbb    bh,bh
  41537b:	adc    ecx,DWORD PTR [ebx-0x1a]
  41537e:	cmp    DWORD PTR [edx+edi*2],edx
  415381:	das    
  415382:	leave  
  415383:	mov    edx,0x5f85b35d
  415388:	cmovne edi,edx
  41538b:	nop
  41538c:	sbb    al,0x45
  41538e:	inc    ebx
  41538f:	dec    edx
  415390:	xchg   esi,eax
  415391:	(bad)  
  415392:	ins    DWORD PTR es:[edi],dx
  415393:	out    dx,al
  415394:	or     al,0x4f
  415396:	adc    bh,BYTE PTR [ebx-0x134e3779]
  41539c:	pop    ecx
  41539d:	sti    
  41539e:	xchg   ecx,eax
  41539f:	fcom   DWORD PTR [edi]
  4153a1:	push   esi
  4153a2:	push   ss
  4153a3:	pushf  
  4153a4:	jne    0x415339
  4153a6:	lods   al,BYTE PTR ds:[esi]
  4153a7:	xor    DWORD PTR [edx],ebp
  4153a9:	add    DWORD PTR [edx],esi
  4153ab:	adc    eax,0xf9916d08
  4153b0:	mov    ebp,0x3f6395bc
  4153b5:	int3   
  4153b6:	sub    esi,DWORD PTR [esi-0x232e5eec]
  4153bc:	(bad)  
  4153bd:	pop    ebp
  4153be:	dec    eax
  4153bf:	shufps xmm4,xmm4,0x7f
  4153c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153c4:	outs   dx,DWORD PTR ds:[esi]
  4153c5:	packssdw mm0,QWORD PTR [ebp+0x11910a57]
  4153cc:	add    al,bl
  4153ce:	push   ebp
  4153cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153d0:	stc    
  4153d1:	call   0x650a4ed3
  4153d6:	inc    esi
  4153d7:	xchg   BYTE PTR [edx-0x54],bh
  4153da:	repnz icebp 
  4153dc:	mov    bl,0x87
  4153de:	xor    al,BYTE PTR [esi]
  4153e0:	or     ah,BYTE PTR [eax+0x14]
  4153e3:	das    
  4153e4:	adc    eax,0x77a89387
  4153e9:	imul   ebp,DWORD PTR [esi],0x87420d91
  4153ef:	ret    
  4153f0:	aas    
  4153f1:	in     eax,dx
  4153f2:	into   
  4153f3:	in     al,0x31
  4153f5:	and    al,0x57
  4153f7:	into   
  4153f8:	sar    BYTE PTR [esi+0x3a91aeba],1
  4153fe:	out    0xb7,al
  415400:	mov    ebp,0x2aab95c8
  415405:	outs   dx,DWORD PTR ds:[esi]
  415406:	push   ds
  415407:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415409:	push   edx
  41540a:	mov    al,ds:0x77c10354
  41540f:	adc    edx,0xd57403b9
  415415:	call   0x412fa06f
  41541a:	sti    
  41541b:	dec    edx
  41541c:	pusha  
  41541d:	(bad)  
  41541e:	shl    BYTE PTR [edi],1
  415420:	test   eax,0xf8a14f93
  415425:	xchg   ebp,eax
  415426:	shl    DWORD PTR [esi],cl
  415428:	inc    ebp
  415429:	and    al,0x1a
  41542b:	adc    dh,BYTE PTR [esi+0x32d0dedb]
  415431:	push   0xfffffff7
  415433:	mov    edi,0x5c1054b0
  415438:	xchg   BYTE PTR [edi],bh
  41543a:	fucom  st(7)
  41543c:	out    0x30,eax
  41543e:	ja     0x4153f5
  415440:	fbld   TBYTE PTR [ebp+0x4c]
  415443:	jns    0x41543d
  415445:	fist   WORD PTR [edi-0x20]
  415448:	inc    esi
  415449:	mov    ch,0x4d
  41544b:	sbb    dh,BYTE PTR [esi]
  41544d:	jp     0x415442
  41544f:	push   0x11
  415451:	jmp    0x3c99:0x569551a4
  415458:	mov    dl,0x70
  41545a:	mov    cl,BYTE PTR [edx-0x3373ef4]
  415460:	frstor [edx]
  415462:	cmp    al,BYTE PTR [ebp-0x7c]
  415465:	into   
  415466:	inc    edx
  415467:	mov    eax,0x6e948cc0
  41546c:	pusha  
  41546d:	(bad)  
  41546f:	aam    0x8d
  415471:	lods   al,BYTE PTR ds:[esi]
  415472:	mov    al,0x25
  415474:	pop    esp
  415475:	test   eax,0xfa8c8bbd
  41547a:	jb     0x41549e
  41547c:	mov    ch,0xd5
  41547e:	aaa    
  41547f:	fst    DWORD PTR [edi+eiz*2-0x2bca3ad0]
  415486:	dec    esp
  415487:	add    esi,DWORD PTR [edx-0x77c0d889]
  41548d:	pop    ebp
  41548e:	add    ah,BYTE PTR [ebp+0x21753eeb]
  415494:	jg     0x415472
  415496:	shl    BYTE PTR [edx+0x2839e5eb],0x88
  41549d:	mul    cl
  41549f:	mov    al,ds:0x68605d95
  4154a4:	jb     0x4154cb
  4154a6:	outs   dx,BYTE PTR ds:[esi]
  4154a7:	test   DWORD PTR [edx-0x72],ecx
  4154aa:	outs   dx,DWORD PTR ds:[esi]
  4154ab:	pop    ebp
  4154ac:	or     edi,DWORD PTR [edi-0x4f8d61a9]
  4154b2:	pop    ebx
  4154b3:	adc    eax,0xd6bc0dc6
  4154b8:	cmc    
  4154b9:	out    dx,al
  4154ba:	jg     0x4154d1
  4154bc:	outs   dx,BYTE PTR ds:[esi]
  4154bd:	adc    al,0x6a
  4154bf:	sahf   
  4154c0:	mov    ebx,0xefa409d
  4154c5:	sub    eax,0x21731c14
  4154ca:	jecxz  0x4154fd
  4154cc:	mov    ah,0x4e
  4154ce:	dec    edi
  4154cf:	push   eax
  4154d0:	jmp    0x415541
  4154d2:	test   al,0x84
  4154d4:	xchg   ebp,eax
  4154d5:	or     esi,DWORD PTR [eax]
  4154d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d8:	jmp    0x43972626
  4154dd:	jecxz  0x415486
  4154df:	out    0x61,al
  4154e1:	lods   al,BYTE PTR ds:[esi]
  4154e2:	add    edi,edi
  4154e4:	adc    al,0xea
  4154e6:	out    0x49,al
  4154e8:	fcmovb st,st(1)
  4154ea:	cmp    bl,bh
  4154ec:	arpl   WORD PTR [edx],bx
  4154ee:	in     al,0x1
  4154f0:	clc    
  4154f1:	adc    DWORD PTR [ecx+0x42],edx
  4154f4:	xor    dh,BYTE PTR [edx-0x16]
  4154f7:	imul   ebx,DWORD PTR [ebp+ecx*4-0x4a],0xffffffeb
  4154fc:	test   eax,0x7bf31a01
  415501:	(bad)  
  415503:	xor    al,0x6a
  415505:	push   0x60eb35c
  41550a:	mov    edx,0xf0d2cad8
  41550f:	dec    esp
  415510:	in     eax,dx
  415511:	inc    esi
  415512:	inc    ebx
  415513:	mov    cl,0x34
  415515:	loop   0x415523
  415517:	jne    0x4154bc
  415519:	jb     0x4154e7
  41551b:	xchg   esp,eax
  41551c:	or     DWORD PTR [ecx],0x48
  41551f:	lea    esp,[edx+0x49]
  415522:	neg    BYTE PTR [edx+0xc]
  415525:	or     bl,ah
  415527:	xchg   BYTE PTR [ebp+0x57845bd0],cl
  41552d:	cwde   
  41552e:	or     eax,0x91d69d73
  415533:	xchg   edi,eax
  415534:	aad    0x7f
  415536:	loop   0x415536
  415538:	test   ebp,edx
  41553a:	inc    edi
  41553b:	jno    0x415503
  41553d:	push   eax
  41553e:	retf   0xf191
  415541:	addr16 call 0x35431d1a
  415547:	lods   eax,DWORD PTR ds:[esi]
  415548:	and    al,0x14
  41554a:	mov    ch,0xb9
  41554c:	lahf   
  41554d:	mov    eax,0x79c27a0d
  415552:	ds pusha 
  415554:	jecxz  0x4155d1
  415556:	pop    esi
  415557:	mov    ah,0xb9
  415559:	mov    esi,0xad994d2c
  41555e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555f:	hlt    
  415560:	into   
  415561:	add    al,0x17
  415563:	imul   ecx,DWORD PTR [ecx-0x67153933],0xffffffb8
  41556a:	stc    
  41556b:	pop    edi
  41556c:	or     BYTE PTR [eax-0x2475231a],bh
  415572:	dec    esi
  415573:	xchg   DWORD PTR [ebp-0x1cd178d0],ecx
  415579:	xchg   esi,eax
  41557a:	lds    esp,FWORD PTR [ecx]
  41557c:	jns    0x415560
  41557e:	outs   dx,BYTE PTR ds:[esi]
  41557f:	fisttp DWORD PTR [eax+0x5f]
  415582:	pusha  
  415583:	xchg   ebp,eax
  415584:	sbb    eax,0xb8a2bf57
  415589:	les    edx,FWORD PTR [ecx-0x72893e0d]
  41558f:	jne    0x415534
  415591:	scas   al,BYTE PTR es:[edi]
  415592:	in     al,0xb7
  415594:	jnp    0x4155ba
  415596:	pop    edx
  415597:	stc    
  415598:	retf   0x38f3
  41559b:	retf   0xe66e
  41559e:	push   ecx
  41559f:	pop    ebx
  4155a0:	outs   dx,BYTE PTR ds:[esi]
  4155a1:	int3   
  4155a2:	and    BYTE PTR [edx-0x38c74a6b],dh
  4155a8:	and    eax,0x156f5f1e
  4155ad:	mov    edx,0x4c0e7788
  4155b2:	mov    eax,ds:0x605070a7
  4155b7:	loop   0x415609
  4155b9:	rcr    DWORD PTR [edi+ecx*8],1
  4155bc:	add    BYTE PTR [esi-0x51355b46],bh
  4155c2:	pop    edx
  4155c3:	lods   al,BYTE PTR ds:[esi]
  4155c4:	lods   al,BYTE PTR ds:[esi]
  4155c5:	mov    DWORD PTR [ecx+0x36],edi
  4155c8:	inc    eax
  4155c9:	cmp    eax,0x14c5ac60
  4155ce:	xor    eax,0xce7c3108
  4155d3:	outs   dx,DWORD PTR ds:[esi]
  4155d4:	outs   dx,DWORD PTR ds:[esi]
  4155d5:	(bad)  
  4155d6:	xlat   BYTE PTR ds:[ebx]
  4155d7:	xchg   BYTE PTR [ecx+0x79a24c77],bh
  4155dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155de:	jle    0x41558d
  4155e0:	and    BYTE PTR [esp+esi*8+0x13],al
  4155e4:	push   0xc067d277
  4155e9:	je     0x415628
  4155eb:	out    0xcd,eax
  4155ed:	mov    ah,0x39
  4155ef:	scas   al,BYTE PTR es:[edi]
  4155f0:	jg     0x415598
  4155f2:	push   esi
  4155f3:	imul   BYTE PTR [edx-0x6a]
  4155f6:	push   cs
  4155f7:	retf   
  4155f8:	mov    DWORD PTR [ebx],edx
  4155fa:	add    BYTE PTR [edi+ecx*8-0x19],dl
  4155fe:	pop    ecx
  4155ff:	imul   ebx,DWORD PTR [esi],0xffffffd5
  415602:	mov    ecx,DWORD PTR [edi-0x3da619d7]
  415608:	dec    ebx
  415609:	pop    eax
  41560a:	jns    0x415681
  41560c:	add    esi,0xffffff81
  41560f:	pop    ebx
  415610:	mov    edi,0x96850f25
  415615:	or     eax,0x30715cb8
  41561a:	mov    ds,ecx
  41561c:	xchg   DWORD PTR [esp+ecx*1-0x3b],edi
  415620:	(bad)  
  415621:	xlat   BYTE PTR ds:[ebx]
  415622:	pusha  
  415623:	mov    cl,bh
  415625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415626:	jecxz  0x41569d
  415628:	ja     0x4155cb
  41562a:	push   edx
  41562b:	outs   dx,BYTE PTR ds:[esi]
  41562c:	xchg   esi,eax
  41562d:	xchg   ecx,eax
  41562e:	push   cs
  41562f:	sbb    al,BYTE PTR [esi+0x57]
  415632:	shl    esp,0xeb
  415635:	jb     0x4155be
  415637:	mov    ds:0x8f238469,al
  41563c:	pop    edi
  41563d:	cs jg  0x415655
  415640:	jmp    0xaf8:0x41974389
  415647:	fimul  DWORD PTR [ebx+0x29c1ab4]
  41564d:	sub    edi,DWORD PTR [ebx-0x392a10e9]
  415653:	add    eax,0x36485123
  415658:	mov    ds:0x5042039b,al
  41565d:	jge    0x4156c2
  41565f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415660:	bndstx [ecx+0x73c4f3ba],bnd3
  415667:	adc    eax,0x3c446a84
  41566c:	jae    0xf158d18c
  415672:	pop    ds
  415673:	daa    
  415674:	es cwde 
  415676:	std    
  415677:	and    BYTE PTR [edi],bh
  415679:	sub    ebx,0x2cb6cd4d
  41567f:	jns    0x415629
  415681:	js     0x4156c9
  415683:	push   es
  415684:	stos   BYTE PTR es:[edi],al
  415685:	push   esi
  415686:	mov    BYTE PTR [edx],0x28
  415689:	xor    eax,0x3d8993d4
  41568e:	sbb    ebx,DWORD PTR [ecx+edi*2]
  415691:	mov    WORD PTR [edx-0x57],es
  415694:	xor    ecx,esp
  415696:	dec    ebp
  415697:	jecxz  0x415651
  415699:	mov    BYTE PTR [edi+0x20],bl
  41569c:	fwait
  41569d:	and    bl,bh
  41569f:	inc    edi
  4156a0:	das    
  4156a1:	inc    esp
  4156a2:	out    dx,al
  4156a3:	lahf   
  4156a4:	dec    ebx
  4156a5:	test   DWORD PTR [ecx],0x782ad81c
  4156ab:	sub    al,0x20
  4156ad:	call   0x6a8d:0x7419b0e3
  4156b4:	lock pushf 
  4156b6:	fs inc esi
  4156b8:	pop    ss
  4156b9:	fist   DWORD PTR [edi]
  4156bb:	mov    ch,0x89
  4156bd:	repnz and al,BYTE PTR ds:0x9baedd44
  4156c4:	(bad)  
  4156c5:	push   edi
  4156c6:	and    cl,ch
  4156c8:	inc    edx
  4156c9:	stos   BYTE PTR es:[edi],al
  4156ca:	xor    bh,ah
  4156cc:	sbb    eax,0x32feaf6b
  4156d1:	(bad)  
  4156d2:	add    dh,BYTE PTR [ecx]
  4156d4:	nop
  4156d5:	fwait
  4156d6:	shl    DWORD PTR [ecx+esi*8-0x7de7e179],cl
  4156dd:	mov    dh,0xdb
  4156df:	repz sbb ah,BYTE PTR [eax-0x4b650e86]
  4156e6:	(bad)  
  4156e7:	mov    eax,0xbdd64f5e
  4156ec:	fs int 0x42
  4156ef:	mov    bh,0x5d
  4156f1:	mov    ebx,0x50ce8ab3
  4156f6:	push   ss
  4156f7:	repnz repnz or DWORD PTR [edi-0x4127bcb3],edi
  4156ff:	mov    eax,0xedb339be
  415704:	outs   dx,BYTE PTR ds:[esi]
  415705:	dec    edx
  415706:	shr    BYTE PTR [ebp-0x144e183b],1
  41570c:	sbb    eax,0x577c315
  415711:	shl    BYTE PTR [esi],0x1b
  415714:	pop    esp
  415715:	add    al,0x46
  415717:	repz push 0x1f
  41571a:	sahf   
  41571b:	sub    DWORD PTR [ecx+edi*8+0x34],esi
  41571f:	cmp    BYTE PTR [eax+0x274eb05c],0x51
  415726:	dec    eax
  415727:	ss (bad) 
  415729:	shl    BYTE PTR [eax-0x6f4dd798],1
  41572f:	add    dh,BYTE PTR [ecx-0x27]
  415732:	dec    ebx
  415733:	pop    es
  415734:	adc    BYTE PTR [edi],0xce
  415737:	pop    ebp
  415738:	jbe    0x4157b0
  41573a:	es mov cl,0x53
  41573d:	mov    esp,0xd815fece
  415742:	rcr    eax,0xc
  415745:	rcr    DWORD PTR [ecx-0x2d],1
  415748:	fs out dx,eax
  41574a:	mov    ebp,0x52fa6745
  41574f:	lods   al,BYTE PTR ds:[esi]
  415750:	retf   0x6961
  415753:	mov    ebp,DWORD PTR ds:[edx]
  415756:	retf   
  415757:	mov    cl,0x7a
  415759:	push   0xc1f87122
  41575e:	retf   
  41575f:	or     bl,bl
  415761:	int3   
  415762:	mov    eax,ds:0x4ac52600
  415768:	pop    ds
  415769:	mov    ch,0x1f
  41576b:	and    dh,bl
  41576d:	pop    edx
  41576e:	mov    esp,DWORD PTR gs:[edx]
  415771:	mov    fs,esp
  415773:	or     BYTE PTR [edx],ah
  415775:	(bad)  
  415776:	jmp    0x4157ce
  415778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415779:	das    
  41577a:	cld    
  41577b:	xchg   esi,eax
  41577c:	mul    ecx
  41577e:	pop    eax
  41577f:	fst    QWORD PTR [ebp-0x21442744]
  415785:	int    0x88
  415787:	into   
  415788:	pop    esp
  415789:	sub    DWORD PTR [eax+0x66],0x86950358
  415790:	in     eax,0x4d
  415792:	sbb    eax,DWORD PTR [edi]
  415794:	mov    DWORD PTR [ebp-0x35dc3561],ecx
  41579a:	fdivr  QWORD PTR [edx]
  41579c:	inc    esi
  41579d:	cmp    BYTE PTR [eax-0x6b],ch
  4157a0:	jge    0x41578b
  4157a2:	(bad)  
  4157a4:	jge    0x41576d
  4157a6:	(bad)  
  4157a7:	fwait
  4157a8:	mov    ch,al
  4157aa:	mov    DWORD PTR [esi],ebp
  4157ac:	or     ebx,esi
  4157ae:	outs   dx,DWORD PTR ds:[esi]
  4157af:	shr    DWORD PTR [ebx],cl
  4157b1:	sub    al,0x26
  4157b3:	(bad)  
  4157b4:	in     al,dx
  4157b5:	retf   0x7b91
  4157b8:	pop    edx
  4157b9:	jle    0x4157e1
  4157bb:	retf   
  4157bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157bd:	inc    edx
  4157be:	lea    esi,[eax+0x24]
  4157c1:	jo     0x415746
  4157c3:	(bad)  
  4157c4:	lea    edx,[esi-0x51429f51]
  4157ca:	fs ins DWORD PTR es:[edi],dx
  4157cc:	and    DWORD PTR ds:0x44598623,eax
  4157d2:	ror    DWORD PTR [ebp+eiz*2-0x4134bd11],cl
  4157d9:	xchg   esi,eax
  4157da:	jle    0x41578f
  4157dc:	ret    
  4157dd:	adc    DWORD PTR [ebx],esi
  4157df:	call   0x765d067
  4157e4:	sbb    ch,dl
  4157e6:	inc    edi
  4157e7:	push   esp
  4157e8:	push   esi
  4157e9:	repnz ins DWORD PTR es:[edi],dx
  4157eb:	imul   DWORD PTR [ecx+eax*2]
  4157ee:	pop    ss
  4157ef:	push   cs
  4157f0:	or     al,dh
  4157f2:	push   edi
  4157f3:	in     eax,dx
  4157f4:	adc    eax,0xeea49006
  4157f9:	jl     0x41583c
  4157fb:	mov    edi,0x8d4e1602
  415800:	retf   0xefbc
  415803:	cmp    bh,BYTE PTR [esi+0x73]
  415806:	pop    ecx
  415807:	or     eax,0x700687c0
  41580c:	pop    ebx
  41580d:	(bad)  
  41580e:	iret   
  41580f:	ret    0xc831
  415812:	rcl    DWORD PTR [eax-0x5d4fe740],0x48
  415819:	shl    DWORD PTR [ecx+0x5c3d348e],0x56
  415820:	mov    eax,0x3c050ec5
  415825:	hlt    
  415826:	icebp  
  415827:	mov    bh,0x67
  415829:	mov    ecx,0x955802df
  41582e:	sub    esi,esi
  415830:	mov    ebx,ebp
  415832:	jecxz  0x4157fc
  415834:	xlat   BYTE PTR ds:[ebx]
  415835:	sub    ecx,DWORD PTR [eax-0x202f9af1]
  41583b:	test   eax,0x11b18cd1
  415840:	outs   dx,DWORD PTR ds:[esi]
  415841:	mov    edi,0xe757c3f6
  415846:	mov    eax,0x88b48d17
  41584b:	rcl    BYTE PTR ds:0xf98eedf0,1
  415851:	pop    es
  415852:	pop    ds
  415853:	and    eax,DWORD PTR [edi-0x6409897]
  415859:	inc    ebp
  41585a:	mov    ah,0x1
  41585c:	pop    esp
  41585d:	(bad)  
  41585e:	clc    
  41585f:	test   BYTE PTR [eax+0x26],dl
  415862:	jae    0x415840
  415864:	aas    
  415865:	sub    BYTE PTR [edi+0x3f3f63a],dh
  41586b:	into   
  41586c:	repz hlt 
  41586e:	push   ecx
  41586f:	shl    esi,0x32
  415872:	or     eax,0x652e9bce
  415877:	or     BYTE PTR [edx],cl
  415879:	push   ds
  41587a:	in     eax,0xc8
  41587c:	stos   BYTE PTR es:[edi],al
  41587d:	push   ss
  41587e:	idiv   BYTE PTR [edx+0x1f]
  415881:	out    0x63,al
  415883:	fwait
  415884:	push   esp
  415885:	push   ebp
  415886:	adc    dl,BYTE PTR [edx+esi*4+0x7291bea8]
  41588d:	out    dx,eax
  41588e:	leave  
  41588f:	(bad)  
  415891:	lahf   
  415892:	(bad)  
  415893:	out    dx,al
  415894:	enter  0x1aaa,0x84
  415898:	test   eax,0xdf74377e
  41589d:	mov    esp,ebp
  41589f:	add    al,0x25
  4158a1:	stos   DWORD PTR es:[edi],eax
  4158a2:	cmp    eax,0x10c7f976
  4158a7:	je     0x41591c
  4158a9:	(bad)
  4158ad:	sub    DWORD PTR [ebp-0xa15418a],esi
  4158b3:	push   edx
  4158b4:	fwait
  4158b5:	js     0x415843
  4158b7:	lods   al,BYTE PTR ds:[esi]
  4158b8:	cmp    ch,0x2f
  4158bb:	dec    esp
  4158bc:	ss xchg bl,ch
  4158bf:	push   edx
  4158c0:	(bad)  
  4158c1:	fidivr DWORD PTR gs:[ebp-0x4d]
  4158c5:	repnz out dx,al
  4158c7:	popa   
  4158c8:	shl    BYTE PTR [edx+0x402c36d0],1
  4158ce:	loope  0x415872
  4158d0:	loopne 0x4158ea
  4158d2:	pop    ebp
  4158d3:	outs   dx,BYTE PTR ds:[esi]
  4158d4:	fldenv [esi+0x79012039]
  4158da:	ins    DWORD PTR es:[edi],dx
  4158db:	ret    0xe001
  4158de:	xlat   BYTE PTR ds:[ebx]
  4158df:	cdq    
  4158e0:	(bad)  
  4158e1:	xor    al,0x87
  4158e3:	mov    ds:0xa72d890a,al
  4158e8:	(bad)  [eax-0x3d]
  4158eb:	bound  ebx,QWORD PTR [ebp-0x1acf1296]
  4158f1:	jo     0x415915
  4158f3:	sub    eax,0x37bd2dc3
  4158f9:	mov    al,ds:0xdab6b547
  4158fe:	int3   
  4158ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415900:	addr16 jno 0x4158e0
  415903:	xlat   BYTE PTR ds:[ebx]
  415904:	cdq    
  415905:	in     al,0x87
  415907:	call   0x887c:0xb18e3d9d
  41590e:	pop    eax
  41590f:	inc    ebx
  415910:	fcmovnb st,st(5)
  415912:	fcomi  st,st(4)
  415914:	adc    DWORD PTR [edx+ebx*4],ecx
  415917:	repnz into 
  415919:	and    BYTE PTR [ecx+0x51142050],dh
  41591f:	pushw  cs
  415921:	out    dx,al
  415922:	outs   dx,DWORD PTR ds:[esi]
  415923:	retf   
  415924:	repz jl 0x415997
  415927:	push   ebx
  415928:	out    dx,al
  415929:	retf   0x66ac
  41592c:	xlat   BYTE PTR ds:[ebx]
  41592d:	ds cdq 
  41592f:	fstp   DWORD PTR [ecx-0x10]
  415932:	test   DWORD PTR [edx],esp
  415934:	and    al,0xf
  415936:	and    BYTE PTR [esi+0x25],dl
  415939:	dec    eax
  41593a:	aad    0xf1
  41593c:	dec    esi
  41593d:	pop    ds
  41593e:	mov    BYTE PTR [edi+0x62bb5934],bl
  415944:	jae    0x4158d3
  415946:	push   ds
  415947:	mov    esi,0xf002cec
  41594c:	inc    ebp
  41594d:	loop   0x415983
  41594f:	addr16 add ebp,esp
  415952:	cli    
  415953:	or     DWORD PTR [ebp-0x4d],ebx
  415956:	push   edx
  415957:	es inc edx
  415959:	outs   dx,DWORD PTR gs:[esi]
  41595b:	inc    ecx
  41595c:	cmp    eax,0xe3fbd2ed
  415961:	mov    edx,0xc2d9ce05
  415966:	sbb    ch,BYTE PTR ds:0x905eada5
  41596c:	ins    BYTE PTR es:[edi],dx
  41596d:	scas   eax,DWORD PTR es:[edi]
  41596e:	lahf   
  41596f:	cmp    ebx,esp
  415971:	(bad)  
  415972:	aam    0xc0
  415974:	pusha  
  415975:	int    0xb8
  415977:	outs   dx,DWORD PTR ds:[esi]
  415978:	gs jle 0x415908
  41597b:	xchg   ebp,eax
  41597c:	out    0xf6,al
  41597e:	ffreep st(2)
  415980:	mov    ?,WORD PTR [eax+0x7737b6a6]
  415986:	loop   0x415963
  415988:	adc    ebp,0x7c
  41598b:	(bad)  
  41598c:	das    
  41598d:	mov    ebp,0xcaa77269
  415992:	push   edx
  415993:	fisubr DWORD PTR [ecx-0x54aa7811]
  415999:	test   eax,0x7b7eac36
  41599e:	fwait
  41599f:	rol    DWORD PTR [ebp-0x5680768a],0x5d
  4159a6:	lock adc DWORD PTR [ecx-0x462d5b50],edx
  4159ad:	pop    ss
  4159ae:	push   ebp
  4159af:	sar    DWORD PTR [edi],cl
  4159b1:	xor    ecx,ebx
  4159b3:	es sbb eax,ecx
  4159b6:	neg    DWORD PTR ds:[edx+0x1c]
  4159ba:	dec    esp
  4159bb:	mov    bh,0x8e
  4159bd:	ja     0x415a14
  4159bf:	mov    ds:0x9dd8b169,al
  4159c4:	ret    
  4159c5:	cs push es
  4159c7:	jg     0x4159b3
  4159c9:	adc    DWORD PTR [ebx-0x78],eax
  4159cc:	xlat   BYTE PTR ds:[ebx]
  4159cd:	mov    ecx,0xb9d8d347
  4159d2:	jbe    0x415a4e
  4159d4:	jmp    0x4159b3
  4159d6:	push   edi
  4159d7:	xchg   edi,eax
  4159d8:	jmp    0xaa3ee51f
  4159dd:	rcr    DWORD PTR [esp+ecx*2-0x2a382508],1
  4159e4:	sbb    ah,al
  4159e6:	pop    edx
  4159e7:	sub    ebp,DWORD PTR [ecx+0x4]
  4159ea:	repnz test dh,dl
  4159ed:	int3   
  4159ee:	popa   
  4159ef:	jmp    0x29d8:0x67a49e29
  4159f6:	add    al,0x62
  4159f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159f9:	sbb    dh,bl
  4159fb:	mov    ebx,0x726908e3
  415a00:	adc    eax,0xbafa2e72
  415a05:	mov    dl,0x44
  415a07:	cmp    DWORD PTR ds:0x706a8af7,esp
  415a0d:	push   es
  415a0e:	inc    ebx
  415a0f:	push   ebp
  415a10:	(bad)  
  415a11:	ror    BYTE PTR [edx-0x38],0xb3
  415a15:	xor    DWORD PTR [eax-0x40],ecx
  415a18:	or     BYTE PTR [ebp-0x25ecd10],al
  415a1e:	add    DWORD PTR [ebp+0x72],edx
  415a21:	imul   edi,eax,0xb104a311
  415a27:	sbb    bh,BYTE PTR [ebx]
  415a29:	add    al,BYTE PTR [edx+0x77aab7e]
  415a2f:	outs   dx,BYTE PTR ds:[esi]
  415a30:	jle    0x415a51
  415a32:	or     DWORD PTR [ebp-0x208e5c8f],edi
  415a38:	jbe    0x4159c0
  415a3a:	mov    al,0x89
  415a3c:	daa    
  415a3d:	mov    WORD PTR [edx-0xd815eaa],ss
  415a43:	push   ds
  415a44:	sar    cl,0x5e
  415a47:	aas    
  415a48:	sbb    cl,BYTE PTR [esi]
  415a4a:	cmp    eax,0x7f
  415a4d:	stos   DWORD PTR es:[edi],eax
  415a4e:	cmp    BYTE PTR [ebx-0x1],bl
  415a51:	pop    eax
  415a52:	stos   DWORD PTR es:[edi],eax
  415a53:	push   0x2
  415a55:	dec    ebp
  415a56:	arpl   WORD PTR [edi+0x4c408162],bx
  415a5c:	fs mov ch,0xcb
  415a5f:	or     bh,BYTE PTR [esi-0x1c]
  415a62:	jge    0x415a3b
  415a64:	jmp    FWORD PTR [ecx-0x1e18f171]
  415a6a:	ds or  eax,0xf802d55d
  415a70:	inc    edi
  415a71:	es iret 
  415a73:	jo     0x415a3e
  415a75:	pop    DWORD PTR [eax+edi*4+0x76576fac]
  415a7c:	sub    al,0x2d
  415a7e:	or     dh,BYTE PTR [ecx+edi*8]
  415a81:	push   edi
  415a82:	mov    ecx,0x9f55f6b7
  415a87:	aas    
  415a88:	mov    dh,0xf2
  415a8a:	push   es
  415a8b:	sub    eax,0x390e908d
  415a90:	dec    edx
  415a91:	aaa    
  415a92:	adc    al,0x85
  415a94:	mov    BYTE PTR [edi],dl
  415a96:	add    al,BYTE PTR [esi+0x6d]
  415a99:	pop    ecx
  415a9a:	daa    
  415a9b:	inc    edi
  415a9c:	imul   edx,DWORD PTR [ecx+0x3f9c017e],0xffffffa0
  415aa3:	fstp   QWORD PTR [ebx-0x39]
  415aa6:	pop    es
  415aa7:	loopne 0x415a45
  415aa9:	mov    dh,0x83
  415aab:	push   ds
  415aac:	scas   al,BYTE PTR es:[edi]
  415aad:	jbe    0x415ada
  415aaf:	xor    DWORD PTR [edx],esp
  415ab1:	cmp    al,0x25
  415ab3:	pusha  
  415ab4:	(bad)  
  415ab5:	enter  0x5146,0xa0
  415ab9:	scas   al,BYTE PTR es:[edi]
  415aba:	xrelease xchg DWORD PTR [ecx+0x3],eax
  415abe:	sub    edx,DWORD PTR [ecx]
  415ac0:	int3   
  415ac1:	pop    ss
  415ac2:	dec    esi
  415ac3:	rol    esi,cl
  415ac5:	push   eax
  415ac6:	sbb    al,0x5b
  415ac8:	mov    eax,0x4234934b
  415acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ace:	push   edx
  415acf:	icebp  
  415ad0:	repnz adc eax,0x1ef951c4
  415ad6:	adc    eax,0x15ac6671
  415adb:	aas    
  415adc:	sbb    eax,ecx
  415ade:	ror    BYTE PTR [edi],cl
  415ae0:	mov    dh,0xb
  415ae2:	or     al,0x10
  415ae4:	mov    dh,0x6f
  415ae6:	clc    
  415ae7:	dec    eax
  415ae8:	sub    BYTE PTR [edx+0x7b],0x14
  415aec:	adc    BYTE PTR [ecx],0x76
  415aef:	push   ecx
  415af0:	sbb    esi,0xe7fcc066
  415af6:	arpl   WORD PTR [esi],ax
  415af8:	fsubrp st(5),st
  415afa:	fwait
  415afb:	mov    ecx,0x874399ea
  415b00:	mov    ecx,0x67758abd
  415b05:	xor    DWORD PTR [eax],esp
  415b07:	jo     0x415aff
  415b09:	pop    ecx
  415b0a:	inc    eax
  415b0b:	push   cs
  415b0c:	fsubr  DWORD PTR [ebp+0x51]
  415b0f:	fs test eax,0x3de55aae
  415b15:	xchg   ebp,eax
  415b16:	pop    edi
  415b17:	arpl   WORD PTR [ebp+0x2d],ax
  415b1a:	bound  ebp,QWORD PTR [esi+ecx*4-0x3fd72002]
  415b21:	or     eax,0xbac88062
  415b26:	and    esp,ebx
  415b28:	xchg   edi,eax
  415b29:	in     al,0xb
  415b2b:	inc    ecx
  415b2c:	rcl    BYTE PTR [esi+eax*4],cl
  415b2f:	aad    0xfb
  415b31:	mov    cl,0x6
  415b33:	and    DWORD PTR [ecx],edi
  415b35:	data16 je 0x415b3b
  415b38:	call   0x2a57:0x1fedc09f
  415b3f:	adc    ebp,DWORD PTR [esi+0x39548053]
  415b45:	inc    esi
  415b46:	sbb    edi,ebx
  415b48:	sbb    cl,0xcb
  415b4b:	dec    edx
  415b4c:	in     eax,dx
  415b4d:	das    
  415b4e:	int3   
  415b4f:	mov    ch,0x4e
  415b51:	adc    esp,DWORD PTR [esi]
  415b53:	(bad)  
  415b55:	pop    edi
  415b56:	pop    es
  415b57:	sar    DWORD PTR [ebp-0x472806f1],1
  415b5d:	jl     0x415b41
  415b5f:	adc    al,0x2b
  415b61:	outs   dx,BYTE PTR ds:[esi]
  415b62:	or     ecx,DWORD PTR [eax-0x1d22ef15]
  415b68:	call   0x65d5:0x654c5184
  415b6f:	data16 int 0x5e
  415b72:	push   esi
  415b73:	dec    edx
  415b74:	mov    esi,0xf441bcba
  415b79:	or     BYTE PTR [esi-0x63],dh
  415b7c:	and    eax,0x728a12d3
  415b81:	inc    ecx
  415b82:	push   esi
  415b83:	icebp  
  415b84:	push   ecx
  415b85:	inc    esi
  415b86:	fsub   QWORD PTR [ecx]
  415b88:	out    dx,al
  415b89:	icebp  
  415b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8b:	sar    BYTE PTR [edx],cl
  415b8d:	not    BYTE PTR [ebx]
  415b8f:	in     al,dx
  415b90:	aam    0xd7
  415b92:	mov    ebx,edx
  415b94:	push   ss
  415b95:	hlt    
  415b96:	push   eax
  415b97:	(bad)  
  415b98:	xchg   ecx,eax
  415b99:	mov    al,BYTE PTR [eax+ebp*4+0x32]
  415b9d:	aad    0xa6
  415b9f:	scas   eax,DWORD PTR es:[edi]
  415ba0:	dec    ecx
  415ba1:	xlat   BYTE PTR ds:[ebx]
  415ba2:	xor    dl,BYTE PTR [edx+0xe00f982]
  415ba8:	mov    ah,0xa4
  415baa:	sub    ch,BYTE PTR [ebx]
  415bac:	push   edx
  415bad:	xchg   esp,eax
  415bae:	jmp    0x63b0:0xda30e1eb
  415bb5:	push   ebx
  415bb6:	int3   
  415bb7:	data16 arpl WORD PTR [esi],bx
  415bba:	lea    ebp,ds:0x89e169bb
  415bc0:	lea    ecx,[ebp+0x308dea24]
  415bc6:	and    DWORD PTR [ebp-0x18065f41],esp
  415bcc:	or     al,0x84
  415bce:	stc    
  415bcf:	leave  
  415bd0:	sub    ah,BYTE PTR [eax+0x135480ba]
  415bd6:	mov    es,WORD PTR [ebp-0xd]
  415bd9:	inc    edi
  415bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdb:	dec    ecx
  415bdc:	sbb    eax,0xe5789acc
  415be1:	sbb    eax,0x8192c53
  415be6:	fucomip st,st(3)
  415be8:	jns    0x415b82
  415bea:	(bad)  
  415beb:	pop    esp
  415bec:	out    0xde,al
  415bee:	test   DWORD PTR [ecx],ebx
  415bf0:	loope  0x415c6f
  415bf2:	mov    bl,0x11
  415bf4:	test   eax,0x92423c4
  415bf9:	mov    esi,0x9fd62cad
  415bfe:	xlat   BYTE PTR ds:[ebx]
  415bff:	ins    BYTE PTR es:[edi],dx
  415c00:	mov    DWORD PTR [edx],ebx
  415c02:	ret    0xaf1e
  415c05:	outs   dx,DWORD PTR ds:[esi]
  415c06:	or     eax,0xf3e15f04
  415c0b:	js     0x415c28
  415c0d:	test   eax,0x4afc1e83
  415c12:	into   
  415c13:	cmp    eax,0x6fb0e847
  415c18:	outs   dx,DWORD PTR ds:[esi]
  415c19:	int    0x72
  415c1b:	imul   ecx,DWORD PTR [ebx-0xd18f77d],0xb1268cc6
  415c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c26:	jge    0x415c3c
  415c28:	mov    esi,0x1804a487
  415c2d:	out    0x94,eax
  415c2f:	cmp    eax,0x1ed6e322
  415c34:	or     BYTE PTR [edi-0x297ffd91],cl
  415c3a:	scas   al,BYTE PTR es:[edi]
  415c3b:	mov    cl,0xc7
  415c3d:	je     0x415c98
  415c3f:	sbb    ch,BYTE PTR [edx-0x22]
  415c42:	sub    eax,ecx
  415c44:	dec    ecx
  415c45:	(bad)  
  415c48:	scas   eax,DWORD PTR es:[edi]
  415c49:	stc    
  415c4a:	mov    eax,0xf0c6d1ff
  415c4f:	push   ds
  415c50:	pusha  
  415c51:	in     eax,0xee
  415c53:	int    0x35
  415c55:	jl     0x415be7
  415c57:	adc    al,BYTE PTR [ebx]
  415c59:	inc    eax
  415c5a:	pop    es
  415c5b:	xchg   DWORD PTR [eax-0x5bbbc03c],ebx
  415c61:	or     al,0x9a
  415c63:	outs   dx,DWORD PTR ds:[esi]
  415c64:	in     al,0xa2
  415c66:	pop    ebp
  415c67:	inc    esi
  415c68:	cwde   
  415c69:	in     al,dx
  415c6a:	and    eax,DWORD PTR ds:0xab1bd057
  415c70:	jecxz  0x415c2b
  415c72:	and    DWORD PTR [edi],esi
  415c74:	addr16 or al,0x83
  415c77:	dec    ebp
  415c78:	xchg   edi,eax
  415c79:	sub    al,0x6e
  415c7b:	out    0xd2,eax
  415c7d:	dec    esp
  415c7e:	fstp   DWORD PTR [edi]
  415c80:	or     DWORD PTR [ebp-0x3f],ebp
  415c83:	rcl    DWORD PTR [edi],1
  415c85:	mov    edi,0x2f688609
  415c8a:	add    BYTE PTR [ebx-0x3ce50a0f],cl
  415c90:	shrd   edx,eax,cl
  415c93:	cmp    eax,0xa1fbbc06
  415c98:	cli    
  415c99:	xchg   BYTE PTR [ecx+ecx*2-0x59b7216e],al
  415ca0:	int    0x4c
  415ca2:	cli    
  415ca3:	sub    al,0xc4
  415ca5:	repz or cl,BYTE PTR [ebp-0x5e73632e]
  415cac:	test   DWORD PTR [ebx],0x5541be52
  415cb2:	adc    eax,0xaa1762b5
  415cb7:	dec    ebp
  415cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cb9:	push   edi
  415cba:	aas    
  415cbb:	adc    DWORD PTR [ebx],0x20
  415cbe:	repnz shl BYTE PTR [esi-0x687e1acc],cl
  415cc5:	mov    al,ds:0xf4ca4590
  415cca:	push   ss
  415ccb:	test   al,0xee
  415ccd:	mov    cs,WORD PTR [ebx-0x3e4edf18]
  415cd3:	or     dl,dl
  415cd5:	popa   
  415cd6:	push   ss
  415cd7:	xchg   ebp,eax
  415cd8:	clc    
  415cd9:	pop    edi
  415cda:	ficomp WORD PTR [eax+ecx*8+0x50df5629]
  415ce1:	cmp    BYTE PTR ds:0x77225545,bh
  415ce7:	loop   0x415d04
  415ce9:	jmp    0x8b42:0xec4723f3
  415cf0:	loop   0x415ce8
  415cf2:	mov    ss,WORD PTR [esi+0x6e518833]
  415cf8:	sbb    al,0xbc
  415cfa:	pop    ds
  415cfb:	mov    eax,ds:0x66a465a8
  415d00:	inc    eax
  415d01:	jae    0x415d5a
  415d03:	push   ecx
  415d04:	loop   0x415d79
  415d06:	jbe    0x415d01
  415d08:	jle    0x415d46
  415d0a:	fnstenv [edx+edi*8-0x4b95be09]
  415d11:	mov    dh,0xfe
  415d13:	das    
  415d14:	outs   dx,DWORD PTR ds:[esi]
  415d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d16:	add    esp,0x26
  415d19:	dec    BYTE PTR [ebx]
  415d1b:	sbb    DWORD PTR [esi-0x62512061],ebx
  415d21:	dec    ecx
  415d22:	inc    ecx
  415d23:	sbb    eax,0x2de8cc23
  415d28:	ret    
  415d29:	sub    eax,0xc71bcfdb
  415d2e:	paddsb mm3,QWORD PTR [edx-0x4862abac]
  415d35:	xchg   ebx,eax
  415d36:	or     BYTE PTR [ecx],bh
  415d38:	push   ebp
  415d39:	stos   BYTE PTR es:[edi],al
  415d3a:	pusha  
  415d3b:	cs call 0xdf9ebacb
  415d41:	ins    DWORD PTR es:[edi],dx
  415d42:	out    dx,eax
  415d43:	in     eax,0x5
  415d45:	neg    BYTE PTR [ecx]
  415d47:	mov    ch,0xfc
  415d49:	test   cl,ah
  415d4b:	or     DWORD PTR [ebx],0xbffe0e88
  415d51:	dec    ebp
  415d52:	in     al,0xe4
  415d54:	aaa    
  415d55:	dec    ebx
  415d56:	mov    ebx,0xe78b3327
  415d5b:	pop    ebx
  415d5c:	outs   dx,BYTE PTR ds:[esi]
  415d5d:	in     al,0x6c
  415d5f:	dec    edx
  415d60:	pop    ecx
  415d61:	mov    esp,0x256732cb
  415d66:	repz fwait
  415d68:	mov    edi,esp
  415d6a:	xor    eax,0x6827c6cb
  415d6f:	mov    ch,0x95
  415d71:	int    0x1a
  415d73:	(bad)  
  415d74:	jmp    0x9b6b5659
  415d79:	mov    al,ds:0x40409e73
  415d7e:	jns    0x415d4f
  415d80:	cmp    BYTE PTR [ebx+ecx*8],0xbd
  415d84:	push   0xffffffd3
  415d86:	pop    esp
  415d87:	(bad)
  415d8a:	mov    al,ds:0x89a40669
  415d8f:	or     esi,esp
  415d91:	ja     0x415dda
  415d93:	dec    eax
  415d94:	xchg   ebx,eax
  415d95:	sar    esi,cl
  415d97:	aad    0x2
  415d99:	pop    esi
  415d9a:	call   0x574d8b2b
  415d9f:	xlat   BYTE PTR ds:[ebx]
  415da0:	or     DWORD PTR [ebp-0x3cb870d2],edx
  415da6:	mov    ch,0x18
  415da8:	pusha  
  415da9:	icebp  
  415daa:	lods   eax,DWORD PTR ds:[esi]
  415dab:	and    BYTE PTR [edi-0x6e2110dc],dl
  415db1:	and    eax,DWORD PTR [eax+0x4]
  415db4:	inc    eax
  415db5:	mov    ah,0x91
  415db7:	retf   0x48c4
  415dba:	push   edx
  415dbb:	mov    eax,ds:0xb6c841a2
  415dc0:	stos   BYTE PTR es:[edi],al
  415dc1:	cmp    eax,0x6ae19817
  415dc6:	inc    esp
  415dc7:	xchg   edi,eax
  415dc8:	scas   eax,DWORD PTR es:[edi]
  415dc9:	ret    
  415dca:	mov    cs,WORD PTR [ebx-0x21]
  415dcd:	mov    eax,ds:0x646bdfa0
  415dd2:	jecxz  0x415dd4
  415dd4:	xlat   BYTE PTR ds:[ebx]
  415dd5:	call   0xf98cda6
  415dda:	adc    DWORD PTR [edx+0x24],esp
  415ddd:	adc    ah,BYTE PTR [edx+0x5a]
  415de0:	je     0x415e11
  415de2:	mov    ebp,DWORD PTR [edx-0x14]
  415de5:	cdq    
  415de6:	dec    ebx
  415de7:	add    cl,dl
  415de9:	pop    ebx
  415dea:	mov    ecx,0x6ff91c3d
  415def:	mov    ecx,0x59e87401
  415df4:	and    edi,esp
  415df6:	push   0x34
  415df8:	icebp  
  415df9:	xchg   ebp,eax
  415dfa:	pop    edi
  415dfb:	imul   esp,DWORD PTR ds:0xd859af41,0x3f78565a
  415e05:	and    dh,BYTE PTR [ecx+eax*2]
  415e08:	retf   
  415e09:	out    0x3d,eax
  415e0b:	fcomp  QWORD PTR [eax-0x57291d44]
  415e11:	lahf   
  415e12:	add    eax,0x1e01a7c8
  415e17:	sti    
  415e18:	fld    QWORD PTR [esi]
  415e1a:	jo     0x415e2b
  415e1c:	(bad)  
  415e1d:	fcom   DWORD PTR [ebx-0x6d28ccee]
  415e23:	sbb    BYTE PTR [ebx],0x6a
  415e26:	shl    BYTE PTR [esi],0x48
  415e29:	icebp  
  415e2a:	pop    ebx
  415e2b:	push   edx
  415e2c:	ins    BYTE PTR es:[edi],dx
  415e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e2e:	stc    
  415e2f:	push   ecx
  415e30:	xor    dh,BYTE PTR [edi+0x6b381e68]
  415e36:	(bad)  
  415e37:	fs sti 
  415e39:	add    esi,DWORD PTR ds:0x7ab16cb3
  415e3f:	lahf   
  415e40:	add    eax,0xdbc0d496
  415e45:	jnp    0x415e41
  415e47:	fistp  DWORD PTR [ebx-0x3015e7f8]
  415e4d:	push   edi
  415e4e:	bound  edx,QWORD PTR [edx+0x45]
  415e51:	jo     0x415de9
  415e53:	mov    al,0x5e
  415e55:	out    0x95,eax
  415e57:	xchg   BYTE PTR [esi],cl
  415e59:	jne    0x415e12
  415e5b:	aaa    
  415e5c:	cwde   
  415e5d:	and    BYTE PTR [ebx-0x9],0x23
  415e61:	fcmovnbe st,st(3)
  415e63:	push   esi
  415e64:	inc    edx
  415e65:	popf   
  415e66:	sar    DWORD PTR [esi],1
  415e68:	frstor [eax+0x21]
  415e6b:	push   0x4bcafaab
  415e70:	imul   ecx,DWORD PTR [ebp+0x4cfee11e],0x19
  415e77:	popa   
  415e78:	inc    ebx
  415e79:	jl     0x415ed1
  415e7b:	mov    dh,0x16
  415e7d:	inc    esi
  415e7e:	repnz inc edx
  415e80:	(bad)  [eax+eax*2+0x73]
  415e84:	push   ecx
  415e85:	adc    ch,0xe5
  415e88:	sbb    eax,DWORD PTR [ecx+0x6a568a0e]
  415e8e:	push   eax
  415e8f:	push   0xaf0d71b0
  415e94:	sub    eax,0x841bcf86
  415e99:	adc    edx,edx
  415e9b:	add    al,0xdd
  415e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e9e:	push   ebx
  415e9f:	fcomp  DWORD PTR [esi+ebx*8]
  415ea2:	imul   esp,esp,0x11cb0ef4
  415ea8:	dec    esp
  415ea9:	stos   BYTE PTR es:[edi],al
  415eaa:	or     ch,ah
  415eac:	pop    edx
  415ead:	mov    esi,0xe04e4390
  415eb2:	inc    ebp
  415eb3:	clc    
  415eb4:	into   
  415eb5:	or     al,BYTE PTR [edx+ecx*8+0x77]
  415eb9:	lea    edx,ds:0x7baeee0b
  415ebf:	repnz dec edx
  415ec1:	data16 inc ah
  415ec4:	loop   0x415ed9
  415ec6:	sub    dl,dl
  415ec8:	aam    0xee
  415eca:	das    
  415ecb:	lods   eax,DWORD PTR ds:[esi]
  415ecc:	idiv   BYTE PTR [edi-0x38]
  415ecf:	lods   al,BYTE PTR ds:[esi]
  415ed0:	mov    ah,0x75
  415ed2:	push   ecx
  415ed3:	fcom   QWORD PTR [ebx+0x6e4b1649]
  415ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eda:	add    ebx,DWORD PTR [ebx-0x2f]
  415edd:	sub    al,0xb9
  415edf:	arpl   sp,si
  415ee1:	ds mov eax,0xcc4a65a2
  415ee7:	in     al,0x44
  415ee9:	and    eax,0x4d343448
  415eee:	sbb    esp,DWORD PTR [ecx+ecx*2-0x2]
  415ef2:	sub    edi,edx
  415ef4:	jbe    0x415ebd
  415ef6:	xor    ebx,DWORD PTR [edi]
  415ef8:	cmp    al,0x98
  415efa:	push   0xfffffffc
  415efc:	or     bh,BYTE PTR [ecx+0x56c1d4ac]
  415f02:	out    0x7d,eax
  415f04:	jne    0x415ed4
  415f06:	dec    ecx
  415f07:	jecxz  0x415ebe
  415f09:	push   ds
  415f0a:	in     eax,dx
  415f0b:	push   ebx
  415f0c:	cmpxchg8b QWORD PTR [edx-0x41]
  415f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f11:	addr16 jno 0x415f5c
  415f14:	and    al,0xf6
  415f16:	and    edx,DWORD PTR [edx+0x26]
  415f19:	pop    ebp
  415f1a:	(bad)  
  415f1b:	fnstenv [eax]
  415f1d:	test   BYTE PTR [edx],al
  415f1f:	mov    ch,BYTE PTR gs:[edi+0x4ef0a96a]
  415f26:	mov    ebx,0x45a4a052
  415f2b:	cmp    dl,BYTE PTR fs:[ecx+0x1f2fced9]
  415f32:	adc    BYTE PTR [ecx+0x2c],cl
  415f35:	adc    DWORD PTR [edi-0x7aaf5943],eax
  415f3b:	popf   
  415f3c:	xchg   ebp,eax
  415f3d:	loope  0x415ef8
  415f3f:	mov    edi,0x6994195b
  415f44:	pop    esp
  415f45:	or     DWORD PTR [ecx-0x1a],ebp
  415f48:	or     eax,0xf3251d4a
  415f4d:	add    al,0x10
  415f4f:	xchg   eax,esp
  415f51:	ds add al,0x71
  415f54:	or     ebp,DWORD PTR [edx+eax*2-0x3d]
  415f58:	dec    esi
  415f59:	test   BYTE PTR [ebx],dh
  415f5b:	pop    edi
  415f5c:	rcl    DWORD PTR [ebp+0x4f],cl
  415f5f:	outs   dx,DWORD PTR ds:[esi]
  415f60:	xchg   ebp,eax
  415f61:	pop    ebx
  415f62:	sub    al,0x69
  415f64:	jnp    0x415f68
  415f66:	sub    dh,BYTE PTR [esi]
  415f68:	inc    edi
  415f69:	pop    ecx
  415f6a:	xchg   edx,eax
  415f6b:	sbb    al,0xeb
  415f6d:	jb     0x415f7a
  415f6f:	ficomp WORD PTR [ebp-0x6b]
  415f72:	xchg   DWORD PTR [edi+0x63fda482],edi
  415f78:	xchg   ebx,eax
  415f79:	ins    DWORD PTR es:[edi],dx
  415f7a:	hlt    
  415f7b:	ds push cs
  415f7d:	shl    DWORD PTR [ebp+esi*4+0x475f2f12],cl
  415f84:	jbe    0x415fd7
  415f86:	enter  0x9a86,0xf
  415f8a:	or     dh,bl
  415f8c:	iret   
  415f8d:	sub    eax,DWORD PTR [ecx-0x7f]
  415f90:	das    
  415f91:	jecxz  0x415fc3
  415f93:	shl    DWORD PTR [ecx+0x1f],0xda
  415f97:	ror    WORD PTR [edx+0x4c],0x19
  415f9c:	sbb    bl,dl
  415f9e:	repz push ds
  415fa0:	lock les edx,FWORD PTR [ebx]
  415fa3:	mov    edx,DWORD PTR [esi+0x3]
  415fa6:	(bad)  
  415fa7:	inc    DWORD PTR [ecx-0x6b143ca3]
  415fad:	sub    dl,cl
  415faf:	sbb    al,0x45
  415fb1:	pop    esi
  415fb2:	sbb    eax,0x79f2a34d
  415fb8:	sti    
  415fb9:	add    BYTE PTR [ecx-0x6e483d80],al
  415fbf:	and    eax,0x77eb7546
  415fc4:	pusha  
  415fc5:	push   es
  415fc6:	dec    esi
  415fc7:	lea    ebp,[edi]
  415fc9:	pop    edx
  415fca:	push   es
  415fcb:	mov    eax,ds:0xdd053836
  415fd0:	test   al,0x66
  415fd2:	push   0xee3f4654
  415fd7:	hlt    
  415fd8:	mul    BYTE PTR [edx+edi*1+0x5e]
  415fdc:	mov    DWORD PTR [esi-0xa7b096],edi
  415fe2:	push   ebx
  415fe3:	sahf   
  415fe4:	and    al,0x6a
  415fe6:	cs loop 0x415fb6
  415fe9:	in     al,dx
  415fea:	sbb    DWORD PTR [ecx],ebp
  415fec:	dec    ebx
  415fed:	arpl   WORD PTR [ebx-0x2837e3d8],sp
  415ff3:	or     al,0xc6
  415ff5:	inc    edx
  415ff6:	sub    ecx,esi
  415ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff9:	jno    0x415fd3
  415ffb:	mov    dh,0x20
  415ffd:	sub    eax,0xc81c752c
  416002:	fidivr WORD PTR [edi-0x75771bda]
  416008:	scas   eax,DWORD PTR es:[edi]
  416009:	hlt    
  41600a:	pop    ds
  41600b:	call   0xecda3fba
  416010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416011:	push   ebp
  416012:	push   esi
  416013:	(bad)  
  416014:	ror    DWORD PTR [ebx+0x22],1
  416017:	shl    BYTE PTR ds:0xe7aba5f,cl
  41601d:	cmp    BYTE PTR [ebx+eax*1+0x16],0x26
  416022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416023:	in     al,0xe8
  416025:	out    0x6c,al
  416027:	gs push ds
  416029:	push   ss
  41602a:	mov    ecx,0xaf20fbc3
  41602f:	and    eax,esi
  416031:	cmc    
  416032:	outs   dx,BYTE PTR ds:[esi]
  416033:	xchg   esi,eax
  416034:	fnstsw WORD PTR [ecx]
  416036:	sti    
  416037:	icebp  
  416038:	test   DWORD PTR [edx],0x92a694d6
  41603e:	jns    0x416063
  416040:	xchg   edx,eax
  416041:	test   dh,0x94
  416044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416045:	and    al,0xe6
  416047:	aaa    
  416048:	jg     0x4160ad
  41604a:	push   ebx
  41604b:	stos   DWORD PTR es:[edi],eax
  41604c:	mov    al,ds:0xae3e146e
  416051:	scas   al,BYTE PTR es:[edi]
  416052:	cmp    al,0xfb
  416054:	bound  edx,QWORD PTR [ebx]
  416056:	xchg   dh,al
  416058:	mov    edx,0x1dc9b03f
  41605d:	ins    BYTE PTR es:[edi],dx
  41605e:	out    dx,al
  41605f:	mov    bl,0xc0
  416061:	adc    edi,DWORD PTR ds:0xc7b2ec4e
  416067:	jmp    0xcb431c64
  41606c:	call   0x6516b478
  416071:	and    al,BYTE PTR [ebp+ecx*2+0x1c402ddd]
  416078:	nop
  416079:	mov    dh,0x8
  41607b:	jl     0x416012
  41607d:	pop    ss
  41607e:	jo     0x416083
  416080:	mov    ah,0x9e
  416082:	aad    0x32
  416084:	adc    DWORD PTR ds:0x22488853,ecx
  41608a:	dec    ebp
  41608b:	inc    edx
  41608c:	mov    bl,dl
  41608e:	dec    edx
  41608f:	test   BYTE PTR [edx],al
  416091:	(bad)  
  416092:	rcl    BYTE PTR [esi-0x3],cl
  416095:	cmp    BYTE PTR [ecx-0x3d],al
  416098:	out    dx,eax
  416099:	mov    DWORD PTR ds:0x6c4c63d1,esi
  41609f:	pop    ss
  4160a0:	xchg   esp,eax
  4160a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a2:	sar    BYTE PTR ds:0x9c99c590,1
  4160a8:	inc    ebx
  4160a9:	jb     0x416055
  4160ab:	xor    esp,DWORD PTR [edx+0x77842f41]
  4160b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b2:	into   
  4160b3:	nop
  4160b4:	dec    ebp
  4160b5:	jecxz  0x41604e
  4160b7:	pop    esi
  4160b8:	in     al,0x6c
  4160ba:	or     dl,BYTE PTR [ecx+0x25]
  4160bd:	push   ss
  4160be:	scas   al,BYTE PTR es:[edi]
  4160bf:	sub    esp,DWORD PTR ss:[eax-0x4a82e448]
  4160c6:	in     eax,dx
  4160c7:	dec    edi
  4160c8:	adc    cl,BYTE PTR [ebx-0x29]
  4160cb:	(bad)  
  4160cc:	fld    QWORD PTR [ebp-0x7ae06714]
  4160d2:	cmp    al,0xa4
  4160d4:	or     BYTE PTR [ecx-0x52],dl
  4160d7:	pusha  
  4160d8:	mov    esp,0x31e521d8
  4160dd:	cmp    eax,0x22395281
  4160e2:	in     eax,0x58
  4160e4:	mov    al,BYTE PTR [ebp+0xcef9e1b]
  4160ea:	gs nop
  4160ec:	and    BYTE PTR [eax-0x582e7ff4],bh
  4160f2:	jmp    0xf91b:0xa61c07d7
  4160f9:	mov    ecx,ecx
  4160fb:	and    al,BYTE PTR [ebx+edx*2]
  4160fe:	and    al,0x75
  416100:	push   edi
  416101:	xlat   BYTE PTR ds:[ebx]
  416102:	push   esi
  416103:	dec    ebx
  416104:	(bad)  
  416105:	jo     0x41616d
  416107:	scas   al,BYTE PTR es:[edi]
  416108:	std    
  416109:	mov    ah,0xff
  41610b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41610c:	pop    ds
  41610d:	add    ch,ch
  41610f:	xor    eax,0x6b65072b
  416114:	popa   
  416115:	out    dx,al
  416116:	and    ch,dl
  416118:	jnp    0x41610d
  41611a:	inc    esp
  41611b:	(bad)  
  41611c:	mov    eax,ss:0x6451b5aa
  416122:	je     0x41614e
  416124:	scas   eax,DWORD PTR es:[edi]
  416125:	jno    0x41614e
  416127:	dec    DWORD PTR [ecx]
  416129:	aas    
  41612a:	jns    0x4161a7
  41612c:	mov    dh,0x72
  41612e:	pop    esi
  41612f:	mov    esp,0x4949b412
  416134:	stos   DWORD PTR es:[edi],eax
  416135:	ror    BYTE PTR [eax+0x74093a3d],cl
  41613b:	cmp    al,0x27
  41613d:	shr    cl,cl
  41613f:	test   DWORD PTR [esi-0x469885f6],edx
  416145:	addr16 dec esi
  416147:	jne    0x4161af
  416149:	stos   DWORD PTR es:[edi],eax
  41614a:	pop    ebx
  41614b:	push   ss
  41614c:	pusha  
  41614d:	sbb    dl,BYTE PTR [ebx+0x19]
  416150:	pushf  
  416151:	or     ah,BYTE PTR [eax+0x5d1ed99a]
  416157:	addr16 and edi,esp
  41615a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41615b:	or     BYTE PTR [ebx+0x24],dl
  41615e:	sahf   
  41615f:	and    esi,esi
  416161:	xlat   BYTE PTR ds:[ebx]
  416162:	or     al,0xa3
  416164:	adc    esi,DWORD PTR [ebx+0x737b6892]
  41616a:	(bad)  
  41616c:	pushf  
  41616d:	inc    esi
  41616e:	lods   al,BYTE PTR ds:[esi]
  41616f:	ja     0x4161d6
  416171:	xchg   edx,edx
  416173:	cdq    
  416174:	ins    DWORD PTR es:[edi],dx
  416175:	cmp    ch,cl
  416177:	adc    eax,0xb3767051
  41617c:	add    cl,BYTE PTR [ebp+0x56]
  41617f:	xchg   esp,eax
  416180:	lock sti 
  416182:	xor    eax,0xb064f602
  416187:	jnp    0x4161db
  416189:	jnp    0x4161e3
  41618b:	and    ebx,eax
  41618d:	rcr    DWORD PTR [edx],0xe1
  416190:	fadd   DWORD PTR [eax-0x78138a11]
  416196:	cmp    al,0xf3
  416198:	xor    esi,DWORD PTR [edx-0x6d9f93ec]
  41619e:	outs   dx,BYTE PTR ds:[esi]
  41619f:	xor    eax,0x7ae472ae
  4161a4:	adc    BYTE PTR [eax+ebp*4],dh
  4161a7:	scas   al,BYTE PTR es:[edi]
  4161a8:	inc    edx
  4161a9:	repnz (bad) 
  4161ab:	mov    ch,0x4d
  4161ad:	jns    0x416167
  4161af:	pop    ds
  4161b0:	inc    ebp
  4161b1:	pop    ebp
  4161b2:	call   0x30878792
  4161b7:	pop    esi
  4161b8:	mov    al,ds:0xfc6ad7e6
  4161bd:	int    0x27
  4161bf:	lea    edi,[ebx+ebp*2]
  4161c2:	sbb    esi,DWORD PTR [eax-0x7dd54461]
  4161c8:	les    edx,FWORD PTR [edx+0x74947a46]
  4161ce:	fwait
  4161cf:	mov    ds:0x8733f974,eax
  4161d4:	imul   ecx,DWORD PTR [edi-0x6b121fb7],0x65eb3cba
  4161de:	loopne 0x416189
  4161e0:	mov    bh,0xe1
  4161e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e3:	jns    0x41622f
  4161e5:	daa    
  4161e6:	push   es
  4161e7:	and    DWORD PTR [esi+0xf],0x9fb8820e
  4161ee:	das    
  4161ef:	mov    al,ds:0xe7a0df0
  4161f4:	fs xor DWORD PTR fs:[eax-0x54c518b5],edi
  4161fc:	ficom  DWORD PTR [edx+ebp*8]
  4161ff:	sub    DWORD PTR [edx-0x36],edx
  416202:	xchg   ebx,eax
  416203:	mov    es,ebp
  416205:	popf   
  416206:	pop    ds
  416207:	adc    DWORD PTR [edi+0x36],ebx
  41620a:	stos   DWORD PTR es:[edi],eax
  41620b:	add    BYTE PTR [esi+0x64a95936],bl
  416211:	jle    0x416265
  416213:	into   
  416214:	inc    esi
  416215:	je     0x4161a2
  416217:	adc    DWORD PTR [esi],esp
  416219:	bound  ebp,QWORD PTR fs:[edi]
  41621c:	aas    
  41621d:	mov    es,eax
  41621f:	jmp    0x416227
  416221:	pusha  
  416222:	jns    0x416258
  416224:	jg     0x41626b
  416226:	xor    bh,bl
  416228:	gs mov ebp,0x17643747
  41622e:	cmp    bh,BYTE PTR [eax-0x6ca8cdcc]
  416234:	ficom  DWORD PTR [esi]
  416236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416237:	xlat   BYTE PTR ds:[ebx]
  416238:	xchg   edi,eax
  416239:	out    dx,al
  41623a:	jmp    0x4161f4
  41623c:	mov    edi,0x2dcfc13d
  416241:	jmp    0x6487:0x982f50c1
  416248:	je     0x416242
  41624a:	mov    cl,0x22
  41624c:	mov    edi,0x799657af
  416251:	mov    al,ds:0x7b216d9e
  416256:	out    0xa3,al
  416258:	push   ebx
  416259:	in     al,0x9b
  41625b:	(bad)  
  41625c:	fcmovnu st,st(0)
  41625e:	daa    
  41625f:	push   edi
  416260:	jp     0x416299
  416262:	lods   al,BYTE PTR ds:[esi]
  416263:	mov    esi,DWORD PTR [esi+0x24f66c45]
  416269:	lods   al,BYTE PTR ds:[esi]
  41626a:	sub    DWORD PTR [ebp+0x7c],eax
  41626d:	gs mov cl,0x99
  416270:	inc    esp
  416271:	scas   eax,DWORD PTR es:[edi]
  416272:	unpcklps xmm3,XMMWORD PTR [esi-0x4]
  416276:	jmp    0xb60f:0xc09ff471
  41627d:	adc    eax,0xb9de1c0c
  416282:	sbb    ebp,0x69
  416285:	fidiv  DWORD PTR [edi+0x6c3738e4]
  41628b:	test   eax,0x9c659209
  416290:	jb     0x41623a
  416292:	test   eax,0xab0242e5
  416297:	push   cs
  416298:	xchg   edi,eax
  416299:	mov    edx,0xac34cc32
  41629e:	mov    eax,0x8bb440c0
  4162a3:	and    eax,0x13ff2901
  4162a8:	mov    ebx,0x599043c1
  4162ad:	lods   al,BYTE PTR ds:[esi]
  4162ae:	adc    DWORD PTR [ecx-0x6d],edi
  4162b1:	shl    DWORD PTR [eax-0x20],0xf6
  4162b5:	test   BYTE PTR ds:0x284a10d9,al
  4162bb:	sub    eax,0xdc4c28e8
  4162c0:	mov    eax,ds:0xb8ad5ec5
  4162c5:	sub    edx,edi
  4162c7:	or     DWORD PTR [esp+eiz*8-0x2cb34d50],0x38c836cc
  4162d2:	in     eax,dx
  4162d3:	jne    0x41626b
  4162d5:	int3   
  4162d6:	cs jg  0x416338
  4162d9:	gs das 
  4162db:	nop
  4162dc:	jmp    0x41628d
  4162de:	call   0x6cea:0x74fce395
  4162e5:	(bad)  
  4162e6:	cld    
  4162e7:	test   al,0x6a
  4162e9:	push   cs
  4162ea:	adc    cl,BYTE PTR [eax+0x168265b3]
  4162f0:	neg    BYTE PTR [edi]
  4162f2:	mov    al,ds:0x4accd245
  4162f7:	dec    eax
  4162f8:	pop    esp
  4162f9:	dec    esp
  4162fa:	xchg   esi,eax
  4162fb:	into   
  4162fc:	cmp    edi,DWORD PTR [edi]
  4162fe:	rcl    DWORD PTR [ebx+esi*4],0x9c
  416302:	jp     0x416344
  416304:	sub    BYTE PTR [edx+0xba0e128],0xf5
  41630b:	push   ds
  41630c:	cmp    eax,0x17e160c
  416311:	sub    ebx,DWORD PTR [ebp-0x69]
  416314:	loope  0x416300
  416316:	scas   eax,DWORD PTR es:[edi]
  416317:	pop    esi
  416318:	add    esi,edx
  41631a:	xor    eax,0x869dfdbb
  41631f:	sbb    ebx,DWORD PTR [ebp+0x5a]
  416322:	ja     0x4162df
  416324:	lea    esi,[esi]
  416326:	dec    esp
  416327:	(bad)  
  416328:	pop    ebx
  416329:	out    dx,eax
  41632a:	adc    DWORD PTR [eax-0x36],edx
  41632d:	and    BYTE PTR [esi],dh
  41632f:	adc    BYTE PTR [ebp+0x1c],dl
  416332:	cdq    
  416333:	loop   0x4162ee
  416335:	push   es
  416336:	add    edx,0x36
  416339:	scas   eax,DWORD PTR es:[edi]
  41633a:	sbb    al,0x23
  41633c:	add    DWORD PTR ds:0xae92833b,0x5408bb93
  416346:	sbb    al,dl
  416348:	xor    edi,eax
  41634a:	retf   0x5dfa
  41634d:	adc    BYTE PTR [ecx-0x13],dl
  416350:	cld    
  416351:	adc    BYTE PTR [esi],0x98
  416354:	jo     0x4162d6
  416356:	pop    edi
  416357:	adc    BYTE PTR [edx+edx*8+0x63],0x56
  41635c:	outs   dx,DWORD PTR ds:[esi]
  41635d:	and    DWORD PTR [ecx],esp
  41635f:	inc    eax
  416360:	shl    DWORD PTR [esp+edi*1],cl
  416363:	sar    DWORD PTR [eax+0x8],1
  416366:	(bad)  
  416368:	cli    
  416369:	push   es
  41636a:	imul   esi,DWORD PTR [ebx-0x16],0xd23753aa
  416371:	imul   ecx,ecx,0xfffffff3
  416374:	mov    bl,0xd5
  416376:	mov    al,0xf7
  416378:	ss mov eax,0x97ab2a76
  41637e:	test   eax,0x45a1e58
  416383:	xor    DWORD PTR [ebx+ebx*4],eax
  416386:	inc    eax
  416387:	sub    dh,ah
  416389:	pop    ds
  41638a:	dec    ecx
  41638b:	push   ebx
  41638c:	xchg   edi,eax
  41638d:	int    0xcc
  41638f:	les    eax,FWORD PTR [edx-0xb]
  416392:	dec    ebx
  416393:	call   0xa6824357
  416398:	in     al,dx
  416399:	mov    al,ds:0xd9b579bc
  41639e:	sub    al,0x62
  4163a0:	dec    ebp
  4163a1:	pop    ecx
  4163a2:	out    dx,eax
  4163a3:	loopne 0x4163b2
  4163a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a6:	aad    0x4b
  4163a8:	or     eax,0xaa782009
  4163ad:	or     DWORD PTR [ebp+0x17],eax
  4163b0:	mov    BYTE PTR [esi+0x24e9236c],dh
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	addr16 sti 
  4165c6:	or     DWORD PTR [eax+0x43b1a142],ecx
  4165cc:	nop
  4165cd:	cmp    dl,BYTE PTR [ebx+0x6e]
  4165d0:	sub    ebx,esp
  4165d2:	sti    
  4165d3:	mov    eax,0x1
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x7a086c91
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebp-0x53fffffd],ch
  419e8a:	or     eax,0x2c64e684
  419e8f:	mov    ah,0xf3
  419e91:	mov    cl,0x12
  419e93:	fild   DWORD PTR [ecx]
  419e95:	xor    eax,0xf28a6c8e
  419e9a:	mov    ecx,DWORD PTR [ecx+0x46]
  419e9d:	mov    dh,0x46
  419e9f:	loope  0x419e29
  419ea1:	push   esi
  419ea2:	pop    eax
  419ea3:	or     al,0xed
  419ea5:	lea    esp,[eax+0x53]
  419ea8:	xor    BYTE PTR [esi+ecx*2-0x12],ch
  419eac:	lods   al,BYTE PTR ds:[esi]
  419ead:	lahf   
  419eae:	dec    ebx
  419eaf:	mov    esi,DWORD PTR [ecx-0x4da8505b]
  419eb5:	clc    
  419eb6:	push   ds
  419eb7:	and    BYTE PTR [ecx-0x559a8806],bl
  419ebd:	or     eax,0x30b19351
  419ec2:	pop    edi
  419ec3:	imul   ecx,DWORD PTR [ecx-0x52],0xffffffb6
  419ec7:	and    al,0xb5
  419ec9:	push   es
  419eca:	scas   al,BYTE PTR es:[edi]
  419ecb:	sbb    esp,esp
  419ecd:	mov    dh,0xba
  419ecf:	(bad)  
  419ed0:	(bad)  
  419ed1:	call   0x95a35e58
  419ed6:	call   0xc7ed:0x4f80f38b
  419edd:	fbstp  TBYTE PTR [ebx-0x2d]
  419ee0:	pop    edi
  419ee1:	out    0x42,eax
  419ee3:	aas    
  419ee4:	repnz push esi
  419ee6:	adc    al,0x5
  419ee8:	ror    BYTE PTR [esi],cl
  419eea:	adc    al,0xbf
  419eec:	sbb    DWORD PTR [esi-0x22855742],esi
  419ef2:	hlt    
  419ef3:	pusha  
  419ef4:	adc    DWORD PTR [eax-0x7913a2e8],esi
  419efa:	pop    ds
  419efb:	repnz mov al,0xf0
  419efe:	cmp    al,0xf3
  419f00:	push   ds
  419f01:	mov    ah,0x9c
  419f03:	data16 outs dx,BYTE PTR ds:[esi]
  419f05:	ss ins DWORD PTR es:[edi],dx
  419f07:	mov    esi,0xb003d88a
  419f0c:	(bad)  
  419f0d:	jmp    0xb2ebcb4c
  419f12:	inc    ecx
  419f13:	inc    ecx
  419f14:	cmp    ch,BYTE PTR [edi+0x1a52087]
  419f1a:	lods   eax,DWORD PTR ds:[esi]
  419f1b:	and    eax,0xc1c0325f
  419f20:	fdivp  st(5),st
  419f22:	pushf  
  419f23:	(bad)  
  419f24:	xor    al,0x19
  419f26:	fnstcw WORD PTR [ebp-0x7f020ace]
  419f2c:	lock idiv DWORD PTR [eax]
  419f2f:	call   0xb744eeec
  419f34:	(bad)  
  419f35:	adc    DWORD PTR [ebx],ebp
  419f37:	mov    ebp,0x5af32937
  419f3c:	test   al,0x4b
  419f3e:	ins    DWORD PTR es:[edi],dx
  419f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f40:	cld    
  419f41:	les    esp,FWORD PTR ds:0xb8078e5b
  419f47:	or     dh,cl
  419f49:	into   
  419f4a:	mov    dl,0xdf
  419f4c:	jne    0x419ef5
  419f4e:	test   BYTE PTR [ebx+0x7e],dh
  419f51:	sar    BYTE PTR [edi+0x54c37046],0xb6
  419f58:	sbb    bh,bl
  419f5a:	add    dh,BYTE PTR [esi+0x3c]
  419f5d:	les    ecx,FWORD PTR [edi]
  419f5f:	std    
  419f60:	inc    edi
  419f61:	test   eax,0xb89dd53b
  419f66:	jecxz  0x419f5e
  419f68:	addr16 jg 0x419f12
  419f6b:	arpl   WORD PTR [ebx-0x6d],si
  419f6e:	imul   esi,ebp,0x64806a29
  419f74:	inc    ebp
  419f75:	cmp    al,0xe5
  419f77:	not    dh
  419f79:	gs mov ebx,0xa0c9d19e
  419f7f:	gs pop edi
  419f81:	mov    edi,0xac5e712d
  419f86:	jecxz  0x419fd5
  419f88:	lahf   
  419f89:	pop    edx
  419f8a:	push   ebp
  419f8b:	mov    eax,ds:0xe5185ce9
  419f90:	div    DWORD PTR [eax+ebp*2]
  419f93:	jp     0x419f4f
  419f95:	(bad)  
  419f96:	cmp    BYTE PTR [ebp+0x50ca14b0],dh
  419f9c:	inc    edi
  419f9d:	adc    eax,DWORD PTR [ecx+0xb]
  419fa0:	pop    es
  419fa1:	(bad)  
  419fa2:	hlt    
  419fa3:	xor    DWORD PTR [edx-0x72],ebx
  419fa6:	or     cl,bh
  419fa8:	(bad)  
  419fa9:	(bad)  
  419fab:	cmp    BYTE PTR [eax],ah
  419fad:	xchg   DWORD PTR [ecx],ebp
  419faf:	test   al,0x90
  419fb1:	scas   al,BYTE PTR es:[edi]
  419fb2:	mov    ebx,0x8543330
  419fb7:	inc    eax
  419fb8:	shl    BYTE PTR [esi],cl
  419fba:	and    dl,bh
  419fbc:	xchg   ecx,eax
  419fbd:	shl    ebp,cl
  419fbf:	les    eax,FWORD PTR [edi-0x60]
  419fc2:	lods   eax,DWORD PTR ds:[esi]
  419fc3:	(bad)  
  419fc4:	idiv   BYTE PTR [ecx+0x7e565b2]
  419fca:	jns    0x41a00b
  419fcc:	arpl   WORD PTR [ebx],ax
  419fce:	(bad)  
  419fcf:	cld    
  419fd0:	inc    eax
  419fd1:	jmp    0x419fd7
  419fd3:	and    eax,DWORD PTR ds:0xad29e797
  419fd9:	ret    0xc743
  419fdc:	div    ecx
  419fde:	or     BYTE PTR [edi+0x91608fd],0x83
  419fe5:	add    al,0x77
  419fe7:	cld    
  419fe8:	or     al,ch
  419fea:	jecxz  0x41a066
  419fec:	(bad)  
  419fed:	out    0xac,al
  419fef:	and    eax,0x440527fb
  419ff4:	and    BYTE PTR [ebx+0x79],dl
  419ff7:	sub    DWORD PTR [edi-0x57],edx
  419ffa:	jb     0x41a02d
  419ffc:	push   edx
  419ffd:	fistp  WORD PTR [edx+ecx*2-0x6fa19c63]
  41a004:	mov    cl,0x7e
  41a006:	retf   
  41a007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a008:	and    edi,DWORD PTR [ebx+0x16]
  41a00b:	outs   dx,DWORD PTR ds:[esi]
  41a00c:	pop    ds
  41a00d:	or     al,0x6b
  41a00f:	push   ds
  41a010:	push   0xffffffdb
  41a012:	mov    BYTE PTR [ebx+edx*1],bh
  41a015:	fcom   DWORD PTR [esi+0x1c76bedd]
  41a01b:	sbb    dl,al
  41a01d:	in     al,dx
  41a01e:	fadd   DWORD PTR [esi]
  41a020:	and    BYTE PTR [edx+0x7c221319],ch
  41a026:	cmp    al,0x4
  41a028:	add    esp,0x2f15a4ff
  41a02e:	repz mov esi,0xde53e1e6
  41a034:	jno    0x419fef
  41a036:	sub    DWORD PTR [eax-0x5d],edx
  41a039:	or     esp,0x78ff6c2f
  41a03f:	xchg   ebp,eax
  41a040:	pop    ds
  41a041:	push   0xffffffe2
  41a043:	gs xchg esp,eax
  41a045:	push   esi
  41a046:	mov    cl,0x8d
  41a048:	xor    BYTE PTR [esp+esi*8+0x56],bl
  41a04c:	int    0x50
  41a04e:	inc    ebx
  41a04f:	in     eax,0x6b
  41a051:	pop    esp
  41a052:	jg     0x41a05f
  41a054:	sti    
  41a055:	(bad)  
  41a056:	stos   BYTE PTR es:[edi],al
  41a057:	pop    ds
  41a058:	es retf 
  41a05a:	mov    ds:0xf6ac74e6,eax
  41a05f:	inc    esp
  41a060:	mov    eax,DWORD PTR [eax]
  41a062:	or     al,0xc4
  41a064:	add    bl,BYTE PTR cs:[eax+0x4b]
  41a068:	xchg   edi,eax
  41a069:	push   edx
  41a06a:	xchg   esp,eax
  41a06b:	es mov ch,0xa6
  41a06e:	push   eax
  41a06f:	lahf   
  41a070:	adc    BYTE PTR [ecx+0x3e4bfb9b],0x73
  41a077:	mov    cl,0x94
  41a079:	ja     0x41a076
  41a07b:	retf   
  41a07c:	push   cs
  41a07d:	inc    esp
  41a07e:	out    0x4f,al
  41a080:	xor    ch,dh
  41a082:	dec    eax
  41a083:	shl    DWORD PTR [edx+0x59],0x20
  41a087:	fnstsw WORD PTR [edx-0x3d]
  41a08a:	xchg   edx,eax
  41a08b:	das    
  41a08c:	and    dl,BYTE PTR [edx-0x5c]
  41a08f:	inc    ecx
  41a090:	jno    0x41a0ec
  41a092:	pop    eax
  41a093:	sub    ah,BYTE PTR [edi+0x51]
  41a096:	std    
  41a097:	ja     0x41a01e
  41a099:	pusha  
  41a09a:	sar    BYTE PTR ds:0x28517c16,cl
  41a0a0:	cdq    
  41a0a1:	sbb    DWORD PTR [ecx+0x5a],0x57480176
  41a0a8:	push   esi
  41a0a9:	jl     0x41a0c0
  41a0ab:	pop    eax
  41a0ac:	add    al,0x6f
  41a0ae:	das    
  41a0af:	out    dx,al
  41a0b0:	pop    esi
  41a0b1:	xchg   esi,eax
  41a0b2:	daa    
  41a0b3:	lods   eax,DWORD PTR ds:[esi]
  41a0b4:	and    dh,0x3a
  41a0b7:	xchg   esi,eax
  41a0b8:	pop    ss
  41a0b9:	or     eax,0x2ec36b81
  41a0be:	sahf   
  41a0bf:	xchg   esi,eax
  41a0c0:	into   
  41a0c1:	into   
  41a0c2:	sbb    eax,0x6d337022
  41a0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c8:	jne    0x41a0a2
  41a0ca:	rcr    BYTE PTR [ebx+0x574c5a4],0xa4
  41a0d1:	aas    
  41a0d2:	into   
  41a0d3:	push   0xfffffffe
  41a0d5:	sbb    eax,0xda83e70c
  41a0da:	maxps  xmm1,XMMWORD PTR [edi]
  41a0dd:	outs   dx,DWORD PTR ds:[esi]
  41a0de:	jmp    0x55ea:0xe9adda75
  41a0e5:	clc    
  41a0e6:	hlt    
  41a0e7:	hlt    
  41a0e8:	jb     0x41a0ad
  41a0ea:	cwde   
  41a0eb:	pop    ebx
  41a0ec:	fidivr DWORD PTR ds:0x77c5d94
  41a0f2:	ins    BYTE PTR es:[edi],dx
  41a0f3:	pop    ss
  41a0f4:	push   0x52cdf27e
  41a0f9:	add    ebx,DWORD PTR [edx-0x49a39a7f]
  41a0ff:	inc    esp
  41a100:	cmovl  ecx,DWORD PTR [eax+0x64]
  41a104:	ja     0x41a095
  41a106:	push   ss
  41a107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a108:	push   ecx
  41a109:	stos   DWORD PTR es:[edi],eax
  41a10a:	cdq    
  41a10b:	stos   DWORD PTR es:[edi],eax
  41a10c:	and    bh,BYTE PTR [ecx-0x2f]
  41a10f:	and    bh,BYTE PTR [ebx-0x16]
  41a112:	stc    
  41a113:	pusha  
  41a114:	test   DWORD PTR [esi+0x6002cfe0],0x56f539ec
  41a11e:	inc    ebp
  41a11f:	pop    ds
  41a120:	call   0x3f0e5a44
  41a125:	jecxz  0x41a17b
  41a127:	scas   al,BYTE PTR es:[edi]
  41a128:	lock fstp QWORD PTR [edi+eiz*2]
  41a12c:	xchg   esp,eax
  41a12d:	push   0x4d17d3c8
  41a132:	or     al,0x2c
  41a134:	sub    DWORD PTR [ebp-0x5b],ecx
  41a137:	mov    al,ds:0x73bba427
  41a13c:	cmp    BYTE PTR [ebp+0x77],0x7f
  41a140:	and    eax,0x97d02d7c
  41a145:	jb     0x41a14b
  41a147:	jns    0x41a0f1
  41a149:	(bad)
  41a14c:	leave  
  41a14d:	xchg   ebp,eax
  41a14e:	outs   dx,DWORD PTR ds:[esi]
  41a14f:	mov    ds:0x73ac9f9a,eax
  41a154:	leave  
  41a155:	push   cs
  41a156:	mov    edi,DWORD PTR [ebx]
  41a158:	call   0x376b:0x14286f73
  41a15f:	daa    
  41a160:	stos   DWORD PTR es:[di],eax
  41a162:	xchg   edi,eax
  41a163:	mov    esp,0x18907e91
  41a168:	sub    bh,bh
  41a16a:	mov    ebp,ds
  41a16c:	add    cl,ah
  41a16e:	or     ecx,ecx
  41a170:	loope  0x41a1ca
  41a172:	enter  0xc261,0x9f
  41a176:	out    dx,al
  41a177:	dec    esp
  41a178:	mov    dl,0x21
  41a17a:	mov    cl,cl
  41a17c:	pop    ds
  41a17d:	lods   eax,DWORD PTR ds:[esi]
  41a17e:	adc    BYTE PTR [edx+0x1e],al
  41a181:	fsub   DWORD PTR [esp+ebx*2-0x22473362]
  41a188:	or     esi,DWORD PTR [esi+0x8452be4]
  41a18e:	in     eax,dx
  41a18f:	pusha  
  41a190:	arpl   WORD PTR [ecx],ax
  41a192:	shr    BYTE PTR ds:0xd6db5f61,cl
  41a198:	or     ebx,DWORD PTR [esi]
  41a19a:	les    edi,FWORD PTR [ebp+eax*2+0x1f]
  41a19e:	cwde   
  41a19f:	call   FWORD PTR [esi+0x4533ea1f]
  41a1a5:	add    eax,0x9483558a
  41a1aa:	mov    ebx,0xf652e21
  41a1af:	dec    ecx
  41a1b0:	fs fwait
  41a1b2:	adc    eax,0xacce6a01
  41a1b7:	mov    al,ds:0xd4b883dc
  41a1bc:	scas   al,BYTE PTR es:[edi]
  41a1bd:	test   DWORD PTR [edx+edi*2-0x32cc7d2e],eax
  41a1c4:	pusha  
  41a1c5:	leave  
  41a1c6:	fdiv   st,st(3)
  41a1c8:	out    dx,eax
  41a1c9:	adc    eax,0x8a4ce839
  41a1ce:	xchg   BYTE PTR ds:0x8da13301,dh
  41a1d4:	cwde   
  41a1d5:	js     0x41a1ce
  41a1d7:	ret    0xd2de
  41a1da:	repnz imul ebp,edx,0xffffffba
  41a1de:	pop    edx
  41a1df:	xor    eax,0x2d72d03
  41a1e4:	outs   dx,DWORD PTR ds:[esi]
  41a1e5:	xchg   DWORD PTR [edx+0x33],edx
  41a1e8:	xor    eax,esi
  41a1ea:	ret    0x6691
  41a1ed:	cmp    eax,0x49598612
  41a1f2:	xor    eax,ebx
  41a1f4:	add    al,0xd5
  41a1f6:	mov    dl,0x68
  41a1f8:	data16 ja 0x41a22a
  41a1fb:	push   sp
  41a1fd:	add    eax,0x610e519f
  41a202:	add    BYTE PTR [ecx+0x77db4763],cl
  41a208:	lods   al,BYTE PTR ds:[esi]
  41a209:	mov    dl,0x82
  41a20b:	mov    al,ds:0xc49acf47
  41a210:	(bad)  
  41a211:	lock dec esp
  41a213:	test   eax,0xff775493
  41a218:	xchg   ebx,eax
  41a219:	add    edi,ebx
  41a21b:	inc    eax
  41a21c:	fdivr  QWORD PTR [edi-0x4a]
  41a21f:	xor    ch,BYTE PTR [ebx]
  41a221:	sbb    DWORD PTR [edi-0x38],eax
  41a224:	in     eax,0x74
  41a226:	inc    esp
  41a227:	dec    edi
  41a228:	stos   DWORD PTR es:[edi],eax
  41a229:	rcr    BYTE PTR [edi+0x1f7ce1df],1
  41a22f:	loope  0x41a275
  41a231:	and    eax,0x88d40822
	...
  41a23e:	add    BYTE PTR [eax],al
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	mov    ch,0x36
  41a24f:	rol    BYTE PTR [edx+edx*1-0x52fffee0],1
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    dl,al
  41a25a:	jle    0x41a1ef
  41a25c:	fnstcw WORD PTR [eax-0x3d]
  41a25f:	mov    cs,WORD PTR [edi]
  41a261:	out    dx,al
  41a262:	sbb    DWORD PTR [bp-0x1d],ecx
  41a266:	xchg   ecx,eax
  41a267:	xchg   BYTE PTR [esi],al
  41a269:	sahf   
  41a26a:	std    
  41a26b:	mov    ecx,0x1f27cd06
  41a270:	mov    esp,0xd77cfd31
  41a275:	inc    ebx
  41a276:	rol    ch,0x74
  41a279:	pop    edi
  41a27a:	jg     0x41a2cf
  41a27c:	sub    eax,0x9e569f12
  41a281:	inc    ebx
  41a282:	adc    dh,BYTE PTR [edi+0x34]
  41a285:	pop    ebx
  41a286:	scas   al,BYTE PTR es:[edi]
  41a287:	(bad)  
  41a288:	dec    esp
  41a289:	mov    dl,0xab
  41a28b:	add    dl,BYTE PTR [edi]
  41a28d:	aaa    
  41a28e:	add    eax,0x76f7413c
  41a293:	cmp    DWORD PTR [edi+0x33],0x41
  41a297:	or     ebx,DWORD PTR [ecx]
  41a299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a29a:	scas   al,BYTE PTR es:[edi]
  41a29b:	fdivrp st(2),st
  41a29d:	add    eax,DWORD PTR [ebp-0x5a]
  41a2a0:	jbe    0x41a2d0
  41a2a2:	ss mov ebx,0x1e52a6e0
  41a2a8:	pop    edx
  41a2a9:	ret    0x23f0
  41a2ac:	test   DWORD PTR [ebx-0x17ca57e1],eax
  41a2b2:	loope  0x41a332
  41a2b4:	push   ds
  41a2b5:	sub    DWORD PTR [ebx],ecx
  41a2b7:	dec    ebx
  41a2b8:	and    cl,BYTE PTR [eax+0x23d516c8]
  41a2be:	pop    ebx
  41a2bf:	int    0x48
  41a2c1:	cmp    BYTE PTR [esi+esi*2],bh
  41a2c4:	shl    dh,0x4a
  41a2c7:	lds    ebx,FWORD PTR [edx+0x5b7a300f]
  41a2cd:	jbe    0x41a32f
  41a2cf:	gs sti 
  41a2d1:	cwde   
  41a2d2:	imul   eax,edi,0xffffffa6
  41a2d5:	call   FWORD PTR [edx+0x394cb66b]
  41a2db:	call   0x3582:0x1dbf895f
  41a2e2:	mov    edx,0xf6c110d1
  41a2e7:	adc    edi,DWORD PTR [edx]
  41a2e9:	dec    esi
  41a2ea:	sbb    al,0xcf
  41a2ec:	scas   al,BYTE PTR es:[edi]
  41a2ed:	mov    cl,0x57
  41a2ef:	mov    edx,0x6507ecd8
  41a2f4:	or     al,BYTE PTR [ebx]
  41a2f6:	or     DWORD PTR [ecx+0x73],0x72
  41a2fa:	xchg   esi,eax
  41a2fb:	out    0xf6,eax
  41a2fd:	out    dx,eax
  41a2fe:	xchg   edx,eax
  41a2ff:	retf   0x287b
  41a302:	sbb    BYTE PTR [edx],bh
  41a304:	cld    
  41a305:	push   0xffffff82
  41a307:	hlt    
  41a308:	mov    dl,0x7a
  41a30a:	xchg   ecx,ecx
  41a30c:	xchg   ebx,eax
  41a30d:	sub    DWORD PTR [ecx+0x774796bb],ebp
  41a313:	mov    esi,0x3f40a345
  41a318:	push   0xc229a558
  41a31d:	cs push edi
  41a31f:	add    DWORD PTR [ebp-0x7874e070],0xf
  41a326:	jl     0x41a2d5
  41a328:	adc    eax,0xbcae6414
  41a32d:	cbw    
  41a32f:	mov    esi,0xb8ae1947
  41a334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a335:	enter  0x7667,0x8d
  41a339:	adc    ebx,DWORD PTR [ebp-0x71]
  41a33c:	lahf   
  41a33d:	mov    bh,0xf3
  41a33f:	call   0x50426991
  41a344:	pop    es
  41a345:	lods   eax,DWORD PTR ds:[esi]
  41a346:	into   
  41a347:	xor    edi,DWORD PTR [ecx-0x438d0e05]
  41a34d:	aad    0x2c
  41a34f:	in     eax,0x5d
  41a351:	je     0x41a319
  41a353:	cwde   
  41a354:	jb     0x41a34e
  41a356:	fist   WORD PTR [eax]
  41a358:	int    0x14
  41a35a:	arpl   WORD PTR [esi-0x19],sp
  41a35d:	push   ecx
  41a35e:	loop   0x41a339
  41a360:	cmp    dh,dh
  41a362:	inc    DWORD PTR [ebp-0x75ac9e14]
  41a368:	je     0x41a34c
  41a36a:	pop    es
  41a36b:	mov    eax,ds:0x4f4eaa35
  41a370:	mov    edx,0x40148c41
  41a375:	push   ss
  41a376:	repz xor BYTE PTR [ecx+0x143a3788],bh
  41a37d:	stos   BYTE PTR es:[edi],al
  41a37e:	jo     0x41a3b5
  41a380:	sbb    al,0x90
  41a382:	mov    al,0xdb
  41a384:	sbb    al,0x56
  41a386:	cld    
  41a387:	pop    ds
  41a388:	mov    WORD PTR [edi+ecx*8+0xc],ds
  41a38c:	and    BYTE PTR [ebp-0x4e5e562c],dl
  41a392:	mov    dl,0x6e
  41a394:	mov    BYTE PTR [edx+0x7],bh
  41a397:	scas   al,BYTE PTR es:[edi]
  41a398:	jmp    0x1e16:0xdfb836b5
  41a39f:	pop    ss
  41a3a0:	outs   dx,BYTE PTR ds:[esi]
  41a3a1:	sbb    esi,DWORD PTR [edi-0xf]
  41a3a4:	or     al,0x97
  41a3a6:	or     ebp,0xffffff9a
  41a3a9:	xchg   edi,esp
  41a3ab:	retf   0x4597
  41a3ae:	and    ecx,DWORD PTR [ebx]
  41a3b0:	pop    es
  41a3b1:	retf   0x4073
  41a3b4:	sub    eax,0x8f6c200
  41a3b9:	ins    DWORD PTR es:[edi],dx
  41a3ba:	lds    edx,FWORD PTR [eax+ebx*1]
  41a3bd:	imul   esi,DWORD PTR [eax-0x632af4cd],0xb7d9fac8
  41a3c7:	sbb    dh,BYTE PTR [esi]
  41a3c9:	shl    BYTE PTR [ebp+0x48],cl
  41a3cc:	ins    BYTE PTR es:[edi],dx
  41a3cd:	les    eax,FWORD PTR [ebx+0x5a]
  41a3d0:	test   DWORD PTR [edi],esi
  41a3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d3:	xor    edi,eax
  41a3d5:	lds    esi,FWORD PTR [eax+0x6b51463e]
  41a3db:	jnp    0x41a42d
  41a3dd:	cwde   
  41a3de:	clc    
  41a3df:	cli    
  41a3e0:	loopne 0x41a3b7
  41a3e2:	mov    al,0xbd
  41a3e4:	cmp    eax,0x23aaa45f
  41a3e9:	cmp    DWORD PTR [eax],0x52
  41a3ec:	add    ch,dl
  41a3ee:	inc    esi
  41a3ef:	ret    
  41a3f0:	xor    eax,0x7525af7c
  41a3f5:	adc    DWORD PTR [edi+0x3c],eax
  41a3f8:	aaa    
  41a3f9:	push   ebx
  41a3fa:	call   0x48a6:0x5040814
  41a401:	daa    
  41a402:	and    DWORD PTR ds:0x96c7f4ce,ebx
  41a408:	ret    
  41a409:	repnz hlt 
  41a40b:	in     eax,0x9d
  41a40d:	add    eax,0xead99c39
  41a412:	arpl   WORD PTR [esi-0x3010292f],sp
  41a418:	js     0x41a459
  41a41a:	and    DWORD PTR [esi+eiz*1],eax
  41a41d:	inc    ebx
  41a41e:	sbb    DWORD PTR [ebx],ebx
  41a420:	dec    ecx
  41a421:	test   al,0x1f
  41a423:	and    al,0x6a
  41a425:	arpl   WORD PTR [ebx-0x38],ax
  41a428:	sub    bh,BYTE PTR [ebx+0x1f2fedff]
  41a42e:	adc    al,0x95
  41a430:	inc    esi
  41a431:	loopne 0x41a4af
  41a433:	push   cs
  41a434:	jle    0x41a3cc
  41a436:	sub    al,0xd0
  41a438:	lahf   
  41a439:	(bad)  
  41a43a:	out    dx,al
  41a43b:	sbb    ecx,ecx
  41a43d:	mov    ebx,0x7abd91
  41a442:	mov    al,ds:0x69dd550a
  41a447:	sub    BYTE PTR [ebx],dh
  41a449:	cli    
  41a44a:	mov    ds:0xe5fcfd96,eax
  41a44f:	rol    BYTE PTR [ebx-0x8a4a8b7],1
  41a455:	cli    
  41a456:	in     eax,dx
  41a457:	dec    DWORD PTR [ebp-0x3857c503]
  41a45d:	(bad)  
  41a45e:	mul    BYTE PTR [ebx+0x13]
  41a461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a462:	lahf   
  41a463:	(bad)  
  41a464:	ror    BYTE PTR ds:[ebx],cl
  41a467:	sbb    al,0x48
  41a469:	in     eax,dx
  41a46a:	je     0x41a4a2
  41a46c:	fsin   
  41a46e:	imul   esp,DWORD PTR [ebx+0x3c],0xa9992579
  41a475:	mov    ebp,0x64bb5db5
  41a47a:	test   al,0x77
  41a47c:	push   ebx
  41a47d:	bound  esp,QWORD PTR [edx+0x7b]
  41a480:	rol    BYTE PTR [edi-0x172dff71],1
  41a486:	mov    eax,ds:0x43e3f5d0
  41a48b:	mov    cl,0xd5
  41a48d:	sysret 
  41a48f:	(bad)  
  41a490:	mov    al,0x77
  41a492:	enter  0xa39a,0xfa
  41a496:	cmp    al,0xc6
  41a498:	jo     0x41a517
  41a49a:	sub    esi,edx
  41a49c:	push   edx
  41a49d:	sbb    edi,DWORD PTR [eax+0x41]
  41a4a0:	or     al,0x7a
  41a4a2:	daa    
  41a4a3:	dec    edi
  41a4a4:	or     edx,edx
  41a4a6:	add    BYTE PTR [ebx-0x26],0x52
  41a4aa:	ret    0xd568
  41a4ad:	or     BYTE PTR [ecx+0x55],dl
  41a4b0:	adc    eax,0xfa9d9e58
  41a4b5:	out    0xef,eax
  41a4b7:	mov    eax,ds:0x97310fab
  41a4bc:	ret    0xe41
  41a4bf:	shl    BYTE PTR [ebx],cl
  41a4c1:	ds jmp 0xb350:0x832ddc9b
  41a4c9:	das    
  41a4ca:	jmp    0xceee:0xc96a4551
  41a4d1:	ja     0x41a531
  41a4d3:	adc    BYTE PTR [eax+0x53],bl
  41a4d6:	inc    ebp
  41a4d7:	icebp  
  41a4d8:	les    ecx,FWORD PTR [ebp+0x4]
  41a4db:	push   ecx
  41a4dc:	mul    DWORD PTR [eax-0x7deb70a9]
  41a4e2:	cmc    
  41a4e3:	fidiv  DWORD PTR [edx]
  41a4e5:	lods   eax,DWORD PTR ss:[esi]
  41a4e7:	(bad)  
  41a4ea:	dec    esi
  41a4eb:	in     al,dx
  41a4ec:	outs   dx,BYTE PTR ds:[esi]
  41a4ed:	and    DWORD PTR [edi],0x2d4d71a
  41a4f3:	lock enter 0xd976,0x43
  41a4f8:	jnp    0x41a579
  41a4fa:	icebp  
  41a4fb:	xchg   DWORD PTR [eax+0x56bc6d69],eax
  41a501:	stos   DWORD PTR es:[edi],eax
  41a502:	icebp  
  41a503:	sar    DWORD PTR ds:0xfb497612,1
  41a509:	test   eax,0x3eeddb77
  41a50e:	std    
  41a50f:	dec    esp
  41a510:	js     0x41a49f
  41a512:	std    
  41a513:	ja     0x41a4bf
  41a515:	lods   al,BYTE PTR ds:[esi]
  41a516:	add    al,BYTE PTR [ebx]
  41a518:	mov    esp,edx
  41a51a:	inc    eax
  41a51b:	jne    0x41a581
  41a51d:	cmova  ecx,DWORD PTR [eax]
  41a520:	inc    esi
  41a521:	(bad)  
  41a523:	rcr    DWORD PTR [edx+0x16],1
  41a526:	stos   BYTE PTR es:[edi],al
  41a527:	dec    eax
  41a528:	push   eax
  41a529:	inc    esp
  41a52a:	jecxz  0x41a4f7
  41a52c:	jp     0x41a4d6
  41a52e:	pop    ebp
  41a52f:	jno    0x41a4b2
  41a531:	stc    
  41a532:	ficomp DWORD PTR [eax+0x7d]
  41a535:	outs   dx,BYTE PTR ds:[esi]
  41a536:	mov    esp,0x3a716628
  41a53b:	cmp    DWORD PTR [ebp-0x3ecb1113],edi
  41a541:	add    eax,DWORD PTR [ecx+0x211180b8]
  41a547:	sar    bl,0xfc
  41a54a:	je     0x41a4ea
  41a54c:	cmp    BYTE PTR [ebx+0x2384a248],ah
  41a552:	loopne 0x41a5c9
  41a554:	pop    es
  41a555:	in     al,0x3
  41a557:	int3   
  41a558:	lahf   
  41a559:	and    eax,0x6dca8d11
  41a55e:	or     BYTE PTR [esi+0x28],bh
  41a561:	xchg   edx,esi
  41a563:	arpl   WORD PTR [ebx+0x9],ax
  41a566:	sub    BYTE PTR ss:[eax],cl
  41a569:	les    eax,FWORD PTR ds:0x3fe829e2
  41a56f:	sub    dh,BYTE PTR [edx+eax*1+0x3b41be92]
  41a576:	out    0x32,al
  41a578:	inc    edi
  41a579:	push   eax
  41a57a:	in     eax,dx
  41a57b:	jns    0x41a5b8
  41a57d:	je     0x41a561
  41a57f:	pop    esp
  41a580:	mov    esp,0x7e294104
  41a585:	jno    0x41a605
  41a587:	mov    fs,WORD PTR [eax-0x315971c]
  41a58d:	je     0x41a56b
  41a58f:	jbe    0x41a53b
  41a591:	cmp    BYTE PTR [edi+0x1e],ah
  41a594:	sub    ah,BYTE PTR [esi+esi*2-0x6ed020]
  41a59b:	xor    BYTE PTR [eax+0x4e],0xe
  41a59f:	jbe    0x41a603
  41a5a1:	add    al,0x61
  41a5a3:	or     edx,esp
  41a5a5:	adc    ebx,DWORD PTR [edx+0x5c0c7070]
  41a5ab:	sub    al,0xc0
  41a5ad:	arpl   di,si
  41a5af:	aam    0x1b
  41a5b1:	sbb    al,0x83
  41a5b3:	loop   0x41a583
  41a5b5:	jle    0x41a597
  41a5b7:	retf   
  41a5b8:	lds    ecx,FWORD PTR [eax-0x23]
  41a5bb:	push   ebp
  41a5bc:	pop    esp
  41a5bd:	cmc    
  41a5be:	(bad)  
  41a5bf:	leave  
  41a5c0:	push   edx
  41a5c1:	je     0x41a573
  41a5c3:	mov    ds:0xa2caf8d9,al
  41a5c8:	push   es
  41a5c9:	mov    al,bh
  41a5cb:	push   ebp
  41a5cc:	and    eax,DWORD PTR [edi-0x7f70aef7]
  41a5d2:	pop    ss
  41a5d3:	jae    0x41a649
  41a5d5:	repnz sub ecx,DWORD PTR [edi]
  41a5d8:	xchg   BYTE PTR [ebp-0x49],al
  41a5db:	es lock fsubr st(0),st
  41a5df:	ins    BYTE PTR es:[edi],dx
  41a5e0:	add    al,0x1b
  41a5e2:	ficomp WORD PTR [ebx]
  41a5e4:	sahf   
  41a5e5:	sub    ecx,DWORD PTR [eax]
  41a5e7:	fmul   QWORD PTR [ecx+0x1ef90089]
  41a5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ee:	sub    bh,BYTE PTR [edi]
  41a5f0:	mov    bh,BYTE PTR [eax+0x14d9f52a]
  41a5f6:	sub    ah,BYTE PTR [edx]
  41a5f8:	cld    
  41a5f9:	jmp    0xc75d6c71
  41a5fe:	lods   eax,DWORD PTR ds:[esi]
  41a5ff:	and    al,0xc1
  41a601:	cmc    
  41a602:	test   DWORD PTR [eax],eax
  41a604:	mov    DWORD PTR [ecx],esi
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbf86:0x87e04f4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebp-0x17fffffd],ch
  41a62a:	outs   dx,DWORD PTR ds:[esi]
  41a62b:	pop    edi
  41a62c:	mov    BYTE PTR [ecx-0x472707c],bl
  41a632:	popa   
  41a633:	and    BYTE PTR [ebp+eax*4-0x29f97e3f],ah
  41a63a:	inc    ebp
  41a63b:	fdiv   QWORD PTR [edi+0x5e]
  41a63e:	mov    bh,0x21
  41a640:	push   esi
  41a641:	ficom  WORD PTR [eax-0x31620039]
  41a647:	push   eax
  41a649:	xor    eax,0xcad10d00
  41a64e:	int3   
  41a64f:	xchg   BYTE PTR [esp+ebp*8+0x131fc799],dh
  41a656:	dec    ebp
  41a657:	jmp    0xb0bf:0x4d5b62d6
  41a65e:	push   ss
  41a65f:	and    BYTE PTR [ebp+0x11561600],dh
  41a665:	push   ebx
  41a666:	adc    dl,BYTE PTR [eax]
  41a668:	pop    esp
  41a669:	pop    eax
  41a66a:	lock jne 0x41a6e1
  41a66d:	sar    BYTE PTR [edx-0x5f],cl
  41a670:	mov    edx,0xcdb13d76
  41a675:	xlat   BYTE PTR ds:[ebx]
  41a676:	adc    ebp,ebp
  41a678:	xchg   esp,eax
  41a679:	and    ecx,ebp
  41a67b:	ror    dl,1
  41a67d:	mov    edi,0xd454d15
  41a682:	fs ret 0x1ac2
  41a686:	xlat   BYTE PTR ds:[ebx]
  41a687:	(bad)  
  41a689:	aas    
  41a68a:	out    dx,eax
  41a68b:	jle    0x41a618
  41a68d:	add    eax,DWORD PTR [eax+0x35]
  41a690:	mov    al,0xd7
  41a692:	push   esi
  41a693:	cld    
  41a694:	int    0x39
  41a696:	inc    ebp
  41a697:	jnp    0x41a638
  41a699:	int3   
  41a69a:	sub    bl,BYTE PTR [esi+0x27]
  41a69d:	lea    ecx,[edx+0x5b]
  41a6a0:	sbb    ch,ch
  41a6a2:	jge    0x41a6a7
  41a6a4:	mov    WORD PTR [eax],gs
  41a6a6:	xchg   esi,eax
  41a6a7:	out    dx,eax
  41a6a8:	fidiv  DWORD PTR [ecx+0x37]
  41a6ab:	sbb    al,0xe8
  41a6ad:	cmp    ch,BYTE PTR [esi+0x65]
  41a6b0:	jl     0x41a67e
  41a6b2:	jbe    0x41a6c1
  41a6b4:	nop
  41a6b5:	xchg   esi,eax
  41a6b6:	cmp    al,0xd3
  41a6b8:	jmp    0x29bf1f3f
  41a6bd:	out    dx,eax
  41a6be:	int3   
  41a6bf:	xchg   edi,edx
  41a6c1:	cmp    al,bl
  41a6c3:	es push cs
  41a6c5:	shl    DWORD PTR [eax-0xd411528],0x80
  41a6cc:	jle    0x41a716
  41a6ce:	xchg   edx,eax
  41a6cf:	repz dec edi
  41a6d1:	lahf   
  41a6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6d3:	nop
  41a6d4:	adc    al,0x5a
  41a6d6:	xchg   DWORD PTR [esi],edi
  41a6d8:	pop    es
  41a6d9:	or     eax,0x915858d7
  41a6de:	stos   DWORD PTR es:[edi],eax
  41a6df:	cdq    
  41a6e0:	mov    BYTE PTR [edi-0x14],dl
  41a6e3:	push   ds
  41a6e4:	nop
  41a6e5:	xchg   ecx,eax
  41a6e6:	jmp    0xa57a5947
  41a6eb:	pop    eax
  41a6ec:	(bad)  
  41a6ed:	stc    
  41a6ee:	cmp    al,0x89
  41a6f0:	cwde   
  41a6f1:	push   eax
  41a6f2:	xor    eax,ebp
  41a6f4:	mov    ecx,0x5e3c9365
  41a6f9:	sti    
  41a6fa:	iret   
  41a6fb:	cmp    DWORD PTR [edi],edx
  41a6fd:	enter  0xe55b,0x2f
  41a701:	mov    ds:0xfbcacd9a,al
  41a706:	xchg   ecx,eax
  41a707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a708:	jge    0x41a6b7
  41a70a:	xchg   ebx,eax
  41a70b:	aam    0x7c
  41a70d:	aam    0x44
  41a70f:	push   cs
  41a710:	addr16 (bad) 
  41a712:	and    ebp,DWORD PTR [edx-0x1e]
  41a715:	push   ds
  41a716:	or     eax,DWORD PTR [ebx]
  41a718:	dec    ebx
  41a719:	cmc    
  41a71a:	cli    
  41a71b:	nop
  41a71c:	push   0x70
  41a71e:	pop    ds
  41a71f:	or     dh,BYTE PTR [esi]
  41a721:	inc    ebx
  41a722:	mov    DWORD PTR [esi-0x66],0x6eaf45af
  41a729:	mov    BYTE PTR [ebx-0x15caa1e5],bl
  41a72f:	adc    ebp,0xfba83c04
  41a735:	nop
  41a736:	pop    ds
  41a737:	push   0xffffffdf
  41a739:	xlat   BYTE PTR ds:[ebx]
  41a73a:	jno    0x41a743
  41a73c:	mov    edx,0xb66d9d84
  41a741:	dec    esp
  41a742:	adc    edx,eax
  41a744:	xor    ecx,DWORD PTR [eax-0xc]
  41a747:	in     al,0xe1
  41a749:	imul   edx,DWORD PTR [ebp-0x6690c4a7],0xc5495b2a
  41a753:	inc    edi
  41a754:	les    ecx,FWORD PTR [edx-0xf]
  41a757:	adc    esp,ebx
  41a759:	push   ebp
  41a75a:	xchg   DWORD PTR [eax+0x62],ecx
  41a75d:	aad    0xda
  41a75f:	rcr    DWORD PTR [ecx+eax*2-0x44c78f5c],0x0
  41a767:	jmp    0x11287011
  41a76c:	loopne 0x41a720
  41a76e:	lock pmulhuw mm3,QWORD PTR [esi+edi*4-0x24e61fd1]
  41a777:	sbb    al,0xf0
  41a779:	jo     0x41a740
  41a77b:	push   0xffffffa0
  41a77d:	dec    eax
  41a77e:	dec    eax
  41a77f:	lea    ecx,es:[esi+0x49395630]
  41a786:	xor    al,0xef
  41a788:	dec    esi
  41a789:	add    ebp,0x97bb9237
  41a78f:	retf   
  41a790:	loopne 0x41a726
  41a792:	das    
  41a793:	std    
  41a794:	or     BYTE PTR [ebx+0x7a],ah
  41a797:	dec    ebp
  41a798:	or     al,0xbd
  41a79a:	out    dx,al
  41a79b:	xlat   BYTE PTR ds:[ebx]
  41a79c:	mul    DWORD PTR [edx+0x28]
  41a79f:	ins    BYTE PTR es:[edi],dx
  41a7a0:	pop    es
  41a7a1:	sbb    BYTE PTR [esi+0x3a],ch
  41a7a4:	dec    eax
  41a7a5:	aaa    
  41a7a6:	fild   WORD PTR [ebx+0x16]
  41a7a9:	xchg   ecx,eax
  41a7aa:	shl    BYTE PTR [edi],cl
  41a7ac:	or     DWORD PTR [eax+0x5fdc190a],edx
  41a7b2:	sub    BYTE PTR [esi],dh
  41a7b4:	adc    dh,BYTE PTR [ecx-0x7]
  41a7b7:	cmp    ch,BYTE PTR [esi]
  41a7b9:	loopne 0x41a7a5
  41a7bb:	mov    eax,0x87553e28
  41a7c0:	xchg   ebx,eax
  41a7c1:	daa    
  41a7c2:	out    dx,al
  41a7c3:	mov    dl,0xd9
  41a7c5:	inc    edx
  41a7c6:	ins    BYTE PTR es:[edi],dx
  41a7c7:	inc    edx
  41a7c8:	adc    BYTE PTR [ecx+0x2a220f52],al
  41a7ce:	loop   0x41a817
  41a7d0:	pop    es
  41a7d1:	adc    eax,0x5d88dcd1
  41a7d6:	adc    ecx,DWORD PTR [ebp-0x4c5ec601]
  41a7dc:	dec    esi
  41a7dd:	push   ss
  41a7de:	xor    al,0x92
  41a7e0:	std    
  41a7e1:	lock int 0xc1
  41a7e4:	out    0xbb,al
  41a7e6:	pop    esp
  41a7e7:	fisttp QWORD PTR [edi+ebp*4]
  41a7ea:	cmp    eax,0xa3caf2ad
  41a7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f0:	push   ebx
  41a7f1:	rol    BYTE PTR [ebp-0x44],cl
  41a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f5:	lock test BYTE PTR [ecx+edi*4-0x41760915],0xae
  41a7fe:	sbb    eax,0x1cb3e03b
  41a803:	xchg   esp,eax
  41a804:	aam    0x42
  41a806:	call   0x8686:0xd82911a4
  41a80d:	xchg   ebx,eax
  41a80e:	dec    esp
  41a80f:	ror    DWORD PTR [eax+0x25],0x95
  41a813:	fwait
  41a814:	ror    DWORD PTR [ebp-0x721c00ad],0x22
  41a81b:	xor    BYTE PTR [ecx-0x59],bl
  41a81e:	xchg   esp,eax
  41a81f:	scas   eax,DWORD PTR es:[edi]
  41a820:	jb     0x41a830
  41a822:	sub    BYTE PTR [esi+0x74],bh
  41a825:	mov    dh,0x33
  41a827:	stos   DWORD PTR es:[edi],eax
  41a828:	test   eax,0x53c21cc7
  41a82d:	ret    0xa5b3
  41a830:	(bad)  
  41a831:	imul   esi,DWORD PTR [eax+0x73d9ed5b],0xffffffbf
  41a838:	jmp    0xd45b:0xc7a00e3a
  41a83f:	test   eax,0x1a9ad098
  41a844:	not    BYTE PTR [esi]
  41a846:	ins    DWORD PTR es:[edi],dx
  41a847:	and    al,0xbd
  41a849:	mul    esi
  41a84b:	hlt    
  41a84c:	push   es
  41a84d:	push   ecx
  41a84e:	icebp  
  41a84f:	in     al,dx
  41a850:	mov    bl,BYTE PTR [ebp+0x3b0ea2fb]
  41a856:	or     BYTE PTR [esi],dh
  41a858:	stos   DWORD PTR es:[edi],eax
  41a859:	jmp    0x95fc1edf
  41a85e:	push   ecx
  41a85f:	lods   al,BYTE PTR ds:[esi]
  41a860:	shl    DWORD PTR [ebx],1
  41a862:	sbb    al,0xa
  41a864:	ss dec ecx
  41a866:	mov    esp,es
  41a868:	mov    DWORD PTR [ebx-0x38],edx
  41a86b:	adc    DWORD PTR [edi],ecx
  41a86d:	adc    eax,ebp
  41a86f:	add    eax,0xabab4d70
  41a874:	loopne 0x41a8d2
  41a876:	loopne 0x41a88a
  41a878:	fs (bad) 
  41a87a:	shr    BYTE PTR [edi],1
  41a87c:	fwait
  41a87d:	test   eax,0x5572bbe
  41a882:	mov    DWORD PTR [edi-0x4a],edi
  41a885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a886:	adc    al,BYTE PTR [ebp+0xfa6a9d1]
  41a88c:	inc    ebp
  41a88d:	inc    esi
  41a88e:	cmp    DWORD PTR [eax],eax
  41a890:	ficom  WORD PTR [ebx]
  41a892:	scas   eax,DWORD PTR es:[edi]
  41a893:	jbe    0x41a81f
  41a895:	call   0xa7fa8795
  41a89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a89b:	cmp    cx,ax
  41a89e:	mov    bl,0xd1
  41a8a0:	sub    al,0x36
  41a8a2:	aaa    
  41a8a3:	inc    edi
  41a8a4:	imul   eax,DWORD PTR [edi-0x3a],0x897b1cf2
  41a8ab:	push   0x9
  41a8ad:	into   
  41a8ae:	mov    ds:0x760b2101,al
  41a8b3:	retf   0x5701
  41a8b6:	push   ecx
  41a8b7:	pop    edx
  41a8b8:	aas    
  41a8b9:	mov    bh,0x77
  41a8bb:	mov    cs,WORD PTR [edi+esi*2-0x66]
  41a8bf:	add    eax,0x810388fb
  41a8c4:	in     eax,dx
  41a8c5:	lahf   
  41a8c6:	mov    esi,0xa0c7ecfc
  41a8cb:	mov    dh,0xef
  41a8cd:	sbb    DWORD PTR [ebx-0x38ed5089],eax
  41a8d3:	sub    al,0x9
  41a8d5:	fist   WORD PTR [eax-0x47]
  41a8d8:	gs fwait
  41a8da:	mov    ebx,0xb1e7543a
  41a8df:	ins    DWORD PTR es:[edi],dx
  41a8e0:	fisub  DWORD PTR [esp+ebx*1]
  41a8e3:	jg     0x41a948
  41a8e5:	dec    edx
  41a8e6:	push   esp
  41a8e7:	fsubrp st(0),st
  41a8e9:	or     bl,ah
  41a8eb:	dec    ebx
  41a8ec:	call   0x99ab98ca
  41a8f1:	je     0x41a892
  41a8f3:	and    al,0xe5
  41a8f5:	and    eax,0x68e2b9cb
  41a8fa:	xchg   edi,eax
  41a8fb:	xor    bl,BYTE PTR [eax+0x3a]
  41a8fe:	jge    0x41a88d
  41a900:	fwait
  41a901:	fs or  al,0x69
  41a904:	jmp    0x41a8e0
  41a906:	mov    eax,0xcdc2ff57
  41a90b:	mov    cs,WORD PTR ds:0xc8bd54a5
  41a911:	js     0x41a8fa
  41a913:	call   0xd720743a
  41a918:	inc    esi
  41a919:	mov    dl,0xe3
  41a91b:	les    ebp,FWORD PTR [esp+ebx*4+0x6d]
  41a91f:	add    BYTE PTR [eax-0x59f85bd1],al
  41a925:	lea    esi,[ebx]
  41a927:	stos   DWORD PTR es:[edi],eax
  41a928:	jb     0x41a972
  41a92a:	clc    
  41a92b:	mov    ?,WORD PTR [edi+0x2c95a823]
  41a931:	or     DWORD PTR [esi-0x3b],ebp
  41a934:	inc    ecx
  41a935:	mov    BYTE PTR ds:0x67a7,ch
  41a93a:	xor    edx,DWORD PTR [ebp-0x59]
  41a93d:	mov    al,0x42
  41a93f:	pop    ss
  41a940:	sbb    esi,esp
  41a942:	add    esp,ecx
  41a944:	popf   
  41a945:	ins    BYTE PTR es:[edi],dx
  41a946:	mov    bh,0x3e
  41a948:	sbb    al,0x3f
  41a94a:	xor    al,BYTE PTR [ebx+0x25]
  41a94d:	mov    eax,ds:0x9e13f07c
  41a952:	sti    
  41a953:	lea    ebp,[eax+0x428b4af4]
  41a959:	out    0x7b,eax
  41a95b:	or     al,0x1a
  41a95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a95e:	sub    eax,0xa56d6dac
  41a963:	dec    esi
  41a964:	fcom   DWORD PTR [ebx+edx*4]
  41a967:	(bad)  
  41a968:	je     0x41a8f9
  41a96a:	stc    
  41a96b:	inc    ebp
  41a96c:	push   0x95125014
  41a971:	enter  0x5a9a,0xc3
  41a975:	or     dh,al
  41a977:	(bad)  [ecx+0x40]
  41a97a:	imul   eax,DWORD PTR [esi+0x51],0x4c73bd92
  41a981:	push   edx
  41a982:	mov    cl,BYTE PTR [ecx-0x6a3aa8c9]
  41a988:	loop   0x41a9fc
  41a98a:	add    eax,0x74c00419
  41a98f:	hlt    
  41a990:	adc    BYTE PTR [ebp-0x3d4224c],ah
  41a996:	lods   al,BYTE PTR ds:[esi]
  41a997:	jecxz  0x41a932
  41a999:	(bad)  
  41a99a:	(bad)  
  41a99b:	and    al,0x52
  41a99d:	cld    
  41a99e:	out    dx,eax
  41a99f:	ret    
  41a9a0:	aaa    
  41a9a1:	mov    bh,0x14
  41a9a3:	adc    edx,DWORD PTR [ebx+0x1a]
  41a9a6:	xchg   ebp,eax
  41a9a7:	(bad)  
  41a9a8:	mov    bh,0x6e
  41a9aa:	add    al,0x90
  41a9ac:	inc    ecx
  41a9ad:	inc    edx
  41a9ae:	adc    ah,BYTE PTR [edx-0x1aeb3d92]
  41a9b4:	pop    ebp
  41a9b5:	mov    bl,dh
  41a9b7:	push   ss
  41a9b8:	jge    0x41a97c
  41a9ba:	std    
  41a9bb:	out    0x3c,al
  41a9bd:	outs   dx,BYTE PTR ds:[esi]
  41a9be:	out    dx,eax
  41a9bf:	and    eax,0x36d8b19f
  41a9c4:	retf   0x7654
  41a9c7:	or     al,0xee
  41a9c9:	lds    eax,FWORD PTR [eax+0x68]
  41a9cc:	xor    BYTE PTR [ebp+0x36b417c7],bl
  41a9d2:	pusha  
  41a9d3:	sbb    DWORD PTR [ebp+0x84],ecx
	...
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	and    al,0xe2
  41a9ef:	fs mov ebx,0x1276c
  41a9f5:	lods   eax,DWORD PTR ds:[esi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ebx],dl
  41a9fa:	aad    0xc
  41a9fc:	outs   dx,BYTE PTR ds:[esi]
  41a9fd:	jecxz  0x41aa03
  41a9ff:	bound  ecx,QWORD PTR ds:0xa7f8039
  41aa05:	sbb    esi,DWORD PTR [edx]
  41aa07:	xor    ch,ch
  41aa09:	rol    BYTE PTR [ecx+0x5c],1
  41aa0c:	adc    BYTE PTR [eax+esi*1-0x1d],cl
  41aa10:	dec    ebx
  41aa11:	daa    
  41aa12:	xor    ch,BYTE PTR [ecx+0x2f447bde]
  41aa18:	mov    edi,0x843c4f63
  41aa1d:	pushf  
  41aa1e:	sbb    eax,0xf18a0825
  41aa23:	or     eax,0xcdd147df
  41aa28:	fnstsw WORD PTR [ecx-0x7e]
  41aa2b:	xlat   BYTE PTR ds:[ebx]
  41aa2c:	popf   
  41aa2d:	sub    ecx,DWORD PTR [esi+0xd909a5]
  41aa33:	mov    ch,0x6
  41aa35:	data16 into 
  41aa37:	pop    eax
  41aa38:	or     eax,0x30bb1419
  41aa3d:	jns    0x41a9ff
  41aa3f:	inc    esp
  41aa40:	dec    edx
  41aa41:	or     eax,0xc99f35
  41aa46:	add    DWORD PTR [ecx],eax
  41aa48:	arpl   bx,cx
  41aa4a:	in     eax,0x1c
  41aa4c:	ret    
  41aa4d:	ror    DWORD PTR [eax-0x458a8d3a],1
  41aa53:	xchg   BYTE PTR es:[ecx+0x1c0b284],ch
  41aa5a:	sbb    BYTE PTR [ebx+eax*8+0x60276b14],cl
  41aa61:	pop    ecx
  41aa62:	sar    dl,cl
  41aa64:	cmp    al,dl
  41aa66:	pop    es
  41aa67:	lea    ebp,[edi+0x75]
  41aa6a:	mov    ebp,0xf3c3bbd7
  41aa6f:	xchg   ecx,eax
  41aa70:	pop    eax
  41aa71:	and    edi,DWORD PTR cs:[edx]
  41aa74:	pushf  
  41aa75:	aas    
  41aa76:	pop    ds
  41aa77:	pop    eax
  41aa78:	pop    esi
  41aa79:	test   eax,0x7d2f8b80
  41aa7f:	and    eax,0xa54e44a5
  41aa84:	cmp    eax,0x2754db4d
  41aa89:	and    dh,al
  41aa8b:	pop    esi
  41aa8c:	add    esp,eax
  41aa8e:	out    0x8c,eax
  41aa90:	jl     0x41aa26
  41aa92:	pop    esp
  41aa93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa94:	mov    ebp,0x9c100803
  41aa99:	inc    edi
  41aa9a:	dec    esp
  41aa9b:	(bad)  
  41aa9c:	loope  0x41ab06
  41aa9e:	ins    DWORD PTR es:[edi],dx
  41aa9f:	mov    ds:0xe4b6e0a9,eax
  41aaa4:	push   esp
  41aaa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa6:	inc    edx
  41aaa7:	jae    0x41aa49
  41aaa9:	push   cs
  41aaaa:	jb     0x41aab0
  41aaac:	int3   
  41aaad:	xor    al,0x2
  41aaaf:	lds    esi,FWORD PTR [ebx+0x12485c38]
  41aab5:	idiv   esi
  41aab7:	push   eax
  41aab8:	(bad)  
  41aab9:	jne    0x41aacb
  41aabb:	xchg   edx,eax
  41aabc:	and    BYTE PTR [edx],0x95
  41aabf:	loope  0x41aabc
  41aac1:	push   edi
  41aac2:	fld    QWORD PTR [eax+eax*8+0x5319caf9]
  41aac9:	lock std 
  41aacb:	or     eax,eax
  41aacd:	sub    bl,BYTE PTR [ecx+edi*1+0x4a]
  41aad1:	cs pushf 
  41aad3:	inc    ebx
  41aad4:	and    ebx,DWORD PTR [eax-0xb]
  41aad7:	xchg   esi,eax
  41aad8:	jecxz  0x41ab53
  41aada:	dec    ebp
  41aadb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aadc:	push   0x7c
  41aade:	call   DWORD PTR [edx-0x57adff9c]
  41aae4:	pop    edx
  41aae5:	lods   eax,DWORD PTR ds:[esi]
  41aae6:	shr    DWORD PTR [edx+0x53],1
  41aae9:	xchg   edx,eax
  41aaea:	jnp    0x41aa70
  41aaec:	test   DWORD PTR [edx],0x5f27ab5d
  41aaf2:	lahf   
  41aaf3:	and    DWORD PTR [edx-0x265b2044],esp
  41aaf9:	pop    ebp
  41aafa:	mov    esi,0xa6bdfd66
  41aaff:	xchg   edx,eax
  41ab00:	add    DWORD PTR [bx+si+0x8],0xffffffc7
  41ab05:	popa   
  41ab06:	inc    ecx
  41ab07:	mov    bl,0xcd
  41ab09:	fdiv   DWORD PTR [ebx+0x5af38f48]
  41ab0f:	push   ebp
  41ab10:	rol    DWORD PTR [edi+0x596dd334],cl
  41ab16:	fiadd  WORD PTR [bp+di+0x10]
  41ab1a:	in     eax,0xdd
  41ab1c:	arpl   WORD PTR [eax],dx
  41ab1e:	inc    ebx
  41ab1f:	pop    es
  41ab20:	inc    ebp
  41ab21:	inc    eax
  41ab22:	cld    
  41ab23:	cmp    DWORD PTR [edx],edx
  41ab25:	jne    0x41ab77
  41ab27:	idiv   BYTE PTR [ecx-0xc314bce]
  41ab2d:	and    eax,0xdf949db8
  41ab32:	cmc    
  41ab33:	push   edx
  41ab34:	call   DWORD PTR [ecx+0x1963d77b]
  41ab3a:	lea    edi,[edx]
  41ab3c:	bound  ecx,QWORD PTR [esi]
  41ab3e:	sub    esp,esp
  41ab40:	jns    0x41ab27
  41ab42:	jb     0x41ab8b
  41ab44:	(bad)  
  41ab45:	aam    0xbe
  41ab47:	std    
  41ab48:	cdq    
  41ab49:	fs mov cl,0x8f
  41ab4c:	int3   
  41ab4d:	jne    0x41ab22
  41ab4f:	lods   eax,DWORD PTR ds:[esi]
  41ab50:	rol    BYTE PTR [ebp+0x64],0x6e
  41ab54:	or     DWORD PTR [edi],0xffffffed
  41ab57:	push   es
  41ab58:	adc    eax,0x755bfffb
  41ab5d:	je     0x41ab1c
  41ab5f:	push   esi
  41ab60:	out    dx,eax
  41ab61:	fisttp DWORD PTR [ebx-0x7d]
  41ab64:	push   edx
  41ab65:	cmp    BYTE PTR [ecx+0x32859849],dl
  41ab6b:	(bad)  
  41ab6c:	in     al,dx
  41ab6d:	imul   ecx,DWORD PTR [ecx+ebx*4],0xffffffbf
  41ab71:	push   0x7c
  41ab73:	sbb    BYTE PTR [ebp-0x59],cl
  41ab76:	xchg   ebp,eax
  41ab77:	pushf  
  41ab78:	(bad)  
  41ab79:	imul   ebx,DWORD PTR [edx+0x1860a2bf],0xffffff88
  41ab80:	push   ecx
  41ab81:	lods   eax,DWORD PTR ds:[esi]
  41ab82:	je     0x41ab48
  41ab84:	mov    ?,ecx
  41ab86:	fld    st(3)
  41ab88:	shl    DWORD PTR [edi],cl
  41ab8a:	mov    esi,0xafd31606
  41ab8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab90:	mov    ebp,0x9e6badfd
  41ab95:	pop    ecx
  41ab96:	and    al,0xd1
  41ab98:	push   edx
  41ab99:	std    
  41ab9a:	mov    cs,esp
  41ab9c:	and    eax,0xa21c99b9
  41aba1:	pop    ebx
  41aba2:	mov    al,dl
  41aba4:	jnp    0x41ab7a
  41aba6:	xchg   DWORD PTR [esi+0x1ec07fc1],ebp
  41abac:	div    BYTE PTR [ebx-0x1915b02b]
  41abb2:	es or  al,0xfe
  41abb5:	push   eax
  41abb6:	cmp    eax,0x30b28c27
  41abbb:	test   BYTE PTR [edx+0x3fdbc75c],cl
  41abc1:	xchg   esp,eax
  41abc2:	pop    edi
  41abc3:	mov    ds:0x22dbb9f,al
  41abc8:	dec    ecx
  41abc9:	aaa    
  41abca:	push   esi
  41abcb:	mov    ebx,DWORD PTR [edi-0x5579b235]
  41abd1:	fbld   TBYTE PTR [esi-0x7ae86c4a]
  41abd7:	iret   
  41abd8:	fnstsw WORD PTR [esi]
  41abda:	das    
  41abdb:	(bad)  
  41abdc:	xchg   esp,eax
  41abdd:	test   BYTE PTR [eax+eax*4],ch
  41abe0:	xchg   edx,edi
  41abe2:	sub    bh,ah
  41abe4:	xor    DWORD PTR [ebx-0x3a314f78],esi
  41abea:	mov    al,0x73
  41abec:	ror    BYTE PTR [edx-0x6bd00c5e],1
  41abf2:	or     dl,dl
  41abf4:	mov    dl,0xb1
  41abf6:	ins    BYTE PTR es:[edi],dx
  41abf7:	test   eax,0x32cd1b01
  41abfc:	mov    ebx,0x97273bae
  41ac01:	in     eax,0x91
  41ac03:	sub    DWORD PTR [eax],edi
  41ac05:	cli    
  41ac06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac07:	sar    BYTE PTR [ebp-0x772ac2fd],1
  41ac0d:	mov    ch,0x40
  41ac0f:	jo     0x41ac35
  41ac11:	cwde   
  41ac12:	or     ch,BYTE PTR [ebx]
  41ac14:	push   edi
  41ac15:	inc    esp
  41ac16:	test   DWORD PTR [edi-0x3d042cc],esi
  41ac1c:	mov    eax,0xa26687f4
  41ac21:	call   0x3990:0x4aa3b4e5
  41ac28:	xchg   BYTE PTR [edi-0x7666ac61],bl
  41ac2e:	push   ecx
  41ac2f:	sbb    al,0xd7
  41ac31:	daa    
  41ac32:	repz repz imul ax,WORD PTR [edx+0x280ebc4a],0x21
  41ac3c:	sbb    cl,BYTE PTR [ecx+0x64]
  41ac3f:	mov    eax,ds:0xa97005d2
  41ac44:	add    edx,DWORD PTR [esi-0x61]
  41ac47:	adc    BYTE PTR [edx-0x7b],ah
  41ac4a:	mov    edi,0x4580b41c
  41ac4f:	es call 0x3708:0x9ba03b99
  41ac57:	dec    edx
  41ac58:	push   ds
  41ac59:	xchg   esi,eax
  41ac5a:	add    DWORD PTR [esi-0x39ce62],ebp
  41ac60:	sbb    al,ch
  41ac62:	pusha  
  41ac63:	in     eax,dx
  41ac64:	xchg   ebp,eax
  41ac65:	mov    esp,0x25ecab1b
  41ac6a:	out    dx,eax
  41ac6b:	pop    ebp
  41ac6c:	call   0xedef:0xe75efe9b
  41ac73:	sub    BYTE PTR [eax],dl
  41ac75:	ja     0x41ac91
  41ac77:	dec    bx
  41ac79:	jne    0x41ac92
  41ac7b:	or     bh,ah
  41ac7d:	jmp    0x41aca0
  41ac7f:	mov    bh,0x2e
  41ac81:	icebp  
  41ac82:	loope  0x41ac7c
  41ac84:	add    DWORD PTR [ebp+0x34],eax
  41ac87:	cli    
  41ac88:	and    esi,edi
  41ac8a:	ins    DWORD PTR es:[edi],dx
  41ac8b:	or     BYTE PTR [esi+0x29],ah
  41ac8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8f:	dec    eax
  41ac90:	mov    ecx,0x92df9ed4
  41ac95:	xlat   BYTE PTR ds:[ebx]
  41ac96:	mov    eax,ds:0x7956e778
  41ac9b:	mov    BYTE PTR [esi],bh
  41ac9d:	das    
  41ac9e:	aad    0x17
  41aca0:	adc    ecx,DWORD PTR [eax+0x8ea9911]
  41aca6:	inc    esp
  41aca7:	(bad)  
  41aca8:	xchg   edi,eax
  41aca9:	inc    ecx
  41acaa:	jnp    0x41ac39
  41acac:	inc    edi
  41acad:	jle    0x41ac82
  41acaf:	arpl   WORD PTR [ebx],cx
  41acb1:	rol    DWORD PTR [ebx-0x7ab21b07],cl
  41acb7:	enter  0xd0f2,0x1
  41acbb:	rol    BYTE PTR [edi+0x404c6966],1
  41acc1:	js     0x41ac82
  41acc3:	mov    al,ds:0xf2486514
  41acc8:	cmp    bl,BYTE PTR [edx-0x2698770c]
  41acce:	scas   al,BYTE PTR es:[edi]
  41accf:	lock (bad) 
  41acd1:	rol    BYTE PTR [edi+0x2bb356e0],0x69
  41acd8:	pusha  
  41acd9:	dec    edx
  41acda:	dec    ebp
  41acdb:	mov    al,BYTE PTR [edx]
  41acdd:	bound  ecx,QWORD PTR [edi+0x222b6715]
  41ace3:	push   0x721a9a1d
  41ace8:	popf   
  41ace9:	jne    0x41acaf
  41aceb:	leave  
  41acec:	ins    BYTE PTR es:[edi],dx
  41aced:	dec    ecx
  41acee:	add    cl,BYTE PTR [ebx-0x1e3b33a7]
  41acf4:	push   edx
  41acf6:	dec    ecx
  41acf7:	or     BYTE PTR [ebx+0x3c931ec6],cl
  41acfd:	(bad)  
  41acfe:	out    dx,al
  41acff:	(bad)  
  41ad00:	jp     0x41ad70
  41ad02:	add    DWORD PTR [esi+0x60],edx
  41ad05:	cmp    al,0x63
  41ad07:	scas   al,BYTE PTR es:[edi]
  41ad08:	add    DWORD PTR [ebp-0x3203be51],ecx
  41ad0e:	xchg   ecx,eax
  41ad0f:	cdq    
  41ad10:	sbb    al,0xc4
  41ad12:	inc    esp
  41ad13:	adc    BYTE PTR [ecx],ah
  41ad15:	retf   0x8ef0
  41ad18:	xchg   edx,eax
  41ad19:	mov    ds:0x6e287963,eax
  41ad1e:	in     eax,0xf2
  41ad20:	test   dh,cl
  41ad22:	mov    eax,DWORD PTR [edx+0x74]
  41ad25:	ds jmp 0x41ad45
  41ad28:	sbb    DWORD PTR [edi+esi*2+0x22],esi
  41ad2c:	inc    edx
  41ad2d:	call   0xb3d8:0x3ce36e5d
  41ad34:	or     al,bh
  41ad36:	repnz and ebx,ebp
  41ad39:	add    DWORD PTR [ecx+0x53],eax
  41ad3c:	aam    0xa6
  41ad3e:	fisubr WORD PTR [edx-0x6c819c43]
  41ad44:	scas   al,BYTE PTR es:[edi]
  41ad45:	inc    esp
  41ad46:	pop    edx
  41ad47:	aas    
  41ad48:	and    al,0xee
  41ad4a:	les    esi,FWORD PTR [edx]
  41ad4c:	(bad)  
  41ad4d:	jne    0x41ad34
  41ad4f:	jmp    0x8d15:0xf01e6163
  41ad56:	mov    WORD PTR [edx+0x21],fs
  41ad59:	sahf   
  41ad5a:	dec    BYTE PTR [edi+eiz*2-0x49]
  41ad5e:	test   DWORD PTR [ebp-0x7b],0xbc77b725
  41ad65:	sar    BYTE PTR [ebp-0x56d972f],1
  41ad6b:	pop    ebp
  41ad6c:	mov    esi,0x1283c991
  41ad71:	pusha  
  41ad72:	pop    edi
  41ad73:	pop    eax
  41ad74:	aad    0xf8
  41ad76:	in     eax,dx
  41ad77:	ins    BYTE PTR es:[edi],dx
  41ad78:	xchg   esi,eax
  41ad79:	sbb    cl,bh
  41ad7b:	push   edi
  41ad7c:	xchg   ebp,eax
  41ad7d:	int3   
  41ad7e:	or     ecx,eax
  41ad80:	rcr    edi,cl
  41ad82:	retf   0x5b7
  41ad85:	pcmpgtb mm0,mm6
  41ad88:	out    0x9e,eax
  41ad8a:	(bad)  
  41ad8b:	lods   eax,DWORD PTR ds:[esi]
  41ad8c:	retf   
  41ad8d:	add    DWORD PTR [ecx+edi*4-0x21],eax
  41ad91:	lahf   
  41ad92:	lods   eax,DWORD PTR ds:[esi]
  41ad93:	fistp  QWORD PTR [ebx+0x10]
  41ad96:	xor    edi,DWORD PTR [edi+0xee443f5]
  41ad9c:	(bad)  
  41ad9d:	into   
  41ad9e:	inc    ecx
  41ad9f:	inc    edx
  41ada0:	jo     0x41ae0b
  41ada2:	iret   
  41ada3:	pop    bx
  41ada5:	test   DWORD PTR [eax],0x0
  41adab:	add    BYTE PTR [eax],al
  41adad:	add    BYTE PTR [eax],al
  41adaf:	add    BYTE PTR [eax],al
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x5ab75a36],0x19
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebp+0x3000003],ch
  41adca:	xchg   DWORD PTR [ecx+0x67],edi
  41adcd:	xor    bl,BYTE PTR [esi-0xb]
  41add0:	in     al,0xda
  41add2:	jb     0x41ad6a
  41add4:	lds    esi,FWORD PTR [ebx+ecx*8]
  41add7:	mov    ah,0xb8
  41add9:	push   ecx
  41adda:	ret    
  41addb:	out    dx,al
  41addc:	jbe    0x41adec
  41adde:	rcl    DWORD PTR [ebp+0x76e8af8],0x6e
  41ade5:	fsubp  st(4),st
  41ade7:	mov    al,ds:0xec91f7a7
  41adec:	jb     0x41ad9d
  41adee:	mov    ecx,0x197aecbd
  41adf3:	(bad)  
  41adf4:	xlat   BYTE PTR ds:[ebx]
  41adf5:	stos   BYTE PTR es:[edi],al
  41adf6:	xor    ah,0xdb
  41adf9:	xor    eax,0x2429432f
  41adfe:	aam    0xac
  41ae00:	arpl   WORD PTR [esi-0x584812df],bx
  41ae06:	pushf  
  41ae07:	(bad)  
  41ae08:	xor    eax,0xd553163a
  41ae0d:	mov    WORD PTR [ebp+0x79],gs
  41ae10:	jns    0x41ae65
  41ae12:	push   0xe409b698
  41ae17:	test   edi,esi
  41ae19:	imul   eax,eax,0x12
  41ae1c:	test   al,0x26
  41ae1e:	mov    ch,0x29
  41ae20:	mov    edx,0xd6bdbef8
  41ae25:	xlat   BYTE PTR ds:[ebx]
  41ae26:	add    BYTE PTR [esi+0xf],bl
  41ae29:	fimul  DWORD PTR [edx]
  41ae2b:	ja     0x41aeab
  41ae2d:	in     eax,dx
  41ae2e:	(bad)  
  41ae30:	js     0x41ae8e
  41ae32:	sti    
  41ae33:	ficom  WORD PTR [ecx-0x3325f98a]
  41ae39:	scas   eax,DWORD PTR es:[edi]
  41ae3a:	aas    
  41ae3b:	retf   
  41ae3c:	imul   ebp,DWORD PTR fs:[eax+0x52],0x80d5e24e
  41ae44:	ja     0x41ade9
  41ae46:	int    0x9a
  41ae48:	xchg   edx,eax
  41ae49:	adc    edi,eax
  41ae4b:	and    edi,DWORD PTR [edi]
  41ae4d:	cmp    eax,0x4768b024
  41ae52:	sbb    ecx,DWORD PTR ds:0xad35fd13
  41ae58:	xor    dh,cl
  41ae5a:	sub    ecx,DWORD PTR [ecx+eiz*4]
  41ae5d:	pop    ss
  41ae5e:	(bad)  
  41ae5f:	mov    esi,0x5dbf0ea1
  41ae64:	test   eax,0xd2ffc900
  41ae69:	pusha  
  41ae6a:	mov    ebp,0xc7bd74c9
  41ae6f:	stos   DWORD PTR es:[edi],eax
  41ae70:	loopne 0x41ae92
  41ae72:	ins    DWORD PTR es:[edi],dx
  41ae73:	pop    edx
  41ae74:	pop    esi
  41ae75:	jg     0x41ae00
  41ae77:	les    ebp,FWORD PTR [ecx+eiz*2-0x9]
  41ae7b:	leave  
  41ae7c:	mov    al,bh
  41ae7e:	mov    esi,DWORD PTR [ecx+0x28]
  41ae81:	jmp    0xe8dc:0x137ca5fc
  41ae88:	and    bh,BYTE PTR [esi+0x62]
  41ae8b:	sbb    eax,0x2b98768d
  41ae90:	adc    eax,0x8e039958
  41ae95:	mov    DWORD PTR [esp+esi*2+0xd],esi
  41ae99:	push   ebp
  41ae9a:	mov    ebx,DWORD PTR [ecx]
  41ae9c:	jmp    0x41aecf
  41ae9e:	je     0x41ae24
  41aea0:	lods   eax,DWORD PTR ds:[esi]
  41aea1:	popa   
  41aea2:	dec    edx
  41aea3:	inc    ecx
  41aea4:	xchg   esp,eax
  41aea5:	sub    BYTE PTR [edx],al
  41aea7:	and    eax,0xe9317d5f
  41aeac:	out    dx,al
  41aead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeae:	mov    edx,0xfa962919
  41aeb3:	imul   ebp,DWORD PTR [ebp-0x7b],0xc8b21021
  41aeba:	rep stos DWORD PTR es:[edi],eax
  41aebc:	fstp   QWORD PTR [ecx]
  41aebe:	sub    edx,DWORD PTR ds:0xe58f348f
  41aec4:	mov    ah,0x8c
  41aec6:	inc    esi
  41aec7:	inc    esp
  41aec8:	repnz and ah,BYTE PTR [ecx]
  41aecb:	xor    edi,eax
  41aecd:	(bad)  
  41aece:	xchg   ebp,eax
  41aecf:	mov    ebx,DWORD PTR [eax]
  41aed1:	inc    esi
  41aed2:	into   
  41aed3:	push   esp
  41aed4:	and    al,0x2a
  41aed7:	lock hlt 
  41aed9:	jmp    0x3ba6722d
  41aede:	stos   BYTE PTR es:[edi],al
  41aedf:	mov    eax,0x64f9cbd1
  41aee4:	push   esp
  41aee5:	shr    DWORD PTR [edx],cl
  41aee7:	pop    edx
  41aee8:	jmp    0x3dd2:0x4d81c7e5
  41aeef:	(bad)  [edx]
  41aef1:	lahf   
  41aef2:	(bad)  
  41aef4:	dec    ebp
  41aef5:	mov    al,0x76
  41aef7:	jns    0x41af5e
  41aef9:	xchg   esp,eax
  41aefa:	mov    ?,WORD PTR [ebx+0x6f92cf35]
  41af00:	xchg   bp,ax
  41af02:	popf   
  41af03:	leave  
  41af04:	inc    ecx
  41af05:	aaa    
  41af06:	ds cdq 
  41af08:	xchg   BYTE PTR ds:0x1017219a,al
  41af0e:	stos   DWORD PTR es:[edi],eax
  41af0f:	cmc    
  41af10:	ins    BYTE PTR es:[edi],dx
  41af11:	and    DWORD PTR [edx-0x4f],esp
  41af14:	cli    
  41af15:	in     eax,dx
  41af16:	sbb    esp,DWORD PTR [esi-0x26]
  41af19:	cmp    al,0x57
  41af1b:	loop   0x41af73
  41af1d:	cvttpd2pi mm5,XMMWORD PTR [edx+0x62ac23b6]
  41af25:	cmp    al,0xfc
  41af27:	dec    esp
  41af28:	dec    edi
  41af29:	xchg   edx,eax
  41af2a:	and    ebx,DWORD PTR [ebx]
  41af2c:	mov    edx,0x29d2b8cb
  41af31:	ret    
  41af32:	or     al,0xea
  41af34:	cdq    
  41af35:	les    esp,FWORD PTR [ecx]
  41af37:	test   eax,0x44d8638a
  41af3c:	cmp    cl,BYTE PTR [eax+edx*2]
  41af3f:	xchg   ebx,eax
  41af40:	sbb    bl,BYTE PTR [edx]
  41af42:	mov    cl,0xa5
  41af44:	lds    edi,FWORD PTR [edi]
  41af46:	aaa    
  41af47:	and    edi,edx
  41af49:	mov    cl,BYTE PTR [ecx]
  41af4b:	lods   al,BYTE PTR ds:[esi]
  41af4c:	xchg   edx,eax
  41af4d:	and    ebp,ebp
  41af4f:	adc    al,0x52
  41af51:	xor    eax,0x97bb885a
  41af56:	rol    BYTE PTR [ecx+esi*4+0x3728a9ca],1
  41af5d:	lea    edi,[ebx+0x3b]
  41af60:	sub    esp,edx
  41af62:	sbb    eax,0x52fdcf6c
  41af67:	xchg   ecx,eax
  41af68:	jge    0x41af86
  41af6a:	jle    0x41aef0
  41af6c:	sbb    bh,0x85
  41af6f:	mov    eax,0x82b49266
  41af74:	fwait
  41af75:	mov    ah,0x6a
  41af77:	addr16 iret 
  41af79:	cmp    esi,DWORD PTR ds:0xcaeb8062
  41af7f:	ins    DWORD PTR es:[edi],dx
  41af80:	ror    DWORD PTR [ebp-0x7c8a943d],cl
  41af86:	push   ds
  41af87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af88:	xchg   ebx,eax
  41af89:	mov    ebx,0xbb3c0c10
  41af8e:	lods   eax,DWORD PTR ds:[esi]
  41af8f:	out    0x35,eax
  41af91:	cli    
  41af92:	jbe    0x41afe7
  41af94:	ins    DWORD PTR es:[edi],dx
  41af95:	xchg   BYTE PTR [eax+esi*1+0x7a],bh
  41af99:	push   ebx
  41af9a:	ja     0x41af49
  41af9c:	das    
  41af9d:	jge    0x41b016
  41af9f:	jl     0x41af3d
  41afa1:	cwde   
  41afa2:	ret    0x6f6
  41afa5:	nop
  41afa6:	pop    esi
  41afa7:	add    eax,0x4626611b
  41afac:	shr    BYTE PTR [eax],0xca
  41afaf:	xchg   BYTE PTR [ebx],bl
  41afb1:	imul   DWORD PTR ds:0x9c5aabdb
  41afb7:	and    ch,BYTE PTR [edx+0x4e568a6a]
  41afbd:	mov    ebp,0xa0172da8
  41afc2:	sbb    BYTE PTR [edx-0x515613c2],dl
  41afc8:	ficom  DWORD PTR [esi+0x49]
  41afcb:	pop    edx
  41afcc:	inc    edx
  41afcd:	fbstp  TBYTE PTR [esp+ebp*2]
  41afd0:	mov    DWORD PTR [edi+ebx*2+0x4b232757],ebp
  41afd7:	(bad)  
  41afd8:	lock and eax,0x34772237
  41afde:	mov    ch,0xc4
  41afe0:	mov    bl,0x30
  41afe2:	leave  
  41afe3:	sbb    al,0xe8
  41afe5:	push   esp
  41afe6:	push   ds
  41afe7:	adc    DWORD PTR [edx-0x5cc4389b],esi
  41afed:	dec    esi
  41afee:	mov    esp,fs
  41aff0:	outs   dx,DWORD PTR ds:[esi]
  41aff1:	xchg   esp,eax
  41aff2:	jnp    0x41b041
  41aff4:	je     0x41af9d
  41aff6:	mov    ecx,0x71b66d5a
  41affb:	and    DWORD PTR [edi+ecx*4+0x22],ebp
  41afff:	out    0x7d,al
  41b001:	and    al,0x52
  41b003:	sub    ah,BYTE PTR [ecx+0x786bf2aa]
  41b009:	mov    ?,WORD PTR [edx+0x5]
  41b00c:	leave  
  41b00d:	test   eax,0xb10275a
  41b012:	test   eax,0x9e26423e
  41b017:	stos   DWORD PTR es:[edi],eax
  41b018:	xchg   ebx,eax
  41b019:	push   ds
  41b01a:	mov    cl,0xdb
  41b01c:	xlat   BYTE PTR ds:[ebx]
  41b01d:	icebp  
  41b01e:	pop    ss
  41b01f:	push   ecx
  41b020:	outs   dx,DWORD PTR ds:[esi]
  41b021:	sahf   
  41b022:	pop    ebx
  41b023:	call   FWORD PTR ds:[eax+0x68acf344]
  41b02a:	int    0x13
  41b02c:	adc    BYTE PTR [eax-0x443e034f],ah
  41b032:	sar    DWORD PTR [ebp-0x98b608a],0xa3
  41b039:	inc    edx
  41b03a:	jle    0x41b07e
  41b03c:	lods   al,BYTE PTR ds:[esi]
  41b03d:	fdivr  QWORD PTR [eax+0x2b]
  41b040:	and    DWORD PTR [ecx-0x58e75753],eax
  41b046:	(bad)  
  41b047:	pop    ss
  41b048:	in     al,dx
  41b049:	arpl   WORD PTR [eax],ax
  41b04b:	nop
  41b04c:	xchg   edx,eax
  41b04d:	lea    ebx,[edx+0x12]
  41b050:	pusha  
  41b051:	push   esp
  41b052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b053:	dec    edx
  41b054:	xor    edx,DWORD PTR [esi-0x5ce657a]
  41b05a:	push   0x2a7ffbd0
  41b05f:	arpl   WORD PTR [edi+0x34baea2b],di
  41b065:	(bad)  
  41b066:	sub    dl,dl
  41b068:	out    dx,al
  41b069:	cld    
  41b06a:	mov    ch,0x97
  41b06c:	jne    0x41b00f
  41b06e:	es jecxz 0x41b021
  41b071:	fs mov dl,bl
  41b074:	sub    BYTE PTR [ebx],0x80
  41b077:	jb     0x41b0f3
  41b079:	inc    esp
  41b07a:	test   al,0x81
  41b07c:	mov    ebx,0xd932e387
  41b081:	jecxz  0x41b07e
  41b083:	xor    esi,DWORD PTR ds:0x224038b1
  41b089:	and    eax,0x9b8ef358
  41b08e:	push   ebx
  41b08f:	in     al,0xad
  41b091:	fwait
  41b092:	push   0x34
  41b094:	fxch   st(5)
  41b096:	mov    dl,0xab
  41b098:	arpl   WORD PTR [eax+ebx*2-0x59],cx
  41b09c:	cmp    eax,0x47a87fd
  41b0a1:	jl     0x41b0c2
  41b0a3:	mov    ah,0x95
  41b0a5:	cs out dx,al
  41b0a7:	mov    BYTE PTR [ebp+0x119193a6],bh
  41b0ad:	enter  0x47d6,0xa4
  41b0b1:	dec    ebx
  41b0b2:	jmp    0x41b087
  41b0b4:	in     al,dx
  41b0b5:	out    dx,al
  41b0b6:	test   DWORD PTR ds:0x2cceb44e,0x283a06f2
  41b0c0:	add    ecx,DWORD PTR [ebp-0x54]
  41b0c3:	lahf   
  41b0c4:	jp     0x41b09c
  41b0c6:	rcl    BYTE PTR [ebp+0x3a69948f],0x7c
  41b0cd:	cld    
  41b0ce:	aaa    
  41b0cf:	pextrw esp,(bad),0xc5
  41b0d1:	mov    ds:0x77e76b8a,eax
  41b0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d7:	push   ecx
  41b0d8:	and    al,0xe5
  41b0da:	shl    BYTE PTR [edi],1
  41b0dc:	xchg   edx,eax
  41b0dd:	push   es
  41b0de:	ror    BYTE PTR [bp+si],0x59
  41b0e2:	jg     0x41b095
  41b0e4:	test   BYTE PTR [ecx-0x67b151d0],ah
  41b0ea:	shl    DWORD PTR [eax+0x647d2bfb],0xb4
  41b0f1:	xchg   esi,eax
  41b0f2:	sub    al,0x6c
  41b0f4:	mov    ebp,0xe32b9868
  41b0f9:	mov    eax,ds:0xbf94e497
  41b0fe:	addr16 cdq 
  41b100:	(bad)  [ebx]
  41b102:	shl    DWORD PTR [edx+0x294f4ff3],1
  41b108:	outs   dx,BYTE PTR ds:[esi]
  41b109:	cmp    al,0x2f
  41b10b:	sub    BYTE PTR [edi-0x56],0xcd
  41b10f:	sbb    edx,esi
  41b111:	popa   
  41b112:	jae    0x41b0f9
  41b114:	jmp    0x41b09d
  41b116:	and    DWORD PTR [eax+0x79],0x5aa4b645
  41b11d:	push   ecx
  41b11e:	dec    edx
  41b11f:	mov    bl,0x1f
  41b121:	jns    0x41b163
  41b123:	jg     0x41b19a
  41b125:	jmp    0x43486949
  41b12a:	or     al,0xc7
  41b12c:	pop    ecx
  41b12d:	mov    bh,0x70
  41b12f:	push   edx
  41b130:	dec    edx
  41b131:	xchg   ebp,eax
  41b132:	mov    dl,0x4b
  41b134:	shr    cl,cl
  41b136:	push   esi
  41b137:	fs pop esp
  41b139:	jp     0x41b120
  41b13b:	or     BYTE PTR [edi+0x1604779d],cl
  41b141:	mov    fs,WORD PTR [eax-0x5]
  41b144:	mov    esp,0xf8677c64
  41b149:	cmp    DWORD PTR [ecx],ebx
  41b14b:	rol    edi,1
  41b14d:	cwde   
  41b14e:	adc    eax,0xb9000347
  41b153:	mov    ah,0x4f
  41b155:	mov    edx,0x7b0472f2
  41b15a:	cmp    cl,0xbe
  41b15d:	gs push cs
  41b15f:	mov    DWORD PTR [ecx+0x14],ebp
  41b162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b163:	push   cs
  41b164:	(bad)  
  41b165:	xchg   edx,eax
  41b166:	and    DWORD PTR [ebx+esi*8+0x53],ecx
  41b16a:	fmulp  st(1),st
  41b16c:	ja     0x41b148
  41b16e:	jo     0x41b127
  41b170:	addr16 sti 
  41b172:	cmp    dh,BYTE PTR [ecx]
  41b174:	ror    DWORD PTR [ebx],cl
	...
  41b17e:	add    BYTE PTR [eax],al
  41b180:	add    bl,ah
  41b182:	call   0xf8dd8217
  41b187:	jecxz  0x41b184
  41b189:	jns    0x41b1d5
  41b18b:	shr    ebp,0x10
  41b18e:	aas    
  41b18f:	cwde   
  41b190:	call   0x3ad:0x12ec6
  41b197:	add    BYTE PTR [eax],al
  41b199:	sti    
  41b19a:	fiadd  DWORD PTR ds:0xc2b7f6e
  41b1a0:	jmp    0xd609aa28
  41b1a5:	push   ecx
  41b1a6:	js     0x41b1c5
  41b1a8:	clc    
  41b1a9:	out    dx,al
  41b1aa:	repz jp 0x41b192
  41b1ad:	xlat   BYTE PTR ds:[ebx]
  41b1ae:	sub    dl,BYTE PTR [ebx-0x4a]
  41b1b1:	ror    BYTE PTR [edx+0x61],0x78
  41b1b5:	adc    edx,DWORD PTR [ecx]
  41b1b7:	in     eax,0xe7
  41b1b9:	ins    BYTE PTR es:[edi],dx
  41b1ba:	sub    ebx,DWORD PTR [esi+0x12afc0f]
  41b1c0:	mov    edi,0x6288c4ba
  41b1c5:	xlat   BYTE PTR ds:[ebx]
  41b1c6:	lods   al,BYTE PTR ds:[esi]
  41b1c7:	int    0xd7
  41b1c9:	sub    BYTE PTR [ebx],bl
  41b1cb:	lods   al,BYTE PTR ds:[esi]
  41b1cc:	data16 mov ah,0x1a
  41b1cf:	cld    
  41b1d0:	loopne 0x41b16b
  41b1d2:	xchg   ebx,eax
  41b1d3:	lods   eax,DWORD PTR ds:[esi]
  41b1d4:	xor    dh,dh
  41b1d6:	xor    esp,ebp
  41b1d8:	jo     0x41b17a
  41b1da:	cmp    edx,ecx
  41b1dc:	or     eax,0x4999a24d
  41b1e1:	popf   
  41b1e2:	aad    0x31
  41b1e4:	leave  
  41b1e5:	fld    TBYTE PTR [edx]
  41b1e7:	xchg   esp,eax
  41b1e8:	les    edx,FWORD PTR [ecx+0x22]
  41b1eb:	dec    edi
  41b1ec:	inc    edx
  41b1ed:	shr    BYTE PTR [edx],0x18
  41b1f0:	sub    BYTE PTR [edx-0x34],ah
  41b1f3:	stos   DWORD PTR es:[edi],eax
  41b1f4:	arpl   ax,bp
  41b1f6:	pop    ebp
  41b1f7:	mov    al,0x42
  41b1f9:	and    DWORD PTR [ecx],eax
  41b1fb:	dec    eax
  41b1fc:	mov    dh,0xa7
  41b1fe:	outs   dx,DWORD PTR ds:[esi]
  41b1ff:	dec    eax
  41b200:	pop    ss
  41b201:	inc    ebx
  41b202:	popf   
  41b203:	fild   DWORD PTR [ecx-0x76]
  41b206:	sub    dl,BYTE PTR [ebp-0x72]
  41b209:	sub    al,dl
  41b20b:	adc    ah,BYTE PTR [ebx]
  41b20d:	in     al,dx
  41b20e:	xchg   DWORD PTR [eax],eax
  41b210:	jb     0x41b1b1
  41b212:	add    eax,0x54a0e49f
  41b217:	pop    ebx
  41b218:	rcl    ebp,cl
  41b21a:	jno    0x41b1cd
  41b21c:	mov    ebx,0x78968bd6
  41b221:	retf   
  41b222:	adc    DWORD PTR [esi-0x29dd8fcd],0xffffffc5
  41b229:	mov    DWORD PTR [eax-0x32],ecx
  41b22c:	jae    0x41b21e
  41b22e:	fcmovnbe st,st(2)
  41b230:	mov    dl,0xd3
  41b232:	inc    ebx
  41b233:	mov    ah,0x97
  41b235:	push   ebp
  41b236:	xchg   esi,eax
  41b237:	or     DWORD PTR [edi+0x3a],ebx
  41b23a:	hlt    
  41b23b:	les    edi,FWORD PTR [ecx-0x30]
  41b23e:	repnz sub DWORD PTR [edi],eax
  41b241:	ja     0x41b2b2
  41b243:	or     ebx,DWORD PTR [edi]
  41b245:	bound  edx,QWORD PTR [ebp+0x1a]
  41b248:	adc    al,0xdb
  41b24a:	fidiv  DWORD PTR [ecx-0x125cd9aa]
  41b250:	jns    0x41b2d0
  41b252:	or     ecx,esp
  41b254:	int    0x1d
  41b256:	pop    edi
  41b257:	gs mov dh,0x93
  41b25a:	fmul   DWORD PTR [ebx]
  41b25c:	or     eax,0xe69ffe6f
  41b261:	inc    ebx
  41b262:	scas   eax,DWORD PTR es:[edi]
  41b263:	mov    ds:0xc7a17a17,al
  41b268:	xchg   ebx,eax
  41b269:	int3   
  41b26a:	fmul   DWORD PTR [edx]
  41b26c:	xchg   DWORD PTR [ecx+0x2c9d2d9f],eax
  41b272:	dec    eax
  41b273:	ret    
  41b274:	addr16 mov edx,0xfa845a03
  41b27a:	sub    al,0xad
  41b27c:	push   eax
  41b27d:	loop   0x41b2f1
  41b27f:	sub    bl,ch
  41b281:	inc    ecx
  41b282:	call   0x4745:0xa6df879f
  41b289:	xchg   esi,eax
  41b28a:	xor    cl,BYTE PTR [ecx]
  41b28c:	cmp    eax,0x89d4e440
  41b291:	in     al,dx
  41b292:	jmp    0x41b24e
  41b294:	push   edx
  41b295:	mov    dh,0x8d
  41b297:	cmp    eax,0x1f5a63f2
  41b29c:	xor    ah,BYTE PTR [ecx-0x32]
  41b29f:	jo     0x41b285
  41b2a1:	call   0xd53b:0xd07a351e
  41b2a8:	dec    ebx
  41b2a9:	lahf   
  41b2aa:	adc    al,0xdf
  41b2ac:	pop    eax
  41b2ad:	rcr    BYTE PTR [eax+ecx*2+0x79],0x9b
  41b2b2:	inc    esp
  41b2b3:	mov    cl,0x7a
  41b2b5:	fidivr WORD PTR [edi+0x13]
  41b2b8:	test   eax,0xf32b56d1
  41b2bd:	ret    
  41b2be:	cld    
  41b2bf:	rol    DWORD PTR [eax],0x64
  41b2c2:	mov    ch,0xe8
  41b2c4:	cmp    al,0x12
  41b2c6:	sbb    bl,BYTE PTR [edx+eax*8]
  41b2c9:	ins    BYTE PTR es:[edi],dx
  41b2ca:	mov    edi,edx
  41b2cc:	add    eax,0x9b004ff2
  41b2d1:	mov    esp,0x7e9c6b16
  41b2d6:	out    0xcf,eax
  41b2d8:	sbb    DWORD PTR [ecx+0x81600d2],0x813905bc
  41b2e2:	loop   0x41b30b
  41b2e4:	add    esp,DWORD PTR [ebp+0x7f43bd3d]
  41b2ea:	mov    ecx,0x563d20c6
  41b2ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2f0:	lock mov bh,0x39
  41b2f3:	test   eax,0x8c3245bf
  41b2f8:	sbb    DWORD PTR [edi+0xdf8238b],0x134a79ae
  41b302:	(bad)  
  41b303:	lahf   
  41b304:	das    
  41b305:	mov    WORD PTR [edi+0x4b],ss
  41b308:	mov    dh,0x77
  41b30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30b:	rcr    esi,0xcf
  41b30e:	aad    0xfa
  41b310:	dec    esp
  41b311:	pop    esp
  41b312:	rcl    DWORD PTR [esi+0x78],1
  41b315:	or     al,0x3b
  41b317:	inc    ebx
  41b318:	pop    eax
  41b319:	pop    ebp
  41b31a:	push   es
  41b31b:	fistp  DWORD PTR [ebp-0x45ad361e]
  41b321:	imul   esp,edi,0x2c
  41b324:	mov    ch,0xa8
  41b326:	xor    al,0xa4
  41b328:	jne    0x41b2d4
  41b32a:	test   eax,0xbae0b96
  41b32f:	outs   dx,BYTE PTR ds:[esi]
  41b330:	ss mov ch,0x40
  41b333:	mov    ch,0x82
  41b335:	or     al,0x2e
  41b337:	sbb    eax,DWORD PTR [eax+eiz*8-0x9]
  41b33b:	int    0x4a
  41b33d:	mov    ch,0x53
  41b33f:	fadd   QWORD PTR [edx]
  41b341:	fcom   QWORD PTR [ecx+ebp*2+0x74]
  41b345:	cmc    
  41b346:	dec    eax
  41b347:	int3   
  41b348:	(bad)  [edi-0x6b]
  41b34b:	jp     0x41b359
  41b34d:	mov    ebx,0x363ef4a9
  41b352:	xor    ebx,DWORD PTR cs:[eax+eiz*1]
  41b356:	push   ss
  41b357:	xor    dl,BYTE PTR ds:0x3b71d5fb
  41b35d:	mov    edx,0xc7f14e2f
  41b362:	inc    ecx
  41b363:	jecxz  0x41b3c1
  41b365:	push   esi
  41b366:	loop   0x41b37c
  41b368:	mov    esp,0x48302691
  41b36d:	cld    
  41b36e:	push   cs
  41b36f:	and    bl,BYTE PTR [edi-0x71e8109b]
  41b375:	cwde   
  41b376:	xor    al,0x6e
  41b378:	imul   ebx,edi,0xffffffdb
  41b37b:	call   0x7a095717
  41b380:	dec    esp
  41b381:	ss loop 0x41b31c
  41b384:	mov    al,0xdb
  41b386:	pop    edx
  41b387:	mov    bl,0x7d
  41b389:	add    eax,0x31761b4c
  41b38e:	mov    eax,0xa6b57a35
  41b393:	into   
  41b394:	std    
  41b395:	xchg   edx,eax
  41b396:	lods   al,BYTE PTR ds:[esi]
  41b397:	pushf  
  41b398:	sbb    al,0x5e
  41b39a:	mov    eax,ds:0xaea71793
  41b39f:	jb     0x41b397
  41b3a1:	ret    0x3ff2
  41b3a4:	icebp  
  41b3a5:	repz sbb BYTE PTR [edi],ah
  41b3a8:	das    
  41b3a9:	outs   dx,DWORD PTR ds:[esi]
  41b3aa:	xor    BYTE PTR [ebx-0x64143eec],ch
  41b3b0:	xchg   ecx,eax
  41b3b1:	bound  ebp,QWORD PTR [ecx]
  41b3b3:	adc    al,0xba
  41b3b5:	fwait
  41b3b6:	aaa    
  41b3b7:	push   0x64705f3e
  41b3bc:	mov    BYTE PTR [edi+0x2b],cl
  41b3bf:	je     0x41b3d6
  41b3c1:	dec    ebx
  41b3c2:	cmp    BYTE PTR [eax-0x61],dh
  41b3c5:	lea    eax,[esi-0x26]
  41b3c8:	or     dh,BYTE PTR [ebx+0x71955d07]
  41b3ce:	push   edx
  41b3cf:	mov    WORD PTR [edi],cs
  41b3d1:	push   edx
  41b3d2:	leave  
  41b3d3:	pop    ebx
  41b3d4:	outs   dx,DWORD PTR ds:[esi]
  41b3d5:	aas    
  41b3d6:	das    
  41b3d7:	dec    esp
  41b3d8:	cli    
  41b3d9:	mov    DWORD PTR [ebx],ecx
  41b3db:	aad    0x29
  41b3dd:	cli    
  41b3de:	and    ch,BYTE PTR [edx-0x19]
  41b3e1:	gs sub al,0x99
  41b3e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3e5:	lea    esi,[ebp-0x3c565342]
  41b3eb:	sub    DWORD PTR [ebp-0x48559c7b],ebx
  41b3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f2:	push   edi
  41b3f3:	or     edi,ebx
  41b3f5:	loop   0x41b3a3
  41b3f7:	inc    edx
  41b3f8:	sbb    BYTE PTR [ebx-0x72487bae],dh
  41b3fe:	and    eax,0xfcdc533d
  41b403:	call   0xe09ce755
  41b408:	adc    eax,0x4b33d3bf
  41b40d:	mov    eax,ds:0x5d0dcd73
  41b412:	into   
  41b413:	jge    0x41b43a
  41b415:	xlat   BYTE PTR ds:[ebx]
  41b416:	mov    eax,0xaa11b780
  41b41b:	xchg   ecx,eax
  41b41c:	bound  eax,QWORD PTR [edi+edx*1]
  41b41f:	gs stos BYTE PTR es:[edi],al
  41b421:	or     edx,DWORD PTR [eax]
  41b423:	out    0x68,al
  41b425:	(bad)  
  41b426:	frndint 
  41b428:	push   ss
  41b429:	inc    eax
  41b42a:	jmp    0x41b42b
  41b42c:	add    edx,DWORD PTR [eax+0x2c]
  41b42f:	inc    eax
  41b430:	push   eax
  41b431:	xor    DWORD PTR [ebx+0xbbaceac],0x367b0ffc
  41b43b:	sti    
  41b43c:	sub    eax,esi
  41b43e:	pop    es
  41b43f:	(bad)  
  41b440:	fldcw  WORD PTR [ecx-0x49]
  41b443:	pand   mm1,QWORD PTR [edx-0x37ab4b55]
  41b44a:	push   esp
  41b44b:	call   0x4cb633a9
  41b450:	mov    eax,ds:0x98f254fd
  41b455:	scas   eax,DWORD PTR es:[edi]
  41b456:	and    DWORD PTR [ecx+ebp*8-0x15],esp
  41b45a:	test   dh,0xf2
  41b45d:	das    
  41b45e:	popa   
  41b45f:	jecxz  0x41b406
  41b461:	pop    edx
  41b462:	mov    bh,0x45
  41b464:	sbb    al,bl
  41b466:	sbb    dh,bh
  41b468:	pop    edx
  41b469:	xor    eax,0x8438bceb
  41b46e:	pop    edx
  41b46f:	push   ecx
  41b470:	and    BYTE PTR [edx-0x6b81bdb7],bh
  41b476:	xor    DWORD PTR [eax-0x73],ecx
  41b479:	aad    0x82
  41b47b:	(bad)  
  41b47c:	test   BYTE PTR [eax+0xd903db7],0x83
  41b483:	mov    ah,0xd0
  41b485:	jl     0x41b4b7
  41b487:	pop    esp
  41b488:	push   ss
  41b489:	or     esp,DWORD PTR [ebx]
  41b48b:	push   ds
  41b48c:	int3   
  41b48d:	scas   al,BYTE PTR es:[edi]
  41b48e:	in     al,dx
  41b48f:	repnz mov ecx,0x6c97072b
  41b495:	cvtps2pi mm4,xmm6
  41b498:	pop    es
  41b499:	mov    al,ds:0x67a70ddc
  41b49e:	(bad)  
  41b49f:	(bad)  
  41b4a1:	mov    ch,0xe2
  41b4a3:	add    ch,BYTE PTR ss:[eax]
  41b4a6:	and    dl,BYTE PTR ds:0xa4f11adb
  41b4ac:	shr    BYTE PTR [edx],0xb1
  41b4af:	inc    ebp
  41b4b0:	mov    cl,0x19
  41b4b2:	dec    ecx
  41b4b3:	rol    DWORD PTR [ecx+0x6099db4a],0xd6
  41b4ba:	mov    BYTE PTR [ecx+esi*4+0x7f7a4e36],ah
  41b4c1:	push   esp
  41b4c2:	mov    ds:0x5cd30efa,eax
  41b4c7:	lds    ebp,FWORD PTR ds:0x96f524d
  41b4cd:	xchg   edx,eax
  41b4ce:	fidivr WORD PTR ss:[ebx+0x44]
  41b4d2:	mov    dh,0xeb
  41b4d4:	push   0xffffff99
  41b4d6:	dec    ebp
  41b4d7:	ins    BYTE PTR es:[edi],dx
  41b4d8:	outs   dx,BYTE PTR ds:[esi]
  41b4d9:	in     eax,0xb4
  41b4db:	ret    0x5f73
  41b4de:	xchg   ebx,eax
  41b4df:	xor    ecx,DWORD PTR [edx+0x5dc32f57]
  41b4e5:	mov    eax,ds:0xc155838c
  41b4ea:	fdivr  QWORD PTR es:[edi+0x47]
  41b4ee:	dec    ebp
  41b4ef:	pop    ds
  41b4f0:	fsub   QWORD PTR [di]
  41b4f3:	rcr    DWORD PTR [ebx-0x6e],cl
  41b4f6:	sub    al,BYTE PTR [edi+0x27]
  41b4f9:	hlt    
  41b4fa:	xchg   esp,eax
  41b4fb:	pop    edi
  41b4fc:	imul   eax,DWORD PTR [ebx],0xa34f6f2e
  41b502:	repnz push ebx
  41b504:	dec    edi
  41b505:	sub    ah,cl
  41b507:	and    eax,0x9448d360
  41b50c:	ins    BYTE PTR es:[edi],dx
  41b50d:	mov    dh,0x22
  41b50f:	jno    0x41b4c9
  41b511:	pop    eax
  41b512:	gs jecxz 0x41b4a0
  41b515:	into   
  41b516:	push   edx
  41b517:	inc    ebx
  41b518:	fiadd  WORD PTR [eax+0x31]
  41b51b:	in     al,0x7a
  41b51d:	jp     0x41b572
  41b51f:	cmp    DWORD PTR [edi-0x79],ebp
  41b522:	or     DWORD PTR [edx],edx
  41b524:	adc    DWORD PTR ds:0xd38c97de,ebx
  41b52a:	pop    ebp
  41b52b:	sbb    BYTE PTR [edi],bl
  41b52d:	or     dh,ch
  41b52f:	leave  
  41b530:	lock lods eax,DWORD PTR ds:[esi]
  41b532:	jle    0x41b595
  41b534:	or     eax,DWORD PTR [eax-0x7ef38e18]
  41b53a:	mov    al,ds:0xd4eba85f
  41b53f:	cmp    eax,0xee083ed6
  41b544:	lahf   
  41b545:	mov    ebx,0x0
  41b54a:	add    BYTE PTR [eax],al
  41b54c:	add    BYTE PTR [eax],al
  41b54e:	add    BYTE PTR [eax],al
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x52a54194
  41b561:	jae    0x41b595
  41b563:	add    DWORD PTR [eax],eax
  41b565:	lods   eax,DWORD PTR ds:[esi]
  41b566:	add    eax,DWORD PTR [eax]
  41b568:	add    BYTE PTR [edx],ah
  41b56a:	jne    0x41b51d
  41b56c:	(bad)  
  41b56d:	cmp    cl,BYTE PTR [esi+edi*4-0x1fca7d5]
  41b574:	dec    edx
  41b575:	inc    edx
  41b576:	lock cmp BYTE PTR [edi],ch
  41b579:	lods   al,BYTE PTR ds:[esi]
  41b57a:	mov    ch,0xa5
  41b57c:	scas   al,BYTE PTR es:[edi]
  41b57d:	push   ebx
  41b57e:	add    bh,BYTE PTR [eax-0x6c81ab69]
  41b584:	adc    edx,ecx
  41b586:	push   0xffffff9f
  41b588:	inc    esp
  41b589:	mov    ?,WORD PTR [ebp+0x72]
  41b58c:	cmp    DWORD PTR [esi],ebx
  41b58e:	outs   dx,DWORD PTR ds:[esi]
  41b58f:	and    eax,0x46d4ed15
  41b594:	mov    cl,0xce
  41b596:	adc    dh,BYTE PTR [ebx+0x60d23db8]
  41b59c:	jnp    0x41b5f3
  41b59e:	mov    WORD PTR [ebp+0x0],es
  41b5a1:	push   eax
  41b5a2:	outs   dx,BYTE PTR ds:[esi]
  41b5a3:	pop    ss
  41b5a4:	in     eax,0x82
  41b5a6:	jl     0x41b534
  41b5a8:	idiv   DWORD PTR [esi]
  41b5aa:	add    al,0x61
  41b5ac:	push   ebp
  41b5ad:	jl     0x41b5d3
  41b5af:	jb     0x41b62c
  41b5b1:	loop   0x41b58d
  41b5b3:	data16 adc BYTE PTR [ebx+0x8],ah
  41b5b7:	adc    BYTE PTR [edx],dl
  41b5b9:	aad    0x3a
  41b5bb:	pop    eax
  41b5bc:	sub    DWORD PTR [ebx-0x64],0x9fd23b38
  41b5c3:	xchg   ecx,eax
  41b5c4:	dec    ecx
  41b5c5:	cmc    
  41b5c6:	mov    DWORD PTR [esi-0x66],esi
  41b5c9:	mov    al,ds:0xd91476cc
  41b5ce:	cld    
  41b5cf:	mov    al,0x57
  41b5d1:	pop    edi
  41b5d2:	popa   
  41b5d3:	ds mov dh,0x9b
  41b5d6:	repz ds sbb al,0xb9
  41b5da:	pop    esi
  41b5db:	adc    al,0xf4
  41b5dd:	clc    
  41b5de:	jmp    0x64bd1eba
  41b5e3:	sahf   
  41b5e4:	sbb    esi,DWORD PTR [eax+0x4d5a288]
  41b5ea:	int3   
  41b5eb:	jl     0x41b63f
  41b5ed:	or     ebx,esp
  41b5ef:	pop    esi
  41b5f0:	pop    esi
  41b5f1:	jmp    0x41b64f
  41b5f3:	adc    edx,eax
  41b5f5:	gs and eax,0x58cdb51f
  41b5fb:	arpl   WORD PTR ds:0x5cc9745c,di
  41b601:	inc    edi
  41b602:	and    al,0xad
  41b604:	sub    BYTE PTR [ecx-0x80],0xb7
  41b608:	xchg   DWORD PTR [edi-0x27c152a0],esi
  41b60e:	xor    bh,BYTE PTR [edx-0x3816324f]
  41b614:	add    edi,DWORD PTR [edi]
  41b616:	xchg   edx,eax
  41b617:	addr16 push esp
  41b619:	mov    esi,0xac111999
  41b61e:	jns    0x41b659
  41b620:	enter  0x4fd5,0xb1
  41b624:	or     BYTE PTR [ebp-0xa91133],ah
  41b62a:	mov    esp,0x5fc5cfb6
  41b62f:	mov    ah,0xd8
  41b631:	lods   eax,DWORD PTR ds:[esi]
  41b632:	dec    ecx
  41b633:	mov    ecx,esp
  41b635:	imul   edi,esp,0x912e1665
  41b63b:	mov    bh,0xc5
  41b63d:	mov    edi,DWORD PTR [esi]
  41b63f:	adc    al,0x50
  41b641:	ficom  DWORD PTR [edx]
  41b643:	or     ch,bl
  41b645:	push   esp
  41b646:	leave  
  41b647:	in     al,dx
  41b648:	mov    dl,0xc9
  41b64a:	pop    ss
  41b64b:	inc    eax
  41b64c:	stos   BYTE PTR es:[edi],al
  41b64d:	adc    esi,edx
  41b64f:	lods   al,BYTE PTR ss:[esi]
  41b651:	in     al,0xe3
  41b653:	sub    bh,BYTE PTR [esi-0x40]
  41b656:	add    al,0x4f
  41b658:	mov    eax,0xce1453f1
  41b65d:	fs xchg esp,eax
  41b65f:	cld    
  41b660:	adc    DWORD PTR [eax-0x4f292333],esp
  41b666:	rol    DWORD PTR [ecx-0x68],cl
  41b669:	xchg   edi,eax
  41b66a:	aam    0xeb
  41b66c:	ror    dh,0x42
  41b66f:	pop    ebx
  41b670:	or     edx,0x76953e00
  41b676:	aam    0x9c
  41b678:	inc    ebx
  41b679:	lea    esp,[ecx]
  41b67b:	mov    dl,0x84
  41b67d:	inc    edi
  41b67e:	xchg   esp,eax
  41b67f:	sbb    al,0x3a
  41b681:	out    0xca,eax
  41b683:	pop    ss
  41b684:	jno    0x41b6a6
  41b686:	das    
  41b687:	retf   
  41b688:	xlat   BYTE PTR ds:[ebx]
  41b689:	sbb    DWORD PTR [ebx-0x79e12fbe],edx
  41b68f:	lock dec ebp
  41b691:	mov    dl,0xa9
  41b693:	add    eax,0xe1a3566e
  41b698:	jge    0x41b61f
  41b69a:	mov    dh,0xe7
  41b69c:	sbb    bh,BYTE PTR [ebp+ecx*8-0x28]
  41b6a0:	mov    fs,WORD PTR [ebp-0x3d953197]
  41b6a6:	pop    ebx
  41b6a7:	mov    dl,0xe6
  41b6a9:	pop    ecx
  41b6aa:	dec    eax
  41b6ab:	xchg   BYTE PTR [eax],cl
  41b6ad:	test   eax,ecx
  41b6af:	fstp   TBYTE PTR [edi-0x59]
  41b6b2:	ins    DWORD PTR es:[edi],dx
  41b6b3:	inc    eax
  41b6b4:	pop    ss
  41b6b5:	outs   dx,BYTE PTR ds:[esi]
  41b6b6:	aas    
  41b6b7:	int3   
  41b6b8:	rcr    edx,1
  41b6ba:	sub    edx,DWORD PTR [ecx+esi*4+0x5af9777c]
  41b6c1:	cmp    eax,0xe5949f
  41b6c6:	test   edx,ecx
  41b6c8:	push   esi
  41b6c9:	jns    0x41b65c
  41b6cb:	pop    es
  41b6cc:	xchg   ebx,eax
  41b6cd:	push   esp
  41b6ce:	mov    WORD PTR [edx+ebx*4+0x1b],?
  41b6d2:	loope  0x41b715
  41b6d4:	ins    DWORD PTR es:[edi],dx
  41b6d5:	xchg   edx,eax
  41b6d6:	retf   
  41b6d7:	cs inc ebp
  41b6d9:	into   
  41b6da:	mov    fs,ebp
  41b6dc:	mov    ch,0x56
  41b6de:	out    0xc2,eax
  41b6e0:	xlat   BYTE PTR ds:[ebx]
  41b6e1:	mov    eax,0xb76d3dba
  41b6e6:	dec    ebp
  41b6e7:	xchg   edi,eax
  41b6e8:	cmp    ch,BYTE PTR [edx]
  41b6ea:	cwde   
  41b6eb:	xchg   esp,eax
  41b6ec:	inc    edx
  41b6ed:	call   0xac3e:0x5f854339
  41b6f4:	es push ss
  41b6f6:	mov    cl,0x6a
  41b6f8:	std    
  41b6f9:	mov    bl,0xb8
  41b6fb:	pop    esp
  41b6fc:	mov    dh,0xc4
  41b6fe:	mov    esp,0x73df76f1
  41b703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b704:	pop    ss
  41b705:	inc    eax
  41b706:	fisub  WORD PTR [edx+0x1c8e2887]
  41b70c:	push   0xffffffad
  41b70e:	ficom  WORD PTR [esi-0x24]
  41b711:	arpl   WORD PTR [ebx],dx
  41b713:	pop    edx
  41b714:	fild   WORD PTR [ebx+0x49]
  41b718:	dec    ebx
  41b719:	mov    dh,BYTE PTR [ecx+0x2b]
  41b71c:	aam    0x9f
  41b71e:	add    BYTE PTR [ecx-0x6d],bl
  41b721:	xchg   ebp,eax
  41b722:	cmp    eax,0x8d086641
  41b727:	jbe    0x41b767
  41b729:	aaa    
  41b72a:	xchg   edx,eax
  41b72b:	sahf   
  41b72c:	scas   al,BYTE PTR es:[edi]
  41b72d:	iret   
  41b72e:	shl    ebp,0xed
  41b731:	inc    esi
  41b732:	sub    BYTE PTR [esp+eiz*4+0x76],dh
  41b736:	addr16 in al,dx
  41b738:	xor    BYTE PTR [ecx-0x10],bh
  41b73b:	loop   0x41b6fb
  41b73d:	jge    0x41b799
  41b73f:	out    dx,eax
  41b740:	jmp    0x1bd544b3
  41b745:	pushf  
  41b746:	les    edi,FWORD PTR [esi-0x36]
  41b749:	jae    0x41b7a3
  41b74b:	pusha  
  41b74c:	jne    0x41b795
  41b74e:	sti    
  41b74f:	jge    0x41b726
  41b751:	shl    edi,0x48
  41b754:	mov    ecx,0xb3302dc5
  41b759:	fimul  DWORD PTR [ecx+eax*2+0x28dde36]
  41b760:	mov    edx,0x999e1449
  41b765:	mov    DWORD PTR ds:0x1b5010bd,eax
  41b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b76c:	or     edi,DWORD PTR [ebx+0x32]
  41b76f:	add    eax,0xab52ef4
  41b774:	outs   dx,BYTE PTR ds:[esi]
  41b775:	bound  esp,QWORD PTR [eax+0x764fc0ee]
  41b77b:	shl    ecx,1
  41b77d:	ins    BYTE PTR es:[edi],dx
  41b77e:	in     eax,dx
  41b77f:	inc    edx
  41b780:	or     eax,0x1d05cbed
  41b785:	adc    eax,0xf85d4ad4
  41b78a:	movaps xmm1,xmm4
  41b78d:	test   DWORD PTR [ebx+0x724fd202],esi
  41b793:	cmp    edx,DWORD PTR [eax]
  41b795:	or     esp,DWORD PTR [eax]
  41b797:	or     ebx,edi
  41b799:	cwde   
  41b79a:	push   ebp
  41b79b:	in     eax,0xdf
  41b79d:	mov    BYTE PTR [ecx],dl
  41b79f:	xchg   DWORD PTR ds:0x32af541e,ebp
  41b7a5:	mov    ch,0x52
  41b7a7:	test   al,0xa7
  41b7a9:	mov    esp,0xc85645a0
  41b7ae:	jbe    0x41b74f
  41b7b0:	test   al,0x9
  41b7b2:	adc    al,0x42
  41b7b4:	push   edi
  41b7b5:	push   ds
  41b7b6:	sub    ebx,esp
  41b7b8:	cli    
  41b7b9:	lgs    eax,FWORD PTR [ecx-0x4c5318e6]
  41b7c0:	fcom   st(6)
  41b7c2:	imul   DWORD PTR [eax+edx*4]
  41b7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c6:	sub    eax,0x6fd5713b
  41b7cb:	adc    eax,0x1802779d
  41b7d0:	inc    edx
  41b7d1:	ins    BYTE PTR es:[edi],dx
  41b7d2:	lods   al,BYTE PTR ds:[esi]
  41b7d3:	push   esp
  41b7d4:	test   al,0xf7
  41b7d6:	mov    ?,WORD PTR [edx]
  41b7d8:	(bad)  
  41b7d9:	dec    eax
  41b7da:	inc    esp
  41b7db:	cmp    eax,0x6b603d5
  41b7e0:	sub    BYTE PTR [edi+ebp*2],al
  41b7e3:	ja     0x41b7c9
  41b7e5:	int3   
  41b7e6:	sub    al,0x1c
  41b7e8:	(bad)  
  41b7e9:	outs   dx,DWORD PTR ds:[esi]
  41b7ea:	xchg   BYTE PTR [edx+0xc80d732],bh
  41b7f0:	mov    bh,0xda
  41b7f2:	aaa    
  41b7f3:	repnz adc DWORD PTR [eax+0x1a22804f],ebx
  41b7fa:	test   al,0x9c
  41b7fc:	std    
  41b7fd:	lea    edx,[edi-0x744933f5]
  41b803:	test   al,0x8d
  41b805:	pop    esp
  41b806:	std    
  41b807:	dec    ecx
  41b808:	inc    ebp
  41b809:	popa   
  41b80a:	push   ss
  41b80b:	sub    ebx,esi
  41b80d:	cdq    
  41b80e:	stos   BYTE PTR es:[edi],al
  41b80f:	adc    esi,0x8ec55b90
  41b815:	loope  0x41b826
  41b817:	jp     0x41b888
  41b819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81a:	retf   
  41b81b:	outs   dx,BYTE PTR ds:[esi]
  41b81c:	mov    eax,ds:0x5fc9811c
  41b821:	cmp    eax,0xd0bfaea6
  41b826:	ret    
  41b827:	inc    ebp
  41b828:	mov    eax,0x75fee61d
  41b82d:	xchg   esp,eax
  41b82e:	pop    eax
  41b82f:	or     DWORD PTR [ebx-0x26eeea5c],edx
  41b835:	push   ecx
  41b836:	lahf   
  41b837:	daa    
  41b838:	(bad)  
  41b839:	push   0x29aedd29
  41b83e:	jns    0x41b87c
  41b840:	loope  0x41b82f
  41b842:	lahf   
  41b843:	xchg   esi,eax
  41b844:	repz jno 0x41b834
  41b847:	jp     0x41b7e9
  41b849:	stos   BYTE PTR es:[edi],al
  41b84a:	pop    eax
  41b84b:	xchg   edi,eax
  41b84c:	mov    eax,0xb7435dd9
  41b851:	(bad)  
  41b852:	aaa    
  41b853:	cmc    
  41b854:	cmc    
  41b855:	mov    al,BYTE PTR [ebp-0x20]
  41b858:	pushf  
  41b859:	fidivr WORD PTR [ebp-0x1d]
  41b85c:	test   DWORD PTR [esi+edx*2-0x55],edi
  41b860:	lahf   
  41b861:	(bad)  fs:[esi+eiz*2-0x4df3b315]
  41b869:	cmp    al,0x80
  41b86b:	shl    BYTE PTR [esi+0x14],cl
  41b86e:	popa   
  41b86f:	pop    ebx
  41b870:	in     al,0x65
  41b872:	xchg   esp,eax
  41b873:	rcl    BYTE PTR ds:0xc71667f4,1
  41b879:	(bad)  [edx+0x71e41609]
  41b87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b880:	and    ecx,DWORD PTR [eax-0x3e]
  41b883:	mov    cl,0xbc
  41b885:	int3   
  41b886:	mov    dh,0x54
  41b888:	cli    
  41b889:	fcmove st,st(3)
  41b88b:	adc    DWORD PTR [edi-0x8],esi
  41b88e:	xor    eax,0x6a14ad2d
  41b893:	mov    ebx,0x9409a6
  41b898:	nop
  41b899:	fwait
  41b89a:	jno    0x41b831
  41b89c:	xchg   ebp,eax
  41b89d:	xchg   edi,eax
  41b89e:	not    DWORD PTR [ebx+0x61389d10]
  41b8a4:	mov    al,ds:0x9683b3b8
  41b8a9:	bnd ss jns 0x41b8f5
  41b8ad:	(bad)  
  41b8af:	and    DWORD PTR [edx+0x65],0x7f07eb49
  41b8b6:	cwde   
  41b8b7:	inc    eax
  41b8b8:	jle    0x41b909
  41b8ba:	sbb    DWORD PTR [edx],esi
  41b8bc:	pop    ecx
  41b8bd:	adc    ecx,DWORD PTR [edi]
  41b8bf:	add    al,0xd9
  41b8c1:	mov    ebp,0xe6947f65
  41b8c6:	xchg   ebx,eax
  41b8c7:	inc    edi
  41b8c8:	sbb    eax,0xaad59fdc
  41b8cd:	stos   BYTE PTR es:[edi],al
  41b8ce:	mov    cl,0x74
  41b8d0:	add    DWORD PTR [ecx],esp
  41b8d2:	dec    edx
  41b8d3:	dec    eax
  41b8d4:	loopne 0x41b8fc
  41b8d6:	add    DWORD PTR [ebp+edi*2-0x23],esi
  41b8da:	loopne 0x41b85f
  41b8dc:	jnp    0x41b89f
  41b8de:	bound  edi,QWORD PTR [esi]
  41b8e0:	jb     0x41b91b
  41b8e2:	jno    0x41b942
  41b8e4:	xchg   cx,ax
  41b8e6:	enter  0x9e11,0x22
  41b8ea:	xchg   ecx,eax
  41b8eb:	jge    0x41b915
  41b8ed:	popa   
  41b8ee:	push   es
  41b8ef:	pop    ebx
  41b8f0:	mov    bh,0xc5
  41b8f2:	ins    DWORD PTR es:[edi],dx
  41b8f3:	dec    ecx
  41b8f4:	xor    ah,cl
  41b8f6:	in     al,0x22
  41b8f8:	mov    bh,0x21
  41b8fa:	iret   
  41b8fb:	ins    DWORD PTR es:[edi],dx
  41b8fc:	push   0xa67d1f94
  41b901:	jl     0x41b8b6
  41b903:	enter  0xecd3,0x41
  41b907:	std    
  41b908:	add    esp,DWORD PTR [edx+0x307458ac]
  41b90e:	dec    esi
  41b90f:	out    dx,al
  41b910:	in     eax,dx
  41b911:	lea    esi,[edi-0x7f]
  41b914:	loopne 0x41b89e
	...
  41b91e:	add    BYTE PTR [eax],al
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x67],ah
  41b92e:	push   cs
  41b92f:	jne    0x41b960
  41b931:	and    BYTE PTR [esi],dh
  41b933:	add    DWORD PTR [eax],eax
  41b935:	lods   eax,DWORD PTR ds:[esi]
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    BYTE PTR [eax],al
  41b93a:	mov    ch,0xe2
  41b93c:	aas    
  41b93d:	push   ebp
  41b93e:	or     eax,0xd13f3ad4
  41b943:	mov    ecx,0x3e32a44f
  41b948:	aas    
  41b949:	enter  0x3ed0,0x75
  41b94d:	js     0x41b983
  41b94f:	aaa    
  41b950:	adc    ch,BYTE PTR [edi+0x5]
  41b953:	cmp    ebx,DWORD PTR [edx+0x445206ff]
  41b959:	mov    ebp,0x5341f04a
  41b95e:	mov    gs,edi
  41b960:	xchg   DWORD PTR [edx],edx
  41b962:	cmp    eax,0x55c3f15f
  41b967:	add    bl,BYTE PTR [ebx-0x5eb6630d]
  41b96d:	in     eax,dx
  41b96e:	xchg   edx,eax
  41b96f:	std    
  41b970:	mov    esp,0x6c34acee
  41b975:	sbb    eax,0xe1a407f9
  41b97a:	sub    DWORD PTR [ebx],eax
  41b97c:	xor    al,0xef
  41b97e:	fsub   QWORD PTR [eax+0x6c]
  41b981:	push   ecx
  41b982:	pop    esp
  41b983:	push   es
  41b984:	mov    ds,WORD PTR [edi+0x20]
  41b987:	mov    bh,0xe0
  41b989:	in     eax,dx
  41b98a:	mov    esp,0x54b465b0
  41b98f:	iret   
  41b990:	loope  0x41ba0c
  41b992:	in     eax,0xce
  41b994:	xchg   BYTE PTR [ebp+0x461d7bbf],bl
  41b99a:	bound  ecx,QWORD PTR [ecx+0x1764e596]
  41b9a0:	aad    0xc3
  41b9a2:	and    ebx,0x21
  41b9a5:	std    
  41b9a6:	cli    
  41b9a7:	sbb    eax,0x69499bd4
  41b9ac:	sub    ebp,eax
  41b9ae:	sub    ah,al
  41b9b0:	sti    
  41b9b1:	loopne 0x41b9d9
  41b9b3:	xor    bh,BYTE PTR [ecx]
  41b9b5:	(bad)  
  41b9b6:	sti    
  41b9b7:	daa    
  41b9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b9:	pusha  
  41b9ba:	pushf  
  41b9bb:	push   ds
  41b9bc:	sti    
  41b9bd:	add    bh,BYTE PTR [esi]
  41b9bf:	and    al,0xe2
  41b9c1:	xchg   ch,ch
  41b9c3:	cld    
  41b9c4:	mov    ds:0x8890fca1,eax
  41b9c9:	aam    0xd7
  41b9cb:	cmp    BYTE PTR [ebx+0x74c273b3],0xab
  41b9d2:	ficomp DWORD PTR [edi+edi*8]
  41b9d5:	ss mov ah,dh
  41b9d8:	mov    cl,ah
  41b9da:	push   eax
  41b9db:	add    BYTE PTR [eax-0x54257004],al
  41b9e1:	jmp    0x84a6b442
  41b9e6:	jns    0x41b9af
  41b9e8:	sbb    al,0xe2
  41b9ea:	js     0x41ba23
  41b9ec:	add    eax,0xf0f72564
  41b9f1:	adc    eax,0x80bd11d4
  41b9f6:	out    dx,al
  41b9f7:	inc    ebp
  41b9f8:	cmp    ecx,0xf3d81bd5
  41b9fe:	xchg   esp,eax
  41b9ff:	pop    edi
  41ba00:	(bad)  
  41ba01:	and    al,0x15
  41ba03:	ja     0x41ba6c
  41ba05:	push   cs
  41ba06:	enter  0x315e,0xd3
  41ba0a:	les    ecx,FWORD PTR [ecx+0x2cb84ae4]
  41ba10:	xchg   ecx,eax
  41ba11:	jns    0x41ba40
  41ba13:	scas   al,BYTE PTR es:[edi]
  41ba14:	retf   
  41ba15:	push   eax
  41ba16:	push   edi
  41ba17:	jmp    0x77cf6d78
  41ba1c:	inc    esi
  41ba1d:	bound  ebx,QWORD PTR [ecx+esi*1-0xe59a2ee]
  41ba24:	ret    
  41ba25:	ja     0x41b9b5
  41ba27:	stos   BYTE PTR es:[edi],al
  41ba28:	inc    edx
  41ba29:	ins    DWORD PTR es:[edi],dx
  41ba2a:	fstp   st(0)
  41ba2c:	push   esp
  41ba2d:	or     al,0x7f
  41ba2f:	outs   dx,BYTE PTR ds:[esi]
  41ba30:	adc    BYTE PTR [edi-0x79],ah
  41ba33:	ds fucom st(4)
  41ba36:	out    0xf7,al
  41ba38:	lock inc ecx
  41ba3a:	setge  BYTE PTR [edx-0x6e4b07f1]
  41ba41:	test   al,0xfe
  41ba43:	lods   eax,DWORD PTR ds:[esi]
  41ba44:	or     ebx,DWORD PTR [ebp-0x59143ee7]
  41ba4a:	pop    edi
  41ba4b:	rcr    BYTE PTR [ebx-0x349a1b32],0xf5
  41ba52:	mov    eax,ds:0x263ae896
  41ba57:	sub    eax,0x5e5951b9
  41ba5c:	test   DWORD PTR [edi],edx
  41ba5e:	sbb    ebp,DWORD PTR [edx-0x48958257]
  41ba64:	(bad)  
  41ba65:	sub    eax,0x4c09676d
  41ba6a:	and    ebp,ebp
  41ba6c:	jg     0x41ba31
  41ba6e:	cdq    
  41ba6f:	aam    0xe7
  41ba71:	(bad)  
  41ba72:	dec    esi
  41ba73:	dec    esp
  41ba74:	out    0xf6,eax
  41ba76:	xor    BYTE PTR [ebp+0x5],bh
  41ba79:	imul   esp,ecx,0xffffffde
  41ba7c:	cmp    eax,0xe5e35a7a
  41ba81:	rcl    eax,0x40
  41ba84:	cmp    DWORD PTR [ebx+0x1ee6a59f],0x1dc6d74e
  41ba8e:	(bad)  
  41ba8f:	jmp    0x5f5798d8
  41ba94:	inc    esp
  41ba95:	mov    bh,0x31
  41ba97:	stc    
  41ba98:	xchg   esp,eax
  41ba99:	es mov ecx,0xe736d3ff
  41ba9f:	(bad)  
  41baa0:	inc    ecx
  41baa1:	push   ebx
  41baa2:	add    edi,DWORD PTR [ecx]
  41baa4:	retf   0xf7c
  41baa7:	repz pop es
  41baa9:	es mov edi,ebp
  41baac:	sbb    ebp,edi
  41baae:	hlt    
  41baaf:	sti    
  41bab0:	repnz and esi,ebp
  41bab3:	push   eax
  41bab4:	ins    BYTE PTR es:[edi],dx
  41bab5:	push   edi
  41bab6:	retf   0x1e0f
  41bab9:	ret    
  41baba:	adc    BYTE PTR [edi+0x3e],bl
  41babd:	push   esi
  41babe:	dec    esp
  41babf:	inc    esi
  41bac0:	cmp    eax,0x63b38ed
  41bac5:	mov    ds:0xc590b5a8,al
  41baca:	push   esi
  41bacb:	jmp    0x41ba88
  41bacd:	or     DWORD PTR [esp+esi*1+0x39],ebx
  41bad1:	enter  0x5de2,0x79
  41bad5:	retf   
  41bad6:	(bad)  
  41bad7:	jecxz  0x41ba6a
  41bad9:	(bad)  
  41bada:	mov    eax,ds:0xf1045a9d
  41badf:	mov    edx,0x29c4b44d
  41bae4:	mov    WORD PTR [eax+0x7d211654],es
  41baea:	rol    bh,1
  41baec:	pop    ebp
  41baee:	dec    edx
  41baef:	lds    esi,FWORD PTR [ebp+esi*8-0x7a49a0b0]
  41baf6:	sub    DWORD PTR [esi+0x11],edi
  41baf9:	and    al,0x20
  41bafb:	add    al,0x36
  41bafd:	sub    dh,BYTE PTR [edx+0x74]
  41bb00:	imul   esp,DWORD PTR [edi],0x68
  41bb03:	lea    ecx,[edi]
  41bb05:	fs dec edx
  41bb07:	inc    ebp
  41bb08:	mov    bl,0x19
  41bb0a:	jecxz  0x41ba95
  41bb0c:	sbb    ecx,DWORD PTR [ebp+0x3d]
  41bb0f:	shl    dh,1
  41bb11:	loop   0x41bb52
  41bb13:	icebp  
  41bb14:	and    BYTE PTR [edi],cl
  41bb16:	add    eax,DWORD PTR [eax+eiz*8]
  41bb19:	test   eax,0xbfefa5d6
  41bb1e:	pop    eax
  41bb1f:	daa    
  41bb20:	call   0xa0bb:0xd2b041e
  41bb27:	pop    esi
  41bb28:	dec    ebx
  41bb29:	adc    bh,BYTE PTR [ecx+0x7627d144]
  41bb2f:	cs addr16 mov ebx,0xc6d8b0cb
  41bb36:	inc    eax
  41bb37:	icebp  
  41bb38:	sbb    ebx,edx
  41bb3a:	ins    BYTE PTR es:[edi],dx
  41bb3b:	sub    bl,BYTE PTR [eax+ebp*8+0x7aae6bca]
  41bb42:	cdq    
  41bb43:	pop    ebx
  41bb44:	fcom   QWORD PTR [eax-0xecc6479]
  41bb4a:	xchg   ecx,eax
  41bb4b:	sar    DWORD PTR [ecx-0x64],0xf
  41bb4f:	mov    edi,0xca24d4ca
  41bb54:	std    
  41bb55:	inc    edi
  41bb56:	repnz or eax,0xc30de3d3
  41bb5c:	aad    0x72
  41bb5e:	(bad)  
  41bb5f:	nop
  41bb60:	in     eax,0xf3
  41bb62:	shl    BYTE PTR [esi],1
  41bb64:	repz dec ebp
  41bb66:	pop    edi
  41bb67:	pop    esi
  41bb68:	cmp    bl,ah
  41bb6a:	rcr    BYTE PTR [ebx+ebx*1],0x8e
  41bb6e:	inc    edx
  41bb6f:	add    DWORD PTR [esi+0x67df8668],0x8
  41bb76:	pushf  
  41bb77:	ds mov ch,0xfe
  41bb7a:	aam    0xf0
  41bb7c:	mov    ds,WORD PTR [ebp+edx*1-0x12]
  41bb80:	cdq    
  41bb81:	mov    BYTE PTR [ecx-0x22],cl
  41bb84:	mov    cl,0xd
  41bb86:	sub    eax,0xcbcb09a0
  41bb8b:	mov    ah,0x45
  41bb8d:	or     al,0x44
  41bb8f:	(bad)  
  41bb90:	push   esp
  41bb91:	leave  
  41bb92:	sub    DWORD PTR fs:[ecx],esi
  41bb95:	aad    0x5b
  41bb97:	mov    edi,0x24e56955
  41bb9c:	push   0xfffffffa
  41bb9e:	lods   eax,DWORD PTR ds:[esi]
  41bb9f:	push   es
  41bba0:	jne    0x41bba5
  41bba2:	and    BYTE PTR [eax-0x319aa6d],al
  41bba8:	jle    0x41bbf8
  41bbaa:	jb     0x41bb43
  41bbac:	and    cl,BYTE PTR [eax+0x5c]
  41bbaf:	jbe    0x41bbee
  41bbb1:	cld    
  41bbb2:	imul   eax,edi,0x7b3170f8
  41bbb8:	and    bl,bh
  41bbba:	dec    ebp
  41bbbb:	loop   0x41bb5c
  41bbbd:	dec    edx
  41bbbe:	(bad)  
  41bbbf:	ficomp WORD PTR [ecx+ebp*8-0x39ce92ae]
  41bbc6:	call   0xdd4a:0x422d793d
  41bbcd:	movddup xmm1,xmm0
  41bbd1:	cmp    esi,DWORD PTR [ecx]
  41bbd3:	sub    ebp,DWORD PTR [ecx-0x1f843f5f]
  41bbd9:	jle    0x41bba0
  41bbdb:	xchg   DWORD PTR [edx],esi
  41bbdd:	clc    
  41bbde:	or     ebp,DWORD PTR [ecx-0x23113ab8]
  41bbe4:	or     DWORD PTR [ecx+edx*8+0x5fbced0f],ebp
  41bbeb:	test   al,0x72
  41bbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbee:	outs   dx,DWORD PTR ds:[esi]
  41bbef:	jmp    0x9050:0x91a068fc
  41bbf6:	and    al,0xf5
  41bbf8:	cwde   
  41bbf9:	sbb    BYTE PTR [ecx-0x17],ch
  41bbfc:	jg     0x41bc7d
  41bbfe:	inc    esi
  41bbff:	cmp    BYTE PTR [esi-0x72],0x66
  41bc03:	int3   
  41bc04:	jmp    0xa23:0x152f8569
  41bc0b:	xor    eax,DWORD PTR [edi]
  41bc0d:	mov    WORD PTR [ecx+edi*8],?
  41bc10:	xor    eax,DWORD PTR [eax+0x7c]
  41bc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc14:	vpmullw xmm7,xmm6,XMMWORD PTR [edx+0x7ad23f2]
  41bc1c:	or     eax,0x73c7497c
  41bc21:	inc    esp
  41bc22:	es xchg esi,eax
  41bc24:	add    eax,0x4a957be1
  41bc29:	mov    ds:0xeebb0f2a,al
  41bc2e:	sub    DWORD PTR [ebx+ebx*2],ecx
  41bc31:	shr    DWORD PTR [esi+0x4e],1
  41bc34:	sub    eax,0xf743e279
  41bc39:	btr    DWORD PTR [eax],ebx
  41bc3c:	jmp    0x4748:0xf7a0a001
  41bc43:	push   ebx
  41bc44:	lods   eax,DWORD PTR ds:[esi]
  41bc45:	inc    ecx
  41bc46:	jecxz  0x41bc97
  41bc48:	jle    0x41bc4c
  41bc4a:	sbb    DWORD PTR [edx-0x4970017a],esi
  41bc50:	int    0x2b
  41bc52:	cs cmp ecx,ebp
  41bc55:	neg    DWORD PTR [ecx-0x6061b1b2]
  41bc5b:	dec    edi
  41bc5c:	call   0xef660805
  41bc61:	call   0x5e434753
  41bc66:	mov    eax,0x321359d7
  41bc6b:	sub    DWORD PTR ds:0xaaec81d3,edi
  41bc71:	sub    BYTE PTR [eax+0x107ce73f],bh
  41bc77:	lahf   
  41bc78:	imul   esp,DWORD PTR [eax-0x10],0x69d40838
  41bc7f:	mov    ebx,0x204740ee
  41bc84:	frndint 
  41bc86:	add    al,BYTE PTR [eax-0x7c]
  41bc89:	dec    esi
  41bc8a:	add    al,0x14
  41bc8c:	loope  0x41bcba
  41bc8e:	hlt    
  41bc8f:	or     DWORD PTR [esp+edi*2-0x6b],edx
  41bc93:	jg     0x41bc4a
  41bc95:	dec    ebp
  41bc96:	(bad)  
  41bc97:	jg     0x41bc6a
  41bc99:	sbb    esi,DWORD PTR [ebp+ebx*8-0x552f835b]
  41bca0:	lods   al,BYTE PTR ds:[esi]
  41bca1:	test   al,0xfa
  41bca3:	push   edi
  41bca4:	jmp    0x99c0:0x69026564
  41bcab:	mov    bh,0x5b
  41bcad:	inc    edi
  41bcae:	test   eax,0x726dd72a
  41bcb3:	jg     0x41bd10
  41bcb5:	loop   0x41bd16
  41bcb7:	xor    ax,0x6014
  41bcbb:	aad    0x57
  41bcbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcbe:	hlt    
  41bcbf:	repz fimul WORD PTR [ecx+ebx*1+0x2f]
  41bcc4:	loop   0x41bcd1
  41bcc6:	repnz push edi
  41bcc8:	js     0x41bd34
  41bcca:	les    ebx,FWORD PTR [esi-0x6ab1bbf2]
  41bcd0:	mov    ebx,0xd4428fa7
  41bcd5:	push   edi
  41bcd6:	cs adc eax,0xf8e505c0
  41bcdc:	cmp    al,0x61
  41bcde:	call   0x9cf7:0xa6b47d21
  41bce5:	jne    0x41bce7
	...
  41bcef:	add    BYTE PTR [eax],al
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	in     al,0x20
  41bcff:	ja     0x41bd68
  41bd01:	int    0x39
  41bd03:	add    DWORD PTR [eax],eax
  41bd05:	lods   eax,DWORD PTR ds:[esi]
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [esi-0x32dfe68e],bh
  41bd0e:	mov    BYTE PTR [ecx+ecx*2-0x46],bl
  41bd12:	adc    BYTE PTR [esi+0x26],al
  41bd15:	cmp    BYTE PTR [eax],ch
  41bd17:	jmp    0x8f18:0xa13743d3
  41bd1e:	fnstcw WORD PTR [eax-0x2d65871c]
  41bd24:	jge    0x41bcd9
  41bd26:	pop    ds
  41bd27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd28:	sub    DWORD PTR [eax-0x7d],eax
  41bd2b:	and    eax,0x1129cec6
  41bd30:	cli    
  41bd31:	sub    esi,DWORD PTR [esi]
  41bd33:	rcpps  xmm4,xmm7
  41bd36:	pop    eax
  41bd37:	in     eax,0x3c
  41bd39:	xchg   BYTE PTR [edx-0x2d],ch
  41bd3c:	mov    al,ds:0xab7a6fb3
  41bd41:	or     eax,0x56c22f36
  41bd46:	adc    DWORD PTR [ecx],esp
  41bd48:	inc    eax
  41bd49:	jno    0x41bd4d
  41bd4b:	jge    0x41bd9d
  41bd4d:	mov    bl,0xab
  41bd4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd50:	popf   
  41bd51:	lods   eax,DWORD PTR ds:[esi]
  41bd52:	push   0xa59c8118
  41bd57:	mov    eax,0x8e34ae53
  41bd5c:	dec    esp
  41bd5d:	or     esi,ecx
  41bd5f:	in     eax,dx
  41bd60:	xor    al,0xeb
  41bd62:	xor    eax,0xcce18959
  41bd67:	push   ds
  41bd68:	cmp    eax,0xe2779f92
  41bd6d:	cmp    al,0x2b
  41bd6f:	stc    
  41bd70:	xchg   BYTE PTR [ebx+eax*8],bh
  41bd73:	xchg   edi,eax
  41bd74:	cmp    ah,ch
  41bd76:	popa   
  41bd77:	mov    ch,0x22
  41bd79:	push   cs
  41bd7a:	add    BYTE PTR [eax],ch
  41bd7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd7d:	xchg   BYTE PTR [ebp+0x44],dh
  41bd80:	pop    ds
  41bd81:	mov    ebp,0x63e2c8a1
  41bd86:	mov    cl,0x70
  41bd88:	inc    edi
  41bd89:	sub    BYTE PTR [ebp-0x77],bh
  41bd8c:	and    ch,BYTE PTR [ecx]
  41bd8e:	sub    eax,0xac4a20d
  41bd93:	dec    edx
  41bd94:	addr16 loopne 0x41bdac
  41bd97:	in     al,dx
  41bd98:	adc    ah,BYTE PTR [esi+0x44]
  41bd9b:	mov    ch,0x91
  41bd9d:	loopne 0x41bd2c
  41bd9f:	push   eax
  41bda0:	je     0x41bde8
  41bda2:	pop    edi
  41bda3:	(bad)  
  41bda4:	rcl    DWORD PTR [eax+0x42],cl
  41bda7:	into   
  41bda8:	je     0x41bd81
  41bdaa:	jnp    0x41bd78
  41bdac:	out    dx,al
  41bdad:	icebp  
  41bdae:	in     eax,0x63
  41bdb0:	lods   al,BYTE PTR ds:[esi]
  41bdb1:	ds hlt 
  41bdb3:	mov    cl,0x91
  41bdb5:	daa    
  41bdb6:	(bad)  
  41bdb7:	cdq    
  41bdb8:	inc    ebx
  41bdb9:	es pop edi
  41bdbb:	mov    bh,0xf1
  41bdbd:	xchg   edi,eax
  41bdbe:	ins    BYTE PTR es:[edi],dx
  41bdbf:	cmp    al,0x4
  41bdc1:	jp     0x41bd5f
  41bdc3:	call   0x19b:0xa8c419f
  41bdca:	stc    
  41bdcb:	fmul   QWORD PTR [ebx+edi*1+0x38]
  41bdcf:	or     DWORD PTR [edx+0x3f],eax
  41bdd2:	jecxz  0x41bde0
  41bdd4:	and    DWORD PTR [ecx-0x4c624ef8],esi
  41bdda:	cmc    
  41bddb:	idiv   BYTE PTR [ebp-0x20243950]
  41bde1:	adc    DWORD PTR [edx-0x5d],esi
  41bde4:	cmc    
  41bde5:	cmp    al,0xd5
  41bde7:	pop    ebx
  41bde8:	xchg   esp,eax
  41bde9:	xchg   ebx,eax
  41bdea:	fwait
  41bdeb:	mov    bl,0xf
  41bded:	lock cld 
  41bdef:	addr16 daa 
  41bdf1:	int    0xe4
  41bdf3:	jne    0x41bddc
  41bdf5:	test   DWORD PTR [ebp-0x56],edx
  41bdf8:	cmp    eax,0x451f68d7
  41bdfd:	ds aam 0x6e
  41be00:	clc    
  41be01:	imul   esi,esp,0x48ffe8bc
  41be07:	les    edi,FWORD PTR [ebx-0xe72e8f4]
  41be0d:	inc    edi
  41be0e:	jns    0x41bdd7
  41be10:	jae    0x41be4a
  41be12:	sub    ch,0x6b
  41be15:	jnp    0x41be10
  41be17:	jg     0x41be74
  41be19:	repz mov cl,0x1d
  41be1c:	stc    
  41be1d:	mov    ah,0x5d
  41be1f:	inc    edx
  41be20:	nop
  41be21:	mov    bh,0xea
  41be23:	shl    edi,1
  41be25:	inc    edx
  41be26:	xchg   edi,eax
  41be27:	fimul  DWORD PTR [eax]
  41be29:	shr    BYTE PTR [ebx-0x51],1
  41be2c:	and    eax,DWORD PTR [esi]
  41be2e:	aad    0xd0
  41be30:	push   ds
  41be31:	sbb    DWORD PTR [ecx+0x7472788],ebp
  41be37:	hlt    
  41be38:	(bad)  
  41be39:	jo     0x41be33
  41be3b:	loopne 0x41be8e
  41be3d:	xlat   BYTE PTR ds:[ebx]
  41be3e:	mov    ebp,0xd09f835d
  41be43:	mov    esp,0x79537f33
  41be48:	ret    
  41be49:	stc    
  41be4a:	cmp    eax,DWORD PTR [ebp+0x19]
  41be4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4e:	mov    bh,0xc1
  41be50:	les    edx,FWORD PTR ds:0xb93fe638
  41be56:	loop   0x41bebf
  41be58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be59:	sub    DWORD PTR ds:0x9ae640f8,edi
  41be5f:	and    esp,edx
  41be61:	ret    
  41be62:	inc    esp
  41be63:	inc    ecx
  41be64:	jne    0x41be23
  41be66:	jmp    0xa4039798
  41be6b:	sub    edx,DWORD PTR [ebp-0x7c6d8210]
  41be71:	call   DWORD PTR [edi-0x29a37c1b]
  41be77:	xchg   edi,eax
  41be78:	mov    es,WORD PTR [ecx+ecx*1]
  41be7b:	repnz call 0xe914:0xa0661c0d
  41be83:	ds jl  0x41be47
  41be86:	test   eax,0xde69f14f
  41be8b:	fidiv  DWORD PTR [eax+0x5b]
  41be8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be8f:	adc    BYTE PTR [esi+0x4c5d0f11],dh
  41be95:	in     eax,dx
  41be96:	int3   
  41be97:	rol    BYTE PTR [ecx+esi*2],cl
  41be9a:	mov    edi,0xd7c0d659
  41be9f:	scas   al,BYTE PTR es:[edi]
  41bea0:	int3   
  41bea1:	ret    
  41bea2:	out    0x18,al
  41bea4:	in     al,dx
  41bea5:	cmp    eax,0x79015b1a
  41beaa:	rcr    BYTE PTR [esi],cl
  41beac:	fisttp WORD PTR [ecx]
  41beae:	and    DWORD PTR [ecx+0x48781e2a],eax
  41beb4:	shr    ah,1
  41beb6:	lds    edx,FWORD PTR [ecx-0x57]
  41beb9:	xchg   esp,eax
  41beba:	jmp    0xe85f6f41
  41bebf:	call   0x441b:0x13f9de1
  41bec6:	dec    ebp
  41bec7:	call   0x19112d3f
  41becc:	mov    ah,0xe
  41bece:	dec    esp
  41becf:	push   ecx
  41bed0:	mov    ebp,0x32b55b76
  41bed5:	aas    
  41bed6:	and    dl,BYTE PTR [ecx+ecx*4+0x7a]
  41beda:	dec    edx
  41bedb:	stos   DWORD PTR es:[edi],eax
  41bedc:	(bad)
  41bedf:	push   eax
  41bee0:	loope  0x41bee4
  41bee2:	mov    esp,DWORD PTR ds:0x11bf256d
  41bee8:	sub    edi,ecx
  41beea:	sar    bh,0xcc
  41beed:	icebp  
  41beee:	ins    DWORD PTR es:[edi],dx
  41beef:	lods   eax,DWORD PTR ds:[esi]
  41bef0:	inc    esi
  41bef1:	push   es
  41bef2:	outs   dx,DWORD PTR ds:[esi]
  41bef3:	mov    ebp,0x93174eb3
  41bef8:	push   esi
  41bef9:	fsubr  QWORD PTR [ebx+ebx*1-0x4d85bb88]
  41bf00:	cmp    al,0x76
  41bf02:	fmul   DWORD PTR [edx]
  41bf04:	(bad)  
  41bf05:	mov    eax,0x73bba85d
  41bf0a:	push   eax
  41bf0b:	or     BYTE PTR [edi],bl
  41bf0d:	inc    ebp
  41bf0e:	push   0xffffff97
  41bf10:	pop    dx
  41bf12:	(bad)  [ebx+0x49]
  41bf15:	sub    DWORD PTR [eax+eiz*2+0x28],ecx
  41bf19:	stos   BYTE PTR es:[edi],al
  41bf1a:	and    bh,al
  41bf1c:	mov    al,ds:0xcb195eec
  41bf21:	ins    BYTE PTR es:[edi],dx
  41bf22:	add    DWORD PTR [ecx-0x2d72b9a9],ebp
  41bf28:	sbb    eax,0xa86f3ec9
  41bf2d:	mov    eax,ds:0x5e2f0c85
  41bf32:	sbb    ah,al
  41bf34:	stos   BYTE PTR es:[edi],al
  41bf35:	inc    eax
  41bf36:	ins    DWORD PTR es:[edi],dx
  41bf37:	xchg   edi,eax
  41bf38:	sbb    ah,BYTE PTR [ebp-0x77097fd7]
  41bf3e:	dec    edx
  41bf3f:	stc    
  41bf40:	(bad)
  41bf45:	push   0xa64d9bdb
  41bf4a:	push   esi
  41bf4b:	mov    WORD PTR [eax+0x2e2e7b5e],ds
  41bf51:	pop    edi
  41bf52:	ins    DWORD PTR es:[edi],dx
  41bf53:	or     BYTE PTR [ecx+0x48],ah
  41bf56:	mov    esi,0xfb3d08b0
  41bf5b:	loopne 0x41bee8
  41bf5d:	jne    0x41bf7e
  41bf5f:	jno    0x41bfcc
  41bf61:	and    bh,ah
  41bf63:	pusha  
  41bf64:	inc    ecx
  41bf65:	into   
  41bf66:	adc    edx,eax
  41bf68:	mov    edx,0xb34ca292
  41bf6d:	arpl   WORD PTR [edx+0x19439ad6],cx
  41bf73:	(bad)  
  41bf74:	loop   0x41bf05
  41bf76:	cmp    eax,DWORD PTR [edi+edx*8]
  41bf79:	push   esi
  41bf7a:	iret   
  41bf7b:	add    BYTE PTR [edx-0x47fadc2e],ch
  41bf81:	fidivr WORD PTR [ebp-0xc]
  41bf84:	fnsave [ebx-0x29734e42]
  41bf8a:	and    al,BYTE PTR [edx+0x20]
  41bf8d:	xlat   BYTE PTR ds:[ebx]
  41bf8e:	jle    0x41bf26
  41bf90:	push   esi
  41bf91:	push   ecx
  41bf92:	sbb    edi,eax
  41bf94:	mov    bh,BYTE PTR [edi-0x601b4570]
  41bf9a:	jno    0x41bf86
  41bf9c:	arpl   WORD PTR [ebx],dx
  41bf9e:	js     0x41bf8c
  41bfa0:	push   0x26
  41bfa2:	push   edi
  41bfa3:	les    esp,FWORD PTR [ebp+0x50]
  41bfa6:	jp     0x41bf8e
  41bfa8:	push   ds
  41bfa9:	cmove  edi,DWORD PTR [ecx]
  41bfac:	mov    BYTE PTR [edx+0x6e4df7a0],bh
  41bfb2:	punpcklwd mm3,mm4
  41bfb5:	(bad)  
  41bfb6:	(bad)  
  41bfb7:	jge    0x41bf88
  41bfb9:	imul   ecx,DWORD PTR [edx+0x5f],0xffffffc5
  41bfbd:	dec    esi
  41bfbe:	sub    eax,0x4f52a2d9
  41bfc3:	mov    ebp,0xab553c88
  41bfc8:	xor    al,0x72
  41bfca:	push   ebx
  41bfcb:	dec    ebp
  41bfcc:	lods   al,BYTE PTR ds:[esi]
  41bfcd:	dec    edi
  41bfce:	sbb    cl,ah
  41bfd0:	adc    eax,0x2a5db9a7
  41bfd5:	inc    ebx
  41bfd6:	(bad)  
  41bfd7:	mov    cl,0xcf
  41bfd9:	cmp    al,0x2
  41bfdb:	push   edi
  41bfdc:	inc    esi
  41bfdd:	inc    ebx
  41bfde:	xchg   BYTE PTR [eax],bl
  41bfe0:	cmp    bh,BYTE PTR [ebx-0x6956d685]
  41bfe6:	mov    WORD PTR ds:0x9af5f3fc,?
  41bfec:	pop    ds
  41bfed:	int    0x16
  41bfef:	fist   WORD PTR [edx-0x3d5504d]
  41bff5:	int3   
  41bff6:	lea    edx,[ebp-0x11]
  41bff9:	adc    BYTE PTR [ecx+0x7f],0xbb
  41bffd:	ret    0xef03
  41c000:	arpl   dx,ax
  41c002:	jo     0x41c043
  41c004:	mov    ds:0x86ca39ab,eax
  41c009:	sbb    esp,DWORD PTR [ecx+0x4d2eb176]
  41c00f:	stc    
  41c010:	fbstp  TBYTE PTR [ebp+0x36]
  41c013:	lds    edi,FWORD PTR [edi+0x40]
  41c016:	pop    ds
  41c017:	and    al,0xf5
  41c019:	cmp    ebp,DWORD PTR [edx-0x5f477bee]
  41c01f:	data16 ja 0x41c02f
  41c022:	jmp    0xcb86:0xac1cd9b8
  41c029:	outs   dx,DWORD PTR ds:[esi]
  41c02a:	stos   DWORD PTR es:[edi],eax
  41c02b:	push   ecx
  41c02c:	sub    eax,0xe1ba7ce3
  41c031:	mov    esp,0x531a3d04
  41c036:	inc    ecx
  41c037:	inc    ecx
  41c038:	mov    al,0x74
  41c03a:	fcmovne st,st(1)
  41c03c:	(bad)  
  41c03e:	xchg   DWORD PTR [edx-0x35],ecx
  41c041:	daa    
  41c042:	jge    0x41c04a
  41c044:	or     esp,esp
  41c046:	inc    esi
  41c047:	adc    al,0x33
  41c049:	pushf  
  41c04a:	imul   edi,DWORD PTR [edi+esi*8],0x74
  41c04e:	mov    bh,0xd6
  41c050:	dec    edi
  41c051:	adc    bl,0xc
  41c054:	imul   DWORD PTR [ebx+eiz*8-0x5090963e]
  41c05b:	test   DWORD PTR [edi+0x57],ebx
  41c05e:	cmp    bh,BYTE PTR [edi-0x4c2c82dc]
  41c064:	mov    esp,0xe448eae8
  41c069:	jmp    0x41c069
  41c06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06c:	sub    eax,0x1510d530
  41c071:	lea    esp,[esi+0x348acb62]
  41c077:	xchg   ebx,eax
  41c078:	jmp    0x41c09b
  41c07a:	mov    edx,0xac371c82
  41c07f:	neg    BYTE PTR [edi+edx*4+0x103cf3c5]
  41c086:	shl    BYTE PTR [ecx-0x8],1
  41c089:	sub    DWORD PTR [ebx],esp
  41c08b:	pop    ss
  41c08c:	rep stos DWORD PTR es:[edi],eax
  41c08e:	in     eax,0xb3
  41c090:	das    
  41c091:	popa   
  41c092:	push   esp
  41c093:	adc    BYTE PTR [edi],0x28
  41c096:	not    DWORD PTR [ecx+ecx*4-0x3a]
  41c09a:	mov    eax,DWORD PTR [edi+0x70]
  41c09d:	loopne 0x41c107
  41c09f:	mov    ds:0x65ebcf56,eax
  41c0a4:	pop    es
  41c0a5:	shr    ecx,1
  41c0a7:	in     eax,dx
  41c0a8:	xchg   bl,ch
  41c0aa:	shl    al,1
  41c0ac:	cmp    al,0x7e
  41c0ae:	(bad)  
  41c0af:	rcl    BYTE PTR [edi],1
  41c0b1:	popa   
  41c0b2:	ss int3 
  41c0b4:	call   0x0:0x21
  41c0bb:	add    BYTE PTR [eax],al
  41c0bd:	add    BYTE PTR [eax],al
  41c0bf:	add    BYTE PTR [eax],al
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1+0x1]
  41c0ce:	mov    dh,0xa7
  41c0d0:	idiv   BYTE PTR [edx+0x3d]
  41c0d3:	add    DWORD PTR [eax],eax
  41c0d5:	lods   eax,DWORD PTR ds:[esi]
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [edx],al
  41c0da:	addr16 pop esi
  41c0dc:	aam    0x42
  41c0de:	in     al,dx
  41c0df:	xchg   ebx,eax
  41c0e0:	sbb    al,0xe3
  41c0e2:	adc    bh,0x86
  41c0e5:	test   DWORD PTR [ecx-0x51],esi
  41c0e8:	ja     0x41c117
  41c0ea:	in     al,dx
  41c0eb:	jecxz  0x41c0eb
  41c0ed:	push   ds
  41c0ee:	fimul  WORD PTR [eax-0x727d50eb]
  41c0f4:	sbb    eax,0x50494a5e
  41c0f9:	mov    eax,ds:0x3e129e73
  41c0fe:	xor    edx,eax
  41c100:	leave  
  41c101:	in     eax,dx
  41c102:	fistp  DWORD PTR ds:0xe1545282
  41c108:	aas    
  41c109:	or     esi,edi
  41c10b:	mov    al,0x22
  41c10d:	mov    ch,0x21
  41c10f:	mov    dh,0xb2
  41c111:	mov    ebp,0x70f06a92
  41c116:	loope  0x41c115
  41c118:	shl    DWORD PTR [esi-0x51],cl
  41c11b:	lock call 0x898e:0x61f00f2e
  41c123:	ret    0x9ac0
  41c126:	or     eax,0xf42e23df
  41c12b:	or     al,BYTE PTR [ebp+0x40c50c4]
  41c131:	test   bl,bh
  41c133:	add    eax,0x7363cd16
  41c138:	hlt    
  41c139:	(bad)  
  41c13a:	mov    eax,0x3ff08f88
  41c13f:	xchg   DWORD PTR [edx+0x2374fe0a],edi
  41c145:	xchg   esi,eax
  41c146:	mov    ah,0xa7
  41c148:	or     al,0xa5
  41c14a:	inc    eax
  41c14b:	rcl    BYTE PTR [esi-0x523f68f2],0x39
  41c152:	mov    ebp,0x6c434fda
  41c157:	push   0x8101aa36
  41c15c:	add    DWORD PTR [esi+edx*1-0x692ff419],0x179e5d86
  41c167:	int3   
  41c168:	inc    edx
  41c169:	es pop esp
  41c16b:	push   ebx
  41c16c:	aaa    
  41c16d:	cwde   
  41c16e:	adc    ebx,DWORD PTR [ebp+0x15a06b2c]
  41c174:	inc    ebp
  41c175:	jle    0x41c1e0
  41c177:	dec    edx
  41c178:	inc    edx
  41c179:	cli    
  41c17a:	jne    0x41c11d
  41c17c:	setg   BYTE PTR [ecx+ebp*2]
  41c180:	ficomp WORD PTR [eax-0x8c989b7]
  41c186:	(bad)  
  41c187:	fsubr  QWORD PTR ds:0x1f5d7b4
  41c18d:	pop    edx
  41c18e:	aaa    
  41c18f:	rcl    DWORD PTR [ebx],0x63
  41c192:	or     bl,ch
  41c194:	add    al,0x22
  41c196:	cld    
  41c197:	repz push es
  41c199:	clc    
  41c19a:	mov    eax,ds:0xde39c1fd
  41c19f:	(bad)  
  41c1a0:	add    eax,0xbd4bd579
  41c1a6:	jmp    0x41c185
  41c1a8:	ret    0x8c5d
  41c1ab:	popa   
  41c1ac:	in     eax,dx
  41c1ad:	imul   ecx,DWORD PTR [eax+0x3a],0x4c
  41c1b1:	(bad)  [ecx+0x25]
  41c1b4:	std    
  41c1b5:	hlt    
  41c1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b7:	iret   
  41c1b8:	xchg   ebx,eax
  41c1b9:	push   ss
  41c1ba:	(bad)  
  41c1bb:	cmc    
  41c1bc:	jns    0x41c1d2
  41c1be:	je     0x41c22d
  41c1c0:	jmp    0x41c143
  41c1c2:	jne    0x41c172
  41c1c4:	mov    eax,0x3fa6fba7
  41c1c9:	xor    esp,DWORD PTR [esi-0x1db797df]
  41c1cf:	mov    DWORD PTR [ecx+0x4f],0x72c4cd27
  41c1d6:	pop    ebp
  41c1d7:	scas   al,BYTE PTR es:[edi]
  41c1d8:	stc    
  41c1d9:	aaa    
  41c1da:	xchg   DWORD PTR [edi],edi
  41c1dc:	shr    DWORD PTR [eax],1
  41c1de:	dec    eax
  41c1df:	xlat   BYTE PTR ds:[ebx]
  41c1e0:	cmp    BYTE PTR ds:0x15eed9e2,al
  41c1e6:	or     edi,DWORD PTR [edx-0x2b]
  41c1e9:	sub    ecx,DWORD PTR [edi+0x2]
  41c1ec:	push   edi
  41c1ed:	pop    esp
  41c1ee:	push   ebx
  41c1ef:	mov    bl,0x5a
  41c1f1:	out    dx,eax
  41c1f2:	mov    WORD PTR [ecx],gs
  41c1f4:	add    ah,bl
  41c1f6:	popf   
  41c1f7:	mov    esi,0x432a92a4
  41c1fc:	addr16 inc edi
  41c1fe:	addr16 jo 0x41c1fd
  41c201:	mov    ch,0xbd
  41c203:	(bad)  
  41c204:	cmp    ch,BYTE PTR [ecx]
  41c206:	or     al,0x5b
  41c208:	les    ecx,FWORD PTR ds:0x752fcb13
  41c20e:	sub    al,0x72
  41c210:	xchg   edx,eax
  41c211:	pop    ebp
  41c212:	cmp    eax,0xd6283cd2
  41c217:	jecxz  0x41c23b
  41c219:	cld    
  41c21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c21b:	out    0xa4,eax
  41c21d:	mov    edi,0x9c2a2e20
  41c222:	pusha  
  41c223:	mov    edx,ebp
  41c225:	ss test eax,0xedd2d706
  41c22b:	mov    bl,0x92
  41c22d:	mov    ecx,0x702a869
  41c232:	scas   eax,DWORD PTR es:[edi]
  41c233:	and    esp,DWORD PTR [eax-0x3d]
  41c236:	mov    eax,ss
  41c238:	xchg   esp,eax
  41c239:	jmp    0x41c200
  41c23b:	into   
  41c23c:	retf   
  41c23d:	mov    al,ds:0xa20a6b2b
  41c242:	mov    sp,0xc82e
  41c246:	retf   
  41c247:	xchg   edx,eax
  41c248:	sub    al,0x15
  41c24a:	adc    ecx,DWORD PTR [ecx]
  41c24c:	dec    eax
  41c24d:	test   DWORD PTR [esi+0x19b511b3],esi
  41c253:	ror    BYTE PTR [edi],0x52
  41c256:	mov    cl,0xd9
  41c258:	aas    
  41c259:	mov    dl,0xe9
  41c25b:	xlat   BYTE PTR ds:[ebx]
  41c25c:	cwde   
  41c25d:	es jmp 0x41c236
  41c260:	jmp    0x41c28c
  41c262:	int3   
  41c263:	adc    edx,ebx
  41c265:	inc    edi
  41c266:	nop
  41c267:	cmp    DWORD PTR [ebx+0x76],ecx
  41c26a:	ss icebp 
  41c26c:	nop    ecx
  41c26f:	mov    BYTE PTR [ebx+0x7e],bl
  41c272:	sub    BYTE PTR [eax-0x5c],ch
  41c275:	push   cs
  41c276:	(bad)  
  41c278:	or     BYTE PTR [edi],al
  41c27a:	mov    bl,0xaf
  41c27c:	dec    edx
  41c27d:	jmp    eax
  41c27f:	enter  0x58ab,0x1d
  41c283:	test   al,0x1
  41c285:	jecxz  0x41c254
  41c287:	data16 sahf 
  41c289:	lds    eax,FWORD PTR [edi+0x75]
  41c28c:	and    DWORD PTR [ebp+eiz*8+0x0],ecx
  41c290:	rcl    DWORD PTR [eax+0x75c88a2f],0x22
  41c297:	and    al,0x44
  41c299:	mov    cl,0xaa
  41c29b:	out    0x70,eax
  41c29d:	icebp  
  41c29e:	sbb    ebx,DWORD PTR [edi+0x63]
  41c2a1:	fcom   st(3)
  41c2a3:	mov    ch,0x30
  41c2a5:	data16 mov dh,0x33
  41c2a8:	jnp    0x41c2c6
  41c2aa:	mov    eax,ds:0x8ab3a702
  41c2af:	mov    dl,0xbf
  41c2b1:	in     eax,dx
  41c2b2:	(bad)  
  41c2b3:	adc    BYTE PTR ds:0x650093e7,ah
  41c2b9:	or     BYTE PTR [edi],al
  41c2bb:	lods   eax,DWORD PTR ds:[esi]
  41c2bc:	loop   0x41c2ea
  41c2be:	std    
  41c2bf:	mov    dh,BYTE PTR [ebx+0x65]
  41c2c2:	cmp    bh,BYTE PTR [ebp-0x36]
  41c2c5:	fistp  WORD PTR [eax+0x12260bbf]
  41c2cb:	sub    DWORD PTR fs:[ebp+0x25],ebp
  41c2cf:	push   edi
  41c2d0:	and    BYTE PTR [ebx-0x64],bl
  41c2d3:	dec    edi
  41c2d4:	push   esp
  41c2d5:	adc    al,0xc1
  41c2d7:	xor    ebp,DWORD PTR [eax-0x36]
  41c2da:	push   edx
  41c2db:	es sti 
  41c2dd:	add    DWORD PTR [ebx+0x43987c53],edi
  41c2e3:	add    dh,ah
  41c2e5:	xchg   ebp,eax
  41c2e6:	leave  
  41c2e7:	mov    al,ds:0x38c0700f
  41c2ec:	cli    
  41c2ed:	sub    bl,BYTE PTR [esi+ecx*1]
  41c2f0:	(bad)  
  41c2f1:	cmp    esp,ebx
  41c2f3:	sbb    eax,0xf22aa2cf
  41c2f8:	push   ss
  41c2f9:	call   0xa1ea59d4
  41c2fe:	adc    bh,al
  41c300:	fistp  QWORD PTR [ebx]
  41c302:	or     bl,al
  41c304:	xchg   edx,eax
  41c305:	push   0x5a
  41c307:	ret    0xae89
  41c30a:	(bad)
  41c30e:	retf   0xc0c1
  41c311:	dec    edi
  41c312:	arpl   WORD PTR [edi],dx
  41c314:	mov    ebx,0x9552055f
  41c319:	ins    DWORD PTR es:[edi],dx
  41c31a:	or     eax,DWORD PTR ds:0xe048a072
  41c320:	lods   eax,DWORD PTR ds:[esi]
  41c321:	sub    al,0xf9
  41c323:	leave  
  41c324:	stos   DWORD PTR es:[edi],eax
  41c325:	push   ebp
  41c326:	lods   al,BYTE PTR ds:[esi]
  41c327:	dec    ebx
  41c328:	bound  esp,QWORD PTR [esi*1+0x1eea0c58]
  41c32f:	add    bh,ah
  41c331:	in     eax,0xa6
  41c333:	mov    cl,al
  41c335:	data16 gs mov ch,0x67
  41c339:	jns    0x41c3b6
  41c33b:	cld    
  41c33c:	je     0x41c319
  41c33e:	cmp    ebx,edx
  41c340:	or     eax,0x5a8d4bd7
  41c345:	mov    bh,0x6e
  41c347:	mov    ebx,0x68ef9a63
  41c34c:	dec    edi
  41c34d:	jnp    0x41c3c3
  41c34f:	mov    edi,0xe6c92197
  41c354:	lea    ebx,[ebx-0x4f53d54]
  41c35a:	(bad)  
  41c35b:	fstp   TBYTE PTR [ebx]
  41c35d:	add    ecx,eax
  41c35f:	scas   eax,DWORD PTR es:[edi]
  41c360:	inc    ebp
  41c361:	in     al,dx
  41c362:	fwait
  41c363:	dec    ecx
  41c364:	ins    BYTE PTR es:[edi],dx
  41c365:	jp     0x41c33e
  41c367:	sar    dh,0xea
  41c36a:	sub    BYTE PTR [ecx+0x835b62],dh
  41c370:	aad    0x50
  41c372:	pop    esi
  41c373:	push   es
  41c374:	add    eax,0xca36011
  41c379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37a:	mov    esp,0x7cfa50bb
  41c37f:	int3   
  41c380:	lock xor edx,0xffffffc6
  41c384:	or     eax,0x3f39c531
  41c389:	fistp  DWORD PTR [ebx-0x2c5db7d2]
  41c38f:	jne    0x41c40a
  41c391:	retf   
  41c392:	popf   
  41c393:	sbb    eax,0x9963f728
  41c398:	into   
  41c399:	inc    ebx
  41c39a:	std    
  41c39b:	lods   eax,DWORD PTR ds:[esi]
  41c39c:	rcl    BYTE PTR [ebx],1
  41c39e:	pop    esi
  41c39f:	sahf   
  41c3a0:	mov    esp,0xb11788c
  41c3a5:	icebp  
  41c3a6:	inc    ecx
  41c3a7:	mov    ds:0x538af838,al
  41c3ac:	stos   DWORD PTR es:[edi],eax
  41c3ad:	(bad)  
  41c3ae:	jmp    0x41c355
  41c3b0:	lahf   
  41c3b1:	xchg   ecx,ebx
  41c3b3:	pusha  
  41c3b4:	daa    
  41c3b5:	sub    bh,bh
  41c3b7:	push   0x83e59701
  41c3bc:	mov    eax,ds:0x8e580b46
  41c3c1:	and    BYTE PTR [esi-0x6a48bf6d],bl
  41c3c7:	repnz pop ebp
  41c3c9:	sbb    BYTE PTR [edi],bl
  41c3cb:	or     DWORD PTR [edi-0x80],0x2a5ff414
  41c3d2:	dec    edx
  41c3d3:	sbb    dl,BYTE PTR [ecx+0x1]
  41c3d6:	sbb    BYTE PTR es:[esi-0x4b664a6b],al
  41c3dd:	sti    
  41c3de:	pop    ebx
  41c3df:	pushf  
  41c3e0:	xchg   esp,eax
  41c3e1:	or     eax,0x1856414f
  41c3e6:	dec    edx
  41c3e7:	cld    
  41c3e8:	xchg   DWORD PTR [ebx+0x904c1ef],edi
  41c3ee:	xchg   ecx,eax
  41c3ef:	mov    eax,ds:0x8fe45213
  41c3f4:	mul    DWORD PTR [eax-0x4e]
  41c3f7:	inc    ebp
  41c3f8:	jmp    0xd9782519
  41c3fd:	js     0x41c437
  41c3ff:	pop    edx
  41c400:	cdq    
  41c401:	mov    WORD PTR [ebx+edi*1],es
  41c404:	sub    cl,0xd6
  41c407:	push   0xffffffc1
  41c409:	in     eax,0xba
  41c40b:	sbb    DWORD PTR [esi+0x5a],ebp
  41c40e:	in     al,0x57
  41c410:	mov    ecx,0x36686767
  41c415:	push   ss
  41c416:	fwait
  41c417:	or     DWORD PTR [ecx+0x16ca38d1],0xc7dff818
  41c421:	fsubp  st(4),st
  41c423:	dec    ebx
  41c424:	test   DWORD PTR [ebx-0x3a2fad5d],0xcdc7fb40
  41c42e:	sbb    DWORD PTR [eax-0xa0032df],ecx
  41c434:	sbb    DWORD PTR [edx-0x3e],0x75710ade
  41c43b:	adc    edi,DWORD PTR [ebp+0x6a]
  41c43e:	icebp  
  41c43f:	mov    eax,ds:0x5b3c6afe
  41c444:	xchg   ebp,eax
  41c445:	adc    al,0x26
  41c447:	add    DWORD PTR [eax],esp
  41c449:	fcomi  st,st(1)
  41c44b:	loope  0x41c3e9
  41c44d:	dec    ecx
  41c44e:	imul   eax,DWORD PTR [ebx+0x16],0xd95fd372
  41c455:	mov    ch,0x66
  41c457:	je     0x41c4d2
  41c459:	lods   eax,DWORD PTR ds:[esi]
  41c45a:	test   DWORD PTR [esi+0x2e4b72a7],edi
  41c460:	fcomi  st,st(0)
  41c462:	push   eax
  41c463:	fsubr  st,st(4)
  41c465:	lahf   
  41c466:	pushf  
  41c467:	push   ebx
  41c468:	jb     0x41c44c
  41c46a:	pop    edi
  41c46b:	cmp    eax,0x4ae4b9e7
  41c470:	(bad)  
  41c471:	ins    BYTE PTR es:[edi],dx
  41c472:	push   ebp
  41c473:	repnz enter 0xcd2d,0xb5
  41c478:	scas   eax,DWORD PTR es:[edi]
  41c479:	je     0x41c4b9
  41c47b:	mov    dl,BYTE PTR [edi]
  41c47d:	pusha  
  41c47e:	scas   eax,DWORD PTR es:[edi]
  41c47f:	or     al,BYTE PTR [ecx-0x43]
  41c482:	pop    eax
  41c483:	mov    eax,0xa9c7
	...
  41c490:	add    BYTE PTR [edi+ecx*2+0x53ff531c],dh
  41c497:	(bad)  
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xba9ee732
  41c4a0:	int3   
  41c4a1:	daa    
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	lods   eax,DWORD PTR ds:[esi]
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    BYTE PTR [ecx],bh
  41c4aa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41c4ac:	(bad)  
  41c4ad:	lock sar BYTE PTR ds:0x3c89fac1,cl
  41c4b4:	repz iret 
  41c4b6:	or     eax,0xffb59893
  41c4bb:	(bad)  
  41c4bc:	clc    
  41c4bd:	lds    esp,FWORD PTR [esi]
  41c4bf:	push   esp
  41c4c0:	jl     0x41c499
  41c4c2:	push   es
  41c4c3:	ret    0x484a
  41c4c6:	(bad)  
  41c4c7:	jbe    0x41c4e3
  41c4c9:	mov    ah,0x4b
  41c4cb:	dec    ecx
  41c4cc:	push   ds
  41c4cd:	sbb    ah,dh
  41c4cf:	cmp    eax,0xaee3201c
  41c4d4:	pop    ebx
  41c4d5:	fst    DWORD PTR [edi+0x4e248ac3]
  41c4db:	push   es
  41c4dc:	xchg   ebx,edi
  41c4de:	cmp    eax,0x425add68
  41c4e3:	idiv   BYTE PTR [edx+0x3da9699c]
  41c4e9:	inc    eax
  41c4ea:	mov    edi,0xd4fcae72
  41c4ef:	push   0xc5be8f53
  41c4f4:	imul   esp,DWORD PTR [esp+esi*2-0x4b7b52ff],0xf0662ea2
  41c4ff:	add    DWORD PTR [ecx+0x6b3d7788],ecx
  41c505:	loop   0x41c555
  41c507:	mov    cl,0x8f
  41c509:	mov    ebp,0xf98f3b94
  41c50e:	add    dl,BYTE PTR [esi+ebp*2]
  41c511:	cmc    
  41c512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c513:	and    al,0xdf
  41c515:	xor    al,0xbd
  41c517:	xchg   esi,eax
  41c518:	out    dx,al
  41c519:	fdivr  st(3),st
  41c51b:	es pop ecx
  41c51d:	in     al,dx
  41c51e:	lods   al,BYTE PTR ds:[esi]
  41c51f:	cmc    
  41c520:	adc    DWORD PTR [ebx],0xdbb00728
  41c526:	scas   eax,DWORD PTR es:[edi]
  41c527:	pop    eax
  41c528:	sbb    dl,BYTE PTR [eax+0x35]
  41c52b:	jmp    FWORD PTR [esi+0x46]
  41c52e:	call   0x981e:0x5a7b393b
  41c535:	setne  bl
  41c538:	fld    DWORD PTR [ebx+0x45]
  41c53b:	retf   
  41c53c:	or     al,0x23
  41c53e:	push   ecx
  41c53f:	shld   DWORD PTR [edx+0x29098756],ebx,0x45
  41c547:	les    ecx,FWORD PTR [esi-0xf512cbb]
  41c54d:	loop   0x41c563
  41c54f:	mov    eax,ds:0xdef9c08f
  41c554:	mov    edi,0xd4388951
  41c559:	icebp  
  41c55a:	or     BYTE PTR [eax+0x1b9cfc2a],bh
  41c560:	frstor [edi+0x10415ebf]
  41c566:	jmp    0xbc60:0x114c97c4
  41c56d:	scas   eax,DWORD PTR es:[edi]
  41c56e:	jl     0x41c57e
  41c570:	adc    edi,esp
  41c572:	into   
  41c573:	inc    edx
  41c574:	test   al,0xb4
  41c576:	fnsave [ecx]
  41c578:	addr16 push ss
  41c57a:	cmp    ebx,DWORD PTR [edx]
  41c57c:	or     dh,BYTE PTR [ebp+0x61d26a0d]
  41c582:	push   0x59
  41c584:	es sub dh,ch
  41c587:	das    
  41c588:	pop    esp
  41c589:	sub    ecx,DWORD PTR [ecx+0x594c4b8e]
  41c58f:	inc    ecx
  41c590:	fisub  DWORD PTR [esi]
  41c592:	shl    BYTE PTR [ecx+edi*1+0x67],cl
  41c596:	repnz arpl WORD PTR [ebp+0x9087767],cx
  41c59d:	xor    esp,DWORD PTR [ebx]
  41c59f:	pop    ebx
  41c5a0:	sub    dl,BYTE PTR [eax+0x4816f4e3]
  41c5a6:	mov    eax,0xcb5e9e47
  41c5ab:	sub    DWORD PTR [esp+ebp*2+0x34a5e726],ebp
  41c5b2:	imul   DWORD PTR [edx]
  41c5b4:	nop
  41c5b5:	mov    dl,0x3a
  41c5b7:	xchg   esp,eax
  41c5b8:	shr    BYTE PTR [esi+ecx*2],0x71
  41c5bc:	mov    BYTE PTR [eax+ecx*2-0x5],ch
  41c5c0:	dec    ebx
  41c5c1:	jb     0x41c5eb
  41c5c3:	cdq    
  41c5c4:	pop    es
  41c5c5:	dec    esi
  41c5c6:	jno    0x41c640
  41c5c8:	sub    DWORD PTR [eax-0x68694765],0xbc7d441b
  41c5d2:	add    BYTE PTR [esi-0x32410222],ah
  41c5d8:	(bad)  
  41c5d9:	jl     0x41c602
  41c5db:	dec    ecx
  41c5dc:	adc    BYTE PTR [esi+0x18],bh
  41c5df:	(bad)  
  41c5e0:	out    dx,al
  41c5e1:	lods   al,BYTE PTR ds:[esi]
  41c5e2:	out    dx,eax
  41c5e3:	test   BYTE PTR [esi-0x46],ah
  41c5e6:	out    0xf1,eax
  41c5e8:	xchg   ecx,eax
  41c5e9:	jo     0x41c58f
  41c5eb:	and    al,0x3c
  41c5ed:	popf   
  41c5ee:	pop    ss
  41c5ef:	dec    ebp
  41c5f0:	xchg   edi,eax
  41c5f1:	adc    BYTE PTR ds:0x78c9d5fd,ch
  41c5f7:	arpl   WORD PTR [edi+0x25e218f7],sp
  41c5fd:	xchg   edi,eax
  41c5fe:	dec    edi
  41c5ff:	pop    edi
  41c600:	aas    
  41c601:	sub    BYTE PTR [eax+0x21],dl
  41c604:	push   cs
  41c605:	sub    al,0x24
  41c607:	sub    ebx,DWORD PTR ds:0x956ee03
  41c60d:	jae    0x41c667
  41c60f:	out    dx,al
  41c610:	fiadd  DWORD PTR [ebx+0x6b80e2fb]
  41c616:	or     bl,al
  41c618:	out    0xdc,eax
  41c61a:	hlt    
  41c61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61c:	mov    edx,esp
  41c61e:	lahf   
  41c61f:	mov    ebp,0xa8993ce4
  41c624:	shrd   DWORD PTR [ebx],edx,0xf8
  41c628:	inc    DWORD PTR [ebp-0x72]
  41c62b:	jbe    0x41c615
  41c62d:	mov    ch,0x9a
  41c62f:	enter  0x864f,0x1c
  41c633:	scas   al,BYTE PTR es:[edi]
  41c634:	add    DWORD PTR [ecx+0x260a6174],0x30
  41c63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c63c:	hlt    
  41c63d:	in     al,0x85
  41c63f:	fcomp  st(4)
  41c641:	daa    
  41c642:	nop
  41c643:	(bad)  
  41c645:	xor    eax,0x52ef08df
  41c64a:	mov    ecx,0xb7e922d2
  41c64f:	add    DWORD PTR [esi-0x7e],edi
  41c652:	jne    0x41c6c7
  41c654:	pop    eax
  41c655:	in     al,dx
  41c656:	icebp  
  41c657:	icebp  
  41c658:	mov    ebx,0x5e0290c6
  41c65d:	pop    ds
  41c65e:	out    0xe1,eax
  41c660:	ret    
  41c661:	lock lds ecx,FWORD PTR [ebx]
  41c664:	hlt    
  41c665:	clc    
  41c666:	ret    
  41c667:	stc    
  41c668:	call   0xc357f086
  41c66d:	test   DWORD PTR [edi+0x57a63a79],esi
  41c673:	cmp    BYTE PTR [ebx],dh
  41c675:	adc    BYTE PTR [ebx+0x6b47aa4b],bl
  41c67b:	push   edx
  41c67c:	xchg   ecx,eax
  41c67d:	mov    BYTE PTR [ebx],dh
  41c67f:	jp     0x41c6d8
  41c681:	push   eax
  41c682:	pop    esi
  41c683:	xchg   bh,cl
  41c685:	inc    eax
  41c686:	jmp    0xdd7bf77a
  41c68b:	and    cl,bh
  41c68d:	in     al,0xb
  41c68f:	in     al,dx
  41c690:	push   ecx
  41c691:	ret    0xf97b
  41c694:	das    
  41c695:	aaa    
  41c696:	lock in eax,0x41
  41c699:	shl    DWORD PTR [edx+0x8fb6bf8],1
  41c69f:	inc    ebx
  41c6a0:	lods   eax,DWORD PTR ds:[esi]
  41c6a1:	fnstenv [eax+0x75]
  41c6a4:	or     eax,0x2386c42d
  41c6a9:	dec    DWORD PTR [eax-0x5259d933]
  41c6af:	(bad)  [esi]
  41c6b1:	fcom   DWORD PTR [ebp+0x2703ebf5]
  41c6b7:	inc    esp
  41c6b8:	and    BYTE PTR [ecx+0x95bca65],dh
  41c6be:	in     al,0x7c
  41c6c0:	mov    al,ds:0x99ef1238
  41c6c5:	jmp    FWORD PTR [ecx-0x2c47725]
  41c6cb:	sub    al,0x8a
  41c6cd:	mov    ecx,0x69101a6c
  41c6d2:	pop    ecx
  41c6d3:	cmc    
  41c6d4:	adc    al,BYTE PTR [ebp+0x76]
  41c6d7:	fst    QWORD PTR [ecx]
  41c6d9:	cwde   
  41c6da:	xchg   edi,eax
  41c6db:	sub    dh,BYTE PTR [edi+0x49a80e29]
  41c6e1:	inc    eax
  41c6e2:	cmp    BYTE PTR [edi-0x48e26f6c],dl
  41c6e8:	in     al,0xcd
  41c6ea:	aam    0xfb
  41c6ec:	cmp    dh,BYTE PTR [eax+esi*4]
  41c6ef:	ret    
  41c6f0:	adc    BYTE PTR [edx+0x72],bh
  41c6f3:	out    0x7a,eax
  41c6f5:	lds    ebx,FWORD PTR [eax+0x30f63c9a]
  41c6fb:	repnz xor DWORD PTR [edx],edi
  41c6fe:	sub    eax,0x56e1986c
  41c703:	add    edx,DWORD PTR [ecx+0x2b]
  41c706:	push   ebx
  41c707:	popa   
  41c708:	inc    esi
  41c709:	je     0x41c73b
  41c70b:	das    
  41c70c:	push   edx
  41c70d:	mov    WORD PTR [esi-0x39],ss
  41c710:	add    al,0xb6
  41c712:	fadd   DWORD PTR [ebx]
  41c714:	add    al,0xf4
  41c716:	push   0xff6c16ee
  41c71b:	mov    eax,0x1f41adfd
  41c720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c721:	aaa    
  41c722:	add    edx,DWORD PTR [ecx+0x343c46e8]
  41c728:	test   al,0x1
  41c72a:	mul    BYTE PTR [edx]
  41c72c:	aas    
  41c72d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c72e:	ret    0xa7e7
  41c731:	aas    
  41c732:	dec    edx
  41c733:	dec    esi
  41c734:	sbb    BYTE PTR [ebp-0x1d],ah
  41c737:	cmp    bl,BYTE PTR [edi]
  41c739:	cli    
  41c73a:	add    bh,0xf8
  41c73d:	fs inc eax
  41c73f:	test   eax,0xdd829d2b
  41c744:	enter  0xe536,0x18
  41c748:	push   eax
  41c74a:	add    bh,BYTE PTR [eax]
  41c74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c74d:	add    al,0x19
  41c74f:	xchg   edi,eax
  41c750:	cmp    edi,ebp
  41c752:	dec    ebp
  41c753:	add    bh,dh
  41c755:	loope  0x41c6f8
  41c757:	mov    edi,0xf6d94453
  41c75c:	xlat   BYTE PTR ds:[ebx]
  41c75d:	sbb    al,0xd9
  41c75f:	pop    edi
  41c760:	(bad)  
  41c761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c762:	push   eax
  41c763:	mov    edx,DWORD PTR [edi]
  41c765:	adc    DWORD PTR [ebx+edi*4+0xa4dc021],ebx
  41c76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c76d:	or     al,0x2f
  41c76f:	test   eax,0x4bb04b01
  41c774:	cmp    eax,0xa79ad7c5
  41c779:	fcomi  st,st(3)
  41c77b:	push   ebx
  41c77c:	add    ch,ch
  41c77e:	ss xchg edi,eax
  41c780:	call   0x16e3:0xf2daf313
  41c787:	gs xchg ecx,eax
  41c789:	mov    bl,BYTE PTR [edi-0x10]
  41c78c:	inc    ebp
  41c78d:	(bad)  
  41c78f:	mov    ecx,0x5d5e4724
  41c794:	push   cs
  41c795:	inc    ebx
  41c796:	leave  
  41c797:	add    DWORD PTR [eax-0x7d],0x9a44b660
  41c79e:	imul   ebp,DWORD PTR [ebp+0x76]
  41c7a2:	addr16 shl ebp,0xb5
  41c7a6:	outs   dx,BYTE PTR ds:[esi]
  41c7a7:	jmp    0x41c73b
  41c7a9:	cmp    eax,0xe5406daa
  41c7ae:	pop    es
  41c7af:	push   edi
  41c7b0:	push   eax
  41c7b1:	jle    0x41c796
  41c7b3:	inc    esi
  41c7b4:	repnz xchg esp,eax
  41c7b6:	jmp    0x41c828
  41c7b8:	push   ss
  41c7b9:	push   DWORD PTR [edx+0x4ea04885]
  41c7bf:	sar    BYTE PTR [edx],1
  41c7c1:	(bad)  
  41c7c2:	mov    ebp,0x372e8539
  41c7c7:	out    dx,eax
  41c7c8:	dec    edi
  41c7c9:	jb     0x41c833
  41c7cb:	add    eax,0xadd11ab7
  41c7d0:	add    al,0xab
  41c7d2:	fimul  WORD PTR [eax+0x320964a5]
  41c7d8:	mul    DWORD PTR gs:[ecx]
  41c7db:	or     DWORD PTR [ebx-0xc],0xa339650c
  41c7e2:	inc    edi
  41c7e3:	add    esi,ebp
  41c7e5:	retf   0xeb6a
  41c7e8:	dec    edi
  41c7e9:	push   ebx
  41c7ea:	mov    esi,0x9140d103
  41c7ef:	ss dec ebx
  41c7f1:	xchg   ebp,eax
  41c7f2:	add    al,0xdb
  41c7f4:	or     DWORD PTR [ebp+0x41],eax
  41c7f7:	fdiv   QWORD PTR [eax]
  41c7f9:	xchg   bl,al
  41c7fb:	inc    eax
  41c7fc:	adc    esp,DWORD PTR [ecx]
  41c7fe:	sub    eax,0xef6c91f5
  41c803:	test   eax,0x209c6a9e
  41c808:	ss call 0x13a9:0x34d3ca8d
  41c810:	xchg   ecx,eax
  41c811:	jnp    0x41c851
  41c813:	jno    0x41c83c
  41c815:	aam    0xc2
  41c817:	mov    eax,ds:0x48f4d004
  41c81c:	(bad)  
  41c81d:	push   0x48
  41c81f:	outs   dx,DWORD PTR ds:[esi]
  41c820:	fdivp  st(4),st
  41c822:	push   ds
  41c823:	mov    ah,0x1f
  41c825:	jo     0x41c7e2
  41c827:	ja     0x41c805
  41c829:	and    BYTE PTR [eax+0xa],0x78
  41c82d:	js     0x41c7e7
  41c82f:	inc    ah
  41c831:	js     0x41c8b1
  41c833:	cmc    
  41c834:	es iret 
  41c836:	retf   0xfaa8
  41c839:	std    
  41c83a:	popf   
  41c83b:	into   
  41c83c:	std    
  41c83d:	enter  0x88b1,0x38
  41c841:	xchg   esp,eax
  41c842:	jmp    0x41c8af
  41c844:	in     al,0xf7
  41c846:	cwde   
  41c847:	and    ecx,esp
  41c849:	sbb    ebp,0xe594bd38
  41c84f:	stos   DWORD PTR es:[edi],eax
  41c850:	inc    edi
  41c851:	sar    edx,0xe2
  41c854:	pop    ds
  41c855:	mov    WORD PTR [eax],es
	...
  41c85f:	add    BYTE PTR [eax],al
  41c861:	(bad)  
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     DWORD PTR [edx],esi
  41c86e:	imul   esp,DWORD PTR [ebx+0x144d47a],0x3ad00
  41c878:	add    BYTE PTR [edx-0x58f87d86],bh
  41c87e:	mov    ds:0x9cc18744,eax
  41c883:	dec    esi
  41c884:	inc    ebx
  41c885:	mov    al,0xdb
  41c887:	das    
  41c888:	stc    
  41c889:	pop    esi
  41c88a:	inc    ebx
  41c88b:	xchg   ecx,eax
  41c88c:	add    BYTE PTR [edx],ch
  41c88e:	pop    esp
  41c88f:	dec    edi
  41c890:	mul    DWORD PTR [eax-0x6a9dfa03]
  41c896:	jno    0x41c884
  41c898:	loope  0x41c871
  41c89a:	sub    BYTE PTR ds:0xb1b79a2e,cl
  41c8a0:	test   eax,0x19394efc
  41c8a5:	addr16 out dx,eax
  41c8a7:	sub    BYTE PTR [ecx+0x6d],al
  41c8aa:	xchg   edx,esi
  41c8ac:	inc    edx
  41c8ad:	loope  0x41c8d2
  41c8af:	rol    DWORD PTR [ebx],cl
  41c8b1:	mov    edx,0x5c560224
  41c8b6:	stc    
  41c8b7:	cmp    DWORD PTR [edi-0x1ec21c18],0xffffffd6
  41c8be:	test   eax,0xdeaeacb9
  41c8c3:	dec    esi
  41c8c4:	scas   al,BYTE PTR es:[edi]
  41c8c5:	enter  0xe983,0xe8
  41c8c9:	in     eax,0xc3
  41c8cb:	or     bh,BYTE PTR [edx+0x4f]
  41c8ce:	pop    ss
  41c8cf:	mov    eax,ds:0xd8072e60
  41c8d4:	mov    gs,WORD PTR [esi]
  41c8d6:	xchg   BYTE PTR [eax],ah
  41c8d8:	xchg   esp,eax
  41c8d9:	mov    esp,0xd1a74c
  41c8de:	shl    DWORD PTR [edi-0x2d4d43a6],cl
  41c8e4:	cwde   
  41c8e5:	or     BYTE PTR [ecx+0x1a],al
  41c8e8:	ret    0xc023
  41c8eb:	mov    ecx,0xf0c44a08
  41c8f0:	ds sbb cl,al
  41c8f3:	sbb    DWORD PTR [edx-0x75],ecx
  41c8f6:	mov    al,0x87
  41c8f8:	push   ds
  41c8f9:	or     eax,0x951e4696
  41c8fe:	lahf   
  41c8ff:	inc    esp
  41c900:	add    eax,0x8c18d44f
  41c905:	dec    edi
  41c906:	pop    edx
  41c907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c908:	sbb    al,0xda
  41c90a:	push   0x7d0dbe56
  41c90f:	shl    BYTE PTR [esi+0x61],0x41
  41c913:	xchg   BYTE PTR [edi],al
  41c915:	add    edx,DWORD PTR [eax+0x45]
  41c918:	inc    ebp
  41c919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c91a:	test   BYTE PTR [edx+0x7f9931df],0x69
  41c921:	ja     0x41c914
  41c923:	push   eax
  41c924:	cld    
  41c925:	test   DWORD PTR [esi+0x23],eax
  41c928:	or     al,0x32
  41c92a:	idiv   esp
  41c92c:	(bad)  
  41c92e:	sbb    al,0xf
  41c930:	jmp    0xb001:0x57d28cc7
  41c937:	scas   eax,DWORD PTR es:[edi]
  41c938:	daa    
  41c939:	in     al,0x1b
  41c93b:	cs data16 lahf 
  41c93e:	ret    
  41c93f:	dec    edi
  41c940:	jne    0x41c99c
  41c942:	sti    
  41c943:	call   0x8e0a:0xd027c56
  41c94a:	pushf  
  41c94b:	inc    edx
  41c94c:	outs   dx,DWORD PTR ds:[esi]
  41c94d:	fisub  DWORD PTR [edi+0x7b]
  41c950:	in     al,dx
  41c951:	bound  ebp,QWORD PTR [esi]
  41c953:	gs mov ebp,0xa678221e
  41c959:	jnp    0x41c900
  41c95b:	or     eax,0x1945bc87
  41c960:	repnz mov dl,0xfe
  41c963:	or     edi,DWORD PTR [ebx-0xd309d58]
  41c969:	into   
  41c96a:	or     DWORD PTR [esi-0x1081e20c],ecx
  41c970:	or     DWORD PTR [ebx-0x47e68a74],ebp
  41c976:	popf   
  41c977:	data16 cmp al,0x8c
  41c97a:	sbb    edi,edi
  41c97c:	icebp  
  41c97d:	push   esi
  41c97e:	(bad)  
  41c97f:	or     eax,0xf0295725
  41c984:	dec    edx
  41c985:	inc    esp
  41c986:	fisub  WORD PTR [ebx]
  41c988:	cdq    
  41c989:	mov    eax,ds:0xcd137dca
  41c98e:	add    eax,0x2c1193ea
  41c993:	sub    eax,DWORD PTR [esi]
  41c995:	in     al,0xaf
  41c997:	dec    edx
  41c998:	je     0x41c9c0
  41c99a:	adc    ah,ch
  41c99c:	xor    edx,DWORD PTR [ecx-0x20]
  41c99f:	aas    
  41c9a0:	in     eax,dx
  41c9a1:	push   edx
  41c9a2:	dec    ecx
  41c9a3:	(bad)  
  41c9a4:	push   ecx
  41c9a5:	fisubr WORD PTR [edi-0x24]
  41c9a8:	push   eax
  41c9a9:	das    
  41c9aa:	sbb    ah,ah
  41c9ac:	imul   esi,DWORD PTR [eax+0x2f],0xffffff88
  41c9b0:	hlt    
  41c9b1:	(bad)  
  41c9b2:	cmp    bl,BYTE PTR [ebp-0x9a320cc]
  41c9b8:	push   ebp
  41c9b9:	jmp    0x492f8510
  41c9be:	mov    al,ds:0xf5bd6e5f
  41c9c3:	rcr    BYTE PTR [edx+0x65ffc7bb],cl
  41c9c9:	div    bh
  41c9cb:	jmp    0x788e:0xf9070f5f
  41c9d2:	xchg   DWORD PTR [edx+0x355f3c03],edi
  41c9d8:	add    eax,0x181c4352
  41c9dd:	aas    
  41c9de:	cmc    
  41c9df:	lahf   
  41c9e0:	and    ecx,DWORD PTR [edi+0x7cb21d88]
  41c9e6:	cs jb  0x41c9d4
  41c9e9:	test   al,0x53
  41c9eb:	cmp    eax,0x3890eaf1
  41c9f0:	dec    edi
  41c9f1:	nop
  41c9f2:	dec    ebp
  41c9f3:	pop    ss
  41c9f4:	xchg   esp,eax
  41c9f5:	repz push 0x1a
  41c9f8:	mov    ah,0x1
  41c9fa:	rcl    DWORD PTR [edi+edi*4+0x57253a9],0x5a
  41ca02:	movlps QWORD PTR [edi-0x20],xmm5
  41ca06:	fcom   DWORD PTR [ebp-0x2176f6eb]
  41ca0c:	into   
  41ca0d:	sahf   
  41ca0e:	mov    esp,0x4938ae8c
  41ca13:	mov    dl,0xe3
  41ca15:	pushf  
  41ca16:	sar    BYTE PTR [ebp+0x55],cl
  41ca19:	jg     0x41ca97
  41ca1b:	call   0xa67222a9
  41ca20:	jl     0x41c9fe
  41ca22:	fsubr  DWORD PTR [esp+eax*2]
  41ca25:	rcr    dh,1
  41ca27:	cmp    al,0xb0
  41ca29:	mov    ebx,0xc555c87b
  41ca2e:	mov    ds:0x13525dd7,eax
  41ca33:	fnstenv [edx+ebx*4+0x5b]
  41ca37:	mov    eax,ds:0xf93de910
  41ca3c:	or     cl,BYTE PTR [edx+0x72a63208]
  41ca42:	pop    ebp
  41ca43:	dec    ebp
  41ca44:	pop    eax
  41ca45:	mov    DWORD PTR [esi+0x32],0x8b00385d
  41ca4c:	imul   ebp,esp,0xad3cd07b
  41ca52:	jae    0x41ca04
  41ca54:	or     eax,0xacd4aba2
  41ca59:	xor    DWORD PTR [edi],eax
  41ca5b:	fsub   QWORD PTR [edx+ecx*4+0x7e85ec56]
  41ca62:	adc    dh,BYTE PTR [eax+ebp*1]
  41ca65:	jo     0x41ca35
  41ca67:	sti    
  41ca68:	and    DWORD PTR [eax],0xffffffee
  41ca6b:	pop    ss
  41ca6c:	push   0x19
  41ca6e:	sub    al,cl
  41ca70:	sub    BYTE PTR [edi+0x7c872a6e],0x42
  41ca77:	inc    edi
  41ca78:	dec    eax
  41ca79:	shl    BYTE PTR [ebx],0xdb
  41ca7c:	data16 mov ds:0xba05c7b0,al
  41ca82:	test   DWORD PTR [esi-0x28],0x501a4112
  41ca89:	scas   eax,DWORD PTR es:[edi]
  41ca8a:	jne    0x41ca53
  41ca8c:	dec    ebp
  41ca8d:	mov    ebp,0xa5404d91
  41ca92:	push   ss
  41ca93:	mov    edx,0x176a5393
  41ca98:	fldenv [eax+ebp*1]
  41ca9b:	cs in  al,dx
  41ca9d:	hlt    
  41ca9e:	fmul   QWORD PTR [ebp-0x3db0e41f]
  41caa4:	xchg   DWORD PTR [ebp-0x3b],ebx
  41caa7:	lea    esi,[ecx+0x1887a90]
  41caad:	test   eax,0x800a31f8
  41cab2:	or     cl,dh
  41cab4:	int    0x77
  41cab6:	dec    edx
  41cab7:	js     0x41ca9b
  41cab9:	fcmovnb st,st(4)
  41cabb:	xor    al,al
  41cabd:	and    eax,0xb1424578
  41cac2:	and    eax,0x892bf593
  41cac7:	std    
  41cac8:	mov    bl,0xb
  41caca:	dec    esi
  41cacb:	lods   eax,DWORD PTR ds:[esi]
  41cacc:	repz jb 0x41ca78
  41cacf:	xchg   edi,eax
  41cad0:	and    eax,0xa191c2d5
  41cad5:	scas   al,BYTE PTR es:[edi]
  41cad6:	dec    ecx
  41cad7:	xor    bl,dl
  41cad9:	retf   
  41cada:	cdq    
  41cadb:	pop    edx
  41cadc:	fwait
  41cadd:	mov    BYTE PTR [ebx-0x1a],ah
  41cae0:	dec    esp
  41cae1:	push   ss
  41cae2:	pop    eax
  41cae3:	out    0xe8,eax
  41cae5:	cs stos BYTE PTR es:[edi],al
  41cae7:	xchg   edx,eax
  41cae8:	fidiv  WORD PTR [ecx]
  41caea:	ins    DWORD PTR es:[edi],dx
  41caeb:	mov    esp,0x8a2fd966
  41caf0:	and    bl,0xe8
  41caf3:	stc    
  41caf4:	jg     0x41cacf
  41caf6:	(bad)  
  41caf7:	stc    
  41caf8:	(bad)  
  41caf9:	(bad)  
  41cafb:	fistp  DWORD PTR [eax-0x478a65f3]
  41cb01:	jecxz  0x41cad1
  41cb03:	adc    edi,DWORD PTR [edi+0x3745585e]
  41cb09:	stos   DWORD PTR es:[edi],eax
  41cb0a:	inc    eax
  41cb0b:	mov    eax,0xec2f683e
  41cb10:	bound  esp,QWORD PTR [ecx]
  41cb12:	hlt    
  41cb13:	mov    cl,0xa7
  41cb15:	dec    ebx
  41cb16:	push   ds
  41cb17:	scas   al,BYTE PTR es:[edi]
  41cb18:	and    al,0xef
  41cb1a:	cmp    eax,0x11210ef5
  41cb1f:	xchg   ecx,eax
  41cb20:	jne    0x41cad2
  41cb22:	jb     0x41cb3f
  41cb24:	ret    
  41cb25:	inc    ecx
  41cb26:	xor    dl,0x22
  41cb29:	add    DWORD PTR [esi+0x1aae4195],esp
  41cb2f:	xchg   DWORD PTR [ecx],eax
  41cb31:	lock or eax,0x8f93d8d9
  41cb37:	mov    ebp,0xc9df7f26
  41cb3c:	test   BYTE PTR [eax+0x20],cl
  41cb3f:	adc    al,BYTE PTR [edi+0x1ff719d6]
  41cb45:	lds    ecx,FWORD PTR [ecx+0x40]
  41cb48:	mov    bl,0x59
  41cb4a:	xchg   edi,eax
  41cb4b:	out    dx,al
  41cb4c:	or     ebx,ebx
  41cb4e:	sbb    BYTE PTR [edx-0x5ce6d5a7],bl
  41cb54:	test   DWORD PTR ds:0x3e966500,esi
  41cb5a:	call   0xf8:0x951525a6
  41cb61:	dec    ecx
  41cb62:	fwait
  41cb63:	xchg   ebp,eax
  41cb64:	cmp    DWORD PTR [ebx+0x69],esi
  41cb67:	mov    ah,0xc
  41cb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6a:	cmp    DWORD PTR [ebp-0x3a],ebx
  41cb6d:	mov    bh,0xb4
  41cb6f:	cmp    DWORD PTR [edx],0x5
  41cb72:	clc    
  41cb73:	cmp    al,0x6b
  41cb75:	xchg   edx,eax
  41cb76:	outs   dx,DWORD PTR ds:[esi]
  41cb77:	sbb    dl,BYTE PTR [edi]
  41cb79:	push   ecx
  41cb7a:	pop    ss
  41cb7b:	or     BYTE PTR [ebx],dl
  41cb7d:	xchg   edi,eax
  41cb7e:	fcomip st,st(5)
  41cb80:	leave  
  41cb81:	ret    0x6cb3
  41cb84:	mov    edi,0xc82099ac
  41cb89:	xchg   ebp,eax
  41cb8a:	or     eax,0xaeec21c2
  41cb8f:	xchg   esi,eax
  41cb90:	icebp  
  41cb91:	dec    edi
  41cb92:	adc    ah,dh
  41cb94:	xchg   esp,eax
  41cb95:	xchg   BYTE PTR [ebx-0x28],dl
  41cb98:	cwde   
  41cb99:	add    eax,0x5d6b56f3
  41cb9e:	fdiv   st,st(3)
  41cba0:	outs   dx,DWORD PTR ds:[esi]
  41cba1:	jmp    0xe881b904
  41cba6:	mov    ah,0xee
  41cba8:	lahf   
  41cba9:	dec    eax
  41cbaa:	cli    
  41cbab:	xchg   ecx,eax
  41cbac:	pop    ds
  41cbad:	dec    edx
  41cbae:	shl    BYTE PTR [ebx+0x69e2b6e8],cl
  41cbb4:	sbb    ecx,DWORD PTR [edx-0x5c]
  41cbb7:	dec    ecx
  41cbb8:	aas    
  41cbb9:	in     al,dx
  41cbba:	iret   
  41cbbb:	lds    ebx,FWORD PTR [ebx+0x40]
  41cbbe:	sub    ch,al
  41cbc0:	or     edx,edi
  41cbc2:	mov    ds:0x9371214b,eax
  41cbc7:	sar    cl,cl
  41cbc9:	jns    0x41cb6b
  41cbcb:	mov    edx,0x4bafbd5f
  41cbd0:	sub    al,0xc7
  41cbd2:	xor    dh,cl
  41cbd4:	or     ebp,DWORD PTR [esi-0x19d58e24]
  41cbda:	jmp    0x41cbe7
  41cbdc:	inc    ebp
  41cbdd:	retf   
  41cbde:	rol    BYTE PTR [ebp-0x2c],cl
  41cbe1:	dec    esi
  41cbe2:	adc    dl,BYTE PTR [eax-0x577604e8]
  41cbe8:	mov    dh,0xce
  41cbea:	push   eax
  41cbeb:	push   esi
  41cbec:	ins    BYTE PTR es:[edi],dx
  41cbed:	pop    ss
  41cbee:	lock outs dx,BYTE PTR ds:[esi]
  41cbf0:	cmp    DWORD PTR [ecx],ebx
  41cbf2:	fld    TBYTE PTR [esi+0xd]
  41cbf5:	mov    eax,ds:0x22ab8ae
  41cbfa:	jae    0x41cbd0
  41cbfc:	das    
  41cbfd:	nop
  41cbfe:	dec    edi
  41cbff:	adc    al,0x6e
  41cc01:	clc    
  41cc02:	and    al,BYTE PTR ds:0x94f7d804
  41cc08:	add    dl,0x5c
  41cc0b:	add    DWORD PTR [edx+ecx*4],edi
  41cc0e:	enter  0x7ed4,0x55
  41cc12:	cwde   
  41cc13:	out    dx,al
  41cc14:	mov    ?,WORD PTR [ebx+0x69]
  41cc17:	hlt    
  41cc18:	or     dh,BYTE PTR ds:0xa640ca03
  41cc1e:	pop    esi
  41cc1f:	mov    edx,0x56106cc0
  41cc24:	xchg   BYTE PTR [ecx],bh
	...
  41cc2e:	add    BYTE PTR [eax],al
  41cc30:	add    BYTE PTR [ecx-0x10111089],bl
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xf8fc3845,ecx
  41cc41:	or     DWORD PTR [eax+0x1],0x3ad00
  41cc48:	add    BYTE PTR [edx],bl
  41cc4a:	cmp    al,0x78
  41cc4c:	sub    esi,DWORD PTR [ebx-0x58]
  41cc4f:	jle    0x41cccf
  41cc51:	arpl   bx,ax
  41cc53:	xor    ch,0x13
  41cc56:	jg     0x41cc11
  41cc58:	bound  ebx,QWORD PTR [ebp-0x1b983bb0]
  41cc5e:	in     eax,0x6
  41cc60:	mov    BYTE PTR [ebp-0x78],bh
  41cc63:	aaa    
  41cc64:	pushf  
  41cc65:	retf   0xfe0d
  41cc68:	int3   
  41cc69:	scas   al,BYTE PTR es:[edi]
  41cc6a:	into   
  41cc6b:	nop
  41cc6c:	ret    
  41cc6d:	lods   al,BYTE PTR ds:[esi]
  41cc6e:	rcl    DWORD PTR [ebx+0x8c93793],cl
  41cc74:	into   
  41cc75:	push   eax
  41cc76:	ins    DWORD PTR es:[edi],dx
  41cc77:	mov    ds:0xeedd2638,eax
  41cc7c:	xchg   edi,eax
  41cc7d:	daa    
  41cc7e:	pop    ss
  41cc7f:	inc    edi
  41cc80:	mov    ah,BYTE PTR [eax]
  41cc82:	add    cl,dh
  41cc84:	imul   esi,DWORD PTR [eax],0xe903f266
  41cc8a:	sub    al,0xed
  41cc8c:	jmp    0x41cc44
  41cc8e:	pop    esi
  41cc8f:	adc    DWORD PTR [ecx-0x7ed32896],ebp
  41cc95:	adc    al,0xa9
  41cc98:	test   eax,0x184a0f2f
  41cc9d:	pop    ebx
  41cc9e:	jmp    0x41ccc6
  41cca0:	sbb    BYTE PTR [ebp+0x2d],ch
  41cca3:	sub    eax,0xcde6334f
  41cca9:	ja     0x41cc95
  41ccab:	mov    dl,0x1b
  41ccad:	xchg   esp,eax
  41ccae:	and    eax,0x59703d2c
  41ccb3:	push   eax
  41ccb4:	pop    edi
  41ccb5:	mov    ah,0x46
  41ccb7:	leave  
  41ccb8:	aam    0xc4
  41ccba:	test   al,al
  41ccbc:	adc    al,0xb3
  41ccbe:	in     al,dx
  41ccbf:	daa    
  41ccc0:	cmp    eax,0xa43d8596
  41ccc5:	(bad)  
  41ccc6:	aas    
  41ccc7:	mov    ah,0x12
  41ccc9:	adc    BYTE PTR [ebx],ah
  41cccb:	xchg   edx,eax
  41cccc:	cmp    al,0x35
  41ccce:	out    0xab,al
  41ccd0:	loope  0x41ccf5
  41ccd2:	and    DWORD PTR [edi+0x76],ebx
  41ccd5:	jnp    0x41cd51
  41ccd7:	adc    ebp,DWORD PTR [edi]
  41ccd9:	mov    es,WORD PTR [ebp+eax*2-0x59]
  41ccdd:	or     al,0x83
  41ccdf:	jg     0x41cd36
  41cce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce2:	(bad)  [esi+0x7c]
  41cce5:	mov    ah,0x3b
  41cce7:	addr16 popa 
  41cce9:	sub    ebp,0x510ee82f
  41ccef:	iret   
  41ccf0:	popa   
  41ccf1:	jecxz  0x41cce0
  41ccf3:	dec    edx
  41ccf4:	xchg   edi,eax
  41ccf5:	inc    ebp
  41ccf6:	in     eax,0xb4
  41ccf8:	cmp    esi,DWORD PTR [esi+edi*1-0x2914247c]
  41ccff:	idiv   BYTE PTR [edx+0x3eb4ed8]
  41cd05:	mov    WORD PTR [ebp+0x4b887d77],es
  41cd0b:	mov    dl,0x0
  41cd0d:	adc    DWORD PTR [ecx-0xa],edx
  41cd10:	mov    ecx,0xda368d67
  41cd15:	mov    al,0x90
  41cd17:	(bad)  
  41cd19:	pop    ss
  41cd1a:	pop    eax
  41cd1b:	fidiv  DWORD PTR [edx-0x3319552a]
  41cd21:	cmc    
  41cd22:	pushf  
  41cd23:	jge    0x41cd6e
  41cd25:	cmp    eax,0x161261c9
  41cd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd2b:	mov    ebx,0x6381fd1e
  41cd30:	scas   al,BYTE PTR es:[edi]
  41cd31:	test   al,0x6d
  41cd33:	adc    ah,BYTE PTR [esp+eax*4]
  41cd36:	push   cs
  41cd37:	dec    ecx
  41cd38:	cmc    
  41cd39:	daa    
  41cd3a:	jnp    0x41cd0c
  41cd3c:	imul   ecx,DWORD PTR [eax+0x49],0x2
  41cd40:	push   esp
  41cd41:	dec    edx
  41cd42:	pop    edx
  41cd43:	inc    edi
  41cd44:	xor    DWORD PTR [eax+esi*4],0x63282c6e
  41cd4b:	jne    0x41ccfb
  41cd4d:	inc    eax
  41cd4e:	mov    dl,0xcf
  41cd50:	inc    ecx
  41cd51:	xor    esp,esp
  41cd53:	xlat   BYTE PTR ds:[ebx]
  41cd54:	mov    cl,0xa8
  41cd56:	xor    al,0x15
  41cd58:	fistp  QWORD PTR [edi]
  41cd5a:	(bad)  
  41cd5b:	pop    esp
  41cd5c:	add    DWORD PTR [ecx-0x2195fe15],esp
  41cd62:	inc    ecx
  41cd63:	pop    ds
  41cd64:	sub    BYTE PTR [esi],0xd7
  41cd67:	fsincos 
  41cd69:	xor    BYTE PTR ss:[edx+0x14658a0],ch
  41cd70:	jns    0x41cd45
  41cd72:	fisttp DWORD PTR [edi-0x48]
  41cd75:	and    bl,bl
  41cd77:	jno    0x41cd5d
  41cd79:	mov    WORD PTR [ebx-0x2b],?
  41cd7c:	pop    edi
  41cd7d:	outs   dx,DWORD PTR ds:[esi]
  41cd7e:	push   ss
  41cd7f:	inc    ecx
  41cd80:	jae    0x41cdc1
  41cd82:	icebp  
  41cd83:	and    al,0x8b
  41cd85:	in     eax,dx
  41cd86:	call   0x9fe2:0x5c2dd416
  41cd8d:	mov    ?,ecx
  41cd8f:	mov    esp,0x171940b8
  41cd94:	and    DWORD PTR [ecx],eax
  41cd96:	ins    DWORD PTR es:[edi],dx
  41cd97:	sbb    ebp,DWORD PTR [eax]
  41cd99:	xlat   BYTE PTR ds:[ebx]
  41cd9a:	test   DWORD PTR [eax+0x686f1490],eax
  41cda0:	fs mov ebp,0x8bf14edb
  41cda6:	or     BYTE PTR [esi+esi*8+0x112a80f2],dl
  41cdad:	add    edi,esp
  41cdaf:	and    eax,0xcdb8680e
  41cdb4:	mov    ch,0x58
  41cdb6:	sub    eax,ebx
  41cdb8:	push   edi
  41cdb9:	sbb    al,0x28
  41cdbb:	xchg   ebx,esp
  41cdbd:	inc    ebx
  41cdbe:	ja     0x41ce11
  41cdc0:	sbb    cl,BYTE PTR [eax]
  41cdc2:	jl     0x41cddb
  41cdc4:	adc    al,al
  41cdc6:	and    bh,BYTE PTR [esi+0x39]
  41cdc9:	lea    ecx,[edx-0x47]
  41cdcc:	es inc esi
  41cdce:	sbb    al,0x80
  41cdd0:	cmp    DWORD PTR [edi],edi
  41cdd2:	inc    eax
  41cdd3:	lods   al,BYTE PTR ds:[esi]
  41cdd4:	int    0x7f
  41cdd6:	test   DWORD PTR [edx],0x3b1f4f7b
  41cddc:	xchg   esi,eax
  41cddd:	test   DWORD PTR [eax+0x7ec3e4a1],0xc979732f
  41cde7:	call   0xda514886
  41cdec:	pop    ds
  41cded:	mov    ebx,0x744928f
  41cdf2:	pop    es
  41cdf3:	mov    bh,0xcc
  41cdf5:	rcl    DWORD PTR [edi],0x3e
  41cdf8:	jl     0x41ce64
  41cdfa:	(bad)  
  41cdfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdfc:	sahf   
  41cdfd:	loope  0x41cdb0
  41cdff:	add    al,al
  41ce01:	and    bl,BYTE PTR [edx-0x2edb03d6]
  41ce07:	and    esp,DWORD PTR [edx-0x24]
  41ce0a:	mov    esp,0x83912dfb
  41ce0f:	fstp   QWORD PTR [ebx+eax*8-0x241cb33f]
  41ce16:	and    esi,0xfffffff1
  41ce19:	fst    QWORD PTR [ebx]
  41ce1b:	ss cwde 
  41ce1d:	sub    ah,BYTE PTR [edx]
  41ce1f:	cli    
  41ce20:	and    BYTE PTR ds:0x7a2a07ba,bh
  41ce26:	mov    ds:0xc1c23e5a,al
  41ce2b:	fnsave [ebp+eax*1+0x512a9336]
  41ce32:	cmp    ebp,ecx
  41ce34:	jg     0x41ce58
  41ce36:	sub    DWORD PTR [esi],0xffffffc7
  41ce39:	or     eax,0x67394935
  41ce3e:	push   esi
  41ce3f:	xchg   esi,eax
  41ce40:	imul   edi,DWORD PTR [edi+0x7],0xffffffee
  41ce44:	mov    ah,0xbb
  41ce46:	dec    esi
  41ce47:	mov    edx,0xd150ee58
  41ce4c:	fs pop esp
  41ce4e:	retf   0x8167
  41ce51:	gs and al,0xb
  41ce54:	xchg   esi,eax
  41ce55:	mov    ebp,0x893592fa
  41ce5a:	es dec edi
  41ce5c:	stos   DWORD PTR es:[edi],eax
  41ce5d:	dec    edi
  41ce5e:	fincstp 
  41ce60:	add    eax,0x3fa43675
  41ce65:	inc    eax
  41ce66:	push   ds
  41ce67:	dec    ecx
  41ce68:	js     0x41cec6
  41ce6a:	sub    eax,0xdba403b1
  41ce6f:	pop    ebx
  41ce70:	mov    ah,al
  41ce72:	add    DWORD PTR [eax],esp
  41ce74:	cdq    
  41ce75:	mov    ah,0x6e
  41ce77:	vmread DWORD PTR [esi],esi
  41ce7a:	jge    0x41ceaf
  41ce7c:	sbb    eax,DWORD PTR [edx-0x1311c9cf]
  41ce82:	test   eax,0xec9e2feb
  41ce87:	hlt    
  41ce88:	cli    
  41ce89:	and    BYTE PTR [edi],bh
  41ce8b:	rol    DWORD PTR [esi-0x7d],0x56
  41ce8f:	sub    eax,0x5b71d0c
  41ce94:	and    al,0x35
  41ce96:	sbb    BYTE PTR [edi-0x22717180],bl
  41ce9c:	retf   0xb976
  41ce9f:	pop    ecx
  41cea0:	not    BYTE PTR [ebp+0x4e25001c]
  41cea6:	sti    
  41cea7:	dec    ebx
  41cea8:	or     cl,BYTE PTR [eax+0x6d]
  41ceab:	fstp   DWORD PTR [ecx]
  41cead:	out    dx,eax
  41ceae:	or     BYTE PTR ds:0xfabeb490,0xb6
  41ceb5:	jl     0x41ced8
  41ceb7:	in     al,dx
  41ceb8:	std    
  41ceb9:	jecxz  0x41ce6c
  41cebb:	inc    esi
  41cebc:	sbb    BYTE PTR [ebp-0x50a225fd],0x74
  41cec3:	mov    ch,0x59
  41cec5:	je     0x41cedf
  41cec7:	(bad)  
  41cec8:	sti    
  41cec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceca:	out    0x8b,eax
  41cecc:	aam    0x68
  41cece:	bound  esp,QWORD PTR [eax+0x5f]
  41ced1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced2:	out    0x7e,al
  41ced4:	js     0x41cee5
  41ced6:	das    
  41ced7:	mov    ecx,0x84fc3c2c
  41cedc:	fcmovne st,st(4)
  41cede:	add    DWORD PTR [ebx],esp
  41cee0:	mov    ds:0x976c158e,al
  41cee5:	jo     0x41cf59
  41cee7:	add    bl,BYTE PTR [eax]
  41cee9:	loop   0x41cf3a
  41ceeb:	es test al,0x83
  41ceee:	xchg   edx,eax
  41ceef:	mov    cl,0xd9
  41cef1:	outs   dx,DWORD PTR fs:[si]
  41cef4:	mov    dl,0xac
  41cef6:	or     al,0xb6
  41cef8:	test   al,0x80
  41cefa:	cli    
  41cefb:	mov    ebp,0x5e9814c1
  41cf00:	inc    edi
  41cf01:	jne    0x41cf40
  41cf03:	std    
  41cf04:	mov    bh,0x93
  41cf06:	inc    edi
  41cf07:	mov    bh,0x24
  41cf09:	sbb    ebx,DWORD PTR [edx+0x26]
  41cf0c:	adc    bh,BYTE PTR [eax-0x73]
  41cf0f:	aaa    
  41cf10:	and    eax,0xcfc7d5bc
  41cf15:	in     eax,dx
  41cf16:	cmp    DWORD PTR [esp+ebx*2+0x6d3128d9],esi
  41cf1d:	sub    dh,BYTE PTR [esp-0x59]
  41cf21:	ja     0x41cef8
  41cf23:	mov    esp,0xfa5158a8
  41cf28:	xor    ah,BYTE PTR [edi+0x18f85038]
  41cf2e:	push   edx
  41cf2f:	ror    DWORD PTR [edx],cl
  41cf31:	repnz test eax,0xd8477ec5
  41cf37:	retf   0xf922
  41cf3a:	stc    
  41cf3b:	or     BYTE PTR [eax],dl
  41cf3d:	mov    dh,BYTE PTR [ebx+ebx*1-0x4f947987]
  41cf44:	test   BYTE PTR [esi],bl
  41cf46:	mov    ecx,0x8d565ec5
  41cf4b:	xor    esp,DWORD PTR [eax+eiz*2]
  41cf4e:	add    edi,esi
  41cf50:	frstpm(287 only) 
  41cf52:	inc    ebp
  41cf53:	cmp    al,0xd8
  41cf55:	call   0xc4dce632
  41cf5a:	cmp    ecx,DWORD PTR [esi-0xfca888a]
  41cf60:	mov    cl,0x52
  41cf62:	xor    dh,ch
  41cf64:	mov    eax,ss:0xd0264e34
  41cf6a:	jae    0x41cf23
  41cf6c:	fdiv   DWORD PTR [eax+ecx*1+0x7259efd0]
  41cf73:	int    0x62
  41cf75:	ins    BYTE PTR es:[edi],dx
  41cf76:	or     al,0xee
  41cf78:	lds    esi,FWORD PTR [edx]
  41cf7a:	jno    0x41cfc6
  41cf7c:	imul   esi,ebp,0x54
  41cf7f:	sub    BYTE PTR [edx+0x61],bl
  41cf82:	out    0x9,eax
  41cf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf85:	retf   
  41cf86:	sub    eax,0xbf95da8e
  41cf8b:	adc    ah,BYTE PTR [eax]
  41cf8d:	and    DWORD PTR [ebx-0x6a9444d1],esp
  41cf93:	loop   0x41cfd1
  41cf95:	push   ss
  41cf96:	or     bl,BYTE PTR [ecx+0x2161662b]
  41cf9c:	les    ebp,FWORD PTR [edi+eax*2]
  41cf9f:	ds jo  0x41cf54
  41cfa2:	ret    
  41cfa3:	push   ebp
  41cfa4:	lahf   
  41cfa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa6:	lock add ebx,DWORD PTR [edi+edi*8]
  41cfaa:	jns    0x41d011
  41cfac:	cmp    DWORD PTR ds:0x154f3575,eax
  41cfb2:	fbld   TBYTE PTR [eax-0x7b24f059]
  41cfb8:	and    al,0x80
  41cfba:	fst    QWORD PTR [ecx]
  41cfbc:	ror    BYTE PTR [edi-0x3f],cl
  41cfbf:	jl     0x41cfcd
  41cfc1:	sub    DWORD PTR [ecx],ebp
  41cfc3:	ja     0x41cfd1
  41cfc5:	mov    ebx,DWORD PTR [edi-0x49175e78]
  41cfcb:	cmp    eax,0x543ceab7
  41cfd0:	cmp    BYTE PTR [edi],0x45
  41cfd3:	xchg   esi,eax
  41cfd4:	push   ss
  41cfd5:	(bad)  
  41cfd6:	mov    al,0x37
  41cfd8:	sbb    eax,0x5c40c8f6
  41cfdd:	cmp    eax,0xaa419856
  41cfe2:	outs   dx,BYTE PTR ds:[esi]
  41cfe3:	ds and ch,ch
  41cfe6:	hlt    
  41cfe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe8:	rcr    DWORD PTR [edx+0x60],cl
  41cfeb:	xlat   BYTE PTR ds:[ebx]
  41cfec:	ret    0xcdec
  41cfef:	out    0xe9,al
  41cff1:	jne    0x41d03d
  41cff3:	or     eax,0x7197
	...
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	dec    ebp
  41d00e:	stos   DWORD PTR es:[edi],eax
  41d00f:	imul   dl
  41d011:	cs dec esp
  41d013:	add    DWORD PTR [eax],eax
  41d015:	lods   eax,DWORD PTR ds:[esi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    bh,dl
  41d01a:	push   ebx
  41d01b:	adc    al,0x64
  41d01d:	jnp    0x41d092
  41d01f:	sbb    BYTE PTR [eax+0x2906b0fa],bh
  41d025:	xchg   ecx,eax
  41d026:	push   ss
  41d027:	pop    esp
  41d028:	push   edi
  41d029:	out    dx,eax
  41d02a:	adc    BYTE PTR [ebx-0x7d1a6706],al
  41d030:	out    0x3c,eax
  41d032:	and    edx,ebp
  41d034:	call   0x618af49d
  41d039:	test   al,0x6d
  41d03b:	adc    BYTE PTR [esi+ebx*1],ah
  41d03e:	es pop edi
  41d040:	and    al,0xa1
  41d042:	rcr    ah,cl
  41d044:	push   ebp
  41d045:	jmp    FWORD PTR [ebp-0x23]
  41d048:	das    
  41d049:	jl     0x41d0ac
  41d04b:	(bad)  
  41d04c:	repnz jecxz 0x41d03c
  41d04f:	ins    DWORD PTR es:[edi],dx
  41d050:	mov    esi,0x46339a8a
  41d055:	mov    cl,0x45
  41d057:	inc    eax
  41d058:	push   eax
  41d059:	frstor [eax+0x18]
  41d05c:	and    dh,BYTE PTR ds:0xfaedc25
  41d062:	lahf   
  41d063:	jge    0x41d0bc
  41d065:	push   ebp
  41d066:	outs   dx,DWORD PTR ds:[esi]
  41d067:	jo     0x41d087
  41d069:	aam    0xdf
  41d06b:	outs   dx,DWORD PTR ds:[esi]
  41d06c:	cli    
  41d06d:	and    BYTE PTR [ebp+0x2287ca2c],ch
  41d073:	fsubp  st(7),st
  41d075:	sahf   
  41d076:	out    dx,al
  41d077:	iret   
  41d078:	xlat   BYTE PTR ds:[ebx]
  41d079:	ins    DWORD PTR es:[edi],dx
  41d07a:	mov    ch,0xb6
  41d07c:	sbb    DWORD PTR [eax-0x45],edx
  41d07f:	(bad)  [ecx+0x6a]
  41d082:	push   esp
  41d083:	push   ss
  41d084:	jmp    0x26d564a
  41d089:	fdiv   st,st(7)
  41d08b:	adc    eax,0x25d69759
  41d090:	adc    ebp,DWORD PTR [esi]
  41d092:	push   cs
  41d093:	stos   BYTE PTR es:[edi],al
  41d094:	cmp    edx,0xffffff80
  41d097:	dec    edx
  41d098:	jmp    0x41d04c
  41d09a:	xchg   edi,eax
  41d09b:	jae    0x41d05b
  41d09d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d09e:	push   DWORD PTR [edx+0x406c42ff]
  41d0a4:	jbe    0x41d068
  41d0a6:	and    BYTE PTR [eax],bh
  41d0a8:	lods   eax,DWORD PTR ds:[esi]
  41d0a9:	sub    esi,DWORD PTR [ecx]
  41d0ab:	les    esi,FWORD PTR [edx-0x239c514c]
  41d0b1:	mov    al,ds:0x7895479
  41d0b6:	test   eax,0xe1f20b32
  41d0bb:	fcom   DWORD PTR [ebx+0x4]
  41d0be:	sar    BYTE PTR [ebp+0x79],cl
  41d0c1:	or     BYTE PTR [ebp+edx*4+0x2867ead2],bl
  41d0c8:	fstp   st(6)
  41d0ca:	out    dx,eax
  41d0cb:	or     al,0x96
  41d0cd:	rcr    ebx,cl
  41d0cf:	and    eax,0x4731ba6d
  41d0d4:	cmp    ebp,edi
  41d0d6:	out    0x65,al
  41d0d8:	mov    cl,0x2c
  41d0da:	xor    edi,DWORD PTR ds:0xb46683f2
  41d0e0:	in     eax,0x6f
  41d0e2:	pushf  
  41d0e3:	es scas eax,DWORD PTR es:[edi]
  41d0e5:	cmp    eax,0x91eb3dd8
  41d0ea:	sbb    ah,dl
  41d0ec:	bound  eax,QWORD PTR [edx]
  41d0ee:	out    0xea,al
  41d0f0:	add    bh,al
  41d0f2:	cld    
  41d0f3:	fimul  WORD PTR [edx-0x62]
  41d0f6:	rcr    DWORD PTR ds:0xbb14b8aa,cl
  41d0fc:	cli    
  41d0fd:	in     eax,0x3e
  41d0ff:	retf   
  41d100:	les    esp,FWORD PTR [ebx+0x249c2f9c]
  41d106:	test   eax,esp
  41d108:	rcl    DWORD PTR [edx-0x54],0x8c
  41d10c:	iret   
  41d10d:	inc    ebx
  41d10e:	mov    eax,0xc48031ea
  41d113:	pop    DWORD PTR [edx-0x2e]
  41d116:	xchg   edi,eax
  41d117:	outs   dx,BYTE PTR ds:[esi]
  41d118:	xchg   esp,eax
  41d119:	pushf  
  41d11a:	pop    esi
  41d11b:	or     al,0x86
  41d11d:	mov    dl,0x48
  41d11f:	push   0x1705e77
  41d124:	cmc    
  41d125:	iret   
  41d126:	pcmpeqb mm0,QWORD PTR [eax-0x1cde79d]
  41d12d:	xor    eax,0x6fdace61
  41d132:	int    0xb1
  41d134:	fldenv [eax-0x5abe4bb1]
  41d13a:	lock out dx,al
  41d13c:	aas    
  41d13d:	sbb    BYTE PTR [esp+edx*1+0x4a],al
  41d141:	cmp    BYTE PTR [edi+ebp*4],ch
  41d144:	mov    eax,ds:0xa143a06b
  41d149:	sti    
  41d14a:	(bad)  
  41d14b:	mov    ah,0x4f
  41d14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d14e:	inc    eax
  41d14f:	and    DWORD PTR [esi-0x60],ecx
  41d152:	sti    
  41d153:	dec    esi
  41d154:	dec    ebp
  41d155:	adc    eax,0xff9f56a4
  41d15a:	into   
  41d15b:	mov    esi,0xd96a4c4a
  41d160:	mov    esi,0xf2a622
  41d165:	mov    esp,?
  41d167:	pop    ds
  41d168:	(bad)  
  41d169:	lahf   
  41d16a:	or     BYTE PTR [edx+0x377ce523],bl
  41d170:	cld    
  41d171:	data16 in al,dx
  41d173:	fstp   QWORD PTR [edx-0x1aaab200]
  41d179:	aaa    
  41d17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d17b:	mov    ebp,0xeaf652ea
  41d180:	jne    0x41d1b1
  41d182:	mov    bl,0x9
  41d184:	cmp    BYTE PTR [edx+0x8ed04bb],dh
  41d18a:	add    esi,0xd1c21a2f
  41d190:	push   ds
  41d191:	mov    ds:0x70c9b391,al
  41d196:	out    dx,al
  41d197:	mov    esi,0x4b9a9017
  41d19c:	cmovge ebp,DWORD PTR [edx+0x6d]
  41d1a0:	push   edi
  41d1a1:	seta   ch
  41d1a4:	jle    0x41d17f
  41d1a6:	mov    ch,BYTE PTR [esi]
  41d1a8:	into   
  41d1a9:	out    dx,al
  41d1aa:	cmp    esp,esp
  41d1ac:	out    0x8d,al
  41d1ae:	jo     0x41d1f8
  41d1b0:	scas   al,BYTE PTR es:[edi]
  41d1b1:	jmp    0x27c476c0
  41d1b6:	pop    edx
  41d1b7:	sub    ch,dh
  41d1b9:	add    eax,0x9c057c4d
  41d1be:	pop    ecx
  41d1bf:	clc    
  41d1c0:	sub    DWORD PTR [esi],edi
  41d1c2:	mov    ebx,0x56177b7a
  41d1c7:	add    BYTE PTR [ecx-0x73],cl
  41d1ca:	dec    esi
  41d1cb:	pusha  
  41d1cc:	cli    
  41d1cd:	aas    
  41d1ce:	jo     0x41d1ff
  41d1d0:	fsubr  st,st(4)
  41d1d2:	inc    edi
  41d1d3:	pop    esp
  41d1d4:	dec    ebx
  41d1d5:	pop    ds
  41d1d6:	adc    dh,dl
  41d1d8:	cld    
  41d1d9:	adc    DWORD PTR [eax+eiz*1],eax
  41d1dc:	ins    DWORD PTR es:[edi],dx
  41d1dd:	adc    BYTE PTR [ebp+0x13cfafcb],dh
  41d1e3:	push   edi
  41d1e4:	pop    ebx
  41d1e5:	push   eax
  41d1e6:	rcr    cl,0xa0
  41d1e9:	addr16 add ebp,esi
  41d1ec:	mov    ds:0xaeac3564,al
  41d1f1:	mov    eax,0xd4b6f385
  41d1f6:	xchg   ebp,eax
  41d1f7:	fbld   TBYTE PTR [eax-0x63fcc06a]
  41d1fd:	push   esp
  41d1fe:	popa   
  41d1ff:	push   ds
  41d200:	sar    BYTE PTR [ebp+0xa71f08e],1
  41d206:	lods   al,BYTE PTR ds:[esi]
  41d207:	pop    ds
  41d208:	cmp    edx,DWORD PTR [ecx-0x421633e0]
  41d20e:	cmp    DWORD PTR [esi+ebp*1],esp
  41d211:	dec    esi
  41d212:	adc    al,0x8
  41d214:	xor    cl,BYTE PTR [esi+0x27c5a487]
  41d21a:	in     eax,dx
  41d21b:	or     ah,BYTE PTR [edi+0x2c]
  41d21e:	rcr    bh,0x27
  41d221:	mov    esi,0xacccfc47
  41d226:	dec    edx
  41d227:	int    0xa5
  41d229:	lahf   
  41d22a:	sahf   
  41d22b:	pop    edx
  41d22c:	cwde   
  41d22d:	mov    cl,BYTE PTR [eax+eax*8+0x37]
  41d231:	and    edx,edi
  41d233:	mov    al,ds:0xbb83c00e
  41d238:	mov    ?,WORD PTR [ebx]
  41d23a:	nop
  41d23b:	adc    BYTE PTR [ecx],al
  41d23d:	test   BYTE PTR [eax+0x60bdc75e],ch
  41d243:	cmp    edx,eax
  41d245:	and    bl,BYTE PTR [edi+0x6adbb321]
  41d24b:	scas   al,BYTE PTR es:[edi]
  41d24c:	ret    
  41d24d:	call   0xfc751c0a
  41d252:	dec    edx
  41d253:	xchg   ebp,eax
  41d254:	dec    esp
  41d255:	data16 das 
  41d257:	in     eax,dx
  41d258:	cmp    eax,0x501923e6
  41d25d:	fisttp DWORD PTR [edi-0x2e5f77cd]
  41d263:	retf   0xadae
  41d266:	xchg   ebp,eax
  41d267:	sbb    bh,BYTE PTR [ecx+0x0]
  41d26a:	into   
  41d26b:	ja     0x41d267
  41d26d:	shl    BYTE PTR [ebp+0x42],1
  41d270:	in     al,dx
  41d271:	jbe    0x41d2dc
  41d273:	pop    es
  41d274:	in     al,dx
  41d275:	icebp  
  41d276:	rol    BYTE PTR [edx-0x18dfe606],1
  41d27c:	add    eax,0x77a1b452
  41d281:	fs inc ebp
  41d283:	cmp    DWORD PTR [edx-0x8],ebp
  41d286:	adc    DWORD PTR [eax],eax
  41d288:	(bad)  
  41d289:	jge    0x41d292
  41d28b:	jmp    0x41d24f
  41d28d:	lock adc ah,dh
  41d290:	(bad)
  41d293:	gs sahf 
  41d295:	data16 icebp 
  41d297:	and    BYTE PTR ds:0x898ed7de,0x0
  41d29e:	es mov esi,0x690a9940
  41d2a4:	adc    ebp,esp
  41d2a6:	int    0xe2
  41d2a8:	jmp    0xce937e96
  41d2ad:	jg     0x41d250
  41d2af:	dec    ebx
  41d2b0:	pop    esp
  41d2b1:	mov    edx,0x2899a77f
  41d2b6:	test   BYTE PTR ds:0x3bec1b11,dh
  41d2bc:	jb     0x41d256
  41d2be:	mov    edi,?
  41d2c0:	xchg   ebp,eax
  41d2c1:	xor    dh,BYTE PTR [edx+eiz*4-0x51]
  41d2c5:	inc    edx
  41d2c6:	adc    eax,0x59b24007
  41d2cb:	rcr    DWORD PTR [edi],cl
  41d2cd:	les    edx,FWORD PTR [edx-0x539d9d24]
  41d2d3:	and    ch,BYTE PTR [esi-0x7a]
  41d2d6:	jmp    0x63e4:0x27ebe464
  41d2dd:	loop   0x41d2a3
  41d2df:	push   ss
  41d2e0:	and    esp,ecx
  41d2e2:	in     eax,0x3
  41d2e4:	lahf   
  41d2e5:	out    0x9d,al
  41d2e7:	pop    ebp
  41d2e8:	pop    ss
  41d2e9:	sbb    dl,al
  41d2eb:	dec    ebx
  41d2ec:	add    eax,0xee9a378e
  41d2f1:	push   ecx
  41d2f2:	aam    0x67
  41d2f4:	ds loop 0x41d36e
  41d2f7:	mov    ebx,0xda6ef15e
  41d2fc:	sub    eax,0xae860ce6
  41d301:	loope  0x41d310
  41d303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d304:	sub    al,0x5c
  41d306:	loopne 0x41d315
  41d308:	sub    BYTE PTR [edx+0x1a],0xb1
  41d30c:	push   edx
  41d30d:	lods   al,BYTE PTR ds:[esi]
  41d30e:	data16 fsubr QWORD PTR [ecx]
  41d311:	cmp    BYTE PTR [edx],cl
  41d313:	fld    TBYTE PTR [ecx+ebp*4-0x1e]
  41d317:	inc    esi
  41d318:	sbb    eax,DWORD PTR [ebx]
  41d31a:	add    BYTE PTR [ebx+0xb],0xd3
  41d31e:	out    dx,eax
  41d31f:	jne    0x41d36f
  41d321:	adc    dh,cl
  41d323:	pop    ebp
  41d324:	mov    eax,ds:0x720645f4
  41d329:	stos   BYTE PTR es:[edi],al
  41d32a:	inc    DWORD PTR [ecx+0xf]
  41d32d:	mul    DWORD PTR [esi+0x5a49f82f]
  41d333:	dec    edi
  41d334:	sar    BYTE PTR [esi],cl
  41d336:	sbb    edx,DWORD PTR ds:0x534d9b39
  41d33c:	sub    bh,cl
  41d33e:	dec    eax
  41d33f:	fldenv [ebx-0x5c73de4e]
  41d345:	ficomp WORD PTR [eax-0x39df556]
  41d34c:	inc    eax
  41d34d:	lods   eax,DWORD PTR ds:[esi]
  41d34e:	loopne 0x41d3a8
  41d350:	adc    al,0x44
  41d352:	xor    eax,0xef5980b6
  41d357:	and    bh,BYTE PTR [eax+edi*8+0x3283431]
  41d35e:	push   ebp
  41d35f:	jecxz  0x41d3b5
  41d361:	dec    eax
  41d362:	or     bl,dl
  41d364:	fcomp  DWORD PTR ds:0x4cce0f86
  41d36a:	test   BYTE PTR [esi-0x54100c3f],bh
  41d370:	sbb    dh,BYTE PTR [ecx-0x45]
  41d373:	mov    ebx,0xd841d388
  41d378:	push   edx
  41d379:	dec    ebp
  41d37a:	retf   0xc777
  41d37d:	and    ch,BYTE PTR [eax+0x67]
  41d380:	xchg   esi,eax
  41d381:	inc    esi
  41d382:	test   BYTE PTR [ebx],al
  41d384:	ror    DWORD PTR [edi+eax*2],0x96
  41d388:	in     al,dx
  41d389:	aaa    
  41d38a:	repnz loop 0x41d399
  41d38d:	ins    BYTE PTR es:[edi],dx
  41d38e:	mov    al,ds:0x66822cf2
  41d393:	xchg   BYTE PTR fs:[edx+0x5388358e],ah
  41d39a:	adc    esp,edx
  41d39c:	xchg   edi,eax
  41d39d:	and    DWORD PTR [edi-0x21],edi
  41d3a0:	retf   
  41d3a1:	rcl    DWORD PTR [ebp+0x45],0xe2
  41d3a5:	dec    ebx
  41d3a6:	mov    dl,0xd6
  41d3a8:	mov    ?,WORD PTR [edx+0x39]
  41d3ab:	arpl   WORD PTR [ebp+0x2fb786c],cx
  41d3b1:	fldenv [edx-0xf]
  41d3b4:	std    
  41d3b5:	loopne 0x41d3e4
  41d3b7:	sbb    al,bh
  41d3b9:	and    esi,DWORD PTR [esi+0x11]
  41d3bc:	aam    0x35
  41d3be:	lods   eax,DWORD PTR ds:[esi]
  41d3bf:	sbb    dh,BYTE PTR [eax]
  41d3c1:	int    0x8f
  41d3c3:	push   es
  41d3c4:	xchg   BYTE PTR [esi],dl
	...
  41d3ce:	add    BYTE PTR [eax],al
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	push   ds
  41d3de:	rol    DWORD PTR [edx+0x5d],0xdb
  41d3e2:	dec    edi
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	lods   eax,DWORD PTR ds:[esi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [ecx+0x66],cl
  41d3eb:	pop    ds
  41d3ec:	js     0x41d3c9
  41d3ee:	sub    al,0x6c
  41d3f0:	imul   esp,DWORD PTR [esi+ecx*4],0xffffffae
  41d3f4:	mov    al,0x49
  41d3f6:	gs leave 
  41d3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f9:	mov    ebx,?
  41d3fb:	xor    ch,ah
  41d3fd:	fstp   st(2)
  41d3ff:	stos   DWORD PTR es:[edi],eax
  41d400:	ret    
  41d401:	and    eax,0xc046d91c
  41d406:	scas   al,BYTE PTR es:[edi]
  41d407:	ret    
  41d408:	int3   
  41d409:	push   edx
  41d40a:	or     edx,ecx
  41d40c:	pop    esi
  41d40d:	mov    al,BYTE PTR [edx]
  41d40f:	mov    al,0x8b
  41d411:	pop    esp
  41d412:	sbb    DWORD PTR [edx-0x25],esp
  41d415:	dec    ebp
  41d416:	pop    esp
  41d417:	ss sub al,0x5b
  41d41a:	jmp    0x5444:0x97614ff1
  41d421:	retf   0x86b7
  41d424:	outs   dx,BYTE PTR ds:[esi]
  41d425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d426:	lds    ebp,FWORD PTR [edi]
  41d428:	mov    bl,0xb6
  41d42a:	add    ebx,edi
  41d42c:	adc    DWORD PTR [ebp+0x61],eax
  41d42f:	lahf   
  41d430:	jo     0x41d425
  41d432:	call   DWORD PTR [esi]
  41d434:	cdq    
  41d435:	ss pop ebp
  41d437:	jl     0x41d3e9
  41d439:	and    esi,DWORD PTR [ebx+0x4e]
  41d43c:	in     al,0x27
  41d43e:	(bad)  
  41d43f:	xlat   BYTE PTR ds:[ebx]
  41d440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d441:	loop   0x41d3e2
  41d443:	outs   dx,BYTE PTR ds:[esi]
  41d444:	mov    bh,0x7c
  41d446:	or     ebx,DWORD PTR ds:0xe39ca5c4
  41d44c:	lds    esp,FWORD PTR [ebp-0x75]
  41d44f:	mov    bh,0xdb
  41d451:	loope  0x41d3f2
  41d453:	aam    0x4
  41d455:	xor    al,0x9b
  41d457:	fsubr  DWORD PTR [eax-0x70]
  41d45a:	(bad)  
  41d45b:	ret    
  41d45c:	pop    ebp
  41d45d:	cdq    
  41d45e:	push   ebp
  41d45f:	jo     0x41d44b
  41d461:	sbb    bh,ah
  41d463:	loope  0x41d40b
  41d465:	cmp    eax,0xe58c6b26
  41d46a:	aaa    
  41d46b:	jnp    0x41d44d
  41d46d:	data16 xor ch,BYTE PTR [edi+0xf]
  41d471:	mov    cl,0x16
  41d473:	les    ebx,FWORD PTR [esi-0x3921d21f]
  41d479:	stc    
  41d47a:	mov    ecx,0x3d204a1e
  41d47f:	inc    eax
  41d480:	adc    BYTE PTR [ebx],bl
  41d482:	sub    al,0x26
  41d484:	and    eax,eax
  41d486:	mov    dh,0x30
  41d488:	or     DWORD PTR [esi],edi
  41d48a:	mov    eax,0x50dfb2d5
  41d48f:	xor    DWORD PTR [ebx+0x711e9eb0],ecx
  41d495:	or     ebp,DWORD PTR fs:[esi+0x2d]
  41d499:	clc    
  41d49a:	sbb    al,0xa2
  41d49c:	nop
  41d49d:	and    al,0x2c
  41d4a0:	loopne 0x41d47a
  41d4a2:	mov    edx,ebp
  41d4a4:	jge    0x41d4f1
  41d4a6:	scas   al,BYTE PTR es:[edi]
  41d4a7:	xchg   esi,eax
  41d4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a9:	mov    dh,0xa
  41d4ab:	sbb    BYTE PTR [esi-0x20],al
  41d4ae:	out    0x21,eax
  41d4b0:	test   eax,0xa5a9f75b
  41d4b5:	pop    esi
  41d4b6:	jmp    0x41d454
  41d4b8:	mov    dh,0x90
  41d4ba:	mov    BYTE PTR [esi+0x53],0xa4
  41d4be:	stos   DWORD PTR es:[edi],eax
  41d4bf:	mov    eax,ds:0xf7acc3ab
  41d4c4:	cmp    dl,BYTE PTR [ebp-0x53]
  41d4c7:	fwait
  41d4c8:	mov    edx,0x39b21353
  41d4cd:	mov    eax,0x6798e730
  41d4d2:	mov    gs,ecx
  41d4d4:	mov    ds:0xb4ab8eb4,al
  41d4d9:	add    eax,0x2133629c
  41d4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4df:	test   al,0x3
  41d4e1:	dec    ebp
  41d4e2:	xor    eax,0x9d23df8
  41d4e7:	mov    ds:0x58e0680e,al
  41d4ec:	jns    0x41d554
  41d4ee:	mov    edx,0x62bf00a0
  41d4f3:	cld    
  41d4f4:	retf   0xdb01
  41d4f7:	cmp    edi,DWORD PTR [edx-0x4f]
  41d4fa:	inc    ebx
  41d4fb:	das    
  41d4fc:	xor    al,0xb4
  41d4fe:	mov    DWORD PTR [ebx+0x6b],esp
  41d501:	shl    esp,0xd2
  41d504:	push   ebp
  41d505:	sub    DWORD PTR [eax-0x2bcc92fa],esp
  41d50b:	ins    DWORD PTR es:[edi],dx
  41d50c:	and    eax,0x48bc50f2
  41d511:	imul   esp,DWORD PTR [edx-0x30],0xabc38661
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	pop    es
  41d51a:	aad    0xb6
  41d51c:	mov    al,0xfa
  41d51e:	idiv   edi
  41d520:	js     0x41d50a
  41d522:	or     BYTE PTR [ecx],al
  41d524:	popa   
  41d525:	push   edi
  41d526:	je     0x41d4ef
  41d528:	mov    al,ds:0x3dc22f5c
  41d52d:	dec    esi
  41d52e:	push   0xf8364c2f
  41d533:	mov    sp,0x95a4
  41d537:	pusha  
  41d538:	lea    eax,[esi-0x6633e9fa]
  41d53e:	aaa    
  41d53f:	jo     0x41d5a8
  41d541:	stos   DWORD PTR es:[edi],eax
  41d542:	xchg   ah,cl
  41d544:	inc    ebx
  41d545:	xor    DWORD PTR [edx+0x24],edx
  41d548:	sar    DWORD PTR [edi+ecx*2],1
  41d54b:	mov    esi,0x6f8d12e
  41d550:	mov    bl,0xcf
  41d552:	inc    eax
  41d553:	ss mov bl,0x49
  41d556:	xchg   ebx,eax
  41d557:	rcr    DWORD PTR [eax+0x7c645e4e],0x12
  41d55e:	mov    edx,0x9287b510
  41d563:	inc    ebp
  41d564:	je     0x41d525
  41d566:	cmp    eax,0x61fa1481
  41d56b:	xor    dh,BYTE PTR [ecx]
  41d56d:	retf   
  41d56e:	mov    eax,0x44dd4362
  41d573:	sub    BYTE PTR [edi-0x5c],ch
  41d576:	ss inc ebx
  41d578:	ins    BYTE PTR es:[edi],dx
  41d579:	add    eax,0xcba64e1e
  41d57e:	in     al,dx
  41d57f:	popf   
  41d580:	bound  edi,QWORD PTR [ebx-0x14]
  41d583:	ficomp WORD PTR [ebx-0x5f284f76]
  41d589:	(bad)  
  41d58a:	cwde   
  41d58b:	mov    ecx,esp
  41d58d:	ss mov edx,0x6dd90173
  41d593:	out    0x9c,al
  41d595:	aas    
  41d596:	inc    esi
  41d597:	cmp    ebp,DWORD PTR [edx+0x3348707c]
  41d59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59e:	sbb    eax,0xe79e578d
  41d5a3:	jne    0x41d622
  41d5a5:	(bad)  
  41d5a6:	dec    esp
  41d5a7:	nop
  41d5a8:	pushf  
  41d5a9:	push   0x72
  41d5ab:	test   DWORD PTR [eax+0x6],0xb7b29dbd
  41d5b2:	xchg   esp,eax
  41d5b3:	xchg   esi,eax
  41d5b4:	push   esp
  41d5b5:	mov    edx,0xfa819d8
  41d5ba:	mov    DWORD PTR [ebp-0x715d6750],0x9ba45dcb
  41d5c4:	popf   
  41d5c5:	push   0xfffffff9
  41d5c7:	inc    edi
  41d5c8:	cmp    eax,0xee20b305
  41d5cd:	push   si
  41d5cf:	jnp    0x41d64c
  41d5d1:	sub    DWORD PTR [esi+ebp*2-0x49f588bb],edi
  41d5d8:	(bad)  
  41d5da:	sahf   
  41d5db:	cmp    al,0xd
  41d5dd:	adc    bl,BYTE PTR [esi]
  41d5df:	jb     0x41d641
  41d5e1:	cwde   
  41d5e2:	mov    esp,0x6b2b56e
  41d5e7:	cmp    dl,BYTE PTR [edx+0x79a317db]
  41d5ed:	pop    esp
  41d5ee:	es inc ebx
  41d5f0:	jmp    0x41d66c
  41d5f2:	xchg   edx,eax
  41d5f3:	inc    esi
  41d5f4:	dec    edx
  41d5f5:	sti    
  41d5f6:	xchg   ebx,eax
  41d5f7:	add    cl,BYTE PTR [edi+eax*8]
  41d5fa:	bound  ebp,QWORD PTR [edx-0x3]
  41d5fd:	inc    ebx
  41d5fe:	cmp    eax,0x8e83b614
  41d603:	int    0x4c
  41d605:	cdq    
  41d606:	jg     0x41d678
  41d608:	dec    edx
  41d609:	adc    eax,0xfdc06e7d
  41d60e:	adc    ah,BYTE PTR [ebp+ebp*1-0x8]
  41d612:	stc    
  41d613:	jecxz  0x41d641
  41d615:	or     ah,dh
  41d617:	sbb    BYTE PTR [ebp+0x44],0x94
  41d61b:	push   esi
  41d61c:	stos   DWORD PTR es:[edi],eax
  41d61d:	aas    
  41d61e:	loop   0x41d697
  41d620:	call   DWORD PTR [ebp+ecx*8-0x39]
  41d624:	mul    BYTE PTR [edx]
  41d626:	inc    ecx
  41d627:	in     eax,0xd5
  41d629:	(bad)  
  41d62a:	xchg   esi,eax
  41d62b:	stc    
  41d62c:	retf   0x314a
  41d62f:	jp     0x41d670
  41d631:	outs   dx,BYTE PTR ds:[esi]
  41d632:	cmp    bl,BYTE PTR [edi+edi*4]
  41d635:	imul   ebx,DWORD PTR [ebx+0x1c],0x4d807e60
  41d63c:	imul   ecx,DWORD PTR [ebx+0x5f29f53],0x31
  41d643:	clc    
  41d644:	fadd   QWORD PTR ds:0xd6f0f26f
  41d64a:	and    al,0x61
  41d64c:	push   ecx
  41d64d:	aad    0x7b
  41d64f:	mov    ah,BYTE PTR [edi-0x5b]
  41d652:	int3   
  41d653:	loopne 0x41d5de
  41d655:	js     0x41d61f
  41d657:	mov    eax,0xcb880dd7
  41d65c:	mov    cl,0xb7
  41d65e:	push   0x75
  41d660:	pop    eax
  41d661:	sub    BYTE PTR [edx+0x20d36af2],0xff
  41d668:	stos   DWORD PTR es:[edi],eax
  41d669:	add    esi,DWORD PTR [esi-0x42]
  41d66c:	sub    edi,DWORD PTR ds:0xc3f03018
  41d672:	imul   esi,DWORD PTR [edx],0x909db745
  41d678:	pop    ecx
  41d679:	imul   ebx,esp,0xc0296522
  41d67f:	lea    ebp,[edi]
  41d681:	xchg   esi,eax
  41d682:	es js  0x41d702
  41d685:	and    al,bl
  41d687:	mov    cl,0xe1
  41d689:	mov    bh,0x42
  41d68b:	out    0xa9,eax
  41d68d:	and    BYTE PTR [ecx+eiz*2-0x68],cl
  41d691:	aad    0x3
  41d693:	push   0x135755ff
  41d698:	ret    
  41d699:	imul   eax,DWORD PTR [ebx-0x55a6f09],0x4a21f65b
  41d6a3:	xchg   DWORD PTR [eax-0x7f],esp
  41d6a6:	xor    bh,BYTE PTR [ebx-0x6c3eb868]
  41d6ac:	ss daa 
  41d6ae:	outs   dx,DWORD PTR ds:[esi]
  41d6af:	inc    esi
  41d6b0:	xchg   ebp,eax
  41d6b1:	fisub  DWORD PTR [ecx]
  41d6b3:	fisttp WORD PTR [edi+0x64]
  41d6b6:	push   DWORD PTR [edi-0x11bdb43f]
  41d6bc:	add    al,BYTE PTR [edi]
  41d6be:	push   ebx
  41d6bf:	xor    BYTE PTR [eax-0x4451cc93],al
  41d6c5:	arpl   WORD PTR [eax+ebx*8],dx
  41d6c8:	adc    al,0x12
  41d6ca:	ror    dh,0x36
  41d6cd:	fcmove st,st(7)
  41d6cf:	dec    ebx
  41d6d0:	xlat   BYTE PTR ds:[ebx]
  41d6d1:	ins    DWORD PTR es:[edi],dx
  41d6d2:	push   ebx
  41d6d3:	or     DWORD PTR [ebx+0x100d075c],ebx
  41d6d9:	jns    0x41d715
  41d6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6dc:	mov    edx,0x12d47044
  41d6e1:	jns    0x41d6f2
  41d6e3:	xchg   ecx,eax
  41d6e4:	cdq    
  41d6e5:	shl    BYTE PTR [ebx-0x6],0xa4
  41d6e9:	jae    0x41d765
  41d6eb:	mov    DWORD PTR [esp+ebp*4-0x4d],esp
  41d6ef:	xchg   edx,eax
  41d6f0:	test   bl,0x37
  41d6f3:	out    0x64,eax
  41d6f5:	lds    esi,FWORD PTR [edi-0x4edbe92e]
  41d6fb:	shl    BYTE PTR [ebp-0x498c7735],0x27
  41d702:	scas   al,BYTE PTR es:[edi]
  41d703:	mov    gs,WORD PTR [ebp-0x44]
  41d706:	mov    BYTE PTR [edx+eiz*1-0x9fe7305],ah
  41d70d:	imul   ecx,DWORD PTR [ebp-0x2c],0xd4eb926d
  41d714:	mov    esp,DWORD PTR [edi+eax*8+0x1c]
  41d718:	mov    edi,0xfcfe32f8
  41d71d:	sbb    esp,DWORD PTR [ecx-0x543d326]
  41d723:	pop    ds
  41d724:	adc    DWORD PTR [edx],esp
  41d726:	imul   edi,DWORD PTR [edx+edx*8+0x5b],0xffffff87
  41d72b:	rcl    ah,cl
  41d72d:	imul   ebx,esp,0xffffffd5
  41d730:	xor    BYTE PTR [edi+eiz*1+0x2f1f3555],al
  41d737:	sbb    al,0x10
  41d739:	xchg   DWORD PTR [ecx+ebx*4+0x5b],ebp
  41d73d:	call   0xd71a:0x73171bad
  41d744:	mov    eax,0x1204d4e1
  41d749:	xchg   ebx,eax
  41d74a:	push   edi
  41d74b:	retf   0xb793
  41d74e:	popf   
  41d74f:	push   ecx
  41d750:	jmp    0xa5f6:0x81ecac37
  41d757:	jl     0x41d6ef
  41d759:	jb     0x41d7b9
  41d75b:	mov    ebp,0x6b7f09d4
  41d760:	inc    BYTE PTR ds:0x24e5ee4c
  41d766:	cmp    BYTE PTR [ebx],cl
  41d768:	out    dx,eax
  41d769:	push   ebx
  41d76a:	xchg   BYTE PTR [edi+0x53d1b30e],ch
  41d770:	mov    esp,0x138585e3
  41d775:	or     edi,ebx
  41d777:	adc    eax,0xcaafeda6
  41d77c:	daa    
  41d77d:	jns    0x41d721
  41d77f:	push   ecx
  41d780:	push   ecx
  41d781:	pop    es
  41d782:	dec    edx
  41d783:	into   
  41d784:	sbb    BYTE PTR [eax+0x8],0x7
  41d788:	int    0xaa
  41d78a:	lods   al,BYTE PTR ds:[esi]
  41d78b:	push   edx
  41d78c:	enter  0x318d,0x96
  41d790:	xor    DWORD PTR [eax+0x58b309b5],0x0
	...
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx-0x3d10ec5e],ah
  41d7af:	or     ah,BYTE PTR [eax+ecx*4+0x53]
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	lods   eax,DWORD PTR ds:[esi]
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [eax+0x44bca033],dh
  41d7be:	in     eax,0x56
  41d7c0:	ja     0x41d770
  41d7c2:	sbb    dl,bh
  41d7c4:	mov    ah,0x91
  41d7c6:	aam    0x36
  41d7c8:	adc    cl,BYTE PTR [esi+ecx*8+0x30]
  41d7cc:	sub    BYTE PTR [edx+ebp*4-0x15],cl
  41d7d0:	mov    DWORD PTR [ebp-0x4f2576b3],edi
  41d7d6:	mov    DWORD PTR [edx],ebx
  41d7d8:	dec    ebp
  41d7d9:	inc    esp
  41d7da:	mov    al,ds:0xd580c063
  41d7df:	xor    al,0xce
  41d7e1:	sbb    DWORD PTR [ecx+0x62a93ff0],ebx
  41d7e7:	jno    0x41d77a
  41d7e9:	imul   ecx,DWORD PTR [eax+0x272c0d74],0x53
  41d7f0:	mov    ch,0x38
  41d7f2:	mov    al,ds:0x6de46a88
  41d7f7:	mov    dh,0x99
  41d7f9:	xor    DWORD PTR [ecx+0x4fb626f9],ebp
  41d7ff:	sub    eax,DWORD PTR [esi-0x41666c22]
  41d805:	cld    
  41d806:	into   
  41d807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d808:	int3   
  41d809:	sub    al,0x53
  41d80b:	adc    eax,0xd9cadcca
  41d810:	shr    DWORD PTR [edi],cl
  41d812:	mov    cl,0x81
  41d814:	sahf   
  41d815:	mov    bh,0x4d
  41d817:	mov    bl,0xa4
  41d819:	adc    al,BYTE PTR [eax-0x256cf330]
  41d81f:	xor    al,0x70
  41d821:	ds dec ebx
  41d823:	pop    ecx
  41d824:	mov    eax,0xa1ab3f10
  41d829:	gs sub ebx,ebp
  41d82c:	les    eax,FWORD PTR [edi+ebx*1+0x76756726]
  41d833:	push   ebp
  41d834:	shl    ebx,0xa0
  41d837:	and    DWORD PTR [ecx+0x56eb5c10],edi
  41d83d:	dec    esi
  41d83e:	pop    edx
  41d83f:	repz xor ah,ch
  41d842:	out    0xc3,eax
  41d844:	shl    ch,cl
  41d846:	fdiv   DWORD PTR [ebp+0xe]
  41d849:	dec    ebx
  41d84a:	dec    ebx
  41d84b:	inc    ebp
  41d84c:	loop   0x41d7fd
  41d84e:	fs jle 0x41d863
  41d851:	div    DWORD PTR [edx+ecx*1]
  41d854:	pop    es
  41d855:	mov    al,fs:0x22a0c317
  41d85b:	mov    cl,0xaa
  41d85d:	adc    al,0x7b
  41d85f:	leave  
  41d860:	pop    eax
  41d861:	mov    ch,0xac
  41d863:	fistp  QWORD PTR [esi+0x4c]
  41d866:	int3   
  41d867:	jnp    0x41d84d
  41d869:	in     eax,0x6b
  41d86b:	fisubr WORD PTR ds:0x5be343de
  41d871:	cmp    eax,0xcdca5870
  41d876:	ficomp WORD PTR [ecx+ebx*2]
  41d879:	pop    ecx
  41d87a:	or     al,0xb5
  41d87c:	loop   0x41d884
  41d87e:	scas   al,BYTE PTR es:[edi]
  41d87f:	inc    eax
  41d880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d881:	push   esi
  41d882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d883:	push   0xffffffa5
  41d885:	pop    ecx
  41d886:	and    eax,0xf8b1c855
  41d88b:	add    ebx,DWORD PTR [ebx+0x52]
  41d88e:	scas   al,BYTE PTR es:[edi]
  41d88f:	inc    ebp
  41d890:	jae    0x41d8b1
  41d892:	inc    esi
  41d893:	add    al,0xb5
  41d895:	call   0xe44eb66e
  41d89a:	fild   DWORD PTR [ebx-0x44154306]
  41d8a0:	sahf   
  41d8a1:	mov    esp,0x34a8988f
  41d8a6:	test   DWORD PTR [edi],eax
  41d8a8:	inc    ecx
  41d8a9:	mov    eax,DWORD PTR [ebp+eax*8+0x48]
  41d8ad:	movsx  ebx,WORD PTR [esi]
  41d8b0:	mov    WORD PTR [ebp+0x46],ds
  41d8b3:	cmc    
  41d8b4:	add    BYTE PTR [eax-0x47],dh
  41d8b7:	xchg   esp,eax
  41d8b8:	xchg   ebp,eax
  41d8b9:	dec    esi
  41d8ba:	push   ebp
  41d8bb:	call   0xd3af:0x50e3e181
  41d8c2:	rcr    BYTE PTR [esp+edx*1],1
  41d8c5:	cmc    
  41d8c6:	adc    BYTE PTR [ebp-0x22],bl
  41d8c9:	out    0xfd,eax
  41d8cb:	jecxz  0x41d89d
  41d8cd:	adc    BYTE PTR ds:0x563f4d3e,bh
  41d8d3:	ret    
  41d8d4:	pop    es
  41d8d5:	dec    ebx
  41d8d6:	mov    ?,WORD PTR [esi]
  41d8d8:	xchg   ebx,eax
  41d8d9:	inc    ecx
  41d8da:	pop    ebx
  41d8db:	xchg   ecx,eax
  41d8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8dd:	add    bh,0x52
  41d8e0:	mov    esi,0xaeec8862
  41d8e5:	adc    BYTE PTR [ecx+0x20aba08b],ch
  41d8eb:	dec    ebx
  41d8ec:	fidivr WORD PTR [edx+eax*8]
  41d8ef:	sti    
  41d8f0:	and    al,0x11
  41d8f2:	or     cl,ah
  41d8f4:	jae    0x41d901
  41d8f6:	int    0x2c
  41d8f8:	mov    edx,0x3fbebd0a
  41d8fd:	cmp    BYTE PTR [ebp+0x4fbb8889],ch
  41d903:	and    edx,DWORD PTR [eax+0x4994273b]
  41d909:	lea    esi,[eax+0x48]
  41d90c:	xor    eax,0x2e0e924e
  41d911:	loope  0x41d8bd
  41d913:	fld    DWORD PTR [eax+0x29542c76]
  41d919:	sbb    edx,edx
  41d91b:	jnp    0x41d94b
  41d91d:	mov    dh,0xad
  41d91f:	or     ebp,DWORD PTR [edi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	mov    ds:0x73d67896,al
  41d927:	dec    eax
  41d928:	xor    BYTE PTR [edi-0x44568e04],dl
  41d92e:	test   eax,edx
  41d930:	lods   al,BYTE PTR ds:[esi]
  41d931:	or     eax,edx
  41d933:	loopne 0x41d9b2
  41d935:	sti    
  41d936:	cli    
  41d937:	mov    al,ds:0x7abb51fe
  41d93c:	in     al,dx
  41d93d:	dec    ebx
  41d93e:	sbb    al,0x50
  41d940:	ror    dl,cl
  41d942:	fldenv [esi-0x72540be9]
  41d948:	aam    0x9
  41d94a:	jae    0x41d8e6
  41d94c:	add    bl,BYTE PTR [edi]
  41d94e:	out    0xd7,eax
  41d950:	and    ecx,DWORD PTR ds:0x532d483f
  41d956:	lds    edi,FWORD PTR ds:0x878ddb8f
  41d95c:	jle    0x41d8ef
  41d95e:	adc    esp,DWORD PTR [edx+0x34]
  41d961:	mov    ebx,0x7e81d8b
  41d966:	cdq    
  41d967:	push   esi
  41d968:	xchg   ebx,eax
  41d969:	jecxz  0x41d97d
  41d96b:	jge    0x41d943
  41d96d:	push   ss
  41d96e:	xor    ecx,DWORD PTR [eax+0x4cfd8639]
  41d974:	dec    ebx
  41d975:	push   ebp
  41d976:	scas   al,BYTE PTR es:[edi]
  41d977:	std    
  41d978:	sbb    esp,DWORD PTR [ebx-0x12]
  41d97b:	xchg   DWORD PTR [ebx+0x28],ecx
  41d97e:	push   esp
  41d97f:	stc    
  41d980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d981:	int3   
  41d982:	adc    dh,BYTE PTR [ebx+0x2d]
  41d985:	sub    eax,0xb88a6924
  41d98a:	adc    al,0x9f
  41d98c:	int    0x7a
  41d98e:	into   
  41d98f:	mov    esp,DWORD PTR [esi+ebp*2-0x78860778]
  41d996:	pushf  
  41d997:	popf   
  41d998:	xchg   ecx,eax
  41d999:	ins    BYTE PTR es:[edi],dx
  41d99a:	mov    dh,0x0
  41d99c:	sahf   
  41d99d:	in     al,0xa8
  41d99f:	cwde   
  41d9a0:	pop    ebx
  41d9a1:	cmp    eax,0xefbb6119
  41d9a6:	outs   dx,DWORD PTR ds:[esi]
  41d9a7:	cld    
  41d9a8:	fisub  WORD PTR [ecx-0x4f92871e]
  41d9ae:	fmul   DWORD PTR [ecx+0x7d]
  41d9b1:	pop    es
  41d9b2:	(bad)  
  41d9b3:	imul   esi,DWORD PTR [esi-0x5dfced2f],0x25
  41d9ba:	jl     0x41d9c0
  41d9bc:	stc    
  41d9bd:	mov    BYTE PTR [edi+esi*1-0x786ece1d],bl
  41d9c4:	leave  
  41d9c5:	cdq    
  41d9c6:	shl    ebx,0xcd
  41d9c9:	(bad)  
  41d9ca:	iret   
  41d9cb:	cld    
  41d9cc:	xor    eax,0x5ac83846
  41d9d1:	(bad)  
  41d9d2:	(bad)  
  41d9d4:	out    dx,eax
  41d9d5:	mov    BYTE PTR [edi-0x6cc0371f],bl
  41d9db:	out    dx,al
  41d9dc:	int    0x2e
  41d9de:	mov    edx,0x82793d1f
  41d9e3:	into   
  41d9e4:	rcr    DWORD PTR [eax-0x7bce6b10],0x4a
  41d9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ec:	loop   0x41da40
  41d9ee:	pop    ebx
  41d9ef:	jmp    DWORD PTR [edx]
  41d9f1:	inc    ebx
  41d9f2:	push   edx
  41d9f3:	in     al,0x22
  41d9f5:	jne    0x41da5d
  41d9f7:	add    esi,DWORD PTR [ecx]
  41d9f9:	push   ax
  41d9fb:	and    al,0x9a
  41d9fd:	imul   edx,DWORD PTR [esi-0x39],0xffffff86
  41da01:	(bad)  
  41da03:	add    DWORD PTR [edx+0x3e],ebp
  41da06:	mov    eax,0x152b259b
  41da0b:	iret   
  41da0c:	and    dh,al
  41da0e:	lahf   
  41da0f:	loope  0x41d9e9
  41da11:	pop    ds
  41da12:	fild   WORD PTR [esi-0x27]
  41da15:	je     0x41da32
  41da17:	dec    edx
  41da18:	adc    DWORD PTR [eax+0x42],eax
  41da1b:	and    BYTE PTR [ebp+0x3df771a6],dh
  41da21:	test   DWORD PTR [edi+0x21],ecx
  41da24:	pop    ecx
  41da25:	hlt    
  41da26:	add    eax,0x99cb16da
  41da2b:	(bad)  
  41da2c:	dec    esp
  41da2d:	cmp    eax,0x56689410
  41da32:	icebp  
  41da33:	mov    esi,0xb243c9fc
  41da38:	push   ds
  41da39:	(bad)  
  41da3a:	mov    WORD PTR [edx+0x5a],?
  41da3d:	aad    0xc1
  41da3f:	and    BYTE PTR [edx],ah
  41da41:	jle    0x41da05
  41da43:	in     eax,0xa7
  41da45:	shl    DWORD PTR [esi+0x27],1
  41da48:	push   eax
  41da49:	repnz push edx
  41da4b:	into   
  41da4c:	sub    ebp,DWORD PTR [ebp+0x7043bea6]
  41da52:	fisttp QWORD PTR [ebx]
  41da54:	add    al,0xf3
  41da56:	dec    eax
  41da57:	pusha  
  41da58:	xchg   bh,ch
  41da5a:	aaa    
  41da5b:	aad    0x1e
  41da5d:	or     DWORD PTR [ecx+0x5a],esi
  41da60:	pop    ss
  41da61:	add    BYTE PTR [esi],0xe6
  41da64:	pop    edx
  41da65:	sub    esi,DWORD PTR [esi-0x8]
  41da68:	xchg   esi,eax
  41da69:	jnp    0x41da07
  41da6b:	(bad)  
  41da6c:	arpl   WORD PTR [edx-0x71d3307b],di
  41da72:	dec    DWORD PTR [ebp-0x1c6d58c5]
  41da78:	cmp    DWORD PTR [esi+0x77105ca3],ecx
  41da7e:	xor    eax,0xb1f9e426
  41da83:	pusha  
  41da84:	popf   
  41da85:	and    eax,ebp
  41da87:	jns    0x41dad2
  41da89:	cwde   
  41da8a:	add    BYTE PTR [edi-0x1d9fb7a2],dh
  41da90:	xor    eax,0x46bef146
  41da95:	pop    ebx
  41da96:	sbb    eax,0xa8389775
  41da9b:	mov    edx,0x7c316d97
  41daa0:	paddd  mm0,QWORD PTR [eax+0x5bf0e76d]
  41daa7:	in     eax,dx
  41daa8:	xchg   ebx,eax
  41daa9:	fild   DWORD PTR [eiz*4-0xa459e6e]
  41dab0:	cwde   
  41dab1:	mov    ecx,0xe760e461
  41dab6:	dec    edx
  41dab7:	nop
  41dab8:	jmp    0x563a9c4a
  41dabd:	push   0xffffffaf
  41dabf:	inc    BYTE PTR [ebx]
  41dac1:	aad    0x9a
  41dac3:	adc    BYTE PTR [eax-0x6d],dl
  41dac6:	and    bl,BYTE PTR [ecx]
  41dac8:	enter  0xc52b,0x81
  41dacc:	and    cl,BYTE PTR [ecx-0x7f]
  41dacf:	sbb    ah,0x74
  41dad2:	mov    BYTE PTR [edi+0x15],ch
  41dad5:	xor    al,0x47
  41dad7:	loope  0x41db2e
  41dad9:	repz or DWORD PTR [ecx-0x7b4ed012],edx
  41dae0:	jp     0x41db53
  41dae2:	cld    
  41dae3:	or     eax,0x62685093
  41dae8:	aam    0x74
  41daea:	iret   
  41daeb:	arpl   WORD PTR [esp+ebx*8],cx
  41daee:	fs mov eax,0xd15e5c77
  41daf4:	call   0xa7e609ac
  41daf9:	jecxz  0x41db46
  41dafb:	ror    DWORD PTR [esi+0x3ab6c216],0xa0
  41db02:	sbb    DWORD PTR [eax+eiz*2-0x10b7eb1],eax
  41db09:	inc    ebp
  41db0a:	mov    ah,0x98
  41db0c:	jb     0x41db53
  41db0e:	mov    edx,0x9d412cd3
  41db13:	xor    DWORD PTR [edx],0x4f6cc6be
  41db19:	xchg   ebx,eax
  41db1a:	stos   DWORD PTR es:[edi],eax
  41db1b:	imul   esi,ebx,0xffffffa8
  41db1e:	sbb    edx,esp
  41db20:	pop    ecx
  41db21:	dec    ebp
  41db22:	nop
  41db23:	stos   DWORD PTR es:[edi],eax
  41db24:	or     BYTE PTR [esi+0x23],ch
  41db27:	pushf  
  41db28:	clc    
  41db29:	dec    ecx
  41db2a:	xor    eax,0x2ae14f22
  41db2f:	retf   0x6266
  41db32:	mov    al,ds:0x56220f12
  41db37:	sub    eax,DWORD PTR [ecx-0x33]
  41db3a:	mov    BYTE PTR [edx+ecx*1-0x48],bl
  41db3e:	inc    esp
  41db3f:	out    0xe7,al
  41db41:	mov    ds,esi
  41db43:	mov    dl,0x58
  41db45:	cmp    al,0x6d
  41db47:	cs dec edi
  41db49:	and    al,0x79
  41db4b:	and    BYTE PTR [ecx+0x20d2a922],ch
  41db51:	adc    BYTE PTR [esi+0x25dcbf82],ah
  41db57:	or     esi,DWORD PTR [edx-0x4f9cf09a]
  41db5d:	sahf   
  41db5e:	lods   eax,DWORD PTR ds:[esi]
  41db5f:	sahf   
  41db60:	cwde   
  41db61:	test   al,0x9e
  41db63:	aaa    
  41db64:	inc    ebp
  41db65:	sldt   WORD PTR [eax]
	...
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0xcfe39d62
  41db80:	xor    al,0x35
  41db82:	push   edi
  41db83:	add    DWORD PTR [eax],eax
  41db85:	lods   eax,DWORD PTR ds:[esi]
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    bh,bl
  41db8a:	lahf   
  41db8b:	and    al,0x3f
  41db8d:	jle    0x41db46
  41db8f:	addr16 jno 0x41dbcc
  41db92:	mov    ds:0xd22a9452,al
  41db97:	jmp    0xb527:0xa82eb0f8
  41db9e:	or     al,0x22
  41dba0:	bound  ebx,QWORD PTR [eax+0x44]
  41dba3:	ins    DWORD PTR es:[edi],dx
  41dba4:	inc    edx
  41dba5:	fild   QWORD PTR [eax+0x16f8c92e]
  41dbab:	dec    esi
  41dbac:	test   eax,0x3f01f8b8
  41dbb1:	mov    edi,0xa7a67539
  41dbb6:	add    eax,0x6141a399
  41dbbb:	dec    edx
  41dbbc:	out    0x15,eax
  41dbbe:	dec    ecx
  41dbbf:	cwde   
  41dbc0:	aas    
  41dbc1:	mov    esi,ss
  41dbc3:	out    0xa8,eax
  41dbc5:	(bad)  
  41dbc6:	sub    ecx,DWORD PTR [esi-0x52]
  41dbc9:	call   0xaade:0x50715309
  41dbd0:	(bad)  
  41dbd1:	cmp    dh,bh
  41dbd3:	pop    esi
  41dbd4:	inc    esp
  41dbd5:	lahf   
  41dbd6:	ficomp DWORD PTR [esi-0x14]
  41dbd9:	in     al,dx
  41dbda:	jbe    0x41dc07
  41dbdc:	push   ebp
  41dbdd:	dec    eax
  41dbde:	btc    esi,eax
  41dbe1:	fidiv  DWORD PTR [ecx]
  41dbe3:	mov    ?,WORD PTR [ecx+0x3a]
  41dbe6:	pop    edx
  41dbe7:	mov    ch,0xd3
  41dbe9:	pop    ebp
  41dbea:	cwde   
  41dbeb:	push   ebp
  41dbec:	jle    0x41dbe5
  41dbee:	mov    esi,0xf55fc52f
  41dbf3:	jecxz  0x41dbd5
  41dbf5:	sahf   
  41dbf6:	mov    edx,0xe5bd0856
  41dbfb:	mov    ah,0x35
  41dbfd:	xchg   edx,eax
  41dbfe:	loopne 0x41dc0b
  41dc00:	gs inc ebp
  41dc02:	test   BYTE PTR [ebp-0x40d32d83],cl
  41dc08:	add    BYTE PTR [edi],0x8f
  41dc0b:	inc    edi
  41dc0c:	add    al,0x7
  41dc0e:	push   0xffffff88
  41dc10:	lock mov eax,0x2504bf7a
  41dc16:	mov    edx,0xd91a2248
  41dc1b:	test   ebx,0x95647711
  41dc21:	adc    BYTE PTR [edx+0x7],dh
  41dc24:	push   ebp
  41dc25:	add    al,BYTE PTR [ecx+ebx*2+0x2c]
  41dc29:	pop    eax
  41dc2a:	ret    0xec9f
  41dc2d:	loopne 0x41dc89
  41dc2f:	mov    BYTE PTR [ebx+0x68],cl
  41dc32:	xor    DWORD PTR [eax-0x27],edi
  41dc35:	add    BYTE PTR [ecx],ch
  41dc37:	add    eax,0x62607b65
  41dc3c:	jecxz  0x41dc50
  41dc3e:	lods   al,BYTE PTR ds:[esi]
  41dc3f:	or     al,ch
  41dc41:	cld    
  41dc42:	test   al,0x3e
  41dc44:	imul   edx,DWORD PTR [edx],0xf6126d25
  41dc4a:	inc    eax
  41dc4b:	dec    eax
  41dc4c:	sub    BYTE PTR [ebp-0x24],dh
  41dc4f:	xor    al,0xe9
  41dc51:	mov    al,ds:0x792ff293
  41dc56:	adc    al,0xf5
  41dc58:	cmp    ah,dh
  41dc5a:	jb     0x41dc01
  41dc5c:	mov    ah,0x91
  41dc5e:	test   DWORD PTR [esi+esi*8+0x77c291f1],esi
  41dc65:	neg    bl
  41dc67:	imul   edx,DWORD PTR [ebx+0x6e],0x9fdcc3ea
  41dc6e:	cld    
  41dc6f:	in     eax,0x51
  41dc71:	inc    ebx
  41dc72:	cmp    BYTE PTR [eax-0x10],cl
  41dc75:	and    BYTE PTR [ebx],dl
  41dc77:	popf   
  41dc78:	pop    esi
  41dc79:	sbb    eax,DWORD PTR [edi-0x7a]
  41dc7c:	(bad)  
  41dc7d:	loope  0x41dcb8
  41dc7f:	les    ebx,FWORD PTR [edx-0xa]
  41dc82:	mov    ebp,0x926359eb
  41dc87:	lods   al,BYTE PTR ds:[esi]
  41dc88:	stc    
  41dc89:	aam    0xdc
  41dc8b:	loope  0x41dc25
  41dc8d:	xchg   edx,eax
  41dc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8f:	je     0x41dcdd
  41dc91:	mov    al,ds:0x628becfa
  41dc96:	shl    BYTE PTR [edi-0x60],0x81
  41dc9a:	xchg   ebx,eax
  41dc9b:	xor    esi,DWORD PTR [esi-0x11f064a2]
  41dca1:	sub    dh,bl
  41dca3:	hlt    
  41dca4:	in     eax,dx
  41dca5:	mov    ebp,0x3662c3e7
  41dcaa:	mov    esi,DWORD PTR [ebp+0x6d545086]
  41dcb0:	push   es
  41dcb1:	js     0x41dcf2
  41dcb3:	jecxz  0x41dcb6
  41dcb5:	inc    esi
  41dcb6:	into   
  41dcb7:	sbb    dl,bl
  41dcb9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41dcbb:	imul   esi,DWORD PTR [esi-0x25],0x67dd774a
  41dcc2:	jge    0x41dd23
  41dcc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc5:	cmp    al,0x60
  41dcc7:	scas   al,BYTE PTR es:[edi]
  41dcc8:	clc    
  41dcc9:	inc    ecx
  41dcca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dccb:	ins    DWORD PTR es:[edi],dx
  41dccc:	std    
  41dccd:	mov    al,ds:0xc0ddd59a
  41dcd2:	stos   DWORD PTR es:[edi],eax
  41dcd3:	fild   QWORD PTR [edi+0x2e756519]
  41dcd9:	push   ebx
  41dcda:	jle    0x41dd1b
  41dcdc:	imul   DWORD PTR [edx]
  41dcde:	jp     0x41dcc1
  41dce0:	add    BYTE PTR [edi-0x6113f616],0x48
  41dce7:	fsub   st,st(0)
  41dce9:	out    dx,eax
  41dcea:	fldenv [edx+0x202df73e]
  41dcf0:	ss push edx
  41dcf2:	mov    eax,ds:0xac395bf8
  41dcf7:	pop    esp
  41dcf8:	jno    0x41dd17
  41dcfa:	and    edi,edx
  41dcfc:	lds    ebp,FWORD PTR [edx+0x17463742]
  41dd02:	sbb    BYTE PTR [ebx-0x52],0x95
  41dd06:	in     al,dx
  41dd07:	xor    esi,DWORD PTR [ebp-0x792e743c]
  41dd0d:	into   
  41dd0e:	push   ebp
  41dd0f:	mov    al,0x4e
  41dd11:	loope  0x41dd84
  41dd13:	jmp    0x41dce3
  41dd15:	adc    ebp,DWORD PTR [ecx+0x52]
  41dd18:	inc    edx
  41dd19:	inc    ecx
  41dd1a:	(bad)  
  41dd1b:	setb   dh
  41dd1e:	into   
  41dd1f:	aam    0x1c
  41dd21:	fidivr DWORD PTR [eax+esi*8-0x1b60eb72]
  41dd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd29:	stos   DWORD PTR es:[edi],eax
  41dd2a:	stos   BYTE PTR es:[edi],al
  41dd2b:	imul   esi,esi,0x74
  41dd2e:	aas    
  41dd2f:	cmc    
  41dd30:	sti    
  41dd31:	jno    0x41dd20
  41dd33:	sub    BYTE PTR [ecx],dh
  41dd35:	cli    
  41dd36:	ins    BYTE PTR es:[edi],dx
  41dd37:	xchg   edi,eax
  41dd38:	neg    DWORD PTR [ebp+eiz*4+0x57]
  41dd3c:	icebp  
  41dd3d:	out    dx,eax
  41dd3e:	add    al,0x8e
  41dd40:	test   al,0x24
  41dd42:	fdiv   DWORD PTR [edx]
  41dd44:	jnp    0x41dcf9
  41dd46:	test   eax,0xf1f83c9b
  41dd4b:	xchg   ebx,eax
  41dd4c:	shl    BYTE PTR ss:[ecx],1
  41dd4f:	(bad)
  41dd52:	mov    dh,0x50
  41dd54:	pop    esp
  41dd55:	dec    edi
  41dd56:	jecxz  0x41dd58
  41dd58:	fbld   TBYTE PTR [ebp-0x64]
  41dd5b:	mov    esi,0xaf269630
  41dd60:	shr    BYTE PTR [eax+esi*1-0x15bbe23d],cl
  41dd67:	adc    al,0x49
  41dd69:	inc    eax
  41dd6a:	mov    ds:0x5ef98863,al
  41dd6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd70:	jb     0x41dd66
  41dd72:	add    al,BYTE PTR [ebx+eax*4+0x6121ef64]
  41dd79:	mov    dl,0x7a
  41dd7b:	cmp    DWORD PTR [edi],esi
  41dd7d:	push   ecx
  41dd7e:	clc    
  41dd7f:	bound  esp,QWORD PTR [esi+esi*4-0x3d]
  41dd83:	into   
  41dd84:	sbb    bl,dh
  41dd86:	push   es
  41dd87:	daa    
  41dd88:	ds gs ins DWORD PTR es:[edi],dx
  41dd8b:	mov    dh,0x2e
  41dd8d:	cld    
  41dd8e:	fld    TBYTE PTR [edi-0x3e]
  41dd91:	pop    esi
  41dd92:	fcom   QWORD PTR [ebx-0xf88015]
  41dd98:	in     al,0x5c
  41dd9a:	dec    ebp
  41dd9b:	out    dx,eax
  41dd9c:	das    
  41dd9d:	xchg   ebx,eax
  41dd9e:	hlt    
  41dd9f:	jecxz  0x41dd2f
  41dda1:	imul   ebp,DWORD PTR [ecx+0x7b],0xda4ee6d2
  41dda8:	mov    dl,0xde
  41ddaa:	rcr    DWORD PTR [ebp+0x57c562cb],1
  41ddb0:	(bad)  [ebx-0x77]
  41ddb3:	out    0x86,al
  41ddb5:	jmp    0xb44206c2
  41ddba:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41ddbc:	sub    ebp,DWORD PTR [esi]
  41ddbe:	pop    edi
  41ddbf:	iret   
  41ddc0:	inc    esi
  41ddc1:	mov    ch,0x85
  41ddc3:	inc    edx
  41ddc4:	push   cs
  41ddc5:	push   esi
  41ddc6:	or     eax,DWORD PTR [ebp-0x34bf6244]
  41ddcc:	jb     0x41dd50
  41ddce:	and    bh,ch
  41ddd0:	push   edx
  41ddd1:	cmp    ebx,DWORD PTR [ebx+0x40]
  41ddd4:	aad    0xb7
  41ddd6:	dec    edi
  41ddd7:	sysenter 
  41ddd9:	inc    eax
  41ddda:	adc    al,0x5b
  41dddc:	dec    esp
  41dddd:	call   0xe71ca9ef
  41dde2:	adc    edx,ebp
  41dde4:	push   0x723e65d
  41dde9:	jno    0x41de54
  41ddeb:	jb     0x41de24
  41dded:	cmp    bh,bl
  41ddef:	pusha  
  41ddf0:	out    dx,eax
  41ddf1:	mov    bh,bl
  41ddf3:	cmovl  ebx,DWORD PTR [edx+0xe2009fb]
  41ddfa:	es inc esi
  41ddfc:	pushf  
  41ddfd:	rol    esi,0x51
  41de00:	jmp    0x9fc0d3dc
  41de05:	xchg   ebx,eax
  41de06:	push   ds
  41de07:	dec    esi
  41de08:	pushf  
  41de09:	xchg   bh,al
  41de0b:	call   0x962215f3
  41de10:	inc    ebx
  41de11:	pusha  
  41de12:	loope  0x41de38
  41de14:	sbb    DWORD PTR [ebp+eax*1-0x72],esp
  41de18:	inc    esi
  41de19:	jne    0x41ddbf
  41de1b:	std    
  41de1c:	cmp    DWORD PTR [ebp+0x661edb9b],ebx
  41de22:	mov    ecx,DWORD PTR [ebx]
  41de24:	rcr    DWORD PTR [edi+0x1d8b594f],0x7b
  41de2b:	leave  
  41de2c:	pop    edi
  41de2d:	pop    ds
  41de2e:	aad    0x5
  41de30:	mov    ds:0x12683374,eax
  41de35:	inc    eax
  41de36:	std    
  41de37:	xlat   BYTE PTR ds:[ebx]
  41de38:	inc    ecx
  41de39:	xchg   BYTE PTR [edi-0x57],dl
  41de3c:	in     eax,0x2e
  41de3e:	cmp    ch,BYTE PTR [ecx+0x5e817e14]
  41de44:	sub    bh,bh
  41de46:	(bad)
  41de49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de4a:	cs mov al,0x72
  41de4d:	addps  xmm7,XMMWORD PTR [eax+0x208f4b0a]
  41de54:	mov    ch,0x1d
  41de56:	dec    esi
  41de57:	scas   eax,DWORD PTR es:[edi]
  41de58:	adc    DWORD PTR [edi],esi
  41de5a:	fldcw  WORD PTR [edi]
  41de5c:	fcmove st,st(2)
  41de5e:	aaa    
  41de5f:	adc    DWORD PTR [ecx-0x48fc34ed],ebx
  41de65:	leave  
  41de66:	add    eax,0x95960bff
  41de6b:	dec    eax
  41de6c:	mov    al,0x5
  41de6e:	xchg   DWORD PTR [esi+0x252da3b],ecx
  41de74:	iret   
  41de75:	or     ebp,ebx
  41de77:	or     al,0xd6
  41de79:	xchg   ecx,eax
  41de7a:	leave  
  41de7b:	call   0x3d92ef88
  41de80:	mov    ebx,0xbf056dc5
  41de85:	int3   
  41de86:	mov    al,0x13
  41de88:	cwde   
  41de89:	out    0x33,al
  41de8b:	cdq    
  41de8c:	adc    eax,0x23
  41de8f:	lea    edx,[edi+0x256d6529]
  41de95:	int    0xeb
  41de97:	imul   esp,DWORD PTR [ebx],0x70
  41de9a:	fs nop
  41de9c:	jmp    0x41de46
  41de9e:	add    eax,DWORD PTR [ebx]
  41dea0:	das    
  41dea1:	sbb    cl,al
  41dea3:	xor    al,0x30
  41dea5:	push   0x1a8804f3
  41deaa:	mov    bh,bh
  41deac:	push   ebp
  41dead:	out    dx,eax
  41deae:	lea    edi,[edx-0x5e7cdaa3]
  41deb4:	jmp    0xeeace707
  41deb9:	sti    
  41deba:	dec    eax
  41debb:	push   0xb39c4e64
  41dec0:	cmp    esp,DWORD PTR [edx-0x90d06fe]
  41dec6:	(bad)  
  41dec7:	in     al,dx
  41dec8:	or     DWORD PTR [ecx],edi
  41deca:	mov    al,0x38
  41decc:	ins    BYTE PTR es:[edi],dx
  41decd:	mov    ebp,0xd7f3d48d
  41ded2:	in     eax,0xf3
  41ded4:	cmp    ch,bl
  41ded6:	imul   ebx,DWORD PTR [ebp+0x10945ec5],0x57
  41dedd:	ss xor al,0x26
  41dee0:	inc    ebx
  41dee1:	fnstcw WORD PTR [ebx+0x64]
  41dee4:	cmp    edi,edi
  41dee6:	mov    al,ds:0xc31dad24
  41deeb:	stc    
  41deec:	imul   ecx,edi,0x5d074d03
  41def2:	ja     0x41dedc
  41def4:	sbb    ebp,ebx
  41def6:	mov    edi,ebp
  41def8:	push   es
  41def9:	mov    gs,WORD PTR [ebp+0x2eee5f]
  41deff:	or     cl,bh
  41df01:	inc    esp
  41df02:	mov    eax,0x8a4aae45
  41df07:	sahf   
  41df08:	jmp    0x750db178
  41df0d:	out    dx,eax
  41df0e:	loope  0x41dee0
  41df10:	rdtsc  
  41df12:	shr    BYTE PTR ds:[ecx+0x5c5f1f14],cl
  41df19:	lods   al,BYTE PTR ds:[esi]
  41df1a:	sub    BYTE PTR [edx],cl
  41df1c:	sbb    ecx,DWORD PTR [edx-0x5]
  41df1f:	retf   0x749f
  41df22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df23:	add    al,0x22
  41df25:	dec    esi
  41df26:	aad    0xdd
  41df28:	rcr    DWORD PTR [esi],0x34
  41df2b:	dec    ebp
  41df2c:	(bad)  [edx+ecx*1]
  41df2f:	mov    bl,0x10
  41df31:	add    ebx,eax
  41df33:	jo     0x41df46
  41df35:	test   BYTE PTR [eax],0x0
	...
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	and    al,0x8e
  41df4f:	in     eax,dx
  41df50:	(bad)  
  41df51:	loop   0x41dfad
  41df53:	add    DWORD PTR [eax],eax
  41df55:	lods   eax,DWORD PTR ds:[esi]
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    BYTE PTR [eax+edx*1-0xf9c9101],dl
  41df5f:	loope  0x41df70
  41df61:	repz test ecx,edx
  41df64:	lock add eax,0x8b6c966a
  41df6a:	jne    0x41df62
  41df6c:	ss xor edx,ebp
  41df6f:	mov    ah,0x3f
  41df71:	les    ebp,FWORD PTR [ecx+eax*4]
  41df74:	imul   esi,ecx,0xc4969909
  41df7a:	jl     0x41dfb4
  41df7c:	arpl   sp,bx
  41df7e:	xchg   esp,eax
  41df7f:	add    eax,edi
  41df81:	sbb    ebx,DWORD PTR [edi]
  41df83:	fisubr DWORD PTR [esi+edx*2-0x1d1118ae]
  41df8a:	and    DWORD PTR [edx],edx
  41df8c:	in     eax,0xc4
  41df8e:	outs   dx,DWORD PTR cs:[esi]
  41df90:	pop    eax
  41df91:	je     0x41e002
  41df93:	cdq    
  41df94:	mov    ?,WORD PTR [ebx-0x36]
  41df97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df98:	xchg   ebp,eax
  41df99:	mov    es,WORD PTR [esi+0x47]
  41df9c:	jmp    0xdb6b:0xc2b4c745
  41dfa3:	stc    
  41dfa4:	jle    0x41dfd8
  41dfa6:	lds    ebx,FWORD PTR [ecx-0x7c]
  41dfa9:	(bad)  
  41dfaa:	and    DWORD PTR [edx+0x4b5812c4],edx
  41dfb0:	lods   al,BYTE PTR ds:[esi]
  41dfb1:	aaa    
  41dfb2:	cwde   
  41dfb3:	cmc    
  41dfb4:	mov    eax,0xefaec3b4
  41dfb9:	jg     0x41dfc8
  41dfbb:	(bad)  
  41dfbc:	jg     0x41dfcc
  41dfbe:	mov    ebp,0x408f8598
  41dfc3:	call   0xbf2c:0xc131e023
  41dfca:	add    al,0x35
  41dfcc:	ja     0x41dfdd
  41dfce:	test   BYTE PTR [ebp-0x4d],cl
  41dfd1:	fwait
  41dfd2:	push   ecx
  41dfd3:	adc    BYTE PTR [ebp+ebx*4-0x137e5641],0xb8
  41dfdb:	mov    al,0x46
  41dfdd:	in     eax,0x91
  41dfdf:	retf   0xa2a4
  41dfe2:	in     eax,0x9
  41dfe4:	dec    cl
  41dfe6:	pop    edx
  41dfe7:	loop   0x41e051
  41dfe9:	enter  0x6a85,0xde
  41dfed:	pusha  
  41dfee:	pop    esp
  41dfef:	lods   eax,DWORD PTR ds:[esi]
  41dff0:	int    0x22
  41dff2:	test   eax,0x964deef7
  41dff7:	in     eax,dx
  41dff8:	mov    WORD PTR [eax+eiz*1+0x58],ss
  41dffc:	fst    st(1)
  41dffe:	xchg   esp,eax
  41dfff:	outs   dx,BYTE PTR ds:[esi]
  41e000:	hlt    
  41e001:	(bad)  
  41e002:	push   0xffffff9f
  41e004:	shl    BYTE PTR ds:[edi+0x36],0x79
  41e009:	sbb    bl,bl
  41e00b:	stos   BYTE PTR es:[edi],al
  41e00c:	cmp    DWORD PTR [edi+0x58],esp
  41e00f:	jge    0x41e077
  41e011:	out    dx,eax
  41e012:	inc    edx
  41e013:	jne    0x41dffb
  41e015:	sbb    al,0x9c
  41e017:	out    0x6f,al
  41e019:	jo     0x41e04b
  41e01b:	or     DWORD PTR [ecx],0xffffffda
  41e01e:	mov    ch,dl
  41e020:	xchg   esp,eax
  41e021:	xchg   ebp,eax
  41e022:	dec    esp
  41e023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e024:	add    edx,ecx
  41e026:	es cmp eax,esp
  41e029:	(bad)  
  41e02a:	and    esp,DWORD PTR [edi-0x7e]
  41e02d:	cwde   
  41e02e:	icebp  
  41e02f:	ss xchg esi,eax
  41e031:	aaa    
  41e032:	aas    
  41e033:	retf   
  41e034:	dec    ecx
  41e035:	mov    ah,0x71
  41e037:	pop    eax
  41e038:	or     ebx,DWORD PTR [esi+0x25b85152]
  41e03e:	jo     0x41dff1
  41e040:	xchg   edx,eax
  41e041:	jg     0x41e04a
  41e043:	cmp    bl,BYTE PTR [esi-0x127946e1]
  41e049:	(bad)  
  41e04b:	mov    eax,0x5aef9ec3
  41e050:	xchg   BYTE PTR [esi+0x15b4a5b7],ah
  41e056:	mov    edx,0x40d8d7ea
  41e05b:	test   DWORD PTR [ebp+0x5f],0x140b5090
  41e062:	mov    edx,0x8e9d88a
  41e067:	iret   
  41e068:	mov    ebp,0xa5aa3ff8
  41e06d:	jb     0x41e0b4
  41e06f:	jmp    0xb0f4:0x9d4b693f
  41e076:	popf   
  41e077:	push   cs
  41e078:	xor    DWORD PTR [ebp+ebx*2+0x6eb9a21],ebx
  41e07f:	ins    DWORD PTR es:[edi],dx
  41e080:	mov    edx,DWORD PTR [esi-0x300fe4b2]
  41e086:	jae    0x41e0db
  41e088:	(bad)  
  41e089:	pop    ecx
  41e08a:	and    al,0xd2
  41e08c:	dec    eax
  41e08d:	test   BYTE PTR [ebx-0x4a7d512b],ch
  41e093:	js     0x41e0f9
  41e095:	pop    ebp
  41e096:	inc    ecx
  41e097:	and    esi,DWORD PTR [ecx-0x5657b538]
  41e09d:	nop
  41e09e:	fcomi  st,st(5)
  41e0a0:	dec    BYTE PTR [esi+0x25]
  41e0a3:	xchg   BYTE PTR [edi-0x5c2ac250],ch
  41e0a9:	stos   DWORD PTR es:[edi],eax
  41e0aa:	or     BYTE PTR [ecx],dl
  41e0ac:	jns    0x41e044
  41e0ae:	ret    0xd857
  41e0b1:	sbb    al,0xad
  41e0b3:	in     eax,0xb8
  41e0b5:	mov    esp,0x3cae6a82
  41e0ba:	outs   dx,DWORD PTR ds:[esi]
  41e0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0bc:	fistp  QWORD PTR [edi]
  41e0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0bf:	xlat   BYTE PTR ds:[ebx]
  41e0c0:	ins    BYTE PTR es:[edi],dx
  41e0c1:	sar    DWORD PTR [eax+0x1573cef2],1
  41e0c7:	cli    
  41e0c8:	out    dx,eax
  41e0c9:	xlat   BYTE PTR ds:[ebx]
  41e0ca:	test   al,0xd
  41e0cc:	jnp    0x41e0a3
  41e0ce:	fcomp  DWORD PTR [ebx+0x6d]
  41e0d1:	jmp    0x41e0a4
  41e0d3:	adc    ecx,eax
  41e0d5:	(bad)  [ebp+ecx*2+0x6e62da66]
  41e0dc:	jge    0x41e063
  41e0de:	pusha  
  41e0df:	ins    BYTE PTR es:[edi],dx
  41e0e0:	(bad)  
  41e0e1:	xchg   ebx,eax
  41e0e2:	pop    ds
  41e0e3:	inc    esi
  41e0e4:	aam    0x3c
  41e0e6:	cld    
  41e0e7:	sub    al,0x45
  41e0e9:	push   edx
  41e0ea:	sbb    dl,BYTE PTR [ebp-0x55984bb5]
  41e0f0:	idiv   ebp
  41e0f2:	sub    DWORD PTR [edx+esi*8-0x20],edx
  41e0f6:	lock gs scas eax,DWORD PTR es:[edi]
  41e0f9:	cmp    ecx,ebx
  41e0fb:	cld    
  41e0fc:	nop
  41e0fd:	or     bl,dl
  41e0ff:	rcl    DWORD PTR [eax-0x35a0ec91],1
  41e105:	(bad)  
  41e106:	repnz or eax,0xca62e7d6
  41e10d:	sub    dl,BYTE PTR [eax+eiz*8+0x730f1ab]
  41e114:	js     0x41e143
  41e116:	jo     0x41e158
  41e118:	loop   0x41e14c
  41e11a:	push   ebp
  41e11b:	ret    
  41e11c:	or     edx,ecx
  41e11e:	mov    bl,0xa0
  41e120:	ret    0xcaf1
  41e123:	sti    
  41e124:	sub    al,0x6a
  41e126:	fstp   QWORD PTR [edx-0x4e58972f]
  41e12c:	jmp    0x41e114
  41e12e:	lea    esi,[edx+ebp*2]
  41e131:	repz pop es
  41e133:	dec    esp
  41e134:	jp     0x41e198
  41e136:	loop   0x41e109
  41e138:	pop    esi
  41e139:	cmp    ebx,DWORD PTR [esi]
  41e13b:	or     eax,0x625518a2
  41e140:	aad    0xf0
  41e142:	cld    
  41e143:	adc    ecx,0xe9087ab3
  41e149:	mov    ebx,0xfd976639
  41e14e:	mov    edi,0x235f3e3e
  41e153:	mov    eax,ds:0x35c17ee4
  41e158:	jge    0x41e1b0
  41e15a:	sbb    DWORD PTR [ecx],0x1e
  41e15d:	pop    ebx
  41e15e:	add    dh,BYTE PTR [edx+0x50a1f3c]
  41e164:	icebp  
  41e165:	stc    
  41e166:	aaa    
  41e167:	push   esp
  41e168:	aas    
  41e169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e16b:	jl     0x41e132
  41e16d:	jne    0x41e0f2
  41e16f:	pop    ebp
  41e170:	add    cl,bl
  41e172:	stc    
  41e173:	ds jnp 0x41e104
  41e176:	dec    ebp
  41e177:	cmp    al,BYTE PTR [eax-0x5e]
  41e17a:	mov    bl,0x9c
  41e17c:	outs   dx,BYTE PTR ds:[esi]
  41e17d:	cld    
  41e17e:	push   edi
  41e17f:	lea    edi,[edx-0x33bc99aa]
  41e185:	pop    ss
  41e186:	in     al,dx
  41e187:	cmp    al,0x2c
  41e189:	jge    0x41e1c7
  41e18b:	mov    ecx,esi
  41e18d:	or     BYTE PTR [edi+ebp*4],bh
  41e190:	pushf  
  41e191:	leave  
  41e192:	daa    
  41e193:	and    DWORD PTR [ebx+0x1655853a],ebp
  41e199:	cmp    DWORD PTR [edi],ecx
  41e19b:	test   DWORD PTR [eax+0x73],edi
  41e19e:	mov    al,ds:0x83c539cd
  41e1a3:	sub    ebp,DWORD PTR [edx-0x37]
  41e1a6:	xor    DWORD PTR [ebx],edx
  41e1a8:	fs jmp 0xd24368cf
  41e1ae:	dec    esp
  41e1af:	jb     0x41e1f5
  41e1b1:	and    DWORD PTR [edi],esp
  41e1b3:	or     BYTE PTR [eax+0x54],0xa9
  41e1b7:	pushf  
  41e1b8:	or     esp,DWORD PTR [esi]
  41e1ba:	mov    esi,0x540410d7
  41e1bf:	inc    ebx
  41e1c0:	ror    bh,cl
  41e1c2:	ret    
  41e1c3:	pusha  
  41e1c4:	cmovb  ecx,edx
  41e1c7:	nop
  41e1c8:	mov    WORD PTR [esi+0x1f],es
  41e1cb:	push   edx
  41e1cc:	or     ebx,ecx
  41e1ce:	into   
  41e1cf:	xorps  xmm6,XMMWORD PTR [ebx]
  41e1d2:	cld    
  41e1d3:	fsubr  st,st(1)
  41e1d5:	out    0xb9,al
  41e1d7:	xor    al,0x90
  41e1d9:	imul   ebp,DWORD PTR [ebx+0x37],0xffffffc1
  41e1dd:	or     BYTE PTR [ecx],dl
  41e1df:	xchg   ecx,eax
  41e1e0:	mov    dl,dl
  41e1e2:	cmp    ebp,DWORD PTR [esi-0x7e1d2943]
  41e1e8:	mov    ebp,0xec1c955d
  41e1ed:	pop    ecx
  41e1ee:	or     bl,BYTE PTR [ecx]
  41e1f0:	aad    0x7
  41e1f2:	cmp    BYTE PTR [esi],0xa2
  41e1f5:	jmp    0x41e1e9
  41e1f7:	adc    al,0x52
  41e1f9:	dec    ebx
  41e1fa:	fist   DWORD PTR ds:0x542da6d7
  41e200:	repnz mov eax,ds:0x1db3ccb6
  41e206:	shr    DWORD PTR [eax+0x7c],0xfe
  41e20a:	push   eax
  41e20b:	ja     0x41e18f
  41e20d:	sbb    esp,ebx
  41e20f:	fcomp  DWORD PTR [edx-0x36bb974c]
  41e215:	outs   dx,BYTE PTR ds:[esi]
  41e216:	lahf   
  41e217:	test   DWORD PTR [ebx-0x1383ffe8],ebx
  41e21d:	rol    ch,0x82
  41e220:	pop    ds
  41e221:	imul   edi,DWORD PTR [ecx],0xce94c989
  41e227:	add    bh,BYTE PTR [edi-0x44]
  41e22a:	pop    edx
  41e22b:	nop
  41e22c:	neg    DWORD PTR [edi-0x49]
  41e22f:	jle    0x41e1c1
  41e231:	mov    cl,cl
  41e233:	push   cs
  41e234:	loop   0x41e219
  41e236:	jge    0x41e1c7
  41e238:	icebp  
  41e239:	push   edi
  41e23a:	rep outs dx,DWORD PTR ds:[esi]
  41e23c:	xchg   ecx,eax
  41e23d:	sahf   
  41e23e:	cmc    
  41e23f:	mov    ebp,0xbb1bdd2a
  41e244:	clc    
  41e245:	fucom  st(6)
  41e247:	xor    BYTE PTR [ecx],bh
  41e249:	mov    DWORD PTR [esi],esp
  41e24b:	rcl    DWORD PTR [ebx+0x68],cl
  41e24e:	push   ecx
  41e24f:	xor    bl,BYTE PTR [edi-0x36dba935]
  41e255:	fsubr  QWORD PTR [eax+0x4cbbb194]
  41e25b:	dec    eax
  41e25c:	mov    cl,0xf1
  41e25e:	jns    0x41e1fc
  41e260:	rol    BYTE PTR [esi+eax*4],0xf
  41e264:	pop    ds
  41e265:	jle    0x41e2a3
  41e267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e268:	mov    ebx,0x27309933
  41e26d:	addr16 aas 
  41e26f:	and    dl,al
  41e271:	mov    dl,0x1
  41e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e274:	sub    eax,0x9d7c3b24
  41e279:	(bad)  
  41e27a:	push   ds
  41e27b:	call   0xc02f:0xf0b3cc25
  41e282:	daa    
  41e283:	icebp  
  41e284:	popa   
  41e285:	jmp    0x94b2:0x52c4bf81
  41e28c:	push   edx
  41e28d:	(bad)  
  41e28e:	sbb    al,BYTE PTR [ebp+0x44]
  41e291:	add    al,0xbf
  41e293:	xchg   esi,eax
  41e294:	sbb    BYTE PTR [ebx+0x4674369e],ah
  41e29a:	sub    al,0x0
  41e29c:	pop    edi
  41e29d:	mov    DWORD PTR ds:0xf7c524cc,0x1000ac62
  41e2a7:	xbegin 0xb2b26049
  41e2ad:	push   0xe5226543
  41e2b2:	outs   dx,BYTE PTR ds:[esi]
  41e2b3:	leave  
  41e2b4:	clc    
  41e2b5:	or     esp,DWORD PTR [ebp-0x44]
  41e2b8:	call   0xa4598f88
  41e2bd:	push   edx
  41e2be:	jge    0x41e2c3
  41e2c0:	sbb    esi,edx
  41e2c2:	out    0x37,eax
  41e2c4:	stc    
  41e2c5:	dec    ecx
  41e2c6:	jle    0x76428646
  41e2cc:	push   cs
  41e2cd:	rep stos DWORD PTR es:[edi],eax
  41e2cf:	lods   eax,DWORD PTR ds:[esi]
  41e2d0:	mov    al,ds:0xc9c28e8c
  41e2d5:	int3   
  41e2d6:	leave  
  41e2d7:	fstp   QWORD PTR [esi-0xc]
  41e2da:	mov    ch,0xa1
  41e2dc:	jl     0x41e339
  41e2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2df:	cmp    BYTE PTR [eax],bh
  41e2e1:	call   0x37b5a78c
  41e2e6:	(bad)  [edx+0x648a04f4]
  41e2ec:	aad    0x1b
  41e2ee:	cmp    DWORD PTR [esi],ecx
  41e2f0:	sbb    esp,DWORD PTR [esi+0x11]
  41e2f3:	pop    ss
  41e2f4:	(bad)  
  41e2f5:	mov    ds:0xfce2c5d1,eax
  41e2fa:	xchg   esp,eax
  41e2fb:	and    ecx,ebp
  41e2fd:	aam    0x39
  41e2ff:	sub    eax,0xf000ffd3
  41e304:	je     0x41e2f2
	...
  41e30e:	add    BYTE PTR [eax],al
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	in     eax,dx
  41e31e:	ror    DWORD PTR [edi+0x14],cl
  41e321:	(bad)  
  41e322:	pop    esi
  41e323:	add    DWORD PTR [eax],eax
  41e325:	lods   eax,DWORD PTR ds:[esi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [edx+0x1c573d5e],dh
  41e32e:	mov    edi,DWORD PTR [esi+0x4ceeefd3]
  41e334:	or     bh,BYTE PTR [esp+edi*8-0x13225ab6]
  41e33b:	stc    
  41e33c:	dec    ebp
  41e33d:	in     eax,0x24
  41e33f:	fisttp WORD PTR [edi-0xa]
  41e342:	add    BYTE PTR [edi-0x5c3013d9],0xf5
  41e349:	sub    ch,BYTE PTR [edi-0x5a]
  41e34c:	ins    BYTE PTR es:[edi],dx
  41e34d:	push   edi
  41e34e:	fwait
  41e34f:	or     bh,BYTE PTR [ebx+ebp*8-0x1e5f5198]
  41e356:	cmp    BYTE PTR [ebp+0x41],ah
  41e359:	cwde   
  41e35a:	xor    bh,BYTE PTR [edx+0x6f]
  41e35d:	int3   
  41e35e:	mov    ah,BYTE PTR [ebx+0x6c]
  41e361:	cmp    BYTE PTR [esi+0x321a2780],ah
  41e367:	lds    esi,FWORD PTR [eax+0x3]
  41e36a:	in     eax,0x92
  41e36c:	je     0x41e3bf
  41e36e:	shl    BYTE PTR [ecx-0x222926c2],1
  41e374:	xchg   ebx,eax
  41e375:	push   cs
  41e376:	push   ebx
  41e377:	pop    esp
  41e378:	push   esp
  41e379:	stc    
  41e37a:	and    eax,0xf5339de0
  41e37f:	call   0xe155:0x5805ca40
  41e386:	xchg   ebp,eax
  41e387:	rcr    BYTE PTR [ecx-0x1e42eb52],1
  41e38d:	mov    BYTE PTR ds:0xdbfa6c02,cl
  41e393:	mov    esi,cs
  41e395:	mov    eax,0x78eaa663
  41e39a:	mov    BYTE PTR [esi-0xb],dl
  41e39d:	fistp  WORD PTR [esi-0x4]
  41e3a0:	pushf  
  41e3a1:	mov    BYTE PTR [edx+0x640a8caf],bl
  41e3a7:	push   edx
  41e3a8:	scas   eax,DWORD PTR es:[edi]
  41e3a9:	jno    0x41e3ce
  41e3ab:	xor    edi,ecx
  41e3ad:	push   esi
  41e3ae:	mov    dh,0xe
  41e3b0:	mov    eax,ds:0xc24bddef
  41e3b5:	test   al,0xa2
  41e3b7:	aam    0xe2
  41e3b9:	jecxz  0x41e3a6
  41e3bb:	rcr    ah,cl
  41e3bd:	xchg   BYTE PTR [edx+0x5fe85108],dl
  41e3c3:	(bad)  
  41e3c4:	stos   BYTE PTR es:[edi],al
  41e3c5:	popf   
  41e3c6:	xor    bh,0xf9
  41e3c9:	mov    ecx,DWORD PTR [edx]
  41e3cb:	dec    esp
  41e3cc:	mov    esi,0x55927c31
  41e3d1:	pop    ss
  41e3d2:	div    DWORD PTR [esi+edi*8-0x5a1ceb1e]
  41e3d9:	inc    esp
  41e3da:	jecxz  0x41e3a9
  41e3dc:	fnsave [edx-0x3a9a1d48]
  41e3e2:	inc    esp
  41e3e3:	mov    bh,0x75
  41e3e5:	mov    edi,0x59e2e043
  41e3ea:	pop    edi
  41e3eb:	inc    ebp
  41e3ec:	ret    0xe600
  41e3ef:	aam    0xcf
  41e3f1:	and    edi,DWORD PTR [esi]
  41e3f3:	leave  
  41e3f4:	pop    ds
  41e3f5:	lea    ebp,[edx+0x77]
  41e3f8:	fsub   QWORD PTR [ecx]
  41e3fa:	xchg   BYTE PTR [ebx+ebx*8],al
  41e3fd:	mov    ebp,0xf88588ba
  41e402:	push   edx
  41e403:	cld    
  41e404:	test   eax,0x5a2ba92
  41e409:	das    
  41e40a:	and    ecx,edx
  41e40c:	in     al,dx
  41e40d:	repz or DWORD PTR [eax+0x27fca76d],0xd27decac
  41e418:	and    cl,BYTE PTR [edi]
  41e41a:	xchg   esp,eax
  41e41b:	(bad)  
  41e41c:	push   esp
  41e41d:	xor    cl,BYTE PTR [ecx]
  41e41f:	nop
  41e420:	pusha  
  41e421:	xchg   edi,eax
  41e422:	jecxz  0x41e43c
  41e424:	test   al,0x17
  41e426:	mov    edi,0x6b382ea4
  41e42b:	jno    0x41e436
  41e42d:	jg     0x41e467
  41e42f:	pop    es
  41e430:	jae    0x41e40f
  41e432:	mov    eax,0x77891873
  41e437:	loopne 0x41e3bc
  41e439:	fldenv [edx+0x41]
  41e43c:	dec    esi
  41e43d:	es nop
  41e43f:	lods   eax,DWORD PTR ds:[esi]
  41e440:	add    BYTE PTR [esi-0x487b4650],bh
  41e446:	add    DWORD PTR [ebp+0x38],ecx
  41e449:	push   ebx
  41e44a:	das    
  41e44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e44d:	and    dl,BYTE PTR [esi+edi*4-0x7d]
  41e451:	lahf   
  41e452:	sbb    ebp,0x8c87015c
  41e458:	push   esp
  41e459:	cld    
  41e45a:	push   eax
  41e45b:	adc    DWORD PTR [edi],ecx
  41e45d:	outs   dx,BYTE PTR cs:[esi]
  41e45f:	sti    
  41e460:	dec    edx
  41e461:	(bad)  
  41e462:	mov    esp,0xf1b02507
  41e467:	fwait
  41e468:	pop    ecx
  41e469:	stos   BYTE PTR es:[edi],al
  41e46a:	test   al,0x5c
  41e46c:	cmc    
  41e46d:	mov    bh,0x2e
  41e46f:	sbb    bh,BYTE PTR [ecx+ebp*2]
  41e472:	loop   0x41e4ed
  41e474:	cmp    al,BYTE PTR [eax*4-0x75e4b4d5]
  41e47b:	mov    esi,0x20f5992b
  41e480:	retf   0x665e
  41e483:	popa   
  41e484:	add    al,0x60
  41e486:	inc    edx
  41e487:	mov    al,ds:0x858e7507
  41e48c:	xchg   edi,eax
  41e48d:	cmp    ecx,DWORD PTR ds:0x5ae737d2
  41e493:	add    eax,0xfb25961d
  41e498:	fxch   st(1)
  41e49a:	jb     0x41e460
  41e49c:	lahf   
  41e49d:	int    0x4b
  41e49f:	mov    bl,0x49
  41e4a1:	ret    0x9708
  41e4a4:	out    dx,al
  41e4a5:	pop    esp
  41e4a6:	mov    bl,0xb9
  41e4a8:	jmp    0x6c15:0x8075c00d
  41e4af:	jle    0x41e496
  41e4b1:	xor    DWORD PTR [edx],ebx
  41e4b3:	or     ah,al
  41e4b5:	add    esi,eax
  41e4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b8:	repz setnp BYTE PTR [ecx-0x27]
  41e4bd:	mov    ebp,0x33021b6f
  41e4c2:	dec    ebp
  41e4c3:	jns    0x41e4e9
  41e4c5:	xchg   esi,eax
  41e4c6:	pop    esi
  41e4c7:	xlat   BYTE PTR ds:[ebx]
  41e4c8:	xor    dh,dl
  41e4ca:	fsub   DWORD PTR [ebx+0x1b853723]
  41e4d0:	xchg   BYTE PTR [eax+0x57a487fb],al
  41e4d6:	xchg   DWORD PTR [edi],ecx
  41e4d8:	cvtdq2ps xmm7,XMMWORD PTR [ebx]
  41e4db:	dec    esi
  41e4dc:	mov    al,ds:0x2d1215c4
  41e4e1:	mov    ebx,0x46c49c00
  41e4e6:	xchg   esi,eax
  41e4e7:	xchg   esp,eax
  41e4e8:	mov    bh,0x36
  41e4ea:	les    esi,FWORD PTR [ebx-0x7bec2cae]
  41e4f0:	or     DWORD PTR [ebp-0x48ddc7d3],edi
  41e4f6:	pop    ss
  41e4f7:	sub    eax,0xdc8613f2
  41e4fc:	adc    BYTE PTR [edi-0x3f72ef67],dh
  41e502:	and    bl,BYTE PTR [ebx+0x28]
  41e505:	(bad)  
  41e506:	out    dx,eax
  41e507:	mov    dh,0x2d
  41e509:	push   esp
  41e50a:	fimul  DWORD PTR [ebx]
  41e50c:	fsub   QWORD PTR [ebx+ebx*4-0x7a600cf4]
  41e513:	mov    ds:0x11ffa2fe,al
  41e518:	sub    eax,0xbe6dfded
  41e51d:	push   0x3a
  41e51f:	fwait
  41e520:	aaa    
  41e521:	push   ecx
  41e522:	mov    dh,BYTE PTR ds:0x1af09352
  41e528:	push   cs
  41e529:	out    0xda,al
  41e52b:	pop    eax
  41e52c:	mov    esp,0xf0f792e5
  41e531:	xchg   ebp,eax
  41e532:	xchg   esp,eax
  41e533:	cli    
  41e534:	ret    0x2845
  41e537:	sbb    cl,BYTE PTR [edi+eiz*2-0xa77930c]
  41e53e:	repnz lds ebp,FWORD PTR [edi+0x61]
  41e542:	(bad)  
  41e543:	cwde   
  41e544:	cwde   
  41e545:	push   ebp
  41e546:	test   eax,0xd53bf2bb
  41e54b:	scas   eax,DWORD PTR es:[edi]
  41e54c:	dec    eax
  41e54d:	pushf  
  41e54e:	ds jecxz 0x41e4dd
  41e551:	or     eax,0xe55e2d76
  41e556:	imul   esp,DWORD PTR [eax],0x761808e7
  41e55c:	jno    0x41e56d
  41e55e:	xlat   BYTE PTR ds:[ebx]
  41e55f:	sti    
  41e560:	pop    ebp
  41e561:	sub    eax,0x95d9cf1e
  41e566:	pop    edi
  41e567:	push   edi
  41e568:	test   esi,ebp
  41e56a:	xchg   esp,eax
  41e56b:	and    ch,BYTE PTR [ebx-0x7678cab7]
  41e571:	das    
  41e572:	mov    al,0x3b
  41e574:	bound  ecx,QWORD PTR [ecx+eiz*1]
  41e577:	div    eax
  41e579:	push   ecx
  41e57a:	pop    es
  41e57b:	sti    
  41e57c:	push   edx
  41e57d:	sub    BYTE PTR [eax],0xa2
  41e580:	push   eax
  41e581:	xchg   DWORD PTR [ecx+0x7e],ebp
  41e584:	stos   DWORD PTR es:[edi],eax
  41e585:	bound  ecx,QWORD PTR [edx+0x40]
  41e588:	adc    esi,DWORD PTR [edx-0x75b98603]
  41e58e:	ror    BYTE PTR [edi],cl
  41e590:	mov    dl,0xe5
  41e592:	dec    esi
  41e593:	mov    eax,0xa479c4b0
  41e598:	push   esp
  41e599:	sbb    DWORD PTR [esi+eiz*2-0x7da3ad22],edi
  41e5a0:	cmp    cl,BYTE PTR [edi-0x23]
  41e5a3:	or     eax,0x21a09691
  41e5a8:	or     bh,al
  41e5aa:	xor    eax,0x5dad28cc
  41e5af:	bound  esi,QWORD PTR [ecx-0x3a8ae2b5]
  41e5b5:	sub    cl,bl
  41e5b7:	aaa    
  41e5b8:	test   BYTE PTR [eax],dh
  41e5ba:	or     DWORD PTR [ebp+0x63],ebx
  41e5bd:	xchg   al,ch
  41e5bf:	xchg   esp,eax
  41e5c0:	call   0xeb135746
  41e5c5:	lock adc dl,ch
  41e5c8:	mov    DWORD PTR [ecx+0x69103241],ecx
  41e5ce:	sub    ecx,DWORD PTR [edi+edx*4-0x57f21c]
  41e5d5:	pop    es
  41e5d6:	add    esp,DWORD PTR [ecx]
  41e5d8:	pop    ecx
  41e5d9:	and    esi,DWORD PTR [ebp+ebp*2-0x6f]
  41e5dd:	sbb    al,0x98
  41e5df:	shr    BYTE PTR [ebp-0x17a6a6c4],0x2
  41e5e6:	push   es
  41e5e7:	mov    ch,al
  41e5e9:	clc    
  41e5ea:	sub    BYTE PTR [edx],cl
  41e5ec:	dec    esp
  41e5ed:	xor    DWORD PTR [eax],eax
  41e5ef:	fwait
  41e5f0:	stc    
  41e5f1:	vmread DWORD PTR [edi-0x3d01521b],edx
  41e5f8:	adc    DWORD PTR [ecx+edx*4-0x64559056],esp
  41e5ff:	stc    
  41e600:	cmp    eax,0x10c7d763
  41e605:	push   ecx
  41e606:	(bad)
  41e609:	pop    edx
  41e60a:	call   0x1bc:0x8d4f1121
  41e611:	sbb    edx,DWORD PTR [esi-0x28]
  41e614:	adc    DWORD PTR [esi-0x35],ecx
  41e617:	sub    al,0x95
  41e619:	pop    ds
  41e61a:	loop   0x41e61d
  41e61c:	push   ebx
  41e61d:	int    0x80
  41e61f:	or     eax,0xabbb92d7
  41e624:	xchg   edx,eax
  41e625:	(bad)  
  41e626:	arpl   bx,bp
  41e628:	dec    ebp
  41e629:	iret   
  41e62a:	das    
  41e62b:	mov    edi,edi
  41e62d:	add    al,0x20
  41e62f:	mov    dl,0xcd
  41e631:	add    BYTE PTR [ebp+0x12],al
  41e634:	mov    esi,0xaa00ebdd
  41e639:	stc    
  41e63a:	aad    0x5b
  41e63c:	or     al,0x47
  41e63e:	jge    0x41e6a5
  41e640:	arpl   sp,dx
  41e642:	dec    ecx
  41e643:	jo     0x41e640
  41e645:	add    ah,dl
  41e647:	dec    ecx
  41e648:	mov    dl,0x67
  41e64a:	push   ss
  41e64b:	(bad)  
  41e64c:	neg    DWORD PTR [ecx-0x62]
  41e64f:	ror    DWORD PTR [eax+edi*2],1
  41e652:	pop    es
  41e653:	popf   
  41e654:	aas    
  41e655:	sbb    DWORD PTR [esi+0x44],ebp
  41e658:	jecxz  0x41e67a
  41e65a:	mov    dh,0x3
  41e65c:	dec    edx
  41e65d:	pop    ecx
  41e65e:	push   eax
  41e65f:	dec    esp
  41e660:	aam    0xe9
  41e662:	dec    eax
  41e663:	sti    
  41e664:	xor    DWORD PTR [edi-0x46a7985a],ebp
  41e66a:	test   BYTE PTR [ecx],ch
  41e66c:	and    BYTE PTR [edi],dh
  41e66e:	fbstp  TBYTE PTR [edi]
  41e670:	cmp    eax,0xd581d1fd
  41e675:	mov    edx,0xdd0042ab
  41e67a:	rol    BYTE PTR [eax],0x9b
  41e67d:	sbb    al,0xa9
  41e67f:	jo     0x41e62a
  41e681:	fcmovnbe st,st(7)
  41e683:	mov    bl,0x62
  41e685:	je     0x41e6c4
  41e687:	push   ecx
  41e688:	fisttp QWORD PTR [edx+0x5d]
  41e68b:	imul   ebx,DWORD PTR [ecx-0x33],0x9d44edd9
  41e692:	hlt    
  41e693:	xchg   ecx,eax
  41e694:	jge    0x41e662
  41e696:	xlat   BYTE PTR ds:[ebx]
  41e697:	js     0x41e669
  41e699:	fdivr  QWORD PTR [eax-0x7a]
  41e69c:	pop    ebp
  41e69d:	sub    al,0x74
  41e69f:	fnsave [edi-0xa]
  41e6a2:	or     al,BYTE PTR [esi+eiz*1+0x761fb55e]
  41e6a9:	es xchg ebp,eax
  41e6ab:	or     eax,0x7e4f2ff2
  41e6b0:	(bad)  
  41e6b2:	jle    0x41e6da
  41e6b4:	jno    0x41e637
  41e6b6:	mov    ds:0x151a451e,al
  41e6bb:	add    DWORD PTR [ebx],esi
  41e6bd:	mov    bl,0x73
  41e6bf:	daa    
  41e6c0:	mov    BYTE PTR [eax+0x2c],cl
  41e6c3:	jns    0x41e6ca
  41e6c5:	xor    al,0x3
  41e6c7:	jnp    0x41e6dc
  41e6c9:	mov    edx,?
  41e6cb:	fucomi st,st(1)
  41e6cd:	lods   al,BYTE PTR ds:[esi]
  41e6ce:	aas    
  41e6cf:	dec    eax
  41e6d0:	inc    edx
  41e6d1:	xor    DWORD PTR [edx],ecx
  41e6d3:	pop    ebp
  41e6d4:	adc    DWORD PTR [eax+0x0],0x0
  41e6db:	add    BYTE PTR [eax],al
  41e6dd:	add    BYTE PTR [eax],al
  41e6df:	add    BYTE PTR [eax],al
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0x5d60df5d
  41e6f0:	(bad)  
  41e6f1:	cmp    al,0x62
  41e6f3:	add    DWORD PTR [eax],eax
  41e6f5:	lods   eax,DWORD PTR ds:[esi]
  41e6f6:	add    eax,DWORD PTR [eax]
  41e6f8:	add    dl,bl
  41e6fa:	jmp    0x13ead772
  41e6ff:	and    edi,DWORD PTR [ecx]
  41e701:	scas   eax,DWORD PTR es:[edi]
  41e702:	xchg   ecx,eax
  41e703:	pop    edx
  41e704:	push   ds
  41e705:	enter  0x4f6b,0xb8
  41e709:	in     al,0x2b
  41e70b:	inc    ebp
  41e70c:	adc    bh,BYTE PTR [eax+0x1b35b97e]
  41e712:	cdq    
  41e713:	xchg   edx,eax
  41e714:	add    BYTE PTR [ebp+eiz*1+0x4f4f6f5e],ah
  41e71b:	(bad)  
  41e71c:	xchg   ecx,eax
  41e71d:	dec    esp
  41e71e:	jns    0x41e6a3
  41e720:	inc    esi
  41e721:	loop   0x41e70a
  41e723:	adc    eax,0xb87adf1
  41e728:	pop    eax
  41e729:	je     0x41e6ca
  41e72b:	loope  0x41e6c5
  41e72d:	stos   BYTE PTR es:[edi],al
  41e72e:	xchg   ebx,eax
  41e72f:	clc    
  41e730:	sub    ebp,DWORD PTR [edi+0x13]
  41e733:	cmp    eax,0x2db31f24
  41e738:	and    ch,BYTE PTR [ebx+0x5f]
  41e73b:	(bad)  
  41e73c:	pop    edx
  41e73d:	sbb    cl,ch
  41e73f:	outs   dx,BYTE PTR ds:[esi]
  41e740:	(bad)  [edi]
  41e742:	push   0xbeb7bfd6
  41e747:	stos   BYTE PTR es:[edi],al
  41e748:	jmp    0x3053dfaa
  41e74d:	out    dx,eax
  41e74e:	xor    eax,0x9dba6dba
  41e753:	rcl    BYTE PTR [esi+0x2],0x99
  41e757:	jae    0x41e7b0
  41e759:	repz add DWORD PTR [esi+0x6e],edx
  41e75d:	sbb    dl,ch
  41e75f:	int    0x31
  41e761:	ins    DWORD PTR es:[edi],dx
  41e762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e763:	mov    eax,ds:0xc1e5dffa
  41e768:	inc    ebp
  41e769:	aas    
  41e76a:	inc    eax
  41e76b:	aaa    
  41e76c:	xchg   esp,eax
  41e76d:	adc    esp,DWORD PTR [esi+edx*4-0x72]
  41e771:	xchg   DWORD PTR [ebx+eiz*2+0x6984677a],ebp
  41e778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e779:	call   0x1daf0b49
  41e77e:	adc    eax,0xb340e9be
  41e783:	or     DWORD PTR [esi+0x69b9b896],ebx
  41e789:	push   edx
  41e78a:	(bad)  [ebx-0x6931c25f]
  41e790:	pop    esp
  41e791:	pop    ss
  41e792:	cwde   
  41e793:	idiv   BYTE PTR [ecx+ebp*2]
  41e796:	push   0xa23d973d
  41e79b:	fbld   TBYTE PTR [esp+eiz*8+0x576d9116]
  41e7a2:	sub    eax,0xb6056bbb
  41e7a7:	sbb    BYTE PTR [eax-0x79],cl
  41e7aa:	ds jge 0x41e7ef
  41e7ad:	call   FWORD PTR [edi-0x5ef8efef]
  41e7b3:	sbb    cl,dh
  41e7b5:	dec    esi
  41e7b6:	jg     0x41e793
  41e7b8:	in     al,dx
  41e7b9:	cmc    
  41e7ba:	sahf   
  41e7bb:	jbe    0x41e742
  41e7bd:	sbb    BYTE PTR [ebx+0x0],cl
  41e7c0:	xlat   BYTE PTR ds:[ebx]
  41e7c1:	dec    ecx
  41e7c2:	mov    bl,0xe8
  41e7c4:	cmp    DWORD PTR [ecx],esi
  41e7c6:	cdq    
  41e7c7:	pusha  
  41e7c8:	xchg   edx,eax
  41e7c9:	ret    0xfc27
  41e7cc:	jmp    0xc2f8e606
  41e7d1:	sub    ebp,DWORD PTR [edx+0x54]
  41e7d4:	pop    ebp
  41e7d5:	xor    BYTE PTR [ecx+0x5d],ah
  41e7d8:	ds cmc 
  41e7da:	or     eax,0xb1548a8a
  41e7df:	add    ecx,DWORD PTR [edi]
  41e7e1:	push   es
  41e7e2:	sub    BYTE PTR [ecx+ecx*1+0x0],al
  41e7e6:	jmp    0x212b:0xd5a16b43
  41e7ed:	inc    edi
  41e7ee:	and    cl,BYTE PTR [ebx]
  41e7f0:	mov    ds:0x5b41956b,al
  41e7f5:	(bad)  
  41e7f6:	aam    0x23
  41e7f8:	cld    
  41e7f9:	jp     0x41e82a
  41e7fb:	mov    ecx,0xd44c518e
  41e800:	or     ebx,DWORD PTR [ecx]
  41e802:	ss fwait
  41e804:	cmc    
  41e805:	out    0x37,al
  41e807:	mov    esp,0x579dc3a6
  41e80c:	or     eax,0x5c0dfbb
  41e811:	aas    
  41e812:	ret    0xcbb7
  41e815:	add    esp,esi
  41e817:	add    eax,0xbdd3f0e6
  41e81c:	cmp    al,0x1d
  41e81e:	mov    cl,0xc0
  41e820:	and    ch,cl
  41e822:	xchg   DWORD PTR [ebx-0x3a6c0d14],esi
  41e828:	(bad)  
  41e829:	xchg   ecx,eax
  41e82a:	adc    DWORD PTR [ebx],edx
  41e82c:	jne    0x41e88f
  41e82e:	or     cl,bl
  41e830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e831:	or     BYTE PTR [ecx-0x5730b71e],0x30
  41e838:	repz ror bl,0x9e
  41e83c:	mov    al,ds:0xca07103a
  41e841:	test   eax,0x8b19c703
  41e846:	dec    ebx
  41e847:	(bad)  
  41e848:	(bad)  
  41e849:	stc    
  41e84a:	or     ch,BYTE PTR [ebp+esi*2+0x12]
  41e84e:	ins    DWORD PTR es:[edi],dx
  41e84f:	mov    edx,0x35e5985c
  41e854:	fcomp  QWORD PTR ds:0x16a39af
  41e85a:	ret    0x4c79
  41e85d:	fs sbb eax,0x5b42c391
  41e863:	fidiv  WORD PTR [ebx]
  41e865:	jbe    0x41e80a
  41e867:	out    0x3,eax
  41e869:	clc    
  41e86a:	out    0xac,al
  41e86c:	jb     0x41e812
  41e86e:	fisub  DWORD PTR [ebx-0x7e]
  41e871:	sub    BYTE PTR [ebp-0x48c10bf3],cl
  41e877:	(bad)  
  41e878:	scas   eax,DWORD PTR es:[edi]
  41e879:	call   0x571e2f7
  41e87e:	js     0x41e8d8
  41e880:	inc    ebx
  41e881:	mov    es,WORD PTR gs:[esi+0x2e]
  41e885:	sbb    ch,0x24
  41e888:	mov    al,0xe9
  41e88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e88b:	xchg   edx,eax
  41e88c:	mov    BYTE PTR [edx+0x78],dl
  41e88f:	out    0x71,al
  41e891:	pop    eax
  41e892:	pop    edx
  41e893:	adc    eax,0xbc0d66c
  41e898:	jp     0x41e90a
  41e89a:	cmp    BYTE PTR [ecx-0x4a2855b6],0xc0
  41e8a1:	test   esi,edi
  41e8a3:	call   0xabf2:0x2d2f86c1
  41e8aa:	mov    cs,WORD PTR [ecx+0x1297982b]
  41e8b0:	and    BYTE PTR [edx-0x3f],0xb2
  41e8b4:	outs   dx,BYTE PTR ds:[esi]
  41e8b5:	jb     0x41e8e5
  41e8b7:	popf   
  41e8b8:	pop    ecx
  41e8b9:	leave  
  41e8ba:	jmp    0xfa00635a
  41e8bf:	adc    al,0xde
  41e8c1:	arpl   WORD PTR [ebx-0x1535deb],dx
  41e8c7:	sub    eax,0x31dd7319
  41e8cc:	fbstp  TBYTE PTR [esi-0x7d]
  41e8cf:	js     0x41e93b
  41e8d1:	xor    al,0xe2
  41e8d3:	ins    DWORD PTR es:[edi],dx
  41e8d4:	jmp    0x3f1:0x76826beb
  41e8db:	test   eax,0xd6556ff4
  41e8e0:	mov    ecx,0x871ba46c
  41e8e5:	add    esi,DWORD PTR [esi+0x75e593d7]
  41e8eb:	add    eax,0x406f710b
  41e8f0:	shl    BYTE PTR [ebx+0x24],cl
  41e8f3:	pop    esi
  41e8f4:	push   esp
  41e8f5:	mov    ds:0xac6b3d7c,eax
  41e8fa:	in     eax,dx
  41e8fb:	pop    eax
  41e8fc:	cmp    eax,0xa7714a56
  41e901:	dec    ebx
  41e902:	rcpps  xmm6,xmm4
  41e905:	ja     0x41e908
  41e907:	test   al,0x83
  41e909:	add    al,0x6c
  41e90b:	test   eax,edi
  41e90d:	mov    ebx,0xcd5dad29
  41e912:	add    eax,0xf94ed0d1
  41e917:	mov    ds:0x94bf0379,al
  41e91c:	es inc ebx
  41e91e:	rcr    BYTE PTR [edi+0x1d8a07d6],cl
  41e924:	and    al,0x92
  41e926:	adc    bh,0x4d
  41e929:	xchg   esi,eax
  41e92a:	adc    ah,bh
  41e92c:	out    0xa3,al
  41e92e:	(bad)  
  41e92f:	cmp    al,0x20
  41e931:	cmc    
  41e932:	push   ebx
  41e933:	sti    
  41e934:	push   0x4a
  41e936:	jecxz  0x41e97a
  41e938:	inc    esi
  41e939:	inc    esi
  41e93a:	add    DWORD PTR [ecx],0x4
  41e93d:	pop    ds
  41e93e:	jmp    0x1820457a
  41e943:	adc    BYTE PTR [ebx+0x11b21ee1],cl
  41e949:	sbb    eax,0x84a64055
  41e94e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e94f:	scas   eax,DWORD PTR es:[edi]
  41e950:	test   eax,0xbe27be5f
  41e955:	push   ecx
  41e956:	pop    eax
  41e957:	in     eax,dx
  41e958:	retf   
  41e959:	xchg   esi,eax
  41e95a:	out    0xbc,eax
  41e95c:	and    esp,DWORD PTR [edx+0xf05d4e4]
  41e962:	push   esi
  41e963:	call   DWORD PTR [esi-0x6012093b]
  41e969:	xchg   esi,eax
  41e96a:	jmp    FWORD PTR [ebx]
  41e96c:	(bad)  
  41e96d:	xchg   edi,eax
  41e96e:	enter  0x88a3,0xde
  41e972:	popa   
  41e973:	jle    0x41e973
  41e975:	(bad)  
  41e976:	cmp    al,0x9d
  41e978:	jg     0x41e93b
  41e97a:	in     al,dx
  41e97b:	pushf  
  41e97c:	std    
  41e97d:	stc    
  41e97e:	outs   dx,DWORD PTR ds:[esi]
  41e97f:	test   al,0x27
  41e981:	mov    ecx,0xf0d316c1
  41e986:	ficom  DWORD PTR [ebx+edx*4]
  41e989:	lods   al,BYTE PTR ds:[esi]
  41e98a:	loopne 0x41e988
  41e98c:	into   
  41e98d:	xor    eax,0xe9e5884c
  41e992:	sub    ebx,edi
  41e994:	cld    
  41e995:	pop    esp
  41e996:	enter  0x75f7,0xa5
  41e99a:	and    ch,BYTE PTR [eax+0x383d4390]
  41e9a0:	gs push ebx
  41e9a2:	push   ecx
  41e9a3:	and    ah,BYTE PTR [edi-0x12]
  41e9a6:	mov    esi,0x8703eeba
  41e9ab:	bnd jns 0x41ea15
  41e9ae:	mov    cl,0x8
  41e9b0:	adc    eax,0x9a82f6b1
  41e9b5:	inc    ebp
  41e9b6:	nop
  41e9b7:	idiv   DWORD PTR [ebx+0x69]
  41e9ba:	fwait
  41e9bb:	cmp    ebx,DWORD PTR [ecx+0x5f]
  41e9be:	test   BYTE PTR [ebp-0x11],ch
  41e9c1:	sti    
  41e9c2:	fild   WORD PTR [esi+0x3a]
  41e9c5:	adc    edx,esp
  41e9c7:	mov    DWORD PTR [esi],ecx
  41e9c9:	cmp    al,0x32
  41e9cb:	pop    esi
  41e9cc:	fnstenv [eax+0x7bb20cf1]
  41e9d2:	arpl   WORD PTR [esi-0x14],bp
  41e9d5:	xor    al,0xbf
  41e9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9d8:	inc    esp
  41e9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9da:	push   esp
  41e9db:	imul   ebx,DWORD PTR [ebx+0x491cb999],0x5d9bb3f9
  41e9e5:	sub    eax,0xfb40441
  41e9ea:	leave  
  41e9eb:	jle    0x41e9d1
  41e9ed:	inc    esi
  41e9ee:	pop    es
  41e9ef:	mov    edx,0xd950685c
  41e9f4:	call   0x76da:0xdf08177
  41e9fb:	pop    esp
  41e9fc:	jmp    0x47c2246d
  41ea01:	or     BYTE PTR [eiz*1+0x1ff07edb],0x8a
  41ea09:	and    ebp,edx
  41ea0b:	mov    al,ds:0x279f4b81
  41ea10:	pop    eax
  41ea11:	pop    es
  41ea12:	push   esp
  41ea13:	xor    al,0xd7
  41ea15:	neg    dl
  41ea17:	push   ss
  41ea18:	not    BYTE PTR [eax-0x5c12af6]
  41ea1e:	push   ss
  41ea1f:	js     0x41ea02
  41ea21:	dec    ebx
  41ea22:	jle    0x41ea50
  41ea24:	loope  0x41ea5a
  41ea26:	sub    al,0x2f
  41ea28:	inc    ebp
  41ea29:	daa    
  41ea2a:	sub    DWORD PTR [edx-0x3c],0xffffffe3
  41ea2e:	inc    esp
  41ea2f:	(bad)  
  41ea30:	xchg   esp,eax
  41ea31:	lahf   
  41ea32:	adc    BYTE PTR [ebx+0x3a],ah
  41ea35:	sub    BYTE PTR [eax+eax*4+0x678af5fe],cl
  41ea3c:	jo     0x41e9c5
  41ea3e:	add    BYTE PTR [esp+edx*1-0x74],ch
  41ea42:	repz shl BYTE PTR [ecx],cl
  41ea45:	je     0x41ea36
  41ea47:	adc    edi,DWORD PTR [ecx-0x335e73c0]
  41ea4d:	xor    DWORD PTR [ebp+0x7c95e3aa],ecx
  41ea53:	xchg   esp,esp
  41ea55:	or     al,0x44
  41ea57:	stos   DWORD PTR es:[edi],eax
  41ea58:	xor    DWORD PTR es:0x7bf5c34f,ebp
  41ea5f:	jmp    DWORD PTR [esi-0x15b10d65]
  41ea65:	jbe    0x41ea18
  41ea67:	cmp    eax,edx
  41ea69:	and    al,0x6e
  41ea6c:	enter  0x30b0,0x56
  41ea70:	or     esi,edi
  41ea72:	je     0x41e9fe
  41ea74:	test   DWORD PTR [ecx-0x3],ebx
  41ea77:	mov    al,0x84
  41ea79:	jmp    0x41ea44
  41ea7b:	daa    
  41ea7c:	dec    edx
  41ea7d:	dec    edx
  41ea7e:	and    ch,BYTE PTR [edx-0x2a57848]
  41ea84:	imul   ebp,DWORD PTR [eax],0xe
  41ea87:	stos   DWORD PTR es:[edi],eax
  41ea88:	push   edx
  41ea89:	cmp    al,0x99
  41ea8b:	ins    BYTE PTR es:[edi],dx
  41ea8c:	mov    al,ds:0x1401e98e
  41ea91:	aas    
  41ea92:	pop    ecx
  41ea93:	jge    0x41eaf8
  41ea95:	scas   eax,DWORD PTR es:[edi]
  41ea96:	push   ecx
  41ea97:	hlt    
  41ea98:	push   edi
  41ea99:	loope  0x41ea30
  41ea9b:	jp     0x41eaa9
  41ea9d:	jg     0x41eb06
  41ea9f:	cmc    
  41eaa0:	push   es
  41eaa1:	fsubp  st(0),st
  41eaa3:	mov    edi,0xc337
	...
  41eab0:	add    BYTE PTR [esi-0x3e],bh
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x51
  41eabe:	int    0xb1
  41eac0:	hlt    
  41eac1:	jmp    0xad41ec2b
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [ecx],cl
  41eaca:	or     al,0x15
  41eacc:	pop    edi
  41eacd:	mov    cl,0xe0
  41eacf:	mov    edx,0xc6e4f8bb
  41ead4:	xor    DWORD PTR [edi+0x30017791],edx
  41eada:	leave  
  41eadb:	mov    DWORD PTR [edi+0x37],esi
  41eade:	or     al,BYTE PTR [esi+edx*4]
  41eae1:	mov    dl,0x98
  41eae3:	icebp  
  41eae4:	fsub   QWORD PTR [eax+0x42]
  41eae7:	pop    ecx
  41eae8:	ret    
  41eae9:	lods   al,BYTE PTR ds:[esi]
  41eaea:	ins    BYTE PTR es:[edi],dx
  41eaeb:	mov    dh,0x83
  41eaed:	and    dh,BYTE PTR [ebp-0x12]
  41eaf0:	add    DWORD PTR [edx],esi
  41eaf2:	(bad)  
  41eaf3:	repz dec eax
  41eaf5:	iret   
  41eaf6:	xchg   edx,eax
  41eaf7:	ficom  WORD PTR [ecx-0x5c]
  41eafa:	je     0x41eae9
  41eafc:	dec    esp
  41eafd:	mov    ds:0xf5ab1f87,eax
  41eb02:	sti    
  41eb03:	ret    
  41eb04:	cli    
  41eb05:	fstp   DWORD PTR [eax-0x3468b7ba]
  41eb0b:	inc    edi
  41eb0c:	mov    dl,0x4d
  41eb0e:	push   es
  41eb0f:	push   ds
  41eb10:	inc    edx
  41eb11:	jle    0x41eaf9
  41eb13:	mov    esp,0x8eae2a31
  41eb18:	fcmove st,st(1)
  41eb1a:	mul    DWORD PTR [eax+0x483adcc9]
  41eb20:	rcr    ebx,cl
  41eb22:	or     al,0x0
  41eb24:	mov    ebx,ebp
  41eb26:	inc    ebx
  41eb27:	xor    al,0xc
  41eb29:	in     eax,0xd7
  41eb2b:	xchg   esp,eax
  41eb2c:	mov    edi,0x1e5c24d9
  41eb31:	inc    DWORD PTR [ebp+0x1c251f6c]
  41eb37:	pop    edx
  41eb38:	je     0x41eb5e
  41eb3a:	mov    cl,0x6b
  41eb3c:	dec    ebp
  41eb3d:	jl     0x41eb69
  41eb3f:	jnp    0x41eb28
  41eb41:	sti    
  41eb42:	xchg   ecx,eax
  41eb43:	and    al,0x4d
  41eb45:	aad    0x28
  41eb47:	mov    ch,0xa4
  41eb49:	repz sbb dl,BYTE PTR [edi]
  41eb4c:	inc    eax
  41eb4d:	inc    edx
  41eb4e:	push   eax
  41eb4f:	ja     0x41ebaa
  41eb51:	in     eax,dx
  41eb52:	sub    dl,0x68
  41eb55:	bound  ecx,QWORD PTR [edx+0x663a9071]
  41eb5b:	cmp    eax,0x33f0f15d
  41eb60:	and    BYTE PTR [edi+0x21],ch
  41eb63:	call   DWORD PTR [edx+0x18f22a52]
  41eb69:	inc    edi
  41eb6a:	stc    
  41eb6b:	popf   
  41eb6c:	mov    bh,0xb6
  41eb6e:	mov    ds:0xd623a97b,eax
  41eb73:	push   ds
  41eb74:	inc    edx
  41eb75:	pop    esp
  41eb76:	cs cmp ebp,ebp
  41eb79:	sub    DWORD PTR [esi-0x32],ebx
  41eb7c:	push   ds
  41eb7d:	pop    ebp
  41eb7e:	js     0x41eb29
  41eb80:	push   ds
  41eb81:	mov    al,es:0x72ff0af6
  41eb87:	loop   0x41ebed
  41eb89:	clc    
  41eb8a:	add    eax,0x31da0edd
  41eb8f:	shr    DWORD PTR ds:0xb483e82f,0xb2
  41eb96:	fiadd  DWORD PTR [eax]
  41eb98:	dec    ebx
  41eb99:	or     dh,BYTE PTR [ecx]
  41eb9b:	cmp    al,0x13
  41eb9d:	jp     0x41ec0e
  41eb9f:	mov    eax,0x8bd37d78
  41eba4:	push   esp
  41eba5:	lds    edi,FWORD PTR [edi+0xd]
  41eba8:	shl    DWORD PTR ds:0x744db5f3,0x7f
  41ebaf:	mov    WORD PTR [edx-0x50c80126],cs
  41ebb5:	pop    esp
  41ebb6:	out    0xc1,eax
  41ebb8:	adc    al,0xb5
  41ebba:	jnp    0x41ebac
  41ebbc:	push   edx
  41ebbd:	mov    eax,0x1e4a5168
  41ebc2:	inc    eax
  41ebc3:	jo     0x41ebce
  41ebc5:	test   eax,0x568a2c48
  41ebca:	pop    es
  41ebcb:	imul   esp
  41ebcd:	push   esi
  41ebce:	sbb    ebx,DWORD PTR [ebx+esi*4-0x14a78d2d]
  41ebd5:	xchg   edi,eax
  41ebd6:	mov    ebx,DWORD PTR [edi+0x5d]
  41ebd9:	sub    esi,ecx
  41ebdb:	xor    al,0x63
  41ebdd:	pop    esp
  41ebde:	in     al,0xe8
  41ebe0:	xor    al,0x79
  41ebe2:	and    eax,0xa7088206
  41ebe7:	aaa    
  41ebe8:	dec    BYTE PTR [ebp-0x66]
  41ebeb:	outs   dx,BYTE PTR ds:[esi]
  41ebec:	xor    ebp,DWORD PTR [eax]
  41ebee:	out    dx,al
  41ebef:	pushf  
  41ebf0:	jo     0x41ebff
  41ebf2:	pop    eax
  41ebf3:	push   ds
  41ebf4:	out    dx,al
  41ebf5:	cmp    ah,dh
  41ebf7:	add    ebp,DWORD PTR [edi]
  41ebf9:	inc    ebx
  41ebfa:	xchg   edx,eax
  41ebfb:	mov    eax,ds:0x9bdf0eed
  41ec00:	test   BYTE PTR [esi],ah
  41ec02:	adc    DWORD PTR [ecx+esi*4],0xe2a49f9c
  41ec09:	or     ebx,DWORD PTR [edx-0x18]
  41ec0c:	in     eax,dx
  41ec0d:	xchg   edx,eax
  41ec0e:	add    BYTE PTR [ebx-0x22],bh
  41ec11:	(bad)  
  41ec12:	call   0x267b823e
  41ec17:	cld    
  41ec18:	cli    
  41ec19:	out    0xe7,al
  41ec1b:	xchg   dh,cl
  41ec1d:	repz xor al,0x2a
  41ec20:	xchg   edx,eax
  41ec21:	mov    edi,0xdf202f1c
  41ec26:	xchg   DWORD PTR [edx-0x76],edi
  41ec29:	cdq    
  41ec2a:	dec    edi
  41ec2b:	test   eax,0xe10fb683
  41ec30:	or     esi,DWORD PTR [ebx+0x60]
  41ec33:	lods   eax,DWORD PTR ds:[esi]
  41ec34:	clc    
  41ec35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec36:	inc    esp
  41ec37:	jo     0x41ec50
  41ec39:	mov    BYTE PTR [edi],cl
  41ec3b:	xchg   esi,eax
  41ec3c:	retf   
  41ec3d:	lds    edx,FWORD PTR [ecx-0x77]
  41ec40:	bound  ebx,QWORD PTR ds:0xa4195cc1
  41ec46:	scas   eax,DWORD PTR es:[edi]
  41ec47:	(bad)
  41ec4a:	sub    eax,0x1fef4792
  41ec4f:	and    al,BYTE PTR [esi]
  41ec51:	shr    cl,cl
  41ec53:	or     eax,ecx
  41ec55:	push   esi
  41ec56:	xchg   BYTE PTR [ecx],ah
  41ec58:	cmp    al,BYTE PTR [ebp+0x1fd5136a]
  41ec5e:	xor    eax,0x175bb2c8
  41ec63:	cwde   
  41ec64:	xchg   edx,eax
  41ec65:	into   
  41ec66:	test   BYTE PTR ds:0xb3bcd1fe,ah
  41ec6c:	inc    esp
  41ec6d:	bound  edi,QWORD PTR [ebx+ebx*2+0x1e01f600]
  41ec74:	mov    bl,0x3c
  41ec76:	outs   dx,DWORD PTR ds:[esi]
  41ec77:	cmc    
  41ec78:	pop    eax
  41ec79:	mov    al,0x46
  41ec7b:	mov    DWORD PTR ds:0xa4101504,eax
  41ec81:	xchg   BYTE PTR [ecx],ah
  41ec83:	test   eax,0xb54ee5b4
  41ec88:	js     0x41ece7
  41ec8a:	fcmovbe st,st(4)
  41ec8c:	mov    edx,0x5737bd04
  41ec91:	jb     0x41ed0c
  41ec93:	adc    dh,BYTE PTR [eax+0x4fbcce0f]
  41ec99:	mov    cs,WORD PTR [edi+0xc93a530]
  41ec9f:	shl    BYTE PTR [eax-0x4a],cl
  41eca2:	ins    BYTE PTR es:[edi],dx
  41eca3:	clc    
  41eca4:	inc    eax
  41eca5:	mov    bl,0xa7
  41eca7:	xchg   esi,eax
  41eca8:	jg     0x41ece4
  41ecaa:	nop
  41ecab:	sti    
  41ecac:	push   ss
  41ecad:	push   ebx
  41ecae:	lods   eax,DWORD PTR ds:[esi]
  41ecaf:	mov    al,0xe4
  41ecb1:	inc    eax
  41ecb2:	jne    0x41ed1b
  41ecb4:	adc    eax,0x5143d84b
  41ecb9:	std    
  41ecba:	mov    edi,0x7d6e4bd9
  41ecbf:	ror    ebp,0xe9
  41ecc2:	mov    ebx,0xfd432e13
  41ecc7:	sub    eax,0x2db7416b
  41eccc:	retf   
  41eccd:	push   esi
  41ecce:	stos   DWORD PTR es:[edi],eax
  41eccf:	ins    DWORD PTR es:[edi],dx
  41ecd0:	and    al,0xb
  41ecd2:	sbb    bl,dl
  41ecd4:	dec    di
  41ecd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd7:	cmp    BYTE PTR [edi],cl
  41ecd9:	xchg   BYTE PTR [ecx+0x59],dl
  41ecdc:	add    DWORD PTR [ecx+0x42958cb6],edx
  41ece2:	sbb    ebx,ebx
  41ece4:	ins    DWORD PTR es:[edi],dx
  41ece5:	cdq    
  41ece6:	push   esi
  41ece7:	push   0xffffffb0
  41ece9:	leave  
  41ecea:	ds int 0x98
  41eced:	mov    edi,0x88d36978
  41ecf2:	mov    ah,0x15
  41ecf4:	aam    0xc7
  41ecf6:	fild   WORD PTR [esi-0x4c0fb95d]
  41ecfc:	cmp    ebx,edx
  41ecfe:	sbb    al,0x24
  41ed00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed01:	call   0xb01180f6
  41ed06:	inc    ebp
  41ed07:	add    dh,BYTE PTR [edi+0x6d]
  41ed0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed0b:	call   0xcee039d1
  41ed10:	pop    edi
  41ed11:	in     al,dx
  41ed12:	xor    BYTE PTR [eax+0x25ce0bcb],ah
  41ed18:	retf   0xb074
  41ed1b:	xor    ecx,DWORD PTR [eax]
  41ed1d:	ret    0x1393
  41ed20:	mov    ch,ch
  41ed22:	and    eax,0x9aa0120b
  41ed27:	leave  
  41ed28:	and    al,dl
  41ed2a:	push   ebp
  41ed2b:	jnp    0x41ed0d
  41ed2d:	cmp    bh,BYTE PTR [edi]
  41ed2f:	inc    ebp
  41ed30:	mov    edi,0x6452aa88
  41ed35:	(bad)  
  41ed36:	int3   
  41ed37:	jle    0x41ed9d
  41ed39:	es xor eax,0xdd5b0f0b
  41ed3f:	sti    
  41ed40:	(bad)  
  41ed41:	sbb    DWORD PTR [edx+ebp*1+0x48],edx
  41ed45:	add    DWORD PTR [ebx+0x68],esi
  41ed48:	rcr    BYTE PTR [ecx],cl
  41ed4a:	inc    esi
  41ed4b:	lahf   
  41ed4c:	jg     0x41ed53
  41ed4e:	leave  
  41ed4f:	dec    ebp
  41ed50:	lods   al,BYTE PTR ds:[esi]
  41ed51:	fwait
  41ed52:	mov    ds:0xb624ecca,eax
  41ed57:	out    dx,eax
  41ed58:	call   0x9adf:0xa29fe5b5
  41ed5f:	jmp    0x766fc916
  41ed64:	out    0x9,eax
  41ed66:	jp     0x41eddb
  41ed68:	in     eax,0xf6
  41ed6a:	xchg   ebx,eax
  41ed6b:	and    bh,ch
  41ed6d:	out    0xca,eax
  41ed6f:	ins    BYTE PTR es:[edi],dx
  41ed70:	pop    eax
  41ed71:	test   esi,esi
  41ed73:	scas   eax,DWORD PTR es:[edi]
  41ed74:	into   
  41ed75:	push   ecx
  41ed76:	and    bh,0x97
  41ed79:	(bad)  
  41ed7a:	loope  0x41edb1
  41ed7c:	ins    BYTE PTR es:[edi],dx
  41ed7d:	push   ebx
  41ed7e:	es mov bh,0xf1
  41ed81:	xor    eax,0x90e119da
  41ed86:	aas    
  41ed87:	xor    BYTE PTR [ebx+0x1bb9efda],0xb6
  41ed8e:	stos   BYTE PTR es:[edi],al
  41ed8f:	push   ss
  41ed90:	es int 0x14
  41ed93:	mov    eax,DWORD PTR [esi+eiz*2+0x36]
  41ed97:	mov    esi,0xf5fe507e
  41ed9c:	dec    esi
  41ed9d:	repz fsubr QWORD PTR [eax-0x3e967d0]
  41eda4:	mov    WORD PTR [edx],cs
  41eda6:	adc    DWORD PTR [edi],ecx
  41eda8:	jns    0x41ed3b
  41edaa:	jae    0x41edfc
  41edac:	mov    bh,0xc1
  41edae:	add    ah,ah
  41edb0:	mov    WORD PTR [esi-0x2c],?
  41edb3:	xchg   DWORD PTR [ecx+0x45],esp
  41edb6:	pop    edx
  41edb7:	out    0x77,eax
  41edb9:	outs   dx,DWORD PTR ds:[esi]
  41edba:	int    0x14
  41edbc:	int    0xd7
  41edbe:	les    ebx,FWORD PTR [ebx+0x63a08d7f]
  41edc4:	imul   ebp,DWORD PTR [edx+0x594fad00],0x30b80cf0
  41edce:	and    ch,cl
  41edd0:	call   0xc343:0x951e0196
  41edd7:	xor    bl,al
  41edd9:	fnstsw WORD PTR [edi+ebp*8+0x39c53649]
  41ede0:	mov    ebp,0xe97c8939
  41ede5:	popa   
  41ede6:	xchg   DWORD PTR [eax],eax
  41ede8:	(bad)
  41edec:	aaa    
  41eded:	lods   eax,DWORD PTR ds:[esi]
  41edee:	std    
  41edef:	pusha  
  41edf0:	fwait
  41edf1:	rcl    DWORD PTR [esi],1
  41edf3:	cmp    DWORD PTR cs:[esi-0x6d4ae75b],ecx
  41edfa:	cdq    
  41edfb:	cmp    cl,BYTE PTR [esi-0x2a48fa82]
  41ee01:	adc    BYTE PTR [edi+0x18ed22a5],ch
  41ee07:	push   ds
  41ee08:	dec    edx
  41ee09:	sub    cl,BYTE PTR [ecx-0x256eef4d]
  41ee0f:	fdiv   QWORD PTR [ecx+0x28a502d1]
  41ee15:	and    BYTE PTR [ecx+0x679296ba],bl
  41ee1b:	dec    eax
  41ee1c:	call   FWORD PTR [ecx+0x5a]
  41ee1f:	push   0x38
  41ee21:	call   0x7ae01e1a
  41ee26:	mov    eax,0x2e7d1c6b
  41ee2b:	or     DWORD PTR [eax-0x6ca26f20],esi
  41ee31:	and    cl,cl
  41ee33:	shl    BYTE PTR [ebp+edx*8-0x373e7233],0x39
  41ee3b:	inc    DWORD PTR [edi-0x252fe5]
  41ee41:	cld    
  41ee42:	data16 (bad) 
  41ee44:	daa    
  41ee45:	pop    ss
  41ee46:	pop    edx
  41ee47:	and    dl,ah
  41ee49:	in     eax,0x2a
  41ee4b:	imul   ecx,DWORD PTR [eax+ebp*4],0x38
  41ee4f:	mov    bh,0x4
  41ee51:	mov    edi,0x581db29d
  41ee56:	xor    eax,0x69b9bc56
  41ee5b:	or     eax,0xf7ca8288
  41ee60:	xchg   BYTE PTR [eax+0x51],bl
  41ee63:	mov    ebp,0x59b843a1
  41ee68:	das    
  41ee69:	cld    
  41ee6a:	add    bh,al
  41ee6c:	int    0xee
  41ee6e:	xchg   ebp,eax
  41ee6f:	stos   BYTE PTR es:[edi],al
  41ee70:	adc    ebx,DWORD PTR [ebp+0x6d21a22b]
	...
  41ee7e:	add    BYTE PTR [eax],al
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xee2f76e4
  41ee8e:	or     bh,BYTE PTR [edx+0x16996d4]
  41ee94:	add    BYTE PTR [ebp+0x33000003],ch
  41ee9a:	adc    eax,0x63257d66
  41ee9f:	cdq    
  41eea0:	add    DWORD PTR [ebx-0x12f082a6],ecx
  41eea6:	mov    cl,0x9e
  41eea8:	ror    BYTE PTR [edx-0x25],0x19
  41eeac:	sub    esi,DWORD PTR ds:0x5c95a357
  41eeb2:	pop    eax
  41eeb3:	push   bx
  41eeb5:	xor    eax,0x600b222e
  41eeba:	sbb    eax,0x595f6ef1
  41eebf:	xchg   ebx,eax
  41eec0:	sbb    eax,DWORD PTR [esi*4-0x3967abd1]
  41eec7:	adc    eax,0xfcf9394a
  41eecc:	nop
  41eecd:	icebp  
  41eece:	mov    edi,0x433224f4
  41eed3:	jb     0x41eeff
  41eed5:	pop    ecx
  41eed6:	or     al,0xa4
  41eed8:	add    ah,BYTE PTR [ecx-0x61]
  41eedb:	rcl    BYTE PTR [ecx-0xc],0x97
  41eedf:	test   eax,0xf2460a3d
  41eee4:	ret    
  41eee5:	jl     0x41ee7b
  41eee7:	xchg   esp,eax
  41eee8:	xchg   esp,eax
  41eee9:	pop    esp
  41eeea:	cmp    DWORD PTR [edi+0x42856953],esi
  41eef0:	jmp    DWORD PTR [edx+0x52]
  41eef3:	inc    ebx
  41eef4:	sti    
  41eef5:	sbb    al,al
  41eef7:	push   es
  41eef8:	or     al,ah
  41eefa:	ss push esp
  41eefc:	sub    ecx,DWORD PTR [ecx+0x2d97cb11]
  41ef02:	push   es
  41ef03:	jnp    0x41ef5c
  41ef05:	(bad)  
  41ef07:	mov    edx,0x95987215
  41ef0c:	pop    ebp
  41ef0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef0e:	ret    
  41ef0f:	sbb    al,0xc5
  41ef11:	mov    ebp,0x1f2cc46d
  41ef16:	add    dh,BYTE PTR [ecx-0x6d]
  41ef19:	fwait
  41ef1a:	mov    ch,0x75
  41ef1c:	fsubr  st,st(4)
  41ef1e:	mov    cl,0x18
  41ef20:	inc    ebx
  41ef21:	hlt    
  41ef22:	fwait
  41ef23:	leave  
  41ef24:	lea    ebp,[edi+0x44]
  41ef27:	adc    al,0xdb
  41ef29:	ins    DWORD PTR es:[edi],dx
  41ef2a:	mov    edx,0x3fd60e99
  41ef2f:	in     al,0xaa
  41ef31:	xor    BYTE PTR [edi],al
  41ef33:	pop    eax
  41ef34:	imul   ebp,DWORD PTR [edx+0x3c75ff32],0x46
  41ef3b:	inc    esi
  41ef3c:	in     eax,dx
  41ef3d:	sub    ebp,DWORD PTR [edx-0x70]
  41ef40:	jno    0x41ef1d
  41ef42:	jg     0x41ef34
  41ef44:	enter  0x34a7,0xa9
  41ef48:	into   
  41ef49:	xchg   BYTE PTR [ebx+0x4aed455d],dh
  41ef4f:	aas    
  41ef50:	stc    
  41ef51:	sbb    ch,ah
  41ef53:	adc    bh,BYTE PTR [eax]
  41ef55:	add    eax,0x12f8fa3c
  41ef5a:	dec    eax
  41ef5b:	adc    DWORD PTR [ebp+0x1c],ecx
  41ef5e:	and    ah,bl
  41ef60:	push   ebp
  41ef61:	clc    
  41ef62:	pop    ebx
  41ef63:	push   ebx
  41ef64:	xchg   edx,eax
  41ef65:	enter  0x1450,0x9c
  41ef69:	aad    0x22
  41ef6b:	pop    ds
  41ef6c:	xchg   esi,eax
  41ef6d:	dec    edx
  41ef6e:	sbb    edi,DWORD PTR [esi]
  41ef70:	xor    esi,DWORD PTR [ebp+0x2b015803]
  41ef76:	imul   edi,edx,0xdcc6de4e
  41ef7c:	mov    esi,0x14882e01
  41ef81:	fsub   DWORD PTR [eax+0x74]
  41ef84:	popf   
  41ef85:	lea    eax,[bp+di-0x32af]
  41ef8a:	sub    edx,0xffffffb6
  41ef8d:	shr    BYTE PTR ds:0x7e2a35ca,1
  41ef93:	lods   al,BYTE PTR ds:[esi]
  41ef94:	popf   
  41ef95:	int3   
  41ef96:	sbb    eax,0x12360fff
  41ef9b:	mov    dl,0x28
  41ef9d:	out    dx,eax
  41ef9e:	push   ebx
  41ef9f:	addr16 sbb eax,0x35f1ccce
  41efa5:	adc    cl,0x87
  41efa8:	loopne 0x41ef8e
  41efaa:	mov    BYTE PTR [ecx+0x55376cd5],bh
  41efb0:	repnz add BYTE PTR es:[ebp+0x2091f50f],cl
  41efb8:	dec    esi
  41efb9:	mov    BYTE PTR [ecx+0x7b2aa59c],dh
  41efbf:	int3   
  41efc0:	dec    edi
  41efc1:	or     DWORD PTR [ebx],ebx
  41efc3:	xor    ch,BYTE PTR [ebp-0x4043f1b0]
  41efc9:	fsub   DWORD PTR [edx+0x10]
  41efcc:	(bad)  
  41efcd:	leave  
  41efce:	add    al,0x2d
  41efd0:	mov    ch,0xfa
  41efd2:	mov    ah,cl
  41efd4:	pop    esi
  41efd5:	pusha  
  41efd6:	or     eax,0xe2041339
  41efdb:	push   esi
  41efdc:	adc    DWORD PTR [ecx-0x680fb03],esp
  41efe2:	repz push es
  41efe4:	push   ebp
  41efe5:	push   ss
  41efe6:	inc    esp
  41efe7:	cmp    DWORD PTR [ecx+0x42ddb57],ebx
  41efed:	cmp    al,0x1a
  41efef:	lea    esp,[eax]
  41eff1:	je     0x41f065
  41eff3:	leave  
  41eff4:	scas   al,BYTE PTR es:[edi]
  41eff5:	out    dx,eax
  41eff6:	sbb    al,0x22
  41eff8:	dec    bp
  41effa:	lods   al,BYTE PTR ds:[esi]
  41effb:	ret    
  41effc:	xchg   ecx,eax
  41effd:	inc    ebp
  41effe:	mov    cl,0x66
  41f000:	mov    ecx,0x407b5b67
  41f005:	xchg   ecx,eax
  41f006:	gs add eax,0x6d3b0dae
  41f00c:	(bad)  
  41f00d:	adc    esi,edx
  41f00f:	sbb    DWORD PTR ds:0x40348e38,edi
  41f015:	push   ss
  41f016:	jo     0x41f000
  41f018:	out    0x94,al
  41f01a:	dec    ebx
  41f01b:	cmp    BYTE PTR cs:[ebp+0x7f],dl
  41f01f:	arpl   WORD PTR [ebp-0x55aac415],ax
  41f025:	push   es
  41f026:	(bad)  
  41f027:	mov    ebp,0x1ea8b357
  41f02c:	push   ebx
  41f02d:	xor    DWORD PTR [edx],0xc562fd94
  41f033:	pop    ebp
  41f034:	sub    al,0x51
  41f036:	aaa    
  41f037:	and    al,0x83
  41f039:	int3   
  41f03a:	jne    0x41f049
  41f03c:	(bad)  
  41f03e:	aad    0xb
  41f040:	xor    ebx,DWORD PTR [edi-0x23]
  41f043:	push   edi
  41f044:	cmp    ebx,ecx
  41f046:	push   ss
  41f047:	rcr    BYTE PTR [edx-0x67463506],0x20
  41f04e:	or     al,0xf
  41f050:	test   BYTE PTR [ebx],0x95
  41f053:	jmp    0xcb30:0x7e39390f
  41f05a:	in     eax,dx
  41f05b:	adc    bh,BYTE PTR [edx+0x61]
  41f05e:	std    
  41f05f:	lods   eax,DWORD PTR ds:[esi]
  41f060:	mov    ch,0x71
  41f062:	jne    0x41f044
  41f064:	scas   al,BYTE PTR es:[edi]
  41f065:	cs and eax,0xb6a9b5ea
  41f06b:	aas    
  41f06c:	fwait
  41f06d:	lea    ebp,[eax]
  41f06f:	fsubr  DWORD PTR [edx]
  41f071:	repnz mov cl,ch
  41f074:	test   ch,dh
  41f076:	movq   mm4,mm5
  41f079:	addr16 (bad) 
  41f07b:	xchg   edx,eax
  41f07c:	jp     0x41f00b
  41f07e:	iret   
  41f07f:	or     al,0xed
  41f081:	in     al,0xa3
  41f083:	sub    dl,dh
  41f085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f086:	popf   
  41f087:	sub    ebx,DWORD PTR [ebp+0x12]
  41f08a:	loop   0x41f01c
  41f08c:	js     0x41f0a5
  41f08e:	dec    edi
  41f08f:	sbb    al,0xe3
  41f091:	js     0x41f051
  41f093:	es loop 0x41f034
  41f096:	mov    cl,0xe5
  41f098:	or     BYTE PTR [ebp+0x4f],dh
  41f09b:	lods   al,BYTE PTR ds:[esi]
  41f09c:	fdivp  st(1),st
  41f09e:	loopne 0x41f024
  41f0a0:	ret    0xa081
  41f0a3:	xor    esp,DWORD PTR [ecx-0x1]
  41f0a6:	cld    
  41f0a7:	dec    edi
  41f0a8:	aam    0xa3
  41f0aa:	into   
  41f0ab:	pop    eax
  41f0ac:	aaa    
  41f0ad:	addr16 aad 0xe5
  41f0b0:	adc    bl,0x56
  41f0b3:	(bad)  [edi]
  41f0b5:	hlt    
  41f0b6:	pop    esi
  41f0b7:	jle    0x41f0a1
  41f0b9:	les    esi,FWORD PTR ds:0xdb755553
  41f0bf:	push   edx
  41f0c0:	lahf   
  41f0c1:	inc    ecx
  41f0c2:	jp     0x41f06c
  41f0c4:	pop    esp
  41f0c5:	cmp    al,0xc9
  41f0c7:	out    0x67,al
  41f0c9:	repnz xor eax,0x5a62f35a
  41f0cf:	out    0x7d,al
  41f0d1:	cld    
  41f0d2:	and    dl,BYTE PTR [edx]
  41f0d4:	nop
  41f0d5:	rcl    BYTE PTR [eax+0x6d3a1dbc],1
  41f0db:	xor    eax,0x9ccb1a46
  41f0e0:	test   BYTE PTR [ebx],ah
  41f0e2:	mov    ebx,0xfe5dcf63
  41f0e7:	stos   DWORD PTR es:[edi],eax
  41f0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e9:	gs iret 
  41f0eb:	ins    DWORD PTR es:[edi],dx
  41f0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ed:	popa   
  41f0ee:	xchg   ebx,eax
  41f0ef:	repnz dec ebp
  41f0f1:	stc    
  41f0f2:	ret    0xa585
  41f0f5:	mov    bl,0x4b
  41f0f7:	enter  0x1928,0x4d
  41f0fb:	dec    DWORD PTR [ebp+0x402c9331]
  41f101:	rcl    ch,cl
  41f103:	mov    cl,0x75
  41f105:	fld    DWORD PTR [ebp+0x45]
  41f108:	cmp    DWORD PTR [edx],0xffffffe5
  41f10b:	push   ss
  41f10c:	and    al,0x7b
  41f10e:	pop    es
  41f10f:	dec    edi
  41f110:	aad    0x72
  41f112:	mov    esp,esp
  41f114:	popa   
  41f115:	xor    al,0x8e
  41f117:	pop    eax
  41f118:	cmp    eax,0xab3ae963
  41f11d:	je     0x41f18a
  41f11f:	add    al,dh
  41f121:	push   ds
  41f122:	mov    DWORD PTR [eax-0x2],ebx
  41f125:	xor    ecx,edi
  41f127:	jno    0x41f127
  41f129:	dec    edi
  41f12a:	push   esp
  41f12b:	mov    eax,ds:0x81fbce10
  41f130:	mov    al,0xf0
  41f132:	aaa    
  41f133:	inc    esi
  41f134:	aad    0x4
  41f136:	dec    eax
  41f137:	popf   
  41f138:	sar    dh,1
  41f13a:	xor    edi,0x3b8a078
  41f140:	jne    0x41f1a0
  41f142:	or     al,0x58
  41f144:	or     DWORD PTR [edi+ebx*8-0xb],ecx
  41f148:	dec    esi
  41f14a:	mov    eax,0xae0ba95b
  41f14f:	rcr    DWORD PTR [eax+0x50],1
  41f152:	enter  0x257,0x67
  41f156:	addr16 ret 
  41f158:	test   DWORD PTR [ebx-0x5772029],edi
  41f15e:	out    0xad,eax
  41f160:	daa    
  41f161:	cmp    bl,BYTE PTR [eax]
  41f163:	idiv   BYTE PTR [edx-0x2a73f318]
  41f169:	jns    0x41f196
  41f16b:	sub    esp,ebx
  41f16d:	push   edi
  41f16e:	or     eax,0xaa189f0
  41f173:	or     esi,DWORD PTR [esp+esi*2]
  41f176:	and    DWORD PTR [ecx],eax
  41f178:	out    dx,eax
  41f179:	xchg   ecx,eax
  41f17a:	ret    0xb921
  41f17d:	movd   mm6,eax
  41f180:	adc    DWORD PTR [edx],ebx
  41f182:	loop   0x41f127
  41f184:	push   ecx
  41f185:	pusha  
  41f186:	jnp    0x41f167
  41f188:	ficomp WORD PTR [edi]
  41f18a:	inc    ebp
  41f18b:	mov    ?,WORD PTR [esi]
  41f18d:	scas   eax,DWORD PTR es:[edi]
  41f18e:	sbb    eax,0x543c3011
  41f193:	enter  0x7c57,0x30
  41f197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f198:	pushf  
  41f199:	pop    eax
  41f19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f19b:	out    dx,eax
  41f19c:	popa   
  41f19d:	ret    
  41f19e:	xchg   edx,eax
  41f19f:	test   al,0x41
  41f1a1:	and    DWORD PTR [ecx-0x4d],0x77a13e16
  41f1a8:	frstor [esi+0x3]
  41f1ab:	in     al,0x32
  41f1ad:	xor    eax,0x2881d75c
  41f1b2:	js     0x41f212
  41f1b4:	or     BYTE PTR cs:0x1b5ace2a,ah
  41f1bb:	pop    ebp
  41f1bc:	cwde   
  41f1bd:	mov    ah,0xf8
  41f1bf:	adc    DWORD PTR [ebx+edi*4],ecx
  41f1c2:	daa    
  41f1c3:	call   0x9b4f7446
  41f1c8:	or     DWORD PTR [esi+0x3e],ebp
  41f1cb:	out    dx,al
  41f1cc:	push   edi
  41f1cd:	test   DWORD PTR [ecx-0x56],esi
  41f1d0:	jmp    0xf529:0x7d4d57f2
  41f1d7:	sbb    BYTE PTR [eax],0x95
  41f1da:	cmp    esi,esp
  41f1dc:	std    
  41f1dd:	mov    al,0x7c
  41f1df:	imul   eax,DWORD PTR [edx-0x19c2ab1b],0x3c766f87
  41f1e9:	iret   
  41f1ea:	mov    eax,0xcba52c07
  41f1ef:	ins    BYTE PTR es:[edi],dx
  41f1f0:	call   0xe17:0x61d0e42c
  41f1f7:	xchg   esp,eax
  41f1f8:	adc    DWORD PTR [edx-0x63a3673d],0xffffffcd
  41f1ff:	fcom   DWORD PTR [edx+0x19e88d34]
  41f205:	test   BYTE PTR [esi],dh
  41f207:	cmp    dl,0xb9
  41f20a:	and    ebx,ecx
  41f20c:	sub    dh,dh
  41f20e:	call   DWORD PTR [esi-0x1e]
  41f211:	dec    edi
  41f212:	dec    edi
  41f213:	ret    
  41f214:	add    BYTE PTR [ebp+0x723340a1],bh
  41f21a:	fldenv [ebx-0x51]
  41f21d:	popa   
  41f21e:	xchg   edi,eax
  41f21f:	fs jbe 0x41f1e7
  41f222:	mov    eax,0x333a4b37
  41f227:	xchg   edi,eax
  41f228:	popa   
  41f229:	test   eax,0x1bc3e20c
  41f22e:	jecxz  0x41f23e
  41f230:	xor    ebp,ebx
  41f232:	cli    
  41f233:	mov    al,ds:0xced6ccd3
  41f238:	add    eax,0xb50dec92
  41f23d:	sar    DWORD PTR [edx+0x3deea84f],0xd7
  41f244:	or     eax,0xff
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx-0x79],ebx
  41f25e:	adc    al,0x94
  41f260:	cdq    
  41f261:	inc    ebx
  41f262:	ins    DWORD PTR es:[edi],dx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	lods   eax,DWORD PTR ds:[esi]
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [eax+0x614856db],al
  41f26e:	cdq    
  41f26f:	fisttp QWORD PTR [ebx]
  41f271:	cdq    
  41f272:	bsf    esi,DWORD PTR [eax-0x3d2ebf62]
  41f279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27a:	popf   
  41f27b:	stos   BYTE PTR es:[edi],al
  41f27c:	add    DWORD PTR [eax+0x1b5c5abe],esp
  41f282:	pop    ecx
  41f283:	(bad)  
  41f284:	cli    
  41f285:	fs sub ecx,eax
  41f288:	add    eax,esp
  41f28a:	jmp    0x41f22c
  41f28c:	xchg   edx,eax
  41f28d:	cs jecxz 0x41f2e8
  41f290:	addr16 mov eax,ds:0x8a82
  41f294:	sbb    BYTE PTR [ecx-0x69],dl
  41f297:	dec    eax
  41f298:	jno    0x41f2a4
  41f29a:	pop    ss
  41f29b:	dec    esi
  41f29c:	sub    DWORD PTR [ebx+0x51097c6],esp
  41f2a2:	call   0xcff66160
  41f2a7:	pop    ebp
  41f2a8:	dec    ebx
  41f2a9:	sbb    BYTE PTR [ebx+0xd096cfc],cl
  41f2af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b0:	(bad)  
  41f2b1:	adc    edi,DWORD PTR [eax]
  41f2b3:	je     0x41f2ad
  41f2b5:	sar    BYTE PTR [ecx],cl
  41f2b7:	pop    esi
  41f2b8:	je     0x41f29a
  41f2ba:	or     al,0xb8
  41f2bc:	ret    
  41f2bd:	xchg   ebp,eax
  41f2be:	ins    BYTE PTR es:[edi],dx
  41f2bf:	jno    0x41f293
  41f2c1:	call   0x5bd8:0xec5bb368
  41f2c8:	xchg   esp,eax
  41f2c9:	rol    esp,0x7e
  41f2cc:	jp     0x41f277
  41f2ce:	inc    ecx
  41f2cf:	and    eax,0x843a2aa5
  41f2d4:	jmp    0xdf1fbfac
  41f2d9:	stos   BYTE PTR es:[edi],al
  41f2da:	cmp    edi,DWORD PTR [ebp-0x38]
  41f2dd:	rcl    DWORD PTR [edi],1
  41f2df:	cmp    DWORD PTR [ebp-0x26],ecx
  41f2e2:	sub    ebx,DWORD PTR [esi]
  41f2e4:	jo     0x41f26e
  41f2e6:	cwde   
  41f2e7:	and    al,0x63
  41f2ea:	jmp    0x3934:0xed236898
  41f2f1:	scas   eax,DWORD PTR es:[edi]
  41f2f2:	pop    ss
  41f2f3:	aaa    
  41f2f4:	sub    al,ch
  41f2f6:	inc    ebx
  41f2f7:	pushf  
  41f2f8:	xor    BYTE PTR [edx],0xa7
  41f2fb:	push   edi
  41f2fc:	fcmove st,st(3)
  41f2fe:	jbe    0x41f2ce
  41f300:	ficom  DWORD PTR [ebp-0x52]
  41f303:	jns    0x41f350
  41f305:	shl    DWORD PTR [ecx],0x49
  41f308:	push   eax
  41f309:	push   esp
  41f30a:	bound  ebx,QWORD PTR [ecx-0x2a]
  41f30d:	outs   dx,DWORD PTR ds:[esi]
  41f30e:	or     eax,0xc04b133
  41f313:	push   0x3a99f9e0
  41f318:	sub    dl,BYTE PTR [edi+0x28]
  41f31b:	push   esp
  41f31c:	sbb    eax,0x87687966
  41f321:	push   es
  41f322:	cwde   
  41f323:	mov    ebx,0xe4aef028
  41f328:	inc    esp
  41f329:	lds    ebx,FWORD PTR [edi+0x24]
  41f32c:	and    al,BYTE PTR [ebx]
  41f32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f32f:	in     eax,dx
  41f330:	add    al,0x72
  41f332:	push   ebx
  41f333:	out    0x64,eax
  41f335:	or     BYTE PTR ds:0x24883e7,dl
  41f33b:	aaa    
  41f33c:	push   eax
  41f33d:	aaa    
  41f33e:	leave  
  41f33f:	adc    BYTE PTR es:[esi-0x68d7b7f0],bl
  41f346:	push   es
  41f347:	cmp    DWORD PTR [eax+0x6d],edi
  41f34a:	test   BYTE PTR [edi],bl
  41f34c:	pushf  
  41f34d:	adc    BYTE PTR [ebp+0x1e],dh
  41f350:	xor    al,0xc2
  41f352:	mov    DWORD PTR [ecx+0x7a],ebx
  41f355:	dec    esp
  41f356:	mov    esi,0x447eb18e
  41f35b:	dec    ebx
  41f35c:	cmp    al,ch
  41f35e:	shl    BYTE PTR [edi+0x3e],1
  41f361:	daa    
  41f362:	dec    ecx
  41f363:	ret    0xc14
  41f366:	mov    eax,ds:0x788979dc
  41f36b:	stc    
  41f36c:	sbb    al,0x79
  41f36e:	(bad)  
  41f36f:	adc    bl,al
  41f371:	retf   0x3a4c
  41f374:	lock mov ds:0x1ab78dbb,eax
  41f37a:	mov    ebx,0x3bdaa9db
  41f37f:	jmp    0x1277a916
  41f384:	(bad)  
  41f385:	mov    ecx,0x53809237
  41f38a:	je     0x41f378
  41f38c:	mov    esp,0xc6a2ed4a
  41f391:	rcr    BYTE PTR [esi+eax*8],1
  41f394:	pusha  
  41f395:	xlat   BYTE PTR ds:[ebx]
  41f396:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f398:	mov    ebp,0xaa8e4b49
  41f39d:	sbb    eax,0xea93f372
  41f3a2:	mov    es,WORD PTR ds:0xa505e661
  41f3a8:	pushf  
  41f3a9:	stc    
  41f3aa:	js     0x41f368
  41f3ac:	bound  esi,QWORD PTR [edx+0x3b]
  41f3af:	cmp    DWORD PTR [ecx+esi*1+0x627d48d7],esp
  41f3b6:	or     BYTE PTR [eax+0xec4c2fb],0xf7
  41f3bd:	cmovb  eax,DWORD PTR [edi-0x2c]
  41f3c1:	or     ecx,DWORD PTR [ebp+eax*8+0x21fe0b4d]
  41f3c8:	out    0x62,al
  41f3ca:	ja     0x41f40e
  41f3cc:	adc    eax,DWORD PTR [esi]
  41f3ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3cf:	pop    ebx
  41f3d0:	add    al,0x0
  41f3d2:	int    0xb
  41f3d4:	dec    ebp
  41f3d5:	stos   BYTE PTR es:[edi],al
  41f3d6:	enter  0xe7a6,0xd0
  41f3da:	stos   DWORD PTR es:[edi],eax
  41f3db:	in     al,dx
  41f3dc:	(bad)  
  41f3dd:	push   ebx
  41f3de:	sti    
  41f3df:	les    ebx,FWORD PTR [ebx-0x302694d5]
  41f3e5:	aam    0xaf
  41f3e7:	fnstsw WORD PTR [ecx]
  41f3e9:	daa    
  41f3ea:	test   al,0x4
  41f3ec:	pop    eax
  41f3ed:	push   0xffffff8f
  41f3ef:	sar    BYTE PTR [edx+0x79],1
  41f3f2:	mov    ebx,0x5b933d7f
  41f3f7:	cmp    eax,esp
  41f3f9:	dec    esp
  41f3fa:	sbb    cl,BYTE PTR [ecx]
  41f3fc:	or     al,dl
  41f3fe:	cmp    ecx,DWORD PTR [edi+eax*1+0x6a]
  41f402:	das    
  41f403:	jge    0x41f3e3
  41f405:	leave  
  41f406:	push   ebp
  41f407:	add    eax,0xecb7b39
  41f40c:	push   es
  41f40d:	mov    eax,ds:0x358efc15
  41f412:	pop    ebx
  41f413:	inc    esp
  41f414:	sub    DWORD PTR ds:0xb291860c,eax
  41f41a:	loopne 0x41f47d
  41f41c:	jmp    0xf083:0xb1c8cced
  41f423:	push   ecx
  41f424:	adc    BYTE PTR [ecx-0x5c16ad02],bh
  41f42a:	pop    eax
  41f42b:	pop    es
  41f42c:	sti    
  41f42d:	cmp    eax,ebx
  41f42f:	cdq    
  41f430:	xor    eax,0x3c789d0a
  41f435:	and    al,0xd4
  41f437:	adc    DWORD PTR [edx+ebx*2],esp
  41f43a:	scas   al,BYTE PTR es:[edi]
  41f43b:	es dec edi
  41f43d:	imul   ecx,DWORD PTR [ecx+0x78c82d2e],0xdd5134bc
  41f447:	int3   
  41f448:	shl    BYTE PTR [ebp-0x2ade0512],cl
  41f44e:	arpl   WORD PTR [ebx],bp
  41f450:	ds repz dec ebp
  41f453:	push   ebx
  41f454:	dec    esi
  41f455:	mov    esp,0x49491f9c
  41f45a:	js     0x41f4c5
  41f45c:	pop    ss
  41f45d:	int    0x12
  41f45f:	imul   edi,DWORD PTR [edi],0xffffffac
  41f462:	push   es
  41f463:	scas   eax,DWORD PTR es:[edi]
  41f464:	jle    0x41f472
  41f466:	fidiv  WORD PTR [esi]
  41f468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f469:	inc    edi
  41f46a:	mov    al,0xd8
  41f46c:	add    eax,ecx
  41f46e:	mov    edi,0xf13ef0df
  41f473:	in     al,0x8a
  41f475:	test   BYTE PTR [ebp+0x7c405648],dh
  41f47b:	aaa    
  41f47c:	pop    edi
  41f47d:	inc    edx
  41f47e:	test   DWORD PTR [ecx-0x7f8a1fa],ebp
  41f484:	aaa    
  41f485:	inc    esp
  41f486:	in     eax,dx
  41f487:	test   DWORD PTR [esi+ebp*1],0x12578132
  41f48e:	add    al,0x5c
  41f490:	sub    BYTE PTR [ebp+eiz*2-0xa44a0f0],dl
  41f497:	les    ebx,FWORD PTR [esi+0x2028e9f8]
  41f49d:	mov    dl,0x61
  41f49f:	pop    ebx
  41f4a0:	in     al,0x3d
  41f4a2:	push   edi
  41f4a3:	int    0x1c
  41f4a5:	push   edx
  41f4a6:	ins    BYTE PTR es:[edi],dx
  41f4a7:	mov    bh,0x44
  41f4a9:	std    
  41f4aa:	retf   0x84b1
  41f4ad:	push   0xcabbad1f
  41f4b2:	mov    ebx,fs
  41f4b4:	stos   BYTE PTR es:[edi],al
  41f4b5:	pop    es
  41f4b6:	and    BYTE PTR ds:0xf84b695d,ch
  41f4bc:	out    0xf0,eax
  41f4be:	cwde   
  41f4bf:	in     al,dx
  41f4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c1:	imul   edi,ebp,0x10
  41f4c4:	rcr    BYTE PTR [ebx+0x355956b],0x1b
  41f4cb:	mov    WORD PTR [edx],gs
  41f4cd:	sbb    BYTE PTR [esi],ah
  41f4cf:	add    BYTE PTR [ebx],0x9c
  41f4d2:	sub    al,0x6e
  41f4d4:	push   esp
  41f4d5:	jb     0x41f555
  41f4d7:	push   esp
  41f4d8:	aad    0xe4
  41f4da:	mov    eax,0x9c5a3263
  41f4df:	cmp    al,0x54
  41f4e1:	dec    eax
  41f4e2:	sahf   
  41f4e3:	or     al,ah
  41f4e5:	les    edi,FWORD PTR [ecx-0x7be041f7]
  41f4eb:	scas   al,BYTE PTR es:[edi]
  41f4ec:	loope  0x41f49e
  41f4ee:	loop   0x41f4ee
  41f4f0:	scas   eax,DWORD PTR es:[edi]
  41f4f1:	mov    ecx,0xe96b170f
  41f4f6:	xchg   ecx,eax
  41f4f7:	xchg   edx,eax
  41f4f8:	lods   eax,DWORD PTR ds:[esi]
  41f4f9:	scas   eax,DWORD PTR es:[edi]
  41f4fa:	xor    edx,esi
  41f4fc:	jb     0x41f4e0
  41f4fe:	and    BYTE PTR [edx-0x58756a8e],cl
  41f504:	nop
  41f505:	std    
  41f506:	and    BYTE PTR [ecx-0x3d],al
  41f509:	push   esi
  41f50a:	jecxz  0x41f582
  41f50c:	mov    eax,ds:0xc3359dcb
  41f511:	xor    ecx,DWORD PTR [ebp-0x8]
  41f514:	cmp    esp,edx
  41f516:	je     0x41f4cd
  41f518:	div    BYTE PTR [ebp+0x67]
  41f51b:	xor    cl,ch
  41f51d:	fcomp  DWORD PTR [ebx+0x8]
  41f520:	fldcw  WORD PTR ds:0xf7ee357a
  41f526:	pop    esi
  41f527:	fxch   st(7)
  41f529:	jae    0x41f4b3
  41f52b:	call   0xc745:0xd95eb9b
  41f532:	shl    dh,0x23
  41f535:	jmp    0xa458c305
  41f53a:	xor    BYTE PTR [edx],ch
  41f53c:	mov    edx,0x71815113
  41f541:	clc    
  41f542:	fdivr  st,st(0)
  41f544:	(bad)  
  41f545:	test   DWORD PTR [edi],ebp
  41f547:	mov    WORD PTR [ebp+edi*8+0x7f1a5ab1],es
  41f54e:	jmp    0xdfa3:0x90d216e3
  41f555:	aad    0xba
  41f557:	mov    cl,0x81
  41f559:	jmp    0xcaf4b75d
  41f55e:	pop    eax
  41f55f:	and    eax,0x2c7e0c01
  41f564:	cmp    edi,esp
  41f566:	xor    ebp,DWORD PTR [ebx+ebx*8-0x5bfc8003]
  41f56d:	or     eax,0x1dfc766f
  41f572:	pop    es
  41f573:	cld    
  41f574:	jnp    0x41f5ac
  41f576:	rol    BYTE PTR [edx-0x33],1
  41f579:	sbb    eax,0x853f1c9e
  41f57e:	sahf   
  41f57f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f580:	and    eax,0xd682897c
  41f585:	lea    edi,[edi+0x52]
  41f588:	outs   dx,BYTE PTR ds:[esi]
  41f589:	enter  0x3e9f,0x72
  41f58d:	xchg   esp,eax
  41f58e:	sbb    dh,bh
  41f590:	jl     0x41f51a
  41f592:	push   ds
  41f593:	jbe    0x41f555
  41f595:	out    dx,al
  41f596:	xor    bh,BYTE PTR [edi-0x4badd091]
  41f59c:	cdq    
  41f59d:	ins    DWORD PTR es:[edi],dx
  41f59e:	mov    DWORD PTR [esi-0x257ef713],eax
  41f5a4:	lds    esp,FWORD PTR [esi+0x10]
  41f5a7:	mov    dh,0xd7
  41f5a9:	add    ebx,DWORD PTR [esi+0x76093b49]
  41f5af:	lds    ecx,FWORD PTR [edi-0x61]
  41f5b2:	sbb    eax,DWORD PTR [ebx+0x75]
  41f5b5:	mov    dh,0x73
  41f5b7:	inc    ebp
  41f5b8:	lock popf 
  41f5ba:	loope  0x41f5af
  41f5bc:	sbb    BYTE PTR [edx],al
  41f5be:	das    
  41f5bf:	repnz xor esp,ebx
  41f5c2:	rcl    BYTE PTR [edi+0x12d63509],1
  41f5c8:	shl    BYTE PTR [edx+edi*2-0x74bdf90a],cl
  41f5cf:	call   0x28d11c62
  41f5d4:	adc    al,0x38
  41f5d6:	lea    ebx,[eax]
  41f5d8:	aad    0x4a
  41f5da:	and    DWORD PTR [ebx-0x29155282],0x42
  41f5e1:	xchg   ebp,eax
  41f5e2:	fs push eax
  41f5e4:	xchg   DWORD PTR [ecx],esi
  41f5e6:	out    dx,al
  41f5e7:	xor    al,0xb2
  41f5e9:	outs   dx,DWORD PTR ds:[esi]
  41f5ea:	test   DWORD PTR [ebx],edi
  41f5ec:	and    bh,BYTE PTR [edx-0x21e29899]
  41f5f2:	jmp    0x1b30e764
  41f5f7:	pop    edx
  41f5f8:	test   DWORD PTR [ebp+0x3d],0xa16d542d
  41f5ff:	loop   0x41f627
  41f601:	dec    esp
  41f602:	sti    
  41f603:	pop    eax
  41f604:	dec    eax
  41f605:	xor    eax,0xc3a2145
  41f60a:	jne    0x41f5ac
  41f60c:	in     al,0xe5
  41f60e:	cmp    dl,BYTE PTR [esi+0x7319553d]
  41f614:	pop    ecx
  41f615:	int3   
	...
  41f61e:	add    BYTE PTR [eax],al
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	xchg   edx,eax
  41f62e:	mov    dl,0x86
  41f630:	and    esi,eax
  41f632:	jo     0x41f635
  41f634:	add    BYTE PTR [ebp-0x6afffffd],ch
  41f63a:	push   edi
  41f63b:	shl    DWORD PTR [ebx-0x77],1
  41f63e:	adc    DWORD PTR [edx+0x33],ecx
  41f641:	pushf  
  41f642:	int    0x3c
  41f644:	lods   eax,DWORD PTR ds:[esi]
  41f645:	mov    bl,0xd4
  41f647:	or     BYTE PTR ss:[ebx],ah
  41f64a:	outs   dx,BYTE PTR ds:[esi]
  41f64b:	les    ecx,FWORD PTR [eax-0x5d]
  41f64e:	(bad)  
  41f64f:	pop    esi
  41f650:	inc    edi
  41f651:	loope  0x41f5fb
  41f653:	or     dh,BYTE PTR [ebp+0x197b691e]
  41f659:	pop    es
  41f65a:	sbb    BYTE PTR [edx+0xa8979b],al
  41f660:	dec    edx
  41f661:	mov    ebx,0xf8493710
  41f666:	push   edi
  41f667:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f669:	pop    esp
  41f66a:	data16 mov bh,BYTE PTR [ecx]
  41f66d:	call   0xca9b:0x1fb650e3
  41f674:	cli    
  41f675:	cli    
  41f676:	popa   
  41f677:	xchg   ebx,eax
  41f678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f679:	sub    DWORD PTR [eax],edx
  41f67b:	cmp    eax,0xcc69ffcd
  41f680:	and    BYTE PTR [eax+0x49],dh
  41f683:	jns    0x41f60e
  41f685:	fstp   st(2)
  41f687:	mov    ch,0x60
  41f689:	(bad)  
  41f68a:	loopne 0x41f705
  41f68c:	out    0xbb,eax
  41f68e:	(bad)  
  41f68f:	pop    esi
  41f690:	xchg   ecx,eax
  41f691:	jne    0x41f622
  41f693:	fucomp st(7)
  41f695:	shl    DWORD PTR [ebx],1
  41f697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f698:	jmp    0xab4f:0xe08f6af6
  41f69f:	cmovo  ecx,DWORD PTR [esi+0x76]
  41f6a3:	fldcw  WORD PTR [ebx+0x19]
  41f6a6:	jmp    0xf2aa:0x22eec441
  41f6ad:	retf   
  41f6ae:	mov    dh,0xc3
  41f6b0:	mov    ds:0x2a719953,eax
  41f6b5:	cdq    
  41f6b6:	jnp    0x41f6c9
  41f6b8:	(bad)  
  41f6ba:	jbe    0x41f6a0
  41f6bc:	sub    DWORD PTR fs:[eax],ecx
  41f6bf:	cmp    al,0x5f
  41f6c1:	inc    esp
  41f6c2:	(bad)  
  41f6c3:	jle    0x41f70c
  41f6c5:	out    dx,al
  41f6c6:	jg     0x41f6b6
  41f6c8:	jb     0x41f73f
  41f6ca:	mov    ah,BYTE PTR [eax]
  41f6cc:	loopne 0x41f6ea
  41f6ce:	sti    
  41f6cf:	out    dx,eax
  41f6d0:	jl     0x41f745
  41f6d2:	and    bh,BYTE PTR [ebx-0x111c5c7]
  41f6d8:	mov    dh,0x2c
  41f6da:	dec    ecx
  41f6db:	repz jp 0x41f759
  41f6de:	cdq    
  41f6df:	std    
  41f6e0:	nop
  41f6e1:	mov    esp,0xcd7acbd6
  41f6e6:	cs loopne 0x41f745
  41f6e9:	push   edx
  41f6ea:	fwait
  41f6eb:	call   0x3572:0x8fa3003d
  41f6f2:	cmp    eax,0x569ccfdd
  41f6f7:	loop   0x41f6a1
  41f6f9:	jo     0x41f733
  41f6fb:	and    al,BYTE PTR [ebx+edx*8]
  41f6fe:	push   ebp
  41f6ff:	not    BYTE PTR [ebp-0x19dd7809]
  41f705:	dec    esi
  41f706:	shr    BYTE PTR [edi-0x3a],cl
  41f709:	loope  0x41f6e8
  41f70b:	adc    eax,0xff33da52
  41f710:	retf   0xf967
  41f713:	jb     0x41f75b
  41f715:	add    eax,0x255ef851
  41f71a:	mov    esi,0xb63da058
  41f71f:	sub    ch,al
  41f721:	test   al,0x16
  41f723:	jp     0x41f6ff
  41f725:	imul   edx,DWORD PTR [esi+0x76],0xffffffe8
  41f729:	xchg   ebp,eax
  41f72a:	add    DWORD PTR [ebx+0x244f0f4a],ecx
  41f730:	ffreep st(5)
  41f732:	cld    
  41f733:	ins    BYTE PTR es:[edi],dx
  41f734:	scas   eax,DWORD PTR es:[edi]
  41f735:	loop   0x41f79e
  41f737:	mov    ah,BYTE PTR [ebx+eiz*8-0x57]
  41f73b:	popa   
  41f73c:	mov    bh,0x27
  41f73e:	retf   0xb458
  41f741:	scas   eax,DWORD PTR es:[edi]
  41f742:	fwait
  41f743:	scas   al,BYTE PTR es:[edi]
  41f744:	add    ebp,DWORD PTR [di+0x6e]
  41f748:	mov    ds:0x4b5ec80,al
  41f74d:	sub    BYTE PTR [eax-0x10be9cf],cl
  41f753:	pop    edx
  41f754:	push   0xffffff8a
  41f756:	xor    BYTE PTR [esi-0x40],bl
  41f759:	sub    al,0xec
  41f75b:	bound  ebp,QWORD PTR [edx]
  41f75d:	mov    dh,0xcb
  41f75f:	cmc    
  41f760:	cli    
  41f761:	fsubr  QWORD PTR [ebp+0xe]
  41f764:	cmp    ecx,DWORD PTR [ecx]
  41f766:	push   ecx
  41f767:	jns    0x41f70f
  41f769:	loop   0x41f71b
  41f76b:	mov    eax,ds:0x4822af11
  41f770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f771:	pop    eax
  41f772:	into   
  41f773:	pop    edi
  41f774:	mov    esi,0x793e56ce
  41f779:	pop    ebp
  41f77a:	jle    0x41f7c5
  41f77c:	out    dx,eax
  41f77d:	inc    BYTE PTR ds:0x28dc409b
  41f783:	xchg   DWORD PTR [ecx-0x7e],edx
  41f786:	arpl   WORD PTR [ebp-0x1a],ax
  41f789:	leave  
  41f78a:	inc    edx
  41f78b:	mov    cl,0x4e
  41f78d:	in     eax,0x64
  41f78f:	xchg   DWORD PTR [edi+0x2767d951],ebp
  41f795:	retf   0x6801
  41f798:	jnp    0x41f753
  41f79a:	cmp    bl,BYTE PTR ss:[ebp+0x3300f402]
  41f7a1:	mov    bh,BYTE PTR [edi]
  41f7a3:	push   cs
  41f7a4:	and    BYTE PTR [edi-0x18e296b1],bh
  41f7aa:	push   esi
  41f7ab:	sub    DWORD PTR [edi-0x3f],eax
  41f7ae:	cmp    al,0x12
  41f7b0:	outs   dx,BYTE PTR ds:[esi]
  41f7b1:	and    al,0xb4
  41f7b3:	mov    ebp,0x7fc734ab
  41f7b8:	std    
  41f7b9:	jge    0x41f815
  41f7bb:	(bad)  
  41f7bc:	dec    BYTE PTR [bp+si+0x36]
  41f7c0:	xor    eax,esp
  41f7c2:	cmp    al,0x6
  41f7c4:	repnz xor BYTE PTR [eax+0x2d84706f],0xad
  41f7cc:	sbb    BYTE PTR [ecx],0xe5
  41f7cf:	inc    edx
  41f7d0:	mov    WORD PTR [ebx],?
  41f7d2:	and    esi,eax
  41f7d4:	cs push ecx
  41f7d6:	ret    0x81b7
  41f7d9:	and    DWORD PTR [ecx],esi
  41f7db:	addr16 inc edi
  41f7dd:	lods   al,BYTE PTR ds:[esi]
  41f7de:	pop    esi
  41f7df:	es cwde 
  41f7e1:	int    0x3a
  41f7e3:	jnp    0x41f82f
  41f7e5:	push   ebp
  41f7e6:	sahf   
  41f7e7:	mov    esi,0x4df2b29d
  41f7ec:	sbb    eax,0xb96a711b
  41f7f1:	mov    ds:0x6a7029c,eax
  41f7f6:	xlat   BYTE PTR ds:[ebx]
  41f7f7:	push   es
  41f7f8:	mov    al,0x4e
  41f7fa:	cmp    al,dl
  41f7fc:	rcl    bl,cl
  41f7fe:	xchg   DWORD PTR [esi+eax*4-0x1dbcc2c9],ebx
  41f805:	pop    esi
  41f806:	mov    ecx,0xade0ebe7
  41f80b:	jmp    FWORD PTR [eax+0x465fcc8a]
  41f811:	out    0x18,al
  41f813:	cwde   
  41f814:	jns    0x41f834
  41f816:	sbb    esp,0xffffffa2
  41f819:	fs cwde 
  41f81b:	mov    cl,0xfb
  41f81d:	or     dl,BYTE PTR [edi]
  41f81f:	xor    esi,ebp
  41f821:	jo     0x41f83e
  41f823:	pop    ecx
  41f824:	ja     0x41f812
  41f826:	pop    ebp
  41f827:	int    0x9b
  41f829:	mov    ?,edi
  41f82b:	jne    0x41f879
  41f82d:	das    
  41f82e:	icebp  
  41f82f:	cmp    DWORD PTR [ebx-0x3f],edx
  41f832:	rcr    esp,cl
  41f834:	xor    al,0xa8
  41f836:	stc    
  41f837:	mov    dl,0x13
  41f839:	add    eax,ebp
  41f83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f83c:	adc    esp,DWORD PTR [edi]
  41f83e:	cmp    cl,al
  41f840:	pop    edx
  41f841:	stos   BYTE PTR es:[edi],al
  41f842:	or     al,0xf5
  41f844:	in     al,0x4b
  41f846:	out    0xd3,al
  41f848:	or     bh,BYTE PTR [ebx-0x70bf90a8]
  41f84e:	dec    esi
  41f84f:	fcom   QWORD PTR [eax-0x64]
  41f852:	mov    edx,0xcade3985
  41f857:	mov    ecx,0xcac2c197
  41f85c:	push   esi
  41f85d:	hlt    
  41f85e:	imul   BYTE PTR [ecx+edi*1-0x59]
  41f862:	(bad)  
  41f863:	dec    esi
  41f864:	cli    
  41f865:	iret   
  41f866:	xor    al,cl
  41f868:	or     DWORD PTR [eax+0x38],eax
  41f86b:	xchg   BYTE PTR [esi+ebx*8],dl
  41f86e:	out    0xde,al
  41f870:	or     ebp,0x59
  41f873:	bound  edi,QWORD PTR [ecx-0xa]
  41f876:	outs   dx,BYTE PTR ds:[esi]
  41f877:	test   bl,ch
  41f879:	bound  ebp,QWORD PTR [ebx+0x68]
  41f87c:	int3   
  41f87d:	dec    edi
  41f87e:	cmp    ah,BYTE PTR [edi]
  41f880:	test   al,0x48
  41f882:	aam    0x43
  41f884:	push   cs
  41f885:	mov    esi,0x45eab941
  41f88a:	cmp    ecx,DWORD PTR [edi]
  41f88c:	mov    bl,dh
  41f88e:	sbb    bh,dl
  41f890:	and    BYTE PTR [eax],dh
  41f892:	lods   al,BYTE PTR ds:[esi]
  41f893:	pop    ebp
  41f894:	inc    eax
  41f895:	inc    edx
  41f896:	imul   edi,DWORD PTR [eax+0x1f],0xf5ef5c83
  41f89d:	dec    ecx
  41f89e:	cli    
  41f89f:	mov    eax,0xfde75d8c
  41f8a4:	(bad)  
  41f8a5:	sub    eax,0x1cf16a73
  41f8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ab:	out    dx,eax
  41f8ac:	ficomp DWORD PTR [ecx-0x71884d34]
  41f8b2:	sub    eax,0x71312f70
  41f8b7:	ds sub al,0x72
  41f8ba:	jmp    0x41f883
  41f8bc:	inc    eax
  41f8bd:	jle    0x41f939
  41f8bf:	ins    DWORD PTR es:[edi],dx
  41f8c0:	xor    ecx,DWORD PTR [edx+esi*2]
  41f8c3:	mov    dh,0x9
  41f8c5:	ins    DWORD PTR es:[edi],dx
  41f8c6:	mov    dl,BYTE PTR [esp+ebx*8]
  41f8c9:	sbb    al,0xea
  41f8cb:	fisttp WORD PTR [edi+0xec6bdd1]
  41f8d1:	xchg   edx,eax
  41f8d2:	bound  esi,QWORD PTR [ebp+0x76]
  41f8d5:	xlat   BYTE PTR ds:[ebx]
  41f8d6:	add    BYTE PTR [esi+0x3b],dl
  41f8d9:	jl     0x41f91e
  41f8db:	add    dh,ah
  41f8dd:	adc    ah,ch
  41f8df:	mov    ds:0x17b6ad7c,eax
  41f8e4:	mov    ecx,0xef8465fd
  41f8e9:	pop    ebx
  41f8ea:	(bad)  
  41f8eb:	clc    
  41f8ec:	push   ecx
  41f8ed:	pop    es
  41f8ee:	ret    
  41f8ef:	mov    dl,BYTE PTR [edi+eax*4-0x6e]
  41f8f3:	fsubr  DWORD PTR [edi-0xe179a4f]
  41f8f9:	pop    ds
  41f8fa:	inc    eax
  41f8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8fc:	sbb    al,0x89
  41f8fe:	mov    bh,0x96
  41f900:	pop    ebx
  41f901:	shl    BYTE PTR [ecx],0xe7
  41f904:	mov    dl,0x86
  41f906:	jae    0x41f961
  41f908:	leave  
  41f909:	push   0x7f
  41f90b:	icebp  
  41f90c:	xor    DWORD PTR [edx-0x56fd4b87],ebp
  41f912:	jg     0x41f91b
  41f914:	fisttp DWORD PTR ds:0x237d1ac2
  41f91a:	or     DWORD PTR [ebx],esi
  41f91c:	pop    ebp
  41f91d:	dec    edi
  41f91e:	test   eax,0x4128e6ca
  41f923:	jl     0x41f8f8
  41f925:	dec    esp
  41f926:	outs   dx,BYTE PTR ds:[esi]
  41f927:	daa    
  41f928:	mov    esi,0xde943a92
  41f92d:	and    eax,DWORD PTR [ecx-0x29341f]
  41f933:	push   ecx
  41f934:	hlt    
  41f935:	cmp    al,0xbf
  41f937:	in     al,0x18
  41f939:	xor    ch,BYTE PTR [eax*4+0x3a03a5c4]
  41f940:	mov    ebp,0x6374ecd0
  41f945:	pushf  
  41f946:	xchg   DWORD PTR [edi],edx
  41f948:	add    al,BYTE PTR [ebx-0x1c]
  41f94b:	jmp    0x41f98c
  41f94d:	cmp    edx,DWORD PTR [ecx]
  41f94f:	(bad)  
  41f950:	mov    BYTE PTR [ecx+eax*4+0x74],0x3
  41f955:	(bad)  
  41f956:	pusha  
  41f957:	ja     0x41f8dd
  41f959:	cmp    BYTE PTR [ebp+edx*1-0x577c14b0],dl
  41f960:	imul   dx,WORD PTR [ecx],0xf743
  41f965:	ror    BYTE PTR [esi+0x51],cl
  41f968:	call   0x5fc7:0x6376262
  41f96f:	retf   
  41f970:	nop
  41f971:	or     DWORD PTR [esi-0xa],edx
  41f974:	add    al,0xbb
  41f976:	jl     0x41f9ba
  41f978:	and    edi,esi
  41f97a:	pusha  
  41f97b:	dec    ebx
  41f97c:	sub    eax,0x1b500767
  41f981:	push   0x2
  41f983:	ins    BYTE PTR es:[edi],dx
  41f984:	in     al,dx
  41f985:	ficomp DWORD PTR ds:0x3882c075
  41f98b:	mov    ah,0xc5
  41f98d:	(bad)  
  41f98e:	mov    edi,0x54cfa5c7
  41f993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f994:	jae    0x41f9c6
  41f996:	out    dx,eax
  41f997:	fcom   DWORD PTR cs:[eax]
  41f99a:	cwde   
  41f99b:	jb     0x41f96e
  41f99d:	fmul   QWORD PTR [ebx-0x4e202b92]
  41f9a3:	mov    ds:0x4dd2e130,al
  41f9a8:	dec    eax
  41f9a9:	mov    bh,0xdb
  41f9ab:	scas   eax,DWORD PTR es:[edi]
  41f9ac:	fmul   DWORD PTR [esi-0x49e0ba8a]
  41f9b2:	(bad)  
  41f9b3:	outs   dx,BYTE PTR ds:[esi]
  41f9b4:	ds scas al,BYTE PTR es:[edi]
  41f9b6:	dec    ebx
  41f9b7:	mov    dl,0x1b
  41f9b9:	dec    edi
  41f9ba:	inc    edi
  41f9bb:	xchg   ebx,eax
  41f9bc:	jmp    0x4313eb5e
  41f9c1:	jne    0x41f969
  41f9c3:	jo     0x41f9e4
  41f9c5:	(bad)
  41f9c9:	cmp    eax,0xe6412010
  41f9ce:	nop
  41f9cf:	sbb    DWORD PTR [ebx+0x479de9cf],0x62
  41f9d6:	sub    edx,eax
  41f9d8:	xchg   ebx,eax
  41f9d9:	jo     0x41f9a7
  41f9db:	cmp    eax,0xb3bf06d2
  41f9e0:	ret    
  41f9e1:	enter  0xbeff,0x3
  41f9e5:	in     eax,0x0
	...
  41f9ef:	add    BYTE PTR [eax],al
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	mov    BYTE PTR [ebp+0x749dd69d],dl
  41fa03:	add    DWORD PTR [eax],eax
  41fa05:	lods   eax,DWORD PTR ds:[esi]
  41fa06:	add    eax,DWORD PTR [eax]
  41fa08:	add    BYTE PTR [edx+0x4e2d9ccd],bl
  41fa0e:	pusha  
  41fa0f:	inc    ecx
  41fa10:	fdiv   QWORD PTR [edx+0x320c7b87]
  41fa16:	rep ins BYTE PTR es:[edi],dx
  41fa18:	lahf   
  41fa19:	call   0x4c83:0xb755e7c0
  41fa20:	push   edx
  41fa21:	jne    0x41fa26
  41fa23:	(bad)  
  41fa25:	fstp   TBYTE PTR [edi]
  41fa27:	push   eax
  41fa28:	repz scas eax,DWORD PTR es:[edi]
  41fa2a:	push   eax
  41fa2b:	jae    0x41fa01
  41fa2d:	pop    ss
  41fa2e:	xchg   edi,eax
  41fa2f:	jecxz  0x41fa33
  41fa31:	fadd   DWORD PTR [ebx+0x6]
  41fa34:	data16 out 0xb2,al
  41fa37:	jb     0x41fa4e
  41fa39:	sub    edx,DWORD PTR [esi-0x55]
  41fa3c:	jno    0x41fa06
  41fa3e:	mov    edi,0xd91b2c57
  41fa43:	mov    bl,0x35
  41fa45:	push   ss
  41fa46:	dec    eax
  41fa47:	xchg   DWORD PTR [ebx+0x21],ebx
  41fa4a:	mov    bl,0xd
  41fa4c:	pop    ss
  41fa4d:	or     DWORD PTR [ecx+0x1c6836db],edi
  41fa53:	cs xor eax,0x48384c9a
  41fa59:	out    0x79,al
  41fa5b:	pop    esi
  41fa5c:	(bad)  
  41fa5d:	dec    ebp
  41fa5e:	xchg   edi,eax
  41fa5f:	(bad)  
  41fa60:	sahf   
  41fa61:	mov    ebx,DWORD PTR [ebx-0x75]
  41fa64:	mov    es,WORD PTR [ecx+0x5c796c7c]
  41fa6a:	test   BYTE PTR [esi+0x1921a17f],al
  41fa70:	in     eax,dx
  41fa71:	test   BYTE PTR [ecx-0x57],dh
  41fa74:	cmp    bh,BYTE PTR [edx-0x7b]
  41fa77:	mov    eax,ds:0x5bce7f1e
  41fa7c:	xor    eax,DWORD PTR [ecx+0x73]
  41fa7f:	icebp  
  41fa80:	pop    esp
  41fa81:	out    dx,eax
  41fa82:	lods   al,BYTE PTR ds:[esi]
  41fa83:	cmp    eax,esp
  41fa85:	sar    dh,0x50
  41fa88:	adc    DWORD PTR [ebx-0x23e410b3],ebx
  41fa8e:	sti    
  41fa8f:	fisttp DWORD PTR [ecx-0x1808f2e6]
  41fa95:	in     al,dx
  41fa96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa97:	cmp    DWORD PTR [edi+ebp*2-0x7db0f8de],ecx
  41fa9e:	out    dx,al
  41fa9f:	hlt    
  41faa0:	sbb    bh,ch
  41faa2:	out    0xf4,al
  41faa4:	repz xchg edi,eax
  41faa6:	mov    WORD PTR [ebp-0x5f717a86],ss
  41faac:	dec    edx
  41faad:	ins    DWORD PTR es:[edi],dx
  41faae:	test   BYTE PTR ds:0xc020fb0e,0x8b
  41fab5:	jmp    0x46a02100
  41faba:	xchg   edi,eax
  41fabb:	stc    
  41fabc:	jns    0x41fae0
  41fabe:	sti    
  41fabf:	or     BYTE PTR [esi+0x4c0fae30],bh
  41fac5:	lea    eax,[ebp-0x77]
  41fac8:	xor    DWORD PTR [esi-0x4],edi
  41facb:	out    0x5b,al
  41facd:	sbb    al,BYTE PTR [esi+0x5f]
  41fad0:	in     eax,0xa2
  41fad2:	sub    dh,BYTE PTR [edi]
  41fad4:	and    BYTE PTR [edx-0x4],bl
  41fad7:	mov    al,0xc2
  41fad9:	cmp    ah,BYTE PTR [eax+0x6522fd75]
  41fadf:	push   esi
  41fae0:	push   ebx
  41fae1:	xor    bh,BYTE PTR [edx-0x1f]
  41fae4:	cmp    BYTE PTR [ebp-0x1b],dl
  41fae7:	sahf   
  41fae8:	iret   
  41fae9:	push   esp
  41faea:	in     al,0xec
  41faec:	es (bad) 
  41faee:	js     0x41fb2b
  41faf0:	cs inc edx
  41faf2:	mov    ch,0x28
  41faf4:	cld    
  41faf5:	jp     0x41fb2a
  41faf7:	jge    0x41fb3c
  41faf9:	(bad)  
  41fafa:	sar    bh,1
  41fafc:	mov    esp,0xb3e8115a
  41fb01:	cmp    al,0x5b
  41fb03:	in     al,0x3a
  41fb05:	mov    edi,0xe1f7de39
  41fb0a:	cmp    cl,dh
  41fb0c:	sbb    ecx,DWORD PTR [edi+0x3b]
  41fb0f:	sub    eax,0xeaec1bed
  41fb14:	mov    dh,0xc1
  41fb16:	xchg   esi,eax
  41fb17:	pop    ss
  41fb18:	mov    ecx,0x50dc8287
  41fb1d:	aam    0xfd
  41fb1f:	ret    
  41fb20:	lods   eax,DWORD PTR ds:[esi]
  41fb21:	lock daa 
  41fb23:	mov    ah,0xac
  41fb25:	rol    BYTE PTR [si-0x7],1
  41fb29:	or     bl,ch
  41fb2b:	xor    al,BYTE PTR [edx]
  41fb2d:	xor    DWORD PTR [edx],esi
  41fb2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb30:	js     0x41fb99
  41fb32:	ss call 0x41283912
  41fb38:	retf   0x60d0
  41fb3b:	xchg   DWORD PTR gs:0x8a3238d8,esi
  41fb42:	mov    dl,dl
  41fb44:	mov    al,0x6f
  41fb46:	test   al,0x71
  41fb48:	nop
  41fb49:	ja     0x41fb97
  41fb4b:	clc    
  41fb4c:	and    cl,bh
  41fb4e:	and    BYTE PTR [edi+0x13104d83],al
  41fb54:	jns    0x41faeb
  41fb56:	repz adc eax,0x872392ce
  41fb5c:	jmp    0x41faff
  41fb5e:	xchg   esp,eax
  41fb5f:	pop    eax
  41fb60:	pop    ebx
  41fb61:	add    cl,bl
  41fb63:	jbe    0x41fb16
  41fb65:	(bad)  [ebp-0x364f5e9e]
  41fb6b:	cdq    
  41fb6c:	enter  0xabd,0x97
  41fb70:	cmp    BYTE PTR [eax+0x46],bh
  41fb73:	mov    edx,0x70f26e55
  41fb78:	in     al,dx
  41fb79:	pop    esp
  41fb7a:	retf   0x6a18
  41fb7d:	dec    esp
  41fb7e:	pop    esi
  41fb7f:	neg    BYTE PTR [esi]
  41fb81:	mov    ds:0x2f43f961,eax
  41fb86:	cmp    al,0x1
  41fb88:	call   0x1f4ea130
  41fb8d:	fwait
  41fb8e:	les    edx,FWORD PTR ds:[ebx]
  41fb91:	scas   eax,DWORD PTR es:[edi]
  41fb92:	mov    dh,0xfd
  41fb94:	pop    eax
  41fb95:	in     al,dx
  41fb96:	add    dh,BYTE PTR [ebp-0x2b680f39]
  41fb9c:	xor    BYTE PTR [esi],0xcb
  41fb9f:	fld    DWORD PTR [edx]
  41fba1:	lea    ebp,[edx]
  41fba3:	in     eax,0x5e
  41fba5:	nop
  41fba6:	lds    ebx,FWORD PTR [edx-0x15]
  41fba9:	sbb    esi,DWORD PTR [ecx+edi*2]
  41fbac:	cdq    
  41fbad:	scas   al,BYTE PTR es:[edi]
  41fbae:	mov    fs,WORD PTR [esi]
  41fbb0:	fcomp  DWORD PTR [ebx-0x6d]
  41fbb3:	leave  
  41fbb4:	push   0xe906f507
  41fbb9:	outs   dx,DWORD PTR ds:[esi]
  41fbba:	aam    0x62
  41fbbc:	xchg   DWORD PTR ds:0xcd171f72,ebp
  41fbc2:	cmp    al,0x78
  41fbc4:	adc    DWORD PTR [esi-0xe],0x1a183268
  41fbcb:	and    al,0xf6
  41fbcd:	(bad)
  41fbd0:	jne    0x41fbc8
  41fbd2:	add    ah,BYTE PTR [esp+ebx*2-0x68346b2e]
  41fbd9:	ret    
  41fbda:	xchg   esi,eax
  41fbdb:	imul   esi,DWORD PTR [ecx+0x5d6ed419],0xffffff88
  41fbe2:	xor    ebx,edx
  41fbe4:	sbb    ecx,DWORD PTR [esi+0xf]
  41fbe7:	or     ecx,ecx
  41fbe9:	mov    dl,0x36
  41fbeb:	aad    0xfb
  41fbed:	stc    
  41fbee:	mov    cl,0x6e
  41fbf0:	add    ah,bl
  41fbf2:	jecxz  0x41fc1b
  41fbf4:	cs stos DWORD PTR es:[edi],eax
  41fbf6:	mov    al,ah
  41fbf8:	add    ebx,0x9d907203
  41fbfe:	jmp    0x92b4:0x10854a54
  41fc05:	out    0xe2,al
  41fc07:	imul   ebp,eax,0x29
  41fc0a:	mov    ch,BYTE PTR [esi+0x6ff928ce]
  41fc10:	test   DWORD PTR [eax-0x60],edi
  41fc13:	cdq    
  41fc14:	jno    0x41fc04
  41fc16:	fsub   DWORD PTR [edi+0x30ac74e]
  41fc1c:	dec    edx
  41fc1d:	ss xchg ebx,eax
  41fc1f:	in     al,0x7
  41fc21:	inc    eax
  41fc22:	dec    edi
  41fc23:	mov    BYTE PTR [esi-0x61],ch
  41fc26:	aaa    
  41fc27:	popa   
  41fc28:	rol    BYTE PTR [ecx+0x0],0x25
  41fc2c:	popf   
  41fc2d:	in     al,dx
  41fc2e:	adc    al,0x4
  41fc30:	ss (bad) 
  41fc32:	mov    dh,0x25
  41fc34:	inc    esi
  41fc35:	stc    
  41fc36:	cmp    BYTE PTR [ebp-0x11c9d5fb],0x77
  41fc3d:	pusha  
  41fc3e:	fimul  DWORD PTR [esi]
  41fc40:	jae    0x41fc35
  41fc42:	push   ss
  41fc43:	sub    BYTE PTR cs:[ebx+0x76be2a37],0x58
  41fc4b:	mov    dl,0x85
  41fc4d:	add    DWORD PTR ds:0xa04f1694,esi
  41fc53:	push   edx
  41fc54:	jl     0x41fbdc
  41fc56:	cdq    
  41fc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc58:	(bad)  
  41fc59:	daa    
  41fc5a:	ins    BYTE PTR es:[edi],dx
  41fc5b:	out    0x60,eax
  41fc5d:	dec    edi
  41fc5e:	fmul   DWORD PTR [eax+0x23]
  41fc61:	aad    0x9c
  41fc63:	pop    ss
  41fc64:	inc    ebp
  41fc65:	je     0x41fca7
  41fc67:	push   0x7a
  41fc69:	dec    ecx
  41fc6a:	outs   dx,BYTE PTR ds:[esi]
  41fc6b:	add    DWORD PTR [edi],ecx
  41fc6d:	sbb    DWORD PTR [edx],0xffffffb8
  41fc70:	shr    DWORD PTR [eax],0x41
  41fc73:	stos   DWORD PTR es:[edi],eax
  41fc74:	(bad)  
  41fc75:	outs   dx,BYTE PTR ds:[esi]
  41fc76:	lds    esp,FWORD PTR [ebp+0x1c6ff0b]
  41fc7c:	les    esp,FWORD PTR [ebx]
  41fc7e:	lods   eax,DWORD PTR ds:[esi]
  41fc7f:	inc    ebp
  41fc80:	pop    edx
  41fc81:	int3   
  41fc82:	cmp    ebx,DWORD PTR [eax-0x74]
  41fc85:	mov    ch,0xb6
  41fc87:	dec    ebx
  41fc88:	pushf  
  41fc89:	js     0x41fc8f
  41fc8b:	arpl   WORD PTR [eax+0x6],ax
  41fc8e:	pop    edx
  41fc8f:	jmp    0x41fc8f
  41fc91:	add    esi,ebp
  41fc93:	ins    BYTE PTR es:[edi],dx
  41fc94:	push   ecx
  41fc95:	test   BYTE PTR [eax],bl
  41fc97:	cli    
  41fc98:	mov    cl,0x4
  41fc9a:	das    
  41fc9b:	pop    esi
  41fc9c:	jl     0x41fc45
  41fc9e:	mov    fs,WORD PTR [ebx-0x49]
  41fca1:	ja     0x41fd18
  41fca3:	lods   al,BYTE PTR ds:[esi]
  41fca4:	cs add dh,ah
  41fca7:	mov    al,0xd8
  41fca9:	xor    BYTE PTR [edx-0x79714703],ah
  41fcaf:	mov    al,0x71
  41fcb1:	mov    al,0x31
  41fcb3:	std    
  41fcb4:	xlat   BYTE PTR ds:[ebx]
  41fcb5:	cld    
  41fcb6:	stos   BYTE PTR es:[edi],al
  41fcb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb8:	call   0x37d0:0x54211e6b
  41fcbf:	scas   eax,DWORD PTR es:[edi]
  41fcc0:	xchg   edx,eax
  41fcc1:	fbstp  TBYTE PTR [esi+0x69]
  41fcc4:	mov    esi,0x74cdb10b
  41fcc9:	mov    esp,0x56b1fffa
  41fcce:	int3   
  41fccf:	sub    eax,0xe1a2b389
  41fcd4:	lods   eax,DWORD PTR ds:[esi]
  41fcd5:	std    
  41fcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd7:	mov    WORD PTR [ecx+eax*8-0x23c3b12b],fs
  41fcde:	pop    ebx
  41fcdf:	adc    BYTE PTR [edx+0x5df14bf7],dh
  41fce5:	(bad)  
  41fce6:	mov    edi,gs
  41fce8:	push   esi
  41fce9:	jae    0x41fca9
  41fceb:	jge    0x41fc6d
  41fced:	push   cs
  41fcee:	ret    0xf02f
  41fcf1:	push   eax
  41fcf2:	mov    esp,0x8b821681
  41fcf7:	add    cl,dl
  41fcf9:	cdq    
  41fcfa:	mov    ah,0xd8
  41fcfc:	rcl    ebx,1
  41fcfe:	ds push ebp
  41fd00:	cmp    DWORD PTR [esi],esi
  41fd02:	adc    bl,BYTE PTR [ecx]
  41fd04:	sbb    esp,DWORD PTR [ecx-0x7db5549c]
  41fd0a:	shr    DWORD PTR [esi],cl
  41fd0c:	or     DWORD PTR [edi-0x2247d339],ebx
  41fd12:	adc    eax,0xe960b679
  41fd17:	pop    es
  41fd18:	mov    ebx,0xbc361e81
  41fd1d:	out    dx,eax
  41fd1e:	les    edx,FWORD PTR [edi]
  41fd20:	(bad)  
  41fd21:	sub    eax,0x237cfffc
  41fd26:	test   BYTE PTR [ecx-0x44],al
  41fd29:	add    BYTE PTR [esi-0x36],cl
  41fd2c:	push   edx
  41fd2d:	sub    BYTE PTR [edx+0x45a01c51],bh
  41fd33:	test   dh,0x31
  41fd36:	inc    ebp
  41fd37:	jecxz  0x41fd13
  41fd39:	dec    ebp
  41fd3a:	push   ecx
  41fd3b:	pop    ecx
  41fd3c:	jecxz  0x41fd1f
  41fd3e:	test   al,0x61
  41fd40:	rcl    DWORD PTR cs:[eax],0xb4
  41fd44:	ret    0xa737
  41fd47:	mov    dh,0x31
  41fd49:	sti    
  41fd4a:	in     eax,0xd4
  41fd4c:	call   0xb5927470
  41fd51:	mov    esp,0x4904678c
  41fd56:	jnp    0x41fd40
  41fd58:	push   es
  41fd59:	leave  
  41fd5a:	adc    al,0x9
  41fd5c:	outs   dx,DWORD PTR ds:[esi]
  41fd5d:	retf   
  41fd5e:	adc    al,0xca
  41fd60:	jmp    0xd2a1:0x4c7cabfa
  41fd67:	push   0x64986c75
  41fd6c:	loop   0x41fcf3
  41fd6e:	xlat   BYTE PTR ds:[ebx]
  41fd6f:	jg     0x41fda1
  41fd71:	xchg   DWORD PTR [eax+0x7a],ebx
  41fd74:	xchg   ebx,eax
  41fd75:	add    BYTE PTR [ebx],ch
  41fd77:	adc    eax,0xfca6fddb
  41fd7c:	sbb    al,0x42
  41fd7e:	das    
  41fd7f:	sub    ch,BYTE PTR [edx+ecx*8]
  41fd82:	enter  0x94e1,0x2
  41fd86:	jg     0x41fda6
  41fd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd89:	stos   DWORD PTR es:[edi],eax
  41fd8a:	test   eax,0xdcc862a1
  41fd8f:	(bad)  
  41fd90:	pop    ebx
  41fd91:	iret   
  41fd92:	std    
  41fd93:	mov    esp,0x13620e4a
  41fd98:	cs call 0xb90bd199
  41fd9e:	test   al,0x6b
  41fda0:	and    dh,0xe7
  41fda3:	xchg   ebp,eax
  41fda4:	retf   
  41fda5:	ror    dl,1
  41fda7:	hlt    
  41fda8:	ret    0xaacb
  41fdab:	dec    ebx
  41fdac:	inc    ebx
  41fdad:	ret    
  41fdae:	mov    al,ds:0xce677aa
  41fdb3:	mov    edx,0x874
	...
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	pop    edx
  41fdce:	sub    DWORD PTR [esi+0x1784a49],ebp
  41fdd4:	add    BYTE PTR [ebp+0x3b000003],ch
  41fdda:	aad    0x1c
  41fddc:	daa    
  41fddd:	int3   
  41fdde:	stc    
  41fddf:	pusha  
  41fde0:	div    BYTE PTR [esi]
  41fde2:	fdivr  st,st(6)
  41fde4:	pop    ebp
  41fde5:	aas    
  41fde6:	sub    al,0x5d
  41fde8:	and    BYTE PTR [edi+0x3f],ch
  41fdeb:	outs   dx,DWORD PTR ds:[esi]
  41fdec:	sbb    al,0x5e
  41fdee:	ret    0x23ed
  41fdf1:	inc    esi
  41fdf2:	fisub  WORD PTR [ecx+0x3]
  41fdf5:	mov    ebp,DWORD PTR [ebp+0x67331ebf]
  41fdfb:	and    DWORD PTR [ecx+0x58],esp
  41fdfe:	std    
  41fdff:	pop    eax
  41fe00:	mov    ebp,0x94842072
  41fe05:	sbb    al,0xde
  41fe07:	jmp    0xe5646965
  41fe0c:	fbld   TBYTE PTR [eax]
  41fe0e:	mov    ebp,0x1f217e9a
  41fe13:	ja     0x41fdd6
  41fe15:	mov    ecx,0xad1a85f7
  41fe1a:	lods   al,BYTE PTR ds:[esi]
  41fe1b:	mov    esp,0x34d73720
  41fe20:	mov    ecx,0x935fa0e7
  41fe25:	je     0x41fe64
  41fe27:	(bad)  
  41fe28:	sbb    BYTE PTR [ecx+0x4f],ch
  41fe2b:	cli    
  41fe2c:	jecxz  0x41fe65
  41fe2e:	jmp    FWORD PTR [ebp+0x31]
  41fe31:	xchg   ecx,eax
  41fe32:	jge    0x41fdcc
  41fe34:	aam    0x57
  41fe36:	push   eax
  41fe37:	cmp    al,0x18
  41fe39:	mov    edx,0xd8cfd805
  41fe3e:	pushf  
  41fe3f:	repz jecxz 0x41fe0d
  41fe42:	fiadd  DWORD PTR ds:[eax]
  41fe45:	adc    BYTE PTR [edx-0x5b54c141],dl
  41fe4b:	and    bl,BYTE PTR [edx+0x45]
  41fe4e:	add    al,0x17
  41fe50:	call   0x697cf3ac
  41fe55:	jecxz  0x41fe99
  41fe57:	gs aaa 
  41fe59:	xchg   ecx,eax
  41fe5a:	push   ebp
  41fe5b:	mov    eax,0x1cd92c33
  41fe60:	cdq    
  41fe61:	jns    0x41fe90
  41fe63:	pop    ds
  41fe64:	jge    0x41fe50
  41fe66:	fs je  0x41fe8d
  41fe69:	out    dx,eax
  41fe6a:	xchg   edi,eax
  41fe6b:	add    BYTE PTR [edx+0x20],dh
  41fe6e:	mov    al,ds:0xd348b2f3
  41fe73:	out    dx,al
  41fe74:	and    ecx,esp
  41fe76:	test   eax,0x14fb66f5
  41fe7b:	sub    BYTE PTR [eax+edi*2-0x4824b3f],0xc1
  41fe83:	xchg   cl,ah
  41fe85:	push   edx
  41fe86:	in     al,0xe0
  41fe88:	fisub  WORD PTR [ebx]
  41fe8a:	add    dl,al
  41fe8c:	fbstp  TBYTE PTR [esi]
  41fe8e:	mov    al,ds:0xe6742dec
  41fe93:	ret    
  41fe94:	je     0x41fe63
  41fe96:	sbb    edx,DWORD PTR [edi-0x1ee0c65e]
  41fe9c:	sti    
  41fe9d:	sub    BYTE PTR [esi+eiz*1-0x49],dl
  41fea1:	inc    edx
  41fea2:	sub    ch,al
  41fea4:	jmp    0x4f020932
  41fea9:	jbe    0x41fec4
  41feab:	retf   
  41feac:	inc    ebp
  41fead:	clc    
  41feae:	ja     0x41fed1
  41feb0:	aad    0xc6
  41feb2:	mov    edi,0xeaee9c0b
  41feb7:	dec    ecx
  41feb8:	cmc    
  41feb9:	sub    esi,edi
  41febb:	mov    BYTE PTR [ebx-0x37],bl
  41febe:	cld    
  41febf:	dec    esp
  41fec0:	sahf   
  41fec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec2:	xchg   ebx,eax
  41fec3:	xor    BYTE PTR [ecx],dh
  41fec5:	out    dx,al
  41fec6:	sbb    BYTE PTR [bp+si-0x3a],dl
  41feca:	iret   
  41fecb:	les    edx,FWORD PTR [ebp+0x47bffc7f]
  41fed1:	jl     0x41ff13
  41fed3:	repnz es (bad) 
  41fed6:	jmp    0x7708ba0e
  41fedb:	xchg   edi,eax
  41fedc:	or     al,0x5b
  41fede:	icebp  
  41fedf:	scas   al,BYTE PTR es:[edi]
  41fee0:	xchg   esp,eax
  41fee1:	ret    
  41fee2:	xchg   edx,eax
  41fee3:	(bad)  
  41fee4:	xor    dh,al
  41fee6:	push   ebp
  41fee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee8:	sub    eax,0x33b9b32c
  41feed:	repnz out 0x21,eax
  41fef0:	push   es
  41fef1:	inc    esp
  41fef2:	cmp    BYTE PTR [ecx+ebp*4-0x50],0xe5
  41fef7:	call   0xcd98a3d
  41fefc:	xchg   edi,eax
  41fefd:	push   edi
  41fefe:	and    dl,BYTE PTR [edi-0x55]
  41ff01:	push   ds
  41ff02:	and    esi,ebp
  41ff04:	pushf  
  41ff05:	xor    DWORD PTR [edx-0x35a17ea3],esi
  41ff0b:	push   eax
  41ff0c:	or     DWORD PTR [edi+0x4be018eb],eax
  41ff12:	push   0x78967dbf
  41ff17:	or     cl,ah
  41ff19:	sbb    edi,DWORD PTR [ecx+0x5b]
  41ff1c:	cmp    dl,BYTE PTR [ecx-0x3b168c7e]
  41ff22:	xor    eax,0xf41db3b3
  41ff27:	pop    es
  41ff28:	lds    esp,FWORD PTR ds:0x36cbda6b
  41ff2e:	mul    DWORD PTR ds:0x1fb8e0e
  41ff34:	mov    bl,0xf
  41ff36:	adc    al,0x72
  41ff38:	cmp    al,bh
  41ff3a:	(bad)  
  41ff3b:	xor    eax,0xc0a106d1
  41ff40:	push   eax
  41ff41:	enter  0x52a5,0x47
  41ff45:	xor    BYTE PTR fs:[esi],al
  41ff48:	mov    eax,0x345db042
  41ff4d:	in     al,0x82
  41ff4f:	fistp  QWORD PTR [esi]
  41ff51:	ret    0x59dd
  41ff54:	aad    0xb9
  41ff56:	push   esi
  41ff57:	jnp    0x41ff1d
  41ff59:	pop    esp
  41ff5a:	and    BYTE PTR [ebp-0x2cf68cec],ch
  41ff60:	std    
  41ff61:	sbb    ecx,DWORD PTR [edx]
  41ff63:	mov    edi,0x630c3cf2
  41ff68:	cmp    ebx,esp
  41ff6a:	ins    BYTE PTR es:[edi],dx
  41ff6b:	lods   eax,DWORD PTR ds:[esi]
  41ff6c:	into   
  41ff6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff6e:	jge    0x41ff91
  41ff70:	ss call 0x847f:0xde27b034
  41ff78:	mov    ch,0xb9
  41ff7a:	push   esp
  41ff7b:	frstor [eax]
  41ff7d:	sbb    BYTE PTR [esi-0x16a3f4ef],cl
  41ff83:	pop    edx
  41ff84:	mov    al,0xc4
  41ff86:	lock inc esi
  41ff88:	adc    al,al
  41ff8a:	vmovupd xmm5,xmm2
  41ff8e:	sub    bh,cl
  41ff90:	cmp    eax,0x7fad6cc7
  41ff95:	push   ecx
  41ff96:	ja     0x41fff6
  41ff98:	out    dx,eax
  41ff99:	in     al,0xf7
  41ff9b:	lock sbb DWORD PTR [esi+ecx*1-0x3de9c360],ecx
  41ffa3:	dec    edi
  41ffa4:	mov    ecx,0xc7ae4c7d
  41ffa9:	icebp  
  41ffaa:	bound  esi,QWORD PTR [eax-0x7a0e517b]
  41ffb0:	mov    esi,0xc168e32d
  41ffb5:	inc    esp
  41ffb6:	shl    DWORD PTR [esi+0x19],cl
  41ffb9:	pop    ds
  41ffba:	adc    eax,0x5bbecb38
  41ffbf:	call   0xe5a8:0x4dfcd525
  41ffc6:	mov    ah,0xf1
  41ffc8:	aas    
  41ffc9:	inc    esp
  41ffca:	adc    bl,cl
  41ffcc:	mov    edi,0xb85dc578
  41ffd1:	jae    0x41ffd8
  41ffd3:	cld    
  41ffd4:	adc    esp,DWORD PTR [ecx]
  41ffd6:	or     BYTE PTR [ecx],cl
  41ffd8:	mov    bh,0x0
  41ffda:	(bad)  ds:0x2d91d30f
  41ffe0:	pop    edi
  41ffe1:	mov    WORD PTR [edi],gs
  41ffe3:	dec    edx
  41ffe4:	push   edi
  41ffe5:	in     al,dx
  41ffe6:	arpl   WORD PTR [edx-0x42cc77c9],si
  41ffec:	xchg   BYTE PTR [esi],dl
  41ffee:	cwde   
  41ffef:	mov    DWORD PTR [edi-0x23],ecx
  41fff2:	call   DWORD PTR ds:0x8b5c9425
  41fff8:	int    0xaa
  41fffa:	xchg   esi,eax
  41fffb:	sti    
  41fffc:	out    0x29,eax
  41fffe:	iret   
  41ffff:	jmp    0x41ff93
  420001:	xor    ebx,DWORD PTR [ebx+0x5971b1d2]
  420007:	aas    
  420008:	pop    esi
  420009:	and    BYTE PTR [esi],bh
  42000b:	adc    BYTE PTR [esi-0x48],dh
  42000e:	outs   dx,BYTE PTR ds:[esi]
  42000f:	lds    eax,FWORD PTR [ecx-0x36]
  420012:	and    eax,0x5ab843f8
  420017:	mov    dl,ch
  420019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42001a:	push   ds
  42001b:	xor    ch,BYTE PTR [ecx]
  42001d:	callw  0x9f1c
  420021:	gs out 0x68,al
  420024:	pop    esi
  420025:	arpl   WORD PTR [eax],dx
  420027:	test   BYTE PTR [esi],dl
  420029:	test   al,0xfe
  42002b:	pop    ds
  42002c:	ss push ds
  42002e:	aaa    
  42002f:	pop    edx
  420030:	jmp    0xd1d0:0x24a02aca
  420037:	dec    edi
  420038:	sbb    dh,BYTE PTR [edi-0x14]
  42003b:	and    al,0xb5
  42003d:	push   esp
  42003e:	inc    cl
  420040:	(bad)  
  420041:	pop    esp
  420042:	(bad)  
  420043:	push   ss
  420044:	push   eax
  420045:	xlat   BYTE PTR ds:[ebx]
  420046:	sar    DWORD PTR [edi-0x639185fe],1
  42004c:	sbb    esi,DWORD PTR [edi-0x79]
  42004f:	inc    ebx
  420050:	jecxz  0x420066
  420052:	enter  0x6909,0x3b
  420056:	je     0x42008a
  420058:	or     eax,0xc172ae42
  42005d:	pop    ecx
  42005e:	add    ah,BYTE PTR [edx+0x5e1f9434]
  420064:	cmp    DWORD PTR [eax-0x4d3eb22e],ecx
  42006a:	inc    ax
  42006c:	push   ebp
  42006d:	mov    al,ds:0x23621e2a
  420072:	test   al,0x68
  420074:	imul   ebp,DWORD PTR [eax+0x5417199a],0x25
  42007b:	add    al,0x19
  42007d:	adc    esi,esi
  42007f:	sub    cl,BYTE PTR [ecx+0x66]
  420082:	dec    edx
  420083:	pop    ebx
  420084:	arpl   WORD PTR gs:[ebp+ebp*4-0x1afca8d8],si
  42008c:	imul   esp,eax,0x7e
  42008f:	sub    al,0x45
  420091:	pop    ecx
  420092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420093:	ror    DWORD PTR [esi+0x1e2fc134],1
  420099:	frstor [ebx+0x68b81c77]
  42009f:	xlat   BYTE PTR ds:[ebx]
  4200a0:	pop    eax
  4200a1:	fmul   DWORD PTR [edi+edx*4-0x4e]
  4200a5:	adc    al,0xa2
  4200a7:	dec    esi
  4200a8:	add    esi,edi
  4200aa:	mov    DWORD PTR [ebp-0x3d],ecx
  4200ad:	(bad)  
  4200ae:	call   0x842249a6
  4200b3:	sbb    BYTE PTR [eax+0x15acb371],bl
  4200b9:	jb     0x42009b
  4200bb:	inc    ebx
  4200bc:	push   ss
  4200bd:	or     al,0x72
  4200bf:	int    0xbf
  4200c1:	es popa 
  4200c3:	pop    ecx
  4200c4:	and    BYTE PTR [edi+0x1b],bh
  4200c7:	push   DWORD PTR [ecx-0x5829d277]
  4200cd:	inc    al
  4200cf:	pop    esp
  4200d0:	cmp    eax,0x8f399314
  4200d5:	retf   
  4200d6:	sbb    BYTE PTR ds:[edi-0x7f4c9724],al
  4200dd:	cmp    al,0xc9
  4200df:	inc    edi
  4200e0:	and    al,0xde
  4200e2:	scas   al,BYTE PTR es:[edi]
  4200e3:	sub    BYTE PTR [edi-0x6e2254f1],dl
  4200e9:	cmp    BYTE PTR [esi+0xf],dh
  4200ec:	adc    ecx,esp
  4200ee:	add    eax,0x99500a3b
  4200f3:	data16 and al,0x46
  4200f6:	mov    al,ds:0x80bd6537
  4200fb:	add    ebp,edx
  4200fd:	sub    bl,cl
  4200ff:	das    
  420100:	or     eax,0xc9942461
  420105:	inc    edx
  420106:	out    0x40,eax
  420108:	inc    ecx
  420109:	lods   eax,DWORD PTR ds:[esi]
  42010a:	cli    
  42010b:	push   ebp
  42010c:	mov    ebp,0x5b405cf8
  420111:	push   esi
  420112:	loop   0x420143
  420114:	cmp    DWORD PTR [ebx-0x3],ecx
  420117:	call   0xa9d7:0xdc287856
  42011e:	sbb    BYTE PTR [edi+0x3d],bl
  420121:	jb     0x42013f
  420123:	xchg   edx,eax
  420124:	fisub  DWORD PTR [edi+0xd4908b]
  42012a:	xchg   DWORD PTR [ecx],esi
  42012c:	mov    esi,0xaa5f6baa
  420131:	mov    dl,0x11
  420133:	mov    esp,0xe858fc38
  420138:	cmp    BYTE PTR [ebp+ecx*4+0x1a955d8c],ah
  42013f:	cmp    edx,DWORD PTR [ebx-0x51cccd61]
  420145:	add    BYTE PTR [ecx+ebx*4],al
  420148:	ins    BYTE PTR es:[edi],dx
  420149:	inc    esi
  42014a:	xchg   esp,eax
  42014b:	sbb    eax,DWORD PTR [esi-0x5a]
  42014e:	pop    edx
  42014f:	sub    BYTE PTR [edx],ah
  420151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420152:	test   al,0x95
  420154:	outs   dx,DWORD PTR ds:[esi]
  420155:	mov    eax,0xefc954e9
  42015a:	or     ebx,DWORD PTR [edx+0x5cc5068a]
  420160:	(bad)  
  420161:	icebp  
  420162:	xchg   ecx,eax
  420163:	je     0x420171
  420165:	js     0x1662697f
  42016b:	or     dh,BYTE PTR [ebx]
  42016d:	leave  
  42016e:	mov    ecx,0xa5ff4f57
  420173:	arpl   WORD PTR [ebx-0xa75ed12],bx
  420179:	and    eax,0xbe9a6a80
  42017e:	fnsave [esi+0x4a]
  420181:	sti    
  420182:	popf   
  420183:	test   eax,0x8b9d
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x7aa1:0x7836e732
  42019f:	mov    esi,0x17bf7a9
  4201a4:	add    BYTE PTR [ebp+0x54000003],ch
  4201aa:	test   al,0xe9
  4201ac:	call   0x8d47:0xa93bc0de
  4201b3:	rcr    ecx,1
  4201b5:	out    0xe5,eax
  4201b7:	or     eax,edi
  4201b9:	jmp    0x9192:0x8c12898
  4201c0:	fs push eax
  4201c2:	add    BYTE PTR [ebp-0xa],dh
  4201c5:	retf   0x5dd9
  4201c8:	xchg   ebp,eax
  4201c9:	lahf   
  4201ca:	mov    cl,0x22
  4201cc:	popa   
  4201cd:	ror    BYTE PTR [edi],cl
  4201cf:	jae    0x420216
  4201d1:	dec    esp
  4201d2:	xchg   esi,eax
  4201d3:	cmp    al,0x2
  4201d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d6:	xchg   ah,bh
  4201d8:	pop    ebp
  4201d9:	mov    ebp,0xc35e32a1
  4201de:	lea    edi,[edx-0x7ce71f3]
  4201e4:	push   esp
  4201e5:	js     0x420191
  4201e7:	pop    esi
  4201e8:	cmc    
  4201e9:	rcl    BYTE PTR [ebp-0x7d44c160],0x58
  4201f0:	jle    0x42022e
  4201f2:	sar    BYTE PTR [eax+0x36fc67c],0x1c
  4201f9:	or     eax,0xf6a84d16
  4201fe:	bound  esp,QWORD PTR [edi+edi*4-0x19]
  420202:	dec    esi
  420203:	ror    BYTE PTR [edx],cl
  420205:	jnp    0x420235
  420207:	xor    edx,DWORD PTR [esi+0x1a]
  42020a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42020b:	sahf   
  42020c:	mov    esp,0x6308321b
  420212:	pop    edi
  420213:	adc    BYTE PTR [ecx],bh
  420215:	push   esp
  420216:	sar    BYTE PTR [edi-0x494d4f12],0xc8
  42021d:	sub    al,0xe3
  42021f:	dec    ebp
  420220:	(bad)  
  420221:	test   al,0x97
  420223:	aad    0x20
  420225:	mov    ecx,cs
  420227:	je     0x420248
  420229:	sub    cl,BYTE PTR [eax+0x4f]
  42022c:	inc    ebp
  42022d:	sahf   
  42022e:	fxch   st(0)
  420230:	dec    esi
  420231:	fild   WORD PTR [edx-0x24b53906]
  420237:	pop    ss
  420238:	loop   0x4201e3
  42023a:	jb     0x42023f
  42023c:	adc    eax,0xa577c17e
  420241:	std    
  420242:	sbb    DWORD PTR [edi],esp
  420244:	adc    cl,BYTE PTR [edx]
  420246:	mov    esi,0x73bdbfac
  42024b:	push   cs
  42024c:	mov    ebx,0x5f8bbc34
  420251:	out    0x7c,eax
  420253:	jge    0x4202c2
  420255:	cwde   
  420256:	ds imul ecx,eax,0x71
  42025a:	fist   WORD PTR cs:[ecx+0xd15e3d8]
  420261:	stos   BYTE PTR es:[edi],al
  420262:	adc    dh,BYTE PTR [ebp-0x4a]
  420265:	stos   BYTE PTR es:[edi],al
  420266:	cs ja  0x4201ff
  420269:	call   FWORD PTR [eax-0x7356c4de]
  42026f:	into   
  420270:	mov    ecx,0xe48282b6
  420275:	in     eax,dx
  420276:	adc    cl,BYTE PTR [bx-0x4a54]
  42027b:	xchg   ecx,eax
  42027c:	es out 0xd1,al
  42027f:	and    ch,BYTE PTR [edx-0x7d3ce7bb]
  420285:	xchg   esp,eax
  420286:	nop
  420287:	pop    esp
  420288:	retf   
  420289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42028a:	push   esi
  42028b:	jb     0x420234
  42028d:	(bad)  
  42028e:	jmp    0xf30f:0xf8f74fbf
  420295:	pop    ebx
  420296:	and    eax,0xe06d710c
  42029b:	xchg   ecx,eax
  42029c:	cwde   
  42029d:	inc    ecx
  42029e:	shl    DWORD PTR [ebx-0x5cf9d42f],1
  4202a4:	or     DWORD PTR [ebp+0x7d],ebx
  4202a7:	cli    
  4202a8:	test   eax,0x553a97c6
  4202ad:	xor    bh,dh
  4202af:	sub    eax,0xfa2124d5
  4202b4:	add    BYTE PTR [edi],0xfe
  4202b7:	push   es
  4202b8:	mov    DWORD PTR [ecx-0x3aeed1dc],ebx
  4202be:	ins    DWORD PTR es:[di],dx
  4202c0:	fstp   QWORD PTR [ebx]
  4202c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202c3:	ficomp DWORD PTR [ebx]
  4202c5:	jmp    0x420266
  4202c7:	out    dx,eax
  4202c8:	or     BYTE PTR [ebp-0x3b],al
  4202cb:	leave  
  4202cc:	xor    DWORD PTR [esi+edx*1-0x63],0xe2bc906f
  4202d4:	mov    ebx,DWORD PTR ds:0x2a346650
  4202da:	data16 jo 0x42031e
  4202dd:	popf   
  4202de:	and    al,0x48
  4202e0:	call   0xc3a56b83
  4202e5:	jae    0x4202ff
  4202e7:	out    dx,eax
  4202e8:	jbe    0x42031e
  4202ea:	adc    BYTE PTR [edx-0x3f],ch
  4202ed:	pusha  
  4202ee:	sbb    DWORD PTR [eax],0x7
  4202f1:	sar    ah,0x42
  4202f4:	or     al,0xa9
  4202f6:	aaa    
  4202f7:	arpl   WORD PTR [ebx+0xb],bx
  4202fa:	imul   ebp,edx,0x3c
  4202fd:	cmp    al,BYTE PTR [eax+0x2c]
  420300:	ins    DWORD PTR es:[edi],dx
  420301:	pop    es
  420302:	jb     0x4202ab
  420304:	jb     0x420329
  420306:	repnz push edx
  420308:	(bad)  
  420309:	sub    esp,DWORD PTR [ebx+esi*8-0x8]
  42030d:	jae    0x420292
  42030f:	pop    ebx
  420310:	mov    dl,0x22
  420312:	cwde   
  420313:	shr    BYTE PTR [ebp-0x53bc415],cl
  420319:	mov    dl,al
  42031b:	jo     0x4202e4
  42031d:	loope  0x420350
  42031f:	push   cs
  420320:	loop   0x42036a
  420322:	test   eax,0x47a5a20
  420327:	push   0x75c65861
  42032c:	mov    WORD PTR [ebx+0x5a],es
  42032f:	mov    dl,0xdf
  420331:	cld    
  420332:	xchg   esi,eax
  420333:	and    dl,dl
  420335:	cmp    eax,0xee1bd224
  42033a:	jb     0x42038a
  42033c:	cmp    edi,ebx
  42033e:	xchg   esp,eax
  42033f:	adc    BYTE PTR [esi-0x27b40252],cl
  420345:	imul   edx,esp,0xffffffd5
  420348:	pop    ds
  420349:	int3   
  42034a:	fs out 0xf7,al
  42034d:	jl     0x420320
  42034f:	jg     0x4203c7
  420351:	dec    ecx
  420352:	(bad)
  420355:	jmp    0x420338
  420357:	xchg   esp,eax
  420358:	mov    ds:0xd089f6e6,eax
  42035d:	inc    ecx
  42035e:	dec    ebp
  42035f:	mov    DWORD PTR [ebx+0x61],ebp
  420362:	stos   BYTE PTR es:[edi],al
  420363:	mov    ecx,ebx
  420365:	sti    
  420366:	ds scas al,BYTE PTR es:[edi]
  420368:	pop    DWORD PTR [ecx+0x62]
  42036b:	rcr    BYTE PTR [edi],1
  42036d:	(bad)  
  42036e:	xchg   ebx,eax
  42036f:	inc    edi
  420370:	jecxz  0x4203e8
  420372:	stos   DWORD PTR es:[edi],eax
  420373:	cld    
  420374:	mov    gs,WORD PTR [ecx-0x3a]
  420377:	xchg   edx,eax
  420378:	sahf   
  420379:	pop    ss
  42037a:	in     eax,dx
  42037b:	rcr    dl,1
  42037d:	icebp  
  42037e:	mov    ch,0x87
  420380:	sbb    eax,0x1d1115a3
  420385:	loop   0x42036b
  420387:	iret   
  420388:	fcom   QWORD PTR fs:[ecx+0x4]
  42038c:	imul   esi,DWORD PTR [edi-0x13],0x3b991a75
  420393:	cli    
  420394:	adc    al,bh
  420396:	test   al,0xca
  420398:	jg     0x4203d6
  42039a:	or     bh,BYTE PTR [eax+0x2e]
  42039d:	pushf  
  42039e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42039f:	nop
  4203a0:	rol    BYTE PTR [esi-0x24b017ad],0xa4
  4203a7:	lods   al,BYTE PTR ds:[esi]
  4203a8:	(bad)  
  4203a9:	mov    esi,DWORD PTR [ecx+0x6698e103]
  4203af:	jo     0x42040a
  4203b1:	pavgb  mm0,QWORD PTR [eax]
  4203b4:	dec    ebp
  4203b5:	add    bh,BYTE PTR [ebx+0x6a]
  4203b8:	jbe    0x4203d2
  4203ba:	shr    BYTE PTR [ebp+0x74a04a4],1
  4203c0:	imul   esp,DWORD PTR [edx+0x3cc35567],0xe31aebb4
  4203ca:	call   0xb1c6:0xc3e97023
  4203d1:	f2xm1  
  4203d3:	inc    esi
  4203d4:	xchg   esi,eax
  4203d5:	(bad)  
  4203d6:	or     ch,BYTE PTR ds:0xe4bf4eb0
  4203dc:	hlt    
  4203dd:	test   al,0xbe
  4203df:	xor    al,al
  4203e1:	dec    esi
  4203e2:	pop    ecx
  4203e3:	sar    dh,1
  4203e5:	div    ah
  4203e7:	(bad)  [edx-0x6fb814b9]
  4203ed:	xchg   ecx,eax
  4203ee:	fs in  eax,0xd4
  4203f1:	dec    esi
  4203f2:	cmp    DWORD PTR [ebx],esp
  4203f4:	pop    es
  4203f5:	cmp    ebp,DWORD PTR [edi+0xd1b5404]
  4203fb:	adc    BYTE PTR [ecx],ah
  4203fd:	jmp    0xaa2dd7b0
  420402:	inc    ebx
  420403:	lods   al,BYTE PTR ds:[esi]
  420404:	pop    ebx
  420405:	cmp    eax,0xed39ae51
  42040a:	pop    ss
  42040b:	adc    ah,bh
  42040d:	cmp    BYTE PTR [ebp-0x61],cl
  420410:	sar    esi,cl
  420412:	and    edx,DWORD PTR [esi]
  420414:	jge    0x420404
  420416:	lods   al,BYTE PTR ds:[esi]
  420417:	jmp    0x420429
  420419:	dec    esi
  42041a:	js     0x420471
  42041c:	push   ecx
  42041d:	cs ret 0xc6eb
  420421:	div    esp
  420423:	mov    al,0x22
  420425:	je     0x420448
  420427:	xor    al,0x90
  420429:	xor    eax,0x44253db0
  42042e:	cli    
  42042f:	mov    esi,0x7a3a1950
  420434:	xor    bh,cl
  420436:	sahf   
  420437:	lods   al,BYTE PTR ds:[esi]
  420438:	fwait
  420439:	shl    BYTE PTR [ebp+0x4e5dced9],1
  42043f:	pop    eax
  420440:	(bad)
  420443:	xchg   ebp,eax
  420444:	push   0xfffffff0
  420446:	xor    eax,eax
  420448:	jle    0x420493
  42044a:	(bad)  
  42044b:	cmp    edi,DWORD PTR [ecx-0x74]
  42044e:	pop    ebx
  42044f:	inc    edx
  420450:	data16 loope 0x420414
  420453:	xchg   BYTE PTR ds:0x8c3c5141,ah
  420459:	inc    BYTE PTR [esi]
  42045b:	lods   al,BYTE PTR ds:[esi]
  42045c:	xlat   BYTE PTR ds:[ebx]
  42045d:	cmp    esi,esi
  42045f:	aaa    
  420460:	inc    edx
  420461:	xor    BYTE PTR [edx-0xb],ah
  420464:	(bad)  
  420465:	or     eax,ecx
  420467:	idiv   BYTE PTR [esi-0xcd53b3f]
  42046d:	xlat   BYTE PTR ds:[ebx]
  42046e:	inc    ebx
  42046f:	mov    esi,0x706fd3bf
  420474:	sub    esp,DWORD PTR [edx-0x28c99ec2]
  42047a:	add    ch,BYTE PTR [edi]
  42047c:	sub    BYTE PTR ds:0xa1d1ba91,bh
  420483:	dec    edx
  420484:	cmp    ebx,DWORD PTR [ebx]
  420486:	jecxz  0x420503
  420488:	sbb    dh,BYTE PTR [ebx]
  42048a:	lock jae 0x1d269b5
  420491:	sub    BYTE PTR ds:0x77adb8ee,0xb0
  420498:	ins    DWORD PTR es:[edi],dx
  420499:	call   0xf95e:0xacca99f6
  4204a0:	mov    cl,0xcc
  4204a2:	jmp    0xa73:0x23d2d31f
  4204a9:	pusha  
  4204aa:	dec    esp
  4204ab:	jl     0x4204a1
  4204ad:	xchg   ebx,eax
  4204ae:	in     al,dx
  4204af:	push   edx
  4204b0:	lods   al,BYTE PTR ds:[esi]
  4204b1:	xor    DWORD PTR [eax-0x6fd25979],edx
  4204b7:	outs   dx,DWORD PTR ds:[esi]
  4204b8:	test   DWORD PTR [ecx-0x8025622],esp
  4204be:	div    DWORD PTR [eax]
  4204c0:	inc    ebp
  4204c1:	add    eax,0x51a4628b
  4204c6:	push   0x89bba951
  4204cb:	xchg   BYTE PTR [eax+ecx*8+0x11],dl
  4204cf:	test   BYTE PTR [esp+edx*4-0x1754f8a3],ah
  4204d6:	mov    cl,0x13
  4204d8:	cs iret 
  4204da:	inc    BYTE PTR [ebp+0x49]
  4204dd:	fmulp  st(1),st
  4204df:	inc    eax
  4204e0:	fdiv   DWORD PTR [edi+0x7ee4094c]
  4204e6:	int    0x1e
  4204e8:	mov    bl,0xb4
  4204ea:	out    0x57,al
  4204ec:	mov    al,0xa0
  4204ee:	test   dh,al
  4204f0:	sbb    eax,0xb4022275
  4204f5:	fnstsw WORD PTR [eax+0x5a77c2b2]
  4204fb:	mov    edi,0xb9fb553a
  420500:	sbb    eax,0xea388357
  420505:	jg     0x4204ce
  420507:	inc    ebp
  420508:	xor    al,0xc7
  42050a:	popa   
  42050b:	lods   eax,DWORD PTR ds:[esi]
  42050c:	sub    eax,0x225e7354
  420511:	adc    eax,0x75fea2d8
  420516:	in     al,dx
  420517:	jb     0x420522
  420519:	xchg   ecx,eax
  42051a:	jmp    0x4204af
  42051c:	daa    
  42051d:	dec    esp
  42051e:	xchg   ecx,eax
  42051f:	fwait
  420520:	rol    edi,0x43
  420523:	adc    ebp,0xcfbd06f
  420529:	xor    ch,cl
  42052b:	xor    al,0xc
  42052d:	outs   dx,DWORD PTR ds:[esi]
  42052e:	out    0x4a,eax
  420530:	stos   BYTE PTR es:[edi],al
  420531:	push   ebx
  420532:	test   eax,0x8ec43577
  420537:	mov    esi,0xe370396
  42053d:	mov    ebp,0xa403cefa
  420542:	xor    DWORD PTR [edi-0x2c],eax
  420545:	pop    ss
  420546:	sti    
  420547:	dec    esp
  420548:	push   ds
  420549:	lods   eax,DWORD PTR ds:[esi]
  42054a:	dec    ebp
  42054b:	sbb    al,0xa7
  42054d:	and    edx,ecx
  42054f:	fdiv   QWORD PTR [edx+0x2e279678]
  420555:	stc    
	...
  42055e:	add    BYTE PTR [eax],al
  420560:	add    BYTE PTR [eax-0x5020734d],dl
  420566:	call   ebx
  420568:	jmp    esp
  42056a:	and    dh,0xd4
  42056d:	push   edi
  42056e:	dec    eax
  42056f:	cmc    
  420570:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420572:	jg     0x420575
  420574:	add    BYTE PTR [ebp+0x61000003],ch
  42057a:	js     0x4205b4
  42057c:	inc    edi
  42057d:	adc    BYTE PTR fs:[eax+0x23d45b01],al
  420584:	stos   DWORD PTR es:[edi],eax
  420585:	test   eax,0x674d4b63
  42058a:	ins    BYTE PTR es:[edi],dx
  42058b:	ss scas eax,DWORD PTR es:[edi]
  42058d:	adc    DWORD PTR [esi+0x1a],0xc2caace8
  420594:	lock push ebp
  420596:	test   DWORD PTR [ebx+ecx*8-0x7c694bee],ebx
  42059d:	fyl2xp1 
  42059f:	push   esi
  4205a0:	push   edi
  4205a1:	cmp    esp,0xffffffdf
  4205a4:	mov    edx,0x1a1d4f04
  4205a9:	inc    ebp
  4205aa:	pushf  
  4205ab:	mov    BYTE PTR [ebp-0x64],dl
  4205ae:	jmp    0x3f398135
  4205b3:	pop    edi
  4205b4:	mov    ds:0x3db77463,al
  4205b9:	dec    edi
  4205ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205bb:	and    al,0xd0
  4205bd:	xchg   esp,eax
  4205be:	pop    ecx
  4205bf:	ss call 0x71cb0042
  4205c5:	repz aam 0xdb
  4205c8:	ss push cs
  4205ca:	(bad)  
  4205cb:	jle    0x42059c
  4205cd:	mov    eax,0x17fe7060
  4205d2:	(bad)  
  4205d3:	push   ebp
  4205d4:	jne    0x42059a
  4205d6:	jb     0x4205f0
  4205d8:	std    
  4205d9:	ja     0x42063c
  4205db:	xor    ah,BYTE PTR [edx+0x4b]
  4205de:	aam    0xe4
  4205e0:	(bad)  
  4205e1:	sar    BYTE PTR [ebx-0x4ee6a7a8],cl
  4205e7:	test   DWORD PTR [ecx+0x7eb548f5],0x53b2c697
  4205f1:	dec    esp
  4205f2:	cmp    ch,bh
  4205f4:	xor    dl,BYTE PTR [esi]
  4205f6:	cmp    al,0x43
  4205f8:	scas   eax,DWORD PTR es:[edi]
  4205f9:	test   DWORD PTR [edx-0x5b],edi
  4205fc:	xor    BYTE PTR [ecx-0x44b9727b],dl
  420602:	test   eax,0x5b0c0b4d
  420607:	fimul  DWORD PTR ds:0xbc54f4b9
  42060d:	sbb    ebx,edi
  42060f:	lea    edi,[edi+0x72]
  420612:	sub    DWORD PTR [esi-0x76a7a2eb],0x2d
  420619:	inc    ecx
  42061a:	loopne 0x4205be
  42061c:	and    eax,0x1e454b0b
  420621:	imul   esi,DWORD PTR [edx],0xc7ef3d24
  420627:	add    al,0x48
  420629:	cwde   
  42062a:	fwait
  42062b:	xchg   esp,eax
  42062c:	pusha  
  42062d:	sub    bh,BYTE PTR gs:[eax+0x4a]
  420631:	fimul  DWORD PTR [edx]
  420633:	cmp    BYTE PTR [ebx],al
  420635:	xchg   esp,eax
  420636:	mov    cl,0xd4
  420638:	daa    
  420639:	pop    ds
  42063a:	into   
  42063b:	loop   0x42062d
  42063d:	xchg   edi,eax
  42063e:	mov    edi,0x771b42cf
  420643:	dec    edi
  420644:	mov    cs,ebx
  420646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420647:	push   esp
  420648:	pop    edx
  420649:	cmp    ebp,esi
  42064b:	mov    BYTE PTR [edx+0x1],al
  42064e:	int3   
  42064f:	xchg   esi,eax
  420650:	add    ch,BYTE PTR [ebx-0x534693d1]
  420656:	lahf   
  420657:	leave  
  420658:	xchg   esi,eax
  420659:	ret    0xefe
  42065c:	or     DWORD PTR [edx],eax
  42065e:	jo     0x4206dd
  420660:	pop    es
  420661:	mov    al,0x55
  420663:	xchg   edi,eax
  420664:	mov    bl,0x91
  420666:	jb     0x42068f
  420668:	ds xchg edx,eax
  42066a:	adc    eax,0x122e0ba3
  42066f:	fldenv [ebx]
  420671:	sahf   
  420672:	cld    
  420673:	outs   dx,BYTE PTR ds:[esi]
  420674:	pop    ebp
  420675:	and    edx,DWORD PTR [edi+0x6e]
  420678:	pusha  
  420679:	xor    BYTE PTR [esi-0x40],bl
  42067c:	jge    0x420653
  42067e:	aam    0x40
  420680:	gs jmp 0x42066a
  420683:	iret   
  420684:	sbb    DWORD PTR [eax],esi
  420686:	inc    edx
  420687:	ins    DWORD PTR es:[edi],dx
  420688:	lds    eax,FWORD PTR [ebx+0x2]
  42068b:	sub    edi,edx
  42068d:	into   
  42068e:	dec    edx
  42068f:	or     al,0xb6
  420691:	aaa    
  420692:	mov    ebx,DWORD PTR ds:0xc11e08b7
  420698:	hlt    
  420699:	iret   
  42069a:	cdq    
  42069b:	add    cl,ch
  42069d:	pop    ds
  42069e:	sbb    al,0x5d
  4206a0:	(bad)  
  4206a1:	sbb    al,0xf2
  4206a3:	lds    edi,FWORD PTR [esi+0x56e202e0]
  4206a9:	xchg   DWORD PTR [edx],ecx
  4206ab:	in     al,0xf9
  4206ad:	bound  ebx,QWORD PTR [esi]
  4206af:	(bad)  
  4206b0:	call   0x3b3f59ba
  4206b5:	xchg   ch,ch
  4206b7:	inc    edi
  4206b8:	sti    
  4206b9:	fs or  esp,0xfffffff2
  4206bd:	daa    
  4206be:	xor    dl,BYTE PTR [ebx+0x3a]
  4206c1:	push   es
  4206c2:	(bad)  
  4206c4:	xchg   edi,eax
  4206c5:	jge    0x420688
  4206c7:	dec    esp
  4206c8:	pop    ebp
  4206c9:	pop    eax
  4206ca:	and    eax,0x26631338
  4206cf:	dec    edi
  4206d0:	xor    al,0x3c
  4206d2:	sub    bl,bh
  4206d4:	pop    eax
  4206d5:	ds mov edi,0x1e5b2895
  4206db:	jl     0x4206cb
  4206dd:	push   0x75
  4206df:	hlt    
  4206e0:	sbb    al,0x9a
  4206e2:	mov    DWORD PTR [ecx-0x5595182c],esi
  4206e8:	mov    eax,DWORD PTR [edx]
  4206ea:	jmp    FWORD PTR ds:0x7e65b0ea
  4206f0:	dec    edi
  4206f1:	fadd   DWORD PTR ds:0x22979b1b
  4206f7:	push   0x4c250671
  4206fc:	ret    0x8fbb
  4206ff:	les    eax,FWORD PTR [edx-0x773d33bb]
  420705:	shl    BYTE PTR [esi+edx*4+0x74],cl
  420709:	or     eax,0x19c1a12a
  42070e:	icebp  
  42070f:	out    0x9b,al
  420711:	(bad)  
  420712:	(bad)  
  420713:	jle    0x4206fd
  420715:	jo     0x4206a5
  420717:	shr    bl,0xa7
  42071a:	int    0xfc
  42071c:	xchg   edx,eax
  42071d:	adc    edx,DWORD PTR [ebx]
  42071f:	sub    eax,0xf1bf808b
  420724:	pop    ebx
  420725:	ja     0x420719
  420727:	cli    
  420728:	pop    edx
  420729:	sahf   
  42072a:	and    ch,bh
  42072c:	loope  0x4206d4
  42072e:	and    al,0x4
  420730:	jne    0x4206e6
  420732:	dec    ebx
  420733:	int    0x3e
  420735:	shr    BYTE PTR [ebp+0x5b],0x78
  420739:	ss sbb eax,0x12a4926e
  42073f:	mov    eax,0xa5b267fe
  420744:	mov    ecx,0xdc7c25c0
  420749:	pop    ebx
  42074a:	pop    ecx
  42074b:	sub    al,0x27
  42074d:	pop    ebp
  42074e:	add    al,0x71
  420750:	adc    eax,0x548215fd
  420755:	stc    
  420756:	aam    0xc6
  420758:	push   ebp
  420759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42075a:	xchg   esi,eax
  42075b:	cmc    
  42075c:	repnz dec edx
  42075e:	or     eax,0x19b7cf2a
  420763:	pop    edi
  420764:	popf   
  420765:	push   ss
  420766:	test   al,0x3a
  420768:	mov    eax,0x1b9e18ea
  42076d:	sub    eax,0x8c4ec926
  420772:	mov    ah,0x8b
  420774:	and    BYTE PTR [edi+0x3f634921],bl
  42077a:	adc    dl,BYTE PTR [eax-0x43]
  42077d:	int    0x85
  42077f:	in     al,0xb
  420781:	in     eax,dx
  420782:	jne    0x420719
  420784:	dec    edi
  420785:	pop    ecx
  420786:	sub    eax,0x115c9f5e
  42078b:	dec    esi
  42078c:	aam    0x98
  42078e:	nop
  42078f:	add    eax,0x81d7805
  420794:	cmp    BYTE PTR [eax-0x55],dl
  420797:	sub    eax,0xc168d29f
  42079c:	std    
  42079d:	and    DWORD PTR [edi],esi
  42079f:	mov    bh,0xcf
  4207a1:	call   FWORD PTR [eax+0x1245252b]
  4207a7:	mov    ah,BYTE PTR [ebp-0x30]
  4207aa:	ja     0x420819
  4207ac:	rcr    al,cl
  4207ae:	rcr    BYTE PTR [ebp-0x58],0xd6
  4207b2:	test   al,0xc
  4207b4:	jbe    0x42077b
  4207b6:	push   0x11
  4207b8:	inc    ecx
  4207b9:	mov    ah,0x96
  4207bb:	repnz loop 0x4207a6
  4207be:	mov    WORD PTR [eax+0xc],cs
  4207c1:	push   esp
  4207c2:	stc    
  4207c3:	or     eax,0x4730b902
  4207c8:	fistp  WORD PTR [edx-0x5]
  4207cb:	push   ds
  4207cc:	in     eax,dx
  4207cd:	arpl   WORD PTR [esi+0x1],si
  4207d0:	push   edi
  4207d1:	inc    eax
  4207d2:	sbb    ebp,0xfffffff7
  4207d5:	stos   DWORD PTR es:[edi],eax
  4207d6:	and    bh,0x44
  4207d9:	jae    0x420846
  4207db:	and    esi,ebp
  4207dd:	repnz fisubr WORD PTR [esi+ebx*1]
  4207e1:	(bad)  
  4207e3:	aas    
  4207e4:	shl    DWORD PTR [edx],1
  4207e6:	pop    ebp
  4207e7:	stos   DWORD PTR es:[edi],eax
  4207e8:	adc    al,0x90
  4207ea:	mov    ?,WORD PTR [edx+ebx*1+0x3a]
  4207ee:	jbe    0x42081c
  4207f0:	dec    eax
  4207f1:	xor    eax,0xd4f2f881
  4207f6:	cdq    
  4207f7:	test   edx,0xd48e4553
  4207fd:	xor    al,0xd2
  4207ff:	mov    edx,0x66476193
  420804:	clc    
  420805:	outs   dx,BYTE PTR ds:[esi]
  420806:	sar    DWORD PTR ss:[eax+edx*1+0x417eb085],cl
  42080e:	mov    edx,0x97170489
  420813:	aam    0x49
  420815:	pop    es
  420816:	adc    al,dh
  420818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420819:	leave  
  42081a:	mov    eax,0x37fd8141
  42081f:	xor    al,0x7f
  420821:	cdq    
  420822:	out    dx,al
  420823:	jnp    0x42086a
  420825:	icebp  
  420826:	dec    esp
  420827:	vmread DWORD PTR [ecx],ecx
  42082a:	les    edx,FWORD PTR [edx+0x3a]
  42082d:	(bad)  
  42082e:	enter  0x40dd,0xeb
  420832:	lods   eax,DWORD PTR ds:[esi]
  420833:	cli    
  420834:	xor    al,0xf8
  420836:	je     0x420814
  420838:	mov    ecx,DWORD PTR [eax]
  42083a:	cmp    al,0x4c
  42083c:	and    ebx,DWORD PTR [eax+0x36]
  42083f:	nop
  420840:	lods   eax,DWORD PTR ds:[esi]
  420841:	rep stos DWORD PTR es:[edi],eax
  420843:	sub    al,0xa7
  420845:	mov    al,0xcb
  420847:	push   ebx
  420848:	and    eax,0x9aa4dad5
  42084d:	loop   0x42088c
  42084f:	inc    edi
  420850:	add    al,0xc9
  420852:	dec    esp
  420853:	ja     0x420870
  420855:	jno    0x42087f
  420857:	sbb    BYTE PTR [edi],al
  420859:	push   ecx
  42085a:	data16 test BYTE PTR ds:0x80800ed3,dh
  420861:	scas   eax,DWORD PTR es:[edi]
  420862:	fmul   QWORD PTR [ebp-0xd3c1de3]
  420868:	or     eax,0xcb154b60
  42086d:	jae    0x420809
  42086f:	mov    edx,0x7dbcd5c
  420874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420875:	popf   
  420876:	repz mov ebx,0x4709ec28
  42087c:	ror    BYTE PTR cs:[esp+eiz*4],0xf9
  420881:	sub    dl,BYTE PTR [edi-0x26]
  420884:	mov    dl,0x47
  420886:	sub    bl,BYTE PTR [ecx]
  420888:	or     BYTE PTR [eax+edx*8-0x50],cl
  42088c:	and    edi,DWORD PTR [esi-0x2ab91101]
  420892:	inc    ecx
  420893:	cdq    
  420894:	ja     0x420832
  420896:	mov    edi,0xe36427bb
  42089b:	adc    bh,BYTE PTR [esi+0x5d]
  42089e:	or     al,0xe
  4208a0:	in     eax,dx
  4208a1:	jns    0x4208a2
  4208a3:	xchg   esp,ebp
  4208a5:	dec    ecx
  4208a6:	mov    dl,0xce
  4208a8:	mov    dh,0xee
  4208aa:	sub    al,BYTE PTR [eax+ebx*4]
  4208ad:	cmp    ebx,DWORD PTR [ecx-0x4c632df2]
  4208b3:	adc    al,0xd3
  4208b5:	bound  ecx,QWORD PTR [edi]
  4208b7:	cld    
  4208b8:	add    esi,ebx
  4208ba:	ins    BYTE PTR es:[edi],dx
  4208bb:	fmulp  st(7),st
  4208bd:	sbb    DWORD PTR [eax],0x1e
  4208c0:	jno    0x4208eb
  4208c2:	cmp    BYTE PTR [esi],bl
  4208c4:	push   eax
  4208c5:	and    eax,0x1e8747dd
  4208ca:	jecxz  0x4208e0
  4208cc:	fwait
  4208cd:	or     DWORD PTR [edi-0x461deab6],esp
  4208d3:	and    bl,BYTE PTR [ebx]
  4208d5:	mov    WORD PTR [ebp-0x3cd86c06],ds
  4208db:	inc    esp
  4208dc:	pop    ecx
  4208dd:	mov    esi,0xe638d2a4
  4208e2:	cwde   
  4208e3:	pop    ebx
  4208e4:	cmp    cl,BYTE PTR [ecx]
  4208e6:	push   ss
  4208e7:	mov    ah,0x7e
  4208e9:	pop    edi
  4208ea:	cmp    al,0x93
  4208ec:	mov    ds:0x169adbc4,al
  4208f1:	push   0x569d8d33
  4208f6:	cs fdivr st(4),st
  4208f9:	arpl   bp,di
  4208fb:	sahf   
  4208fc:	push   edi
  4208fd:	fsub   DWORD PTR [esi]
  4208ff:	rol    dh,cl
  420901:	adc    esp,DWORD PTR [ebx]
  420903:	jnp    0x420922
  420905:	pop    eax
  420906:	popa   
  420907:	mov    cl,0x62
  420909:	(bad)  [ebx]
  42090b:	pop    ebx
  42090c:	fbstp  TBYTE PTR [edx-0x666f1ced]
  420912:	out    dx,al
  420913:	pop    ss
  420914:	(bad)  
  420915:	les    eax,FWORD PTR [ecx-0x19]
  420918:	test   BYTE PTR [edx-0x34],al
  42091b:	ret    0x87a1
  42091e:	inc    esi
  42091f:	fs gs pop esi
  420922:	repnz jecxz 0x4208ec
  420925:	and    BYTE PTR [eax],al
	...
  42092f:	add    BYTE PTR [eax],al
  420931:	dec    ecx
  420932:	test   eax,0x9df89d38
  420937:	in     eax,dx
  420938:	std    
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x2058cb1d],0x51
  420942:	add    DWORD PTR [ecx],0x0
  420945:	lods   eax,DWORD PTR ds:[esi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    ch,ah
  42094a:	sahf   
  42094b:	inc    BYTE PTR [edx+0x10]
  42094e:	mov    ah,0xa7
  420950:	sub    eax,0xd2a900d2
  420955:	rol    DWORD PTR [esi*1+0x73db90ce],0xcf
  42095d:	jmp    FWORD PTR [ebx]
  42095f:	and    al,0x2e
  420961:	pop    es
  420962:	xchg   edx,eax
  420963:	sub    BYTE PTR [di],bh
  420966:	out    0xb3,al
  420968:	js     0x4209e6
  42096a:	pop    eax
  42096b:	sahf   
  42096c:	cmp    al,0xeb
  42096e:	dec    BYTE PTR [edx]
  420970:	cmp    al,0x60
  420972:	push   esi
  420973:	sub    cl,BYTE PTR [esp+ebx*4-0x51a5ca1f]
  42097a:	mov    eax,0xe9b4a9b9
  42097f:	sub    al,0x56
  420981:	jnp    0x420943
  420983:	xchg   ebx,eax
  420984:	jp     0x42092b
  420986:	and    esp,ebp
  420988:	jb     0x420964
  42098a:	xor    al,0xae
  42098c:	fs mov ah,0xe0
  42098f:	bswap  edx
  420991:	cld    
  420992:	cmp    eax,0xf971e921
  420997:	fneni(8087 only) 
  420999:	lock aam 0xc2
  42099c:	scas   eax,DWORD PTR es:[edi]
  42099d:	in     eax,0xe7
  42099f:	xchg   ebp,eax
  4209a0:	cmp    al,0x88
  4209a2:	cli    
  4209a3:	lods   eax,DWORD PTR ds:[esi]
  4209a4:	les    ebp,FWORD PTR [ecx+edi*2]
  4209a7:	add    eax,DWORD PTR [ecx]
  4209a9:	(bad)  
  4209ab:	dec    edx
  4209ac:	xor    ch,dh
  4209ae:	mov    ebp,0xc93092c1
  4209b3:	fdivr  QWORD PTR [edi-0x58b05492]
  4209b9:	out    dx,eax
  4209ba:	cld    
  4209bb:	xor    BYTE PTR [eax+edi*1],0x69
  4209bf:	dec    esi
  4209c0:	and    cl,BYTE PTR [ecx+0x532ec828]
  4209c6:	dec    eax
  4209c7:	xor    DWORD PTR [eax],eax
  4209c9:	pop    ss
  4209ca:	repz (bad) 
  4209cc:	in     eax,0x75
  4209ce:	jno    0x420a31
  4209d0:	(bad)  [edx+0x10]
  4209d3:	sbb    edi,DWORD PTR [eax]
  4209d5:	cwde   
  4209d6:	xchg   edi,eax
  4209d7:	jg     0x420a43
  4209d9:	and    bh,bl
  4209db:	adc    ebp,DWORD PTR [ecx+0x70]
  4209de:	xor    edx,DWORD PTR [esi]
  4209e0:	dec    ebp
  4209e1:	jmp    0x4674:0xf4a61597
  4209e8:	cmp    bl,al
  4209ea:	dec    ecx
  4209eb:	xor    ecx,DWORD PTR [ecx-0x2a]
  4209ee:	lahf   
  4209ef:	push   eax
  4209f0:	mov    BYTE PTR [ebp+edi*1+0x24e1cbe2],ch
  4209f7:	cli    
  4209f8:	test   eax,0xcc7abf92
  4209fd:	xor    eax,0x786a4b8b
  420a02:	test   eax,0x5a45f220
  420a07:	and    DWORD PTR [ebx+0x76],edx
  420a0a:	popa   
  420a0b:	rcr    BYTE PTR [ebx],1
  420a0d:	sbb    bl,BYTE PTR [eax-0x22]
  420a10:	mov    eax,ds:0xb9a2a379
  420a15:	adc    BYTE PTR [eax-0x7d],ah
  420a18:	ins    BYTE PTR es:[edi],dx
  420a19:	lahf   
  420a1a:	jns    0x4209c6
  420a1c:	jmp    0x420a31
  420a1e:	mov    eax,ds:0xd402221e
  420a23:	cwde   
  420a24:	fnsave [ecx-0x604f3bba]
  420a2a:	mov    al,ds:0xab1f3c0a
  420a2f:	push   ds
  420a30:	cwde   
  420a31:	dec    esp
  420a32:	jle    0x4209b4
  420a34:	inc    esi
  420a35:	mov    ds:0xca391359,eax
  420a3a:	pop    edx
  420a3b:	ds rcl dl,1
  420a3e:	adc    bl,BYTE PTR [esi*4+0x5ccce08b]
  420a45:	mov    eax,0x915632ac
  420a4a:	std    
  420a4b:	and    ebp,DWORD PTR [ebx-0x363f83b5]
  420a51:	add    bl,BYTE PTR [eax-0x1]
  420a54:	jle    0x420a82
  420a56:	ss or  dh,cl
  420a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5a:	nop
  420a5b:	cmp    al,0x8
  420a5d:	jecxz  0x4209fe
  420a5f:	adc    BYTE PTR ds:0x1c818cd8,bl
  420a65:	mov    ch,0xa0
  420a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a68:	jecxz  0x420a15
  420a6a:	pop    esp
  420a6b:	cld    
  420a6c:	fs cdq 
  420a6e:	cdq    
  420a6f:	xchg   ebp,eax
  420a70:	xor    DWORD PTR [edx+0x2f45825c],ebp
  420a76:	in     al,0x97
  420a78:	mov    al,ds:0x5413e8a4
  420a7d:	lds    edx,FWORD PTR [ebx]
  420a7f:	pop    ds
  420a80:	jmp    0x420b00
  420a82:	push   edi
  420a83:	icebp  
  420a84:	outs   dx,BYTE PTR ds:[esi]
  420a85:	cmp    eax,0xd67e343d
  420a8a:	stos   DWORD PTR es:[edi],eax
  420a8b:	aam    0xcf
  420a8d:	retf   0x5884
  420a90:	jno    0x420a37
  420a92:	mov    al,0xb4
  420a94:	jnp    0x420a52
  420a96:	and    edx,ebx
  420a98:	xlat   BYTE PTR ds:[ebx]
  420a99:	jo     0x420ab9
  420a9b:	test   BYTE PTR [ecx+0x648d36be],0xd0
  420aa2:	lods   al,BYTE PTR ds:[esi]
  420aa3:	jae    0x420ad3
  420aa5:	sar    DWORD PTR [edi+esi*4-0x61151c98],1
  420aac:	dec    BYTE PTR ds:0xc5febcfa
  420ab2:	int3   
  420ab3:	mov    edx,0x132e9745
  420ab8:	shl    DWORD PTR [ebp+0x7952285c],1
  420abe:	mov    eax,0x48c20498
  420ac3:	mov    esi,0x328eb7ad
  420ac8:	ror    BYTE PTR [esi+0x49],1
  420acb:	ins    BYTE PTR es:[edi],dx
  420acc:	adc    eax,0x4a2cee85
  420ad1:	pop    edx
  420ad2:	dec    eax
  420ad3:	mul    BYTE PTR [ecx]
  420ad5:	mov    cs,esi
  420ad7:	lods   al,BYTE PTR ds:[esi]
  420ad8:	sti    
  420ad9:	mov    cs,WORD PTR [ebx+ecx*2]
  420adc:	call   0xab6b:0xd83b86d4
  420ae3:	mov    BYTE PTR [ebp+0x1e761f9b],0xd8
  420aea:	cmp    BYTE PTR [ebx+ebp*4-0xc01e6a],ah
  420af1:	xlat   BYTE PTR ds:[ebx]
  420af2:	js     0x420b2a
  420af4:	in     eax,0xeb
  420af6:	push   es
  420af7:	mov    dh,0x28
  420af9:	sbb    dh,ah
  420afb:	mov    ds:0xde783edb,eax
  420b00:	xchg   esi,eax
  420b01:	push   edi
  420b02:	fcomip st,st(4)
  420b04:	pop    ecx
  420b05:	fidivr WORD PTR [edi]
  420b07:	mov    ah,BYTE PTR [eax]
  420b09:	in     eax,dx
  420b0a:	jns    0x420b3f
  420b0c:	jg     0x420afa
  420b0e:	and    BYTE PTR [edi+ecx*1-0x72],ch
  420b12:	and    BYTE PTR [esi],0xb2
  420b15:	xor    ch,BYTE PTR [ecx-0x2acd909d]
  420b1b:	mov    edi,0x808c41a9
  420b20:	pop    ds
  420b21:	ret    
  420b22:	pushf  
  420b23:	ds adc ebp,esi
  420b26:	push   esp
  420b27:	in     eax,0x15
  420b29:	es jae 0x420b62
  420b2c:	mov    edi,DWORD PTR [ecx]
  420b2e:	add    bh,BYTE PTR [edx-0xe]
  420b31:	push   es
  420b32:	xchg   esp,eax
  420b33:	std    
  420b34:	sbb    al,0xb8
  420b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b37:	(bad)  
  420b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b39:	lds    ebp,FWORD PTR [edi+esi*1-0x261fa7c]
  420b40:	iret   
  420b41:	lock enter 0xd5b9,0x38
  420b46:	xchg   esp,eax
  420b47:	outs   dx,BYTE PTR ds:[esi]
  420b48:	out    dx,eax
  420b49:	sub    al,0xa3
  420b4b:	push   edi
  420b4c:	add    bl,BYTE PTR [ecx-0x1967cc9c]
  420b52:	mov    ds:0x82032209,al
  420b57:	cmp    BYTE PTR [esi+eiz*4+0xd4c3762],0x8e
  420b5f:	mov    WORD PTR [esi+0x2dff4ed7],ss
  420b65:	mov    WORD PTR [edx+0x79dcbad7],fs
  420b6b:	cli    
  420b6c:	adc    eax,0x56cbf17e
  420b71:	jmp    0x420b08
  420b73:	lock pop esp
  420b75:	ins    BYTE PTR es:[edi],dx
  420b76:	out    0x26,al
  420b78:	pop    eax
  420b79:	retf   0xddad
  420b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b7d:	jmp    0x27c2:0xd43209e
  420b84:	and    eax,0xe9ce6f08
  420b89:	jg     0x420bb3
  420b8b:	and    al,0x84
  420b8d:	or     al,0x2f
  420b8f:	imul   esi,edx,0x211c6370
  420b95:	mov    ch,0x5e
  420b97:	xor    ecx,edi
  420b99:	fld    QWORD PTR [edx-0x63d54f3e]
  420b9f:	repz mov ds:0xa4b32dd2,al
  420ba5:	sub    BYTE PTR [ecx+0x16],ah
  420ba8:	imul   ebp,DWORD PTR ds:0x3365e6fa,0x21
  420baf:	add    DWORD PTR [ebx-0x923f665],ebx
  420bb5:	adc    cl,bl
  420bb7:	add    edx,esi
  420bb9:	ins    BYTE PTR es:[edi],dx
  420bba:	jne    0x420c28
  420bbc:	shl    DWORD PTR [eax-0x46],cl
  420bbf:	push   0x9f662e0c
  420bc4:	pushf  
  420bc5:	or     esi,eax
  420bc7:	or     al,0x8d
  420bc9:	js     0x420b63
  420bcb:	shr    BYTE PTR [ebp-0x65a73c35],0x1a
  420bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd3:	daa    
  420bd4:	loopne 0x420b6a
  420bd6:	test   DWORD PTR [edx-0x4b],edx
  420bd9:	mov    fs,WORD PTR [edx-0x7c]
  420bdc:	push   es
  420bdd:	xchg   ebx,eax
  420bde:	aam    0x8b
  420be0:	pop    es
  420be1:	cdq    
  420be2:	jp     0x420ba6
  420be4:	shr    BYTE PTR [ecx+0x700d9ed4],cl
  420bea:	ins    DWORD PTR es:[edi],dx
  420beb:	shl    DWORD PTR [edi-0x21],cl
  420bee:	push   edi
  420bef:	fdiv   st(6),st
  420bf1:	xchg   ebp,eax
  420bf2:	sub    bl,BYTE PTR [ecx]
  420bf4:	retf   
  420bf5:	addr16 dec edx
  420bf7:	sbb    al,0xd
  420bf9:	mov    ecx,0xdbc53fb7
  420bfe:	cmp    al,0x40
  420c00:	xchg   BYTE PTR [ebx],al
  420c02:	in     eax,0x76
  420c04:	adc    al,0x4
  420c06:	daa    
  420c07:	fs (bad) 
  420c09:	xlat   BYTE PTR ds:[ebx]
  420c0a:	in     al,0xab
  420c0c:	sub    al,0xd
  420c0e:	cwde   
  420c0f:	mov    ch,0x3c
  420c11:	ss sti 
  420c13:	cld    
  420c14:	xchg   bl,ch
  420c16:	arpl   WORD PTR [ebx],si
  420c18:	add    edi,0x21
  420c1b:	and    dl,al
  420c1d:	push   cs
  420c1e:	arpl   WORD PTR [ebx+0x72],cx
  420c21:	sub    DWORD PTR [edi+0x34b059c5],esp
  420c27:	fwait
  420c28:	sti    
  420c29:	mov    esi,edi
  420c2b:	test   BYTE PTR [edx-0x12],ah
  420c2e:	es cwde 
  420c30:	in     eax,dx
  420c31:	fstp   QWORD PTR [ecx+0x39264b36]
  420c37:	mov    edx,DWORD PTR [ebx]
  420c39:	mov    ch,0x21
  420c3b:	push   edx
  420c3c:	cmp    DWORD PTR [edx+ebp*8],esp
  420c3f:	std    
  420c40:	(bad)  
  420c42:	shl    eax,cl
  420c44:	mov    edi,0x9675445a
  420c49:	and    cl,0xff
  420c4c:	cmp    eax,0x28cb31dd
  420c51:	or     dl,BYTE PTR [edi-0x2b3e6154]
  420c57:	pop    esi
  420c58:	mov    eax,ds:0xe16179d3
  420c5d:	inc    edx
  420c5e:	and    al,0xc4
  420c60:	sbb    esp,DWORD PTR [ebx]
  420c62:	mov    al,0xf9
  420c64:	(bad)
  420c68:	inc    ebp
  420c69:	dec    bx
  420c6b:	ins    BYTE PTR es:[edi],dx
  420c6c:	dec    esi
  420c6d:	popf   
  420c6e:	cmp    DWORD PTR [eax-0x424f5a68],ebx
  420c74:	dec    edx
  420c75:	or     al,BYTE PTR [esi+0x44]
  420c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c79:	sub    ebx,esi
  420c7b:	push   esp
  420c7c:	push   ebp
  420c7d:	outs   dx,BYTE PTR ds:[esi]
  420c7e:	sbb    edx,DWORD PTR [edi-0x455f23bd]
  420c84:	add    dl,BYTE PTR [eax-0x1d]
  420c87:	push   esp
  420c88:	xchg   ecx,eax
  420c89:	push   ds
  420c8a:	add    bh,ah
  420c8c:	test   dl,ah
  420c8e:	dec    esi
  420c8f:	sbb    ebx,DWORD PTR [edi-0x57]
  420c92:	loop   0x420cb4
  420c94:	and    ah,BYTE PTR [ebx]
  420c96:	mov    ebx,0xb85df516
  420c9b:	inc    esp
  420c9c:	push   ebp
  420c9d:	pop    eax
  420c9e:	out    0xe6,eax
  420ca0:	jmp    0x420cf8
  420ca2:	frstor [edx-0x31254a5c]
  420ca8:	sbb    bl,bl
  420caa:	push   eax
  420cab:	test   al,0xe4
  420cad:	push   cs
  420cae:	out    0xd0,eax
  420cb0:	jl     0x420cae
  420cb2:	pop    es
  420cb3:	mul    BYTE PTR [esi+0x670317c1]
  420cb9:	leave  
  420cba:	dec    edi
  420cbb:	pop    esi
  420cbc:	mov    ah,0x63
  420cbe:	push   edi
  420cbf:	jp     0x420c43
  420cc1:	mov    ebx,0xd9a5e065
  420cc6:	inc    ecx
  420cc7:	mov    eax,0x58a430aa
  420ccc:	data16 jge 0x420c97
  420ccf:	adc    eax,0xcb1e79ff
  420cd4:	push   0xfffffff5
  420cd6:	push   edx
  420cd7:	inc    edx
  420cd8:	lods   eax,DWORD PTR ds:[esi]
  420cd9:	or     eax,0x9cc49e2
  420cde:	pop    esp
  420cdf:	push   ds
  420ce0:	pop    ebx
  420ce1:	sbb    eax,0x19fb881f
  420ce6:	outs   dx,DWORD PTR ds:[esi]
  420ce7:	dec    esp
  420ce8:	add    ebx,DWORD PTR [ebp+edi*1+0x21]
  420cec:	dec    edx
  420ced:	sub    BYTE PTR [edi+0x4200434f],cl
  420cf3:	xor    DWORD PTR [ebx+0x85],edx
	...
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	(bad)  
  420d0e:	mov    al,ss:0x186fe11
  420d14:	add    BYTE PTR [ebp-0x1dfffffd],ch
  420d1a:	es dec esp
  420d1c:	inc    ebx
  420d1d:	out    0x54,al
  420d1f:	inc    ecx
  420d20:	add    eax,DWORD PTR [ebx-0x562b5575]
  420d26:	xchg   ebx,eax
  420d27:	mov    al,0x4a
  420d29:	mov    ah,0x7f
  420d2b:	das    
  420d2c:	and    eax,0xf7dae373
  420d31:	jmp    0x420d7f
  420d33:	cwde   
  420d34:	(bad)  
  420d35:	mov    BYTE PTR [edx-0x3f3f69be],ah
  420d3b:	dec    ecx
  420d3c:	js     0x420da5
  420d3e:	cdq    
  420d3f:	mov    dl,BYTE PTR [edx+esi*8-0x390437af]
  420d46:	xlat   BYTE PTR ds:[ebx]
  420d47:	xchg   edx,eax
  420d48:	scas   al,BYTE PTR es:[edi]
  420d49:	xchg   edx,eax
  420d4a:	(bad)  
  420d4b:	push   ebp
  420d4c:	mov    cl,0x9a
  420d4e:	xchg   ebx,eax
  420d4f:	cmp    DWORD PTR [eax-0x523f438e],0x59a4c3af
  420d59:	ror    ecx,cl
  420d5b:	or     al,0x91
  420d5d:	mov    ds:0x36e85caf,eax
  420d62:	mov    WORD PTR [esp+ebp*8+0x4601195e],ds
  420d69:	xchg   ecx,eax
  420d6a:	add    al,0xfd
  420d6c:	stc    
  420d6d:	test   DWORD PTR [edx],ecx
  420d6f:	sbb    BYTE PTR [esi+0x281c68ec],0x5e
  420d76:	add    BYTE PTR [eax+0x2f007eee],ch
  420d7c:	add    al,BYTE PTR [edx]
  420d7e:	clc    
  420d7f:	dec    esi
  420d80:	and    DWORD PTR [eax-0x4b],edx
  420d83:	stos   DWORD PTR es:[edi],eax
  420d84:	cmp    dl,cl
  420d86:	sbb    dl,dh
  420d88:	mov    BYTE PTR [esi+0x5bc6e6cc],cl
  420d8e:	arpl   bx,si
  420d90:	pop    ss
  420d91:	cmp    al,bl
  420d93:	push   esi
  420d94:	mov    ah,0x99
  420d96:	cmp    BYTE PTR [esi],0x0
  420d99:	(bad)  
  420d9a:	fistp  DWORD PTR [edx+0x1fb1b850]
  420da0:	mov    ebx,0x321588ef
  420da5:	inc    esi
  420da6:	push   ecx
  420da7:	inc    ecx
  420da8:	mov    esp,0xdcae183
  420dad:	jne    0x420e0e
  420daf:	rcr    BYTE PTR [esi+0x6061e172],cl
  420db5:	pop    esp
  420db6:	outs   dx,BYTE PTR ds:[esi]
  420db7:	aas    
  420db8:	jmp    0x420d61
  420dba:	xor    dh,BYTE PTR [ebx+0x35]
  420dbd:	xchg   ebp,eax
  420dbe:	cld    
  420dbf:	push   esp
  420dc0:	pop    ebx
  420dc1:	or     al,0xad
  420dc3:	retf   0x8b90
  420dc6:	pop    es
  420dc7:	loop   0x420d5c
  420dc9:	add    ebx,ebp
  420dcb:	cli    
  420dcc:	inc    ebp
  420dcd:	(bad)  [ebx-0x56e0f752]
  420dd3:	ins    BYTE PTR es:[edi],dx
  420dd4:	in     al,0x76
  420dd6:	aaa    
  420dd7:	fcomp  QWORD PTR [esi]
  420dd9:	xor    DWORD PTR [ecx+ebx*8+0x1],ecx
  420ddd:	test   al,0x6a
  420ddf:	push   cs
  420de0:	repnz pop ss
  420de2:	sahf   
  420de3:	dec    cx
  420de5:	mov    dh,0x56
  420de7:	sbb    eax,0xed182773
  420dec:	mov    edx,0xeeb1348a
  420df1:	mov    edx,0x76adda58
  420df6:	jecxz  0x420e37
  420df8:	cli    
  420df9:	adc    BYTE PTR [edx-0x70206e3f],ah
  420dff:	fcomp  st(2)
  420e01:	fdivrp st(7),st
  420e03:	hlt    
  420e04:	shr    DWORD PTR [eax+0x30261abf],cl
  420e0a:	mov    ebp,0x64ba4bd2
  420e0f:	hlt    
  420e10:	xchg   ecx,eax
  420e11:	fdiv   QWORD PTR [eax]
  420e13:	cli    
  420e14:	mov    ds:0x8387a84e,al
  420e19:	xor    eax,0x8e53dd9d
  420e1f:	ins    DWORD PTR es:[edi],dx
  420e20:	arpl   WORD PTR [ebx+edi*8+0x47],sp
  420e24:	fcomp  QWORD PTR [ecx+0x32bc9acb]
  420e2a:	dec    edi
  420e2b:	das    
  420e2c:	and    al,0x6
  420e2e:	jne    0x420e9b
  420e30:	popa   
  420e31:	enter  0xfdaf,0x72
  420e35:	cmp    al,0x3c
  420e37:	pusha  
  420e38:	pmaddwd mm5,QWORD PTR [ebx]
  420e3b:	mov    WORD PTR [ebx+0x35],es
  420e3e:	xor    eax,0x14cb3529
  420e43:	push   0xdec825a3
  420e48:	push   cs
  420e49:	or     eax,0xd71cc75f
  420e4e:	in     al,0xd6
  420e50:	inc    ebx
  420e51:	enter  0x1b63,0x35
  420e55:	xchg   DWORD PTR [edx],edi
  420e57:	jno    0x420e17
  420e59:	jge    0x420eb6
  420e5b:	and    BYTE PTR [ebx],0x38
  420e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e5f:	jae    0x420ea3
  420e61:	lahf   
  420e62:	sbb    dl,ah
  420e64:	add    ch,dl
  420e66:	arpl   WORD PTR [ebp-0x50],cx
  420e69:	mov    al,0x42
  420e6b:	daa    
  420e6c:	mov    ecx,0xe8e45c33
  420e71:	mov    ah,0x4a
  420e73:	mov    ds:0x24fe7dc,al
  420e78:	out    dx,al
  420e79:	icebp  
  420e7a:	push   esi
  420e7b:	stos   BYTE PTR es:[edi],al
  420e7c:	push   eax
  420e7d:	stos   BYTE PTR es:[edi],al
  420e7e:	lods   eax,DWORD PTR ds:[esi]
  420e7f:	mov    ch,0x7c
  420e81:	push   edx
  420e82:	loopne 0x420ea3
  420e84:	gs das 
  420e86:	out    dx,eax
  420e87:	sub    BYTE PTR ds:0x2e91b15c,dh
  420e8d:	loope  0x420f01
  420e8f:	adc    edi,esi
  420e91:	push   edx
  420e92:	int3   
  420e93:	mov    ds:0xa67dd8b0,al
  420e98:	hlt    
  420e99:	cwde   
  420e9a:	mov    ebx,DWORD PTR [edx+0x6b]
  420e9d:	dec    esi
  420e9e:	pop    ss
  420e9f:	repnz xor DWORD PTR [esi+0x2c],edx
  420ea3:	add    eax,0xee86852
  420ea8:	xchg   esi,eax
  420ea9:	jg     0x420e9a
  420eab:	sub    eax,0xe639fbfd
  420eb0:	xor    DWORD PTR [edx-0x79026ae9],ebx
  420eb6:	mov    dl,0xf4
  420eb8:	mov    al,ds:0x43241f91
  420ebd:	add    DWORD PTR [eax-0x1ea0e3ff],edi
  420ec3:	mov    ds:0x88e5dbee,al
  420ec8:	pop    es
  420ec9:	aaa    
  420eca:	loope  0x420f30
  420ecc:	retf   0xe7a3
  420ecf:	mov    DWORD PTR [eax-0x60f2c3f0],ecx
  420ed5:	sbb    ch,BYTE PTR [ebx+0x3a154ba]
  420edb:	retf   0x4c78
  420ede:	fist   WORD PTR [eax]
  420ee0:	mov    ch,al
  420ee2:	sbb    eax,0xb29575a8
  420ee7:	ja     0x420ee0
  420ee9:	adc    al,0x99
  420eeb:	mov    cl,0x5c
  420eed:	pusha  
  420eee:	xchg   edi,eax
  420eef:	xchg   ecx,eax
  420ef0:	jno    0x420f4e
  420ef2:	bound  ecx,QWORD PTR [ecx]
  420ef4:	arpl   WORD PTR [edx-0x496cd80d],sp
  420efa:	mov    ah,0x7f
  420efc:	push   ds
  420efd:	mov    esi,ebp
  420eff:	mov    dl,0x98
  420f01:	aam    0x80
  420f03:	inc    eax
  420f04:	inc    esp
  420f05:	(bad)  
  420f06:	jmp    0x2740:0x75ceb4e5
  420f0d:	pop    esi
  420f0e:	cmp    eax,0xd3702dcf
  420f13:	fdiv   DWORD PTR [edx+0x7786c208]
  420f19:	push   esi
  420f1a:	jae    0x420f30
  420f1c:	(bad)  
  420f1d:	addr16 clc 
  420f1f:	push   ss
  420f20:	nop
  420f21:	adc    BYTE PTR [esp+ebx*2+0x395c066],dh
  420f28:	cmc    
  420f29:	test   DWORD PTR [eax],ecx
  420f2b:	mov    WORD PTR [eax+0x1142c3f1],cs
  420f31:	xchg   esi,eax
  420f32:	or     esi,DWORD PTR [ebp+0x25]
  420f35:	inc    ecx
  420f36:	fbld   TBYTE PTR [esi-0x1d5af0ab]
  420f3c:	cli    
  420f3d:	into   
  420f3e:	mov    ecx,DWORD PTR [eax]
  420f40:	out    0x7d,eax
  420f42:	into   
  420f43:	mov    ch,0xcc
  420f45:	pop    es
  420f46:	or     eax,0xc62e97be
  420f4b:	push   0xbdb1fc06
  420f50:	xor    bh,BYTE PTR [edx+0x64c76883]
  420f56:	push   ebx
  420f57:	adc    dl,ah
  420f59:	repz xchg esp,eax
  420f5b:	ja     0x420f1c
  420f5d:	scas   eax,DWORD PTR es:[edi]
  420f5e:	push   0x850edf27
  420f63:	in     al,dx
  420f64:	sub    eax,0x857653c
  420f69:	mov    edi,DWORD PTR [ecx+0x59]
  420f6c:	ror    BYTE PTR [eax+0x116f0b16],1
  420f72:	hlt    
  420f73:	mov    DWORD PTR [esi],0xabb9139c
  420f79:	addr16 out 0xc5,al
  420f7c:	and    ebx,ecx
  420f7e:	mov    esp,0xedac565e
  420f83:	add    al,0x91
  420f85:	inc    esp
  420f86:	ins    BYTE PTR es:[edi],dx
  420f87:	cmp    eax,0xf4f5ed4b
  420f8c:	dec    esi
  420f8d:	xchg   esi,eax
  420f8e:	add    BYTE PTR [ebx],ch
  420f90:	loopne 0x420f25
  420f92:	ret    
  420f93:	cmp    bl,ch
  420f95:	pop    ebx
  420f96:	pop    edx
  420f97:	dec    esi
  420f98:	popa   
  420f99:	in     al,dx
  420f9a:	cmc    
  420f9b:	push   esi
  420f9c:	nop
  420f9d:	pop    edi
  420f9e:	js     0x420fb2
  420fa0:	and    al,BYTE PTR [ebx+edx*1+0x5859a40a]
  420fa7:	test   dh,0xf8
  420faa:	gs dec ebx
  420fac:	rcl    BYTE PTR [ebx-0xcd35cb4],0x28
  420fb3:	rol    ebx,cl
  420fb5:	not    ah
  420fb7:	fwait
  420fb8:	aad    0x44
  420fba:	adc    al,dl
  420fbc:	adc    DWORD PTR [edi],esp
  420fbe:	sub    BYTE PTR [ebp+eax*1+0x79af3e95],dl
  420fc5:	test   eax,0xfe0831e8
  420fca:	cdq    
  420fcb:	aaa    
  420fcc:	cdq    
  420fcd:	mov    ch,0x21
  420fcf:	(bad)  
  420fd0:	xlat   BYTE PTR ds:[ebx]
  420fd1:	out    dx,eax
  420fd2:	mov    al,ds:0x17601236
  420fd7:	jns    0x421057
  420fd9:	sub    bl,bh
  420fdb:	gs repz icebp 
  420fde:	and    eax,0x6dcaadf8
  420fe3:	into   
  420fe4:	jge    0x420f9b
  420fe6:	fistp  WORD PTR [edi-0x757c72]
  420fec:	inc    edi
  420fed:	ret    
  420fee:	cli    
  420fef:	mov    WORD PTR [ecx],?
  420ff1:	pop    ebx
  420ff2:	fsub   st,st(3)
  420ff4:	test   DWORD PTR [edx+0x296e7690],ebx
  420ffa:	ficomp WORD PTR [ebp-0x47]
  420ffd:	call   0x73c3:0x96933ec0
  421004:	add    dl,BYTE PTR [ecx+eiz*2]
  421007:	mov    esi,0x8b3d925e
  42100c:	add    dh,ah
  42100e:	es mov bh,0xd8
  421011:	in     al,dx
  421012:	lods   eax,DWORD PTR ds:[esi]
  421013:	add    al,0x8a
  421015:	loop   0x421065
  421017:	cli    
  421018:	mov    eax,ds:0x3856346a
  42101d:	mov    al,0x3c
  42101f:	dec    esi
  421020:	(bad)  
  421021:	(bad)  
  421022:	xchg   edx,eax
  421023:	inc    edi
  421024:	scas   eax,DWORD PTR es:[edi]
  421025:	pop    edx
  421026:	and    DWORD PTR [ebx+0x59],esi
  421029:	add    al,0x3c
  42102b:	and    ah,ch
  42102d:	sub    ebx,esi
  42102f:	sub    esp,eax
  421031:	dec    edx
  421032:	push   esp
  421033:	fistp  DWORD PTR [ebx+0x7be5c918]
  421039:	and    ecx,edi
  42103b:	adc    eax,ecx
  42103d:	inc    ebp
  42103e:	mov    dh,BYTE PTR ds:0xa57434a
  421044:	adc    DWORD PTR [ecx+0x28],edx
  421047:	push   es
  421048:	leave  
  421049:	sub    ch,BYTE PTR [edx]
  42104b:	and    al,0xfe
  42104d:	push   esi
  42104e:	pop    ebx
  42104f:	mov    edi,0x8549c169
  421054:	xor    bh,BYTE PTR [edi-0xe]
  421057:	push   cs
  421058:	pop    ebx
  421059:	ins    DWORD PTR es:[edi],dx
  42105a:	lds    esi,FWORD PTR [ecx+0x4cb9973d]
  421060:	xor    ah,bh
  421062:	inc    edi
  421063:	sub    al,BYTE PTR [esi-0x4cd5e22]
  421069:	pop    eax
  42106a:	mov    bh,0x8e
  42106c:	sti    
  42106d:	pop    esp
  42106e:	adc    edi,DWORD PTR [ecx]
  421070:	inc    ebx
  421071:	pop    esi
  421072:	iret   
  421073:	out    dx,al
  421074:	pop    ebx
  421075:	push   ecx
  421076:	sbb    DWORD PTR [ebx+0x42],ebx
  421079:	das    
  42107a:	or     dl,BYTE PTR [eax]
  42107c:	jbe    0x4210e0
  42107e:	jns    0x42105e
  421080:	jae    0x4210a0
  421082:	inc    esi
  421083:	psubd  mm4,mm0
  421086:	jmp    0x8bcd0f15
  42108b:	jb     0x42106b
  42108d:	inc    esp
  42108e:	jbe    0x421080
  421090:	push   edi
  421091:	jle    0x4210b4
  421093:	in     eax,0x7a
  421095:	test   eax,0xb33567bd
  42109a:	(bad)  
  42109b:	adc    eax,0x6a609e65
  4210a0:	adc    eax,0x301977d0
  4210a5:	ins    BYTE PTR es:[edi],dx
  4210a6:	xchg   ecx,eax
  4210a7:	pop    ecx
  4210a8:	cmp    BYTE PTR [ebx+0x74b634cf],al
  4210ae:	xchg   esi,ebp
  4210b0:	pop    ecx
  4210b1:	dec    eax
  4210b2:	jnp    0x421036
  4210b4:	mov    al,ds:0xcedcfe22
  4210b9:	push   eax
  4210ba:	inc    ebp
  4210bb:	mov    edi,DWORD PTR cs:[esi+0x6]
  4210bf:	or     al,0x31
  4210c1:	dec    ecx
  4210c2:	fisub  DWORD PTR [eax+esi*8+0x22]
	...
  4210ce:	add    BYTE PTR [eax],al
  4210d0:	add    BYTE PTR [edx+0x70],cl
  4210d3:	fdivr  DWORD PTR [edx+edi*8-0x4]
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	leave  
  4210de:	jecxz  0x421128
  4210e0:	push   ss
  4210e1:	stos   DWORD PTR es:[edi],eax
  4210e2:	mov    al,BYTE PTR [ecx]
  4210e4:	add    BYTE PTR [ebp+0xc000003],ch
  4210ea:	push   0xb594c7fb
  4210ef:	adc    ecx,esp
  4210f1:	shl    DWORD PTR [edi],cl
  4210f3:	scas   eax,DWORD PTR es:[edi]
  4210f4:	or     BYTE PTR [esp+eiz*8],bh
  4210f7:	cmp    eax,0xf448dceb
  4210fc:	xchg   BYTE PTR [edi-0x4a284ee6],dh
  421102:	xchg   ebx,eax
  421103:	or     ecx,DWORD PTR [ebp-0x69]
  421106:	sbb    DWORD PTR [edi-0x6ca375aa],ebp
  42110c:	pop    esp
  42110d:	mov    esp,0xbbe64303
  421112:	sbb    eax,0x2620f42a
  421117:	mov    ds:0xf61e9a76,al
  42111c:	fild   DWORD PTR [esi-0x6ca1ab78]
  421122:	inc    eax
  421123:	mov    dl,0xfe
  421125:	daa    
  421126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421127:	js     0x421147
  421129:	call   0x729d:0x7b9aa477
  421130:	int3   
  421131:	outs   dx,BYTE PTR ds:[esi]
  421132:	mov    al,ds:0x1c822d00
  421137:	cwde   
  421138:	std    
  421139:	adc    al,0xa8
  42113b:	push   ebx
  42113c:	mov    esp,0xb2ea581e
  421141:	lds    ecx,FWORD PTR [esi+0x4ce4759e]
  421147:	cdq    
  421148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421149:	adc    DWORD PTR [eax],esi
  42114b:	inc    esp
  42114c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114d:	mov    esp,0xe1476087
  421152:	sub    esi,DWORD PTR [ecx+0x70a9e1e6]
  421158:	inc    ebp
  421159:	int3   
  42115a:	xchg   DWORD PTR [edi-0x2d],edi
  42115d:	loop   0x4211b5
  42115f:	rcr    BYTE PTR [ecx+0x773a20e9],1
  421165:	or     eax,0xfc28b79d
  42116a:	add    DWORD PTR [edi],0xe1a4eee9
  421170:	stos   DWORD PTR es:[edi],eax
  421171:	aad    0x1c
  421173:	(bad)  
  421174:	sub    esp,DWORD PTR [esi+ecx*2-0x1e]
  421178:	call   0xce005ab9
  42117d:	(bad)  
  42117e:	popf   
  42117f:	adc    bl,BYTE PTR [esi]
  421181:	mov    dh,0x47
  421183:	pop    esi
  421184:	div    dl
  421186:	pop    edx
  421187:	retf   0xf753
  42118a:	lea    edx,[ecx+ebx*2-0x5fe86322]
  421191:	bound  ebp,QWORD PTR [esi+0x5df49804]
  421197:	imul   ecx,DWORD PTR [eax-0xd5c096],0x54
  42119e:	inc    esi
  42119f:	idiv   BYTE PTR [edi-0x9]
  4211a2:	(bad)  
  4211a3:	xchg   edx,eax
  4211a4:	push   ebx
  4211a5:	mov    al,ds:0x7ff1054d
  4211aa:	ins    BYTE PTR es:[edi],dx
  4211ab:	pushf  
  4211ac:	inc    esp
  4211ad:	sub    DWORD PTR [eax-0x45],edi
  4211b0:	sub    ah,BYTE PTR [edi]
  4211b2:	xor    eax,DWORD PTR [edx-0x288e69b0]
  4211b8:	mov    esp,0x21c24ead
  4211bd:	inc    ecx
  4211be:	mov    al,0x0
  4211c0:	in     al,0x60
  4211c2:	or     BYTE PTR [ebx+edx*2-0x55e39b0b],ah
  4211c9:	dec    edx
  4211ca:	cmp    eax,0xa5f5d02e
  4211cf:	sbb    bh,BYTE PTR [esi+0x2c6c6de5]
  4211d5:	mov    ecx,0x8f349a7d
  4211da:	ss mov edi,0xf42b88c5
  4211e0:	int    0x33
  4211e2:	(bad)  
  4211e3:	ins    DWORD PTR es:[edi],dx
  4211e4:	cld    
  4211e5:	(bad)  
  4211e6:	in     eax,0xaf
  4211e8:	xchg   esi,eax
  4211e9:	push   ss
  4211ea:	out    0x9,eax
  4211ec:	sbb    edi,DWORD PTR [ebp+0x2f]
  4211ef:	sar    esp,0xb5
  4211f2:	cli    
  4211f3:	push   esi
  4211f4:	scas   al,BYTE PTR es:[edi]
  4211f5:	adc    bl,BYTE PTR [edi+0x5a68421f]
  4211fb:	xchg   esp,ebp
  4211fd:	mov    DWORD PTR [ebp+0x6],esp
  421200:	xchg   edi,eax
  421201:	in     al,dx
  421202:	mov    edx,0x5c3f7c26
  421207:	lock and cl,bh
  42120a:	enter  0xd6c0,0xb4
  42120e:	cwde   
  42120f:	les    eax,FWORD PTR [edi+esi*1]
  421212:	push   es
  421213:	fst    DWORD PTR [esi]
  421215:	fstp   DWORD PTR [ecx]
  421217:	xlat   BYTE PTR ds:[ebx]
  421218:	das    
  421219:	stos   BYTE PTR es:[edi],al
  42121a:	outs   dx,DWORD PTR ds:[esi]
  42121b:	fidivr DWORD PTR [edi-0x5ab1efbe]
  421221:	rcr    BYTE PTR gs:[esi],1
  421224:	xor    BYTE PTR [ecx-0x472c0fee],al
  42122a:	adc    bh,cl
  42122c:	and    al,0x7d
  42122e:	ror    DWORD PTR [esi+0x3c],1
  421231:	or     BYTE PTR [ebp+0x60],dl
  421234:	jl     0x421295
  421236:	jle    0x4212a8
  421238:	fmul   DWORD PTR [edx]
  42123a:	mov    ss,WORD PTR [ecx+0x38]
  42123d:	sar    BYTE PTR [esi],1
  42123f:	imul   edi,DWORD PTR [ecx+0x450b8dbf],0xdbc8232b
  421249:	neg    BYTE PTR [eax-0x6a]
  42124c:	pushf  
  42124d:	ins    BYTE PTR es:[edi],dx
  42124e:	ins    BYTE PTR es:[edi],dx
  42124f:	and    BYTE PTR [esi-0x1c],bl
  421252:	adc    ebp,ebp
  421254:	inc    edx
  421255:	mov    edi,0xbe180b91
  42125a:	test   eax,0x4d4ee5d4
  42125f:	mov    bh,0x7
  421261:	rcr    DWORD PTR [edi-0x34],0x2
  421265:	adc    esp,esp
  421267:	jo     0x4211f3
  421269:	call   0x8a3fa68
  42126e:	(bad)  
  42126f:	jne    0x421206
  421271:	mov    dh,0x63
  421273:	mov    BYTE PTR [ecx],ah
  421275:	jge    0x42128d
  421277:	cmc    
  421278:	add    eax,0x8a62f3f5
  42127d:	test   BYTE PTR [edx+ecx*1],0x6c
  421281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421282:	cmp    eax,0x534e0d2f
  421287:	lods   al,BYTE PTR ds:[esi]
  421288:	into   
  421289:	stos   DWORD PTR es:[edi],eax
  42128a:	pop    ebx
  42128b:	mov    esi,0x1cfa2b98
  421290:	popf   
  421291:	jg     0x4212a0
  421293:	cmp    eax,0x2a747d59
  421298:	xchg   esp,eax
  421299:	jbe    0x4212fb
  42129b:	sbb    DWORD PTR [ecx-0x339dfc2f],edx
  4212a1:	xor    esp,DWORD PTR [ecx+0x3da6b3d2]
  4212a7:	cs add al,0xf4
  4212aa:	mov    bh,0x1c
  4212ac:	jns    0x42128a
  4212ae:	adc    BYTE PTR [ecx],al
  4212b0:	push   cs
  4212b1:	adc    al,0xd4
  4212b3:	sub    al,0x9a
  4212b5:	and    bh,bh
  4212b7:	pop    eax
  4212b8:	inc    ebp
  4212b9:	popf   
  4212ba:	ret    0xe1bb
  4212bd:	jno    0x4212ac
  4212bf:	ja     0x4212fd
  4212c1:	dec    esp
  4212c2:	sbb    ecx,ebp
  4212c4:	ror    cl,0x99
  4212c7:	call   WORD PTR [edx+ecx*8+0x51c27495]
  4212cf:	mov    dl,BYTE PTR [esi+0x32]
  4212d2:	cld    
  4212d3:	outs   dx,BYTE PTR ds:[esi]
  4212d4:	sub    BYTE PTR [edx-0x2c],0xb4
  4212d8:	(bad)  
  4212d9:	repz sti 
  4212db:	into   
  4212dc:	sub    ebp,esp
  4212de:	loope  0x42135a
  4212e0:	das    
  4212e1:	and    ecx,DWORD PTR [ebx-0x56]
  4212e4:	sub    ebx,DWORD PTR [ebx+0x73]
  4212e7:	inc    edi
  4212e8:	daa    
  4212e9:	sahf   
  4212ea:	pop    edx
  4212eb:	inc    eax
  4212ec:	mov    esp,0x4856d283
  4212f1:	pop    eax
  4212f2:	adc    BYTE PTR [esp+eax*2-0xe],0xc4
  4212f7:	mov    edx,0x563a5a74
  4212fc:	mov    eax,ds:0x56892a84
  421301:	shr    BYTE PTR [esi],0xd7
  421304:	pop    ebx
  421305:	sbb    al,0x4f
  421307:	iret   
  421308:	adc    ebx,DWORD PTR [ebx+eax*1+0x70]
  42130c:	lahf   
  42130d:	mov    ah,0x61
  42130f:	test   BYTE PTR [edi],0x74
  421312:	mov    BYTE PTR [eax],cl
  421314:	sbb    bh,BYTE PTR [ebx+0x16657429]
  42131a:	outs   dx,BYTE PTR es:[esi]
  42131c:	std    
  42131d:	cmp    DWORD PTR [esi],esp
  42131f:	pop    es
  421320:	sbb    al,0xea
  421322:	mov    bl,0xa6
  421324:	push   0x36
  421326:	sub    al,0x7d
  421328:	retf   0x36be
  42132b:	xchg   esp,eax
  42132c:	ins    DWORD PTR es:[edi],dx
  42132d:	mov    ch,0x9f
  42132f:	sub    edi,DWORD PTR [eax]
  421331:	xor    esp,DWORD PTR [edx+0x7d1353e0]
  421337:	push   ss
  421338:	fsub   DWORD PTR [ecx+0x5bdd3f47]
  42133e:	mov    bl,0x8
  421340:	dec    ebp
  421341:	push   cs
  421342:	push   ss
  421343:	fcmovnb st,st(6)
  421345:	jmp    0xfd25f8f9
  42134a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42134b:	or     eax,0x2d994d79
  421350:	(bad)  
  421351:	mov    eax,ds:0xd12a9991
  421356:	lods   al,BYTE PTR ds:[esi]
  421357:	sbb    al,0x32
  421359:	adc    BYTE PTR [ebx+0x43],ch
  42135c:	imul   esi,ebx,0xe6285686
  421362:	popa   
  421363:	cs clc 
  421365:	iret   
  421366:	and    ah,dh
  421368:	cmp    bl,BYTE PTR [edx+0x57190bde]
  42136e:	mov    ah,0xf3
  421370:	stos   BYTE PTR es:[edi],al
  421371:	push   0xc2d2e7f0
  421376:	lods   al,BYTE PTR ds:[esi]
  421377:	adc    eax,0xc01298b7
  42137c:	cli    
  42137d:	adc    eax,0x66292137
  421382:	and    DWORD PTR [eax],0xffffffbf
  421385:	ins    BYTE PTR es:[edi],dx
  421386:	popa   
  421387:	enter  0x7a98,0x0
  42138b:	das    
  42138c:	data16 fist DWORD PTR [ebx+0xf]
  421390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421391:	mov    ds:0x60721c3d,eax
  421396:	mov    ebp,0x4c3ad21e
  42139b:	inc    esi
  42139c:	cmp    DWORD PTR [edx],esp
  42139e:	sbb    eax,0xf0a6aae0
  4213a3:	repnz inc ebp
  4213a5:	pop    ds
  4213a6:	lock dec ebx
  4213a8:	cmp    eax,0x5047205a
  4213ad:	jp     0x42142c
  4213af:	mov    ds:0xda92c29,eax
  4213b4:	pop    ds
  4213b5:	ror    esi,0x28
  4213b8:	fmul   DWORD PTR [edi]
  4213ba:	pop    eax
  4213bb:	retf   0x9a13
  4213be:	pop    ebx
  4213bf:	push   ss
  4213c0:	fistp  WORD PTR [edx+0x3e06c230]
  4213c6:	ret    
  4213c7:	loopne 0x4213d0
  4213c9:	cmp    eax,esi
  4213cb:	das    
  4213cc:	and    al,0x7f
  4213ce:	xchg   ebx,eax
  4213cf:	cmp    BYTE PTR [esi-0x7cd2737e],ch
  4213d5:	fcomp  QWORD PTR [esi+0x32]
  4213d8:	aaa    
  4213d9:	xchg   DWORD PTR [ebx+esi*1-0x47],esi
  4213dd:	xchg   edx,eax
  4213de:	xor    eax,0xe8dc84ba
  4213e3:	xchg   ebx,eax
  4213e4:	cmp    DWORD PTR [ecx+0xa037f],ebp
  4213ea:	mov    ebp,0x2d937c14
  4213ef:	lock jmp 0x4213a7
  4213f2:	xor    ch,BYTE PTR [ecx+0x1b]
  4213f5:	ret    
  4213f6:	call   esi
  4213f8:	inc    eax
  4213f9:	out    0x4f,eax
  4213fb:	out    0x79,eax
  4213fd:	stos   BYTE PTR es:[edi],al
  4213fe:	lahf   
  4213ff:	lds    esi,FWORD PTR [edx-0x346432ad]
  421405:	jmp    0x5102:0x486cc8c4
  42140c:	imul   edx,DWORD PTR [edi+0xbd777fd],0x4c
  421413:	cwde   
  421414:	mov    ebp,0xa16bab75
  421419:	mov    ds:0xcc1be5e9,al
  42141e:	mov    dh,BYTE PTR [esi+ebp*4-0x7e50bdc8]
  421425:	sub    eax,0xca715ca1
  42142a:	call   0xd71d6a35
  42142f:	shl    DWORD PTR [edi-0x6146080b],0xc6
  421436:	(bad)  
  421437:	push   edx
  421438:	je     0x42140a
  42143a:	test   eax,0x46a881c5
  42143f:	pushf  
  421440:	mov    al,ds:0x7af7f8f4
  421445:	inc    esp
  421446:	inc    ebx
  421447:	into   
  421448:	sar    DWORD PTR [edx+ebx*4+0x16],1
  42144c:	pop    ecx
  42144d:	(bad)  
  42144e:	cdq    
  42144f:	in     eax,dx
  421450:	jmp    0x38b5:0x3035e41e
  421457:	pushf  
  421458:	test   eax,0xb0c3f811
  42145d:	pushf  
  42145e:	sbb    edi,DWORD PTR [esi+eax*1]
  421461:	mov    eax,ds:0x1186ac4
  421466:	jecxz  0x4214c0
  421468:	(bad)  
  421469:	jmp    0x50126f49
  42146e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146f:	xor    ebx,esi
  421471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421472:	dec    ebp
  421473:	push   0xd1327d02
  421478:	mov    bl,0xc2
  42147a:	mov    WORD PTR [esi-0x4c3c409b],es
  421480:	mov    ds:0x5df7b05a,al
  421485:	jmp    DWORD PTR [esi-0x56]
  421488:	sbb    ah,bl
  42148a:	xor    esp,DWORD PTR [ebx]
  42148c:	mov    al,ds:0x2f8ad2ee
  421491:	inc    ebp
  421492:	xchg   esp,eax
  421493:	pop    eax
  421494:	sbb    BYTE PTR [eax+eax*1],0x0
	...
  4214a0:	add    BYTE PTR [ebp-0x2c737c23],cl
  4214a6:	fimul  WORD PTR [edi-0x66af6223]
  4214ac:	daa    
  4214ad:	dec    ebp
  4214ae:	cwde   
  4214af:	push   0xffffffc2
  4214b1:	pop    eax
  4214b2:	mov    es,WORD PTR [ecx]
  4214b4:	add    BYTE PTR [ebp-0x7afffffd],ch
  4214ba:	aad    0x27
  4214bc:	mov    ds:0xe604c052,al
  4214c1:	and    ch,BYTE PTR [eax-0x10114247]
  4214c7:	mov    ebx,0x9ce62a1b
  4214cc:	mov    WORD PTR [ebx-0x3442ce9b],es
  4214d2:	(bad)  
  4214d3:	fmul   QWORD PTR [ebx+ebp*2+0x20]
  4214d7:	jl     0x421533
  4214d9:	or     cl,BYTE PTR [esi+edx*1]
  4214dc:	pop    ebx
  4214dd:	or     bl,BYTE PTR [edi]
  4214df:	mov    ebp,0x31038e2
  4214e4:	mul    edx
  4214e6:	ja     0x4214cf
  4214e8:	sub    al,0x35
  4214ea:	xor    ebx,eax
  4214ec:	mov    ds:0xee30dbce,al
  4214f1:	ds sbb bl,bh
  4214f4:	xor    DWORD PTR [edx],esp
  4214f6:	jne    0x42147f
  4214f8:	(bad)  
  4214f9:	xor    al,0x1e
  4214fb:	fs xchg ecx,eax
  4214fd:	icebp  
  4214fe:	(bad)  
  4214ff:	cwde   
  421500:	push   edx
  421501:	fwait
  421502:	jle    0x4214e4
  421504:	sub    dl,ah
  421506:	dec    edi
  421507:	popa   
  421508:	mov    ch,0x2d
  42150a:	xor    edi,DWORD PTR [ebp+ecx*4+0x22]
  42150e:	(bad)  
  42150f:	rcr    DWORD PTR [ebp+0x17285591],cl
  421515:	icebp  
  421516:	xor    eax,0x52cd13b2
  42151b:	mov    al,BYTE PTR [esi-0x1c]
  42151e:	cmp    al,0x1
  421520:	mov    esi,0x929f8233
  421525:	cdq    
  421526:	adc    ebx,DWORD PTR [ebx]
  421528:	retf   0xaa02
  42152b:	inc    edi
  42152c:	int    0x40
  42152e:	mov    edi,0x5de30c65
  421533:	das    
  421534:	(bad)  
  421535:	jb     0x4214f9
  421537:	sub    ebx,edx
  421539:	mov    DWORD PTR ds:[ebx+0x2d],esp
  42153d:	(bad)  
  42153e:	out    dx,eax
  42153f:	ins    BYTE PTR es:[edi],dx
  421540:	inc    ebx
  421541:	enter  0xd30,0xb3
  421545:	add    eax,0x4593b089
  42154a:	mov    ds:0x6a7d9e11,eax
  42154f:	adc    eax,0x66ff2f88
  421554:	aaa    
  421555:	cmp    eax,esp
  421557:	xchg   ebp,eax
  421558:	xor    DWORD PTR [esi-0x36af6b2e],ebp
  42155e:	addr16 xor eax,0x7c008d4
  421564:	add    BYTE PTR [edx],ah
  421566:	add    al,0xa7
  421568:	dec    esi
  421569:	lahf   
  42156a:	mov    ebp,0x2b39c363
  42156f:	imul   esp,esp,0x324b31c8
  421575:	and    BYTE PTR [edi],ch
  421577:	dec    edx
  421578:	ret    
  421579:	adc    al,0xb1
  42157b:	xchg   edx,eax
  42157c:	aad    0x16
  42157e:	gs daa 
  421580:	push   es
  421581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421582:	int    0xbe
  421584:	xchg   edi,eax
  421585:	jne    0x4215c2
  421587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421588:	add    eax,0x132445f0
  42158d:	mov    bh,0x5a
  42158f:	adc    BYTE PTR [edi],bh
  421591:	jne    0x4215a3
  421593:	xchg   ecx,eax
  421594:	inc    ebx
  421595:	xchg   edx,eax
  421596:	fadd   DWORD PTR [edx]
  421598:	dec    esp
  421599:	sub    cl,BYTE PTR [edi+edx*4+0x32536ad0]
  4215a0:	outs   dx,DWORD PTR ds:[esi]
  4215a1:	mov    ah,BYTE PTR [ebx-0x33]
  4215a4:	out    0x9d,al
  4215a6:	xor    eax,edi
  4215a8:	dec    ecx
  4215a9:	pop    esi
  4215aa:	pop    esi
  4215ab:	cli    
  4215ac:	or     ebp,ebx
  4215ae:	out    dx,eax
  4215af:	push   0x7c
  4215b1:	stos   BYTE PTR es:[edi],al
  4215b2:	fsubrp st(7),st
  4215b4:	adc    DWORD PTR [esi+0x11fc173e],ecx
  4215ba:	pop    ecx
  4215bb:	hlt    
  4215bc:	mov    ch,0xa8
  4215be:	mov    bl,0x39
  4215c0:	mov    al,ds:0xe848bd2b
  4215c5:	ror    eax,cl
  4215c7:	xor    BYTE PTR [ecx-0x56],bl
  4215ca:	fs enter 0x7107,0xe4
  4215cf:	int3   
  4215d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215d1:	jnp    0x421633
  4215d3:	dec    ecx
  4215d4:	sub    eax,0x1ad3306a
  4215d9:	es sub ebp,edx
  4215dc:	push   0x2d
  4215de:	adc    DWORD PTR [eax-0x53],0x7e
  4215e2:	adc    al,0x93
  4215e4:	mov    dl,0x4a
  4215e6:	dec    edx
  4215e7:	in     al,dx
  4215e8:	add    al,dh
  4215ea:	add    edx,DWORD PTR [esi]
  4215ec:	imul   esp,DWORD PTR [edi+0x41],0x338247ec
  4215f3:	pop    edi
  4215f4:	ficomp DWORD PTR [eax+0x1d72032e]
  4215fa:	jmp    0x8513:0xe186d9e6
  421601:	dec    ecx
  421602:	sbb    dh,BYTE PTR [ecx]
  421604:	in     eax,dx
  421605:	dec    ecx
  421606:	inc    eax
  421607:	in     al,0xaa
  421609:	inc    esi
  42160a:	fidivr WORD PTR [esi-0x10]
  42160d:	sar    BYTE PTR [ecx],0x48
  421610:	mov    BYTE PTR [ecx-0x66d15c4f],cl
  421616:	xchg   ebx,eax
  421617:	xchg   ebx,eax
  421618:	inc    edx
  421619:	inc    ebx
  42161a:	cmp    al,0x92
  42161c:	pop    ss
  42161d:	adc    eax,0xb6413707
  421622:	mov    eax,0xfd904593
  421627:	pusha  
  421628:	push   edi
  421629:	call   0x7a82:0xd32e6c8
  421630:	adc    eax,0x997a1c93
  421635:	push   es
  421636:	loopne 0x421636
  421638:	xlat   BYTE PTR ds:[bx]
  42163a:	xor    DWORD PTR [ecx],0xeac8fcb1
  421640:	(bad)
  421644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421645:	cdq    
  421646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421647:	rcr    DWORD PTR [ecx-0x64b37c64],1
  42164d:	aad    0x38
  42164f:	cli    
  421650:	pop    ebx
  421651:	jbe    0x4216ba
  421653:	iret   
  421654:	push   es
  421655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421656:	(bad)  
  421657:	rcl    BYTE PTR [ebx],1
  421659:	stc    
  42165a:	push   es
  42165b:	icebp  
  42165c:	ins    BYTE PTR es:[edi],dx
  42165d:	pop    ecx
  42165e:	adc    al,0xf2
  421660:	lods   al,BYTE PTR ds:[esi]
  421661:	cdq    
  421662:	mov    al,ds:0x7d5843ce
  421667:	inc    ebp
  421668:	test   al,0x90
  42166a:	mul    DWORD PTR [esi]
  42166c:	mov    eax,0x94d58214
  421671:	and    DWORD PTR ds:0xc1b4f574,eax
  421677:	mov    ecx,0x75cdd585
  42167c:	adc    al,0x29
  42167e:	mov    edi,0x678aa806
  421683:	push   ds
  421684:	mov    ah,0x5d
  421686:	add    BYTE PTR [edi],dh
  421688:	out    dx,eax
  421689:	or     ecx,DWORD PTR [edx]
  42168b:	sub    ebx,DWORD PTR [ecx+0x32]
  42168e:	scas   eax,DWORD PTR es:[edi]
  42168f:	not    BYTE PTR fs:[eax+0x3d]
  421693:	scas   al,BYTE PTR es:[edi]
  421694:	mov    BYTE PTR [ecx+0x2413a4b6],cl
  42169a:	push   esp
  42169b:	sbb    al,0x52
  42169d:	xchg   edi,eax
  42169e:	sar    BYTE PTR ds:0x82d6c207,1
  4216a4:	out    dx,al
  4216a5:	or     BYTE PTR [edi],cl
  4216a7:	jno    0x421658
  4216a9:	pop    ss
  4216aa:	out    0xc4,eax
  4216ac:	mov    al,0xf9
  4216ae:	pop    edi
  4216af:	mov    bh,0xce
  4216b1:	daa    
  4216b2:	add    dl,0xcc
  4216b5:	pop    es
  4216b6:	test   BYTE PTR [ecx],ah
  4216b8:	popa   
  4216b9:	mov    eax,ds:0x25b09db4
  4216be:	call   FWORD PTR [edi+0x0]
  4216c1:	sub    ch,BYTE PTR [esi]
  4216c3:	mov    WORD PTR [edi],ss
  4216c5:	fxam   
  4216c7:	mov    ds:0x37989806,eax
  4216cc:	fsubr  st(0),st
  4216ce:	in     al,dx
  4216cf:	lahf   
  4216d0:	inc    esp
  4216d1:	packssdw mm5,QWORD PTR [ecx+edi*8-0x28]
  4216d6:	push   es
  4216d7:	not    DWORD PTR [ebx-0x4af8d700]
  4216dd:	sub    eax,0x1a3a40c1
  4216e2:	retf   0x8cf6
  4216e5:	mov    dh,cl
  4216e7:	sub    BYTE PTR [edx-0x616d96d4],bh
  4216ed:	jp     0x42175e
  4216ef:	mov    eax,0x560c27bd
  4216f4:	(bad)  [esi]
  4216f6:	test   eax,0x84204e98
  4216fb:	mov    ds:0xe874ae0,eax
  421700:	and    al,0xe4
  421702:	add    BYTE PTR [edi+0x24],dh
  421705:	int3   
  421706:	jp     0x421783
  421708:	and    dh,BYTE PTR [ebx+0x165da415]
  42170e:	fcomp  DWORD PTR [eax+ebx*8+0x49]
  421712:	sar    DWORD PTR [ebx-0x21745520],1
  421718:	lods   al,BYTE PTR ds:[esi]
  421719:	sbb    ecx,ebp
  42171b:	push   0x21d698a0
  421720:	out    0xb7,eax
  421722:	or     eax,DWORD PTR [ecx-0x6c]
  421725:	mov    esi,DWORD PTR [esi+0x79]
  421728:	out    dx,eax
  421729:	or     al,0x28
  42172b:	cld    
  42172c:	add    edx,DWORD PTR [edi+0x37d572c9]
  421732:	pusha  
  421733:	(bad)  
  421734:	adc    dh,BYTE PTR [esi-0x4e]
  421737:	sbb    esi,ebp
  421739:	pop    ds
  42173a:	jle    0x4216df
  42173c:	mov    ds:0x3a209576,eax
  421741:	mov    BYTE PTR [ecx+edi*4],al
  421744:	ret    
  421745:	inc    ebp
  421746:	(bad)  
  421747:	adc    al,BYTE PTR [ebx]
  421749:	xchg   esp,eax
  42174a:	cmp    BYTE PTR [ebp-0x47],dl
  42174d:	xor    bh,BYTE PTR [eax+0x43d84865]
  421753:	jecxz  0x4217d3
  421755:	pop    ds
  421756:	ficomp WORD PTR ds:0xcedd4390
  42175c:	mov    bl,0x44
  42175e:	sbb    dh,BYTE PTR [esi+esi*1]
  421761:	nop
  421762:	cmc    
  421763:	loope  0x4217b8
  421765:	gs icebp 
  421767:	mov    ah,0x55
  421769:	mov    al,0x8d
  42176b:	mov    al,0xe7
  42176d:	test   BYTE PTR [ecx-0x5b6a8440],dh
  421773:	inc    edi
  421774:	fs ds mov ebp,0xf2a1ee95
  42177b:	inc    eax
  42177c:	sub    bh,BYTE PTR [ebx+0x2b]
  42177f:	rcr    edi,0xae
  421782:	inc    eax
  421783:	out    0x52,al
  421785:	les    esp,FWORD PTR [edx]
  421787:	and    BYTE PTR [esi+0x3c4ac7eb],dl
  42178d:	sub    BYTE PTR [ecx],dl
  42178f:	mov    edi,0x7985534b
  421794:	in     al,dx
  421795:	retf   0x7275
  421798:	mov    ebx,0x991444e2
  42179d:	out    0xfc,al
  42179f:	neg    DWORD PTR [edi+ebp*2+0x27]
  4217a3:	inc    ebx
  4217a5:	or     al,0xaa
  4217a7:	xlat   BYTE PTR ds:[ebx]
  4217a8:	jae    0x421770
  4217aa:	adc    DWORD PTR [ecx],edx
  4217ac:	test   eax,0x29d9d087
  4217b1:	les    edx,FWORD PTR [edi]
  4217b3:	sbb    edx,eax
  4217b5:	cmp    al,0x11
  4217b7:	inc    ebp
  4217b8:	xlat   BYTE PTR ds:[ebx]
  4217b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217ba:	retf   
  4217bb:	pop    edx
  4217bc:	or     DWORD PTR [eax-0x5],eax
  4217bf:	out    0x4c,eax
  4217c1:	sub    al,0x3a
  4217c3:	sahf   
  4217c4:	mov    al,ch
  4217c6:	inc    edi
  4217c7:	cmp    ch,BYTE PTR [ebx]
  4217c9:	mov    ds:0xca43d754,eax
  4217ce:	dec    ebx
  4217cf:	dec    ebx
  4217d0:	xchg   ebp,eax
  4217d1:	into   
  4217d2:	cmp    ebx,esp
  4217d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217d5:	or     al,0x9d
  4217d7:	bound  ebp,QWORD PTR [eax-0x58]
  4217da:	jl     0x421768
  4217dc:	push   ecx
  4217dd:	mov    edi,0xb6a4f09c
  4217e2:	into   
  4217e3:	sbb    BYTE PTR ds:0x5b26137b,al
  4217e9:	inc    edx
  4217eb:	mov    esp,0x65547158
  4217f0:	scas   al,BYTE PTR es:[edi]
  4217f1:	xor    BYTE PTR [ecx],cl
  4217f3:	xor    DWORD PTR [eax+eiz*1],esp
  4217f6:	push   cs
  4217f7:	out    0x85,al
  4217f9:	fldcw  WORD PTR [edi+0x5b]
  4217fc:	or     eax,0x9e141cf9
  421801:	pushf  
  421802:	in     al,dx
  421803:	fcom   DWORD PTR [eax]
  421805:	mov    esi,0x491d041d
  42180a:	jno    0x42180d
  42180c:	jns    0x42182e
  42180e:	or     ecx,DWORD PTR [esp+eiz*2-0x4fd28521]
  421815:	sbb    eax,0x9720b27
  42181a:	test   eax,0x49a62370
  42181f:	retf   0xe9d8
  421822:	ror    esp,cl
  421824:	stos   BYTE PTR es:[edi],al
  421825:	(bad)  
  421826:	nop
  421827:	mov    ebp,0x40ba2e6
  42182c:	mov    cl,0x32
  42182e:	ret    0x5003
  421831:	and    BYTE PTR ds:0x9543956c,0x97
  421838:	test   al,0x14
  42183a:	cmc    
  42183b:	add    bl,bl
  42183d:	rcl    DWORD PTR [edi],1
  42183f:	add    BYTE PTR [edx-0x6e],0xae
  421843:	test   al,0x1d
  421845:	lds    ebx,FWORD PTR [ecx-0x57b12381]
  42184b:	push   esi
  42184c:	cmp    eax,0x7eb12741
  421851:	mov    al,0x9d
  421853:	push   DWORD PTR ds:0x9155320e
  421859:	xchg   DWORD PTR [ecx-0x8e0987d],eax
  42185f:	mov    eax,ds:0x8eb2c3ca
  421864:	mov    eax,ds:0x93
	...
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [ebx-0x56],ebp
  42187f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421880:	and    eax,0x19205
  421885:	lods   eax,DWORD PTR ds:[esi]
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    ch,bh
  42188a:	push   esi
  42188b:	pushf  
  42188c:	xchg   ebp,eax
  42188d:	pop    ecx
  42188e:	xchg   ecx,eax
  42188f:	call   0x59f82b9b
  421894:	pop    ss
  421895:	push   edx
  421896:	arpl   WORD PTR [esi-0x2],bp
  421899:	and    DWORD PTR [ebx+0x3c],edx
  42189c:	push   edi
  42189d:	outs   dx,DWORD PTR ds:[esi]
  42189e:	jo     0x421907
  4218a0:	inc    ebx
  4218a1:	jmp    0xb39192de
  4218a6:	mov    al,0x36
  4218a8:	es sub al,0xb2
  4218ab:	push   ebp
  4218ac:	dec    ecx
  4218ad:	dec    ebx
  4218ae:	xor    al,0x8b
  4218b0:	ds out dx,eax
  4218b2:	lods   eax,DWORD PTR ds:[esi]
  4218b3:	mov    edi,DWORD PTR [ebp+0x4d]
  4218b6:	cli    
  4218b7:	and    DWORD PTR [eax-0x30],eax
  4218ba:	sbb    DWORD PTR [esi+0x47],ecx
  4218bd:	int3   
  4218be:	mov    esp,0xce650131
  4218c3:	cmp    DWORD PTR [esi-0x76c981fc],ecx
  4218c9:	and    dl,BYTE PTR [ebx+0x28]
  4218cc:	jbe    0x421871
  4218ce:	sbb    DWORD PTR [esi+0x11162218],0xa3af92e0
  4218d8:	pop    ebp
  4218d9:	push   esi
  4218da:	mov    bl,0x3b
  4218dc:	mov    cl,0xb9
  4218de:	dec    esp
  4218df:	mov    edi,0x98cfcc24
  4218e4:	jb     0x42192d
  4218e6:	add    DWORD PTR [esi+0x3922c058],eax
  4218ec:	pusha  
  4218ed:	inc    edi
  4218ee:	popa   
  4218ef:	(bad)  
  4218f0:	mov    DWORD PTR ds:[edx],ecx
  4218f3:	outs   dx,BYTE PTR ds:[esi]
  4218f4:	pop    es
  4218f5:	inc    edi
  4218f6:	mov    cl,0xe8
  4218f8:	std    
  4218f9:	loope  0x421928
  4218fb:	mov    ds:0xb50d29dc,al
  421900:	adc    DWORD PTR [edx-0x276bc98],ebx
  421906:	fwait
  421907:	in     al,0x29
  421909:	mov    ecx,0x60a66d2a
  42190e:	outs   dx,DWORD PTR ds:[esi]
  42190f:	mov    al,ds:0x7969102
  421914:	and    DWORD PTR [ecx-0xa],edx
  421917:	adc    eax,0xa90f45a8
  42191c:	stos   BYTE PTR es:[edi],al
  42191d:	ins    DWORD PTR es:[edi],dx
  42191e:	mov    eax,ds
  421920:	inc    esi
  421921:	lea    ebp,[esi-0x74]
  421924:	loop   0x4218d7
  421926:	cli    
  421927:	jbe    0x421953
  421929:	mov    cl,0x74
  42192b:	push   eax
  42192c:	sub    esp,DWORD PTR [eax-0x33]
  42192f:	jmp    0xe714:0x887c54e2
  421936:	mov    ds:0x3c5bc6bd,al
  42193b:	dec    edi
  42193c:	dec    eax
  42193d:	in     al,dx
  42193e:	into   
  42193f:	in     eax,dx
  421940:	adc    eax,0x9d08b926
  421945:	ss nop
  421947:	jp     0x4218fd
  421949:	inc    ecx
  42194a:	xchg   esi,eax
  42194b:	and    eax,0xde89ddb5
  421950:	dec    ebp
  421951:	scas   eax,DWORD PTR es:[edi]
  421952:	sub    esp,DWORD PTR [edx-0x7aed54f2]
  421958:	std    
  421959:	out    0xab,eax
  42195b:	jnp    0x4219c4
  42195d:	and    bh,BYTE PTR [eax+0x54]
  421960:	pop    ds
  421961:	lods   eax,DWORD PTR ds:[esi]
  421962:	mov    ecx,0xc21c2c48
  421967:	add    eax,0x13d41c4f
  42196c:	push   ebx
  42196d:	test   al,0x26
  42196f:	mov    al,0xed
  421971:	jns    0x4219de
  421973:	rcr    ecx,cl
  421975:	mov    esi,0x7cd02c7
  42197a:	inc    ecx
  42197b:	jns    0x421911
  42197d:	das    
  42197e:	mov    dl,0x8
  421980:	xchg   edx,edi
  421982:	xor    DWORD PTR [esi+0x347aae1c],edi
  421988:	xor    al,BYTE PTR [edi+0x13c8ee60]
  42198e:	repnz pop ebx
  421990:	fimul  WORD PTR [ebp-0x1b]
  421993:	pop    ecx
  421994:	adc    BYTE PTR [ebx],0x8c
  421997:	daa    
  421998:	xchg   DWORD PTR [ebx+0x504a6f95],esp
  42199e:	retf   0xab8d
  4219a1:	inc    esp
  4219a2:	(bad)  
  4219a3:	pop    ds
  4219a4:	xor    al,0x47
  4219a6:	jno    0x421989
  4219a8:	ds pop ecx
  4219aa:	pop    edx
  4219ab:	sub    edi,ecx
  4219ad:	jbe    0x421972
  4219af:	mov    ecx,0x4ccbe703
  4219b4:	xor    eax,0x7b31dd6f
  4219b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ba:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4219bc:	adc    ebp,ebx
  4219be:	add    edx,DWORD PTR [edi]
  4219c0:	es jmp 0x76b7:0xc082f57a
  4219c8:	mov    dl,0x6b
  4219ca:	clc    
  4219cb:	push   0x28
  4219cd:	aam    0xb9
  4219cf:	lahf   
  4219d0:	mov    ?,esp
  4219d2:	xchg   edi,eax
  4219d3:	popa   
  4219d4:	push   ebp
  4219d5:	jb     0x421a37
  4219d7:	and    DWORD PTR [eax+0x64],edi
  4219da:	imul   BYTE PTR [edx-0x6b2afc95]
  4219e0:	sti    
  4219e1:	cmp    ebx,eax
  4219e3:	into   
  4219e4:	stos   DWORD PTR es:[edi],eax
  4219e5:	sbb    edx,edx
  4219e7:	retf   0x3ca2
  4219ea:	or     DWORD PTR [esi],ecx
  4219ec:	and    cl,al
  4219ee:	or     DWORD PTR [ebx-0x6aacbed6],ecx
  4219f4:	xchg   edi,eax
  4219f5:	cmc    
  4219f6:	adc    al,0xd4
  4219f8:	aam    0x29
  4219fa:	fimul  WORD PTR [ebx-0x6]
  4219fd:	push   esi
  4219fe:	push   edi
  4219ff:	out    0x9a,eax
  421a01:	jmp    DWORD PTR [ebx-0x14]
  421a04:	test   BYTE PTR [ebx+0x6dcdbe63],dl
  421a0a:	pop    ss
  421a0b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421a0d:	lock ins BYTE PTR es:[edi],dx
  421a0f:	dec    ebx
  421a10:	iret   
  421a11:	xor    edx,esp
  421a13:	cli    
  421a14:	gs leave 
  421a16:	xchg   BYTE PTR [edi-0x53827e7f],bl
  421a1c:	(bad)  
  421a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a1e:	sbb    ecx,DWORD PTR [ecx-0x73]
  421a21:	and    edi,DWORD PTR [eax-0x78b31a4a]
  421a27:	icebp  
  421a28:	js     0x4219e3
  421a2a:	int    0x40
  421a2c:	sub    cl,bh
  421a2e:	test   DWORD PTR [esi-0x22bdb3f9],esp
  421a34:	mov    ebp,0x8340ac5c
  421a39:	rcl    DWORD PTR [ecx-0x27],0x94
  421a3d:	lods   eax,DWORD PTR ds:[esi]
  421a3e:	neg    DWORD PTR [ebx-0x4b0484ca]
  421a44:	xchg   ebx,eax
  421a45:	pop    edi
  421a46:	inc    edx
  421a47:	inc    esi
  421a48:	push   ss
  421a49:	xlat   BYTE PTR ds:[ebx]
  421a4a:	fnstenv [edx+0x7eda3268]
  421a50:	aad    0x99
  421a52:	stos   BYTE PTR es:[edi],al
  421a53:	ins    DWORD PTR es:[edi],dx
  421a54:	bound  esp,QWORD PTR [eax+0x366e1ab9]
  421a5a:	(bad)  
  421a5b:	daa    
  421a5c:	inc    ecx
  421a5d:	sahf   
  421a5e:	cmp    DWORD PTR [edi+0x18],eax
  421a61:	fwait
  421a62:	test   eax,0x157546b5
  421a67:	and    al,0xd4
  421a69:	cwde   
  421a6a:	outs   dx,DWORD PTR ds:[esi]
  421a6b:	pop    edi
  421a6c:	repnz add edi,DWORD PTR [eax+0x57605b5a]
  421a73:	xchg   ecx,eax
  421a74:	or     edx,edx
  421a76:	iret   
  421a77:	inc    esp
  421a78:	loope  0x421ae2
  421a7a:	inc    ebp
  421a7b:	push   eax
  421a7c:	rcr    BYTE PTR [esi-0x5af5b664],cl
  421a82:	xchg   edx,eax
  421a83:	mov    al,ds:0x135f60a4
  421a88:	fmul   DWORD PTR [ebx]
  421a8a:	hlt    
  421a8b:	fist   WORD PTR ds:0xb3107e6f
  421a91:	mov    edx,0x94cdd05b
  421a96:	jno    0x421aa1
  421a98:	fs inc esi
  421a9a:	sbb    BYTE PTR [esi+0x68],al
  421a9d:	ins    DWORD PTR es:[edi],dx
  421a9e:	pop    ss
  421a9f:	xchg   ebp,eax
  421aa0:	popa   
  421aa1:	mov    eax,DWORD PTR [edi]
  421aa3:	mov    BYTE PTR [edi+edi*2-0x54304840],bh
  421aaa:	pop    ss
  421aab:	bound  ecx,QWORD PTR [edi+0x31]
  421aae:	cmp    BYTE PTR [ebx+eax*2-0x4d],dh
  421ab2:	mov    dl,0x28
  421ab4:	loopne 0x421af1
  421ab6:	adc    bh,ah
  421ab8:	mov    ds:0x2fa37ce6,al
  421abd:	pop    ebp
  421abe:	outs   dx,BYTE PTR ds:[esi]
  421abf:	jl     0x421ada
  421ac1:	arpl   bp,si
  421ac3:	in     al,dx
  421ac4:	mov    esi,0xc44eeb2
  421ac9:	mov    dh,0x4f
  421acb:	and    ch,BYTE PTR [ebp+0x741301de]
  421ad1:	cmp    BYTE PTR ds:0xad045331,0xd4
  421ad8:	sbb    bh,BYTE PTR [ebx+0x79]
  421adb:	adc    bl,dh
  421add:	loop   0x421aae
  421adf:	hlt    
  421ae0:	sbb    ecx,DWORD PTR [esi]
  421ae2:	dec    ebx
  421ae3:	outs   dx,DWORD PTR ds:[esi]
  421ae4:	push   ebp
  421ae5:	fisttp WORD PTR [edi-0x75]
  421ae8:	popf   
  421ae9:	(bad)  
  421aea:	repnz and ecx,esp
  421aed:	sub    BYTE PTR [edx],cl
  421aef:	xchg   ch,al
  421af1:	bound  ebx,QWORD PTR [eax+0x3266f2de]
  421af7:	sub    edi,edx
  421af9:	cld    
  421afa:	pop    edi
  421afb:	mov    ebx,0x733a7630
  421b00:	xor    al,0xb4
  421b02:	cmp    bh,BYTE PTR [ebx]
  421b04:	push   0xffffff8c
  421b06:	(bad)  
  421b07:	adc    bl,0x91
  421b0a:	test   al,0x1e
  421b0c:	push   eax
  421b0d:	daa    
  421b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b0f:	xor    al,0x86
  421b11:	add    eax,0x3b4a267
  421b16:	pop    ebx
  421b17:	das    
  421b18:	jae    0x421b4d
  421b1a:	jmp    0x25af:0xd387d23a
  421b21:	push   0xedf78e21
  421b26:	(bad)  
  421b27:	mov    ch,bl
  421b29:	aas    
  421b2a:	mov    al,ds:0x66ec5450
  421b2f:	xchg   ebx,eax
  421b30:	cld    
  421b31:	sub    eax,0xa4278c3
  421b36:	sub    al,0xfc
  421b38:	pop    esi
  421b39:	sub    DWORD PTR [edi+edx*1-0x3e2c5f9b],edi
  421b40:	jl     0x421bb4
  421b42:	test   edx,ebx
  421b44:	in     eax,0xa7
  421b46:	fiadd  WORD PTR [eax+0x6c]
  421b49:	jbe    0x421bbc
  421b4b:	test   eax,0x47f8252a
  421b50:	mov    eax,ds:0x1b3b30d
  421b55:	js     0x421bbc
  421b57:	sbb    BYTE PTR [esp+ebp*1-0x5c],0x2
  421b5c:	add    al,0x14
  421b5e:	pop    edi
  421b5f:	xchg   edi,eax
  421b60:	inc    esp
  421b61:	xor    BYTE PTR [ebx],bh
  421b63:	pop    ss
  421b64:	mov    al,ds:0x81bdbb9f
  421b69:	lods   eax,DWORD PTR ds:[esi]
  421b6a:	jne    0x421b51
  421b6c:	call   0x1de:0xcd69809f
  421b73:	xchg   edx,eax
  421b74:	mov    ah,0x6f
  421b76:	or     al,0xd6
  421b78:	push   edx
  421b79:	popa   
  421b7a:	mov    dl,0xdb
  421b7c:	in     al,0x4c
  421b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b7f:	aad    0x6e
  421b81:	std    
  421b82:	stc    
  421b83:	bound  edx,QWORD PTR [esi-0x5677f8af]
  421b89:	sbb    BYTE PTR [ecx-0x2e],bl
  421b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b8d:	clc    
  421b8e:	xor    DWORD PTR [esi+0x2ad56c2e],0xffffffd3
  421b95:	push   es
  421b96:	xchg   esp,eax
  421b97:	mov    ebx,0x97b949bb
  421b9c:	cmp    ch,ch
  421b9e:	(bad)
  421ba1:	nop
  421ba2:	hlt    
  421ba3:	jle    0x421be5
  421ba5:	loope  0x421c23
  421ba7:	adc    ecx,DWORD PTR [eax+eax*4-0x44]
  421bab:	push   ebx
  421bac:	push   es
  421bad:	loop   0x421b5d
  421baf:	pop    ds
  421bb0:	sti    
  421bb1:	shl    esp,0xf5
  421bb4:	cmc    
  421bb5:	mov    ebx,0x44d03ca8
  421bba:	daa    
  421bbb:	inc    eax
  421bbc:	popa   
  421bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bbe:	out    0xce,eax
  421bc0:	clc    
  421bc1:	pop    ecx
  421bc2:	test   DWORD PTR fs:[ecx],0x7ca4d586
  421bc9:	push   edi
  421bca:	mov    ecx,0x6e3b7a27
  421bcf:	inc    ecx
  421bd0:	dec    edx
  421bd1:	test   eax,0x7e031c8c
  421bd6:	xchg   BYTE PTR [eax+0x42740c83],ah
  421bdc:	pop    edi
  421bdd:	add    ebp,edx
  421bdf:	es shr al,cl
  421be2:	inc    esi
  421be3:	ja     0x421c44
  421be5:	add    eax,0xeb3e119b
  421bea:	aam    0xa4
  421bec:	or     ebx,DWORD PTR [edi-0x77af5753]
  421bf2:	jge    0x421bcf
  421bf4:	aad    0xc8
  421bf6:	pop    ds
  421bf7:	pop    ss
  421bf8:	jg     0x421ba6
  421bfa:	ins    BYTE PTR es:[edi],dx
  421bfb:	pop    eax
  421bfc:	pop    esi
  421bfd:	mov    bl,0xa1
  421bff:	dec    esi
  421c00:	sti    
  421c01:	lahf   
  421c02:	ss ds dec ebx
  421c05:	es mov edx,esp
  421c08:	cmp    al,0x50
  421c0a:	pop    es
  421c0b:	push   edx
  421c0c:	add    al,0x19
  421c0e:	pop    ecx
  421c0f:	jb     0x421c35
  421c11:	sbb    ebx,DWORD PTR [eax+edx*1+0x466a7dc5]
  421c18:	push   0x49
  421c1a:	mov    WORD PTR [ecx-0x808d0ca],?
  421c20:	ficomp WORD PTR [ecx-0x69]
  421c23:	add    dh,BYTE PTR gs:[esi+0x545c606b]
  421c2a:	ss add al,0x60
  421c2d:	xor    eax,0x42157762
  421c32:	rol    edx,cl
  421c34:	or     dh,ch
	...
  421c3e:	add    BYTE PTR [eax],al
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0x97971a56
  421c4e:	addr16 (bad) 
  421c51:	mov    dl,0x95
  421c53:	add    DWORD PTR [eax],eax
  421c55:	lods   eax,DWORD PTR ds:[esi]
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [edi+ebp*1+0x70693369],ch
  421c5f:	out    0x0,eax
  421c61:	rol    DWORD PTR [edi-0x3fa19438],1
  421c67:	fcomip st,st(6)
  421c69:	pop    edi
  421c6a:	test   DWORD PTR [ebp+ebx*8-0x5f],esp
  421c6e:	stc    
  421c6f:	mov    dh,0xb0
  421c71:	mov    DWORD PTR [edx+edi*4+0x64],esp
  421c75:	rep outs dx,BYTE PTR ds:[esi]
  421c77:	sub    al,0xd0
  421c79:	mov    esi,0x89d65a64
  421c7e:	in     al,0x5b
  421c80:	or     eax,0xc634230c
  421c85:	sub    DWORD PTR [esi],ebx
  421c87:	imul   esi,DWORD PTR [eax-0x3],0xffffffbc
  421c8b:	icebp  
  421c8c:	or     DWORD PTR [edx+0x21],ebp
  421c8f:	rcr    edx,1
  421c91:	mov    eax,0x1edc0d29
  421c96:	(bad)  
  421c97:	pop    ebx
  421c98:	push   edx
  421c99:	ins    DWORD PTR es:[edi],dx
  421c9a:	cli    
  421c9b:	pop    es
  421c9c:	push   ds
  421c9d:	pop    ecx
  421c9e:	pop    edi
  421c9f:	mov    DWORD PTR [ebx-0x53],edx
  421ca2:	sahf   
  421ca3:	inc    esi
  421ca4:	bound  ecx,QWORD PTR [ecx+0x9]
  421ca7:	and    DWORD PTR [edx+ebx*2+0x7c],0x4f93741d
  421caf:	xor    DWORD PTR [edi],esi
  421cb1:	ret    0x9bf9
  421cb4:	ins    BYTE PTR es:[edi],dx
  421cb5:	mov    cl,0xc
  421cb7:	mov    ebp,0x3e929fef
  421cbc:	add    DWORD PTR [ebx-0x3370a54b],ebx
  421cc2:	inc    ebp
  421cc3:	fistp  QWORD PTR [ecx+eiz*2+0x2e0f87a1]
  421cca:	rcr    BYTE PTR [ecx-0x35],cl
  421ccd:	mov    ch,0xc1
  421ccf:	mov    ebp,edi
  421cd1:	imul   ecx,DWORD PTR [ecx+edx*1-0x3b],0x4c
  421cd6:	mov    bl,0x19
  421cd8:	aad    0x35
  421cda:	lods   eax,DWORD PTR ds:[esi]
  421cdb:	jae    0x421cb1
  421cdd:	(bad)  
  421cde:	hlt    
  421cdf:	mov    ch,0x8f
  421ce1:	push   edi
  421ce2:	ins    DWORD PTR es:[edi],dx
  421ce3:	sahf   
  421ce4:	repz push ebx
  421ce6:	int3   
  421ce7:	sbb    al,0x9d
  421ce9:	cli    
  421cea:	fisub  WORD PTR [ebx]
  421cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ced:	jge    0x421d5a
  421cef:	mov    ch,0x27
  421cf1:	test   eax,0x53754c61
  421cf6:	je     0x421d5a
  421cf8:	or     DWORD PTR [esi],ecx
  421cfa:	or     DWORD PTR [ebx+0x40],eax
  421cfd:	in     eax,0x1f
  421cff:	mov    ?,eax
  421d01:	test   DWORD PTR [edx],esp
  421d03:	xchg   edi,eax
  421d04:	pop    ecx
  421d05:	jecxz  0x421d7c
  421d07:	out    dx,eax
  421d08:	and    ebp,edx
  421d0a:	mov    gs:0xba77849d,eax
  421d10:	adc    DWORD PTR [ebp-0x58],0x72
  421d14:	push   ss
  421d15:	lahf   
  421d16:	int    0x10
  421d18:	push   esi
  421d19:	fwait
  421d1a:	(bad)  
  421d1b:	cmp    eax,0x2e3aba8b
  421d20:	pop    ecx
  421d21:	mov    BYTE PTR [edi+0x50],0x34
  421d25:	les    eax,FWORD PTR ds:0xeef093c2
  421d2b:	aad    0x5
  421d2d:	(bad)  
  421d30:	out    0x40,al
  421d32:	test   al,0x1a
  421d34:	add    cl,BYTE PTR [ebp+0x40ac36e8]
  421d3a:	xchg   ecx,eax
  421d3b:	xchg   edx,eax
  421d3c:	xchg   ecx,eax
  421d3d:	pop    edx
  421d3e:	pop    ebx
  421d3f:	push   es
  421d40:	and    cl,BYTE PTR [ecx-0x4e]
  421d43:	loope  0x421cfe
  421d45:	adc    BYTE PTR [ecx+0x35789439],dl
  421d4b:	sbb    cl,BYTE PTR [edi]
  421d4d:	out    0x10,al
  421d4f:	sub    BYTE PTR [ebx-0x2590bff9],ah
  421d55:	iret   
  421d56:	sahf   
  421d57:	mov    WORD PTR [edx],ss
  421d59:	(bad)  
  421d5a:	test   al,0xa2
  421d5c:	and    al,0xb
  421d5e:	aaa    
  421d5f:	jo     0x421d6c
  421d61:	fidiv  WORD PTR [ebx-0x7fee9ea0]
  421d67:	(bad)  
  421d68:	or     bl,BYTE PTR [esi+eax*4+0x36418048]
  421d6f:	jno    0x421dcf
  421d71:	aaa    
  421d72:	fstp   DWORD PTR [eax+eax*4-0x33ac3305]
  421d79:	aas    
  421d7a:	test   al,0x23
  421d7c:	sub    BYTE PTR [esi-0x4c23e5bf],bl
  421d82:	daa    
  421d83:	cmp    DWORD PTR [ebx-0x63],eax
  421d86:	lods   eax,DWORD PTR ds:[esi]
  421d87:	pop    esp
  421d88:	enter  0xbfd1,0x49
  421d8c:	mov    ebp,0xf2ea8b5
  421d91:	rcl    esp,0x8c
  421d94:	jl     0x421d6c
  421d96:	push   esi
  421d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d98:	mov    bl,0x93
  421d9a:	das    
  421d9b:	outs   dx,DWORD PTR ds:[esi]
  421d9c:	mov    ebx,0x1e7347fd
  421da1:	mov    WORD PTR [edx-0x16d05235],gs
  421da7:	in     eax,0x88
  421da9:	icebp  
  421daa:	fnstcw WORD PTR [edi+0x6bff93b5]
  421db0:	inc    ebx
  421db1:	and    ebp,DWORD PTR [eax]
  421db3:	div    DWORD PTR [eax+ebp*4+0x7fd161e8]
  421dba:	mov    eax,eax
  421dbc:	xor    BYTE PTR [edi],0xd8
  421dbf:	jo     0x421e0e
  421dc1:	pop    DWORD PTR [ecx]
  421dc3:	push   ss
  421dc4:	je     0x421dcf
  421dc6:	sub    ecx,esp
  421dc8:	retf   
  421dc9:	sub    BYTE PTR [ecx-0x7],bl
  421dcc:	sub    eax,0xd1688e63
  421dd1:	inc    DWORD PTR ds:0x9d63f2aa
  421dd7:	xor    DWORD PTR [ebx+0x7c1ce626],edi
  421ddd:	dec    esi
  421dde:	dec    ebx
  421ddf:	sbb    al,0xe3
  421de1:	into   
  421de2:	(bad)  
  421de3:	mov    edx,0x5b1c1c4
  421de8:	cdq    
  421de9:	lahf   
  421dea:	or     al,0x18
  421dec:	mov    ebp,0xc2fcd369
  421df1:	sub    BYTE PTR [edx+0x15],0xa8
  421df5:	sub    dh,dl
  421df7:	rcr    ebx,1
  421df9:	jp     0x421da1
  421dfb:	add    dh,ah
  421dfd:	aam    0xcf
  421dff:	sar    BYTE PTR [ebx-0x65],0x94
  421e03:	out    0x3d,al
  421e05:	aas    
  421e06:	and    eax,0xd1a5d01c
  421e0b:	scas   al,BYTE PTR es:[edi]
  421e0c:	pop    ds
  421e0d:	sbb    esi,DWORD PTR [edi+0x4765e319]
  421e13:	and    eax,0x10ca5ffd
  421e18:	sub    eax,DWORD PTR [ebp+ecx*2+0x1cfa385a]
  421e1f:	jnp    0x421e87
  421e21:	retf   
  421e22:	cmp    edx,0xf70ebc4
  421e28:	jp     0x421ea0
  421e2a:	pop    ds
  421e2b:	rol    DWORD PTR [eax],cl
  421e2d:	nop
  421e2e:	push   ds
  421e2f:	ret    
  421e30:	sub    eax,0x63cc27c5
  421e35:	stos   DWORD PTR es:[edi],eax
  421e36:	fcmovu st,st(0)
  421e38:	sbb    eax,0xdb821630
  421e3d:	sub    al,0x23
  421e3f:	dec    esp
  421e40:	ins    BYTE PTR es:[edi],dx
  421e41:	add    edx,DWORD PTR [ecx+0x20a9b469]
  421e47:	out    dx,al
  421e48:	add    edi,esp
  421e4a:	icebp  
  421e4b:	scas   eax,DWORD PTR es:[edi]
  421e4c:	jmp    0xee45:0x484a0a81
  421e53:	mov    al,0xca
  421e55:	push   eax
  421e56:	test   ebx,0x54154b86
  421e5c:	push   ebx
  421e5d:	je     0x421e9a
  421e5f:	ds xchg edi,eax
  421e61:	mov    al,ds:0xc9573b74
  421e66:	xchg   esi,eax
  421e67:	inc    edx
  421e68:	out    0x2f,al
  421e6a:	mov    eax,0x919fd14f
  421e6f:	je     0x421ee9
  421e71:	ss cli 
  421e73:	sbb    BYTE PTR [ebx+esi*1-0x54],cl
  421e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e78:	add    BYTE PTR [ebx+0x29bc6ebd],bl
  421e7e:	lock add edx,DWORD PTR [ebp+0x76]
  421e82:	dec    edx
  421e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e84:	sub    al,0x29
  421e86:	xchg   esp,eax
  421e87:	mov    esp,0xb96fb614
  421e8c:	adc    DWORD PTR [ecx+0x5e3220f],esi
  421e92:	mov    ch,0xc
  421e94:	sub    eax,0x4841817c
  421e99:	iret   
  421e9a:	test   DWORD PTR [edi],esi
  421e9c:	jae    0x421e35
  421e9e:	and    ebp,DWORD PTR [eax+0x55]
  421ea1:	jmp    DWORD PTR [edi+0x1146096d]
  421ea7:	mov    ds:0x264e8681,al
  421eac:	pop    ebp
  421ead:	xor    dh,BYTE PTR [ecx+0x4d4d0d60]
  421eb3:	cmp    BYTE PTR [ebx-0x1],0x4b
  421eb7:	pop    ss
  421eb8:	adc    ebx,DWORD PTR [ecx]
  421eba:	mov    ds:0xe52c21bc,eax
  421ebf:	in     eax,dx
  421ec0:	cli    
  421ec1:	push   ecx
  421ec2:	(bad)  
  421ec3:	jmp    0x421f34
  421ec5:	adc    al,BYTE PTR [ebp+ebx*8-0x7f4147f]
  421ecc:	call   0xf6ff:0x92d04423
  421ed3:	scas   eax,DWORD PTR es:[edi]
  421ed4:	jmp    0x29586f25
  421ed9:	out    dx,al
  421eda:	adc    edi,DWORD PTR [ebx]
  421edc:	scas   al,BYTE PTR es:[edi]
  421edd:	mov    DWORD PTR [esp+esi*4],esp
  421ee0:	jmp    0xe5638b86
  421ee5:	jno    0x421f58
  421ee7:	ret    
  421ee8:	mov    edx,0x7fab64f7
  421eed:	loop   0x421f0a
  421eef:	mov    ah,0x36
  421ef1:	sbb    ecx,ebx
  421ef3:	jecxz  0x421f2e
  421ef5:	js     0x421ed2
  421ef7:	sti    
  421ef8:	jg     0x421f71
  421efa:	hlt    
  421efb:	jns    0x421f5d
  421efd:	xor    al,BYTE PTR [ebp+esi*8+0xade34cc]
  421f04:	into   
  421f05:	jge    0x421ec8
  421f07:	inc    eax
  421f08:	xor    edi,ebp
  421f0a:	xor    DWORD PTR [eax],ebx
  421f0c:	pushf  
  421f0d:	or     al,0x22
  421f0f:	or     DWORD PTR [ebp+ebp*4-0x6d],ecx
  421f13:	inc    edi
  421f14:	bound  edx,QWORD PTR [edx]
  421f16:	retf   0x262a
  421f19:	daa    
  421f1a:	dec    ebp
  421f1b:	jae    0x421f55
  421f1d:	mov    cl,BYTE PTR [ebp-0x6ff3f547]
  421f23:	pop    esp
  421f24:	mov    edx,DWORD PTR [esp+edi*2]
  421f27:	fwait
  421f28:	sub    al,0xcd
  421f2a:	lahf   
  421f2b:	sti    
  421f2c:	mov    WORD PTR [edx],ds
  421f2e:	test   DWORD PTR [ecx-0x4938ae4a],eax
  421f34:	out    dx,eax
  421f35:	scas   eax,DWORD PTR es:[edi]
  421f36:	push   es
  421f37:	imul   DWORD PTR [eax+0x2b]
  421f3a:	pop    DWORD PTR [ebx-0x799f2f02]
  421f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f41:	push   eax
  421f42:	xchg   DWORD PTR [edx],eax
  421f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f45:	jbe    0x421fb3
  421f47:	push   ss
  421f48:	xor    bl,ch
  421f4a:	cmc    
  421f4b:	mov    ah,0xe7
  421f4d:	sbb    al,0x39
  421f4f:	lea    ecx,[eax]
  421f51:	into   
  421f52:	dec    ebp
  421f53:	mov    bh,cl
  421f55:	xor    al,0xb4
  421f57:	(bad)  
  421f58:	fucom  st(6)
  421f5a:	(bad)  [ebp-0x6ba0493a]
  421f60:	dec    edx
  421f61:	pusha  
  421f62:	int3   
  421f63:	mov    edi,0x8439d0b8
  421f68:	ins    DWORD PTR es:[edi],dx
  421f69:	jno    0x421f3c
  421f6b:	mov    WORD PTR [esi-0x31],cs
  421f6e:	dec    edi
  421f6f:	rcr    DWORD PTR [edx+0x5a],0x32
  421f73:	xor    bl,dh
  421f75:	jg     0x421fe8
  421f77:	cmc    
  421f78:	lahf   
  421f79:	lea    esi,[ecx-0x3f231e44]
  421f7f:	mov    cl,BYTE PTR [edi]
  421f81:	mov    DWORD PTR [esi-0x6c6cf083],ebx
  421f87:	jge    0x421fc1
  421f89:	retf   
  421f8a:	retf   0x1dc9
  421f8d:	xchg   DWORD PTR [ebx+ecx*8-0x7454ea19],eax
  421f94:	hlt    
  421f95:	iret   
  421f96:	gs jo  0x421f75
  421f99:	and    DWORD PTR [ebp-0x3c],edx
  421f9c:	mov    WORD PTR [esi+0x4b],gs
  421f9f:	cli    
  421fa0:	cdq    
  421fa1:	jae    0x421fea
  421fa3:	cmp    DWORD PTR [eax+0x25bcf5ba],esi
  421fa9:	sbb    bl,BYTE PTR [edi-0x4bb51dc3]
  421faf:	inc    esp
  421fb0:	xor    ebx,DWORD PTR [esi]
  421fb2:	sub    ch,BYTE PTR [edi]
  421fb4:	test   al,0x8e
  421fb6:	mov    edi,0xe9d65c36
  421fbb:	xchg   ebx,eax
  421fbc:	lods   eax,DWORD PTR ds:[esi]
  421fbd:	cli    
  421fbe:	mov    bl,0xe8
  421fc0:	cli    
  421fc1:	jne    0x421f47
  421fc3:	mov    dh,BYTE PTR [edi+0x34e25fec]
  421fc9:	xchg   esp,eax
  421fca:	stos   BYTE PTR es:[edi],al
  421fcb:	xor    al,0x4a
  421fcd:	or     BYTE PTR [edx],bl
  421fcf:	cmp    dh,bh
  421fd1:	repnz cmp al,0x6e
  421fd4:	cs mov esi,0x4095a4fc
  421fda:	cmp    DWORD PTR [esi],eax
  421fdc:	shr    ebx,0x47
  421fdf:	push   edi
  421fe0:	dec    edx
  421fe1:	fldln2 
  421fe3:	and    al,0xfc
  421fe5:	pop    ebp
  421fe6:	in     eax,0x26
  421fe8:	mov    WORD PTR [ebp-0x7b],gs
  421feb:	xchg   DWORD PTR [eax],eax
  421fed:	mov    edx,0xd0c50996
  421ff2:	xchg   edx,eax
  421ff3:	mov    eax,0x6dbf0e42
  421ff8:	push   ebp
  421ff9:	popa   
  421ffa:	dec    esi
  421ffb:	test   edx,ebp
  421ffd:	int3   
  421ffe:	push   esp
  421fff:	xchg   edi,eax
  422000:	sbb    al,0x97
  422002:	ins    BYTE PTR es:[edi],dx
  422003:	push   ebp
  422004:	inc    edi
  422005:	imul   eax,DWORD PTR [eax],0x0
	...
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0x3d160276
  422020:	ja     0x422081
  422022:	cdq    
  422023:	add    DWORD PTR [eax],eax
  422025:	lods   eax,DWORD PTR ds:[esi]
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    ch,bl
  42202a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42202b:	mov    bl,0x67
  42202d:	imul   edx,esi,0xa
  422030:	aad    0xc4
  422032:	push   es
  422033:	fistp  DWORD PTR [eax+eax*8-0x7f21505a]
  42203a:	jle    0x422028
  42203c:	cmp    al,0xec
  42203e:	push   esp
  42203f:	jp     0x42203f
  422041:	into   
  422042:	cdq    
  422043:	hlt    
  422044:	divps  xmm4,XMMWORD PTR [edi]
  422047:	sub    DWORD PTR [edi-0x75],0xde62a128
  42204e:	push   eax
  42204f:	pop    ds
  422050:	sub    esi,DWORD PTR [eax-0x48]
  422053:	int    0x16
  422055:	sahf   
  422056:	lock int3 
  422058:	push   ebp
  422059:	hlt    
  42205a:	dec    edi
  42205b:	out    dx,al
  42205c:	pop    ds
  42205d:	lea    eax,[ecx+0x5d3510e6]
  422063:	cmp    eax,0x9e45449e
  422068:	jg     0x422044
  42206a:	aad    0x9c
  42206c:	xlat   BYTE PTR ds:[ebx]
  42206d:	std    
  42206e:	mov    ebp,0xb143c86
  422073:	sbb    DWORD PTR [esp+edx*1-0x6434ba3a],edx
  42207a:	fidiv  DWORD PTR [ecx-0x2]
  42207d:	xor    BYTE PTR ds:0xbd35ffb1,bl
  422083:	dec    ebp
  422084:	lds    ebx,FWORD PTR [ebx-0x52]
  422087:	pop    gs
  422089:	mov    ebx,0xa705063e
  42208e:	mov    esi,0xd689821c
  422093:	lea    ebx,[ecx+esi*8+0x3c]
  422097:	dec    eax
  422098:	inc    ebp
  422099:	and    eax,0xf3cc9fd6
  42209e:	cmp    eax,0xb4d496b8
  4220a3:	mov    edx,0xb36cd8c2
  4220a8:	xor    BYTE PTR [ebp-0x349d9494],ch
  4220ae:	mov    al,0xd2
  4220b0:	scas   al,BYTE PTR es:[edi]
  4220b1:	loopne 0x42205d
  4220b3:	or     eax,0xb4eb87fa
  4220b8:	push   ebp
  4220b9:	(bad)  [edx-0x38]
  4220bc:	mov    ebx,0x1a6d633a
  4220c1:	xchg   ebp,eax
  4220c2:	popa   
  4220c3:	push   0x5f
  4220c5:	inc    ecx
  4220c6:	xor    DWORD PTR [edi+0x35],edi
  4220c9:	lods   eax,DWORD PTR ds:[esi]
  4220ca:	cs fadd st(3),st
  4220cd:	xchg   esi,esp
  4220cf:	cwde   
  4220d0:	adc    al,0xcb
  4220d2:	xchg   DWORD PTR [ebx+ebx*4],esp
  4220d5:	cdq    
  4220d6:	bound  ebp,QWORD PTR [edx]
  4220d8:	out    0x43,eax
  4220da:	mov    eax,ds:0x2108cbfb
  4220df:	(bad)  
  4220e0:	scas   al,BYTE PTR es:[edi]
  4220e1:	retf   0x6ee5
  4220e4:	fwait
  4220e5:	clc    
  4220e6:	pop    ebx
  4220e7:	repz mov ds:0x2846ec1c,eax
  4220ed:	fstp   TBYTE PTR [esi+0x3ba99ec7]
  4220f3:	jmp    0x4220fd
  4220f5:	xchg   edi,eax
  4220f6:	mov    dl,bh
  4220f8:	rol    BYTE PTR [esi-0xb],cl
  4220fb:	jbe    0x4220e8
  4220fd:	in     al,dx
  4220fe:	js     0x4220f2
  422100:	inc    ecx
  422101:	out    0x62,al
  422103:	dec    eax
  422104:	jecxz  0x422148
  422106:	call   0x690:0x5583501e
  42210d:	sub    edx,esp
  42210f:	(bad)  
  422111:	addr16 (bad) 
  422113:	xchg   ebp,eax
  422114:	das    
  422115:	mov    DWORD PTR [ecx],0xfb03e61
  42211b:	aad    0x89
  42211d:	mov    BYTE PTR [esi],cl
  42211f:	pusha  
  422120:	mov    eax,0x20034c54
  422125:	xchg   ebx,eax
  422126:	call   0x9afe0855
  42212b:	outs   dx,DWORD PTR ds:[esi]
  42212c:	push   edi
  42212d:	out    dx,al
  42212e:	adc    edx,DWORD PTR [ecx]
  422130:	shl    BYTE PTR [ebx],0x35
  422133:	gs pop esp
  422135:	pop    esi
  422136:	(bad)  [esi-0x2f]
  422139:	das    
  42213a:	sub    esi,DWORD PTR [edx]
  42213c:	outs   dx,DWORD PTR gs:[esi]
  42213e:	cmp    esi,DWORD PTR [edx]
  422140:	fstp   TBYTE PTR [edi+0x33]
  422143:	mov    ebp,0x60c61dc7
  422148:	and    al,0xe
  42214a:	push   esi
  42214b:	mov    esi,0xabc46282
  422150:	xor    DWORD PTR [edi*2+0x46e6a052],esi
  422157:	mov    ?,WORD PTR ds:0xe5ebd748
  42215d:	idiv   BYTE PTR [eax-0x5597f21a]
  422163:	sbb    edi,ebp
  422165:	or     al,0x1e
  422167:	js     0x422101
  422169:	mov    cl,al
  42216b:	mov    ecx,0x914b343d
  422170:	or     bh,BYTE PTR [ebp+0x59]
  422173:	out    dx,eax
  422174:	cmc    
  422175:	lock sub DWORD PTR [eax+0xb],edi
  422179:	adc    BYTE PTR [esi],ah
  42217b:	ret    
  42217c:	fisub  DWORD PTR [esi+0x6e]
  42217f:	pop    ebp
  422180:	call   0x2838:0x4368772a
  422187:	pop    esi
  422188:	cmp    eax,0x1802f631
  42218d:	inc    ecx
  42218e:	mov    eax,0xf30a8455
  422193:	std    
  422194:	pop    eax
  422195:	mov    cl,0xe1
  422197:	aaa    
  422198:	push   0x7fc92947
  42219d:	call   0x16eae404
  4221a2:	add    BYTE PTR [ebx+0x98177d7],dh
  4221a8:	xchg   ebp,eax
  4221a9:	sub    DWORD PTR [ebp-0x585ecacf],ebx
  4221af:	push   ebx
  4221b0:	adc    cl,ah
  4221b2:	(bad)  
  4221b3:	ja     0x422169
  4221b5:	push   ds
  4221b6:	inc    edx
  4221b7:	bound  eax,QWORD PTR [eax]
  4221b9:	ss aaa 
  4221bb:	pop    ds
  4221bc:	cwde   
  4221bd:	icebp  
  4221be:	imul   eax,ebp,0x20
  4221c1:	(bad)  [edi]
  4221c3:	sbb    DWORD PTR [ecx],eax
  4221c5:	scas   eax,DWORD PTR es:[edi]
  4221c6:	fs cs test eax,ebp
  4221ca:	mov    eax,0x2405e79
  4221cf:	leave  
  4221d0:	pushf  
  4221d1:	daa    
  4221d2:	shr    BYTE PTR [edx-0x70ad06fa],1
  4221d8:	mov    bl,0x7d
  4221da:	xor    al,0xa2
  4221dc:	add    eax,0x895b9b10
  4221e1:	inc    ecx
  4221e2:	int3   
  4221e3:	adc    ebp,DWORD PTR [ebx+0xf]
  4221e6:	mov    dh,0x55
  4221e8:	in     al,dx
  4221e9:	stos   BYTE PTR es:[edi],al
  4221ea:	test   al,0xdf
  4221ec:	daa    
  4221ed:	es xchg esp,eax
  4221ef:	fldenv [ebp-0x1]
  4221f2:	or     al,0x52
  4221f4:	add    eax,0xe197d011
  4221f9:	aam    0x35
  4221fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221fc:	inc    edi
  4221fd:	rcl    ch,0x8c
  422200:	jmp    0x5c774c85
  422205:	xor    al,0x94
  422207:	loop   0x422250
  422209:	pop    esi
  42220a:	mov    ebx,0xe0567d9
  42220f:	cmp    eax,0xd1da48ab
  422214:	mov    bh,ch
  422216:	pop    edx
  422217:	hlt    
  422218:	add    bh,dh
  42221a:	pop    ss
  42221b:	cli    
  42221c:	pop    ecx
  42221d:	dec    ecx
  42221e:	cli    
  42221f:	bndldx bnd1,[edx-0x28f69206]
  422226:	cld    
  422227:	adc    bl,ch
  422229:	cmp    esp,DWORD PTR [esi+0x5]
  42222c:	jge    0x4221fa
  42222e:	mov    edi,0x9f6068b8
  422233:	adc    DWORD PTR [edx+0x552e5353],edi
  422239:	into   
  42223a:	(bad)  
  42223b:	inc    eax
  42223c:	pop    ebp
  42223d:	pop    ss
  42223e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42223f:	add    ecx,DWORD PTR ds:[edi+0x25]
  422243:	aam    0xcb
  422245:	pop    ss
  422246:	imul   ebx,DWORD PTR [edx],0x49d151d2
  42224c:	in     al,dx
  42224d:	jns    0x422202
  42224f:	daa    
  422250:	idiv   DWORD PTR [edx-0x76]
  422253:	stc    
  422254:	xor    al,0xa
  422256:	and    al,0x2f
  422258:	out    dx,al
  422259:	or     ebx,DWORD PTR [ecx+0x1]
  42225c:	jbe    0x422251
  42225e:	shl    BYTE PTR [edx],0x31
  422261:	int    0x44
  422263:	push   cs
  422264:	lods   al,BYTE PTR ds:[esi]
  422265:	js     0x4222a8
  422267:	fisub  DWORD PTR fs:[edi]
  42226a:	inc    DWORD PTR [ebp-0x65e65b97]
  422270:	cmp    dl,BYTE PTR [edi+0x32]
  422273:	in     al,0xb5
  422275:	cmp    edx,DWORD PTR [eax]
  422277:	add    al,0x43
  422279:	sbb    DWORD PTR [edi-0x6e3c0151],ebx
  42227f:	or     ah,BYTE PTR [edi]
  422281:	test   eax,0x5911f57
  422286:	pop    ebx
  422287:	in     al,0x66
  422289:	pop    ecx
  42228a:	stc    
  42228b:	rcl    dh,1
  42228d:	sti    
  42228e:	mov    DWORD PTR [ebx-0x21],ecx
  422291:	test   BYTE PTR [esp+ebp*8-0x11],0xda
  422296:	arpl   WORD PTR [edi],di
  422298:	jne    0x4222dd
  42229a:	dec    bh
  42229c:	mov    dh,0xdf
  42229e:	dec    esp
  42229f:	pop    esi
  4222a0:	call   esi
  4222a2:	dec    ebx
  4222a3:	or     al,BYTE PTR cs:[ebp-0x192d50d9]
  4222aa:	mov    ch,0x77
  4222ac:	test   al,0xde
  4222ae:	cli    
  4222af:	ins    BYTE PTR es:[edi],dx
  4222b0:	inc    ebp
  4222b1:	cmc    
  4222b2:	add    eax,0x5b782e73
  4222b7:	clc    
  4222b8:	cld    
  4222b9:	pusha  
  4222ba:	retf   0x7ca7
  4222bd:	jb     0x4222d7
  4222bf:	shl    BYTE PTR [edi+0x3f],1
  4222c2:	mov    ebp,0x353cb161
  4222c7:	fnstcw WORD PTR ds:0x7076629e
  4222cd:	jge    0x42229b
  4222cf:	icebp  
  4222d0:	inc    eax
  4222d1:	es in  eax,0xc9
  4222d4:	cld    
  4222d5:	dec    edx
  4222d6:	bswap  eax
  4222d8:	js     0x422270
  4222da:	mov    bl,bh
  4222dc:	mov    eax,ds:0x9e5b7d45
  4222e1:	out    dx,al
  4222e2:	(bad)  
  4222e3:	out    0x6f,eax
  4222e5:	xchg   edx,eax
  4222e6:	std    
  4222e7:	xchg   ecx,eax
  4222e8:	outs   dx,DWORD PTR ds:[esi]
  4222e9:	dec    edi
  4222ea:	dec    eax
  4222eb:	xor    BYTE PTR [edi],ah
  4222ed:	loope  0x422293
  4222ef:	enter  0xda5e,0x9c
  4222f3:	pop    edx
  4222f4:	and    BYTE PTR [edi+0x7778fe78],dl
  4222fa:	fwait
  4222fb:	sbb    WORD PTR [ebx+ecx*2],0xffd0
  422300:	out    0x63,eax
  422302:	imul   ecx,DWORD PTR [edi+0x23]
  422306:	xchg   ebp,eax
  422307:	xor    DWORD PTR [ebp+0x29],ebx
  42230a:	pop    ss
  42230b:	fcom   QWORD PTR [ecx+0x20]
  42230e:	loope  0x4222fe
  422310:	out    0x6f,eax
  422312:	add    ebx,DWORD PTR [eax+0x2]
  422315:	and    ebx,DWORD PTR [esp+ebp*8+0x1f]
  422319:	and    eax,DWORD PTR [eax]
  42231b:	push   eax
  42231c:	in     eax,dx
  42231d:	call   0xd912f103
  422322:	cmp    dh,dl
  422324:	sub    bh,bh
  422326:	xor    DWORD PTR [ebx-0x7a9d7839],ebp
  42232c:	push   ecx
  42232d:	ficomp DWORD PTR [edi-0x29]
  422330:	ds pop edx
  422332:	call   0xd54e:0x147fec7d
  422339:	shl    DWORD PTR [ecx-0x75581884],0x9a
  422340:	ins    DWORD PTR es:[edi],dx
  422341:	mov    eax,0x229088d7
  422346:	dec    ebp
  422347:	js     0x4222dc
  422349:	out    0x18,al
  42234b:	shr    BYTE PTR [edx],0x3e
  42234e:	cmc    
  42234f:	inc    ebx
  422350:	fs pushf 
  422352:	jmp    0xfe8b5ec0
  422357:	xlat   BYTE PTR ds:[ebx]
  422358:	daa    
  422359:	lds    edx,FWORD PTR [ebx-0x7b1d7600]
  42235f:	dec    ecx
  422360:	xchg   BYTE PTR [esi+esi*2],bl
  422363:	and    ah,BYTE PTR [edi+ecx*4+0x39]
  422367:	fisttp DWORD PTR [bp-0x1d5b]
  42236c:	pop    ebp
  42236d:	sub    BYTE PTR ds:0xd005bc2b,bl
  422373:	inc    eax
  422374:	cwde   
  422375:	add    bh,BYTE PTR ds:0xa8bf9797
  42237b:	dec    eax
  42237c:	retf   
  42237d:	fdiv   DWORD PTR [ecx-0x59]
  422380:	(bad)  
  422381:	pop    ebx
  422382:	imul   edx
  422384:	mov    ?,WORD PTR [edx]
  422386:	call   0x680aaa25
  42238b:	sub    eax,0x382ecc42
  422390:	pop    ebp
  422391:	mov    al,0xb5
  422393:	push   esp
  422394:	pop    ebx
  422395:	lea    esi,[edx+ecx*8-0x22]
  422399:	bnd jne 0x4223d3
  42239c:	cmp    DWORD PTR [esi],0x68
  42239f:	pushf  
  4223a0:	mov    al,0x39
  4223a2:	mov    esi,0x2ce48911
  4223a7:	rol    BYTE PTR [ebx],1
  4223a9:	xlat   BYTE PTR ds:[ebx]
  4223aa:	imul   ecx,ebx,0x1aa41dcf
  4223b0:	les    edx,FWORD PTR gs:[esp+ebp*8]
  4223b4:	mov    ch,0xa1
  4223b6:	fcmove st,st(6)
  4223b8:	fcomi  st,st(7)
  4223ba:	aas    
  4223bb:	sub    ch,BYTE PTR [edx+ebx*4+0x3b399d36]
  4223c2:	addr16 push 0xe295661c
  4223c8:	int    0x67
  4223ca:	mov    bl,0xbc
  4223cc:	inc    esi
  4223cd:	jae    0x4223f5
  4223cf:	sbb    BYTE PTR [ebp+ebx*4+0x4b73547c],ah
	...
  4223de:	add    BYTE PTR [eax],al
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	fsubr  DWORD PTR [edx+ecx*2]
  4223f0:	jnp    0x4223fe
  4223f2:	popf   
  4223f3:	add    DWORD PTR [eax],eax
  4223f5:	lods   eax,DWORD PTR ds:[esi]
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    dl,ch
  4223fa:	fld    QWORD PTR [ebx-0x25]
  4223fd:	mov    bh,0xf5
  4223ff:	jae    0x4223c0
  422401:	mov    sp,0xe462
  422405:	jb     0x422413
  422407:	fild   DWORD PTR [edi+0x7]
  42240a:	cmp    ecx,DWORD PTR [eax]
  42240c:	mov    ebx,0x563d68cf
  422411:	scas   al,BYTE PTR es:[edi]
  422412:	pop    edx
  422413:	add    eax,0x8a51a7e7
  422418:	jge    0x422425
  42241a:	jns    0x422492
  42241c:	cmc    
  42241d:	xchg   ebp,eax
  42241e:	lods   eax,DWORD PTR gs:[esi]
  422420:	icebp  
  422421:	inc    ebx
  422422:	sti    
  422423:	into   
  422424:	adc    edi,DWORD PTR [ebx]
  422426:	fdiv   DWORD PTR [edx-0x470c1f4c]
  42242c:	jbe    0x422413
  42242e:	and    BYTE PTR [edx+ecx*2+0x29af7d4],cl
  422435:	aaa    
  422436:	push   edx
  422437:	gs int3 
  422439:	mov    bl,0x8d
  42243b:	mov    al,ds:0x66fe2ea7
  422440:	hlt    
  422441:	retf   0xd7cd
  422444:	scas   al,BYTE PTR es:[edi]
  422445:	icebp  
  422446:	inc    ebx
  422447:	lods   al,BYTE PTR ds:[esi]
  422448:	xchg   ebp,eax
  422449:	sub    BYTE PTR [edx-0x1ba20d69],al
  42244f:	push   ebp
  422450:	or     DWORD PTR [eax+0x4dbba670],0xbacc0d3c
  42245a:	hlt    
  42245b:	das    
  42245c:	int    0xd5
  42245e:	cwde   
  42245f:	cmp    BYTE PTR [ebx],bl
  422461:	sub    DWORD PTR [edi+0x7d05d480],ebp
  422467:	mov    ecx,0xf1799b4d
  42246c:	adc    esp,esi
  42246e:	fst    DWORD PTR [ebx]
  422470:	push   edx
  422471:	pop    eax
  422472:	mov    ds:0xfa9fa6bb,eax
  422477:	mov    bl,0xc2
  422479:	pop    esp
  42247a:	call   0x52e180af
  42247f:	ret    
  422480:	(bad)  
  422481:	or     bh,BYTE PTR [edx-0x4984cf70]
  422487:	adc    ebp,edx
  422489:	dec    eax
  42248a:	pushf  
  42248b:	and    BYTE PTR [esi+0x72],al
  42248e:	inc    esi
  42248f:	sub    ah,0x34
  422492:	out    0x6d,al
  422494:	or     DWORD PTR [ebx+0x235aa4cc],0xb34fb4b
  42249e:	mov    WORD PTR [ebp+0xc],ds
  4224a1:	hlt    
  4224a2:	lds    edi,FWORD PTR [ebp+0x27]
  4224a5:	jo     0x4224d4
  4224a7:	es mov ss,WORD PTR ss:[edi+edi*2-0x6b]
  4224ad:	fldenv [edx]
  4224af:	mov    al,ds:0xd8dc2772
  4224b4:	sbb    al,0x72
  4224b6:	fdiv   DWORD PTR [ebp+0x7c]
  4224b9:	xchg   ebx,eax
  4224ba:	jecxz  0x42244a
  4224bc:	adc    cl,BYTE PTR [ebp-0x64]
  4224bf:	cmp    eax,0xdeee3440
  4224c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c5:	mov    bh,0x50
  4224c7:	fwait
  4224c8:	aas    
  4224c9:	inc    eax
  4224ca:	or     ebx,DWORD PTR [esp+eiz*4-0x10]
  4224ce:	mov    edx,0xc38b135
  4224d3:	add    BYTE PTR [eax-0x40],dl
  4224d6:	fistp  DWORD PTR ds:0x6b8d95e8
  4224dc:	xchg   edi,eax
  4224dd:	in     al,dx
  4224de:	mov    ds:0xe43ebe27,al
  4224e3:	pop    edx
  4224e4:	pop    eax
  4224e5:	mov    al,0xcb
  4224e7:	push   ecx
  4224e8:	add    al,0xd4
  4224ea:	xor    ecx,ebp
  4224ec:	sahf   
  4224ed:	adc    DWORD PTR cs:[esi+esi*2-0x11],esi
  4224f2:	cmp    eax,0x14bd6d31
  4224f7:	mov    BYTE PTR [edi+esi*2+0x5a],dh
  4224fb:	jmp    0x422490
  4224fd:	push   eax
  4224fe:	xchg   ecx,eax
  4224ff:	sar    edi,1
  422501:	sub    al,0x4f
  422503:	lea    edx,[edi-0x42b69dc0]
  422509:	push   esp
  42250a:	pusha  
  42250b:	push   ss
  42250c:	scas   eax,DWORD PTR es:[edi]
  42250d:	push   0x4e
  42250f:	adc    al,ah
  422511:	mov    ebp,0x6e569e14
  422516:	and    BYTE PTR [ebp+0x575c01a5],al
  42251c:	xchg   ecx,eax
  42251d:	neg    ch
  42251f:	in     al,0x1b
  422521:	mov    cs,ecx
  422523:	or     DWORD PTR [esi+0x611b229f],ecx
  422529:	in     al,dx
  42252a:	loope  0x42250a
  42252c:	sbb    DWORD PTR [eax+edi*8-0x4e1dabeb],esp
  422533:	sub    DWORD PTR ds:0xcfdbc6f4,ebx
  422539:	das    
  42253a:	inc    edx
  42253b:	ja     0x422560
  42253d:	rol    BYTE PTR [ebx+0x78dbb79c],1
  422543:	mov    al,ds:0xa48b3c42
  422548:	clc    
  422549:	sub    DWORD PTR [esi-0x3e2c7f38],ebp
  42254f:	jno    0x422593
  422551:	sub    BYTE PTR [eax],ch
  422553:	sbb    al,0xba
  422555:	outs   dx,DWORD PTR ds:[esi]
  422556:	mov    dh,0xdd
  422558:	mov    al,0xd2
  42255a:	(bad)  
  42255b:	xor    eax,0x92fe9c5e
  422560:	retf   
  422561:	(bad)  
  422562:	outs   dx,BYTE PTR ds:[esi]
  422563:	mov    WORD PTR [edx+eax*1],?
  422566:	push   0x2f397446
  42256b:	jg     0x42257e
  42256d:	mov    dl,0xf0
  42256f:	add    ebp,0xaf6cb97b
  422575:	push   edx
  422576:	add    DWORD PTR [esp+edx*8+0x26],esi
  42257a:	or     esi,DWORD PTR [edi+ebp*4]
  42257d:	mov    edi,0xc2796330
  422582:	inc    edx
  422583:	push   ebx
  422584:	cld    
  422585:	inc    esi
  422586:	pop    esp
  422587:	sti    
  422588:	cs mov bl,0xa7
  42258b:	cli    
  42258c:	pop    ebx
  42258d:	sub    al,0x1f
  42258f:	xor    eax,0xefe759ed
  422594:	jecxz  0x42254b
  422596:	or     dh,BYTE PTR [edi+0x37]
  422599:	(bad)  
  42259a:	mov    ds:0xa3d072f5,al
  42259f:	xchg   edi,eax
  4225a0:	cld    
  4225a1:	push   ss
  4225a2:	xchg   ebx,eax
  4225a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a4:	sub    al,0xa3
  4225a6:	xor    DWORD PTR [eax-0x33d0f168],edi
  4225ac:	push   ds
  4225ad:	inc    ebx
  4225ae:	aad    0x16
  4225b0:	xor    dl,BYTE PTR [ebx+0x1cadca52]
  4225b6:	mov    al,0x5a
  4225b8:	mov    ch,0x7e
  4225ba:	(bad)  
  4225bb:	xor    BYTE PTR [esi-0x46],ah
  4225be:	arpl   WORD PTR [edi+0x28458054],ax
  4225c4:	pop    ss
  4225c5:	fs jge 0x42257a
  4225c8:	or     esi,DWORD PTR [ebp+0x2357cf42]
  4225ce:	shl    edx,1
  4225d0:	push   ebx
  4225d1:	into   
  4225d2:	std    
  4225d3:	ins    DWORD PTR es:[edi],dx
  4225d4:	dec    esi
  4225d5:	sbb    bh,BYTE PTR [esi-0x2eecd8a6]
  4225db:	push   ss
  4225dc:	hlt    
  4225dd:	xor    bl,bl
  4225df:	dec    edx
  4225e0:	aas    
  4225e1:	outs   dx,BYTE PTR ds:[esi]
  4225e2:	popf   
  4225e3:	dec    ebp
  4225e4:	inc    eax
  4225e5:	pop    ds
  4225e6:	stos   DWORD PTR es:[edi],eax
  4225e7:	add    eax,edi
  4225e9:	call   0xcda75073
  4225ee:	add    dl,BYTE PTR [eax+0x7d32164f]
  4225f4:	in     al,0x73
  4225f6:	xchg   ebx,eax
  4225f7:	int    0xd2
  4225f9:	into   
  4225fa:	int3   
  4225fb:	xchg   esp,eax
  4225fc:	stos   DWORD PTR es:[edi],eax
  4225fd:	fisubr DWORD PTR [ebx+0x72]
  422600:	scas   eax,DWORD PTR es:[edi]
  422601:	sbb    BYTE PTR [ebx-0x2],ah
  422604:	cwde   
  422605:	addr16 mov edi,0xb4b6373c
  42260b:	in     eax,dx
  42260c:	mov    dh,BYTE PTR [ebp-0x425552ea]
  422612:	inc    esp
  422613:	fnop   
  422615:	pop    ecx
  422616:	in     eax,dx
  422617:	into   
  422618:	mov    esp,0x3dd97d7a
  42261d:	mov    ecx,0xba0fba7b
  422622:	loop   0x4225c9
  422624:	sub    eax,0x7775eaaf
  422629:	add    BYTE PTR [edi+0x71],dh
  42262c:	ror    BYTE PTR [ecx+0x38ba8a5c],0x71
  422633:	xchg   esi,eax
  422634:	mov    ebp,0x6d94947b
  422639:	xchg   esp,eax
  42263a:	cmp    edx,DWORD PTR cs:[edi+0x32]
  42263e:	jno    0x4225d7
  422640:	sub    ebp,DWORD PTR [esi]
  422642:	xchg   edx,eax
  422643:	test   eax,0x228f7742
  422648:	(bad)  [edx+0x70ae18ae]
  42264e:	jge    0x4226ba
  422650:	mov    eax,ds:0xe96ec2c1
  422655:	push   ebp
  422656:	push   ebp
  422657:	jmp    0xfb2:0xc4eae229
  42265e:	outs   dx,DWORD PTR ds:[esi]
  42265f:	arpl   ax,bx
  422661:	push   0x2e
  422663:	xchg   DWORD PTR [edi+esi*8+0x7bfb2914],edx
  42266a:	xor    dh,0x15
  42266d:	cmc    
  42266e:	dec    ebp
  42266f:	rol    BYTE PTR [esi],0x17
  422672:	adc    al,0x78
  422674:	mov    dl,0x20
  422676:	test   al,0xf5
  422678:	push   edi
  422679:	test   eax,0x2f96e56f
  42267e:	pop    ebx
  42267f:	outs   dx,BYTE PTR ds:[esi]
  422680:	add    eax,DWORD PTR [ebp+0x784ef598]
  422686:	std    
  422687:	or     ebp,DWORD PTR [esi]
  422689:	mov    BYTE PTR [eax+0x40],dh
  42268c:	out    0x6e,al
  42268e:	cmp    DWORD PTR [ebx+0x7674e7ef],ecx
  422694:	sahf   
  422695:	cmp    al,0xf5
  422697:	inc    edi
  422698:	xchg   esi,eax
  422699:	sub    al,dh
  42269b:	aas    
  42269c:	je     0x4226f4
  42269e:	dec    esp
  42269f:	(bad)  
  4226a1:	or     eax,0x2d76a82d
  4226a6:	stos   BYTE PTR es:[edi],al
  4226a7:	sbb    esi,DWORD PTR [ebx-0x62]
  4226aa:	in     al,0x42
  4226ac:	push   ss
  4226ad:	xor    dl,cl
  4226af:	lock dec esi
  4226b1:	sbb    al,0x96
  4226b3:	adc    al,0xc2
  4226b5:	jns    0x422673
  4226b7:	or     DWORD PTR [ecx],ebx
  4226b9:	daa    
  4226ba:	mov    ebp,0x5f379d9b
  4226bf:	aad    0xab
  4226c1:	stos   DWORD PTR es:[edi],eax
  4226c2:	or     ah,BYTE PTR [edx-0x7f0c118b]
  4226c8:	ss jnp 0x4226ba
  4226cb:	jae    0x422709
  4226cd:	fstp   QWORD PTR [eax-0x16c8020c]
  4226d3:	(bad)  
  4226d4:	aaa    
  4226d5:	mov    cl,0x47
  4226d7:	dec    eax
  4226d8:	adc    ecx,DWORD PTR [ecx+0x4c]
  4226db:	pop    es
  4226dc:	fwait
  4226dd:	enter  0x3be0,0xfc
  4226e1:	and    edi,DWORD PTR [ecx+0x19]
  4226e4:	xor    ecx,DWORD PTR [ecx]
  4226e6:	mov    al,ds:0x56b50aab
  4226eb:	xchg   ebp,esi
  4226ed:	and    BYTE PTR [ebp+0x19b2f46],bl
  4226f3:	arpl   WORD PTR [edi-0x583d0e40],bx
  4226f9:	stos   BYTE PTR es:[edi],al
  4226fa:	ret    0x8b4b
  4226fd:	sub    al,0x3b
  4226ff:	fwait
  422700:	scas   al,BYTE PTR es:[edi]
  422701:	iret   
  422702:	idiv   DWORD PTR [edi+edx*4+0x3a]
  422706:	ret    
  422707:	push   ss
  422708:	fs ja  0x422781
  42270b:	test   DWORD PTR [ebx],ebp
  42270d:	aam    0xe3
  42270f:	or     ebx,DWORD PTR [edx+0x78f4200d]
  422715:	push   ss
  422716:	xor    edx,0x3c
  422719:	imul   eax,ebp,0xffffffac
  42271c:	ins    BYTE PTR es:[edi],dx
  42271d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42271e:	loop   0x4226a0
  422720:	fstsw  WORD PTR [ecx+0x23]
  422724:	aam    0xb3
  422726:	fsubrp st(0),st
  422728:	test   al,0xa7
  42272a:	mov    dl,0x41
  42272c:	hlt    
  42272d:	pop    edx
  42272e:	(bad)  
  42272f:	stc    
  422730:	push   0xd53d42e8
  422735:	inc    ecx
  422736:	inc    edi
  422737:	mov    cl,0x7b
  422739:	psrld  mm2,QWORD PTR [esi]
  42273c:	mov    eax,ds:0x28ce964f
  422741:	fcomp  DWORD PTR [esi-0x4e]
  422744:	aam    0x8b
  422746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422747:	mov    ebx,0xaa89eb75
  42274c:	sub    bl,ah
  42274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274f:	stos   DWORD PTR es:[edi],eax
  422750:	pop    ss
  422751:	sbb    al,0x30
  422753:	mov    DWORD PTR [edi],ebx
  422755:	arpl   di,di
  422757:	pop    es
  422758:	push   es
  422759:	mov    ecx,0x20892187
  42275e:	jbe    0x422759
  422760:	xlat   BYTE PTR ds:[ebx]
  422761:	jl     0x422759
  422763:	xchg   ebp,eax
  422764:	and    eax,0x383ffed5
  422769:	pop    esi
  42276a:	inc    esi
  42276b:	mov    bh,0xfe
  42276d:	mov    edi,0x1933e9bf
  422772:	loopne 0x422720
  422774:	xchg   esp,eax
  422775:	scas   al,BYTE PTR es:[edi]
  422776:	pop    esi
  422777:	mov    bl,0xad
  422779:	jno    0x422717
  42277b:	mov    bl,ch
  42277d:	cmp    eax,0x9c9ae6d7
  422782:	mov    al,0xd7
  422784:	rol    BYTE PTR [edi+0x4e],cl
  422787:	lods   eax,DWORD PTR ds:[esi]
  422788:	dec    ecx
  422789:	aaa    
  42278a:	jle    0x422737
  42278c:	inc    eax
  42278d:	imul   ebp,DWORD PTR [ebp+0x48],0x78
  422791:	sahf   
  422792:	inc    ebp
  422793:	and    eax,DWORD PTR [esi+0x39]
  422796:	mov    ebp,0x6ff14bcf
  42279b:	mov    cl,0xd4
  42279d:	fsubr  DWORD PTR [ebx+0x29f55ebb]
  4227a3:	loope  0x422727
  4227a5:	add    al,0x0
	...
  4227af:	add    BYTE PTR [eax],al
  4227b1:	addr16 jne 0x422780
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	pop    ecx
  4227be:	in     eax,0x96
  4227c0:	ret    0xa0b9
  4227c3:	add    DWORD PTR [eax],eax
  4227c5:	lods   eax,DWORD PTR ds:[esi]
  4227c6:	add    eax,DWORD PTR [eax]
  4227c8:	add    BYTE PTR [ecx-0x64a8c5a8],cl
  4227ce:	mov    esp,DWORD PTR [eax-0x57]
  4227d1:	aam    0x74
  4227d3:	mov    BYTE PTR [eax+ebx*1+0x3d],dl
  4227d7:	lea    esp,[ecx-0x5df8cac6]
  4227dd:	mov    ch,BYTE PTR [eax-0x1bcb9d9b]
  4227e3:	sub    BYTE PTR [ebp-0x24],al
  4227e6:	fld    TBYTE PTR [esi+0x47e68f82]
  4227ec:	mov    ebp,0xfe76ad55
  4227f1:	sub    DWORD PTR [edi-0x71],edi
  4227f4:	ror    ebp,1
  4227f6:	jns    0x422868
  4227f8:	jmp    0x422780
  4227fa:	add    esi,edi
  4227fc:	fadd   DWORD PTR [ecx+esi*1+0x28]
  422800:	fldcw  WORD PTR [ecx+esi*8+0x40]
  422804:	clc    
  422805:	iret   
  422806:	inc    eax
  422807:	dec    ebp
  422808:	xchg   BYTE PTR [ecx],dh
  42280a:	dec    ecx
  42280b:	fstp   QWORD PTR [esi+0x32531ba9]
  422811:	xchg   BYTE PTR [edx-0x12],al
  422814:	cmp    al,0x68
  422816:	inc    esp
  422817:	inc    ebp
  422818:	in     eax,dx
  422819:	dec    ecx
  42281a:	pop    esi
  42281b:	out    0xc4,al
  42281d:	fmul   DWORD PTR [esi]
  42281f:	fdiv   st(1),st
  422821:	repnz icebp 
  422823:	or     BYTE PTR [esi-0x65],dl
  422826:	cmp    edi,DWORD PTR [esi-0x4794d857]
  42282c:	test   al,0x48
  42282e:	pushf  
  42282f:	leave  
  422830:	mov    DWORD PTR [edx*1+0x2ad51fb6],edi
  422837:	stos   DWORD PTR es:[edi],eax
  422838:	xor    BYTE PTR [ecx-0x4a],al
  42283b:	sbb    eax,0x2b176ed2
  422840:	imul   esp,DWORD PTR [ebx],0x48fb8abe
  422846:	call   0x72c4:0xa5d5fa1a
  42284d:	or     ecx,esp
  42284f:	or     DWORD PTR [esi],ecx
  422851:	xchg   ebx,eax
  422852:	push   0xffffffbf
  422854:	xchg   ecx,eax
  422855:	mov    es,WORD PTR [esi]
  422857:	push   esp
  422858:	xchg   ebx,eax
  422859:	and    eax,0x11d74692
  42285e:	bound  esp,QWORD PTR [ecx+ebx*2+0x77712764]
  422865:	out    dx,al
  422866:	(bad)  
  422867:	int3   
  422868:	rcl    DWORD PTR [ebx],cl
  42286a:	(bad)  
  42286b:	or     al,0x99
  42286d:	test   BYTE PTR [esi],al
  42286f:	jl     0x422800
  422871:	push   ds
  422872:	test   al,0xe
  422874:	imul   esp,edi,0x46e2de86
  42287a:	add    cl,0x50
  42287d:	sub    eax,0x158af196
  422882:	ficomp WORD PTR [edx]
  422884:	call   0x7616:0x7255170b
  42288b:	out    dx,eax
  42288c:	call   0x844f02d7
  422891:	sub    eax,0x1f5e2cb4
  422896:	pushf  
  422897:	fstp   TBYTE PTR [eax+edx*2-0x23]
  42289b:	push   edx
  42289c:	fisttp DWORD PTR ds:0xaac53dbb
  4228a2:	aas    
  4228a3:	inc    edi
  4228a4:	call   FWORD PTR [ecx+ecx*2-0x48]
  4228a8:	stc    
  4228a9:	xchg   ebp,eax
  4228aa:	test   al,0xad
  4228ac:	outs   dx,BYTE PTR ds:[esi]
  4228ad:	mov    al,BYTE PTR [edx-0x7b]
  4228b0:	and    al,0x3f
  4228b2:	xor    al,0xbe
  4228b4:	cmp    dh,BYTE PTR [edi]
  4228b6:	call   0x196196f4
  4228bb:	daa    
  4228bc:	mov    edi,DWORD PTR [edi+0x7cd537fc]
  4228c2:	pop    ebp
  4228c3:	mov    ah,0x7c
  4228c5:	sub    al,0xa0
  4228c7:	shr    BYTE PTR [edi+0x6215a267],cl
  4228cd:	mov    esi,0xfcc14e23
  4228d2:	mov    esp,0x20b67c73
  4228d7:	pop    edx
  4228d8:	fs mov ebx,0x3c070873
  4228de:	test   BYTE PTR [ebp-0xee4f156],dl
  4228e4:	push   ds
  4228e5:	xor    ebp,esp
  4228e7:	fld    TBYTE PTR [edi]
  4228e9:	sbb    DWORD PTR [ecx+ebp*2-0x7f0b9681],eax
  4228f0:	xchg   dh,bl
  4228f2:	cld    
  4228f3:	pop    esp
  4228f4:	or     DWORD PTR [esi],ebx
  4228f6:	(bad)  
  4228f7:	test   BYTE PTR [edi-0x6c],bh
  4228fa:	mov    edi,0x835d7275
  4228ff:	mov    ch,0xa2
  422901:	dec    edi
  422902:	mov    ebx,0xb5948d9b
  422907:	mov    ah,0x4c
  422909:	outs   dx,DWORD PTR ds:[esi]
  42290a:	or     DWORD PTR [edi],esi
  42290c:	je     0x422944
  42290e:	pop    esp
  42290f:	jbe    0x4228ea
  422911:	mov    eax,ds:0x603b338b
  422916:	push   es
  422917:	push   esi
  422918:	pop    ebp
  422919:	jnp    0x4228f9
  42291b:	lock lahf 
  42291d:	mov    DWORD PTR [ebx],edi
  42291f:	sbb    ah,cl
  422921:	sbb    DWORD PTR [eax+0xd],0x46
  422925:	dec    esi
  422926:	or     al,0xe7
  422928:	push   esi
  422929:	aas    
  42292a:	inc    edx
  42292b:	inc    edi
  42292c:	push   0xffffffa5
  42292e:	mov    ecx,0xb7321ad
  422933:	into   
  422934:	sbb    DWORD PTR [ecx],esi
  422936:	es dec eax
  422938:	xor    al,0x1c
  42293a:	ret    
  42293b:	test   DWORD PTR [esi],ebp
  42293d:	sbb    ebp,edi
  42293f:	push   cs
  422940:	icebp  
  422941:	clc    
  422942:	std    
  422943:	push   0x8
  422945:	in     al,dx
  422946:	aas    
  422947:	and    ebp,DWORD PTR [edx]
  422949:	jl     0x422920
  42294b:	sub    DWORD PTR [edx],esi
  42294d:	sub    eax,0xea8242a0
  422952:	lock out 0x8c,eax
  422955:	jmp    0x10989d4a
  42295a:	mov    ebx,DWORD PTR [esi-0x26958838]
  422960:	rol    BYTE PTR [eax],cl
  422962:	iret   
  422963:	adc    dl,al
  422965:	loope  0x422961
  422967:	or     dl,dl
  422969:	push   es
  42296a:	mov    ds:0xea5872fd,eax
  42296f:	or     al,0x9a
  422971:	repz mov cl,0xe1
  422974:	cmp    eax,0x55a7ca29
  422979:	fdivr  QWORD PTR [ecx]
  42297b:	push   edx
  42297c:	fistp  DWORD PTR ds:0xbc7e3358
  422982:	or     DWORD PTR [edi-0x30],0xb86daeb7
  422989:	xlat   BYTE PTR ds:[ebx]
  42298a:	fmul   st(1),st
  42298c:	cmp    eax,0x51da75bb
  422991:	jae    0x422923
  422993:	cld    
  422994:	jns    0x422933
  422996:	out    dx,eax
  422997:	fwait
  422998:	jmp    0x52933d19
  42299d:	jl     0x422a04
  42299f:	mov    ds:0x74d13123,al
  4229a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229a5:	inc    edx
  4229a6:	outs   dx,BYTE PTR ds:[esi]
  4229a7:	(bad)  
  4229a8:	cmp    BYTE PTR [edi-0x33],ah
  4229ab:	shl    ah,0x53
  4229ae:	xor    DWORD PTR [edi+0x685271d5],edx
  4229b4:	aam    0xbc
  4229b6:	test   DWORD PTR [ebx+0x3f],ebx
  4229b9:	cmp    edi,DWORD PTR [ecx-0x26]
  4229bc:	dec    esi
  4229bd:	adc    DWORD PTR [eax+edx*2+0xbc15cd5],ebp
  4229c4:	or     eax,0x6849d6e0
  4229c9:	mov    esp,0x92b1794b
  4229ce:	rcr    DWORD PTR [ebp-0x59],0xf2
  4229d2:	adc    al,0xe7
  4229d4:	fcmovnu st,st(2)
  4229d6:	xchg   BYTE PTR [edi+ecx*2],bl
  4229d9:	mov    al,ds:0x202d357c
  4229de:	mov    BYTE PTR [esi+0x39],0x58
  4229e2:	xchg   edx,eax
  4229e3:	and    DWORD PTR [edx-0x40],eax
  4229e6:	sub    dl,BYTE PTR [ecx+0x1e755812]
  4229ec:	sub    BYTE PTR [ecx-0x6e],ch
  4229ef:	dec    edi
  4229f0:	(bad)  [ebx+0x73]
  4229f3:	and    edx,edx
  4229f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f6:	mov    edi,0x6353d19f
  4229fb:	mov    ecx,0x80f69d1c
  422a00:	rol    ecx,1
  422a02:	es push ss
  422a04:	loop   0x422a6e
  422a06:	add    bh,ah
  422a08:	mov    ch,0x30
  422a0a:	cmp    eax,0x679d6678
  422a0f:	ret    0x5219
  422a12:	dec    edi
  422a13:	xchg   ebx,eax
  422a14:	stos   DWORD PTR es:[edi],eax
  422a15:	in     al,dx
  422a16:	stos   BYTE PTR es:[edi],al
  422a17:	sbb    eax,0x57f9e9bd
  422a1c:	rcl    BYTE PTR [ecx+0x3c5f1e37],1
  422a22:	xchg   ebp,eax
  422a23:	mov    edx,0x28696f5c
  422a28:	dec    BYTE PTR [eax-0x7d386b9]
  422a2e:	pop    ebp
  422a2f:	push   esi
  422a30:	shl    DWORD PTR [eax+0x6ffde388],1
  422a36:	jne    0x422a08
  422a38:	test   BYTE PTR [ebx+0x110adb3f],al
  422a3e:	xor    eax,0x959963ee
  422a43:	dec    ecx
  422a44:	or     BYTE PTR [ebx+ebx*4-0x5d],dl
  422a48:	mov    al,BYTE PTR [edx]
  422a4a:	xor    eax,esi
  422a4c:	je     0x422ab2
  422a4e:	jo     0x4229fd
  422a50:	push   ss
  422a51:	(bad)  
  422a52:	sbb    bl,ch
  422a54:	jmp    0x40ae:0x8dc52946
  422a5b:	outs   dx,BYTE PTR ds:[esi]
  422a5c:	mov    ds:0x1bc653b6,eax
  422a61:	jbe    0x422a19
  422a63:	retf   0xa19e
  422a66:	loopne 0x422ae2
  422a68:	jbe    0x422ae9
  422a6a:	ds mov eax,0xbe31f025
  422a70:	das    
  422a71:	fidiv  DWORD PTR [ecx-0x3a]
  422a74:	loopne 0x422a82
  422a76:	add    DWORD PTR [eax-0x19],edi
  422a79:	push   eax
  422a7a:	mov    ah,0x59
  422a7c:	or     DWORD PTR [edx-0x5f],edi
  422a7f:	imul   BYTE PTR [ebx]
  422a81:	sbb    BYTE PTR [ebp-0x12110423],ch
  422a87:	or     al,0x8f
  422a89:	lahf   
  422a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a8b:	push   0x94e80939
  422a90:	retf   0x8d18
  422a93:	imul   eax,DWORD PTR [ebp+0x1796e095],0x7c
  422a9a:	sub    al,0x94
  422a9c:	pop    edi
  422a9d:	and    al,0xe8
  422a9f:	imul   eax,DWORD PTR [esi],0xffffffe0
  422aa2:	and    eax,0x16a6ce00
  422aa7:	cmp    edx,DWORD PTR [esi]
  422aa9:	imul   BYTE PTR [ebp+eiz*4-0x27a6f851]
  422ab0:	lods   al,BYTE PTR ds:[esi]
  422ab1:	cmp    dh,BYTE PTR [ecx-0x708de057]
  422ab7:	adc    al,0xed
  422ab9:	xchg   BYTE PTR [edx-0x76],ch
  422abc:	stos   DWORD PTR es:[edi],eax
  422abd:	out    dx,eax
  422abe:	jl     0x422aa0
  422ac0:	cmp    eax,0x66f4f87d
  422ac5:	add    al,0xd1
  422ac7:	dec    eax
  422ac8:	inc    ebx
  422ac9:	pop    ecx
  422aca:	(bad)  
  422acb:	popa   
  422acc:	xchg   esp,eax
  422acd:	inc    ebp
  422ace:	push   esp
  422acf:	aaa    
  422ad0:	sub    BYTE PTR [esi],0xf4
  422ad3:	or     BYTE PTR [ebx+esi*8+0xfff2b75],ah
  422ada:	push   esp
  422adb:	jecxz  0x422b38
  422add:	dec    esp
  422ade:	idiv   BYTE PTR [esi-0x5857cc69]
  422ae4:	cmp    ebx,DWORD PTR [bp+0x7a]
  422ae8:	adc    BYTE PTR [edx],dl
  422aea:	pop    es
  422aeb:	int    0xa5
  422aed:	xor    BYTE PTR ds:0x39eee1ad,dl
  422af3:	sub    DWORD PTR [edx],ebx
  422af5:	dec    esp
  422af6:	int    0xd9
  422af8:	push   es
  422af9:	mov    ah,BYTE PTR [ecx+0x27e2050a]
  422aff:	popaw  
  422b01:	les    edi,FWORD PTR ds:0x69aa5652
  422b07:	div    DWORD PTR [edi+0x25385d37]
  422b0d:	sar    cl,0x31
  422b10:	test   BYTE PTR [edi+0x58ea87e8],dh
  422b16:	mov    ds:0xc054c9cc,al
  422b1b:	sub    BYTE PTR [eax],0x46
  422b1e:	cmp    al,BYTE PTR [eax+0x41fcae0e]
  422b24:	push   esp
  422b25:	div    edi
  422b27:	jmp    0xf9f0:0x5d37f725
  422b2e:	sub    eax,0x8eaf716a
  422b33:	mov    eax,ds:0xfb5f43d2
  422b38:	cwde   
  422b39:	dec    edx
  422b3a:	sub    BYTE PTR [ebx+0x1a],bh
  422b3d:	dec    edx
  422b3e:	in     al,0xaf
  422b40:	adc    BYTE PTR [ebx+0x6c],bl
  422b43:	imul   eax,DWORD PTR [ecx],0x3a36cf25
  422b49:	mov    WORD PTR [esi+0x3b],ss
  422b4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b4d:	mov    BYTE PTR [ebx],dh
  422b4f:	rcr    DWORD PTR [ebp-0x6986e055],0x5e
  422b56:	pop    ebx
  422b57:	dec    ecx
  422b58:	and    BYTE PTR [edi+0xa6683f8],ch
  422b5e:	pushf  
  422b5f:	(bad)  
  422b60:	fprem  
  422b62:	and    al,0x1a
  422b64:	push   eax
  422b65:	xor    DWORD PTR [edi+0x72],edi
  422b68:	xchg   ebx,eax
  422b69:	dec    esp
  422b6a:	ins    BYTE PTR es:[edi],dx
  422b6b:	or     edx,edx
  422b6d:	jge    0x422bc5
  422b6f:	hlt    
  422b70:	adc    eax,0xc10877c7
  422b75:	test   eax,0x0
  422b7a:	add    BYTE PTR [eax],al
  422b7c:	add    BYTE PTR [eax],al
  422b7e:	add    BYTE PTR [eax],al
  422b80:	add    BYTE PTR [eax-0x43f64bd4],ah
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    cl,BYTE PTR [ecx]
  422b8e:	push   es
  422b8f:	cs stc 
  422b91:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	lods   eax,DWORD PTR ds:[esi]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [esi+0x71f67e3d],cl
  422b9e:	popf   
  422b9f:	and    eax,0x952f6a9e
  422ba4:	in     al,0xef
  422ba6:	cli    
  422ba7:	jmp    0x800:0xf3563c0a
  422bae:	mov    esp,0x826f608d
  422bb3:	(bad)  
  422bb4:	cli    
  422bb5:	(bad)  
  422bb6:	push   eax
  422bb7:	add    ebx,0xffffff84
  422bba:	inc    esi
  422bbb:	sahf   
  422bbc:	enter  0xddf8,0x34
  422bc0:	loope  0x422bcf
  422bc2:	mov    ebx,0x7c68d9f9
  422bc7:	leave  
  422bc8:	fisubr DWORD PTR [ecx-0x3254cac3]
  422bce:	xor    dh,BYTE PTR [esi]
  422bd0:	and    edx,0x1acaaa6e
  422bd6:	stos   DWORD PTR es:[edi],eax
  422bd7:	jp     0x422bf1
  422bd9:	xor    dl,dl
  422bdb:	mov    edi,0x7ee66404
  422be0:	jbe    0x422bdf
  422be2:	adc    al,0xfb
  422be4:	(bad)  
  422be6:	es mov ah,0xfc
  422be9:	pop    es
  422bea:	clc    
  422beb:	test   eax,0x80b51318
  422bf0:	mov    esp,edx
  422bf2:	sub    ch,BYTE PTR [esi+0x202185f3]
  422bf8:	xchg   ebp,eax
  422bf9:	mov    al,ds:0xd0475601
  422bfe:	aad    0xb0
  422c00:	cmp    ch,0xa5
  422c03:	loop   0x422c33
  422c05:	cmp    eax,0x8f2bd0ee
  422c0a:	fstp   TBYTE PTR [esi]
  422c0c:	pushf  
  422c0d:	scas   al,BYTE PTR es:[edi]
  422c0e:	shr    DWORD PTR [eax],cl
  422c10:	repz cwde 
  422c12:	fcomp  QWORD PTR [ebx+0x24]
  422c15:	sub    eax,0x83bf988b
  422c1a:	xor    eax,0x62c31c00
  422c1f:	pop    edi
  422c20:	fwait
  422c21:	sbb    ebx,esp
  422c23:	(bad)  
  422c24:	call   0xc1dc:0x73901e71
  422c2b:	sbb    al,0xc0
  422c2d:	xchg   edi,eax
  422c2e:	mov    eax,0xa843bf6c
  422c33:	fs mov eax,0x8c4eca1c
  422c39:	and    al,BYTE PTR [ebx+0x10]
  422c3c:	push   ds
  422c3d:	fwait
  422c3e:	enter  0x48f4,0x5d
  422c42:	pop    eax
  422c43:	xchg   BYTE PTR [ebp+ebp*4+0x13a86023],dl
  422c4a:	or     DWORD PTR [eax],0xffffffd6
  422c4d:	xchg   esi,eax
  422c4e:	xchg   ebp,eax
  422c4f:	cli    
  422c50:	fs cld 
  422c52:	dec    esi
  422c53:	ins    DWORD PTR es:[edi],dx
  422c54:	dec    eax
  422c55:	and    bh,BYTE PTR [esp+esi*1+0x35d8458f]
  422c5c:	xchg   edx,eax
  422c5d:	xor    eax,0x92c17e0d
  422c62:	out    dx,al
  422c63:	fwait
  422c64:	packsswb mm4,mm6
  422c67:	jb     0x422cd4
  422c69:	fsubr  DWORD PTR [ebp-0x62bf6216]
  422c6f:	sti    
  422c70:	hlt    
  422c71:	mov    dh,0x46
  422c73:	inc    ebx
  422c74:	mov    ch,0xdb
  422c76:	dec    esp
  422c77:	sti    
  422c78:	cmp    esp,edi
  422c7a:	dec    ebx
  422c7b:	out    dx,eax
  422c7c:	and    eax,0xf211d9ba
  422c81:	mov    edi,0xf364dcab
  422c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c87:	retf   
  422c88:	mov    WORD PTR [ecx-0x52445f12],gs
  422c8e:	xlat   BYTE PTR ds:[ebx]
  422c8f:	mov    DWORD PTR [edi-0xb64259],ebp
  422c95:	jnp    0x422c93
  422c97:	pop    ds
  422c98:	jns    0x422d01
  422c9a:	fisubr WORD PTR [eax+edi*8-0x22]
  422c9e:	repz dec ecx
  422ca0:	and    ch,BYTE PTR [eax-0x6fa4a022]
  422ca6:	retf   0xd4e6
  422ca9:	pop    ebp
  422caa:	fidiv  WORD PTR [edi]
  422cac:	out    0xfb,al
  422cae:	mov    ebp,0xe2fb49e5
  422cb3:	cli    
  422cb4:	pop    eax
  422cb5:	fadd   st(6),st
  422cb7:	aad    0x7d
  422cb9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422cbb:	jnp    0x422d19
  422cbd:	les    edx,FWORD PTR [edi-0x1b]
  422cc0:	xor    ecx,DWORD PTR [ebx-0x7]
  422cc3:	iret   
  422cc4:	sbb    cl,bh
  422cc6:	(bad)  
  422cc7:	popf   
  422cc8:	jp     0x422cb2
  422cca:	paddsb mm6,QWORD PTR [edi]
  422ccd:	ins    BYTE PTR es:[edi],dx
  422cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ccf:	sub    dl,BYTE PTR [edi-0x67f3071d]
  422cd5:	mov    WORD PTR [esi+0x2e],cs
  422cd8:	fwait
  422cd9:	push   0x936c4feb
  422cde:	cmp    al,BYTE PTR [ebx-0x35]
  422ce1:	sub    eax,0x16abc325
  422ce6:	loope  0x422cc1
  422ce8:	cmc    
  422ce9:	sbb    ebx,DWORD PTR [ebx]
  422ceb:	aaa    
  422cec:	bound  eax,QWORD PTR [ecx-0x76]
  422cef:	(bad)  
  422cf0:	pusha  
  422cf1:	jl     0x422cee
  422cf3:	icebp  
  422cf4:	mov    edx,0x890b31e6
  422cf9:	into   
  422cfa:	push   eax
  422cfb:	sub    al,0x61
  422cfd:	test   eax,0x3a245f41
  422d02:	out    dx,al
  422d03:	and    ch,BYTE PTR [edx+ebp*2-0x34b0178]
  422d0a:	rcr    BYTE PTR [eax+ebx*1+0x2b45a157],0x87
  422d12:	push   0x79
  422d14:	arpl   si,di
  422d16:	and    ch,BYTE PTR ds:0x1863591b
  422d1c:	jb     0x422ced
  422d1e:	fs int 0xe3
  422d21:	inc    ebx
  422d22:	push   esp
  422d23:	lods   eax,DWORD PTR ds:[esi]
  422d24:	push   esi
  422d25:	inc    ecx
  422d26:	dec    bp
  422d28:	out    dx,al
  422d29:	in     al,0x5e
  422d2b:	mov    al,ds:0x7677fac7
  422d30:	and    eax,0x8e71ad49
  422d35:	iret   
  422d36:	cmp    eax,0x3d2f8f04
  422d3b:	cmc    
  422d3c:	push   edi
  422d3d:	jnp    0x422ce3
  422d3f:	lds    ebx,FWORD PTR [edi+eiz*1+0x691f3d1f]
  422d46:	sub    ebx,DWORD PTR [edx-0x7a]
  422d49:	std    
  422d4a:	lods   al,BYTE PTR ds:[esi]
  422d4b:	jecxz  0x422dc9
  422d4d:	mov    esi,0x18513037
  422d52:	pop    ss
  422d53:	jb     0x422da6
  422d55:	mov    ?,WORD PTR [edx+0x16]
  422d58:	test   eax,0xb630434e
  422d5d:	xor    BYTE PTR [ecx+0x78],0x22
  422d61:	jno    0x422ce7
  422d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d64:	cmp    al,0xb4
  422d66:	pop    ebp
  422d67:	int3   
  422d68:	(bad)  
  422d69:	(bad)  
  422d6b:	(bad)  
  422d6c:	stc    
  422d6d:	mov    esi,0x338355df
  422d72:	out    dx,al
  422d73:	ficom  DWORD PTR [esi-0x68]
  422d76:	int    0x1d
  422d78:	loop   0x422d87
  422d7a:	lea    edx,[ebp+ecx*2+0x70]
  422d7e:	int    0xba
  422d80:	cmp    dh,BYTE PTR [ebp-0x5ea1abe8]
  422d86:	jmp    0x422d7c
  422d88:	repnz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422d8b:	rcr    DWORD PTR [edx+eax*8],0x6
  422d8f:	mov    ah,0xc1
  422d91:	xchg   edi,eax
  422d92:	je     0x422d91
  422d94:	jno    0x422d96
  422d96:	sbb    dl,dl
  422d98:	xchg   DWORD PTR [eax+0x225d0a53],edx
  422d9e:	sbb    DWORD PTR [edi-0x3291e383],ebp
  422da4:	xchg   ebx,eax
  422da5:	or     dl,BYTE PTR fs:[edi]
  422da8:	je     0x422d4e
  422daa:	pop    eax
  422dab:	in     al,dx
  422dac:	mov    edi,0xa9cccece
  422db1:	add    dh,BYTE PTR fs:[edx-0x43674db3]
  422db8:	int3   
  422db9:	icebp  
  422dba:	add    BYTE PTR [esi-0x42573e4e],ah
  422dc0:	sub    ecx,DWORD PTR [esi-0x2e]
  422dc3:	inc    ebp
  422dc4:	(bad)  
  422dc5:	stos   DWORD PTR es:[edi],eax
  422dc6:	push   eax
  422dc7:	jbe    0x422d91
  422dc9:	loop   0x422d73
  422dcb:	repz fwait
  422dcd:	xchg   esi,eax
  422dce:	sbb    DWORD PTR [esi+0x75],edx
  422dd1:	lea    esp,[edi+0x5d380487]
  422dd7:	jns    0x422e43
  422dd9:	(bad)  
  422dda:	jbe    0x422dd1
  422ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ddd:	pop    ebp
  422dde:	and    eax,0xbe9641fe
  422de3:	or     DWORD PTR [eax+ebx*2],esi
  422de6:	adc    ebx,DWORD PTR [eax-0x20]
  422de9:	cmp    eax,0x4c96f4c9
  422dee:	mov    ?,WORD PTR [esi]
  422df0:	jne    0x422dd0
  422df2:	lods   eax,DWORD PTR ds:[esi]
  422df3:	fisubr WORD PTR [ecx]
  422df5:	or     ah,BYTE PTR [eax]
  422df7:	xor    cl,BYTE PTR [edx-0x1700a1d3]
  422dfd:	xchg   DWORD PTR [edx+ebp*8+0x32],esi
  422e01:	push   es
  422e02:	js     0x422e75
  422e04:	or     cl,BYTE PTR [eax]
  422e06:	mov    ebx,0xbab8d40d
  422e0b:	adc    DWORD PTR [edi],edx
  422e0d:	(bad)  
  422e0e:	and    DWORD PTR [eax-0x25],ebx
  422e11:	sub    edi,esp
  422e13:	outs   dx,BYTE PTR ds:[esi]
  422e14:	lods   eax,DWORD PTR ds:[esi]
  422e15:	repz jnp 0x422da4
  422e18:	(bad)  
  422e19:	mov    bl,0x5c
  422e1b:	push   ss
  422e1c:	dec    ebp
  422e1d:	lahf   
  422e1e:	mov    BYTE PTR [edi-0x64],ah
  422e21:	mov    esi,0x6e757f57
  422e26:	in     eax,0xbd
  422e28:	xchg   BYTE PTR [eax-0x67],al
  422e2b:	adc    BYTE PTR [ebp-0x2e],bl
  422e2e:	test   BYTE PTR [edx+0x719285f2],bl
  422e34:	outs   dx,DWORD PTR ds:[esi]
  422e35:	mov    ss,ebx
  422e37:	dec    edx
  422e38:	sbb    DWORD PTR [eax],eax
  422e3a:	sub    al,0x31
  422e3d:	dec    edx
  422e3e:	cmp    ebp,DWORD PTR [eax+0x1c]
  422e41:	push   edx
  422e42:	lahf   
  422e43:	shl    dh,0xe5
  422e46:	inc    esp
  422e47:	clc    
  422e48:	adc    bl,bl
  422e4a:	imul   ebp,ebp,0xca27e5b2
  422e50:	xor    bh,BYTE PTR [edx-0x24]
  422e53:	cdq    
  422e54:	outs   dx,BYTE PTR ds:[esi]
  422e55:	push   esi
  422e56:	push   ecx
  422e57:	jbe    0x422ea8
  422e59:	mov    esi,0x3b0e50e
  422e5e:	mov    ch,0xd1
  422e60:	dec    ebp
  422e61:	xor    eax,0x92bdf37e
  422e66:	popf   
  422e67:	loop   0x422eb5
  422e69:	inc    ebp
  422e6a:	jns    0x422ed6
  422e6c:	or     esi,DWORD PTR [eax+0xc]
  422e6f:	ret    0xdbab
  422e72:	ret    
  422e73:	test   al,0x31
  422e75:	test   al,0xb1
  422e77:	and    BYTE PTR [ecx+0x18],ch
  422e7a:	xchg   ebx,eax
  422e7b:	mov    ebp,0xd706e8bd
  422e80:	xor    bh,0xc0
  422e83:	jmp    DWORD PTR [ecx+0x32f18ed3]
  422e89:	daa    
  422e8a:	jge    0x422f04
  422e8c:	jecxz  0x422ed6
  422e8e:	xor    DWORD PTR [eax],ebp
  422e90:	push   ebx
  422e91:	int3   
  422e92:	mov    cl,0x59
  422e94:	add    edx,ebx
  422e96:	and    BYTE PTR [eax],0xc8
  422e99:	bound  edi,QWORD PTR [edx-0x3f6aa464]
  422e9f:	lea    ebp,[esi]
  422ea1:	xchg   edx,eax
  422ea2:	inc    edi
  422ea3:	(bad)  
  422ea4:	std    
  422ea5:	lods   al,BYTE PTR ds:[esi]
  422ea6:	cmp    DWORD PTR ds:0xa50d0152,0xf69ac083
  422eb0:	iret   
  422eb1:	push   edi
  422eb2:	ds dec eax
  422eb4:	dec    edi
  422eb5:	outs   dx,BYTE PTR ds:[esi]
  422eb6:	sub    DWORD PTR [eax+0x5c],ebp
  422eb9:	jl     0x422ece
  422ebb:	stos   DWORD PTR es:[edi],eax
  422ebc:	add    eax,0xc0c9baf
  422ec1:	inc    esi
  422ec2:	rcl    BYTE PTR [edi+0x23e0a78e],cl
  422ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ec9:	push   ds
  422eca:	sub    esi,DWORD PTR [ebx+0x7b]
  422ecd:	mov    bl,0xa1
  422ecf:	fst    QWORD PTR [esi]
  422ed1:	dec    ebp
  422ed2:	loope  0x422ebf
  422ed4:	mov    cl,0x3b
  422ed6:	out    0x91,eax
  422ed8:	gs pop eax
  422eda:	nop
  422edb:	xor    eax,DWORD PTR [ecx]
  422edd:	popa   
  422ede:	fwait
  422edf:	das    
  422ee0:	loope  0x422ecd
  422ee2:	fstp   st(0)
  422ee4:	pop    ebp
  422ee5:	pushf  
  422ee6:	mov    ecx,0x960a359b
  422eeb:	dec    esi
  422eec:	jmp    0x422e7b
  422eee:	dec    eax
  422eef:	daa    
  422ef0:	out    dx,eax
  422ef1:	mov    al,ds:0x2d6359d9
  422ef6:	rcr    ah,0x28
  422ef9:	icebp  
  422efa:	jo     0x422eea
  422efc:	out    0xdd,al
  422efe:	neg    BYTE PTR [esi-0x54154db9]
  422f04:	mov    DWORD PTR [edi+0xb4fb260],0xf0ed2cdb
  422f0e:	xchg   BYTE PTR [ecx],bh
  422f10:	test   eax,0x5f037bbd
  422f15:	push   eax
  422f16:	loop   0x422e98
  422f18:	pop    es
  422f19:	mov    esi,0xb8862e32
  422f1e:	push   cs
  422f1f:	pop    edx
  422f20:	xchg   dl,ah
  422f22:	sbb    eax,0xf68e258a
  422f27:	mov    ds:0x8c2d6da2,eax
  422f2c:	mov    BYTE PTR [ecx],0x70
  422f2f:	daa    
  422f30:	pop    edi
  422f31:	loop   0x422f19
  422f33:	pop    ds
  422f34:	cmp    al,0x80
  422f36:	sub    DWORD PTR ds:0x3ed014ec,edi
  422f3c:	(bad)  
  422f3d:	ins    DWORD PTR es:[edi],dx
  422f3e:	pop    ebp
  422f3f:	ja     0x422f66
  422f41:	(bad)  
  422f42:	lea    esp,[ebp-0x25]
  422f45:	outs   dx,BYTE PTR ds:[esi]
	...
  422f4e:	add    BYTE PTR [eax],al
  422f50:	add    BYTE PTR [edx],al
  422f52:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  422f58:	cmp    esi,DWORD PTR [esi-0x5e481422]
  422f5e:	loop   0x422f09
  422f60:	mov    eax,ds:0x1a813
  422f65:	lods   eax,DWORD PTR ds:[esi]
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    BYTE PTR [ecx-0x55b0e03d],bh
  422f6e:	hlt    
  422f6f:	bound  ecx,QWORD PTR [edx]
  422f71:	dec    ebx
  422f72:	add    bl,bl
  422f74:	outs   dx,DWORD PTR ds:[esi]
  422f75:	test   dl,al
  422f77:	sub    al,0xd2
  422f79:	bound  esp,QWORD PTR [ebp-0x3c]
  422f7c:	mov    WORD PTR [edi],?
  422f7e:	cwde   
  422f7f:	push   esp
  422f80:	adc    al,0x68
  422f82:	adc    dl,BYTE PTR [edx-0x5238f3ac]
  422f88:	dec    edi
  422f89:	adc    DWORD PTR [edi+0x46],esi
  422f8c:	jno    0x422fc2
  422f8e:	cmp    DWORD PTR [ecx+0x65],edi
  422f91:	fmul   DWORD PTR [eax-0x11]
  422f94:	out    0x3f,eax
  422f96:	jno    0x422f3a
  422f98:	and    eax,0xe6a7eb2c
  422f9d:	sbb    al,0x8e
  422f9f:	inc    edi
  422fa0:	xor    ebx,DWORD PTR [eax+0x23]
  422fa3:	shl    DWORD PTR [edx+0x3f],1
  422fa6:	push   0xffffff90
  422fa8:	(bad)  
  422fa9:	mov    esi,0xd8f2a4c0
  422fae:	es inc dh
  422fb1:	iret   
  422fb2:	jp     0x422f59
  422fb4:	jmp    0x422f51
  422fb6:	dec    esp
  422fb7:	or     BYTE PTR [esi+0x26],ch
  422fba:	and    eax,DWORD PTR [ebp*1+0x58142a05]
  422fc1:	jae    0x422f98
  422fc3:	icebp  
  422fc4:	gs icebp 
  422fc6:	ins    BYTE PTR es:[edi],dx
  422fc7:	push   ebp
  422fc8:	test   eax,0x239b6af
  422fcd:	adc    al,0x4a
  422fcf:	push   eax
  422fd0:	cdq    
  422fd1:	mov    esi,0x6d0aa674
  422fd6:	sub    eax,0x635e8315
  422fdb:	adc    ch,bh
  422fdd:	clc    
  422fde:	les    esi,FWORD PTR [ebx-0x2cd72b0c]
  422fe4:	fcom   DWORD PTR [edx+0x40]
  422fe7:	xchg   ebp,eax
  422fe8:	push   eax
  422fe9:	(bad)  
  422fea:	mov    al,ds:0x33de7487
  422fef:	or     eax,0xa1101f8c
  422ff4:	paddsb mm4,QWORD PTR [ebp-0x7f]
  422ff8:	jge    0x422fac
  422ffa:	dec    eax
  422ffb:	int3   
  422ffc:	leave  
  422ffd:	retf   
  422ffe:	repz sub DWORD PTR [edx-0x76],0xdf5f478e
  423006:	sub    DWORD PTR [ebx],esi
  423008:	dec    edx
  423009:	in     al,dx
  42300a:	adc    ch,BYTE PTR [ecx]
  42300c:	jae    0x42302f
  42300e:	scas   eax,DWORD PTR es:[edi]
  42300f:	outs   dx,BYTE PTR ds:[esi]
  423010:	cmp    ebx,DWORD PTR [ebx+esi*2]
  423013:	cmp    cl,BYTE PTR [edi-0x46482179]
  423019:	mov    eax,0x2e73b12a
  42301e:	sub    edi,esp
  423020:	xchg   ebx,eax
  423021:	in     eax,0xdc
  423023:	jg     0x423075
  423025:	xchg   ecx,eax
  423026:	cmp    eax,0xd73ff1b8
  42302b:	adc    DWORD PTR [ebx],eax
  42302d:	push   0x67cbb75
  423032:	fsub   DWORD PTR gs:[eax]
  423035:	ret    0x226d
  423038:	inc    ebp
  423039:	xchg   ebp,eax
  42303a:	imul   edi,DWORD PTR [esi-0x72e2cf16],0xffffffa8
  423041:	test   eax,0x21c7ae2
  423046:	lods   eax,DWORD PTR ds:[esi]
  423047:	arpl   WORD PTR [eax-0x2edb15ec],si
  42304d:	mov    esi,0xe93041a2
  423052:	popa   
  423053:	mov    edi,0xcc5090db
  423058:	iret   
  423059:	cmc    
  42305a:	imul   edx,ebx,0x8
  42305d:	test   DWORD PTR [ecx+0x33],esi
  423060:	jmp    0x42304c
  423062:	clc    
  423063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423064:	(bad)  
  423065:	xor    ebp,ebx
  423067:	jmp    0xe927e9c6
  42306c:	xchg   esp,eax
  42306d:	inc    esp
  42306e:	pop    ecx
  42306f:	mov    eax,ds:0x93642cc
  423074:	or     DWORD PTR [ecx],ebp
  423076:	push   esi
  423077:	pop    ss
  423078:	ret    0x8d2c
  42307b:	jge    0x423090
  42307d:	fist   WORD PTR [edx-0x9]
  423080:	leave  
  423081:	iret   
  423082:	retf   
  423083:	or     bh,dl
  423085:	inc    esi
  423086:	scas   al,BYTE PTR es:[edi]
  423087:	xchg   esi,eax
  423088:	mov    esi,ecx
  42308a:	into   
  42308b:	jge    0x42310a
  42308d:	fadd   QWORD PTR ds:0x44a70e44
  423093:	into   
  423094:	xchg   ecx,eax
  423095:	sbb    ebx,DWORD PTR [ecx]
  423097:	inc    edi
  423098:	push   ss
  423099:	mov    ch,0xa8
  42309b:	sub    al,0x75
  42309d:	jmp    0x92d483de
  4230a2:	or     dh,ah
  4230a4:	xor    esi,DWORD PTR [esi]
  4230a6:	aad    0xe9
  4230a8:	xchg   DWORD PTR [edi+0x7e],eax
  4230ab:	sti    
  4230ac:	aam    0xa1
  4230ae:	push   eax
  4230af:	mov    bl,0xf3
  4230b1:	dec    eax
  4230b2:	das    
  4230b3:	inc    edx
  4230b4:	aaa    
  4230b5:	add    bl,dl
  4230b7:	xchg   ebx,eax
  4230b8:	or     eax,0x2d254b24
  4230bd:	cwde   
  4230be:	or     eax,0xccf7a026
  4230c3:	xor    edi,DWORD PTR [esi+0x67]
  4230c6:	mov    ah,bl
  4230c8:	aam    0x3d
  4230ca:	test   DWORD PTR [esi],eax
  4230cc:	mov    bh,0xb5
  4230ce:	and    eax,0xa829cafe
  4230d3:	and    al,al
  4230d5:	jmp    0x423147
  4230d7:	add    BYTE PTR [edx],ch
  4230d9:	push   ecx
  4230da:	xor    esi,DWORD PTR [ebx+0x5d61e17e]
  4230e0:	clc    
  4230e1:	push   edx
  4230e2:	xchg   ecx,eax
  4230e3:	cli    
  4230e4:	mov    ch,0xe1
  4230e6:	jge    0x42313f
  4230e8:	sub    BYTE PTR [ebp+0x77],al
  4230eb:	std    
  4230ec:	pop    es
  4230ed:	test   BYTE PTR [ecx],ch
  4230ef:	xor    DWORD PTR [ebx],edx
  4230f1:	not    edx
  4230f3:	test   esp,edi
  4230f5:	push   ebx
  4230f6:	push   edx
  4230f7:	add    eax,0xf149b38e
  4230fc:	xcrypt-cfb 
  4230ff:	(bad)  
  423100:	mov    esi,0x33d8f4ed
  423105:	push   edx
  423106:	mov    edx,0x2775758f
  42310b:	push   ss
  42310c:	push   esp
  42310d:	xor    bl,bl
  42310f:	jp     0x4230c7
  423111:	and    bh,BYTE PTR [ecx-0x5f]
  423114:	sub    esi,DWORD PTR [esi]
  423116:	jbe    0x4230ac
  423118:	popa   
  423119:	mov    bl,0xde
  42311b:	gs cs mov bh,0x36
  42311f:	daa    
  423120:	push   eax
  423121:	call   0x7b7c:0x6ca359c
  423128:	push   ecx
  423129:	push   ecx
  42312a:	mov    edi,esp
  42312c:	js     0x423144
  42312e:	inc    ebp
  42312f:	ins    DWORD PTR es:[edi],dx
  423130:	aad    0xd3
  423132:	xchg   ebp,eax
  423133:	sub    esi,DWORD PTR [edi]
  423135:	push   eax
  423136:	push   eax
  423137:	(bad)  
  423138:	xor    ch,BYTE PTR [eax]
  42313a:	sbb    eax,0x4772942b
  42313f:	xor    BYTE PTR [edx+esi*4],cl
  423142:	inc    esp
  423143:	pop    ecx
  423144:	ret    
  423145:	and    DWORD PTR [ebp+0x6c29990f],edi
  42314b:	push   cs
  42314c:	test   DWORD PTR [edi],0xbc62ce97
  423152:	lds    ecx,FWORD PTR [esi+edi*2-0x4aa1094]
  423159:	xchg   esp,eax
  42315a:	retf   0x6152
  42315d:	in     eax,0xd1
  42315f:	sahf   
  423160:	adc    BYTE PTR [esi+eiz*1],bl
  423163:	lods   al,BYTE PTR ds:[esi]
  423164:	mov    ebp,ebx
  423166:	or     ebx,ebp
  423168:	clc    
  423169:	imul   esp,DWORD PTR [ebp+esi*8+0x36ed8377],0x28
  423171:	or     ebx,DWORD PTR [edi+0x253b48cf]
  423177:	or     dl,BYTE PTR [ebx+0x22]
  42317a:	mov    al,0x24
  42317c:	add    BYTE PTR [ebx],bl
  42317e:	sbb    eax,0x52cd63e3
  423183:	push   esp
  423184:	das    
  423185:	inc    edi
  423186:	ror    BYTE PTR [ebx-0xb637c51],1
  42318c:	cwde   
  42318d:	cdq    
  42318e:	adc    bl,BYTE PTR [ecx+0x1e9a9db1]
  423194:	sub    ah,bh
  423196:	inc    ebx
  423197:	sbb    DWORD PTR [edx+ebx*2+0xbdae4d1],0x7b
  42319f:	mov    DWORD PTR [esi],esp
  4231a1:	retf   
  4231a2:	mov    eax,0xd54116a8
  4231a7:	jb     0x4231c2
  4231a9:	test   eax,0x6632579a
  4231ae:	pop    esp
  4231af:	out    dx,al
  4231b0:	and    dh,dh
  4231b2:	push   es
  4231b3:	and    dh,ch
  4231b5:	pop    ebp
  4231b6:	sub    eax,0x6d2ba8f6
  4231bb:	aad    0xe6
  4231bd:	idiv   DWORD PTR [ecx+0x2b]
  4231c0:	sub    al,dh
  4231c2:	xchg   ebx,eax
  4231c3:	add    edi,DWORD PTR [esi-0xf]
  4231c6:	int3   
  4231c7:	jmp    0x240e68b6
  4231cc:	mov    es,WORD PTR [ebp+0x4d160d4e]
  4231d2:	fadd   DWORD PTR [edi-0x73e5bdab]
  4231d8:	test   DWORD PTR [esi+ecx*8-0x48a72249],0x4470ba4f
  4231e3:	mov    edi,0x35f9f37c
  4231e8:	fstp   TBYTE PTR [ebp+0xe4c33fb]
  4231ee:	into   
  4231ef:	push   eax
  4231f0:	xchg   dh,dl
  4231f2:	xor    eax,ebp
  4231f4:	adc    al,0x58
  4231f6:	inc    ebp
  4231f7:	aas    
  4231f8:	jmp    0x4231c1
  4231fa:	xor    eax,0xce74aa61
  4231ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423200:	cwde   
  423201:	jge    0x423247
  423203:	(bad)  
  423204:	jo     0x4231a5
  423206:	mov    DWORD PTR [ebx+0x5],ecx
  423209:	dec    esi
  42320a:	gs push edi
  42320c:	mov    ?,WORD PTR [bx-0x66]
  423210:	and    DWORD PTR [esi],edi
  423212:	mov    esi,0xa8684b5c
  423217:	cmp    dh,BYTE PTR [edi+0x1d]
  42321a:	sbb    eax,0x3a479969
  42321f:	mov    al,0x58
  423221:	mov    ch,0x47
  423223:	xchg   edi,eax
  423224:	and    BYTE PTR [eax+0x35ae8609],al
  42322a:	cmp    DWORD PTR [ebx+0x22],edi
  42322d:	jne    0x4231cf
  42322f:	mov    cl,0xfb
  423231:	shl    DWORD PTR ds:0xce8868e9,cl
  423237:	sub    al,BYTE PTR [ecx]
  423239:	icebp  
  42323a:	(bad)  
  42323b:	mov    ecx,0xc6d55861
  423240:	cmp    BYTE PTR [ecx+ebx*2+0x5a388f6f],0x3e
  423248:	mov    al,0x59
  42324a:	pop    edi
  42324b:	std    
  42324c:	frstor [edi]
  42324e:	std    
  42324f:	adc    eax,0x4c0d30f7
  423254:	or     cl,0xfa
  423257:	out    dx,al
  423258:	xchg   edx,eax
  423259:	clc    
  42325a:	out    dx,eax
  42325b:	mov    eax,0x167d3045
  423260:	fcom   st(3)
  423262:	bound  esp,QWORD PTR [eax+0x2689a5d8]
  423268:	cmc    
  423269:	add    ah,bl
  42326b:	mov    ds:0xa4826b76,eax
  423270:	push   esi
  423271:	pushf  
  423272:	cmp    esp,DWORD PTR [edi-0x43a13992]
  423278:	pop    eax
  423279:	dec    ecx
  42327a:	add    BYTE PTR [edx+0x74],cl
  42327d:	rol    BYTE PTR [esi-0x27],cl
  423280:	aas    
  423281:	sbb    edi,DWORD PTR [esi]
  423283:	mov    bl,0xff
  423285:	inc    eax
  423286:	xor    bh,BYTE PTR [edx+0x17]
  423289:	pop    eax
  42328a:	btc    DWORD PTR [ecx-0x6180ae31],ebx
  423291:	mov    edx,0xa7504941
  423296:	mov    edi,DWORD PTR [edi+0x38]
  423299:	add    eax,0x9969b6dc
  42329e:	jecxz  0x423235
  4232a0:	repz jno 0x4232b9
  4232a3:	stos   BYTE PTR es:[edi],al
  4232a4:	(bad)  
  4232a5:	and    BYTE PTR [esi+0x21d59a82],ch
  4232ab:	aam    0x2d
  4232ad:	sub    eax,0x8820047
  4232b2:	add    bh,BYTE PTR [esi]
  4232b4:	inc    esi
  4232b5:	cs mov bh,0xd8
  4232b8:	call   0x6649349d
  4232bd:	cli    
  4232be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232bf:	mov    esp,0x6982c224
  4232c4:	sbb    DWORD PTR [edx+esi*2],eax
  4232c7:	xor    eax,0x57550c46
  4232cc:	inc    ebx
  4232cd:	inc    esi
  4232ce:	sub    bh,0xcd
  4232d1:	mov    dl,0xb4
  4232d3:	js     0x42334e
  4232d5:	pop    edi
  4232d6:	push   edi
  4232d7:	mov    eax,ds:0x6e8e0d41
  4232dc:	or     ebp,DWORD PTR [eax+eiz*8+0x61]
  4232e0:	or     eax,0xc61a9023
  4232e5:	sbb    cl,BYTE PTR [eax+0x1824bc67]
  4232eb:	jmp    0x42329e
  4232ed:	adc    BYTE PTR [ebx],ch
  4232ef:	mov    eax,0x5d3da133
  4232f4:	mov    esp,0x16289a94
  4232f9:	jmp    0x87481c71
  4232fe:	mov    al,ds:0x6e8e19dd
  423303:	shl    DWORD PTR [ecx],1
  423305:	jnp    0x423294
  423307:	or     eax,0x326492f4
  42330c:	out    0x64,al
  42330e:	scas   eax,DWORD PTR es:[edi]
  42330f:	lock mov esi,0xb9d05b15
  423315:	fwait
	...
  42331e:	add    BYTE PTR [eax],al
  423320:	add    dl,bh
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x37
  42332e:	and    eax,esi
  423330:	xchg   ecx,eax
  423331:	shr    BYTE PTR [ebx+0x3ad0001],0x0
  423338:	add    BYTE PTR [ebx+0x6fe38f9b],bl
  42333e:	lea    ecx,[edi-0x6066595a]
  423344:	mov    bl,0x5d
  423346:	mov    esp,0xc74950ee
  42334b:	push   esi
  42334c:	xchg   ecx,eax
  42334d:	fld    TBYTE PTR [ecx-0x20]
  423350:	add    al,0xec
  423352:	leave  
  423353:	popa   
  423354:	loopne 0x42338f
  423356:	imul   eax,DWORD PTR [ecx+0x33],0xb8fcb941
  42335d:	or     esp,DWORD PTR [edx-0x3a]
  423360:	cmp    ecx,eax
  423362:	outs   dx,BYTE PTR ds:[esi]
  423363:	aaa    
  423364:	mov    ah,0xf3
  423366:	xor    ecx,esi
  423368:	lds    esp,FWORD PTR [ebx-0x68]
  42336b:	and    eax,0x83d9fc0c
  423370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423371:	fistp  WORD PTR [edx+0x8]
  423374:	xor    edi,DWORD PTR [eax]
  423376:	aas    
  423377:	addr16 jnp 0x42339b
  42337a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42337b:	push   ss
  42337c:	inc    edi
  42337d:	gs mov dl,0x6d
  423380:	push   0x9f54c7b7
  423385:	push   0xffffff85
  423387:	mov    fs,edi
  423389:	faddp  st(7),st
  42338b:	fisub  DWORD PTR [ecx]
  42338d:	lahf   
  42338e:	xor    al,0xd3
  423390:	adc    ch,BYTE PTR [esi+ebx*2]
  423393:	jle    0x4233de
  423395:	jmp    0x4233d9
  423397:	sbb    DWORD PTR [esi],eax
  423399:	push   es
  42339a:	xchg   ebx,eax
  42339b:	sahf   
  42339c:	jecxz  0x4233d0
  42339e:	int3   
  42339f:	js     0x42341f
  4233a1:	sbb    ch,BYTE PTR [ebx-0x6a]
  4233a4:	cs js  0x42340a
  4233a7:	cmp    ch,BYTE PTR [esi-0x50]
  4233aa:	mov    eax,ds:0x5a4a03d1
  4233af:	outs   dx,DWORD PTR ds:[esi]
  4233b0:	fadd   DWORD PTR [esi+0x3cdfbd50]
  4233b6:	(bad)  
  4233b8:	stos   DWORD PTR es:[edi],eax
  4233b9:	mov    ebx,gs
  4233bb:	stos   DWORD PTR es:[edi],eax
  4233bc:	clc    
  4233bd:	js     0x4233a0
  4233bf:	xor    DWORD PTR [eax-0x42],0x49b5d6b7
  4233c6:	ret    0xceb6
  4233c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233ca:	dec    esp
  4233cb:	xchg   ebp,eax
  4233cc:	in     al,0xd1
  4233ce:	mov    eax,0x2fc0e110
  4233d3:	jmp    0x5c8:0xe653f08b
  4233da:	das    
  4233db:	popf   
  4233dc:	repz hlt 
  4233de:	sbb    eax,0xbaf14a26
  4233e3:	xchg   ebx,eax
  4233e4:	stos   BYTE PTR es:[edi],al
  4233e5:	mov    ebx,0xea24eae8
  4233ea:	imul   esp,DWORD PTR [ecx-0x2a038940],0x435b2e3a
  4233f4:	(bad)  
  4233f5:	pop    ss
  4233f6:	ss std 
  4233f8:	push   ss
  4233f9:	(bad)  
  4233fa:	mov    ebp,0x1f515589
  4233ff:	test   BYTE PTR [esi-0x2a],ch
  423402:	das    
  423403:	js     0x423391
  423405:	and    BYTE PTR [ebx+0x70cf2e68],0xf2
  42340c:	add    DWORD PTR [edi+0x4b308bdb],eax
  423412:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  423414:	adc    bh,bh
  423416:	(bad)  
  423417:	call   0x3b6076c0
  42341c:	ins    BYTE PTR es:[edi],dx
  42341d:	push   cs
  42341e:	pop    esi
  42341f:	or     DWORD PTR [eax],esi
  423421:	test   eax,0xff93ed9a
  423426:	jge    0x423457
  423428:	test   eax,0x756fac70
  42342d:	data16 lahf 
  42342f:	dec    esp
  423430:	push   ebp
  423431:	pmaxsw mm3,mm7
  423434:	mov    bl,0x4d
  423436:	scas   eax,DWORD PTR es:[edi]
  423437:	sti    
  423438:	mov    ebp,0x2a57dcae
  42343d:	pop    eax
  42343e:	xlat   BYTE PTR ds:[ebx]
  42343f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423440:	and    ebp,esp
  423442:	push   ebp
  423443:	aam    0x2a
  423445:	inc    edx
  423446:	test   cl,al
  423448:	push   ebp
  423449:	adc    ah,dl
  42344b:	lods   eax,DWORD PTR ds:[esi]
  42344c:	aam    0xeb
  42344e:	sar    BYTE PTR ds:0x851c1266,0xfb
  423455:	sar    BYTE PTR [edi+0x756d0bec],0x32
  42345c:	push   esp
  42345d:	sbb    DWORD PTR [ecx-0x5d],ebx
  423460:	clc    
  423461:	inc    edi
  423462:	mov    esp,DWORD PTR [ebx+0x2b9adcef]
  423468:	lahf   
  423469:	mov    dh,0xff
  42346b:	xchg   ecx,eax
  42346c:	test   al,0x36
  42346e:	pop    ebx
  42346f:	icebp  
  423470:	ret    0x4b85
  423473:	int3   
  423474:	mov    ebx,0x13efcb40
  423479:	cs aad 0x93
  42347c:	push   ebx
  42347d:	mov    bl,bl
  42347f:	not    BYTE PTR [eax+0x55]
  423482:	daa    
  423483:	repnz adc DWORD PTR [esi+eax*8-0x64],0x6e2d39f1
  42348c:	cmp    al,0x5c
  42348e:	mov    ebp,DWORD PTR [ecx]
  423490:	lds    esi,FWORD PTR [edi+0x41]
  423493:	and    esi,ebp
  423495:	mov    eax,ecx
  423497:	retf   
  423498:	scas   eax,DWORD PTR es:[edi]
  423499:	push   esp
  42349a:	cmp    ecx,DWORD PTR [eax+0x5635a605]
  4234a0:	(bad)  
  4234a1:	arpl   dx,cx
  4234a3:	ja     0x42351a
  4234a5:	fsub   DWORD PTR [edx-0x4b]
  4234a8:	dec    eax
  4234a9:	mov    ebx,0x2fb2005
  4234ae:	fisubr DWORD PTR [ecx+0x4b]
  4234b1:	jo     0x423521
  4234b3:	sti    
  4234b4:	in     eax,0xee
  4234b6:	jne    0x423451
  4234b8:	in     eax,dx
  4234b9:	push   esi
  4234ba:	adc    al,0xa7
  4234bc:	out    0x55,al
  4234be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234bf:	es ss mov dh,0x38
  4234c3:	mov    edx,0xad6977ba
  4234c8:	mov    dh,0x77
  4234ca:	adc    BYTE PTR [ebx],ah
  4234cc:	retf   0xcfca
  4234cf:	je     0x4234dc
  4234d1:	jo     0x4234e8
  4234d3:	mov    dl,0x68
  4234d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234d6:	sahf   
  4234d7:	mov    ebx,0x1215abdd
  4234dc:	push   edi
  4234dd:	sub    al,0x16
  4234df:	pusha  
  4234e0:	popf   
  4234e1:	int3   
  4234e2:	sbb    bh,BYTE PTR [ebp-0x439cde7b]
  4234e8:	scas   eax,DWORD PTR es:[edi]
  4234e9:	add    ch,BYTE PTR [ecx]
  4234eb:	vhaddps ymm0,ymm5,YMMWORD PTR [eax-0x73]
  4234f0:	popf   
  4234f1:	pop    ds
  4234f2:	sbb    ebp,DWORD PTR [ebp+0x7fb733f]
  4234f8:	enter  0x6b1e,0xe6
  4234fc:	adc    BYTE PTR [ecx],bh
  4234fe:	pop    edx
  4234ff:	add    eax,0x8f9e1cdf
  423504:	outs   dx,DWORD PTR ds:[esi]
  423505:	mov    edx,ebx
  423507:	test   eax,0x42a96bfe
  42350c:	lea    ebp,[esi-0x4a]
  42350f:	push   cs
  423510:	hlt    
  423511:	mov    bl,0xb3
  423513:	or     cl,BYTE PTR ds:0xbfdcafde
  423519:	mov    dh,0xea
  42351b:	enter  0xf57b,0xcb
  42351f:	aas    
  423520:	jmp    0x423529
  423522:	in     eax,0x6
  423524:	lods   eax,DWORD PTR ds:[esi]
  423525:	pop    ds
  423526:	mov    DWORD PTR [edx-0x8],esp
  423529:	stos   BYTE PTR es:[edi],al
  42352a:	in     al,0xb4
  42352c:	dec    ecx
  42352d:	lea    ebp,[edx-0x25]
  423530:	dec    esp
  423531:	inc    ebp
  423532:	ja     0x423558
  423534:	shl    BYTE PTR [edi+0x5d],cl
  423537:	mov    ebx,0x4b99dfae
  42353c:	pushf  
  42353d:	sar    BYTE PTR [ecx],1
  42353f:	lea    esi,[esi]
  423541:	pusha  
  423542:	(bad)  
  423543:	out    dx,eax
  423544:	adc    DWORD PTR [esi+0x2413283a],esp
  42354a:	(bad)  
  42354c:	xchg   DWORD PTR [esi],edx
  42354e:	mov    ah,0x21
  423550:	jns    0x42354c
  423552:	jb     0x423515
  423554:	wbinvd 
  423556:	cdq    
  423557:	test   ebp,0xd5063394
  42355d:	jo     0x423503
  42355f:	and    edi,DWORD PTR [eax]
  423561:	aad    0xca
  423563:	aaa    
  423564:	inc    eax
  423565:	pop    esi
  423566:	stc    
  423567:	sbb    BYTE PTR [ebx+0xa2473b1],al
  42356d:	adc    eax,0x7295a77a
  423572:	mov    dl,0xf5
  423574:	xor    dh,BYTE PTR [edi]
  423576:	hlt    
  423577:	xor    al,0x72
  423579:	pusha  
  42357a:	outs   dx,BYTE PTR ds:[esi]
  42357b:	rcl    BYTE PTR [ecx+0x9],0x62
  42357f:	push   ds
  423580:	mov    al,ds:0x54287a70
  423585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423586:	fwait
  423587:	rol    al,1
  423589:	in     eax,dx
  42358a:	sbb    DWORD PTR [esi],ecx
  42358c:	adc    edx,DWORD PTR [ebx]
  42358e:	mov    eax,ds:0x6bf8ebf0
  423593:	gs push cs
  423595:	pop    es
  423596:	mov    BYTE PTR [ebx-0x13],0x7b
  42359a:	inc    ecx
  42359b:	es pusha 
  42359d:	xor    ebp,DWORD PTR [esi+0x16]
  4235a0:	loope  0x423586
  4235a2:	jmp    0x89675b73
  4235a7:	and    al,0x9c
  4235a9:	cmp    BYTE PTR [ebp-0x3f],bh
  4235ac:	scas   eax,DWORD PTR es:[edi]
  4235ad:	jbe    0x423563
  4235af:	popa   
  4235b0:	inc    edi
  4235b1:	repz popa 
  4235b3:	out    0x5,al
  4235b5:	adc    edx,DWORD PTR [ebp-0x6d]
  4235b8:	out    dx,eax
  4235b9:	and    eax,0x533d7c9e
  4235be:	je     0x4235f0
  4235c0:	cmp    eax,ebx
  4235c2:	mov    ah,0xe7
  4235c4:	call   0x5d9c311e
  4235c9:	cdq    
  4235ca:	fdiv   st,st(5)
  4235cc:	inc    esi
  4235cd:	cmp    BYTE PTR [edx+0x3a6551a1],bl
  4235d3:	rcr    esi,0x32
  4235d6:	ins    DWORD PTR es:[edi],dx
  4235d7:	xchg   esp,eax
  4235d8:	scas   al,BYTE PTR es:[edi]
  4235d9:	lahf   
  4235da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235db:	or     eax,0x99196c8d
  4235e0:	or     BYTE PTR [esi],al
  4235e2:	push   ds
  4235e3:	xor    eax,DWORD PTR [ecx]
  4235e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235e6:	jnp    0x4235d2
  4235e8:	popa   
  4235e9:	sahf   
  4235ea:	ins    BYTE PTR es:[edi],dx
  4235eb:	jge    0x4235df
  4235ed:	aad    0x5
  4235ef:	div    DWORD PTR [esi+0x43]
  4235f2:	dec    ecx
  4235f3:	sar    ecx,cl
  4235f5:	mov    edi,0xcb730546
  4235fa:	in     eax,dx
  4235fb:	cmp    edx,ebx
  4235fd:	jmp    0xbf5c:0x6fcec1d3
  423604:	or     DWORD PTR [esi],edi
  423606:	pop    es
  423607:	test   BYTE PTR [ebp+ecx*2-0x6e],dl
  42360b:	clc    
  42360c:	icebp  
  42360d:	jbe    0x423613
  42360f:	jmp    0x646d:0xc3274866
  423616:	dec    eax
  423617:	adc    al,0xc
  423619:	jmp    0x423613
  42361b:	sahf   
  42361c:	sbb    BYTE PTR [eax],dh
  42361e:	stos   BYTE PTR es:[edi],al
  42361f:	retfw  0x7307
  423623:	inc    esp
  423624:	(bad)  
  423626:	outs   dx,DWORD PTR ds:[esi]
  423627:	mov    es,WORD PTR [ecx-0x75225626]
  42362d:	repz out dx,eax
  42362f:	arpl   WORD PTR [edi],dx
  423631:	popa   
  423632:	dec    ebp
  423633:	mov    bl,0x6
  423635:	adc    ch,bl
  423637:	inc    edi
  423638:	in     al,0xba
  42363a:	test   al,0xa1
  42363c:	shl    BYTE PTR es:[esi],1
  42363f:	int3   
  423640:	arpl   WORD PTR [edi+0x5e],si
  423643:	cdq    
  423644:	ficom  WORD PTR [eax+0x29]
  423647:	pop    esp
  423648:	rcl    DWORD PTR [edi-0x1cb26bbb],cl
  42364e:	or     al,0x17
  423650:	arpl   WORD PTR [edx],si
  423652:	dec    BYTE PTR [edx+0x67]
  423655:	add    BYTE PTR [ebx+0x7a5dab2e],cl
  42365b:	push   edx
  42365c:	dec    esp
  42365d:	js     0x4236b2
  42365f:	lods   eax,DWORD PTR ds:[esi]
  423660:	fcmove st,st(2)
  423662:	add    BYTE PTR [edx+0x5a],dl
  423665:	cwde   
  423666:	(bad)
  423669:	mov    WORD PTR [ebx+0x48],gs
  42366c:	sub    al,0x60
  42366e:	pop    ds
  42366f:	jmp    0xc0069d30
  423674:	pop    esi
  423675:	loope  0x423651
  423677:	ss pop ebp
  423679:	pop    edi
  42367a:	out    0x5f,al
  42367c:	test   al,0x64
  42367e:	(bad)  
  423680:	xchg   edi,eax
  423681:	jmp    0x20c3a0f2
  423686:	add    al,0x1e
  423688:	fiadd  DWORD PTR ds:0x710d949e
  42368e:	addr16 pop edx
  423690:	cdq    
  423691:	push   cs
  423692:	xchg   ebp,eax
  423693:	add    eax,0x5ed6b3
  423698:	cmp    BYTE PTR [ebx+0x43cba7fc],dl
  42369e:	in     eax,0xc1
  4236a0:	fistp  QWORD PTR [edx-0x1e599938]
  4236a6:	dec    edi
  4236a7:	mul    eax
  4236a9:	jne    0x423687
  4236ab:	mov    eax,ds:0xebd6c9e7
  4236b0:	add    bh,ah
  4236b2:	and    eax,0x42f6de31
  4236b7:	call   0x4bde:0x5538f3e8
  4236be:	hlt    
  4236bf:	stos   DWORD PTR es:[edi],eax
  4236c0:	add    dh,cl
  4236c2:	xlat   BYTE PTR ds:[ebx]
  4236c3:	sub    cl,BYTE PTR [ebx+0x4d]
  4236c6:	push   eax
  4236c7:	and    eax,0x971c87cf
  4236cc:	out    dx,eax
  4236cd:	xor    BYTE PTR [edi+0x3a],dh
  4236d0:	dec    ecx
  4236d1:	fistp  DWORD PTR [ebx+0x7]
  4236d4:	(bad)  
  4236d5:	js     0x4236d3
  4236d7:	inc    eax
  4236d8:	gs fs cld 
  4236db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236dc:	cdq    
  4236dd:	push   edx
  4236de:	mov    dl,0x46
  4236e0:	clc    
  4236e1:	sub    eax,0xb7904a02
	...
  4236ee:	add    BYTE PTR [eax],al
  4236f0:	add    BYTE PTR [esi+eiz*2],bl
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax+0x3e41dde1],dh
  423701:	ins    DWORD PTR es:[edi],dx
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	lods   eax,DWORD PTR ds:[esi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [eax],dl
  42370a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42370b:	mov    eax,ds:0x6d79b1f7
  423710:	dec    ebp
  423711:	xor    BYTE PTR [ebx],ah
  423713:	xchg   ebx,eax
  423714:	sar    bh,0xf5
  423717:	test   eax,0x652d5eb8
  42371c:	mov    ebp,0xb1d1db0
  423721:	mov    ebp,0x73b46337
  423726:	cld    
  423727:	jae    0x4236d1
  423729:	loopne 0x423717
  42372b:	lock into 
  42372d:	jo     0x4236c6
  42372f:	mov    cl,0x5a
  423731:	mov    bl,0x3
  423733:	pop    esi
  423734:	retf   
  423735:	or     dl,BYTE PTR [esi]
  423737:	out    0xf2,al
  423739:	lahf   
  42373a:	iret   
  42373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42373c:	and    BYTE PTR gs:[edi-0x4d],bl
  423740:	cdq    
  423741:	aad    0x48
  423743:	call   0xaab45535
  423748:	imul   ecx,DWORD PTR [esi+ebx*8-0x3cfbb494],0x90c2bb20
  423753:	cmp    eax,0xdfa77f08
  423758:	bound  esp,QWORD PTR [edx-0x477376c7]
  42375e:	cld    
  42375f:	jmp    0x54e9acce
  423764:	push   edi
  423765:	popa   
  423766:	inc    edi
  423767:	aam    0x17
  423769:	push   ebx
  42376a:	sahf   
  42376b:	mov    ds:0xa95bf64c,al
  423770:	daa    
  423771:	jb     0x42374b
  423773:	rol    BYTE PTR [eax+0x58],0x94
  423777:	pop    ss
  423778:	jae    0x42379e
  42377a:	mov    bl,BYTE PTR [edx]
  42377c:	jecxz  0x4236fe
  42377e:	sti    
  42377f:	sub    ebx,DWORD PTR [eax-0x2c8257d]
  423785:	mov    ebp,0x73dfbd4f
  42378a:	popa   
  42378b:	cli    
  42378c:	push   es
  42378d:	sub    BYTE PTR [eax-0x12],dl
  423790:	sar    DWORD PTR [edx+edx*4+0xc],1
  423794:	nop
  423795:	shr    BYTE PTR [ecx+0x2681f1b2],cl
  42379b:	pop    ecx
  42379c:	test   DWORD PTR cs:[edi+edx*8],ebp
  4237a0:	(bad)
  4237a3:	mov    al,0xb9
  4237a5:	xchg   ecx,eax
  4237a6:	mov    ah,0x5b
  4237a8:	pop    edx
  4237a9:	mov    cl,BYTE PTR [edi+edi*4-0x5be886e2]
  4237b0:	xor    eax,0x62645191
  4237b5:	int    0x7e
  4237b7:	gs and bl,0x70
  4237bb:	arpl   WORD PTR [edi],bp
  4237bd:	out    dx,al
  4237be:	push   edi
  4237bf:	add    eax,0x64222d81
  4237c4:	push   esi
  4237c5:	aas    
  4237c6:	pop    edi
  4237c7:	mov    al,ds:0xf536f7d2
  4237cc:	add    cx,WORD PTR [ecx+0x163fa571]
  4237d3:	mov    bl,BYTE PTR [eax]
  4237d5:	mov    esi,0x22167a21
  4237da:	mov    BYTE PTR [edi+esi*1+0x75],al
  4237de:	mov    dl,0x36
  4237e0:	mov    al,0x1
  4237e2:	ret    0xa3a1
  4237e5:	clc    
  4237e6:	jbe    0x42376b
  4237e8:	loop   0x42378c
  4237ea:	out    0xf6,eax
  4237ec:	mov    al,0x2
  4237ee:	ja     0x42377d
  4237f0:	jg     0x4237ea
  4237f2:	mov    WORD PTR [eax+esi*8],ds
  4237f5:	pop    ebp
  4237f6:	bswap  edx
  4237f8:	cmp    DWORD PTR [ebx+0x44ab1e4f],ecx
  4237fe:	ret    
  4237ff:	scas   al,BYTE PTR es:[edi]
  423800:	pop    ss
  423801:	cmc    
  423802:	icebp  
  423803:	jmp    0x42380b
  423805:	mov    ds:0xa9c8f496,al
  42380a:	(bad)  [esi-0x5b1f4434]
  423810:	fwait
  423811:	pop    esi
  423812:	ror    DWORD PTR [ebp+0x3d],0xde
  423816:	leave  
  423817:	mov    ebp,gs
  423819:	add    eax,0xe5c1a1b7
  42381e:	dec    ebp
  42381f:	daa    
  423820:	mov    al,ds:0xa14dbee0
  423825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423826:	nop
  423827:	outs   dx,DWORD PTR ds:[esi]
  423828:	test   esi,eax
  42382a:	add    eax,0x35506aed
  42382f:	dec    ecx
  423830:	test   al,0x5d
  423832:	jnp    0x42383a
  423834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423835:	loop   0x423889
  423837:	gs loope 0x4237e2
  42383a:	daa    
  42383b:	mov    ds:0xd25d8d2f,al
  423840:	dec    ebp
  423841:	adc    BYTE PTR [esi-0x76],0x81
  423845:	int    0x38
  423847:	das    
  423848:	imul   bp,WORD PTR [ebx+0x78],0x28
  42384d:	or     eax,0x47c17632
  423852:	enter  0x5886,0x94
  423856:	xchg   edi,eax
  423857:	push   ss
  423858:	ret    0xaf2
  42385b:	jno    0x423841
  42385d:	jmp    0x78f5:0x53f07d10
  423864:	sahf   
  423865:	pop    ecx
  423866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423867:	int    0x9a
  423869:	jae    0xc539454e
  42386f:	xlat   BYTE PTR ds:[ebx]
  423870:	call   0x6132459f
  423875:	popa   
  423876:	xchg   ebp,eax
  423877:	in     eax,0xdc
  423879:	xchg   ecx,eax
  42387a:	mov    esp,0x414fc91b
  42387f:	leave  
  423880:	rcr    DWORD PTR [ecx+eiz*8],1
  423883:	and    eax,DWORD PTR [eax-0x30]
  423886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423887:	sbb    ecx,edx
  423889:	nop
  42388a:	dec    esp
  42388b:	adc    ch,BYTE PTR [edi]
  42388d:	loope  0x4238ba
  42388f:	xlat   BYTE PTR ds:[ebx]
  423890:	rcr    BYTE PTR [ecx+0x2a57c132],cl
  423896:	sbb    cl,BYTE PTR [eax+eiz*2+0x134e3b62]
  42389d:	pushf  
  42389e:	loop   0x423864
  4238a0:	std    
  4238a1:	inc    ebp
  4238a2:	add    DWORD PTR [eax],0xd1399535
  4238a8:	push   ebx
  4238a9:	xor    BYTE PTR [edi+0x1fee2b69],ah
  4238af:	add    al,0xc5
  4238b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b2:	adc    ecx,edx
  4238b4:	dec    edi
  4238b5:	fnstcw WORD PTR [esi+ebp*1]
  4238b8:	push   ebp
  4238b9:	sub    BYTE PTR [ebx],dh
  4238bb:	pop    ebp
  4238bc:	mov    dl,0x36
  4238be:	mov    DWORD PTR [eax],esp
  4238c0:	(bad)  
  4238c1:	xor    eax,0x1b379ae0
  4238c6:	sahf   
  4238c7:	jns    0x42391c
  4238c9:	call   0xa30f:0x2cf85b62
  4238d0:	ret    0xff8b
  4238d3:	cmp    dl,BYTE PTR [ebp-0x6ba48eb]
  4238d9:	sbb    BYTE PTR [esi],ch
  4238db:	mov    al,0x75
  4238dd:	push   0x783d852e
  4238e2:	cdq    
  4238e3:	xor    esp,DWORD PTR [ebx+edi*2-0x36]
  4238e7:	xlat   BYTE PTR ds:[ebx]
  4238e8:	add    BYTE PTR [esi-0xe],ch
  4238eb:	pop    ebx
  4238ec:	mov    ebp,0xbb961e84
  4238f1:	imul   esi,DWORD PTR [ebp+0x6],0x6130a8a4
  4238f8:	bound  esp,QWORD PTR [ecx+eiz*1-0x3]
  4238fc:	mov    eax,0xe4094541
  423901:	ret    0x76d
  423904:	add    eax,0x37e99971
  423909:	inc    eax
  42390a:	jmp    0xe1ac889f
  42390f:	jecxz  0x4238c6
  423911:	pop    ds
  423912:	inc    esp
  423913:	(bad)  
  423914:	push   ss
  423915:	jl     0x4238d7
  423917:	dec    eax
  423918:	jb     0x4238bf
  42391a:	retf   
  42391b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391c:	ret    0xe042
  42391f:	and    BYTE PTR [esi+0x388fb0c0],dh
  423925:	ficomp DWORD PTR [edi-0x71fc8b1]
  42392b:	mov    edi,0x384ddeb0
  423930:	mov    ds:0x64c3d650,eax
  423935:	call   0xc5aa5ed8
  42393a:	lock shl DWORD PTR [edx-0x4d3573c9],cl
  423941:	jmp    0x9ca0:0xc83c583e
  423948:	cmp    ch,ah
  42394a:	iret   
  42394b:	jl     0x423923
  42394d:	xchg   edi,eax
  42394e:	adc    eax,0x7c1a563e
  423953:	xor    bh,BYTE PTR [eax+esi*8]
  423956:	enter  0x2416,0xfb
  42395a:	or     DWORD PTR [ebx+eiz*4-0x1b6b0499],0xfffffffc
  423962:	scas   al,BYTE PTR es:[edi]
  423963:	cmp    eax,0xb50b17dc
  423968:	mov    al,ds:0xd0957fb3
  42396d:	lea    si,[ebx-0x54f16385]
  423974:	mov    ds:0x30f3a14,eax
  423979:	call   0xea44:0xae631e5b
  423980:	push   edx
  423981:	bound  edx,QWORD PTR [esi+0x6e46a8b4]
  423987:	xchg   ebp,eax
  423988:	nop
  423989:	push   ss
  42398a:	xchg   DWORD PTR ds:0xff58067,ecx
  423990:	mov    bh,0x5e
  423992:	stc    
  423993:	test   BYTE PTR [eax+0x38699d7f],bh
  423999:	inc    eax
  42399a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42399b:	push   0xbfe49d83
  4239a0:	es ins BYTE PTR es:[edi],dx
  4239a2:	mov    ebp,0xa6665fca
  4239a7:	daa    
  4239a8:	and    al,0xa7
  4239aa:	jg     0x42396d
  4239ac:	and    DWORD PTR [edx],edi
  4239ae:	xchg   esp,eax
  4239af:	adc    eax,ebx
  4239b1:	rcr    esp,1
  4239b3:	(bad)  
  4239b4:	cmp    BYTE PTR [eax+0x1f6f886d],cl
  4239ba:	sti    
  4239bb:	adc    DWORD PTR [ecx],0xdf488032
  4239c1:	dec    edx
  4239c2:	or     al,0x9f
  4239c4:	fs sbb al,0xbd
  4239c7:	mov    al,ds:0xc03c5768
  4239cc:	call   0x76df9ab3
  4239d1:	mov    edx,ebx
  4239d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239d4:	(bad)  
  4239d5:	pop    ebx
  4239d6:	(bad)  
  4239d7:	pop    edi
  4239d8:	gs repz js 0x423984
  4239dc:	push   0x38
  4239de:	jle    0x4239be
  4239e0:	loope  0x423a04
  4239e2:	(bad)  
  4239e3:	lds    ecx,FWORD PTR [esi+edx*8+0x4bdbbfbf]
  4239ea:	adc    eax,0xa2b821b5
  4239ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239f0:	retf   
  4239f1:	pop    edx
  4239f2:	out    0xc6,al
  4239f4:	enter  0xa44d,0xcc
  4239f8:	dec    ecx
  4239f9:	mov    ah,0x52
  4239fb:	fs int 0x6a
  4239fe:	or     eax,0xd8e52754
  423a03:	add    BYTE PTR [ebp+0x44],0x57
  423a07:	fiadd  WORD PTR [edi]
  423a09:	cli    
  423a0a:	pop    ds
  423a0b:	or     DWORD PTR [ebx+eax*1-0x57e77ded],esi
  423a12:	adc    BYTE PTR [ebp-0x4bc5f5d7],dh
  423a18:	fild   DWORD PTR [esi]
  423a1a:	push   ecx
  423a1b:	loopne 0x4239b0
  423a1d:	cmp    esp,DWORD PTR ds:0xbadc5bbc
  423a23:	xchg   eax,ecx
  423a25:	jo     0x423a7c
  423a27:	(bad)  
  423a28:	jp     0x423aa6
  423a2a:	jge    0x423a86
  423a2c:	std    
  423a2d:	repz in al,0xe8
  423a30:	loope  0x4239ff
  423a32:	sbb    DWORD PTR [eax-0x49bcf5dd],esp
  423a38:	sub    esi,DWORD PTR [eax]
  423a3a:	pushf  
  423a3b:	and    bl,BYTE PTR [ebx]
  423a3d:	pop    ebp
  423a3e:	adc    DWORD PTR [esi],esp
  423a40:	and    esp,DWORD PTR [di-0x4fad]
  423a45:	dec    ebx
  423a46:	pop    cx
  423a48:	sti    
  423a49:	pop    esp
  423a4a:	cmp    DWORD PTR [esi],esi
  423a4c:	in     eax,dx
  423a4d:	cmp    ebx,DWORD PTR [ecx+0x29]
  423a50:	mov    DWORD PTR [esi-0xe],ebp
  423a53:	rcr    DWORD PTR [esi-0x3057455],1
  423a59:	or     al,0x67
  423a5b:	jmp    0x1fed:0xc5930596
  423a62:	ds xchg ebp,eax
  423a64:	dec    esp
  423a65:	xchg   esi,eax
  423a66:	mov    ds:0x2f89f927,al
  423a6b:	out    dx,eax
  423a6c:	mov    BYTE PTR [eax+0x9],cl
  423a6f:	jmp    0x423a10
  423a71:	stos   DWORD PTR es:[edi],eax
  423a72:	push   ebp
  423a73:	dec    ebx
  423a74:	mov    ebp,0xa88157e3
  423a79:	mov    ebp,DWORD PTR [edi+0x4eb034ae]
  423a7f:	jecxz  0x423a2f
  423a81:	pop    ebp
  423a82:	jb     0x423a6a
  423a84:	neg    DWORD PTR [eax+0x3043f671]
  423a8a:	imul   ebx,eax,0x29
  423a8d:	imul   eax,DWORD PTR [edi+0x3f],0x65
  423a91:	jno    0x423ad8
  423a93:	lds    esp,FWORD PTR [ecx]
  423a95:	add    edi,DWORD PTR [ebp-0x173d9ff2]
  423a9b:	mov    esp,0xff4c24d8
  423aa0:	dec    ebp
  423aa1:	pop    ebp
  423aa2:	scas   eax,DWORD PTR es:[edi]
  423aa3:	pop    eax
  423aa4:	cmc    
  423aa5:	repz mov dh,0x26
  423aa8:	outs   dx,DWORD PTR ds:[esi]
  423aa9:	jle    0x423b02
  423aab:	and    al,0xcc
  423aad:	sub    ch,BYTE PTR [ebx+0x53]
  423ab0:	leave  
  423ab1:	inc    ebp
  423ab2:	or     BYTE PTR [esi-0x15],ah
  423ab5:	fiadd  DWORD PTR [eax]
	...
  423abf:	add    BYTE PTR [eax],al
  423ac1:	dec    ecx
  423ac2:	cli    
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi-0xe],cs
  423ace:	add    BYTE PTR [ebp-0x26],bl
  423ad1:	sbb    dh,BYTE PTR [ebx+0x3ad0001]
  423ad7:	add    BYTE PTR [eax],al
  423ad9:	and    DWORD PTR cs:[eax+ebp*8-0x5d],0x8
  423adf:	das    
  423ae0:	ret    
  423ae1:	pop    es
  423ae2:	jge    0x423aed
  423ae4:	ja     0x423aab
  423ae6:	jbe    0x423a89
  423ae8:	(bad)  
  423ae9:	jne    0x423af1
  423aeb:	int    0xc1
  423aed:	pushf  
  423aee:	pop    edi
  423aef:	jg     0x423ac3
  423af1:	test   BYTE PTR [esi+ecx*8-0x6934ffc8],ah
  423af8:	sub    DWORD PTR [ebp-0x76],0xffffffa5
  423afc:	out    dx,eax
  423afd:	and    ebx,DWORD PTR ss:[esi-0x5299b668]
  423b04:	jmp    0x423b7a
  423b06:	sub    eax,0x4eaa4901
  423b0b:	leave  
  423b0c:	or     dl,dl
  423b0e:	mov    bh,0x54
  423b10:	push   ecx
  423b11:	push   cs
  423b12:	or     al,0x8b
  423b14:	mov    ds:0xc2ddde4,eax
  423b19:	mov    eax,cs
  423b1b:	into   
  423b1c:	sbb    BYTE PTR [edi-0x24],al
  423b1f:	jbe    0x423aab
  423b21:	pop    ecx
  423b22:	push   ebx
  423b23:	push   ebx
  423b24:	retf   0x680f
  423b27:	add    al,0x1d
  423b29:	or     DWORD PTR [edi-0x52],eax
  423b2c:	mov    gs,WORD PTR [edi+0x5719e3c7]
  423b32:	xchg   BYTE PTR [ebp-0x215aa58a],ch
  423b38:	mov    ?,WORD PTR [esi]
  423b3a:	inc    ebx
  423b3b:	sub    BYTE PTR [ebx],0x74
  423b3e:	outs   dx,DWORD PTR ds:[esi]
  423b3f:	cs xchg ecx,eax
  423b41:	fs ins DWORD PTR es:[edi],dx
  423b43:	cdq    
  423b44:	xchg   ebp,eax
  423b45:	ja     0x423bb1
  423b47:	mov    edx,0x59955f9
  423b4c:	daa    
  423b4d:	xchg   edx,eax
  423b4e:	pusha  
  423b4f:	jmp    0x423bc5
  423b51:	shl    DWORD PTR [ecx],cl
  423b53:	push   es
  423b54:	test   DWORD PTR [eax],edi
  423b56:	jne    0x423b7b
  423b58:	pop    edi
  423b59:	pushf  
  423b5a:	dec    BYTE PTR [ebx-0x61ad5a8b]
  423b60:	add    al,0x22
  423b62:	(bad)  
  423b63:	mov    ah,0x52
  423b65:	jmp    0xccd34fc0
  423b6a:	jg     0x423b8f
  423b6c:	gs xchg esp,eax
  423b6e:	ret    0x19c3
  423b71:	addr16 je 0x423b33
  423b74:	adc    BYTE PTR [edx-0x26],ah
  423b77:	sub    BYTE PTR [ebx-0x80],cl
  423b7a:	scas   eax,DWORD PTR es:[edi]
  423b7b:	iret   
  423b7c:	or     DWORD PTR ds:0x8a87ce63,esp
  423b82:	push   esi
  423b83:	in     al,dx
  423b84:	nop
  423b85:	stos   BYTE PTR es:[edi],al
  423b86:	adc    eax,0xc66b6efb
  423b8b:	addr16 inc edx
  423b8d:	out    dx,eax
  423b8e:	jmp    0xac859319
  423b93:	pop    ebx
  423b94:	scas   eax,DWORD PTR es:[edi]
  423b95:	sub    ebp,ebp
  423b97:	clc    
  423b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b99:	data16 ins BYTE PTR es:[edi],dx
  423b9b:	pusha  
  423b9c:	imul   edi,esp,0x52682e54
  423ba2:	xchg   DWORD PTR [ebp+0x3827c214],esi
  423ba8:	push   edi
  423ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423baa:	aad    0xc7
  423bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bad:	retf   
  423bae:	push   ss
  423baf:	cdq    
  423bb0:	fiadd  WORD PTR cs:0x2333b071
  423bb7:	cld    
  423bb8:	sub    esp,esp
  423bba:	and    BYTE PTR [ecx],dl
  423bbc:	xor    DWORD PTR ds:0x45fad503,ebp
  423bc2:	jmp    0xc43d0d48
  423bc7:	in     eax,0x69
  423bc9:	mov    ebx,0x9c6dfab5
  423bce:	jo     0x423b6c
  423bd0:	fsubr  st(0),st
  423bd2:	stos   BYTE PTR es:[edi],al
  423bd3:	pop    edx
  423bd4:	adc    DWORD PTR ds:0xeee064ad,ebp
  423bda:	or     al,0x61
  423bdc:	shr    BYTE PTR [edx+0x77],cl
  423bdf:	(bad)  
  423be0:	dec    DWORD PTR ds:0x45c022e5
  423be6:	or     esi,DWORD PTR [eax+0x7b]
  423be9:	(bad)  
  423bea:	hlt    
  423beb:	aad    0xf2
  423bed:	sub    esp,DWORD PTR [edx-0x4e264461]
  423bf3:	fs loopne 0x423bfe
  423bf6:	or     al,0xff
  423bf8:	int3   
  423bf9:	cmp    esi,edx
  423bfb:	stos   DWORD PTR es:[edi],eax
  423bfc:	sbb    edx,DWORD PTR [ecx+0x38eaf4c6]
  423c02:	and    ch,dh
  423c04:	les    ebx,FWORD PTR fs:[ecx-0x2ae22d90]
  423c0b:	(bad)  
  423c0c:	dec    ebx
  423c0d:	in     eax,dx
  423c0e:	push   ss
  423c0f:	rcl    DWORD PTR [ebx],0x13
  423c12:	push   eax
  423c13:	pop    edx
  423c14:	jbe    0x423bd3
  423c16:	xchg   BYTE PTR [edx],al
  423c18:	and    ah,BYTE PTR [edx+eiz*1]
  423c1b:	aas    
  423c1c:	arpl   WORD PTR fs:[edx],bx
  423c1f:	sub    eax,0xe7f0191d
  423c24:	retf   0x4b83
  423c27:	call   0xbeb9c4ee
  423c2c:	pop    es
  423c2d:	add    edx,DWORD PTR [edi-0x482b4313]
  423c33:	pop    edx
  423c34:	dec    ebp
  423c35:	(bad)  
  423c36:	daa    
  423c37:	mov    cl,BYTE PTR [ebx+0x22]
  423c3a:	or     al,0x2f
  423c3c:	call   0x46c2:0x74c45f14
  423c43:	sbb    ch,al
  423c45:	or     dl,ch
  423c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c48:	ret    
  423c49:	test   eax,0x792566ed
  423c4e:	adc    al,BYTE PTR [ecx+edx*4+0x6]
  423c52:	add    eax,0xbed51778
  423c57:	outs   dx,BYTE PTR ds:[esi]
  423c58:	inc    esp
  423c59:	mov    DWORD PTR ds:0xe761e151,ecx
  423c5f:	cld    
  423c60:	sbb    DWORD PTR [edi],ebx
  423c62:	outs   dx,DWORD PTR ds:[esi]
  423c63:	pop    ebp
  423c64:	push   ds
  423c65:	jmp    0xf5fb:0xe102d5c8
  423c6c:	stc    
  423c6d:	test   al,0x10
  423c6f:	adc    cl,ah
  423c71:	xchg   DWORD PTR [ebp+0x20dedb82],edx
  423c77:	ins    BYTE PTR es:[edi],dx
  423c78:	jmp    0x282:0xb8d0f254
  423c7f:	jnp    0x423c5b
  423c81:	pop    es
  423c82:	inc    eax
  423c83:	je     0x423cb3
  423c85:	add    cl,BYTE PTR [ebp+0x13]
  423c88:	scas   eax,DWORD PTR es:[edi]
  423c89:	xchg   ebp,eax
  423c8a:	clc    
  423c8b:	imul   ebx,DWORD PTR [ebp-0x5d],0xd140d2dd
  423c92:	test   BYTE PTR [eax+0x31],0x20
  423c96:	dec    ebp
  423c97:	test   eax,0x7eba2dc0
  423c9c:	scas   eax,DWORD PTR es:[edi]
  423c9d:	cld    
  423c9e:	in     al,0x10
  423ca0:	shl    DWORD PTR [ebx+0x49196b43],1
  423ca6:	xchg   ebp,eax
  423ca7:	dec    ecx
  423ca8:	adc    dh,dh
  423caa:	mov    esp,esi
  423cac:	or     eax,0x23ab08fc
  423cb1:	inc    ebp
  423cb2:	into   
  423cb3:	fsubr  DWORD PTR ds:0xb00b93a4
  423cb9:	out    0x7f,eax
  423cbb:	pop    ebx
  423cbc:	(bad)  
  423cbd:	lods   eax,DWORD PTR ds:[esi]
  423cbe:	add    eax,DWORD PTR [ecx+0x1d48e3a2]
  423cc4:	scas   eax,DWORD PTR es:[edi]
  423cc5:	pop    esp
  423cc6:	retf   0x6361
  423cc9:	and    BYTE PTR [eax+ebx*4-0x12],0x7c
  423cce:	push   ebp
  423ccf:	dec    esi
  423cd0:	xlat   BYTE PTR ds:[ebx]
  423cd1:	mov    bh,0x73
  423cd3:	pop    eax
  423cd4:	mov    ch,0x4e
  423cd6:	jno    0x423d22
  423cd8:	fild   WORD PTR [esi]
  423cda:	jno    0x423cfa
  423cdc:	dec    ebp
  423cdd:	loopne 0x423cb8
  423cdf:	cmp    BYTE PTR [edx+edx*2+0x7a],bl
  423ce3:	cld    
  423ce4:	add    DWORD PTR [esi+0x7de5223],edi
  423cea:	and    BYTE PTR [edx+0xcf058df],dl
  423cf0:	mov    ebx,0x5e7197d2
  423cf5:	fst    QWORD PTR ds:0x846df7b8
  423cfb:	xchg   edx,eax
  423cfc:	mov    cl,0x2b
  423cfe:	das    
  423cff:	sbb    ch,BYTE PTR [edi+0x3cd30d6c]
  423d05:	dec    esi
  423d06:	push   0xdb62d56a
  423d0b:	jne    0x423d22
  423d0d:	pusha  
  423d0e:	inc    edi
  423d0f:	scas   al,BYTE PTR es:[edi]
  423d10:	jp     0x423cfe
  423d12:	mov    ds:0x41881e37,eax
  423d17:	(bad)  
  423d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d19:	repz pop ds
  423d1b:	jbe    0x423cb5
  423d1d:	les    edx,FWORD PTR [esi+0x2496d6ff]
  423d23:	ss mov cs,eax
  423d26:	push   ebp
  423d27:	or     esp,DWORD PTR [edx+0x6711af22]
  423d2d:	ror    BYTE PTR [edx+0x246752f9],cl
  423d33:	(bad)  
  423d34:	imul   ebx,DWORD PTR [ecx-0x7616bd8d],0xffffffab
  423d3b:	push   0x4f
  423d3d:	int    0x91
  423d3f:	retf   
  423d40:	lods   eax,DWORD PTR ds:[esi]
  423d41:	ror    DWORD PTR [eax-0x59fd8324],0xc
  423d48:	dec    edi
  423d49:	inc    ebp
  423d4a:	pop    ds
  423d4b:	cwde   
  423d4c:	ffree  st(3)
  423d4e:	sbb    BYTE PTR [ebp+0x79a1a92c],0x1d
  423d55:	ret    0xb4cf
  423d58:	fdivr  DWORD PTR [eax+0x36305eec]
  423d5e:	push   0x8efa37df
  423d63:	test   eax,0x57168e8f
  423d68:	(bad)  
  423d69:	out    dx,eax
  423d6a:	pusha  
  423d6b:	add    BYTE PTR [edi+0x6cff5ddf],ch
  423d71:	ja     0x423da4
  423d73:	jmp    0x4752a9c9
  423d78:	jecxz  0x423dbd
  423d7a:	jb     0x423cfe
  423d7c:	mov    bh,0xe5
  423d7e:	push   eax
  423d7f:	fsub   QWORD PTR [edx-0x76]
  423d82:	push   esp
  423d83:	jns    0x423d84
  423d85:	pop    edi
  423d86:	cwde   
  423d87:	mov    bh,0xdb
  423d89:	mov    dl,0xbb
  423d8b:	xor    bh,cl
  423d8d:	mov    eax,ds:0xbeebaf60
  423d92:	xor    eax,0x4f701ed6
  423d97:	adc    al,0x30
  423d99:	and    eax,0x26a704e6
  423d9e:	jns    0x423dbe
  423da0:	fnstenv [esp+eax*1]
  423da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423da4:	mov    WORD PTR [edi],gs
  423da6:	ds cdq 
  423da8:	mov    ch,0x4a
  423daa:	jp     0x423e10
  423dac:	ror    BYTE PTR [ebp+0x7],cl
  423daf:	aas    
  423db0:	(bad)  [eax]
  423db2:	mov    al,ds:0x1854aefe
  423db7:	adc    DWORD PTR [eax+0x76],ecx
  423dba:	nop
  423dbb:	dec    ebx
  423dbc:	fucomip st,st(1)
  423dbe:	mov    ah,0xfa
  423dc0:	inc    esp
  423dc1:	and    BYTE PTR [esi+eax*4-0x52],ch
  423dc5:	mov    eax,DWORD PTR [ebx+ebx*8]
  423dc8:	mov    esi,0x3cfec9f6
  423dcd:	lds    edx,FWORD PTR [eax+0x2dae42d2]
  423dd3:	scas   al,BYTE PTR es:[edi]
  423dd4:	jno    0x423d96
  423dd6:	rcl    dl,0x6f
  423dd9:	int3   
  423dda:	jmp    0x423df3
  423ddc:	nop
  423ddd:	xchg   esi,eax
  423dde:	fwait
  423ddf:	push   es
  423de0:	mov    ecx,0x88e62866
  423de5:	mov    ds:0x969a6eac,al
  423dea:	outs   dx,DWORD PTR ds:[esi]
  423deb:	jb     0x423e03
  423ded:	out    dx,eax
  423dee:	call   0xcc41:0x5791313e
  423df5:	xchg   esi,eax
  423df6:	mov    WORD PTR [ecx-0x31],ds
  423df9:	adc    BYTE PTR [edi+0x3fc74618],ah
  423dff:	jns    0x423dfd
  423e01:	jmp    0x423da0
  423e03:	pop    ss
  423e04:	int    0x2b
  423e06:	mov    ebx,0x4ce8a5da
  423e0b:	inc    edx
  423e0c:	clc    
  423e0d:	inc    ecx
  423e0e:	lods   eax,DWORD PTR ds:[esi]
  423e0f:	addr16 popf 
  423e11:	test   edx,esi
  423e13:	push   esi
  423e14:	out    dx,eax
  423e15:	(bad)  
  423e16:	mov    ds:0x6ec6c1de,eax
  423e1b:	xchg   ecx,eax
  423e1c:	ret    0x1f6d
  423e1f:	in     al,dx
  423e20:	pop    esp
  423e21:	sub    dh,BYTE PTR [ecx]
  423e23:	inc    esp
  423e24:	mov    edx,0x9e6d6f46
  423e29:	cld    
  423e2a:	add    ecx,edx
  423e2c:	jb     0x423dbc
  423e2e:	arpl   WORD PTR [eax],di
  423e30:	pusha  
  423e31:	inc    ebp
  423e32:	mov    ch,0x82
  423e34:	pop    edi
  423e35:	xchg   ebx,eax
  423e36:	adc    DWORD PTR [ebp-0x34aceb31],edx
  423e3c:	or     BYTE PTR [edi],dl
  423e3e:	std    
  423e3f:	push   0xe363a5ab
  423e44:	repz and ebp,DWORD PTR [edx+0xa5d401a]
  423e4b:	dec    esi
  423e4c:	cmc    
  423e4d:	cmp    al,BYTE PTR [edi]
  423e4f:	cmp    eax,0x1bc52439
  423e54:	arpl   sp,bp
  423e56:	adc    bl,BYTE PTR [edi+0x28]
  423e59:	out    0xdb,eax
  423e5b:	scas   al,BYTE PTR es:[edi]
  423e5c:	and    eax,0xe44cb3b9
  423e61:	je     0x423e88
  423e63:	mov    eax,ds:0x757c7fa
  423e68:	loope  0x423e74
  423e6a:	arpl   WORD PTR [eax+0x4830ef3],dx
  423e70:	xchg   edx,eax
  423e71:	xchg   edx,eax
  423e72:	and    DWORD PTR ds:0xbfc4864f,0x11
  423e79:	add    ebp,DWORD PTR [eax-0x3894e412]
  423e7f:	pop    esp
  423e80:	inc    esp
  423e81:	dec    ebx
  423e82:	pop    ds
  423e83:	jnp    0x423efe
  423e85:	call   0x423e8a
  423e8a:	add    BYTE PTR [eax],al
  423e8c:	add    BYTE PTR [eax],al
  423e8e:	add    BYTE PTR [eax],al
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0x7f
  423e9e:	cwde   
  423e9f:	ret    0xc7d0
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [ebp+0x29000003],ch
  423eaa:	mov    eax,ds:0x79038ab7
  423eaf:	mov    esi,0x4369205e
  423eb4:	and    dl,BYTE PTR [ebx]
  423eb6:	clc    
  423eb7:	mov    bl,0x7c
  423eb9:	adc    edx,ebp
  423ebb:	into   
  423ebc:	sub    al,0x7e
  423ebe:	adc    al,0xea
  423ec0:	std    
  423ec1:	add    eax,0x53edd6df
  423ec6:	call   0x874e8ef1
  423ecb:	rcl    DWORD PTR [esi-0x13],cl
  423ece:	xchg   ebx,eax
  423ecf:	push   cs
  423ed0:	xor    ecx,ebp
  423ed2:	push   ebp
  423ed3:	(bad)  
  423ed4:	xlat   BYTE PTR ds:[ebx]
  423ed5:	std    
  423ed6:	mov    ecx,0x7298faab
  423edb:	popa   
  423edc:	sbb    eax,0x7b0cfefb
  423ee1:	cli    
  423ee2:	xchg   esp,eax
  423ee3:	ret    0x81c0
  423ee6:	popa   
  423ee7:	unpckhps xmm1,XMMWORD PTR [esi-0x25]
  423eeb:	xchg   edi,eax
  423eec:	pop    edi
  423eed:	jmp    0x423f64
  423eef:	sar    dl,cl
  423ef1:	jo     0x423f1e
  423ef3:	add    eax,0x21782007
  423ef8:	bound  edi,QWORD PTR ds:0x89433901
  423efe:	lea    esi,[ebx-0x51]
  423f01:	pop    edi
  423f02:	xchg   BYTE PTR [ebp+0x69],dl
  423f05:	js     0x423f0f
  423f07:	and    eax,0xc404544a
  423f0c:	xchg   edx,eax
  423f0d:	add    BYTE PTR [edx+0x6],cl
  423f10:	mov    ebp,0xe493fbe1
  423f15:	scas   eax,DWORD PTR es:[edi]
  423f16:	jecxz  0x423f97
  423f18:	nop
  423f19:	data16 das 
  423f1b:	daa    
  423f1c:	mov    ds:0x398e920e,al
  423f21:	sub    al,0xd0
  423f23:	push   edx
  423f24:	pop    es
  423f25:	xlat   BYTE PTR ds:[ebx]
  423f26:	out    dx,eax
  423f27:	adc    BYTE PTR [bp+di+0x6484],dh
  423f2c:	shl    dh,1
  423f2e:	sbb    eax,DWORD PTR [esi+eiz*1]
  423f31:	(bad)  
  423f32:	mov    dl,0xa1
  423f34:	and    BYTE PTR [ecx-0x4feb18f6],cl
  423f3a:	nop
  423f3b:	rcr    DWORD PTR [edi+0x63],0x33
  423f3f:	jns    0x423f62
  423f41:	mov    bh,0xbb
  423f43:	push   ebx
  423f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f45:	(bad)  
  423f46:	xlat   BYTE PTR ds:[ebx]
  423f47:	ds mov cl,0x67
  423f4a:	call   0x50fcbd3b
  423f4f:	and    al,0x7c
  423f51:	sbb    ebp,0x73
  423f54:	aaa    
  423f55:	and    edx,DWORD PTR ds:0x29fcbf9e
  423f5b:	sub    BYTE PTR [esi+0x46],bh
  423f5e:	jmp    0x423f2e
  423f60:	push   ebx
  423f61:	add    BYTE PTR [edi+0xfd95f7f],bl
  423f67:	sub    eax,0xd5ca13c0
  423f6c:	arpl   WORD PTR [edi+0x1d],cx
  423f6f:	xchg   edx,eax
  423f70:	rcl    BYTE PTR [ecx+eiz*1-0x2ab0f565],0x3f
  423f78:	aaa    
  423f79:	pop    esi
  423f7a:	out    dx,eax
  423f7b:	mov    esi,esi
  423f7d:	mov    ds:0x41ba916f,eax
  423f82:	stos   BYTE PTR es:[edi],al
  423f83:	rcl    BYTE PTR [ebx+0x3647df9c],cl
  423f89:	push   0x3acca782
  423f8e:	sbb    ah,BYTE PTR [ebp-0x67]
  423f91:	jge    0x423f49
  423f93:	shl    eax,1
  423f95:	and    al,0x58
  423f97:	xchg   al,dl
  423f99:	inc    eax
  423f9a:	dec    ecx
  423f9b:	jae    0x424000
  423f9d:	inc    esi
  423f9e:	ins    BYTE PTR es:[edi],dx
  423f9f:	push   edx
  423fa0:	sub    eax,0x62511fca
  423fa5:	cwde   
  423fa6:	iret   
  423fa7:	jecxz  0x424005
  423fa9:	lea    ecx,[edx-0x66]
  423fac:	retf   
  423fad:	pop    ebp
  423fae:	sahf   
  423faf:	add    ecx,DWORD PTR [edi+0x1a]
  423fb2:	adc    eax,0xbc7ffa56
  423fb7:	push   edx
  423fb8:	jl     0x42400b
  423fba:	xchg   ecx,eax
  423fbb:	int    0xd
  423fbd:	mov    edx,0xfa9fea8f
  423fc2:	mov    eax,edi
  423fc4:	out    0x3f,al
  423fc6:	iret   
  423fc7:	cwde   
  423fc8:	mov    al,0x7c
  423fca:	mov    ebx,0x29febcb6
  423fcf:	scas   eax,DWORD PTR es:[edi]
  423fd0:	js     0x423f55
  423fd2:	dec    ebx
  423fd3:	div    DWORD PTR [ecx]
  423fd5:	inc    ebp
  423fd6:	mov    WORD PTR [ebx],fs
  423fd8:	call   0x10923c1c
  423fdd:	scas   eax,DWORD PTR es:[edi]
  423fde:	mov    edi,0x69f078fc
  423fe3:	cmc    
  423fe4:	icebp  
  423fe5:	lods   al,BYTE PTR ds:[esi]
  423fe6:	int    0x3c
  423fe8:	fsub   DWORD PTR [ebx-0x7699a9e9]
  423fee:	mov    bl,0x43
  423ff0:	int    0xb9
  423ff2:	(bad)  
  423ff3:	mov    esi,0xda6a18af
  423ff8:	or     DWORD PTR [edx+0x4e],ecx
  423ffb:	jbe    0x42400b
  423ffd:	imul   ecx,DWORD PTR [edi+0x3a],0x74
  424001:	adc    BYTE PTR [ebx+0x51],0xdf
  424005:	push   ebx
  424006:	ja     0x423faa
  424008:	sbb    eax,0x4ca5070d
  42400d:	leave  
  42400e:	push   esi
  424010:	std    
  424011:	je     0x42407a
  424013:	outs   dx,DWORD PTR ds:[esi]
  424014:	add    bl,BYTE PTR [ebp+esi*4+0x2]
  424018:	xchg   ebx,eax
  424019:	mov    fs,esi
  42401b:	or     eax,0xf2db2eed
  424020:	sbb    cl,BYTE PTR [esi]
  424022:	or     BYTE PTR [eax+0xfdf9626],ah
  424028:	jbe    0x423fff
  42402a:	cmc    
  42402b:	je     0x42405f
  42402d:	outs   dx,DWORD PTR ds:[esi]
  42402e:	imul   ecx,DWORD PTR [esi],0xb9cdbd3b
  424034:	js     0x423fbe
  424036:	xchg   DWORD PTR [ebp-0x102936d5],esi
  42403c:	popf   
  42403d:	sbb    DWORD PTR [eax],ebp
  42403f:	jmp    0xefc841ae
  424044:	imul   ecx,DWORD PTR [ebx+0x4c0c8635],0x718fc6fe
  42404e:	arpl   WORD PTR [edi],sp
  424050:	mov    DWORD PTR [ebx+eiz*2-0x40],ebp
  424054:	js     0x424076
  424056:	push   esp
  424057:	adc    BYTE PTR [edi+0x3dc3dbb],ah
  42405d:	cmp    al,0x32
  42405f:	(bad)  
  424060:	mov    WORD PTR [esi-0x6e],es
  424063:	xchg   BYTE PTR es:[eax+0x53],bh
  424067:	scas   al,BYTE PTR es:[edi]
  424068:	inc    ebx
  424069:	inc    eax
  42406a:	xchg   edi,eax
  42406b:	or     BYTE PTR [ebp-0x183beeb3],bl
  424071:	push   cs
  424072:	or     dl,0x4a
  424075:	or     eax,DWORD PTR [ecx-0x41]
  424078:	cmp    al,dl
  42407a:	lods   al,BYTE PTR ds:[esi]
  42407b:	(bad)  
  42407c:	jmp    0xef43:0x72d2f7ae
  424083:	jno    0x424061
  424085:	mov    ch,0x1f
  424087:	lahf   
  424088:	or     ecx,DWORD PTR [ebx+edi*4+0xbf90923]
  42408f:	xor    eax,0x6a85eeed
  424094:	dec    esi
  424095:	mov    bl,0x5e
  424097:	fst    DWORD PTR [ebx+0x1]
  42409a:	lods   eax,DWORD PTR ds:[esi]
  42409b:	cmp    cl,ah
  42409d:	push   es
  42409e:	xchg   ecx,eax
  42409f:	inc    edx
  4240a0:	shl    BYTE PTR [ebx-0x235570bf],cl
  4240a6:	fiadd  DWORD PTR [edx+edi*8+0x5d]
  4240aa:	inc    ecx
  4240ab:	mov    edx,es
  4240ad:	jbe    0x424048
  4240af:	mov    edx,0xe10b70c4
  4240b4:	push   0x88861082
  4240b9:	dec    esi
  4240ba:	pop    ds
  4240bb:	and    eax,DWORD PTR ds:0x452fadfd
  4240c1:	cdq    
  4240c2:	(bad)
  4240c5:	jg     0x424064
  4240c7:	(bad)  
  4240c8:	pop    ecx
  4240c9:	mov    bh,0xaf
  4240cb:	lock xchg ebp,eax
  4240cd:	out    0xcb,al
  4240cf:	mov    eax,ds:0x71474487
  4240d4:	nop
  4240d5:	out    0xd,al
  4240d7:	scas   eax,DWORD PTR es:[edi]
  4240d8:	jo     0x4240e7
  4240da:	(bad)  
  4240db:	xor    BYTE PTR [eax+0x5e4da1f6],bl
  4240e1:	and    eax,0x88a11a38
  4240e6:	rcl    ch,0xb2
  4240e9:	pop    ebx
  4240ea:	repnz push ebx
  4240ec:	xor    al,0x85
  4240ee:	and    edi,esi
  4240f0:	jecxz  0x42414a
  4240f2:	(bad)  
  4240f3:	in     al,0x20
  4240f5:	scas   eax,DWORD PTR es:[edi]
  4240f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240f7:	imul   eax,DWORD PTR [edx-0x23],0x74
  4240fb:	(bad)  
  4240fc:	in     al,0xfb
  4240fe:	mov    edx,0x85a488d5
  424103:	push   es
  424104:	dec    eax
  424105:	and    al,0x1c
  424107:	sbb    eax,0x8a562f7d
  42410c:	pop    ebp
  42410d:	jecxz  0x4240bc
  42410f:	jns    0x424164
  424111:	mov    ebx,0x36d7e337
  424116:	pop    ss
  424117:	clc    
  424118:	and    cl,ch
  42411a:	push   0x44
  42411c:	push   esi
  42411d:	nop
  42411e:	dec    esi
  42411f:	in     al,0xf6
  424121:	xor    ebp,DWORD PTR [ecx+ecx*8]
  424124:	js     0x424157
  424126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424127:	xor    al,0xfe
  424129:	pop    ds
  42412a:	xchg   edx,eax
  42412b:	push   eax
  42412c:	out    dx,al
  42412d:	das    
  42412e:	test   BYTE PTR [edi+ecx*2],dh
  424131:	stos   BYTE PTR es:[edi],al
  424132:	xlat   BYTE PTR ds:[ebx]
  424133:	nop
  424134:	jmp    0xe7751ff0
  424139:	sahf   
  42413a:	mov    edx,0x80e9fede
  42413f:	and    ah,dh
  424141:	or     eax,0x1f9ce9d4
  424146:	aaa    
  424147:	lods   eax,DWORD PTR ds:[esi]
  424148:	adc    BYTE PTR [esi-0x12],dh
  42414b:	mov    dh,0xad
  42414d:	lea    ecx,[ebx+0x17]
  424150:	add    edi,eax
  424152:	lea    ebx,[ecx-0x5a]
  424155:	imul   esi,DWORD PTR ds:0x60148680,0x9e38737f
  42415f:	icebp  
  424160:	jmp    0x4dbd:0x21ce8155
  424167:	(bad)  
  424168:	jns    0x424134
  42416a:	das    
  42416b:	pusha  
  42416c:	loopne 0x424145
  42416e:	cmp    BYTE PTR [ecx],al
  424170:	arpl   WORD PTR [edi],dx
  424172:	push   es
  424173:	mov    eax,0x2930b18d
  424178:	loope  0x424189
  42417a:	xor    al,0x4c
  42417c:	in     al,0xb6
  42417e:	push   eax
  42417f:	mov    cl,0xca
  424181:	jmp    0x15dd:0xe4bdd59d
  424188:	add    eax,0x7448ec31
  42418d:	jne    0x424182
  42418f:	pushf  
  424190:	or     esp,edi
  424192:	inc    ecx
  424193:	jl     0x4241f4
  424195:	jl     0x42415c
  424197:	dec    edi
  424198:	or     DWORD PTR [edi-0x3f],esp
  42419b:	inc    edi
  42419c:	sbb    ch,ah
  42419e:	dec    edx
  42419f:	cmp    eax,0x58357140
  4241a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a5:	ds jae 0x4241dd
  4241a8:	or     dh,ah
  4241aa:	add    eax,0xc6d41ef5
  4241af:	sbb    esp,DWORD PTR es:[ebx-0x37]
  4241b3:	rcr    bh,0x1e
  4241b6:	dec    edx
  4241b7:	popa   
  4241b8:	ret    
  4241b9:	jb     0x4241a0
  4241bb:	sub    bh,BYTE PTR [eax+0x1f9e4d1c]
  4241c1:	push   ebx
  4241c2:	xchg   edi,eax
  4241c3:	pop    ebp
  4241c4:	and    DWORD PTR [edx+0x3ed68a82],esp
  4241ca:	xchg   BYTE PTR [esi+eiz*8],ch
  4241cd:	test   DWORD PTR [eax+eax*2+0x7c806075],esi
  4241d4:	mov    ah,0x20
  4241d6:	leave  
  4241d7:	add    dl,al
  4241d9:	add    al,0x4
  4241db:	loopne 0x424257
  4241dd:	(bad)  
  4241de:	(bad)  
  4241e0:	push   ds
  4241e1:	fistp  QWORD PTR [ebx+ebx*2]
  4241e4:	mov    bl,0xc1
  4241e6:	idiv   DWORD PTR [edx-0x78763ccd]
  4241ec:	adc    DWORD PTR [eax+eiz*4-0x7b59f079],0x6debc5ba
  4241f7:	push   ebp
  4241f8:	les    ebp,FWORD PTR [eax+0x54]
  4241fb:	inc    ebx
  4241fc:	mov    esp,0xcfbe455
  424201:	and    DWORD PTR [edx],esp
  424203:	xchg   ebx,eax
  424204:	sub    BYTE PTR [ebx-0x598b4546],ch
  42420a:	adc    dl,bh
  42420c:	inc    edi
  42420d:	adc    al,0xbb
  42420f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424210:	fld    QWORD PTR [edi-0x6a02a604]
  424216:	mov    ebx,0xae2aca95
  42421b:	cmp    al,0x9a
  42421d:	addr16 sub ebp,esi
  424220:	dec    esp
  424221:	stos   BYTE PTR es:[edi],al
  424222:	leave  
  424223:	imul   ebx
  424225:	in     al,dx
  424226:	ins    BYTE PTR es:[edi],dx
  424227:	and    eax,0xbd6f92ed
  42422c:	neg    DWORD PTR [ebx-0x64]
  42422f:	push   edx
  424230:	dec    eax
  424231:	jmp    FWORD PTR [edi+0x26]
  424234:	lods   eax,DWORD PTR ds:[esi]
  424235:	dec    ebx
  424236:	pop    edi
  424237:	xor    al,0xf4
  424239:	and    al,0x71
  42423b:	pop    edi
  42423c:	inc    esp
  42423d:	ds or  al,0xa6
  424240:	out    0xf,eax
  424242:	add    WORD PTR [ebx-0x6dc1720a],dx
  424249:	xchg   esi,eax
  42424a:	aaa    
  42424b:	jne    0x4241ec
  42424d:	and    al,0xc
  42424f:	retf   
  424250:	add    ebx,edx
  424252:	sbb    al,BYTE PTR [edi+0x2800]
	...
  424260:	add    bh,dh
  424262:	in     eax,0x9f
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi-0x7c25ded4],1
  42426f:	jmp    0x1fcb6c1
  424274:	add    BYTE PTR [ebp-0x7afffffd],ch
  42427a:	pop    edi
  42427b:	(bad)  
  42427c:	or     eax,0x670cd639
  424281:	daa    
  424282:	xor    ecx,DWORD PTR [edx+ecx*4-0x15255889]
  424289:	cli    
  42428a:	lea    eax,[ebp-0x1c40a34d]
  424290:	fcomp  QWORD PTR [edx]
  424292:	mov    bh,0xb3
  424294:	pop    ecx
  424295:	(bad)  [eax+0x3b1f897e]
  42429b:	mov    ebp,0x3f4ccaf9
  4242a0:	xchg   edi,eax
  4242a1:	sti    
  4242a2:	push   ecx
  4242a3:	lds    edi,FWORD PTR [ebx+edi*2-0x3b]
  4242a7:	imul   ecx,DWORD PTR [ecx+0x8],0x19
  4242ab:	aam    0xf9
  4242ad:	lods   al,BYTE PTR ds:[esi]
  4242ae:	and    ch,0xd7
  4242b1:	sar    DWORD PTR [esi],1
  4242b3:	xor    al,0xc2
  4242b5:	inc    esp
  4242b6:	or     bl,BYTE PTR [edx*2-0x1975937f]
  4242bd:	mov    al,ds:0x6e05fa82
  4242c2:	retf   0x3a6e
  4242c5:	sahf   
  4242c6:	int    0x47
  4242c8:	dec    esi
  4242c9:	push   es
  4242ca:	mov    eax,ds:0x73b7796f
  4242cf:	fwait
  4242d0:	addr16 jo 0x424312
  4242d3:	mov    DWORD PTR [ebp-0x4f],edx
  4242d6:	ins    DWORD PTR es:[edi],dx
  4242d7:	loopne 0x4242b3
  4242d9:	cmc    
  4242da:	inc    edx
  4242db:	pop    ss
  4242dc:	imul   esi,DWORD PTR [edx+0x41],0xc172065a
  4242e3:	shr    BYTE PTR [edi+edx*1+0x62],1
  4242e7:	(bad)  [ecx-0x1a]
  4242ea:	fiadd  DWORD PTR [ecx-0x2d]
  4242ed:	pop    esp
  4242ee:	sbb    BYTE PTR [esi],dl
  4242f0:	ds xor al,0x6a
  4242f3:	ja     0x42434c
  4242f5:	mov    ah,0xf2
  4242f7:	push   esi
  4242f8:	sub    al,0x10
  4242fa:	das    
  4242fb:	cdq    
  4242fc:	mov    esp,0x9cae0754
  424301:	mov    al,ds:0x4bb5446
  424306:	enter  0xda00,0xed
  42430a:	das    
  42430b:	adc    esi,ebp
  42430d:	sub    dl,BYTE PTR [edi-0x4]
  424310:	xor    bh,BYTE PTR [esi]
  424312:	jecxz  0x424355
  424314:	daa    
  424315:	aaa    
  424316:	lds    ebp,FWORD PTR [ebp+0xe]
  424319:	into   
  42431a:	(bad)  
  42431b:	fs pop eax
  42431d:	mov    cs,WORD PTR [ebp-0x65]
  424320:	sub    BYTE PTR [ebx+0x75195c53],ch
  424326:	jae    0x42436b
  424328:	ror    DWORD PTR [esi],1
  42432a:	xchg   ebx,eax
  42432b:	popf   
  42432c:	cdq    
  42432d:	mov    ds:0xeb607ddc,eax
  424332:	pop    edi
  424333:	arpl   WORD PTR [edi-0x52],dx
  424336:	or     DWORD PTR [eax],esp
  424338:	and    eax,0xe7192ad7
  42433d:	push   edi
  42433e:	(bad)  
  42433f:	mov    bl,BYTE PTR [ebx]
  424341:	pop    esp
  424342:	or     al,0x2c
  424344:	mov    ds:0xbc3fd967,eax
  424349:	jg     0x424364
  42434b:	jbe    0x424380
  42434d:	add    BYTE PTR [esi+0x15e70165],bl
  424353:	scas   eax,DWORD PTR es:[edi]
  424354:	push   cs
  424355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424356:	mov    WORD PTR [eax],cs
  424358:	add    ebx,DWORD PTR [ebp+0x1d]
  42435b:	xor    dl,al
  42435d:	and    BYTE PTR [edi],0xf8
  424360:	mov    ebx,0xc89a613d
  424365:	(bad)  
  424367:	dec    ebx
  424368:	fld    DWORD PTR [eax+0xcca6afb]
  42436e:	or     DWORD PTR [eax+edx*1+0x45bdfad],0x1cdfb856
  424379:	jp     0x4243c5
  42437b:	xchg   ebx,eax
  42437c:	rcr    DWORD PTR [ebp+0x3b],0xeb
  424380:	rcr    BYTE PTR [esi+0x5c],cl
  424383:	pop    edx
  424384:	mov    ah,BYTE PTR [eax+ecx*4]
  424387:	inc    edx
  424388:	xchg   edi,eax
  424389:	(bad)  
  42438a:	lods   eax,DWORD PTR ds:[esi]
  42438b:	add    ebx,DWORD PTR [eax+0x18]
  42438e:	(bad)  
  42438f:	(bad)  
  424390:	or     BYTE PTR [ecx+0x6],al
  424393:	in     eax,0x1b
  424395:	or     DWORD PTR [ebx+esi*1],0x73bd7079
  42439c:	gs mov edx,0xb7628e21
  4243a2:	jmp    0x536f3ade
  4243a7:	(bad)  [edi-0x1f1a11]
  4243ad:	adc    edi,DWORD PTR [eax+0x39]
  4243b0:	clc    
  4243b1:	push   esp
  4243b2:	pop    ebx
  4243b3:	xchg   DWORD PTR [ecx-0x18],ecx
  4243b6:	in     al,0xa5
  4243b8:	call   ebp
  4243ba:	mov    ebp,?
  4243bc:	dec    ebx
  4243bd:	or     al,0x94
  4243bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243c0:	cmp    esp,DWORD PTR [edx-0x3092c2d1]
  4243c6:	ins    BYTE PTR es:[edi],dx
  4243c7:	imul   edi,DWORD PTR [edx+eax*1],0xf
  4243cb:	shl    BYTE PTR [ecx+edx*1-0x41e0bb93],cl
  4243d2:	je     0x42444e
  4243d4:	loop   0x424379
  4243d6:	sub    DWORD PTR [edi-0x5d],ecx
  4243d9:	lds    esp,FWORD PTR [ebx-0x6d0d7f3]
  4243df:	pop    ss
  4243e0:	jmp    0x424424
  4243e2:	cli    
  4243e3:	mul    BYTE PTR [ecx+0x170ded97]
  4243e9:	cs xchg esi,eax
  4243eb:	and    ecx,DWORD PTR [ebp-0x75d54c24]
  4243f1:	cmp    esi,esp
  4243f3:	gs and eax,0x84196f02
  4243f9:	ja     0x4243b6
  4243fb:	xor    eax,0xc4a8795
  424400:	mov    esi,0xcc9bd5e9
  424405:	aas    
  424406:	(bad)  
  424407:	out    dx,al
  424408:	dec    ebx
  424409:	stos   BYTE PTR es:[edi],al
  42440a:	jne    0x42443a
  42440c:	ins    DWORD PTR es:[edi],dx
  42440d:	repz shr BYTE PTR [ebx+0x14],1
  424411:	and    edx,ebx
  424413:	fisub  WORD PTR [esi+eax*4+0x2595cddb]
  42441a:	gs enter 0x42e0,0x71
  42441f:	add    al,0x87
  424421:	mov    ebp,0x16bed01b
  424426:	daa    
  424427:	pop    eax
  424428:	jnp    0x42446f
  42442a:	popfw  
  42442c:	fucomp st(3)
  42442e:	dec    edx
  42442f:	sbb    ch,dh
  424431:	shr    DWORD PTR [edx+esi*1+0x7c],1
  424435:	and    esp,DWORD PTR [eax]
  424437:	dec    ebp
  424438:	pop    edx
  424439:	(bad)  
  42443b:	aas    
  42443c:	add    cl,BYTE PTR [esi*8-0x64f12271]
  424443:	call   0xfae9eeac
  424448:	mov    al,0x32
  42444a:	dec    edx
  42444b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42444c:	xor    ecx,edx
  42444e:	dec    eax
  42444f:	mov    bl,BYTE PTR [ebx+0x61]
  424452:	fidiv  DWORD PTR [ecx-0x79]
  424455:	and    DWORD PTR [edi+esi*2+0x2a],esi
  424459:	mov    bl,0x2c
  42445b:	xor    eax,0x5b4cf472
  424460:	jg     0x424454
  424462:	or     eax,0x54d7df65
  424467:	sahf   
  424468:	stos   BYTE PTR es:[edi],al
  424469:	add    al,ch
  42446b:	in     al,dx
  42446c:	inc    ebx
  42446d:	retf   
  42446e:	hlt    
  42446f:	dec    edx
  424470:	sub    BYTE PTR [ebx-0x3d79d370],ch
  424476:	stc    
  424477:	outs   dx,BYTE PTR ds:[esi]
  424478:	jmp    0xe5abe73a
  42447d:	jge    0x4244c7
  42447f:	mov    DWORD PTR [esi+ebx*1],eax
  424482:	popf   
  424483:	call   0x9c8c:0xe97bea6d
  42448a:	xchg   ecx,eax
  42448b:	cdq    
  42448c:	sub    dh,BYTE PTR [eax]
  42448e:	xor    esp,DWORD PTR [esi-0x53]
  424491:	or     edx,edi
  424493:	fsub   DWORD PTR [ebx]
  424495:	out    dx,eax
  424496:	sbb    DWORD PTR [ebp-0x1f],esi
  424499:	les    ebp,FWORD PTR [ebx]
  42449b:	dec    ebp
  42449c:	stos   DWORD PTR es:[edi],eax
  42449d:	test   al,0x50
  42449f:	aad    0x49
  4244a1:	jno    0x42446a
  4244a3:	leave  
  4244a4:	fdiv   DWORD PTR [eax]
  4244a6:	lahf   
  4244a7:	jae    0x424443
  4244a9:	aas    
  4244aa:	out    0xe0,al
  4244ac:	xchg   ebp,eax
  4244ad:	outs   dx,BYTE PTR ds:[esi]
  4244ae:	add    eax,0xbc8b0234
  4244b3:	cmp    eax,0xfac471d
  4244b8:	dec    esp
  4244b9:	arpl   WORD PTR [edi],di
  4244bb:	clc    
  4244bc:	lods   eax,DWORD PTR ds:[esi]
  4244bd:	and    al,al
  4244bf:	dec    eax
  4244c0:	pop    esi
  4244c1:	test   al,0x2e
  4244c3:	pop    ss
  4244c4:	js     0x4244e9
  4244c6:	xor    esp,DWORD PTR [ebx-0x25dfeed3]
  4244cc:	mov    esp,0x7797b2e6
  4244d1:	dec    eax
  4244d2:	pop    ds
  4244d3:	sbb    esi,ebx
  4244d5:	hlt    
  4244d6:	(bad)
  4244d9:	retf   
  4244da:	cmp    cl,BYTE PTR [ecx+0x7674f60d]
  4244e0:	jno    0x4244aa
  4244e2:	jnp    0x424523
  4244e4:	int    0x54
  4244e6:	inc    edx
  4244e7:	(bad)
  4244ea:	sbb    BYTE PTR [ebp+0x10],0x62
  4244ee:	or     eax,0xb766bc77
  4244f3:	das    
  4244f4:	xor    bh,ch
  4244f6:	cwde   
  4244f7:	int    0xce
  4244f9:	call   0xb260f831
  4244fe:	ins    BYTE PTR es:[edi],dx
  4244ff:	jp     0x4244c4
  424501:	adc    esp,edi
  424503:	stos   DWORD PTR es:[edi],eax
  424504:	or     al,0x87
  424506:	mov    BYTE PTR [ebp+0x6f],bl
  424509:	inc    ecx
  42450a:	aas    
  42450b:	xor    eax,0x3ee877dc
  424510:	pop    ebx
  424511:	fwait
  424512:	adc    al,0xf1
  424514:	jo     0x4244de
  424516:	call   0x5db4794f
  42451b:	(bad)  
  42451c:	cmp    DWORD PTR [edx+ebx*4+0x32400ef6],ecx
  424523:	jne    0x424574
  424525:	scas   eax,DWORD PTR es:[edi]
  424526:	xchg   ebx,eax
  424527:	jns    0x424578
  424529:	in     al,dx
  42452a:	in     eax,0x65
  42452c:	or     eax,0xd6b6ef6a
  424531:	stc    
  424532:	add    bh,al
  424534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424535:	fcomp  DWORD PTR [esi-0x5cc824ed]
  42453b:	aad    0x20
  42453d:	ret    0xcb1
  424540:	sbb    esi,DWORD PTR [eax-0x17c59383]
  424546:	mov    dh,0x94
  424548:	fmul   DWORD PTR [ebx+ebp*2-0x1d]
  42454c:	mov    edx,fs
  42454e:	pop    ds
  42454f:	sub    eax,0x1cdb5f5
  424554:	test   BYTE PTR [edx+0x46018bba],ch
  42455a:	sbb    al,0x39
  42455c:	cmp    eax,0xa2dafea5
  424561:	pop    edx
  424562:	jae    0x424517
  424564:	fnstsw WORD PTR [eax+edi*2-0x76]
  424568:	jge    0x424587
  42456a:	sbb    DWORD PTR [edi-0x62],ebx
  42456d:	fs inc esp
  42456f:	jo     0x4245c3
  424571:	cmp    BYTE PTR [edx],ch
  424573:	out    dx,eax
  424574:	xchg   edi,eax
  424575:	aam    0x3c
  424577:	cwde   
  424578:	push   eax
  424579:	xchg   esp,eax
  42457a:	jecxz  0x42451c
  42457c:	cmp    edx,DWORD PTR [edx]
  42457e:	nop
  42457f:	xor    BYTE PTR [eax+ecx*4-0x4c],cl
  424583:	mov    edi,0xc1e26040
  424588:	(bad)  
  424589:	fnsave [edi+0x1e4c7ab0]
  42458f:	fiadd  WORD PTR [edx-0x80]
  424592:	jg     0x42457c
  424594:	cmc    
  424595:	mov    ebp,0xb134ce38
  42459a:	adc    esp,DWORD PTR [ebp+0x7a0bd54d]
  4245a0:	(bad)  
  4245a1:	jne    0x42452a
  4245a3:	or     eax,0x8cb6890d
  4245a8:	dec    ebx
  4245a9:	cs add ah,al
  4245ac:	mov    BYTE PTR [ebp+0x3f],bh
  4245af:	js     0x42461a
  4245b1:	ret    
  4245b2:	push   esi
  4245b3:	aad    0x40
  4245b5:	pusha  
  4245b6:	xchg   DWORD PTR [ecx+0x3a],edi
  4245b9:	call   0x607405d8
  4245be:	rcr    BYTE PTR [ecx+0x77682a1c],0x7
  4245c5:	stc    
  4245c6:	cs push ebx
  4245c8:	dec    eax
  4245c9:	(bad)  
  4245ca:	retf   
  4245cb:	test   al,0xc0
  4245cd:	push   ebx
  4245ce:	mov    bh,0x91
  4245d0:	and    ebp,DWORD PTR [edi+0x488fd621]
  4245d6:	stos   DWORD PTR es:[edi],eax
  4245d7:	addr16 xchg esi,edi
  4245da:	add    bl,bh
  4245dc:	inc    ebx
  4245dd:	lods   eax,DWORD PTR ds:[esi]
  4245de:	aam    0xc4
  4245e0:	stos   BYTE PTR es:[edi],al
  4245e1:	ins    DWORD PTR es:[edi],dx
  4245e2:	sbb    DWORD PTR [esi-0x387ebf4e],0x7cea5d44
  4245ec:	loopne 0x4245a8
  4245ee:	(bad)  
  4245ef:	je     0x424659
  4245f1:	cs jbe 0x424597
  4245f4:	mov    DWORD PTR [edx+eiz*4+0x76066642],esi
  4245fb:	add    BYTE PTR [ecx-0x70],bh
  4245fe:	xchg   ecx,eax
  4245ff:	dec    esi
  424600:	fcom   DWORD PTR [ebx]
  424602:	mov    edx,0xb8181aca
  424607:	push   0x9
  424609:	mov    al,0xfe
  42460b:	cmp    al,0x87
  42460d:	adc    eax,0xec2ef8ef
  424612:	imul   esp,DWORD PTR [ecx+0x73cd2a4d],0x71
  424619:	inc    edi
  42461a:	adc    ch,0xd5
  42461d:	scas   al,BYTE PTR es:[edi]
  42461e:	call   0xdbcb7ab7
  424623:	idiv   DWORD PTR ss:[eax+eax*1+0x0]
  42462b:	add    BYTE PTR [eax],al
  42462d:	add    BYTE PTR [eax],al
  42462f:	add    BYTE PTR [eax],al
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	lods   al,BYTE PTR ds:[esi]
  42463e:	cmp    al,0x81
  424640:	(bad)  
  424641:	and    DWORD PTR [esi+0x3ad0001],edi
  424647:	add    BYTE PTR [eax],al
  424649:	jle    0x4245f4
  42464b:	mov    eax,ds:0x2e9fbaa4
  424650:	fwait
  424651:	jbe    0x4246d2
  424653:	mov    eax,ds:0x417d82ab
  424658:	and    esi,esi
  42465a:	or     dl,BYTE PTR [edi+0x7cb02c69]
  424660:	jp     0x424622
  424662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424663:	and    eax,0x70e4602e
  424668:	add    al,BYTE PTR [ebx]
  42466a:	inc    ecx
  42466b:	xchg   esp,eax
  42466c:	add    cl,BYTE PTR [ebx-0x76]
  42466f:	push   edi
  424670:	inc    ebx
  424671:	push   esp
  424672:	test   DWORD PTR [esi+eax*8+0x1e],edi
  424676:	dec    ebx
  424677:	test   DWORD PTR [eax-0x51],0xdc8190aa
  42467e:	xchg   ebx,eax
  42467f:	cmp    eax,0x6b518fb7
  424684:	add    ah,0x3e
  424687:	or     dh,BYTE PTR [edi]
  424689:	sub    ch,ch
  42468b:	jns    0x4246e3
  42468d:	mov    ds:0xace218f4,eax
  424692:	lods   al,BYTE PTR ds:[esi]
  424693:	das    
  424694:	jnp    0x424701
  424696:	call   0x78817501
  42469b:	test   eax,0x3049f5fe
  4246a0:	outs   dx,BYTE PTR ds:[esi]
  4246a1:	mov    al,ds:0x61de322b
  4246a6:	inc    edx
  4246a7:	fiadd  DWORD PTR [edi]
  4246a9:	adc    al,0x7
  4246ab:	stos   DWORD PTR es:[edi],eax
  4246ac:	(bad)
  4246b0:	retf   0x5d08
  4246b3:	leave  
  4246b4:	ja     0x424638
  4246b6:	dec    eax
  4246b7:	fld    st(5)
  4246b9:	retf   
  4246ba:	inc    ebx
  4246bb:	cdq    
  4246bc:	les    ebx,FWORD PTR [ecx]
  4246be:	dec    ecx
  4246bf:	mov    ds,edx
  4246c1:	sbb    DWORD PTR [ebp+0x5a],0xd0ebfeb1
  4246c8:	outs   dx,DWORD PTR ds:[esi]
  4246c9:	stc    
  4246ca:	push   0x39c78c75
  4246cf:	mov    BYTE PTR [ebp-0x59601146],dl
  4246d5:	stc    
  4246d6:	pop    edi
  4246d7:	scas   al,BYTE PTR es:[edi]
  4246d8:	mov    ah,0x87
  4246da:	out    dx,eax
  4246db:	sub    DWORD PTR [ebx+0x530fb7bc],eax
  4246e1:	add    edi,edx
  4246e3:	dec    esp
  4246e4:	es pop ecx
  4246e6:	mov    ds:0x2bd6097b,al
  4246eb:	xor    al,0x48
  4246ed:	adc    edx,esi
  4246ef:	sbb    eax,0x3104b91d
  4246f4:	pop    ss
  4246f5:	mov    edx,0x879ab6fb
  4246fa:	push   ecx
  4246fb:	xchg   ecx,eax
  4246fc:	icebp  
  4246fd:	popa   
  4246fe:	enter  0x5523,0x59
  424702:	outs   dx,BYTE PTR ds:[esi]
  424703:	cmp    DWORD PTR [esi+edx*4],edx
  424706:	fcmovb st,st(1)
  424708:	mov    bl,al
  42470a:	enter  0x3a55,0x8e
  42470e:	inc    ebp
  42470f:	in     al,0xd6
  424711:	mov    DWORD PTR [esi+0x473188a2],ebp
  424717:	std    
  424718:	stc    
  424719:	and    edx,edi
  42471b:	push   0x11
  42471d:	hlt    
  42471e:	adc    BYTE PTR [eax+0x5f815f52],ah
  424724:	fsub   QWORD PTR [ebx+ebx*2-0x78bc069e]
  42472b:	iret   
  42472c:	xor    eax,0x512d859a
  424731:	stos   BYTE PTR es:[edi],al
  424732:	sahf   
  424733:	stos   DWORD PTR es:[edi],eax
  424734:	aaa    
  424735:	in     al,0xb5
  424737:	test   DWORD PTR [ecx],ebp
  424739:	aaa    
  42473a:	pop    ebp
  42473b:	xchg   ebx,eax
  42473c:	xchg   DWORD PTR [edi-0x1a021d9e],eax
  424742:	cmp    BYTE PTR [eax-0x6d560915],dh
  424748:	fbstp  TBYTE PTR [edi+ebx*4+0x30]
  42474c:	arpl   WORD PTR [eax-0x159c53d1],cx
  424752:	test   eax,0x624622b0
  424757:	inc    ecx
  424758:	xor    eax,0x9370d426
  42475d:	add    DWORD PTR [ebx],ebx
  42475f:	push   ds
  424760:	cmp    edi,esp
  424762:	or     edi,esi
  424764:	test   eax,0xb98f452a
  424769:	sbb    BYTE PTR [edi],ah
  42476b:	xchg   ebp,eax
  42476c:	mov    al,ds:0x9bfe5503
  424771:	cmp    esp,0xb8df8c5a
  424777:	dec    ebx
  424778:	add    al,0xdf
  42477a:	lock lock mov dl,0xb6
  42477e:	xchg   BYTE PTR [ecx-0x49],dl
  424781:	nop
  424782:	std    
  424783:	or     DWORD PTR [esi+esi*4+0x27dcb0b0],ebx
  42478a:	and    DWORD PTR [edx+0x61],edx
  42478d:	inc    ebp
  42478e:	shl    DWORD PTR [ebp+0x268cf536],1
  424794:	mov    bl,0xf2
  424796:	jmp    0x59c1:0x1d939620
  42479d:	inc    eax
  42479e:	imul   esi,esp,0xb83b851e
  4247a4:	stos   DWORD PTR es:[edi],eax
  4247a5:	inc    edx
  4247a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247a7:	nop
  4247a8:	xor    al,0xd
  4247aa:	mov    esp,0x3cfefed9
  4247af:	inc    eax
  4247b0:	(bad)  
  4247b1:	cli    
  4247b2:	popa   
  4247b3:	loopne 0x42476d
  4247b5:	rcl    bl,1
  4247b7:	in     eax,dx
  4247b8:	ret    
  4247b9:	js     0x424770
  4247bb:	dec    ebx
  4247bc:	mov    esi,0x77120216
  4247c1:	(bad)  
  4247c2:	sbb    al,0xc8
  4247c4:	prefetchw BYTE PTR [ebx+0x5805ee45]
  4247cb:	sbb    BYTE PTR [edx],ah
  4247cd:	or     ecx,ebp
  4247cf:	(bad)  
  4247d0:	or     al,0xbb
  4247d2:	sti    
  4247d3:	adc    DWORD PTR [esi-0x2599a289],0xffffff8d
  4247da:	lea    edi,[ecx+eax*8]
  4247dd:	es in  eax,dx
  4247df:	sub    BYTE PTR [eax+0x259e98af],ch
  4247e5:	mov    bl,0xbc
  4247e7:	sbb    eax,0x63825423
  4247ec:	xchg   esi,eax
  4247ed:	jmp    0x66ced8d9
  4247f2:	xchg   esi,eax
  4247f3:	outs   dx,DWORD PTR ds:[esi]
  4247f4:	xor    DWORD PTR [ecx+0x740706e7],edx
  4247fa:	mov    bh,0xe6
  4247fc:	jb     0x424827
  4247fe:	ss jb  0x424839
  424801:	xchg   esp,eax
  424802:	dec    edx
  424803:	not    ecx
  424805:	js     0x42480b
  424807:	push   ebx
  424808:	jno    0x424827
  42480a:	rcr    DWORD PTR [eax],0xfe
  42480d:	hlt    
  42480e:	in     eax,0x5b
  424810:	mov    edx,0x8a1a53b
  424815:	nop
  424816:	shr    ecx,cl
  424818:	out    0x51,al
  42481a:	xchg   esp,eax
  42481b:	mov    bl,0xc2
  42481d:	ret    0x370d
  424820:	pop    eax
  424821:	sub    ah,cl
  424823:	fwait
  424824:	scas   al,BYTE PTR es:[edi]
  424825:	ins    DWORD PTR es:[edi],dx
  424826:	(bad)  
  424827:	inc    ebp
  424828:	jo     0x4247ab
  42482a:	dec    esp
  42482b:	pop    eax
  42482c:	xchg   esp,eax
  42482d:	mov    eax,0x41b74d4f
  424832:	test   BYTE PTR ds:[edi-0x4b12c4d3],dh
  424839:	gs xor cl,cl
  42483c:	retf   
  42483d:	mov    edi,0xf10a8669
  424842:	out    0xa,al
  424844:	push   ebp
  424845:	add    DWORD PTR [esi],esp
  424847:	xor    dh,dl
  424849:	rcl    ebp,cl
  42484b:	mov    ch,0xf2
  42484d:	popa   
  42484e:	and    DWORD PTR ds:0x92c352fb,0x13
  424855:	sbb    edx,esp
  424857:	loop   0x424800
  424859:	scas   eax,DWORD PTR es:[edi]
  42485a:	popf   
  42485b:	mov    dl,BYTE PTR [edi]
  42485d:	imul   eax,DWORD PTR ds:0xbd714c30,0xffffffd3
  424864:	into   
  424865:	(bad)  
  424866:	cmp    al,0x9
  424868:	sub    ecx,0xfffffff0
  42486b:	mov    edx,0xed1027fd
  424870:	loop   0x4248ef
  424872:	into   
  424873:	push   esi
  424874:	jecxz  0x42487e
  424876:	icebp  
  424877:	lods   al,BYTE PTR ds:[esi]
  424878:	push   0x7c75b0be
  42487d:	xchg   edi,eax
  42487e:	inc    edx
  42487f:	retf   
  424880:	gs adc edx,eax
  424883:	jno    0x424894
  424885:	cmp    eax,0xa79232e0
  42488a:	sbb    eax,0xf0aeceb9
  42488f:	je     0x42488b
  424891:	xchg   esi,eax
  424892:	fsubr  QWORD PTR [edx+0x228d2bf9]
  424898:	out    0xe0,al
  42489a:	jae    0x424822
  42489c:	dec    ecx
  42489d:	ficom  WORD PTR [edi]
  42489f:	pop    edi
  4248a0:	mov    eax,0x57090653
  4248a5:	mov    esp,0xa1dfc0ea
  4248aa:	or     ecx,ecx
  4248ac:	add    BYTE PTR [edx-0x7d],ch
  4248af:	and    al,0xc5
  4248b1:	clc    
  4248b2:	jg     0x42483b
  4248b4:	out    0x41,al
  4248b6:	mov    ch,0x2f
  4248b8:	imul   ebx,edx,0x79
  4248bb:	mov    eax,0x34f14f8a
  4248c0:	jmp    DWORD PTR [edx-0x54c55847]
  4248c6:	stc    
  4248c7:	mov    ecx,0x67d7490d
  4248cc:	push   eax
  4248cd:	inc    edx
  4248ce:	pop    ebp
  4248cf:	dec    ecx
  4248d0:	popa   
  4248d1:	pushf  
  4248d2:	les    esi,FWORD PTR [edx+edx*1]
  4248d5:	enter  0x9200,0xdf
  4248d9:	stc    
  4248da:	cdq    
  4248db:	fisubr DWORD PTR [edi]
  4248dd:	xchg   ebx,eax
  4248de:	push   ecx
  4248df:	call   0xcfefd175
  4248e4:	mov    edi,0x2f7a586
  4248e9:	mov    esi,0x54e898eb
  4248ee:	mov    cl,0x9e
  4248f0:	js     0x4248c0
  4248f2:	aas    
  4248f3:	and    bl,BYTE PTR [ebp+0x7ba1fbd4]
  4248f9:	sub    DWORD PTR [ebp+ebp*2-0x44d15318],edi
  424900:	not    BYTE PTR [esi-0x609b466d]
  424906:	js     0x424894
  424908:	stos   BYTE PTR es:[edi],al
  424909:	pop    ebp
  42490a:	jmp    0x27101f20
  42490f:	ja     0x424940
  424911:	sub    ch,BYTE PTR [ecx]
  424913:	pop    ebx
  424914:	scas   eax,DWORD PTR es:[edi]
  424915:	(bad)  
  424917:	out    0x88,al
  424919:	dec    bp
  42491b:	add    DWORD PTR [esp+ecx*8+0x1699841f],0xffffffe1
  424923:	lods   al,BYTE PTR ds:[esi]
  424924:	loopne 0x42490f
  424926:	sbb    esi,edi
  424928:	pushf  
  424929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42492a:	imul   esp,DWORD PTR [esi-0x3],0xffffffa5
  42492e:	outs   dx,DWORD PTR ds:[esi]
  42492f:	retf   0x4677
  424932:	jnp    0x424945
  424934:	ret    0xf98a
  424937:	mov    dl,0xc1
  424939:	xchg   edi,eax
  42493a:	jno    0x424939
  42493c:	push   0x879c34fa
  424941:	mov    ah,0xdd
  424943:	outs   dx,DWORD PTR ds:[esi]
  424944:	jg     0x42495b
  424946:	ret    0x92d
  424949:	int3   
  42494a:	out    dx,eax
  42494b:	les    ecx,FWORD PTR [ebp+0x3c0757b8]
  424951:	xor    edi,DWORD PTR [esp+eax*8+0x4b]
  424955:	nop
  424956:	cld    
  424957:	fadd   DWORD PTR [eax]
  424959:	stos   DWORD PTR es:[edi],eax
  42495a:	addr16 cmp bl,bl
  42495d:	or     BYTE PTR [eax-0x7a5ae16d],cl
  424963:	scas   eax,DWORD PTR es:[edi]
  424964:	mov    edx,0x74c06ad1
  424969:	stc    
  42496a:	fmul   QWORD PTR [ebx]
  42496c:	cmp    dh,BYTE PTR [ebp+0x78790e3c]
  424972:	push   0xcb8ec8d9
  424977:	pop    ecx
  424978:	sbb    edi,DWORD PTR [ebx-0x441c8050]
  42497e:	mov    dh,0x92
  424980:	jmp    0xea37a3e
  424985:	push   es
  424986:	out    dx,eax
  424987:	shr    DWORD PTR [ecx],1
  424989:	sub    BYTE PTR [bx+si],dl
  42498c:	loope  0x424a0a
  42498e:	xor    ebx,ecx
  424990:	lds    esp,FWORD PTR [ebx-0x4]
  424993:	call   0x9e57:0xfd3d843a
  42499a:	xchg   edi,eax
  42499b:	test   eax,ebx
  42499d:	jmp    0x7eacafaf
  4249a2:	inc    esp
  4249a3:	xchg   DWORD PTR [edi+0x2039d05],edi
  4249a9:	xor    eax,0x155095fe
  4249ae:	retf   0xe5f2
  4249b1:	mov    bl,0x39
  4249b3:	jle    0x424a01
  4249b5:	pushf  
  4249b6:	repz test al,0x14
  4249b9:	adc    esp,ebx
  4249bb:	jnp    0x424988
  4249bd:	call   FWORD PTR [esi+0x2ead52b1]
  4249c3:	ret    0x2b2d
  4249c6:	mov    esp,0x8ec9a886
  4249cb:	xor    al,0x64
  4249cd:	cmp    al,0x8a
  4249cf:	test   ch,bh
  4249d1:	aas    
  4249d2:	loopne 0x424a28
  4249d4:	leave  
  4249d5:	outs   dx,DWORD PTR ds:[esi]
  4249d6:	gs out dx,eax
  4249d8:	fild   WORD PTR [ecx+0x231392b7]
  4249df:	repnz adc ebx,esp
  4249e2:	xor    esp,DWORD PTR [ecx-0x9]
  4249e5:	jae    0x424a45
  4249e7:	icebp  
  4249e8:	pop    ebx
  4249e9:	xchg   DWORD PTR [ecx-0x69],eax
  4249ec:	and    al,0xde
  4249ee:	sbb    eax,0x12817d53
  4249f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249f4:	ds mov ebp,0x0
  4249fa:	add    BYTE PTR [eax],al
  4249fc:	add    BYTE PTR [eax],al
  4249fe:	add    BYTE PTR [eax],al
  424a00:	add    BYTE PTR [ebp+0x6a],dl
  424a03:	out    0xb3,al
  424a05:	(bad)  
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	push   ebx
  424a0e:	mov    ss,WORD PTR [edx+0x1c1ce66]
  424a14:	add    BYTE PTR [ebp+0x51000003],ch
  424a1a:	sar    BYTE PTR [ebx],1
  424a1c:	adc    al,0x61
  424a1e:	add    BYTE PTR [ecx-0x3c838b3a],bh
  424a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a25:	and    edi,DWORD PTR [eax+0x1f]
  424a28:	push   es
  424a29:	cmp    al,0xbf
  424a2b:	cmp    al,0x1a
  424a2d:	(bad)  
  424a2e:	mov    DWORD PTR [eax-0x42ad4944],edx
  424a34:	(bad)  
  424a35:	aad    0x23
  424a37:	xor    BYTE PTR [edi-0x13],0x3a
  424a3b:	mov    al,ds:0xf8a976cb
  424a40:	ins    DWORD PTR es:[edi],dx
  424a41:	sahf   
  424a42:	push   cs
  424a43:	(bad)  
  424a44:	pop    ss
  424a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a46:	cwde   
  424a47:	div    ecx
  424a49:	dec    ecx
  424a4a:	loopne 0x424a66
  424a4c:	sub    bl,0x54
  424a4f:	clc    
  424a50:	ret    0xbdcd
  424a53:	mov    ecx,0x1df272c5
  424a58:	fidiv  WORD PTR [esi+esi*8]
  424a5b:	mov    ch,0xff
  424a5d:	jmp    0xa6f5:0x6587e055
  424a64:	sub    cl,BYTE PTR [ecx+ebx*8+0x2d08254a]
  424a6b:	loop   0x424a68
  424a6d:	adc    al,0xd2
  424a6f:	pop    esp
  424a70:	jecxz  0x424ae7
  424a72:	pop    edi
  424a73:	enter  0x4b04,0xd6
  424a77:	adc    bl,BYTE PTR [edi+eiz*4-0x7]
  424a7b:	je     0x424a17
  424a7d:	outs   dx,BYTE PTR ds:[esi]
  424a7e:	fsub   DWORD PTR [ebx-0x52]
  424a81:	lods   al,BYTE PTR ds:[esi]
  424a82:	mov    eax,0xdbe9122
  424a87:	mov    edi,0xe43f10cf
  424a8c:	cmp    al,0x4f
  424a8f:	ds jnp 0x424ab3
  424a92:	nop
  424a93:	ss (bad) 
  424a95:	(bad)  
  424a96:	mov    bh,0xe2
  424a98:	cmp    eax,0xc1b1096
  424a9d:	cld    
  424a9e:	icebp  
  424a9f:	enter  0x730d,0xa
  424aa3:	adc    eax,0x29badd43
  424aa8:	pop    eax
  424aa9:	jl     0x424a74
  424aab:	jmp    0xfa85221
  424ab0:	clc    
  424ab1:	pop    esi
  424ab2:	aas    
  424ab3:	cdq    
  424ab4:	adc    eax,0x6ded66bd
  424ab9:	and    BYTE PTR [esi+edi*8+0x3],dl
  424abd:	xor    ebp,DWORD PTR [ebx+eax*8]
  424ac0:	std    
  424ac1:	dec    ebx
  424ac2:	xor    BYTE PTR [esi-0x57],dh
  424ac5:	xchg   DWORD PTR [eax+0x30197d4e],ebp
  424acb:	push   es
  424acc:	xor    edi,DWORD PTR [ebx]
  424ace:	xchg   DWORD PTR [esi],ecx
  424ad0:	sar    eax,0xf6
  424ad3:	inc    edx
  424ad4:	jnp    0x424aaa
  424ad6:	sbb    edx,ebx
  424ad8:	dec    ebx
  424ad9:	sbb    eax,0xcf54bc4a
  424ade:	shl    dh,0x50
  424ae1:	dec    ecx
  424ae2:	dec    ebx
  424ae3:	push   DWORD PTR [eax+0x62]
  424ae6:	idiv   DWORD PTR [ebx]
  424ae8:	mov    eax,0xf46874e1
  424aed:	in     eax,dx
  424aee:	dec    edi
  424aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424af0:	inc    ebp
  424af1:	pop    edi
  424af2:	mov    DWORD PTR [edx+0x390a616b],eax
  424af8:	imul   esi,ebp,0xffffffb4
  424afb:	jo     0x424b28
  424afd:	lods   al,BYTE PTR ds:[esi]
  424afe:	add    BYTE PTR [ecx+0x34],bl
  424b01:	pop    es
  424b02:	fwait
  424b03:	inc    esp
  424b04:	dec    edi
  424b05:	sar    ebx,1
  424b07:	xor    edi,DWORD PTR ds:0x70d10f40
  424b0d:	int3   
  424b0e:	lds    esi,FWORD PTR [ebx]
  424b10:	add    eax,0xf0ed6555
  424b15:	xor    DWORD PTR [edi+0x7b3e1f8f],esp
  424b1b:	out    0xb8,al
  424b1d:	mov    esp,0xcbe2db74
  424b22:	call   0x81d:0x8e5362da
  424b29:	iret   
  424b2a:	jecxz  0x424b59
  424b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b2d:	xchg   esp,eax
  424b2e:	xor    eax,DWORD PTR [eax]
  424b30:	fdiv   QWORD PTR [ebp+0x4e]
  424b33:	push   0xb97d2d03
  424b38:	bound  ebp,QWORD PTR fs:[edi+0x4f]
  424b3c:	sbb    al,0xb5
  424b3e:	adc    eax,0x8a273c08
  424b43:	sbb    eax,0x5150ab33
  424b48:	mov    ss,WORD PTR [esi]
  424b4a:	inc    ecx
  424b4b:	add    dh,ah
  424b4d:	xor    al,0x36
  424b4f:	mov    esi,0xd631c697
  424b54:	xor    BYTE PTR [ebp-0x31],bl
  424b57:	repz xor dl,BYTE PTR [ebp+ecx*2-0x36363b33]
  424b5f:	(bad)  
  424b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b61:	and    eax,0x1532caca
  424b66:	push   ds
  424b67:	jge    0x424bb4
  424b69:	es clc 
  424b6b:	add    al,0xa3
  424b6d:	add    dl,BYTE PTR [ebp+0x16]
  424b70:	xor    al,0xa4
  424b72:	std    
  424b73:	sbb    DWORD PTR [esi+esi*8+0x5b],esi
  424b77:	in     al,dx
  424b78:	ds aaa 
  424b7a:	pop    edx
  424b7c:	or     ch,BYTE PTR [ecx]
  424b7e:	add    BYTE PTR [ecx],0x8c
  424b81:	stos   BYTE PTR es:[edi],al
  424b82:	inc    esi
  424b83:	jecxz  0x424b3a
  424b85:	sbb    esp,DWORD PTR [esi+0x73]
  424b88:	xlat   BYTE PTR ds:[ebx]
  424b89:	mov    WORD PTR [edx+0x14],gs
  424b8c:	cmp    BYTE PTR [edi],ch
  424b8e:	fist   DWORD PTR [ecx+0x27]
  424b91:	lahf   
  424b92:	cwde   
  424b93:	and    edx,ebx
  424b95:	fsub   QWORD PTR [ebx-0xad296f]
  424b9b:	sbb    eax,0x510309f7
  424ba0:	pop    eax
  424ba1:	xchg   ecx,eax
  424ba2:	out    dx,al
  424ba3:	js     0x424bde
  424ba5:	hlt    
  424ba6:	pop    esi
  424ba7:	cdq    
  424ba8:	aas    
  424ba9:	sbb    dl,BYTE PTR [esi-0x78]
  424bac:	jno    0x424bb7
  424bae:	jbe    0x424be4
  424bb0:	cmp    eax,0xf6fb6802
  424bb5:	cmp    eax,0xe7e1ad05
  424bba:	(bad)  
  424bbb:	out    dx,al
  424bbc:	jp     0x424b7d
  424bbe:	in     eax,dx
  424bbf:	xchg   esp,eax
  424bc0:	or     DWORD PTR [esi+ebp*4-0x36],ebx
  424bc4:	sbb    esp,DWORD PTR [eax+0x4ea23eb8]
  424bca:	adc    eax,0xbacc80b
  424bcf:	sahf   
  424bd0:	and    BYTE PTR [ecx-0x3273b19d],0x26
  424bd7:	out    0x7a,al
  424bd9:	inc    edi
  424bda:	xor    esp,DWORD PTR [esp+edx*1+0x33]
  424bde:	or     BYTE PTR [edi-0x63],0x3b
  424be2:	sub    al,0xf2
  424be4:	ins    DWORD PTR es:[edi],dx
  424be5:	idiv   DWORD PTR [ebp-0x42]
  424be8:	or     ecx,DWORD PTR [ebx+0x4f9f849c]
  424bee:	fwait
  424bef:	dec    esp
  424bf0:	rol    BYTE PTR [edi-0x21e70e51],cl
  424bf6:	lock (bad) 
  424bf8:	call   0x9c44ce68
  424bfd:	xchg   esi,eax
  424bfe:	je     0x424be6
  424c00:	mov    esi,0xa1964e3e
  424c05:	push   eax
  424c06:	jp     0x424bb7
  424c08:	icebp  
  424c09:	shr    DWORD PTR [edx-0x30],0xb7
  424c0d:	jno    0x424bad
  424c0f:	in     eax,dx
  424c10:	test   DWORD PTR [eax],ebp
  424c12:	repz jl 0x424c1e
  424c15:	loopne 0x424c62
  424c17:	sahf   
  424c18:	jle    0x424bee
  424c1a:	sbb    al,BYTE PTR [eax]
  424c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c1d:	push   ebx
  424c1e:	cmovnp ecx,DWORD PTR [ebp+0x6b]
  424c22:	lds    edx,FWORD PTR [eax-0x73a3c97]
  424c28:	in     eax,dx
  424c29:	ins    BYTE PTR es:[edi],dx
  424c2a:	push   0xa21c1afa
  424c2f:	add    al,0xb7
  424c31:	imul   DWORD PTR [ebp+0x5bb29043]
  424c37:	fldenv [ebp-0x514c1698]
  424c3d:	adc    eax,DWORD PTR [edi+ecx*1+0x4a]
  424c41:	xor    DWORD PTR [edx+0x70ef0c6e],edi
  424c47:	jbe    0x424c4c
  424c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c4a:	cli    
  424c4b:	imul   eax,DWORD PTR [eax-0x4d],0xffffffae
  424c4f:	ins    BYTE PTR es:[edi],dx
  424c50:	fldcw  WORD PTR [ebx-0x39]
  424c53:	pop    esp
  424c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c55:	mov    eax,ds:0xd45f0923
  424c5a:	paddw  mm1,QWORD PTR [edi]
  424c5d:	mov    esp,0xe6126a4c
  424c62:	sbb    ebp,DWORD PTR [ebx-0xa6c0246]
  424c68:	xor    DWORD PTR [eax-0x3cfb48c9],0x3530ff52
  424c72:	loope  0x424ccc
  424c74:	mov    DWORD PTR [edi+ebx*8-0x79954e00],esi
  424c7b:	xor    eax,DWORD PTR [edi+0x16d6c550]
  424c81:	jmp    0xabe3:0xcfe83051
  424c88:	neg    bh
  424c8a:	lods   al,BYTE PTR ds:[esi]
  424c8b:	jmp    0xfbdb2f4a
  424c90:	les    edi,FWORD PTR ds:0xc0c7584b
  424c96:	xlat   BYTE PTR ds:[ebx]
  424c97:	sbb    BYTE PTR [eax],ch
  424c99:	mov    esi,0x7bd37afd
  424c9e:	mov    ss,ecx
  424ca0:	test   eax,0x8519c9b7
  424ca5:	cdq    
  424ca6:	pushf  
  424ca7:	sahf   
  424ca8:	cmp    al,0x1a
  424caa:	addr16 cmp ebx,edi
  424cad:	mov    edx,DWORD PTR [edx+0x41]
  424cb0:	and    eax,0x77228c2b
  424cb5:	clc    
  424cb6:	gs xchg ebp,eax
  424cb8:	push   ds
  424cb9:	xor    ebp,DWORD PTR [ecx]
  424cbb:	out    dx,al
  424cbc:	ds mov esi,DWORD PTR fs:0xa8114b11
  424cc4:	cdq    
  424cc5:	jnp    0x424cf7
  424cc7:	ss dec ecx
  424cc9:	mov    bh,0x2f
  424ccb:	cmp    edx,DWORD PTR [esi+0x171ae523]
  424cd1:	pop    edx
  424cd2:	aas    
  424cd3:	(bad)  
  424cd5:	sub    al,0x5d
  424cd7:	shl    BYTE PTR [eax-0x43],1
  424cda:	dec    ebp
  424cdb:	fwait
  424cdc:	add    BYTE PTR [edi+0x57bd5fb2],bh
  424ce2:	cmp    DWORD PTR [esi-0x3e2d4e0e],ebx
  424ce8:	adc    DWORD PTR [esi+0x2b],edx
  424ceb:	mov    ebx,0xfea691c1
  424cf0:	or     dh,BYTE PTR [edi-0x4e839337]
  424cf6:	mov    esp,0x64097cf8
  424cfb:	cli    
  424cfc:	pop    ebp
  424cfd:	jmp    0x424d29
  424cff:	cwde   
  424d00:	pop    es
  424d01:	(bad)  
  424d02:	jle    0x424d2e
  424d04:	push   ebp
  424d05:	sbb    bl,BYTE PTR [ebx]
  424d07:	imul   edi,DWORD PTR [ecx-0x37],0xffffffc0
  424d0b:	repz shl DWORD PTR [esi],0x37
  424d0f:	stos   BYTE PTR es:[edi],al
  424d10:	add    al,0x5d
  424d12:	add    bh,cl
  424d14:	fldenv [edx]
  424d16:	es and eax,0xb7451fd5
  424d1c:	cmp    al,0x95
  424d1e:	cmp    esi,DWORD PTR [edi-0x3bd6c06a]
  424d24:	(bad)  [edi+eax*4]
  424d27:	mov    dl,0x81
  424d29:	cmp    eax,0xec2e4c28
  424d2e:	mov    esp,0x19bb43fa
  424d33:	jns    0x424d1e
  424d35:	hlt    
  424d36:	mov    gs,WORD PTR [edx]
  424d38:	pop    ss
  424d39:	sbb    ch,BYTE PTR [ecx+0x6fb05574]
  424d3f:	leave  
  424d40:	std    
  424d41:	loope  0x424cf6
  424d43:	sbb    eax,0xa6049b4a
  424d48:	adc    BYTE PTR [ecx],0x8d
  424d4b:	das    
  424d4c:	or     edi,edi
  424d4e:	retf   
  424d4f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d51:	ret    0x89a6
  424d54:	in     eax,0xe6
  424d56:	sahf   
  424d57:	pop    ebp
  424d58:	lds    edx,FWORD PTR [eax-0x6a]
  424d5b:	inc    ebp
  424d5c:	inc    ebx
  424d5d:	sbb    DWORD PTR [esi+0x14f8970d],ebx
  424d63:	xor    al,0xb
  424d65:	jge    0x424cfb
  424d67:	jle    0x424da1
  424d69:	xchg   esp,eax
  424d6a:	call   0x6c667a96
  424d6f:	jmp    0x558f1c70
  424d74:	xchg   ecx,edx
  424d76:	fdivr  QWORD PTR [ebx]
  424d78:	ficom  DWORD PTR [esi+eiz*2-0x6c]
  424d7c:	test   BYTE PTR [esi+0x71bd5eee],dh
  424d82:	outs   dx,DWORD PTR ds:[esi]
  424d83:	(bad)  
  424d84:	bound  eax,QWORD PTR [edi]
  424d86:	pop    eax
  424d87:	jl     0x424d65
  424d89:	xchg   ebx,eax
  424d8a:	push   0x2f
  424d8c:	pop    ds
  424d8d:	cmp    DWORD PTR [edi+0x57],eax
  424d90:	or     al,0x74
  424d92:	adc    ecx,ebp
  424d94:	or     BYTE PTR [eax*4+0x266c0861],dl
  424d9b:	push   esi
  424d9c:	add    al,0x81
  424d9f:	push   ecx
  424da0:	out    dx,eax
  424da1:	or     ebx,ebx
  424da3:	scas   al,BYTE PTR es:[edi]
  424da4:	ins    DWORD PTR es:[edi],dx
  424da5:	xchg   esp,eax
  424da6:	call   0xc3ff:0x7ed6cf95
  424dad:	ins    DWORD PTR es:[edi],dx
  424dae:	xchg   ebp,eax
  424daf:	(bad)  
  424db0:	mov    esp,0xb4954ca8
  424db5:	push   es
  424db6:	inc    esp
  424db7:	rol    esp,1
  424db9:	pushf  
  424dba:	pop    ss
  424dbb:	stos   DWORD PTR es:[edi],eax
  424dbc:	mov    esi,0x6221b1a6
  424dc1:	inc    ebp
  424dc2:	adc    edi,DWORD PTR [esi+0x32]
  424dc5:	rol    DWORD PTR [eax],1
	...
  424dcf:	add    BYTE PTR [eax],al
  424dd1:	mov    ds,WORD PTR ds:0xfffbdb6b
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    al,BYTE PTR [esi+0x7bd8ee63]
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [ebp+0x7a000003],ch
  424dea:	mov    ch,0xab
  424dec:	(bad)  
  424ded:	cdq    
  424dee:	jae    0x424d94
  424df0:	cli    
  424df1:	cmp    dh,BYTE PTR [edx]
  424df3:	dec    ebp
  424df4:	lahf   
  424df5:	mov    dh,0xc9
  424df7:	cmc    
  424df8:	retf   0x882b
  424dfb:	inc    ecx
  424dfc:	imul   esi,DWORD PTR [ebx],0xffffffaa
  424dff:	popa   
  424e00:	mov    ds:0xd1d5caf,eax
  424e05:	inc    ebp
  424e06:	mov    edi,0x23339f45
  424e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e0c:	or     cl,BYTE PTR ds:0xc16b5367
  424e12:	jne    0x424df2
  424e14:	mov    WORD PTR [edi],cs
  424e16:	mov    eax,ds:0xdd96cde4
  424e1b:	mov    eax,0xb4edd535
  424e20:	loopne 0x424e8a
  424e22:	test   DWORD PTR [esi],esp
  424e24:	es pop ds
  424e26:	stos   BYTE PTR es:[edi],al
  424e27:	out    dx,eax
  424e28:	inc    edx
  424e29:	mov    bl,dl
  424e2b:	mov    edx,0xd43c77ab
  424e30:	dec    esi
  424e31:	inc    ebx
  424e32:	push   0x1c
  424e34:	and    BYTE PTR ds:0xee0931bb,0x6d
  424e3b:	popf   
  424e3c:	stos   BYTE PTR es:[edi],al
  424e3d:	mov    ds:0xe9ab4b14,al
  424e42:	or     eax,0x33a92ccc
  424e47:	bound  edi,QWORD PTR [eax]
  424e49:	aaa    
  424e4a:	xchg   esp,eax
  424e4b:	mov    DWORD PTR ds:0x6074bd73,ebp
  424e51:	into   
  424e52:	or     eax,0xd76afb4e
  424e57:	outs   dx,BYTE PTR ds:[esi]
  424e58:	pop    esi
  424e59:	xor    BYTE PTR [ecx+0x6b],0x5a
  424e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e5e:	(bad)  
  424e5f:	outs   dx,BYTE PTR ds:[esi]
  424e60:	and    edx,edx
  424e62:	mov    ebp,0x94312310
  424e67:	pop    ecx
  424e68:	jnp    0x424e11
  424e6a:	mov    bh,0xb8
  424e6c:	or     BYTE PTR [eax+0x184ff7a8],dl
  424e72:	out    dx,eax
  424e73:	out    0xe9,al
  424e75:	(bad)  
  424e76:	es and eax,0xe1d8cf75
  424e7c:	sub    ah,BYTE PTR [ebx-0xea81a35]
  424e82:	cmc    
  424e83:	frstor [ebx+eax*4+0x41]
  424e87:	mov    eax,eax
  424e89:	scas   eax,DWORD PTR es:[edi]
  424e8a:	lock fscale 
  424e8d:	mov    ebx,0x7dbc9181
  424e92:	mov    ebx,0x130086f7
  424e97:	ss faddp st(7),st
  424e9a:	sbb    dl,cl
  424e9c:	pop    ecx
  424e9d:	mov    cl,0x9
  424e9f:	out    0x12,eax
  424ea1:	aam    0x15
  424ea3:	push   ebx
  424ea4:	mov    ebx,gs
  424ea6:	dec    ebx
  424ea7:	mov    ebp,0x4c788d8
  424eac:	loopne 0x424eec
  424eae:	dec    edx
  424eaf:	mov    esp,0x8cf213b
  424eb4:	lock xor edx,DWORD PTR ds:0x6d006320
  424ebb:	push   edx
  424ebc:	fs jg  0x424eb7
  424ebf:	cmp    edx,DWORD PTR [edx]
  424ec1:	pop    esi
  424ec2:	lahf   
  424ec3:	rol    DWORD PTR [ecx-0x7d],0x3f
  424ec7:	dec    ecx
  424ec8:	mov    ?,WORD PTR [edi+0x55d80a6]
  424ece:	(bad)  
  424ecf:	cmp    al,0xf9
  424ed1:	xchg   bh,ah
  424ed3:	das    
  424ed4:	and    eax,edx
  424ed6:	and    dl,BYTE PTR [edx-0x68]
  424ed9:	cld    
  424eda:	imul   ebx,DWORD PTR [esi-0x48e3c6ea],0x20af31ba
  424ee4:	mov    ch,0xbe
  424ee6:	cmp    dh,BYTE PTR [ebx-0x15236df9]
  424eec:	leave  
  424eed:	cs loope 0x424ecb
  424ef0:	mov    edi,ebx
  424ef2:	mov    ds:0xb03a92d,eax
  424ef7:	(bad)  
  424ef8:	mov    ds:0x9a8cd502,al
  424efd:	mov    ebx,DWORD PTR [esi+0x7068f93f]
  424f03:	addr16 inc ecx
  424f05:	popf   
  424f06:	cmp    bh,BYTE PTR [esi-0x169a6843]
  424f0c:	stc    
  424f0d:	lods   al,BYTE PTR ds:[esi]
  424f0e:	(bad)  [eax]
  424f10:	pop    ds
  424f11:	ret    
  424f12:	sub    al,0x9f
  424f14:	test   bl,bl
  424f16:	data16 aas 
  424f18:	sti    
  424f19:	push   0xa9521d12
  424f1e:	into   
  424f1f:	in     eax,0x2a
  424f21:	iret   
  424f22:	mov    ebp,0x54864fe6
  424f27:	retf   0x7eb1
  424f2a:	into   
  424f2b:	fwait
  424f2c:	stos   DWORD PTR es:[edi],eax
  424f2d:	test   eax,0x34c3674e
  424f32:	rcr    BYTE PTR ds:0xc3c206be,0xea
  424f39:	xor    al,0xb8
  424f3b:	and    BYTE PTR [ecx+eax*4+0x2e],dh
  424f3f:	sbb    ah,0x98
  424f42:	pop    edx
  424f43:	lds    esp,FWORD PTR [esi]
  424f45:	and    edi,DWORD PTR [esi+edx*1]
  424f48:	pop    esi
  424f49:	mov    eax,0x2776e6a8
  424f4e:	sub    dl,ch
  424f50:	fsubp  st(3),st
  424f52:	mov    ds:0xa195b994,eax
  424f57:	popf   
  424f58:	add    DWORD PTR [ebp+0x22],edx
  424f5b:	jnp    0x424f8f
  424f5d:	mov    DWORD PTR ds:0xf88f2c56,eax
  424f63:	ins    DWORD PTR es:[edi],dx
  424f64:	or     eax,DWORD PTR ds:0x3a2a18fd
  424f6a:	push   DWORD PTR [ecx]
  424f6c:	(bad)  
  424f6d:	pop    esi
  424f6e:	xchg   edx,eax
  424f6f:	fisub  DWORD PTR [ecx-0x1c]
  424f72:	adc    cl,al
  424f74:	std    
  424f75:	mov    ecx,0xbaaa7195
  424f7a:	js     0x424f54
  424f7c:	in     eax,dx
  424f7d:	add    edx,eax
  424f7f:	jbe    0x424f51
  424f81:	sahf   
  424f82:	ret    0xcc35
  424f85:	ins    DWORD PTR es:[edi],dx
  424f86:	popa   
  424f87:	fistp  QWORD PTR [edx+ecx*4]
  424f8a:	fisttp QWORD PTR [ecx+ebx*4+0x43a624ec]
  424f91:	and    edi,DWORD PTR [edx+0x33]
  424f94:	xor    BYTE PTR [eax],ch
  424f96:	pop    ds
  424f97:	lods   eax,DWORD PTR ds:[esi]
  424f98:	mov    ss,WORD PTR [ebp-0x75fee4a6]
  424f9e:	pop    ecx
  424f9f:	ins    BYTE PTR es:[edi],dx
  424fa0:	dec    esi
  424fa1:	cli    
  424fa2:	mov    bh,0xc2
  424fa4:	lahf   
  424fa5:	ret    
  424fa6:	mov    WORD PTR [ebx],?
  424fa8:	or     eax,0xae03aa99
  424fad:	sbb    bl,BYTE PTR [edi-0x78]
  424fb0:	mov    bh,0x12
  424fb2:	jg     0x424f6a
  424fb4:	pop    edx
  424fb5:	inc    esp
  424fb6:	adc    eax,0xf19c8ec3
  424fbb:	adc    BYTE PTR [esi-0x41],bl
  424fbe:	test   BYTE PTR [esi-0x4f84ded5],0x55
  424fc5:	jb     0x425018
  424fc7:	push   di
  424fc9:	fs aaa 
  424fcb:	xor    eax,0x44aed639
  424fd0:	adc    edi,DWORD PTR [edi+0x4da613c7]
  424fd6:	fisttp DWORD PTR [eax-0x62]
  424fd9:	xchg   DWORD PTR [esi],edi
  424fdb:	cdq    
  424fdc:	xor    eax,DWORD PTR [ebx+0x3c5c9d16]
  424fe2:	adc    ebx,DWORD PTR [ecx-0x137d6e5d]
  424fe8:	js     0x424f6a
  424fea:	sub    esi,ebx
  424fec:	push   0x70b2198a
  424ff1:	inc    esi
  424ff2:	inc    edi
  424ff3:	(bad)  
  424ff4:	int3   
  424ff5:	jno    0x424fab
  424ff7:	fld    QWORD PTR [edi+esi*8-0x3d]
  424ffb:	std    
  424ffc:	sub    cl,ch
  424ffe:	dec    ebx
  424fff:	lea    ecx,[ecx-0x2f]
  425002:	fs lahf 
  425004:	pop    esp
  425005:	mov    ah,0x7a
  425007:	add    al,0xb9
  425009:	cs out 0xa9,eax
  42500c:	dec    esi
  42500d:	xchg   edi,eax
  42500e:	repnz xor esi,esi
  425011:	ror    BYTE PTR [edx+0x70],1
  425014:	mov    gs:0x889693ab,eax
  42501a:	int    0xd2
  42501c:	jb     0x425082
  42501e:	xor    BYTE PTR [ebx],0xcc
  425021:	adc    al,0xa3
  425023:	fs daa 
  425025:	push   0xcdd108ce
  42502a:	and    edi,DWORD PTR [ecx-0x2240e7f9]
  425030:	cmp    al,0x56
  425032:	cmc    
  425033:	mov    edx,0xbcd9bc51
  425038:	jp     0x425025
  42503a:	scas   al,BYTE PTR es:[edi]
  42503b:	or     bh,BYTE PTR [edx+0x484d0017]
  425041:	rol    DWORD PTR [ebx+edx*2-0x32],cl
  425045:	xor    al,0xa1
  425047:	je     0x42509f
  425049:	fsubr  DWORD PTR [eax+0x68cf4ef0]
  42504f:	sub    esi,esi
  425051:	out    0xe9,eax
  425053:	mov    edx,0x42679001
  425058:	ins    BYTE PTR es:[edi],dx
  425059:	xor    ebp,0xf12aa6a0
  42505f:	or     BYTE PTR [esi+0x153fa613],dl
  425065:	mov    esp,0xa5752947
  42506a:	ins    DWORD PTR es:[edi],dx
  42506b:	in     eax,0xd7
  42506d:	add    DWORD PTR [ebx],0x8d17bc2a
  425073:	push   esp
  425074:	aaa    
  425075:	jle    0x42503f
  425077:	dec    esp
  425078:	sbb    dl,ah
  42507a:	dec    esi
  42507b:	call   0xc074:0x788f38e6
  425082:	int    0x4e
  425084:	xor    BYTE PTR [esi],0xc4
  425087:	arpl   bp,bp
  425089:	fstp   DWORD PTR [ebx+0x50]
  42508c:	pop    esi
  42508d:	adc    al,0x93
  42508f:	std    
  425090:	push   cs
  425091:	in     al,0xa5
  425093:	xchg   BYTE PTR [edx-0x4e],ah
  425096:	xchg   cl,bl
  425098:	lods   eax,DWORD PTR ds:[esi]
  425099:	fidiv  DWORD PTR [eax-0xe89a125]
  42509f:	fild   QWORD PTR [ebx-0x9]
  4250a2:	in     eax,dx
  4250a3:	jnp    0x425080
  4250a5:	out    0xd3,al
  4250a7:	push   0x36944fa3
  4250ac:	xchg   esi,eax
  4250ad:	xchg   esp,eax
  4250ae:	clc    
  4250af:	and    eax,0x42330f76
  4250b4:	adc    BYTE PTR [ecx+0x5a40b70],0x68
  4250bb:	xlat   BYTE PTR ds:[ebx]
  4250bc:	push   es
  4250bd:	mov    ds:0x9515d1fa,al
  4250c2:	aaa    
  4250c3:	dec    eax
  4250c4:	out    0x9b,eax
  4250c6:	cmp    esi,eax
  4250c8:	dec    ebp
  4250c9:	pop    esp
  4250ca:	mov    bh,0x81
  4250cc:	cmp    eax,0xdd00ea88
  4250d1:	cmp    al,0xcb
  4250d3:	inc    edi
  4250d4:	cs pushf 
  4250d6:	nop
  4250d7:	lahf   
  4250d8:	(bad)  
  4250d9:	stc    
  4250da:	loope  0x4250f2
  4250dc:	dec    ecx
  4250dd:	jmp    0xf9b8:0x5fd38b08
  4250e4:	lock mov al,ds:0x65b9d462
  4250ea:	xchg   ebp,ebx
  4250ec:	jmp    0x4250c5
  4250ee:	shl    BYTE PTR [ebx+0x1f],cl
  4250f1:	addr16 test ebp,ebp
  4250f4:	xchg   esp,eax
  4250f5:	fcom   QWORD PTR [ebx]
  4250f7:	(bad)  
  4250f8:	bnd jbe 0x425144
  4250fb:	pop    es
  4250fc:	sub    eax,0x94525689
  425101:	fild   WORD PTR [ecx-0x5d]
  425104:	dec    esp
  425105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425106:	add    DWORD PTR [edi],esp
  425108:	inc    edi
  425109:	jmp    0x4250bc
  42510b:	xchg   esi,eax
  42510c:	addr16 pop ecx
  42510e:	pop    esi
  42510f:	ins    BYTE PTR es:[edi],dx
  425110:	cdq    
  425111:	jge    0x425162
  425113:	mov    dh,0x98
  425115:	mov    cl,0x65
  425117:	addr16 mov ebx,0xf088fcb5
  42511d:	mov    dl,0x74
  42511f:	cmc    
  425120:	out    dx,al
  425121:	dec    edx
  425122:	cmp    ecx,DWORD PTR es:[ecx+ebp*1]
  425126:	mov    BYTE PTR [eax+0x7e],cl
  425129:	cmovne edi,DWORD PTR [esi]
  42512c:	and    BYTE PTR [edi-0x71524819],0x4f
  425133:	int3   
  425134:	jnp    0x425141
  425136:	hlt    
  425137:	jp     0x42517d
  425139:	sub    BYTE PTR [esp+edx*8],bh
  42513c:	sar    DWORD PTR [edi+0x7d],cl
  42513f:	mov    WORD PTR [ecx-0x7813f29c],es
  425145:	loopne 0x42512a
  425147:	icebp  
  425148:	xchg   ebx,eax
  425149:	inc    ebx
  42514a:	ret    
  42514b:	adc    BYTE PTR [edx-0x79d78b9e],al
  425151:	adc    al,dh
  425153:	pusha  
  425154:	popa   
  425155:	jp     0x425175
  425157:	rol    DWORD PTR [ebp+0x159288f5],0x80
  42515e:	and    eax,0x4d363d6a
  425163:	call   0x91d73fc
  425168:	or     esi,DWORD PTR [esi]
  42516a:	sbb    edi,DWORD PTR [ecx-0x570a591c]
  425170:	fwait
  425171:	mov    dl,0x8c
  425173:	push   eax
  425174:	pushf  
  425175:	and    dh,BYTE PTR [esi+ebx*8+0x433aaa18]
  42517c:	pop    ss
  42517d:	cmc    
  42517e:	jbe    0x4251b6
  425180:	mov    ds,ebp
  425182:	mov    ds:0xc8a4be43,al
  425187:	shr    BYTE PTR [ecx-0x5c],cl
  42518a:	sub    BYTE PTR [eax+0x2cf54271],al
  425190:	pop    esi
  425191:	mov    ds:0xa03a9967,eax
	...
  42519e:	add    BYTE PTR [eax],al
  4251a0:	add    BYTE PTR [ecx-0x42],ch
  4251a3:	cmp    esi,DWORD PTR [esi-0x124801]
  4251a9:	jnp    0x4251f5
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	out    dx,al
  4251ae:	dec    esp
  4251af:	pop    eax
  4251b0:	leave  
  4251b1:	sub    cl,cl
  4251b3:	add    DWORD PTR [eax],eax
  4251b5:	lods   eax,DWORD PTR ds:[esi]
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [eax-0x5a],cl
  4251bb:	xchg   bh,al
  4251bd:	or     eax,0x977cc011
  4251c2:	mov    dh,0x42
  4251c4:	mov    eax,ds:0x3ea05481
  4251c9:	aam    0xe2
  4251cb:	jno    0x4251be
  4251cd:	and    edi,DWORD PTR [edi-0x74]
  4251d0:	(bad)  
  4251d2:	mov    bh,0x72
  4251d4:	out    dx,eax
  4251d5:	test   eax,0x94d80eb1
  4251da:	in     al,0x49
  4251dc:	loope  0x4251ab
  4251de:	test   dl,dh
  4251e0:	outs   dx,BYTE PTR ds:[esi]
  4251e1:	jl     0x425215
  4251e3:	mov    esi,0xf5b0f5c1
  4251e8:	bound  edi,QWORD PTR [ebp+0x61]
  4251eb:	cld    
  4251ec:	xchg   ebx,eax
  4251ed:	iret   
  4251ee:	mov    bl,BYTE PTR [ebx+edx*8-0x2e]
  4251f2:	mov    bh,0x55
  4251f4:	arpl   WORD PTR [ebp-0x42],bp
  4251f7:	outs   dx,DWORD PTR ds:[esi]
  4251f8:	popa   
  4251f9:	daa    
  4251fa:	mov    al,ds:0x2f22bfe7
  4251ff:	ins    BYTE PTR es:[edi],dx
  425200:	data16 icebp 
  425202:	or     eax,0xba51bed6
  425207:	xchg   edx,eax
  425208:	or     al,0xd0
  42520a:	fs mov bh,0x38
  42520d:	std    
  42520e:	mov    ds:0x19b9f9f5,eax
  425213:	jmp    0x6b:0xa76a9b22
  42521a:	(bad)  
  42521b:	leave  
  42521c:	outs   dx,DWORD PTR ds:[esi]
  42521d:	jne    0x42525d
  42521f:	or     dh,BYTE PTR [ecx+0x3e989578]
  425225:	push   0x4a59995b
  42522a:	xchg   DWORD PTR [esi-0x40],ebp
  42522d:	sbb    BYTE PTR [edx-0x5f960618],bl
  425233:	lods   eax,DWORD PTR ds:[esi]
  425234:	adc    ebp,ecx
  425236:	xchg   esi,eax
  425237:	cli    
  425238:	mov    ch,0xbd
  42523a:	push   edi
  42523b:	add    ecx,edx
  42523d:	pop    ecx
  42523e:	(bad)  
  42523f:	jb     0x425267
  425241:	(bad)  
  425243:	or     edx,DWORD PTR [eax+0x30]
  425246:	mov    esp,0x15ad3ead
  42524b:	sbb    dh,dl
  42524d:	pop    esi
  42524e:	and    esi,ebx
  425250:	mov    edi,0x61481b0f
  425255:	xor    edx,DWORD PTR [esi-0x5c]
  425258:	(bad)  
  425259:	popa   
  42525a:	loopne 0x425273
  42525c:	mov    bh,0xe3
  42525e:	adc    DWORD PTR [edx],esp
  425260:	mov    cl,0xa5
  425262:	cdq    
  425263:	jl     0x42529b
  425265:	int3   
  425266:	add    eax,0xaa58b46f
  42526b:	test   BYTE PTR [ebx],dh
  42526d:	ret    
  42526e:	popf   
  42526f:	xchg   edx,eax
  425270:	lea    ecx,[esi+ebp*4]
  425273:	ins    BYTE PTR es:[edi],dx
  425274:	ds xchg edi,eax
  425276:	mov    ecx,0x215911ca
  42527b:	xor    al,0xcd
  42527d:	stos   BYTE PTR es:[edi],al
  42527e:	sub    al,0x80
  425280:	xchg   ebx,eax
  425281:	pushf  
  425282:	and    eax,0xabb5095b
  425287:	cli    
  425288:	adc    BYTE PTR [esi-0x23ef41d8],0xaa
  42528f:	in     eax,0x24
  425291:	in     eax,0x10
  425293:	push   ecx
  425294:	in     eax,dx
  425295:	jle    0x4252fd
  425297:	enter  0x94da,0x41
  42529b:	jg     0x4252ef
  42529d:	and    edi,DWORD PTR [esi+0x3d]
  4252a0:	enter  0x69e7,0xba
  4252a4:	mov    edx,0x275f1370
  4252a9:	(bad)  
  4252ab:	int    0x5e
  4252ad:	sahf   
  4252ae:	push   edi
  4252af:	gs pop ds
  4252b1:	sub    BYTE PTR [ecx+0x38],0xd6
  4252b5:	mov    ch,0x91
  4252b7:	repz add edx,DWORD PTR [edx]
  4252ba:	loopne 0x42523e
  4252bc:	push   esi
  4252bd:	ret    0x904c
  4252c0:	sbb    cl,BYTE PTR [ebp-0x5]
  4252c3:	mov    cl,BYTE PTR [ecx+0x43]
  4252c6:	mov    ds:0x2e9a5b89,eax
  4252cb:	imul   edx,DWORD PTR [ebx],0x4
  4252ce:	add    BYTE PTR [esp+edi*2],al
  4252d1:	outs   dx,BYTE PTR ds:[esi]
  4252d2:	enter  0x3605,0xd3
  4252d6:	lock sub bl,dh
  4252d9:	adc    esp,DWORD PTR [ebp-0x30]
  4252dc:	sahf   
  4252dd:	and    edx,DWORD PTR ds:0xa29ba2e8
  4252e3:	push   cs
  4252e4:	into   
  4252e5:	imul   edi,ebp,0x8144a5d1
  4252eb:	xor    DWORD PTR [edi+eiz*4],0xffffffba
  4252ef:	jnp    0x42528c
  4252f1:	push   ds
  4252f2:	add    BYTE PTR [ebp+0x43],dh
  4252f5:	mov    ds:0x417cff10,al
  4252fa:	sbb    eax,0x82374f2c
  4252ff:	jmp    0x3e28cc18
  425304:	sub    al,0x2b
  425306:	add    eax,0xf2c952c2
  42530b:	mov    ds:0x42889f8,al
  425310:	into   
  425311:	int3   
  425312:	xor    BYTE PTR [ebp+edi*4+0x66],ch
  425316:	cmp    BYTE PTR [ebx-0x25],dh
  425319:	mov    esi,DWORD PTR [ecx-0xa]
  42531c:	or     dh,BYTE PTR [ebx+0x63ae1345]
  425322:	fwait
  425323:	lahf   
  425324:	sub    al,0x6
  425326:	scas   eax,DWORD PTR es:[edi]
  425327:	push   edx
  425328:	fimul  DWORD PTR [ebp+0x20]
  42532b:	das    
  42532c:	pop    es
  42532d:	inc    edi
  42532e:	lods   al,BYTE PTR ss:[esi]
  425330:	or     BYTE PTR [esi+0x65d03896],al
  425336:	add    DWORD PTR [esi-0x70],eax
  425339:	push   esi
  42533a:	mov    dl,bl
  42533c:	retf   0xcadf
  42533f:	popa   
  425340:	push   esi
  425341:	jecxz  0x425365
  425343:	in     al,dx
  425344:	adc    DWORD PTR [edi+0x79],0x22ca8e07
  42534b:	jg     0x4253c7
  42534d:	mov    ds:0xbccc237,al
  425352:	jmp    0xd438:0x92bb1207
  425359:	ins    BYTE PTR es:[edi],dx
  42535a:	cwde   
  42535b:	mov    ah,0x30
  42535d:	inc    esp
  42535e:	xchg   DWORD PTR [ecx+0x7d],eax
  425361:	mov    dh,0x30
  425363:	add    eax,eax
  425365:	test   BYTE PTR [esp+edx*8-0x115b841e],dl
  42536c:	enter  0x3d31,0x84
  425370:	fwait
  425371:	jle    0x42535e
  425373:	jg     0x42531f
  425375:	das    
  425376:	push   ss
  425377:	retf   0x66e9
  42537a:	outs   dx,BYTE PTR ds:[esi]
  42537b:	dec    edx
  42537c:	pop    ss
  42537d:	cmc    
  42537e:	sbb    dl,BYTE PTR [eax+eiz*4]
  425381:	mov    esp,0xa5381f97
  425386:	dec    ebp
  425387:	das    
  425388:	cdq    
  425389:	ficom  WORD PTR [ebp+eiz*1-0x10]
  42538d:	mov    esi,0x78addfc5
  425392:	or     dl,ch
  425394:	in     al,dx
  425395:	adc    eax,0xffffffdb
  425398:	or     DWORD PTR [ebp-0x1c],esp
  42539b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42539c:	cwde   
  42539d:	pop    edx
  42539e:	adc    ah,al
  4253a0:	jbe    0x4253de
  4253a2:	inc    edx
  4253a3:	jge    0x425382
  4253a5:	push   ecx
  4253a6:	inc    esp
  4253a7:	out    0xcb,al
  4253a9:	pop    esp
  4253aa:	xchg   esi,eax
  4253ab:	call   0x2577:0x50538359
  4253b2:	stc    
  4253b3:	shl    DWORD PTR [edi+0x38],cl
  4253b6:	jno    0x4253c7
  4253b8:	pop    edi
  4253b9:	xor    ch,cl
  4253bb:	aas    
  4253bc:	jecxz  0x4253ce
  4253be:	and    dh,ch
  4253c0:	jmp    0xbd2c79aa
  4253c5:	cmp    eax,DWORD PTR [ebx+0x2c58f909]
  4253cb:	add    eax,0x2d2a5fd9
  4253d0:	sub    ah,BYTE PTR [ecx+0x48]
  4253d3:	bound  ebp,QWORD PTR [edi]
  4253d5:	cmp    edx,DWORD PTR [ecx]
  4253d7:	cmp    dh,BYTE PTR [ebx+0x4d]
  4253da:	mov    dh,0x6d
  4253dc:	das    
  4253dd:	push   eax
  4253de:	lahf   
  4253df:	jns    0x42545f
  4253e1:	arpl   WORD PTR [eax],sp
  4253e3:	enter  0xbdfc,0x9f
  4253e7:	test   BYTE PTR ds:[edx],0x1a
  4253eb:	jmp    0x6ba5:0x4b935482
  4253f2:	push   esp
  4253f3:	scas   eax,DWORD PTR es:[edi]
  4253f4:	or     dl,dh
  4253f6:	mov    eax,0x37690775
  4253fb:	or     DWORD PTR [esi-0x7d],edx
  4253fe:	xchg   DWORD PTR [ebx],esi
  425400:	stc    
  425401:	pop    ss
  425402:	les    edi,FWORD PTR [esi+eax*8+0x414c8022]
  425409:	inc    ebp
  42540a:	dec    ebx
  42540b:	in     al,dx
  42540c:	test   eax,0x77bc04da
  425411:	push   ds
  425412:	mov    edx,0xea6af056
  425417:	xchg   ax,ax
  425419:	inc    ebp
  42541a:	in     al,dx
  42541b:	ret    0x7f6
  42541e:	adc    ch,BYTE PTR [ebx-0x52]
  425421:	pop    ecx
  425422:	sub    BYTE PTR [edi+0x372f9497],ch
  425428:	adc    DWORD PTR [ecx-0x33],esp
  42542b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42542c:	cmc    
  42542d:	dec    ebp
  42542e:	jae    0x4253ea
  425430:	and    al,0xca
  425432:	or     eax,0xf9b01e08
  425437:	fwait
  425438:	stos   BYTE PTR es:[edi],al
  425439:	mov    bh,BYTE PTR [edi+0x49]
  42543c:	stos   DWORD PTR es:[edi],eax
  42543d:	mov    al,0x87
  42543f:	repz add eax,DWORD PTR [eax+0x46]
  425443:	(bad)  
  425444:	out    0x34,eax
  425446:	add    edx,0xffffffe3
  425449:	fst    QWORD PTR [ecx+ecx*2+0x22]
  42544d:	mov    ?,ecx
  42544f:	dec    esi
  425450:	mov    ecx,DWORD PTR [edx+0x68896c3a]
  425456:	test   al,0x8d
  425458:	aas    
  425459:	aam    0x39
  42545b:	retf   
  42545c:	push   ss
  42545d:	mov    ah,0x88
  42545f:	sbb    DWORD PTR [edx-0x55],esi
  425462:	pextrw ebx,(bad),0xc5
  425464:	pushf  
  425465:	jo     0x4254df
  425467:	or     DWORD PTR ss:[ecx-0x54],ecx
  42546b:	jns    0x4254ba
  42546d:	xchg   ebp,eax
  42546e:	add    edx,DWORD PTR [ebx+0x14]
  425471:	mov    al,0xea
  425473:	and    DWORD PTR [ecx-0x6d],ebp
  425476:	pop    edx
  425477:	rcr    BYTE PTR ds:0xb3633501,cl
  42547d:	outs   dx,DWORD PTR ds:[esi]
  42547e:	dec    esp
  42547f:	push   es
  425480:	fwait
  425481:	imul   ebx,DWORD PTR [esi+0x2cda80fb],0xdadeed0c
  42548b:	adc    BYTE PTR [edx-0x7d5bb13c],dl
  425491:	mov    ebx,0x9ebd028e
  425496:	fild   WORD PTR [eax]
  425498:	or     BYTE PTR [edx-0x4c],dh
  42549b:	pushf  
  42549c:	and    ch,dl
  42549e:	in     eax,0xe6
  4254a0:	inc    al
  4254a2:	jne    0x425499
  4254a4:	scas   al,BYTE PTR es:[edi]
  4254a5:	cld    
  4254a6:	into   
  4254a7:	dec    BYTE PTR [edi+ebx*2]
  4254aa:	ficomp WORD PTR [esi-0x17ba0d36]
  4254b0:	sbb    ebx,DWORD PTR [eax+0x6a]
  4254b3:	jl     0x425527
  4254b5:	jno    0x425458
  4254b7:	push   cs
  4254b8:	xor    eax,0xe4fc329a
  4254bd:	sbb    al,0xd0
  4254bf:	sbb    eax,0xb491d79e
  4254c4:	enter  0x45cd,0xab
  4254c8:	cli    
  4254c9:	jle    0x4254bf
  4254cb:	add    bh,BYTE PTR ds:0x26566438
  4254d1:	pushf  
  4254d2:	ds clc 
  4254d4:	inc    ecx
  4254d5:	rol    BYTE PTR [eax-0x11f0c36b],cl
  4254db:	(bad)  
  4254dc:	aam    0xf6
  4254de:	outs   dx,DWORD PTR ds:[esi]
  4254df:	std    
  4254e0:	jmp    0x7b82a263
  4254e5:	add    ecx,DWORD PTR [ecx]
  4254e7:	jne    0x425495
  4254e9:	fdivrp st(7),st
  4254eb:	adc    dl,BYTE PTR [ebp+0x74]
  4254ee:	addr16 cmc 
  4254f0:	mov    al,BYTE PTR [edi-0x63ea282d]
  4254f6:	out    0xb,al
  4254f8:	and    BYTE PTR [edx],0x37
  4254fb:	sar    DWORD PTR [edx],0xda
  4254fe:	mov    edi,0x22f5b64b
  425503:	shl    DWORD PTR ds:0xd3015096,0xd6
  42550a:	loope  0x425555
  42550c:	mov    ecx,0x3d4ee60d
  425511:	mov    ah,0x96
  425513:	shl    DWORD PTR ds:0x321d0827,cl
  425519:	sbb    al,dh
  42551b:	sti    
  42551c:	mov    fs,ebp
  42551e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42551f:	mov    al,ds:0x16ecb90d
  425524:	rcl    DWORD PTR [ebp-0x7506fa4a],0xef
  42552b:	mov    dl,0xa5
  42552d:	dec    esi
  42552e:	dec    ebx
  42552f:	movsx  edx,BYTE PTR [eax+edx*1-0x6cf59b28]
  425537:	dec    esi
  425538:	mov    al,ds:0x7d1560bb
  42553d:	imul   eax,DWORD PTR [ebp-0x151a8970],0x98ddab52
  425547:	clc    
  425548:	out    dx,al
  425549:	inc    ecx
  42554a:	out    dx,eax
  42554b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42554c:	jae    0x42554a
  42554e:	aad    0x5c
  425550:	clc    
  425551:	sbb    DWORD PTR [edi-0x42ccb879],edx
  425557:	or     ah,bl
  425559:	xchg   ecx,eax
  42555a:	cmp    bl,0x20
  42555d:	leave  
  42555e:	pop    es
  42555f:	and    DWORD PTR [esi+0x3724b8fe],esp
  425565:	xor    al,0x0
	...
  42556f:	add    BYTE PTR [eax],al
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     edx,DWORD PTR [edi+ebx*8-0x44]
  425580:	rcl    ch,1
  425582:	int3   
  425583:	add    DWORD PTR [eax],eax
  425585:	lods   eax,DWORD PTR ds:[esi]
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    BYTE PTR [eax],cl
  42558a:	fbld   TBYTE PTR [eax-0x1d]
  42558d:	pop    eax
  42558e:	cmp    dl,al
  425590:	dec    ebp
  425591:	and    edi,DWORD PTR [ebp+0x3c]
  425594:	arpl   WORD PTR [eax-0xf798097],sp
  42559a:	cmp    eax,0x328b11b
  42559f:	jecxz  0x42552f
  4255a1:	jg     0x42552c
  4255a3:	push   eax
  4255a4:	icebp  
  4255a5:	(bad)  
  4255a6:	sti    
  4255a7:	cmp    DWORD PTR [ebp-0x4ec18dcf],edi
  4255ad:	cdq    
  4255ae:	sahf   
  4255af:	icebp  
  4255b0:	mov    eax,0x15a35894
  4255b5:	imul   edx,DWORD PTR [ecx-0x6aa60ad1],0x5c06a7fd
  4255bf:	imul   BYTE PTR [ebx]
  4255c1:	jl     0x42558a
  4255c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255c4:	xchg   ebx,eax
  4255c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255c6:	xor    DWORD PTR [edx+eax*8],ebx
  4255c9:	mov    eax,ds:0xf826665d
  4255ce:	and    al,0x5d
  4255d0:	ds pushf 
  4255d2:	je     0x4255b7
  4255d4:	out    dx,eax
  4255d5:	fs aas 
  4255d7:	lea    esi,[edx-0x18b7f94f]
  4255dd:	retf   0xfdb3
  4255e0:	rol    dh,0x98
  4255e3:	inc    edx
  4255e4:	adc    al,0x3d
  4255e6:	mov    es,WORD PTR [ecx-0x57]
  4255e9:	mov    al,ds:0x96305814
  4255ee:	imul   edx,esi,0x54
  4255f1:	mov    ebp,0x9ed6dcc5
  4255f6:	lods   al,BYTE PTR ds:[esi]
  4255f7:	inc    edi
  4255f8:	cmc    
  4255f9:	inc    edx
  4255fa:	push   edi
  4255fb:	and    DWORD PTR [ecx+edx*1],eax
  4255fe:	pushf  
  4255ff:	ins    DWORD PTR es:[edi],dx
  425600:	mov    DWORD PTR [ebx],0xa2e8b8a9
  425606:	retf   
  425607:	sub    al,0x45
  425609:	mov    edi,0x2677852a
  42560e:	cs pop ecx
  425610:	or     al,0x6f
  425612:	dec    esp
  425613:	and    cl,BYTE PTR [esi+0x10]
  425616:	mov    eax,ds:0x742a827b
  42561b:	in     al,0xf5
  42561d:	cmc    
  42561e:	pop    edx
  42561f:	aaa    
  425620:	and    eax,0x4576d2f8
  425625:	inc    ebp
  425626:	inc    edx
  425627:	mov    eax,0xe13b230d
  42562c:	cld    
  42562d:	mov    edx,0x7eb2d6c3
  425632:	add    eax,DWORD PTR [edx+edx*4+0x46d94e41]
  425639:	fild   QWORD PTR [edi+0x3597050b]
  42563f:	cmp    al,0x57
  425641:	dec    ebx
  425642:	or     ebp,DWORD PTR [edx-0x1c]
  425645:	pop    ss
  425646:	in     eax,dx
  425647:	mov    ch,0x15
  425649:	outs   dx,BYTE PTR ds:[esi]
  42564a:	jno    0x425689
  42564c:	call   0x8231:0x267a0802
  425653:	or     al,0x51
  425655:	push   0xef5c0b1d
  42565a:	(bad)  
  42565b:	je     0x425650
  42565d:	lods   eax,DWORD PTR ds:[esi]
  42565e:	sbb    eax,0xb8b7b91c
  425663:	pop    edi
  425664:	push   es
  425665:	int    0x94
  425667:	test   ecx,esp
  425669:	fmul   QWORD PTR [ebx]
  42566b:	idiv   BYTE PTR [esi*4-0x21af047f]
  425672:	mov    ebp,0xe1a98cd8
  425677:	mov    cl,0x5f
  425679:	xor    ebp,DWORD PTR [ebx+ebp*8-0x7cefd2d2]
  425680:	in     eax,0xb6
  425682:	aaa    
  425683:	pushf  
  425684:	ins    BYTE PTR es:[edi],dx
  425685:	shl    BYTE PTR [ecx-0x51],1
  425688:	xchg   ecx,eax
  425689:	jle    0x4256b6
  42568b:	and    eax,0x4eeb6471
  425690:	shl    DWORD PTR [edi+0x399436f7],0xd7
  425697:	cmc    
  425698:	pop    esi
  425699:	fiadd  DWORD PTR [edi+0x72]
  42569c:	test   BYTE PTR [edi-0x487f7059],ch
  4256a2:	mov    ds:0x8738c041,al
  4256a7:	add    BYTE PTR [edi+0x2d],0xb9
  4256ab:	cs (bad) 
  4256ad:	jnp    0x4256be
  4256af:	pushf  
  4256b0:	ss out dx,al
  4256b2:	les    eax,FWORD PTR [ebx+0x67d352e8]
  4256b8:	dec    ebp
  4256b9:	(bad)  [ecx+0x31e2a364]
  4256bf:	aaa    
  4256c0:	out    dx,al
  4256c1:	ds jbe 0x4256d3
  4256c4:	ja     0x425659
  4256c6:	jnp    0x4256c7
  4256c8:	ret    0x674b
  4256cb:	mov    ebx,0xc24d0e95
  4256d0:	adc    ebx,esi
  4256d2:	in     eax,dx
  4256d3:	mov    al,0x4a
  4256d5:	cs sbb al,0x67
  4256d8:	mov    al,0x18
  4256da:	jno    0x4256ea
  4256dc:	repnz test eax,0x3bcd6db3
  4256e2:	dec    esp
  4256e3:	imul   edx,DWORD PTR [esi-0x47],0x68
  4256e7:	mov    esp,0x6713df2a
  4256ec:	inc    eax
  4256ed:	xchg   ebp,ebp
  4256ef:	sbb    eax,DWORD PTR [ecx-0x56]
  4256f2:	xchg   ebx,eax
  4256f3:	test   eax,0x799c72ec
  4256f8:	or     dh,bl
  4256fa:	pop    eax
  4256fb:	adc    edi,DWORD PTR [esi]
  4256fd:	arpl   WORD PTR [edx],di
  4256ff:	sbb    al,0xf5
  425701:	xor    eax,0x4ddf6fb5
  425706:	inc    ebp
  425707:	data16 lahf 
  425709:	sti    
  42570a:	cld    
  42570b:	pop    ebp
  42570c:	out    0xa7,al
  42570e:	jns    0x4256f4
  425710:	xchg   edi,eax
  425711:	cmp    BYTE PTR [eax-0x43c5a2f7],cl
  425717:	in     al,dx
  425718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425719:	mov    ecx,0x786504a9
  42571e:	xchg   esp,eax
  42571f:	sbb    BYTE PTR [esi-0x4e],ah
  425722:	xchg   edx,eax
  425723:	int3   
  425724:	add    eax,0x443bde2a
  425729:	jl     0x42579c
  42572b:	(bad)  
  42572c:	arpl   WORD PTR [ecx+0xb],sp
  42572f:	xchg   ebp,eax
  425730:	sbb    ebx,eax
  425732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425733:	in     al,dx
  425734:	push   ds
  425735:	inc    edi
  425736:	mov    bl,0xce
  425738:	mov    ecx,0x164c8f88
  42573d:	pop    eax
  42573e:	mov    BYTE PTR [eax],cl
  425740:	sbb    al,0x1a
  425742:	(bad)  
  425743:	push   ss
  425744:	push   0x47336f01
  425749:	and    dl,BYTE PTR es:[eax]
  42574c:	jecxz  0x4256d8
  42574e:	pop    esp
  42574f:	lods   eax,DWORD PTR ds:[esi]
  425750:	scas   al,BYTE PTR es:[edi]
  425751:	loope  0x4256e2
  425753:	jnp    0x425778
  425755:	mov    WORD PTR [ecx-0x6e834f7b],ds
  42575b:	mov    ch,0x4
  42575d:	in     al,0x5f
  42575f:	in     eax,dx
  425760:	dec    ebp
  425761:	int3   
  425762:	mov    esp,0x7f8ca0bc
  425767:	(bad)  
  425768:	pop    ebp
  425769:	les    eax,FWORD PTR [edi+esi*2+0x8f97ba9]
  425770:	jmp    0x40171972
  425775:	add    DWORD PTR [edi],esp
  425777:	xchg   ebp,eax
  425778:	pop    eax
  425779:	test   DWORD PTR [ecx+0x499ff9b9],edi
  42577f:	arpl   WORD PTR [edx-0x28],si
  425782:	push   0x7f598821
  425787:	es mov ecx,0x147467da
  42578d:	and    al,0x11
  42578f:	xor    eax,0x5f03652b
  425794:	cwde   
  425795:	xor    edi,ecx
  425797:	lahf   
  425798:	or     esp,0x23
  42579b:	fdiv   DWORD PTR [eax]
  42579d:	and    al,BYTE PTR [eax+0x69eedbb4]
  4257a3:	adc    DWORD PTR [ecx+0x22],esi
  4257a6:	lods   eax,DWORD PTR ds:[esi]
  4257a7:	out    0x45,al
  4257a9:	cmp    BYTE PTR [esi-0x67],0x39
  4257ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257ae:	enter  0x7c11,0xeb
  4257b2:	inc    ebx
  4257b3:	pop    ss
  4257b4:	sub    DWORD PTR [ebx+0x5f81088c],0xd3f6b686
  4257be:	inc    ebp
  4257bf:	mov    BYTE PTR [edi+0x11],bh
  4257c2:	call   0x5a0170ce
  4257c7:	mov    ecx,0x1ace158c
  4257cc:	mov    bl,0x87
  4257ce:	pop    ds
  4257cf:	sbb    al,0x2
  4257d1:	ins    BYTE PTR es:[edi],dx
  4257d2:	ins    DWORD PTR es:[edi],dx
  4257d3:	cmp    eax,0x808a7417
  4257d8:	or     al,0x79
  4257da:	inc    ebp
  4257db:	ja     0x425845
  4257dd:	gs in  eax,dx
  4257df:	sbb    esp,DWORD PTR [ebp-0x31]
  4257e2:	cli    
  4257e3:	jge    0x4257d8
  4257e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257e6:	retf   0x75d6
  4257e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ea:	cmp    ah,BYTE PTR ds:0x437a98ae
  4257f0:	rol    BYTE PTR [ecx],0xe8
  4257f3:	mov    bh,BYTE PTR [eax]
  4257f5:	push   ebp
  4257f6:	cmp    ebx,DWORD PTR [ecx-0x24]
  4257f9:	mov    dh,BYTE PTR [ebp+0x3749dc87]
  4257ff:	in     eax,0xfe
  425801:	jns    0x425868
  425803:	mov    al,ds:0x420410e3
  425808:	adc    eax,0x53b9632e
  42580d:	inc    edi
  42580e:	jno    0x4257ae
  425810:	or     eax,0x91f70086
  425815:	into   
  425816:	push   0x518fe0ea
  42581b:	push   es
  42581c:	adc    eax,0xfb452ccc
  425821:	jmp    0x4257ca
  425823:	adc    eax,0xdc362ecf
  425828:	jne    0x425870
  42582a:	xchg   esp,eax
  42582b:	push   esi
  42582c:	imul   ebp,DWORD PTR [ebx],0xe474faa7
  425832:	adc    al,0xd6
  425834:	in     al,dx
  425835:	into   
  425836:	leave  
  425837:	outs   dx,BYTE PTR ds:[esi]
  425838:	jg     0x425817
  42583a:	(bad)  
  42583b:	mov    esi,0xfea2b01d
  425840:	pop    esp
  425841:	test   dl,ah
  425843:	test   BYTE PTR [ebx],dh
  425845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425846:	in     eax,0x36
  425848:	out    0xa9,eax
  42584a:	scas   eax,DWORD PTR es:[edi]
  42584b:	adc    eax,0x6d001e3d
  425850:	push   edx
  425851:	arpl   WORD PTR [eax+0x51],ax
  425854:	adc    al,BYTE PTR [edx]
  425856:	jmp    DWORD PTR [ebx+0x19cc38d5]
  42585c:	inc    eax
  42585d:	(bad)  
  42585f:	and    DWORD PTR [ebx+0x58ec17d9],edi
  425865:	ret    0x4916
  425868:	iret   
  425869:	xchg   esp,eax
  42586a:	mov    DWORD PTR [esp+ebx*4-0x4019a35c],edx
  425871:	pop    ecx
  425872:	push   0xdc4bd384
  425877:	xchg   edi,eax
  425878:	jbe    0x425849
  42587a:	popw   ds
  42587c:	icebp  
  42587d:	(bad)  [ecx]
  42587f:	pop    eax
  425880:	push   ss
  425881:	mov    dl,0xcb
  425883:	sbb    eax,0xf1e033b7
  425888:	in     eax,dx
  425889:	scas   al,BYTE PTR es:[edi]
  42588a:	imul   esi,esi,0xffffffaa
  42588d:	mov    edx,0x322810c0
  425892:	mov    al,ds:0x9fc4a9dc
  425897:	xchg   ebx,eax
  425898:	lahf   
  425899:	loop   0x4258e8
  42589b:	imul   eax,DWORD PTR [ebp+0x10],0x5e202b7a
  4258a2:	xchg   esi,eax
  4258a3:	lahf   
  4258a4:	sub    ebx,DWORD PTR [ebx+ecx*2-0x77e19860]
  4258ab:	fdivr  QWORD PTR [esi-0x728b8ff0]
  4258b1:	push   ecx
  4258b2:	lock add bh,bl
  4258b5:	jg     0x425883
  4258b7:	and    esi,DWORD PTR [edx]
  4258b9:	jl     0x4258bc
  4258bb:	sbb    bl,dh
  4258bd:	or     DWORD PTR [ebx+esi*2],esi
  4258c0:	mov    al,0x1c
  4258c2:	mov    bl,0x2e
  4258c4:	aad    0xec
  4258c6:	das    
  4258c7:	mov    edx,DWORD PTR ds:0xa870155e
  4258cd:	pop    edi
  4258ce:	mov    ah,0x2e
  4258d0:	cmp    cl,BYTE PTR [eax-0x52]
  4258d3:	adc    DWORD PTR [eax-0x1632953b],ebp
  4258d9:	add    dh,BYTE PTR [ebx+0x10]
  4258dc:	retf   0x507e
  4258df:	pushf  
  4258e0:	pop    ebx
  4258e1:	dec    esp
  4258e2:	push   ebx
  4258e3:	mov    edi,0x6aed566b
  4258e8:	fcmovnbe st,st(4)
  4258ea:	in     eax,0xe2
  4258ec:	jmp    0x1ac95cd
  4258f1:	lahf   
  4258f2:	or     al,0xeb
  4258f4:	cmp    DWORD PTR [edx],edi
  4258f6:	xchg   ecx,eax
  4258f7:	cmp    al,0xa4
  4258f9:	fidiv  WORD PTR [edx]
  4258fb:	xor    dl,ch
  4258fd:	mov    eax,0x45dc8167
  425902:	mov    ah,0x5f
  425904:	xchg   edi,ebx
  425906:	xchg   ecx,eax
  425907:	test   BYTE PTR [ecx+0x6a],bh
  42590a:	js     0x425931
  42590c:	idiv   BYTE PTR [eax]
  42590e:	and    al,0x8a
  425910:	mov    BYTE PTR [ebx],dl
  425912:	fs ins DWORD PTR es:[edi],dx
  425914:	cdq    
  425915:	jmp    0x3150:0xd6ba8e48
  42591c:	and    eax,0x42182fb0
  425921:	jmp    0xe525:0xc6f2f2ed
  425928:	fnstenv [ebp+ebp*2+0x3d]
  42592c:	fst    DWORD PTR [esi+0x4d]
  42592f:	nop
  425930:	jbe    0x4258de
  425932:	dec    ebx
  425933:	jle    0x4258df
  425935:	rol    DWORD PTR [eax],cl
	...
  42593f:	add    BYTE PTR [eax],al
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x77f321a4],ah
  425951:	adc    al,0x1
  425954:	add    BYTE PTR [ebp+0x5f000003],ch
  42595a:	fs std 
  42595c:	mov    ebp,0x2ab04f00
  425961:	sub    BYTE PTR [eax+0x4cf6fb12],bh
  425967:	aaa    
  425968:	ins    BYTE PTR es:[edi],dx
  425969:	jo     0x4258f5
  42596b:	push   esp
  42596c:	jp     0x4259e1
  42596e:	cld    
  42596f:	stos   DWORD PTR es:[edi],eax
  425970:	pop    edx
  425971:	mov    ebp,DWORD PTR [ebx-0x26]
  425974:	stos   DWORD PTR es:[edi],eax
  425975:	int    0x2e
  425977:	in     al,dx
  425978:	das    
  425979:	gs jo  0x4259c7
  42597c:	pushf  
  42597d:	sbb    DWORD PTR [ebx+ebx*2+0x1a],esi
  425981:	and    DWORD PTR [edi],0x5d31c314
  425987:	test   eax,0xbf729095
  42598c:	stos   DWORD PTR es:[edi],eax
  42598d:	mov    ds:0xe4ec6ae,eax
  425992:	pusha  
  425993:	test   eax,0x5c781b4c
  425998:	jecxz  0x4259ab
  42599a:	(bad)  
  42599b:	fld    TBYTE PTR es:[edi]
  42599e:	and    al,BYTE PTR [ebx+0x1bfa23eb]
  4259a4:	cmp    al,0x9b
  4259a6:	icebp  
  4259a7:	out    0x2f,eax
  4259a9:	sbb    DWORD PTR [esi-0x7eb3eccd],0xffffff9d
  4259b0:	scas   eax,DWORD PTR es:[edi]
  4259b1:	mov    ds:0x1337e297,eax
  4259b6:	movntps XMMWORD PTR [eax+0x3d],xmm4
  4259ba:	dec    esi
  4259bb:	or     BYTE PTR [edi+ebx*2],dl
  4259be:	xchg   ecx,eax
  4259bf:	arpl   bp,dx
  4259c1:	and    bh,0xe8
  4259c4:	fild   WORD PTR ds:0xa1b0b4cc
  4259ca:	lea    esi,[ebp+0x13]
  4259cd:	call   0xc5f3:0x3077436f
  4259d4:	adc    edi,esi
  4259d6:	mov    al,ds:0xda60e0f2
  4259db:	aam    0x90
  4259dd:	scas   al,BYTE PTR es:[edi]
  4259de:	inc    edx
  4259df:	bound  esp,QWORD PTR [esi+0x24dc7b48]
  4259e5:	mov    ds:0x7e3bf7a3,eax
  4259ea:	mov    ch,0xb6
  4259ec:	aam    0x38
  4259ee:	mov    esp,0x8cdecd37
  4259f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f5:	jecxz  0x425a53
  4259f7:	dec    edi
  4259f8:	jb     0x4259fa
  4259fa:	mov    edx,0xecb8e274
  4259ff:	sar    bl,cl
  425a01:	es xchg edx,eax
  425a03:	inc    edx
  425a04:	aam    0xdc
  425a06:	inc    ecx
  425a07:	xor    BYTE PTR [ecx+0x47],ch
  425a0a:	(bad)  
  425a0b:	popa   
  425a0c:	cmp    dl,bl
  425a0e:	cdq    
  425a0f:	inc    edx
  425a10:	or     dl,BYTE PTR [edi]
  425a12:	(bad)  
  425a13:	pop    esp
  425a14:	in     al,dx
  425a15:	and    al,BYTE PTR [edx+0x3d22e541]
  425a1b:	dec    edx
  425a1d:	stc    
  425a1e:	xor    eax,0x764ada53
  425a23:	adc    al,0xe5
  425a25:	fdiv   QWORD PTR [edi]
  425a27:	push   0xfffffff9
  425a29:	push   0x3a
  425a2b:	ret    0xe376
  425a2e:	fcomi  st,st(6)
  425a30:	mov    esi,0xbbed7fa5
  425a35:	imul   edx,DWORD PTR [esi-0x30],0x58
  425a39:	cmp    ch,BYTE PTR [edi+0x44]
  425a3c:	aaa    
  425a3d:	cmp    al,0xbc
  425a3f:	inc    ebp
  425a40:	or     DWORD PTR [eax+0x428deff8],edi
  425a46:	mov    WORD PTR [edx],ds
  425a48:	pop    ebp
  425a49:	jae    0x425aa7
  425a4b:	aad    0x4d
  425a4d:	outs   dx,DWORD PTR ds:[esi]
  425a4e:	xor    esi,esi
  425a50:	mov    ecx,0x554acb25
  425a55:	test   al,0x7a
  425a57:	repz aad 0xd9
  425a5a:	movups XMMWORD PTR [edx-0x4a],xmm1
  425a5e:	sub    dh,BYTE PTR [esi-0x4c]
  425a61:	sahf   
  425a62:	jg     0x425a35
  425a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a65:	not    DWORD PTR [ecx+edx*4]
  425a68:	leave  
  425a69:	mov    eax,0xa3334fc2
  425a6f:	js     0x425aaa
  425a71:	xchg   esp,eax
  425a72:	xchg   ecx,eax
  425a73:	sub    al,0x3f
  425a75:	mov    cl,0x9c
  425a77:	or     ebx,esp
  425a79:	xchg   edi,eax
  425a7a:	and    al,0xd3
  425a7c:	jno    0x425a04
  425a7e:	inc    esp
  425a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a80:	retf   0x9aac
  425a83:	lods   eax,DWORD PTR ds:[esi]
  425a84:	daa    
  425a85:	fisub  WORD PTR [edx]
  425a87:	ss popf 
  425a89:	dec    edi
  425a8a:	pop    ds
  425a8b:	sub    al,0x4c
  425a8d:	xchg   esp,eax
  425a8e:	mov    BYTE PTR [ebx],cl
  425a90:	cmp    al,BYTE PTR [edx]
  425a92:	fcmove st,st(7)
  425a94:	cmp    al,0xea
  425a96:	dec    esi
  425a97:	(bad)  
  425a99:	popa   
  425a9a:	mov    eax,0xe0eac8de
  425a9f:	in     al,dx
  425aa0:	pop    eax
  425aa1:	out    dx,al
  425aa2:	sbb    al,0x7c
  425aa4:	fisubr DWORD PTR ds:0x1a122b7b
  425aaa:	sub    edx,DWORD PTR [edi-0x44]
  425aad:	jmp    0x6384cc7f
  425ab2:	mov    esp,fs
  425ab4:	imul   BYTE PTR [edx-0x5b]
  425ab7:	jne    0x425ad3
  425ab9:	sub    eax,0x15d30580
  425abe:	cmp    BYTE PTR [ebx+0x5442481d],bh
  425ac4:	rol    DWORD PTR [edi],1
  425ac6:	dec    edi
  425ac7:	sbb    dh,BYTE PTR [esi-0x11]
  425aca:	push   esp
  425acb:	call   0x4380:0x4b00da91
  425ad2:	xchg   edi,eax
  425ad3:	je     0x425aff
  425ad5:	jo     0x425a6c
  425ad7:	mov    ds:0xb4a67d4b,al
  425adc:	sub    BYTE PTR [edx-0x5bedf709],ch
  425ae2:	and    ah,dl
  425ae4:	(bad)  
  425ae6:	xor    al,0xc1
  425ae8:	out    0x57,al
  425aea:	ds (bad) 
  425aec:	pop    ebp
  425aed:	stc    
  425aee:	pop    ss
  425aef:	lds    esi,FWORD PTR [edi]
  425af1:	sub    DWORD PTR [edx],edi
  425af3:	push   ebx
  425af4:	inc    ebx
  425af5:	gs clc 
  425af7:	jl     0x425a7d
  425af9:	and    DWORD PTR [eax+0x4b6755b0],ebp
  425aff:	inc    ecx
  425b00:	aam    0xdc
  425b02:	cmp    eax,0x8aad5fa6
  425b07:	jp     0x425ac4
  425b09:	jecxz  0x425b7b
  425b0b:	xor    eax,0x3a7941ae
  425b10:	pop    es
  425b11:	lods   al,BYTE PTR ds:[esi]
  425b12:	mov    ah,0x71
  425b14:	sbb    eax,0xe4c68b37
  425b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b1a:	out    dx,eax
  425b1b:	clc    
  425b1c:	jae    0x425adc
  425b1e:	cmp    eax,0x398b9858
  425b23:	fimul  WORD PTR [ecx+0x27ad2a45]
  425b29:	jo     0x425b7a
  425b2b:	add    DWORD PTR [ecx+ebp*8-0x14],eax
  425b2f:	mov    al,ds:0x4913824b
  425b34:	dec    ebp
  425b36:	push   0x4639e91a
  425b3b:	mov    ebx,0x2991d5c7
  425b40:	adc    BYTE PTR [esi+0x1c],0x1a
  425b44:	mov    ch,0x68
  425b46:	xchg   edx,eax
  425b47:	out    dx,al
  425b48:	sbb    ebp,DWORD PTR ds:0x5588be25
  425b4e:	xor    eax,0xcff15a06
  425b53:	or     al,0xce
  425b55:	out    0x3f,eax
  425b57:	stc    
  425b58:	idiv   DWORD PTR [ebx]
  425b5a:	jl     0x425b79
  425b5c:	clc    
  425b5d:	jns    0x425b0a
  425b5f:	lahf   
  425b60:	inc    esp
  425b61:	lods   al,BYTE PTR ds:[esi]
  425b62:	or     dl,al
  425b64:	les    edx,FWORD PTR [ebp-0x4c]
  425b67:	mov    al,ds:0x44977d07
  425b6c:	fild   DWORD PTR ds:0xc581d4e9
  425b72:	push   cs
  425b73:	sub    DWORD PTR [edi+0x4d],edx
  425b76:	call   0x8167:0xbe53c3f9
  425b7d:	inc    edx
  425b7e:	cmp    dh,BYTE PTR [ebp+0x322b7268]
  425b84:	cmp    cl,BYTE PTR [ecx-0x5c2f5036]
  425b8a:	ja     0x425bdf
  425b8c:	fwait
  425b8d:	jp     0x425ba3
  425b8f:	cdq    
  425b90:	xchg   edx,eax
  425b91:	ret    
  425b92:	sbb    eax,0x473a5872
  425b97:	fldenv [di]
  425b9a:	outs   dx,BYTE PTR ds:[esi]
  425b9b:	xchg   BYTE PTR [edi-0x3e62db9a],cl
  425ba1:	cmp    DWORD PTR [esi],ebx
  425ba3:	dec    ebp
  425ba4:	push   esp
  425ba5:	test   DWORD PTR [esi+0x5f1eeae5],ebp
  425bab:	xor    esp,edi
  425bad:	pop    ecx
  425bae:	jg     0x425bbf
  425bb0:	adc    DWORD PTR [ebx],edx
  425bb2:	je     0x425ba1
  425bb4:	into   
  425bb5:	or     edx,DWORD PTR [ecx+ecx*4+0x777dde30]
  425bbc:	pop    ebx
  425bbd:	(bad)
  425bc0:	popa   
  425bc1:	addr16 mov ecx,0xdabe21bc
  425bc7:	xchg   edi,eax
  425bc8:	cmp    al,0xa9
  425bca:	repz dec esp
  425bcc:	add    BYTE PTR [esi],dh
  425bce:	pop    ds
  425bcf:	dec    edx
  425bd0:	(bad)  
  425bd1:	(bad)  
  425bd2:	dec    ecx
  425bd3:	sbb    al,0xf4
  425bd5:	(bad)  
  425bd6:	stos   DWORD PTR es:[edi],eax
  425bd7:	clc    
  425bd8:	push   cs
  425bd9:	imul   eax,DWORD PTR [esi-0x2427f07d],0x9481a283
  425be3:	xor    al,0x75
  425be5:	cwde   
  425be6:	icebp  
  425be7:	adc    ch,BYTE PTR [ecx-0x64aee16e]
  425bed:	out    0xb1,eax
  425bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bf0:	mov    ah,0xbc
  425bf2:	adc    BYTE PTR [ebp-0x27],cl
  425bf5:	loop   0x425bf2
  425bf7:	fnstenv [edx+ebx*4]
  425bfa:	cmp    al,0xfb
  425bfc:	into   
  425bfd:	add    ebp,DWORD PTR [ebp-0x2e]
  425c00:	repz imul ebx,esi,0xffffffd1
  425c04:	or     eax,0x99bbf38b
  425c09:	xchg   ecx,eax
  425c0a:	mov    DWORD PTR [esi+ecx*8+0x16],ebp
  425c0e:	or     BYTE PTR [edi-0x69],0xa0
  425c12:	test   al,0x38
  425c15:	lea    ecx,[ebx]
  425c17:	mov    ecx,0x15ecb349
  425c1c:	jae    0x425baa
  425c1e:	scas   eax,DWORD PTR es:[edi]
  425c1f:	add    ecx,ebp
  425c21:	je     0x425be1
  425c23:	arpl   WORD PTR ds:0x1c933e44,bx
  425c29:	lock and al,0xaf
  425c2c:	push   esi
  425c2d:	outs   dx,BYTE PTR ds:[esi]
  425c2e:	jnp    0x425be2
  425c30:	sbb    dh,BYTE PTR [ebx-0x27]
  425c33:	aam    0xe2
  425c35:	icebp  
  425c36:	push   ebx
  425c37:	cmp    ah,ah
  425c39:	call   0xdc7265f5
  425c3e:	jg     0x425be0
  425c40:	sub    esi,DWORD PTR [eax-0x6de711ac]
  425c46:	xchg   ecx,eax
  425c47:	sub    cl,BYTE PTR [ebx-0x6d]
  425c4a:	inc    edi
  425c4b:	mov    BYTE PTR [edx+0x76f0ae9],al
  425c51:	jle    0x425c03
  425c53:	add    ecx,eax
  425c55:	jl     0x425c8d
  425c57:	dec    ebx
  425c58:	das    
  425c59:	jmp    0xbb02b629
  425c5e:	ins    BYTE PTR es:[edi],dx
  425c5f:	mov    cl,0xb0
  425c61:	je     0x425c79
  425c63:	push   ebx
  425c64:	xchg   DWORD PTR [edx-0x3f],edi
  425c67:	pop    esp
  425c68:	test   esp,eax
  425c6a:	in     al,0x53
  425c6c:	shl    DWORD PTR [edx+ecx*4+0x3f4cf6f5],cl
  425c73:	ins    BYTE PTR es:[edi],dx
  425c74:	jno    0x4a0e5329
  425c7a:	cmp    al,0x5c
  425c7c:	pop    es
  425c7d:	xchg   edx,eax
  425c7e:	inc    ecx
  425c7f:	push   esi
  425c80:	rol    BYTE PTR cs:[edx-0xe2576b4],cl
  425c87:	pop    esp
  425c88:	aad    0xb
  425c8a:	or     DWORD PTR [ebp+0x79],edi
  425c8d:	mov    ch,0xe7
  425c8f:	push   cs
  425c90:	repnz cmp eax,DWORD PTR [bx+0x3691]
  425c96:	cmc    
  425c97:	xchg   BYTE PTR ss:[esi+0x3bc7052a],ah
  425c9e:	add    bl,BYTE PTR [ecx+0x3e]
  425ca1:	out    0xf1,eax
  425ca3:	addr16 out 0xdb,eax
  425ca6:	xchg   esi,eax
  425ca7:	and    dl,bh
  425ca9:	dec    ecx
  425caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cab:	or     BYTE PTR [edx+edx*1],ah
  425cae:	inc    ebx
  425caf:	out    0x5e,al
  425cb1:	inc    ebx
  425cb2:	push   edi
  425cb3:	scas   eax,DWORD PTR es:[edi]
  425cb4:	(bad)  
  425cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb7:	cli    
  425cb8:	ja     0x425c58
  425cba:	adc    al,0xef
  425cbc:	xlat   BYTE PTR ds:[ebx]
  425cbd:	inc    esi
  425cbe:	call   0x60e8:0x70aa8af7
  425cc5:	aam    0x16
  425cc7:	sub    BYTE PTR [edi+0x75],ch
  425cca:	and    DWORD PTR [ebp+esi*8-0x575016b4],ebp
  425cd1:	jmp    0xc480:0xb5f9785c
  425cd8:	pcmpgtw mm5,mm2
  425cdb:	fucomi st,st(6)
  425cdd:	aas    
  425cde:	les    edx,FWORD PTR [ebp+0x26412f25]
  425ce4:	jecxz  0x425c74
  425ce6:	sar    DWORD PTR [esi],1
  425ce8:	popa   
  425ce9:	or     BYTE PTR cs:[ebp+0x1bc95d89],0xd4
  425cf1:	cld    
  425cf2:	mov    ecx,0xe326774d
  425cf7:	ja     0x425cf8
  425cf9:	lods   al,BYTE PTR ds:[esi]
  425cfa:	shl    DWORD PTR [edi+eiz*2-0x2a],0x6e
  425cff:	fistp  WORD PTR [ebx]
  425d01:	pop    ss
  425d02:	test   eax,0x159492
	...
  425d0f:	add    BYTE PTR [eax],al
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock jl 0x425d3b
  425d1f:	lahf   
  425d20:	cmp    ebp,DWORD PTR [edi]
  425d22:	aam    0x1
  425d24:	add    BYTE PTR [ebp-0x19fffffd],ch
  425d2a:	push   ecx
  425d2b:	aaa    
  425d2c:	in     eax,0x5c
  425d2e:	cs xchg esi,eax
  425d30:	fidiv  WORD PTR [ecx-0x508aeae]
  425d36:	int3   
  425d37:	mov    ds,ecx
  425d39:	adc    ch,BYTE PTR [eax+esi*1-0x43]
  425d3d:	dec    eax
  425d3e:	pop    es
  425d3f:	inc    ebx
  425d40:	jb     0x425db2
  425d42:	mov    eax,ds:0xf4e4b947
  425d47:	or     ch,bh
  425d49:	retf   0x70e2
  425d4c:	cmp    eax,0x799ba681
  425d51:	mov    WORD PTR [ebx-0x68],es
  425d54:	ret    0xe728
  425d57:	add    eax,0x66f885e8
  425d5c:	dec    eax
  425d5d:	fisubr DWORD PTR [ecx+0x17]
  425d60:	retf   
  425d61:	(bad)  
  425d62:	enter  0xbf17,0x93
  425d66:	mov    ebp,0x9caaa8da
  425d6b:	stos   DWORD PTR es:[edi],eax
  425d6c:	sub    cl,bh
  425d6e:	dec    ebp
  425d6f:	cmp    al,0x27
  425d71:	scas   eax,DWORD PTR es:[edi]
  425d72:	cld    
  425d73:	mov    dl,0x34
  425d75:	mov    ds,WORD PTR [eax+0x4e8bfd12]
  425d7b:	add    bh,BYTE PTR [eax]
  425d7d:	lea    eax,[edx+0x2fa52ec1]
  425d83:	popf   
  425d84:	and    dh,bh
  425d86:	mov    cl,BYTE PTR [ebp+0x7bcb96d5]
  425d8c:	push   ebx
  425d8d:	sbb    ch,bl
  425d8f:	call   0x8501d5e7
  425d94:	dec    esp
  425d95:	cmc    
  425d96:	popa   
  425d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d98:	in     eax,dx
  425d99:	stc    
  425d9a:	mov    ebx,0xd3282949
  425d9f:	loope  0x425d76
  425da1:	xor    ah,dh
  425da3:	ss in  al,dx
  425da5:	add    esi,DWORD PTR [esi+0x17e6ef72]
  425dab:	xor    al,0x9f
  425dad:	xchg   ebx,eax
  425dae:	add    bh,bh
  425db0:	dec    ebp
  425db1:	shr    DWORD PTR [eax-0x6ed8387c],0xab
  425db8:	pop    ebp
  425db9:	jp     0x425da7
  425dbb:	les    esp,FWORD PTR [ecx]
  425dbd:	cmp    ch,BYTE PTR [edx-0x20acc90b]
  425dc3:	mov    al,0xf1
  425dc5:	addr16 sub al,0x36
  425dc8:	aad    0x4d
  425dca:	pop    es
  425dcb:	arpl   WORD PTR [edx+eax*4],bx
  425dce:	rcr    BYTE PTR [ebp-0x26],cl
  425dd1:	test   DWORD PTR [ebx-0x52],0xc3c460a6
  425dd8:	sub    ch,BYTE PTR [ebx-0x68ad9cad]
  425dde:	jle    0x425d89
  425de0:	push   esi
  425de1:	push   esi
  425de2:	push   edi
  425de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425de4:	dec    edx
  425de5:	cmp    eax,edi
  425de7:	retf   0x6667
  425dea:	shl    DWORD PTR [ecx+0x7a428377],0x48
  425df1:	imul   ebx,esi,0xffffff87
  425df4:	and    bl,bl
  425df6:	sub    ch,BYTE PTR [eax-0x19a7f20]
  425dfc:	adc    ch,bh
  425dfe:	or     al,0xbe
  425e00:	fld    TBYTE PTR [eax+0x312bd72b]
  425e06:	jp     0x425e23
  425e08:	or     ecx,DWORD PTR [edi+0x77952948]
  425e0e:	in     al,dx
  425e0f:	mov    al,ds:0x751573a5
  425e14:	inc    edx
  425e15:	push   ds
  425e16:	and    al,0x90
  425e18:	adc    al,0xbe
  425e1a:	sub    DWORD PTR [esi+0x4cbff19f],ebx
  425e20:	sub    al,0x9a
  425e22:	fidiv  WORD PTR [ecx-0x3f]
  425e25:	dec    eax
  425e26:	jae    0x425e5a
  425e28:	outs   dx,WORD PTR ds:[esi]
  425e2a:	lods   al,BYTE PTR ds:[esi]
  425e2b:	ret    
  425e2c:	cmp    ebx,DWORD PTR [ebx+0x51]
  425e2f:	out    dx,eax
  425e30:	mov    ah,0xe4
  425e32:	rcr    DWORD PTR [edi+0x19],0xef
  425e36:	sub    eax,0xc38aa7c2
  425e3b:	fldcw  WORD PTR [edi+ebx*4]
  425e3e:	test   DWORD PTR [bx],ebp
  425e41:	mul    DWORD PTR [esi+eiz*2-0x7ae608d4]
  425e48:	(bad)  [eax]
  425e4a:	sbb    al,0xd5
  425e4c:	dec    edi
  425e4d:	cmp    ebx,DWORD PTR [edx+edi*8]
  425e50:	aam    0x3a
  425e52:	or     bh,dh
  425e54:	ss mov edx,0xb097ea39
  425e5a:	fimul  WORD PTR [ebx-0x14]
  425e5d:	aad    0x68
  425e5f:	mov    ecx,0xf6b7b054
  425e64:	loopne 0x425e91
  425e66:	out    dx,al
  425e67:	xor    BYTE PTR [edi-0x3ceeea51],ch
  425e6d:	dec    esi
  425e6e:	push   esp
  425e6f:	inc    esp
  425e70:	push   0xee3348e8
  425e75:	(bad)  
  425e76:	and    eax,0xa502d409
  425e7b:	bound  ebp,QWORD PTR [ecx]
  425e7d:	add    eax,0x8c10a29d
  425e82:	shr    BYTE PTR [ecx],cl
  425e84:	xchg   BYTE PTR [eax-0x3e76268c],dl
  425e8a:	xchg   ecx,eax
  425e8b:	jmp    0x425f01
  425e8d:	xchg   ebp,eax
  425e8e:	fwait
  425e8f:	mov    ah,0x7e
  425e91:	das    
  425e92:	cwde   
  425e93:	inc    ecx
  425e94:	mov    fs,WORD PTR [eax]
  425e96:	leave  
  425e97:	xchg   BYTE PTR [edi],ch
  425e99:	mov    ah,0xee
  425e9b:	jmp    0xfe6e:0xa4dd9285
  425ea2:	nop
  425ea3:	fadd   QWORD PTR [ebp-0x2b]
  425ea6:	fmul   DWORD PTR [ebx]
  425ea8:	les    ebp,FWORD PTR [ecx+0x0]
  425eab:	inc    BYTE PTR [edx+0x7c7882fa]
  425eb1:	shr    BYTE PTR [eax],1
  425eb3:	stc    
  425eb4:	lods   al,BYTE PTR ds:[esi]
  425eb5:	sub    cl,al
  425eb7:	rcr    DWORD PTR [ebx],0x4f
  425eba:	out    dx,al
  425ebb:	xchg   esp,eax
  425ebc:	mov    dl,BYTE PTR ds:0x66222666
  425ec2:	pop    ebp
  425ec3:	int    0x1d
  425ec5:	add    eax,0x46eb2cf2
  425eca:	jg     0x425e76
  425ecc:	mov    al,0x2
  425ece:	std    
  425ecf:	mov    BYTE PTR [ecx+ebx*4-0x23c99345],dh
  425ed6:	sbb    al,0xab
  425ed8:	lea    edx,[eax-0x762775d2]
  425ede:	xchg   esp,eax
  425edf:	jecxz  0x425eaf
  425ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ee2:	mov    ecx,0x3795ffa3
  425ee7:	jb     0x425ebc
  425ee9:	push   esp
  425eea:	mov    bh,0x1b
  425eec:	sbb    al,ah
  425eee:	sbb    edi,DWORD PTR [eax+ebx*1+0x59486c90]
  425ef5:	xchg   ebp,eax
  425ef6:	lahf   
  425ef7:	fst    QWORD PTR [ebx]
  425ef9:	xchg   DWORD PTR [ecx+0x19],ebx
  425efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425efd:	add    al,0xfa
  425eff:	in     eax,0x48
  425f01:	retf   0xe13
  425f04:	adc    eax,0xc1d0455d
  425f09:	in     al,dx
  425f0a:	dec    ecx
  425f0c:	cs pop ecx
  425f0e:	(bad)  
  425f0f:	mov    cl,0x4e
  425f11:	and    DWORD PTR [esi-0x5f617efd],0x6f
  425f18:	mov    ebx,0xa7a41891
  425f1d:	jae    0x425ebd
  425f1f:	jl     0x425f1f
  425f21:	pop    edx
  425f22:	pop    esi
  425f23:	lods   al,BYTE PTR ds:[esi]
  425f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f25:	lods   al,BYTE PTR ds:[esi]
  425f26:	test   dl,0x12
  425f29:	push   ecx
  425f2a:	out    dx,al
  425f2b:	cs das 
  425f2d:	test   eax,ecx
  425f2f:	inc    edx
  425f30:	ficomp WORD PTR [ecx]
  425f32:	hlt    
  425f33:	cmp    DWORD PTR [edi+0x60],edi
  425f36:	ins    BYTE PTR es:[edi],dx
  425f37:	stos   DWORD PTR es:[edi],eax
  425f38:	sub    ebp,DWORD PTR [edx+edi*8]
  425f3b:	retf   0x488c
  425f3e:	lahf   
  425f3f:	xlat   BYTE PTR cs:[ebx]
  425f41:	mov    ebx,0x66b9cf73
  425f46:	(bad)  
  425f47:	fndisi(8087 only) 
  425f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f4a:	inc    esp
  425f4b:	outs   dx,DWORD PTR ds:[esi]
  425f4c:	adc    edi,DWORD PTR [ebp-0x2]
  425f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f50:	pop    ebx
  425f51:	fs pop si
  425f54:	andps  xmm4,XMMWORD PTR [eax+0x8141983]
  425f5b:	pop    esp
  425f5c:	jbe    0x425fd6
  425f5e:	jmp    0x950c7c3a
  425f63:	cld    
  425f64:	ret    0xe767
  425f67:	mov    cl,0x64
  425f69:	cwde   
  425f6a:	mov    ah,0x20
  425f6c:	out    dx,eax
  425f6d:	sub    al,BYTE PTR [ebx]
  425f6f:	cmp    DWORD PTR [edi],ebx
  425f71:	in     eax,0x1a
  425f73:	rep outs dx,DWORD PTR ds:[esi]
  425f75:	pop    edx
  425f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f77:	(bad)  
  425f79:	loop   0x425f5d
  425f7b:	in     al,dx
  425f7c:	nop
  425f7d:	push   es
  425f7e:	xchg   ecx,eax
  425f7f:	push   esp
  425f80:	gs test al,0x76
  425f83:	sbb    eax,0xb2bda8d9
  425f88:	add    DWORD PTR [eax],edx
  425f8a:	sub    al,0x3a
  425f8c:	ins    DWORD PTR es:[edi],dx
  425f8d:	mov    ecx,0x902082f9
  425f92:	scas   al,BYTE PTR es:[edi]
  425f93:	dec    ecx
  425f94:	out    0x3,eax
  425f96:	inc    edx
  425f97:	add    BYTE PTR [eax],cl
  425f99:	or     bl,BYTE PTR [ebp+0x2ab1f8eb]
  425f9f:	jbe    0x425f4a
  425fa1:	adc    eax,0x3e71ffaa
  425fa6:	je     0x425f5a
  425fa8:	jb     0x425f75
  425faa:	xor    ecx,DWORD PTR [edi+edx*8+0x4c0516a6]
  425fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fb2:	pop    ebp
  425fb3:	stos   DWORD PTR es:[edi],eax
  425fb4:	shr    DWORD PTR [ebp+0x1645f474],cl
  425fba:	stos   BYTE PTR es:[edi],al
  425fbb:	pusha  
  425fbc:	add    BYTE PTR [ebp+ecx*4-0x12],0xca
  425fc1:	xchg   edi,eax
  425fc2:	jp     0x42600e
  425fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fc5:	pop    ss
  425fc6:	push   eax
  425fc7:	sub    eax,0xb1d95b13
  425fcc:	and    BYTE PTR [ebx],ch
  425fce:	pop    esi
  425fcf:	imul   esi,ecx,0xfce8fb08
  425fd5:	bound  esi,QWORD PTR [ecx+0x57]
  425fd8:	add    eax,0xa37aed5
  425fdd:	xor    eax,0x33cc89c5
  425fe2:	mov    DWORD PTR [eax-0x4091dffb],ebx
  425fe8:	or     al,0x31
  425fea:	das    
  425feb:	or     al,0xe5
  425fed:	xchg   DWORD PTR [ebx+0xe1692bb],ebp
  425ff3:	fstp   QWORD PTR [eax]
  425ff5:	mov    ebx,0x44a640
  425ffa:	popa   
  425ffb:	inc    esp
  425ffc:	or     esi,esi
  425ffe:	out    0xbe,al
  426000:	push   esp
  426001:	dec    ecx
  426002:	ins    BYTE PTR es:[edi],dx
  426003:	adc    DWORD PTR [ecx+0x50],ebx
  426006:	pop    DWORD PTR [edi-0x51]
  426009:	dec    eax
  42600a:	pop    ebx
  42600b:	cmp    edi,ebp
  42600d:	inc    eax
  42600e:	jae    0x42608c
  426010:	xor    dh,BYTE PTR [eax-0x63042f33]
  426016:	xor    BYTE PTR [esi+0x34],bl
  426019:	mov    DWORD PTR [edx+0x4bcd9dfe],edi
  42601f:	jge    0x425fc2
  426021:	loope  0x426007
  426023:	xchg   DWORD PTR [ecx-0x4],ebx
  426026:	scas   eax,DWORD PTR es:[edi]
  426027:	data16 jge 0x426020
  42602a:	fistp  QWORD PTR [edx]
  42602c:	retf   0x9c7a
  42602f:	inc    ecx
  426030:	add    eax,0xdcf2e3af
  426035:	int3   
  426036:	dec    ebp
  426037:	dec    ebx
  426038:	loopne 0x42603f
  42603a:	cmc    
  42603b:	xor    ch,BYTE PTR [edi+0x13]
  42603e:	pop    ss
  42603f:	pop    DWORD PTR [eax+eiz*8+0x4f58ed74]
  426046:	cli    
  426047:	jns    0x4260a6
  426049:	fs ret 
  42604b:	push   ecx
  42604c:	dec    esi
  42604d:	adc    al,0xfc
  42604f:	mov    eax,ds:0x727b63ce
  426054:	js     0x42607f
  426056:	in     eax,0xff
  426058:	cmp    ebp,edx
  42605a:	push   esp
  42605b:	cwde   
  42605c:	mov    ds:0x8346f80e,eax
  426061:	addr16 lock dec esi
  426064:	sar    DWORD PTR [edi],0x1c
  426067:	adc    al,0xb7
  426069:	adc    al,0x3a
  42606b:	inc    edx
  42606c:	pusha  
  42606d:	jecxz  0x426023
  42606f:	jb     0x4260b5
  426071:	sub    al,0x57
  426073:	fdiv   DWORD PTR [esi-0x75]
  426076:	mov    ds:0x504a841a,al
  42607b:	scas   al,BYTE PTR es:[edi]
  42607c:	pop    ss
  42607d:	push   eax
  42607e:	pop    eax
  42607f:	ret    
  426080:	mov    edx,0x3721e2e9
  426085:	and    BYTE PTR [ebx+0x63896ad8],al
  42608b:	jle    0x4260f6
  42608d:	es pop ss
  42608f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426090:	fisttp QWORD PTR [eax-0x47]
  426093:	inc    esi
  426094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426095:	scas   al,BYTE PTR es:[edi]
  426096:	dec    esi
  426097:	jmp    0x426019
  426099:	and    DWORD PTR [edi],ebx
  42609b:	enter  0x6952,0x21
  42609f:	dec    ebx
  4260a0:	and    eax,DWORD PTR [ebp-0x4445cff5]
  4260a6:	pop    esp
  4260a7:	(bad)  
  4260a8:	push   ebp
  4260a9:	imul   edi,DWORD PTR [ecx-0x44a146aa],0x299a09ea
  4260b3:	inc    edx
  4260b4:	adc    ah,BYTE PTR [ebx+0x6e48f4d3]
  4260ba:	push   0xffffff93
  4260bc:	cwde   
  4260bd:	fst    DWORD PTR [esi+edx*2]
  4260c0:	ret    
  4260c1:	xor    eax,0xd3b9f995
  4260c6:	jp     0x426120
  4260c8:	xor    ecx,DWORD PTR [ecx+0x73039746]
  4260ce:	rcr    DWORD PTR [edx],1
  4260d0:	mov    bl,ah
  4260d2:	out    0x16,eax
  4260d4:	jle    0x426093
	...
  4260de:	add    BYTE PTR [eax],al
  4260e0:	add    BYTE PTR [edx],bl
  4260e2:	call   0x3e3d72
  4260e7:	pop    edi
  4260e8:	out    dx,al
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    eax,DWORD PTR [eax+0x40]
  4260ef:	call   0xad00:0x1d7dc98
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [eax+0xd42cc07],bl
  4260fe:	jae    0x426095
  426100:	daa    
  426101:	sub    BYTE PTR [ebx+0x4],dl
  426104:	test   eax,0xcb8f7d14
  426109:	or     al,0x15
  42610b:	inc    edi
  42610c:	add    BYTE PTR [ebp+edx*2+0x40],dl
  426110:	cmp    al,BYTE PTR [edx+edi*1-0x5a]
  426114:	and    DWORD PTR [ecx+0x23],0xfffffffc
  426118:	dec    eax
  426119:	or     BYTE PTR [ecx],dh
  42611b:	mov    ds:0x17846f07,eax
  426120:	jnp    0x42619d
  426122:	pop    ds
  426123:	fistp  DWORD PTR [ebp-0x1e]
  426126:	inc    esp
  426127:	test   ch,0xa9
  42612a:	(bad)  
  42612b:	mov    al,0xdc
  42612d:	popa   
  42612e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42612f:	outs   dx,DWORD PTR ds:[esi]
  426130:	sbb    DWORD PTR [ecx+0x15],eax
  426133:	pop    es
  426134:	cmp    al,0x8e
  426136:	jp     0x4260e5
  426138:	out    dx,eax
  426139:	mov    ch,0x9
  42613b:	pop    ebx
  42613c:	call   0xd7739f2f
  426141:	push   edx
  426142:	cdq    
  426143:	pop    edx
  426144:	push   esi
  426145:	out    dx,eax
  426146:	retf   
  426147:	hlt    
  426148:	icebp  
  426149:	xlat   BYTE PTR ds:[ebx]
  42614a:	loop   0x426150
  42614c:	sar    BYTE PTR [ebp+esi*1-0x62140a2],1
  426153:	outs   dx,DWORD PTR ds:[esi]
  426154:	mul    edi
  426156:	leave  
  426157:	loop   0x42619c
  426159:	ins    BYTE PTR es:[edi],dx
  42615a:	and    bl,dh
  42615c:	xlat   BYTE PTR ds:[ebx]
  42615d:	xchg   edi,eax
  42615e:	aad    0x3d
  426160:	mov    ch,0x1e
  426162:	fisubr DWORD PTR [edi+0xffe327c]
  426168:	(bad)  
  426169:	or     eax,0xc1cdd14a
  42616e:	enter  0x167b,0x2b
  426172:	or     eax,0x8bdda9be
  426177:	sub    edi,DWORD PTR [ecx-0x4d939b4d]
  42617d:	add    al,0x2e
  42617f:	xchg   ecx,eax
  426180:	pop    ss
  426181:	aad    0xe9
  426183:	arpl   WORD PTR [ecx+0x74d2d5e8],ax
  426189:	pop    ebp
  42618a:	or     cl,cl
  42618c:	rcr    BYTE PTR [ebx],1
  42618e:	out    dx,eax
  42618f:	mov    BYTE PTR [edx-0x4d8357f4],0x8
  426196:	icebp  
  426197:	rol    BYTE PTR [ecx],0x8f
  42619a:	out    dx,eax
  42619b:	lea    edx,[edx]
  42619d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42619e:	adc    al,0xa0
  4261a0:	dec    ebx
  4261a1:	xchg   ebp,eax
  4261a2:	aas    
  4261a3:	dec    edi
  4261a4:	enter  0xba08,0xbe
  4261a8:	loope  0x42613b
  4261aa:	repz xor al,BYTE PTR es:[esi]
  4261ae:	xchg   edi,esi
  4261b0:	pop    es
  4261b1:	dec    ebx
  4261b2:	loopne 0x4261ce
  4261b4:	std    
  4261b5:	out    0x49,eax
  4261b7:	adc    esp,DWORD PTR [ecx-0x70daaec]
  4261bd:	dec    esi
  4261be:	in     al,0xbc
  4261c0:	shl    BYTE PTR [eax+0x677c005a],0x4c
  4261c7:	and    al,0xb2
  4261c9:	dec    edi
  4261ca:	mov    ebp,0xa6604660
  4261cf:	inc    esp
  4261d0:	xor    DWORD PTR [esp+ebp*1+0x7c],0xfffffffb
  4261d5:	gs sub al,0x28
  4261d8:	in     eax,dx
  4261d9:	jne    0x426250
  4261db:	fs jns 0x4261a0
  4261de:	test   eax,0xb1e248c
  4261e3:	pop    bx
  4261e5:	das    
  4261e6:	xchg   ebx,eax
  4261e7:	enter  0x529f,0x70
  4261eb:	jb     0x4261c2
  4261ed:	mov    edi,0xada3d9a0
  4261f2:	imul   DWORD PTR [ebx+0x5fb7c97c]
  4261f8:	sbb    BYTE PTR [edi+0x5b],0xe7
  4261fc:	mov    ch,0xeb
  4261fe:	je     0x426242
  426200:	dec    esi
  426201:	lds    esp,FWORD PTR [edx+0x5931ccca]
  426207:	dec    edx
  426208:	(bad)  
  426209:	push   ds
  42620a:	rol    DWORD PTR [ebp+0x5bf699db],0xe2
  426211:	mov    esp,0xc0013c91
  426216:	(bad)  
  426217:	stc    
  426218:	lds    esi,FWORD PTR [edx]
  42621a:	mov    ch,0xe7
  42621c:	cli    
  42621d:	rcr    DWORD PTR [eax+eiz*8],cl
  426220:	mov    bl,al
  426222:	xchg   esp,eax
  426223:	pusha  
  426224:	mov    fs,WORD PTR [ebx]
  426226:	or     bl,BYTE PTR [edx+0x7561c0c3]
  42622c:	sbb    BYTE PTR [ebp+0x1],ch
  42622f:	sar    DWORD PTR [edx],cl
  426231:	std    
  426232:	jno    0x426290
  426234:	stc    
  426235:	pop    esp
  426236:	inc    ebx
  426237:	ret    0x9956
  42623a:	push   esi
  42623b:	call   0x6405b331
  426240:	icebp  
  426241:	jmp    0x616:0xd080bba7
  426248:	popa   
  426249:	jge    0x426253
  42624b:	jae    0x426263
  42624d:	cmp    cl,BYTE PTR [esi]
  42624f:	lahf   
  426250:	(bad)  
  426251:	in     eax,dx
  426252:	test   eax,0x8aa0e399
  426257:	jp     0x426284
  426259:	dec    edx
  42625a:	ss sub al,0x58
  42625d:	xchg   ebx,eax
  42625e:	or     DWORD PTR [ebx],ebp
  426260:	dec    ebp
  426261:	jmp    0x894d:0x35995815
  426268:	dec    esp
  426269:	loopne 0x4262d9
  42626b:	pop    eax
  42626c:	addr16 jb 0x4262ce
  42626f:	call   0x6d1e1cf4
  426274:	sbb    edi,DWORD PTR [esi]
  426276:	lds    eax,FWORD PTR [ecx]
  426278:	fcomi  st,st(1)
  42627a:	mov    ecx,0x56a895ad
  42627f:	push   ebx
  426280:	push   ecx
  426281:	sbb    ebp,DWORD PTR [eax]
  426283:	neg    DWORD PTR [edi+0x6d]
  426286:	adc    al,0x96
  426288:	rol    DWORD PTR [eax-0x46578400],1
  42628e:	cli    
  42628f:	push   eax
  426290:	je     0x42627e
  426292:	sub    DWORD PTR [esp+edx*1+0x53],0x69ad6974
  42629a:	loopne 0x42628e
  42629c:	pop    esp
  42629d:	push   ds
  42629e:	sahf   
  42629f:	adc    edx,DWORD PTR [edi-0x49]
  4262a2:	pop    ds
  4262a3:	loop   0x4262ed
  4262a5:	push   esp
  4262a6:	sub    BYTE PTR [eax],al
  4262a8:	push   0x9dbe9c76
  4262ad:	frndint 
  4262af:	and    DWORD PTR [ebx],esi
  4262b1:	or     ch,BYTE PTR [ebp-0x73817f84]
  4262b7:	aam    0x6d
  4262b9:	xor    esp,ebx
  4262bb:	mov    esp,0x1acf9c2c
  4262c0:	jne    0x426333
  4262c2:	adc    cl,BYTE PTR [esi+0x17e8ee3e]
  4262c8:	enter  0xdadc,0x7f
  4262cc:	(bad)  
  4262cd:	sar    DWORD PTR [eax+0xf2a82bc],1
  4262d3:	scas   al,BYTE PTR es:[edi]
  4262d4:	cld    
  4262d5:	cmp    BYTE PTR [edi+0x68],bh
  4262d8:	push   edx
  4262d9:	loopne 0x4262ae
  4262db:	mov    bl,0x5e
  4262dd:	fisttp WORD PTR [edx]
  4262df:	pusha  
  4262e0:	data16 jp 0x4262c6
  4262e3:	ins    DWORD PTR es:[edi],dx
  4262e4:	push   0xffffff8f
  4262e6:	cld    
  4262e7:	cmp    BYTE PTR [edx+0x555e5c],bl
  4262ed:	xlat   BYTE PTR ds:[ebx]
  4262ee:	add    BYTE PTR [eax+ecx*2],bh
  4262f1:	call   0x2829:0x55d811c4
  4262f8:	add    al,ch
  4262fa:	mov    edx,0xae3e32df
  4262ff:	mov    ch,0x35
  426301:	sbb    al,0x2f
  426303:	ins    BYTE PTR es:[edi],dx
  426304:	mov    eax,ds:0x55f8c7c3
  426309:	outs   dx,BYTE PTR ds:[si]
  42630b:	hlt    
  42630c:	push   ds
  42630d:	cli    
  42630e:	xor    ch,BYTE PTR ds:0x8da27fa1
  426314:	stos   BYTE PTR es:[edi],al
  426315:	push   0x33
  426317:	jp     0x426326
  426319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42631a:	out    dx,eax
  42631b:	(bad)  
  42631c:	push   ss
  42631d:	cmp    DWORD PTR [eax-0x53],eax
  426320:	or     ch,BYTE PTR [eax-0x346d94e0]
  426326:	sub    bh,BYTE PTR ds:0xb93649bb
  42632c:	ins    DWORD PTR es:[edi],dx
  42632d:	aam    0xa8
  42632f:	pop    esi
  426330:	in     eax,0x1d
  426332:	push   0x472ed823
  426337:	push   eax
  426338:	dec    edx
  426339:	test   al,0x40
  42633b:	xchg   esp,eax
  42633c:	jge    0x42639d
  42633e:	or     dl,BYTE PTR [ecx]
  426340:	inc    eax
  426341:	sbb    BYTE PTR [ecx+edi*1+0x6c],al
  426345:	inc    ecx
  426346:	ja     0x426356
  426348:	retf   
  426349:	retf   
  42634a:	mov    ebp,0x6608e372
  42634f:	xchg   ecx,eax
  426350:	loope  0x426304
  426352:	jno    0x42636e
  426354:	push   0x65
  426356:	ret    0x80ce
  426359:	pop    ds
  42635a:	jmp    0xabfdf58b
  42635f:	scas   eax,DWORD PTR es:[edi]
  426360:	shld   DWORD PTR [eax+ebx*8-0x788e8d6b],edx,cl
  426368:	xchg   ecx,eax
  426369:	data16 mov ah,0xe8
  42636c:	sbb    al,0x14
  42636e:	aam    0x73
  426370:	imul   eax,edi,0x63
  426373:	mov    ebp,0xd455e173
  426378:	mov    ecx,edi
  42637a:	jmp    0x42633f
  42637c:	bts    DWORD PTR [eax],esi
  42637f:	jl     0x426342
  426381:	and    ebx,edx
  426383:	dec    eax
  426384:	adc    eax,0xf1696b84
  426389:	xchg   esi,eax
  42638a:	sub    edx,esp
  42638c:	add    al,0x19
  42638e:	out    0x8b,al
  426390:	leave  
  426391:	sub    eax,0x8b880c86
  426396:	scas   eax,DWORD PTR es:[edi]
  426397:	mov    edx,0x418c0073
  42639c:	adc    dh,al
  42639e:	popa   
  42639f:	js     0x4263fd
  4263a1:	xchg   dl,ch
  4263a3:	xor    eax,0x8cdfeab2
  4263a8:	cs push ds
  4263aa:	xchg   edi,eax
  4263ab:	jo     0x426364
  4263ad:	test   BYTE PTR [edi+eax*8+0x66],0xc4
  4263b2:	jmp    0xbe56f5be
  4263b7:	outs   dx,DWORD PTR ds:[esi]
  4263b8:	iret   
  4263b9:	idiv   bh
  4263bb:	jmp    0x26f2:0xe086ad9a
  4263c2:	cmp    al,0x74
  4263c4:	jne    0x426412
  4263c6:	pop    ebp
  4263c7:	int    0xa9
  4263c9:	mov    BYTE PTR [ebp+0xd],dh
  4263cc:	mov    eax,ds:0x3b2d4cb8
  4263d1:	popf   
  4263d2:	add    BYTE PTR [edx],bh
  4263d4:	repz call 0x1fe6:0xbf8428f2
  4263dc:	out    0x88,al
  4263de:	inc    esp
  4263df:	ret    
  4263e0:	xor    dl,BYTE PTR [ecx-0x17]
  4263e3:	aas    
  4263e4:	dec    esp
  4263e5:	aam    0x37
  4263e7:	sub    dl,al
  4263e9:	sti    
  4263ea:	ds jbe 0x4263c9
  4263ed:	out    dx,al
  4263ee:	pop    es
  4263ef:	sahf   
  4263f0:	or     al,0x15
  4263f2:	(bad)  
  4263f4:	mov    cl,ch
  4263f6:	sub    eax,0xa41c1103
  4263fb:	mov    cl,0x24
  4263fd:	out    dx,al
  4263fe:	and    DWORD PTR [edi-0x2],0x6e
  426402:	pop    eax
  426403:	(bad)  
  426404:	arpl   WORD PTR [ebp-0x2fc25dfc],bx
  42640a:	mov    esi,0x4b9b1698
  42640f:	fucomi st,st(5)
  426411:	pop    edx
  426412:	mov    ecx,0x9b576c18
  426417:	(bad)  
  426418:	int3   
  426419:	shl    BYTE PTR ds:0x7600ce6b,1
  42641f:	push   0x52e01d23
  426424:	in     eax,0x86
  426426:	xor    DWORD PTR [ebx-0x3],esi
  426429:	cmp    ah,BYTE PTR [eax+0x7b717a60]
  42642f:	push   es
  426430:	in     al,dx
  426431:	call   0x6f948bdb
  426436:	push   ds
  426437:	xchg   ecx,eax
  426438:	sbb    bh,BYTE PTR [edi-0x6361c317]
  42643e:	retf   0xf59a
  426441:	jmp    0x9146:0xc6c02fa1
  426448:	jns    0x4264c4
  42644a:	sbb    al,0x7
  42644c:	mov    esp,0xc0041a6f
  426451:	cmc    
  426452:	dec    ecx
  426453:	stos   BYTE PTR es:[edi],al
  426454:	mul    BYTE PTR [edi-0x39]
  426457:	jle    0x426477
  426459:	mov    edx,0x4d35f505
  42645e:	adc    al,0x8a
  426460:	test   DWORD PTR [ecx-0x75],edx
  426463:	sbb    al,0x98
  426465:	js     0x4264e1
  426467:	xchg   edi,eax
  426468:	rcr    DWORD PTR [edi+0xb7da48c],cl
  42646e:	retf   
  42646f:	fisubr WORD PTR [eax+0x65]
  426472:	aas    
  426473:	cwde   
  426474:	aam    0x19
  426476:	and    BYTE PTR [esi],0xb4
  426479:	add    dh,ah
  42647b:	pusha  
  42647c:	mov    ch,0xe0
  42647e:	inc    esi
  42647f:	jns    0x426426
  426481:	add    edx,ebx
  426483:	push   cs
  426484:	pop    esi
  426485:	xor    ah,BYTE PTR [ebx+0x674d0964]
  42648b:	inc    ecx
  42648c:	and    DWORD PTR ds:0x7067d551,ecx
  426492:	ret    
  426493:	shl    DWORD PTR [ecx+0x29],1
  426496:	mov    ebp,0xd07a800e
  42649b:	mov    dl,BYTE PTR [ecx-0x7f]
  42649e:	push   eax
  42649f:	jne    0x42643b
  4264a1:	cmp    ebp,DWORD PTR [ebx]
  4264a3:	dec    ecx
  4264a4:	cmc    
  4264a5:	adc    BYTE PTR [eax],al
	...
  4264af:	add    BYTE PTR [eax],al
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     edi,DWORD PTR [eax]
  4264be:	push   edi
  4264bf:	sbb    ebx,DWORD PTR [eax+0x1db89]
  4264c5:	lods   eax,DWORD PTR ds:[esi]
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR [ecx-0x560327d2],dh
  4264ce:	lock test eax,0x6720cebe
  4264d4:	xor    ch,bl
  4264d6:	pop    esp
  4264d7:	call   0x2a79edc4
  4264dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264dd:	loop   0x426512
  4264df:	rcl    DWORD PTR [esi],0x44
  4264e2:	out    0x41,al
  4264e4:	sbb    DWORD PTR [edx-0x71cd0bcb],ecx
  4264ea:	test   BYTE PTR [edx+0x63947ae9],0x90
  4264f1:	push   edx
  4264f2:	xchg   esi,eax
  4264f3:	xchg   ebp,eax
  4264f4:	push   eax
  4264f5:	pop    ss
  4264f6:	pop    edi
  4264f7:	loop   0x42648d
  4264f9:	mov    bh,0xdd
  4264fb:	cli    
  4264fc:	fdivr  DWORD PTR [edi+ebp*1+0x6a]
  426500:	pushf  
  426501:	cmp    BYTE PTR [esi-0xc],ch
  426504:	aad    0xfb
  426506:	pop    es
  426507:	mul    BYTE PTR [esi]
  426509:	cld    
  42650a:	fsub   st,st(4)
  42650c:	bound  ecx,QWORD PTR [ecx+eax*4+0x227506b2]
  426513:	retf   
  426514:	iret   
  426515:	push   ebx
  426516:	and    BYTE PTR [ebx+0x176e32a6],ah
  42651c:	std    
  42651d:	int    0x18
  42651f:	std    
  426520:	rep outs dx,BYTE PTR ds:[esi]
  426522:	std    
  426523:	nop
  426524:	jmp    0x426514
  426526:	push   ebx
  426527:	adc    ebx,DWORD PTR [esi-0x5e]
  42652a:	enter  0x1bf7,0xf5
  42652e:	or     DWORD PTR [ebx-0x29],ecx
  426531:	add    DWORD PTR [ebp-0x55],edx
  426534:	fisttp QWORD PTR [ecx-0x489b49a]
  42653a:	ja     0x426571
  42653c:	sub    ebp,edi
  42653e:	out    0xab,eax
  426540:	adc    dl,dl
  426542:	test   al,0x19
  426544:	or     al,dh
  426546:	push   0x2
  426548:	test   edi,esp
  42654a:	fisttp QWORD PTR [edx+0x56d3e9]
  426550:	mov    ds:0xdd607ca3,ax
  426556:	sar    BYTE PTR [esp+ebx*4+0xbce746a],cl
  42655d:	ficom  WORD PTR [ebx-0xd]
  426560:	xor    al,bl
  426562:	jle    0x4264f8
  426564:	xor    al,0x8c
  426566:	ret    0x1121
  426569:	fistp  DWORD PTR [esi]
  42656b:	icebp  
  42656c:	and    DWORD PTR ds:0x384bff71,0x36710edb
  426576:	retf   0x3752
  426579:	xchg   ebx,eax
  42657a:	call   0x70ad:0x74e2bcc5
  426581:	xor    al,0x65
  426583:	pop    es
  426584:	int    0xc8
  426586:	test   eax,0x3625bf09
  42658b:	rcr    edi,0x6e
  42658e:	addr16 js 0x426517
  426591:	pop    ds
  426592:	or     BYTE PTR [edx],ah
  426594:	or     al,0x76
  426596:	stos   DWORD PTR es:[edi],eax
  426597:	pop    esi
  426598:	clc    
  426599:	cmp    al,0x91
  42659b:	adc    DWORD PTR [ebp+0x74],edx
  42659e:	in     al,0x37
  4265a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265a1:	xchg   ecx,eax
  4265a2:	xchg   BYTE PTR [esp+esi*4+0x5e],bl
  4265a6:	and    eax,0x9a200257
  4265ab:	rcl    cl,cl
  4265ad:	es or  esi,0x1effd34
  4265b4:	xchg   esi,eax
  4265b5:	out    0x7d,al
  4265b7:	or     esi,DWORD PTR [ecx-0x189729e8]
  4265bd:	loopne 0x426558
  4265bf:	xchg   ebp,eax
  4265c0:	cmp    DWORD PTR [edi+0x71],esp
  4265c3:	jecxz  0x426631
  4265c5:	xlat   BYTE PTR ds:[ebx]
  4265c6:	outs   dx,BYTE PTR ds:[esi]
  4265c7:	xchg   esi,eax
  4265c8:	push   ebp
  4265c9:	fs ja  0x4265b6
  4265cc:	sub    edi,edi
  4265ce:	or     bh,cl
  4265d0:	jp     0x42664a
  4265d2:	rcl    BYTE PTR [ecx-0x7e3f041b],0x1
  4265d9:	jmp    0x42656b
  4265db:	test   eax,0x69dce0eb
  4265e0:	mov    DWORD PTR [ebp+0x2fb2a74],ebx
  4265e6:	xchg   ebp,eax
  4265e7:	dec    ebx
  4265e8:	daa    
  4265e9:	mov    esp,0x4f9faf18
  4265ee:	test   ah,bl
  4265f0:	jmp    0x63c23625
  4265f5:	pop    ds
  4265f6:	popa   
  4265f7:	icebp  
  4265f8:	daa    
  4265f9:	sub    eax,0x1817cf5f
  4265fe:	(bad)  
  426600:	aam    0xce
  426602:	pop    ss
  426603:	hlt    
  426604:	div    DWORD PTR [edi]
  426606:	push   edi
  426607:	cld    
  426608:	test   al,0x6a
  42660a:	retf   
  42660b:	inc    esp
  42660c:	xchg   DWORD PTR [edx-0x20c288e],eax
  426612:	fisubr WORD PTR [ebp+0xb]
  426615:	sub    bl,BYTE PTR [eax+0x48]
  426618:	fdiv   DWORD PTR [bx+di+0x5f]
  42661c:	push   cs
  42661d:	lock rcl DWORD PTR [ebx+0x52],1
  426621:	pop    ebx
  426622:	lahf   
  426623:	aas    
  426624:	dec    edx
  426625:	and    eax,0x12bbed4f
  42662a:	push   edi
  42662b:	xchg   ebp,eax
  42662c:	pusha  
  42662d:	jnp    0x4265e3
  42662f:	sub    edx,DWORD PTR [ebp+0x17ed5f48]
  426635:	dec    esp
  426636:	pop    ds
  426637:	(bad)  
  426638:	into   
  426639:	cld    
  42663a:	fdivr  DWORD PTR [esi]
  42663c:	xchg   esi,eax
  42663d:	or     bl,bl
  42663f:	test   eax,0x6bcfbfbc
  426644:	mov    edx,0x8ecfdd68
  426649:	rcl    DWORD PTR [eax-0x15],1
  42664c:	jno    0x42667c
  42664e:	jnp    0x426604
  426650:	xor    eax,0x7999aad1
  426655:	pop    ecx
  426656:	xor    esp,ebp
  426658:	repz dec ebx
  42665a:	imul   ecx,DWORD PTR [ebp+0x50045a88],0x1a
  426661:	lds    eax,FWORD PTR [edi]
  426663:	sub    BYTE PTR [edx+edi*8+0x4b11ef3c],0xdc
  42666b:	inc    ebx
  42666c:	loope  0x426619
  42666e:	xchg   ebp,eax
  42666f:	in     ax,0xd6
  426672:	sbb    BYTE PTR [edx-0x4ef4674d],ah
  426678:	xchg   ebx,eax
  426679:	data16 xor BYTE PTR [ebp+ecx*1+0x19],0x71
  42667f:	xor    eax,0x3d4004ef
  426684:	push   0xffffff81
  426686:	test   al,0x8a
  426688:	cli    
  426689:	jnp    0x42665e
  42668b:	or     BYTE PTR [esi+0x6c],al
  42668e:	bound  esi,QWORD PTR [edx-0x16]
  426691:	aas    
  426692:	dec    esp
  426693:	(bad)  [ecx]
  426695:	mov    esi,0x36fe40
  42669a:	lea    edi,[edx+esi*4-0x45]
  42669e:	rol    bl,cl
  4266a0:	sbb    eax,0x8d0b8d93
  4266a5:	xor    BYTE PTR [ebx+0x33],cl
  4266a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a9:	out    dx,al
  4266aa:	shl    BYTE PTR [esi-0x7344ad1],1
  4266b0:	sbb    al,0xfe
  4266b2:	fwait
  4266b3:	and    DWORD PTR [ebx-0x3e9a8d03],0xffffffa6
  4266ba:	cwde   
  4266bb:	mov    eax,ds:0x88ecdb69
  4266c0:	sbb    bh,al
  4266c2:	daa    
  4266c3:	jp     0x426682
  4266c5:	xlat   BYTE PTR ds:[ebx]
  4266c6:	stos   DWORD PTR es:[edi],eax
  4266c7:	cli    
  4266c8:	in     al,0x86
  4266ca:	mov    ds:0x3b0948a2,al
  4266cf:	add    ch,al
  4266d1:	loope  0x4266e3
  4266d3:	dec    eax
  4266d4:	stc    
  4266d5:	cmp    bh,BYTE PTR [ebp+0x15db8db8]
  4266db:	sbb    dl,al
  4266dd:	popa   
  4266de:	cs (bad) 
  4266e0:	fadd   st(1),st
  4266e2:	jo     0x42667a
  4266e4:	fsubp  st(4),st
  4266e6:	(bad)  
  4266e7:	sub    BYTE PTR [esi-0x7c],bh
  4266ea:	push   ecx
  4266eb:	outs   dx,DWORD PTR ds:[esi]
  4266ec:	test   al,0xc1
  4266ee:	rcr    DWORD PTR [edi-0x19],0x8f
  4266f2:	mov    esp,0x4ee2e234
  4266f7:	in     eax,dx
  4266f8:	dec    esp
  4266f9:	or     BYTE PTR [edx+0x50],al
  4266fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266fd:	(bad)  
  4266fe:	jns    0x4266f0
  426700:	lods   eax,DWORD PTR ds:[esi]
  426701:	jle    0x4266ff
  426703:	sbb    al,0x58
  426705:	cdq    
  426706:	cmp    DWORD PTR [ebx+0x1381ed48],eax
  42670c:	mov    al,ds:0x99ba1cf4
  426711:	(bad)  
  426712:	pop    es
  426713:	or     cl,bl
  426715:	scas   eax,DWORD PTR es:[edi]
  426716:	adc    DWORD PTR ds:0x73b30750,esp
  42671c:	and    BYTE PTR [esi-0x7d6bcc1d],ch
  426722:	add    al,BYTE PTR [edi+0x2e]
  426725:	in     al,0xe7
  426727:	mov    esp,0x91cb314c
  42672c:	das    
  42672d:	pop    ecx
  42672e:	xchg   esp,eax
  42672f:	add    esi,DWORD PTR ds:0x351af6ad
  426735:	int3   
  426736:	nop
  426737:	stc    
  426738:	adc    al,0x58
  42673a:	cmp    al,cl
  42673c:	pop    ecx
  42673d:	jmp    0x184e:0x81a0232d
  426744:	sbb    DWORD PTR [edx],0x32e8a636
  42674a:	xor    eax,0x3b341a44
  42674f:	push   edx
  426750:	mov    ebp,0x2a383f57
  426755:	dec    esp
  426756:	dec    ebp
  426757:	(bad)
  42675b:	dec    edx
  42675c:	neg    esi
  42675e:	ja     0x426739
  426760:	pop    ecx
  426761:	mov    ds:0x33ae8c13,eax
  426766:	(bad)  [edx+ebx*8-0x6f]
  42676a:	xchg   esi,eax
  42676b:	imul   esp,ebp,0xac8dfd12
  426771:	mov    ah,0x23
  426773:	(bad)  
  426774:	mov    ebp,DWORD PTR [eax+0xd]
  426777:	jns    0x42678f
  426779:	adc    al,0x8e
  42677b:	jne    0x426756
  42677d:	data16 jg 0x4267f3
  426780:	inc    eax
  426781:	aad    0xc5
  426783:	push   ds
  426784:	lods   al,BYTE PTR ds:[esi]
  426785:	pop    ss
  426786:	pop    esi
  426787:	push   ebp
  426788:	(bad)  
  426789:	sub    eax,0x2b0a0d0a
  42678e:	adc    al,0x5c
  426790:	sub    esi,DWORD PTR [eax]
  426792:	jns    0x426777
  426794:	add    edx,ebx
  426796:	arpl   WORD PTR [ebp+0x70a088bd],cx
  42679c:	rcl    BYTE PTR [eax],1
  42679e:	rcr    BYTE PTR [ebx+0x0],cl
  4267a1:	pop    esi
  4267a2:	jl     0x426773
  4267a4:	(bad)  
  4267a5:	jp     0x426782
  4267a7:	daa    
  4267a8:	push   ds
  4267a9:	xchg   esi,ecx
  4267ab:	mov    al,ds:0x5d42073e
  4267b0:	sbb    eax,0xc7f7816f
  4267b5:	mov    eax,0x64b9133
  4267ba:	sahf   
  4267bb:	loop   0x426768
  4267bd:	lahf   
  4267be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267bf:	jae    0x4267b7
  4267c1:	push   eax
  4267c2:	cmp    BYTE PTR [edi+0x5e],dl
  4267c5:	gs cmc 
  4267c7:	pop    ecx
  4267c8:	es aam 0x8e
  4267cb:	xor    eax,0xeac8ae5e
  4267d0:	sbb    BYTE PTR fs:[edi],bl
  4267d3:	hlt    
  4267d4:	push   eax
  4267d5:	popa   
  4267d6:	adc    ah,BYTE PTR [ebp+0x1d]
  4267d9:	sbb    ch,bl
  4267db:	clc    
  4267dc:	push   edi
  4267dd:	jo     0x426837
  4267df:	add    eax,0x3faddffc
  4267e4:	xchg   edx,eax
  4267e5:	pop    esp
  4267e6:	ficomp DWORD PTR [edx]
  4267e8:	mov    bh,0xe7
  4267ea:	call   0xb127:0x61dcfb99
  4267f1:	sbb    BYTE PTR [ebp-0x27],ah
  4267f4:	xor    ch,BYTE PTR [edi]
  4267f6:	popf   
  4267f7:	add    eax,0xcd30d49b
  4267fc:	mov    ds:0x8bd6bf60,eax
  426801:	mov    esp,cs
  426803:	mov    ah,0x70
  426805:	inc    esi
  426806:	leave  
  426807:	adc    bh,0xcf
  42680a:	jl     0x4267e3
  42680c:	push   ss
  42680d:	jle    0x4267a0
  42680f:	or     al,0x23
  426811:	inc    ebp
  426812:	test   DWORD PTR ss:[ebx+0x8],ecx
  426816:	adc    al,0x27
  426818:	sub    al,0xfa
  42681a:	cli    
  42681b:	js     0x42682a
  42681d:	ins    BYTE PTR es:[edi],dx
  42681e:	sub    eax,0x597036b
  426823:	sbb    edi,esp
  426825:	xor    eax,DWORD PTR [edi]
  426827:	into   
  426828:	and    BYTE PTR [ebx-0x6252696c],al
  42682e:	or     bh,BYTE PTR [ecx-0x75ac1b6a]
  426834:	mov    ?,WORD PTR [esp+edx*4+0x79173c5]
  42683b:	jno    0x42688d
  42683d:	adc    al,0x8d
  42683f:	push   cs
  426840:	jmp    0xaa22:0x5203bdeb
  426847:	adc    al,0xf2
  426849:	and    esi,esi
  42684b:	clc    
  42684c:	imul   BYTE PTR [edi+ebx*1]
  42684f:	int    0xb
  426851:	sar    DWORD PTR [edi],0xdb
  426854:	ja     0x4267e4
  426856:	sbb    esp,eax
  426858:	jmp    0x965bb480
  42685d:	mov    ebp,0x8a39431f
  426862:	mov    BYTE PTR [ebx],al
  426864:	mov    ds:0x8f039343,al
  426869:	add    al,BYTE PTR [ebx]
  42686b:	fwait
  42686c:	push   ecx
  42686d:	shr    DWORD PTR [ebp-0x1fee1b79],0x2f
  426874:	(bad)  
  426875:	push   cs
	...
  42687e:	add    BYTE PTR [eax],al
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	jge    0x42686e
  42688f:	and    edx,0x36
  426892:	fild   WORD PTR [ecx]
  426894:	add    BYTE PTR [ebp-0x39fffffd],ch
  42689a:	inc    BYTE PTR [ebx+0x12a0cc80]
  4268a0:	pop    ebx
  4268a1:	enter  0xcb3b,0x67
  4268a5:	ins    DWORD PTR es:[edi],dx
  4268a6:	not    esp
  4268a8:	(bad)  
  4268a9:	ins    DWORD PTR es:[edi],dx
  4268aa:	sar    DWORD PTR [eax-0x2c],cl
  4268ad:	test   al,0xed
  4268af:	(bad)  
  4268b0:	clc    
  4268b1:	xchg   edx,eax
  4268b2:	js     0x426858
  4268b4:	sbb    edx,edi
  4268b6:	dec    esp
  4268b7:	sar    DWORD PTR [edx],1
  4268b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268ba:	retf   
  4268bb:	pop    esp
  4268bc:	out    dx,al
  4268bd:	test   eax,0xc3eefd69
  4268c2:	cmc    
  4268c3:	push   ebp
  4268c4:	dec    ebx
  4268c5:	jbe    0x426917
  4268c7:	sub    bl,BYTE PTR [ebp+0x47]
  4268ca:	mov    ch,0x2d
  4268cc:	xchg   BYTE PTR [esp+ebx*4+0x0],bl
  4268d0:	sub    esp,DWORD PTR [esi+0x13]
  4268d3:	add    al,0xd2
  4268d5:	test   al,0x4
  4268d7:	cwde   
  4268d8:	sub    ah,BYTE PTR [ecx-0x53]
  4268db:	sub    BYTE PTR [esi],0xb4
  4268de:	in     eax,dx
  4268df:	mov    esi,?
  4268e1:	lea    edx,[ecx-0x5943b2b]
  4268e7:	mov    edx,0x76af135f
  4268ec:	pushf  
  4268ed:	dec    ebp
  4268ee:	or     DWORD PTR [edx],ebx
  4268f0:	aam    0x8
  4268f2:	lea    esi,[eax+eiz*8-0x75]
  4268f6:	cld    
  4268f7:	retf   
  4268f8:	sub    ebp,edx
  4268fa:	sub    eax,0xb1b30039
  4268ff:	retf   0xc78c
  426902:	and    al,bh
  426904:	jge    0x426904
  426906:	pusha  
  426907:	mov    esi,0xf40a37f3
  42690c:	push   0xbb21db65
  426911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426912:	out    0x77,eax
  426914:	in     eax,dx
  426915:	sbb    bh,BYTE PTR [ecx-0x41]
  426918:	or     DWORD PTR [edi+0x20984121],esi
  42691e:	fld    DWORD PTR [ecx]
  426920:	clc    
  426921:	enter  0x1d48,0x9f
  426925:	dec    ebx
  426926:	int3   
  426927:	add    BYTE PTR [edx],al
  426929:	ins    DWORD PTR es:[edi],dx
  42692a:	in     eax,0x9a
  42692c:	adc    bh,ah
  42692e:	fwait
  42692f:	scas   eax,DWORD PTR es:[edi]
  426930:	data16 (bad) gs:[ecx-0x64]
  426935:	leave  
  426936:	jb     0x4269a5
  426938:	mov    bl,0xb3
  42693a:	bndstx [eax],bnd1
  42693d:	or     bh,dh
  42693f:	lea    ebp,[edi-0x4f]
  426942:	das    
  426943:	push   ebp
  426944:	stos   DWORD PTR es:[edi],eax
  426945:	jp     0x42691a
  426947:	push   esp
  426948:	ret    0x3f9e
  42694b:	loop   0x4269c1
  42694d:	dec    edi
  42694e:	cdq    
  42694f:	dec    edx
  426950:	test   al,0x12
  426952:	ficomp DWORD PTR [eax+0x16]
  426955:	pop    ecx
  426956:	fdivr  DWORD PTR [edi+0x69]
  42695a:	fisubr DWORD PTR [ebx+0x2c]
  42695d:	je     0x42691c
  42695f:	mov    cs,edi
  426961:	mov    al,0x77
  426963:	push   ebx
  426964:	(bad)  
  426965:	adc    DWORD PTR [eax+0x581a3850],edi
  42696b:	sbb    BYTE PTR [esi-0x16],bl
  42696e:	cs xor eax,0x34ec8bdd
  426974:	outs   dx,DWORD PTR ds:[esi]
  426975:	aas    
  426976:	pop    ebx
  426977:	test   al,0x7b
  426979:	add    al,0xa
  42697b:	fstp   DWORD PTR [esi]
  42697d:	and    BYTE PTR ds:0x2fe48be5,cl
  426983:	cs jae 0x4269d2
  426986:	pusha  
  426987:	mov    dl,0x86
  426989:	push   eax
  42698a:	cmp    BYTE PTR [edx-0x2bed6e88],0x71
  426991:	out    dx,al
  426992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426993:	in     eax,0x5e
  426995:	shl    DWORD PTR [ebp-0x2d],1
  426998:	fisttp DWORD PTR [edx]
  42699a:	mov    esp,0xb38e9941
  42699f:	or     dl,BYTE PTR [edx-0x9]
  4269a2:	aaa    
  4269a3:	xor    al,0x86
  4269a5:	fcomp  st(7)
  4269a7:	jle    0x426a18
  4269a9:	inc    edx
  4269aa:	jns    0x42696e
  4269ac:	mov    cl,BYTE PTR [ebx]
  4269ae:	nop
  4269af:	add    eax,0x3465be2b
  4269b4:	cmp    al,0xa1
  4269b6:	lods   al,BYTE PTR ds:[esi]
  4269b7:	popf   
  4269b8:	(bad)  
  4269b9:	pop    ebp
  4269ba:	pop    ebx
  4269bb:	lahf   
  4269bc:	das    
  4269bd:	dec    eax
  4269be:	and    cl,bl
  4269c0:	add    ebx,0xde4be54
  4269c6:	fnstsw WORD PTR [edx]
  4269c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269c9:	rcl    BYTE PTR [ecx+0x4338c8ea],1
  4269cf:	lahf   
  4269d0:	mov    bl,0xc8
  4269d2:	xchg   edx,eax
  4269d3:	mov    ah,0x7b
  4269d5:	add    al,0xc3
  4269d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269d8:	xchg   BYTE PTR [edx-0x31],bl
  4269db:	push   ss
  4269dc:	fdivrp st(5),st
  4269de:	pop    ebp
  4269df:	rcr    DWORD PTR [ebx-0x34cfd27b],cl
  4269e5:	test   eax,0xe771c92
  4269ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269eb:	xchg   BYTE PTR [esi+0x50],ch
  4269ee:	(bad)  [edi-0x46f4d56e]
  4269f4:	jge    0x4269b5
  4269f6:	push   es
  4269f7:	or     cl,BYTE PTR [eax]
  4269f9:	popf   
  4269fa:	mov    BYTE PTR [esi-0x3d073e29],al
  426a00:	mov    eax,ds:0xc975ebc8
  426a05:	sub    ah,0xfe
  426a08:	adc    BYTE PTR [esi-0x68],dl
  426a0b:	add    eax,0x64a174d2
  426a10:	mov    ebp,0xbecadd19
  426a15:	and    ebp,DWORD PTR [eax]
  426a17:	mov    ebp,0x50fd8ab2
  426a1c:	xor    al,0xa
  426a1e:	rcr    dl,0xea
  426a21:	cmp    BYTE PTR [edx],cl
  426a23:	ficomp DWORD PTR [ebp+0x59]
  426a26:	xchg   DWORD PTR ds:0x3048ba13,ebx
  426a2c:	fidiv  DWORD PTR [edi-0x5de67ab2]
  426a32:	or     esi,DWORD PTR [ebx-0x54]
  426a35:	aam    0x6d
  426a37:	or     eax,esi
  426a39:	push   esi
  426a3a:	inc    ebx
  426a3b:	xor    DWORD PTR [edi+0x65],esi
  426a3e:	mov    ebx,0xdbca0345
  426a43:	cmc    
  426a44:	icebp  
  426a45:	jecxz  0x4269dc
  426a47:	xlat   BYTE PTR ds:[ebx]
  426a48:	dec    esp
  426a49:	cmp    DWORD PTR [esi],esi
  426a4b:	pop    es
  426a4c:	cli    
  426a4d:	jecxz  0x426aa3
  426a4f:	xchg   edx,eax
  426a50:	aaa    
  426a51:	cwde   
  426a52:	mov    al,0xdf
  426a54:	xlat   BYTE PTR ds:[ebx]
  426a55:	xchg   ebx,eax
  426a56:	and    dh,BYTE PTR [edx]
  426a58:	push   cs
  426a59:	xor    DWORD PTR [edi+0x5e],0x5f
  426a5d:	adc    ebx,ebp
  426a5f:	test   eax,0xa7f4f31b
  426a64:	out    0xf8,eax
  426a66:	cmp    BYTE PTR [ecx+edi*8-0x47],0x71
  426a6b:	mov    bh,0x35
  426a6d:	xchg   esi,eax
  426a6e:	inc    esp
  426a6f:	mov    ecx,0xf3742adc
  426a74:	sbb    BYTE PTR [edx],dh
  426a76:	xchg   ebx,eax
  426a77:	mov    ss,WORD PTR [esi-0x31]
  426a7a:	push   ss
  426a7b:	add    BYTE PTR [edi-0x13b4a801],dl
  426a81:	por    mm6,QWORD PTR [ecx+ebp*1]
  426a85:	sahf   
  426a86:	js     0x426abe
  426a88:	sbb    eax,0xcecca20d
  426a8d:	lock push edx
  426a8f:	stc    
  426a90:	cmp    DWORD PTR [edx-0x48],ebp
  426a93:	cmp    dh,bh
  426a95:	xchg   ecx,eax
  426a96:	push   es
  426a97:	popa   
  426a98:	(bad)  
  426a99:	nop
  426a9a:	xchg   esi,eax
  426a9b:	xor    DWORD PTR [edi],ecx
  426a9d:	fwait
  426a9e:	popf   
  426a9f:	xchg   DWORD PTR [ecx],esp
  426aa1:	and    al,0xc1
  426aa3:	icebp  
  426aa4:	or     cl,ah
  426aa6:	push   ebx
  426aa7:	push   0x574bd639
  426aac:	pop    edi
  426aad:	push   eax
  426aae:	and    ch,BYTE PTR ds:0x7349bcd4
  426ab4:	sub    bl,ah
  426ab6:	adc    ebp,DWORD PTR [ebx-0x2c7540ff]
  426abc:	fistp  DWORD PTR [ecx-0x19a5d490]
  426ac2:	push   ss
  426ac3:	out    dx,eax
  426ac4:	pop    esi
  426ac5:	jp     0x426b36
  426ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ac8:	jmp    0xe7f3d426
  426acd:	sbb    edx,0x3bc3e4f3
  426ad3:	or     eax,0x30d4cd20
  426ad8:	call   FWORD PTR [ecx+0x4bf554e9]
  426ade:	pop    edi
  426adf:	jp     0x426acb
  426ae1:	push   edx
  426ae2:	mov    eax,ds:0xd96044dd
  426ae7:	inc    ebx
  426ae8:	rcr    BYTE PTR [ebx-0x2d],cl
  426aeb:	push   edx
  426aec:	push   ds
  426aed:	lock mov edx,0xa37cf5db
  426af3:	inc    eax
  426af4:	jns    0x426b05
  426af6:	cld    
  426af7:	mov    edi,0xb5c7ace1
  426afc:	xchg   ecx,eax
  426afd:	xlat   BYTE PTR ds:[ebx]
  426afe:	dec    eax
  426aff:	xchg   edi,eax
  426b00:	jge    0x426b31
  426b02:	clc    
  426b03:	dec    edx
  426b04:	clc    
  426b05:	out    0xea,al
  426b07:	xor    eax,0x72a621bd
  426b0c:	popa   
  426b0d:	in     eax,dx
  426b0e:	inc    eax
  426b0f:	outs   dx,BYTE PTR ds:[esi]
  426b10:	mov    BYTE PTR [ebp+0x2d],bh
  426b13:	or     eax,0xea47a5e3
  426b18:	pop    ds
  426b19:	add    eax,0x74105b91
  426b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b1f:	stos   BYTE PTR es:[edi],al
  426b20:	test   eax,0xd2859677
  426b25:	or     BYTE PTR [ebp-0x6ff3b316],0x57
  426b2c:	(bad)  
  426b2d:	in     eax,0x83
  426b2f:	pop    ss
  426b30:	adc    eax,edx
  426b32:	loopne 0x426b38
  426b34:	mov    eax,ds:0xf654f6fe
  426b39:	jnp    0x426b84
  426b3b:	lods   eax,DWORD PTR ds:[esi]
  426b3c:	popa   
  426b3d:	xchg   BYTE PTR [edi+0x9cae9],ah
  426b43:	add    al,0x2b
  426b45:	test   eax,0x9e62f879
  426b4a:	xchg   ecx,eax
  426b4b:	(bad)  
  426b4c:	(bad)  
  426b4d:	mov    al,0xf9
  426b4f:	jmp    0xb024cb3e
  426b54:	(bad)  
  426b55:	push   ds
  426b56:	out    dx,al
  426b57:	fwait
  426b58:	outs   dx,BYTE PTR ds:[esi]
  426b59:	dec    esi
  426b5a:	in     eax,0xdf
  426b5c:	ror    BYTE PTR [eax],cl
  426b5e:	mov    edi,0x82ca4afa
  426b63:	nop
  426b64:	xor    eax,0x1e0cc36f
  426b69:	adc    eax,0x4df763c1
  426b6e:	pop    ss
  426b6f:	scas   al,BYTE PTR es:[edi]
  426b70:	inc    edi
  426b71:	push   cs
  426b72:	sub    al,BYTE PTR [esi+0x6e11c7f]
  426b78:	sub    al,0xc
  426b7a:	mov    dh,BYTE PTR [ebx-0x8]
  426b7d:	xchg   ecx,eax
  426b7e:	and    ebp,DWORD PTR [eax-0x5c574a7d]
  426b84:	mov    ch,0xea
  426b86:	or     al,0x25
  426b88:	sub    al,0x10
  426b8a:	enter  0x9768,0xf
  426b8e:	in     al,0x14
  426b90:	dec    esp
  426b91:	push   esp
  426b92:	outs   dx,DWORD PTR ds:[esi]
  426b93:	sahf   
  426b94:	jns    0x426b55
  426b96:	ret    
  426b97:	add    cl,BYTE PTR [ecx-0x5947a071]
  426b9d:	cmp    edi,DWORD PTR [ecx+0x71]
  426ba0:	imul   edx,DWORD PTR [esp+ecx*8+0x34ab3bca],0xffffff8a
  426ba8:	sbb    BYTE PTR [ecx-0x48],bl
  426bab:	pop    es
  426bac:	jmp    0x59b2:0xe15e7682
  426bb3:	mov    ah,0x9b
  426bb5:	adc    ebp,DWORD PTR [eax-0x2a94048d]
  426bbb:	stc    
  426bbc:	jge    0x426b7a
  426bbe:	mov    al,0xdf
  426bc0:	sub    cl,cl
  426bc2:	xchg   esp,eax
  426bc3:	out    dx,eax
  426bc4:	jmp    FWORD PTR [esi-0x66dd1352]
  426bca:	mov    eax,0x3c28360e
  426bcf:	xor    BYTE PTR [bp+di],ah
  426bd2:	bound  esi,QWORD PTR [ebp+0x29]
  426bd5:	test   al,0x65
  426bd7:	xchg   ebp,eax
  426bd8:	andnps xmm5,XMMWORD PTR [esi-0x66]
  426bdc:	add    eax,0xc0ddc16
  426be1:	in     al,dx
  426be2:	leave  
  426be3:	iret   
  426be4:	mov    eax,0x2c2d50ae
  426be9:	jge    0x426bf7
  426beb:	lods   al,BYTE PTR ds:[esi]
  426bec:	mov    cl,dl
  426bee:	xlat   BYTE PTR ds:[ebx]
  426bef:	push   esi
  426bf0:	ins    BYTE PTR es:[edi],dx
  426bf1:	xlat   BYTE PTR ds:[ebx]
  426bf2:	jb     0x426b86
  426bf4:	jno    0x426bc4
  426bf6:	shl    BYTE PTR [esi],cl
  426bf8:	aad    0x9f
  426bfa:	stc    
  426bfb:	fild   QWORD PTR [ebp-0x2d1a62f8]
  426c01:	add    DWORD PTR [edi-0x2d],ebx
  426c04:	xor    BYTE PTR [esi],0x3b
  426c07:	stos   BYTE PTR es:[edi],al
  426c08:	out    0xfd,eax
  426c0a:	push   ss
  426c0b:	stos   DWORD PTR es:[edi],eax
  426c0c:	dec    ecx
  426c0d:	cld    
  426c0e:	push   ecx
  426c0f:	adc    ebp,ebp
  426c11:	cwde   
  426c12:	fidivr WORD PTR [ebp+0x1245cde7]
  426c18:	cld    
  426c19:	or     eax,0xd5946f5e
  426c1e:	inc    eax
  426c1f:	pop    edi
  426c20:	ret    
  426c21:	sbb    BYTE PTR [ebp+0x6b111f96],ah
  426c27:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  426c29:	or     esp,DWORD PTR [ebx]
  426c2b:	push   0x57
  426c2d:	jmp    0x426bb9
  426c2f:	dec    edi
  426c30:	or     al,0x4f
  426c32:	jnp    0x426c27
  426c34:	lahf   
  426c35:	mov    dl,0x76
  426c37:	push   edx
  426c38:	daa    
  426c39:	sub    BYTE PTR [edi+0x73],bl
  426c3c:	loope  0x426c16
  426c3e:	dec    esi
  426c3f:	stc    
  426c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c41:	or     eax,0x1e434c78
	...
  426c4e:	add    BYTE PTR [eax],al
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ebp,DWORD PTR [edi]
  426c5e:	les    ecx,FWORD PTR [esi]
  426c60:	loop   0x426c45
  426c62:	loop   0x426c65
  426c64:	add    BYTE PTR [ebp-0x27fffffd],ch
  426c6a:	or     dh,BYTE PTR [edi+0x2a]
  426c6d:	in     eax,dx
  426c6e:	call   0xde27c5b2
  426c73:	jnp    0x426c0b
  426c75:	mov    ch,0xbb
  426c77:	into   
  426c78:	aad    0x27
  426c7a:	pop    edx
  426c7c:	lock cmp al,0x45
  426c7f:	out    0x27,al
  426c81:	sub    eax,0xcee27b83
  426c86:	out    dx,al
  426c87:	pop    ds
  426c88:	rcr    DWORD PTR [eax-0x5c],cl
  426c8b:	lea    edx,[edx+0x2ba69f41]
  426c91:	pop    esi
  426c92:	shl    DWORD PTR [edx-0x14],0x26
  426c96:	(bad)  
  426c97:	lods   eax,DWORD PTR ds:[esi]
  426c98:	fs sbb ebx,0xc11678af
  426c9f:	and    DWORD PTR es:[edx],esp
  426ca2:	xor    BYTE PTR [edx+edx*4+0x77022a32],ch
  426ca9:	stos   BYTE PTR es:[edi],al
  426caa:	adc    eax,0x195b2fae
  426caf:	inc    eax
  426cb0:	loope  0x426ce0
  426cb2:	loopne 0x426cf1
  426cb4:	retf   
  426cb5:	bound  ebp,QWORD PTR [eax]
  426cb7:	in     al,0x8e
  426cb9:	jo     0x426ca1
  426cbb:	adc    edi,DWORD PTR [esi-0x7371d55f]
  426cc1:	push   ebx
  426cc2:	mov    bh,0x6f
  426cc4:	ins    WORD PTR es:[edi],dx
  426cc6:	hlt    
  426cc7:	loopne 0x426ccb
  426cc9:	dec    edx
  426cca:	add    esp,DWORD PTR [edi+edi*1+0x20]
  426cce:	outs   dx,DWORD PTR ds:[esi]
  426ccf:	dec    ebx
  426cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cd1:	adc    dh,ch
  426cd3:	out    0xe,eax
  426cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cd6:	add    eax,0x83032dde
  426cdb:	push   ebp
  426cdc:	and    eax,0x14054004
  426ce1:	add    eax,0x1ab27bdf
  426ce6:	sub    ebx,DWORD PTR [edx+0x3980a752]
  426cec:	inc    eax
  426ced:	xchg   dl,bh
  426cef:	mov    DWORD PTR [edi+eiz*2],esp
  426cf2:	or     BYTE PTR [esp+ebx*4+0x30],bh
  426cf6:	push   es
  426cf7:	add    DWORD PTR [eax],esp
  426cf9:	fadd   DWORD PTR [edx+0x52]
  426cfc:	xchg   BYTE PTR ds:0x774212bb,ch
  426d02:	pop    esp
  426d03:	sbb    DWORD PTR [ebx],edx
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	sbb    al,0x49
  426d08:	cmp    eax,0xdfb3ba2f
  426d0d:	and    al,0xd2
  426d0f:	in     eax,0xfd
  426d11:	ins    BYTE PTR es:[edi],dx
  426d12:	xchg   ebp,eax
  426d13:	pop    es
  426d14:	mov    eax,ds:0x49cd28a6
  426d19:	inc    ebp
  426d1a:	mov    DWORD PTR [esi+0x25f94927],ecx
  426d20:	rcr    BYTE PTR [ebx-0x54],0x8f
  426d24:	sub    ah,BYTE PTR [edx]
  426d26:	mov    DWORD PTR [edx],esp
  426d28:	jns    0x426d85
  426d2a:	pop    esi
  426d2b:	out    0x46,al
  426d2d:	xchg   ebp,eax
  426d2e:	xor    eax,0x5ae2187d
  426d33:	aad    0xe
  426d35:	in     eax,dx
  426d36:	daa    
  426d37:	ret    0x7660
  426d3a:	jp     0x426cdc
  426d3c:	iret   
  426d3d:	out    dx,eax
  426d3e:	mov    esp,0xd4c15f33
  426d43:	mov    bl,0xd7
  426d45:	dec    esi
  426d46:	iret   
  426d47:	jg     0x426d10
  426d49:	pop    es
  426d4a:	nop
  426d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d4c:	fidivr WORD PTR [eax+0x65f0842c]
  426d52:	(bad)  
  426d53:	shr    DWORD PTR cs:[eax+0x36],0x43
  426d58:	pop    esp
  426d59:	popf   
  426d5a:	shl    BYTE PTR [edx+0x33],0x47
  426d5e:	sub    DWORD PTR [ebx],ebx
  426d60:	pop    es
  426d61:	mov    ds:0xb130ae7,al
  426d66:	pextrw ebp,(bad),0xc5
  426d68:	das    
  426d69:	inc    ecx
  426d6a:	(bad)  
  426d6b:	lea    edx,[edx]
  426d6d:	cs push esp
  426d6f:	outs   dx,DWORD PTR ds:[esi]
  426d70:	into   
  426d71:	pop    ecx
  426d72:	ja     0x426d8b
  426d74:	stc    
  426d75:	ins    DWORD PTR es:[edi],dx
  426d76:	aaa    
  426d77:	pop    es
  426d78:	jnp    0x426d68
  426d7a:	add    al,0xeb
  426d7c:	fnstsw WORD PTR [ebp+0x4e67d4b9]
  426d82:	retf   0xbda1
  426d85:	xchg   ebx,eax
  426d86:	adc    DWORD PTR [edi-0x60],edx
  426d89:	(bad)  
  426d8a:	imul   BYTE PTR [edi+0x0]
  426d8d:	mov    bh,0x33
  426d8f:	int3   
  426d90:	and    BYTE PTR [ebx-0x79664a3a],bh
  426d96:	leave  
  426d97:	mov    cl,BYTE PTR [edi]
  426d99:	push   cs
  426d9a:	and    al,0x47
  426d9c:	(bad)  
  426d9d:	ret    
  426d9e:	enter  0xe946,0x35
  426da2:	sbb    ebx,DWORD PTR [ebx+0x6c]
  426da5:	xor    al,0x9d
  426da7:	or     esp,DWORD PTR ds:0x3c29000a
  426dad:	cdq    
  426dae:	dec    ecx
  426daf:	mov    ds:0x22ec55c8,al
  426db4:	jno    0x426dbc
  426db6:	xchg   ecx,eax
  426db7:	xchg   ebx,eax
  426db8:	jl     0x426d60
  426dba:	outs   dx,BYTE PTR ds:[esi]
  426dbb:	jp     0x426e0d
  426dbd:	ds jne 0x426d99
  426dc0:	dec    ebx
  426dc1:	jmp    0x426db4
  426dc3:	adc    edx,DWORD PTR [ebx+ebp*4]
  426dc6:	jno    0x426d9b
  426dc8:	pavgb  mm6,QWORD PTR [ecx]
  426dcb:	mov    esp,0x3982c79f
  426dd0:	or     dh,BYTE PTR [edx+0x5c51cc4e]
  426dd6:	lods   eax,DWORD PTR ds:[esi]
  426dd7:	test   DWORD PTR [edx],esp
  426dd9:	jbe    0x426e54
  426ddb:	sbb    al,0x50
  426ddd:	std    
  426dde:	mov    eax,ds:0x4b3721a5
  426de3:	xchg   edx,eax
  426de4:	xor    DWORD PTR [edi+0x39176fff],0x786d2ae8
  426dee:	or     esp,DWORD PTR [esp+eiz*4-0x1c]
  426df2:	fmul   DWORD PTR [esi+0x1d]
  426df5:	dec    eax
  426df6:	inc    esi
  426df7:	daa    
  426df8:	fnsave [ebp*8+0x3dc083ae]
  426dff:	xor    DWORD PTR [esp+ecx*4],0xa2a3949d
  426e06:	pop    esp
  426e07:	jno    0x426dc3
  426e09:	hlt    
  426e0a:	mov    WORD PTR [ebx+0x438ee7f6],ds
  426e10:	push   0x2be85f99
  426e15:	sti    
  426e16:	scas   eax,DWORD PTR es:[edi]
  426e17:	test   eax,0xed2c37e5
  426e1c:	hlt    
  426e1d:	leave  
  426e1e:	call   0xda2d8f0c
  426e23:	cmp    al,0x27
  426e25:	sbb    ecx,DWORD PTR [edx-0x490ee50b]
  426e2b:	shl    BYTE PTR [esi],cl
  426e2d:	pop    es
  426e2e:	mov    al,0xb1
  426e30:	div    BYTE PTR [eax]
  426e32:	or     eax,0xe3b3611a
  426e37:	xor    bh,BYTE PTR [ebx-0x4d3cad13]
  426e3d:	jno    0x426dce
  426e3f:	add    dh,BYTE PTR [edi]
  426e41:	inc    ebx
  426e42:	fiadd  DWORD PTR ds:[eax+0x48a763ff]
  426e49:	jnp    0x426dfd
  426e4b:	push   0x6c
  426e4d:	addps  xmm1,xmm7
  426e50:	sbb    al,0x51
  426e52:	inc    edi
  426e53:	lock xchg edx,eax
  426e55:	push   es
  426e56:	sbb    eax,0x7a08f258
  426e5b:	jg     0x426e2b
  426e5d:	add    eax,0x9317e547
  426e62:	mov    ds:0xd66259a6,eax
  426e67:	lea    esp,[eax-0x42]
  426e6a:	adc    BYTE PTR [esi-0x65804a0d],cl
  426e70:	rol    DWORD PTR [esi+0x5a],0x39
  426e74:	shl    DWORD PTR [ebx-0x54],1
  426e77:	dec    ecx
  426e78:	retf   
  426e79:	fs mov cl,0xa3
  426e7c:	pop    edi
  426e7d:	mov    ah,0x6a
  426e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e80:	and    dl,al
  426e82:	(bad)  
  426e83:	xchg   esp,eax
  426e84:	dec    ecx
  426e85:	inc    BYTE PTR [ecx+eax*2+0x4f57feb4]
  426e8c:	push   esp
  426e8d:	aad    0xd5
  426e8f:	or     eax,0x98d23e1e
  426e94:	sub    al,0xce
  426e96:	sahf   
  426e97:	push   ecx
  426e98:	mov    edi,DWORD PTR [edx+0x1046ecc]
  426e9e:	js     0x426eae
  426ea0:	adc    esp,DWORD PTR [esi+ebx*2-0x5]
  426ea4:	and    al,0xa5
  426ea6:	aam    0xbb
  426ea8:	mov    bh,0x7e
  426eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eab:	imul   ebp,DWORD PTR [esi+0x15ef15ea],0x927864be
  426eb5:	dec    ebp
  426eb6:	mov    esi,0xc33a76d1
  426ebb:	fprem  
  426ebd:	xor    bl,BYTE PTR [ecx+0x3d3a7fce]
  426ec3:	pop    ss
  426ec4:	adc    al,0xf2
  426ec6:	mov    es,WORD PTR [ecx-0x50784225]
  426ecc:	adc    al,0x8b
  426ece:	jmp    0x426e82
  426ed0:	paddd  mm3,QWORD PTR [edi]
  426ed3:	lahf   
  426ed4:	std    
  426ed5:	sbb    dl,cl
  426ed7:	mov    esi,0x821a1601
  426edc:	(bad)  
  426edd:	sub    BYTE PTR [eax+0x5fe8d1d8],bl
  426ee3:	inc    edx
  426ee4:	jbe    0x426f63
  426ee6:	lock add bl,bh
  426ee9:	les    edi,FWORD PTR ds:0x9f3a2dde
  426eef:	cmp    al,0x1c
  426ef1:	jnp    0x426f55
  426ef3:	or     BYTE PTR [esi+0x3b],cl
  426ef6:	or     ecx,DWORD PTR [edx]
  426ef8:	subps  xmm3,XMMWORD PTR [esi+edx*8]
  426efc:	in     eax,0x53
  426efe:	sbb    BYTE PTR [edi+0x47],bl
  426f01:	fwait
  426f02:	jne    0x426f26
  426f04:	rcl    ch,1
  426f06:	enter  0xb53d,0x5f
  426f0a:	cmp    ebp,eax
  426f0c:	(bad)  
  426f0d:	inc    edx
  426f0e:	and    eax,0xd416353b
  426f13:	test   al,0x9d
  426f15:	mov    DWORD PTR [eax+0x1dacb176],esi
  426f1b:	mov    edi,ebx
  426f1d:	nop
  426f1e:	sub    esi,DWORD PTR [esi+0x70ea205]
  426f24:	mov    dl,0xed
  426f26:	push   ebp
  426f27:	sub    al,0xbb
  426f29:	adc    DWORD PTR [ebx],eax
  426f2b:	jp     0x426edd
  426f2d:	les    ebp,FWORD PTR ds:0xc3bb6e25
  426f33:	div    DWORD PTR [esi+edx*4]
  426f36:	jbe    0x426f46
  426f38:	rol    ecx,1
  426f3a:	mov    DWORD PTR [esi],edi
  426f3c:	xchg   ecx,eax
  426f3d:	retf   
  426f3e:	into   
  426f3f:	cmc    
  426f40:	inc    ebx
  426f41:	sbb    BYTE PTR [edx-0x1e8186e2],dl
  426f47:	mov    eax,0x9e760115
  426f4c:	stos   BYTE PTR es:[edi],al
  426f4d:	add    ebx,eax
  426f4f:	test   BYTE PTR [eax+0x516ea94d],dh
  426f55:	mov    WORD PTR fs:[edi+0x5157a7fc],es
  426f5c:	mov    WORD PTR [ecx+0x35e973f7],es
  426f62:	aad    0x50
  426f64:	pop    edi
  426f65:	test   BYTE PTR [edx-0x7a],0xa4
  426f69:	dec    esi
  426f6a:	and    al,0xe0
  426f6c:	mov    al,0xaa
  426f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f6f:	xchg   BYTE PTR [edi-0x52],dh
  426f72:	daa    
  426f73:	retf   
  426f74:	lea    esp,[ebp-0x279113a2]
  426f7a:	out    dx,eax
  426f7b:	pop    ss
  426f7c:	add    BYTE PTR [eax+0x22a6559f],0x5b
  426f83:	in     al,dx
  426f84:	inc    esp
  426f85:	imul   esp,DWORD PTR [edi+0x67],0x6a4cfdd5
  426f8c:	ss jg  0x426f3f
  426f8f:	leave  
  426f90:	sti    
  426f91:	push   esp
  426f92:	adc    eax,0x935b7a96
  426f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f98:	bound  edi,QWORD PTR [edx]
  426f9a:	cld    
  426f9b:	lods   eax,DWORD PTR ds:[esi]
  426f9c:	dec    ebx
  426f9d:	dec    ebp
  426f9e:	arpl   WORD PTR [edx*1+0x116d3fa5],cx
  426fa5:	pop    edi
  426fa6:	jmp    0x427001
  426fa8:	push   0xa0186c7f
  426fad:	or     eax,0xd73cebbb
  426fb2:	sbb    DWORD PTR [edi-0x74a4bd25],0x1837605c
  426fbc:	xchg   esi,eax
  426fbd:	sub    ecx,esp
  426fbf:	test   al,0x52
  426fc1:	ficomp DWORD PTR [eax+0x488ec502]
  426fc7:	nop
  426fc8:	mov    ecx,0xfe79a706
  426fcd:	lock sar DWORD PTR ds:0xc0a98634,cl
  426fd4:	out    0x17,eax
  426fd6:	ins    DWORD PTR es:[edi],dx
  426fd7:	rcl    BYTE PTR [ebp-0x5e],0xb4
  426fdb:	add    DWORD PTR [edi-0x3125b11d],eax
  426fe1:	cld    
  426fe2:	sbb    esp,DWORD PTR [ecx-0x6a]
  426fe5:	call   0xedd0:0x516ce9a8
  426fec:	xchg   ebx,eax
  426fed:	xchg   DWORD PTR [eax-0x4],esp
  426ff0:	test   al,0xdc
  426ff2:	mov    dl,0xf5
  426ff4:	outs   dx,BYTE PTR ds:[esi]
  426ff5:	jne    0x427036
  426ff7:	das    
  426ff8:	shr    bl,1
  426ffa:	dec    edx
  426ffb:	jbe    0x427042
  426ffd:	scas   al,BYTE PTR es:[edi]
  426ffe:	in     al,0xeb
  427000:	add    cl,BYTE PTR [ecx-0x6ffef816]
  427006:	xor    dh,bh
  427008:	xor    edi,edi
  42700a:	jmp    0x88f6:0x48a28d78
  427011:	addr16 aad 0x20
  427014:	mov    al,ds:0x7
	...
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	shr    BYTE PTR [ecx-0x6f7a6ea4],cl
  427032:	out    0x1,al
  427034:	add    BYTE PTR [ebp+0x3b000003],ch
  42703a:	(bad)  
  42703b:	mov    bl,0xd5
  42703d:	arpl   WORD PTR [ebx],si
  42703f:	(bad)  
  427040:	pusha  
  427041:	or     DWORD PTR [ebx+0x35],eax
  427044:	jb     0x427039
  427046:	push   ebx
  427047:	mov    ds:0xb98cf7eb,al
  42704c:	push   ecx
  42704d:	pop    esi
  42704e:	sahf   
  42704f:	mov    ds:0xbedf5f53,eax
  427054:	jnp    0x427093
  427056:	inc    edi
  427057:	std    
  427058:	mov    ch,0x1e
  42705a:	pop    eax
  42705b:	ins    DWORD PTR es:[edi],dx
  42705c:	pop    es
  42705d:	dec    edx
  42705e:	mov    BYTE PTR [edi+esi*4-0x5c740776],al
  427065:	shl    ecx,cl
  427067:	sub    DWORD PTR [eax+0x14821571],ecx
  42706d:	jp     0x427053
  42706f:	mov    ch,0x2d
  427071:	cmc    
  427072:	test   cl,ch
  427074:	mov    al,0x51
  427076:	call   0xba8faaca
  42707b:	sbb    cl,bl
  42707d:	mov    ds:0x6dd95ad2,al
  427082:	ins    DWORD PTR es:[edi],dx
  427083:	sbb    DWORD PTR [edx],eax
  427085:	sub    DWORD PTR [eax+ecx*2],ebp
  427088:	push   ebp
  427089:	out    dx,al
  42708a:	bound  esp,QWORD PTR [edi]
  42708c:	(bad)  
  42708d:	outs   dx,DWORD PTR ds:[esi]
  42708e:	sub    eax,DWORD PTR [ecx+0x3f6ce344]
  427094:	xlat   BYTE PTR ds:[ebx]
  427095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427096:	gs loope 0x42702b
  427099:	gs scas al,BYTE PTR es:[edi]
  42709b:	and    dh,al
  42709d:	std    
  42709e:	mov    ds:0x512b89a0,al
  4270a3:	ret    
  4270a4:	mov    eax,0xe8740076
  4270a9:	adc    bl,BYTE PTR [edx-0xa]
  4270ac:	sahf   
  4270ad:	loop   0x42707c
  4270af:	and    dl,ah
  4270b1:	into   
  4270b2:	push   ss
  4270b3:	sbb    al,0xcc
  4270b5:	jp     0x4270f2
  4270b7:	outs   dx,DWORD PTR ds:[esi]
  4270b8:	push   DWORD PTR [esi-0x7e]
  4270bb:	js     0x427128
  4270bd:	test   DWORD PTR ds:0xcd290af3,esi
  4270c3:	or     eax,0x86e0f3f9
  4270c8:	repnz dec ebx
  4270ca:	xchg   ebx,eax
  4270cb:	adc    ecx,DWORD PTR [eax+0x765d0b36]
  4270d1:	mov    al,0x92
  4270d3:	hlt    
  4270d4:	mov    al,ds:0x5fadb86f
  4270d9:	mov    esi,0xb7afe45e
  4270de:	xchg   esi,eax
  4270df:	pusha  
  4270e0:	sti    
  4270e1:	aas    
  4270e2:	and    eax,0xea05b4b8
  4270e7:	cmp    eax,0x824dab8f
  4270ec:	int3   
  4270ed:	dec    edi
  4270ee:	xlat   BYTE PTR ds:[ebx]
  4270ef:	hlt    
  4270f0:	inc    esp
  4270f1:	outs   dx,DWORD PTR ds:[esi]
  4270f2:	mov    esi,0x39b3959
  4270f7:	push   0xb46dbc1c
  4270fc:	pop    edx
  4270fd:	xor    eax,0x9d73eda7
  427102:	mov    ecx,0x50ec7f11
  427107:	mov    eax,0xf3a0715d
  42710c:	push   cs
  42710d:	xchg   ebp,eax
  42710e:	out    dx,al
  42710f:	outs   dx,DWORD PTR ds:[esi]
  427110:	addr16 out 0x16,al
  427113:	mov    cl,0xa4
  427115:	ins    BYTE PTR es:[edi],dx
  427116:	test   al,0xdb
  427118:	sub    al,BYTE PTR ds:0xdc8225f
  42711e:	test   al,0x8c
  427120:	lods   al,BYTE PTR ds:[esi]
  427121:	out    dx,eax
  427122:	jne    0x42719c
  427124:	or     al,0xc1
  427126:	mov    ebx,DWORD PTR [edi]
  427128:	push   ss
  427129:	gs jns 0x427139
  42712c:	add    al,0x3a
  42712e:	cli    
  42712f:	xchg   ebp,eax
  427130:	xchg   edx,eax
  427131:	aad    0x79
  427133:	mov    ch,0xda
  427135:	jmp    0x4ec8a9d
  42713a:	mov    dl,0xad
  42713c:	push   eax
  42713d:	test   edx,esi
  42713f:	daa    
  427140:	popf   
  427141:	repnz pop edx
  427143:	and    eax,0xabf04272
  427148:	sub    al,0x9a
  42714a:	retf   0x4250
  42714d:	clc    
  42714e:	nop
  42714f:	xor    BYTE PTR [edi+0x276832b6],dl
  427155:	or     BYTE PTR [edi-0x32f87de3],bl
  42715b:	jno    0x4271d6
  42715d:	and    esp,0x80d97b45
  427163:	push   ebp
  427164:	dec    esi
  427165:	cli    
  427166:	(bad)  
  427167:	mov    ds:0x95847f3,al
  42716c:	mov    edx,DWORD PTR [ebp+0x2871dc80]
  427172:	mov    ah,0xf7
  427174:	and    edx,DWORD PTR [ecx]
  427176:	fwait
  427177:	cmc    
  427178:	in     al,dx
  427179:	mov    esi,eax
  42717b:	lea    ebx,[edi-0x6c5b8a14]
  427181:	imul   ecx,DWORD PTR [ebx+0x625dd6b1],0x9662ad34
  42718b:	enter  0x86a2,0x6b
  42718f:	scas   eax,DWORD PTR es:[edi]
  427190:	retf   
  427191:	les    ecx,FWORD PTR [ecx-0x4e9f0d31]
  427197:	and    DWORD PTR [esi],0x200c2ae5
  42719d:	inc    ebx
  42719e:	ins    BYTE PTR es:[edi],dx
  42719f:	fs daa 
  4271a1:	(bad)  
  4271a2:	stos   BYTE PTR es:[edi],al
  4271a3:	push   edi
  4271a4:	fmul   DWORD PTR [ecx+0xaa1d8cd]
  4271aa:	push   ds
  4271ab:	jae    0x4271a3
  4271ad:	mov    dl,0x6b
  4271af:	xchg   ebp,eax
  4271b0:	inc    esi
  4271b1:	mov    ecx,0x4ec23711
  4271b6:	outs   dx,DWORD PTR ds:[esi]
  4271b7:	mov    dl,BYTE PTR [ecx-0x37]
  4271ba:	iret   
  4271bb:	dec    ecx
  4271bc:	sbb    cl,dl
  4271be:	aad    0x5d
  4271c0:	inc    ecx
  4271c1:	rol    BYTE PTR [ebp+0x25],1
  4271c4:	jecxz  0x427163
  4271c6:	ss xchg ebp,eax
  4271c8:	cmp    BYTE PTR [ebp-0x13d1bff],dh
  4271ce:	jae    0x4271bd
  4271d0:	retf   
  4271d1:	pop    ebp
  4271d2:	add    eax,0x3bebf1aa
  4271d7:	or     cl,al
  4271d9:	popa   
  4271da:	aas    
  4271db:	fist   WORD PTR [ebp+eax*2-0x70]
  4271df:	mov    bl,0x9c
  4271e1:	cmp    al,0x9c
  4271e4:	repnz pop es
  4271e6:	call   FWORD PTR [eax]
  4271e8:	inc    ebx
  4271e9:	and    DWORD PTR [ecx-0x61],esi
  4271ec:	sahf   
  4271ed:	adc    ah,cl
  4271ef:	jnp    0x4271f5
  4271f1:	call   0xdd415350
  4271f6:	and    DWORD PTR [edx],ebp
  4271f8:	mov    dh,0xed
  4271fa:	mov    edi,0x52c9635f
  4271ff:	ret    0xa42e
  427202:	out    0x9c,al
  427204:	adc    ah,BYTE PTR [esi-0x76d96f9f]
  42720a:	xor    DWORD PTR [eax],edi
  42720c:	out    dx,eax
  42720d:	sub    al,0x7d
  42720f:	cwde   
  427210:	mov    ah,0x36
  427212:	lock and edi,DWORD PTR [ecx]
  427215:	sbb    DWORD PTR [edx],0xa48870ad
  42721b:	nop
  42721c:	(bad)  
  42721e:	fcomp  DWORD PTR [bx+di+0x4e2b]
  427223:	pop    ss
  427224:	inc    esi
  427225:	fld    st(1)
  427227:	pop    esi
  427228:	xor    esp,DWORD PTR [edx]
  42722a:	mov    bl,0xa7
  42722c:	dec    ebp
  42722d:	cmp    al,bl
  42722f:	jecxz  0x427202
  427231:	and    al,0xac
  427233:	mov    WORD PTR [ebx+0x7474c2b2],gs
  427239:	jno    0x427268
  42723b:	bswap  edx
  42723d:	inc    edi
  42723e:	imul   edi,edx,0x1f
  427241:	pop    ebp
  427242:	in     eax,0x93
  427244:	adc    DWORD PTR [esi],ebp
  427246:	(bad)  
  427247:	xor    al,0xbb
  427249:	aas    
  42724a:	xchg   esi,eax
  42724b:	sub    eax,0x9e5f9a59
  427250:	sbb    DWORD PTR [esi+0x31f6b9df],esp
  427256:	popa   
  427257:	adc    ah,BYTE PTR [ebx-0x52]
  42725a:	and    dl,0x51
  42725d:	mov    bl,0x30
  42725f:	dec    esp
  427260:	xchg   esi,eax
  427261:	mov    bl,0xf0
  427263:	inc    edi
  427264:	lahf   
  427265:	ret    
  427266:	jns    0x4272c3
  427268:	xchg   ebp,eax
  427269:	and    eax,0xc83e6575
  42726e:	inc    edx
  42726f:	mov    ah,0x67
  427271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427272:	cmp    al,0x89
  427274:	jmp    0x9cfa:0xc4ead1e
  42727b:	dec    esp
  42727c:	js     0x4272de
  42727e:	lahf   
  42727f:	cs imul ecx,esp,0x15
  427283:	jmp    0x19d2:0x8865c537
  42728a:	mov    ecx,0xff501236
  42728f:	add    eax,0xb7347715
  427294:	or     al,0x32
  427296:	cmp    DWORD PTR [eax+0x2e9866b3],ecx
  42729c:	sbb    cl,BYTE PTR [eax+0x73]
  42729f:	pop    ebp
  4272a0:	adc    al,0x54
  4272a2:	int3   
  4272a3:	jmp    0x4272ed
  4272a5:	xchg   DWORD PTR [ecx+0x2de0f823],ecx
  4272ab:	jae    0x4272df
  4272ad:	mov    ch,0x5a
  4272af:	xor    DWORD PTR [edi-0x43],edx
  4272b2:	out    dx,eax
  4272b3:	(bad)  [edi+edi*1+0x25]
  4272b7:	bound  esp,QWORD PTR [ecx+0x9]
  4272ba:	sbb    dh,bh
  4272bc:	ret    0x8930
  4272bf:	ret    
  4272c0:	xchg   edi,eax
  4272c1:	and    ebp,DWORD PTR [edi]
  4272c3:	lea    ebx,[ebx-0x52a2ef9e]
  4272c9:	inc    edx
  4272ca:	adc    BYTE PTR ds:0x7dda5ded,dl
  4272d0:	adc    ah,BYTE PTR [ebx-0x7e877e5a]
  4272d6:	jmp    0xb0a85390
  4272db:	sub    al,0x8c
  4272dd:	mov    ebx,ss
  4272df:	stos   DWORD PTR es:[edi],eax
  4272e0:	sub    ah,BYTE PTR [ecx-0x24c313df]
  4272e6:	adc    al,0xd9
  4272e8:	jmp    0xa1b9e52d
  4272ed:	push   edx
  4272ee:	lock cmp DWORD PTR [edx+eiz*2+0x69b39bbc],ecx
  4272f6:	push   ss
  4272f7:	fild   WORD PTR [edx+0x10c483c0]
  4272fd:	adc    BYTE PTR [eax],0x43
  427300:	popa   
  427301:	dec    edi
  427302:	in     eax,0x70
  427304:	push   cs
  427305:	fdiv   DWORD PTR ss:[ecx-0x544d5ddf]
  42730c:	jae    0x42730a
  42730e:	mov    bl,0xae
  427310:	jp     0x4272f0
  427312:	loop   0x427355
  427314:	xor    al,0x8a
  427316:	inc    ebx
  427317:	sub    eax,0x6ca7f86c
  42731c:	test   eax,0xa6877e90
  427321:	arpl   WORD PTR [ecx],dx
  427323:	xchg   BYTE PTR [ecx],ch
  427325:	xchg   esp,eax
  427326:	in     eax,0xd8
  427328:	cs std 
  42732a:	adc    cl,BYTE PTR [ebx]
  42732c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42732d:	hlt    
  42732e:	xchg   ebp,eax
  42732f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427330:	leave  
  427331:	retf   0x2302
  427334:	jns    0x427331
  427336:	hlt    
  427337:	iret   
  427338:	adc    al,0x5b
  42733a:	sar    al,0xc8
  42733d:	inc    esp
  42733e:	push   ecx
  42733f:	enter  0x3565,0x27
  427343:	int3   
  427344:	retf   0x498c
  427347:	rcl    BYTE PTR [esi+0x1e9cce0],1
  42734d:	pushaw 
  42734f:	jle    0x42730e
  427351:	add    ebx,0xffffffad
  427354:	adc    al,0xa3
  427356:	jno    0x427315
  427358:	pop    es
  427359:	adc    bl,bh
  42735b:	scas   eax,DWORD PTR es:[edi]
  42735c:	jg     0x4272e2
  42735e:	mov    ebp,0x4c3f750b
  427363:	repnz pop ebp
  427365:	in     eax,dx
  427366:	pop    ecx
  427367:	sub    al,BYTE PTR [ebx+esi*2+0x1e]
  42736b:	sar    DWORD PTR [edi+edx*4+0x17ae2a67],cl
  427372:	cdq    
  427373:	mov    al,BYTE PTR [edx+0x56]
  427376:	or     dh,0x3a
  427379:	push   edx
  42737a:	icebp  
  42737b:	shl    BYTE PTR [edx-0x113e25d0],cl
  427381:	shl    DWORD PTR [ebp-0x2f2e1bc8],cl
  427387:	(bad)  
  427388:	xor    eax,edi
  42738a:	(bad)  
  42738b:	cmc    
  42738c:	jge    0x42738c
  42738e:	jno    0x427379
  427390:	fwait
  427391:	jb     0x4273fd
  427393:	sub    al,0x7a
  427395:	push   ebp
  427396:	daa    
  427397:	push   edx
  427398:	mov    eax,ds:0x3fdf3b80
  42739d:	mov    bl,0x18
  42739f:	cwde   
  4273a0:	xor    eax,0x8a9de06b
  4273a5:	sub    eax,0x98753cab
  4273aa:	jle    0x4273cc
  4273ac:	adc    BYTE PTR [eax-0x62],0xd8
  4273b0:	dec    ebp
  4273b1:	sbb    edi,esi
  4273b3:	dec    ebp
  4273b4:	mov    ds:0xf640908b,eax
  4273b9:	in     eax,dx
  4273ba:	add    eax,DWORD PTR [ebp-0x21290714]
  4273c0:	fadd   QWORD PTR [ebx+0x597e373d]
  4273c6:	xchg   DWORD PTR [esi+0x195054e7],ebx
  4273cc:	into   
  4273cd:	sbb    al,0xc3
  4273cf:	dec    ebp
  4273d0:	(bad)  
  4273d2:	pop    ecx
  4273d3:	jg     0x42741d
  4273d5:	loop   0x42737a
  4273d7:	pop    edi
  4273d8:	test   eax,0xe0127edb
  4273dd:	stc    
  4273de:	imul   eax,esi,0xffffff8b
  4273e1:	pop    eax
  4273e2:	mov    ds:0x50c0ee,eax
	...
  4273ef:	add    BYTE PTR [eax],al
  4273f1:	or     al,0x47
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xba19f609
  4273fe:	shl    esp,1
  427400:	addr16 cmp eax,0xad0001ea
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [ecx+0x15],bh
  42740b:	sahf   
  42740c:	fsub   DWORD PTR [edi]
  42740e:	mov    ecx,fs
  427410:	inc    eax
  427411:	ins    BYTE PTR es:[edi],dx
  427412:	jae    0x427456
  427414:	jno    0x427408
  427416:	xchg   edx,eax
  427417:	xor    DWORD PTR [edx-0x674cf2d3],0xffffff80
  42741e:	mov    ah,0xb5
  427420:	push   esp
  427421:	out    0x69,al
  427423:	push   ebx
  427424:	in     al,dx
  427425:	jbe    0x42748d
  427427:	in     al,0x5f
  427429:	ds mov dh,0x88
  42742c:	add    dl,bh
  42742e:	inc    esp
  42742f:	mov    al,ds:0x511d9f93
  427434:	adc    BYTE PTR [ecx-0x4c],dh
  427437:	xchg   esp,eax
  427438:	jb     0x4273ec
  42743a:	(bad)  
  42743b:	mov    ds:0x4d45d82b,al
  427440:	(bad)  
  427441:	stos   DWORD PTR es:[edi],eax
  427442:	pop    ebx
  427443:	rcr    BYTE PTR [eax+0x6d],cl
  427446:	mov    cl,0x36
  427448:	xchg   ecx,eax
  427449:	data16 mov bl,BYTE PTR [edi]
  42744c:	mov    ebx,0xd79cc426
  427451:	test   al,0xb5
  427453:	into   
  427454:	pop    es
  427455:	lahf   
  427456:	outs   dx,BYTE PTR ds:[esi]
  427457:	lods   al,BYTE PTR ds:[esi]
  427458:	inc    ecx
  427459:	add    BYTE PTR [esi],dh
  42745b:	stos   DWORD PTR es:[edi],eax
  42745c:	mov    ds:0x318fd89d,al
  427461:	clc    
  427462:	dec    esi
  427463:	rcr    BYTE PTR [ebx],0x8c
  427466:	fwait
  427467:	cmc    
  427468:	cld    
  427469:	xchg   edi,eax
  42746a:	mov    fs,eax
  42746c:	call   DWORD PTR [ebp+0xd2f3492]
  427472:	xchg   ebp,eax
  427473:	test   BYTE PTR [eax+0x76],0x40
  427477:	pop    ecx
  427478:	jb     0x427493
  42747a:	pop    esi
  42747b:	sub    ch,cl
  42747d:	stos   BYTE PTR es:[edi],al
  42747e:	es inc esp
  427480:	addr16 out dx,al
  427482:	cmp    ch,BYTE PTR [eax+ebp*2]
  427485:	fisub  DWORD PTR [ebx]
  427487:	cmp    eax,0x43ff8587
  42748c:	iret   
  42748d:	cmp    al,0x32
  42748f:	adc    al,0x9b
  427491:	sub    eax,edx
  427493:	pop    ss
  427494:	mov    ds:0x57a12e74,eax
  427499:	stos   BYTE PTR es:[edi],al
  42749a:	jbe    0x427458
  42749c:	sbb    esp,DWORD PTR [esi-0x1c9eb7ef]
  4274a2:	dec    ebp
  4274a3:	scas   eax,DWORD PTR es:[edi]
  4274a4:	scas   eax,DWORD PTR es:[edi]
  4274a5:	push   es
  4274a6:	jmp    0x9738319a
  4274ab:	ds fs in al,0xa3
  4274af:	jge    0x427520
  4274b1:	and    ecx,edi
  4274b3:	cs xchg esi,eax
  4274b5:	(bad)  
  4274b6:	jno    0x427533
  4274b8:	inc    ecx
  4274b9:	cmc    
  4274ba:	lds    edx,FWORD PTR [eax+0x1c]
  4274bd:	pop    edx
  4274be:	and    BYTE PTR [ecx+0x5d5d1a47],ch
  4274c4:	push   cs
  4274c5:	(bad)  [eax]
  4274c7:	imul   ebp,DWORD PTR [ecx-0xae461e4],0x79
  4274ce:	imul   ebp,DWORD PTR [esi-0xd3506fa],0x32
  4274d5:	pop    edi
  4274d6:	mov    cl,BYTE PTR [eax-0x7995d5f9]
  4274dc:	stos   DWORD PTR es:[edi],eax
  4274dd:	je     0x427462
  4274df:	rol    DWORD PTR ds:0xd55cfdaa,cl
  4274e5:	mov    eax,ds:0xa37f45c5
  4274ea:	jle    0x4274d2
  4274ec:	adc    eax,0x43db3a10
  4274f1:	(bad)  
  4274f2:	fmul   QWORD PTR [esi+0x9b7997b]
  4274f8:	pop    esp
  4274f9:	les    ebp,FWORD PTR [ecx]
  4274fb:	js     0x4274ce
  4274fd:	mov    ebx,0xe046f26c
  427502:	and    BYTE PTR [esi-0xce9b9ad],ch
  427508:	imul   eax,DWORD PTR [esi-0xf],0x4ae3c43b
  42750f:	and    al,0xe8
  427511:	loopne 0x4274cd
  427513:	daa    
  427514:	(bad)  
  427515:	scas   eax,DWORD PTR es:[edi]
  427516:	lahf   
  427517:	push   es
  427518:	out    dx,eax
  427519:	sub    al,0x7d
  42751b:	test   BYTE PTR [edi-0x180c0a70],al
  427521:	sbb    eax,0x5a33e50d
  427526:	lea    ebp,[ecx+eax*8]
  427529:	repz push ecx
  42752b:	lods   al,BYTE PTR ds:[esi]
  42752c:	daa    
  42752d:	aaa    
  42752e:	int    0x41
  427530:	or     al,0x14
  427532:	add    dl,BYTE PTR [edi]
  427534:	push   cs
  427535:	mov    al,ds:0x3e83a0e8
  42753a:	xchg   ecx,eax
  42753b:	bound  esp,QWORD PTR [esi+0x7889d626]
  427541:	pop    ebp
  427542:	add    DWORD PTR [esp+edi*4],edi
  427545:	jge    0x42755c
  427547:	jmp    FWORD PTR [ebp-0x15828ffd]
  42754d:	aas    
  42754e:	jmp    0x427591
  427550:	dec    esi
  427551:	iret   
  427552:	das    
  427553:	mov    eax,0x26436b46
  427558:	mov    eax,DWORD PTR [ecx]
  42755a:	stos   DWORD PTR es:[edi],eax
  42755b:	sbb    eax,edi
  42755d:	cs cmp al,0x5
  427560:	sti    
  427561:	push   ecx
  427562:	sahf   
  427563:	iret   
  427564:	jne    0x42753d
  427566:	or     BYTE PTR ss:[edi],ah
  427569:	adc    ebp,DWORD PTR [esi]
  42756b:	cmc    
  42756c:	mov    ebp,DWORD PTR [edi+0x3fb5efd9]
  427572:	and    BYTE PTR [ecx],cl
  427574:	and    eax,0x538e19d5
  427579:	out    dx,al
  42757a:	push   0x27
  42757c:	ins    DWORD PTR es:[edi],dx
  42757d:	pop    ebx
  42757e:	icebp  
  42757f:	adc    BYTE PTR [ebp+0x6f2773d6],0x9b
  427586:	xchg   ebx,eax
  427587:	pop    es
  427588:	inc    esp
  427589:	and    BYTE PTR [ebp+0x7],ah
  42758c:	xor    bl,BYTE PTR [edi+0x3a]
  42758f:	add    ch,bl
  427591:	sbb    BYTE PTR [edi+0x408ecd20],cl
  427597:	mov    ds:0xe7098ed8,eax
  42759c:	xchg   edi,eax
  42759d:	jl     0x4275bd
  42759f:	lock shl BYTE PTR ds:0xa8ad335,0x80
  4275a7:	cmp    al,BYTE PTR [edx+edi*8+0x47]
  4275ab:	push   ebp
  4275ac:	pop    esp
  4275ad:	rcr    DWORD PTR [eax+0x6d],0x10
  4275b1:	mov    dl,ah
  4275b3:	pop    ds
  4275b4:	loope  0x427613
  4275b6:	arpl   WORD PTR [edx+0x29],sp
  4275b9:	mov    bh,0xd6
  4275bb:	inc    edi
  4275bc:	dec    ebx
  4275bd:	mov    WORD PTR [ebx+0x59],ds
  4275c0:	adc    ebp,DWORD PTR [bx-0x3eca]
  4275c5:	push   ebx
  4275c6:	mov    esp,0x17f8c70e
  4275cb:	aas    
  4275cc:	jle    0x4275f1
  4275ce:	sub    ebx,ebx
  4275d0:	mov    ch,dh
  4275d2:	jnp    0x427606
  4275d4:	push   cs
  4275d5:	mov    ebp,0x47501bf8
  4275da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275db:	jmp    0xd6a6a30
  4275e0:	repnz or cl,BYTE PTR [ebx+ecx*8-0x71]
  4275e5:	adc    eax,0x681e9cb9
  4275ea:	jge    0x427634
  4275ec:	repnz cmp BYTE PTR ds:0x3b522b48,dl
  4275f4:	cwde   
  4275f5:	adc    ecx,0x43
  4275f8:	pop    es
  4275f9:	push   0xe00b91f9
  4275fe:	or     eax,0xb9fc495a
  427603:	cmp    ah,al
  427605:	jmp    0x9561:0x88ca2a5c
  42760c:	stc    
  42760d:	xchg   esp,eax
  42760e:	dec    ebp
  42760f:	nop
  427610:	adc    edi,esp
  427612:	pop    eax
  427613:	stc    
  427614:	xor    eax,0x5ef75a40
  427619:	test   DWORD PTR [edx+0xaf091e4],esi
  42761f:	jp     0x427615
  427621:	pop    ebx
  427622:	(bad)  
  427623:	fbld   TBYTE PTR [ebx-0x75ac7382]
  427629:	sbb    eax,0x71ab2f57
  42762e:	xor    DWORD PTR [ebx-0x63],esp
  427631:	mov    ds:0xff33db16,eax
  427636:	inc    esp
  427637:	mov    ah,0x2c
  427639:	stos   DWORD PTR es:[edi],eax
  42763a:	outs   dx,BYTE PTR ds:[esi]
  42763b:	dec    edi
  42763c:	mov    bl,0x2b
  42763e:	loopne 0x42760f
  427640:	shr    ah,cl
  427642:	xchg   edx,eax
  427643:	fisub  WORD PTR [ecx]
  427645:	jb     0x4276b2
  427647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427648:	aaa    
  427649:	xchg   ebp,eax
  42764a:	jbe    0x42767d
  42764c:	sbb    ch,BYTE PTR [edx+0xe62bbac]
  427652:	gs push esi
  427654:	cs xchg edi,eax
  427656:	js     0x42766e
  427658:	test   DWORD PTR [edx-0x5fb0b673],0x46c77b39
  427662:	and    dl,bh
  427664:	or     al,0x5d
  427666:	jecxz  0x42760a
  427668:	fs inc edx
  42766a:	mov    al,0x38
  42766c:	pop    esi
  42766d:	pop    edi
  42766e:	mov    ch,0xe4
  427670:	gs daa 
  427672:	cli    
  427673:	test   eax,0x3c9cb990
  427678:	out    0x91,eax
  42767a:	or     ah,BYTE PTR [eax-0x2b]
  42767d:	adc    eax,0x21ea9299
  427682:	shl    BYTE PTR [ebp+0x59],cl
  427685:	out    dx,al
  427686:	jno    0x42762b
  427688:	and    al,0x83
  42768a:	call   0x372ccad3
  42768f:	dec    ecx
  427690:	mov    al,0xc4
  427692:	lahf   
  427693:	sub    DWORD PTR [edi-0x7e],esp
  427696:	or     bh,BYTE PTR [ebx]
  427698:	jecxz  0x427638
  42769a:	pop    esp
  42769b:	mov    ?,WORD PTR [edx]
  42769d:	ss sahf 
  42769f:	ret    
  4276a0:	dec    ebp
  4276a1:	xor    eax,0xcd7f2a2c
  4276a6:	xor    eax,0xf2737e7c
  4276ab:	scas   al,BYTE PTR es:[edi]
  4276ac:	mov    bl,0xab
  4276ae:	inc    edx
  4276af:	fnstsw WORD PTR [ebp-0x4]
  4276b2:	push   eax
  4276b3:	dec    edx
  4276b4:	arpl   WORD PTR [edx-0x293ce239],sp
  4276ba:	(bad)  
  4276bb:	push   edx
  4276bc:	int    0x62
  4276be:	aaa    
  4276bf:	jl     0x427685
  4276c1:	inc    edi
  4276c2:	sbb    DWORD PTR [ebp+esi*2+0x75],ecx
  4276c6:	and    al,0x72
  4276c8:	sub    bl,cl
  4276ca:	dec    eax
  4276cb:	xchg   ah,ah
  4276cd:	in     eax,0xcd
  4276cf:	xor    dh,BYTE PTR [esi+0x6e]
  4276d2:	rcr    BYTE PTR [edi+0xfb9e995],1
  4276d8:	dec    edi
  4276d9:	cli    
  4276da:	test   BYTE PTR ds:0x7491bed4,dl
  4276e0:	jge    0x4276df
  4276e2:	(bad)  
  4276e3:	neg    BYTE PTR [eax+0x358f70ff]
  4276e9:	mov    WORD PTR [esi+0x2],ds
  4276ec:	xchg   ecx,eax
  4276ed:	icebp  
  4276ee:	xor    DWORD PTR [ebx-0x6],ecx
  4276f1:	pop    esp
  4276f2:	call   0x14e7:0xe2eb2dba
  4276f9:	xor    BYTE PTR [ebx+0x3d],ah
  4276fc:	sub    eax,0x22a34b8f
  427701:	lock enter 0x20c2,0x58
  427706:	inc    ecx
  427707:	shl    BYTE PTR [esi-0x306363db],0x43
  42770e:	and    BYTE PTR [eax-0x52],ah
  427711:	mov    eax,ds:0xc745a46d
  427716:	popa   
  427717:	add    eax,DWORD PTR [esi-0x7254f5c3]
  42771d:	into   
  42771e:	cmp    eax,0xbda1a19f
  427723:	cmp    ebx,DWORD PTR [eax+0x13]
  427726:	(bad)  
  427727:	pop    ebp
  427728:	push   ecx
  427729:	imul   edx,DWORD PTR [eax-0x7],0xa42cc08a
  427730:	xchg   esi,eax
  427731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427732:	mov    esp,0x10278436
  427737:	dec    ebx
  427738:	xor    ecx,DWORD PTR [ecx-0x200a73c8]
  42773e:	outs   dx,BYTE PTR ds:[esi]
  42773f:	pop    edi
  427740:	retf   0xdf5b
  427743:	shl    ch,1
  427745:	push   ebp
  427746:	push   esi
  427747:	dec    ebx
  427748:	add    eax,0xfa226fa3
  42774d:	cmp    ch,BYTE PTR [ebx+0x5de9d302]
  427753:	sti    
  427754:	add    ch,BYTE PTR [ebx-0xd]
  427757:	mov    esi,0x6ed84e22
  42775c:	pop    ss
  42775d:	or     bh,BYTE PTR [ebp-0x6c222a95]
  427763:	popa   
  427764:	xchg   ebp,eax
  427765:	cld    
  427766:	jne    0x42778a
  427768:	push   eax
  427769:	aaa    
  42776a:	and    eax,0x8ab49851
  42776f:	xor    BYTE PTR [esi-0x1be1133e],dl
  427775:	pop    edi
  427776:	pop    es
  427777:	dec    edi
  427778:	mov    edi,0x8ce77b8a
  42777d:	add    dl,BYTE PTR [esi+0x6aa15c9c]
  427783:	xchg   esi,eax
  427784:	xchg   esi,eax
  427785:	jg     0x4277f6
  427787:	lods   al,BYTE PTR ds:[esi]
  427788:	repz mov eax,0x911905ec
  42778e:	push   esi
  42778f:	shl    BYTE PTR [esi],1
  427791:	dec    esi
  427792:	into   
  427793:	pop    ds
  427794:	int3   
  427795:	jg     0x4277aa
  427797:	adc    al,0x2e
  427799:	cmp    esp,ebp
  42779b:	xlat   BYTE PTR ds:[ebx]
  42779c:	or     al,0xe2
  42779e:	adc    eax,0x1c5c6fb9
  4277a3:	ins    DWORD PTR es:[edi],dx
  4277a4:	pop    edx
  4277a5:	sbb    eax,0xff360bbf
  4277aa:	cmp    ah,BYTE PTR [edx]
  4277ac:	(bad)  
  4277ae:	cmp    BYTE PTR [eax+0x2325660a],cl
  4277b4:	ds push edx
	...
  4277be:	add    BYTE PTR [eax],al
  4277c0:	add    BYTE PTR [esp+eax*2],ch
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp+0x28b2a276]
  4277cf:	push   ebx
  4277d0:	cld    
  4277d1:	jmp    0x3:0xad0001ed
  4277d8:	add    BYTE PTR ds:0x2509c7,dh
  4277de:	sub    dh,0xaa
  4277e1:	jl     0x427858
  4277e3:	out    0x7c,eax
  4277e5:	dec    eax
  4277e6:	fsubr  DWORD PTR [eax+0x4381dc20]
  4277ec:	fld    QWORD PTR [edi-0x4]
  4277ef:	jns    0x42777c
  4277f1:	popf   
  4277f2:	mov    al,ds:0xf5e9b8d4
  4277f7:	addr16 mov ecx,0xb594c400
  4277fd:	add    al,0x1c
  4277ff:	jg     0x4277e6
  427801:	stos   BYTE PTR es:[edi],al
  427802:	add    eax,0x92ca71d
  427807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427808:	shl    ah,0x63
  42780b:	sbb    dl,bh
  42780d:	fwait
  42780e:	js     0x42787f
  427810:	retf   
  427811:	pop    ss
  427812:	mov    edx,0x4a81c335
  427817:	arpl   WORD PTR [eax],di
  427819:	sti    
  42781a:	xchg   esp,eax
  42781b:	imul   DWORD PTR [esi+ebx*4+0x6c00e226]
  427822:	mov    al,ds:0x31f80c97
  427827:	mov    edi,0xf33c3628
  42782c:	sbb    eax,0x448a8493
  427831:	xchg   ebx,eax
  427832:	push   es
  427833:	push   0xe11fee52
  427838:	aas    
  427839:	inc    esp
  42783a:	mov    ebp,0x728fec66
  427840:	pop    edx
  427841:	test   BYTE PTR [edx-0x34],al
  427844:	mov    WORD PTR [ecx+0x236ad05b],es
  42784a:	imul   esi,ebx,0x28b6b646
  427850:	test   DWORD PTR [esi-0x4c],0x455dd133
  427857:	xor    DWORD PTR [edi+0x1],esi
  42785a:	ret    0xacd9
  42785d:	push   0xffffffd0
  42785f:	cmp    bl,BYTE PTR [eax]
  427861:	xchg   ebp,eax
  427862:	mov    ch,0xb
  427864:	sbb    eax,0xa57ab9fb
  427869:	push   esi
  42786a:	jl     0x427881
  42786c:	iret   
  42786d:	or     esp,DWORD PTR [ebp+0x139a3448]
  427873:	mov    al,0xcf
  427875:	jg     0x4277f7
  427877:	addr16 sub al,0x70
  42787a:	pushf  
  42787b:	call   0x27f8:0xbc238e8d
  427882:	mov    ds:0x8c3a14db,eax
  427887:	mov    DWORD PTR [ecx],eax
  427889:	mov    dh,0xa8
  42788b:	cmp    al,0xa3
  42788d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42788e:	(bad)  
  42788f:	mul    BYTE PTR [edx+0x2acd9fe6]
  427895:	aam    0x6f
  427897:	adc    BYTE PTR [edi+0x6048ee3f],dl
  42789d:	ffree  st(2)
  42789f:	pop    edx
  4278a0:	cld    
  4278a1:	scas   al,BYTE PTR es:[edi]
  4278a2:	push   cs
  4278a3:	mov    esp,0xf9742564
  4278a8:	mov    bh,0xf1
  4278aa:	add    ebp,DWORD PTR [edi+esi*1-0x133a4d37]
  4278b1:	mov    dh,0x79
  4278b3:	or     edi,DWORD PTR [edx-0x61]
  4278b6:	cwde   
  4278b7:	xchg   edx,eax
  4278b8:	adc    BYTE PTR [eax-0x6efc1f02],cl
  4278be:	pop    ecx
  4278bf:	clc    
  4278c0:	cs pop esi
  4278c2:	pusha  
  4278c3:	out    dx,eax
  4278c4:	and    eax,DWORD PTR [esi-0x3dabbb7b]
  4278ca:	add    al,0xd8
  4278cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278cd:	add    dl,al
  4278cf:	jo     0x427891
  4278d1:	popa   
  4278d2:	mov    dl,dh
  4278d4:	popf   
  4278d5:	cdq    
  4278d6:	xchg   ecx,edi
  4278d8:	push   ebx
  4278d9:	in     eax,dx
  4278da:	sub    esp,DWORD PTR [esi]
  4278dc:	push   es
  4278dd:	sahf   
  4278de:	call   0x2e94e416
  4278e3:	in     al,0xba
  4278e5:	in     al,dx
  4278e6:	loop   0x4278a7
  4278e8:	stos   BYTE PTR es:[di],al
  4278ea:	mov    esi,DWORD PTR [ecx-0x144cd925]
  4278f0:	mov    eax,0x9fd1c30d
  4278f5:	adc    DWORD PTR cs:0xa38982c9,edi
  4278fc:	lods   al,BYTE PTR ds:[esi]
  4278fd:	mov    eax,DWORD PTR [edx-0x1e3bcab3]
  427903:	ret    
  427904:	mov    ah,0xfa
  427906:	lock sub eax,0x7a143da8
  42790c:	pop    ecx
  42790d:	xor    al,0x15
  42790f:	push   ss
  427910:	cmp    eax,0xe1018679
  427915:	jno    0x4278ff
  427917:	xor    dh,BYTE PTR [edx+0x79]
  42791a:	xor    al,0x87
  42791c:	ficom  WORD PTR [edx+0x2e]
  42791f:	or     esi,esi
  427921:	or     DWORD PTR [edx+edi*4],0x2133564d
  427928:	(bad)  
  427929:	mov    cl,BYTE PTR ds:0x56feca3d
  42792f:	mov    edx,0x63f3b64e
  427934:	push   edi
  427935:	jbe    0x42798b
  427937:	mov    ecx,edi
  427939:	das    
  42793a:	div    DWORD PTR [eax+0x35]
  42793d:	and    ecx,esi
  42793f:	mov    esi,0x4a5d7e8
  427944:	and    al,BYTE PTR [eax-0x4307ff21]
  42794a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42794b:	fwait
  42794c:	clc    
  42794d:	gs test eax,0x3e65b526
  427953:	fidivr DWORD PTR [edi-0x1932a6bd]
  427959:	shr    BYTE PTR [ecx],1
  42795b:	add    esp,esp
  42795d:	hlt    
  42795e:	or     ecx,esp
  427960:	lods   eax,DWORD PTR ds:[esi]
  427961:	dec    esi
  427962:	call   0x5d7:0x674e65bf
  427969:	not    dl
  42796b:	lods   al,BYTE PTR ds:[esi]
  42796c:	add    al,0xf7
  42796e:	lods   al,BYTE PTR ds:[esi]
  42796f:	xchg   esp,eax
  427970:	data16 shl BYTE PTR [edi+ebp*8-0x3b],cl
  427975:	and    ecx,DWORD PTR [ebx+0x11e74dbe]
  42797b:	jb     0x42792a
  42797d:	loope  0x42799b
  42797f:	shr    BYTE PTR [ebx+0x61],0x54
  427983:	push   esi
  427984:	pop    ecx
  427985:	ds push es
  427987:	push   ds
  427988:	sub    eax,0x316a54d8
  42798d:	sub    edx,0x59
  427990:	pushf  
  427991:	retf   
  427992:	jae    0x4279a5
  427994:	sbb    edx,DWORD PTR [ebx-0x13d2c2fe]
  42799a:	xchg   BYTE PTR [esi],dh
  42799c:	cdq    
  42799d:	add    ah,bh
  42799f:	dec    edx
  4279a0:	sub    DWORD PTR [eax],ebx
  4279a2:	gs ins BYTE PTR es:[edi],dx
  4279a4:	xchg   ah,ah
  4279a6:	push   cs
  4279a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279a8:	and    BYTE PTR [edi+0x7],bh
  4279ab:	xchg   ebp,eax
  4279ac:	out    dx,al
  4279ad:	aaa    
  4279ae:	iret   
  4279af:	and    bl,ah
  4279b1:	retf   0x5bcf
  4279b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b5:	mov    es,bp
  4279b8:	outs   dx,DWORD PTR ds:[esi]
  4279b9:	jnp    0x4279e3
  4279bb:	loop   0x42797f
  4279bd:	clc    
  4279be:	out    0x87,al
  4279c0:	mov    ds:0x592c843b,eax
  4279c5:	push   esp
  4279c6:	stos   DWORD PTR es:[edi],eax
  4279c7:	push   esp
  4279c8:	ds sub eax,0xa92ed2c8
  4279ce:	inc    ebx
  4279cf:	cld    
  4279d0:	pop    es
  4279d1:	clc    
  4279d2:	jge    0x427a21
  4279d4:	xchg   edi,eax
  4279d5:	mov    dl,0xc8
  4279d7:	jae    0x427a16
  4279d9:	xchg   ebx,eax
  4279da:	jmp    0x71e:0xe70df593
  4279e1:	adc    eax,0x8cafd46a
  4279e6:	das    
  4279e7:	cmp    dl,BYTE PTR ds:[eax]
  4279ea:	mov    cl,BYTE PTR ds:0x7fbbc6b2
  4279f0:	scas   al,BYTE PTR es:[edi]
  4279f1:	je     0x427992
  4279f3:	sti    
  4279f4:	ins    DWORD PTR es:[edi],dx
  4279f5:	scas   eax,DWORD PTR es:[edi]
  4279f6:	pushf  
  4279f7:	adc    dl,cl
  4279f9:	in     al,0x51
  4279fb:	pop    edx
  4279fc:	push   esp
  4279fd:	and    esi,DWORD PTR [ebx+edi*8+0x1c]
  427a01:	mov    ebx,0xf3a9d2fd
  427a06:	and    DWORD PTR [edx+0x22de9c11],eax
  427a0c:	jae    0x4279f0
  427a0e:	mov    ah,0xdc
  427a10:	and    ch,ah
  427a12:	push   ebx
  427a13:	push   esp
  427a14:	stos   DWORD PTR es:[edi],eax
  427a15:	mov    DWORD PTR [edx-0x42],edi
  427a18:	test   DWORD PTR [edi],ebx
  427a1a:	sub    esi,DWORD PTR [esi-0x61edd96c]
  427a20:	stos   DWORD PTR es:[edi],eax
  427a21:	mov    ah,0x31
  427a23:	mov    esp,0xef375c71
  427a28:	inc    edx
  427a29:	and    DWORD PTR [esi-0x13168f53],0xffffff98
  427a30:	scas   al,BYTE PTR es:[edi]
  427a31:	mov    ds:0xd08bf8e8,al
  427a36:	xacquire xchg BYTE PTR [ebx],dh
  427a39:	jmp    0x962d90ec
  427a3e:	retf   0xd914
  427a41:	lods   al,BYTE PTR ds:[esi]
  427a42:	xlat   BYTE PTR ds:[ebx]
  427a43:	mov    esp,0x5023a40
  427a48:	and    DWORD PTR [ebx],edi
  427a4a:	(bad)  
  427a4b:	mov    esp,0xb70a3e10
  427a50:	add    ebx,edx
  427a52:	fstp   TBYTE PTR [ebp+0x5b]
  427a55:	sahf   
  427a56:	(bad)  
  427a57:	jmp    0x427a58
  427a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a5a:	xor    BYTE PTR [esp+ebx*2],bl
  427a5d:	std    
  427a5e:	rep stos DWORD PTR es:[edi],eax
  427a60:	(bad)  
  427a61:	mov    dl,0x99
  427a63:	es (bad) 
  427a66:	sbb    BYTE PTR [ecx],ah
  427a68:	mov    dh,0x53
  427a6a:	pop    ds
  427a6b:	xor    BYTE PTR [edi],0xa5
  427a6e:	jb     0x427a49
  427a70:	dec    ebx
  427a71:	and    BYTE PTR [edx],cl
  427a73:	or     cl,0xf5
  427a76:	xlat   BYTE PTR ds:[ebx]
  427a77:	and    BYTE PTR [esi+0x29],0x69
  427a7b:	lock adc eax,DWORD PTR [edi+0x3]
  427a7f:	adc    al,0xa5
  427a81:	cmp    bl,dl
  427a83:	fisttp WORD PTR [esi+0x1a]
  427a86:	out    dx,eax
  427a87:	pop    eax
  427a88:	ret    0x2fa1
  427a8b:	aad    0xd7
  427a8d:	cs in  eax,dx
  427a8f:	jecxz  0x427b0a
  427a91:	add    DWORD PTR [ebx],eax
  427a93:	sbb    al,dl
  427a95:	ret    0xc12c
  427a98:	outs   dx,DWORD PTR ds:[esi]
  427a99:	dec    BYTE PTR [ebx-0x2b174bf]
  427a9f:	xchg   BYTE PTR [esi],dh
  427aa1:	or     BYTE PTR [eax+0x44c44aaa],dh
  427aa7:	cmp    eax,0x9589138c
  427aac:	sar    BYTE PTR [eax],cl
  427aae:	outs   dx,DWORD PTR ds:[esi]
  427aaf:	rcl    BYTE PTR [ebp-0x6fafe332],1
  427ab5:	sbb    BYTE PTR [eax],cl
  427ab7:	imul   DWORD PTR [edi-0x58]
  427aba:	das    
  427abb:	mov    esi,DWORD PTR [ebx+0x13]
  427abe:	out    dx,al
  427abf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ac0:	iret   
  427ac1:	jb     0x427add
  427ac3:	push   0xc
  427ac5:	inc    ecx
  427ac6:	sahf   
  427ac7:	dec    ebp
  427ac8:	daa    
  427ac9:	xor    ah,BYTE PTR [ecx-0x254ca2eb]
  427acf:	mov    dh,0x89
  427ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ad2:	mov    BYTE PTR [eax-0x27797190],dl
  427ad8:	test   eax,0xc15290a0
  427add:	imul   BYTE PTR [edx+0x5da65c64]
  427ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ae4:	lods   al,BYTE PTR ds:[esi]
  427ae5:	stos   BYTE PTR es:[edi],al
  427ae6:	inc    edi
  427ae7:	and    DWORD PTR [esi],ecx
  427ae9:	jo     0x427af0
  427aeb:	cdq    
  427aec:	push   0x400da83f
  427af1:	jmp    0x1373b5b7
  427af6:	cmp    DWORD PTR [ecx-0x6a],esp
  427af9:	inc    edx
  427afa:	xchg   ebx,eax
  427afb:	ins    BYTE PTR es:[edi],dx
  427afc:	enter  0xac3b,0xd0
  427b00:	xchg   DWORD PTR [ebp+ebx*4-0x80],ebp
  427b04:	icebp  
  427b05:	inc    ebp
  427b06:	cmp    DWORD PTR [edi-0x68f162d7],edi
  427b0c:	call   0xd049:0x661d1d3c
  427b13:	nop
  427b14:	xlat   BYTE PTR ds:[ebx]
  427b15:	push   eax
  427b16:	cmp    al,0x1f
  427b18:	(bad)  
  427b19:	cmp    ebx,DWORD PTR [ebp-0xc]
  427b1c:	dec    ecx
  427b1d:	fucomp st(7)
  427b1f:	fldenv [esi-0x4d]
  427b22:	xchg   edi,eax
  427b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b24:	sahf   
  427b25:	lahf   
  427b26:	adc    DWORD PTR [esi],edx
  427b28:	cli    
  427b29:	shr    al,0xa4
  427b2c:	dec    ebp
  427b2d:	test   eax,0xcd8ecf7c
  427b32:	cdq    
  427b33:	lahf   
  427b34:	(bad)  
  427b35:	sbb    esi,DWORD PTR [edi-0x70]
  427b38:	inc    esi
  427b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b3a:	and    BYTE PTR [ebx+0x72],ah
  427b3d:	mov    ebx,esp
  427b3f:	sbb    ebx,DWORD PTR [ebp-0x920097f]
  427b45:	adc    DWORD PTR [ebx-0x2d9eee4f],edi
  427b4b:	and    esp,DWORD PTR [ecx+0x20]
  427b4e:	inc    eax
  427b4f:	test   ebp,ecx
  427b51:	and    ebp,edx
  427b53:	inc    edx
  427b54:	and    eax,DWORD PTR [ebx-0x423b8879]
  427b5a:	push   esi
  427b5b:	mov    ds:0xd7c0b130,al
  427b60:	fcomip st,st(7)
  427b62:	pop    ss
  427b63:	mov    ds:0x7dc14a19,eax
  427b68:	mov    ebx,0xd5da7787
  427b6d:	inc    BYTE PTR [esi-0x7d9d2ba8]
  427b73:	enter  0x5d46,0xd1
  427b77:	test   BYTE PTR [ecx+0x36],ch
  427b7a:	xchg   ecx,eax
  427b7b:	outs   dx,DWORD PTR ds:[esi]
  427b7c:	call   0x1db8c493
  427b81:	adc    eax,0xac19101c
	...
  427b8e:	add    BYTE PTR [eax],al
  427b90:	add    BYTE PTR [ebx],ch
  427b92:	loopne 0x427c0f
  427b94:	cmp    bl,bh
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [esi+0x18],esi
  427b9f:	hlt    
  427ba0:	imul   edx,DWORD PTR [edi-0x52fffe0f],0x3
  427ba7:	add    BYTE PTR [eax],al
  427ba9:	dec    esp
  427baa:	xlat   BYTE PTR ds:[ebx]
  427bab:	test   eax,0x6f75cb6e
  427bb0:	test   DWORD PTR [edi+0x74],edx
  427bb3:	cmp    al,0x12
  427bb5:	imul   esp,DWORD PTR [ebp-0x505e0c66],0xffffffeb
  427bbc:	lds    eax,FWORD PTR [eax+eiz*1+0x53571069]
  427bc3:	adc    eax,0x86ee8e66
  427bc8:	outs   dx,DWORD PTR ds:[esi]
  427bc9:	inc    ebp
  427bca:	pushf  
  427bcb:	addr16 fs mov al,0xe
  427bcf:	inc    ecx
  427bd0:	xor    eax,0x19ab19d6
  427bd5:	lods   al,BYTE PTR ds:[esi]
  427bd6:	and    eax,0xf3a0eb77
  427bdb:	and    BYTE PTR [ebx],dl
  427bdd:	add    esp,DWORD PTR [edx-0x23]
  427be0:	xor    ebx,DWORD PTR [ebp+0x7e0e1dbe]
  427be6:	xchg   ebx,eax
  427be7:	es inc esi
  427be9:	dec    ebp
  427bea:	(bad)  
  427beb:	mov    esi,0x3dca468e
  427bf0:	adc    al,0xaa
  427bf2:	jmp    0x10ce:0xc1c0ffd6
  427bf9:	jae    0x427c18
  427bfb:	mov    ebp,0xa56ebe78
  427c00:	pop    ebp
  427c01:	push   ebp
  427c02:	mov    es,WORD PTR [edi]
  427c04:	int    0x14
  427c06:	jno    0x427bf2
  427c08:	mov    cs,WORD PTR [ebp+0x39]
  427c0b:	jl     0x427c4b
  427c0d:	xchg   edx,eax
  427c0e:	xor    eax,DWORD PTR [ebp+0x56]
  427c11:	or     BYTE PTR [edx-0x10aa278e],al
  427c17:	pop    ebp
  427c18:	lea    eax,[edi]
  427c1a:	out    0xfd,al
  427c1c:	or     eax,0xd99f8dad
  427c21:	pop    ebx
  427c22:	mov    ebx,0xa7b127c7
  427c27:	jno    0x427c39
  427c29:	sub    DWORD PTR [ecx+0x1b56856b],edi
  427c2f:	sub    eax,0x98ad5c1f
  427c34:	test   eax,0x7693bf3b
  427c39:	outs   dx,BYTE PTR ds:[esi]
  427c3a:	rol    BYTE PTR [edi+0x6a3f5dd6],cl
  427c40:	sbb    ebx,DWORD PTR [ebx+0x5d]
  427c43:	mov    ebp,0x1260a052
  427c48:	and    esi,ebp
  427c4a:	pop    edx
  427c4b:	push   0xffffff9c
  427c4d:	mov    ds:0x279c25fe,eax
  427c52:	push   edx
  427c53:	sbb    ch,BYTE PTR [esi-0x5678a88f]
  427c59:	into   
  427c5a:	push   0xc75fee07
  427c5f:	addr16 pop es
  427c61:	mov    DWORD PTR [ecx],esp
  427c63:	leave  
  427c64:	mov    dl,0x9e
  427c66:	push   esi
  427c67:	or     al,0x5a
  427c69:	cmp    ah,BYTE PTR [esi+0xdac055]
  427c6f:	(bad)  
  427c71:	mov    ds:0x1ff18738,al
  427c76:	xchg   BYTE PTR [ebp-0x3b],al
  427c79:	outs   dx,BYTE PTR ds:[esi]
  427c7a:	jl     0x427c8b
  427c7c:	shl    ch,0xca
  427c7f:	aam    0x4
  427c81:	sbb    al,0x4a
  427c83:	dec    ecx
  427c84:	mov    ebp,0xceb7ead6
  427c89:	mov    cl,0xb9
  427c8b:	inc    eax
  427c8c:	mov    esi,0x5e1a0f4
  427c91:	mov    cl,0xd0
  427c93:	mov    esp,0xcc098634
  427c98:	aad    0x6c
  427c9a:	pop    ds
  427c9b:	inc    esi
  427c9c:	xchg   ebp,eax
  427c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c9e:	inc    esi
  427c9f:	pop    ebx
  427ca0:	add    al,0x23
  427ca2:	xchg   edx,eax
  427ca3:	adc    dl,BYTE PTR [edx+0x1f]
  427ca6:	fnsave [ebp+0x7b145d14]
  427cac:	jnp    0x427cbe
  427cae:	ja     0x427c89
  427cb0:	inc    edi
  427cb1:	or     al,0xc9
  427cb3:	xchg   ch,dh
  427cb5:	les    eax,FWORD PTR [edi-0x1463b42d]
  427cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cbc:	stos   BYTE PTR es:[edi],al
  427cbd:	adc    DWORD PTR [eax+0xf],ebp
  427cc0:	call   0x31d3:0xf3cb42d5
  427cc7:	add    DWORD PTR [esi-0x42],ebp
  427cca:	pop    ebp
  427ccb:	and    al,0x2d
  427ccd:	and    al,dl
  427ccf:	inc    edx
  427cd0:	pop    edi
  427cd1:	scas   al,BYTE PTR es:[edi]
  427cd2:	jbe    0x427d2b
  427cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cd5:	dec    ecx
  427cd6:	mov    dh,0x56
  427cd8:	inc    edi
  427cd9:	and    esp,DWORD PTR [edi-0x37]
  427cdc:	les    esp,FWORD PTR ds:[ecx]
  427cdf:	mov    esp,0xa5d92d7c
  427ce4:	jnp    0x427c7b
  427ce6:	mov    dh,0xd8
  427ce8:	iret   
  427ce9:	out    dx,eax
  427cea:	mov    edi,0xa71e4f12
  427cef:	xlat   BYTE PTR ds:[ebx]
  427cf0:	dec    ebx
  427cf1:	xor    dl,BYTE PTR [ebx]
  427cf3:	sbb    edi,DWORD PTR [edx]
  427cf5:	or     eax,0x4e5c10e3
  427cfa:	(bad)  
  427cfb:	xchg   ebp,eax
  427cfc:	ja     0x427c8b
  427cfe:	in     eax,dx
  427cff:	call   0x264b2979
  427d04:	mov    esi,0x7ef4c9a7
  427d09:	outs   dx,DWORD PTR ds:[esi]
  427d0a:	int    0x8a
  427d0c:	test   al,0x89
  427d0e:	imul   ebx,DWORD PTR [edi-0x2e],0x38
  427d12:	mov    ds:0xe698b6d5,al
  427d17:	add    bh,0x96
  427d1a:	mov    dh,0x6f
  427d1c:	push   cs
  427d1d:	push   esi
  427d1e:	ret    0x9a79
  427d21:	stc    
  427d22:	cmp    DWORD PTR [ebx+0x2d],eax
  427d25:	ret    0x95cd
  427d28:	inc    esi
  427d29:	xchg   ebx,eax
  427d2a:	es clc 
  427d2c:	icebp  
  427d2d:	lahf   
  427d2e:	or     DWORD PTR [eax-0x4c],eax
  427d31:	adc    ch,dl
  427d33:	(bad)
  427d37:	or     edi,edx
  427d39:	lds    ecx,FWORD PTR [edi+edi*4]
  427d3c:	(bad)  
  427d3d:	popf   
  427d3e:	in     eax,dx
  427d3f:	inc    ecx
  427d40:	in     eax,0xf1
  427d42:	dec    edx
  427d43:	inc    edx
  427d44:	scas   al,BYTE PTR es:[edi]
  427d45:	and    al,0x74
  427d47:	imul   ebp,DWORD PTR [edx+0x47],0x33991e47
  427d4e:	arpl   WORD PTR [ecx],si
  427d50:	pop    eax
  427d51:	sbb    eax,0x4a979b9f
  427d56:	dec    ecx
  427d57:	xor    dh,BYTE PTR [edx-0x2b90642e]
  427d5d:	push   cs
  427d5e:	sub    BYTE PTR [eax+0x31bcec0],dh
  427d64:	pop    edi
  427d65:	inc    edi
  427d66:	jae    0x427d0f
  427d68:	inc    edi
  427d69:	mov    cl,0x2
  427d6b:	in     eax,dx
  427d6c:	fcmovnbe st,st(3)
  427d6e:	xlat   BYTE PTR fs:[ebx]
  427d70:	sbb    cl,dl
  427d72:	std    
  427d73:	add    bl,BYTE PTR [ecx]
  427d75:	std    
  427d76:	fiadd  DWORD PTR [edx+0x1d]
  427d79:	cmp    BYTE PTR [ebp-0x142dd8b],0xa5
  427d80:	mov    bh,0x21
  427d82:	rcl    ch,1
  427d84:	sbb    DWORD PTR [ebx-0x6b82d330],eax
  427d8a:	pop    esi
  427d8b:	pop    ss
  427d8c:	mov    dl,0xb9
  427d8e:	mov    ecx,edi
  427d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d91:	xlat   BYTE PTR ds:[ebx]
  427d92:	mov    al,0x80
  427d94:	cmp    dh,BYTE PTR [ecx]
  427d96:	adc    DWORD PTR [esp+ecx*1],ecx
  427d99:	repz jnp 0x427db5
  427d9c:	mov    al,ds:0x29352417
  427da1:	shr    BYTE PTR [esi-0xbcba820],cl
  427da7:	aad    0xe9
  427da9:	pushf  
  427daa:	pushf  
  427dab:	imul   esp,DWORD PTR [eax-0x8],0x6a
  427daf:	cmp    cl,cl
  427db1:	or     ebx,eax
  427db3:	add    ebx,ebx
  427db5:	das    
  427db6:	jmp    0x233c:0x495f10ce
  427dbd:	int3   
  427dbe:	fs inc edx
  427dc0:	adc    bl,0x75
  427dc3:	frstor [ebx-0x56]
  427dc6:	test   DWORD PTR [edx],esp
  427dc8:	push   ds
  427dc9:	pushf  
  427dca:	jb     0x427e09
  427dcc:	icebp  
  427dcd:	std    
  427dce:	sub    bl,dl
  427dd0:	xchg   ebp,eax
  427dd1:	test   eax,0x97c11de0
  427dd6:	std    
  427dd7:	stos   BYTE PTR es:[edi],al
  427dd8:	cmp    DWORD PTR [esi-0x4c],0xad776d04
  427ddf:	fmul   DWORD PTR [edx+0x5d]
  427de2:	jp     0x427dcf
  427de4:	shr    edx,0x1f
  427de7:	dec    ebx
  427de8:	repnz xlat BYTE PTR ds:[ebx]
  427dea:	fst    QWORD PTR [ebx-0x78]
  427ded:	ss js  0x427e54
  427df0:	lea    edi,[esi+0x3505362d]
  427df6:	icebp  
  427df7:	sahf   
  427df8:	jns    0x427e2e
  427dfa:	retf   
  427dfb:	mov    ds,eax
  427dfd:	fidiv  WORD PTR [ebx+0x3ba7b8ab]
  427e03:	(bad)  
  427e05:	adc    esi,DWORD PTR [edx-0x4dba3b3a]
  427e0b:	sub    DWORD PTR [eax+0xf93c26c],ebx
  427e11:	pop    ds
  427e12:	std    
  427e13:	adc    ebp,DWORD PTR [edi+0x5d25b121]
  427e19:	jecxz  0x427d9b
  427e1b:	lock dec ebp
  427e1d:	shl    BYTE PTR [ecx+ecx*1-0x63],cl
  427e21:	cli    
  427e22:	mov    ebp,edx
  427e24:	push   ss
  427e25:	sub    BYTE PTR [esi+0x5bdf6e1b],ah
  427e2b:	jge    0x427e59
  427e2d:	push   edi
  427e2e:	xchg   esi,esp
  427e30:	and    BYTE PTR [edx-0xe26cd8b],cl
  427e36:	imul   esi,DWORD PTR [edx],0xffffffdb
  427e39:	pop    esp
  427e3a:	add    al,BYTE PTR [esi+0x8]
  427e3d:	in     al,dx
  427e3e:	jecxz  0x427dc1
  427e40:	mov    bl,BYTE PTR [edi]
  427e42:	ins    DWORD PTR es:[edi],dx
  427e43:	pop    ebp
  427e44:	push   esi
  427e45:	outs   dx,DWORD PTR ds:[esi]
  427e46:	xchg   edx,eax
  427e47:	jle    0x427e54
  427e49:	jne    0x427e08
  427e4b:	shr    DWORD PTR [edx],0xff
  427e4e:	in     eax,dx
  427e4f:	mov    cl,0x71
  427e51:	(bad)  
  427e52:	cli    
  427e53:	sbb    BYTE PTR [ebp+0x49042f84],al
  427e59:	and    al,0x91
  427e5b:	and    edi,DWORD PTR ds:0x483c8166
  427e61:	cld    
  427e62:	jno    0x427eac
  427e64:	jmp    0x9ddd:0xb89453d7
  427e6b:	stc    
  427e6c:	pushf  
  427e6d:	gs jg  0x427e81
  427e70:	push   edx
  427e71:	cdq    
  427e72:	dec    edx
  427e73:	or     al,BYTE PTR [edx+ebx*1+0x4f]
  427e77:	clc    
  427e78:	inc    edx
  427e79:	int    0x1a
  427e7b:	push   esp
  427e7c:	cmp    DWORD PTR [ebx+0x149f1069],0xb45bd89
  427e86:	mov    DWORD PTR [edx+ebp*4],0xf35325f
  427e8d:	pop    eax
  427e8e:	xlat   BYTE PTR ds:[ebx]
  427e8f:	dec    edx
  427e90:	fs jecxz 0x427e63
  427e93:	xor    eax,0x94e6e289
  427e98:	enter  0x50d4,0x24
  427e9c:	push   0x40
  427e9e:	xor    DWORD PTR [ecx+eiz*2-0xd1cefa8],ebp
  427ea5:	test   al,0x77
  427ea7:	(bad)  
  427ea8:	pop    ecx
  427ea9:	sbb    al,BYTE PTR [edx-0x49b51d8d]
  427eaf:	enter  0xedb3,0x9
  427eb3:	sbb    BYTE PTR [edi-0x3cda439],bl
  427eb9:	xor    al,0xb5
  427ebb:	xchg   esp,eax
  427ebc:	iret   
  427ebd:	add    cl,ch
  427ebf:	mov    ebp,esp
  427ec1:	add    esp,DWORD PTR [esi-0x12285053]
  427ec7:	dec    ebp
  427ec8:	adc    eax,0xc711170
  427ecd:	and    eax,0xa35066e7
  427ed2:	retf   0x59a2
  427ed5:	and    BYTE PTR [eax+edi*4+0x2cf17aa6],dh
  427edc:	jns    0x427f0b
  427ede:	mov    al,ds:0x8d09676
  427ee3:	lods   al,BYTE PTR ds:[esi]
  427ee4:	xor    eax,0xf4cfd14b
  427ee9:	inc    esi
  427eea:	inc    esp
  427eeb:	cmp    DWORD PTR [esi-0x6dc84591],ebp
  427ef1:	into   
  427ef2:	and    DWORD PTR [eax+0x5d113f78],esi
  427ef8:	cld    
  427ef9:	mov    ah,0xaf
  427efb:	jecxz  0x427eac
  427efd:	sbb    eax,0x5c3fc577
  427f02:	imul   BYTE PTR [ebx]
  427f04:	jne    0x427f17
  427f06:	loop   0x427efe
  427f08:	retf   0x88d
  427f0b:	inc    esp
  427f0c:	add    esi,DWORD PTR [eax-0x47]
  427f0f:	xchg   ebx,eax
  427f10:	cmp    BYTE PTR [eax],cl
  427f12:	test   BYTE PTR [edi+0x34f91159],bl
  427f18:	div    DWORD PTR [edx]
  427f1a:	iret   
  427f1b:	or     al,0xa8
  427f1d:	loope  0x427eab
  427f1f:	mov    eax,0x13c9e290
  427f24:	std    
  427f25:	adc    al,0x1
  427f27:	adc    DWORD PTR [eax+0x5c],ebp
  427f2a:	(bad)  
  427f2b:	repnz in eax,0x83
  427f2e:	in     eax,dx
  427f2f:	inc    edx
  427f30:	or     BYTE PTR [edx-0x141891b9],0x49
  427f37:	xor    edx,DWORD PTR [ebx+0x79]
  427f3a:	mov    WORD PTR [esp+ebp*8-0x40],fs
  427f3e:	out    dx,al
  427f3f:	xor    esi,DWORD PTR [edi+0xa455cf3]
  427f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f46:	fidivr DWORD PTR [eax]
  427f48:	and    BYTE PTR ds:0x45f09b20,ch
  427f4e:	sub    dh,ah
  427f50:	lock dec esp
  427f52:	imul   edi,edi,0xffffffae
  427f55:	push   0x0
  427f5a:	add    BYTE PTR [eax],al
  427f5c:	add    BYTE PTR [eax],al
  427f5e:	add    BYTE PTR [eax],al
  427f60:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  427f67:	mov    dh,0xeb
  427f69:	xor    BYTE PTR [eax-0xc21441f],ch
  427f6f:	test   eax,0x1f54481
  427f74:	add    BYTE PTR [ebp-0x57fffffd],ch
  427f7a:	mov    ds:0x34002f37,eax
  427f7f:	arpl   WORD PTR [ebx],di
  427f81:	in     al,0x65
  427f83:	ja     0x427f2c
  427f85:	ja     0x427f74
  427f87:	rol    BYTE PTR [esi+0x1b9131aa],0x64
  427f8e:	dec    esi
  427f8f:	push   ebp
  427f90:	cmp    esi,ebp
  427f92:	cmp    edi,DWORD PTR [ebx+edx*8+0x4e9f7a36]
  427f99:	jne    0x427f4b
  427f9b:	push   edi
  427f9c:	stos   BYTE PTR es:[edi],al
  427f9d:	or     ch,ah
  427f9f:	mov    BYTE PTR [esi+0x266ab64],0xec
  427fa6:	mov    bh,0x1e
  427fa8:	enter  0xe449,0x5b
  427fac:	imul   esp,DWORD PTR [eax],0xffffffca
  427faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fb0:	call   0xebf3:0x7372a589
  427fb7:	push   0x489545a4
  427fbc:	les    edi,FWORD PTR [edi]
  427fbe:	js     0x427fff
  427fc0:	int3   
  427fc1:	int3   
  427fc2:	fsub   DWORD PTR [esi-0xd7cf48a]
  427fc8:	jae    0x427fc6
  427fca:	shl    DWORD PTR [ebp-0x6d],1
  427fcd:	push   cs
  427fce:	(bad)  
  427fcf:	test   ebp,0x92e1f076
  427fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fd6:	and    eax,0xf84963ce
  427fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fdc:	inc    edi
  427fdd:	int    0xa8
  427fdf:	jle    0x427ff2
  427fe1:	shr    dl,0xcb
  427fe4:	aaa    
  427fe5:	(bad)  
  427fe6:	and    ah,dl
  427fe8:	pop    es
  427fe9:	pop    ss
  427fea:	popf   
  427feb:	mov    bh,0x20
  427fed:	mov    WORD PTR [edi+0x2c],cs
  427ff0:	in     al,dx
  427ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ff2:	inc    edx
  427ff3:	xchg   ebx,eax
  427ff4:	pop    ss
  427ff5:	push   edx
  427ff6:	xor    bl,BYTE PTR ds:0xad11dc04
  427ffc:	ss aas 
  427ffe:	les    edx,FWORD PTR [ebx]
  428000:	cmp    bl,ch
  428002:	ja     0x42802b
  428004:	dec    edx
  428005:	arpl   WORD PTR [ebp-0x50],sp
  428008:	dec    edx
  428009:	fsub   st,st(7)
  42800b:	hlt    
  42800c:	add    al,0xf
  42800e:	dec    edx
  42800f:	xlat   BYTE PTR ds:[ebx]
  428010:	(bad)  
  428011:	int3   
  428012:	pop    eax
  428013:	retf   
  428014:	sub    BYTE PTR [eax+0x6e9eac40],ah
  42801a:	or     BYTE PTR ds:0x6f76abbe,cl
  428020:	arpl   cx,ax
  428022:	push   esp
  428023:	ficom  DWORD PTR [ebp-0x4a8b91fc]
  428029:	inc    ebx
  42802a:	scas   al,BYTE PTR es:[edi]
  42802b:	cmc    
  42802c:	jae    0x428071
  42802e:	sub    al,BYTE PTR [eax]
  428030:	jo     0x428018
  428032:	fsubr  DWORD PTR [ecx+edx*8-0x5e444e8b]
  428039:	fisttp WORD PTR [edx+0x2f]
  42803c:	(bad)  
  42803d:	dec    ebp
  42803e:	push   ecx
  42803f:	lods   eax,DWORD PTR ds:[esi]
  428040:	(bad)  
  428041:	fstp   QWORD PTR [ebx+0x271455ca]
  428047:	xor    al,0xc2
  428049:	ds out dx,eax
  42804b:	ret    0x3623
  42804e:	shr    DWORD PTR [eax],1
  428050:	es sahf 
  428052:	ret    0xc732
  428055:	and    bh,BYTE PTR [ebx+edi*8]
  428058:	jnp    0x42809d
  42805a:	inc    eax
  42805b:	mov    eax,ds:0xf36a02b1
  428060:	jmp    0x6a0dc129
  428065:	inc    edi
  428066:	stc    
  428067:	js     0x42806c
  428069:	pop    ebx
  42806a:	dec    edx
  42806b:	out    dx,eax
  42806c:	cmovb  ebx,DWORD PTR gs:[edx-0xdc7a607]
  428074:	data16 jl 0x428048
  428077:	imul   eax,DWORD PTR [ebx-0x3ea9b5c0],0x3e
  42807e:	xor    bl,BYTE PTR [ebx-0x15]
  428081:	pushf  
  428082:	nop
  428083:	or     DWORD PTR [esi+edx*4+0x22],edx
  428087:	sub    esp,DWORD PTR [eax-0x3d]
  42808a:	dec    esp
  42808b:	outs   dx,BYTE PTR ds:[esi]
  42808c:	pushf  
  42808d:	add    BYTE PTR [ebx-0x6a412a3d],cl
  428093:	aas    
  428094:	mov    BYTE PTR [edx],dl
  428096:	cmp    DWORD PTR [ebp+0x6e],esi
  428099:	adc    ah,BYTE PTR [ebp+0x1a7e73b4]
  42809f:	adc    cl,dl
  4280a1:	fadd   DWORD PTR [ebx-0x2c28ee4e]
  4280a7:	push   ebp
  4280a8:	jb     0x428102
  4280aa:	mov    dl,BYTE PTR [ebp-0x9d7e219]
  4280b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b1:	loope  0x4280fa
  4280b3:	jp     0x4280db
  4280b5:	jp     0x4280db
  4280b7:	and    ch,BYTE PTR [ecx+0x12]
  4280ba:	(bad)  
  4280bb:	dec    edi
  4280bc:	inc    ecx
  4280bd:	in     al,0x3a
  4280bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280c0:	jg     0x4280e2
  4280c2:	xor    dl,BYTE PTR [ebx-0x2d056a4]
  4280c8:	or     eax,0xadae762d
  4280cd:	mov    WORD PTR [ecx+0x28],?
  4280d0:	outs   dx,DWORD PTR ds:[esi]
  4280d1:	jg     0x4280c0
  4280d3:	cmp    al,0x4
  4280d5:	jge    0x4280c5
  4280d7:	jmp    0xe216:0x700ff728
  4280de:	loope  0x42811c
  4280e0:	js     0x4280a7
  4280e2:	jle    0x4280e1
  4280e4:	mov    cl,0x33
  4280e6:	adc    al,0xc5
  4280e8:	addr16 xor eax,0xda611763
  4280ee:	mov    esp,0x1e1431e9
  4280f3:	jmp    0x770b297b
  4280f8:	dec    edi
  4280f9:	dec    ecx
  4280fa:	(bad)  
  4280fb:	imul   edx,DWORD PTR [edx],0x1e
  4280fe:	cdq    
  4280ff:	scas   eax,DWORD PTR es:[edi]
  428100:	das    
  428101:	sub    bh,BYTE PTR [edi-0x27]
  428104:	xchg   esi,eax
  428105:	sbb    ebp,DWORD PTR [edx+edx*4-0x56]
  428109:	aad    0xce
  42810b:	push   edx
  42810c:	mov    dl,BYTE PTR [ecx-0xd]
  42810f:	adc    ch,BYTE PTR [ecx]
  428111:	sar    BYTE PTR [ebp-0x50b01a40],cl
  428117:	lock fstp DWORD PTR [eax+0x60]
  42811b:	hlt    
  42811c:	jo     0x4280b8
  42811e:	mul    BYTE PTR [eax]
  428120:	inc    edi
  428121:	fs jb  0x4280e6
  428124:	sub    eax,0x48252c32
  428129:	pop    ss
  42812a:	mov    ch,0x34
  42812c:	adc    eax,0xde7eef32
  428131:	xor    ecx,ecx
  428133:	fisub  WORD PTR [edi+0x5a]
  428136:	enter  0xcf42,0xcc
  42813a:	add    ecx,DWORD PTR [edx+0x646b065a]
  428140:	fcmovnbe st,st(0)
  428142:	adc    al,0xfc
  428144:	aam    0x4e
  428146:	mov    WORD PTR [eax],es
  428148:	pusha  
  428149:	cmp    cl,al
  42814b:	(bad)  [edx]
  42814d:	into   
  42814e:	jns    0x428192
  428150:	nop
  428151:	test   esi,0xc5e9f50
  428157:	sub    al,0x5e
  428159:	iret   
  42815a:	xchg   edx,eax
  42815b:	adc    edx,DWORD PTR [ebx+0x4f]
  42815e:	aas    
  42815f:	jno    0x42811c
  428161:	or     ch,cl
  428163:	pop    esp
  428164:	out    0xd4,al
  428166:	(bad)  
  428167:	fisttp DWORD PTR [esi+0x53]
  42816a:	inc    esi
  42816b:	xor    ah,0xd1
  42816e:	jo     0x42815b
  428170:	push   ss
  428171:	push   eax
  428172:	dec    ebp
  428173:	rcr    dh,0xce
  428176:	mov    DWORD PTR [eax],esi
  428178:	sub    ebx,DWORD PTR [edx]
  42817a:	push   0xffffffbc
  42817c:	sbb    BYTE PTR [edx+0x3e],dh
  42817f:	les    esp,FWORD PTR [edi-0x3b39327]
  428185:	ret    
  428186:	mov    bh,0xec
  428188:	mov    ebx,0xda3974b7
  42818d:	cs or  al,0x3c
  428190:	add    ah,cl
  428192:	add    BYTE PTR [edx+edx*8+0x2a],cl
  428196:	(bad)  
  428197:	call   0x723c:0x64e59743
  42819e:	jge    0x428206
  4281a0:	mov    dl,0xc3
  4281a2:	aas    
  4281a3:	out    0x83,al
  4281a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281a6:	jge    0x42820a
  4281a8:	pop    esp
  4281a9:	sbb    eax,0xb38217f7
  4281ae:	dec    edi
  4281af:	sub    DWORD PTR [edi-0x5c],0x6c
  4281b3:	mov    cl,BYTE PTR [edx]
  4281b5:	loope  0x428230
  4281b7:	inc    eax
  4281b8:	or     eax,0xcf2a1bf0
  4281bd:	mov    eax,0x59629948
  4281c2:	push   0x67772c72
  4281c7:	nop
  4281c8:	or     BYTE PTR [esi-0xfa31112],al
  4281ce:	adc    BYTE PTR [ebx],al
  4281d0:	adc    al,0x13
  4281d2:	mov    bl,0xae
  4281d4:	cdq    
  4281d5:	hlt    
  4281d6:	and    ch,BYTE PTR [ebx+0x10]
  4281d9:	or     BYTE PTR [ebx+0x67],0x1f
  4281dd:	mov    edx,0x29e104f7
  4281e2:	push   edi
  4281e3:	fwait
  4281e4:	dec    esp
  4281e5:	mov    esi,0x4cccf795
  4281ea:	xchg   edi,eax
  4281eb:	shr    DWORD PTR [ecx+0x3bf44077],cl
  4281f1:	addr16 into 
  4281f3:	and    DWORD PTR [eax-0x17],ebp
  4281f6:	xor    BYTE PTR [ecx-0x4aeb0c02],ah
  4281fc:	add    edx,DWORD PTR [edx-0x52eb532e]
  428202:	pop    esi
  428203:	loopne 0x4281e6
  428205:	(bad)  
  428207:	add    ecx,eax
  428209:	cmp    eax,DWORD PTR [esi]
  42820b:	pop    edi
  42820c:	pop    es
  42820d:	enter  0x2419,0x58
  428211:	xchg   ebx,eax
  428212:	enter  0x3379,0x83
  428216:	inc    ebp
  428217:	jmp    0x428223
  428219:	popf   
  42821a:	push   ds
  42821b:	and    cl,ah
  42821d:	mov    al,ds:0x2b779d6e
  428222:	loopne 0x4281b6
  428224:	adc    al,0xbf
  428226:	push   ebx
  428227:	mov    eax,0x9339e058
  42822c:	mov    ebx,ds
  42822e:	sub    edi,DWORD PTR [ebx+esi*8+0x68c885e0]
  428235:	fdivr  QWORD PTR [edx-0x64]
  428238:	leave  
  428239:	stos   DWORD PTR es:[edi],eax
  42823a:	push   ebx
  42823b:	pop    es
  42823c:	lahf   
  42823d:	ss push ecx
  42823f:	cmp    BYTE PTR [edx],bh
  428241:	ret    0x1046
  428244:	mov    edi,0x1f158705
  428249:	cdq    
  42824a:	nop
  42824b:	lods   al,BYTE PTR ds:[esi]
  42824c:	xchg   edx,eax
  42824d:	cwde   
  42824e:	xchg   ecx,eax
  42824f:	and    BYTE PTR [eax+ebp*1+0x5d],al
  428253:	int    0xc6
  428255:	(bad)  
  428257:	mov    dl,0x25
  428259:	sub    DWORD PTR [ebp+eiz*8+0x365f16e3],edx
  428260:	call   0x163b:0xadce5438
  428267:	and    BYTE PTR [edi],bh
  428269:	loopne 0x4282e7
  42826b:	cwde   
  42826c:	out    0xf6,al
  42826e:	sub    eax,0x2aea703b
  428273:	add    al,0x54
  428275:	cwde   
  428276:	shl    DWORD PTR [ebp-0x7df131b3],cl
  42827c:	nop
  42827d:	es sahf 
  42827f:	mov    esi,0xd6effa3f
  428284:	push   cs
  428285:	shl    bl,cl
  428287:	into   
  428288:	test   esi,edi
  42828a:	ret    0xdd4b
  42828d:	ret    0x9269
  428290:	pop    edi
  428291:	(bad)  
  428292:	(bad)  
  428293:	pop    es
  428294:	add    DWORD PTR [ecx],0xffffffa2
  428297:	xlat   BYTE PTR ds:[ebx]
  428298:	cld    
  428299:	(bad)  
  42829a:	xor    al,BYTE PTR [esi-0x63c43b67]
  4282a0:	mov    WORD PTR [edi-0x5e991c99],cs
  4282a6:	adc    ebp,edx
  4282a8:	neg    dl
  4282aa:	push   ecx
  4282ab:	xchg   ebx,ebx
  4282ad:	inc    eax
  4282ae:	je     0x4282ca
  4282b0:	aaa    
  4282b1:	jnp    0x4282d2
  4282b3:	scas   ax,WORD PTR es:[edi]
  4282b5:	cs dec esi
  4282b7:	or     eax,0xb1c8c87c
  4282bc:	imul   edi,esi,0x12ed3b38
  4282c2:	push   ss
  4282c3:	xchg   DWORD PTR [ebx],edi
  4282c5:	xor    al,0xe5
  4282c7:	int    0x2a
  4282c9:	out    0x20,al
  4282cb:	ss cli 
  4282cd:	popf   
  4282ce:	aas    
  4282cf:	test   DWORD PTR [esp+edx*1],edi
  4282d2:	sbb    BYTE PTR [eax-0x4f9104bd],ch
  4282d8:	xchg   edi,eax
  4282d9:	mov    fs,WORD PTR [eax]
  4282db:	or     al,0xa9
  4282dd:	cmp    al,BYTE PTR [edi+0x28320a0e]
  4282e3:	or     ch,BYTE PTR [ebx]
  4282e5:	inc    ebp
  4282e6:	inc    esi
  4282e7:	xchg   edi,eax
  4282e8:	push   esi
  4282e9:	call   0x456a:0x5662f3e6
  4282f0:	xchg   ecx,edi
  4282f2:	push   esp
  4282f3:	jp     0x42836d
  4282f5:	pop    esi
  4282f6:	fld    st(7)
  4282f8:	mov    ah,BYTE PTR [ebx+0x2f]
  4282fb:	and    BYTE PTR [esi+eiz*1-0x6f47f490],0xa6
  428303:	jmp    0x5c8e:0x94d5c7b
  42830a:	add    eax,0xbd59e298
  42830f:	and    DWORD PTR [ecx+0x14c8893c],eax
  428315:	inc    esp
  428316:	test   eax,0xe70262d9
  42831b:	and    dh,dh
  42831d:	out    dx,al
  42831e:	push   cs
  42831f:	mov    WORD PTR [edx+0x6580396e],es
  428325:	push   edi
	...
  42832e:	add    BYTE PTR [eax],al
  428330:	add    dl,al
  428332:	and    DWORD PTR [edi],ebp
  428334:	cdq    
  428335:	out    dx,eax
  428336:	lahf   
  428337:	idiv   BYTE PTR [ebx+0x4f]
  42833a:	js     0x428313
  42833c:	jg     0x42833c
  42833e:	adc    eax,0xf8f1f4b9
  428343:	add    DWORD PTR [eax],eax
  428345:	sbb    BYTE PTR [eax],al
  428347:	add    BYTE PTR [eax],al
  428349:	outs   dx,DWORD PTR ds:[esi]
  42834a:	jmp    0xf4ac:0x23bb480e
  428351:	xor    bl,BYTE PTR [ebp+0x68]
  428354:	call   0xfa35:0x267a04c4
  42835b:	(bad)  
  42835c:	adc    al,0x54
  42835e:	lods   al,BYTE PTR ds:[esi]
  42835f:	les    ecx,FWORD PTR [ecx]
	...
