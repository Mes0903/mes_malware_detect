
2f16ca228660b81550f5a77a3c39578d56509bd6f00ed47b190b81dc5905c26c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	mov    ?,WORD PTR [ebp+0x626219a0]
  401443:	bound  esp,QWORD PTR [edx-0x23]
  401446:	pop    edi
  401447:	bound  esp,QWORD PTR [edx+0x9]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	xchg   ecx,eax
  401456:	inc    ebx
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	in     eax,0xf7
  401506:	pop    esi
  401507:	or     edi,DWORD PTR [eax]
  401509:	inc    ebp
  40150a:	imul   eax,DWORD PTR [ebx-0x77],0x40
  40150e:	jne    0x4014d4
  401510:	das    
  401511:	add    al,0x8c
  401513:	fucomp st(1)
  401515:	fstp   QWORD PTR [esi+ebx*2-0x1]
  401519:	fwait
  40151a:	out    dx,al
  40151b:	rcr    BYTE PTR [edi],0x9b
  40151e:	cmc    
  40151f:	not    DWORD PTR [eax]
  401521:	sbb    ebp,edi
  401523:	pop    ebp
  401524:	loope  0x40154f
  401526:	push   eax
  401527:	jle    0x4014d8
  401529:	inc    edx
  40152a:	sbb    ch,bh
  40152c:	in     eax,dx
  40152d:	enter  0xbd76,0xf1
  401531:	inc    ecx
  401532:	and    DWORD PTR [edx+0x230b07bf],esp
  401538:	stc    
  401539:	mov    edi,0x7dc4311a
  40153e:	adc    BYTE PTR [edi],dh
  401540:	mov    al,0x5c
  401542:	mul    DWORD PTR [ebp+eiz*2-0x6672e17e]
  401549:	dec    ebp
  40154a:	xor    eax,0xd12c2a65
  40154f:	nop
  401550:	add    ebx,DWORD PTR ds:[edi+0xa]
  401554:	pop    ecx
  401555:	adc    BYTE PTR [esi+0x48],0x7e
  401559:	lock dec ebp
  40155b:	shl    DWORD PTR [ecx+edx*8],1
  40155e:	xor    eax,0xd8eb57bb
  401563:	sbb    BYTE PTR [ebp+eax*8+0x680bc6dd],bh
  40156a:	loop   0x40154e
  40156c:	mov    bl,0x14
  40156e:	or     edx,DWORD PTR [edx]
  401570:	xor    edi,edi
  401572:	pusha  
  401573:	je     0x401580
  401575:	std    
  401576:	sub    al,0xd2
  401578:	repnz cmp eax,DWORD PTR [edx+0x78]
  40157c:	pop    ebx
  40157d:	cmp    DWORD PTR [edx],0xb305a12
  401583:	jl     0x401585
  401585:	ss enter 0xdc1d,0x8
  40158a:	push   es
  40158b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158c:	dec    esp
  40158d:	xchg   esi,eax
  40158e:	(bad)  
  40158f:	pop    esp
  401590:	lea    esp,[eax-0x59a63d2d]
  401596:	jbe    0x401590
  401598:	pop    edi
  401599:	lea    esp,ds:0x6adc56e6
  40159f:	inc    esi
  4015a0:	push   ecx
  4015a1:	cvtpi2ps xmm6,QWORD PTR [eax+0x6e8415d5]
  4015a8:	mov    edx,0x430fe3ac
  4015ad:	adc    ah,dl
  4015af:	(bad)  
  4015b0:	mov    DWORD PTR [esi+0x3c3772a2],ebp
  4015b6:	jnp    0x40157a
  4015b8:	xor    al,0xac
  4015ba:	out    0x8b,eax
  4015bc:	aas    
  4015bd:	aad    0xa6
  4015bf:	in     eax,dx
  4015c0:	xchg   ebx,eax
  4015c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c2:	add    al,0x8d
  4015c4:	lea    esi,[edi]
  4015c6:	or     eax,DWORD PTR [ebp-0xd9a7ac1]
  4015cc:	pop    esp
  4015cd:	test   BYTE PTR [eax+0x21d4416a],cl
  4015d3:	pop    edi
  4015d4:	inc    esp
  4015d5:	mov    edi,0xba0b1b5c
  4015da:	shl    BYTE PTR ds:0xe0fa56e8,0x60
  4015e1:	stc    
  4015e2:	neg    DWORD PTR [ecx-0x57]
  4015e5:	out    0x20,eax
  4015e7:	mov    BYTE PTR [edx+0x68a2c108],dl
  4015ed:	ins    DWORD PTR es:[edi],dx
  4015ee:	mov    bl,0x9a
  4015f0:	sbb    BYTE PTR [ebp-0x22],cl
  4015f3:	in     eax,dx
  4015f4:	or     DWORD PTR [edx+0x5c],0x24a1710b
  4015fb:	dec    ebp
  4015fc:	fld    TBYTE PTR [edx-0x8]
  4015ff:	push   ss
  401600:	dec    ebx
  401601:	loope  0x4015cd
  401603:	xchg   DWORD PTR [ebp+0x3f],eax
  401606:	fdivr  DWORD PTR [esi-0x35]
  401609:	push   ebp
  40160a:	sbb    BYTE PTR [edi+0x48],dh
  40160d:	jb     0x401644
  40160f:	xchg   edx,eax
  401610:	shrd   edx,ecx,0x91
  401614:	mov    ebx,DWORD PTR [edi+0x47ee534c]
  40161a:	mov    ah,BYTE PTR [edx-0x75643387]
  401620:	pop    esp
  401621:	or     esi,ecx
  401623:	dec    ebp
  401624:	sub    dl,BYTE PTR [ebx+0x39]
  401627:	dec    eax
  401628:	jbe    0x40162b
  40162a:	pop    edi
  40162b:	in     eax,dx
  40162c:	test   al,0x7c
  40162e:	adc    eax,0xa02712b5
  401633:	mov    ds:0x5888fdc0,al
  401638:	hlt    
  401639:	cmp    BYTE PTR [esi-0x3f6ebc71],bl
  40163f:	stos   BYTE PTR es:[edi],al
  401640:	je     0x401672
  401642:	fiadd  DWORD PTR [ebx+0x54]
  401645:	jne    0x401625
  401647:	fild   DWORD PTR [edx-0x8]
  40164a:	retf   0xe309
  40164d:	add    edx,esp
  40164f:	les    edx,FWORD PTR [edi-0x45a89235]
  401655:	adc    al,0x84
  401657:	outs   dx,DWORD PTR ds:[esi]
  401658:	and    bh,al
  40165a:	outs   dx,DWORD PTR ds:[esi]
  40165b:	jl     0x4016b7
  40165d:	mov    edx,DWORD PTR [esi]
  40165f:	nop
  401660:	test   BYTE PTR [edx-0x67],bh
  401663:	pusha  
  401664:	and    bl,0x2b
  401667:	inc    edx
  401668:	dec    edi
  401669:	adc    al,0x1
  40166b:	inc    edx
  40166c:	cmp    BYTE PTR [esi],bh
  40166e:	std    
  40166f:	fcmovnb st,st(0)
  401671:	mov    ds:0x22623446,al
  401676:	popa   
  401677:	adc    al,0x32
  401679:	div    eax
  40167b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40167c:	xchg   esp,eax
  40167d:	rol    DWORD PTR [edi+0x7b61f15f],0xa
  401684:	inc    eax
  401685:	cmp    BYTE PTR [edi],cl
  401687:	cvtps2pd xmm7,QWORD PTR [edi]
  40168a:	adc    eax,0xc0853bab
  40168f:	(bad)
  401692:	int3   
  401693:	mov    ah,dl
  401695:	fcomip st,st(2)
  401697:	cmp    esp,DWORD PTR [ebp+0x20a34478]
  40169d:	sti    
  40169e:	loopne 0x4016c5
  4016a0:	cmp    ah,BYTE PTR [esi]
  4016a2:	hlt    
  4016a3:	jmp    0x2adf:0x909f321d
  4016aa:	mov    ebp,0x4ef993ac
  4016af:	adc    edi,esp
  4016b1:	clc    
  4016b2:	out    dx,al
  4016b3:	lahf   
  4016b4:	lods   eax,DWORD PTR ds:[esi]
  4016b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b6:	test   BYTE PTR [ebx+0x55a4ceed],cl
  4016bc:	bnd call 0x327ccc9f
  4016c2:	idiv   DWORD PTR [ebp-0x5be8031a]
  4016c8:	add    esi,DWORD PTR [ebx-0x77337e08]
  4016ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016cf:	in     eax,dx
  4016d0:	icebp  
  4016d1:	mov    al,ds:0xb73160a7
  4016d6:	add    eax,0x39e56a98
  4016db:	mov    ds:0xc6014dc6,al
  4016e0:	aaa    
  4016e1:	push   cs
  4016e2:	dec    esi
  4016e3:	jo     0x40170c
  4016e5:	ret    
  4016e6:	call   0x8a11:0x73be6822
  4016ed:	jbe    0x401719
  4016ef:	xchg   esp,eax
  4016f0:	les    ebp,FWORD PTR [edi-0x20]
  4016f3:	adc    esp,ecx
  4016f5:	inc    edx
  4016f6:	adc    bl,ch
  4016f8:	jg     0x4016a6
  4016fa:	sub    al,0x84
  4016fc:	push   cs
  4016fd:	addr16 pushf 
  4016ff:	jg     0x401778
  401701:	xchg   esp,eax
  401703:	jbe    0x4016c6
  401705:	inc    BYTE PTR [eax+0x5f39dee3]
  40170b:	dec    ebp
  40170c:	fsubr  DWORD PTR [ebx+0x4e]
  40170f:	(bad)  
  401710:	mov    ?,WORD PTR [edx+0x165be77e]
  401716:	(bad)  
  401717:	nop
  401718:	cmp    eax,0x7508bf93
  40171d:	clc    
  40171e:	ins    DWORD PTR es:[edi],dx
  40171f:	scas   al,BYTE PTR es:[edi]
  401720:	lods   al,BYTE PTR ds:[esi]
  401721:	lods   eax,DWORD PTR ds:[esi]
  401722:	inc    edi
  401723:	scas   eax,DWORD PTR es:[edi]
  401724:	push   edx
  401725:	mov    esi,0xbd832fac
  40172a:	in     eax,0x53
  40172c:	jae    0x4016f3
  40172e:	and    BYTE PTR [esi-0x6cbbeeb2],dh
  401734:	inc    esp
  401735:	arpl   WORD PTR [ecx],si
  401737:	aam    0x46
  401739:	xchg   esp,eax
  40173a:	push   ebx
  40173b:	jmp    0x536a:0x4447a762
  401742:	xchg   edx,eax
  401743:	xchg   DWORD PTR [edi*8+0x274d3583],esp
  40174a:	(bad)  
  40174b:	mov    bh,0xd5
  40174d:	(bad)  
  40174e:	cli    
  40174f:	pop    edx
  401750:	gs out dx,eax
  401752:	or     ecx,DWORD PTR [ecx]
  401754:	sahf   
  401755:	loope  0x401738
  401757:	scas   eax,DWORD PTR es:[edi]
  401758:	xor    DWORD PTR [ebx+edi*1],0xfffffff6
  40175c:	loopne 0x4017d0
  40175e:	outs   dx,DWORD PTR ds:[esi]
  40175f:	xor    BYTE PTR [edx],ah
  401761:	xchg   ebx,eax
  401762:	mov    al,0xd1
  401764:	jne    0x40174b
  401766:	(bad)  
  401767:	std    
  401768:	js     0x4017a3
  40176a:	mov    bl,0x4
  40176c:	(bad)  
  40176e:	lock sahf 
  401770:	xor    BYTE PTR cs:[esi],bh
  401773:	stos   BYTE PTR es:[edi],al
  401774:	or     bh,BYTE PTR [esi+0x18abcd96]
  40177a:	not    DWORD PTR [edx+0x769d9645]
  401780:	jmp    0x4017a2
  401782:	pop    es
  401783:	adc    ecx,DWORD PTR [eax]
  401785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401786:	push   esi
  401787:	js     0x401745
  401789:	in     al,dx
  40178a:	mov    ch,0x44
  40178c:	inc    edi
  40178d:	pop    eax
  40178e:	dec    ecx
  40178f:	in     al,0x5a
  401791:	mov    bl,0x39
  401793:	add    cl,BYTE PTR [ecx+0x61400595]
  401799:	into   
  40179a:	(bad)  [ebp-0x4c437ee0]
  4017a0:	jg     0x401810
  4017a2:	dec    ebp
  4017a3:	imul   DWORD PTR [edi-0x32]
  4017a6:	mov    ah,0x29
  4017a8:	mov    eax,0xb224a405
  4017ad:	enter  0x2b85,0x2b
  4017b1:	(bad)  
  4017b2:	cdq    
  4017b3:	pop    ds
  4017b4:	dec    ebp
  4017b6:	outs   dx,BYTE PTR ds:[esi]
  4017b7:	pusha  
  4017b8:	xchg   ebp,eax
  4017b9:	pop    eax
  4017ba:	(bad)  
  4017bb:	mov    eax,ds:0x3982df76
  4017c0:	cdq    
  4017c1:	(bad)  
  4017c2:	pop    eax
  4017c3:	outs   dx,DWORD PTR ds:[esi]
  4017c4:	sbb    al,0xa3
  4017c6:	add    eax,0x76e4b5ef
  4017cb:	push   cs
  4017cc:	idiv   BYTE PTR [ebx+0x250126]
  4017d2:	sbb    ch,dl
  4017d4:	and    BYTE PTR [ebx],al
  4017d6:	xchg   ebp,eax
  4017d7:	inc    esp
  4017d8:	fwait
  4017d9:	lock push edx
  4017db:	in     al,dx
  4017dc:	jp     0x401810
  4017de:	test   BYTE PTR [ebx*2+0x67cb9b92],dl
  4017e5:	fsubrp st(1),st
  4017e7:	data16 xlat BYTE PTR ds:[ebx]
  4017e9:	push   edi
  4017ea:	cmc    
  4017eb:	lahf   
  4017ec:	rcl    edi,cl
  4017ee:	mov    WORD PTR [esi+0x7b],?
  4017f1:	sbb    BYTE PTR [ecx-0x5],0xdb
  4017f5:	xlat   BYTE PTR ds:[ebx]
  4017f6:	scas   eax,DWORD PTR es:[edi]
  4017f7:	mov    ebp,0x1706bf37
  4017fc:	lahf   
  4017fd:	in     eax,0x52
  4017ff:	inc    ebx
  401800:	bsr    edx,DWORD PTR [ecx]
  401803:	add    BYTE PTR [eax+esi*4],0xb6
  401807:	test   ebp,ebx
  401809:	xchg   esp,eax
  40180a:	fsubr  QWORD PTR [ebx+ebp*1]
  40180d:	leave  
  40180e:	retf   0xfade
  401811:	lods   eax,DWORD PTR ds:[esi]
  401812:	mov    ebp,0x8eb089ed
  401817:	or     DWORD PTR [ecx-0x15490c13],ebp
  40181d:	fldcw  WORD PTR [esi]
  40181f:	and    DWORD PTR ds:0x44ac6355,esp
  401825:	fcom   st(5)
  401827:	fsubr  DWORD PTR [eax+0x62]
  40182a:	dec    eax
  40182b:	cwde   
  40182c:	aas    
  40182d:	out    0xad,al
  40182f:	dec    esp
  401830:	in     eax,dx
  401831:	xchg   esi,eax
  401832:	pop    edx
  401833:	jp     0x401814
  401835:	dec    esp
  401836:	inc    ecx
  401837:	and    eax,0x1801a0fa
  40183c:	dec    edx
  40183d:	into   
  40183e:	enter  0xf0ec,0xf7
  401842:	inc    edi
  401843:	jo     0x4017e5
  401845:	mov    esp,0xa56dc1d9
  40184a:	cmp    DWORD PTR [edx+0x1],edx
  40184d:	jle    0x401858
  40184f:	call   0xc17d:0xa65b9f2c
  401856:	push   ebp
  401857:	xchg   ecx,eax
  401858:	sbb    BYTE PTR [ebx+ebx*4+0x6],ch
  40185c:	mov    ecx,0xf5afd0c4
  401861:	pop    es
  401862:	(bad)  
  401863:	(bad)  
  401865:	das    
  401866:	jo     0x4018b4
  401868:	(bad)  
  401869:	jo     0x401860
  40186b:	push   ebx
  40186c:	pop    ecx
  40186d:	aaa    
  40186e:	inc    BYTE PTR [eax-0x49]
  401871:	inc    ebp
  401872:	shl    cl,0xeb
  401875:	aad    0xcf
  401877:	in     al,dx
  401878:	in     al,dx
  401879:	cmc    
  40187a:	mov    al,0xb3
  40187c:	mov    ebx,0x6c126f08
  401881:	leave  
  401882:	arpl   WORD PTR [edx+ecx*4+0x13769daf],dx
  401889:	push   edi
  40188a:	loopne 0x401819
  40188c:	sbb    eax,0x38589f34
  401891:	fist   DWORD PTR [eax]
  401893:	in     eax,0xa6
  401895:	inc    eax
  401896:	shl    DWORD PTR [ecx-0x3785086d],1
  40189c:	iret   
  40189d:	jo     0x401884
  40189f:	daa    
  4018a0:	pop    ds
  4018a1:	loop   0x4018dd
  4018a3:	and    ebp,DWORD PTR [ebx+eiz*4+0x7e]
  4018a7:	enter  0x7569,0x8b
  4018ab:	xlat   BYTE PTR ds:[ebx]
  4018ac:	out    dx,al
  4018ad:	mov    al,ds:0xf7f14848
  4018b2:	das    
  4018b3:	stos   DWORD PTR es:[edi],eax
  4018b4:	add    al,0x85
  4018b6:	inc    esp
  4018b7:	fnstcw WORD PTR [esi]
  4018b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ba:	popa   
  4018bb:	cmp    eax,0xae9e9842
  4018c0:	sbb    bh,bh
  4018c2:	xor    ah,0xb2
  4018c5:	push   esp
  4018c6:	mov    dh,0x46
  4018c8:	aam    0x50
  4018ca:	sbb    eax,0xb7021a94
  4018cf:	into   
  4018d0:	fwait
  4018d1:	or     dh,BYTE PTR [esi-0x36]
  4018d4:	and    al,0xb3
  4018d6:	sub    al,0xbb
  4018d8:	add    BYTE PTR [edi+0x38],cl
  4018db:	test   BYTE PTR [ebp+0x4c],cl
  4018de:	pextrw edx,(bad),0xc5
  4018e0:	adc    esi,esp
  4018e2:	xchg   ebx,eax
  4018e3:	mov    cl,0x6d
  4018e5:	sub    al,0xd1
  4018e7:	repnz popa 
  4018e9:	and    BYTE PTR [edx+ecx*4],ch
  4018ec:	jle    0x401885
  4018ee:	dec    edx
  4018ef:	jl     0x4018ac
  4018f1:	nop
  4018f2:	lea    esp,[ebx+esi*2]
  4018f5:	and    al,0x57
  4018f7:	and    cl,BYTE PTR [edi-0x656d3dd2]
  4018fd:	jns    0x401940
  4018ff:	adc    BYTE PTR [esi-0x15],dh
  401902:	hlt    
  401903:	cmp    edx,esi
  401905:	dec    ecx
  401906:	and    BYTE PTR [edx+edi*8],0xbb
  40190a:	push   esi
  40190b:	in     al,0xe0
  40190d:	and    cl,BYTE PTR [ecx-0x5dd2e36d]
  401913:	ds daa 
  401915:	mov    ch,0xd6
  401917:	pop    esi
  401918:	jnp    0x40193f
  40191a:	popa   
  40191b:	and    BYTE PTR [edx-0x6ea06b3a],al
  401921:	loop   0x40195b
  401923:	xchg   ecx,eax
  401924:	jns    0x40197b
  401926:	adc    BYTE PTR [eax-0x6e],bl
  401929:	adc    al,0xd
  40192b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192c:	mov    esi,0xc547a6f6
  401931:	(bad)  
  401932:	cld    
  401933:	add    eax,0xdf40f6e
  401938:	xchg   esp,eax
  401939:	push   edi
  40193a:	retf   
  40193b:	imul   ebp,ecx,0x4a
  40193e:	dec    esp
  40193f:	cmp    DWORD PTR [ebx],edi
  401941:	and    edx,edi
  401943:	adc    al,0xdc
  401945:	bnd call 0x5b5ab59
  40194b:	pop    edi
  40194c:	sbb    eax,0x47c6eeb0
  401951:	push   ds
  401952:	stos   DWORD PTR es:[edi],eax
  401953:	pop    ss
  401954:	int3   
  401955:	loope  0x40198b
  401957:	aam    0x19
  401959:	or     esi,eax
  40195b:	adc    DWORD PTR [ebx+0x32],ebp
  40195e:	sti    
  40195f:	sar    BYTE PTR [edi],1
  401961:	mov    BYTE PTR [esi],cl
  401963:	mov    edx,0x1cd5340d
  401968:	das    
  401969:	xor    ecx,DWORD PTR [ebp+0x4d]
  40196c:	xlat   BYTE PTR ds:[ebx]
  40196d:	jge    0x40198e
  40196f:	jbe    0x401958
  401971:	stos   BYTE PTR es:[edi],al
  401972:	lahf   
  401973:	arpl   WORD PTR [edx],di
  401975:	pop    es
  401976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401977:	sub    al,BYTE PTR [edi+0x623d52d0]
  40197d:	cld    
  40197e:	sub    dl,dl
  401980:	outs   dx,DWORD PTR ds:[esi]
  401981:	sub    DWORD PTR [ebp+0x1a368f24],ebx
  401987:	inc    ebx
  401988:	fwait
  401989:	pop    esi
  40198a:	jmp    0xed3e:0x3bb12e2e
  401991:	xlat   BYTE PTR ds:[ebx]
  401992:	mov    al,ds:0x58b34f0b
  401997:	repz or eax,0x8a1031c3
  40199d:	mov    eax,0x4c53be41
  4019a2:	scas   al,BYTE PTR es:[edi]
  4019a3:	jp     0x401983
  4019a5:	sbb    ebp,eax
  4019a7:	xchg   ecx,eax
  4019a8:	push   esi
  4019a9:	jnp    0x401a0d
  4019ab:	xchg   BYTE PTR [eax],al
  4019ad:	in     al,0xa6
  4019af:	sub    ebp,DWORD PTR ds:0xe8fd631c
  4019b5:	aaa    
  4019b6:	xchg   ebx,eax
  4019b7:	jo     0x401966
  4019b9:	mov    ds:0xb0bb636,al
  4019be:	fisttp DWORD PTR [ebp+0x3cd595a6]
  4019c4:	inc    ebp
  4019c5:	mov    al,BYTE PTR ds:0xd1d76b5b
  4019cb:	pop    edi
  4019cc:	push   ebp
  4019cd:	cmp    ecx,ebp
  4019cf:	jg     0x40196b
  4019d1:	xchg   BYTE PTR [ebp+0x5a8fe6d],dl
  4019d7:	lds    esi,FWORD PTR [ebx]
  4019d9:	jbe    0x4019f5
  4019db:	adc    ah,BYTE PTR [ebx+0x6e]
  4019de:	push   0x4b
  4019e0:	outs   dx,DWORD PTR ds:[esi]
  4019e1:	sbb    edx,DWORD PTR [esp+ebp*1-0x50e792f7]
  4019e8:	bound  ecx,QWORD PTR [ebx]
  4019ea:	in     al,0x7e
  4019ec:	mov    edx,0xa2d22b52
  4019f1:	push   ebp
  4019f2:	pop    ecx
  4019f3:	inc    esp
  4019f4:	fisttp DWORD PTR [ecx-0x3ce4c052]
  4019fa:	cmp    eax,0xf504e065
  4019ff:	jl     0x40199d
  401a01:	pop    ecx
  401a02:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a04:	pop    esi
  401a05:	fwait
  401a06:	in     eax,0x54
  401a08:	jnp    0x4019a9
  401a0a:	xchg   edi,eax
  401a0b:	cli    
  401a0c:	test   BYTE PTR cs:[ecx+esi*2],dl
  401a10:	push   ds
  401a11:	out    0x7,eax
  401a13:	daa    
  401a14:	shl    BYTE PTR [ecx],0xe5
  401a17:	sub    bh,BYTE PTR [esi+edx*1]
  401a1a:	in     al,0xd5
  401a1c:	(bad)  
  401a1d:	adc    ebp,DWORD PTR ds:[edi-0x51fe874b]
  401a24:	jge    0x401a79
  401a26:	out    0x50,eax
  401a28:	mov    cl,BYTE PTR [ebx+0x60b4edfa]
  401a2e:	sub    eax,DWORD PTR [edx]
  401a30:	shl    DWORD PTR [esi-0x6],1
  401a33:	and    eax,0x848c8372
  401a38:	pop    esp
  401a39:	out    0xb,al
  401a3b:	inc    edi
  401a3c:	dec    ecx
  401a3d:	shl    BYTE PTR [edi+0x4],cl
  401a40:	(bad)  
  401a41:	out    0x9e,eax
  401a43:	inc    eax
  401a44:	cld    
  401a45:	xchg   ah,cl
  401a47:	popf   
  401a48:	pop    ebx
  401a49:	mov    ds:0x63858010,eax
  401a4e:	loope  0x401aac
  401a50:	in     al,dx
  401a51:	push   eax
  401a52:	xchg   esp,eax
  401a53:	gs adc al,0x4b
  401a56:	stos   BYTE PTR es:[edi],al
  401a57:	inc    ebp
  401a58:	rol    DWORD PTR ds:0x661b916f,cl
  401a5e:	test   DWORD PTR [edi],0xd309bf81
  401a64:	push   es
  401a65:	icebp  
  401a66:	popa   
  401a67:	xchg   ebp,eax
  401a68:	nop
  401a69:	jae    0x401a16
  401a6b:	(bad)  
  401a6c:	imul   ebp,edi,0xffffffbb
  401a6f:	lock call 0x5517:0x673b4a58
  401a77:	xchg   ecx,eax
  401a78:	sub    DWORD PTR [ecx-0x9],0xe0528686
  401a7f:	xchg   BYTE PTR [ebp-0x40bc54e0],ch
  401a85:	mov    ah,0x17
  401a87:	cmp    BYTE PTR [ebx-0x63],ah
  401a8a:	xor    al,0x8e
  401a8c:	push   es
  401a8d:	ret    
  401a8e:	xchg   esp,eax
  401a8f:	jle    0x401afe
  401a91:	cwde   
  401a92:	add    esi,DWORD PTR [edx+0x4db86560]
  401a98:	mov    bl,BYTE PTR [ebx]
  401a9a:	mov    BYTE PTR [esi],dl
  401a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9d:	ret    0xdb4b
  401aa0:	sub    eax,0x7e73a01f
  401aa5:	pop    esp
  401aa6:	shr    BYTE PTR [edx],cl
  401aa8:	cmp    al,0x4f
  401aaa:	outs   dx,DWORD PTR ds:[esi]
  401aab:	dec    ecx
  401aac:	fsubr  st(6),st
  401aae:	mov    DWORD PTR [edx],edx
  401ab0:	mov    esi,0x52d60bb8
  401ab5:	lds    esp,FWORD PTR [eax+0x43ab0d63]
  401abb:	les    ebx,FWORD PTR [edx-0xd]
  401abe:	jmp    0xad26:0x92d4bc3d
  401ac5:	xchg   edx,eax
  401ac6:	push   ds
  401ac7:	mov    ebx,0xd73a17e
  401acc:	sbb    BYTE PTR [edx+0x7f],dl
  401acf:	and    al,0x5e
  401ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad2:	cld    
  401ad3:	lods   eax,DWORD PTR ds:[esi]
  401ad4:	outs   dx,DWORD PTR ds:[esi]
  401ad5:	jle    0x401b07
  401ad7:	stos   DWORD PTR es:[edi],eax
  401ad8:	cdq    
  401ad9:	adc    al,0x32
  401adb:	test   eax,0x53125f77
  401ae0:	hlt    
  401ae1:	in     eax,0x70
  401ae3:	xlat   BYTE PTR ds:[ebx]
  401ae4:	push   ebx
  401ae5:	jae    0x401b2b
  401ae7:	xchg   esp,eax
  401ae8:	lea    esp,[edi+0x2aa8db86]
  401aee:	sar    DWORD PTR [edi+0xd18fc11],0x51
  401af5:	adc    eax,0x466a1932
  401afa:	xchg   esp,eax
  401afb:	jmp    0xd6741ec
  401b00:	or     DWORD PTR [ebx-0x611d6f4b],esi
  401b06:	shr    BYTE PTR [edx+0x2c],cl
  401b09:	cmp    DWORD PTR [esi],edx
  401b0b:	and    DWORD PTR [eax-0x1ba85b9c],0xffffffbe
  401b12:	cli    
  401b13:	sbb    eax,0x547ca3d9
  401b18:	or     bh,BYTE PTR [edi+0x64]
  401b1b:	sub    DWORD PTR [ecx-0x9],0x2fa3180b
  401b22:	test   BYTE PTR [ebx],0x79
  401b25:	push   0xffffffa3
  401b27:	outs   dx,BYTE PTR ds:[esi]
  401b28:	pusha  
  401b29:	aam    0xe4
  401b2b:	sti    
  401b2c:	xor    ah,BYTE PTR [edx-0x4ea4de24]
  401b32:	int3   
  401b33:	sub    al,BYTE PTR [ecx+esi*8-0x1e]
  401b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b38:	fwait
  401b39:	push   ebx
  401b3a:	or     DWORD PTR [ebx+0x67a90552],0x519ab777
  401b44:	cld    
  401b45:	stos   BYTE PTR es:[edi],al
  401b46:	call   0x639f07e4
  401b4b:	fiadd  WORD PTR [esi-0x8]
  401b4e:	fist   DWORD PTR [edi+0x41abf036]
  401b54:	cli    
  401b55:	pop    ebx
  401b56:	mov    ebp,0x78cfc41e
  401b5b:	sub    al,0xd
  401b5d:	pop    eax
  401b5e:	jg     0x401bbd
  401b60:	(bad)  
  401b62:	adc    eax,0x10fc71c6
  401b67:	mov    al,ds:0xf4a021c0
  401b6c:	mov    ch,BYTE PTR [ecx]
  401b6e:	and    ah,BYTE PTR [eax+0x11a2e853]
  401b74:	dec    ebp
  401b75:	sbb    BYTE PTR [ecx],dl
  401b77:	add    ch,BYTE PTR [eax+0x75]
  401b7a:	xchg   edx,eax
  401b7b:	mov    ch,0x48
  401b7d:	pop    ebp
  401b7e:	pop    esp
  401b7f:	lds    edx,FWORD PTR [edi+0x56c4e115]
  401b85:	ds push ecx
  401b87:	dec    edi
  401b88:	mov    eax,ds:0xbc97a59f
  401b8d:	pop    ecx
  401b8e:	ret    0x2c89
  401b91:	ds mov ebp,0x988a0a83
  401b97:	sub    BYTE PTR [eax+edx*1-0x101568b8],bl
  401b9e:	fwait
  401b9f:	jb     0x401bc2
  401ba1:	push   0x2
  401ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba4:	lock mov al,ds:0x2f2b6440
  401baa:	cmp    BYTE PTR [esi],dh
  401bac:	clc    
  401bad:	xor    eax,0xfaae4130
  401bb2:	adc    BYTE PTR [esi],cl
  401bb4:	cmp    eax,DWORD PTR [edi+0x1c]
  401bb7:	bound  esi,QWORD PTR ds:0x28e26714
  401bbd:	ret    
  401bbe:	push   0x6a5bcea3
  401bc3:	push   0x44
  401bc5:	push   ecx
  401bc6:	test   DWORD PTR [edi+edx*4-0x36],esp
  401bca:	adc    eax,DWORD PTR [eax+0x4b2ff5ff]
  401bd0:	xchg   BYTE PTR cs:[ebx],dl
  401bd3:	and    edx,DWORD PTR [edx-0x52e5e48a]
  401bd9:	mov    ebp,0x959cd818
  401bde:	inc    ecx
  401bdf:	iret   
  401be0:	or     dl,0xb3
  401be3:	sbb    BYTE PTR [edi+eax*2-0x2],bl
  401be7:	push   esi
  401be8:	jmp    0x401c27
  401bea:	mov    al,0x7a
  401bec:	gs mov eax,0x6e1c7f27
  401bf2:	pop    ebp
  401bf3:	push   0xad70e87d
  401bf8:	mov    cl,0x42
  401bfa:	sbb    esi,DWORD PTR [edi-0x57d74191]
  401c00:	cdq    
  401c01:	ret    
  401c02:	loopne 0x401bb0
  401c04:	cs retf 
  401c06:	repnz pop ebp
  401c08:	xchg   ecx,eax
  401c09:	imul   ebp,DWORD PTR [ecx],0x24
  401c0c:	sub    eax,0xbc76da6d
  401c11:	clc    
  401c12:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401c14:	push   0x95b2b549
  401c19:	and    eax,0xc54797f1
  401c1e:	or     al,0xcb
  401c20:	lock sub esi,DWORD PTR [esi]
  401c23:	jno    0x401bbc
  401c25:	je     0x401c95
  401c27:	pop    ds
  401c28:	dec    eax
  401c29:	stos   BYTE PTR es:[edi],al
  401c2a:	inc    edx
  401c2b:	ja     0x401bb1
  401c2d:	retf   0x5b64
  401c30:	cmp    BYTE PTR [esi+0x72],bl
  401c33:	xor    al,0x1f
  401c35:	imul   ebp,eax,0xf256b7e9
  401c3b:	push   es
  401c3c:	enter  0x3cf8,0x64
  401c40:	adc    eax,0x29cc16a6
  401c45:	adc    BYTE PTR [edx],cl
  401c47:	add    eax,0x90a9ebb1
  401c4c:	sar    BYTE PTR [edi],1
  401c4e:	cmp    DWORD PTR [edx+esi*1+0x1838c1e8],edx
  401c55:	cld    
  401c56:	(bad)  
  401c57:	out    0x28,al
  401c59:	repnz xchg edi,eax
  401c5b:	popa   
  401c5c:	mov    dl,0xce
  401c5e:	ss sbb eax,0x5ee3e54e
  401c64:	in     eax,0xdd
  401c66:	mov    WORD PTR [eax-0x79],?
  401c69:	mov    ah,0x7c
  401c6b:	je     0x401c22
  401c6d:	fidivr DWORD PTR [edi]
  401c6f:	lods   al,BYTE PTR ds:[esi]
  401c70:	mov    esp,0x788d628e
  401c75:	loop   0x401cd2
  401c77:	sbb    DWORD PTR ds:0xb58926f8,ebp
  401c7d:	add    dl,dh
  401c7f:	add    ebx,ecx
  401c81:	in     al,0x9f
  401c83:	mov    edx,ebx
  401c85:	jne    0x401c09
  401c87:	mov    WORD PTR [eax+0x43],cs
  401c8a:	xchg   esp,eax
  401c8b:	shl    BYTE PTR [eax],1
  401c8d:	xchg   dl,cl
  401c8f:	or     al,0x15
  401c91:	adc    al,0x86
  401c93:	sar    DWORD PTR [edi+edx*4-0x5b8a7a97],cl
  401c9a:	fwait
  401c9b:	loop   0x401c88
  401c9d:	rcl    ecx,1
  401c9f:	arpl   bp,bp
  401ca1:	int3   
  401ca2:	imul   ebp,esp,0x94fa40a9
  401ca8:	xchg   ebp,eax
  401ca9:	in     al,0xe3
  401cab:	nop
  401cac:	xor    eax,0xed5290a1
  401cb1:	xor    BYTE PTR [edx-0x19317a8a],0xa5
  401cb8:	nop
  401cb9:	cs pop edi
  401cbb:	push   eax
  401cbc:	sub    cl,BYTE PTR [ebx]
  401cbe:	loope  0x401c93
  401cc0:	jns    0x401d35
  401cc2:	or     al,0x8
  401cc4:	adc    BYTE PTR ds:0x7c1ed17,bl
  401cca:	rol    ebx,0xdf
  401ccd:	gs inc edi
  401ccf:	fiadd  WORD PTR ds:0xbfed492e
  401cd5:	jp     0x401c62
  401cd7:	push   0x26
  401cd9:	mov    BYTE PTR [ecx+0x7a],ch
  401cdc:	mov    WORD PTR [edx],ss
  401cde:	jns    0x401d12
  401ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce1:	or     dh,dh
  401ce3:	and    al,0x72
  401ce5:	mov    ebx,0x96885b40
  401cea:	sub    esp,DWORD PTR [esi+eiz*1-0x677f7b34]
  401cf1:	jbe    0x401c79
  401cf3:	js     0x401d29
  401cf5:	sub    eax,0x5cf30996
  401cfa:	xchg   ebp,eax
  401cfb:	mov    al,ds:0xb0db1419
  401d00:	jmp    0x734d:0x5eb7b7b4
  401d07:	push   ebx
  401d08:	fbld   TBYTE PTR [edx]
  401d0a:	lea    eax,[edi-0x2dc9b5e1]
  401d10:	pop    es
  401d11:	or     BYTE PTR [edx],bl
  401d13:	and    al,0xa0
  401d15:	pop    edi
  401d16:	push   edi
  401d17:	cmp    eax,0x521f1921
  401d1c:	lods   eax,DWORD PTR ds:[esi]
  401d1d:	push   eax
  401d1e:	adc    bl,BYTE PTR [esi]
  401d20:	arpl   WORD PTR [esi+0x49],dx
  401d23:	sub    cl,BYTE PTR [ecx+0x61bd740]
  401d29:	ret    0x25ef
  401d2c:	call   0x74e444ff
  401d31:	push   cs
  401d32:	adc    dl,BYTE PTR [ecx-0x3c]
  401d35:	jbe    0x401db6
  401d37:	cs jmp 0x401da6
  401d3a:	icebp  
  401d3b:	jg     0x401cd7
  401d3d:	sub    edx,DWORD PTR [ebp-0x1115b4e7]
  401d43:	test   eax,0x7cd9deec
  401d48:	or     BYTE PTR [esi+eiz*8+0x5d],al
  401d4c:	mov    bh,0x9e
  401d4e:	jnp    0x401d23
  401d50:	pop    ds
  401d51:	push   ecx
  401d52:	fst    DWORD PTR [edx]
  401d54:	test   BYTE PTR [ebp-0x586474c4],0xb2
  401d5b:	je     0x401d47
  401d5d:	jo     0x401d4b
  401d5f:	push   ebx
  401d60:	loope  0x401ce6
  401d62:	mov    ebx,0x8dcc1b90
  401d67:	or     ah,dl
  401d69:	or     DWORD PTR cs:[ecx-0x21ed9cf1],edi
  401d70:	shl    DWORD PTR [eax],0x96
  401d73:	dec    edi
  401d74:	fs dec ecx
  401d76:	imul   esp,DWORD PTR [eax-0x5d],0xffffffe4
  401d7a:	int    0xc
  401d7c:	dec    esp
  401d7d:	cmp    edx,ebp
  401d7f:	mov    ah,0x2
  401d81:	and    eax,0x899cc172
  401d86:	in     al,dx
  401d87:	xchg   edx,eax
  401d88:	imul   edx,esp,0xffffffea
  401d8b:	mov    ecx,0x8b0e4f82
  401d90:	test   cl,0xbb
  401d93:	fcom   DWORD PTR [ebx]
  401d95:	push   ebx
  401d96:	aaa    
  401d97:	repz daa 
  401d99:	jns    0x401e00
  401d9b:	(bad)  
  401d9d:	leave  
  401d9e:	mov    bh,0xd1
  401da0:	imul   DWORD PTR [edi+0x3f]
  401da3:	dec    eax
  401da4:	sub    ebp,edi
  401da6:	push   cs
  401da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401da8:	fwait
  401da9:	adc    BYTE PTR [ecx+0x26],dl
  401dac:	mov    WORD PTR [ebx],bx
  401daf:	std    
  401db0:	sub    BYTE PTR [ebx],0x31
  401db3:	(bad)  
  401db4:	mov    ecx,0x8205f00c
  401db9:	ins    BYTE PTR es:[edi],dx
  401dba:	mov    al,ds:0xebe8006f
  401dbf:	out    0xab,al
  401dc1:	dec    edi
  401dc2:	mov    ds:0x156383e1,al
  401dc7:	(bad)  
  401dc8:	ret    
  401dc9:	or     al,0x5d
  401dcb:	imul   eax,esi,0x5a6b71ac
  401dd1:	inc    edx
  401dd2:	sbb    ebp,DWORD PTR cs:[eax+0x23e260b8]
  401dd9:	xor    eax,0x9446be80
  401dde:	addr16 pop ds
  401de0:	pop    ss
  401de1:	test   al,0xc
  401de3:	call   0x24980763
  401de8:	ror    DWORD PTR [edx-0x2184c93c],1
  401dee:	or     bl,BYTE PTR [ecx+0x5e]
  401df1:	mov    ah,0xee
  401df3:	cld    
  401df4:	add    eax,0xf0e89145
  401df9:	cmp    eax,0xca96bfb5
  401dfe:	xor    ecx,DWORD PTR [edx+0x3]
  401e01:	retf   
  401e02:	(bad)  
  401e03:	sbb    ecx,ecx
  401e05:	fild   WORD PTR [eax-0x697a6033]
  401e0b:	out    0x94,eax
  401e0d:	repnz mov esp,0xba9ded33
  401e13:	jle    0x401db3
  401e15:	lahf   
  401e16:	pushf  
  401e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e18:	test   al,0xa8
  401e1a:	scas   eax,DWORD PTR es:[edi]
  401e1b:	cmp    eax,0x9f48e5d0
  401e20:	xor    al,0x24
  401e22:	mov    eax,ds:0x42952994
  401e27:	lock arpl dx,bx
  401e2a:	xor    al,0x6
  401e2c:	out    0xa0,eax
  401e2e:	lods   al,BYTE PTR ds:[esi]
  401e30:	pop    ss
  401e31:	xchg   DWORD PTR [ecx+0x6e],ebx
  401e34:	adc    BYTE PTR [ecx+0x27],0x91
  401e38:	xchg   DWORD PTR [edx-0x614d0835],ebp
  401e3e:	jns    0x401e1f
  401e40:	inc    esp
  401e41:	cmp    eax,DWORD PTR [edi+0x40]
  401e44:	dec    DWORD PTR [eax-0xc]
  401e47:	cmc    
  401e48:	jecxz  0x401e70
  401e4a:	shl    DWORD PTR [edx-0x4887413d],cl
  401e50:	or     BYTE PTR [esi+0x1807697a],bl
  401e56:	adc    al,0xb6
  401e58:	or     BYTE PTR [ebx],dl
  401e5a:	or     dl,BYTE PTR [bx+di+0x1c]
  401e5e:	xchg   edx,eax
  401e5f:	popa   
  401e60:	call   0xa268:0x7bb25336
  401e67:	mov    cl,0xad
  401e69:	mov    ecx,0xb2f228b6
  401e6e:	(bad)  
  401e6f:	jl     0x401df2
  401e71:	pop    es
  401e72:	push   cs
  401e73:	jns    0x401e71
  401e75:	pop    edi
  401e76:	rcr    BYTE PTR [ecx+esi*4+0x47],0x48
  401e7b:	pop    ecx
  401e7c:	rol    ecx,cl
  401e7e:	add    cl,BYTE PTR [edx]
  401e80:	pop    eax
  401e81:	mov    ds:0xd65b9994,al
  401e86:	fst    st(5)
  401e88:	and    DWORD PTR [ecx-0x75],edi
  401e8b:	add    BYTE PTR [esi+0x6e8844c4],dl
  401e91:	dec    cx
  401e93:	jle    0x401e4f
  401e95:	rol    dh,0xfb
  401e98:	sahf   
  401e99:	les    eax,FWORD PTR [esi+0x589dba7f]
  401e9f:	cmp    al,0x17
  401ea1:	(bad)  
  401ea2:	push   ss
  401ea3:	je     0x401f0f
  401ea5:	inc    esp
  401ea6:	sti    
  401ea7:	pop    edi
  401ea8:	or     DWORD PTR [ecx+esi*4],0x6c
  401eac:	and    DWORD PTR [edi-0x2b],ebp
  401eaf:	dec    ebp
  401eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb1:	(bad)  
  401eb3:	pop    ebp
  401eb4:	adc    eax,eax
  401eb6:	js     0x401f13
  401eb8:	or     eax,0xa3365cdf
  401ebd:	(bad)
  401ec0:	xchg   BYTE PTR [esi+esi*1-0x21],ch
  401ec4:	push   ebx
  401ec5:	in     al,dx
  401ec6:	dec    esp
  401ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec8:	out    0x19,eax
  401eca:	fnsave [ebx-0x13]
  401ecd:	jl     0x401f24
  401ecf:	push   ss
  401ed0:	mov    edx,0x224bdfa2
  401ed5:	adc    al,0xaa
  401ed7:	inc    eax
  401ed8:	out    0x36,al
  401eda:	lea    edx,[esi-0x68]
  401edd:	neg    DWORD PTR [edx+0x37]
  401ee0:	loopne 0x401ea5
  401ee2:	dec    edi
  401ee3:	cmp    DWORD PTR [edi],esi
  401ee5:	addr16 xchg ecx,eax
  401ee7:	clc    
  401ee8:	sbb    eax,DWORD PTR [edi-0x24]
  401eeb:	cs pop ebx
  401eed:	clc    
  401eee:	popf   
  401eef:	cli    
  401ef0:	mov    ebx,0xc171d4d3
  401ef5:	sub    eax,0x5550708e
  401efa:	test   eax,0xc4f14b62
  401eff:	inc    ecx
  401f00:	sub    dl,BYTE PTR [ecx-0x17dd25bd]
  401f06:	(bad)  
  401f07:	sub    DWORD PTR [ebp+0x4a31e23],ebx
  401f0d:	mov    esp,ebp
  401f0f:	pop    ss
  401f10:	scas   eax,DWORD PTR es:[edi]
  401f11:	fidiv  DWORD PTR [ecx-0x4fc5dfcf]
  401f17:	daa    
  401f18:	jmp    0x401f1f
  401f1a:	es push eax
  401f1c:	js     0x401ea2
  401f1e:	or     al,0x79
  401f20:	imul   eax,DWORD PTR [ecx],0x4683c94e
  401f26:	iret   
  401f27:	add    ecx,edi
  401f29:	mov    DWORD PTR [ecx],edx
  401f2b:	xchg   ecx,edx
  401f2d:	mov    edi,0x446ed90b
  401f32:	std    
  401f33:	mov    bl,BYTE PTR [edi+0x6f]
  401f36:	sbb    BYTE PTR [ecx+eax*1],ch
  401f39:	mov    edx,0x398c883e
  401f3e:	push   ebp
  401f3f:	rcl    DWORD PTR [bx+si],1
  401f42:	dec    ebx
  401f43:	dec    ecx
  401f44:	dec    ebx
  401f45:	fwait
  401f46:	xor    eax,0x35f475e9
  401f4b:	adc    eax,0x5bb36d95
  401f50:	fs sub ebp,esp
  401f53:	or     al,0xf1
  401f55:	inc    esi
  401f56:	add    al,0x85
  401f58:	nop
  401f59:	test   al,0xc2
  401f5b:	cmp    DWORD PTR [ebp-0x21],edx
  401f5e:	inc    esp
  401f5f:	(bad)
  401f62:	test   eax,0x9ff78e38
  401f67:	mov    ds:0xcbdefd13,al
  401f6c:	call   0x5cc350b9
  401f71:	ret    0x1707
  401f74:	(bad)  
  401f75:	mov    cl,0x97
  401f77:	out    0xc5,al
  401f79:	scas   eax,DWORD PTR es:[edi]
  401f7a:	ret    0x85c
  401f7d:	bound  eax,QWORD PTR [edx+edi*2]
  401f80:	and    eax,0x2207dd97
  401f85:	rcr    BYTE PTR [ecx],0x8b
  401f88:	ror    BYTE PTR [ebp+0x52d9620e],cl
  401f8e:	push   ecx
  401f8f:	mov    eax,fs
  401f91:	mul    DWORD PTR [eax]
  401f93:	pop    esp
  401f94:	mov    eax,ds:0x52b9dc16
  401f99:	xor    esi,DWORD PTR [eax+0x7d]
  401f9c:	in     al,0xf0
  401f9e:	inc    edi
  401f9f:	push   esi
  401fa0:	xor    DWORD PTR [ebp+edx*4+0x24],ecx
  401fa4:	pop    ecx
  401fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa6:	mov    dl,0x18
  401fa8:	jo     0x401fa6
  401faa:	daa    
  401fab:	jae    0x401f45
  401fad:	push   eax
  401fae:	js     0x401fdc
  401fb0:	fsub   DWORD PTR [ebp+0x29]
  401fb3:	lods   eax,DWORD PTR ds:[esi]
  401fb4:	xchg   ebx,eax
  401fb5:	call   0x6b81:0x912cee25
  401fbc:	out    0x79,al
  401fbe:	(bad)  
  401fbf:	xor    bl,dl
  401fc1:	lea    edi,[ebx-0x20c3594a]
  401fc7:	aad    0x77
  401fc9:	int    0x5
  401fcb:	mov    ah,0x1c
  401fcd:	ins    BYTE PTR es:[edi],dx
  401fce:	pop    eax
  401fcf:	loope  0x401ff2
  401fd1:	sbb    ecx,DWORD PTR [edi+edx*1+0x1f5de166]
  401fd8:	jecxz  0x401f5d
  401fda:	pop    es
  401fdb:	out    0xdc,al
  401fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fde:	cmp    ah,BYTE PTR [edi]
  401fe0:	lahf   
  401fe1:	inc    esi
  401fe2:	repz mov eax,0xd5eb8961
  401fe8:	push   esi
  401fe9:	loope  0x402019
  401feb:	fld    DWORD PTR [edx+ebx*2+0x7b]
  401fef:	xchg   edi,eax
  401ff0:	jp     0x401fcf
  401ff2:	inc    esi
  401ff3:	sbb    BYTE PTR [ecx+0x68583c05],al
  401ff9:	scas   al,BYTE PTR es:[edi]
  401ffa:	add    al,0x8a
  401ffc:	push   esp
  401ffd:	imul   eax,DWORD PTR [ebp+0x7f],0x31a14491
  402004:	icebp  
  402005:	adc    BYTE PTR [ebx],dl
  402007:	pop    esp
  402008:	xor    al,0xb6
  40200a:	jnp    0x401f9c
  40200c:	aam    0x3
  40200e:	imul   edx,DWORD PTR [esi+edi*1+0x87ca61],0x52
  402016:	and    DWORD PTR [esi+0x1578172a],0xb115a81
  402020:	pop    eax
  402021:	(bad)  
  402023:	outs   dx,DWORD PTR ds:[esi]
  402024:	adc    bh,dl
  402026:	int    0xde
  402028:	inc    esi
  40202a:	repnz xor DWORD PTR [esi-0x6e],esi
  40202e:	mov    al,0xa0
  402030:	jmp    0xbe3c:0x6d4e163d
  402037:	xchg   edx,eax
  402038:	packuswb mm4,mm2
  40203b:	rol    DWORD PTR [ecx-0x1fe1fcb8],0xb4
  402042:	fist   DWORD PTR [eax]
  402044:	fdivr  DWORD PTR [esp+esi*8+0x73]
  402048:	rcr    BYTE PTR [eax-0x4e],cl
  40204b:	mov    edx,0x8484994e
  402050:	cmc    
  402051:	leave  
  402052:	jp     0x401fdc
  402054:	cld    
  402055:	adc    BYTE PTR [edx],ah
  402057:	call   0x98868a51
  40205c:	sbb    eax,0x517760ba
  402061:	push   cs
  402062:	push   esi
  402063:	dec    ecx
  402064:	adc    BYTE PTR [ebx],dh
  402066:	out    0xdb,eax
  402068:	cdq    
  402069:	sbb    eax,0x2e5fbc4b
  40206e:	pop    es
  40206f:	pop    ds
  402070:	xor    eax,0xccb1054e
  402075:	xchg   edx,eax
  402076:	test   dl,0xf8
  402079:	sub    eax,0xf5d8347d
  40207e:	mov    esp,DWORD PTR [eax]
  402080:	fs (bad) 
  402083:	dec    ecx
  402084:	repnz dec edx
  402086:	dec    esi
  402087:	sbb    ah,BYTE PTR [esi+ebp*4]
  40208a:	inc    ebp
  40208b:	pushf  
  40208c:	jp     0x40210a
  40208e:	inc    ebp
  40208f:	mov    ebp,DWORD PTR [esi+0x26]
  402092:	mov    ebx,0x74e055e0
  402097:	pusha  
  402098:	cli    
  402099:	sbb    dh,BYTE PTR [ebx-0x51263447]
  40209f:	scas   al,BYTE PTR es:[edi]
  4020a0:	xor    DWORD PTR [edi+ecx*2],edi
  4020a3:	xor    al,0x9
  4020a5:	push   esi
  4020a6:	sub    BYTE PTR [ecx],dl
  4020a8:	retf   0x9037
  4020ab:	icebp  
  4020ac:	inc    ebp
  4020ad:	fdiv   DWORD PTR [esi-0x1d]
  4020b0:	adc    DWORD PTR [eax+0x57],esp
  4020b3:	and    DWORD PTR [ecx],ecx
  4020b5:	sub    esi,ebp
  4020b7:	xchg   esi,eax
  4020b8:	inc    ebx
  4020b9:	out    0x4d,al
  4020bb:	mov    ebp,0x145121f6
  4020c0:	sahf   
  4020c1:	out    dx,al
  4020c2:	cmp    al,0x79
  4020c4:	mov    ch,0x4
  4020c6:	inc    edx
  4020c7:	inc    ebp
  4020c8:	cwde   
  4020c9:	mov    al,0x2b
  4020cb:	in     eax,dx
  4020cc:	mov    BYTE PTR [eax],ah
  4020ce:	and    ch,BYTE PTR [esi]
  4020d0:	icebp  
  4020d1:	add    al,0xa8
  4020d3:	pushf  
  4020d4:	rcl    edx,cl
  4020d6:	jb     0x4020dc
  4020d8:	les    esi,FWORD PTR [edi]
  4020da:	loopne 0x402146
  4020dc:	leave  
  4020dd:	mov    dl,0x9c
  4020df:	push   esp
  4020e0:	sub    al,0x7a
  4020e2:	iret   
  4020e3:	cmc    
  4020e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020e5:	rcl    ah,0x9d
  4020e8:	mov    ss,ebp
  4020ea:	leave  
  4020eb:	sub    BYTE PTR [edx-0x724c77e9],al
  4020f1:	dec    eax
  4020f2:	rol    BYTE PTR [esi-0x68],0xf7
  4020f6:	push   ss
  4020f7:	sti    
  4020f8:	add    bl,BYTE PTR [eax]
  4020fa:	popa   
  4020fb:	arpl   WORD PTR [ebp-0x22],bx
  4020fe:	jecxz  0x402164
  402100:	sbb    esi,edx
  402102:	stos   DWORD PTR es:[edi],eax
  402103:	or     al,0x22
  402105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402106:	sub    DWORD PTR [ebp+0x7e],0x4b
  40210a:	ss daa 
  40210c:	je     0x402126
  40210e:	fcom   QWORD PTR [esi]
  402110:	fdivr  DWORD PTR [ebx-0x70]
  402113:	xchg   ebp,eax
  402114:	fidiv  WORD PTR [esi+0x22]
  402117:	fld    QWORD PTR [edi-0x52]
  40211a:	add    eax,DWORD PTR [ebp+edx*2-0x503162ec]
  402121:	aaa    
  402122:	sbb    al,0x58
  402124:	sbb    esi,DWORD PTR [edx]
  402126:	xor    DWORD PTR [eax],0xfffffff6
  402129:	mov    WORD PTR [esp+ebx*8],es
  40212c:	stos   DWORD PTR es:[edi],eax
  40212d:	push   cs
  40212e:	(bad)  
  40212f:	and    DWORD PTR [ebx+0x3c],ecx
  402132:	cli    
  402133:	fsubr  DWORD PTR [edi]
  402135:	sbb    eax,0x63d45569
  40213a:	cld    
  40213b:	fsubr  QWORD PTR [ebp-0x6e61ee41]
  402141:	cmp    DWORD PTR [ebx],esp
  402143:	cmp    BYTE PTR [edi+0x11],dh
  402146:	sar    DWORD PTR [ecx],cl
  402148:	inc    esi
  402149:	and    edx,edx
  40214b:	es je  0x40216d
  40214e:	je     0x402117
  402150:	cmp    eax,0x1f9837f6
  402155:	push   ebp
  402156:	in     al,0xad
  402158:	in     al,dx
  402159:	imul   ebx,eax,0x3d09b9da
  40215f:	in     al,0xbe
  402161:	dec    edx
  402162:	lock sub eax,0xb8cf6a4f
  402168:	jle    0x402173
  40216a:	add    eax,0x8f63aef4
  40216f:	jle    0x4021af
  402171:	mov    dh,0xaf
  402173:	add    BYTE PTR [ebx],dl
  402175:	push   ebp
  402176:	inc    ecx
  402177:	lods   al,BYTE PTR ds:[esi]
  402178:	adc    eax,0x5eeb4a9b
  40217d:	xchg   BYTE PTR [ebx+0x69],bl
  402180:	test   DWORD PTR [eax],ebx
  402182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402183:	ret    0x3493
  402186:	xor    al,0xb5
  402188:	xor    eax,0xc1cc4cba
  40218d:	dec    edx
  40218e:	xchg   dl,dl
  402190:	fcmovb st,st(0)
  402192:	xor    ebp,DWORD PTR [ecx]
  402194:	mov    ecx,0x11b272c9
  402199:	sbb    al,BYTE PTR ss:[edi+0x60]
  40219d:	add    ch,BYTE PTR [edx+0x5cd421c4]
  4021a3:	xchg   ebp,eax
  4021a4:	dec    esi
  4021a5:	cmp    BYTE PTR [ecx],al
  4021a7:	(bad)
  4021aa:	icebp  
  4021ab:	xchg   edx,eax
  4021ac:	ja     0x40214d
  4021ae:	ins    BYTE PTR es:[edi],dx
  4021af:	ja     0x40216e
  4021b1:	outs   dx,BYTE PTR ds:[esi]
  4021b2:	loopne 0x402153
  4021b4:	jb     0x40213b
  4021b6:	push   es
  4021b7:	fist   DWORD PTR [edi]
  4021b9:	out    dx,al
  4021ba:	out    dx,al
  4021bb:	sti    
  4021bc:	mov    bl,0x3c
  4021be:	retf   
  4021bf:	add    al,0x76
  4021c1:	jecxz  0x40214c
  4021c3:	lea    ecx,[ebx+edi*2-0x44]
  4021c7:	fistp  DWORD PTR [eax]
  4021c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ca:	cmp    BYTE PTR [edi+eiz*8-0x6d],cl
  4021ce:	xchg   ecx,eax
  4021cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d0:	cwde   
  4021d1:	pop    ds
  4021d2:	jns    0x402210
  4021d4:	jno    0x4021e5
  4021d6:	pop    ecx
  4021d7:	push   ebx
  4021d8:	or     al,BYTE PTR [ecx-0x20a3b244]
  4021de:	fild   WORD PTR [ebx-0x4c]
  4021e1:	mov    esi,0x749a778a
  4021e6:	stc    
  4021e7:	mov    ds:0xff12a94f,al
  4021ec:	pop    edi
  4021ed:	aam    0xd9
  4021ef:	push   es
  4021f0:	push   ebx
  4021f1:	cmc    
  4021f2:	sar    bh,1
  4021f4:	sar    DWORD PTR [ebx-0x4],0x33
  4021f8:	mov    ds:0xb64343ab,al
  4021fd:	xchg   edi,eax
  4021fe:	and    ch,BYTE PTR [ecx+eax*1+0x7df8f55e]
  402205:	jle    0x4021f5
  402207:	lods   al,BYTE PTR ds:[esi]
  402208:	mov    dl,0x9e
  40220a:	or     ebp,DWORD PTR [edi-0x37daf0c1]
  402210:	ja     0x402274
  402212:	or     BYTE PTR [ebx],dl
  402214:	push   0x8a71aeeb
  402219:	(bad)  
  40221a:	jbe    0x4021cc
  40221c:	or     al,BYTE PTR ds:0x5404dc0f
  402222:	sar    DWORD PTR [ebx+0x79],1
  402225:	add    DWORD PTR [edx+esi*1+0x2fa3e0b7],esp
  40222c:	xor    al,0x13
  40222e:	test   BYTE PTR [ebx],al
  402230:	sub    al,0xce
  402232:	xchg   esi,eax
  402233:	pusha  
  402234:	jl     0x4022a6
  402236:	cmc    
  402237:	fst    DWORD PTR [eax+0x1f9e02bd]
  40223d:	in     eax,dx
  40223e:	test   BYTE PTR [ebp-0x2c],ch
  402241:	dec    ebx
  402242:	loopne 0x402268
  402244:	imul   eax,esp,0x9b5f41dc
  40224a:	mov    ebp,0xa6225cdf
  40224f:	mov    ds:0xe10cdbfb,al
  402254:	lock mov al,ds:0x7c23fb60
  40225b:	xor    DWORD PTR [esi+0x781cf6c5],eax
  402261:	inc    esi
  402262:	mov    WORD PTR ds:0xd29220c1,fs
  402268:	ss cmp esp,0x1e2dbe94
  40226f:	sbb    ah,ch
  402271:	jl     0x402265
  402273:	add    ebp,DWORD PTR [eax-0x1f]
  402276:	dec    ecx
  402277:	mov    ecx,0xc6cf44f2
  40227c:	pop    ebx
  40227d:	adc    bh,ch
  40227f:	popa   
  402280:	dec    esp
  402281:	jge    0x4022d7
  402283:	sub    bh,BYTE PTR [ecx+0xb67ba93]
  402289:	repz mov al,al
  40228c:	shl    BYTE PTR [ebx],0xe8
  40228f:	dec    DWORD PTR [ebp-0x7d]
  402292:	inc    esp
  402293:	adc    BYTE PTR [eax+0xe],0x9
  402297:	pop    es
  402298:	dec    ebx
  402299:	mov    al,ds:0x280d9c5d
  40229e:	in     al,0x36
  4022a0:	mov    ah,0x59
  4022a2:	xor    edx,esi
  4022a4:	(bad)  
  4022a5:	out    dx,al
  4022a6:	test   BYTE PTR ds:0x17d19728,ah
  4022ac:	add    edi,DWORD PTR [ebx+ebx*4-0x7694dd05]
  4022b3:	jmp    0x510d68a
  4022b8:	hlt    
  4022b9:	cmp    DWORD PTR ds:0xd832ef8b,ebp
  4022bf:	ins    DWORD PTR es:[edi],dx
  4022c0:	xor    al,BYTE PTR [ebx]
  4022c2:	hlt    
  4022c3:	jns    0x40231d
  4022c5:	vunpcklps ymm7,ymm1,YMMWORD PTR ds:0x3954c995
  4022cd:	loopne 0x402301
  4022cf:	add    al,0xb6
  4022d1:	sbb    eax,0xecc69634
  4022d6:	jecxz  0x4022a1
  4022d8:	push   ss
  4022d9:	mov    ch,0xaa
  4022db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022dc:	mov    edi,DWORD PTR [ecx+edx*8-0xe]
  4022e0:	fnop   
  4022e2:	mov    es,WORD PTR [edi]
  4022e4:	data16 jns 0x4022df
  4022e7:	push   esi
  4022e8:	lods   eax,DWORD PTR ds:[esi]
  4022e9:	jg     0x402284
  4022eb:	sub    al,BYTE PTR [ecx-0x3778a70]
  4022f1:	gs stc 
  4022f3:	rcr    DWORD PTR [ebp+0x34],1
  4022f6:	push   ebx
  4022f7:	pop    edx
  4022f8:	add    bh,BYTE PTR [edx-0x24]
  4022fb:	push   es
  4022fc:	mov    edi,DWORD PTR [ebx+edx*4]
  4022ff:	outs   dx,BYTE PTR ds:[esi]
  402300:	jnp    0x40237b
  402302:	in     al,0xdb
  402304:	mov    eax,ds:0xdf020e97
  402309:	xchg   ecx,eax
  40230a:	in     al,0xa8
  40230c:	or     eax,0x8266000a
  402311:	mov    eax,0xe3bbf839
  402316:	cmp    eax,0xd3ba83b4
  40231b:	mov    ebx,0x7ef4dad8
  402320:	push   0xffffff85
  402322:	fidivr DWORD PTR ds:0x98345f9
  402328:	add    DWORD PTR [ebx-0x79],eax
  40232b:	sbb    BYTE PTR [ecx-0x14],bh
  40232e:	push   edx
  40232f:	mov    DWORD PTR [eax],ebx
  402331:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402333:	fstp   st(1)
  402335:	(bad)  
  402336:	xchg   edx,eax
  402337:	xor    DWORD PTR [ecx],ebp
  402339:	inc    ebx
  40233a:	imul   ecx,DWORD PTR [ebp+0x77153ee5],0x59
  402341:	jno    0x402326
  402343:	test   al,0x24
  402345:	sbb    eax,0x7d351510
  40234a:	lahf   
  40234b:	cs pushf 
  40234d:	sub    esp,DWORD PTR [ecx-0x7beccd24]
  402353:	dec    ebx
  402354:	push   ds
  402355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402356:	mov    WORD PTR [ebp-0x39],?
  402359:	add    cl,dl
  40235b:	mov    ebx,edx
  40235d:	mov    ch,0x36
  40235f:	lock lea ecx,[edx-0x54]
  402363:	mov    ah,0xf2
  402365:	mov    esi,0x6ca26521
  40236a:	ja     0x402384
  40236c:	imul   edi,DWORD PTR [ebx-0x67a73795],0x9d1f7968
  402376:	rcl    DWORD PTR ds:0x588b4387,cl
  40237c:	sbb    ebp,esp
  40237e:	push   edx
  40237f:	repnz inc eax
  402381:	add    eax,0x76d53c6c
  402386:	sub    al,0x83
  402388:	pop    edx
  402389:	pushf  
  40238a:	inc    esi
  40238b:	(bad)  
  40238c:	ins    DWORD PTR es:[edi],dx
  40238d:	loopne 0x40237e
  40238f:	and    BYTE PTR [eax],bl
  402391:	mov    eax,ds:0x7f095115
  402396:	mov    esi,0x517571c
  40239b:	(bad)  
  40239d:	outs   dx,DWORD PTR ds:[esi]
  40239e:	(bad)  
  40239f:	clc    
  4023a0:	lods   eax,DWORD PTR ds:[esi]
  4023a1:	shr    ebx,0x20
  4023a4:	shl    BYTE PTR [edi-0x73],0x33
  4023a8:	les    edi,FWORD PTR [eax]
  4023aa:	xchg   edi,eax
  4023ab:	mov    cl,0x54
  4023ad:	leave  
  4023ae:	fisub  WORD PTR [ebp+0x43]
  4023b1:	push   esp
  4023b2:	xlat   BYTE PTR ds:[ebx]
  4023b3:	ins    DWORD PTR es:[edi],dx
  4023b4:	jnp    0x4023ef
  4023b6:	mov    ebx,0x90d15b03
  4023bb:	mov    dl,0xc9
  4023bd:	dec    eax
  4023be:	stos   BYTE PTR es:[edi],al
  4023bf:	inc    esp
  4023c0:	jge    0x402410
  4023c2:	loope  0x40242b
  4023c4:	in     al,0x9b
  4023c6:	call   0x348b:0xee9a1c03
  4023cd:	cmp    eax,0xbf0b1f93
  4023d2:	inc    ebx
  4023d3:	adc    eax,0x155eae40
  4023d8:	dec    edi
  4023d9:	int    0x94
  4023db:	xor    DWORD PTR [ecx+0x5d],eax
  4023de:	or     cl,dl
  4023e0:	imul   esi,ecx,0xa962b207
  4023e6:	addr16 pop ebx
  4023e8:	sub    DWORD PTR [edi],ecx
  4023ea:	xchg   ebp,eax
  4023eb:	fyl2x  
  4023ed:	mov    bh,0x78
  4023ef:	repnz add al,0x29
  4023f2:	cs push esp
  4023f4:	pop    es
  4023f5:	or     ebx,DWORD PTR [edi]
  4023f7:	jae    0x4023e5
  4023f9:	sub    BYTE PTR [edx+0x4],ah
  4023fc:	pop    eax
  4023fd:	imul   edi,DWORD PTR [edi+eiz*8+0xdbfe03e],0xf
  402405:	loope  0x4023e8
  402407:	div    DWORD PTR [edx-0x62]
  40240a:	stos   DWORD PTR es:[edi],eax
  40240b:	adc    cl,BYTE PTR [edx-0x76]
  40240e:	xchg   esi,eax
  40240f:	je     0x4023a7
  402411:	test   BYTE PTR [edx-0x693f8d6],dh
  402417:	dec    esi
  402418:	or     dl,0x1f
  40241b:	aaa    
  40241c:	or     dl,BYTE PTR [ebx+0x75c8f2d6]
  402422:	cwde   
  402423:	fldenv [esi-0x37]
  402426:	and    al,0x4a
  402428:	sbb    eax,0x789d79fc
  40242d:	xor    BYTE PTR [ecx-0xa],ch
  402430:	sar    bl,cl
  402432:	inc    BYTE PTR [ebp+0x109fdb31]
  402438:	es out dx,al
  40243a:	xchg   ecx,eax
  40243b:	pop    edx
  40243c:	int    0xc8
  40243e:	lods   al,BYTE PTR ds:[esi]
  40243f:	fist   DWORD PTR [edx-0x634da0bc]
  402445:	aam    0xd6
  402447:	dec    eax
  402448:	push   esi
  402449:	es lods al,BYTE PTR es:[esi]
  40244c:	out    dx,al
  40244d:	enter  0xeaa9,0x39
  402451:	call   0x10213d79
  402456:	fbld   TBYTE PTR [eax]
  402458:	cmp    BYTE PTR [edi-0xa],cl
  40245b:	cwde   
  40245c:	mov    esp,0x499acba6
  402461:	mov    edx,0xf912ff5d
  402466:	xor    edx,eax
  402468:	imul   edx,DWORD PTR [esi-0x4c],0xbb5a5506
  40246f:	outs   dx,DWORD PTR ds:[esi]
  402470:	add    esi,0x29
  402473:	jge    0x4024e0
  402475:	xchg   BYTE PTR [ebp+edi*8-0x27811e16],ch
  40247c:	outs   dx,BYTE PTR ds:[esi]
  40247d:	adc    al,0xa1
  40247f:	in     al,0x74
  402481:	adc    al,0xd0
  402483:	leave  
  402484:	mov    eax,0x56883ff1
  402489:	mov    dl,0xd7
  40248b:	fadd   QWORD PTR [esi]
  40248d:	leave  
  40248e:	pop    esp
  40248f:	mov    edi,0x903c48e6
  402494:	jb     0x4024f3
  402496:	pop    ebx
  402497:	and    al,0xe5
  402499:	pop    eax
  40249a:	dec    ecx
  40249b:	fcom   QWORD PTR ds:0x55ac0931
  4024a1:	sub    eax,0xc84ccd7
  4024a6:	sbb    BYTE PTR [esi+0x2e],ch
  4024a9:	ror    BYTE PTR ds:0x910a61cf,1
  4024af:	xchg   edx,eax
  4024b0:	(bad)  
  4024b1:	mov    ah,0x7a
  4024b3:	std    
  4024b4:	dec    esp
  4024b5:	aas    
  4024b6:	mov    eax,DWORD PTR [ebx-0x38a900db]
  4024bc:	push   0x1a
  4024be:	xor    eax,0x8622c6f5
  4024c3:	rcl    DWORD PTR [ecx+eiz*2+0x7d],0x63
  4024c8:	test   BYTE PTR [eax+0x62],ch
  4024cb:	(bad)  
  4024cd:	retf   0x729c
  4024d0:	xabort 0x5f
  4024d3:	xor    BYTE PTR [edi+0x182b6109],cl
  4024d9:	xor    bl,ah
  4024db:	and    ebx,DWORD PTR [esi-0x2cf5c0cf]
  4024e1:	inc    ecx
  4024e2:	xchg   ebx,eax
  4024e3:	test   eax,0x4b3253ff
  4024e8:	popa   
  4024e9:	inc    edx
  4024ea:	add    al,0x72
  4024ec:	pop    ecx
  4024ed:	xchg   ebp,eax
  4024ee:	add    DWORD PTR [edi+0x64],ecx
  4024f1:	das    
  4024f2:	pushf  
  4024f3:	fisttp WORD PTR [ecx-0x30]
  4024f6:	jb     0x402505
  4024f8:	mov    esp,0xb176fe6f
  4024fd:	(bad)  
  4024fe:	hlt    
  4024ff:	mov    ebp,0xdd91f117
  402504:	and    al,0xb8
  402506:	pop    edx
  402507:	jnp    0x4024e4
  402509:	push   es
  40250a:	jmp    0x4024cf
  40250c:	test   BYTE PTR ds:0x70ed4cf6,ch
  402512:	pop    ecx
  402513:	test   eax,0xce05a955
  402518:	mov    eax,0xd0c479a5
  40251d:	das    
  40251e:	pop    ebx
  40251f:	jecxz  0x40258c
  402521:	mov    dh,0xce
  402523:	push   ebp
  402524:	or     esi,DWORD PTR [edi-0x47]
  402527:	nop
  402528:	jne    0x40253d
  40252a:	les    esp,FWORD PTR [ebx+0x6e47910]
  402530:	pop    ebp
  402531:	fyl2xp1 
  402533:	xchg   ecx,eax
  402534:	fs xor DWORD PTR ds:[edx-0x2e],ebp
  402539:	mov    al,ds:0xa5680e8e
  40253e:	fs push 0x29d7941c
  402544:	inc    BYTE PTR [edx+0x1d495707]
  40254a:	pop    ecx
  40254b:	adc    DWORD PTR [esi+0x61adb9e6],0x28
  402552:	test   eax,0xbfba6359
  402557:	push   esi
  402558:	mov    gs,esp
  40255a:	ror    DWORD PTR [ebp+eiz*2+0x6e],cl
  40255e:	xchg   ebp,eax
  40255f:	clc    
  402560:	adc    al,0xea
  402562:	cmp    esp,0x23
  402565:	inc    ebp
  402566:	mov    ebx,DWORD PTR [eax]
  402568:	fsub   QWORD PTR [edi+0x77974cc9]
  40256e:	out    dx,eax
  40256f:	test   BYTE PTR [ebp+0x17],dh
  402572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402573:	ror    BYTE PTR [edi-0x2e],1
  402576:	rol    DWORD PTR [ebx+0x7f88feca],cl
  40257c:	inc    ebx
  40257d:	aas    
  40257e:	or     al,BYTE PTR [eax]
  402580:	mov    ebp,0x450c64d7
  402585:	in     eax,dx
  402586:	fs int 0xf6
  402589:	mov    bl,0xca
  40258b:	push   ecx
  40258c:	mov    ebx,0x7d33f6e5
  402591:	jno    0x402594
  402593:	div    DWORD PTR [edx-0x3315a30f]
  402599:	or     eax,0x2b8fa553
  40259e:	cdq    
  40259f:	jmp    0xdd8:0x8408caa3
  4025a6:	cwde   
  4025a7:	(bad)  
  4025a8:	ins    BYTE PTR es:[edi],dx
  4025a9:	fmul   QWORD PTR [ebx]
  4025ab:	rcl    BYTE PTR [ebp-0x52],1
  4025ae:	xchg   DWORD PTR [ebx+esi*1+0x6d],edx
  4025b2:	fwait
  4025b3:	sub    DWORD PTR [eax],edi
  4025b5:	enter  0x8f6d,0x6
  4025b9:	out    dx,eax
  4025ba:	xor    BYTE PTR ds:0x77729b65,dh
  4025c0:	jne    0x402640
  4025c2:	and    eax,0x2ffc6496
  4025c7:	add    edi,edi
  4025c9:	dec    edi
  4025ca:	mov    ah,0x4c
  4025cc:	lahf   
  4025cd:	or     eax,0xec37d11a
  4025d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d3:	movaps xmm3,XMMWORD PTR [edx+0x13525089]
  4025da:	push   0x8c0e6af9
  4025df:	sbb    eax,0xe4790b3d
  4025e4:	push   ss
  4025e5:	fwait
  4025e6:	dec    ebx
  4025e7:	fs mov bh,0x99
  4025ea:	mov    WORD PTR [ecx-0x1f],gs
  4025ed:	clc    
  4025ee:	aad    0xb0
  4025f0:	cmp    BYTE PTR [ecx-0x5e],dl
  4025f3:	mov    ds:0x2ae56449,eax
  4025f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025f9:	inc    esi
  4025fa:	xchg   ebp,eax
  4025fb:	hlt    
  4025fc:	jle    0x40265c
  4025fe:	out    0xb8,al
  402600:	pop    eax
  402601:	push   ss
  402602:	leave  
  402603:	mov    cl,0x9d
  402605:	xchg   esp,eax
  402606:	adc    ch,ch
  402608:	cmc    
  402609:	push   ebx
  40260a:	clc    
  40260b:	outs   dx,DWORD PTR ds:[esi]
  40260c:	push   cs
  40260d:	add    eax,0x1fa49a5a
  402612:	out    0x68,al
  402614:	in     al,0xf8
  402616:	inc    ecx
  402617:	jmp    0xced971bf
  40261c:	call   0xb35c7255
  402621:	imul   esp,DWORD PTR [edi+ebp*8+0x6c],0x19
  402626:	jne    0x40265b
  402628:	ss loope 0x4025fd
  40262b:	or     BYTE PTR [ebx+0x7c],0xda
  40262f:	mov    esi,0xedc6f0d8
  402634:	push   ss
  402635:	dec    esi
  402636:	in     al,dx
  402637:	mov    cl,0x6d
  402639:	jge    0x4025c6
  40263b:	jae    0x402691
  40263d:	fsubr  QWORD PTR [ebx-0x73019a4d]
  402643:	mov    ?,WORD PTR [ebp+0x0]
  402646:	rcr    DWORD PTR [edx+0x5c11c49],1
  40264c:	mov    esi,0x8a7c1554
  402651:	adc    ch,BYTE PTR [edi-0x1c]
  402654:	ret    
  402655:	in     al,dx
  402656:	in     eax,dx
  402657:	jmp    0x1a27ec9
  40265c:	pop    esi
  40265d:	out    0x8f,eax
  40265f:	pop    edx
  402660:	enter  0xdecd,0x39
  402664:	mov    dh,0x44
  402667:	cmp    ch,BYTE PTR [ebp-0x1ebdd1e3]
  40266d:	mov    eax,0xd8c38252
  402672:	dec    esp
  402673:	pushf  
  402674:	xchg   esp,eax
  402675:	hlt    
  402676:	pop    eax
  402677:	adc    cl,BYTE PTR ds:0x8a29acc0
  40267d:	(bad)  
  40267e:	loope  0x402671
  402680:	cmp    eax,0xf4d8256a
  402685:	sbb    DWORD PTR [ecx-0x30],eax
  402688:	push   esp
  402689:	stc    
  40268a:	and    al,ah
  40268c:	pop    ds
  40268d:	and    al,BYTE PTR [eax]
  40268f:	push   esp
  402690:	or     BYTE PTR [ebx+0x7c],dl
  402693:	in     eax,dx
  402694:	(bad)  
  402695:	scas   eax,DWORD PTR es:[edi]
  402696:	jg     0x402668
  402698:	adc    esp,edi
  40269a:	idiv   BYTE PTR [ebx-0x11]
  40269d:	jbe    0x40269a
  40269f:	jo     0x40268e
  4026a1:	(bad)  
  4026a2:	bound  ebx,QWORD PTR [ecx-0x6f]
  4026a5:	cmp    eax,0x7223fab7
  4026aa:	add    esi,DWORD PTR [eax+0x42]
  4026ad:	xchg   ebp,eax
  4026ae:	fcomp  QWORD PTR [esi+0x59ca2342]
  4026b4:	hlt    
  4026b5:	pop    eax
  4026b6:	sbb    eax,DWORD PTR [ecx+0xda0e52]
  4026bc:	xchg   ebp,eax
  4026bd:	(bad)  
  4026bf:	pop    edi
  4026c0:	mov    ah,0x49
  4026c2:	mov    edx,DWORD PTR [ebp-0x58c4558f]
  4026c8:	mov    eax,0x844b0cf1
  4026cd:	out    dx,al
  4026ce:	mov    ds:0xa697a1a6,al
  4026d4:	cdq    
  4026d5:	cmp    bh,ah
  4026d7:	mov    ch,0x46
  4026d9:	test   DWORD PTR [ebp+0x7],edi
  4026dc:	in     eax,dx
  4026dd:	ss ja  0x402710
  4026e0:	dec    edi
  4026e1:	sar    DWORD PTR [edi],cl
  4026e3:	retf   0x2d07
  4026e6:	jecxz  0x40268f
  4026e8:	mov    ds:0x7f308aec,al
  4026ed:	fiadd  WORD PTR [ebx]
  4026ef:	out    0x8a,eax
  4026f1:	sbb    DWORD PTR [edi-0x6fbfc200],ecx
  4026f7:	ja     0x40272c
  4026f9:	push   ecx
  4026fa:	imul   ebx,DWORD PTR [edi-0x5],0xffffff87
  4026fe:	repz data16 stc 
  402701:	imul   eax,esp,0xffffff86
  402704:	inc    esi
  402705:	add    eax,0xd81a5847
  40270a:	repz daa 
  40270c:	test   BYTE PTR [esp+edx*8],al
  40270f:	mov    BYTE PTR [edi+0x259a2da5],bh
  402715:	rcr    BYTE PTR [edx+0x70009ea2],1
  40271b:	scas   al,BYTE PTR es:[edi]
  40271c:	mov    eax,0xd689eb65
  402721:	clc    
  402722:	sbb    DWORD PTR [ebx+ebp*8-0x7a],eax
  402726:	jp     0x4026e2
  402728:	cmp    ah,bl
  40272a:	je     0x40276d
  40272c:	mov    dl,0xb0
  40272e:	les    esi,FWORD PTR [esi+0x64]
  402731:	les    ebx,FWORD PTR [edi+0x41]
  402734:	add    eax,0x259326a2
  402739:	retf   0xe81d
  40273c:	cld    
  40273d:	add    al,0x23
  40273f:	jge    0x4027a9
  402741:	hlt    
  402742:	xor    BYTE PTR [edx-0x486d4517],cl
  402748:	cli    
  402749:	cmp    al,0xe8
  40274b:	mov    WORD PTR [esi+0x1bd2fb8c],es
  402751:	add    BYTE PTR [edi],0xad
  402754:	cwde   
  402755:	out    dx,eax
  402756:	icebp  
  402757:	addr16 cmc 
  402759:	neg    DWORD PTR [edx]
  40275b:	(bad)  
  40275c:	repz cld 
  40275e:	sbb    ebx,esi
  402760:	call   0x2b9a:0xfdd04144
  402767:	test   DWORD PTR [ecx-0x5e],esp
  40276a:	jg     0x402770
  40276c:	and    eax,0x5cca57d2
  402771:	nop
  402772:	(bad)
  402775:	mov    esp,0xc0e9f0c9
  40277a:	adc    ebp,DWORD PTR [ecx]
  40277c:	int3   
  40277d:	mov    eax,ds:0x2ae405e1
  402782:	dec    esp
  402783:	mov    edi,0xc9ec4095
  402788:	jle    0x402785
  40278a:	mov    bh,0xfc
  40278c:	push   0xfffffff8
  40278e:	jnp    0x4027f4
  402790:	sbb    bh,bl
  402792:	cmp    BYTE PTR [eax+0x6d386be2],0x3e
  402799:	mov    fs,WORD PTR [esi+0x16]
  40279c:	lods   eax,DWORD PTR ds:[esi]
  40279d:	aad    0x8d
  40279f:	dec    edi
  4027a0:	cmp    cl,ah
  4027a2:	add    bl,0x2a
  4027a5:	mov    ebp,0xf6613324
  4027aa:	bound  edi,QWORD PTR [esi-0x7d]
  4027ad:	and    DWORD PTR [edx+0x62357d21],0x43
  4027b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b5:	inc    ecx
  4027b6:	ins    DWORD PTR es:[edi],dx
  4027b7:	mov    ch,0xe3
  4027b9:	fsubr  QWORD PTR [esp+ecx*1+0x4c]
  4027bd:	loopne 0x40281b
  4027bf:	dec    ecx
  4027c0:	fwait
  4027c1:	scas   eax,DWORD PTR es:[edi]
  4027c2:	fisttp WORD PTR [eax]
  4027c4:	add    al,0xb9
  4027c6:	xchg   esi,eax
  4027c7:	xor    BYTE PTR [ebx-0xd87af55],cl
  4027cd:	jbe    0x4027f6
  4027cf:	dec    edi
  4027d0:	out    dx,al
  4027d1:	sub    BYTE PTR [edi+0x2d02b252],bl
  4027d7:	aad    0x46
  4027d9:	pop    ds
  4027da:	mul    BYTE PTR [ebx]
  4027dc:	imul   esp,ebp,0x3e46755
  4027e2:	or     bl,bl
  4027e4:	test   BYTE PTR [edx],dh
  4027e6:	(bad)  
  4027e7:	push   ss
  4027e8:	push   ecx
  4027e9:	and    BYTE PTR gs:[edx],ah
  4027ec:	dec    esi
  4027ed:	sub    BYTE PTR [ecx],dh
  4027ef:	pop    ecx
  4027f0:	add    dh,BYTE PTR ds:0xee856440
  4027f6:	inc    eax
  4027f7:	iret   
  4027f8:	dec    ecx
  4027f9:	xor    eax,0xc5e6e5c6
  4027fe:	enter  0x4535,0x1e
  402802:	shr    DWORD PTR [edx+0x11],0x80
  402806:	pop    es
  402807:	xor    ch,BYTE PTR [edi+0x1c]
  40280a:	loopne 0x40287f
  40280c:	imul   ecx,DWORD PTR [edx],0x5ad8f90f
  402812:	(bad)  
  402813:	clc    
  402814:	(bad)  
  402815:	(bad)  
  402816:	pop    esi
  402817:	out    dx,eax
  402818:	dec    edx
  402819:	das    
  40281a:	cmp    bh,bh
  40281c:	(bad)  
  40281d:	adc    DWORD PTR [ecx+0x47aa78b2],ebx
  402823:	push   edi
  402824:	mov    ss,WORD PTR [ebx]
  402826:	outs   dx,DWORD PTR ds:[esi]
  402827:	or     DWORD PTR [eax-0x3902d872],esi
  40282d:	add    eax,0x724fcfb8
  402832:	mov    ds:0xf7ca30f3,al
  402837:	imul   ebx,DWORD PTR [edx-0x43],0x9cd4267
  40283e:	out    0x56,al
  402840:	jecxz  0x402823
  402842:	mov    ah,0xb3
  402844:	mov    bl,0x51
  402846:	dec    ebx
  402847:	js     0x402841
  402849:	stos   DWORD PTR es:[edi],eax
  40284a:	xchg   ecx,eax
  40284b:	push   edx
  40284c:	fwait
  40284d:	mov    al,ds:0x1f38fa4
  402852:	add    al,0x5c
  402854:	cdq    
  402855:	push   0xd
  402857:	jnp    0x4027f6
  402859:	sub    ebp,DWORD PTR [eax-0x8]
  40285c:	iret   
  40285d:	cmc    
  40285e:	in     eax,0xfc
  402860:	fisub  DWORD PTR [ecx]
  402862:	push   ds
  402863:	sbb    al,dl
  402865:	fldenv [edx+0x3fc839a2]
  40286b:	jecxz  0x402823
  40286d:	xor    eax,0xba5dba44
  402872:	cs call 0x813f9639
  402878:	pushf  
  402879:	adc    ebx,DWORD PTR [esi*1-0x7441e63c]
  402880:	ja     0x402899
  402882:	out    0x7,eax
  402884:	pusha  
  402885:	adc    ebp,DWORD PTR [ebp-0x6d]
  402888:	mov    DWORD PTR [edx-0x16c24c44],esi
  40288e:	(bad)  
  40288f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402890:	fimul  DWORD PTR [ecx+0x3d1dfe84]
  402896:	iret   
  402897:	pusha  
  402898:	xor    edx,DWORD PTR [edx-0xd]
  40289b:	push   ds
  40289c:	clc    
  40289d:	push   0x8f2bd188
  4028a2:	call   0xecea99ff
  4028a7:	jmp    0x40284d
  4028a9:	jns    0x4028c0
  4028ab:	out    0xa3,al
  4028ad:	bound  eax,QWORD PTR [edi-0x47ebb8ed]
  4028b3:	inc    edi
  4028b4:	jle    0x4028b3
  4028b6:	dec    eax
  4028b7:	out    0x75,eax
  4028b9:	or     eax,0x6b07d850
  4028be:	mov    ah,0x26
  4028c0:	(bad)  
  4028c1:	mov    fs,WORD PTR [ebx]
  4028c3:	jmp    0x875659f1
  4028c8:	xchg   ecx,eax
  4028c9:	outs   dx,DWORD PTR ds:[esi]
  4028ca:	sub    eax,0xa6a794ab
  4028cf:	inc    eax
  4028d0:	pushf  
  4028d1:	popf   
  4028d2:	shl    DWORD PTR [ebp+0x42],cl
  4028d5:	mov    bh,0x71
  4028d7:	mov    dh,ch
  4028d9:	cwde   
  4028da:	jl     0x4028d9
  4028dc:	enter  0x7ad,0xdd
  4028e0:	pop    edx
  4028e1:	jmp    0xc369:0x49dc7734
  4028e8:	sar    BYTE PTR [edx-0x6b],1
  4028eb:	mov    ecx,0xccb4a707
  4028f0:	cmp    ch,BYTE PTR [ebx+0x547641ef]
  4028f6:	jge    0x402947
  4028f8:	mov    al,ds:0xfe60f859
  4028fd:	push   esi
  4028fe:	push   ss
  4028ff:	adc    DWORD PTR [esi+0x6a],ebp
  402902:	jmp    0x402943
  402904:	sub    esp,ebp
  402906:	sub    cl,BYTE PTR [ebx-0x7e324242]
  40290c:	sbb    al,0x52
  40290e:	jmp    0x4028d4
  402910:	push   ebx
  402911:	cli    
  402912:	ja     0x402961
  402914:	mov    edi,0x57344bf7
  402919:	jge    0x402936
  40291b:	ins    BYTE PTR es:[edi],dx
  40291c:	xlat   BYTE PTR ds:[ebx]
  40291d:	popf   
  40291e:	jl     0x402990
  402920:	sbb    ebp,DWORD PTR [esi+eax*1+0x704f5e05]
  402927:	jmp    0x4029a8
  402929:	adc    BYTE PTR [edx-0x183899a6],dh
  40292f:	les    esi,FWORD PTR [ebx+0x383d67ca]
  402935:	mov    bh,0x62
  402937:	adc    eax,0xef419be8
  40293c:	cmp    bh,0x5d
  40293f:	mov    fs:0xcfce58d6,al
  402945:	jl     0x402965
  402947:	repz ror al,1
  40294a:	test   al,0x27
  40294c:	and    DWORD PTR [esi+eiz*2-0x68],ebp
  402950:	(bad)  
  402951:	fisub  DWORD PTR [ecx-0x2b]
  402954:	inc    ebp
  402955:	loopne 0x402985
  402957:	test   BYTE PTR [edx],dl
  402959:	dec    ecx
  40295a:	push   ecx
  40295b:	cld    
  40295c:	push   es
  40295d:	inc    edx
  40295f:	cli    
  402960:	jnp    0x4029da
  402962:	xor    esi,eax
  402964:	sti    
  402965:	int    0xae
  402967:	je     0x40299c
  402969:	pop    DWORD PTR [ebp+0x4f3ed82d]
  40296f:	stos   BYTE PTR es:[edi],al
  402970:	stos   DWORD PTR es:[edi],eax
  402971:	xor    BYTE PTR [esi-0x80],cl
  402974:	xor    al,BYTE PTR [ebx-0xf]
  402977:	mov    bl,0x4b
  402979:	xor    BYTE PTR [ebp+eax*1-0x2b6abf82],0xbb
  402981:	xchg   esp,eax
  402982:	cmp    bh,ah
  402984:	pop    es
  402985:	rcl    BYTE PTR [esi],cl
  402987:	dec    edx
  402988:	push   0x729fb938
  40298d:	mov    eax,ds:0xe9c0388e
  402992:	push   0x38
  402994:	mov    esi,0xe6377148
  402999:	cli    
  40299a:	cmc    
  40299b:	fdiv   DWORD PTR [esi+0x68165f63]
  4029a1:	das    
  4029a2:	out    dx,eax
  4029a3:	in     eax,0xb4
  4029a5:	add    eax,0xe3b69c87
  4029aa:	add    al,BYTE PTR [edi]
  4029ac:	sbb    ah,BYTE PTR [ebx]
  4029ae:	pusha  
  4029af:	dec    ecx
  4029b0:	pop    esp
  4029b1:	dec    ebx
  4029b2:	adc    DWORD PTR [ecx-0xe],ecx
  4029b5:	imul   ecx,DWORD PTR [ebp-0x1a],0xffffffda
  4029b9:	jmp    0xea31:0x6719258c
  4029c0:	mov    BYTE PTR [eax],al
  4029c2:	adc    edi,DWORD PTR [eax+0x3c]
  4029c5:	mov    dl,0x55
  4029c7:	les    ebp,FWORD PTR [edi]
  4029c9:	mov    al,ds:0x7458ddda
  4029ce:	lea    ebx,[ebx]
  4029d0:	ins    DWORD PTR es:[edi],dx
  4029d1:	dec    BYTE PTR [edi]
  4029d3:	fstp   DWORD PTR [edx+0x58]
  4029d6:	sbb    eax,0x78e75559
  4029db:	neg    ecx
  4029dd:	push   edi
  4029de:	sahf   
  4029df:	inc    ebp
  4029e0:	stos   DWORD PTR es:[edi],eax
  4029e1:	shl    DWORD PTR [edi],cl
  4029e3:	fbld   TBYTE PTR [esi]
  4029e5:	jns    0x402a17
  4029e7:	test   DWORD PTR [eax+0x2],esp
  4029ea:	std    
  4029eb:	imul   ebx,ecx,0xffffff88
  4029ee:	je     0x402a27
  4029f0:	or     eax,0xc67c14ae
  4029f5:	push   es
  4029f6:	fsub   QWORD PTR [bp+si-0x288f]
  4029fb:	push   ebp
  4029fc:	scas   eax,DWORD PTR es:[edi]
  4029fd:	(bad)  
  4029fe:	mov    ds:0xdb213c25,al
  402a03:	data16 sub bh,dl
  402a06:	cmp    al,0xd3
  402a08:	popf   
  402a09:	cmp    DWORD PTR [ecx],eax
  402a0b:	shr    BYTE PTR [edi],1
  402a0d:	into   
  402a0e:	ins    DWORD PTR es:[edi],dx
  402a0f:	pop    edx
  402a10:	pop    ecx
  402a11:	xor    ah,bh
  402a13:	mov    ch,0xd7
  402a15:	jecxz  0x4029e8
  402a17:	mov    es,esi
  402a19:	repz dec eax
  402a1b:	mov    WORD PTR [edx+0x55],es
  402a1e:	mov    ebx,0x676e5762
  402a23:	in     eax,0x60
  402a25:	xor    bh,BYTE PTR [ebx+edi*2-0x61]
  402a29:	aaa    
  402a2a:	(bad)  
  402a2b:	sahf   
  402a2c:	push   ss
  402a2d:	and    DWORD PTR [eax+0x63521cb5],esp
  402a33:	jne    0x402a69
  402a35:	jns    0x402a78
  402a37:	sbb    BYTE PTR [ebx+0x68],cl
  402a3a:	call   0xeca9:0x7367f1c5
  402a41:	dec    eax
  402a42:	inc    ebx
  402a43:	push   edi
  402a44:	nop
  402a45:	dec    edx
  402a46:	outs   dx,BYTE PTR ds:[esi]
  402a47:	repz scas al,BYTE PTR es:[edi]
  402a49:	scas   al,BYTE PTR es:[edi]
  402a4a:	out    0x4b,eax
  402a4c:	cmp    DWORD PTR [edx-0xf99b9f2],esi
  402a52:	xchg   BYTE PTR [ebp-0x19],bh
  402a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a56:	scas   al,BYTE PTR es:[edi]
  402a57:	mov    al,ds:0xbc76570f
  402a5c:	mov    cl,0xbf
  402a5e:	mov    edi,esp
  402a60:	jae    0x402a49
  402a62:	jmp    0xabd48275
  402a67:	adc    dl,0xde
  402a6a:	fist   WORD PTR [eax-0x4e]
  402a6d:	adc    ah,BYTE PTR [eax-0x27]
  402a70:	adc    eax,0xf192d7b1
  402a75:	mov    ah,0x12
  402a77:	(bad)  
  402a78:	idiv   DWORD PTR [edi+ebp*8]
  402a7b:	mov    ch,0x42
  402a7d:	cmp    DWORD PTR [edi+0x15],eax
  402a80:	rcl    DWORD PTR [esp+ecx*1-0x2d],1
  402a84:	fidivr WORD PTR [ebp+0x3b]
  402a87:	and    eax,0x5ad00865
  402a8c:	ins    DWORD PTR es:[edi],dx
  402a8d:	mov    ah,0x1e
  402a8f:	stc    
  402a90:	out    0xc7,al
  402a92:	pushf  
  402a93:	lahf   
  402a94:	dec    esi
  402a95:	out    0xd1,al
  402a97:	div    DWORD PTR [ebx+eax*2+0x42]
  402a9b:	sbb    bh,bl
  402a9d:	jne    0x402a46
  402a9f:	push   cs
  402aa0:	push   ebx
  402aa1:	mov    WORD PTR [edi-0x5faf693c],fs
  402aa7:	add    al,0x58
  402aa9:	push   ds
  402aaa:	mov    DWORD PTR [ebx+0x20],esi
  402aad:	sub    al,ch
  402aaf:	xor    bh,BYTE PTR fs:[edi+ebx*8+0x61]
  402ab4:	lods   eax,DWORD PTR ds:[esi]
  402ab5:	or     DWORD PTR [eax-0x43],esp
  402ab8:	or     DWORD PTR [ebx],esp
  402aba:	add    eax,0x7cbae075
  402abf:	xor    eax,0x99ca596f
  402ac4:	in     al,0x3e
  402ac6:	add    BYTE PTR [eax+0x3f],cl
  402ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aca:	push   0xfffffff5
  402acc:	push   ecx
  402acd:	dec    edx
  402ace:	ss push esi
  402ad0:	rep ins BYTE PTR es:[edi],dx
  402ad2:	loop   0x402a54
  402ad4:	pop    eax
  402ad5:	mov    bh,0xe1
  402ad7:	xlat   BYTE PTR ds:[ebx]
  402ad8:	pop    ss
  402ad9:	fldcw  WORD PTR [ecx+0x61]
  402adc:	cld    
  402add:	xor    edi,DWORD PTR [edx]
  402adf:	mov    eax,ds:0x95f30035
  402ae4:	in     al,dx
  402ae5:	push   esp
  402ae6:	lods   al,BYTE PTR ds:[esi]
  402ae7:	ja     0x402b46
  402ae9:	mov    edx,DWORD PTR [edx]
  402aeb:	mov    BYTE PTR [ebx],bh
  402aed:	xchg   ebp,eax
  402aee:	out    dx,eax
  402aef:	out    dx,al
  402af0:	jge    0x402b6e
  402af2:	adc    al,0x22
  402af4:	add    eax,0x456314f4
  402af9:	adc    cl,cl
  402afb:	cmc    
  402afc:	adc    eax,0x32bbc9df
  402b01:	and    eax,0xf6aa1da1
  402b06:	cli    
  402b07:	gs icebp 
  402b09:	js     0x402af7
  402b0b:	out    0xda,al
  402b0d:	es test al,0xc2
  402b10:	xor    dl,BYTE PTR [esi+eax*2-0x1]
  402b14:	sar    BYTE PTR [edx-0x6617795e],cl
  402b1a:	arpl   bx,bx
  402b1c:	pop    ebx
  402b1d:	sysenter 
  402b1f:	loope  0x402b2f
  402b21:	repz popf 
  402b23:	and    eax,0x163057bd
  402b28:	out    0x59,eax
  402b2a:	dec    ebx
  402b2b:	jo     0x402af3
  402b2d:	aaa    
  402b2e:	fbstp  TBYTE PTR ds:0x1a4344ed
  402b34:	adc    DWORD PTR [ecx-0x38],ebp
  402b37:	lahf   
  402b38:	cli    
  402b39:	inc    edi
  402b3a:	or     edx,DWORD PTR [esi+0x6ff07547]
  402b40:	es inc edi
  402b42:	pop    edx
  402b43:	pop    eax
  402b44:	test   esi,edi
  402b46:	mov    esi,0x962a475e
  402b4b:	scas   eax,DWORD PTR es:[edi]
  402b4c:	inc    edx
  402b4d:	arpl   WORD PTR [edx],sp
  402b4f:	adc    BYTE PTR [ebx],0x69
  402b52:	into   
  402b53:	imul   ebx,ebx,0xccda5dcf
  402b59:	scas   eax,DWORD PTR es:[edi]
  402b5a:	pop    ecx
  402b5b:	div    DWORD PTR [edi-0x8b09379]
  402b61:	pop    ss
  402b62:	sub    eax,0xc960e174
  402b67:	jg     0x402b33
  402b69:	cli    
  402b6a:	sub    edx,DWORD PTR [edi+ebx*1+0x3a25c7ba]
  402b71:	out    dx,eax
  402b72:	lods   eax,DWORD PTR ds:[esi]
  402b73:	fmul   st,st(2)
  402b75:	pop    ecx
  402b76:	(bad)  [ebx-0x340c072]
  402b7c:	inc    edi
  402b7d:	stos   DWORD PTR es:[edi],eax
  402b7e:	sbb    ebp,ebx
  402b80:	es mov eax,0xe493408e
  402b86:	mov    edx,0x89952b7
  402b8b:	inc    edx
  402b8c:	jns    0x402bb3
  402b8e:	and    al,0x77
  402b90:	mov    ebx,0x14f18ca7
  402b95:	push   eax
  402b96:	jecxz  0x402b73
  402b98:	scas   eax,DWORD PTR es:[edi]
  402b99:	push   ebp
  402b9a:	adc    ecx,esi
  402b9c:	retf   
  402b9d:	sbb    al,0x47
  402b9f:	pushf  
  402ba0:	cmp    eax,0x995a507d
  402ba5:	xor    al,BYTE PTR [edx-0x8]
  402ba8:	shl    DWORD PTR [edi+0x59f81a0d],1
  402bae:	cmp    eax,0x36f74d41
  402bb3:	stc    
  402bb4:	cmp    eax,0x9a535064
  402bb9:	xchg   esi,eax
  402bba:	dec    ebx
  402bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bbc:	jge    0x402b6d
  402bbe:	xchg   esp,eax
  402bbf:	mov    edi,0x8ca22d81
  402bc4:	and    eax,0x4b571556
  402bc9:	mov    edx,0xa1a61cd6
  402bce:	ss jle 0x402c19
  402bd1:	push   ss
  402bd2:	loop   0x402bcc
  402bd4:	arpl   bp,si
  402bd6:	out    dx,eax
  402bd7:	data16 sti 
  402bd9:	das    
  402bda:	pop    ds
  402bdb:	pop    eax
  402bdc:	cmc    
  402bdd:	or     dh,ch
  402bdf:	adc    edi,0x99452bcd
  402be5:	xchg   DWORD PTR [esi],esi
  402be7:	fimul  WORD PTR [esi+0x44]
  402bea:	retf   0x6377
  402bed:	mov    ebx,0xe7380b70
  402bf2:	pop    ds
  402bf3:	pushf  
  402bf4:	pop    ss
  402bf5:	add    al,0x1
  402bf7:	(bad)  
  402bf9:	mov    esi,0xd337c12f
  402bfe:	xchg   esi,ebp
  402c00:	pop    edx
  402c01:	lds    edx,FWORD PTR [esp+ecx*4]
  402c04:	add    al,BYTE PTR [edi+0x8]
  402c07:	lods   al,BYTE PTR ds:[esi]
  402c08:	mov    ds:0xde78f050,al
  402c0d:	xor    dh,ch
  402c0f:	test   BYTE PTR [edx+0x4038e481],al
  402c15:	mov    ?,WORD PTR [eax]
  402c17:	mov    ds:0x2502f62b,al
  402c1c:	popf   
  402c1d:	xor    esp,DWORD PTR [eax-0x3f]
  402c20:	pop    ecx
  402c21:	xchg   ebp,eax
  402c22:	fs dec edx
  402c24:	loop   0x402c3c
  402c26:	cmp    bh,BYTE PTR [ebx+0x7c0001f5]
  402c2c:	mov    ch,0x40
  402c2e:	in     al,dx
  402c2f:	mov    ds:0x23815b,al
  402c34:	push   ebp
  402c35:	shr    esi,cl
  402c37:	add    eax,0xcf02d6d6
  402c3c:	addr16 pop esp
  402c3e:	(bad)  
  402c3f:	clc    
  402c40:	arpl   WORD PTR [eax],bx
  402c42:	sbb    eax,0x859102ff
  402c47:	adc    dl,cl
  402c49:	add    eax,DWORD PTR [eax-0x36d61d2b]
  402c4f:	iret   
  402c50:	inc    edi
  402c51:	or     cl,BYTE PTR ds:0x8942257e
  402c57:	mov    al,0xeb
  402c59:	pop    ss
  402c5a:	pop    eax
  402c5b:	sti    
  402c5c:	sub    eax,0xffffff95
  402c5f:	mov    bl,0xc0
  402c61:	ds xchg edx,eax
  402c63:	fwait
  402c64:	cs ja  0x402bf7
  402c67:	dec    edi
  402c68:	aam    0x4
  402c6a:	jp     0x402c0b
  402c6c:	jecxz  0x402c86
  402c6e:	sub    BYTE PTR [esi-0x430be144],0x6b
  402c75:	or     al,0x1f
  402c77:	pusha  
  402c78:	scas   al,BYTE PTR es:[edi]
  402c79:	mov    cl,0x88
  402c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c7c:	or     DWORD PTR [esp+eiz*4+0x565979bd],ebx
  402c83:	cld    
  402c84:	fnstsw WORD PTR [ecx+ebp*8+0x105fa926]
  402c8b:	jmp    0x402c2c
  402c8d:	jecxz  0x402cab
  402c8f:	jmp    0x703d:0x8ded975f
  402c96:	adc    ah,BYTE PTR [ebx+0x2c]
  402c99:	popf   
  402c9a:	jae    0x402c48
  402c9c:	(bad)  
  402c9d:	retf   0x2ff1
  402ca0:	xchg   sp,ax
  402ca2:	pop    ebx
  402ca3:	mov    ecx,0x23ac0ff3
  402ca8:	dec    edx
  402ca9:	inc    esi
  402caa:	mov    dh,0xb
  402cac:	sub    dl,ch
  402cae:	inc    edx
  402caf:	shl    cl,1
  402cb1:	dec    esp
  402cb2:	jo     0x402c56
  402cb4:	popa   
  402cb5:	or     DWORD PTR [ebx-0x303dfd87],ebx
  402cbb:	stos   DWORD PTR es:[edi],eax
  402cbc:	loop   0x402c6e
  402cbe:	sub    eax,eax
  402cc0:	sbb    ebp,DWORD PTR [eax]
  402cc2:	xchg   edi,eax
  402cc3:	or     ebx,ebp
  402cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc6:	mov    ecx,0xe30f4def
  402ccb:	loopne 0x402ce7
  402ccd:	mov    ecx,0x96ce74ad
  402cd2:	and    eax,0x203284
  402cd7:	std    
  402cd8:	jns    0x402c9a
  402cda:	and    BYTE PTR [ebp+0x2537b38d],al
  402ce0:	ret    0x1fc4
  402ce3:	inc    ebx
  402ce4:	mov    ds:0xed8cdc47,al
  402ce9:	xor    ch,BYTE PTR [ebp+0x1f]
  402cec:	jb     0x402d5d
  402cee:	pop    eax
  402cef:	call   0x537c9eba
  402cf4:	push   eax
  402cf5:	sbb    eax,0x6ef69e3e
  402cfa:	pop    ds
  402cfb:	lods   eax,DWORD PTR ds:[esi]
  402cfc:	mov    al,ds:0xc31e295e
  402d01:	inc    esi
  402d02:	repz pop ss
  402d04:	inc    ecx
  402d05:	and    ah,BYTE PTR [ecx-0x37224043]
  402d0b:	cmp    al,ch
  402d0d:	mov    eax,ds:0x79598fcb
  402d12:	fidivr WORD PTR [eax]
  402d14:	ja     0x402d5d
  402d16:	push   ecx
  402d17:	int    0xf2
  402d19:	add    BYTE PTR [ecx-0xd],0x85
  402d1d:	ins    DWORD PTR es:[edi],dx
  402d1e:	push   es
  402d1f:	and    eax,0xa4c9989
  402d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d25:	outs   dx,BYTE PTR ds:[esi]
  402d26:	inc    ebx
  402d27:	(bad)  
  402d28:	sar    edi,0x31
  402d2b:	icebp  
  402d2c:	arpl   WORD PTR [ecx],ax
  402d2e:	and    al,0xb2
  402d30:	out    0xac,eax
  402d32:	retf   
  402d33:	std    
  402d34:	add    bh,BYTE PTR [edx+0x2b]
  402d37:	mov    ch,0x1a
  402d39:	pop    ds
  402d3a:	mov    ebp,0x928fc826
  402d3f:	mov    ds:0x2ecf5b39,al
  402d44:	xchg   esi,eax
  402d45:	fisttp WORD PTR [ecx+0x69e94565]
  402d4b:	xor    ah,BYTE PTR [ebx]
  402d4d:	pop    edi
  402d4e:	aad    0x9e
  402d50:	jns    0x402d7c
  402d52:	daa    
  402d53:	inc    ecx
  402d54:	icebp  
  402d55:	addr16 mov cl,0xcb
  402d58:	mov    bh,0xea
  402d5a:	mov    cl,0x33
  402d5c:	jmp    0x1e8a:0xc5377452
  402d63:	cmp    DWORD PTR [ebx],ebp
  402d65:	push   eax
  402d66:	mov    esp,0x519dd6dd
  402d6b:	test   al,0x24
  402d6d:	push   ebp
  402d6e:	ficomp WORD PTR [edx-0x62]
  402d71:	das    
  402d72:	outs   dx,BYTE PTR ds:[esi]
  402d73:	jecxz  0x402d03
  402d75:	pop    eax
  402d76:	sub    ecx,ecx
  402d78:	cs nop
  402d7a:	mov    bh,BYTE PTR [edx]
  402d7c:	push   0x8de072f7
  402d81:	sbb    ebx,ecx
  402d83:	push   ds
  402d84:	mov    al,ds:0x854a461a
  402d89:	jbe    0x402da3
  402d8b:	test   BYTE PTR [ecx+0x6e47a870],dh
  402d91:	fcmovnu st,st(1)
  402d93:	sbb    al,0x54
  402d95:	cwde   
  402d96:	test   DWORD PTR [ebx],edi
  402d98:	xor    eax,0xac63965d
  402d9d:	arpl   WORD PTR [ebp-0x2ec78e67],cx
  402da3:	cmc    
  402da4:	ret    
  402da5:	jp     0x402ded
  402da7:	outs   dx,DWORD PTR ds:[esi]
  402da8:	push   esp
  402da9:	aam    0x21
  402dab:	or     BYTE PTR [ebx-0x67dfd53b],ch
  402db1:	push   ecx
  402db2:	leave  
  402db3:	xchg   edx,eax
  402db4:	mov    ds:0xb92a6576,eax
  402db9:	mul    BYTE PTR [eax+0x15]
  402dbc:	loop   0x402e0a
  402dbe:	jbe    0x402dc8
  402dc0:	gs mov ebx,0x99a8df1e
  402dc6:	(bad)  
  402dc7:	xor    BYTE PTR [edi+ecx*8-0x51],cl
  402dcb:	cmp    DWORD PTR [esi+0x3e],edx
  402dce:	rcr    DWORD PTR [ecx+0x60],1
  402dd1:	jb     0x402d8b
  402dd3:	retf   0xe44a
  402dd6:	enter  0xb7f6,0x4f
  402dda:	dec    ecx
  402ddb:	xor    ebp,DWORD PTR [ecx+ebx*1]
  402dde:	stos   BYTE PTR es:[edi],al
  402ddf:	push   ecx
  402de0:	jne    0x402e51
  402de2:	into   
  402de3:	sbb    BYTE PTR [edi+0x216170dd],dl
  402de9:	jp     0x402d8d
  402deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dec:	ins    BYTE PTR es:[edi],dx
  402ded:	push   edi
  402dee:	push   esi
  402def:	xchg   ebp,eax
  402df0:	adc    BYTE PTR [ebx-0x3c1ee0fb],dh
  402df6:	sbb    al,0xb5
  402df8:	push   esp
  402df9:	dec    eax
  402dfa:	je     0x402e0a
  402dfc:	jl     0x402dce
  402dfe:	push   edx
  402dff:	xor    al,0xd1
  402e01:	clc    
  402e02:	lds    eax,FWORD PTR [eax]
  402e04:	pop    ds
  402e05:	lock mov al,BYTE PTR [ecx+0x4199256]
  402e0c:	stos   DWORD PTR es:[edi],eax
  402e0d:	scas   al,BYTE PTR es:[edi]
  402e0e:	call   0x4c46d0e8
  402e13:	fmul   DWORD PTR [ebx-0x6d0ab765]
  402e19:	rep outs dx,BYTE PTR ds:[esi]
  402e1b:	dec    esi
  402e1c:	xchg   esp,eax
  402e1d:	mov    cl,0x34
  402e1f:	jl     0x402e54
  402e21:	xchg   edx,eax
  402e22:	scas   al,BYTE PTR es:[edi]
  402e23:	sbb    BYTE PTR [ebp+0x37f8fd01],bh
  402e29:	rol    ebx,0xd0
  402e2c:	inc    esi
  402e2d:	mov    edi,0x14756d76
  402e32:	ja     0x402df8
  402e34:	fprem1 
  402e36:	mov    es,WORD PTR [ebp+0x69]
  402e39:	mov    edx,0xa09adc7f
  402e3e:	(bad)  
  402e40:	adc    eax,ebp
  402e42:	aad    0xe4
  402e44:	pop    esi
  402e45:	pop    edi
  402e46:	add    DWORD PTR fs:[esi-0x14da241d],esi
  402e4d:	mov    gs,WORD PTR [esi-0x18]
  402e50:	jnp    0x402ea8
  402e52:	and    DWORD PTR [eax*2+0x8362a3d],ecx
  402e59:	sbb    al,0xcc
  402e5b:	sbb    eax,0x676a6796
  402e60:	rcl    BYTE PTR [ebp-0x21],0xb9
  402e64:	cmp    bh,cl
  402e66:	inc    edx
  402e67:	je     0x402e35
  402e69:	js     0x402edc
  402e6b:	cmp    DWORD PTR [eax],ebp
  402e6d:	adc    ah,ah
  402e6f:	pop    ebx
  402e70:	rcl    DWORD PTR [ecx],0x8f
  402e73:	pop    ebp
  402e74:	mov    edi,0xc196b245
  402e79:	ror    esi,cl
  402e7b:	mov    al,0x31
  402e7d:	out    dx,eax
  402e7e:	sbb    DWORD PTR [edx+0x595a324e],edx
  402e84:	(bad)  
  402e87:	fbld   TBYTE PTR [ecx+eiz*2+0x1f]
  402e8b:	adc    dl,BYTE PTR [edx-0x39feb5c4]
  402e91:	xchg   esi,eax
  402e92:	jg     0x402e1a
  402e94:	outs   dx,BYTE PTR ds:[esi]
  402e95:	pop    ss
  402e96:	or     DWORD PTR [ebp+0xc4ca211],ecx
  402e9c:	mov    esi,0x42c59ad1
  402ea1:	iret   
  402ea2:	inc    ebx
  402ea3:	jg     0x402ece
  402ea5:	jmp    0xcb5b:0xed818045
  402eac:	popf   
  402ead:	mov    ah,0x25
  402eaf:	lods   al,BYTE PTR ds:[esi]
  402eb0:	rol    DWORD PTR [ecx+0x7c98c107],1
  402eb6:	lds    esp,FWORD PTR cs:[edx+0x1aa13b48]
  402ebd:	pop    es
  402ebe:	mov    DWORD PTR [edi+edi*8+0x27941ff9],edi
  402ec5:	int3   
  402ec6:	jecxz  0x402ec8
  402ec8:	cmp    al,0xae
  402eca:	mov    eax,ds:0x328d35b8
  402ecf:	sub    BYTE PTR [ecx],dl
  402ed1:	clc    
  402ed2:	in     eax,dx
  402ed3:	pop    eax
  402ed4:	call   0x5c9c:0x4cd15e1f
  402edb:	(bad)  
  402edc:	enter  0xfaaa,0x82
  402ee0:	ficomp DWORD PTR [eax+eiz*4-0x36]
  402ee4:	add    al,0x9
  402ee6:	adc    eax,0xfed7f5e5
  402eeb:	xlat   BYTE PTR ds:[ebx]
  402eec:	inc    ebx
  402eed:	enter  0x173e,0x79
  402ef1:	lahf   
  402ef2:	cdq    
  402ef3:	retf   0x6fd0
  402ef6:	or     al,cl
  402ef8:	psubsw mm3,mm0
  402efb:	mov    edi,esp
  402efd:	xchg   esp,eax
  402efe:	cwde   
  402eff:	stc    
  402f00:	(bad)  
  402f01:	es loopne 0x402f63
  402f04:	dec    ebx
  402f05:	jmp    0xfa1ee7ec
  402f0a:	push   0x5c
  402f0c:	aad    0xa4
  402f0e:	cdq    
  402f0f:	sbb    al,BYTE PTR [esp+esi*2+0x1e431e40]
  402f16:	mov    dh,0x3a
  402f18:	cmp    bl,BYTE PTR ds:0x81e333f4
  402f1e:	inc    eax
  402f1f:	(bad)  
  402f20:	dec    ebx
  402f21:	and    DWORD PTR [ebx],edx
  402f23:	push   esp
  402f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f25:	adc    BYTE PTR [ecx+0x1283895c],dl
  402f2b:	jne    0x402ebc
  402f2d:	jge    0x402ed6
  402f2f:	add    al,0x2b
  402f31:	scas   al,BYTE PTR es:[edi]
  402f32:	je     0x402eda
  402f34:	out    dx,al
  402f35:	outs   dx,BYTE PTR ds:[esi]
  402f36:	mov    edx,esp
  402f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f39:	(bad)  
  402f3a:	addr16 dec esi
  402f3c:	gs jp  0x402f42
  402f3f:	jne    0x402eca
  402f41:	rol    DWORD PTR [ecx-0x26fb97a1],1
  402f47:	mov    cl,0xf2
  402f49:	jmp    0x9f52e35a
  402f4e:	mov    ebp,0x74c47637
  402f53:	xor    esp,DWORD PTR [ebx-0x4f]
  402f56:	lahf   
  402f57:	gs out dx,al
  402f59:	jp     0x402f5a
  402f5b:	sub    eax,0x6f63df60
  402f60:	cli    
  402f61:	add    DWORD PTR [eax+eiz*1],ebx
  402f64:	std    
  402f65:	pop    esp
  402f66:	inc    edi
  402f67:	pop    esp
  402f68:	mov    esi,0x3834d06f
  402f6d:	retf   
  402f6e:	sub    DWORD PTR [ebp+0xce12bd6],ecx
  402f74:	dec    ebx
  402f75:	inc    eax
  402f76:	or     eax,0xf44d72f7
  402f7b:	mov    esp,0x5724ab15
  402f80:	mov    ecx,0xc4b71649
  402f85:	int3   
  402f86:	out    0x8e,eax
  402f88:	icebp  
  402f89:	pop    es
  402f8a:	jnp    0x402fce
  402f8c:	dec    ebx
  402f8d:	neg    edi
  402f8f:	rol    DWORD PTR [ebp+0x28261cf],1
  402f95:	xlat   BYTE PTR es:[ebx]
  402f97:	repnz popf 
  402f99:	std    
  402f9a:	cmp    BYTE PTR [edx],ah
  402f9c:	cmp    eax,0x721ed170
  402fa1:	aaa    
  402fa2:	popa   
  402fa3:	test   BYTE PTR [ebp+0x62],0x3b
  402fa7:	imul   ebx,DWORD PTR gs:[esi],0x4a8a5c71
  402fae:	jge    0x402fef
  402fb0:	mov    dh,ch
  402fb2:	push   ss
  402fb3:	mov    eax,0x81797c06
  402fb8:	leave  
  402fb9:	int3   
  402fba:	fnstcw WORD PTR [eax+0xd7b514f]
  402fc0:	push   0x19b1cf44
  402fc5:	dec    edi
  402fc6:	jmp    0x402fbc
  402fc8:	pusha  
  402fc9:	outs   dx,DWORD PTR ds:[esi]
  402fca:	jmp    0x403018
  402fcc:	popa   
  402fcd:	loope  0x402f8d
  402fcf:	inc    ebx
  402fd0:	data16 mov ds:0xe3f213b9,al
  402fd6:	js     0x403013
  402fd8:	xlat   BYTE PTR ds:[ebx]
  402fd9:	xchg   bl,al
  402fdb:	and    esp,esi
  402fdd:	fld    DWORD PTR [edi]
  402fdf:	sti    
  402fe0:	fstp   QWORD PTR [edi-0x56]
  402fe4:	add    ch,0xb2
  402fe7:	dec    esp
  402fe8:	test   DWORD PTR [ecx+0x7cc8f4ea],0x66f88fe2
  402ff2:	dec    eax
  402ff3:	lahf   
  402ff4:	sar    ecx,1
  402ff6:	mov    ecx,DWORD PTR [eax-0x3a5c06ea]
  402ffc:	test   al,0x11
  402ffe:	retf   
  402fff:	mov    ch,0x13
  403001:	test   BYTE PTR [eax-0x7d],bh
  403004:	in     eax,dx
  403005:	jp     0x403053
  403007:	pop    ebx
  403008:	shl    BYTE PTR [ebx-0x17f1fc73],1
  40300e:	and    dl,ah
  403010:	lds    ebp,FWORD PTR [eax+0x7e0899b5]
  403016:	outs   dx,DWORD PTR ds:[esi]
  403017:	sti    
  403018:	aaa    
  403019:	ror    ebx,0xb4
  40301c:	cs inc ebx
  40301e:	mov    ah,0x1a
  403020:	mov    al,0x45
  403022:	xor    ecx,DWORD PTR [eax]
  403024:	xchg   esp,eax
  403025:	inc    edi
  403026:	or     al,cl
  403028:	sahf   
  403029:	sbb    bl,BYTE PTR [edx-0x48]
  40302c:	push   ebp
  40302d:	iret   
  40302e:	movups XMMWORD PTR [edx-0x601bff6e],xmm4
  403035:	mov    eax,0x3279b5cb
  40303a:	outs   dx,DWORD PTR ds:[esi]
  40303b:	jg     0x402fd7
  40303d:	test   BYTE PTR [edi-0x2888e98c],al
  403043:	shl    BYTE PTR [eax+0x39],cl
  403046:	mov    dl,0x6a
  403048:	sti    
  403049:	gs hlt 
  40304b:	add    DWORD PTR [esi+0x49],esi
  40304e:	or     eax,0x2be8dff5
  403053:	xor    ax,si
  403056:	mov    esi,0xcd579668
  40305b:	fcmovu st,st(5)
  40305d:	mov    esp,0xaac17495
  403062:	mov    al,0x32
  403064:	std    
  403065:	int    0x5
  403067:	das    
  403068:	in     eax,dx
  403069:	xchg   esp,eax
  40306a:	icebp  
  40306b:	in     al,dx
  40306c:	dec    edi
  40306d:	mov    al,0x7c
  40306f:	into   
  403070:	cld    
  403071:	out    0xb5,al
  403073:	dec    eax
  403074:	mov    ds:0x67420372,al
  403079:	int    0x71
  40307b:	pushf  
  40307c:	dec    esp
  40307d:	and    BYTE PTR [ecx],dl
  40307f:	(bad)  
  403080:	sub    eax,0x41fed766
  403085:	push   es
  403086:	ficom  DWORD PTR [ebx-0x14]
  403089:	(bad)  
  40308a:	repz int3 
  40308c:	daa    
  40308d:	out    0x3c,al
  40308f:	sbb    BYTE PTR [ebx-0x3b],ch
  403092:	outs   dx,BYTE PTR ds:[esi]
  403093:	inc    ecx
  403094:	fbstp  TBYTE PTR [edi-0x5829340b]
  40309a:	mov    esi,ds
  40309c:	pop    esp
  40309d:	push   ebx
  40309e:	(bad)  
  40309f:	stos   DWORD PTR es:[edi],eax
  4030a0:	test   al,0x3e
  4030a2:	xor    eax,edx
  4030a4:	addr16 popf 
  4030a6:	push   cs
  4030a7:	sahf   
  4030a8:	xor    esi,ecx
  4030aa:	int    0xac
  4030ac:	mov    ds:0x6450b35f,eax
  4030b1:	mov    WORD PTR [ebx],?
  4030b3:	mov    BYTE PTR [edx+0x502a7c1],dl
  4030b9:	xchg   ebp,eax
  4030ba:	das    
  4030bb:	nop
  4030bc:	in     al,dx
  4030bd:	cmp    dl,ch
  4030bf:	jle    0x40307f
  4030c1:	lea    edx,[ebx+0x6f3f085d]
  4030c7:	adc    dl,BYTE PTR [ecx-0x43]
  4030ca:	inc    edi
  4030cb:	stos   DWORD PTR es:[edi],eax
  4030cc:	jbe    0x403142
  4030ce:	cli    
  4030cf:	lods   al,BYTE PTR ds:[si]
  4030d1:	sbb    edx,DWORD PTR [ebp+ecx*8+0x58cf15d5]
  4030d8:	fld    QWORD PTR [esi+0x7d]
  4030db:	in     al,0xa8
  4030dd:	ret    0xd11f
  4030e0:	adc    esp,DWORD PTR [ecx-0x6c]
  4030e3:	mov    dh,BYTE PTR [ecx+0x13]
  4030e6:	push   DWORD PTR [eax-0xd1ee908]
  4030ec:	xlat   BYTE PTR ds:[ebx]
  4030ed:	pop    es
  4030ee:	sbb    DWORD PTR [eax],ebp
  4030f0:	ficom  WORD PTR [edi-0x7931b304]
  4030f6:	pop    edi
  4030f7:	pushf  
  4030f8:	in     al,dx
  4030f9:	mov    ebp,0x3b4dde64
  4030fe:	pop    es
  4030ff:	test   eax,0xcc95b65b
  403104:	mov    edx,?
  403106:	nop
  403107:	mov    ah,0x93
  403109:	lock inc DWORD PTR [edi+0x3e17df4d]
  403110:	sub    BYTE PTR [edi],dl
  403112:	add    al,0x79
  403114:	adc    ebx,DWORD PTR [ecx]
  403116:	and    eax,0x40649cc5
  40311b:	fcmovne st,st(4)
  40311d:	cmp    ah,BYTE PTR [edi+0x45]
  403120:	xor    edi,DWORD PTR [edi-0x74]
  403123:	and    eax,0x65356c7c
  403128:	stc    
  403129:	retf   
  40312a:	ja     0x4031aa
  40312c:	loop   0x403198
  40312e:	sbb    eax,esi
  403130:	sti    
  403131:	call   0xd940385b
  403136:	or     DWORD PTR [eax+0x904299e],ebp
  40313c:	pop    ebx
  40313d:	loope  0x4031b7
  40313f:	sbb    DWORD PTR [ebx+ecx*2+0x592da3bf],0x10
  403147:	pusha  
  403148:	bound  ebx,QWORD PTR [esi-0x150ac68a]
  40314e:	loop   0x403165
  403150:	inc    edx
  403151:	and    al,0x84
  403153:	sbb    eax,DWORD PTR [edx+edi*8-0xb]
  403157:	dec    ebx
  403158:	push   0x9fc37653
  40315d:	cmp    cl,BYTE PTR [ecx+0x14d3e2c1]
  403163:	fwait
  403164:	or     DWORD PTR [ebp-0x2e],ebx
  403167:	push   esp
  403168:	cmp    al,ah
  40316a:	mov    dl,0x2a
  40316c:	jne    0x4031a2
  40316e:	scas   al,BYTE PTR es:[edi]
  40316f:	fbstp  TBYTE PTR [eax+0x26]
  403172:	ja     0x403163
  403174:	(bad)
  403177:	mov    ds:0x626546f1,eax
  40317c:	inc    esp
  40317d:	adc    BYTE PTR [esp+edi*2],cl
  403180:	(bad)  
  403181:	popf   
  403182:	push   edx
  403183:	and    ch,bh
  403185:	or     bh,al
  403187:	loopne 0x403186
  403189:	adc    ebp,DWORD PTR [ebp+edi*2+0x2f053cf4]
  403190:	imul   esp,eax,0xffffffb3
  403193:	pop    edi
  403194:	fwait
  403195:	xor    BYTE PTR [ecx],0x5e
  403198:	pop    ecx
  403199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319a:	inc    ebp
  40319b:	in     al,dx
  40319c:	(bad)  
  40319d:	jmp    0xd028ab89
  4031a2:	mov    al,0x4c
  4031a4:	lods   eax,DWORD PTR ds:[esi]
  4031a5:	in     al,dx
  4031a6:	ss ins DWORD PTR es:[edi],dx
  4031a8:	cmc    
  4031a9:	adc    ebx,DWORD PTR [ecx+ebx*4+0x6c855b01]
  4031b0:	adc    ecx,DWORD PTR [ebx]
  4031b2:	fdiv   QWORD PTR [ebx]
  4031b4:	push   0xffffff88
  4031b6:	(bad)  [ebp-0x4d]
  4031b9:	test   al,0xc5
  4031bb:	push   ecx
  4031bc:	std    
  4031bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031be:	(bad)  
  4031bf:	cmp    DWORD PTR [edi+edi*4-0x59],0xc8ad2e41
  4031c7:	outs   dx,DWORD PTR ds:[esi]
  4031c8:	mov    ds:0x7fbfaa41,al
  4031cd:	xchg   ebp,eax
  4031ce:	addr16 out 0xd2,eax
  4031d1:	sbb    al,0x0
  4031d3:	ret    
  4031d4:	jg     0x4031a4
  4031d6:	jnp    0x4031fa
  4031d8:	ret    0x6d22
  4031db:	push   0x26
  4031dd:	push   esp
  4031de:	cmp    eax,0xc47da093
  4031e3:	dec    edx
  4031e4:	xchg   edi,eax
  4031e5:	repz imul ebx,DWORD PTR [ebp-0x5c],0x59
  4031ea:	(bad)  
  4031eb:	mov    bl,0x30
  4031ed:	or     eax,0x3b5f8637
  4031f2:	xor    DWORD PTR [ecx],esi
  4031f4:	mov    edx,0x3cc6b470
  4031f9:	dec    esp
  4031fa:	dec    eax
  4031fb:	mov    esp,0xc238723b
  403200:	out    dx,al
  403201:	repnz aas 
  403203:	sub    BYTE PTR [esi+0x3047fc7e],0x15
  40320a:	cmp    ah,BYTE PTR [ebx+ebx*8-0x1d41fe36]
  403211:	fisttp DWORD PTR ds:0x25f9682b
  403217:	sti    
  403218:	jbe    0x4031f3
  40321a:	xor    bl,BYTE PTR [edi+0xa]
  40321d:	cmp    eax,0x71679efa
  403222:	jg     0x403230
  403224:	mov    eax,DWORD PTR [esi+edx*4-0x17a9f24d]
  40322b:	push   ecx
  40322c:	mov    esi,0xf7972d3d
  403231:	add    BYTE PTR [eax+0x15a5fe4b],dl
  403237:	and    BYTE PTR [ecx-0x157d699d],ch
  40323d:	dec    eax
  40323e:	push   esp
  40323f:	(bad)  
  403240:	lods   al,BYTE PTR ds:[esi]
  403241:	call   0xa2ee2daa
  403246:	xchg   ebp,eax
  403247:	stc    
  403248:	xor    esi,esp
  40324a:	pop    ebx
  40324b:	jmp    0x6ffc0b01
  403250:	cmp    ebp,DWORD PTR [edi]
  403252:	xchg   BYTE PTR [ebp+0x7c],bl
  403255:	xor    eax,0x417654b8
  40325a:	jmp    0x40326c
  40325c:	fdiv   QWORD PTR [edi-0x59cf97e2]
  403262:	inc    edi
  403263:	jmp    0xd0f1:0xc343293c
  40326a:	ins    DWORD PTR es:[edi],dx
  40326b:	pop    ebx
  40326c:	mov    dh,0x11
  40326e:	jnp    0x403292
  403270:	mov    eax,0x7fb23fa2
  403275:	jl     0x403214
  403277:	jmp    0xc5e4500e
  40327c:	sub    DWORD PTR ds:0x2ea7e46,edi
  403282:	call   0xd0b6:0xe0df9f1d
  403289:	mov    cl,0x59
  40328b:	inc    ebx
  40328c:	sbb    esi,ebp
  40328e:	dec    ecx
  40328f:	inc    esp
  403290:	sub    al,0x51
  403292:	ss mov ebp,0x592f50af
  403298:	or     BYTE PTR [edi+0x2c],ch
  40329b:	adc    esi,DWORD PTR [eax+0x60]
  40329e:	dec    esp
  40329f:	and    al,0x19
  4032a1:	shl    DWORD PTR ds:0x1002c7f6,1
  4032a7:	sbb    ebx,DWORD PTR [ebx]
  4032a9:	(bad)  
  4032aa:	jno    0x403258
  4032ac:	adc    DWORD PTR [edi-0x56],ebx
  4032af:	(bad)
  4032b2:	push   cs
  4032b3:	lea    ecx,[esi]
  4032b5:	and    DWORD PTR [edi+0x71],ecx
  4032b8:	add    BYTE PTR [ebp*1+0x287228dd],bl
  4032bf:	fwait
  4032c0:	xchg   ebx,eax
  4032c1:	push   edx
  4032c2:	rcr    ebp,1
  4032c4:	mov    ch,0xdd
  4032c6:	push   0xfffffff5
  4032c8:	xchg   BYTE PTR [edi+0x5b],dh
  4032cb:	inc    ebp
  4032cc:	xchg   ebx,eax
  4032cd:	iret   
  4032ce:	sub    BYTE PTR [ebx-0x5615176b],dl
  4032d4:	sbb    ecx,esi
  4032d6:	mov    ds:0x2d907c14,eax
  4032db:	ror    DWORD PTR [eax-0x69c8d2bf],1
  4032e1:	and    eax,DWORD PTR [eax+0x5e]
  4032e4:	add    ch,al
  4032e6:	cmp    al,0xff
  4032e8:	dec    eax
  4032e9:	jp     0x4032e3
  4032eb:	shl    BYTE PTR [esi+0x39],0xc8
  4032ef:	mov    WORD PTR [esi-0x61],?
  4032f2:	outs   dx,DWORD PTR ds:[esi]
  4032f3:	xor    al,0xcb
  4032f5:	push   ebx
  4032f6:	aam    0xa3
  4032f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032f9:	fcomi  st,st(5)
  4032fb:	pop    esp
  4032fc:	pop    ebp
  4032fd:	xor    al,0xc
  4032ff:	xchg   ah,ch
  403301:	xchg   BYTE PTR [ecx],bh
  403303:	loop   0x4032c4
  403305:	sub    BYTE PTR [esi-0x20],cl
  403308:	push   es
  403309:	retf   0x97c9
  40330c:	gs cwde 
  40330e:	mov    dl,0xfa
  403310:	jmp    0x9ed64944
  403315:	mov    dl,0xc9
  403317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403318:	or     al,0x1f
  40331a:	rcl    DWORD PTR [ebp+0x16ba84dc],1
  403320:	mov    edx,0x76ead08
  403325:	stos   BYTE PTR es:[edi],al
  403326:	xchg   esi,eax
  403327:	mov    eax,0x2030e7cc
  40332c:	jmp    0xaf41:0x1e269d47
  403333:	dec    ebp
  403334:	push   eax
  403335:	dec    esp
  403336:	hlt    
  403337:	stos   BYTE PTR es:[edi],al
  403338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403339:	out    0x8a,al
  40333b:	mov    cl,0x23
  40333d:	mov    ds:0x30507b52,eax
  403342:	das    
  403343:	sub    ecx,ebx
  403345:	sbb    esi,DWORD PTR [ebx+0x2a]
  403348:	mov    bl,0xca
  40334a:	int    0x47
  40334c:	arpl   WORD PTR [eax+0x20],di
  40334f:	adc    DWORD PTR [eax+eax*2-0x5b5d4b2c],edx
  403356:	pop    ss
  403357:	cmp    ch,bl
  403359:	push   cs
  40335a:	out    0xc8,eax
  40335c:	xchg   esi,ebp
  40335e:	jp     0x403389
  403360:	cmp    BYTE PTR [esi],cl
  403362:	mov    ecx,0xa6f30d5f
  403367:	xor    dh,BYTE PTR [edi+0x27]
  40336a:	fimul  WORD PTR [esi+0x33b06e]
  403370:	inc    eax
  403371:	sti    
  403372:	push   ecx
  403373:	sbb    edx,DWORD PTR [ebx-0x7d]
  403376:	sbb    dl,cl
  403378:	pushf  
  403379:	jl     0x4033c0
  40337b:	in     al,dx
  40337c:	lods   al,BYTE PTR ds:[esi]
  40337d:	shl    dl,cl
  40337f:	ins    DWORD PTR es:[edi],dx
  403380:	xlat   BYTE PTR ds:[ebx]
  403381:	inc    ebp
  403382:	(bad)  
  403384:	outs   dx,BYTE PTR ds:[esi]
  403385:	shl    BYTE PTR [ecx],0xc9
  403388:	mov    cl,bl
  40338a:	fidivr WORD PTR [ebx-0x6]
  40338d:	(bad)  
  40338f:	out    dx,eax
  403390:	sub    DWORD PTR [eax],eax
  403392:	push   0xfffffff1
  403394:	cmp    al,0x5d
  403396:	push   0x29
  403398:	add    al,0xbc
  40339a:	or     cl,ch
  40339c:	mov    cl,0xfa
  40339e:	mov    WORD PTR [edx-0x3f9911f4],?
  4033a4:	jnp    0x4033ed
  4033a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a7:	mov    bl,0x2d
  4033a9:	fnstcw WORD PTR [ecx+0x36d19f51]
  4033af:	int    0x5
  4033b1:	cs add BYTE PTR gs:[edx],bh
  4033b5:	das    
  4033b6:	inc    edx
  4033b7:	imul   ebx,DWORD PTR [ecx-0x53],0x2
  4033bb:	jecxz  0x40338b
  4033bd:	rcr    BYTE PTR [esi-0x71],0xc0
  4033c1:	jg     0x4033a4
  4033c3:	inc    edi
  4033c4:	dec    esp
  4033c5:	sbb    al,0xe0
  4033c7:	and    esi,eax
  4033c9:	sbb    DWORD PTR [eax],0x7b
  4033cc:	adc    ecx,ecx
  4033ce:	scas   eax,DWORD PTR es:[edi]
  4033cf:	inc    edi
  4033d0:	inc    edx
  4033d1:	add    DWORD PTR [ebp-0xc8058d7],ecx
  4033d7:	lahf   
  4033d8:	xchg   esi,eax
  4033d9:	add    ebx,esp
  4033db:	jecxz  0x40341e
  4033dd:	mov    edx,0xa9bff87
  4033e2:	push   eax
  4033e3:	xchg   edx,eax
  4033e4:	jbe    0x403447
  4033e6:	cli    
  4033e7:	jecxz  0x403421
  4033e9:	(bad)  
  4033ea:	sti    
  4033eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ec:	add    ecx,0x6a
  4033ef:	mov    ah,al
  4033f1:	cdq    
  4033f2:	scas   al,BYTE PTR es:[edi]
  4033f3:	mov    ch,0x39
  4033f5:	aam    0x6b
  4033f7:	mov    edx,0xe4b00555
  4033fc:	ss into 
  4033fe:	imul   DWORD PTR [esi]
  403400:	push   ebx
  403401:	pop    ecx
  403402:	popf   
  403403:	ret    
  403404:	dec    esp
  403405:	fidivr WORD PTR [esi]
  403407:	out    0x87,eax
  403409:	jmp    0x4376:0x3e630b72
  403410:	xchg   edx,eax
  403411:	push   ebp
  403412:	and    BYTE PTR [ebx+0x14],al
  403415:	jnp    0x4033d9
  403417:	xchg   edx,eax
  403418:	pop    edi
  403419:	sbb    al,0xa4
  40341b:	mov    eax,0x4fdb8b85
  403420:	sub    DWORD PTR [edx+0x65],eax
  403423:	mov    cl,0xc9
  403425:	or     BYTE PTR [edi+0x1f],dl
  403428:	enter  0x5d55,0xd8
  40342c:	(bad)  
  40342d:	std    
  40342e:	pop    es
  40342f:	call   0xfc52:0x25b1df98
  403436:	in     eax,dx
  403437:	fnsave [ecx+0x58]
  40343a:	lods   al,BYTE PTR ds:[esi]
  40343b:	mov    edi,0xa2931cc6
  403440:	aaa    
  403441:	jge    0x4033e5
  403443:	jl     0x403486
  403445:	adc    al,0x7b
  403447:	sar    bh,cl
  403449:	inc    ebx
  40344a:	ss cmp eax,0x41f1d55f
  403450:	xchg   esi,eax
  403451:	push   edi
  403452:	shr    BYTE PTR [edx],cl
  403454:	int3   
  403455:	sbb    eax,0xa45280fc
  40345a:	xchg   edx,eax
  40345b:	mov    ds:0x6df8e234,al
  403460:	xlat   BYTE PTR ds:[ebx]
  403461:	mov    ebx,0xfa63d528
  403466:	loope  0x4033f2
  403468:	scas   eax,DWORD PTR es:[edi]
  403469:	fwait
  40346a:	lahf   
  40346b:	cmp    eax,0x82811eb0
  403470:	push   esi
  403471:	xor    DWORD PTR [esi],ecx
  403473:	mov    bh,0xc2
  403475:	jge    0x40348a
  403477:	aaa    
  403478:	and    al,0x55
  40347a:	mov    ah,0x32
  40347c:	pop    edx
  40347d:	inc    ecx
  40347e:	and    esp,DWORD PTR [eax-0x3d]
  403481:	add    dh,BYTE PTR [ebx]
  403483:	or     al,0x93
  403485:	test   DWORD PTR [ecx],ebx
  403487:	pop    ebp
  403488:	jo     0x403501
  40348a:	xor    eax,0xde810f45
  40348f:	push   ecx
  403490:	mov    eax,ds:0x4aac2608
  403495:	inc    ebp
  403496:	cmp    al,0x30
  403498:	(bad)  
  403499:	imul   BYTE PTR [ecx+ebx*1]
  40349c:	inc    edi
  40349d:	fidivr WORD PTR [ebp+ecx*4-0x43]
  4034a1:	je     0x4034e7
  4034a3:	push   ecx
  4034a4:	push   es
  4034a5:	test   eax,0xab57a258
  4034aa:	ins    DWORD PTR es:[edi],dx
  4034ab:	aam    0x5d
  4034ad:	cdq    
  4034ae:	mov    ah,0xc0
  4034b0:	test   BYTE PTR [edx+0xf292641],dl
  4034b6:	inc    esp
  4034b7:	call   0x1f0ecec6
  4034bc:	push   eax
  4034bd:	cld    
  4034be:	lds    edi,FWORD PTR [ebx-0x59c05ec7]
  4034c4:	retfw  0x8d74
  4034c8:	inc    esp
  4034c9:	sub    eax,0xd9286516
  4034ce:	sbb    DWORD PTR ds:0x13ab04d3,edx
  4034d4:	les    ebx,FWORD PTR [eax]
  4034d6:	mov    ebp,0xaed8d533
  4034db:	mov    edx,0xdb6c6db2
  4034e0:	and    BYTE PTR [ecx+0x4ce8af46],al
  4034e6:	sbb    ecx,DWORD PTR [ebx+0x55]
  4034e9:	dec    edi
  4034ea:	jnp    0x403540
  4034ec:	jmp    0x403478
  4034ee:	dec    edx
  4034ef:	fwait
  4034f0:	mov    ah,0x63
  4034f2:	rol    BYTE PTR [ecx+eiz*8],cl
  4034f5:	daa    
  4034f6:	mov    ebx,0xcf359141
  4034fb:	gs jp  0x40357a
  4034fe:	jnp    0x4034ac
  403500:	jae    0x4034be
  403502:	or     al,0x91
  403504:	mov    edx,eax
  403506:	call   0x314:0x828b7491
  40350d:	xor    eax,0xb6eefc92
  403512:	cmp    edx,DWORD PTR [edi-0x19]
  403515:	adc    BYTE PTR [ecx],bl
  403517:	shr    BYTE PTR [edx-0x5068c62d],cl
  40351d:	cmp    BYTE PTR [ecx-0xe21ed57],ah
  403523:	pop    edx
  403524:	jne    0x4034a9
  403526:	lea    ebp,[ebx]
  403528:	aad    0xb8
  40352a:	adc    BYTE PTR [eax+0x56],0xb6
  40352e:	dec    BYTE PTR [edi-0x72]
  403531:	mov    eax,ds:0x66f555ae
  403536:	xchg   edx,eax
  403537:	jmp    0xb5eaf77
  40353c:	push   DWORD PTR [edx+0x73]
  40353f:	xor    eax,0xe8538919
  403544:	xor    DWORD PTR [esi+0x648120ce],ebp
  40354a:	xchg   esi,eax
  40354b:	pop    ebx
  40354c:	aad    0xe2
  40354e:	ss pop ecx
  403550:	jnp    0x4034ff
  403552:	or     ebp,DWORD PTR [edx-0x11]
  403555:	(bad)  
  403556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403557:	scas   al,BYTE PTR es:[edi]
  403558:	jmp    0x5000:0xa9e5107
  40355f:	pop    edx
  403560:	mov    eax,DWORD PTR [edx+0x5a1f44e0]
  403566:	dec    ebp
  403567:	or     al,0xa0
  40356a:	fldenv [ecx]
  40356c:	jg     0x40354f
  40356e:	inc    ebp
  40356f:	aaa    
  403570:	jle    0x403592
  403572:	add    bl,al
  403574:	mov    ds:0xc187f4ba,eax
  403579:	or     al,0xbf
  40357b:	or     dh,BYTE PTR [ecx-0x35]
  40357e:	aaa    
  40357f:	inc    edi
  403580:	clc    
  403581:	lea    ebx,[edx+0x40826d85]
  403587:	xchg   DWORD PTR [ecx],esp
  403589:	or     al,bl
  40358b:	jbe    0x403581
  40358d:	mov    bl,0xa5
  40358f:	shl    DWORD PTR [eax-0x41292290],1
  403595:	cli    
  403596:	xor    al,ch
  403598:	in     al,dx
  403599:	inc    edx
  40359a:	jnp    0x403534
  40359c:	loopne 0x403531
  40359e:	and    esi,ebx
  4035a0:	and    eax,0xd8ba86a6
  4035a5:	mov    eax,0x5362b9c3
  4035aa:	dec    esi
  4035ab:	rcr    BYTE PTR [eax-0x79],cl
  4035ae:	push   edi
  4035af:	bound  edx,QWORD PTR [eax-0x43e60de7]
  4035b5:	pop    eax
  4035b6:	stc    
  4035b7:	jmp    0x403556
  4035b9:	not    dh
  4035bb:	test   al,0xba
  4035bd:	sahf   
  4035be:	mov    ds:0x3e566576,al
  4035c3:	test   DWORD PTR [esi-0x7e278bd6],ebx
  4035c9:	mov    ebp,0x3523bc08
  4035ce:	sub    edi,DWORD PTR [ebp-0x72526aeb]
  4035d4:	jle    0x4035af
  4035d6:	out    dx,al
  4035d7:	repz pop ebx
  4035d9:	call   0xa5db:0x79e13542
  4035e0:	cli    
  4035e1:	fisub  DWORD PTR [edx+0x5156e13a]
  4035e7:	mov    ds:0x10359fd5,al
  4035ec:	popa   
  4035ed:	mov    ecx,0xe42ebef5
  4035f2:	je     0x4035fa
  4035f4:	lods   al,BYTE PTR ds:[esi]
  4035f5:	add    al,0xe5
  4035f7:	fcomp  DWORD PTR [esi+0x41]
  4035fa:	mov    bh,BYTE PTR [ebx+0x6bee58d9]
  403600:	xor    al,0xac
  403602:	sahf   
  403603:	sub    DWORD PTR [eax],0xffffff9f
  403606:	push   edx
  403607:	jno    0x403652
  403609:	pop    ecx
  40360a:	jb     0x40360b
  40360c:	popa   
  40360d:	jg     0x403607
  40360f:	jmp    0x40364a
  403611:	xchg   edx,eax
  403612:	pop    eax
  403613:	cmp    esp,DWORD PTR [esi]
  403615:	call   FWORD PTR [ebx-0xaf9589d]
  40361b:	leave  
  40361c:	mov    WORD PTR [ebp-0xc],?
  40361f:	cdq    
  403620:	jno    0x403676
  403622:	sub    al,0xc
  403624:	(bad)  
  403625:	push   ecx
  403626:	rcr    DWORD PTR [edx+ebx*2+0x745f5edc],1
  40362d:	and    eax,eax
  40362f:	out    0x16,eax
  403631:	mov    fs,esp
  403633:	sbb    cl,BYTE PTR [edx+eiz*4]
  403636:	sub    BYTE PTR [edx],bl
  403638:	cmp    BYTE PTR [edi-0x1],ah
  40363b:	or     eax,0x581a3d32
  403640:	mov    al,0xba
  403642:	push   es
  403643:	xor    ebx,DWORD PTR [ebx-0x10]
  403646:	fldcw  WORD PTR [eax]
  403648:	cli    
  403649:	lock mov fs,WORD PTR [edi]
  40364c:	pop    ds
  40364d:	popa   
  40364e:	pop    ss
  40364f:	add    al,0xec
  403651:	cmp    al,0xb6
  403653:	push   ebp
  403654:	or     dl,cl
  403656:	adc    DWORD PTR [esi-0x20],esp
  403659:	fild   QWORD PTR [ecx+0x73]
  40365c:	cmc    
  40365d:	ror    BYTE PTR [ebx+0x4c],1
  403660:	dec    ebx
  403661:	push   es
  403662:	rcl    DWORD PTR [edi],cl
  403664:	test   DWORD PTR [eax+eax*8],eax
  403667:	call   0x69bc:0xcd37f0e7
  40366e:	imul   esp,DWORD PTR [esi+0x5],0x274dbd66
  403675:	cdq    
  403676:	add    al,0x70
  403678:	outs   dx,DWORD PTR ds:[esi]
  403679:	adc    bh,dh
  40367b:	mov    BYTE PTR [edi],ch
  40367d:	stc    
  40367e:	and    ebx,DWORD PTR [ebx+0x23]
  403681:	xchg   edi,eax
  403682:	leave  
  403683:	push   ebp
  403684:	cld    
  403685:	push   ebx
  403686:	push   eax
  403687:	lock inc ebx
  403689:	jnp    0x403693
  40368b:	pop    edi
  40368c:	ds pop es
  40368e:	jmp    0x7c37:0xf2f846ab
  403695:	mov    ebx,ecx
  403697:	adc    ch,dh
  403699:	or     dl,BYTE PTR gs:[si]
  40369d:	(bad)  
  40369e:	add    BYTE PTR [eax-0x8868dca],cl
  4036a4:	pop    es
  4036a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036a6:	ja     0x4036e2
  4036a8:	jmp    0x59c:0xc40d8702
  4036af:	dec    esi
  4036b0:	adc    al,ch
  4036b2:	inc    esp
  4036b3:	xchg   ebp,eax
  4036b4:	repz push edi
  4036b6:	and    BYTE PTR [edx-0x3bf05f88],dl
  4036bc:	xchg   esp,eax
  4036bd:	sbb    eax,0xda924938
  4036c2:	sub    dh,BYTE PTR [esi]
  4036c4:	mov    edx,0xffaf1788
  4036c9:	inc    esp
  4036ca:	fsubr  DWORD PTR [ebx-0x50]
  4036cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ce:	cwde   
  4036cf:	imul   esi,eax,0x39d0e802
  4036d5:	inc    eax
  4036d6:	out    0x93,al
  4036d8:	pop    esi
  4036d9:	cmp    edi,eax
  4036db:	or     DWORD PTR [edx+0x63],ecx
  4036de:	and    edi,DWORD PTR [eax]
  4036e0:	js     0x403677
  4036e2:	jl     0x4036ea
  4036e4:	les    ebx,FWORD PTR [edx+ebx*4]
  4036e7:	(bad)  
  4036e8:	(bad)
  4036eb:	or     eax,0x5c7e438a
  4036f0:	sub    al,0xe2
  4036f2:	jo     0x40368f
  4036f4:	sub    DWORD PTR [eax+ecx*2-0x3150dd64],0x4
  4036fc:	ror    DWORD PTR [edx+0x11a9ebd4],0xb4
  403703:	(bad)
  403706:	shl    DWORD PTR [esi-0x41fed039],0x15
  40370d:	push   ebp
  40370e:	jno    0x4036b8
  403710:	fstp   QWORD PTR [esi+0x6f7f85b4]
  403716:	or     DWORD PTR [esi],edi
  403718:	push   esp
  403719:	cs jp  0x403768
  40371c:	inc    ecx
  40371d:	jnp    0x4036f7
  40371f:	ins    BYTE PTR es:[edi],dx
  403720:	and    BYTE PTR [ecx],al
  403722:	adc    al,0x29
  403724:	addr16 xchg ecx,eax
  403726:	xor    ah,BYTE PTR ds:0x8a3aea93
  40372c:	imul   edx,DWORD PTR [eax+eiz*2],0xfffffff7
  403730:	jo     0x403724
  403732:	mov    ecx,0xb431f73f
  403737:	mov    bl,0xd
  403739:	fsubrp st(3),st
  40373b:	pop    ds
  40373c:	xlat   BYTE PTR ds:[ebx]
  40373d:	add    eax,0x80ec0228
  403742:	xchg   esi,eax
  403743:	jmp    0x7f3022cf
  403748:	retf   
  403749:	mov    edi,DWORD PTR [ecx-0xe]
  40374c:	aaa    
  40374d:	jecxz  0x4036e9
  40374f:	xchg   ebp,eax
  403750:	mov    BYTE PTR [edx-0xb076831],bl
  403756:	dec    eax
  403757:	sub    eax,0x86748c6
  40375c:	adc    ch,cl
  40375e:	ror    BYTE PTR [edx+0x16],cl
  403761:	es push eax
  403763:	aam    0x10
  403765:	fcomp  QWORD PTR [edi-0x37]
  403768:	test   BYTE PTR [ecx-0x73],0xb9
  40376c:	mov    edx,0x2a54b454
  403771:	mov    dl,0x2a
  403773:	fmul   DWORD PTR ds:[eax+0x705ca631]
  40377a:	or     DWORD PTR ds:0x9ca79a15,edx
  403780:	xchg   edi,eax
  403781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403782:	mov    eax,ds:0xb79c0a1c
  403787:	into   
  403788:	xchg   BYTE PTR [esi+0x5e],bl
  40378b:	jg     0x403718
  40378d:	push   cs
  40378e:	retf   
  40378f:	shl    BYTE PTR [ecx],1
  403791:	dec    DWORD PTR [ebx*2+0x1ec7cd6c]
  403798:	push   eax
  403799:	aaa    
  40379a:	jge    0x403817
  40379c:	hlt    
  40379d:	and    al,0x30
  40379f:	dec    esp
  4037a0:	fiadd  WORD PTR [edx-0x41]
  4037a3:	dec    ecx
  4037a4:	imul   eax,DWORD PTR [ecx-0x21],0x7e9d6a47
  4037ab:	(bad)  
  4037ac:	cmc    
  4037ad:	cmp    esi,DWORD PTR [ecx+0x5c0d0177]
  4037b3:	out    dx,eax
  4037b4:	xchg   edx,eax
  4037b5:	jbe    0x403778
  4037b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b8:	jmp    0xbf1a:0xbfdef1ed
  4037bf:	imul   ecx,DWORD PTR [edi+0x75],0xfa911498
  4037c6:	pusha  
  4037c7:	cmp    BYTE PTR [esi],dh
  4037c9:	push   es
  4037ca:	or     eax,0x6013bd1c
  4037cf:	mov    bh,0xf2
  4037d1:	adc    DWORD PTR [eax],ebp
  4037d3:	sbb    eax,0x42d4503c
  4037d8:	cdq    
  4037d9:	mov    esp,0x4fa31a95
  4037de:	adc    al,0xc5
  4037e0:	pusha  
  4037e1:	xchg   esp,eax
  4037e2:	(bad)  
  4037e4:	(bad)  
  4037e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e6:	retf   
  4037e7:	pop    ecx
  4037e8:	inc    ebx
  4037e9:	mov    ecx,0x491b78b6
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fadd   QWORD PTR fs:[edi]
  40389a:	dec    esi
  40389b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40389c:	adc    al,0xdd
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x23]
  4038a6:	int3   
  4038a7:	out    dx,eax
  4038a8:	iret   
  4038a9:	push   esi
  4038aa:	sub    al,0x45
  4038ac:	in     al,0xac
  4038ae:	push   cs
  4038af:	cmp    bh,cl
  4038b1:	aad    0xf
  4038b3:	mov    ?,WORD PTR [ecx-0x645309b4]
  4038b9:	out    dx,eax
  4038ba:	cwde   
  4038bb:	gs das 
  4038bd:	out    dx,eax
  4038be:	addr16 jmp 0x4038e4
  4038c1:	mov    al,0x8c
  4038c3:	int    0x65
  4038c5:	stc    
  4038c6:	icebp  
  4038c7:	xor    eax,0x585a0fbf
  4038cc:	stos   DWORD PTR es:[edi],eax
  4038cd:	in     al,dx
  4038ce:	mov    bh,0x1
  4038d0:	cdq    
  4038d1:	pop    esp
  4038d2:	inc    edx
  4038d3:	out    dx,eax
  4038d4:	jo     0x4038cf
  4038d6:	cmp    edi,esi
  4038d8:	or     al,0xab
  4038da:	repz dec edx
  4038dc:	test   al,0xb
  4038de:	pop    edx
  4038df:	enter  0x5c55,0xea
  4038e3:	adc    esp,DWORD PTR [ecx+0x66]
  4038e6:	and    BYTE PTR [edx-0x1b6137d9],dl
  4038ec:	rcr    DWORD PTR [edx-0x50ea0987],0x84
  4038f3:	inc    edi
  4038f4:	test   eax,0x635a5715
  4038f9:	loop   0x4038aa
  4038fb:	fild   WORD PTR [ebp+0x5650487a]
  403901:	push   esp
  403902:	cld    
  403903:	les    ebx,FWORD PTR [esi+0x5ab5fccb]
  403909:	pop    ds
  40390a:	xchg   ecx,eax
  40390b:	fst    DWORD PTR [eax-0x1b]
  40390e:	fistp  DWORD PTR [esi]
  403910:	push   es
  403911:	ret    
  403912:	and    ebp,DWORD PTR [edi]
  403914:	out    0x3a,al
  403916:	mov    cl,0x79
  403918:	hlt    
  403919:	mov    ch,0x5f
  40391b:	lds    esp,FWORD PTR [edx]
  40391d:	lahf   
  40391e:	mov    esp,0xb3eaa004
  403923:	hlt    
  403924:	push   cs
  403925:	in     eax,0x4
  403927:	push   0x26f2715
  40392c:	and    eax,0xbcd86f8f
  403931:	std    
  403932:	adc    al,0x8c
  403934:	or     DWORD PTR [eax],esi
  403936:	leave  
  403937:	rcpps  xmm1,XMMWORD PTR [edi+0x74]
  40393b:	push   es
  40393c:	leave  
  40393d:	test   esi,esi
  40393f:	inc    BYTE PTR [esi]
  403941:	xor    ah,al
  403943:	push   ecx
  403944:	push   cs
  403945:	dec    edx
  403946:	retf   
  403947:	pushf  
  403948:	push   ds
  403949:	jns    0x4038d6
  40394b:	mov    ecx,0xd11edf31
  403950:	pop    ds
  403951:	mov    ds:0xb87b96c9,al
  403956:	sbb    eax,0xf902c6ce
  40395b:	xchg   esp,eax
  40395c:	mov    dl,0x4f
  40395e:	cmc    
  40395f:	iret   
  403960:	inc    eax
  403961:	or     al,bh
  403963:	jle    0x4038f5
  403965:	mov    dl,0x54
  403967:	push   cs
  403968:	outs   dx,BYTE PTR ds:[esi]
  403969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40396a:	sub    BYTE PTR [ebp+0x32],bl
  40396d:	shr    ebx,cl
  40396f:	push   edx
  403970:	add    DWORD PTR [eax+esi*2-0xf],edx
  403974:	retf   0xdeee
  403977:	stos   BYTE PTR es:[edi],al
  403978:	mov    DWORD PTR ds:0x3199c97f,edi
  40397e:	xor    ebx,ebx
  403980:	mov    ecx,0xe0b943ac
  403985:	clc    
  403986:	iret   
  403987:	(bad)  gs:[esi+eiz*8+0x69f9f0a7]
  40398f:	lea    esi,[edx-0x3d]
  403992:	mov    ebp,0xd84cba39
  403997:	jb     0x403959
  403999:	call   0x9436:0x6048b4ae
  4039a0:	out    0x62,al
  4039a2:	mov    al,ds:0x4f32beea
  4039a7:	add    al,0xdf
  4039a9:	test   al,0xcc
  4039ab:	in     al,0x99
  4039ad:	push   ds
  4039ae:	pop    esp
  4039af:	ja     0x40396a
  4039b1:	repz mov ebp,0x99277969
  4039b7:	pop    ecx
  4039b8:	inc    edx
  4039b9:	sub    eax,0xf9af8afd
  4039be:	push   ebx
  4039bf:	hlt    
  4039c0:	out    0xda,al
  4039c2:	xchg   esi,eax
  4039c3:	pusha  
  4039c4:	lods   al,BYTE PTR ds:[esi]
  4039c5:	inc    ecx
  4039c6:	loop   0x403a07
  4039c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c9:	adc    DWORD PTR [esi],edi
  4039cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cc:	dec    esp
  4039cd:	add    edx,DWORD PTR [ecx+edx*1+0x59774ddf]
  4039d4:	mov    bl,0x77
  4039d6:	cmp    edx,edx
  4039d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d9:	shl    BYTE PTR [eax-0x22],1
  4039dc:	in     eax,0x16
  4039de:	mov    ecx,0x33da6469
  4039e3:	bound  esi,QWORD PTR [ecx-0x7b]
  4039e6:	fild   QWORD PTR [ecx+0x10d70fbe]
  4039ec:	mov    edi,0x955c3602
  4039f1:	clc    
  4039f2:	xchg   edx,eax
  4039f3:	jb     0x403a52
  4039f5:	iret   
  4039f6:	dec    ebp
  4039f7:	dec    edi
  4039f8:	test   ecx,0x48d624de
  4039fe:	clc    
  4039ff:	dec    edi
  403a00:	cmp    al,0x96
  403a02:	cli    
  403a03:	xor    al,0xf6
  403a05:	push   ecx
  403a06:	xor    DWORD PTR [esi+ebx*1+0x64aed9b9],0xa6da8e05
  403a11:	std    
  403a12:	inc    BYTE PTR ds:0x6fc1431a
  403a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a19:	jmp    0x2b67:0xea6ae571
  403a20:	outs   dx,BYTE PTR ds:[esi]
  403a21:	jne    0x403a68
  403a23:	popa   
  403a24:	pop    ss
  403a25:	sbb    BYTE PTR [ebp+0x54],ah
  403a28:	adc    BYTE PTR [edi+esi*2],bh
  403a2b:	pop    ss
  403a2c:	sar    BYTE PTR [ebx-0x11033fdb],0xa3
  403a33:	adc    bh,BYTE PTR [edi]
  403a35:	(bad)  
  403a36:	sbb    al,0xc8
  403a38:	xchg   ebx,eax
  403a39:	mov    eax,ds:0x2a847ff7
  403a3e:	(bad)  
  403a40:	dec    esp
  403a41:	icebp  
  403a42:	ins    DWORD PTR es:[edi],dx
  403a43:	les    eax,FWORD PTR [esi]
  403a45:	add    BYTE PTR [edx+edx*8+0x39b05888],al
  403a4c:	add    ebp,DWORD PTR ds:0x317b6356
  403a52:	cmp    dh,al
  403a54:	lahf   
  403a55:	mov    DWORD PTR [edi-0x48],ebx
  403a58:	in     al,dx
  403a59:	out    0xc1,al
  403a5b:	ror    BYTE PTR [ecx+0x46],0x91
  403a5f:	or     DWORD PTR [esi],0x27106fd3
  403a65:	cld    
  403a66:	and    BYTE PTR [edi-0x79],dl
  403a69:	mov    edx,0x7989f157
  403a6e:	cmp    eax,0x82e25cb9
  403a73:	mov    ebp,0xcfbec6f3
  403a78:	mov    bl,0x11
  403a7a:	xor    esp,eax
  403a7c:	sub    dl,bh
  403a7e:	and    DWORD PTR [esi+ecx*1-0x74],esi
  403a82:	fdivr  QWORD PTR [esi+0x2aaa3e0e]
  403a88:	jmp    0xb092e4a0
  403a8d:	push   esp
  403a8e:	mov    DWORD PTR [ecx],edi
  403a90:	mov    ch,0x3e
  403a92:	mov    WORD PTR [esp+ebx*4+0x49ba4090],?
  403a99:	pusha  
  403a9a:	and    edx,ecx
  403a9c:	push   ds
  403a9d:	push   ebx
  403a9e:	(bad)  
  403aa0:	test   BYTE PTR [edi+0x74],bh
  403aa3:	pop    eax
  403aa4:	pop    edx
  403aa5:	jle    0x403afe
  403aa7:	cld    
  403aa8:	pop    ecx
  403aa9:	mov    bl,BYTE PTR [ecx+ecx*8-0xed79a2b]
  403ab0:	aad    0x32
  403ab2:	lds    ebp,FWORD PTR [edi+0x336a59e8]
  403ab8:	mov    esp,0xf8038932
  403abd:	call   0x22817283
  403ac2:	dec    ebx
  403ac3:	xchg   esp,eax
  403ac4:	lods   eax,DWORD PTR ds:[esi]
  403ac5:	sub    eax,0x7b5368cd
  403aca:	xor    edi,edi
  403acc:	dec    edi
  403acd:	sbb    DWORD PTR [edx],ebx
  403acf:	mov    esp,0xe1f0426f
  403ad4:	mov    DWORD PTR [esi],esp
  403ad6:	dec    BYTE PTR [edi+0x13719531]
  403adc:	xchg   BYTE PTR [eax+0x74b020fe],al
  403ae2:	sub    ecx,DWORD PTR [ebx]
  403ae4:	iret   
  403ae5:	add    ah,BYTE PTR [edx-0x71]
  403ae8:	dec    ebp
  403ae9:	je     0x403b57
  403aeb:	push   ebp
  403aec:	icebp  
  403aed:	enter  0x3664,0x27
  403af1:	aad    0xc
  403af3:	mov    dh,0x10
  403af5:	test   al,0xd6
  403af7:	(bad)  
  403af8:	shl    DWORD PTR [esp+edx*4+0x2018bd2],0x9d
  403b00:	stos   DWORD PTR es:[edi],eax
  403b01:	sub    DWORD PTR [eax+0x134cd0b3],0x2b
  403b08:	add    BYTE PTR [ebp-0x6b],0x53
  403b0c:	rcl    DWORD PTR [edx+0x71ea03d5],cl
  403b12:	sbb    ebx,DWORD PTR [eax+edx*4]
  403b15:	scas   eax,DWORD PTR es:[edi]
  403b16:	jae    0x403b16
  403b18:	scas   eax,DWORD PTR es:[edi]
  403b19:	jl     0x403aeb
  403b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1d:	lods   eax,DWORD PTR ds:[esi]
  403b1e:	shl    bh,cl
  403b20:	clc    
  403b21:	inc    esi
  403b22:	aaa    
  403b23:	out    dx,eax
  403b24:	xlat   BYTE PTR ds:[ebx]
  403b25:	cmp    eax,0xe788584a
  403b2a:	loop   0x403b4a
  403b2c:	pop    esp
  403b2d:	push   esp
  403b2e:	(bad)  
  403b2f:	adc    dh,BYTE PTR [ebx+0x5e]
  403b32:	ds mov dh,0xa4
  403b35:	and    BYTE PTR [ecx],0x9d
  403b38:	nop
  403b39:	jmp    0x6367:0x35471218
  403b40:	pusha  
  403b41:	stc    
  403b42:	push   ebx
  403b43:	cmp    BYTE PTR [ebp+0x5150e08c],ah
  403b49:	daa    
  403b4a:	push   cs
  403b4b:	pop    ss
  403b4c:	out    0x7a,al
  403b4e:	push   0x42
  403b50:	sbb    al,0x8e
  403b52:	cld    
  403b53:	xchg   BYTE PTR [ecx+eax*4],bl
  403b56:	popf   
  403b57:	xchg   ebx,eax
  403b58:	(bad)  
  403b59:	mov    ds:0x28e90aad,eax
  403b5e:	or     DWORD PTR [edx-0x6b],0xa115b14d
  403b65:	aad    0x14
  403b67:	ds mov eax,0xcaa782da
  403b6d:	hlt    
  403b6e:	sub    DWORD PTR ds:[ebp+0x6f],edi
  403b72:	popa   
  403b73:	adc    cl,BYTE PTR [edi-0x3e4fa348]
  403b79:	fs int 0xe0
  403b7c:	pop    esp
  403b7d:	add    DWORD PTR [eax],0xffffffaa
  403b80:	jae    0x403bd5
  403b82:	jle    0x403beb
  403b84:	xor    DWORD PTR [eax+0x51],edi
  403b87:	adc    eax,0xe5b8737
  403b8c:	out    0x5d,eax
  403b8e:	iret   
  403b8f:	pop    esp
  403b90:	inc    esp
  403b91:	push   0xd29a5e45
  403b96:	cmp    DWORD PTR [eax+0x53],edi
  403b99:	jmp    0x1900:0x8eea20cc
  403ba0:	inc    ebp
  403ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba2:	test   BYTE PTR [ebx+0x79],dh
  403ba5:	push   es
  403ba6:	mov    esi,0xf4a41138
  403bab:	je     0x403b9a
  403bad:	mov    bl,0xfe
  403baf:	ror    BYTE PTR [ecx],cl
  403bb1:	adc    eax,0xffffffc2
  403bb4:	retf   
  403bb5:	jns    0x403bb6
  403bb7:	stos   DWORD PTR es:[edi],eax
  403bb8:	xor    ah,BYTE PTR [ebx-0x464a611e]
  403bbe:	fdivr  DWORD PTR [ebp-0x45f3e3]
  403bc4:	adc    al,0x17
  403bc6:	dec    esi
  403bc7:	or     ch,BYTE PTR [eax]
  403bc9:	jle    0x403b7f
  403bcb:	shl    BYTE PTR [eax-0x19],cl
  403bce:	inc    esp
  403bcf:	inc    edi
  403bd0:	inc    eax
  403bd1:	push   ss
  403bd2:	mov    ah,0x1b
  403bd4:	xchg   DWORD PTR [eax-0x22],esp
  403bd7:	dec    eax
  403bd8:	pop    ss
  403bd9:	xlat   BYTE PTR ds:[ebx]
  403bda:	sbb    BYTE PTR [ecx+ecx*2+0x14dca845],dl
  403be1:	xchg   edx,eax
  403be2:	out    dx,al
  403be3:	and    al,0x4c
  403be5:	xchg   esp,eax
  403be6:	mov    al,0x1
  403be8:	test   DWORD PTR [edi+ebx*4+0x6a],0xa8c596e8
  403bf0:	mov    DWORD PTR [ecx-0x2d04c23],ebp
  403bf6:	out    0xa,eax
  403bf8:	jne    0x403c54
  403bfa:	mov    ah,BYTE PTR [ecx]
  403bfc:	or     DWORD PTR [edi],ebx
  403bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bff:	adc    eax,0x5723ceef
  403c04:	sub    al,bh
  403c06:	xchg   edx,eax
  403c07:	mov    ebx,esi
  403c09:	fadd   QWORD PTR [esi-0x39fd1f4c]
  403c0f:	jo     0x403b95
  403c11:	test   eax,0x3c3bc22f
  403c16:	sti    
  403c17:	inc    edx
  403c18:	fcom   QWORD PTR [ebp+0x63243295]
  403c1e:	lods   eax,DWORD PTR ds:[esi]
  403c1f:	dec    ecx
  403c20:	xor    esp,DWORD PTR [esi+0x69922275]
  403c26:	xchg   ecx,eax
  403c27:	add    edx,DWORD PTR [esi-0x3e52cad1]
  403c2d:	mov    dh,0x64
  403c2f:	push   ebp
  403c30:	dec    edx
  403c31:	and    al,0x20
  403c33:	outs   dx,BYTE PTR cs:[esi]
  403c35:	aam    0x5b
  403c37:	push   edx
  403c38:	sub    bl,BYTE PTR [ebp*1+0x4ed8310c]
  403c3f:	scas   al,BYTE PTR es:[edi]
  403c40:	sub    ch,dl
  403c42:	icebp  
  403c43:	hlt    
  403c44:	test   DWORD PTR [edi],edx
  403c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c47:	test   al,0x76
  403c49:	and    BYTE PTR [eax-0x4121a98],al
  403c4f:	mul    BYTE PTR [esi-0x354326bf]
  403c55:	xchg   DWORD PTR [edx+0x1b4c451e],ebx
  403c5b:	repnz sbb DWORD PTR [edx-0x4e],0x57f379
  403c63:	xchg   ebp,eax
  403c64:	inc    ebx
  403c65:	cmc    
  403c66:	dec    BYTE PTR [eax]
  403c68:	lods   al,BYTE PTR ds:[esi]
  403c69:	iret   
  403c6a:	into   
  403c6b:	mov    ebx,0x48322873
  403c70:	ss cdq 
  403c72:	adc    BYTE PTR fs:[eax+0x5da0957],ch
  403c79:	xchg   ecx,eax
  403c7a:	or     BYTE PTR [esi+0x51575f93],dh
  403c80:	(bad)  
  403c81:	push   ds
  403c82:	mov    DWORD PTR [eax+0x5c],edi
  403c85:	mov    bh,0x91
  403c87:	fdiv   DWORD PTR [edx-0x62]
  403c8a:	dec    eax
  403c8b:	call   0xa76c5be3
  403c90:	sbb    bl,0xe3
  403c93:	mulps  xmm2,XMMWORD PTR ds:0xdc31a73
  403c9a:	loopne 0x403d04
  403c9c:	clc    
  403c9d:	push   0x77
  403c9f:	dec    edx
  403ca0:	xchg   ebp,eax
  403ca1:	dec    esi
  403ca2:	popa   
  403ca3:	es xor ah,al
  403ca6:	push   ebp
  403ca7:	add    eax,0x5cb34c73
  403cac:	add    al,0x6c
  403cae:	arpl   WORD PTR [edx],si
  403cb0:	push   edx
  403cb1:	jb     0x403c44
  403cb3:	cdq    
  403cb4:	push   ss
  403cb5:	outs   dx,BYTE PTR ds:[esi]
  403cb6:	fisttp QWORD PTR [ecx]
  403cb8:	popa   
  403cb9:	or     ah,cl
  403cbb:	jp     0x403c93
  403cbd:	xchg   BYTE PTR [ecx],ah
  403cbf:	push   edx
  403cc0:	scas   al,BYTE PTR es:[edi]
  403cc1:	jle    0x403c9b
  403cc3:	sbb    eax,0xf8ca62bd
  403cc8:	loop   0x403d42
  403cca:	push   ss
  403ccb:	xchg   ebx,eax
  403ccc:	mov    edi,0x209470cf
  403cd1:	jge    0x403cf6
  403cd3:	mov    esp,0xba39af59
  403cd8:	inc    esi
  403cd9:	adc    DWORD PTR [ecx-0x5d0c030b],esi
  403cdf:	xor    ebx,0x2
  403ce2:	or     BYTE PTR ds:0x841999da,bl
  403ce8:	xchg   edi,eax
  403ce9:	scas   eax,DWORD PTR es:[edi]
  403cea:	sahf   
  403ceb:	mov    cs,edi
  403ced:	rcr    esp,0x2a
  403cf0:	sub    BYTE PTR [edx-0x79606217],dh
  403cf6:	cmc    
  403cf7:	js     0x403d3d
  403cf9:	sub    al,0x4d
  403cfb:	or     al,0x44
  403cfd:	faddp  st(1),st
  403cff:	movntq (bad),mm3
  403d00:	out    0xd8,eax
  403d02:	add    DWORD PTR [ebp+esi*2-0x50bee89e],esi
  403d09:	mov    edx,0xd2bd7ffb
  403d0e:	ja     0x403cde
  403d10:	fwait
  403d11:	jmp    0x81ac:0x41f52ba2
  403d18:	cmp    BYTE PTR cs:[edx+0x52],ch
  403d1c:	cmp    al,0xb2
  403d1e:	sub    al,BYTE PTR [eax-0x5aac5703]
  403d24:	int    0x10
  403d26:	(bad)  
  403d27:	cmp    esi,DWORD PTR [ebp+0x2b]
  403d2a:	cli    
  403d2b:	in     eax,0x27
  403d2d:	add    eax,DWORD PTR [edi+0x23964dcd]
  403d33:	inc    ebx
  403d34:	jnp    0x403ce4
  403d36:	jecxz  0x403cf4
  403d38:	adc    al,ch
  403d3a:	push   eax
  403d3b:	push   ebx
  403d3c:	out    0xc1,al
  403d3e:	dec    ebp
  403d3f:	pusha  
  403d40:	mov    dh,0x90
  403d42:	int3   
  403d43:	rcl    BYTE PTR [eax-0x19fdb97d],0x53
  403d4a:	xor    eax,0x20c4ffac
  403d4f:	enter  0xdd14,0xc3
  403d53:	xchg   esi,eax
  403d54:	fisubr WORD PTR [eax+0x5888d2ed]
  403d5a:	mov    ds,WORD PTR [edi]
  403d5c:	pop    es
  403d5d:	bswap  ecx
  403d5f:	dec    ecx
  403d60:	jns    0x403d8d
  403d62:	push   edx
  403d63:	ds stos DWORD PTR es:[edi],eax
  403d65:	or     ah,BYTE PTR [esi-0x23]
  403d68:	lds    esi,FWORD PTR [eax+0x62c9e05]
  403d6e:	bound  ebx,QWORD PTR ds:0xd1429c55
  403d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d75:	lods   eax,DWORD PTR ds:[esi]
  403d76:	mov    cl,0xd
  403d78:	sub    DWORD PTR [edx+0x4a],edi
  403d7b:	add    DWORD PTR [ebp-0x58ceec02],esi
  403d81:	xor    BYTE PTR [edi+0x69fa22aa],al
  403d87:	cdq    
  403d88:	aas    
  403d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d8a:	outs   dx,BYTE PTR ds:[esi]
  403d8b:	add    DWORD PTR [edi-0xf],eax
  403d8e:	les    esi,FWORD PTR [ebx+eiz*1+0x7a4d69b2]
  403d95:	push   esi
  403d96:	pop    ecx
  403d97:	(bad)  
  403d98:	push   ebx
  403d99:	scas   eax,DWORD PTR es:[edi]
  403d9a:	inc    ebp
  403d9b:	mov    dl,0x20
  403d9d:	cli    
  403d9e:	imul   ecx,esp,0x45fd71bf
  403da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da5:	sbb    eax,0xd6491c5
  403daa:	cld    
  403dab:	pop    ds
  403dac:	outs   dx,DWORD PTR ds:[esi]
  403dad:	xor    DWORD PTR [edx-0x3e],0x5f25a32f
  403db4:	mov    ebx,edi
  403db6:	add    al,0xee
  403db8:	or     DWORD PTR [ebp+0x12a58bb5],edx
  403dbe:	mov    al,0x71
  403dc0:	pop    ecx
  403dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc2:	out    dx,al
  403dc3:	inc    BYTE PTR [edx+0x72]
  403dc6:	test   DWORD PTR [eax],0x2aebe0e3
  403dcc:	(bad)  
  403dcd:	sti    
  403dce:	(bad)  
  403dcf:	shl    DWORD PTR [ebx+0x5fed06ee],0xe4
  403dd6:	push   0xef4078a2
  403ddb:	dec    ecx
  403ddc:	test   BYTE PTR [edx+0x16],bh
  403ddf:	fstp   st(5)
  403de1:	xor    dl,BYTE PTR [ebx]
  403de3:	lahf   
  403de4:	rcl    BYTE PTR [esi+0x1c],0x84
  403de8:	push   esi
  403de9:	xchg   edi,eax
  403dea:	or     BYTE PTR [eax+ebp*1-0x72],dl
  403dee:	fwait
  403def:	or     eax,0xaccd8815
  403df4:	mov    esi,0xf8060fca
  403df9:	jl     0x403e38
  403dfb:	cli    
  403dfc:	add    DWORD PTR [edi+0x3e46a54d],ecx
  403e02:	fild   DWORD PTR [ebp-0x60a5cbf3]
  403e08:	popa   
  403e09:	call   0x3007:0x3ded7fbe
  403e10:	fstp   DWORD PTR [ebx+ebx*4]
  403e13:	inc    esi
  403e14:	and    al,0x59
  403e16:	inc    eax
  403e17:	loop   0x403e00
  403e19:	push   es
  403e1a:	out    dx,eax
  403e1b:	(bad)  
  403e1c:	sub    DWORD PTR [esi],eax
  403e1e:	xor    BYTE PTR [esi+ebx*2-0x15],ch
  403e22:	addr16 push cs
  403e24:	xor    esp,DWORD PTR [ecx+0x593f4649]
  403e2a:	sub    ah,BYTE PTR [ecx+0x786e143f]
  403e30:	ss pusha 
  403e32:	sbb    BYTE PTR [edx-0x4cf78848],cl
  403e38:	mov    ebp,0x5cfd18a
  403e3d:	mov    WORD PTR [edx+0x54],gs
  403e40:	jne    0x403e50
  403e42:	sbb    eax,0x12c5d68c
  403e47:	or     DWORD PTR [eax+0x70],0x91ffe95b
  403e4e:	iret   
  403e4f:	or     ebx,eax
  403e51:	push   es
  403e52:	and    al,0xfb
  403e54:	sbb    ebx,DWORD PTR [eax+esi*1]
  403e57:	add    eax,0xff2da357
  403e5c:	iret   
  403e5d:	loop   0x403e68
  403e5f:	push   edx
  403e60:	cwde   
  403e61:	jne    0x403e56
  403e63:	cmp    ecx,DWORD PTR [edi-0xf]
  403e66:	retf   
  403e67:	sbb    DWORD PTR [eax+ebx*1+0x3f],ecx
  403e6b:	in     al,0xf
  403e6d:	cs adc al,0xf8
  403e70:	push   edi
  403e71:	push   ecx
  403e72:	mov    DWORD PTR [ebp-0x75],eax
  403e75:	sub    al,0x83
  403e77:	in     eax,dx
  403e78:	mov    edx,0x4a03a1
  403e7d:	call   0xaf098218
  403e82:	mov    ah,0x68
  403e84:	jmp    0x390f:0xd0bd95dc
  403e8b:	jge    0x403e47
  403e8d:	mov    al,0xc1
  403e8f:	mov    ds:0xcfc8cde2,eax
  403e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e95:	stos   DWORD PTR es:[edi],eax
  403e96:	pusha  
  403e97:	les    edi,FWORD PTR [esi-0x6c]
  403e9a:	sub    cl,0x95
  403e9d:	aas    
  403e9e:	xor    al,0x80
  403ea0:	pop    edi
  403ea1:	xchg   ebx,eax
  403ea2:	stos   BYTE PTR es:[edi],al
  403ea3:	or     al,0xff
  403ea5:	out    0xc,al
  403ea7:	(bad)  
  403ea8:	and    dh,BYTE PTR ds:0x7de9f354
  403eae:	pop    esi
  403eaf:	ret    
  403eb0:	ins    DWORD PTR es:[edi],dx
  403eb1:	mov    ds:0x405b78bd,eax
  403eb6:	fwait
  403eb7:	cli    
  403eb8:	call   0x68d0:0x2f5ecdc2
  403ebf:	stc    
  403ec0:	rcr    DWORD PTR [edi+0x6753527c],0x3
  403ec7:	arpl   bp,ax
  403ec9:	nop
  403eca:	sbb    al,0x55
  403ecc:	aaa    
  403ecd:	inc    edi
  403ece:	xchg   ecx,eax
  403ecf:	das    
  403ed0:	sbb    eax,0xebd8df85
  403ed5:	xchg   edi,eax
  403ed6:	int3   
  403ed7:	in     eax,0x78
  403ed9:	push   edi
  403eda:	(bad)  
  403edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403edc:	scas   eax,DWORD PTR es:[edi]
  403edd:	test   eax,0xe1a7b31a
  403ee2:	xor    eax,0x615b441d
  403ee7:	js     0x403ee1
  403ee9:	sub    BYTE PTR [edi-0x67],dh
  403eec:	inc    eax
  403eed:	ds aad 0xc0
  403ef0:	mov    edi,0xe9e3c4e7
  403ef5:	mov    al,0xf6
  403ef7:	mov    ecx,0x9be9f63f
  403efc:	and    BYTE PTR [ebp+0x21b51d4e],ch
  403f02:	or     ah,bl
  403f04:	retf   0x6f57
  403f07:	cs mov al,0x5e
  403f0a:	xchg   ebp,eax
  403f0b:	retf   
  403f0c:	push   edi
  403f0d:	add    ecx,DWORD PTR [esi+0x3c59cb1f]
  403f13:	pop    ebp
  403f14:	(bad)  
  403f15:	icebp  
  403f16:	fistp  DWORD PTR [esi-0x47]
  403f19:	push   cs
  403f1a:	pop    edi
  403f1b:	pop    esp
  403f1c:	and    al,0x4f
  403f1e:	scas   eax,DWORD PTR es:[edi]
  403f1f:	(bad)
  403f22:	and    al,0xf3
  403f24:	pushf  
  403f25:	je     0x403ef8
  403f27:	pop    es
  403f28:	dec    edx
  403f29:	jo     0x403f15
  403f2b:	add    eax,0xa460e569
  403f30:	(bad)  
  403f31:	jo     0x403f4a
  403f33:	mov    esp,0xb2bfacc5
  403f38:	and    edx,DWORD PTR [edx+0x64]
  403f3b:	jmp    0x403f94
  403f3d:	leave  
  403f3e:	stos   BYTE PTR es:[edi],al
  403f3f:	not    DWORD PTR [edx]
  403f41:	mov    ?,WORD PTR [edx+0x32ad2f2b]
  403f47:	jmp    0x124b:0x768aa372
  403f4e:	xchg   esi,eax
  403f4f:	cmp    dl,bh
  403f51:	test   BYTE PTR [eax],ch
  403f53:	xchg   ecx,eax
  403f54:	mov    cl,0xc2
  403f56:	cmc    
  403f57:	ss hlt 
  403f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5a:	mov    bh,0xae
  403f5c:	and    al,0xf4
  403f5e:	mov    ecx,0xd84d386
  403f63:	sbb    eax,0x1ad8b4c2
  403f68:	mov    al,0x31
  403f6a:	call   0xc765beae
  403f6f:	add    cl,BYTE PTR [edi+0x1b370c25]
  403f75:	xor    al,0x13
  403f77:	mov    al,0x60
  403f79:	arpl   bx,si
  403f7b:	xlat   BYTE PTR ds:[ebx]
  403f7c:	pop    ebx
  403f7d:	cmp    BYTE PTR [edx+ebp*1+0x67],0xc4
  403f82:	xor    DWORD PTR [ebp-0x2e],0x38f761a8
  403f89:	xchg   ebx,eax
  403f8a:	rcl    DWORD PTR [edx],0x40
  403f8d:	lock shl BYTE PTR [edi],cl
  403f90:	jns    0x403f97
  403f92:	out    0xc8,al
  403f94:	fcmovne st,st(6)
  403f96:	jo     0x403fe8
  403f98:	nop
  403f99:	js     0x403f70
  403f9b:	stos   BYTE PTR es:[edi],al
  403f9c:	mov    esi,0xb570438a
  403fa1:	(bad)  
  403fa2:	not    BYTE PTR [ebp+0x4316999c]
  403fa8:	sub    edx,DWORD PTR ds:0x4a51c411
  403fae:	inc    esp
  403faf:	(bad)  
  403fb0:	push   ss
  403fb1:	repz shl BYTE PTR [ebx-0x2c],cl
  403fb5:	jle    0x403f4a
  403fb7:	push   eax
  403fb8:	out    0x96,al
  403fba:	dec    esi
  403fbb:	fs push edx
  403fbd:	out    0x65,eax
  403fbf:	xor    edx,eax
  403fc1:	pop    ecx
  403fc2:	push   esi
  403fc3:	dec    edi
  403fc4:	dec    ecx
  403fc5:	test   DWORD PTR [edx-0x4b3de515],ebx
  403fcb:	shl    DWORD PTR [ebx+0x29],0xd2
  403fcf:	not    BYTE PTR [edi+0x5308c7be]
  403fd5:	int    0x5b
  403fd7:	xor    cl,BYTE PTR [edx-0x4d]
  403fda:	stos   DWORD PTR es:[edi],eax
  403fdb:	rcl    BYTE PTR [edx],1
  403fdd:	neg    ebx
  403fdf:	scas   eax,DWORD PTR es:[edi]
  403fe0:	add    esi,DWORD PTR [esi-0x6cdb4e2b]
  403fe6:	arpl   WORD PTR [edx],sp
  403fe8:	daa    
  403fe9:	jl     0x40404c
  403feb:	sbb    bh,BYTE PTR [eax]
  403fed:	aad    0x33
  403fef:	fs xchg ecx,eax
  403ff1:	data16 cmc 
  403ff3:	daa    
  403ff4:	push   ecx
  403ff5:	bound  esi,QWORD PTR ds:0xc0b2eb7b
  403ffb:	loope  0x404009
  403ffd:	stc    
  403ffe:	add    eax,0x2f5bf4f9
  404003:	shr    BYTE PTR [edx-0x52d0fdc4],1
  404009:	push   ebp
  40400a:	dec    eax
  40400b:	and    eax,0xae7aff85
  404010:	mov    ecx,0x26905960
  404015:	aas    
  404016:	inc    eax
  404017:	fnstcw WORD PTR [ecx+0x5c]
  40401a:	or     BYTE PTR [esi+0x19],dh
  40401d:	(bad)  
  40401e:	dec    BYTE PTR [si]
  404021:	xchg   ebx,eax
  404022:	lods   al,BYTE PTR ds:[esi]
  404023:	jbe    0x404025
  404025:	add    bl,BYTE PTR ss:[esi-0x183e877e]
  40402c:	xchg   ecx,eax
  40402d:	push   cs
  40402e:	cmp    eax,0x86dfbee7
  404033:	in     al,0xd7
  404035:	in     al,0x7c
  404037:	and    eax,0xebd3665c
  40403c:	jmp    0x96b9:0x10630847
  404043:	push   ds
  404044:	sub    al,bh
  404046:	cs jle 0x40405c
  404049:	daa    
  40404a:	repnz sub BYTE PTR [ebx],ch
  40404d:	dec    edi
  40404e:	ja     0x404051
  404050:	adc    DWORD PTR [esi-0x1f],edx
  404053:	adc    al,0xbb
  404055:	inc    eax
  404056:	pop    ds
  404057:	or     eax,0x50d1f632
  40405c:	sahf   
  40405d:	dec    edi
  40405e:	jbe    0x4040be
  404060:	pusha  
  404061:	push   edx
  404062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404064:	les    edi,FWORD PTR [ecx]
  404066:	mov    esi,0xe4ad8ec5
  40406b:	scas   eax,DWORD PTR es:[edi]
  40406c:	mov    DWORD PTR [ecx-0xf879fd8],edi
  404072:	(bad)  
  404073:	rcl    dh,1
  404075:	repz push ebx
  404077:	daa    
  404078:	mov    DWORD PTR [ecx],esp
  40407a:	mov    al,0x5e
  40407c:	gs mov ch,0xca
  40407f:	not    BYTE PTR [ecx+0x164de175]
  404085:	enter  0x1053,0x7a
  404089:	xor    edx,DWORD PTR [eax]
  40408b:	and    esp,ebx
  40408d:	inc    edx
  40408e:	test   DWORD PTR [edi+0x6c],ebx
  404091:	jmp    0x404042
  404093:	pop    ebx
  404094:	sbb    al,0x50
  404096:	loop   0x40405c
  404098:	sub    al,0x5f
  40409a:	add    eax,0xaf1f507b
  40409f:	stc    
  4040a0:	mov    ebp,edx
  4040a2:	cmp    eax,0x2888f214
  4040a7:	add    BYTE PTR [esi],ah
  4040a9:	fisttp QWORD PTR [edx+0x1651d08d]
  4040af:	push   eax
  4040b0:	mov    cl,0x7
  4040b2:	jl     0x4040c0
  4040b4:	jmp    0x8fab:0x6ad9053
  4040bb:	add    edi,DWORD PTR [edx+0x73]
  4040be:	rcr    BYTE PTR ds:0x84af0493,cl
  4040c4:	xchg   esi,eax
  4040c5:	mov    BYTE PTR [ebx+ebp*2-0x4f3e6715],cl
  4040cc:	or     al,0x26
  4040ce:	push   edx
  4040cf:	push   0x9942c78d
  4040d4:	xchg   BYTE PTR [ebp+0x1d],dl
  4040d7:	and    BYTE PTR [ebx],0x74
  4040da:	cmp    BYTE PTR [ecx-0x40f05609],dh
  4040e0:	outs   dx,DWORD PTR ds:[esi]
  4040e1:	imul   eax,eax,0x3de62e11
  4040e7:	sub    eax,0x42a2b486
  4040ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ed:	xor    eax,0xd34204fd
  4040f2:	adc    eax,0xcbfade7a
  4040f7:	sbb    edx,eax
  4040f9:	sub    DWORD PTR [ebp-0x6f],ecx
  4040fc:	mov    al,ds:0x6a08a4ae
  404101:	sbb    edi,edx
  404103:	xchg   esp,eax
  404104:	jp     0x4040ba
  404106:	push   ebx
  404107:	aad    0x27
  404109:	test   DWORD PTR [edi-0x74],edi
  40410c:	out    0xdf,al
  40410e:	scas   al,BYTE PTR es:[edi]
  40410f:	js     0x4040cc
  404111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404112:	jbe    0x404095
  404114:	jb     0x404156
  404116:	int    0x13
  404118:	and    ebp,DWORD PTR [ecx+0x34]
  40411b:	inc    edi
  40411c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411d:	dec    edi
  40411e:	push   ecx
  40411f:	xchg   ecx,eax
  404120:	and    bl,BYTE PTR ds:0x95908062
  404126:	popf   
  404127:	xchg   edi,eax
  404128:	mov    ah,0x95
  40412a:	fsubr  QWORD PTR [edx+ebp*1-0x53]
  40412e:	out    dx,eax
  40412f:	ins    BYTE PTR es:[edi],dx
  404130:	retf   
  404131:	pop    eax
  404132:	push   eax
  404133:	outs   dx,DWORD PTR ds:[esi]
  404134:	bound  eax,QWORD PTR [ebx-0xd9e3828]
  40413a:	stos   BYTE PTR es:[edi],al
  40413b:	jg     0x40414a
  40413d:	gs dec esi
  40413f:	cmc    
  404140:	and    al,0x73
  404142:	mov    edx,0x90f2ee47
  404147:	fcom   DWORD PTR [edi+0x54f1191e]
  40414d:	push   edx
  40414e:	leave  
  40414f:	inc    edx
  404150:	add    eax,0x1dbe8961
  404155:	adc    dh,BYTE PTR fs:[edi-0x23]
  404159:	xor    eax,DWORD PTR [esi+0x747f7955]
  40415f:	push   ebx
  404160:	push   0xc
  404162:	cmp    eax,0xc10bc429
  404167:	fisub  DWORD PTR [edx]
  404169:	int    0xe
  40416b:	cs xchg edx,eax
  40416d:	mov    bh,0x4c
  40416f:	js     0x40417b
  404171:	fist   DWORD PTR [edi+0x4171b9e1]
  404177:	add    eax,0x8d25de06
  40417c:	call   0x6cb4c9ee
  404181:	or     eax,0xe74c3ba8
  404186:	inc    edx
  404187:	dec    esp
  404188:	cmc    
  404189:	push   ecx
  40418a:	rcr    DWORD PTR [ebx-0x75f69353],0x7a
  404191:	xor    eax,0xcd0f0d7f
  404196:	repz mov esp,0x50fa260c
  40419c:	jmp    0x51cee226
  4041a1:	shl    DWORD PTR [ebx],0xa
  4041a4:	sub    BYTE PTR [edi],0xa8
  4041a7:	or     ah,BYTE PTR [ecx+0x5c]
  4041aa:	push   edx
  4041ab:	int    0xf3
  4041ad:	dec    esi
  4041ae:	arpl   cx,dx
  4041b0:	inc    edx
  4041b1:	imul   ecx,DWORD PTR [esi+edx*8-0x14075b68],0x390fbf05
  4041bc:	rcl    BYTE PTR [edx],1
  4041be:	push   DWORD PTR [ebx-0x5412cbe1]
  4041c4:	pop    ebp
  4041c5:	fstp   QWORD PTR [ecx]
  4041c7:	add    ebp,esi
  4041c9:	push   ebp
  4041ca:	in     eax,dx
  4041cb:	sub    al,0x55
  4041cd:	fisub  WORD PTR [edi+0x4d]
  4041d0:	arpl   WORD PTR [edi],si
  4041d2:	push   ecx
  4041d3:	leave  
  4041d4:	popa   
  4041d5:	xchg   BYTE PTR [ebx-0x27],ah
  4041d8:	xchg   esi,eax
  4041d9:	and    DWORD PTR [edi-0x371fa9de],0x473a5fc6
  4041e3:	mov    ch,0xd6
  4041e5:	ret    0x75fc
  4041e8:	xor    eax,0x8c31cd8f
  4041ed:	enter  0x6dda,0xa8
  4041f1:	add    cl,BYTE PTR [ebp+0x4123f53d]
  4041f7:	inc    edx
  4041f8:	sub    BYTE PTR [edi-0x3e],ah
  4041fb:	sar    BYTE PTR [edi-0x4f6f847e],1
  404201:	call   0xefb6:0xd2af7e64
  404208:	out    0x93,al
  40420a:	dec    eax
  40420b:	mov    eax,0x6b861ab7
  404210:	mov    ah,0x77
  404212:	fdiv   QWORD PTR [ecx+0x206e7712]
  404218:	ins    BYTE PTR es:[edi],dx
  404219:	sahf   
  40421a:	jp     0x404253
  40421c:	add    al,0x20
  40421e:	in     al,dx
  40421f:	call   0x3d620d34
  404224:	fisubr WORD PTR [esi]
  404226:	push   cs
  404227:	sbb    edi,DWORD PTR [edx]
  404229:	sbb    dl,ah
  40422b:	push   cs
  40422c:	fcomp  DWORD PTR ds:0x520f3466
  404232:	cld    
  404233:	cs scas eax,DWORD PTR es:[edi]
  404235:	(bad)  
  404236:	popa   
  404237:	sub    BYTE PTR [edi+0xcf158b],0x89
  40423e:	rcr    BYTE PTR [esi-0x15],1
  404241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404242:	sbb    eax,DWORD PTR [ebx+0xfef7dda]
  404248:	push   esi
  404249:	mov    edi,0x4b53eb11
  40424e:	xor    esi,DWORD PTR [ebp-0x501b48]
  404254:	jge    0x404283
  404256:	push   ebp
  404257:	jmp    0xff1:0x74196014
  40425e:	push   edi
  40425f:	push   ss
  404260:	cwde   
  404261:	test   al,0xeb
  404263:	retf   0x514c
  404266:	sbb    al,0x3c
  404268:	into   
  404269:	pusha  
  40426a:	add    esp,ebx
  40426c:	test   BYTE PTR [eax],ch
  40426e:	xor    DWORD PTR [ebp+edi*8+0x3ef48c84],ecx
  404275:	jg     0x4042d1
  404277:	xor    al,0xb2
  404279:	inc    ebp
  40427a:	inc    DWORD PTR [esi]
  40427c:	ins    BYTE PTR es:[edi],dx
  40427d:	retf   
  40427e:	pop    DWORD PTR [ebx-0x3c]
  404281:	jge    0x404238
  404283:	fsub   st,st(5)
  404285:	inc    ebp
  404286:	inc    BYTE PTR [esi]
  404288:	mov    esi,0x48386021
  40428d:	push   ds
  40428e:	out    dx,al
  40428f:	stc    
  404290:	cmp    esp,DWORD PTR [edx]
  404292:	dec    esi
  404293:	rol    DWORD PTR [edi],1
  404295:	shl    DWORD PTR [ecx-0x18c30231],cl
  40429b:	jns    0x4042c2
  40429d:	aam    0x33
  40429f:	jmp    0x1418:0xdba5a8c1
  4042a6:	repnz lods al,BYTE PTR ds:[esi]
  4042a8:	mov    dl,cl
  4042aa:	jbe    0x404238
  4042ac:	leave  
  4042ad:	dec    ebx
  4042ae:	loopne 0x4042ec
  4042b0:	mov    ebp,DWORD PTR [eax]
  4042b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b3:	test   al,0x40
  4042b5:	adc    al,0x50
  4042b7:	or     eax,0xd907a107
  4042bc:	nop
  4042bd:	jae    0x404299
  4042bf:	cs cmp dl,dl
  4042c2:	sbb    DWORD PTR [ecx-0x7bab1df3],0x5c6a887e
  4042cc:	imul   al
  4042ce:	shr    DWORD PTR [edx+0x5a],1
  4042d1:	je     0x4042e8
  4042d3:	add    BYTE PTR [esi],ah
  4042d5:	add    BYTE PTR [eax],bh
  4042d7:	cmp    DWORD PTR [ebx],eax
  4042d9:	sbb    BYTE PTR [edx+0x1e5183c3],0x77
  4042e0:	cmp    BYTE PTR [eax-0x37],dh
  4042e3:	and    al,0xa1
  4042e5:	sub    al,0x9b
  4042e7:	cmp    al,0xab
  4042e9:	dec    esp
  4042ea:	and    eax,0xc63a9ae7
  4042ef:	nop
  4042f0:	dec    esi
  4042f1:	jae    0x404278
  4042f3:	mov    edx,0x9d35c26d
  4042f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f9:	pop    es
  4042fa:	ret    0x3dbe
  4042fd:	pop    ds
  4042fe:	xlat   BYTE PTR ds:[ebx]
  4042ff:	pop    es
  404300:	(bad)  [esp+ecx*1+0x1540efa0]
  404307:	sub    al,0xdd
  404309:	(bad)
  40430c:	mov    eax,ds:0xe6aa39d8
  404311:	mov    ebx,0xf426f1ce
  404316:	loopne 0x404368
  404318:	inc    ecx
  404319:	pop    esi
  40431a:	mov    edx,0x4f0798cd
  40431f:	jp     0x404378
  404321:	mov    bl,0x58
  404323:	dec    ebp
  404324:	out    dx,eax
  404325:	mov    al,ds:0x9d609b2a
  40432a:	xchg   esi,eax
  40432b:	jb     0x4042f6
  40432d:	xchg   esi,eax
  40432e:	pop    ebp
  40432f:	or     DWORD PTR [edi],ebx
  404331:	adc    eax,0xa596e3bb
  404336:	jmp    DWORD PTR [edi+0x469a2065]
  40433c:	ret    
  40433d:	mov    esp,0x58919a6
  404342:	bound  ebp,QWORD PTR [eax+0x7a]
  404345:	in     eax,dx
  404346:	and    WORD PTR [eax+eax*4],0x12
  40434b:	lock or al,0xf1
  40434e:	adc    ch,BYTE PTR [bx]
  404351:	jo     0x404356
  404353:	or     eax,0xda0674ab
  404358:	lds    ecx,FWORD PTR [ecx-0x5a]
  40435b:	or     eax,0x7f769c78
  404360:	mov    edi,0x9de4e26
  404365:	push   ebp
  404366:	add    DWORD PTR [esi+edi*4],0xc6e09f59
  40436d:	jg     0x404378
  40436f:	shl    ebx,1
  404371:	ins    BYTE PTR es:[edi],dx
  404372:	jmp    0xa992ec48
  404377:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404379:	ins    DWORD PTR es:[edi],dx
  40437a:	push   edx
  40437b:	jns    0x404367
  40437d:	movq   QWORD PTR [esi],mm4
  404380:	push   0xffffffa8
  404382:	sbb    al,0xe6
  404384:	jl     0x40438e
  404386:	jmp    0xf8bce72e
  40438b:	ins    BYTE PTR es:[edi],dx
  40438c:	jnp    0x404332
  40438e:	push   ds
  40438f:	pop    ebx
  404390:	not    DWORD PTR [edx+0xf]
  404393:	mov    dh,0xe1
  404395:	mov    cl,BYTE PTR [esi-0x6dc54646]
  40439b:	call   0xccb6:0x710f1b9d
  4043a2:	jo     0x4043cd
  4043a4:	dec    esi
  4043a5:	xchg   DWORD PTR [ebx+0x30],esi
  4043a8:	lea    ebx,[edx-0x2efcfa18]
  4043ae:	leave  
  4043af:	neg    BYTE PTR [edx+0x43c9e6ad]
  4043b5:	xchg   ebx,eax
  4043b6:	out    0xd8,eax
  4043b8:	pop    edi
  4043b9:	xchg   ecx,eax
  4043ba:	or     esi,DWORD PTR [ebx+0x786105c1]
  4043c0:	mov    ebp,0x72ba1aca
  4043c5:	retf   0x83e2
  4043c8:	sbb    al,0x65
  4043ca:	jmp    0x404378
  4043cc:	aam    0xbb
  4043ce:	sub    edx,eax
  4043d0:	ins    BYTE PTR es:[edi],dx
  4043d1:	sub    ch,dl
  4043d3:	jle    0x40435e
  4043d5:	xchg   al,dh
  4043d7:	cmp    al,0xdd
  4043d9:	and    bl,BYTE PTR [ecx]
  4043db:	out    0x14,al
  4043dd:	hlt    
  4043de:	cld    
  4043df:	xor    dl,BYTE PTR [edx]
  4043e1:	aam    0xab
  4043e3:	cmp    al,0x1c
  4043e5:	sbb    ecx,DWORD PTR [ebx+0x36]
  4043e8:	fisub  WORD PTR [esi]
  4043ea:	loope  0x40440f
  4043ec:	imul   ebx,DWORD PTR [ebx-0x58],0x566efa7b
  4043f3:	mov    edx,0x7c827d27
  4043f8:	idiv   dl
  4043fa:	ret    
  4043fb:	inc    edx
  4043fc:	sub    edi,DWORD PTR [eax+0xc7b022c]
  404402:	les    eax,FWORD PTR [edx+0x2]
  404405:	jne    0x4043e7
  404407:	add    DWORD PTR [esi+0x6fff4ee8],0x26
  40440e:	mov    ah,0x1
  404410:	loopne 0x4043e9
  404412:	(bad)  
  404413:	pop    eax
  404414:	clc    
  404415:	pop    esi
  404416:	xchg   edx,eax
  404417:	outs   dx,DWORD PTR ds:[esi]
  404418:	getsec 
  40441a:	xlat   BYTE PTR ds:[ebx]
  40441b:	jno    0x404416
  40441d:	cli    
  40441e:	dec    edi
  40441f:	in     al,dx
  404420:	call   FWORD PTR [ebp+eiz*8+0x7072a3cd]
  404427:	mov    cl,BYTE PTR [esi]
  404429:	imul   esp,edi,0xffffffd6
  40442c:	push   ebp
  40442d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40442e:	jnp    0x404403
  404430:	pop    ss
  404431:	and    ecx,DWORD PTR [esi+0x33]
  404434:	ds call 0xee8766a3
  40443a:	dec    ebx
  40443b:	dec    dl
  40443d:	xor    BYTE PTR [esi],dh
  40443f:	ja     0x40448e
  404441:	add    esi,DWORD PTR [ebp-0xb]
  404444:	cmp    DWORD PTR [ebx-0x77b1c157],0xffffffa4
  40444b:	or     DWORD PTR [ebx+eiz*4-0x7d0faff4],edx
  404452:	stos   DWORD PTR es:[edi],eax
  404453:	sbb    BYTE PTR [edi+esi*4+0x2290bc36],al
  40445a:	mov    WORD PTR [ecx],cs
  40445c:	(bad)  [eax-0x7f06dfd7]
  404462:	cmp    DWORD PTR [ebp+0x7b],ebx
  404465:	mov    edi,ecx
  404467:	xor    bh,BYTE PTR [ecx]
  404469:	push   0xffffff81
  40446b:	fsub   st(6),st
  40446d:	rsm    
  40446f:	cmp    dl,bh
  404471:	xchg   ebx,eax
  404472:	outs   dx,DWORD PTR ds:[esi]
  404473:	or     al,0x30
  404475:	add    eax,0xb87f6ea8
  40447a:	push   ebp
  40447b:	shl    BYTE PTR [ecx],cl
  40447d:	pop    esi
  40447e:	mov    ebx,DWORD PTR [eax]
  404480:	xor    eax,0x2acb62e7
  404485:	aaa    
  404486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404487:	popf   
  404488:	(bad)  
  40448c:	or     edi,DWORD PTR [ebx-0x4b]
  40448f:	je     0x404469
  404491:	shr    DWORD PTR ds:0xee831188,0x38
  404498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404499:	mov    edx,0xe039c941
  40449e:	jmp    0x9f0941e6
  4044a3:	jg     0x4044ec
  4044a5:	mov    edx,0x4b25d4d2
  4044aa:	cmp    al,0x65
  4044ac:	icebp  
  4044ad:	push   eax
  4044ae:	xor    DWORD PTR [edi+0x29],eax
  4044b1:	inc    edi
  4044b2:	inc    edi
  4044b3:	cmc    
  4044b4:	sub    bl,BYTE PTR [ebx+eiz*1+0x303168c7]
  4044bb:	and    edi,DWORD PTR [esi+ebp*2+0x3e077210]
  4044c2:	mov    dh,0xdc
  4044c4:	xchg   edi,eax
  4044c5:	mov    ecx,0x8a9c41e
  4044ca:	ss out dx,eax
  4044cc:	data16 lahf 
  4044ce:	xor    ecx,DWORD PTR [edi+0x8146f72]
  4044d4:	fild   DWORD PTR [edx-0x45]
  4044d7:	pop    es
  4044d8:	icebp  
  4044d9:	xchg   ebp,eax
  4044da:	fild   QWORD PTR [ebx]
  4044dc:	test   al,0x28
  4044de:	sub    cl,BYTE PTR [ebx]
  4044e0:	mov    edx,0xb856c87a
  4044e5:	out    dx,eax
  4044e6:	sub    BYTE PTR [edx-0x4dc89f01],0xf1
  4044ed:	dec    esi
  4044ee:	ins    DWORD PTR es:[edi],dx
  4044ef:	int    0x81
  4044f1:	adc    eax,DWORD PTR [eax-0x48]
  4044f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f5:	mov    esp,0xd3707315
  4044fa:	xor    BYTE PTR [ebx-0x46],bh
  4044fd:	sbb    cl,BYTE PTR [ebx-0x51]
  404500:	fnstenv [edx-0x2f]
  404503:	cmp    ebx,DWORD PTR [ecx+0x64]
  404506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404507:	mov    dh,0xce
  404509:	clc    
  40450a:	sti    
  40450b:	jg     0x4044ea
  40450d:	loop   0x404504
  40450f:	retf   
  404510:	push   ebp
  404511:	je     0x40454a
  404513:	cld    
  404514:	jge    0x40450a
  404516:	sbb    al,0xfe
  404518:	inc    esp
  404519:	(bad)  
  40451a:	call   0xfe21f38b
  40451f:	xor    BYTE PTR [esi+0x31],bl
  404522:	mov    ebp,0x1d42bba9
  404527:	push   ebx
  404528:	xchg   edi,eax
  404529:	jne    0x404592
  40452b:	mov    al,ds:0xb641c2bd
  404530:	ret    
  404531:	mov    esp,0xe38eb410
  404536:	xor    al,0x8a
  404538:	call   FWORD PTR [edi-0x7b]
  40453b:	sbb    ebp,edx
  40453d:	push   0xb76601bb
  404542:	jb     0x4044dc
  404544:	mov    ds:0x60bb182a,al
  404549:	xchg   edx,eax
  40454a:	popw   es
  40454c:	les    ebx,FWORD PTR [eax+0x770cf4a9]
  404552:	xchg   DWORD PTR [ebp-0x64],ebp
  404555:	xchg   edx,eax
  404556:	inc    DWORD PTR [edx-0x21]
  404559:	mov    edi,0x9e4629da
  40455e:	cld    
  40455f:	xchg   di,ax
  404561:	test   DWORD PTR [esi+0x64],ebp
  404564:	sub    DWORD PTR [eax+esi*4-0x29],edi
  404568:	pop    esp
  404569:	mov    cl,0xe7
  40456b:	cld    
  40456c:	hlt    
  40456d:	sbb    DWORD PTR [ecx],0xffffffb2
  404570:	xchg   edx,eax
  404571:	loopne 0x4045b0
  404573:	cwde   
  404574:	test   eax,0xa54cee83
  404579:	(bad)  [ebp-0x17802ece]
  40457f:	pop    esi
  404580:	push   esp
  404581:	jns    0x4045c5
  404583:	out    dx,eax
  404584:	shr    ah,1
  404586:	xchg   esp,eax
  404587:	scas   eax,DWORD PTR es:[edi]
  404588:	cmc    
  404589:	scas   eax,DWORD PTR es:[edi]
  40458a:	(bad)  
  40458b:	mov    WORD PTR [edx-0xe],ss
  40458e:	div    DWORD PTR [edx+0x78550f7]
  404594:	dec    edi
  404595:	pop    edx
  404596:	int3   
  404597:	fwait
  404598:	fwait
  404599:	in     eax,dx
  40459a:	not    DWORD PTR [ebx-0x49755fe0]
  4045a0:	sub    eax,0x201832ab
  4045a5:	xor    ch,dh
  4045a7:	pop    es
  4045a8:	sbb    ch,ah
  4045aa:	lahf   
  4045ab:	in     eax,0xb4
  4045ad:	(bad)
  4045b0:	cmp    al,0x62
  4045b2:	sub    DWORD PTR [edi],edi
  4045b4:	out    dx,al
  4045b5:	mov    dh,0x8d
  4045b7:	arpl   dx,bp
  4045b9:	xor    bl,BYTE PTR [eax]
  4045bb:	sbb    BYTE PTR [ebp-0x7b],cl
  4045be:	out    0x42,al
  4045c0:	add    al,0x93
  4045c2:	idiv   eax
  4045c4:	push   DWORD PTR [ebp+0x22]
  4045c7:	jne    0xf8f6d896
  4045cd:	fimul  WORD PTR [edi-0x78232239]
  4045d3:	retf   0xad09
  4045d6:	test   DWORD PTR [ebx-0x63],0x814cd301
  4045dd:	aas    
  4045de:	fld    TBYTE PTR [edi]
  4045e0:	pop    esi
  4045e1:	mov    al,0xd8
  4045e3:	int3   
  4045e4:	pop    esi
  4045e5:	inc    edi
  4045e6:	adc    eax,0x38603d76
  4045eb:	sub    eax,DWORD PTR [edx-0x4f]
  4045ee:	mov    gs,WORD PTR [edi-0x1b]
  4045f1:	mov    ds:0xb59ae25a,eax
  4045f6:	mov    ebp,0x6dcf9c36
  4045fb:	ins    DWORD PTR es:[edi],dx
  4045fc:	cmp    dh,BYTE PTR [edi+0x17ea8ded]
  404602:	mov    esi,0x996d40f0
  404607:	scas   eax,DWORD PTR es:[edi]
  404608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404609:	mov    dh,0x25
  40460b:	mov    ds:0x18ec3b1a,eax
  404610:	adc    eax,0x6eb2a8b
  404615:	je     0x4045a6
  404617:	jo     0x404667
  404619:	mov    bl,0xba
  40461b:	out    0x22,al
  40461d:	cmc    
  40461e:	inc    eax
  40461f:	mov    bh,0xa0
  404621:	jo     0x4045e1
  404623:	push   ss
  404624:	in     al,0x84
  404626:	sbb    DWORD PTR [esi],edi
  404628:	and    al,0xa5
  40462a:	pop    edx
  40462b:	xor    BYTE PTR [esi-0x6681954],dl
  404631:	inc    edi
  404632:	inc    esp
  404633:	dec    eax
  404634:	jo     0x404637
  404636:	lahf   
  404637:	lock icebp 
  404639:	sbb    dh,bl
  40463b:	pop    ebx
  40463c:	aam    0x1d
  40463e:	or     DWORD PTR [esi],esp
  404640:	nop
  404641:	ror    BYTE PTR [eax+0x13b37a9d],0x3e
  404648:	adc    eax,0x21fbf59d
  40464d:	cld    
  40464e:	and    bh,0xdf
  404651:	jg     0x404641
  404653:	push   cs
  404654:	mov    ah,0x77
  404656:	cmp    eax,0x958a4999
  40465b:	pop    ds
  40465c:	mov    bl,bh
  40465e:	loope  0x404626
  404660:	xchg   ax,ax
  404662:	test   al,0x9a
  404664:	mov    esi,0xe3250b1a
  404669:	and    ecx,DWORD PTR [edi-0x148759e2]
  40466f:	retf   
  404670:	push   0x4e
  404672:	mov    eax,ds:0x957b6649
  404677:	and    DWORD PTR [ecx+edi*4+0x274efdd],eax
  40467e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467f:	push   cs
  404680:	add    al,0x1d
  404682:	clc    
  404683:	enter  0x317b,0xe3
  404687:	xchg   edi,eax
  404688:	inc    ebp
  404689:	outs   dx,BYTE PTR ds:[esi]
  40468a:	aaa    
  40468b:	mov    eax,ds:0x4ff15beb
  404690:	mov    bh,0x93
  404692:	loop   0x404696
  404694:	xor    DWORD PTR [ecx],eax
  404696:	lock mov bh,0xdd
  404699:	pop    ecx
  40469a:	daa    
  40469b:	pop    edi
  40469c:	rcpps  xmm3,xmm6
  40469f:	xchg   ebp,eax
  4046a0:	dec    ecx
  4046a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a2:	repz (bad) 
  4046a4:	sub    dh,ah
  4046a6:	and    eax,0xc32cf4b5
  4046ab:	sbb    bh,BYTE PTR [edx-0x15]
  4046ae:	mov    al,0x3b
  4046b0:	adc    al,0x2
  4046b2:	(bad)  
  4046b3:	sti    
  4046b4:	scas   al,BYTE PTR es:[edi]
  4046b5:	imul   ebx,DWORD PTR [edx],0x50
  4046b8:	leave  
  4046b9:	cdq    
  4046ba:	cmp    BYTE PTR [edi+0xadcd355],0x46
  4046c1:	inc    esp
  4046c2:	sbb    al,0x8c
  4046c4:	pop    ds
  4046c5:	mov    cs,WORD PTR ds:0xb049e191
  4046cb:	fwait
  4046cc:	aas    
  4046cd:	cmc    
  4046ce:	sbb    eax,0x3109ec6d
  4046d3:	lahf   
  4046d4:	icebp  
  4046d5:	ja     0x40472a
  4046d7:	mov    dl,BYTE PTR [edx]
  4046d9:	push   0x77975305
  4046de:	in     eax,dx
  4046df:	jp     0x40471d
  4046e1:	xchg   edx,eax
  4046e2:	sbb    ebp,DWORD PTR [ebp+0x774730c5]
  4046e8:	and    al,0xbd
  4046ea:	sbb    esp,eax
  4046ec:	cmp    eax,0x4c2dd669
  4046f1:	and    BYTE PTR [ecx],ch
  4046f3:	xor    esp,edi
  4046f5:	ror    BYTE PTR [eax],1
  4046f7:	cld    
  4046f8:	jb     0x404749
  4046fa:	rcl    BYTE PTR [edi-0x77],cl
  4046fd:	cmp    al,dh
  4046ff:	pop    edi
  404700:	sbb    al,0x66
  404702:	int    0xba
  404704:	loopne 0x4046a0
  404706:	and    DWORD PTR [ecx-0xd0e73ae],esp
  40470c:	xchg   esi,eax
  40470d:	pop    eax
  40470e:	outs   dx,BYTE PTR ds:[esi]
  40470f:	xchg   esp,eax
  404710:	mov    DWORD PTR [ebp+0x6b],esi
  404713:	int    0x3f
  404715:	push   esi
  404716:	retf   
  404717:	icebp  
  404718:	les    esp,FWORD PTR [ebx]
  40471a:	retf   
  40471b:	lea    esi,[esi-0x278af699]
  404721:	cwde   
  404722:	shr    BYTE PTR [edi],1
  404724:	in     eax,0x3a
  404726:	out    dx,eax
  404727:	xchg   DWORD PTR [edx],eax
  404729:	in     eax,dx
  40472a:	adc    bl,BYTE PTR [ebp+0x1c424516]
  404730:	push   ecx
  404731:	cmp    al,0xe2
  404733:	cdq    
  404734:	push   0xffffffdf
  404736:	xchg   ebp,eax
  404737:	sub    ebx,edi
  404739:	imul   ebx,DWORD PTR ds:0xabd7b440,0xdc2318d3
  404743:	pushf  
  404744:	push   ebx
  404745:	mov    DWORD PTR [esi+0x2e],ecx
  404748:	shr    DWORD PTR [eax-0x20602946],1
  40474e:	fwait
  40474f:	sbb    BYTE PTR [ebx+0x6ef65bd],bh
  404755:	outs   dx,BYTE PTR ds:[esi]
  404756:	and    ebx,DWORD PTR [edi+0x7e]
  404759:	std    
  40475a:	xor    BYTE PTR [ebx+0x1de5dc22],al
  404760:	fistp  DWORD PTR [edx-0x30edb045]
  404766:	lods   al,BYTE PTR ds:[esi]
  404767:	mov    dl,0x81
  404769:	jmp    0x5169:0x8f1bbc1c
  404770:	cli    
  404771:	sti    
  404772:	add    al,0x3f
  404774:	sbb    BYTE PTR [edx],ch
  404776:	leave  
  404777:	mov    al,0xe0
  404779:	aas    
  40477a:	xor    al,0xa9
  40477c:	mov    eax,eax
  40477e:	inc    ebx
  40477f:	dec    ecx
  404780:	or     dl,cl
  404782:	fidiv  WORD PTR [edx-0x1b]
  404785:	ficomp WORD PTR [eax+edi*1+0x5a]
  404789:	cmp    ch,0xda
  40478c:	std    
  40478d:	push   0x50
  40478f:	stc    
  404790:	(bad)  
  404791:	aaa    
  404792:	mov    bl,ah
  404794:	mov    ebp,0xc7bc8cfe
  404799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479a:	fadd   QWORD PTR [ebp-0x7b]
  40479d:	add    BYTE PTR [ebp+0x72],dl
  4047a0:	std    
  4047a1:	or     eax,0xccb5c788
  4047a6:	xchg   ebx,eax
  4047a7:	mov    BYTE PTR [ecx+ecx*2-0xe705ba1],cl
  4047ae:	push   ds
  4047af:	xor    eax,0xab151361
  4047b4:	or     eax,DWORD PTR [edi-0x27]
  4047b7:	lahf   
  4047b8:	retf   0xb79e
  4047bb:	aaa    
  4047bc:	ret    
  4047bd:	fcom   QWORD PTR [esi-0x51]
  4047c0:	jb     0x4047e9
  4047c2:	inc    edx
  4047c3:	fisttp WORD PTR [ebx-0x63]
  4047c6:	lahf   
  4047c7:	fsubr  QWORD PTR [edx+ebp*1]
  4047ca:	dec    ebx
  4047cb:	adc    BYTE PTR [esi],0x91
  4047ce:	rcr    dl,0x90
  4047d1:	std    
  4047d2:	xchg   esi,eax
  4047d3:	into   
  4047d4:	cmp    BYTE PTR [esi-0x5c],0x8e
  4047d8:	cmp    cl,dl
  4047da:	xor    edx,DWORD PTR [edi+0x28]
  4047dd:	push   esp
  4047de:	add    al,0x37
  4047e0:	into   
  4047e1:	inc    edx
  4047e2:	cmc    
  4047e3:	xor    edx,DWORD PTR [esi]
  4047e5:	les    eax,FWORD PTR [ebp+0xcf01835]
  4047eb:	xchg   esp,eax
  4047ec:	(bad)  
  4047ed:	(bad)  
  4047ee:	cmc    
  4047ef:	icebp  
  4047f0:	shl    DWORD PTR [ecx-0x4c],0x38
  4047f4:	dec    ebp
  4047f5:	mov    ds:0xa4441c4a,al
  4047fa:	pushf  
  4047fb:	adc    eax,0x5a0ff043
  404800:	repz lock into 
  404803:	scas   eax,DWORD PTR es:[edi]
  404804:	jmp    0xb79c:0xc6fd5171
  40480b:	fldenv [eax]
  40480d:	jmp    0x40480a
  40480f:	xchg   ch,al
  404811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404812:	call   0x3cb:0xfd25e58e
  404819:	cdq    
  40481a:	jne    0x404879
  40481c:	pop    ds
  40481d:	ret    
  40481e:	retf   
  40481f:	xchg   edx,eax
  404820:	imul   ebx,DWORD PTR [ecx],0xfffffff3
  404823:	out    0x4a,al
  404825:	je     0x4047f8
  404827:	fsubr  DWORD PTR [esi]
  404829:	test   al,0xfe
  40482b:	jb     0x4047b2
  40482d:	loop   0x404812
  40482f:	add    eax,0xd7c84423
  404834:	ret    
  404835:	imul   eax,DWORD PTR [edx],0x71
  404838:	jbe    0x404804
  40483a:	bound  edx,QWORD PTR [edi-0x3b8936f2]
  404840:	jnp    0x4047c2
  404842:	das    
  404843:	mov    ebp,0x667d84f9
  404848:	sub    al,0x6f
  40484a:	dec    esi
  40484b:	adc    ch,BYTE PTR [ebx]
  40484d:	inc    esi
  40484e:	outs   dx,BYTE PTR ds:[esi]
  40484f:	add    BYTE PTR [ebx+eiz*8],ch
  404852:	jns    0x40480b
  404854:	xchg   edx,eax
  404855:	push   ebp
  404856:	loop   0x40481e
  404858:	in     eax,0xc6
  40485a:	jle    0x4048d3
  40485c:	stc    
  40485d:	pop    edi
  40485e:	inc    ebx
  40485f:	(bad)  
  404860:	mov    edx,0xdb4135f4
  404865:	add    esi,esi
  404867:	jge    0x40487a
  404869:	lds    eax,FWORD PTR [ebp-0x80]
  40486c:	fsubr  st(6),st
  40486e:	(bad)  
  40486f:	sbb    eax,0x6fc3d81e
  404874:	xchg   ebp,eax
  404875:	popa   
  404876:	ret    
  404877:	xchg   BYTE PTR [ecx],dl
  404879:	adc    al,0xef
  40487b:	xor    eax,0xdbe22790
  404880:	and    al,0xfd
  404882:	into   
  404883:	loop   0x404882
  404885:	push   DWORD PTR [edx-0x1b76599e]
  40488b:	retf   
  40488c:	(bad)  
  40488d:	sbb    BYTE PTR [esi-0x185b3581],0xe1
  404894:	push   ebx
  404895:	cmp    al,0x6
  404897:	jp     0x4048f9
  404899:	and    ebx,0xffffffd4
  40489c:	pop    eax
  40489d:	(bad)  
  40489f:	cdq    
  4048a0:	or     DWORD PTR [edx+0x3eea445],eax
  4048a6:	push   esp
  4048a7:	mov    dh,0x52
  4048a9:	xor    al,0xe6
  4048ab:	std    
  4048ac:	into   
  4048ad:	mov    ss,eax
  4048af:	dec    ecx
  4048b0:	push   es
  4048b1:	(bad)  
  4048b3:	sbb    ah,bl
  4048b5:	sbb    eax,0x8e71f40e
  4048ba:	mov    ch,0x99
  4048bc:	jbe    0x404877
  4048be:	xor    edx,edx
  4048c0:	imul   edi,DWORD PTR [ebx],0x4401f5a0
  4048c6:	sub    BYTE PTR [eax-0x76617665],ch
  4048cc:	xchg   esi,eax
  4048cd:	sbb    eax,DWORD PTR [edx+0x1f45a681]
  4048d3:	fbld   TBYTE PTR ds:0x1cee524f
  4048d9:	es (bad) 
  4048dc:	fbld   TBYTE PTR [esi-0x59dd6199]
  4048e2:	loope  0x40490c
  4048e4:	cmovp  eax,eax
  4048e7:	dec    BYTE PTR [edx-0x3d345794]
  4048ed:	cmp    esp,0x84c55345
  4048f3:	and    DWORD PTR [ebx+0x1d60dc17],0x6dbcd662
  4048fd:	xor    al,0xbb
  4048ff:	push   eax
  404900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404901:	cli    
  404902:	sbb    BYTE PTR [esi-0x26],dl
  404905:	div    BYTE PTR [esi+0x341b5455]
  40490b:	cs (bad) 
  40490d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490e:	lock mov eax,0x675581b2
  404914:	rcr    DWORD PTR [esi+0x1b],0xa
  404918:	sahf   
  404919:	dec    esi
  40491a:	jg     0x40495f
  40491c:	xchg   BYTE PTR ds:[edx-0x1a9d12d7],cl
  404923:	call   0xbd17:0xaf98f800
  40492a:	in     al,0x16
  40492c:	outs   dx,BYTE PTR ds:[esi]
  40492d:	ffreep st(7)
  40492f:	loop   0x40495b
  404931:	push   cs
  404932:	mov    dl,0x1c
  404934:	sbb    edx,DWORD PTR [eax+ecx*2+0x23]
  404938:	jno    0x4048f1
  40493a:	cmp    edi,DWORD PTR ss:[ecx]
  40493d:	xchg   ecx,eax
  40493e:	aam    0x74
  404940:	inc    ebp
  404941:	ret    
  404942:	and    DWORD PTR [edx-0x211718fc],ebp
  404948:	inc    eax
  404949:	outs   dx,DWORD PTR ds:[esi]
  40494a:	enter  0xbd87,0x8
  40494e:	push   esi
  40494f:	push   edi
  404950:	(bad)  
  404951:	loope  0x40490f
  404953:	in     eax,dx
  404954:	and    al,0xd
  404956:	cdq    
  404957:	pcmpeqw mm7,mm2
  40495a:	cmp    DWORD PTR [edi],ebx
  40495c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40495d:	mov    ebx,ss
  40495f:	sub    eax,0xb005a480
  404964:	dec    ebx
  404965:	adc    al,0xda
  404967:	imul   esi,DWORD PTR [edi+0x75d1ea87],0x20840b7e
  404971:	inc    ecx
  404972:	jo     0x4049cd
  404974:	bound  ecx,QWORD PTR [ebx+ebx*4-0x4a4ab181]
  40497b:	push   ecx
  40497c:	(bad)  
  40497d:	sub    DWORD PTR [esi],edx
  40497f:	sti    
  404980:	or     ebx,esi
  404982:	xchg   esi,eax
  404983:	and    eax,0x707eac6b
  404988:	call   0x69f9:0xad84dc71
  40498f:	jnp    0x40493a
  404991:	outs   dx,BYTE PTR ds:[esi]
  404992:	pop    ebx
  404993:	cmp    DWORD PTR [eax+0x74],edi
  404996:	mov    cl,0x23
  404998:	mov    dh,0x50
  40499a:	mov    esi,0xecdcf96
  40499f:	xor    BYTE PTR [eax],0x51
  4049a2:	fldln2 
  4049a4:	mov    DWORD PTR [edx-0xa37aa77],edi
  4049aa:	adc    bh,BYTE PTR [ecx+ebx*1]
  4049ad:	mov    eax,ds:0x3091ace3
  4049b2:	das    
  4049b3:	outs   dx,BYTE PTR ds:[esi]
  4049b4:	push   ds
  4049b5:	push   ebx
  4049b6:	in     eax,0x77
  4049b8:	imul   ebx,DWORD PTR [eax+0xd],0xe74df4ff
  4049bf:	ja     0x4049ce
  4049c1:	inc    ebp
  4049c2:	pusha  
  4049c3:	rcr    DWORD PTR [ebx],cl
  4049c5:	or     edi,ebp
  4049c7:	aad    0x71
  4049c9:	ins    BYTE PTR es:[edi],dx
  4049ca:	adc    BYTE PTR [ecx-0x1c],al
  4049cd:	pusha  
  4049ce:	inc    esp
  4049cf:	loope  0x404a12
  4049d1:	jle    0x404a4e
  4049d3:	adc    al,0x0
  4049d5:	sub    BYTE PTR [edi-0x55],al
  4049d8:	push   cs
  4049d9:	mov    eax,ds:0xd64d9127
  4049de:	jae    0x404980
  4049e0:	pop    ebx
  4049e1:	clc    
  4049e2:	dec    esp
  4049e3:	pop    ss
  4049e4:	(bad)  
  4049e5:	lea    esi,[edi-0x62]
  4049e8:	mov    dl,0xbb
  4049ea:	scas   al,BYTE PTR es:[edi]
  4049eb:	sub    al,0x3
  4049ed:	cmp    al,BYTE PTR [ecx-0x6d5c0655]
  4049f3:	sub    DWORD PTR [esi-0x632cd04d],edi
  4049f9:	cmp    esp,DWORD PTR [edx+0x45660ac9]
  4049ff:	sub    BYTE PTR [ebx],cl
  404a01:	leave  
  404a02:	ss jmp 0x9bcc:0x1f4eec49
  404a0a:	pop    edx
  404a0b:	xchg   esi,eax
  404a0c:	shl    DWORD PTR [edi],0x18
  404a0f:	inc    ebx
  404a10:	mov    edx,gs
  404a12:	adc    esp,ebx
  404a14:	call   0x5e1:0x55b29c71
  404a1b:	and    eax,0x24a53a77
  404a20:	push   esp
  404a21:	mov    ds:0xfa88acc1,eax
  404a26:	in     eax,dx
  404a27:	test   DWORD PTR [ecx+eiz*1-0x12],0xa6990b17
  404a2f:	test   al,dl
  404a31:	mov    ebx,0x1fa7c08b
  404a36:	imul   BYTE PTR [ecx]
  404a38:	sub    DWORD PTR [ecx+0x6766c7e9],eax
  404a3e:	out    dx,al
  404a3f:	dec    esi
  404a40:	jp     0x404a47
  404a42:	dec    ebp
  404a43:	xchg   esp,eax
  404a44:	aam    0xd0
  404a46:	mov    dh,0xd9
  404a48:	mov    ?,ecx
  404a4a:	sub    bh,bh
  404a4c:	push   ecx
  404a4d:	jns    0x4049f0
  404a4f:	aaa    
  404a50:	test   DWORD PTR [ebx+esi*8],edx
  404a53:	inc    esp
  404a54:	and    eax,0x52346c4f
  404a59:	push   edi
  404a5a:	mov    DWORD PTR [ecx+ebp*2-0x24],0x1f10fefc
  404a62:	adc    DWORD PTR [edx],eax
  404a64:	jecxz  0x404a3e
  404a66:	sbb    ah,BYTE PTR [eax-0x5b815a8]
  404a6c:	dec    ebp
  404a6d:	push   ss
  404a6e:	dec    ebp
  404a6f:	leave  
  404a70:	pop    DWORD PTR [ecx-0x4111846a]
  404a76:	mov    ah,0xb2
  404a78:	sahf   
  404a79:	test   eax,0xc50d8ba0
  404a7e:	mov    ah,0xe6
  404a80:	dec    esi
  404a81:	bound  esp,QWORD PTR [esi+0x4975068f]
  404a87:	or     eax,0xfa516d8
  404a8c:	hlt    
  404a8d:	test   al,0xf6
  404a8f:	lea    edx,[edx+0x1597db88]
  404a95:	lods   al,BYTE PTR ds:[esi]
  404a96:	or     esi,ecx
  404a98:	mov    dl,0x63
  404a9a:	jnp    0x404a74
  404a9c:	pop    es
  404a9d:	rcl    BYTE PTR [edx+edi*2+0x3c0eab28],1
  404aa4:	rol    DWORD PTR [esi+0x6e553638],cl
  404aaa:	xor    eax,0x33462e9c
  404aaf:	es out dx,al
  404ab1:	mov    eax,ds:0xaf12ac64
  404ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab7:	(bad)  
  404ab8:	iret   
  404ab9:	pop    ebx
  404aba:	mov    al,0x74
  404abc:	(bad)  
  404abd:	inc    ebx
  404abe:	mov    eax,ds:0xb88480f1
  404ac3:	jo     0x404a68
  404ac5:	loop   0x404a76
  404ac7:	outs   dx,DWORD PTR ds:[esi]
  404ac8:	cmp    al,0xb7
  404aca:	jae    0x404b14
  404acc:	scas   al,BYTE PTR es:[edi]
  404acd:	lea    ebx,[esi-0x513d4a0f]
  404ad3:	pop    edi
  404ad4:	push   ecx
  404ad5:	loop   0x404b2f
  404ad7:	jb     0x404b4e
  404ad9:	inc    ebp
  404ada:	dec    edi
  404adb:	cli    
  404adc:	push   es
  404add:	dec    ebp
  404ade:	mov    esp,0x8133497d
  404ae3:	stc    
  404ae4:	jb     0x404b13
  404ae6:	aaa    
  404ae7:	push   ecx
  404ae8:	xchg   esi,eax
  404ae9:	cdq    
  404aea:	dec    ebp
  404aeb:	retf   
  404aec:	pushf  
  404aed:	mov    edx,?
  404aef:	imul   DWORD PTR [eax-0x16]
  404af2:	mov    ch,0x76
  404af4:	xor    eax,0x42a8fead
  404af9:	je     0x404b13
  404afb:	pop    ebp
  404afc:	xor    DWORD PTR [edi-0x1dfdcdec],ecx
  404b02:	add    DWORD PTR [edx+0x26],ecx
  404b05:	xor    eax,0x22061da
  404b0a:	sbb    bh,BYTE PTR [esi+eiz*4-0x7826766d]
  404b11:	dec    esi
  404b12:	cdq    
  404b13:	cmp    edi,ebp
  404b15:	adc    ecx,DWORD PTR [edx]
  404b17:	fsubr  QWORD PTR [edi+0x21]
  404b1a:	xchg   ecx,eax
  404b1b:	(bad)  
  404b1c:	pusha  
  404b1d:	push   ecx
  404b1e:	mov    ecx,0x3bf75c33
  404b23:	ret    0x498d
  404b26:	sub    al,0xba
  404b28:	mov    esi,DWORD PTR [esi]
  404b2a:	retf   0xc922
  404b2d:	pushf  
  404b2e:	in     eax,0x40
  404b30:	rcl    BYTE PTR [ecx+0x58e00a6],cl
  404b36:	ds push es
  404b38:	dec    ebp
  404b39:	inc    edi
  404b3a:	add    bh,BYTE PTR ds:0x25274f5
  404b40:	pop    eax
  404b41:	sub    eax,0xda7775fe
  404b46:	outs   dx,DWORD PTR ds:[esi]
  404b47:	adc    DWORD PTR ds:0xa11fc8ec,ecx
  404b4d:	out    0xa1,al
  404b4f:	sbb    BYTE PTR [edi],dl
  404b51:	stos   DWORD PTR es:[edi],eax
  404b52:	mov    al,0xe0
  404b54:	push   cs
  404b55:	hlt    
  404b56:	inc    edx
  404b57:	push   0x27ea038f
  404b5c:	mov    dh,0x12
  404b5e:	shl    DWORD PTR [ebx],1
  404b60:	xchg   ecx,eax
  404b61:	sub    DWORD PTR [ebp+0x23a2fae8],ebp
  404b67:	std    
  404b68:	imul   edx,DWORD PTR [eax],0xb343ef8c
  404b6e:	xor    edi,0x57
  404b71:	or     DWORD PTR [edi],edi
  404b73:	jg     0x404b5e
  404b75:	xor    eax,0x7d58f8e6
  404b7a:	or     BYTE PTR [edi+0x73abb14c],dh
  404b80:	add    eax,0x1ae31202
  404b85:	inc    esi
  404b86:	in     eax,0x60
  404b88:	jg     0x404bbb
  404b8a:	pop    edx
  404b8b:	or     ebx,0x5feaa5d9
  404b91:	xchg   ecx,eax
  404b92:	std    
  404b93:	aam    0xec
  404b95:	push   ds
  404b96:	mov    al,BYTE PTR [edi]
  404b98:	lock and bl,BYTE PTR [esi+0x7e]
  404b9c:	enter  0xfc17,0x34
  404ba0:	out    dx,al
  404ba1:	iret   
  404ba2:	test   eax,0xea8c576b
  404ba7:	jecxz  0x404b71
  404ba9:	sbb    DWORD PTR [edi],esi
  404bab:	inc    esi
  404bac:	sbb    eax,0xdf5c146b
  404bb1:	push   ebx
  404bb2:	imul   esi,esp,0xffffffc1
  404bb5:	pushf  
  404bb6:	push   esp
  404bb7:	aaa    
  404bb8:	xlat   BYTE PTR ds:[ebx]
  404bb9:	sbb    BYTE PTR [ecx-0x7a2b6a31],ch
  404bbf:	lock adc al,0x11
  404bc2:	hlt    
  404bc3:	sub    ch,ah
  404bc5:	nop
  404bc6:	adc    ebp,edi
  404bc8:	test   DWORD PTR [edx+0x1d],edi
  404bcb:	dec    eax
  404bcc:	xchg   esp,eax
  404bcd:	push   ebp
  404bce:	out    dx,eax
  404bcf:	(bad)  
  404bd0:	or     al,0x7e
  404bd2:	mov    esp,0x29be6074
  404bd7:	mov    edi,0x165033b9
  404bdd:	sbb    bl,al
  404bdf:	fsub   QWORD PTR [ebp+0x5a]
  404be2:	(bad)  
  404be3:	mov    esi,0x42083019
  404be8:	bound  edi,QWORD PTR [ebp-0x5e]
  404beb:	push   edi
  404bec:	adc    al,0x13
  404bee:	in     al,0xce
  404bf0:	ror    DWORD PTR [edi],cl
  404bf2:	or     DWORD PTR [ebp+eiz*2+0x4e5120e1],ebx
  404bf9:	xor    eax,0x94323355
  404bfe:	in     eax,dx
  404bff:	fnstsw WORD PTR [ebx]
  404c01:	shr    BYTE PTR [eax-0x451b7fd5],cl
  404c07:	jmp    0xda72:0x6997d8f5
  404c0e:	sub    al,0xe8
  404c10:	push   ebx
  404c11:	dec    esp
  404c12:	jns    0x404c05
  404c14:	int3   
  404c15:	ja     0x404c32
  404c17:	jo     0x404c25
  404c19:	scas   al,BYTE PTR es:[edi]
  404c1a:	sbb    dl,BYTE PTR [eax]
  404c1c:	fdivr  QWORD PTR [edx-0x55]
  404c1f:	scas   al,BYTE PTR es:[edi]
  404c20:	pop    esi
  404c21:	dec    edx
  404c22:	push   edx
  404c23:	lds    eax,FWORD PTR [ebp+0x455e6e3]
  404c29:	push   esi
  404c2a:	fisubr WORD PTR [edi-0x27b348e3]
  404c30:	jb     0x404c6b
  404c32:	fbld   TBYTE PTR [ebx+0x7cce30b0]
  404c38:	loopne 0x404c04
  404c3a:	rol    BYTE PTR [eax],1
  404c3c:	sti    
  404c3d:	cli    
  404c3e:	sub    DWORD PTR [ebx],esp
  404c40:	cmp    DWORD PTR [edx],esi
  404c42:	push   edx
  404c43:	inc    esi
  404c44:	sbb    DWORD PTR [eax-0x23a1196d],edx
  404c4a:	shl    BYTE PTR [ebx],0xdd
  404c4d:	dec    ecx
  404c4e:	ins    DWORD PTR es:[edi],dx
  404c4f:	in     al,0x3
  404c51:	iret   
  404c52:	(bad)  
  404c54:	push   ds
  404c55:	jbe    0x404c8f
  404c57:	jns    0x404c23
  404c59:	pmullw mm7,QWORD PTR [ecx+0x21]
  404c5d:	sar    DWORD PTR [esi+edi*8+0x47],cl
  404c61:	(bad)  
  404c62:	jge    0x404c05
  404c64:	jmp    0x5f5c:0x585bf2c2
  404c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6c:	cmp    ecx,DWORD PTR [esi+0x345aacde]
  404c72:	jecxz  0x404cb1
  404c74:	daa    
  404c75:	jmp    0x5882021f
  404c7a:	sbb    ebx,ebx
  404c7c:	out    dx,al
  404c7d:	lahf   
  404c7e:	packsswb mm0,QWORD PTR [ebp-0x16]
  404c82:	pushfw 
  404c84:	mov    ah,BYTE PTR [ebp-0x51796176]
  404c8a:	pop    ds
  404c8b:	pop    ebp
  404c8c:	mov    ch,0x1e
  404c8e:	out    0x5d,al
  404c90:	lock iret 
  404c92:	mov    al,ds:0xe4b74b54
  404c97:	cli    
  404c98:	mov    dh,0xa
  404c9a:	imul   edi,ecx,0x74
  404c9d:	not    edi
  404c9f:	jmp    0x404d0a
  404ca1:	aam    0x7f
  404ca3:	jg     0x404c44
  404ca5:	sub    BYTE PTR [eiz*4+0x5e966996],ah
  404cac:	adc    al,0x28
  404cae:	push   0x72fe1ea5
  404cb3:	and    DWORD PTR [ecx+ebx*2-0x44],0x1fcb6572
  404cbb:	push   ebx
  404cbc:	pop    esi
  404cbd:	ret    
  404cbe:	sti    
  404cbf:	mov    ds:0x6d264b6e,eax
  404cc4:	xchg   edx,eax
  404cc5:	in     eax,dx
  404cc6:	adc    edi,DWORD PTR [ebp+0x74483e6e]
  404ccc:	jo     0x404c82
  404cce:	ss xchg esp,eax
  404cd0:	repnz push ecx
  404cd2:	xchg   ecx,eax
  404cd3:	push   edx
  404cd4:	mov    edi,0x5331dc8
  404cd9:	xlat   BYTE PTR ds:[ebx]
  404cda:	mov    eax,0x9a621efc
  404cdf:	xchg   ecx,eax
  404ce0:	or     edx,edx
  404ce2:	dec    ebx
  404ce3:	rcr    eax,0xb1
  404ce6:	popf   
  404ce7:	xchg   esp,eax
  404ce8:	dec    DWORD PTR ds:0x2dd3b0e9
  404cee:	pop    es
  404cef:	(bad)
  404cf2:	inc    DWORD PTR [ecx]
  404cf4:	les    esp,FWORD PTR [edi+edi*2+0x3e]
  404cf8:	cmc    
  404cf9:	je     0x404c83
  404cfb:	xchg   esi,eax
  404cfc:	cmp    al,0x16
  404cfe:	inc    ecx
  404cff:	xchg   ecx,eax
  404d00:	mov    ds:0x60d05e50,eax
  404d05:	cdq    
  404d06:	pop    ebx
  404d07:	mov    esp,0x34aa97c1
  404d0c:	rol    BYTE PTR [esi+0x2aeed3b3],cl
  404d12:	nop
  404d13:	hlt    
  404d14:	test   BYTE PTR [esi],0x99
  404d17:	or     al,0xde
  404d19:	sub    ch,bl
  404d1b:	mov    edx,0xc8592e36
  404d20:	pop    ss
  404d21:	jmp    0x404cbb
  404d23:	jg     0x404d98
  404d25:	push   esi
  404d26:	mov    edx,0xab52e2ba
  404d2b:	shr    BYTE PTR [ebp+0x1a],0xbe
  404d2f:	dec    ebp
  404d30:	test   BYTE PTR [edx-0x4c602ff1],0xa4
  404d37:	mov    ebp,0x8b3a1922
  404d3c:	adc    DWORD PTR [esi-0x72],esp
  404d3f:	imul   ebx,DWORD PTR [ebx],0xffffff9c
  404d42:	add    BYTE PTR [edi+eax*2-0x52],cl
  404d46:	mov    dh,al
  404d48:	pop    ebp
  404d49:	or     esp,ebx
  404d4b:	sub    al,BYTE PTR [eax-0x33665ed6]
  404d51:	push   eax
  404d52:	adc    esi,esi
  404d54:	mov    dl,0x28
  404d56:	jo     0x404d25
  404d58:	and    dh,BYTE PTR [ecx+0x20c36eb9]
  404d5e:	mov    WORD PTR [ebx+0x7a7d1ed0],ss
  404d64:	out    dx,eax
  404d65:	jmp    0x404dba
  404d67:	push   ds
  404d68:	push   esp
  404d69:	push   edx
  404d6a:	add    eax,0xe3fb6403
  404d6f:	push   ebp
  404d70:	stos   DWORD PTR es:[edi],eax
  404d71:	in     al,0x92
  404d73:	into   
  404d74:	mov    eax,ss
  404d76:	int    0xa1
  404d78:	lahf   
  404d79:	mov    eax,DWORD PTR [esi-0x37c8ec95]
  404d7f:	jnp    0x404df9
  404d81:	mov    ebx,0xb9800f55
  404d86:	jne    0x404d68
  404d88:	mov    dl,0xb5
  404d8a:	rcr    BYTE PTR [esi],cl
  404d8c:	scas   eax,DWORD PTR es:[edi]
  404d8d:	aam    0xbe
  404d8f:	shr    DWORD PTR [edx+0x75218dc3],cl
  404d95:	cmp    al,0xec
  404d97:	push   es
  404d98:	lea    eax,ds:0xf9487e0c
  404d9e:	push   eax
  404d9f:	test   ecx,ebp
  404da1:	fs fs inc ecx
  404da4:	mov    ecx,0xe6657fc4
  404da9:	rcr    BYTE PTR [edi-0x27b71027],cl
  404daf:	add    esp,ebx
  404db1:	iret   
  404db2:	imul   ebx,DWORD PTR [edx],0x450b2ee0
  404db8:	cmp    al,0xcb
  404dba:	inc    edi
  404dbb:	dec    esp
  404dbc:	jbe    0x404e2d
  404dbe:	pop    edx
  404dbf:	rcl    ch,1
  404dc1:	sbb    edx,edx
  404dc3:	adc    al,0xbc
  404dc5:	icebp  
  404dc6:	cdq    
  404dc7:	ss popa 
  404dc9:	jb     0x404e21
  404dcb:	mov    esp,0xff916cc4
  404dd0:	jmp    0x404dfd
  404dd2:	fs (bad) 
  404dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dd5:	enter  0x95e8,0xb3
  404dd9:	cmp    dh,cl
  404ddb:	push   ebx
  404ddc:	pop    ss
  404ddd:	cs xchg esi,eax
  404ddf:	add    al,0x83
  404de1:	cmp    esp,0xa
  404de4:	mov    eax,0x695b73f
  404de9:	ja     0x404d82
  404deb:	imul   ecx,DWORD PTR [edx-0x3d],0x1ad13337
  404df2:	(bad)  
  404df3:	or     ecx,esp
  404df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df6:	outs   dx,BYTE PTR ds:[esi]
  404df7:	repz or eax,0x7dbe5ba7
  404dfd:	xor    DWORD PTR [edx-0x28],0xa0a34b4
  404e04:	push   cs
  404e05:	cwd    
  404e07:	mov    dh,0xf3
  404e09:	xchg   ebx,eax
  404e0a:	sub    al,0x17
  404e0c:	sub    al,0xe3
  404e0e:	retf   
  404e0f:	cdq    
  404e10:	mov    eax,ds:0x916096db
  404e15:	jo     0x404dd9
  404e17:	cs dec esp
  404e19:	or     ah,bl
  404e1b:	inc    ebx
  404e1c:	test   eax,0x96ace1b5
  404e21:	xchg   esp,eax
  404e22:	sbb    al,bl
  404e24:	jl     0x404dda
  404e26:	in     eax,dx
  404e27:	adc    eax,0xc3965238
  404e2c:	ja     0x404dc2
  404e2e:	push   esi
  404e2f:	mov    esi,0xb54091ec
  404e34:	and    DWORD PTR [eax+0x58],ebp
  404e37:	sub    DWORD PTR [edx+0x6f21ef46],edx
  404e3d:	add    eax,0xa1dfc1d7
  404e42:	mov    ebp,0x62a4784c
  404e47:	out    dx,eax
  404e48:	div    DWORD PTR [edi-0x5d1a79c]
  404e4e:	rol    BYTE PTR [edx+0x10],cl
  404e51:	push   ss
  404e52:	es and al,0x21
  404e55:	dec    ecx
  404e56:	shl    BYTE PTR [ebx],0x2c
  404e59:	add    eax,0x7582bb27
  404e5e:	cdq    
  404e5f:	mov    esp,0xdf4520bd
  404e64:	inc    ebx
  404e65:	xor    eax,DWORD PTR [ecx+0x19]
  404e68:	ja     0x404e78
  404e6a:	inc    eax
  404e6b:	js     0x404e42
  404e6d:	xor    al,0xa6
  404e6f:	adc    dl,BYTE PTR [edx-0x7ad30b45]
  404e75:	xor    esp,ebp
  404e77:	xlat   BYTE PTR ds:[ebx]
  404e78:	xchg   edi,eax
  404e79:	in     eax,0xa
  404e7b:	sbb    esp,DWORD PTR [ecx]
  404e7d:	mov    ebp,0x7a2a9f19
  404e82:	jle    0x404f02
  404e84:	mov    bh,0x72
  404e86:	mov    ch,0xd9
  404e88:	(bad)  
  404e8a:	popa   
  404e8b:	shl    ecx,1
  404e8d:	mov    al,ds:0xb88d8d19
  404e92:	mov    esi,0xb1764b58
  404e97:	fbstp  TBYTE PTR [ebx-0x77214c7]
  404e9d:	cmp    eax,0x571aaedc
  404ea2:	jae    0x404e45
  404ea4:	adc    DWORD PTR [ebx-0x4f],edx
  404ea7:	sbb    BYTE PTR [eax],cl
  404ea9:	dec    ebx
  404eaa:	nop
  404eab:	sbb    BYTE PTR [esi+eax*8],ah
  404eae:	call   0xdb49:0x65412dc5
  404eb5:	adc    eax,0x229e9932
  404eba:	adc    al,0xab
  404ebc:	lods   al,BYTE PTR ds:[esi]
  404ebd:	or     cl,BYTE PTR [ecx]
  404ebf:	dec    cx
  404ec1:	mov    bh,0x5c
  404ec3:	mov    al,0xa5
  404ec5:	retf   0x46f5
  404ec8:	dec    esi
  404ec9:	les    ebp,FWORD PTR [ecx+0x6c8bf02]
  404ecf:	lods   eax,DWORD PTR ds:[esi]
  404ed0:	pop    ds
  404ed1:	leave  
  404ed2:	jle    0x404f0e
  404ed4:	mov    BYTE PTR [esi+0x48],cl
  404ed7:	xor    al,0x17
  404ed9:	mul    DWORD PTR [edx+ecx*8-0x52c9f9b6]
  404ee0:	adc    dl,bh
  404ee2:	sbb    eax,0x72a73140
  404ee7:	dec    edx
  404ee8:	dec    esi
  404ee9:	inc    ebx
  404eea:	adc    eax,0x17be2977
  404eef:	in     al,0xbd
  404ef1:	jmp    0x404e87
  404ef3:	arpl   WORD PTR [eax+eax*1],di
  404ef6:	bound  ebp,QWORD PTR [edx-0x67]
  404ef9:	xor    eax,0xea8e6354
  404efe:	rol    eax,0x49
  404f01:	add    al,BYTE PTR [ebx]
  404f03:	dec    ebx
  404f04:	cdq    
  404f05:	arpl   WORD PTR [esi+edi*1],cx
  404f08:	call   0x599b:0x41d1a484
  404f0f:	mov    ds:0xc9d1b54b,eax
  404f14:	ins    BYTE PTR es:[edi],dx
  404f15:	shl    DWORD PTR [edi+0x73912b2b],0x4
  404f1c:	call   0x9d1b:0xf6692df
  404f23:	sbb    BYTE PTR [esi-0x5b934ae3],ah
  404f29:	fst    st(7)
  404f2b:	sub    bh,BYTE PTR [edi+0x11]
  404f2e:	fcom   QWORD PTR [eax+0x27d22184]
  404f34:	xchg   ebp,eax
  404f35:	xor    dh,bh
  404f37:	pop    esp
  404f38:	xchg   esi,eax
  404f39:	dec    edi
  404f3a:	out    dx,al
  404f3b:	popa   
  404f3c:	ins    DWORD PTR es:[edi],dx
  404f3d:	lods   al,BYTE PTR ds:[esi]
  404f3e:	dec    eax
  404f3f:	mov    eax,ds:0xe805fc0e
  404f44:	jl     0x404edc
  404f46:	pusha  
  404f47:	jns    0x404f58
  404f49:	test   BYTE PTR ds:0xbe3e7aa5,0x33
  404f50:	jb     0x404edc
  404f52:	rcr    DWORD PTR [edx+ebx*1],cl
  404f55:	mov    eax,ds:0x9af74791
  404f5a:	push   es
  404f5b:	lods   al,BYTE PTR ds:[esi]
  404f5c:	add    eax,0x6d9162a0
  404f61:	jns    0x404ee4
  404f63:	repz xlat BYTE PTR ds:[ebx]
  404f65:	mov    eax,0xdf6ebf8c
  404f6a:	enter  0x3314,0xf1
  404f6e:	lock mov ds:0xad31a9c4,al
  404f74:	mov    dl,0x9c
  404f76:	in     eax,0x59
  404f78:	inc    esi
  404f79:	pop    es
  404f7a:	sbb    DWORD PTR [ebx],edi
  404f7c:	(bad)  
  404f7d:	popf   
  404f7e:	in     eax,dx
  404f7f:	iret   
  404f80:	stos   DWORD PTR es:[edi],eax
  404f81:	popa   
  404f82:	xor    eax,0xfecf39c2
  404f87:	pop    eax
  404f88:	in     eax,dx
  404f89:	cld    
  404f8a:	jno    0x404f4e
  404f8c:	aad    0x32
  404f8e:	or     BYTE PTR [ecx],ah
  404f90:	add    al,0x72
  404f92:	ficom  DWORD PTR [eax]
  404f94:	mov    eax,ds:0x4c058be9
  404f99:	mov    bh,0x6e
  404f9b:	or     BYTE PTR [ecx-0x3fd968e0],al
  404fa1:	jp     0x404fbf
  404fa3:	jp     0x404f43
  404fa5:	dec    edx
  404fa6:	inc    esi
  404fa7:	(bad)  
  404fa8:	jmp    0x404fad
  404faa:	sub    eax,0xb350f8d7
  404faf:	or     bl,BYTE PTR [edx]
  404fb1:	cs pop ebp
  404fb3:	retf   0x76fa
  404fb6:	das    
  404fb7:	or     BYTE PTR [ebp-0x63f0e857],bl
  404fbd:	cmc    
  404fbe:	or     DWORD PTR [esi+0x6f5886db],edi
  404fc4:	cmp    DWORD PTR [ebx],0x7c
  404fc7:	cmp    ecx,DWORD PTR [esi+0x21]
  404fca:	mov    fs:0xa6e9e26e,eax
  404fd0:	and    eax,edi
  404fd2:	cmp    al,0x80
  404fd4:	jnp    0x405036
  404fd6:	xchg   ebp,eax
  404fd7:	lahf   
  404fd8:	push   cs
  404fd9:	scas   eax,DWORD PTR es:[edi]
  404fda:	and    DWORD PTR [esi-0x758f1fc9],ebx
  404fe0:	es aaa 
  404fe2:	ret    0x83a4
  404fe5:	retf   0x5f41
  404fe8:	xor    bh,ch
  404fea:	loope  0x404fbb
  404fec:	jo     0x40505a
  404fee:	inc    eax
  404fef:	and    BYTE PTR [ebp+0x68bae72b],0xcf
  404ff6:	jne    0x405070
  404ff8:	je     0x40502e
  404ffa:	std    
  404ffb:	scas   eax,DWORD PTR es:[edi]
  404ffc:	mov    ds:0x6e4d43f,eax
  405001:	sahf   
  405002:	dec    eax
  405003:	mov    ds:0x2194132d,eax
  405008:	dec    eax
  405009:	in     al,0x6a
  40500b:	jne    0x404fee
  40500d:	mov    al,0xae
  40500f:	in     al,0xe
  405011:	mov    edx,DWORD PTR [esi+eiz*2+0x59]
  405015:	mov    ah,0x68
  405017:	jge    0x40500b
  405019:	cwde   
  40501a:	fsubr  QWORD PTR [ecx-0x2]
  40501d:	push   esp
  40501e:	pop    ebp
  40501f:	les    ebx,FWORD PTR [edi]
  405021:	mov    al,ds:0xb01ee8c2
  405026:	aam    0xfe
  405028:	daa    
  405029:	aam    0x2f
  40502b:	cwde   
  40502c:	xor    bh,BYTE PTR [esi-0x41ed8480]
  405032:	mov    al,0xdf
  405034:	xchg   esi,eax
  405035:	xor    DWORD PTR [eax-0x28],0x35
  405039:	test   eax,0x9bb3bc5c
  40503e:	mov    al,ds:0xfa46bc0d
  405043:	mov    al,0x7b
  405045:	xor    BYTE PTR [eax+0x704ef1ca],dl
  40504b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504c:	outs   dx,BYTE PTR ds:[esi]
  40504d:	clc    
  40504e:	aaa    
  40504f:	test   DWORD PTR [ebp-0x40],esp
  405052:	mov    esi,0x3652c6dc
  405057:	xor    ebp,0xffffff83
  40505a:	sbb    eax,0xe275891b
  40505f:	fld    st(5)
  405061:	dec    esp
  405062:	cdq    
  405063:	xchg   edi,eax
  405064:	cdq    
  405065:	repz (bad) 
  405067:	movups xmm6,XMMWORD PTR [ecx-0x64]
  40506b:	cli    
  40506c:	fs js  0x40503b
  40506f:	inc    si
  405071:	xchg   edx,eax
  405072:	sahf   
  405073:	retf   
  405074:	add    BYTE PTR [ecx],cl
  405076:	or     bh,BYTE PTR [di]
  405079:	or     dl,al
  40507b:	mov    dh,0xc7
  40507d:	icebp  
  40507e:	and    ebx,DWORD PTR [edx+0x71]
  405081:	pusha  
  405082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405083:	or     eax,0x63f79b6d
  405088:	icebp  
  405089:	icebp  
  40508a:	std    
  40508b:	dec    ebx
  40508c:	mov    ch,bh
  40508e:	jg     0x4050f1
  405090:	test   al,0xab
  405092:	mov    al,0xaf
  405094:	jmp    0xe0fa:0x5d64ae9
  40509b:	imul   ecx,DWORD PTR [esi],0xffffffc4
  40509e:	or     cl,BYTE PTR [eax+0x74e23d2a]
  4050a4:	mov    esp,0x8be02f46
  4050a9:	das    
  4050aa:	xor    edi,DWORD PTR [eax-0x71]
  4050ad:	jbe    0x405115
  4050af:	sbb    eax,0xc2ea25ed
  4050b4:	pop    ss
  4050b5:	or     ebp,DWORD PTR ds:[ebx+0x3a]
  4050b9:	aam    0xd2
  4050bb:	and    ah,BYTE PTR [ebx-0x14c34bf3]
  4050c1:	in     eax,0xd
  4050c3:	add    ch,bh
  4050c5:	cmp    al,0x0
  4050c7:	fmul   QWORD PTR ss:[ebp+ecx*2-0x3d2bce25]
  4050cf:	pop    ss
  4050d0:	jmp    0x4e5a:0xda780b83
  4050d7:	hlt    
  4050d8:	pop    ss
  4050d9:	pop    ss
  4050da:	hlt    
  4050db:	jmp    0x405113
  4050dd:	xor    eax,0x3c4c7653
  4050e2:	test   al,0x59
  4050e4:	mov    ebp,0x857b72ef
  4050e9:	pop    esp
  4050ea:	dec    eax
  4050eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ec:	and    dl,BYTE PTR [esi+eax*2+0x171c46a4]
  4050f3:	fs cmp dh,bl
  4050f6:	mov    al,ds:0xd740160
  4050fb:	jae    0x4050e0
  4050fd:	sub    edx,DWORD PTR [ecx+0x26d0889a]
  405103:	out    0xcd,eax
  405105:	std    
  405106:	fisub  DWORD PTR [ebx]
  405108:	xor    BYTE PTR [ebx-0x6],bl
  40510b:	fs aaa 
  40510d:	jecxz  0x40516d
  40510f:	cmp    DWORD PTR [esi+eiz*4+0x55219b6c],edi
  405116:	cmp    DWORD PTR [eax],edx
  405118:	inc    eax
  405119:	inc    esp
  40511a:	sub    bl,dh
  40511c:	mov    WORD PTR [ebp-0x58100007],cs
  405122:	mov    esi,0xf7cc5193
  405127:	mov    ah,0x19
  405129:	adc    dh,cl
  40512b:	or     ebp,DWORD PTR [esi-0x12]
  40512e:	and    al,0x95
  405130:	scas   al,BYTE PTR es:[edi]
  405131:	clc    
  405132:	jbe    0x405143
  405134:	cmp    ecx,DWORD PTR [edi-0x26]
  405137:	pop    es
  405138:	jne    0x4050df
  40513a:	icebp  
  40513b:	push   edi
  40513c:	add    edx,esp
  40513e:	and    edx,eax
  405140:	sub    ah,cl
  405142:	xchg   ebp,eax
  405143:	jecxz  0x4050eb
  405145:	xchg   BYTE PTR [eax+eiz*1],ah
  405148:	jmp    0x405140
  40514a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40514b:	scas   eax,DWORD PTR es:[edi]
  40514c:	in     eax,0x4b
  40514e:	push   edx
  40514f:	inc    esi
  405150:	aad    0x3c
  405152:	test   al,0xb5
  405154:	cmp    BYTE PTR [ecx-0x42],ch
  405157:	dec    eax
  405158:	aas    
  405159:	jnp    0x40514a
  40515b:	fwait
  40515c:	stos   BYTE PTR es:[edi],al
  40515d:	adc    eax,0xce555b57
  405162:	adc    DWORD PTR [ecx-0x557c6188],edi
  405168:	bound  ecx,QWORD PTR [eax-0x5b3ed331]
  40516e:	in     eax,0x31
  405170:	jl     0x40510a
  405172:	cmc    
  405173:	scas   eax,DWORD PTR es:[edi]
  405174:	adc    al,0x5e
  405176:	lea    edi,[edi-0x3aae4635]
  40517c:	xchg   ebp,eax
  40517d:	dec    esp
  40517e:	xlat   BYTE PTR ds:[ebx]
  40517f:	fld    DWORD PTR [esi+edx*8-0x1d8536f1]
  405186:	push   es
  405187:	dec    esp
  405188:	dec    eax
  405189:	ja     0x405196
  40518b:	ja     0x4051a8
  40518d:	dec    edi
  40518e:	cmc    
  40518f:	sar    BYTE PTR [edx+0x585ed861],0xd8
  405196:	ins    DWORD PTR es:[edi],dx
  405197:	inc    esi
  405198:	sbb    BYTE PTR [esi+ebp*1],0xf6
  40519c:	fsubr  DWORD PTR [ecx]
  40519e:	adc    ebx,DWORD PTR [ecx-0xd272e34]
  4051a4:	rol    BYTE PTR [ebp-0x2b47f6da],0x4f
  4051ab:	ins    BYTE PTR es:[edi],dx
  4051ac:	cwde   
  4051ad:	xchg   edi,eax
  4051ae:	sbb    eax,0x2be48788
  4051b3:	test   DWORD PTR [eax+0x4f],edi
  4051b6:	xchg   esp,eax
  4051b7:	cmp    eax,0x2b35609a
  4051bc:	out    0x6e,al
  4051be:	mov    WORD PTR [esi-0x60],cs
  4051c1:	mov    BYTE PTR [edx-0x75],bh
  4051c4:	sbb    eax,eax
  4051c6:	aam    0xe6
  4051c8:	sbb    esi,DWORD PTR [ecx+0x6b]
  4051cb:	mov    fs,WORD PTR ds:0x13b644a1
  4051d1:	rcr    BYTE PTR [eax+0x37],1
  4051d4:	mov    ecx,0x3d685436
  4051d9:	add    BYTE PTR [edx+edx*8-0x1565589d],dh
  4051e0:	stos   BYTE PTR es:[edi],al
  4051e1:	dec    ebp
  4051e2:	pop    ebp
  4051e3:	bound  eax,QWORD PTR [ecx]
  4051e5:	je     0x405248
  4051e7:	push   0x7a1d904b
  4051ec:	mov    ebp,0x9b25eced
  4051f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f2:	adc    BYTE PTR [edi+0x548b999],dh
  4051f8:	jae    0x4051db
  4051fa:	push   edi
  4051fb:	jno    0x4051f1
  4051fd:	jnp    0x4051b2
  4051ff:	in     al,0xdd
  405201:	jno    0x4051c7
  405203:	mov    al,0xb3
  405205:	scas   al,BYTE PTR es:[edi]
  405206:	jb     0x4051c1
  405208:	push   ecx
  405209:	and    DWORD PTR [ebp+0x587d4ef7],edi
  40520f:	xchg   BYTE PTR [ecx],dl
  405211:	push   esp
  405212:	mov    bl,0xb4
  405214:	xchg   DWORD PTR [ebx+0x66],esi
  405217:	dec    edx
  405218:	cmp    BYTE PTR [ebx],al
  40521a:	std    
  40521b:	mov    esi,DWORD PTR [ebx+esi*4-0x36a933da]
  405222:	ds js  0x4051aa
  405225:	fsubr  QWORD PTR [eax-0x47814032]
  40522b:	push   0x7
  40522d:	mov    bl,BYTE PTR [edx-0x273f2685]
  405233:	fld    DWORD PTR [bp+si-0x69]
  405237:	xchg   DWORD PTR [ebp+0x2e127ae1],edi
  40523d:	stos   BYTE PTR es:[edi],al
  40523e:	pop    edx
  40523f:	(bad)  
  405241:	call   0x2394a93c
  405246:	stos   BYTE PTR es:[edi],al
  405247:	jbe    0x405272
  405249:	pop    ds
  40524a:	cli    
  40524b:	mov    ebx,0xb4daf824
  405250:	mov    ecx,0x118f5659
  405255:	pusha  
  405256:	(bad)  
  405257:	mov    ah,0xbd
  405259:	and    al,0x5f
  40525b:	fist   WORD PTR [ebx]
  40525d:	sbb    al,BYTE PTR [edx]
  40525f:	nop
  405260:	fs sbb al,0x60
  405263:	stos   BYTE PTR es:[edi],al
  405264:	out    dx,al
  405265:	out    0xa5,al
  405267:	into   
  405268:	push   edx
  405269:	sbb    BYTE PTR [edi+0x47],cl
  40526c:	sti    
  40526d:	sub    eax,DWORD PTR [di]
  405270:	add    BYTE PTR [esi-0x7e381275],ch
  405276:	(bad)  
  405277:	(bad)  
  405278:	pop    esi
  405279:	pop    ds
  40527a:	sub    DWORD PTR [esi+0x46],esp
  40527d:	test   BYTE PTR ds:0x6c176017,ch
  405283:	push   esi
  405284:	push   ecx
  405285:	cld    
  405286:	mov    BYTE PTR [ecx+0x6bef04ea],0x2d
  40528d:	cwde   
  40528e:	mov    ebx,DWORD PTR [edi]
  405290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405291:	cmc    
  405292:	fldcw  WORD PTR [ecx]
  405294:	leave  
  405295:	enter  0x453e,0x59
  405299:	(bad)  
  40529a:	sti    
  40529b:	jmp    0x4052ca
  40529d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40529e:	(bad)  
  40529f:	mul    BYTE PTR [edx-0x7f7c5628]
  4052a5:	cwde   
  4052a6:	cmp    al,0x72
  4052a8:	add    BYTE PTR [ebx+ecx*1+0xc4906e4],dl
  4052af:	outs   dx,BYTE PTR ds:[esi]
  4052b0:	mov    bl,0xf2
  4052b2:	adc    eax,0x4e26bd06
  4052b7:	mov    ah,BYTE PTR [esi]
  4052b9:	sar    DWORD PTR [edi],0xf4
  4052bc:	mov    esi,0x895cd9d2
  4052c1:	sbb    ecx,DWORD PTR [esi-0x29]
  4052c4:	jmp    0x4052e2
  4052c6:	out    0xd,al
  4052c8:	mov    DWORD PTR [esi+ebp*8+0x8],esi
  4052cc:	mov    bh,BYTE PTR [ecx+0x46]
  4052cf:	dec    edi
  4052d0:	sbb    ebx,DWORD PTR [ecx+esi*1]
  4052d3:	cwde   
  4052d4:	dec    esi
  4052d5:	mov    dh,0xa3
  4052d7:	je     0x4052e7
  4052d9:	mov    cl,0x9
  4052db:	fimul  DWORD PTR [eax]
  4052dd:	add    bh,ah
  4052df:	retf   
  4052e0:	cmc    
  4052e1:	sub    al,0xad
  4052e3:	sbb    ah,bh
  4052e5:	mov    ds:0xef6308e5,al
  4052ea:	call   0xb1f2b90c
  4052ef:	pusha  
  4052f0:	dec    ebx
  4052f1:	cmp    eax,0x64a04b1d
  4052f6:	xor    BYTE PTR [edx],0x46
  4052f9:	aam    0x2d
  4052fb:	lds    esp,FWORD PTR [ecx-0x697acb44]
  405301:	xchg   ebp,eax
  405302:	or     al,0xa2
  405304:	in     eax,dx
  405305:	lods   al,BYTE PTR ds:[esi]
  405306:	mov    al,ds:0x2ca012fd
  40530b:	dec    ebx
  40530c:	iret   
  40530d:	jno    0x40537e
  40530f:	or     DWORD PTR [ecx],eax
  405311:	mov    eax,ds:0xfc39161
  405316:	neg    BYTE PTR [eax]
  405318:	stos   BYTE PTR es:[edi],al
  405319:	clc    
  40531a:	mov    ebp,DWORD PTR [ebp-0x3495b525]
  405320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405321:	int    0xcc
  405323:	sbb    ebp,ebp
  405325:	lock jo 0x405386
  405328:	or     ebx,DWORD PTR [edi-0x7a]
  40532b:	dec    esp
  40532c:	outs   dx,DWORD PTR ds:[esi]
  40532d:	and    ebp,DWORD PTR [edi]
  40532f:	test   eax,0x29ccd8ae
  405334:	xchg   DWORD PTR [ebx-0x62],ebp
  405337:	test   ch,cl
  405339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533b:	outs   dx,BYTE PTR ds:[esi]
  40533c:	repnz rcr BYTE PTR [ecx+esi*1+0x72da45a4],cl
  405344:	or     edx,DWORD PTR [ebx]
  405346:	push   ss
  405347:	mov    WORD PTR [eax-0x4d710200],ds
  40534d:	and    ecx,esp
  40534f:	add    BYTE PTR [edi],bh
  405351:	jbe    0x4052e0
  405353:	xor    BYTE PTR [edi+ecx*2],al
  405356:	pop    esp
  405357:	cdq    
  405358:	out    dx,eax
  405359:	daa    
  40535a:	scas   eax,DWORD PTR es:[edi]
  40535b:	(bad)  
  40535c:	(bad)  
  40535d:	cld    
  40535e:	mov    ds:0xdab3504d,al
  405363:	stos   DWORD PTR es:[edi],eax
  405364:	out    0x73,eax
  405366:	xchg   ebx,eax
  405367:	dec    ecx
  405368:	sub    eax,0xa0e01958
  40536d:	inc    edx
  40536e:	sti    
  40536f:	and    al,BYTE PTR [esi]
  405371:	cmp    DWORD PTR [eax-0x72f79407],ebx
  405377:	loope  0x405305
  405379:	xchg   ebp,eax
  40537a:	mov    ds:0xc29a06a9,al
  40537f:	ror    DWORD PTR [ebx-0x214d0f92],0x58
  405386:	aam    0x6d
  405388:	pop    ds
  405389:	sbb    ebp,DWORD PTR [edi+edx*8+0x1e05c913]
  405390:	mov    ebx,0x54559757
  405395:	xchg   DWORD PTR [ebp-0x569a0239],edi
  40539b:	nop
  40539c:	push   ebp
  40539d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40539e:	aam    0x27
  4053a0:	jne    0x4053cd
  4053a2:	sbb    ebx,eax
  4053a4:	lea    eax,[ebp+0x67]
  4053a7:	jl     0x4053e4
  4053a9:	mov    edx,0xd67aa7e6
  4053ae:	stos   DWORD PTR es:[edi],eax
  4053af:	loopne 0x40541e
  4053b1:	pop    esp
  4053b2:	sbb    al,0x99
  4053b4:	xchg   edi,eax
  4053b5:	pop    edx
  4053b6:	adc    eax,0x9a9c4cdf
  4053bb:	xchg   DWORD PTR [edx],esi
  4053bd:	and    DWORD PTR [edi+ebp*4-0x11],edi
  4053c1:	sub    BYTE PTR [edx],dl
  4053c3:	dec    ecx
  4053c4:	add    bh,BYTE PTR fs:[ebx]
  4053c7:	pop    eax
  4053c8:	inc    esp
  4053c9:	inc    eax
  4053ca:	jmp    0x405442
  4053cc:	jecxz  0x40535e
  4053ce:	loope  0x4053f5
  4053d0:	ins    BYTE PTR es:[edi],dx
  4053d1:	ss sub dh,ch
  4053d4:	jno    0x40542b
  4053d6:	inc    esp
  4053d7:	xor    al,0x5a
  4053d9:	xor    eax,0x62260b4a
  4053de:	test   eax,0x21168ba
  4053e3:	(bad)  
  4053e4:	fwait
  4053e5:	pushf  
  4053e6:	mov    ebx,0x8f775d98
  4053eb:	cli    
  4053ec:	sbb    BYTE PTR ds:0x2257330a,al
  4053f2:	sub    ebp,DWORD PTR [ebx-0x2cae6c]
  4053f8:	jno    0x4053ce
  4053fa:	in     eax,0xa3
  4053fc:	repnz mov WORD PTR [edx],?
  4053ff:	stc    
  405400:	aas    
  405401:	inc    ebp
  405402:	sub    dl,BYTE PTR [eax-0x5a]
  405405:	out    0x5e,al
  405407:	jno    0x405399
  405409:	push   ds
  40540a:	(bad)  
  40540b:	into   
  40540c:	or     al,0x63
  40540e:	or     al,0x10
  405410:	shl    BYTE PTR [ebp-0x7e],cl
  405413:	mov    dh,0x4b
  405415:	mov    DWORD PTR [edx+ebp*1+0x56c11b22],0xbf513297
  405420:	sbb    ch,dh
  405422:	inc    ecx
  405423:	test   BYTE PTR [ebx+eax*8+0x7f316fec],dl
  40542a:	pop    esp
  40542b:	push   ebx
  40542c:	sbb    ebp,DWORD PTR [ebx+0x31]
  40542f:	and    ebp,DWORD PTR [esi]
  405431:	out    dx,eax
  405432:	outs   dx,DWORD PTR ds:[esi]
  405433:	push   eax
  405434:	popf   
  405435:	popf   
  405436:	xchg   ebx,eax
  405437:	addr16 push ebx
  405439:	loopne 0x4053d4
  40543b:	fdivr  st,st(5)
  40543d:	xchg   edi,eax
  40543e:	add    edx,ebx
  405440:	cmp    ebp,DWORD PTR [ebp-0x6385fb6c]
  405446:	test   eax,0x5e66d3f5
  40544b:	fsub   QWORD PTR [ecx+0x5f]
  40544e:	ror    DWORD PTR [ebp+0x5c125a06],1
  405454:	fstp   TBYTE PTR [ebx+0x2d]
  405457:	mov    eax,ds:0xac4c51e6
  40545c:	xor    DWORD PTR [edi+0x7e],esi
  40545f:	inc    edi
  405460:	(bad)  [ebx+0x7b]
  405463:	sbb    ebx,DWORD PTR [edi]
  405465:	mov    ch,0xc0
  405467:	sbb    DWORD PTR [esp+edi*2+0x45e578a9],0xffffff84
  40546f:	fdiv   DWORD PTR [edx+0x20e7d975]
  405475:	add    al,0xf0
  405477:	clc    
  405478:	repnz clc 
  40547a:	sub    esp,ebp
  40547c:	xlat   BYTE PTR ds:[ebx]
  40547d:	cmp    cl,BYTE PTR ds:0xde25e43b
  405483:	sub    DWORD PTR [edx+0x98b0edc],edx
  405489:	mov    esp,0xf74ed3ff
  40548e:	push   ds
  40548f:	adc    DWORD PTR [esi],0x2ae36948
  405495:	adc    dl,BYTE PTR [ecx+0x53]
  405498:	sbb    ecx,DWORD PTR [esi]
  40549a:	lahf   
  40549b:	gs xor al,0xd3
  40549e:	test   eax,0x1e34807e
  4054a3:	(bad)  
  4054a5:	pushf  
  4054a6:	sahf   
  4054a7:	pop    ebp
  4054a8:	mov    al,ds:0x1e256919
  4054ad:	mov    BYTE PTR [ecx-0x45f92a52],ch
  4054b3:	xchg   esp,eax
  4054b4:	loope  0x405507
  4054b6:	(bad)  
  4054b7:	rcl    DWORD PTR [ebp-0x74],1
  4054ba:	in     eax,0x67
  4054bc:	mov    esp,0xcf4f1148
  4054c1:	dec    DWORD PTR [esi]
  4054c3:	jmp    0x4054f0
  4054c5:	xor    DWORD PTR [esi+0x7b],esi
  4054c8:	mov    DWORD PTR [edx+0xe],edi
  4054cb:	cld    
  4054cc:	xor    BYTE PTR [esi-0x653e2890],0x71
  4054d3:	inc    edi
  4054d4:	xor    esp,edx
  4054d6:	push   0x4
  4054d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d9:	scas   eax,DWORD PTR es:[edi]
  4054da:	add    eax,0xa79799d5
  4054df:	push   esp
  4054e0:	retf   
  4054e1:	leave  
  4054e2:	in     eax,dx
  4054e3:	jle    0x4054f6
  4054e5:	(bad)  
  4054e6:	stc    
  4054e7:	lahf   
  4054e8:	mov    dl,0xf2
  4054ea:	aad    0x62
  4054ec:	and    al,0xdc
  4054ee:	ins    DWORD PTR es:[edi],dx
  4054ef:	dec    esp
  4054f0:	ret    0xad40
  4054f3:	fstp   QWORD PTR [eax-0x5612985b]
  4054f9:	dec    edi
  4054fa:	pop    ecx
  4054fb:	loop   0x4054fa
  4054fd:	xchg   esi,eax
  4054fe:	cdq    
  4054ff:	add    eax,0x6c7f8156
  405504:	mov    dl,0x92
  405506:	inc    ebx
  405507:	not    BYTE PTR [eax+ecx*2]
  40550a:	imul   eax,DWORD PTR [ebx+0x11be3b0b],0xd7ea0cfd
  405514:	push   ss
  405515:	or     DWORD PTR [edi+0x1e6f65ca],esi
  40551b:	iret   
  40551c:	sbb    dh,BYTE PTR [ebp+0x54f65749]
  405522:	ins    BYTE PTR es:[edi],dx
  405523:	push   0x6b
  405525:	add    edi,0x4b8b3e4a
  40552b:	sub    al,BYTE PTR [edi]
  40552d:	fisttp DWORD PTR [ecx+esi*2]
  405530:	pop    edi
  405531:	mov    al,0x84
  405533:	xchg   esi,eax
  405534:	clc    
  405535:	cmp    eax,0x15bd630a
  40553a:	in     eax,dx
  40553b:	retf   0xac81
  40553e:	pop    ecx
  40553f:	fnstcw WORD PTR [esi]
  405541:	xor    al,0xb8
  405543:	retf   
  405544:	es test bl,dh
  405547:	mov    esi,es
  405549:	mov    eax,ds:0x575fc694
  40554e:	mov    ch,0xf1
  405550:	add    bh,ah
  405552:	pop    ebp
  405553:	inc    esp
  405554:	mov    edx,0x6a95eb05
  405559:	mov    esp,0x3797e87c
  40555e:	stc    
  40555f:	ins    DWORD PTR es:[edi],dx
  405560:	inc    eax
  405561:	not    ecx
  405563:	sbb    edi,DWORD PTR [eax+ebp*4]
  405566:	sbb    ebx,DWORD PTR ds:0x67a67252
  40556c:	loope  0x4055d1
  40556e:	mov    dh,0x3d
  405570:	xchg   ebp,eax
  405571:	retf   0x5699
  405574:	pushf  
  405575:	enter  0xc198,0xba
  405579:	mov    eax,0x1edc5bca
  40557e:	add    eax,0x5816d9b4
  405583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405584:	pop    edi
  405585:	mov    bl,0x34
  405587:	mov    ds:0x7ed41177,eax
  40558c:	outs   dx,BYTE PTR ds:[esi]
  40558d:	xor    al,0x18
  40558f:	xchg   esp,eax
  405590:	bound  esi,QWORD PTR [edi-0x44351884]
  405596:	hlt    
  405597:	adc    BYTE PTR [edx],bl
  405599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40559a:	and    DWORD PTR [edx-0x2],esp
  40559d:	inc    esp
  40559e:	fwait
  40559f:	ror    DWORD PTR ds:0xb59383a4,0x6c
  4055a6:	xor    BYTE PTR [ecx+0x4d],cl
  4055a9:	rcr    DWORD PTR [ecx+edi*2-0xc22e491],1
  4055b0:	push   eax
  4055b1:	xor    cl,BYTE PTR [edi+edx*1+0x6a83e309]
  4055b8:	sub    DWORD PTR [eax+0x1f],ebp
  4055bb:	daa    
  4055bc:	add    eax,DWORD PTR [ecx]
  4055be:	add    ch,cl
  4055c0:	addr16 push edi
  4055c2:	add    BYTE PTR [ecx+ebx*4-0x3f],cl
  4055c6:	call   0xb89de427
  4055cb:	xchg   esi,eax
  4055cc:	cmp    BYTE PTR [ecx-0x16],dl
  4055cf:	cmp    eax,0x6673d463
  4055d4:	daa    
  4055d5:	mov    al,0x93
  4055d7:	popa   
  4055d8:	fs sbb ch,ah
  4055db:	pop    ebp
  4055dc:	mov    al,ds:0xc1f8e191
  4055e1:	or     DWORD PTR [edx],ecx
  4055e3:	xchg   ecx,eax
  4055e4:	les    edx,FWORD PTR [eax-0x1f]
  4055e7:	add    eax,0x45e32cbd
  4055ec:	xor    esp,DWORD PTR [edi+edi*8-0x32]
  4055f0:	jge    0x4055b2
  4055f2:	stos   BYTE PTR es:[edi],al
  4055f3:	aam    0x93
  4055f5:	dec    esi
  4055f6:	jae    0x405655
  4055f8:	adc    BYTE PTR [edi],ah
  4055fa:	dec    cl
  4055fc:	addr16 xchg esi,eax
  4055fe:	ret    0x527
  405601:	push   ecx
  405602:	movlps xmm3,QWORD PTR [edx+0x3cb17aeb]
  405609:	rol    BYTE PTR [ebp+0x74e4af21],0xe1
  405610:	sbb    ecx,DWORD PTR [eax+0x4d5b5bc2]
  405616:	arpl   ax,bx
  405618:	or     ebp,ebx
  40561a:	clc    
  40561b:	cmp    BYTE PTR [edi+0x4b9b97cc],al
  405621:	inc    edx
  405622:	int3   
  405623:	xor    DWORD PTR [eax],0x297feb4a
  405629:	pusha  
  40562a:	into   
  40562b:	adc    edi,DWORD PTR [ebx]
  40562d:	aaa    
  40562e:	dec    eax
  40562f:	rep stos DWORD PTR es:[edi],eax
  405631:	xchg   esp,eax
  405632:	mov    bl,0x25
  405634:	push   edi
  405635:	xchg   ebp,eax
  405636:	je     0x405606
  405638:	loop   0x405615
  40563a:	pop    ss
  40563b:	dec    ebx
  40563c:	sbb    bh,0x5
  40563f:	ret    0xfa7c
  405642:	mov    WORD PTR [edx-0x5707d576],ds
  405648:	scas   eax,DWORD PTR es:[edi]
  405649:	pop    edx
  40564a:	rcl    ecx,cl
  40564c:	pop    ds
  40564d:	pop    eax
  40564e:	jbe    0x405638
  405650:	cs (bad) 
  405652:	dec    DWORD PTR [edx+0x53]
  405655:	pop    ds
  405656:	je     0x405626
  405658:	mov    esp,0x4d46d0bf
  40565d:	mov    dl,0xfe
  40565f:	shl    al,1
  405661:	xchg   DWORD PTR [eax],esp
  405663:	cmp    al,0x29
  405665:	jle    0x4056b3
  405667:	pop    edi
  405668:	int    0xf2
  40566a:	xor    BYTE PTR [eax],bl
  40566c:	stc    
  40566d:	and    eax,0xe6f1e74
  405672:	lods   al,BYTE PTR ds:[esi]
  405673:	iret   
  405674:	repnz ds pop ebp
  405677:	dec    esi
  405678:	outs   dx,BYTE PTR ds:[esi]
  405679:	call   0xb639:0xfc276ddd
  405680:	jmp    0x40561b
  405682:	retf   0xbc24
  405685:	pop    ss
  405686:	mov    WORD PTR [esi+edx*1+0x12],ss
  40568a:	ret    0x4e56
  40568d:	push   ebp
  40568e:	dec    edi
  40568f:	lahf   
  405690:	and    dh,BYTE PTR [ebp+0x7fb6aac1]
  405696:	neg    DWORD PTR [edx+0x55]
  405699:	cmp    bh,BYTE PTR [edi]
  40569b:	pop    ds
  40569c:	std    
  40569d:	sub    BYTE PTR [ebx+0x7f643d47],al
  4056a3:	and    ebp,DWORD PTR [edx]
  4056a5:	or     eax,0x2bdf3be5
  4056aa:	dec    eax
  4056ab:	in     eax,dx
  4056ac:	dec    esi
  4056ad:	or     ch,BYTE PTR [ecx+0x1e0b59d6]
  4056b3:	sub    dl,BYTE PTR [ebx]
  4056b5:	add    ch,cl
  4056b7:	inc    eax
  4056b8:	pop    ebx
  4056b9:	add    DWORD PTR ds:0xcbff30b7,ebx
  4056bf:	mov    esi,0x4682d32d
  4056c4:	dec    eax
  4056c5:	scas   al,BYTE PTR es:[edi]
  4056c6:	retf   
  4056c7:	lock sbb BYTE PTR [ecx+0x7e0a72fe],0xe6
  4056cf:	sbb    BYTE PTR [edi],0x24
  4056d2:	nop
  4056d3:	aad    0xc8
  4056d5:	mov    ss,eax
  4056d7:	lahf   
  4056d8:	dec    ebp
  4056d9:	retf   
  4056da:	add    ebx,DWORD PTR [ecx-0x2c1c0d5f]
  4056e0:	push   eax
  4056e1:	jb     0x405703
  4056e3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4056e5:	scas   al,BYTE PTR es:[edi]
  4056e6:	int3   
  4056e7:	fs mov edx,0xe89e30f7
  4056ed:	js     0x405722
  4056ef:	mov    ds:0x55b9402,eax
  4056f4:	fdivr  QWORD PTR ds:0x3175df0c
  4056fa:	inc    ecx
  4056fb:	inc    esp
  4056fc:	cmp    ah,dl
  4056fe:	ror    bl,1
  405700:	mov    ebp,0xc0e030cc
  405705:	jmp    0x6660158b
  40570a:	clc    
  40570b:	(bad)  
  40570d:	xchg   BYTE PTR [ebp-0x72],al
  405710:	adc    DWORD PTR [esp+esi*2-0x6a],edx
  405714:	cs mov al,0x1
  405717:	adc    ch,BYTE PTR [ecx]
  405719:	sbb    al,0x72
  40571b:	inc    esi
  40571c:	mov    ?,WORD PTR [esp+ebx*2-0x4d]
  405720:	jbe    0x40579c
  405722:	loop   0x4056e5
  405724:	adc    al,0x41
  405726:	imul   dx,WORD PTR [eax+0x77],0x709b
  40572c:	mov    esp,0x75a2cf85
  405731:	add    BYTE PTR [esi-0x3e69c9ce],0x7
  405738:	cmp    ebp,DWORD PTR [ebp-0x4fd47170]
  40573e:	leave  
  40573f:	repnz push ecx
  405741:	test   DWORD PTR [eax+0x32],eax
  405744:	and    ah,BYTE PTR [esp+eiz*4+0x6e07229a]
  40574b:	jne    0x405758
  40574d:	add    dh,al
  40574f:	js     0x3c54ff4
  405755:	adc    eax,0x6ee9d5c3
  40575a:	loopne 0x405731
  40575c:	jp     0x4057d3
  40575e:	sub    al,0xf9
  405760:	and    cl,BYTE PTR ds:0x7e2d2132
  405766:	ret    
  405767:	cdq    
  405768:	mov    dh,0x1
  40576a:	jae    0x405745
  40576c:	stc    
  40576d:	sub    bl,cl
  40576f:	fdivp  st(6),st
  405771:	xchg   ebx,eax
  405772:	xchg   edx,eax
  405773:	sbb    BYTE PTR [ebx],bl
  405775:	(bad)  
  405776:	imul   eax,DWORD PTR [ecx+edx*2+0x587835b7],0xfffffff3
  40577e:	mov    al,0x1
  405780:	out    dx,al
  405781:	sub    DWORD PTR [esi],ecx
  405783:	push   cs
  405784:	shld   DWORD PTR [ecx-0x6d316273],edx,0xa4
  40578c:	inc    eax
  40578d:	jne    0x4057c4
  40578f:	pop    edi
  405790:	pop    edi
  405791:	mov    ebp,0x59d4e1bf
  405796:	imul   ebp,DWORD PTR [ebp-0xe1962d0],0xffffffe1
  40579d:	inc    esi
  40579e:	pusha  
  40579f:	(bad)  
  4057a0:	fdivr  DWORD PTR [eax+0x5772a054]
  4057a6:	call   DWORD PTR [esi+esi*4]
  4057a9:	jo     0x405823
  4057ab:	cdq    
  4057ac:	xor    BYTE PTR [eax],bl
  4057ae:	ret    
  4057af:	xor    eax,0x1ae641ff
  4057b4:	sbb    eax,0x65384b1a
  4057b9:	out    0x9f,eax
  4057bb:	mov    al,ds:0x566377e9
  4057c0:	daa    
  4057c1:	jnp    0x4057c6
  4057c3:	cmp    BYTE PTR [edx+0x16],ch
  4057c6:	shr    DWORD PTR [esi-0x37342f1e],0xb0
  4057cd:	jle    0x4057d1
  4057cf:	push   ds
  4057d0:	adc    dl,ch
  4057d2:	ss (bad) 
  4057d4:	dec    edx
  4057d5:	and    DWORD PTR [ebx+0x38],0x60
  4057d9:	call   0x1d3723d7
  4057de:	stos   DWORD PTR es:[edi],eax
  4057df:	out    dx,eax
  4057e0:	dec    eax
  4057e1:	test   DWORD PTR [ebp-0x6a],ebp
  4057e4:	jge    0x4057a1
  4057e6:	xor    DWORD PTR [edx-0x15],ecx
  4057e9:	test   al,0xd
  4057eb:	adc    ch,BYTE PTR [edx]
  4057ed:	xchg   edx,eax
  4057ee:	push   ds
  4057ef:	mov    WORD PTR [edi+ebx*4],?
  4057f2:	cmp    ecx,eax
  4057f4:	jbe    0x40582f
  4057f6:	dec    edi
  4057f7:	mov    edi,0xb6b4f0f1
  4057fc:	daa    
  4057fd:	imul   esi,DWORD PTR [eax-0x1d7187c5],0xffffffe4
  405804:	lds    esp,FWORD PTR [ebx-0x55]
  405807:	popa   
  405808:	(bad)  
  40580b:	or     DWORD PTR [ebx-0x30e8cb09],esp
  405811:	jmp    0x4057eb
  405813:	or     al,0x9
  405815:	or     BYTE PTR [ecx+0x77600e71],0x26
  40581c:	pop    ebx
  40581d:	xchg   esi,eax
  40581e:	loop   0x405871
  405820:	ret    0x61d
  405823:	cs repz and eax,0x8c0e3ebe
  40582a:	cmp    ah,dh
  40582c:	inc    ebx
  40582d:	fld    DWORD PTR [esi]
  40582f:	and    ebp,DWORD PTR [ecx+0x67]
  405832:	push   cs
  405833:	arpl   WORD PTR [edi-0x4d],bx
  405836:	adc    bl,BYTE PTR [eax+0xe]
  405839:	or     DWORD PTR [eiz*4+0x655ce650],0x64
  405841:	test   DWORD PTR [edx-0x195ba68],eax
  405847:	pusha  
  405848:	adc    al,0xe1
  40584a:	push   0xffffffa4
  40584c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40584d:	sbb    al,0x63
  40584f:	sahf   
  405850:	dec    edx
  405851:	pop    ecx
  405852:	or     edi,DWORD PTR [esi-0x67]
  405855:	cmp    ebp,DWORD PTR [esi+0x7d]
  405858:	mov    DWORD PTR [edi-0x35],edi
  40585b:	jle    0x405803
  40585d:	cmp    DWORD PTR [edi],edi
  40585f:	(bad)  
  405860:	loope  0x405866
  405862:	mov    bl,0x80
  405864:	pop    ss
  405865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405866:	rol    esp,1
  405868:	shl    BYTE PTR [edi],1
  40586a:	push   ebp
  40586b:	scas   eax,DWORD PTR es:[edi]
  40586c:	xchg   edi,eax
  40586d:	push   0x17b99371
  405872:	sub    al,0x46
  405874:	sub    al,0xf6
  405876:	jmp    DWORD PTR [ebx-0x7b37c817]
  40587c:	ja     0x40581a
  40587e:	mov    ds:0x1fa2d5dc,eax
  405883:	mov    cl,BYTE PTR [eax]
  405885:	stos   BYTE PTR es:[edi],al
  405886:	mov    esp,0xe2366d97
  40588b:	ret    
  40588c:	in     al,dx
  40588d:	imul   edi,ebx,0x4692ad3a
  405893:	addr16 mov ebx,0x2437e99e
  405899:	imul   esi,DWORD PTR [ecx+0x67],0x3d
  40589d:	jmp    0x54f758c7
  4058a2:	xchg   esi,eax
  4058a3:	iret   
  4058a4:	cdq    
  4058a5:	inc    DWORD PTR [ebx]
  4058a7:	or     BYTE PTR [edi],cl
  4058a9:	mov    ch,0x49
  4058ab:	(bad)  
  4058ac:	pop    eax
  4058ad:	cmp    bh,dh
  4058af:	xchg   ecx,eax
  4058b0:	outs   dx,BYTE PTR ds:[esi]
  4058b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b2:	pop    ebx
  4058b3:	push   0xffffff81
  4058b5:	int3   
  4058b6:	xor    edi,DWORD PTR [eax]
  4058b8:	lods   eax,DWORD PTR ds:[esi]
  4058b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ba:	add    BYTE PTR [ebx],dl
  4058bc:	xchg   esp,ecx
  4058be:	add    DWORD PTR [ebx],esp
  4058c0:	xchg   ebx,eax
  4058c1:	loope  0x40590d
  4058c3:	add    eax,DWORD PTR [esp+eiz*2+0xc]
  4058c7:	mov    ds:0x51d75da4,eax
  4058cc:	repnz inc ebp
  4058ce:	mov    al,0xe0
  4058d0:	lea    ecx,[ebx-0x31]
  4058d3:	jnp    0x40586c
  4058d5:	lock les esp,FWORD PTR [ecx]
  4058d8:	jmp    0x7190693d
  4058dd:	imul   edx,DWORD PTR [edi-0x6b],0xf26084c6
  4058e4:	(bad)  
  4058e5:	int    0x18
  4058e7:	and    eax,0x1c64616a
  4058ec:	dec    ecx
  4058ed:	arpl   WORD PTR [ebp-0x12],bx
  4058f0:	ins    DWORD PTR es:[edi],dx
  4058f1:	mov    eax,0x9146cfd
  4058f6:	jle    0x40593a
  4058f8:	pop    eax
  4058f9:	inc    edi
  4058fa:	xchg   ebp,eax
  4058fb:	daa    
  4058fc:	xor    al,0x85
  4058fe:	cmc    
  4058ff:	int3   
  405900:	rcl    DWORD PTR [esi],1
  405902:	je     0x405901
  405904:	add    eax,0x1cbbf66
  405909:	das    
  40590a:	jb     0x40589f
  40590c:	into   
  40590d:	and    edi,DWORD PTR [eax+0x1d3eaeb0]
  405913:	ret    0xa6f3
  405916:	out    0x27,eax
  405918:	aas    
  405919:	push   edx
  40591a:	push   ss
  40591b:	mov    esi,0xdf77ec1f
  405920:	leave  
  405921:	add    dh,ah
  405923:	push   ebp
  405924:	(bad)  
  405925:	out    dx,eax
  405926:	ret    0x2ed0
  405929:	nop
  40592a:	mov    eax,ds:0x8a7ad119
  40592f:	nop
  405930:	add    BYTE PTR [eax+0x73],dl
  405933:	ins    BYTE PTR es:[edi],dx
  405934:	outs   dx,DWORD PTR ds:[esi]
  405935:	in     al,0x48
  405937:	sub    ah,BYTE PTR [ecx+0x3]
  40593a:	mov    ch,0xe0
  40593c:	mov    edi,esp
  40593e:	out    0xe2,al
  405940:	in     eax,dx
  405941:	retf   
  405942:	aam    0x3b
  405944:	scas   al,BYTE PTR es:[edi]
  405945:	sar    BYTE PTR [ebx],0x68
  405948:	jnp    0x40592f
  40594a:	pop    edx
  40594b:	or     ch,BYTE PTR ds:0x2ffd2fb8
  405951:	ja     0x405914
  405953:	popf   
  405954:	nop
  405955:	cmp    DWORD PTR [eax-0x23],edx
  405958:	adc    al,0x54
  40595a:	mov    fs,WORD PTR [eax]
  40595c:	jno    0x405954
  40595e:	adc    ebx,DWORD PTR [ecx-0x167d015a]
  405964:	inc    esp
  405965:	inc    esi
  405966:	cwde   
  405967:	add    DWORD PTR [edx],0x4d
  40596a:	ret    0x6b4a
  40596d:	jl     0x405912
  40596f:	in     eax,0xed
  405971:	aas    
  405972:	pop    esp
  405973:	ss leave 
  405975:	cmp    eax,0xe6c3db1f
  40597a:	push   ecx
  40597b:	mov    edi,0x70f86591
  405980:	pop    ss
  405981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405982:	and    DWORD PTR [ebx-0x38c31888],ecx
  405988:	jmp    0x4e0d8219
  40598d:	cmp    esp,ecx
  40598f:	dec    edi
  405990:	mov    dl,0xaf
  405992:	sbb    eax,0x6e9bbf99
  405997:	mov    bh,0xbd
  405999:	hlt    
  40599a:	cmp    eax,0x753b8fc9
  40599f:	nop
  4059a0:	inc    esp
  4059a1:	mov    ch,0x73
  4059a3:	sub    edx,edx
  4059a5:	jg     0x405975
  4059a7:	cwde   
  4059a8:	repz pushf 
  4059aa:	pop    ds
  4059ab:	ror    BYTE PTR [eax+ebp*8+0x373b711e],cl
  4059b2:	fs out dx,eax
  4059b4:	mov    DWORD PTR [ebx+0x4],edi
  4059b7:	fdivr  st,st(3)
  4059b9:	in     eax,dx
  4059ba:	int    0x44
  4059bc:	lahf   
  4059bd:	xchg   esp,eax
  4059be:	nop
  4059bf:	lds    ebx,FWORD PTR [ecx-0x51]
  4059c2:	push   ss
  4059c3:	sahf   
  4059c4:	mov    dl,0x66
  4059c6:	hlt    
  4059c7:	(bad)  
  4059c8:	rcr    DWORD PTR ds:0x9bc5bd88,1
  4059ce:	fwait
  4059cf:	shl    BYTE PTR [eax-0x50],0x96
  4059d3:	(bad)  
  4059d4:	mov    al,ds:0x79291bdd
  4059d9:	cs ffreep st(2)
  4059dc:	push   edx
  4059dd:	mov    edi,esp
  4059df:	pop    esi
  4059e0:	ror    DWORD PTR ds:0xfdb6da19,0xa6
  4059e7:	call   0xfbb3:0x39149a46
  4059ee:	stos   DWORD PTR es:[edi],eax
  4059ef:	fs mov ebp,0xb215c8a8
  4059f5:	or     bl,BYTE PTR [esi]
  4059f7:	jle    0x405a1a
  4059f9:	int3   
  4059fa:	fs mov esi,0xfd5efc37
  405a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a01:	jge    0x4059e5
  405a03:	mov    bh,0x99
  405a05:	cdq    
  405a06:	ja     0x405a41
  405a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	out    dx,al
  405a0b:	add    BYTE PTR [ebp+0x3b],ah
  405a0e:	fwait
  405a0f:	add    al,0x4f
  405a11:	fsubr  st(6),st
  405a13:	dec    ebp
  405a14:	pop    esp
  405a15:	cmp    ebp,DWORD PTR [ebx]
  405a17:	jo     0x40599b
  405a19:	xor    eax,0xee82243e
  405a1e:	push   cs
  405a1f:	mov    dl,0x64
  405a21:	lods   al,BYTE PTR ds:[esi]
  405a22:	xchg   ecx,eax
  405a23:	mov    ebx,0xe2dec83a
  405a28:	mov    eax,DWORD PTR [edi+edi*2-0x101fa6d3]
  405a2f:	and    BYTE PTR [edi-0x6ffb5046],al
  405a35:	jne    0x405a8d
  405a37:	aaa    
  405a38:	xor    DWORD PTR [eax-0x48308e17],ebp
  405a3e:	push   ebp
  405a3f:	repz loopne 0x405a7b
  405a42:	enter  0x2843,0x94
  405a46:	call   0x8e51:0x23dbd737
  405a4d:	add    edi,DWORD PTR [ecx-0x1153e719]
  405a53:	inc    edx
  405a54:	or     dl,bl
  405a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a57:	jmp    0x402dc83c
  405a5c:	sbb    al,0xf0
  405a5e:	cmp    BYTE PTR [eax+0x1095157b],0x2e
  405a65:	adc    esi,DWORD PTR [ebx+0x11]
  405a68:	inc    eax
  405a69:	mov    ah,BYTE PTR [edx+0x2edc56ae]
  405a6f:	xor    al,0x8d
  405a71:	lea    eax,[esi]
  405a73:	ins    DWORD PTR es:[edi],dx
  405a74:	pop    ss
  405a75:	ja     0x405ab2
  405a77:	test   BYTE PTR [edx-0x35],dh
  405a7a:	imul   edi,DWORD PTR [ebp-0x361608c1],0xc79c0827
  405a84:	push   ecx
  405a85:	int3   
  405a86:	imul   eax,DWORD PTR [ebp-0x44abed16],0x69ec886
  405a90:	sbb    ah,cl
  405a92:	aas    
  405a93:	adc    eax,0x96d8541f
  405a98:	in     eax,0x76
  405a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a9b:	test   BYTE PTR [ebx+0x5f9ec1a2],0xb8
  405aa2:	rol    DWORD PTR [ecx],cl
  405aa4:	cs jno 0x405a57
  405aa7:	in     eax,0x1
  405aa9:	std    
  405aaa:	mov    ch,0xbd
  405aac:	sbb    al,0xb6
  405aae:	add    DWORD PTR [eax+0x2b],0x2f5e9d6f
  405ab5:	sub    DWORD PTR [ebp+0x5e],ebx
  405ab8:	lahf   
  405ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aba:	xor    al,0x8f
  405abc:	adc    eax,0xac503b24
  405ac1:	imul   ecx,eax,0x1e
  405ac4:	sbb    DWORD PTR [edx],0x59
  405ac7:	sbb    eax,0x7caa4de5
  405acc:	test   BYTE PTR [ecx+0xf],al
  405acf:	xor    BYTE PTR [ecx],bl
  405ad1:	fdivr  QWORD PTR [eax]
  405ad3:	jb     0x405a71
  405ad5:	ror    ebp,0xa0
  405ad8:	pop    edi
  405ad9:	retf   
  405ada:	xchg   esi,eax
  405adb:	(bad)  
  405adc:	and    BYTE PTR [ebx-0x70f53a8b],bh
  405ae2:	dec    ebp
  405ae3:	in     al,0x46
  405ae5:	push   ebp
  405ae6:	or     al,0x96
  405ae8:	imul   ebp,DWORD PTR [ebp+ebx*8-0x59f978a3],0x6e
  405af0:	imul   eax,DWORD PTR [edi],0xc4f4267b
  405af6:	dec    eax
  405af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af9:	push   esp
  405afa:	(bad)  
  405afb:	aad    0x3
  405afd:	jae    0x405b6e
  405aff:	leave  
  405b00:	les    edx,FWORD PTR [eax-0x52]
  405b03:	lods   al,BYTE PTR ds:[esi]
  405b04:	xor    esp,ebx
  405b06:	mov    esp,0xcf68a6c7
  405b0b:	test   eax,0x34c1f54f
  405b10:	cmp    eax,0xe436eba6
  405b15:	int    0xb2
  405b17:	leave  
  405b18:	in     al,dx
  405b19:	in     eax,dx
  405b1a:	iret   
  405b1b:	and    eax,DWORD PTR [eax]
  405b1d:	xlat   BYTE PTR ds:[ebx]
  405b1e:	push   esi
  405b1f:	push   ebx
  405b20:	ja     0x405b7f
  405b22:	and    bh,BYTE PTR [ebp-0x387e346b]
  405b28:	adc    dl,BYTE PTR [edi+0xbe0e96d]
  405b2e:	jbe    0x405b75
  405b30:	sbb    al,0xb4
  405b32:	in     eax,0x8e
  405b34:	sbb    bh,ch
  405b36:	sub    BYTE PTR [eax-0x6f],dh
  405b39:	adc    DWORD PTR [esi],0x4e649a6a
  405b3f:	add    eax,0xb0d9e9ea
  405b44:	neg    BYTE PTR [edi-0x1f]
  405b47:	dec    eax
  405b48:	sbb    bl,cl
  405b4a:	fcmovnb st,st(7)
  405b4c:	pop    esp
  405b4d:	test   DWORD PTR [eax+0x62],ebx
  405b50:	and    BYTE PTR [ecx-0x730aae9e],dh
  405b56:	push   0x48c79396
  405b5b:	dec    eax
  405b5c:	popf   
  405b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b5e:	jge    0x405ba9
  405b60:	xchg   DWORD PTR [ecx],edx
  405b62:	and    BYTE PTR [edx-0x6b28b2bf],bh
  405b68:	(bad)  
  405b69:	sbb    ch,BYTE PTR [esi+edi*1+0x585e4981]
  405b70:	dec    edi
  405b71:	popa   
  405b72:	sub    al,0xb4
  405b74:	aad    0xe9
  405b76:	test   eax,0x7bd78f3a
  405b7b:	mov    WORD PTR [ebx-0x1a877f8],fs
  405b81:	add    bh,BYTE PTR [ecx+0x7d]
  405b84:	dec    esp
  405b85:	scas   eax,DWORD PTR es:[edi]
  405b86:	lods   al,BYTE PTR ds:[esi]
  405b87:	icebp  
  405b88:	sub    eax,0x1806f770
  405b8d:	lock in eax,dx
  405b8f:	push   ebx
  405b90:	push   esp
  405b91:	(bad)  
  405b92:	and    ch,BYTE PTR [eax-0x78b371de]
  405b98:	retf   
  405b99:	mov    esi,eax
  405b9b:	and    esi,ebx
  405b9d:	push   esp
  405b9e:	call   0x5dc3:0x215fd6df
  405ba5:	mov    edx,0x54291cc
  405baa:	fcmovne st,st(1)
  405bac:	and    esp,DWORD PTR [ebp-0x5b]
  405baf:	lds    edi,FWORD PTR [esi+0x20]
  405bb2:	(bad)  
  405bb3:	fcom   QWORD PTR [edi]
  405bb5:	dec    esp
  405bb6:	fdivr  st(0),st
  405bb8:	jne    0x405bb6
  405bba:	mov    eax,0x2a2f5ddc
  405bbf:	jmp    0xc079:0x85b66916
  405bc6:	sub    dh,cl
  405bc8:	iret   
  405bc9:	and    BYTE PTR [ebx+0x4ccbe478],dh
  405bcf:	mov    al,0x57
  405bd1:	std    
  405bd2:	push   ss
  405bd3:	dec    ebp
  405bd4:	jle    0x405be2
  405bd6:	jge    0x405bea
  405bd8:	sub    al,0x6f
  405bda:	gs in  eax,dx
  405bdc:	ret    
  405bdd:	mov    ah,0x33
  405bdf:	mov    esi,0x9e99442a
  405be4:	test   BYTE PTR [edi-0x7121d275],cl
  405bea:	jae    0x405be8
  405bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bed:	lock rol BYTE PTR fs:[ecx+0xe],0x87
  405bf3:	stos   DWORD PTR es:[edi],eax
  405bf4:	stos   BYTE PTR es:[edi],al
  405bf5:	jecxz  0x405bb7
  405bf7:	stc    
  405bf8:	inc    eax
  405bf9:	fwait
  405bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfb:	jmp    0x10a5aaf3
  405c00:	cli    
  405c01:	xor    al,0x6f
  405c03:	aam    0x77
  405c05:	push   ss
  405c06:	jmp    0xe38a755f
  405c0b:	xchg   esp,eax
  405c0c:	xchg   ebx,eax
  405c0d:	pop    es
  405c0e:	sub    eax,edi
  405c10:	inc    ecx
  405c11:	ins    DWORD PTR es:[edi],dx
  405c12:	mov    eax,0x7753d075
  405c17:	inc    esi
  405c18:	cwde   
  405c19:	add    DWORD PTR [ebp-0x74393e70],esi
  405c1f:	inc    edx
  405c20:	out    dx,eax
  405c21:	in     al,0x96
  405c23:	loop   0x405bd1
  405c25:	inc    ebx
  405c26:	pop    ss
  405c27:	inc    ecx
  405c28:	add    edi,DWORD PTR [eax-0x68]
  405c2b:	inc    edi
  405c2c:	add    al,0x9f
  405c2e:	mov    eax,ds:0x377c9c3c
  405c33:	into   
  405c34:	sahf   
  405c35:	cdq    
  405c36:	imul   ebx,DWORD PTR [ebx+0x3d9c2693],0xc51a830
  405c40:	(bad)  
  405c41:	ins    DWORD PTR es:[edi],dx
  405c42:	pop    esp
  405c43:	push   ecx
  405c44:	mov    ebx,es
  405c46:	ret    
  405c47:	cs out 0x4e,eax
  405c4a:	mov    eax,ds:0x421ae2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	jmp    0x4062fd
  40635c:	rol    dh,0x38
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	(bad)  
  406366:	lock cmp esi,DWORD PTR [esi-0x77bb10be]
  40636d:	lds    ebx,FWORD PTR [eax+0x75c70cec]
  406373:	out    dx,al
  406374:	xchg   ecx,eax
  406375:	pop    ss
  406376:	imul   BYTE PTR [edi+eax*2]
  406379:	cli    
  40637a:	icebp  
  40637b:	push   ss
  40637c:	dec    edi
  40637d:	dec    BYTE PTR [esi]
  40637f:	or     BYTE PTR [edi-0x57],0x79
  406383:	dec    edi
  406384:	push   cs
  406385:	and    bh,bl
  406387:	push   ecx
  406388:	in     eax,0xb2
  40638a:	cmp    al,0xa2
  40638c:	lahf   
  40638d:	(bad)  
  40638e:	call   0xd054fb85
  406393:	push   cs
  406394:	jnp    0x40633f
  406396:	inc    ebx
  406397:	jo     0x406363
  406399:	push   es
  40639a:	mov    al,0x0
  40639c:	mov    edx,0x6707492f
  4063a1:	pop    edi
  4063a2:	cmp    al,0x76
  4063a4:	mov    DWORD PTR [edi-0x57],esp
  4063a7:	or     bh,cl
  4063a9:	pop    ebp
  4063aa:	call   0xea516b1c
  4063af:	mov    al,0xf1
  4063b1:	stos   DWORD PTR es:[edi],eax
  4063b2:	xor    BYTE PTR [edi-0x2d],ah
  4063b5:	shl    DWORD PTR [eax-0x40],0xa8
  4063b9:	mov    gs,WORD PTR [edi-0x7258ab95]
  4063bf:	adc    al,0xae
  4063c1:	pop    ebp
  4063c2:	ds into 
  4063c4:	jmp    0x6524:0xed52a589
  4063cb:	mov    ah,0x5a
  4063cd:	mov    edi,esi
  4063cf:	add    al,0x3e
  4063d1:	cli    
  4063d2:	rcr    DWORD PTR [eax+0x336c6882],1
  4063d8:	daa    
  4063d9:	mov    esi,0xdb9d4f80
  4063de:	iret   
  4063df:	dec    edi
  4063e0:	or     bl,al
  4063e2:	xor    ecx,DWORD PTR [ebx]
  4063e4:	jbe    0x406434
  4063e6:	(bad)  
  4063e7:	pop    eax
  4063e8:	ror    DWORD PTR [ecx-0x78],0xab
  4063ec:	adc    al,0xfa
  4063ee:	push   ss
  4063ef:	jg     0x406409
  4063f1:	test   al,0xe4
  4063f3:	cmp    eax,0xfc31bb3e
  4063f8:	inc    eax
  4063f9:	int3   
  4063fa:	loop   0x406459
  4063fc:	bound  eax,QWORD PTR [edx-0x1]
  4063ff:	sahf   
  406400:	and    eax,0x3d19fa2f
  406405:	in     eax,dx
  406406:	push   ss
  406407:	pushf  
  406408:	push   0x4b
  40640a:	mov    bh,0x47
  40640c:	dec    edx
  40640d:	retf   0x3675
  406410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406411:	cmc    
  406412:	push   cs
  406413:	daa    
  406414:	mov    bh,ah
  406416:	loopne 0x406478
  406418:	pop    es
  406419:	mov    esp,ebx
  40641b:	test   eax,ebx
  40641d:	cmp    eax,0x674ad599
  406422:	popf   
  406423:	xchg   BYTE PTR [edi-0x6c49bffe],ah
  406429:	std    
  40642a:	xchg   ecx,eax
  40642b:	out    dx,al
  40642c:	mov    ds:0xd27232d3,al
  406431:	in     al,dx
  406432:	in     eax,dx
  406433:	(bad)  
  406434:	sti    
  406435:	outs   dx,DWORD PTR ds:[esi]
  406436:	and    eax,0x6282cb6d
  40643b:	gs jne 0x40643d
  40643e:	nop
  40643f:	out    dx,eax
  406440:	xor    esi,edx
  406442:	out    dx,al
  406443:	dec    BYTE PTR [edx+0x341b369c]
  406449:	into   
  40644a:	into   
  40644b:	or     DWORD PTR [ebp-0x567e14f],eax
  406451:	mov    al,ds:0xe2ce2e51
  406456:	bound  ebp,QWORD PTR [eax+0x68]
  406459:	add    BYTE PTR [edi-0x21],ch
  40645c:	xor    BYTE PTR [ebp-0x27266df6],ah
  406462:	pop    esi
  406463:	in     al,0xab
  406465:	cld    
  406466:	mov    es,WORD PTR [ebp+ebp*4-0x22]
  40646a:	mov    ch,0xf4
  40646c:	je     0x40648d
  40646e:	jle    0x40645c
  406470:	inc    eax
  406471:	push   esp
  406472:	out    0x4c,eax
  406474:	shr    BYTE PTR [esi-0x3d],0x5b
  406478:	xlat   BYTE PTR ds:[ebx]
  406479:	fcomp  DWORD PTR ds:0xdb53adfe
  40647f:	repnz or DWORD PTR [edx-0x779c3e11],0x1b08e434
  40648a:	sbb    al,0xb4
  40648c:	sbb    al,0xa0
  40648e:	cdq    
  40648f:	push   esi
  406490:	popa   
  406491:	inc    esi
  406492:	jae    0x4064fc
  406494:	xchg   esp,eax
  406495:	mov    cl,0xbb
  406497:	push   edx
  406498:	dec    esp
  406499:	rol    bl,0x30
  40649c:	enter  0x37f4,0xe8
  4064a0:	mov    ebx,0x5e032d7d
  4064a5:	add    BYTE PTR [ecx],dl
  4064a7:	xchg   esp,eax
  4064a8:	lods   eax,DWORD PTR ds:[esi]
  4064a9:	sbb    al,0x23
  4064ab:	pop    ecx
  4064ac:	mov    ebp,0xe8c734e1
  4064b1:	es inc edi
  4064b3:	mov    ebp,0x23bbee48
  4064b8:	stos   DWORD PTR es:[edi],eax
  4064b9:	fcmove st,st(6)
  4064bb:	or     ebx,DWORD PTR ds:0x85fe6246
  4064c1:	fisttp QWORD PTR [ecx]
  4064c3:	popf   
  4064c4:	mov    ds:0xb8792d8d,eax
  4064c9:	aam    0x6d
  4064cb:	dec    esp
  4064cc:	into   
  4064cd:	icebp  
  4064ce:	mov    eax,0x67b12615
  4064d3:	push   es
  4064d4:	xbegin 0x62411f8b
  4064da:	clc    
  4064db:	add    esp,ecx
  4064dd:	in     eax,0x49
  4064df:	mov    ebp,0x95dadc99
  4064e4:	add    DWORD PTR [eax],ebx
  4064e6:	shl    BYTE PTR [ecx],cl
  4064e8:	jp     0x406483
  4064ea:	xchg   BYTE PTR [eax+0x3b],dl
  4064ed:	jge    0x4064bc
  4064ef:	mov    edi,0x2ef57186
  4064f4:	xor    ah,BYTE PTR [eax-0x26]
  4064f7:	sub    DWORD PTR [ecx-0x7b8225d4],ecx
  4064fd:	add    eax,0xdc015b8d
  406502:	cs scas al,BYTE PTR es:[edi]
  406504:	lea    eax,[ebx-0xc]
  406507:	call   DWORD PTR [eax-0x2f]
  40650a:	lods   eax,DWORD PTR ds:[esi]
  40650b:	xor    dh,dh
  40650d:	bound  esp,QWORD PTR [ebp-0x783649de]
  406513:	jns    0x40650a
  406515:	mov    eax,ds:0x9f3c480f
  40651a:	or     eax,0xcecfc928
  40651f:	dec    esp
  406520:	dec    ebx
  406521:	sub    DWORD PTR [ecx+0x2aaa6c96],edx
  406527:	cmp    DWORD PTR [edx],edx
  406529:	xlat   BYTE PTR ds:[ebx]
  40652a:	outs   dx,DWORD PTR ds:[esi]
  40652b:	push   ebp
  40652c:	mov    ebx,0xeff556a2
  406531:	xor    BYTE PTR [edi],bh
  406533:	mov    ds:0x5a6f5771,al
  406538:	xor    eax,0xf87a0782
  40653d:	sbb    eax,0xeb57d38
  406542:	mov    BYTE PTR [ebp-0x4c7fc12a],cl
  406548:	or     bl,BYTE PTR [ebx]
  40654a:	push   edi
  40654b:	cmp    cl,BYTE PTR ds:0x256cba1d
  406551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406552:	adc    WORD PTR [ebx-0x746b1964],dx
  406559:	jge    0x406540
  40655b:	(bad)  
  40655d:	repnz stos BYTE PTR es:[edi],al
  40655f:	psubw  mm7,QWORD PTR [edi-0x28d60742]
  406566:	es adc al,0xef
  406569:	sub    BYTE PTR [eax-0x2ec83b08],al
  40656f:	fs mov dl,0x0
  406572:	loope  0x40658c
  406574:	xchg   ebp,eax
  406575:	test   DWORD PTR [ecx+0xa7c41],0xb3d9679f
  40657f:	xor    al,0x16
  406581:	adc    bl,BYTE PTR [ebx+ecx*2]
  406584:	ds addr16 std 
  406587:	inc    esp
  406588:	nop
  406589:	dec    eax
  40658a:	ret    0x5fb4
  40658d:	inc    ebx
  40658e:	(bad)  
  40658f:	jbe    0x4065bb
  406591:	sbb    al,0x37
  406593:	dec    ebp
  406594:	sbb    al,BYTE PTR [ebp+0x57]
  406597:	addr16 jno 0x40654d
  40659a:	mov    ch,0x9b
  40659c:	stc    
  40659d:	cdq    
  40659e:	ret    
  40659f:	(bad)  
  4065a0:	pop    ebx
  4065a1:	in     al,dx
  4065a2:	inc    ecx
  4065a3:	push   ds
  4065a4:	xchg   ecx,eax
  4065a5:	add    dl,BYTE PTR [edi+0x6d]
  4065a8:	sub    DWORD PTR [ecx+0x3a2f7a24],edx
  4065ae:	xlat   BYTE PTR ds:[ebx]
  4065af:	cmp    al,0xde
  4065b1:	cmp    DWORD PTR [edx+0x70],0x14efcc7e
  4065b8:	aam    0xc1
  4065ba:	test   al,0x4d
  4065bc:	out    0xea,eax
  4065be:	adc    DWORD PTR [esi-0x7f],esp
  4065c1:	xor    ah,cl
  4065c3:	adc    ecx,DWORD PTR [ebx]
  4065c5:	push   eax
  4065c6:	outs   dx,BYTE PTR ds:[esi]
  4065c7:	inc    al
  4065c9:	add    DWORD PTR [edi+0x15c722dd],0x2e24c918
  4065d3:	dec    edx
  4065d4:	into   
  4065d5:	and    ebx,DWORD PTR [ecx+0x39]
  4065d8:	das    
  4065d9:	jmp    0xe49e1e49
  4065de:	cmc    
  4065df:	jns    0x406628
  4065e1:	xchg   esi,eax
  4065e2:	push   0xcf86ed2c
  4065e7:	cmc    
  4065e8:	lods   al,BYTE PTR ds:[esi]
  4065ea:	lock in eax,0x8f
  4065ed:	clc    
  4065ee:	in     al,0xf9
  4065f0:	inc    edx
  4065f1:	rol    BYTE PTR [edx-0x1e],0xa7
  4065f5:	shl    DWORD PTR [ebx+edx*4+0x68],1
  4065f9:	and    bh,BYTE PTR [ebx]
  4065fb:	mul    esi
  4065fd:	inc    esp
  4065fe:	jne    0x4065e5
  406600:	sub    al,0x19
  406602:	mov    bh,0xe6
  406604:	pushf  
  406605:	sbb    al,0x50
  406607:	call   0x9a6e:0x7bf4a869
  40660e:	test   BYTE PTR [ecx-0xdeb865c],ah
  406614:	pusha  
  406615:	jmp    0xad32ea94
  40661a:	push   0x442b2c37
  40661f:	push   edx
  406620:	repnz add eax,0x7647787b
  406626:	mov    al,0x1c
  406628:	jno    0x40662e
  40662a:	imul   ecx,DWORD PTR [esi-0x6fd01646],0xffffffd6
  406631:	nop
  406632:	repz sub BYTE PTR ds:0xb1e8b182,bl
  406639:	jbe    0x40661c
  40663b:	sbb    DWORD PTR [edi],edx
  40663d:	rol    DWORD PTR [esi-0x7a],1
  406640:	sub    al,dl
  406642:	mov    dh,0xc3
  406644:	fld    DWORD PTR [edi+0x573b201a]
  40664a:	ss push 0xffffffd8
  40664d:	ret    
  40664e:	add    BYTE PTR [edi],ch
  406650:	call   0x95250097
  406655:	mov    esi,0xf71baca2
  40665b:	xor    esp,DWORD PTR [esi+0x3]
  40665e:	or     DWORD PTR [eax+0x7111267b],edx
  406664:	and    bl,dh
  406666:	and    BYTE PTR [edi],dh
  406668:	xchg   edx,eax
  406669:	pop    ecx
  40666a:	ins    BYTE PTR es:[edi],dx
  40666b:	ja     0x406607
  40666d:	mov    DWORD PTR [ecx],edi
  40666f:	loop   0x40661a
  406671:	imul   ebx,DWORD PTR [edx],0xffffff9d
  406674:	shl    esp,1
  406676:	daa    
  406677:	xchg   edx,eax
  406678:	ins    BYTE PTR es:[edi],dx
  406679:	jnp    0x406645
  40667b:	mov    eax,ds:0x93c21caa
  406680:	lea    esp,[esi+0x285f385f]
  406686:	std    
  406687:	lods   al,BYTE PTR ds:[esi]
  406688:	sub    dl,BYTE PTR [edx]
  40668a:	or     DWORD PTR [eax],0x33dea5c0
  406690:	push   ebp
  406691:	pop    esp
  406692:	jbe    0x40664f
  406694:	push   edx
  406695:	cs jae 0x4066d0
  406698:	sahf   
  406699:	lock retf 0xba67
  40669d:	dec    edx
  40669e:	sar    esi,0x27
  4066a1:	je     0x4066db
  4066a3:	sbb    al,0xf1
  4066a5:	dec    edx
  4066a6:	sub    DWORD PTR [edx+0x6a],esi
  4066a9:	sti    
  4066aa:	arpl   WORD PTR [ecx-0x18],sp
  4066ad:	sbb    ebp,DWORD PTR [ecx+0x5a]
  4066b0:	push   cs
  4066b1:	rcr    DWORD PTR [esi-0x297e9f2d],0x16
  4066b8:	(bad)  
  4066ba:	jp     0x4066e3
  4066bc:	shl    BYTE PTR [edx-0x3f2b49dc],0x87
  4066c3:	iret   
  4066c4:	dec    eax
  4066c5:	add    dl,BYTE PTR gs:[edx+0x622bd40e]
  4066cc:	ins    BYTE PTR es:[edi],dx
  4066cd:	sbb    cl,cl
  4066cf:	cmp    esi,edx
  4066d1:	sub    edx,edi
  4066d3:	in     eax,dx
  4066d4:	sbb    eax,ebx
  4066d6:	div    BYTE PTR [edx]
  4066d8:	add    al,0x60
  4066da:	shl    DWORD PTR [ecx-0x57],0x6f
  4066de:	add    bl,BYTE PTR [edx-0x75e95249]
  4066e4:	jle    0x4066d6
  4066e6:	mul    DWORD PTR [ecx]
  4066e8:	or     ebp,DWORD PTR cs:[eax]
  4066eb:	loop   0x40668f
  4066ed:	cmp    BYTE PTR [eax+0x3d1e6cd8],dl
  4066f3:	push   ecx
  4066f4:	or     DWORD PTR [edi],0x7f
  4066f7:	push   ecx
  4066f8:	push   ss
  4066f9:	and    eax,DWORD PTR [edx+0x992c819]
  4066ff:	dec    eax
  406700:	cld    
  406701:	ret    0xfe09
  406704:	push   eax
  406705:	not    BYTE PTR [edx-0x1ed3e8e8]
  40670b:	out    dx,al
  40670c:	cmp    eax,0xa1600acd
  406711:	or     dl,BYTE PTR [ecx-0x4e063e25]
  406717:	adc    ecx,DWORD PTR cs:[ebx]
  40671a:	mov    bl,0x64
  40671c:	ret    
  40671d:	repz imul ebp,DWORD PTR [eax],0xbce66eaa
  406724:	xchg   ecx,eax
  406725:	sbb    BYTE PTR [ebx+0x30662fd5],cl
  40672b:	stos   BYTE PTR es:[edi],al
  40672c:	dec    eax
  40672d:	dec    edx
  40672e:	mov    al,BYTE PTR [esp+ebx*4]
  406731:	cwde   
  406732:	stc    
  406733:	lods   al,BYTE PTR ds:[esi]
  406734:	mov    ecx,0x7687541b
  406739:	inc    ecx
  40673a:	jnp    0x40670a
  40673c:	push   ebp
  40673d:	add    ch,BYTE PTR [ebp+0x2b]
  406740:	cwde   
  406741:	nop
  406742:	sub    eax,0x31556bd6
  406747:	or     BYTE PTR [esi-0x32],cl
  40674a:	test   DWORD PTR [edx+0x619fc21],ecx
  406750:	shl    DWORD PTR [ebx-0x4c],cl
  406753:	sub    DWORD PTR [ecx-0x4d7bf104],ebp
  406759:	inc    edx
  40675a:	clc    
  40675b:	xchg   ebp,eax
  40675c:	or     al,BYTE PTR [ecx-0x36]
  40675f:	jecxz  0x4067c8
  406761:	xchg   ebx,eax
  406762:	fs fisttp WORD PTR ds:[edx-0x6260e1d5]
  40676a:	inc    ebp
  40676b:	loope  0x406727
  40676d:	(bad)  
  40676e:	scas   eax,DWORD PTR es:[edi]
  40676f:	pusha  
  406770:	ror    DWORD PTR [eax+0x6a8c60dd],cl
  406776:	rcl    cl,cl
  406778:	ds pop edi
  40677a:	lds    edx,FWORD PTR [eax+0x2a]
  40677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40677e:	push   es
  40677f:	xor    eax,0xffd946cf
  406784:	or     eax,esp
  406786:	pop    ds
  406787:	rcl    DWORD PTR [ebx-0x56635941],1
  40678d:	push   ebp
  40678e:	mov    WORD PTR [edx],gs
  406790:	or     eax,0x87898e87
  406795:	sub    eax,0x7f0d7f7a
  40679a:	in     al,dx
  40679b:	jb     0x4067db
  40679d:	jmp    0x24a496e8
  4067a2:	jecxz  0x406726
  4067a4:	lahf   
  4067a5:	imul   esp,ebp,0xacae5126
  4067ab:	(bad)  
  4067ac:	lock cmp DWORD PTR [edi],0x41
  4067b0:	sub    eax,0x6d381bbb
  4067b5:	push   edi
  4067b6:	jmp    FWORD PTR [ebx]
  4067b8:	out    dx,al
  4067b9:	jecxz  0x40674b
  4067bb:	(bad)  
  4067bc:	int3   
  4067bd:	sar    esi,1
  4067bf:	push   ebx
  4067c0:	jbe    0x40681c
  4067c2:	mov    ch,0xaa
  4067c4:	ins    DWORD PTR es:[edi],dx
  4067c5:	jmp    0xa118:0xd8668205
  4067cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067cd:	(bad)  
  4067ce:	popa   
  4067cf:	ins    BYTE PTR es:[edi],dx
  4067d0:	fnstcw WORD PTR [eax-0x1f]
  4067d3:	popa   
  4067d4:	xchg   edx,eax
  4067d5:	(bad)  [edx-0x3c]
  4067d8:	das    
  4067d9:	fwait
  4067da:	mov    eax,ds:0xedc2242e
  4067df:	mov    al,ds:0x76b6f8d4
  4067e4:	jbe    0x4067e9
  4067e6:	jge    0x406810
  4067e8:	cmp    al,0x27
  4067ea:	mov    BYTE PTR [edi],0xa
  4067ed:	addr16 jle 0x40682e
  4067f0:	ins    DWORD PTR es:[edi],dx
  4067f1:	test   DWORD PTR [ebx+0x41],ebp
  4067f4:	pop    esi
  4067f5:	cdq    
  4067f6:	(bad)  
  4067f7:	jb     0x4067ee
  4067f9:	push   esp
  4067fa:	jnp    0x406835
  4067fc:	lods   al,BYTE PTR ds:[esi]
  4067fd:	dec    esi
  4067fe:	mov    al,ds:0x87e8c6f6
  406803:	aam    0xeb
  406805:	xor    ch,BYTE PTR [edx+edi*8+0x5f]
  406809:	mov    ?,WORD PTR ds:0x3fe0dace
  40680f:	mov    ch,0x9d
  406811:	xchg   BYTE PTR [eax+0x54],al
  406814:	push   0xffffffec
  406816:	call   0x16dd:0x6337e9b2
  40681d:	out    dx,eax
  40681e:	pop    eax
  40681f:	xor    eax,eax
  406821:	sbb    eax,edx
  406823:	cmp    esp,DWORD PTR [eax-0x13372fed]
  406829:	(bad)  
  40682a:	mov    ebp,edi
  40682c:	mov    ds:0xbdaff148,eax
  406831:	lods   eax,DWORD PTR ds:[esi]
  406832:	adc    ecx,ebx
  406834:	out    dx,al
  406835:	(bad)
  406838:	adc    BYTE PTR [ebp+0x4a],cl
  40683b:	hlt    
  40683c:	in     al,0x5b
  40683e:	retf   
  40683f:	dec    esp
  406840:	outs   dx,DWORD PTR ds:[esi]
  406841:	mov    ebx,0xb0f8e671
  406846:	jns    0x40687a
  406848:	scas   al,BYTE PTR es:[edi]
  406849:	dec    ebp
  40684a:	sub    cl,dl
  40684c:	stc    
  40684d:	adc    BYTE PTR ds:0x8f2ffbc8,dh
  406853:	or     BYTE PTR [ebp+0x6ffa20ed],bh
  406859:	mov    ebp,0xf3fe614d
  40685e:	cmp    cl,bl
  406860:	out    0x6,eax
  406862:	sub    edi,DWORD PTR [eax+0x69062634]
  406868:	(bad)  
  406869:	xchg   ebx,eax
  40686a:	ret    
  40686b:	mov    eax,0xc1bdfb02
  406870:	into   
  406871:	xchg   ecx,eax
  406872:	and    edx,esi
  406874:	mov    eax,ds:0x51211243
  406879:	lock cmp DWORD PTR [esi-0x1539d44a],0xffffffe4
  406881:	pop    eax
  406882:	pop    esi
  406883:	mov    ax,ds:0x449839e
  406889:	fs push es
  40688b:	add    edx,eax
  40688d:	push   cs
  40688e:	sar    BYTE PTR [eax],1
  406890:	mov    dl,0x76
  406892:	test   al,0xd6
  406894:	push   0xfa13c0d3
  406899:	dec    ebx
  40689a:	lock add BYTE PTR [esi-0x2328fee7],0x55
  4068a2:	sbb    DWORD PTR [ebx-0x71],0xffffffae
  4068a6:	mov    bh,bh
  4068a8:	add    esp,DWORD PTR [ebx-0x1daaf46e]
  4068ae:	cmp    dl,BYTE PTR [ecx-0x64eda03]
  4068b4:	sbb    BYTE PTR [edi-0x22],cl
  4068b7:	ss popa 
  4068b9:	ins    DWORD PTR es:[edi],dx
  4068ba:	daa    
  4068bb:	stos   BYTE PTR es:[edi],al
  4068bc:	lea    edi,[edx+0x3eb1470c]
  4068c2:	pop    ecx
  4068c3:	out    dx,eax
  4068c4:	in     al,dx
  4068c5:	pop    ds
  4068c6:	out    0xaa,eax
  4068c8:	mov    al,0x71
  4068ca:	add    eax,0xcee00475
  4068cf:	xor    ch,BYTE PTR [edi+0x16]
  4068d2:	dec    esp
  4068d3:	pop    ds
  4068d4:	es (bad) 
  4068d6:	loopne 0x40691f
  4068d8:	fld    QWORD PTR [ecx+0x6482873a]
  4068de:	jns    0x406874
  4068e0:	stos   DWORD PTR es:[edi],eax
  4068e1:	and    bh,BYTE PTR [edx+0x7bb1891]
  4068e7:	cld    
  4068e8:	punpckhwd mm6,QWORD PTR [eax]
  4068eb:	fadd   DWORD PTR [edx+0x4c]
  4068ee:	loope  0x4068ba
  4068f0:	adc    DWORD PTR [ebx],0xfffffff3
  4068f3:	enter  0xc0e6,0xdc
  4068f7:	ins    DWORD PTR es:[edi],dx
  4068f8:	pop    es
  4068f9:	stc    
  4068fa:	add    eax,0x9861fd6
  4068ff:	and    dh,BYTE PTR [edx-0x611261e9]
  406905:	pusha  
  406906:	test   BYTE PTR [esi],ch
  406908:	dec    esp
  406909:	mov    edi,0xe65b1015
  40690e:	jg     0x40690b
  406910:	shrd   DWORD PTR [esi],edx,cl
  406913:	and    ch,BYTE PTR [edx-0x64]
  406916:	push   ebp
  406917:	inc    esi
  406918:	in     al,dx
  406919:	outs   dx,DWORD PTR ds:[esi]
  40691a:	jle    0x406913
  40691c:	jno    0x4068fa
  40691e:	mov    ch,BYTE PTR [esi]
  406920:	adc    al,0x56
  406922:	inc    ebx
  406923:	sbb    eax,0xfa473688
  406928:	mov    dl,0x8d
  40692a:	pop    ds
  40692b:	dec    ebp
  40692c:	adc    dh,BYTE PTR [esi+eax*1+0x6]
  406930:	stos   BYTE PTR es:[edi],al
  406931:	xor    esi,DWORD PTR [eax+0x4fca7548]
  406937:	loop   0x406988
  406939:	add    dh,BYTE PTR ds:0xa8555416
  40693f:	jp     0x4068e4
  406941:	jmp    0x83ac:0xd6ccd21f
  406948:	jb     0x4068d0
  40694a:	xchg   esp,eax
  40694b:	inc    ebp
  40694c:	test   al,0xff
  40694e:	into   
  40694f:	xor    ch,BYTE PTR [esi]
  406951:	ret    
  406952:	fnstsw WORD PTR cs:[esi]
  406955:	or     DWORD PTR [ecx],0xffffffb0
  406958:	push   edx
  406959:	(bad)  [esi]
  40695b:	add    al,0x22
  40695d:	cdq    
  40695e:	aas    
  40695f:	jmp    0xb1b6421c
  406964:	mov    ebp,0x95d0f381
  406969:	pop    edi
  40696a:	add    al,0x48
  40696c:	aaa    
  40696d:	jae    0x40694b
  40696f:	int    0xf3
  406971:	in     eax,dx
  406972:	lods   eax,DWORD PTR ds:[esi]
  406973:	in     al,0x81
  406975:	jecxz  0x4069d5
  406977:	test   DWORD PTR [ebp+ebp*1-0x3d90d009],esi
  40697e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40697f:	aam    0x1d
  406981:	pushf  
  406982:	mov    cl,0x4a
  406984:	into   
  406985:	or     dl,BYTE PTR [edx]
  406987:	ins    DWORD PTR es:[edi],dx
  406988:	jns    0x40690c
  40698a:	dec    eax
  40698b:	cmp    DWORD PTR [ebx-0x12],0x4a25f41e
  406992:	pop    ds
  406993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406994:	inc    esp
  406995:	stos   BYTE PTR es:[edi],al
  406996:	iret   
  406997:	out    0x41,eax
  406999:	jmp    0x7806e57b
  40699e:	pop    edx
  40699f:	dec    esp
  4069a0:	les    edi,FWORD PTR [edx+0x710c00ea]
  4069a6:	ins    BYTE PTR es:[edi],dx
  4069a7:	nop
  4069a8:	and    ebx,ebp
  4069aa:	aaa    
  4069ab:	inc    ebp
  4069ac:	jmp    0x48116b0d
  4069b1:	push   0x157ac033
  4069b6:	add    al,0x97
  4069b8:	mov    dl,0xf5
  4069ba:	sti    
  4069bb:	rol    BYTE PTR [edi+edi*1+0x24],cl
  4069bf:	fbld   TBYTE PTR [ebp+0x309afd0f]
  4069c5:	loop   0x40698a
  4069c7:	fwait
  4069c8:	bound  esi,QWORD PTR [edi]
  4069ca:	sahf   
  4069cb:	adc    BYTE PTR [ebx],ch
  4069cd:	loop   0x40699d
  4069cf:	or     BYTE PTR [ecx-0x2a],dh
  4069d2:	or     edi,DWORD PTR ds:0x5c7d797a
  4069d8:	addr16 cwde 
  4069da:	xchg   esi,eax
  4069db:	adc    al,0x9c
  4069dd:	xor    cl,BYTE PTR [edx-0x78]
  4069e0:	xchg   BYTE PTR [eax+0x69],cl
  4069e3:	push   cs
  4069e4:	pop    eax
  4069e5:	aad    0xc2
  4069e7:	sahf   
  4069e8:	arpl   WORD PTR [eax+0x39],bp
  4069eb:	xchg   DWORD PTR [edx-0x23873337],ebp
  4069f1:	dec    esi
  4069f2:	cmova  ebp,DWORD PTR [ebp+0x6323fbce]
  4069f9:	pushf  
  4069fa:	dec    ebp
  4069fb:	dec    esi
  4069fc:	xchg   ecx,eax
  4069fd:	(bad)  
  4069fe:	loope  0x406a20
  406a00:	out    dx,eax
  406a01:	jbe    0x406a4e
  406a03:	daa    
  406a04:	mov    dh,BYTE PTR [ecx+eax*1]
  406a07:	add    dh,ah
  406a09:	rcr    BYTE PTR [edi],1
  406a0b:	or     al,0x56
  406a0d:	add    al,0xfa
  406a0f:	(bad)  
  406a10:	mov    cr4,edi
  406a13:	push   ebx
  406a14:	pop    esp
  406a15:	out    dx,al
  406a16:	(bad)  
  406a17:	pop    edx
  406a18:	int    0xeb
  406a1a:	cdq    
  406a1b:	pop    esp
  406a1c:	cmp    esi,DWORD PTR ds:0x127580d4
  406a22:	or     al,0x7f
  406a24:	pop    edx
  406a25:	jbe    0x406a94
  406a27:	xchg   ebp,eax
  406a28:	retf   0xb1be
  406a2b:	clc    
  406a2c:	stos   BYTE PTR es:[edi],al
  406a2d:	lods   al,BYTE PTR ds:[esi]
  406a2e:	arpl   bx,di
  406a30:	add    BYTE PTR [eax+0xb50e528],bh
  406a36:	fadd   st(7),st
  406a38:	or     ebx,ebp
  406a3a:	jl     0x406a7c
  406a3c:	fild   QWORD PTR [edi]
  406a3e:	les    edx,FWORD PTR [ecx-0x38174325]
  406a44:	mov    ecx,0x9ebfe85f
  406a49:	aam    0xb8
  406a4b:	addr16 mov ebp,0x49cb1d87
  406a51:	pop    eax
  406a52:	jp     0x406a44
  406a54:	push   ebx
  406a55:	pop    ebx
  406a56:	sub    cl,BYTE PTR [ebp-0x1315ae41]
  406a5c:	aad    0xf4
  406a5e:	popa   
  406a5f:	xchg   ebp,eax
  406a60:	mov    ch,0xb9
  406a62:	mov    ecx,0x4c00c979
  406a67:	inc    edi
  406a68:	mov    al,0xe6
  406a6a:	pop    es
  406a6b:	test   al,0x76
  406a6d:	jg     0x406a64
  406a6f:	lods   eax,DWORD PTR ds:[esi]
  406a70:	gs or  cl,dh
  406a73:	enter  0xaf4c,0x24
  406a77:	cwd    
  406a79:	adc    BYTE PTR [edi+0x13bceb01],ah
  406a7f:	repnz popa 
  406a81:	xchg   esi,eax
  406a82:	fidiv  DWORD PTR [edi]
  406a84:	lds    eax,FWORD PTR [edx-0x15]
  406a87:	aaa    
  406a88:	sbb    al,0x54
  406a8a:	pop    ds
  406a8b:	aad    0xa3
  406a8d:	fmul   QWORD PTR [ebp+0x35789ada]
  406a93:	in     al,dx
  406a94:	jnp    0x406a9f
  406a96:	sbb    bh,BYTE PTR [eax+ebx*8]
  406a99:	dec    esi
  406a9a:	(bad)  
  406a9b:	ret    0xbb3f
  406a9e:	loope  0x406a84
  406aa0:	jmp    0x29b3:0x394f3641
  406aa7:	fistp  QWORD PTR [ecx-0x65a35e6d]
  406aad:	ja     0x406b07
  406aaf:	push   edx
  406ab0:	aam    0xec
  406ab2:	test   BYTE PTR [eax],al
  406ab4:	jae    0x406aa8
  406ab6:	stos   DWORD PTR es:[edi],eax
  406ab7:	cmp    cl,bl
  406ab9:	cmp    al,0xd8
  406abb:	nop
  406abc:	fild   QWORD PTR [esi-0x83ca47f]
  406ac2:	call   0xa821:0xd587a983
  406ac9:	pusha  
  406aca:	jmp    0x406a98
  406acc:	pop    eax
  406acd:	aas    
  406ace:	(bad)  
  406acf:	lea    esi,[eax+eax*1]
  406ad2:	lods   eax,DWORD PTR ds:[esi]
  406ad3:	pop    DWORD PTR [esi+eax*8+0x4]
  406ad7:	xchg   ebp,eax
  406ad8:	push   cs
  406ad9:	fnstcw WORD PTR [ebx]
  406adb:	push   eax
  406adc:	bnd jno 0x406b3e
  406adf:	test   ecx,ecx
  406ae1:	inc    edi
  406ae2:	xchg   ebp,eax
  406ae3:	add    eax,DWORD PTR [ecx]
  406ae5:	mov    dh,0xb4
  406ae7:	js     0x406aca
  406ae9:	mov    ecx,esp
  406aeb:	add    bh,dl
  406aed:	dec    ebx
  406aee:	test   BYTE PTR [ebx+0x15],al
  406af1:	repnz enter 0x231b,0xed
  406af6:	jnp    0x406a86
  406af8:	jl     0x406abf
  406afa:	mov    edx,0x6cec0223
  406aff:	mov    dh,0x4d
  406b01:	sbb    al,0xb0
  406b03:	mov    al,0x18
  406b05:	push   esp
  406b06:	pusha  
  406b07:	mov    eax,eax
  406b09:	mov    esp,0x2c8215f3
  406b0e:	sahf   
  406b0f:	xor    cl,BYTE PTR [edx-0x6945d87a]
  406b15:	jmp    0xfdba:0x36c76228
  406b1c:	daa    
  406b1d:	push   ecx
  406b1e:	push   ecx
  406b1f:	cwde   
  406b20:	out    0xc7,al
  406b22:	push   esi
  406b23:	pusha  
  406b24:	data16 fwait
  406b26:	mov    bh,0x8c
  406b28:	mov    gs,WORD PTR [esi+eax*1]
  406b2b:	mov    ds:0x1549b00a,al
  406b30:	imul   edx,DWORD PTR [esi-0x2e],0xffffff9c
  406b34:	(bad)  
  406b36:	push   ds
  406b37:	arpl   bp,di
  406b39:	adc    al,0x99
  406b3b:	mov    bh,0x66
  406b3d:	pop    ecx
  406b3e:	xor    dh,BYTE PTR [ebp+0x2ffd69e4]
  406b44:	and    eax,0xac18d404
  406b49:	arpl   bx,cx
  406b4b:	into   
  406b4c:	push   cs
  406b4d:	jbe    0x406ae8
  406b4f:	aaa    
  406b50:	call   0xfe0c:0xb8d68902
  406b57:	mov    dh,0xec
  406b59:	fcmovbe st,st(5)
  406b5b:	clc    
  406b5c:	js     0x406b0f
  406b5e:	mov    ah,0x7b
  406b60:	shr    DWORD PTR gs:[ebp+ebx*8+0x2b2338e8],0x1a
  406b69:	push   ebx
  406b6a:	pop    esi
  406b6b:	and    eax,0xb6dd3434
  406b70:	dec    esi
  406b71:	jb     0x406ba7
  406b73:	push   ebp
  406b74:	or     eax,0xbde58ad
  406b79:	mov    ch,0x38
  406b7b:	add    ecx,DWORD PTR [ebx]
  406b7d:	ficomp DWORD PTR [edx]
  406b7f:	in     eax,dx
  406b80:	dec    esi
  406b81:	mov    bl,0xaa
  406b83:	in     eax,0xd
  406b85:	inc    ebp
  406b86:	loopne 0x406bd6
  406b88:	mov    al,0xa1
  406b8a:	call   0x7125f2c5
  406b8f:	clc    
  406b90:	cdq    
  406b91:	mov    ebp,0x59ec978b
  406b96:	enter  0x5e6,0x83
  406b9a:	test   BYTE PTR ds:0x3ea50031,dh
  406ba0:	cmp    eax,0xf5d41b63
  406ba5:	jecxz  0x406b5c
  406ba7:	xchg   esp,eax
  406ba8:	xchg   esi,eax
  406ba9:	sub    esi,edx
  406bab:	sbb    al,0x16
  406bad:	arpl   WORD PTR [ebp+0xf],bx
  406bb0:	xchg   esi,eax
  406bb1:	loop   0x406bfd
  406bb3:	push   eax
  406bb4:	mov    edx,0xb03ea5b8
  406bb9:	mov    edx,0xff9fada2
  406bbe:	out    dx,eax
  406bbf:	ret    0x51e6
  406bc2:	push   edx
  406bc3:	mov    esp,0x5ddfc155
  406bc8:	into   
  406bc9:	jbe    0x406b72
  406bcb:	fld    QWORD PTR [esi+ebp*1]
  406bce:	fild   WORD PTR [ebx+edx*2+0x4c]
  406bd2:	and    ch,BYTE PTR [eax-0x7f0d17d9]
  406bd8:	add    BYTE PTR [ecx],ah
  406bda:	inc    ebx
  406bdb:	(bad)  
  406bdd:	stc    
  406bde:	mov    bl,BYTE PTR [ecx]
  406be0:	stc    
  406be1:	aaa    
  406be2:	(bad)  
  406be3:	mov    ch,0x8d
  406be5:	dec    edx
  406be6:	inc    edi
  406be7:	jns    0x406bd3
  406be9:	imul   ebx,DWORD PTR [ebp+0x38],0x61393f6e
  406bf0:	mov    esp,0xa0a88490
  406bf5:	fs push es
  406bf7:	push   ebx
  406bf8:	dec    ecx
  406bf9:	loope  0x406c1e
  406bfb:	bound  edi,QWORD PTR [edx+0x2690b00b]
  406c01:	test   DWORD PTR [ebx-0x62],0xfed78ba3
  406c08:	or     ebx,DWORD PTR [esp+edi*4]
  406c0b:	out    0x9a,eax
  406c0d:	fisttp DWORD PTR [edi-0x195cfc46]
  406c13:	sbb    dh,BYTE PTR [eax]
  406c15:	push   ebp
  406c16:	push   es
  406c17:	retf   
  406c18:	push   edi
  406c19:	fnsave [edx+0x46ab6289]
  406c1f:	sub    eax,DWORD PTR [esi-0x71]
  406c22:	out    dx,eax
  406c23:	mov    ecx,0x85399d2
  406c28:	out    dx,eax
  406c29:	sti    
  406c2a:	test   al,0x7d
  406c2c:	stc    
  406c2d:	retf   
  406c2e:	cmp    dh,cl
  406c30:	push   edx
  406c31:	cdq    
  406c32:	mov    cl,0xf9
  406c34:	pop    es
  406c35:	xor    dh,0xc0
  406c38:	dec    edx
  406c39:	ror    ch,1
  406c3b:	cmp    ah,BYTE PTR [ebp-0x26]
  406c3e:	push   esp
  406c3f:	bound  esi,QWORD PTR [esi]
  406c41:	dec    edi
  406c42:	sbb    bl,cl
  406c44:	sub    ebx,edx
  406c46:	jae    0x406caa
  406c48:	mov    WORD PTR [eax+ebp*4-0x50d06af3],fs
  406c4f:	jmp    0x1def:0xa8d9f8f2
  406c56:	and    al,0x17
  406c58:	mov    cl,0x60
  406c5a:	lods   eax,DWORD PTR ds:[esi]
  406c5b:	mov    ch,0xc7
  406c5d:	je     0x406c9a
  406c5f:	adc    BYTE PTR [ebp+0x22],ch
  406c62:	or     al,0x7
  406c64:	ret    
  406c65:	mov    ds:0x1d385fed,al
  406c6a:	es jg  0x406c8d
  406c6d:	sbb    ebp,ecx
  406c6f:	out    dx,al
  406c70:	ror    BYTE PTR [ecx+0x53],1
  406c73:	sbb    eax,0xbd3035af
  406c78:	xchg   ecx,eax
  406c79:	mov    dl,0x19
  406c7b:	cmp    esp,esp
  406c7d:	call   0x6e59:0xeb69316f
  406c84:	dec    edx
  406c85:	mov    cl,0x3
  406c87:	scas   al,BYTE PTR es:[edi]
  406c88:	xchg   edx,eax
  406c89:	push   ds
  406c8a:	xor    DWORD PTR [edx+0xcd98106],esi
  406c90:	or     esp,DWORD PTR cs:[ebx+0x410b915b]
  406c97:	pushf  
  406c98:	jns    0x406c66
  406c9a:	jp     0x406c87
  406c9c:	jge    0x406d15
  406c9e:	ret    0xb6b8
  406ca1:	enter  0x4489,0xf1
  406ca5:	jo     0x406c4f
  406ca7:	ror    DWORD PTR [ebx-0x1f],1
  406caa:	jp     0x406c38
  406cac:	adc    esi,DWORD PTR ds:0xe53fc00b
  406cb2:	(bad)  
  406cb3:	and    DWORD PTR [eax],edx
  406cb5:	cld    
  406cb6:	xchg   ebp,eax
  406cb7:	pop    esp
  406cb8:	sub    esi,ecx
  406cba:	retf   0xd91f
  406cbd:	xor    al,0x8f
  406cbf:	imul   esp,DWORD PTR [ecx-0x7ab6bbb1],0xe4df2cab
  406cc9:	pusha  
  406cca:	mov    eax,0xe32de59a
  406ccf:	push   0x2c
  406cd1:	dec    ebx
  406cd2:	sbb    ch,BYTE PTR [ebp+edx*1+0x8]
  406cd6:	push   ecx
  406cd7:	outs   dx,DWORD PTR ds:[esi]
  406cd8:	lea    eax,[ecx*8-0x1324710b]
  406cdf:	or     eax,0x67f466f9
  406ce4:	sub    bh,BYTE PTR [eax]
  406ce6:	test   BYTE PTR [esi+0x4d],cl
  406ce9:	push   es
  406cea:	mov    DWORD PTR [edx+eax*1-0x570bc36a],eax
  406cf1:	sub    al,0x79
  406cf3:	jb     0x406d0b
  406cf5:	(bad)  
  406cf6:	push   ecx
  406cf7:	push   es
  406cf8:	cmp    ebp,0xffffffed
  406cfb:	push   edx
  406cfc:	pop    esi
  406cfd:	cmp    ch,cl
  406cff:	(bad)  
  406d00:	sbb    BYTE PTR [edi+ecx*2-0x36],al
  406d04:	cmp    DWORD PTR [edx+edx*4],ecx
  406d07:	ss pusha 
  406d09:	or     dh,ch
  406d0b:	xchg   esp,eax
  406d0c:	dec    edx
  406d0d:	lahf   
  406d0e:	repnz repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d11:	cmp    al,BYTE PTR [ecx]
  406d13:	cmp    DWORD PTR [esi+0x2e],esi
  406d16:	xchg   DWORD PTR [ebp+ebx*2+0x57],edi
  406d1a:	pop    edx
  406d1b:	jl     0x406d00
  406d1d:	hlt    
  406d1e:	mov    WORD PTR [edi-0x79],ss
  406d21:	ficomp WORD PTR [esi]
  406d23:	pmaxub mm3,QWORD PTR [ecx-0x48cbb0a4]
  406d2a:	dec    ebp
  406d2b:	loop   0x406d3a
  406d2d:	jmp    0x85357f29
  406d32:	push   ebx
  406d33:	int3   
  406d34:	xlat   BYTE PTR ds:[ebx]
  406d35:	adc    esi,DWORD PTR [edx]
  406d37:	(bad)  
  406d38:	data16 test al,0xe0
  406d3b:	retf   
  406d3c:	das    
  406d3d:	xor    eax,DWORD PTR [edi]
  406d3f:	xchg   ebp,eax
  406d40:	pop    ebx
  406d41:	(bad)  
  406d42:	ror    DWORD PTR [esi+0x4f],1
  406d45:	out    0xac,eax
  406d47:	pop    ss
  406d48:	mov    ds:0x43f15634,eax
  406d4d:	mov    edx,0xa38923c8
  406d52:	jb     0x406d71
  406d54:	es mov esp,0x4e3c7f8b
  406d5a:	mov    ah,BYTE PTR [esi-0x2c039a17]
  406d60:	dec    ebx
  406d61:	pop    es
  406d62:	cmp    eax,DWORD PTR [ebx+eax*2]
  406d65:	jle    0x406d59
  406d67:	(bad)  
  406d68:	dec    ecx
  406d69:	push   esi
  406d6a:	adc    cl,0xff
  406d6d:	retf   
  406d6e:	sahf   
  406d6f:	lods   al,BYTE PTR ds:[esi]
  406d70:	dec    edx
  406d71:	aam    0x2b
  406d73:	or     BYTE PTR [esi],0x8d
  406d76:	sub    esi,DWORD PTR ds:0x87534450
  406d7c:	mov    esi,0xd6bd8828
  406d81:	imul   ecx,DWORD PTR [edx-0x50],0x1b96dcc6
  406d88:	sbb    esi,esi
  406d8a:	out    0x8e,al
  406d8c:	jo     0x406dd4
  406d8e:	sub    eax,0x261b7dd7
  406d93:	jbe    0x406e0c
  406d95:	or     bl,BYTE PTR [si+0x70]
  406d99:	mov    dl,0x1a
  406d9b:	add    BYTE PTR [eax],cl
  406d9d:	push   es
  406d9e:	push   0xacd938a4
  406da3:	(bad)  
  406da4:	jb     0x406de1
  406da6:	mov    al,0x2b
  406da8:	loope  0x406d85
  406daa:	lock mov esi,edx
  406dad:	push   es
  406dae:	mov    ds:0xe2377f27,eax
  406db3:	pop    eax
  406db4:	cmp    bl,BYTE PTR [eax+0x521d2ee]
  406dba:	lods   al,BYTE PTR ds:[esi]
  406dbb:	jmp    0x406e37
  406dbd:	int    0xfa
  406dbf:	xor    ebx,0xe
  406dc2:	lea    edx,[eax-0x36]
  406dc5:	ror    esi,cl
  406dc7:	sub    DWORD PTR [ebx],eax
  406dc9:	dec    eax
  406dca:	jg     0x406e38
  406dcc:	retf   0x77e3
  406dcf:	mov    dh,0x1c
  406dd1:	inc    edx
  406dd2:	pop    ds
  406dd3:	xlat   BYTE PTR ds:[ebx]
  406dd4:	and    BYTE PTR [edi+0x7901e11a],ch
  406dda:	daa    
  406ddb:	fwait
  406ddc:	call   0x80163c05
  406de1:	iret   
  406de2:	adc    DWORD PTR [edx-0x53bdf45e],edx
  406de8:	jg     0x406e3d
  406dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dec:	dec    ebp
  406ded:	js     0x406d9a
  406def:	and    al,BYTE PTR [eax-0x10a04c59]
  406df5:	test   al,0xab
  406df7:	adc    al,BYTE PTR [edi+0x73]
  406dfa:	cmp    eax,DWORD PTR [eax+0x7c7f2a27]
  406e00:	jmp    0x406db6
  406e02:	stos   BYTE PTR es:[edi],al
  406e03:	fs dec esp
  406e05:	clc    
  406e06:	rcr    DWORD PTR [esi+0x39],0xe8
  406e0a:	daa    
  406e0b:	jg     0x406dd1
  406e0d:	cdq    
  406e0e:	(bad)  
  406e0f:	aad    0xd6
  406e11:	leave  
  406e12:	imul   esi,DWORD PTR [edx],0xffffffc2
  406e15:	in     eax,dx
  406e16:	xlat   BYTE PTR ds:[ebx]
  406e17:	pop    edx
  406e18:	sub    ah,BYTE PTR [ecx+0x0]
  406e1b:	add    dh,BYTE PTR [edi]
  406e1d:	jmp    0x406dc6
  406e1f:	cs pop ebp
  406e21:	xor    al,0xe5
  406e23:	add    bl,BYTE PTR [edi+0x77acbc05]
  406e29:	popa   
  406e2a:	or     eax,0x213c9f85
  406e2f:	aad    0x89
  406e31:	das    
  406e32:	outs   dx,DWORD PTR ds:[esi]
  406e33:	test   esi,0xd13695b2
  406e39:	adc    ecx,DWORD PTR [eax]
  406e3b:	xor    bl,ah
  406e3d:	push   edi
  406e3e:	ins    DWORD PTR es:[edi],dx
  406e3f:	fnsave [eax-0x1c]
  406e42:	and    eax,0x6f322322
  406e47:	ds fdivr st(2),st
  406e4a:	(bad)  
  406e4c:	sub    esi,ebp
  406e4e:	clc    
  406e4f:	into   
  406e50:	in     eax,0xdb
  406e52:	fdiv   st(2),st
  406e54:	cs scas al,BYTE PTR es:[edi]
  406e56:	mov    ah,0xb6
  406e58:	dec    esp
  406e59:	pop    edx
  406e5a:	pop    ds
  406e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e5c:	fild   DWORD PTR [edx+0x1d3ad247]
  406e62:	sahf   
  406e63:	add    ch,BYTE PTR [ebx-0x2060370f]
  406e69:	pop    esp
  406e6a:	mov    al,ds:0xa5e29b4b
  406e6f:	frstor [eax]
  406e71:	test   BYTE PTR [esi+eiz*2],bl
  406e74:	(bad)  
  406e75:	nop
  406e76:	cld    
  406e77:	ror    DWORD PTR [ebx-0x27],cl
  406e7a:	retf   0x4857
  406e7d:	(bad)  [edx+0x68162b2c]
  406e83:	xchg   ebp,eax
  406e84:	fnclex 
  406e86:	scas   eax,DWORD PTR es:[edi]
  406e87:	adc    al,BYTE PTR [esi+0x36]
  406e8a:	retf   0x9d35
  406e8d:	shl    BYTE PTR [edi],1
  406e8f:	mov    ch,0xe5
  406e91:	sbb    eax,0xb2369f20
  406e96:	fsubr  QWORD PTR es:[esi]
  406e99:	rcr    BYTE PTR [esi+eiz*8+0xd],cl
  406e9d:	inc    eax
  406e9f:	aam    0xc1
  406ea1:	dec    eax
  406ea2:	ret    0x3245
  406ea5:	cld    
  406ea6:	shl    BYTE PTR [edx],cl
  406ea8:	fld    QWORD PTR [ebp-0xa]
  406eab:	imul   eax,DWORD PTR [ebp+0x7e7c7b75],0x4e
  406eb2:	mov    DWORD PTR [ecx],edi
  406eb4:	nop
  406eb5:	(bad)  
  406eb7:	pusha  
  406eb8:	push   edi
  406eb9:	mov    dh,0x68
  406ebb:	and    bh,BYTE PTR [ecx+0x6dd4159c]
  406ec1:	mov    dh,BYTE PTR [ecx]
  406ec3:	xor    BYTE PTR [edx+0x51],bl
  406ec6:	push   ds
  406ec7:	add    al,0xf6
  406ec9:	pop    ecx
  406eca:	adc    ah,BYTE PTR [ecx-0x44]
  406ecd:	rol    DWORD PTR ds:0x3b55e5e5,1
  406ed3:	push   esp
  406ed4:	mov    ecx,0x9faa6ead
  406ed9:	adc    BYTE PTR es:[di],al
  406edd:	xchg   ecx,eax
  406ede:	push   ecx
  406edf:	cmp    esp,esi
  406ee1:	add    edx,ebx
  406ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ee4:	popf   
  406ee5:	loop   0x406ede
  406ee7:	aam    0x9c
  406ee9:	nop
  406eea:	pop    ecx
  406eeb:	ror    edx,0x7c
  406eee:	hlt    
  406eef:	cwde   
  406ef0:	lods   al,BYTE PTR ds:[esi]
  406ef1:	shr    BYTE PTR [ebp+0x604e3d65],cl
  406ef7:	loopne 0x406f77
  406ef9:	xchg   ebp,eax
  406efa:	push   ebp
  406efb:	lods   al,BYTE PTR ds:[esi]
  406efc:	mov    ah,0x1f
  406efe:	fwait
  406eff:	jo     0x406f12
  406f01:	pop    ss
  406f02:	call   0x6965:0x7b4654c2
  406f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0a:	xor    DWORD PTR [edx-0x48],eax
  406f0d:	mov    WORD PTR [edi+0x324aeee9],ds
  406f13:	fimul  WORD PTR es:[ecx]
  406f16:	aam    0xd
  406f18:	(bad)  [edi-0x6c614c92]
  406f1e:	push   ecx
  406f1f:	adc    eax,DWORD PTR [edx+0x1619a2db]
  406f25:	(bad)  
  406f27:	int3   
  406f28:	sbb    bl,BYTE PTR [ecx]
  406f2a:	sub    BYTE PTR ds:0xed4bf3ab,ch
  406f30:	jmp    0x2c807826
  406f35:	add    ebx,ebp
  406f37:	scas   eax,DWORD PTR es:[edi]
  406f38:	jno    0x406f31
  406f3a:	rcr    BYTE PTR [ebx-0x3b314ebc],cl
  406f40:	test   edx,edi
  406f42:	pop    edx
  406f43:	scas   eax,DWORD PTR es:[edi]
  406f44:	in     al,0xa8
  406f46:	jae    0x406fc4
  406f48:	test   BYTE PTR [ebx-0x42cdeeaf],bl
  406f4e:	test   al,0x7f
  406f50:	xor    al,0x22
  406f52:	mov    dh,0x99
  406f54:	sub    ch,bl
  406f56:	out    0xf8,eax
  406f58:	mov    ds:0xa51c7bfe,eax
  406f5d:	inc    eax
  406f5e:	adc    ebx,DWORD PTR [esi+0x1efc0b25]
  406f64:	sbb    BYTE PTR [ecx-0x40219839],0xd
  406f6b:	addr16 aas 
  406f6d:	mov    ebx,0xd7c6261f
  406f72:	cli    
  406f73:	dec    ebp
  406f74:	inc    esi
  406f75:	test   DWORD PTR [esi],0xf049e102
  406f7b:	clc    
  406f7c:	cmp    al,0xb6
  406f7e:	pushf  
  406f7f:	test   al,0xbc
  406f81:	dec    ecx
  406f82:	es add bh,ch
  406f85:	jl     0x406f37
  406f87:	ins    DWORD PTR es:[edi],dx
  406f88:	jl     0x407000
  406f8a:	or     esi,edi
  406f8c:	adc    ah,dh
  406f8e:	leave  
  406f8f:	jp     0x406f50
  406f91:	mov    esi,0x923c7fd4
  406f96:	jmp    0x4fddc41b
  406f9b:	cmp    eax,DWORD PTR [ecx+0x2f36976d]
  406fa1:	mov    dh,0x3e
  406fa3:	push   ss
  406fa4:	(bad)  
  406fa5:	jp     0x406fae
  406fa7:	(bad)  
  406fa8:	push   edi
  406fa9:	jae    0x406fff
  406fab:	or     ebp,DWORD PTR [esi]
  406fad:	mov    ah,0x27
  406faf:	test   DWORD PTR [eax+0xe],0x34569e72
  406fb6:	push   eax
  406fb7:	(bad)  
  406fb8:	ds mov esp,0x86098dfb
  406fbe:	pusha  
  406fbf:	xchg   esp,eax
  406fc0:	push   ecx
  406fc1:	imul   ecx,DWORD PTR [edx-0x2],0xffffff9a
  406fc5:	mov    ds:0x637d534f,eax
  406fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fcb:	jno    0x406f68
  406fcd:	jb     0x406fec
  406fcf:	mov    eax,ds:0x9ac2dda6
  406fd4:	sbb    dl,bl
  406fd6:	ds inc ecx
  406fd8:	inc    ebp
  406fd9:	retf   
  406fda:	into   
  406fdb:	mov    ch,0x37
  406fdd:	ficomp WORD PTR [ebx+esi*4+0x3891ebf0]
  406fe4:	and    al,0x9d
  406fe6:	sbb    esi,edx
  406fe8:	js     0x40703f
  406fea:	cwde   
  406feb:	fcomp  QWORD PTR [ebp+ebp*1-0x2bf27ac]
  406ff2:	sbb    eax,0x89381b6a
  406ff7:	pop    edi
  406ff8:	jno    0x406f90
  406ffa:	xor    al,0xbf
  406ffc:	out    0x30,al
  406ffe:	(bad)  
  406fff:	icebp  
  407000:	shl    DWORD PTR [eax],cl
  407002:	fistp  QWORD PTR [ebx]
  407004:	xor    BYTE PTR [esi-0x296c75df],ah
  40700a:	cmp    bl,BYTE PTR [edi]
  40700c:	fimul  WORD PTR [ebp-0x6e]
  40700f:	ds pop ebx
  407011:	mov    eax,ds:0x3597cb87
  407016:	cs inc edx
  407018:	imul   eax,DWORD PTR [esi],0xb2fbff97
  40701e:	jge    0x40706d
  407020:	sub    BYTE PTR [edi+ecx*8-0x18],0x7b
  407025:	mov    esp,0x685ba879
  40702a:	inc    eax
  40702b:	adc    ebx,DWORD PTR [ebp+ecx*4+0x1d]
  40702f:	call   FWORD PTR [ebx]
  407031:	or     eax,DWORD PTR [esi]
  407033:	mov    bh,0x8c
  407035:	fisubr DWORD PTR [ebx]
  407037:	icebp  
  407038:	add    eax,0xbf40e4c1
  40703d:	rcl    BYTE PTR [esp+eax*2],1
  407040:	mov    ch,0xb2
  407042:	jne    0x407089
  407044:	mov    BYTE PTR [esi+0x1a],ah
  407047:	adc    dh,BYTE PTR [edi]
  407049:	and    ebx,DWORD PTR [ecx+0x5]
  40704c:	xor    edi,DWORD PTR [eax+ebp*1+0x6345c8f3]
  407053:	mov    WORD PTR [eax-0x6d],fs
  407056:	in     eax,dx
  407057:	dec    eax
  407058:	add    al,0x4c
  40705a:	and    dl,ah
  40705c:	cdq    
  40705d:	outs   dx,BYTE PTR ds:[esi]
  40705e:	aaa    
  40705f:	js     0x407035
  407061:	in     eax,dx
  407062:	push   edi
  407063:	or     esp,ecx
  407065:	leave  
  407066:	cmp    al,0xee
  407068:	(bad)
  40706b:	pop    ecx
  40706c:	cmp    BYTE PTR ss:[eax+0x7],ah
  407070:	in     al,0x83
  407072:	or     eax,0xc0dbd29e
  407077:	or     al,0x76
  407079:	mov    ah,0x4
  40707b:	pop    esi
  40707c:	mov    ah,0xc2
  40707e:	inc    esi
  40707f:	lahf   
  407080:	imul   edi,DWORD PTR [ebx+0x7edfa36e],0xe752798b
  40708a:	or     al,0x48
  40708c:	xchg   ebp,eax
  40708d:	or     edi,ebp
  40708f:	out    0x37,eax
  407091:	add    dl,BYTE PTR [edx+0x4596dc73]
  407097:	out    dx,eax
  407098:	inc    ebp
  407099:	push   edi
  40709a:	dec    eax
  40709b:	pop    edx
  40709c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709d:	push   edi
  40709e:	sub    al,0x76
  4070a0:	dec    edi
  4070a1:	aam    0x88
  4070a3:	dec    esp
  4070a4:	push   esp
  4070a5:	loop   0x4070f8
  4070a7:	jae    0x4070a5
  4070a9:	adc    DWORD PTR [ebx-0x4e],edx
  4070ac:	mov    dl,0xa3
  4070ae:	in     al,0x53
  4070b0:	mov    edx,0xbfff9861
  4070b5:	es or  edx,ebp
  4070b8:	sahf   
  4070b9:	stos   BYTE PTR es:[edi],al
  4070ba:	bound  ebx,QWORD PTR [esi+0x31f04cff]
  4070c0:	jle    0x4070de
  4070c2:	jae    0x4070c0
  4070c4:	xor    al,0x9e
  4070c6:	pop    ebx
  4070c7:	cdq    
  4070c8:	jmp    0x810f:0x389fee35
  4070cf:	or     DWORD PTR [esi+0x6f29f4b5],esp
  4070d5:	lods   al,BYTE PTR ds:[esi]
  4070d6:	dec    ebp
  4070d7:	loopne 0x40710c
  4070d9:	or     BYTE PTR [ebx+0x14],ah
  4070dc:	fiadd  DWORD PTR [esi+0x76de6590]
  4070e2:	fcomp  QWORD PTR [ebp-0x30]
  4070e5:	and    al,0xe2
  4070e7:	push   esi
  4070e8:	mov    esi,0x8cd5a469
  4070ed:	or     al,0x6b
  4070ef:	mov    ds:0xbbc0e81e,al
  4070f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f5:	popf   
  4070f6:	mov    ebx,0x4538fcba
  4070fb:	dec    edi
  4070fc:	lods   al,BYTE PTR ds:[esi]
  4070fd:	or     BYTE PTR [ebp+0xa9256a2],0xd
  407104:	cmp    bl,cl
  407106:	inc    esp
  407107:	lods   eax,DWORD PTR ds:[esi]
  407108:	push   esi
  407109:	push   ebp
  40710a:	xor    al,0xd0
  40710c:	jmp    DWORD PTR [ebp-0x304570ee]
  407112:	xlat   BYTE PTR ds:[ebx]
  407113:	stos   DWORD PTR es:[edi],eax
  407114:	imul   edx,DWORD PTR [edi-0x2e],0x14add45
  40711b:	fidivr WORD PTR [edi-0xf8441fc]
  407121:	popf   
  407122:	mov    al,ds:0xd9c14d87
  407127:	cld    
  407128:	jle    0x407104
  40712a:	(bad)  
  40712b:	cmp    esi,DWORD PTR ds:0x1d05e806
  407131:	xor    DWORD PTR [esi-0x1ab1110f],ecx
  407137:	jmp    0xb3911022
  40713c:	push   esp
  40713d:	fdivr  DWORD PTR [eax+0x28917bc]
  407143:	or     eax,0xa72dfe15
  407148:	push   0x31
  40714a:	cwde   
  40714b:	xchg   ah,ch
  40714d:	cmp    bl,BYTE PTR [esi+0x2d]
  407150:	and    eax,0xb32410bc
  407155:	adc    eax,0xab2d8e90
  40715a:	loop   0x407135
  40715c:	xor    BYTE PTR [edx],dh
  40715e:	retf   0xae64
  407161:	inc    ecx
  407162:	push   edi
  407163:	jmp    0x156d:0x9d86f924
  40716a:	xor    DWORD PTR [eax+0x4e],0x43
  40716e:	adc    dl,BYTE PTR [edi+0x4c5ed3e4]
  407174:	sub    al,0x99
  407176:	push   esp
  407177:	sub    eax,0x873f54b5
  40717c:	cmp    esp,edi
  40717e:	mov    cl,0x55
  407180:	mov    ebx,0x9413dda
  407185:	cld    
  407186:	pushf  
  407187:	loope  0x407124
  407189:	(bad)  
  40718a:	dec    esp
  40718b:	xor    BYTE PTR [ebx+ebp*8-0x6a],bh
  40718f:	outs   dx,BYTE PTR ds:[esi]
  407190:	add    bh,BYTE PTR [ecx]
  407192:	scas   eax,DWORD PTR es:[edi]
  407193:	sbb    edi,DWORD PTR [ecx+0x15281fb2]
  407199:	int3   
  40719a:	xlat   BYTE PTR ds:[ebx]
  40719b:	or     esp,DWORD PTR [edx+0x2c1d252b]
  4071a1:	(bad)  
  4071a2:	xor    edx,DWORD PTR [edi]
  4071a4:	add    ah,BYTE PTR [ebx]
  4071a6:	cmp    al,0x1e
  4071a8:	icebp  
  4071a9:	rcr    BYTE PTR [esi-0x559502a2],0xa7
  4071b0:	mov    al,0x37
  4071b2:	inc    esp
  4071b3:	add    eax,DWORD PTR [eax+0x4c]
  4071b6:	xchg   esp,eax
  4071b7:	fs cmc 
  4071b9:	dec    ecx
  4071ba:	aas    
  4071bb:	jmp    0x3fc8:0x2d679a3c
  4071c2:	push   cs
  4071c3:	push   ds
  4071c4:	sahf   
  4071c5:	lods   eax,DWORD PTR ds:[esi]
  4071c6:	lds    ebx,FWORD PTR [ecx+0x16c32e43]
  4071cc:	rol    dh,1
  4071ce:	xchg   ebp,eax
  4071cf:	sub    BYTE PTR [ebx+0x564fc5ba],0x5c
  4071d6:	icebp  
  4071d7:	dec    esp
  4071d8:	iret   
  4071d9:	out    dx,al
  4071da:	mov    dh,0xc7
  4071dc:	daa    
  4071dd:	into   
  4071de:	lock or edx,DWORD PTR [edi+0x3f]
  4071e2:	push   edi
  4071e3:	inc    ebp
  4071e4:	mov    edi,0x7ba1f664
  4071e9:	sahf   
  4071ea:	repnz mov cl,0x72
  4071ed:	pop    ebx
  4071ee:	jcxz   0x4071dd
  4071f1:	jmp    0x96ba4be8
  4071f6:	push   esi
  4071f7:	dec    edx
  4071f8:	outs   dx,BYTE PTR ds:[esi]
  4071f9:	pop    edx
  4071fa:	push   esp
  4071fb:	call   0x770e2f6a
  407200:	scas   al,BYTE PTR es:[edi]
  407201:	fnsave [ebx+eiz*1+0x10]
  407205:	(bad)  
  407206:	mov    bl,0xa8
  407208:	test   al,0x82
  40720a:	out    0x9b,eax
  40720c:	rcr    eax,1
  40720e:	scas   al,BYTE PTR es:[edi]
  40720f:	loop   0x407223
  407211:	aam    0xea
  407213:	rcr    ebp,1
  407215:	rcr    BYTE PTR [ebp+0x11],1
  407218:	in     eax,0x66
  40721a:	add    al,0xa2
  40721c:	cmp    BYTE PTR [ecx-0x392a78b3],dl
  407222:	sbb    BYTE PTR [edi+0x94c1514],cl
  407228:	push   edi
  407229:	cmp    eax,0xc6d3e817
  40722e:	mov    esp,eax
  407230:	push   ebx
  407231:	outs   dx,BYTE PTR ds:[esi]
  407232:	in     eax,0xdf
  407234:	repz imul ebx,ebp,0xffffff9b
  407238:	xor    eax,0x717f7b68
  40723d:	lahf   
  40723e:	push   es
  40723f:	pop    ecx
  407240:	cli    
  407241:	mov    al,ds:0x6152d74f
  407246:	sub    dh,ah
  407248:	stos   DWORD PTR es:[edi],eax
  407249:	and    eax,0xc2ebcd5f
  40724e:	xor    bl,bl
  407250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407251:	sub    al,0xf9
  407253:	mov    dl,BYTE PTR [eax+0x20]
  407256:	aad    0x1b
  407258:	arpl   sp,di
  40725a:	push   ds
  40725b:	sbb    eax,0x3338d440
  407260:	mov    ah,0x69
  407262:	in     eax,0x68
  407264:	frstor [eax]
  407266:	pop    ss
  407267:	jmp    0x5b21:0xf78fd33e
  40726e:	jecxz  0x40723f
  407270:	or     bl,ah
  407272:	mov    edi,0x72040d0a
  407277:	mov    esp,0x6f10e274
  40727c:	pop    ebx
  40727d:	cmp    eax,0x4edd29b7
  407282:	jp     0x407267
  407284:	clc    
  407285:	pop    esi
  407286:	mov    eax,0xa3879536
  40728b:	sti    
  40728c:	xor    al,0xd1
  40728e:	cmp    al,0x6
  407290:	in     al,dx
  407291:	popf   
  407292:	fdivr  DWORD PTR [ebp+0x78f3185f]
  407298:	test   eax,0x4979c97c
  40729d:	sub    bh,BYTE PTR ds:0x9f7ada35
  4072a3:	dec    edi
  4072a4:	out    dx,eax
  4072a5:	aad    0x2
  4072a7:	push   ebp
  4072a8:	inc    ecx
  4072a9:	es pushf 
  4072ab:	ret    
  4072ac:	cs sbb dl,bl
  4072af:	pop    ebx
  4072b0:	mov    al,0xda
  4072b2:	xor    al,0x81
  4072b4:	sbb    cl,dh
  4072b6:	sbb    BYTE PTR [ecx+0x77768e8d],bl
  4072bc:	loop   0x407246
  4072be:	and    dh,cl
  4072c0:	push   esi
  4072c1:	pop    es
  4072c2:	sub    ch,BYTE PTR [ebx-0x2cf7dd57]
  4072c8:	inc    edi
  4072c9:	mov    DWORD PTR [edx],edx
  4072cb:	jecxz  0x4072cf
  4072cd:	outs   dx,BYTE PTR ds:[esi]
  4072ce:	mov    edx,edx
  4072d0:	push   es
  4072d1:	clc    
  4072d2:	jle    0x407296
  4072d4:	into   
  4072d5:	div    BYTE PTR [edx]
  4072d7:	out    0x12,al
  4072d9:	jae    0x407343
  4072db:	jecxz  0x4072dd
  4072dd:	adc    esi,DWORD PTR [edi]
  4072df:	mov    DWORD PTR [edi-0x6ca385d7],esp
  4072e5:	frstor [edi]
  4072e7:	sbb    BYTE PTR [ebp-0x1b],al
  4072ea:	or     dl,BYTE PTR [esi]
  4072ec:	call   0x8931:0x3cedf1b7
  4072f3:	jecxz  0x407313
  4072f5:	push   edx
  4072f6:	cli    
  4072f7:	or     al,0x4f
  4072f9:	push   cs
  4072fa:	bound  ecx,QWORD PTR [eax]
  4072fc:	imul   ebp,esp,0x9a64a9e4
  407302:	adc    ecx,DWORD PTR [esp+ebp*4]
  407305:	pop    edx
  407306:	inc    ecx
  407307:	rcl    bl,cl
  407309:	shl    BYTE PTR [eax],0xbc
  40730c:	leave  
  40730d:	sahf   
  40730e:	inc    edx
  40730f:	jmp    0x40730e
  407311:	push   ss
  407312:	sub    BYTE PTR [edi-0x7429e57e],0x9e
  407319:	sbb    al,0xc8
  40731b:	data16 sub al,0x87
  40731e:	mov    bh,0xb6
  407320:	scas   eax,DWORD PTR es:[edi]
  407321:	outs   dx,DWORD PTR ds:[esi]
  407322:	add    DWORD PTR [ebp-0x7c],eax
  407325:	add    BYTE PTR [edx+edi*4+0x94fbfd8],0xb1
  40732d:	jne    0x407397
  40732f:	inc    eax
  407330:	push   ds
  407331:	cli    
  407332:	pop    ecx
  407333:	loopne 0x407350
  407335:	xchg   ecx,eax
  407336:	and    dl,BYTE PTR [edi+0xa]
  407339:	in     eax,dx
  40733a:	js     0x407363
  40733c:	jle    0x4073ab
  40733e:	out    0x28,al
  407340:	das    
  407341:	sbb    al,0x9b
  407343:	jns    0x4072e4
  407345:	call   0xe2e4b4ef
  40734a:	aas    
  40734b:	cmp    eax,0x50c24161
  407350:	push   eax
  407351:	rcr    BYTE PTR [edx+0x4a],cl
  407354:	cmc    
  407355:	repz inc eax
  407357:	inc    esi
  407358:	std    
  407359:	mov    ah,0xd
  40735b:	jge    0x407320
  40735d:	jns    0x407331
  40735f:	mov    ?,WORD PTR [edx-0x7f]
  407362:	scas   eax,DWORD PTR es:[edi]
  407363:	scas   eax,DWORD PTR es:[edi]
  407364:	mov    bh,0xfd
  407366:	test   BYTE PTR [esi+0x9],dl
  407369:	push   ebp
  40736a:	rol    dh,cl
  40736c:	jbe    0x40733b
  40736e:	mov    bh,0x99
  407370:	cli    
  407371:	sbb    DWORD PTR [esi+0x41],esi
  407374:	pusha  
  407375:	lock xor eax,0xffbe7f98
  40737b:	or     DWORD PTR [edx-0x58931647],esp
  407381:	cmp    BYTE PTR [edx-0xe0cf214],ch
  407387:	aaa    
  407388:	shl    BYTE PTR [esi+esi*2],1
  40738b:	lods   eax,DWORD PTR ds:[esi]
  40738c:	push   ebx
  40738d:	cmp    esi,ebx
  40738f:	adc    DWORD PTR ds:0x93318159,ebp
  407395:	pop    esp
  407396:	out    0xbb,al
  407398:	enter  0x9219,0x5
  40739c:	jb     0x4073b9
  40739e:	mov    ch,0x2e
  4073a0:	xchg   edi,eax
  4073a1:	mov    dh,0x56
  4073a3:	pop    esi
  4073a4:	push   0xffffffbc
  4073a6:	jp     0x4073ea
  4073a8:	cmp    DWORD PTR [eax+0x82218a6],edi
  4073ae:	adc    ebp,DWORD PTR [ecx]
  4073b0:	add    BYTE PTR [eax],dl
  4073b2:	pop    ss
  4073b3:	fs (bad) 
  4073b5:	xor    ah,al
  4073b7:	in     eax,0x70
  4073b9:	loop   0x4073e3
  4073bb:	pusha  
  4073bc:	inc    eax
  4073bd:	dec    esp
  4073be:	out    0xfe,eax
  4073c0:	add    edi,DWORD PTR [edi+0x53]
  4073c3:	imul   ebx,DWORD PTR [eax+0x21],0xc1b472fe
  4073ca:	push   ss
  4073cb:	xor    al,0xab
  4073cd:	mov    ds:0x3372837d,al
  4073d2:	test   ecx,ecx
  4073d4:	imul   edi,DWORD PTR [ecx+0xd4c3133],0xe7f4222b
  4073de:	call   0xc869:0x1b55e6f5
  4073e5:	adc    BYTE PTR [eax+0x2c],bh
  4073e8:	xor    eax,0x2967267a
  4073ed:	int    0xd2
  4073ef:	adc    eax,0x1af71fb0
  4073f4:	ret    0x96a2
  4073f7:	jnp    0x407446
  4073f9:	jle    0x40742d
  4073fb:	xchg   edx,eax
  4073fc:	stos   DWORD PTR es:[edi],eax
  4073fd:	or     al,0x5b
  4073ff:	mov    dh,0xec
  407401:	push   cs
  407402:	popa   
  407403:	pop    ecx
  407404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407405:	fcmovne st,st(2)
  407407:	xor    DWORD PTR [esi+eax*1-0x7f],0xfffffff8
  40740c:	and    DWORD PTR [ebp-0x600135d6],ecx
  407412:	daa    
  407413:	inc    ebp
  407414:	mov    eax,0x889de836
  407419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741a:	shl    BYTE PTR [eax-0x592c03c6],0xa0
  407421:	out    0xd,al
  407423:	jo     0x40744a
  407425:	das    
  407426:	sbb    ebp,esi
  407428:	retf   0x83e2
  40742b:	sub    eax,0x62f9bfb5
  407430:	outs   dx,DWORD PTR ds:[esi]
  407431:	in     eax,0x94
  407433:	inc    esp
  407434:	imul   ecx,DWORD PTR [edx-0x749d1ad9],0xffffffad
  40743b:	xlat   BYTE PTR cs:[ebx]
  40743d:	je     0x407459
  40743f:	pop    ss
  407440:	pop    ds
  407441:	sbb    DWORD PTR ds:[ecx],eax
  407444:	add    al,0x2f
  407446:	out    dx,eax
  407447:	push   0x84283e77
  40744c:	dec    eax
  40744d:	je     0x4073db
  40744f:	mov    ch,0x2e
  407451:	push   edx
  407452:	or     BYTE PTR [ebp-0x1a36bf0d],ch
  407458:	retf   
  407459:	jbe    0x4073f4
  40745b:	outs   dx,DWORD PTR ds:[esi]
  40745c:	xchg   esi,eax
  40745d:	lods   eax,DWORD PTR ds:[esi]
  40745e:	push   ss
  40745f:	pop    ss
  407460:	jmp    0x6fc62fe3
  407465:	add    eax,edx
  407467:	outs   dx,DWORD PTR ds:[esi]
  407468:	adc    BYTE PTR [ecx+ecx*4-0x51],0xff
  40746d:	xlat   BYTE PTR ds:[ebx]
  40746e:	jp     0x407437
  407470:	lea    edi,[eax+eiz*8+0x38]
  407474:	adc    BYTE PTR [edx],bh
  407476:	test   ebx,ebp
  407478:	and    eax,0x3704cb34
  40747d:	push   edi
  40747e:	ins    BYTE PTR es:[edi],dx
  40747f:	push   ebx
  407480:	adc    ecx,0x20fb23cc
  407486:	call   0xdfd6:0x79c95f4c
  40748d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40748f:	jne    0x407466
  407491:	mov    dh,0xd9
  407493:	mov    ebx,0x50e1f861
  407498:	leave  
  407499:	dec    esp
  40749a:	sti    
  40749b:	jmp    0x80ce:0xd6743bf2
  4074a2:	in     al,0xe3
  4074a4:	push   edi
  4074a5:	sbb    eax,0xe271ad9
  4074aa:	sub    al,0x96
  4074ac:	mov    edx,0xa7b7625b
  4074b1:	xlat   BYTE PTR ds:[ebx]
  4074b2:	xchg   esi,eax
  4074b3:	xor    ah,BYTE PTR [ecx+0x3e]
  4074b6:	nop
  4074b7:	aam    0x57
  4074b9:	dec    BYTE PTR [esi+0x1d]
  4074bc:	shr    DWORD PTR [ebx+edi*8+0x50],cl
  4074c0:	scas   eax,DWORD PTR es:[edi]
  4074c1:	dec    ecx
  4074c2:	lahf   
  4074c3:	stc    
  4074c4:	adc    ebx,ebx
  4074c6:	dec    edi
  4074c7:	mov    WORD PTR [eax+ecx*4+0x316f064f],?
  4074ce:	imul   BYTE PTR [ebp+0x69]
  4074d1:	add    al,0x72
  4074d3:	shr    DWORD PTR [esi+0x2],1
  4074d6:	test   eax,0x9d69e3f4
  4074db:	sub    ah,ah
  4074dd:	jo     0x407541
  4074df:	jnp    0x40747a
  4074e1:	sub    DWORD PTR [eax+0x6c],ebx
  4074e4:	adc    ecx,DWORD PTR [edi+0x1ca19f6f]
  4074ea:	sbb    al,0x6a
  4074ec:	mov    bh,0xa4
  4074ee:	psrlq  mm3,QWORD PTR [edx-0x18]
  4074f2:	add    ebp,DWORD PTR [ecx]
  4074f4:	outs   dx,BYTE PTR ds:[esi]
  4074f5:	sub    DWORD PTR ds:[eax+0x3619b67f],esi
  4074fc:	outs   dx,BYTE PTR ds:[esi]
  4074fd:	and    ch,BYTE PTR [eax]
  4074ff:	mov    ds:0xecd6888b,eax
  407504:	and    dh,BYTE PTR [ebx]
  407506:	cmp    edx,DWORD PTR [ebx]
  407508:	enter  0x803d,0xf8
  40750c:	(bad)  
  40750d:	sub    ebx,DWORD PTR [ebx-0x56]
  407510:	pop    edx
  407511:	mov    ecx,0xc86840c7
  407516:	test   eax,0x21a33b7
  40751b:	and    DWORD PTR [esp+edx*8],ecx
  40751e:	sar    BYTE PTR [eax+eiz*1-0x695e708b],1
  407525:	and    DWORD PTR [ebx+0x3de98499],0xc704b332
  40752f:	cs fdivrp st(4),st
  407532:	push   esi
  407533:	or     eax,0x80e261a
  407538:	or     esi,edx
  40753a:	aaa    
  40753b:	sub    BYTE PTR [edx-0x2e4ae057],bl
  407541:	mov    eax,ds:0x97aa11a3
  407546:	lock dec BYTE PTR ds:0x3ad47493
  40754d:	and    ebp,edi
  40754f:	dec    edi
  407550:	in     eax,dx
  407551:	addr16 dec esi
  407553:	cmp    eax,0xe387ed10
  407558:	lods   eax,DWORD PTR ds:[esi]
  407559:	out    0x10,al
  40755b:	ret    0xa2c9
  40755e:	lahf   
  40755f:	nop
  407560:	stos   DWORD PTR es:[edi],eax
  407561:	pop    es
  407562:	icebp  
  407563:	inc    esi
  407564:	push   es
  407565:	leave  
  407566:	xlat   BYTE PTR ds:[ebx]
  407567:	fbld   TBYTE PTR [eax+0x40c965af]
  40756d:	or     esi,DWORD PTR [esi]
  40756f:	retf   0x5197
  407572:	mov    dh,0x43
  407574:	cmp    al,0x85
  407576:	push   eax
  407577:	sub    bh,dh
  407579:	xchg   DWORD PTR ds:0xfbcd8d12,edx
  40757f:	stc    
  407580:	sbb    al,0xac
  407582:	in     al,0x65
  407584:	xchg   edi,eax
  407585:	mov    bh,0x2c
  407587:	push   eax
  407588:	fbld   TBYTE PTR [ebx+0x5e]
  40758b:	push   0xfffffff1
  40758d:	mov    ah,BYTE PTR [esi+0x37d0e6d5]
  407593:	mov    edi,edi
  407595:	push   edx
  407596:	ja     0x4075f1
  407598:	or     bl,bl
  40759a:	inc    esp
  40759b:	popa   
  40759c:	xchg   ebx,eax
  40759d:	xchg   ecx,eax
  40759e:	test   eax,0x320856a2
  4075a3:	out    dx,al
  4075a4:	ins    BYTE PTR es:[edi],dx
  4075a5:	pop    ebp
  4075a6:	mov    ebp,0xcde83029
  4075ab:	mov    esi,0xd800c88
  4075b0:	xor    edx,ebx
  4075b2:	adc    ch,BYTE PTR [esi+ecx*1-0x41]
  4075b6:	or     eax,0xf9deabfa
  4075bb:	lea    esp,[esi+edx*8+0x33]
  4075bf:	mov    ebx,0xf48353f7
  4075c4:	repnz cmp al,BYTE PTR [eax]
  4075c7:	cdq    
  4075c8:	mov    dh,0x8
  4075ca:	add    dh,BYTE PTR [ecx-0x46]
  4075cd:	loop   0x407593
  4075cf:	std    
  4075d0:	out    0xed,al
  4075d2:	mov    edx,0xb9bc5458
  4075d7:	jle    0x407631
  4075d9:	fldpi  
  4075db:	mov    ch,BYTE PTR [edi+0x32]
  4075de:	sub    ebx,ebx
  4075e0:	xchg   esp,eax
  4075e1:	adc    bh,BYTE PTR ds:0x29ab0c03
  4075e7:	or     cl,BYTE PTR [edi+0x64a1adfb]
  4075ed:	(bad)  
  4075ee:	mov    eax,0xf8ad4a71
  4075f3:	push   esp
  4075f4:	imul   eax,DWORD PTR [edx+0x7d],0x6f
  4075f8:	rol    DWORD PTR [edi],1
  4075fa:	fisubr WORD PTR [ebx-0x1ac7dd85]
  407600:	dec    ebp
  407601:	xchg   ecx,eax
  407602:	ficom  DWORD PTR [edx+edi*4]
  407605:	je     0x407613
  407607:	push   cs
  407608:	lods   al,BYTE PTR ds:[esi]
  407609:	dec    esi
  40760a:	adc    eax,0x689ee972
  40760f:	jp     0x40768c
  407611:	pop    es
  407612:	mov    eax,ds:0xa2a31c1a
  407617:	stos   DWORD PTR es:[edi],eax
  407618:	push   cs
  407619:	pop    ebx
  40761a:	sbb    DWORD PTR [edi-0x35],edi
  40761d:	scas   al,BYTE PTR es:[edi]
  40761e:	popf   
  40761f:	push   eax
  407620:	mov    cl,0xf1
  407622:	jle    0x4075b7
  407624:	xchg   ebx,eax
  407625:	in     al,dx
  407626:	inc    edx
  407627:	out    0x41,eax
  407629:	cld    
  40762a:	cld    
  40762b:	test   ecx,edi
  40762d:	jne    0x407607
  40762f:	xchg   edx,eax
  407630:	dec    ecx
  407631:	out    dx,eax
  407632:	and    al,0xbd
  407634:	push   0x9321c599
  407639:	add    BYTE PTR [esi+0x3c],ch
  40763c:	das    
  40763d:	popa   
  40763e:	sub    eax,0x83d701b1
  407643:	mov    ebp,0xd80c66d0
  407648:	(bad)  
  407649:	scas   al,BYTE PTR es:[edi]
  40764a:	pop    edi
  40764b:	pushf  
  40764c:	xor    BYTE PTR [ebp+0x47a3ca9b],ch
  407652:	inc    eax
  407653:	sub    al,0xd0
  407655:	push   ecx
  407656:	fcmovne st,st(4)
  407658:	jo     0x407693
  40765a:	ins    BYTE PTR es:[edi],dx
  40765b:	xor    edx,DWORD PTR [eax-0x46979d8]
  407661:	je     0x40762d
  407663:	dec    eax
  407664:	jecxz  0x4076d5
  407666:	xchg   esi,eax
  407667:	in     al,0xd
  407669:	dec    esp
  40766a:	(bad)
  40766d:	sbb    eax,0x8cf75960
  407672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407673:	xchg   ebp,eax
  407674:	aas    
  407675:	test   eax,0x8f88e8b5
  40767a:	adc    cl,BYTE PTR [esi]
  40767c:	push   0xde4edb39
  407681:	outs   dx,BYTE PTR ds:[esi]
  407682:	mov    bl,0xe1
  407684:	iret   
  407685:	xor    BYTE PTR [edx],0xab
  407688:	pushf  
  407689:	cwde   
  40768a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40768b:	jno    0x407679
  40768d:	or     BYTE PTR [edi-0x588346d0],ch
  407693:	or     bh,BYTE PTR [ecx+0x5f92fbe4]
  407699:	imul   ecx,DWORD PTR [edi],0x2d
  40769c:	mov    ah,0xa
  40769e:	dec    ecx
  40769f:	retf   
  4076a0:	jmp    0x5cbf:0x3dec6a03
  4076a7:	hlt    
  4076a8:	mov    eax,ds:0x54efb47f
  4076ad:	sbb    ebx,DWORD PTR ds:0x4a503d7d
  4076b3:	jmp    0x4076af
  4076b5:	retf   0x6511
  4076b8:	sar    BYTE PTR [ebp-0x2a],0xa3
  4076bc:	(bad)  
  4076bd:	pushf  
  4076be:	repz mov esi,0xeb766361
  4076c4:	lahf   
  4076c5:	jmp    0xd1d77a72
  4076ca:	outs   dx,BYTE PTR ds:[esi]
  4076cb:	into   
  4076cc:	stos   DWORD PTR es:[edi],eax
  4076cd:	lea    edi,[ecx]
  4076cf:	fldenv [ebx+edi*8-0x61f4f4a0]
  4076d6:	call   0x470:0x4950693f
  4076dd:	(bad)  
  4076df:	jne    0x407676
  4076e1:	ja     0x40770f
  4076e3:	div    ch
  4076e5:	xor    bl,BYTE PTR [ebp+0x24a41f54]
  4076eb:	and    al,BYTE PTR [esi+0x151cab29]
  4076f1:	jno    0x407739
  4076f3:	dec    edx
  4076f4:	mov    al,ds:0x1f28a2af
  4076f9:	test   DWORD PTR [ebp+esi*2+0x76d0e6e9],0x47660390
  407704:	and    BYTE PTR [ecx-0x54],dh
  407707:	jbe    0x4076ec
  407709:	jg     0x4076d7
  40770b:	sbb    edi,DWORD PTR [eax]
  40770d:	daa    
  40770e:	sbb    ah,BYTE PTR [eax-0x4f]
  407711:	add    al,0xd6
  407713:	rcr    bh,0xf6
  407716:	adc    DWORD PTR [ebx-0x8],0xfb1f834b
  40771d:	xchg   esp,eax
  40771e:	inc    ebx
  40771f:	lock add al,dh
  407722:	out    0x90,eax
  407724:	cs pop ebx
  407726:	and    esp,DWORD PTR [ebx-0x5e]
  407729:	sbb    bh,BYTE PTR [ecx+0x6e]
  40772c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40772d:	xchg   ebx,eax
  40772e:	popf   
  40772f:	sbb    ebx,DWORD PTR [ebx]
  407731:	pop    eax
  407732:	cmp    BYTE PTR [esi],ah
  407734:	ficomp DWORD PTR [ebp+0x1881e1ec]
  40773a:	pop    ebx
  40773b:	adc    al,0x52
  40773d:	xor    ebx,ebp
  40773f:	fild   QWORD PTR [esi-0x60]
  407742:	sub    edx,DWORD PTR [edi]
  407744:	mov    ds:0x380da31e,eax
  407749:	mulps  xmm7,XMMWORD PTR [ebx-0x18]
  40774d:	xchg   ebp,eax
  40774e:	std    
  40774f:	pusha  
  407750:	rcr    BYTE PTR ds:0xce1c0b5b,0x5f
  407757:	jmp    DWORD PTR ds:0x9828baf2
  40775d:	push   ds
  40775e:	gs pop edi
  407760:	rcl    al,cl
  407762:	add    edx,ecx
  407764:	lods   al,BYTE PTR ds:[esi]
  407765:	lea    ecx,[ecx+0x2f1483c4]
  40776b:	hlt    
  40776c:	jno    0x40773c
  40776e:	arpl   WORD PTR [ecx+0x48],dx
  407771:	fist   WORD PTR [ecx+eax*2+0x77010761]
  407778:	xchg   edi,eax
  407779:	fxch   st(1)
  40777b:	dec    eax
  40777c:	sbb    DWORD PTR [edi-0x22],eax
  40777f:	mov    al,0xf7
  407781:	jge    0x407732
  407783:	xor    BYTE PTR [edi],dh
  407785:	test   DWORD PTR [edi-0x6a38d3f2],edi
  40778b:	bound  edx,QWORD PTR [eax-0x8bd278d]
  407791:	bound  ebp,QWORD PTR [ebp+ecx*8-0x2ca601e2]
  407798:	xchg   DWORD PTR [ebx],ebp
  40779a:	imul   ebp,DWORD PTR [ebx],0x51
  40779d:	push   ebp
  40779e:	adc    bh,BYTE PTR [esi+0x61f097dc]
  4077a4:	inc    ebx
  4077a5:	sub    al,0x55
  4077a7:	in     eax,dx
  4077a8:	mov    esi,0x376e9381
  4077ad:	sub    ch,BYTE PTR [eax]
  4077af:	dec    ebp
  4077b0:	add    bl,BYTE PTR [ebx-0x40]
  4077b3:	ins    BYTE PTR es:[edi],dx
  4077b4:	adc    DWORD PTR [ebp+ebp*8-0x30],esp
  4077b8:	mov    ah,BYTE PTR [edi+0x2a]
  4077bb:	cdq    
  4077bc:	and    al,0x47
  4077be:	cmp    edi,DWORD PTR [edx]
  4077c0:	stos   BYTE PTR es:[edi],al
  4077c1:	pop    ebx
  4077c2:	test   DWORD PTR ds:0x6720b73a,edx
  4077c8:	mov    dl,0xa0
  4077ca:	sbb    al,0xc6
  4077cc:	cmp    al,0xed
  4077ce:	popf   
  4077cf:	push   es
  4077d0:	push   esi
  4077d1:	retf   0xe976
  4077d4:	push   eax
  4077d5:	imul   edx,DWORD PTR [esi+0x72bafc49],0x3326c452
  4077df:	ficom  WORD PTR gs:[edx]
  4077e2:	cmp    esi,DWORD PTR [edi+0x7]
  4077e5:	aaa    
  4077e6:	and    esp,DWORD PTR [edx+0x18]
  4077e9:	push   esp
  4077ea:	ds xor eax,eax
  4077ed:	push   0x6fcdb636
  4077f2:	ins    DWORD PTR es:[edi],dx
  4077f3:	and    al,0xfa
  4077f5:	fsubr  QWORD PTR [edi]
  4077f7:	xor    al,0x9b
  4077f9:	inc    esp
  4077fa:	dec    eax
  4077fb:	sub    eax,0xfd491a92
  407800:	stos   BYTE PTR es:[edi],al
  407801:	xchg   ebx,eax
  407802:	in     al,dx
  407803:	je     0x40783d
  407805:	leave  
  407806:	rol    BYTE PTR [ebp-0x8],1
  407809:	stos   BYTE PTR es:[edi],al
  40780a:	aad    0xbc
  40780c:	sub    eax,0xfc6fba94
  407811:	and    ebx,DWORD PTR [ecx+0x73]
  407814:	les    esi,FWORD PTR [esi-0x9]
  407817:	and    ah,BYTE PTR [ebx*2-0x53813cfc]
  40781e:	mov    bh,0xfd
  407820:	fidivr WORD PTR [edi]
  407822:	pusha  
  407823:	adc    al,0x7d
  407825:	and    al,0x88
  407827:	in     al,dx
  407828:	inc    ebx
  407829:	mov    ecx,0x4a2c6b64
  40782e:	loop   0x4077b1
  407830:	jnp    0x4078a9
  407832:	dec    edx
  407833:	mov    BYTE PTR [esi],dl
  407835:	sub    DWORD PTR [edi+0x52575f0c],edx
  40783b:	dec    esp
  40783c:	popf   
  40783d:	rcl    DWORD PTR [edx],1
  40783f:	mov    dh,0x9e
  407841:	or     BYTE PTR [ecx+0x21],0x5f
  407845:	cmp    eax,0x530f20e
  40784a:	shl    BYTE PTR [esi+0x3698a9f9],1
  407850:	jnp    0x4078a6
  407852:	imul   ecx,esp,0xffffffe8
  407855:	push   0xe5ea815d
  40785a:	fs stc 
  40785c:	jno    0x4077ec
  40785e:	in     ax,0x8f
  407861:	pop    ds
  407862:	push   eax
  407863:	sete   ch
  407866:	shl    ah,cl
  407868:	mov    esp,0xdf0648e1
  40786d:	(bad)  
  40786e:	push   ss
  40786f:	test   eax,0xa7b3a92c
  407874:	retf   
  407875:	jo     0x407854
  407877:	sbb    DWORD PTR [ebp-0x1b],edi
  40787a:	outs   dx,BYTE PTR ds:[esi]
  40787b:	sub    DWORD PTR [edx+0x20815a0f],eax
  407881:	inc    edi
  407882:	mov    ebx,0xc5a11f92
  407887:	ins    DWORD PTR es:[edi],dx
  407888:	cmp    DWORD PTR [ebx-0x45],eax
  40788b:	icebp  
  40788c:	sub    ebp,0xffffffef
  40788f:	data16 addr16 sub al,0xb7
  407893:	stos   BYTE PTR es:[edi],al
  407894:	cmp    al,0x16
  407896:	jmp    0xef77:0x62af6038
  40789d:	daa    
  40789e:	fstp   st(7)
  4078a0:	das    
  4078a1:	pop    ebp
  4078a2:	sub    eax,0xa1098d70
  4078a7:	lods   eax,DWORD PTR ds:[esi]
  4078a8:	mov    ch,0x7f
  4078aa:	shl    DWORD PTR [ecx+0x3f],cl
  4078ad:	sub    BYTE PTR [edx+0x2fdad3c6],bh
  4078b3:	sub    edx,ebp
  4078b5:	fisubr DWORD PTR [edx-0x41]
  4078b8:	pop    edi
  4078b9:	adc    ebp,edi
  4078bb:	scas   eax,DWORD PTR es:[edi]
  4078bc:	xor    al,0x1c
  4078be:	and    BYTE PTR [esi+0x15],bl
  4078c1:	(bad)  
  4078c2:	ja     0x407908
  4078c4:	jne    0x407940
  4078c6:	test   eax,0x20bef8b7
  4078cb:	les    esi,FWORD PTR [ebp-0x7]
  4078ce:	pop    ss
  4078cf:	pop    edx
  4078d0:	jns    0x407919
  4078d2:	mov    esi,0x3001ae8e
  4078d7:	(bad)  
  4078d8:	adc    DWORD PTR ds:0x92ebb05c,0x4ec259ba
  4078e2:	add    dh,dl
  4078e4:	hlt    
  4078e5:	or     DWORD PTR [ecx+0x6642223],edi
  4078eb:	or     al,0x3b
  4078ed:	xchg   esp,eax
  4078ee:	in     eax,dx
  4078ef:	int3   
  4078f0:	retf   0xb4c4
  4078f3:	loop   0x407919
  4078f5:	test   DWORD PTR [ebp+0xd1ab9a],eax
  4078fb:	sbb    eax,DWORD PTR [ecx-0x9a9ceb4]
  407901:	mov    DWORD PTR [esi],esi
  407903:	sbb    eax,0x135ba267
  407908:	mov    esi,0xaccbfd10
  40790d:	sub    DWORD PTR [edi+edx*2],edx
  407910:	ins    BYTE PTR es:[edi],dx
  407911:	sbb    al,al
  407913:	cmp    esp,DWORD PTR [edi+0xf]
  407916:	rcr    DWORD PTR [edi+0x2e8719ba],0x8
  40791d:	loope  0x4078a6
  40791f:	enter  0x1907,0x85
  407923:	pop    esp
  407924:	outs   dx,BYTE PTR ds:[esi]
  407925:	pop    edx
  407926:	out    dx,eax
  407927:	push   cs
  407928:	push   ss
  407929:	mov    edi,0x2b70284f
  40792e:	jg     0x407958
  407930:	xchg   ebp,eax
  407931:	pop    es
  407932:	jo     0x4078bd
  407934:	pop    edi
  407935:	cmp    esp,DWORD PTR [esi]
  407937:	pop    eax
  407938:	inc    ebx
  407939:	cmp    al,0x2
  40793b:	call   0x7f073976
  407940:	inc    eax
  407941:	inc    eax
  407942:	add    DWORD PTR [edi-0x56],edx
  407945:	ja     0x4079a5
  407947:	(bad)  
  407948:	loopne 0x407920
  40794a:	inc    esp
  40794b:	ret    
  40794c:	cmp    BYTE PTR [eax],0xc9
  40794f:	jmp    0x164e1315
  407954:	cs push edi
  407956:	mov    ebx,0x1d852fa2
  40795b:	mov    edi,fs
  40795d:	dec    esp
  40795e:	loopne 0x4078e8
  407960:	ret    
  407961:	or     BYTE PTR [edi+edi*2-0x4f],cl
  407965:	mov    WORD PTR [ebx+0x539d5069],ss
  40796b:	xchg   ebp,eax
  40796c:	scas   al,BYTE PTR es:[edi]
  40796d:	xchg   DWORD PTR [eax+0x33],esi
  407970:	mov    ebp,0xf93e9540
  407975:	rol    DWORD PTR [edi+0x332adea],0xbf
  40797c:	jg     0x40796b
  40797e:	sub    al,0x12
  407980:	push   ds
  407981:	daa    
  407982:	int    0x5e
  407984:	pop    ds
  407985:	cdq    
  407986:	jg     0x407928
  407988:	inc    esi
  407989:	mov    ch,0x66
  40798b:	jp     0x407954
  40798d:	pop    eax
  40798e:	cmp    edi,edi
  407990:	leave  
  407991:	jbe    0x407978
  407993:	pop    esp
  407994:	sbb    DWORD PTR [edx+0x10b3057c],edx
  40799a:	mov    ebp,0xbba452a6
  40799f:	cmp    bh,dl
  4079a1:	pop    eax
  4079a2:	pushf  
  4079a3:	mov    esi,0x2d21e3a6
  4079a8:	xchg   ebx,eax
  4079a9:	es jne 0x4079bb
  4079ac:	fld    QWORD PTR [esp+ebx*4+0xd]
  4079b0:	stos   DWORD PTR es:[edi],eax
  4079b1:	xchg   DWORD PTR [ebp+ecx*4+0xd],esp
  4079b5:	in     al,0x7f
  4079b7:	push   es
  4079b8:	inc    ebx
  4079b9:	xchg   esi,eax
  4079ba:	inc    eax
  4079bb:	xchg   ebp,eax
  4079bc:	mov    al,0xf8
  4079be:	imul   esp,DWORD PTR [edi-0x40],0x5ea14cdd
  4079c5:	push   esi
  4079c6:	cmp    ecx,DWORD PTR [esi+esi*8]
  4079c9:	jbe    0x407a29
  4079cb:	cli    
  4079cc:	jge    0x40796a
  4079ce:	sub    bl,BYTE PTR [edi-0x24]
  4079d1:	call   0x1704:0x57d802c0
  4079d8:	xor    BYTE PTR cs:[edi],bl
  4079db:	les    esi,FWORD PTR [ebx+edi*8-0x23]
  4079df:	add    DWORD PTR [edx-0x6],ecx
  4079e2:	jl     0x407a17
  4079e4:	fs mov edi,edx
  4079e7:	fwait
  4079e8:	sub    eax,0x3503904f
  4079ed:	(bad)  [ebx]
  4079ef:	jg     0x4079f4
  4079f1:	xlat   BYTE PTR ds:[ebx]
  4079f2:	mov    esi,0xa7e134a9
  4079f7:	or     BYTE PTR ds:0x89e2dd4e,0x71
  4079fe:	outs   dx,DWORD PTR ds:[esi]
  4079ff:	or     al,0x71
  407a01:	fisubr WORD PTR [ebp+0x397609f8]
  407a07:	icebp  
  407a08:	mov    ebx,0x2e91b318
  407a0d:	fdivr  QWORD PTR [eax-0x4e]
  407a10:	or     eax,0x1de39bcc
  407a15:	clc    
  407a16:	sbb    bh,BYTE PTR [esi+0x15c04d60]
  407a1c:	(bad)  
  407a1d:	pushf  
  407a1e:	in     al,0x9c
  407a20:	das    
  407a21:	push   ecx
  407a22:	repz add DWORD PTR [eax],eax
  407a25:	inc    eax
  407a26:	mov    eax,0xb71dd708
  407a2b:	push   ebp
  407a2c:	int    0x1b
  407a2e:	xchg   ebx,eax
  407a2f:	lahf   
  407a30:	xchg   DWORD PTR [ebp-0x26],esi
  407a33:	(bad)  [ecx+0x106e4b66]
  407a39:	jb     0x4079fd
  407a3b:	sbb    al,0xbd
  407a3d:	or     ah,BYTE PTR [eax-0x543285d9]
  407a43:	in     eax,0x38
  407a45:	imul   ecx,ebp,0xffffffe6
  407a48:	sbb    DWORD PTR [ebx],ebx
  407a4a:	push   0x7f
  407a4c:	sub    al,0xc3
  407a4e:	push   0x57
  407a50:	pop    es
  407a51:	jmp    0x407a78
  407a53:	push   edi
  407a54:	mov    DWORD PTR [eax],ecx
  407a56:	repnz push edx
  407a58:	mov    ah,0x6f
  407a5a:	xor    DWORD PTR [ecx+eax*8-0x2639f0db],ecx
  407a61:	cmc    
  407a62:	push   0xffffffdb
  407a64:	add    ch,bh
  407a66:	fucomp st(3)
  407a68:	or     ah,BYTE PTR [ebx]
  407a6a:	xchg   ecx,eax
  407a6b:	push   esp
  407a6c:	xchg   edi,eax
  407a6d:	xchg   edx,eax
  407a6e:	or     edi,DWORD PTR [esi-0x75]
  407a71:	test   al,0x16
  407a73:	stos   DWORD PTR es:[edi],eax
  407a74:	stos   DWORD PTR es:[edi],eax
  407a75:	rcr    BYTE PTR [edi+eiz*1+0x31e6df36],0x8d
  407a7d:	push   eax
  407a7e:	xor    al,BYTE PTR [esi-0x1f09f8af]
  407a84:	prefetch (bad)
  407a85:	or     eax,0xc3f765e3
  407a8a:	jo     0x407a2f
  407a8c:	les    ebx,FWORD PTR [eax]
  407a8e:	mov    eax,ds:0x898cd781
  407a93:	into   
  407a94:	arpl   WORD PTR [edx],sp
  407a96:	or     al,0x4
  407a98:	xchg   ebx,eax
  407a99:	out    0xec,al
  407a9b:	cmp    DWORD PTR [ebx+0x3],0x7d0159db
  407aa2:	pop    es
  407aa3:	mov    ebx,0x17121d6b
  407aa8:	push   0x42
  407aaa:	mov    ah,0x8f
  407aac:	cdq    
  407aad:	cmp    cl,bh
  407aaf:	sar    BYTE PTR [edi+0x2a239112],0x48
  407ab6:	idiv   DWORD PTR [eax+0x26]
  407ab9:	lahf   
  407aba:	mov    bl,0x48
  407abc:	add    eax,0x6c9faa5b
  407ac1:	xrelease xchg BYTE PTR [eax],dl
  407ac4:	outs   dx,DWORD PTR ds:[esi]
  407ac5:	nop
  407ac6:	retf   0x3eb3
  407ac9:	out    dx,al
  407aca:	dec    esp
  407acb:	mov    BYTE PTR [edi-0x796893b5],dh
  407ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad2:	push   ss
  407ad3:	and    ch,bl
  407ad5:	cli    
  407ad6:	mov    ebp,0x9ea299bb
  407adb:	sbb    eax,0x51b97ca9
  407ae0:	xor    bh,cl
  407ae2:	sub    DWORD PTR [esi+0x74021ccc],ecx
  407ae8:	je     0x407a74
  407aea:	and    eax,DWORD PTR [ebp-0x2d]
  407aed:	repnz pop edx
  407aef:	or     BYTE PTR ds:[ebp+0x75],al
  407af3:	pop    esp
  407af4:	mov    ds:0xd4a1286d,eax
  407af9:	xchg   ebp,eax
  407afa:	add    eax,DWORD PTR [ecx]
  407afc:	loop   0x407b14
  407afe:	jmp    0x407b2d
  407b00:	sub    esi,DWORD PTR [ecx+eax*4]
  407b03:	xchg   ebp,eax
  407b04:	stos   BYTE PTR es:[edi],al
  407b05:	push   0x11
  407b07:	iret   
  407b08:	sbb    BYTE PTR [eax+0x32],dh
  407b0b:	and    dl,ah
  407b0d:	ins    BYTE PTR es:[edi],dx
  407b0e:	ror    DWORD PTR [edx-0x29],1
  407b11:	rcr    dl,cl
  407b13:	das    
  407b14:	int3   
  407b15:	add    ch,BYTE PTR [esi]
  407b17:	push   ebp
  407b18:	imul   eax,DWORD PTR ds:0x46deb488,0x3b8926f8
  407b22:	xchg   ebp,eax
  407b23:	test   eax,0x38eee58b
  407b28:	rcr    DWORD PTR [ebx-0xaa89a46],0x7c
  407b2f:	shl    bl,cl
  407b31:	xchg   edi,eax
  407b32:	push   es
  407b33:	mov    esi,0x2de339f7
  407b38:	add    esp,esi
  407b3a:	sbb    al,0xfb
  407b3c:	lods   al,BYTE PTR ds:[esi]
  407b3d:	ins    DWORD PTR es:[edi],dx
  407b3e:	jnp    0x407b08
  407b40:	sub    DWORD PTR [edi+0x69],ebx
  407b43:	fwait
  407b44:	jmp    0x35dc:0xf09b1ecd
  407b4b:	out    0x1e,eax
  407b4d:	test   BYTE PTR [edx],dh
  407b4f:	jae    0x407b08
  407b51:	lahf   
  407b52:	sub    eax,0x6a9da074
  407b57:	leave  
  407b58:	fidivr DWORD PTR [ebp+0x1ec9294]
  407b5e:	rcl    BYTE PTR [ecx],1
  407b60:	test   eax,0xc7fc4fcd
  407b65:	mov    al,ds:0x8116bcdd
  407b6a:	mov    edx,0xa0c75de6
  407b6f:	dec    ebx
  407b70:	fucomp st(1)
  407b72:	(bad)  
  407b73:	out    0xea,al
  407b75:	mov    edx,0x88913785
  407b7a:	xlat   BYTE PTR ds:[ebx]
  407b7b:	push   0xffffff9d
  407b7d:	es nop
  407b7f:	mov    edi,DWORD PTR [esi+0x62a06996]
  407b85:	fisubr WORD PTR [eax+0x3d]
  407b88:	pop    ss
  407b89:	test   al,0xee
  407b8b:	or     DWORD PTR [esi+0x4e820b59],0x79bb541d
  407b95:	into   
  407b96:	push   ds
  407b97:	or     al,0x6d
  407b99:	add    al,0x30
  407b9b:	adc    ah,BYTE PTR [ebp-0x4c]
  407b9e:	jmp    0x3f62:0xcc6421da
  407ba5:	cdq    
  407ba6:	xor    edi,ebp
  407ba8:	jno    0x407bf5
  407baa:	mov    al,ds:0xffac239e
  407baf:	ficom  DWORD PTR [edi-0x6588c7cf]
  407bb5:	int3   
  407bb6:	xor    eax,0xe073aa9b
  407bbb:	xchg   ecx,eax
  407bbc:	jbe    0x407b6a
  407bbe:	pushf  
  407bbf:	sub    al,0xd6
  407bc1:	and    al,BYTE PTR [edi-0x15]
  407bc4:	sub    ecx,DWORD PTR [esi-0x15afc341]
  407bca:	enter  0xf771,0x9d
  407bce:	pop    ebp
  407bcf:	mov    ecx,0x7b804aa8
  407bd4:	outs   dx,DWORD PTR ds:[esi]
  407bd5:	or     sp,WORD PTR [esi-0x5f]
  407bd9:	in     al,0x2b
  407bdb:	call   DWORD PTR [edx-0x34]
  407bde:	mov    ebx,0xe4ee9ff9
  407be3:	jmp    0x407bf0
  407be5:	push   edi
  407be6:	les    esi,FWORD PTR [ecx+0xf08a887]
  407bec:	sub    al,0xcb
  407bee:	mov    ch,0x28
  407bf0:	sbb    eax,0x28c36b65
  407bf5:	and    dh,BYTE PTR [edi-0x55e81387]
  407bfb:	leave  
  407bfc:	sub    ebx,edi
  407bfe:	xor    al,0x1a
  407c00:	cmp    DWORD PTR [edx+0x161a5df6],edi
  407c06:	cmp    BYTE PTR [eax+eax*1],dh
  407c09:	shl    edi,1
  407c0b:	pop    esi
  407c0c:	sahf   
  407c0d:	in     eax,dx
  407c0e:	and    al,0x2a
  407c10:	pop    edi
  407c11:	sub    BYTE PTR [edi+ecx*2],cl
  407c14:	sti    
  407c15:	mov    ds:0xedd7a3c6,al
  407c1a:	retf   0x5809
  407c1d:	xchg   ebx,eax
  407c1e:	popa   
  407c1f:	clc    
  407c20:	in     al,0xe3
  407c22:	pushf  
  407c23:	cld    
  407c24:	outs   dx,BYTE PTR ds:[esi]
  407c25:	pop    esi
  407c26:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  407c29:	ins    DWORD PTR es:[edi],dx
  407c2a:	test   al,0xb8
  407c2c:	sub    eax,0xb71913bc
  407c31:	cmp    bh,al
  407c33:	xlat   BYTE PTR ds:[ebx]
  407c34:	cmp    eax,0xd2fa5037
  407c39:	xlat   BYTE PTR ds:[ebx]
  407c3a:	inc    eax
  407c3b:	clc    
  407c3c:	lods   al,BYTE PTR ds:[esi]
  407c3d:	sahf   
  407c3e:	add    BYTE PTR [edi+0x15e4bf9b],bh
  407c44:	inc    esp
  407c45:	stc    
  407c46:	daa    
  407c47:	dec    esp
  407c48:	dec    esp
  407c49:	mov    cl,0xeb
  407c4b:	hlt    
  407c4c:	jmp    0x407bf1
  407c4e:	ror    BYTE PTR [edx+eax*8],cl
  407c51:	or     eax,0xb7000535
  407c56:	jne    0x407cc1
  407c58:	xor    DWORD PTR [esi-0x1a],esp
  407c5b:	xor    edx,DWORD PTR [ecx+0x4d3aba57]
  407c61:	shl    DWORD PTR [esi+ebx*1+0x4be80658],1
  407c68:	popf   
  407c69:	repnz add eax,0x2c689d49
  407c6f:	adc    DWORD PTR [edx+0xef00758],eax
  407c75:	add    DWORD PTR [eax-0x572e6249],esp
  407c7b:	jg     0x407c90
  407c7d:	in     al,dx
  407c7e:	cmp    ah,ah
  407c80:	fnstsw WORD PTR ds:0x7add50a8
  407c86:	popa   
  407c87:	mov    ebx,0x78686441
  407c8c:	mov    esp,0xfe6ff0fa
  407c91:	cmc    
  407c92:	and    eax,0xe7e045a4
  407c97:	push   es
  407c98:	add    eax,0xad418c3
  407c9d:	push   0xffffffae
  407c9f:	mov    eax,cs
  407ca1:	shr    BYTE PTR [edx-0x30],0x8d
  407ca5:	mov    ch,0xfb
  407ca7:	ret    
  407ca8:	loop   0x407c8d
  407caa:	out    dx,eax
  407cab:	shr    eax,1
  407cad:	and    esp,esi
  407caf:	hlt    
  407cb0:	ret    
  407cb1:	inc    ebp
  407cb2:	sbb    al,0x69
  407cb4:	dec    ecx
  407cb5:	inc    edx
  407cb6:	dec    ecx
  407cb7:	jl     0x407cef
  407cb9:	inc    eax
  407cba:	sub    al,0xd0
  407cbc:	arpl   WORD PTR [esi],si
  407cbe:	jae    0x407ca4
  407cc0:	xor    ah,bl
  407cc2:	mov    bl,0x87
  407cc4:	add    al,0xda
  407cc6:	fcmovu st,st(4)
  407cc8:	rol    ebp,1
  407cca:	mov    al,ds:0x3d6ea640
  407ccf:	xlat   BYTE PTR ds:[ebx]
  407cd0:	pop    edx
  407cd1:	xchg   ecx,eax
  407cd2:	mov    esp,0x34a9d5cc
  407cd7:	add    al,0x4c
  407cd9:	xchg   ebp,eax
  407cda:	mov    ds:0x10a2ace4,eax
  407cdf:	mov    ah,0x45
  407ce1:	(bad)  
  407ce2:	rcl    DWORD PTR [esi-0x6c],1
  407ce5:	sbb    BYTE PTR [ecx+edx*1+0x4bb51c4d],al
  407cec:	xlat   BYTE PTR ds:[ebx]
  407ced:	xor    BYTE PTR [ebp+0x4b],dh
  407cf0:	dec    ebx
  407cf1:	repz (bad) 
  407cf3:	sbb    DWORD PTR [ecx+0x35],esp
  407cf6:	stos   DWORD PTR es:[edi],eax
  407cf7:	into   
  407cf8:	mov    esp,0x9aaaac8c
  407cfd:	and    cl,BYTE PTR [ecx+esi*4]
  407d00:	mov    bh,0x37
  407d02:	mov    bh,0x43
  407d04:	add    dh,BYTE PTR [esp+edx*4+0x7]
  407d08:	std    
  407d09:	das    
  407d0a:	xchg   esi,eax
  407d0c:	addr16 es push ebp
  407d0f:	mov    dh,0x88
  407d11:	push   esi
  407d12:	in     eax,dx
  407d13:	xchg   dh,dh
  407d15:	xchg   ebx,eax
  407d16:	push   edx
  407d17:	iret   
  407d18:	leave  
  407d19:	add    al,0x0
  407d1b:	fst    QWORD PTR [ebp-0x6e]
  407d1e:	inc    esp
  407d1f:	cmc    
  407d20:	hlt    
  407d21:	xchg   edi,eax
  407d22:	xchg   edx,eax
  407d23:	jp     0x407cf7
  407d25:	call   0x3a7b:0xdf7fccad
  407d2c:	out    0x5e,al
  407d2e:	or     dl,BYTE PTR [ecx+0x27e36b34]
  407d34:	inc    ebx
  407d35:	pusha  
  407d36:	sbb    al,0x35
  407d38:	out    dx,al
  407d39:	test   eax,0x58b09a3
  407d3e:	sti    
  407d3f:	out    0x81,eax
  407d41:	push   eax
  407d42:	or     eax,0xc38700a1
  407d47:	and    eax,0xe8a349d2
  407d4c:	or     eax,0xa1d77e67
  407d51:	ja     0x407d34
  407d53:	sti    
  407d54:	ficomp DWORD PTR [ebx-0x7193df25]
  407d5a:	jge    0x407d25
  407d5c:	xchg   esp,eax
  407d5d:	jno    0x407cf1
  407d5f:	fxch   st(7)
  407d61:	shl    DWORD PTR [edx],0xac
  407d64:	xlat   BYTE PTR ds:[ebx]
  407d65:	std    
  407d66:	dec    esp
  407d67:	scas   eax,DWORD PTR es:[edi]
  407d68:	mov    ecx,0x68fcf11e
  407d6d:	pop    ecx
  407d6e:	inc    ebx
  407d6f:	enter  0xd214,0x28
  407d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d74:	sbb    bl,BYTE PTR [ebx]
  407d76:	pop    eax
  407d77:	mov    esi,0x71fdfa94
  407d7c:	dec    ebx
  407d7d:	inc    edx
  407d7e:	call   0x8b76:0x6d35582e
  407d85:	(bad)  
  407d88:	dec    esi
  407d89:	jg     0x407d10
  407d8b:	sti    
  407d8c:	call   0x1c75ef14
  407d91:	and    al,0xd2
  407d93:	jno    0x407d26
  407d95:	adc    cl,BYTE PTR [edi+0x17]
  407d98:	addr16 push eax
  407d9a:	fsub   QWORD PTR [esi-0x8]
  407d9d:	lods   al,BYTE PTR ds:[esi]
  407d9e:	sub    ecx,DWORD PTR [ebx+0x62243c64]
  407da4:	shl    DWORD PTR [ecx],0x8a
  407da7:	stos   BYTE PTR es:[edi],al
  407da8:	xchg   ebx,eax
  407da9:	xchg   esi,eax
  407daa:	daa    
  407dab:	aas    
  407dac:	adc    cl,ah
  407dae:	loopne 0x407d6c
  407db0:	jae    0x407ddc
  407db2:	xor    al,0x31
  407db4:	mov    dl,0xc9
  407db6:	sbb    DWORD PTR [ebx],0xa61076ad
  407dbc:	arpl   WORD PTR ds:0xc4ba105c,dx
  407dc2:	mov    eax,0x2d16227d
  407dc7:	cmp    eax,0xfb19ca35
  407dcc:	push   eax
  407dcd:	and    eax,0xea53bb30
  407dd2:	dec    ebp
  407dd3:	and    DWORD PTR [ebp-0x7e],eax
  407dd6:	test   al,0x5b
  407dd8:	(bad)  
  407dd9:	and    ebx,DWORD PTR [esi-0x118fbcec]
  407ddf:	pmaxub mm7,QWORD PTR [ecx-0x54]
  407de3:	push   edi
  407de4:	aas    
  407de5:	dec    edi
  407de6:	dec    edi
  407de7:	fsubr  DWORD PTR [ecx+0x43523a16]
  407ded:	fnstcw WORD PTR [ebp-0x8dfcfb8]
  407df3:	pop    edx
  407df4:	mov    al,0xa6
  407df6:	mov    esi,0xbc14103b
  407dfb:	push   ebp
  407dfc:	pop    ebx
  407dfd:	outs   dx,DWORD PTR ds:[esi]
  407dfe:	dec    edi
  407dff:	push   ds
  407e00:	scas   eax,DWORD PTR es:[edi]
  407e01:	repnz lods eax,DWORD PTR ds:[esi]
  407e03:	in     al,dx
  407e04:	sub    esi,DWORD PTR [edx-0x7f]
  407e07:	ds out 0x6,eax
  407e0a:	mov    al,BYTE PTR [edi+esi*2]
  407e0d:	pop    ebx
  407e0e:	js     0x407dce
  407e10:	push   ebx
  407e11:	dec    edx
  407e12:	test   DWORD PTR [edi],edx
  407e14:	sbb    esp,DWORD PTR [ebx]
  407e16:	adc    DWORD PTR [ebp+0x3a],esi
  407e19:	push   ecx
  407e1a:	adc    BYTE PTR [eax+0x23],ah
  407e1d:	lods   eax,DWORD PTR ds:[esi]
  407e1e:	nop
  407e1f:	mov    ecx,0xdb35da10
  407e24:	add    BYTE PTR [esi-0x522ddaa1],ah
  407e2a:	aam    0x42
  407e2c:	mov    cl,0x34
  407e2e:	jne    0x407e55
  407e30:	scas   al,BYTE PTR es:[edi]
  407e31:	pop    ecx
  407e32:	add    BYTE PTR ss:[ebx+0x716a52f],ch
  407e39:	scas   al,BYTE PTR es:[edi]
  407e3a:	add    BYTE PTR ds:0x5a88d59f,cl
  407e40:	sub    eax,0xa6b927fe
  407e45:	pop    ss
  407e46:	test   al,0x91
  407e48:	out    0x2e,eax
  407e4a:	ret    
  407e4b:	out    0x77,eax
  407e4d:	jnp    0x407e70
  407e4f:	pop    edi
  407e50:	mov    esp,DWORD PTR [edx]
  407e52:	retf   0xdcbf
  407e55:	dec    esp
  407e56:	js     0x407e71
  407e58:	jno    0x407e5f
  407e5a:	and    BYTE PTR [esi-0x5a36b798],0xd1
  407e61:	xor    al,0x69
  407e63:	dec    edx
  407e64:	(bad)  
  407e65:	loope  0x407e25
  407e67:	sahf   
  407e68:	mov    ecx,0x28162305
  407e6d:	add    cl,cl
  407e6f:	pop    esp
  407e70:	sub    BYTE PTR [ebp+0x78dffbdd],0x23
  407e77:	call   0x67891942
  407e7c:	pop    ss
  407e7d:	push   ss
  407e7e:	popf   
  407e7f:	add    eax,0x486bec98
  407e84:	ds popa 
  407e86:	inc    edi
  407e87:	sub    dl,dl
  407e89:	fidivr WORD PTR [ecx]
  407e8b:	dec    ecx
  407e8c:	data16 adc al,0x63
  407e8f:	mov    al,ds:0x577a2a86
  407e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e95:	pop    eax
  407e96:	push   ebx
  407e97:	test   BYTE PTR [edx+0xe],0x6f
  407e9b:	sub    al,0x98
  407e9d:	pop    ebp
  407e9e:	mov    bh,0xa4
  407ea0:	dec    esp
  407ea1:	xchg   DWORD PTR [ebx-0x16dd7ac5],eax
  407ea7:	pop    eax
  407ea8:	pop    edi
  407ea9:	popa   
  407eaa:	xchg   ebp,eax
  407eab:	retf   0x48b3
  407eae:	ins    BYTE PTR es:[edi],dx
  407eaf:	pop    edx
  407eb0:	dec    edi
  407eb1:	arpl   WORD PTR [eax],dx
  407eb3:	sbb    BYTE PTR [edi+edx*1-0x1c],bh
  407eb7:	cmp    al,0x8f
  407eb9:	jp     0x407ec1
  407ebb:	add    dh,BYTE PTR [ebx]
  407ebd:	loopne 0x407e87
  407ebf:	mov    ds:0xf11a670b,al
  407ec4:	sahf   
  407ec5:	cmp    ebx,ebx
  407ec7:	or     bl,BYTE PTR [ecx]
  407ec9:	xchg   ebp,eax
  407eca:	add    ch,bh
  407ecc:	das    
  407ecd:	mov    edx,0x298a9000
  407ed2:	inc    esp
  407ed3:	rcr    BYTE PTR [eax],1
  407ed5:	je     0x407f30
  407ed7:	mov    al,ds:0x603f6fa4
  407edc:	lods   eax,DWORD PTR ds:[esi]
  407edd:	lds    ebx,FWORD PTR [ecx]
  407edf:	retf   0xa2b
  407ee2:	inc    eax
  407ee3:	cwde   
  407ee4:	jge    0x407ec7
  407ee6:	jle    0x407f09
  407ee8:	scas   eax,DWORD PTR es:[edi]
  407ee9:	dec    ecx
  407eea:	sbb    edi,DWORD PTR [esi]
  407eec:	jmp    0x407eeb
  407eee:	in     eax,0xa4
  407ef0:	ins    DWORD PTR es:[edi],dx
  407ef1:	out    dx,al
  407ef2:	jg     0x407eac
  407ef4:	loope  0x407e8d
  407ef6:	push   edi
  407ef7:	sub    BYTE PTR [edi-0x16],al
  407efa:	shl    BYTE PTR [edx+0x2e],cl
  407efd:	mov    cl,0x51
  407eff:	push   ebx
  407f00:	sbb    ebp,edi
  407f02:	fisubr WORD PTR [esi+edi*1-0x5afd7beb]
  407f09:	add    al,0x86
  407f0b:	xlat   BYTE PTR ds:[ebx]
  407f0c:	xchg   esi,eax
  407f0d:	(bad)  
  407f0f:	sahf   
  407f10:	pop    eax
  407f11:	cmc    
  407f12:	push   ebx
  407f13:	or     DWORD PTR [ebx-0x69],0x47
  407f17:	daa    
  407f18:	mov    dh,0x6e
  407f1a:	sbb    dl,BYTE PTR [ebx+0x36]
  407f1d:	xor    al,bh
  407f1f:	or     cl,bl
  407f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f22:	push   edx
  407f23:	add    ah,dh
  407f25:	(bad)  
  407f26:	aam    0x79
  407f28:	xchg   BYTE PTR [ecx],dh
  407f2a:	jmp    0x407f6e
  407f2c:	and    al,0xb5
  407f2e:	lahf   
  407f2f:	mov    ebp,0x84ebb427
  407f34:	inc    esp
  407f35:	aas    
  407f36:	add    DWORD PTR [ebx+0x20],esp
  407f39:	ret    
  407f3a:	(bad)  
  407f3b:	test   eax,0xe224a7b5
  407f40:	repz xor eax,0x969ccaa5
  407f46:	(bad)
  407f49:	mov    al,bh
  407f4b:	fcomp  DWORD PTR [ecx+0x3]
  407f4e:	pop    esi
  407f4f:	mov    bl,0xd5
  407f51:	mov    WORD PTR [ebx],ds
  407f53:	test   BYTE PTR [eax-0x5d493456],al
  407f59:	outs   dx,DWORD PTR ds:[esi]
  407f5a:	push   edx
  407f5b:	xor    ecx,ebp
  407f5d:	popf   
  407f5e:	stc    
  407f5f:	(bad)  [ebp+0x1a]
  407f62:	mov    bh,0x96
  407f64:	jne    0x407fb1
  407f66:	lods   eax,DWORD PTR ds:[esi]
  407f67:	pop    eax
  407f68:	lds    ebx,FWORD PTR [eax]
  407f6a:	loopne 0x407fca
  407f6c:	into   
  407f6d:	add    ax,0xc6c8
  407f71:	cmovl  edx,DWORD PTR [edx]
  407f74:	sub    eax,0xf62531c2
  407f79:	push   edx
  407f7a:	add    BYTE PTR [ebx],dh
  407f7c:	fnstcw WORD PTR [edi]
  407f7e:	or     al,0xde
  407f80:	cmp    dh,dl
  407f82:	ins    BYTE PTR es:[edi],dx
  407f83:	and    ebx,DWORD PTR ss:[edx+0x3d]
  407f87:	ror    DWORD PTR [esi-0x54e21142],cl
  407f8d:	lock jmp 0x2d38023e
  407f93:	xor    ebp,DWORD PTR [ebx+0x58]
  407f96:	cdq    
  407f97:	lods   eax,DWORD PTR ds:[esi]
  407f98:	sbb    eax,0x2d91f574
  407f9d:	pop    eax
  407f9e:	dec    edi
  407f9f:	call   0xa4ef:0xda0ec11b
  407fa6:	xor    eax,0x95ad44b3
  407fab:	(bad)  
  407fac:	and    bl,ch
  407fae:	vpunpcklbw ymm7,ymm0,YMMWORD PTR [esi]
  407fb2:	push   esi
  407fb3:	in     eax,0xed
  407fb5:	push   ss
  407fb6:	sub    bh,bh
  407fb8:	mov    cl,0x2e
  407fba:	repnz fisubr DWORD PTR [eax-0x67]
  407fbe:	mov    al,bl
  407fc0:	cmp    cl,cl
  407fc2:	mov    esi,DWORD PTR [ebx-0xc]
  407fc5:	xchg   esi,eax
  407fc6:	and    eax,DWORD PTR [ebx+0x52]
  407fc9:	adc    esp,edi
  407fcb:	sahf   
  407fcc:	pop    ebx
  407fcd:	jae    0x408010
  407fcf:	repnz sbb BYTE PTR ss:[ebp+0x735936aa],dh
  407fd7:	xchg   esi,eax
  407fd8:	cld    
  407fd9:	jg     0x40800a
  407fdb:	jns    0x407faa
  407fdd:	clc    
  407fde:	pop    esi
  407fdf:	jl     0x407f84
  407fe1:	or     DWORD PTR [eax],ecx
  407fe3:	xchg   dh,dl
  407fe5:	xchg   BYTE PTR [edi+0x65fb9a16],bl
  407feb:	daa    
  407fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fed:	jmp    0x407f95
  407fef:	ds loopne 0x407fc9
  407ff2:	fcomp  st(6)
  407ff4:	push   eax
  407ff5:	(bad)  
  407ff6:	in     al,dx
  407ff7:	(bad)  
  407ff8:	ins    DWORD PTR es:[edi],dx
  407ff9:	and    edi,DWORD PTR [ecx-0x6c]
  407ffc:	push   esi
  407ffd:	outs   dx,DWORD PTR ds:[esi]
  407ffe:	sub    BYTE PTR [edi+0xaf3b760],cl
  408004:	jl     0x408075
  408006:	and    dh,BYTE PTR [eax+0x6d]
  408009:	daa    
  40800a:	retw   
  40800c:	and    BYTE PTR [esi-0x58],dh
  40800f:	sbb    dl,BYTE PTR [eax]
  408011:	push   ebx
  408012:	jmp    DWORD PTR [edi+0x605c2561]
  408018:	mov    eax,DWORD PTR [edi-0x66c63b6]
  40801e:	mov    esp,0xb7abee53
  408023:	push   edx
  408024:	sub    bh,al
  408026:	cwde   
  408027:	fwait
  408028:	or     DWORD PTR [ebx+0x10],ecx
  40802b:	or     ebx,ebp
  40802d:	call   0xd3e6ba0f
  408032:	scas   al,BYTE PTR es:[edi]
  408033:	jo     0x407fb7
  408035:	fs nop
  408037:	call   0xa35ddb34
  40803c:	cmp    esi,esp
  40803e:	pop    ebx
  40803f:	mov    dh,0x80
  408041:	fcom   QWORD PTR [esi-0x5640e08c]
  408047:	ss ja  0x408012
  40804a:	ret    
  40804b:	xchg   edx,eax
  40804c:	fadd   DWORD PTR [edx]
  40804e:	gs push eax
  408050:	pushf  
  408051:	mov    ah,0x63
  408053:	addr16 cmp bl,0x14
  408057:	out    0xf3,eax
  408059:	js     0x40806d
  40805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805c:	mov    eax,ds:0x30078a99
  408061:	mov    eax,0xc015eb93
  408066:	push   ebp
  408067:	add    BYTE PTR [edx-0xe],dh
  40806a:	ret    0x5b0c
  40806d:	push   es
  40806e:	mov    ebp,0xb7ed2f9
  408073:	dec    esp
  408074:	(bad)  
  408075:	xchg   esp,eax
  408076:	out    dx,al
  408077:	cmp    ecx,DWORD PTR [ebx+0x1f0e884c]
  40807d:	int    0x4
  40807f:	shr    BYTE PTR [ebx+0x9],cl
  408082:	dec    ebx
  408083:	sbb    al,0xd7
  408085:	repz xor cl,ch
  408088:	mov    ds:0x14f547c1,al
  40808d:	inc    edx
  40808e:	pushf  
  40808f:	test   BYTE PTR ds:[edx-0x58],ch
  408093:	jle    0x55e49d95
  408099:	jne    0x408074
  40809b:	and    edx,DWORD PTR [esi+edi*8]
  40809e:	lods   al,BYTE PTR ds:[esi]
  40809f:	jbe    0x408033
  4080a1:	fistp  DWORD PTR [ebx+0x4c5d7f46]
  4080a7:	or     edx,DWORD PTR [ebp+0xc]
  4080aa:	jno    0x408035
  4080ac:	mov    al,BYTE PTR [edx+ebp*1+0x64]
  4080b0:	ror    BYTE PTR [edx+eax*1+0x5e64662b],cl
  4080b7:	xlat   BYTE PTR ds:[ebx]
  4080b8:	jo     0x40811d
  4080ba:	mov    bh,0xc4
  4080bc:	pop    ebx
  4080bd:	cmp    eax,0xf317b30c
  4080c2:	inc    ebp
  4080c3:	in     al,dx
  4080c4:	xchg   eax,ecx
  4080c6:	push   esp
  4080c7:	xor    al,0x60
  4080ca:	xchg   DWORD PTR [ebp-0x70],esp
  4080cd:	int3   
  4080ce:	ror    BYTE PTR [ebx-0x33],1
  4080d1:	fcmovu st,st(1)
  4080d3:	rcr    BYTE PTR [ecx+0x3ffd5e55],cl
  4080d9:	ror    DWORD PTR [ebx],0x95
  4080dc:	dec    ebp
  4080dd:	add    BYTE PTR [eax+0x61],0x99
  4080e1:	add    ah,bh
  4080e3:	mov    ah,0xcc
  4080e5:	stos   DWORD PTR es:[edi],eax
  4080e6:	adc    BYTE PTR [edx+ebx*8+0x409e3493],0xe0
  4080ee:	ss push 0x485f3fd8
  4080f4:	loopne 0x408120
  4080f6:	sbb    DWORD PTR [ebx+0x38],ebx
  4080f9:	and    al,0xd3
  4080fb:	shl    DWORD PTR [edi+ecx*4-0x17],1
  4080ff:	data16 mov ch,0x7a
  408102:	out    0xc4,al
  408104:	xor    eax,0xd6c0a89c
  408109:	sahf   
  40810a:	push   ecx
  40810b:	or     DWORD PTR [esi+0x15bfd1f1],ebx
  408111:	out    0x5b,al
  408113:	cs ins DWORD PTR es:[edi],dx
  408115:	xchg   esp,eax
  408116:	(bad)  
  408117:	fsubrp st(7),st
  408119:	or     DWORD PTR [eax-0x1b8ac25d],ebp
  40811f:	aad    0xd7
  408121:	(bad)  
  408123:	push   esp
  408124:	mov    ch,BYTE PTR [ecx]
  408126:	fiadd  WORD PTR [ecx+0x412d5ebb]
  40812c:	imul   ebx,DWORD PTR [esi+0x460a25c9],0x2
  408133:	popa   
  408134:	push   cs
  408135:	adc    eax,ebx
  408137:	mov    edi,0xa637012d
  40813c:	daa    
  40813d:	mov    eax,ds:0x8f328ba1
  408142:	push   0xffffffca
  408144:	dec    ax
  408146:	mul    ebx
  408148:	aas    
  408149:	push   ds
  40814a:	jge    0x40813c
  40814c:	sub    BYTE PTR [edx+0x2c],cl
  40814f:	or     al,0x6e
  408151:	mov    bl,0x1
  408153:	into   
  408154:	xadd   DWORD PTR [eax-0xd],eax
  408158:	push   eax
  408159:	scas   eax,DWORD PTR es:[edi]
  40815a:	or     DWORD PTR [esi+eax*1],edx
  40815d:	pop    ecx
  40815e:	push   esi
  40815f:	ret    
  408160:	(bad)  
  408161:	retf   
  408162:	inc    esi
  408163:	pop    ebp
  408164:	jecxz  0x408175
  408166:	enter  0xca1f,0x8e
  40816a:	in     al,dx
  40816b:	push   eax
  40816c:	cmp    BYTE PTR [edi],bl
  40816e:	sbb    bh,BYTE PTR [esi-0x64]
  408171:	jle    0x4081d8
  408173:	push   edi
  408174:	inc    ebp
  408175:	pop    DWORD PTR ds:0xfb38471b
  40817b:	fistp  WORD PTR ds:0x401e6e99
  408181:	sbb    eax,0xbdc5fd17
  408186:	xor    BYTE PTR [ecx],dl
  408188:	adc    edi,DWORD PTR [ecx]
  40818a:	sbb    BYTE PTR [edi+ebx*1-0x31c50970],bl
  408191:	sahf   
  408192:	stos   DWORD PTR es:[edi],eax
  408193:	gs rol bl,1
  408196:	push   edi
  408197:	xchg   ecx,eax
  408198:	sub    BYTE PTR [edi],dh
  40819a:	sub    edx,DWORD PTR [ecx+0x50]
  40819d:	or     eax,0xa660f3a3
  4081a2:	push   ebx
  4081a3:	retf   
  4081a4:	mov    cl,0xfd
  4081a6:	mov    bh,BYTE PTR [ebp-0x7f]
  4081a9:	pop    ebp
  4081aa:	and    al,0x63
  4081ac:	inc    si
  4081ae:	xor    al,0x9e
  4081b0:	sub    al,BYTE PTR [edx-0x32]
  4081b3:	push   0x62
  4081b5:	ficomp WORD PTR [eax-0x1b]
  4081b8:	call   DWORD PTR [edi+0x7ea1b934]
  4081be:	sub    al,0x77
  4081c0:	jne    0x408234
  4081c2:	sub    BYTE PTR cs:[edx+0x7b],0x7a
  4081c7:	mov    al,0x1
  4081c9:	mov    bl,0xfe
  4081cb:	lods   eax,DWORD PTR ds:[esi]
  4081cc:	(bad)  
  4081cd:	scas   al,BYTE PTR es:[edi]
  4081ce:	call   0xe9fa1a2f
  4081d3:	sub    BYTE PTR [eax],ch
  4081d5:	sbb    BYTE PTR [edx],0xf1
  4081d8:	inc    ebx
  4081d9:	ret    0x7552
  4081dc:	inc    edi
  4081dd:	xchg   BYTE PTR [esi+0x57],dl
  4081e0:	leave  
  4081e1:	adc    bh,BYTE PTR [edx]
  4081e3:	xor    bl,BYTE PTR [edi-0x67ec90e9]
  4081e9:	pop    esi
  4081ea:	mov    edx,0x2400a07c
  4081ef:	pop    ebp
  4081f0:	push   eax
  4081f1:	mov    ebx,0xdfea8b73
  4081f6:	mov    ebx,0x54239a3d
  4081fb:	shl    BYTE PTR [edi+0x331d07b1],cl
  408201:	sbb    al,0xa7
  408203:	inc    esp
  408204:	xor    edi,DWORD PTR ds:[edx+0x1d]
  408208:	stc    
  408209:	xor    DWORD PTR [ecx-0x71],ebx
  40820c:	mov    ah,0x1d
  40820e:	mov    BYTE PTR [esi-0x63],bl
  408211:	fimul  WORD PTR [ebp-0x7fb79c81]
  408217:	push   esp
  408218:	out    0xf8,eax
  40821a:	les    esi,FWORD PTR [eax-0x49]
  40821d:	inc    edi
  40821e:	fcmove st,st(3)
  408220:	inc    ebx
  408221:	sub    BYTE PTR [esi-0x36],ah
  408224:	sbb    ch,BYTE PTR [ebp+0x6d]
  408227:	jge    0x408223
  408229:	xchg   esi,eax
  40822a:	dec    esp
  40822b:	push   esi
  40822c:	jecxz  0x4081d8
  40822e:	retf   
  40822f:	and    ecx,edx
  408231:	sbb    eax,0xc78d3c40
  408236:	sub    DWORD PTR [ebx+0x69dcacb4],0x73
  40823d:	dec    esi
  40823e:	mov    al,0x1b
  408240:	pop    eax
  408241:	call   0x9bf3:0xe9e5826d
  408248:	sub    eax,0x772211b3
  40824d:	mov    bl,0xf0
  40824f:	dec    esp
  408250:	lods   eax,DWORD PTR ds:[esi]
  408251:	pop    ebp
  408252:	scas   al,BYTE PTR es:[edi]
  408253:	fstp   QWORD PTR [ebp+0x703e4211]
  408259:	or     al,0xc3
  40825b:	or     DWORD PTR [edx+eiz*1+0x77b43b59],eax
  408262:	lea    esp,ds:0xe508733e
  408268:	aas    
  408269:	ja     0x408237
  40826b:	fiadd  DWORD PTR [ecx]
  40826d:	sbb    al,0xf6
  40826f:	ror    DWORD PTR [ebx+0x12ab3f7e],0xfe
  408276:	and    edx,ebx
  408278:	shr    ah,cl
  40827a:	mov    ebp,DWORD PTR [ebx+0x30]
  40827d:	ret    0x7bc1
  408280:	add    eax,0xdbd69538
  408285:	out    0xba,al
  408287:	pushf  
  408288:	mov    DWORD PTR [edx],ebx
  40828a:	rcl    BYTE PTR [ecx],cl
  40828c:	push   ss
  40828d:	(bad)  
  40828e:	ficom  WORD PTR [ecx]
  408290:	ja     0x40828d
  408292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408293:	push   0xffffffa7
  408295:	xchg   edx,eax
  408296:	mov    ds:0x87ef9f99,al
  40829b:	adc    dl,BYTE PTR [edx+0x2877dddf]
  4082a1:	dec    esp
  4082a2:	shr    DWORD PTR ds:[edx-0x28853db0],1
  4082a9:	xor    esi,ecx
  4082ab:	es jne 0x40827e
  4082ae:	push   cs
  4082af:	mov    BYTE PTR [edx+0x34a373f1],al
  4082b5:	adc    eax,0xe4db0faa
  4082ba:	(bad)  
  4082bb:	xchg   esi,eax
  4082bc:	push   ebp
  4082bd:	mov    esp,0x341ddaa
  4082c2:	inc    ebx
  4082c3:	pop    ebp
  4082c4:	jno    0x408262
  4082c6:	xor    al,0x4b
  4082c8:	daa    
  4082c9:	fild   WORD PTR [ebx]
  4082cb:	aaa    
  4082cc:	jbe    0x4082c2
  4082ce:	rol    esp,cl
  4082d0:	mov    ds:0xabd67cc8,eax
  4082d5:	add    al,0x17
  4082d7:	aad    0xec
  4082d9:	jb     0x40826d
  4082db:	push   0x5db58605
  4082e0:	cmp    eax,0xffd6819a
  4082e5:	test   BYTE PTR [ecx+0x23],cl
  4082e8:	adc    ch,BYTE PTR [edx+0x30]
  4082eb:	xor    DWORD PTR [edx],edi
  4082ed:	mov    WORD PTR [eax-0x64],cs
  4082f0:	(bad)  
  4082f2:	and    bl,al
  4082f4:	adc    eax,0xc463b27a
  4082f9:	loope  0x408345
  4082fb:	sub    eax,0x2f8d52a8
  408300:	mov    al,ds:0xcfd92ee4
  408305:	push   eax
  408306:	jb     0x4082c4
  408308:	rcl    ah,1
  40830a:	sub    al,dl
  40830c:	(bad)  
  40830d:	adc    DWORD PTR [edi],0x21cc8c9a
  408313:	xor    eax,0xe1821d4a
  408318:	stos   DWORD PTR es:[edi],eax
  408319:	mov    al,0xe7
  40831b:	and    bh,dh
  40831d:	mov    bh,0x2a
  40831f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408321:	inc    esp
  408322:	mov    gs,WORD PTR [esi+0x2]
  408325:	fnsave [edx]
  408327:	fld    st(0)
  408329:	and    dh,BYTE PTR [esi-0x23f648da]
  40832f:	mov    bh,0x77
  408331:	mov    esp,0x7dcbf462
  408336:	mov    ebp,0xad2aa203
  40833b:	scas   al,BYTE PTR es:[edi]
  40833c:	cli    
  40833d:	mov    bh,BYTE PTR [eax]
  40833f:	loopne 0x4082f8
  408341:	loope  0x40838a
  408343:	inc    eax
  408344:	or     BYTE PTR [ebp+0xc540fd7],dh
  40834a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834b:	shl    esi,cl
  40834d:	adc    dh,BYTE PTR [ecx+0x7c]
  408350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408351:	push   edx
  408352:	daa    
  408353:	ficomp DWORD PTR [edi]
  408355:	jmp    0x3ae176af
  40835a:	jmp    0x40835c
  40835c:	xor    BYTE PTR [ebp-0x1c],0x70
  408360:	test   eax,0x76f13ba6
  408365:	add    bl,BYTE PTR [esi+0x5e70c45]
  40836b:	call   DWORD PTR [ebx+0x42c5c38b]
  408371:	xchg   esp,eax
  408372:	inc    ecx
  408373:	fdiv   QWORD PTR [edi-0x3b7d1b4e]
  408379:	test   eax,0xae850627
  40837e:	and    al,0xac
  408380:	mov    ds:0x3b510c15,al
  408385:	bound  esp,QWORD PTR [edi]
  408387:	xchg   esi,eax
  408388:	xchg   BYTE PTR [edi+0x306205da],dh
  40838e:	inc    eax
  40838f:	into   
  408390:	ret    
  408391:	xor    ch,0x2b
  408394:	jecxz  0x408375
  408396:	rcr    BYTE PTR [ebx],0xfe
  408399:	bound  esp,QWORD PTR [edx-0x71]
  40839c:	push   ss
  40839d:	arpl   WORD PTR ds:0xaabfb54b,ax
  4083a3:	mov    DWORD PTR [edx],0x15741de9
  4083a9:	imul   esi,DWORD PTR gs:[edi+0x4b],0x3c
  4083ae:	dec    edi
  4083af:	jle    0x4083af
  4083b1:	in     eax,0x30
  4083b3:	mov    ch,0x16
  4083b5:	(bad)  
  4083b6:	fwait
  4083b7:	shl    ah,cl
  4083b9:	xor    dh,BYTE PTR [eax+0x12]
  4083bc:	mov    al,0xf0
  4083be:	mov    al,0x53
  4083c0:	and    edx,DWORD PTR [ebp-0x5c]
  4083c3:	pop    esi
  4083c4:	fwait
  4083c5:	cmp    al,0x74
  4083c7:	push   edi
  4083c8:	sti    
  4083c9:	lods   eax,DWORD PTR ds:[esi]
  4083ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083cb:	or     edi,DWORD PTR [ecx+edx*1+0x40]
  4083cf:	mov    al,ds:0x2e47dbe
  4083d4:	cmp    DWORD PTR [edx+0x6a69deea],ecx
  4083da:	out    dx,eax
  4083db:	addr16 (bad) 
  4083dd:	(bad)  
  4083de:	dec    DWORD PTR [esp+ecx*8]
  4083e1:	jns    0x408409
  4083e3:	fwait
  4083e4:	jmp    0x5cef:0x9fcc6dce
  4083eb:	xchg   edi,eax
  4083ec:	xor    eax,0xc00c8613
  4083f1:	add    al,0xd5
  4083f4:	xchg   DWORD PTR [eax],ecx
  4083f6:	fistp  QWORD PTR [esi+0x22d53703]
  4083fc:	sub    eax,0xb4030594
  408401:	jp     0x40844b
  408403:	shl    BYTE PTR [ebp+0xe],cl
  408406:	inc    ecx
  408407:	add    eax,0x51d3157d
  40840c:	mov    cl,0x99
  40840e:	pop    edi
  40840f:	dec    bh
  408411:	lahf   
  408412:	(bad)  
  408413:	in     eax,dx
  408414:	inc    BYTE PTR [edx-0x3d170a8d]
  40841a:	jo     0x408485
  40841c:	les    eax,FWORD PTR [eax]
  40841e:	iret   
  40841f:	mov    cl,BYTE PTR [ebx*8-0x67bf9919]
  408426:	mov    ss,esi
  408428:	and    eax,0xaad3d34b
  40842d:	mov    cl,0xc
  40842f:	sbb    ebp,esp
  408431:	jnp    0x4083b8
  408433:	inc    ecx
  408434:	mov    esi,0xbce17702
  408439:	xchg   esi,eax
  40843a:	mov    dl,0x48
  40843c:	ds (bad) 
  40843e:	cld    
  40843f:	cmc    
  408440:	mov    ah,0x16
  408442:	jnp    0x408472
  408444:	inc    esi
  408445:	mov    ebx,0x49ddccea
  40844a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844b:	les    ebx,FWORD PTR [edx+0x59]
  40844e:	fist   DWORD PTR [ebp-0x36]
  408451:	mov    WORD PTR [ebx-0x7726821d],gs
  408457:	or     al,0x16
  408459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40845a:	add    al,0x2b
  40845c:	out    0x19,al
  40845e:	arpl   WORD PTR [ecx-0x65],cx
  408461:	xor    esi,DWORD PTR ds:0x221bc91e
  408467:	xchg   al,bl
  408469:	sahf   
  40846a:	mov    ebp,eax
  40846c:	xchg   ecx,eax
  40846d:	adc    DWORD PTR [esi+0x56eb8854],eax
  408473:	mov    al,ds:0xa7df90ab
  408478:	jg     0x4084d9
  40847a:	popa   
  40847b:	add    BYTE PTR [ebx],cl
  40847d:	cmp    ebx,DWORD PTR [esi+0x0]
  408480:	pop    ebx
  408481:	dec    ebp
  408482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408483:	add    eax,0xdfeb8117
  408488:	sub    eax,0xe1df41f1
  40848d:	shl    DWORD PTR [ebx],cl
  40848f:	sub    BYTE PTR [ebx+0x4a020c9a],ch
  408495:	cdq    
  408496:	call   0xa59a:0x7a4b8eda
  40849d:	adc    ebx,esi
  40849f:	sub    al,0xaa
  4084a1:	pop    es
  4084a2:	lea    ecx,[esi]
  4084a4:	mov    edx,0x7b631d51
  4084a9:	sub    BYTE PTR [edx-0x66badb71],cl
  4084af:	dec    ecx
  4084b0:	(bad)  
  4084b1:	fcomp  DWORD PTR [esi+0x41c4a58d]
  4084b7:	pop    ss
  4084b8:	popa   
  4084b9:	gs push ebx
  4084bb:	sub    ecx,ecx
  4084bd:	push   0xffffffcc
  4084bf:	xor    cl,dl
  4084c1:	cwde   
  4084c2:	mov    ds:0xe7430f89,eax
  4084c7:	fdivr  st(7),st
  4084c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ca:	add    al,0x3d
  4084cc:	fldenv [ecx+0x6c6a1d16]
  4084d2:	mov    bl,0xa
  4084d4:	fidivr DWORD PTR [ebp+ebp*8+0x25]
  4084d8:	jmp    0x408482
  4084da:	inc    esp
  4084db:	call   0x86cad3a0
  4084e0:	sub    ah,BYTE PTR [edi-0x1094710b]
  4084e6:	mov    bh,0x1
  4084e8:	mov    eax,ds:0xcb4361f6
  4084ed:	int3   
  4084ee:	aad    0x55
  4084f0:	adc    eax,ecx
  4084f2:	je     0x4084f4
  4084f4:	mov    esi,eax
  4084f6:	mov    edx,0xb83249cb
  4084fb:	pop    ds
  4084fc:	fild   DWORD PTR [edx-0x3374d66b]
  408502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408503:	addr16 xor eax,0x362bfbf9
  408509:	xlat   BYTE PTR ds:[ebx]
  40850a:	loopne 0x40848e
  40850c:	push   esp
  40850d:	dec    ebx
  40850e:	jns    0x4084ef
  408510:	lahf   
  408511:	pop    esp
  408512:	mov    BYTE PTR [esi-0x49],cl
  408515:	jbe    0x4084c8
  408517:	fs leave 
  408519:	xor    cl,BYTE PTR [ebx-0x2c01a659]
  40851f:	xor    al,al
  408521:	(bad)  
  408522:	aaa    
  408523:	mov    edi,0xaea8d756
  408528:	ja     0x40856b
  40852a:	ret    
  40852b:	mov    bl,0xce
  40852d:	shl    BYTE PTR [ecx-0x66],cl
  408530:	pop    edx
  408531:	adc    BYTE PTR [esi-0x63f06fef],ah
  408537:	jb     0x408545
  408539:	cwde   
  40853a:	(bad)  
  40853b:	jle    0x408573
  40853d:	enter  0xe2c4,0x30
  408541:	xlat   BYTE PTR ds:[ebx]
  408542:	ja     0x40853c
  408544:	xchg   esp,eax
  408545:	sti    
  408546:	in     al,dx
  408547:	test   DWORD PTR [ebp-0xe931801],edx
  40854d:	rol    DWORD PTR [edi+0x3f],0x1
  408551:	and    al,0x3
  408553:	fst    QWORD PTR [ebp+edx*1-0x48]
  408557:	cmp    bh,ah
  408559:	dec    esp
  40855a:	leave  
  40855b:	shl    BYTE PTR [edx+0x32],1
  40855e:	jp     0x408523
  408560:	mov    WORD PTR [edi-0x7d],fs
  408563:	xor    al,0x74
  408565:	mov    ds:0xeca37cff,al
  40856a:	xchg   ebp,eax
  40856b:	ds jb  0x40858d
  40856e:	mov    ah,0xfa
  408570:	dec    esp
  408571:	dec    esi
  408572:	push   eax
  408573:	inc    ebp
  408574:	sbb    eax,edx
  408576:	jnp    0x408539
  408578:	mov    ecx,0x9aebb456
  40857d:	jne    0x40854e
  40857f:	cmp    eax,0x9400fda1
  408584:	cmp    eax,0x91c8a7aa
  408589:	pop    edx
  40858a:	cmp    esp,DWORD PTR [esi]
  40858c:	inc    ebx
  40858d:	mov    ecx,0xbbf621b3
  408592:	call   FWORD PTR [ebp+0x4e]
  408595:	pop    es
  408596:	adc    ebx,DWORD PTR [ecx+0x6e1a1d33]
  40859c:	sub    BYTE PTR [eax+0x5d],ch
  40859f:	push   ecx
  4085a0:	inc    esi
  4085a1:	or     al,0x99
  4085a3:	sub    eax,0x3a350773
  4085a8:	inc    ecx
  4085a9:	popf   
  4085aa:	outs   dx,DWORD PTR ds:[esi]
  4085ab:	adc    BYTE PTR [edx],bh
  4085ad:	icebp  
  4085ae:	xor    eax,ecx
  4085b0:	xor    DWORD PTR [edi+eiz*4+0x4762debe],0x700435b
  4085bb:	pop    esp
  4085bc:	outs   dx,DWORD PTR ds:[esi]
  4085bd:	push   edi
  4085be:	adc    BYTE PTR ds:0xe8f00bc8,al
  4085c4:	xor    BYTE PTR [ebp-0x22f1b934],bh
  4085ca:	push   0x74a2044e
  4085cf:	add    ah,0x35
  4085d2:	add    dh,al
  4085d4:	cld    
  4085d5:	out    dx,eax
  4085d6:	jbe    0x408616
  4085d8:	push   ss
  4085d9:	shl    BYTE PTR [ebp+0x128fb803],1
  4085df:	inc    ebp
  4085e0:	sub    bh,dl
  4085e2:	outs   dx,BYTE PTR ds:[esi]
  4085e3:	out    dx,eax
  4085e4:	push   0xa5a8f1d1
  4085e9:	push   ds
  4085ea:	adc    DWORD PTR [eax+0x5d],0x2a
  4085ee:	pop    es
  4085ef:	xchg   ebp,eax
  4085f0:	(bad)  
  4085f1:	fidivr WORD PTR cs:[eax+0x4fe00d7c]
  4085f8:	adc    al,0x3f
  4085fa:	adc    dh,BYTE PTR [edx]
  4085fc:	scas   al,BYTE PTR es:[edi]
  4085fd:	loope  0x408630
  4085ff:	jle    0x4085de
  408601:	mov    ch,0x49
  408603:	push   ss
  408604:	xchg   edx,eax
  408605:	call   0x70b68469
  40860a:	outs   dx,BYTE PTR ds:[esi]
  40860b:	cmp    BYTE PTR [ebp+0x427e56e9],bl
  408611:	jmp    0x408669
  408613:	jae    0x40864f
  408615:	add    edi,DWORD PTR [edi+0x41da12ad]
  40861b:	fcomp  QWORD PTR [ebp-0x80]
  40861e:	mov    edi,0xc2ffebae
  408623:	lock and eax,0xb212baf5
  408629:	(bad)  
  40862b:	cmp    ecx,DWORD PTR [esi-0x6e]
  40862e:	fsubrp st(5),st
  408630:	cmp    BYTE PTR [ecx+0x6ca8b31e],0x2b
  408637:	pop    ebp
  408638:	rcr    ecx,cl
  40863a:	mov    bh,0xb4
  40863c:	sbb    DWORD PTR [edi+0x2a],edi
  40863f:	int    0xb8
  408641:	pop    eax
  408642:	push   0xffffffd7
  408644:	pusha  
  408645:	lock inc esi
  408647:	mov    al,0x1a
  408649:	(bad)  
  40864a:	sub    al,0x2d
  40864c:	sbb    BYTE PTR [ecx],bh
  40864e:	iret   
  40864f:	rcr    DWORD PTR [edi+0x19],1
  408652:	add    ebx,DWORD PTR [ecx+edi*4]
  408655:	mov    ebx,0xac14cd44
  40865a:	xchg   esi,eax
  40865b:	shl    BYTE PTR [ebx-0x58],1
  40865e:	xlat   BYTE PTR ds:[ebx]
  40865f:	pop    esp
  408660:	inc    edx
  408661:	ins    DWORD PTR es:[di],dx
  408663:	(bad)  
  408664:	mov    esi,0xf5ca2a4f
  408669:	aad    0xf6
  40866b:	mov    eax,0xfa568d85
  408670:	pop    ebx
  408671:	stos   BYTE PTR es:[edi],al
  408672:	push   ebx
  408673:	fs pop ecx
  408675:	and    dl,bl
  408677:	cwde   
  408678:	cwde   
  408679:	mov    esp,0xe6692733
  40867e:	dec    edx
  40867f:	xchg   esi,eax
  408680:	inc    edi
  408681:	adc    al,0x75
  408683:	out    dx,eax
  408684:	xor    esp,edi
  408686:	aam    0xba
  408688:	mov    ecx,0xc4ac26c9
  40868d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40868e:	push   edx
  40868f:	xor    DWORD PTR [ecx-0x1bb7f7e6],edx
  408695:	out    0xfc,al
  408697:	push   ebx
  408698:	dec    esp
  408699:	sub    DWORD PTR [eax],ebx
  40869b:	lds    esp,FWORD PTR [ebp-0x5d]
  40869e:	retf   0x708e
  4086a1:	dec    eax
  4086a2:	adc    BYTE PTR [eax-0x30aed899],dl
  4086a8:	sbb    al,0x85
  4086aa:	xchg   ebx,eax
  4086ab:	ins    DWORD PTR es:[edi],dx
  4086ac:	mov    edx,eax
  4086ae:	dec    edi
  4086af:	cmp    ah,BYTE PTR [esi-0x3da6c3f4]
  4086b5:	push   esi
  4086b6:	inc    edx
  4086b7:	jecxz  0x4086e7
  4086b9:	jmp    0x37dd:0xfc8006dc
  4086c0:	mov    esi,0x95fe6821
  4086c5:	in     eax,dx
  4086c6:	shl    BYTE PTR [esi-0x7cd53f60],cl
  4086cc:	mov    ds:0x129b2b05,al
  4086d1:	test   eax,0x2edcb86f
  4086d6:	or     DWORD PTR [edx-0x2dccfc96],0x8c2835a
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x45c977a5
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)  
  40871e:	in     al,dx
  40871f:	adc    al,0x92
  408721:	inc    ebp
  408722:	push   ss
  408723:	ins    BYTE PTR es:[edi],dx
  408724:	sub    BYTE PTR [ebp-0x65],0xc
  408728:	loop   0x408767
  40872a:	test   al,0xdd
  40872c:	jb     0x4086bf
  40872e:	scas   al,BYTE PTR es:[edi]
  40872f:	(bad)  
  408730:	ret    0x1150
  408733:	add    ecx,DWORD PTR [eax]
  408735:	leave  
  408736:	jge    0x4086da
  408738:	jmp    0x85c7:0x5417e87
  40873f:	adc    al,0x91
  408741:	das    
  408742:	ror    DWORD PTR [eax-0x7493961f],1
  408748:	sar    bl,0xf8
  40874b:	xchg   DWORD PTR [eax],eax
  40874d:	xchg   ebp,eax
  40874e:	cmc    
  40874f:	mov    edi,0x888b32ad
  408754:	xchg   ebp,eax
  408755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408756:	mov    eax,0x1c80d4a7
  40875b:	shr    BYTE PTR [edi+esi*2-0x72],cl
  40875f:	sub    BYTE PTR [edi],al
  408761:	push   ss
  408762:	ins    DWORD PTR es:[edi],dx
  408763:	inc    eax
  408764:	clc    
  408765:	sbb    eax,eax
  408767:	and    ecx,DWORD PTR [edi]
  408769:	push   ebp
  40876a:	sbb    ch,BYTE PTR cs:[eax-0x3b]
  40876e:	popf   
  40876f:	lods   eax,DWORD PTR ds:[esi]
  408770:	out    dx,al
  408771:	inc    eax
  408772:	pop    ebx
  408773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408774:	sub    eax,0x85b0003d
  408779:	sbb    BYTE PTR ds:0x6c01373,0x81
  408780:	push   esp
  408781:	pop    ebx
  408782:	xchg   esp,eax
  408783:	lods   al,BYTE PTR ds:[esi]
  408784:	aas    
  408785:	in     eax,dx
  408786:	iret   
  408787:	mov    dl,0x64
  408789:	xor    dl,BYTE PTR [esi-0x5f]
  40878c:	inc    eax
  40878e:	fst    QWORD PTR [ebx+0x2d1134e3]
  408794:	(bad)  
  408795:	mov    ch,0xec
  408797:	fsub   st,st(1)
  408799:	mov    BYTE PTR ds:0x17be6d9d,ah
  40879f:	popf   
  4087a0:	(bad)  
  4087a2:	pop    esp
  4087a3:	ins    BYTE PTR es:[edi],dx
  4087a4:	jnp    0x4087bc
  4087a6:	mov    ds:0xb414632f,al
  4087ab:	test   eax,0xcac68c68
  4087b0:	push   ecx
  4087b1:	push   ds
  4087b2:	xchg   DWORD PTR [edx+0x40ae8447],edi
  4087b8:	mov    ebp,es
  4087ba:	rol    edi,cl
  4087bc:	pop    edx
  4087bd:	or     bh,BYTE PTR [esi+ebp*1+0x67]
  4087c1:	pop    ecx
  4087c2:	shl    BYTE PTR [eax],0xe9
  4087c5:	out    0x7c,eax
  4087c7:	call   0xa5430030
  4087cc:	popa   
  4087cd:	stc    
  4087ce:	jae    0x40884c
  4087d0:	add    DWORD PTR [eax+0x5d8d1b42],esp
  4087d6:	(bad)  
  4087d7:	rcr    BYTE PTR [edi-0x74],1
  4087da:	mov    ah,0xfe
  4087dc:	jnp    0x408844
  4087de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e0:	pop    edx
  4087e1:	jle    0x4087cd
  4087e3:	jno    0x408812
  4087e5:	adc    al,0xe4
  4087e7:	in     eax,0xf
  4087e9:	adc    al,0xdb
  4087eb:	test   al,0xf8
  4087ed:	adc    edi,DWORD PTR [eax+edx*1-0x23]
  4087f1:	sbb    ch,BYTE PTR [eax]
  4087f3:	jp     0x4087d6
  4087f5:	shr    DWORD PTR [eax],cl
  4087f7:	aam    0x34
  4087f9:	in     eax,dx
  4087fa:	push   0x65
  4087fc:	fcomp  DWORD PTR [edi+edi*8]
  4087ff:	sbb    ch,ch
  408801:	(bad)  
  408802:	or     edi,eax
  408804:	xchg   esp,eax
  408805:	loop   0x408868
  408807:	es mov ebx,0x110d3274
  40880d:	push   es
  40880e:	pminsw mm6,QWORD PTR [eax]
  408811:	jg     0x4087f7
  408813:	and    BYTE PTR [edi],0xa8
  408816:	add    eax,0x56852599
  40881b:	int3   
  40881c:	sbb    eax,esp
  40881e:	sub    bl,dl
  408820:	bound  ebp,QWORD PTR [eax-0x6]
  408823:	adc    DWORD PTR [esi-0xc19e454],ebx
  408829:	xor    eax,0xcbfe77c0
  40882e:	adc    BYTE PTR [esi],0x95
  408831:	jo     0x408815
  408833:	gs mov dl,0x83
  408836:	fnsave [esi]
  408838:	inc    esp
  408839:	jb     0x408822
  40883b:	xchg   esp,eax
  40883c:	icebp  
  40883d:	and    eax,0x2c9d724b
  408842:	mov    ch,0xa4
  408844:	xor    ebx,DWORD PTR [esi]
  408846:	cmp    DWORD PTR [edi+0x55224e41],ebp
  40884c:	nop
  40884d:	mov    DWORD PTR [edi-0x1b],eax
  408850:	mov    ds:0xbb630c77,al
  408855:	sbb    esi,edx
  408857:	dec    bl
  408859:	fbld   TBYTE PTR [edi+0x75]
  40885c:	sti    
  40885d:	push   esp
  40885e:	aaa    
  40885f:	sbb    DWORD PTR [ebx+0x48f5bed3],ebx
  408865:	mov    DWORD PTR [ecx-0x7bea0d60],esp
  40886b:	mov    cl,0x53
  40886d:	jge    0x4088d1
  40886f:	out    dx,eax
  408870:	cld    
  408871:	ja     0x408825
  408873:	pop    ds
  408874:	inc    eax
  408875:	fs inc eax
  408877:	out    dx,al
  408878:	and    eax,0x34d394a4
  40887d:	fwait
  40887e:	in     al,dx
  40887f:	ins    BYTE PTR es:[edi],dx
  408880:	sar    DWORD PTR [edi-0x9f7ea68],cl
  408886:	fcomp  DWORD PTR [ebx+eiz*2]
  408889:	jl     0x40883b
  40888b:	sub    DWORD PTR [ebx-0x1f359669],0x4a
  408892:	sti    
  408893:	(bad)  
  408894:	cli    
  408895:	inc    ebx
  408896:	mov    dl,0x0
  408898:	cmp    cl,BYTE PTR [ebp+0x40]
  40889b:	mov    bl,cl
  40889d:	stc    
  40889e:	imul   esi,DWORD PTR [eax+eax*1],0xffffffc7
  4088a2:	aad    0x61
  4088a4:	push   esi
  4088a5:	call   0x8b011dc2
  4088aa:	hlt    
  4088ab:	stc    
  4088ac:	pop    esi
  4088ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ae:	dec    esp
  4088af:	adc    al,0xad
  4088b1:	mov    ds:0xf92123fc,eax
  4088b6:	xchg   esi,eax
  4088b7:	inc    eax
  4088b8:	bound  ebx,QWORD PTR [ebx]
  4088ba:	add    esi,DWORD PTR [eax]
  4088bc:	fstp   QWORD PTR [eax-0x632f3b6c]
  4088c2:	sar    DWORD PTR [edx],1
  4088c4:	mov    WORD PTR [edi+0x52],es
  4088c7:	inc    esp
  4088c8:	push   0xde4d8eb9
  4088cd:	rol    BYTE PTR [edx],0x85
  4088d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d1:	mov    ch,0xa1
  4088d3:	imul   edx,DWORD PTR [ebx],0x68
  4088d6:	mov    ch,0x9b
  4088d8:	je     0x4088c9
  4088da:	imul   BYTE PTR [esi-0x3d]
  4088dd:	sti    
  4088de:	or     ebx,esi
  4088e0:	xchg   edx,eax
  4088e1:	adc    edi,eax
  4088e3:	mov    eax,ds:0xa5fbfcf9
  4088e8:	xchg   ecx,eax
  4088e9:	loopne 0x408921
  4088eb:	mov    ch,0x64
  4088ed:	mov    al,ds:0x411b8b58
  4088f2:	push   esi
  4088f3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f5:	or     edx,DWORD PTR [edx]
  4088f7:	sub    esp,eax
  4088f9:	jp     0x408903
  4088fb:	xchg   edx,eax
  4088fc:	rol    DWORD PTR [edx-0x1d],0x0
  408900:	xlat   BYTE PTR ds:[ebx]
  408901:	in     eax,dx
  408902:	test   al,0x32
  408904:	fs scas eax,DWORD PTR es:[edi]
  408906:	mov    dl,0x1c
  408908:	cmc    
  408909:	push   0x907b9f32
  40890e:	jo     0x408923
  408910:	dec    esp
  408911:	outs   dx,DWORD PTR ds:[esi]
  408912:	outs   dx,BYTE PTR ds:[esi]
  408913:	rcr    BYTE PTR [ebx+edx*4],0xbe
  408917:	xchg   esi,eax
  408918:	or     al,0xb6
  40891a:	inc    edx
  40891b:	cmp    ebp,ecx
  40891d:	lahf   
  40891e:	inc    ebp
  40891f:	jb     0x40896a
  408921:	push   0xffffff85
  408923:	xchg   ebp,eax
  408924:	ins    BYTE PTR es:[edi],dx
  408925:	sbb    DWORD PTR [edi-0x2a],esp
  408928:	ret    0xeccd
  40892b:	int3   
  40892c:	inc    eax
  40892d:	xchg   sp,si
  408930:	sti    
  408931:	pushf  
  408932:	add    DWORD PTR [ecx+0x1c53ee9e],eax
  408938:	outs   dx,BYTE PTR ds:[esi]
  408939:	pushf  
  40893a:	lock mov cl,0x64
  40893d:	mov    ah,0x81
  40893f:	test   eax,0x7e1efa8a
  408944:	add    bl,0xaa
  408947:	lods   eax,DWORD PTR ds:[esi]
  408948:	daa    
  408949:	ror    BYTE PTR [esi+0x24],cl
  40894c:	mov    esp,0xe294dc1a
  408951:	xor    BYTE PTR [esi],ah
  408953:	mov    dl,0xe6
  408955:	es mov ch,0xc9
  408958:	xchg   esp,eax
  408959:	fldenv [ebp+0x5c]
  40895c:	call   0x6abd3196
  408961:	cmp    BYTE PTR gs:[edx-0x60],bh
  408965:	popf   
  408966:	mov    dh,0x84
  408968:	shl    BYTE PTR [eax+esi*1+0x1b61edaa],1
  40896f:	cmp    eax,0x19a39eb1
  408974:	sbb    eax,0x3be27cc3
  408979:	push   edi
  40897a:	loop   0x4089ce
  40897c:	add    dl,al
  40897e:	arpl   WORD PTR [edx+ebx*2+0x68],si
  408982:	push   edi
  408983:	jo     0x408908
  408985:	mov    dl,0x17
  408987:	leave  
  408988:	add    edi,DWORD PTR [edx-0x54e27584]
  40898e:	(bad)  
  40898f:	jmp    0x40893c
  408991:	loop   0x4089ef
  408993:	lds    ebp,FWORD PTR [ebx+0x7f]
  408996:	add    al,0xf4
  408998:	shr    BYTE PTR ds:0x7a882340,1
  40899e:	fadd   DWORD PTR [esi-0x237efb1a]
  4089a4:	xchg   edi,eax
  4089a5:	xchg   BYTE PTR [ebx-0x6de16b86],bl
  4089ab:	ja     0x408a13
  4089ad:	aam    0xb9
  4089af:	mov    ebp,0x48b83e5c
  4089b4:	imul   ebx,DWORD PTR [esi+0x7345f6ca],0x77
  4089bb:	fcmove st,st(7)
  4089bd:	aas    
  4089be:	dec    esp
  4089bf:	and    al,0x6d
  4089c1:	cmp    BYTE PTR [ebx],dl
  4089c3:	and    edx,0xfffffff5
  4089c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c7:	mov    ebx,0xd41bd116
  4089cc:	call   0xb58a60d5
  4089d1:	sub    al,0x3b
  4089d3:	mov    esp,0x3ee97ed0
  4089d8:	sbb    eax,0x5ddde2ef
  4089dd:	aaa    
  4089de:	jmp    0x4089da
  4089e0:	imul   eax,DWORD PTR [edi+0x6df75906],0xfffffffb
  4089e7:	call   0x7985:0x55b83b14
  4089ee:	and    BYTE PTR [ecx+0x5c6b71dc],dh
  4089f4:	sub    eax,0x6427938d
  4089f9:	pop    ss
  4089fa:	or     al,BYTE PTR [edx+0xe]
  4089fd:	xchg   DWORD PTR [edi],edi
  4089ff:	mov    ch,0x93
  408a01:	xor    DWORD PTR [esi],esp
  408a03:	mul    BYTE PTR [edi]
  408a05:	inc    esp
  408a06:	(bad)
  408a0a:	in     eax,0xe
  408a0c:	retf   
  408a0d:	push   esi
  408a0e:	fistp  WORD PTR [edx+0x6a3445d]
  408a14:	test   ebp,0x80b7fc76
  408a1a:	push   es
  408a1b:	sbb    ecx,eax
  408a1d:	imul   eax,DWORD PTR [ebp+0x305f6d2f],0xe5d0b261
  408a27:	fwait
  408a28:	xchg   DWORD PTR [edx-0x69b1f9d3],ebx
  408a2e:	push   0x6bf30bfc
  408a33:	ins    DWORD PTR es:[edi],dx
  408a34:	stc    
  408a35:	and    BYTE PTR [edi+0x666fd6c8],dl
  408a3b:	push   ds
  408a3c:	mov    eax,DWORD PTR [esi]
  408a3e:	imul   ecx,DWORD PTR [ecx-0x24],0xffffffb7
  408a42:	in     al,dx
  408a43:	mov    ch,0x4e
  408a45:	and    bl,BYTE PTR [edx+edx*8-0x46548325]
  408a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a4d:	mov    ?,esi
  408a4f:	fmul   DWORD PTR [ebx+0x30005446]
  408a55:	fisttp WORD PTR [ebx+0x22cda564]
  408a5b:	out    dx,eax
  408a5c:	fidiv  WORD PTR [ebp+0x46]
  408a5f:	and    esi,DWORD PTR [esi+ebx*4]
  408a62:	mov    esp,0xb555b576
  408a67:	push   ds
  408a68:	ficomp WORD PTR [ebx-0xa]
  408a6b:	popa   
  408a6c:	aad    0x11
  408a6e:	sbb    BYTE PTR [edi+ecx*4+0x48c9ae20],dh
  408a75:	fimul  WORD PTR [bx+di]
  408a78:	ins    BYTE PTR es:[edi],dx
  408a79:	jbe    0x408a9a
  408a7b:	pop    esp
  408a7c:	cmp    BYTE PTR [eax-0x13],ch
  408a7f:	sbb    esp,eax
  408a81:	aas    
  408a82:	and    edx,DWORD PTR ds:0x1a7de903
  408a88:	sub    DWORD PTR [esi+ebx*4+0x30],edx
  408a8c:	jns    0x408ab3
  408a8e:	inc    edi
  408a8f:	std    
  408a90:	sbb    al,BYTE PTR [edi+ebp*4+0x76]
  408a94:	push   0x7b69fa10
  408a99:	sti    
  408a9a:	lds    eax,FWORD PTR [edi+0x2a1e079f]
  408aa0:	xor    esi,DWORD PTR [edi-0xf8441fc]
  408aa6:	pop    edi
  408aa7:	dec    edx
  408aa8:	mov    al,0x67
  408aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aab:	pop    ecx
  408aac:	(bad)  
  408aad:	jecxz  0x408aec
  408aaf:	jecxz  0x408a3c
  408ab1:	lock sub ah,BYTE PTR [edx]
  408ab4:	sub    bl,ch
  408ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab7:	(bad)  
  408ab8:	imul   eax,DWORD PTR [esp+ebp*1-0x7c],0xcd942f74
  408ac0:	push   edi
  408ac1:	in     eax,dx
  408ac2:	leave  
  408ac3:	jae    0x408a64
  408ac5:	rol    DWORD PTR ds:0xb8a50861,1
  408acb:	or     DWORD PTR [ebp+0x46],esp
  408ace:	scas   al,BYTE PTR es:[edi]
  408acf:	arpl   WORD PTR [edi],di
  408ad1:	mov    al,ds:0x6189dc9b
  408ad6:	push   cs
  408ad7:	sti    
  408ad8:	fnstcw WORD PTR [esi+0x5c]
  408adb:	push   0x7f
  408add:	and    BYTE PTR [eax-0x1fa2781a],ah
  408ae3:	in     eax,dx
  408ae4:	adc    DWORD PTR [ebp+0x4a3237f1],ebx
  408aea:	add    eax,0xdfc45a47
  408aef:	aad    0x7f
  408af1:	div    BYTE PTR [esi+eax*4-0x42]
  408af5:	dec    DWORD PTR ds:0x3064bf67
  408afb:	mov    bl,0xbf
  408afd:	loope  0x408b49
  408aff:	sbb    al,0x1b
  408b01:	mov    ds:0x92eb4373,al
  408b06:	outs   dx,BYTE PTR ds:[esi]
  408b07:	pop    edx
  408b08:	shl    bl,cl
  408b0a:	sbb    ebp,DWORD PTR [ecx+edx*4]
  408b0d:	jnp    0x408b6f
  408b0f:	inc    edx
  408b10:	push   ebx
  408b11:	icebp  
  408b12:	jae    0x408b61
  408b14:	shl    BYTE PTR [eax+0x70f53533],cl
  408b1a:	imul   esp,DWORD PTR [edi+0x46],0x17ac6557
  408b21:	int3   
  408b22:	outs   dx,BYTE PTR ds:[esi]
  408b23:	scas   al,BYTE PTR es:[edi]
  408b24:	adc    cl,BYTE PTR [eax]
  408b26:	ret    0x3f3e
  408b29:	xchg   edi,eax
  408b2a:	jns    0x408b67
  408b2c:	xor    al,0xe4
  408b2e:	mov    ecx,0x2efac866
  408b33:	sti    
  408b34:	jno    0x408ba1
  408b36:	jne    0x408b3c
  408b38:	hlt    
  408b39:	in     al,0x38
  408b3b:	or     bl,bh
  408b3d:	adc    bl,cl
  408b3f:	and    DWORD PTR [edi+0x62],0xe36003e2
  408b46:	inc    ebx
  408b47:	pop    ss
  408b48:	ss jge 0x408b42
  408b4b:	pop    ebx
  408b4c:	pusha  
  408b4d:	jge    0x408afc
  408b4f:	pop    ss
  408b50:	ins    DWORD PTR es:[edi],dx
  408b51:	dec    edx
  408b52:	jmp    0x408b24
  408b54:	imul   edx,DWORD PTR [edx],0xd8d8fd25
  408b5a:	pop    edi
  408b5b:	aad    0x79
  408b5d:	lods   al,BYTE PTR ds:[esi]
  408b5e:	inc    ebx
  408b5f:	mov    edx,0x6dde823c
  408b64:	icebp  
  408b65:	sub    DWORD PTR fs:[ebx-0x55],0x73eb8bd6
  408b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6e:	push   ebx
  408b6f:	nop
  408b70:	fs pop ds
  408b72:	out    0xd6,eax
  408b74:	dec    ecx
  408b75:	jle    0x408b45
  408b77:	adc    ecx,DWORD PTR [esi+0x6e]
  408b7a:	daa    
  408b7b:	mov    ds:0xdc461616,eax
  408b80:	pop    ss
  408b81:	push   ss
  408b82:	mov    eax,ds:0x3afd6013
  408b87:	js     0x408bf3
  408b89:	adc    dl,BYTE PTR [esi-0x1f]
  408b8c:	ret    0xdfc0
  408b8f:	cmp    DWORD PTR [eax+edi*8-0x629c6e1f],ebx
  408b96:	mov    ebp,0xf2837ddd
  408b9b:	mov    eax,0xb4f23f5b
  408ba0:	loopne 0x408b60
  408ba2:	sar    BYTE PTR [ebx-0x5c],1
  408ba5:	or     BYTE PTR [eax-0x3b],al
  408ba8:	mov    WORD PTR [eax-0x65],es
  408bab:	fmul   DWORD PTR [ebp+0x5d2ba315]
  408bb1:	ret    
  408bb2:	cmp    ch,dh
  408bb4:	test   eax,0x85a5399c
  408bb9:	mov    cl,0x68
  408bbb:	inc    esp
  408bbc:	push   edi
  408bbd:	hlt    
  408bbe:	popa   
  408bbf:	std    
  408bc0:	retf   0x72c4
  408bc3:	mov    edx,DWORD PTR ds:0x7669db89
  408bc9:	push   ebp
  408bca:	sub    edx,DWORD PTR [eax+edx*4]
  408bcd:	test   al,0x29
  408bcf:	add    al,0xd3
  408bd1:	rol    BYTE PTR [edi+0x73],0x9
  408bd5:	cmp    eax,0x2ff76326
  408bda:	cmp    al,0xc0
  408bdc:	jb     0x408c24
  408bde:	pop    esp
  408bdf:	loop   0x408c54
  408be1:	sub    eax,0xe9fc111d
  408be6:	xor    al,0x77
  408be8:	pop    eax
  408be9:	add    eax,ebp
  408beb:	or     al,0x27
  408bed:	push   ebp
  408bee:	test   eax,0x19493991
  408bf3:	xor    DWORD PTR [ecx],edi
  408bf5:	push   cs
  408bf6:	fwait
  408bf7:	xor    al,0x7e
  408bf9:	sub    ecx,DWORD PTR [esp+edx*2-0x2c5790f1]
  408c00:	and    al,0x88
  408c02:	xchg   edx,eax
  408c03:	imul   esp,esp,0x7aaa0503
  408c09:	jmp    0x408ba8
  408c0b:	sbb    bl,cl
  408c0d:	aaa    
  408c0e:	cmp    DWORD PTR [ebp-0xd],ecx
  408c11:	mov    esp,0xc1f6d83c
  408c16:	iret   
  408c17:	sbb    DWORD PTR [edx-0x771d6f79],ecx
  408c1d:	aaa    
  408c1e:	push   ecx
  408c1f:	inc    esp
  408c20:	aas    
  408c21:	push   esi
  408c22:	ficom  WORD PTR [esi+0x61b5e699]
  408c28:	out    dx,eax
  408c29:	sbb    DWORD PTR [esi+0x4d5c1959],0x6b
  408c30:	mov    ebp,0xb8c59022
  408c35:	rcl    eax,0x42
  408c38:	mov    ds:0xefd03176,al
  408c3d:	call   0xbc280a8c
  408c42:	inc    cl
  408c44:	push   cs
  408c45:	fdivr  DWORD PTR [edx+0x57]
  408c48:	test   al,0x5e
  408c4a:	test   eax,0x47ef36cc
  408c4f:	(bad)  
  408c50:	fadd   QWORD PTR [esi+0x681cbd0d]
  408c56:	retf   0xdf30
  408c59:	ins    DWORD PTR es:[edi],dx
  408c5a:	retf   0xfa3
  408c5d:	dec    ebp
  408c5e:	(bad)  
  408c5f:	mov    edi,0x5c38be34
  408c64:	xchg   BYTE PTR [edi-0xb],ch
  408c67:	jo     0x408c16
  408c69:	mov    ch,0xe5
  408c6b:	inc    ecx
  408c6c:	into   
  408c6d:	sub    BYTE PTR [eax+0x4197b8ec],dl
  408c73:	out    0x3e,al
  408c75:	inc    esi
  408c76:	and    eax,0x13f9746e
  408c7b:	loopne 0x408ce2
  408c7d:	or     DWORD PTR [ecx+edi*1+0x5e3f73bf],0xfffffff8
  408c85:	mov    bl,0x53
  408c87:	ins    BYTE PTR es:[edi],dx
  408c88:	xchg   esi,eax
  408c89:	push   eax
  408c8a:	mov    esi,DWORD PTR [edx]
  408c8c:	fmul   QWORD PTR [eax]
  408c8e:	push   esp
  408c8f:	or     edi,esi
  408c91:	mov    bl,0xe3
  408c93:	faddp  st(5),st
  408c95:	inc    esi
  408c96:	ins    BYTE PTR es:[edi],dx
  408c97:	inc    ecx
  408c98:	cmp    DWORD PTR [edx+0xc],0x8932c05b
  408c9f:	add    bh,al
  408ca1:	adc    eax,0x505cde2e
  408ca6:	pop    ds
  408ca7:	fcmove st,st(6)
  408ca9:	enter  0x5707,0x94
  408cad:	xor    eax,0x7cf079d8
  408cb2:	xchg   al,ch
  408cb4:	stc    
  408cb5:	jbe    0x408c67
  408cb7:	stos   BYTE PTR es:[edi],al
  408cb8:	mov    al,dl
  408cba:	pop    ebx
  408cbb:	jmp    0x408d0d
  408cbd:	xor    al,0x78
  408cbf:	repnz icebp 
  408cc1:	jl     0x408d06
  408cc3:	bound  edx,QWORD PTR [ebx+ebp*2-0x13]
  408cc7:	lock icebp 
  408cc9:	outs   dx,DWORD PTR ds:[esi]
  408cca:	dec    edi
  408ccb:	ficom  DWORD PTR [edi]
  408ccd:	mov    al,ds:0x29db9f2b
  408cd2:	push   edi
  408cd3:	fnsave [ebx]
  408cd5:	pop    esp
  408cd6:	clc    
  408cd7:	cwde   
  408cd8:	mov    ds:0xf5114159,eax
  408cdd:	outs   dx,DWORD PTR ds:[esi]
  408cde:	inc    ecx
  408cdf:	iret   
  408ce0:	jmp    0xb80fc134
  408ce5:	out    dx,al
  408ce6:	nop    DWORD PTR [ebx]
  408ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cea:	push   edx
  408ceb:	sbb    eax,0x79f2c1fe
  408cf0:	jecxz  0x408cab
  408cf2:	dec    eax
  408cf3:	inc    eax
  408cf4:	xor    DWORD PTR [edi+0xb],0x75
  408cf8:	in     al,dx
  408cf9:	dec    edx
  408cfa:	dec    ebp
  408cfb:	xor    al,0x6
  408cfd:	out    dx,al
  408cfe:	mov    ebp,DWORD PTR [eax]
  408d00:	sti    
  408d01:	dec    ebp
  408d02:	xchg   edx,eax
  408d03:	es ret 
  408d05:	cwde   
  408d06:	ror    DWORD PTR [edx+0x60157e95],1
  408d0c:	cwde   
  408d0d:	inc    edi
  408d0e:	into   
  408d0f:	fisub  DWORD PTR [ecx+0x1c]
  408d12:	dec    esp
  408d13:	xchg   DWORD PTR [esi+0x772aa3f6],edx
  408d19:	sub    BYTE PTR [edx-0x4c],ch
  408d1c:	lahf   
  408d1d:	aad    0x23
  408d1f:	fst    DWORD PTR [edx]
  408d21:	bound  edi,QWORD PTR [edi-0x26d681d9]
  408d27:	repz sbb BYTE PTR [ebx+ecx*4+0x26],dl
  408d2c:	push   edi
  408d2d:	sar    DWORD PTR [ebp+eiz*4-0x33],cl
  408d31:	or     dl,BYTE PTR [ebx+0x21d8e365]
  408d37:	xor    DWORD PTR [ebp+0x2d637f94],eax
  408d3d:	push   ecx
  408d3e:	test   al,0x6b
  408d40:	test   DWORD PTR [esi],edi
  408d42:	(bad)  
  408d43:	repnz sahf 
  408d45:	mov    bh,0x90
  408d47:	sub    al,0x71
  408d49:	call   0x7c00:0x12cfa04e
  408d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d51:	hlt    
  408d52:	add    DWORD PTR [esi],ebp
  408d54:	jbe    0x408d9d
  408d56:	mov    ch,BYTE PTR [ebp+eax*2-0x8fd6c53]
  408d5d:	jnp    0x408dcd
  408d5f:	cmp    DWORD PTR [esi-0x6ee5b0b4],esi
  408d65:	shl    BYTE PTR [edx],cl
  408d67:	ja     0x408dad
  408d69:	push   ebp
  408d6a:	mov    edi,0x44ee5072
  408d6f:	push   0xffffff85
  408d71:	data16 sbb BYTE PTR ds:0x4bd8ff57,0x97
  408d79:	out    dx,al
  408d7a:	mov    ah,0x50
  408d7c:	popa   
  408d7d:	loopne 0x408d2e
  408d7f:	icebp  
  408d80:	push   esi
  408d81:	out    dx,eax
  408d82:	enter  0x1627,0x1e
  408d86:	imul   ebp,DWORD PTR [ecx+0x14],0xffffff9f
  408d8a:	and    eax,edx
  408d8c:	add    dl,BYTE PTR [esi-0x4990e39d]
  408d92:	aad    0xc9
  408d94:	adc    eax,0xce82d003
  408d99:	jns    0x408dab
  408d9b:	cli    
  408d9c:	rcr    BYTE PTR [ecx+0x2a292773],0x4a
  408da3:	sub    eax,ebx
  408da5:	push   cs
  408da6:	dec    esi
  408da7:	pop    ecx
  408da8:	(bad)  
  408da9:	call   0x35958d6e
  408dae:	push   edi
  408daf:	mov    al,ds:0xbc782e19
  408db5:	dec    ecx
  408db6:	dec    eax
  408db7:	inc    edx
  408db8:	push   esp
  408db9:	loope  0x408d91
  408dbb:	outs   dx,BYTE PTR ds:[esi]
  408dbc:	sti    
  408dbd:	loope  0x408dac
  408dbf:	jle    0x408da8
  408dc1:	mov    ah,0x61
  408dc3:	loope  0x408d9a
  408dc5:	adc    dl,BYTE PTR [edi+0x3deb05fc]
  408dcb:	sub    BYTE PTR [ecx-0x35],dl
  408dce:	scas   al,BYTE PTR es:[edi]
  408dcf:	sahf   
  408dd0:	mov    bl,0x3a
  408dd2:	retf   
  408dd3:	inc    ebx
  408dd4:	sub    eax,0x1ec776bc
  408dd9:	cmp    DWORD PTR [eax+edx*2+0x40],ecx
  408ddd:	fdiv   QWORD PTR [edi+0x3423e648]
  408de3:	js     0x408e59
  408de5:	ja     0x408dea
  408de7:	retf   0x6153
  408dea:	push   cs
  408deb:	outs   dx,DWORD PTR ds:[esi]
  408dec:	pop    ebx
  408ded:	pop    edi
  408dee:	fild   WORD PTR [eax-0x69]
  408df1:	pusha  
  408df2:	gs je  0x408dfb
  408df5:	push   edx
  408df6:	mov    ecx,0xfe0e8df1
  408dfb:	iret   
  408dfc:	or     DWORD PTR [ebp-0x3f],esp
  408dff:	fnstsw WORD PTR [edx-0x21a2e9ef]
  408e05:	xchg   esp,eax
  408e06:	add    DWORD PTR [esi+ebp*2-0x25],edx
  408e0a:	popf   
  408e0b:	lea    edi,[edi]
  408e0d:	popf   
  408e0e:	push   esi
  408e0f:	cmp    dh,0xe9
  408e12:	call   0x5f2d3844
  408e17:	lock lea ebp,[ebp+ebx*4-0x2b]
  408e1c:	and    ebp,DWORD PTR [edx]
  408e1e:	retf   
  408e1f:	push   es
  408e20:	daa    
  408e21:	cwde   
  408e22:	loope  0x408e9e
  408e24:	cld    
  408e25:	ins    BYTE PTR es:[edi],dx
  408e26:	xor    BYTE PTR [ebx-0x405e7fcc],dh
  408e2c:	xchg   esp,eax
  408e2d:	jmp    0x736c175d
  408e32:	pushf  
  408e33:	xor    eax,0x166ea212
  408e38:	scas   al,BYTE PTR es:[edi]
  408e39:	sub    eax,0xb5a8bf6b
  408e3e:	ret    
  408e3f:	jmp    DWORD PTR [ebp+ecx*8-0x204b8edd]
  408e46:	mov    DWORD PTR [ebp*1+0x29b0b283],edx
  408e4d:	push   ds
  408e4e:	ins    BYTE PTR es:[edi],dx
  408e4f:	fstp   DWORD PTR [esp+esi*2]
  408e52:	xchg   edi,eax
  408e53:	mul    dl
  408e55:	dec    ecx
  408e56:	or     eax,0xd15c4c0f
  408e5b:	std    
  408e5c:	retf   
  408e5d:	das    
  408e5e:	mov    dh,0x47
  408e60:	stc    
  408e61:	cmp    eax,0x2f8a058c
  408e66:	test   DWORD PTR ds:0x9ed4201b,edi
  408e6c:	loopne 0x408eb5
  408e6e:	push   es
  408e6f:	or     BYTE PTR [ecx-0x23f1d858],ch
  408e75:	jnp    0x408eb9
  408e77:	sub    dl,dl
  408e79:	jmp    0x2b1342ed
  408e7e:	inc    ebx
  408e7f:	inc    ebx
  408e80:	dec    eax
  408e81:	mov    edx,0x261d6a19
  408e86:	pop    ss
  408e87:	xor    DWORD PTR [esp+esi*4+0x493bb522],0xffffff91
  408e8f:	call   0x5195:0x8e39ca44
  408e96:	cwde   
  408e97:	jo     0x408e56
  408e99:	ret    
  408e9a:	cmp    eax,0x4158c431
  408e9f:	out    0xc9,eax
  408ea1:	call   0x84d1359
  408ea6:	in     eax,dx
  408ea7:	scas   eax,DWORD PTR es:[edi]
  408ea8:	cmp    al,0x2b
  408eaa:	jl     0x408f23
  408eac:	mov    esi,0xd3c144d
  408eb1:	mov    esp,DWORD PTR [edi]
  408eb3:	cmp    BYTE PTR [ecx],dh
  408eb5:	aam    0xc9
  408eb7:	arpl   WORD PTR [ebx-0x1c7c8062],bx
  408ebd:	das    
  408ebe:	test   bl,dh
  408ec0:	sub    eax,0xacb713c1
  408ec5:	cdq    
  408ec6:	out    dx,al
  408ec7:	jle    0x408f28
  408ec9:	inc    edx
  408eca:	add    al,0x56
  408ecc:	sbb    DWORD PTR [eax+edi*2-0x6ad9c613],0xf9efc129
  408ed7:	pop    edx
  408ed8:	cmp    eax,DWORD PTR [edi]
  408eda:	lds    edx,FWORD PTR [ebx-0x406285ea]
  408ee0:	or     DWORD PTR [edx+0x6f],eax
  408ee3:	mov    eax,ds:0xbc1a193e
  408ee8:	mov    cl,0x69
  408eea:	int3   
  408eeb:	in     al,0x3
  408eed:	push   edx
  408eee:	or     ah,cl
  408ef0:	or     esi,DWORD PTR [ebx-0x5a]
  408ef3:	(bad)  
  408ef4:	pushf  
  408ef5:	cli    
  408ef6:	std    
  408ef7:	pop    ds
  408ef8:	ja     0x408eb7
  408efa:	sub    esp,DWORD PTR [edx]
  408efc:	sbb    esi,edi
  408efe:	or     al,0xa3
  408f00:	inc    edx
  408f01:	jl     0x408ed2
  408f03:	xchg   edx,eax
  408f04:	test   eax,0x65e6422e
  408f09:	sti    
  408f0a:	enter  0x8685,0x26
  408f0e:	fdiv   st,st(4)
  408f10:	scas   eax,DWORD PTR es:[edi]
  408f11:	pop    ecx
  408f12:	js     0x408f6f
  408f14:	xchg   DWORD PTR [ecx],eax
  408f16:	mov    ecx,DWORD PTR [edi+esi*8+0x52f37bf8]
  408f1d:	mov    al,0x3d
  408f1f:	mov    ecx,0x6309d912
  408f24:	fiadd  DWORD PTR [ebx]
  408f26:	xchg   BYTE PTR [edi],dl
  408f28:	mov    eax,ds:0xb8cb803
  408f2d:	xor    BYTE PTR [eax+esi*4-0x2d02c38c],ah
  408f34:	push   edx
  408f35:	jb     0x408f66
  408f37:	jecxz  0x408f3a
  408f39:	cld    
  408f3a:	xchg   esi,eax
  408f3b:	cmp    ebp,DWORD PTR [ecx+0x7be81cd7]
  408f41:	test   eax,0xef129db0
  408f46:	repnz out 0x71,eax
  408f49:	(bad)  
  408f4a:	ins    DWORD PTR es:[edi],dx
  408f4b:	dec    edi
  408f4c:	sbb    eax,0x4d2f6108
  408f51:	div    DWORD PTR [esi]
  408f53:	add    eax,0x839eb4a3
  408f58:	lods   eax,DWORD PTR ds:[esi]
  408f59:	scas   eax,DWORD PTR es:[edi]
  408f5a:	push   0xffffffbe
  408f5c:	test   dh,dl
  408f5e:	xor    eax,0x76cdfa33
  408f63:	icebp  
  408f64:	ins    DWORD PTR es:[edi],dx
  408f65:	fld    TBYTE PTR [ecx+esi*4-0x5e]
  408f69:	aam    0x60
  408f6b:	xor    al,0x48
  408f6d:	lahf   
  408f6e:	mov    ebx,0xf871e125
  408f73:	iret   
  408f74:	sub    ebx,esi
  408f76:	jbe    0x408f55
  408f78:	aaa    
  408f79:	and    BYTE PTR [edx],bh
  408f7b:	sahf   
  408f7c:	xlat   BYTE PTR ds:[ebx]
  408f7d:	push   cs
  408f7e:	cwde   
  408f7f:	es ffree st(0)
  408f82:	mov    bh,0x36
  408f84:	cli    
  408f85:	mov    ds:0x4e5ae81e,eax
  408f8a:	scas   eax,DWORD PTR es:[edi]
  408f8b:	std    
  408f8c:	sub    ch,BYTE PTR [eax]
  408f8e:	mov    cl,0x42
  408f90:	int3   
  408f91:	daa    
  408f92:	das    
  408f93:	or     ch,BYTE PTR [edi]
  408f95:	aam    0xed
  408f97:	add    eax,0x1b8eb72d
  408f9c:	push   ebx
  408f9d:	lds    ebx,FWORD PTR [esp+edx*1]
  408fa0:	mov    DWORD PTR [edx],0xd283e291
  408fa6:	stos   BYTE PTR es:[edi],al
  408fa7:	std    
  408fa8:	jmp    0x5ddd:0x6481a5eb
  408faf:	or     esp,DWORD PTR [ecx+0x7ad98131]
  408fb5:	or     dh,bl
  408fb7:	repz mov ds:0xf7fe4b0,eax
  408fbd:	mov    BYTE PTR [edi],dl
  408fbf:	sbb    BYTE PTR [eax-0x1fb5f1e8],0x3b
  408fc6:	adc    BYTE PTR [ecx-0x18fe8f4d],al
  408fcc:	jmp    FWORD PTR [edx-0x79]
  408fcf:	imul   ebp,DWORD PTR [edi+0x9ef7cd6],0x9ef081dc
  408fd9:	popa   
  408fda:	pop    ebp
  408fdb:	and    DWORD PTR [ebx-0x5c],edi
  408fde:	(bad)  
  408fdf:	in     al,dx
  408fe0:	push   ds
  408fe1:	cwde   
  408fe2:	cli    
  408fe3:	pusha  
  408fe4:	cmp    eax,DWORD PTR [ecx+0x1b]
  408fe7:	jo     0x408fb5
  408fe9:	cmp    ecx,DWORD PTR [ebx-0x38]
  408fec:	aam    0x3
  408fee:	call   0x5260:0x3af4a46
  408ff5:	mov    ecx,0x1a2f6748
  408ffa:	jle    0x408fe5
  408ffc:	daa    
  408ffd:	into   
  408ffe:	in     eax,dx
  408fff:	pop    ds
  409000:	in     eax,0x3f
  409002:	add    eax,0x3f279ec3
  409007:	mov    edi,DWORD PTR [ebp-0x6375af16]
  40900d:	pop    ebp
  40900e:	test   eax,0xe050d868
  409013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409014:	lock outs dx,DWORD PTR ds:[esi]
  409016:	jle    0x409070
  409018:	repnz es fwait
  40901b:	sbb    eax,0x24a646a6
  409020:	mov    ds:0xf50377e,eax
  409025:	push   esi
  409026:	in     al,0x77
  409028:	cmp    ah,BYTE PTR [edx-0x54]
  40902b:	scas   al,BYTE PTR es:[edi]
  40902c:	mov    DWORD PTR [ecx-0x54c59f39],ebp
  409032:	adc    edx,DWORD PTR [ecx+0x6a]
  409035:	or     al,0x34
  409037:	in     al,dx
  409038:	mov    bl,ah
  40903a:	mov    edx,0xa110dda5
  40903f:	(bad)  
  409041:	xchg   edi,esp
  409043:	std    
  409044:	jae    0x409072
  409046:	rcl    DWORD PTR [edx-0x14],1
  409049:	jae    0x40906e
  40904b:	adc    ebx,DWORD PTR [ebx+0x67ca98fd]
  409051:	aam    0xf8
  409053:	lss    eax,FWORD PTR [ecx]
  409056:	jbe    0x408ff2
  409058:	push   ecx
  409059:	(bad)  
  40905a:	ins    DWORD PTR es:[edi],dx
  40905b:	sbb    DWORD PTR [ecx],esi
  40905d:	cmp    al,0xbc
  40905f:	xchg   edx,eax
  409060:	popa   
  409061:	mov    fs,WORD PTR [edx-0x29bfe48f]
  409067:	mov    bl,BYTE PTR [ebp+0x65a99105]
  40906d:	mov    cl,0x5b
  40906f:	aaa    
  409070:	retf   
  409071:	arpl   WORD PTR [ecx],bx
  409073:	popa   
  409074:	cmp    DWORD PTR [esi-0x4f],esi
  409077:	mov    eax,ds:0x854489d4
  40907c:	mov    cl,0x3b
  40907e:	loope  0x409006
  409080:	arpl   ax,ax
  409082:	push   ebx
  409083:	xchg   edi,eax
  409084:	add    eax,0x5f5a0698
  409089:	pop    esi
  40908a:	bound  ebx,QWORD PTR [ebp+0x32]
  40908d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40908e:	inc    edx
  40908f:	adc    BYTE PTR [ebx],0x6c
  409092:	loop   0x409068
  409094:	inc    esi
  409095:	cmp    esp,eax
  409097:	mov    al,ds:0x1841d6ce
  40909c:	arpl   WORD PTR [esi-0x71b53cea],dx
  4090a2:	fisttp QWORD PTR [esp+ebx*1]
  4090a5:	dec    edi
  4090a6:	std    
  4090a7:	pop    ss
  4090a8:	(bad)  
  4090a9:	pusha  
  4090aa:	es fmulp st(2),st
  4090ad:	cmc    
  4090ae:	pop    ebp
  4090af:	xchg   ebp,eax
  4090b0:	jo     0x4090a1
  4090b2:	enter  0xc0be,0x5d
  4090b6:	cmp    ecx,edi
  4090b8:	xchg   edi,eax
  4090b9:	push   esp
  4090ba:	fcmovu st,st(6)
  4090bc:	xchg   edi,eax
  4090bd:	fwait
  4090be:	mov    dh,0xe4
  4090c0:	adc    eax,0xce0f72e4
  4090c5:	sar    BYTE PTR [edi],1
  4090c7:	outs   dx,BYTE PTR ds:[esi]
  4090c8:	dec    edx
  4090c9:	jnp    0x4090ad
  4090cb:	mov    ecx,0xf635872d
  4090d0:	adc    al,0xae
  4090d2:	lods   al,BYTE PTR ds:[esi]
  4090d3:	jle    0x409100
  4090d5:	pusha  
  4090d6:	add    BYTE PTR [esi+0x37f103f5],dh
  4090dc:	add    esi,esi
  4090de:	ins    BYTE PTR es:[edi],dx
  4090df:	retf   0x8cde
  4090e2:	test   BYTE PTR [esp+ecx*2],cl
  4090e5:	adc    DWORD PTR [edx-0x90802e5],0xffffff82
  4090ec:	or     dl,BYTE PTR [edi]
  4090ee:	xor    edx,DWORD PTR [ebp+esi*4+0x5d]
  4090f2:	jecxz  0x409141
  4090f4:	mov    ch,0xf5
  4090f6:	shr    DWORD PTR [ebx+0x2c],cl
  4090f9:	cmp    eax,0xed10fa61
  4090fe:	popa   
  4090ff:	dec    edi
  409100:	inc    edx
  409101:	and    ah,BYTE PTR [ebx+0x45]
  409104:	jae    0x40910d
  409106:	test   BYTE PTR [esi-0x404abee8],cl
  40910c:	arpl   WORD PTR [esi*8+0x53d8242e],sp
  409113:	(bad)  
  409114:	sub    al,0xe3
  409116:	cmp    DWORD PTR [ecx],ecx
  409118:	inc    edi
  409119:	mov    cx,0xed95
  40911d:	in     al,0x6e
  40911f:	dec    esi
  409120:	xchg   ecx,eax
  409121:	cmp    DWORD PTR [ecx+0x7],0xffffffba
  409125:	add    al,0xdc
  409127:	mov    dl,0xc8
  409129:	es push 0xbc67d200
  40912f:	mov    dl,0xc9
  409131:	call   0xe72b10c8
  409136:	inc    ecx
  409137:	pop    ss
  409138:	mov    BYTE PTR [esi+0x24],0xcf
  40913c:	xchg   esi,eax
  40913d:	rcl    BYTE PTR [eax+0x28],cl
  409140:	add    DWORD PTR [eax-0x5a],edi
  409143:	(bad)  
  409144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409145:	adc    bh,dh
  409147:	push   edx
  409148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409149:	shl    BYTE PTR [edi-0x77f944f5],1
  40914f:	sbb    eax,0xe455663b
  409154:	push   esi
  409155:	call   0xc30f:0x825993f9
  40915c:	and    DWORD PTR [edx+edx*8+0x3b0b82f8],ebp
  409163:	test   DWORD PTR [eax-0x10],edx
  409166:	mov    eax,ds:0x1b7799cb
  40916b:	xchg   edx,eax
  40916c:	mov    WORD PTR [esi-0x1d],ds
  40916f:	rcl    BYTE PTR [ecx+0x1d],0x38
  409173:	sbb    ebx,esp
  409175:	jo     0x4091da
  409177:	lods   al,BYTE PTR ds:[esi]
  409178:	xchg   edi,eax
  409179:	xlat   BYTE PTR ds:[ebx]
  40917a:	xor    eax,0x537467c1
  40917f:	xor    BYTE PTR [ebx-0x9],0x4b
  409183:	jnp    0x4091d0
  409185:	and    DWORD PTR [ebp-0x7e],ebp
  409188:	aam    0x86
  40918a:	out    dx,eax
  40918b:	fmul   DWORD PTR [edx]
  40918d:	ret    
  40918e:	js     0x40918e
  409190:	pop    ds
  409191:	and    ah,0xb9
  409194:	cmp    eax,0x2328d91e
  409199:	sub    DWORD PTR [esi],eax
  40919b:	pop    ebp
  40919c:	js     0x4091d5
  40919e:	xlat   BYTE PTR ds:[ebx]
  40919f:	outs   dx,DWORD PTR ds:[esi]
  4091a0:	xchg   edi,eax
  4091a1:	sti    
  4091a2:	mov    WORD PTR [ebx-0x7e6cc7d7],ds
  4091a8:	and    eax,DWORD PTR [eax-0x46]
  4091ab:	int    0x1
  4091ad:	xchg   BYTE PTR [eax+0x75],ah
  4091b0:	mov    BYTE PTR ss:[ebx+edx*4+0x57],ah
  4091b5:	sbb    DWORD PTR [ecx],esi
  4091b7:	mov    edx,0x73b50f1c
  4091bc:	repnz dec ebp
  4091be:	jns    0x4091e6
  4091c0:	inc    eax
  4091c1:	cwde   
  4091c2:	ret    
  4091c3:	or     edx,edi
  4091c5:	je     0x4091c0
  4091c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c8:	pop    ebp
  4091c9:	stc    
  4091ca:	into   
  4091cb:	dec    edi
  4091cc:	lahf   
  4091cd:	mov    al,ds:0x48cb114e
  4091d2:	dec    ecx
  4091d3:	cmp    eax,0x1b153f9c
  4091d8:	jbe    0x4091b8
  4091da:	or     DWORD PTR ds:0x35a301d1,esi
  4091e0:	test   BYTE PTR [ebx+0x1f],bl
  4091e3:	loope  0x40923d
  4091e5:	fnsave [esi+edx*4]
  4091e8:	jecxz  0x4091f9
  4091ea:	aas    
  4091eb:	and    dl,BYTE PTR [esi+0x25]
  4091ee:	out    0x55,al
  4091f0:	dec    ebp
  4091f1:	mov    BYTE PTR [ebx+0x26],dl
  4091f4:	aas    
  4091f5:	pushf  
  4091f6:	dec    DWORD PTR [ebx-0x7]
  4091f9:	push   eax
  4091fa:	inc    edi
  4091fb:	adc    eax,0xb5074c9f
  409200:	dec    esi
  409201:	ss aad 0xa
  409204:	stos   BYTE PTR es:[edi],al
  409205:	mov    ecx,0x27314cb9
  40920a:	mov    dh,0xd1
  40920c:	icebp  
  40920d:	pop    edi
  40920e:	pop    ecx
  40920f:	test   BYTE PTR [ecx+0x2],dh
  409212:	sub    DWORD PTR [eax+0x40],ebx
  409215:	dec    ecx
  409216:	lds    eax,FWORD PTR [edi+0x21c5eb7d]
  40921c:	jmp    FWORD PTR [ecx-0x478ef59c]
  409222:	and    dh,ch
  409224:	mov    ebp,0x550de244
  409229:	in     eax,dx
  40922a:	out    dx,eax
  40922b:	xchg   esi,eax
  40922c:	xor    al,0x91
  40922e:	loop   0x40922c
  409230:	push   cs
  409231:	cwde   
  409232:	dec    ebp
  409233:	pop    esp
  409234:	push   ebx
  409235:	cmp    al,0x44
  409238:	dec    ebx
  409239:	mov    ebx,0x6e0d33d1
  40923e:	in     eax,0xe7
  409240:	adc    BYTE PTR [esi+0x49],al
  409243:	mov    al,0x40
  409245:	(bad)  
  409246:	xchg   esp,eax
  409247:	cmp    al,0x83
  409249:	fnsave [ebp+0x79]
  40924c:	gs dec ebp
  40924e:	push   ecx
  40924f:	jmp    0x177a3899
  409254:	sbb    BYTE PTR [esi-0x34],dh
  409257:	jl     0x40921e
  409259:	in     eax,0x15
  40925b:	pop    esp
  40925c:	aas    
  40925d:	sbb    ah,BYTE PTR [edx]
  40925f:	rcl    DWORD PTR [edx],0x1c
  409262:	xor    BYTE PTR [edx],ch
  409264:	(bad)
  409269:	sub    al,0x40
  40926b:	outs   dx,BYTE PTR ds:[esi]
  40926c:	mov    ecx,0x23cc08df
  409271:	test   al,0xe8
  409273:	sub    ch,BYTE PTR [esi]
  409275:	lahf   
  409276:	fsubr  QWORD PTR [ebx]
  409278:	in     eax,0x4d
  40927a:	scas   al,BYTE PTR es:[edi]
  40927b:	out    dx,al
  40927c:	jmp    0x878ce29f
  409281:	(bad)  
  409282:	xor    al,0x6d
  409284:	inc    ecx
  409285:	gs hlt 
  409287:	jns    0x409306
  409289:	retf   
  40928a:	xor    al,0x73
  40928c:	mov    ds:0x8893f7fc,eax
  409291:	ins    DWORD PTR es:[edi],dx
  409292:	in     al,0x98
  409294:	fdiv   st,st(5)
  409296:	xchg   ebp,eax
  409297:	mov    eax,?
  409299:	out    0xd4,al
  40929b:	xor    eax,0xe0061cb2
  4092a0:	mov    cl,0x1d
  4092a2:	mov    ds:0x9f2f25a7,eax
  4092a7:	dec    edi
  4092a8:	(bad)  
  4092aa:	(bad)  
  4092ab:	gs (bad) 
  4092ad:	out    dx,al
  4092ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092af:	mov    dh,0x4b
  4092b1:	xor    eax,0xc2184e03
  4092b6:	leavew 
  4092b8:	jge    0x409287
  4092ba:	retf   0x455e
  4092bd:	dec    eax
  4092be:	mov    esp,0xd19994c6
  4092c3:	sti    
  4092c4:	aad    0xc2
  4092c6:	pop    edi
  4092c7:	imul   ecx,DWORD PTR [edi-0x13],0x35
  4092cb:	addr16 push ds
  4092cd:	add    eax,0x1c6e866b
  4092d2:	mov    edx,0x3b1ded45
  4092d7:	dec    ecx
  4092d8:	jns    0x4092a4
  4092da:	sbb    al,bh
  4092dc:	jae    0x409287
  4092de:	fldcw  WORD PTR [ebp+0x2436c07b]
  4092e4:	sbb    BYTE PTR ds:0x6f9fef42,ah
  4092ea:	imul   edi,esp,0x938a3fc4
  4092f0:	pop    ss
  4092f1:	xor    dh,0x4b
  4092f4:	stos   DWORD PTR es:[edi],eax
  4092f5:	and    al,0xe7
  4092f7:	inc    ebx
  4092f8:	leave  
  4092f9:	lea    ebp,[ebx+0x41b14f98]
  4092ff:	call   0x6034e570
  409304:	mov    BYTE PTR [ecx+0x32],ch
  409307:	rol    DWORD PTR [ebp+0x1136a0be],cl
  40930d:	or     eax,0x6f1d259a
  409312:	xchg   esp,eax
  409313:	cmp    al,0x3
  409315:	cmp    eax,0xc6815cb1
  40931b:	fs mov esp,0xefc618da
  409321:	sub    al,0xe6
  409323:	inc    DWORD PTR [ebx-0x74a31c59]
  409329:	aam    0x4a
  40932b:	aaa    
  40932c:	or     al,0x9
  40932e:	and    eax,0x61fe2003
  409333:	cmc    
  409334:	dec    eax
  409335:	sub    al,0x3a
  409337:	sbb    al,0xd7
  409339:	rol    DWORD PTR [eax+0x3e597c71],cl
  40933f:	sub    esi,DWORD PTR [ecx]
  409341:	sbb    DWORD PTR [ebx],esi
  409343:	cmp    DWORD PTR fs:[edi+0x6a],esp
  409347:	imul   ebp,DWORD PTR [ecx+0x43a4f92a],0x15b796de
  409351:	pop    esi
  409352:	cli    
  409353:	scas   al,BYTE PTR es:[edi]
  409354:	leave  
  409355:	shl    DWORD PTR [esi-0x30],1
  409358:	cwde   
  409359:	dec    esp
  40935a:	inc    esi
  40935b:	push   es
  40935c:	and    eax,0xea66ea7c
  409361:	dec    esp
  409362:	dec    ecx
  409363:	dec    ebp
  409364:	or     al,BYTE PTR [ecx+0xd]
  409367:	fist   DWORD PTR [esi+edx*8]
  40936a:	mov    eax,0xb7bb00e3
  40936f:	arpl   WORD PTR [edx],di
  409371:	jecxz  0x4093a8
  409373:	dec    ebp
  409374:	or     DWORD PTR [ebx+ecx*8-0x78],edi
  409378:	stc    
  409379:	sbb    eax,0xb92d32a1
  40937e:	lock sub BYTE PTR [esi+0x7e],ch
  409382:	mov    ds:0x4120d588,eax
  409387:	xchg   esp,eax
  409388:	push   cs
  409389:	push   cs
  40938a:	add    al,0x5e
  40938c:	in     al,dx
  40938d:	das    
  40938e:	cmp    ebx,DWORD PTR [edi-0x59]
  409391:	sbb    al,BYTE PTR [ecx+0x49]
  409394:	arpl   WORD PTR [edi-0x4945a702],ax
  40939a:	sub    edi,DWORD PTR [ebx]
  40939c:	dec    edx
  40939d:	ins    BYTE PTR es:[edi],dx
  40939e:	xchg   esp,eax
  40939f:	dec    ebp
  4093a0:	mov    ds:0x4bf7575c,al
  4093a5:	dec    edx
  4093a6:	retf   0xc45e
  4093a9:	and    eax,0xc44ff2d6
  4093ae:	loop   0x4093c0
  4093b0:	sbb    al,0x17
  4093b2:	and    eax,0x6afef9e3
  4093b7:	jo     0x4093d4
  4093b9:	sub    eax,0x93809e7f
  4093be:	aam    0xf1
  4093c0:	sahf   
  4093c1:	sbb    al,BYTE PTR [ecx-0x6a8735ed]
  4093c7:	push   ss
  4093c8:	xor    BYTE PTR [edx],bh
  4093ca:	sub    eax,0x1b56bb9e
  4093cf:	or     DWORD PTR [esi+0x35],esi
  4093d2:	pop    DWORD PTR [esi]
  4093d4:	and    DWORD PTR [edx-0x18],edi
  4093d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d8:	mov    bl,0xbd
  4093da:	rcl    BYTE PTR [esi],cl
  4093dc:	mov    cl,BYTE PTR [esp+0x2d5b331f]
  4093e3:	sub    eax,0xa546a24d
  4093e8:	cmp    eax,edx
  4093ea:	cmp    ch,bh
  4093ec:	dec    ebx
  4093ed:	lods   al,BYTE PTR ds:[esi]
  4093ee:	(bad)  
  4093ef:	xchg   edx,eax
  4093f0:	stos   DWORD PTR es:[edi],eax
  4093f1:	ins    DWORD PTR es:[edi],dx
  4093f2:	imul   esp,DWORD PTR [ebp-0x7],0xffffffcb
  4093f6:	fwait
  4093f7:	sbb    al,0x74
  4093f9:	fwait
  4093fa:	pop    ebp
  4093fb:	test   eax,0xe5e52742
  409400:	inc    edx
  409401:	das    
  409402:	fisub  DWORD PTR [edi+0xad7efc2]
  409408:	sub    BYTE PTR [ebx+0x75],al
  40940b:	pop    ebp
  40940c:	leave  
  40940d:	and    esi,DWORD PTR [edx]
  40940f:	pop    ds
  409410:	pop    ecx
  409411:	lods   al,BYTE PTR ds:[esi]
  409412:	stc    
  409413:	ins    BYTE PTR es:[edi],dx
  409414:	(bad)  
  409415:	stos   BYTE PTR es:[edi],al
  409416:	rcl    dl,cl
  409418:	or     DWORD PTR [esi+ecx*4-0x2a7b7538],0xd995d13e
  409423:	fisubr WORD PTR [ebx]
  409425:	call   0xc383cd59
  40942a:	or     BYTE PTR es:[esp+ebx*8],0xa8
  40942f:	push   es
  409430:	inc    edx
  409431:	scas   al,BYTE PTR es:[edi]
  409432:	in     al,dx
  409433:	leave  
  409434:	jge    0x40945a
  409436:	inc    ebp
  409437:	adc    eax,0x4bedde90
  40943c:	das    
  40943d:	retf   
  40943e:	(bad)  
  40943f:	mov    ds:0xad87de19,eax
  409444:	sbb    ecx,DWORD PTR [ecx+eiz*4+0x5cb2c050]
  40944b:	and    al,0x31
  40944d:	mov    eax,0xbf09e087
  409452:	stos   BYTE PTR es:[edi],al
  409453:	cwde   
  409454:	cmp    al,0x7a
  409456:	ds test eax,0x107d57b8
  40945c:	xor    al,0x58
  40945e:	repnz loopne 0x4094b4
  409461:	push   ds
  409462:	std    
  409463:	dec    eax
  409464:	pop    ecx
  409465:	sub    edx,DWORD PTR [edi-0x4d5f8643]
  40946b:	sub    al,0xa5
  40946d:	ins    BYTE PTR es:[edi],dx
  40946e:	jnp    0x40947f
  409470:	hlt    
  409471:	dec    ebx
  409472:	mov    ebp,0x8faa8656
  409477:	test   al,0x37
  409479:	stos   DWORD PTR es:[edi],eax
  40947a:	pop    ebp
  40947b:	enter  0x6310,0xba
  40947f:	mov    al,0x61
  409481:	dec    ecx
  409482:	mov    ah,0xfa
  409484:	push   edx
  409485:	push   esp
  409486:	jl     0x409419
  409488:	neg    BYTE PTR [ecx-0x6bdd632e]
  40948e:	ficomp WORD PTR [edx+0x3d9239f2]
  409494:	scas   al,BYTE PTR es:[edi]
  409495:	mov    dl,0xd6
  409497:	push   esi
  409498:	retf   
  409499:	jne    0x409491
  40949b:	scas   eax,DWORD PTR es:[di]
  40949d:	outs   dx,BYTE PTR ds:[esi]
  40949e:	push   0xffffffab
  4094a0:	fmul   st,st(6)
  4094a2:	out    0xc7,al
  4094a4:	mov    bh,0xe8
  4094a6:	icebp  
  4094a7:	out    dx,al
  4094a8:	push   ecx
  4094a9:	(bad)  
  4094aa:	or     edx,edx
  4094ac:	(bad)  
  4094ad:	outs   dx,DWORD PTR ds:[esi]
  4094ae:	add    ebx,DWORD PTR [edi+0x7f0eff6c]
  4094b4:	(bad)  
  4094b5:	mov    ds:0x574feff7,eax
  4094ba:	pop    edx
  4094bb:	jne    0x4094f5
  4094bd:	xor    edx,DWORD PTR [esp+ebp*2+0x2f]
  4094c1:	jmp    0x2129:0xf6ec1118
  4094c8:	mov    ah,0x7a
  4094ca:	and    bh,BYTE PTR [eax]
  4094cc:	gs add al,0xc5
  4094cf:	fdiv   DWORD PTR fs:[ebp+0x7d]
  4094d3:	jle    0x40949e
  4094d5:	out    0xbc,al
  4094d7:	sub    DWORD PTR [ebx-0x322a1511],eax
  4094dd:	push   eax
  4094de:	(bad)
  4094e1:	cs ja  0x4094ad
  4094e4:	inc    eax
  4094e5:	xlat   BYTE PTR ds:[ebx]
  4094e6:	push   es
  4094e7:	call   0x6d1df9e9
  4094ec:	out    dx,eax
  4094ed:	(bad)  
  4094ee:	xchg   esi,eax
  4094ef:	lock mov eax,0x20cfa084
  4094f5:	shl    DWORD PTR ds:0x68a5cd9d,0xa8
  4094fc:	push   esi
  4094fd:	enter  0x460c,0x15
  409501:	adc    eax,0x260d41fe
  409506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409507:	mov    esp,0xeff1fbe8
  40950c:	cmp    cl,BYTE PTR [edx]
  40950e:	add    BYTE PTR [edx],dh
  409510:	push   ds
  409511:	lahf   
  409512:	(bad)  
  409513:	dec    BYTE PTR [ebp-0x7c]
  409516:	cli    
  409517:	mov    eax,0x62976841
  40951c:	mov    cl,0xea
  40951e:	mov    ecx,0xcd2dab9d
  409523:	sbb    edx,DWORD PTR [esi+0x7540f660]
  409529:	fist   DWORD PTR [ebx-0x293c6fe2]
  40952f:	push   ecx
  409530:	ffreep st(0)
  409532:	xchg   ebx,eax
  409533:	stos   BYTE PTR es:[edi],al
  409534:	jmp    0x40959b
  409536:	sub    BYTE PTR [eax+0x5b],0xc7
  40953a:	dec    ebx
  40953b:	js     0x40956b
  40953d:	inc    ebx
  40953e:	dec    ebx
  40953f:	and    DWORD PTR [ebx+0x7e],ebx
  409542:	fwait
  409543:	and    DWORD PTR [esi+0x3b9f1124],eax
  409549:	push   ebx
  40954a:	dec    esi
  40954b:	xchg   ecx,ebx
  40954d:	jecxz  0x409508
  40954f:	xchg   ebx,eax
  409550:	aad    0x7c
  409552:	cmp    BYTE PTR [ebx-0x4e],dh
  409555:	ja     0x4095ba
  409557:	ret    
  409558:	fnstsw WORD PTR [edi]
  40955a:	test   al,0x31
  40955c:	(bad)  
  40955d:	jae    0x40959b
  40955f:	jno    0x409570
  409561:	punpckhwd mm4,mm3
  409564:	mov    ds:0x2eced1d2,al
  409569:	ds jl  0x40950d
  40956c:	div    BYTE PTR [edx-0x5f]
  40956f:	inc    ebx
  409570:	les    ebp,FWORD PTR [ebx]
  409572:	sub    dh,BYTE PTR [ebp-0x7ad4a054]
  409578:	jecxz  0x40959e
  40957a:	mov    edi,0x94d2f0a5
  40957f:	and    bh,BYTE PTR [esi+0x3f2f467d]
  409585:	add    al,BYTE PTR [eax+0x6e627e2]
  40958b:	ret    0xebb9
  40958e:	mov    bh,0xa1
  409590:	and    DWORD PTR [eax-0x6a50a460],eax
  409596:	push   ebx
  409597:	fadd   DWORD PTR [edi]
  409599:	div    BYTE PTR [esi]
  40959b:	xor    ebp,DWORD PTR [eax+0x7f]
  40959e:	stc    
  40959f:	ja     0x40958a
  4095a1:	push   esp
  4095a2:	ins    BYTE PTR es:[edi],dx
  4095a3:	fs sub al,0xf6
  4095a6:	fsub   st(0),st
  4095a8:	popa   
  4095a9:	pop    es
  4095aa:	bound  ecx,QWORD PTR [eax+eiz*8-0x7160d86d]
  4095b1:	pop    ebx
  4095b2:	lods   eax,DWORD PTR ds:[esi]
  4095b3:	xor    dl,BYTE PTR [ecx]
  4095b5:	lods   eax,DWORD PTR ds:[esi]
  4095b6:	add    eax,DWORD PTR [edi+0x31b89cb7]
  4095bc:	clc    
  4095bd:	pop    es
  4095be:	sbb    esi,DWORD PTR [eax-0x264c313c]
  4095c4:	lds    esp,FWORD PTR [esi+0x3e21d777]
  4095ca:	test   al,0xf5
  4095cc:	push   eax
  4095cd:	in     al,0xc6
  4095cf:	cmp    ebx,DWORD PTR [edx-0x41]
  4095d2:	in     eax,dx
  4095d3:	into   
  4095d4:	mov    ds,edi
  4095d6:	xchg   edi,eax
  4095d7:	mov    ah,0x2a
  4095d9:	jl     0x40961c
  4095db:	push   edx
  4095dc:	sub    BYTE PTR [esi-0x72],dh
  4095df:	ins    BYTE PTR es:[edi],dx
  4095e0:	idiv   DWORD PTR [eax+0x5e]
  4095e3:	mov    ecx,0xdc15aea1
  4095e8:	mov    ah,0x42
  4095ea:	push   0x5a
  4095ec:	les    esp,FWORD PTR [edx+0x6]
  4095ef:	sbb    DWORD PTR [esi],0x23
  4095f2:	or     dl,BYTE PTR [edx+ebx*4-0x4f]
  4095f6:	mov    ah,0xe2
  4095f8:	outs   dx,BYTE PTR ds:[esi]
  4095f9:	inc    eax
  4095fa:	out    0x39,al
  4095fc:	cmp    al,al
  4095fe:	cmp    al,0xb0
  409600:	dec    ebx
  409601:	dec    BYTE PTR [ebx-0x6e]
  409604:	iret   
  409605:	mov    ah,0x9d
  409607:	in     al,dx
  409608:	rcl    ah,cl
  40960a:	push   ds
  40960b:	gs mov esi,0x6536588d
  409611:	pop    ds
  409612:	add    dh,BYTE PTR [ebp-0x46ca8c18]
  409618:	cli    
  409619:	or     DWORD PTR [ecx],ecx
  40961b:	das    
  40961c:	ds js  0x4095d8
  40961f:	mov    WORD PTR [esi],ss
  409621:	xchg   edi,eax
  409622:	sbb    al,BYTE PTR [ebp-0x72aed5f5]
  409628:	sbb    DWORD PTR [ebx],ebx
  40962a:	dec    esp
  40962b:	lahf   
  40962c:	das    
  40962d:	pop    esp
  40962e:	mov    dl,0x99
  409630:	(bad)  
  409632:	jb     0x4095fe
  409634:	add    ebx,DWORD PTR [edi-0x4a546acf]
  40963a:	push   esi
  40963b:	push   eax
  40963c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40963d:	pushf  
  40963e:	pop    ebp
  40963f:	rol    BYTE PTR [edi],1
  409641:	out    dx,eax
  409642:	retf   
  409643:	xor    cl,bh
  409645:	adc    al,0x41
  409647:	out    dx,eax
  409648:	sbb    eax,0x285147c6
  40964d:	adc    al,BYTE PTR [esp+edx*4-0x1ca4304c]
  409654:	and    al,0xab
  409656:	mov    cl,BYTE PTR [ecx]
  409658:	jns    0x409665
  40965a:	xchg   edx,eax
  40965b:	cmp    BYTE PTR [esi+ebp*8],bl
  40965e:	cmp    al,0xaf
  409660:	cmp    BYTE PTR [edx],al
  409662:	shr    BYTE PTR [eax+0x8038218],0x1f
  409669:	loop   0x4096d9
  40966b:	std    
  40966c:	mov    DWORD PTR [ecx],edi
  40966e:	in     eax,0x87
  409670:	icebp  
  409671:	scas   al,BYTE PTR es:[edi]
  409672:	or     BYTE PTR ds:0x3891e669,dh
  409678:	(bad)  
  409679:	pop    ebp
  40967a:	cmc    
  40967b:	inc    edi
  40967c:	iret   
  40967d:	or     cl,BYTE PTR [edi+0x438ed087]
  409683:	sub    ecx,eax
  409685:	je     0x4096c6
  409687:	test   DWORD PTR [ecx-0x5fc3d30e],edi
  40968d:	jecxz  0x409643
  40968f:	popf   
  409690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409691:	dec    edx
  409692:	push   edx
  409693:	xor    edi,DWORD PTR [edi-0x7d]
  409696:	fsubr  st(0),st
  409698:	add    ebp,DWORD PTR [edx-0x23f317ca]
  40969e:	test   ah,ch
  4096a0:	push   esp
  4096a1:	call   0x9e8d2e69
  4096a6:	pop    ebx
  4096a7:	test   eax,0xe8f7f01c
  4096ac:	ret    0xb306
  4096af:	pop    eax
  4096b0:	inc    edi
  4096b1:	sbb    al,0xc0
  4096b3:	sbb    ch,BYTE PTR [ebx+0x5d]
  4096b6:	popf   
  4096b7:	mov    ebx,0x87e26bd6
  4096bc:	and    bh,BYTE PTR [edx]
  4096be:	hlt    
  4096bf:	rol    BYTE PTR ds:0x6f8dafbb,cl
  4096c5:	idiv   DWORD PTR [edi+eiz*2+0x43752a0a]
  4096cc:	aaa    
  4096cd:	sbb    BYTE PTR [edi+0x835224a],0xe3
  4096d4:	jbe    0x409736
  4096d6:	(bad)  
  4096d7:	sti    
  4096d8:	call   0x37f05e83
  4096dd:	fs into 
  4096df:	(bad)  
  4096e0:	out    0xc0,eax
  4096e2:	shl    DWORD PTR [edi-0x57],cl
  4096e5:	inc    edi
  4096e6:	(bad)  
  4096e7:	adc    al,0xc3
  4096e9:	outs   dx,BYTE PTR ds:[esi]
  4096ea:	fs jnp 0x4096a8
  4096ed:	aam    0xaa
  4096ef:	aas    
  4096f0:	mov    ch,0x7
  4096f2:	nop
  4096f3:	adc    BYTE PTR [ecx],dl
  4096f5:	push   0xc0789d74
  4096fa:	push   es
  4096fb:	arpl   WORD PTR [edi+0x5a],cx
  4096fe:	pop    esp
  4096ff:	rcr    ebp,1
  409701:	cmp    DWORD PTR [ecx-0x78],edx
  409704:	sub    eax,0x72617638
  409709:	mov    edx,0xc6b44e01
  40970e:	mov    ah,0xcf
  409710:	xchg   edi,eax
  409711:	ins    BYTE PTR es:[edi],dx
  409712:	les    esi,FWORD PTR [ebp+0x76]
  409715:	adc    esp,DWORD PTR [ebx+ecx*4]
  409718:	sub    eax,DWORD PTR [edi-0x38]
  40971b:	(bad)  
  40971c:	rcr    BYTE PTR [esi],0xf7
  40971f:	call   0x48eed8bc
  409724:	sbb    bl,ch
  409726:	push   0x403ac071
  40972b:	sub    dh,dh
  40972d:	es retf 0xe522
  409731:	xchg   DWORD PTR [esi+0x79e3c79b],edx
  409737:	fs inc ebx
  409739:	mov    cs,WORD PTR [ecx+0x2da92809]
  40973f:	jmp    0x409742
  409741:	pop    ss
  409742:	or     al,0x48
  409744:	sbb    eax,0xf6b16ddf
  409749:	mov    DWORD PTR [edx-0x10123c31],edx
  40974f:	pop    ss
  409750:	jp     0x409717
  409752:	mov    al,ds:0x5687dce
  409757:	dec    esp
  409758:	jmp    0x409780
  40975a:	in     al,0x72
  40975c:	inc    ebx
  40975d:	arpl   bp,si
  40975f:	sahf   
  409760:	inc    edx
  409761:	inc    ebx
  409762:	scas   eax,DWORD PTR es:[edi]
  409763:	jno    0x4097e1
  409765:	mov    al,ds:0x39565f5
  40976a:	repz int3 
  40976c:	arpl   WORD PTR [esi+0x71],si
  40976f:	adc    bh,BYTE PTR [edx-0x24]
  409772:	add    dl,BYTE PTR [edi-0x20cb736]
  409778:	mov    WORD PTR [edi+0xbfd85d9],?
  40977e:	mov    eax,0xc6eb2216
  409783:	sbb    al,0x7b
  409785:	push   edx
  409786:	jnp    0x4097c1
  409788:	call   0x99e0:0x6b418b45
  40978f:	jmp    0x94f38287
  409794:	mov    ch,0x43
  409796:	push   edi
  409797:	pop    eax
  409798:	push   edi
  409799:	fwait
  40979a:	bound  esp,QWORD PTR [eax-0x4e0c9f55]
  4097a0:	sbb    cl,0xb7
  4097a3:	push   edi
  4097a4:	out    dx,eax
  4097a5:	mov    edi,0xfc23ee23
  4097aa:	mov    bh,0x81
  4097ac:	mov    DWORD PTR [esi+eax*1-0xda85088],edi
  4097b3:	push   0xd50c5559
  4097b8:	pop    ebx
  4097b9:	outs   dx,DWORD PTR ds:[esi]
  4097ba:	ret    
  4097bb:	push   edx
  4097bc:	mov    ecx,0xaf56368a
  4097c1:	(bad)  
  4097c2:	repz xor eax,0x919306f
  4097c8:	add    BYTE PTR [ebp+0x7],ah
  4097cb:	data16 data16 xlat BYTE PTR ds:[ebx]
  4097ce:	add    al,0x9a
  4097d0:	dec    bx
  4097d2:	popf   
  4097d3:	sub    BYTE PTR [edi-0x33b8589],dh
  4097d9:	loop   0x40979a
  4097db:	mov    al,0x8e
  4097dd:	mov    ebp,0xf3a3cce0
  4097e2:	lds    edx,FWORD PTR [eax-0x34]
  4097e5:	mov    ah,bl
  4097e7:	xchg   edi,eax
  4097e8:	in     eax,0x78
  4097ea:	or     al,0xd7
  4097ec:	dec    esp
  4097ed:	jno    0x40979b
  4097ef:	push   esp
  4097f0:	xor    al,0x61
  4097f2:	adc    cl,BYTE PTR [ebp+esi*8+0x7]
  4097f6:	rol    BYTE PTR [eax],cl
  4097f8:	jmp    0x1224:0xcfeb25b0
  4097ff:	inc    edx
  409800:	mov    edx,0xdafd86c1
  409805:	cmc    
  409806:	das    
  409807:	xor    al,0x32
  409809:	cmc    
  40980a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40980b:	gs xchg ebp,eax
  40980d:	xor    esi,DWORD PTR [ebp+ebx*4-0x5a]
  409811:	push   edi
  409812:	ror    DWORD PTR [ebp+0x2e4075cc],1
  409818:	mov    esi,0x91b74ffb
  40981d:	sub    eax,0x192bf045
  409822:	sti    
  409823:	jae    0x409896
  409825:	sbb    DWORD PTR [ecx-0x12],edi
  409828:	sub    al,0x28
  40982a:	ins    BYTE PTR es:[edi],dx
  40982b:	cmp    BYTE PTR [eax],0x5f
  40982e:	mov    bh,0xc6
  409830:	fst    QWORD PTR ss:[ecx-0x14]
  409834:	cmp    ch,BYTE PTR [ebx]
  409836:	idiv   eax
  409838:	mov    dl,0x55
  40983a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983b:	add    al,BYTE PTR [ecx+0x2aa1913b]
  409841:	pop    esi
  409842:	jmp    0x40989c
  409844:	ins    BYTE PTR es:[edi],dx
  409845:	sbb    al,0x2d
  409847:	sahf   
  409848:	and    BYTE PTR [eax-0x13],ch
  40984b:	sub    BYTE PTR [ebp-0xa],bh
  40984e:	jmp    0x409815
  409850:	sub    eax,0x3efd4d7e
  409855:	and    edx,ebx
  409857:	add    eax,0x2ec5f010
  40985c:	jb     0x4098b4
  40985e:	jno    0x40985d
  409860:	fwait
  409861:	lahf   
  409862:	sar    cl,cl
  409864:	dec    ebx
  409865:	int3   
  409866:	add    edi,DWORD PTR [esi]
  409868:	push   edi
  409869:	or     BYTE PTR [edx+eiz*8+0x1c],0x1a
  40986e:	and    bl,0x51
  409871:	aad    0x4a
  409873:	ret    0xf3f8
  409876:	mov    edx,0xc578d4be
  40987b:	fimul  DWORD PTR [edx-0x40]
  40987e:	sub    eax,0x4b908b8a
  409883:	pushf  
  409884:	fadd   DWORD PTR ds:0x1b434009
  40988a:	ss iret 
  40988c:	adc    DWORD PTR [eax-0x52],esp
  40988f:	es sahf 
  409891:	jle    0x40984e
  409893:	mov    ebx,0xf98e0d09
  409898:	pop    es
  409899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40989a:	int3   
  40989b:	pop    esi
  40989c:	test   DWORD PTR [ecx-0x49f518a8],ecx
  4098a2:	inc    esp
  4098a3:	in     al,0x16
  4098a5:	rol    BYTE PTR [edi+ebp*1],0xbc
  4098a9:	(bad)  [ecx+0x7ce69e1a]
  4098af:	pop    ds
  4098b0:	ins    DWORD PTR es:[edi],dx
  4098b1:	and    al,0x98
  4098b3:	imul   ebx,DWORD PTR [ebx],0x4b
  4098b6:	mov    WORD PTR [ecx+0x2a52a90b],fs
  4098bc:	pop    ds
  4098bd:	icebp  
  4098be:	ja     0xd016180c
  4098c4:	sbb    dh,BYTE PTR [ecx+0x542cfbd2]
  4098ca:	(bad)  
  4098cb:	in     eax,dx
  4098cc:	push   es
  4098cd:	loope  0x4098d5
  4098cf:	mov    WORD PTR [ecx+0x7e],ds
  4098d2:	lahf   
  4098d3:	mov    WORD PTR [ebx],?
  4098d5:	xchg   edx,eax
  4098d6:	add    dl,BYTE PTR [ecx]
  4098d8:	retf   
  4098d9:	adc    al,BYTE PTR [eax+0x2852e52d]
  4098df:	sbb    al,0x2b
  4098e1:	lods   al,BYTE PTR ds:[esi]
  4098e2:	into   
  4098e3:	int3   
  4098e4:	mov    DWORD PTR [edi-0x41d18cb],edi
  4098ea:	das    
  4098eb:	jecxz  0x4098fd
  4098ed:	add    eax,DWORD PTR [eax+0x4a2cf826]
  4098f3:	(bad)  
  4098f4:	cmp    al,0x10
  4098f6:	ins    BYTE PTR es:[edi],dx
  4098f7:	gs dec eax
  4098f9:	push   ecx
  4098fa:	imul   esi
  4098fc:	adc    ch,ch
  4098fe:	cpuid  
  409900:	mov    eax,0x6cdd9628
  409905:	xchg   esi,eax
  409906:	mov    dl,0x3a
  409908:	clc    
  409909:	push   esi
  40990a:	cmp    dl,BYTE PTR ds:0x775a227
  409910:	call   0xd3c8ae72
  409915:	xor    al,bh
  409917:	dec    ecx
  409918:	jle    0x409934
  40991a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991b:	ret    
  40991c:	ret    0x43e
  40991f:	push   ss
  409920:	inc    esi
  409921:	xlat   BYTE PTR ds:[ebx]
  409922:	fadd   DWORD PTR [edx-0x6b]
  409925:	mov    bh,BYTE PTR ds:0x43a62495
  40992b:	into   
  40992c:	cli    
  40992d:	aas    
  40992e:	xor    eax,0x9da6e5fa
  409933:	es mov ebp,0xe5803d7c
  409939:	or     BYTE PTR [esi-0x6f75ab5c],al
  40993f:	repnz xor eax,0x4cf70a4
  409945:	in     al,dx
  409946:	fdivr  QWORD PTR [eax-0xb]
  409949:	loop   0x409970
  40994b:	fidivr DWORD PTR [eax-0x7684bd7d]
  409951:	outs   dx,BYTE PTR ds:[esi]
  409952:	loopne 0x4098f9
  409954:	daa    
  409955:	dec    esi
  409956:	std    
  409957:	jns    0x4099a4
  409959:	push   0x10
  40995b:	dec    esp
  40995c:	pop    ss
  40995d:	mov    ebx,0x605dffe0
  409962:	shl    DWORD PTR [edi-0x2b184d39],0x55
  409969:	jl     0x40992c
  40996b:	xor    eax,0xac3c8d13
  409970:	scas   eax,DWORD PTR es:[edi]
  409971:	jp     0x4099e4
  409973:	pop    ecx
  409974:	outs   dx,BYTE PTR ds:[esi]
  409975:	stos   DWORD PTR es:[edi],eax
  409976:	shr    cl,1
  409978:	or     dl,dl
  40997a:	mov    edx,0x5322c6fd
  40997f:	mov    eax,0xd7f06c45
  409984:	dec    edi
  409985:	lea    esi,[esi-0x2fef50c8]
  40998b:	cli    
  40998c:	int3   
  40998d:	loope  0x409980
  40998f:	jle    0x409925
  409991:	out    dx,al
  409992:	mov    ah,0x2
  409994:	push   edi
  409995:	daa    
  409996:	dec    edx
  409997:	loop   0x4099c9
  409999:	aas    
  40999a:	pop    ebx
  40999b:	sti    
  40999c:	(bad)  
  40999d:	pushf  
  40999e:	cmp    al,0xe9
  4099a0:	jg     0x409937
  4099a2:	jmp    0xa7c1:0x14522621
  4099a9:	adc    eax,0xf6fcd08a
  4099ae:	pop    eax
  4099af:	ins    DWORD PTR es:[edi],dx
  4099b0:	rol    DWORD PTR [ecx-0xb],cl
  4099b3:	enter  0x526a,0x59
  4099b7:	sbb    al,0xa
  4099b9:	call   0xb502cb66
  4099be:	and    al,0xd8
  4099c0:	popf   
  4099c1:	xchg   edx,eax
  4099c2:	test   al,0x2b
  4099c4:	popfw  
  4099c6:	jnp    0x409a10
  4099c8:	out    dx,al
  4099c9:	mov    ds:0xca86d7f,eax
  4099ce:	out    dx,eax
  4099cf:	sbb    esp,edi
  4099d1:	lods   eax,DWORD PTR ds:[esi]
  4099d2:	pop    edx
  4099d3:	mov    cs,WORD PTR [edi]
  4099d5:	or     al,0xfe
  4099d7:	xchg   ecx,eax
  4099d8:	sbb    ecx,DWORD PTR [edi-0xddd6d23]
  4099de:	call   0x8b2e0622
  4099e3:	xchg   BYTE PTR [ebp-0x1f8639f1],bl
  4099e9:	and    BYTE PTR [ebx],0xa1
  4099ec:	rcl    DWORD PTR [ecx],1
  4099ee:	stos   DWORD PTR es:[edi],eax
  4099ef:	inc    esp
  4099f0:	sbb    ah,BYTE PTR [ebp+0x35]
  4099f3:	push   ds
  4099f4:	in     al,dx
  4099f5:	jmp    0xa115434d
  4099fa:	adc    eax,0xce2078c
  4099ff:	sub    esp,DWORD PTR [eax]
  409a01:	retf   
  409a02:	jl     0x4099ef
  409a04:	daa    
  409a05:	gs mov al,0xc9
  409a08:	xchg   esp,eax
  409a09:	or     al,0x3b
  409a0b:	adc    DWORD PTR [edi+0x25],0xffffffbb
  409a0f:	xor    al,0x68
  409a11:	dec    esi
  409a12:	pop    ds
  409a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a14:	das    
  409a15:	xlat   BYTE PTR ds:[ebx]
  409a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a17:	jae    0x4099f8
  409a19:	xor    eax,0x1362a6e9
  409a1e:	mov    ebx,DWORD PTR [ecx+0x73]
  409a21:	mov    eax,0x92f39ec9
  409a26:	(bad)  
  409a27:	mov    WORD PTR [eax],ss
  409a29:	mov    ebp,0x9a927f0f
  409a2e:	fldenv [ebx]
  409a30:	(bad)  
  409a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a33:	xchg   edx,eax
  409a34:	es sub al,0xab
  409a37:	scas   al,BYTE PTR es:[edi]
  409a38:	cmp    ebx,ebx
  409a3a:	or     DWORD PTR [esi-0x45],0x6b20df50
  409a41:	test   DWORD PTR [edi-0x407ba05f],edi
  409a47:	cmp    BYTE PTR [esp+edi*8-0x1b],0xb5
  409a4c:	dec    esp
  409a4d:	and    BYTE PTR [eax-0x77fc3161],dh
  409a53:	nop
  409a54:	out    0x8a,eax
  409a56:	adc    ah,BYTE PTR [edx-0x5772bc0a]
  409a5c:	xor    BYTE PTR [ebx+0xc],ah
  409a5f:	inc    ecx
  409a60:	scas   al,BYTE PTR es:[edi]
  409a61:	retf   
  409a62:	cmp    eax,0xf953f913
  409a67:	push   ebx
  409a68:	hlt    
  409a69:	outs   dx,BYTE PTR ds:[esi]
  409a6a:	out    dx,eax
  409a6b:	pushf  
  409a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a6d:	(bad)
  409a70:	fbstp  TBYTE PTR [eax+0x71c0a3b9]
  409a76:	ja     0x409acf
  409a78:	xchg   ecx,eax
  409a79:	outs   dx,DWORD PTR ds:[esi]
  409a7a:	add    eax,0x99d203fd
  409a7f:	into   
  409a80:	dec    esp
  409a81:	rcr    DWORD PTR [ecx-0x52],0xce
  409a85:	jnp    0x409a6c
  409a87:	test   DWORD PTR [edi+0x11],ebp
  409a8a:	je     0x409a1b
  409a8c:	out    dx,al
  409a8d:	cmp    ch,BYTE PTR [eax]
  409a8f:	pop    ss
  409a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a91:	dec    esi
  409a92:	mov    ?,WORD PTR [esi+0x15]
  409a95:	push   eax
  409a96:	dec    BYTE PTR [ecx]
  409a98:	push   ebx
  409a99:	dec    eax
  409a9a:	mov    edx,cs
  409a9c:	and    bl,BYTE PTR [eax-0x272328ff]
  409aa2:	jg     0x409b17
  409aa4:	mov    eax,0xb0bce2d9
  409aa9:	clc    
  409aaa:	call   0x864c:0xbf4b13b4
  409ab1:	jl     0x409ad4
  409ab3:	mov    ch,0x84
  409ab5:	mov    ds:0xbdf1512b,eax
  409aba:	cmp    BYTE PTR [eax+0x7aa8273a],ah
  409ac0:	inc    eax
  409ac1:	(bad)  
  409ac2:	mov    ch,0x88
  409ac4:	dec    esp
  409ac5:	out    0xbc,al
  409ac7:	mov    edi,0xdefc0cfb
  409acc:	cmp    DWORD PTR [ecx],0xe212152e
  409ad2:	adc    edx,DWORD PTR [ebx]
  409ad4:	or     dh,al
  409ad6:	mov    ebp,0x41b2a607
  409adb:	push   ecx
  409adc:	mov    WORD PTR [ebp+0x9],es
  409adf:	mov    ds:0x308d3fcc,eax
  409ae4:	pop    ds
  409ae5:	inc    esi
  409ae6:	stos   DWORD PTR es:[edi],eax
  409ae7:	into   
  409ae8:	or     BYTE PTR [eax],dl
  409aea:	sub    DWORD PTR [ebp+0x43],ebp
  409aed:	(bad)  
  409aee:	mov    edx,0xb1be70e1
  409af3:	aam    0xba
  409af5:	ins    DWORD PTR es:[edi],dx
  409af6:	push   esi
  409af7:	inc    ebx
  409af8:	pop    ebp
  409af9:	jg     0x409a8a
  409afb:	push   ebp
  409afc:	jns    0x409b7d
  409afe:	inc    ebx
  409aff:	jb     0x409af5
  409b01:	jle    0x409ae8
  409b03:	xchg   DWORD PTR [ebx+0x37],ebx
  409b06:	pop    ss
  409b07:	mov    esi,0x2e6a0327
  409b0c:	fninit 
  409b0e:	test   al,0x9c
  409b10:	jmp    0x2216527b
  409b15:	pop    esp
  409b16:	call   0xaadf:0x7ff3932b
  409b1d:	sbb    al,0x8f
  409b1f:	stos   DWORD PTR es:[edi],eax
  409b20:	enter  0xd902,0x7f
  409b24:	inc    esp
  409b25:	stc    
  409b26:	add    BYTE PTR [ecx+0x55c0d926],bh
  409b2c:	and    ah,BYTE PTR [edi-0xc6b1046]
  409b32:	clc    
  409b33:	jnp    0x409b09
  409b35:	enter  0x8be1,0x46
  409b39:	xchg   ebp,eax
  409b3a:	leave  
  409b3b:	adc    BYTE PTR [edi+0x7844248a],al
  409b41:	push   esp
  409b42:	push   0xffffff94
  409b44:	mov    ?,WORD PTR [ebp-0x22ba7181]
  409b4a:	push   ebx
  409b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b4c:	cmc    
  409b4d:	xchg   BYTE PTR ss:[esi+0x47313945],ch
  409b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b55:	fcom   QWORD PTR [eax-0x45]
  409b58:	xchg   esi,eax
  409b59:	adc    BYTE PTR [esi],cl
  409b5b:	sar    DWORD PTR [eax-0x4892d6f],1
  409b61:	popf   
  409b62:	and    edx,eax
  409b64:	jmp    0x647a50fa
  409b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6a:	sub    eax,0x609be1a6
  409b6f:	push   es
  409b70:	pop    ds
  409b71:	xchg   ebp,eax
  409b72:	aam    0x7
  409b74:	into   
  409b75:	retf   0x7bc3
  409b78:	inc    edi
  409b79:	das    
  409b7a:	mov    ebx,0xaea5a5fe
  409b7f:	inc    ebx
  409b80:	mov    ch,0x15
  409b82:	push   edi
  409b83:	xchg   esp,eax
  409b84:	outs   dx,BYTE PTR ds:[esi]
  409b85:	mov    esi,0x5a10255f
  409b8a:	data16 cld 
  409b8c:	pop    edi
  409b8d:	add    ah,ah
  409b8f:	pop    ds
  409b90:	imul   ebp,ebx,0x3e9efb17
  409b96:	xchg   esi,eax
  409b97:	mov    esi,0xa2477ac2
  409b9c:	cmp    edx,esp
  409b9e:	sub    dl,al
  409ba0:	adc    al,0xeb
  409ba2:	xor    BYTE PTR [edi],bh
  409ba4:	pop    ecx
  409ba5:	jmp    0xe524a8
  409baa:	inc    eax
  409bab:	repz add DWORD PTR [ecx+0x3a],0xffffffd4
  409bb0:	sahf   
  409bb1:	fnsave [ebx-0x700003e8]
  409bb7:	shl    DWORD PTR [edi],0xdd
  409bba:	jbe    0x409ba5
  409bbc:	test   esi,ebx
  409bbe:	jecxz  0x409b7a
  409bc0:	test   eax,0xaa399f73
  409bc5:	out    0x7f,al
  409bc7:	xor    eax,0xdc467d67
  409bcc:	test   eax,0xb91012fb
  409bd1:	xchg   ebx,eax
  409bd2:	test   DWORD PTR [eax+edi*1+0x6c2ea048],edx
  409bd9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409bdb:	cmp    esp,edx
  409bdd:	repnz cmp edi,DWORD PTR [ebp+0x10]
  409be1:	add    BYTE PTR [ebp+0x20],ah
  409be4:	outs   dx,BYTE PTR ds:[esi]
  409be5:	push   0xfffffffd
  409be7:	fsub   QWORD PTR [eax-0x57]
  409bea:	sub    BYTE PTR [ebp-0xf5b0518],al
  409bf0:	fistp  DWORD PTR [ecx-0x5535562]
  409bf6:	sbb    al,0x5c
  409bf8:	ins    BYTE PTR es:[edi],dx
  409bf9:	(bad)  
  409bfa:	mov    ah,0xfd
  409bfc:	fdivp  st(2),st
  409bfe:	imul   BYTE PTR [esi+0x4d544383]
  409c04:	jmp    0xf758e032
  409c09:	jmp    0x35cd:0xf2c4d07f
  409c10:	sbb    ebp,DWORD PTR [ecx-0x7a2a12b0]
  409c16:	ja     0x409bc6
  409c18:	in     al,0xb8
  409c1a:	cmp    BYTE PTR [ebp-0x29],ch
  409c1d:	sahf   
  409c1e:	mov    dl,bl
  409c20:	test   DWORD PTR ds:0xd6858e4e,ebp
  409c26:	mov    cl,0x98
  409c28:	mov    edx,0xb4e3a6df
  409c2d:	push   cs
  409c2e:	adc    edi,DWORD PTR [eax]
  409c30:	xchg   ecx,eax
  409c31:	clc    
  409c32:	cmp    bl,BYTE PTR [eax+0x36]
  409c35:	adc    edx,DWORD PTR [eax+ecx*1-0x3536bca2]
  409c3c:	stos   BYTE PTR es:[edi],al
  409c3d:	popa   
  409c3e:	cmp    bl,BYTE PTR [esi+ebp*8]
  409c41:	arpl   dx,sp
  409c43:	push   esi
  409c44:	sub    DWORD PTR [esi],esp
  409c46:	push   esi
  409c47:	cmp    DWORD PTR ss:[edi+0x661d78f],ebp
  409c4e:	sub    DWORD PTR [eax-0x5e],ecx
  409c51:	xlat   BYTE PTR ds:[ebx]
  409c52:	dec    ecx
  409c53:	xchg   DWORD PTR [ebp-0x31ee8f32],esi
  409c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c5a:	iret   
  409c5b:	in     eax,dx
  409c5c:	inc    esp
  409c5d:	xchg   edx,eax
  409c5e:	or     al,0xd1
  409c60:	adc    bl,BYTE PTR [eax-0x6d8a232e]
  409c66:	sub    bl,BYTE PTR [ecx+0x2b237fc8]
  409c6c:	adc    DWORD PTR [esi+0x1d09b9a5],edi
  409c72:	or     al,0x12
  409c74:	cli    
  409c75:	lods   eax,DWORD PTR ds:[esi]
  409c76:	pop    edi
  409c77:	imul   ecx,DWORD PTR [ebp-0x46],0x3b
  409c7b:	dec    edi
  409c7c:	and    DWORD PTR [edi-0x5b2232c1],esp
  409c82:	jno    0x409cc1
  409c84:	clc    
  409c85:	lds    esp,FWORD PTR [eax+0x7d]
  409c88:	pop    ds
  409c89:	scas   eax,DWORD PTR es:[edi]
  409c8a:	sub    BYTE PTR [ebx+0x2c],dh
  409c8d:	ror    eax,cl
  409c8f:	lods   eax,DWORD PTR ds:[esi]
  409c90:	test   edi,edx
  409c92:	fld    DWORD PTR [ebx]
  409c94:	xor    DWORD PTR [esi],ebx
  409c96:	inc    esi
  409c97:	es (bad) 
  409c99:	iret   
  409c9a:	and    al,0xdd
  409c9c:	push   0xffffffb6
  409c9e:	fnstcw WORD PTR [esi+0x4b]
  409ca1:	leave  
  409ca2:	div    DWORD PTR [ebx+ebp*2-0x3a]
  409ca6:	sub    DWORD PTR [edx-0x20d5b147],ecx
  409cac:	jns    0x409c93
  409cae:	adc    esp,DWORD PTR [ecx-0xf4269ca]
  409cb4:	mov    ah,0x31
  409cb6:	sbb    ah,BYTE PTR [edx]
  409cb8:	loopne 0x409ce0
  409cba:	out    0xd1,al
  409cbc:	iret   
  409cbd:	cmp    dl,bl
  409cbf:	imul   eax,edx,0x51edfbd3
  409cc5:	(bad)  
  409cc6:	fidiv  WORD PTR [edx+0x2e7ca7b6]
  409ccc:	fisub  DWORD PTR [edi+0x2f]
  409ccf:	ins    BYTE PTR es:[edi],dx
  409cd0:	mov    ebx,0xaf11da02
  409cd5:	dec    ebx
  409cd6:	repnz (bad) 
  409cd8:	out    0xb0,al
  409cda:	jno    0x409d04
  409cdc:	jmp    0xcffa:0xb7aca4f8
  409ce3:	dec    esi
  409ce4:	push   ss
  409ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce6:	pop    ecx
  409ce7:	push   eax
  409ce8:	and    BYTE PTR [edx],cl
  409cea:	test   al,0x28
  409cec:	jo     0x409c97
  409cee:	mov    ebp,0x99fbfcb3
  409cf3:	rol    DWORD PTR [eax-0x1247f348],1
  409cf9:	or     ebx,DWORD PTR [ebp-0x265fe4f9]
  409cff:	add    BYTE PTR [ecx*4+0x3a6bcca6],cl
  409d06:	mov    ah,BYTE PTR [edx-0x4be82ef1]
  409d0c:	xchg   DWORD PTR [edx+eax*8-0x69],esi
  409d10:	inc    edi
  409d11:	jg     0x409cde
  409d13:	mov    ebx,0x11190f14
  409d18:	push   ds
  409d19:	sub    bl,BYTE PTR gs:[edi]
  409d1c:	cmp    bh,BYTE PTR [edi-0x2f39c154]
  409d22:	fmul   DWORD PTR [esi]
  409d24:	outs   dx,BYTE PTR ds:[esi]
  409d25:	fld    QWORD PTR ds:[ebx-0x44]
  409d29:	faddp  st(2),st
  409d2b:	jns    0x409d9e
  409d2d:	out    dx,eax
  409d2e:	pop    ss
  409d2f:	mov    ebp,0x25cd325e
  409d34:	icebp  
  409d35:	mov    bh,0x9e
  409d37:	sub    cl,bl
  409d39:	jbe    0x409da6
  409d3b:	push   ecx
  409d3c:	repz mov edi,eax
  409d3f:	aaa    
  409d40:	pop    edi
  409d41:	in     eax,dx
  409d42:	pop    esp
  409d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d44:	in     al,dx
  409d45:	xor    DWORD PTR [ebx+0x6],ebp
  409d48:	repz mov cl,BYTE PTR [eax-0x63e08348]
  409d4f:	and    eax,0x66cda4e9
  409d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d55:	cmp    al,BYTE PTR [edi+0x69]
  409d58:	data16 ss jge 0x409d67
  409d5c:	dec    ebp
  409d5d:	dec    esp
  409d5e:	pop    ecx
  409d5f:	adc    DWORD PTR [eax+0x16],ecx
  409d62:	daa    
  409d63:	mov    esi,0x1cd7795c
  409d68:	xor    al,dh
  409d6a:	arpl   WORD PTR [eax+0x5e],si
  409d6d:	push   cs
  409d6e:	sar    BYTE PTR [esp+eax*1-0x2399950],0x79
  409d76:	jg     0x409d3a
  409d78:	xor    edi,DWORD PTR [esi+0x7ab64292]
  409d7e:	nop
  409d7f:	int    0xea
  409d81:	(bad)  
  409d82:	push   edx
  409d83:	rcl    DWORD PTR ds:0x651b384d,0xc5
  409d8a:	pop    ebx
  409d8b:	xchg   eax,edi
  409d8d:	cld    
  409d8e:	in     eax,dx
  409d8f:	mov    ah,0x98
  409d91:	push   ss
  409d92:	inc    ecx
  409d93:	test   al,0x8a
  409d96:	pop    ecx
  409d97:	jmp    0x7d15:0xc8ab8c0e
  409d9e:	mov    bl,0xdc
  409da0:	test   BYTE PTR [eax+ecx*8-0x4a19ca51],cl
  409da7:	ret    
  409da8:	and    DWORD PTR [ecx+eax*8-0x72],eax
  409dac:	mov    esi,0x6a81f502
  409db1:	jb     0x409d48
  409db3:	jge    0x409dc8
  409db5:	repnz pop DWORD PTR [edx-0x128c14b3]
  409dbc:	stc    
  409dbd:	repz or BYTE PTR [edi+0x69145652],bh
  409dc4:	cdq    
  409dc5:	loop   0x409e1f
  409dc7:	and    DWORD PTR [edx+0x6a1a0bea],eax
  409dcd:	xchg   BYTE PTR [ecx-0x5a261d8a],bl
  409dd3:	jae    0x409dec
  409dd5:	cmc    
  409dd6:	outs   dx,DWORD PTR ds:[esi]
  409dd7:	sub    BYTE PTR [esp+ebx*2-0x24507570],0x57
  409ddf:	popf   
  409de0:	ja     0x409e13
  409de2:	and    ebp,ebp
  409de4:	push   ebp
  409de5:	outs   dx,BYTE PTR ds:[esi]
  409de6:	jle    0x409e09
  409de8:	adc    eax,0x85749290
  409ded:	jne    0x409e27
  409def:	sbb    BYTE PTR [ecx-0x73],dh
  409df2:	xchg   edx,eax
  409df3:	push   esi
  409df4:	retf   0x4f22
  409df7:	shl    bh,cl
  409df9:	xchg   edx,eax
  409dfa:	xchg   esp,eax
  409dfb:	not    DWORD PTR [ebx]
  409dfd:	and    BYTE PTR [esi+0x58],bl
  409e00:	mul    cl
  409e02:	cmp    al,BYTE PTR [edi+eiz*4]
  409e05:	push   ebp
  409e06:	mov    edi,0xb097e44c
  409e0b:	jl     0x409e3e
  409e0d:	aaa    
  409e0e:	sbb    ch,0xb5
  409e11:	mov    cs,WORD PTR [ebx+eiz*2]
  409e14:	je     0x409e85
  409e16:	or     al,0x2f
  409e18:	jo     0x409e4c
  409e1a:	mov    edx,0xdff2f362
  409e1f:	loope  0x409dcb
  409e21:	mov    cl,0x44
  409e23:	push   ebp
  409e24:	sub    edx,ecx
  409e26:	cmp    DWORD PTR [ebx],ebp
  409e28:	or     DWORD PTR [esp+edi*8],ebx
  409e2b:	adc    BYTE PTR [edi+0x2],al
  409e2e:	arpl   si,si
  409e30:	jne    0x409eac
  409e32:	dec    ecx
  409e33:	add    al,0x5f
  409e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e36:	shr    BYTE PTR [edx+eax*1-0x14],1
  409e3a:	xlat   BYTE PTR ds:[ebx]
  409e3b:	sub    bl,ah
  409e3d:	rol    BYTE PTR fs:[eax-0x1b],0xa1
  409e42:	bound  edx,QWORD PTR [esi+0x61]
  409e45:	pop    es
  409e46:	cdq    
  409e47:	or     eax,0xc141dc0a
  409e4c:	add    al,0xc2
  409e4e:	push   eax
  409e4f:	mov    esp,0xe383d998
  409e54:	test   eax,0xe4a2fda7
  409e59:	in     al,dx
  409e5a:	xchg   esp,eax
  409e5b:	cmp    edi,esi
  409e5d:	dec    ecx
  409e5e:	nop
  409e5f:	ficom  WORD PTR [edx+0x669dc32f]
  409e65:	mov    al,0x1f
  409e67:	xor    eax,0x69fe58b6
  409e6c:	xchg   ebp,eax
  409e6d:	loop   0x409ec1
  409e6f:	xor    edi,DWORD PTR [edx-0x55]
  409e72:	push   eax
  409e73:	mov    ah,0xd3
  409e75:	pop    edi
  409e76:	mov    fs,WORD PTR [edx+0x75]
  409e79:	fcmovu st,st(4)
  409e7b:	fs sti 
  409e7d:	sbb    al,0x43
  409e7f:	rcl    BYTE PTR [edx-0x1e0947b4],cl
  409e85:	xchg   esi,eax
  409e86:	fidivr DWORD PTR [esi]
  409e88:	call   0xeeb1:0xad6b6b94
  409e8f:	mov    bh,0x11
  409e91:	outs   dx,BYTE PTR ds:[esi]
  409e92:	vpsrlw ymm4,ymm0,XMMWORD PTR [esp+ecx*4-0x29]
  409e98:	sar    BYTE PTR [ecx+eiz*4+0x73],1
  409e9c:	aam    0xa
  409e9e:	inc    edx
  409e9f:	inc    ebp
  409ea0:	xor    dl,dl
  409ea2:	rcl    DWORD PTR es:[esi+0x3e],cl
  409ea6:	loopne 0x409e7c
  409ea8:	dec    edx
  409ea9:	aaa    
  409eaa:	pop    edx
  409eab:	push   cs
  409eac:	inc    ecx
  409ead:	push   cs
  409eae:	cli    
  409eaf:	push   ebx
  409eb0:	(bad)  
  409eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb2:	mov    al,ds:0xed936ee9
  409eb7:	imul   edi,DWORD PTR [eax],0x45deaf9e
  409ebd:	jmp    0x9fa4136c
  409ec2:	ja     0x409f3f
  409ec4:	aam    0x73
  409ec6:	stos   DWORD PTR es:[edi],eax
  409ec7:	push   ecx
  409ec8:	adc    eax,0x85adf057
  409ecd:	mov    ebx,cs
  409ecf:	mov    ah,0x22
  409ed1:	popa   
  409ed2:	mov    esp,0x650d1070
  409ed7:	call   0xf1d76aa9
  409edc:	xchg   BYTE PTR [ebx+0x13],ah
  409edf:	mov    ah,ah
  409ee1:	mov    bh,0x39
  409ee3:	jl     0x409edf
  409ee5:	pop    eax
  409ee6:	push   edi
  409ee7:	rcr    DWORD PTR [eax+edx*1+0x5798782c],cl
  409eee:	cmc    
  409eef:	cmp    esi,DWORD PTR [ebx+0x6e]
  409ef2:	imul   BYTE PTR [edi+0x77]
  409ef5:	dec    eax
  409ef6:	mov    dl,0x9f
  409ef8:	fnstsw WORD PTR [ecx+0x35]
  409efb:	xchg   edx,eax
  409efc:	dec    edx
  409efd:	popa   
  409efe:	and    DWORD PTR [edx-0x25e45f69],esp
  409f04:	xor    BYTE PTR [esi],dh
  409f06:	add    eax,0xed8bba0e
  409f0b:	fdivr  QWORD PTR [eax+0x4af2ae0d]
  409f11:	inc    esi
  409f12:	and    DWORD PTR [bp+si],0xffffffdd
  409f16:	fcom   DWORD PTR [ebx-0x11]
  409f19:	fs or  esp,edx
  409f1c:	fsub   st,st(1)
  409f1e:	ss pop es
  409f20:	add    DWORD PTR [bp+si-0x20a6],edi
  409f25:	cwde   
  409f26:	lahf   
  409f27:	push   esi
  409f28:	inc    esi
  409f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2a:	imul   esp,DWORD PTR [ebp-0x42],0xffffff90
  409f2e:	das    
  409f2f:	mov    al,ds:0x8315dc4c
  409f34:	in     al,0x4e
  409f36:	cs jge 0x409ef3
  409f39:	mov    esi,0x128ec5c1
  409f3e:	pop    edi
  409f3f:	adc    al,0xc0
  409f41:	leave  
  409f42:	push   es
  409f43:	test   al,0x6a
  409f45:	add    bl,0x5f
  409f48:	stc    
  409f49:	sub    ebp,DWORD PTR [ebx+0x1c]
  409f4c:	inc    esp
  409f4d:	(bad)  
  409f4f:	jge    0x409f96
  409f51:	aam    0x9c
  409f53:	into   
  409f54:	add    eax,DWORD PTR [ebx-0x53]
  409f57:	leave  
  409f58:	add    BYTE PTR [ecx+0x7e9ff314],bl
  409f5e:	add    esi,0x69221dd8
  409f64:	inc    eax
  409f65:	rcl    DWORD PTR [edx+0x1ae387f0],0x3
  409f6c:	fstp   QWORD PTR [ebp+0x31e2d684]
  409f72:	xor    ecx,DWORD PTR [edx]
  409f74:	jecxz  0x409f01
  409f76:	pop    edx
  409f77:	cmp    al,0x9
  409f79:	ins    BYTE PTR es:[edi],dx
  409f7a:	mov    ecx,0x7490f848
  409f7f:	mov    esp,0xaffe2d1c
  409f84:	xor    DWORD PTR [edx],0x8d69d64
  409f8a:	addr16 fs mov bl,0xc0
  409f8e:	sub    eax,0xa8e38c8b
  409f93:	sub    ebp,eax
  409f95:	retf   0x82f2
  409f98:	sahf   
  409f99:	mov    ebx,0xdc0815e3
  409f9e:	xlat   BYTE PTR ds:[ebx]
  409f9f:	sbb    bh,ah
  409fa1:	push   ecx
  409fa2:	mov    DWORD PTR [edx],eax
  409fa4:	inc    esp
  409fa5:	(bad)  
  409fa6:	out    dx,al
  409fa7:	and    eax,0xfd2d9040
  409fac:	std    
  409fad:	xchg   edx,eax
  409fae:	arpl   WORD PTR [edx+0x72],sp
  409fb1:	pop    ss
  409fb2:	popf   
  409fb3:	sub    ebx,eax
  409fb5:	popf   
  409fb6:	mov    bl,0x4d
  409fb8:	mov    ebp,0x47b783ff
  409fbd:	and    eax,0xde591aec
  409fc2:	lock repnz xchg eax,edi
  409fc6:	adc    BYTE PTR [esi],cl
  409fc8:	adc    edi,DWORD PTR [ecx+0x12b9e56e]
  409fce:	inc    esi
  409fcf:	pop    ebx
  409fd0:	mov    dh,0x82
  409fd2:	out    0x6c,eax
  409fd4:	xchg   ebp,eax
  409fd5:	in     al,dx
  409fd6:	add    bh,cl
  409fd8:	bound  ebp,QWORD PTR [ebp+0x64]
  409fdb:	mov    bl,0xd6
  409fdd:	or     ebx,ebp
  409fdf:	repz pop edx
  409fe1:	cli    
  409fe2:	ret    
  409fe3:	fcomp  DWORD PTR [ebx-0x3e2be947]
  409fe9:	shr    BYTE PTR [edx],1
  409feb:	mov    ah,0xb6
  409fed:	arpl   WORD PTR [edx-0x8],di
  409ff0:	pop    eax
  409ff1:	fisub  WORD PTR [eax-0x6c]
  409ff4:	mov    edx,0x75e0d254
  409ff9:	dec    ebp
  409ffa:	push   ebx
  409ffb:	pop    ebp
  409ffc:	adc    BYTE PTR ds:0x54fc56b7,cl
  40a002:	inc    edx
  40a003:	jnp    0x409fb8
  40a005:	push   ebx
  40a006:	mov    esi,0x370b7b06
  40a00b:	les    eax,FWORD PTR [esp+ebx*8]
  40a00e:	mov    esi,0x6d4dac0e
  40a013:	xchg   edx,eax
  40a014:	mov    bl,0x36
  40a016:	mov    ebp,0xc0bc050d
  40a01b:	mov    ah,BYTE PTR [eax+0x5236daf4]
  40a021:	pop    esp
  40a022:	xchg   ecx,eax
  40a023:	jle    0x409fc9
  40a025:	push   eax
  40a026:	shl    BYTE PTR [ecx+0x1918243b],cl
  40a02c:	adc    bl,BYTE PTR [bx+si-0x1f]
  40a030:	or     DWORD PTR ds:[ecx],0xffffff9e
  40a034:	(bad)  
  40a035:	(bad)  
  40a036:	std    
  40a037:	shr    dh,0x86
  40a03a:	out    dx,eax
  40a03b:	xor    dl,0xaf
  40a03e:	ret    
  40a03f:	sahf   
  40a040:	sbb    dh,ch
  40a042:	add    ebp,eax
  40a044:	pop    DWORD PTR [ecx+0x32fb30d3]
  40a04a:	popa   
  40a04b:	cmc    
  40a04c:	and    al,BYTE PTR [ecx]
  40a04e:	and    esp,ebp
  40a050:	js     0x40a01b
  40a052:	aam    0x98
  40a054:	test   ebp,ebx
  40a056:	mov    ebp,0xef7b58f8
  40a05b:	and    eax,0xa7fbd69d
  40a060:	(bad)  
  40a061:	stos   DWORD PTR es:[edi],eax
  40a062:	test   eax,0x85af83d9
  40a067:	sbb    ebp,DWORD PTR [ebx-0x66]
  40a06a:	aas    
  40a06b:	pop    ebp
  40a06c:	in     al,0x3e
  40a06e:	hlt    
  40a06f:	mov    ah,0x45
  40a071:	inc    edi
  40a072:	(bad)  
  40a073:	leave  
  40a074:	gs xchg ecx,eax
  40a076:	out    0x39,eax
  40a078:	(bad)  
  40a079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a07a:	fldcw  WORD PTR [edi+0x6d]
  40a07d:	xchg   edx,eax
  40a07e:	and    ecx,DWORD PTR [esi*1+0x6ff99220]
  40a085:	leave  
  40a086:	lea    edx,ds:0xf40a134e
  40a08c:	mov    al,0xaf
  40a08e:	cwde   
  40a08f:	pop    ds
  40a090:	xchg   edi,eax
  40a091:	outs   dx,BYTE PTR ds:[esi]
  40a092:	push   es
  40a093:	clc    
  40a094:	inc    ecx
  40a095:	push   ebp
  40a096:	ins    BYTE PTR es:[edi],dx
  40a097:	pop    ecx
  40a098:	xlat   BYTE PTR ds:[ebx]
  40a099:	or     DWORD PTR [edi+0x21],eax
  40a09c:	mov    edx,esi
  40a09e:	je     0x40a09f
  40a0a0:	je     0x40a047
  40a0a2:	leave  
  40a0a3:	or     edi,edx
  40a0a5:	xchg   ebx,eax
  40a0a6:	pop    esp
  40a0a7:	out    dx,al
  40a0a8:	push   esi
  40a0a9:	std    
  40a0aa:	push   0x2b
  40a0ac:	repnz cmp BYTE PTR [ecx],bh
  40a0af:	cmp    eax,0xff19bf1
  40a0b4:	jmp    0xcd0:0xc0fe2d27
  40a0bb:	cmp    ecx,eax
  40a0bd:	mov    cl,0xb0
  40a0bf:	add    eax,0x68c77221
  40a0c4:	mov    al,0xa4
  40a0c6:	mov    ?,ebp
  40a0c8:	xchg   ebx,eax
  40a0c9:	sbb    edi,DWORD PTR [ebx]
  40a0cb:	nop
  40a0cc:	mov    edi,0x92ba51ea
  40a0d1:	(bad)
  40a0d5:	push   ebp
  40a0d6:	xor    DWORD PTR [edi-0x61],esp
  40a0d9:	sbb    dl,dh
  40a0db:	jo     0x40a0b1
  40a0dd:	out    dx,eax
  40a0de:	adc    al,0x8f
  40a0e0:	frstor [ebp+0x1ff0cf10]
  40a0e6:	sbb    eax,0x1036b92
  40a0eb:	(bad)  
  40a0ec:	pop    esp
  40a0ed:	aaa    
  40a0ee:	push   ecx
  40a0ef:	or     DWORD PTR [ecx-0x6ba02e85],edi
  40a0f5:	inc    esi
  40a0f6:	or     eax,0x24314471
  40a0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fc:	mov    bh,al
  40a0fe:	push   ebp
  40a0ff:	sahf   
  40a100:	hlt    
  40a101:	inc    edx
  40a102:	jle    0x40a162
  40a104:	cmpps  xmm6,XMMWORD PTR ds:0xabbd01e2,0xba
  40a10c:	jae    0x40a0c6
  40a10e:	bound  ecx,QWORD PTR [edi]
  40a110:	data16 ja 0x40a12a
  40a113:	mov    BYTE PTR [ecx+eax*1-0x6ab40ed],ah
  40a11a:	ficom  DWORD PTR [edx]
  40a11c:	inc    esi
  40a11d:	mov    dh,0x8f
  40a11f:	sar    BYTE PTR [esi],1
  40a121:	iret   
  40a122:	je     0x40a128
  40a124:	jle    0x40a1a3
  40a126:	adc    edx,DWORD PTR [esi+0x27613af]
  40a12c:	cmp    DWORD PTR [ebx+esi*1+0x3d],ecx
  40a130:	fiadd  WORD PTR [esi-0xd]
  40a133:	push   cs
  40a134:	xchg   edx,eax
  40a135:	push   edx
  40a136:	or     al,0x7a
  40a138:	and    DWORD PTR [ebx-0x7f17ad88],ebx
  40a13e:	rcr    BYTE PTR [ebx-0x24],1
  40a141:	test   BYTE PTR [edx+0x26577ce0],bh
  40a147:	add    ah,BYTE PTR [eax-0x75088355]
  40a14d:	inc    ecx
  40a14e:	xor    ecx,eax
  40a150:	adc    cl,BYTE PTR [ebp-0x5cb6ef18]
  40a156:	and    edi,ebx
  40a158:	es arpl di,ax
  40a15b:	scas   al,BYTE PTR es:[edi]
  40a15c:	fs push esp
  40a15e:	iret   
  40a15f:	outs   dx,DWORD PTR ds:[esi]
  40a160:	inc    esp
  40a161:	sahf   
  40a162:	js     0x40a163
  40a164:	mov    al,ds:0x531793d8
  40a169:	push   cs
  40a16a:	inc    esi
  40a16b:	sub    ecx,esp
  40a16d:	xchg   edi,eax
  40a16e:	pop    ebp
  40a16f:	loope  0x40a154
  40a171:	into   
  40a172:	(bad)  
  40a173:	out    dx,al
  40a174:	ror    DWORD PTR [eax+ebx*8+0x6fefe579],0xec
  40a17c:	xchg   edx,eax
  40a17d:	loopne 0x40a1bb
  40a17f:	xor    ebx,eax
  40a181:	jae    0x40a153
  40a183:	jbe    0x40a1ee
  40a185:	jnp    0x40a133
  40a187:	and    ah,BYTE PTR [ebx+0x5bb0583b]
  40a18d:	ss pop edi
  40a18f:	into   
  40a190:	daa    
  40a191:	push   es
  40a192:	push   ecx
  40a193:	stos   DWORD PTR es:[edi],eax
  40a194:	int    0x3e
  40a196:	imul   eax,esi,0x5529e628
  40a19c:	xor    dh,BYTE PTR [eax+0x17a59dd6]
  40a1a2:	fcomip st,st(4)
  40a1a4:	and    edx,DWORD PTR [ebx+0x5cbec4d2]
  40a1aa:	outs   dx,DWORD PTR ds:[esi]
  40a1ab:	ror    DWORD PTR [ebx],cl
  40a1ad:	div    DWORD PTR [ecx+0x61]
  40a1b0:	push   0xffffffcb
  40a1b2:	pop    ebx
  40a1b3:	mov    ebx,0x3550066d
  40a1b8:	rcl    BYTE PTR [ebx-0x76],0xdf
  40a1bc:	in     al,0x1e
  40a1be:	gs icebp 
  40a1c0:	ins    BYTE PTR es:[edi],dx
  40a1c1:	loope  0x40a234
  40a1c3:	inc    esp
  40a1c4:	pushf  
  40a1c5:	fs mov eax,0xa6c47f4e
  40a1cb:	and    esi,DWORD PTR [ecx+edx*2+0x2c2b9639]
  40a1d2:	loopne 0x40a185
  40a1d4:	out    dx,al
  40a1d5:	mov    esp,0xd8582c5b
  40a1da:	sbb    BYTE PTR [ecx],ah
  40a1dc:	pop    edx
  40a1dd:	dec    esp
  40a1de:	lds    edx,FWORD PTR [eax-0x3e]
  40a1e1:	pop    eax
  40a1e2:	add    DWORD PTR [eax-0x18],ebp
  40a1e5:	fisttp WORD PTR [esi]
  40a1e7:	lods   al,BYTE PTR ds:[esi]
  40a1e8:	add    al,0x48
  40a1ea:	pop    edx
  40a1eb:	add    edx,0x8d5a0d81
  40a1f1:	gs mov esp,0xb4c7a355
  40a1f7:	(bad)  
  40a1f8:	jmp    0xe594:0xc26eb97c
  40a1ff:	add    DWORD PTR [edx-0x39],esp
  40a202:	fwait
  40a203:	add    dl,bh
  40a205:	cdq    
  40a206:	mov    al,ds:0x123c5f0a
  40a20b:	add    ah,BYTE PTR [edi-0x9]
  40a20e:	add    esi,DWORD PTR [ecx+0x594d01bc]
  40a214:	push   0x5ebd522a
  40a219:	add    ah,dh
  40a21b:	mov    ebx,0x199e577f
  40a220:	ret    0x55d6
  40a223:	pop    esp
  40a224:	jno    0x40a29f
  40a226:	or     DWORD PTR cs:0x510f9b7c,edi
  40a22d:	js     0x40a29b
  40a22f:	push   ebp
  40a230:	mov    edi,0x453e2a9
  40a235:	repnz test DWORD PTR [eax+0x6254fab9],ebx
  40a23c:	pushf  
  40a23d:	retf   0x75be
  40a240:	in     eax,dx
  40a241:	adc    eax,0x500512fe
  40a246:	sbb    DWORD PTR [ebp+0x1cc6efc7],ebx
  40a24c:	(bad)  
  40a24d:	arpl   WORD PTR [ecx],cx
  40a24f:	aas    
  40a250:	jbe    0x40a1f3
  40a252:	enter  0x3f82,0x5c
  40a256:	stos   DWORD PTR es:[edi],eax
  40a257:	(bad)  
  40a259:	mov    esi,0x76f86fe6
  40a25e:	xchg   ebp,eax
  40a25f:	pop    eax
  40a260:	repz sub DWORD PTR [edx],ecx
  40a263:	push   es
  40a264:	jbe    0x40a2d8
  40a266:	xchg   esp,eax
  40a267:	arpl   bp,si
  40a269:	dec    ebx
  40a26a:	cwde   
  40a26b:	pop    ebx
  40a26c:	test   DWORD PTR [ecx],0x3c738403
  40a272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a274:	in     al,dx
  40a275:	sub    BYTE PTR [ebx+0x5218a3cf],cl
  40a27b:	mov    ah,0x6f
  40a27d:	(bad)  
  40a27e:	push   edx
  40a27f:	push   ebp
  40a280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a281:	je     0x40a289
  40a283:	fdiv   QWORD PTR [edi+0x4e4456b3]
  40a289:	cmp    al,ah
  40a28b:	out    dx,al
  40a28c:	ret    
  40a28d:	or     DWORD PTR [edi-0x6f20bf67],0xdc2532a3
  40a297:	fs retf 0x39dd
  40a29b:	mov    eax,ds:0xe05f7558
  40a2a0:	xchg   ecx,eax
  40a2a1:	fcmovb st,st(4)
  40a2a3:	(bad)  
  40a2a4:	nop
  40a2a5:	shl    BYTE PTR [ecx],0xfb
  40a2a8:	sar    bl,cl
  40a2aa:	fstp   QWORD PTR [eax]
  40a2ac:	sub    ecx,DWORD PTR [edi-0x71f4c012]
  40a2b2:	or     ch,BYTE PTR [ebx-0x57]
  40a2b5:	mul    DWORD PTR [edx+0x64e285d5]
  40a2bb:	lds    esp,FWORD PTR [edx+0x31208a81]
  40a2c1:	(bad)  
  40a2c2:	in     eax,dx
  40a2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c4:	lods   al,BYTE PTR ds:[esi]
  40a2c5:	adc    al,0xa9
  40a2c7:	pop    DWORD PTR [edx]
  40a2c9:	xlat   BYTE PTR ds:[ebx]
  40a2ca:	fild   DWORD PTR [eax+0x54f35a7f]
  40a2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2d1:	ins    DWORD PTR es:[edi],dx
  40a2d2:	cmp    DWORD PTR [ebx+edx*4+0x42],ebx
  40a2d6:	inc    edi
  40a2d7:	in     eax,dx
  40a2d8:	dec    eax
  40a2d9:	xchg   esi,eax
  40a2da:	or     ah,ch
  40a2dc:	mov    ds:0xe00fbc67,eax
  40a2e1:	in     eax,dx
  40a2e2:	iret   
  40a2e3:	dec    ecx
  40a2e4:	or     ebp,ecx
  40a2e6:	jp     0x40a31d
  40a2e8:	je     0x40a311
  40a2ea:	test   eax,0x9a28c2b4
  40a2ef:	mov    edi,0x19a82ad1
  40a2f4:	mov    eax,0xbfedec2a
  40a2f9:	psraw  mm5,QWORD PTR [edx+ecx*2+0x38]
  40a2fe:	mov    al,ds:0xd2141bdb
  40a303:	int    0x68
  40a305:	cld    
  40a306:	leave  
  40a307:	adc    eax,0x1abfa177
  40a30c:	mov    al,0xe
  40a30e:	mov    ?,ebp
  40a310:	inc    edi
  40a311:	jb     0x40a2cd
  40a313:	aas    
  40a314:	xchg   edi,eax
  40a315:	out    0x5a,al
  40a317:	call   0x1449:0x1a715bec
  40a31e:	adc    ecx,DWORD PTR [edi]
  40a320:	fiadd  WORD PTR [ebp+0x6b2d0a2c]
  40a326:	jnp    0x40a33d
  40a328:	out    dx,al
  40a329:	xchg   ebx,eax
  40a32a:	aas    
  40a32b:	jae    0x40a2b3
  40a32d:	neg    DWORD PTR [edx]
  40a32f:	add    eax,0x9352d9c6
  40a334:	dec    ecx
  40a335:	dec    eax
  40a336:	popf   
  40a337:	pop    edi
  40a338:	pop    es
  40a339:	sar    DWORD PTR [edx],0x66
  40a33c:	leave  
  40a33d:	cmc    
  40a33e:	xchg   ebx,eax
  40a33f:	lahf   
  40a340:	inc    ecx
  40a341:	dec    esp
  40a342:	adc    DWORD PTR [ebp+0x10],ebp
  40a345:	adc    ebx,ebp
  40a347:	mov    cl,0x79
  40a349:	jmp    0x40ada927
  40a34e:	mov    WORD PTR [ecx+0x48],gs
  40a351:	retf   0x53b
  40a354:	mov    cl,0xfa
  40a356:	ss jne 0x40a33d
  40a359:	push   ebx
  40a35a:	je     0x40a33c
  40a35c:	sbb    bl,ch
  40a35e:	and    eax,0xcdb6304b
  40a363:	(bad)  
  40a364:	cmp    edi,DWORD PTR ds:0xebaead0a
  40a36a:	mov    ds:0x5c4afe9a,al
  40a36f:	jo     0x40a3a7
  40a371:	jb     0x40a373
  40a373:	mul    ah
  40a375:	dec    ecx
  40a376:	leave  
  40a377:	out    0xf0,al
  40a379:	add    BYTE PTR [ebp+edi*2+0x274124b7],bh
  40a380:	mov    eax,0x3dd97bbd
  40a385:	xchg   edi,eax
  40a386:	in     al,0xad
  40a388:	inc    eax
  40a389:	xor    DWORD PTR [edx+0x2],edi
  40a38c:	lods   eax,DWORD PTR ds:[esi]
  40a38d:	add    BYTE PTR [ebx],al
  40a38f:	ret    
  40a390:	rol    eax,cl
  40a392:	adc    DWORD PTR [eax+0x5cce6258],ecx
  40a398:	shl    BYTE PTR [ecx+edx*4],cl
  40a39b:	in     al,0x51
  40a39d:	cmp    ah,BYTE PTR [edx]
  40a39f:	mov    ds:0x3bc19ae,eax
  40a3a4:	es or  ah,al
  40a3a7:	cmp    esi,edi
  40a3a9:	xor    al,0xce
  40a3ab:	inc    esi
  40a3ac:	xor    BYTE PTR ds:0x4b1074e7,bh
  40a3b2:	cmc    
  40a3b3:	sub    eax,0x5f979b8f
  40a3b8:	cmp    al,0xbe
  40a3ba:	jbe    0x40a364
  40a3bc:	sbb    al,0x43
  40a3be:	loopne 0x40a385
  40a3c0:	fcomp  QWORD PTR [ecx+0x76e64b28]
  40a3c6:	cmp    al,0x46
  40a3c8:	hlt    
  40a3c9:	mov    esi,0x45fb9449
  40a3ce:	cdq    
  40a3cf:	and    al,0xde
  40a3d1:	add    DWORD PTR [ecx+0x25],ecx
  40a3d4:	xchg   esp,eax
  40a3d5:	out    dx,al
  40a3d6:	dec    edi
  40a3d7:	ins    DWORD PTR es:[edi],dx
  40a3d8:	jnp    0x40a3c6
  40a3da:	cmc    
  40a3db:	pop    esp
  40a3dc:	mov    dh,0x3
  40a3de:	pop    ebp
  40a3df:	stos   BYTE PTR es:[edi],al
  40a3e0:	dec    edi
  40a3e1:	(bad)  
  40a3e2:	daa    
  40a3e3:	sbb    DWORD PTR [ecx-0x41],0x62c1fa40
  40a3ea:	mov    cl,0xcb
  40a3ec:	mul    dh
  40a3ee:	ficom  DWORD PTR [ebx+0xd]
  40a3f1:	and    al,0xbf
  40a3f3:	and    eax,edi
  40a3f5:	cmp    BYTE PTR [esi-0x40a5bb9],bh
  40a3fb:	test   BYTE PTR [ecx],ch
  40a3fd:	imul   BYTE PTR [ebp-0x4b]
  40a400:	lahf   
  40a401:	sub    DWORD PTR [ecx],ebp
  40a403:	lods   al,BYTE PTR ds:[esi]
  40a404:	sub    bh,BYTE PTR [edx]
  40a406:	xor    edi,ecx
  40a408:	jne    0x40a3bb
  40a40a:	aad    0x19
  40a40c:	jmp    FWORD PTR [eax]
  40a40e:	adc    eax,0x12aa8fc
  40a413:	mov    edi,ebp
  40a415:	icebp  
  40a416:	push   es
  40a417:	inc    ebx
  40a418:	jle    0x40a495
  40a41a:	xor    WORD PTR fs:[ebp+0x3a],bp
  40a41f:	js     0x40a441
  40a421:	add    eax,0xb90895bd
  40a426:	push   ecx
  40a427:	daa    
  40a428:	push   edi
  40a429:	shl    BYTE PTR [ebp+0x60],0xd8
  40a42d:	jne    0x40a464
  40a42f:	cmp    BYTE PTR [ebp+0x32f4ab36],bl
  40a435:	mov    bh,0xbf
  40a437:	outs   dx,DWORD PTR ds:[esi]
  40a438:	je     0x40a407
  40a43a:	mov    edx,0x731c98c4
  40a43f:	sahf   
  40a440:	cmp    ch,BYTE PTR [eax+0x2ff29404]
  40a446:	push   ebx
  40a447:	push   ebp
  40a448:	jne    0x40a3cf
  40a44a:	mov    al,0x25
  40a44c:	out    dx,al
  40a44d:	mov    eax,0xa1eb91a
  40a452:	dec    edi
  40a453:	pop    ecx
  40a454:	sbb    ecx,DWORD PTR [eax-0x5a]
  40a457:	mov    ah,0x1e
  40a459:	shl    DWORD PTR [ecx-0x28821245],1
  40a45f:	xchg   edi,eax
  40a460:	and    BYTE PTR [eax+0x46188e9d],0x98
  40a467:	retf   0xdf50
  40a46a:	dec    edi
  40a46b:	xor    ch,BYTE PTR [edi]
  40a46d:	lea    eax,[esi-0x2da014c2]
  40a473:	sbb    eax,0x84ec85ce
  40a478:	xchg   esp,eax
  40a479:	mov    DWORD PTR [esi+0x9],esi
  40a47c:	inc    ebx
  40a47d:	cmp    al,0xe8
  40a47f:	pop    ebp
  40a480:	pop    ebp
  40a481:	xor    eax,ecx
  40a483:	call   FWORD PTR [ecx+ecx*2]
  40a486:	leave  
  40a487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a488:	cmp    BYTE PTR [esi],bl
  40a48a:	jns    0x40a450
  40a48c:	jns    0x40a42b
  40a48e:	ins    DWORD PTR es:[edi],dx
  40a48f:	dec    esi
  40a490:	ja     0x40a448
  40a492:	or     eax,0x2af92e22
  40a497:	ret    
  40a498:	shr    BYTE PTR [ebp-0x13],1
  40a49b:	aas    
  40a49c:	je     0x40a4a9
  40a49e:	pushf  
  40a49f:	adc    al,0xdc
  40a4a1:	and    esi,ebp
  40a4a3:	ret    
  40a4a4:	test   BYTE PTR [eax+eiz*4-0x3d5d0189],0x91
  40a4ac:	mov    BYTE PTR [edi-0x72107c4c],bl
  40a4b2:	fisttp WORD PTR [ebx+esi*1-0x4e679992]
  40a4b9:	fidiv  DWORD PTR [ecx+0x400989ae]
  40a4bf:	pop    eax
  40a4c0:	xor    BYTE PTR [edi+0x49],ch
  40a4c3:	and    BYTE PTR [edi],dh
  40a4c5:	lods   eax,DWORD PTR ds:[esi]
  40a4c6:	jle    0x40a4f4
  40a4c8:	lods   al,BYTE PTR ds:[esi]
  40a4c9:	sbb    eax,DWORD PTR [ebx+0x79bbfa78]
  40a4cf:	jp     0x40a4c9
  40a4d1:	xchg   eax,edx
  40a4d3:	(bad)  
  40a4d4:	dec    ecx
  40a4d5:	out    0xbd,eax
  40a4d7:	mov    dh,0xb4
  40a4d9:	in     al,0x47
  40a4db:	cmp    DWORD PTR [eax+eax*1],edi
  40a4de:	adc    ch,BYTE PTR [esi-0x9]
  40a4e1:	stc    
  40a4e2:	xor    DWORD PTR [ecx+ebx*8+0x627be3e6],ecx
  40a4e9:	pop    ebx
  40a4ea:	and    DWORD PTR [edx],eax
  40a4ec:	arpl   WORD PTR [eax+0x38feed5],si
  40a4f2:	repz pop ss
  40a4f4:	push   0x9c68b34c
  40a4f9:	push   ss
  40a4fa:	sbb    al,0x24
  40a4fc:	in     al,dx
  40a4fd:	pop    ecx
  40a4fe:	fbld   TBYTE PTR [edx-0x7ad98958]
  40a504:	pushf  
  40a505:	push   edi
  40a506:	cbw    
  40a508:	xchg   ebp,eax
  40a509:	xchg   ebp,eax
  40a50a:	mov    WORD PTR [ecx+0x2969b9a9],?
  40a510:	inc    ebx
  40a511:	dec    eax
  40a512:	lea    esp,[edx+0x1b7f65eb]
  40a518:	xchg   BYTE PTR [eax-0x46f9695d],cl
  40a51e:	lock inc ecx
  40a520:	xor    ah,BYTE PTR [esp+esi*2]
  40a523:	je     0x40a50c
  40a525:	retf   0x1920
  40a528:	or     ah,bl
  40a52a:	mov    edx,edx
  40a52c:	xor    DWORD PTR [ebx+0x33],edi
  40a52f:	push   cs
  40a530:	sub    bh,BYTE PTR [esi]
  40a532:	jmp    0xb8767e0a
  40a537:	mov    WORD PTR [ebp+0x3772f4eb],cs
  40a53d:	(bad)  
  40a53e:	sbb    eax,0x996bb42f
  40a543:	mov    dl,0xd3
  40a545:	add    DWORD PTR ds:0x8fa974eb,0xffffff86
  40a54c:	lods   eax,DWORD PTR ds:[esi]
  40a54d:	scas   al,BYTE PTR es:[edi]
  40a54e:	or     DWORD PTR [ebp-0x7a247b8a],0x45
  40a555:	arpl   WORD PTR [ebp+0x1a33ea3],bp
  40a55b:	pop    ebp
  40a55c:	jle    0x40a5a3
  40a55e:	lods   eax,DWORD PTR ds:[esi]
  40a55f:	shr    BYTE PTR [ebx+0x56],1
  40a562:	pop    ss
  40a563:	mov    ds:0xe474de5d,al
  40a568:	imul   ecx,DWORD PTR [edx-0x11],0xffffffe8
  40a56c:	sbb    al,0xff
  40a56e:	shl    ecx,1
  40a570:	jo     0x5e900ea5
  40a576:	dec    ecx
  40a577:	(bad)  
  40a579:	popf   
  40a57a:	lods   eax,DWORD PTR ds:[esi]
  40a57b:	add    al,0x39
  40a57d:	mov    ?,WORD PTR [esi]
  40a57f:	rcl    DWORD PTR [ebx-0x63],0x21
  40a583:	das    
  40a584:	jo     0x40a578
  40a586:	iret   
  40a587:	and    DWORD PTR [ecx-0x3b],esi
  40a58a:	mov    eax,ebx
  40a58c:	dec    ebp
  40a58d:	push   edx
  40a58e:	js     0x40a5d8
  40a590:	xor    al,0x41
  40a592:	fwait
  40a593:	xchg   ebx,eax
  40a594:	dec    eax
  40a595:	sub    DWORD PTR [ecx-0x6b],0x6b
  40a599:	aaa    
  40a59a:	jmp    0x8ecb:0x86fa2038
  40a5a1:	fwait
  40a5a2:	test   eax,0x9476dc91
  40a5a7:	int    0x12
  40a5a9:	or     ebp,eax
  40a5ab:	ins    BYTE PTR es:[edi],dx
  40a5ac:	xor    al,0xcd
  40a5ae:	pop    es
  40a5af:	mov    esp,0x21ece077
  40a5b4:	ret    0x601f
  40a5b7:	imul   edi,eax,0x3ee12520
  40a5bd:	add    BYTE PTR [ebx],ah
  40a5bf:	mov    edx,0x87343a09
  40a5c4:	inc    edx
  40a5c5:	xor    esi,DWORD PTR [ebx]
  40a5c7:	xchg   edx,eax
  40a5c8:	jmp    FWORD PTR [eax+0x2c]
  40a5cb:	sub    al,0xd7
  40a5cd:	sub    BYTE PTR [ebx+0x532e24c],al
  40a5d3:	or     DWORD PTR [edx-0x2b9abc54],esp
  40a5d9:	iret   
  40a5da:	outs   dx,DWORD PTR ds:[esi]
  40a5db:	jne    0x40a600
  40a5dd:	sbb    eax,0x93c9d5b8
  40a5e2:	mov    esp,0x12421bfe
  40a5e7:	std    
  40a5e8:	test   DWORD PTR [eax-0x18],esp
  40a5eb:	lahf   
  40a5ec:	pop    esi
  40a5ed:	mov    esp,0xfac57794
  40a5f2:	cwde   
  40a5f3:	inc    edi
  40a5f5:	rol    DWORD PTR [ecx+0x2b],cl
  40a5f8:	pop    ss
  40a5f9:	jae    0x40a639
  40a5fb:	xchg   edx,eax
  40a5fc:	test   BYTE PTR [esi+ecx*1-0x16],0x68
  40a601:	int3   
  40a602:	pop    edx
  40a603:	into   
  40a604:	push   0xbfe0e1ca
  40a609:	into   
  40a60a:	aaa    
  40a60b:	(bad)  
  40a60c:	je     0x40a5a2
  40a60e:	cdq    
  40a60f:	push   edi
  40a610:	call   0x942ef7cf
  40a615:	fild   DWORD PTR [ebx]
  40a617:	push   ds
  40a618:	pop    ds
  40a619:	shl    eax,cl
  40a61b:	jns    0x40a696
  40a61d:	ret    0x825f
  40a620:	aaa    
  40a621:	mov    ebp,0x14ba8b7d
  40a626:	call   0xa3c3eb68
  40a62b:	jle    0x40a69f
  40a62d:	cmp    eax,0x9439f133
  40a632:	ror    DWORD PTR [ebx-0x3d],1
  40a635:	(bad)  
  40a636:	aam    0xf8
  40a638:	pop    es
  40a639:	or     DWORD PTR [ecx],esp
  40a63b:	mov    es,WORD PTR [ebp+0x77034797]
  40a641:	in     eax,dx
  40a642:	sbb    BYTE PTR [edx+0x7352244c],bl
  40a648:	scas   eax,DWORD PTR es:[edi]
  40a649:	dec    eax
  40a64a:	mov    dh,0xfc
  40a64c:	and    esi,DWORD PTR [edi+0x9]
  40a64f:	pop    esi
  40a650:	mov    ebx,0x62862150
  40a655:	ds leave 
  40a657:	pop    edi
  40a658:	xchg   DWORD PTR [eax],ebp
  40a65a:	push   esp
  40a65b:	fisubr DWORD PTR [ebp+eiz*8-0x3e]
  40a65f:	out    0xe1,eax
  40a661:	cld    
  40a662:	pop    esi
  40a663:	and    esi,DWORD PTR [ebp-0x7c]
  40a666:	push   0x11dd6757
  40a66b:	xchg   esp,eax
  40a66c:	cld    
  40a66d:	jp     0x40a6da
  40a66f:	clc    
  40a670:	(bad)  
  40a671:	arpl   WORD PTR [ebp-0x1ec1376d],bx
  40a677:	xor    DWORD PTR [esp+edx*8+0x414cd092],0x19cff7dc
  40a682:	or     eax,0x171c2656
  40a687:	and    al,0xdc
  40a689:	arpl   WORD PTR [ecx+edx*2+0x57cdf2aa],sp
  40a690:	sub    ebx,edi
  40a692:	scas   al,BYTE PTR es:[edi]
  40a693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a694:	nop
  40a695:	jle    0x40a6e6
  40a697:	ds pop edx
  40a699:	mov    ebx,0xacff979e
  40a69e:	lahf   
  40a69f:	hlt    
  40a6a0:	(bad)  
  40a6a1:	jmp    0x58344b57
  40a6a6:	push   edi
  40a6a7:	push   ebx
  40a6a8:	fstp   QWORD PTR [edx]
  40a6aa:	inc    ebp
  40a6ab:	xchg   DWORD PTR [esi],edi
  40a6ad:	shr    BYTE PTR [esi-0x1ec9ecd],1
  40a6b3:	gs pop es
  40a6b5:	mov    cl,0xcd
  40a6b7:	cmp    esp,DWORD PTR [ecx+0x5c197878]
  40a6bd:	cmp    al,0x13
  40a6bf:	repnz (bad) 
  40a6c1:	in     al,dx
  40a6c2:	or     DWORD PTR [eax+0xf],esi
  40a6c5:	or     al,BYTE PTR [ebp-0x62]
  40a6c8:	sahf   
  40a6c9:	test   eax,0x7c89915c
  40a6ce:	add    edi,ebp
  40a6d0:	jecxz  0x40a74f
  40a6d2:	pop    ebx
  40a6d3:	arpl   WORD PTR [edi-0x49],bp
  40a6d6:	cdq    
  40a6d7:	pop    eax
  40a6d8:	sub    BYTE PTR [esi],0x6
  40a6db:	jne    0x40a6c7
  40a6dd:	adc    bl,BYTE PTR [ecx+ebx*4]
  40a6e0:	xchg   ebp,eax
  40a6e1:	lods   eax,DWORD PTR ds:[esi]
  40a6e2:	int    0x77
  40a6e4:	lds    edx,FWORD PTR [ecx+0xc]
  40a6e7:	(bad)  [eax+edi*4]
  40a6ea:	inc    ebp
  40a6eb:	sub    DWORD PTR [ebx-0x54],esi
  40a6ee:	pop    ds
  40a6ef:	pop    ss
  40a6f0:	xchg   ebp,eax
  40a6f1:	clc    
  40a6f2:	mov    BYTE PTR [ebx+edx*1-0x7c],bl
  40a6f6:	gs (bad) 
  40a6f8:	adc    ebx,DWORD PTR [edi+0x4d]
  40a6fb:	cmp    eax,DWORD PTR [ebx]
  40a6fd:	add    al,0x4d
  40a6ff:	jnp    0x40a700
  40a701:	ffree  st(4)
  40a703:	enter  0x783f,0xb8
  40a707:	data16 scas al,BYTE PTR es:[edi]
  40a709:	stos   DWORD PTR es:[edi],eax
  40a70a:	fs iret 
  40a70c:	fsubr  st(4),st
  40a70e:	je     0x40a6ef
  40a710:	jmp    DWORD PTR [eax+0x9]
  40a713:	arpl   WORD PTR [ebx+0x425d0036],cx
  40a719:	in     eax,0xc4
  40a71b:	and    eax,0xa5c212e3
  40a720:	sub    dl,BYTE PTR [esi+0x5b207f0]
  40a726:	fmul   QWORD PTR [ebx+esi*8]
  40a729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72a:	cs mov ah,0x60
  40a72d:	ds inc esi
  40a72f:	or     eax,0x6c05c89
  40a734:	leave  
  40a735:	mov    bh,0xcc
  40a737:	dec    ebx
  40a738:	inc    edi
  40a739:	dec    esi
  40a73a:	inc    esp
  40a73b:	sub    eax,0xdefdd76a
  40a740:	adc    ch,BYTE PTR [edx]
  40a742:	fstp   TBYTE PTR [ebx+0x7b]
  40a745:	inc    eax
  40a746:	dec    esi
  40a747:	xchg   esp,eax
  40a748:	xor    DWORD PTR [edi],esi
  40a74a:	and    bh,BYTE PTR [edi+0x3b]
  40a74d:	cdq    
  40a74e:	jb     0x40a725
  40a750:	dec    esp
  40a751:	push   eax
  40a752:	push   eax
  40a753:	jo     0x40a77f
  40a755:	jb     0x40a7c4
  40a757:	cmp    edi,DWORD PTR [ebp+0x27a646b]
  40a75d:	or     DWORD PTR [ebx],esi
  40a75f:	into   
  40a760:	mov    esi,0x873388b4
  40a765:	push   ebp
  40a766:	cdq    
  40a767:	pusha  
  40a768:	mov    esi,0x8198c123
  40a76d:	mov    al,0xed
  40a76f:	ret    
  40a770:	push   eax
  40a771:	(bad)  
  40a773:	sbb    esp,DWORD PTR [ecx-0x39]
  40a776:	push   edi
  40a777:	fxch   st(5)
  40a779:	aam    0xb1
  40a77b:	and    al,0xf2
  40a77d:	ins    BYTE PTR es:[edi],dx
  40a77e:	call   0xcfc249e2
  40a783:	xchg   ecx,eax
  40a784:	sbb    al,0x81
  40a786:	scas   eax,DWORD PTR es:[edi]
  40a787:	into   
  40a788:	hlt    
  40a789:	adc    eax,0xa3e04ef4
  40a78e:	out    dx,eax
  40a78f:	out    dx,al
  40a790:	adc    ch,BYTE PTR [edx]
  40a792:	adc    BYTE PTR [ebx+0x2b],cl
  40a795:	js     0x40a77c
  40a797:	jecxz  0x40a72f
  40a799:	call   FWORD PTR [eax]
  40a79b:	pop    edx
  40a79c:	xchg   edx,eax
  40a79d:	lods   eax,DWORD PTR ds:[esi]
  40a79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a79f:	mov    al,0x11
  40a7a1:	jl     0x40a73a
  40a7a3:	push   0x31
  40a7a5:	mov    ch,0x4
  40a7a7:	inc    esp
  40a7a8:	and    bl,bl
  40a7aa:	mov    edi,0x93222373
  40a7af:	dec    esi
  40a7b0:	xchg   edi,ebp
  40a7b2:	or     ecx,DWORD PTR [ebp-0x5126888]
  40a7b8:	pop    ebp
  40a7b9:	sbb    eax,0xdba2d852
  40a7be:	repnz shl BYTE PTR [ecx],1
  40a7c1:	(bad)  
  40a7c2:	mov    al,BYTE PTR [eax]
  40a7c4:	scas   al,BYTE PTR es:[edi]
  40a7c5:	add    bh,BYTE PTR ds:0x44d9464e
  40a7cb:	lods   al,BYTE PTR ds:[esi]
  40a7cc:	in     al,dx
  40a7cd:	mov    esp,0x65490937
  40a7d2:	xchg   esp,eax
  40a7d3:	adc    al,0x16
  40a7d5:	int3   
  40a7d6:	sub    eax,0x9108e358
  40a7db:	data16 jg 0x40a7ee
  40a7de:	add    eax,0xd14c242d
  40a7e3:	xchg   ebp,eax
  40a7e4:	push   cs
  40a7e5:	stos   DWORD PTR es:[edi],eax
  40a7e6:	lea    ebx,[ebp-0x4]
  40a7e9:	cmc    
  40a7ea:	cmp    al,0xcb
  40a7ec:	test   eax,0xf2c64133
  40a7f1:	mov    ebx,0x3d2aa90c
  40a7f6:	mov    dh,BYTE PTR [esi+ebp*1-0x40]
  40a7fa:	push   0xffffffb8
  40a7fc:	inc    esi
  40a7fd:	and    esp,0xffffffef
  40a800:	xor    DWORD PTR [ebp+0x51],eax
  40a803:	das    
  40a804:	sbb    ah,bl
  40a806:	dec    eax
  40a807:	jae    0x40a7c0
  40a809:	or     bh,BYTE PTR [esi-0x4d]
  40a80c:	(bad)  
  40a80d:	aam    0xe8
  40a80f:	aad    0xfe
  40a811:	mov    edx,edx
  40a813:	pop    es
  40a814:	and    BYTE PTR [edx-0x48964f9c],dl
  40a81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a81b:	scas   eax,DWORD PTR es:[edi]
  40a81c:	hlt    
  40a81d:	xor    eax,0x6a144dce
  40a822:	in     eax,0x94
  40a824:	pop    ecx
  40a825:	out    0x84,eax
  40a827:	inc    eax
  40a829:	pop    ds
  40a82a:	fwait
  40a82b:	pusha  
  40a82c:	sbb    eax,0x5dc0d7fa
  40a831:	aaa    
  40a832:	xchg   BYTE PTR [ebp+0x7a],cl
  40a835:	cmp    ebx,ebx
  40a837:	icebp  
  40a838:	jne    0x40a830
  40a83a:	pusha  
  40a83b:	sahf   
  40a83c:	mov    BYTE PTR [ebp+0x4507add8],bh
  40a842:	adc    al,0x22
  40a844:	in     al,0xd5
  40a846:	aaa    
  40a847:	mov    eax,0xc36fd358
  40a84c:	call   0xe5d5:0x1f4cef84
  40a853:	xor    BYTE PTR [edx],bl
  40a855:	cmp    esp,ebx
  40a857:	xchg   edx,eax
  40a858:	ins    DWORD PTR es:[edi],dx
  40a859:	xor    bh,ah
  40a85b:	push   0x49
  40a85d:	ror    DWORD PTR [ebx],0xea
  40a860:	cmc    
  40a861:	fisubr DWORD PTR [ebp+0x54]
  40a864:	cmp    bh,BYTE PTR [ebp+0x7d]
  40a867:	push   ecx
  40a868:	(bad)  
  40a869:	fisubr DWORD PTR [esi]
  40a86b:	sub    dh,BYTE PTR [ebx-0x65b98e04]
  40a871:	cmp    dl,dh
  40a873:	rol    DWORD PTR [eax-0x68756fbf],1
  40a879:	mov    edi,0xab5e28d3
  40a87e:	js     0x40a85c
  40a880:	push   cs
  40a881:	inc    edi
  40a882:	stos   BYTE PTR es:[edi],al
  40a883:	jge    0x40a8de
  40a885:	add    eax,0x1cb7502d
  40a88a:	in     eax,0xad
  40a88c:	mov    ecx,0x3a665f89
  40a891:	ins    BYTE PTR es:[edi],dx
  40a892:	rcr    DWORD PTR [esp+edi*8+0x12dfd12b],cl
  40a899:	jnp    0x40a821
  40a89b:	std    
  40a89c:	cld    
  40a89d:	jge    0x40a85e
  40a89f:	cmp    BYTE PTR [ecx-0x103bfdde],al
  40a8a5:	call   0xb8c6a031
  40a8aa:	xor    al,ah
  40a8ac:	mov    ah,cl
  40a8ae:	out    0xa9,eax
  40a8b0:	dec    BYTE PTR [eax-0x37]
  40a8b3:	in     al,0x23
  40a8b5:	dec    edx
  40a8b6:	ins    BYTE PTR es:[edi],dx
  40a8b7:	fistp  QWORD PTR [ebx-0x7d]
  40a8ba:	rcl    DWORD PTR [esi+0x67838199],1
  40a8c0:	xchg   esi,eax
  40a8c1:	inc    edx
  40a8c2:	jl     0x40a91f
  40a8c4:	shl    cl,0x1b
  40a8c7:	lods   eax,DWORD PTR ds:[esi]
  40a8c8:	mov    ds:0x2a0f4e1b,al
  40a8cd:	inc    esi
  40a8ce:	jnp    0x40a941
  40a8d0:	jae    0x40a87d
  40a8d2:	sub    edi,DWORD PTR [esi-0x3abb3fff]
  40a8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d9:	sbb    DWORD PTR [esi],edi
  40a8db:	adc    esp,esi
  40a8dd:	add    BYTE PTR [edi+0x4b],0xb7
  40a8e1:	cmp    al,0xcb
  40a8e3:	sbb    dh,BYTE PTR [esi]
  40a8e5:	xor    eax,0x127cb7ab
  40a8ea:	sbb    dh,ah
  40a8ec:	dec    eax
  40a8ed:	leave  
  40a8ee:	(bad)  
  40a8ef:	ret    0xd41f
  40a8f2:	mov    eax,edx
  40a8f4:	enter  0x9403,0x4e
  40a8f8:	or     BYTE PTR [ebx],bl
  40a8fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8fb:	fwait
  40a8fc:	aam    0x28
  40a8fe:	cmp    eax,DWORD PTR [ebp+0x443b02fa]
  40a904:	clc    
  40a905:	adc    edi,DWORD PTR [edi]
  40a907:	lock loop 0x40a891
  40a90a:	scas   al,BYTE PTR es:[edi]
  40a90b:	jl     0x40a8ef
  40a90d:	xlat   BYTE PTR ds:[ebx]
  40a90e:	shl    ecx,cl
  40a910:	outs   dx,DWORD PTR ds:[esi]
  40a911:	add    dh,0x36
  40a914:	sub    eax,0xd498bb51
  40a919:	loope  0x40a933
  40a91b:	into   
  40a91c:	mov    al,0x5
  40a91e:	ror    DWORD PTR [ebx+ecx*1-0x693a0009],0x5c
  40a926:	ja     0x40a90e
  40a928:	sub    al,0xdf
  40a92a:	adc    BYTE PTR [esi-0x6b],0xa7
  40a92e:	in     eax,dx
  40a92f:	mov    al,ds:0xd90cf8d4
  40a934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a935:	pop    edx
  40a936:	(bad)  
  40a938:	dec    edi
  40a939:	inc    esi
  40a93a:	and    DWORD PTR [edi-0x702c87ea],esi
  40a940:	inc    eax
  40a941:	pushf  
  40a942:	mov    ah,0xae
  40a944:	nop
  40a945:	(bad)  
  40a946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a947:	xchg   esi,eax
  40a948:	push   di
  40a94a:	or     DWORD PTR ds:0x8325cead,ebx
  40a950:	imul   edx,ecx,0xe59bdba0
  40a956:	outs   dx,BYTE PTR ds:[esi]
  40a957:	jle    0x40a973
  40a959:	out    dx,eax
  40a95a:	dec    ebp
  40a95b:	mov    bh,0xef
  40a95d:	jmp    0x8d6b7a03
  40a962:	fsub   QWORD PTR [ebp+0x66]
  40a965:	les    esi,FWORD PTR [ecx]
  40a967:	add    DWORD PTR [ebp+0x21ad136a],eax
  40a96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a96e:	rcl    ebp,1
  40a970:	sub    eax,0xeb84f791
  40a975:	push   esp
  40a976:	sar    DWORD PTR [edx-0x53e498b3],0x8f
  40a97d:	(bad)  
  40a97e:	xchg   edi,eax
  40a97f:	or     BYTE PTR [eax+0x7e],ah
  40a982:	pop    esp
  40a983:	jnp    0x40a9c6
  40a985:	das    
  40a986:	loope  0x40a9c1
  40a988:	dec    esi
  40a989:	adc    eax,0x71a290eb
  40a98e:	dec    edx
  40a98f:	test   al,0xbb
  40a991:	outs   dx,DWORD PTR ds:[esi]
  40a992:	pop    ebp
  40a993:	mov    ecx,DWORD PTR [edi-0x63c66ca5]
  40a999:	pusha  
  40a99a:	push   edx
  40a99b:	cli    
  40a99c:	je     0x40a969
  40a99e:	lds    ebp,FWORD PTR [edi]
  40a9a0:	mov    ah,0x9d
  40a9a2:	repz lea ecx,[esi-0x5e08dc46]
  40a9a9:	fdiv   QWORD PTR [edi]
  40a9ab:	pushf  
  40a9ac:	rcr    DWORD PTR [edx-0x67],cl
  40a9af:	jno    0x40aa00
  40a9b1:	ja     0x40aa07
  40a9b3:	jp     0x40a9d4
  40a9b5:	bound  esi,QWORD PTR [ecx]
  40a9b7:	cli    
  40a9b8:	or     ecx,DWORD PTR [edi]
  40a9ba:	clc    
  40a9bb:	sbb    al,BYTE PTR [esi+0x2caea124]
  40a9c1:	inc    ecx
  40a9c2:	inc    ebx
  40a9c3:	cmp    esp,DWORD PTR [ecx-0x2c4ec550]
  40a9c9:	and    ebp,DWORD PTR [ecx+eax*8-0x26509938]
  40a9d0:	sbb    al,0x62
  40a9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d3:	iret   
  40a9d4:	stos   DWORD PTR es:[edi],eax
  40a9d5:	push   es
  40a9d6:	inc    ecx
  40a9d7:	fstp   TBYTE PTR [esi-0x35]
  40a9da:	fs (bad) 
  40a9dc:	jg     0x40aa17
  40a9de:	data16 mov dl,0x8e
  40a9e1:	xor    DWORD PTR [ebx+0x34],esp
  40a9e4:	aam    0x4
  40a9e6:	mov    ds:0xc0b6ae34,eax
  40a9eb:	je     0x40aa1f
  40a9ed:	and    eax,0x4b0fb473
  40a9f2:	add    dl,al
  40a9f4:	les    ecx,FWORD PTR [ecx]
  40a9f6:	xor    dh,ah
  40a9f8:	in     al,dx
  40a9f9:	lds    esp,FWORD PTR [eax+0x57]
  40a9fc:	test   BYTE PTR [edx+0x24],al
  40a9ff:	mov    ch,0x51
  40aa01:	mov    WORD PTR ss:[eax+esi*8],ss
  40aa05:	daa    
  40aa06:	cmp    eax,0x2f2cc4
  40aa0b:	mov    cs:0x15ca3785,al
  40aa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa12:	or     ch,BYTE PTR [edi+0x15c35091]
  40aa18:	out    0x7d,al
  40aa1a:	xchg   DWORD PTR [eax+0x75],ebx
  40aa1d:	stos   DWORD PTR es:[edi],eax
  40aa1e:	jge    0x40aa1b
  40aa20:	popa   
  40aa21:	rol    DWORD PTR [edx+0x1f],cl
  40aa24:	call   0x752ae431
  40aa29:	sbb    eax,DWORD PTR [edi+0x27]
  40aa2c:	adc    eax,0x7851d550
  40aa31:	sub    eax,0x34e438d9
  40aa36:	pop    ds
  40aa37:	lea    ebp,[esi-0x5c89c742]
  40aa3d:	fisubr DWORD PTR [eax]
  40aa3f:	gs dec eax
  40aa41:	pop    ebp
  40aa42:	sar    DWORD PTR [ecx-0x5f],cl
  40aa45:	test   al,0xa2
  40aa47:	(bad)  
  40aa48:	nop
  40aa49:	or     eax,0x579052e9
  40aa4e:	jbe    0x40aa91
  40aa50:	fsub   DWORD PTR [esi]
  40aa52:	jmp    0x40aa45
  40aa54:	mov    DWORD PTR [edx],esp
  40aa56:	shl    DWORD PTR [ebx-0x2d95eb3f],cl
  40aa5c:	aam    0x9a
  40aa5e:	inc    edx
  40aa5f:	push   ss
  40aa60:	sti    
  40aa61:	arpl   WORD PTR [esi-0x2d68cbc6],cx
  40aa67:	pop    esp
  40aa68:	das    
  40aa69:	mov    al,ds:0x9803a73a
  40aa6e:	push   0xcd2e2bb1
  40aa73:	lahf   
  40aa74:	adc    edi,DWORD PTR [ebx]
  40aa76:	imul   ebx,DWORD PTR [edi-0x39],0x7749015b
  40aa7d:	cmp    cl,cl
  40aa7f:	(bad)  
  40aa80:	mov    eax,0x18f2a174
  40aa85:	sbb    ebp,esi
  40aa87:	out    0x34,al
  40aa89:	jge    0x40aa4a
  40aa8b:	out    dx,eax
  40aa8c:	sub    BYTE PTR [edi+ebp*2+0x69],bl
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xa62ee8bc
  40aacc:	and    BYTE PTR [esp+esi*8+0x62],dl
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0x67]
  40aad6:	mov    bl,0x24
  40aad8:	and    esp,DWORD PTR [edx-0x6f97497a]
  40aade:	jg     0x40ab28
  40aae0:	bound  edx,QWORD PTR [edi]
  40aae2:	je     0x40ab3e
  40aae4:	add    esi,ebx
  40aae6:	aas    
  40aae7:	ja     0x40ab47
  40aae9:	outs   dx,DWORD PTR ds:[esi]
  40aaea:	ss push ss
  40aaec:	cmc    
  40aaed:	fmul   st,st(4)
  40aaef:	mov    bl,0xcb
  40aaf1:	addr16 cld 
  40aaf3:	cmp    BYTE PTR [edi-0x15168e54],0x8a
  40aafa:	test   al,0xdc
  40aafc:	push   eax
  40aafd:	push   cs
  40aafe:	jge    0x40aac2
  40ab00:	add    cl,bl
  40ab02:	repz mov bh,0xc0
  40ab05:	cmp    cl,bh
  40ab07:	int3   
  40ab08:	ret    
  40ab09:	xlat   BYTE PTR ds:[ebx]
  40ab0a:	cmp    eax,0x5ea9f321
  40ab0f:	sbb    DWORD PTR [ecx],0xa29f516b
  40ab15:	call   0x5e9f:0xc1eae954
  40ab1c:	ins    BYTE PTR es:[edi],dx
  40ab1d:	fsub   DWORD PTR [ecx+0x71]
  40ab20:	call   0xa5a7:0x116bb267
  40ab27:	add    DWORD PTR [esi-0x6bb3eb6b],esi
  40ab2d:	add    edi,DWORD PTR [edx-0x1408080b]
  40ab33:	popa   
  40ab34:	inc    ebp
  40ab35:	ins    DWORD PTR es:[edi],dx
  40ab36:	retf   0xb095
  40ab39:	mov    dl,0x1f
  40ab3b:	pop    esi
  40ab3c:	rcr    DWORD PTR [edx],cl
  40ab3e:	shl    BYTE PTR [ebx-0x38401dd2],1
  40ab44:	shl    BYTE PTR [edi+0x69fa3b7a],1
  40ab4a:	int3   
  40ab4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4c:	push   ss
  40ab4d:	xchg   ecx,eax
  40ab4e:	enter  0xf05e,0xcf
  40ab52:	push   esi
  40ab53:	and    eax,0x20e3e9e3
  40ab58:	shl    DWORD PTR [eax-0xa],cl
  40ab5b:	jle    0x40ab77
  40ab5d:	hlt    
  40ab5e:	mov    cl,0x96
  40ab60:	fnstenv [esi-0x35]
  40ab63:	icebp  
  40ab64:	push   ss
  40ab65:	jg     0x40ab3d
  40ab67:	mov    ah,0x17
  40ab69:	outs   dx,BYTE PTR ds:[esi]
  40ab6a:	sbb    BYTE PTR [bx],dl
  40ab6d:	into   
  40ab6e:	dec    eax
  40ab6f:	add    ah,cl
  40ab71:	and    edx,ebx
  40ab73:	add    cl,BYTE PTR [ebx-0x4c]
  40ab76:	jp     0x40ab45
  40ab78:	xchg   edi,eax
  40ab79:	pop    esp
  40ab7a:	imul   ecx,DWORD PTR ds:[edi],0xe41c41b1
  40ab81:	(bad)  
  40ab82:	and    al,0xa3
  40ab84:	repnz mov esi,0x33c65fea
  40ab8a:	scas   eax,DWORD PTR es:[edi]
  40ab8b:	js     0x40ab7d
  40ab8d:	jne    0x40abf4
  40ab8f:	lea    ecx,[edx]
  40ab91:	fmul   QWORD PTR [ebx+0x2e]
  40ab94:	cld    
  40ab95:	ror    DWORD PTR [eax-0x1a],1
  40ab98:	push   0x8050604f
  40ab9d:	and    dl,BYTE PTR [ecx]
  40ab9f:	jmp    esi
  40aba1:	pop    ebx
  40aba2:	icebp  
  40aba3:	int3   
  40aba4:	ins    DWORD PTR es:[edi],dx
  40aba5:	je     0x40ab32
  40aba7:	ins    BYTE PTR es:[edi],dx
  40aba8:	cmc    
  40aba9:	push   ebp
  40abaa:	or     edi,ecx
  40abac:	xlat   BYTE PTR ds:[ebx]
  40abad:	push   esi
  40abae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abaf:	les    edi,FWORD PTR fs:[edi]
  40abb2:	fwait
  40abb3:	mov    esi,0xe5f257b4
  40abb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb9:	xchg   edx,eax
  40abba:	adc    eax,0x3607a2e5
  40abbf:	cmp    DWORD PTR [ebx-0x44907f14],eax
  40abc5:	and    DWORD PTR [esi+0x4745f76d],edi
  40abcb:	fist   WORD PTR [edi-0x2d3e0156]
  40abd1:	sub    cl,BYTE PTR cs:[edx-0x276bdd1b]
  40abd8:	jnp    0x40ab69
  40abda:	retf   0xa51a
  40abdd:	and    eax,DWORD PTR [ecx+ecx*4]
  40abe0:	pusha  
  40abe1:	fist   DWORD PTR [eiz*2-0x6dabe67a]
  40abe8:	pop    edi
  40abe9:	add    esi,DWORD PTR [eax-0x76c3dbf1]
  40abef:	xchg   esi,eax
  40abf0:	inc    eax
  40abf1:	add    eax,DWORD PTR [ecx]
  40abf3:	jg     0x40ac42
  40abf5:	push   ecx
  40abf6:	(bad)  
  40abf7:	dec    eax
  40abf8:	loope  0x40ac22
  40abfa:	push   0x31cf0ef5
  40abff:	data16 and BYTE PTR [ebp+0x5d],bl
  40ac03:	into   
  40ac04:	(bad)  
  40ac05:	jmp    0x40ac81
  40ac07:	or     al,0x93
  40ac09:	pop    ebp
  40ac0a:	jns    0x40ac64
  40ac0c:	adc    al,0xb1
  40ac0e:	or     DWORD PTR [edi+0x39],ebp
  40ac11:	push   ds
  40ac12:	pushf  
  40ac13:	mov    ch,0xcf
  40ac15:	fsubr  st,st(7)
  40ac17:	push   ebx
  40ac18:	or     DWORD PTR [eax+0x2cdfb3f6],0x8c25114c
  40ac22:	pop    ss
  40ac23:	lds    esp,FWORD PTR [ebx+0x57034a09]
  40ac29:	outs   dx,DWORD PTR ds:[esi]
  40ac2a:	cmp    DWORD PTR ds:0xb31374bb,edx
  40ac30:	push   ds
  40ac31:	push   eax
  40ac32:	jnp    0x40ac79
  40ac34:	jmp    0x47e1:0x87582d3f
  40ac3b:	inc    eax
  40ac3c:	out    0xf3,eax
  40ac3e:	scas   al,BYTE PTR es:[edi]
  40ac3f:	leave  
  40ac40:	add    eax,DWORD PTR [esi+ecx*2]
  40ac43:	sti    
  40ac44:	fnstenv [ebp+edi*2+0x7b4d31b8]
  40ac4b:	cwde   
  40ac4c:	data16 mov dl,BYTE PTR [ebx-0x3e56392e]
  40ac53:	sbb    al,0xa8
  40ac55:	call   0xe66103d9
  40ac5a:	inc    ecx
  40ac5b:	sbb    BYTE PTR [ebx],ah
  40ac5d:	(bad)  [ecx]
  40ac5f:	mov    ds:0xdbf20874,al
  40ac64:	xchg   ecx,eax
  40ac65:	adc    eax,0x859d7cc3
  40ac6a:	push   0x3d1fc899
  40ac6f:	ja     0x40acb9
  40ac71:	cmp    DWORD PTR [edx-0x36],ebp
  40ac74:	rcr    DWORD PTR [ebp+0x6c],0x96
  40ac78:	fld    TBYTE PTR [esi+0x7d]
  40ac7b:	mov    ah,BYTE PTR [ebx]
  40ac7d:	jnp    0x40ac2f
  40ac7f:	scas   al,BYTE PTR es:[edi]
  40ac80:	rcl    DWORD PTR [edx],cl
  40ac82:	jmp    0xe38b:0x986aa9b9
  40ac89:	daa    
  40ac8a:	lock jl 0x40ac3d
  40ac8d:	inc    ecx
  40ac8e:	or     al,0x76
  40ac90:	xchg   edi,eax
  40ac91:	icebp  
  40ac92:	jns    0x40ace2
  40ac94:	xchg   ebp,eax
  40ac95:	pop    esi
  40ac96:	xchg   ebx,eax
  40ac97:	jecxz  0x40acc5
  40ac99:	arpl   WORD PTR [eax+0x31241556],dx
  40ac9f:	mov    eax,0x3e01e54d
  40aca4:	aaa    
  40aca5:	(bad)  
  40aca6:	rol    DWORD PTR [ebp+0x64],1
  40aca9:	shl    ch,cl
  40acab:	mov    BYTE PTR [ebx+0x37],bh
  40acae:	imul   ecx,DWORD PTR [ebx-0x5b012ec3],0x25
  40acb5:	push   ds
  40acb6:	mov    eax,0xcbd51aa6
  40acbb:	fistp  DWORD PTR [ebx-0x10]
  40acbe:	add    eax,0x8e32340c
  40acc3:	and    ecx,DWORD PTR [ebp-0x39ed1bca]
  40acc9:	mov    ds:0x2b999c15,al
  40acce:	and    DWORD PTR [edi-0x74],esi
  40acd1:	dec    eax
  40acd2:	push   esp
  40acd3:	push   0x30
  40acd5:	xchg   ecx,eax
  40acd6:	xchg   edx,eax
  40acd7:	or     esi,DWORD PTR [ebp+0x3e]
  40acda:	sub    bl,BYTE PTR [ecx-0x62da653e]
  40ace0:	dec    ebp
  40ace1:	mov    BYTE PTR [ecx-0x16],dl
  40ace4:	xor    DWORD PTR [edx],edi
  40ace6:	loopne 0x40acf0
  40ace8:	fistp  WORD PTR [edx+0x62b44a1c]
  40acee:	int    0xcb
  40acf0:	xchg   edi,eax
  40acf1:	or     DWORD PTR [esi+esi*2],edi
  40acf4:	pop    ebx
  40acf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf6:	mov    bh,0x9c
  40acf8:	jb     0x40aca3
  40acfa:	jmp    0x20f4fd56
  40acff:	lds    esi,FWORD PTR [edi-0x41b3f8a6]
  40ad05:	cwde   
  40ad06:	inc    ebp
  40ad07:	rcl    BYTE PTR [esi],cl
  40ad09:	or     DWORD PTR [edi+ebx*8-0x12],edx
  40ad0d:	sub    DWORD PTR ds:0x2234be29,ecx
  40ad13:	cli    
  40ad14:	adc    al,0xde
  40ad16:	sub    DWORD PTR [edi-0x6fa43b8d],0xfffffff1
  40ad1d:	dec    eax
  40ad1e:	in     al,0xe0
  40ad20:	jmp    0x992440bb
  40ad25:	pop    esi
  40ad26:	xchg   esp,eax
  40ad27:	outs   dx,DWORD PTR ds:[esi]
  40ad28:	xor    eax,0x57437165
  40ad2d:	jecxz  0x40acb1
  40ad2f:	inc    ebp
  40ad30:	ds mov edx,gs
  40ad33:	fxch   st(6)
  40ad35:	inc    edi
  40ad36:	adc    DWORD PTR [edi],ebx
  40ad38:	cdq    
  40ad39:	cmp    esp,ebp
  40ad3b:	lock pop es
  40ad3d:	pop    eax
  40ad3e:	sub    dh,cl
  40ad40:	jg     0x40ad17
  40ad42:	mov    dh,0x54
  40ad44:	arpl   WORD PTR [ecx],bp
  40ad46:	pop    ds
  40ad47:	int3   
  40ad48:	inc    edx
  40ad49:	out    0x2f,eax
  40ad4b:	sub    ah,BYTE PTR [eax+ecx*1+0x53]
  40ad4f:	add    DWORD PTR [edx-0x6b],0x12
  40ad53:	jno    0x40ad5e
  40ad55:	mov    DWORD PTR [eax],0x5d6b10ae
  40ad5b:	xchg   edi,eax
  40ad5c:	add    al,0x62
  40ad5e:	cs mov esi,0x37bdd4ec
  40ad64:	in     eax,dx
  40ad65:	call   FWORD PTR [ebp+esi*8-0x6c]
  40ad69:	into   
  40ad6a:	inc    eax
  40ad6b:	test   DWORD PTR [edx],edx
  40ad6d:	dec    eax
  40ad6e:	cwde   
  40ad6f:	mov    eax,eax
  40ad71:	jl     0x40ad67
  40ad73:	call   0x9b4f:0xf5d2cb17
  40ad7a:	stos   DWORD PTR es:[edi],eax
  40ad7b:	xchg   ecx,eax
  40ad7c:	mov    bl,0xe
  40ad7e:	cmc    
  40ad7f:	lea    esi,[ecx+0x63]
  40ad82:	add    eax,0x4ef1ef0e
  40ad87:	gs ds inc edx
  40ad8a:	out    0xea,al
  40ad8c:	iret   
  40ad8d:	in     al,dx
  40ad8e:	xor    DWORD PTR [edi+0x19],0x7afd6be7
  40ad95:	cmp    cl,BYTE PTR [ecx]
  40ad97:	mov    DWORD PTR [edi],ebx
  40ad99:	push   0x13d2272b
  40ad9e:	sbb    eax,0xbaeda715
  40ada3:	mov    ?,esi
  40ada5:	imul   esi,DWORD PTR [ebp+0x2dd857b0],0x8f7f4a95
  40adaf:	ins    DWORD PTR es:[edi],dx
  40adb0:	add    BYTE PTR [ebx+ecx*2-0x607980bc],cl
  40adb7:	jmp    0x1322818
  40adbc:	nop
  40adbd:	repnz adc DWORD PTR [esi],edi
  40adc0:	sbb    BYTE PTR [edx+0x38c8fede],al
  40adc6:	out    0x4c,al
  40adc8:	dec    esp
  40adc9:	mov    dh,0x9b
  40adcb:	xchg   esi,eax
  40adcc:	inc    eax
  40adcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adce:	aas    
  40adcf:	mov    eax,ds:0xe9ce521f
  40add4:	fild   QWORD PTR [edi-0x307a748f]
  40adda:	mov    al,0xa
  40addc:	add    al,0x9d
  40adde:	or     eax,DWORD PTR [esi-0x51]
  40ade1:	fisttp DWORD PTR [edi]
  40ade3:	test   eax,0xb0679152
  40ade8:	fadd   st(1),st
  40adea:	mov    eax,DWORD PTR [edx-0x3b]
  40aded:	jno    0x40adb9
  40adef:	dec    esi
  40adf0:	gs jo  0x40adcc
  40adf3:	push   edx
  40adf4:	jmp    0x40ae45
  40adf6:	mov    edx,0x884b3a87
  40adfb:	rcr    DWORD PTR [esi],cl
  40adfd:	ret    
  40adfe:	xchg   esi,eax
  40adff:	loop   0x40ad8e
  40ae01:	std    
  40ae02:	push   esi
  40ae03:	xor    eax,0x1afd59ee
  40ae08:	or     al,0xda
  40ae0a:	in     al,0xfe
  40ae0c:	out    0xc8,eax
  40ae0e:	inc    esi
  40ae0f:	or     dh,BYTE PTR [edi+esi*1]
  40ae12:	pusha  
  40ae13:	sti    
  40ae14:	pop    ds
  40ae15:	jmp    0x530cae6d
  40ae1a:	in     al,0xbe
  40ae1c:	test   DWORD PTR [ebx],edx
  40ae1e:	call   0x2a85:0x709fbfa5
  40ae25:	jb     0x40ae09
  40ae27:	mov    BYTE PTR [ebp+ecx*8+0x74],ah
  40ae2b:	jg     0x40adec
  40ae2d:	jle    0x40ae3f
  40ae2f:	jecxz  0x40ae66
  40ae31:	mov    ecx,gs
  40ae33:	xor    eax,DWORD PTR [ecx]
  40ae35:	daa    
  40ae36:	xor    eax,0x95099c20
  40ae3b:	jmp    0x40ae96
  40ae3d:	xor    DWORD PTR [edi-0xa],edx
  40ae40:	or     BYTE PTR [ebx+eiz*1-0x513a4793],bl
  40ae47:	(bad)  
  40ae48:	jae    0x40aea4
  40ae4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae4b:	fidivr DWORD PTR [ebx-0x676bf2e]
  40ae51:	out    0x6c,eax
  40ae53:	mov    ebx,0x48a27d32
  40ae58:	jae    0x40aed9
  40ae5a:	and    dh,BYTE PTR [ebp+0x7df7198a]
  40ae60:	int3   
  40ae61:	or     esi,DWORD PTR [esi+0x6]
  40ae64:	sub    al,0xd9
  40ae66:	repz mov ebp,0x4013883
  40ae6c:	int    0xfb
  40ae6e:	mov    al,ds:0xe70e815c
  40ae73:	fadd   DWORD PTR [edx+0x2e4bd433]
  40ae79:	xchg   edx,eax
  40ae7a:	mov    ds:0x3984462f,eax
  40ae7f:	pop    edi
  40ae80:	(bad)  
  40ae82:	mov    WORD PTR [edx-0x52526fde],?
  40ae88:	or     DWORD PTR [ebx-0x61],edx
  40ae8b:	fsubr  st(4),st
  40ae8d:	out    0xfc,eax
  40ae8f:	xchg   BYTE PTR cs:[edi+ebp*2],ah
  40ae93:	test   eax,0x21659216
  40ae98:	jecxz  0x40aea7
  40ae9a:	and    BYTE PTR [eax+0x2c],ah
  40ae9d:	adc    eax,0xc12c53e2
  40aea2:	pop    ebx
  40aea3:	sbb    ebx,eax
  40aea5:	adc    dl,bh
  40aea7:	test   eax,0x65842f5e
  40aeac:	fnstsw WORD PTR [ebx+0x4]
  40aeaf:	dec    edi
  40aeb0:	xchg   al,ch
  40aeb2:	lahf   
  40aeb3:	fwait
  40aeb4:	sub    ah,bl
  40aeb6:	leave  
  40aeb7:	ins    DWORD PTR es:[edi],dx
  40aeb8:	aad    0x77
  40aeba:	sbb    DWORD PTR [edx+0x62a79d35],0x48
  40aec1:	xor    edx,DWORD PTR [edi+ecx*2]
  40aec4:	mov    BYTE PTR [edx+0x4088eec6],dh
  40aeca:	sub    BYTE PTR [eax-0x34],cl
  40aecd:	or     eax,0xbb0d6f2a
  40aed2:	mov    edx,0x8152997b
  40aed7:	xchg   ebx,eax
  40aed8:	mov    ebx,fs
  40aeda:	pop    edx
  40aedb:	clc    
  40aedc:	mov    ebp,0x5827a3a6
  40aee1:	(bad)  
  40aee2:	and    ecx,DWORD PTR [edi+0x32]
  40aee5:	out    0x4e,eax
  40aee7:	or     ebp,DWORD PTR [esi]
  40aee9:	mov    eax,ds:0x5fb74d67
  40aeee:	loop   0x40af44
  40aef0:	jle    0x40aee1
  40aef2:	xchg   edx,eax
  40aef3:	xchg   ebp,edi
  40aef5:	xchg   ecx,eax
  40aef6:	mov    ebp,0xd37f123e
  40aefb:	or     edi,esi
  40aefd:	adc    BYTE PTR [ecx],dh
  40aeff:	test   DWORD PTR [esi-0x542467f6],esp
  40af05:	std    
  40af06:	mov    edx,0xd8c67f6b
  40af0b:	loopne 0x40aefd
  40af0d:	pusha  
  40af0e:	ja     0x40af39
  40af10:	(bad)  
  40af11:	aam    0xc2
  40af13:	int3   
  40af14:	retf   
  40af15:	repnz sub eax,0xb4213c8e
  40af1b:	int3   
  40af1c:	popa   
  40af1d:	sub    eax,0xb93f2574
  40af22:	in     al,dx
  40af23:	mov    ds:0x567c757d,eax
  40af28:	mov    edx,0xfefdd17e
  40af2d:	repz sbb cl,BYTE PTR [edx-0x2d3c6a8]
  40af34:	dec    edi
  40af35:	add    BYTE PTR [esi-0x61a6a049],0x72
  40af3c:	jae    0x40af93
  40af3e:	jecxz  0x40af72
  40af40:	jg     0x40af57
  40af42:	xchg   esi,ebp
  40af44:	and    BYTE PTR [eax-0x10],ah
  40af47:	inc    esi
  40af48:	sbb    cl,ah
  40af4a:	rcr    BYTE PTR [ecx],0x3b
  40af4d:	fnstcw WORD PTR [esi-0x62]
  40af50:	add    cl,BYTE PTR [edx+0x19e7d149]
  40af56:	cmp    esi,ecx
  40af58:	ins    DWORD PTR es:[edi],dx
  40af59:	fiadd  WORD PTR [edi+0x15]
  40af5c:	(bad)  
  40af5d:	fst    DWORD PTR [eax]
  40af5f:	xor    DWORD PTR ds:0xf19556fa,0x2c
  40af66:	fimul  DWORD PTR ds:0x9aa295f5
  40af6c:	sub    ah,BYTE PTR [ecx+0x6c9a633b]
  40af72:	mov    esp,0xf8114006
  40af78:	cdq    
  40af79:	push   eax
  40af7a:	imul   esi,DWORD PTR [eax+edx*2+0x3ff350c0],0xe93390f
  40af85:	and    BYTE PTR [esi+0x3e],ah
  40af88:	imul   ebx,DWORD PTR [edi+ebp*8],0xffffffbc
  40af8c:	sar    DWORD PTR [ecx+eiz*4+0x7f],1
  40af90:	add    BYTE PTR [eax-0x359d1b74],ah
  40af96:	jae    0x40af8f
  40af98:	dec    edx
  40af99:	pop    ebp
  40af9a:	mov    al,0xae
  40af9c:	fstp   QWORD PTR [ecx+0x69]
  40af9f:	mov    ds:0xf72240c2,al
  40afa4:	xor    eax,0xa3eb508b
  40afa9:	sbb    cl,ah
  40afab:	cld    
  40afac:	pop    ss
  40afad:	push   edi
  40afae:	dec    edx
  40afaf:	xor    eax,0x6eb126
  40afb4:	fisttp DWORD PTR ds:0xe9e085b2
  40afba:	or     al,0x90
  40afbc:	enter  0x1a60,0xa2
  40afc0:	cdq    
  40afc1:	(bad)  
  40afc2:	sub    eax,0x21b5b962
  40afc7:	jb     0x40afe9
  40afc9:	mov    ds:0x97b8462d,eax
  40afce:	mov    WORD PTR [ecx-0x41ec0e08],?
  40afd4:	in     al,0xa1
  40afd6:	cwde   
  40afd7:	(bad)  [edi+0x47]
  40afda:	aad    0x48
  40afdc:	xor    eax,0x6f49aaea
  40afe1:	push   ecx
  40afe2:	int3   
  40afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe4:	adc    al,0x3a
  40afe6:	dec    esp
  40afe7:	loopne 0x40af89
  40afe9:	out    0xa8,al
  40afeb:	dec    ebx
  40afec:	rol    BYTE PTR [edi],1
  40afee:	mov    eax,0x36992408
  40aff3:	dec    ebx
  40aff4:	jo     0x40af8a
  40aff6:	xchg   esi,eax
  40aff7:	stos   BYTE PTR es:[edi],al
  40aff8:	mov    al,ds:0x2595cf90
  40affd:	call   DWORD PTR [esi+ecx*8-0x2c53255f]
  40b004:	mov    eax,ds:0xcd1c98a9
  40b009:	cmp    DWORD PTR [edi-0x12864097],ebp
  40b00f:	pop    eax
  40b010:	mov    cl,0x8d
  40b012:	sub    esi,0x8
  40b015:	aam    0x5e
  40b017:	retf   0x1890
  40b01a:	into   
  40b01b:	fdiv   DWORD PTR [eax]
  40b01d:	imul   edi,DWORD PTR [ebx],0xffffffcd
  40b020:	push   ecx
  40b021:	shr    BYTE PTR [esi-0x54],1
  40b024:	or     eax,0x23b8de36
  40b029:	scas   al,BYTE PTR es:[edi]
  40b02a:	outs   dx,DWORD PTR ds:[esi]
  40b02b:	int3   
  40b02c:	pop    eax
  40b02d:	xchg   DWORD PTR [ecx-0x1d],edx
  40b030:	fs push ds
  40b032:	out    dx,al
  40b033:	sub    DWORD PTR [edi],esi
  40b035:	xchg   DWORD PTR [edx-0x21],edi
  40b038:	les    eax,FWORD PTR [edx-0xf]
  40b03b:	nop
  40b03c:	adc    dl,dl
  40b03e:	sub    BYTE PTR [eax+eax*8],0xd4
  40b042:	cmp    eax,0x336b1fde
  40b047:	xchg   esi,eax
  40b048:	fld    QWORD PTR ds:0x9fc60f66
  40b04e:	sub    bl,BYTE PTR [edx+0x2aba767f]
  40b054:	cmp    esp,DWORD PTR [ecx-0xb]
  40b057:	inc    ebx
  40b058:	jbe    0x40b06b
  40b05a:	test   al,0x3d
  40b05c:	push   ebp
  40b05d:	mov    ebp,0x39904d6f
  40b062:	lods   eax,DWORD PTR ds:[esi]
  40b063:	sbb    DWORD PTR [ecx],edi
  40b065:	std    
  40b066:	icebp  
  40b067:	inc    edi
  40b068:	mov    edi,0xe77d01d7
  40b06d:	mov    edi,0x4d074e07
  40b072:	mov    al,0x92
  40b074:	xor    BYTE PTR [edx-0x1f748bf0],bh
  40b07a:	pushf  
  40b07b:	psubsb mm5,QWORD PTR [esp+ecx*4+0x27ff968b]
  40b083:	aaa    
  40b084:	and    al,0x94
  40b086:	aas    
  40b087:	mov    ebp,0x17bd9b4
  40b08c:	outs   dx,BYTE PTR ds:[esi]
  40b08d:	(bad)  
  40b08e:	es pop edi
  40b090:	dec    ecx
  40b091:	cli    
  40b092:	scas   eax,DWORD PTR es:[edi]
  40b093:	jp     0x40b0bd
  40b095:	ins    BYTE PTR es:[edi],dx
  40b096:	xchg   ecx,eax
  40b097:	sbb    dh,BYTE PTR [edx-0x77c8f492]
  40b09d:	jl     0x40b057
  40b09f:	sub    BYTE PTR gs:[ecx+0xa79dbef],dh
  40b0a6:	mov    eax,ds:0x4d93ad26
  40b0ab:	or     ecx,esi
  40b0ad:	dec    edx
  40b0ae:	xchg   ebx,eax
  40b0af:	sub    BYTE PTR [ebp+0x15],bh
  40b0b2:	inc    ebp
  40b0b3:	adc    bl,BYTE PTR [ecx-0x54]
  40b0b6:	inc    edx
  40b0b7:	mov    ss,eax
  40b0b9:	bound  ecx,QWORD PTR [esi]
  40b0bb:	and    al,0xcc
  40b0bd:	data16 ror BYTE PTR gs:[eax+eax*4],cl
  40b0c2:	jne    0x40b049
  40b0c4:	xor    al,0x2a
  40b0c6:	aas    
  40b0c7:	mov    edi,0x46ad9bbc
  40b0cc:	jmp    0x5793:0xe654c2dc
  40b0d3:	xchg   esi,eax
  40b0d4:	loop   0x40b0dc
  40b0d6:	xor    DWORD PTR [ecx],esp
  40b0d8:	add    eax,0x1d2ef008
  40b0dd:	mov    bl,BYTE PTR [ebx+0x45c4ff06]
  40b0e3:	mov    cl,0xa
  40b0e5:	aad    0xca
  40b0e7:	in     al,dx
  40b0e8:	xlat   BYTE PTR ds:[ebx]
  40b0e9:	xchg   edx,eax
  40b0ea:	push   es
  40b0eb:	inc    esp
  40b0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ed:	aam    0x96
  40b0ef:	repnz stc 
  40b0f1:	inc    esp
  40b0f2:	mov    bl,0x65
  40b0f4:	inc    ebx
  40b0f5:	out    dx,eax
  40b0f6:	jmp    0x40b16a
  40b0f8:	sbb    ecx,DWORD PTR [edx-0x3e03260c]
  40b0fe:	cmp    ch,BYTE PTR [eax]
  40b100:	out    dx,al
  40b101:	pop    ecx
  40b102:	inc    ebp
  40b103:	je     0x40b088
  40b105:	pop    esp
  40b106:	mov    al,bl
  40b108:	pushf  
  40b109:	push   0xffffff96
  40b10b:	clc    
  40b10c:	adc    bh,bl
  40b10e:	xchg   edx,eax
  40b10f:	xchg   ebx,eax
  40b110:	nop
  40b111:	add    al,0xec
  40b113:	inc    esi
  40b114:	fdiv   DWORD PTR [esi+0x40c4e739]
  40b11a:	int3   
  40b11b:	mov    bh,BYTE PTR [edi]
  40b11d:	push   ebx
  40b11e:	pushf  
  40b11f:	loop   0x40b0b0
  40b121:	push   esi
  40b122:	in     al,dx
  40b123:	bound  ebx,QWORD PTR [eax+0x20912e0]
  40b129:	inc    eax
  40b12a:	in     eax,dx
  40b12b:	data16 jl 0x40b18a
  40b12e:	pop    esp
  40b12f:	add    eax,0x939eebb
  40b134:	shl    dl,0xd
  40b137:	out    0x7,eax
  40b139:	jb     0x40b1a1
  40b13b:	cld    
  40b13c:	xchg   esi,eax
  40b13d:	jb     0x40b14e
  40b13f:	add    al,0xf8
  40b141:	jnp    0x40b128
  40b143:	mov    ds,WORD PTR [eax+esi*4]
  40b146:	test   al,0x45
  40b148:	lds    ebx,FWORD PTR [edx+0x40]
  40b14b:	mov    dl,0x93
  40b14d:	test   DWORD PTR [ebx-0x46],0x574cad3f
  40b154:	and    edi,DWORD PTR [edx+0x7675ef61]
  40b15a:	test   ecx,ebx
  40b15c:	rol    BYTE PTR [esi],cl
  40b15e:	cmp    BYTE PTR [eax-0x1c],ch
  40b161:	pop    es
  40b162:	push   ebp
  40b163:	cs call 0x3da3fd1c
  40b169:	jl     0x40b166
  40b16b:	scas   eax,DWORD PTR es:[edi]
  40b16c:	bound  ebp,QWORD PTR [ebx-0x1646ba5]
  40b172:	cmp    eax,0x708d38f8
  40b177:	sub    al,0xa7
  40b179:	inc    ecx
  40b17a:	paddb  mm3,QWORD PTR ds:0x6db8cbec
  40b181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b182:	into   
  40b183:	pop    esp
  40b184:	sub    BYTE PTR [edi-0x10af3b17],bh
  40b18a:	cld    
  40b18b:	icebp  
  40b18c:	shl    BYTE PTR [edi+esi*2+0x7c],1
  40b190:	stc    
  40b191:	(bad)  
  40b192:	sar    BYTE PTR ds:0x62cab98d,0xdd
  40b199:	stc    
  40b19a:	cmp    edx,DWORD PTR [ebp+ebp*8+0x6a]
  40b19e:	in     eax,0x61
  40b1a0:	sub    eax,DWORD PTR [ebp+ecx*8-0x138f60e8]
  40b1a7:	sub    eax,DWORD PTR [ebx]
  40b1a9:	fst    QWORD PTR [edi+0x21890adc]
  40b1af:	ficom  DWORD PTR [esi+ecx*4]
  40b1b2:	pusha  
  40b1b3:	fwait
  40b1b4:	test   BYTE PTR [edx+0x53dc2369],dl
  40b1ba:	pop    eax
  40b1bb:	out    0x54,eax
  40b1bd:	mov    eax,ds:0x3a900f0
  40b1c2:	dec    edi
  40b1c3:	loop   0x40b21d
  40b1c5:	xchg   esp,eax
  40b1c6:	mov    ch,0xfd
  40b1c9:	popf   
  40b1ca:	test   eax,0xb1ccb8a4
  40b1cf:	mov    ecx,0x2f56fa55
  40b1d4:	dec    esp
  40b1d5:	jmp    0x40b1e2
  40b1d7:	cmp    bl,0xea
  40b1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1db:	leave  
  40b1dc:	mov    dh,0x70
  40b1de:	pushf  
  40b1df:	or     al,0xeb
  40b1e1:	mov    ebx,0x67354ad6
  40b1e6:	lods   al,BYTE PTR ds:[esi]
  40b1e7:	(bad)
  40b1ea:	aaa    
  40b1eb:	les    ebx,FWORD PTR [ecx]
  40b1ed:	mov    WORD PTR [ecx-0x1b],cs
  40b1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f1:	sub    eax,0x90186e33
  40b1f6:	mov    eax,ds:0x968cd24
  40b1fb:	dec    eax
  40b1fc:	add    dl,BYTE PTR [esi+0x4f0cd7a2]
  40b202:	imul   ebx,DWORD PTR [esi],0xb38af429
  40b208:	test   DWORD PTR [eax-0xe1eabad],eax
  40b20e:	pop    esp
  40b20f:	inc    ecx
  40b210:	and    al,0x7d
  40b212:	mov    cl,0x4f
  40b214:	jns    0x40b1a3
  40b216:	pushf  
  40b217:	inc    ecx
  40b218:	mov    ecx,DWORD PTR [ebp-0x3e25d4bd]
  40b21e:	icebp  
  40b21f:	retf   0x1f14
  40b222:	enter  0xc857,0xe
  40b226:	call   0x9e468139
  40b22b:	sbb    al,0x5a
  40b22d:	sub    ch,ch
  40b22f:	xchg   DWORD PTR [ebx+0x5e],ebx
  40b232:	xor    al,0xef
  40b234:	cs sbb eax,0x5f796137
  40b23a:	push   esp
  40b23b:	inc    ebp
  40b23c:	adc    al,0xc0
  40b23e:	mov    eax,cs
  40b240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b241:	mov    bl,0xc1
  40b243:	cmp    esp,DWORD PTR [eax-0x42]
  40b246:	and    BYTE PTR [edi+edx*1-0x52],ch
  40b24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b24b:	or     ch,al
  40b24d:	mov    ecx,0xbb225213
  40b252:	cmp    al,0x21
  40b254:	mov    WORD PTR [ebx+0x20586d20],gs
  40b25a:	(bad)  [ebx+esi*8+0x7786bf43]
  40b261:	ret    
  40b262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b263:	push   ecx
  40b264:	and    DWORD PTR [esi+0x18810a13],0x6ba48be
  40b26e:	cmc    
  40b26f:	lds    edi,FWORD PTR [edx+ebp*2-0x3e807d32]
  40b276:	and    al,0x51
  40b278:	in     al,0xd9
  40b27a:	adc    al,0xe
  40b27c:	int3   
  40b27d:	mov    esp,0x53d18904
  40b282:	jp     0x40b215
  40b284:	add    al,0x3c
  40b286:	jns    0x40b22c
  40b288:	(bad)  
  40b289:	xlat   BYTE PTR ds:[ebx]
  40b28a:	mov    eax,0xe34cd4a2
  40b28f:	push   0xffffffdd
  40b291:	mov    edx,DWORD PTR [edx-0x10]
  40b294:	mov    bh,0x31
  40b296:	inc    ecx
  40b297:	jecxz  0x40b2bb
  40b299:	rcl    bl,0x96
  40b29c:	xor    eax,0x3c2dbe39
  40b2a1:	hlt    
  40b2a2:	inc    edi
  40b2a3:	mov    edx,DWORD PTR [esi+ecx*2-0x1d]
  40b2a7:	sub    BYTE PTR [ebx+0x15f78d9d],al
  40b2ad:	(bad)  
  40b2ae:	aam    0x2d
  40b2b0:	sub    al,0x2f
  40b2b2:	(bad)  
  40b2b3:	retf   0xd02b
  40b2b6:	repnz adc bl,BYTE PTR [esi-0x3b7faa89]
  40b2bd:	jp     0x40b31d
  40b2bf:	das    
  40b2c0:	retf   
  40b2c1:	add    bh,ah
  40b2c3:	push   edx
  40b2c4:	call   0x9364:0x4d03b068
  40b2cb:	xlat   BYTE PTR ds:[ebx]
  40b2cc:	or     eax,0x67394fa8
  40b2d1:	xchg   DWORD PTR [eax+0x1c],ecx
  40b2d4:	test   esi,ecx
  40b2d6:	add    eax,0x1e795bcf
  40b2db:	adc    DWORD PTR [esi],eax
  40b2dd:	fnstsw WORD PTR [ecx]
  40b2df:	xchg   DWORD PTR [esp+edx*8],ebx
  40b2e2:	push   cs
  40b2e3:	dec    edx
  40b2e4:	imul   BYTE PTR [esi]
  40b2e6:	adc    ebx,DWORD PTR [ecx+0x38e4dc6f]
  40b2ec:	mov    cl,0x10
  40b2ee:	push   esp
  40b2ef:	in     eax,0xab
  40b2f1:	out    dx,al
  40b2f2:	ins    BYTE PTR es:[edi],dx
  40b2f3:	repnz add esp,edx
  40b2f6:	inc    edx
  40b2f7:	enter  0x3d34,0x3e
  40b2fb:	xchg   BYTE PTR [eax+0x41f5e6d4],cl
  40b301:	inc    ebx
  40b302:	fisubr WORD PTR [ecx]
  40b304:	bound  esp,QWORD PTR [eax+0x37]
  40b307:	adc    BYTE PTR [esi+0x20],0x9
  40b30b:	push   ds
  40b30c:	or     eax,esi
  40b30e:	or     eax,eax
  40b310:	mov    ds:0x11e40c79,eax
  40b315:	and    BYTE PTR [edx],al
  40b317:	sbb    DWORD PTR [edx],eax
  40b319:	cmp    cl,BYTE PTR [esi]
  40b31b:	test   BYTE PTR [ebp+eax*2-0xdbf3736],cl
  40b322:	test   eax,0xa5bbcffb
  40b327:	test   eax,0xeb9a1ef1
  40b32c:	inc    eax
  40b32d:	mov    ebx,0xcf8857d3
  40b332:	nop
  40b333:	mov    ch,0x33
  40b335:	push   eax
  40b336:	in     al,dx
  40b337:	(bad)  
  40b338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b339:	jns    0x40b347
  40b33b:	pop    edi
  40b33c:	(bad)  
  40b33e:	and    al,0xef
  40b340:	mov    dh,0x1e
  40b342:	(bad)
  40b345:	add    ebx,esi
  40b347:	mov    esi,0x47e0ee71
  40b34c:	jne    0x40b36e
  40b34e:	or     dl,dh
  40b350:	fwait
  40b351:	shl    DWORD PTR [esi+0x20cb9533],0x45
  40b358:	stc    
  40b359:	inc    edx
  40b35a:	mov    al,ds:0x41ef433
  40b35f:	xchg   BYTE PTR [ecx-0x5039c6d1],ah
  40b365:	icebp  
  40b366:	adc    DWORD PTR ss:[edx],ecx
  40b369:	jne    0x40b336
  40b36b:	jmp    0xb4df5e55
  40b370:	sahf   
  40b371:	es je  0x40b392
  40b374:	inc    edx
  40b375:	sub    BYTE PTR [edi+0x21d5e5f7],dl
  40b37b:	gs inc ebx
  40b37d:	mov    al,ds:0x460f8a4f
  40b382:	push   ebx
  40b383:	jmp    0xc9d03e8f
  40b388:	lea    edi,[eax-0x65f5dee5]
  40b38e:	scas   al,BYTE PTR es:[edi]
  40b38f:	mov    esi,0x160184fd
  40b394:	pop    DWORD PTR [ecx+eiz*2-0x20]
  40b398:	bound  eax,QWORD PTR [edi-0x3]
  40b39b:	dec    edx
  40b39c:	test   DWORD PTR [edi],eax
  40b39e:	push   esi
  40b39f:	xchg   edi,eax
  40b3a0:	ror    BYTE PTR [ebx-0x97d4ef7],1
  40b3a6:	fld    TBYTE PTR [eax]
  40b3a8:	xchg   ebx,eax
  40b3a9:	ret    
  40b3aa:	fdiv   QWORD PTR [ecx+edi*1]
  40b3ad:	sub    eax,0xa508834
  40b3b2:	shr    BYTE PTR [ecx+0x6aa016df],1
  40b3b8:	dec    ebp
  40b3b9:	push   ds
  40b3ba:	mov    esp,0xa665b99a
  40b3bf:	mov    ebp,0xb1e7b74d
  40b3c4:	outs   dx,DWORD PTR ds:[esi]
  40b3c5:	in     eax,0x8c
  40b3c7:	mov    edi,0x3595d619
  40b3cc:	call   0x9e3:0x3de11fea
  40b3d3:	sbb    eax,0xadf5085b
  40b3d8:	xchg   BYTE PTR [ebx+esi*8-0x17],ch
  40b3dc:	cmp    edi,DWORD PTR [edi]
  40b3de:	cmp    eax,0xb5a1944e
  40b3e3:	pop    ss
  40b3e4:	add    eax,0x57f99041
  40b3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ea:	xlat   BYTE PTR ds:[ebx]
  40b3eb:	mov    eax,ss:0x31cb5c1f
  40b3f1:	inc    ebp
  40b3f2:	mov    eax,0xb5ffcf79
  40b3f7:	(bad)  
  40b3f8:	cmc    
  40b3f9:	test   BYTE PTR [edi-0x59],dh
  40b3fc:	jns    0x40b37f
  40b3fe:	out    dx,al
  40b3ff:	push   cs
  40b400:	cmp    dl,BYTE PTR [ebx+0x1fb38774]
  40b406:	ret    
  40b407:	out    dx,al
  40b408:	push   ecx
  40b409:	ins    DWORD PTR es:[edi],dx
  40b40a:	mov    esp,0x1c336b4f
  40b40f:	xor    BYTE PTR ds:0xd2cba673,bh
  40b415:	ret    0x453c
  40b418:	imul   edx,ebp,0x55
  40b41b:	sbb    al,0x26
  40b41d:	gs aad 0xe6
  40b420:	xchg   esi,esi
  40b422:	adc    DWORD PTR [ebp+0x68],edi
  40b425:	jmp    0xa97e:0x33b3337e
  40b42c:	inc    eax
  40b42d:	stc    
  40b42e:	push   esi
  40b42f:	test   DWORD PTR [esi+0x3c363334],edx
  40b435:	or     dh,BYTE PTR [edx-0x277a8b0f]
  40b43b:	sub    eax,DWORD PTR [bp+si-0x4d]
  40b43f:	test   ebx,esp
  40b441:	pop    eax
  40b442:	dec    edx
  40b443:	(bad)  
  40b445:	xlat   BYTE PTR ds:[ebx]
  40b446:	ficomp WORD PTR [edi-0x68]
  40b449:	jle    0x40b440
  40b44b:	test   BYTE PTR [ecx-0x22],cl
  40b44e:	mov    bl,0x2
  40b450:	jnp    0x40b42b
  40b452:	ret    
  40b453:	clc    
  40b454:	xchg   edx,eax
  40b455:	js     0x40b45f
  40b457:	rcr    ch,1
  40b459:	das    
  40b45a:	call   0x6f3dd7e3
  40b45f:	jno    0x40b454
  40b461:	gs adc dl,dh
  40b464:	xor    edi,DWORD PTR [eax+0x1af8c79e]
  40b46a:	xchg   esp,edx
  40b46c:	push   eax
  40b46d:	idiv   DWORD PTR [edi-0x1665190b]
  40b473:	push   ebp
  40b474:	icebp  
  40b475:	adc    eax,0x55f3a3eb
  40b47a:	pop    es
  40b47b:	mul    DWORD PTR [edx-0x12]
  40b47e:	cmp    BYTE PTR ds:0xeb85980e,bl
  40b484:	xchg   ebp,eax
  40b485:	push   esi
  40b486:	jge    0x40b4e2
  40b488:	or     al,0xf6
  40b48a:	pushf  
  40b48b:	lds    ebp,FWORD PTR [eax]
  40b48d:	inc    ebx
  40b48e:	retf   0x5c94
  40b491:	fbstp  TBYTE PTR [edi]
  40b493:	or     BYTE PTR [edi],bh
  40b495:	dec    ebp
  40b496:	push   edx
  40b497:	in     al,dx
  40b498:	inc    ebx
  40b499:	jno    0x40b49e
  40b49b:	xor    BYTE PTR [edi],bh
  40b49d:	int    0xb3
  40b49f:	xchg   ebx,eax
  40b4a0:	in     eax,0x63
  40b4a2:	stc    
  40b4a3:	(bad)  
  40b4a4:	out    dx,eax
  40b4a5:	test   esi,esp
  40b4a7:	add    al,0x7b
  40b4a9:	sub    edi,0x8c5caad3
  40b4af:	lds    edi,FWORD PTR [edx-0x208f1fa4]
  40b4b5:	out    dx,al
  40b4b6:	and    DWORD PTR [bx+di-0x46b9],ecx
  40b4bb:	mov    eax,ds:0xd8bbec00
  40b4c0:	lock out 0x22,al
  40b4c3:	pushf  
  40b4c4:	mov    al,ds:0xef317c99
  40b4c9:	xchg   edi,eax
  40b4ca:	call   0x1166:0x41b6cfd6
  40b4d1:	clc    
  40b4d2:	add    esi,edx
  40b4d4:	pop    edi
  40b4d5:	or     edx,DWORD PTR [ebx+edi*1]
  40b4d8:	xor    al,0x2c
  40b4da:	sub    dh,BYTE PTR [esi-0x20]
  40b4dd:	ds push edi
  40b4df:	(bad)  
  40b4e0:	push   0xffffffcd
  40b4e2:	ins    DWORD PTR es:[edi],dx
  40b4e3:	shr    BYTE PTR [edx+0x4b],1
  40b4e6:	jae    0x40b4a7
  40b4e8:	scas   al,BYTE PTR es:[edi]
  40b4e9:	cmp    ah,BYTE PTR [eax+0x620a05c6]
  40b4ef:	add    al,0x33
  40b4f1:	sti    
  40b4f2:	mov    esi,0xe68ce6aa
  40b4f7:	xchg   esi,eax
  40b4f8:	pop    esp
  40b4f9:	inc    eax
  40b4fa:	push   0x13641375
  40b4ff:	adc    BYTE PTR [ebx-0xb],ch
  40b502:	out    dx,al
  40b503:	and    DWORD PTR ds:0x1682de31,edx
  40b509:	dec    eax
  40b50a:	add    al,0x2b
  40b50c:	sbb    ch,dl
  40b50e:	push   edi
  40b50f:	cmp    dh,BYTE PTR [edi+eiz*2-0x622d4e44]
  40b516:	mov    ebx,DWORD PTR [edx+0x57b07506]
  40b51c:	inc    edx
  40b51d:	loopne 0x40b50c
  40b51f:	ss ja  0x40b545
  40b522:	mov    ebx,0xca190509
  40b527:	pop    esp
  40b528:	cwde   
  40b529:	inc    esp
  40b52a:	sub    ah,ch
  40b52c:	int    0x3b
  40b52e:	out    dx,eax
  40b52f:	mov    BYTE PTR [esi-0x21c7730e],ah
  40b535:	repz je 0x40b4b8
  40b538:	or     BYTE PTR [ebp+0x1e],cl
  40b53b:	cmc    
  40b53c:	(bad)  
  40b53d:	inc    eax
  40b53e:	ins    BYTE PTR es:[edi],dx
  40b53f:	push   ebp
  40b540:	call   0x5bba19b0
  40b545:	sub    bl,BYTE PTR [ecx-0x721baa49]
  40b54b:	push   ebp
  40b54c:	adc    eax,0xe06ad18
  40b551:	cs std 
  40b553:	cmc    
  40b554:	mov    eax,0x20dfa2c8
  40b559:	arpl   WORD PTR [ebx],bx
  40b55b:	sub    al,0xf5
  40b55d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b55e:	dec    esi
  40b55f:	shl    DWORD PTR ds:0x60fbbf64,0x3b
  40b566:	or     eax,0xa7f21746
  40b56b:	fild   QWORD PTR [ebx]
  40b56d:	sbb    DWORD PTR [ebx+0x62],edi
  40b570:	in     al,0xca
  40b572:	and    DWORD PTR [edi-0x40],0x2b667876
  40b579:	cli    
  40b57a:	call   0x76bd84ac
  40b57f:	or     bl,BYTE PTR [ecx+0x78]
  40b582:	(bad)
  40b585:	dec    ecx
  40b586:	daa    
  40b587:	jmp    0xedc6:0x93974547
  40b58e:	mov    bl,0x91
  40b590:	mov    al,0x29
  40b592:	shr    BYTE PTR [eax],0x4
  40b595:	lods   eax,DWORD PTR ds:[esi]
  40b596:	xchg   ebp,eax
  40b597:	imul   ecx,DWORD PTR [ebx],0xbddb6466
  40b59d:	in     al,0x2c
  40b59f:	inc    ebx
  40b5a0:	icebp  
  40b5a1:	mov    cl,0x7d
  40b5a3:	rcl    BYTE PTR [ebx-0x77],1
  40b5a6:	mov    BYTE PTR [eax],bh
  40b5a8:	int3   
  40b5a9:	jle    0x40b57f
  40b5ab:	jo     0x40b620
  40b5ad:	and    edi,DWORD PTR [ecx-0x13]
  40b5b0:	mov    edi,0x9d42255d
  40b5b5:	jo     0x40b5c9
  40b5b7:	ins    BYTE PTR es:[edi],dx
  40b5b8:	add    al,0x11
  40b5ba:	sub    al,0xa1
  40b5bc:	out    0x3,al
  40b5be:	cmp    al,0x53
  40b5c0:	jno    0x40b59c
  40b5c2:	cmp    cl,dh
  40b5c4:	mov    dh,0xb
  40b5c6:	inc    esp
  40b5c7:	jbe    0x40b57e
  40b5c9:	mov    edi,0x6d78c89c
  40b5ce:	rcl    DWORD PTR [edx+0x56],0x99
  40b5d2:	hlt    
  40b5d3:	jle    0x40b60f
  40b5d5:	das    
  40b5d6:	mov    ch,0xdf
  40b5d8:	and    DWORD PTR [edi+0x62c2f53c],esp
  40b5de:	cmp    dl,bh
  40b5e0:	sub    ebx,DWORD PTR [esp+ebp*2+0xf812dfe]
  40b5e7:	jae    0x40b5d4
  40b5e9:	shr    DWORD PTR [ebp+edi*4+0x4a],cl
  40b5ed:	arpl   WORD PTR [esi+0x5b4ce44c],cx
  40b5f3:	pop    ss
  40b5f4:	pop    esp
  40b5f5:	(bad)  
  40b5f7:	fnstenv [edi]
  40b5f9:	daa    
  40b5fa:	mov    eax,0xd0f1cf0b
  40b5ff:	sub    edx,DWORD PTR [ecx]
  40b601:	idiv   DWORD PTR [ebx+0x50]
  40b604:	inc    edx
  40b605:	adc    DWORD PTR [eax],ebx
  40b607:	fadd   st,st(1)
  40b609:	test   al,0x38
  40b60b:	loop   0x40b652
  40b60d:	add    eax,0xcabca64
  40b612:	xchg   edi,eax
  40b613:	es pop eax
  40b615:	jmp    0x57fd6abf
  40b61a:	test   BYTE PTR [ebp-0x6ef900dc],bh
  40b620:	inc    edx
  40b621:	aad    0xb4
  40b623:	pop    esi
  40b624:	add    al,0x62
  40b626:	xchg   ebp,eax
  40b627:	push   eax
  40b628:	pop    eax
  40b629:	leave  
  40b62a:	pop    eax
  40b62b:	push   DWORD PTR [eax+0x71]
  40b62e:	adc    edx,DWORD PTR [edx+0x2d]
  40b631:	enter  0xbd5e,0xc0
  40b635:	ror    BYTE PTR [ecx],cl
  40b637:	into   
  40b638:	pushf  
  40b639:	and    edx,DWORD PTR [edx+ecx*8]
  40b63c:	push   ebp
  40b63d:	fwait
  40b63e:	test   BYTE PTR [eax],dl
  40b640:	cld    
  40b641:	jge    0x40b6a3
  40b643:	or     BYTE PTR [ebx],ah
  40b645:	and    DWORD PTR [ebx+0x64b0488c],edi
  40b64b:	aad    0x6c
  40b64d:	pop    edx
  40b64e:	inc    eax
  40b64f:	in     eax,0xcf
  40b651:	ins    BYTE PTR es:[edi],dx
  40b652:	call   0x629211ae
  40b657:	push   0x6bef43d5
  40b65c:	dec    esp
  40b65d:	repz sbb BYTE PTR [edx+0xaa7d779],ah
  40b664:	push   ebp
  40b665:	jmp    0x1214f41
  40b66a:	push   eax
  40b66b:	retf   0xd438
  40b66e:	mov    ch,0xee
  40b670:	sar    BYTE PTR [eax-0x3],cl
  40b673:	inc    BYTE PTR [edi+0x7bdd6963]
  40b679:	pop    ebp
  40b67a:	pop    esp
  40b67b:	test   DWORD PTR [ebp-0x3b2e2322],0xd5691fdd
  40b685:	aas    
  40b686:	cmc    
  40b687:	aam    0x89
  40b689:	pop    edx
  40b68a:	sbb    DWORD PTR ds:0xeb36e81f,0x8b14ba89
  40b694:	cld    
  40b695:	ret    
  40b696:	xor    al,0x17
  40b698:	int    0xb6
  40b69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b69b:	and    ecx,DWORD PTR [eax-0x59]
  40b69e:	xor    DWORD PTR [esi+ebx*4+0x1c1a1c03],edx
  40b6a5:	jp     0x40b646
  40b6a7:	add    eax,0x3cb6f2d1
  40b6ac:	sub    DWORD PTR [edx],edi
  40b6ae:	and    eax,0x1bde8e4b
  40b6b3:	nop
  40b6b4:	test   eax,0x8cfbec7e
  40b6b9:	and    DWORD PTR [edx],0xf323c4bb
  40b6bf:	sar    BYTE PTR [ecx-0x5f48854d],1
  40b6c5:	add    ah,dh
  40b6c7:	and    al,0x1d
  40b6c9:	repnz cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b6cc:	push   ss
  40b6cd:	xchg   esi,eax
  40b6ce:	and    al,0xa7
  40b6d0:	fisttp WORD PTR [esi+0x71]
  40b6d3:	pop    esi
  40b6d4:	push   0x993b11ea
  40b6d9:	mov    WORD PTR [esi],gs
  40b6db:	jmp    0x40b6df
  40b6dd:	pusha  
  40b6de:	fnclex 
  40b6e0:	shl    BYTE PTR ds:0xa2b954c9,cl
  40b6e6:	fsub   QWORD PTR [edx]
  40b6e8:	sar    BYTE PTR [ebx+0x54],1
  40b6eb:	stos   DWORD PTR es:[edi],eax
  40b6ec:	add    al,0xde
  40b6ee:	mov    cs,edi
  40b6f0:	push   0xffffffb0
  40b6f2:	js     0x40b75b
  40b6f4:	jge    0x40b72f
  40b6f6:	mov    dl,0x46
  40b6f8:	outs   dx,BYTE PTR ds:[esi]
  40b6f9:	fnsave [ebx-0x1e]
  40b6fc:	inc    ebp
  40b6fd:	push   ebp
  40b6fe:	add    al,0xad
  40b700:	cmp    DWORD PTR ds:0xccfd9fb,edi
  40b706:	fsub   st,st(4)
  40b708:	xchg   esp,eax
  40b709:	das    
  40b70a:	(bad)  
  40b70b:	mov    ebx,0x4ffed616
  40b710:	aad    0xe3
  40b712:	add    BYTE PTR [edx],dl
  40b714:	mov    ch,0xfc
  40b716:	mov    cl,0x3
  40b718:	popa   
  40b719:	adc    eax,0x3a1e4554
  40b71e:	jns    0x40b6bb
  40b720:	xlat   BYTE PTR ds:[ebx]
  40b721:	repz add BYTE PTR [edx+ebx*4],bh
  40b725:	jmp    0x40b73a
  40b727:	mov    ecx,0x131828c2
  40b72c:	fisub  DWORD PTR [eax-0x4c0157b1]
  40b732:	pop    ebx
  40b733:	adc    al,0x8b
  40b735:	sub    esp,edi
  40b737:	cdq    
  40b738:	mov    eax,0x3d6a9fc0
  40b73d:	mov    esp,0x25aa9bd5
  40b742:	mov    edx,0x222018bb
  40b747:	and    eax,0x6f73b000
  40b74c:	ins    DWORD PTR es:[edi],dx
  40b74d:	xchg   ebp,eax
  40b74e:	add    ebp,DWORD PTR [ebp+0x5a14a42a]
  40b754:	stc    
  40b755:	ins    BYTE PTR es:[edi],dx
  40b756:	ins    BYTE PTR es:[edi],dx
  40b757:	jbe    0x40b7c4
  40b759:	jae    0x40b7a0
  40b75b:	(bad)  
  40b75c:	sub    ebp,DWORD PTR [ecx+eiz*2]
  40b75f:	test   al,0x8
  40b761:	push   edx
  40b762:	pop    ecx
  40b763:	and    ebp,0x7cf0a44a
  40b769:	test   DWORD PTR [esi+0x71cbfbdb],0xa0b2ee9f
  40b773:	pop    ebx
  40b774:	sbb    DWORD PTR [esi],ebx
  40b776:	enter  0xb79a,0xa2
  40b77a:	pop    ecx
  40b77b:	dec    esi
  40b77c:	inc    edx
  40b77d:	lea    esp,[ebx+0x7c]
  40b780:	dec    ebx
  40b781:	aas    
  40b782:	xor    BYTE PTR [esi-0x7],bh
  40b785:	add    al,0x42
  40b787:	nop
  40b788:	inc    ebp
  40b789:	sbb    ecx,eax
  40b78b:	push   cs
  40b78c:	fdivp  st(4),st
  40b78e:	mov    ah,BYTE PTR [edi+0x7]
  40b791:	sub    dh,BYTE PTR ds:0x9370b930
  40b797:	fdiv   DWORD PTR [ecx+0x14a22388]
  40b79d:	mov    WORD PTR [edi],?
  40b79f:	push   ecx
  40b7a0:	pop    ss
  40b7a1:	or     DWORD PTR [ecx],edx
  40b7a3:	sbb    bl,dl
  40b7a5:	nop
  40b7a6:	xchg   edi,eax
  40b7a7:	lds    edi,FWORD PTR [esi-0x2]
  40b7aa:	inc    eax
  40b7ab:	jne    0x40b74c
  40b7ad:	or     DWORD PTR [esi+0x2a94a796],ebp
  40b7b3:	mov    DWORD PTR [edx-0x24],ebx
  40b7b6:	cmp    bl,BYTE PTR [esi-0x7f]
  40b7b9:	call   0xa522:0x153c45ed
  40b7c0:	jmp    0x40b836
  40b7c2:	sbb    eax,0x252bd292
  40b7c7:	cs ja  0x40b801
  40b7ca:	jge    0x40b843
  40b7cc:	in     al,0xce
  40b7ce:	pop    eax
  40b7cf:	mov    esi,0xaebcd8f
  40b7d4:	xchg   esi,eax
  40b7d5:	dec    ecx
  40b7d6:	test   eax,0x7be0279c
  40b7db:	sbb    al,0x1
  40b7dd:	rcl    BYTE PTR [eax+0x18d4110c],cl
  40b7e3:	and    DWORD PTR [eax+edi*8-0x61ea85cb],0x32
  40b7eb:	lahf   
  40b7ec:	or     bl,ah
  40b7ee:	data16 fcom QWORD PTR [eax+0x20d0e416]
  40b7f5:	repnz test BYTE PTR [ecx+0x4d],bh
  40b7f9:	push   0xbb2e4d7b
  40b7fe:	mov    bh,0xa5
  40b800:	rcr    bh,cl
  40b802:	scas   eax,DWORD PTR es:[edi]
  40b803:	or     ebx,DWORD PTR [edi+0x594eb404]
  40b809:	test   ebx,ebx
  40b80b:	call   0x1a6c:0x4b5a1819
  40b812:	adc    DWORD PTR [eax],ecx
  40b814:	xor    DWORD PTR [ecx-0x3eb4c8bb],eax
  40b81a:	clc    
  40b81b:	mov    ebp,0x4ce8fbb2
  40b820:	push   edx
  40b821:	aaa    
  40b822:	cmp    BYTE PTR [ebx+0x6c1cef9],ah
  40b828:	xchg   edi,eax
  40b829:	mov    ebx,0x2f3585d8
  40b82e:	pop    es
  40b82f:	jmp    FWORD PTR [ebx+eiz*2]
  40b832:	and    eax,0x2500138a
  40b837:	pusha  
  40b838:	inc    esi
  40b839:	lahf   
  40b83a:	jne    0x40b86f
  40b83c:	dec    eax
  40b83d:	mov    eax,ds:0x1a54a792
  40b842:	xor    ch,BYTE PTR [ebp-0x5f0d1365]
  40b848:	dec    edx
  40b849:	lods   eax,DWORD PTR ds:[esi]
  40b84a:	xor    esp,DWORD PTR [eax]
  40b84c:	nop
  40b84d:	lock in eax,0x6e
  40b850:	sbb    BYTE PTR [esi+0x61],cl
  40b853:	ret    
  40b854:	sub    DWORD PTR [edx-0x59],ebp
  40b857:	pop    ebp
  40b858:	or     cl,bl
  40b85a:	pop    ebp
  40b85b:	iret   
  40b85c:	out    0xd3,eax
  40b85e:	call   0xb68a72b7
  40b863:	dec    esp
  40b864:	es call 0xd050bc6
  40b86a:	out    0x52,eax
  40b86c:	ins    DWORD PTR es:[edi],dx
  40b86d:	es mov edx,0x32b21e9c
  40b873:	or     bh,dh
  40b875:	xchg   BYTE PTR [esp+esi*1+0x15],ah
  40b879:	rcl    eax,1
  40b87b:	pushf  
  40b87c:	pop    edi
  40b87d:	cmp    DWORD PTR [edx-0x756a1ecf],ecx
  40b883:	(bad)  
  40b884:	push   esp
  40b885:	or     DWORD PTR [eax+0x7c559244],ebx
  40b88b:	aam    0x5c
  40b88d:	add    BYTE PTR [esi-0x35],cl
  40b890:	push   es
  40b891:	pop    esi
  40b892:	inc    eax
  40b893:	push   ebp
  40b894:	cmp    ebx,ebx
  40b896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b897:	fs aam 0x38
  40b89a:	or     dh,dl
  40b89c:	lock ret 0x56fc
  40b8a0:	scas   al,BYTE PTR es:[edi]
  40b8a1:	push   0x3c9339ac
  40b8a6:	xor    eax,0x77fa82d1
  40b8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ac:	mov    al,cl
  40b8ae:	jecxz  0x40b8d9
  40b8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b1:	inc    esi
  40b8b2:	or     DWORD PTR [esi],esi
  40b8b4:	mov    BYTE PTR [ebp-0x3fe429cd],cl
  40b8ba:	push   eax
  40b8bb:	repnz push 0xa014d3f8
  40b8c1:	jb     0x40b904
  40b8c3:	adc    eax,DWORD PTR [edi-0x42f2f617]
  40b8c9:	test   BYTE PTR [esi],ah
  40b8cb:	mov    esi,DWORD PTR [ecx]
  40b8cd:	inc    edx
  40b8ce:	xchg   esp,eax
  40b8cf:	push   es
  40b8d0:	inc    edx
  40b8d1:	icebp  
  40b8d2:	bound  esi,QWORD PTR [edi+0x40]
  40b8d5:	fwait
  40b8d6:	fs pusha 
  40b8d8:	imul   esp,DWORD PTR [ebp-0x2e],0xffffffbe
  40b8dc:	fbld   TBYTE PTR cs:[ebp-0x2b9d10c2]
  40b8e3:	scas   eax,DWORD PTR es:[edi]
  40b8e4:	sar    BYTE PTR [edi+0x24],cl
  40b8e7:	fwait
  40b8e8:	add    eax,0x60248d54
  40b8ed:	jp     0x40b959
  40b8ef:	xor    esp,DWORD PTR [ecx+0x30]
  40b8f2:	add    esi,ebx
  40b8f4:	test   eax,0xff4428c1
  40b8f9:	add    eax,0xd704f297
  40b8fe:	xchg   ecx,eax
  40b8ff:	cmp    edx,DWORD PTR [ebx-0x1029823e]
  40b905:	xchg   edx,eax
  40b906:	(bad)  [esi]
  40b908:	jge    0x40b8a5
  40b90a:	mov    ds:0x6fbbeecd,eax
  40b90f:	(bad)  
  40b910:	call   0x84ac0c52
  40b915:	and    ecx,esi
  40b917:	cmp    al,0x34
  40b919:	inc    esp
  40b91a:	lock push edi
  40b91c:	push   ecx
  40b91d:	add    DWORD PTR [edx+0x6b],ebx
  40b920:	push   ds
  40b921:	xor    edx,DWORD PTR [ecx-0x22]
  40b924:	and    ch,bh
  40b926:	test   al,0xcd
  40b928:	repz sub eax,0x4dbd4a7a
  40b92e:	retf   
  40b92f:	jge    0x40b950
  40b931:	mov    edi,0x2d1a05fb
  40b936:	jle    0x40b8cc
  40b938:	mov    WORD PTR [esi],es
  40b93a:	mov    bl,0xff
  40b93c:	shl    BYTE PTR es:[esi],cl
  40b93f:	cmp    DWORD PTR [eax+0x2a7bb7fd],ebp
  40b945:	shr    BYTE PTR [ebx],1
  40b947:	xchg   ebx,eax
  40b948:	(bad)  
  40b949:	cwde   
  40b94a:	aad    0x4
  40b94c:	inc    esp
  40b94d:	jns    0x40b928
  40b94f:	sub    DWORD PTR [edi],edi
  40b951:	shl    DWORD PTR [ecx+0x79],1
  40b954:	sbb    ah,al
  40b956:	cmp    al,0x2e
  40b958:	and    BYTE PTR [esi],0x9a
  40b95b:	(bad)  
  40b95d:	into   
  40b95e:	popf   
  40b95f:	cdq    
  40b960:	std    
  40b961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b962:	(bad)  
  40b963:	out    dx,al
  40b964:	js     0x40b976
  40b966:	push   0xffffffce
  40b968:	repnz mov ecx,0x564ba51a
  40b96e:	and    al,0x1e
  40b970:	sbb    BYTE PTR [ecx-0x38],ch
  40b973:	sahf   
  40b974:	jge    0x40b99f
  40b976:	or     DWORD PTR [edx-0x51],ebx
  40b979:	mov    BYTE PTR [esi-0x2b5fa688],dl
  40b97f:	inc    dx
  40b981:	push   es
  40b982:	mov    cs:0x9d0a07d5,al
  40b988:	shl    DWORD PTR [ebx],0x24
  40b98b:	xor    BYTE PTR [esi+ecx*4],ch
  40b98e:	push   0x6f42f85c
  40b993:	jns    0x40b999
  40b995:	ret    
  40b996:	adc    eax,0x8173aaac
  40b99b:	push   edi
  40b99c:	pop    ecx
  40b99d:	shr    BYTE PTR [di-0x48],cl
  40b9a1:	inc    eax
  40b9a2:	push   esi
  40b9a3:	or     eax,0x470527f6
  40b9a8:	iret   
  40b9a9:	scas   eax,DWORD PTR es:[edi]
  40b9aa:	pushf  
  40b9ab:	and    eax,0x34338384
  40b9b0:	push   ss
  40b9b1:	push   cs
  40b9b2:	fwait
  40b9b3:	adc    eax,0xf9614f36
  40b9b8:	push   ss
  40b9b9:	div    DWORD PTR [edx]
  40b9bb:	out    dx,al
  40b9bc:	cmp    dl,dh
  40b9be:	std    
  40b9bf:	aas    
  40b9c0:	mov    al,ds:0x3c0c4fe6
  40b9c5:	mov    BYTE PTR [esi+0x60f3bc1f],dl
  40b9cb:	mov    al,ds:0xc63e9dd8
  40b9d0:	push   cs
  40b9d1:	gs iret 
  40b9d3:	cli    
  40b9d4:	iret   
  40b9d5:	imul   DWORD PTR [ecx+0x2cc47e00]
  40b9db:	fisubr WORD PTR [eax]
  40b9dd:	popa   
  40b9de:	sub    DWORD PTR [edi],edx
  40b9e0:	inc    edi
  40b9e1:	pushf  
  40b9e2:	arpl   bp,cx
  40b9e4:	jmp    0x12d7:0x25630aa8
  40b9eb:	je     0x40b9e1
  40b9ed:	or     al,0xc
  40b9ef:	popa   
  40b9f0:	xor    BYTE PTR [edi+ebx*4],ch
  40b9f3:	cmp    cl,0x7d
  40b9f6:	ja     0x40b99d
  40b9f8:	shl    al,0xb4
  40b9fb:	pushf  
  40b9fc:	sbb    DWORD PTR [ebp+ebp*1+0x47],ebp
  40ba00:	cmp    al,0xfe
  40ba02:	xor    ebx,0x75
  40ba05:	inc    ebx
  40ba06:	sar    esi,0x3d
  40ba09:	dec    esp
  40ba0a:	pop    ds
  40ba0b:	shr    DWORD PTR [ebp+0x50584cd8],cl
  40ba11:	adc    ebx,DWORD PTR [esi]
  40ba13:	mov    ds:0x679edf85,al
  40ba18:	push   ss
  40ba19:	mov    ebp,0xd7831304
  40ba1e:	dec    esp
  40ba1f:	sbb    BYTE PTR [edx+eax*1-0x18],al
  40ba23:	mov    eax,ds:0x61038595
  40ba28:	lea    ebp,[eax-0x3290b278]
  40ba2e:	pop    esp
  40ba2f:	sti    
  40ba30:	je     0x40b9ce
  40ba32:	repz add eax,0xa788bd5c
  40ba38:	jbe    0x40ba99
  40ba3a:	dec    esi
  40ba3b:	jle    0x40b9e8
  40ba3d:	test   al,0xe3
  40ba3f:	or     bl,0x9c
  40ba42:	and    edx,eax
  40ba44:	lea    esi,es:[ecx+0xe4c399b]
  40ba4b:	inc    edi
  40ba4c:	or     eax,0xa077d8ca
  40ba51:	(bad)  
  40ba52:	in     eax,dx
  40ba53:	out    0x51,eax
  40ba55:	(bad)  
  40ba56:	aas    
  40ba57:	hlt    
  40ba58:	inc    esi
  40ba59:	sahf   
  40ba5a:	cs ss jbe 0x40b9e4
  40ba5e:	popa   
  40ba5f:	mov    ebp,0x904f71b1
  40ba64:	sbb    DWORD PTR [edi+0xa745048],esi
  40ba6a:	push   esi
  40ba6b:	xchg   ebx,eax
  40ba6c:	and    DWORD PTR [esp+eax*1-0x15d86566],0x62661402
  40ba77:	aaa    
  40ba78:	fcomp  st(1)
  40ba7a:	inc    esi
  40ba7b:	or     DWORD PTR [edi+0x37b93cc8],ecx
  40ba81:	(bad)
  40ba86:	xchg   edi,eax
  40ba87:	test   BYTE PTR [esi],ah
  40ba89:	sbb    BYTE PTR [edi],0x24
  40ba8c:	pop    ds
  40ba8d:	out    0xec,al
  40ba8f:	xchg   edx,eax
  40ba90:	mov    edx,0x4f732578
  40ba95:	ss ss scas eax,DWORD PTR es:[edi]
  40ba98:	fnsave [edx-0x73]
  40ba9b:	pop    ecx
  40ba9c:	push   ss
  40ba9d:	jae    0x40bae8
  40ba9f:	pop    ecx
  40baa0:	add    al,0x8c
  40baa2:	sub    eax,0x95857573
  40baa7:	sub    ah,BYTE PTR [edi]
  40baa9:	push   edi
  40baaa:	imul   edi,DWORD PTR [ebp-0x29],0x11
  40baae:	xchg   ebp,eax
  40baaf:	cmp    BYTE PTR [eax],dh
  40bab1:	mov    cl,0x48
  40bab3:	ss ins DWORD PTR es:[edi],dx
  40bab5:	jae    0x40bab1
  40bab7:	fcmovbe st,st(0)
  40bab9:	into   
  40baba:	das    
  40babb:	jno    0x40bb25
  40babd:	lods   al,BYTE PTR ds:[esi]
  40babe:	out    0xa1,al
  40bac0:	fisttp DWORD PTR [edx-0x3997bf79]
  40bac6:	mov    WORD PTR [edx],cs
  40bac8:	push   0xdaedaa4f
  40bacd:	mov    esp,0xd7454257
  40bad2:	pop    es
  40bad3:	leave  
  40bad4:	frstor [eax*2+0x3c3cdd7e]
  40badb:	(bad)  
  40badc:	sti    
  40badd:	aaa    
  40bade:	mul    dl
  40bae0:	scas   al,BYTE PTR es:[edi]
  40bae1:	or     eax,0x5c3a1d44
  40bae6:	mov    ebx,0x9f8a9981
  40baeb:	adc    BYTE PTR ds:[esi-0x217624d4],bl
  40baf2:	jae    0x40bb11
  40baf4:	sub    eax,0x37c11caa
  40baf9:	rol    DWORD PTR [esi],1
  40bafb:	sbb    edx,DWORD PTR [ebp-0x73]
  40bafe:	pop    ebp
  40baff:	sbb    eax,0x5173bb15
  40bb04:	ins    BYTE PTR es:[edi],dx
  40bb05:	vmaxsd xmm6,xmm6,QWORD PTR ds:[ebp-0x34675f2f]
  40bb0e:	je     0x40bb21
  40bb10:	cmp    ebp,DWORD PTR [edi+0x1368602]
  40bb16:	sbb    eax,0xdf0e90c1
  40bb1b:	shl    DWORD PTR [ebx],0x75
  40bb1e:	scas   al,BYTE PTR es:[edi]
  40bb1f:	sbb    ch,dl
  40bb21:	push   esp
  40bb22:	dec    eax
  40bb23:	pop    ebp
  40bb24:	cmp    esp,DWORD PTR [ecx-0x77]
  40bb27:	fdiv   DWORD PTR [edx-0x60]
  40bb2a:	lds    ecx,FWORD PTR [ecx-0x2797d806]
  40bb30:	and    DWORD PTR [edi-0x601d6888],edx
  40bb36:	test   al,0x1b
  40bb38:	add    al,0xa1
  40bb3a:	mov    esp,0x203d49fc
  40bb3f:	cmp    edi,DWORD PTR [esi+0x56]
  40bb42:	mov    eax,0x1157a0ac
  40bb47:	dec    eax
  40bb48:	mov    al,0x3
  40bb4a:	clc    
  40bb4b:	jecxz  0x40bb94
  40bb4d:	out    dx,eax
  40bb4e:	scas   al,BYTE PTR es:[edi]
  40bb4f:	jge    0x40bb89
  40bb51:	rcr    BYTE PTR [esi+ebp*2+0x5e],1
  40bb55:	jb     0x40bbc3
  40bb57:	mov    bh,0xe0
  40bb59:	mov    al,0x2b
  40bb5b:	cwde   
  40bb5c:	push   ebx
  40bb5d:	mov    esp,DWORD PTR [ebx-0xb]
  40bb60:	jns    0x40bb2b
  40bb62:	dec    edx
  40bb63:	mov    edx,0xc659b05a
  40bb68:	xchg   esi,eax
  40bb69:	test   BYTE PTR [ecx-0x2b],ch
  40bb6c:	mov    al,ds:0x5a50513
  40bb71:	adc    al,BYTE PTR [ebx]
  40bb73:	into   
  40bb74:	push   0xe
  40bb76:	dec    edx
  40bb77:	pop    ebp
  40bb78:	xor    dl,bh
  40bb7a:	clc    
  40bb7b:	or     al,0xd6
  40bb7d:	mov    WORD PTR [edi+ebx*1],?
  40bb80:	jbe    0x40bb33
  40bb82:	int    0xf8
  40bb84:	dec    edi
  40bb85:	out    dx,eax
  40bb86:	sbb    bh,BYTE PTR [ecx+ecx*4-0x1e]
  40bb8a:	push   ds
  40bb8b:	and    al,BYTE PTR [esi-0x50]
  40bb8e:	dec    edx
  40bb8f:	or     DWORD PTR [edi],esi
  40bb91:	mov    ?,WORD PTR [edx]
  40bb93:	hlt    
  40bb94:	stos   DWORD PTR es:[edi],eax
  40bb95:	push   eax
  40bb96:	int    0x8f
  40bb98:	imul   ebx,ebx,0x42a3c4e4
  40bb9e:	mov    cl,0xe2
  40bba0:	push   es
  40bba1:	lods   eax,DWORD PTR ds:[esi]
  40bba2:	test   DWORD PTR [edi],esp
  40bba4:	ja     0x40bba5
  40bba6:	and    al,0x33
  40bba8:	add    bl,0xe3
  40bbab:	outs   dx,DWORD PTR ds:[esi]
  40bbac:	inc    eax
  40bbad:	or     cl,dl
  40bbaf:	(bad)  
  40bbb0:	mov    dl,0x86
  40bbb2:	cmp    esp,DWORD PTR ds:0x5f0d5e48
  40bbb8:	mov    ds:0x98ca7414,eax
  40bbbd:	jg     0x40bbd1
  40bbbf:	aam    0xcb
  40bbc1:	retf   0x5ca8
  40bbc4:	jle    0x40bba3
  40bbc6:	push   ebp
  40bbc7:	and    eax,0x834b424e
  40bbcc:	lahf   
  40bbcd:	pop    esp
  40bbce:	inc    edx
  40bbcf:	xchg   edx,eax
  40bbd0:	enter  0xf724,0x99
  40bbd4:	loop   0x40bc3d
  40bbd6:	xor    eax,0x8bd727c8
  40bbdb:	cmp    al,0x3e
  40bbdd:	cmc    
  40bbde:	shr    ah,0x6e
  40bbe1:	pushf  
  40bbe2:	cmp    cl,BYTE PTR [edi-0x3e]
  40bbe5:	xchg   esi,eax
  40bbe6:	bound  esp,QWORD PTR [ebp-0x53e1a9b3]
  40bbec:	sbb    esi,ebx
  40bbee:	popf   
  40bbef:	arpl   WORD PTR [eax-0x1f456d9c],si
  40bbf5:	ins    DWORD PTR es:[edi],dx
  40bbf6:	or     al,0x9a
  40bbf8:	dec    esi
  40bbf9:	sub    BYTE PTR ds:0xfd6c9cbc,0xc4
  40bc00:	jno    0x40bbc9
  40bc02:	leave  
  40bc03:	call   0x2b6d:0x6c65d2b4
  40bc0a:	in     al,dx
  40bc0b:	dec    eax
  40bc0c:	mov    DWORD PTR [ebx],0x83643348
  40bc12:	push   eax
  40bc13:	push   es
  40bc14:	sub    eax,0xbd56ab9a
  40bc19:	ss js  0x40bc56
  40bc1c:	sub    bh,dl
  40bc1e:	adc    al,0x42
  40bc20:	dec    ecx
  40bc21:	fidiv  DWORD PTR [edx-0x727f3d76]
  40bc27:	test   DWORD PTR [ecx+0x1],ecx
  40bc2a:	or     DWORD PTR [edx-0x5fc2d99e],eax
  40bc30:	pop    ds
  40bc31:	sahf   
  40bc32:	push   ecx
  40bc33:	not    BYTE PTR [edi+edx*4]
  40bc36:	outs   dx,DWORD PTR ds:[esi]
  40bc37:	jp     0x40bbf9
  40bc39:	xor    al,0x76
  40bc3b:	test   al,0x81
  40bc3d:	pop    edi
  40bc3e:	popa   
  40bc3f:	js     0x40bc3a
  40bc41:	pushf  
  40bc42:	push   eax
  40bc43:	inc    esp
  40bc44:	outs   dx,DWORD PTR ds:[esi]
  40bc45:	xchg   BYTE PTR [edx],cl
  40bc47:	mov    ds:0x3431b03f,al
  40bc4c:	test   BYTE PTR [ecx],0xd2
  40bc4f:	stos   DWORD PTR es:[edi],eax
  40bc50:	mov    bl,0xcb
  40bc52:	xchg   edx,eax
  40bc53:	xchg   BYTE PTR [ebp-0x357fee0c],bh
  40bc59:	pop    edi
  40bc5a:	push   ss
  40bc5b:	rol    DWORD PTR [edi+0x6574bbdb],cl
  40bc61:	add    ebx,DWORD PTR [eax-0x77b43e68]
  40bc67:	push   ebx
  40bc68:	jge    0x40bc35
  40bc6a:	mov    ds:0xbde37347,eax
  40bc6f:	(bad)  
  40bc70:	cld    
  40bc71:	xor    BYTE PTR [ebx-0x41],bl
  40bc74:	dec    esp
  40bc75:	xor    al,0x3b
  40bc77:	cmp    DWORD PTR [ebx+0x4f5471cd],esp
  40bc7d:	das    
  40bc7e:	test   edx,0xd1c5c856
  40bc84:	adc    eax,0x66d86e1d
  40bc89:	js     0x40bc79
  40bc8b:	into   
  40bc8c:	rcr    BYTE PTR [esi-0x1a],1
  40bc8f:	in     eax,0x31
  40bc91:	mov    esp,0xa3b7d434
  40bc96:	int    0x64
  40bc98:	fs jns 0x40bc3b
  40bc9b:	aas    
  40bc9c:	sbb    BYTE PTR [eax-0x33],0x89
  40bca0:	pop    esp
  40bca1:	mov    eax,0xd2bda3cf
  40bca6:	lods   eax,DWORD PTR ds:[esi]
  40bca7:	(bad)  
  40bca8:	xchg   ebx,eax
  40bca9:	xchg   edx,eax
  40bcaa:	div    DWORD PTR ds:0x12125929
  40bcb0:	and    ebx,DWORD PTR [esi]
  40bcb2:	(bad)  
  40bcb3:	rcl    BYTE PTR ds:0x74afb7b3,0x8b
  40bcba:	shr    cl,1
  40bcbc:	jbe    0x40bcc3
  40bcbe:	pop    esi
  40bcbf:	mov    al,0x4
  40bcc1:	inc    eax
  40bcc2:	pop    esp
  40bcc3:	mov    esp,0x64c84ac6
  40bcc8:	and    eax,0x574cbd4b
  40bccd:	(bad)
  40bcd0:	sbb    eax,0x96069645
  40bcd5:	and    bh,BYTE PTR [esp+eax*8]
  40bcd8:	sbb    BYTE PTR [ebx-0x6],ah
  40bcdb:	xor    al,BYTE PTR [eax]
  40bcdd:	push   edx
  40bcde:	mov    esi,0x66888803
  40bce3:	ret    
  40bce4:	adc    al,0x88
  40bce6:	mov    eax,DWORD PTR ds:0x5b65da9c
  40bcec:	mov    ch,0xb5
  40bcee:	popf   
  40bcef:	mov    ecx,0x3c426324
  40bcf4:	jnp    0x40bcba
  40bcf6:	push   edx
  40bcf7:	ret    0xa4fd
  40bcfa:	mov    eax,0x9a4efd06
  40bcff:	xchg   BYTE PTR [eax],dh
  40bd01:	xchg   DWORD PTR [esi+edx*8-0x3521a734],edx
  40bd08:	push   0xf94592aa
  40bd0d:	popa   
  40bd0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd0f:	push   0x1d36db64
  40bd14:	dec    esp
  40bd15:	cmp    ecx,DWORD PTR [ebp-0x7a]
  40bd18:	xor    eax,0x605205e0
  40bd1d:	cmc    
  40bd1e:	cwde   
  40bd1f:	repz and edx,DWORD PTR [edi+0x62822759]
  40bd26:	inc    esi
  40bd27:	cwde   
  40bd28:	mov    bh,0x7f
  40bd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd2b:	std    
  40bd2c:	cli    
  40bd2d:	ret    0x6fc3
  40bd30:	fadd   QWORD PTR [ebx+0x50bc59a0]
  40bd36:	or     esp,DWORD PTR [ebp-0x38596c94]
  40bd3c:	out    0x8a,al
  40bd3e:	and    BYTE PTR [edx+eax*4],cl
  40bd41:	push   ebp
  40bd42:	cmp    edx,DWORD PTR [ebx-0x1]
  40bd45:	xchg   ebx,eax
  40bd46:	pop    ebp
  40bd47:	pusha  
  40bd48:	push   edi
  40bd49:	push   ecx
  40bd4a:	or     BYTE PTR [ebx+0x20fb6172],ch
  40bd50:	rcl    DWORD PTR [eax+eiz*1+0x6102eec0],1
  40bd57:	push   eax
  40bd58:	mov    bl,0xb4
  40bd5a:	inc    esp
  40bd5b:	adc    esi,ebp
  40bd5d:	data16 mov cl,0xa5
  40bd60:	add    eax,0x8b10fd66
  40bd65:	and    al,bh
  40bd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd68:	cs ret 0x3363
  40bd6c:	mov    BYTE PTR [ecx-0x765f0749],0x2a
  40bd73:	sbb    dl,BYTE PTR [eax]
  40bd75:	mov    ds:0x90ee3f8f,al
  40bd7a:	or     ch,bl
  40bd7c:	sub    esi,DWORD PTR [ebx-0x5257692f]
  40bd82:	dec    ecx
  40bd83:	pop    edx
  40bd84:	popf   
  40bd85:	test   cl,dl
  40bd87:	scas   eax,DWORD PTR es:[edi]
  40bd88:	mov    ecx,0x4f1ffa0
  40bd8d:	icebp  
  40bd8e:	ret    0x9986
  40bd91:	or     ecx,ebp
  40bd93:	mov    dl,0xea
  40bd95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd96:	in     al,0x3c
  40bd98:	mov    ebx,0xe28a1fe4
  40bd9d:	sub    eax,DWORD PTR [eax+0xd]
  40bda0:	enter  0x9647,0x55
  40bda4:	mov    WORD PTR [esi-0xe1f7389],ds
  40bdaa:	push   ebx
  40bdab:	lods   al,BYTE PTR ds:[esi]
  40bdac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdad:	or     eax,0x5cf29d07
  40bdb2:	inc    edi
  40bdb3:	enter  0xbd21,0xde
  40bdb7:	dec    ecx
  40bdb8:	fmul   QWORD PTR [edi]
  40bdba:	mov    esi,0x842f5fde
  40bdbf:	and    al,0xa5
  40bdc1:	jmp    0x6592:0xba0c91b2
  40bdc8:	mov    ds:0xb2a623d5,al
  40bdcd:	add    dh,BYTE PTR [edx]
  40bdcf:	inc    eax
  40bdd0:	mov    ah,0x52
  40bdd2:	cmp    al,0x2b
  40bdd4:	cmp    BYTE PTR [edx+0x72],0x61
  40bdd8:	icebp  
  40bdd9:	aam    0x93
  40bddb:	test   eax,0x4edb87c3
  40bde0:	or     eax,0x1de3ff76
  40bde5:	cmp    cl,dl
  40bde7:	fsub   QWORD PTR [ecx+0x4d]
  40bdea:	mov    dl,0x80
  40bdec:	mov    bl,0x36
  40bdee:	and    BYTE PTR [ecx-0x786cc5e6],bl
  40bdf4:	xchg   ebp,eax
  40bdf5:	loop   0x40be14
  40bdf7:	jae    0x40bd80
  40bdf9:	and    bh,BYTE PTR [edx-0x1a]
  40bdfc:	hlt    
  40bdfd:	add    al,0x91
  40bdff:	ror    dl,1
  40be01:	aam    0x6
  40be03:	loopne 0x40bd8f
  40be05:	and    dh,BYTE PTR [esi]
  40be07:	rcl    DWORD PTR [ebx-0x45f962eb],0xe7
  40be0e:	inc    ebx
  40be0f:	js     0x40be02
  40be11:	int3   
  40be12:	xor    edi,eax
  40be14:	dec    esi
  40be15:	and    BYTE PTR [esi-0x2517114f],bl
  40be1b:	cwde   
  40be1c:	js     0x40be7c
  40be1e:	or     eax,DWORD PTR [eax-0x5103be1f]
  40be24:	fsub   DWORD PTR [ebp+ebx*1-0x25c7b473]
  40be2b:	xchg   esi,eax
  40be2c:	scas   al,BYTE PTR es:[edi]
  40be2d:	pop    eax
  40be2e:	mov    edx,0xbc0f11c3
  40be33:	push   ss
  40be34:	mov    DWORD PTR [ecx],edi
  40be36:	cmp    ch,BYTE PTR [edx]
  40be38:	add    esp,DWORD PTR [edx+0x60610206]
  40be3e:	sub    esi,DWORD PTR [ecx+0x234b6d07]
  40be44:	xchg   BYTE PTR [eax],bh
  40be46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be47:	and    al,0x83
  40be49:	mov    ds:0x93a6fff7,al
  40be4e:	outs   dx,BYTE PTR ds:[esi]
  40be4f:	addr16 adc eax,0x7905f861
  40be55:	test   al,0x3f
  40be57:	mov    cl,0x19
  40be59:	mov    bl,0x58
  40be5b:	inc    eax
  40be5c:	es mov ecx,0x97c7ba83
  40be62:	add    BYTE PTR [ebp+eiz*8-0x63],bl
  40be66:	shr    BYTE PTR [edx-0x45],1
  40be69:	adc    eax,eax
  40be6b:	adc    BYTE PTR [ebx-0x53],dl
  40be6e:	sub    dh,ah
  40be70:	pop    ecx
  40be71:	out    dx,eax
  40be72:	and    al,0x26
  40be74:	aam    0x9a
  40be76:	add    al,0x4a
  40be78:	push   ecx
  40be79:	mov    ah,0xac
  40be7b:	or     eax,0xe822ae88
  40be80:	push   ds
  40be81:	add    DWORD PTR [edi+0x10],esi
  40be84:	sbb    DWORD PTR [edx+0x541cd1a8],eax
  40be8a:	jne    0x40be6b
  40be8c:	inc    edi
  40be8d:	jecxz  0x40be52
  40be8f:	leave  
  40be90:	jmp    0xe9c23318
  40be95:	fld    TBYTE PTR [eax+0x41]
  40be98:	mov    dh,0x34
  40be9a:	(bad)  
  40be9b:	sub    BYTE PTR [ebx+0x7f15ee2e],al
  40bea1:	jbe    0x40bed9
  40bea3:	push   ecx
  40bea4:	inc    esi
  40bea5:	(bad)  
  40bea6:	cli    
  40bea7:	fiadd  WORD PTR [edx]
  40bea9:	jae    0x40beec
  40beab:	pop    esp
  40beac:	pop    edx
  40bead:	jge    0x40bf2e
  40beaf:	jo     0x40bf14
  40beb1:	retf   0x5760
  40beb4:	test   al,0xf3
  40beb6:	push   ds
  40beb7:	inc    edi
  40beb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb9:	sbb    eax,0x10a18942
  40bebe:	pop    ebp
  40bebf:	aad    0x93
  40bec1:	call   0x8cf2:0xedcff7d4
  40bec8:	fsub   st(4),st
  40beca:	lock retf 0x8eee
  40bece:	fisttp WORD PTR [ebp-0x54ecac31]
  40bed4:	jg     0x40beec
  40bed6:	push   ds
  40bed7:	mov    dl,0x3a
  40bed9:	jmp    0xe33d:0x8124de6
  40bee0:	ss dec eax
  40bee2:	mov    esp,0x6b40fffc
  40bee7:	call   0xa5c94f4c
  40beec:	add    eax,0xda692a99
  40bef1:	cmc    
  40bef2:	iret   
  40bef3:	xor    dl,BYTE PTR [edi+0x74ef759]
  40bef9:	jmp    0xd5d0:0x8af8e508
  40bf00:	jbe    0x40bf05
  40bf02:	xor    cl,BYTE PTR [esi]
  40bf04:	gs mov ebp,0x95ecc3d3
  40bf0a:	pop    DWORD PTR [edi-0x28]
  40bf0d:	mov    ds:0x97263a48,eax
  40bf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf13:	std    
  40bf14:	push   0x21c376b8
  40bf19:	rcl    DWORD PTR [ebx],0xb0
  40bf1c:	push   ds
  40bf1d:	cli    
  40bf1e:	dec    esi
  40bf1f:	loopne 0x40bf21
  40bf21:	mov    al,0x41
  40bf23:	sub    ecx,esi
  40bf25:	cli    
  40bf26:	dec    ecx
  40bf27:	add    DWORD PTR [ecx],esp
  40bf29:	mov    cl,0x2b
  40bf2b:	test   al,0x72
  40bf2d:	ror    DWORD PTR [esi-0x260572c8],1
  40bf33:	and    DWORD PTR [eax-0x5f1c382d],esi
  40bf39:	pusha  
  40bf3a:	jg     0x40bf55
  40bf3c:	jbe    0x40bf75
  40bf3e:	cli    
  40bf3f:	xor    DWORD PTR [ecx+0x69],edi
  40bf42:	and    eax,0xb587e19c
  40bf47:	xchg   esp,ebp
  40bf49:	cmp    BYTE PTR [edi+ecx*4+0x223c6c3c],dh
  40bf50:	sbb    al,BYTE PTR [edx+0xa]
  40bf53:	call   0x7c283cfc
  40bf58:	pop    ebx
  40bf59:	loop   0x40befa
  40bf5b:	xchg   DWORD PTR [ebx-0x28e56213],ecx
  40bf61:	mov    bl,0xe
  40bf63:	jbe    0x40bee9
  40bf65:	adc    BYTE PTR [edi+0x71],ah
  40bf68:	cmp    eax,0x4902b9f5
  40bf6d:	int    0x58
  40bf6f:	lods   eax,DWORD PTR ds:[esi]
  40bf70:	mov    edx,0xb83ee853
  40bf75:	aam    0xff
  40bf77:	jecxz  0x40bfcd
  40bf79:	ins    BYTE PTR es:[edi],dx
  40bf7a:	retf   0x7c4f
  40bf7d:	mov    ch,0x79
  40bf7f:	je     0x40bfb2
  40bf81:	cdq    
  40bf82:	(bad)  
  40bf84:	or     eax,0x6f2d886b
  40bf89:	imul   ebx,edx,0xa4175ffe
  40bf8f:	popa   
  40bf90:	or     BYTE PTR [edi+0x24],cl
  40bf93:	sbb    cl,BYTE PTR [ecx]
  40bf95:	push   ss
  40bf96:	mov    bh,0x98
  40bf98:	pushf  
  40bf99:	sbb    DWORD PTR [edi+edi*4],eax
  40bf9c:	jbe    0x40bf8f
  40bf9e:	inc    edx
  40bf9f:	adc    DWORD PTR ds:0x7cfc5402,ebx
  40bfa5:	scas   al,BYTE PTR es:[edi]
  40bfa6:	jp     0x40bf46
  40bfa8:	fdivr  DWORD PTR [esi-0x44]
  40bfab:	fdivr  st,st(6)
  40bfad:	ficomp DWORD PTR [edx-0x3b]
  40bfb0:	imul   eax,DWORD PTR [ebx+0xc],0x3e
  40bfb4:	scas   al,BYTE PTR es:[edi]
  40bfb5:	jmp    0xe1a5:0xe500a927
  40bfbc:	iret   
  40bfbd:	dec    DWORD PTR [ebx]
  40bfbf:	sahf   
  40bfc0:	add    ebp,DWORD PTR [edx+0x35]
  40bfc3:	cs nop
  40bfc5:	mov    eax,cs:0x1c08ffc6
  40bfcb:	mov    eax,ds:0x441b4346
  40bfd0:	bound  ebp,QWORD PTR [edi+0x77]
  40bfd3:	dec    esi
  40bfd4:	cmp    DWORD PTR [ebx+0x3d01c906],0x9
  40bfdb:	fisttp QWORD PTR [edx+0x3d]
  40bfde:	cwde   
  40bfdf:	icebp  
  40bfe0:	add    dh,BYTE PTR ds:0x13e674f7
  40bfe6:	adc    al,0x54
  40bfe8:	and    DWORD PTR [ebp+0x6f4b081f],ecx
  40bfee:	test   al,0x68
  40bff0:	sbb    ch,ah
  40bff2:	mov    edi,0xa23aebb5
  40bff7:	retf   
  40bff8:	push   esi
  40bff9:	lods   eax,DWORD PTR ds:[esi]
  40bffa:	push   ss
  40bffb:	imul   BYTE PTR ss:[eax-0x2f]
  40bfff:	jne    0x40c057
  40c001:	push   ss
  40c002:	ins    DWORD PTR es:[edi],dx
  40c003:	xor    ecx,0x10
  40c006:	and    BYTE PTR [esi+0x4d5f8a09],0x35
  40c00d:	dec    edi
  40c00e:	aaa    
  40c00f:	cmp    eax,0xff28d570
  40c014:	jmp    0xa7d65a5
  40c019:	pop    esp
  40c01a:	aad    0x2
  40c01c:	pop    edi
  40c01d:	aam    0x40
  40c01f:	xor    esp,DWORD PTR [edi+0x2e]
  40c022:	sub    al,0x74
  40c024:	mov    cl,BYTE PTR [esi-0x58]
  40c027:	loope  0x40bfb1
  40c029:	outs   dx,BYTE PTR ds:[esi]
  40c02a:	pop    ecx
  40c02b:	imul   ecx,DWORD PTR [ecx-0x2e4394a1],0xffffffde
  40c032:	(bad)  
  40c034:	sti    
  40c035:	jb     0x40c04c
  40c037:	cs jne 0x40c08a
  40c03a:	packuswb mm7,QWORD PTR [ebp+edx*1+0x62]
  40c03f:	std    
  40c040:	or     ch,BYTE PTR [edi+0x7b99d999]
  40c046:	jl     0x40c09a
  40c048:	pop    edi
  40c049:	call   0xc77:0x647c070e
  40c050:	mov    cs:0xb37c7b4d,al
  40c056:	xor    BYTE PTR [esi],ch
  40c058:	imul   BYTE PTR [ebx+0x5bd70b43]
  40c05e:	xor    BYTE PTR ds:0x23d468d4,bh
  40c064:	cmp    BYTE PTR [ebx+0x5b],0xf3
  40c068:	shl    dl,1
  40c06a:	inc    ebx
  40c06b:	(bad)  
  40c06c:	clc    
  40c06d:	leave  
  40c06e:	pop    eax
  40c06f:	mov    DWORD PTR [esp+eiz*2-0x37a6ca2c],edi
  40c076:	pop    eax
  40c077:	imul   ecx,esp,0x19
  40c07a:	sbb    dh,cl
  40c07c:	jne    0x40c0df
  40c07e:	inc    eax
  40c07f:	scas   eax,DWORD PTR es:[edi]
  40c080:	repnz gs stos BYTE PTR es:[edi],al
  40c083:	xor    bl,BYTE PTR [ecx]
  40c085:	int3   
  40c086:	arpl   si,dx
  40c088:	or     DWORD PTR [eax-0x9809541],eax
  40c08e:	shl    DWORD PTR ss:[edx+0x3d],cl
  40c092:	and    al,0x18
  40c094:	dec    edx
  40c095:	dec    eax
  40c096:	in     al,dx
  40c097:	mov    dl,0xac
  40c099:	std    
  40c09a:	mov    ds:0x7399865f,al
  40c09f:	imul   edi,DWORD PTR [eax-0x1d],0x25ed362b
  40c0a6:	pop    eax
  40c0a7:	cmp    esi,eax
  40c0a9:	loopne 0x40c04a
  40c0ab:	rcr    DWORD PTR [edx],0x55
  40c0ae:	imul   ecx,edx,0xffffff99
  40c0b1:	test   al,0xb6
  40c0b3:	nop
  40c0b4:	fcomp  DWORD PTR [ecx+eiz*8]
  40c0b7:	enter  0x5df5,0x69
  40c0bb:	in     al,dx
  40c0bc:	sahf   
  40c0bd:	lock cmp BYTE PTR [eax+0x1df92439],al
  40c0c4:	loope  0x40c103
  40c0c6:	push   eax
  40c0c7:	ror    BYTE PTR [edx-0x19],0xcb
  40c0cb:	fwait
  40c0cc:	rol    cl,0x5f
  40c0cf:	xlat   BYTE PTR ds:[ebx]
  40c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d1:	aad    0x41
  40c0d3:	lahf   
  40c0d4:	mov    dl,0xc4
  40c0d6:	ja     0x40c11f
  40c0d8:	mov    esp,0x4399b321
  40c0dd:	push   ss
  40c0de:	aam    0xf3
  40c0e0:	fs and dh,al
  40c0e3:	fcmovbe st,st(2)
  40c0e5:	sub    eax,0xa88a1750
  40c0ea:	cli    
  40c0eb:	inc    eax
  40c0ec:	fadd   QWORD PTR [eax+0x15]
  40c0ef:	add    bl,BYTE PTR [ebp+eax*8+0x6]
  40c0f3:	xchg   edx,eax
  40c0f4:	jmp    DWORD PTR [eax+0x10]
  40c0f7:	mov    ebx,0xb9334d5a
  40c0fc:	jno    0x40c08e
  40c0fe:	int3   
  40c0ff:	xchg   BYTE PTR [esi-0x7ed57648],bh
  40c105:	pop    es
  40c106:	mov    ecx,0xd018b36d
  40c10b:	cmp    BYTE PTR [edi+0x62],bl
  40c10e:	mov    bh,0x13
  40c110:	or     bh,BYTE PTR [ecx]
  40c112:	push   ebp
  40c113:	in     al,0x8
  40c115:	dec    ebp
  40c116:	pop    ebp
  40c117:	setae  BYTE PTR [edi+eax*4+0x18cf40f3]
  40c11f:	jmp    0x60b250a5
  40c124:	mov    DWORD PTR [ebx-0x4c],ecx
  40c127:	arpl   WORD PTR [edx],dx
  40c129:	xchg   edx,eax
  40c12a:	out    0xe0,al
  40c12c:	aas    
  40c12d:	nop
  40c12e:	xchg   ebp,eax
  40c12f:	inc    esp
  40c130:	sahf   
  40c131:	mov    bl,BYTE PTR [edx]
  40c133:	ins    BYTE PTR es:[edi],dx
  40c134:	sub    ebx,DWORD PTR [ecx]
  40c136:	loope  0x40c0f7
  40c138:	jb     0x40c1ab
  40c13a:	mov    esi,0x4d127cdf
  40c13f:	imul   edx,ebp,0xffffffdb
  40c142:	ja     0x40c128
  40c144:	pop    eax
  40c145:	xor    eax,0x7d5b2aea
  40c14a:	enter  0xa049,0x67
  40c14e:	(bad)  
  40c14f:	fadd   DWORD PTR [edi+0x78]
  40c152:	setb   BYTE PTR [edx+ebp*4+0x5536c25b]
  40c15a:	imul   edi,DWORD PTR [ebp+0x45b594d1],0xb4699e8b
  40c164:	inc    esi
  40c165:	jle    0x40c1da
  40c167:	fidivr WORD PTR [eax]
  40c169:	inc    eax
  40c16a:	push   esp
  40c16b:	outs   dx,BYTE PTR ds:[esi]
  40c16c:	inc    edx
  40c16d:	outs   dx,BYTE PTR ds:[esi]
  40c16e:	sbb    BYTE PTR [ebx-0x16],0xa9
  40c172:	ret    
  40c173:	shr    DWORD PTR [esi-0x3d9cf810],1
  40c179:	mov    BYTE PTR [ecx+0x34],dh
  40c17c:	xchg   edx,eax
  40c17d:	rol    DWORD PTR [ecx-0x50f36b4f],0x3e
  40c184:	pop    esi
  40c185:	std    
  40c186:	fdiv   DWORD PTR [ebx*4-0x104e7e49]
  40c18d:	inc    edx
  40c18e:	pop    esi
  40c18f:	scas   al,BYTE PTR es:[edi]
  40c190:	push   cs
  40c191:	je     0x40c16e
  40c193:	push   0x61
  40c195:	lea    eax,[edi+esi*4+0x814e351]
  40c19c:	jmp    DWORD PTR [ecx+0x76d18534]
  40c1a2:	jnp    0x40c1bd
  40c1a4:	rcr    DWORD PTR [ebx-0x5e6c019c],0x3
  40c1ab:	xchg   DWORD PTR [eax+0x4a329ff],ebx
  40c1b1:	rcl    ebx,0xd3
  40c1b4:	pop    eax
  40c1b5:	push   fs
  40c1b7:	xchg   esi,eax
  40c1b8:	fisub  DWORD PTR [esi+0x7c]
  40c1bb:	dec    esi
  40c1bc:	sbb    cl,bl
  40c1be:	mov    bl,0x22
  40c1c0:	mov    edx,0xa40d23dc
  40c1c5:	push   ebx
  40c1c6:	int3   
  40c1c7:	mov    dl,0xe5
  40c1c9:	mov    dl,0xce
  40c1cb:	jmp    0x7c5520fa
  40c1d0:	push   ebp
  40c1d1:	jno    0x40c24f
  40c1d3:	test   BYTE PTR [esi-0x719424fb],dh
  40c1d9:	(bad)  
  40c1da:	in     eax,dx
  40c1db:	retf   0x2d9a
  40c1de:	lds    eax,FWORD PTR [ebx+ebp*4-0x4454064a]
  40c1e5:	fistp  DWORD PTR [esi]
  40c1e7:	out    dx,eax
  40c1e8:	push   cs
  40c1e9:	mov    edi,0xb0d99429
  40c1ee:	fsubr  DWORD PTR [ecx]
  40c1f0:	std    
  40c1f1:	pop    esp
  40c1f2:	je     0x40c1c3
  40c1f4:	mov    eax,0x4d5dc64d
  40c1f9:	jmp    0x3f6edcca
  40c1fe:	pop    ds
  40c1ff:	sti    
  40c200:	inc    ebx
  40c201:	pop    edi
  40c202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c203:	addr16 dec edi
  40c205:	jle    0x40c1de
  40c207:	arpl   WORD PTR [edx+edi*1],dx
  40c20a:	mov    bl,al
  40c20c:	add    al,0xca
  40c20e:	dec    ebp
  40c20f:	or     al,0x99
  40c211:	in     al,0x5
  40c213:	or     ebx,eax
  40c215:	pop    ss
  40c216:	rcl    DWORD PTR [ecx],0x5d
  40c219:	sub    eax,0x7468d3ac
  40c21e:	aas    
  40c21f:	or     esp,DWORD PTR [ecx+0x2a]
  40c222:	nop
  40c223:	xor    eax,0x1ca6905c
  40c228:	lahf   
  40c229:	sbb    al,0xcd
  40c22b:	gs cmp ax,0xc527
  40c230:	std    
  40c231:	pop    edx
  40c232:	mov    ecx,0x3aa88e9
  40c237:	mov    al,0xa8
  40c239:	xchg   DWORD PTR [ecx],edx
  40c23b:	mov    esi,0x3d0b653c
  40c240:	fcom   DWORD PTR [ebx+edx*8]
  40c243:	mov    edx,0xda5bc3f
  40c248:	sti    
  40c249:	add    eax,0x4a010b4
  40c24e:	mov    bl,0x3
  40c250:	out    0x5f,eax
  40c252:	shr    DWORD PTR [edx],1
  40c254:	(bad)  
  40c255:	std    
  40c256:	adc    eax,0x4bd9d38f
  40c25b:	inc    esi
  40c25c:	out    dx,eax
  40c25d:	and    edi,ecx
  40c25f:	inc    esp
  40c260:	jl     0x40c22c
  40c262:	xchg   esi,eax
  40c263:	sbb    ah,cl
  40c265:	sbb    DWORD PTR [ebp+0x7d3bf8f8],esp
  40c26b:	ret    
  40c26c:	dec    eax
  40c26d:	jbe    0x40c2d8
  40c26f:	lahf   
  40c270:	enter  0x17ac,0xa2
  40c274:	cmp    bl,al
  40c276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c277:	sbb    eax,0x4087c9d4
  40c27c:	inc    esp
  40c27d:	add    esi,edi
  40c27f:	add    eax,0x86b8b114
  40c284:	int    0x11
  40c286:	or     dh,BYTE PTR [eax+esi*8]
  40c289:	icebp  
  40c28a:	test   eax,0xc27cc8a
  40c28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c290:	push   edx
  40c291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c292:	inc    ecx
  40c293:	mov    al,0x32
  40c295:	aaa    
  40c296:	arpl   WORD PTR [edx-0x66d70afc],ax
  40c29c:	cld    
  40c29d:	imul   edi,ebx,0x5
  40c2a0:	jp     0x40c222
  40c2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a3:	fcmovnbe st,st(7)
  40c2a5:	and    esp,DWORD PTR [eax-0x1f]
  40c2a8:	xor    al,0x32
  40c2aa:	pop    edx
  40c2ab:	shr    ebp,0x93
  40c2ae:	xchg   edi,eax
  40c2af:	jo     0x40c2f4
  40c2b1:	data16 cmp al,0x12
  40c2b4:	mov    ebx,0x35e06bcb
  40c2b9:	or     ah,ch
  40c2bb:	(bad)  
  40c2bc:	cdq    
  40c2bd:	ins    DWORD PTR es:[edi],dx
  40c2be:	push   ebp
  40c2bf:	jno    0x40c2c5
  40c2c1:	jbe    0x40c2c4
  40c2c3:	push   esp
  40c2c4:	sub    al,0x22
  40c2c6:	aad    0x7
  40c2c8:	xchg   ebp,eax
  40c2c9:	pop    esp
  40c2ca:	pop    esp
  40c2cb:	xor    dl,BYTE PTR [edx-0x3d619065]
  40c2d1:	push   ebp
  40c2d2:	mov    esi,0xe6503083
  40c2d7:	add    DWORD PTR [ecx+esi*1-0x44cd127e],esp
  40c2de:	mov    dl,0x21
  40c2e0:	idiv   BYTE PTR [edx-0x15]
  40c2e3:	xchg   esp,eax
  40c2e4:	data16 adc dl,BYTE PTR [ebp-0x3a926a3]
  40c2eb:	and    edi,DWORD PTR [esi*8-0x7d870553]
  40c2f2:	inc    ebp
  40c2f3:	js     0x40c302
  40c2f5:	or     eax,DWORD PTR [edx+0x56b76a0e]
  40c2fb:	add    eax,0xd0f2dc1c
  40c300:	jae    0x40c2e2
  40c302:	sub    ebx,edx
  40c304:	and    esp,DWORD PTR [esi-0x30]
  40c307:	jno    0x40c2ae
  40c309:	and    al,0x3a
  40c30b:	jne    0x40c366
  40c30d:	or     BYTE PTR [eax],al
  40c30f:	mov    ch,0x96
  40c311:	mov    al,ds:0x43607de0
  40c316:	inc    edi
  40c317:	push   es
  40c318:	mov    eax,ds:0xc51b0cd1
  40c31d:	lea    eax,[edi-0x7a]
  40c320:	hlt    
  40c321:	adc    DWORD PTR [ecx+eiz*1+0x73],ecx
  40c325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c326:	mov    dl,0xff
  40c328:	xchg   ebx,eax
  40c329:	psrld  mm3,QWORD PTR [edx+0x38]
  40c32d:	mov    al,dh
  40c32f:	out    0xb4,al
  40c331:	fcmovbe st,st(0)
  40c333:	mov    eax,ds:0x40da0f1b
  40c338:	lds    edi,FWORD PTR [ecx-0x680a9eea]
  40c33e:	pop    edi
  40c33f:	in     al,0x77
  40c341:	push   ecx
  40c342:	arpl   WORD PTR [ecx*8+0x3aeb08e],dx
  40c349:	aam    0xa3
  40c34b:	retf   0x4d44
  40c34e:	sbb    eax,0xb9cb4412
  40c353:	jbe    0x40c336
  40c355:	std    
  40c356:	scas   eax,DWORD PTR es:[edi]
  40c357:	mov    bh,0x16
  40c359:	mov    eax,0x9b1c569f
  40c35e:	fs xchg edx,eax
  40c360:	fmul   DWORD PTR [ecx]
  40c362:	push   ecx
  40c363:	(bad)  
  40c364:	or     ecx,edx
  40c366:	push   cs
  40c367:	dec    ebp
  40c368:	cmp    BYTE PTR ds:0x4728fa0b,0x5a
  40c36f:	jge    0x40c33e
  40c371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c372:	jmp    0x3861:0x943ac2a1
  40c379:	adc    DWORD PTR [esi],esi
  40c37b:	pop    ecx
  40c37c:	xlat   BYTE PTR ds:[ebx]
  40c37d:	int    0xef
  40c37f:	loope  0x40c375
  40c381:	imul   edx,DWORD PTR [esi-0x56],0x50588b19
  40c388:	cmp    DWORD PTR [ebx],0x2d306ca2
  40c38e:	jne    0x40c32d
  40c390:	push   0x81e49ca
  40c395:	cmp    cl,BYTE PTR [edi+0x3ad2dff0]
  40c39b:	mov    dl,0x2c
  40c39d:	retf   
  40c39e:	jecxz  0x40c32f
  40c3a0:	les    ebp,FWORD PTR [edi-0x5a]
  40c3a3:	daa    
  40c3a4:	rcr    DWORD PTR [edi],1
  40c3a6:	mov    dl,0x78
  40c3a8:	pop    ds
  40c3a9:	jbe    0x40c37f
  40c3ab:	xchg   edx,eax
  40c3ac:	cmp    bl,BYTE PTR [ebx+0x1d3b5b67]
  40c3b2:	adc    al,0xd1
  40c3b4:	test   eax,0x97b707e1
  40c3b9:	jmp    FWORD PTR [esi+esi*1]
  40c3bc:	mov    al,0x12
  40c3be:	adc    eax,0xb967dbac
  40c3c3:	add    BYTE PTR [edx],dl
  40c3c5:	push   es
  40c3c6:	and    eax,0x77019cc9
  40c3cb:	pop    ebx
  40c3cc:	mov    ecx,0x8ba8c168
  40c3d1:	pop    edx
  40c3d2:	imul   edi,edx,0xc9324fd1
  40c3d8:	stc    
  40c3d9:	shr    BYTE PTR [esi+0x255f096f],1
  40c3df:	in     al,dx
  40c3e0:	daa    
  40c3e1:	mov    al,ds:0xbadcc878
  40c3e6:	pop    ss
  40c3e7:	cmp    edx,ecx
  40c3e9:	jmp    0x5c1:0xb6151bbd
  40c3f0:	or     DWORD PTR [edi-0x76],ebx
  40c3f3:	pop    esi
  40c3f4:	adc    al,BYTE PTR [edx-0x3a69596c]
  40c3fa:	in     eax,0x75
  40c3fc:	idiv   BYTE PTR [esi-0x7ba8a258]
  40c402:	dec    ebx
  40c403:	and    bh,BYTE PTR [ebp+0x58795596]
  40c409:	push   eax
  40c40a:	push   es
  40c40b:	js     0x40c434
  40c40d:	cmp    bh,BYTE PTR [ebx-0x3971ae1c]
  40c413:	adc    ecx,esi
  40c415:	fsubr  DWORD PTR [ecx+0x48b544f9]
  40c41b:	fcmovu st,st(6)
  40c41d:	sub    BYTE PTR [ecx+0x74],al
  40c420:	jbe    0x40c45c
  40c422:	leave  
  40c423:	pushf  
  40c424:	outs   dx,DWORD PTR ds:[esi]
  40c425:	add    ebp,DWORD PTR [edx]
  40c427:	add    ebp,DWORD PTR ds:0x919ea1d7
  40c42d:	fimul  DWORD PTR [ebx]
  40c42f:	xlat   BYTE PTR ds:[ebx]
  40c430:	cmp    BYTE PTR ds:0x353fec16,dh
  40c436:	jno    0x40c4b7
  40c438:	add    ebp,DWORD PTR [ecx+0x71]
  40c43b:	jae    0x40c450
  40c43d:	push   edx
  40c43e:	jnp    0x40c412
  40c440:	stos   BYTE PTR es:[edi],al
  40c441:	sbb    cl,BYTE PTR [edi]
  40c443:	in     eax,0xae
  40c445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c446:	(bad)  
  40c447:	loop   0x40c487
  40c449:	xor    DWORD PTR [edi-0x49],esi
  40c44c:	mov    ds:0x4492335e,eax
  40c451:	sbb    al,0xb8
  40c453:	sbb    DWORD PTR [ebp+0x728b192f],edi
  40c459:	out    dx,eax
  40c45a:	fidivr DWORD PTR [ebp+ebp*8+0x10]
  40c45e:	imul   DWORD PTR [eax-0x7e]
  40c461:	xor    BYTE PTR [ebp+0x4d29d78b],0x71
  40c468:	mov    esp,DWORD PTR [esi]
  40c46a:	sub    eax,0x58f83cee
  40c46f:	xchg   BYTE PTR [esi+esi*1],dh
  40c472:	aas    
  40c473:	inc    eax
  40c474:	sub    al,BYTE PTR [eax+edx*4+0xe74755d]
  40c47b:	out    0x96,eax
  40c47d:	mov    dh,0xeb
  40c47f:	call   0xc114:0x511eac28
  40c486:	or     edi,ebp
  40c488:	mov    DWORD PTR [eax+0x8],eax
  40c48b:	inc    eax
  40c48c:	cmp    eax,0x4a7a5ce0
  40c491:	rol    BYTE PTR cs:[edi],cl
  40c494:	loopne 0x40c502
  40c496:	xchg   edi,eax
  40c497:	push   ecx
  40c498:	pop    esp
  40c499:	daa    
  40c49a:	sar    DWORD PTR [edx+0x25],cl
  40c49d:	loope  0x40c4d7
  40c49f:	inc    ecx
  40c4a0:	mov    dh,0x85
  40c4a2:	les    ecx,FWORD PTR [edi]
  40c4a4:	imul   eax,DWORD PTR [eax+0x413fccbd],0xffffff89
  40c4ab:	adc    DWORD PTR [eax-0x2f],esp
  40c4ae:	pop    ds
  40c4af:	(bad)  
  40c4b0:	xor    ebx,DWORD PTR [edx-0x10]
  40c4b3:	shr    esp,1
  40c4b5:	cmp    al,0x5c
  40c4b7:	xor    edx,DWORD PTR ds:0xc1499cbd
  40c4bd:	xor    ch,ch
  40c4bf:	pop    esi
  40c4c0:	ret    0x22b4
  40c4c3:	sub    DWORD PTR es:[edx-0x140d4415],esp
  40c4ca:	cmc    
  40c4cb:	cwde   
  40c4cc:	mov    fs,WORD PTR [edx-0x77]
  40c4cf:	call   DWORD PTR [edi]
  40c4d1:	sbb    edx,DWORD PTR [ebp-0x47]
  40c4d4:	icebp  
  40c4d5:	inc    edi
  40c4d6:	sub    ebx,esp
  40c4d8:	outs   dx,DWORD PTR ds:[esi]
  40c4d9:	loop   0x40c548
  40c4db:	mov    ebp,0xb03c725f
  40c4e0:	loope  0x40c4f9
  40c4e2:	inc    eax
  40c4e3:	bound  esp,QWORD PTR [edx]
  40c4e5:	fwait
  40c4e6:	test   al,0x33
  40c4e8:	mov    esp,0xbc8ae4c
  40c4ed:	jo     0x40c530
  40c4ef:	and    dh,BYTE PTR [ecx-0x27cebf54]
  40c4f5:	mov    ds:0xea147234,al
  40c4fa:	and    BYTE PTR [ecx-0x78],0x5d
  40c4fe:	push   edx
  40c4ff:	les    ebp,FWORD PTR [ebx-0xd07bca1]
  40c505:	sub    eax,0xbf600418
  40c50a:	outs   dx,BYTE PTR ds:[esi]
  40c50b:	inc    esp
  40c50c:	sub    al,0x1e
  40c50e:	jo     0x40c4d4
  40c510:	jns    0x40c525
  40c512:	cmp    al,0xdb
  40c514:	push   esi
  40c515:	inc    ebp
  40c516:	and    ax,WORD PTR [ebx-0x14]
  40c51a:	imul   BYTE PTR [edx+0x623f6e7c]
  40c520:	ja     0x40c4c3
  40c522:	inc    ebp
  40c523:	ret    0x6ede
  40c526:	mov    cl,0xd2
  40c528:	or     ch,BYTE PTR [bx]
  40c52b:	pop    es
  40c52c:	adc    edx,DWORD PTR [esi+0x52]
  40c52f:	and    ch,BYTE PTR [esi+0x40]
  40c532:	arpl   WORD PTR [esi+0x7080acdc],cx
  40c538:	mov    eax,0x436ed953
  40c53d:	pusha  
  40c53e:	xchg   ah,ch
  40c540:	call   0x2a59aa60
  40c545:	cmp    BYTE PTR [ebx*2-0x3d785c5d],ch
  40c54c:	inc    edi
  40c54d:	call   0x8ce0d101
  40c552:	stos   DWORD PTR es:[edi],eax
  40c553:	push   0x54
  40c555:	loopne 0x40c59e
  40c557:	(bad)  
  40c558:	cmp    dh,BYTE PTR [edx-0x52]
  40c55b:	fmul   QWORD PTR [edx+edi*4+0xb24956d]
  40c562:	or     esi,ebp
  40c564:	div    BYTE PTR [edi-0x1d]
  40c567:	sub    dl,BYTE PTR [eax-0x57]
  40c56a:	inc    esi
  40c56b:	rcl    DWORD PTR [edx],0x0
  40c56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56f:	in     al,dx
  40c570:	sub    ebp,eax
  40c572:	xor    BYTE PTR [ecx],dh
  40c574:	scas   eax,DWORD PTR es:[edi]
  40c575:	test   BYTE PTR [ebp+0x4a5d5004],bh
  40c57b:	int3   
  40c57c:	sbb    BYTE PTR [eax-0x1],0x9c
  40c580:	adc    ch,ah
  40c582:	addr16 ret 
  40c584:	jo     0x40c545
  40c586:	mov    dh,0x44
  40c588:	or     edi,esp
  40c58a:	lds    esp,FWORD PTR [ebp-0xe]
  40c58d:	repz xchg ebx,eax
  40c58f:	fldenv [ebp+ebx*4+0x30]
  40c593:	int3   
  40c594:	test   al,0xb2
  40c596:	je     0x40c5ee
  40c598:	inc    edx
  40c599:	pushf  
  40c59a:	xchg   edx,eax
  40c59b:	add    DWORD PTR [esi],0x19fd7734
  40c5a1:	pop    ebx
  40c5a2:	out    0xb1,al
  40c5a4:	jbe    0x40c546
  40c5a6:	push   0xffffff96
  40c5a8:	outs   dx,DWORD PTR ds:[esi]
  40c5a9:	cs xor eax,0x2f8608d3
  40c5af:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c5b1:	cwde   
  40c5b2:	aaa    
  40c5b3:	repz jae 0x40c5d1
  40c5b6:	push   0xfffffff0
  40c5b8:	iret   
  40c5b9:	push   edx
  40c5ba:	je     0x40c57b
  40c5bc:	sub    DWORD PTR [edx-0x4c],edx
  40c5bf:	xchg   ecx,eax
  40c5c0:	aad    0xda
  40c5c2:	sub    DWORD PTR [eax+0x794c5f30],0xe332322a
  40c5cc:	clc    
  40c5cd:	sbb    al,0x42
  40c5cf:	test   ch,bh
  40c5d1:	push   edx
  40c5d2:	(bad)  
  40c5d3:	int3   
  40c5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d5:	aad    0x93
  40c5d7:	aas    
  40c5d8:	push   cs
  40c5d9:	mov    ah,BYTE PTR [edi+0x20103d5a]
  40c5df:	scas   al,BYTE PTR es:[edi]
  40c5e0:	(bad)  [esi-0x403d1568]
  40c5e6:	xor    esp,esp
  40c5e8:	mov    esi,0xe2b05942
  40c5ed:	push   edx
  40c5ee:	lahf   
  40c5ef:	in     al,0xcc
  40c5f1:	mov    ebp,0x57e59e56
  40c5f6:	jb     0x40c595
  40c5f8:	mov    ds:0x1f273e96,eax
  40c5fd:	in     al,dx
  40c5fe:	mov    dl,0x4f
  40c600:	and    edi,esi
  40c602:	sub    BYTE PTR [ecx],ah
  40c604:	xor    DWORD PTR [edi+0x3dc7f011],edi
  40c60a:	sar    DWORD PTR [ecx],cl
  40c60c:	outs   dx,BYTE PTR ds:[esi]
  40c60d:	rcr    ah,cl
  40c60f:	adc    BYTE PTR [ecx+0x48],bl
  40c612:	(bad)  
  40c613:	cmp    BYTE PTR [ebx-0x13],bl
  40c616:	jnp    0x40c5be
  40c618:	mov    fs,eax
  40c61a:	sub    eax,DWORD PTR [edx-0x2b10079b]
  40c620:	ja     0x40c681
  40c622:	pop    esp
  40c623:	xchg   ebx,eax
  40c624:	int3   
  40c625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c626:	sub    DWORD PTR [edi+0x4a],edi
  40c629:	retf   
  40c62a:	xchg   ebp,eax
  40c62b:	jle    0x40c672
  40c62d:	nop
  40c62e:	(bad)  
  40c62f:	xor    al,0x5f
  40c631:	js     0x40c681
  40c633:	adc    al,0x73
  40c635:	shr    DWORD PTR [ecx-0x53],0xb4
  40c639:	pushf  
  40c63a:	xor    edx,DWORD PTR [eax-0x39274fbb]
  40c640:	(bad)  
  40c641:	pushf  
  40c642:	jb     0x40c691
  40c644:	jmp    0xee66cff2
  40c649:	sahf   
  40c64a:	daa    
  40c64b:	aas    
  40c64c:	lds    edx,FWORD PTR [ecx+0x5830fd19]
  40c652:	fldlg2 
  40c654:	into   
  40c655:	jo     0x40c600
  40c657:	lods   al,BYTE PTR ds:[esi]
  40c658:	or     DWORD PTR [eax-0x3b99226c],ebp
  40c65e:	ds mov bl,0xa
  40c661:	shl    DWORD PTR [edx+ecx*1-0x2128a837],1
  40c668:	fsub   st(6),st
  40c66a:	or     bh,BYTE PTR [esi-0x40]
  40c66d:	(bad)  
  40c66e:	jno    0x40c64a
  40c670:	repz hlt 
  40c672:	jns    0x40c6dd
  40c674:	adc    al,0x27
  40c676:	xlat   BYTE PTR ds:[ebx]
  40c677:	(bad)  
  40c678:	(bad)
  40c67c:	dec    edi
  40c67d:	xchg   edi,eax
  40c67e:	adc    BYTE PTR [edi],dl
  40c680:	repnz xchg esp,eax
  40c682:	inc    eax
  40c683:	arpl   WORD PTR [edi-0x37],bx
  40c686:	mov    bl,BYTE PTR [eax]
  40c688:	(bad)  
  40c689:	addr16 leave 
  40c68b:	pop    ebx
  40c68c:	and    DWORD PTR [ecx+ebp*8],ebp
  40c68f:	xor    esp,esi
  40c691:	cli    
  40c692:	cmp    DWORD PTR [ebp-0x2c7a7cfa],esi
  40c698:	cmp    BYTE PTR [edx+ebx*1+0x57],cl
  40c69c:	imul   ebx,ebp,0x2bc5036
  40c6a2:	push   ss
  40c6a3:	push   es
  40c6a4:	and    al,cl
  40c6a6:	out    0x2d,al
  40c6a8:	sbb    edx,esi
  40c6aa:	xchg   esi,eax
  40c6ab:	pop    ebp
  40c6ac:	jg     0x40c6bf
  40c6ae:	repz cdq 
  40c6b0:	stc    
  40c6b1:	int    0xb1
  40c6b3:	jp     0x40c6d6
  40c6b5:	call   0x57e343be
  40c6ba:	sub    ch,BYTE PTR ds:0x455feed8
  40c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c1:	repnz push ebx
  40c6c3:	pop    eax
  40c6c4:	or     esp,ecx
  40c6c6:	fidivr WORD PTR ds:0x19458453
  40c6cc:	mov    ebp,0x8966bee
  40c6d1:	rol    ebp,1
  40c6d3:	loope  0x40c693
  40c6d5:	push   es
  40c6d6:	push   ebx
  40c6d7:	cdq    
  40c6d8:	retf   0x7a84
  40c6db:	cld    
  40c6dc:	(bad)  
  40c6dd:	cs clc 
  40c6df:	inc    ebx
  40c6e0:	je     0x40c75a
  40c6e2:	shl    DWORD PTR [edi+0x7f90171b],1
  40c6e8:	pop    edx
  40c6e9:	ss inc ebp
  40c6eb:	rcr    bh,1
  40c6ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6ee:	int3   
  40c6ef:	mul    BYTE PTR ds:0xae2dc556
  40c6f5:	repz out dx,al
  40c6f7:	xor    al,bl
  40c6f9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40c6fb:	and    ebx,ebx
  40c6fd:	mov    esi,0x424916f6
  40c702:	cmp    ecx,DWORD PTR [esi]
  40c704:	sub    al,0x8a
  40c706:	popa   
  40c707:	iret   
  40c708:	jle    0x40c6a9
  40c70a:	xor    eax,0x4c75e23c
  40c70f:	fcomp  DWORD PTR [edi-0x35]
  40c712:	call   FWORD PTR [ecx-0x76be3ce9]
  40c718:	(bad)  
  40c719:	shr    dh,0xe1
  40c71c:	mov    bl,0xa5
  40c71e:	vcomiss xmm0,xmm4
  40c722:	inc    esi
  40c723:	call   0x7d680e48
  40c728:	out    0x45,eax
  40c72a:	push   edi
  40c72b:	xchg   ebp,eax
  40c72c:	rcl    BYTE PTR [ebx-0x56],1
  40c72f:	shr    BYTE PTR [edi+0x3a75f26d],cl
  40c735:	xlat   BYTE PTR ds:[ebx]
  40c736:	out    0x8,al
  40c738:	xchg   ecx,eax
  40c739:	arpl   WORD PTR [edi+0x5c],di
  40c73c:	stc    
  40c73d:	js     0x40c748
  40c73f:	dec    edx
  40c740:	dec    eax
  40c741:	pop    eax
  40c742:	loopne 0x40c75f
  40c744:	sbb    al,0x81
  40c746:	mov    dl,0x9e
  40c748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c749:	(bad)  
  40c74b:	int    0x31
  40c74d:	ins    BYTE PTR es:[edi],dx
  40c74e:	cmp    edi,edi
  40c750:	loope  0x40c726
  40c752:	pop    ds
  40c753:	push   eax
  40c754:	xor    esp,DWORD PTR [esi-0x63afab77]
  40c75a:	pcmpeqd mm4,mm5
  40c75d:	jbe    0x40c779
  40c75f:	sbb    eax,0x1d071a30
  40c764:	mov    BYTE PTR [esi-0x53],ch
  40c767:	loope  0x40c739
  40c769:	jno    0x40c7c6
  40c76b:	dec    esp
  40c76c:	push   ds
  40c76d:	les    edi,FWORD PTR [edi+ebx*1]
  40c770:	inc    esp
  40c771:	fwait
  40c772:	push   ebx
  40c773:	mov    dl,0xc8
  40c775:	add    DWORD PTR [ebx],ecx
  40c777:	pushf  
  40c778:	mov    ah,0xd
  40c77a:	sti    
  40c77b:	scas   eax,DWORD PTR es:[edi]
  40c77c:	retf   0xffba
  40c77f:	mov    ?,edx
  40c781:	(bad)  
  40c782:	inc    edx
  40c783:	mov    edi,0x522f3806
  40c788:	test   al,0x88
  40c78a:	bound  ecx,QWORD PTR [ebx+0x7558cf54]
  40c790:	sbb    DWORD PTR ss:[ebp-0x5b],ecx
  40c794:	dec    ebx
  40c795:	out    0x1e,al
  40c797:	push   0xfc870dd5
  40c79c:	jmp    0x40c76f
  40c79e:	jb     0x40c77f
  40c7a0:	jge    0x40c75d
  40c7a2:	inc    edi
  40c7a3:	xor    DWORD PTR ds:0xd2045e70,ecx
  40c7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7aa:	int3   
  40c7ab:	mov    ebp,0x8e468274
  40c7b0:	aas    
  40c7b1:	pop    ebx
  40c7b2:	int    0x4a
  40c7b4:	out    dx,al
  40c7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b6:	mov    bh,0xc5
  40c7b8:	or     esi,esp
  40c7ba:	push   eax
  40c7bb:	ret    
  40c7bc:	nop
  40c7bd:	sub    ch,BYTE PTR [ecx-0x69a661bb]
  40c7c3:	and    BYTE PTR [eax-0x1c13ecd0],ch
  40c7c9:	dec    esi
  40c7ca:	lock fldcw WORD PTR [ebx-0x56]
  40c7ce:	(bad)  
  40c7cf:	adc    edi,DWORD PTR [edi+0x40]
  40c7d2:	mov    bh,0x85
  40c7d4:	nop
  40c7d5:	jmp    0x2467:0x5f95095d
  40c7dc:	icebp  
  40c7dd:	mov    ds:0x4d430895,eax
  40c7e2:	stos   DWORD PTR es:[edi],eax
  40c7e3:	sbb    ebx,DWORD PTR [esi-0x5604882]
  40c7e9:	or     BYTE PTR [edi+0x52],ah
  40c7ec:	ds dec eax
  40c7ee:	div    DWORD PTR [edx-0x38]
  40c7f1:	imul   edx,ebx,0xf0b7b594
  40c7f7:	push   ecx
  40c7f8:	mov    ecx,0x65c585b3
  40c7fd:	int    0x1
  40c7ff:	xor    eax,edx
  40c801:	jl     0x40c87f
  40c803:	out    0x3d,eax
  40c805:	sub    DWORD PTR [ebx],eax
  40c807:	sbb    bh,BYTE PTR [eax-0x13]
  40c80a:	cmp    BYTE PTR [esi+edi*2+0x53d1a29f],ch
  40c811:	pop    DWORD PTR [edx+0x4223649d]
  40c817:	jae    0x40c7b1
  40c819:	push   es
  40c81a:	mov    ebx,0x5087e0c2
  40c81f:	ficomp WORD PTR [ebx+0x73]
  40c822:	pop    esp
  40c823:	lods   eax,DWORD PTR ds:[esi]
  40c824:	cli    
  40c825:	cmp    ch,BYTE PTR [ebp-0x1]
  40c828:	jg     0x40c8a7
  40c82a:	mov    dh,0xac
  40c82c:	ins    DWORD PTR es:[edi],dx
  40c82d:	int3   
  40c82e:	(bad)  
  40c82f:	stos   BYTE PTR es:[edi],al
  40c830:	stos   BYTE PTR es:[edi],al
  40c831:	fst    st(2)
  40c833:	xlat   BYTE PTR ds:[ebx]
  40c834:	xor    eax,0xa75fe805
  40c839:	js     0x40c84d
  40c83b:	pusha  
  40c83c:	clc    
  40c83d:	sahf   
  40c83e:	and    ch,ch
  40c840:	and    bh,BYTE PTR [esi+0x52c7c2fb]
  40c846:	mov    ?,WORD PTR [edi+ebp*2]
  40c849:	xor    edx,DWORD PTR [esi-0x5971bac7]
  40c84f:	lock xchg ecx,eax
  40c851:	mov    bh,0x53
  40c853:	cmp    BYTE PTR [ebx+esi*1],dl
  40c856:	pop    ds
  40c857:	cli    
  40c858:	xor    cl,BYTE PTR [edi]
  40c85a:	mov    bh,0xb4
  40c85c:	mov    edi,0xf36f64d5
  40c861:	mov    dl,0x28
  40c863:	popw   ds
  40c865:	mov    ebp,0x9bd0fc59
  40c86a:	add    DWORD PTR [eax-0x386af7a8],edi
  40c870:	(bad)  
  40c871:	shl    BYTE PTR [edx+edi*2+0x2b],cl
  40c875:	ins    BYTE PTR es:[edi],dx
  40c876:	sbb    BYTE PTR [eax-0x27267edf],ah
  40c87c:	xchg   ebp,eax
  40c87d:	out    0x25,al
  40c87f:	inc    ecx
  40c880:	sahf   
  40c881:	in     al,dx
  40c882:	xlat   BYTE PTR ds:[ebx]
  40c883:	lock push es
  40c885:	test   eax,0xb3883034
  40c88a:	pop    es
  40c88b:	rcr    BYTE PTR [ebx],cl
  40c88d:	dec    ecx
  40c88e:	push   esp
  40c88f:	push   ds
  40c890:	rcr    BYTE PTR [ebx],0x78
  40c893:	pop    ss
  40c894:	(bad)
  40c897:	pop    ds
  40c898:	cwde   
  40c899:	adc    DWORD PTR [edi+0x60fadf0],esp
  40c89f:	loopne 0x40c902
  40c8a1:	mov    WORD PTR [eax-0x3df8f1fd],gs
  40c8a7:	aad    0xb3
  40c8a9:	ficomp DWORD PTR [ebp+0x744ac861]
  40c8af:	dec    esp
  40c8b0:	cmp    edx,0x4b
  40c8b3:	mov    ebx,0xf144df76
  40c8b8:	sub    al,BYTE PTR [ecx]
  40c8ba:	adc    dl,BYTE PTR [esi-0x72]
  40c8bd:	dec    eax
  40c8be:	arpl   bp,bx
  40c8c0:	pop    esp
  40c8c1:	lods   al,BYTE PTR ds:[esi]
  40c8c2:	mov    esi,0x37a32d7e
  40c8c7:	dec    eax
  40c8c8:	cwde   
  40c8c9:	das    
  40c8ca:	push   0x432ac8fe
  40c8cf:	xchg   ecx,eax
  40c8d0:	pop    ds
  40c8d1:	sub    al,BYTE PTR [edi+0x63]
  40c8d4:	stos   BYTE PTR es:[edi],al
  40c8d5:	dec    ebx
  40c8d6:	mov    esp,0x142d82f7
  40c8db:	sub    esi,DWORD PTR [edi]
  40c8dd:	into   
  40c8de:	adc    eax,edi
  40c8e0:	cld    
  40c8e1:	jle    0x40c873
  40c8e3:	xchg   BYTE PTR [ebp+0xc5fdef6],cl
  40c8e9:	(bad)  
  40c8ea:	lods   eax,DWORD PTR ds:[esi]
  40c8eb:	loope  0x40c913
  40c8ed:	ss out dx,eax
  40c8ef:	jb     0x40c91d
  40c8f1:	add    BYTE PTR [ebp+0x44964219],dl
  40c8f7:	and    DWORD PTR [ecx+0xf3d590e],ecx
  40c8fd:	or     eax,0xcbfb80d
  40c902:	rcr    DWORD PTR [edi+eiz*2+0x5995a2d2],cl
  40c909:	imul   ecx,DWORD PTR [bx+si+0x3ad],0xffffff86
  40c90f:	scas   al,BYTE PTR es:[edi]
  40c910:	fisttp WORD PTR [esi+ebp*4+0x5de5d89]
  40c917:	int    0xf5
  40c919:	call   0x5166:0xac27b794
  40c920:	xor    BYTE PTR [eax],dh
  40c922:	push   ds
  40c923:	mov    eax,ds:0x5e5674a5
  40c928:	rcr    BYTE PTR [edx],cl
  40c92a:	ins    DWORD PTR es:[edi],dx
  40c92b:	inc    edi
  40c92c:	mov    al,ds:0x2ecf0e88
  40c931:	or     DWORD PTR [ecx+0x15],ebp
  40c934:	mov    ebp,0x5e48bd6f
  40c939:	fistp  WORD PTR [ebx-0x33bc196e]
  40c93f:	into   
  40c940:	mov    ch,0xf2
  40c942:	lea    ebp,[eax-0xd]
  40c945:	paddd  mm0,QWORD PTR [edi-0x4e2cbf24]
  40c94c:	(bad)  
  40c94d:	call   0xde43ae1f
  40c952:	xchg   DWORD PTR [ebx+0x63],ebx
  40c955:	jge    0x40c9ae
  40c957:	rol    BYTE PTR [edx+0x44],0x9a
  40c95b:	push   0x5fc2b707
  40c960:	out    dx,eax
  40c961:	popf   
  40c962:	pop    ss
  40c963:	push   ss
  40c964:	inc    eax
  40c965:	sbb    al,0xa9
  40c967:	dec    edi
  40c968:	fild   WORD PTR [ebp+eiz*1+0x1b]
  40c96c:	mov    dh,0xc1
  40c96e:	sub    eax,0xff8f95e2
  40c973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c974:	idiv   DWORD PTR [ecx]
  40c976:	add    ch,0xaf
  40c979:	and    DWORD PTR [ebx+ebx*4],ebx
  40c97c:	and    ch,al
  40c97e:	add    BYTE PTR [esi+0xd1c0f9f],dh
  40c984:	outs   dx,BYTE PTR ds:[esi]
  40c985:	sub    al,0x62
  40c987:	jae    0x40c90a
  40c989:	loopne 0x40c9c3
  40c98b:	mov    DWORD PTR [ecx],ecx
  40c98d:	xchg   ebx,eax
  40c98e:	xlat   BYTE PTR ds:[ebx]
  40c98f:	ins    BYTE PTR es:[edi],dx
  40c990:	pusha  
  40c991:	in     eax,0xd
  40c993:	fbld   TBYTE PTR [ecx]
  40c995:	cwde   
  40c996:	cli    
  40c997:	jg     0x40c95a
  40c999:	jmp    0x40c994
  40c99b:	popa   
  40c99c:	scas   al,BYTE PTR es:[edi]
  40c99d:	sub    ecx,ebp
  40c99f:	ja     0x40c9af
  40c9a1:	clc    
  40c9a2:	mov    bl,BYTE PTR [bp+di]
  40c9a5:	lock ffreep st(5)
  40c9a8:	mov    bh,0x65
  40c9aa:	(bad)  
  40c9ab:	popf   
  40c9ac:	ror    DWORD PTR [ebx+0x1ab3ab4f],1
  40c9b2:	(bad)  
  40c9b3:	or     al,0x58
  40c9b5:	sub    DWORD PTR [ebx-0x17],ecx
  40c9b8:	push   0x3a971625
  40c9bd:	les    esp,FWORD PTR [edx-0x13841400]
  40c9c3:	lods   al,BYTE PTR ds:[esi]
  40c9c4:	sbb    BYTE PTR [edi+0x76],0x9d
  40c9c8:	mov    al,ds:0x78aab67b
  40c9cd:	imul   esp,edx,0xffffffc8
  40c9d0:	jmp    0x40c9b4
  40c9d2:	(bad)  
  40c9d3:	lahf   
  40c9d4:	ins    BYTE PTR es:[edi],dx
  40c9d5:	fs push ecx
  40c9d7:	inc    edi
  40c9d8:	sahf   
  40c9d9:	cdq    
  40c9da:	jb     0x40c9d6
  40c9dc:	sbb    bh,al
  40c9de:	jae    0x40c977
  40c9e0:	das    
  40c9e1:	xchg   ecx,eax
  40c9e2:	cli    
  40c9e3:	inc    ebx
  40c9e4:	bound  edx,QWORD PTR [ebx+0x14861210]
  40c9ea:	test   DWORD PTR [ecx],0xd9228d66
  40c9f0:	call   0xab53:0xea23387d
  40c9f7:	arpl   WORD PTR [ebx+edi*1-0x1ae47a6e],bx
  40c9fe:	pop    edx
  40c9ff:	popf   
  40ca00:	dec    ebx
  40ca01:	dec    esp
  40ca02:	test   BYTE PTR [ecx+0x1d1272e],dl
  40ca08:	out    dx,al
  40ca09:	clc    
  40ca0a:	xor    BYTE PTR [eax+0x30],bl
  40ca0d:	cwde   
  40ca0e:	loopne 0x40ca28
  40ca10:	sbb    eax,0x75f8bbcf
  40ca15:	mov    es,edi
  40ca17:	aas    
  40ca18:	retf   0xbb1c
  40ca1b:	call   0x82cffe2a
  40ca20:	inc    eax
  40ca21:	push   0x49a727a5
  40ca26:	push   ebp
  40ca27:	dec    edi
  40ca28:	in     eax,dx
  40ca29:	sbb    DWORD PTR [ebx+0x67],esp
  40ca2c:	fwait
  40ca2d:	cmc    
  40ca2e:	sub    DWORD PTR [eax+ebx*1+0x7005a8f5],0x7d479d45
  40ca39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3a:	cmc    
  40ca3b:	jo     0x40c9fb
  40ca3d:	into   
  40ca3e:	mov    eax,0xd6ce05ef
  40ca43:	cmc    
  40ca44:	(bad)  
  40ca45:	in     al,0x57
  40ca47:	lock inc ebp
  40ca49:	test   al,0x35
  40ca4b:	popa   
  40ca4c:	mov    esi,0xe7123d2d
  40ca51:	call   0xd34c3b69
  40ca56:	out    dx,eax
  40ca57:	mov    ebx,0x4e4698b4
  40ca5c:	rcl    DWORD PTR [ebp+ebp*2-0x38bb353a],1
  40ca63:	jp     0x40ca06
  40ca65:	push   edi
  40ca66:	xchg   edi,eax
  40ca67:	cmp    BYTE PTR [edx*8+0x72e9ce34],dl
  40ca6e:	mov    dl,0x98
  40ca70:	push   0xffffff91
  40ca72:	mov    ah,0x37
  40ca74:	mov    bl,0x77
  40ca76:	(bad)  
  40ca78:	dec    esp
  40ca79:	mov    edx,0x4a721c41
  40ca7e:	push   eax
  40ca7f:	push   ebp
  40ca80:	jae    0x40ca3a
  40ca82:	mov    edx,0x9297932b
  40ca87:	jnp    0x40ca9e
  40ca89:	sub    BYTE PTR [ecx+0x4c8aab00],bh
  40ca8f:	jge    0x40cb07
  40ca91:	or     BYTE PTR [esi],dh
  40ca93:	js     0x40ca6e
  40ca95:	lea    ebp,[edi]
  40ca97:	xor    ah,BYTE PTR [ebx+0x7b]
  40ca9a:	push   0x7d1e1c7c
  40ca9f:	and    ebx,ebx
  40caa1:	aam    0xc5
  40caa3:	jae    0x40ca55
  40caa5:	mov    edx,0xa2126e67
  40caaa:	and    BYTE PTR [ecx+ebp*8],bh
  40caad:	imul   edi,DWORD PTR [eax+0x503ada9f],0xbd1f13d8
  40cab7:	loope  0x40ca91
  40cab9:	pop    ebp
  40caba:	sbb    esi,DWORD PTR [ebx+0x15]
  40cabd:	arpl   WORD PTR [edi-0x6a],di
  40cac0:	sbb    DWORD PTR [ebp-0x1],edx
  40cac3:	adc    dh,BYTE PTR [edi]
  40cac5:	cmp    ah,ah
  40cac7:	mov    ch,0x86
  40cac9:	xchg   edi,eax
  40caca:	mov    ch,0xa0
  40cacc:	lea    eax,[bx]
  40cacf:	(bad)  
  40cad0:	test   eax,0x4cead551
  40cad5:	int3   
  40cad6:	ffree  st(7)
  40cad8:	popf   
  40cad9:	jns    0x40cb42
  40cadb:	xchg   esi,eax
  40cadc:	inc    ecx
  40cadd:	mov    ch,BYTE PTR [ecx+0x6421855c]
  40cae3:	call   0x5e7f:0x933a80c7
  40caea:	push   ecx
  40caeb:	lds    esi,FWORD PTR [ebx+ebp*4+0x1b]
  40caef:	inc    ebp
  40caf0:	mov    DWORD PTR [edx-0x1],ebp
  40caf3:	aaa    
  40caf4:	and    al,0x4b
  40caf6:	scas   al,BYTE PTR es:[edi]
  40caf7:	xlat   BYTE PTR ds:[ebx]
  40caf8:	adc    DWORD PTR [edx-0x35d8497e],ebp
  40cafe:	bound  edx,QWORD PTR [ecx+0x18]
  40cb01:	or     al,0x7
  40cb03:	sbb    ebp,DWORD PTR ds:0x7bdacac
  40cb09:	dec    ecx
  40cb0a:	imul   DWORD PTR [esi-0x4b]
  40cb0d:	rol    BYTE PTR [edi+eax*2+0x2b],cl
  40cb11:	jae    0x40cb26
  40cb13:	inc    ebx
  40cb14:	jmp    0x40cae7
  40cb16:	arpl   WORD PTR [edi-0x5b],sp
  40cb19:	inc    ebx
  40cb1a:	fwait
  40cb1b:	and    BYTE PTR [ebp-0x39],bh
  40cb1e:	nop
  40cb1f:	clc    
  40cb20:	scas   al,BYTE PTR es:[edi]
  40cb21:	aam    0x2a
  40cb23:	(bad)  
  40cb24:	repz aam 0x32
  40cb27:	mov    ecx,0xa1677ed5
  40cb2c:	cli    
  40cb2d:	or     BYTE PTR [edx],0x62
  40cb30:	in     al,0x22
  40cb32:	dec    eax
  40cb33:	jl     0x40cae1
  40cb35:	int    0xfc
  40cb37:	(bad)  
  40cb38:	mov    bl,0xd2
  40cb3a:	mov    dh,0xf6
  40cb3c:	add    al,0xd4
  40cb3e:	mov    dl,0x9b
  40cb40:	fcomp  QWORD PTR [ecx]
  40cb42:	push   0x5184b525
  40cb47:	add    edi,DWORD PTR [edi-0x4b]
  40cb4a:	enter  0x5ff0,0x8e
  40cb4e:	push   ebx
  40cb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb50:	mov    ecx,0x81e825f9
  40cb55:	dec    ecx
  40cb56:	mov    ch,0x7c
  40cb58:	jmp    0x38434594
  40cb5d:	adc    al,0x84
  40cb5f:	enter  0xbe4a,0xdc
  40cb63:	mov    bh,0xb1
  40cb65:	in     al,dx
  40cb66:	or     BYTE PTR [eax+0x26],cl
  40cb69:	adc    cl,dl
  40cb6b:	jne    0x40cba8
  40cb6d:	fild   DWORD PTR es:[edi]
  40cb70:	stos   BYTE PTR es:[edi],al
  40cb71:	ss fcmovbe st,st(3)
  40cb74:	jo     0x40cbed
  40cb76:	xchg   DWORD PTR [edi-0x7a6515ec],ecx
  40cb7c:	(bad)  
  40cb7d:	mov    ebx,0x566a3699
  40cb82:	jmp    0x22b55903
  40cb87:	sub    ah,bl
  40cb89:	imul   eax,DWORD PTR [edi-0x96c1a82],0x58
  40cb90:	stos   DWORD PTR es:[edi],eax
  40cb91:	arpl   WORD PTR [edi-0x59],bp
  40cb94:	leave  
  40cb95:	mov    edi,0x7b582a90
  40cb9a:	sub    al,0x1a
  40cb9c:	xor    DWORD PTR [edi-0x55d7f35a],ecx
  40cba2:	cdq    
  40cba3:	rol    ebp,0xbf
  40cba6:	ds xchg esi,eax
  40cba8:	mov    edx,esp
  40cbaa:	nop
  40cbab:	sub    al,0x77
  40cbad:	mov    eax,0x6d2c3412
  40cbb2:	ror    BYTE PTR [edx],1
  40cbb4:	(bad)  
  40cbb7:	pop    ebp
  40cbb8:	or     eax,0x3778111d
  40cbbd:	std    
  40cbbe:	inc    edx
  40cbbf:	call   0xee53:0x7e4d3615
  40cbc6:	push   eax
  40cbc7:	bound  edx,QWORD PTR [ebx+0x580b060e]
  40cbcd:	xchg   al,bh
  40cbcf:	mov    ch,BYTE PTR [ebp+eiz*1-0x4e]
  40cbd3:	jg     0x40cbe0
  40cbd5:	or     dh,dl
  40cbd7:	xor    edx,0xffffff96
  40cbda:	pop    ebp
  40cbdb:	push   ecx
  40cbdc:	mov    ecx,0x256327f8
  40cbe1:	sbb    ebx,DWORD PTR [eax+0x46]
  40cbe4:	add    BYTE PTR [ecx+0x1e],bl
  40cbe7:	pushf  
  40cbe8:	cmp    esp,esi
  40cbea:	cmp    bh,BYTE PTR [edi+0x5e67f390]
  40cbf0:	fild   WORD PTR [ecx]
  40cbf2:	sub    DWORD PTR [edi+esi*2-0x68a3ac34],ebx
  40cbf9:	mov    dl,0x66
  40cbfb:	adc    eax,ecx
  40cbfd:	mov    bl,0xaf
  40cbff:	pop    eax
  40cc00:	scas   eax,DWORD PTR es:[edi]
  40cc01:	cmc    
  40cc02:	xor    DWORD PTR [ebx],0x78e46c94
  40cc08:	dec    ebx
  40cc09:	and    ah,BYTE PTR [edx+ecx*2+0x16]
  40cc0d:	pusha  
  40cc0e:	sub    eax,0x4122fab0
  40cc13:	js     0x40cc31
  40cc15:	mov    esp,0x5cbfc65d
  40cc1a:	push   ecx
  40cc1b:	cmc    
  40cc1c:	add    al,0x26
  40cc1e:	xchg   BYTE PTR [edx+ebx*1],dh
  40cc21:	aaa    
  40cc22:	xor    edx,DWORD PTR [ebx+0x6e]
  40cc25:	lods   al,BYTE PTR ds:[esi]
  40cc26:	call   0xbf695acf
  40cc2b:	je     0x40cc85
  40cc2d:	mov    dh,0x71
  40cc2f:	inc    ecx
  40cc30:	jg     0x40cc54
  40cc32:	xor    DWORD PTR [edi+0xb457905],0x7a
  40cc39:	sub    eax,0x1e6c9f1c
  40cc3e:	xor    al,0xdb
  40cc40:	retf   
  40cc41:	hlt    
  40cc42:	add    DWORD PTR [edx+eax*4-0xc],0xae1fd87d
  40cc4a:	push   edx
  40cc4b:	xor    DWORD PTR [esp+ebp*4],ebp
  40cc4e:	dec    eax
  40cc4f:	daa    
  40cc50:	stos   BYTE PTR es:[edi],al
  40cc51:	lock pop esi
  40cc53:	(bad)  
  40cc55:	push   ss
  40cc56:	jnp    0x40ccb2
  40cc58:	sub    ecx,DWORD PTR [eax+0x3ce483aa]
  40cc5e:	imul   esi,edx,0x5b5cab0d
  40cc64:	mov    al,0x25
  40cc66:	mov    al,ds:0xc039ead4
  40cc6b:	pop    ds
  40cc6c:	int3   
  40cc6d:	test   DWORD PTR [ebp-0x1],0x56ddf122
  40cc74:	les    edi,FWORD PTR [ebx+0x75ea112c]
  40cc7a:	repz std 
  40cc7c:	mov    bl,0x53
  40cc7e:	cld    
  40cc7f:	std    
  40cc80:	ins    DWORD PTR es:[edi],dx
  40cc81:	popf   
  40cc82:	fisub  DWORD PTR [ecx-0x502851c4]
  40cc88:	aam    0xb5
  40cc8a:	mov    DWORD PTR [esi],eax
  40cc8c:	mov    dh,0xc1
  40cc8e:	jae    0x40cc69
  40cc90:	mov    ds:0xcdcbe627,al
  40cc95:	mov    edi,DWORD PTR [edx+esi*1-0x53769b0b]
  40cc9c:	inc    eax
  40cc9d:	push   edi
  40cc9e:	jbe    0x40cc43
  40cca0:	mov    eax,0xdb326296
  40cca5:	inc    ebp
  40cca6:	mov    edx,DWORD PTR [edi+0x28]
  40cca9:	adc    dl,BYTE PTR [edx-0x53882447]
  40ccaf:	mov    cl,0xeb
  40ccb1:	mov    al,ds:0xe6661d0
  40ccb6:	pop    DWORD PTR [ebx]
  40ccb8:	xor    bh,BYTE PTR [edi+0x19c49795]
  40ccbe:	or     al,0xfe
  40ccc0:	push   es
  40ccc1:	fisttp WORD PTR ds:0x13724188
  40ccc7:	jmp    0xd764c936
  40cccc:	loope  0x40cd15
  40ccce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cccf:	aam    0x55
  40ccd1:	cmp    al,0x3b
  40ccd3:	jae    0x40cc81
  40ccd5:	je     0x40cc88
  40ccd7:	je     0x40cd10
  40ccd9:	icebp  
  40ccda:	add    eax,0x463643bd
  40ccdf:	dec    eax
  40cce0:	push   edx
  40cce1:	pop    es
  40cce2:	xchg   esp,eax
  40cce3:	mov    bh,0xe5
  40cce5:	je     0x40cc6f
  40cce7:	dec    esp
  40cce8:	ins    BYTE PTR es:[edi],dx
  40cce9:	adc    cl,BYTE PTR [edx]
  40cceb:	push   ecx
  40ccec:	or     ch,BYTE PTR [esi-0x2d]
  40ccef:	in     al,dx
  40ccf0:	mov    cl,0x4a
  40ccf2:	pop    ebp
  40ccf3:	mov    dh,0xfd
  40ccf5:	pop    esp
  40ccf6:	dec    ecx
  40ccf7:	jle    0x40cced
  40ccf9:	xlat   BYTE PTR ds:[ebx]
  40ccfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccfb:	loopne 0x40ccee
  40ccfd:	hlt    
  40ccfe:	scas   al,BYTE PTR es:[edi]
  40ccff:	jnp    0x615ecf3d
  40cd05:	hlt    
  40cd06:	adc    al,0xeb
  40cd08:	stos   BYTE PTR es:[edi],al
  40cd09:	mov    bl,0xa0
  40cd0b:	jg     0x40cc92
  40cd0d:	mov    bh,0xb1
  40cd0f:	ds (bad) 
  40cd12:	mov    WORD PTR [ecx+0x16],ds
  40cd15:	push   0xffffff93
  40cd17:	leave  
  40cd18:	dec    ecx
  40cd19:	out    0xae,al
  40cd1b:	cli    
  40cd1c:	cmc    
  40cd1d:	xchg   edi,eax
  40cd1e:	lea    ebx,[edi-0x4e]
  40cd21:	inc    eax
  40cd22:	mov    al,ds:0xdeedff6d
  40cd27:	jo     0x40cd06
  40cd29:	rcr    cl,cl
  40cd2b:	sbb    eax,0xa53f8b6b
  40cd30:	scas   al,BYTE PTR es:[edi]
  40cd31:	xor    ebx,DWORD PTR [eax-0x68]
  40cd34:	pop    esi
  40cd35:	sub    eax,0xef326ab3
  40cd3a:	xchg   ecx,eax
  40cd3b:	jnp    0x40cd97
  40cd3d:	hlt    
  40cd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3f:	mov    dh,0x16
  40cd41:	js     0x40cda2
  40cd43:	jg     0x40cd0a
  40cd45:	inc    ebx
  40cd46:	jp     0x40cd77
  40cd48:	mov    ch,0x3a
  40cd4a:	test   DWORD PTR [ebx+0x29],0xda454f89
  40cd51:	out    0x60,eax
  40cd53:	add    al,0xcf
  40cd55:	ins    BYTE PTR es:[edi],dx
  40cd56:	ret    
  40cd57:	mov    dl,0xa4
  40cd59:	test   DWORD PTR [ebp-0x5309c200],ebx
  40cd5f:	aad    0x8e
  40cd61:	xchg   edi,eax
  40cd62:	shl    BYTE PTR [esp+eax*1-0x77],1
  40cd66:	jbe    0x40cd42
  40cd68:	rol    BYTE PTR [eax+0x74],0x1e
  40cd6c:	dec    ecx
  40cd6d:	dec    esp
  40cd6e:	xor    eax,0x6d80dea7
  40cd73:	xor    bl,BYTE PTR [esi]
  40cd75:	mov    dh,0xab
  40cd77:	ficom  DWORD PTR [ebx+esi*1-0x32ea7e83]
  40cd7e:	pop    ebp
  40cd7f:	cmp    ebx,DWORD PTR [ecx-0x5f]
  40cd82:	fsub   st(2),st
  40cd84:	aas    
  40cd85:	mov    esp,0x8aa81e38
  40cd8a:	dec    ebp
  40cd8b:	cmp    eax,0x756b2f8
  40cd90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd91:	or     ebx,ebp
  40cd93:	push   0xc0f4b910
  40cd98:	xor    edi,ebp
  40cd9a:	cdq    
  40cd9b:	shl    eax,1
  40cd9d:	out    0x90,eax
  40cd9f:	jp     0x40cd51
  40cda1:	loopne 0x40cdd3
  40cda3:	popf   
  40cda4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda5:	loopne 0x40cdff
  40cda7:	ret    
  40cda8:	cmp    eax,0x7ae7bf2d
  40cdad:	into   
  40cdae:	jg     0x40cd59
  40cdb0:	xor    al,0x68
  40cdb2:	ds (bad) 
  40cdb4:	or     BYTE PTR [ecx+0xf],bl
  40cdb7:	scas   al,BYTE PTR es:[edi]
  40cdb8:	(bad)  
  40cdba:	mov    eax,0xf8f63e5a
  40cdbf:	jmp    0x96bc3c3f
  40cdc4:	cmp    dh,bh
  40cdc6:	jle    0x40ce2f
  40cdc8:	icebp  
  40cdc9:	jmp    FWORD PTR [esi]
  40cdcb:	outs   dx,BYTE PTR ds:[esi]
  40cdcc:	arpl   WORD PTR [ecx-0x4be040a5],bx
  40cdd2:	or     eax,0x24cf31ad
  40cdd7:	push   esi
  40cdd8:	sub    al,0xc3
  40cdda:	ins    BYTE PTR es:[edi],dx
  40cddb:	jmp    FWORD PTR [edx+0x5b205eb4]
  40cde1:	iret   
  40cde2:	in     al,dx
  40cde3:	dec    edi
  40cde4:	out    dx,eax
  40cde5:	in     eax,0x59
  40cde7:	mov    edi,DWORD PTR [ecx+0x3c418e52]
  40cded:	ds fmul st,st(2)
  40cdf0:	mov    edi,0x9d9c5b79
  40cdf5:	leave  
  40cdf6:	jl     0x40ce3c
  40cdf8:	xchg   DWORD PTR [edx],edx
  40cdfa:	sub    al,0x1c
  40cdfc:	dec    edx
  40cdfd:	xchg   edi,ecx
  40cdff:	jle    0x40ce0d
  40ce01:	add    eax,0xf2b0003c
  40ce06:	ds fwait
  40ce08:	inc    esi
  40ce09:	jmp    0x40cdb8
  40ce0b:	out    0x5e,eax
  40ce0d:	xchg   BYTE PTR [esi+eax*8-0x54],dh
  40ce11:	(bad)  
  40ce12:	(bad)  
  40ce13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce14:	dec    edi
  40ce15:	xor    eax,0x3f1f1d49
  40ce1a:	jne    0x40ce19
  40ce1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1d:	jmp    0x40cdd1
  40ce1f:	cmp    eax,0x9ba7ec26
  40ce24:	sbb    DWORD PTR [eax],ebp
  40ce26:	shr    edx,0x21
  40ce29:	out    0x46,al
  40ce2b:	adc    edx,DWORD PTR [ecx-0x2c]
  40ce2e:	pop    ebx
  40ce2f:	fmul   st,st(7)
  40ce31:	dec    eax
  40ce32:	aam    0xe
  40ce34:	nop
  40ce35:	xor    al,0x8e
  40ce37:	bound  edi,QWORD PTR [edi+edx*4-0x2a]
  40ce3b:	mov    ecx,0xd433b88
  40ce40:	xlat   BYTE PTR ds:[ebx]
  40ce41:	mov    BYTE PTR [ebp-0x2d],bh
  40ce44:	sub    al,0x0
  40ce46:	push   ebx
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	mov    ds:0xc2bae7b8,al
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x33]
  40d11e:	dec    ebx
  40d11f:	and    BYTE PTR [edi],cl
  40d121:	imul   DWORD PTR [eax+edi*2]
  40d124:	xor    al,0x78
  40d126:	data16 jno 0x40d127
  40d129:	fisub  DWORD PTR [edx-0x36e12519]
  40d12f:	in     eax,0xc9
  40d131:	pop    es
  40d132:	loop   0x40d0c3
  40d134:	test   DWORD PTR [ebx],0x9c3b967f
  40d13a:	dec    esp
  40d13b:	push   eax
  40d13c:	je     0x40d152
  40d13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d13f:	sbb    al,0x17
  40d141:	cmp    al,0x67
  40d143:	inc    esp
  40d144:	mov    edx,0x75bcc81f
  40d149:	jne    0x40d176
  40d14b:	bound  esi,QWORD PTR [edi+0x2a]
  40d14e:	in     eax,0x9a
  40d150:	cli    
  40d151:	cmp    bl,ch
  40d153:	(bad)  
  40d154:	sahf   
  40d155:	cmp    eax,0x35f0ae43
  40d15a:	mov    al,ds:0xaaef06ec
  40d15f:	cmp    ah,dh
  40d161:	and    al,0x2f
  40d163:	test   al,0x30
  40d165:	adc    DWORD PTR [edx+0x8],ecx
  40d168:	es inc edi
  40d16a:	in     eax,dx
  40d16b:	shl    edi,1
  40d16d:	fmul   DWORD PTR [ebx+0x3]
  40d170:	pop    edx
  40d171:	fidivr DWORD PTR [esi]
  40d173:	mov    bl,0x69
  40d175:	inc    esi
  40d176:	xlat   BYTE PTR ds:[ebx]
  40d177:	out    dx,eax
  40d178:	jmp    0x40d1a3
  40d17a:	mov    ss,esp
  40d17c:	add    BYTE PTR [esi+ebx*2],dl
  40d17f:	lock mov ds:0xd81e0f77,al
  40d185:	in     al,dx
  40d186:	pop    ebp
  40d187:	pop    edx
  40d188:	fwait
  40d189:	hlt    
  40d18a:	test   al,0xf2
  40d18c:	add    eax,0x7e35a4fb
  40d191:	jmp    0x497e1e7d
  40d196:	(bad)
  40d19a:	rcl    esi,cl
  40d19c:	test   al,0xed
  40d19e:	push   0xffffffde
  40d1a0:	out    dx,eax
  40d1a1:	enter  0xae6d,0x7f
  40d1a5:	stc    
  40d1a6:	dec    ebp
  40d1a7:	and    eax,esi
  40d1a9:	scas   al,BYTE PTR es:[edi]
  40d1aa:	repnz fist WORD PTR [edi]
  40d1ad:	xor    ecx,ebp
  40d1af:	lods   eax,DWORD PTR ds:[esi]
  40d1b0:	push   cs
  40d1b1:	sub    bl,BYTE PTR [eax+0x4ef79742]
  40d1b7:	(bad)  
  40d1b8:	jb     0x40d159
  40d1ba:	test   BYTE PTR [ecx+ebp*8],al
  40d1bd:	pop    edx
  40d1be:	rcl    bl,cl
  40d1c0:	(bad)  
  40d1c1:	sub    al,0x1e
  40d1c3:	aas    
  40d1c4:	or     ch,BYTE PTR [esi+0x1e]
  40d1c7:	mov    ds:0x77b8dad3,al
  40d1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1cd:	mov    ecx,0xaf38f95d
  40d1d2:	jnp    0x40d1d2
  40d1d4:	push   edi
  40d1d5:	mov    bl,0x84
  40d1d7:	ror    DWORD PTR [eax],1
  40d1d9:	jg     0x40d163
  40d1db:	push   esp
  40d1dc:	pop    ebp
  40d1dd:	inc    ebp
  40d1de:	cwde   
  40d1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e0:	and    edi,DWORD PTR [esi+esi*8+0x9]
  40d1e4:	sbb    BYTE PTR [edi-0x5d928def],dl
  40d1ea:	jp     0x40d1f6
  40d1ec:	aaa    
  40d1ed:	jmp    0xdc4b:0x378f0b96
  40d1f4:	add    dh,BYTE PTR [edx+esi*2]
  40d1f7:	cmc    
  40d1f8:	shl    bl,cl
  40d1fa:	sbb    eax,0xd22c84d9
  40d1ff:	ds dec esp
  40d201:	inc    edi
  40d202:	jbe    0x40d261
  40d204:	or     dh,0x26
  40d207:	mov    ah,0x5f
  40d209:	push   ebx
  40d20a:	mov    bl,0xba
  40d20c:	jo     0x40d198
  40d20e:	dec    ebp
  40d20f:	fsubr  st,st(0)
  40d211:	shl    BYTE PTR [esi+esi*4+0x34],0x2f
  40d216:	fwait
  40d217:	lahf   
  40d218:	stos   BYTE PTR es:[edi],al
  40d219:	xor    DWORD PTR [eax-0x45],ebp
  40d21c:	and    DWORD PTR [ebp+0x54],edx
  40d21f:	lahf   
  40d220:	cmc    
  40d221:	cwde   
  40d222:	je     0x40d282
  40d224:	push   esp
  40d225:	call   0xfba8:0x9b0b08f9
  40d22c:	test   DWORD PTR [edx+0x38],ecx
  40d22f:	jno    0x40d208
  40d231:	mov    bh,0x30
  40d233:	or     DWORD PTR [ebx],ebp
  40d235:	jne    0x40d244
  40d237:	(bad)  
  40d239:	push   eax
  40d23a:	bnd jle 0x40d1e1
  40d23d:	jmp    0x40d24b
  40d23f:	(bad)  
  40d240:	call   0xe952c017
  40d245:	xor    al,0xad
  40d247:	ret    
  40d248:	cs xchg ebp,eax
  40d24a:	(bad)  
  40d24b:	lahf   
  40d24c:	das    
  40d24d:	jecxz  0x40d2ce
  40d24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d250:	mov    ebp,0x95e05159
  40d255:	in     eax,dx
  40d256:	stos   DWORD PTR es:[edi],eax
  40d257:	js     0x40d23c
  40d259:	add    al,0xcf
  40d25b:	inc    eax
  40d25c:	je     0x40d279
  40d25e:	call   0x9d88e1f1
  40d263:	div    DWORD PTR [ecx]
  40d265:	inc    eax
  40d266:	sub    DWORD PTR [ebx+0x7e],ecx
  40d269:	pop    ebx
  40d26a:	push   esi
  40d26b:	gs jg  0x40d237
  40d26e:	add    ch,BYTE PTR [ecx+0x32]
  40d271:	jno    0x40d230
  40d273:	or     BYTE PTR [esi],ah
  40d275:	or     DWORD PTR [ebx-0x753dcebe],ebp
  40d27b:	pop    ebx
  40d27c:	outs   dx,BYTE PTR ds:[esi]
  40d27d:	stos   BYTE PTR es:[edi],al
  40d27e:	adc    al,BYTE PTR [esi-0xa]
  40d281:	jo     0x40d229
  40d283:	(bad)  
  40d284:	sub    ch,BYTE PTR [esi]
  40d286:	and    DWORD PTR [ebx],esp
  40d288:	or     al,0xe7
  40d28a:	sub    edi,DWORD PTR ds:[edi-0x2de7235d]
  40d291:	inc    edi
  40d292:	mov    eax,ds:0x615ccad2
  40d297:	inc    esp
  40d298:	test   DWORD PTR [ecx+0x4d],esp
  40d29b:	sbb    ch,BYTE PTR ds:0xb1098ba8
  40d2a1:	(bad)  
  40d2a2:	pop    esp
  40d2a3:	pop    ds
  40d2a4:	dec    esp
  40d2a5:	jle    0x40d23f
  40d2a7:	xor    eax,0xd6de7bc4
  40d2ac:	jecxz  0x40d255
  40d2ae:	jg     0x40d29f
  40d2b0:	fadd   st(1),st
  40d2b2:	inc    ecx
  40d2b3:	mov    edi,0xa559f038
  40d2b8:	adc    ch,BYTE PTR [ebp+0x76c167ef]
  40d2be:	shr    esp,cl
  40d2c0:	push   esp
  40d2c1:	psllw  mm4,QWORD PTR [edx]
  40d2c4:	inc    esp
  40d2c5:	nop
  40d2c6:	lea    ebp,[edx-0x70]
  40d2c9:	int3   
  40d2ca:	lods   al,BYTE PTR ds:[esi]
  40d2cb:	daa    
  40d2cc:	aaa    
  40d2cd:	jb     0x40d2da
  40d2cf:	imul   esi,DWORD PTR [ecx],0x1f
  40d2d2:	loopne 0x40d2f1
  40d2d4:	jbe    0x40d341
  40d2d6:	ds in  al,dx
  40d2d8:	aaa    
  40d2d9:	xor    cl,BYTE PTR [esi]
  40d2db:	ds fwait
  40d2dd:	inc    eax
  40d2de:	jbe    0x40d2da
  40d2e0:	pop    edx
  40d2e1:	leave  
  40d2e2:	mov    al,ds:0x7aea3dd0
  40d2e7:	dec    esp
  40d2e8:	popa   
  40d2e9:	mov    DWORD PTR [eax-0x355d7aba],esp
  40d2ef:	clc    
  40d2f0:	cmp    al,0xa5
  40d2f2:	cmp    bh,BYTE PTR [esi+eiz*4]
  40d2f5:	cmc    
  40d2f6:	add    ebp,DWORD PTR [ebp-0x60]
  40d2f9:	sub    al,0xfc
  40d2fb:	shl    DWORD PTR [edi+ecx*2],cl
  40d2fe:	mov    dl,0x83
  40d300:	cmp    eax,0x8cabb1b4
  40d305:	std    
  40d306:	dec    eax
  40d307:	(bad)  
  40d308:	(bad)  
  40d309:	repz xor eax,esp
  40d30c:	dec    eax
  40d30d:	push   edx
  40d30e:	dec    edi
  40d30f:	iret   
  40d310:	mov    BYTE PTR [ebx+ecx*2-0x53c1e0eb],cl
  40d317:	es dec eax
  40d319:	je     0x40d34d
  40d31b:	clc    
  40d31c:	adc    ebp,DWORD PTR ds:0xe7dd13a6
  40d322:	adc    al,0x18
  40d324:	lock push es
  40d326:	in     eax,dx
  40d327:	adc    BYTE PTR [esp+ebx*2+0x22af5ed7],bh
  40d32e:	int3   
  40d32f:	mov    ah,0xb9
  40d331:	inc    esp
  40d332:	cld    
  40d333:	dec    esi
  40d334:	inc    edi
  40d335:	pop    ebp
  40d336:	call   0x22b8:0xbc95c164
  40d33d:	imul   edx,DWORD PTR [eax+edi*4],0x2c
  40d341:	push   ss
  40d342:	gs cmp al,0xff
  40d345:	div    BYTE PTR [esi]
  40d347:	hlt    
  40d348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d349:	in     eax,dx
  40d34a:	sbb    esi,DWORD PTR [esp+esi*8+0x77]
  40d34e:	inc    ebp
  40d34f:	add    esp,DWORD PTR [ebx]
  40d351:	jg     0x40d2f9
  40d353:	sbb    cl,BYTE PTR [esi+edx*4-0x6f33e045]
  40d35a:	adc    al,0x13
  40d35c:	test   eax,0x793a399f
  40d361:	ins    DWORD PTR es:[edi],dx
  40d362:	inc    edx
  40d363:	sbb    eax,0xce644937
  40d368:	jns    0x40d396
  40d36a:	and    al,0xde
  40d36c:	mov    dl,0x84
  40d36e:	cdq    
  40d36f:	call   0x776d:0x84607b29
  40d376:	push   ebp
  40d377:	lds    edx,FWORD PTR [edi-0x3d335d0a]
  40d37d:	stos   DWORD PTR es:[edi],eax
  40d37e:	mov    fs,WORD PTR [edi+0x60]
  40d381:	(bad)  
  40d382:	loop   0x40d313
  40d384:	xchg   DWORD PTR [edi],ebp
  40d386:	mov    ecx,0x99afcd38
  40d38b:	push   0x335ecd1f
  40d390:	sbb    edi,DWORD PTR [edx]
  40d392:	loope  0x40d340
  40d394:	add    BYTE PTR [edx+edx*8],0x83
  40d398:	jmp    0x8d695b6c
  40d39d:	mov    esi,0x96047e38
  40d3a2:	mov    ah,0x8b
  40d3a4:	out    dx,al
  40d3a5:	mov    BYTE PTR [esi+0x41],bh
  40d3a8:	(bad)  
  40d3a9:	xlat   BYTE PTR ds:[ebx]
  40d3aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ab:	inc    ebp
  40d3ac:	cwde   
  40d3ad:	mov    al,ds:0x145d3e57
  40d3b2:	jae    0x40d338
  40d3b4:	stc    
  40d3b5:	xchg   ebp,eax
  40d3b6:	push   0x4f
  40d3b8:	sub    ebx,DWORD PTR [ebx]
  40d3ba:	push   esi
  40d3bb:	mov    al,0x48
  40d3bd:	push   ecx
  40d3be:	sti    
  40d3bf:	stc    
  40d3c0:	cmp    BYTE PTR [ebx-0x59b014e8],ah
  40d3c6:	sub    edi,DWORD PTR [ecx-0x743a03c7]
  40d3cc:	es jmp 0xbdf3:0x3c17a7b4
  40d3d4:	and    al,0x47
  40d3d6:	sbb    ecx,ebx
  40d3d8:	rcr    BYTE PTR [edx],cl
  40d3da:	cdq    
  40d3db:	icebp  
  40d3dc:	icebp  
  40d3dd:	dec    ecx
  40d3de:	sbb    edx,ebx
  40d3e0:	cld    
  40d3e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3e2:	nop
  40d3e3:	push   edx
  40d3e4:	(bad)  [ebx+0x38aa07b7]
  40d3ea:	sbb    DWORD PTR [ecx+0x46],ecx
  40d3ed:	jb     0x40d3ec
  40d3ef:	popf   
  40d3f0:	jnp    0x40d3c6
  40d3f2:	pop    edi
  40d3f3:	xchg   edx,eax
  40d3f4:	push   edi
  40d3f5:	dec    esp
  40d3f6:	imul   ecx,DWORD PTR [ecx+0x7f],0x57
  40d3fa:	out    0x86,al
  40d3fc:	(bad)  
  40d3fd:	adc    dh,BYTE PTR [edi]
  40d3ff:	in     al,0x15
  40d401:	mov    BYTE PTR [eax+0x14],cl
  40d404:	neg    BYTE PTR [ecx+ecx*2]
  40d407:	mov    al,ds:0xb5abbd9
  40d40c:	fsubp  st(3),st
  40d40e:	popf   
  40d40f:	psadbw mm3,mm7
  40d412:	call   0xd00f:0x5960aa98
  40d419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41a:	test   dh,bh
  40d41c:	clc    
  40d41d:	mov    esi,0xe8b9febf
  40d422:	clc    
  40d423:	cli    
  40d424:	nop    DWORD PTR [ecx-0x239d4d65]
  40d42b:	inc    ebx
  40d42c:	(bad)  
  40d42d:	je     0x40d3dd
  40d42f:	mov    al,ds:0x304387ac
  40d434:	mov    al,0x21
  40d436:	push   esi
  40d437:	mov    bl,0xdc
  40d439:	mov    edx,0x36abb9f
  40d43e:	test   bl,bh
  40d440:	inc    ebp
  40d441:	es mov al,0x5f
  40d444:	fld    DWORD PTR [esi+0x2399fe4f]
  40d44a:	lea    ebx,[ecx+0x5e]
  40d44d:	jp     0x40d3d0
  40d44f:	test   al,0x90
  40d451:	stos   BYTE PTR es:[edi],al
  40d452:	mov    cl,0xf4
  40d454:	mov    eax,ds:0x96329741
  40d459:	mov    ecx,0x7e5d516f
  40d45e:	retf   0xdaa3
  40d461:	mov    dl,0x7d
  40d463:	xchg   ebx,eax
  40d464:	(bad)  
  40d466:	shl    ch,cl
  40d468:	dec    edi
  40d469:	and    eax,esp
  40d46b:	inc    esi
  40d46c:	ffreep st(0)
  40d46e:	push   es
  40d46f:	retf   0x9ced
  40d472:	sub    eax,0xc84e3173
  40d477:	or     BYTE PTR [ecx+edi*8-0x5712535d],0xf1
  40d47f:	bound  ebx,QWORD PTR [edx+0x506682b0]
  40d485:	sub    eax,0x14067e78
  40d48a:	jecxz  0x40d477
  40d48c:	je     0x40d438
  40d48e:	and    eax,0x33acc619
  40d493:	jb     0x40d47e
  40d495:	pop    edi
  40d496:	in     al,0x5e
  40d498:	push   cs
  40d499:	sbb    ebp,DWORD PTR [ebp+0x3c]
  40d49c:	sbb    BYTE PTR [esi+ebx*1],al
  40d49f:	retfw  0xf124
  40d4a3:	bound  ebx,QWORD PTR [edx-0x12]
  40d4a6:	pop    ds
  40d4a7:	loope  0x40d4fa
  40d4a9:	jb     0x40d51f
  40d4ab:	and    DWORD PTR [eax-0x61],0x5c9d3a37
  40d4b2:	fiadd  DWORD PTR [edi-0x75]
  40d4b5:	jae    0x40d473
  40d4b7:	xlat   BYTE PTR ds:[ebx]
  40d4b8:	mov    bh,0x1d
  40d4ba:	adc    ebx,eax
  40d4bc:	pop    edi
  40d4bd:	mov    al,0xaf
  40d4bf:	pop    ss
  40d4c0:	leave  
  40d4c1:	pop    es
  40d4c2:	dec    ecx
  40d4c3:	icebp  
  40d4c4:	cmp    eax,0x517129b1
  40d4c9:	or     al,0x3b
  40d4cb:	or     edx,DWORD PTR [esi+ebp*8-0x7f0d734b]
  40d4d2:	ret    0xa060
  40d4d5:	lock xchg ebp,eax
  40d4d7:	mov    ds:0x3796bc16,eax
  40d4dc:	in     eax,dx
  40d4dd:	sti    
  40d4de:	xchg   esp,eax
  40d4df:	pop    ebp
  40d4e0:	xchg   edi,eax
  40d4e1:	mov    bl,bh
  40d4e3:	hlt    
  40d4e4:	pop    edx
  40d4e5:	jns    0x40d4b8
  40d4e7:	std    
  40d4e8:	(bad)  
  40d4e9:	sbb    eax,0xa1c8368a
  40d4ee:	jl     0x40d497
  40d4f0:	fnstcw WORD PTR [edi+0x48ab333a]
  40d4f6:	mov    eax,DWORD PTR [eax-0x4733cdc8]
  40d4fc:	pop    ebp
  40d4fd:	dec    eax
  40d4fe:	inc    ebp
  40d4ff:	sbb    al,0xb3
  40d501:	pop    esi
  40d502:	jge    0x40d4c0
  40d504:	pop    ebx
  40d505:	jno    0x40d497
  40d507:	mov    ebx,0xa0fecf8a
  40d50c:	inc    edx
  40d50d:	mov    bl,BYTE PTR [esi-0x7f]
  40d510:	or     eax,0xb204ee7f
  40d515:	fs repnz add al,0x7b
  40d519:	pop    esi
  40d51a:	sub    DWORD PTR [eax],ebp
  40d51c:	push   eax
  40d51d:	push   edi
  40d51e:	xchg   ebx,eax
  40d51f:	in     eax,dx
  40d520:	addr16 mov ds:0xc43c,eax
  40d524:	(bad)
  40d527:	cmp    bl,BYTE PTR [edi]
  40d529:	sbb    dl,bl
  40d52b:	not    BYTE PTR [ecx+0x3f]
  40d52e:	sub    al,0x90
  40d530:	gs ret 
  40d532:	sub    edi,DWORD PTR [ecx]
  40d534:	test   DWORD PTR [esi+ebx*2+0x22],ebx
  40d538:	aam    0xfc
  40d53a:	dec    esi
  40d53b:	les    eax,FWORD PTR [ebx+ebp*1]
  40d53e:	pop    edi
  40d53f:	pop    ecx
  40d540:	fsubrp st(3),st
  40d542:	pop    esp
  40d543:	mov    cl,0xfb
  40d545:	lods   eax,DWORD PTR ds:[esi]
  40d546:	add    bl,bl
  40d548:	retf   
  40d549:	xchg   esi,eax
  40d54a:	mov    ds:0x27678f5b,al
  40d54f:	mov    al,BYTE PTR [edi-0x58]
  40d552:	mov    al,0xbe
  40d554:	jle    0x40d53c
  40d556:	cwde   
  40d557:	loop   0x40d5a2
  40d559:	xchg   ecx,eax
  40d55a:	test   DWORD PTR [edx+0x440f815c],edi
  40d560:	(bad)  
  40d561:	cli    
  40d562:	xchg   ebx,eax
  40d563:	jl     0x40d578
  40d565:	scas   al,BYTE PTR es:[edi]
  40d566:	push   ss
  40d567:	popa   
  40d568:	dec    sp
  40d56a:	mov    bh,0x18
  40d56c:	(bad)  
  40d56d:	iret   
  40d56e:	dec    edx
  40d56f:	mov    edx,0x3d1e7e
  40d574:	into   
  40d575:	jne    0x40d533
  40d577:	xor    al,0xbc
  40d579:	mov    edx,DWORD PTR [edi+0x7c]
  40d57c:	mov    ebp,0x135a8d2e
  40d581:	or     eax,0xb6402c11
  40d586:	pop    esp
  40d587:	mov    ah,0x12
  40d589:	sbb    esi,esp
  40d58b:	inc    eax
  40d58c:	pushf  
  40d58d:	push   ecx
  40d58e:	xor    al,0x40
  40d590:	call   0x2bbc:0x8d7c2f79
  40d597:	and    DWORD PTR [esi+0x462081ef],esp
  40d59d:	push   ecx
  40d59e:	and    al,0x44
  40d5a0:	cli    
  40d5a1:	inc    ebx
  40d5a2:	lahf   
  40d5a3:	sti    
  40d5a4:	sbb    dl,BYTE PTR [eax-0x1b26dc0b]
  40d5aa:	fisub  DWORD PTR [edx]
  40d5ac:	inc    esi
  40d5ad:	sub    al,0xd5
  40d5af:	shr    ah,1
  40d5b1:	ja     0x40d594
  40d5b3:	outs   dx,BYTE PTR ds:[esi]
  40d5b4:	and    esp,DWORD PTR [edi]
  40d5b6:	sbb    dh,BYTE PTR [ecx+0x254a374a]
  40d5bc:	(bad)  
  40d5bd:	fwait
  40d5be:	push   cs
  40d5bf:	cli    
  40d5c0:	adc    al,0x96
  40d5c2:	cmp    esp,DWORD PTR [ecx+0x6eeff363]
  40d5c8:	pop    edi
  40d5c9:	fbstp  TBYTE PTR [ebp-0x7f]
  40d5cc:	std    
  40d5cd:	cmp    al,0xf6
  40d5cf:	push   eax
  40d5d0:	out    0xdc,eax
  40d5d2:	scas   al,BYTE PTR es:[edi]
  40d5d3:	add    ebp,DWORD PTR [ebp-0x2e617e28]
  40d5d9:	cmp    al,0xe5
  40d5db:	jo     0x40d5a2
  40d5dd:	xor    al,0x51
  40d5df:	test   al,0xa7
  40d5e1:	cmp    al,BYTE PTR [edi]
  40d5e3:	jns    0x40d57b
  40d5e5:	cld    
  40d5e6:	lods   eax,DWORD PTR ds:[esi]
  40d5e7:	mov    DWORD PTR [ecx-0x52],0x85909610
  40d5ee:	out    0x1f,al
  40d5f0:	scas   al,BYTE PTR es:[edi]
  40d5f1:	and    bh,BYTE PTR [ebp-0x68230cf4]
  40d5f7:	mov    ds:0xac74e06c,eax
  40d5fc:	or     eax,0xd7ecbe9b
  40d601:	ds dec esp
  40d603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d604:	xchg   edx,eax
  40d605:	cmp    BYTE PTR [ebp-0x36b99892],0xaf
  40d60c:	push   cs
  40d60d:	xchg   ebx,eax
  40d60e:	xor    edi,0x8b804d4d
  40d614:	add    esi,ebx
  40d616:	sti    
  40d617:	ja     0x40d5ec
  40d619:	sub    ecx,DWORD PTR ds:[esi+0x17]
  40d61d:	and    eax,0x8df2067a
  40d622:	jns    0x40d601
  40d624:	fidivr WORD PTR [edx+ebx*8-0xb]
  40d628:	or     BYTE PTR [edx],cl
  40d62a:	mov    DWORD PTR [edx-0x75],eax
  40d62d:	sbb    eax,0x3d3d6f70
  40d632:	cmp    eax,0x45ec1f9e
  40d637:	repnz mov dh,0x9d
  40d63a:	(bad)  
  40d63b:	mov    edx,0xaca651c1
  40d640:	jg     0x40d697
  40d642:	js     0x40d5ef
  40d644:	jmp    0xe3ecc8a8
  40d649:	sahf   
  40d64a:	cmp    BYTE PTR [edx+0x58a25a5e],cl
  40d650:	cmp    eax,0xe1d94105
  40d655:	sub    dl,BYTE PTR [ecx+0x3e]
  40d658:	nop
  40d659:	out    0x8,al
  40d65b:	mov    al,0x6d
  40d65d:	cmp    al,0x56
  40d65f:	or     DWORD PTR [ebx+0x67],ecx
  40d662:	push   edx
  40d663:	xchg   edi,eax
  40d664:	leave  
  40d665:	jnp    0x40d63f
  40d667:	pop    edi
  40d668:	addr16 jle 0x40d695
  40d66b:	push   es
  40d66c:	mov    WORD PTR [edi+0x72055f19],ss
  40d672:	dec    ebx
  40d673:	ret    0x7fdb
  40d676:	mov    ds,WORD PTR [ecx-0x52]
  40d679:	adc    DWORD PTR [ebp+0x3a10752d],ebx
  40d67f:	sbb    esi,DWORD PTR [esi]
  40d681:	dec    eax
  40d682:	mov    WORD PTR [eax],ds
  40d684:	js     0x40d684
  40d686:	test   al,0x2e
  40d688:	cmp    BYTE PTR [ebx+0x31fc6108],cl
  40d68e:	(bad)  
  40d68f:	js     0x40d698
  40d691:	mov    dh,0x7a
  40d693:	inc    ebp
  40d694:	dec    edi
  40d695:	pop    esi
  40d696:	mov    eax,ds:0x5ff4e21b
  40d69b:	inc    esi
  40d69c:	(bad)  
  40d69d:	repnz into 
  40d69f:	pop    ebx
  40d6a0:	cwde   
  40d6a1:	xchg   DWORD PTR [ebp+0x5e],edi
  40d6a4:	dec    ebp
  40d6a5:	add    ebx,DWORD PTR [ebp+0x793ffa2f]
  40d6ab:	ficom  WORD PTR [ebx]
  40d6ad:	test   BYTE PTR [edx+ecx*8+0x39],0xf9
  40d6b2:	mov    dh,0xfa
  40d6b4:	mov    bh,0xc8
  40d6b6:	mov    WORD PTR [eax+0x559a57e3],?
  40d6bc:	push   ebp
  40d6bd:	cmc    
  40d6be:	mov    bh,0x92
  40d6c0:	sub    esi,DWORD PTR [ebp+0x6ac9afbe]
  40d6c6:	cmp    ch,ah
  40d6c8:	xor    DWORD PTR [esi],0x55ad005
  40d6ce:	pop    ecx
  40d6cf:	mov    esp,0xbbee4acf
  40d6d4:	mov    ch,0x1f
  40d6d6:	dec    ebp
  40d6d7:	jecxz  0x40d6b6
  40d6d9:	ja     0x40d67f
  40d6db:	neg    BYTE PTR [ebx-0x66155dd2]
  40d6e1:	ins    BYTE PTR es:[edi],dx
  40d6e2:	sbb    ah,BYTE PTR [edx+0x26]
  40d6e5:	iret   
  40d6e6:	sub    DWORD PTR [esi+0x144047e4],esi
  40d6ec:	xor    BYTE PTR [edi-0x1c0d71ed],bh
  40d6f2:	fimul  WORD PTR [esi]
  40d6f4:	enter  0x7cab,0xf8
  40d6f8:	adc    eax,0x1a8d438c
  40d6fd:	jo     0x40d721
  40d6ff:	xlat   BYTE PTR ds:[ebx]
  40d700:	inc    ecx
  40d701:	stos   DWORD PTR es:[edi],eax
  40d702:	xchg   ebp,eax
  40d703:	pop    ebp
  40d705:	xor    esp,eax
  40d707:	lock sub ch,ch
  40d70a:	retf   0xed81
  40d70d:	retf   0x5acb
  40d710:	jne    0x40d71e
  40d712:	ret    
  40d713:	in     eax,0x2e
  40d715:	mov    BYTE PTR [esi+0x41a3500a],dh
  40d71b:	or     DWORD PTR [ecx+0x57],ebx
  40d71e:	add    al,0x43
  40d720:	repz mov ah,0x2d
  40d723:	adc    BYTE PTR [ebp-0x292c0fa8],cl
  40d729:	mov    al,0xe5
  40d72b:	aam    0xcf
  40d72d:	mov    fs,ebx
  40d72f:	dec    ebx
  40d730:	add    al,0xda
  40d732:	mov    ecx,eax
  40d734:	pop    esi
  40d735:	push   ecx
  40d736:	jne    0x40d743
  40d738:	push   esi
  40d739:	push   0xfffffff7
  40d73b:	data16 and BYTE PTR [eax+0x79a2b2aa],0x20
  40d743:	xor    al,0x61
  40d745:	in     al,dx
  40d746:	icebp  
  40d747:	data16 into 
  40d749:	gs stc 
  40d74b:	icebp  
  40d74c:	in     eax,0x6c
  40d74e:	aaa    
  40d74f:	sar    BYTE PTR [ecx+0x4ad6e2bf],1
  40d755:	mov    bl,0xd0
  40d757:	sub    eax,0x2ff0608d
  40d75c:	xor    DWORD PTR [edi+0x1f026b23],0xd
  40d763:	cwde   
  40d764:	jnp    0x40d742
  40d766:	sub    ecx,0xfffffff6
  40d769:	xchg   ebp,eax
  40d76a:	add    al,0xa1
  40d76c:	inc    edi
  40d76d:	xor    DWORD PTR [ecx],0xffffff9f
  40d770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d771:	xor    DWORD PTR [edi+0x5de0b],ebp
  40d777:	inc    ebp
  40d778:	clc    
  40d779:	les    edi,FWORD PTR ds:0xff519a0a
  40d77f:	dec    edi
  40d780:	jno    0x40d72f
  40d782:	jp     0x40d72b
  40d784:	jae    0x40d777
  40d786:	gs daa 
  40d788:	sbb    al,ch
  40d78a:	in     eax,dx
  40d78b:	pop    es
  40d78c:	popa   
  40d78d:	in     al,0xd2
  40d78f:	jmp    0xa0b8:0xf9a3933b
  40d796:	retf   0x8c43
  40d799:	es js  0x40d801
  40d79c:	rol    BYTE PTR [eax],1
  40d79e:	aam    0xb
  40d7a0:	adc    ebp,ebx
  40d7a2:	ins    BYTE PTR es:[edi],dx
  40d7a3:	mov    al,0xdc
  40d7a5:	ficom  DWORD PTR [esi]
  40d7a7:	jge    0x40d7ea
  40d7a9:	pop    ebp
  40d7aa:	sbb    BYTE PTR [ecx+ecx*2+0x6d],0xfd
  40d7af:	inc    edi
  40d7b0:	es enter 0x502e,0x1e
  40d7b5:	aaa    
  40d7b6:	jg     0x40d817
  40d7b8:	icebp  
  40d7b9:	mov    ebp,0xe911e022
  40d7be:	pop    ebp
  40d7bf:	fdivr  DWORD PTR [ebp-0xfde6e9f]
  40d7c5:	ss mov ch,0xa7
  40d7c8:	add    BYTE PTR [eax],dl
  40d7ca:	mov    eax,ds:0x760158bd
  40d7cf:	fwait
  40d7d0:	sahf   
  40d7d1:	or     dl,BYTE PTR [edi]
  40d7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d4:	retf   0xd3aa
  40d7d7:	ss daa 
  40d7d9:	enter  0xcbb2,0x7e
  40d7dd:	iret   
  40d7de:	(bad)  [edi]
  40d7e0:	jmp    0xbaf53621
  40d7e5:	mov    ecx,0xf407d75
  40d7ea:	and    eax,0x7c5fd1b
  40d7ef:	imul   ebp,DWORD PTR [edi-0x2895d782],0xdc9fc085
  40d7f9:	dec    ebx
  40d7fa:	pop    ds
  40d7fb:	gs mov esi,0xad62a3b5
  40d801:	shl    ebp,0x7e
  40d804:	add    BYTE PTR [edx-0xdca51c4],dh
  40d80a:	test   al,0xd6
  40d80c:	nop
  40d80d:	cld    
  40d80e:	mov    ebp,0x89a64c22
  40d813:	lods   al,BYTE PTR ds:[esi]
  40d814:	pop    ds
  40d815:	mov    BYTE PTR [esi+0x6e94fb03],ah
  40d81b:	add    BYTE PTR [esi],bl
  40d81d:	mov    bl,0x7b
  40d81f:	add    ch,BYTE PTR [edx+0x74b3ca9f]
  40d825:	mov    edx,0xa3946e9c
  40d82a:	out    0x9b,eax
  40d82c:	jo     0x40d844
  40d82e:	add    ebx,DWORD PTR [edx+0x27e29076]
  40d834:	xor    DWORD PTR [ebx-0x164a1c6a],edi
  40d83a:	mov    ecx,ecx
  40d83c:	repnz add eax,0x447d86ce
  40d842:	pop    edi
  40d843:	mov    ds:0x8100489d,eax
  40d848:	or     al,0xbe
  40d84a:	(bad)  
  40d84b:	or     eax,0x4de8c142
  40d850:	fld    QWORD PTR [ebx+eiz*4]
  40d853:	call   0xf1b2508a
  40d858:	ret    0xe6f
  40d85b:	fist   DWORD PTR [esi]
  40d85d:	cli    
  40d85e:	nop
  40d85f:	adc    DWORD PTR [eax+0x44],ecx
  40d862:	stos   BYTE PTR es:[edi],al
  40d863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d864:	sar    BYTE PTR [ebx+0xd385dc1],1
  40d86a:	pop    ecx
  40d86b:	xchg   BYTE PTR [eax+0x453f5271],dl
  40d871:	push   0x8d78e674
  40d876:	hlt    
  40d877:	push   esi
  40d878:	mov    gs,WORD PTR [ebp+esi*2-0x65]
  40d87c:	cdq    
  40d87d:	leave  
  40d87e:	mov    fs,edi
  40d880:	add    dh,BYTE PTR [edx]
  40d882:	add    DWORD PTR [ebx+ecx*1-0x5a],0xd2533a9d
  40d88a:	xor    al,0x32
  40d88c:	xchg   edx,eax
  40d88d:	sub    al,0x62
  40d88f:	xchg   esi,eax
  40d890:	dec    esi
  40d891:	fstp   QWORD PTR [ebp-0x1b]
  40d894:	aad    0x37
  40d896:	sbb    DWORD PTR [esi-0x6b9bd7de],0xfffffffc
  40d89d:	in     al,dx
  40d89e:	mov    esi,0x5de94dcb
  40d8a3:	jecxz  0x40d90f
  40d8a5:	fbld   TBYTE PTR [edi-0x64]
  40d8a8:	cmc    
  40d8a9:	mov    cl,BYTE PTR [ebp+0x33]
  40d8ac:	call   0x5ddbdb60
  40d8b1:	sub    cl,al
  40d8b3:	sar    cl,0x18
  40d8b6:	in     al,dx
  40d8b7:	dec    esi
  40d8b8:	int3   
  40d8b9:	mov    edx,0x81f237f6
  40d8be:	(bad)  
  40d8bf:	sub    eax,0xbcfa153d
  40d8c4:	fcmovne st,st(5)
  40d8c6:	rcl    dl,cl
  40d8c8:	mov    dl,0xe7
  40d8ca:	jno    0x40d8f2
  40d8cc:	jg     0x40d880
  40d8ce:	pop    edx
  40d8cf:	push   esp
  40d8d0:	jg     0x40d85d
  40d8d2:	sub    DWORD PTR [esi+0x31],edi
  40d8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d6:	rcr    BYTE PTR [ebp-0x6692cba1],1
  40d8dc:	and    ch,BYTE PTR [ecx+0x65be643]
  40d8e2:	cld    
  40d8e3:	adc    BYTE PTR [esi+ecx*2-0xeb79585],dl
  40d8ea:	cmp    al,bh
  40d8ec:	retfw  0x718e
  40d8f0:	int3   
  40d8f1:	mov    cl,0x87
  40d8f3:	jge    0x40d973
  40d8f5:	xchg   ecx,eax
  40d8f6:	sbb    DWORD PTR [ebp-0x7ed88b31],edi
  40d8fc:	dec    ecx
  40d8fd:	ss nop
  40d8ff:	add    cl,BYTE PTR [esi+0x78]
  40d902:	popa   
  40d903:	cli    
  40d904:	loop   0x40d94b
  40d906:	cli    
  40d907:	cmp    DWORD PTR [ebx],0x12
  40d90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d90b:	push   ecx
  40d90c:	push   esp
  40d90d:	cs dec edi
  40d90f:	inc    dx
  40d911:	mov    eax,0xecd2826a
  40d916:	cli    
  40d917:	(bad)  
  40d918:	arpl   WORD PTR [esi],cx
  40d91a:	les    edi,FWORD PTR [ecx-0x635fe56b]
  40d920:	push   ebp
  40d921:	xchg   edx,eax
  40d922:	aaa    
  40d923:	repz sub al,0x6
  40d926:	retf   0xf05b
  40d929:	xor    edx,0x6e
  40d92c:	inc    edx
  40d92d:	gs cld 
  40d92f:	loop   0x40d91e
  40d931:	fmul   QWORD PTR [esi]
  40d933:	pop    ebp
  40d934:	into   
  40d935:	pusha  
  40d936:	in     eax,0xe
  40d938:	pop    ecx
  40d939:	mov    al,ds:0x73350845
  40d93e:	or     edx,DWORD PTR [eax+0x3fb35e7e]
  40d944:	add    ch,BYTE PTR [ecx]
  40d946:	xor    eax,0x82a64668
  40d94b:	fist   DWORD PTR [eax]
  40d94d:	jbe    0x40d8f9
  40d94f:	repz mov eax,0x6a03b79c
  40d955:	mov    dh,0x9b
  40d957:	or     cl,BYTE PTR [edi+0x6f1a86ec]
  40d95d:	inc    esi
  40d95e:	pop    es
  40d95f:	pushf  
  40d960:	mov    eax,0xa909b82c
  40d965:	lods   eax,DWORD PTR ds:[esi]
  40d966:	sub    BYTE PTR [ebp-0x1a2826e0],ch
  40d96c:	shl    DWORD PTR [edx+eiz*1],cl
  40d96f:	aaa    
  40d970:	inc    esp
  40d971:	test   DWORD PTR ds:0xa54a46e5,esp
  40d977:	push   ss
  40d978:	jo     0x40d95a
  40d97a:	xor    ebp,DWORD PTR [esi+0x136c1c59]
  40d980:	pop    eax
  40d981:	popf   
  40d982:	nop
  40d983:	xlat   BYTE PTR ds:[ebx]
  40d984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d985:	mov    ch,0x1a
  40d987:	call   FWORD PTR [ecx+0x12673a8d]
  40d98d:	rcr    eax,cl
  40d98f:	mov    edi,0x83ff01dd
  40d994:	or     bl,BYTE PTR [ebp-0x371b3cf2]
  40d99a:	outs   dx,BYTE PTR ds:[esi]
  40d99b:	je     0x40d93d
  40d99d:	jge    0x40d964
  40d99f:	inc    esi
  40d9a0:	sbb    edi,esi
  40d9a2:	mov    esp,0x42581387
  40d9a7:	or     al,0xb
  40d9a9:	inc    edi
  40d9ab:	test   ah,al
  40d9ad:	leave  
  40d9ae:	and    al,BYTE PTR [edx+0x79]
  40d9b1:	pusha  
  40d9b2:	int3   
  40d9b3:	test   BYTE PTR [ebp+0x8c0c473],ch
  40d9b9:	hlt    
  40d9ba:	cmp    BYTE PTR [eax-0x50],cl
  40d9bd:	add    ebp,ecx
  40d9bf:	pusha  
  40d9c0:	arpl   WORD PTR [edi+edi*2+0x4944937e],dx
  40d9c7:	enter  0xa18,0x9c
  40d9cb:	(bad)  
  40d9cc:	cs es jl 0x40da46
  40d9d0:	in     eax,0x6a
  40d9d2:	fs out dx,eax
  40d9d4:	ret    0xc378
  40d9d7:	mov    ecx,0xa777e56b
  40d9dc:	mov    DWORD PTR [ebp+0x4f],ecx
  40d9df:	fdivrp st(7),st
  40d9e1:	rcl    DWORD PTR [ecx+0x47],cl
  40d9e4:	pop    ss
  40d9e5:	clc    
  40d9e6:	mov    esi,0x8f12ee88
  40d9eb:	sbb    ah,BYTE PTR [ebp+0x5ab8bdc0]
  40d9f1:	add    edx,ebp
  40d9f3:	fdivr  DWORD PTR [ebx+edi*1+0x294f5ba3]
  40d9fa:	dec    esi
  40d9fb:	jo     0x40d9d7
  40d9fd:	cmp    BYTE PTR [ecx],0x31
  40da00:	sar    ecx,1
  40da02:	add    DWORD PTR [esi],edx
  40da04:	and    cl,BYTE PTR [ebx-0x66]
  40da07:	and    BYTE PTR fs:[ecx-0x7d8cfa69],bl
  40da0e:	xchg   esp,eax
  40da0f:	in     eax,0x82
  40da11:	add    dl,BYTE PTR [edi+edi*2-0x25b89650]
  40da18:	dec    edx
  40da19:	rol    BYTE PTR [edx+edi*8],1
  40da1c:	push   eax
  40da1d:	div    BYTE PTR [ebx]
  40da1f:	mov    dl,0x6e
  40da21:	arpl   WORD PTR [edx+ebx*8+0x4e],si
  40da25:	push   esi
  40da26:	lods   eax,DWORD PTR ds:[esi]
  40da27:	icebp  
  40da28:	xchg   ebp,eax
  40da29:	ins    BYTE PTR es:[edi],dx
  40da2a:	mov    esi,0xc98b378e
  40da2f:	pop    ebx
  40da30:	push   ebx
  40da31:	out    0xea,al
  40da33:	rol    BYTE PTR es:[ebx+0xc],cl
  40da37:	xlat   BYTE PTR ds:[ebx]
  40da38:	or     ebp,DWORD PTR [esi+ebx*4-0x51be20ef]
  40da3f:	jb     0x40da06
  40da41:	push   eax
  40da42:	daa    
  40da43:	sbb    eax,0xc772cf57
  40da48:	xchg   ebp,eax
  40da49:	jge    0x40da09
  40da4b:	iret   
  40da4c:	inc    edx
  40da4d:	mov    dh,0x36
  40da4f:	mov    cl,0x9a
  40da52:	icebp  
  40da53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da54:	nop
  40da55:	push   ebx
  40da57:	mov    ebp,ecx
  40da59:	mov    ds:0x90658d25,eax
  40da5e:	aam    0xa7
  40da60:	lea    edx,[ebp+0x42f3ae24]
  40da66:	dec    esi
  40da67:	add    al,0x5f
  40da69:	iret   
  40da6a:	fcomp  QWORD PTR [ebx]
  40da6c:	rcl    ecx,cl
  40da6e:	jbe    0x40d9f5
  40da70:	cmp    al,0x7f
  40da72:	adc    BYTE PTR [eax+0x1d3f9d28],cl
  40da78:	fsub   DWORD PTR [esi+0xdeb4e0d]
  40da7e:	lods   eax,DWORD PTR ds:[esi]
  40da7f:	mov    dl,dh
  40da81:	js     0x40da7e
  40da83:	push   eax
  40da84:	aad    0x71
  40da86:	jp     0x40daff
  40da88:	mov    ds:0x45bef56d,eax
  40da8d:	lock in eax,dx
  40da8f:	push   ebx
  40da90:	push   esp
  40da91:	jmp    0x1ba546fb
  40da96:	push   esi
  40da97:	lods   eax,DWORD PTR ds:[esi]
  40da98:	push   ds
  40da99:	pop    eax
  40da9a:	stos   DWORD PTR es:[edi],eax
  40da9b:	test   edx,ebx
  40da9d:	mov    edi,0x6f689989
  40daa2:	jp     0x40daae
  40daa4:	mov    cl,0x9b
  40daa6:	or     ch,al
  40daa8:	fcmovbe st,st(4)
  40daaa:	das    
  40daab:	ror    DWORD PTR [edi-0x33171641],1
  40dab1:	rcl    eax,cl
  40dab3:	add    BYTE PTR [ecx+edx*1-0x39],dl
  40dab7:	bound  edi,QWORD PTR [esi]
  40dab9:	lock jmp 0x646b:0x861273a7
  40dac1:	cmp    BYTE PTR [ebx+0x5d138765],bl
  40dac7:	addr16 sub al,0x91
  40daca:	lods   eax,DWORD PTR ds:[esi]
  40dacb:	sbb    al,0x2c
  40dacd:	(bad)  
  40dace:	xor    edi,ecx
  40dad0:	push   eax
  40dad1:	xchg   edx,eax
  40dad2:	imul   esi,DWORD PTR [eax+ebx*2-0x313f4768],0xffffffa8
  40dada:	or     DWORD PTR [ebx-0x24],ecx
  40dadd:	icebp  
  40dade:	les    edi,FWORD PTR [esi+0x53]
  40dae1:	outs   dx,BYTE PTR ds:[esi]
  40dae2:	mov    ?,WORD PTR ds:0x866104b6
  40dae8:	dec    ch
  40daea:	mov    ebp,0xe9c8374a
  40daef:	jb     0x40daaa
  40daf1:	std    
  40daf2:	pop    ss
  40daf3:	fwait
  40daf4:	mov    DWORD PTR [ebx+0x14e16ea],esi
  40dafa:	xchg   edx,eax
  40dafb:	sbb    DWORD PTR [eax+ebx*4],eax
  40dafe:	jmp    0xa90b7a41
  40db03:	jb     0x40db42
  40db05:	adc    ah,bl
  40db07:	sub    eax,0xec1b41f
  40db0c:	repnz push 0x95b16772
  40db12:	lods   eax,DWORD PTR ds:[esi]
  40db13:	jae    0x40db3f
  40db15:	sti    
  40db16:	sti    
  40db17:	and    BYTE PTR [edx-0x28],bl
  40db1a:	jmp    0x3586cd5d
  40db1f:	nop
  40db20:	jmp    0x28fb270a
  40db25:	call   FWORD PTR [eax]
  40db27:	lds    esp,FWORD PTR [esi-0xb6b0ff9]
  40db2d:	and    cl,BYTE PTR [edx-0x530a9f59]
  40db33:	ja     0x40db82
  40db35:	int    0x29
  40db37:	js     0x40dafe
  40db39:	cli    
  40db3a:	mov    edi,0xdae3d44e
  40db3f:	sub    DWORD PTR [ebx],ebx
  40db41:	test   BYTE PTR [ecx+ebx*8],cl
  40db44:	jae    0x40db0f
  40db46:	mov    ds:0xfeb4df5a,eax
  40db4b:	xchg   esp,eax
  40db4c:	mov    ?,eax
  40db4e:	out    0x5c,al
  40db50:	shl    DWORD PTR [ecx-0x69a6a229],0xf4
  40db57:	mov    al,ds:0xf891dcaa
  40db5c:	stc    
  40db5d:	adc    eax,0x1ecc04f
  40db62:	mov    eax,ds:0x51f35c8c
  40db67:	dec    eax
  40db68:	pop    edx
  40db69:	inc    ebx
  40db6a:	cwde   
  40db6b:	and    al,0x4a
  40db6d:	out    0x8b,eax
  40db6f:	add    al,0xbf
  40db71:	dec    esp
  40db72:	icebp  
  40db73:	nop
  40db74:	pop    edx
  40db75:	dec    edi
  40db76:	icebp  
  40db77:	ucomiss xmm4,xmm6
  40db7a:	cmp    BYTE PTR [esi],bh
  40db7c:	xor    BYTE PTR [esi+0x6abcf585],0x2d
  40db83:	jae    0x40db36
  40db85:	xchg   cl,ah
  40db87:	fisubr WORD PTR [edx+0x43]
  40db8a:	adc    BYTE PTR [esi+0xf],ch
  40db8d:	fisttp WORD PTR [esi]
  40db90:	shl    BYTE PTR [ecx],1
  40db92:	mov    ecx,esi
  40db94:	fwait
  40db95:	shr    bh,0xe8
  40db98:	xchg   esi,eax
  40db99:	push   ebp
  40db9a:	adc    al,0x51
  40db9c:	lods   eax,DWORD PTR ds:[esi]
  40db9d:	int    0x1c
  40db9f:	iret   
  40dba0:	sub    al,0x9f
  40dba2:	sub    BYTE PTR [edx-0x51],dl
  40dba5:	jmp    0x40db9e
  40dba7:	aaa    
  40dba8:	mul    BYTE PTR [ebx]
  40dbaa:	jge    0x40db94
  40dbac:	cmp    al,al
  40dbae:	adc    BYTE PTR [ebp-0x19c76ac9],bh
  40dbb4:	pop    ebx
  40dbb5:	add    DWORD PTR [esi],ebp
  40dbb7:	xchg   al,bh
  40dbb9:	inc    eax
  40dbba:	test   BYTE PTR [eax+0x6e],dl
  40dbbd:	loopne 0x40dc1b
  40dbbf:	nop
  40dbc0:	(bad)  
  40dbc1:	(bad)  
  40dbc2:	mov    eax,0x3aab5829
  40dbc7:	mov    ebx,0x94257f3b
  40dbcc:	lahf   
  40dbcd:	jae    0x40dbde
  40dbcf:	scas   al,BYTE PTR es:[edi]
  40dbd0:	pop    edx
  40dbd1:	dec    eax
  40dbd2:	nop
  40dbd3:	inc    esi
  40dbd4:	dec    ebx
  40dbd5:	or     ah,BYTE PTR [eax-0x2bacb8a2]
  40dbdb:	dec    eax
  40dbdc:	push   es
  40dbdd:	aam    0x5d
  40dbdf:	stc    
  40dbe0:	retf   
  40dbe1:	push   ebx
  40dbe2:	test   eax,0x77e7ad6a
  40dbe7:	fld    QWORD PTR [di+0x4379]
  40dbec:	push   es
  40dbed:	xor    al,0x43
  40dbef:	push   0xffffffe3
  40dbf1:	ror    BYTE PTR [eax+0x4a7848b5],1
  40dbf7:	popf   
  40dbf8:	add    BYTE PTR [eax+edi*1-0x38],ch
  40dbfc:	int    0x1f
  40dbfe:	pop    eax
  40dbff:	inc    ebx
  40dc00:	pushf  
  40dc01:	outs   dx,BYTE PTR ds:[esi]
  40dc02:	out    0xb7,al
  40dc04:	dec    edx
  40dc05:	imul   esi,DWORD PTR [edi],0xc41574e3
  40dc0b:	out    0x67,al
  40dc0d:	daa    
  40dc0e:	pop    ecx
  40dc0f:	cmp    DWORD PTR [edx+0x1513c3f2],ebx
  40dc15:	xchg   esi,eax
  40dc16:	push   edx
  40dc17:	pop    es
  40dc18:	test   eax,0x8f372171
  40dc1d:	popa   
  40dc1e:	push   cs
  40dc1f:	inc    eax
  40dc20:	sub    al,0x9d
  40dc22:	js     0x40dbea
  40dc24:	daa    
  40dc25:	jnp    0x40dc7a
  40dc27:	test   BYTE PTR [esi+0x36c52823],ah
  40dc2d:	adc    BYTE PTR [eax-0x5afd1470],cl
  40dc33:	sbb    edi,esp
  40dc35:	aaa    
  40dc36:	jne    0x40dc26
  40dc38:	push   esi
  40dc39:	enter  0x13b1,0x13
  40dc3d:	dec    ebx
  40dc3e:	jle    0x40dc55
  40dc40:	jae    0x40dbf1
  40dc42:	pop    ebp
  40dc43:	inc    esp
  40dc44:	std    
  40dc45:	pop    esi
  40dc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc47:	test   BYTE PTR [edx],dh
  40dc49:	xchg   BYTE PTR [edi],dh
  40dc4b:	test   al,0x9e
  40dc4d:	or     ebp,DWORD PTR [edi+0x78]
  40dc50:	sbb    DWORD PTR [eax-0x44fa6289],esp
  40dc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc57:	cli    
  40dc58:	push   ds
  40dc59:	dec    edi
  40dc5b:	sti    
  40dc5c:	pushf  
  40dc5d:	jmp    0xdfced916
  40dc62:	sbb    al,0xc3
  40dc64:	stos   DWORD PTR es:[edi],eax
  40dc65:	inc    edi
  40dc66:	sub    eax,0x6f6ea710
  40dc6b:	js     0x40dca0
  40dc6d:	and    DWORD PTR [ebp+0x75],ebp
  40dc70:	sbb    edx,DWORD PTR [esi]
  40dc72:	xor    eax,0xe81c8cee
  40dc77:	aas    
  40dc78:	pop    eax
  40dc79:	test   DWORD PTR [edi-0x66],ebp
  40dc7c:	inc    ecx
  40dc7d:	inc    ebp
  40dc7e:	js     0x40dc5e
  40dc80:	dec    esi
  40dc81:	and    eax,0xe1768ac4
  40dc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc87:	ins    DWORD PTR es:[edi],dx
  40dc88:	mov    esi,0xd6bc061c
  40dc8d:	cmp    dh,BYTE PTR [ebx]
  40dc8f:	cmp    DWORD PTR [esi+edx*2],ebx
  40dc92:	inc    ebx
  40dc93:	sub    eax,0xc4199743
  40dc98:	xchg   edx,eax
  40dc99:	mov    edi,0xa11bc40d
  40dc9e:	jge    0x40dc73
  40dca0:	fdivr  QWORD PTR [ebx-0x2cc2c2fc]
  40dca6:	and    bh,BYTE PTR [ecx+0x408aca73]
  40dcac:	mov    edi,0xf0f15d40
  40dcb1:	sub    BYTE PTR [edx-0x7d],bh
  40dcb4:	jmp    0x40dc94
  40dcb6:	dec    esi
  40dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb8:	jnp    0x40dc3b
  40dcba:	mov    ebx,0x3725f55c
  40dcbf:	sub    BYTE PTR [eax],0x0
  40dcc2:	mov    al,0x52
  40dcc4:	push   0x64
  40dcc6:	xor    ecx,DWORD PTR [ebx-0x4ac60168]
  40dccc:	xchg   esi,eax
  40dccd:	mov    al,0xed
  40dccf:	inc    ebp
  40dcd0:	sti    
  40dcd1:	and    DWORD PTR [esi-0x33],ebx
  40dcd4:	repz sti 
  40dcd6:	retf   0x9f13
  40dcd9:	lods   al,BYTE PTR ds:[esi]
  40dcda:	pop    esi
  40dcdb:	cmp    eax,0x5d6d572f
  40dce0:	pop    ecx
  40dce1:	adc    edi,DWORD PTR ds:0x32797fbb
  40dce7:	inc    edi
  40dce8:	pushf  
  40dce9:	mov    bl,BYTE PTR [edx-0x4171141e]
  40dcef:	jg     0x40dd38
  40dcf1:	adc    eax,0xaf90f03d
  40dcf6:	arpl   WORD PTR [edx],bp
  40dcf8:	sub    ah,BYTE PTR [eax-0x57c51bf9]
  40dcfe:	jnp    0x40dcde
  40dd00:	lock or edi,DWORD PTR [edi]
  40dd03:	xor    al,BYTE PTR [eax]
  40dd05:	fs adc cl,dh
  40dd08:	and    esi,esp
  40dd0a:	sub    bh,BYTE PTR [eax+0x1c36fb8b]
  40dd10:	mov    edi,0x3d1551e4
  40dd15:	pop    edi
  40dd16:	jl     0x40dd3b
  40dd18:	mov    esi,0x30ac21e1
  40dd1d:	xchg   esi,eax
  40dd1e:	cmp    eax,0xc1e91304
  40dd23:	stos   BYTE PTR es:[edi],al
  40dd24:	lea    ebx,[esi-0x28e4c4e3]
  40dd2a:	cld    
  40dd2b:	fistp  DWORD PTR [esp+ebp*2]
  40dd2e:	xchg   esp,eax
  40dd2f:	fild   QWORD PTR [ebp-0x56]
  40dd32:	jmp    0x7564b965
  40dd37:	loop   0x40dcc9
  40dd39:	scas   eax,DWORD PTR es:[edi]
  40dd3a:	mov    cs,esi
  40dd3c:	sar    BYTE PTR [ebx+ebp*2],cl
  40dd3f:	aam    0xa2
  40dd41:	jne    0x40dcfc
  40dd43:	inc    ebx
  40dd44:	out    0x5b,eax
  40dd46:	dec    eax
  40dd47:	fnstsw WORD PTR [edx]
  40dd49:	mov    al,ds:0x9ea395a4
  40dd4e:	sub    edx,DWORD PTR [edi+eax*4+0x30]
  40dd52:	jns    0x40dcfa
  40dd54:	clc    
  40dd55:	or     eax,0xaf5fe0bc
  40dd5a:	into   
  40dd5b:	push   cs
  40dd5c:	fmul   st,st(1)
  40dd5e:	out    0xe4,al
  40dd60:	or     eax,0xc96c6087
  40dd65:	call   0x4efe:0xee6f970a
  40dd6c:	clc    
  40dd6d:	xor    DWORD PTR [ebx-0x1b321d5f],edi
  40dd73:	cdq    
  40dd74:	ins    DWORD PTR es:[edi],dx
  40dd75:	stc    
  40dd76:	ja     0x40dd51
  40dd78:	aad    0x65
  40dd7a:	inc    esi
  40dd7b:	mov    ebx,0x3133af86
  40dd80:	or     eax,DWORD PTR [esp+esi*4-0x1e8c3775]
  40dd87:	adc    DWORD PTR [edx],edi
  40dd89:	mov    ch,0xa
  40dd8b:	jle    0x40de06
  40dd8d:	xchg   DWORD PTR ds:0xca8d5146,ebp
  40dd93:	data16 add BYTE PTR [esi+0x1760538d],al
  40dd9a:	stos   BYTE PTR es:[edi],al
  40dd9b:	mov    cl,0xc3
  40dd9d:	(bad)  
  40dd9e:	ret    
  40dd9f:	dec    esi
  40dda0:	shl    DWORD PTR gs:[eax],1
  40dda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda5:	jae    0x40dd6b
  40dda7:	push   esi
  40dda8:	in     al,0x46
  40ddaa:	sar    DWORD PTR [edx+ecx*4],1
  40ddad:	clc    
  40ddae:	pop    ss
  40ddaf:	lea    ebp,[ecx]
  40ddb1:	mov    ebp,0xa43b9010
  40ddb6:	js     0x40dd85
  40ddb8:	jno    0x40de26
  40ddba:	enter  0xfad6,0xd0
  40ddbe:	jb     0x40dd8a
  40ddc0:	mov    bl,0x98
  40ddc2:	adc    al,0x86
  40ddc4:	mov    DWORD PTR [ecx-0x40],edi
  40ddc7:	push   ebx
  40ddc8:	add    al,0x5e
  40ddca:	ss xchg esi,eax
  40ddcc:	in     al,dx
  40ddcd:	pop    ds
  40ddce:	jmp    0x656b129e
  40ddd3:	push   ds
  40ddd4:	mov    ebx,0x485ee2c3
  40ddd9:	pop    DWORD PTR [ecx+0x6f]
  40dddc:	add    esp,ebp
  40ddde:	idiv   BYTE PTR [esi+0x4f961fbb]
  40dde4:	inc    esp
  40dde5:	mov    esi,0x6be3b549
  40ddea:	and    dh,BYTE PTR [ecx+0x52]
  40dded:	loope  0x40ddfd
  40ddef:	fisub  WORD PTR [eax]
  40ddf1:	adc    ah,dh
  40ddf3:	shr    esp,cl
  40ddf5:	data16 sub al,0xa3
  40ddf8:	enter  0x9cb3,0xaf
  40ddfc:	sti    
  40ddfd:	push   ds
  40ddfe:	or     dl,0x88
  40de01:	ja     0x40de76
  40de03:	push   esp
  40de04:	adc    ecx,edi
  40de06:	mov    esi,0x262553b6
  40de0b:	lods   al,BYTE PTR ds:[esi]
  40de0c:	and    BYTE PTR ds:0xb99cc332,0xb9
  40de13:	int    0xec
  40de15:	ins    BYTE PTR es:[edi],dx
  40de16:	mov    bl,0x46
  40de18:	test   DWORD PTR [esi+0x2fc08bc1],0x7569faa7
  40de22:	mov    ds:0x60e5ff40,eax
  40de27:	fs xchg ecx,eax
  40de29:	cmp    cl,BYTE PTR [esi-0x45]
  40de2c:	sub    DWORD PTR [ebx],0xffffffbc
  40de2f:	scas   eax,DWORD PTR es:[edi]
  40de30:	repz mov bh,0xa0
  40de33:	mov    ?,WORD PTR [edi+0x61]
  40de36:	pop    esi
  40de37:	sub    dh,BYTE PTR [ebx]
  40de39:	xchg   edx,eax
  40de3a:	in     al,0x3c
  40de3c:	xor    DWORD PTR [ebp-0x2],edx
  40de3f:	jle    0x40de7a
  40de41:	inc    ecx
  40de42:	cmp    eax,0xa18e52e2
  40de47:	loopne 0x40de69
  40de49:	sti    
  40de4a:	ins    BYTE PTR es:[edi],dx
  40de4b:	leave  
  40de4c:	loop   0x40de94
  40de4e:	xor    eax,ecx
  40de50:	ret    
  40de51:	inc    ecx
  40de52:	fwait
  40de53:	cdq    
  40de54:	add    DWORD PTR [ebx-0xf],ecx
  40de57:	std    
  40de58:	pop    ds
  40de59:	sbb    ch,dl
  40de5b:	into   
  40de5c:	pop    esp
  40de5d:	cmp    dh,al
  40de5f:	lock sub bl,dh
  40de62:	push   eax
  40de63:	inc    esi
  40de64:	mov    ah,BYTE PTR [ebx-0x12]
  40de67:	clc    
  40de68:	stos   DWORD PTR es:[di],eax
  40de6a:	fldenv [eax+0x6c4703b]
  40de70:	push   cs
  40de71:	xor    BYTE PTR [ebx],dl
  40de73:	mov    al,ds:0x26b87fef
  40de78:	cmp    BYTE PTR [eax],cl
  40de7a:	sbb    DWORD PTR ds:0xb39e0c1e,0xfffffff8
  40de81:	sti    
  40de82:	jbe    0x40def1
  40de84:	popf   
  40de85:	inc    esp
  40de86:	or     al,0x61
  40de88:	in     al,0x4c
  40de8a:	mov    ds:0xd0ae58cf,eax
  40de8f:	xlat   BYTE PTR ds:[ebx]
  40de90:	jmp    0x40de27
  40de92:	mov    ch,0x9b
  40de95:	cmp    BYTE PTR [eax],ch
  40de97:	inc    ebx
  40de98:	sbb    dh,bl
  40de9a:	xor    al,0x36
  40de9c:	push   es
  40de9d:	sbb    ebp,ecx
  40de9f:	push   edx
  40dea0:	adc    ebx,ecx
  40dea2:	fidiv  DWORD PTR [edx]
  40dea4:	inc    esp
  40dea5:	jmp    0x13494424
  40deaa:	imul   BYTE PTR [ecx+0x21ebb384]
  40deb0:	push   cs
  40deb1:	sbb    ecx,DWORD PTR fs:[ebx]
  40deb4:	jb     0x40dea6
  40deb6:	sub    BYTE PTR [edx-0x33],ah
  40deb9:	sbb    DWORD PTR [ecx+ebx*4-0x6815e8a1],eax
  40dec0:	jnp    0x40ded1
  40dec2:	retf   0x1549
  40dec5:	adc    ebx,DWORD PTR [edi+0x7d4619c6]
  40decb:	shl    DWORD PTR [edi+0x1ddae9ce],cl
  40ded1:	mov    ds,WORD PTR [edi+0x2e]
  40ded4:	mov    ebx,0x305c1b3
  40ded9:	scas   eax,DWORD PTR es:[edi]
  40deda:	push   edx
  40dedb:	retf   0xb831
  40dede:	mov    edi,0x8b2c27c2
  40dee3:	retf   
  40dee4:	lods   eax,DWORD PTR ds:[esi]
  40dee5:	sub    BYTE PTR [ecx+0x149aac3d],bl
  40deeb:	daa    
  40deec:	push   ecx
  40deed:	dec    esi
  40deee:	pop    es
  40deef:	dec    edx
  40def0:	repz or esi,esp
  40def3:	xor    dl,BYTE PTR [eax+0x1e]
  40def6:	xor    ah,BYTE PTR [ebp-0x4954c8ee]
  40defc:	push   esp
  40defd:	out    dx,al
  40defe:	inc    edi
  40deff:	and    dl,BYTE PTR [ebp-0x6a]
  40df02:	sub    DWORD PTR [edi],esp
  40df04:	mov    cl,0xd0
  40df06:	ds jo  0x40defa
  40df09:	jp     0x40def2
  40df0b:	sub    dh,BYTE PTR [edx-0xacb6a94]
  40df11:	mov    bh,BYTE PTR [edi-0x488fc2f0]
  40df17:	mov    eax,ds:0x9cafcb8c
  40df1c:	push   esp
  40df1d:	out    0x6b,al
  40df1f:	jmp    0x54a6:0xef2fc5f0
  40df26:	loope  0x40defb
  40df28:	repnz xchg edi,eax
  40df2a:	push   esp
  40df2b:	or     ah,BYTE PTR [edi]
  40df2d:	dec    ebx
  40df2e:	xor    eax,0x7ccfe4f5
  40df33:	sub    DWORD PTR [edi+ecx*8-0x3d],ebp
  40df37:	sbb    eax,0x9dd3dbdc
  40df3c:	popf   
  40df3d:	outs   dx,DWORD PTR ds:[esi]
  40df3e:	inc    edx
  40df3f:	jbe    0x40dfae
  40df41:	aad    0xe
  40df43:	xor    BYTE PTR [edx+0x2b022302],dh
  40df49:	frstor [esi-0x722fec7a]
  40df4f:	dec    ebp
  40df50:	inc    ebp
  40df51:	inc    ebp
  40df52:	lds    edi,FWORD PTR [edi]
  40df54:	mov    ch,0xf9
  40df56:	in     al,dx
  40df57:	sub    DWORD PTR [ecx+0x33],esp
  40df5a:	dec    eax
  40df5b:	jge    0x40df23
  40df5d:	ja     0x40df23
  40df5f:	bound  ebp,QWORD PTR [eax-0x323220d6]
  40df65:	mov    ah,0x88
  40df67:	shl    ebp,1
  40df69:	fwait
  40df6a:	inc    edi
  40df6b:	mov    edi,0xfc5400b2
  40df70:	scas   al,BYTE PTR es:[edi]
  40df71:	xchg   dl,dl
  40df73:	js     0x40dfe5
  40df75:	xor    ebx,DWORD PTR [ebx]
  40df77:	lods   al,BYTE PTR ds:[esi]
  40df78:	fimul  WORD PTR [edi+0x30326b79]
  40df7e:	jo     0x40dfea
  40df80:	xor    eax,DWORD PTR [eax-0x3330d34f]
  40df86:	push   edi
  40df87:	pop    esp
  40df88:	and    eax,0x4b45c1c2
  40df8d:	scas   al,BYTE PTR es:[edi]
  40df8e:	push   eax
  40df8f:	xor    DWORD PTR [eax+0x5d],edi
  40df92:	cs out 0x3a,eax
  40df95:	adc    DWORD PTR [edx-0x5c82e7d1],esp
  40df9b:	adc    esp,ecx
  40df9d:	push   0x37e5666e
  40dfa2:	mov    ebx,0xc3206de0
  40dfa7:	aam    0x82
  40dfa9:	fisub  WORD PTR ds:0xcdf5a794
  40dfaf:	mov    ebx,0x620dcbc4
  40dfb4:	fwait
  40dfb5:	(bad)  
  40dfb6:	xchg   edx,eax
  40dfb7:	mov    ah,0x9b
  40dfb9:	ret    0xef67
  40dfbc:	(bad)  
  40dfbd:	jecxz  0x40dfcc
  40dfbf:	das    
  40dfc0:	fadd   DWORD PTR [edx+0x4c3acb43]
  40dfc6:	lods   al,BYTE PTR ds:[esi]
  40dfc7:	adc    al,0x24
  40dfc9:	rcl    BYTE PTR [eax+0x7722067b],0x75
  40dfd0:	add    DWORD PTR [ebx],edx
  40dfd2:	sub    edx,DWORD PTR [eax]
  40dfd4:	sar    DWORD PTR [edx+esi*1],1
  40dfd7:	sbb    DWORD PTR [ebx+eiz*4+0x3c7c6c09],0xcc8cd724
  40dfe2:	les    ecx,FWORD PTR [eax+eax*4-0x146edb47]
  40dfe9:	popa   
  40dfea:	inc    ecx
  40dfeb:	(bad)  
  40dfec:	(bad)  
  40dfed:	popf   
  40dfee:	mov    fs,esp
  40dff0:	adc    eax,0x717f7468
  40dff5:	(bad)  
  40dff6:	out    dx,eax
  40dff7:	or     ebx,DWORD PTR [ebx+0x5dee9a34]
  40dffd:	stos   DWORD PTR es:[edi],eax
  40dffe:	sbb    bl,BYTE PTR [edi-0x6ed4430c]
  40e004:	mov    cl,0x65
  40e006:	mov    ds,WORD PTR [edi+0x33]
  40e009:	or     bh,BYTE PTR [eax+0x6542e764]
  40e00f:	jns    0x40e071
  40e011:	jno    0x40e003
  40e013:	adc    dl,BYTE PTR [ecx+edx*8-0x7c]
  40e017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e018:	cmp    eax,0x84396639
  40e01d:	icebp  
  40e01e:	neg    BYTE PTR [esi+edi*2+0x29]
  40e022:	mov    BYTE PTR [esi],0xd0
  40e025:	or     DWORD PTR [edx+0x63],0x51585561
  40e02c:	xor    al,0xea
  40e02e:	jle    0x40dfe0
  40e030:	sbb    DWORD PTR [ecx],0x1a
  40e033:	retf   
  40e034:	jmp    0x89ec2302
  40e039:	call   0x8b9b1524
  40e03e:	sub    ebp,esp
  40e040:	cmp    eax,0x2253f89b
  40e045:	nop
  40e046:	dec    eax
  40e047:	jnp    0x40e054
  40e049:	cmp    ebp,DWORD PTR [esi-0xc]
  40e04c:	imul   di,WORD PTR [ecx+0x6a943c1b],0xe632
  40e055:	stos   BYTE PTR es:[edi],al
  40e056:	outs   dx,BYTE PTR ds:[esi]
  40e057:	or     dl,BYTE PTR ds:0x8e97cac7
  40e05d:	lea    edi,[edi]
  40e05f:	inc    ebx
  40e060:	cwde   
  40e061:	xor    eax,0xfee2194f
  40e066:	or     ebx,ebx
  40e068:	xchg   edi,edi
  40e06a:	sub    dl,BYTE PTR [ebx-0x52c7d377]
  40e070:	mov    DWORD PTR [ebx-0x7170b0ec],ebx
  40e076:	inc    eax
  40e077:	in     eax,0xe
  40e079:	dec    BYTE PTR [esi+eax*1]
  40e07c:	mov    ds:0xe97ca47b,eax
  40e081:	in     eax,dx
  40e082:	bndldx (bad),[bx+0x1a]
  40e087:	mov    ds:0x4b13d725,al
  40e08c:	lock mov ecx,0x7c3e50b
  40e092:	mov    ch,0x71
  40e094:	clc    
  40e095:	mov    al,ds:0x91af9635
  40e09a:	mov    ch,0xd9
  40e09c:	mov    ds:0x3268c278,al
  40e0a1:	sar    DWORD PTR [edi],1
  40e0a3:	cmp    ecx,ebp
  40e0a5:	xor    ecx,eax
  40e0a7:	mov    WORD PTR [edi-0xa],gs
  40e0aa:	test   BYTE PTR [ebp-0x4703bb25],0xc2
  40e0b1:	or     DWORD PTR [eax+0x33d4d7d2],0xe
  40e0b8:	cld    
  40e0b9:	sbb    DWORD PTR [edi+0x621bb8c5],0xb79b2236
  40e0c3:	lods   eax,DWORD PTR ds:[esi]
  40e0c4:	test   eax,0x107c905f
  40e0c9:	stos   BYTE PTR es:[edi],al
  40e0ca:	(bad)  
  40e0cb:	pop    edx
  40e0cc:	test   BYTE PTR [eax-0x6e],0x1f
  40e0d0:	dec    edi
  40e0d1:	mov    esi,0xb6864ce1
  40e0d6:	stc    
  40e0d7:	(bad)  
  40e0d8:	cld    
  40e0d9:	shl    BYTE PTR [esi+0x22],0xc0
  40e0dd:	xor    BYTE PTR [edx],bh
  40e0df:	cmp    DWORD PTR ds:0xc67c005f,esi
  40e0e5:	(bad)  
  40e0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e7:	das    
  40e0e8:	add    DWORD PTR [ecx],edx
  40e0ea:	lods   eax,DWORD PTR ds:[esi]
  40e0eb:	mov    BYTE PTR [edx-0x3a],dl
  40e0ee:	xchg   ebp,eax
  40e0ef:	sub    cl,BYTE PTR [esi]
  40e0f1:	fstp   DWORD PTR [ebx-0x45]
  40e0f4:	cmp    edx,DWORD PTR [ecx+0x6a]
  40e0f7:	js     0x40e0d8
  40e0f9:	sub    ch,BYTE PTR [edi+0x677e59e]
  40e0ff:	mov    bl,BYTE PTR [eax+0x56d84f79]
  40e105:	jns    0x40e0d8
  40e107:	cmp    DWORD PTR [esi-0x7c],edi
  40e10a:	mov    ebx,0xee267f0e
  40e10f:	stc    
  40e110:	sub    eax,0xfab2f040
  40e115:	jns    0x40e0a6
  40e117:	pushf  
  40e118:	cmp    bh,BYTE PTR [eax]
  40e11a:	icebp  
  40e11b:	(bad)  
  40e11c:	pop    edi
  40e11d:	sub    BYTE PTR [ecx-0x57984c30],ch
  40e123:	jp     0x40e121
  40e125:	jo     0x40e10c
  40e127:	aad    0xf5
  40e129:	lahf   
  40e12a:	sti    
  40e12b:	jns    0x40e0c9
  40e12d:	int3   
  40e12e:	test   eax,0x8b1194b
  40e133:	mov    dl,0x15
  40e135:	mov    esi,DWORD PTR [edx]
  40e137:	mov    dh,0x9b
  40e139:	out    dx,al
  40e13a:	jge    0x40e109
  40e13c:	aam    0xe9
  40e13e:	out    dx,al
  40e13f:	ret    
  40e140:	add    DWORD PTR [ecx+0x3316683f],0x1834a4a0
  40e14a:	in     al,dx
  40e14b:	jae    0x40e159
  40e14d:	pop    edi
  40e14e:	pop    ss
  40e14f:	mov    gs,WORD PTR [edi+esi*2]
  40e152:	fld    QWORD PTR [ebx+0x7e]
  40e155:	xchg   edx,eax
  40e156:	shr    DWORD PTR [ebp-0x4cd53e44],cl
  40e15c:	fisub  DWORD PTR [edx+0x2e]
  40e15f:	cmp    BYTE PTR [ebp-0x638e507],0x68
  40e166:	dec    edx
  40e167:	ja     0x40e0ed
  40e169:	rcr    al,0xa8
  40e16c:	and    ebx,DWORD PTR [ecx+esi*8]
  40e16f:	xchg   ecx,edi
  40e171:	jg     0x40e169
  40e173:	mov    ebp,esi
  40e175:	mov    DWORD PTR ds:0x25aa5fef,esp
  40e17b:	add    eax,0x2caf4d46
  40e180:	sbb    BYTE PTR [edi],al
  40e182:	mov    bl,BYTE PTR [eax-0x56]
  40e185:	cli    
  40e186:	addr16 inc ecx
  40e188:	out    0x1b,eax
  40e18a:	and    eax,0x61df1814
  40e18f:	mov    DWORD PTR [edx+0x13ad2197],ebx
  40e195:	call   FWORD PTR [edi-0x53]
  40e198:	jmp    edi
  40e19a:	dec    ecx
  40e19b:	sub    BYTE PTR [edi],cl
  40e19d:	mov    ebp,0xc23a3f7e
  40e1a2:	bound  esi,QWORD PTR [ebp-0x22965cc1]
  40e1a8:	adc    al,0x21
  40e1aa:	mov    al,ds:0x3fb8dcbe
  40e1af:	out    dx,al
  40e1b0:	xchg   ebp,eax
  40e1b1:	adc    DWORD PTR [eax],0xffffffa2
  40e1b4:	mov    esi,0xc9512ea3
  40e1b9:	pop    esi
  40e1ba:	push   esi
  40e1bb:	xor    al,BYTE PTR [ebp+0x4813a81d]
  40e1c1:	test   eax,0x5613a4e1
  40e1c6:	pop    ebp
  40e1c7:	in     al,dx
  40e1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c9:	add    ah,BYTE PTR [edx-0x4]
  40e1cc:	sub    eax,0xcd7a0996
  40e1d1:	jecxz  0x40e1d8
  40e1d3:	aam    0x32
  40e1d5:	stc    
  40e1d6:	xchg   eax,ebp
  40e1d8:	out    0x2d,al
  40e1da:	pop    esp
  40e1db:	cwde   
  40e1dc:	mov    esi,0xd274835e
  40e1e1:	lea    ebp,[ebx-0x3f]
  40e1e4:	in     eax,dx
  40e1e5:	scas   eax,DWORD PTR es:[edi]
  40e1e6:	mov    ecx,DWORD PTR [ebx-0x58]
  40e1e9:	das    
  40e1ea:	repnz dec edi
  40e1ec:	sub    BYTE PTR [ecx-0x36b5ea7],ah
  40e1f2:	xchg   eax,ebp
  40e1f4:	xlat   BYTE PTR ds:[ebx]
  40e1f5:	ins    DWORD PTR es:[edi],dx
  40e1f6:	icebp  
  40e1f7:	nop
  40e1f8:	(bad)  
  40e1fa:	sub    BYTE PTR [edx+ecx*4+0x8b0a1a4],dl
  40e201:	xchg   DWORD PTR [ecx+esi*1+0x4f],esi
  40e205:	xchg   ecx,eax
  40e206:	ret    0x7204
  40e209:	dec    esp
  40e20a:	scas   eax,DWORD PTR es:[edi]
  40e20b:	cmp    eax,0xae3e1989
  40e210:	adc    esp,eax
  40e212:	pusha  
  40e213:	sbb    DWORD PTR [edi+0x4e],ebp
  40e216:	and    al,0x82
  40e218:	or     edx,DWORD PTR [edx+edx*4]
  40e21b:	or     BYTE PTR [ebx],bl
  40e21d:	dec    esp
  40e21e:	or     eax,0x67548d65
  40e223:	dec    ebp
  40e224:	mov    ds:0xb7c44b3,al
  40e229:	mov    ebx,0x46b61d42
  40e22e:	xor    edi,ecx
  40e230:	push   0xfffffff8
  40e232:	ss push ebp
  40e234:	xor    eax,ebp
  40e236:	and    BYTE PTR [ecx+0x77],ah
  40e239:	ret    0x425f
  40e23c:	clc    
  40e23d:	sbb    al,0x7d
  40e23f:	fbstp  TBYTE PTR [eax+0x63]
  40e242:	lods   eax,DWORD PTR ds:[esi]
  40e243:	push   eax
  40e244:	xor    BYTE PTR gs:[esi-0x7ae86018],dl
  40e24b:	call   0x590c4b94
  40e250:	dec    esi
  40e251:	cmp    ch,al
  40e253:	push   ebx
  40e254:	mov    cr2,eax
  40e257:	mov    dl,0x4d
  40e259:	and    bl,BYTE PTR [ebx+0x34f97c0]
  40e25f:	or     dh,BYTE PTR [ecx]
  40e261:	pop    ecx
  40e262:	adc    eax,0x2b75fc86
  40e267:	aaa    
  40e268:	adc    DWORD PTR [eax-0x465dfb26],0xafd378c9
  40e272:	ins    DWORD PTR es:[edi],dx
  40e273:	nop
  40e274:	stos   BYTE PTR es:[edi],al
  40e275:	lods   al,BYTE PTR ds:[esi]
  40e276:	sbb    eax,0x5ac04371
  40e27b:	lahf   
  40e27c:	add    DWORD PTR [ecx],0x1fee9da5
  40e282:	ins    BYTE PTR es:[edi],dx
  40e283:	in     al,0x20
  40e285:	(bad)  
  40e287:	(bad)  
  40e288:	mov    ds:0x52d94e66,al
  40e28d:	inc    edx
  40e28e:	aam    0x11
  40e290:	ror    BYTE PTR [ecx+0x6d],0x64
  40e294:	neg    DWORD PTR [ebp+0x10]
  40e297:	out    dx,al
  40e298:	xchg   esp,eax
  40e299:	ins    BYTE PTR es:[edi],dx
  40e29a:	lods   al,BYTE PTR ds:[esi]
  40e29b:	mov    ecx,DWORD PTR [ebx+0x36]
  40e29e:	jmp    0x902bba0c
  40e2a3:	out    0xa1,eax
  40e2a5:	and    al,0x29
  40e2a7:	or     dh,BYTE PTR [edi]
  40e2a9:	les    eax,FWORD PTR [ecx]
  40e2ab:	dec    ecx
  40e2ac:	or     eax,0x380c5585
  40e2b1:	push   0xaf2d9095
  40e2b6:	inc    eax
  40e2b7:	sub    esi,DWORD PTR ds:[edx+0x1e]
  40e2bb:	xor    ebx,eax
  40e2bd:	pop    es
  40e2be:	repnz inc esp
  40e2c0:	in     al,dx
  40e2c1:	popa   
  40e2c2:	jmp    0x40e2fd
  40e2c4:	mov    ds:0x4268ab5b,al
  40e2c9:	test   DWORD PTR [esi],0x73a41aef
  40e2cf:	scas   al,BYTE PTR es:[edi]
  40e2d0:	push   cs
  40e2d1:	sub    dh,ah
  40e2d3:	int3   
  40e2d4:	fcomp  QWORD PTR [ebp+0x66]
  40e2d7:	xchg   ecx,eax
  40e2d8:	jo     0x40e279
  40e2da:	add    al,0xaa
  40e2dc:	ror    DWORD PTR [ecx-0x36],1
  40e2df:	fistp  QWORD PTR [esi]
  40e2e1:	inc    ecx
  40e2e2:	aas    
  40e2e3:	arpl   bx,ax
  40e2e5:	inc    ecx
  40e2e6:	mov    bl,0x6e
  40e2e8:	mov    ah,0xa3
  40e2ea:	sbb    esi,DWORD PTR [esi+0x19]
  40e2ed:	push   edx
  40e2ee:	aas    
  40e2ef:	xchg   esi,eax
  40e2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f2:	(bad)  
  40e2f3:	out    0xbe,eax
  40e2f5:	jg     0x40e285
  40e2f7:	stc    
  40e2f8:	mov    dh,0xef
  40e2fa:	mov    ds:0xdc5ae4b5,al
  40e2ff:	pop    edx
  40e300:	ja     0x40e2cf
  40e302:	or     eax,0xdd99aba7
  40e307:	dec    ebp
  40e308:	rcl    DWORD PTR [ebp+ebp*8-0x2305c26f],1
  40e30f:	sbb    ebx,DWORD PTR ds:0x1344198d
  40e315:	ret    0xefad
  40e318:	xchg   dl,al
  40e31a:	iret   
  40e31b:	aad    0x81
  40e31d:	xor    al,0x8d
  40e31f:	push   edx
  40e320:	ins    BYTE PTR es:[edi],dx
  40e321:	loop   0x40e2e9
  40e323:	data16 (bad) [ebp-0x3cbbfcf9]
  40e32a:	xchg   BYTE PTR [ebx+0x3224cf3a],dl
  40e330:	mov    bh,0x61
  40e332:	sub    dl,bl
  40e334:	cmp    al,0x8c
  40e336:	mov    eax,ds:0x5949743f
  40e33b:	test   al,0x71
  40e33d:	repz or eax,0x8047bad5
  40e343:	xchg   edi,eax
  40e344:	xchg   ah,bh
  40e346:	xchg   edx,eax
  40e347:	aas    
  40e348:	dec    esp
  40e349:	fstp   DWORD PTR [edx]
  40e34b:	outs   dx,BYTE PTR ds:[esi]
  40e34c:	test   BYTE PTR [edi],0x6b
  40e34f:	(bad)  
  40e350:	adc    BYTE PTR [edi-0x70],dl
  40e353:	sub    DWORD PTR [eax+0x67b7cd7c],ecx
  40e359:	fidivr DWORD PTR [edx]
  40e35b:	cli    
  40e35c:	mov    al,ds:0xd3da412a
  40e361:	mul    BYTE PTR [ecx]
  40e363:	adc    DWORD PTR [ebp+0x7342481e],0x747e9392
  40e36d:	mov    esi,0x8cfd1291
  40e372:	ror    bh,cl
  40e374:	cs ret 0xb07d
  40e378:	popf   
  40e379:	fcmovnb st,st(2)
  40e37b:	out    0xc1,al
  40e37d:	mov    edi,esi
  40e37f:	xor    DWORD PTR [esp+edx*8+0x1374a9eb],esp
  40e386:	(bad)  
  40e387:	adc    bl,BYTE PTR [ecx+0x5]
  40e38a:	jns    0x40e39a
  40e38c:	jo     0x40e375
  40e38e:	push   esp
  40e38f:	gs loopne 0x40e40e
  40e392:	test   DWORD PTR [edi],ebx
  40e394:	mov    edx,0x84961fe9
  40e399:	and    DWORD PTR gs:[ecx+eiz*2+0x4f],esp
  40e39e:	in     eax,dx
  40e39f:	push   edi
  40e3a0:	cli    
  40e3a1:	fwait
  40e3a2:	sub    BYTE PTR [ebp+0x28e94d90],0x52
  40e3a9:	mov    edx,0xd8171dd
  40e3ae:	cmp    al,0xf4
  40e3b0:	adc    dh,BYTE PTR [ebp-0x6e5b3b30]
  40e3b6:	inc    esp
  40e3b7:	inc    ebp
  40e3b8:	inc    esi
  40e3b9:	stos   BYTE PTR es:[edi],al
  40e3ba:	xor    al,0xb6
  40e3bc:	xor    eax,0x217cea76
  40e3c1:	pop    eax
  40e3c2:	jb     0x40e3c7
  40e3c4:	dec    ecx
  40e3c5:	push   ss
  40e3c6:	dec    ebx
  40e3c7:	pop    esp
  40e3c8:	(bad)  
  40e3c9:	imul   ebp,eax,0x954f5f26
  40e3cf:	repnz xor ecx,edx
  40e3d2:	cwde   
  40e3d3:	leave  
  40e3d4:	lods   al,BYTE PTR ds:[esi]
  40e3d5:	imul   DWORD PTR [eax+0x43ca7393]
  40e3db:	push   ebp
  40e3dc:	add    dh,BYTE PTR [ebp-0x5c2ba72f]
  40e3e2:	xor    DWORD PTR [edi+eiz*2],edx
  40e3e5:	sar    ecx,0xf3
  40e3e8:	jmp    0x40e460
  40e3ea:	add    al,0x39
  40e3ec:	mov    dh,0x2e
  40e3ee:	pop    ebx
  40e3ef:	add    ebp,DWORD PTR [ebx+eax*8]
  40e3f2:	xchg   ebp,eax
  40e3f3:	mov    al,BYTE PTR [edi+0x7f]
  40e3f6:	scas   eax,DWORD PTR es:[edi]
  40e3f7:	push   0x38
  40e3f9:	arpl   WORD PTR [edx-0x2bb87512],ax
  40e3ff:	dec    ebx
  40e400:	mov    ebx,0x92cc73c8
  40e405:	aad    0x1b
  40e407:	pop    ds
  40e408:	adc    BYTE PTR [esp+edx*1],dl
  40e40b:	dec    esi
  40e40c:	dec    edx
  40e40d:	xchg   esi,eax
  40e40e:	or     BYTE PTR [ecx+0x6],ch
  40e411:	cmp    cl,BYTE PTR [edi+edx*2+0x49]
  40e415:	inc    ecx
  40e416:	adc    dl,BYTE PTR [edx-0x7]
  40e419:	leave  
  40e41a:	ja     0x40e435
  40e41c:	pushf  
  40e41d:	loop   0x40e458
  40e41f:	or     DWORD PTR [edx-0x6],eax
  40e422:	mov    BYTE PTR [edx+ecx*4],ah
  40e425:	add    eax,0x62686c25
  40e42a:	loopne 0x40e3cd
  40e42c:	mov    al,0x64
  40e42e:	mov    esp,0xc5fb1676
  40e433:	call   0x3da8:0xce40d122
  40e43a:	dec    esi
  40e43b:	mov    ss,WORD PTR [ebp-0x23]
  40e43e:	ror    BYTE PTR [ebp+0x18],1
  40e441:	lods   eax,DWORD PTR ds:[si]
  40e443:	rcl    DWORD PTR [edi+0x4d151be4],0x4d
  40e44a:	ins    BYTE PTR es:[edi],dx
  40e44b:	outs   dx,BYTE PTR ds:[esi]
  40e44c:	fld1   
  40e44e:	scas   al,BYTE PTR es:[edi]
  40e44f:	mov    ch,BYTE PTR [edx]
  40e451:	xchg   DWORD PTR [edi-0x20],esp
  40e454:	add    BYTE PTR [edx],dl
  40e456:	xchg   ebx,eax
  40e457:	mov    ebp,0x69eed212
  40e45c:	fs pop edi
  40e45e:	lods   al,BYTE PTR ds:[esi]
  40e45f:	neg    dh
  40e461:	adc    bl,BYTE PTR ds:[edi]
  40e464:	xchg   ah,al
  40e466:	xchg   esp,eax
  40e467:	xchg   edx,eax
  40e468:	inc    esi
  40e469:	add    ah,dh
  40e46b:	xor    esi,esi
  40e46d:	idiv   DWORD PTR ds:0x79f5708c
  40e473:	jnp    0x40e4b1
  40e475:	xchg   edx,eax
  40e476:	or     eax,0x9c6263b2
  40e47b:	and    al,0xe
  40e47d:	(bad)  
  40e47e:	out    dx,eax
  40e47f:	ss sub al,0x3d
  40e482:	adc    al,0xc8
  40e484:	xabort 0x53
  40e487:	mov    ss,WORD PTR ds:0x719867d9
  40e48d:	(bad)
  40e490:	in     eax,dx
  40e491:	arpl   WORD PTR [edi],bx
  40e493:	out    dx,al
  40e494:	out    0x2c,eax
  40e496:	rcl    DWORD PTR [ecx+0xcc619d2],0xcb
  40e49d:	mov    eax,0x92f4864f
  40e4a2:	mov    cl,0x6b
  40e4a4:	scas   eax,DWORD PTR es:[edi]
  40e4a5:	adc    ebx,DWORD PTR [edi]
  40e4a7:	rcl    DWORD PTR [ebx-0x3d9198cb],cl
  40e4ad:	mov    ebx,0x1730d29d
  40e4b2:	jnp    0x40e4ce
  40e4b4:	mov    eax,ds:0xe0132b32
  40e4b9:	ds mov edi,0x98af872d
  40e4bf:	add    al,0x8f
  40e4c1:	or     BYTE PTR [edx+edi*8],bl
  40e4c4:	or     ch,bh
  40e4c6:	icebp  
  40e4c7:	std    
  40e4c8:	sti    
  40e4c9:	mov    bl,0x1d
  40e4cb:	xchg   BYTE PTR [edx],dl
  40e4cd:	gs inc ebp
  40e4cf:	push   0xffffffaf
  40e4d1:	ds adc eax,0x97fe2d7a
  40e4d7:	add    ah,BYTE PTR [edi-0x32]
  40e4da:	rol    DWORD PTR [ebx-0x6b],1
  40e4dd:	(bad)  
  40e4de:	nop
  40e4df:	push   ebx
  40e4e0:	lock fisttp WORD PTR [ebp+0xef7a719]
  40e4e7:	add    DWORD PTR [esi+edx*1-0x6853190f],ebx
  40e4ee:	inc    edi
  40e4ef:	std    
  40e4f0:	and    BYTE PTR [ebx-0x4485e66a],bh
  40e4f6:	ret    0xd113
  40e4f9:	jne    0x40e49f
  40e4fb:	add    BYTE PTR [edx],bh
  40e4fd:	mov    ecx,0xc3bd7781
  40e502:	cs dec ebx
  40e504:	repz xor eax,0xc98be0bd
  40e50a:	cmp    al,0xd7
  40e50d:	in     al,dx
  40e50e:	inc    ebx
  40e50f:	mov    ds:0x44cbbaf8,eax
  40e514:	call   0x2d5017d2
  40e519:	add    cl,cl
  40e51b:	mov    DWORD PTR [edi-0x23],0x919c8d5b
  40e522:	mov    WORD PTR [edx+ebp*4+0x585a4aac],ds
  40e529:	adc    al,0x72
  40e52b:	xchg   esi,eax
  40e52c:	sbb    edx,DWORD PTR [esi+esi*8+0x13e41533]
  40e533:	imul   edi,DWORD PTR [ebx+0xa78877],0xeafc2df7
  40e53d:	js     0x40e4e2
  40e53f:	repnz mov ds,WORD PTR [esi+eiz*2+0x85a7bd8]
  40e547:	scas   eax,DWORD PTR es:[edi]
  40e548:	arpl   WORD PTR [ecx+0x60],ax
  40e54b:	sbb    DWORD PTR [esi+0x175604f2],0xd8f75255
  40e555:	and    eax,0x68e12684
  40e55a:	sub    al,0xd3
  40e55c:	mov    cl,BYTE PTR [eax]
  40e55e:	or     BYTE PTR [edi],dl
  40e560:	inc    edi
  40e561:	aaa    
  40e562:	mov    edx,0xc687ed92
  40e567:	(bad)  
  40e568:	sub    ebx,DWORD PTR [edi]
  40e56a:	adc    DWORD PTR [ecx+0x19],0xffffff84
  40e56e:	fidiv  WORD PTR [ebp+0x2783158b]
  40e574:	popa   
  40e575:	arpl   ax,di
  40e577:	aad    0x35
  40e579:	iret   
  40e57a:	stc    
  40e57b:	xlat   BYTE PTR ds:[ebx]
  40e57c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57d:	pop    ecx
  40e57e:	into   
  40e57f:	sbb    BYTE PTR [edi+edi*8-0x20ca64fd],dh
  40e586:	es cld 
  40e588:	test   BYTE PTR [edi+0x37b11c5f],dh
  40e58e:	test   eax,0xeda05d8a
  40e593:	jns    0x40e588
  40e595:	mov    ecx,0xa9d6831f
  40e59a:	rcl    ebp,cl
  40e59c:	jl     0x40e5cf
  40e59e:	cmp    dl,BYTE PTR [ecx+0x48bc578f]
  40e5a4:	pop    es
  40e5a5:	adc    DWORD PTR [edi],esi
  40e5a7:	(bad)  
  40e5a8:	scas   al,BYTE PTR es:[edi]
  40e5a9:	dec    edx
  40e5aa:	mov    edx,edx
  40e5ac:	jle    0x40e612
  40e5ae:	ret    0xd94d
  40e5b1:	imul   eax,DWORD PTR [eax+0x14],0xa4ce8fb7
  40e5b8:	daa    
  40e5b9:	dec    ebp
  40e5ba:	xchg   edi,eax
  40e5bb:	mov    bl,0xc0
  40e5bd:	repz sub DWORD PTR [edx+0x14a9b372],0x44cf9413
  40e5c8:	mov    DWORD PTR [ecx-0x2a05cd42],0x75313733
  40e5d2:	sub    ebp,edx
  40e5d4:	scas   al,BYTE PTR es:[edi]
  40e5d5:	xchg   ebx,eax
  40e5d6:	rcl    DWORD PTR [esi-0x652dbaab],1
  40e5dc:	sub    esi,ecx
  40e5de:	fwait
  40e5df:	mov    esi,0x8d75f960
  40e5e4:	aaa    
  40e5e5:	cmp    BYTE PTR [eax],dl
  40e5e7:	adc    dh,bh
  40e5e9:	inc    edx
  40e5ea:	pop    DWORD PTR [ebp-0x5d]
  40e5ed:	jg     0x40e626
  40e5ef:	pushf  
  40e5f0:	add    DWORD PTR [ebx+0x76],0x4c71f7cc
  40e5f7:	pop    esp
  40e5f8:	cld    
  40e5f9:	pop    ds
  40e5fa:	dec    eax
  40e5fb:	outs   dx,BYTE PTR ds:[esi]
  40e5fc:	xchg   ebp,eax
  40e5fd:	in     al,0x78
  40e5ff:	js     0x40e680
  40e601:	add    DWORD PTR [ebp-0x34],ecx
  40e604:	enter  0xd782,0xa1
  40e608:	push   es
  40e609:	inc    esi
  40e60a:	xor    al,0x2e
  40e60c:	xor    al,0xc3
  40e60e:	es jp  0x40e669
  40e611:	jo     0x40e5d6
  40e613:	jmp    0x46a8:0x23e498e2
  40e61a:	pop    eax
  40e61b:	jno    0x40e5ab
  40e61d:	push   edx
  40e61e:	pop    eax
  40e61f:	fwait
  40e620:	add    al,0x77
  40e622:	mov    ch,0xc6
  40e624:	icebp  
  40e625:	jo     0x40e624
  40e627:	xchg   esp,eax
  40e628:	fidiv  DWORD PTR [edi-0x49]
  40e62b:	scas   eax,DWORD PTR es:[edi]
  40e62c:	and    ecx,DWORD PTR [esi+0x52]
  40e62f:	shl    BYTE PTR [ebp-0x4c],0x7f
  40e633:	or     al,0x5a
  40e635:	cmp    BYTE PTR [esi+0x2c15a099],bh
  40e63b:	jb     0x40e5cc
  40e63d:	ret    
  40e63e:	cli    
  40e63f:	shl    DWORD PTR [edi],1
  40e641:	cmp    eax,0x8e784025
  40e646:	or     cl,BYTE PTR [edi]
  40e648:	out    dx,eax
  40e649:	mov    al,ds:0x8b08cedb
  40e64e:	push   ecx
  40e64f:	fldcw  WORD PTR [edi-0x11cab97d]
  40e655:	repz inc ebx
  40e657:	loop   0x40e663
  40e659:	lahf   
  40e65a:	add    DWORD PTR [esi],0x58988488
  40e660:	mov    ebp,0xcb9605f5
  40e665:	jmp    0x6dbd3198
  40e66a:	push   0x50
  40e66c:	jmp    0x338b7026
  40e671:	out    0x6b,eax
  40e673:	rol    BYTE PTR [eax],0x3f
  40e676:	mov    eax,0xa49f7c68
  40e67b:	pop    edx
  40e67c:	loop   0x40e6f2
  40e67e:	aaa    
  40e67f:	pop    ds
  40e680:	mov    edi,0x544d3dc1
  40e685:	retf   
  40e686:	cmp    DWORD PTR [bp+0x3d],edx
  40e68a:	jae    0x40e665
  40e68c:	cmp    al,0x81
  40e68e:	mov    ds:0x1478276,al
  40e693:	mov    ah,0x77
  40e695:	mov    esi,0x3d2fafb6
  40e69a:	dec    ebp
  40e69b:	cdq    
  40e69c:	xchg   esp,eax
  40e69d:	call   0xc642:0x6ffc59df
  40e6a4:	push   esi
  40e6a5:	repz adc al,0x76
  40e6a8:	xchg   DWORD PTR [esi+0x6b],ebx
  40e6ab:	xchg   edx,eax
  40e6ac:	sbb    esp,DWORD PTR [edx-0x49bab992]
  40e6b2:	and    DWORD PTR [eax+0x59],esp
  40e6b5:	daa    
  40e6b6:	sbb    eax,ecx
  40e6b8:	xchg   ebx,eax
  40e6b9:	imul   esi,DWORD PTR [ebp+0x75],0xffffffaf
  40e6bd:	repz sub eax,0x4900f272
  40e6c3:	add    eax,0xa47e7f52
  40e6c8:	pcmpgtd mm3,QWORD PTR [edx]
  40e6cb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e6cd:	mov    es:0xfb56ad43,al
  40e6d3:	cld    
  40e6d4:	jne    0x40e751
  40e6d6:	adc    edx,DWORD PTR [esi+0x48]
  40e6d9:	dec    edi
  40e6da:	popa   
  40e6db:	retf   
  40e6dc:	push   0x99de4b49
  40e6e1:	cld    
  40e6e2:	fild   DWORD PTR [ecx-0x38]
  40e6e5:	adc    BYTE PTR [edx+0x77],dh
  40e6e8:	push   ds
  40e6e9:	jne    0x40e67a
  40e6eb:	adc    DWORD PTR [ecx+ebp*4-0x45f1d9d8],0xffffffce
  40e6f3:	mov    cl,0x10
  40e6f5:	add    esi,ecx
  40e6f7:	(bad)  
  40e6f8:	sbb    DWORD PTR [ecx],edi
  40e6fa:	push   ebx
  40e6fb:	pop    ebx
  40e6fc:	pushf  
  40e6fd:	cld    
  40e6fe:	inc    esi
  40e6ff:	mov    ecx,DWORD PTR [esi+0x2f]
  40e702:	cmc    
  40e703:	fsubr  QWORD PTR [esi+0x3479869a]
  40e709:	push   ecx
  40e70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70b:	in     al,dx
  40e70c:	inc    eax
  40e70d:	xor    edx,ebx
  40e70f:	test   eax,0xd5be9c5c
  40e714:	inc    edi
  40e715:	jne    0x40e6a3
  40e717:	push   ds
  40e718:	add    bh,ah
  40e71a:	stc    
  40e71b:	pop    ecx
  40e71c:	fstp   DWORD PTR [edi-0xd]
  40e71f:	jmp    0x99d3eae8
  40e724:	loope  0x40e75e
  40e726:	shl    DWORD PTR [esi+eax*2+0x38],cl
  40e72a:	in     eax,dx
  40e72b:	xor    ah,BYTE PTR [ecx-0x67]
  40e72e:	loop   0x40e784
  40e730:	cmp    DWORD PTR [ebp+0x12],esi
  40e733:	sti    
  40e734:	stc    
  40e735:	or     al,0x59
  40e737:	ins    BYTE PTR es:[edi],dx
  40e738:	sub    BYTE PTR [ebp+ecx*8+0x55],bl
  40e73c:	ins    BYTE PTR es:[edi],dx
  40e73d:	mov    dh,0xe4
  40e73f:	sub    al,BYTE PTR [esi-0x43]
  40e742:	fwait
  40e743:	xchg   esp,eax
  40e744:	inc    eax
  40e745:	fdiv   DWORD PTR [ecx+0x62c0c345]
  40e74b:	pop    ebx
  40e74c:	jecxz  0x40e757
  40e74e:	(bad)  
  40e74f:	sub    eax,0x68b350ab
  40e754:	and    DWORD PTR [edx+0x34],esp
  40e757:	cmp    esi,edi
  40e759:	push   ebx
  40e75a:	mov    BYTE PTR ds:0xeda71962,cl
  40e760:	jb     0x40e791
  40e762:	sar    DWORD PTR [ebx],cl
  40e764:	mov    dh,0x40
  40e766:	mov    ebx,0x4b5ec7ce
  40e76b:	loope  0x40e750
  40e76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e76e:	pusha  
  40e76f:	lods   eax,DWORD PTR ds:[esi]
  40e770:	out    dx,eax
  40e771:	jge    0x40e78d
  40e773:	jns    0x40e76e
  40e775:	jns    0x40e78b
  40e777:	or     eax,0x129bdd61
  40e77c:	adc    bl,bl
  40e77e:	leave  
  40e77f:	mov    ch,0x31
  40e781:	out    0x47,al
  40e783:	retf   
  40e784:	popa   
  40e785:	adc    bh,al
  40e787:	pop    esi
  40e788:	add    ebx,DWORD PTR [esi+esi*8+0x5e]
  40e78c:	out    0xcb,eax
  40e78e:	nop
  40e78f:	ret    0x4c4f
  40e792:	xchg   ebx,eax
  40e793:	(bad)  
  40e795:	jmp    edi
  40e797:	xor    bl,0x2a
  40e79a:	int3   
  40e79b:	leave  
  40e79c:	test   BYTE PTR [esi+0x7d],0x36
  40e7a0:	lahf   
  40e7a1:	sbb    eax,0xcb96f446
  40e7a7:	push   ebx
  40e7a8:	addr16 mov al,ds:0x7554
  40e7ac:	push   cs
  40e7ad:	loope  0x40e766
  40e7af:	mov    al,0xdd
  40e7b1:	or     eax,0x4ed6d753
  40e7b6:	rol    eax,0xa
  40e7b9:	cmp    bh,ch
  40e7bb:	mov    al,ds:0x1ddee5e7
  40e7c0:	dec    ebp
  40e7c1:	pop    esi
  40e7c2:	inc    ebx
  40e7c3:	mov    al,0x7d
  40e7c5:	retf   0xc33a
  40e7c8:	fbstp  TBYTE PTR [ecx+0x2]
  40e7cb:	or     ebp,DWORD PTR [edi-0x64259f46]
  40e7d1:	ret    0x50f5
  40e7d4:	ret    0x90e3
  40e7d7:	ins    BYTE PTR es:[edi],dx
  40e7d8:	test   eax,0x13a125ec
  40e7dd:	lods   eax,DWORD PTR ds:[esi]
  40e7de:	xchg   ebp,eax
  40e7df:	push   eax
  40e7e0:	or     al,cl
  40e7e2:	inc    ecx
  40e7e3:	cdq    
  40e7e4:	add    DWORD PTR [ebp+0x44],ebx
  40e7e7:	jno    0x40e798
  40e7e9:	and    al,0x65
  40e7eb:	lock clc 
  40e7ed:	call   0x683a:0x932799cb
  40e7f4:	cdq    
  40e7f5:	retf   
  40e7f6:	rcr    DWORD PTR [ebx+0x2dea615a],1
  40e7fc:	and    DWORD PTR [edi],0xffffff90
  40e7ff:	or     esi,DWORD PTR [edx]
  40e801:	xor    cl,bh
  40e803:	aaa    
  40e804:	jl     0x40e83c
  40e806:	stos   BYTE PTR es:[edi],al
  40e807:	mov    esi,0xa80dc190
  40e80c:	cli    
  40e80d:	xchg   edx,eax
  40e80e:	call   0x9c32bdf4
  40e813:	ror    DWORD PTR [ecx+0x38e44877],1
  40e819:	adc    DWORD PTR [edx+0x1c],edx
  40e81c:	mov    dl,0xb3
  40e81e:	add    esp,ebx
  40e820:	jno    0x40e7b8
  40e822:	cli    
  40e823:	jmp    0x40e7f7
  40e825:	(bad)  [ebp+eax*1+0x3]
  40e829:	sbb    bl,BYTE PTR [edi+0x4b]
  40e82c:	push   ss
  40e82d:	push   es
  40e82e:	out    0xee,al
  40e830:	jp     0x40e873
  40e832:	mov    ds:0x8b7a88e5,eax
  40e837:	test   DWORD PTR [ebx+0x2e],ebp
  40e83a:	sbb    ecx,DWORD PTR [ecx-0x105e7d0f]
  40e840:	cs jns 0x40e895
  40e843:	in     ax,0x64
  40e846:	pop    ss
  40e847:	repnz jecxz 0x40e8b8
  40e84a:	cmp    DWORD PTR ds:0x139e29cc,0x44b474f8
  40e854:	sahf   
  40e855:	cld    
  40e856:	retf   0xa789
  40e859:	repnz retf 0x1936
  40e85d:	push   ecx
  40e85e:	xlat   BYTE PTR ds:[ebx]
  40e85f:	mov    ch,0x18
  40e861:	fs pop ebp
  40e863:	test   DWORD PTR [ecx],0x27a7d292
  40e869:	xchg   BYTE PTR [ecx-0x31],dh
  40e86c:	loopne 0x40e896
  40e86e:	fs xchg edx,eax
  40e870:	jmp    0x40e8b1
  40e872:	cdq    
  40e873:	inc    esi
  40e874:	or     al,0xcb
  40e876:	(bad)  
  40e877:	and    eax,0xd90d53ce
  40e87c:	pop    esp
  40e87d:	aam    0xb2
  40e87f:	aaa    
  40e880:	leave  
  40e881:	inc    ebx
  40e882:	mov    ds:0x3c6ff37b,eax
  40e887:	mov    ebp,0x3b182a81
  40e88c:	stos   DWORD PTR es:[edi],eax
  40e88d:	jecxz  0x40e8e3
  40e88f:	mov    esp,0x12476a0
  40e894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e895:	fstp   QWORD PTR [edi+0x34a28bcb]
  40e89b:	inc    esp
  40e89c:	repz retw 
  40e89f:	repz mov al,ds:0x5f38db06
  40e8a5:	add    al,0x23
  40e8a7:	adc    BYTE PTR [ebp+0x3f709fd7],ah
  40e8ad:	ins    BYTE PTR es:[edi],dx
  40e8ae:	pop    edx
  40e8af:	cmp    al,0xd0
  40e8b1:	out    0x18,al
  40e8b3:	ja     0x40e914
  40e8b5:	mov    al,ds:0x53bb7bc6
  40e8ba:	xor    ebx,edi
  40e8bc:	ret    
  40e8bd:	or     DWORD PTR [edi-0x20abcf4c],ecx
  40e8c3:	(bad)  
  40e8c4:	pop    esp
  40e8c5:	pop    es
  40e8c6:	out    0x51,eax
  40e8c8:	(bad)  
  40e8c9:	shl    DWORD PTR [ecx],0xf1
  40e8cc:	mov    bh,0xce
  40e8ce:	out    dx,al
  40e8cf:	jbe    0x40e894
  40e8d1:	test   eax,0x32ba7a4f
  40e8d6:	fldenv [edx+0x60b37f5]
  40e8dc:	mov    ebx,0x9ac52df3
  40e8e1:	sti    
  40e8e2:	jle    0x88088922
  40e8e8:	sub    eax,0x34c99815
  40e8ed:	clc    
  40e8ee:	push   0xd06f29d2
  40e8f3:	ror    BYTE PTR [ecx+0x70],cl
  40e8f6:	icebp  
  40e8f7:	idiv   dl
  40e8f9:	or     BYTE PTR [ecx+0x5c],0xec
  40e8fd:	shl    BYTE PTR [ecx+0x1982c914],1
  40e903:	outs   dx,BYTE PTR ds:[esi]
  40e904:	adc    ebx,ecx
  40e906:	(bad)  
  40e908:	xor    DWORD PTR [edx],0x34
  40e90b:	fcomi  st,st(1)
  40e90d:	rol    BYTE PTR [ebp-0x3e],cl
  40e910:	add    edx,ecx
  40e912:	xchg   edx,eax
  40e913:	sub    BYTE PTR [ebx-0x318b4521],0xe0
  40e91a:	jg     0x40e906
  40e91c:	cli    
  40e91d:	hlt    
  40e91e:	dec    esp
  40e91f:	jno    0x40e93f
  40e921:	push   edi
  40e922:	jl     0x40e92e
  40e924:	popa   
  40e925:	add    BYTE PTR [edi-0x78],bl
  40e928:	out    0xcc,al
  40e92a:	hlt    
  40e92b:	add    eax,0x6c170cbc
  40e930:	push   ebp
  40e931:	fdiv   QWORD PTR [eax]
  40e934:	push   ecx
  40e935:	fwait
  40e936:	sub    DWORD PTR [esi],esi
  40e938:	xchg   edx,eax
  40e939:	popf   
  40e93a:	popf   
  40e93b:	and    al,0x68
  40e93d:	sbb    DWORD PTR [esi-0xd84aa6e],0x7e
  40e944:	sub    ecx,DWORD PTR [esi+0x73a73827]
  40e94a:	pop    edx
  40e94b:	jle    0x40e9b7
  40e94d:	test   DWORD PTR [eax-0x36d5a5d4],0x5a416e5c
  40e957:	add    DWORD PTR [ecx],0xffffffb0
  40e95a:	bound  edi,QWORD PTR ds:0xb9e60766
  40e960:	into   
  40e961:	mov    edx,0xc70e66b9
  40e966:	icebp  
  40e967:	xor    DWORD PTR [eax+0x74e0ddbd],eax
  40e96d:	lahf   
  40e96e:	cmp    eax,0x15a220e8
  40e973:	rcl    BYTE PTR [ecx+0x54010c38],0xb6
  40e97a:	fs push edx
  40e97c:	test   BYTE PTR [ecx+eax*8+0x3286debb],0xf5
  40e984:	sub    edi,ebp
  40e986:	ds lahf 
  40e988:	xor    ah,BYTE PTR [ebx-0x24587572]
  40e98e:	ror    BYTE PTR [ecx-0x30f70850],1
  40e994:	mov    ch,0x7f
  40e996:	jo     0x40e95f
  40e998:	outs   dx,BYTE PTR ds:[esi]
  40e999:	imul   ecx,DWORD PTR [ebx],0x4888faa1
  40e99f:	arpl   WORD PTR [edi+edx*8],si
  40e9a2:	or     eax,0xea02b1e8
  40e9a7:	stos   DWORD PTR es:[edi],eax
  40e9a8:	push   ss
  40e9a9:	mov    eax,0xc5bc5a7c
  40e9ae:	hlt    
  40e9af:	cmp    bh,ch
  40e9b1:	lea    esi,[esi]
  40e9b3:	sbb    ebx,DWORD PTR [esi+0x32c9c020]
  40e9b9:	mov    ah,0x93
  40e9bb:	adc    eax,0xaa9a2247
  40e9c0:	add    eax,0x6da517bd
  40e9c5:	dec    ecx
  40e9c6:	fiadd  DWORD PTR [edi-0x61]
  40e9c9:	lods   eax,DWORD PTR ds:[esi]
  40e9ca:	ss loop 0x40e9ff
  40e9cd:	inc    ch
  40e9cf:	cmp    DWORD PTR [edi+0x58],ecx
  40e9d2:	cmp    bl,ch
  40e9d4:	xor    eax,0xb8be80de
  40e9d9:	mov    esi,0x25496e03
  40e9de:	xor    edi,ecx
  40e9e0:	dec    edx
  40e9e1:	adc    DWORD PTR [ebx],0xffffffb8
  40e9e4:	and    ebx,DWORD PTR [esi+0x23]
  40e9e7:	pop    edi
  40e9e8:	and    DWORD PTR [edi-0x1d0431b],ecx
  40e9ee:	ins    BYTE PTR es:[edi],dx
  40e9ef:	push   ebp
  40e9f0:	jl     0x40e9f6
  40e9f2:	jecxz  0x40e9b2
  40e9f4:	repz and edi,DWORD PTR [eax+0x5de64d50]
  40e9fb:	mov    edi,0xe43c355c
  40ea00:	test   eax,0x4cc4919b
  40ea05:	(bad)  
  40ea06:	push   ds
  40ea07:	mov    ah,0x29
  40ea09:	imul   edi,DWORD PTR [ecx+edx*8+0x263951d2],0x9a4068b0
  40ea14:	scas   eax,DWORD PTR es:[edi]
  40ea15:	dec    esp
  40ea16:	lock sub eax,0x3e285461
  40ea1c:	out    dx,eax
  40ea1d:	call   0xec310353
  40ea22:	shr    BYTE PTR [eax],cl
  40ea24:	jcxz   0x40ea14
  40ea27:	sbb    BYTE PTR [edx-0x61],dl
  40ea2a:	pop    ss
  40ea2b:	add    al,0x6f
  40ea2d:	and    al,0x58
  40ea2f:	pop    edi
  40ea30:	dec    ecx
  40ea31:	ins    DWORD PTR es:[edi],dx
  40ea32:	(bad)  
  40ea33:	pop    edi
  40ea34:	sub    DWORD PTR [ecx+0x3c],esp
  40ea37:	int    0xe1
  40ea39:	pushf  
  40ea3a:	sbb    ah,BYTE PTR [ebx-0x2939a88c]
  40ea40:	retf   
  40ea41:	ins    DWORD PTR es:[edi],dx
  40ea42:	sbb    BYTE PTR [ebp+0x5931e8ca],ah
  40ea48:	idiv   DWORD PTR [eax+0x50794d4e]
  40ea4e:	loop   0x40ea76
  40ea50:	and    al,0xf
  40ea52:	push   esi
  40ea53:	push   0xff1a6ae0
  40ea58:	cmp    ebx,DWORD PTR [eax+esi*8-0x3f]
  40ea5c:	lahf   
  40ea5d:	cmp    bl,BYTE PTR [edx+0x46]
  40ea60:	mov    esp,0xfe83892
  40ea65:	xor    al,0x64
  40ea67:	mov    esi,esp
  40ea69:	bound  edx,QWORD PTR [eax-0x6c752bc8]
  40ea6f:	sub    DWORD PTR [edi+0x3272f2ab],ebp
  40ea75:	fadd   QWORD PTR [esp+ebx*2-0x2fd47170]
  40ea7c:	test   dh,0x28
  40ea7f:	pop    es
  40ea80:	lods   eax,DWORD PTR ds:[esi]
  40ea81:	jl     0x40ea5b
  40ea83:	jmp    DWORD PTR [ecx]
  40ea85:	inc    ebx
  40ea86:	cli    
  40ea87:	push   ecx
  40ea88:	je     0x40eadc
  40ea8a:	call   0x4f0ce470
  40ea8f:	add    eax,0xd3d515bb
  40ea94:	add    eax,0x8baa076e
  40ea99:	add    esi,DWORD PTR [ecx+0x5f1b4b4e]
  40ea9f:	mov    cl,0xbb
  40eaa1:	fimul  DWORD PTR [edx+0x39]
  40eaa4:	mov    ebx,0xeb7edae4
  40eaaa:	lock jb 0x40ea97
  40eaad:	inc    edx
  40eaae:	fwait
  40eaaf:	dec    ecx
  40eab0:	xlat   BYTE PTR ds:[ebx]
  40eab1:	(bad)  
  40eab2:	sub    edi,ebx
  40eab4:	addr16 inc ecx
  40eab6:	fdivr  QWORD PTR [eax]
  40eab8:	jmp    0x40eab6
  40eaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eabb:	popa   
  40eabc:	(bad)  
  40eabd:	fs cmp esp,esi
  40eac0:	in     eax,0xa3
  40eac2:	cmc    
  40eac3:	xor    eax,0xb9bcbec8
  40eac8:	(bad)  
  40eac9:	xchg   esi,eax
  40eaca:	xchg   BYTE PTR [ebp-0x80],bh
  40eacd:	xchg   ecx,eax
  40eace:	sbb    al,0x88
  40ead0:	jbe    0x40ead8
  40ead2:	into   
  40ead3:	dec    eax
  40ead4:	stc    
  40ead5:	pop    eax
  40ead6:	pushf  
  40ead7:	jmp    0xfa589ed1
  40eadc:	loop   0x40eac2
  40eade:	sub    al,0xf1
  40eae0:	sub    eax,0x385bc27e
  40eae5:	push   eax
  40eae6:	cmp    ecx,esi
  40eae8:	aaa    
  40eae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaea:	in     al,0x3
  40eaec:	adc    edi,DWORD PTR [edi]
  40eaee:	sub    DWORD PTR [ebx-0x18ade6a],ebp
  40eaf4:	scas   al,BYTE PTR es:[edi]
  40eaf5:	rcl    edi,0x6
  40eaf8:	adc    eax,0x50126d75
  40eafd:	dec    ebp
  40eafe:	jo     0x40eb47
  40eb00:	outs   dx,BYTE PTR ds:[esi]
  40eb01:	shl    ch,0x5
  40eb04:	fcom   DWORD PTR ds:0xe4dfbaf8
  40eb0a:	test   DWORD PTR [esi-0x13],edx
  40eb0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb0e:	push   ss
  40eb0f:	mov    ds:0x297577ec,eax
  40eb14:	mul    BYTE PTR [edx+0x43e0496a]
  40eb1a:	loope  0x40eb17
  40eb1c:	add    bh,BYTE PTR [edi+esi*4+0x38]
  40eb20:	xchg   esp,eax
  40eb21:	xor    eax,0xadf00764
  40eb26:	jb     0x40eabc
  40eb28:	mov    dl,0xed
  40eb2a:	sbb    BYTE PTR [eax-0x6f],cl
  40eb2d:	ret    
  40eb2e:	sub    bl,BYTE PTR [esi+0x77]
  40eb31:	mov    ah,0xdb
  40eb33:	pusha  
  40eb34:	jnp    0x40eb56
  40eb36:	stos   BYTE PTR es:[edi],al
  40eb37:	and    BYTE PTR [edx-0x3],cl
  40eb3a:	cmp    cl,BYTE PTR [edx+0x32]
  40eb3d:	std    
  40eb3e:	mov    eax,ds:0x6c7ff400
  40eb43:	sbb    al,0x32
  40eb45:	and    ebp,DWORD PTR [ecx]
  40eb47:	push   esp
  40eb48:	dec    ecx
  40eb49:	sbb    ebp,0xfb1e3809
  40eb4f:	ins    DWORD PTR es:[edi],dx
  40eb50:	lds    ebx,FWORD PTR [ebp+0xe]
  40eb53:	std    
  40eb54:	lods   eax,DWORD PTR ds:[esi]
  40eb55:	test   al,0x36
  40eb57:	pop    esp
  40eb58:	or     edi,ecx
  40eb5a:	js     0x40ebd5
  40eb5c:	ficomp WORD PTR [edx-0x36]
  40eb5f:	push   esi
  40eb60:	enter  0x884d,0x38
  40eb64:	das    
  40eb65:	jnp    0x40ebd6
  40eb67:	push   ds
  40eb68:	cs jne 0x40ebcc
  40eb6b:	aam    0xc8
  40eb6d:	adc    eax,0x4ff72d7e
  40eb72:	lods   eax,DWORD PTR ds:[esi]
  40eb73:	mov    WORD PTR [esi],?
  40eb75:	jle    0x40ebcf
  40eb77:	ret    
  40eb78:	jg     0x40eb25
  40eb7a:	or     cl,BYTE PTR [ebx+0x51]
  40eb7d:	rcl    cl,1
  40eb7f:	dec    ecx
  40eb80:	cmp    eax,0x76281be0
  40eb85:	into   
  40eb86:	cmp    ch,ch
  40eb88:	jp     0x40eb11
  40eb8a:	inc    ebx
  40eb8b:	jp     0x40eb64
  40eb8d:	dec    ebp
  40eb8e:	lock add eax,0x3228a5b8
  40eb94:	frstor [ebx]
  40eb96:	(bad)  
  40eb97:	jnp    0x40ec13
  40eb99:	inc    ecx
  40eb9a:	jne    0x40ec16
  40eb9c:	rol    DWORD PTR [ebx-0x6d],1
  40eb9f:	in     eax,dx
  40eba0:	or     ah,BYTE PTR [ebp-0x5a]
  40eba3:	js     0x40ebf3
  40eba5:	(bad)  
  40eba6:	aad    0x20
  40eba8:	fcmovbe st,st(0)
  40ebaa:	pop    DWORD PTR [esi+0x2d]
  40ebad:	xor    DWORD PTR [ebp+0x25],esp
  40ebb0:	dec    ecx
  40ebb1:	mov    dh,0xbd
  40ebb3:	cli    
  40ebb4:	icebp  
  40ebb5:	stos   BYTE PTR es:[edi],al
  40ebb6:	adc    eax,0xc4e3543c
  40ebbb:	add    BYTE PTR [ebx],bl
  40ebbd:	inc    eax
  40ebbe:	stc    
  40ebbf:	mov    ebx,0x29940a74
  40ebc4:	out    0x24,al
  40ebc6:	mov    WORD PTR [edi+eax*4],ds
  40ebc9:	sub    eax,0x285fee24
  40ebce:	mov    ss,edx
  40ebd0:	es and al,0x63
  40ebd3:	leave  
  40ebd4:	iretw  
  40ebd6:	pop    esp
  40ebd7:	pusha  
  40ebd8:	lea    edx,[ebp+0xcaa19a6]
  40ebde:	sub    al,0xbf
  40ebe0:	es sub dh,cl
  40ebe3:	jp     0x40ec0b
  40ebe5:	jnp    0x40ec3d
  40ebe7:	or     al,0xd7
  40ebe9:	stos   BYTE PTR es:[edi],al
  40ebea:	xchg   ebp,eax
  40ebeb:	(bad)  [edi+0x6cd3f1e7]
  40ebf1:	mov    al,0xa3
  40ebf3:	mov    ds:0x8883c49e,al
  40ebf8:	aas    
  40ebf9:	inc    esi
  40ebfa:	fdiv   QWORD PTR [ecx+0x36d35ca5]
  40ec00:	mov    edi,0xba010a85
  40ec05:	push   ebp
  40ec06:	test   bh,dl
  40ec08:	push   eax
  40ec09:	ss jg  0x40ebfa
  40ec0c:	dec    ebp
  40ec0d:	out    dx,eax
  40ec0e:	enter  0xe728,0xad
  40ec12:	mov    bh,BYTE PTR [ebp*2-0xbaf86f2]
  40ec19:	shl    bh,cl
  40ec1b:	out    0xe5,al
  40ec1d:	ds retf 
  40ec1f:	call   0x50e6:0x51725f02
  40ec26:	in     eax,0xe3
  40ec28:	imul   edx,DWORD PTR [esp+ebx*2],0x64faaffa
  40ec2f:	sbb    al,0x14
  40ec31:	dec    ebp
  40ec32:	in     al,dx
  40ec33:	bound  ebp,QWORD PTR [ebp+0x4d56aedd]
  40ec39:	retf   0x7d5b
  40ec3c:	arpl   WORD PTR [ebp-0x27c7e159],si
  40ec42:	jmp    DWORD PTR [edi-0x655afac0]
  40ec48:	loopne 0x40ec3b
  40ec4a:	mov    esp,0x841cbac
  40ec4f:	(bad)  
  40ec50:	sub    DWORD PTR [ebx+0x135e937f],0x7081960e
  40ec5a:	std    
  40ec5b:	pop    edx
  40ec5c:	jae    0x40ec73
  40ec5e:	imul   BYTE PTR [ecx-0x12dd6fdc]
  40ec64:	pop    ss
  40ec65:	and    esp,DWORD PTR [edi+0x476cfcbe]
  40ec6b:	pusha  
  40ec6c:	cwde   
  40ec6d:	inc    eax
  40ec6e:	dec    ebx
  40ec6f:	shr    DWORD PTR [edi],0x56
  40ec72:	sbb    BYTE PTR [ebx-0x12],al
  40ec75:	push   0xffffffe3
  40ec77:	push   ecx
  40ec78:	cmp    BYTE PTR [ebp+0x4d07fb62],dh
  40ec7e:	(bad)  
  40ec7f:	out    0x56,al
  40ec81:	lea    ecx,[edi-0x5ecbbd89]
  40ec87:	inc    esp
  40ec88:	(bad)  
  40ec8b:	or     esp,esi
  40ec8d:	or     al,0x66
  40ec8f:	sbb    esp,DWORD PTR [esi-0x69]
  40ec92:	cli    
  40ec93:	sbb    bh,BYTE PTR [esi+0x58ee7f35]
  40ec99:	aam    0xf7
  40ec9b:	inc    eax
  40ec9c:	cmp    eax,0x796206c2
  40eca1:	addr16 je 0x40ed13
  40eca4:	test   bl,ah
  40eca6:	repz dec esp
  40eca8:	into   
  40eca9:	xchg   esi,eax
  40ecaa:	dec    esp
  40ecab:	adc    al,0x2b
  40ecad:	hlt    
  40ecae:	pusha  
  40ecaf:	xor    eax,0x19a964ab
  40ecb4:	shl    BYTE PTR [ecx],cl
  40ecb6:	push   0x5298e3e0
  40ecbb:	sbb    ebx,DWORD PTR [eax+0x46]
  40ecbe:	cmc    
  40ecbf:	push   0x4d
  40ecc1:	mov    ebp,0x12d6c280
  40ecc6:	in     al,dx
  40ecc7:	ud0    ebx,eax
  40ecca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eccb:	iret   
  40eccc:	pop    ebx
  40eccd:	xchg   ebx,eax
  40ecce:	je     0x40ec9f
  40ecd0:	adc    al,0x6d
  40ecd2:	(bad)  
  40ecd3:	or     DWORD PTR [eax-0x61],ebp
  40ecd6:	jb     0x40ec9c
  40ecd8:	adc    esi,ebp
  40ecda:	retf   0xc51e
  40ecdd:	shl    DWORD PTR [ecx+edi*1-0x43],cl
  40ece1:	test   eax,0x93f05a91
  40ece6:	sub    al,0x65
  40ece8:	dec    ecx
  40ece9:	jae    0x40eca3
  40eceb:	push   ss
  40ecec:	push   0xfffffff1
  40ecee:	push   ecx
  40ecef:	ins    BYTE PTR es:[edi],dx
  40ecf0:	jnp    0x40ec7b
  40ecf2:	xchg   ecx,eax
  40ecf3:	jb     0x40ed3d
  40ecf5:	inc    eax
  40ecf6:	sar    esi,cl
  40ecf8:	mov    ah,BYTE PTR [esi]
  40ecfa:	(bad)  
  40ecfb:	fsubr  QWORD PTR [ebx+0x26]
  40ecff:	(bad)  
  40ed01:	mov    ch,0x8b
  40ed03:	push   0xf674ffa
  40ed08:	aaa    
  40ed09:	(bad)  
  40ed0a:	clc    
  40ed0b:	repnz xchg ebp,eax
  40ed0d:	not    BYTE PTR [edx+eax*8+0x5946ae34]
  40ed14:	imul   ebp,eax,0x8618da38
  40ed1a:	aad    0xb9
  40ed1c:	dec    ebx
  40ed1d:	into   
  40ed1e:	pop    edx
  40ed1f:	push   edi
  40ed20:	push   eax
  40ed21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed22:	xor    eax,0xe29bd005
  40ed27:	cmp    dh,BYTE PTR [ecx+0x20a12e83]
  40ed2d:	add    esp,ebx
  40ed2f:	xchg   ebp,eax
  40ed30:	retf   
  40ed31:	ja     0x40ed8b
  40ed33:	int    0xad
  40ed35:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ed37:	push   ds
  40ed38:	sti    
  40ed39:	cmp    ch,0x35
  40ed3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3d:	lods   al,BYTE PTR ds:[esi]
  40ed3e:	call   0x2038c1f8
  40ed43:	ret    
  40ed44:	int    0xa8
  40ed46:	cmp    BYTE PTR [edx+edx*8-0x51],dh
  40ed4a:	in     eax,dx
  40ed4b:	lea    edx,[eax]
  40ed4d:	pop    ebx
  40ed4e:	xor    ebx,DWORD PTR [ecx+0x58734b4a]
  40ed54:	dec    esi
  40ed55:	xchg   BYTE PTR [esi-0x176d5ce1],ch
  40ed5b:	lahf   
  40ed5c:	sub    ecx,DWORD PTR [ebx]
  40ed5e:	pop    ecx
  40ed5f:	dec    esi
  40ed60:	out    0xb1,eax
  40ed62:	xchg   esp,eax
  40ed63:	and    esp,eax
  40ed65:	xor    ah,ch
  40ed67:	sbb    DWORD PTR [ebx+ecx*8+0x670f9004],0x25a247f2
  40ed72:	mov    BYTE PTR [esi+0x25b970fe],bh
  40ed78:	jecxz  0x40edf4
  40ed7a:	mov    dh,dh
  40ed7c:	mov    ds:0x3bd5ad91,eax
  40ed81:	xchg   ebp,eax
  40ed82:	aad    0xe8
  40ed84:	jmp    0x40ed43
  40ed86:	jno    0x40ed53
  40ed88:	std    
  40ed89:	fldcw  WORD PTR es:[eax+0x5643879d]
  40ed90:	aas    
  40ed91:	ret    
  40ed92:	jno    0x40ed81
  40ed94:	pop    ebp
  40ed95:	and    eax,DWORD PTR [ebx]
  40ed97:	mov    eax,edi
  40ed99:	mov    ecx,0x18aa900b
  40ed9e:	in     al,dx
  40ed9f:	(bad)  
  40eda0:	mov    ch,0xd3
  40eda2:	fcom   st(5)
  40eda4:	inc    edi
  40eda5:	addr16 loope 0x40ed49
  40eda8:	push   0x1a
  40edaa:	push   0xf
  40edac:	ficom  DWORD PTR [edi]
  40edae:	fisub  WORD PTR ds:0x6d4d929e
  40edb4:	push   0x7d
  40edb6:	stos   DWORD PTR es:[edi],eax
  40edb7:	bound  esp,QWORD PTR [esi-0x20]
  40edba:	jo     0x40ed41
  40edbc:	fabs   
  40edbe:	shl    DWORD PTR ds:0xaef69844,0x3e
  40edc5:	inc    esp
  40edc6:	repnz pushf 
  40edc8:	push   0x4381ead2
  40edcd:	xchg   edi,eax
  40edce:	sbb    al,0x68
  40edd0:	adc    al,BYTE PTR [edi-0x2a]
  40edd3:	xchg   esi,eax
  40edd4:	push   eax
  40edd5:	dec    edi
  40edd6:	pushf  
  40edd7:	ret    0x2302
  40edda:	je     0x40ee36
  40eddc:	adc    eax,0xe61b4dcf
  40ede1:	xchg   BYTE PTR [ecx+0x35],bl
  40ede4:	dec    esp
  40ede5:	cmp    ch,bl
  40ede7:	dec    bl
  40ede9:	pop    ebp
  40edea:	(bad)  
  40edec:	dec    ebx
  40eded:	rcr    DWORD PTR [ebx],0x9a
  40edf0:	mov    edi,0xbf2d9cb2
  40edf5:	mov    ecx,ss
  40edf7:	lods   eax,DWORD PTR ds:[esi]
  40edf8:	aas    
  40edf9:	or     al,0xb6
  40edfb:	sub    al,0xc0
  40edfd:	and    dl,BYTE PTR [edx]
  40edff:	cs aad 0x9e
  40ee02:	pop    ebp
  40ee03:	pop    ebp
  40ee04:	cld    
  40ee05:	jno    0x471bc405
  40ee0b:	mov    WORD PTR [ecx+ecx*2+0x7410e948],?
  40ee12:	(bad)  
  40ee13:	fwait
  40ee14:	mov    eax,ds:0x26e911dd
  40ee19:	std    
  40ee1a:	adc    DWORD PTR [edi-0x50],ebx
  40ee1d:	mov    ds:0xa902190a,eax
  40ee22:	(bad)  
  40ee23:	mov    edx,0x44e0286a
  40ee28:	mov    gs,ebx
  40ee2a:	and    esp,DWORD PTR ss:[ecx+0x7c4e648d]
  40ee31:	xlat   BYTE PTR ds:[ebx]
  40ee32:	test   eax,0x36f966df
  40ee37:	dec    edx
  40ee38:	pop    ds
  40ee39:	lea    eax,ds:0xadf162f9
  40ee3f:	xchg   edx,eax
  40ee40:	push   es
  40ee41:	dec    edx
  40ee42:	mov    DWORD PTR [edx],edx
  40ee44:	(bad)  
  40ee45:	loop   0x40ee9b
  40ee47:	cmp    DWORD PTR [esi+0x34],eax
  40ee4a:	cmp    dl,BYTE PTR [ecx+0x70a79151]
  40ee50:	shr    BYTE PTR cs:[eax-0x1e],0xc5
  40ee55:	pop    esi
  40ee56:	pop    edx
  40ee57:	bound  esi,QWORD PTR [ecx]
  40ee59:	and    ecx,ebx
  40ee5b:	clc    
  40ee5c:	pop    ecx
  40ee5d:	ss repz xor esp,esp
  40ee61:	xchg   DWORD PTR [ebp+0x2d],ecx
  40ee64:	or     bh,al
  40ee66:	pop    esp
  40ee67:	dec    edx
  40ee68:	sub    DWORD PTR [edi+0x7c7acad1],esp
  40ee6e:	and    DWORD PTR [edx+ecx*8-0x6a3bf598],esi
  40ee75:	xchg   DWORD PTR [eax-0x39],esi
  40ee78:	mov    bl,0x97
  40ee7a:	aam    0x4
  40ee7c:	adc    bl,BYTE PTR [edx]
  40ee7e:	jne    0x40eeb4
  40ee80:	js     0x40ee52
  40ee82:	dec    esp
  40ee83:	pop    ebp
  40ee84:	sbb    esi,DWORD PTR [edi]
  40ee86:	xchg   ebx,eax
  40ee87:	xor    esp,DWORD PTR [edx+ebp*8+0x4b9bf80e]
  40ee8e:	stos   BYTE PTR es:[edi],al
  40ee8f:	(bad)  
  40ee91:	push   ebp
  40ee92:	xor    bh,BYTE PTR [eax]
  40ee94:	pop    ecx
  40ee95:	sbb    eax,0xa76bfdd6
  40ee9a:	xchg   esi,eax
  40ee9b:	mov    esp,ebp
  40ee9d:	(bad)  
  40ee9e:	rcr    cl,cl
  40eea0:	scas   eax,DWORD PTR es:[edi]
  40eea1:	js     0x40ee7e
  40eea3:	jmp    0x40ef17
  40eea5:	mov    bl,0x8c
  40eea7:	aaa    
  40eea8:	jno    0x40ef17
  40eeaa:	push   edx
  40eeab:	mov    dh,0x2d
  40eead:	sub    eax,0xca0c344a
  40eeb2:	mov    bl,0x40
  40eeb4:	inc    eax
  40eeb5:	sub    BYTE PTR [esi+0x2b7c3b21],ch
  40eebb:	sbb    ecx,ecx
  40eebd:	or     bh,BYTE PTR [edi+0x76f8030d]
  40eec3:	nop
  40eec4:	mov    BYTE PTR [ebx+edx*1-0xb1ce24a],al
  40eecb:	cmp    bl,bl
  40eecd:	frstor [ecx+0x2162c373]
  40eed3:	xor    esp,DWORD PTR [edx+edi*8-0x38]
  40eed7:	or     eax,0x6f56d3d2
  40eedc:	iret   
  40eedd:	mov    eax,ds:0xd1ac11f6
  40eee2:	and    DWORD PTR [ecx+0x3a],ebx
  40eee5:	icebp  
  40eee6:	cmp    eax,0xda67b853
  40eeeb:	je     0x40ef3f
  40eeed:	add    cl,BYTE PTR [edi-0x43]
  40eef0:	mov    eax,ds:0xc61dd38d
  40eef5:	xchg   ebx,eax
  40eef6:	dec    ebx
  40eef7:	adc    dh,dh
  40eef9:	cli    
  40eefa:	rol    edi,cl
  40eefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eefd:	loope  0x40ee8b
  40eeff:	push   es
  40ef00:	cli    
  40ef01:	outs   dx,DWORD PTR ds:[esi]
  40ef02:	cli    
  40ef03:	push   ss
  40ef04:	addr16 data16 je 0x40eeee
  40ef08:	pop    ss
  40ef09:	pop    edx
  40ef0a:	ror    bh,cl
  40ef0c:	xchg   edi,eax
  40ef0d:	push   ecx
  40ef0e:	sub    eax,0x358da61f
  40ef13:	loope  0x40ef4e
  40ef15:	xchg   ebx,eax
  40ef16:	mov    BYTE PTR [edx-0x8bb05bf],ch
  40ef1c:	push   cs
  40ef1d:	push   0xdeb2fb84
  40ef22:	dec    edx
  40ef23:	leave  
  40ef24:	add    dh,ch
  40ef26:	mov    ecx,0x8a0239f5
  40ef2b:	out    dx,eax
  40ef2c:	push   eax
  40ef2d:	fs push ss
  40ef2f:	aam    0x8c
  40ef31:	arpl   WORD PTR ds:[edx+0x2426c6b],cx
  40ef38:	jge    0x40eebc
  40ef3a:	pusha  
  40ef3b:	jmp    0x5d1e:0x949710ac
  40ef42:	mov    DWORD PTR [edi],ecx
  40ef44:	mov    eax,ds:0x432e1f49
  40ef49:	shr    BYTE PTR ds:0xb39d0995,0xe5
  40ef50:	jg     0x40eef9
  40ef52:	ja     0x40ef87
  40ef54:	daa    
  40ef55:	in     eax,0x8e
  40ef57:	outs   dx,DWORD PTR ds:[esi]
  40ef58:	pop    ax
  40ef5a:	fist   WORD PTR [ecx-0x31]
  40ef5d:	mov    edx,0x49288671
  40ef62:	test   DWORD PTR [ebp+0x1efce9d9],ecx
  40ef68:	mov    esp,0xa632277c
  40ef6d:	and    DWORD PTR [ecx-0x5d51c6b3],ecx
  40ef73:	dec    edi
  40ef74:	data16 ss stc 
  40ef77:	mov    ch,0x8e
  40ef79:	leave  
  40ef7a:	cmp    BYTE PTR [esi-0x2bf3eb12],dh
  40ef80:	sahf   
  40ef81:	jmp    0x40ef9d
  40ef83:	mov    edx,0xdadf4191
  40ef88:	adc    al,0xc
  40ef8a:	cdq    
  40ef8b:	(bad)  
  40ef8c:	sbb    DWORD PTR [ecx-0x78],ebp
  40ef8f:	fadd   QWORD PTR ds:0x841155e1
  40ef95:	bound  ebp,QWORD PTR [ebp+0x19]
  40ef98:	mov    dh,0xba
  40ef9a:	add    BYTE PTR [eax-0x3d],al
  40ef9d:	jns    0x40ef6c
  40ef9f:	xlat   BYTE PTR ds:[ebx]
  40efa0:	loop   0x40ef63
  40efa2:	or     ebx,edx
  40efa4:	push   ss
  40efa5:	mov    ebp,0xdcf9ec3b
  40efaa:	or     eax,0x5a4d3566
  40efaf:	jle    0x40efdc
  40efb1:	push   ecx
  40efb2:	sbb    DWORD PTR cs:[edx-0x6f],edi
  40efb6:	pop    edx
  40efb7:	in     eax,0x70
  40efb9:	sbb    eax,0x54070c58
  40efbe:	push   cs
  40efbf:	mov    al,0xf8
  40efc1:	dec    esp
  40efc2:	sar    BYTE PTR [ebp+0x5c],1
  40efc5:	jo     0x40ef5e
  40efc7:	mov    eax,cs:0xade789ea
  40efcd:	dec    esi
  40efce:	xchg   DWORD PTR [ebx+0x4bdbbbe0],esp
  40efd4:	xor    BYTE PTR [ebx-0x63],ah
  40efd7:	dec    ebx
  40efd8:	or     eax,0x55ce3118
  40efdd:	dec    ebx
  40efde:	add    BYTE PTR [esi-0x2ef61003],0x96
  40efe5:	cmp    eax,0x14f7b87a
  40efea:	fisubr DWORD PTR [edi]
  40efec:	mov    bh,0xe5
  40efee:	dec    ebp
  40efef:	(bad)  
  40eff1:	sbb    esi,0x6f
  40eff4:	xchg   esp,edi
  40eff6:	test   DWORD PTR [ebp-0x57],eax
  40eff9:	jl     0x40efdf
  40effb:	xchg   ecx,eax
  40effc:	lods   al,BYTE PTR ds:[esi]
  40effd:	dec    ecx
  40effe:	aaa    
  40efff:	outs   dx,DWORD PTR ds:[esi]
  40f000:	push   ecx
  40f001:	aaa    
  40f002:	jo     0x40ef8e
  40f004:	pusha  
  40f005:	ins    DWORD PTR es:[edi],dx
  40f006:	xchg   esp,eax
  40f007:	int    0x9b
  40f009:	mov    ebp,0x60426027
  40f00e:	pop    ebp
  40f00f:	push   0xffffff9b
  40f011:	dec    esi
  40f012:	fistp  QWORD PTR [ecx]
  40f014:	out    0x1b,eax
  40f016:	sbb    eax,0xb9b048e7
  40f01b:	mov    dh,0xa4
  40f01d:	sub    DWORD PTR [eax],ecx
  40f01f:	mov    ch,0x9b
  40f021:	std    
  40f022:	mov    esp,0x6686c7f1
  40f027:	inc    ebp
  40f028:	repnz mov ecx,DWORD PTR [esi+0x68]
  40f02c:	cld    
  40f02d:	inc    eax
  40f02e:	sub    eax,0x4fd37488
  40f033:	(bad)  
  40f035:	push   ds
  40f036:	retf   
  40f037:	push   es
  40f038:	ds sti 
  40f03a:	lods   al,BYTE PTR ds:[esi]
  40f03b:	mov    bl,0x80
  40f03d:	jle    0x40f01b
  40f03f:	xor    cl,BYTE PTR [edi+0x3f]
  40f042:	outs   dx,DWORD PTR ds:[esi]
  40f043:	sbb    al,0x90
  40f045:	repnz dec ecx
  40f047:	push   edi
  40f048:	mov    cl,0x12
  40f04a:	jne    0x40f050
  40f04c:	je     0x40f001
  40f04e:	ficomp WORD PTR [ebx]
  40f050:	cmc    
  40f051:	jg     0x40f08d
  40f053:	jo     0x40f0d1
  40f055:	pop    ecx
  40f056:	ror    DWORD PTR [esi-0xd823d83],1
  40f05c:	idiv   DWORD PTR [esp+ecx*4+0x2202a08c]
  40f063:	mov    eax,0xd38374ea
  40f068:	inc    DWORD PTR [esi]
  40f06a:	mov    cl,0xa4
  40f06c:	xchg   ebp,eax
  40f06d:	js     0x40f00e
  40f06f:	inc    esi
  40f070:	stos   BYTE PTR es:[edi],al
  40f071:	ror    BYTE PTR [ecx],1
  40f073:	ins    BYTE PTR es:[edi],dx
  40f074:	mov    bh,0x97
  40f076:	int    0x37
  40f078:	bound  eax,QWORD PTR [ebx+0x5be3ee10]
  40f07e:	dec    eax
  40f07f:	and    al,0x94
  40f081:	fcmovnb st,st(6)
  40f083:	adc    al,0x3b
  40f086:	pop    eax
  40f087:	mov    WORD PTR [esi],ss
  40f089:	mov    al,0xaa
  40f08b:	fist   WORD PTR [eax-0x13]
  40f08e:	cmp    eax,0x7db28f1
  40f093:	xor    ch,BYTE PTR [ecx]
  40f095:	cld    
  40f096:	and    BYTE PTR [esi+eax*2+0x43c49ba5],0xd2
  40f09e:	sub    cl,BYTE PTR [ebp-0x68]
  40f0a1:	xchg   ecx,eax
  40f0a2:	add    eax,0xf75aa844
  40f0a7:	adc    eax,0xe47b561d
  40f0ac:	outs   dx,BYTE PTR ds:[esi]
  40f0ad:	add    bh,ah
  40f0af:	cmp    al,0x99
  40f0b1:	mov    ebx,0x64045339
  40f0b6:	cli    
  40f0b7:	mov    ah,0xb2
  40f0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ba:	xchg   ebx,eax
  40f0bb:	cmp    BYTE PTR [esi+0x5af715e5],cl
  40f0c1:	inc    eax
  40f0c2:	les    ebx,FWORD PTR [eax-0x20d1bbac]
  40f0c8:	fnstsw WORD PTR [ecx+0x2f]
  40f0cb:	mov    ds:0xdabcdffc,eax
  40f0d0:	dec    edi
  40f0d1:	and    al,dh
  40f0d3:	hlt    
  40f0d4:	clc    
  40f0d5:	adc    DWORD PTR [ebx+esi*2-0x61c5b386],esp
  40f0dc:	dec    esp
  40f0dd:	loop   0x40f0d2
  40f0df:	lea    eax,[ebp+0x1d]
  40f0e2:	add    dh,bh
  40f0e4:	(bad)  
  40f0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0e7:	adc    DWORD PTR [edi-0x68f02a40],ebx
  40f0ed:	ror    DWORD PTR [edi+0x75],1
  40f0f0:	xor    eax,ecx
  40f0f2:	adc    al,0x43
  40f0f4:	xchg   edi,eax
  40f0f5:	adc    eax,0xec0aae9e
  40f0fa:	mov    ebx,gs
  40f0fc:	mov    al,ds:0x198c7594
  40f101:	shr    BYTE PTR [edx-0x63723f6],1
  40f107:	and    BYTE PTR [ebx+0x3e],0x47
  40f10b:	dec    edi
  40f10c:	cmp    DWORD PTR ds:0xde89eec6,edi
  40f112:	push   0xc2c9d788
  40f117:	cmp    al,0xa2
  40f119:	mov    ah,0xe8
  40f11b:	sbb    al,0xf
  40f11d:	les    ebx,FWORD PTR [edi]
  40f11f:	mov    edx,0x3eef237f
  40f124:	(bad)  
  40f125:	out    dx,eax
  40f126:	jae    0x40f159
  40f128:	aaa    
  40f129:	push   edi
  40f12a:	xchg   ebx,eax
  40f12b:	mul    BYTE PTR [edx+ecx*2]
  40f12e:	aad    0x5
  40f130:	ret    
  40f131:	out    0x3a,al
  40f133:	pop    edi
  40f134:	imul   ebp,DWORD PTR [ecx],0x17
  40f137:	jns    0x40f17d
  40f139:	or     ch,BYTE PTR [edi]
  40f13b:	push   es
  40f13c:	stos   DWORD PTR es:[edi],eax
  40f13d:	aad    0x6b
  40f13f:	test   DWORD PTR [edx+ecx*4],esp
  40f142:	call   0xfb6e:0x5705f804
  40f149:	add    ch,BYTE PTR [eax-0x6c0aed19]
  40f14f:	enter  0x75fd,0xab
  40f153:	cdq    
  40f154:	mov    ah,0x32
  40f156:	xchg   esp,eax
  40f157:	xchg   DWORD PTR [esi-0x2c],ebp
  40f15a:	dec    esi
  40f15b:	ja     0x40f157
  40f15d:	int    0xc4
  40f15f:	jl     0x40f11b
  40f161:	call   0x21689c5e
  40f166:	ficomp WORD PTR [eax+0x64752533]
  40f16c:	sbb    bl,BYTE PTR [esi]
  40f16e:	shufps xmm1,XMMWORD PTR [ebp-0x1b],0xfe
  40f173:	xchg   esp,eax
  40f174:	(bad)  
  40f175:	shr    BYTE PTR [eax+edi*4-0x4aa991ec],cl
  40f17c:	adc    cl,BYTE PTR [esi-0x7b]
  40f17f:	test   al,0x80
  40f181:	cmp    bl,BYTE PTR [ebp-0x24c6446]
  40f187:	jg     0x40f197
  40f189:	xor    BYTE PTR [ecx-0x2f],bh
  40f18c:	shl    BYTE PTR [eax+edi*2],cl
  40f18f:	iret   
  40f190:	jmp    0xbfb66cb0
  40f195:	pop    eax
  40f196:	int3   
  40f197:	(bad)  
  40f198:	pop    ebx
  40f199:	mov    dh,0x2a
  40f19b:	enter  0xfc6f,0x2e
  40f19f:	push   0x98360abe
  40f1a4:	je     0x40f160
  40f1a6:	jae    0x40f18f
  40f1a8:	call   0x3b22:0x17f08a2
  40f1af:	mov    eax,ds:0x506adf5f
  40f1b4:	xchg   ebp,eax
  40f1b5:	add    DWORD PTR [ebp-0x3],edi
  40f1b8:	pop    ebp
  40f1ba:	mov    ecx,DWORD PTR es:[eax]
  40f1bd:	mov    ah,0x9a
  40f1bf:	sub    BYTE PTR [edi+0x52248f38],ah
  40f1c5:	add    WORD PTR [esi-0x41],cx
  40f1c9:	(bad)  
  40f1ca:	inc    ebp
  40f1cb:	mov    ah,0xd5
  40f1cd:	sub    bh,BYTE PTR [ecx-0x36]
  40f1d0:	repz dec ebp
  40f1d2:	sub    bh,dl
  40f1d4:	add    bh,BYTE PTR [ebx+0x9239d50]
  40f1da:	aam    0x86
  40f1dc:	push   esi
  40f1dd:	pop    ds
  40f1de:	mov    al,ds:0xcdb03f05
  40f1e3:	fcmove st,st(4)
  40f1e5:	push   ebp
  40f1e6:	mov    eax,ds:0x5679e216
  40f1eb:	mov    al,0xef
  40f1ed:	adc    BYTE PTR [eax-0x8],ah
  40f1f0:	xchg   DWORD PTR [edi+0x71a617d2],ebx
  40f1f6:	test   DWORD PTR ds:0x8e908b62,edi
  40f1fc:	sbb    ah,dh
  40f1fe:	sub    DWORD PTR [eax+eax*1-0x56],esi
  40f202:	mov    eax,0x6f85fc86
  40f207:	inc    edi
  40f208:	mov    gs,WORD PTR [edi+ebx*4-0x4a]
  40f20c:	mov    ebx,0x13bea1f2
  40f211:	jne    0x40f215
  40f213:	rcl    BYTE PTR [esi-0x5f3822db],cl
  40f219:	popa   
  40f21a:	aad    0x39
  40f21c:	sahf   
  40f21d:	and    bl,BYTE PTR [ebp-0x6c]
  40f220:	inc    edi
  40f221:	ins    DWORD PTR es:[edi],dx
  40f222:	xor    BYTE PTR [edi],0xe9
  40f225:	pop    eax
  40f226:	mov    ebp,0x2fda993
  40f22b:	dec    edi
  40f22c:	or     al,BYTE PTR [eax-0x614f4d85]
  40f232:	jle    0x40f230
  40f234:	pop    ds
  40f235:	adc    DWORD PTR [edi],edi
  40f237:	dec    esi
  40f238:	enter  0x534,0x3e
  40f23c:	cmp    ebp,0xffffffbb
  40f23f:	mov    bl,0x36
  40f241:	jne    0x40f1ec
  40f243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f244:	add    cl,ch
  40f246:	outs   dx,DWORD PTR ds:[esi]
  40f247:	in     eax,0x7b
  40f249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f24a:	or     ecx,ebx
  40f24c:	jno    0x40f251
  40f24e:	pop    edi
  40f24f:	jne    0x40f1f2
  40f251:	mov    cl,0x81
  40f253:	mov    bl,0xeb
  40f255:	fadd   st(1),st
  40f257:	mov    ds:0x85ac9b6f,eax
  40f25c:	cld    
  40f25d:	cmp    ebp,edi
  40f25f:	add    ebp,edi
  40f261:	into   
  40f262:	xchg   BYTE PTR [edx-0x59742fe4],bl
  40f268:	mov    eax,0xecd549a5
  40f26d:	clc    
  40f26e:	clc    
  40f26f:	repz mov ebx,0x6b0d3ae5
  40f275:	out    0x38,al
  40f277:	cmp    BYTE PTR [edx-0x7ceb0568],dh
  40f27d:	fwait
  40f27e:	jno    0x40f261
  40f280:	mov    ebp,0xe5d940fd
  40f285:	cmp    DWORD PTR ds:0x4e58acbb,esi
  40f28b:	test   DWORD PTR [esi],eax
  40f28d:	cli    
  40f28e:	dec    ebx
  40f28f:	xchg   esp,eax
  40f290:	mov    ebp,0x90d4a187
  40f295:	jns    0x40f304
  40f297:	aad    0x74
  40f299:	test   DWORD PTR [eax+0x27a5c5a4],ebp
  40f29f:	pop    ds
  40f2a0:	and    BYTE PTR [ebx+0x6b],0x21
  40f2a4:	inc    edi
  40f2a5:	jno    0x40f2ca
  40f2a7:	dec    esi
  40f2a8:	mov    bl,0x12
  40f2aa:	or     BYTE PTR [edx],dl
  40f2ac:	xchg   esp,eax
  40f2ad:	loop   0x40f304
  40f2af:	retf   0xecde
  40f2b2:	int    0x4a
  40f2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b5:	cld    
  40f2b6:	adc    eax,0x8e74f726
  40f2bb:	mov    cl,0xc4
  40f2bd:	clc    
  40f2be:	jns    0x40f2fe
  40f2c0:	xchg   BYTE PTR [ebp+edx*2+0xcc4074f],ch
  40f2c7:	out    dx,eax
  40f2c8:	adc    edx,DWORD PTR [eax+0x55]
  40f2cb:	sbb    edx,eax
  40f2cd:	idiv   DWORD PTR ds:[edx-0x25]
  40f2d1:	aad    0xe8
  40f2d3:	sbb    BYTE PTR [ebp-0x14e0a027],dl
  40f2d9:	sub    ah,BYTE PTR [edx+ebx*8+0x29]
  40f2dd:	rol    DWORD PTR [eax+0x25],0xe2
  40f2e1:	imul   esp,DWORD PTR [edi+0x4f],0x3a
  40f2e5:	jae    0x40f271
  40f2e7:	pop    edx
  40f2e8:	cmp    DWORD PTR [edi-0x55],esi
  40f2eb:	pop    ss
  40f2ec:	sub    ah,ah
  40f2ee:	inc    ebx
  40f2ef:	xchg   ebp,eax
  40f2f0:	cmp    BYTE PTR [edi],dl
  40f2f2:	sahf   
  40f2f3:	cli    
  40f2f4:	jl     0x40f2c7
  40f2f6:	push   ebp
  40f2f7:	dec    esi
  40f2f8:	pop    ebx
  40f2f9:	lahf   
  40f2fa:	inc    esi
  40f2fb:	cwde   
  40f2fc:	scas   eax,DWORD PTR es:[edi]
  40f2fd:	push   esp
  40f2fe:	inc    esi
  40f2ff:	push   eax
  40f300:	outs   dx,DWORD PTR ds:[esi]
  40f301:	inc    esp
  40f302:	dec    ecx
  40f303:	push   ebp
  40f304:	mov    ebp,0x6bebd33b
  40f309:	jle    0x40f328
  40f30b:	add    ebp,DWORD PTR ss:0x633e88a6
  40f312:	sar    BYTE PTR [ebx],cl
  40f314:	xor    edi,DWORD PTR [ecx]
  40f316:	and    BYTE PTR [ebx-0x83761b5],cl
  40f31c:	push   ebx
  40f31d:	jbe    0x40f2cb
  40f31f:	jg     0x40f2cb
  40f321:	retf   0xfa9d
  40f324:	arpl   cx,bp
  40f326:	adc    ebx,DWORD PTR [edx+0x53]
  40f329:	(bad)  
  40f32a:	stc    
  40f32b:	loop   0x40f2ca
  40f32d:	xor    ch,al
  40f32f:	xchg   edi,eax
  40f330:	adc    ebp,DWORD PTR [edx+0x49]
  40f333:	xchg   ebx,eax
  40f334:	daa    
  40f335:	add    al,0x42
  40f337:	and    DWORD PTR [edi],esp
  40f339:	lods   al,BYTE PTR ds:[esi]
  40f33a:	lds    ebp,FWORD PTR ds:0xd820b8c5
  40f340:	fstp   QWORD PTR [ecx-0x5b2bfcd4]
  40f346:	into   
  40f347:	fwait
  40f348:	(bad)  
  40f349:	retf   0xebde
  40f34c:	sahf   
  40f34d:	(bad)  
  40f34e:	cmp    ebx,DWORD PTR [ecx+0x60932d59]
  40f354:	pop    ds
  40f355:	lods   eax,DWORD PTR ds:[esi]
  40f356:	cwde   
  40f357:	dec    edi
  40f358:	sbb    al,0xc0
  40f35a:	aas    
  40f35b:	add    DWORD PTR [ecx+edi*1-0x1e2a90fd],0x19
  40f363:	xor    bh,BYTE PTR [ecx-0x5e]
  40f366:	fwait
  40f367:	jo     0x40f39d
  40f369:	or     ecx,esp
  40f36b:	bound  ebp,QWORD PTR [edi+0x3698e181]
  40f371:	pushf  
  40f372:	nop
  40f373:	(bad)  [eax-0xb]
  40f376:	lea    esi,[esi-0xb5de556]
  40f37c:	dec    ecx
  40f37d:	jns    0x40f3b9
  40f37f:	neg    BYTE PTR [ebx-0x2d]
  40f382:	adc    ebx,DWORD PTR [ebp-0x71]
  40f385:	xor    BYTE PTR [esi+0x14],bl
  40f388:	jbe    0x40f355
  40f38a:	or     al,0x9a
  40f38c:	loopne 0x40f348
  40f38e:	rol    DWORD PTR [ebx+0x56],1
  40f391:	ja     0x40f372
  40f393:	xchg   ecx,eax
  40f394:	lods   eax,DWORD PTR ds:[esi]
  40f395:	sahf   
  40f396:	xchg   esi,eax
  40f397:	enter  0xc60e,0xcc
  40f39b:	dec    ebp
  40f39c:	push   ebp
  40f39d:	adc    edx,DWORD PTR [ecx+0x46]
  40f3a0:	xchg   esp,eax
  40f3a1:	loop   0x40f35a
  40f3a3:	mov    ds:0x9757907e,al
  40f3a8:	push   cs
  40f3a9:	add    al,0x42
  40f3ab:	std    
  40f3ac:	ins    DWORD PTR es:[edi],dx
  40f3ad:	in     al,dx
  40f3ae:	int    0x74
  40f3b0:	or     bh,BYTE PTR [eax]
  40f3b2:	(bad)
  40f3b6:	(bad)  
  40f3b7:	mov    dl,0xf9
  40f3b9:	scas   eax,DWORD PTR es:[edi]
  40f3ba:	dec    esp
  40f3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3bc:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3be:	out    0xd6,al
  40f3c0:	fistp  WORD PTR [edi+esi*4+0x94e6fb3]
  40f3c7:	imul   ebx,DWORD PTR [ecx-0xf42ddcc],0xffffffc3
  40f3ce:	sbb    BYTE PTR [ecx+0x3cf3b7e3],0x63
  40f3d5:	loop   0x40f3b2
  40f3d7:	clc    
  40f3d8:	inc    BYTE PTR [esi+ecx*4]
  40f3db:	push   0x43
  40f3dd:	ins    BYTE PTR es:[edi],dx
  40f3de:	(bad)  
  40f3df:	retf   0xa24e
  40f3e2:	test   al,0xd2
  40f3e4:	adc    al,0xdb
  40f3e6:	mov    BYTE PTR ds:0x961bc7f0,ch
  40f3ec:	fcomip st,st(1)
  40f3ee:	lds    edx,FWORD PTR [eax-0xc298941]
  40f3f4:	outs   dx,DWORD PTR ds:[esi]
  40f3f5:	daa    
  40f3f6:	test   eax,0x6e07c9cb
  40f3fb:	lahf   
  40f3fc:	xor    BYTE PTR [ecx+eiz*8-0x579350a6],0xb
  40f404:	pop    ebp
  40f405:	fst    st(4)
  40f407:	pop    ebx
  40f408:	push   ss
  40f409:	add    eax,0xffc38d09
  40f40e:	test   al,0xd2
  40f410:	loop   0x40f3bc
  40f412:	pop    edi
  40f413:	and    eax,0x7db71709
  40f418:	push   cs
  40f419:	dec    eax
  40f41a:	sbb    ebx,DWORD PTR [ecx+0x5c]
  40f41d:	cmp    eax,0x1880376b
  40f422:	pop    ebx
  40f423:	dec    esi
  40f424:	xchg   esi,eax
  40f425:	mov    esi,0xe3eac9de
  40f42a:	in     al,0x64
  40f42c:	call   0xa7b85d84
  40f431:	lods   eax,DWORD PTR ds:[esi]
  40f432:	scas   al,BYTE PTR es:[edi]
  40f433:	mov    esp,?
  40f435:	mov    ebx,0xb728578a
  40f43a:	adc    BYTE PTR [ebp+ebp*2+0x5963326f],bl
  40f441:	ds fs sahf 
  40f444:	dec    esp
  40f445:	loopne 0x40f47f
  40f447:	call   0xb8b5:0x26376455
  40f44e:	mov    al,0x44
  40f450:	fucom  st(4)
  40f452:	pop    edi
  40f453:	xchg   esi,eax
  40f454:	out    dx,eax
  40f455:	push   es
  40f456:	aaa    
  40f457:	in     eax,0x4c
  40f459:	push   0x7f
  40f45b:	sub    eax,0xde1d42a2
  40f460:	push   ebx
  40f461:	jmp    0x1866e04f
  40f466:	or     al,0x37
  40f468:	test   dl,ch
  40f46a:	daa    
  40f46b:	enter  0xbb61,0x43
  40f46f:	add    al,0x4c
  40f471:	stc    
  40f472:	inc    ebp
  40f473:	add    DWORD PTR [ebx],edx
  40f475:	mov    esp,0xe36d47b7
  40f47a:	pop    ecx
  40f47b:	xor    esi,esi
  40f47d:	(bad)  
  40f47f:	add    BYTE PTR gs:[edx],cl
  40f482:	das    
  40f483:	mov    esi,0x4feb17ef
  40f488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f489:	cmp    bl,dl
  40f48b:	push   es
  40f48c:	push   eax
  40f48d:	inc    esi
  40f48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f48f:	jmp    0x128b:0xc21aef0f
  40f496:	mov    esi,DWORD PTR ds:0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	retf   
  40f4c5:	retf   0x8e41
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x1b]
  40f4d1:	inc    ebx
  40f4d2:	mov    al,0xf3
  40f4d4:	push   ss
  40f4d5:	jl     0x40f4c7
  40f4d7:	test   eax,0x3e2c5a53
  40f4dc:	fdivr  DWORD PTR [edi-0x30]
  40f4df:	ja     0x40f4a8
  40f4e1:	fdiv   DWORD PTR [eax-0x32]
  40f4e4:	cmp    BYTE PTR [eax-0x69451a49],0xa6
  40f4eb:	cmp    DWORD PTR [eax],esp
  40f4ed:	jbe    0x40f49e
  40f4ef:	inc    ebx
  40f4f0:	test   ebx,0x60b47c83
  40f4f6:	aas    
  40f4f7:	pop    esi
  40f4f8:	sub    edi,ebx
  40f4fa:	push   ss
  40f4fb:	dec    ebx
  40f4fc:	push   edi
  40f4fd:	sub    BYTE PTR [eax+0xc],0x4f
  40f501:	lods   eax,DWORD PTR ds:[esi]
  40f502:	fwait
  40f503:	mov    edi,0xc6f9dc7f
  40f508:	adc    eax,0x1ab9d858
  40f50d:	mov    ah,0x57
  40f50f:	ret    0xe52d
  40f512:	cmp    bl,al
  40f514:	mov    al,0xcf
  40f516:	and    bh,BYTE PTR ds:0xc04d75f6
  40f51c:	test   al,0xe7
  40f51e:	mov    bh,0x42
  40f520:	loopne 0x40f511
  40f522:	lar    esp,ax
  40f525:	xchg   DWORD PTR [ebx+ebx*2],ecx
  40f528:	or     BYTE PTR [esi+0x3b],bh
  40f52b:	cmp    bh,BYTE PTR [edi+0x8]
  40f52e:	imul   ebx,ebp,0x34
  40f531:	inc    ecx
  40f532:	lahf   
  40f533:	or     DWORD PTR [edx+0x42],0x85b3b8a3
  40f53a:	inc    esi
  40f53b:	ins    DWORD PTR es:[edi],dx
  40f53c:	cmp    ecx,ebx
  40f53e:	pushf  
  40f53f:	cwde   
  40f540:	sub    BYTE PTR [ebx+0x78063e84],bh
  40f546:	(bad)  
  40f547:	lahf   
  40f548:	push   ebp
  40f549:	and    bh,BYTE PTR [eax]
  40f54b:	and    ebx,edi
  40f54d:	es (bad) 
  40f54f:	xchg   ebx,eax
  40f550:	mov    eax,0xee02f5ea
  40f555:	mov    ds:0x5b4e147d,al
  40f55a:	dec    esp
  40f55b:	jp     0x40f5d5
  40f55d:	adc    eax,0xcac2533a
  40f562:	pop    esp
  40f563:	enter  0xbb20,0x17
  40f567:	jno    0x40f4ec
  40f569:	add    al,0x8e
  40f56b:	out    0xa2,eax
  40f56d:	pop    ebx
  40f56e:	mov    eax,0xc61441e9
  40f573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f574:	mov    dh,0x9a
  40f576:	dec    ecx
  40f577:	fs xor al,0x55
  40f57a:	and    al,0x89
  40f57c:	out    dx,eax
  40f57d:	(bad)  
  40f57e:	in     eax,0xad
  40f580:	stc    
  40f581:	mov    ecx,0xdcfde1c7
  40f586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f587:	mov    esi,0xc2e6470b
  40f58c:	mov    ebx,DWORD PTR [edi-0x28]
  40f58f:	(bad)  
  40f590:	sbb    cl,bh
  40f592:	dec    edi
  40f593:	in     eax,dx
  40f594:	mov    edx,0xeb54824
  40f599:	cli    
  40f59a:	js     0x40f51f
  40f59c:	jge    0x40f57f
  40f59e:	inc    esi
  40f59f:	int3   
  40f5a0:	fdivr  DWORD PTR [ebx-0x13f67398]
  40f5a6:	pop    es
  40f5a7:	or     dl,BYTE PTR [ebx+0x4f]
  40f5aa:	xor    BYTE PTR [ebx+0x1a],dl
  40f5ad:	xchg   esi,eax
  40f5ae:	lods   eax,DWORD PTR ds:[esi]
  40f5af:	push   ebp
  40f5b0:	cwde   
  40f5b1:	fist   DWORD PTR ds:0x6e8f4e8c
  40f5b7:	iret   
  40f5b8:	xchg   ebx,eax
  40f5b9:	in     al,dx
  40f5ba:	mov    eax,ds:0xa381b9de
  40f5bf:	adc    DWORD PTR [ebp-0x67],edi
  40f5c2:	add    bl,BYTE PTR [eax+0x4ec2b171]
  40f5c8:	cld    
  40f5c9:	pusha  
  40f5ca:	sbb    eax,0x346047e9
  40f5cf:	ins    BYTE PTR es:[edi],dx
  40f5d0:	aas    
  40f5d1:	fsubr  QWORD PTR [edx+0x72]
  40f5d4:	jmp    0xfeca:0x94472c3d
  40f5db:	(bad)  
  40f5df:	push   esp
  40f5e0:	push   ecx
  40f5e1:	test   eax,0x5d65c39c
  40f5e6:	adc    al,0x9b
  40f5e8:	xchg   esp,eax
  40f5e9:	adc    dl,BYTE PTR [eax-0x33d4c311]
  40f5ef:	cld    
  40f5f0:	arpl   WORD PTR [ecx-0x30309a51],si
  40f5f6:	push   0xf16120
  40f5fb:	and    edx,DWORD PTR [edi-0x66141332]
  40f601:	inc    esi
  40f602:	xchg   edx,eax
  40f603:	out    dx,al
  40f604:	push   es
  40f605:	test   al,cl
  40f607:	out    dx,eax
  40f608:	jmp    0xb904:0xfb4d0464
  40f60f:	jle    0x40f5ea
  40f611:	dec    eax
  40f612:	cdq    
  40f613:	loope  0x40f5d9
  40f615:	outs   dx,BYTE PTR ds:[esi]
  40f616:	and    edi,DWORD PTR [esi+0x27bb77ca]
  40f61c:	pop    ebx
  40f61d:	jl     0x40f682
  40f61f:	dec    esi
  40f620:	push   eax
  40f621:	sbb    DWORD PTR [edx-0x76],esp
  40f624:	fisttp WORD PTR [eax]
  40f626:	or     al,0x60
  40f628:	clc    
  40f629:	sbb    al,0x84
  40f62b:	jecxz  0x40f5bb
  40f62d:	call   0x4a80ea8b
  40f632:	push   edx
  40f633:	push   edx
  40f634:	repz clc 
  40f636:	mov    dh,0xa2
  40f638:	loopne 0x40f600
  40f63a:	xlat   BYTE PTR ds:[ebx]
  40f63b:	inc    ebx
  40f63c:	jno    0x40f667
  40f63e:	out    dx,al
  40f63f:	adc    BYTE PTR [edx],dl
  40f641:	mov    ecx,0xb3d5b022
  40f646:	out    dx,eax
  40f647:	and    eax,0xe5096098
  40f64c:	xor    BYTE PTR [ecx],0x1f
  40f64f:	mov    edx,0xb9b46a33
  40f654:	outs   dx,DWORD PTR ds:[esi]
  40f655:	fdivr  st(1),st
  40f657:	dec    esi
  40f658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f659:	fcmovnb st,st(1)
  40f65b:	enter  0xac5d,0x35
  40f65f:	push   es
  40f660:	je     0x40f68f
  40f662:	jecxz  0x40f645
  40f664:	data16 jns 0x40f624
  40f667:	push   edi
  40f668:	sub    DWORD PTR [ecx],eax
  40f66a:	mov    esi,0x82be3477
  40f66f:	mov    esp,0xaae7aa0a
  40f674:	in     eax,0x67
  40f676:	push   0x292dc1cb
  40f67b:	fidivr DWORD PTR [bp+si-0x1e23]
  40f680:	dec    edi
  40f681:	dec    eax
  40f682:	fbld   TBYTE PTR ds:0xd0399649
  40f688:	outs   dx,DWORD PTR ds:[esi]
  40f689:	ins    BYTE PTR es:[edi],dx
  40f68a:	lods   al,BYTE PTR ds:[esi]
  40f68b:	push   cs
  40f68c:	sbb    al,0xfb
  40f68e:	ins    DWORD PTR es:[edi],dx
  40f68f:	sub    eax,0x4700887a
  40f694:	dec    ah
  40f696:	dec    ebx
  40f697:	jo     0x40f664
  40f699:	mov    esi,0xe1b67d71
  40f69e:	rcl    ebp,1
  40f6a0:	cmp    eax,0xa771bbc7
  40f6a5:	repnz neg edi
  40f6a8:	test   al,0x46
  40f6aa:	ficom  WORD PTR [ebx]
  40f6ac:	sbb    al,0xff
  40f6ae:	aad    0xe
  40f6b0:	dec    esi
  40f6b1:	mov    ch,0x4f
  40f6b3:	das    
  40f6b4:	ror    BYTE PTR [eax-0x65],cl
  40f6b7:	mov    ah,0x2d
  40f6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ba:	(bad)  
  40f6bb:	cld    
  40f6bc:	sbb    ecx,DWORD PTR [ecx]
  40f6be:	sub    esp,DWORD PTR [esi-0x37d9a009]
  40f6c4:	hlt    
  40f6c5:	pop    esp
  40f6c6:	call   FWORD PTR [ecx-0x43dd0ab6]
  40f6cc:	push   0xeef17bb9
  40f6d1:	sbb    edx,ecx
  40f6d3:	shl    dl,cl
  40f6d5:	mov    esi,0xfbc7f7a7
  40f6da:	mov    ds:0xce2f0e6d,eax
  40f6df:	push   ebx
  40f6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6e1:	jmp    0x1baf:0x8f8b33a2
  40f6e8:	dec    esp
  40f6e9:	dec    ebx
  40f6ea:	inc    edi
  40f6eb:	sub    al,ah
  40f6ed:	stos   BYTE PTR es:[edi],al
  40f6ee:	stos   BYTE PTR es:[edi],al
  40f6ef:	jg     0x40f701
  40f6f1:	stos   DWORD PTR es:[edi],eax
  40f6f2:	push   esp
  40f6f3:	or     esp,DWORD PTR [eax]
  40f6f5:	(bad)  
  40f6f6:	cmc    
  40f6f7:	mov    cs,esi
  40f6f9:	cld    
  40f6fa:	and    ecx,edi
  40f6fc:	xor    cl,bl
  40f6fe:	sti    
  40f6ff:	cmp    eax,0x4b150ee8
  40f704:	in     al,0x98
  40f706:	push   esp
  40f707:	pop    ecx
  40f708:	int3   
  40f709:	add    DWORD PTR [edx+0x41],0x6
  40f70d:	push   cs
  40f70e:	push   esp
  40f70f:	sbb    bh,ah
  40f711:	loopne 0x40f749
  40f713:	frstor [eax+0x51673fca]
  40f719:	adc    edi,DWORD PTR [ebp+esi*1-0x17e1ca88]
  40f720:	out    0xb1,al
  40f722:	jbe    0x40f6aa
  40f724:	mov    DWORD PTR [eax-0x21e1601f],edi
  40f72a:	adc    dh,cl
  40f72c:	fwait
  40f72d:	retf   0x2863
  40f730:	mov    edi,0x5626f56d
  40f735:	mov    gs,esi
  40f737:	ins    DWORD PTR es:[edi],dx
  40f738:	stos   BYTE PTR es:[edi],al
  40f739:	inc    edx
  40f73a:	jns    0x40f754
  40f73c:	inc    esp
  40f73d:	push   eax
  40f73e:	sbb    al,0xe9
  40f740:	push   ebx
  40f741:	push   cs
  40f742:	fsub   DWORD PTR [eax+ebp*2]
  40f745:	add    al,0xeb
  40f747:	popa   
  40f748:	xor    esi,DWORD PTR [ebp+0x14]
  40f74b:	fs in  al,dx
  40f74d:	inc    esp
  40f74e:	sbb    DWORD PTR [edx-0x57],0x61
  40f752:	xor    eax,0x89fffc8d
  40f757:	dec    edx
  40f758:	dec    edi
  40f759:	(bad)  
  40f75a:	mov    ebp,0x5692dbdc
  40f75f:	pop    ebp
  40f760:	cmp    BYTE PTR [eax],ah
  40f762:	xchg   ecx,eax
  40f763:	and    eax,0xfdc8d227
  40f768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f769:	test   eax,0x3e62ffb8
  40f76e:	addr16 xchg edi,eax
  40f770:	arpl   WORD PTR [edi+0x76d02669],di
  40f776:	dec    edi
  40f777:	or     eax,0x69364f6d
  40f77c:	push   0x10
  40f77e:	lahf   
  40f77f:	or     esi,ebp
  40f781:	das    
  40f782:	scas   al,BYTE PTR es:[edi]
  40f783:	pop    ss
  40f784:	add    eax,0x86e30e37
  40f789:	outs   dx,BYTE PTR ds:[esi]
  40f78a:	xor    eax,0xa908add2
  40f78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f790:	sti    
  40f791:	stos   DWORD PTR es:[edi],eax
  40f792:	scas   eax,DWORD PTR es:[edi]
  40f793:	loop   0x40f787
  40f795:	(bad)  
  40f796:	repz fild WORD PTR [edx]
  40f799:	fwait
  40f79a:	xchg   ebp,eax
  40f79b:	jecxz  0x40f7ef
  40f79d:	add    al,0x0
  40f79f:	mov    dl,0xbe
  40f7a1:	jmp    0x40f7f2
  40f7a3:	inc    edx
  40f7a4:	dec    eax
  40f7a5:	(bad)  
  40f7a6:	push   ds
  40f7a7:	dec    eax
  40f7a8:	xor    eax,0xd667f707
  40f7ad:	gs or  eax,0x76c4c013
  40f7b3:	or     eax,0x65680bf4
  40f7b8:	jmp    FWORD PTR [ebp+ebp*4-0x6ee15fe0]
  40f7bf:	in     eax,0xb1
  40f7c1:	cs std 
  40f7c3:	adc    al,0x4
  40f7c5:	sub    al,0x39
  40f7c7:	and    BYTE PTR [edi-0x40],bh
  40f7ca:	and    eax,0x4e091f92
  40f7cf:	test   DWORD PTR ds:0x353fc734,ecx
  40f7d5:	scas   eax,DWORD PTR es:[edi]
  40f7d6:	adc    ah,BYTE PTR [edi]
  40f7d8:	mov    esp,DWORD PTR [edx+0x23cd48d5]
  40f7de:	sub    bl,dh
  40f7e0:	adc    eax,0x78a84832
  40f7e5:	xlat   BYTE PTR ds:[ebx]
  40f7e6:	jmp    0x5843:0x24ef5d93
  40f7ed:	jnp    0x40f828
  40f7ef:	cmp    eax,0xdca9d467
  40f7f4:	pop    ecx
  40f7f5:	push   edi
  40f7f6:	xchg   bl,cl
  40f7f8:	into   
  40f7f9:	pop    esp
  40f7fa:	bound  esi,QWORD PTR [edx]
  40f7fc:	add    edx,ecx
  40f7fe:	add    DWORD PTR [ecx],edi
  40f800:	pop    es
  40f801:	test   BYTE PTR [edi-0x29],bh
  40f804:	std    
  40f805:	lahf   
  40f806:	imul   esp,ebp,0xb2de9990
  40f80c:	jb     0x40f84b
  40f80e:	shl    WORD PTR [edx+0x2d],1
  40f812:	hlt    
  40f813:	jne    0x40f83a
  40f815:	test   DWORD PTR [ebx+0xd5e19ad],0x811b277d
  40f81f:	sahf   
  40f820:	les    edx,FWORD PTR [edx]
  40f822:	dec    eax
  40f823:	fidiv  DWORD PTR [eax-0x2d65fbc8]
  40f829:	imul   ebx,DWORD PTR [ebp+0x6a],0xffffffe1
  40f82d:	push   eax
  40f82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f82f:	mov    ch,BYTE PTR [edx]
  40f831:	lahf   
  40f832:	push   esp
  40f833:	retf   
  40f834:	sbb    BYTE PTR [ecx-0x28],dl
  40f837:	test   eax,0x5991312
  40f83c:	inc    eax
  40f83d:	mov    ebp,0x131ca6a5
  40f842:	mov    cl,BYTE PTR [ebx-0x78201a01]
  40f848:	arpl   WORD PTR [ecx-0x52d229d0],bp
  40f84e:	cld    
  40f84f:	inc    edi
  40f850:	ss push ebx
  40f852:	jo     0x40f892
  40f854:	ins    BYTE PTR es:[edi],dx
  40f855:	jbe    0x40f8a3
  40f857:	pop    ss
  40f858:	push   es
  40f859:	sbb    edi,DWORD PTR [ebp-0x171fc272]
  40f85f:	popf   
  40f860:	add    BYTE PTR [eax+0x6401ccc7],bl
  40f866:	mov    ah,BYTE PTR [edx-0x55]
  40f869:	in     eax,0xd9
  40f86b:	fisubr DWORD PTR [ebx+edx*2]
  40f86e:	push   edx
  40f86f:	int3   
  40f870:	sub    al,ch
  40f872:	push   esp
  40f873:	push   edx
  40f874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f875:	test   eax,0x2033318b
  40f87a:	xchg   ecx,eax
  40f87b:	sbb    BYTE PTR [esi-0x4f169076],bh
  40f881:	adc    DWORD PTR [esi+0x5d],ebx
  40f884:	and    dh,bh
  40f886:	pop    ecx
  40f887:	xchg   ecx,eax
  40f888:	jl     0x40f8aa
  40f88a:	sub    esi,DWORD PTR [ebx+0x320667f4]
  40f890:	in     al,0xbb
  40f892:	int    0x29
  40f894:	not    BYTE PTR [esi-0x4c]
  40f897:	leave  
  40f898:	mov    cl,0xa3
  40f89a:	sti    
  40f89b:	cld    
  40f89c:	mov    bh,BYTE PTR [edi+0x3d]
  40f89f:	pop    edi
  40f8a0:	inc    edx
  40f8a1:	sub    al,0x2b
  40f8a3:	and    al,0x9c
  40f8a5:	clc    
  40f8a6:	xchg   ebp,eax
  40f8a7:	enter  0xb976,0x9a
  40f8ab:	pop    ebx
  40f8ac:	pop    ds
  40f8ad:	cs mov edx,0x309b51cb
  40f8b3:	daa    
  40f8b4:	dec    ebp
  40f8b5:	push   cs
  40f8b6:	popf   
  40f8b7:	jmp    0x40f8fa
  40f8b9:	xor    eax,0xb4179b5b
  40f8be:	fs out dx,al
  40f8c0:	mov    eax,0x572a06fe
  40f8c5:	int3   
  40f8c6:	jecxz  0x40f8b6
  40f8c8:	jne    0x40f85e
  40f8ca:	sbb    eax,0x8b812fe2
  40f8cf:	mov    bh,ch
  40f8d1:	mov    al,0x52
  40f8d3:	jne    0x40f91a
  40f8d5:	lahf   
  40f8d6:	out    dx,al
  40f8d7:	jecxz  0x40f8a4
  40f8d9:	xlat   BYTE PTR ds:[ebx]
  40f8da:	push   ebp
  40f8db:	test   BYTE PTR [edi+0x56],ch
  40f8de:	jns    0x40f8cb
  40f8e0:	test   DWORD PTR [ebp-0x5a],edx
  40f8e3:	push   es
  40f8e4:	enter  0x8838,0x8a
  40f8e8:	call   0x4a43:0x88d1cfd3
  40f8ef:	push   ebp
  40f8f0:	mov    esp,0x5210966e
  40f8f5:	fistp  DWORD PTR [ebp+edi*2-0x5c444292]
  40f8fc:	test   ecx,edx
  40f8fe:	push   ebp
  40f8ff:	out    dx,al
  40f900:	mov    ds,WORD PTR ds:0xdc7c47ba
  40f906:	mov    cl,BYTE PTR [eax+0x7f]
  40f909:	sub    BYTE PTR [ebx-0x75],dl
  40f90c:	push   0xffffff94
  40f90e:	cmp    DWORD PTR [eax-0x3c],edx
  40f911:	adc    esp,DWORD PTR [eax-0x60e96ece]
  40f917:	out    0xef,al
  40f919:	xlat   BYTE PTR ds:[ebx]
  40f91a:	sbb    eax,0xeaade7c1
  40f91f:	fwait
  40f920:	cs xor ah,al
  40f923:	and    DWORD PTR ds:0xb4f20e66,edx
  40f929:	xlat   BYTE PTR ds:[ebx]
  40f92a:	add    cl,bl
  40f92c:	mov    DWORD PTR [ecx+edi*2-0x33],edi
  40f930:	mov    ah,BYTE PTR ss:[edx-0x133bfe16]
  40f937:	fisub  DWORD PTR [ecx+0x3ad7dfdd]
  40f93d:	in     eax,dx
  40f93e:	jl     0x40f92e
  40f940:	xlat   BYTE PTR ds:[ebx]
  40f941:	xor    eax,DWORD PTR [edi+0x48208ea6]
  40f947:	inc    ecx
  40f948:	mov    ch,BYTE PTR [ecx-0x58e5d271]
  40f94e:	mov    DWORD PTR [esi+ecx*2],esi
  40f951:	or     al,0x2e
  40f953:	xor    DWORD PTR [edi],0x864c6185
  40f959:	sub    edi,DWORD PTR [esi+0x1f]
  40f95c:	jmp    0x4b17:0x360ee5dc
  40f963:	xchg   ebp,eax
  40f964:	sar    bh,1
  40f966:	adc    ecx,DWORD PTR [eax+0x2]
  40f969:	fwait
  40f96a:	xor    ebx,DWORD PTR [ebx+ebx*1]
  40f96d:	loop   0x40f954
  40f96f:	(bad)  
  40f971:	and    ebx,eax
  40f973:	xor    ah,bh
  40f975:	jb     0x40f941
  40f977:	imul   ebp,DWORD PTR [esi-0x3d3d3e8f],0x6e0d66db
  40f981:	(bad)  
  40f982:	(bad)
  40f985:	adc    al,0xc7
  40f987:	fimul  WORD PTR [eax-0x6faa3d16]
  40f98d:	xor    eax,0xa2115c6
  40f992:	adc    ah,BYTE PTR [eax+0xd]
  40f995:	pushf  
  40f996:	ret    0x4813
  40f999:	cmp    dh,dl
  40f99b:	or     al,BYTE PTR [ecx+eax*8-0x4722182]
  40f9a2:	stos   DWORD PTR es:[edi],eax
  40f9a3:	loopne 0x40fa22
  40f9a5:	mov    cl,0xf6
  40f9a7:	aam    0xf
  40f9a9:	lea    ebp,[ebx+0x63]
  40f9ac:	ds out dx,eax
  40f9ae:	push   ebx
  40f9af:	out    dx,eax
  40f9b0:	add    BYTE PTR [ebx+eiz*2],ch
  40f9b3:	in     al,0xef
  40f9b5:	iret   
  40f9b6:	mov    BYTE PTR [ebx+0x22a2c659],bl
  40f9bc:	mov    ch,BYTE PTR [ebx+0x11]
  40f9bf:	pop    ds
  40f9c0:	retf   
  40f9c1:	cs xor ch,cl
  40f9c4:	dec    esi
  40f9c5:	mov    ds:0xf7277460,eax
  40f9ca:	inc    edi
  40f9cb:	ret    0x8e22
  40f9ce:	sub    eax,0x8d4cc5dd
  40f9d3:	clc    
  40f9d4:	jg     0x40fa15
  40f9d6:	xor    eax,0xeac5622c
  40f9db:	sub    DWORD PTR [eax],edi
  40f9dd:	add    al,0xaa
  40f9df:	fdivr  st(5),st
  40f9e1:	sub    bh,ah
  40f9e3:	loop   0x40f9fe
  40f9e5:	mov    bl,0xd5
  40f9e7:	nop
  40f9e8:	xchg   edi,eax
  40f9e9:	(bad)  
  40f9ea:	neg    BYTE PTR [edi+0x5cea7e7b]
  40f9f0:	(bad)  
  40f9f2:	push   0x22c87412
  40f9f7:	fucomi st,st(0)
  40f9f9:	inc    ebx
  40f9fa:	lahf   
  40f9fb:	shl    BYTE PTR [edx-0x27],0xec
  40f9ff:	bound  edx,QWORD PTR [edx]
  40fa01:	jge    0x40fa7f
  40fa03:	(bad)  
  40fa05:	or     BYTE PTR [esi],bl
  40fa07:	sub    DWORD PTR [esi],esp
  40fa09:	clc    
  40fa0a:	or     al,0x1d
  40fa0c:	sub    esi,0xffffff87
  40fa0f:	nop
  40fa10:	imul   edi,DWORD PTR [ebx+0x2325ee02],0x37b0d2a5
  40fa1a:	std    
  40fa1b:	js     0x40f9c3
  40fa1d:	sbb    BYTE PTR ds:0xa7a834dc,al
  40fa23:	leave  
  40fa24:	mov    ebx,0x2905cc33
  40fa29:	pop    eax
  40fa2a:	pop    esp
  40fa2b:	sub    eax,0xc1c77027
  40fa30:	cmp    al,0x3e
  40fa32:	(bad)  
  40fa33:	mov    ch,0xfe
  40fa35:	add    cl,cl
  40fa37:	js     0x40fa2f
  40fa39:	fidiv  DWORD PTR [ecx-0x3048eb42]
  40fa3f:	dec    eax
  40fa40:	mov    dl,0x3f
  40fa42:	int3   
  40fa43:	retf   0x169c
  40fa46:	sbb    ebp,DWORD PTR [esi+0x6]
  40fa49:	xchg   edx,eax
  40fa4a:	sbb    eax,0x81c6f2f5
  40fa4f:	mov    al,0x94
  40fa51:	hlt    
  40fa52:	xor    ecx,DWORD PTR [edx+0x14816e14]
  40fa58:	aad    0x74
  40fa5a:	inc    edi
  40fa5b:	cmc    
  40fa5c:	dec    edi
  40fa5d:	sub    DWORD PTR [edi+0x2a81d002],edi
  40fa63:	jg     0x40fa2a
  40fa65:	imul   esi,edx,0xffffffd5
  40fa68:	xchg   ecx,eax
  40fa69:	daa    
  40fa6a:	and    BYTE PTR [esi-0x45],0xdb
  40fa6e:	jge    0x40f9f1
  40fa70:	xor    eax,0x23184248
  40fa75:	loop   0x40fa2f
  40fa77:	std    
  40fa78:	fstp   QWORD PTR ds:0x4e0743ac
  40fa7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa7f:	jnp    0x40fa7b
  40fa81:	pop    edi
  40fa82:	or     eax,0x5283eb1c
  40fa87:	mov    ecx,0xb4375efc
  40fa8c:	cmp    BYTE PTR [esp+ecx*2+0x71a0576e],dh
  40fa93:	idiv   bh
  40fa95:	ret    0xd41
  40fa98:	mov    bh,0x56
  40fa9a:	in     al,0xea
  40fa9c:	ins    BYTE PTR es:[edi],dx
  40fa9d:	ss jae 0x40fad8
  40faa0:	or     cl,bl
  40faa2:	mov    bl,0x3
  40faa4:	int3   
  40faa5:	jbe    0x40fadb
  40faa7:	and    al,0xa
  40faa9:	add    DWORD PTR ss:[edi-0x281162fe],ecx
  40fab0:	iret   
  40fab1:	cmp    DWORD PTR es:[esi],esi
  40fab4:	rol    BYTE PTR [eax],cl
  40fab6:	push   esi
  40fab7:	lahf   
  40fab8:	pop    ecx
  40fab9:	mov    cl,0xdd
  40fabb:	push   ebp
  40fabc:	sub    eax,DWORD PTR [ebp-0x8995bfe]
  40fac2:	das    
  40fac3:	aad    0xe0
  40fac5:	in     al,0x79
  40fac7:	ds push ss
  40fac9:	or     eax,DWORD PTR [ebx-0x2266ac2f]
  40facf:	in     eax,0x2e
  40fad1:	sti    
  40fad2:	and    ebx,ebx
  40fad4:	adc    DWORD PTR [esi+0x60618bc],0x5e69acd3
  40fade:	pop    eax
  40fadf:	mov    dh,0x9b
  40fae1:	fdivr  st,st(3)
  40fae3:	mov    dl,0x17
  40fae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae6:	cmp    al,0x2f
  40fae8:	push   edi
  40fae9:	ins    DWORD PTR es:[edi],dx
  40faea:	rcl    BYTE PTR [ebp-0x67],0x89
  40faee:	ret    
  40faef:	mov    esi,0x57df50a9
  40faf4:	test   eax,0xe4b252ff
  40faf9:	sbb    eax,0xfceeeaee
  40fafe:	mov    edx,0x3f966ab1
  40fb03:	(bad)  
  40fb04:	push   esp
  40fb05:	das    
  40fb06:	ins    DWORD PTR es:[edi],dx
  40fb07:	pop    edi
  40fb08:	imul   edx,DWORD PTR [ebp-0x6ea75687],0x78211f06
  40fb12:	adc    ch,BYTE PTR [ebx+0x316429ae]
  40fb18:	int    0x84
  40fb1a:	mov    ch,0x93
  40fb1c:	xchg   esi,eax
  40fb1d:	adc    al,0xb0
  40fb1f:	in     eax,dx
  40fb20:	ret    
  40fb21:	mov    BYTE PTR [eax],al
  40fb23:	push   edi
  40fb24:	lds    ebx,FWORD PTR [esi+0x102d9b66]
  40fb2a:	aam    0xa0
  40fb2c:	ja     0x40fba4
  40fb2e:	push   0xffffffb3
  40fb30:	dec    ebx
  40fb31:	sbb    DWORD PTR [edx+0x5e],0x9519567f
  40fb38:	jle    0x40fb63
  40fb3a:	cmp    BYTE PTR [ecx],dl
  40fb3c:	mov    edx,0xefa4351e
  40fb41:	sub    DWORD PTR [ebp+0x2281f58e],ebx
  40fb47:	inc    edx
  40fb48:	push   ebx
  40fb49:	icebp  
  40fb4a:	jecxz  0x40fb45
  40fb4c:	loope  0x40fb8f
  40fb4e:	xchg   esp,eax
  40fb4f:	fcom   st(5)
  40fb51:	out    dx,al
  40fb52:	sub    bh,BYTE PTR [ecx+esi*2+0xf31dcd8]
  40fb59:	adc    eax,0x882b46e9
  40fb5e:	pop    esp
  40fb5f:	jge    0x40fb77
  40fb61:	lea    ecx,[ebp-0x51]
  40fb64:	cmp    DWORD PTR [ecx+0x67],esi
  40fb67:	xor    BYTE PTR [edi],cl
  40fb69:	add    DWORD PTR [esi+0x7],ebp
  40fb6c:	in     eax,0xc1
  40fb6e:	idiv   ebp
  40fb70:	out    0x95,al
  40fb72:	arpl   dx,cx
  40fb74:	and    al,0x39
  40fb76:	call   0x25e57e5
  40fb7b:	mov    dl,0x52
  40fb7d:	push   ebx
  40fb7e:	inc    eax
  40fb7f:	(bad)  [edi]
  40fb81:	(bad)  [eax+0x67]
  40fb84:	or     edi,DWORD PTR [esi+0x4d0660ca]
  40fb8a:	hlt    
  40fb8b:	js     0x40fb68
  40fb8d:	xchg   ebx,eax
  40fb8e:	leave  
  40fb8f:	call   0xad2a:0x76d9d0ca
  40fb96:	retf   0xe423
  40fb99:	addr16 mov esi,ecx
  40fb9c:	mul    ecx
  40fb9e:	(bad)  
  40fb9f:	out    dx,al
  40fba0:	jmp    0x367e9971
  40fba5:	push   es
  40fba6:	inc    ebp
  40fba7:	adc    al,0xf5
  40fba9:	in     eax,0x53
  40fbab:	add    ah,BYTE PTR [ebx+ebp*4]
  40fbae:	das    
  40fbaf:	sub    edx,esp
  40fbb1:	imul   edi,DWORD PTR [edi+0x4787fc7c],0xce492981
  40fbbb:	pop    ebx
  40fbbc:	sbb    al,0x58
  40fbbe:	and    eax,0x3928a2cb
  40fbc3:	inc    ecx
  40fbc4:	and    al,0xbe
  40fbc6:	pop    esi
  40fbc7:	jnp    0x40fb55
  40fbc9:	test   eax,0xe988b4ba
  40fbce:	mov    ds:0xca07d119,eax
  40fbd3:	test   ecx,0xbe7f108d
  40fbd9:	add    bl,BYTE PTR [edx-0x5]
  40fbdc:	sub    al,0xff
  40fbde:	sbb    al,0x63
  40fbe0:	aaa    
  40fbe1:	sub    dh,bl
  40fbe3:	aad    0x33
  40fbe5:	fwait
  40fbe6:	mov    bl,0xd9
  40fbe8:	sbb    BYTE PTR [ebx+ebp*1-0x53],ah
  40fbec:	outs   dx,DWORD PTR ds:[esi]
  40fbed:	cmp    BYTE PTR [eax+edi*8+0x12],bh
  40fbf1:	bnd jmp 0xd491dc6c
  40fbf7:	cs jg  0x40fc3e
  40fbfa:	clc    
  40fbfb:	jbe    0x40fc0f
  40fbfd:	ds popf 
  40fbff:	and    BYTE PTR [esp+edi*2],cl
  40fc02:	xor    eax,0x6229c9e4
  40fc07:	in     al,0x85
  40fc09:	or     eax,0x4eae3f94
  40fc0e:	push   cs
  40fc0f:	ret    
  40fc10:	push   eax
  40fc11:	cmp    BYTE PTR [esi-0x29],bh
  40fc14:	outs   dx,DWORD PTR ds:[esi]
  40fc15:	gs and bh,0xf9
  40fc19:	mov    esp,0x2ce2b8ca
  40fc1e:	addr16 pop edi
  40fc20:	cld    
  40fc21:	sub    DWORD PTR [ebx-0x47f369da],0xffffffd2
  40fc28:	lods   eax,DWORD PTR ds:[esi]
  40fc29:	aas    
  40fc2a:	into   
  40fc2b:	ficom  DWORD PTR [edi+esi*1]
  40fc2e:	inc    eax
  40fc2f:	lods   al,BYTE PTR ds:[esi]
  40fc30:	cdq    
  40fc31:	test   eax,0x741c8d79
  40fc36:	scas   eax,DWORD PTR es:[edi]
  40fc37:	je     0x40fbc5
  40fc39:	and    eax,0xd0d47c5c
  40fc3e:	cmp    bl,BYTE PTR [esi+0xd]
  40fc41:	shr    BYTE PTR [edx+ecx*4-0xc],1
  40fc45:	mov    ds,WORD PTR [esi+edi*1-0x5fad3aca]
  40fc4c:	call   0x2935a5f4
  40fc51:	sbb    al,0xfe
  40fc53:	cld    
  40fc54:	sub    BYTE PTR [esi+0x54],0x2d
  40fc58:	pop    esi
  40fc59:	and    eax,0x40335c54
  40fc5e:	mov    al,ds:0x918cc92a
  40fc63:	icebp  
  40fc64:	inc    ebp
  40fc65:	mov    bh,0xf9
  40fc67:	ret    
  40fc68:	callw  0xd5f3
  40fc6c:	pop    edi
  40fc6d:	data16 and ch,ah
  40fc70:	xchg   DWORD PTR [edi],edi
  40fc72:	xlat   BYTE PTR ds:[ebx]
  40fc73:	jbe    0x40fc33
  40fc75:	cmp    al,0xaa
  40fc77:	fnstsw WORD PTR [ebp+0x1a]
  40fc7a:	fcomp  QWORD PTR [edx+0x1]
  40fc7d:	adc    dh,0x9c
  40fc80:	lods   eax,DWORD PTR ds:[esi]
  40fc81:	mov    ah,bl
  40fc83:	(bad)  
  40fc84:	cli    
  40fc85:	add    DWORD PTR [ecx+0x66],eax
  40fc88:	xor    eax,0xb8b2f019
  40fc8d:	mov    al,ds:0xfc330884
  40fc92:	popf   
  40fc93:	in     eax,dx
  40fc94:	pop    edx
  40fc95:	mov    ecx,0xe8e0c02c
  40fc9a:	mov    ecx,0x3101d2b0
  40fc9f:	dec    ebx
  40fca0:	neg    bl
  40fca2:	pop    esi
  40fca3:	pop    edx
  40fca4:	addr16 std 
  40fca6:	push   0x162f1639
  40fcab:	xchg   ebx,eax
  40fcac:	outs   dx,BYTE PTR ds:[esi]
  40fcad:	jb     0x40fc79
  40fcaf:	xchg   esp,eax
  40fcb0:	retf   0xaaa5
  40fcb3:	pushf  
  40fcb4:	aad    0x22
  40fcb6:	sbb    BYTE PTR [esi-0x32],cl
  40fcb9:	arpl   WORD PTR [esi+esi*4+0x3a],di
  40fcbd:	into   
  40fcbe:	mov    ch,0x3a
  40fcc0:	sub    ah,BYTE PTR [eax+0x3207d23a]
  40fcc6:	add    DWORD PTR ds:0xc4c60e4c,esi
  40fccc:	popa   
  40fccd:	popa   
  40fcce:	(bad)  
  40fcd0:	pop    ss
  40fcd1:	scas   al,BYTE PTR es:[edi]
  40fcd2:	cmp    BYTE PTR [edx+0x25ecd338],dh
  40fcd8:	push   ebp
  40fcd9:	mov    ds:0x81f8eee0,eax
  40fcde:	mov    dh,0xae
  40fce0:	aad    0x3c
  40fce2:	daa    
  40fce3:	inc    edx
  40fce4:	test   eax,0x47d2e43b
  40fce9:	es xor bh,ah
  40fcec:	xor    DWORD PTR [ebx+edx*1],ebp
  40fcef:	jg     0x40fcd5
  40fcf1:	mov    eax,0xc702261f
  40fcf6:	loopne 0x40fd0d
  40fcf8:	lahf   
  40fcf9:	pop    ebx
  40fcfa:	inc    ecx
  40fcfb:	stos   BYTE PTR es:[edi],al
  40fcfc:	js     0x40fd03
  40fcfe:	dec    esi
  40fcff:	shl    DWORD PTR [ebx+0x42],0xff
  40fd03:	jmp    0x4db2:0xdc39e8ae
  40fd0a:	cmp    BYTE PTR [ebx],ch
  40fd0c:	mov    bh,0x67
  40fd0e:	mov    edi,esp
  40fd10:	iret   
  40fd11:	push   edx
  40fd12:	inc    edx
  40fd13:	mov    BYTE PTR [edx-0x22],dh
  40fd16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40fd18:	mov    edi,DWORD PTR [ecx-0x6f]
  40fd1b:	(bad)  
  40fd1c:	lea    edi,[edi-0x3a5026a5]
  40fd22:	repnz fisubr DWORD PTR [ebp+0x49]
  40fd26:	pusha  
  40fd27:	jmp    0x40fd53
  40fd29:	jl     0x40fd83
  40fd2b:	jg     0x40fcc2
  40fd2d:	mov    WORD PTR [edx],?
  40fd2f:	push   ss
  40fd30:	add    DWORD PTR [ecx],ebp
  40fd32:	call   0xe866:0xc044c24
  40fd39:	add    BYTE PTR [eax+0x4b],bl
  40fd3c:	xchg   ecx,eax
  40fd3d:	sbb    eax,0xaf21fc94
  40fd42:	out    dx,eax
  40fd43:	mov    edi,DWORD PTR [esi+eiz*4+0x22]
  40fd47:	not    DWORD PTR [ebx-0x44]
  40fd4a:	sbb    al,0xcb
  40fd4c:	sti    
  40fd4d:	push   esp
  40fd4e:	or     al,0x31
  40fd50:	pop    ebp
  40fd51:	sub    ah,BYTE PTR [esi+0x20863ffe]
  40fd57:	pushf  
  40fd58:	xchg   esp,eax
  40fd59:	mov    bl,0x57
  40fd5b:	fstp   QWORD PTR [ebx]
  40fd5d:	add    edx,0xf84fbff2
  40fd63:	inc    ecx
  40fd64:	sbb    al,0x52
  40fd66:	dec    ebx
  40fd67:	xchg   DWORD PTR [eax+edi*2-0x4e],ebp
  40fd6b:	(bad)  
  40fd6c:	scas   eax,DWORD PTR es:[edi]
  40fd6d:	test   eax,0x23568914
  40fd72:	jo     0x40fd64
  40fd74:	loope  0x40fd4b
  40fd76:	or     ecx,edi
  40fd78:	sti    
  40fd79:	jp     0x40fdb0
  40fd7b:	popa   
  40fd7c:	outs   dx,DWORD PTR ds:[esi]
  40fd7d:	mov    dh,0x52
  40fd7f:	in     al,0xd4
  40fd81:	and    dh,BYTE PTR [edx+0x27267979]
  40fd87:	(bad)  
  40fd88:	retf   
  40fd89:	xor    eax,0xa719ff6
  40fd8e:	cmp    edi,0xffffffed
  40fd91:	jle    0x40fd8f
  40fd93:	push   ecx
  40fd94:	xchg   DWORD PTR ss:[esi+0x6c],ebx
  40fd98:	in     al,dx
  40fd99:	ja     0x40fd21
  40fd9b:	sar    BYTE PTR [edi+0x7a5a1f10],1
  40fda1:	std    
  40fda2:	xchg   esi,eax
  40fda3:	adc    BYTE PTR [eax+0xb5171c6],al
  40fda9:	xor    ebp,ebp
  40fdab:	ins    BYTE PTR es:[edi],dx
  40fdac:	xlat   BYTE PTR ds:[ebx]
  40fdad:	and    DWORD PTR [edx+0x7f],eax
  40fdb0:	or     ecx,eax
  40fdb2:	ret    
  40fdb3:	out    dx,al
  40fdb4:	(bad)
  40fdb8:	sub    eax,0x36e07c99
  40fdbd:	test   al,0x27
  40fdbf:	add    ebx,DWORD PTR [esi+0x461c4509]
  40fdc5:	test   DWORD PTR [eax],esp
  40fdc7:	fidiv  WORD PTR ds:0x1f7ff667
  40fdcd:	lods   eax,DWORD PTR ds:[esi]
  40fdce:	into   
  40fdcf:	jno    0x40fda8
  40fdd1:	push   cs
  40fdd2:	fnsave [esi-0x2ae0012b]
  40fdd8:	and    DWORD PTR [eax],esp
  40fdda:	test   DWORD PTR [ebp+0x556fdfd4],eax
  40fde0:	jmp    0x270c9200
  40fde5:	out    dx,eax
  40fde6:	scas   al,BYTE PTR es:[edi]
  40fde7:	inc    DWORD PTR [ebx-0x71]
  40fdea:	fcomi  st,st(0)
  40fdec:	nop
  40fded:	add    esp,DWORD PTR [edx]
  40fdef:	loop   0x40fde7
  40fdf1:	dec    ecx
  40fdf2:	call   DWORD PTR [ecx+0x35]
  40fdf5:	mov    esp,0xf45352f7
  40fdfa:	or     al,0x79
  40fdfc:	or     DWORD PTR [edx+0x1a],eax
  40fdff:	je     0x40fe43
  40fe01:	sar    DWORD PTR [ecx],1
  40fe03:	inc    ebp
  40fe04:	sahf   
  40fe05:	dec    esi
  40fe06:	or     cl,dh
  40fe08:	gs push 0x2a
  40fe0b:	add    eax,0xd2caaee4
  40fe10:	push   0xffffffb5
  40fe12:	fs dec esp
  40fe14:	and    DWORD PTR [edi],ebx
  40fe16:	gs out 0xbd,al
  40fe19:	jg     0x40fe1b
  40fe1b:	cmp    DWORD PTR [edi+eiz*2+0x1a],ebx
  40fe1f:	in     al,dx
  40fe20:	xor    eax,0xb21df187
  40fe25:	mov    al,0xb6
  40fe28:	lods   eax,DWORD PTR ds:[esi]
  40fe29:	xor    BYTE PTR [ebp+0x14906ad8],0x1b
  40fe30:	cld    
  40fe31:	sbb    bh,BYTE PTR [esi+0x65]
  40fe34:	out    dx,al
  40fe35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe36:	inc    ecx
  40fe37:	adc    ah,dh
  40fe39:	xor    dl,BYTE PTR [ebx]
  40fe3b:	gs inc esi
  40fe3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe3e:	cmp    ch,0xa9
  40fe41:	mov    esi,0x433f1c40
  40fe46:	inc    DWORD PTR [edi]
  40fe48:	fidivr WORD PTR [ebp+0x59]
  40fe4b:	dec    edx
  40fe4c:	or     esp,ebx
  40fe4e:	mov    DWORD PTR [edx],ebp
  40fe50:	jns    0x40fde0
  40fe52:	jns    0x40fe19
  40fe54:	xchg   edi,eax
  40fe55:	adc    DWORD PTR [ebx-0x1c],esp
  40fe58:	inc    eax
  40fe59:	inc    esp
  40fe5a:	arpl   WORD PTR [eax+eax*2+0x3c],bx
  40fe5e:	jb     0x40fec0
  40fe60:	(bad)  
  40fe61:	cmp    edx,DWORD PTR [ebp-0x2d]
  40fe64:	out    dx,al
  40fe65:	rol    BYTE PTR [edi+0xb],1
  40fe68:	retf   
  40fe69:	push   esp
  40fe6a:	push   eax
  40fe6b:	inc    esi
  40fe6c:	add    al,0xc7
  40fe6e:	hlt    
  40fe6f:	imul   edi,ebp,0x9
  40fe72:	test   BYTE PTR [ebp+0x20de770c],al
  40fe78:	add    bl,ah
  40fe7a:	pop    esi
  40fe7b:	bound  eax,QWORD PTR [ebp-0x77a11862]
  40fe81:	add    ch,BYTE PTR [ebp-0x5e463e7]
  40fe87:	repnz sar BYTE PTR [esi+0x6],cl
  40fe8b:	repz mov dl,0x3b
  40fe8e:	mov    esi,0x1a5f5c0f
  40fe93:	imul   ebx,DWORD PTR [ebx-0x75],0x20a2efcb
  40fe9a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40fe9c:	jge    0x40fe4f
  40fe9e:	sub    edi,DWORD PTR [esi-0x41]
  40fea1:	call   0x835:0xdf83746d
  40fea8:	test   BYTE PTR [esi+0x14],0xbc
  40feac:	mov    ?,WORD PTR [ebx+eax*8]
  40feaf:	js     0x40fedd
  40feb1:	sbb    al,0xe8
  40feb3:	dec    ebp
  40feb4:	or     DWORD PTR [eax-0x50],esi
  40feb7:	push   esp
  40feb8:	ja     0x40fe9f
  40feba:	fs into 
  40febc:	aam    0x82
  40febe:	call   0x3160:0xd7046d8
  40fec5:	fs ret 
  40fec7:	rol    eax,1
  40fec9:	es pop esp
  40fecb:	mov    DWORD PTR [ebp-0x47],edi
  40fece:	or     DWORD PTR [eax+ebx*4-0x6a4d9c8],edi
  40fed5:	sub    edi,DWORD PTR ds:[ebx]
  40fed8:	mov    edx,0x1f67b39e
  40fedd:	and    DWORD PTR [ecx],edx
  40fedf:	ror    DWORD PTR [eax],0x90
  40fee2:	ds pop esi
  40fee4:	(bad)  
  40fee5:	pop    eax
  40fee6:	dec    esp
  40fee7:	pop    ss
  40fee8:	xchg   edi,eax
  40fee9:	add    BYTE PTR [eax+eax*2],0x51
  40feed:	(bad)
  40fef1:	jecxz  0x40ff5a
  40fef3:	ja     0x40ff2e
  40fef5:	cld    
  40fef6:	mov    ebp,0x24a42168
  40fefb:	shl    DWORD PTR [edx-0x4f0f5560],1
  40ff01:	mov    dl,0x26
  40ff03:	iret   
  40ff04:	push   edi
  40ff05:	push   0xfbfaac0a
  40ff0a:	add    eax,esi
  40ff0c:	or     eax,0x5faf290f
  40ff11:	inc    edi
  40ff12:	sub    BYTE PTR [ebx-0xa0ab510],0x42
  40ff19:	cmp    eax,0x5caf66ef
  40ff1e:	jecxz  0x40ff1e
  40ff20:	pop    ss
  40ff21:	retf   
  40ff22:	mov    esi,0x517ee539
  40ff27:	retf   0x8b4d
  40ff2a:	push   edx
  40ff2b:	out    dx,eax
  40ff2c:	cmp    eax,0x2dfcdd9e
  40ff31:	mov    cl,0xfc
  40ff33:	test   DWORD PTR [edx+0x2d8d584e],esp
  40ff39:	jecxz  0x40ff61
  40ff3b:	imul   DWORD PTR [eax+0x79]
  40ff3e:	xor    DWORD PTR [edx+0x4d],eax
  40ff41:	arpl   WORD PTR [eax+0x3a0181e6],si
  40ff47:	lods   eax,DWORD PTR ds:[esi]
  40ff48:	retf   0x196f
  40ff4b:	or     ebp,DWORD PTR [esi]
  40ff4d:	and    bh,BYTE PTR [edx-0x3d92dea2]
  40ff53:	pop    edi
  40ff54:	(bad)  
  40ff55:	jae    0x40fed9
  40ff57:	repz push esp
  40ff5a:	sbb    BYTE PTR [esi+edx*4+0x58447ede],cl
  40ff61:	div    ebp
  40ff63:	fwait
  40ff64:	mov    BYTE PTR ds:[ebp+edi*1+0x6490f16d],ah
  40ff6c:	or     DWORD PTR [ebp+0x6],ebp
  40ff6f:	dec    ebp
  40ff70:	popf   
  40ff71:	xchg   esp,eax
  40ff72:	adc    al,0x44
  40ff74:	sbb    eax,ebx
  40ff76:	xchg   ebp,eax
  40ff77:	adc    dl,dh
  40ff79:	mov    eax,0xc359840e
  40ff7e:	or     eax,0x7dbe9ed6
  40ff83:	xor    al,0x43
  40ff85:	pusha  
  40ff86:	lods   eax,DWORD PTR ds:[esi]
  40ff87:	rcl    bl,1
  40ff89:	repz push ecx
  40ff8b:	aad    0x70
  40ff8d:	jmp    0x40ff47
  40ff8f:	cmc    
  40ff90:	call   0x1f788fb9
  40ff95:	dec    esp
  40ff96:	cmp    BYTE PTR [edx],cl
  40ff98:	imul   esi,DWORD PTR [ebx+0x51],0x41
  40ff9c:	inc    ebx
  40ff9d:	pop    esp
  40ff9e:	call   0xd56c:0xf376e21b
  40ffa5:	fidiv  WORD PTR [esi-0x5c]
  40ffa8:	sub    esp,DWORD PTR ds:0xe36fa6d9
  40ffae:	sti    
  40ffaf:	test   eax,0x3b8ab698
  40ffb4:	mov    cl,0x4
  40ffb6:	lahf   
  40ffb7:	xor    cl,BYTE PTR [eax+0x3]
  40ffba:	mov    bl,BYTE PTR [ecx+edx*4+0x4]
  40ffbe:	mov    bl,0x71
  40ffc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffc1:	jle    0x40ff96
  40ffc3:	pop    esp
  40ffc4:	sbb    bl,BYTE PTR [ebx]
  40ffc6:	test   eax,0xb071b43b
  40ffcb:	mov    ch,0x3a
  40ffcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffce:	push   esp
  40ffcf:	(bad)  [edx+0x25]
  40ffd2:	mov    dh,0xc5
  40ffd4:	inc    eax
  40ffd5:	lods   al,BYTE PTR ds:[esi]
  40ffd6:	test   eax,0x8864ed45
  40ffdb:	mov    ch,0x80
  40ffdd:	lea    esi,[edi+0x4f64e43b]
  40ffe3:	jp     0x40ff7e
  40ffe5:	pusha  
  40ffe6:	sahf   
  40ffe7:	pop    esi
  40ffe8:	test   BYTE PTR [ecx-0x22254cc8],ah
  40ffee:	cmp    BYTE PTR [esi],dh
  40fff0:	xlat   BYTE PTR ds:[ebx]
  40fff1:	aaa    
  40fff2:	mov    ecx,0xcfe61b31
  40fff7:	xor    edi,DWORD PTR [ebx]
  40fff9:	imul   eax,DWORD PTR [ecx-0x1a5aeb3c],0xffffffdb
  410000:	or     BYTE PTR [ecx-0x2a],ch
  410003:	fcomp  DWORD PTR [edx-0x3c763835]
  410009:	(bad)  
  41000a:	pop    ss
  41000b:	stos   DWORD PTR es:[edi],eax
  41000c:	stos   DWORD PTR es:[edi],eax
  41000d:	sbb    ebx,esp
  41000f:	popa   
  410010:	(bad)  
  410011:	test   DWORD PTR [ebx],0xaf10d4e9
  410017:	pop    ebx
  410018:	pop    ecx
  410019:	(bad)  
  41001a:	out    0xfc,al
  41001c:	mov    ds:0x387bcff3,al
  410021:	push   0x3acb5206
  410026:	mov    edx,0xd73433bf
  41002b:	pop    ecx
  41002c:	loopne 0x410050
  41002e:	push   ebp
  41002f:	fadd   DWORD PTR [ecx-0x40]
  410032:	cmp    DWORD PTR [eax+edx*2+0x5e],esi
  410036:	(bad)  
  410037:	adc    ecx,DWORD PTR [edi]
  410039:	and    DWORD PTR [esi],0x1832ab3a
  41003f:	jmp    0x410081
  410041:	or     al,0x20
  410043:	neg    bl
  410045:	mov    bh,0x7d
  410047:	(bad)  
  410048:	xlat   BYTE PTR ds:[ebx]
  410049:	mov    dl,0xe8
  41004b:	aas    
  41004c:	sub    al,al
  41004e:	inc    esp
  41004f:	int    0x43
  410051:	sbb    DWORD PTR [edx+0x539c6cc6],eax
  410057:	sbb    BYTE PTR [ebp-0x62],cl
  41005a:	sub    bl,BYTE PTR [edx+esi*4-0x58]
  41005e:	clc    
  41005f:	xlat   BYTE PTR ds:[ebx]
  410060:	nop
  410061:	jno    0x410071
  410063:	lock xchg ebp,eax
  410065:	xor    ecx,edx
  410067:	jae    0x410035
  410069:	adc    BYTE PTR [ebx],cl
  41006b:	jnp    0x4100a3
  41006d:	dec    ecx
  41006e:	fwait
  41006f:	mov    cl,0xa6
  410071:	ror    DWORD PTR [eax],1
  410073:	xor    DWORD PTR [esi+0x5b],esi
  410076:	popa   
  410077:	pop    ebx
  410078:	neg    al
  41007a:	or     esi,DWORD PTR [eax-0x53]
  41007d:	out    0xec,al
  41007f:	ret    
  410080:	shl    DWORD PTR ds:0xc4eb1577,0x4f
  410087:	imul   esi,DWORD PTR [ebp-0x1437de1d],0xffffffe7
  41008e:	mov    ebp,0xe12da805
  410093:	sub    ch,0x5e
  410096:	stos   DWORD PTR es:[edi],eax
  410097:	call   0x1c53f109
  41009c:	test   ah,0x0
  41009f:	jmp    0x5c9231ae
  4100a4:	lahf   
  4100a5:	sub    edi,DWORD PTR [ebx+0x22a78822]
  4100ab:	rol    DWORD PTR [edi+esi*4],cl
  4100ae:	aam    0x42
  4100b0:	frstor [esp+eiz*8+0x7e32fe83]
  4100b7:	xor    DWORD PTR [eax+0x4905f6bb],ecx
  4100bd:	push   0x47
  4100bf:	cmp    al,0x49
  4100c1:	push   ss
  4100c2:	push   ecx
  4100c3:	dec    esi
  4100c4:	xchg   ecx,eax
  4100c5:	jle    0x4100c4
  4100c7:	sub    DWORD PTR [esi],edx
  4100c9:	mov    esp,0x14229af0
  4100ce:	jae    0x41006a
  4100d0:	loopne 0x41008e
  4100d2:	shr    DWORD PTR [esi],0xc3
  4100d5:	ins    BYTE PTR es:[edi],dx
  4100d6:	aam    0x83
  4100d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d9:	dec    ecx
  4100da:	dec    esi
  4100db:	(bad)  
  4100dd:	and    edx,ebp
  4100df:	test   BYTE PTR [esi+0x37306d65],0x99
  4100e6:	cmp    bh,bl
  4100e8:	push   ebx
  4100e9:	dec    bp
  4100eb:	lds    ebx,FWORD PTR [ebp+0x68]
  4100ee:	sub    esp,esi
  4100f0:	in     al,0xdb
  4100f2:	push   0x1c9d6c77
  4100f7:	fist   DWORD PTR [edx+0x30]
  4100fa:	rcr    DWORD PTR [esi+edi*4],1
  4100fd:	fnstcw WORD PTR ds:0x43a90675
  410103:	stc    
  410104:	mov    edx,0x16a47919
  410109:	add    al,0x21
  41010b:	pop    ebx
  41010c:	xor    DWORD PTR [ebx+0x31],ebx
  41010f:	scas   al,BYTE PTR es:[edi]
  410110:	call   0x1db7:0x7bf02812
  410117:	sub    al,0xc1
  410119:	push   edx
  41011a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011b:	mov    BYTE PTR [esi+0x18],al
  41011e:	int3   
  41011f:	mov    edx,0xe2299655
  410124:	mov    esi,0xe7686731
  410129:	adc    DWORD PTR [eax],ecx
  41012b:	jo     0x410199
  41012d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012f:	sub    dl,BYTE PTR [edx+eiz*8]
  410132:	pop    esi
  410133:	and    DWORD PTR [esi+ebx*4-0x5cd82ed3],ecx
  41013a:	mov    BYTE PTR [edi-0x22],ah
  41013d:	je     0x410161
  41013f:	sbb    bh,BYTE PTR [ebx+0xe9b6fd2]
  410145:	mov    esi,DWORD PTR [edx]
  410147:	dec    edx
  410148:	jbe    0x41014b
  41014a:	push   esp
  41014b:	or     eax,0x345f0a2f
  410150:	aas    
  410151:	arpl   WORD PTR [ebp+0x2f],si
  410154:	jle    0x410196
  410156:	mov    al,ds:0x5d4417b8
  41015b:	hlt    
  41015c:	fwait
  41015d:	outs   dx,BYTE PTR ds:[esi]
  41015e:	mov    ch,0xf0
  410160:	inc    edx
  410161:	inc    esi
  410162:	repz xchg edx,eax
  410164:	sti    
  410165:	and    DWORD PTR [edx-0x478cae9b],esi
  41016b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41016c:	scas   al,BYTE PTR es:[edi]
  41016d:	mov    esp,0x94466f0
  410172:	cmp    ebx,DWORD PTR [edi+esi*2]
  410175:	scas   al,BYTE PTR es:[edi]
  410176:	jno    0x410175
  410178:	cmc    
  410179:	push   ecx
  41017a:	into   
  41017b:	les    esp,FWORD PTR [esi+0x67]
  41017e:	aas    
  41017f:	aad    0x57
  410181:	push   eax
  410182:	adc    eax,0x919a960c
  410187:	test   DWORD PTR [esi],edx
  410189:	fucomi st,st(6)
  41018b:	push   esp
  41018c:	in     al,dx
  41018d:	sub    ecx,DWORD PTR [eax+0x5d]
  410190:	and    DWORD PTR [ebx+0x2d],edi
  410193:	xor    al,ah
  410195:	stos   BYTE PTR es:[edi],al
  410196:	add    DWORD PTR [ecx-0x4a],esi
  410199:	stc    
  41019a:	(bad)  
  41019b:	fistp  WORD PTR [esi]
  41019d:	cld    
  41019e:	ror    ebx,1
  4101a0:	enter  0x7126,0xcd
  4101a4:	rcr    DWORD PTR [ebx-0x52],cl
  4101a7:	int3   
  4101a8:	xchg   edx,edx
  4101aa:	mov    eax,0x4b1342f2
  4101af:	and    al,0x0
  4101b1:	mov    dl,0xa1
  4101b3:	add    BYTE PTR [ecx+0x78d0468b],bl
  4101b9:	mov    dl,0x57
  4101bb:	mov    WORD PTR [eax-0xf0ea5c2],ds
  4101c1:	xchg   DWORD PTR [esi-0x14],ecx
  4101c4:	out    0x6e,eax
  4101c6:	test   BYTE PTR [ebx-0x50],ch
  4101c9:	test   al,0xc0
  4101cb:	or     cl,BYTE PTR [eax+0x15]
  4101ce:	inc    ebp
  4101cf:	test   eax,0x1765df20
  4101d4:	mov    edi,0x235de1cd
  4101d9:	xchg   ebx,eax
  4101da:	out    0xa,al
  4101dc:	loope  0x410248
  4101de:	cs jp  0x41018e
  4101e1:	pop    edi
  4101e2:	scas   eax,DWORD PTR es:[edi]
  4101e3:	push   esi
  4101e4:	(bad)  
  4101e6:	test   BYTE PTR [eax*2+0x2f4d26fb],bl
  4101ed:	dec    ebp
  4101ee:	dec    esi
  4101ef:	ja     0x410211
  4101f1:	sahf   
  4101f2:	repz jmp 0x5b787e10
  4101f8:	or     ah,BYTE PTR [edx+0x740b216a]
  4101fe:	scas   eax,DWORD PTR es:[edi]
  4101ff:	mov    DWORD PTR [eax+0x2116fc15],esp
  410205:	cmp    al,0x27
  410207:	jno    0x410220
  410209:	dec    esp
  41020a:	jle    0x41021f
  41020c:	(bad)  
  41020d:	jnp    0x4101f3
  41020f:	dec    ebp
  410210:	and    DWORD PTR [esi],esi
  410212:	push   eax
  410213:	mov    ch,BYTE PTR [ecx-0x66]
  410216:	mov    bh,0xc8
  410218:	fwait
  410219:	sub    ebp,DWORD PTR [ecx+esi*1-0x6b]
  41021d:	dec    esp
  41021e:	stos   BYTE PTR es:[edi],al
  41021f:	pop    eax
  410220:	js     0x41021e
  410222:	push   ds
  410223:	mul    DWORD PTR [ecx]
  410225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410226:	mov    ds:0xe52e1809,eax
  41022b:	int3   
  41022c:	inc    edx
  41022d:	push   ds
  41022e:	xor    DWORD PTR [edi-0x29],0x11
  410232:	and    ebp,DWORD PTR [ebx*1+0x41adaa86]
  410239:	push   cs
  41023a:	mov    edx,DWORD PTR [ebx]
  41023c:	inc    edi
  41023d:	fisttp WORD PTR [edx+edi*2-0x471d8a07]
  410244:	xor    edx,DWORD PTR [edi-0x57]
  410247:	aam    0x85
  410249:	adc    edx,DWORD PTR [ebp+0xd]
  41024c:	xchg   ebp,eax
  41024d:	int    0x6
  41024f:	jmp    0x4102c2
  410251:	std    
  410252:	and    al,0xe8
  410254:	rol    DWORD PTR [ebx-0x518dea],1
  41025a:	mov    BYTE PTR [edx],cl
  41025c:	jmp    0xd483:0xc8fe09f0
  410263:	mov    cl,0x83
  410265:	xchg   BYTE PTR [eax+0x30],ah
  410268:	shr    BYTE PTR [ebp+0x5c2126ca],0x4c
  41026f:	pop    eax
  410270:	fisubr DWORD PTR [ebx+0x3745a59e]
  410276:	mov    dl,0xbd
  410278:	mov    edx,0x635da4fa
  41027d:	add    esi,DWORD PTR [edi]
  41027f:	ds sub ebx,ebx
  410282:	fild   DWORD PTR [edi-0x5973cf60]
  410288:	dec    edx
  410289:	dec    ebp
  41028a:	(bad)  [edx-0x2297b034]
  410290:	pop    ebp
  410291:	js     0x410216
  410293:	jg     0x4102ea
  410295:	cmp    DWORD PTR [edx],0xffffffcf
  410298:	jge    0x410304
  41029a:	xchg   edi,eax
  41029b:	retf   0xb2bf
  41029e:	xchg   ebx,eax
  41029f:	sub    BYTE PTR [esi-0x31],0x8b
  4102a3:	mov    ds,ecx
  4102a5:	or     al,0x1c
  4102a7:	cwde   
  4102a8:	mov    DWORD PTR [esi],eax
  4102aa:	fwait
  4102ab:	xchg   ebx,eax
  4102ac:	(bad)  
  4102ae:	and    eax,0x3b6acb8b
  4102b3:	(bad)
  4102b7:	ja     0x4102b1
  4102b9:	sub    BYTE PTR [ebp-0x59a097eb],0x85
  4102c0:	(bad)  
  4102c1:	dec    ecx
  4102c2:	fisttp QWORD PTR [esi+edx*4]
  4102c5:	or     al,0xfa
  4102c7:	mov    eax,ds:0xb892da85
  4102cc:	int3   
  4102cd:	jmp    0xa563:0x9a175eef
  4102d4:	fwait
  4102d5:	inc    ebx
  4102d6:	mov    bh,0xa9
  4102d8:	fist   DWORD PTR [ebp-0x78ff27a3]
  4102de:	and    eax,0x6c621575
  4102e3:	sub    eax,0x8fc00191
  4102e8:	mov    al,0xd2
  4102ea:	inc    edx
  4102eb:	xor    BYTE PTR [esi],dh
  4102ed:	push   ecx
  4102ee:	popf   
  4102ef:	jno    0x4102e9
  4102f1:	call   FWORD PTR [ebx+0x67]
  4102f4:	or     eax,0x82177f37
  4102f9:	aas    
  4102fa:	and    al,BYTE PTR [ecx-0xa7ac1c2]
  410300:	push   ds
  410301:	mov    esi,eax
  410303:	sbb    ebp,DWORD PTR [edi]
  410305:	cwde   
  410306:	outs   dx,BYTE PTR ds:[esi]
  410307:	or     dh,cl
  410309:	sti    
  41030a:	sbb    BYTE PTR [esp+ebx*1-0x4db10d7],al
  410311:	nop
  410312:	xchg   esi,eax
  410313:	retf   0x2bd6
  410316:	mov    ecx,0x5e3c518c
  41031b:	jae    0x410386
  41031d:	or     ch,BYTE PTR [ebp-0x2b]
  410320:	repz or eax,0xe9451d15
  410326:	mov    ds:0x1d224d5c,eax
  41032b:	ja     0x410384
  41032d:	cvtps2pi mm1,xmm4
  410330:	jno    0x41031d
  410332:	jl     0x4102e8
  410334:	fidivr DWORD PTR [eax-0x7d]
  410337:	cmp    eax,0xa27badc3
  41033c:	ror    DWORD PTR [ebp-0x6],cl
  41033f:	loopne 0x4103b5
  410341:	push   ebx
  410342:	cmp    eax,0x10ea4ce1
  410347:	fdivr  QWORD PTR [ebx+eax*4]
  41034a:	add    al,0x43
  41034c:	inc    ecx
  41034d:	push   esi
  41034e:	mov    edi,0xad9a2859
  410353:	hlt    
  410354:	xor    DWORD PTR [ebp+0x60],eax
  410357:	add    bl,dh
  410359:	pushf  
  41035a:	loopne 0x41033d
  41035c:	dec    edx
  41035d:	push   ds
  41035e:	mov    ebp,0x4c78fa6
  410363:	inc    edi
  410364:	or     DWORD PTR [edx+0x5e],ebx
  410367:	cmc    
  410368:	pusha  
  410369:	and    BYTE PTR ds:0xc9e75d6d,dh
  41036f:	leave  
  410370:	dec    ebp
  410371:	mov    esp,DWORD PTR [eax+0x54663fe4]
  410377:	sti    
  410378:	aad    0x20
  41037a:	(bad)  
  41037b:	mov    ecx,DWORD PTR [eax-0x1d14f049]
  410381:	jne    0x410346
  410383:	xchg   ebp,eax
  410384:	add    ebx,DWORD PTR [eax+0x710e77e2]
  41038a:	sbb    eax,0x4609d2b1
  41038f:	fmul   QWORD PTR [ecx+ecx*8]
  410392:	inc    ebp
  410393:	xchg   edi,eax
  410394:	sub    esi,DWORD PTR [ebx+esi*2+0x2122262d]
  41039b:	fst    st(0)
  41039d:	or     edx,DWORD PTR [ebx+0x7aa10486]
  4103a3:	psubsb mm0,QWORD PTR [edi-0x5c0e422f]
  4103aa:	push   ss
  4103ab:	loopne 0x41035e
  4103ad:	lods   eax,DWORD PTR ds:[esi]
  4103ae:	pop    ebx
  4103af:	push   edx
  4103b1:	and    DWORD PTR [ebp+0xa],ecx
  4103b4:	xor    al,0xf1
  4103b6:	jg     0x4103a1
  4103b8:	and    ebx,DWORD PTR [ebp-0x74]
  4103bb:	out    0x22,al
  4103bd:	fcomp  QWORD PTR [ecx-0x4a]
  4103c0:	sbb    DWORD PTR [edx+0x28],ebp
  4103c3:	imul   edi,DWORD PTR ds:0xd22c332f,0xdcb7a1f6
  4103cd:	jmp    0xdd17:0x106986d4
  4103d4:	inc    ebp
  4103d5:	(bad)  
  4103d6:	les    eax,FWORD PTR [ebx]
  4103d8:	retf   
  4103d9:	mov    al,ds:0x9bacf752
  4103de:	dec    esp
  4103df:	dec    ebp
  4103e0:	jb     0x410444
  4103e2:	cmp    DWORD PTR [eax],0x32
  4103e5:	add    BYTE PTR [edx],dl
  4103e7:	xor    al,0x4c
  4103e9:	pop    ds
  4103ea:	and    ebp,DWORD PTR [ebx+0x7]
  4103ed:	pop    ds
  4103ee:	imul   edi,edi,0xffffffb3
  4103f1:	xchg   esi,eax
  4103f2:	xchg   DWORD PTR [ecx+0x63],edx
  4103f5:	adc    cl,BYTE PTR [edx-0x7e]
  4103f8:	inc    edi
  4103f9:	es jno 0x4103a5
  4103fc:	cmp    al,BYTE PTR [ebp+edx*2-0x54]
  410400:	jmp    0x4103ac
  410402:	lods   eax,DWORD PTR ds:[esi]
  410403:	and    eax,0x3c262c06
  410408:	es pop esp
  41040a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41040b:	sbb    esi,DWORD PTR [edx+0x23]
  41040e:	xchg   ch,ah
  410410:	out    0xd0,al
  410412:	out    0x2b,al
  410414:	cmp    dl,BYTE PTR [edx-0x1a6f0491]
  41041a:	test   BYTE PTR [eax+0x1a],ch
  41041d:	call   0x5f21:0x64da041f
  410424:	pop    ebp
  410425:	dec    ebp
  410426:	das    
  410427:	mov    al,0xd1
  410429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41042a:	mov    bh,0xfe
  41042c:	mov    bh,0x3b
  41042e:	clc    
  41042f:	add    al,0x99
  410431:	fucomp st(4)
  410433:	lock mov al,0xa8
  410436:	pop    esp
  410437:	sti    
  410438:	cmp    eax,DWORD PTR [ebx]
  41043a:	(bad)  [esi]
  41043c:	mov    ds:0xee2c1664,eax
  410441:	push   cs
  410442:	inc    eax
  410443:	fcmovnb st,st(1)
  410445:	push   edi
  410446:	lock scas al,BYTE PTR es:[edi]
  410448:	ror    esi,cl
  41044a:	jecxz  0x4104c4
  41044c:	jle    0x410483
  41044e:	dec    ecx
  41044f:	(bad)  
  410450:	ret    0xd854
  410453:	fs jns 0x410439
  410456:	lea    ecx,[ebx-0x61be4015]
  41045c:	daa    
  41045d:	xchg   esi,eax
  41045e:	and    DWORD PTR [ebp+0x46],0xffffff84
  410462:	(bad)  
  410464:	and    BYTE PTR [eax-0x17],dl
  410467:	int    0x98
  410469:	call   0x2147:0x642e4692
  410470:	and    DWORD PTR [ebp-0x52],esi
  410473:	and    cl,BYTE PTR [ebx+0xb]
  410476:	xor    ecx,esi
  410478:	xchg   edi,eax
  410479:	jnp    0x410485
  41047b:	jbe    0x410484
  41047d:	stc    
  41047e:	(bad)
  410481:	out    dx,al
  410482:	bound  edi,QWORD PTR [ebp-0x10cc0e57]
  410488:	shl    DWORD PTR [ebp-0x4b],1
  41048b:	les    esp,FWORD PTR [edi-0x7da6ba44]
  410491:	pusha  
  410492:	ins    BYTE PTR es:[edi],dx
  410493:	into   
  410494:	jo     0x41046d
  410496:	bound  ebp,QWORD PTR [ebx-0x2c592e32]
  41049c:	(bad)  
  41049e:	push   esi
  41049f:	mov    edx,0x93d633e0
  4104a4:	add    DWORD PTR [esi],0xffffffad
  4104a7:	jo     0x410513
  4104a9:	je     0x41046f
  4104ab:	dec    ebx
  4104ac:	or     eax,0x28578e4d
  4104b1:	daa    
  4104b2:	enter  0x903a,0xbe
  4104b6:	sbb    dl,al
  4104b8:	xchg   edx,eax
  4104b9:	push   edi
  4104ba:	push   ecx
  4104bb:	call   0x527c:0xec4740b7
  4104c2:	inc    ecx
  4104c3:	dec    esi
  4104c4:	das    
  4104c5:	and    eax,0x9852ace7
  4104ca:	dec    DWORD PTR cs:[ecx-0x41]
  4104ce:	lea    ecx,[ebx+0x69]
  4104d1:	push   ss
  4104d2:	mov    edi,0x80d6dc60
  4104d7:	ror    BYTE PTR [esi-0x3aa607b2],cl
  4104dd:	(bad)  
  4104de:	cmp    al,0xe4
  4104e0:	sahf   
  4104e1:	add    edi,DWORD PTR [ecx+0x4]
  4104e4:	push   es
  4104e5:	lds    edx,FWORD PTR [ebx+0x7b]
  4104e8:	outs   dx,BYTE PTR ds:[esi]
  4104e9:	add    edi,DWORD PTR [edx+0x7a9c1304]
  4104ef:	dec    esi
  4104f0:	xor    eax,0x7d865745
  4104f5:	jnp    0x41056d
  4104f7:	out    dx,eax
  4104f8:	pop    ss
  4104f9:	xchg   esi,eax
  4104fa:	into   
  4104fb:	adc    DWORD PTR [esi],ecx
  4104fd:	inc    edi
  4104fe:	xor    ebp,eax
  410500:	pop    ebx
  410501:	pop    esp
  410502:	dec    edi
  410503:	cmp    ah,BYTE PTR [edi-0x71]
  410506:	loop   0x41057b
  410508:	(bad)  [ebp-0x4b]
  41050b:	jle    0x41048d
  41050d:	dec    eax
  41050e:	hlt    
  41050f:	ins    BYTE PTR es:[edi],dx
  410510:	aad    0x4f
  410512:	pushf  
  410513:	imul   eax,DWORD PTR [esi],0xffffffbe
  410516:	stc    
  410517:	ins    BYTE PTR es:[edi],dx
  410518:	dec    esp
  410519:	inc    eax
  41051a:	mov    cl,0xda
  41051c:	jmp    DWORD PTR [ecx-0x72]
  41051f:	mov    ebp,gs
  410521:	jmp    FWORD PTR [esi]
  410523:	or     bl,BYTE PTR [eax]
  410525:	stc    
  410526:	jo     0x410580
  410528:	jne    0x410584
  41052a:	xchg   BYTE PTR [edi+eax*1+0x574c15a3],bh
  410531:	(bad)  
  410532:	(bad)  
  410533:	mov    eax,0xb45c1445
  410538:	mov    ds:0x5bafe347,al
  41053d:	stos   DWORD PTR es:[edi],eax
  41053e:	sbb    DWORD PTR ds:0xb85b52ff,edx
  410544:	inc    eax
  410545:	push   DWORD PTR [edi+0x7575ab13]
  41054b:	pop    ss
  41054c:	and    al,0x41
  41054e:	mov    bh,0xd8
  410550:	push   ecx
  410551:	sbb    al,0x65
  410553:	adc    eax,0x26b89d91
  410558:	mov    eax,0x1567251c
  41055d:	ins    DWORD PTR es:[edi],dx
  41055e:	outs   dx,DWORD PTR ds:[esi]
  41055f:	pop    edi
  410560:	(bad)
  410564:	shl    BYTE PTR [eax],1
  410566:	pop    esi
  410567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410568:	inc    ebx
  410569:	(bad)  
  41056a:	adc    cl,BYTE PTR [edi]
  41056c:	and    eax,0xa511c033
  410571:	fbstp  TBYTE PTR ds:0xd935eb78
  410577:	jno    0x4105ac
  410579:	fdiv   DWORD PTR [edx]
  41057b:	jmp    0x689208ae
  410580:	arpl   WORD PTR [ebx+0x7cd4590a],dx
  410586:	pop    edx
  410587:	in     eax,0xaf
  410589:	fist   DWORD PTR [ebp-0x350ced81]
  41058f:	arpl   sp,bp
  410591:	(bad)  
  410592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410593:	mov    ch,0xab
  410595:	ret    0x19d8
  410598:	pop    esp
  410599:	adc    dh,dl
  41059b:	push   0xdf958fbf
  4105a0:	cdq    
  4105a1:	sub    bh,BYTE PTR [edx-0x80]
  4105a4:	jmp    0xe2c2ee30
  4105a9:	dec    esi
  4105aa:	push   eax
  4105ab:	out    0xe4,al
  4105ad:	lods   al,BYTE PTR ds:[esi]
  4105ae:	test   al,0xb3
  4105b0:	mov    edi,0xe2b552c0
  4105b5:	ficomp DWORD PTR [ebp+0x54d164f6]
  4105bb:	sahf   
  4105bc:	imul   eax,DWORD PTR [esp+eiz*2],0x7f
  4105c0:	loop   0x410628
  4105c2:	rcr    BYTE PTR [ebp+0x6e52d956],0xff
  4105c9:	or     DWORD PTR [ecx+0xd533237],ebx
  4105cf:	push   ecx
  4105d0:	push   eax
  4105d1:	clc    
  4105d2:	fcom   QWORD PTR [edx-0x26f33b62]
  4105d8:	or     eax,DWORD PTR [ebx]
  4105da:	cmc    
  4105db:	aam    0x80
  4105dd:	add    al,0xd7
  4105df:	and    DWORD PTR [ebx-0x45],0xffffffdf
  4105e3:	retf   
  4105e4:	popa   
  4105e5:	repnz data16 fmul QWORD PTR [ebx+0x4d]
  4105ea:	pop    ebp
  4105eb:	add    DWORD PTR [eax-0x75],edi
  4105ee:	pop    ecx
  4105ef:	push   edx
  4105f0:	imul   ebp,ebx,0x5850a3e8
  4105f6:	pop    ds
  4105f7:	gs inc cx
  4105fa:	jb     0x410675
  4105fc:	daa    
  4105fd:	out    0x94,eax
  4105ff:	mov    eax,0xd96f7c2c
  410604:	inc    edi
  410605:	popa   
  410606:	mov    ch,0xdf
  410608:	cmp    DWORD PTR [eax],edi
  41060a:	sub    BYTE PTR ds:0xb41dd050,ch
  410610:	push   ebp
  410611:	lods   eax,DWORD PTR ds:[esi]
  410612:	mov    ecx,0x3cf2f5ab
  410617:	retf   0xc3a6
  41061a:	push   edx
  41061b:	dec    ebp
  41061c:	mov    cl,BYTE PTR [esi+0x3d]
  41061f:	out    dx,eax
  410620:	push   cs
  410621:	lods   al,BYTE PTR ds:[esi]
  410622:	inc    DWORD PTR [eax+0x2c]
  410625:	scas   eax,DWORD PTR es:[edi]
  410626:	aaa    
  410627:	pop    ax
  410629:	test   bl,bh
  41062b:	ret    
  41062c:	or     DWORD PTR [esi],eax
  41062e:	inc    ebp
  41062f:	xchg   BYTE PTR [edi+0x43],dl
  410632:	add    eax,0x6800015d
  410637:	lods   al,BYTE PTR ds:[esi]
  410638:	adc    eax,0x8122028d
  41063d:	dec    ebp
  41063e:	stos   BYTE PTR es:[edi],al
  41063f:	and    al,0x63
  410641:	popa   
  410642:	pop    ebx
  410643:	retf   0xb146
  410646:	jns    0x410641
  410648:	add    eax,0xf16d5ea6
  41064d:	mov    al,ds:0x5d26c446
  410652:	add    al,0x27
  410654:	sahf   
  410655:	popf   
  410656:	imul   ecx,DWORD PTR [edx+ebx*4],0xffffffc4
  41065a:	mov    esi,0x351b961d
  41065f:	jb     0x41065d
  410661:	or     eax,0xa1ca48a5
  410666:	stos   BYTE PTR es:[edi],al
  410667:	lds    esi,FWORD PTR [eax-0x214995c5]
  41066d:	push   esp
  41066e:	hlt    
  41066f:	inc    esp
  410670:	xor    BYTE PTR [edi-0x1d],cl
  410673:	xchg   ebx,eax
  410674:	ins    DWORD PTR es:[edi],dx
  410675:	inc    ebp
  410676:	xchg   ecx,eax
  410677:	dec    eax
  410678:	addr16 retf 
  41067a:	(bad)  
  41067b:	std    
  41067c:	shr    ah,1
  41067e:	dec    esi
  41067f:	das    
  410680:	push   ebx
  410681:	pop    es
  410682:	mov    esi,0x6bf246cc
  410687:	adc    ecx,DWORD PTR [ebp-0x62fc43ed]
  41068d:	(bad)  
  41068e:	pop    eax
  41068f:	and    edx,eax
  410691:	pop    ds
  410692:	inc    edi
  410693:	add    dl,BYTE PTR [esi+0x562a5809]
  410699:	push   ds
  41069a:	mov    DWORD PTR [eax-0x3b],ebp
  41069d:	mov    al,ds:0xdf303521
  4106a2:	mov    bh,0x40
  4106a4:	test   al,0x1c
  4106a6:	or     BYTE PTR [ecx],cl
  4106a8:	fsubr  QWORD PTR [ebx-0x8]
  4106ab:	fwait
  4106ac:	sbb    ah,BYTE PTR ds:0x949d
  4106b1:	outs   dx,BYTE PTR ds:[esi]
  4106b2:	dec    edx
  4106b3:	push   sp
  4106b5:	adc    BYTE PTR [edi],bl
  4106b7:	or     BYTE PTR [ecx-0x58],bh
  4106ba:	mov    edi,0x1b0c2d8b
  4106bf:	int3   
  4106c0:	mov    eax,DWORD PTR [ecx-0x1d]
  4106c3:	sbb    DWORD PTR [ebx],edx
  4106c5:	daa    
  4106c6:	and    al,0x21
  4106c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c9:	xchg   esp,eax
  4106ca:	lods   eax,DWORD PTR ds:[esi]
  4106cb:	daa    
  4106cc:	test   BYTE PTR [esi+0x68],dh
  4106cf:	cmp    edx,eax
  4106d1:	in     eax,dx
  4106d2:	pushf  
  4106d3:	ds inc edx
  4106d5:	lahf   
  4106d6:	or     DWORD PTR [esi+0xa],esp
  4106d9:	adc    eax,0x63854846
  4106de:	pop    es
  4106df:	jmp    0xe328:0x9abb5fcc
  4106e6:	pop    ebp
  4106e7:	ror    BYTE PTR [ebp-0x1f],cl
  4106ea:	jb     0x41073d
  4106ec:	xlat   BYTE PTR ds:[ebx]
  4106ed:	sti    
  4106ee:	pop    edx
  4106ef:	add    DWORD PTR [esi+eax*1],edx
  4106f2:	test   eax,esi
  4106f4:	push   ebx
  4106f5:	inc    eax
  4106f6:	test   BYTE PTR [ecx-0x7319056e],0x1a
  4106fd:	xor    BYTE PTR [esi+0x3c],bl
  410700:	jp     0x41077f
  410702:	add    ebp,DWORD PTR [ecx-0x23e613bf]
  410708:	sahf   
  410709:	adc    DWORD PTR [ecx-0x67c30864],0x17
  410710:	das    
  410711:	dec    esp
  410712:	adc    esp,edx
  410714:	out    dx,al
  410715:	outs   dx,BYTE PTR ds:[esi]
  410716:	or     DWORD PTR [esi],eax
  410718:	mov    ch,0xc
  41071a:	dec    esi
  41071b:	loop   0x41070b
  41071d:	add    BYTE PTR es:[ecx+0x54a84616],0xec
  410725:	aam    0x13
  410727:	push   ss
  410728:	sub    BYTE PTR [esi-0x60],0xf1
  41072c:	pop    eax
  41072d:	sbb    BYTE PTR [eax],0x47
  410730:	and    ah,cl
  410732:	add    bh,BYTE PTR [ebp+0x19]
  410735:	pop    ebp
  410736:	jge    0x4106f5
  410738:	inc    ecx
  410739:	jp     0x41079c
  41073b:	mov    ds:0x96b8edda,eax
  410740:	jnp    0x4107a3
  410742:	loope  0x41072a
  410744:	stc    
  410745:	xor    dl,BYTE PTR [ebx+0x4f7b3c38]
  41074b:	and    eax,0xd7a67426
  410750:	jmp    0x181b:0x30b62760
  410757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410758:	std    
  410759:	and    al,0x16
  41075b:	sbb    al,0x71
  41075d:	mov    ds:0x195405bc,eax
  410762:	lock call 0x741c:0xa1585863
  41076a:	out    dx,al
  41076b:	clc    
  41076c:	sub    edi,DWORD PTR [eax-0xb53ae09]
  410772:	adc    dh,0x3d
  410775:	push   cs
  410776:	inc    esp
  410777:	push   ebp
  410778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410779:	jmp    0xbe9f1cf9
  41077e:	jp     0x4107a8
  410780:	lods   eax,DWORD PTR ds:[esi]
  410781:	(bad)  
  410783:	jns    0x4107c8
  410785:	xchg   ebx,eax
  410786:	mov    eax,0x83999b73
  41078b:	and    DWORD PTR [eax],esp
  41078d:	aam    0x3f
  41078f:	scas   eax,DWORD PTR es:[edi]
  410790:	sub    al,0xa6
  410792:	inc    eax
  410793:	idiv   BYTE PTR [edx-0x28ec6e92]
  410799:	test   DWORD PTR [ebx-0x6ebdf575],esp
  41079f:	and    dl,BYTE PTR [ebx-0x3a]
  4107a2:	and    bl,al
  4107a4:	mov    WORD PTR [ecx+0x59accb3a],?
  4107aa:	adc    ecx,ebp
  4107ac:	daa    
  4107ad:	and    BYTE PTR [eax],dl
  4107af:	hlt    
  4107b0:	int    0xc1
  4107b2:	or     BYTE PTR [eax+0xd],bh
  4107b5:	(bad)  
  4107b6:	xchg   esi,eax
  4107b7:	sbb    al,0x88
  4107b9:	mov    al,0xda
  4107bb:	pop    ecx
  4107bc:	push   edi
  4107bd:	pop    esi
  4107be:	test   ecx,ebx
  4107c0:	jle    0x41076e
  4107c2:	adc    ebp,DWORD PTR [ebp+ebx*1-0x39]
  4107c6:	jns    0x41081a
  4107c8:	jae    0x410849
  4107ca:	adc    BYTE PTR [eax+ebx*4],ch
  4107cd:	je     0x41080a
  4107cf:	test   DWORD PTR [esi-0x6a],esi
  4107d2:	mov    eax,0xf81b98c0
  4107d7:	fcomp  DWORD PTR [eax+0x5140bbdc]
  4107dd:	jmp    0xd5a42a4d
  4107e2:	cmp    dh,cl
  4107e4:	sar    BYTE PTR [ebp+0x50ca9138],0x59
  4107eb:	ds cdq 
  4107ed:	test   DWORD PTR [ecx],esi
  4107ef:	stos   BYTE PTR es:[edi],al
  4107f0:	ficomp DWORD PTR [edx]
  4107f2:	clc    
  4107f3:	xchg   ecx,eax
  4107f4:	icebp  
  4107f5:	out    0xbe,al
  4107f7:	xchg   esp,eax
  4107f8:	fiadd  DWORD PTR [ebx+0x6f86be7c]
  4107fe:	xchg   ecx,eax
  4107ff:	dec    ecx
  410800:	jno    0x410872
  410802:	sub    edx,DWORD PTR [ebx+ebp*1-0x4d311a6]
  410809:	lahf   
  41080a:	test   al,0x17
  41080c:	ja     0x410849
  41080e:	retf   0x2b21
  410811:	fsubr  DWORD PTR [esi]
  410813:	mov    ebx,0x51ef7049
  410818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410819:	mov    ds:0xe37d3d20,al
  41081e:	loope  0x4107c7
  410820:	fcomp  QWORD PTR [edi+0x45]
  410823:	mov    ebp,0x7f756aec
  410828:	sahf   
  410829:	retf   
  41082a:	ins    BYTE PTR es:[edi],dx
  41082b:	xchg   bh,ah
  41082d:	shr    BYTE PTR [ebx+0xdfdfe57],cl
  410833:	mov    dl,0xb9
  410835:	mov    esp,0x14023df4
  41083a:	lods   al,BYTE PTR ds:[esi]
  41083b:	jne    0x41087b
  41083d:	xchg   ebp,ebp
  41083f:	vpminub xmm3,xmm5,XMMWORD PTR [esi-0x2fb1ff36]
  410847:	pop    edi
  410848:	or     ecx,DWORD PTR [edi]
  41084a:	imul   ebp,DWORD PTR [esi+0x23],0x15c8aca4
  410851:	ror    DWORD PTR [ecx+0x45cff10f],cl
  410857:	and    al,0x50
  410859:	popf   
  41085a:	xchg   edi,eax
  41085b:	xor    eax,0x570cbddc
  410860:	pop    ebp
  410861:	sub    ecx,DWORD PTR [ebx+0x40]
  410864:	cli    
  410865:	mov    cl,0x7f
  410867:	ss sub eax,0x551695a2
  41086d:	or     eax,ebx
  41086f:	mov    BYTE PTR [eax-0x32],bh
  410872:	aaa    
  410873:	jecxz  0x4108da
  410875:	pop    ds
  410876:	xchg   edi,eax
  410877:	scas   eax,DWORD PTR es:[edi]
  410878:	stos   BYTE PTR es:[edi],al
  410879:	mov    ds:0x596f150,eax
  41087e:	lods   al,BYTE PTR ds:[esi]
  41087f:	pusha  
  410880:	retf   0x54c5
  410883:	jle    0x4108b3
  410885:	adc    eax,0xdd5b7d68
  41088a:	sbb    edx,DWORD PTR [edi+0x46]
  41088d:	xor    bl,BYTE PTR [ebx]
  41088f:	inc    eax
  410890:	cmp    BYTE PTR [ebp+0x7f],bh
  410893:	dec    esp
  410894:	(bad)  
  410895:	mov    ds:0x7a484533,eax
  41089a:	adc    BYTE PTR [ebp-0x551cdbc9],ah
  4108a0:	mov    bh,0x9d
  4108a2:	mov    al,0x8c
  4108a4:	int    0x2e
  4108a6:	loop   0x410911
  4108a8:	popa   
  4108a9:	enter  0x30c0,0xa7
  4108ad:	mov    ebp,0xc22049ee
  4108b2:	je     0x410928
  4108b4:	repnz pop ds
  4108b6:	cli    
  4108b7:	je     0x410909
  4108b9:	aad    0xf3
  4108bb:	cld    
  4108bc:	jp     0x41088c
  4108be:	stos   DWORD PTR es:[edi],eax
  4108bf:	or     al,BYTE PTR [edx+0x48b0b5dd]
  4108c5:	test   eax,0xa9ff6994
  4108ca:	inc    edi
  4108cb:	iret   
  4108cc:	push   es
  4108cd:	mov    al,0x4
  4108cf:	sub    eax,0x46a19df3
  4108d4:	xchg   edx,eax
  4108d5:	jnp    0x4108f4
  4108d7:	mov    ah,0x8e
  4108d9:	and    eax,DWORD PTR [edi+0x50]
  4108dc:	scas   al,BYTE PTR es:[edi]
  4108dd:	dec    ebx
  4108de:	(bad)  ds:0x451e4c56
  4108e4:	push   ds
  4108e5:	and    edi,DWORD PTR [edi+eax*4-0x658cffc1]
  4108ec:	ret    0xba6f
  4108ef:	cld    
  4108f0:	sub    ch,BYTE PTR [ebx-0x17]
  4108f3:	sub    bh,ah
  4108f5:	test   BYTE PTR [esi+0x3b],0xc8
  4108f9:	jo     0x410936
  4108fb:	cs cmp bh,cl
  4108fe:	jecxz  0x4108b3
  410900:	test   BYTE PTR [eax],bh
  410902:	dec    edi
  410903:	fdiv   QWORD PTR [esi+0x75]
  410906:	mov    bl,0xfb
  410908:	sbb    al,dl
  41090a:	cmp    ebp,DWORD PTR [eax-0x4e752c28]
  410910:	fcomp  QWORD PTR [ebx-0x11]
  410913:	pop    edx
  410914:	mov    esi,DWORD PTR [eax]
  410916:	jb     0x410972
  410918:	or     eax,0x194f0b6e
  41091d:	inc    eax
  41091e:	push   ebp
  41091f:	fadd   QWORD PTR [esi-0x43]
  410922:	mov    DWORD PTR [ebx],ecx
  410924:	bound  eax,QWORD PTR [eax-0x1e288e2d]
  41092a:	les    ecx,FWORD PTR [eax]
  41092c:	ficom  WORD PTR [edi]
  41092e:	test   DWORD PTR [edx+esi*8-0x111358f7],ebp
  410935:	cmp    BYTE PTR [ebx-0x4a],ah
  410938:	xor    DWORD PTR [esi-0x2f5af21],0x5c58276e
  410942:	pop    eax
  410943:	out    dx,al
  410944:	mov    al,ds:0x11b40683
  410949:	add    BYTE PTR [edi+0x11],dh
  41094c:	jbe    0x410931
  41094e:	cmp    BYTE PTR fs:[ebx],dl
  410951:	idiv   BYTE PTR [edi-0x3b]
  410954:	push   esi
  410955:	pop    edx
  410956:	push   0xb6f3a04a
  41095b:	inc    edx
  41095c:	push   ds
  41095d:	imul   ebx,DWORD PTR [ecx+0x10],0xfffffff7
  410961:	scas   eax,DWORD PTR es:[edi]
  410962:	fld    DWORD PTR [ebx-0x3b66eb1f]
  410968:	iret   
  410969:	xchg   ecx,eax
  41096a:	rcr    edx,cl
  41096c:	adc    ah,0xac
  41096f:	adc    ah,BYTE PTR [edi-0x1b396f3d]
  410975:	cmp    DWORD PTR [esi+edx*1-0xc],0x7e
  41097a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41097b:	pusha  
  41097c:	sbb    edi,ebx
  41097e:	imul   edi,DWORD PTR [eax-0x66640894],0xffffff86
  410985:	(bad)  
  410986:	mov    bl,BYTE PTR [ecx-0x3c653808]
  41098c:	call   FWORD PTR [edx+eiz*2]
  41098f:	stc    
  410990:	adc    esi,DWORD PTR [eax]
  410992:	rcl    BYTE PTR [esi+0x3062c150],0x6d
  410999:	jo     0x410921
  41099b:	jmp    0xf1ec:0x5d2c46e4
  4109a2:	int    0x42
  4109a4:	ja     0x410985
  4109a6:	mov    ah,BYTE PTR [eax+edx*1-0x43]
  4109aa:	fsubr  QWORD PTR [edx]
  4109ac:	rcr    DWORD PTR [edx+0x7b2ec132],0xd5
  4109b3:	lahf   
  4109b4:	mov    al,0x24
  4109b6:	cmp    BYTE PTR [esp+edx*4+0x22154abb],cl
  4109bd:	in     eax,dx
  4109be:	or     BYTE PTR [edx+eax*2],cl
  4109c1:	and    cl,BYTE PTR [ecx-0x24]
  4109c4:	xor    ah,dl
  4109c6:	pop    es
  4109c7:	add    bl,BYTE PTR [eax]
  4109c9:	inc    ebp
  4109ca:	aad    0x24
  4109cc:	sub    al,0xc3
  4109ce:	imul   edx,DWORD PTR [esp+0x3754e77c],0xffffffdb
  4109d6:	and    BYTE PTR [esi-0x3f4bf34a],ch
  4109dc:	loope  0x4109dd
  4109de:	mov    edx,0xd6bd22e7
  4109e3:	sub    bl,bl
  4109e5:	(bad)  
  4109e6:	sti    
  4109e7:	xchg   ebp,eax
  4109e8:	outs   dx,BYTE PTR ds:[esi]
  4109e9:	or     BYTE PTR [eax],dl
  4109eb:	or     BYTE PTR [ebp-0x1c8cc35e],al
  4109f1:	(bad)  
  4109f2:	out    0x59,al
  4109f4:	sbb    eax,0x79a7fb90
  4109f9:	or     esi,DWORD PTR [ebp+0x72]
  4109fc:	mov    ch,0x65
  4109fe:	dec    esp
  4109ff:	inc    ebx
  410a00:	jb     0x410991
  410a02:	jle    0x410a2d
  410a04:	into   
  410a05:	dec    edx
  410a06:	popf   
  410a07:	mov    BYTE PTR [ebp+0x6c],dl
  410a0a:	xchg   esi,eax
  410a0b:	hlt    
  410a0c:	daa    
  410a0d:	(bad)  
  410a0e:	cld    
  410a0f:	adc    ebx,edx
  410a11:	and    eax,0xbb9869ca
  410a16:	cmp    dh,dh
  410a18:	gs xor eax,0x52822a1c
  410a1e:	fisub  WORD PTR [eax]
  410a20:	mov    BYTE PTR [ecx-0x7d],bl
  410a23:	(bad)  
  410a24:	fnsave [edx-0x2113663b]
  410a2a:	sbb    BYTE PTR ds:0xae690223,bh
  410a30:	sub    al,0x11
  410a32:	dec    esp
  410a33:	hlt    
  410a34:	mov    bh,0x2a
  410a36:	dec    edx
  410a37:	(bad)
  410a3b:	sar    BYTE PTR [esi-0x617a7a9e],1
  410a41:	loopne 0x410a6a
  410a43:	add    eax,0xffffffc3
  410a46:	stos   DWORD PTR es:[edi],eax
  410a47:	jl     0x410a4a
  410a49:	clc    
  410a4a:	or     ebp,DWORD PTR [ecx+0x3b067afa]
  410a50:	repnz adc al,0x70
  410a53:	ficomp WORD PTR [ebx+0x3f]
  410a56:	shr    edi,cl
  410a58:	mov    ebx,0x3bdc5099
  410a5d:	in     al,dx
  410a5e:	sbb    BYTE PTR [edx-0x7aaa1e48],bl
  410a64:	push   sp
  410a66:	pop    edx
  410a67:	cmp    eax,0xc696514a
  410a6c:	repnz std 
  410a6e:	stos   BYTE PTR es:[edi],al
  410a6f:	les    esp,FWORD PTR [esi+0x2afe029]
  410a75:	ins    DWORD PTR es:[edi],dx
  410a76:	sbb    ah,BYTE PTR [edi]
  410a78:	rcr    BYTE PTR [edx+0x5d470ace],cl
  410a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a7f:	jge    0x410adf
  410a81:	xor    al,0xef
  410a83:	mov    es,esi
  410a85:	cmp    al,0x83
  410a87:	adc    DWORD PTR [edx],esi
  410a89:	pop    esp
  410a8a:	push   ds
  410a8b:	or     eax,0xcaa6e9e1
  410a90:	jl     0x410aa4
  410a92:	les    ebp,FWORD PTR [ebx]
  410a94:	in     al,dx
  410a95:	rol    BYTE PTR [edx+0x2c],1
  410a98:	jmp    0x410a4c
  410a9a:	lock adc eax,0x45ca35cf
  410aa0:	adc    esp,DWORD PTR [esi-0x42bf38b4]
  410aa6:	add    eax,0xcb2350
  410aab:	cmp    eax,0x1598e44c
  410ab0:	stos   BYTE PTR es:[edi],al
  410ab1:	pop    ebp
  410ab2:	inc    ecx
  410ab3:	fdecstp 
  410ab5:	mov    eax,DWORD PTR [esi+0x64]
  410ab8:	sbb    esp,0x2ba81dce
  410abe:	dec    edi
  410abf:	addr16 jl 0x410a43
  410ac2:	imul   esp,ecx,0xfe2e674b
  410ac8:	cmc    
  410ac9:	or     eax,0x93787e2f
  410ace:	das    
  410acf:	and    BYTE PTR ds:0x2745dd1f,al
  410ad6:	addr16 loope 0x410b30
  410ad9:	mov    WORD PTR [edi+edx*4-0x5f360e1a],gs
  410ae0:	in     al,0x25
  410ae2:	mov    bh,0x3f
  410ae4:	push   cs
  410ae5:	js     0x410a8d
  410ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae8:	add    BYTE PTR [ebx+esi*2],al
  410aeb:	or     esi,DWORD PTR [edx+0x2d9cc03d]
  410af1:	daa    
  410af2:	or     BYTE PTR [ebp-0x72],bh
  410af5:	dec    edi
  410af6:	sti    
  410af7:	stos   BYTE PTR es:[edi],al
  410af8:	cli    
  410af9:	test   eax,0xf30d9175
  410afe:	xchg   esi,eax
  410aff:	loop   0x410b0e
  410b01:	outs   dx,DWORD PTR ds:[esi]
  410b02:	adc    BYTE PTR [eax+0x6b],ah
  410b05:	pop    esi
  410b06:	push   ds
  410b07:	int3   
  410b08:	or     DWORD PTR [edx-0x6a],ecx
  410b0b:	sub    BYTE PTR [eax+0x7088eff7],0xea
  410b12:	mov    cl,ah
  410b14:	scas   al,BYTE PTR es:[edi]
  410b15:	int    0xe3
  410b17:	and    BYTE PTR [esi+0x56],bl
  410b1a:	mov    eax,0xd96fe179
  410b1f:	sub    eax,0x4d9f64ce
  410b24:	scas   eax,DWORD PTR es:[edi]
  410b25:	std    
  410b26:	mov    edx,DWORD PTR [edx-0x63bbc78]
  410b2c:	ds push ss
  410b2e:	aad    0x6d
  410b30:	test   eax,0x7ca1e777
  410b35:	gs icebp 
  410b37:	stos   BYTE PTR es:[edi],al
  410b38:	mov    al,0xaa
  410b3a:	xchg   esi,eax
  410b3b:	jb     0x410b29
  410b3d:	pop    esp
  410b3e:	mov    eax,ds:0x101edb1a
  410b43:	icebp  
  410b44:	ficom  WORD PTR [ecx+0x28]
  410b47:	loope  0x410af6
  410b49:	jo     0x410af0
  410b4b:	xor    BYTE PTR [esi],bl
  410b4d:	mov    es,WORD PTR [esi]
  410b4f:	inc    ebx
  410b50:	arpl   WORD PTR [ecx+0x19de7e1a],bp
  410b56:	neg    DWORD PTR [ebp-0x13d464ea]
  410b5c:	push   edi
  410b5d:	dec    esi
  410b5e:	in     al,dx
  410b5f:	mov    cl,0x6f
  410b61:	ror    BYTE PTR [edx-0x6a9907d2],1
  410b67:	dec    ebp
  410b68:	cmp    cl,ch
  410b6a:	cli    
  410b6b:	dec    eax
  410b6c:	fadd   QWORD PTR [edi-0x632f6519]
  410b72:	addr16 mov eax,es
  410b75:	xor    eax,0x10cf422a
  410b7a:	adc    al,0x7b
  410b7c:	inc    edx
  410b7d:	sub    al,0x55
  410b7f:	push   ss
  410b80:	aas    
  410b81:	sbb    esp,DWORD PTR ds:0xfe3c69ef
  410b87:	test   al,0x35
  410b89:	je     0x410bdc
  410b8b:	test   ch,dh
  410b8d:	int    0xe8
  410b8f:	jle    0x410c0d
  410b91:	mov    edx,0x9df48bf3
  410b96:	jp     0x410b3a
  410b98:	dec    edx
  410b99:	stos   BYTE PTR es:[edi],al
  410b9a:	inc    ecx
  410b9b:	and    BYTE PTR [edi-0x51b3bb1e],bl
  410ba1:	(bad)  
  410ba3:	shl    DWORD PTR [edi-0x61093d13],1
  410ba9:	repnz or cl,dh
  410bac:	mov    edi,0xf73d5255
  410bb1:	in     eax,dx
  410bb2:	xor    BYTE PTR [eax+0x57],bh
  410bb5:	pop    ss
  410bb6:	ret    
  410bb7:	daa    
  410bb8:	lea    esp,[edx-0x4dc40b66]
  410bbe:	inc    eax
  410bbf:	imul   ecx,DWORD PTR [esi-0x49c8e3c9],0x61
  410bc6:	and    al,0x9a
  410bc8:	out    dx,eax
  410bc9:	mov    eax,0x861844f
  410bce:	out    0xf6,eax
  410bd0:	push   es
  410bd1:	inc    edi
  410bd2:	dec    edx
  410bd3:	sbb    esi,edx
  410bd5:	popa   
  410bd6:	cmp    DWORD PTR [ebx],0x2c947767
  410bdc:	popf   
  410bdd:	inc    ecx
  410bde:	sub    al,BYTE PTR [edx+0x33]
  410be1:	inc    eax
  410be2:	sti    
  410be3:	int    0x44
  410be5:	add    eax,0xbdd82cac
  410bea:	adc    ebx,esi
  410bec:	and    cl,BYTE PTR [edi-0x1c4cce8b]
  410bf2:	ror    BYTE PTR ds:0x4b717505,0xbb
  410bf9:	ja     0x410bc6
  410bfb:	adc    esi,DWORD PTR [ecx-0x7c]
  410bfe:	in     eax,dx
  410bff:	ja     0x410b8e
  410c01:	cmc    
  410c02:	jmp    0xf899:0x955fc1e6
  410c09:	cdq    
  410c0a:	loopne 0x410c06
  410c0c:	jno    0x410ba4
  410c0e:	int3   
  410c0f:	add    DWORD PTR [edi-0x139fe516],0x26
  410c16:	adc    ecx,DWORD PTR [ebp-0x8]
  410c19:	mov    cl,0x1d
  410c1b:	rol    BYTE PTR [eax+eiz*8-0x73dc70d0],cl
  410c22:	cmp    eax,0xb54adbba
  410c27:	push   0x831c38c9
  410c2c:	test   BYTE PTR [ebp-0x4f],cl
  410c2f:	pop    ebx
  410c30:	adc    BYTE PTR [ebx-0xb2229db],ch
  410c36:	fldcw  WORD PTR ds:0xa8cfbe40
  410c3c:	loopne 0x410cb6
  410c3e:	out    0xc9,eax
  410c40:	ja     0x410c9e
  410c42:	add    ecx,DWORD PTR [eax+0x25d50279]
  410c48:	outs   dx,DWORD PTR ds:[esi]
  410c49:	pop    ss
  410c4a:	enter  0xe642,0xf2
  410c4e:	xchg   ebp,eax
  410c4f:	in     al,0xcd
  410c51:	xchg   edx,eax
  410c52:	aas    
  410c53:	mov    al,ds:0x4f547a51
  410c58:	push   0x7741fa1a
  410c5d:	pushf  
  410c5e:	mov    cl,0x8b
  410c60:	jne    0x410c91
  410c62:	sub    al,BYTE PTR [ecx-0x712b6d2d]
  410c68:	sub    DWORD PTR [edi],0x5cf40483
  410c6e:	scas   al,BYTE PTR es:[edi]
  410c6f:	lahf   
  410c70:	and    bl,BYTE PTR [ebx-0x5b]
  410c73:	jne    0x410c84
  410c75:	(bad)  
  410c76:	xor    DWORD PTR [edi+edx*2-0x125c0919],ebx
  410c7d:	inc    edx
  410c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7f:	jae    0x410ca8
  410c81:	lock sbb bh,BYTE PTR [edx]
  410c84:	sahf   
  410c85:	mov    esi,DWORD PTR [edi]
  410c87:	lods   eax,DWORD PTR ds:[esi]
  410c88:	das    
  410c89:	jns    0x410cdc
  410c8b:	inc    esp
  410c8c:	adc    BYTE PTR [edi],bl
  410c8e:	xchg   DWORD PTR [eax-0x1d],ebp
  410c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c92:	inc    eax
  410c93:	fist   DWORD PTR [edi]
  410c95:	mov    edx,DWORD PTR [ebp+0x3f]
  410c98:	cmp    BYTE PTR [ecx],al
  410c9a:	jmp    0x4528:0x61797f4f
  410ca1:	add    eax,0x923487c8
  410ca6:	pop    ds
  410ca7:	rol    DWORD PTR [ebp-0x2b67220c],1
  410cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cae:	xor    DWORD PTR [edi],ecx
  410cb0:	(bad)  
  410cb1:	outs   dx,DWORD PTR ds:[esi]
  410cb2:	mov    ecx,DWORD PTR [edi]
  410cb4:	add    dh,BYTE PTR [edx]
  410cb6:	aam    0x13
  410cb8:	in     al,dx
  410cb9:	in     al,dx
  410cba:	imul   edx,DWORD PTR [esi-0x6acdf3f6],0xc8d83d8c
  410cc4:	aas    
  410cc5:	mov    ah,0x8b
  410cc7:	sub    eax,0x2054a388
  410ccc:	add    eax,0xe0a86b21
  410cd1:	add    BYTE PTR [ecx-0x24],0x71
  410cd5:	in     al,0x26
  410cd7:	dec    esi
  410cd8:	popa   
  410cd9:	dec    ecx
  410cda:	mov    al,ds:0x2de3fd4
  410cdf:	push   0xffffffac
  410ce1:	jg     0x410c9a
  410ce3:	cwde   
  410ce4:	ror    BYTE PTR [ebx],0xd6
  410ce7:	sub    DWORD PTR [esi],edx
  410ce9:	jmp    0xf0a1:0x57928565
  410cf0:	inc    esp
  410cf1:	pop    ebx
  410cf2:	push   ds
  410cf3:	mov    DWORD PTR [ebx+0x3bdae8fb],esp
  410cf9:	fs nop
  410cfb:	fist   WORD PTR [ebp-0xd4d6563]
  410d01:	call   0x10132fb4
  410d06:	dec    eax
  410d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d08:	mov    ebx,0x835808b0
  410d0d:	hlt    
  410d0e:	mov    bh,0xcb
  410d10:	inc    esi
  410d11:	jmp    ebx
  410d13:	cmp    DWORD PTR [ebx-0x68],0x68
  410d17:	jmp    0x7fe8a94f
  410d1c:	lock imul eax
  410d1f:	pop    eax
  410d20:	je     0x410d88
  410d22:	imul   ebp,DWORD PTR [esi+edx*1+0x2a],0x1e3d686
  410d2a:	cmp    al,BYTE PTR [ebp+0x53]
  410d2d:	mov    esi,eax
  410d2f:	inc    eax
  410d30:	mov    bl,0xa9
  410d32:	out    dx,al
  410d33:	int3   
  410d34:	retf   
  410d35:	xor    edi,DWORD PTR [ecx+0x4a]
  410d38:	sbb    BYTE PTR [ecx],ch
  410d3a:	xchg   BYTE PTR [ebx+eiz*4],dh
  410d3d:	rcl    BYTE PTR [ebx+0x15e40847],1
  410d43:	mov    edi,0xc2b3b66
  410d48:	and    al,0xcc
  410d4a:	popa   
  410d4b:	aad    0x49
  410d4d:	mov    ds:0x3c7b1311,eax
  410d52:	sbb    DWORD PTR [ebx+0x3e6e2993],0x589b218a
  410d5c:	mov    eax,0xfc851d7d
  410d61:	cmp    dl,BYTE PTR [ebx-0x71]
  410d64:	mov    eax,0xcd7a374c
  410d69:	adc    al,0xe8
  410d6b:	xor    al,0x88
  410d6d:	inc    edx
  410d6e:	addr16 call 0x97d7387a
  410d74:	jg     0x410d31
  410d76:	cmp    BYTE PTR [esp+ebx*8-0x3a81e778],al
  410d7d:	xchg   bh,ch
  410d7f:	adc    cl,BYTE PTR [ebx+0x58eec8cd]
  410d85:	cmp    eax,0x7e47dcd2
  410d8a:	(bad)  
  410d8b:	inc    DWORD PTR [ebx+ebp*4]
  410d8e:	sar    BYTE PTR [edx+0x5f79d314],1
  410d94:	outs   dx,BYTE PTR ds:[esi]
  410d95:	dec    ecx
  410d96:	adc    cl,BYTE PTR [ecx+ecx*4-0x65]
  410d9a:	cmc    
  410d9b:	pop    ds
  410d9c:	inc    eax
  410d9d:	dec    ecx
  410d9e:	push   edi
  410d9f:	mov    edi,0xde4ecc60
  410da4:	pushf  
  410da5:	lds    esi,FWORD PTR [esi+0x1a05a30e]
  410dab:	mov    eax,0x42807d07
  410db0:	jmp    0x194dfb8
  410db5:	sub    BYTE PTR [ecx+eax*4+0x5d],0x3d
  410dba:	push   ecx
  410dbb:	jmp    0x5ac4c71a
  410dc0:	or     al,0x73
  410dc2:	jmp    0xec89733e
  410dc7:	jecxz  0x410d7f
  410dc9:	jmp    0x55222c17
  410dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dcf:	pop    ebp
  410dd0:	sbb    al,0x92
  410dd2:	enter  0xf9c4,0xdb
  410dd6:	inc    DWORD PTR ds:0xd65cf34c
  410ddc:	call   0xcf140c6e
  410de1:	loope  0x410dac
  410de3:	bound  eax,QWORD PTR [esi+eax*4-0x21ef0318]
  410dea:	xchg   edi,eax
  410deb:	xor    dl,BYTE PTR [ecx-0x27]
  410dee:	jmp    0xd4ccd9f8
  410df3:	shl    BYTE PTR [ecx],1
  410df5:	clc    
  410df6:	jle    0x410de1
  410df8:	sbb    ebx,DWORD PTR [edx+0x46]
  410dfb:	fcom   QWORD PTR [edx+esi*2+0x3a]
  410dff:	add    ch,BYTE PTR [eax]
  410e01:	mov    eax,ds:0x49cf269a
  410e06:	mov    WORD PTR [eax],gs
  410e08:	jle    0x410e45
  410e0a:	test   BYTE PTR [ecx+0x47],al
  410e0d:	sub    eax,0x499904c1
  410e12:	dec    eax
  410e13:	adc    BYTE PTR ds:0x940c171b,cl
  410e19:	cmp    eax,0x6de0e582
  410e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e1f:	mov    al,0x60
  410e21:	mov    al,ds:0x6883f7eb
  410e26:	cmp    al,0x13
  410e28:	and    eax,0x941b3a4a
  410e2d:	jl     0x410e6a
  410e2f:	jmp    ecx
  410e31:	xor    edi,DWORD PTR [edx-0x56]
  410e34:	in     eax,0x14
  410e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e37:	mov    cl,0x9a
  410e39:	sub    ah,BYTE PTR [ecx-0x59]
  410e3c:	inc    eax
  410e3d:	leave  
  410e3e:	push   edx
  410e3f:	mov    ds:0x72f6fd58,eax
  410e44:	push   0xffffffe4
  410e46:	mov    al,ds:0x4203c5bb
  410e4b:	add    BYTE PTR [edi-0x4b],al
  410e4e:	sub    al,0xa6
  410e50:	dec    eax
  410e51:	(bad)  [ebx]
  410e53:	pop    ebx
  410e54:	ret    
  410e55:	xor    esi,DWORD PTR [ecx]
  410e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e58:	jge    0x410df4
  410e5a:	or     al,BYTE PTR [esi+0x13]
  410e5d:	js     0x410e68
  410e5f:	xor    BYTE PTR [edx-0x2638e7cc],al
  410e65:	(bad)  
  410e66:	xchg   edi,eax
  410e67:	add    ebx,DWORD PTR [edi]
  410e69:	sub    al,cl
  410e6b:	in     eax,dx
  410e6c:	inc    edx
  410e6d:	fisttp QWORD PTR [eax-0x4e]
  410e70:	pop    ebp
  410e71:	cdq    
  410e72:	cli    
  410e73:	test   bl,ch
  410e75:	dec    ebx
  410e76:	mov    edi,0x9071039d
  410e7b:	mov    cl,0xa3
  410e7d:	addr16 call 0x175cb9fd
  410e83:	push   ss
  410e84:	out    dx,al
  410e85:	xor    al,BYTE PTR [eax]
  410e87:	es dec edi
  410e89:	aaa    
  410e8a:	adc    BYTE PTR ds:0xe0936d72,dh
  410e90:	fisub  WORD PTR [ebx+0x32]
  410e93:	idiv   ah
  410e95:	jmp    0x6a625f97
  410e9a:	jecxz  0x410f18
  410e9c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410e9e:	outs   dx,DWORD PTR ds:[esi]
  410e9f:	stc    
  410ea0:	ret    
  410ea1:	or     eax,0x62abc776
  410ea6:	loope  0x410e66
  410ea8:	cli    
  410ea9:	xor    eax,0xd6e700df
  410eae:	dec    edx
  410eaf:	sbb    bl,BYTE PTR [ecx-0x3279a743]
  410eb5:	add    eax,0x3b7bb7d0
  410eba:	dec    edi
  410ebb:	push   0xd35e64c
  410ec0:	mov    al,ds:0xe87d35a9
  410ec5:	push   ds
  410ec6:	loop   0x410e6d
  410ec8:	stos   DWORD PTR es:[edi],eax
  410ec9:	xor    al,0x46
  410ecb:	aam    0x99
  410ecd:	fidivr WORD PTR [edi+0x59]
  410ed0:	je     0x410eb0
  410ed2:	sub    al,0x3b
  410ed4:	imul   eax,DWORD PTR [eax+ebx*1-0x76],0x27014dca
  410edc:	neg    BYTE PTR [esi-0x30]
  410edf:	shl    BYTE PTR [edx+0x62],1
  410ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee3:	jno    0x410ee4
  410ee5:	imul   esp,edi,0xffffffa4
  410ee8:	imul   ecx,DWORD PTR ds:0x6b997c0f,0xb
  410eef:	rol    BYTE PTR fs:[esi-0x5],cl
  410ef3:	pop    esp
  410ef4:	jg     0x410f28
  410ef6:	and    dl,BYTE PTR [esi]
  410ef8:	out    0x29,al
  410efa:	inc    esi
  410efb:	xchg   BYTE PTR [edx-0x7d],bl
  410efe:	pop    edi
  410eff:	lahf   
  410f00:	aam    0x40
  410f02:	(bad)  
  410f03:	(bad)  
  410f04:	cmp    al,0x9e
  410f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f07:	aaa    
  410f08:	sbb    BYTE PTR [edi+0x19ddbaeb],0xc0
  410f0f:	pop    esi
  410f10:	aas    
  410f11:	mov    ebp,0xd5fe145a
  410f16:	pushf  
  410f17:	jne    0x410f4d
  410f19:	sub    DWORD PTR [ecx+0x3a353da7],ebp
  410f1f:	adc    al,BYTE PTR [edx]
  410f21:	mov    ebp,0xf52a6690
  410f26:	adc    bh,BYTE PTR [esi]
  410f28:	jp     0x410f7d
  410f2a:	popf   
  410f2b:	mov    esi,0xec08a3f6
  410f30:	ss adc ebx,ebp
  410f33:	dec    ebp
  410f34:	pop    edi
  410f35:	jg     0x410eb8
  410f37:	adc    DWORD PTR [ecx],eax
  410f39:	cmc    
  410f3a:	das    
  410f3b:	xor    BYTE PTR [edx+0x3289bd77],ah
  410f41:	jmp    0xa0878f3a
  410f46:	sub    al,0xc6
  410f48:	lock iret 
  410f4a:	adc    eax,0x7bc85a9b
  410f4f:	sahf   
  410f50:	jb     0x410f9b
  410f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f53:	pop    es
  410f54:	add    edx,DWORD PTR [ecx]
  410f56:	pop    ebx
  410f57:	inc    eax
  410f58:	pop    edi
  410f59:	fldenv [ecx+0x68cdd877]
  410f5f:	mov    bx,0x587b
  410f63:	(bad)  
  410f64:	inc    ebx
  410f65:	cwde   
  410f66:	mov    al,0xb8
  410f68:	inc    ebp
  410f69:	pop    edi
  410f6a:	and    al,0xb4
  410f6c:	test   al,0xcc
  410f6e:	das    
  410f6f:	and    al,0xfe
  410f71:	adc    eax,0xb5431f74
  410f76:	pop    ds
  410f77:	cs add eax,0x64bd199e
  410f7d:	mov    ch,0x2d
  410f7f:	ret    0xd2f7
  410f82:	dec    edi
  410f83:	sbb    DWORD PTR [edi-0x65],esi
  410f86:	call   0x67b4:0x16f8420b
  410f8d:	mov    ds:0x700bc481,eax
  410f92:	xor    dl,BYTE PTR [ecx+0x5]
  410f95:	and    cl,dl
  410f97:	pop    es
  410f98:	in     al,dx
  410f99:	push   0xffffffe7
  410f9b:	test   BYTE PTR [ebp-0x64],0xe7
  410f9f:	mov    eax,ds:0xf7308bc6
  410fa4:	icebp  
  410fa5:	cwde   
  410fa6:	or     bl,BYTE PTR [ecx+0x53696271]
  410fac:	addr16 jmp 0xefa9:0x9ec8307
  410fb4:	repnz div DWORD PTR [edi+0x66]
  410fb8:	mov    ecx,0xfc4c3b70
  410fbd:	aaa    
  410fbe:	mov    esi,0xfe693b86
  410fc3:	or     BYTE PTR [ecx],0x1f
  410fc6:	sub    al,0xd8
  410fc8:	mov    eax,0x3e77f64d
  410fcd:	std    
  410fce:	inc    BYTE PTR [esi-0x61]
  410fd1:	cli    
  410fd2:	jo     0x411008
  410fd4:	pop    ss
  410fd5:	mov    ecx,0x6e4e62aa
  410fda:	mov    eax,0xe3af9e2c
  410fdf:	test   DWORD PTR [edi+edx*1],eax
  410fe2:	cld    
  410fe3:	and    esi,DWORD PTR [ebp+edx*2+0x28df1a1b]
  410fea:	mov    esp,0x2bae02fb
  410fef:	adc    DWORD PTR [edx],ecx
  410ff1:	sub    edi,DWORD PTR [esi-0xc]
  410ff4:	mov    BYTE PTR [ecx-0x5ff51719],al
  410ffa:	adc    al,BYTE PTR [edi-0x29]
  410ffd:	jmp    0x286cd1d0
  411002:	loop   0x410ff3
  411004:	popf   
  411005:	stc    
  411006:	dec    eax
  411007:	dec    edx
  411008:	adc    dh,BYTE PTR [edx+0x33301990]
  41100e:	mov    eax,0x22cf72e
  411013:	jmp    0x2b24:0x7d13d38f
  41101a:	push   0x68
  41101c:	test   al,0xd3
  41101e:	push   0xffffffc2
  411020:	inc    edx
  411021:	(bad)  
  411024:	adc    al,0x33
  411026:	adc    al,0x3f
  411028:	or     edx,DWORD PTR [esi-0x1]
  41102b:	sti    
  41102c:	enter  0xfb41,0x1f
  411030:	mov    ecx,0x9b880196
  411035:	and    esi,DWORD PTR [ebp+0x7e594d16]
  41103b:	sub    DWORD PTR [esi+0x2f],ebp
  41103e:	mov    eax,0x928f212d
  411043:	and    ebx,DWORD PTR [esi+0x699112b3]
  411049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41104a:	adc    dl,bl
  41104c:	stos   DWORD PTR es:[edi],eax
  41104d:	inc    edx
  41104e:	or     esp,edx
  411050:	cs mov ecx,0x9639b120
  411056:	dec    eax
  411057:	push   eax
  411058:	leave  
  411059:	jno    0x4110c1
  41105b:	lea    esp,[ebx+0xeaa6a20]
  411061:	cmp    BYTE PTR [esi-0x6c6e1a41],ch
  411067:	(bad)  
  411068:	stos   BYTE PTR es:[edi],al
  411069:	scas   al,BYTE PTR es:[edi]
  41106a:	and    BYTE PTR [ebp+0x37],bl
  41106d:	mov    edx,0x34db560b
  411072:	push   ds
  411073:	mov    bl,0x9d
  411075:	sbb    eax,0x204dfe67
  41107a:	lods   al,BYTE PTR ds:[esi]
  41107b:	stc    
  41107c:	ins    DWORD PTR es:[edi],dx
  41107d:	jecxz  0x411005
  41107f:	adc    DWORD PTR [edx],ebp
  411081:	cdq    
  411082:	and    esi,DWORD PTR [eax-0x4ab9a07a]
  411088:	mov    ds,WORD PTR ds:0x221543ca
  41108e:	jae    0x4110d5
  411090:	mov    edi,0xc546c05e
  411095:	in     eax,0xe0
  411097:	xchg   edi,eax
  411098:	push   0x7c
  41109a:	shl    BYTE PTR [ecx+eax*4],1
  41109d:	sbb    dh,BYTE PTR [eax+ebp*8-0x61d5960e]
  4110a4:	stos   DWORD PTR es:[edi],eax
  4110a5:	dec    ebx
  4110a6:	loop   0x41107c
  4110a8:	or     DWORD PTR [edi-0x1a],edi
  4110ab:	out    0x18,eax
  4110ad:	sub    dh,BYTE PTR [edi+0xf81d455]
  4110b3:	pop    ebx
  4110b4:	jmp    0x83ca:0x17c04da6
  4110bb:	jnp    0x41104a
  4110bd:	mov    ebx,0xc8c8e3e1
  4110c2:	xor    edx,DWORD PTR ds:0x80ebd412
  4110c8:	mov    bh,0xfb
  4110ca:	xor    al,BYTE PTR [edi-0x2d16ef09]
  4110d0:	pop    ebp
  4110d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d2:	mov    bl,bl
  4110d4:	pop    edi
  4110d5:	xchg   esi,eax
  4110d6:	stos   DWORD PTR es:[edi],eax
  4110d7:	and    eax,0x549ac98e
  4110dc:	add    bh,dh
  4110de:	sar    BYTE PTR [ecx],0x99
  4110e1:	sbb    DWORD PTR [edi],ecx
  4110e3:	clc    
  4110e4:	int    0x95
  4110e6:	xor    dl,bh
  4110e8:	pusha  
  4110e9:	cli    
  4110ea:	push   eax
  4110eb:	inc    edi
  4110ec:	dec    esi
  4110ed:	ins    BYTE PTR es:[edi],dx
  4110ee:	push   ss
  4110ef:	scas   al,BYTE PTR es:[edi]
  4110f0:	mov    esi,?
  4110f2:	add    esp,ebp
  4110f4:	repnz mov ?,WORD PTR [edx]
  4110f7:	ins    BYTE PTR es:[edi],dx
  4110f8:	mov    ch,0x5e
  4110fa:	inc    eax
  4110fb:	cmp    eax,0x115fb1c4
  411100:	pop    ebp
  411101:	xchg   dh,dl
  411103:	out    0x2b,al
  411105:	stos   BYTE PTR es:[edi],al
  411106:	sbb    esi,DWORD PTR [eax+0x2af694a7]
  41110c:	cmp    eax,0x603f4978
  411111:	add    eax,0x77def5ce
  411116:	ret    
  411117:	push   ebp
  411118:	arpl   WORD PTR [ebx-0x3],dx
  41111b:	bound  edi,QWORD PTR [eax-0x43]
  41111e:	xchg   ebp,eax
  41111f:	cs mov al,0x59
  411122:	pop    ecx
  411123:	push   ecx
  411124:	sahf   
  411125:	test   ch,bl
  411127:	add    dl,BYTE PTR [esi]
  411129:	add    ebp,DWORD PTR [esi]
  41112b:	loopne 0x41119e
  41112d:	sbb    al,0xe8
  41112f:	icebp  
  411130:	xchg   ebp,eax
  411131:	mov    ebx,0x8b3cf413
  411136:	cmp    ch,BYTE PTR [esi+eiz*2+0x1]
  41113a:	shl    BYTE PTR [ebx+0x4d19de69],1
  411140:	into   
  411141:	pop    esi
  411142:	fild   WORD PTR [eax-0x3cf1abea]
  411148:	out    0x42,al
  41114a:	and    eax,0xd11ed224
  41114f:	shl    DWORD PTR [ebx+esi*4-0x44],0xd9
  411154:	jmp    0x319d51aa
  411159:	adc    BYTE PTR [esi],dh
  41115b:	js     0x4111b3
  41115d:	data16 stc 
  41115f:	aad    0xe0
  411161:	out    0x5e,al
  411163:	add    DWORD PTR [edx+edi*4+0x60],eax
  411167:	cmp    al,0x4e
  411169:	retf   
  41116a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41116b:	fsub   QWORD PTR [ecx+0x1f]
  41116e:	fs aad 0x2d
  411171:	js     0x411177
  411173:	pop    ebx
  411174:	daa    
  411175:	inc    ebp
  411176:	pop    es
  411177:	mov    ecx,0x12652268
  41117c:	jle    0x4111b9
  41117e:	rcl    DWORD PTR [ebx],0xc7
  411181:	adc    al,0x75
  411183:	pop    ds
  411184:	out    0x31,eax
  411186:	mov    ch,0x39
  411188:	dec    ebp
  411189:	jno    0x4111c2
  41118b:	xor    eax,0x64d601e4
  411190:	aam    0xb1
  411192:	xchg   edx,eax
  411193:	scas   al,BYTE PTR es:[edi]
  411194:	jmp    0x41113a
  411196:	pop    ss
  411197:	mov    al,ds:0x77bc7fa7
  41119c:	add    bh,bh
  41119e:	repz dec edi
  4111a0:	clc    
  4111a1:	sub    eax,0xaebe8eea
  4111a6:	mov    ds:0x18432ddc,al
  4111ab:	mov    ds:0x2ec56b63,eax
  4111b0:	call   0xed0da475
  4111b5:	fisubr DWORD PTR ds:0x893cf83f
  4111bb:	mov    al,0xba
  4111bd:	dec    ecx
  4111be:	mov    ?,WORD PTR [edx-0x7473eef4]
  4111c4:	sti    
  4111c5:	inc    ebx
  4111c6:	ficom  WORD PTR [esi]
  4111c8:	fucom  st(3)
  4111ca:	aam    0xa6
  4111cc:	push   eax
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	popf   
  4111cf:	mov    cl,0xfb
  4111d1:	sbb    DWORD PTR [ecx-0x3f],ecx
  4111d4:	mov    ah,0xa6
  4111d6:	popf   
  4111d7:	cwde   
  4111d8:	jmp    0xf964d8c2
  4111dd:	xor    al,0xe7
  4111df:	pop    eax
  4111e0:	int    0xb5
  4111e2:	jg     0x411183
  4111e4:	xor    al,BYTE PTR [edx+0x42]
  4111e7:	pop    edi
  4111e8:	ds mov esp,0x10b3a96d
  4111ee:	adc    eax,0x5755fc96
  4111f3:	les    esi,FWORD PTR [edi-0x4b]
  4111f6:	or     eax,0x998139e3
  4111fb:	add    DWORD PTR [esi],eax
  4111fd:	xchg   esi,eax
  4111fe:	ins    BYTE PTR es:[edi],dx
  4111ff:	pushf  
  411200:	je     0x4111f6
  411202:	out    dx,eax
  411203:	loop   0x411228
  411205:	pop    edx
  411206:	inc    ebx
  411207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411208:	in     eax,0x8d
  41120a:	rol    al,0x95
  41120d:	pusha  
  41120e:	std    
  41120f:	sbb    dh,BYTE PTR [ecx]
  411211:	bswap  esp
  411213:	(bad)  
  411214:	enter  0xda96,0xd2
  411218:	pusha  
  411219:	mov    bh,0x3f
  41121b:	inc    edi
  41121c:	scas   al,BYTE PTR es:[edi]
  41121d:	dec    esi
  41121e:	sub    al,0x3f
  411220:	es push cs
  411222:	adc    al,0xbf
  411224:	iret   
  411225:	pusha  
  411226:	or     bl,BYTE PTR [esi+ebp*8]
  411229:	in     eax,dx
  41122a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41122b:	or     esp,DWORD PTR [edi-0x7a]
  41122e:	cli    
  41122f:	mul    BYTE PTR [edi-0x4bab79ea]
  411235:	addr16 adc eax,0xb2bb83a3
  41123b:	shr    BYTE PTR [eax+edx*4],cl
  41123e:	out    0x8,al
  411240:	ja     0x41121b
  411242:	arpl   WORD PTR [esi+0x21242b3],bp
  411248:	dec    esi
  411249:	cmp    ch,bl
  41124b:	int3   
  41124c:	inc    esi
  41124d:	or     al,0x73
  41124f:	inc    BYTE PTR [ecx+0x40]
  411252:	inc    ebp
  411253:	call   0x44c873b7
  411258:	mov    DWORD PTR [edx+eax*2-0x1b591e79],ebp
  41125f:	cmp    eax,0xaa1e0755
  411264:	cmc    
  411265:	xchg   esi,eax
  411266:	test   BYTE PTR [ecx+0x15],cl
  411269:	addr16 push ss
  41126b:	cmp    esi,esp
  41126d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41126e:	lods   al,BYTE PTR ds:[esi]
  41126f:	jge    0x41128b
  411271:	push   ebp
  411272:	sub    al,0xbd
  411274:	xchg   eax,esi
  411276:	mov    eax,0xe359e162
  41127b:	dec    ebx
  41127c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127e:	(bad)  
  41127f:	jge    0xd10fdd5e
  411285:	ss cdq 
  411287:	aas    
  411288:	push   ecx
  411289:	push   ebp
  41128a:	mov    ebx,DWORD PTR [eax-0x5]
  41128d:	sbb    BYTE PTR [ecx-0x10],ah
  411290:	inc    ebx
  411291:	loopne 0x41129d
  411293:	sbb    edx,ebx
  411295:	add    al,0xd6
  411297:	and    eax,0x6685ba7f
  41129c:	or     bl,BYTE PTR [ebp-0x766209a5]
  4112a2:	cmp    DWORD PTR [edx-0x9],eax
  4112a5:	popf   
  4112a6:	sbb    edi,DWORD PTR [edx-0x2693888f]
  4112ac:	sub    eax,0x841a4f85
  4112b1:	jecxz  0x41129c
  4112b3:	call   0x1b44af6c
  4112b8:	and    al,0x12
  4112ba:	mov    ds,WORD PTR [esi]
  4112bc:	(bad)  
  4112bd:	icebp  
  4112be:	sub    al,0xbc
  4112c0:	fisttp QWORD PTR [eax]
  4112c2:	cmp    dh,BYTE PTR [ebp-0x76958ba8]
  4112c8:	pop    edi
  4112c9:	es inc ebx
  4112cb:	in     eax,dx
  4112cc:	inc    esi
  4112cd:	loope  0x41131e
  4112cf:	dec    esi
  4112d0:	xchg   edi,eax
  4112d1:	adc    dh,BYTE PTR [edi]
  4112d3:	mov    ch,0x6
  4112d5:	sbb    edi,DWORD PTR [ebx]
  4112d7:	scas   eax,DWORD PTR es:[edi]
  4112d8:	push   edx
  4112d9:	mov    ds:0x67461cfa,al
  4112de:	shl    BYTE PTR [ecx+0x689432ba],cl
  4112e4:	adc    al,0xb7
  4112e6:	mov    edi,edi
  4112e8:	aas    
  4112e9:	push   0x13c85d8c
  4112ee:	sti    
  4112ef:	push   0xad8d9205
  4112f4:	sbb    eax,0x833a9cc1
  4112f9:	push   esp
  4112fa:	mul    BYTE PTR [esi+edx*1-0x40d48641]
  411301:	pushf  
  411302:	mov    ch,0x2d
  411304:	adc    BYTE PTR [esi+0x6],al
  411307:	aaa    
  411308:	mov    ds:0x9b029fb2,eax
  41130d:	dec    ebp
  41130e:	xor    DWORD PTR [edx-0x2ca2cfef],ecx
  411314:	jnp    0x4112bd
  411316:	les    edi,FWORD PTR [edx+0x59db53ce]
  41131c:	mov    bh,0x4
  41131e:	and    eax,0x99997a7c
  411323:	lods   al,BYTE PTR ds:[esi]
  411324:	popf   
  411325:	add    al,0xd8
  411327:	in     al,dx
  411328:	inc    esi
  411329:	into   
  41132a:	test   eax,0x2e24eae8
  41132f:	sti    
  411330:	je     0x4113ab
  411332:	(bad)  
  411333:	pop    esi
  411334:	hlt    
  411335:	aas    
  411336:	cs push edi
  411338:	add    DWORD PTR [esi+eax*8-0xb],eax
  41133c:	add    DWORD PTR [edx],esi
  41133e:	sbb    DWORD PTR [edx],eax
  411340:	inc    eax
  411341:	mov    al,ds:0x7fc057f9
  411346:	out    dx,eax
  411347:	push   es
  411348:	dec    edi
  411349:	ror    bh,0x11
  41134c:	jo     0x41130f
  41134e:	call   0xbb0dddd5
  411353:	lock sub al,0x66
  411356:	or     cl,BYTE PTR [edx]
  411358:	or     dl,BYTE PTR [ecx-0x46fa0c4f]
  41135e:	(bad)
  411361:	inc    edx
  411362:	es stos DWORD PTR es:[edi],eax
  411364:	popf   
  411365:	inc    esp
  411366:	mov    edi,0xfe110022
  41136b:	mov    dh,0x36
  41136d:	das    
  41136e:	sti    
  41136f:	dec    ebp
  411370:	lea    ebx,[esi]
  411372:	sub    al,0xf
  411374:	pop    ebx
  411375:	in     eax,dx
  411376:	sub    DWORD PTR [esi-0x53],ebp
  411379:	in     eax,0x8b
  41137b:	mov    dl,BYTE PTR [esp+ecx*2]
  41137e:	jno    0x4113d6
  411380:	sbb    al,0x9
  411382:	jb     0x411321
  411384:	sar    DWORD PTR [edx],0x9f
  411387:	and    DWORD PTR [eax+0x37],ecx
  41138a:	mov    cl,0x80
  41138c:	mov    DWORD PTR [edx+0x3f171553],esp
  411392:	inc    esi
  411393:	lds    edx,FWORD PTR [ecx-0x7c]
  411396:	fcmovu st,st(3)
  411398:	and    al,0x83
  41139a:	ret    
  41139b:	mov    ds:0xf1404743,al
  4113a0:	or     DWORD PTR [ebx],0x59a0a5b2
  4113a6:	std    
  4113a7:	inc    esp
  4113a8:	ins    BYTE PTR es:[edi],dx
  4113a9:	or     DWORD PTR [edi+0x29c196b9],edx
  4113af:	fwait
  4113b0:	mov    al,ds:0xf93e3562
  4113b5:	mov    WORD PTR [ebp+0x2d54009c],cs
  4113bb:	fwait
  4113bc:	retf   
  4113bd:	daa    
  4113be:	mov    dl,0x89
  4113c0:	mov    bl,BYTE PTR [edi]
  4113c2:	adc    eax,0x8c504925
  4113c7:	sbb    BYTE PTR [edi+0x40],dl
  4113ca:	in     al,dx
  4113cb:	sti    
  4113cc:	add    al,0xa9
  4113ce:	outs   dx,BYTE PTR ds:[esi]
  4113cf:	cs jmp 0x4113d2
  4113d2:	outs   dx,BYTE PTR ds:[esi]
  4113d3:	adc    dl,ah
  4113d5:	mov    esp,0x5385a130
  4113da:	lock icebp 
  4113dc:	pop    eax
  4113dd:	dec    esi
  4113de:	jecxz  0x411400
  4113e0:	in     eax,dx
  4113e1:	(bad)  
  4113e3:	sub    eax,0xdff68c2
  4113e8:	test   eax,0x30fd3c67
  4113ed:	out    0x32,eax
  4113ef:	inc    edx
  4113f0:	mov    ah,0x5d
  4113f2:	and    ah,BYTE PTR [edi-0x72d345d0]
  4113f8:	sbb    ah,BYTE PTR ds:0x43e1d746
  4113fe:	dec    edx
  4113ff:	ja     0x4113e7
  411401:	jmp    0x41146f
  411403:	xor    al,al
  411405:	inc    esp
  411406:	cmp    BYTE PTR [edx+0x1da05336],ch
  41140c:	dec    eax
  41140d:	and    BYTE PTR [edi-0x734dec0f],0xc7
  411414:	inc    esp
  411415:	pop    eax
  411416:	(bad)  
  411417:	aad    0x94
  411419:	push   ss
  41141a:	lods   eax,DWORD PTR ds:[esi]
  41141b:	mov    ch,BYTE PTR [edi+0x73c67034]
  411421:	and    edi,DWORD PTR [edi+0x2bd12f1b]
  411427:	or     BYTE PTR [edx-0x6ebd4e23],cl
  41142d:	cli    
  41142e:	push   0xc6071f45
  411433:	test   eax,0xccd0b55d
  411438:	adc    edi,0xfbc87028
  41143e:	(bad)  
  41143f:	stos   DWORD PTR es:[edi],eax
  411440:	and    eax,0xfd9d141b
  411445:	cld    
  411446:	mov    ebp,0x92aac220
  41144b:	dec    ecx
  41144c:	lock and ebx,DWORD PTR [edx]
  41144f:	lea    ecx,[eax+0x23]
  411452:	loope  0x411439
  411454:	jmp    0x46f8:0xfe74c62c
  41145b:	jecxz  0x4113ee
  41145d:	fdiv   st(3),st
  41145f:	shl    al,cl
  411461:	xchg   esi,eax
  411462:	xchg   edi,eax
  411463:	and    DWORD PTR [ebp+0xaff60b3],esi
  411469:	sub    eax,0xc90bc7a8
  41146e:	in     al,dx
  41146f:	jge    0x411442
  411471:	pop    esi
  411472:	std    
  411473:	xor    bh,ah
  411475:	pop    ds
  411476:	stos   DWORD PTR es:[edi],eax
  411477:	(bad)  
  411479:	loopne 0x41142c
  41147b:	popf   
  41147c:	jmp    0xad39:0xcc1421f2
  411483:	xchg   edi,eax
  411484:	mov    BYTE PTR [edx],dl
  411486:	daa    
  411487:	mov    DWORD PTR [eax],esp
  411489:	adc    DWORD PTR [ebx],ebx
  41148b:	retf   
  41148c:	div    DWORD PTR [edi+0x231d513a]
  411492:	jl     0x41142d
  411494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411495:	(bad)  
  411496:	jge    0x4114d0
  411498:	int3   
  411499:	mov    ebx,0x348a9aba
  41149e:	call   0x34b9:0x1f0fe2dc
  4114a5:	stos   DWORD PTR es:[edi],eax
  4114a6:	add    dh,bh
  4114a8:	ins    BYTE PTR es:[edi],dx
  4114a9:	arpl   WORD PTR [ecx+0x34],bp
  4114ac:	push   esi
  4114ad:	dec    esi
  4114ae:	inc    ecx
  4114af:	sahf   
  4114b0:	mov    cl,0x86
  4114b2:	sbb    al,0x77
  4114b4:	dec    esp
  4114b5:	fsubr  QWORD PTR [eax]
  4114b7:	mov    ah,0x3d
  4114b9:	push   es
  4114ba:	push   esp
  4114bb:	and    edx,DWORD PTR [edi]
  4114bd:	sbb    BYTE PTR [ebp+0x14],0xc2
  4114c1:	sbb    ah,al
  4114c3:	fidiv  WORD PTR [esi+0x78]
  4114c6:	stos   BYTE PTR es:[edi],al
  4114c7:	xchg   esi,eax
  4114c8:	or     eax,0xaaad26b2
  4114cd:	hlt    
  4114ce:	loop   0x41149e
  4114d0:	add    esp,DWORD PTR [edi+0x12]
  4114d3:	popa   
  4114d4:	call   0xe224cf2
  4114d9:	add    cl,BYTE PTR [edx-0x10]
  4114dc:	jl     0x41145f
  4114de:	neg    edi
  4114e0:	je     0x4114c1
  4114e2:	jp     0x4114b0
  4114e4:	leave  
  4114e5:	adc    DWORD PTR [edx],esi
  4114e7:	imul   edi,DWORD PTR [ebx-0xbbc3852],0x12
  4114ee:	dec    eax
  4114ef:	test   DWORD PTR [edi+edi*8+0x9444eab],ebp
  4114f6:	cwde   
  4114f7:	popa   
  4114f8:	ins    BYTE PTR es:[edi],dx
  4114f9:	sbb    ch,dl
  4114fb:	lock cwde 
  4114fd:	or     dl,BYTE PTR [ebx-0x100c439d]
  411503:	xlat   BYTE PTR ds:[ebx]
  411504:	or     bl,BYTE PTR [esi+0x1d]
  411507:	(bad)  
  411508:	ss ss hlt 
  41150b:	call   0x48662df1
  411510:	mov    eax,ds:0x1ca1d9d3
  411515:	push   0x99ccb797
  41151a:	push   ebp
  41151b:	and    al,bh
  41151d:	add    esp,DWORD PTR [edx-0x2]
  411520:	jb     0x41154b
  411522:	js     0x411549
  411524:	cmp    bh,BYTE PTR [edi-0x429132ce]
  41152a:	rol    DWORD PTR [esi-0x3],cl
  41152d:	cmp    esi,ebp
  41152f:	or     BYTE PTR [edi+edx*2],dl
  411532:	push   ds
  411533:	cmp    esi,eax
  411535:	jb     0x41157d
  411537:	pushf  
  411538:	xlat   BYTE PTR ds:[ebx]
  411539:	add    dh,BYTE PTR [esi+0x21]
  41153c:	fbstp  TBYTE PTR [edi-0x2e6b79c2]
  411542:	cmp    eax,0x176c4c66
  411547:	(bad)  
  411548:	mov    ebx,0x451bc86
  41154d:	pop    ss
  41154e:	mov    edx,0x902059c6
  411553:	hlt    
  411554:	dec    esi
  411555:	pop    ebp
  411556:	in     al,0x57
  411558:	push   0xffffffff
  41155a:	retf   
  41155b:	mov    ebx,0xb22a0f9c
  411560:	mov    al,0xc0
  411562:	arpl   WORD PTR [ebx],bp
  411564:	pop    esp
  411565:	xlat   BYTE PTR ds:[ebx]
  411566:	sbb    bl,BYTE PTR [edx+0x27]
  411569:	stc    
  41156a:	push   es
  41156b:	ficomp WORD PTR [edx]
  41156d:	rcl    esi,0xdd
  411570:	daa    
  411571:	pop    ebx
  411572:	(bad)  
  411573:	jl     0x4114f5
  411575:	xchg   esp,eax
  411576:	mov    ecx,0xfe2dec37
  41157b:	clc    
  41157c:	fcmovbe st,st(3)
  41157e:	call   0x4067bb43
  411583:	retf   
  411584:	icebp  
  411585:	(bad)  
  411586:	sbb    edi,DWORD PTR [esi+0x4b0837a8]
  41158c:	pop    edi
  41158d:	inc    ebp
  41158e:	outs   dx,DWORD PTR ds:[esi]
  41158f:	xchg   esp,eax
  411590:	int3   
  411591:	lock add DWORD PTR [esi],ebp
  411594:	icebp  
  411595:	add    al,0x88
  411597:	xchg   ebx,eax
  411598:	sub    al,0xd5
  41159a:	mov    edx,0x35157f82
  41159f:	imul   ecx,eax,0x66e7ddbf
  4115a5:	ffree  st(3)
  4115a7:	cmp    al,0xe5
  4115a9:	adc    DWORD PTR [ebp-0x26],esp
  4115ac:	lds    edx,FWORD PTR [edx-0x55da3088]
  4115b2:	mov    eax,0xc2fb6316
  4115b7:	jmp    0x580d8e79
  4115bc:	pop    ebp
  4115bd:	pusha  
  4115be:	add    eax,0x50087e38
  4115c3:	popf   
  4115c4:	xchg   ecx,eax
  4115c5:	and    DWORD PTR [edi-0x8],esp
  4115c8:	mov    dl,0x9e
  4115ca:	rcr    BYTE PTR [esi+0x15],cl
  4115cd:	enter  0xc4df,0x70
  4115d1:	mov    gs,WORD PTR [edi]
  4115d3:	test   DWORD PTR [esi+ebp*4+0x3c9bb8dd],esp
  4115da:	mov    eax,ds:0x7d23b122
  4115df:	mov    eax,ds:0x39a74b7
  4115e4:	lds    edx,FWORD PTR [eax+0x2691d2c4]
  4115ea:	xchg   esi,eax
  4115eb:	mov    edx,esp
  4115ed:	mov    edi,0xb5e85918
  4115f2:	xor    eax,0xed7ab7b4
  4115f7:	jecxz  0x411618
  4115f9:	fistp  QWORD PTR [eax+0x79024636]
  4115ff:	pop    eax
  411600:	rol    DWORD PTR [edx-0x30],cl
  411603:	adc    dh,BYTE PTR [edi]
  411605:	iret   
  411606:	sbb    eax,0xe30dac19
  41160b:	xchg   esp,eax
  41160c:	mov    ecx,0x21e79ec8
  411611:	ins    BYTE PTR es:[edi],dx
  411612:	inc    DWORD PTR [edx-0xa]
  411615:	pop    ecx
  411616:	mov    ch,0xa8
  411618:	and    al,0x85
  41161a:	rcr    BYTE PTR [ebx+0x65d0ccaf],0xa5
  411621:	rol    BYTE PTR [edx],1
  411623:	mov    bh,0xd6
  411625:	push   eax
  411626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411627:	jno    0x411647
  411629:	(bad)  
  41162a:	xlat   BYTE PTR ds:[ebx]
  41162b:	test   DWORD PTR [edx],edi
  41162d:	xor    BYTE PTR [esi+eax*8+0x49e683d5],cl
  411634:	xchg   ecx,eax
  411635:	(bad)  
  411636:	loopne 0x411606
  411638:	dec    edi
  411639:	outs   dx,BYTE PTR ds:[esi]
  41163a:	ins    DWORD PTR es:[edi],dx
  41163b:	mov    al,ds:0x7e914abd
  411640:	or     eax,0xa6fff487
  411645:	(bad)  
  411646:	pop    ebp
  411647:	mov    bh,0xc5
  411649:	push   es
  41164a:	push   es
  41164b:	popf   
  41164c:	out    dx,eax
  41164d:	dec    ecx
  41164e:	fld    TBYTE PTR [ecx+ebp*4+0x3f]
  411652:	add    esp,DWORD PTR gs:[eax-0x6b73a858]
  411659:	mov    eax,ds:0x5a34ff4f
  41165e:	arpl   WORD PTR [ebx-0x27c490ef],dx
  411664:	es cmp eax,0xbf11a2f0
  41166a:	or     DWORD PTR [ebx],ecx
  41166c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166d:	fmul   QWORD PTR [eax-0x20ae1afe]
  411673:	sbb    dl,BYTE PTR [ebx+esi*4+0x2f]
  411677:	jns    0x4116f0
  411679:	adc    cl,0xac
  41167c:	push   edx
  41167d:	cld    
  41167e:	add    al,0x5
  411680:	stos   DWORD PTR es:[edi],eax
  411681:	push   0x2d3a1b30
  411686:	xor    esi,DWORD PTR [ebx+esi*1-0x5c]
  41168a:	out    0x5d,al
  41168c:	mov    WORD PTR [ecx],es
  41168e:	(bad)  
  411690:	jle    0x411621
  411692:	enter  0x191a,0xf9
  411696:	and    ebp,edi
  411698:	aad    0xdc
  41169a:	jmp    0xac72:0x6d3431b7
  4116a1:	ins    BYTE PTR es:[edi],dx
  4116a2:	and    BYTE PTR [ecx+0x67],bh
  4116a5:	xchg   ebx,eax
  4116a6:	test   eax,0xbcdb3388
  4116ab:	sar    BYTE PTR [ecx-0x7479e8b5],1
  4116b1:	push   ebp
  4116b2:	jg     0x4116c0
  4116b4:	jl     0x4116a3
  4116b6:	xchg   esi,eax
  4116b7:	inc    edi
  4116b8:	mov    eax,ds:0x9920850d
  4116bd:	stc    
  4116be:	stos   BYTE PTR es:[edi],al
  4116bf:	cmp    al,0x84
  4116c1:	add    eax,0x84c026f6
  4116c6:	out    dx,al
  4116c7:	mov    edi,0x170f4699
  4116cc:	fdiv   DWORD PTR [ebx+0xc16563e]
  4116d2:	imul   edi,DWORD PTR [edi+edx*4+0x2e033c5c],0xbdeec8c2
  4116dd:	push   eax
  4116de:	pop    edx
  4116df:	fld    DWORD PTR [ebx-0x93d894b]
  4116e5:	pusha  
  4116e6:	jecxz  0x4116e3
  4116e8:	pop    esp
  4116e9:	call   0xa62a7df6
  4116ee:	ror    edi,1
  4116f0:	jle    0x4116d4
  4116f2:	call   0xe6222e4e
  4116f7:	test   DWORD PTR [edx-0xe0cdbd9],edx
  4116fd:	or     al,0xd9
  4116ff:	pop    ecx
  411700:	push   ecx
  411701:	mov    esi,0x23c6fbe0
  411706:	bound  ebp,QWORD PTR [ecx+0xddcbe]
  41170c:	(bad)  
  41170d:	stos   BYTE PTR es:[edi],al
  41170e:	enter  0x37ca,0x4c
  411712:	mov    esp,0xba10f97b
  411717:	fwait
  411718:	pop    ecx
  411719:	repnz inc ebp
  41171b:	cmp    al,0x7a
  41171d:	(bad)  
  41171e:	scas   eax,DWORD PTR es:[edi]
  41171f:	fcmovnb st,st(7)
  411721:	mov    bh,0x62
  411723:	xchg   esp,eax
  411724:	xor    eax,0xd944ad41
  411729:	stos   BYTE PTR es:[edi],al
  41172a:	adc    edx,DWORD PTR [ebx-0x74]
  41172d:	mov    bl,BYTE PTR [edx-0x4f]
  411730:	inc    ecx
  411731:	sbb    eax,0x15b1e42c
  411736:	mov    ebp,0x4413722d
  41173b:	clc    
  41173c:	mov    cl,0xed
  41173e:	push   ds
  41173f:	call   0xe6f7:0x4ef38955
  411746:	mov    ds:0x5eea1ae9,eax
  41174b:	lea    ecx,[edx]
  41174d:	lods   al,BYTE PTR ds:[esi]
  41174e:	mov    ebp,0x9ee4cf68
  411753:	cs stc 
  411755:	dec    ecx
  411756:	and    al,ch
  411758:	outs   dx,DWORD PTR ds:[esi]
  411759:	scas   eax,DWORD PTR es:[edi]
  41175a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41175b:	adc    esp,DWORD PTR [eax-0x22]
  41175e:	mov    dh,cl
  411760:	mov    ebp,DWORD PTR [ebx]
  411762:	ins    BYTE PTR es:[edi],dx
  411763:	inc    eax
  411764:	jmp    0x41e:0xd022bb42
  41176b:	int3   
  41176c:	add    al,0xa3
  41176e:	dec    edx
  41176f:	lock mov eax,0x8ee5691b
  411775:	jecxz  0x4117e4
  411777:	mov    bl,0x6a
  411779:	pop    edi
  41177a:	pop    edx
  41177b:	cmp    DWORD PTR [eax+esi*4+0x24],edi
  41177f:	or     eax,0x18ae7afc
  411784:	push   esp
  411785:	xor    al,BYTE PTR [ecx]
  411787:	sti    
  411788:	repz push edi
  41178a:	xor    al,0xa8
  41178c:	mov    ds:0x60a8193a,eax
  411791:	xchg   bl,ch
  411793:	das    
  411794:	inc    edi
  411795:	(bad)  
  411796:	jno    0x411759
  411798:	aad    0xb5
  41179a:	push   0xc0aabd08
  41179f:	pop    ss
  4117a0:	xchg   edx,eax
  4117a1:	dec    ebx
  4117a2:	inc    ebx
  4117a3:	jne    0x411786
  4117a5:	loop   0x411776
  4117a7:	push   es
  4117a8:	pop    edi
  4117a9:	lods   eax,DWORD PTR ds:[esi]
  4117aa:	je     0x41182a
  4117ac:	jp     0x4117b1
  4117ae:	cmp    BYTE PTR [edi-0x19107d4b],0x8c
  4117b5:	mov    dl,0x32
  4117b7:	add    BYTE PTR [esp+edi*1-0x3d6628a8],ch
  4117be:	jo     0x411810
  4117c0:	aas    
  4117c1:	mov    esp,0x19cdd862
  4117c6:	xchg   esp,eax
  4117c7:	inc    esp
  4117c8:	xor    DWORD PTR [ecx-0x207b08cd],ebp
  4117ce:	inc    edx
  4117cf:	(bad)  
  4117d0:	mov    edx,0xe1d27ef3
  4117d5:	push   ebp
  4117d6:	and    al,bh
  4117d8:	push   cs
  4117d9:	dec    edx
  4117da:	cli    
  4117db:	(bad)  
  4117dc:	or     dh,BYTE PTR [ebx-0x3afc56ff]
  4117e2:	mov    ds:0xf49d3e67,eax
  4117e7:	into   
  4117e8:	in     al,0x6a
  4117ea:	test   al,0x55
  4117ec:	sub    ah,al
  4117ee:	inc    eax
  4117ef:	cmc    
  4117f0:	add    ecx,DWORD PTR [eax-0x16382012]
  4117f6:	mov    ah,0x3b
  4117f8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4117fa:	jb     0x4117f9
  4117fc:	gs mov bh,0xaa
  4117ff:	cmp    dl,BYTE PTR [edi*8+0x6fa65310]
  411806:	sub    esi,DWORD PTR [ebp-0x64ed0492]
  41180c:	frstor [esi-0x34]
  41180f:	sbb    BYTE PTR [esi],dl
  411811:	xor    ch,BYTE PTR [ebp+0x708b43ad]
  411817:	pusha  
  411818:	and    DWORD PTR ds:0x2f636d89,ecx
  41181e:	inc    ebx
  41181f:	dec    ebp
  411820:	ret    
  411821:	nop
  411822:	dec    edx
  411823:	pop    ecx
  411824:	test   al,0x93
  411826:	mov    ebx,DWORD PTR [edi]
  411828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411829:	fs nop
  41182b:	mov    ?,WORD PTR [esi+0xf2b05ec]
  411831:	ret    0x66e1
  411834:	mov    edx,edi
  411836:	mov    bh,0x54
  411838:	xchg   esi,eax
  411839:	inc    edx
  41183a:	mov    es,ebx
  41183c:	jne    0x411896
  41183e:	rol    DWORD PTR [edi+eiz*1],1
  411841:	add    esi,DWORD PTR [edi-0x4da6b57e]
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xe3a8ba54
  411868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411869:	repz hlt 
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x1f]
  411873:	cmps   BYTE PTR ss:[si],BYTE PTR es:[di]
  411876:	icebp  
  411877:	jp     0x41188a
  411879:	cmp    ecx,DWORD PTR [eax-0x4b]
  41187c:	mov    ch,0x99
  41187e:	neg    BYTE PTR [ebp-0x6fd5e1e3]
  411884:	pop    esp
  411885:	ins    BYTE PTR es:[edi],dx
  411886:	cwde   
  411887:	lods   eax,DWORD PTR ds:[esi]
  411888:	add    ch,BYTE PTR [edi+ebp*8-0x59f40bc8]
  41188f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411890:	mov    edx,0x6d6a1bc1
  411895:	rcr    esp,0x3b
  411898:	mov    al,BYTE PTR [esi]
  41189a:	dec    ebx
  41189b:	enter  0x2913,0x97
  41189f:	mov    ds:0xaf0d31ef,al
  4118a4:	hlt    
  4118a5:	and    bh,BYTE PTR [esi+0x7cf1bf33]
  4118ab:	xchg   ebp,eax
  4118ac:	imul   esp,DWORD PTR [edx],0x1f
  4118af:	dec    ebx
  4118b0:	sbb    ecx,eax
  4118b2:	shl    DWORD PTR gs:[ebp-0x29],1
  4118b6:	nop
  4118b7:	jmp    0x4decb0c6
  4118bc:	pop    edx
  4118bd:	add    esp,DWORD PTR [edi-0x4f]
  4118c0:	pop    eax
  4118c1:	jmp    0x4118d3
  4118c3:	adc    dh,BYTE PTR [edi]
  4118c5:	mov    ebx,0x128d0946
  4118ca:	mov    ebx,0x85c0c9f5
  4118cf:	pop    ecx
  4118d0:	sahf   
  4118d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d2:	rcr    DWORD PTR [edi-0x44],0x9c
  4118d6:	sbb    bl,BYTE PTR [edx-0x18]
  4118d9:	loopne 0x41193b
  4118db:	mov    ch,0xa3
  4118dd:	pop    edi
  4118de:	ret    0xbbb2
  4118e1:	je     0x4118e6
  4118e3:	or     esi,0x891289d0
  4118e9:	mov    dh,cl
  4118eb:	inc    ecx
  4118ec:	adc    DWORD PTR [esi+0x15],ebp
  4118ef:	out    0xae,al
  4118f1:	jp     0x411957
  4118f3:	and    DWORD PTR [ecx+0x0],edx
  4118f6:	mov    dh,0xed
  4118f8:	in     al,dx
  4118f9:	(bad)  
  4118fa:	or     ch,BYTE PTR [ecx-0x5e]
  4118fd:	shl    DWORD PTR [ebp-0x62afc41f],1
  411903:	in     eax,dx
  411904:	test   BYTE PTR [ebp+0x3a4bc65f],ch
  41190a:	test   eax,0xe379767a
  41190f:	pop    es
  411910:	inc    edx
  411911:	mov    WORD PTR [esi+ebp*8+0x30],ss
  411915:	push   ebp
  411916:	loopne 0x4118f8
  411918:	stc    
  411919:	jns    0x41196b
  41191b:	mov    esi,0xfb6c294a
  411920:	(bad)  
  411921:	test   al,0xbe
  411923:	mov    al,ds:0x585b1857
  411928:	ror    bl,0x2a
  41192b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192c:	(bad)  
  41192d:	mov    ebp,0xc2c71acf
  411932:	neg    bh
  411934:	imul   edi,edi,0xf0a6d823
  41193a:	mov    esp,0x3e41994b
  41193f:	neg    ebp
  411941:	mov    ds:0xa8a77563,eax
  411946:	retf   
  411947:	mov    ebx,0x9e46e2a4
  41194c:	inc    eax
  41194d:	bound  esp,QWORD PTR [ebx+0x8a4db64]
  411953:	daa    
  411954:	dec    ebx
  411955:	ja     0x411977
  411957:	jge    0x411956
  411959:	aam    0x4b
  41195b:	adc    bh,BYTE PTR [ecx]
  41195d:	adc    al,0x45
  41195f:	call   0x4d8c:0x5498853d
  411966:	loope  0x4118e9
  411968:	xchg   esi,eax
  411969:	jb     0x4118eb
  41196b:	fwait
  41196c:	mov    ebx,0xf99c0951
  411971:	ret    0xfe7
  411974:	jnp    0x4119ed
  411976:	push   es
  411977:	xlat   BYTE PTR ds:[ebx]
  411978:	jmp    FWORD PTR [edx+0x13]
  41197b:	push   edx
  41197c:	repnz inc eax
  41197e:	fistp  QWORD PTR [eax]
  411980:	aaa    
  411981:	retf   
  411982:	aam    0x5e
  411984:	daa    
  411985:	in     eax,0x45
  411987:	xchg   edi,eax
  411988:	out    0xc0,al
  41198a:	stos   DWORD PTR es:[edi],eax
  41198b:	clc    
  41198c:	je     0x411a03
  41198e:	cmp    esp,DWORD PTR [ecx+0x6f15597d]
  411994:	iret   
  411995:	icebp  
  411996:	ins    BYTE PTR es:[edi],dx
  411997:	mov    ds:0x350c786e,al
  41199c:	out    dx,eax
  41199d:	xchg   ebx,eax
  41199e:	sbb    esp,ecx
  4119a0:	dec    esi
  4119a1:	jmp    0x6bccf24a
  4119a6:	(bad)  
  4119a7:	fild   DWORD PTR [ebx-0x4278519e]
  4119ad:	push   ds
  4119ae:	xchg   esi,eax
  4119af:	(bad)  
  4119b0:	lods   al,BYTE PTR ds:[esi]
  4119b1:	mov    bl,0x58
  4119b3:	cmp    bh,ch
  4119b5:	xchg   ebp,eax
  4119b6:	inc    esi
  4119b7:	xchg   esp,eax
  4119b8:	sub    bh,al
  4119ba:	call   0x227d1807
  4119bf:	gs mov ebx,0x127e599c
  4119c5:	mov    ds:0xbf324b5d,eax
  4119ca:	sub    al,0x1e
  4119cc:	fs inc esi
  4119ce:	test   BYTE PTR [esi],dh
  4119d0:	push   ss
  4119d1:	loop   0x411997
  4119d3:	pop    edx
  4119d4:	in     eax,dx
  4119d5:	jl     0x411993
  4119d7:	jecxz  0x411988
  4119d9:	(bad)  
  4119da:	stos   BYTE PTR es:[edi],al
  4119db:	ins    DWORD PTR es:[edi],dx
  4119dc:	add    al,0x88
  4119de:	add    eax,DWORD PTR [ecx]
  4119e0:	cs iret 
  4119e2:	call   0x24a2:0x4c862fb1
  4119e9:	lods   eax,DWORD PTR ds:[esi]
  4119ea:	mov    bh,0x9e
  4119ec:	xor    eax,0x41fd0615
  4119f1:	mov    ah,0xd2
  4119f3:	imul   eax,DWORD PTR [eax],0x5515b1c0
  4119f9:	mov    bl,0xee
  4119fb:	fs dec eax
  4119fd:	sbb    bh,BYTE PTR [ebp-0x63]
  411a00:	in     al,dx
  411a01:	pop    es
  411a02:	in     eax,dx
  411a03:	cli    
  411a04:	push   ecx
  411a05:	sti    
  411a06:	or     DWORD PTR [esi+eax*2-0x2b],0x3f9e8adf
  411a0e:	adc    BYTE PTR [ecx-0x34edb09c],bh
  411a14:	in     al,dx
  411a15:	rcl    DWORD PTR [esi+0x77],cl
  411a18:	ja     0x4119f4
  411a1a:	xchg   ebx,eax
  411a1b:	pop    ebp
  411a1c:	cmp    ecx,edx
  411a1e:	adc    al,0x1c
  411a20:	cmp    DWORD PTR ds:0x7e7dc7ce,edi
  411a26:	lods   eax,DWORD PTR ds:[esi]
  411a27:	lgdtd  [edi-0x3cad747b]
  411a2e:	mov    ah,0x3e
  411a30:	out    0x5c,al
  411a32:	inc    esp
  411a33:	ds mov bh,0xae
  411a36:	lods   al,BYTE PTR ds:[esi]
  411a37:	xchg   BYTE PTR [eax+0x32],bl
  411a3a:	test   BYTE PTR [edi+0x3],ah
  411a3d:	test   DWORD PTR [edx+0x3d],esi
  411a40:	dec    eax
  411a41:	xchg   esp,eax
  411a42:	ins    BYTE PTR es:[edi],dx
  411a43:	mov    ah,0x0
  411a45:	jmp    0xa301:0x2c0c7440
  411a4c:	sbb    dh,BYTE PTR [edx-0x4c]
  411a4f:	(bad)  
  411a50:	lds    ecx,FWORD PTR [ebx]
  411a52:	(bad)  
  411a53:	adc    eax,0x3419ed06
  411a58:	mov    bh,0xd0
  411a5a:	pop    ss
  411a5b:	push   0x8c775f47
  411a60:	pop    ss
  411a61:	addr16 int 0xe9
  411a64:	mov    eax,ds:0xd404c5ca
  411a69:	shr    BYTE PTR [edi-0x5fd46ffc],cl
  411a6f:	cs ds mov edi,0x48fcabb
  411a76:	pop    eax
  411a77:	mov    ecx,0x3c7d0270
  411a7c:	fs aaa 
  411a7e:	xchg   esi,eax
  411a7f:	cs pushf 
  411a81:	pop    ss
  411a82:	in     eax,dx
  411a83:	stos   DWORD PTR es:[edi],eax
  411a84:	out    dx,eax
  411a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a86:	mov    ebp,0xdaa82e46
  411a8b:	repz in al,0x37
  411a8e:	mov    ds:0x9952a1c0,eax
  411a93:	cmp    bl,BYTE PTR [ecx-0x25]
  411a96:	retf   0x6fa8
  411a99:	mov    edx,DWORD PTR [ebx]
  411a9b:	sub    al,0x22
  411a9d:	xor    eax,esi
  411a9f:	add    dh,BYTE PTR [ebp+0xd]
  411aa2:	lahf   
  411aa3:	jp     0x411ad8
  411aa5:	lods   eax,DWORD PTR ds:[esi]
  411aa6:	test   BYTE PTR [ecx+0x229e0b90],dl
  411aac:	or     eax,0x78c28378
  411ab1:	aad    0x8b
  411ab3:	les    esp,FWORD PTR [ebp+0x38]
  411ab6:	push   es
  411ab7:	das    
  411ab8:	cld    
  411ab9:	sbb    ch,BYTE PTR [edx]
  411abb:	sub    DWORD PTR [esi+ebp*4],esi
  411abe:	jle    0x411b2c
  411ac0:	outs   dx,BYTE PTR ds:[esi]
  411ac1:	ret    
  411ac2:	repnz fsubr st(2),st
  411ac5:	push   es
  411ac6:	test   al,0x2e
  411ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac9:	or     al,0xba
  411acb:	or     al,0x71
  411acd:	push   ebp
  411ace:	call   0xf78b:0xb84dae21
  411ad5:	mov    al,ds:0x89cab5a1
  411ada:	xchg   ebp,eax
  411adb:	dec    esi
  411adc:	xchg   esp,eax
  411add:	stos   BYTE PTR es:[edi],al
  411ade:	mov    al,BYTE PTR [ecx+0x870924b]
  411ae4:	push   0xffffffd4
  411ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae8:	mov    cl,0x8e
  411aea:	and    bh,BYTE PTR [esi-0x16]
  411aed:	xor    cl,BYTE PTR [eax+0x4b2c8b23]
  411af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af4:	in     eax,dx
  411af5:	inc    eax
  411af6:	jg     0x411b0c
  411af8:	push   esp
  411af9:	add    DWORD PTR [ebp-0x4],ecx
  411afc:	fnstcw WORD PTR [esi+0x249f5609]
  411b02:	fxch   st(6)
  411b04:	in     al,0x3a
  411b06:	jecxz  0x411b1f
  411b08:	xor    ecx,0xffffff95
  411b0b:	fwait
  411b0c:	push   ecx
  411b0d:	jbe    0x411ab3
  411b0f:	popa   
  411b10:	nop
  411b11:	mov    bh,BYTE PTR [edx-0x2c84d15e]
  411b17:	popa   
  411b18:	xchg   edi,eax
  411b19:	sar    cl,cl
  411b1b:	mov    edx,0xf313caaf
  411b20:	clc    
  411b21:	adc    bl,BYTE PTR [ecx+eiz*8-0x139d9d45]
  411b28:	(bad)  
  411b29:	adc    eax,0xc57d36b
  411b2e:	outs   dx,BYTE PTR ds:[esi]
  411b2f:	sbb    bl,bh
  411b31:	fimul  WORD PTR [eax-0x1bc983fb]
  411b37:	dec    esp
  411b38:	and    edi,esp
  411b3a:	cwde   
  411b3b:	dec    edi
  411b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b3d:	in     al,dx
  411b3e:	xchg   ebp,eax
  411b3f:	sub    bl,BYTE PTR [edi-0x56c7916b]
  411b45:	xor    ch,BYTE PTR [eax]
  411b47:	add    al,0x84
  411b49:	aam    0xef
  411b4b:	in     eax,0x70
  411b4d:	inc    edi
  411b4e:	adc    BYTE PTR [edx],bl
  411b50:	ins    BYTE PTR es:[edi],dx
  411b51:	inc    edx
  411b52:	jp     0x411ae2
  411b54:	addr16 sub edi,ecx
  411b57:	fiadd  WORD PTR [edi]
  411b59:	jmp    0x4ab9:0xb35052c3
  411b60:	aaa    
  411b61:	pushf  
  411b62:	cwde   
  411b63:	push   esp
  411b64:	jle    0x411aef
  411b66:	popf   
  411b67:	lahf   
  411b68:	cld    
  411b69:	inc    esi
  411b6a:	int    0x70
  411b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b6d:	sub    ebp,DWORD PTR [ebx]
  411b6f:	mov    ch,0xf6
  411b71:	dec    esp
  411b72:	clc    
  411b73:	xchg   ebp,eax
  411b74:	lahf   
  411b75:	cmp    eax,0x72a89d67
  411b7a:	in     al,0xd6
  411b7c:	mov    dh,0xbe
  411b7e:	jp     0x411b22
  411b80:	dec    ecx
  411b81:	arpl   dx,dx
  411b83:	lahf   
  411b84:	xchg   ebp,eax
  411b85:	adc    BYTE PTR [edi+ebx*4+0x39100c6],cl
  411b8c:	shl    BYTE PTR [ecx+0x44],0xa9
  411b90:	push   es
  411b91:	cs push edi
  411b93:	repnz adc BYTE PTR [eax-0x50],al
  411b97:	icebp  
  411b98:	scas   eax,DWORD PTR es:[edi]
  411b99:	ins    DWORD PTR es:[edi],dx
  411b9a:	loop   0x411bd6
  411b9c:	iret   
  411b9d:	into   
  411b9e:	sti    
  411b9f:	sbb    BYTE PTR [ebx+0x50],dl
  411ba2:	xchg   ebx,esp
  411ba4:	out    dx,al
  411ba5:	add    al,0x46
  411ba7:	cmp    DWORD PTR [ebx-0x68ff586b],esi
  411bad:	je     0x411b8f
  411baf:	add    eax,0xe4f7e490
  411bb4:	or     ecx,DWORD PTR [eax]
  411bb6:	outs   dx,DWORD PTR ds:[esi]
  411bb7:	mov    ah,0x3b
  411bb9:	popf   
  411bba:	jg     0x411b7f
  411bbc:	cmp    eax,0x13fab6d2
  411bc1:	out    dx,al
  411bc2:	inc    edx
  411bc3:	std    
  411bc4:	inc    esi
  411bc5:	aas    
  411bc6:	cmp    BYTE PTR [ebp-0x4c51b2d1],bl
  411bcc:	and    al,0xfc
  411bce:	pusha  
  411bcf:	dec    edx
  411bd0:	push   cs
  411bd1:	sub    al,0x84
  411bd3:	inc    esi
  411bd4:	xor    cl,bl
  411bd6:	xchg   ecx,eax
  411bd7:	pop    ds
  411bd8:	and    DWORD PTR [ebx+0x2646f54],eax
  411bde:	mov    ch,0x99
  411be0:	lods   eax,DWORD PTR ds:[esi]
  411be1:	xor    cl,BYTE PTR [ebx]
  411be3:	das    
  411be4:	xchg   ebp,eax
  411be5:	jecxz  0x411c29
  411be7:	xchg   esi,eax
  411be8:	jne    0x411bf8
  411bea:	(bad)  
  411beb:	mov    bh,0x41
  411bee:	jl     0x411be1
  411bf0:	rol    DWORD PTR [ebx],1
  411bf2:	adc    bl,al
  411bf4:	(bad)  
  411bf5:	mov    ch,0x9e
  411bf7:	std    
  411bf8:	mov    al,0x8c
  411bfa:	dec    esi
  411bfb:	add    eax,DWORD PTR [edx+eax*2]
  411bfe:	in     eax,0x48
  411c00:	mov    al,ds:0xa494e388
  411c05:	push   cs
  411c06:	fstp   QWORD PTR [edi]
  411c08:	jbe    0x411c73
  411c0a:	(bad)  
  411c0b:	test   DWORD PTR [ebx+0x59f1f700],0xabcacd52
  411c15:	retf   0xb421
  411c18:	(bad)  
  411c19:	es rcl al,0x4d
  411c1d:	inc    edx
  411c1e:	sub    ebp,eax
  411c20:	popa   
  411c21:	ja     0x411c0d
  411c23:	mov    ecx,0xfc3572cb
  411c28:	adc    ebp,DWORD PTR [edx-0x47]
  411c2b:	add    al,0xb
  411c2d:	mov    ds:0xf4991c2f,al
  411c32:	cli    
  411c33:	outs   dx,DWORD PTR ds:[esi]
  411c34:	dec    esp
  411c35:	outs   dx,BYTE PTR ds:[esi]
  411c36:	mov    cs,eax
  411c38:	bound  esi,QWORD PTR [ecx+0x21]
  411c3b:	ficom  DWORD PTR [edx]
  411c3d:	mov    ss,WORD PTR [ecx+0x61]
  411c40:	mov    cl,BYTE PTR [esi]
  411c42:	add    esp,eax
  411c44:	xchg   edi,eax
  411c45:	sbb    eax,0x16212ea0
  411c4a:	cmp    eax,0x11709914
  411c4f:	push   0xffffffdf
  411c51:	inc    ebp
  411c52:	stos   DWORD PTR es:[edi],eax
  411c53:	loop   0x411c9a
  411c55:	das    
  411c56:	xchg   esp,eax
  411c57:	pop    esp
  411c58:	fdivr  DWORD PTR [ecx+0x7bda2589]
  411c5e:	scas   eax,DWORD PTR es:[edi]
  411c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c60:	loopne 0x411c78
  411c62:	xor    ebp,DWORD PTR [edx+ebx*2-0x4c0f8a6b]
  411c69:	enter  0xe9fc,0x23
  411c6d:	cdq    
  411c6e:	cld    
  411c6f:	push   ebx
  411c70:	shl    BYTE PTR [eax+0x172446f6],cl
  411c76:	mov    cs,WORD PTR [esp+edi*1]
  411c79:	in     eax,dx
  411c7a:	addr16 mov ch,0xe0
  411c7d:	pusha  
  411c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7f:	cld    
  411c80:	int3   
  411c81:	les    edx,FWORD PTR [eax-0x4ca4486a]
  411c87:	(bad)  
  411c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c89:	int3   
  411c8a:	lock or al,0x9c
  411c8d:	xlat   BYTE PTR ds:[ebx]
  411c8e:	push   eax
  411c8f:	jmp    0xde3a:0x148523d7
  411c96:	psrlq  mm7,QWORD PTR [eax+0xe5f9e4b]
  411c9d:	push   esi
  411c9e:	sub    bl,cl
  411ca0:	ins    DWORD PTR es:[edi],dx
  411ca1:	iret   
  411ca2:	cmc    
  411ca3:	icebp  
  411ca4:	inc    eax
  411ca5:	mov    esi,0xe553a177
  411caa:	clc    
  411cab:	mov    edi,0x628e54c7
  411cb0:	push   edx
  411cb1:	loop   0x411caf
  411cb3:	ficom  WORD PTR [ecx-0x11c4964c]
  411cb9:	pop    edx
  411cba:	xor    esi,DWORD PTR ds:0xdd5e0766
  411cc0:	das    
  411cc1:	(bad)  
  411cc2:	mov    esp,0x963faa80
  411cc7:	xchg   esp,eax
  411cc8:	sti    
  411cc9:	ret    
  411cca:	push   ebx
  411ccb:	cmp    DWORD PTR [ebx+0x2f],0x3b29bf2f
  411cd2:	call   0x90ba117c
  411cd7:	mov    edi,0xe3fe1a25
  411cdc:	sahf   
  411cdd:	ret    
  411cde:	jae    0x411cb0
  411ce0:	leave  
  411ce1:	fwait
  411ce2:	jns    0x411c75
  411ce4:	jg     0x411ceb
  411ce6:	pop    ds
  411ce7:	mov    dh,BYTE PTR [edx]
  411ce9:	pop    esp
  411cea:	xchg   ebx,eax
  411ceb:	ins    DWORD PTR es:[edi],dx
  411cec:	retf   0xd76e
  411cef:	setae  dl
  411cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf3:	cmp    esp,DWORD PTR [ecx+ebp*4-0x2d87f99c]
  411cfa:	adc    DWORD PTR [esp+eiz*8-0x50],esp
  411cfe:	sub    BYTE PTR [ecx+0x8],bh
  411d01:	in     eax,0x10
  411d03:	push   0xfffffffc
  411d05:	cdq    
  411d06:	sbb    BYTE PTR [ebp+0x50c0c82b],ah
  411d0c:	mov    esi,0xfed5bf79
  411d11:	push   ss
  411d12:	add    edi,DWORD PTR [edi]
  411d14:	clc    
  411d15:	pop    eax
  411d16:	aad    0xc4
  411d18:	test   al,0x96
  411d1a:	test   eax,0x9f4145d1
  411d1f:	sub    al,0x16
  411d21:	ds out dx,eax
  411d23:	int3   
  411d24:	pop    ebp
  411d25:	push   esp
  411d26:	out    dx,eax
  411d27:	jecxz  0x411d85
  411d29:	data16 in al,0xca
  411d2c:	pusha  
  411d2d:	pop    ss
  411d2e:	imul   ecx,DWORD PTR [edx+0x50547499],0xffffff8a
  411d35:	stos   BYTE PTR es:[edi],al
  411d36:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411d38:	data16 adc BYTE PTR [ecx+0x44],0x46
  411d3d:	sbb    esi,DWORD PTR [ebx]
  411d3f:	and    DWORD PTR [esi-0x60],eax
  411d42:	loop   0x411d79
  411d44:	fs jo  0x411dc5
  411d47:	cdq    
  411d48:	cli    
  411d49:	rol    DWORD PTR [eax+0x1f0c61bd],0xfd
  411d50:	fnstenv [eax]
  411d52:	cld    
  411d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d54:	mov    al,0xd
  411d56:	xor    eax,0xd8abb506
  411d5b:	xor    BYTE PTR [ebx+0x4e6d390a],ch
  411d61:	in     eax,dx
  411d62:	lock xchg ebx,eax
  411d64:	outs   dx,BYTE PTR ds:[esi]
  411d65:	or     al,0x9b
  411d67:	retf   
  411d68:	inc    ebx
  411d69:	fidiv  WORD PTR [ecx+0x111f091f]
  411d6f:	js     0x411d65
  411d71:	xchg   edx,eax
  411d72:	lods   al,BYTE PTR ds:[esi]
  411d73:	or     al,0x5f
  411d75:	jmp    0x411d7a
  411d77:	inc    ebp
  411d78:	into   
  411d79:	xchg   ecx,eax
  411d7a:	es ins BYTE PTR es:[edi],dx
  411d7c:	sahf   
  411d7d:	mov    ch,0x5
  411d7f:	xchg   ebp,eax
  411d80:	aam    0x72
  411d82:	cmp    BYTE PTR gs:[esp-0x6ea445b5],ch
  411d8a:	inc    edi
  411d8b:	pop    ss
  411d8c:	cmp    BYTE PTR [edx+0x5a9a9a6c],0x52
  411d93:	ror    DWORD PTR [ebx],1
  411d95:	pop    ebp
  411d96:	shr    BYTE PTR [edx-0x13a855f7],cl
  411d9c:	and    ah,BYTE PTR [esi+edx*4+0x27]
  411da0:	adc    dh,ah
  411da2:	sub    al,0x82
  411da4:	in     eax,0x27
  411da6:	aaa    
  411da7:	in     al,0xdf
  411da9:	nop
  411daa:	jmp    0xfa33:0x8943597d
  411db1:	outs   dx,BYTE PTR ds:[esi]
  411db2:	mov    bl,0x27
  411db4:	inc    eax
  411db5:	xlat   BYTE PTR ds:[ebx]
  411db6:	mov    edx,0xaf9a6204
  411dbb:	mov    al,ch
  411dbd:	push   edi
  411dbe:	pop    ss
  411dbf:	pop    esi
  411dc0:	fsub   st(1),st
  411dc2:	mov    ch,0x55
  411dc4:	mov    eax,0x5b0912c
  411dc9:	ja     0x411db6
  411dcb:	inc    edi
  411dcc:	inc    edi
  411dcd:	xor    al,0x4f
  411dcf:	push   es
  411dd0:	push   ecx
  411dd1:	mov    esp,0x8b5bafed
  411dd6:	rcr    BYTE PTR [edx+0x48],1
  411dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dda:	scas   al,BYTE PTR es:[edi]
  411ddb:	pop    sp
  411ddd:	sar    DWORD PTR [esi-0x5e9348cb],cl
  411de3:	cld    
  411de4:	cmp    BYTE PTR [esi+0x3],dl
  411de7:	pminsw mm7,QWORD PTR [ebx+0x68]
  411deb:	into   
  411dec:	mul    DWORD PTR [ebx-0x23]
  411def:	das    
  411df0:	popa   
  411df1:	add    BYTE PTR [ebp-0x36],cl
  411df4:	push   ecx
  411df5:	xor    eax,0x39cace85
  411dfa:	sub    al,0xb5
  411dfc:	(bad)  
  411dfe:	or     eax,0x9e1bee2b
  411e03:	pop    edi
  411e04:	push   cs
  411e05:	(bad)  
  411e06:	sbb    al,0xa9
  411e08:	and    dh,ch
  411e0a:	mov    ah,0x0
  411e0c:	or     edi,ebx
  411e0e:	hlt    
  411e0f:	js     0x411db2
  411e11:	xchg   esi,eax
  411e12:	pop    ecx
  411e13:	arpl   WORD PTR [edi],bp
  411e15:	lock xchg ecx,eax
  411e17:	nop
  411e18:	fcom   QWORD PTR [edx+0x19]
  411e1b:	xor    eax,0x5744cdd5
  411e20:	sbb    al,BYTE PTR [esi-0x3cd024ba]
  411e26:	out    0x49,eax
  411e28:	jp     0x411e46
  411e2a:	fist   WORD PTR [ecx]
  411e2c:	inc    ebp
  411e2d:	xchg   ebx,eax
  411e2e:	mov    ch,0x2c
  411e30:	sbb    DWORD PTR [ebp+0x48e48253],esp
  411e36:	xchg   esp,eax
  411e37:	sub    al,0x91
  411e39:	loopne 0x411dc2
  411e3b:	sar    DWORD PTR [eax+ebp*1+0x2],0xb7
  411e40:	mov    bl,BYTE PTR [esi-0x68]
  411e43:	call   0xb4c3:0x2a250dc8
  411e4a:	sbb    eax,0x7bb2e298
  411e4f:	fstsw  WORD PTR ss:[edx-0x45]
  411e54:	rol    BYTE PTR [ecx-0x1],1
  411e57:	push   eax
  411e58:	mov    DWORD PTR [esi],ebp
  411e5a:	cmp    DWORD PTR [ebp+0x7],ecx
  411e5d:	lds    edi,FWORD PTR [esi]
  411e5f:	fisubr WORD PTR [esi+0x696c6bc1]
  411e65:	mov    ss,WORD PTR [edi-0x1b5be3fc]
  411e6b:	fimul  DWORD PTR ds:0xbcd565b5
  411e71:	(bad)  
  411e72:	stc    
  411e73:	inc    eax
  411e74:	mov    al,0x38
  411e76:	jle    0x411ef5
  411e78:	jno    0x411e6c
  411e7a:	inc    esi
  411e7b:	repz pushf 
  411e7d:	mov    al,BYTE PTR [edi+eax*1]
  411e80:	xor    DWORD PTR [edi+0x68],0xc9d7e767
  411e87:	sar    bl,1
  411e89:	jmp    0x411e6b
  411e8b:	call   0x736a:0xb662e6fb
  411e92:	pop    ebp
  411e93:	adc    BYTE PTR [edi-0x426fbeec],al
  411e99:	inc    ebp
  411e9a:	mov    eax,ds:0x66a686b0
  411e9f:	push   DWORD PTR [esi+0x426a7ead]
  411ea5:	stos   DWORD PTR es:[edi],eax
  411ea6:	pop    es
  411ea7:	nop    DWORD PTR [esi+0x7e]
  411eab:	popa   
  411eac:	add    BYTE PTR [esi-0x6e],cl
  411eaf:	add    DWORD PTR [edi-0x53],ecx
  411eb2:	ja     0x411f10
  411eb4:	mov    ds:0x83a0ad1c,al
  411eb9:	xor    DWORD PTR [edi-0x63],0xffffffab
  411ebd:	pop    ecx
  411ebe:	jl     0x411e80
  411ec0:	or     dl,bl
  411ec2:	mov    eax,0xb2b3902
  411ec7:	gs int 0x79
  411eca:	test   esp,ecx
  411ecc:	test   cl,bl
  411ece:	dec    ebp
  411ecf:	ds sbb eax,0xfb72b64a
  411ed5:	xor    DWORD PTR [esi-0x78835745],ebp
  411edb:	push   ss
  411edc:	clc    
  411edd:	outs   dx,DWORD PTR ds:[esi]
  411ede:	retf   
  411edf:	addr16 dec edx
  411ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee2:	dec    ebp
  411ee3:	xlat   BYTE PTR ds:[ebx]
  411ee4:	mov    al,ds:0x7445cc69
  411ee9:	(bad)  
  411eea:	cmp    bl,bl
  411eec:	or     eax,0x16e2460c
  411ef1:	std    
  411ef2:	mov    dh,0xf9
  411ef4:	jge    0x411ec1
  411ef6:	scas   al,BYTE PTR es:[edi]
  411ef7:	inc    edx
  411ef8:	shr    cl,1
  411efa:	inc    edx
  411efb:	and    dl,BYTE PTR [esi]
  411efd:	inc    ecx
  411efe:	out    dx,eax
  411eff:	retf   0xe062
  411f02:	cmp    bl,cl
  411f04:	inc    ebx
  411f05:	mov    edx,0x4bf67626
  411f0a:	stos   BYTE PTR es:[edi],al
  411f0b:	out    0x6d,eax
  411f0d:	mov    bh,0xab
  411f0f:	cmc    
  411f10:	push   esi
  411f11:	stos   DWORD PTR es:[edi],eax
  411f12:	les    esi,FWORD PTR [eax]
  411f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f15:	lods   eax,DWORD PTR ds:[esi]
  411f16:	fadd   st(6),st
  411f18:	jecxz  0x411eae
  411f1a:	inc    ebx
  411f1b:	jo     0x411f49
  411f1d:	jmp    0x2d90:0xeb850f7e
  411f24:	into   
  411f25:	in     al,dx
  411f26:	sar    al,cl
  411f28:	inc    esi
  411f29:	jb     0x411fa8
  411f2b:	mov    cl,BYTE PTR [eax+edx*2-0x726e0fb3]
  411f32:	outs   dx,DWORD PTR ds:[esi]
  411f33:	dec    esp
  411f34:	mov    ds:0x42a4ea4c,eax
  411f39:	adc    cl,BYTE PTR [ecx-0xd]
  411f3c:	fidiv  WORD PTR [ebx]
  411f3e:	xchg   esp,eax
  411f3f:	add    eax,0x1
  411f42:	xchg   DWORD PTR [ecx+0x1d],ecx
  411f45:	sub    esp,ebp
  411f47:	enter  0x9101,0xda
  411f4b:	imul   esp,DWORD PTR ds:0xa15976e6,0x8f7b0fbc
  411f55:	pop    eax
  411f56:	xchg   edi,eax
  411f57:	jmp    0x70444e3f
  411f5c:	(bad)  
  411f60:	arpl   WORD PTR [ecx+0x4cb62057],sp
  411f66:	add    eax,0x9e7fb9cc
  411f6b:	in     al,dx
  411f6c:	push   ecx
  411f6d:	aas    
  411f6e:	mov    ebx,0xa366f315
  411f73:	ret    0xb819
  411f76:	lock dec edx
  411f78:	and    ah,dl
  411f7a:	cs es in eax,dx
  411f7d:	lea    ebp,[edx-0x3e]
  411f80:	mov    WORD PTR [eax+0x44],?
  411f83:	mov    dl,0x44
  411f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f86:	cld    
  411f87:	jmp    0xb7bc:0x47f9b449
  411f8e:	sub    al,0x56
  411f90:	outs   dx,DWORD PTR ds:[esi]
  411f91:	sub    ch,0xe3
  411f94:	frstor [ecx+0x39]
  411f97:	or     ecx,DWORD PTR [edi+0x1cb1b081]
  411f9d:	dec    ecx
  411f9e:	mov    esp,0x44528fac
  411fa3:	aaa    
  411fa4:	adc    BYTE PTR [esi+0x0],ch
  411fa7:	pop    ss
  411fa8:	pop    esp
  411fa9:	add    eax,0x4b63c5c2
  411fae:	dec    esp
  411faf:	into   
  411fb0:	add    esp,esi
  411fb2:	into   
  411fb3:	fld    TBYTE PTR ds:0x13aa1703
  411fb9:	mov    dh,0x63
  411fbb:	xor    eax,edx
  411fbd:	int    0x2
  411fbf:	idiv   BYTE PTR [ecx-0x4b]
  411fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc3:	pop    ebx
  411fc4:	cmp    eax,0x14836246
  411fc9:	push   DWORD PTR [esi+0x6b3eaab6]
  411fcf:	push   ebp
  411fd0:	aaa    
  411fd1:	in     al,0x78
  411fd3:	sar    BYTE PTR [ecx],0xae
  411fd6:	hlt    
  411fd7:	ret    0x9071
  411fda:	ret    0xbbae
  411fdd:	cmp    DWORD PTR [edi+0x2c],ebx
  411fe0:	jmp    0x411fc8
  411fe2:	pop    ebx
  411fe3:	inc    esi
  411fe4:	mov    ecx,DWORD PTR [esi]
  411fe6:	add    edx,DWORD PTR [esi+0x15]
  411fe9:	inc    edx
  411fea:	inc    esp
  411feb:	repz mov cl,0x14
  411fee:	cmova  ecx,ebp
  411ff1:	bound  ebp,QWORD PTR [ebp-0x435533a0]
  411ff7:	inc    ecx
  411ff8:	shr    ah,cl
  411ffa:	mov    DWORD PTR [ebx-0x7b],ebx
  411ffd:	jecxz  0x41201e
  411fff:	or     eax,DWORD PTR [eax-0x46d85f68]
  412005:	nop
  412006:	jo     0x411fcb
  412008:	mov    bl,0xf1
  41200a:	push   edi
  41200b:	push   esp
  41200c:	lds    edx,FWORD PTR ds:0x3a402397
  412012:	xor    BYTE PTR [ebx+0x67cb1489],al
  412018:	xlat   BYTE PTR ds:[ebx]
  412019:	(bad)  
  41201a:	addr16 xchg edi,eax
  41201c:	pop    ss
  41201d:	mov    eax,ds:0x2053fdfe
  412022:	mov    al,0x69
  412024:	add    al,0xb9
  412026:	lds    esp,FWORD PTR [ebx+0x3619c467]
  41202c:	leave  
  41202d:	loop   0x412053
  41202f:	mov    ds:0x9184280d,eax
  412034:	xchg   edi,eax
  412035:	jmp    0x41205a
  412037:	mov    al,0xf4
  412039:	pop    esp
  41203a:	cld    
  41203b:	add    bh,al
  41203d:	out    dx,eax
  41203e:	inc    edx
  41203f:	jae    0x411fc9
  412041:	rcl    DWORD PTR [ebx],1
  412043:	mov    esi,0xb58af944
  412048:	adc    al,0xa0
  41204a:	jmp    0x3ed31918
  41204f:	aaa    
  412050:	sti    
  412051:	iret   
  412052:	shr    BYTE PTR [edi-0x62244f0c],0x81
  412059:	xchg   edi,eax
  41205a:	imul   edx,DWORD PTR ds:0x53c5e1d9,0x40db65e1
  412064:	dec    edi
  412065:	(bad)  
  412066:	cmc    
  412067:	loop   0x4120cc
  412069:	push   ebp
  41206a:	or     esi,edx
  41206c:	sbb    DWORD PTR [edx+0x72cd45c2],eax
  412072:	or     al,0x3b
  412074:	jmp    0x428b:0xb0709cb1
  41207b:	xchg   esp,eax
  41207c:	push   eax
  41207d:	pop    eax
  41207e:	mov    al,0x89
  412080:	jbe    0x412072
  412082:	add    al,0xda
  412084:	and    eax,0xca19bb1c
  412089:	push   edi
  41208a:	push   es
  41208b:	ins    BYTE PTR es:[edi],dx
  41208c:	aam    0x85
  41208e:	out    dx,eax
  41208f:	pushf  
  412090:	jmp    0x5c840346
  412095:	js     0x41208f
  412097:	es mov ebx,0x867f2c8f
  41209d:	or     eax,0xe231b964
  4120a2:	sub    al,0x94
  4120a4:	sub    ebx,DWORD PTR ds:0xdd09c52a
  4120aa:	add    BYTE PTR [esi-0x51],al
  4120ad:	push   cs
  4120ae:	adc    bl,BYTE PTR [esi]
  4120b0:	out    0x83,eax
  4120b2:	mov    eax,0x4bf2ef6f
  4120b7:	aad    0x2b
  4120b9:	(bad)  
  4120ba:	xchg   ebp,eax
  4120bb:	xchg   esi,eax
  4120bc:	push   ebx
  4120bd:	shr    DWORD PTR [edi+0x552ef5ef],0x21
  4120c4:	pop    ebx
  4120c5:	pop    ebp
  4120c6:	sbb    al,0x79
  4120c8:	or     al,0x90
  4120ca:	leave  
  4120cb:	and    BYTE PTR [ebx+esi*2+0x7c],al
  4120cf:	sbb    al,0x15
  4120d1:	in     al,0xcc
  4120d3:	ret    
  4120d4:	imul   ebx,DWORD PTR [eax-0x64],0x5b
  4120d8:	push   ss
  4120d9:	das    
  4120da:	adc    eax,0xdf8c331a
  4120df:	jl     0x4120a0
  4120e1:	gs xchg ebx,eax
  4120e3:	push   es
  4120e4:	data16 or al,0x4a
  4120e7:	ins    DWORD PTR es:[edi],dx
  4120e8:	and    DWORD PTR [ecx],edi
  4120ea:	xchg   ebp,eax
  4120eb:	retf   0x83a5
  4120ee:	jge    0x4120e6
  4120f0:	xor    bl,al
  4120f2:	test   DWORD PTR [eax],esi
  4120f4:	test   DWORD PTR [edi-0x6f],edx
  4120f7:	cwde   
  4120f8:	sub    DWORD PTR [esi-0x7b1dff1a],eax
  4120fe:	cmp    BYTE PTR ds:0x222a5310,ch
  412104:	imul   esi,DWORD PTR [edx-0x6add6a7c],0xffffffbf
  41210b:	xchg   edi,eax
  41210c:	xchg   ebx,eax
  41210d:	mov    bh,0xe8
  41210f:	loope  0x4120c1
  412111:	div    BYTE PTR [eax]
  412113:	push   edi
  412114:	enter  0x2922,0x93
  412118:	jae    0x4120db
  41211a:	(bad)  
  41211b:	pop    edx
  41211c:	mov    ebx,DWORD PTR [ebx-0x43f81778]
  412122:	mov    dl,ch
  412124:	and    dh,cl
  412126:	cmc    
  412127:	push   esi
  412128:	pop    esi
  412129:	nop
  41212a:	in     eax,0x5e
  41212c:	mov    dl,0xcc
  41212e:	test   eax,0x2a06d778
  412133:	sbb    eax,0x7f3e19a9
  412138:	xchg   cl,cl
  41213a:	test   dl,bl
  41213c:	push   cs
  41213d:	adc    dh,dl
  41213f:	in     eax,0xdb
  412141:	fist   WORD PTR [ebx+0x37]
  412144:	xchg   edi,eax
  412145:	pop    esp
  412146:	xor    ebx,DWORD PTR [esi+0x64]
  412149:	icebp  
  41214a:	adc    al,0xa4
  41214c:	out    dx,eax
  41214d:	les    ecx,FWORD PTR [edx+0x68]
  412150:	shr    ebx,1
  412152:	out    0x28,eax
  412154:	cmp    al,0x87
  412156:	or     ebx,DWORD PTR [ecx-0x75a20fa6]
  41215c:	mov    esp,0xe7bdc0e1
  412161:	ret    
  412162:	xor    eax,0x852dea04
  412167:	and    edi,DWORD PTR [esp+eax*8+0x7c]
  41216b:	xchg   BYTE PTR [edx-0x6f829ac3],ch
  412171:	mov    dh,0x30
  412173:	bnd jne 0x412167
  412176:	adc    ebx,DWORD PTR [ebp+0x60]
  412179:	pop    esp
  41217a:	fimul  DWORD PTR [ebp-0x33c0c143]
  412180:	pop    eax
  412181:	pop    esi
  412182:	mov    esi,0xb26d11a4
  412187:	dec    ebx
  412188:	jg     0x412179
  41218a:	fs pop ecx
  41218c:	icebp  
  41218d:	fwait
  41218e:	adc    BYTE PTR [edx+0x2c],ah
  412191:	or     bh,ah
  412193:	inc    eax
  412194:	punpckhbw mm6,mm7
  412197:	sbb    bl,BYTE PTR [ecx]
  412199:	pop    edx
  41219a:	mov    al,ds:0xdf01981f
  41219f:	mov    esp,0x31b4ebb1
  4121a4:	jnp    0x412145
  4121a6:	pop    ds
  4121a7:	(bad)  
  4121a8:	hlt    
  4121a9:	push   ds
  4121aa:	out    0x98,eax
  4121ac:	xchg   edi,eax
  4121ad:	or     ebp,DWORD PTR [esi+0x4]
  4121b0:	and    eax,0xefef7ed
  4121b5:	or     al,0xdc
  4121b7:	pop    ebp
  4121b8:	inc    eax
  4121b9:	push   cs
  4121ba:	fs sti 
  4121bc:	retf   
  4121bd:	ret    
  4121be:	dec    esi
  4121bf:	fcmovb st,st(1)
  4121c1:	inc    esp
  4121c2:	adc    al,0x80
  4121c4:	xchg   esi,eax
  4121c5:	rol    esp,1
  4121c7:	outs   dx,BYTE PTR ds:[esi]
  4121c8:	das    
  4121c9:	push   ebp
  4121ca:	test   eax,0x3962f560
  4121cf:	push   cs
  4121d0:	or     eax,0xe30a1bdb
  4121d5:	call   0xf89e:0xce235071
  4121dc:	sbb    al,0x3e
  4121de:	adc    BYTE PTR [ebp+0x71],0xba
  4121e2:	ret    0xe8ff
  4121e5:	call   0x94983ab
  4121ea:	dec    esi
  4121eb:	xor    al,bh
  4121ed:	fs clc 
  4121ef:	adc    BYTE PTR [ebx+eax*1-0x5818d144],0x80
  4121f7:	in     al,0x68
  4121f9:	aam    0xda
  4121fb:	or     eax,0xe93d703
  412200:	inc    esp
  412201:	aaa    
  412202:	adc    al,0x6c
  412204:	js     0x412265
  412206:	jbe    0x41218e
  412208:	jnp    0x4121d7
  41220a:	inc    ebp
  41220b:	cs aaa 
  41220d:	inc    ecx
  41220e:	shr    DWORD PTR [esi-0x77b33bcc],1
  412214:	rcl    BYTE PTR [edi+0x3474829d],0x7b
  41221b:	(bad)  
  41221c:	clc    
  41221d:	dec    ecx
  41221e:	in     al,dx
  41221f:	push   DWORD PTR [ecx-0x77]
  412222:	outs   dx,DWORD PTR ds:[esi]
  412223:	popa   
  412224:	cwde   
  412225:	nop
  412226:	jns    0x4121e7
  412228:	lds    edx,FWORD PTR [ecx-0x24fba475]
  41222e:	aam    0xd0
  412230:	push   ecx
  412231:	icebp  
  412232:	les    esi,FWORD PTR [edi+0x74]
  412235:	mov    ebx,0xc2cce6a5
  41223a:	jb     0x412298
  41223c:	push   es
  41223d:	imul   edx,DWORD PTR [edx-0x28],0xc77b3651
  412244:	push   ebx
  412245:	add    eax,0x23ad4ce
  41224a:	pop    ebx
  41224b:	xchg   ebp,eax
  41224c:	test   eax,0x8a107cb
  412251:	imul   esi,DWORD PTR [edx+0x6d057ec2],0x13
  412258:	adc    al,0xac
  41225a:	aaa    
  41225b:	nop
  41225c:	aas    
  41225d:	aam    0x34
  41225f:	cmp    eax,0xaf6450c6
  412264:	cli    
  412265:	aam    0x52
  412267:	mov    DWORD PTR ds:0x32d07a7d,ecx
  41226d:	inc    edx
  41226e:	(bad)  
  41226f:	aaa    
  412270:	test   ch,bh
  412272:	mov    al,0xbf
  412274:	mov    ds:0xf61e65bc,eax
  412279:	and    al,0x6d
  41227b:	jnp    0x4122a9
  41227d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227e:	dec    edi
  41227f:	jb     0x412212
  412281:	bnd js 0x412250
  412284:	in     al,dx
  412285:	jge    0x412304
  412287:	inc    esi
  412288:	nop
  412289:	cmp    al,0x1a
  41228b:	jb     0x412257
  41228d:	push   cs
  41228e:	aaa    
  41228f:	arpl   WORD PTR [edi-0x52],dx
  412292:	jmp    0x41230c
  412294:	push   0xa2380619
  412299:	sub    DWORD PTR [ecx+0x1ed6552],eax
  41229f:	retf   
  4122a0:	inc    BYTE PTR [edx+0x42051772]
  4122a6:	jo     0x41224b
  4122a8:	jbe    0x412253
  4122aa:	les    ecx,FWORD PTR [edx+0x468a788b]
  4122b0:	mov    ebp,0x37134132
  4122b5:	fisttp WORD PTR [esi-0x1d980986]
  4122bb:	in     eax,0x69
  4122bd:	push   ss
  4122be:	retf   
  4122bf:	add    al,0xfa
  4122c1:	inc    edx
  4122c2:	test   eax,0x982e8965
  4122c7:	test   DWORD PTR [edx],ebp
  4122c9:	call   0x834d:0xbc87d198
  4122d0:	push   0x40f1ae99
  4122d5:	push   ss
  4122d6:	repnz xor ah,al
  4122d9:	and    DWORD PTR [esi+esi*2-0x2],ecx
  4122dd:	mov    cl,0x6b
  4122df:	mov    dh,0x85
  4122e1:	sub    bh,BYTE PTR [esi-0x79b48a0e]
  4122e7:	mov    ch,ah
  4122e9:	cwde   
  4122ea:	mov    edx,0xe8e4ec19
  4122ef:	mov    cl,0x9e
  4122f1:	je     0x412369
  4122f3:	add    DWORD PTR ds:0xfbbc82bb,ebx
  4122f9:	icebp  
  4122fa:	jno    0x4122d1
  4122fc:	pushf  
  4122fd:	xor    DWORD PTR [esi-0x1e],edi
  412300:	pop    es
  412301:	ret    
  412302:	clc    
  412303:	sbb    DWORD PTR [ecx-0x2b],ebx
  412306:	jle    0x41230e
  412308:	xchg   edi,eax
  412309:	pop    ebx
  41230a:	add    DWORD PTR [edi-0x1b],eax
  41230d:	jnp    0x412375
  41230f:	adc    bl,BYTE PTR [ecx-0x63c58b0]
  412315:	xchg   esi,eax
  412316:	jl     0x4122fa
  412318:	jns    0x41235c
  41231a:	sar    DWORD PTR [eax+0x60],1
  41231d:	jg     0x4122c7
  41231f:	sub    al,bl
  412321:	jmp    0x71c43282
  412326:	call   DWORD PTR [edi+0x5c638889]
  41232c:	leave  
  41232d:	lahf   
  41232e:	loope  0x412386
  412330:	cdq    
  412331:	jmp    0x647e:0xceb53b9
  412338:	pusha  
  412339:	xor    BYTE PTR [ebx+0x64],bh
  41233c:	icebp  
  41233d:	mov    esp,0xc21e4aeb
  412342:	pop    ss
  412343:	adc    DWORD PTR [ebx-0x58d3a35a],esp
  412349:	pushf  
  41234a:	in     al,0xa5
  41234c:	leave  
  41234d:	or     bh,BYTE PTR [edx]
  41234f:	mov    al,ds:0xb70f511b
  412354:	ret    
  412355:	lds    ebx,FWORD PTR [edx+0x29]
  412358:	xchg   ecx,eax
  412359:	jno    0x41232f
  41235b:	stc    
  41235c:	repz test eax,0x1f66e1f1
  412362:	cmp    BYTE PTR ds:0x95d48100,dl
  412368:	fsubr  st(2),st
  41236a:	rcr    DWORD PTR [edx+0x9e4f9bd],0x7f
  412371:	idiv   DWORD PTR [eax]
  412373:	add    DWORD PTR [ecx+0x5655dbaa],0x21
  41237a:	jne    0x4123ea
  41237c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41237d:	aas    
  41237e:	push   0xd4912c4b
  412383:	jae    0x4123c4
  412385:	daa    
  412386:	xlat   BYTE PTR ds:[ebx]
  412387:	sbb    al,0x30
  412389:	cmc    
  41238a:	data16 arpl WORD PTR [eax+0x4e],di
  41238e:	sbb    al,0x79
  412390:	fld    TBYTE PTR [ecx+0x3a5adfb]
  412396:	addr16 (bad) 
  412398:	js     0x412376
  41239a:	sbb    BYTE PTR [eax-0x7b],bl
  41239d:	dec    edi
  41239e:	cmp    al,0x32
  4123a0:	loope  0x4123c8
  4123a2:	call   0x5bae208d
  4123a7:	sub    ebp,esp
  4123a9:	and    edi,edx
  4123ab:	in     al,dx
  4123ac:	add    al,BYTE PTR [ebx-0x29]
  4123af:	mov    esi,0x9e4ddf18
  4123b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b5:	out    0x47,al
  4123b7:	push   ecx
  4123b8:	and    cl,BYTE PTR [ecx-0x5a27971]
  4123be:	fucomip st,st(4)
  4123c0:	int3   
  4123c1:	into   
  4123c2:	ins    DWORD PTR es:[edi],dx
  4123c3:	xchg   ebx,eax
  4123c4:	in     al,dx
  4123c5:	add    eax,0xab336f13
  4123ca:	cmp    DWORD PTR [eax-0x42],0x3584558f
  4123d1:	add    al,0x54
  4123d3:	mov    ah,0xa9
  4123d5:	in     eax,dx
  4123d6:	dec    ebx
  4123d7:	sub    BYTE PTR [ebp+0x6ab13065],dl
  4123dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123de:	(bad)  
  4123df:	hlt    
  4123e0:	dec    esp
  4123e1:	je     0x41237e
  4123e3:	jl     0x41237c
  4123e5:	int    0x91
  4123e7:	sub    al,0x95
  4123e9:	pop    edx
  4123ea:	xchg   edi,eax
  4123eb:	aad    0x90
  4123ed:	repz mov ah,0x46
  4123f0:	cmp    BYTE PTR [edi-0x293c18ad],ah
  4123f6:	mov    dl,BYTE PTR [ebx+0x22]
  4123f9:	rcr    esi,cl
  4123fb:	cmp    ah,BYTE PTR ds:0xeb5bb25c
  412401:	cs inc ecx
  412403:	fstp   QWORD PTR [eax-0x1d]
  412406:	add    edi,edx
  412408:	adc    edx,DWORD PTR [ecx]
  41240a:	inc    eax
  41240b:	jns    0x412403
  41240d:	or     DWORD PTR [eax+edx*2-0x4d073228],esp
  412414:	pop    edi
  412415:	popf   
  412416:	stos   DWORD PTR es:[edi],eax
  412417:	adc    BYTE PTR [edi+0x3eeb101f],ah
  41241d:	and    al,0x88
  41241f:	(bad)  
  412420:	jo     0x412440
  412422:	sbb    ebp,DWORD PTR [esi-0x29282da]
  412428:	xchg   ecx,eax
  412429:	inc    esi
  41242a:	in     eax,dx
  41242b:	stos   DWORD PTR es:[edi],eax
  41242c:	cmp    BYTE PTR [eax+eax*1],dh
  41242f:	test   BYTE PTR [edx],bh
  412431:	xchg   BYTE PTR [esi],dl
  412433:	adc    esp,ebp
  412435:	mov    ds:0x3614fef,eax
  41243a:	push   ebx
  41243b:	and    BYTE PTR [edx+0x68d01e89],0xdc
  412442:	imul   edx,DWORD PTR [ecx],0xffffff95
  412445:	xlat   BYTE PTR ds:[ebx]
  412446:	xchg   ebx,eax
  412447:	pushf  
  412448:	jp     0x41244c
  41244a:	pushf  
  41244b:	cmp    al,0x10
  41244d:	adc    BYTE PTR [ecx+ebx*1-0x426b98fe],bl
  412454:	ss pop ss
  412456:	xor    edi,ecx
  412458:	sahf   
  412459:	call   0xe91f:0x12c6ffe
  412460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412461:	adc    al,0xf5
  412463:	mov    ah,0x97
  412465:	inc    ebp
  412466:	push   0xffffffcc
  412468:	mov    ecx,0xd4fb5527
  41246d:	lock aas 
  41246f:	loopne 0x41242a
  412471:	pop    ds
  412472:	sub    bl,ah
  412474:	push   es
  412475:	aam    0x37
  412477:	(bad)  
  412478:	call   0xe4ee:0x83fa8fa8
  41247f:	xor    al,0xd5
  412481:	dec    ebx
  412482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412483:	repz cld 
  412485:	or     eax,DWORD PTR [eax]
  412487:	adc    eax,0x45ef06af
  41248c:	xchg   edi,eax
  41248d:	mov    ebp,fs
  41248f:	mov    bh,0xd0
  412491:	mov    ebx,0x44033e55
  412496:	push   ss
  412497:	add    bl,BYTE PTR [edx+0x49]
  41249a:	xchg   DWORD PTR [edx-0x2e878674],eax
  4124a0:	adc    DWORD PTR [esi+ebx*4-0x23398ae],0xfffffff7
  4124a8:	fsub   DWORD PTR [ebx-0x43]
  4124ab:	cmp    bh,BYTE PTR [ebx]
  4124ad:	inc    esi
  4124ae:	aam    0x20
  4124b0:	adc    esi,ebx
  4124b2:	inc    ecx
  4124b3:	inc    eax
  4124b4:	call   0x153139d6
  4124b9:	out    dx,eax
  4124ba:	cli    
  4124bb:	scas   eax,DWORD PTR es:[edi]
  4124bc:	dec    esp
  4124bd:	inc    ebx
  4124bf:	and    edi,DWORD PTR [ebp+0x39f50d15]
  4124c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c6:	rcl    al,cl
  4124c8:	or     al,0xe9
  4124ca:	mov    ecx,0x351ce0eb
  4124cf:	xor    DWORD PTR [edx],ebx
  4124d1:	dec    edi
  4124d2:	and    eax,0xa5f90a2d
  4124d7:	(bad)  
  4124d8:	scas   al,BYTE PTR es:[edi]
  4124d9:	push   0x17c756ca
  4124de:	sub    al,0xa3
  4124e0:	mov    eax,ds:0x3e7fa6af
  4124e5:	aad    0x15
  4124e7:	jne    0x412529
  4124e9:	add    BYTE PTR [edi],ch
  4124eb:	ret    0xb973
  4124ee:	lods   al,BYTE PTR ds:[esi]
  4124ef:	dec    ebx
  4124f0:	aaa    
  4124f1:	mov    eax,ds:0x9d1e0e3b
  4124f6:	sub    al,0x5f
  4124f8:	add    eax,0x57ef9b2f
  4124fd:	aam    0x50
  4124ff:	adc    eax,0xa4bba58
  412504:	ret    0xa79b
  412507:	sbb    al,0x98
  412509:	or     BYTE PTR [edi],cl
  41250b:	imul   esi,DWORD PTR [ebx-0x6a],0xe41bbfd6
  412512:	and    ebp,ebp
  412514:	ins    BYTE PTR es:[edi],dx
  412515:	jae    0x412506
  412517:	aaa    
  412518:	mov    eax,0x781b9a3a
  41251d:	test   ah,al
  41251f:	mov    bl,BYTE PTR [ebp+0x31]
  412522:	or     BYTE PTR [eax+0x270acf48],ch
  412528:	xchg   esp,eax
  412529:	imul   esi,DWORD PTR [esi-0x45a9f7a3],0x5a
  412530:	mov    al,bh
  412532:	sub    edi,DWORD PTR [ecx-0x24]
  412535:	test   BYTE PTR [esi],0x46
  412538:	iret   
  412539:	push   edx
  41253a:	push   eax
  41253b:	imul   ebx,ecx,0x6b
  41253e:	mov    esp,0x49820f81
  412543:	push   ds
  412544:	mov    BYTE PTR [esi],dh
  412546:	pusha  
  412547:	push   0xffffffd5
  412549:	stos   BYTE PTR es:[edi],al
  41254a:	scas   al,BYTE PTR es:[edi]
  41254b:	xor    BYTE PTR [eax],dl
  41254d:	(bad)  
  41254e:	stc    
  41254f:	inc    edx
  412550:	mov    bh,0xc0
  412552:	das    
  412553:	push   eax
  412554:	rcl    DWORD PTR [ebx+0x4fc3664d],cl
  41255a:	mov    esi,ecx
  41255c:	adc    DWORD PTR [edx-0x66],0x1035f8dc
  412563:	ret    
  412564:	sub    bl,ah
  412566:	and    al,0xb7
  412568:	fs loopne 0x4125c9
  41256b:	in     eax,dx
  41256c:	bound  edi,QWORD PTR [edi]
  41256e:	imul   eax,DWORD PTR [esi+0x25],0xfffffff9
  412572:	js     0x412557
  412574:	add    BYTE PTR [edx-0x566b5b01],bh
  41257a:	and    bh,BYTE PTR ds:[edi]
  41257d:	cdq    
  41257e:	add    eax,0x3ee22c55
  412583:	mov    edx,0x38b8cee9
  412588:	jae    0x41254e
  41258a:	bound  ecx,QWORD PTR [ebx-0x5c]
  41258d:	add    eax,0xd862bfce
  412592:	xchg   ebp,eax
  412593:	in     al,0x3b
  412595:	(bad)  
  412596:	data16 cmc 
  412598:	mov    ecx,edx
  41259a:	sub    DWORD PTR [ebp-0x19],edx
  41259d:	adc    eax,0x3f908e3d
  4125a2:	push   cs
  4125a3:	stos   DWORD PTR es:[edi],eax
  4125a4:	inc    ebx
  4125a5:	or     al,0xf3
  4125a7:	sbb    eax,eax
  4125a9:	dec    edx
  4125aa:	inc    ecx
  4125ab:	sbb    al,0x70
  4125ad:	ror    DWORD PTR [esi+0x35],1
  4125b0:	and    eax,DWORD PTR [esi-0xf88e464]
  4125b6:	adc    al,0x7a
  4125b8:	pop    esp
  4125b9:	and    edi,DWORD PTR [ebp-0x1b6425f3]
  4125bf:	lds    eax,FWORD PTR [esi+0x19a36413]
  4125c5:	adc    bh,dh
  4125c7:	cs out dx,eax
  4125c9:	mov    esi,0x58cbb5f5
  4125ce:	sbb    bl,ah
  4125d0:	dec    ecx
  4125d1:	rcr    DWORD PTR [esi-0x2f04ea5],1
  4125d7:	out    dx,eax
  4125d8:	sub    DWORD PTR [ebx+0x22],edx
  4125db:	xchg   ebx,eax
  4125dc:	cmc    
  4125dd:	sbb    DWORD PTR [esi+eiz*4],edx
  4125e0:	mov    esi,0x4c086ce2
  4125e5:	aas    
  4125e6:	mov    ebp,0x596ceb10
  4125eb:	mov    eax,0x7b840574
  4125f0:	sbb    DWORD PTR [esi+0x1b],0xf72af948
  4125f7:	out    dx,eax
  4125f8:	xor    bh,0xab
  4125fb:	lods   al,BYTE PTR ds:[esi]
  4125fc:	jge    0x412583
  4125fe:	pop    ebx
  4125ff:	int    0x58
  412601:	pop    edi
  412602:	cwde   
  412603:	sub    al,0x20
  412605:	ins    DWORD PTR es:[edi],dx
  412606:	cmc    
  412607:	inc    edi
  412608:	mov    ah,0x55
  41260a:	xlat   BYTE PTR ds:[ebx]
  41260b:	adc    eax,0xd44cb0e1
  412610:	sbb    al,0x1f
  412612:	push   eax
  412614:	or     ch,BYTE PTR [eax+0x563d0c26]
  41261a:	push   edx
  41261b:	std    
  41261c:	popa   
  41261d:	xchg   edx,eax
  41261e:	add    eax,0x710e1de
  412623:	xlat   BYTE PTR ds:[ebx]
  412624:	ficom  DWORD PTR [eax+0x1183051e]
  41262a:	ret    
  41262b:	in     al,0x24
  41262d:	(bad)  
  41262f:	icebp  
  412630:	scas   eax,DWORD PTR es:[edi]
  412631:	inc    cl
  412633:	xor    esi,esi
  412635:	scas   eax,DWORD PTR es:[edi]
  412636:	gs pop ecx
  412638:	lods   al,BYTE PTR ds:[esi]
  412639:	dec    ebx
  41263a:	or     eax,ebx
  41263c:	and    ebp,DWORD PTR [eax+0x63]
  41263f:	scas   al,BYTE PTR es:[edi]
  412640:	mov    ch,BYTE PTR [edi+0x51]
  412643:	pop    ecx
  412644:	push   ecx
  412645:	rcl    DWORD PTR [ebx+ecx*4-0x44145b85],cl
  41264c:	int    0x99
  41264e:	inc    ebx
  41264f:	mov    DWORD PTR [esi+ecx*2+0x6f],esi
  412653:	pop    ds
  412654:	int    0xdb
  412656:	and    DWORD PTR [esi],esp
  412658:	out    0x84,eax
  41265a:	div    ebx
  41265c:	icebp  
  41265d:	sahf   
  41265e:	jb     0x412685
  412660:	jo     0x4125f5
  412662:	mov    ecx,0x95690b07
  412667:	cmp    bl,bh
  412669:	xor    bh,cl
  41266b:	cld    
  41266c:	push   ss
  41266d:	addr16 or ebx,esp
  412670:	lock pop esi
  412672:	mov    eax,ds:0x678bba52
  412677:	mov    esp,0x35af033e
  41267c:	outs   dx,BYTE PTR ds:[esi]
  41267d:	(bad)  
  41267e:	mov    ds:0x2b980cd9,al
  412683:	jmp    0x4126a6
  412685:	out    dx,al
  412686:	jb     0x412690
  412688:	ja     0x41265f
  41268a:	cld    
  41268b:	nop
  41268c:	call   0xad8c9659
  412691:	jo     0x4126bc
  412693:	cmp    eax,0x7bdaf24f
  412698:	(bad)  
  412699:	fld    TBYTE PTR [eax+0x44]
  41269c:	scas   eax,DWORD PTR es:[edi]
  41269d:	rep outs dx,BYTE PTR ds:[esi]
  41269f:	mov    esp,0x4d004737
  4126a4:	push   edx
  4126a5:	int3   
  4126a6:	and    bh,BYTE PTR [edx]
  4126a8:	rcl    BYTE PTR [ecx],0xa6
  4126ab:	adc    BYTE PTR [ecx],ah
  4126ad:	imul   ebp,DWORD PTR [eax-0x6],0xffffff8c
  4126b1:	lds    ebx,FWORD PTR [ebp-0xd]
  4126b4:	jp     0x412733
  4126b6:	fld    DWORD PTR [ebp-0x70]
  4126b9:	add    eax,0xf957fb85
  4126be:	int3   
  4126bf:	inc    esi
  4126c0:	or     BYTE PTR [edx+eax*1],dh
  4126c3:	js     0x412673
  4126c5:	aam    0xd6
  4126c7:	inc    edx
  4126c8:	mov    dh,0x20
  4126ca:	pop    ss
  4126cb:	das    
  4126cc:	sbb    DWORD PTR [edi],eax
  4126ce:	dec    esp
  4126cf:	pop    ebx
  4126d0:	repnz in al,0xa4
  4126d3:	sbb    bl,BYTE PTR [ebp-0x25]
  4126d6:	mov    esp,0x13eba5b8
  4126db:	mov    dh,0x2f
  4126dd:	jg     0x4126a8
  4126df:	xchg   ecx,eax
  4126e0:	ret    0x5ed6
  4126e3:	pop    edi
  4126e4:	in     eax,dx
  4126e5:	daa    
  4126e6:	mov    esp,DWORD PTR [eax-0x2c97929a]
  4126ec:	jo     0x4126a5
  4126ee:	mov    eax,0x98f4f909
  4126f3:	inc    edx
  4126f4:	pop    ds
  4126f5:	push   ecx
  4126f6:	jle    0x412759
  4126f8:	int    0x9
  4126fa:	repz push eax
  4126fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126fd:	sub    cl,BYTE PTR [ebx-0x58b271bc]
  412703:	xchg   esp,eax
  412704:	int    0x7c
  412706:	in     al,dx
  412707:	dec    esi
  412708:	pop    edi
  412709:	out    0x36,al
  41270b:	xchg   esp,eax
  41270c:	push   ds
  41270d:	or     BYTE PTR [edi-0xc85420c],al
  412713:	xor    BYTE PTR [ebp-0x5b497acf],al
  412719:	push   eax
  41271a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271b:	rol    DWORD PTR [eax+0x31],0xa8
  41271f:	inc    eax
  412720:	cld    
  412721:	mov    ch,0xd3
  412723:	imul   edi,DWORD PTR [edi],0x6b
  412726:	sub    DWORD PTR [ecx+0x5c5b2762],eax
  41272c:	adc    al,0xe7
  41272f:	sahf   
  412730:	out    dx,al
  412731:	adc    bh,BYTE PTR [edi]
  412733:	sti    
  412734:	push   eax
  412735:	inc    edx
  412736:	dec    ebp
  412737:	jmp    0x26e3341a
  41273c:	mov    bh,0x7f
  41273e:	sbb    dh,cl
  412740:	nop
  412741:	aaa    
  412742:	es fdivrp st(6),st
  412745:	fadd   QWORD PTR [eax]
  412747:	push   esp
  412748:	jmp    0x29fd:0x94887c74
  41274f:	dec    ebp
  412750:	fs lahf 
  412752:	call   0x4f2d:0x10a8591
  412759:	aad    0xac
  41275b:	test   edi,esp
  41275d:	not    esi
  41275f:	jnp    0x41272d
  412761:	push   cs
  412762:	aas    
  412763:	cmp    eax,0xfd2c61b0
  412768:	fstp   QWORD PTR [edx-0x16371f84]
  41276e:	jno    0x412754
  412770:	fstp   TBYTE PTR ss:[ecx+ecx*4]
  412774:	leave  
  412775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412776:	ret    
  412777:	adc    al,0xd4
  412779:	inc    edx
  41277a:	jmp    0xe64a:0x1534cec7
  412781:	fstp   TBYTE PTR [edx-0x4b]
  412784:	div    DWORD PTR [ebp+ecx*8-0x6d3820aa]
  41278b:	gs mov dl,0x46
  41278e:	dec    esp
  41278f:	inc    esp
  412790:	mov    es,WORD PTR ds:0x260af444
  412796:	cdq    
  412797:	in     eax,dx
  412798:	adc    BYTE PTR [edx+0x43],ah
  41279b:	aaa    
  41279c:	cmp    eax,DWORD PTR [ebx+eax*2]
  41279f:	inc    ebp
  4127a0:	imul   esi,DWORD PTR [eax+ebx*8-0x1e2f50c9],0xd5d00262
  4127ab:	xor    al,0x35
  4127ad:	out    0xc8,al
  4127af:	call   FWORD PTR [ebx-0x4a7a22aa]
  4127b5:	leave  
  4127b6:	or     ebp,DWORD PTR [ebp+0x7309e6ab]
  4127bc:	mov    cl,0x43
  4127be:	arpl   WORD PTR [edx+0x7d651f68],ax
  4127c4:	cmp    ch,BYTE PTR [eax-0x480fcf29]
  4127ca:	iret   
  4127cb:	pop    edx
  4127cc:	dec    edx
  4127cd:	and    DWORD PTR gs:[edi+0x3d],0x12b66bf
  4127d5:	xchg   DWORD PTR ds:0x1463666c,esi
  4127db:	and    al,0xa1
  4127dd:	ins    BYTE PTR es:[edi],dx
  4127de:	out    0xd7,eax
  4127e0:	outs   dx,DWORD PTR ds:[esi]
  4127e1:	mov    WORD PTR [edi-0x6a45128a],gs
  4127e7:	out    dx,eax
  4127e8:	push   edx
  4127e9:	ins    BYTE PTR es:[edi],dx
  4127ea:	or     BYTE PTR [ebx+0x5eb57316],bh
  4127f0:	cmp    BYTE PTR [ebp+0x6bab867e],bh
  4127f6:	cmp    al,0xd6
  4127f8:	mov    edx,0x86ec123b
  4127fd:	rol    BYTE PTR [edi-0x105b3cbd],1
  412803:	std    
  412804:	imul   edx,DWORD PTR [ecx],0x1f
  412807:	jl     0x412874
  412809:	cmp    BYTE PTR [ebp-0x58],dh
  41280c:	fisubr WORD PTR [eax-0x19]
  41280f:	push   ecx
  412810:	xlat   BYTE PTR ds:[ebx]
  412811:	clc    
  412812:	dec    edi
  412813:	rcr    esp,cl
  412815:	stos   DWORD PTR es:[edi],eax
  412816:	aas    
  412817:	push   ecx
  412818:	pop    es
  412819:	add    BYTE PTR [ecx],cl
  41281b:	jmp    0x78b54307
  412820:	cwde   
  412821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412822:	xchg   ecx,eax
  412823:	imul   ebp,DWORD PTR [ebx+0x72cadb3d],0x71e22651
  41282d:	aaa    
  41282e:	xor    BYTE PTR [edx],0xde
  412831:	dec    edi
  412832:	mov    al,ds:0xc41458a0
  412837:	cmp    al,BYTE PTR [edx+ebp*4+0x4a]
  41283b:	out    dx,al
  41283c:	ins    BYTE PTR es:[edi],dx
  41283d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283e:	push   eax
  41283f:	dec    ecx
  412840:	mov    al,ds:0x9477e64
  412845:	jmp    0x4746:0x5de68e0
  41284c:	or     DWORD PTR [edx],0x985503c1
  412852:	add    DWORD PTR [eax-0x50],esi
  412855:	(bad)  
  412857:	(bad)
  41285a:	js     0x4127e3
  41285c:	dec    esp
  41285d:	fldenv [esi]
  41285f:	xchg   edi,eax
  412860:	push   0xfcca7fbc
  412865:	daa    
  412866:	or     al,0x48
  412868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412869:	dec    ebx
  41286a:	jge    0x412833
  41286c:	out    dx,eax
  41286d:	sub    eax,0xfb4a9abc
  412872:	jne    0x4128b9
  412874:	mov    ah,0xdc
  412876:	or     ebp,DWORD PTR [ebx]
  412878:	xchg   ebx,eax
  412879:	outs   dx,BYTE PTR ds:[esi]
  41287a:	push   esi
  41287b:	dec    esi
  41287c:	sub    al,0x5c
  41287e:	dec    esp
  41287f:	cwde   
  412880:	clc    
  412881:	out    dx,eax
  412882:	dec    ebx
  412883:	scas   al,BYTE PTR es:[edi]
  412884:	push   edx
  412885:	adc    al,0xc9
  412887:	cld    
  412888:	push   ebp
  412889:	sar    BYTE PTR [esi+eax*1+0x78],1
  41288d:	int    0xf9
  41288f:	sti    
  412890:	std    
  412891:	adc    al,0xcf
  412893:	mov    edx,0x3dfc75b8
  412898:	sti    
  412899:	daa    
  41289a:	cmp    BYTE PTR [edx],bl
  41289c:	push   ebp
  41289d:	(bad)  
  41289f:	in     eax,0x34
  4128a1:	call   0x7e3c:0xc2484fc4
  4128a8:	pop    esi
  4128a9:	cs aaa 
  4128ab:	leave  
  4128ac:	jge    0x4128e4
  4128ae:	je     0x41284f
  4128b0:	ja     0x412838
  4128b2:	jno    0x41291d
  4128b4:	dec    edx
  4128b5:	xchg   BYTE PTR [edi],bl
  4128b7:	mov    gs,WORD PTR [eax+0xc]
  4128ba:	push   esi
  4128bb:	arpl   WORD PTR [ecx-0x576a6f58],dx
  4128c1:	cmp    dh,dh
  4128c3:	sub    eax,0xca014b00
  4128c8:	clc    
  4128c9:	dec    esi
  4128ca:	into   
  4128cb:	int    0xf2
  4128cd:	push   edx
  4128ce:	cmp    al,0x2
  4128d0:	ins    BYTE PTR es:[edi],dx
  4128d1:	and    ah,BYTE PTR [eax-0x21]
  4128d4:	int3   
  4128d5:	arpl   WORD PTR [esi-0x75],cx
  4128d8:	loopne 0x41293e
  4128da:	add    BYTE PTR [ebp+0x74c80933],bh
  4128e0:	xor    BYTE PTR [eax-0x5f0db39c],ch
  4128e6:	add    eax,0x234fbdb5
  4128eb:	and    al,0xb4
  4128ed:	dec    edx
  4128ee:	add    al,0x45
  4128f0:	add    ah,BYTE PTR [ebx+0x2f]
  4128f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f4:	xchg   edx,eax
  4128f5:	rcl    DWORD PTR [ebx-0x4d],0xde
  4128f9:	bswap  esp
  4128fb:	jns    0x412905
  4128fd:	mov    al,0xee
  4128ff:	int3   
  412900:	mov    eax,ds:0xa1e57c30
  412905:	ja     0x4128b6
  412907:	add    DWORD PTR [ecx-0x60],0xffffff82
  41290b:	daa    
  41290c:	clc    
  41290d:	(bad)  
  41290e:	out    0x50,al
  412910:	retf   
  412911:	mov    edi,0x2ad06bd4
  412916:	pusha  
  412917:	and    ebp,esp
  412919:	into   
  41291a:	call   FWORD PTR [esi]
  41291c:	pop    esp
  41291d:	jle    0x4128ad
  41291f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412920:	cmp    DWORD PTR [ebx],esi
  412922:	pop    ebp
  412923:	mov    esp,0xa1cdafef
  412928:	sub    ebp,DWORD PTR [ebp+0x3f22c9f3]
  41292e:	mov    BYTE PTR [esi+0x65],ch
  412931:	lahf   
  412932:	cmp    ecx,esp
  412934:	(bad)  
  412935:	xlat   BYTE PTR ds:[ebx]
  412936:	or     ebx,esp
  412938:	sub    BYTE PTR [ecx+0x56],bh
  41293b:	addr16 add eax,0xbd51a284
  412941:	xchg   esi,eax
  412942:	sub    eax,0x54526fe
  412947:	pop    ss
  412948:	xchg   DWORD PTR [edx-0x70bcd24a],esi
  41294e:	jne    0x4128d7
  412950:	repz popf 
  412952:	xor    DWORD PTR [edx-0x3e78d89],edx
  412958:	cmp    eax,DWORD PTR [ebx-0xc724dcf]
  41295e:	scas   al,BYTE PTR es:[edi]
  41295f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412960:	or     edx,esp
  412962:	pop    esp
  412963:	adc    dl,BYTE PTR [ecx+0x16]
  412966:	ret    
  412967:	mov    bh,0xd8
  412969:	xor    al,0xac
  41296b:	push   esp
  41296c:	outs   dx,BYTE PTR ds:[esi]
  41296d:	aaa    
  41296e:	xor    DWORD PTR [ecx+0x30],ecx
  412971:	sahf   
  412972:	sub    eax,eax
  412974:	stos   BYTE PTR es:[edi],al
  412975:	fnsave cs:[edi+ebp*4+0x35]
  41297a:	addr16 das 
  41297c:	fwait
  41297d:	inc    edi
  41297e:	aam    0xd3
  412980:	mov    eax,0x5e2d00f9
  412985:	inc    DWORD PTR [ebp-0x5d5af886]
  41298b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298c:	sub    al,al
  41298e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41298f:	mov    fs,esp
  412991:	push   cs
  412992:	jl     0x412986
  412994:	call   0xa684:0xc54ad7c6
  41299b:	or     dh,BYTE PTR [eax]
  41299d:	lods   eax,DWORD PTR ds:[esi]
  41299e:	jbe    0x412939
  4129a0:	sub    eax,0x83cd5a02
  4129a5:	cmp    DWORD PTR [esi+0x9145484],0x35
  4129ac:	sbb    edi,DWORD PTR [ebp+0x1ee454c7]
  4129b2:	dec    ecx
  4129b3:	jecxz  0x412990
  4129b5:	mov    cl,0x84
  4129b7:	mov    esp,0x3cf11ad0
  4129bc:	push   eax
  4129bd:	mov    eax,ds:0x4c578cd3
  4129c2:	mov    ecx,0x2637e8e9
  4129c7:	ds push ds
  4129c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ca:	test   BYTE PTR [edi-0x7],dh
  4129cd:	xchg   DWORD PTR [esi-0x57],ebx
  4129d0:	leave  
  4129d1:	mov    ecx,0xbb7744c
  4129d6:	fnstcw WORD PTR [ecx+0x1036c13f]
  4129dc:	dec    ebp
  4129dd:	xor    ah,cl
  4129df:	cld    
  4129e0:	mov    esp,0x67129a8d
  4129e5:	xlat   BYTE PTR ds:[ebx]
  4129e6:	cli    
  4129e7:	dec    edi
  4129e8:	sub    eax,DWORD PTR [eax+0x70]
  4129eb:	ins    DWORD PTR es:[edi],dx
  4129ec:	add    edi,DWORD PTR [esi]
  4129ee:	(bad)  
  4129ef:	mov    cl,0x6
  4129f1:	mov    WORD PTR [edx-0x1f81a26b],fs
  4129f7:	call   ebx
  4129f9:	leave  
  4129fa:	cld    
  4129fb:	div    BYTE PTR [edi+0x28367333]
  412a01:	xor    al,BYTE PTR [edi+0x42d6f20]
  412a07:	es out dx,eax
  412a09:	pushf  
  412a0a:	loope  0x412a2d
  412a0c:	mov    ebp,0x65bde8e7
  412a11:	jno    0x4129bc
  412a13:	jne    0x412a6b
  412a15:	out    0x1d,al
  412a17:	js     0x412a1a
  412a19:	inc    esp
  412a1a:	ja     0x412a46
  412a1c:	cli    
  412a1d:	sbb    eax,DWORD PTR [ebx]
  412a1f:	lds    ebp,FWORD PTR [edi-0x63]
  412a22:	(bad)  
  412a24:	jmp    0x412a98
  412a26:	cli    
  412a27:	in     eax,0x97
  412a29:	add    cl,dh
  412a2b:	sar    esp,cl
  412a2d:	jle    0x412a79
  412a2f:	ror    BYTE PTR [esi+0x7d188532],0xb5
  412a36:	xchg   DWORD PTR [edx-0x57],ebx
  412a39:	arpl   WORD PTR [esi],bp
  412a3b:	jecxz  0x412a32
  412a3d:	xchg   DWORD PTR [ebx-0x6ac5f2b],esp
  412a43:	cdq    
  412a44:	test   eax,0x7a8f5a88
  412a49:	jp     0x412ab9
  412a4b:	mov    edx,0x403f1ee3
  412a50:	mov    ah,0x37
  412a52:	adc    edx,DWORD PTR [edi+0x40]
  412a55:	(bad)  
  412a57:	cmp    DWORD PTR [eax-0x5d],esi
  412a5a:	or     al,0x1f
  412a5c:	or     al,0x0
  412a5e:	les    esi,FWORD PTR [ebx-0x5f]
  412a61:	xor    DWORD PTR [ecx-0x1a1fd6af],0x891e4b18
  412a6b:	xchg   cl,bh
  412a6d:	mov    ecx,0xeb803a6a
  412a72:	add    ch,dh
  412a74:	push   ebp
  412a75:	push   ss
  412a76:	jo     0x412a3c
  412a78:	test   BYTE PTR [ebx+0x25],0xf1
  412a7c:	push   esi
  412a7d:	fld    QWORD PTR [eiz*2+0x4cfed4a9]
  412a84:	sbb    ebp,DWORD PTR [ebp+0x41aa0ff0]
  412a8a:	into   
  412a8b:	int3   
  412a8c:	loop   0x412a5a
  412a8e:	(bad)  
  412a8f:	jae    0x412a70
  412a91:	sub    eax,0x8e67e08a
  412a96:	sbb    BYTE PTR [eax-0x7181a1fe],bl
  412a9c:	int3   
  412a9d:	mov    eax,0x45f21ee
  412aa2:	ret    0x9aff
  412aa5:	pop    ecx
  412aa6:	cs mov cl,0xdf
  412aa9:	sub    ebp,ecx
  412aab:	leave  
  412aac:	mov    ds:0xa14c841c,eax
  412ab1:	test   eax,0x717f0315
  412ab6:	inc    esi
  412ab7:	pop    es
  412ab8:	retf   
  412ab9:	sbb    BYTE PTR [esi+ecx*4-0x784336ed],dl
  412ac0:	sahf   
  412ac1:	pop    ss
  412ac2:	mov    dh,0xcd
  412ac4:	rol    BYTE PTR [ecx-0x6b],1
  412ac7:	arpl   WORD PTR [ebp+0x1781cf1d],sp
  412acd:	cmp    BYTE PTR [si],al
  412ad0:	ins    BYTE PTR es:[edi],dx
  412ad1:	jbe    0x412b4d
  412ad3:	sub    ah,ah
  412ad5:	retf   
  412ad6:	fstp   TBYTE PTR [esi+0x16]
  412ad9:	pop    ds
  412ada:	adc    eax,0x279fcb24
  412adf:	jge    0x412b14
  412ae1:	mov    ds:0x99cd425a,eax
  412ae6:	cmp    BYTE PTR [ebx+0x57],0x26
  412aea:	push   cs
  412aeb:	inc    ecx
  412aec:	push   ebp
  412aed:	push   esi
  412aee:	jo     0x412b2c
  412af0:	or     al,0x46
  412af2:	retf   0xfee0
  412af5:	add    BYTE PTR [ebp+0x3b],0xc2
  412af9:	cmp    al,0x1b
  412afb:	fimul  DWORD PTR [edx+0x7e]
  412afe:	pop    es
  412aff:	and    esp,DWORD PTR [ebx+0x4beab580]
  412b05:	and    ah,BYTE PTR [ebx+0x74]
  412b08:	aad    0x53
  412b0a:	rol    BYTE PTR [edi-0x78a04641],0xec
  412b11:	push   edx
  412b12:	shr    DWORD PTR [ecx+0x66],1
  412b15:	aaa    
  412b16:	scas   al,BYTE PTR es:[edi]
  412b17:	sbb    al,0xff
  412b19:	scas   al,BYTE PTR es:[edi]
  412b1a:	or     ebp,ebp
  412b1c:	sbb    DWORD PTR [ebp+0x5d],0x6
  412b20:	jecxz  0x412aba
  412b22:	out    0x68,al
  412b24:	int    0x5
  412b26:	add    DWORD PTR [ebp+0x68],esp
  412b29:	mov    eax,0x82337b18
  412b2e:	int3   
  412b2f:	sub    edx,DWORD PTR [edi]
  412b31:	adc    BYTE PTR [esi],ch
  412b33:	jae    0x412b22
  412b35:	dec    ebp
  412b36:	mov    ch,0x4d
  412b38:	cdq    
  412b39:	adc    cl,BYTE PTR [edi+ebx*4]
  412b3c:	sub    al,0xb3
  412b3e:	sub    BYTE PTR [ebx-0x1e],ah
  412b41:	xchg   edi,eax
  412b42:	cmp    eax,0x5ae7197d
  412b47:	icebp  
  412b48:	adc    eax,0x7bea83bc
  412b4d:	fild   WORD PTR [eax+0x3bf9dfbb]
  412b53:	imul   edx,DWORD PTR [ebx+edx*2],0xa7849e29
  412b5a:	mov    al,0x16
  412b5c:	lahf   
  412b5d:	dec    ebx
  412b5e:	cmp    DWORD PTR [ebp+eiz*1+0x35660f77],ecx
  412b65:	scas   eax,DWORD PTR es:[edi]
  412b66:	test   al,0x60
  412b68:	or     ah,bl
  412b6a:	adc    eax,DWORD PTR [eax]
  412b6c:	std    
  412b6d:	nop
  412b6e:	adc    ah,BYTE PTR [ecx+ebp*8+0x1aff0a33]
  412b75:	aaa    
  412b76:	jmp    0x9a2d:0xc0ae2385
  412b7d:	push   cs
  412b7e:	in     eax,dx
  412b7f:	xchg   edx,eax
  412b80:	mov    WORD PTR [eax],?
  412b82:	cli    
  412b83:	clc    
  412b84:	ins    DWORD PTR es:[edi],dx
  412b85:	cmp    al,0x2d
  412b87:	out    0xf5,al
  412b89:	imul   esp,esp,0x38
  412b8c:	sbb    DWORD PTR ds:0xba25cb7c,eax
  412b92:	sub    eax,0xd81f973
  412b97:	inc    eax
  412b98:	repz sbb BYTE PTR ds:0xfca4b358,cl
  412b9f:	add    cl,dl
  412ba1:	shl    edx,1
  412ba3:	and    dl,cl
  412ba5:	cmp    al,0x2
  412ba7:	sub    bl,BYTE PTR [eax-0xc]
  412baa:	stc    
  412bab:	lmsw   WORD PTR [eax]
  412bae:	int3   
  412baf:	aad    0x1f
  412bb1:	xchg   esp,eax
  412bb2:	stos   BYTE PTR es:[edi],al
  412bb3:	loop   0x412bd2
  412bb5:	ins    DWORD PTR es:[edi],dx
  412bb6:	xor    BYTE PTR [eax+0x25],bh
  412bb9:	mov    ecx,0x7fab0377
  412bbe:	or     BYTE PTR [ebx-0x11],ch
  412bc1:	jo     0x412c39
  412bc3:	(bad)  
  412bc4:	nop
  412bc5:	and    ch,BYTE PTR [ecx]
  412bc7:	push   es
  412bc8:	and    esi,DWORD PTR [esi+ecx*4-0x60bc5105]
  412bcf:	fdivr  st,st(3)
  412bd1:	shl    DWORD PTR [esi-0x15],0xcd
  412bd5:	daa    
  412bd6:	pop    ebp
  412bd7:	dec    ebx
  412bd8:	imul   ecx,DWORD PTR [ecx-0x48],0x9052bbaa
  412bdf:	test   ecx,0x831f50a6
  412be5:	and    esp,DWORD PTR [ecx+eiz*1+0x3a]
  412be9:	clc    
  412bea:	jae    0x412b86
  412bec:	sub    al,0x7e
  412bee:	fisttp WORD PTR [edx+0x1fa0bf80]
  412bf4:	pop    ecx
  412bf5:	add    ch,BYTE PTR [eax-0x70586dca]
  412bfb:	pop    es
  412bfc:	inc    edi
  412bfd:	push   esp
  412bfe:	popf   
  412bff:	dec    eax
  412c00:	pop    esi
  412c01:	loop   0x412bab
  412c03:	pop    es
  412c04:	sub    eax,0xf7dabb3
  412c09:	ja     0x412bb6
  412c0b:	int    0x36
  412c0d:	cmp    dl,BYTE PTR fs:0x9078ea74
  412c14:	pop    ds
  412c15:	add    ecx,edx
  412c17:	push   es
  412c18:	mov    BYTE PTR [ebp+0x4],ch
  412c1b:	mov    ds:0x3effcaa9,eax
  412c20:	or     DWORD PTR [ecx],ebx
  412c22:	int    0x7f
  412c24:	(bad)  
  412c25:	fiadd  WORD PTR [ecx-0x4a]
  412c28:	cmp    edi,DWORD PTR [edi+0x46]
  412c2b:	pop    edx
  412c2c:	mov    ch,0x3d
  412c2e:	add    DWORD PTR [ebp-0x17],ebx
  412c31:	inc    edi
  412c32:	cmc    
  412c33:	sbb    al,0xae
  412c35:	jnp    0x412bea
  412c37:	bound  ecx,QWORD PTR [edi]
  412c39:	fs lock cmp esp,0xffffff8d
  412c3e:	mov    ds:0x93ea786c,eax
  412c43:	dec    esi
  412c44:	nop
  412c45:	mov    edx,0xe59bc72f
  412c4a:	pusha  
  412c4b:	nop
  412c4c:	pop    edi
  412c4d:	call   0xf939014b
  412c52:	mov    BYTE PTR [ebp+0x19b89e62],bl
  412c58:	daa    
  412c59:	sti    
  412c5a:	xor    DWORD PTR [ebp+0x74accb11],esi
  412c60:	cld    
  412c61:	pop    edx
  412c62:	xchg   DWORD PTR [esi+0x2b887f3b],esp
  412c68:	mov    al,ds:0xded0b28d
  412c6d:	pop    ebx
  412c6e:	or     BYTE PTR [ebx-0x3c6e5289],ch
  412c74:	sbb    bl,BYTE PTR [edx+ecx*2+0x2dac4e]
  412c7b:	scas   al,BYTE PTR es:[edi]
  412c7c:	add    eax,0x5669dbb8
  412c81:	push   esi
  412c82:	push   esp
  412c83:	push   ds
  412c84:	inc    ebp
  412c85:	add    DWORD PTR [eax-0x3],0x17150e76
  412c8c:	out    0x9d,eax
  412c8e:	xchg   ebp,eax
  412c8f:	hlt    
  412c90:	add    ebx,DWORD PTR [edi]
  412c92:	xor    edx,esp
  412c94:	sti    
  412c95:	push   es
  412c96:	mov    eax,0xcf49e31d
  412c9b:	(bad)  
  412c9d:	fistp  WORD PTR [edx+0x9]
  412ca0:	inc    ebp
  412ca1:	in     eax,dx
  412ca2:	cmp    bl,cl
  412ca4:	jb     0x412c44
  412ca6:	sbb    al,0x5
  412ca8:	bound  eax,QWORD PTR [esi+esi*1+0x6379c7d4]
  412caf:	mov    WORD PTR [edx+0x7b4d43],ds
  412cb5:	stc    
  412cb6:	cs out dx,al
  412cb8:	xor    edx,edi
  412cba:	mov    bl,0xd7
  412cbc:	call   0x17a9:0x282f5f1
  412cc3:	pop    esp
  412cc4:	or     eax,0xb63986d5
  412cc9:	xor    DWORD PTR [eax+eax*2-0x45],esp
  412ccd:	shl    edx,1
  412ccf:	cmc    
  412cd0:	loope  0x412d3a
  412cd2:	xchg   edi,ebx
  412cd4:	xchg   ebp,eax
  412cd5:	stos   DWORD PTR es:[edi],eax
  412cd6:	or     al,0x3b
  412cd8:	icebp  
  412cd9:	jne    0x412cd7
  412cdb:	pop    ds
  412cdc:	push   0x30
  412cde:	sbb    eax,0xf5d4f8d9
  412ce3:	ins    DWORD PTR es:[edi],dx
  412ce4:	leave  
  412ce5:	sbb    al,BYTE PTR [ecx]
  412ce7:	jg     0x412c6e
  412ce9:	fbld   TBYTE PTR [ecx]
  412ceb:	shr    ecx,0x55
  412cee:	push   0xffffffde
  412cf0:	nop
  412cf1:	or     eax,0x9775ee78
  412cf6:	xchg   edx,eax
  412cf7:	repnz lock mov ebp,0x310f448d
  412cfe:	mov    DWORD PTR [ebp-0x10093b06],eax
  412d04:	inc    ecx
  412d05:	sti    
  412d06:	cdq    
  412d07:	pop    eax
  412d08:	lea    edx,[esi-0x7d]
  412d0b:	fst    DWORD PTR [edi+0x34]
  412d0e:	hlt    
  412d0f:	cmp    ch,dl
  412d11:	sub    esp,esp
  412d13:	rcr    DWORD PTR fs:[edx+0x1d],cl
  412d17:	cmp    al,0x61
  412d19:	icebp  
  412d1a:	mov    ebx,0xdc72ff22
  412d1f:	and    ebx,DWORD PTR es:[ecx]
  412d22:	inc    ebx
  412d23:	xor    BYTE PTR [ecx-0x3159e3e6],0xf5
  412d2a:	push   0xd09a68c
  412d2f:	jo     0x412d69
  412d31:	jecxz  0x412db1
  412d33:	cmc    
  412d34:	bound  ebx,QWORD PTR [eax]
  412d36:	dec    esp
  412d37:	xchg   ecx,eax
  412d38:	call   0x1893:0x3762fb01
  412d3f:	xchg   ecx,esp
  412d41:	cmp    DWORD PTR [eax+0x6a1bfe75],ecx
  412d47:	sbb    ebp,DWORD PTR [esi-0x9]
  412d4a:	mov    al,0xe1
  412d4c:	aam    0x3f
  412d4e:	stos   DWORD PTR es:[edi],eax
  412d4f:	and    DWORD PTR [ecx+0x68],ebp
  412d52:	jmp    eax
  412d54:	cmp    DWORD PTR [edi+0xd],ecx
  412d57:	adc    dl,al
  412d59:	je     0x412ce9
  412d5b:	rol    BYTE PTR [esi+0x2d],cl
  412d5e:	test   DWORD PTR [ebx],eax
  412d60:	mov    esp,0xa5cd50aa
  412d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d66:	mov    ds:0xb676f37b,eax
  412d6b:	iret   
  412d6c:	cmp    al,0x11
  412d6e:	jo     0x412d13
  412d70:	mov    DWORD PTR [ebx],esi
  412d72:	sbb    eax,0xab89138f
  412d77:	scas   eax,DWORD PTR es:[edi]
  412d78:	(bad)  
  412d7a:	aam    0xd8
  412d7c:	push   ecx
  412d7d:	(bad)  
  412d7e:	push   cs
  412d7f:	nop
  412d80:	ins    BYTE PTR es:[edi],dx
  412d81:	dec    ebp
  412d82:	add    al,0xae
  412d84:	mov    ebx,0xea634622
  412d89:	jno    0x412dc2
  412d8b:	mul    BYTE PTR [ebp+0x752de94f]
  412d91:	enter  0x161b,0x75
  412d95:	push   edi
  412d96:	xor    ebx,DWORD PTR [ebx+eax*1+0x18]
  412d9a:	aas    
  412d9b:	mov    esi,ecx
  412d9d:	(bad)  [edx-0x44]
  412da0:	cmp    eax,0xf6e1e63e
  412da5:	daa    
  412da6:	in     eax,0xe6
  412da8:	sub    cl,al
  412daa:	rcl    DWORD PTR [edx+0x4c89bffe],1
  412db0:	mov    ch,0x95
  412db2:	pushf  
  412db3:	mov    dh,BYTE PTR [eax]
  412db5:	inc    edx
  412db6:	pop    ebp
  412db7:	(bad)  
  412db9:	push   edx
  412dba:	(bad)  
  412dbb:	gs inc ecx
  412dbd:	into   
  412dbe:	pop    eax
  412dbf:	sbb    BYTE PTR [ebx-0x30],0x80
  412dc3:	xchg   edi,eax
  412dc4:	aas    
  412dc5:	outs   dx,BYTE PTR ds:[esi]
  412dc6:	jb     0x412dee
  412dc8:	aad    0x5d
  412dca:	and    bh,dl
  412dcc:	push   ecx
  412dcd:	sub    al,0x84
  412dcf:	(bad)  [ebx-0x44b95d74]
  412dd5:	jno    0x412e28
  412dd7:	cli    
  412dd8:	xchg   ebp,eax
  412dd9:	xchg   ebp,eax
  412dda:	jg     0x412dc3
  412ddc:	cmp    ch,al
  412dde:	cs in  eax,0xec
  412de1:	test   DWORD PTR [eax-0x68],0x6c03e855
  412de8:	mov    bh,0xaf
  412dea:	dec    esp
  412deb:	pop    es
  412dec:	dec    edx
  412ded:	out    0x69,eax
  412def:	lock int 0x9b
  412df2:	add    eax,0xcd877627
  412df7:	pop    es
  412df8:	adc    edx,DWORD PTR [ebx+0x2a66f6aa]
  412dfe:	(bad)  
  412e00:	lock mov ch,0x60
  412e03:	rsm    
  412e05:	int3   
  412e06:	out    dx,eax
  412e07:	dec    edi
  412e08:	jo     0x412dae
  412e0a:	(bad)  
  412e0c:	leave  
  412e0d:	push   edi
  412e0e:	xchg   ebp,eax
  412e0f:	mov    dh,0xb2
  412e11:	call   0x67f57c27
  412e16:	mov    bh,0xe9
  412e18:	inc    esp
  412e19:	aas    
  412e1a:	sbb    al,BYTE PTR [ebp+0x4dc762b3]
  412e20:	icebp  
  412e21:	jl     0x412dab
  412e23:	es je  0x412dcf
  412e26:	call   0xdd118381
  412e2b:	gs scas al,BYTE PTR es:[edi]
  412e2d:	rol    BYTE PTR [ebx+0x2f51cfb3],1
  412e33:	sub    BYTE PTR [ebx+0x4656a141],ah
  412e39:	in     eax,0x48
  412e3b:	xchg   BYTE PTR [ecx-0x22f7cbf7],dh
  412e41:	cmp    BYTE PTR [esi+0x20686a7c],dl
  412e47:	(bad)  
  412e48:	std    
  412e49:	dec    ebp
  412e4a:	sbb    DWORD PTR [eax+ecx*2-0x78e1cd5f],eax
  412e51:	pop    ecx
  412e52:	pusha  
  412e53:	pop    es
  412e54:	(bad)  
  412e55:	test   al,0x68
  412e57:	dec    esi
  412e58:	imul   edi,DWORD PTR [esi+ebx*1-0x2],0xffffff84
  412e5d:	inc    ebx
  412e5e:	cld    
  412e5f:	xchg   esi,eax
  412e60:	sbb    al,0x60
  412e62:	and    BYTE PTR [ecx+ebx*1],cl
  412e65:	gs xchg esi,eax
  412e67:	xor    al,0x42
  412e69:	ins    DWORD PTR es:[edi],dx
  412e6a:	mov    ds:0x1f671ee9,eax
  412e6f:	mov    eax,0xebfd000f
  412e74:	(bad)  
  412e76:	popf   
  412e77:	xchg   ebp,eax
  412e78:	push   ds
  412e79:	xchg   edx,eax
  412e7a:	or     ebx,DWORD PTR [esi+0x9]
  412e7d:	imul   esi,ebx,0xe
  412e80:	ror    BYTE PTR [ecx-0x197046ef],cl
  412e86:	stos   BYTE PTR es:[edi],al
  412e87:	rol    DWORD PTR [edx-0x49357cb],0x56
  412e8e:	push   esi
  412e8f:	jns    0x412eff
  412e91:	fmul   DWORD PTR [ecx+0x5f]
  412e94:	inc    edx
  412e95:	into   
  412e96:	(bad)  
  412e97:	mov    ebp,0x7655398c
  412e9c:	push   edi
  412e9d:	int3   
  412e9e:	add    BYTE PTR [edi],0x3a
  412ea1:	cld    
  412ea2:	fs ss enter 0x3f2b,0xb
  412ea8:	mov    edi,0xf66bd8d5
  412ead:	pop    eax
  412eae:	mov    DWORD PTR [edx-0x3b64303c],eax
  412eb4:	push   edx
  412eb5:	mov    bl,0x56
  412eb7:	lds    ebp,FWORD PTR [esp+ebp*8-0xef1258]
  412ebe:	daa    
  412ebf:	pop    esi
  412ec0:	aaa    
  412ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec2:	fldcw  WORD PTR [edi+0x3eee6b]
  412ec8:	sub    esi,DWORD PTR [ebp-0x2f5e9d83]
  412ece:	jns    0x412eaa
  412ed0:	fidiv  WORD PTR gs:[edx-0x3104af7c]
  412ed7:	pop    edi
  412ed8:	mov    bh,0xd8
  412eda:	jno    0x412eb9
  412edc:	(bad)  
  412ede:	sub    dh,bl
  412ee0:	mov    WORD PTR [ecx+0x3a],es
  412ee3:	pop    edi
  412ee4:	and    esi,DWORD PTR [ecx]
  412ee6:	fst    DWORD PTR [ebp+0x78bb0aa7]
  412eec:	xor    cl,BYTE PTR [eax+0x7a]
  412eef:	pop    esi
  412ef0:	sbb    ah,BYTE PTR [ebx-0x59999c16]
  412ef6:	inc    ebx
  412ef7:	pop    es
  412ef8:	jae    0x412ed5
  412efa:	int3   
  412efb:	aas    
  412efc:	cmp    esi,DWORD PTR [edi-0x64]
  412eff:	jmp    0xd3fb:0xb999e5e5
  412f06:	popa   
  412f07:	cmc    
  412f08:	pop    ecx
  412f09:	repz push cs
  412f0b:	(bad)  
  412f0c:	(bad)  
  412f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0e:	jmp    0x3aec:0xe12a5c7a
  412f15:	inc    eax
  412f16:	clc    
  412f17:	xchg   esi,eax
  412f18:	mov    esp,0x466e11ad
  412f1d:	loopne 0x412f9c
  412f1f:	sbb    esp,eax
  412f21:	(bad)  
  412f23:	xlat   BYTE PTR ds:[ebx]
  412f24:	pop    edi
  412f25:	sub    eax,DWORD PTR ds:[ebp+0x51]
  412f29:	adc    DWORD PTR [esi+0x48b2dd32],ebp
  412f2f:	jge    0x412f09
  412f31:	jmp    0x161e:0x98895da9
  412f38:	xor    BYTE PTR [ecx],ch
  412f3a:	push   ecx
  412f3b:	lds    eax,FWORD PTR [ebx+0x18]
  412f3e:	inc    ebp
  412f3f:	addr16 jmp 0x412ec7
  412f42:	jle    0x412f5c
  412f44:	push   esi
  412f45:	jle    0x412eec
  412f47:	or     eax,0x7fc9a5db
  412f4c:	xlat   BYTE PTR ds:[ebx]
  412f4d:	pop    ds
  412f4e:	ins    BYTE PTR es:[edi],dx
  412f4f:	call   0x994e2560
  412f54:	mov    ebx,0x17684533
  412f59:	mov    al,0xf8
  412f5b:	rcl    bl,cl
  412f5d:	arpl   WORD PTR [ecx-0x3e74050b],dx
  412f63:	into   
  412f64:	mov    eax,ds:0x5b781dbc
  412f69:	daa    
  412f6a:	and    BYTE PTR [ecx+0x4],0xcc
  412f6e:	stc    
  412f6f:	popf   
  412f70:	xchg   BYTE PTR [eax+0x202ec428],ah
  412f76:	ins    DWORD PTR es:[edi],dx
  412f77:	fs retf 0x683f
  412f7b:	and    esp,DWORD PTR [ecx+0x4b64daa0]
  412f81:	aad    0x64
  412f83:	push   esp
  412f84:	or     dh,BYTE PTR [edx-0x3a]
  412f87:	mov    esi,0x9f07c4d3
  412f8c:	(bad)  
  412f8d:	mov    esi,0xb755e4de
  412f92:	cdq    
  412f93:	mov    cl,BYTE PTR [esi+eiz*2-0x1ca425c4]
  412f9a:	lds    ecx,FWORD PTR [ebp+edx*4+0x1f]
  412f9e:	xchg   ebp,eax
  412f9f:	ins    DWORD PTR es:[edi],dx
  412fa0:	int3   
  412fa1:	adc    bl,0xe4
  412fa4:	mov    edx,es
  412fa6:	bound  edx,QWORD PTR [ecx+0x6e]
  412fa9:	icebp  
  412faa:	icebp  
  412fab:	int3   
  412fac:	adc    eax,0x5fd38dbe
  412fb1:	xchg   BYTE PTR [ebp-0x434b53ec],bh
  412fb7:	mov    ecx,DWORD PTR ds:0x4646791f
  412fbd:	pop    edi
  412fbe:	je     0x412fcd
  412fc0:	mov    edi,0x7f8ae17e
  412fc5:	es mov esi,0xb380e276
  412fcb:	jns    0x41303a
  412fcd:	push   es
  412fce:	add    eax,0xea2f90ba
  412fd3:	cdq    
  412fd4:	sbb    al,0x66
  412fd6:	lea    edx,[edi-0x65]
  412fd9:	retf   0x5f47
  412fdc:	sbb    eax,0x62954032
  412fe1:	iret   
  412fe2:	test   eax,0xd0fe9612
  412fe7:	stos   DWORD PTR es:[edi],eax
  412fe8:	jnp    0x412f83
  412fea:	and    BYTE PTR [eax+0x55],bh
  412fed:	retf   0xdca3
  412ff0:	mov    al,ds:0xa6d80a79
  412ff5:	repz cdq 
  412ff7:	loop   0x413052
  412ff9:	loop   0x413066
  412ffb:	adc    bh,BYTE PTR [edi]
  412ffd:	jbe    0x412fb0
  412fff:	lds    ebx,FWORD PTR [eax+esi*1+0xf]
  413003:	pop    edi
  413004:	iret   
  413005:	jl     0x413052
  413007:	adc    eax,DWORD PTR [ebx-0x5a402e9]
  41300d:	(bad)  
  41300e:	or     BYTE PTR [ebx+0xb],cl
  413011:	push   eax
  413012:	imul   esp,DWORD PTR [edi-0x51],0x47a38326
  413019:	xchg   DWORD PTR [eax],ebp
  41301b:	pop    edi
  41301c:	mov    edx,0xf0358035
  413021:	les    ecx,FWORD PTR [esi+0x22]
  413024:	stos   DWORD PTR es:[edi],eax
  413025:	fld    QWORD PTR [esi-0x80]
  413028:	and    BYTE PTR [edi+0x47],bl
  41302b:	cmp    BYTE PTR [edx],0x5a
  41302e:	mov    edi,0x4a66f067
  413033:	hlt    
  413034:	xchg   ch,ch
  413036:	inc    edx
  413037:	lahf   
  413038:	pop    ebx
  413039:	push   ebx
  41303a:	scas   al,BYTE PTR es:[edi]
  41303b:	out    0xc8,al
  41303d:	(bad)  
  41303e:	mov    bl,0xec
  413040:	out    dx,eax
  413041:	jl     0x413008
  413043:	fimul  DWORD PTR [ecx]
  413045:	ins    BYTE PTR es:[edi],dx
  413046:	fnstenv [edx]
  413048:	adc    eax,0x1a7ff0ed
  41304d:	sbb    eax,DWORD PTR [ecx+0x69e1454]
  413053:	call   0x413e6816
  413058:	push   es
  413059:	cmp    DWORD PTR [edi-0x24],edx
  41305c:	mov    BYTE PTR [edi+eax*4],0xab
  413060:	sub    al,0x7e
  413062:	mov    esi,0x8a657f8c
  413067:	xchg   ebp,eax
  413068:	mov    eax,0x361c45e4
  41306d:	dec    esp
  41306e:	mov    al,BYTE PTR [ebx-0x1f]
  413071:	in     eax,dx
  413072:	fcomp  QWORD PTR es:[ebp-0x80]
  413076:	retf   0xaf0a
  413079:	out    0x57,al
  41307b:	and    al,0x95
  41307d:	int3   
  41307e:	jmp    0x7cd7:0xa15db0cb
  413085:	cmc    
  413086:	dec    esi
  413087:	mov    ebx,0xbb913eb
  41308c:	cmp    DWORD PTR [ebx-0x63f8ee96],esp
  413092:	xor    al,0x6
  413094:	neg    DWORD PTR [ecx]
  413096:	dec    ecx
  413097:	pop    ds
  413098:	les    esi,FWORD PTR [eax+0x2c]
  41309b:	or     dh,BYTE PTR [edi]
  41309d:	(bad)  
  41309e:	sub    eax,0x5b1488c3
  4130a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a4:	enter  0x165a,0x5a
  4130a8:	test   DWORD PTR ds:0xc5e8395c,ecx
  4130ae:	(bad)  
  4130af:	xchg   ebx,eax
  4130b0:	out    0x10,eax
  4130b2:	(bad)  
  4130b3:	and    DWORD PTR [eax],ecx
  4130b5:	push   ebx
  4130b6:	jp     0x4130d4
  4130b8:	clc    
  4130b9:	jecxz  0x4130bc
  4130bb:	mov    ebx,0xbf639283
  4130c0:	sub    cl,bl
  4130c2:	jb     0x413044
  4130c4:	sbb    dh,al
  4130c6:	fisttp QWORD PTR [ebx-0x44]
  4130c9:	repnz imul DWORD PTR [ebp+0x5cec9889]
  4130d0:	push   ds
  4130d1:	cli    
  4130d2:	mov    edi,0x7fb8e4e4
  4130d7:	inc    eax
  4130d8:	fcomp  st(4)
  4130da:	mov    BYTE PTR [eax+0x386565bf],dl
  4130e0:	mov    bl,0xb5
  4130e2:	sbb    DWORD PTR [edi-0x56],edx
  4130e5:	inc    ecx
  4130e6:	mov    ds:0xbd1b7040,eax
  4130eb:	mov    bh,dl
  4130ed:	out    dx,al
  4130ee:	sbb    ch,BYTE PTR [eax+eiz*4+0x39]
  4130f2:	jmp    0x9884a55a
  4130f7:	mov    al,0xe9
  4130f9:	int3   
  4130fa:	mov    edx,0x62583ff9
  4130ff:	bound  ebp,QWORD PTR [eax]
  413101:	cmp    ecx,DWORD PTR [edi]
  413103:	imul   ebx,DWORD PTR [eax],0xffffff86
  413106:	add    eax,0x846132a1
  41310b:	fnstcw WORD PTR [ebx+0x71]
  41310e:	sbb    esi,eax
  413110:	jecxz  0x4130a9
  413112:	push   ss
  413113:	push   esp
  413114:	mov    esi,0x8f8ce195
  413119:	push   esp
  41311a:	(bad)
  41311d:	mov    edx,0xe39a0d9
  413122:	test   BYTE PTR [ecx+ebx*1+0x3c0cc8e9],bh
  413129:	int3   
  41312a:	mov    ds:0x27c980ca,al
  41312f:	aas    
  413130:	push   es
  413131:	cmp    DWORD PTR [ecx],esi
  413133:	pop    ebx
  413134:	sahf   
  413135:	jo     0x413114
  413137:	aad    0x3f
  413139:	test   eax,0xdcf4281d
  41313e:	bound  edi,QWORD PTR [ecx]
  413140:	pop    edx
  413141:	cwde   
  413142:	sub    DWORD PTR [eax-0x2944c74f],edx
  413148:	stos   BYTE PTR es:[edi],al
  413149:	pusha  
  41314a:	add    al,0x41
  41314c:	jb     0x413182
  41314e:	and    al,0x6c
  413150:	cmp    eax,0xdb371968
  413155:	icebp  
  413156:	stos   DWORD PTR es:[edi],eax
  413157:	fdivr  DWORD PTR [eax-0x12]
  41315a:	add    al,0x47
  41315c:	sub    eax,0x155318dc
  413161:	popf   
  413162:	cmp    bl,dh
  413164:	push   esi
  413165:	add    BYTE PTR ds:0xc5fed748,dh
  41316b:	aas    
  41316c:	cdq    
  41316d:	ret    
  41316e:	jbe    0x4131ea
  413170:	pusha  
  413171:	push   edi
  413172:	addr16 mov cl,0x2a
  413175:	and    dh,al
  413177:	xchg   esi,eax
  413178:	nop
  413179:	mov    eax,ds:0xec79c10d
  41317e:	inc    esi
  41317f:	cdq    
  413180:	cld    
  413181:	or     dl,BYTE PTR [ebx-0x396ebfe3]
  413187:	xor    edx,edx
  413189:	xor    BYTE PTR [eax+0x3d],cl
  41318c:	pop    eax
  41318d:	sbb    al,0xf0
  41318f:	dec    esi
  413190:	or     al,0x96
  413192:	jecxz  0x4131be
  413194:	scas   eax,DWORD PTR es:[edi]
  413195:	outs   dx,BYTE PTR ds:[esi]
  413196:	push   ds
  413197:	in     al,0x98
  413199:	xchg   edx,eax
  41319a:	inc    ecx
  41319b:	fisubr WORD PTR [ebp+eax*1-0x35333587]
  4131a2:	fidiv  WORD PTR [edi-0x2eac9d9d]
  4131a8:	mov    ecx,DWORD PTR [edx]
  4131aa:	jg     0x4131ac
  4131ac:	scas   al,BYTE PTR es:[edi]
  4131ad:	fs bnd jo 0x41319a
  4131b1:	lock icebp 
  4131b3:	sbb    dh,BYTE PTR [eax+ebx*1]
  4131b6:	cmp    cl,BYTE PTR [ebp-0x208ab75b]
  4131bc:	(bad)  
  4131bd:	adc    eax,0x5020c32d
  4131c2:	fstp   TBYTE PTR [edi-0x53]
  4131c5:	mov    bl,0x2c
  4131c7:	jg     0x413215
  4131c9:	inc    esi
  4131ca:	in     al,dx
  4131cb:	adc    al,0xa2
  4131cd:	scas   eax,DWORD PTR es:[edi]
  4131ce:	jecxz  0x41317b
  4131d0:	in     al,dx
  4131d1:	xlat   BYTE PTR ds:[ebx]
  4131d2:	xchg   DWORD PTR [ecx],ebx
  4131d4:	shl    BYTE PTR [edi+0x3c1b8fad],1
  4131da:	shr    BYTE PTR [edi-0x4b],0x44
  4131de:	enter  0x6081,0xc5
  4131e2:	push   edx
  4131e3:	sbb    ebx,DWORD PTR [ebp+0x8]
  4131e6:	in     al,dx
  4131e7:	rcr    DWORD PTR [ebp+0x9],cl
  4131ea:	sbb    bl,BYTE PTR ds:[edx*8+0x7670d43f]
  4131f2:	rcr    BYTE PTR [ecx],cl
  4131f4:	dec    ebp
  4131f5:	fucomp st(0)
  4131f7:	icebp  
  4131f8:	js     0x41320f
  4131fa:	mov    eax,ds:0xcea17929
  4131ff:	pop    ecx
  413200:	or     DWORD PTR [eax+0x42108354],edi
  413206:	cs jl  0x413243
  413209:	xchg   esi,eax
  41320a:	mov    ebp,0x989e4555
  41320f:	jl     0x413218
  413211:	adc    eax,0xae8cef6f
  413216:	adc    BYTE PTR [edi+0x1d],bl
  413219:	call   0x9c5e:0x5aa248c8
  413220:	aad    0x44
  413222:	mov    dl,0xc1
  413224:	mov    bl,0x1f
  413226:	arpl   WORD PTR [ebp-0x19d25806],bx
  41322c:	jle    0x413211
  41322e:	xchg   ebp,eax
  41322f:	(bad)  
  413231:	aaa    
  413232:	mov    esi,DWORD PTR [ebx+0x4c0de91d]
  413238:	mov    ah,0x89
  41323a:	push   0xfffffff4
  41323c:	lahf   
  41323d:	mov    ds:0x2d4d8d64,eax
  413242:	(bad)  
  413243:	add    eax,0x6fe4dba1
  413248:	lahf   
  413249:	pop    edx
  41324a:	mov    BYTE PTR [eax],ch
  41324c:	push   es
  41324d:	cmp    cl,dh
  41324f:	or     BYTE PTR [ebp+0x79d51861],dh
  413255:	daa    
  413256:	sbb    dh,BYTE PTR [ebp+0x1e81d6ab]
  41325c:	push   ds
  41325d:	clc    
  41325e:	loop   0x41322b
  413260:	ror    DWORD PTR [eax-0x64],0xaa
  413264:	inc    eax
  413265:	int    0xa5
  413267:	ins    DWORD PTR es:[edi],dx
  413268:	loop   0x4132be
  41326a:	sbb    ecx,DWORD PTR [esi+0x54fe4831]
  413270:	dec    ebp
  413271:	adc    BYTE PTR [esi+ebx*4],ch
  413274:	add    BYTE PTR [eax-0x2e80adab],dh
  41327a:	out    0x85,eax
  41327c:	mov    eax,ds:0x7ebd2831
  413281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413282:	push   es
  413283:	push   es
  413284:	lea    edi,[edi-0x39155d99]
  41328a:	adc    cl,BYTE PTR [ebp-0x79f48a3]
  413290:	mov    edi,0x8267952e
  413295:	pop    edx
  413296:	mov    edx,0xc8198d52
  41329b:	lds    esp,FWORD PTR [ebp+0x1471d6e2]
  4132a1:	dec    ebx
  4132a2:	mov    BYTE PTR [ecx+esi*8+0x2feb9961],dl
  4132a9:	ficomp WORD PTR [ebp+0x55]
  4132ac:	push   edi
  4132ad:	ds pop ebp
  4132af:	fst    st(6)
  4132b1:	xchg   edx,eax
  4132b2:	or     DWORD PTR [edx],0xffffff9e
  4132b5:	sub    al,0xf5
  4132b7:	mov    BYTE PTR [ebp-0x5781d603],dl
  4132bd:	or     eax,0xea49054d
  4132c2:	xchg   edi,eax
  4132c3:	jp     0x413280
  4132c5:	sub    DWORD PTR [ecx+0xd],eax
  4132c8:	mov    bh,0xda
  4132ca:	mov    dl,0xf4
  4132cc:	jecxz  0x413293
  4132ce:	fwait
  4132cf:	or     ebp,DWORD PTR [edi+0x5b]
  4132d2:	add    al,0x97
  4132d4:	lods   eax,DWORD PTR ds:[esi]
  4132d5:	(bad)  
  4132d6:	pop    ss
  4132d7:	les    esi,FWORD PTR [esi+0x5445f973]
  4132dd:	call   ebx
  4132df:	fcom   QWORD PTR [esi+0x47]
  4132e2:	outs   dx,BYTE PTR ds:[esi]
  4132e3:	sub    esp,esp
  4132e5:	(bad)  
  4132e6:	in     al,0xd9
  4132e8:	sbb    ah,ch
  4132ea:	ja     0x4132dc
  4132ec:	dec    edi
  4132ed:	mov    ds:0x685e5ade,al
  4132f2:	hlt    
  4132f3:	std    
  4132f4:	sub    eax,0x4eaac53c
  4132f9:	jecxz  0x4132d4
  4132fb:	jns    0x413295
  4132fd:	aaa    
  4132fe:	xchg   ebx,eax
  4132ff:	pusha  
  413300:	adc    al,0x17
  413302:	xchg   ebx,eax
  413303:	mov    edi,0xa4b948f1
  413308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413309:	pop    ds
  41330a:	pop    ebp
  41330b:	test   al,0x2
  41330d:	loope  0x4132ca
  41330f:	push   es
  413310:	mov    edx,0x67bb1057
  413315:	lahf   
  413316:	and    ebp,eax
  413318:	test   DWORD PTR [ebx+0x4f],esp
  41331b:	lea    esp,ds:0x698ac22d
  413321:	mov    ebp,0x87548762
  413326:	dec    ebp
  413327:	ins    DWORD PTR es:[edi],dx
  413328:	fist   WORD PTR cs:[edi]
  41332b:	jp     0x413398
  41332d:	int3   
  41332e:	push   0xf26c43c5
  413333:	push   eax
  413334:	cli    
  413335:	dec    esp
  413336:	inc    ebp
  413337:	xchg   esi,eax
  413338:	adc    BYTE PTR [edx-0x650a8dbc],al
  41333e:	push   esi
  41333f:	push   ebx
  413340:	push   0xffffffc7
  413342:	pop    es
  413343:	push   esi
  413344:	scas   eax,DWORD PTR es:[edi]
  413345:	cmp    al,0x8a
  413347:	loop   0x4133b6
  413349:	in     eax,dx
  41334a:	mov    WORD PTR [esi+0x439bdf18],?
  413350:	sbb    al,0x7d
  413352:	mov    al,es:0x5e81e59
  413358:	sub    eax,0x12fe2a55
  41335d:	jmpw   0xee7a
  413361:	ror    esi,1
  413363:	push   cs
  413364:	das    
  413365:	jae    0x413366
  413367:	fs add al,0x9
  41336a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41336b:	fisttp QWORD PTR [eax]
  41336d:	push   cs
  41336e:	rcr    ah,0xe5
  413371:	or     DWORD PTR [ecx],eax
  413373:	jmp    0x41339c
  413375:	fisttp QWORD PTR [eax]
  413377:	jo     0x413370
  413379:	ror    ecx,0xdb
  41337c:	sub    al,0x44
  41337e:	inc    edx
  41337f:	cmp    DWORD PTR [ebp+0x37],edi
  413382:	jmp    0x233c:0x6b91bd0a
  413389:	shl    DWORD PTR [esi+eax*2],0x1d
  41338d:	icebp  
  41338e:	mov    ds:0xa7265dbe,al
  413393:	and    eax,0x2e238194
  413398:	dec    eax
  413399:	sub    DWORD PTR [ebx+ecx*2+0x75],0xe1349c74
  4133a1:	mov    ebp,0xc347d812
  4133a6:	ret    
  4133a7:	out    dx,eax
  4133a8:	jnp    0x41338c
  4133aa:	ins    BYTE PTR es:[edi],dx
  4133ab:	ret    
  4133ac:	push   edx
  4133ad:	or     dl,bh
  4133af:	nop
  4133b0:	in     al,dx
  4133b1:	or     eax,0xd2d44304
  4133b6:	fsubr  QWORD PTR [eax]
  4133b8:	push   ebp
  4133b9:	sbb    al,0xed
  4133bb:	pop    ss
  4133bc:	aas    
  4133bd:	fnstenv [ebx+ecx*1]
  4133c0:	dec    eax
  4133c1:	cmp    DWORD PTR [edx+ebp*2-0x4772f892],esi
  4133c8:	mov    es,WORD PTR [ecx]
  4133ca:	mov    ch,0x81
  4133cc:	inc    eax
  4133cd:	fld    DWORD PTR [edi]
  4133cf:	jl     0x41335a
  4133d1:	pusha  
  4133d2:	xor    ah,BYTE PTR ds:0xfe178e83
  4133d8:	test   BYTE PTR [ebx],bh
  4133da:	push   eax
  4133db:	adc    ah,BYTE PTR [esi+ebp*1+0x34]
  4133df:	sub    edi,DWORD PTR [ecx+ecx*2+0x45]
  4133e3:	mov    bh,0xdd
  4133e5:	clc    
  4133e6:	mov    edi,edi
  4133e8:	lock inc ebp
  4133ea:	add    DWORD PTR [ebx-0x7],ecx
  4133ed:	mov    eax,0xbe77e3d4
  4133f2:	add    eax,0xbd00bc4c
  4133f7:	shr    BYTE PTR ds:0x1cb0cfcc,cl
  4133fd:	in     eax,dx
  4133fe:	push   ebx
  4133ff:	cmp    cl,bh
  413401:	sub    bh,BYTE PTR [ecx+0x43]
  413404:	mov    dl,0xc1
  413406:	(bad)  
  413407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413408:	retf   0x89f9
  41340b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340c:	jne    0x41345a
  41340e:	push   ss
  41340f:	retf   
  413410:	es stos BYTE PTR es:[edi],al
  413412:	stos   BYTE PTR es:[edi],al
  413413:	stos   DWORD PTR es:[edi],eax
  413414:	sar    DWORD PTR [eax+edi*8-0x48],cl
  413418:	mov    al,ds:0xa61d0f49
  41341d:	jbe    0x413403
  41341f:	ja     0x4133ed
  413421:	lea    esi,[edx]
  413423:	(bad)  
  413424:	inc    edx
  413425:	and    al,0x46
  413427:	loopne 0x413448
  413429:	int    0x91
  41342b:	xchg   ecx,eax
  41342c:	mov    edx,0x297769ac
  413431:	test   DWORD PTR [esi],0xdb0c0bfc
  413437:	sar    BYTE PTR [edx],cl
  413439:	mov    ah,BYTE PTR [edx]
  41343b:	mov    dl,0x44
  41343d:	mov    DWORD PTR ds:0xb6ff3eb8,edx
  413443:	in     eax,dx
  413444:	pop    ebx
  413445:	mov    WORD PTR [bx+0xee0],ss
  41344a:	std    
  41344b:	mov    eax,ds:0x68dafac2
  413450:	jns    0x413408
  413452:	call   0x6d632d63
  413457:	test   al,0x8
  413459:	push   ecx
  41345a:	jb     0x41340f
  41345c:	dec    eax
  41345d:	pop    es
  41345e:	jns    0x413410
  413460:	loope  0x413415
  413462:	sbb    BYTE PTR [edx+eax*8-0x45],0x3a
  413467:	sbb    BYTE PTR [ecx],bh
  413469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346a:	dec    eax
  41346b:	mov    esi,0x5f8844b6
  413470:	and    edx,DWORD PTR [edx+ebp*1-0x4e]
  413474:	call   0xba2d:0x6820271e
  41347b:	mov    al,0xca
  41347d:	lea    ebx,[ebx+0x66]
  413480:	cmp    eax,0x28689b4
  413485:	and    BYTE PTR [ecx],bl
  413487:	out    0x6b,eax
  413489:	shl    esp,cl
  41348b:	retf   0xb6ee
  41348e:	rcr    bl,1
  413490:	les    edi,FWORD PTR [edx]
  413492:	faddp  st(1),st
  413494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413495:	js     0x413448
  413497:	pop    ecx
  413498:	test   al,0x98
  41349a:	xor    cl,bh
  41349c:	and    BYTE PTR [ecx+0x2af6cfda],ch
  4134a2:	jl     0x41350a
  4134a4:	xchg   ebp,eax
  4134a5:	or     DWORD PTR [edx-0x67bbd592],ecx
  4134ab:	into   
  4134ac:	or     esi,DWORD PTR [eax+0x47056d2e]
  4134b2:	rcr    DWORD PTR [ebp+eiz*4-0x632b3e3a],cl
  4134b9:	or     al,ch
  4134bb:	das    
  4134bc:	sub    bl,BYTE PTR [ebx-0x62fdda52]
  4134c2:	push   es
  4134c3:	pop    edi
  4134c4:	repz sahf 
  4134c6:	jbe    0x413539
  4134c8:	scas   eax,DWORD PTR es:[edi]
  4134c9:	loop   0x41349e
  4134cb:	retf   
  4134cc:	mov    BYTE PTR [ebp+0x2907e46a],cl
  4134d2:	mov    ebp,0xc8fd097c
  4134d7:	pop    edx
  4134d8:	inc    esp
  4134d9:	arpl   WORD PTR [esi],si
  4134db:	sbb    ah,BYTE PTR [eax]
  4134dd:	pop    edi
  4134de:	sar    DWORD PTR [ecx],cl
  4134e0:	fcomp  DWORD PTR [ebx-0x6b]
  4134e3:	push   esp
  4134e4:	aam    0x39
  4134e6:	adc    eax,0x9f4b62b5
  4134eb:	mov    edi,0x25d2fe64
  4134f0:	jnp    0x413525
  4134f2:	out    0x10,eax
  4134f4:	fs push ebp
  4134f6:	pushf  
  4134f7:	mov    ecx,0x3454fcf8
  4134fc:	div    DWORD PTR [edi+0x5327a3a8]
  413502:	cmp    edx,0xffffffb7
  413505:	push   0xbdbfb5e
  41350a:	xlat   BYTE PTR ds:[ebx]
  41350b:	mov    eax,0xb9b82e40
  413510:	sub    DWORD PTR [ebp+eiz*1+0x74f51336],edx
  413517:	jb     0x4134f3
  413519:	scas   al,BYTE PTR es:[edi]
  41351a:	add    al,dl
  41351c:	sub    DWORD PTR [edi+0x6],edi
  41351f:	xor    edx,DWORD PTR [ecx]
  413521:	mov    DWORD PTR [esi+0x5c3031d6],ebx
  413527:	outs   dx,DWORD PTR ds:[esi]
  413528:	(bad)  
  413529:	popf   
  41352a:	lock dec al
  41352d:	dec    esp
  41352e:	mov    bl,0x4e
  413530:	pop    ss
  413531:	dec    edi
  413532:	jl     0x413576
  413534:	in     al,dx
  413535:	ins    BYTE PTR es:[edi],dx
  413536:	sbb    BYTE PTR [edx+0x419c903],bh
  41353c:	sbb    eax,0xe3e769e2
  413541:	stos   BYTE PTR es:[edi],al
  413542:	xchg   esp,eax
  413543:	push   ebx
  413544:	mov    edx,0xbb0b311f
  413549:	out    0x3d,eax
  41354b:	pop    eax
  41354c:	inc    edx
  41354d:	lock stos DWORD PTR es:[edi],eax
  41354f:	xor    BYTE PTR [edi],bl
  413551:	shr    BYTE PTR [ecx-0x73668f5d],cl
  413557:	or     eax,esi
  413559:	test   DWORD PTR [edi],edx
  41355b:	call   FWORD PTR [esi-0x63]
  41355e:	dec    BYTE PTR [esp+eax*1-0x34]
  413562:	cmp    DWORD PTR [eax],ebx
  413564:	jmp    0x1a29:0x2fffa47b
  41356b:	pusha  
  41356c:	retf   0x99c6
  41356f:	push   ebx
  413570:	rol    BYTE PTR [eax+0x6cd18992],1
  413576:	(bad)  
  413577:	(bad)  
  413579:	cs mov eax,0xcc84207f
  41357f:	and    eax,0x99244b53
  413584:	sbb    al,0x8a
  413586:	nop
  413587:	xchg   esp,eax
  413588:	adc    cl,bl
  41358a:	pop    edi
  41358b:	je     0x4135e1
  41358d:	pop    ebx
  41358e:	and    al,0x81
  413590:	mov    DWORD PTR [edi],edx
  413592:	int3   
  413593:	or     al,0xb7
  413595:	jne    0x413519
  413597:	mov    dl,0x71
  413599:	dec    eax
  41359a:	out    0x66,eax
  41359c:	out    0xb2,al
  41359e:	and    dh,BYTE PTR [esp+edi*1+0x22]
  4135a2:	inc    esi
  4135a3:	mov    edx,0x99413f58
  4135a8:	icebp  
  4135a9:	pop    esp
  4135aa:	dec    esi
  4135ab:	pop    ebx
  4135ac:	push   0x6b
  4135ae:	inc    esi
  4135af:	and    esi,eax
  4135b1:	mov    DWORD PTR [ecx-0x4ffa0627],ebp
  4135b7:	mov    dl,ah
  4135b9:	div    BYTE PTR [eax+0x7854ed9c]
  4135bf:	push   ebx
  4135c0:	xchg   ecx,eax
  4135c1:	jge    0x4135d1
  4135c3:	ret    
  4135c4:	jle    0x41356f
  4135c6:	inc    esi
  4135c7:	mov    ch,0x4c
  4135c9:	fbstp  TBYTE PTR [ebx-0x71020e8a]
  4135cf:	inc    esi
  4135d0:	jl     0x413590
  4135d2:	push   ebx
  4135d3:	push   0x3ff9b63d
  4135d8:	jmp    0x9fea:0xf8024b77
  4135df:	rcr    DWORD PTR [ebp-0x67dc015],1
  4135e5:	sub    ch,BYTE PTR [edx+edx*4+0x17d6ebab]
  4135ec:	(bad)  
  4135ee:	(bad)  
  4135ef:	fistp  DWORD PTR [ebp+ebp*8+0x5e279472]
  4135f6:	pop    ecx
  4135f7:	shl    edx,0x4d
  4135fa:	xchg   DWORD PTR [edx-0x43bdbeef],ebx
  413600:	out    0x55,al
  413602:	inc    esi
  413603:	lock leave 
  413605:	mov    fs,WORD PTR [esi+0x47]
  413608:	xor    bl,ch
  41360a:	push   0xffffffce
  41360c:	adc    edi,DWORD PTR [ebx]
  41360e:	outs   dx,BYTE PTR ds:[esi]
  41360f:	(bad)  [ebx-0xba1cfae]
  413615:	mov    ah,0xbf
  413617:	dec    esi
  413618:	adc    bh,0x84
  41361b:	cmp    esp,edi
  41361d:	loope  0x413626
  41361f:	adc    al,0xb5
  413621:	shr    DWORD PTR [ebp+0x55],1
  413624:	lahf   
  413625:	imul   ebp,DWORD PTR [ebx+0x3c],0x9b4a2b45
  41362c:	hlt    
  41362d:	mov    bl,BYTE PTR [edi+0x5e]
  413630:	ret    
  413631:	(bad)  
  413632:	jmp    DWORD PTR [esp+edx*8-0x18c7a2d1]
  413639:	aas    
  41363a:	sub    edi,DWORD PTR [ecx-0x4f55b56d]
  413640:	xchg   esi,eax
  413641:	into   
  413642:	pop    edi
  413643:	and    al,0xa3
  413645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413646:	cmp    cl,BYTE PTR [edi+eax*8-0x557f7dd3]
  41364d:	cmp    esi,DWORD PTR [edx]
  41364f:	dec    edx
  413650:	and    BYTE PTR [ebx-0x51],0x50
  413654:	fisttp DWORD PTR [edx-0x6d44abef]
  41365a:	xchg   esp,eax
  41365b:	aas    
  41365c:	or     esi,DWORD PTR [edi+0x7a]
  41365f:	push   esp
  413660:	(bad)  
  413661:	sub    ebp,DWORD PTR [ebp+edx*8+0x495f58a4]
  413668:	test   eax,0x80caf6d4
  41366d:	ret    0x43ee
  413670:	dec    esp
  413671:	inc    esi
  413672:	mov    bl,BYTE PTR [edx-0x1934c911]
  413678:	pop    ss
  413679:	jbe    0x413643
  41367b:	test   al,0x3b
  41367d:	es pop ss
  41367f:	mov    ch,0x90
  413681:	or     esp,DWORD PTR [esi-0x27fc4406]
  413687:	jmp    0xe392a8e
  41368c:	dec    edi
  41368d:	(bad)
  413690:	and    eax,0xf4783cde
  413695:	rol    BYTE PTR [ebx+0x1e],0x8c
  413699:	pop    ecx
  41369a:	push   0xf6bd53aa
  41369f:	jae    0x4136e3
  4136a1:	xor    eax,0xbc4a210
  4136a6:	nop
  4136a7:	shufps xmm7,XMMWORD PTR [edi+ebx*8+0x5c0220a3],0x82
  4136b0:	dec    eax
  4136b1:	xor    al,0xeb
  4136b3:	popf   
  4136b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b5:	push   eax
  4136b6:	retf   
  4136b7:	mov    WORD PTR [ebx+esi*2-0x4f22cbb1],es
  4136be:	inc    ebp
  4136bf:	xor    al,0x55
  4136c1:	out    0xfb,eax
  4136c3:	cmp    al,0x9b
  4136c5:	(bad)  
  4136c7:	lahf   
  4136c8:	lds    esi,FWORD PTR [eax-0x32]
  4136cb:	inc    edx
  4136cc:	push   esp
  4136cd:	dec    ebp
  4136ce:	sub    eax,0xbe2a98f7
  4136d3:	imul   esp,DWORD PTR [edx-0x63c28ad8],0x8627c265
  4136dd:	popa   
  4136de:	sbb    ecx,esp
  4136e0:	and    al,0x4f
  4136e2:	cmp    DWORD PTR [ecx+ebp*8+0x60],0xa3fa66cc
  4136ea:	cmp    al,0x4d
  4136ec:	or     BYTE PTR [ebp+0x74],bl
  4136ef:	sub    al,0x18
  4136f1:	scas   eax,DWORD PTR es:[edi]
  4136f2:	jno    0x41376f
  4136f4:	cli    
  4136f5:	mov    ch,0x87
  4136f7:	jbe    0x413707
  4136f9:	dec    esp
  4136fa:	stc    
  4136fb:	cmp    al,0xab
  4136fd:	or     edx,DWORD PTR [ecx-0x3ad4f03d]
  413703:	retf   0xcb3e
  413706:	pop    ebp
  413707:	jle    0x413754
  413709:	ror    BYTE PTR [esi+0x2b],cl
  41370c:	dec    eax
  41370d:	push   ebx
  41370e:	fsubr  QWORD PTR [ebp+eax*2+0x6]
  413712:	inc    ebp
  413713:	push   eax
  413714:	push   ebp
  413715:	pusha  
  413716:	addr16 push ebx
  413718:	mov    esp,0x46361a1d
  41371d:	push   0x88ea613a
  413722:	mov    ecx,0xacaac452
  413727:	xchg   edi,eax
  413728:	xchg   ecx,eax
  413729:	sbb    DWORD PTR [ebp+0x518b8227],0x47d6821d
  413733:	mov    al,0x7d
  413735:	repz sub DWORD PTR [edi],ebx
  413738:	sbb    esp,esp
  41373a:	pop    eax
  41373b:	ror    BYTE PTR [ebp-0x31],1
  41373e:	(bad)  
  41373f:	neg    DWORD PTR [ecx+0x2c76a933]
  413745:	icebp  
  413746:	jmp    0xd90abdd0
  41374b:	pop    ss
  41374c:	push   esi
  41374d:	mov    esi,edx
  41374f:	xor    ebx,DWORD PTR [edx]
  413751:	fistp  DWORD PTR [esi]
  413753:	mov    eax,0xad3909a1
  413758:	xor    DWORD PTR [esi],esi
  41375a:	in     eax,dx
  41375b:	(bad)  
  41375c:	stc    
  41375d:	sti    
  41375e:	(bad)  
  41375f:	aas    
  413760:	(bad)  
  413761:	mov    esi,0x51c43170
  413766:	out    0xec,eax
  413768:	fwait
  413769:	mov    cl,0xc4
  41376b:	push   ebp
  41376c:	lods   al,BYTE PTR ds:[esi]
  41376d:	sbb    al,0x31
  41376f:	ins    DWORD PTR es:[edi],dx
  413770:	rcr    DWORD PTR [edi+0x76],0xbd
  413774:	aam    0x4
  413776:	out    dx,al
  413777:	and    eax,ecx
  413779:	jno    0x4137a0
  41377b:	ins    BYTE PTR es:[edi],dx
  41377c:	sub    eax,0xd7e76683
  413781:	jle    0x4137ea
  413783:	dec    esp
  413784:	sub    DWORD PTR [ecx+0x540f36d7],ebp
  41378a:	sbb    eax,0xcfc0791c
  41378f:	sub    BYTE PTR [edx-0x66],0xfb
  413793:	aam    0x9f
  413795:	mov    WORD PTR [edx+0xcba760b],cs
  41379b:	sub    al,0x26
  41379d:	mov    BYTE PTR [eax-0x6d],bh
  4137a0:	mov    edi,0x4d71a910
  4137a5:	push   ecx
  4137a6:	fldcw  WORD PTR ds:0x9da9f829
  4137ac:	cmp    BYTE PTR [edx+0x75],0xb5
  4137b0:	lock daa 
  4137b2:	jmp    0xa37d8a34
  4137b7:	push   ds
  4137b8:	push   fs
  4137ba:	cmp    DWORD PTR [ecx],ebx
  4137bc:	popf   
  4137bd:	lods   al,BYTE PTR ds:[esi]
  4137be:	sub    al,0x1c
  4137c0:	leave  
  4137c1:	mov    al,BYTE PTR [edi-0x80]
  4137c4:	cmp    BYTE PTR es:[esp+edx*8],cl
  4137c8:	sub    al,0x40
  4137ca:	fs jle 0x413829
  4137cd:	std    
  4137ce:	cld    
  4137cf:	stc    
  4137d0:	push   esp
  4137d1:	lea    eax,[esi+0x35b78364]
  4137d7:	gs pop edx
  4137d9:	mov    dl,0xea
  4137db:	xchg   ebp,eax
  4137dc:	push   cs
  4137dd:	loopne 0x413853
  4137df:	fidiv  WORD PTR [edx]
  4137e1:	push   0xfc4b9f50
  4137e6:	sti    
  4137e7:	cmc    
  4137e8:	push   ecx
  4137e9:	dec    ecx
  4137ea:	test   eax,0x939acaff
  4137ef:	and    edx,eax
  4137f1:	enter  0x3d5c,0x4e
  4137f5:	out    0xc7,eax
  4137f7:	lds    ebx,FWORD PTR [ebx-0x3344d03b]
  4137fd:	mov    DWORD PTR [edx+0x325861a7],ecx
  413803:	xchg   ch,dh
  413805:	rcl    BYTE PTR [edx-0x131d8dc5],cl
  41380b:	out    0xe3,eax
  41380d:	std    
  41380e:	push   0x78f4fbee
  413813:	aaa    
  413814:	xchg   edi,eax
  413815:	and    ch,BYTE PTR [edx+0x56d3c584]
  41381b:	fucomi st,st(4)
  41381d:	repz xchg ecx,eax
  41381f:	scas   al,BYTE PTR es:[edi]
  413820:	daa    
  413821:	jmp    0x7cdc2389
  413826:	test   eax,0xb65ca9f9
  41382b:	jo     0x413875
  41382d:	loope  0x4137b4
  41382f:	lahf   
  413830:	mov    edx,0x46e68ff2
  413835:	mov    eax,ds:0x7f9d5698
  41383a:	(bad)  
  41383b:	xor    al,0xac
  41383d:	or     DWORD PTR [ebx-0x5c],0x3c
  413841:	test   DWORD PTR [ecx+0x7a],edx
  413844:	mov    WORD PTR [edx+0xd],?
  413847:	call   0x6fd0:0x54230b8d
  41384e:	fiadd  WORD PTR [ebx]
  413850:	ins    BYTE PTR es:[edi],dx
  413851:	add    eax,DWORD PTR [edi-0x4d]
  413854:	loope  0x4138b6
  413856:	push   0x984e70c5
  41385b:	xchg   DWORD PTR ds:0x9713c335,eax
  413861:	xchg   ecx,eax
  413862:	push   edx
  413863:	popf   
  413864:	push   ecx
  413865:	jne    0x413814
  413867:	inc    ebx
  413868:	adc    BYTE PTR [ebx-0x11ac00c4],al
  41386e:	xchg   esp,eax
  41386f:	xchg   DWORD PTR [ebx+edx*2-0x76],edi
  413873:	shl    BYTE PTR [eax],1
  413875:	lea    edi,[edx]
  413877:	es loop 0x4138ab
  41387a:	clc    
  41387b:	sahf   
  41387c:	dec    edx
  41387d:	mov    esi,0xe1e3ee81
  413882:	mov    ecx,0x2af27f98
  413887:	hlt    
  413888:	xor    ebx,DWORD PTR [eax-0x321a781d]
  41388e:	xor    al,0x6f
  413890:	sahf   
  413891:	(bad)
  413894:	push   ds
  413895:	das    
  413896:	pop    es
  413897:	bnd jno 0x413873
  41389a:	sbb    al,0xb5
  41389c:	shr    DWORD PTR ds:0x96bcd3d3,cl
  4138a2:	out    0x87,al
  4138a4:	pop    eax
  4138a5:	pop    ebx
  4138a6:	dec    ebx
  4138a7:	popf   
  4138a8:	inc    ebx
  4138a9:	pop    esp
  4138aa:	adc    DWORD PTR [ebp-0x7b],esp
  4138ad:	fisubr WORD PTR [edx+0x48b795af]
  4138b3:	mov    eax,ds:0x409e5d5
  4138b8:	push   es
  4138b9:	mov    esi,0x36b40e8
  4138be:	pop    ebx
  4138bf:	adc    BYTE PTR [edi-0x6579619a],0xc7
  4138c6:	mov    ds:0x619b8e1a,eax
  4138cb:	scas   eax,DWORD PTR es:[edi]
  4138cc:	sbb    bh,BYTE PTR [ebx-0x41]
  4138cf:	out    0x2a,eax
  4138d1:	icebp  
  4138d2:	sbb    eax,0x40467ab3
  4138d7:	popf   
  4138d8:	jnp    0x41392b
  4138da:	pop    eax
  4138db:	dec    eax
  4138dc:	aam    0x8b
  4138de:	sahf   
  4138df:	push   es
  4138e0:	mov    esp,0x8897b382
  4138e5:	stc    
  4138e6:	sbb    al,0x72
  4138e8:	lods   eax,DWORD PTR ds:[esi]
  4138e9:	and    esi,0x14368060
  4138ef:	adc    esp,DWORD PTR [esi]
  4138f1:	adc    ch,BYTE PTR [esi+ebx*4-0x49]
  4138f5:	shl    DWORD PTR [ebx],cl
  4138f7:	lea    edx,[edx+esi*2-0x2c645b4b]
  4138fe:	mov    eax,ds:0xca184b6e
  413903:	cdq    
  413904:	fmul   st,st(7)
  413906:	aaa    
  413907:	adc    ebx,DWORD PTR [ebp+0x16]
  41390a:	add    ebx,edx
  41390c:	and    al,0x5d
  41390e:	sbb    al,0x58
  413910:	in     al,dx
  413911:	iret   
  413912:	mov    eax,ds:0x18918ab7
  413917:	push   ss
  413918:	sbb    BYTE PTR [eax-0x4b],al
  41391b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391c:	fiadd  WORD PTR [ebx+0x77]
  41391f:	pop    ebx
  413920:	(bad)  
  413921:	mov    edi,eax
  413923:	jl     0x413966
  413925:	jnp    0x41392c
  413927:	shl    DWORD PTR [edx+ebx*1+0x7f],1
  41392b:	jne    0x41399c
  41392d:	lock scas eax,DWORD PTR es:[edi]
  41392f:	push   ebp
  413930:	mov    WORD PTR [eax+ecx*4],0x9618
  413936:	or     cl,BYTE PTR [esi+esi*2-0x4b]
  41393a:	mov    ecx,0xd5bb3cdb
  41393f:	retf   0xbb69
  413942:	or     DWORD PTR [ebx],edx
  413944:	fistp  QWORD PTR [edi]
  413946:	and    DWORD PTR [eax-0x10560904],edi
  41394c:	aaa    
  41394d:	jg     0x413931
  41394f:	or     eax,0xd02a7446
  413954:	sub    eax,0x44ff285a
  413959:	add    al,0xdf
  41395b:	mov    bh,0xdb
  41395d:	dec    eax
  41395e:	ja     0x413952
  413960:	mov    esp,0xa31f6ddb
  413965:	test   BYTE PTR [edi+0x35d13b37],al
  41396b:	je     0x413984
  41396d:	adc    DWORD PTR [eax],eax
  41396f:	pusha  
  413970:	stos   BYTE PTR es:[edi],al
  413971:	ins    DWORD PTR es:[edi],dx
  413972:	push   edx
  413973:	push   edi
  413974:	cmp    al,0x15
  413976:	mov    ebx,0xcfdba987
  41397b:	loope  0x413999
  41397d:	fucomi st,st(0)
  41397f:	sbb    eax,0xd6a26a14
  413984:	fs push ds
  413986:	adc    eax,0x36b6ecff
  41398b:	push   ebp
  41398c:	enter  0xb2e8,0xd3
  413990:	inc    ebp
  413991:	and    BYTE PTR [ebx+0x477b8cb2],0x6
  413998:	out    dx,eax
  413999:	aas    
  41399a:	adc    al,0xa9
  41399c:	mov    ch,0xfe
  41399e:	not    BYTE PTR [edi]
  4139a0:	pop    edi
  4139a1:	cmp    esi,eax
  4139a3:	out    dx,eax
  4139a4:	pop    esi
  4139a5:	mov    fs,WORD PTR [edi+ebp*4+0x4f177020]
  4139ac:	add    BYTE PTR [edx],0x79
  4139af:	es pop ss
  4139b1:	cmp    DWORD PTR [edx+0x49328bf9],ebx
  4139b7:	sub    eax,esi
  4139b9:	sub    al,0xe4
  4139bb:	xlat   BYTE PTR ds:[ebx]
  4139bc:	int3   
  4139bd:	dec    edi
  4139be:	imul   esp,DWORD PTR [edi-0x2c],0xd68439ae
  4139c5:	adc    DWORD PTR [ecx],ebp
  4139c7:	mov    dl,0x97
  4139c9:	sub    DWORD PTR [esi+0x69dfaa66],edi
  4139cf:	pop    edi
  4139d0:	mov    ebp,0xa7c0bcef
  4139d5:	add    cl,BYTE PTR [ebx]
  4139d7:	fdiv   st,st(3)
  4139da:	loop   0x413a13
  4139dc:	cmc    
  4139dd:	cmp    eax,0x58496848
  4139e2:	sbb    eax,0x2a410b5
  4139e7:	xchg   ebp,eax
  4139e8:	mov    ds:0xf1aa5e4e,eax
  4139ed:	sub    eax,0xe50f7644
  4139f2:	and    BYTE PTR [ebx],al
  4139f4:	add    eax,0x2c3affe5
  4139f9:	int3   
  4139fa:	rcl    dh,0xbc
  4139fd:	shl    BYTE PTR [ecx],cl
  4139ff:	xor    DWORD PTR [ebx+eax*8-0x4f],edi
  413a03:	scas   al,BYTE PTR es:[edi]
  413a04:	les    edx,FWORD PTR [ebx+0x5]
  413a07:	test   al,0xd1
  413a09:	mov    es,WORD PTR [ebx+0x29ba2e9f]
  413a0f:	mov    ds:0xb9ca4f8a,al
  413a14:	fucomip st,st(7)
  413a16:	add    ecx,DWORD PTR [edi]
  413a18:	(bad)  
  413a19:	mov    esi,0xa27dfa80
  413a1e:	mov    cl,0x73
  413a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a21:	and    DWORD PTR [esi+0xd],ebx
  413a24:	icebp  
  413a25:	into   
  413a26:	mov    edi,0xcfd04e15
  413a2b:	and    al,bh
  413a2d:	in     al,dx
  413a2e:	adc    ah,BYTE PTR [ebp-0x8]
  413a31:	aad    0x5e
  413a33:	rcr    BYTE PTR [ebx],cl
  413a35:	pop    eax
  413a36:	mov    WORD PTR [eax+0x409b3e97],gs
  413a3c:	xchg   DWORD PTR [edx+0x4b],ecx
  413a3f:	bound  ebx,QWORD PTR [ebp-0x51bc90fc]
  413a45:	and    DWORD PTR [eax],eax
  413a47:	and    eax,DWORD PTR [edi-0x2352475f]
  413a4d:	sti    
  413a4e:	xchg   edx,eax
  413a4f:	inc    DWORD PTR [ecx]
  413a51:	fbld   TBYTE PTR [ebp-0x788213a6]
  413a57:	pop    ebx
  413a58:	ds in  al,dx
  413a5a:	adc    al,0x23
  413a5c:	pop    ecx
  413a5d:	in     eax,0xeb
  413a5f:	ror    DWORD PTR [edx-0x12],1
  413a62:	in     al,dx
  413a63:	inc    ebp
  413a64:	aad    0x16
  413a66:	call   0x116e:0xc8f6f072
  413a6d:	inc    esi
  413a6e:	(bad)  
  413a6f:	leave  
  413a70:	sbb    esi,ecx
  413a72:	ss mov al,0xce
  413a75:	test   eax,0x5a001099
  413a7a:	outs   dx,DWORD PTR ds:[esi]
  413a7b:	sbb    dl,BYTE PTR [esi-0x48]
  413a7e:	add    al,0xc6
  413a80:	call   0xadf6:0xe56dbbf2
  413a87:	mov    ds:0x23c0fa76,al
  413a8c:	fisub  WORD PTR [edi-0x27]
  413a8f:	xchg   ebp,edi
  413a91:	div    BYTE PTR [edx+0x49]
  413a94:	int3   
  413a95:	sub    eax,0xc3d63881
  413a9a:	xor    eax,0xf4c4f3ad
  413a9f:	mov    BYTE PTR [ecx+edx*4+0x225434f7],bl
  413aa6:	lds    ebx,FWORD PTR [esi-0x1f]
  413aa9:	popf   
  413aaa:	and    al,0x8c
  413aac:	or     al,0xfa
  413aae:	scas   al,BYTE PTR es:[edi]
  413aaf:	or     al,0xc3
  413ab1:	(bad)  
  413ab2:	int3   
  413ab3:	dec    DWORD PTR ds:0x1a14ba7e
  413ab9:	inc    edx
  413aba:	add    esp,ebx
  413abc:	in     eax,dx
  413abd:	sub    eax,0x7fbd54cc
  413ac2:	mov    bh,0xf7
  413ac4:	push   ebx
  413ac5:	adc    DWORD PTR [edi-0x1b],esp
  413ac8:	iret   
  413ac9:	or     DWORD PTR [eax],0x86a602da
  413acf:	shl    ebx,0xfd
  413ad2:	xchg   edx,eax
  413ad3:	push   ds
  413ad4:	cmp    al,0xb2
  413ad6:	jmp    0x1212:0x4af30303
  413add:	sub    al,0x6f
  413adf:	inc    edi
  413ae0:	adc    DWORD PTR [eax],edi
  413ae2:	mov    bh,0x5b
  413ae4:	leave  
  413ae5:	out    0xda,eax
  413ae7:	outs   dx,DWORD PTR ds:[esi]
  413ae8:	mov    ecx,0x2724929a
  413aed:	les    edx,FWORD PTR [edx]
  413aef:	out    dx,eax
  413af0:	out    0x40,eax
  413af2:	mov    eax,0xb363d0b0
  413af7:	xchg   eax,eax
  413af9:	sbb    BYTE PTR [eax-0x43],0x58
  413afd:	aam    0xc4
  413aff:	leave  
  413b00:	sar    DWORD PTR [esi],0x97
  413b03:	in     al,dx
  413b04:	sub    edi,edx
  413b06:	mov    edi,DWORD PTR [ebx-0x60509c1e]
  413b0c:	mov    dh,BYTE PTR [esi]
  413b0e:	and    BYTE PTR [edx],ah
  413b10:	rcl    ah,1
  413b12:	push   ebp
  413b13:	sbb    edx,DWORD PTR [esi]
  413b15:	sahf   
  413b16:	pushf  
  413b17:	xor    esp,DWORD PTR [edi+0x5d]
  413b1a:	data16 jg 0x413b50
  413b1d:	adc    eax,0x3654f287
  413b22:	dec    edi
  413b23:	mov    al,0x60
  413b25:	mov    dl,0x7b
  413b27:	cmp    al,ch
  413b29:	sbb    DWORD PTR es:[eax-0x26424c17],edi
  413b30:	mul    BYTE PTR [edi]
  413b32:	jb     0x413ab4
  413b34:	stos   DWORD PTR es:[edi],eax
  413b35:	inc    edi
  413b36:	push   esi
  413b37:	outs   dx,DWORD PTR ds:[esi]
  413b38:	push   cs
  413b39:	jg     0x413ae1
  413b3b:	mul    eax
  413b3d:	push   cs
  413b3e:	lods   al,BYTE PTR ds:[esi]
  413b3f:	sbb    BYTE PTR [ecx-0x2e],cl
  413b42:	jno    0x413b61
  413b44:	in     eax,0x97
  413b46:	push   ebp
  413b47:	fs enter 0x28c2,0xc3
  413b4c:	frstor [ebx-0x1b7debdd]
  413b52:	gs mov esi,0xd4feeeb0
  413b58:	and    BYTE PTR [edi-0x933bbe7],al
  413b5e:	sbb    BYTE PTR [eax-0x50261068],0xb
  413b65:	lock jnp 0x413b91
  413b68:	dec    ecx
  413b69:	dec    ecx
  413b6a:	xchg   BYTE PTR [ebp+0x4b],dh
  413b6d:	ror    BYTE PTR [edx+eiz*8-0x38a9637],cl
  413b74:	cwde   
  413b75:	mov    ah,0x4
  413b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b78:	fwait
  413b79:	xchg   esp,eax
  413b7a:	ret    0xe624
  413b7d:	xlat   BYTE PTR ds:[ebx]
  413b7e:	lahf   
  413b7f:	scas   eax,DWORD PTR es:[edi]
  413b80:	mov    ebx,0x9e9cf812
  413b85:	cmp    BYTE PTR [ebx+0xe5aab83],dh
  413b8b:	dec    edx
  413b8c:	scas   al,BYTE PTR es:[edi]
  413b8d:	sub    bh,BYTE PTR [edi-0x76]
  413b90:	mov    esi,0xc286c01f
  413b95:	cmp    al,0x27
  413b97:	dec    ebp
  413b98:	cs out dx,al
  413b9a:	add    al,0x56
  413b9c:	jp     0x413bce
  413b9e:	repnz push cs
  413ba0:	cwde   
  413ba1:	loop   0x413bd2
  413ba3:	cmp    ebp,ebx
  413ba5:	test   DWORD PTR [ebp-0x666d26ac],0xd3e32e39
  413baf:	push   esp
  413bb0:	push   cs
  413bb1:	dec    esp
  413bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb3:	sbb    DWORD PTR [edx+0x26552e32],edx
  413bb9:	add    ah,bh
  413bbb:	enter  0x4337,0x87
  413bbf:	adc    al,0xbd
  413bc1:	loop   0x413b4a
  413bc3:	cmp    eax,0xc2cf5548
  413bc8:	test   DWORD PTR ds:0xd7f496a4,0xa0e61da0
  413bd2:	in     al,dx
  413bd3:	repnz test dl,ch
  413bd6:	leave  
  413bd7:	sub    BYTE PTR [ebx],bl
  413bd9:	mov    edi,0xf9974eb
  413bde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bdf:	adc    al,al
  413be1:	fwait
  413be2:	je     0x413b85
  413be4:	stc    
  413be5:	xchg   edx,eax
  413be6:	shl    BYTE PTR [eax-0x29],1
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	ret    
  41424d:	push   ebx
  41424e:	sti    
  41424f:	jno    0x4142ce
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	test   eax,0x3ce52f92
  41425d:	iret   
  41425e:	xor    al,0x42
  414260:	jnp    0x414239
  414262:	ss sub BYTE PTR cs:[ecx-0x446bd0d],dh
  41426a:	xchg   esi,eax
  41426b:	mov    al,ds:0xefc4d15d
  414270:	ret    
  414271:	xchg   edx,eax
  414272:	add    ch,BYTE PTR [ebp+edi*1+0xf6db856]
  414279:	retf   
  41427a:	mov    ebx,0xdb439356
  41427f:	sbb    eax,0x6ee0fab5
  414284:	push   cs
  414285:	or     BYTE PTR [edx],bl
  414287:	push   ecx
  414288:	inc    edx
  414289:	inc    edi
  41428a:	pop    edi
  41428b:	push   edx
  41428c:	jno    0x41420f
  41428e:	sahf   
  41428f:	pop    ebp
  414290:	ret    0x9173
  414293:	jae    0x414286
  414295:	test   BYTE PTR [edx+ebx*4],bl
  414298:	xor    al,0xc0
  41429a:	jnp    0x4142e9
  41429c:	pushf  
  41429d:	fbld   TBYTE PTR [esi+0x3e515e6b]
  4142a3:	popf   
  4142a4:	stos   BYTE PTR es:[edi],al
  4142a5:	add    edx,ebx
  4142a7:	push   edx
  4142a8:	jp     0x4142cd
  4142aa:	jnp    0x41430d
  4142ac:	pop    esi
  4142ad:	mov    BYTE PTR [ecx+edi*2],bl
  4142b0:	mov    esi,DWORD PTR [ebx+0x1377c404]
  4142b6:	aad    0xf
  4142b8:	jg     0x414303
  4142ba:	xor    esp,ebx
  4142bc:	arpl   WORD PTR [ebx+0xd9acf71],di
  4142c2:	sub    eax,DWORD PTR [eax]
  4142c4:	sbb    al,0x73
  4142c6:	pop    es
  4142c7:	pop    ebp
  4142c8:	cli    
  4142c9:	inc    ebx
  4142ca:	sbb    ebx,DWORD PTR [eax-0x11]
  4142cd:	and    BYTE PTR [ebx],al
  4142cf:	icebp  
  4142d0:	push   esi
  4142d1:	retf   0xdcb5
  4142d4:	push   eax
  4142d5:	cmp    dl,0xa1
  4142d8:	and    BYTE PTR [edi],bh
  4142da:	xchg   edi,eax
  4142db:	mov    ebx,ecx
  4142dd:	cmc    
  4142de:	aam    0x7b
  4142e0:	fistp  WORD PTR [ebp+eiz*8+0x1]
  4142e4:	or     ebp,esi
  4142e6:	test   BYTE PTR [ebx+0xa],0xac
  4142ea:	cmp    DWORD PTR [edx+0xa957793],ebx
  4142f0:	rol    DWORD PTR [eax],cl
  4142f2:	icebp  
  4142f3:	iret   
  4142f4:	and    esi,DWORD PTR [ebx]
  4142f6:	int    0xe7
  4142f8:	mov    al,0xc7
  4142fa:	push   ebx
  4142fb:	scas   al,BYTE PTR es:[edi]
  4142fc:	test   eax,0xa4c83e22
  414302:	loop   0x414338
  414304:	call   0x4948:0xbfd4a5b9
  41430b:	imul   ebp,edx,0x7a
  41430e:	adc    eax,0x62719dfa
  414313:	add    DWORD PTR [eax],esi
  414315:	dec    esi
  414316:	xchg   edx,eax
  414317:	sbb    al,BYTE PTR ds:0xbe787e08
  41431d:	retf   0x98ec
  414320:	jnp    0x4142b3
  414322:	xor    BYTE PTR [edi],0x76
  414325:	xlat   BYTE PTR fs:[ebx]
  414327:	mov    BYTE PTR [ebp+0x24],bh
  41432a:	mov    bl,0xbf
  41432c:	cli    
  41432d:	sub    esp,DWORD PTR [ecx]
  41432f:	inc    edx
  414330:	jne    0x414319
  414332:	loope  0x4142be
  414334:	jp     0x4143a7
  414336:	or     ebp,eax
  414338:	cmp    BYTE PTR [edx-0x72],bl
  41433b:	ins    DWORD PTR es:[edi],dx
  41433c:	in     al,0xc
  41433e:	cmp    BYTE PTR cs:0x252cba34,bl
  414345:	sbb    ebp,DWORD PTR [ecx+0x1e]
  414348:	sbb    edi,0xfffffff3
  41434b:	and    DWORD PTR [eax+0x67fe1a40],0x992fb0b9
  414355:	retf   
  414356:	bound  ebx,QWORD PTR [esi-0x5c]
  414359:	mov    ?,WORD PTR [edx]
  41435b:	mov    dh,0xac
  41435d:	(bad)
  414361:	jle    0x4143ab
  414363:	sbb    dl,BYTE PTR [ebx]
  414365:	push   ss
  414366:	cmp    edx,DWORD PTR [ecx-0x78292547]
  41436c:	in     eax,0x1a
  41436e:	mov    esp,0x81baebc3
  414373:	jns    0x4143ea
  414375:	xor    al,0xb2
  414377:	push   0xffffffcc
  414379:	pop    ds
  41437a:	xchg   ebx,eax
  41437b:	inc    edi
  41437c:	mov    al,0x96
  41437e:	cli    
  41437f:	push   esp
  414380:	out    dx,eax
  414381:	xchg   ebp,eax
  414382:	je     0x414373
  414384:	test   DWORD PTR [eax],ebp
  414386:	mov    al,dh
  414388:	dec    esp
  414389:	cmp    ch,BYTE PTR [eax]
  41438b:	jmp    0xd5e8:0xb3940e27
  414392:	fwait
  414393:	mov    bl,BYTE PTR [edx-0x5cd224cd]
  414399:	scas   al,BYTE PTR es:[di]
  41439b:	daa    
  41439c:	mov    bh,BYTE PTR [eax+0x5e]
  41439f:	in     eax,0x4c
  4143a1:	inc    ebp
  4143a2:	xchg   esp,eax
  4143a3:	test   bh,bh
  4143a5:	sti    
  4143a6:	aad    0x83
  4143a8:	ffree  st(5)
  4143aa:	mov    ch,BYTE PTR [eax+0x42876418]
  4143b0:	or     DWORD PTR [ebp+0x567d0d80],0xffffff96
  4143b7:	pop    edx
  4143b8:	out    0xe4,eax
  4143ba:	lods   eax,DWORD PTR ds:[esi]
  4143bb:	loopne 0x414395
  4143bd:	jno    0x41434a
  4143bf:	pop    es
  4143c0:	in     eax,0x9b
  4143c2:	fisubr DWORD PTR [esi]
  4143c4:	mov    gs:0xde99fe76,al
  4143ca:	xlat   BYTE PTR ds:[ebx]
  4143cb:	lea    ebp,[edi+ebp*2-0x680a3395]
  4143d2:	xchg   ebx,eax
  4143d3:	sub    al,0xff
  4143d5:	push   0x878550fc
  4143da:	das    
  4143db:	add    al,BYTE PTR [ebx+0x709c5dd4]
  4143e1:	fld    TBYTE PTR [edx-0x33]
  4143e4:	or     cl,BYTE PTR [edi-0x61]
  4143e7:	mov    cl,0xa1
  4143e9:	add    eax,0xf5882894
  4143ee:	jmp    0x5adad734
  4143f3:	pop    esi
  4143f4:	lds    esi,FWORD PTR [eax+0x7a]
  4143f7:	in     al,0x42
  4143f9:	mov    ah,0x7c
  4143fb:	inc    eax
  4143fc:	jl     0x4143c2
  4143fe:	mov    bh,0xd5
  414400:	push   esp
  414401:	cmp    BYTE PTR [eax-0x55],dh
  414404:	dec    eax
  414405:	mov    cl,0x10
  414407:	popf   
  414408:	mov    al,ds:0x3453332b
  41440d:	push   edi
  41440e:	jmp    0x414436
  414410:	nop
  414411:	push   edx
  414412:	mov    ds,WORD PTR ds:0xeed39184
  414418:	dec    ecx
  414419:	push   ecx
  41441a:	or     al,0xbe
  41441c:	mov    esi,0xf4297eb6
  414421:	mov    ecx,edx
  414423:	mov    eax,0x5c4c72f2
  414428:	push   ecx
  414429:	(bad)  
  41442a:	cmp    eax,0x29c3eb37
  41442f:	or     eax,0x50d8a550
  414434:	call   DWORD PTR [edi]
  414436:	out    dx,al
  414437:	das    
  414438:	jno    0x414433
  41443a:	fbld   TBYTE PTR [edx-0x650885c7]
  414440:	mov    ch,BYTE PTR [edx+0x451e88e0]
  414446:	fs (bad) 
  414448:	jmp    0xd773:0x38052690
  41444f:	sbb    eax,0x939e56cb
  414454:	ror    BYTE PTR [eax+0x33],cl
  414457:	adc    ebp,DWORD PTR [edi+ebx*8-0x73]
  41445b:	call   0x5383:0xab6d51cd
  414462:	mov    ebp,0xd68bafcd
  414467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414468:	dec    esi
  414469:	mov    al,0xa3
  41446b:	cwde   
  41446c:	push   cs
  41446d:	std    
  41446e:	jo     0x414405
  414470:	retf   0xe2b4
  414473:	adc    eax,DWORD PTR [esi+0x1bafabb4]
  414479:	cmp    DWORD PTR [edx],edi
  41447b:	jns    0x4144e1
  41447d:	mov    WORD PTR [ecx+0x130fd7bf],es
  414483:	fist   DWORD PTR [edx-0x21185aab]
  414489:	mov    eax,ds:0x81b21792
  41448e:	sbb    eax,0xc09b7660
  414493:	cmc    
  414494:	ret    0x642b
  414497:	out    0xab,eax
  414499:	icebp  
  41449a:	bound  esi,QWORD PTR [ebp-0x4d4c038a]
  4144a0:	arpl   WORD PTR [edx-0x4e],si
  4144a3:	sub    eax,0x64a3e901
  4144a8:	mov    al,0xca
  4144aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ab:	xor    BYTE PTR [ebx-0x549f0ffb],bh
  4144b1:	popa   
  4144b2:	les    esp,FWORD PTR ds:0x345be485
  4144b8:	add    DWORD PTR [ecx-0x3d],eax
  4144bb:	ror    DWORD PTR [esi-0x25],0x18
  4144bf:	inc    esi
  4144c0:	mov    eax,0xfe5543f4
  4144c5:	jmp    0x4144a5
  4144c7:	call   0xaf75081b
  4144cc:	stos   DWORD PTR es:[edi],eax
  4144cd:	mov    esp,0xa6139cc0
  4144d2:	xor    al,0x8a
  4144d4:	cmp    BYTE PTR [ebx+0x18],al
  4144d7:	fstp   st(0)
  4144d9:	data16 fwait
  4144db:	mov    edi,DWORD PTR [esi-0x126291a9]
  4144e1:	stc    
  4144e2:	je     0x4144bf
  4144e4:	sub    cl,bl
  4144e6:	mov    DWORD PTR [ecx-0x64],esp
  4144e9:	pop    ebx
  4144ea:	es inc ebp
  4144ec:	add    eax,esp
  4144ee:	into   
  4144ef:	dec    ebp
  4144f0:	mov    dl,0x3e
  4144f2:	ins    BYTE PTR es:[edi],dx
  4144f3:	(bad)  
  4144f4:	ret    
  4144f5:	dec    edx
  4144f6:	push   es
  4144f7:	push   ecx
  4144f8:	sbb    BYTE PTR [eax],bh
  4144fa:	push   0x804a1682
  4144ff:	xor    cl,BYTE PTR [ecx]
  414501:	pop    ebx
  414502:	mov    eax,0x3fc70df2
  414507:	mov    ?,WORD PTR ds:0xe892090f
  41450d:	jge    0x414530
  41450f:	and    cl,BYTE PTR [edx-0x4f]
  414512:	xchg   edi,eax
  414513:	cdq    
  414514:	mov    edi,0x59f2f273
  414519:	mov    ch,0x7e
  41451b:	jno    0x414504
  41451d:	inc    edx
  41451e:	push   ebx
  41451f:	ret    
  414520:	inc    ecx
  414521:	jl     0x4144e3
  414523:	fwait
  414524:	sub    eax,0xb2cfd4ca
  414529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41452a:	test   eax,0x77881b5
  41452f:	out    0x68,eax
  414531:	test   BYTE PTR fs:[edx+0x17],ch
  414535:	push   0x13
  414537:	push   edx
  414538:	bound  esi,QWORD PTR [edx-0x38da3efd]
  41453e:	out    dx,eax
  41453f:	dec    eax
  414540:	mov    dl,BYTE PTR [ebx+0x7da6f91b]
  414546:	fadd   DWORD PTR [ecx+0x49]
  414549:	arpl   WORD PTR [ebx],dx
  41454b:	ret    0x2395
  41454e:	mov    ah,0x35
  414550:	jge    0x414547
  414552:	stos   DWORD PTR es:[edi],eax
  414553:	inc    edi
  414554:	jmp    0xfbfb72f4
  414559:	les    ecx,FWORD PTR [ecx+0x145d37ef]
  41455f:	jp     0x41451a
  414561:	popa   
  414562:	in     al,0x36
  414564:	cli    
  414565:	pusha  
  414566:	mov    ds:0xc8adae80,al
  41456b:	mov    ds:0x73117d77,al
  414570:	mov    edi,DWORD PTR [ecx-0x4b]
  414573:	jge    0x4145c1
  414575:	or     eax,0xc8bb641b
  41457a:	or     BYTE PTR [ebp-0x6],cl
  41457d:	imul   ecx,DWORD PTR [ecx+ebp*4+0x5e],0xcada1d7a
  414585:	(bad)  
  414586:	lods   eax,DWORD PTR ds:[esi]
  414587:	adc    eax,DWORD PTR [edx+0x35]
  41458a:	call   0x5216:0x84f860e4
  414591:	or     al,0xc5
  414593:	das    
  414594:	mov    cl,0x4f
  414596:	cdq    
  414597:	js     0x414549
  414599:	cmp    eax,0xb80d4db
  41459e:	push   0x4c
  4145a0:	add    BYTE PTR [edx-0x6d],0x2f
  4145a4:	fadd   st(0),st
  4145a6:	inc    edx
  4145a7:	mov    cl,0x21
  4145a9:	dec    esi
  4145aa:	enter  0x8939,0x59
  4145ae:	push   ebp
  4145af:	sti    
  4145b0:	fwait
  4145b1:	mov    dl,0xce
  4145b3:	add    DWORD PTR [edi+0x22bc2e42],eax
  4145b9:	int    0x96
  4145bb:	dec    esp
  4145bc:	int    0x80
  4145be:	enter  0x605a,0xea
  4145c2:	push   edi
  4145c3:	cmp    BYTE PTR [edx],0x46
  4145c6:	jae    0x414638
  4145c8:	scas   eax,DWORD PTR es:[edi]
  4145c9:	push   ds
  4145ca:	dec    esi
  4145cb:	sbb    BYTE PTR [esi-0x2b906123],ch
  4145d1:	and    eax,0x71d9768d
  4145d6:	iret   
  4145d7:	sub    esp,DWORD PTR [ecx+0x4f]
  4145da:	sar    DWORD PTR [edx+0x6681cd4e],cl
  4145e0:	jne    0x414654
  4145e2:	dec    esp
  4145e3:	(bad)  
  4145e4:	lock jmp 0x3d20:0x778271d0
  4145ec:	mov    esi,0x23d13a48
  4145f1:	fsub   DWORD PTR [ebp+0x14252386]
  4145f7:	call   0x534d4424
  4145fc:	and    bl,BYTE PTR [ecx+ecx*1]
  4145ff:	loope  0x414611
  414601:	repnz pop ss
  414603:	cli    
  414604:	dec    edi
  414605:	mov    WORD PTR [esp+edx*1+0x59c70eab],fs
  41460c:	mov    BYTE PTR [eax-0xd],dl
  41460f:	dec    ecx
  414610:	es (bad) 
  414612:	mov    esi,0x5a7a4be8
  414617:	int    0x7e
  414619:	and    al,0x9c
  41461b:	sbb    DWORD PTR [ecx+ebx*1+0x3c],ecx
  41461f:	ret    0xc8db
  414622:	arpl   sp,ax
  414624:	ror    ecx,cl
  414626:	fidiv  WORD PTR [ecx-0xbb18bc7]
  41462c:	dec    ecx
  41462d:	jle    0x414612
  41462f:	push   ds
  414630:	mov    es,WORD PTR [eax+0x883d0c6]
  414636:	add    cl,BYTE PTR [eax]
  414638:	ret    
  414639:	xor    BYTE PTR [edx-0x12],bl
  41463c:	test   al,0x3f
  41463e:	cmp    al,0xce
  414640:	(bad)  
  414641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414642:	sub    dh,BYTE PTR [esi+0x733bc3ad]
  414648:	dec    esi
  414649:	rcl    BYTE PTR [ebp+0x481cc42f],cl
  41464f:	fst    DWORD PTR [ecx]
  414651:	popf   
  414652:	popa   
  414653:	add    dl,al
  414655:	mov    BYTE PTR gs:[edi+0x3e199f1c],dl
  41465c:	add    ah,BYTE PTR [edx]
  41465e:	cmp    dh,BYTE PTR [esi-0x1ad1bbab]
  414664:	loope  0x41465f
  414666:	pushf  
  414667:	pop    ecx
  414668:	mov    dh,ch
  41466a:	adc    eax,0x508a1c75
  41466f:	dec    ebp
  414670:	enter  0x70c7,0xcc
  414674:	nop
  414675:	shl    DWORD PTR [eax+eiz*1-0x41],0xa6
  41467a:	push   esi
  41467b:	pushf  
  41467c:	jne    0x4146b5
  41467e:	leave  
  41467f:	test   al,0x68
  414682:	lock xor cl,BYTE PTR [ebx+0x13]
  414686:	dec    edx
  414687:	(bad)  
  414688:	daa    
  414689:	sub    al,0xbb
  41468b:	leave  
  41468c:	(bad)  
  41468d:	cmc    
  41468e:	pop    esp
  41468f:	add    ah,BYTE PTR [esi+0x22f5f92f]
  414695:	inc    esp
  414696:	pop    eax
  414697:	sbb    al,0xe
  414699:	sub    al,0x1b
  41469b:	nop
  41469c:	jp     0x41463b
  41469e:	adc    eax,0xef0bed32
  4146a3:	and    eax,0x32f2551e
  4146a8:	repz mov eax,ds:0x13619870
  4146ae:	loop   0x414666
  4146b0:	mov    DWORD PTR [esi-0x101e7ff3],0x15d94403
  4146ba:	dec    eax
  4146bb:	xor    bl,BYTE PTR [ecx-0x3556c84c]
  4146c1:	cmp    eax,DWORD PTR [ecx+edx*4-0x24]
  4146c5:	jmp    0x41464f
  4146c7:	(bad)  
  4146c9:	ret    0x3ef3
  4146cc:	mov    bl,0x1d
  4146ce:	mov    ebx,DWORD PTR [esi]
  4146d0:	push   esi
  4146d1:	jo     0x414740
  4146d3:	iret   
  4146d4:	mov    bh,0x52
  4146d6:	push   esi
  4146d7:	sti    
  4146d8:	ins    DWORD PTR es:[edi],dx
  4146d9:	jnp    0x414668
  4146db:	or     al,BYTE PTR [esi+edx*2+0x42757e0]
  4146e2:	jae    0x414665
  4146e4:	sub    DWORD PTR [ebp-0x430b2c8],0x78
  4146eb:	jle    0x4146c5
  4146ed:	mov    dl,0x6
  4146ef:	aaa    
  4146f0:	cmp    BYTE PTR [ebx],dl
  4146f2:	cmp    al,0xf3
  4146f4:	in     al,0xe0
  4146f6:	in     eax,dx
  4146f7:	ucomiss xmm2,xmm2
  4146fa:	mov    fs,ebx
  4146fc:	scas   eax,DWORD PTR es:[edi]
  4146fd:	dec    ebp
  4146fe:	push   eax
  4146ff:	sub    eax,DWORD PTR [edi]
  414701:	fisttp DWORD PTR [ebx+0x183c4d1e]
  414707:	cmp    eax,0x1d639699
  41470c:	fist   WORD PTR [eax+0x4b]
  41470f:	xor    ah,BYTE PTR [ecx+0x793bce2f]
  414715:	retf   
  414716:	neg    DWORD PTR [eax+0xf7a39a8]
  41471c:	imul   esi,DWORD PTR [eax],0x44
  41471f:	ds add al,0x26
  414722:	enter  0x194d,0x77
  414726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414727:	test   BYTE PTR [edx+0x31],ch
  41472a:	outs   dx,BYTE PTR ds:[esi]
  41472b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472d:	sub    ah,BYTE PTR es:[eax]
  414730:	popa   
  414731:	lock add BYTE PTR [edx],dl
  414734:	push   ecx
  414735:	jno    0x414799
  414737:	inc    esp
  414738:	add    bl,0xcc
  41473b:	ds push ebp
  41473d:	adc    al,0xe1
  41473f:	and    bh,bh
  414741:	push   ds
  414742:	aas    
  414743:	popf   
  414744:	or     DWORD PTR [ebx-0x2b81e5c],ecx
  41474a:	mov    ebp,0x31f84c1a
  41474f:	or     eax,DWORD PTR [ebx-0x433054ae]
  414755:	ret    
  414756:	xchg   BYTE PTR [esi-0x19],al
  414759:	shl    BYTE PTR [ebp+0x14],cl
  41475c:	mov    bl,BYTE PTR [eax-0xe025e1a]
  414762:	ins    BYTE PTR es:[edi],dx
  414763:	mov    al,0x69
  414765:	dec    edx
  414766:	xchg   edx,eax
  414767:	fwait
  414768:	lds    esp,FWORD PTR [edi+0x6fe67c8d]
  41476e:	or     eax,0xbc8401f
  414773:	sbb    BYTE PTR [edx],0x42
  414776:	clc    
  414777:	mov    ch,0x72
  414779:	and    eax,0x96ab49e0
  41477e:	and    esi,esi
  414780:	jge    0x414737
  414782:	sti    
  414783:	cmp    DWORD PTR [esi],0xb12498ca
  414789:	out    dx,eax
  41478a:	or     BYTE PTR [ebp+eiz*1-0x2d],ch
  41478e:	add    edx,edx
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	loop   0x414791
  414793:	add    eax,0x7f6aec92
  414798:	(bad)  [ebp-0x3b4496ed]
  41479e:	xchg   DWORD PTR [esi+eiz*1-0x4f1ead56],ebp
  4147a5:	les    ecx,FWORD PTR [eax+0x58]
  4147a8:	lods   eax,DWORD PTR ds:[esi]
  4147a9:	test   BYTE PTR [esi],0xa8
  4147ac:	sbb    eax,0xc2ac2074
  4147b1:	push   esi
  4147b2:	jmp    0x24c9:0x221c3973
  4147b9:	adc    edi,0x954e37a7
  4147bf:	(bad)  
  4147c0:	jmp    0x617a:0xba98b9d5
  4147c7:	scas   al,BYTE PTR es:[edi]
  4147c8:	xchg   esp,eax
  4147c9:	pushf  
  4147ca:	mov    dl,0x9b
  4147cc:	cdq    
  4147cd:	dec    eax
  4147ce:	gs add al,ch
  4147d1:	push   ebp
  4147d2:	sub    DWORD PTR [esi+0x1dca9409],0xcb0bf9d2
  4147dc:	add    edi,DWORD PTR [ecx-0x1b47dd79]
  4147e2:	push   edx
  4147e3:	adc    esi,ebx
  4147e5:	test   al,0x9b
  4147e7:	fisub  DWORD PTR [ebp+ebx*8+0x3d]
  4147eb:	push   edi
  4147ec:	push   eax
  4147ed:	sub    bl,BYTE PTR [ebx-0x4ef355cb]
  4147f3:	xchg   DWORD PTR [edx-0xb],edx
  4147f6:	push   ds
  4147f7:	scas   al,BYTE PTR es:[edi]
  4147f8:	pushf  
  4147f9:	mov    edx,0xc03d9343
  4147fe:	push   esi
  4147ff:	cmc    
  414800:	(bad)  
  414803:	lods   eax,DWORD PTR ds:[esi]
  414804:	add    eax,ebp
  414806:	repz imul esi,edi,0x9
  41480a:	push   ds
  41480b:	or     al,bh
  41480d:	retf   
  41480e:	xchg   edi,eax
  41480f:	mov    bl,0x96
  414811:	jl     0x41486e
  414813:	xchg   ecx,eax
  414814:	(bad)  
  414815:	fwait
  414816:	and    ch,BYTE PTR ds:0x484387c1
  41481c:	mov    bh,0x5c
  41481e:	(bad)  
  41481f:	cmp    ebp,DWORD PTR [ebp-0x6c]
  414822:	or     BYTE PTR [esi],0x96
  414825:	shl    ebp,0x9d
  414828:	jns    0x4147d8
  41482a:	inc    esi
  41482b:	loope  0x414855
  41482d:	sbb    ebx,edi
  41482f:	sub    edi,DWORD PTR [ebx]
  414831:	mov    edx,0xa01f1679
  414836:	lds    ebx,FWORD PTR [ecx-0x206d59aa]
  41483c:	ins    DWORD PTR es:[edi],dx
  41483d:	pop    ss
  41483e:	stc    
  41483f:	cdq    
  414840:	shr    DWORD PTR [ebx-0x3578e914],1
  414846:	sbb    eax,esi
  414848:	xchg   ebx,eax
  414849:	inc    ebx
  41484a:	xchg   edx,eax
  41484b:	retf   
  41484c:	mov    al,ds:0xc9ad27fa
  414851:	inc    ecx
  414852:	mov    bh,0xc4
  414854:	cmp    ah,BYTE PTR [esi+0x38bbb128]
  41485a:	clc    
  41485b:	mov    ebx,es
  41485d:	test   eax,0x4ef0b81d
  414862:	cwde   
  414863:	scas   al,BYTE PTR es:[edi]
  414864:	push   ebx
  414865:	das    
  414866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414867:	imul   esi,DWORD PTR [esi+0x227e765d],0x28
  41486e:	sub    DWORD PTR [edx-0x6],esp
  414871:	int    0x90
  414873:	and    eax,0x2be92b71
  414878:	fcomp  QWORD PTR [edi+0x70ae116f]
  41487e:	test   DWORD PTR [eax+0x3ea8f4c2],eax
  414884:	shr    edi,0xf1
  414887:	in     al,dx
  414888:	pop    esi
  414889:	ins    DWORD PTR es:[edi],dx
  41488a:	or     eax,0x13afe6ea
  41488f:	test   al,0x2a
  414891:	and    BYTE PTR [ebx+0x7559c1b3],dl
  414897:	enter  0x9f,0x3
  41489b:	sbb    ch,BYTE PTR [esi]
  41489d:	aaa    
  41489e:	xor    edx,ecx
  4148a0:	daa    
  4148a1:	cmp    BYTE PTR [edx],bl
  4148a3:	shl    ah,1
  4148a5:	mov    dh,0x66
  4148a7:	pop    esi
  4148a8:	mov    ecx,0xf1e1e226
  4148ad:	and    bh,al
  4148af:	cdq    
  4148b0:	pop    edi
  4148b1:	int3   
  4148b2:	mov    cl,0xba
  4148b4:	inc    ebx
  4148b5:	mov    ds:0x3994fd63,al
  4148ba:	fiadd  DWORD PTR [eax+0x1f]
  4148bd:	mov    esi,0xdc273f81
  4148c2:	iret   
  4148c3:	test   esp,edi
  4148c5:	test   DWORD PTR [esi+0x66d9202d],edx
  4148cb:	js     0x414904
  4148cd:	xchg   esi,eax
  4148ce:	out    0x62,eax
  4148d0:	cmp    bl,dl
  4148d2:	imul   edx,esi,0xffffff8e
  4148d5:	retf   
  4148d6:	and    eax,0x9ba9c591
  4148db:	xor    ebp,DWORD PTR [ecx-0x10684c3f]
  4148e1:	inc    ebp
  4148e2:	scas   eax,DWORD PTR es:[edi]
  4148e3:	ins    BYTE PTR es:[edi],dx
  4148e4:	mov    edx,0x4088694f
  4148e9:	and    bh,BYTE PTR [ecx]
  4148eb:	je     0x4148e4
  4148ed:	xchg   esi,eax
  4148ee:	mov    dh,0x1
  4148f0:	fwait
  4148f1:	test   al,0x8c
  4148f3:	sti    
  4148f4:	out    dx,al
  4148f5:	enter  0x2f90,0x7a
  4148f9:	fdiv   DWORD PTR [edx-0x18]
  4148fc:	cmp    esi,DWORD PTR [eax-0x4d]
  4148ff:	jo     0x4148ba
  414901:	ror    BYTE PTR [edi],cl
  414903:	sbb    BYTE PTR ss:[edx],ah
  414906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414907:	mov    al,ds:0x4f675ad7
  41490c:	mov    edx,0x75c815ee
  414911:	sbb    eax,0x269a7508
  414916:	mov    BYTE PTR [ecx-0x244187b6],cl
  41491c:	or     al,BYTE PTR [eax+0x65]
  41491f:	lahf   
  414920:	or     DWORD PTR ds:0xe36214dd,0x33
  414927:	and    DWORD PTR [ebx],0x2
  41492a:	gs mov cl,bh
  41492d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41492f:	pop    ss
  414930:	scas   al,BYTE PTR es:[edi]
  414931:	push   ebx
  414932:	test   al,0xbc
  414934:	idiv   bh
  414936:	loop   0x4149b4
  414938:	or     ebp,DWORD PTR [ecx+eax*4+0x22]
  41493c:	test   DWORD PTR [ecx-0x2f],ecx
  41493f:	aaa    
  414940:	(bad)  
  414941:	or     al,0xe7
  414943:	and    eax,0x2a6755b3
  414948:	les    edi,FWORD PTR [ebx]
  41494a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41494b:	mov    eax,cs:0x897d64ab
  414951:	daa    
  414952:	test   dh,dh
  414954:	adc    eax,0x7f1cdc52
  414959:	inc    esp
  41495a:	sub    ebx,DWORD PTR [ebx+0x16]
  41495d:	cwde   
  41495e:	sbb    ebp,edi
  414960:	cmp    eax,0x4675df16
  414965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414966:	das    
  414967:	hlt    
  414968:	lahf   
  414969:	test   BYTE PTR [ecx+0x3c],bl
  41496c:	mov    edx,0x8de15127
  414971:	ss (bad) 
  414974:	push   edx
  414975:	lahf   
  414976:	pop    ds
  414977:	loop   0x4149c1
  414979:	xor    DWORD PTR [edx+0x48],esp
  41497c:	loop   0x414973
  41497e:	or     edi,DWORD PTR [ebx]
  414980:	and    ebp,DWORD PTR [edx]
  414982:	pop    ds
  414983:	adc    ch,BYTE PTR [edi+0x16]
  414986:	lahf   
  414987:	fldcw  WORD PTR [ecx-0x1c]
  41498a:	xchg   ebp,eax
  41498b:	push   esi
  41498c:	dec    esi
  41498d:	jbe    0x41495e
  41498f:	or     bh,BYTE PTR [ebp+0x4b5c9c81]
  414995:	pop    ebp
  414996:	cmc    
  414997:	jns    0x414989
  414999:	(bad)  
  41499a:	pop    eax
  41499b:	scas   al,BYTE PTR es:[edi]
  41499c:	fs retf 
  41499e:	cwde   
  41499f:	ds popa 
  4149a1:	or     eax,0x12be2cb
  4149a6:	pop    ecx
  4149a7:	les    ebp,FWORD PTR [ecx+0x54]
  4149aa:	(bad)  
  4149ab:	fucom  st(2)
  4149ad:	in     al,0x4c
  4149af:	in     al,dx
  4149b0:	(bad)  
  4149b1:	sbb    eax,0x1364534d
  4149b6:	dec    ebp
  4149b7:	xchg   DWORD PTR [eax-0x5a1e79b6],ebx
  4149bd:	and    eax,0x5d99224b
  4149c2:	jnp    0x41498f
  4149c4:	mov    ah,0x5b
  4149c6:	adc    esi,DWORD PTR [ebp-0x6172bfc3]
  4149cc:	xchg   ebx,eax
  4149cd:	les    eax,FWORD PTR [eax+0x53]
  4149d0:	cmp    eax,0xa9145c89
  4149d5:	xchg   esp,eax
  4149d6:	or     dl,BYTE PTR [edi+eax*4]
  4149d9:	and    eax,DWORD PTR [edx]
  4149db:	xchg   ebp,eax
  4149dc:	jg     0x414a07
  4149de:	mov    dl,0x87
  4149e0:	pop    eax
  4149e1:	jmp    0xa986a835
  4149e6:	cmp    DWORD PTR [eax+0x6],esi
  4149e9:	lds    ecx,FWORD PTR [esi]
  4149eb:	push   ebx
  4149ec:	cmp    dl,BYTE PTR [eax+edi*2]
  4149ef:	(bad)  
  4149f0:	mov    cl,0xbf
  4149f2:	dec    ebp
  4149f3:	mov    ch,0x5f
  4149f5:	popa   
  4149f6:	add    dh,bh
  4149f8:	push   0x8246f763
  4149fd:	inc    ebx
  4149fe:	adc    al,0x2f
  414a00:	call   0x9759:0x7033ffda
  414a07:	test   DWORD PTR [esi+eiz*2+0x27e7e0a5],edx
  414a0e:	fimul  DWORD PTR [ebx]
  414a10:	xor    eax,0xed60d4f4
  414a15:	arpl   WORD PTR [esi-0x30],si
  414a18:	(bad)  
  414a19:	xchg   ecx,eax
  414a1a:	sbb    dh,BYTE PTR [edx]
  414a1c:	sbb    BYTE PTR [eax-0x5f],ah
  414a1f:	cmp    BYTE PTR [edi-0x460b4575],bl
  414a25:	call   0xc9361cb0
  414a2a:	cmp    eax,0xe4523b0f
  414a2f:	and    al,BYTE PTR [eax]
  414a31:	loope  0x4149c3
  414a33:	dec    esp
  414a35:	and    BYTE PTR [ecx-0x40],dh
  414a38:	or     eax,0x4202618f
  414a3d:	push   esi
  414a3e:	mov    ds:0x96418321,eax
  414a43:	sbb    ebp,DWORD PTR [ebx+0x38ad6e22]
  414a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a4a:	mov    ah,0x17
  414a4c:	dec    edx
  414a4d:	pop    edi
  414a4e:	popa   
  414a4f:	push   esi
  414a50:	add    eax,0x3788fc2e
  414a55:	(bad)  
  414a56:	and    ch,BYTE PTR [ebx+0x74a14935]
  414a5c:	jnp    0x414a08
  414a5e:	je     0x414aaa
  414a60:	dec    ebx
  414a61:	ins    BYTE PTR es:[edi],dx
  414a62:	dec    eax
  414a63:	lods   al,BYTE PTR ds:[esi]
  414a64:	pop    ebx
  414a65:	iret   
  414a66:	lahf   
  414a67:	or     DWORD PTR [ebp-0x2c],edi
  414a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6b:	int    0x84
  414a6d:	or     al,0xbc
  414a6f:	adc    al,0x9e
  414a71:	arpl   WORD PTR [edx],ax
  414a73:	adc    al,0xe3
  414a75:	xor    al,0x16
  414a77:	jge    0x414a31
  414a79:	cdq    
  414a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a7b:	popf   
  414a7c:	(bad)  
  414a7d:	xlat   BYTE PTR ds:[ebx]
  414a7e:	or     DWORD PTR [esp+ebp*2+0x79236e8b],0xffffffe8
  414a86:	mov    ds:0x86f3daf9,al
  414a8b:	push   edi
  414a8c:	mov    eax,ds:0x2c977b0a
  414a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a92:	jg     0x414af8
  414a94:	data16 xor cl,bh
  414a97:	jb     0x414a30
  414a99:	fild   QWORD PTR [ebp+0x7c]
  414a9c:	sub    al,0xb8
  414a9e:	jb     0x414b06
  414aa0:	fst    DWORD PTR [edx+0x4f]
  414aa3:	clc    
  414aa4:	pop    ecx
  414aa5:	ret    
  414aa6:	push   ebp
  414aa7:	das    
  414aa8:	js     0x414a51
  414aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aab:	sub    esp,ebp
  414aad:	shl    DWORD PTR [esi-0x4408454e],cl
  414ab3:	cmp    ebx,ebp
  414ab5:	loopne 0x414ae8
  414ab7:	pop    ds
  414ab8:	cmp    bl,BYTE PTR [ebx+edx*2]
  414abb:	(bad)  [esi-0xb]
  414abe:	retf   
  414abf:	jecxz  0x414a49
  414ac1:	xor    DWORD PTR [ebp+0x8ac16f5],ebx
  414ac7:	js     0x414a82
  414ac9:	call   0x342edc75
  414ace:	push   0x4e3c3f8e
  414ad3:	xchg   edi,eax
  414ad4:	test   al,0x9f
  414ad6:	mov    ecx,0x592046eb
  414adb:	(bad)  
  414add:	sub    BYTE PTR [edi-0x2a],al
  414ae0:	fist   WORD PTR [edx]
  414ae2:	xor    esi,DWORD PTR [edx]
  414ae4:	push   ecx
  414ae5:	lods   eax,DWORD PTR ds:[esi]
  414ae6:	adc    BYTE PTR [esi],al
  414ae8:	mov    al,ds:0x63c864d4
  414aed:	inc    ch
  414aef:	lock adc BYTE PTR ds:0x26ce10f0,ah
  414af6:	push   ebx
  414af7:	pop    ebp
  414af8:	mov    dl,0x57
  414afa:	and    al,BYTE PTR [bp+0x73df]
  414aff:	ins    BYTE PTR es:[edi],dx
  414b00:	mov    dl,0x3e
  414b02:	mov    bh,0x66
  414b04:	fadd   st(5),st
  414b06:	push   edx
  414b07:	mov    bl,0x63
  414b09:	out    dx,eax
  414b0a:	in     al,dx
  414b0b:	pop    edx
  414b0c:	add    esi,edx
  414b0e:	sbb    DWORD PTR [esi+0x73c29cda],esp
  414b14:	out    0xd8,al
  414b16:	inc    esi
  414b17:	mov    ebp,0x9569c0e3
  414b1c:	fimul  DWORD PTR [ebp+0x6c]
  414b1f:	jecxz  0x414b96
  414b21:	ja     0x414b9c
  414b23:	test   edi,eax
  414b25:	inc    ebx
  414b26:	out    dx,eax
  414b27:	add    ebx,DWORD PTR [bx+si-0x10]
  414b2b:	push   edi
  414b2c:	pop    esi
  414b2d:	ret    
  414b2e:	into   
  414b2f:	adc    eax,0xb63f48aa
  414b34:	adc    BYTE PTR fs:[ebp+0x434e0b82],ah
  414b3b:	dec    edx
  414b3c:	dec    esp
  414b3d:	push   edx
  414b3e:	in     eax,dx
  414b3f:	jmp    0x414baf
  414b41:	ret    0xc694
  414b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b45:	shr    dh,cl
  414b47:	in     al,0x62
  414b49:	test   DWORD PTR [eax],ebx
  414b4b:	jae    0x414b87
  414b4d:	pop    ecx
  414b4e:	mov    esp,0x579262e0
  414b53:	int    0x85
  414b55:	adc    BYTE PTR [ebx],ch
  414b57:	scas   al,BYTE PTR es:[edi]
  414b58:	push   ecx
  414b59:	sub    BYTE PTR [edi],0x7b
  414b5c:	sbb    BYTE PTR [edx-0x2],cl
  414b5f:	fsubr  DWORD PTR [ebp+0x3c]
  414b62:	test   DWORD PTR [edi],ebp
  414b64:	into   
  414b65:	icebp  
  414b66:	sub    ah,BYTE PTR [edi]
  414b68:	jne    0x414b17
  414b6a:	(bad)  
  414b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b6c:	inc    edi
  414b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6e:	and    cl,al
  414b70:	pop    ds
  414b71:	cld    
  414b72:	pop    ds
  414b73:	sti    
  414b74:	jne    0x414b31
  414b76:	push   0x5a5113bb
  414b7b:	push   cs
  414b7c:	dec    eax
  414b7d:	mov    dh,0x15
  414b7f:	jo     0x414b53
  414b81:	mov    ss,WORD PTR ds:0x4c35f7ab
  414b87:	jecxz  0x414b96
  414b89:	jg     0x414b7f
  414b8b:	in     al,dx
  414b8c:	in     al,0xa2
  414b8e:	ins    BYTE PTR es:[edi],dx
  414b8f:	jbe    0x414b8e
  414b91:	mov    eax,ds:0x1ccf6c90
  414b96:	out    0xaf,al
  414b98:	or     DWORD PTR [edi],ebp
  414b9a:	jge    0x414c1b
  414b9c:	(bad)  
  414b9d:	sub    al,0xfd
  414b9f:	jmp    0x414ba3
  414ba1:	ds ror esp,1
  414ba4:	and    ch,cl
  414ba6:	jae    0x414bcc
  414ba8:	icebp  
  414ba9:	(bad)  
  414baa:	mov    eax,0x9c46c66f
  414baf:	dec    ecx
  414bb0:	or     BYTE PTR [esi+0x54],dh
  414bb3:	sub    BYTE PTR es:[ebx+0x17],cl
  414bb7:	cmp    BYTE PTR [edi+0x3f],0xca
  414bbb:	push   ecx
  414bbc:	jns    0x414b68
  414bbe:	sbb    cl,cl
  414bc0:	test   BYTE PTR [edx],0x5e
  414bc3:	dec    ebp
  414bc4:	rcr    BYTE PTR [ebx+0x6828471f],0x42
  414bcb:	out    dx,eax
  414bcc:	and    eax,0xb4282de9
  414bd1:	aad    0xca
  414bd3:	mov    al,ds:0x29b27f66
  414bd8:	inc    esi
  414bd9:	shr    DWORD PTR [eax],cl
  414bdb:	(bad)  
  414bdc:	mov    dh,0xde
  414bde:	adc    BYTE PTR [edi],0x35
  414be1:	(bad)  
  414be2:	std    
  414be3:	movq   mm7,mm1
  414be6:	adc    BYTE PTR [esi],dl
  414be8:	scas   eax,DWORD PTR es:[edi]
  414be9:	adc    edx,edi
  414beb:	mov    esp,0xcece1821
  414bf0:	cmp    ch,BYTE PTR [eax]
  414bf2:	cdq    
  414bf3:	loope  0x414c53
  414bf5:	jmp    0xaa92:0x9e54c133
  414bfc:	mov    DWORD PTR [ecx],ecx
  414bfe:	int3   
  414bff:	mov    ah,0x8
  414c01:	ins    BYTE PTR es:[edi],dx
  414c02:	retf   0x297d
  414c05:	ror    edi,0xea
  414c08:	mov    al,0xac
  414c0a:	inc    ebp
  414c0b:	pop    eax
  414c0c:	hlt    
  414c0d:	sbb    DWORD PTR ds:0x6f158dbc,edx
  414c13:	test   DWORD PTR [eax],edx
  414c15:	aam    0x2b
  414c17:	mov    ebp,0x94719408
  414c1c:	push   edi
  414c1d:	mov    cl,0x4d
  414c1f:	add    eax,DWORD PTR [ecx+0x3d57c3b]
  414c25:	cs aam 0x93
  414c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c29:	retf   
  414c2a:	icebp  
  414c2b:	add    BYTE PTR ds:0xa887cd8f,cl
  414c31:	jmp    0x414c30
  414c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c34:	mov    ch,0x8b
  414c36:	imul   edi,esp,0x7cb5c5d5
  414c3c:	ins    BYTE PTR es:[edi],dx
  414c3d:	jno    0x414c13
  414c3f:	loopne 0x414c81
  414c41:	rol    DWORD PTR [esi+0x5bbf64df],cl
  414c47:	mov    ecx,0x94c6a013
  414c4c:	mov    al,0xaf
  414c4e:	jae    0x414c3d
  414c50:	div    BYTE PTR [ecx]
  414c52:	mov    eax,0x297c218f
  414c57:	out    0xa1,eax
  414c59:	mov    eax,ds:0x2a2ec374
  414c5e:	mov    ds:0x7db0a680,al
  414c63:	retf   
  414c64:	and    DWORD PTR [ebx-0x1d81c7a5],esi
  414c6a:	shl    BYTE PTR [ebp+0x40],1
  414c6d:	mov    dl,0xdb
  414c6f:	inc    ebx
  414c70:	mov    esi,0xdb8c5f08
  414c75:	jg     0x414cde
  414c77:	sbb    BYTE PTR [ebp-0x5c],bl
  414c7a:	push   cs
  414c7b:	sbb    dh,cl
  414c7d:	or     DWORD PTR [edx-0x165c5b06],esi
  414c83:	xor    ebx,DWORD PTR [edx+eax*8]
  414c86:	adc    cl,BYTE PTR [esi]
  414c88:	fs push 0xffffffb2
  414c8b:	push   edx
  414c8c:	lock ins DWORD PTR es:[edi],dx
  414c8e:	jecxz  0x414c7e
  414c90:	jl     0x414c14
  414c92:	outs   dx,BYTE PTR ds:[esi]
  414c93:	mov    DWORD PTR [ebx-0x66],ecx
  414c96:	(bad)  
  414c97:	or     DWORD PTR [edi],ebp
  414c99:	enter  0x5184,0x60
  414c9d:	pop    esp
  414c9e:	xchg   ebp,eax
  414c9f:	or     eax,0x27015478
  414ca4:	pop    ebp
  414ca5:	aam    0xfd
  414ca7:	push   ds
  414ca8:	mov    eax,ds:0x7fbf9d2f
  414cad:	inc    edi
  414cae:	ror    eax,1
  414cb0:	setno  BYTE PTR [ebx-0xa16086c]
  414cb7:	inc    eax
  414cb8:	fnstsw WORD PTR [edi]
  414cba:	mov    eax,0x6dc773b7
  414cbf:	adc    BYTE PTR [eax+0x1e],0x17
  414cc3:	cmp    DWORD PTR [edi-0x1ada0a54],ebp
  414cc9:	(bad)  
  414cca:	scas   al,BYTE PTR es:[edi]
  414ccb:	sbb    esp,ebp
  414ccd:	lods   eax,DWORD PTR ds:[esi]
  414cce:	jp     0x414ced
  414cd0:	and    eax,0x2bf26a54
  414cd5:	retf   0xc204
  414cd8:	mov    cl,0x94
  414cda:	lods   eax,DWORD PTR ds:[esi]
  414cdb:	sbb    ch,BYTE PTR [eax+0x71dc7da0]
  414ce1:	jae    0x414c6c
  414ce3:	(bad)  
  414ce4:	lea    esi,[edx+0x58a5177b]
  414cea:	xchg   ecx,eax
  414ceb:	pop    esi
  414cec:	lea    eax,[ebx]
  414cee:	repz mov bh,0x95
  414cf1:	mov    bl,0xcd
  414cf3:	pop    ebp
  414cf4:	test   al,0xc0
  414cf6:	je     0x414d6f
  414cf8:	mov    ebx,0x99e1aee1
  414cfd:	idiv   dl
  414cff:	cld    
  414d00:	jg     0x414d4f
  414d02:	mov    eax,ds:0xbc72d20c
  414d07:	shr    ch,1
  414d09:	push   ebx
  414d0a:	xor    BYTE PTR [ecx-0xb],ah
  414d0d:	jae    0x414caa
  414d0f:	fldenv [ebp+0x70]
  414d12:	pop    esp
  414d13:	stos   DWORD PTR es:[edi],eax
  414d14:	dec    ebx
  414d15:	xchg   edi,eax
  414d16:	rcr    DWORD PTR [ebx-0x48c392ef],cl
  414d1c:	leave  
  414d1d:	(bad)  
  414d1e:	iret   
  414d1f:	or     ebp,edx
  414d21:	cmc    
  414d22:	mov    ds:0x65a6da61,al
  414d27:	add    DWORD PTR [ebp-0x61b0436e],ebp
  414d2d:	in     al,0x63
  414d2f:	sub    eax,0xabf02a8d
  414d34:	inc    ebp
  414d35:	mov    BYTE PTR [ebx+ecx*8+0x5d],bl
  414d39:	pusha  
  414d3a:	inc    edi
  414d3b:	mov    eax,0xc9dc977
  414d40:	mov    eax,0x56d890d4
  414d45:	enter  0x6be2,0x24
  414d49:	or     eax,0x864e1411
  414d4e:	sahf   
  414d4f:	rcr    cl,cl
  414d51:	push   es
  414d52:	mov    ch,0x8d
  414d54:	int3   
  414d55:	das    
  414d56:	enter  0x597,0x1c
  414d5a:	push   0x14
  414d5c:	in     al,0x65
  414d5e:	inc    esp
  414d5f:	jle    0x414d79
  414d61:	jge    0x414d88
  414d63:	jmp    0x8b1d:0x90e4dea
  414d6a:	lock mov bl,0xa8
  414d6d:	dec    ecx
  414d6e:	rcl    DWORD PTR [ecx],0x8b
  414d71:	in     al,dx
  414d72:	ret    
  414d73:	jp     0x414d1c
  414d75:	pop    esi
  414d76:	repnz xor ebx,edi
  414d79:	fst    QWORD PTR [edx-0x11245973]
  414d7f:	xchg   edx,eax
  414d80:	in     al,0xd4
  414d82:	and    al,BYTE PTR [edx]
  414d84:	dec    eax
  414d85:	dec    edx
  414d86:	adc    eax,0x82b8b625
  414d8b:	ror    BYTE PTR [edx-0xc12ff06],1
  414d91:	lea    esi,[edx]
  414d93:	cli    
  414d94:	ret    
  414d95:	add    ah,bh
  414d97:	jl     0x414dc8
  414d99:	adc    al,0xd7
  414d9b:	adc    eax,0x1309bb21
  414da0:	fwait
  414da1:	xchg   edx,eax
  414da2:	(bad)  
  414da3:	push   esi
  414da4:	push   0xffffff80
  414da6:	test   DWORD PTR [edx],edi
  414da8:	or     BYTE PTR [eax+0x7a],bh
  414dab:	out    0x4b,al
  414dad:	cmp    edx,ecx
  414daf:	scas   eax,DWORD PTR es:[edi]
  414db0:	fadd   QWORD PTR [eax-0x61]
  414db3:	nop
  414db4:	fstp   QWORD PTR [edx]
  414db6:	and    eax,0x9822ff44
  414dbb:	jmp    0xe6b2d68d
  414dc0:	mov    esp,0x2edfe3a7
  414dc5:	les    esp,FWORD PTR [ecx+0x52ed29af]
  414dcb:	clc    
  414dcc:	into   
  414dcd:	sti    
  414dce:	xchg   esp,eax
  414dcf:	sti    
  414dd0:	(bad)
  414dd3:	pop    esi
  414dd4:	xchg   edx,eax
  414dd5:	add    ebx,ecx
  414dd7:	pop    ebp
  414dd8:	jns    0x414dde
  414dda:	jns    0x414d64
  414ddc:	dec    esp
  414ddd:	outs   dx,BYTE PTR ds:[esi]
  414dde:	mov    ebx,0xb9355237
  414de3:	jbe    0x414dd1
  414de5:	sub    cl,ch
  414de7:	lock iret 
  414de9:	or     ebp,DWORD PTR [ecx-0x375ef4fa]
  414def:	jo     0x414db9
  414df1:	or     DWORD PTR [ecx+0x3e],edi
  414df4:	jb     0x414da6
  414df6:	jle    0x414e63
  414df8:	mov    dl,0x61
  414dfa:	aad    0xb9
  414dfc:	inc    ebx
  414dfd:	ss out 0xd4,al
  414e00:	push   0x2347e536
  414e05:	ss leave 
  414e07:	mov    ecx,0xbe95c3e7
  414e0c:	adc    al,0x1d
  414e0e:	xchg   BYTE PTR [eax],dl
  414e10:	fisub  WORD PTR [ebp-0x1774b8c8]
  414e16:	xchg   esp,eax
  414e17:	call   0x4b4a882d
  414e1c:	push   ds
  414e1d:	adc    cl,0xa5
  414e20:	fs int3 
  414e22:	sub    DWORD PTR [esi-0x300e58d7],0x51b8d32a
  414e2c:	hlt    
  414e2d:	test   al,0x50
  414e2f:	pop    ds
  414e30:	pop    ds
  414e31:	daa    
  414e32:	xchg   BYTE PTR [esi-0x40],bh
  414e35:	and    ah,cl
  414e37:	pop    ecx
  414e38:	mov    edi,0x60b113f7
  414e3d:	dec    ebx
  414e3e:	cmp    eax,0x6c5ef700
  414e43:	inc    eax
  414e44:	out    dx,eax
  414e45:	cld    
  414e46:	outs   dx,DWORD PTR ds:[esi]
  414e47:	(bad)  
  414e48:	imul   ecx,edx,0x36
  414e4b:	mov    ah,0xc3
  414e4d:	test   BYTE PTR [edi],cl
  414e4f:	cmp    BYTE PTR [esi+edx*2-0x59671bd7],ah
  414e56:	test   eax,ebx
  414e58:	aam    0x2b
  414e5a:	jns    0x414e59
  414e5c:	jmp    0x414eae
  414e5e:	mov    cl,0x16
  414e60:	jns    0x414ed5
  414e62:	jge    0x414e84
  414e64:	in     eax,0x18
  414e66:	pop    ebx
  414e67:	ja     0x414ed7
  414e69:	lods   al,BYTE PTR ds:[esi]
  414e6a:	ins    BYTE PTR es:[edi],dx
  414e6b:	adc    ecx,DWORD PTR [edx]
  414e6d:	ja     0x414e71
  414e6f:	pushf  
  414e70:	lods   eax,DWORD PTR ds:[esi]
  414e71:	ins    DWORD PTR es:[edi],dx
  414e72:	cmp    esp,DWORD PTR [esi-0x7c]
  414e75:	and    BYTE PTR [eax-0x46725b83],ah
  414e7b:	sar    DWORD PTR [ebp-0x4cdf70cd],cl
  414e81:	in     al,0xef
  414e83:	sahf   
  414e84:	imul   ebx,DWORD PTR [eax-0x1e],0xffffffcf
  414e88:	es pop ebx
  414e8a:	cmovae ebp,esi
  414e8d:	jmp    FWORD PTR [eax]
  414e8f:	ror    BYTE PTR [eax-0x4a],cl
  414e92:	mov    bh,al
  414e94:	xlat   BYTE PTR ds:[ebx]
  414e95:	aas    
  414e96:	pusha  
  414e97:	mov    edx,0x8f4a2d93
  414e9c:	sahf   
  414e9d:	add    BYTE PTR [eax+0x29],ch
  414ea0:	mov    BYTE PTR [ebx-0x3d4b398d],0xbe
  414ea7:	(bad)  
  414eab:	pop    esi
  414eac:	xor    DWORD PTR [ebp-0x403caba],edi
  414eb2:	(bad)  
  414eb3:	jge    0x414ed0
  414eb5:	aas    
  414eb6:	fdivr  st,st(7)
  414eb8:	repz inc esp
  414eba:	mul    DWORD PTR [ebp-0xaa8bda3]
  414ec0:	inc    edx
  414ec1:	jae    0x414e5f
  414ec3:	xchg   ebx,eax
  414ec4:	ss js  0x414e85
  414ec7:	aad    0x8e
  414ec9:	mov    al,0x28
  414ecb:	inc    edi
  414ecc:	repz sub bl,BYTE PTR [eax+0x7580cf7e]
  414ed3:	or     BYTE PTR [edi-0x1b],bl
  414ed6:	lods   eax,DWORD PTR ds:[esi]
  414ed7:	pusha  
  414ed8:	minps  xmm0,XMMWORD PTR [eax]
  414edb:	stc    
  414edc:	xchg   ebx,eax
  414edd:	sub    DWORD PTR [ebp-0x6],edx
  414ee0:	add    eax,0xa7f52a15
  414ee5:	(bad)  
  414ee6:	call   0x1dc2b141
  414eeb:	loope  0x414f5e
  414eed:	jnp    0x414f1d
  414eef:	ds aad 0xe5
  414ef2:	push   ebx
  414ef3:	and    al,0x85
  414ef5:	out    dx,eax
  414ef6:	dec    ecx
  414ef7:	imul   BYTE PTR [esp+ebx*8+0x5f]
  414efb:	xchg   ebx,eax
  414efc:	(bad)  
  414efd:	iret   
  414efe:	out    dx,al
  414eff:	add    DWORD PTR [ebp-0x66],ecx
  414f02:	mov    WORD PTR [esi],gs
  414f04:	sbb    eax,0xd50084c7
  414f09:	das    
  414f0a:	pop    edx
  414f0b:	in     eax,0x7
  414f0d:	and    BYTE PTR [edx-0x5c],bl
  414f10:	pop    ebp
  414f11:	imul   ebp,DWORD PTR [edx-0x5d],0x74a4e8c3
  414f18:	mul    BYTE PTR [edi]
  414f1a:	ret    
  414f1b:	and    DWORD PTR [eax-0x5c],ebp
  414f1e:	inc    ebp
  414f1f:	push   ds
  414f20:	int3   
  414f21:	dec    ecx
  414f22:	mov    ecx,0xfb8c8429
  414f27:	mov    ah,BYTE PTR [ebx+0x4d6e3d27]
  414f2d:	dec    eax
  414f2e:	out    0x76,al
  414f30:	mov    ah,0x64
  414f32:	add    ebx,esi
  414f34:	lods   al,BYTE PTR ds:[esi]
  414f35:	repz fwait
  414f37:	xchg   DWORD PTR [edx-0x79eeae28],esp
  414f3d:	(bad)  
  414f3e:	sti    
  414f3f:	lods   eax,DWORD PTR ds:[esi]
  414f40:	into   
  414f41:	ds jl  0x414f3e
  414f44:	nop
  414f45:	(bad)  
  414f46:	out    dx,eax
  414f47:	mov    ecx,0xbd069ba2
  414f4c:	jae    0x414ed1
  414f4e:	ja     0x414fb5
  414f50:	aam    0xdc
  414f52:	add    bl,BYTE PTR [ebx+0x1f96b81e]
  414f58:	xchg   BYTE PTR ds:0x4e5d6086,al
  414f5e:	sub    edx,DWORD PTR [ebx+esi*2]
  414f61:	add    eax,0x95df9e1e
  414f66:	in     eax,0x27
  414f68:	sub    DWORD PTR [ecx-0x32],0x737fa44e
  414f6f:	push   cs
  414f70:	pop    eax
  414f71:	xchg   edx,eax
  414f72:	mov    WORD PTR ds:0xd14c8002,?
  414f78:	into   
  414f79:	xchg   ecx,eax
  414f7a:	pop    eax
  414f7b:	adc    DWORD PTR [ebx+0x74],0x29fc7223
  414f82:	(bad)  
  414f84:	push   ecx
  414f85:	pop    ss
  414f86:	out    0x4e,al
  414f88:	cmc    
  414f89:	out    0xdd,al
  414f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f8c:	or     eax,0xd1c44efb
  414f91:	jl     0x414f9c
  414f93:	sti    
  414f94:	xchg   ebp,eax
  414f95:	int    0xbb
  414f97:	shr    BYTE PTR [eax],cl
  414f99:	mov    cl,0xd3
  414f9b:	arpl   WORD PTR [eax+0x5b4cfa3f],ax
  414fa1:	ss pusha 
  414fa3:	ret    
  414fa4:	push   edi
  414fa5:	sub    DWORD PTR [eax-0x10],eax
  414fa8:	shl    BYTE PTR [edx+ecx*8],0xf2
  414fac:	xlat   BYTE PTR ds:[ebx]
  414fad:	jne    0x415001
  414faf:	cdq    
  414fb0:	cmc    
  414fb1:	sbb    BYTE PTR [edx],bl
  414fb3:	xor    DWORD PTR [ebx+eax*8-0x3a41ff10],ebx
  414fba:	xchg   edx,eax
  414fbb:	xor    DWORD PTR [edx-0x9adcc8f],ebx
  414fc1:	dec    esp
  414fc2:	adc    bh,BYTE PTR [eax]
  414fc4:	mov    ebp,0xdb77944a
  414fc9:	jmpw   0xaace
  414fcd:	and    DWORD PTR [ecx+eax*2-0x45],esi
  414fd1:	and    cl,ch
  414fd3:	es xor eax,0xb04dceb6
  414fd9:	push   0xc
  414fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fdc:	fst    QWORD PTR [ebx+0x27]
  414fdf:	adc    DWORD PTR [ebp+0x499acceb],edx
  414fe5:	rcl    BYTE PTR [edi-0x19a57745],1
  414feb:	minps  xmm4,XMMWORD PTR [esi+0x74]
  414fef:	les    edi,FWORD PTR [ebx]
  414ff1:	jns    0x415036
  414ff3:	dec    edi
  414ff4:	dec    ecx
  414ff5:	push   ebx
  414ff6:	pushf  
  414ff7:	jno    0x414fe1
  414ff9:	retf   
  414ffa:	mov    ds:0xeace3780,al
  414fff:	or     BYTE PTR [eax+0x1b],cl
  415002:	scas   al,BYTE PTR es:[edi]
  415003:	add    dl,cl
  415005:	mov    cl,0x61
  415007:	xor    eax,0x42bf5ece
  41500c:	mov    es,eax
  41500e:	popa   
  41500f:	mov    bl,0x48
  415011:	jns    0x414f9e
  415013:	add    eax,0x82571657
  415018:	mov    ch,0x7e
  41501a:	jne    0x415028
  41501c:	ret    0x5d
  41501f:	es cwde 
  415021:	das    
  415022:	out    dx,al
  415023:	jmp    0xbe087ec0
  415028:	int3   
  415029:	mov    ds:0xe845906,al
  41502e:	jae    0x415078
  415030:	dec    eax
  415031:	sbb    DWORD PTR [ebx-0x2134727],esi
  415037:	pop    edx
  415038:	xchg   ecx,eax
  415039:	or     esp,esi
  41503b:	jmp    0x414fd5
  41503d:	int3   
  41503e:	cmc    
  41503f:	test   al,0x44
  415041:	mov    edx,0xde9d0030
  415046:	jmp    0x415019
  415048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415049:	mov    cl,0x1d
  41504b:	adc    BYTE PTR [eax+0x5fc02434],cl
  415051:	add    edx,DWORD PTR [ecx-0x3c28f366]
  415057:	xchg   esi,eax
  415058:	out    0xcd,eax
  41505a:	or     esi,DWORD PTR [eax]
  41505c:	pop    ds
  41505d:	addr16 lock add al,0xb
  415061:	inc    ecx
  415062:	cmp    BYTE PTR [ebp+0x241c790d],ah
  415068:	mov    dh,al
  41506a:	scas   al,BYTE PTR es:[edi]
  41506b:	mov    ds:0x145a6bfe,eax
  415070:	adc    ecx,esi
  415072:	mov    ax,ds:0xb8c7e0f5
  415078:	push   ebx
  415079:	mov    ds:0xb2ffdc0d,eax
  41507e:	xor    eax,0xc69edd84
  415083:	ins    BYTE PTR es:[edi],dx
  415084:	daa    
  415085:	sbb    al,0x33
  415087:	loopne 0x415032
  415089:	sbb    eax,0x38c38243
  41508e:	fwait
  41508f:	(bad)  
  415090:	mov    cl,0x23
  415092:	or     dl,dl
  415094:	push   0x3d69b5f2
  415099:	int3   
  41509a:	inc    edi
  41509b:	mov    edi,0x66c85d52
  4150a0:	shr    al,1
  4150a2:	push   ds
  4150a3:	call   0xa7a6:0x80f42399
  4150aa:	jmp    0x41505c
  4150ac:	mov    cl,0x64
  4150ae:	fadd   DWORD PTR [ebx]
  4150b0:	arpl   WORD PTR [ebx-0x37a39f1b],cx
  4150b6:	ja     0x4150ba
  4150b8:	lea    eax,[esi+ecx*1]
  4150bb:	mov    cl,0x60
  4150bd:	(bad)
  4150c0:	pop    esp
  4150c1:	fiadd  WORD PTR [eax-0x6d]
  4150c4:	(bad)  
  4150c5:	data16 cld 
  4150c7:	pop    ebx
  4150c8:	add    BYTE PTR [eax+0xe],dl
  4150cb:	push   edi
  4150cc:	inc    edx
  4150cd:	jp     0x4150a4
  4150cf:	rol    DWORD PTR [edx+ebx*4],cl
  4150d2:	cwde   
  4150d3:	in     eax,0x11
  4150d5:	mov    ss,WORD PTR ds:0xe0e29a15
  4150db:	push   esi
  4150dc:	add    DWORD PTR [ebp-0x50e00645],0xffffffb1
  4150e3:	dec    edx
  4150e4:	out    dx,al
  4150e5:	enter  0xe957,0xd6
  4150e9:	and    eax,0x9437aed1
  4150ee:	pop    edi
  4150ef:	mov    al,ds:0xdad45566
  4150f4:	cdq    
  4150f5:	call   0xe79b:0x2ba828
  4150fc:	outs   dx,DWORD PTR ds:[esi]
  4150fd:	test   DWORD PTR [eax+0x46],ebx
  415100:	and    al,0xf8
  415102:	add    BYTE PTR [eax+esi*2],0xb3
  415106:	call   ebp
  415108:	shr    DWORD PTR [esi-0x57],1
  41510b:	inc    ebx
  41510c:	inc    edi
  41510d:	cmp    eax,0x96cc2a2a
  415112:	rcl    DWORD PTR ds:0xc4383a8d,1
  415118:	popf   
  415119:	add    ecx,DWORD PTR [ebx]
  41511b:	and    DWORD PTR [edx-0x7],ebp
  41511e:	push   ebp
  41511f:	pushf  
  415120:	rcr    eax,1
  415122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415123:	fmul   st(3),st
  415125:	fidiv  DWORD PTR [ebp+0x7181d8b6]
  41512b:	add    eax,0x6511031e
  415130:	jl     0x4151a6
  415132:	mov    bl,0x5b
  415134:	jne    0x41519e
  415136:	iret   
  415137:	adc    eax,0x1243074c
  41513c:	sbb    dl,BYTE PTR [ecx]
  41513e:	les    edx,FWORD PTR [eax-0x38]
  415141:	xor    BYTE PTR cs:[edx-0x3d],bh
  415145:	jg     0x4151aa
  415147:	dec    eax
  415148:	mov    eax,ds:0x48ad3e53
  41514d:	inc    ebp
  41514e:	nop
  41514f:	jnp    0x4150e6
  415151:	lock jno 0x4150d6
  415154:	push   0x71
  415156:	inc    ecx
  415157:	data16 aaa 
  415159:	and    bl,0x82
  41515c:	mov    ecx,0x1b1d7010
  415161:	pop    ss
  415162:	mov    cl,0x28
  415164:	jnp    0x4151db
  415166:	loop   0x415150
  415168:	adc    cl,BYTE PTR [ebx+0x4108228]
  41516e:	sti    
  41516f:	pop    esp
  415170:	cmp    eax,0x8165cfdc
  415175:	ret    
  415176:	int    0x20
  415178:	cmp    eax,0x14d29608
  41517d:	adc    eax,0xae9488cc
  415182:	xor    esi,DWORD PTR [edx]
  415184:	cdq    
  415185:	nop
  415186:	in     al,0x1b
  415188:	and    BYTE PTR [ebx+0x103612b1],0xc3
  41518f:	aam    0x3d
  415191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415192:	(bad)  
  415193:	cmp    al,0xb1
  415195:	enter  0x56e,0xec
  415199:	sub    eax,0xb8067dd8
  41519e:	sub    al,0xa2
  4151a0:	outs   dx,DWORD PTR ds:[esi]
  4151a1:	jno    0x415181
  4151a3:	fcmovu st,st(7)
  4151a5:	xor    ebp,ecx
  4151a7:	pop    ds
  4151a8:	aaa    
  4151a9:	add    BYTE PTR [ebx-0x5490ac88],dl
  4151af:	cs xchg ecx,eax
  4151b1:	popf   
  4151b2:	scas   al,BYTE PTR es:[edi]
  4151b3:	in     al,dx
  4151b4:	je     0x415138
  4151b6:	xor    edx,DWORD PTR [eax-0xa686841]
  4151bc:	jmp    0xc30f5f5
  4151c1:	cli    
  4151c2:	(bad)  
  4151c3:	ins    DWORD PTR es:[edi],dx
  4151c4:	repz dec esp
  4151c6:	and    BYTE PTR [ebp-0x4262f088],cl
  4151cc:	sbb    esi,0xffffffa0
  4151cf:	sub    dh,BYTE PTR [eax+0x1b]
  4151d2:	pop    esi
  4151d3:	pop    ebx
  4151d4:	inc    ebp
  4151d5:	aas    
  4151d6:	mov    esi,eax
  4151d8:	ins    DWORD PTR es:[edi],dx
  4151d9:	aam    0xbb
  4151db:	outs   dx,BYTE PTR ds:[esi]
  4151dc:	pop    ebp
  4151dd:	hlt    
  4151de:	mov    ds:0x38bb7bc5,al
  4151e3:	pop    esi
  4151e4:	loop   0x41517a
  4151e6:	les    esp,FWORD PTR [ebp-0x4d4d77b0]
  4151ec:	das    
  4151ed:	xor    eax,0x8a470f56
  4151f2:	push   esp
  4151f3:	push   0x1d
  4151f5:	das    
  4151f6:	test   eax,0x33cde208
  4151fb:	mov    ebx,0x558ad28c
  415200:	cmp    DWORD PTR [esi],ebx
  415202:	test   DWORD PTR [esi-0x1862b732],esp
  415208:	jp     0x4151e0
  41520a:	mov    cl,0x85
  41520c:	scas   al,BYTE PTR es:[edi]
  41520d:	or     al,0xbe
  41520f:	test   al,0x3e
  415211:	addr16 mov esi,0x49758233
  415217:	leave  
  415218:	pop    ss
  415219:	mov    gs,WORD PTR [esp+eax*2]
  41521c:	outs   dx,BYTE PTR ds:[esi]
  41521d:	repnz mov ds:0xb32ab72e,eax
  415223:	sub    bl,bl
  415225:	(bad)  
  415226:	adc    eax,0x35351995
  41522b:	jmp    0x4151e7
  41522d:	bound  edi,QWORD PTR [ebx+0x574eff18]
  415233:	or     DWORD PTR [ebx],0xa638cfba
  415239:	push   edi
  41523a:	in     eax,dx
  41523b:	imul   ebp,DWORD PTR [edi],0x433a69ce
  415241:	fild   DWORD PTR [ebx+0x77661980]
  415247:	and    al,0xe6
  415249:	lods   eax,DWORD PTR ds:[esi]
  41524a:	(bad)  
  41524b:	xchg   esi,eax
  41524c:	mov    dh,dl
  41524e:	pop    edi
  41524f:	jo     0x4152a6
  415251:	inc    eax
  415252:	out    dx,al
  415253:	mov    ebp,0x767534bf
  415258:	je     0x4151f4
  41525a:	fwait
  41525b:	loopne 0x415227
  41525d:	rcl    BYTE PTR [edi-0x70a40668],cl
  415263:	dec    eax
  415264:	lea    esp,[edi]
  415266:	int3   
  415267:	sbb    dh,BYTE PTR [edi+0x38]
  41526a:	mov    ebp,0x7acaafb3
  41526f:	js     0x415251
  415271:	mov    bh,0x58
  415273:	and    esi,eax
  415275:	out    0x34,al
  415277:	push   0x22
  415279:	or     ebp,DWORD PTR [edi]
  41527b:	add    eax,0x5f77ccc5
  415280:	mov    cl,0xa8
  415282:	or     eax,0x7be1686c
  415287:	xchg   BYTE PTR [ebx],bl
  415289:	jmp    0x415277
  41528b:	imul   ebx,DWORD PTR [eax+0x7e39d882],0xc42fa941
  415295:	push   edx
  415296:	call   0x1b4e:0xc7614182
  41529d:	js     0x415301
  41529f:	test   BYTE PTR [esi],bh
  4152a1:	leave  
  4152a2:	dec    eax
  4152a3:	mov    eax,0x9252b250
  4152a8:	call   0x2ffdbb58
  4152ad:	adc    ch,dl
  4152af:	cs xor eax,0x98772ba8
  4152b5:	loopne 0x4152f7
  4152b7:	cmp    BYTE PTR [edx+0x34],bl
  4152ba:	fbld   TBYTE PTR [edx-0x12]
  4152bd:	inc    esp
  4152be:	pop    esp
  4152bf:	jne    0x415271
  4152c1:	inc    edx
  4152c2:	loop   0x4152c4
  4152c4:	test   eax,0x35cc3da6
  4152c9:	dec    edi
  4152ca:	add    bh,ah
  4152cc:	bound  eax,QWORD PTR [eax-0x14fecfad]
  4152d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d3:	retf   0x3ba
  4152d6:	mov    ecx,0xdb2b2588
  4152db:	mov    cl,0x8c
  4152dd:	mov    ch,0x9d
  4152df:	loope  0x415320
  4152e1:	xchg   ebp,eax
  4152e2:	and    DWORD PTR [esp+ebx*2],esp
  4152e5:	outs   dx,DWORD PTR ds:[esi]
  4152e6:	bound  esi,QWORD PTR [edx-0x77e11e9c]
  4152ec:	adc    eax,0x42f823e1
  4152f1:	test   DWORD PTR ds:0x230e9a81,ecx
  4152f7:	repz ffreep st(6)
  4152fa:	jge    0x4152ad
  4152fc:	or     DWORD PTR [ebx],edx
  4152fe:	shl    esp,1
  415300:	mov    edx,0x385c594
  415305:	sub    BYTE PTR [eax-0x50852ea8],dh
  41530b:	push   esp
  41530c:	in     eax,dx
  41530d:	sub    eax,0x97d835d0
  415312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415313:	bound  ecx,QWORD PTR [edi+0x1f]
  415316:	jecxz  0x415383
  415318:	pop    edx
  415319:	sbb    al,0x31
  41531b:	jmp    0x415334
  41531d:	pop    eax
  41531e:	aas    
  41531f:	dec    edx
  415320:	ror    DWORD PTR [edx+0x22b0dc51],0x5c
  415327:	scas   eax,DWORD PTR es:[edi]
  415328:	jge    0x415326
  41532a:	je     0x4152c5
  41532c:	es lahf 
  41532e:	(bad)  
  415330:	push   cs
  415331:	ja     0x4153b2
  415333:	xor    bh,BYTE PTR ds:0xff87dd3
  415339:	push   edi
  41533a:	xchg   esi,eax
  41533b:	pop    edx
  41533c:	mov    edx,eax
  41533e:	aas    
  41533f:	cli    
  415340:	or     DWORD PTR [ebp*4+0x559b1ad2],0x56ae2131
  41534b:	sub    esi,DWORD PTR [ebp+0x40]
  41534e:	and    DWORD PTR [edx],ebx
  415350:	sbb    dh,dh
  415352:	mov    dh,0x6f
  415354:	fstp   DWORD PTR [edx+eax*4+0x22b8c413]
  41535b:	pop    esi
  41535c:	pop    ebx
  41535d:	mov    BYTE PTR [edx-0x393aa013],al
  415363:	cmp    ah,BYTE PTR [ebx+0x22]
  415366:	ins    BYTE PTR es:[edi],dx
  415367:	in     al,dx
  415368:	mov    es,WORD PTR [edi]
  41536a:	and    bl,dl
  41536c:	push   ebp
  41536d:	sub    ch,BYTE PTR [ebx]
  41536f:	xchg   ebp,eax
  415370:	adc    eax,0x1453ca1
  415375:	(bad)  
  415376:	imul   DWORD PTR [edx-0x4268f676]
  41537c:	xchg   esp,eax
  41537d:	xor    ah,BYTE PTR [ebp+0x2b1b006a]
  415383:	xchg   DWORD PTR [edx],edx
  415385:	fs jecxz 0x415352
  415388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415389:	test   BYTE PTR [eax+0x27],al
  41538c:	mov    edx,0x44240997
  415391:	jne    0x4153af
  415393:	pop    esp
  415394:	cmp    al,0xae
  415396:	or     DWORD PTR [eax+0x3f],eax
  415399:	inc    esi
  41539a:	sub    ebp,DWORD PTR [esi+0x15]
  41539d:	loop   0x415358
  41539f:	mov    bh,0x19
  4153a1:	push   edi
  4153a2:	ret    
  4153a3:	test   eax,0x6ab08279
  4153a8:	push   es
  4153a9:	pop    ecx
  4153aa:	inc    ebp
  4153ab:	imul   eax,ebp,0x49197728
  4153b1:	sub    dh,BYTE PTR [eax]
  4153b3:	jge    0x4153c7
  4153b5:	jecxz  0x4153d3
  4153b7:	adc    BYTE PTR [edi],dh
  4153b9:	pop    ds
  4153ba:	or     ch,BYTE PTR [ebp-0x21]
  4153bd:	in     al,0x36
  4153bf:	inc    esp
  4153c0:	loope  0x4153f0
  4153c2:	dec    ebp
  4153c3:	jp     0x41537a
  4153c5:	loope  0x41540a
  4153c7:	jbe    0x415365
  4153c9:	not    BYTE PTR [esi]
  4153cb:	in     eax,dx
  4153cc:	and    ah,ah
  4153ce:	and    cl,BYTE PTR ds:0x3c660a33
  4153d4:	jg     0x41543d
  4153d6:	jb     0x4153d4
  4153d8:	adc    esp,edi
  4153da:	test   al,0x79
  4153dc:	mov    bh,0xeb
  4153de:	(bad)  
  4153df:	pop    esp
  4153e0:	mov    edx,0x8ad706fd
  4153e5:	stos   BYTE PTR es:[edi],al
  4153e6:	pusha  
  4153e7:	add    al,0x50
  4153e9:	jae    0x4153c8
  4153eb:	loopne 0x41536f
  4153ed:	mov    ebp,0x67dc46b7
  4153f2:	jecxz  0x4153f7
  4153f4:	add    BYTE PTR [edx],bh
  4153f6:	mov    WORD PTR [eax+0x17],gs
  4153f9:	xchg   ebx,eax
  4153fa:	cdq    
  4153fb:	lods   al,BYTE PTR ds:[esi]
  4153fc:	and    al,0x29
  4153fe:	test   BYTE PTR [ecx-0x1a40809a],bl
  415404:	(bad)  
  415405:	int    0xde
  415407:	push   ebp
  415408:	push   ds
  415409:	cdq    
  41540a:	mov    ebx,0x17c62e0c
  41540f:	sbb    al,0xb1
  415411:	mov    DWORD PTR [edx],0xf1d7dc79
  415417:	lea    ecx,[esi]
  415419:	jno    0x4153ec
  41541b:	addr16 in eax,dx
  41541d:	retf   0x4d85
  415420:	jno    0x415401
  415422:	dec    edx
  415423:	inc    edi
  415424:	jmp    0x15e4c3e0
  415429:	ret    
  41542a:	aad    0x96
  41542c:	int3   
  41542d:	(bad)  
  41542e:	out    dx,eax
  41542f:	jno    0x41542e
  415431:	fwait
  415432:	xlat   BYTE PTR ds:[ebx]
  415433:	bound  edi,QWORD PTR [ecx]
  415435:	mov    ch,BYTE PTR [ebx+esi*1]
  415438:	jp     0x415403
  41543a:	(bad)  
  41543b:	inc    ebx
  41543c:	mov    ebx,0xf2e1ac7f
  415441:	ins    DWORD PTR es:[edi],dx
  415442:	in     al,dx
  415443:	loop   0x4154b3
  415445:	cmp    BYTE PTR [ebx+0x5c04dd9a],dl
  41544b:	cmp    eax,0x3edf2968
  415450:	mov    BYTE PTR [ebx+eiz*4],dh
  415453:	rcl    cl,cl
  415455:	dec    esp
  415456:	pop    ebx
  415457:	add    eax,0xb6586e8f
  41545c:	int    0xae
  41545e:	xor    DWORD PTR [esi+0x19],ebp
  415461:	xor    al,0x18
  415463:	int    0x86
  415465:	test   eax,0xa71a1f54
  41546a:	out    dx,al
  41546b:	test   eax,0x105292b7
  415470:	dec    ebx
  415471:	ds js  0x4154c2
  415474:	push   esp
  415475:	cmp    ebx,DWORD PTR [edi-0x6249686b]
  41547b:	(bad)  
  41547c:	sti    
  41547d:	pop    ebp
  41547e:	xor    ah,BYTE PTR [ebx+0x7200ef0e]
  415484:	sub    ebx,DWORD PTR [ebx+0x1d]
  415487:	push   esp
  415488:	xor    eax,0xe09966d2
  41548d:	jmp    FWORD PTR [esi]
  41548f:	fsubr  DWORD PTR [esi]
  415491:	pop    esi
  415492:	adc    BYTE PTR cs:[edi],dl
  415495:	add    DWORD PTR [ebx-0x3ba8312b],ecx
  41549b:	stc    
  41549c:	pop    ebp
  41549d:	aaa    
  41549e:	mov    cl,0x42
  4154a0:	inc    ebx
  4154a1:	dec    ebx
  4154a2:	push   es
  4154a3:	lds    esp,FWORD PTR [ebx+0x3]
  4154a6:	pop    ebp
  4154a7:	mov    ebx,0xbc7da64d
  4154ac:	inc    eax
  4154ad:	dec    edi
  4154ae:	pusha  
  4154af:	lods   al,BYTE PTR ds:[esi]
  4154b0:	stos   BYTE PTR es:[edi],al
  4154b1:	xor    BYTE PTR [esi-0x2e8be872],dh
  4154b7:	push   edx
  4154b8:	imul   ecx,DWORD PTR [ecx],0xffffffe1
  4154bb:	sti    
  4154bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154bd:	(bad)  
  4154be:	push   ds
  4154bf:	mov    esp,0xe8264c82
  4154c4:	pusha  
  4154c5:	mov    esp,0x654fd091
  4154ca:	and    esi,esp
  4154cc:	xchg   esi,eax
  4154cd:	ffree  st(7)
  4154cf:	jnp    0x4154a1
  4154d1:	scas   al,BYTE PTR es:[edi]
  4154d2:	inc    esi
  4154d3:	pop    eax
  4154d4:	add    eax,edi
  4154d6:	popa   
  4154d7:	inc    edx
  4154d8:	out    0x86,al
  4154da:	mov    esp,0x20c9fd40
  4154df:	jmp    0x53cab02
  4154e4:	ins    BYTE PTR es:[edi],dx
  4154e5:	repnz fmul DWORD PTR [ebx-0x7f]
  4154e9:	loope  0x415497
  4154eb:	fist   WORD PTR [ecx-0x1531a784]
  4154f1:	out    0x4,al
  4154f3:	ja     0x41554a
  4154f5:	lea    ecx,fs:[esi]
  4154f8:	or     ebx,esi
  4154fa:	mov    bl,0x4b
  4154fc:	xchg   edx,eax
  4154fd:	add    al,0xba
  4154ff:	loop   0x41548f
  415501:	sub    BYTE PTR ds:0xc64d2d56,al
  415507:	xchg   DWORD PTR [ebp-0x8],ebp
  41550a:	out    0xc3,al
  41550c:	pop    edi
  41550d:	and    al,0xd0
  41550f:	dec    ebx
  415510:	xchg   BYTE PTR [edi+0x16],ch
  415513:	mov    eax,DWORD PTR [esi+0x7d137e04]
  415519:	pop    esi
  41551a:	jmp    0x67eb789
  41551f:	(bad)  
  415520:	mov    ecx,0x72eb5aac
  415525:	mov    al,0x1a
  415527:	lods   al,BYTE PTR ds:[esi]
  415528:	int3   
  415529:	mov    esi,DWORD PTR [ebx+0x1f8621f3]
  41552f:	jo     0x415582
  415531:	aaa    
  415532:	fsub   DWORD PTR [edx]
  415534:	std    
  415535:	or     eax,DWORD PTR [edx]
  415537:	push   edi
  415538:	xchg   ecx,eax
  415539:	pop    esp
  41553a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41553b:	adc    eax,0x5c2d7f20
  415540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415541:	outs   dx,BYTE PTR ds:[esi]
  415542:	jmp    0xc92b67b4
  415547:	fimul  WORD PTR [edi+0x5d]
  41554a:	inc    ecx
  41554b:	push   es
  41554c:	into   
  41554d:	jns    0x415538
  41554f:	call   0xf7b8:0x75bce54c
  415556:	push   eax
  415557:	push   0xe4f67ed8
  41555c:	xchg   edx,eax
  41555d:	mov    ecx,ss
  41555f:	mov    dh,0xdc
  415561:	pop    eax
  415562:	out    0xa9,eax
  415564:	(bad)  
  415566:	hlt    
  415567:	inc    edx
  415568:	push   eax
  415569:	and    al,0x88
  41556b:	or     DWORD PTR [edi-0x4e],esi
  41556e:	or     eax,0x6e92e900
  415573:	bound  edx,QWORD PTR [edi-0x15]
  415576:	test   BYTE PTR [edx-0x4008a144],ch
  41557c:	xchg   edi,eax
  41557d:	or     DWORD PTR [ebp+0x3de388c],esi
  415583:	in     eax,0xb7
  415585:	mov    al,0x4e
  415587:	cld    
  415588:	and    al,al
  41558a:	call   0x3f50:0x9f6dde0a
  415591:	add    bh,BYTE PTR [ebx+0x6e3236a1]
  415597:	mov    dh,0xea
  415599:	out    0x6a,eax
  41559b:	aaa    
  41559c:	mov    ebp,0x77b53c0f
  4155a1:	gs jnp 0x415620
  4155a4:	loopne 0x415532
  4155a6:	sbb    eax,0x5124baa5
  4155ab:	frstor [ebx+eiz*4+0x14]
  4155af:	ja     0x4155f0
  4155b1:	gs cmp cl,dl
  4155b4:	popf   
  4155b5:	xchg   esi,eax
  4155b6:	jp     0x4155cc
  4155b8:	push   0xb6063fd1
  4155bd:	out    dx,al
  4155be:	lock sub al,0xe7
  4155c1:	ds push edx
  4155c3:	xchg   esp,eax
  4155c4:	data16 mov bh,bl
  4155c7:	call   0x6fbb:0x68b44a8e
  4155ce:	sbb    dl,BYTE PTR [ecx]
  4155d0:	repz dec esp
  4155d2:	push   0x66d8d7a0
  4155d7:	push   esi
  4155d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d9:	add    DWORD PTR [esi-0x7c],edx
  4155dc:	mov    cl,0x37
  4155de:	dec    esp
  4155df:	inc    edi
  4155e0:	loop   0x4155c8
  4155e2:	fs jle 0x41563e
  4155e5:	mov    cl,0x2a
  4155e7:	mov    ds:0x2b8377d1,eax
  4155ec:	retf   
  4155ed:	loop   0x4155dd
  4155ef:	cmp    BYTE PTR [ecx-0x46],ch
  4155f2:	stos   DWORD PTR es:[edi],eax
  4155f3:	std    
  4155f4:	hlt    
  4155f5:	lahf   
  4155f6:	mov    al,ds:0x4deb8227
  4155fb:	iret   
  4155fc:	push   ds
  4155fd:	xor    eax,0xe48d87e8
  415602:	sub    DWORD PTR [edx],esi
  415604:	daa    
  415605:	je     0x4155ea
  415607:	ins    BYTE PTR es:[edi],dx
  415608:	pop    es
  415609:	stc    
  41560a:	xor    ecx,esi
  41560c:	not    BYTE PTR [esi+edx*8]
  41560f:	sub    cl,ah
  415611:	aas    
  415612:	daa    
  415613:	call   0x5760:0xb4dac3f2
  41561a:	jp     0x4155b6
  41561c:	out    dx,al
  41561d:	mov    esp,0x21bf815
  415622:	pop    edi
  415623:	int3   
  415624:	sub    esi,edx
  415626:	cmp    bh,BYTE PTR [ebx]
  415628:	(bad)  
  415629:	or     al,0x8b
  41562b:	ror    BYTE PTR [eax+eax*8-0xe],0xbf
  415630:	adc    BYTE PTR [ebx],cl
  415632:	call   0xbb8e:0x1257bc92
  415639:	cmp    al,0xdc
  41563b:	ja     0x4156bc
  41563d:	aaa    
  41563e:	mov    bl,ah
  415640:	mov    esp,0x798888f3
  415645:	bound  edx,QWORD PTR [ebx+0x5c]
  415648:	mov    cl,0x3f
  41564a:	pop    eax
  41564b:	int3   
  41564c:	aad    0x1d
  41564e:	(bad)  [esp+eax*8]
  415651:	mov    bl,0xbf
  415653:	ins    DWORD PTR es:[edi],dx
  415654:	sbb    edi,eax
  415656:	xlat   BYTE PTR ds:[ebx]
  415657:	ss mov bl,0x10
  41565a:	dec    ebp
  41565b:	jne    0x4156b3
  41565d:	movd   DWORD PTR [ebx],mm6
  415660:	repnz push eax
  415662:	repz rol BYTE PTR [ecx-0x3605468],1
  415669:	shl    BYTE PTR [edi+edi*4],0xda
  41566d:	cmp    al,0xab
  41566f:	es cmp al,0x21
  415672:	cmp    al,0x2d
  415674:	xchg   ecx,eax
  415675:	jmp    FWORD PTR [esi+0x6]
  415678:	pop    ecx
  415679:	fimul  WORD PTR [esi+ebp*8+0x5c]
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567f:	iret   
  415680:	mov    ebp,0x4d7b37e8
  415685:	mov    DWORD PTR [edx],esp
  415687:	inc    ebx
  415688:	mov    edi,edi
  41568a:	pop    ebp
  41568b:	rcr    edi,0x80
  41568e:	retf   
  41568f:	arpl   WORD PTR ds:0xefb969e3,si
  415695:	fstp   TBYTE PTR [esi-0x44474efc]
  41569b:	test   DWORD PTR [edx-0x1680a612],eax
  4156a1:	ret    
  4156a2:	jnp    0x415719
  4156a4:	not    BYTE PTR [esi-0x29]
  4156a7:	mov    ebp,0x8c8376eb
  4156ac:	mov    edi,0xce750991
  4156b1:	sub    BYTE PTR [edi-0x73],ah
  4156b4:	ret    
  4156b5:	mov    ah,0x45
  4156b7:	cld    
  4156b8:	adc    dl,BYTE PTR [edx]
  4156ba:	scas   eax,DWORD PTR es:[edi]
  4156bb:	dec    eax
  4156bc:	mov    ds:0x8bf2f5c3,al
  4156c1:	test   eax,0xafea7d1a
  4156c6:	cmc    
  4156c7:	pop    ss
  4156c8:	aad    0x5d
  4156ca:	outs   dx,DWORD PTR ds:[esi]
  4156cb:	imul   ebp,DWORD PTR [ebp+0x40],0xffffffed
  4156cf:	cwde   
  4156d0:	jbe    0x415663
  4156d2:	out    0xa5,al
  4156d4:	fild   DWORD PTR [eax+edx*2-0x1c]
  4156d8:	out    dx,eax
  4156d9:	aam    0xb7
  4156db:	out    dx,eax
  4156dc:	mov    eax,ds:0x686527f9
  4156e1:	sub    edi,edi
  4156e3:	pop    eax
  4156e4:	(bad)  
  4156e5:	xchg   ebx,eax
  4156e6:	mov    edx,0xee7fbb70
  4156eb:	adc    BYTE PTR [ecx],0x93
  4156ee:	fstp   DWORD PTR [eax+edi*8]
  4156f1:	push   ecx
  4156f2:	aad    0xc1
  4156f4:	or     al,0x28
  4156f6:	mov    bl,0xa5
  4156f8:	(bad)  
  4156f9:	clc    
  4156fa:	mov    eax,0x8db81f9b
  4156ff:	adc    al,0xe1
  415701:	xor    eax,0x79684183
  415706:	fmul   QWORD PTR ds:[edi]
  415709:	iret   
  41570a:	mov    ebp,0xf6b618a0
  41570f:	(bad)  
  415710:	xchg   DWORD PTR [esi+eiz*8],eax
  415713:	inc    edx
  415714:	inc    edx
  415715:	sbb    DWORD PTR [ebp+0x73],0xffffffe4
  415719:	ret    0xa621
  41571c:	mov    ebp,0x8fa207ff
  415721:	pop    es
  415722:	push   es
  415723:	retf   0x92c7
  415726:	xor    DWORD PTR [esi-0x67],ebp
  415729:	rcl    BYTE PTR [esi+eax*1-0x51],1
  41572d:	repz scas al,BYTE PTR es:[edi]
  41572f:	sbb    al,0xb3
  415731:	mov    dl,0xeb
  415733:	inc    edi
  415734:	xor    al,0xc1
  415736:	js     0x4156c4
  415738:	sahf   
  415739:	sti    
  41573a:	out    dx,al
  41573b:	mov    dh,0x3d
  41573d:	xchg   edi,eax
  41573e:	mov    cl,0xf
  415740:	mov    dh,BYTE PTR [edi+edx*2-0x4ae122c0]
  415747:	js     0x41570f
  415749:	or     eax,0x893afdf0
  41574e:	popf   
  41574f:	push   ebp
  415750:	nop
  415751:	dec    edi
  415752:	adc    eax,0x2ad75dbe
  415757:	cwde   
  415758:	aam    0xcf
  41575a:	pop    ebx
  41575b:	inc    ecx
  41575c:	call   0x8366:0x3be201a7
  415763:	in     eax,0x82
  415765:	mov    eax,ds:0x6c136597
  41576a:	adc    al,BYTE PTR [eax+0x7a]
  41576d:	jae    0x4157a0
  41576f:	dec    edx
  415770:	cdq    
  415771:	sbb    eax,DWORD PTR [ebx]
  415773:	jge    0x415701
  415775:	out    0x92,eax
  415777:	dec    ebx
  415778:	sbb    bl,BYTE PTR [ebp+0x49]
  41577b:	xchg   edi,eax
  41577c:	lea    ecx,[edi]
  41577e:	push   es
  41577f:	sbb    DWORD PTR [ecx+0x43],edx
  415782:	sbb    al,BYTE PTR [ebp-0x8]
  415785:	or     eax,0x833caaf1
  41578a:	es mov dh,0xe3
  41578d:	pop    ecx
  41578e:	test   al,0xee
  415790:	ds out 0xa8,al
  415793:	mov    bh,BYTE PTR [ebx]
  415795:	push   es
  415796:	loope  0x415761
  415798:	loop   0x41577d
  41579a:	adc    cl,BYTE PTR [ebp-0x60]
  41579d:	push   ss
  41579e:	push   edx
  41579f:	out    dx,al
  4157a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a1:	jl     0x4157de
  4157a3:	aam    0xc
  4157a5:	outs   dx,BYTE PTR ds:[esi]
  4157a6:	adc    DWORD PTR [edx-0x34be8e6c],esi
  4157ac:	ss push 0x7a247b07
  4157b2:	push   esi
  4157b3:	lods   eax,DWORD PTR ds:[esi]
  4157b4:	ds repnz cwde 
  4157b7:	mov    dl,0xdd
  4157b9:	add    ecx,DWORD PTR [eax+0x7d]
  4157bc:	gs sub ecx,0x3e8b4a8c
  4157c3:	pop    esi
  4157c4:	out    0x9a,al
  4157c6:	and    DWORD PTR [ecx],edx
  4157c8:	stos   BYTE PTR es:[edi],al
  4157c9:	int3   
  4157ca:	xchg   esi,eax
  4157cb:	fs mov edx,0x101e8786
  4157d1:	sbb    al,0xe0
  4157d3:	loopne 0x415779
  4157d5:	xchg   edi,eax
  4157d6:	mov    esp,esp
  4157d8:	xor    cl,BYTE PTR [eax-0x1]
  4157db:	mov    ch,0xaf
  4157dd:	xchg   ecx,eax
  4157de:	and    esi,ebx
  4157e0:	push   esp
  4157e1:	xor    ch,BYTE PTR ds:[ecx+0x3a]
  4157e5:	add    al,0xd5
  4157e7:	xchg   ebp,eax
  4157e8:	imul   edx,DWORD PTR [eax-0x3d5303c1],0x1df7c1bb
  4157f2:	ret    
  4157f3:	add    ah,BYTE PTR [esi+0x387ddefb]
  4157f9:	das    
  4157fa:	jle    0x4157a3
  4157fc:	in     eax,dx
  4157fd:	inc    esi
  4157fe:	call   0xfdfc0645
  415803:	add    BYTE PTR [ebx],dh
  415805:	fnsave [ecx-0x6f]
  415808:	ret    
  415809:	iret   
  41580a:	or     al,BYTE PTR [eax-0x27]
  41580d:	sub    edx,esi
  41580f:	nop
  415810:	ret    0xa4eb
  415813:	test   DWORD PTR [ebx+esi*8+0x36],ebx
  415817:	sbb    edi,DWORD PTR [eax]
  415819:	adc    eax,0x958ec85d
  41581e:	xchg   esi,eax
  41581f:	adc    DWORD PTR [eax+esi*1+0x2ac061d8],edi
  415826:	mov    ds:0x11a9692,eax
  41582b:	sub    al,0x7b
  41582d:	cmp    eax,0xd35a9126
  415832:	js     0x41585c
  415834:	mov    ch,0x56
  415836:	out    0xb,al
  415838:	xor    eax,0xd68f59e9
  41583d:	sub    ebx,DWORD PTR [esi-0x2a]
  415840:	fdivr  DWORD PTR [esi+0x3b]
  415843:	fmul   QWORD PTR [ebp+0xe]
  415846:	or     DWORD PTR [edx],ebp
  415848:	cmp    cl,dl
  41584a:	gs (bad) 
  41584c:	fcomp  DWORD PTR [edi-0x1f20aaed]
  415852:	cs pop esp
  415854:	jae    0x415823
  415856:	jbe    0x415844
  415858:	(bad)  [edi-0x1a]
  41585b:	inc    edi
  41585c:	lods   al,BYTE PTR ds:[esi]
  41585d:	mov    ds:0x7a1d5135,eax
  415862:	int    0x6a
  415864:	jne    0x415851
  415866:	mov    bh,0xb4
  415868:	add    eax,0x63e9d6be
  41586d:	(bad)  
  41586e:	icebp  
  41586f:	cmp    al,0x77
  415871:	pop    ebp
  415872:	outs   dx,BYTE PTR ds:[esi]
  415873:	sub    al,0xcc
  415875:	pop    esp
  415876:	pop    es
  415877:	imul   ebp,DWORD PTR [edx+0x51],0x63
  41587b:	push   ss
  41587c:	xor    eax,0x3562f0ec
  415881:	push   cs
  415882:	adc    DWORD PTR [edi],edx
  415884:	nop
  415885:	(bad)  
  415886:	inc    BYTE PTR [eax]
  415888:	mov    ds:0xaf7b63a0,eax
  41588d:	jge    0x4158ca
  41588f:	sbb    BYTE PTR [ecx],cl
  415891:	aaa    
  415892:	mov    ebx,0x6feb900c
  415897:	dec    ebp
  415898:	push   cs
  415899:	retf   
  41589a:	lahf   
  41589b:	mov    ds:0xfda5e74e,eax
  4158a0:	push   esi
  4158a1:	mov    bh,0xf7
  4158a3:	adc    al,0x5a
  4158a5:	enter  0x2229,0x25
  4158a9:	mov    ecx,0x48ea196a
  4158ae:	pop    ecx
  4158af:	inc    esi
  4158b0:	imul   ebp,DWORD PTR [edx],0xffffffc8
  4158b3:	push   0xb8618d3c
  4158b8:	jecxz  0x4158b9
  4158ba:	rcl    dl,0xb4
  4158bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158be:	and    dh,al
  4158c0:	jle    0x41586a
  4158c2:	rol    BYTE PTR [ebx+0x7fcfb6d0],1
  4158c8:	test   DWORD PTR [ecx-0x5c],edi
  4158cb:	ja     0x41592c
  4158cd:	jl     0x415893
  4158cf:	push   ss
  4158d0:	cli    
  4158d1:	sbb    eax,eax
  4158d3:	sub    DWORD PTR [edi+0x18f5823c],ecx
  4158d9:	scas   al,BYTE PTR es:[edi]
  4158da:	ja     0x415954
  4158dc:	test   DWORD PTR fs:[ecx+ecx*2-0x6e],esp
  4158e1:	xchg   esi,eax
  4158e2:	stos   BYTE PTR es:[edi],al
  4158e3:	mov    dh,0x28
  4158e5:	xchg   ebp,eax
  4158e6:	enter  0xe83b,0xbd
  4158ea:	mov    ds:0x88931a49,eax
  4158ef:	enter  0xcce,0xb9
  4158f3:	imul   esp,DWORD PTR [eax+0x7],0xa1b6a446
  4158fa:	sbb    bl,al
  4158fc:	in     al,dx
  4158fd:	int    0x6c
  4158ff:	jg     0x41591a
  415901:	hlt    
  415902:	mov    BYTE PTR ds:0x38573610,bh
  415908:	enter  0x16d8,0x1d
  41590c:	xor    eax,0x7dee4bcf
  415911:	xlat   BYTE PTR ds:[ebx]
  415912:	daa    
  415913:	and    bh,BYTE PTR [ebx]
  415915:	arpl   WORD PTR [esi],si
  415917:	mov    DWORD PTR [edi+ecx*8+0xd3cd79c],ebp
  41591e:	adc    DWORD PTR [edi],esp
  415920:	fst    DWORD PTR [esi+0x1d08fd3b]
  415926:	icebp  
  415927:	pusha  
  415928:	and    ecx,DWORD PTR [edx]
  41592a:	inc    ebx
  41592b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592c:	repnz clc 
  41592e:	cmp    eax,0xcdaddd79
  415933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415934:	sub    esp,DWORD PTR [esi+0x64e7cc22]
  41593a:	and    eax,0x44742ea0
  41593f:	push   0x7f
  415941:	in     eax,0x46
  415943:	pop    ecx
  415944:	aam    0xeb
  415946:	jge    0x415927
  415948:	fisttp WORD PTR [edx]
  41594a:	popa   
  41594b:	fistp  WORD PTR [eax]
  41594d:	sbb    eax,0xa9a621fc
  415952:	jae    0x415984
  415954:	push   eax
  415955:	cmp    al,0x82
  415957:	stos   DWORD PTR es:[edi],eax
  415958:	aad    0xad
  41595a:	push   edi
  41595b:	mov    edx,0x5a71f3a3
  415960:	and    al,0xd8
  415962:	test   al,0x8c
  415964:	xchg   esp,eax
  415965:	mov    BYTE PTR [edi-0x760f8f91],bh
  41596b:	nop
  41596c:	(bad)  
  41596d:	push   edx
  41596e:	vmaxps xmm5,xmm6,xmm1
  415972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415973:	loopne 0x41593f
  415975:	scas   al,BYTE PTR es:[edi]
  415976:	xchg   ebx,eax
  415977:	mov    ebp,0xecaedcd
  41597c:	test   BYTE PTR [edx],0x0
  41597f:	fcomp  DWORD PTR [edx+edx*4]
  415982:	sub    esp,DWORD PTR [esi]
  415984:	sbb    eax,0xdcadb82b
  415989:	dec    eax
  41598a:	dec    ebx
  41598b:	cmp    BYTE PTR [ecx*1+0x3e607b9b],ah
  415992:	sti    
  415993:	rol    BYTE PTR [eax-0xb7f87c4],0xe7
  41599a:	xor    eax,0x97ebd54d
  41599f:	fidiv  DWORD PTR [edi-0x19]
  4159a2:	es nop
  4159a4:	ds lahf 
  4159a6:	jnp    0x415968
  4159a8:	shl    ebx,cl
  4159aa:	and    eax,0x9a089ae1
  4159af:	fnstsw WORD PTR [ecx+0x29]
  4159b2:	add    DWORD PTR [ebx-0x596aec0c],edx
  4159b8:	into   
  4159b9:	test   BYTE PTR [esi],ah
  4159bb:	sub    cl,BYTE PTR [ecx-0x22]
  4159be:	cs (bad) 
  4159c0:	pushf  
  4159c1:	rcl    BYTE PTR [esi],0x59
  4159c4:	cli    
  4159c5:	push   ds
  4159c6:	stos   DWORD PTR es:[edi],eax
  4159c7:	push   edx
  4159c8:	inc    esi
  4159c9:	addr16 int3 
  4159cb:	mov    dh,0x15
  4159cd:	and    al,0xd6
  4159cf:	sbb    al,0x57
  4159d1:	(bad)  
  4159d2:	pop    ecx
  4159d3:	inc    eax
  4159d4:	in     al,0x21
  4159d6:	add    cl,BYTE PTR es:[ebx]
  4159d9:	out    dx,eax
  4159da:	and    al,BYTE PTR [esi]
  4159dc:	in     eax,dx
  4159dd:	jae    0x415a3f
  4159df:	sub    BYTE PTR [eax+0x5dffdf91],0x6b
  4159e6:	fild   QWORD PTR [edx+0x72]
  4159e9:	pop    es
  4159ea:	jne    0x415a6a
  4159ec:	xchg   ebx,eax
  4159ed:	jns    0x4159bd
  4159ef:	pop    ss
  4159f0:	daa    
  4159f1:	mov    ebx,0xd9a34708
  4159f6:	fadd   QWORD PTR [esi+0x7fe3c68b]
  4159fc:	ret    
  4159fd:	cmp    BYTE PTR [edi-0x5b],al
  415a00:	rcr    BYTE PTR [ebp+eax*1+0x4b],0x6c
  415a05:	jnp    0x415a82
  415a07:	adc    al,0x94
  415a09:	jo     0x415a67
  415a0b:	push   esi
  415a0c:	mov    ebx,0x255bf2ed
  415a11:	pushf  
  415a12:	adc    ecx,DWORD PTR [ecx]
  415a14:	jmp    0x98f06210
  415a19:	test   al,0x4d
  415a1b:	fsub   st(3),st
  415a1d:	ret    
  415a1e:	jmp    0x415a09
  415a20:	ret    
  415a21:	sahf   
  415a22:	and    eax,0x634bf54e
  415a27:	outs   dx,BYTE PTR ds:[esi]
  415a28:	jns    0x415a46
  415a2a:	mov    al,ds:0x1c78b4fe
  415a2f:	and    DWORD PTR [ecx-0x2e783fca],ecx
  415a35:	test   DWORD PTR [ebx+0x2e0cf2dd],0x50d93e91
  415a3f:	pop    ebp
  415a40:	inc    ebp
  415a41:	cmp    dl,BYTE PTR [ebp+0xb559b23]
  415a47:	mov    dh,dh
  415a49:	or     eax,0x903e9159
  415a4e:	mov    ch,0x8
  415a50:	bound  esp,QWORD PTR [esi]
  415a52:	sti    
  415a53:	mov    ch,0x9c
  415a55:	call   0xd3a79d37
  415a5a:	add    BYTE PTR [edx],bh
  415a5c:	xchg   ebp,eax
  415a5e:	or     bl,ch
  415a60:	xchg   ebx,eax
  415a61:	push   ds
  415a62:	aaa    
  415a63:	add    BYTE PTR [esi+0x4f],ah
  415a66:	and    BYTE PTR [esi+0x682253dc],cl
  415a6c:	popa   
  415a6d:	or     BYTE PTR [eax-0x1e4ab5b0],0xfb
  415a74:	aas    
  415a75:	jmp    0xc0d2:0xf3d39fbd
  415a7c:	jp     0x14d8a1d8
  415a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a83:	mov    ds:0x60bafe1c,al
  415a88:	xlat   BYTE PTR ds:[ebx]
  415a89:	pop    es
  415a8a:	and    bh,BYTE PTR [ebx]
  415a8c:	jge    0x415a58
  415a8e:	and    al,0x7d
  415a90:	mov    ecx,0x9b7d993b
  415a95:	mov    bh,0x1f
  415a97:	mov    eax,0x627da03a
  415a9c:	fstp   QWORD PTR [ebp+0x5e]
  415a9f:	jo     0x415a3d
  415aa1:	es lock out dx,eax
  415aa4:	mov    ch,0x2a
  415aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa7:	cwde   
  415aa8:	enter  0x65d,0x42
  415aac:	push   0xeca7e059
  415ab1:	fwait
  415ab2:	or     BYTE PTR [edi],ch
  415ab4:	mov    ah,BYTE PTR es:[edx+0x65c4a54a]
  415abb:	adc    eax,0x87cdf0a9
  415ac0:	loop   0x415a8a
  415ac2:	or     BYTE PTR [ebx-0x24],bh
  415ac5:	pop    ds
  415ac6:	cld    
  415ac7:	daa    
  415ac8:	dec    edi
  415ac9:	jne    0x415a6d
  415acb:	popa   
  415acc:	jl     0x415ae6
  415ace:	mov    ebx,esp
  415ad0:	out    0xf,eax
  415ad2:	pusha  
  415ad3:	hlt    
  415ad4:	je     0x415a56
  415ad6:	les    ebx,FWORD PTR ds:0x60dfc80a
  415adc:	sti    
  415add:	mov    ebp,DWORD PTR [edx+0x75b3930]
  415ae3:	xchg   esi,eax
  415ae4:	nop
  415ae5:	fisub  DWORD PTR ds:0xb76f7dbf
  415aeb:	xchg   edi,eax
  415aec:	cli    
  415aed:	dec    edi
  415aee:	inc    edi
  415aef:	dec    ebp
  415af0:	(bad)  
  415af2:	stc    
  415af3:	push   ecx
  415af4:	mov    cl,0x79
  415af6:	fnsave [ecx+ecx*8-0x5e4ff1e5]
  415afd:	push   edi
  415afe:	cld    
  415aff:	xor    eax,0xddaa6b6f
  415b04:	cs loop 0x415afc
  415b07:	cmp    esi,DWORD PTR [eax]
  415b09:	sub    DWORD PTR [edi+0x5e54234],ebx
  415b0f:	jp     0x415adf
  415b11:	xchg   edx,eax
  415b12:	cmp    eax,DWORD PTR [eax-0x2c]
  415b15:	jmp    0xf67d514
  415b1a:	sbb    eax,0x7319a1b0
  415b1f:	fnstsw WORD PTR [ecx+0x7c1a90eb]
  415b25:	ins    BYTE PTR es:[edi],dx
  415b26:	rcl    ah,1
  415b28:	add    ebx,DWORD PTR [edx]
  415b2a:	xor    ah,ah
  415b2c:	das    
  415b2d:	in     eax,0x27
  415b2f:	or     DWORD PTR ds:0xc853e4d0,ecx
  415b35:	mov    DWORD PTR [esi+ecx*2-0x25187a6],edx
  415b3c:	call   0xb888e9fc
  415b41:	sbb    ebx,DWORD PTR [eax]
  415b43:	es fsub st(4),st
  415b46:	mov    bh,0x74
  415b48:	inc    edx
  415b49:	sub    BYTE PTR [ebx+0x5b053b37],dh
  415b4f:	idiv   BYTE PTR [ebx+0x57]
  415b52:	in     al,dx
  415b53:	(bad)  
  415b54:	cmp    BYTE PTR [ebx],bh
  415b56:	cs jne 0x415bcb
  415b59:	adc    al,0xd2
  415b5b:	and    DWORD PTR [edi+esi*1],ecx
  415b5e:	sbb    edi,ebp
  415b60:	test   BYTE PTR [esi+eax*1+0x10],bl
  415b64:	stos   DWORD PTR es:[edi],eax
  415b65:	jl     0x415b01
  415b67:	or     DWORD PTR [esi-0x6e],edi
  415b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b6b:	add    ebx,DWORD PTR ds:0xb34f02f1
  415b71:	mov    esp,0xf9417729
  415b76:	scas   al,BYTE PTR es:[edi]
  415b77:	cmp    edx,edx
  415b79:	cmp    eax,DWORD PTR ds:0x2346276e
  415b7f:	xchg   ecx,eax
  415b80:	leave  
  415b81:	dec    esp
  415b82:	xchg   esi,eax
  415b83:	(bad)  
  415b84:	sub    eax,0x9f0ac0d8
  415b89:	xchg   ecx,eax
  415b8a:	cs push ebx
  415b8c:	call   0x99eb:0xc5fc058f
  415b93:	or     ah,BYTE PTR [ecx-0x1]
  415b96:	retf   
  415b97:	sbb    al,0x39
  415b99:	cmp    bl,BYTE PTR [ebp-0x285cff23]
  415b9f:	pushf  
  415ba0:	je     0x415ba8
  415ba2:	xor    ch,bl
  415ba4:	xchg   ebp,eax
  415ba5:	push   ss
  415ba6:	or     ah,BYTE PTR [ebp-0x4f]
  415ba9:	mov    cl,0x1
  415bab:	cli    
  415bac:	int    0xdd
  415bae:	sub    dl,dl
  415bb0:	data16 (bad) 
  415bb2:	cld    
  415bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb4:	push   es
  415bb5:	mov    esi,0xfa2ca6b0
  415bba:	repnz sar dl,cl
  415bbd:	ss push 0x832f4f87
  415bc3:	mov    edi,0xa09f4a
  415bc8:	jnp    0x415c0c
  415bca:	mov    ah,0xde
  415bcc:	jp     0x415b8a
  415bce:	inc    ecx
  415bcf:	adc    al,0xa
  415bd1:	mov    gs,WORD PTR [edi+0x52]
  415bd4:	mul    DWORD PTR [esi+ebx*1]
  415bd7:	fidivr DWORD PTR [edi]
  415bd9:	inc    ebx
  415bda:	sbb    ebp,ecx
  415bdc:	test   BYTE PTR [esp+eax*2-0x48da9e10],bh
  415be3:	sub    BYTE PTR [eax],bl
  415be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be6:	sbb    BYTE PTR ds:0x2808a311,ah
  415bec:	jl     0x415b81
  415bee:	fnop   
  415bf0:	push   esp
  415bf1:	and    al,0xed
  415bf3:	mov    dl,BYTE PTR [ebx+0x20]
  415bf6:	mov    bh,0xad
  415bf8:	scas   eax,DWORD PTR es:[edi]
  415bf9:	(bad)  [edx-0x781f5ea2]
  415bff:	mov    ebp,0x3cea2d7a
  415c04:	jbe    0x415c3d
  415c06:	sub    edi,eax
  415c08:	mov    eax,0xb7734e13
  415c0d:	lods   al,BYTE PTR ds:[esi]
  415c0e:	ret    
  415c0f:	cmp    ecx,DWORD PTR [edx]
  415c11:	pop    eax
  415c12:	shl    BYTE PTR [ebp+0x768c8b68],1
  415c18:	aam    0xf7
  415c1a:	(bad)  
  415c1b:	and    eax,DWORD PTR [ecx+0x6b76b619]
  415c21:	and    BYTE PTR [edx],ah
  415c23:	adc    esp,DWORD PTR [ecx]
  415c25:	mov    cl,ah
  415c27:	scas   eax,DWORD PTR es:[edi]
  415c28:	adc    bh,cl
  415c2a:	adc    bl,0xf7
  415c2d:	inc    ebp
  415c2e:	retf   
  415c2f:	jp     0x415c54
  415c31:	scas   eax,DWORD PTR es:[edi]
  415c32:	mov    BYTE PTR [eax+0x58],dl
  415c35:	cmp    eax,0x73c40ea4
  415c3a:	outs   dx,DWORD PTR ds:[esi]
  415c3b:	loop   0x415bde
  415c3d:	test   DWORD PTR [esi+0x4bd9fa3c],esi
  415c43:	cli    
  415c44:	cmp    ecx,DWORD PTR [edi+0x9]
  415c47:	scas   al,BYTE PTR es:[edi]
  415c48:	xchg   edi,eax
  415c49:	xor    eax,0x5a0cd507
  415c4e:	int    0xbf
  415c50:	ins    BYTE PTR es:[edi],dx
  415c51:	(bad)  
  415c52:	xor    eax,0xd9dda142
  415c57:	and    dl,dh
  415c59:	mov    esi,0x8749bea
  415c5e:	arpl   WORD PTR [eax-0x67],si
  415c61:	cwde   
  415c62:	lods   al,BYTE PTR es:[esi]
  415c64:	jl     0x415c48
  415c66:	xchg   ebx,eax
  415c67:	pusha  
  415c68:	jmp    0x415c97
  415c6a:	sub    dh,dh
  415c6c:	mov    ebp,esp
  415c6e:	outs   dx,BYTE PTR ds:[esi]
  415c6f:	out    0xdf,al
  415c71:	add    DWORD PTR [edi-0x5d],0xffffff8c
  415c75:	outs   dx,BYTE PTR ds:[esi]
  415c76:	cmp    eax,0xcfdb2112
  415c7b:	dec    ebx
  415c7c:	pop    ebp
  415c7d:	push   es
  415c7e:	jecxz  0x415c23
  415c80:	imul   BYTE PTR [ebx]
  415c82:	jmp    0x415cd0
  415c84:	test   DWORD PTR [eax-0x69],edx
  415c87:	pop    ebp
  415c88:	nop
  415c89:	pop    ebp
  415c8a:	loopne 0x415c6c
  415c8c:	popa   
  415c8d:	sbb    al,0xb7
  415c8f:	retf   
  415c90:	(bad)  [eax-0x49]
  415c93:	jns    0x415ca1
  415c95:	cmp    dl,bh
  415c97:	sahf   
  415c98:	fisubr WORD PTR [edi-0x47d8592]
  415c9e:	mov    esp,0xa111e01a
  415ca3:	int    0xb4
  415ca5:	mov    WORD PTR [ebx],fs
  415ca7:	cmc    
  415ca8:	cs scas al,BYTE PTR es:[edi]
  415caa:	les    si,DWORD PTR [ebp+0x2e]
  415cae:	sbb    BYTE PTR [ebx],0x8b
  415cb1:	push   ebp
  415cb2:	fild   DWORD PTR [eax-0x63f74468]
  415cb8:	mov    DWORD PTR [ecx+esi*4+0xcf47b2d],edi
  415cbf:	push   esi
  415cc0:	fild   QWORD PTR [esp+eiz*2]
  415cc3:	pop    ebx
  415cc4:	mov    al,ds:0xfc5476fa
  415cc9:	cmp    eax,0x44b33809
  415cce:	dec    edi
  415ccf:	pop    ds
  415cd0:	add    DWORD PTR [eax+0x42bf589c],edi
  415cd6:	sub    ebx,DWORD PTR [eax]
  415cd8:	(bad)  
  415cd9:	pop    edx
  415cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cdb:	les    eax,FWORD PTR [edi]
  415cdd:	add    BYTE PTR [edx],bl
  415cdf:	cwde   
  415ce0:	adc    ch,BYTE PTR ss:[edx+0x1c]
  415ce4:	dec    esi
  415ce5:	jle    0x415d4c
  415ce7:	jecxz  0x415c91
  415ce9:	lahf   
  415cea:	mov    al,ds:0x9f5b49eb
  415cef:	adc    BYTE PTR [ecx+esi*2+0x1b],ah
  415cf3:	leave  
  415cf4:	jb     0x415cf1
  415cf6:	lods   al,BYTE PTR ds:[esi]
  415cf7:	push   ecx
  415cf8:	cs jg  0x415d4a
  415cfb:	es (bad) 
  415cfd:	clc    
  415cfe:	cwde   
  415cff:	rcr    DWORD PTR [edx],0xd7
  415d02:	mov    esp,ebp
  415d04:	je     0x415cb8
  415d06:	xor    ah,BYTE PTR [eax+esi*1]
  415d09:	mov    fs,WORD PTR [ebx]
  415d0b:	jno    0x415c96
  415d0d:	mov    edi,0x96102a9d
  415d12:	or     DWORD PTR [esp+eiz*8+0xf997f4d],0x801236be
  415d1d:	xchg   ebp,eax
  415d1e:	mov    eax,DWORD PTR [esi+0xf]
  415d21:	scas   al,BYTE PTR es:[edi]
  415d22:	mov    edi,0xc4b78077
  415d27:	or     eax,0xed3f95a6
  415d2c:	and    al,0x1a
  415d2e:	push   esi
  415d30:	jle    0x415d4c
  415d32:	mov    esi,0x6249f00f
  415d37:	mov    ah,0x6
  415d39:	sub    al,BYTE PTR [esp+ebp*8]
  415d3c:	ret    
  415d3d:	pop    ds
  415d3e:	es pop ds
  415d40:	sbb    al,0xdf
  415d42:	loope  0x415d79
  415d44:	loop   0x415d5c
  415d46:	xchg   edx,eax
  415d47:	adc    eax,0xe59e4d50
  415d4c:	adc    eax,0xd269aa03
  415d51:	dec    ebx
  415d52:	add    bh,dh
  415d54:	out    dx,al
  415d55:	dec    esp
  415d56:	das    
  415d57:	std    
  415d58:	ds add al,0xf5
  415d5b:	sub    al,0xe
  415d5d:	leave  
  415d5e:	xchg   esi,eax
  415d5f:	sbb    BYTE PTR [ecx+0x28],bh
  415d62:	mov    eax,ds:0xe285aabc
  415d67:	jp     0x415db1
  415d69:	lods   al,BYTE PTR ds:[esi]
  415d6a:	mov    ebp,0x36aee81e
  415d6f:	pop    ebx
  415d70:	inc    esp
  415d71:	popa   
  415d72:	add    al,BYTE PTR [edi+0x4d]
  415d75:	jae    0x415d0f
  415d77:	dec    eax
  415d78:	cmp    ebx,DWORD PTR [eax+ecx*2-0x12]
  415d7c:	add    BYTE PTR [ecx-0x56b3455c],cl
  415d82:	lods   eax,DWORD PTR ds:[esi]
  415d83:	xchg   ebp,eax
  415d84:	icebp  
  415d85:	push   ebx
  415d86:	jge    0x415df8
  415d88:	rcl    DWORD PTR [esp+ebx*8+0x41],cl
  415d8c:	jle    0x415db5
  415d8e:	cdq    
  415d8f:	sub    DWORD PTR [esi+eiz*8],0x6d
  415d93:	lahf   
  415d94:	std    
  415d95:	mov    dh,0xab
  415d97:	shl    ebp,0x86
  415d9a:	cdq    
  415d9b:	add    BYTE PTR [ebp*1-0x114fa97e],dh
  415da2:	push   ds
  415da3:	pop    edi
  415da4:	xchg   DWORD PTR [ebx],esp
  415da6:	rcr    BYTE PTR [eax-0x24],cl
  415da9:	xchg   edi,eax
  415daa:	mov    ds:0xe09f0bb0,al
  415daf:	pushf  
  415db0:	rcr    DWORD PTR [edx+eax*4-0x63],1
  415db4:	cmp    DWORD PTR [esi-0x177e0b72],eax
  415dba:	aam    0x5f
  415dbc:	add    eax,0x17e49495
  415dc1:	(bad)  
  415dc2:	inc    ecx
  415dc3:	retf   0xd826
  415dc6:	ficom  WORD PTR cs:[esi]
  415dc9:	pushf  
  415dca:	sub    eax,DWORD PTR [edx]
  415dcc:	push   0x2c
  415dce:	inc    ebx
  415dcf:	push   edi
  415dd0:	in     al,dx
  415dd1:	and    al,0xb6
  415dd3:	std    
  415dd4:	mov    ebp,0xfdf65e13
  415dd9:	inc    edx
  415dda:	jne    0x415d5c
  415ddc:	cmp    eax,0x7056055b
  415de1:	adc    dh,BYTE PTR [edi+0x4739a4d0]
  415de7:	and    eax,0x39ec43c0
  415dec:	sbb    esp,DWORD PTR [edx+0x7b]
  415def:	push   edx
  415df0:	ret    
  415df1:	push   ecx
  415df2:	xor    BYTE PTR [edx+0x3e],dl
  415df5:	and    eax,DWORD PTR [edi-0x4e]
  415df8:	sub    BYTE PTR [ecx],0xc2
  415dfb:	es test al,0x49
  415dfe:	mov    ecx,DWORD PTR [edi+0xa]
  415e01:	imul   ebx,DWORD PTR [edi-0x1e],0xffffffde
  415e05:	sbb    al,0x57
  415e07:	push   edx
  415e08:	jmp    0x415df6
  415e0a:	jae    0x415e56
  415e0c:	jge    0x415da5
  415e0e:	cwde   
  415e0f:	jl     0x415dfc
  415e11:	pop    eax
  415e12:	mov    bh,BYTE PTR [ebp+0x6d]
  415e15:	dec    edx
  415e16:	jge    0x415e5f
  415e18:	push   0x500a3786
  415e1d:	pop    ecx
  415e1e:	inc    ebp
  415e1f:	mov    BYTE PTR [ebp-0x25a1045f],ch
  415e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e26:	clc    
  415e27:	aam    0xf
  415e29:	ret    0xb72f
  415e2c:	xchg   ebx,eax
  415e2d:	adc    al,0xac
  415e2f:	neg    DWORD PTR [ebp+0x60a8be3a]
  415e35:	inc    ebp
  415e36:	(bad)  
  415e37:	shl    dl,0x15
  415e3a:	jb     0x415dcb
  415e3c:	repnz mov dh,bh
  415e3f:	imul   esi,DWORD PTR [eax-0x74],0x2f
  415e43:	aam    0xa1
  415e45:	(bad)  
  415e46:	lock out 0x0,eax
  415e49:	and    BYTE PTR [ebp-0x38],bh
  415e4c:	sbb    DWORD PTR [ebp-0x22],edi
  415e4f:	inc    edx
  415e50:	sbb    ch,BYTE PTR [ebp-0x499bcaef]
  415e56:	push   esp
  415e57:	call   0xb149:0xf9984466
  415e5e:	loope  0x415e3f
  415e60:	fisubr WORD PTR [esi]
  415e62:	mov    dl,bl
  415e64:	push   0x8a265a03
  415e69:	je     0x415ed3
  415e6b:	mov    esi,0x92b9f7e6
  415e70:	adc    dl,BYTE PTR [ebp+0x5152d747]
  415e76:	fwait
  415e77:	imul   ebx,ebx,0xffffffde
  415e7a:	cli    
  415e7b:	add    DWORD PTR [edi+ebp*8+0x540b055a],edi
  415e82:	outs   dx,DWORD PTR ds:[esi]
  415e83:	jbe    0x415eac
  415e85:	adc    al,0x7b
  415e87:	sub    ah,BYTE PTR [ebx]
  415e89:	cmp    eax,0x12dfc3b3
  415e8e:	lahf   
  415e8f:	jbe    0x415f0b
  415e91:	add    ecx,ebp
  415e93:	dec    ecx
  415e94:	push   edx
  415e95:	mov    ecx,0xc1ced488
  415e9a:	push   ss
  415e9b:	cld    
  415e9c:	fadd   QWORD PTR [ebp-0x3b]
  415e9f:	jbe    0x415e98
  415ea1:	lock nop
  415ea3:	dec    eax
  415ea4:	push   0x5844f8d3
  415ea9:	sar    DWORD PTR [ecx],cl
  415eab:	sub    BYTE PTR [ebx+edi*2-0xf],bl
  415eaf:	add    BYTE PTR [ecx+0x4],cl
  415eb2:	aad    0x5d
  415eb4:	enter  0xed5c,0x3b
  415eb8:	imul   edx,DWORD PTR [ecx+0x3988e202],0xffffffcd
  415ebf:	cmp    ch,BYTE PTR ds:0x7d09
  415ec4:	sahf   
  415ec5:	lahf   
  415ec6:	mov    BYTE PTR [esp+ebp*1],al
  415ec9:	mov    ecx,DWORD PTR [esi]
  415ecb:	es mov ecx,0x7de72631
  415ed1:	(bad)  
  415ed2:	gs mov ch,0x48
  415ed5:	es inc esi
  415ed7:	or     al,0x6c
  415ed9:	lods   eax,DWORD PTR ds:[esi]
  415eda:	xor    ecx,edi
  415edc:	dec    edx
  415edd:	push   ebp
  415ede:	in     al,0xf9
  415ee0:	add    al,0xdf
  415ee2:	sub    al,0x8c
  415ee4:	and    eax,0xd4d10a49
  415ee9:	bound  edx,QWORD PTR [eax-0x46]
  415eec:	out    0x62,eax
  415eee:	dec    ecx
  415eef:	adc    ah,dl
  415ef1:	jp     0x415f31
  415ef3:	jno    0x415f25
  415ef5:	cmp    ch,cl
  415ef7:	(bad)  
  415ef8:	popa   
  415ef9:	jb     0x415f27
  415efb:	scas   al,BYTE PTR es:[edi]
  415efc:	mov    ebx,0x3b48e3a5
  415f01:	retf   0xceb4
  415f04:	mov    ds:0x6ae1395b,eax
  415f09:	push   esi
  415f0a:	mov    ch,0x1d
  415f0c:	jecxz  0x415f08
  415f0e:	in     al,dx
  415f0f:	cmp    cl,BYTE PTR [eax+0x2ac8c326]
  415f15:	je     0x415f92
  415f17:	imul   ebx,DWORD PTR [ebp-0x19edc627],0x3eddb1a8
  415f21:	sbb    eax,edx
  415f23:	(bad)  
  415f25:	adc    DWORD PTR [ebx+0x142a839e],eax
  415f2b:	or     eax,esi
  415f2d:	xlat   BYTE PTR ds:[ebx]
  415f2e:	(bad)  
  415f2f:	sar    BYTE PTR [ecx+0x7b],1
  415f32:	in     al,dx
  415f33:	fstp   TBYTE PTR [edi-0x7c09d5c9]
  415f39:	loopne 0x415f4e
  415f3b:	sub    BYTE PTR [ebx],dh
  415f3d:	sub    ecx,DWORD PTR gs:[esi+0x48]
  415f41:	mov    edx,0x8ea79499
  415f46:	add    bl,BYTE PTR [ebp+ebp*4-0x19]
  415f4a:	pop    ds
  415f4b:	jns    0x415ed9
  415f4d:	ret    
  415f4e:	ins    BYTE PTR es:[edi],dx
  415f4f:	icebp  
  415f50:	xor    BYTE PTR [edi],bl
  415f52:	and    eax,DWORD PTR [edi+0x26]
  415f55:	mov    dh,0x3b
  415f57:	aas    
  415f58:	scas   al,BYTE PTR es:[edi]
  415f59:	sub    BYTE PTR [edx],ah
  415f5b:	retf   
  415f5c:	mov    dh,0xdb
  415f5e:	push   esp
  415f5f:	jb     0x415f9e
  415f61:	jmp    0xc2a4:0xa28933e3
  415f68:	sbb    esp,ebx
  415f6a:	ins    DWORD PTR es:[edi],dx
  415f6b:	call   0x877cbb13
  415f70:	mov    eax,ds:0x138ae223
  415f75:	test   BYTE PTR ds:0xa4a27cf9,al
  415f7b:	mov    ds:0x560ede71,eax
  415f80:	fst    QWORD PTR [esi]
  415f82:	loope  0x415f35
  415f84:	mov    fs,WORD PTR [edi-0x7d]
  415f87:	mov    dl,0x83
  415f89:	imul   ebx,DWORD PTR [edx],0xffffffc2
  415f8c:	sbb    bl,BYTE PTR [eax+0x52e326f5]
  415f92:	push   ebx
  415f93:	es push esp
  415f95:	aad    0xc4
  415f97:	dec    edi
  415f98:	add    eax,0x8bdb6
  415f9d:	fsubr  QWORD PTR [edi]
  415f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa0:	nop
  415fa1:	xchg   BYTE PTR [esi-0xb],bh
  415fa4:	or     BYTE PTR [eax-0x3c],ch
  415fa7:	push   eax
  415fa8:	pop    edx
  415fa9:	jmp    0x415f78
  415fab:	sar    cl,cl
  415fad:	bound  ebp,QWORD PTR [esi]
  415faf:	das    
  415fb0:	inc    esi
  415fb1:	ja     0x415f71
  415fb3:	and    BYTE PTR [eax+0x1eef314e],bh
  415fb9:	and    edx,DWORD PTR [edi-0x46590293]
  415fbf:	nop
  415fc0:	xchg   ebp,eax
  415fc1:	jb     0x415fb2
  415fc3:	add    eax,0xd7fa2e78
  415fc8:	scas   al,BYTE PTR es:[edi]
  415fc9:	jno    0x415f65
  415fcb:	push   ebp
  415fcc:	mov    esp,0x87f12278
  415fd1:	jg     0x415fe2
  415fd3:	test   al,0x4d
  415fd5:	pop    ss
  415fd6:	std    
  415fd7:	and    BYTE PTR [eax+ecx*1],bl
  415fda:	cdq    
  415fdb:	js     0x415fb2
  415fdd:	aas    
  415fde:	adc    eax,esi
  415fe0:	mov    bl,0xbb
  415fe2:	(bad)  [edi-0x3693ffe1]
  415fe8:	nop
  415fe9:	retf   
  415fea:	in     eax,dx
  415feb:	clc    
  415fec:	jno    0x415fca
  415fee:	xchg   DWORD PTR [edx+0x21],eax
  415ff1:	dec    ebx
  415ff2:	lds    eax,FWORD PTR [eax-0xb]
  415ff5:	shl    eax,1
  415ff7:	mov    al,ds:0xe0859cc3
  415ffc:	clc    
  415ffd:	fucomi st,st(4)
  415fff:	into   
  416000:	cmp    cl,BYTE PTR [ecx]
  416002:	pop    es
  416003:	mov    al,0x51
  416005:	add    ebx,DWORD PTR [ebp+0x60302696]
  41600b:	enter  0x335d,0x14
  41600f:	mov    dh,0x57
  416011:	push   ebp
  416012:	or     ch,ah
  416014:	enter  0x4b1f,0x57
  416018:	dec    edi
  416019:	jno    0x41602d
  41601b:	adc    BYTE PTR [esi-0x12],bl
  41601e:	push   eax
  41601f:	inc    esp
  416020:	dec    esp
  416021:	sub    edi,DWORD PTR [esi]
  416023:	lds    edi,FWORD PTR [ebp-0x4c]
  416026:	sbb    al,ch
  416028:	and    al,0x4f
  41602b:	sub    dl,BYTE PTR [esi]
  41602d:	fcmovnu st,st(7)
  41602f:	jmp    0x921a:0x42d49c9a
  416036:	mov    ecx,0xfc159a58
  41603b:	and    eax,0xa0e7fe8b
  416040:	pop    es
  416041:	adc    al,0x4e
  416043:	sbb    al,BYTE PTR [ebx]
  416045:	int3   
  416046:	jecxz  0x41605e
  416048:	pop    ss
  416049:	and    BYTE PTR [edx+0x24],dh
  41604c:	jmp    0x747d:0xc7af42a5
  416053:	mov    WORD PTR [eax-0x75],ds
  416056:	fbstp  TBYTE PTR ds:0x9530af0d
  41605c:	in     eax,0x97
  41605e:	mov    dh,0xa6
  416060:	sbb    BYTE PTR [esi+eax*1+0x76eea50f],bl
  416067:	push   es
  416068:	mov    ah,0x9f
  41606a:	rcr    DWORD PTR [edi],0xb7
  41606d:	mov    gs,ebp
  41606f:	pop    esp
  416070:	je     0x416076
  416072:	popa   
  416073:	popa   
  416074:	or     bl,BYTE PTR [esi]
  416076:	jmp    0x68d82347
  41607b:	xor    BYTE PTR [eax],0x86
  41607e:	ret    0x6448
  416081:	lahf   
  416082:	mov    ds:0xb841bafe,eax
  416087:	fdiv   DWORD PTR [eax-0x2d]
  41608a:	dec    ebp
  41608b:	sbb    edx,DWORD PTR [esp+edx*8-0x27]
  41608f:	std    
  416090:	ret    0x9a3
  416093:	pop    ebp
  416094:	adc    BYTE PTR [ecx-0x17],al
  416097:	test   al,0x8c
  416099:	mov    ecx,0xb706b30f
  41609e:	scas   al,BYTE PTR es:[edi]
  41609f:	jbe    0x4160d1
  4160a1:	repz fldenv [ecx-0x8]
  4160a5:	adc    DWORD PTR [esi],edi
  4160a7:	cld    
  4160a8:	je     0x416065
  4160aa:	push   ss
  4160ab:	add    BYTE PTR [edx+0x14fea5b3],ah
  4160b1:	repz leave 
  4160b3:	sbb    bl,BYTE PTR [eax+eiz*1-0x77]
  4160b7:	sahf   
  4160b8:	(bad)  
  4160b9:	pop    ds
  4160ba:	outs   dx,BYTE PTR ds:[esi]
  4160bb:	fbstp  TBYTE PTR [edx]
  4160bd:	mov    esp,0x15b51f2b
  4160c2:	mov    cl,BYTE PTR [edi+0x1931c25a]
  4160c8:	daa    
  4160c9:	jno    0x41611a
  4160cb:	pop    ebx
  4160cc:	sub    eax,0xb5d22eb9
  4160d1:	xchg   esp,eax
  4160d2:	aad    0x1f
  4160d4:	or     al,bl
  4160d6:	ins    DWORD PTR es:[edi],dx
  4160d7:	(bad)  
  4160d8:	sahf   
  4160d9:	sbb    al,dh
  4160db:	add    al,0x11
  4160dd:	push   ebp
  4160de:	or     eax,0xb98663fd
  4160e3:	push   0x5a
  4160e5:	arpl   WORD PTR [ebx],ax
  4160e7:	xchg   edx,eax
  4160e8:	or     BYTE PTR ds:0x37586242,bh
  4160ee:	push   0x2e23d020
  4160f3:	xchg   edx,eax
  4160f4:	sub    edi,0xffffff82
  4160f7:	ret    0x4133
  4160fa:	in     al,dx
  4160fb:	fst    QWORD PTR [eax+edx*8+0x6d]
  4160ff:	dec    eax
  416100:	push   ebp
  416101:	fld    DWORD PTR [edi-0x321dd6cd]
  416107:	mov    bh,0xa1
  416109:	stc    
  41610a:	hlt    
  41610b:	lods   eax,DWORD PTR ds:[esi]
  41610c:	adc    eax,0xddcf9caf
  416111:	xchg   ecx,eax
  416112:	push   ecx
  416114:	mov    edx,0x58420cba
  416119:	mov    ds:0x69901d8e,eax
  41611e:	gs mov esi,0x3485357f
  416124:	js     0x416179
  416126:	and    edi,DWORD PTR [edi+0x3]
  416129:	les    ebp,FWORD PTR [eax+0x47f5ab37]
  41612f:	mov    eax,0x4a6dc45a
  416134:	add    BYTE PTR [edx+0x4],bl
  416137:	dec    esp
  416138:	add    al,0x51
  41613a:	cmp    ebp,ecx
  41613c:	sti    
  41613d:	jge    0x41612d
  41613f:	lds    esi,FWORD PTR [eax-0x2f]
  416142:	rcl    BYTE PTR [esi*4-0x70824a11],1
  416149:	retf   
  41614a:	hlt    
  41614b:	sub    DWORD PTR [ecx+0x2bd929e2],edx
  416151:	cmp    BYTE PTR [edx],dh
  416153:	inc    ecx
  416154:	dec    ecx
  416155:	mov    dh,bl
  416157:	icebp  
  416158:	out    0x3,eax
  41615a:	repz adc DWORD PTR [ecx-0x239e20a7],edx
  416161:	fsubr  st(6),st
  416163:	xchg   ebp,eax
  416164:	imul   edx,DWORD PTR [edx+0x1f],0x29
  416168:	test   al,0x5f
  41616a:	call   0x4129:0x16c55885
  416171:	xchg   ebp,eax
  416172:	js     0x416186
  416174:	sbb    eax,0x4bfcdfd6
  416179:	lods   eax,DWORD PTR ds:[esi]
  41617a:	das    
  41617b:	loop   0x41614c
  41617d:	inc    ebx
  41617e:	push   0x6a8f69b
  416183:	fwait
  416184:	sub    DWORD PTR [ecx+0x50],esp
  416187:	out    dx,eax
  416188:	(bad)  
  416189:	and    eax,0x5e7a4c25
  41618e:	dec    ecx
  41618f:	cmp    eax,0x991615d8
  416194:	andps  xmm5,XMMWORD PTR [edi+0x530f0330]
  41619b:	test   al,0x84
  41619d:	adc    esp,DWORD PTR [ebp+ebp*1-0x59]
  4161a1:	inc    edx
  4161a2:	mov    ds:0x9633815a,eax
  4161a7:	inc    edi
  4161a8:	mov    ebp,0xe2335231
  4161ad:	es xchg esp,eax
  4161af:	arpl   WORD PTR [ecx-0x3a],dx
  4161b2:	sub    DWORD PTR [eax],ebx
  4161b4:	sub    bl,BYTE PTR [eax+0x3bf1e484]
  4161ba:	dec    esp
  4161bb:	pop    es
  4161bc:	inc    edx
  4161bd:	cmp    esp,DWORD PTR [esi]
  4161bf:	shl    BYTE PTR [ecx+edi*8-0x51f336ee],cl
  4161c6:	push   ebp
  4161c7:	imul   esp,DWORD PTR [eax+0x542a5fcc],0x60316a32
  4161d1:	adc    DWORD PTR [edi],ecx
  4161d3:	(bad)  
  4161d4:	adc    al,0x28
  4161d6:	stos   DWORD PTR es:[edi],eax
  4161d7:	sbb    al,BYTE PTR [ebx-0x18]
  4161da:	repnz xor eax,edi
  4161dd:	out    dx,eax
  4161de:	dec    esi
  4161df:	lods   eax,DWORD PTR ds:[esi]
  4161e0:	ins    BYTE PTR es:[edi],dx
  4161e1:	out    dx,al
  4161e2:	sub    DWORD PTR [edi+0x55],esi
  4161e5:	xchg   DWORD PTR [esi+0x5b],edx
  4161e8:	dec    BYTE PTR [esp+ebx*2]
  4161eb:	out    dx,al
  4161ec:	ss cdq 
  4161ee:	xchg   ebx,eax
  4161ef:	sub    ah,ah
  4161f1:	jmp    0x6828:0xed213c6d
  4161f8:	or     eax,0x8f627739
  4161fd:	adc    al,0x5a
  4161ff:	outs   dx,BYTE PTR ds:[esi]
  416200:	inc    esp
  416201:	fsub   QWORD PTR [ebp+esi*1+0x53f0e7e8]
  416208:	adc    DWORD PTR [esi+0x5288abbb],ecx
  41620e:	mov    ah,0xe0
  416210:	push   ebx
  416211:	and    BYTE PTR [eax+0x24],dl
  416214:	pusha  
  416215:	inc    esi
  416216:	dec    ecx
  416217:	in     eax,dx
  416218:	mov    al,0x52
  41621a:	and    edx,DWORD PTR ds:[bp+di]
  41621e:	call   0xe82143d
  416223:	in     eax,0x2c
  416225:	(bad)  
  416226:	scas   al,BYTE PTR es:[edi]
  416227:	ins    DWORD PTR es:[edi],dx
  416228:	mov    bl,0xf9
  41622a:	or     al,0x48
  41622c:	xchg   ecx,eax
  41622d:	xchg   esi,eax
  41622e:	pop    ebx
  41622f:	xchg   esp,eax
  416230:	xchg   DWORD PTR [eax-0x13],ecx
  416233:	xor    DWORD PTR [edx+ebp*8],0xffffff9a
  416237:	rol    BYTE PTR [eax],cl
  416239:	pop    ss
  41623a:	cmp    ebp,DWORD PTR [ebx]
  41623c:	xchg   esi,eax
  41623d:	dec    esp
  41623e:	(bad)  
  416240:	xor    BYTE PTR [eax-0x7b],cl
  416243:	ins    DWORD PTR es:[edi],dx
  416244:	stos   BYTE PTR es:[edi],al
  416245:	xor    dl,BYTE PTR [ecx+0x34206c46]
  41624b:	pop    ebx
  41624c:	aam    0x55
  41624e:	pop    ss
  41624f:	or     eax,0x589d19b6
  416254:	stos   DWORD PTR es:[edi],eax
  416255:	(bad)  
  416256:	out    dx,eax
  416257:	lea    ebx,[edx+0x41]
  41625a:	inc    edi
  41625b:	and    eax,0xeaf53690
  416260:	fstp   QWORD PTR [ecx]
  416262:	test   bh,0x4d
  416265:	jge    0x4162bb
  416267:	or     esp,DWORD PTR [ebx+ecx*1-0x9469127]
  41626e:	xor    DWORD PTR [ecx+0x30],ebp
  416271:	test   DWORD PTR [esp+edx*2],edi
  416274:	pushfw 
  416276:	mov    WORD PTR [ebx+0x11a62119],?
  41627c:	fistp  WORD PTR [eax+esi*4+0x2fdb6b88]
  416283:	mov    esi,0x3ad0cfb1
  416288:	jnp    0x41628b
  41628a:	out    0xf7,al
  41628c:	ret    
  41628d:	into   
  41628e:	bnd jp 0x4162a8
  416291:	test   al,0xd
  416293:	frstor [edx+0x7930c064]
  416299:	repnz mov edx,0xa41739d0
  41629f:	or     dh,BYTE PTR [edx]
  4162a1:	pushf  
  4162a2:	and    al,0x7c
  4162a4:	mov    eax,0x940578e2
  4162a9:	enter  0xef53,0x13
  4162ad:	mov    cl,0x6b
  4162af:	dec    ecx
  4162b0:	pop    esp
  4162b1:	push   ds
  4162b2:	out    0x73,eax
  4162b4:	dec    edi
  4162b5:	inc    ecx
  4162b6:	lock pop esp
  4162b8:	jne    0x416336
  4162ba:	dec    edx
  4162bb:	push   ebx
  4162bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162bd:	add    al,0x86
  4162bf:	sub    al,ah
  4162c1:	dec    edx
  4162c2:	hlt    
  4162c3:	jge    0x41633f
  4162c5:	or     eax,0xfa62cf5
  4162ca:	xor    BYTE PTR [esi+0x3f],cl
  4162cd:	out    0x19,al
  4162cf:	inc    edi
  4162d0:	and    bl,BYTE PTR [eax+0x2f]
  4162d3:	xor    BYTE PTR [edx],bh
  4162d5:	inc    edx
  4162d6:	idiv   BYTE PTR [edi]
  4162d8:	mov    edx,0xdc2d0499
  4162dd:	mov    ?,esi
  4162df:	add    BYTE PTR [ebx-0x5b55168e],ah
  4162e5:	inc    eax
  4162e6:	mov    dh,0x1b
  4162e8:	addr16 js 0x41626c
  4162eb:	push   es
  4162ec:	stos   BYTE PTR es:[edi],al
  4162ed:	pop    esi
  4162ee:	inc    ebx
  4162ef:	push   edx
  4162f0:	jo     0x4162cb
  4162f2:	fiadd  DWORD PTR [ebp+0x28217a2d]
  4162f8:	loop   0x4162ad
  4162fa:	or     cl,BYTE PTR [esi-0x34749f17]
  416300:	call   0x7812:0xab53d748
  416307:	(bad)
  41630b:	jge    0x4162f7
  41630d:	inc    DWORD PTR [ebx+0xc72786c]
  416313:	ja     0x41629e
  416315:	mov    DWORD PTR [eax-0x62],ebp
  416318:	mov    dh,0xef
  41631a:	mov    WORD PTR [esi-0x66],?
  41631d:	(bad)  
  41631e:	loope  0x4162a7
  416320:	push   eax
  416321:	push   ecx
  416322:	bound  edx,QWORD PTR [edx]
  416324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416325:	ja     0x41639e
  416327:	cmp    al,0xaf
  416329:	out    0xaa,eax
  41632b:	aam    0x8a
  41632d:	pop    esp
  41632e:	cwde   
  41632f:	fcomi  st,st(0)
  416331:	and    ecx,DWORD PTR [ecx-0x1679bd35]
  416337:	out    0x10,al
  416339:	cmp    esp,esp
  41633b:	xor    al,0x60
  41633d:	adc    DWORD PTR [ecx],edx
  41633f:	fisubr WORD PTR [eax+0x49f4e377]
  416345:	xor    al,0x59
  416347:	dec    esp
  416348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416349:	sub    eax,0xd8029aa2
  41634e:	dec    esi
  41634f:	jae    0x416329
  416351:	dec    esi
  416352:	and    al,0xf
  416354:	in     eax,dx
  416355:	out    dx,eax
  416356:	mov    bl,0x1
  416358:	mov    edi,ebp
  41635a:	jecxz  0x416323
  41635c:	loop   0x41632e
  41635e:	jge    0x41633b
  416360:	dec    ecx
  416361:	push   ds
  416362:	sbb    esp,DWORD PTR [esi+ecx*4-0x15]
  416366:	adc    BYTE PTR [ebp+0x2c],ah
  416369:	test   eax,0xdf1c8b92
  41636e:	sbb    dh,bh
  416370:	jbe    0x4163d1
  416372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416373:	push   edx
  416374:	icebp  
  416375:	xchg   BYTE PTR [edi-0x278d5624],ch
  41637b:	cmc    
  41637c:	mov    bl,0x8
  41637e:	mul    al
  416380:	inc    ebx
  416381:	and    edx,ebx
  416383:	and    al,0x4e
  416385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416386:	push   edi
  416387:	xchg   DWORD PTR [esi+ecx*4],edi
  41638a:	pop    eax
  41638b:	or     eax,0xf33cbfc4
  416390:	out    dx,al
  416391:	mov    edx,0xc7328769
  416396:	add    edx,DWORD PTR [edi]
  416398:	xor    DWORD PTR [ecx-0x61],ebp
  41639b:	js     0x4163b8
  41639d:	ins    DWORD PTR es:[edi],dx
  41639e:	and    DWORD PTR [eax+0x41abcc48],ebx
  4163a4:	inc    esp
  4163a5:	popa   
  4163a6:	push   eax
  4163a7:	and    BYTE PTR [esi+0x6],al
  4163aa:	adc    ecx,DWORD PTR [edx+0x3bce57f5]
  4163b0:	push   ecx
  4163b1:	xor    bl,BYTE PTR [edx]
  4163b3:	outs   dx,BYTE PTR ds:[esi]
  4163b4:	jns    0x416412
  4163b6:	ret    
  4163b7:	adc    eax,0xf440afab
  4163bc:	lock in al,0x51
  4163bf:	sub    eax,0x80f86efd
  4163c4:	push   ebx
  4163c5:	aaa    
  4163c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c7:	loop   0x41636f
  4163c9:	mov    esi,0x5949ccf5
  4163ce:	jo     0x41641c
  4163d0:	or     al,0xbb
  4163d2:	or     eax,0xcf7619f8
  4163d7:	arpl   WORD PTR [edi],sp
  4163d9:	jmp    FWORD PTR [edx+0x54]
  4163dc:	or     edx,DWORD PTR [edi+0x2f]
  4163df:	call   0xdaae8cf1
  4163e4:	lea    edx,[ebx-0x6a5836fb]
  4163ea:	push   esi
  4163eb:	xor    esp,edi
  4163ed:	out    dx,al
  4163ee:	xor    BYTE PTR [esi],bl
  4163f0:	mov    dh,0x4
  4163f2:	loope  0x416442
  4163f4:	imul   esi,DWORD PTR [eax+0x32],0xc5de5621
  4163fb:	outs   dx,DWORD PTR ds:[esi]
  4163fc:	test   BYTE PTR [ebp+0x74ce5210],bh
  416402:	test   BYTE PTR [edi+ecx*2+0x6d],bl
  416406:	jmp    0xb200:0xd50019c
  41640d:	cli    
  41640e:	inc    ecx
  41640f:	idiv   BYTE PTR [eax]
  416411:	push   es
  416412:	imul   esi,DWORD PTR [edi-0x48],0x6c8185be
  416419:	pop    ebp
  41641a:	out    dx,al
  41641b:	mov    ecx,0xf50d41d9
  416420:	push   0x4f
  416422:	mov    esi,0x9067bfdd
  416427:	aas    
  416428:	fcom   QWORD PTR [ebp-0x29]
  41642b:	push   ecx
  41642c:	or     eax,0xeb6e26de
  416431:	ret    
  416432:	aas    
  416433:	int    0xcd
  416435:	ss clc 
  416437:	jb     0x41648f
  416439:	out    dx,al
  41643a:	add    edi,edx
  41643c:	dec    esp
  41643d:	sti    
  41643e:	das    
  41643f:	push   ebx
  416440:	or     ecx,edx
  416442:	ret    
  416443:	jp     0x41643a
  416445:	mov    ecx,0x74ecbdf0
  41644a:	inc    ebx
  41644b:	sub    BYTE PTR [bp+si+0x49bc],bl
  416450:	std    
  416451:	xor    al,BYTE PTR [ebx-0x34083e36]
  416457:	sbb    al,0x8
  416459:	cs xor al,0xfb
  41645c:	ins    BYTE PTR es:[edi],dx
  41645d:	retf   
  41645e:	idiv   BYTE PTR [ecx]
  416460:	jns    0x4164a1
  416462:	lock dec ecx
  416464:	cmp    BYTE PTR [ecx],bl
  416466:	jp     0x4164e1
  416468:	sub    BYTE PTR [ecx],al
  41646a:	scas   al,BYTE PTR es:[edi]
  41646b:	mov    al,ds:0x6e57e3b7
  416470:	cmp    BYTE PTR [esi],0xe0
  416473:	mov    dh,0x93
  416475:	cs adc eax,0x7fc35d09
  41647b:	mov    ecx,0xdcea61ea
  416480:	std    
  416481:	lahf   
  416482:	shl    BYTE PTR [ecx],cl
  416484:	dec    ecx
  416485:	xor    eax,0x2bca9d48
  41648a:	aaa    
  41648b:	adc    bh,BYTE PTR [ebx-0x5f6efb10]
  416491:	mov    ?,WORD PTR [edi-0x1a79e2f4]
  416497:	arpl   WORD PTR ds:0xa8892857,bp
  41649d:	ins    DWORD PTR es:[edi],dx
  41649e:	xchg   esp,eax
  41649f:	aam    0xa9
  4164a1:	shl    BYTE PTR [edx+0x6ec0f6fe],1
  4164a7:	pop    ds
  4164a8:	std    
  4164a9:	mov    bh,0xfa
  4164ab:	push   ebp
  4164ac:	push   edi
  4164ad:	add    dl,BYTE PTR [ecx]
  4164af:	aam    0x56
  4164b1:	jmp    0x962a:0x12cdda81
  4164b8:	dec    ebx
  4164b9:	mov    eax,0x576c6748
  4164be:	push   ecx
  4164bf:	inc    ebp
  4164c0:	scas   eax,DWORD PTR es:[edi]
  4164c1:	push   es
  4164c2:	or     esp,esi
  4164c4:	imul   ebp,DWORD PTR [edx],0x3048cede
  4164ca:	shl    DWORD PTR [esi+0x7b4507f7],0x8a
  4164d1:	retf   
  4164d2:	mov    ch,0x15
  4164d4:	out    dx,al
  4164d5:	iret   
  4164d6:	mov    ecx,edi
  4164d8:	lods   al,BYTE PTR ds:[esi]
  4164d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164da:	push   ds
  4164db:	sar    cl,1
  4164dd:	inc    esi
  4164de:	xchg   DWORD PTR [edx],edi
  4164e0:	xchg   BYTE PTR [edx],bh
  4164e2:	call   FWORD PTR [ebx+0x556b485c]
  4164e8:	fist   DWORD PTR [eax-0x1805873e]
  4164ee:	(bad)  
  4164ef:	mov    ds,WORD PTR [ebp+0x1e58d11f]
  4164f5:	push   0x36
  4164f7:	and    ah,dl
  4164f9:	and    ebx,DWORD PTR [edx+edi*8-0x7a]
  4164fd:	aaa    
  4164fe:	sub    DWORD PTR [edi],edi
  416500:	pusha  
  416501:	shl    DWORD PTR [edx-0x31],0xba
  416505:	(bad)  
  416506:	ss enter 0x4b85,0x1b
  41650b:	in     eax,dx
  41650c:	xchg   bl,cl
  41650e:	or     al,0xa5
  416510:	(bad)  
  416511:	lds    ecx,FWORD PTR [edi+0x2baa9fbd]
  416517:	inc    esp
  416518:	inc    ebp
  416519:	or     al,0xeb
  41651b:	pop    ss
  41651c:	inc    ecx
  41651d:	leave  
  41651e:	xchg   ecx,eax
  41651f:	fninit 
  416521:	cmp    DWORD PTR [ebp-0x5c85e8bd],ebp
  416527:	hlt    
  416528:	xor    BYTE PTR [ebx+0x59],dh
  41652b:	sbb    eax,0xd9f2bb2e
  416530:	das    
  416531:	dec    eax
  416532:	nop
  416533:	push   es
  416534:	push   es
  416535:	(bad)  
  416537:	arpl   WORD PTR [edi],bx
  416539:	scas   al,BYTE PTR es:[edi]
  41653a:	push   edx
  41653b:	xchg   ebx,eax
  41653c:	in     eax,0x31
  41653e:	dec    eax
  41653f:	in     al,dx
  416540:	ja     0x416510
  416542:	mov    BYTE PTR [edx-0x5b6c0e99],0xbe
  416549:	cmp    ch,BYTE PTR cs:[ecx-0x2f]
  41654d:	xchg   ebp,eax
  41654e:	fadd   DWORD PTR [edx-0x4b]
  416551:	lea    ecx,[eax]
  416553:	retf   0xdcce
  416556:	mov    eax,0x99b5b397
  41655b:	lods   al,BYTE PTR ds:[esi]
  41655c:	das    
  41655d:	pushf  
  41655e:	jge    0x416569
  416560:	les    ebx,FWORD PTR [ecx+0x457ef9ec]
  416566:	pop    ds
  416567:	mov    edx,0x500f6469
  41656c:	es push esi
  41656e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41656f:	test   eax,0x4e88367e
  416574:	inc    edx
  416575:	cmp    BYTE PTR [esi-0xe],bl
  416578:	mov    bh,0x88
  41657a:	icebp  
  41657b:	or     ch,BYTE PTR [esi-0x6f1ab386]
  416581:	jbe    0x41650f
  416583:	scas   al,BYTE PTR es:[edi]
  416584:	lods   al,BYTE PTR ds:[esi]
  416585:	and    DWORD PTR [ebp-0x1],esp
  416588:	xchg   ecx,eax
  416589:	fs rcr esp,cl
  41658c:	pushf  
  41658d:	inc    ecx
  41658e:	xchg   DWORD PTR ds:0xe36dda6e,edx
  416594:	data16 mov al,ds:0x8960867
  41659a:	mov    esp,DWORD PTR [ebx]
  41659c:	xchg   esi,eax
  41659d:	dec    ecx
  41659e:	dec    edx
  41659f:	js     0x4165cf
  4165a1:	ds lahf 
  4165a3:	call   0x93ce:0x14901226
  4165aa:	push   esp
  4165ab:	and    eax,0x4855af52
  4165b0:	(bad)  
  4165b1:	in     al,dx
  4165b2:	shr    DWORD PTR [eax+eiz*1+0x2a317fa2],0x6c
  4165ba:	or     DWORD PTR [edx+0x34efd855],edi
  4165c0:	push   ebx
  4165c1:	sub    BYTE PTR [esi-0x605cb1b1],0x8f
  4165c8:	mov    edi,0xe15fa74d
  4165cd:	neg    BYTE PTR [eax+0x7e6ba380]
  4165d3:	push   0x104e29b4
  4165d8:	sbb    al,0xca
  4165da:	ins    BYTE PTR es:[edi],dx
  4165db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165dc:	leave  
  4165dd:	and    DWORD PTR [ebx+0x21717501],ebp
  4165e3:	push   ebp
  4165e4:	pop    edi
  4165e5:	(bad)  
  4165e6:	jge    0x416633
  4165e8:	xchg   ecx,eax
  4165e9:	pushf  
  4165ea:	inc    esi
  4165eb:	bound  ecx,QWORD PTR [ebx-0x3becbf70]
  4165f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165f2:	jbe    0x41659f
  4165f4:	ins    BYTE PTR es:[edi],dx
  4165f5:	scas   al,BYTE PTR es:[edi]
  4165f6:	nop
  4165f7:	scas   eax,DWORD PTR es:[edi]
  4165f8:	mov    dl,0xeb
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dh,BYTE PTR [ebx]
  416673:	sar    BYTE PTR [edi-0x4b],1
  416676:	(bad)  [ebx]
  416678:	popa   
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	mov    eax,ds:0xb46ae38f
  416683:	mov    bh,0xcd
  416685:	jnp    0x41664e
  416687:	mov    edx,0x34fe9a86
  41668c:	mov    dh,0xe1
  41668e:	jecxz  0x4166fa
  416690:	sub    DWORD PTR ds:0x17e603a9,ecx
  416696:	xchg   ebp,eax
  416697:	les    esp,FWORD PTR [ebx]
  416699:	mov    ax,0xb3e
  41669d:	mov    eax,0xff66f108
  4166a2:	bound  esp,QWORD PTR [edi+eax*8]
  4166a5:	xchg   ecx,eax
  4166a6:	sti    
  4166a7:	out    dx,eax
  4166a8:	les    edi,FWORD PTR es:[ebp+0x72952662]
  4166af:	clc    
  4166b0:	adc    esp,esp
  4166b2:	cs mov esi,0xc2644758
  4166b8:	fsubrp st(0),st
  4166ba:	mov    bl,0x96
  4166bc:	aad    0xc6
  4166be:	inc    esp
  4166bf:	sbb    DWORD PTR [eax+0x4910c301],0x32991fdd
  4166c9:	mov    bh,0xaa
  4166cb:	push   0x26c76dc2
  4166d0:	dec    ebp
  4166d1:	push   es
  4166d2:	or     BYTE PTR [ebx],ah
  4166d4:	fiadd  DWORD PTR [ecx]
  4166d6:	repnz mov eax,ds:0x26dc10eb
  4166dc:	sti    
  4166dd:	mov    WORD PTR [ebp+0x76],cs
  4166e0:	mov    bl,0xd9
  4166e2:	sar    dh,cl
  4166e4:	xor    DWORD PTR ds:0x4208b6d1,esi
  4166ea:	enter  0xe972,0x55
  4166ee:	add    DWORD PTR [ebp-0x1e],eax
  4166f1:	pop    ds
  4166f2:	ror    ah,cl
  4166f4:	pop    ebx
  4166f5:	dec    ebp
  4166f6:	mov    gs,WORD PTR [ebx+0x34]
  4166f9:	inc    edx
  4166fa:	mov    edx,DWORD PTR [eax+0x36]
  4166fd:	pop    esi
  4166fe:	ins    BYTE PTR es:[edi],dx
  4166ff:	test   DWORD PTR [eax+0x7a],edi
  416702:	aas    
  416703:	dec    dx
  416705:	daa    
  416706:	fisttp QWORD PTR [edx-0x77ea0464]
  41670c:	stos   BYTE PTR es:[edi],al
  41670d:	push   ds
  41670e:	jl     0x4166cc
  416710:	inc    ebp
  416711:	scas   eax,DWORD PTR es:[edi]
  416712:	pusha  
  416713:	cwde   
  416714:	sbb    ch,al
  416716:	mov    eax,ds:0x167251d8
  41671b:	sbb    bl,BYTE PTR [esi-0x4e]
  41671e:	sti    
  41671f:	jns    0x416771
  416721:	add    ch,BYTE PTR [ebx+0x149a280a]
  416727:	xchg   edx,eax
  416728:	sbb    edx,DWORD PTR [eax+0x62]
  41672b:	in     al,0x54
  41672d:	retf   0x8eff
  416730:	or     DWORD PTR [ebp+edx*8+0x38],esi
  416734:	std    
  416735:	xchg   edi,eax
  416736:	in     al,dx
  416737:	dec    edi
  416738:	dec    ecx
  41673a:	and    eax,0x3b0380ca
  41673f:	push   edx
  416740:	sbb    eax,0xdac4a990
  416745:	and    dl,BYTE PTR [esp+ebp*2+0x34a9f2dd]
  41674c:	xchg   edx,eax
  41674d:	adc    BYTE PTR [ecx+ecx*8],0x6a
  416751:	outs   dx,DWORD PTR ds:[esi]
  416752:	mov    fs,WORD PTR [ebp+eax*8-0x2b598c7b]
  416759:	clc    
  41675a:	pop    esi
  41675b:	bound  ebp,QWORD PTR [edx-0x15a41505]
  416761:	in     eax,dx
  416762:	mov    al,ds:0xd7e338a4
  416767:	inc    esp
  416768:	lods   al,BYTE PTR ds:[esi]
  416769:	dec    ebx
  41676a:	inc    esi
  41676b:	nop
  41676c:	xchg   ebp,eax
  41676d:	inc    esi
  41676e:	fcom   st(0)
  416770:	cdq    
  416771:	jb     0x416766
  416773:	jmp    0x41678e
  416775:	icebp  
  416776:	sub    BYTE PTR [ebx+0x2e4ca9fa],ah
  41677c:	xor    al,0x15
  41677e:	jno    0x4167e3
  416780:	and    BYTE PTR [eax-0x1d640d93],dl
  416786:	and    esp,edi
  416788:	jp     0x41670b
  41678a:	jbe    0x4167bd
  41678c:	xchg   BYTE PTR [eax+0x50],bl
  41678f:	adc    eax,0x3c4becb6
  416794:	inc    esp
  416795:	xlat   BYTE PTR ds:[ebx]
  416796:	xor    dh,BYTE PTR [bp+si-0x42]
  41679a:	lock push esi
  41679c:	push   eax
  41679d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679e:	je     0x41680c
  4167a0:	dec    esi
  4167a1:	or     eax,0x491015cc
  4167a6:	or     DWORD PTR [ebx],0xffffffae
  4167a9:	dec    edx
  4167aa:	inc    esp
  4167ab:	xor    DWORD PTR [edi+0x21],edi
  4167ae:	test   DWORD PTR [edi+ebx*2-0x6f9eb795],edi
  4167b5:	dec    ebx
  4167b6:	lahf   
  4167b7:	xor    eax,0x7de8b26b
  4167bc:	inc    eax
  4167bd:	pushf  
  4167be:	add    al,0x8e
  4167c0:	test   eax,0x849959e2
  4167c5:	out    0x57,al
  4167c7:	jge    0x416825
  4167c9:	loope  0x41680c
  4167cb:	lods   eax,DWORD PTR ds:[esi]
  4167cc:	dec    ebx
  4167cd:	int3   
  4167ce:	ret    0xe029
  4167d1:	outs   dx,BYTE PTR ds:[esi]
  4167d2:	mov    ds:0x11ebc567,al
  4167d7:	pop    ds
  4167d8:	rol    dh,1
  4167da:	aam    0xee
  4167dc:	aas    
  4167dd:	test   al,0xcf
  4167df:	and    eax,0x2c82f752
  4167e4:	or     eax,0xefb45a6b
  4167e9:	ret    
  4167ea:	mov    WORD PTR [edi-0x1cc3e37],ds
  4167f0:	cmp    eax,0xc17cf78c
  4167f5:	mov    al,ds:0x872c625f
  4167fa:	add    al,0xc4
  4167fc:	shl    DWORD PTR [esi],1
  4167fe:	mov    BYTE PTR [esi+edi*8+0x71],al
  416802:	cdq    
  416803:	jmp    0x837d:0xe3b52013
  41680a:	xor    DWORD PTR [edi],edx
  41680c:	test   BYTE PTR ds:0x37dd198a,dh
  416812:	clc    
  416813:	mov    ebx,cs
  416815:	out    0x74,eax
  416817:	adc    esp,DWORD PTR [edi-0x19fcac82]
  41681d:	in     eax,dx
  41681e:	lahf   
  41681f:	leave  
  416820:	scas   al,BYTE PTR es:[edi]
  416821:	add    cl,BYTE PTR [ecx+eiz*8+0x6e893701]
  416828:	and    dl,0x2b
  41682b:	push   ebp
  41682c:	inc    ebp
  41682d:	mov    eax,ds:0x920fcd60
  416832:	sti    
  416833:	mov    WORD PTR [edi+ebp*2+0x7577e1f5],gs
  41683a:	jne    0x416893
  41683c:	pushf  
  41683d:	xlat   BYTE PTR ds:[ebx]
  41683e:	cli    
  41683f:	dec    esp
  416840:	pop    ds
  416841:	loop   0x41687f
  416843:	out    dx,eax
  416844:	loop   0x4168ab
  416846:	or     ebp,ebx
  416848:	(bad)  
  416849:	out    dx,al
  41684a:	aad    0xdc
  41684c:	and    DWORD PTR [ebp+0x6c223696],ebx
  416852:	pop    es
  416853:	(bad)  
  416854:	leave  
  416855:	cmp    BYTE PTR [edx],0x29
  416858:	cmp    DWORD PTR [eax*4-0x327f454a],0xda728c68
  416863:	inc    ecx
  416864:	test   DWORD PTR [ebx],esp
  416866:	lea    esp,[eax+ebx*8]
  416869:	popf   
  41686a:	push   edx
  41686b:	shl    BYTE PTR [esi-0x95474ec],cl
  416871:	int    0x85
  416873:	iret   
  416874:	out    dx,al
  416875:	out    dx,al
  416876:	xchg   edx,eax
  416877:	push   eax
  416878:	(bad)  
  416879:	jge    0x416868
  41687b:	sbb    al,al
  41687d:	mov    al,0x3d
  41687f:	lock jle 0x4168b6
  416882:	inc    edx
  416883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416884:	or     DWORD PTR [ecx],ecx
  416886:	dec    esp
  416887:	stc    
  416888:	sbb    eax,0xadefb3bc
  41688d:	mov    al,0xd
  41688f:	sub    ah,ah
  416891:	add    eax,0x36110c10
  416896:	or     al,0x13
  416898:	inc    esp
  416899:	push   edi
  41689a:	enter  0x573,0x97
  41689e:	sbb    DWORD PTR es:[ebp+eax*1-0x1f410fa8],ebp
  4168a6:	fmul   DWORD PTR [esi+0x6623351d]
  4168ac:	cli    
  4168ad:	cli    
  4168ae:	or     ch,ah
  4168b0:	in     al,0x47
  4168b2:	mov    ds:0x90ad65e3,al
  4168b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b8:	or     DWORD PTR [ebp-0x2771d95],edx
  4168be:	fild   DWORD PTR [ecx+0x71]
  4168c1:	adc    al,0x1c
  4168c3:	sbb    cl,BYTE PTR [ecx+ebp*8-0x26]
  4168c7:	or     cl,BYTE PTR [ecx+0x7749d402]
  4168cd:	clc    
  4168ce:	add    bh,dh
  4168d0:	clc    
  4168d1:	(bad)  
  4168d2:	jb     0x416889
  4168d4:	cmp    bl,ah
  4168d6:	and    al,0xd3
  4168d8:	and    BYTE PTR [esi+0x7b],bl
  4168db:	call   0x9ddc6cbe
  4168e0:	shl    DWORD PTR [ebp-0x33a19c7d],1
  4168e6:	call   0xab7:0x267c07a5
  4168ed:	lea    esp,[eax+0x691d549b]
  4168f3:	lea    eax,[edx+0xe]
  4168f6:	idiv   DWORD PTR [edx+0x17]
  4168f9:	pop    esp
  4168fa:	mov    al,0x63
  4168fc:	push   ebp
  4168fd:	fadd   DWORD PTR [ecx-0x4efb98a8]
  416903:	adc    al,0xd5
  416905:	jecxz  0x416954
  416907:	repz and BYTE PTR [esi-0x35],0xee
  41690c:	or     DWORD PTR [eax+0x20df6f2d],ebp
  416912:	fidivr DWORD PTR [edi]
  416914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416915:	jns    0x41690d
  416917:	mov    ah,0x73
  416919:	pop    es
  41691a:	sbb    BYTE PTR [esi-0x5cf3c84d],dh
  416920:	fdivrp st(4),st
  416922:	mov    edx,0xacd755b5
  416927:	ins    BYTE PTR es:[edi],dx
  416928:	or     BYTE PTR es:[ecx],cl
  41692b:	add    DWORD PTR [ecx+0x144334f4],edx
  416931:	and    esp,DWORD PTR [eax+0x6a0f21f4]
  416937:	and    bl,bl
  416939:	dec    edi
  41693a:	call   0xe4ea:0x3399db40
  416941:	jle    0x41693d
  416943:	cmp    al,0xab
  416945:	stos   BYTE PTR es:[edi],al
  416946:	adc    eax,DWORD PTR [edx+ebp*8-0x57ee643c]
  41694d:	stos   DWORD PTR es:[edi],eax
  41694e:	pop    edx
  41694f:	sub    eax,0x7525103c
  416954:	out    0x2f,al
  416956:	sbb    al,0x83
  416958:	ret    0x81e7
  41695b:	shl    DWORD PTR [bx+si-0x3bc3],1
  416960:	jecxz  0x416999
  416962:	ret    0xb7ff
  416965:	je     0x4169d4
  416967:	call   0xd2d72edc
  41696c:	and    ebx,DWORD PTR [ecx]
  41696e:	push   esp
  41696f:	mov    edx,0xbc6a10e7
  416974:	lahf   
  416975:	cwde   
  416976:	or     DWORD PTR [esp+edi*4+0x4c],eax
  41697a:	js     0x41695a
  41697c:	sbb    bl,BYTE PTR [esp+eax*8]
  41697f:	(bad)  
  416980:	sub    al,0x3a
  416982:	push   cs
  416983:	stos   BYTE PTR es:[edi],al
  416984:	ja     0x41698b
  416986:	xor    al,dl
  416988:	daa    
  416989:	or     bl,BYTE PTR [eax-0x6a506e1]
  41698f:	xchg   BYTE PTR [esi+0x526baf56],cl
  416995:	inc    ebx
  416996:	mov    edi,0x678bf5ba
  41699b:	push   ecx
  41699c:	js     0x41699f
  41699e:	jnp    0x4169cf
  4169a0:	cmp    esi,DWORD PTR [eax-0x4d]
  4169a3:	stos   BYTE PTR es:[edi],al
  4169a4:	or     ecx,edi
  4169a6:	mov    bh,ch
  4169a8:	lds    eax,FWORD PTR [eax]
  4169aa:	hlt    
  4169ab:	dec    edi
  4169ac:	pop    edx
  4169ad:	lods   eax,DWORD PTR ds:[esi]
  4169ae:	dec    ecx
  4169af:	pop    eax
  4169b0:	ds es jmp 0x416987
  4169b4:	xor    dl,bl
  4169b6:	aas    
  4169b7:	mov    eax,ds:0xad466992
  4169bc:	xchg   edx,eax
  4169bd:	mov    cl,0x3e
  4169bf:	mov    al,ds:0xb63fa003
  4169c4:	sbb    DWORD PTR [esi+0x1d],ecx
  4169c7:	xor    ebp,DWORD PTR [edx-0x64]
  4169ca:	inc    ebx
  4169cb:	adc    eax,0x4513474c
  4169d0:	les    esp,FWORD PTR [esi]
  4169d2:	fst    QWORD PTR [ecx+0x76]
  4169d5:	lods   eax,DWORD PTR ds:[esi]
  4169d6:	rcl    BYTE PTR [esi],0xb7
  4169d9:	dec    ebx
  4169da:	sbb    BYTE PTR [ebx-0x53c8960d],ah
  4169e0:	fstp   st(2)
  4169e2:	mov    bl,0x98
  4169e4:	shl    bh,cl
  4169e6:	xchg   ebp,edi
  4169e8:	ins    DWORD PTR es:[edi],dx
  4169e9:	sub    ebp,DWORD PTR [edi+eiz*8]
  4169ec:	and    eax,0x26191660
  4169f1:	enter  0x2f92,0x33
  4169f5:	inc    eax
  4169f6:	pop    ecx
  4169f7:	and    al,0xa0
  4169f9:	in     eax,0xb0
  4169fb:	sub    eax,DWORD PTR [ebx]
  4169fd:	xchg   esi,eax
  4169fe:	stc    
  4169ff:	inc    dh
  416a01:	pop    ebx
  416a02:	stc    
  416a03:	dec    edi
  416a04:	fs mov cl,0x77
  416a07:	sbb    al,0xc5
  416a09:	pop    ecx
  416a0a:	aaa    
  416a0b:	(bad)  
  416a0c:	sahf   
  416a0d:	mov    eax,ebx
  416a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a10:	outs   dx,DWORD PTR ds:[esi]
  416a11:	pushf  
  416a12:	lahf   
  416a13:	les    ebp,FWORD PTR [edx-0x19]
  416a16:	cli    
  416a17:	jnp    0x416a5a
  416a19:	es iret 
  416a1b:	out    0xfb,eax
  416a1d:	xor    al,ch
  416a1f:	leave  
  416a20:	pop    ebx
  416a21:	sub    DWORD PTR [ebx+eiz*4-0x61b8440a],0x7615aef4
  416a2c:	cld    
  416a2d:	and    eax,0xa7938698
  416a32:	fld    DWORD PTR [ebp-0x1c24e58d]
  416a38:	mov    BYTE PTR [ecx],ah
  416a3a:	add    BYTE PTR [esi],bh
  416a3c:	addr16 mov dl,0xd8
  416a3f:	adc    al,BYTE PTR [esi+0x75]
  416a42:	inc    esp
  416a43:	lea    eax,[edx+eax*1+0x2fa28906]
  416a4a:	sub    al,0x37
  416a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a4e:	(bad)  
  416a4f:	daa    
  416a50:	les    ecx,FWORD PTR [ebp-0x27c906c8]
  416a56:	aam    0x3d
  416a58:	or     ah,dl
  416a5a:	cli    
  416a5b:	dec    edx
  416a5c:	fsub   st,st(3)
  416a5e:	sbb    ecx,DWORD PTR [edx+0x1b3f1f2e]
  416a64:	push   esi
  416a65:	int    0xed
  416a67:	sub    eax,0x329af62b
  416a6c:	cwde   
  416a6d:	adc    ecx,0x18
  416a70:	xchg   ecx,eax
  416a71:	add    ebp,DWORD PTR [edx]
  416a73:	xchg   edi,eax
  416a74:	sti    
  416a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a76:	scas   al,BYTE PTR es:[edi]
  416a77:	pop    es
  416a78:	mov    esp,0x6a8aa560
  416a7d:	int3   
  416a7e:	adc    eax,0xcbf059d4
  416a83:	xor    eax,0x6348b8ed
  416a88:	xchg   ecx,eax
  416a89:	cwde   
  416a8a:	test   al,0xa3
  416a8c:	and    BYTE PTR [edx-0x6f],ah
  416a8f:	sbb    al,BYTE PTR [ebx]
  416a91:	lock fwait
  416a93:	call   0x886c:0xd21cecdd
  416a9a:	cmp    eax,edx
  416a9c:	add    DWORD PTR [eax],ebp
  416a9e:	outs   dx,BYTE PTR ds:[esi]
  416a9f:	addr16 pop eax
  416aa1:	jno    0x416aa5
  416aa3:	jmp    0x9ce:0x29484bc
  416aaa:	sub    edi,DWORD PTR [esi+0x52a441fd]
  416ab0:	jg     0x416a34
  416ab2:	ins    DWORD PTR es:[edi],dx
  416ab3:	vpsubq xmm3,xmm4,XMMWORD PTR [esi+eiz*4-0xa]
  416ab9:	sub    DWORD PTR [ebp-0x3c],0x3d4dc175
  416ac0:	adc    ebx,ecx
  416ac2:	add    edx,esp
  416ac4:	jecxz  0x416a64
  416ac6:	and    eax,esi
  416ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac9:	and    dl,al
  416acb:	loope  0x416b22
  416acd:	jmp    0x4b17:0x181c8ffb
  416ad4:	bound  esi,QWORD PTR [ecx]
  416ad6:	xchg   ebp,eax
  416ad7:	or     DWORD PTR [ebx],ecx
  416ad9:	mov    ebx,DWORD PTR [edx]
  416adb:	jne    0x416a88
  416add:	test   DWORD PTR [ebx],esi
  416adf:	retf   0x9cf8
  416ae2:	push   ebp
  416ae3:	daa    
  416ae4:	inc    eax
  416ae5:	cmc    
  416ae6:	(bad)  
  416ae7:	adc    cl,BYTE PTR [ecx-0x55]
  416aea:	xchg   esi,eax
  416aeb:	jp     0x416a93
  416aed:	push   eax
  416aee:	(bad)  
  416aef:	jb     0x416b6e
  416af1:	and    eax,DWORD PTR [esi+0x4b586422]
  416af7:	mov    dl,0xbe
  416af9:	xchg   edx,eax
  416afa:	dec    ecx
  416afb:	pop    edi
  416afc:	mov    BYTE PTR [esi-0x39dfc120],ah
  416b02:	std    
  416b03:	cmp    al,0xb9
  416b05:	mov    ebx,0x16bb8e4d
  416b0a:	xor    esi,DWORD PTR [ebx]
  416b0c:	data16 jle 0x416a93
  416b0f:	(bad)  
  416b10:	ret    
  416b11:	add    cl,BYTE PTR [edi]
  416b13:	mov    bh,0x84
  416b15:	lock mov edx,ebx
  416b18:	jmp    0xfd6c1ec0
  416b1d:	mov    eax,cs
  416b1f:	std    
  416b20:	mov    ah,0x47
  416b22:	xchg   edx,eax
  416b23:	jne    0x416b20
  416b25:	sub    BYTE PTR [edx],ch
  416b27:	shl    BYTE PTR [ebx-0x4604cf1b],cl
  416b2d:	leave  
  416b2e:	and    dh,dl
  416b30:	cwde   
  416b31:	and    al,0x18
  416b33:	popa   
  416b34:	lods   al,BYTE PTR ds:[esi]
  416b35:	cdq    
  416b36:	xchg   edi,eax
  416b37:	mov    esp,cs
  416b39:	leave  
  416b3a:	inc    DWORD PTR [eax+ecx*4-0x5d]
  416b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b3f:	jp     0x416b93
  416b41:	mov    ebp,0x4991d5f9
  416b46:	push   ecx
  416b47:	in     eax,dx
  416b48:	jns    0x416b49
  416b4a:	lds    edi,FWORD PTR [esi-0x74]
  416b4d:	ret    
  416b4e:	dec    edx
  416b4f:	sti    
  416b50:	imul   ecx,DWORD PTR [ecx+0xf],0x32ce44c1
  416b57:	push   ecx
  416b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b59:	loope  0x416ba9
  416b5b:	adc    eax,0x5ee80a1
  416b60:	sub    al,0x1b
  416b62:	pop    ecx
  416b63:	dec    edx
  416b64:	xchg   ecx,eax
  416b65:	xchg   DWORD PTR [edx],ecx
  416b67:	and    DWORD PTR [eax+0x2c],0xffffff89
  416b6b:	sub    BYTE PTR [esi+0x20],0x31
  416b6f:	(bad)  
  416b70:	jmp    0x5132ad5b
  416b75:	push   ss
  416b76:	ret    
  416b77:	mov    bh,0x53
  416b79:	in     al,dx
  416b7a:	mov    BYTE PTR [edx+edi*2-0x63cf0ed8],bl
  416b81:	sub    eax,0xe0aa74ad
  416b86:	cmp    edi,ebp
  416b88:	cld    
  416b89:	mov    ds,esp
  416b8b:	pop    ds
  416b8c:	(bad)  
  416b8d:	(bad)  
  416b8e:	dec    ecx
  416b8f:	adc    al,0xd7
  416b91:	add    bl,BYTE PTR [ebx]
  416b93:	jo     0x416bf1
  416b95:	and    bh,BYTE PTR [edx]
  416b97:	loop   0x416b9d
  416b99:	fimul  DWORD PTR [ecx+0x54]
  416b9c:	mov    eax,ds:0xca5a86ea
  416ba1:	test   al,0xde
  416ba3:	xchg   esp,eax
  416ba4:	mov    al,ds:0xbd8255e3
  416ba9:	adc    bl,ah
  416bab:	inc    ebx
  416bac:	pop    eax
  416bad:	fst    QWORD PTR [eax+0x1b]
  416bb0:	inc    edx
  416bb1:	(bad)  
  416bb2:	push   ds
  416bb3:	adc    cl,dh
  416bb5:	(bad)  
  416bb6:	jg     0x416c10
  416bb8:	out    dx,eax
  416bb9:	adc    BYTE PTR [edi+edx*1+0x39],ch
  416bbd:	mul    BYTE PTR [eax]
  416bbf:	inc    esp
  416bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bc1:	icebp  
  416bc2:	scas   al,BYTE PTR es:[edi]
  416bc3:	in     al,0x4f
  416bc5:	pop    edx
  416bc6:	xor    eax,0xeba3ca82
  416bcb:	inc    ebx
  416bcc:	adc    eax,0x5a7e04dd
  416bd1:	sbb    DWORD PTR [ebx+eax*8],ebx
  416bd4:	mov    BYTE PTR [eax],dl
  416bd6:	sbb    DWORD PTR [ecx+0x17],ebp
  416bd9:	mov    eax,0x41a6d9c4
  416bde:	int3   
  416bdf:	ret    0xceeb
  416be2:	sbb    eax,0xf832e2e9
  416be7:	cld    
  416be8:	jmp    0xd215eeb4
  416bed:	adc    BYTE PTR [ebp+0x50],cl
  416bf0:	add    esi,DWORD PTR [edi+esi*4]
  416bf3:	fistp  DWORD PTR [eax+edx*8-0x2a]
  416bf7:	call   0x4f98:0xb6a2261d
  416bfe:	mov    bh,0x3e
  416c00:	lock xlat BYTE PTR gs:[ebx]
  416c03:	sub    DWORD PTR [edx+0x4e4f2d5e],0xffffffe9
  416c0a:	popf   
  416c0b:	int3   
  416c0c:	inc    ebp
  416c0d:	pop    ss
  416c0e:	js     0x416bde
  416c10:	pop    ds
  416c11:	ret    
  416c12:	mov    ch,0xe0
  416c14:	xchg   esi,eax
  416c15:	mov    ds:0xb5b9a935,eax
  416c1a:	mov    ds:0xfb98f794,al
  416c1f:	sti    
  416c20:	or     ebp,ebx
  416c22:	aam    0x7
  416c24:	sbb    eax,0xb7f2de18
  416c29:	sbb    BYTE PTR [ebp-0x6688c962],0xa1
  416c30:	ja     0x416bc3
  416c32:	pop    ds
  416c33:	pop    esp
  416c34:	pop    esi
  416c35:	or     esi,DWORD PTR [edi]
  416c37:	jp     0x416c33
  416c39:	das    
  416c3a:	add    eax,0xc8d95d29
  416c3f:	cmp    al,0xd6
  416c41:	fistp  QWORD PTR [esi+ecx*1]
  416c44:	adc    ebp,esp
  416c46:	xchg   DWORD PTR [edx+0x11],edx
  416c49:	rcr    DWORD PTR [ebp+0x40],0x61
  416c4d:	xor    al,0x5d
  416c4f:	cmp    eax,0x20563249
  416c54:	fisttp QWORD PTR [eax+edi*2-0x7e99143a]
  416c5b:	pop    es
  416c5c:	xchg   edi,eax
  416c5d:	xor    ah,bh
  416c5f:	dec    esi
  416c60:	retf   0x7bfd
  416c63:	aam    0xd0
  416c65:	add    bh,ch
  416c67:	lea    edx,[edi-0x2a]
  416c6a:	inc    ebx
  416c6b:	xchg   edx,eax
  416c6c:	mov    WORD PTR [eax+edi*8],es
  416c6f:	xchg   ebp,eax
  416c70:	scas   al,BYTE PTR es:[edi]
  416c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c72:	sti    
  416c73:	sbb    BYTE PTR [edi],bh
  416c75:	pusha  
  416c76:	adc    ah,BYTE PTR [edi-0x6ebec931]
  416c7c:	jge    0x416c32
  416c7e:	and    DWORD PTR [ecx-0x34],edx
  416c81:	mov    al,0x9d
  416c83:	inc    ecx
  416c84:	ins    DWORD PTR es:[edi],dx
  416c85:	leave  
  416c86:	and    bl,bh
  416c88:	push   ebx
  416c89:	mov    DWORD PTR [ecx+0x4aa1faf2],edi
  416c8f:	xor    al,0x79
  416c91:	mov    bh,0x48
  416c93:	(bad)  
  416c94:	repz xchg edi,eax
  416c96:	mov    WORD PTR [ebp-0x66],fs
  416c99:	div    DWORD PTR [edi+0x67]
  416c9c:	into   
  416c9d:	test   ebp,edx
  416c9f:	push   cs
  416ca0:	mov    edi,0xc097821d
  416ca5:	mov    dh,0x7e
  416ca7:	inc    edx
  416ca8:	mov    ?,WORD PTR ds:0x86e13ba8
  416cae:	fsubr  QWORD PTR [ebp-0x73]
  416cb1:	(bad)  
  416cb2:	repz jge 0x416d0d
  416cb5:	call   0xe13a4dfd
  416cba:	dec    ebp
  416cbb:	jle    0x416ca4
  416cbd:	(bad)  
  416cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cbf:	dec    esp
  416cc0:	in     al,dx
  416cc1:	outs   dx,BYTE PTR ds:[esi]
  416cc2:	mov    ch,0x42
  416cc4:	xor    eax,0x574ba0f7
  416cc9:	mov    esi,0x7ee65098
  416cce:	aas    
  416ccf:	pop    ebp
  416cd0:	pop    esi
  416cd1:	xchg   edi,eax
  416cd2:	push   0xfffffffb
  416cd4:	ins    DWORD PTR es:[edi],dx
  416cd5:	xchg   BYTE PTR ds:0xd6ae908c,al
  416cdb:	mov    ds:0xd7fd66c5,al
  416ce0:	jg     0x416cb4
  416ce2:	pusha  
  416ce3:	inc    esi
  416ce4:	jb     0x416c66
  416ce6:	(bad)  
  416ce7:	cmp    al,0x6f
  416ce9:	out    dx,al
  416cea:	imul   edx,DWORD PTR [esi+0x74eeaa3d],0x47560d32
  416cf4:	jno    0x416ce4
  416cf6:	shl    BYTE PTR [ecx-0x17],0xc
  416cfa:	lods   eax,DWORD PTR ds:[esi]
  416cfb:	inc    ecx
  416cfc:	cs (bad) 
  416cfe:	and    esi,DWORD PTR [edx]
  416d00:	das    
  416d01:	call   0xce38:0x1d309ad1
  416d08:	rcl    DWORD PTR [edi+0x3b],1
  416d0b:	mov    ecx,0x46845cb9
  416d10:	mov    dh,0x4b
  416d12:	add    ah,BYTE PTR [edi]
  416d14:	into   
  416d15:	test   DWORD PTR [edi+ebp*1+0x43],esi
  416d19:	mov    dl,0x99
  416d1b:	das    
  416d1c:	loope  0x416cef
  416d1e:	cmp    DWORD PTR [edi-0x74156186],ebx
  416d24:	sbb    DWORD PTR [esi-0x2d8e1cd1],ecx
  416d2a:	cwde   
  416d2b:	imul   DWORD PTR [edx]
  416d2d:	and    al,0xdb
  416d2f:	mov    ecx,0x3f906fc1
  416d34:	jns    0x416d9c
  416d36:	adc    al,0xb7
  416d38:	xchg   ebp,eax
  416d39:	sbb    al,0x3c
  416d3b:	xchg   BYTE PTR [edi],dl
  416d3d:	fsub   QWORD PTR [eax]
  416d3f:	and    al,0x2
  416d41:	daa    
  416d42:	xor    al,0xec
  416d44:	fiadd  DWORD PTR [edi-0x5ac91da1]
  416d4a:	out    0xe9,eax
  416d4c:	add    DWORD PTR [ebp+0x44f44668],0xffffffd2
  416d53:	push   es
  416d54:	adc    al,0x44
  416d56:	sbb    ebx,DWORD PTR [edx-0x177fb78c]
  416d5c:	pop    edx
  416d5d:	sbb    al,BYTE PTR [esi]
  416d5f:	and    al,0x12
  416d61:	cli    
  416d62:	jae    0x416d96
  416d64:	out    0x70,al
  416d66:	ins    BYTE PTR es:[edi],dx
  416d67:	fwait
  416d68:	adc    BYTE PTR [ebx-0x53],ah
  416d6b:	dec    edx
  416d6c:	mov    dh,0xf3
  416d6e:	sbb    BYTE PTR [edi-0x21],ch
  416d71:	(bad)  [edi+ecx*1-0x380149d1]
  416d78:	or     DWORD PTR ds:0x5a98b85a,esi
  416d7e:	mov    eax,0x78926bc8
  416d83:	xchg   edi,eax
  416d84:	(bad)  
  416d85:	out    dx,eax
  416d86:	pop    ecx
  416d87:	retf   0x6697
  416d8a:	jne    0x416db9
  416d8c:	dec    esi
  416d8d:	nop
  416d8e:	lahf   
  416d8f:	adc    DWORD PTR gs:[edx],esi
  416d92:	mov    dh,0xbe
  416d94:	test   BYTE PTR [ebx-0x562e0144],cl
  416d9a:	sub    DWORD PTR [ebp+0x32],eax
  416d9d:	add    dh,BYTE PTR [ecx]
  416d9f:	arpl   WORD PTR [ecx],dx
  416da1:	shl    BYTE PTR [esi+edi*2+0x7aab8cd0],0x20
  416da9:	cs pushf 
  416dab:	lds    esi,FWORD PTR [edx+0x4d25c208]
  416db1:	sbb    eax,0x7af6da2e
  416db6:	push   ss
  416db7:	mov    ds,WORD PTR [esi]
  416db9:	push   0xffffff9a
  416dbb:	jnp    0x416dc0
  416dbd:	jne    0x416ddd
  416dbf:	inc    ecx
  416dc0:	pushf  
  416dc1:	xlat   BYTE PTR ds:[ebx]
  416dc2:	inc    cl
  416dc4:	mov    ecx,0x36c8647e
  416dc9:	mov    eax,0x4c2f86aa
  416dce:	ret    0xbef6
  416dd1:	pop    ecx
  416dd2:	mov    cl,0xaa
  416dd4:	push   ecx
  416dd5:	out    dx,eax
  416dd6:	xor    cl,bh
  416dd8:	jmp    0x4074:0x22a9e024
  416ddf:	fucom  st(4)
  416de1:	pop    ebp
  416de2:	scas   al,BYTE PTR es:[edi]
  416de3:	dec    edx
  416de4:	cmc    
  416de5:	scas   al,BYTE PTR es:[edi]
  416de6:	mov    al,0xa4
  416de8:	jnp    0x416dc3
  416dea:	mov    bh,0x9c
  416dec:	retf   0xf9d2
  416def:	aas    
  416df0:	call   0xf95e:0xc77aef36
  416df7:	or     al,0x29
  416df9:	mov    ecx,0x139ed0bd
  416dfe:	jnp    0x416e28
  416e00:	int    0x94
  416e02:	(bad)  
  416e03:	outs   dx,DWORD PTR ds:[esi]
  416e04:	mov    ebp,cs
  416e06:	mov    DWORD PTR [eax-0xd],0xf0f0a830
  416e0d:	ret    0xb048
  416e10:	iret   
  416e11:	(bad)  
  416e12:	mov    eax,0x62fe0251
  416e17:	xchg   ebx,eax
  416e18:	mov    ah,0x34
  416e1a:	retf   
  416e1b:	jp     0x416e49
  416e1d:	fstp   DWORD PTR [edi]
  416e1f:	mov    eax,0x3295b95a
  416e24:	xor    BYTE PTR [esi-0x39],0x75
  416e28:	outs   dx,BYTE PTR ds:[esi]
  416e29:	or     al,0xe5
  416e2b:	jb     0x416deb
  416e2d:	mov    ah,0xc8
  416e2f:	es out dx,eax
  416e31:	xchg   eax,ecx
  416e33:	jl     0x416e89
  416e35:	ret    
  416e36:	loop   0x416df4
  416e38:	out    0xba,eax
  416e3a:	test   cl,ch
  416e3c:	mov    es,WORD PTR [ebp-0x2cc15f7f]
  416e42:	mov    esi,0xdc9d6756
  416e47:	(bad)  
  416e48:	xchg   edi,eax
  416e49:	sbb    bl,ch
  416e4b:	xchg   ebp,eax
  416e4c:	mov    eax,ds:0x415c2a6c
  416e51:	jmp    esi
  416e53:	lods   al,BYTE PTR ds:[esi]
  416e54:	inc    DWORD PTR [edi+0x5]
  416e57:	and    bh,0x88
  416e5a:	repnz imul ebp,DWORD PTR [ebx],0x125742b3
  416e61:	pop    ebx
  416e62:	enter  0x907c,0x3e
  416e66:	rcr    DWORD PTR [edx+eax*4],1
  416e69:	rcr    DWORD PTR [ecx+0x6b],1
  416e6c:	xchg   BYTE PTR [edx+0x25],bh
  416e6f:	out    0x66,al
  416e71:	lods   al,BYTE PTR es:[esi]
  416e73:	das    
  416e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e75:	les    ecx,FWORD PTR [edx]
  416e77:	jge    0x416e73
  416e79:	push   es
  416e7a:	jp     0x416ea2
  416e7c:	jecxz  0x416ef2
  416e7e:	push   eax
  416e7f:	loopne 0x416ef5
  416e81:	add    bl,bl
  416e83:	cmc    
  416e84:	jecxz  0x416e9e
  416e86:	jmp    0x92a0:0x18b0d80f
  416e8d:	(bad)  
  416e8e:	mov    ecx,0x96b54b1
  416e93:	xchg   ebx,eax
  416e94:	daa    
  416e95:	adc    BYTE PTR [edi-0x31dd8ff8],ch
  416e9b:	shl    ebp,1
  416e9d:	inc    esi
  416e9e:	jl     0x416e22
  416ea0:	or     eax,0xa9ee9f3e
  416ea5:	cld    
  416ea6:	add    esp,esp
  416ea8:	xor    al,0xce
  416eaa:	jmp    0x416edc
  416eac:	inc    esi
  416ead:	sbb    DWORD PTR [edi-0x2adffb6b],esp
  416eb3:	sti    
  416eb4:	mov    eax,ds:0x13e278a6
  416eb9:	sub    ch,BYTE PTR [ebp+edi*2+0xd]
  416ebd:	jp     0x416f32
  416ebf:	rcl    DWORD PTR [ebx-0x68b3cdd7],0xb
  416ec6:	adc    al,0x2c
  416ec8:	in     eax,dx
  416ec9:	shl    DWORD PTR [esi-0x637a78b2],0x28
  416ed0:	mov    dl,0x4d
  416ed2:	lods   eax,DWORD PTR ds:[esi]
  416ed3:	jb     0x416ef8
  416ed5:	ror    ecx,0x2c
  416ed8:	cmp    eax,0x721456a3
  416edd:	inc    eax
  416ede:	mov    eax,ss:0xfee8c712
  416ee4:	mov    ebp,0xede24ed0
  416ee9:	inc    ebp
  416eea:	mov    ds:0xab95f9d6,eax
  416eef:	mov    ecx,0x76a3c004
  416ef4:	xor    BYTE PTR [edx+0x59],ah
  416ef7:	shr    BYTE PTR [eax-0xd],1
  416efa:	dec    esp
  416efb:	dec    esp
  416efc:	enter  0x7e8c,0x5
  416f00:	cmp    DWORD PTR [edi-0x56],esp
  416f03:	mov    bl,0x73
  416f05:	ret    0x892
  416f08:	push   edx
  416f09:	gs retf 
  416f0b:	pusha  
  416f0c:	fadd   DWORD PTR [esi+ebx*8-0x19]
  416f10:	push   ss
  416f11:	push   eax
  416f12:	lods   al,BYTE PTR ds:[esi]
  416f13:	inc    edi
  416f14:	push   ds
  416f15:	stos   BYTE PTR es:[edi],al
  416f16:	std    
  416f17:	xor    BYTE PTR [edi],dl
  416f19:	in     al,0xb6
  416f1b:	cmp    DWORD PTR [edi+0xf],ebp
  416f1e:	(bad)  
  416f1f:	pushf  
  416f20:	sbb    eax,0x749ca8d9
  416f25:	in     al,0x59
  416f27:	jne    0x416edc
  416f29:	dec    eax
  416f2a:	mov    ebx,0x90a58bf2
  416f2f:	sub    BYTE PTR [edi],al
  416f31:	sbb    al,0x3c
  416f33:	adc    eax,0x5da16f54
  416f38:	push   0xf0e7bab9
  416f3d:	inc    edx
  416f3e:	lock sub bl,al
  416f41:	leave  
  416f42:	inc    edi
  416f43:	dec    eax
  416f44:	in     al,0xf3
  416f46:	push   ss
  416f47:	mov    eax,0x10d1a9e
  416f4c:	jg     0x416f80
  416f4e:	push   es
  416f4f:	(bad)  
  416f50:	cmp    eax,0xd3881129
  416f55:	ins    DWORD PTR es:[edi],dx
  416f56:	mov    fs,esi
  416f58:	(bad)  
  416f59:	(bad)  
  416f5b:	fwait
  416f5c:	mov    al,ds:0xec610e0b
  416f61:	mov    ebp,0xbc98eaf7
  416f66:	repz cmp dh,BYTE PTR [ebx-0xf]
  416f6a:	and    BYTE PTR [ebx+edi*1-0x7e],ch
  416f6e:	jnp    0x416f5b
  416f70:	mov    dh,ch
  416f72:	test   BYTE PTR [ebp-0x18],bh
  416f75:	mov    eax,DWORD PTR [ecx+0x47e3acdf]
  416f7b:	je     0x416f74
  416f7d:	jle    0x416f81
  416f7f:	dec    ebp
  416f80:	and    al,0xc0
  416f82:	xlat   BYTE PTR ds:[ebx]
  416f83:	inc    edi
  416f84:	and    eax,0xecb94a3c
  416f89:	or     ah,al
  416f8b:	pop    ebx
  416f8c:	mov    ah,0xc
  416f8e:	fwait
  416f8f:	adc    eax,0x436bfa76
  416f94:	js     0x416f32
  416f96:	fmul   QWORD PTR [ebx+0x27]
  416f99:	addr16 dec esi
  416f9b:	and    BYTE PTR [ebx+0x58],dh
  416f9e:	add    al,0x55
  416fa0:	inc    esp
  416fa1:	daa    
  416fa2:	adc    DWORD PTR [ebp+0x45],ebp
  416fa5:	mov    bl,0x9d
  416fa7:	in     eax,dx
  416fa8:	test   BYTE PTR [edx+0x7b],bl
  416fab:	rol    BYTE PTR [ecx-0x77fc2b3a],cl
  416fb1:	mov    dl,bh
  416fb3:	dec    ebx
  416fb4:	xchg   ecx,eax
  416fb5:	mov    al,0x27
  416fb7:	ror    BYTE PTR [edx+0xd1cd0f5],0x39
  416fbe:	jno    0x416f71
  416fc0:	pop    ss
  416fc1:	lock je 0x416f7b
  416fc4:	data16 (bad) [edx+0x39]
  416fc8:	pop    es
  416fc9:	inc    esi
  416fca:	leave  
  416fcb:	imul   ebp,ecx,0x903bf8cc
  416fd1:	sbb    edx,edx
  416fd3:	stos   DWORD PTR es:[edi],eax
  416fd4:	(bad)  
  416fd5:	lock sub BYTE PTR [edx-0x169b0e1d],dl
  416fdc:	adc    bh,dl
  416fde:	(bad)  
  416fdf:	in     al,dx
  416fe0:	mov    BYTE PTR [eax-0x5a0909a6],al
  416fe6:	mov    BYTE PTR [edx-0x7712a4b6],ch
  416fec:	(bad)  
  416fed:	gs jae 0x41704b
  416ff0:	and    eax,0xcd890693
  416ff5:	jge    0x41703c
  416ff7:	push   es
  416ff8:	cmp    al,0xb7
  416ffa:	sahf   
  416ffb:	call   FWORD PTR [ebx-0x75e70659]
  417001:	pop    edi
  417002:	ins    DWORD PTR es:[edi],dx
  417003:	push   esi
  417004:	gs sahf 
  417006:	push   ebp
  417007:	call   0x6c066685
  41700c:	xchg   ecx,eax
  41700d:	mov    edi,eax
  41700f:	call   0x4cf3:0x84efaf8d
  417016:	jle    0x41701d
  417018:	and    DWORD PTR [ebx+0x2],0xe9b455d2
  41701f:	xor    eax,0xe179db7b
  417024:	out    0x74,eax
  417026:	fidiv  DWORD PTR [edi+eiz*1-0x37791cb6]
  41702d:	neg    BYTE PTR [ebp+0x21]
  417030:	sub    eax,0x8d5abf53
  417035:	or     eax,edx
  417037:	push   esi
  417038:	inc    ebp
  417039:	in     eax,0x21
  41703b:	aaa    
  41703c:	pop    edi
  41703d:	jmp    0x416fc1
  41703f:	jns    0x41705e
  417041:	std    
  417042:	sbb    DWORD PTR [eax],edi
  417044:	cli    
  417045:	and    eax,0xda634573
  41704a:	in     eax,0x57
  41704c:	ja     0x417043
  41704e:	cmc    
  41704f:	fstp   DWORD PTR [esi+0x10ed4bbb]
  417055:	iret   
  417056:	ror    DWORD PTR [ecx+0x6b312408],0xb2
  41705d:	and    DWORD PTR [edx+0x7830c212],ebp
  417063:	xlat   BYTE PTR ds:[ebx]
  417064:	ffree  st(4)
  417066:	test   BYTE PTR [ecx-0x7c],al
  417069:	dec    esp
  41706a:	mov    al,BYTE PTR [ebx]
  41706c:	mov    ebp,0xedabc60f
  417071:	sub    ebp,DWORD PTR ss:[edi-0x3]
  417075:	jg     0x41702a
  417077:	not    DWORD PTR [ebx+0x3b]
  41707a:	shr    DWORD PTR [ecx],1
  41707c:	outs   dx,DWORD PTR ds:[esi]
  41707d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41707f:	or     al,0xc4
  417081:	jae    0x4170e9
  417083:	mul    DWORD PTR [edx]
  417085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417086:	mov    ebx,0xc0b92b8c
  41708b:	pusha  
  41708c:	sbb    al,0x65
  41708e:	cmp    esp,esp
  417090:	cmp    ah,dl
  417092:	jmp    0xb57764f1
  417097:	cmp    esp,ebp
  417099:	add    bl,ah
  41709b:	mov    ds:0xe93287e3,al
  4170a0:	mov    DWORD PTR [ecx],ebx
  4170a2:	int    0xcd
  4170a4:	sbb    eax,0xa8e7bed6
  4170a9:	cmp    al,bh
  4170ab:	jne    0x41711d
  4170ad:	cmp    ebx,edx
  4170af:	je     0x417126
  4170b1:	and    al,0x4b
  4170b3:	test   eax,0x8a5b1a6a
  4170b8:	jg     0x417081
  4170ba:	xchg   edi,eax
  4170bb:	cli    
  4170bc:	sar    DWORD PTR [edx],1
  4170be:	ja     0x4170c1
  4170c0:	mov    ch,0x4b
  4170c2:	or     DWORD PTR [eax+ebx*4],0x71
  4170c6:	push   eax
  4170c7:	fsub   st(3),st
  4170c9:	or     dl,BYTE PTR [eax-0x6f]
  4170cc:	fcmovu st,st(0)
  4170ce:	jb     0x4170de
  4170d0:	xor    BYTE PTR [edx-0x450949c2],bh
  4170d6:	sub    al,BYTE PTR [edx+0x7929fed7]
  4170dc:	push   ss
  4170dd:	and    eax,0xb2c4ccbf
  4170e2:	(bad)  
  4170e3:	fidivr DWORD PTR [ebx-0x73]
  4170e6:	sub    BYTE PTR [edx-0x2b],dl
  4170e9:	cdq    
  4170ea:	push   edx
  4170eb:	clc    
  4170ec:	mov    ds:0x378d797d,eax
  4170f1:	mul    DWORD PTR [eax]
  4170f3:	stos   DWORD PTR es:[edi],eax
  4170f4:	je     0x417127
  4170f6:	mov    dh,0x35
  4170f8:	sub    eax,0x1fcf76ab
  4170fd:	outs   dx,BYTE PTR ds:[esi]
  4170fe:	test   al,0xaf
  417100:	cmp    eax,0x86a0a6c3
  417105:	mov    ecx,0x6fc47a6d
  41710a:	push   eax
  41710b:	aad    0x2c
  41710d:	lahf   
  41710e:	push   ebx
  41710f:	or     dh,BYTE PTR [eax+0x10]
  417112:	push   ebx
  417113:	mov    edi,0x13b3f90d
  417118:	cdq    
  417119:	aas    
  41711a:	(bad)  
  41711b:	adc    ecx,DWORD PTR [ecx+0x57]
  41711e:	fisubr WORD PTR [eax+0x7c]
  417121:	adc    BYTE PTR [ebx+0x162bd6e9],dh
  417127:	ss mov edx,0x1a886f45
  41712d:	adc    esi,DWORD PTR [esi-0x6fc968b8]
  417133:	mov    dl,bl
  417135:	pusha  
  417136:	mov    bl,0x97
  417138:	scas   eax,DWORD PTR es:[edi]
  417139:	push   ds
  41713a:	jae    0x4171bb
  41713c:	imul   esi,DWORD PTR [edx-0x3b74ca2f],0x62
  417143:	dec    esi
  417144:	daa    
  417145:	and    al,0x4
  417147:	cmp    ecx,esp
  417149:	sbb    eax,0x107acbb0
  41714e:	push   0x97831bb4
  417153:	inc    ecx
  417154:	test   eax,0xaf5519f9
  417159:	sub    bh,BYTE PTR [eax]
  41715b:	push   ebx
  41715c:	sbb    edi,0x53970abc
  417162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417163:	cmovle edi,DWORD PTR [eax-0xe1ab0b3]
  41716a:	push   ss
  41716b:	or     ch,bh
  41716d:	add    bl,ch
  41716f:	mov    BYTE PTR ds:0xc76bd43a,0xb5
  417176:	jp     0x41718e
  417178:	mov    eax,ds:0x515313cf
  41717d:	cmp    cl,bl
  41717f:	adc    ch,bh
  417181:	int3   
  417182:	adc    eax,DWORD PTR [ebx]
  417184:	mov    BYTE PTR [edx],ah
  417186:	scas   eax,DWORD PTR es:[edi]
  417187:	push   ebx
  417188:	adc    BYTE PTR [ecx-0x6762ddd3],bh
  41718e:	pop    edi
  41718f:	int3   
  417190:	pop    ds
  417191:	les    edx,FWORD PTR ds:0xdb0508f9
  417197:	sbb    BYTE PTR [edi-0x73e098f5],cl
  41719d:	and    eax,0x8ff5524a
  4171a2:	xchg   edi,eax
  4171a3:	fwait
  4171a4:	loop   0x4171aa
  4171a6:	(bad)  
  4171a7:	(bad)  
  4171a8:	mov    al,ds:0xe7e0a1d4
  4171ad:	mov    edi,0xa9220031
  4171b2:	popa   
  4171b3:	pusha  
  4171b4:	pop    ss
  4171b5:	mov    ds:0xd9465cf0,eax
  4171ba:	dec    edi
  4171bb:	sub    ebx,DWORD PTR [esi+0x1e49ddb7]
  4171c1:	sbb    eax,DWORD PTR [edi+0x3ac60b6c]
  4171c7:	test   DWORD PTR [edx+0x13],0xd76b5c64
  4171ce:	add    eax,0x39c5d303
  4171d3:	test   al,0x22
  4171d5:	jne    0x417252
  4171d7:	gs pop ds
  4171d9:	sahf   
  4171da:	cmp    eax,0x1eb376ed
  4171df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e0:	pusha  
  4171e1:	fs (bad) 
  4171e3:	mov    ds:0xd2c94311,al
  4171e8:	and    DWORD PTR [edi+0x22],esp
  4171eb:	in     eax,0xdf
  4171ed:	mov    cl,0xc8
  4171ef:	fucomip st,st(7)
  4171f1:	cmp    ecx,ecx
  4171f3:	lahf   
  4171f4:	retf   0x527a
  4171f7:	xchg   ecx,eax
  4171f8:	fiadd  WORD PTR [edi]
  4171fa:	fwait
  4171fb:	stos   BYTE PTR es:[edi],al
  4171fc:	sti    
  4171fd:	outs   dx,DWORD PTR ds:[esi]
  4171fe:	inc    ecx
  4171ff:	inc    esp
  417200:	xor    al,dl
  417202:	dec    esi
  417203:	mov    bh,dl
  417205:	bound  esp,QWORD PTR [edx]
  417207:	jnp    0x41718b
  417209:	jl     0x417279
  41720b:	in     eax,0x77
  41720d:	loopne 0x417196
  41720f:	ds fcom st(2)
  417212:	sbb    bh,cl
  417214:	and    al,BYTE PTR [ebx+0x25]
  417217:	and    cl,BYTE PTR [ebp-0xd]
  41721a:	jo     0x41725e
  41721c:	jns    0x4171e4
  41721e:	aad    0x46
  417220:	nop
  417221:	imul   edx,DWORD PTR [ebp-0x5b],0xe90e10f1
  417228:	mov    eax,ds:0xd5c3b3d6
  41722d:	pop    edi
  41722e:	ds dec esi
  417230:	xor    BYTE PTR [ecx-0x14],ch
  417233:	dec    esp
  417234:	fdiv   QWORD PTR [ebp+0x2547e68c]
  41723a:	ja     0x4171cd
  41723c:	and    eax,0xfad5ecad
  417241:	xchg   edx,eax
  417242:	cs jnp 0x41728b
  417245:	jp     0x41728d
  417247:	pop    edi
  417248:	(bad)  
  417249:	int    0x16
  41724b:	loope  0x417218
  41724d:	add    al,0x93
  41724f:	mov    edi,0x1e120a58
  417254:	in     al,0x8e
  417256:	imul   eax,DWORD PTR [ebp+0x4a],0x6d31f2f1
  41725d:	inc    ebp
  41725e:	mov    al,0x9e
  417260:	daa    
  417261:	mov    al,0xf7
  417263:	popa   
  417264:	sub    DWORD PTR [ecx],esp
  417266:	add    al,0x42
  417268:	or     esi,DWORD PTR [ebx+0x1e]
  41726b:	xor    al,0x65
  41726d:	retf   
  41726e:	adc    DWORD PTR [edx-0x5c],edx
  417271:	fldenv [edi+0x2b]
  417274:	mov    bh,0x6f
  417276:	mov    dh,0x3
  417278:	xor    BYTE PTR [edx+edi*8],0xa4
  41727c:	sbb    eax,0x5bb3d16b
  417281:	sbb    eax,0x939a5a2c
  417286:	(bad)  
  417287:	jg     0x4172d4
  417289:	pop    esp
  41728a:	mov    ch,0x67
  41728c:	popa   
  41728d:	mov    dh,0x99
  41728f:	pusha  
  417290:	pop    ds
  417291:	push   0x1d
  417293:	mov    ebx,0xd901fa47
  417298:	stos   BYTE PTR es:[edi],al
  417299:	shr    esi,cl
  41729b:	loop   0x41726d
  41729d:	push   edi
  41729e:	jbe    0x417316
  4172a0:	ror    bh,1
  4172a2:	cmp    ah,ch
  4172a4:	xor    bl,BYTE PTR [ecx]
  4172a6:	dec    ebx
  4172a7:	and    eax,0x1ca88af3
  4172ac:	xor    al,0xd0
  4172ae:	lock xchg esi,eax
  4172b0:	sbb    ecx,DWORD PTR [esp+ebp*1+0x38]
  4172b4:	xchg   ecx,esi
  4172b6:	add    bl,BYTE PTR [ecx]
  4172b8:	xchg   edx,eax
  4172b9:	push   esp
  4172ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172bb:	ja     0x4172d6
  4172bd:	fs test eax,0x6c635f5d
  4172c3:	or     BYTE PTR ds:0xa859ac94,0xc6
  4172ca:	popa   
  4172cb:	enter  0xfd94,0xff
  4172cf:	retf   0x2b5d
  4172d2:	cmp    edx,DWORD PTR [edx+0x3a]
  4172d5:	call   0x138f:0x9f1b8759
  4172dc:	cmp    esp,edx
  4172de:	sub    BYTE PTR [ebx+0x2d141be0],dh
  4172e4:	xlat   BYTE PTR ds:[ebx]
  4172e5:	shl    BYTE PTR [edi+0x9],1
  4172e8:	dec    ebx
  4172e9:	mov    edx,0x212f8192
  4172ee:	cmp    eax,0xdfaa20fe
  4172f3:	pop    edi
  4172f4:	fdiv   QWORD PTR [esi+eax*8]
  4172f7:	or     al,0x99
  4172f9:	lahf   
  4172fa:	popa   
  4172fb:	or     bl,0x12
  4172fe:	bound  ebx,QWORD PTR [edx]
  417300:	(bad)  
  417301:	fcmovnb st,st(7)
  417303:	xchg   ecx,eax
  417304:	cmpxchg BYTE PTR [edi+0x744954bf],dh
  41730b:	fadd   DWORD PTR [esi+0x24]
  41730e:	addr16 mov eax,0x4d1abe60
  417314:	fmul   QWORD PTR [esi+ebp*8]
  417317:	in     eax,0x45
  417319:	(bad)  
  41731a:	jne    0x417357
  41731c:	in     al,0xc1
  41731e:	mov    ch,bh
  417320:	mov    bl,0x11
  417322:	pop    esp
  417323:	adc    esi,ecx
  417325:	rol    DWORD PTR [eax],1
  417327:	mov    cl,0x65
  417329:	test   al,0xc0
  41732b:	es inc eax
  41732d:	jae    0x4173ae
  41732f:	mov    ebx,0x299b0c5d
  417334:	stos   BYTE PTR es:[edi],al
  417335:	jno    0x41732f
  417337:	xchg   BYTE PTR [esi-0x5249870c],dl
  41733d:	aam    0xb6
  41733f:	or     eax,0x8322f64b
  417344:	xor    eax,0x25b687da
  417349:	push   ebp
  41734a:	shl    cl,cl
  41734c:	mov    ebp,0xcb9cb858
  417351:	inc    eax
  417352:	fdiv   QWORD PTR [edi-0x12]
  417355:	inc    esp
  417356:	sbb    eax,DWORD PTR [edx-0x4108d7fd]
  41735c:	cmp    DWORD PTR [edi+ebx*8+0x47],0x52d7bab8
  417364:	lods   eax,DWORD PTR ds:[esi]
  417365:	jb     0x417350
  417367:	dec    eax
  417368:	pop    ecx
  417369:	and    al,bh
  41736b:	mov    edx,0xa8d7b664
  417370:	mov    cl,0x8b
  417372:	xchg   esp,ecx
  417374:	adc    eax,0x7c145f52
  417379:	adc    DWORD PTR [eax],0x6
  41737c:	js     0x41734a
  41737e:	and    ch,BYTE PTR [edi]
  417380:	mov    ds:0x2b5517ca,eax
  417385:	iret   
  417386:	adc    al,0x46
  417388:	dec    esi
  417389:	loop   0x4173e6
  41738b:	(bad)  
  41738c:	adc    cl,BYTE PTR [eax+0x7]
  41738f:	dec    edx
  417390:	les    ebx,FWORD PTR [ebp-0x13]
  417393:	mov    bh,0x72
  417395:	fcomp  DWORD PTR [ecx-0x1ab51642]
  41739b:	mov    dl,0x98
  41739d:	mov    eax,ds:0xca50d0d4
  4173a2:	pusha  
  4173a3:	pop    edx
  4173a4:	repz add DWORD PTR [ecx-0x12],0x97398b79
  4173ac:	iret   
  4173ad:	cmp    BYTE PTR [esi],dl
  4173af:	pop    edx
  4173b0:	scas   eax,DWORD PTR es:[edi]
  4173b1:	or     eax,0x5556c739
  4173b6:	das    
  4173b7:	push   edx
  4173b8:	cmp    DWORD PTR [esi-0xc],ebp
  4173bb:	add    BYTE PTR [ecx+0x49],dh
  4173be:	(bad)  
  4173bf:	fadd   DWORD PTR ds:0x7ec829f2
  4173c5:	nop
  4173c6:	xchg   esp,eax
  4173c7:	mov    edx,0xae2f7bd1
  4173cc:	test   al,0x68
  4173ce:	lea    esi,[edi+eiz*8+0x6ef7a237]
  4173d5:	dec    edi
  4173d6:	sbb    BYTE PTR [ebp+0x6e7a99f1],dl
  4173dc:	add    eax,DWORD PTR [ecx]
  4173de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173df:	inc    ebx
  4173e0:	sbb    BYTE PTR [eax-0x6e],ah
  4173e3:	add    ecx,eax
  4173e5:	int    0x7c
  4173e7:	je     0x41739b
  4173e9:	iret   
  4173ea:	add    BYTE PTR [edx-0x21928871],cl
  4173f0:	pop    ecx
  4173f1:	(bad)  
  4173f2:	(bad)  
  4173f3:	mov    al,0x2
  4173f5:	mov    ch,0x46
  4173f7:	push   ds
  4173f8:	nop
  4173f9:	push   0x625094a5
  4173fe:	fst    DWORD PTR [ebx+esi*4-0x378a6cce]
  417405:	je     0x417422
  417407:	stos   BYTE PTR es:[edi],al
  417408:	aam    0x22
  41740a:	or     eax,0x190d9385
  41740f:	(bad)  
  417410:	scas   al,BYTE PTR es:[edi]
  417411:	mov    ds:0x25f92be2,eax
  417416:	sbb    BYTE PTR [eax-0x10e8799],cl
  41741c:	nop
  41741d:	and    esi,DWORD PTR [ebp+0x12d4eb3f]
  417423:	sbb    bl,BYTE PTR [esi+0x13c9c083]
  417429:	aaa    
  41742a:	mov    al,0x42
  41742c:	mov    ah,0xab
  41742e:	daa    
  41742f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417430:	imul   esi,esi,0xffffffe7
  417433:	mov    ah,0xef
  417435:	adc    DWORD PTR [edx+0x63],ebx
  417438:	daa    
  417439:	xchg   esi,eax
  41743a:	fcomp  DWORD PTR [ebp-0x75]
  41743d:	adc    edi,ecx
  41743f:	in     al,dx
  417440:	clc    
  417441:	neg    BYTE PTR [eax-0x30e7f32c]
  417447:	mov    al,ds:0xc40bcc8f
  41744c:	enter  0x99f1,0xba
  417450:	lea    edx,[ebx]
  417452:	pusha  
  417453:	stos   DWORD PTR es:[edi],eax
  417454:	call   0x8f966ec9
  417459:	data16 or BYTE PTR [ebx+ecx*4+0x26343050],ch
  417461:	push   ebp
  417462:	outs   dx,DWORD PTR ds:[esi]
  417463:	(bad)  
  417464:	jecxz  0x417485
  417466:	mov    WORD PTR [edi-0x208d21d],?
  41746c:	mov    dh,0x9d
  41746e:	add    DWORD PTR [edi],edi
  417470:	pop    DWORD PTR [edx]
  417472:	xor    eax,0xe670e049
  417477:	add    al,0x6d
  417479:	out    0xa4,al
  41747b:	cs or  eax,0x44817bf2
  417481:	lods   eax,DWORD PTR ds:[esi]
  417482:	outs   dx,BYTE PTR ds:[esi]
  417483:	test   al,0xc9
  417485:	inc    ebp
  417486:	call   0x10f78707
  41748b:	aaa    
  41748c:	mov    dh,0xb9
  41748e:	loopne 0x41748d
  417490:	sub    DWORD PTR [eax-0x1a0339e3],ebx
  417496:	jg     0x4174f8
  417498:	mov    ecx,0xa31cce6d
  41749d:	ret    
  41749e:	lds    esi,FWORD PTR [ebx+0x25]
  4174a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a2:	push   ebp
  4174a3:	add    DWORD PTR [edi],ecx
  4174a5:	aam    0xf2
  4174a7:	ins    BYTE PTR es:[edi],dx
  4174a8:	cdq    
  4174a9:	iret   
  4174aa:	inc    esp
  4174ab:	mov    ?,esp
  4174ad:	and    DWORD PTR [esi-0x1f],esp
  4174b0:	add    ch,ch
  4174b2:	not    DWORD PTR [edx-0x31]
  4174b5:	dec    eax
  4174b6:	add    esp,DWORD PTR [ecx-0x35f24bca]
  4174bc:	fcmovbe st,st(4)
  4174be:	and    BYTE PTR [ecx-0x6d476cfc],bh
  4174c4:	mov    ebx,0xaf0f7b0c
  4174c9:	in     al,dx
  4174ca:	dec    DWORD PTR [ebp+0x65a1703f]
  4174d0:	and    DWORD PTR [edi+0x17c306ec],esi
  4174d6:	mov    eax,ds:0xe6a36591
  4174db:	fild   WORD PTR [ebp+eiz*8-0xfe4b8d0]
  4174e2:	xchg   ebx,eax
  4174e3:	fs aas 
  4174e5:	push   esi
  4174e6:	mov    ?,esp
  4174e8:	pop    edx
  4174e9:	adc    DWORD PTR [edi+eax*1-0x521b685e],ecx
  4174f0:	mov    ds:0x9c68f179,al
  4174f5:	mov    edi,0xc1890ed4
  4174fa:	mov    ebx,0x11f20a31
  4174ff:	xor    ebx,DWORD PTR [eax]
  417501:	into   
  417502:	mov    ds:0x2f8c2366,eax
  417507:	imul   esi,DWORD PTR [edi],0xd90fc24a
  41750d:	lods   al,BYTE PTR cs:[esi]
  41750f:	xchg   ebp,eax
  417510:	sbb    bl,BYTE PTR [ebx+0x5a86979b]
  417516:	jne    0x41757e
  417518:	inc    di
  41751a:	push   0x1b
  41751c:	out    dx,eax
  41751d:	mov    al,fs:0x77e429d1
  417523:	ret    
  417524:	cmp    al,0xb1
  417526:	sbb    BYTE PTR [edx+0x6c],al
  417529:	cwde   
  41752a:	pop    esp
  41752b:	jo     0x41751e
  41752d:	or     ebx,DWORD PTR [esi]
  41752f:	sub    DWORD PTR [esi+0x6d],ebx
  417532:	clc    
  417533:	retf   0xf5eb
  417536:	bound  edx,QWORD PTR [ebp-0x52516723]
  41753c:	add    DWORD PTR [edi-0x3e966f],0x57117244
  417546:	mov    dh,ah
  417548:	dec    esi
  417549:	cmp    al,0xda
  41754b:	push   ebx
  41754c:	xchg   edi,eax
  41754d:	push   esi
  41754e:	mov    al,ds:0x24de6b30
  417553:	aas    
  417554:	dec    ebx
  417555:	fisttp WORD PTR [esi+edx*8]
  417558:	pushf  
  417559:	jle    0x4175ab
  41755b:	add    al,0x43
  41755d:	jns    0x41755c
  41755f:	aam    0x88
  417561:	pop    ebp
  417562:	(bad)  
  417563:	xchg   ebp,eax
  417564:	dec    ebx
  417565:	jecxz  0x417515
  417567:	aam    0x5f
  417569:	retf   
  41756a:	in     al,0xa4
  41756c:	test   BYTE PTR [ecx+0x58],ch
  41756f:	mov    edx,0x40467c1
  417574:	pop    edx
  417575:	jmp    DWORD PTR [ecx]
  417577:	cmp    dh,BYTE PTR [ecx+0x19]
  41757a:	and    edi,DWORD PTR [edx+0x56c67e58]
  417580:	leave  
  417581:	pop    ss
  417582:	push   ebx
  417583:	repz add eax,0x1d58d465
  417589:	or     al,0x3
  41758b:	and    dl,ch
  41758d:	push   ebp
  41758e:	sub    DWORD PTR [eax-0x64],edi
  417591:	mov    edi,0x9bf0bbc2
  417596:	sbb    eax,0x2f785b39
  41759b:	ja     0x4175b2
  41759d:	pop    ebx
  41759e:	add    edi,DWORD PTR [edi]
  4175a0:	fstp   TBYTE PTR [edx-0x51cd5ee3]
  4175a6:	sub    DWORD PTR [edx-0x38ef2d3f],0xffffff91
  4175ad:	sub    BYTE PTR [eax-0x50e11a38],0xf9
  4175b4:	mov    DWORD PTR [edx-0xb344c33],esi
  4175ba:	addr16 sahf 
  4175bc:	leave  
  4175bd:	dec    esi
  4175be:	mov    cl,0xc6
  4175c0:	lods   al,BYTE PTR ds:[esi]
  4175c1:	adc    DWORD PTR [esi],ebx
  4175c3:	inc    esi
  4175c4:	sbb    DWORD PTR [edi+0x1c],edi
  4175c7:	pushf  
  4175c8:	push   es
  4175c9:	push   0x53
  4175cb:	aam    0x37
  4175cd:	dec    edx
  4175ce:	sub    edx,DWORD PTR [ecx+0x32]
  4175d1:	lds    ebp,FWORD PTR [edi]
  4175d3:	cmp    al,BYTE PTR [edx+0x7735d8c4]
  4175d9:	xlat   BYTE PTR ds:[ebx]
  4175da:	jns    0x4175dc
  4175dc:	rol    BYTE PTR [edx],cl
  4175de:	sbb    esi,ecx
  4175e0:	in     eax,0x2a
  4175e2:	jno    0x41764c
  4175e4:	hlt    
  4175e5:	push   ss
  4175e6:	mov    edx,DWORD PTR [esi+esi*2-0x5f0f3249]
  4175ed:	cdq    
  4175ee:	jge    0x41766f
  4175f0:	ins    DWORD PTR es:[edi],dx
  4175f1:	add    edi,DWORD PTR [edx+0x22002d18]
  4175f7:	push   0x6d
  4175f9:	outs   dx,BYTE PTR ds:[esi]
  4175fa:	xchg   ebx,eax
  4175fb:	adc    eax,0x5c9969d7
  417600:	(bad)  
  417601:	xor    BYTE PTR [ebx-0x6abd4117],dl
  417607:	sub    eax,0xb761c9c1
  41760c:	xchg   edx,eax
  41760d:	pop    eax
  41760e:	rol    ebx,1
  417610:	and    ebp,DWORD PTR [ecx]
  417612:	arpl   WORD PTR [eax+0x46],bp
  417615:	lods   al,BYTE PTR ds:[esi]
  417616:	sub    ah,BYTE PTR [eax+eiz*4-0x3b]
  41761a:	popf   
  41761b:	and    DWORD PTR [esi-0x19],edi
  41761e:	xchg   edi,eax
  41761f:	adc    esp,DWORD PTR [edi-0x2b4abaf6]
  417625:	adc    al,0x57
  417627:	adc    al,0x45
  417629:	cli    
  41762a:	stos   DWORD PTR es:[edi],eax
  41762b:	mov    dh,0xfa
  41762d:	fwait
  41762e:	push   0x935a9988
  417633:	pop    ebx
  417634:	lods   al,BYTE PTR ds:[esi]
  417635:	sbb    al,0x59
  417637:	stos   BYTE PTR es:[edi],al
  417638:	jns    0x4175db
  41763a:	pop    esi
  41763b:	sbb    al,0xc7
  41763d:	rcl    esi,0x64
  417640:	daa    
  417641:	aad    0xfa
  417643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417644:	cld    
  417645:	int3   
  417646:	neg    DWORD PTR [edx-0x54597518]
  41764c:	lods   eax,DWORD PTR ds:[esi]
  41764d:	sub    al,0xb4
  41764f:	hlt    
  417650:	ins    DWORD PTR es:[edi],dx
  417651:	xor    esp,edx
  417653:	pop    esp
  417654:	inc    ecx
  417655:	lds    ebx,FWORD PTR [eax-0x76976972]
  41765b:	shl    BYTE PTR [ecx-0x42],1
  41765e:	xor    al,0x31
  417660:	(bad)  
  417662:	xchg   esp,eax
  417663:	jge    0x4175f3
  417665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417666:	sub    dl,BYTE PTR [edx+0xb]
  417669:	and    esi,esi
  41766b:	lods   al,BYTE PTR ds:[esi]
  41766c:	pop    es
  41766d:	das    
  41766e:	cmp    ch,BYTE PTR [edi-0x4f94f089]
  417674:	xchg   esp,eax
  417675:	mov    cl,0x41
  417677:	imul   ebp,esi,0x7264689a
  41767d:	jmp    0xf135f58
  417682:	sub    dh,BYTE PTR [edx+0x728995e4]
  417688:	xchg   ebx,eax
  417689:	mov    ah,0x62
  41768b:	ror    dh,cl
  41768d:	sub    al,0x34
  41768f:	mov    edi,DWORD PTR [ebx]
  417691:	mov    al,0xff
  417693:	pop    es
  417694:	leave  
  417695:	jo     0x41765a
  417697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417698:	push   edi
  417699:	jb     0x41761e
  41769b:	sbb    DWORD PTR [eax],edx
  41769d:	in     al,0x73
  41769f:	out    dx,al
  4176a0:	leave  
  4176a1:	test   BYTE PTR [ecx],bh
  4176a3:	push   eax
  4176a4:	out    0x38,eax
  4176a6:	dec    edi
  4176a7:	sbb    DWORD PTR [edi-0x54],0x8b18fe93
  4176ae:	xor    bl,dl
  4176b0:	arpl   WORD PTR [edi+0x6],di
  4176b3:	inc    ebx
  4176b4:	dec    esp
  4176b5:	jno    0x41765b
  4176b7:	jmp    0x5b56:0x31c7a5da
  4176be:	mov    al,ds:0xcfa4a83
  4176c3:	push   ds
  4176c4:	ror    BYTE PTR [ebp-0x74],1
  4176c7:	fistp  DWORD PTR [edi-0x75bc008c]
  4176cd:	adc    eax,0x79622aec
  4176d2:	clc    
  4176d3:	cmp    eax,0xc33c533c
  4176d8:	sbb    al,BYTE PTR [ecx+0x39]
  4176db:	inc    eax
  4176dc:	fstp   DWORD PTR [ebp+0x7f]
  4176df:	ja     0x417703
  4176e1:	pushf  
  4176e2:	hlt    
  4176e3:	imul   esi,edx,0xffffffe3
  4176e6:	mov    cl,0xaa
  4176e8:	ror    BYTE PTR [eax+ecx*1-0x16],1
  4176ec:	sbb    DWORD PTR [edx+0x21cabcb1],edi
  4176f2:	lds    ecx,FWORD PTR [ebx+0x34]
  4176f5:	xor    al,0xec
  4176f7:	pop    eax
  4176f8:	das    
  4176f9:	sti    
  4176fa:	nop
  4176fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fc:	int3   
  4176fd:	jp     0x4176b7
  4176ff:	mov    edx,0xf72d8496
  417704:	es ds shl ecx,0x57
  417709:	in     eax,0xfb
  41770b:	loop   0x4176f7
  41770d:	(bad)  
  41770f:	and    BYTE PTR [ebx],dl
  417711:	mov    dh,0xc7
  417713:	mov    dh,0x7b
  417715:	repnz mov ?,WORD PTR [edx]
  417718:	cmp    al,0x28
  41771a:	mov    gs,WORD PTR [ebx]
  41771c:	xchg   esp,eax
  41771d:	xor    eax,0x7aacbc44
  417722:	fmul   QWORD PTR [edi-0x3e3ad11d]
  417728:	push   esi
  417729:	mov    WORD PTR [eax-0x49],gs
  41772c:	jl     0x4176cd
  41772e:	push   edx
  41772f:	xor    al,0x84
  417731:	pushf  
  417732:	popf   
  417733:	enter  0x912a,0x35
  417737:	adc    BYTE PTR [edi-0x1b],cl
  41773a:	cld    
  41773b:	rcr    BYTE PTR [ebx-0x4e],cl
  41773e:	ffree  st(2)
  417740:	pop    edi
  417741:	lods   eax,DWORD PTR ds:[esi]
  417742:	fisubr DWORD PTR [edx-0x4]
  417745:	jle    0x4177c3
  417747:	out    0xf5,al
  417749:	push   ecx
  41774a:	add    DWORD PTR [ebx],esi
  41774c:	out    0x48,al
  41774e:	(bad)  
  41774f:	(bad)  
  417750:	and    DWORD PTR [ebx+0x24b94c9d],esi
  417756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417757:	xchg   esp,eax
  417758:	or     dl,BYTE PTR [edx+eiz*8+0x20]
  41775c:	arpl   WORD PTR [edx+0x2a5cf247],si
  417762:	mov    edi,0x86307891
  417767:	mov    ebp,ss
  417769:	add    eax,0x5c1c7e0a
  41776e:	and    DWORD PTR [ecx+0x45],0xffffffb1
  417772:	cdq    
  417773:	cmp    DWORD PTR [edi],esi
  417775:	adc    dh,BYTE PTR [eax+0x2d78fdc6]
  41777b:	fwait
  41777c:	and    edi,DWORD PTR [ecx+esi*8+0x76057273]
  417783:	aaa    
  417784:	into   
  417785:	pop    ebx
  417786:	aaa    
  417787:	push   ecx
  417788:	sbb    edi,0xe824a3bc
  41778e:	cmp    DWORD PTR [edx+edx*4-0x7e2a9ed6],esi
  417795:	stc    
  417796:	mov    edx,0x8a2ce753
  41779b:	lea    esi,[edi+edi*8-0x297c2d0e]
  4177a2:	jp     0x41775c
  4177a4:	repz retf 0xeebd
  4177a8:	mov    gs,ecx
  4177aa:	sub    bl,ch
  4177ac:	add    BYTE PTR [ebx],bh
  4177ae:	inc    ebx
  4177af:	je     0x4177bd
  4177b1:	test   al,0xfd
  4177b3:	inc    esi
  4177b4:	inc    esp
  4177b5:	cmp    DWORD PTR [eax+0x32],edi
  4177b8:	push   0xffffff92
  4177ba:	ins    DWORD PTR es:[edi],dx
  4177bb:	dec    ebx
  4177bc:	pop    edi
  4177bd:	adc    al,0x12
  4177bf:	and    bh,BYTE PTR [ebp+esi*2+0x15a09e7f]
  4177c6:	xor    DWORD PTR [esp+edx*2-0x3f8fe9ca],edx
  4177cd:	aad    0x61
  4177cf:	jl     0x4177c1
  4177d1:	fnsave [edx-0x22]
  4177d4:	ds inc ecx
  4177d6:	lds    ecx,FWORD PTR [edx-0x71]
  4177d9:	dec    esi
  4177da:	pop    edi
  4177db:	inc    eax
  4177dc:	mov    dh,0xe1
  4177de:	or     eax,0x582a2755
  4177e3:	loopne 0x4177ab
  4177e5:	enter  0x41d4,0x22
  4177e9:	data16 gs jl 0x417823
  4177ed:	xchg   DWORD PTR [ecx],ebx
  4177ef:	push   ebx
  4177f0:	inc    esi
  4177f1:	cmp    ebp,esp
  4177f3:	jg     0x417848
  4177f5:	das    
  4177f6:	and    dl,BYTE PTR [ebp-0x1e]
  4177f9:	test   BYTE PTR [ebp-0x320da209],cl
  4177ff:	lods   eax,DWORD PTR ds:[esi]
  417800:	test   eax,0xd01e0179
  417805:	cs mov esi,0x46239ae5
  41780b:	iret   
  41780c:	mov    edi,0xc557519d
  417811:	ficomp WORD PTR [ecx-0x35486cea]
  417817:	mov    esp,DWORD PTR [esp+eiz*8-0x8]
  41781b:	stos   DWORD PTR es:[edi],eax
  41781c:	jg     0x417873
  41781e:	scas   eax,DWORD PTR es:[edi]
  41781f:	mov    ds:0xbc79497,eax
  417824:	retf   
  417825:	jbe    0x417898
  417827:	pushf  
  417828:	jb     0x417859
  41782a:	mov    bl,BYTE PTR [esi-0x591f4a73]
  417830:	out    0x7,eax
  417832:	or     eax,0x63837195
  417837:	shl    BYTE PTR [esi+0x2f],1
  41783a:	(bad)  
  41783c:	test   eax,0x9ad72cea
  417841:	pop    eax
  417842:	lods   eax,DWORD PTR ds:[esi]
  417843:	sub    eax,ecx
  417845:	mov    dh,0xa9
  417847:	(bad)  
  417848:	mov    esi,esi
  41784a:	in     eax,0x4e
  41784c:	dec    esi
  41784d:	mov    edx,edx
  41784f:	bound  ecx,QWORD PTR [ebp-0x2]
  417852:	mov    esp,DWORD PTR [edi+0x65]
  417855:	sub    ebp,DWORD PTR ds:0x87874d11
  41785b:	je     0x4178b6
  41785d:	daa    
  41785e:	inc    ebp
  41785f:	dec    edi
  417860:	xchg   edx,eax
  417861:	dec    ecx
  417862:	int3   
  417863:	or     eax,DWORD PTR [eax+ebx*1]
  417866:	(bad)  
  417867:	in     eax,dx
  417868:	test   al,0xff
  41786a:	or     DWORD PTR [edi+edx*4-0x450a76d6],esp
  417871:	imul   esi,DWORD PTR [ebp-0x30bc3a90],0x4
  417878:	(bad)  
  417879:	mov    dl,0xa7
  41787b:	jmp    0x8746e3
  417880:	ror    ecx,0x93
  417883:	(bad)  
  417884:	pusha  
  417885:	je     0x417877
  417887:	xchg   BYTE PTR [ebx-0x5f],ah
  41788a:	test   cl,al
  41788c:	mov    cl,0xfe
  41788e:	mov    WORD PTR [edx-0x5a032725],?
  417894:	ds ret 
  417896:	sbb    DWORD PTR [ebp+0x3fb32442],esp
  41789c:	pushf  
  41789d:	jae    0x417916
  41789f:	add    al,BYTE PTR [esi-0x65]
  4178a2:	sub    al,0xfa
  4178a4:	popa   
  4178a5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4178a7:	(bad)  
  4178a8:	imul   ecx,eax,0x2057463b
  4178ae:	test   BYTE PTR ds:0x81c111e4,ch
  4178b4:	dec    eax
  4178b5:	lock or al,0x7f
  4178b8:	js     0x4178d6
  4178ba:	sub    bh,bl
  4178bc:	jge    0x417930
  4178be:	dec    ecx
  4178bf:	loop   0x4178d2
  4178c1:	rcr    DWORD PTR [edi-0x3],0x18
  4178c5:	mov    edi,0xcdc688c4
  4178ca:	sbb    edx,esp
  4178cc:	xchg   bl,cl
  4178ce:	test   DWORD PTR [edi-0x29],eax
  4178d1:	in     eax,dx
  4178d2:	in     al,dx
  4178d3:	call   0xbab8b7c4
  4178d8:	(bad)  [ebx+0x19]
  4178db:	sbb    DWORD PTR [esi+0x2e5e78fa],edi
  4178e1:	bound  ecx,QWORD PTR [esi-0x33a13f82]
  4178e7:	xchg   BYTE PTR ds:0x9c7c4a13,dh
  4178ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ee:	xor    BYTE PTR [esi+ebx*1-0x3c],ch
  4178f2:	jae    0x417887
  4178f4:	jle    0x417882
  4178f6:	outs   dx,BYTE PTR ds:[esi]
  4178f7:	inc    esp
  4178f8:	add    BYTE PTR [esi-0x5a],dh
  4178fb:	push   ss
  4178fc:	add    dh,BYTE PTR [ecx+eax*4+0x12]
  417900:	push   ss
  417901:	push   ebx
  417902:	mov    ch,0xb8
  417904:	cs (bad) 
  417907:	out    0x2c,eax
  417909:	outs   dx,DWORD PTR ds:[esi]
  41790a:	inc    edi
  41790b:	pop    ebp
  41790c:	(bad)  
  41790d:	movd   mm2,DWORD PTR [ecx-0x28]
  417911:	mov    ebp,esi
  417913:	test   DWORD PTR [esi+0x2b],esp
  417916:	int3   
  417917:	mov    al,0x4
  417919:	sub    eax,0xadbabe89
  41791e:	(bad)  ds:[edi+0x7cce4452]
  417925:	mov    edx,0xba2a9f89
  41792a:	pop    ebp
  41792b:	fcomp  DWORD PTR [edx+0x5fbd8cb6]
  417931:	and    eax,0x67cb0445
  417936:	add    eax,0x79e61676
  41793b:	cmp    DWORD PTR [edi],ecx
  41793d:	xor    eax,0xa49ef1a5
  417942:	cmp    dh,BYTE PTR [edx-0x2f5cf234]
  417948:	sti    
  417949:	aas    
  41794a:	cli    
  41794b:	inc    esp
  41794c:	and    BYTE PTR [edx-0x23],dh
  41794f:	mov    eax,ds:0x198e2972
  417954:	pop    eax
  417955:	call   0x9d8a:0x1c94a2ef
  41795c:	enter  0xfee3,0x42
  417960:	repnz outs dx,BYTE PTR ds:[esi]
  417962:	call   0x13ab:0x3e7870b6
  417969:	jecxz  0x417990
  41796b:	cmp    BYTE PTR es:[esi],bh
  41796e:	dec    eax
  41796f:	das    
  417970:	mov    ds:0x9773be38,eax
  417975:	mov    edi,0xa02716de
  41797a:	mov    eax,DWORD PTR [ecx]
  41797c:	pop    esi
  41797d:	and    al,0x2f
  41797f:	pop    ebp
  417980:	mov    ebp,0xc30627b0
  417985:	push   0xa913a04
  41798a:	test   DWORD PTR [eax-0x5b],esp
  41798d:	fld    DWORD PTR ds:0x7bd2ad90
  417993:	(bad)  
  417994:	push   cs
  417995:	scas   eax,DWORD PTR es:[edi]
  417996:	scas   eax,DWORD PTR es:[edi]
  417997:	dec    esp
  417998:	cmp    edi,ecx
  41799a:	out    dx,al
  41799b:	icebp  
  41799c:	and    DWORD PTR [eax],0xd56ffd08
  4179a2:	sub    al,0x86
  4179a4:	in     eax,dx
  4179a5:	out    0xb1,al
  4179a7:	mov    bl,0xa3
  4179a9:	mov    ch,0xca
  4179ab:	test   BYTE PTR [edi+0x1e],bh
  4179ae:	xchg   edi,eax
  4179af:	jmp    0x4179fe
  4179b1:	mov    eax,ds:0x1f2db458
  4179b6:	jg     0x417947
  4179b8:	outs   dx,BYTE PTR ds:[esi]
  4179b9:	adc    DWORD PTR [ecx+ebp*2],0x361ecab6
  4179c0:	jmp    0xe8737eaa
  4179c5:	cld    
  4179c6:	ret    
  4179c7:	popa   
  4179c8:	scas   al,BYTE PTR es:[edi]
  4179c9:	cli    
  4179ca:	(bad)  
  4179cb:	xor    BYTE PTR [esi],cl
  4179cd:	es int3 
  4179cf:	cmp    DWORD PTR [eax],edi
  4179d1:	sbb    ah,BYTE PTR [ebx+0x563ff6f1]
  4179d7:	stos   BYTE PTR es:[edi],al
  4179d8:	dec    ebx
  4179d9:	or     eax,0xdebf05f1
  4179de:	pusha  
  4179df:	or     BYTE PTR [eax-0x6c],ch
  4179e2:	loop   0x4179e4
  4179e4:	lock lea edx,[edx+eiz*4]
  4179e8:	and    eax,0xcddb1236
  4179ed:	jnp    0x4179ab
  4179ef:	imul   ecx,ebp,0x9c2e1ca0
  4179f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f6:	in     eax,dx
  4179f7:	es dec ecx
  4179f9:	pop    ds
  4179fa:	jge    0x417a25
  4179fc:	sub    cl,BYTE PTR [eax]
  4179fe:	fld    DWORD PTR [ecx+0x6485f604]
  417a04:	scas   eax,DWORD PTR es:[edi]
  417a05:	adc    BYTE PTR [edx+ebp*2-0x3f],0xb6
  417a0a:	iret   
  417a0b:	ret    0xdff3
  417a0e:	xor    BYTE PTR [eax+0x2260bac3],dl
  417a14:	mov    ch,0x7a
  417a16:	sbb    DWORD PTR [eax],ebx
  417a18:	and    al,0x9
  417a1a:	mov    ecx,0xf74726f2
  417a1f:	in     eax,dx
  417a20:	lea    ecx,[edi+ebp*4-0x7bdea93f]
  417a27:	mov    esp,0x50610c0b
  417a2c:	xchg   edx,eax
  417a2d:	adc    esi,ebx
  417a2f:	cdq    
  417a30:	imul   ecx,DWORD PTR [edi+0x1f0008a4],0x18cb0d36
  417a3a:	xchg   edx,eax
  417a3b:	sbb    BYTE PTR [edx],al
  417a3d:	sub    BYTE PTR [edi],bl
  417a3f:	fidiv  DWORD PTR [ebp-0x4e]
  417a42:	fimul  DWORD PTR [ecx]
  417a44:	push   eax
  417a45:	ret    0x2948
  417a48:	mov    esi,0x216cc1b0
  417a4d:	jne    0x4179fc
  417a4f:	je     0x4179d7
  417a51:	adc    eax,0x286b2c5e
  417a56:	and    al,0xde
  417a58:	xor    al,0xd9
  417a5a:	xchg   ebx,eax
  417a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a5c:	sbb    al,0x38
  417a5e:	pop    edi
  417a5f:	cdq    
  417a60:	stc    
  417a61:	pop    es
  417a62:	push   esi
  417a63:	div    DWORD PTR [ebp-0x2b39655e]
  417a69:	mov    cl,0x83
  417a6b:	sbb    BYTE PTR [esi+0x5cf0b31b],0x0
  417a72:	call   0xb05c:0xe16c6a3b
  417a79:	mov    ds:0xbe62704c,eax
  417a7e:	mov    edx,0xd21a2f81
  417a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a84:	in     eax,0xb
  417a86:	and    eax,0xa0d069e4
  417a8b:	int3   
  417a8c:	xchg   edx,eax
  417a8d:	ror    DWORD PTR [ecx+esi*8-0x37c1f8ae],cl
  417a94:	push   eax
  417a95:	mov    DWORD PTR ss:[ecx],esp
  417a98:	imul   ebp,DWORD PTR [esi-0x6e3717de],0xe
  417a9f:	popa   
  417aa0:	sub    cl,dl
  417aa2:	sub    edx,esi
  417aa4:	mov    DWORD PTR [ebp-0x751cbf45],ebx
  417aaa:	daa    
  417aab:	cdq    
  417aac:	or     eax,0xa5a6a5c4
  417ab1:	test   DWORD PTR [eax-0x39],esi
  417ab4:	lea    edx,[ecx-0x3a6f69a7]
  417aba:	mov    dl,0x5f
  417abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417abd:	fmul   DWORD PTR [ecx]
  417abf:	push   esi
  417ac1:	es push ss
  417ac3:	scas   eax,DWORD PTR es:[edi]
  417ac4:	push   ds
  417ac5:	popf   
  417ac6:	jl     0x417ab8
  417ac8:	clc    
  417ac9:	stc    
  417aca:	push   esp
  417acb:	les    edx,FWORD PTR [ebx]
  417acd:	inc    ebx
  417ace:	ret    
  417acf:	mov    cl,0xdf
  417ad1:	cmp    cl,ch
  417ad3:	lock cdq 
  417ad5:	test   al,0x66
  417ad7:	dec    ebx
  417ad8:	jno    0x417b3b
  417ada:	int3   
  417adb:	cdq    
  417adc:	jno    0x417ad4
  417ade:	out    dx,eax
  417adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae0:	push   ecx
  417ae1:	sar    BYTE PTR [esi],0x5f
  417ae4:	jno    0x417a6c
  417ae6:	xor    DWORD PTR [eax],0x1fa2ddd6
  417aec:	add    al,0x38
  417aee:	add    dh,ah
  417af0:	lods   eax,DWORD PTR ds:[esi]
  417af1:	inc    esp
  417af2:	ret    0xbc04
  417af5:	pop    es
  417af6:	gs adc bl,bl
  417af9:	pop    edi
  417afa:	adc    eax,0xb20382c0
  417aff:	push   esi
  417b00:	pop    ebx
  417b01:	icebp  
  417b02:	or     ebp,DWORD PTR [ebx-0x1]
  417b05:	mov    edx,0x6fd283cf
  417b0a:	ret    
  417b0b:	dec    esi
  417b0c:	ins    BYTE PTR es:[edi],dx
  417b0d:	cmp    al,dl
  417b0f:	ins    DWORD PTR es:[edi],dx
  417b10:	shl    BYTE PTR [ebx],1
  417b12:	ror    BYTE PTR [eax-0x1ad2325],1
  417b18:	ss mov eax,0xc6d477cd
  417b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b1f:	ss stc 
  417b21:	(bad)  
  417b22:	sub    DWORD PTR [esi+0xe],ebx
  417b25:	ins    BYTE PTR es:[edi],dx
  417b26:	loopne 0x417b29
  417b28:	shl    BYTE PTR ds:0x4ee1457c,cl
  417b2e:	daa    
  417b2f:	ins    DWORD PTR es:[edi],dx
  417b30:	adc    al,0x55
  417b32:	add    dl,BYTE PTR [edx-0x52]
  417b35:	inc    eax
  417b36:	and    eax,DWORD PTR [ecx]
  417b38:	in     eax,0x24
  417b3a:	test   BYTE PTR ds:0xee27d1fa,dh
  417b40:	mov    bl,0xc4
  417b42:	dec    esp
  417b43:	inc    edx
  417b44:	inc    ecx
  417b45:	xor    edi,DWORD PTR [ecx+0x8]
  417b48:	adc    bl,BYTE PTR [edi]
  417b4a:	es or  al,0x5b
  417b4d:	or     eax,edi
  417b4f:	sahf   
  417b50:	mov    ch,0x82
  417b52:	sbb    ah,BYTE PTR [ebx]
  417b54:	or     al,0x23
  417b56:	cwde   
  417b57:	pop    ebx
  417b58:	mov    cl,0x4e
  417b5a:	lea    eax,[esi]
  417b5c:	xchg   ebp,eax
  417b5d:	ret    0xe765
  417b60:	das    
  417b61:	(bad)  
  417b63:	or     esp,DWORD PTR [edx+edx*2+0x6fe49b21]
  417b6a:	lock mov dl,0x5
  417b6d:	dec    edx
  417b6e:	or     bl,BYTE PTR [eax+0x29]
  417b71:	cmp    eax,0x375495b1
  417b76:	push   edx
  417b77:	xchg   ebx,eax
  417b78:	mov    edi,0x401e19fb
  417b7d:	outs   dx,BYTE PTR ds:[esi]
  417b7e:	in     al,dx
  417b7f:	add    al,0xa0
  417b81:	adc    esi,esp
  417b83:	nop
  417b84:	push   DWORD PTR [esi+0x77]
  417b87:	addr16 fs jno 0x417b0d
  417b8b:	test   DWORD PTR [ecx-0x42],esp
  417b8e:	ret    
  417b8f:	data16 jle 0x417bee
  417b92:	mov    esp,DWORD PTR [eax-0x1288c87a]
  417b98:	push   ebp
  417b99:	xor    eax,0x82b0d128
  417b9e:	sub    BYTE PTR ds:0x6f5008bf,ah
  417ba4:	sbb    eax,0x808327ee
  417ba9:	(bad)  
  417baa:	fmul   DWORD PTR [ecx]
  417bac:	popa   
  417bad:	imul   DWORD PTR [eax*8+0x1600c12c]
  417bb4:	call   0xd9be:0x69ad7cae
  417bbb:	push   cs
  417bbc:	out    dx,eax
  417bbd:	sti    
  417bbe:	test   ebx,ecx
  417bc0:	push   ebx
  417bc1:	xchg   edi,eax
  417bc2:	mov    ch,0xb6
  417bc4:	enter  0x1ab7,0x55
  417bc8:	and    BYTE PTR [esp+ecx*1+0x5481f09c],bh
  417bcf:	int    0xc6
  417bd1:	jb     0x417b80
  417bd3:	or     al,0x92
  417bd5:	add    eax,0x1acf629d
  417bda:	push   ebx
  417bdb:	sub    ecx,DWORD PTR fs:[edx]
  417bde:	aad    0xbf
  417be0:	(bad)  
  417be1:	pop    ecx
  417be2:	ret    0xfbaa
  417be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be6:	in     al,dx
  417be7:	mov    ecx,0x9776db85
  417bec:	addr16 fcmovb st,st(1)
  417bef:	int    0x23
  417bf1:	sahf   
  417bf2:	ins    BYTE PTR es:[edi],dx
  417bf3:	push   eax
  417bf4:	cs mov bh,0x81
  417bf7:	push   0xffffffae
  417bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bfa:	dec    esp
  417bfb:	push   esp
  417bfc:	mov    al,ds:0x67ddfc5d
  417c01:	xchg   ebp,eax
  417c02:	fdiv   QWORD PTR [ecx+0x1d7778e]
  417c08:	test   eax,0x82e06139
  417c0d:	push   ds
  417c0e:	push   es
  417c0f:	inc    esp
  417c10:	cmp    eax,esi
  417c12:	jne    0x417c3c
  417c14:	aas    
  417c15:	and    eax,DWORD PTR [edx+0x5182abe3]
  417c1b:	mov    ecx,0xe22cdfd4
  417c20:	xchg   ebp,eax
  417c21:	cmp    dl,BYTE PTR [ecx+0x33b5beef]
  417c27:	push   0xd3f12df9
  417c2c:	in     eax,0x3e
  417c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2f:	dec    ebp
  417c30:	xchg   DWORD PTR [edx-0x51],ecx
  417c33:	(bad)  [edx+0x2]
  417c36:	dec    ecx
  417c37:	xor    eax,0xd74f54a1
  417c3c:	mov    ds,ebx
  417c3e:	push   cs
  417c3f:	mov    cl,0xb4
  417c41:	adc    ebx,DWORD PTR [ebp-0x70b7bd1e]
  417c47:	test   DWORD PTR [edi+ebp*8],edx
  417c4a:	mov    eax,DWORD PTR [edx+0x7d47fd10]
  417c50:	out    0xfb,eax
  417c52:	adc    al,BYTE PTR [eax]
  417c54:	jl     0x417ca0
  417c56:	cmc    
  417c57:	mov    bl,0x7e
  417c59:	lods   al,BYTE PTR cs:[esi]
  417c5b:	add    DWORD PTR [eax-0x61],ebx
  417c5e:	inc    edi
  417c5f:	aam    0xd
  417c61:	repz xor bh,BYTE PTR [edi+0xe]
  417c65:	out    0xe1,eax
  417c67:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417c69:	fs cmc 
  417c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c6c:	(bad)  [ebp+0x61]
  417c6f:	jo     0x417cc6
  417c71:	cdq    
  417c72:	jmp    FWORD PTR [eax]
  417c74:	push   edi
  417c75:	jecxz  0x417c82
  417c77:	in     eax,0x9f
  417c79:	stos   DWORD PTR es:[edi],eax
  417c7a:	(bad)
  417c7d:	xlat   BYTE PTR ds:[ebx]
  417c7e:	lock das 
  417c80:	retf   
  417c81:	push   edi
  417c82:	pop    edi
  417c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c84:	sub    BYTE PTR [ebp+0x40564bf4],0xe6
  417c8b:	cwde   
  417c8c:	popf   
  417c8d:	xchg   esp,edi
  417c8f:	jle    0x417c9d
  417c91:	xor    cl,BYTE PTR [edi]
  417c93:	xor    eax,0xe6f73f7d
  417c98:	mov    al,0x7b
  417c9a:	mov    edx,DWORD PTR es:[edx-0x33]
  417c9e:	mov    eax,0x364f7de7
  417ca3:	sub    dl,al
  417ca5:	add    eax,0xd38f8fe3
  417caa:	mov    eax,0xb85205bf
  417caf:	popfw  
  417cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cb2:	mov    ds:0xb5543aca,al
  417cb7:	ss repnz cld 
  417cba:	cmc    
  417cbb:	push   ecx
  417cbc:	retf   0xe5cf
  417cbf:	imul   ecx,DWORD PTR [ecx+0x19],0x34
  417cc3:	or     BYTE PTR [edi],ch
  417cc5:	cmp    al,0xa1
  417cc7:	xchg   edi,eax
  417cc8:	mov    ebx,0x3dff1625
  417ccd:	mov    ?,WORD PTR [edx-0x3d1aa3b3]
  417cd3:	sub    al,BYTE PTR [ebx+0x40]
  417cd6:	ins    BYTE PTR es:[edi],dx
  417cd7:	mov    ch,0xb4
  417cd9:	loop   0x417c9f
  417cdb:	sbb    al,BYTE PTR [ebx]
  417cdd:	hlt    
  417cde:	fwait
  417cdf:	mov    ds:0x921d717,eax
  417ce4:	inc    edx
  417ce5:	sbb    ebp,ebx
  417ce7:	shl    DWORD PTR [ebp-0x63],1
  417cea:	and    eax,0x4961a180
  417cef:	out    dx,eax
  417cf0:	ds aad 0x3e
  417cf3:	std    
  417cf4:	and    BYTE PTR ds:[edi-0x5073b0d7],ah
  417cfb:	int    0x59
  417cfd:	shl    ecx,0x35
  417d00:	push   edx
  417d01:	(bad)  
  417d02:	mov    fs,WORD PTR [eax+0x7a186f57]
  417d08:	out    dx,eax
  417d09:	add    DWORD PTR [edi+0x46],edx
  417d0c:	or     BYTE PTR [ecx+0x28],dh
  417d0f:	dec    ebx
  417d10:	mov    edx,DWORD PTR [edi-0x588000ee]
  417d16:	cmp    esi,edx
  417d18:	dec    edi
  417d19:	pop    ebp
  417d1a:	ds fwait
  417d1c:	jno    0x417d13
  417d1e:	mov    bl,0xee
  417d20:	pop    edi
  417d21:	lock sub al,0x61
  417d24:	xlat   BYTE PTR ds:[ebx]
  417d25:	or     al,0xac
  417d27:	sbb    BYTE PTR [ebp-0x47c6f99],cl
  417d2d:	mov    ds:0xf3747d6c,eax
  417d32:	bound  esi,QWORD PTR [edi]
  417d34:	outs   dx,BYTE PTR ds:[esi]
  417d35:	sbb    ebp,ebp
  417d37:	(bad)  
  417d39:	pop    ecx
  417d3a:	ret    
  417d3b:	jae    0x417d91
  417d3d:	aas    
  417d3e:	dec    edi
  417d3f:	test   eax,0x88ece153
  417d44:	adc    al,0xe4
  417d46:	je     0x417d19
  417d48:	(bad)  
  417d49:	call   0xfbf0d051
  417d4e:	lods   eax,DWORD PTR ds:[esi]
  417d4f:	inc    ebp
  417d50:	inc    ebp
  417d51:	xchg   ebx,eax
  417d52:	fs aaa 
  417d54:	sbb    ah,dl
  417d56:	data16 xlat BYTE PTR ds:[ebx]
  417d58:	push   eax
  417d59:	sub    al,0xfd
  417d5b:	fs push esp
  417d5d:	hlt    
  417d5e:	lea    edi,[ebx-0x14440bde]
  417d64:	sbb    ch,BYTE PTR [eax-0x3]
  417d67:	add    al,0x51
  417d69:	adc    bh,BYTE PTR [ebp+0x1]
  417d6c:	ret    0x7810
  417d6f:	icebp  
  417d70:	gs mov ebp,0xb4a5ade1
  417d76:	dec    eax
  417d77:	push   ebx
  417d78:	clc    
  417d79:	popf   
  417d7a:	ret    
  417d7b:	add    esp,esi
  417d7d:	jg     0x417dd1
  417d7f:	in     al,dx
  417d80:	pop    ecx
  417d81:	out    dx,eax
  417d82:	inc    esi
  417d83:	sub    eax,0xf717445c
  417d88:	cmp    al,0xa7
  417d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d8b:	xor    ebx,edi
  417d8d:	cmp    eax,0xf0a4a3e9
  417d92:	jo     0x417d7d
  417d94:	gs pushf 
  417d96:	or     edx,DWORD PTR [ebx-0x2a749892]
  417d9c:	adc    ch,BYTE PTR [esp+ecx*1+0x6530a311]
  417da3:	ins    BYTE PTR es:[edi],dx
  417da4:	xchg   esi,eax
  417da5:	icebp  
  417da6:	fwait
  417da7:	stos   DWORD PTR es:[edi],eax
  417da8:	xor    eax,0x6dfefaa3
  417dad:	or     al,0x0
  417daf:	ja     0x417db6
  417db1:	lods   eax,DWORD PTR ds:[esi]
  417db2:	pop    ss
  417db3:	add    DWORD PTR [edx],edx
  417db5:	sbb    al,0x26
  417db7:	int3   
  417db8:	pop    ss
  417db9:	aas    
  417dba:	cmp    bh,dh
  417dbc:	and    eax,0x447b24c9
  417dc1:	test   dl,al
  417dc3:	fadd   QWORD PTR [ebx-0x6]
  417dc6:	xor    edx,DWORD PTR [ebx+0x3]
  417dc9:	neg    BYTE PTR [ebp-0x438adb13]
  417dcf:	xlat   BYTE PTR ds:[ebx]
  417dd0:	out    0x22,eax
  417dd2:	xchg   ebx,eax
  417dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd4:	inc    esp
  417dd5:	int    0xa3
  417dd7:	pmuludq mm2,QWORD PTR ds:0xa3a603a6
  417dde:	ret    
  417ddf:	sub    eax,0xa9eee340
  417de4:	cmp    al,0x5f
  417de6:	outs   dx,BYTE PTR ds:[esi]
  417de7:	adc    al,0x88
  417de9:	jae    0x417e5b
  417deb:	mov    DWORD PTR [eax+0x12],edx
  417dee:	jl     0x417dd0
  417df0:	cmp    al,0xf7
  417df2:	shl    ebp,cl
  417df4:	in     eax,0x65
  417df6:	imul   edx,DWORD PTR [ebx],0x6a
  417df9:	popf   
  417dfa:	retf   
  417dfb:	mov    bh,ch
  417dfd:	adc    BYTE PTR [edx],cl
  417dff:	jmp    0xf19e:0xca28b023
  417e06:	lods   al,BYTE PTR ds:[esi]
  417e07:	arpl   WORD PTR [ebx-0x48],dx
  417e0a:	xchg   ebx,eax
  417e0b:	lods   al,BYTE PTR cs:[esi]
  417e0d:	mov    bl,BYTE PTR [eax-0x734becc0]
  417e13:	dec    eax
  417e14:	adc    DWORD PTR [edx-0x80],esi
  417e17:	xchg   ebp,eax
  417e18:	ja     0x417de6
  417e1a:	mov    esi,0x3ea633cf
  417e1f:	(bad)
  417e22:	push   cs
  417e23:	fild   QWORD PTR [edx-0x2f0a1703]
  417e29:	je     0x417dce
  417e2b:	xor    ecx,ecx
  417e2d:	out    dx,eax
  417e2e:	mov    dh,0x7
  417e30:	cmp    BYTE PTR [edx],cl
  417e32:	mov    ebx,0x222cedfc
  417e37:	inc    edi
  417e38:	mov    dh,0xd9
  417e3a:	or     dl,BYTE PTR [eax-0x3b]
  417e3d:	int    0xc6
  417e3f:	jns    0x417e29
  417e41:	xchg   edx,eax
  417e42:	xchg   edi,eax
  417e43:	(bad)  
  417e44:	xor    DWORD PTR [ebx],eax
  417e46:	cld    
  417e47:	ret    
  417e48:	and    bl,bl
  417e4a:	cli    
  417e4b:	push   0x93262dbc
  417e50:	ds hlt 
  417e52:	call   ebx
  417e54:	lods   al,BYTE PTR ds:[esi]
  417e55:	mov    ebp,0xd0e273ab
  417e5a:	push   ecx
  417e5b:	call   0xba69bd1a
  417e60:	and    BYTE PTR [eax-0x36ae09d0],dh
  417e66:	jg     0x417e68
  417e68:	retf   0xbb9a
  417e6b:	xor    al,0x2d
  417e6d:	test   al,0xf8
  417e6f:	mov    DWORD PTR [ebx-0x31],edx
  417e72:	mov    ch,0x5
  417e74:	nop
  417e75:	(bad)  
  417e76:	mov    cs,WORD PTR [ecx-0x653f515f]
  417e7c:	(bad)  
  417e7d:	out    dx,eax
  417e7e:	out    dx,eax
  417e7f:	jmp    0xcec09b96
  417e84:	pop    esi
  417e85:	pop    ds
  417e86:	in     eax,dx
  417e87:	sti    
  417e88:	adc    al,0xaa
  417e8a:	(bad)  
  417e8b:	sub    dh,0xaf
  417e8e:	test   al,0x0
  417e90:	cwde   
  417e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e92:	mov    bl,0xbd
  417e94:	ror    BYTE PTR gs:[ebx-0x5bda56b2],0xaa
  417e9c:	xor    edi,DWORD PTR [ecx]
  417e9e:	js     0x417eaa
  417ea0:	xchg   edi,eax
  417ea1:	pop    eax
  417ea2:	lock jne 0x417e28
  417ea5:	or     WORD PTR gs:[esi+ebx*2],di
  417eaa:	mov    DWORD PTR [eax-0x70b5ec6c],ebx
  417eb0:	das    
  417eb1:	cmp    esi,DWORD PTR [ebx+0x2fe1b8bb]
  417eb7:	inc    eax
  417eb8:	xor    DWORD PTR [edi+0x34157900],eax
  417ebe:	mov    edx,esi
  417ec0:	jbe    0x417e61
  417ec2:	clc    
  417ec3:	inc    ebp
  417ec4:	ror    cl,cl
  417ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec7:	cli    
  417ec8:	xchg   edx,eax
  417ec9:	cmc    
  417eca:	mov    ecx,0xbcbfe55e
  417ecf:	xchg   edx,eax
  417ed0:	pop    edx
  417ed1:	scas   al,BYTE PTR es:[edi]
  417ed2:	cli    
  417ed3:	and    BYTE PTR [ebx+ebp*8+0x2abe9a79],bl
  417eda:	inc    edi
  417edb:	(bad)  
  417edc:	shl    edx,cl
  417ede:	js     0x417f5e
  417ee0:	loop   0x417eec
  417ee2:	aad    0xf0
  417ee4:	adc    DWORD PTR [esi+ebp*1+0x6587b620],ecx
  417eeb:	repz popa 
  417eed:	add    edi,esp
  417eef:	xor    di,WORD PTR [ebx]
  417ef2:	adc    DWORD PTR [esp+edx*8+0x41],edx
  417ef6:	scas   al,BYTE PTR es:[edi]
  417ef7:	(bad)  
  417ef8:	mov    DWORD PTR [eax],ebx
  417efa:	jl     0x417e9c
  417efc:	or     edx,DWORD PTR [ecx]
  417efe:	pop    esi
  417eff:	jns    0x417e82
  417f01:	dec    edx
  417f02:	push   0xffffffcf
  417f04:	and    DWORD PTR [edx-0x1b847a9d],0x4f
  417f0b:	mov    edx,0xe4ea2d53
  417f10:	sahf   
  417f11:	out    0xc8,eax
  417f13:	pop    ebx
  417f14:	int    0x9b
  417f16:	adc    BYTE PTR [edi+0x34],ch
  417f19:	sbb    ch,BYTE PTR [edi-0x1d]
  417f1c:	out    0x8d,eax
  417f1e:	jl     0x417f5c
  417f20:	retf   0x3c30
  417f23:	(bad)  
  417f24:	sbb    ebp,edi
  417f26:	(bad)  
  417f28:	inc    esp
  417f29:	mov    al,ds:0x427975ca
  417f2e:	pop    ss
  417f2f:	ins    DWORD PTR es:[edi],dx
  417f30:	sbb    bh,0x1c
  417f33:	outs   dx,BYTE PTR ds:[esi]
  417f34:	pop    ds
  417f35:	xor    dl,BYTE PTR [ebp+0x4432714c]
  417f3b:	iret   
  417f3c:	adc    DWORD PTR [edx],edi
  417f3e:	test   al,0xb6
  417f40:	jl     0x417f9e
  417f42:	call   0x581981a7
  417f47:	(bad)  ds:[ecx-0x79bff89e]
  417f4e:	test   eax,0xbd49093f
  417f53:	sbb    BYTE PTR [edi],al
  417f55:	outs   dx,DWORD PTR ds:[esi]
  417f56:	jge    0x417fcf
  417f58:	or     DWORD PTR [ecx-0x15],ebx
  417f5b:	push   ecx
  417f5c:	lds    edx,FWORD PTR [ebp+0x498f81ad]
  417f62:	sbb    DWORD PTR [esi+0x29],0x3c
  417f66:	mov    edi,0xec336623
  417f6b:	mov    dl,0x4a
  417f6d:	jno    0x417f59
  417f6f:	lahf   
  417f70:	cwde   
  417f71:	and    esi,DWORD PTR [esi-0xb7d0d83]
  417f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f78:	sbb    eax,0x19db2cac
  417f7d:	pop    ecx
  417f7e:	lock scas eax,DWORD PTR es:[edi]
  417f80:	inc    ecx
  417f81:	test   eax,0x571eeed9
  417f86:	xchg   esp,eax
  417f87:	imul   esi,edi,0xed28271e
  417f8d:	jns    0x417fc0
  417f8f:	inc    esi
  417f90:	sbb    edi,DWORD PTR [edx]
  417f92:	outs   dx,DWORD PTR ds:[esi]
  417f93:	(bad)  
  417f94:	jae    0x417f7d
  417f96:	(bad)  
  417f97:	sbb    DWORD PTR [ebp+0x5e3933c0],ebx
  417f9d:	call   0xce34:0x571bfe58
  417fa4:	cmp    DWORD PTR [edx],edi
  417fa6:	xchg   DWORD PTR [edi-0x29],edx
  417fa9:	sub    esp,ecx
  417fab:	adc    eax,edi
  417fad:	iret   
  417fae:	jo     0x417ffb
  417fb0:	cmp    dl,BYTE PTR [ecx-0x3c014851]
  417fb6:	xor    eax,0x19876bb3
  417fbb:	xor    DWORD PTR [ecx+eax*8-0x14],ebp
  417fbf:	retf   
  417fc0:	inc    ebp
  417fc1:	pusha  
  417fc2:	push   0xb18ab8ae
  417fc7:	xchg   esp,eax
  417fc8:	xor    ebp,DWORD PTR [edx-0xed8ff41]
  417fce:	bound  edx,QWORD PTR [esi+0x1280cd5a]
  417fd4:	ins    DWORD PTR es:[edi],dx
  417fd5:	mov    ds:0x8e164bfa,eax
  417fda:	aam    0xd3
  417fdc:	dec    eax
  417fdd:	jl     0x418053
  417fdf:	popf   
  417fe0:	outs   dx,DWORD PTR ds:[esi]
  417fe1:	out    0x62,eax
  417fe3:	es sub al,0xdf
  417fe6:	outs   dx,DWORD PTR ds:[esi]
  417fe7:	jmp    0x73c2:0xfb864d64
  417fee:	aad    0x5d
  417ff0:	out    0xd8,al
  417ff2:	rcr    BYTE PTR [esi+0x65],0x2f
  417ff6:	jg     0x417fe3
  417ff8:	idiv   DWORD PTR [eax+0xa3747d8]
  417ffe:	in     eax,dx
  417fff:	sub    dl,BYTE PTR [ebp+edx*1+0x40]
  418003:	push   es
  418004:	xchg   ebp,eax
  418005:	dec    edi
  418006:	stos   BYTE PTR es:[edi],al
  418007:	push   esi
  418008:	lods   al,BYTE PTR ds:[esi]
  418009:	scas   al,BYTE PTR es:[edi]
  41800a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41800b:	iret   
  41800c:	sub    al,0x71
  41800e:	sbb    al,0x11
  418010:	jnp    0x418019
  418012:	loop   0x417fc1
  418014:	fcmove st,st(2)
  418016:	fcomip st,st(4)
  418018:	xchg   BYTE PTR [eax+0x271085ae],cl
  41801e:	mov    edi,0x5c963543
  418023:	(bad)  
  418024:	in     al,dx
  418025:	sub    BYTE PTR [edi],0x49
  418028:	and    al,0xed
  41802a:	mov    DWORD PTR [ebx],0xa6006125
  418030:	sti    
  418031:	xor    BYTE PTR [ecx+ecx*8],ch
  418034:	mov    ecx,0x4cf0aa9f
  418039:	inc    edi
  41803a:	mov    al,0x37
  41803c:	(bad)  
  41803e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41803f:	inc    esp
  418040:	sub    ebp,DWORD PTR [ebx+0x46725f83]
  418046:	loop   0x41809f
  418048:	ret    
  418049:	ret    0x9301
  41804c:	mov    esi,ecx
  41804e:	pop    ss
  41804f:	fcom   DWORD PTR [ecx]
  418051:	das    
  418052:	push   cs
  418053:	and    al,0x10
  418055:	inc    ebx
  418056:	test   BYTE PTR [ecx-0x5f],al
  418059:	xchg   edx,eax
  41805a:	idiv   DWORD PTR [edx-0x3f]
  41805d:	xchg   DWORD PTR [edx-0x25],edx
  418060:	cld    
  418061:	dec    ecx
  418062:	push   ecx
  418063:	retf   
  418064:	out    dx,eax
  418065:	sub    bh,bl
  418067:	mov    ah,0x31
  418069:	inc    edx
  41806a:	and    eax,0xcc213c69
  41806f:	mov    eax,0x8ecac3bf
  418074:	push   ecx
  418075:	push   edx
  418076:	cs jbe 0x41800d
  418079:	add    ebp,DWORD PTR [ebp+0xe09c64d]
  41807f:	push   es
  418080:	test   ch,al
  418082:	test   DWORD PTR [edx-0x2a5c820b],0x6269cefe
  41808c:	sbb    DWORD PTR [edx-0x3f7a6f11],ebp
  418092:	pushf  
  418093:	(bad)  
  418096:	clc    
  418097:	enter  0x5e1a,0x54
  41809b:	rcr    BYTE PTR [esi-0x309afde8],0x6
  4180a2:	sahf   
  4180a3:	jo     0x41802e
  4180a5:	(bad)  
  4180a6:	ins    BYTE PTR es:[edi],dx
  4180a7:	add    ch,cl
  4180a9:	ret    
  4180aa:	stos   BYTE PTR es:[edi],al
  4180ab:	test   bh,ah
  4180ad:	cmp    esi,edx
  4180af:	into   
  4180b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180b1:	fisubr WORD PTR [edi+0x75]
  4180b4:	cmp    al,0xcc
  4180b6:	mov    cl,0x8b
  4180b8:	(bad)  
  4180b9:	jecxz  0x41808d
  4180bb:	and    al,BYTE PTR [edi+0x25]
  4180be:	out    dx,eax
  4180bf:	mov    ch,0xf6
  4180c1:	push   eax
  4180c2:	loopne 0x41805a
  4180c4:	sub    DWORD PTR [ebx-0x71],0xe08f2303
  4180cb:	push   esp
  4180cc:	popa   
  4180cd:	xchg   ecx,eax
  4180ce:	pop    ebp
  4180cf:	jno    0x4180be
  4180d1:	in     al,0xb7
  4180d3:	cmp    eax,edx
  4180d5:	std    
  4180d6:	push   ds
  4180d7:	das    
  4180d8:	mov    BYTE PTR [edi+0x52],al
  4180db:	sbb    esp,DWORD PTR [edi+ecx*1]
  4180de:	push   ebp
  4180df:	mov    esp,esi
  4180e1:	ins    DWORD PTR es:[edi],dx
  4180e2:	(bad)  
  4180e3:	ins    DWORD PTR es:[edi],dx
  4180e4:	mov    edi,0x1e66513
  4180e9:	lods   eax,DWORD PTR ds:[esi]
  4180ea:	into   
  4180eb:	mov    BYTE PTR [eax+0x69],dh
  4180ee:	cmp    esi,ebx
  4180f0:	gs pop edx
  4180f2:	jns    0x41808c
  4180f4:	jo     0x418081
  4180f6:	push   esp
  4180f7:	in     eax,0x79
  4180f9:	loopne 0x41816f
  4180fb:	ss ja  0x418143
  4180fe:	and    al,0xce
  418100:	ins    DWORD PTR es:[edi],dx
  418101:	push   ds
  418102:	hlt    
  418103:	mov    dh,0xfd
  418105:	dec    ebx
  418106:	mov    BYTE PTR [esi],dl
  418108:	aam    0x7c
  41810a:	push   cs
  41810b:	int    0x76
  41810d:	clc    
  41810e:	cmp    edx,esi
  418110:	cli    
  418111:	push   es
  418112:	dec    ebp
  418113:	sbb    DWORD PTR [esi],esi
  418115:	adc    al,0xd
  418117:	adc    DWORD PTR [edx-0x77],0x616c911
  41811e:	and    ebx,DWORD PTR [ebp+0x6f387eb4]
  418124:	push   es
  418125:	js     0x4180b7
  418127:	xchg   ebx,eax
  418128:	jb     0x4180d6
  41812a:	jp     0x4180b7
  41812c:	out    0x49,eax
  41812e:	scas   al,BYTE PTR es:[edi]
  41812f:	cmp    al,0x12
  418131:	(bad)  [ebp-0x3360a03d]
  418137:	dec    ecx
  418138:	adc    al,0x7d
  41813a:	jo     0x4180e1
  41813c:	cld    
  41813d:	dec    BYTE PTR [ebx+0x341add6e]
  418143:	xor    ecx,DWORD PTR [edx-0x5204806e]
  418149:	cwde   
  41814a:	shl    DWORD PTR [ebp-0x79a4d0],cl
  418150:	icebp  
  418151:	daa    
  418152:	scas   eax,DWORD PTR es:[edi]
  418153:	xchg   ebp,eax
  418154:	scas   al,BYTE PTR es:[edi]
  418155:	sbb    al,0x8f
  418157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418158:	repnz pop ds
  41815a:	stos   DWORD PTR es:[edi],eax
  41815b:	aam    0x53
  41815d:	xor    al,0x9f
  41815f:	fbld   TBYTE PTR ds:0xe1b7f83a
  418165:	(bad)  
  418166:	(bad)  
  418167:	in     eax,0x99
  418169:	xor    ebp,DWORD PTR [esi+0x6b]
  41816c:	inc    ebp
  41816d:	mov    ecx,0xc3b62379
  418172:	into   
  418173:	add    eax,0xfcf119b0
  418178:	push   ss
  418179:	pop    edi
  41817a:	jmp    0xca99:0x9a340a22
  418181:	xchg   esi,eax
  418182:	mov    edi,0xc24a787e
  418187:	cli    
  418188:	mov    ds:0x2ef7ddf8,eax
  41818d:	add    al,0xce
  41818f:	ret    0x84f4
  418192:	test   BYTE PTR [ecx-0x6c],0xa0
  418196:	adc    bh,cl
  418198:	dec    eax
  418199:	test   ebp,esi
  41819b:	pop    esi
  41819c:	push   esi
  41819d:	mov    edx,0x71e2bddb
  4181a2:	mov    ds:0xa13ae562,al
  4181a7:	push   esi
  4181a8:	sbb    ah,BYTE PTR [esi+ebp*8]
  4181ab:	out    0x9b,al
  4181ad:	sub    esi,ebx
  4181af:	lods   eax,DWORD PTR ds:[esi]
  4181b0:	jo     0x4181c7
  4181b2:	push   ecx
  4181b3:	jge    0x4181c5
  4181b5:	and    DWORD PTR [ebp-0x228240f2],0xffffffa2
  4181bc:	sub    dh,BYTE PTR [edx-0x400fbdde]
  4181c2:	dec    esp
  4181c4:	xchg   ecx,eax
  4181c5:	mov    esi,0x1055b14d
  4181ca:	lods   eax,DWORD PTR ds:[esi]
  4181cb:	jo     0x41815f
  4181cd:	dec    ecx
  4181ce:	jecxz  0x41816d
  4181d0:	jbe    0x41820c
  4181d2:	dec    ebx
  4181d3:	ror    BYTE PTR [edi+ecx*1-0x2a],cl
  4181d7:	cmp    edi,edi
  4181d9:	ret    0x6171
  4181dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181dd:	fwait
  4181de:	push   ecx
  4181df:	sar    DWORD PTR [ebx+0x33b42f0b],1
  4181e5:	sbb    DWORD PTR [ebp+0x2e],eax
  4181e8:	stos   DWORD PTR es:[edi],eax
  4181e9:	outs   dx,DWORD PTR ds:[esi]
  4181ea:	push   cs
  4181eb:	mov    DWORD PTR [edx+eax*8+0x11b74bc5],ebx
  4181f2:	jns    0x4181a1
  4181f4:	jmp    0x418211
  4181f6:	imul   esp,DWORD PTR [ebx-0x1b9adfff],0xd4ca543e
  418200:	push   esp
  418201:	fs mov al,0x8
  418204:	ret    
  418205:	popa   
  418206:	and    ch,BYTE PTR [esi-0x4de78a43]
  41820c:	mov    ds:0xd4a0dc63,al
  418211:	rcr    BYTE PTR ds:0xbeecd968,cl
  418217:	div    DWORD PTR [eax]
  418219:	retf   
  41821a:	dec    edi
  41821b:	dec    ebx
  41821c:	arpl   WORD PTR [edx+0xf],sp
  41821f:	(bad)  
  418220:	and    dh,BYTE PTR [edi+0x76]
  418223:	push   ds
  418224:	jp     0x418232
  418226:	or     DWORD PTR [ebx],edi
  418228:	xchg   DWORD PTR [ecx-0x1c5d5da0],edx
  41822e:	loopne 0x418230
  418230:	not    BYTE PTR [ecx+0x491b69ab]
  418236:	xchg   ecx,eax
  418237:	push   esi
  418238:	test   al,0xd5
  41823a:	adc    edx,0x7c
  41823d:	cmp    eax,0x3db175a7
  418242:	dec    ecx
  418243:	mov    al,ds:0xf4ca2890
  418248:	cmp    eax,0x4105523e
  41824d:	xchg   ebp,eax
  41824e:	imul   esp,DWORD PTR [ecx+0x6],0x257f08d5
  418255:	push   eax
  418256:	pop    esp
  418257:	addr16 jne 0x4182bf
  41825a:	lea    eax,[ebx]
  41825c:	jnp    0x4182a5
  41825e:	data16 fcmovnu st,st(7)
  418261:	pop    ebx
  418262:	or     al,0x90
  418264:	pop    ss
  418265:	je     0x4181f7
  418267:	mov    ecx,DWORD PTR ss:[ebx+0x5c]
  41826b:	int    0xc8
  41826d:	sub    eax,0x4b4b4d14
  418272:	jno    0x41826e
  418274:	or     BYTE PTR [edx],al
  418276:	imul   ecx,esp,0x27
  418279:	in     ax,0x5d
  41827c:	xchg   BYTE PTR [ebp+ecx*2+0x3246cd41],bh
  418283:	dec    eax
  418284:	sbb    esp,DWORD PTR [edi+esi*8+0x6a]
  418288:	xchg   ebp,eax
  418289:	add    DWORD PTR [edx+eiz*1+0x7b],edx
  41828d:	mov    al,dh
  41828f:	retw   0xd6fe
  418293:	xchg   edi,eax
  418294:	dec    esp
  418295:	out    dx,al
  418296:	out    dx,eax
  418297:	cmp    ecx,DWORD PTR [esp+ebx*2-0x37ecf65]
  41829e:	mov    BYTE PTR ds:0x3ea5e0e3,ah
  4182a4:	or     al,0xca
  4182a6:	bound  esi,QWORD PTR [edi+ecx*4+0x51]
  4182aa:	xor    al,0x6d
  4182ac:	dec    esp
  4182ad:	mov    BYTE PTR [esp+edx*2+0x57],dl
  4182b1:	pop    edi
  4182b2:	retf   0x5d2e
  4182b5:	jecxz  0x4182e0
  4182b7:	jne    0x418290
  4182b9:	les    edx,FWORD PTR [ebx]
  4182bb:	sbb    al,cl
  4182bd:	jle    0x4182cf
  4182bf:	retf   0x33bb
  4182c2:	mov    dl,0x0
  4182c4:	push   cs
  4182c5:	lock mov eax,ds:0x6501f343
  4182cb:	jae    0x4182cb
  4182cd:	mov    ds:0xa89589e4,eax
  4182d2:	xchg   ebp,eax
  4182d3:	test   DWORD PTR [ebx-0x613e4956],esp
  4182d9:	sub    al,0x9b
  4182db:	imul   ecx,DWORD PTR [edi],0x78
  4182de:	xor    DWORD PTR [esi+0x3e],eax
  4182e1:	or     esp,ebx
  4182e3:	push   ebx
  4182e4:	inc    edi
  4182e5:	jno    0x4182ba
  4182e7:	push   esi
  4182e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e9:	call   0x3190c6c
  4182ee:	pop    es
  4182ef:	(bad)  
  4182f0:	xchg   ecx,eax
  4182f1:	jle    0x41830a
  4182f3:	call   0x5925:0x9e298a2c
  4182fa:	sbb    esi,DWORD PTR [ecx+ebp*1+0x7f1c9b8a]
  418301:	fdiv   DWORD PTR [eax+0x18cfdcf0]
  418307:	clc    
  418308:	jp     0x418341
  41830a:	mov    esi,0xe1d848e5
  41830f:	rcl    BYTE PTR [ebx-0x6],0x77
  418313:	jg     0x41837f
  418315:	in     al,0x42
  418317:	or     BYTE PTR [eax],al
  418319:	or     BYTE PTR [edi+0x24c201b9],ah
  41831f:	dec    eax
  418320:	pop    ebp
  418321:	xchg   ebx,eax
  418322:	sub    BYTE PTR [esi+0x26],cl
  418325:	or     eax,0x715f8589
  41832a:	jge    0x4182fc
  41832c:	cmp    BYTE PTR [ebp-0x77],al
  41832f:	add    al,0xa7
  418331:	and    bl,bl
  418333:	and    dh,BYTE PTR [eax+0x51207ab4]
  418339:	mov    al,0x31
  41833b:	rcr    ebp,1
  41833d:	shl    BYTE PTR [edx-0x57],0x21
  418341:	gs xchg esp,eax
  418343:	sub    eax,0x102c3823
  418348:	out    0x47,al
  41834a:	sub    DWORD PTR [edx-0xb],edi
  41834d:	mov    bl,0x7c
  41834f:	push   esi
  418350:	ror    ch,0x9f
  418353:	daa    
  418354:	sbb    esi,DWORD PTR [ecx+edi*2-0x768db271]
  41835b:	add    DWORD PTR [eax+edx*8],edi
  41835e:	inc    ecx
  41835f:	data16 or al,0xb
  418362:	gs dec edx
  418364:	sbb    esp,edi
  418366:	xchg   esp,eax
  418367:	dec    edi
  418368:	pop    ds
  418369:	adc    ebp,eax
  41836b:	dec    esp
  41836c:	outs   dx,DWORD PTR ds:[esi]
  41836d:	sbb    al,0xf8
  41836f:	cmp    esp,DWORD PTR [eax+0x70]
  418372:	xchg   ebx,eax
  418373:	xor    BYTE PTR [esi],0xfc
  418376:	stos   DWORD PTR es:[edi],eax
  418377:	xor    BYTE PTR [ecx-0xdaf57a1],dh
  41837d:	mov    al,ds:0x14c592de
  418382:	mov    al,0xbe
  418384:	jb     0x41835b
  418386:	cld    
  418387:	in     eax,dx
  418388:	out    dx,eax
  418389:	ss jno 0x4183aa
  41838c:	xchg   ebx,eax
  41838d:	jmp    0xeb0de533
  418392:	mov    esi,0x229f8f02
  418397:	xchg   edi,eax
  418398:	mov    dh,0xf4
  41839a:	adc    DWORD PTR [esi+0x7adc752c],0x72220637
  4183a4:	arpl   di,dx
  4183a6:	jle    0x4183b1
  4183a8:	cli    
  4183a9:	adc    BYTE PTR [edx+0x5d00a5eb],0x7e
  4183b0:	sbb    DWORD PTR [esi+edi*1],0xffffff9b
  4183b4:	cdq    
  4183b5:	enter  0xd281,0x71
  4183b9:	adc    dh,BYTE PTR [eax+0x64]
  4183bc:	cli    
  4183bd:	add    DWORD PTR [edi-0x4948f86c],esp
  4183c3:	jg     0x418353
  4183c5:	stos   BYTE PTR es:[edi],al
  4183c6:	fwait
  4183c7:	retf   
  4183c8:	rol    esi,0x7f
  4183cb:	iret   
  4183cc:	arpl   WORD PTR [ebx],di
  4183ce:	jge    0x41842c
  4183d0:	jle    0x418404
  4183d2:	xchg   BYTE PTR [edx],al
  4183d4:	jne    0x41842d
  4183d6:	bound  esi,QWORD PTR [edx+edx*2-0x503483f4]
  4183dd:	sbb    DWORD PTR [ecx+0x1e],ebx
  4183e0:	in     al,dx
  4183e1:	cmp    DWORD PTR [esi+0x2b],ebx
  4183e4:	popa   
  4183e5:	icebp  
  4183e6:	ror    BYTE PTR [ebx],0xd5
  4183e9:	cs (bad) 
  4183eb:	fwait
  4183ec:	popa   
  4183ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183ee:	sbb    ebp,ebx
  4183f0:	xchg   edx,eax
  4183f1:	inc    esi
  4183f2:	test   BYTE PTR [eax+0x23],dh
  4183f5:	dec    eax
  4183f6:	cmp    ah,BYTE PTR ds:0xc46c0ba2
  4183fc:	mov    dh,0x92
  4183fe:	fs xchg esi,eax
  418400:	pop    edi
  418401:	mov    ?,WORD PTR [ebp-0x469ef8f8]
  418407:	fs ret 0x3227
  41840b:	call   0xc834:0xdde3f660
  418412:	shr    DWORD PTR [ecx],cl
  418414:	jl     0x418476
  418416:	adc    edx,edx
  418418:	retf   0xc4b7
  41841b:	xchg   DWORD PTR [eax+0x0],ebp
  41841e:	push   es
  41841f:	pop    edx
  418420:	sti    
  418421:	mov    al,ds:0xb24daf4a
  418426:	add    esi,edi
  418428:	jg     0x4183b0
  41842a:	jp     0x418448
  41842c:	sbb    BYTE PTR [edi+0x42217756],al
  418432:	push   eax
  418433:	cmp    DWORD PTR [ebx+ecx*4+0xe],ebp
  418437:	jmp    DWORD PTR [esi+eiz*4+0x2a0aa86c]
  41843e:	add    eax,0xd99f3b92
  418443:	or     eax,DWORD PTR [ebp+0x71]
  418446:	sar    dh,cl
  418448:	mov    ds:0xbc66cd73,al
  41844d:	jne    0x4183ee
  41844f:	adc    eax,0x23f275f0
  418454:	pop    es
  418455:	or     edi,DWORD PTR [ecx-0x77ac67c3]
  41845b:	fist   WORD PTR [ebp+0x2ce159d0]
  418461:	pop    esi
  418462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418463:	aaa    
  418464:	mov    BYTE PTR ds:0x3e6ea01c,0x48
  41846b:	push   edx
  41846c:	xchg   esp,eax
  41846d:	mov    dh,0xfd
  41846f:	xlat   BYTE PTR ds:[ebx]
  418470:	lods   eax,DWORD PTR ds:[esi]
  418471:	lds    ebp,FWORD PTR [edi+0x41]
  418474:	rol    bl,1
  418476:	outs   dx,BYTE PTR es:[esi]
  418478:	rcl    DWORD PTR [esi-0x40],cl
  41847b:	leave  
  41847c:	or     al,0xdc
  41847e:	cmc    
  41847f:	aad    0xfe
  418481:	mov    ebx,0x66b25a2
  418486:	sub    dl,BYTE PTR [eax]
  418488:	push   cs
  418489:	add    DWORD PTR cs:[eax-0x74],ebx
  41848d:	pop    ecx
  41848e:	hlt    
  41848f:	push   edi
  418490:	rep ins BYTE PTR es:[edi],dx
  418492:	or     BYTE PTR [esi+ebx*4],al
  418495:	cwde   
  418496:	loopne 0x4184db
  418498:	pop    edx
  418499:	mov    BYTE PTR [edx],cl
  41849b:	sub    al,0x67
  41849d:	mov    al,ds:0x94690467
  4184a2:	push   ss
  4184a3:	pop    esi
  4184a4:	mov    esi,0x5e65818d
  4184a9:	inc    esp
  4184aa:	mov    edi,0x93326079
  4184af:	pop    eax
  4184b0:	jb     0x418434
  4184b2:	xchg   edi,eax
  4184b3:	lods   al,BYTE PTR ds:[esi]
  4184b4:	lods   eax,DWORD PTR ds:[esi]
  4184b5:	xor    DWORD PTR [edx],ebx
  4184b7:	les    esp,FWORD PTR [ebx+0x6]
  4184ba:	ss or  eax,0x461b0de7
  4184c0:	jg     0x418537
  4184c2:	xchg   ebp,eax
  4184c3:	je     0x418538
  4184c5:	sbb    al,0x49
  4184c7:	popa   
  4184c8:	outs   dx,BYTE PTR ds:[esi]
  4184c9:	mov    ah,0x62
  4184cb:	push   edi
  4184cc:	jmp    0x4184de
  4184ce:	in     al,dx
  4184cf:	ret    0x5251
  4184d2:	add    bl,BYTE PTR [ebx]
  4184d4:	jne    0x41848f
  4184d6:	inc    ebp
  4184d7:	dec    esi
  4184d8:	mov    esp,0x4998837d
  4184dd:	int    0x7c
  4184df:	or     DWORD PTR [eax-0x1206cd41],ebp
  4184e5:	mov    al,ds:0x8a34fec8
  4184ea:	inc    esi
  4184eb:	stc    
  4184ec:	fucom  st(5)
  4184ee:	sbb    DWORD PTR [ebp-0x5b],ebp
  4184f1:	retf   
  4184f2:	or     esp,DWORD PTR [edi-0x29620411]
  4184f8:	adc    DWORD PTR [ebx],edi
  4184fa:	mul    edx
  4184fc:	and    BYTE PTR [esi],ch
  4184fe:	in     al,dx
  4184ff:	retf   0x8b22
  418502:	push   es
  418503:	mov    eax,ds:0x83242ba1
  418508:	xor    BYTE PTR [ebx],bh
  41850a:	pop    es
  41850b:	adc    DWORD PTR [ecx+0x9309c68],eax
  418511:	(bad)  
  418513:	mov    ecx,0x8199420c
  418518:	gs repnz pop ebp
  41851b:	fisub  WORD PTR [ebp-0x48]
  41851e:	mov    ss,eax
  418520:	(bad)
  418524:	cmp    al,0xb3
  418526:	fisub  WORD PTR [ecx+0x3f]
  418529:	leave  
  41852a:	mov    bl,0x7c
  41852c:	test   BYTE PTR [ebx+0x63af9b1],0x5f
  418533:	sub    DWORD PTR [ebx-0x47],ebx
  418536:	repz out dx,eax
  418538:	int3   
  418539:	push   es
  41853a:	push   eax
  41853b:	pusha  
  41853c:	jge    0x4185aa
  41853e:	lahf   
  41853f:	ins    BYTE PTR es:[edi],dx
  418540:	adc    BYTE PTR [edx+edx*2+0x3628f199],al
  418547:	shl    DWORD PTR [ebp-0x65],cl
  41854a:	dec    ecx
  41854b:	shr    BYTE PTR [esi+eiz*1],1
  41854e:	loopne 0x4184e3
  418550:	out    0x29,al
  418552:	mov    edi,DWORD PTR [edi+eiz*8+0x5]
  418556:	push   eax
  418557:	adc    eax,0x65ce2ce2
  41855c:	dec    esi
  41855d:	mov    al,ds:0xf2e24e6a
  418562:	es (bad) 
  418564:	imul   BYTE PTR ds:0x36a56389
  41856a:	xchg   DWORD PTR [edi+0x62c55472],ecx
  418570:	mov    ch,0x2f
  418572:	dec    edi
  418573:	adc    al,0x54
  418575:	(bad)  
  418576:	dec    dl
  418578:	inc    edi
  418579:	pop    eax
  41857a:	pop    ebx
  41857b:	rol    BYTE PTR [ebp-0x20],1
  41857e:	shl    BYTE PTR [edi+eiz*4+0x6d5a862b],0x8
  418586:	ret    0x3c14
  418589:	sub    ecx,DWORD PTR [edi]
  41858b:	fisttp DWORD PTR ds:0x13b45523
  418591:	pop    ecx
  418592:	pusha  
  418593:	jg     0x418589
  418595:	and    bl,ch
  418597:	or     DWORD PTR [eax],esp
  418599:	or     esp,esi
  41859b:	icebp  
  41859c:	call   0xedad:0x4ca5e5a9
  4185a3:	data16 (bad) 
  4185a5:	mov    dl,0x98
  4185a7:	ret    
  4185a8:	ret    0x4b5f
  4185ab:	dec    edx
  4185ac:	(bad)  
  4185ae:	jmp    0x8b71:0xa3cc13bd
  4185b5:	mov    bh,0x38
  4185b7:	pop    edi
  4185b8:	sar    DWORD PTR [ecx+0x6f1bcafe],0x23
  4185bf:	pop    ds
  4185c0:	fisttp QWORD PTR [ebp+0x73f90003]
  4185c6:	scas   eax,DWORD PTR es:[edi]
  4185c7:	mov    edx,0x85063c9d
  4185cc:	sub    ebp,DWORD PTR [eax-0x5]
  4185cf:	xor    BYTE PTR [eax+0x18],ah
  4185d2:	inc    dx
  4185d4:	mov    esp,0xfaa1b2e2
  4185d9:	jg     0x418562
  4185db:	xchg   ebp,eax
  4185dc:	push   es
  4185dd:	mov    DWORD PTR [edx-0x5e353a30],esi
  4185e3:	dec    edx
  4185e4:	cwde   
  4185e5:	ins    DWORD PTR es:[edi],dx
  4185e6:	rcl    dh,cl
  4185e8:	es cli 
  4185ea:	and    eax,0x2446fbae
  4185ef:	mov    al,0xac
  4185f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f2:	pop    ecx
  4185f3:	sti    
  4185f4:	inc    esp
  4185f5:	xchg   esp,eax
  4185f6:	push   eax
  4185f7:	sbb    esi,DWORD PTR [eax-0x3c]
  4185fa:	sbb    cl,bh
  4185fc:	jmp    0x4185f8
  4185fe:	ss jle 0x418620
  418601:	cmp    DWORD PTR [edi-0x7dc61369],ecx
  418607:	outs   dx,BYTE PTR ds:[esi]
  418608:	adc    eax,0xea5902c4
  41860d:	enter  0xcd2,0xfc
  418611:	jmp    0x61e55bb5
  418616:	or     ebx,DWORD PTR [edi+ebp*1]
  418619:	mov    edx,0x115728e9
  41861e:	das    
  41861f:	inc    ebp
  418620:	add    DWORD PTR ss:[ecx+0x42],edx
  418624:	inc    ebx
  418625:	sub    cl,BYTE PTR [ebx-0x4782daed]
  41862b:	mov    eax,DWORD PTR [edi+0x556550d6]
  418631:	mov    al,dl
  418633:	ret    0x9177
  418636:	aas    
  418637:	add    al,0xd4
  418639:	ins    BYTE PTR es:[edi],dx
  41863a:	lahf   
  41863b:	repz mov ecx,0x35c7bfbe
  418641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418642:	mov    edi,0x7c1f7b14
  418647:	pop    dx
  418649:	fcomp  QWORD PTR ds:0x4b19313e
  41864f:	mov    ebp,0x5d44574b
  418654:	adc    al,0x13
  418656:	loopne 0x4185ee
  418658:	pushf  
  418659:	mov    al,0x43
  41865b:	inc    edi
  41865c:	adc    al,0x42
  41865e:	and    eax,0xdc9df67b
  418663:	sbb    eax,0x45f69b50
  418668:	push   es
  418669:	cmp    ebp,eax
  41866b:	cmp    esp,DWORD PTR ds:[esp+ecx*1]
  41866f:	std    
  418670:	mov    eax,ds:0x99b6ef32
  418675:	fistp  DWORD PTR [esi]
  418677:	push   0x3c
  418679:	pop    ss
  41867a:	rcr    ebp,cl
  41867c:	rol    BYTE PTR [edi+0x27],1
  41867f:	test   DWORD PTR [esi+0x27],eax
  418682:	jp     0x418666
  418684:	jmp    0x41867d
  418686:	jle    0x4186a3
  418688:	or     al,0x32
  41868a:	push   ecx
  41868b:	sbb    DWORD PTR [ecx+ebx*1-0x1321f439],esi
  418692:	pavgw  mm3,QWORD PTR [eax]
  418695:	push   ecx
  418696:	mov    ecx,DWORD PTR [esp+eax*4+0x68]
  41869a:	mov    ds:0xdc3c010,al
  41869f:	sub    esp,edi
  4186a1:	in     al,0x90
  4186a3:	out    0x22,eax
  4186a5:	cs jl  0x4186de
  4186a8:	popf   
  4186a9:	std    
  4186aa:	rol    dl,1
  4186ac:	add    al,0x21
  4186ae:	test   BYTE PTR [ebp-0x77af8d66],0xc
  4186b5:	xchg   esi,eax
  4186b6:	cmp    eax,0x886cb2e7
  4186bb:	push   edx
  4186bc:	daa    
  4186bd:	popa   
  4186be:	fisub  DWORD PTR [edx]
  4186c0:	lods   eax,DWORD PTR ds:[esi]
  4186c1:	sbb    BYTE PTR [esi+0x23cd9271],dh
  4186c7:	sbb    ch,BYTE PTR [esp+ebp*2-0x1a]
  4186cb:	mov    eax,ds:0xf96be84e
  4186d0:	in     al,0xa4
  4186d2:	or     BYTE PTR [eax],dh
  4186d4:	mov    WORD PTR [ebp-0x69],?
  4186d7:	shl    edi,cl
  4186d9:	test   edi,eax
  4186db:	cmp    ah,ch
  4186dd:	daa    
  4186de:	pop    ecx
  4186df:	std    
  4186e0:	loopne 0x4186e7
  4186e2:	xlat   BYTE PTR ds:[ebx]
  4186e3:	fwait
  4186e4:	or     ebx,DWORD PTR [eax]
  4186e6:	cmp    BYTE PTR gs:[edx-0x21fd21b5],bh
  4186ed:	(bad)  
  4186ef:	cmp    esi,edi
  4186f1:	sbb    al,0xf7
  4186f3:	in     al,dx
  4186f4:	pop    edi
  4186f5:	mov    ds:0xbdb843dd,eax
  4186fa:	sar    BYTE PTR [esi],1
  4186fc:	out    0x3a,al
  4186fe:	cwde   
  4186ff:	ror    BYTE PTR ds:0x4126ed4,0x39
  418706:	rol    bh,cl
  418708:	push   ecx
  418709:	and    al,bl
  41870b:	and    BYTE PTR [esi+ecx*4],cl
  41870e:	jnp    0x4186b6
  418710:	add    DWORD PTR [ebx],0x46
  418713:	out    0x28,al
  418715:	pop    ebp
  418716:	loopne 0x4186db
  418718:	add    ah,dl
  41871a:	xlat   BYTE PTR ds:[ebx]
  41871b:	dec    ebp
  41871c:	fsub   QWORD PTR [esi+ebp*1]
  41871f:	icebp  
  418720:	ror    bh,0x18
  418723:	adc    BYTE PTR [esi+ebp*1-0x68],0x3
  418728:	mov    dh,0x0
  41872a:	pop    ss
  41872b:	push   ss
  41872c:	adc    al,0x1b
  41872e:	sub    ebx,DWORD PTR [edx-0x65]
  418731:	xor    edx,0xffffff9b
  418734:	sub    cl,BYTE PTR [edx]
  418736:	test   BYTE PTR ds:0x377bbfbd,al
  41873c:	cmp    BYTE PTR [eax],0x47
  41873f:	pop    edi
  418740:	sbb    DWORD PTR [eax+edi*1],ebp
  418743:	add    eax,0x2aa59bc2
  418748:	lahf   
  418749:	and    al,0x9d
  41874b:	mov    cl,0x9a
  41874d:	lea    esp,[esp+edi*8+0x9]
  418751:	popf   
  418752:	push   cs
  418753:	cmp    BYTE PTR [ecx],cl
  418755:	pop    ebx
  418756:	outs   dx,BYTE PTR ds:[esi]
  418757:	adc    BYTE PTR [ebp+edi*8-0x5c8e395f],bh
  41875e:	out    dx,al
  41875f:	xchg   ecx,eax
  418760:	call   0x889c90f6
  418765:	out    dx,eax
  418766:	and    al,0x50
  418768:	add    BYTE PTR [ecx-0x7da81826],bh
  41876e:	xchg   ebp,eax
  41876f:	dec    ebp
  418770:	jae    0x418704
  418772:	sahf   
  418773:	sbb    eax,0x9df24e88
  418778:	addr16 cdq 
  41877a:	sbb    BYTE PTR [esi],ch
  41877c:	mov    edx,0xc5a68eb
  418781:	sbb    BYTE PTR [esi],dl
  418783:	loopne 0x4187fa
  418785:	bnd jmp 0xa0d71d1
  41878b:	aaa    
  41878c:	or     DWORD PTR [ebx-0x1badbbc1],esi
  418792:	xchg   esi,eax
  418793:	pop    es
  418794:	xchg   ecx,eax
  418795:	add    BYTE PTR [ebp+0x693cf068],0xb4
  41879c:	jp     0x4187e3
  41879e:	mov    ds:0x836780df,al
  4187a3:	mov    ds:0x77a4a02c,al
  4187a8:	push   eax
  4187a9:	shr    BYTE PTR [ebp+0x4bed133b],1
  4187af:	sub    al,0x87
  4187b1:	and    esi,edi
  4187b3:	pop    eax
  4187b5:	mov    eax,0x61e45ddc
  4187ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187bb:	(bad)
  4187bf:	clc    
  4187c0:	call   0xf190:0x207066d9
  4187c7:	pushf  
  4187c8:	ds inc eax
  4187ca:	fxch   st(3)
  4187cc:	ret    
  4187cd:	jno    0x418821
  4187cf:	xchg   esp,eax
  4187d0:	cmp    esp,esi
  4187d2:	dec    edi
  4187d3:	lahf   
  4187d4:	jecxz  0x4187dc
  4187d6:	dec    edi
  4187d7:	mov    bl,0x68
  4187d9:	les    edx,FWORD PTR [esp+ebx*8]
  4187dc:	push   ds
  4187dd:	out    dx,al
  4187de:	call   DWORD PTR [edi-0x3e677921]
  4187e4:	lahf   
  4187e5:	rcr    DWORD PTR [esi+0xaa8dda6],0xe9
  4187ec:	mov    ebp,0xca6270e
  4187f1:	rcr    BYTE PTR [edi],0x28
  4187f4:	and    dh,BYTE PTR [esi]
  4187f6:	jp     0x418838
  4187f8:	aas    
  4187f9:	add    eax,0xa37c05c0
  4187fe:	pop    ecx
  4187ff:	popf   
  418800:	pusha  
  418801:	call   0xed975c03
  418806:	vcvtsi2ss xmm3,xmm5,DWORD PTR ds:0x3d2d78d8
  41880e:	stc    
  41880f:	xor    ecx,0x69
  418812:	daa    
  418813:	mov    bh,0xe
  418815:	mov    esi,0x8ef9b8b3
  41881a:	push   edx
  41881b:	push   ss
  41881c:	jle    0x4187ec
  41881e:	mov    cl,0x3b
  418820:	jg     0x418859
  418822:	xor    BYTE PTR [ebp+0x6a91a1b5],bl
  418828:	cwde   
  418829:	sbb    esp,esp
  41882b:	pop    ebp
  41882c:	push   ebp
  41882d:	xchg   DWORD PTR [ecx-0x51],esp
  418830:	jnp    0x418836
  418832:	lock xor dl,ch
  418835:	ror    DWORD PTR [ebx+0x4d],0xb8
  418839:	or     dh,bl
  41883b:	xchg   esp,eax
  41883c:	and    DWORD PTR [eax-0x28],0xedde39b9
  418843:	pop    ecx
  418844:	add    dl,0x72
  418847:	retf   0x8d8c
  41884a:	outs   dx,DWORD PTR ds:[esi]
  41884b:	call   0x11d4:0x1cab8682
  418852:	test   DWORD PTR [edi],esp
  418854:	test   eax,0xbd0fa167
  418859:	and    eax,0xb63db4d3
  41885e:	test   al,0x7c
  418860:	sbb    DWORD PTR [ebx+0x11e87d10],ebx
  418866:	test   BYTE PTR [ebp+0x1c331475],dh
  41886c:	xchg   ebx,eax
  41886d:	mov    eax,0x6f2aac04
  418872:	mov    esi,0x80c7508
  418877:	pushf  
  418878:	popf   
  418879:	xchg   edx,eax
  41887a:	jge    0x4188fb
  41887c:	xor    al,0xc3
  41887e:	mov    ah,0xe0
  418880:	in     al,dx
  418881:	sbb    al,0x56
  418883:	test   eax,0x357a2c8e
  418888:	outs   dx,DWORD PTR ds:[esi]
  418889:	adc    BYTE PTR [eax+0x5492b417],bh
  41888f:	fadd   st(2),st
  418891:	sub    DWORD PTR [eax],ecx
  418893:	sbb    BYTE PTR [esp+ebp*4-0x47],dh
  418897:	ja     0x41882f
  418899:	das    
  41889a:	or     esi,DWORD PTR [ecx+0x11446543]
  4188a0:	mov    edx,0x3e541239
  4188a5:	adc    eax,0xfcc6b4ca
  4188aa:	mov    edi,0x260af594
  4188af:	outs   dx,BYTE PTR ds:[esi]
  4188b0:	jb     0x418891
  4188b2:	sbb    eax,DWORD PTR cs:[ecx-0x30a5614d]
  4188b9:	loopne 0x418882
  4188bb:	pop    eax
  4188bc:	xchg   edi,eax
  4188bd:	pop    edi
  4188be:	rcr    al,cl
  4188c0:	lods   eax,DWORD PTR ds:[esi]
  4188c1:	mov    ?,edx
  4188c3:	scas   al,BYTE PTR es:[edi]
  4188c4:	adc    ch,BYTE PTR [esi-0x4d]
  4188c7:	lahf   
  4188c8:	fdiv   QWORD PTR [edi-0x2c]
  4188cb:	mov    bh,0x27
  4188cd:	sub    al,0x20
  4188cf:	jmp    0x867e:0x8cfd4602
  4188d6:	sbb    dl,BYTE PTR [edi-0x41]
  4188d9:	push   esp
  4188da:	dec    ebp
  4188db:	inc    ecx
  4188dc:	es iret 
  4188de:	sbb    al,0x3d
  4188e0:	dec    ecx
  4188e1:	mov    esi,DWORD PTR [edi+0x11dd55fa]
  4188e7:	mov    DWORD PTR [ebp+0x6e],esp
  4188ea:	and    DWORD PTR [edx],edx
  4188ec:	push   ss
  4188ed:	push   edx
  4188ee:	cmp    dl,BYTE PTR [ecx+0x53]
  4188f1:	jno    0x418876
  4188f3:	addr16 push esp
  4188f5:	(bad)  
  4188f6:	mov    eax,0x48479fdc
  4188fb:	fsubr  st,st(5)
  4188fd:	loop   0x4188c5
  4188ff:	pop    ebp
  418900:	ss fwait
  418902:	push   ecx
  418903:	dec    esi
  418904:	fxch   st(3)
  418906:	jae    0x41893f
  418908:	pop    ebp
  418909:	adc    BYTE PTR [esi],ah
  41890b:	inc    edx
  41890c:	cmp    BYTE PTR [eax+ecx*1],dh
  41890f:	dec    esi
  418910:	mov    bh,0xd7
  418912:	push   eax
  418913:	loope  0x418951
  418915:	call   0x9ede:0x7bb9f482
  41891c:	dec    eax
  41891d:	bound  edi,QWORD PTR [ebx-0x76]
  418920:	aad    0x61
  418922:	pop    edi
  418923:	jp     0x418967
  418925:	jge    0x41896f
  418927:	fldenv [ecx-0x13]
  41892a:	inc    ebp
  41892b:	xchg   BYTE PTR [edx-0x68],al
  41892e:	scas   eax,DWORD PTR es:[edi]
  41892f:	add    dh,bh
  418931:	or     BYTE PTR [eax],ah
  418933:	adc    esi,DWORD PTR [ebx]
  418935:	jmp    0x41890d
  418937:	aad    0x17
  418939:	jg     0x418917
  41893b:	mov    ecx,edx
  41893d:	push   cs
  41893e:	pop    edi
  41893f:	dec    eax
  418940:	fld    TBYTE PTR [edx]
  418942:	aaa    
  418943:	fwait
  418944:	mov    eax,ds:0xd2fae545
  418949:	int    0xc8
  41894b:	ret    0x98e4
  41894e:	aas    
  41894f:	or     BYTE PTR ds:[eax-0x6ce56512],bl
  418956:	loopne 0x4188f7
  418958:	loope  0x41895f
  41895a:	arpl   cx,cx
  41895c:	xchg   edi,eax
  41895d:	into   
  41895e:	imul   eax,DWORD PTR [edx+ebx*8+0x4507fb1b],0x81470b44
  418969:	xor    esi,DWORD PTR [edx+0x148190e3]
  41896f:	jmp    0x308a:0xdc4c0d1
  418976:	sbb    DWORD PTR [edi+ebx*4+0x69],ecx
  41897a:	je     0x4189e3
  41897c:	ja     0x418994
  41897e:	pusha  
  41897f:	push   es
  418980:	fbstp  TBYTE PTR [esi]
  418982:	or     ecx,DWORD PTR [eax+0x6c]
  418985:	cs or  al,0x5c
  418988:	add    DWORD PTR [esp-0x3d],ebx
  41898c:	scas   al,BYTE PTR es:[edi]
  41898d:	(bad)  
  41898e:	pop    esp
  41898f:	sbb    edx,edx
  418991:	dec    edi
  418992:	mov    DWORD PTR [ecx],0x51d6e4db
  418998:	cs (bad) 
  41899a:	adc    ebp,ebx
  41899c:	dec    edi
  41899d:	fld    DWORD PTR [edi+ebp*8]
  4189a0:	xor    DWORD PTR [eax],eax
  4189a2:	sub    DWORD PTR [edx],0xe75207c0
  4189a8:	outs   dx,DWORD PTR ds:[esi]
  4189a9:	fcmovb st,st(4)
  4189ab:	je     0x41898b
  4189ad:	dec    ebp
  4189ae:	(bad)  
  4189af:	mov    ebx,0x5a295acd
  4189b4:	cmc    
  4189b5:	imul   ebp,DWORD PTR [ebp+0x44198630],0x20
  4189bc:	cmc    
  4189bd:	mov    cl,0x7b
  4189bf:	adc    dh,BYTE PTR [eax]
  4189c1:	add    al,0x76
  4189c3:	jae    0x418a00
  4189c5:	ja     0x41896c
  4189c7:	push   ecx
  4189c8:	push   ebx
  4189c9:	add    ecx,DWORD PTR [bx-0x5134]
  4189ce:	adc    bl,0xfb
  4189d1:	mov    bh,BYTE PTR [ebx+0x11]
  4189d4:	lds    esp,FWORD PTR [ecx-0x72]
  4189d7:	and    eax,0xc4595683
  4189dc:	and    eax,0xd2078050
  4189e1:	pop    ebp
  4189e2:	das    
  4189e3:	or     BYTE PTR [esi],0x2
  4189e6:	bnd ja 0x418a41
  4189e9:	jbe    0x4189de
  4189eb:	(bad)  
  4189ed:	daa    
  4189ee:	test   eax,0xd7cde201
  4189f3:	and    dl,BYTE PTR [ebp+0x1d]
  4189f6:	pop    esp
  4189f7:	mov    BYTE PTR [ecx],ah
  4189f9:	in     al,dx
  4189fa:	push   ebx
  4189fb:	test   DWORD PTR [edi+0x4b8160c8],ecx
  418a01:	js     0x418a30
  418a03:	mov    ds:0xc2734a6f,al
  418a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a09:	outs   dx,DWORD PTR ds:[esi]
  418a0a:	mov    ah,0x23
  418a0c:	jns    0x418a42
  418a0e:	xor    dh,BYTE PTR [esi+0x5165e3a7]
  418a14:	xchg   esp,eax
  418a15:	test   eax,0x43cc3188
  418a1a:	mov    edi,0x8e42de6e
  418a1f:	test   BYTE PTR [ebx-0x3eccf3bb],0x8b
  418a26:	dec    ebp
  418a27:	clc    
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	outs   dx,BYTE PTR ds:[esi]
  418a3f:	js     0x418aba
  418a41:	xor    edi,DWORD PTR [ecx]
  418a43:	pop    ds
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	or     eax,0x80343da1
  418a4f:	mov    eax,ds:0xcf130f8
  418a54:	loop   0x418a3c
  418a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a57:	ja     0x418a0c
  418a59:	mov    ebp,0x648fe46c
  418a5e:	ret    
  418a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a60:	repnz inc esi
  418a62:	mov    esi,ebx
  418a64:	mov    ecx,0x77832ace
  418a69:	pop    esp
  418a6a:	adc    al,0x3e
  418a6c:	not    BYTE PTR [eax-0x65]
  418a6f:	imul   ebp,DWORD PTR [esp+edx*8-0x4fa6c8f2],0x805cbea8
  418a7a:	shl    DWORD PTR [ebx],0xd8
  418a7d:	jno    0x418a4e
  418a7f:	mov    al,ds:0xba8d9b3
  418a84:	int    0xa5
  418a86:	repz mov eax,ds:0x6fea3b4f
  418a8c:	adc    DWORD PTR [esi],esi
  418a8e:	daa    
  418a8f:	jecxz  0x418aa7
  418a91:	fwait
  418a92:	repnz shl DWORD PTR [edx-0x37],0x40
  418a97:	outs   dx,BYTE PTR ds:[esi]
  418a98:	xchg   edi,eax
  418a99:	sti    
  418a9a:	cmp    ch,BYTE PTR [esi]
  418a9c:	jne    0x418ae9
  418a9e:	fcomp  DWORD PTR [ebx]
  418aa0:	lock dec BYTE PTR [eax+0x164a988e]
  418aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa9:	outs   dx,BYTE PTR ds:[esi]
  418aaa:	mov    ss,esi
  418aac:	pop    es
  418aad:	pop    esp
  418aae:	mov    edx,0x56c88442
  418ab3:	rcl    edx,1
  418ab5:	mov    esi,0xba9877d5
  418aba:	dec    eax
  418abb:	add    al,BYTE PTR [esi-0x7f]
  418abe:	push   es
  418abf:	pop    edi
  418ac0:	gs (bad) 
  418ac2:	in     eax,0xf0
  418ac4:	aas    
  418ac5:	ds mov dl,0x6c
  418ac8:	lahf   
  418ac9:	sub    edx,esp
  418acb:	pop    edx
  418acc:	jnp    0x418b06
  418ace:	ret    
  418acf:	inc    esi
  418ad0:	pop    ecx
  418ad1:	inc    eax
  418ad2:	inc    edx
  418ad3:	inc    ebp
  418ad4:	push   es
  418ad5:	sbb    eax,0xfb978bd4
  418ada:	adc    eax,DWORD PTR [eax]
  418adc:	push   eax
  418add:	inc    ecx
  418ade:	push   eax
  418adf:	rol    DWORD PTR [ebp+0xde8fbc],cl
  418ae5:	add    ebp,DWORD PTR [eax]
  418ae7:	mov    ebx,0xad739f7a
  418aec:	imul   BYTE PTR [ebp+0x27]
  418aef:	pop    ecx
  418af0:	inc    edi
  418af1:	ja     0x418abc
  418af3:	mov    esp,0xf2fc0cfe
  418af8:	sub    eax,0x84702cf8
  418afd:	popa   
  418afe:	sbb    dh,ah
  418b00:	jae    0x418a90
  418b02:	js     0x418ac0
  418b04:	jge    0x418ae6
  418b06:	popf   
  418b07:	fisttp DWORD PTR [ecx]
  418b09:	into   
  418b0a:	xchg   esi,eax
  418b0b:	(bad)  
  418b0c:	pop    ecx
  418b0d:	push   ecx
  418b0e:	pop    ss
  418b0f:	(bad)  
  418b10:	pushf  
  418b11:	inc    ebx
  418b12:	sub    DWORD PTR [esi-0x17],edi
  418b15:	mov    ds:0xc07fed82,al
  418b1a:	in     eax,dx
  418b1b:	xor    bl,BYTE PTR [eax+0x2d]
  418b1e:	mov    al,0xed
  418b20:	inc    esp
  418b21:	in     eax,dx
  418b22:	imul   ecx,DWORD PTR [esp+ebp*1-0x48],0x47
  418b27:	xor    DWORD PTR [edx-0x21dcf303],0xb87ae029
  418b31:	sahf   
  418b32:	dec    ecx
  418b33:	call   0x4345:0x9a6fcca4
  418b3a:	xchg   edi,eax
  418b3b:	xor    bl,ah
  418b3d:	mov    ebx,0x507f96b8
  418b42:	and    al,0x7e
  418b44:	fcomp  DWORD PTR [ecx+eax*8]
  418b47:	pop    es
  418b48:	test   BYTE PTR [ebp-0x2b2ee531],bh
  418b4e:	test   dh,bh
  418b50:	jmp    ebx
  418b52:	dec    edx
  418b53:	push   0x64
  418b55:	adc    dl,0xc8
  418b58:	in     eax,0xbe
  418b5a:	imul   edx,DWORD PTR [edi],0x1930c06a
  418b60:	ins    BYTE PTR es:[edi],dx
  418b61:	pop    eax
  418b62:	int3   
  418b63:	pop    ebp
  418b64:	dec    ebx
  418b65:	or     DWORD PTR [eax],ebp
  418b67:	call   0x2310:0x16c17976
  418b6e:	xchg   ecx,eax
  418b6f:	call   0xcf2f:0xff9c5726
  418b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b77:	ret    0xcf41
  418b7a:	or     al,0xf3
  418b7c:	push   cs
  418b7d:	pop    es
  418b7e:	punpckhdq mm2,QWORD PTR [edi-0x49]
  418b82:	cdq    
  418b83:	push   es
  418b84:	xchg   edx,eax
  418b85:	xchg   ecx,eax
  418b86:	les    edi,FWORD PTR [eax]
  418b88:	jns    0x418b19
  418b8a:	xlat   BYTE PTR ds:[ebx]
  418b8b:	les    ebp,FWORD PTR [eax]
  418b8d:	call   0x66dc:0x614fceb1
  418b94:	push   edx
  418b95:	push   ecx
  418b96:	jmp    DWORD PTR [esi+0x69f30a61]
  418b9c:	outs   dx,DWORD PTR ds:[esi]
  418b9d:	mov    eax,ds:0xbadf5c81
  418ba2:	sahf   
  418ba3:	mov    edx,0x7c901eed
  418ba8:	add    al,0x70
  418baa:	and    eax,0xa9e6abff
  418baf:	xchg   ebx,eax
  418bb0:	sub    BYTE PTR [ebx],cl
  418bb2:	adc    DWORD PTR [ecx-0x51cb87e7],ecx
  418bb8:	sar    DWORD PTR [ecx+0x6c0771e6],1
  418bbe:	mov    ds:0x42e30817,al
  418bc3:	mov    dl,0x56
  418bc5:	in     eax,0xad
  418bc7:	arpl   WORD PTR [esi-0x7b01ce56],ax
  418bcd:	jae    0x418bbe
  418bcf:	jecxz  0x418bea
  418bd1:	scas   al,BYTE PTR es:[edi]
  418bd2:	and    al,0x10
  418bd4:	fiadd  WORD PTR [esi-0x221a78e]
  418bda:	pop    edx
  418bdb:	dec    BYTE PTR [eax-0x102ce607]
  418be1:	pop    ebx
  418be2:	std    
  418be3:	bound  esi,QWORD PTR [esi]
  418be5:	repnz fwait
  418be7:	dec    esp
  418be8:	repz ss cmp eax,0x9841d4c8
  418bef:	sub    ch,dh
  418bf1:	sub    esi,esp
  418bf3:	jne    0x418b9a
  418bf5:	in     al,0x30
  418bf7:	gs (bad) 
  418bf9:	dec    edx
  418bfa:	cmp    eax,0x2f0877e4
  418bff:	xlat   BYTE PTR ds:[ebx]
  418c00:	lea    edi,[edx+0x75]
  418c03:	xchg   ebx,eax
  418c04:	shr    BYTE PTR [ebx-0x44],cl
  418c07:	in     al,dx
  418c08:	outs   dx,BYTE PTR ds:[esi]
  418c09:	add    al,0x97
  418c0b:	(bad)  
  418c0c:	jae    0x418bd1
  418c0e:	mov    dl,0x5d
  418c10:	adc    eax,eax
  418c12:	cmp    DWORD PTR ds:0x61eb2d02,ecx
  418c18:	stos   BYTE PTR es:[edi],al
  418c19:	and    BYTE PTR [esi],cl
  418c1b:	rol    DWORD PTR [eax+0x3899dac7],1
  418c21:	pop    es
  418c22:	sub    ebp,ecx
  418c24:	aam    0x9b
  418c26:	nop
  418c27:	pop    eax
  418c28:	es stos DWORD PTR es:[edi],eax
  418c2a:	nop
  418c2b:	sbb    BYTE PTR ss:[ebp+0x438ba1ef],0xa3
  418c33:	sbb    esp,DWORD PTR [edi+0xf44e972]
  418c39:	xchg   DWORD PTR [esi],esi
  418c3b:	dec    edx
  418c3c:	loope  0x418be8
  418c3e:	mov    WORD PTR [eax],gs
  418c40:	add    ch,dl
  418c42:	jge    0x418c46
  418c44:	pop    esp
  418c45:	xchg   al,ch
  418c47:	sub    cl,BYTE PTR [ecx-0x2478f33c]
  418c4d:	push   ebx
  418c4e:	(bad)  
  418c50:	xor    ah,BYTE PTR [edi+0x32869c25]
  418c56:	sbb    esp,DWORD PTR [edi-0x5e1f7922]
  418c5c:	mov    edi,0x4afc4702
  418c61:	psubq  mm2,QWORD PTR [edx]
  418c64:	mov    bh,0x31
  418c66:	cmp    ecx,DWORD PTR [eax+0xd]
  418c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c6a:	sti    
  418c6b:	sbb    eax,0x1c5342e8
  418c70:	imul   ecx,DWORD PTR [edx+0x4dd908a1],0xa17d3e4
  418c7a:	cmp    dh,cl
  418c7c:	or     BYTE PTR ds:0xdc073917,bl
  418c82:	pusha  
  418c83:	sub    bh,BYTE PTR [ecx+esi*1+0x5a]
  418c87:	cld    
  418c88:	push   ss
  418c89:	stos   BYTE PTR es:[edi],al
  418c8a:	stos   BYTE PTR es:[edi],al
  418c8b:	jmp    0xa42055ab
  418c90:	inc    ecx
  418c91:	(bad)  
  418c92:	jbe    0x418cec
  418c94:	ins    BYTE PTR es:[edi],dx
  418c95:	sbb    al,BYTE PTR [edx]
  418c97:	add    edi,DWORD PTR [ebx]
  418c99:	jmp    0xa37b:0x97ff2a51
  418ca0:	mov    eax,0x6aea0b02
  418ca5:	pop    esi
  418ca6:	and    DWORD PTR [ebx],eax
  418ca8:	xor    al,0xf
  418caa:	div    esi
  418cac:	ret    0x1604
  418caf:	sahf   
  418cb0:	inc    ecx
  418cb1:	push   esp
  418cb2:	mov    al,0xb9
  418cb4:	lock in al,dx
  418cb6:	rcr    esp,0x2c
  418cb9:	ds push 0xffffff80
  418cbc:	out    0x46,al
  418cbe:	push   cs
  418cbf:	dec    eax
  418cc0:	retf   0xcafb
  418cc3:	mov    esp,0xf63a6089
  418cc8:	(bad)  
  418cc9:	std    
  418cca:	fwait
  418ccb:	jecxz  0x418cec
  418ccd:	adc    DWORD PTR [eax+ecx*1],edx
  418cd0:	add    al,0x1
  418cd2:	xchg   DWORD PTR [edi-0x62686cb5],ebp
  418cd8:	or     edx,DWORD PTR [edi-0x2e05e35d]
  418cde:	pop    ebp
  418cdf:	mov    ebx,0x2b8c8527
  418ce4:	sub    eax,DWORD PTR cs:[edi]
  418ce7:	dec    ebx
  418ce8:	out    0x1e,al
  418cea:	add    eax,0x5c6f5f96
  418cef:	xor    esp,DWORD PTR [ecx]
  418cf1:	rol    BYTE PTR [ecx+0x3c2fffb9],1
  418cf7:	cmc    
  418cf8:	sbb    ebx,edi
  418cfa:	xchg   esi,eax
  418cfb:	ja     0x418d2f
  418cfd:	sbb    DWORD PTR [esi-0x4],0xb5277520
  418d04:	cdq    
  418d05:	cdq    
  418d06:	inc    eax
  418d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d08:	xor    ah,ah
  418d0a:	cdq    
  418d0b:	ins    BYTE PTR es:[edi],dx
  418d0c:	or     BYTE PTR [eax+edi*8],bl
  418d0f:	and    bh,BYTE PTR [ecx+0x22]
  418d12:	push   edx
  418d13:	mov    eax,0xaae89bfd
  418d18:	fs xchg esi,eax
  418d1a:	inc    ecx
  418d1b:	sbb    eax,0x3a013f44
  418d20:	xor    al,0x21
  418d22:	mov    al,ds:0x56b7838b
  418d27:	xchg   ecx,eax
  418d28:	lods   al,BYTE PTR ds:[esi]
  418d29:	cmp    eax,0x44
  418d2c:	mov    ch,0x15
  418d2e:	sub    edi,ebp
  418d30:	loop   0x418ccb
  418d32:	imul   ecx,esp,0x9
  418d35:	ins    DWORD PTR es:[edi],dx
  418d36:	pop    ebp
  418d37:	aad    0xf1
  418d39:	sbb    BYTE PTR [eax-0x2941b777],dl
  418d3f:	aam    0x7
  418d41:	sbb    al,0x5b
  418d43:	hlt    
  418d44:	test   eax,0xdf20ac90
  418d49:	gs inc edx
  418d4b:	and    ah,BYTE PTR [esi-0x10]
  418d4e:	arpl   WORD PTR [edi-0x6a0286ef],cx
  418d54:	hlt    
  418d55:	repnz mov edx,0xa258fd1e
  418d5b:	addr16 push ds
  418d5d:	addr16 ja 0x418d49
  418d60:	test   al,0x9e
  418d62:	or     al,0x79
  418d64:	je     0x418d8e
  418d66:	push   ebp
  418d67:	fild   QWORD PTR [esi]
  418d69:	call   0x705e:0xcdfa011f
  418d70:	(bad)  
  418d71:	ins    DWORD PTR es:[edi],dx
  418d72:	loope  0x418d67
  418d74:	in     eax,dx
  418d75:	sbb    DWORD PTR [eax],eax
  418d77:	prefetchwt1 BYTE PTR [ecx-0x1a498e49]
  418d7e:	mov    BYTE PTR [edx-0x102848c7],0x8a
  418d85:	ret    
  418d86:	repnz pop ss
  418d88:	pop    edi
  418d89:	pop    edi
  418d8a:	retf   0xbdf1
  418d8d:	aaa    
  418d8e:	and    al,0xc2
  418d90:	mov    cl,0xac
  418d92:	mov    ebx,0x5cf64e55
  418d97:	push   eax
  418d98:	mov    al,ds:0xda620ea0
  418d9d:	not    cl
  418d9f:	repz inc edi
  418da1:	mov    al,ds:0xc79ea140
  418da6:	fdiv   DWORD PTR [edx+eax*2-0x24]
  418daa:	dec    ecx
  418dab:	stc    
  418dac:	shr    DWORD PTR [edi+edi*8],1
  418daf:	adc    eax,0x3bf6f07f
  418db4:	in     al,0x1
  418db6:	loope  0x418daa
  418db8:	xchg   ecx,eax
  418db9:	(bad)  
  418dba:	out    dx,al
  418dbb:	in     al,0xc5
  418dbd:	cs fld st(5)
  418dc0:	dec    DWORD PTR [edi+0x1f3800c4]
  418dc6:	sub    eax,0x4d96030d
  418dcb:	ins    BYTE PTR es:[edi],dx
  418dcc:	pop    ecx
  418dcd:	(bad)  
  418dce:	mov    esp,0x3baa6fec
  418dd3:	pop    esp
  418dd4:	leave  
  418dd5:	sbb    BYTE PTR [ebx-0x8f34bf2],bh
  418ddb:	ins    BYTE PTR es:[edi],dx
  418ddc:	sub    DWORD PTR [esi-0x5],esp
  418ddf:	jno    0x418db8
  418de1:	std    
  418de2:	xchg   esi,eax
  418de3:	push   eax
  418de4:	inc    ebp
  418de5:	push   0x6a573b5a
  418dea:	scas   eax,DWORD PTR es:[edi]
  418deb:	push   ebp
  418dec:	imul   ebx,DWORD PTR ds:0x183018e4,0xd7a09053
  418df6:	fcmovnb st,st(3)
  418df8:	mov    bh,0x74
  418dfa:	vpmacsdd ymm9,ymm1,ymm5,YMMWORD PTR [ecx-0x72]
  418e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e02:	jae    0x418dc7
  418e04:	sahf   
  418e05:	and    edi,DWORD PTR [edi+0x8cafbcf]
  418e0b:	xor    ebx,DWORD PTR [ebp-0x596690d1]
  418e11:	mov    BYTE PTR [edx-0x3e],bl
  418e14:	and    dh,BYTE PTR [ebx-0x2d]
  418e17:	mov    al,ds:0xb40eb250
  418e1c:	mov    ebx,0x657169ee
  418e21:	inc    edx
  418e22:	repz in eax,0x60
  418e25:	sub    DWORD PTR [esi-0x48],0xffffffca
  418e29:	leave  
  418e2a:	inc    esi
  418e2b:	dec    eax
  418e2c:	mov    BYTE PTR [eax],bl
  418e2e:	lds    esi,FWORD PTR [esi+0x12]
  418e31:	add    esp,DWORD PTR [edi+0x76ab852]
  418e37:	(bad)  
  418e39:	add    cl,BYTE PTR ds:[eax+edi*2+0x7296bf7f]
  418e41:	gs mov bl,0x69
  418e44:	sbb    DWORD PTR [edx+0x6ffe7e89],esp
  418e4a:	dec    edi
  418e4b:	add    eax,0x55624482
  418e50:	sub    al,0x48
  418e52:	or     BYTE PTR [edi-0x62],0xfe
  418e56:	jno    0x418ea0
  418e58:	mov    edi,0x78c25b20
  418e5d:	lods   eax,DWORD PTR ds:[esi]
  418e5e:	std    
  418e5f:	jp     0x418dfb
  418e61:	pop    ecx
  418e62:	scas   al,BYTE PTR es:[edi]
  418e63:	je     0x418e7c
  418e65:	pop    esp
  418e66:	mov    edx,0x26b61c54
  418e6b:	add    DWORD PTR [esi+0x35],edi
  418e6e:	push   ecx
  418e6f:	and    al,0x28
  418e71:	xchg   ecx,eax
  418e72:	lods   al,BYTE PTR ds:[esi]
  418e73:	adc    BYTE PTR [eax],dl
  418e75:	cmc    
  418e76:	out    0x72,al
  418e78:	sub    eax,0xea065e9a
  418e7d:	mov    ch,0xc7
  418e7f:	test   al,cl
  418e81:	sub    eax,0xe2063c18
  418e86:	mov    edx,0x8a8acf22
  418e8b:	push   ecx
  418e8c:	pop    ebx
  418e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e8e:	in     eax,dx
  418e8f:	mov    al,ds:0xc320e007
  418e94:	or     al,0xaf
  418e96:	pop    esi
  418e97:	out    0xf0,eax
  418e99:	jns    0x418e31
  418e9b:	retf   0xc7c1
  418e9e:	cmp    DWORD PTR [edi-0x5f0f205c],ecx
  418ea4:	xchg   ebp,eax
  418ea5:	mov    ?,eax
  418ea7:	and    bh,al
  418ea9:	cmc    
  418eaa:	add    DWORD PTR [ebp+eiz*1-0x4b],ecx
  418eae:	jmp    0x418ebf
  418eb0:	in     eax,0xc2
  418eb2:	jge    0x418e4b
  418eb4:	fild   DWORD PTR [esp+eax*8-0x6c864909]
  418ebb:	das    
  418ebc:	jecxz  0x418e7b
  418ebe:	cmp    eax,0x9b9ae423
  418ec3:	dec    edx
  418ec4:	mov    dh,0xb9
  418ec6:	and    DWORD PTR [ecx],0x6a42d012
  418ecc:	xor    eax,0xa5d6a0b8
  418ed1:	dec    eax
  418ed2:	xchg   ebx,eax
  418ed3:	retf   
  418ed4:	cld    
  418ed5:	push   edi
  418ed6:	fcomp  QWORD PTR [ebx]
  418ed8:	out    0xb8,eax
  418eda:	dec    ebp
  418edb:	shr    DWORD PTR [esi+0x3d],cl
  418ede:	xchg   DWORD PTR [eax],edx
  418ee0:	ret    0xf705
  418ee3:	jae    0x418f02
  418ee5:	out    0x95,al
  418ee7:	lods   al,BYTE PTR ds:[esi]
  418ee8:	or     eax,0xfebfc1cc
  418eed:	mov    dl,0xfb
  418eef:	and    bl,ch
  418ef1:	mov    edx,0x5ca672ce
  418ef6:	loop   0x418f66
  418ef8:	mov    edx,0x5c52d0d1
  418efd:	aas    
  418efe:	mov    eax,0x370afa1a
  418f03:	out    0x1b,al
  418f05:	jne    0x418eee
  418f07:	cmc    
  418f08:	pop    es
  418f09:	jne    0x418f59
  418f0b:	imul   al
  418f0d:	jns    0x418f49
  418f0f:	lods   eax,DWORD PTR ds:[esi]
  418f10:	dec    esi
  418f11:	(bad)  
  418f12:	in     eax,0x62
  418f14:	jb     0x418ed7
  418f16:	mov    cl,0x3b
  418f18:	sti    
  418f19:	push   0x6f227501
  418f1e:	mov    cl,0x3f
  418f20:	add    DWORD PTR [ebp-0x71],esp
  418f23:	fimul  DWORD PTR [ebp+edx*8-0x4d]
  418f27:	dec    esi
  418f28:	xchg   DWORD PTR [ebx-0x7b],edx
  418f2b:	pop    ebp
  418f2c:	div    al
  418f2e:	dec    esp
  418f2f:	mov    ds:0xb71835a6,eax
  418f34:	mov    edx,0x9e031df9
  418f39:	(bad)  
  418f3a:	dec    edx
  418f3b:	(bad)  
  418f3c:	or     DWORD PTR [esi+esi*2+0x13],ecx
  418f40:	stos   DWORD PTR es:[edi],eax
  418f41:	push   ecx
  418f42:	mov    ch,0x0
  418f44:	or     dl,ch
  418f46:	cmp    dl,cl
  418f48:	push   edx
  418f49:	and    eax,0x6198efec
  418f4e:	jmp    0x6b6:0x150c62df
  418f55:	stc    
  418f56:	fmulp  st(1),st
  418f58:	push   es
  418f59:	sub    ebp,DWORD PTR [ecx+0x1f4296b2]
  418f5f:	pop    edi
  418f60:	pushf  
  418f61:	shl    BYTE PTR [edi+0x35],1
  418f64:	cmp    al,0xf0
  418f66:	xchg   esp,eax
  418f67:	xchg   esp,eax
  418f68:	shl    DWORD PTR [ecx-0x42],cl
  418f6b:	popa   
  418f6c:	sub    eax,DWORD PTR [esi-0x1d]
  418f6f:	into   
  418f70:	xor    ebp,DWORD PTR [ebx-0x4e]
  418f73:	mov    al,ds:0x80e74598
  418f78:	mov    cl,bl
  418f7a:	mov    edx,DWORD PTR [ecx+0x6a]
  418f7d:	adc    eax,0xe713b014
  418f82:	mov    ebp,0xfe3ddd05
  418f87:	mov    esp,0x611ccfa8
  418f8c:	inc    esp
  418f8d:	xchg   esp,eax
  418f8e:	sti    
  418f8f:	push   0x18
  418f91:	add    al,0x1d
  418f93:	mov    BYTE PTR [ecx-0x42bfe720],bh
  418f99:	mov    edx,0xef46b6d
  418f9e:	fld    QWORD PTR [edx+ebx*2]
  418fa1:	mov    ecx,0xcd81e01
  418fa6:	inc    ebx
  418fa7:	mov    fs,WORD PTR [eax]
  418fa9:	jecxz  0x418fb0
  418fab:	cdq    
  418fac:	dec    ebp
  418fad:	add    eax,0x8c0e3fa4
  418fb2:	in     eax,0xff
  418fb4:	xor    al,0xbb
  418fb6:	popa   
  418fb7:	sbb    al,0x4f
  418fb9:	add    al,BYTE PTR [edi]
  418fbb:	jp     0x41902f
  418fbd:	lds    esi,FWORD PTR [edx]
  418fbf:	mov    esi,DWORD PTR [edx-0x46]
  418fc2:	jbe    0x418f9c
  418fc4:	out    dx,eax
  418fc5:	rcl    BYTE PTR [ebp+0x2581b13f],cl
  418fcb:	xor    DWORD PTR [esi+0x478a04c7],edx
  418fd1:	rcr    ebp,0xab
  418fd4:	push   edx
  418fd5:	outs   dx,DWORD PTR ds:[esi]
  418fd6:	xor    dl,dl
  418fd8:	dec    ecx
  418fd9:	adc    eax,DWORD PTR [edi+0x3c]
  418fdc:	adc    DWORD PTR [edx+0xb],edi
  418fdf:	gs jle 0x418f9f
  418fe2:	repnz sub eax,0x1c24f40b
  418fe8:	imul   ebp,DWORD PTR ds:0xdb7ec0d6,0x53
  418fef:	mov    edi,0x25324814
  418ff4:	xchg   BYTE PTR [edi-0x5198f251],ah
  418ffa:	add    al,0x49
  418ffc:	jmp    0xa46b:0x52dfde5d
  419003:	shl    BYTE PTR ds:0x1498b4f,cl
  419009:	stos   DWORD PTR es:[edi],eax
  41900a:	sub    esi,esi
  41900c:	push   ecx
  41900d:	dec    esi
  41900e:	push   ds
  41900f:	pop    eax
  419010:	jns    0x418fd6
  419012:	add    al,0x29
  419014:	les    edx,FWORD PTR [ecx-0x2c]
  419017:	inc    eax
  419018:	lahf   
  419019:	pop    esp
  41901a:	push   esp
  41901b:	xor    BYTE PTR ds:0xda2b0fa6,cl
  419021:	out    0x6e,eax
  419023:	mov    bl,0x40
  419025:	enter  0x762,0x5
  419029:	popf   
  41902a:	pusha  
  41902b:	xchg   ebp,eax
  41902c:	push   edx
  41902d:	adc    esp,DWORD PTR gs:[esi]
  419030:	dec    eax
  419031:	and    BYTE PTR [edi-0x10d4e481],bl
  419037:	pop    es
  419038:	add    edi,DWORD PTR [ebp+0x52]
  41903b:	inc    edx
  41903c:	pushf  
  41903d:	test   eax,0xe8d4f9e
  419042:	jns    0x418fcb
  419044:	cli    
  419045:	stc    
  419046:	mov    cl,0xd4
  419048:	dec    ebx
  419049:	ins    DWORD PTR es:[edi],dx
  41904a:	mov    ds:0xfd40e9d5,eax
  41904f:	inc    edi
  419050:	pop    ss
  419051:	and    esp,DWORD PTR [esi+0x1e]
  419054:	imul   edi,edi,0x2d
  419057:	sub    eax,0xcdeacb1f
  41905c:	clc    
  41905d:	mov    ss,WORD PTR [edx-0x76]
  419060:	jmp    0x4190ae
  419062:	addr16 dec cl
  419065:	adc    DWORD PTR [ecx],esp
  419067:	ret    0xcd54
  41906a:	pop    esi
  41906b:	sbb    BYTE PTR [ecx],bl
  41906d:	cdq    
  41906e:	out    0xd4,eax
  419070:	lods   al,BYTE PTR ds:[esi]
  419071:	xlat   BYTE PTR ds:[ebx]
  419072:	sub    ebp,DWORD PTR [ecx]
  419074:	mov    edi,DWORD PTR [ebx-0x584acbe1]
  41907a:	enter  0xaea0,0xc4
  41907e:	and    BYTE PTR [ebx+0x1a],dl
  419081:	dec    ebx
  419082:	int3   
  419083:	inc    edi
  419084:	scas   eax,DWORD PTR es:[edi]
  419085:	xchg   ecx,edx
  419087:	or     eax,0xcfd5f854
  41908c:	sbb    DWORD PTR [ebp+0x2fdb3b00],ebx
  419092:	cmc    
  419093:	jb     0x419034
  419095:	cmp    ah,BYTE PTR ds:0xa11f2e09
  41909b:	sbb    ebx,0xd77c0084
  4190a1:	mov    ecx,ss
  4190a3:	push   edi
  4190a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a5:	nop
  4190a6:	pop    es
  4190a7:	addr16 ret 
  4190a9:	stos   DWORD PTR es:[edi],eax
  4190aa:	dec    edx
  4190ab:	out    0x1a,al
  4190ad:	jl     0x41904e
  4190af:	loopne 0x419084
  4190b1:	mov    esi,0x56b86b65
  4190b6:	cmp    al,ah
  4190b8:	cmp    cl,al
  4190ba:	sub    BYTE PTR [ecx-0x742d9eb7],ch
  4190c0:	bound  eax,QWORD PTR [ebp-0x582c1ad3]
  4190c6:	(bad)  
  4190c7:	outs   dx,BYTE PTR ds:[esi]
  4190c8:	mov    al,ds:0x2253cacc
  4190cd:	mov    ch,0x9f
  4190cf:	aas    
  4190d0:	sbb    DWORD PTR [edi+0x73991af],0x2a273099
  4190da:	adc    DWORD PTR [edx+edx*8],0x38
  4190de:	inc    ecx
  4190df:	adc    WORD PTR [esi],si
  4190e2:	pop    esi
  4190e3:	or     eax,0x37307f59
  4190e8:	jp     0x41912a
  4190ea:	ror    DWORD PTR [edx],cl
  4190ec:	(bad)  
  4190ed:	data16 neg BYTE PTR [edi-0x7a]
  4190f1:	das    
  4190f2:	inc    ecx
  4190f3:	xor    BYTE PTR [esi-0x57f7ef6],bl
  4190f9:	mov    eax,0xc3de0572
  4190fe:	or     al,0xed
  419100:	int    0xef
  419102:	cmp    DWORD PTR [ecx+0x49],esp
  419105:	add    BYTE PTR [esi],ah
  419107:	mov    ss,WORD PTR [ecx+0xf]
  41910a:	cmp    esi,DWORD PTR [esi+0x3e]
  41910d:	xor    eax,0xe2672f49
  419112:	ret    0x9788
  419115:	lds    edx,FWORD PTR [edi]
  419117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419118:	xor    al,BYTE PTR [ebp-0x5faab13]
  41911e:	sbb    edi,DWORD PTR [edi+0x3b]
  419121:	out    dx,al
  419122:	cmp    eax,DWORD PTR [ebx]
  419124:	xor    esp,ebp
  419126:	adc    eax,0x73d2b74c
  41912b:	sub    ah,BYTE PTR [edx]
  41912d:	les    ecx,FWORD PTR [edi-0x37]
  419130:	push   eax
  419131:	test   al,0x68
  419133:	dec    ebx
  419134:	js     0x41910c
  419136:	sar    BYTE PTR [ebx-0x4a331809],cl
  41913c:	addr16 pop esi
  41913e:	sbb    bl,BYTE PTR [eax-0x4d]
  419141:	in     eax,dx
  419142:	pop    esp
  419143:	test   BYTE PTR [eax+0x1a],dl
  419146:	daa    
  419147:	add    al,0x90
  419149:	loop   0x4191bb
  41914b:	sub    cl,BYTE PTR [edi-0x7e]
  41914e:	(bad)  
  41914f:	mov    bl,0xb2
  419151:	sub    dh,BYTE PTR [eax-0x54f59c2f]
  419157:	enter  0xa4f0,0xcc
  41915b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41915c:	inc    edx
  41915d:	pop    edx
  41915e:	cmc    
  41915f:	bound  eax,QWORD PTR [ebp-0x1b9226d4]
  419165:	and    eax,0xb6047ec2
  41916a:	pop    edx
  41916b:	loopne 0x4191e5
  41916d:	aam    0xfe
  41916f:	nop
  419170:	add    ecx,DWORD PTR [edi]
  419172:	mov    ds:0x473cb5be,al
  419177:	je     0x419122
  419179:	mov    ebx,0xbba033ed
  41917e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41917f:	mov    edi,0x5439d532
  419184:	mov    al,ds:0xc5754c53
  419189:	xchg   ebx,eax
  41918a:	mov    ebx,0x866447cc
  41918f:	js     0x41915f
  419191:	pop    edi
  419192:	leave  
  419193:	pop    ebx
  419194:	out    0x20,al
  419196:	fwait
  419197:	loopne 0x41918d
  419199:	add    edi,DWORD PTR ds:0xaa66f22f
  41919f:	dec    esp
  4191a0:	fild   WORD PTR [esi-0x6d]
  4191a3:	js     0x4191c8
  4191a5:	call   0xa4ab9613
  4191aa:	or     ah,cl
  4191ac:	dec    ebp
  4191ad:	cld    
  4191ae:	sub    al,0x61
  4191b0:	icebp  
  4191b1:	and    BYTE PTR [ecx+0x56],cl
  4191b4:	pusha  
  4191b5:	add    BYTE PTR [edi+edx*8],bh
  4191b8:	sbb    eax,DWORD PTR [esi]
  4191ba:	out    0xcb,al
  4191bc:	fisubr DWORD PTR [edx]
  4191be:	fidivr WORD PTR [ecx]
  4191c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191c1:	clc    
  4191c2:	nop
  4191c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c4:	pop    esi
  4191c5:	daa    
  4191c6:	sbb    DWORD PTR [edi],0x5ba0ef0e
  4191cc:	ins    DWORD PTR es:[edi],dx
  4191cd:	repz clc 
  4191cf:	(bad)  
  4191d0:	sub    ah,BYTE PTR [ebx+0x6a]
  4191d3:	adc    al,0x9b
  4191d5:	cmp    BYTE PTR [esi-0x1d],0x8a
  4191d9:	fisubr WORD PTR [esi+0x29b4feed]
  4191df:	fs xchg ecx,eax
  4191e1:	xchg   BYTE PTR [ebx+0x2962ea],ch
  4191e7:	cmp    eax,0x20597c90
  4191ec:	pusha  
  4191ed:	cmp    eax,0x2cab122b
  4191f2:	fwait
  4191f3:	inc    eax
  4191f4:	fs push ecx
  4191f6:	mov    dl,0x17
  4191f8:	es pushw es
  4191fb:	cs or  eax,0x6fec5831
  419201:	int3   
  419202:	out    dx,eax
  419203:	arpl   WORD PTR [edx-0x18],ax
  419206:	mov    ebx,0x1281eddc
  41920b:	out    dx,eax
  41920c:	mov    esp,0xb7a74684
  419211:	lahf   
  419212:	stos   BYTE PTR es:[edi],al
  419213:	aam    0xb9
  419215:	fcmovnbe st,st(0)
  419217:	cmp    DWORD PTR [eax+0x3ec99333],0xa40bdd2b
  419221:	push   ebx
  419222:	mov    eax,0xb0c662df
  419227:	mov    ecx,0x40cfaa5a
  41922c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922d:	dec    edi
  41922e:	ins    BYTE PTR es:[edi],dx
  41922f:	adc    DWORD PTR [ebx+0x6b],0xb7fc6416
  419236:	js     0x419248
  419238:	repz pop esi
  41923a:	popf   
  41923b:	xor    eax,0xa6de7754
  419240:	and    dl,BYTE PTR [ebx]
  419242:	hlt    
  419243:	int3   
  419244:	push   ss
  419245:	iret   
  419246:	mov    al,ds:0xbf7e1ba7
  41924b:	jecxz  0x419246
  41924d:	cli    
  41924e:	shr    DWORD PTR [edx+0x69],1
  419251:	dec    esp
  419252:	inc    ebp
  419253:	mov    eax,0x411e85fe
  419258:	retf   
  419259:	sti    
  41925a:	sti    
  41925b:	test   BYTE PTR [edx],bl
  41925d:	fwait
  41925e:	xor    al,0xb9
  419260:	popa   
  419261:	(bad)  
  419262:	cmp    edi,DWORD PTR gs:[bp+di]
  419266:	xor    eax,0x7bb1045b
  41926b:	and    eax,0x941c4f3a
  419270:	les    edx,FWORD PTR ds:0xa228d14
  419276:	sar    BYTE PTR [ebx-0x8636bb],0x18
  41927d:	dec    eax
  41927e:	scas   al,BYTE PTR es:[edi]
  41927f:	adc    DWORD PTR [ecx],ecx
  419281:	ins    DWORD PTR es:[edi],dx
  419282:	or     eax,0xd6ae76d7
  419287:	das    
  419288:	scas   al,BYTE PTR es:[edi]
  419289:	dec    esp
  41928a:	out    0x52,eax
  41928c:	adc    BYTE PTR [eax-0x77],0xf6
  419290:	xor    DWORD PTR [edi+0x57],0x4976d264
  419297:	fmulp  st(3),st
  419299:	test   al,0xeb
  41929b:	ror    BYTE PTR [ebp-0x69],cl
  41929e:	jecxz  0x41925b
  4192a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a1:	scas   eax,DWORD PTR es:[edi]
  4192a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a3:	clc    
  4192a4:	mov    esi,0x1bedff12
  4192a9:	imul   BYTE PTR [edx+ecx*8]
  4192ac:	xchg   edx,eax
  4192ad:	adc    DWORD PTR [eax-0x22f163be],0xa337487d
  4192b7:	sbb    BYTE PTR [ebx-0x2c813067],al
  4192bd:	mov    al,0xd8
  4192bf:	mov    ds:0xf374266,eax
  4192c4:	mov    bh,0x38
  4192c6:	inc    ebx
  4192c7:	mov    bh,0x74
  4192c9:	in     eax,dx
  4192ca:	retf   0xbfca
  4192cd:	arpl   WORD PTR [esi],cx
  4192cf:	sbb    al,BYTE PTR [ebx-0x38]
  4192d2:	ret    
  4192d3:	int3   
  4192d4:	jb     0x41929b
  4192d6:	(bad)  
  4192d7:	jmp    0xfc95:0x915ae4df
  4192de:	add    bl,BYTE PTR [edi]
  4192e0:	jnp    0x41935d
  4192e2:	shl    DWORD PTR [esi+0x120fbef2],1
  4192e8:	jnp    0x41931c
  4192ea:	adc    dh,ch
  4192ec:	out    dx,al
  4192ed:	retf   0x45b2
  4192f0:	ror    eax,cl
  4192f2:	push   esp
  4192f3:	mov    ebp,0x455960d1
  4192f8:	cmp    edx,DWORD PTR [esi]
  4192fa:	mov    esi,DWORD PTR [esi]
  4192fc:	push   ss
  4192fd:	pushf  
  4192fe:	iret   
  4192ff:	jb     0x4192d1
  419301:	cwde   
  419302:	jbe    0x419345
  419304:	fidivr WORD PTR [ebx-0x794acf50]
  41930a:	das    
  41930b:	or     al,0x5a
  41930d:	sbb    DWORD PTR [esi-0x74],ecx
  419310:	add    BYTE PTR [ebx*1+0xa567e9],ah
  419317:	mov    edx,0x9b9dea6d
  41931c:	inc    ebx
  41931d:	sub    DWORD PTR [ebp+0x578051aa],0x23
  419324:	jo     0x419392
  419326:	jle    0x4192e9
  419328:	pop    ebx
  419329:	popa   
  41932a:	arpl   WORD PTR [eax],bp
  41932c:	xchg   ebp,eax
  41932d:	scas   al,BYTE PTR es:[edi]
  41932e:	jae    0x41931a
  419330:	push   esp
  419331:	lahf   
  419332:	add    DWORD PTR [edx-0x4fa082de],ecx
  419338:	(bad)  
  419339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933a:	inc    ebp
  41933b:	push   ds
  41933c:	out    dx,al
  41933d:	sub    ebp,edx
  41933f:	pop    esp
  419340:	dec    ecx
  419341:	neg    dl
  419343:	out    0xb9,eax
  419345:	lods   eax,DWORD PTR ds:[esi]
  419346:	lock je 0x4192f5
  419349:	jle    0xc2eab4ab
  41934f:	xor    eax,0x10c17648
  419354:	cdq    
  419355:	xchg   DWORD PTR [ecx],ebp
  419357:	pop    ds
  419358:	jmp    0x419357
  41935a:	cmp    eax,0xdf73b7f5
  41935f:	out    0x1b,al
  419361:	pushf  
  419362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419363:	push   esp
  419364:	push   edi
  419365:	push   edi
  419366:	dec    ebp
  419367:	and    eax,0x278f7c2d
  41936c:	mov    edi,0xfaa0d626
  419371:	jnp    0x419301
  419373:	les    eax,FWORD PTR [eax+0x24]
  419376:	mov    bh,0x5f
  419378:	fcomp  st(4)
  41937a:	test   eax,0xede06466
  41937f:	add    DWORD PTR ds:0xd673f915,eax
  419385:	fs ja  0x4193b9
  419388:	jno    0x4193dd
  41938a:	sti    
  41938b:	mov    esp,ebx
  41938d:	pop    ebx
  41938e:	test   al,0x2a
  419390:	aad    0x9c
  419392:	inc    edi
  419393:	test   DWORD PTR [esi+0x743daa89],0x4b84d813
  41939d:	pusha  
  41939e:	mov    dl,0xea
  4193a0:	pop    es
  4193a1:	loopne 0x4193dd
  4193a3:	push   edx
  4193a4:	and    al,0x2f
  4193a6:	sbb    edi,0x43231fa1
  4193ac:	mov    esi,0x26280be
  4193b1:	cmp    ebx,eax
  4193b3:	jge    0x41933e
  4193b5:	add    al,BYTE PTR [ecx-0xc]
  4193b8:	fdivr  st(5),st
  4193ba:	push   0xffffffed
  4193bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193bd:	push   ds
  4193be:	jg     0x41936f
  4193c0:	sub    al,0xfe
  4193c2:	std    
  4193c3:	ins    BYTE PTR es:[edi],dx
  4193c4:	cli    
  4193c5:	adc    DWORD PTR [ebx+0x66],ebx
  4193c8:	fisttp DWORD PTR [edi]
  4193ca:	dec    eax
  4193cb:	add    ah,BYTE PTR [esi-0x8]
  4193ce:	push   esi
  4193cf:	push   esi
  4193d0:	inc    edi
  4193d1:	fsubr  DWORD PTR [ecx]
  4193d3:	pop    eax
  4193d4:	or     al,0x6c
  4193d6:	repnz dec ebp
  4193d8:	xor    ebp,esi
  4193da:	pushf  
  4193db:	mov    DWORD PTR [esi-0x14],ecx
  4193de:	sbb    ch,dl
  4193e0:	mov    WORD PTR [ecx-0x30],gs
  4193e3:	ficomp DWORD PTR [ebp-0x74ab3b7d]
  4193e9:	lods   al,BYTE PTR ds:[esi]
  4193ea:	ins    DWORD PTR es:[edi],dx
  4193eb:	xchg   esp,eax
  4193ec:	adc    dh,BYTE PTR gs:[ebx]
  4193ef:	mov    eax,0x7571d759
  4193f4:	cdq    
  4193f5:	add    esp,esp
  4193f7:	mov    ds:0x23b7ce13,al
  4193fc:	jbe    0x41943c
  4193fe:	popa   
  4193ff:	add    eax,DWORD PTR [esi]
  419401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419402:	inc    edi
  419403:	ins    BYTE PTR es:[edi],dx
  419404:	(bad)  
  419405:	popf   
  419406:	mov    ds:0x3a772389,eax
  41940b:	add    BYTE PTR [edx-0x528c093],0x61
  419412:	sbb    esi,DWORD PTR [eax]
  419414:	test   eax,0x5adedce8
  419419:	dec    ebx
  41941a:	sbb    al,0xad
  41941c:	mov    WORD PTR ds:[ecx+ebx*8+0x5fdeefcf],es
  419424:	jnp    0x4193f6
  419426:	mov    dh,0x3c
  419428:	push   edi
  419429:	mov    ebx,0x35647285
  41942e:	mov    fs,esi
  419430:	sub    eax,0x8b1b70b9
  419435:	inc    ebp
  419436:	jl     0x41942d
  419438:	test   eax,eax
  41943a:	cmp    edx,eax
  41943c:	push   ebp
  41943d:	fistp  DWORD PTR [esi-0x3a]
  419440:	and    bl,BYTE PTR [ebx]
  419442:	push   cs
  419443:	sbb    bl,BYTE PTR [ebp-0x5d]
  419446:	cdq    
  419447:	and    ecx,DWORD PTR [esi-0x6b]
  41944a:	cmp    ebp,DWORD PTR [esi+0x6f]
  41944d:	pop    edi
  41944e:	jno    0x419473
  419450:	cmp    ch,ch
  419452:	dec    ebp
  419453:	sbb    BYTE PTR [edx+0x6c],ch
  419456:	fcmovnu st,st(5)
  419458:	jne    0x419435
  41945a:	fmul   QWORD PTR [esi-0x4]
  41945d:	cmp    ebp,ebp
  41945f:	and    DWORD PTR [edx],ecx
  419461:	cmp    dh,BYTE PTR [eax-0x13]
  419464:	add    al,0x69
  419466:	daa    
  419467:	(bad)  
  419468:	cmc    
  419469:	add    BYTE PTR [ebp-0x4791d4a5],al
  41946f:	fsubr  DWORD PTR [esi+eax*2-0xf]
  419473:	aaa    
  419474:	adc    DWORD PTR [eax],esi
  419476:	into   
  419477:	sar    ebx,cl
  419479:	sbb    BYTE PTR ss:[eax],ah
  41947c:	scas   eax,DWORD PTR es:[edi]
  41947d:	ja     0x4194a8
  41947f:	retf   
  419480:	sub    dl,BYTE PTR [ebx-0x63]
  419483:	iret   
  419484:	(bad)  
  419485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419486:	inc    esi
  419487:	in     eax,0x4
  419489:	jmp    0x4194fe
  41948b:	ret    0xf85
  41948e:	stc    
  41948f:	adc    eax,0x17a74643
  419494:	jmp    0x8a22a848
  419499:	pusha  
  41949a:	adc    dh,BYTE PTR [esp+eiz*2-0xb3d76d9]
  4194a1:	jl     0x4194d7
  4194a3:	inc    ebp
  4194a4:	dec    edx
  4194a5:	sub    eax,0x9a6f6f90
  4194aa:	hlt    
  4194ab:	cs ffreep st(6)
  4194ae:	pop    ecx
  4194af:	aad    0xee
  4194b1:	mov    edi,0x3debd82d
  4194b6:	add    edx,DWORD PTR ds:0xe2c3f581
  4194bc:	cmp    DWORD PTR [esi+0x4],eax
  4194bf:	adc    ch,BYTE PTR [edx-0x6b]
  4194c2:	xchg   edi,eax
  4194c3:	fidivr DWORD PTR [eax-0x728e8247]
  4194c9:	adc    al,BYTE PTR [ecx]
  4194cb:	dec    ebp
  4194cc:	mov    edx,0xf47e6ff9
  4194d1:	adc    al,0x26
  4194d3:	push   eax
  4194d4:	mov    ds:0x5ea03a3e,al
  4194d9:	mov    eax,0xf01faed
  4194de:	daa    
  4194df:	xor    ah,BYTE PTR [edi-0x30]
  4194e2:	sub    eax,0x296cac6f
  4194e7:	retf   
  4194e8:	sar    DWORD PTR [ebp+0x3c],0xb8
  4194ec:	sub    DWORD PTR [ecx],esp
  4194ee:	inc    ebx
  4194ef:	lods   eax,DWORD PTR ds:[esi]
  4194f0:	mov    ebx,0x69096e0
  4194f5:	pop    ebp
  4194f6:	fiadd  WORD PTR [ebx+0x18]
  4194f9:	jns    0x4194d5
  4194fb:	sar    DWORD PTR [ecx],1
  4194fd:	xchg   ebx,eax
  4194fe:	jmp    0xb518:0xe6e819b5
  419505:	fwait
  419506:	out    dx,eax
  419507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419508:	movmskps ebx,xmm4
  41950b:	ret    
  41950c:	cld    
  41950d:	adc    edx,DWORD PTR [edi+0x38a2d5d0]
  419513:	xor    al,0xa6
  419515:	(bad)  
  419516:	push   esp
  419517:	xor    edi,eax
  419519:	out    dx,al
  41951a:	adc    ebx,DWORD PTR [edx+0x61]
  41951d:	frstpm(287 only) 
  41951f:	mov    BYTE PTR [edi],ah
  419521:	cmp    DWORD PTR [ebp+0x44],0xffffffc0
  419525:	pop    edx
  419526:	xchg   ecx,eax
  419527:	popa   
  419528:	xor    dh,dl
  41952a:	inc    BYTE PTR [esi-0x7ba58c0a]
  419530:	push   cs
  419531:	pop    es
  419532:	adc    ah,BYTE PTR [edx]
  419534:	lahf   
  419535:	daa    
  419536:	test   eax,0xdc6dc08
  41953b:	out    dx,al
  41953c:	test   al,0x17
  41953e:	jbe    0x419537
  419540:	jmp    0x4195a0
  419542:	loop   0x41953e
  419544:	popa   
  419545:	sub    esi,ebp
  419547:	mov    eax,0xd6cf601e
  41954c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954d:	dec    ecx
  41954e:	outs   dx,DWORD PTR ds:[esi]
  41954f:	mov    al,ds:0x4a126226
  419554:	out    0x88,eax
  419556:	ins    DWORD PTR es:[edi],dx
  419557:	scas   eax,DWORD PTR es:[edi]
  419558:	in     eax,dx
  419559:	sub    eax,0x3eb988a8
  41955e:	mov    ds:0x98bba1b5,al
  419563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419564:	hlt    
  419565:	lds    ebp,FWORD PTR [esi]
  419567:	jmp    FWORD PTR [edx]
  419569:	pop    DWORD PTR [esi+eiz*8+0x3b178462]
  419570:	(bad)  
  419571:	pop    DWORD PTR [ebx-0x680a54ed]
  419577:	inc    ebp
  419578:	bound  edx,QWORD PTR [esi-0x4cc3a9a4]
  41957e:	xchg   edi,eax
  41957f:	push   0xc
  419581:	loopne 0x419531
  419583:	jle    0x419534
  419585:	sbb    eax,0xf19d3cfa
  41958a:	ficomp DWORD PTR [ebx]
  41958c:	data16 cmc 
  41958e:	mov    edi,0xf9299384
  419593:	mov    eax,ds:0x5cfd7795
  419598:	mov    bl,0x17
  41959a:	mov    ah,0xee
  41959c:	xor    eax,0x252ca087
  4195a1:	xchg   edi,eax
  4195a2:	div    BYTE PTR [ebp+0x22]
  4195a5:	mov    ebx,0x58a3c639
  4195aa:	xchg   ecx,eax
  4195ab:	test   DWORD PTR [ecx],ebx
  4195ad:	xchg   DWORD PTR [esi-0x1a353a7a],edx
  4195b3:	out    dx,eax
  4195b4:	adc    BYTE PTR [ecx+0x5b4bc854],al
  4195ba:	pop    esi
  4195bb:	push   esp
  4195bc:	mov    es,edi
  4195be:	mov    cl,0x9d
  4195c0:	out    0x28,al
  4195c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195c3:	mov    dl,0xc9
  4195c5:	jns    0x4195de
  4195c7:	inc    edx
  4195c8:	xchg   ebx,eax
  4195c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195ca:	push   ds
  4195cb:	push   eax
  4195cc:	ror    BYTE PTR [eax-0x7cc995f5],0x18
  4195d3:	rcr    DWORD PTR gs:[eax-0x203ce8a8],cl
  4195da:	rol    DWORD PTR [eiz*2-0x57a64044],1
  4195e1:	inc    ebx
  4195e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195e3:	and    BYTE PTR [eax],bl
  4195e5:	ret    0x2c78
  4195e8:	and    BYTE PTR [edi-0x46],ch
  4195eb:	push   ebp
  4195ec:	mov    ebx,0xbe0a711c
  4195f1:	mov    gs,esi
  4195f3:	test   edi,esp
  4195f5:	jne    0x419603
  4195f7:	push   esp
  4195f8:	cwde   
  4195f9:	call   0x22f4:0x8335b007
  419600:	xor    DWORD PTR [esi+0x1457c8da],edi
  419606:	add    BYTE PTR [ebx-0x1597ff74],cl
  41960c:	sbb    eax,ebp
  41960e:	mov    ah,0xeb
  419610:	sbb    dh,BYTE PTR [eax+0x44219368]
  419616:	seta   BYTE PTR ds:[eax]
  41961a:	aaa    
  41961b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41961c:	out    0x5,eax
  41961e:	js     0x4195ad
  419620:	dec    esi
  419621:	and    bl,al
  419623:	sbb    BYTE PTR [ebx-0x8],bl
  419626:	push   ebx
  419627:	adc    ch,ah
  419629:	inc    ecx
  41962a:	mov    al,0xbd
  41962c:	jmp    0xae403768
  419631:	sub    al,0xc9
  419633:	das    
  419634:	imul   eax,DWORD PTR ds:0x64029b65,0x12180864
  41963e:	xchg   ebx,eax
  41963f:	jne    0x419608
  419641:	(bad)  
  419642:	mov    al,ds:0x1202cdc8
  419647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419648:	lds    eax,FWORD PTR [esp+edx*2-0x37]
  41964c:	xor    al,0x48
  41964e:	adc    eax,0x5f1df9f9
  419653:	int    0x40
  419655:	outs   dx,DWORD PTR ds:[esi]
  419656:	int    0xee
  419658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419659:	jb     0x41963b
  41965b:	mov    edi,DWORD PTR [edx+0x7173b8e7]
  419661:	fdiv   DWORD PTR [eax*4-0x7d2edaf6]
  419668:	loopne 0x4196a2
  41966a:	dec    esp
  41966b:	inc    ecx
  41966c:	mov    eax,0xee31a99b
  419671:	repz aas 
  419673:	jp     0x41966f
  419675:	inc    eax
  419676:	sub    ebp,eax
  419678:	cmp    eax,0x769faee9
  41967d:	out    dx,al
  41967e:	fcomp  DWORD PTR [edx]
  419680:	into   
  419681:	outs   dx,DWORD PTR ds:[esi]
  419682:	dec    eax
  419683:	dec    esi
  419684:	popa   
  419685:	xlat   BYTE PTR ds:[ebx]
  419686:	sbb    eax,0xc1e04f69
  41968b:	dec    ecx
  41968c:	test   eax,0x637cd4ad
  419691:	adc    ebp,edi
  419693:	das    
  419694:	les    ebp,FWORD PTR [edx+0x26d5fe23]
  41969a:	aam    0xb3
  41969c:	mov    ecx,0x47fb2c28
  4196a1:	inc    edx
  4196a2:	sbb    BYTE PTR [edx-0x8],0xa4
  4196a6:	(bad)  
  4196a7:	out    dx,al
  4196a8:	and    eax,0x201d7a57
  4196ad:	push   edx
  4196ae:	call   0x4ccda32b
  4196b3:	cli    
  4196b4:	jns    0x41968f
  4196b6:	das    
  4196b7:	dec    ecx
  4196b8:	repnz sbb DWORD PTR [eax],edi
  4196bb:	inc    ecx
  4196bc:	popf   
  4196bd:	cwde   
  4196be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196bf:	fs push ds
  4196c1:	xor    al,0x72
  4196c3:	lods   al,BYTE PTR ds:[esi]
  4196c4:	sub    esp,edx
  4196c6:	push   ds
  4196c7:	ret    0x8cfe
  4196ca:	adc    eax,DWORD PTR ds:0xf9ab18f4
  4196d0:	mov    dl,0xf0
  4196d2:	dec    edi
  4196d3:	(bad)  
  4196d4:	push   esi
  4196d5:	jmp    0x56bd69c3
  4196da:	or     ah,BYTE PTR [ecx]
  4196dc:	pop    edx
  4196dd:	mov    edi,0x33a5a65
  4196e2:	mov    ebp,ebp
  4196e4:	mov    eax,ds
  4196e6:	cmc    
  4196e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e8:	inc    BYTE PTR [ecx-0x1c]
  4196eb:	push   cs
  4196ec:	das    
  4196ed:	inc    edx
  4196ee:	sub    ah,BYTE PTR [esi+edx*2+0x5f92b13a]
  4196f5:	lds    ebp,FWORD PTR [edi]
  4196f7:	inc    ebp
  4196f8:	pandn  mm5,mm7
  4196fb:	out    dx,eax
  4196fc:	and    eax,0x89f6e002
  419701:	sub    al,0xd
  419703:	lea    esi,[ecx-0x3f]
  419706:	sub    DWORD PTR [edi-0x3a96d705],ebp
  41970c:	and    cl,BYTE PTR [ebx+0x4c]
  41970f:	mov    ebx,0xc354cf3e
  419714:	outs   dx,BYTE PTR ds:[esi]
  419715:	push   edx
  419716:	xlat   BYTE PTR ds:[ebx]
  419717:	jae    0x41972c
  419719:	aam    0x6
  41971b:	jns    0x4196c2
  41971d:	add    BYTE PTR [edx+0x4d],ch
  419720:	mov    BYTE PTR [ecx-0x5ff9141b],dh
  419726:	sbb    cl,BYTE PTR [ebx+0x367d1496]
  41972c:	clc    
  41972d:	dec    edx
  41972e:	and    al,0x3f
  419730:	pop    edx
  419731:	mov    eax,ds:0x76e34df9
  419736:	cmc    
  419737:	test   DWORD PTR [ebx+0x5dda9548],ecx
  41973d:	arpl   WORD PTR fs:[edx-0x1e519aa4],di
  419744:	jl     0x419796
  419746:	or     ah,BYTE PTR [ebx]
  419748:	inc    ebx
  419749:	repz pop eax
  41974b:	inc    edx
  41974c:	adc    al,BYTE PTR [ebx-0x1a]
  41974f:	or     DWORD PTR [ebx+0x2e],esp
  419752:	stos   DWORD PTR es:[edi],eax
  419753:	or     eax,0x2a0491b8
  419758:	adc    dh,BYTE PTR [edi-0x78]
  41975b:	xor    BYTE PTR [ecx+0x1839275b],al
  419761:	test   al,0xc7
  419763:	mov    ch,BYTE PTR [ebx-0x1e36cab9]
  419769:	pop    es
  41976a:	mov    dl,0x73
  41976c:	std    
  41976d:	xor    bl,BYTE PTR [ebx+ebx*4+0x54]
  419771:	daa    
  419772:	jmp    FWORD PTR [esi]
  419774:	jo     0x41971d
  419776:	lods   eax,DWORD PTR ds:[esi]
  419777:	fsub   DWORD PTR [ecx+0x5e782503]
  41977d:	push   es
  41977e:	fimul  WORD PTR [esi-0xf6dc688]
  419784:	enter  0x92df,0x3c
  419788:	in     eax,dx
  419789:	add    eax,0x71225173
  41978e:	and    bl,dh
  419790:	ret    
  419791:	(bad)  
  419792:	stc    
  419793:	into   
  419794:	mov    ebp,0xf3b1d273
  419799:	arpl   WORD PTR [ecx-0x5dcc739b],bp
  41979f:	dec    esi
  4197a0:	add    BYTE PTR fs:[eax-0x3be09671],0xfe
  4197a8:	dec    esp
  4197a9:	loopne 0x419771
  4197ab:	pop    esp
  4197ac:	frstor [ecx-0x13]
  4197af:	mov    ch,0x64
  4197b1:	or     DWORD PTR fs:[ebx+ecx*2-0x25],0x59
  4197b7:	mov    eax,0xf0df3b36
  4197bc:	add    al,BYTE PTR [ebx]
  4197be:	sbb    DWORD PTR [ecx+0x6299d16e],ecx
  4197c4:	loop   0x419761
  4197c6:	jle    0x419845
  4197c8:	adc    bh,BYTE PTR [esi-0x46]
  4197cb:	jne    0x419848
  4197cd:	xor    al,0x86
  4197cf:	mov    edi,es
  4197d1:	loopne 0x41977e
  4197d3:	fiadd  DWORD PTR [edi]
  4197d5:	and    DWORD PTR [edi],0x4
  4197d8:	aam    0xb0
  4197da:	aam    0xd4
  4197dc:	pop    esi
  4197dd:	pop    ecx
  4197de:	jecxz  0x419853
  4197e0:	jns    0x4197b2
  4197e2:	mov    bh,0x8
  4197e4:	push   0xf42dee13
  4197e9:	push   edi
  4197ea:	out    dx,eax
  4197eb:	sahf   
  4197ec:	inc    ebx
  4197ed:	in     eax,0x13
  4197ef:	scas   al,BYTE PTR es:[edi]
  4197f0:	xor    eax,0x35b3ecc8
  4197f5:	push   ss
  4197f6:	xor    BYTE PTR [esi-0x4a3007d4],al
  4197fc:	lods   al,BYTE PTR ds:[esi]
  4197fd:	or     BYTE PTR [ebx-0x6beafc22],0x91
  419804:	push   ebp
  419805:	push   edi
  419806:	pop    esp
  419807:	repz lds esp,FWORD PTR [ebp-0x63]
  41980b:	in     al,dx
  41980c:	outs   dx,DWORD PTR ds:[esi]
  41980d:	cmp    cl,BYTE PTR [edi]
  41980f:	xlat   BYTE PTR ds:[ebx]
  419810:	mov    eax,ds:0xbaf20ee4
  419815:	jnp    0x419833
  419817:	stc    
  419818:	add    esp,0x98f1a2c5
  41981e:	mov    ds:0xc6abeeba,eax
  419823:	in     eax,dx
  419824:	int    0x29
  419826:	xchg   DWORD PTR [ebx-0x1ec71c1d],esi
  41982c:	mov    edi,0x4c0b19e0
  419831:	es in  al,0xd0
  419834:	xchg   esp,eax
  419835:	or     edi,DWORD PTR [esi]
  419837:	jecxz  0x419880
  419839:	adc    eax,0x1dcef779
  41983e:	mov    dl,BYTE PTR [ecx+0x5]
  419841:	test   al,0xf0
  419843:	loop   0x419835
  419845:	dec    esp
  419846:	mov    cs,WORD PTR [edi+0x61]
  419849:	call   0xf54e:0x7df12c30
  419850:	mov    al,ds:0xfd67c603
  419855:	and    BYTE PTR [edi+eax*1],dh
  419858:	xor    bl,BYTE PTR [esi]
  41985a:	sti    
  41985b:	ss (bad) 
  41985d:	scas   eax,DWORD PTR es:[edi]
  41985e:	in     eax,dx
  41985f:	popa   
  419860:	call   0x5d2e:0x5d8b7077
  419867:	add    edi,esi
  419869:	pop    es
  41986a:	jmp    0x4198cb
  41986c:	push   0x1
  41986e:	jl     0x41987b
  419870:	adc    al,0x1
  419872:	ds mov ebp,0xb9c151e8
  419878:	pop    ds
  419879:	imul   al
  41987b:	shr    DWORD PTR [ecx-0x3a],0x93
  41987f:	jns    0x4198b9
  419881:	xchg   ebp,eax
  419882:	jbe    0x4198d8
  419884:	popa   
  419885:	aad    0x99
  419887:	mov    ah,0x10
  419889:	lds    ebx,FWORD PTR ds:0xde551209
  41988f:	test   eax,0x8b809d04
  419894:	inc    esi
  419895:	jae    0x41983e
  419897:	in     al,0x2c
  419899:	pop    edi
  41989a:	pop    ss
  41989b:	je     0x419875
  41989d:	addr16 aas 
  41989f:	push   ebp
  4198a0:	or     esi,ebx
  4198a2:	pop    ebx
  4198a3:	mov    eax,ds:0x60274f65
  4198a8:	mov    al,dl
  4198aa:	cli    
  4198ab:	xor    DWORD PTR [eax-0x6f83fcf9],0x1cb0b363
  4198b5:	fild   WORD PTR [ebp+0x1f]
  4198b8:	sbb    eax,0xac47ee74
  4198bd:	or     ebp,DWORD PTR [eax]
  4198bf:	and    eax,0x1b714360
  4198c4:	mov    WORD PTR [ebp+0x72264e31],?
  4198ca:	dec    esi
  4198cb:	nop
  4198cc:	push   edi
  4198cd:	push   ss
  4198ce:	push   0xffffffd8
  4198d0:	test   al,0x27
  4198d2:	cld    
  4198d3:	mov    edx,0xb7df8fd3
  4198d8:	sub    eax,0xaf711db9
  4198dd:	call   0xfb462b90
  4198e2:	mov    esi,0x271c52bc
  4198e7:	and    al,0x7f
  4198e9:	cwde   
  4198ea:	cld    
  4198eb:	out    0x59,eax
  4198ed:	sahf   
  4198ee:	mov    esi,0x558d824f
  4198f3:	mov    al,ds:0xb03c4456
  4198f8:	xor    dl,BYTE PTR [esi-0x48]
  4198fb:	leave  
  4198fc:	jp     0x4198a0
  4198fe:	test   DWORD PTR [edx],edi
  419900:	add    ebx,eax
  419902:	and    ecx,esp
  419904:	lea    edi,[edx-0x23a3621c]
  41990a:	add    BYTE PTR [edx],0x86
  41990d:	mov    ah,0x5a
  41990f:	in     eax,dx
  419910:	pop    ss
  419911:	sbb    bl,bl
  419913:	stc    
  419914:	fcom   QWORD PTR [edx-0x9]
  419917:	or     BYTE PTR [edi+edx*2-0x2a],cl
  41991b:	stos   DWORD PTR es:[edi],eax
  41991c:	dec    edx
  41991d:	mov    al,ds:0x31c3a7f6
  419922:	mov    ecx,DWORD PTR [esi+0x23236d3a]
  419928:	jmp    0x419972
  41992a:	xchg   edx,eax
  41992b:	nop
  41992c:	inc    edx
  41992d:	pop    esp
  41992e:	mov    esp,0x7f4ad877
  419933:	xchg   edx,eax
  419934:	outs   dx,BYTE PTR ds:[esi]
  419935:	mov    al,ds:0xc2a1ae3a
  41993a:	rol    DWORD PTR [esi+0x4757b1a7],cl
  419940:	inc    eax
  419941:	or     eax,0x59695bc7
  419946:	int    0xe4
  419948:	sbb    DWORD PTR [edi+0x4a0a5da],0x8eeeac7a
  419952:	or     al,0x5c
  419954:	test   DWORD PTR [esi+eax*2-0x683d38cd],ecx
  41995b:	inc    ebx
  41995c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41995d:	imul   edi,DWORD PTR [edx],0x6476bce6
  419963:	into   
  419964:	(bad)  
  419965:	and    DWORD PTR [ebp+edx*2-0x74],ebp
  419969:	ja     0x4199dc
  41996b:	les    ecx,FWORD PTR [edi+0x7d44634a]
  419971:	pop    ds
  419972:	lods   al,BYTE PTR ds:[esi]
  419973:	es enter 0x3bff,0x2a
  419978:	push   edi
  419979:	retf   
  41997a:	sub    dl,BYTE PTR [esi+0x37]
  41997d:	push   ecx
  41997e:	std    
  41997f:	or     BYTE PTR [esi],cl
  419981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419983:	sbb    al,0xaa
  419985:	pop    ebp
  419986:	sbb    DWORD PTR [esp+ecx*4-0x23],esp
  41998a:	fadd   QWORD PTR [ebp+0x71eec2fd]
  419990:	xchg   edi,eax
  419991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419992:	and    ebx,ebx
  419994:	xor    DWORD PTR [eax+esi*8+0x14c69637],eax
  41999b:	cmp    esi,ebp
  41999d:	imul   esp,DWORD PTR [eax-0x1f],0xffffff94
  4199a1:	test   cl,ch
  4199a3:	cmpxchg eax,esp
  4199a6:	test   DWORD PTR [eax-0x34986c63],ebx
  4199ac:	jmp    0x24f5:0x3376ec9e
  4199b3:	or     eax,0x8da4b2be
  4199b8:	or     DWORD PTR [ebx+0x63],ebp
  4199bb:	sbb    DWORD PTR [edi+0x2b],ebx
  4199be:	repnz lds edi,FWORD PTR [esi+0xb0f4524]
  4199c5:	clc    
  4199c6:	push   ss
  4199c7:	mov    BYTE PTR [ebx],bh
  4199c9:	push   ds
  4199ca:	sub    DWORD PTR [ebp+0x5d54f34e],eax
  4199d0:	call   0x7fd57e3d
  4199d5:	xchg   ebp,eax
  4199d6:	inc    edx
  4199d7:	cmp    ebp,DWORD PTR [edx-0x42d3086b]
  4199dd:	pusha  
  4199de:	and    dh,BYTE PTR [ebx-0x61]
  4199e1:	test   BYTE PTR [esi-0x5d1eab53],ah
  4199e7:	lahf   
  4199e8:	mov    edx,0x822fcca5
  4199ed:	hlt    
  4199ee:	vminss xmm5,xmm4,DWORD PTR [edi-0x12]
  4199f3:	retf   
  4199f4:	push   ss
  4199f5:	idiv   BYTE PTR ds:0xb4663463
  4199fb:	xlat   BYTE PTR ds:[ebx]
  4199fc:	out    0xea,eax
  4199fe:	into   
  4199ff:	dec    ebx
  419a00:	pop    eax
  419a01:	cld    
  419a02:	imul   edi,DWORD PTR [esi],0x79
  419a05:	adc    DWORD PTR [eax+eiz*2-0x5f],ecx
  419a09:	fs jecxz 0x419a2c
  419a0c:	lea    edi,[eax-0x50]
  419a0f:	xor    BYTE PTR [eax-0x20],ah
  419a12:	xor    eax,0x36b41b38
  419a17:	sbb    edx,DWORD PTR [eax+0x7d6af3b2]
  419a1d:	stos   DWORD PTR es:[edi],eax
  419a1e:	out    0xee,al
  419a20:	stos   BYTE PTR es:[edi],al
  419a21:	hlt    
  419a22:	mov    dl,0x19
  419a24:	xlat   BYTE PTR ds:[ebx]
  419a25:	adc    edi,DWORD PTR [ecx]
  419a27:	fisubr WORD PTR [ecx+0x37]
  419a2a:	call   0x31c53a50
  419a2f:	adc    bl,BYTE PTR [eax]
  419a31:	and    BYTE PTR [esi+0x7a],al
  419a34:	outs   dx,BYTE PTR ds:[esi]
  419a35:	sbb    eax,0x92a64979
  419a3a:	repnz pop ecx
  419a3c:	lods   eax,DWORD PTR ds:[esi]
  419a3d:	jnp    0x419a7a
  419a3f:	add    BYTE PTR [esi+0x5619bb57],al
  419a45:	es xor eax,0xde7ac1fc
  419a4b:	ret    
  419a4c:	mov    ah,bh
  419a4e:	push   es
  419a4f:	mov    esp,0x7bfcc6a7
  419a54:	jg     0x419a0b
  419a56:	in     eax,0xfd
  419a58:	scas   al,BYTE PTR es:[edi]
  419a59:	pop    es
  419a5a:	pop    ds
  419a5b:	jo     0x419a8a
  419a5d:	gs dec edi
  419a5f:	stos   DWORD PTR es:[edi],eax
  419a60:	outs   dx,BYTE PTR ds:[esi]
  419a61:	fidiv  WORD PTR [edi-0x6]
  419a64:	stc    
  419a65:	add    BYTE PTR [edi+0x66ad9cf2],al
  419a6b:	dec    esp
  419a6c:	cmc    
  419a6d:	cmp    ebp,DWORD PTR [ebx+0x6e]
  419a70:	mov    eax,0x3430433d
  419a75:	pop    ss
  419a76:	xor    DWORD PTR [edx+esi*2+0xbfc3547],edi
  419a7d:	aam    0x55
  419a7f:	or     cl,BYTE PTR [ecx+0x55a7c5c9]
  419a85:	pop    esp
  419a86:	dec    ebx
  419a87:	sub    DWORD PTR [esi-0x478737c9],0xffffffdf
  419a8e:	pop    es
  419a8f:	and    ecx,DWORD PTR [ecx-0x13]
  419a92:	fs dec eax
  419a94:	repz in al,0xbf
  419a97:	xchg   edx,eax
  419a98:	(bad)  
  419a9a:	mov    eax,0xf310bd8d
  419a9f:	sub    ah,BYTE PTR [ecx]
  419aa1:	inc    edx
  419aa2:	xchg   DWORD PTR [eax-0x3d427a42],edi
  419aa8:	mov    ch,BYTE PTR [eax-0x6bbbd6e1]
  419aae:	mov    al,BYTE PTR [edi]
  419ab0:	jbe    0x419ae9
  419ab2:	xadd   dl,dl
  419ab5:	ins    BYTE PTR es:[edi],dx
  419ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab7:	mov    bh,0x2
  419ab9:	int    0x4c
  419abb:	loope  0x419a6c
  419abd:	scas   al,BYTE PTR es:[edi]
  419abe:	ret    0x63f2
  419ac1:	mov    ebx,0x236377e
  419ac6:	mov    ds:0x1ae25ca4,al
  419acb:	push   ebp
  419acc:	fxch   st(0)
  419ace:	and    al,0x5f
  419ad0:	stos   BYTE PTR es:[edi],al
  419ad1:	xor    ch,BYTE PTR [ecx+0x1a7218a7]
  419ad7:	nop
  419ad8:	xor    DWORD PTR [ecx+0x6edbc72],edx
  419ade:	popa   
  419adf:	mov    edi,0xd2d34a89
  419ae4:	adc    al,0x3b
  419ae6:	sahf   
  419ae7:	jecxz  0x419a70
  419ae9:	das    
  419aea:	aad    0x3f
  419aec:	sbb    eax,0xeb4488a1
  419af1:	push   cs
  419af2:	icebp  
  419af3:	int3   
  419af4:	aas    
  419af5:	push   edx
  419af6:	mov    dl,BYTE PTR [ebp+0x22]
  419af9:	xchg   ebx,eax
  419afa:	mov    bh,0x23
  419afc:	pushf  
  419afd:	mov    ecx,0x767b1c15
  419b02:	sbb    eax,0xc4fd97f9
  419b07:	pop    ss
  419b08:	mov    BYTE PTR [esi+0x8429659],cl
  419b0e:	cld    
  419b0f:	fld    st(5)
  419b11:	fisubr DWORD PTR [ebx]
  419b13:	cmp    DWORD PTR [edi+ebx*4-0x54],ebp
  419b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b18:	xor    BYTE PTR [esp+ebx*8+0x70],cl
  419b1c:	push   ds
  419b1d:	jnp    0x419b17
  419b1f:	mov    cl,0x96
  419b21:	mov    bl,0x5
  419b23:	fsubr  QWORD PTR [eax-0x31]
  419b26:	mov    WORD PTR [ebp-0x68],ss
  419b29:	ret    0x2208
  419b2c:	push   ebx
  419b2d:	rol    ebp,cl
  419b2f:	rol    BYTE PTR [edx],1
  419b31:	cmp    edx,DWORD PTR [ecx+esi*1-0x7102707a]
  419b38:	mov    edx,0xc05686b6
  419b3d:	hlt    
  419b3e:	into   
  419b3f:	mov    eax,ds:0xa50de599
  419b44:	lods   eax,DWORD PTR ds:[esi]
  419b45:	mov    ah,0xab
  419b47:	aam    0xf3
  419b49:	xchg   esp,eax
  419b4a:	xlat   BYTE PTR ds:[ebx]
  419b4b:	js     0x419b68
  419b4d:	in     eax,dx
  419b4e:	push   DWORD PTR [eax-0x4b72ec5]
  419b54:	mov    DWORD PTR ss:[eax+0x3d],ebx
  419b58:	cmp    al,0x66
  419b5a:	mov    esp,0x5f890554
  419b5f:	lsl    ebx,WORD PTR [edx+0x2c]
  419b63:	mov    dl,0xc7
  419b65:	mov    esi,0xa9520f10
  419b6a:	addr16 data16 sbb dl,ah
  419b6e:	into   
  419b6f:	(bad)  
  419b70:	jmp    0x724ae26
  419b75:	stos   BYTE PTR es:[edi],al
  419b76:	cmc    
  419b77:	mov    edi,0x142731cb
  419b7c:	xchg   BYTE PTR [eax+0x15ef83ca],dl
  419b82:	pop    esi
  419b83:	jne    0x419b5e
  419b85:	add    esp,DWORD PTR [ecx-0x2b]
  419b88:	fmul   QWORD PTR [eax]
  419b8a:	xchg   esi,eax
  419b8b:	int3   
  419b8c:	les    ecx,FWORD PTR [ecx+0x18f73e8f]
  419b92:	inc    ebp
  419b93:	sub    al,0xaa
  419b95:	sbb    BYTE PTR [eax-0x27f5d461],bh
  419b9b:	jno    0x419c05
  419b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b9e:	(bad)  
  419ba0:	int3   
  419ba1:	test   al,0xdc
  419ba3:	push   ebx
  419ba4:	aas    
  419ba5:	dec    ebx
  419ba6:	push   ds
  419ba7:	push   ebp
  419ba8:	mov    ah,0xa8
  419baa:	sbb    ebx,ebp
  419bac:	stos   BYTE PTR es:[edi],al
  419bad:	xor    BYTE PTR [ebp+0x5af18388],0xb7
  419bb4:	sbb    BYTE PTR [eax-0x648326b4],bh
  419bba:	jnp    0x419bcb
  419bbc:	aad    0xfb
  419bbe:	mov    cl,0xaa
  419bc0:	jns    0x419c3a
  419bc2:	push   edx
  419bc3:	xchg   DWORD PTR [ebp-0x4f97e70e],ecx
  419bc9:	inc    ebx
  419bca:	mov    cl,0x11
  419bcc:	cmc    
  419bcd:	mov    ds:0x276faa27,al
  419bd2:	and    al,0x99
  419bd4:	pushf  
  419bd5:	jmp    0x24dcb90d
  419bda:	(bad)
  419bdd:	xchg   edx,eax
  419bde:	sbb    ah,BYTE PTR [ebx-0x3]
  419be1:	sti    
  419be2:	sbb    ah,BYTE PTR [ecx]
  419be4:	jae    0x419bf2
  419be6:	dec    ebp
  419be7:	xor    esi,0x94e7d5e9
  419bed:	fnsave [esi-0x77]
  419bf0:	mov    ds,WORD PTR [ecx+0x6b]
  419bf3:	test   al,0x7e
  419bf5:	xor    ebx,esi
  419bf7:	adc    al,0x55
  419bf9:	push   edi
  419bfa:	adc    BYTE PTR [ebp+0x69],0x87
  419bfe:	cmp    ah,bl
  419c00:	xchg   ebp,eax
  419c01:	stc    
  419c02:	leave  
  419c03:	xchg   ecx,eax
  419c04:	repnz xor DWORD PTR [ebp+eax*1-0x3b],eax
  419c09:	(bad)  
  419c0a:	pop    ecx
  419c0b:	aad    0xf2
  419c0d:	js     0x419c54
  419c0f:	js     0x419c5e
  419c11:	dec    edi
  419c12:	lds    esi,FWORD PTR [esp+edi*1-0x69]
  419c16:	push   0xffffff94
  419c18:	stos   BYTE PTR es:[edi],al
  419c19:	lods   al,BYTE PTR ds:[esi]
  419c1a:	loopne 0x419b9e
  419c1c:	jl     0x419c24
  419c1e:	clc    
  419c1f:	jns    0x419bec
  419c21:	adc    al,0x17
  419c23:	xor    eax,0xd49f98f5
  419c28:	test   DWORD PTR [esp+ebp*4-0x12],eax
  419c2c:	add    BYTE PTR [eax-0xacd463c],0x33
  419c33:	jne    0x419c4b
  419c35:	sbb    edx,ebp
  419c37:	js     0x419c99
  419c39:	adc    DWORD PTR [edi],ebp
  419c3b:	xchg   edx,eax
  419c3c:	pop    es
  419c3d:	addr16 sub al,0x4
  419c40:	mov    bh,0x18
  419c42:	xchg   ebp,eax
  419c43:	or     ebx,DWORD PTR [eax-0xd8b394d]
  419c49:	mov    esi,0x56317bed
  419c4e:	xchg   esi,eax
  419c4f:	getsec 
  419c51:	adc    dl,0x16
  419c54:	mov    ch,0xc5
  419c56:	les    ecx,FWORD PTR ds:0x21645f87
  419c5c:	push   eax
  419c5d:	std    
  419c5e:	mov    dl,BYTE PTR [ebx]
  419c60:	jnp    0x419ca5
  419c62:	pop    edi
  419c63:	mov    fs,edi
  419c65:	ins    BYTE PTR es:[edi],dx
  419c66:	fidiv  DWORD PTR [ebx+0x4038b104]
  419c6c:	leave  
  419c6d:	retf   0x3d0c
  419c70:	pop    es
  419c71:	sbb    BYTE PTR [ebx-0x549582b6],ch
  419c77:	shl    al,0x7f
  419c7a:	rcl    dl,0xea
  419c7d:	xchg   BYTE PTR [ebx-0x19e67137],ah
  419c83:	clc    
  419c84:	cmp    BYTE PTR [edx-0x1a],ch
  419c87:	xchg   ebp,eax
  419c88:	or     ah,BYTE PTR [edx]
  419c8a:	retf   0xaae5
  419c8d:	and    al,0x9d
  419c8f:	cmp    eax,0x398c2937
  419c94:	retf   0x2847
  419c97:	loop   0x419cbd
  419c99:	pop    edx
  419c9a:	jg     0x419cf3
  419c9c:	jae    0x6d615f1f
  419ca2:	pop    eax
  419ca3:	push   0xf2653c04
  419ca8:	rcl    DWORD PTR [eax],1
  419caa:	push   ds
  419cab:	push   ecx
  419cac:	and    al,0x95
  419cae:	lahf   
  419caf:	dec    esp
  419cb0:	xor    cl,BYTE PTR [edx-0x8]
  419cb3:	dec    esp
  419cb4:	inc    BYTE PTR [ebx-0x72bf5d98]
  419cba:	repnz lock mov al,0x19
  419cbe:	xor    eax,0x9754db00
  419cc3:	lds    ebp,FWORD PTR [ebx-0x6f]
  419cc6:	cwde   
  419cc7:	(bad)  [ecx-0x52]
  419cca:	pop    ebx
  419ccb:	scas   al,BYTE PTR es:[edi]
  419ccc:	into   
  419ccd:	xor    al,0x27
  419ccf:	sub    eax,0xa7283359
  419cd4:	jno    0x419d2a
  419cd6:	outs   dx,DWORD PTR ds:[esi]
  419cd7:	cmp    esp,DWORD PTR [esi+0x5414a8af]
  419cdd:	sub    esi,DWORD PTR [ebx+0x3a51b89a]
  419ce3:	imul   esi,DWORD PTR [edi+0x8e52ce3],0xfffffff3
  419cea:	sbb    eax,0x4d72a12c
  419cef:	mov    dh,0xd8
  419cf1:	test   ch,ah
  419cf3:	xchg   esp,eax
  419cf4:	adc    ebx,ebx
  419cf6:	add    eax,DWORD PTR [ecx-0x22595ad4]
  419cfc:	fsubr  QWORD PTR [edi+0xf]
  419cff:	sti    
  419d00:	sti    
  419d01:	or     al,0x76
  419d03:	pushf  
  419d04:	outs   dx,BYTE PTR ds:[esi]
  419d05:	rcr    ecx,0x8d
  419d08:	xchg   cl,cl
  419d0a:	loop   0x419c94
  419d0c:	jecxz  0x419cb8
  419d0e:	sar    DWORD PTR [edi+eax*1+0x45],cl
  419d12:	sub    DWORD PTR [ebx],edi
  419d14:	popa   
  419d15:	add    BYTE PTR [esi],ah
  419d17:	mov    eax,0xcd904025
  419d1c:	jecxz  0x419d70
  419d1e:	xchg   esi,eax
  419d1f:	fistp  WORD PTR [edi]
  419d21:	std    
  419d22:	pop    eax
  419d23:	mov    ds:0x5a2d104f,al
  419d28:	jns    0x419d90
  419d2a:	sahf   
  419d2b:	add    edi,edi
  419d2d:	adc    DWORD PTR [edi],eax
  419d2f:	push   es
  419d30:	in     al,dx
  419d31:	ret    0x1822
  419d34:	sbb    al,0xc2
  419d36:	pop    ds
  419d37:	xchg   edx,eax
  419d38:	das    
  419d39:	pop    eax
  419d3a:	jno    0x419d0d
  419d3c:	sbb    eax,0x44518cb4
  419d41:	or     bl,BYTE PTR [edx+ecx*4]
  419d44:	mov    eax,DWORD PTR [eax-0x39]
  419d47:	test   DWORD PTR [esp+esi*1+0x58b2712d],edi
  419d4e:	push   es
  419d4f:	loop   0x419d31
  419d51:	aaa    
  419d52:	adc    eax,0xdc6f9464
  419d57:	stos   DWORD PTR es:[edi],eax
  419d58:	std    
  419d59:	xor    cl,BYTE PTR [ebp+0x276dc3e2]
  419d5f:	push   edx
  419d60:	(bad)  
  419d62:	jnp    0x419daf
  419d64:	arpl   WORD PTR [eax],dx
  419d66:	fld    TBYTE PTR [eax]
  419d68:	out    dx,eax
  419d69:	cmp    esi,ecx
  419d6b:	pop    edx
  419d6c:	fs push ebp
  419d6f:	inc    esp
  419d70:	nop
  419d71:	test   eax,edi
  419d73:	cld    
  419d74:	(bad)  
  419d75:	daa    
  419d76:	enter  0xf511,0x32
  419d7a:	lods   eax,DWORD PTR ds:[esi]
  419d7b:	pop    eax
  419d7c:	pop    edx
  419d7d:	out    dx,eax
  419d7e:	inc    ecx
  419d7f:	push   eax
  419d80:	inc    ebx
  419d81:	in     eax,0x81
  419d83:	leave  
  419d84:	cwde   
  419d85:	pop    ebp
  419d86:	addr16 dec ebp
  419d88:	xchg   ecx,eax
  419d89:	or     al,0x5c
  419d8b:	imul   esi,DWORD PTR ds:[eax+0x49417ebd],0xffffff81
  419d93:	pop    ebx
  419d94:	cmp    DWORD PTR [ebp-0xf63fecf],edx
  419d9a:	test   eax,0xe4d533ad
  419d9f:	(bad)  
  419da1:	repz in eax,dx
  419da3:	mov    edx,0xcc450f0a
  419da8:	jns    0x419d71
  419daa:	xchg   esp,eax
  419dab:	repnz mov ebx,DWORD PTR [edi-0x2456a4ba]
  419db2:	push   0xa165a50a
  419db7:	inc    esp
  419db8:	not    edi
  419dba:	mov    eax,ds:0x4e536dc
  419dbf:	outs   dx,BYTE PTR ds:[esi]
  419dc0:	mov    edi,0xe98c42d5
  419dc5:	hlt    
  419dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc7:	add    ch,BYTE PTR [esi]
  419dc9:	ins    DWORD PTR es:[edi],dx
  419dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dcb:	fidivr WORD PTR [edx-0x69]
  419dce:	aas    
  419dcf:	es popf 
  419dd1:	inc    ebx
  419dd2:	lods   al,BYTE PTR ds:[esi]
  419dd3:	imul   esp,DWORD PTR [ebx],0x5c
  419dd6:	mov    esi,0x1f3d0326
  419ddb:	iret   
  419ddc:	repz mov cl,BYTE PTR [ebp-0xa]
  419de0:	out    0xd8,al
  419de2:	mov    cl,0x1
  419de4:	mov    esi,0xe9498dcf
  419de9:	lahf   
  419dea:	je     0x419db3
  419dec:	retf   0x554a
  419def:	xchg   edx,eax
  419df0:	jmp    0xdaec:0xd0f1b955
  419df7:	in     al,dx
  419df8:	mov    ecx,0x1694fa24
  419dfd:	dec    edi
  419dfe:	arpl   WORD PTR [ebx+eiz*8],bx
  419e01:	pop    ebp
  419e02:	inc    esp
  419e03:	je     0x419d95
  419e05:	push   es
  419e06:	dec    edx
  419e07:	rcl    DWORD PTR [edi-0x6878a023],cl
  419e0d:	mov    eax,DWORD PTR [ecx]
  419e0f:	jno    0x419da8
  419e11:	inc    edx
  419e12:	fnstsw WORD PTR [eax]
  419e14:	pushf  
  419e15:	mov    ch,0x1e
  419e17:	xchg   esi,eax
  419e18:	and    BYTE PTR [esp+esi*1-0x1],dh
  419e1c:	(bad)  
  419e1d:	mov    bl,BYTE PTR [edx-0xa]
  419e20:	add    eax,0x53dce37
  419e25:	inc    ebp
  419e26:	pop    es
  419e27:	add    eax,0x5f42e8e7
  419e2c:	cli    
  419e2d:	push   cs
  419e2e:	mov    cs,eax
  419e30:	fcomp  QWORD PTR ds:0x16a9fb98
  419e36:	jnp    0x419e0e
  419e38:	mov    esi,ecx
  419e3a:	cmp    esp,DWORD PTR ds:0xddcd26c4
  419e40:	dec    eax
  419e41:	jg     0x419e18
  419e43:	loopne 0x419e0a
  419e45:	pop    ebp
  419e46:	fld    QWORD PTR [ecx]
  419e48:	push   eax
  419e49:	retf   0xc1dc
  419e4c:	pop    esi
  419e4d:	loop   0x419ecb
  419e4f:	or     edi,DWORD PTR [ecx+0x71c6760f]
  419e55:	xchg   DWORD PTR [ebx+0x9a8cddd],eax
  419e5b:	inc    ecx
  419e5c:	pop    esi
  419e5d:	jae    0x419de0
  419e5f:	icebp  
  419e60:	mov    esp,0xa5c1342
  419e65:	xor    eax,0xc517372d
  419e6a:	inc    ecx
  419e6b:	xchg   ecx,eax
  419e6c:	xor    al,0xa7
  419e6e:	mov    DWORD PTR [eax+0x50],edi
  419e71:	sub    bl,ah
  419e73:	xchg   edi,eax
  419e74:	in     eax,dx
  419e75:	sub    BYTE PTR [eax-0x6c],cl
  419e78:	add    BYTE PTR [edi-0x58728041],0x96
  419e7f:	inc    ebp
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	xchg   esi,eax
  419e82:	shl    BYTE PTR [eax+0x67],cl
  419e85:	adc    BYTE PTR [edx],0x50
  419e88:	jl     0x419eaa
  419e8a:	je     0x419e9a
  419e8c:	mov    eax,gs:0x9aa3da47
  419e92:	icebp  
  419e93:	pop    es
  419e94:	add    ch,bh
  419e96:	test   ebp,eax
  419e98:	fcom   QWORD PTR [esi+0x67]
  419e9b:	rcr    DWORD PTR [ecx],1
  419e9d:	mov    esp,0x32fe5ce7
  419ea2:	adc    ch,BYTE PTR [esi+0x65]
  419ea5:	mov    edx,0x7f851b22
  419eaa:	or     BYTE PTR [edi+esi*8],ch
  419ead:	xchg   esp,eax
  419eae:	mov    ch,0x7
  419eb0:	inc    ebx
  419eb1:	mov    ecx,0xa92a3f24
  419eb6:	js     0x419eb2
  419eb8:	and    BYTE PTR [esi],0xcc
  419ebb:	sub    bl,cl
  419ebd:	js     0x419e48
  419ebf:	push   eax
  419ec0:	(bad)  
  419ec1:	mov    edi,0x99924bd8
  419ec6:	sbb    ebp,esi
  419ec8:	cmp    edx,DWORD PTR [esi+0x4f3e53f8]
  419ece:	sbb    al,BYTE PTR [edi+0x6a]
  419ed1:	and    eax,0xb5b00de
  419ed6:	popa   
  419ed7:	jno    0x419ed2
  419ed9:	leave  
  419eda:	das    
  419edb:	neg    BYTE PTR [esi+0x73]
  419ede:	retf   
  419edf:	mov    bh,0xd0
  419ee1:	iret   
  419ee2:	mov    ds:0xf1dc06ad,eax
  419ee7:	ror    BYTE PTR [edx],0x2c
  419eea:	push   esi
  419eeb:	pop    ebx
  419eec:	inc    ecx
  419eed:	push   edi
  419eee:	shl    DWORD PTR [edx+0x44],0xb2
  419ef2:	push   ebx
  419ef3:	pop    edx
  419ef4:	or     BYTE PTR ds:[ebx+0x6702ee83],ch
  419efb:	int    0xa0
  419efd:	mov    cl,0x60
  419eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f00:	test   eax,0xd2d1f568
  419f05:	sbb    eax,0x677219af
  419f0a:	adc    eax,DWORD PTR [esi+0x46]
  419f0d:	dec    eax
  419f0e:	leave  
  419f0f:	and    eax,ecx
  419f11:	cmp    DWORD PTR [eax+0x5b05ddee],ecx
  419f17:	test   al,0x58
  419f19:	imul   ebx,edi,0xd750c81c
  419f1f:	xchg   esi,eax
  419f20:	hlt    
  419f21:	sti    
  419f22:	test   eax,0x258dc6d6
  419f27:	inc    ebp
  419f28:	popa   
  419f29:	loop   0x419ebd
  419f2b:	not    BYTE PTR [ecx]
  419f2d:	and    BYTE PTR [ebx-0x38961423],cl
  419f33:	ins    BYTE PTR es:[edi],dx
  419f34:	lock mov ebx,0x8127bce6
  419f3a:	jmp    0xb012:0xcdf80eb6
  419f41:	xchg   edi,eax
  419f42:	fst    DWORD PTR [ebp+0x4f]
  419f45:	adc    BYTE PTR [eax-0x6e0792fc],0xc5
  419f4c:	push   0x555d1fee
  419f51:	mov    bl,0x8f
  419f53:	mov    bh,0x59
  419f55:	push   ecx
  419f56:	test   bl,al
  419f58:	pop    ss
  419f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f5a:	and    al,0x1a
  419f5c:	push   ecx
  419f5d:	jmp    0xa6aa7a40
  419f62:	xor    ch,BYTE PTR [edi+0x64]
  419f65:	div    DWORD PTR [esi]
  419f67:	ja     0x419fd3
  419f69:	xchg   DWORD PTR [eax-0x48da178c],edi
  419f6f:	mov    ah,ch
  419f71:	mov    ch,0x1c
  419f73:	dec    esp
  419f74:	jmp    0x14bd6fb0
  419f79:	inc    edx
  419f7a:	jbe    0x419f00
  419f7c:	test   DWORD PTR [edx+ebp*2+0x18dac970],0xa1faf5c
  419f87:	mov    bh,0x97
  419f89:	fist   DWORD PTR [eax+0x2b]
  419f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f8d:	mov    dh,0x1e
  419f8f:	adc    dl,0x7d
  419f92:	test   DWORD PTR [ecx-0x16],0x6579084
  419f99:	shr    DWORD PTR [ebp+0x1a40002c],1
  419f9f:	scas   al,BYTE PTR es:[edi]
  419fa0:	mov    eax,ds:0x6e171cd3
  419fa5:	out    dx,al
  419fa6:	in     eax,0x2e
  419fa8:	inc    eax
  419fa9:	sbb    ebx,DWORD PTR [edi+0x6dea232d]
  419faf:	clc    
  419fb0:	cs xchg esp,eax
  419fb2:	retf   
  419fb3:	mov    ?,WORD PTR [ecx+0x1f]
  419fb6:	dec    esi
  419fb7:	pushf  
  419fb8:	ins    DWORD PTR es:[edi],dx
  419fb9:	jno    0x419fb8
  419fbb:	ja     0x419f97
  419fbd:	push   eax
  419fbe:	pop    esi
  419fbf:	mov    dl,0x43
  419fc1:	and    ah,BYTE PTR [ebx+0x438f2333]
  419fc7:	lock jg 0x419fb1
  419fca:	push   ecx
  419fcb:	les    esi,FWORD PTR [esi+0x207cb4c6]
  419fd1:	sub    ebx,ebp
  419fd3:	adc    al,0x20
  419fd5:	jmp    0x7230:0x8389d0a2
  419fdc:	jmp    0x41a039
  419fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fdf:	pop    eax
  419fe0:	rcl    DWORD PTR [ecx+0x48],1
  419fe3:	sahf   
  419fe4:	adc    al,0x45
  419fe6:	push   edi
  419fe7:	or     dl,BYTE PTR [ecx-0x64d43249]
  419fed:	and    ch,BYTE PTR [ecx+0x54]
  419ff0:	adc    BYTE PTR [ecx],ah
  419ff2:	gs xchg esp,ebx
  419ff5:	sti    
  419ff6:	aad    0x69
  419ff8:	pop    ecx
  419ff9:	shr    DWORD PTR [esi+eax*1],0x65
  419ffd:	inc    esp
  419ffe:	test   al,0xa2
  41a000:	lds    eax,FWORD PTR [ecx]
  41a002:	sub    bl,BYTE PTR cs:[ebx-0x67]
  41a006:	(bad)  
  41a007:	aas    
  41a008:	and    eax,0xe28ea37b
  41a00d:	jno    0x41a024
  41a00f:	and    dh,BYTE PTR [edx+ebx*4+0x59]
  41a013:	mov    esi,0x1e611d8a
  41a018:	ret    0x8022
  41a01b:	test   DWORD PTR [ebx+0x2de67f11],ebp
  41a021:	sub    BYTE PTR [edi+0x50],bh
  41a024:	push   es
  41a025:	(bad)  
  41a026:	adc    al,0xf6
  41a028:	jb     0x41a084
  41a02a:	jl     0x41a080
  41a02c:	jno    0x419ff0
  41a02e:	outs   dx,DWORD PTR ds:[esi]
  41a02f:	or     al,0xe7
  41a031:	pop    edx
  41a032:	(bad)  
  41a033:	xchg   esi,eax
  41a034:	sub    DWORD PTR [edi-0x3593d5a9],0xffffffc6
  41a03b:	sbb    DWORD PTR [edi-0x59],edx
  41a03e:	pop    edi
  41a03f:	push   eax
  41a040:	not    esp
  41a042:	inc    edx
  41a043:	adc    edi,ebx
  41a045:	jnp    0x41a075
  41a047:	pop    eax
  41a048:	xor    dl,dl
  41a04a:	mov    al,ds:0x848d4c4a
  41a04f:	cs cmc 
  41a051:	sub    ecx,DWORD PTR [ecx-0x4d]
  41a054:	sbb    BYTE PTR [esi-0x3f13de88],0x68
  41a05b:	ret    0x7cf9
  41a05e:	cli    
  41a05f:	add    DWORD PTR [edi+0x4000198c],esi
  41a065:	cmp    bh,BYTE PTR [ecx-0x14]
  41a068:	not    DWORD PTR [ecx+0x21]
  41a06b:	fucomp st(7)
  41a06d:	icebp  
  41a06e:	push   ds
  41a06f:	xor    al,0x95
  41a071:	mov    bl,BYTE PTR [edx]
  41a073:	pop    esi
  41a074:	shl    DWORD PTR [ecx+edi*8],0xf7
  41a078:	jmp    0xafe1136d
  41a07d:	inc    ecx
  41a07e:	add    eax,0x1313a990
  41a083:	jge    0x41a0b4
  41a085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a086:	pop    esp
  41a087:	jecxz  0x41a08a
  41a089:	mov    edi,esi
  41a08b:	dec    edi
  41a08c:	mov    esp,0x78858f36
  41a091:	das    
  41a092:	ret    0x4187
  41a095:	arpl   WORD PTR [edi+ebx*4],bx
  41a098:	dec    esi
  41a099:	bound  esp,QWORD PTR [eax-0x53]
  41a09c:	mov    edi,DWORD PTR [ebx]
  41a09e:	rcl    BYTE PTR [edx],0x78
  41a0a1:	in     al,0xb6
  41a0a3:	and    BYTE PTR [edx-0x5e],bl
  41a0a6:	sbb    eax,DWORD PTR [eax]
  41a0a8:	scas   eax,DWORD PTR es:[edi]
  41a0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0aa:	mov    ah,0xdf
  41a0ac:	pop    esp
  41a0ad:	jb     0x41a0c3
  41a0af:	mov    bh,0x50
  41a0b1:	cli    
  41a0b2:	je     0x41a0cf
  41a0b4:	xchg   sp,ax
  41a0b6:	xor    DWORD PTR [ebp-0x3d0f6f99],ebx
  41a0bc:	xchg   BYTE PTR [ecx],ch
  41a0be:	call   0x9657:0xb707c7f8
  41a0c5:	jne    0x41a049
  41a0c7:	scas   al,BYTE PTR es:[edi]
  41a0c8:	cmp    al,0xaf
  41a0ca:	inc    edi
  41a0cb:	ret    0x8a8e
  41a0ce:	pop    eax
  41a0cf:	lahf   
  41a0d0:	loope  0x41a093
  41a0d2:	sub    eax,0xd5681d64
  41a0d7:	arpl   WORD PTR [edi+0x2f416d9f],di
  41a0dd:	add    edx,DWORD PTR [edi-0x30]
  41a0e0:	jecxz  0x41a0aa
  41a0e2:	add    eax,0xcc6b986c
  41a0e7:	push   ss
  41a0e8:	fist   WORD PTR [ebp-0x7]
  41a0eb:	data16 loopne 0x41a0ae
  41a0ee:	jne    0x41a096
  41a0f0:	and    eax,0x203e1e75
  41a0f5:	cld    
  41a0f6:	or     ecx,DWORD PTR [ebx-0x6c]
  41a0f9:	sub    eax,0x11dda3a1
  41a0fe:	pop    edx
  41a0ff:	repz push ss
  41a101:	lock mov ah,0x14
  41a104:	mov    al,ds:0xe5ac39f3
  41a109:	xor    eax,0x200688b5
  41a10e:	leave  
  41a10f:	mov    ebx,ecx
  41a111:	jge    0x41a131
  41a113:	mov    ch,0xe4
  41a115:	jmp    0x4a6f:0xc4050853
  41a11c:	(bad)  
  41a11d:	pop    esp
  41a11e:	xchg   ebx,eax
  41a11f:	xor    DWORD PTR [eax],esi
  41a121:	adc    al,0xa0
  41a123:	imul   ecx,DWORD PTR [ebx+0xd],0xffffff8a
  41a127:	pop    eax
  41a128:	pop    ecx
  41a129:	scas   eax,DWORD PTR es:[edi]
  41a12a:	test   al,cl
  41a12c:	dec    eax
  41a12d:	jg     0x41a193
  41a12f:	sub    BYTE PTR [eax],cl
  41a131:	leave  
  41a132:	inc    ecx
  41a133:	xor    ebx,DWORD PTR [eax]
  41a135:	mov    ecx,0x17ad587f
  41a13a:	in     al,0x2b
  41a13c:	jmp    0x3370:0xb79d64c9
  41a143:	je     0x41a172
  41a145:	xor    DWORD PTR [edi-0x23ebbda8],0xffffff9a
  41a14c:	inc    esp
  41a14d:	into   
  41a14e:	pop    es
  41a14f:	ins    BYTE PTR es:[edi],dx
  41a150:	bound  ecx,QWORD PTR fs:[ecx+0x64a18865]
  41a157:	jge    0x41a1c5
  41a159:	lods   eax,DWORD PTR ds:[esi]
  41a15a:	adc    esi,eax
  41a15c:	nop
  41a15d:	je     0x41a1b3
  41a15f:	or     eax,0xb027b361
  41a164:	retf   
  41a165:	dec    esi
  41a166:	add    BYTE PTR [eax-0x377f2c2c],bh
  41a16c:	jge    0x41a16f
  41a16e:	pop    esi
  41a16f:	xchg   edx,eax
  41a170:	push   ecx
  41a171:	mov    edi,0xf546068d
  41a176:	sbb    al,0xc
  41a178:	arpl   WORD PTR [ebx+0x2a],bp
  41a17b:	test   eax,0x2e8d1cf2
  41a180:	ins    BYTE PTR es:[edi],dx
  41a181:	cmp    BYTE PTR [eax+0x37028ee3],ah
  41a187:	pop    eax
  41a188:	push   0xffffffb2
  41a18a:	xchg   BYTE PTR [esi+0x5aba3a5a],cl
  41a190:	call   FWORD PTR [edx*8-0x60d78dc4]
  41a197:	int3   
  41a198:	ja     0x41a207
  41a19a:	push   ebx
  41a19b:	mov    edi,0xaf3cc3e4
  41a1a0:	ret    0xb999
  41a1a3:	mov    ecx,0x5bf84921
  41a1a8:	pop    edx
  41a1a9:	mov    bh,0xf0
  41a1ab:	leave  
  41a1ac:	xchg   ebp,eax
  41a1ad:	sar    BYTE PTR [edx],0x66
  41a1b0:	stos   BYTE PTR es:[edi],al
  41a1b1:	sidtd  [eax-0x738fd905]
  41a1b8:	pop    ss
  41a1b9:	mov    DWORD PTR es:[ebx],ecx
  41a1bc:	scas   al,BYTE PTR es:[edi]
  41a1bd:	add    al,0x45
  41a1bf:	mov    al,0x42
  41a1c1:	outs   dx,BYTE PTR ds:[esi]
  41a1c2:	pushf  
  41a1c3:	imul   edx,DWORD PTR [ecx+eiz*2-0x9fb2858],0xffffffad
  41a1cb:	(bad)  [ebp+0x40]
  41a1ce:	push   ebx
  41a1cf:	pop    edi
  41a1d0:	dec    esp
  41a1d1:	and    edx,DWORD PTR [edi]
  41a1d3:	push   ss
  41a1d4:	bound  edx,QWORD PTR [ebx-0x7dc002e7]
  41a1da:	xor    bl,BYTE PTR [ebx-0x62a277eb]
  41a1e0:	fstp   QWORD PTR [edi]
  41a1e2:	(bad)  
  41a1e4:	cmp    esp,DWORD PTR [edx+0x57]
  41a1e7:	sub    BYTE PTR [edi-0x5b],dl
  41a1ea:	(bad)  
  41a1eb:	adc    al,0x74
  41a1ed:	mov    bl,0x68
  41a1ef:	inc    ebp
  41a1f0:	cli    
  41a1f1:	adc    al,ah
  41a1f3:	mov    ch,0xe4
  41a1f5:	loope  0x41a1cc
  41a1f7:	repz das 
  41a1f9:	lods   eax,DWORD PTR ds:[esi]
  41a1fa:	adc    ebp,DWORD PTR [ecx]
  41a1fc:	dec    edx
  41a1fd:	adc    DWORD PTR [ecx+0x18],esp
  41a200:	cmp    al,0x20
  41a202:	sbb    al,0xda
  41a204:	rcl    BYTE PTR [ebp-0x20],cl
  41a207:	mov    cl,0xaa
  41a209:	xor    DWORD PTR [edi+0x60e76be7],0xffffffe5
  41a210:	sub    edi,0x966441e
  41a216:	pop    esi
  41a217:	loopne 0x41a214
  41a219:	mov    ah,0x12
  41a21b:	loope  0x41a29c
  41a21d:	push   0x530054c1
  41a222:	push   es
  41a223:	je     0x41a1b6
  41a225:	and    dl,BYTE PTR [ebx]
  41a227:	mov    eax,0xe1cac908
  41a22c:	inc    esi
  41a22d:	push   esp
  41a22e:	jge    0x41a1ee
  41a230:	pop    es
  41a231:	aam    0x60
  41a233:	out    dx,eax
  41a234:	addr16 or al,0x1e
  41a237:	jg     0x41a2ac
  41a239:	inc    eax
  41a23a:	ds xchg edx,eax
  41a23c:	sub    BYTE PTR [si+0x4e],dh
  41a240:	out    dx,al
  41a241:	adc    eax,0x4e61ff37
  41a246:	sub    al,BYTE PTR fs:[eax-0x3aaad691]
  41a24d:	pop    edx
  41a24e:	sub    BYTE PTR [ecx],0x8a
  41a251:	ins    BYTE PTR es:[edi],dx
  41a252:	mov    ds:0x5424a3e5,al
  41a257:	mov    ds:0x1228ab09,eax
  41a25c:	sahf   
  41a25d:	inc    ebp
  41a25e:	inc    ebx
  41a25f:	(bad)  
  41a260:	mov    ds:0xa991d25e,al
  41a265:	fmul   st,st(5)
  41a267:	mov    ebx,0x910ac48
  41a26c:	cmp    eax,0x703433b4
  41a271:	sub    al,0x48
  41a273:	in     al,dx
  41a274:	popa   
  41a275:	mov    ebp,0xe8753f3e
  41a27a:	rcr    ebx,0x7c
  41a27d:	fwait
  41a27e:	push   esp
  41a27f:	push   ecx
  41a280:	and    al,0x2b
  41a282:	rol    bh,0x7a
  41a285:	pop    edi
  41a286:	inc    BYTE PTR [ecx+eax*1-0x629d47c9]
  41a28d:	stos   BYTE PTR es:[edi],al
  41a28e:	pop    ecx
  41a28f:	int3   
  41a290:	adc    eax,ecx
  41a292:	jae    0x41a29f
  41a294:	dec    esp
  41a295:	test   BYTE PTR [edx],0xa7
  41a298:	pop    esi
  41a299:	inc    ecx
  41a29a:	stos   DWORD PTR es:[edi],eax
  41a29b:	cwde   
  41a29c:	mov    ds:0x36a6b9ad,al
  41a2a1:	mov    edi,0x557dc185
  41a2a6:	call   0x4494:0x295dbdc5
  41a2ad:	adc    al,0xed
  41a2af:	ins    BYTE PTR es:[edi],dx
  41a2b0:	or     al,BYTE PTR [esi]
  41a2b2:	mov    dh,0x80
  41a2b4:	repz cmp eax,0xda2e361f
  41a2ba:	push   esi
  41a2bb:	lock iret 
  41a2bd:	mov    ecx,0x538637d3
  41a2c2:	arpl   WORD PTR [eax+0x1f],si
  41a2c5:	adc    BYTE PTR [edi+esi*8+0x6f],ah
  41a2c9:	test   BYTE PTR [esi],dh
  41a2cb:	mov    ebp,0x733779f2
  41a2d0:	jb     0x41a2b0
  41a2d2:	xchg   edi,eax
  41a2d3:	xor    eax,0x862f477a
  41a2d8:	sti    
  41a2d9:	jne    0x41a275
  41a2db:	(bad)  
  41a2dc:	jl     0x41a2f3
  41a2de:	outs   dx,DWORD PTR ds:[esi]
  41a2df:	mov    dl,0x74
  41a2e1:	cmp    DWORD PTR [esi+edx*8-0x2c],eax
  41a2e5:	jno    0x41a31d
  41a2e7:	inc    ecx
  41a2e8:	popf   
  41a2e9:	mov    ebp,0x3f4a396
  41a2ee:	addr16 sysexit 
  41a2f1:	cmp    ecx,DWORD PTR [edx]
  41a2f3:	inc    ecx
  41a2f4:	mov    edi,0xde5c1cc1
  41a2f9:	push   edx
  41a2fa:	call   0xea06e0c0
  41a2ff:	jl     0x41a2a7
  41a301:	aas    
  41a302:	imul   edi,DWORD PTR [eax+esi*1+0x46e928ae],0x70
  41a30a:	jmp    0xc9cf9e25
  41a30f:	je     0x41a384
  41a311:	jo     0x41a2f4
  41a313:	sbb    BYTE PTR ds:0xc342633f,dh
  41a319:	std    
  41a31a:	sbb    BYTE PTR [esi+0x37],0xd
  41a31e:	out    0xc7,al
  41a320:	(bad)  
  41a321:	jmp    0x737d:0xdc39a426
  41a328:	xor    cl,BYTE PTR [edx+0x6]
  41a32b:	into   
  41a32c:	out    0xe2,al
  41a32e:	inc    edx
  41a32f:	mov    al,0x7a
  41a331:	ret    
  41a332:	or     al,0xd6
  41a334:	stos   BYTE PTR es:[edi],al
  41a335:	sub    esi,ebx
  41a337:	stos   DWORD PTR es:[edi],eax
  41a338:	lods   eax,DWORD PTR ds:[esi]
  41a339:	mov    dl,0x49
  41a33b:	pop    eax
  41a33c:	sbb    ah,BYTE PTR [ebp+0x4e]
  41a33f:	rol    DWORD PTR [edi+0x1d],cl
  41a342:	test   eax,0xc86161d7
  41a347:	mov    dl,0xa9
  41a349:	mov    bh,0x85
  41a34b:	mov    ds:0xe2f3fb0c,al
  41a350:	mov    ebx,0x9096d264
  41a355:	mov    ds:0x6a76c24a,al
  41a35a:	popa   
  41a35b:	retf   
  41a35c:	dec    ebp
  41a35d:	pop    edi
  41a35e:	shr    dl,cl
  41a360:	cli    
  41a361:	mov    dh,0x78
  41a363:	mul    BYTE PTR fs:[edx+ebx*4]
  41a367:	or     BYTE PTR [esi+0x236ff4d4],bl
  41a36d:	push   ecx
  41a36e:	repnz or DWORD PTR [ebp+0x6e4766e0],edx
  41a375:	lea    ebp,[edi+edi*1+0xc]
  41a379:	push   edx
  41a37a:	aam    0x13
  41a37c:	(bad)  
  41a37d:	push   0x43
  41a37f:	sar    DWORD PTR [edi+0x3b],1
  41a382:	mov    ds:0xdc3e9466,al
  41a387:	mov    ebp,ecx
  41a389:	fwait
  41a38a:	or     eax,0x8f0ec769
  41a38f:	mov    esp,DWORD PTR [edx]
  41a391:	out    dx,al
  41a392:	icebp  
  41a393:	pop    esp
  41a394:	fistp  WORD PTR [ebx+0x1f]
  41a397:	pop    edx
  41a398:	ror    BYTE PTR es:[ecx-0x47],1
  41a39c:	mov    DWORD PTR [esi-0x33855ab7],0xc522a516
  41a3a6:	add    BYTE PTR ds:0x3fa4b1da,cl
  41a3ac:	or     BYTE PTR [esi-0x40],al
  41a3af:	je     0x41a416
  41a3b1:	loope  0x41a38d
  41a3b3:	mov    dh,0x58
  41a3b5:	or     eax,0x5d895d06
  41a3ba:	lahf   
  41a3bb:	add    al,0xa3
  41a3bd:	mov    dh,0x3c
  41a3bf:	hlt    
  41a3c0:	lods   eax,DWORD PTR ds:[esi]
  41a3c1:	iret   
  41a3c2:	jmp    0x20c1affa
  41a3c7:	test   DWORD PTR [ecx],eax
  41a3c9:	inc    edi
  41a3ca:	cs sub esi,0x91018c68
  41a3d1:	sub    BYTE PTR [edi-0x9],al
  41a3d4:	or     ch,BYTE PTR [esi-0x7220862d]
  41a3da:	pop    ebp
  41a3db:	and    dh,BYTE PTR [ebx]
  41a3dd:	loope  0x41a3ee
  41a3df:	ds hlt 
  41a3e1:	icebp  
  41a3e2:	cmc    
  41a3e3:	call   0x6c63a6c5
  41a3e8:	cmc    
  41a3e9:	add    eax,0x4ddfecc5
  41a3ee:	int    0x5c
  41a3f0:	ror    BYTE PTR [edx+0x34e2b0e6],cl
  41a3f6:	push   es
  41a3f7:	push   cs
  41a3f8:	adc    ch,BYTE PTR [edx]
  41a3fa:	jg     0x41a3d1
  41a3fc:	sbb    al,BYTE PTR [eax]
  41a3fe:	mov    al,0xa2
  41a400:	add    DWORD PTR [ebx+0xf],ebp
  41a403:	pop    ds
  41a404:	loop   0x41a3c6
  41a406:	not    DWORD PTR [ebx+0x4435a38e]
  41a40c:	pusha  
  41a40d:	sti    
  41a40e:	mov    ah,0xa9
  41a410:	cmp    DWORD PTR [esi],ebx
  41a412:	xor    ebp,ecx
  41a414:	imul   edx,DWORD PTR [ebx-0x7a],0x10
  41a418:	in     al,0x86
  41a41a:	pop    esp
  41a41b:	xor    bl,bl
  41a41d:	push   eax
  41a41e:	test   BYTE PTR [edi-0x2d],bl
  41a421:	mov    WORD PTR [esi+0x5a9686bf],ss
  41a427:	dec    edx
  41a428:	outs   dx,DWORD PTR ds:[esi]
  41a429:	mov    eax,ds:0xeadf6308
  41a42e:	stos   DWORD PTR es:[edi],eax
  41a42f:	loop   0x41a44a
  41a431:	mov    ds:0x65e08293,al
  41a436:	pusha  
  41a437:	mov    cl,0xff
  41a439:	jmp    0x41a4a3
  41a43b:	popf   
  41a43c:	or     ebx,ebp
  41a43e:	ins    DWORD PTR es:[edi],dx
  41a43f:	mov    eax,ds:0x3dc641b1
  41a444:	jns    0x41a47d
  41a446:	repz pop ebx
  41a448:	enter  0x767e,0x19
  41a44c:	das    
  41a44d:	cmp    esp,DWORD PTR [esi]
  41a44f:	repz cmc 
  41a451:	rol    BYTE PTR [edi-0x44acb321],1
  41a457:	cs cli 
  41a459:	in     al,0x7e
  41a45b:	cld    
  41a45c:	inc    edx
  41a45d:	jo     0x41a45f
  41a45f:	loope  0x41a489
  41a461:	sbb    eax,0x70afae20
  41a466:	daa    
  41a467:	jne    0x41a401
  41a469:	es mov ah,0xbc
  41a46c:	ja     0x41a437
  41a46e:	(bad)  
  41a46f:	shl    DWORD PTR [eax],cl
  41a471:	(bad)  
  41a473:	or     al,0xfa
  41a475:	xlat   BYTE PTR ds:[ebx]
  41a476:	and    ebx,DWORD PTR [esi+edi*4]
  41a479:	fwait
  41a47a:	rcr    BYTE PTR [ebx-0x56],1
  41a47d:	jae    0x41a434
  41a47f:	add    al,BYTE PTR [eax]
  41a481:	cld    
  41a482:	cmp    bh,BYTE PTR [ebx-0x67bf32cf]
  41a488:	mov    DWORD PTR [ebx+0x3c],ecx
  41a48b:	dec    ecx
  41a48c:	pop    ecx
  41a48d:	mov    ebx,0xae941071
  41a492:	xor    BYTE PTR [ecx+0x1e],0x54
  41a496:	aam    0x86
  41a498:	cmp    DWORD PTR [ecx+0x54],0x7ff541f4
  41a49f:	adc    eax,0x8a0ab1
  41a4a4:	repnz pop ds
  41a4a6:	xlat   BYTE PTR ds:[ebx]
  41a4a7:	xor    al,0xc0
  41a4a9:	inc    esp
  41a4aa:	aas    
  41a4ab:	enter  0x17f,0xd0
  41a4af:	gs sub esp,esp
  41a4b2:	xchg   BYTE PTR [esi+0x41892697],ch
  41a4b8:	mov    ?,WORD PTR [edi-0x2a]
  41a4bb:	shl    DWORD PTR [ecx+edx*1],1
  41a4be:	into   
  41a4bf:	pop    edx
  41a4c0:	jmp    0x83d7b25a
  41a4c5:	cmp    DWORD PTR [esi],0xee23bf21
  41a4cb:	or     edx,eax
  41a4cd:	das    
  41a4ce:	pop    es
  41a4cf:	jmp    0x6fc5:0x7f98036d
  41a4d6:	cdq    
  41a4d7:	(bad)  
  41a4d8:	mov    esp,0xc539cbda
  41a4dd:	mov    fs,WORD PTR [edi+0x37]
  41a4e0:	gs js  0x41a4ca
  41a4e3:	xchg   DWORD PTR [ebx],ecx
  41a4e5:	xchg   ebp,eax
  41a4e6:	(bad)  
  41a4e7:	sub    cl,BYTE PTR [edi-0x19]
  41a4ea:	jno    0x41a496
  41a4ec:	out    0xf1,eax
  41a4ee:	fmul   QWORD PTR [edx-0x2b]
  41a4f1:	xor    al,0xc
  41a4f3:	mov    bl,0xc7
  41a4f5:	out    dx,eax
  41a4f6:	xor    DWORD PTR [ecx+esi*8],0x3c37800c
  41a4fd:	gs lock scas eax,DWORD PTR es:[edi]
  41a500:	jmp    0x9b241ce9
  41a505:	cmp    eax,0x33daa8cc
  41a50a:	clc    
  41a50b:	inc    ecx
  41a50c:	sbb    al,0xe
  41a50e:	push   ss
  41a50f:	jmp    0x5982:0x7ee3fe0b
  41a516:	mov    eax,ds:0x2354808
  41a51b:	das    
  41a51c:	ret    
  41a51d:	inc    edx
  41a51e:	fidivr WORD PTR ds:0xb6a58d95
  41a524:	test   al,0xda
  41a526:	int3   
  41a527:	xchg   BYTE PTR [ecx],cl
  41a529:	jl     0x41a4ef
  41a52b:	js     0x41a54d
  41a52d:	lds    eax,FWORD PTR [esi+0xd]
  41a530:	sub    DWORD PTR [ecx-0x57],edi
  41a533:	mov    esi,0x31e7e4b2
  41a538:	push   ds
  41a539:	lahf   
  41a53a:	inc    edi
  41a53b:	int3   
  41a53c:	frstor [esp+edx*4]
  41a53f:	xchg   BYTE PTR [esi-0x530fc72],al
  41a545:	jae    0x41a511
  41a547:	mov    dh,BYTE PTR [edi+0x46]
  41a54a:	int    0x86
  41a54c:	pop    esp
  41a54d:	sbb    BYTE PTR [edx+0x5712f94c],al
  41a553:	in     al,0x20
  41a555:	test   DWORD PTR [ebp+edi*8+0x17],ecx
  41a559:	push   es
  41a55a:	xor    BYTE PTR cs:[ebx-0xb7e98c7],bh
  41a561:	into   
  41a562:	mov    eax,ds:0x8dc6e612
  41a567:	sahf   
  41a568:	and    esp,DWORD PTR [edi-0x56]
  41a56b:	mov    ?,WORD PTR [ecx+0x4c]
  41a56e:	or     ebp,esi
  41a570:	ror    bh,cl
  41a572:	pop    ds
  41a573:	mov    dh,0x1e
  41a575:	loop   0x41a5f1
  41a577:	push   es
  41a578:	mov    bh,0x7c
  41a57a:	jg     0x41a5ce
  41a57c:	pop    ebp
  41a57d:	repnz adc eax,0xc532f973
  41a583:	mov    ah,BYTE PTR [edx-0x59]
  41a586:	dec    esi
  41a587:	mov    DWORD PTR [esi+0x5b],eax
  41a58a:	fst    QWORD PTR [ebp-0x7c]
  41a58d:	mov    ebp,0x7de4a94e
  41a592:	jle    0x41a517
  41a594:	jp     0x41a5a9
  41a596:	(bad)  
  41a597:	repz mov bh,0xc7
  41a59a:	lds    edx,FWORD PTR [edx+ecx*2]
  41a59d:	cmp    al,0xd8
  41a59f:	repnz inc eax
  41a5a1:	mov    ds:0xf300ec36,eax
  41a5a6:	rcr    BYTE PTR [ecx+0x12],0x4f
  41a5aa:	push   ss
  41a5ab:	or     BYTE PTR cs:[edx-0x6d5246fd],cl
  41a5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b3:	loope  0x41a55f
  41a5b5:	push   edi
  41a5b6:	inc    ecx
  41a5b7:	fnstenv [esi-0x64]
  41a5ba:	dec    edi
  41a5bb:	or     eax,DWORD PTR [ebx]
  41a5bd:	mov    bl,0xf2
  41a5bf:	mov    cl,0x9a
  41a5c1:	es mov esi,0xab3a6d1a
  41a5c7:	cmp    eax,0x33c047bb
  41a5cc:	mov    BYTE PTR [esi-0x10],bh
  41a5cf:	into   
  41a5d0:	xor    eax,DWORD PTR [eax+0x5a]
  41a5d3:	push   es
  41a5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d5:	int3   
  41a5d6:	mov    esp,0x2eca747b
  41a5db:	mov    al,0xaa
  41a5dd:	dec    edi
  41a5de:	jmp    0xdb92:0x262c1168
  41a5e5:	mov    cl,BYTE PTR [edi]
  41a5e7:	xor    ecx,ebx
  41a5e9:	mov    eax,ds:0xe6bf7af6
  41a5ee:	add    eax,0x82bd4048
  41a5f3:	cli    
  41a5f4:	jecxz  0x41a5e6
  41a5f6:	inc    edx
  41a5f7:	lock add eax,0x342dae46
  41a5fd:	stos   BYTE PTR es:[edi],al
  41a5fe:	lock push ebx
  41a600:	pop    esp
  41a601:	mov    al,0xa4
  41a603:	jmp    0x97e1:0xd14ae5ae
  41a60a:	push   esi
  41a60b:	lods   al,BYTE PTR ds:[esi]
  41a60c:	ins    BYTE PTR es:[edi],dx
  41a60d:	nop
  41a60e:	js     0x41a597
  41a610:	jle    0x41a60b
  41a612:	xchg   DWORD PTR [esi],esi
  41a614:	idiv   DWORD PTR [ebp-0x33b10f9b]
  41a61a:	popa   
  41a61b:	imul   ecx,DWORD PTR [ebp-0x1be83342],0xfc850908
  41a625:	int3   
  41a626:	sbb    eax,0x9496aa4c
  41a62b:	inc    edi
  41a62c:	push   ss
  41a62d:	js     0x41a5ce
  41a62f:	popa   
  41a630:	jg     0x87ce54ec
  41a636:	aad    0x8d
  41a638:	adc    al,0x86
  41a63a:	imul   esp,DWORD PTR [bx+di],0x5b
  41a63e:	mov    edi,0x2da7097a
  41a643:	lock pop ss
  41a645:	call   0x62190383
  41a64a:	enter  0x8b10,0xbd
  41a64e:	rcl    al,cl
  41a650:	aad    0x9f
  41a652:	pop    DWORD PTR [edx]
  41a654:	mov    esi,0x835db23a
  41a659:	xchg   ebx,eax
  41a65a:	dec    edx
  41a65b:	jnp    0x41a630
  41a65d:	out    0xdb,al
  41a65f:	sub    al,0x88
  41a661:	sbb    eax,DWORD PTR [edx+ebp*4]
  41a664:	mov    bh,0x1d
  41a666:	jmp    0x684adf80
  41a66b:	jmp    0xbbfd:0xa73ad90b
  41a672:	inc    edi
  41a673:	mov    ebx,0xa0634874
  41a678:	sbb    eax,ecx
  41a67a:	sub    DWORD PTR [edi],esi
  41a67c:	push   ss
  41a67d:	cmp    esp,ecx
  41a67f:	sub    eax,0x6810ace7
  41a684:	jb     0x41a629
  41a686:	stos   BYTE PTR es:[edi],al
  41a687:	cmp    al,0x4d
  41a689:	cld    
  41a68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a68b:	adc    DWORD PTR [esi+ebx*4-0x48fd3571],esi
  41a692:	xchg   ebp,eax
  41a693:	call   0xa2e6:0xce0e056b
  41a69a:	xor    edi,DWORD PTR [edi]
  41a69c:	lods   al,BYTE PTR ds:[esi]
  41a69d:	push   edi
  41a69e:	sub    ch,BYTE PTR [edi-0x68]
  41a6a1:	or     bh,dl
  41a6a3:	xlat   BYTE PTR ds:[ebx]
  41a6a4:	test   DWORD PTR [edi-0x3d0d27b],esp
  41a6aa:	les    edx,FWORD PTR [ebx]
  41a6ac:	jno    0x41a6e6
  41a6ae:	sahf   
  41a6af:	sbb    dh,BYTE PTR ds:0xe33589ad
  41a6b5:	aad    0xd6
  41a6b7:	leave  
  41a6b8:	sub    al,BYTE PTR [ebp-0x2d00e0ec]
  41a6be:	pop    edi
  41a6bf:	jecxz  0x41a6d0
  41a6c1:	rcr    BYTE PTR [eax-0x4a],cl
  41a6c4:	xor    eax,0x7a276f3b
  41a6c9:	sub    al,0x19
  41a6cb:	iret   
  41a6cc:	fwait
  41a6cd:	shr    DWORD PTR [ebp+0x7],0xb4
  41a6d1:	jecxz  0x41a69f
  41a6d3:	mov    ds:0x41dda8f7,eax
  41a6d8:	jno    0x41a6fb
  41a6da:	aad    0xbf
  41a6dc:	stc    
  41a6dd:	sbb    eax,0xaf6c186b
  41a6e2:	mov    WORD PTR [edi+esi*1],ds
  41a6e5:	pop    ebx
  41a6e6:	dec    ebx
  41a6e7:	jae    0x41a67a
  41a6e9:	ret    
  41a6ea:	xchg   DWORD PTR [ebx-0x50e00c32],edi
  41a6f0:	aaa    
  41a6f1:	fwait
  41a6f2:	xchg   edx,eax
  41a6f3:	jmp    0x41a764
  41a6f5:	push   ebp
  41a6f6:	js     0x41a6d2
  41a6f8:	add    edi,DWORD PTR [eax+0x14319524]
  41a6fe:	mov    al,ds:0xeeb3d567
  41a703:	std    
  41a704:	in     al,dx
  41a705:	pop    ebp
  41a706:	inc    ebx
  41a707:	fnsave [eax+0xc]
  41a70a:	and    eax,0x48645138
  41a70f:	nop
  41a710:	sbb    ebx,ecx
  41a712:	in     al,dx
  41a713:	sub    al,cl
  41a715:	cmp    BYTE PTR [ebx+esi*8],bh
  41a718:	xchg   esp,eax
  41a719:	sub    DWORD PTR [eax-0x1a587e04],esp
  41a71f:	mov    dh,0x39
  41a721:	or     BYTE PTR [edx+ebx*4-0x4d],0xde
  41a726:	push   0xb6804ee2
  41a72b:	(bad)  
  41a72c:	xor    dh,BYTE PTR [edx+ebx*4-0x2cc9c7ef]
  41a733:	mov    gs,WORD PTR [ebx]
  41a735:	and    DWORD PTR [ebx+0x200f36ac],edi
  41a73b:	ja     0x41a799
  41a73d:	rcl    DWORD PTR [eax+0x72],1
  41a740:	paddb  mm6,QWORD PTR [ecx-0x5f]
  41a744:	into   
  41a745:	xor    BYTE PTR [edi+0x6f],dh
  41a748:	pushf  
  41a749:	les    ebp,FWORD PTR [esi]
  41a74b:	dec    ebx
  41a74c:	fild   WORD PTR [ebx]
  41a74e:	mov    cs:0xb33d21b3,al
  41a754:	xchg   ecx,eax
  41a755:	dec    ecx
  41a756:	retf   
  41a757:	sub    eax,0xf2c16e35
  41a75c:	mov    DWORD PTR [edi],esi
  41a75e:	xor    al,0xe
  41a760:	call   0xe0fcd4b3
  41a765:	mov    bl,0xb
  41a767:	int    0x6
  41a769:	and    al,0x83
  41a76b:	ds mov ebx,0xdb373f62
  41a771:	cmp    cl,BYTE PTR [ebp-0x1e]
  41a774:	jnp    0x41a727
  41a776:	ins    BYTE PTR es:[edi],dx
  41a777:	jne    0x41a71a
  41a779:	add    eax,0x32af2b5b
  41a77e:	in     eax,dx
  41a77f:	mov    eax,ds:0xf69cf557
  41a784:	pop    ecx
  41a785:	jno    0x41a755
  41a787:	aas    
  41a788:	in     eax,0x1e
  41a78a:	or     ecx,DWORD PTR [ebx+esi*2+0x2eb46c1c]
  41a791:	cs sub edi,ecx
  41a794:	mov    ch,0x1e
  41a796:	jl     0x41a73c
  41a798:	in     al,0x4b
  41a79a:	add    dh,BYTE PTR [ecx+0x7584dda7]
  41a7a0:	(bad)
  41a7a4:	push   ecx
  41a7a5:	xchg   ebx,eax
  41a7a6:	lds    eax,FWORD PTR [esi-0x4e6f29f0]
  41a7ac:	push   es
  41a7ad:	mov    cl,0xf2
  41a7af:	adc    BYTE PTR [ecx+0x4e],ah
  41a7b2:	sbb    DWORD PTR [ecx],eax
  41a7b4:	cmp    BYTE PTR [eax-0x238a5fbf],0xcf
  41a7bb:	jp     0x41a7ba
  41a7bd:	shl    DWORD PTR [edx+0x53],0xca
  41a7c1:	adc    eax,0x873d2206
  41a7c6:	outs   dx,DWORD PTR ds:[esi]
  41a7c7:	repnz adc BYTE PTR [ecx-0x66],0x9f
  41a7cc:	mov    ecx,0xcd0ff7f
  41a7d1:	fstp   TBYTE PTR [esi-0x64224209]
  41a7d7:	jmp    0x86c2dbfd
  41a7dc:	fwait
  41a7dd:	xor    al,BYTE PTR [eax]
  41a7df:	neg    BYTE PTR ds:[eax]
  41a7e2:	mov    edx,ss
  41a7e4:	(bad)  
  41a7e5:	je     0x41a800
  41a7e7:	dec    eax
  41a7e8:	dec    eax
  41a7e9:	jp     0x41a862
  41a7eb:	jnp    0x41a7c9
  41a7ed:	fs jmp 0x86b7:0x35f62a2e
  41a7f5:	push   es
  41a7f6:	xchg   DWORD PTR [ebx],edx
  41a7f8:	repz sub ecx,ebx
  41a7fb:	xchg   DWORD PTR [ebx],eax
  41a7fd:	(bad)  
  41a7fe:	and    bl,bl
  41a800:	rcl    ch,cl
  41a802:	test   BYTE PTR ds:0xe8acec73,0x7e
  41a809:	or     BYTE PTR [esi],bh
  41a80b:	sahf   
  41a80c:	shl    esi,cl
  41a80e:	in     eax,0xd
  41a810:	dec    edi
  41a811:	(bad)  
  41a812:	jae    0x41a7b4
  41a814:	repnz fimul WORD PTR [ebp+0x5b]
  41a818:	stos   BYTE PTR es:[edi],al
  41a819:	xchg   ecx,eax
  41a81a:	cmp    eax,0xffffffdb
  41a81d:	sti    
  41a81e:	inc    eax
  41a81f:	test   DWORD PTR [esi-0x2d],eax
  41a822:	jecxz  0x41a89b
  41a824:	push   0x34
  41a826:	or     al,0xf9
  41a828:	push   esp
  41a829:	pop    edx
  41a82a:	sbb    al,0x54
  41a82c:	in     eax,dx
  41a82d:	jmp    0x50f7628d
  41a832:	inc    ebp
  41a833:	cmp    al,0x1a
  41a835:	(bad)  
  41a836:	pop    esp
  41a837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a838:	or     eax,0x503b7302
  41a83d:	mov    cl,0xf5
  41a83f:	or     eax,0xc10b9907
  41a844:	jle    0x41a7e3
  41a846:	xor    bh,bl
  41a848:	jbe    0x41a87f
  41a84a:	jmp    0x82e6c09a
  41a84f:	cmp    DWORD PTR [esi+0x6f],0xffffff9b
  41a853:	dec    ecx
  41a854:	mov    bh,cl
  41a856:	scas   al,BYTE PTR es:[edi]
  41a857:	pop    esp
  41a858:	call   0xddb61824
  41a85d:	mov    cs,WORD PTR [ebx+eax*1-0x5b]
  41a861:	cs (bad) 
  41a863:	fidiv  WORD PTR [edi]
  41a865:	sbb    al,0xe3
  41a867:	inc    eax
  41a868:	mov    al,ds:0xce13a6ff
  41a86d:	inc    eax
  41a86e:	jnp    0x41a81b
  41a870:	in     eax,dx
  41a871:	(bad)  
  41a872:	repnz xchg ecx,eax
  41a874:	les    esp,FWORD PTR [ecx]
  41a876:	inc    esi
  41a877:	in     al,0x77
  41a879:	aas    
  41a87a:	xor    ebp,0xe0ffb0d9
  41a880:	ss pop ebp
  41a882:	pop    ecx
  41a883:	(bad)  
  41a884:	outs   dx,BYTE PTR ds:[esi]
  41a885:	lahf   
  41a886:	pusha  
  41a887:	je     0x41a8cc
  41a889:	and    al,0x89
  41a88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a88c:	lds    edi,FWORD PTR [edx-0x31]
  41a88f:	hlt    
  41a890:	fdivr  DWORD PTR [edi+0x4df3eee7]
  41a896:	jle    0x41a8ca
  41a898:	push   es
  41a899:	(bad)  
  41a89c:	lods   al,BYTE PTR ds:[esi]
  41a89d:	jge    0x41a90d
  41a89f:	mov    eax,0x410b75a0
  41a8a4:	lods   eax,DWORD PTR ds:[esi]
  41a8a5:	mov    BYTE PTR [ebp+0x5d],al
  41a8a8:	cld    
  41a8a9:	pop    ebp
  41a8aa:	cmp    ebx,edi
  41a8ac:	(bad)  
  41a8ad:	in     al,0x20
  41a8af:	std    
  41a8b0:	sub    eax,0x8668343c
  41a8b5:	mov    ebp,0x2d1222b9
  41a8ba:	jns    0x41a887
  41a8bc:	inc    ebx
  41a8bd:	jmp    0x8d3587fc
  41a8c2:	or     BYTE PTR [ebp+0x108279e5],0xd3
  41a8c9:	int3   
  41a8ca:	add    DWORD PTR [edi+0x27d928e],esp
  41a8d0:	sbb    eax,0xe0bdc074
  41a8d5:	ds inc esi
  41a8d7:	mov    ecx,0x4379d171
  41a8dc:	and    cl,BYTE PTR [eax]
  41a8de:	retf   
  41a8df:	es xchg edx,eax
  41a8e1:	dec    ebx
  41a8e2:	fld    DWORD PTR [ebx]
  41a8e4:	js     0x41a911
  41a8e6:	sub    al,0x34
  41a8e8:	into   
  41a8e9:	imul   esp,DWORD PTR [edi-0x3f7c93d4],0xffffffb9
  41a8f0:	sub    ebp,DWORD PTR [edi+0x15]
  41a8f3:	aam    0xa
  41a8f5:	xchg   DWORD PTR [edx+0x48],edx
  41a8f8:	pop    ebx
  41a8f9:	pop    ecx
  41a8fa:	adc    DWORD PTR [edi-0x38],edi
  41a8fd:	cmp    DWORD PTR [esi],ecx
  41a8ff:	and    al,ah
  41a901:	pop    ebx
  41a902:	xchg   esp,eax
  41a903:	pop    ebx
  41a904:	int3   
  41a905:	pop    ss
  41a906:	test   eax,0x3a644208
  41a90b:	jecxz  0x41a93e
  41a90d:	aas    
  41a90e:	ret    
  41a90f:	imul   ebp,DWORD PTR [esi-0x2b],0x87960e45
  41a916:	lds    ebp,FWORD PTR [ecx+ecx*2]
  41a919:	pop    esp
  41a91a:	ins    DWORD PTR es:[edi],dx
  41a91b:	push   0x25b24276
  41a920:	loop   0x41a94a
  41a922:	xlat   BYTE PTR ds:[ebx]
  41a923:	mov    ah,0x3e
  41a925:	xchg   esp,eax
  41a926:	std    
  41a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a928:	or     cl,BYTE PTR [edi+edx*1-0x6b3096f7]
  41a92f:	mov    bl,0xee
  41a931:	xor    al,0x4
  41a933:	mov    ebx,0xae6ab95c
  41a938:	rep lods al,BYTE PTR ds:[esi]
  41a93a:	outs   dx,BYTE PTR ds:[esi]
  41a93b:	fld    TBYTE PTR [edx+0x5e16f3c6]
  41a941:	fcmove st,st(7)
  41a943:	pusha  
  41a944:	scas   al,BYTE PTR es:[edi]
  41a945:	pop    ecx
  41a946:	add    esi,DWORD PTR [ecx+0x6f935b72]
  41a94c:	push   edi
  41a94d:	inc    edx
  41a94e:	popf   
  41a94f:	repz loop 0x41a9c5
  41a952:	test   DWORD PTR [esi-0x24485f3c],ecx
  41a958:	scas   al,BYTE PTR es:[edi]
  41a959:	inc    esp
  41a95a:	fsubrp st(2),st
  41a95c:	jns    0x41a8df
  41a95e:	cli    
  41a95f:	hlt    
  41a960:	les    si,DWORD PTR [ecx-0x2ca37dec]
  41a967:	mov    eax,0xc732ffa0
  41a96c:	inc    esp
  41a96d:	lds    edi,FWORD PTR [esi-0x720eff26]
  41a973:	stc    
  41a974:	sahf   
  41a975:	rcl    DWORD PTR [eax],cl
  41a977:	sti    
  41a978:	inc    ecx
  41a979:	mov    BYTE PTR [edx-0x19],0x9e
  41a97d:	(bad)  
  41a97e:	push   0xffffff88
  41a980:	ss cmc 
  41a982:	mov    al,0x11
  41a984:	loop   0x41a94c
  41a986:	fsubr  DWORD PTR [eax+eax*2]
  41a989:	out    0x9,eax
  41a98b:	mov    ch,0xa9
  41a98d:	push   ds
  41a98e:	inc    esp
  41a98f:	lea    esp,[edi+0x4d]
  41a992:	mov    cl,0xeb
  41a994:	jge    0x41a9e1
  41a996:	sub    DWORD PTR [esp+eax*1-0x770da1e4],eax
  41a99d:	mov    dh,0xac
  41a99f:	lods   eax,DWORD PTR ds:[esi]
  41a9a0:	push   esp
  41a9a1:	sbb    ebx,DWORD PTR [ecx]
  41a9a3:	lods   eax,DWORD PTR ds:[esi]
  41a9a4:	adc    ah,BYTE PTR [edx-0x126f79c2]
  41a9aa:	or     DWORD PTR ds:0x1854673,ebx
  41a9b0:	mov    ecx,0x7fa9e81e
  41a9b5:	add    al,BYTE PTR [ecx]
  41a9b7:	test   BYTE PTR [ecx+0x1c8c9394],bh
  41a9bd:	and    BYTE PTR [ebp-0x41cdf8f],0x54
  41a9c4:	adc    BYTE PTR [edi],ch
  41a9c6:	and    eax,0x390f1d17
  41a9cb:	dec    edx
  41a9cc:	inc    eax
  41a9cd:	or     ch,BYTE PTR [eax]
  41a9cf:	xchg   edx,eax
  41a9d0:	mov    al,ds:0x6c56d461
  41a9d5:	mov    esp,0x49d4d1d
  41a9da:	bound  esi,QWORD PTR [esi]
  41a9dc:	cli    
  41a9dd:	lods   al,BYTE PTR ds:[esi]
  41a9de:	pop    es
  41a9df:	xor    eax,0xbe493624
  41a9e4:	xor    al,0x21
  41a9e6:	ja     0x41aa5a
  41a9e8:	inc    esi
  41a9e9:	lahf   
  41a9ea:	and    BYTE PTR [edi],al
  41a9ec:	clc    
  41a9ed:	push   cs
  41a9ee:	mov    al,ds:0xa95edc27
  41a9f3:	leave  
  41a9f4:	leave  
  41a9f5:	dec    ebx
  41a9f6:	pop    ss
  41a9f7:	mov    ds:0x6209185e,eax
  41a9fc:	xor    esp,DWORD PTR [edx]
  41a9fe:	popf   
  41a9ff:	retf   
  41aa00:	imul   esi,DWORD PTR [ecx],0x233966c9
  41aa06:	add    al,BYTE PTR [ebp-0x47]
  41aa09:	mov    eax,ds:0x5b70fb50
  41aa0e:	add    bl,bl
  41aa10:	pop    esp
  41aa11:	dec    ebx
  41aa12:	pop    ebx
  41aa13:	addr16 jle 0x41aa69
  41aa16:	js     0x41aa48
  41aa18:	cmp    DWORD PTR [ecx+0x5d],eax
  41aa1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa1c:	sahf   
  41aa1d:	or     ch,bh
  41aa1f:	mov    al,ds:0x1880543b
  41aa24:	scas   al,BYTE PTR es:[edi]
  41aa25:	mov    ch,0x59
  41aa27:	fnstenv [edi+0x4e36d783]
  41aa2d:	adc    bh,BYTE PTR [ecx+0x50]
  41aa30:	push   edi
  41aa31:	mov    dl,0xff
  41aa33:	repz ss or dl,BYTE PTR fs:[edi]
  41aa38:	ja     0x41aa8f
  41aa3a:	aas    
  41aa3b:	add    ch,dl
  41aa3d:	int3   
  41aa3e:	push   eax
  41aa3f:	jno    0x41a9f5
  41aa41:	cmc    
  41aa42:	jbe    0x41aaa5
  41aa44:	add    DWORD PTR [edi],0xf644e888
  41aa4a:	in     eax,dx
  41aa4b:	and    esp,DWORD PTR [eax]
  41aa4d:	push   ss
  41aa4e:	mov    al,0xa6
  41aa50:	rcr    ecx,1
  41aa52:	add    ch,ah
  41aa54:	xor    bh,BYTE PTR [ecx]
  41aa56:	cmp    al,0x5d
  41aa58:	mov    esp,es
  41aa5a:	sbb    al,0xb8
  41aa5c:	les    esi,FWORD PTR fs:[ecx+0x5a]
  41aa60:	inc    eax
  41aa61:	mov    dl,0x54
  41aa63:	mov    ebp,0xecb5752b
  41aa68:	icebp  
  41aa69:	popa   
  41aa6a:	xchg   ecx,eax
  41aa6b:	add    al,cl
  41aa6d:	push   0x19747610
  41aa72:	adc    edx,ebx
  41aa74:	sub    eax,0xfee58fa
  41aa79:	cmp    DWORD PTR [esi],edx
  41aa7b:	inc    esi
  41aa7c:	mov    esp,0xbf7af2c6
  41aa81:	ret    
  41aa82:	mov    dl,0xba
  41aa84:	push   esi
  41aa85:	aaa    
  41aa86:	push   ecx
  41aa87:	xor    BYTE PTR [eax+eiz*8-0x4d6c3e31],ah
  41aa8e:	leave  
  41aa8f:	nop
  41aa90:	sbb    eax,DWORD PTR [esi-0x776042d9]
  41aa96:	popf   
  41aa97:	lods   eax,DWORD PTR ds:[esi]
  41aa98:	and    al,0x8
  41aa9a:	mov    ds:0x1acb42ca,al
  41aa9f:	sub    ch,cl
  41aaa1:	sbb    al,0xc1
  41aaa3:	rcl    DWORD PTR [esi-0x42e77481],1
  41aaa9:	xor    BYTE PTR [eax-0x292cd81d],dl
  41aaaf:	pop    ss
  41aab0:	adc    DWORD PTR ds:[ecx-0x72],ebx
  41aab4:	mov    bh,0x43
  41aab6:	pop    esp
  41aab7:	loopne 0x41aa71
  41aab9:	bound  edx,QWORD PTR [ebx]
  41aabb:	push   eax
  41aabc:	xchg   edi,eax
  41aabd:	and    al,0xe3
  41aabf:	fnstenv [di+0x36da]
  41aac4:	add    esp,DWORD PTR ds:0xdc64d69d
  41aaca:	test   eax,0x16f1bed5
  41aacf:	fs jmp 0x41aad7
  41aad2:	(bad)  [ebx]
  41aad4:	(bad)  
  41aad5:	xlat   BYTE PTR ds:[ebx]
  41aad6:	(bad)  
  41aad7:	(bad)  
  41aad8:	sub    eax,0x8f0844c
  41aadd:	adc    DWORD PTR [edi+0x26bbb39b],ecx
  41aae3:	jp     0x41aa71
  41aae5:	cmp    ch,bl
  41aae7:	sahf   
  41aae8:	dec    ebp
  41aae9:	test   al,0x90
  41aaeb:	lods   al,BYTE PTR ds:[esi]
  41aaec:	xor    esp,esi
  41aaee:	out    0xa7,eax
  41aaf0:	repnz and BYTE PTR [esi],dl
  41aaf3:	and    DWORD PTR [ecx-0x21e2022c],esp
  41aaf9:	cmp    eax,0xa3f55335
  41aafe:	xor    DWORD PTR [ebx],0x4230935a
  41ab04:	and    BYTE PTR [eax],ah
  41ab06:	sbb    cl,bh
  41ab08:	pop    ecx
  41ab09:	mov    ebx,0xa7c655fd
  41ab0e:	jne    0x41ab79
  41ab10:	mov    al,0x83
  41ab12:	scas   eax,DWORD PTR es:[edi]
  41ab13:	jl     0x41aaab
  41ab15:	jecxz  0x41ab5c
  41ab17:	imul   esi,DWORD PTR [eax-0x21],0xffffffb0
  41ab1b:	leave  
  41ab1c:	pop    ebx
  41ab1d:	dec    esi
  41ab1e:	int3   
  41ab1f:	lahf   
  41ab20:	cdq    
  41ab21:	rol    BYTE PTR [ebp+0x23],cl
  41ab24:	fist   DWORD PTR [esi+0x3d]
  41ab27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab28:	mov    dh,0xe6
  41ab2a:	and    al,0xab
  41ab2c:	aaa    
  41ab2d:	xor    esi,eax
  41ab2f:	cmp    BYTE PTR [edx-0x6f681754],bh
  41ab35:	jmp    0x73ec:0xaa5b3be8
  41ab3c:	icebp  
  41ab3d:	dec    edi
  41ab3e:	aaa    
  41ab3f:	call   0x52aeefda
  41ab44:	into   
  41ab45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab46:	sub    eax,0x1e5ffa5a
  41ab4b:	fdiv   st(1),st
  41ab4d:	aaa    
  41ab4e:	or     eax,0x700efa38
  41ab53:	jmp    0x41ab62
  41ab55:	adc    ebx,DWORD PTR [eax+eax*2+0x176000]
  41ab5c:	or     al,0x22
  41ab5e:	mov    dh,ah
  41ab60:	lods   al,BYTE PTR ds:[esi]
  41ab61:	sti    
  41ab62:	retf   
  41ab63:	or     BYTE PTR [esi],bl
  41ab65:	mov    ebp,0x9c0eba7f
  41ab6a:	push   edx
  41ab6b:	push   ebp
  41ab6c:	stc    
  41ab6d:	jnp    0x41ab40
  41ab6f:	mov    edx,0x3e0bd4d0
  41ab74:	sub    DWORD PTR [edx-0x1d5aa919],esi
  41ab7a:	rcl    BYTE PTR [ebx],1
  41ab7c:	in     al,0x49
  41ab7e:	dec    eax
  41ab7f:	int    0x99
  41ab81:	jmp    0x5f09:0x15aaaed7
  41ab88:	cmc    
  41ab89:	xchg   ebp,edx
  41ab8b:	sub    cl,BYTE PTR [esi+0xb]
  41ab8e:	ret    0x2075
  41ab91:	pusha  
  41ab92:	jnp    0x41ab93
  41ab94:	xor    eax,0x8d05ff52
  41ab99:	sbb    BYTE PTR [ebx+0x237a74cc],0x26
  41aba0:	loope  0x41ab5f
  41aba2:	mov    esp,0xdbbafead
  41aba7:	push   esi
  41aba8:	aaa    
  41aba9:	sbb    eax,0xe79532fd
  41abae:	rcr    al,1
  41abb0:	xchg   edi,eax
  41abb1:	xor    eax,0x30edf79d
  41abb6:	push   esp
  41abb7:	xchg   esi,eax
  41abb8:	fsub   DWORD PTR [esi+edi*1-0x76a5c87e]
  41abbf:	ins    DWORD PTR es:[edi],dx
  41abc0:	pop    eax
  41abc1:	sub    BYTE PTR [ecx],0x6
  41abc4:	mov    es,ecx
  41abc6:	fmul   st,st(5)
  41abc8:	pop    ecx
  41abc9:	popa   
  41abca:	enter  0x9e43,0xe6
  41abce:	push   cs
  41abcf:	and    dh,bh
  41abd1:	dec    ebx
  41abd2:	adc    bh,BYTE PTR [ecx]
  41abd4:	in     eax,dx
  41abd5:	mov    esp,0xc10d3108
  41abda:	cmp    al,0xa0
  41abdc:	and    dl,ah
  41abde:	adc    BYTE PTR [esi-0x5108a3a8],al
  41abe4:	pop    ss
  41abe5:	pop    ss
  41abe6:	xor    DWORD PTR [ecx+0x5fccbf3a],edi
  41abec:	es stos BYTE PTR es:[edi],al
  41abee:	ret    
  41abef:	test   BYTE PTR ds:0xe2084e01,ch
  41abf5:	cli    
  41abf6:	jae    0x41abd0
  41abf8:	xchg   esp,eax
  41abf9:	test   eax,esp
  41abfb:	(bad)  
  41abfc:	aas    
  41abfd:	enter  0x7ed4,0x8a
  41ac01:	test   ebx,ebp
  41ac03:	rcr    DWORD PTR [esi-0x1f219059],1
  41ac09:	outs   dx,DWORD PTR ds:[esi]
  41ac0a:	mov    bl,0xdf
  41ac0c:	dec    eax
  41ac0d:	nop
  41ac0e:	ret    0x195a
  41ac11:	xchg   edx,eax
  41ac12:	inc    edx
  41ac13:	sbb    DWORD PTR [eax+0x2f50dd96],eax
  41ac19:	retf   
  41ac1a:	xchg   esi,eax
  41ac1b:	sahf   
  41ac1c:	jno    0x41ac3f
  41ac1e:	adc    dh,BYTE PTR [esi-0x335aea3e]
  41ac24:	sbb    al,0x7f
  41ac26:	lea    esi,[ebx-0x22]
  41ac29:	dec    edi
  41ac2a:	xor    al,0x1b
  41ac2c:	inc    edx
  41ac2d:	cmp    BYTE PTR [edi+edx*2+0x50],ch
  41ac31:	arpl   di,bp
  41ac33:	xor    eax,0x468fdfbf
  41ac38:	js     0x41abd2
  41ac3a:	or     eax,0x7f9140bc
  41ac3f:	or     eax,0x6254df7f
  41ac44:	mov    ch,0x9a
  41ac46:	enter  0xce5f,0x48
  41ac4a:	jns    0x41ac07
  41ac4c:	pop    esp
  41ac4d:	or     BYTE PTR [ecx],0x97
  41ac50:	(bad)  
  41ac51:	in     eax,dx
  41ac52:	and    BYTE PTR [ecx+0x2cfede0c],ah
  41ac58:	inc    ecx
  41ac59:	xor    eax,0x23426f23
  41ac5e:	inc    esp
  41ac5f:	pop    DWORD PTR [ebx]
  41ac61:	adc    al,0x7d
  41ac63:	sub    esi,DWORD PTR [edx+0x15]
  41ac66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac67:	and    ecx,DWORD PTR [eax-0x72]
  41ac6a:	sub    DWORD PTR [esi],ebx
  41ac6c:	test   DWORD PTR [ecx],0xc042d9ac
  41ac72:	and    DWORD PTR [eax],edi
  41ac74:	inc    ebp
  41ac75:	adc    eax,0x9683ad6a
  41ac7a:	xchg   edx,eax
  41ac7b:	sbb    eax,0xbc1cd456
  41ac80:	push   0xffffffee
  41ac82:	inc    edx
  41ac83:	jecxz  0x41ac54
  41ac85:	mov    al,0x39
  41ac87:	push   ds
  41ac88:	sub    eax,0x9690a3b0
  41ac8d:	clc    
  41ac8e:	ds push cs
  41ac90:	mov    cl,0x30
  41ac92:	in     eax,0xf4
  41ac94:	push   0x87ec8c38
  41ac99:	or     ecx,ecx
  41ac9b:	(bad)  
  41ac9c:	test   DWORD PTR [eax],0xc1652f2d
  41aca2:	das    
  41aca3:	scas   al,BYTE PTR es:[edi]
  41aca4:	hlt    
  41aca5:	dec    esi
  41aca6:	inc    esi
  41aca7:	push   ebx
  41aca8:	call   0x3d23:0x5c13e413
  41acaf:	repnz sar DWORD PTR [ecx],cl
  41acb2:	gs dec ebx
  41acb4:	stos   DWORD PTR es:[edi],eax
  41acb5:	cmc    
  41acb6:	aad    0x69
  41acb8:	test   eax,ecx
  41acba:	jp     0x41ad36
  41acbc:	inc    esp
  41acbd:	dec    esp
  41acbe:	out    dx,eax
  41acbf:	mov    eax,0x89f4beef
  41acc4:	sbb    eax,0x5c473dff
  41acc9:	iret   
  41acca:	and    al,0x61
  41accc:	sub    BYTE PTR [edi],dh
  41acce:	dec    edi
  41accf:	mov    ds:0x31f9e045,eax
  41acd4:	adc    ah,BYTE PTR [ebp+0x36]
  41acd7:	not    DWORD PTR [edx]
  41acd9:	nop
  41acda:	test   BYTE PTR [edx],ch
  41acdc:	(bad)  [ebx-0x76dbce18]
  41ace2:	(bad)  
  41ace3:	in     al,0xe1
  41ace5:	pop    es
  41ace6:	scas   eax,DWORD PTR es:[edi]
  41ace7:	xchg   ebx,eax
  41ace8:	push   esi
  41ace9:	push   es
  41acea:	rol    BYTE PTR [edi+0x25c6c559],cl
  41acf0:	pop    ebp
  41acf1:	aaa    
  41acf2:	lock outs dx,BYTE PTR ds:[esi]
  41acf4:	lods   al,BYTE PTR ds:[esi]
  41acf5:	popa   
  41acf6:	dec    eax
  41acf7:	stos   DWORD PTR es:[edi],eax
  41acf8:	cmp    al,0xdb
  41acfa:	xor    eax,0x8cce5987
  41acff:	push   esp
  41ad00:	(bad)  
  41ad01:	or     DWORD PTR ds:0x3525b84c,ebx
  41ad07:	lds    edx,FWORD PTR [edi+eiz*1]
  41ad0a:	in     eax,dx
  41ad0b:	leave  
  41ad0c:	fisttp DWORD PTR [ecx+0x5570d7bb]
  41ad12:	call   0xe4ffe7a4
  41ad17:	int    0xc3
  41ad19:	push   edx
  41ad1a:	repnz not DWORD PTR es:[ebx+0x710204aa]
  41ad22:	loope  0x41acbc
  41ad24:	add    BYTE PTR [edx],bl
  41ad26:	and    BYTE PTR [edi+0xa],dh
  41ad29:	adc    DWORD PTR [ecx+0x57],esp
  41ad2c:	dec    ebx
  41ad2d:	fnsave [ebx-0x33]
  41ad30:	(bad)  
  41ad31:	fnsave [ebp-0x73]
  41ad34:	in     al,dx
  41ad35:	popa   
  41ad36:	xchg   ecx,eax
  41ad37:	xchg   esp,eax
  41ad38:	xor    eax,0x73f320c
  41ad3d:	xor    DWORD PTR [ebx-0x52],esi
  41ad40:	and    WORD PTR [eax],cx
  41ad43:	adc    eax,DWORD PTR [eax+0x77]
  41ad46:	(bad)  
  41ad47:	je     0x41aceb
  41ad49:	rol    DWORD PTR [esi+0x6a],1
  41ad4c:	inc    eax
  41ad4d:	outs   dx,BYTE PTR ds:[esi]
  41ad4e:	aaa    
  41ad4f:	add    eax,0xacad2e
  41ad54:	popa   
  41ad55:	fstp   st(4)
  41ad57:	push   esp
  41ad58:	fwait
  41ad59:	jmp    0x14a7:0x77a983e0
  41ad60:	cmp    al,0x89
  41ad62:	dec    eax
  41ad63:	add    eax,DWORD PTR [edx]
  41ad65:	jle    0x41ad79
  41ad67:	cdq    
  41ad68:	ss pop ebp
  41ad6a:	mov    fs,WORD PTR [edi+0x315dbb41]
  41ad70:	daa    
  41ad71:	mov    dh,0x97
  41ad73:	cmp    DWORD PTR [ecx-0xb5cc7e5],0x50
  41ad7a:	sub    BYTE PTR [eax-0x196eedde],ch
  41ad80:	in     al,dx
  41ad81:	test   al,0x79
  41ad83:	repnz aad 0x32
  41ad86:	push   es
  41ad87:	ror    DWORD PTR [esp+ebx*1-0x31a27282],1
  41ad8e:	xor    eax,0xdce44a3a
  41ad93:	stc    
  41ad94:	cli    
  41ad95:	pop    esp
  41ad96:	(bad)  
  41ad97:	or     bl,BYTE PTR [edx]
  41ad99:	retf   
  41ad9a:	imul   esp,ebp,0x7b
  41ad9d:	das    
  41ad9e:	imul   edx,DWORD PTR cs:[eax-0x78],0x29778c35
  41ada6:	test   BYTE PTR [edi],0x6a
  41ada9:	clc    
  41adaa:	push   ds
  41adab:	loop   0x41adc6
  41adad:	mov    al,0x77
  41adaf:	inc    edx
  41adb0:	and    eax,0x4eb6918f
  41adb5:	dec    ecx
  41adb6:	aad    0xd7
  41adb8:	xchg   edi,eax
  41adb9:	sbb    eax,0xabac5ca
  41adbe:	mov    ds:0x10fd03ae,eax
  41adc3:	pop    esi
  41adc4:	mov    edi,0xb16f3dca
  41adc9:	inc    eax
  41adca:	test   DWORD PTR [ebx+0x3dc175d4],ecx
  41add0:	into   
  41add1:	xchg   ecx,eax
  41add2:	les    ecx,FWORD PTR [esi-0x60]
  41add5:	inc    edx
  41add6:	test   eax,0x9d4660ff
  41addb:	in     eax,0xa
  41addd:	les    edx,FWORD PTR [ebx-0x38e4e2af]
  41ade3:	mov    esp,0x859642c0
  41ade8:	sub    DWORD PTR [ecx+0x4589b59d],edx
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x3ed7ebdc
  41ccad:	int    0x90
  41ccaf:	fs xchg edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x7f]
  41ccb9:	cld    
  41ccba:	push   es
  41ccbb:	cli    
  41ccbc:	sub    DWORD PTR [eax],edi
  41ccbe:	mov    edi,0xcdf8e16
  41ccc3:	xchg   edi,eax
  41ccc4:	cmp    BYTE PTR [esi-0x79],ah
  41ccc7:	or     ch,BYTE PTR [esi+0x58]
  41ccca:	jae    0x41cc95
  41cccc:	push   ss
  41cccd:	ja     0x41cd1e
  41cccf:	mov    edi,0xc20180e
  41ccd4:	dec    esp
  41ccd5:	not    DWORD PTR [ecx-0x193274a9]
  41ccdb:	aad    0xc2
  41ccdd:	cdq    
  41ccde:	pop    eax
  41ccdf:	repnz cdq 
  41cce1:	shr    BYTE PTR [ebp+esi*2+0x4f32c079],cl
  41cce8:	jge    0x41ccab
  41ccea:	jns    0x41cc76
  41ccec:	push   eax
  41cced:	mov    dl,0xb3
  41ccef:	mov    eax,0xe00db647
  41ccf4:	sbb    cl,BYTE PTR [eax-0x27a281fe]
  41ccfa:	ds inc edx
  41ccfc:	and    esi,DWORD PTR [edi]
  41ccfe:	pop    ecx
  41ccff:	dec    ebx
  41cd00:	ins    BYTE PTR es:[edi],dx
  41cd01:	jo     0x41ccae
  41cd03:	mov    al,ds:0xd5ab601f
  41cd08:	call   0x7eae:0xeeb81745
  41cd0f:	and    dh,BYTE PTR [esi+0x72]
  41cd12:	jae    0x41cd15
  41cd14:	je     0x41ccf0
  41cd16:	nop
  41cd17:	jo     0x41cca6
  41cd19:	scas   eax,DWORD PTR es:[edi]
  41cd1a:	or     edi,DWORD PTR [edi-0x9]
  41cd1d:	xchg   edx,eax
  41cd1e:	frstor [ecx]
  41cd20:	call   0xbe2d:0xfdbe42b1
  41cd27:	aas    
  41cd28:	pop    esp
  41cd29:	xor    BYTE PTR [esi],bl
  41cd2b:	pop    eax
  41cd2c:	lahf   
  41cd2d:	sbb    DWORD PTR [edi-0x5d],edi
  41cd30:	pusha  
  41cd31:	mov    ebp,0xc1a58abd
  41cd36:	stos   BYTE PTR es:[edi],al
  41cd37:	or     eax,0x919c0566
  41cd3c:	clc    
  41cd3d:	push   esp
  41cd3e:	fild   WORD PTR [edx+0x53]
  41cd41:	icebp  
  41cd42:	mov    ecx,0x19cd0636
  41cd47:	test   eax,0x15164f89
  41cd4c:	stos   DWORD PTR es:[edi],eax
  41cd4d:	scas   al,BYTE PTR es:[edi]
  41cd4e:	std    
  41cd4f:	stos   DWORD PTR es:[edi],eax
  41cd50:	std    
  41cd51:	fidivr DWORD PTR [ebx]
  41cd53:	cs pop ecx
  41cd55:	and    DWORD PTR [eax-0x7b],edi
  41cd58:	jmp    0x4fa5cbf1
  41cd5d:	push   ecx
  41cd5e:	xlat   BYTE PTR ds:[ebx]
  41cd5f:	adc    DWORD PTR [edi-0x140270b3],ecx
  41cd65:	dec    esi
  41cd66:	cmp    ecx,DWORD PTR [esi+ebp*2]
  41cd69:	sub    ah,BYTE PTR [eax-0x79]
  41cd6c:	jno    0x41cd88
  41cd6e:	popa   
  41cd6f:	fwait
  41cd70:	sbb    al,BYTE PTR [eax-0x65]
  41cd73:	cmp    al,0xac
  41cd75:	test   al,0xcb
  41cd77:	mov    ecx,0xa621a890
  41cd7c:	cli    
  41cd7d:	cs ret 0xf551
  41cd81:	gs pushf 
  41cd83:	data16 ror BYTE PTR [eax],0x22
  41cd87:	jmp    0x6a56:0xcc688d04
  41cd8e:	call   0x212:0x6a617a95
  41cd95:	adc    al,0x4e
  41cd97:	std    
  41cd98:	push   eax
  41cd99:	retf   
  41cd9a:	inc    edx
  41cd9b:	int    0x70
  41cd9d:	fdivr  st,st(4)
  41cd9f:	xchg   esp,eax
  41cda0:	mov    WORD PTR [ebp-0x5b9ed747],ss
  41cda6:	adc    edx,edx
  41cda8:	jg     0x41cda6
  41cdaa:	aam    0x34
  41cdac:	daa    
  41cdad:	(bad)  
  41cdae:	push   edx
  41cdaf:	or     DWORD PTR [ecx-0x3b],edx
  41cdb2:	push   ds
  41cdb3:	mov    bh,0x83
  41cdb5:	mov    esi,0xb0d3273e
  41cdbb:	xor    edi,edi
  41cdbd:	xchg   ecx,eax
  41cdbe:	jo     0x41cdcd
  41cdc0:	clc    
  41cdc1:	fs sbb al,0xf5
  41cdc4:	pop    esi
  41cdc5:	enter  0xb2f6,0xd0
  41cdc9:	sbb    eax,0xd46546c8
  41cdce:	xor    eax,0x97ddef43
  41cdd3:	fdivr  QWORD PTR [edi+ecx*2]
  41cdd6:	adc    esi,DWORD PTR [ecx-0x33461d5a]
  41cddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cddd:	jge    0x41cddd
  41cddf:	shr    DWORD PTR [ecx-0x40398d34],1
  41cde5:	js     0x41cd7d
  41cde7:	cld    
  41cde8:	cmp    BYTE PTR [esi],ah
  41cdea:	and    al,0x66
  41cdec:	dec    edx
  41cded:	mov    cl,0xf
  41cdef:	shr    ah,0xb9
  41cdf2:	mov    ebx,0x167d207f
  41cdf7:	call   esi
  41cdf9:	aam    0x0
  41cdfb:	stc    
  41cdfc:	mov    al,ds:0x2bf1b380
  41ce01:	mov    edi,0xb33ee63e
  41ce06:	sbb    BYTE PTR [ebx+0x3e],dh
  41ce09:	hlt    
  41ce0a:	xor    eax,0xa2bd70ac
  41ce0f:	mov    edx,0xfa43d099
  41ce14:	ins    DWORD PTR es:[edi],dx
  41ce15:	or     ebx,DWORD PTR [ecx+0x17]
  41ce18:	icebp  
  41ce19:	sahf   
  41ce1a:	xchg   esp,eax
  41ce1b:	cli    
  41ce1c:	dec    edx
  41ce1d:	adc    DWORD PTR [eax+eiz*2+0x4f9d1477],edi
  41ce24:	cdq    
  41ce25:	out    dx,eax
  41ce26:	push   DWORD PTR [ebx+0x6a]
  41ce29:	loopne 0x41ce2c
  41ce2b:	jae    0x41ce61
  41ce2d:	inc    ebp
  41ce2e:	in     al,0x90
  41ce30:	push   edi
  41ce31:	(bad)  
  41ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce33:	aam    0x8d
  41ce35:	push   esp
  41ce36:	xlat   BYTE PTR ds:[ebx]
  41ce37:	jg     0x41ce4e
  41ce39:	fld    TBYTE PTR [ebp-0x70]
  41ce3c:	xchg   cl,cl
  41ce3e:	and    BYTE PTR [esi+edx*4+0x645c7b22],dl
  41ce45:	(bad)  
  41ce46:	pop    ebx
  41ce47:	jecxz  0x41cdd6
  41ce49:	fld    QWORD PTR [esi]
  41ce4b:	jo     0x41ce28
  41ce4d:	into   
  41ce4e:	rcl    BYTE PTR [ebx-0x48228e88],0xae
  41ce55:	test   al,0x1d
  41ce57:	rcl    BYTE PTR [ecx],1
  41ce59:	neg    ch
  41ce5b:	xor    al,0xdb
  41ce5d:	jb     0x41cdf7
  41ce5f:	jp     0x41ce1f
  41ce61:	fcom   QWORD PTR [esi-0x5f0cecc5]
  41ce67:	mov    ebx,0x5ad18816
  41ce6c:	jb     0x41ce5d
  41ce6e:	call   0x709f:0x89c27471
  41ce75:	mov    ecx,0x32c4a306
  41ce7a:	inc    eax
  41ce7b:	fcmovb st,st(1)
  41ce7d:	push   ds
  41ce7e:	aas    
  41ce7f:	dec    edx
  41ce80:	cmc    
  41ce81:	ja     0x41ce29
  41ce83:	fdiv   QWORD PTR [edi+ebp*1]
  41ce86:	lahf   
  41ce87:	pop    eax
  41ce88:	or     cl,bh
  41ce8a:	jns    0x41ce89
  41ce8c:	(bad)  
  41ce8d:	hlt    
  41ce8e:	jge    0x41cf03
  41ce90:	jnp    0x41ce2d
  41ce92:	pop    ss
  41ce93:	(bad)
  41ce96:	test   eax,0x354158ea
  41ce9b:	test   eax,0xe8de0c6f
  41cea0:	cvtdq2ps xmm2,XMMWORD PTR [ecx+ebp*2]
  41cea4:	pop    edx
  41cea5:	and    esi,edi
  41cea7:	cwde   
  41cea8:	pop    ecx
  41cea9:	mov    ds:0x3903a3b6,eax
  41ceae:	lds    esi,FWORD PTR [ebp-0x80]
  41ceb1:	jmp    0x9aef:0xa09d8be3
  41ceb8:	sbb    al,0x3c
  41ceba:	aas    
  41cebb:	adc    ebx,ecx
  41cebd:	pop    ss
  41cebe:	inc    ecx
  41cebf:	mov    ecx,0xce85a7fd
  41cec4:	(bad)  
  41cec5:	lods   al,BYTE PTR ds:[esi]
  41cec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec7:	xchg   edi,eax
  41cec8:	adc    eax,ecx
  41ceca:	retf   
  41cecb:	and    BYTE PTR [edi+0x26],dl
  41cece:	inc    esp
  41cecf:	dec    esp
  41ced0:	xor    BYTE PTR [esi+0x1f],cl
  41ced3:	icebp  
  41ced4:	push   es
  41ced5:	out    dx,eax
  41ced6:	push   eax
  41ced7:	dec    esp
  41ced8:	int    0x6b
  41ceda:	dec    esi
  41cedb:	(bad)  
  41cedc:	not    DWORD PTR [ebx+eiz*2]
  41cedf:	sub    ah,dh
  41cee1:	(bad)  
  41cee2:	js     0x41cee4
  41cee4:	loopne 0x41cecf
  41cee6:	div    BYTE PTR [ecx+0x2df78b6a]
  41ceec:	inc    edi
  41ceed:	test   DWORD PTR [eax-0x3d],ecx
  41cef0:	outs   dx,BYTE PTR ds:[esi]
  41cef1:	mov    DWORD PTR [esp+edx*1],ebp
  41cef4:	stc    
  41cef5:	(bad)  
  41cef6:	loopne 0x41cef8
  41cef8:	std    
  41cef9:	leave  
  41cefa:	das    
  41cefb:	xor    BYTE PTR [eax-0x3fc91dfe],dh
  41cf01:	pop    edi
  41cf02:	pop    ss
  41cf03:	add    bl,BYTE PTR [ebx-0x508b9d15]
  41cf09:	ret    
  41cf0a:	xor    BYTE PTR [edx-0x33],cl
  41cf0d:	and    BYTE PTR [esi+0x20],bl
  41cf10:	pushf  
  41cf11:	pop    eax
  41cf12:	aaa    
  41cf13:	push   edi
  41cf14:	mov    ch,0x1b
  41cf16:	ins    DWORD PTR es:[edi],dx
  41cf17:	dec    al
  41cf19:	or     al,0x8e
  41cf1b:	ja     0x41ceaa
  41cf1d:	fld    DWORD PTR [esi]
  41cf1f:	inc    eax
  41cf20:	(bad)  
  41cf21:	mov    ebx,ecx
  41cf23:	push   ebp
  41cf24:	cmp    DWORD PTR fs:[eax+esi*4],ebx
  41cf28:	mov    ecx,0x2e782dd
  41cf2d:	pusha  
  41cf2e:	ret    0x9fb
  41cf31:	cmp    ah,0x4c
  41cf34:	shl    BYTE PTR [eax+0x381811ad],0x5b
  41cf3b:	es push edi
  41cf3d:	mov    ?,WORD PTR [ecx-0x16]
  41cf40:	xchg   edi,eax
  41cf41:	lds    eax,FWORD PTR [eax-0x20bcc189]
  41cf47:	fwait
  41cf48:	mov    bh,0x5d
  41cf4a:	mov    al,0xd1
  41cf4c:	push   ebx
  41cf4d:	stos   BYTE PTR es:[edi],al
  41cf4e:	inc    ebp
  41cf50:	jmp    0x41cf9c
  41cf52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf53:	sti    
  41cf54:	sbb    DWORD PTR [esi+0x1e6450d6],0x1525330e
  41cf5e:	mov    ds:0x540ebe6,eax
  41cf63:	or     eax,0x6557afce
  41cf68:	mov    dh,0xd8
  41cf6a:	mov    BYTE PTR [ecx+0x46],al
  41cf6d:	mov    eax,DWORD PTR [eax+ebp*1+0x476bf50]
  41cf74:	mov    al,0x95
  41cf76:	dec    eax
  41cf77:	stc    
  41cf78:	fmul   DWORD PTR [ebx]
  41cf7a:	out    dx,al
  41cf7b:	popf   
  41cf7c:	icebp  
  41cf7d:	(bad)  
  41cf7e:	xlat   BYTE PTR ds:[ebx]
  41cf7f:	cs push edi
  41cf81:	inc    ebx
  41cf82:	jbe    0x41cff5
  41cf84:	and    esp,DWORD PTR [eax-0x46a4f773]
  41cf8a:	jp     0x41cf59
  41cf8c:	and    DWORD PTR [edx+0x52],edx
  41cf8f:	add    BYTE PTR [ebp+0xdb3808b],ah
  41cf95:	mov    ch,0xb3
  41cf97:	add    edi,DWORD PTR [ecx+0x4b]
  41cf9a:	inc    ecx
  41cf9b:	loopne 0x41cf59
  41cf9d:	dec    edi
  41cf9e:	adc    esp,ecx
  41cfa0:	psraw  mm7,QWORD PTR [esi-0x76]
  41cfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa6:	add    DWORD PTR [esi-0x5f71c1fc],edx
  41cfac:	neg    BYTE PTR [ebx]
  41cfae:	aaa    
  41cfaf:	add    al,0x63
  41cfb1:	push   ebp
  41cfb2:	sub    al,0x1d
  41cfb4:	sar    DWORD PTR [esi],1
  41cfb6:	retf   
  41cfb7:	add    al,0xc1
  41cfb9:	stos   BYTE PTR es:[edi],al
  41cfba:	jae    0x41cfb5
  41cfbc:	movups xmm0,XMMWORD PTR [ebp-0x73]
  41cfc0:	sahf   
  41cfc1:	data16 jo 0x41cf79
  41cfc4:	sub    cl,BYTE PTR [ebx-0xe79deaa]
  41cfca:	push   ss
  41cfcb:	sbb    al,0x45
  41cfcd:	aas    
  41cfce:	aaa    
  41cfcf:	ror    ebx,0x3e
  41cfd2:	pop    ebx
  41cfd3:	in     al,0xd3
  41cfd5:	jmp    0xfef:0xd0660ad7
  41cfdc:	sub    BYTE PTR [edi-0xe],dl
  41cfdf:	dec    ebx
  41cfe0:	je     0x41cfff
  41cfe2:	mov    ds:0x33ce97d8,eax
  41cfe7:	and    dl,dl
  41cfe9:	pop    ds
  41cfea:	xchg   BYTE PTR [edx],bl
  41cfec:	imul   edx,DWORD PTR [esi-0x340c4a5c],0x24
  41cff3:	shl    DWORD PTR [eax*4+0x4e7f1b3a],cl
  41cffa:	dec    eax
  41cffb:	mov    cl,0xe3
  41cffd:	inc    ebp
  41cffe:	push   ebp
  41cfff:	iret   
  41d000:	push   eax
  41d001:	pop    edi
  41d002:	ds (bad) 
  41d004:	cs stc 
  41d006:	sbb    bl,BYTE PTR [ebx+0x65]
  41d009:	jle    0x41cfbc
  41d00b:	add    al,0x4c
  41d00d:	jecxz  0x41d009
  41d00f:	mov    bh,0x6a
  41d011:	mov    al,ds:0x971dd8e8
  41d016:	push   es
  41d017:	and    al,0xc9
  41d019:	xchg   esp,eax
  41d01a:	sub    dh,0xda
  41d01d:	jle    0x41d013
  41d01f:	push   ebx
  41d020:	add    dh,BYTE PTR [eax+0x21]
  41d023:	imul   edi,edx,0x4a
  41d026:	cwde   
  41d027:	dec    esi
  41d028:	stc    
  41d029:	mov    al,ds:0xb14ff3cc
  41d02e:	xor    eax,0xf99d0743
  41d033:	adc    al,0x62
  41d035:	gs jne 0x41cfde
  41d038:	jmp    0x41d08c
  41d03a:	sbb    edi,DWORD PTR [ecx-0x1c472831]
  41d040:	mov    ds:0xd2ec5b73,al
  41d045:	cwde   
  41d046:	imul   esp,edi,0xffffff82
  41d049:	mov    ds:0x4f27c6ce,eax
  41d04e:	push   eax
  41d04f:	(bad)  
  41d050:	jmp    0xe67bfe10
  41d055:	or     al,0xcc
  41d057:	jecxz  0x41d0bc
  41d059:	mov    ch,0xb6
  41d05b:	loop   0x41d012
  41d05d:	mov    ch,0x61
  41d05f:	test   DWORD PTR [esi+edi*2],0xf4462c6e
  41d066:	add    al,0x2c
  41d068:	jle    0x41d04e
  41d06a:	stos   BYTE PTR es:[edi],al
  41d06b:	mov    WORD PTR [ecx+0x3dca826a],?
  41d071:	pop    esi
  41d072:	loop   0x41d0c3
  41d074:	not    BYTE PTR [esi-0x4b]
  41d077:	cs push ebx
  41d079:	fcom   st(0)
  41d07b:	push   esi
  41d07c:	lock pop edx
  41d07e:	mov    edi,0x84585216
  41d083:	xchg   ebp,eax
  41d084:	mov    ch,0xad
  41d086:	inc    esp
  41d087:	fs inc ecx
  41d089:	aad    0x48
  41d08b:	fs mov dh,0x83
  41d08e:	mov    edi,0x38b25500
  41d093:	jecxz  0x41d0eb
  41d095:	mov    ds:0x34b0b114,eax
  41d09a:	lods   eax,DWORD PTR ds:[esi]
  41d09b:	cmp    ebx,DWORD PTR ds:0xec8175fe
  41d0a1:	mov    ss,WORD PTR gs:0x571bf6fd
  41d0a8:	adc    esp,edx
  41d0aa:	and    edx,DWORD PTR [edi]
  41d0ac:	shl    DWORD PTR [edi+0x24],cl
  41d0af:	dec    ecx
  41d0b0:	js     0x41d0ec
  41d0b2:	jne    0x41d0e4
  41d0b4:	fs pop edx
  41d0b6:	mov    esp,0xd7adff0
  41d0bb:	push   0xffffffe3
  41d0bd:	(bad)  
  41d0be:	aas    
  41d0bf:	cli    
  41d0c0:	sbb    bl,ch
  41d0c2:	into   
  41d0c3:	push   cs
  41d0c4:	push   ebx
  41d0c5:	ror    ah,0x4a
  41d0c8:	cmp    BYTE PTR [edx+eax*2],cl
  41d0cb:	cmp    DWORD PTR [ebx-0x3e519cfc],esi
  41d0d1:	xchg   ebp,eax
  41d0d2:	jl     0x41d06c
  41d0d4:	mov    bl,0x53
  41d0d6:	clc    
  41d0d7:	inc    ecx
  41d0d8:	and    al,0xbf
  41d0da:	push   cs
  41d0db:	mov    cl,0x72
  41d0dd:	mov    dh,BYTE PTR [esi]
  41d0df:	cmp    ebp,DWORD PTR [ebx+0x14]
  41d0e2:	lods   al,BYTE PTR ds:[esi]
  41d0e3:	mov    ebx,0x5d034608
  41d0e8:	add    al,0xe2
  41d0ea:	pop    esi
  41d0eb:	inc    ecx
  41d0ec:	pop    esi
  41d0ed:	je     0x41d0e7
  41d0ef:	mov    bl,0x82
  41d0f1:	sub    al,0x33
  41d0f3:	hlt    
  41d0f4:	out    dx,eax
  41d0f5:	sbb    dh,BYTE PTR [ecx+eax*8+0x4f]
  41d0f9:	push   0xffffffdd
  41d0fb:	add    al,0xb
  41d0fd:	dec    edx
  41d0fe:	cld    
  41d0ff:	fcomp  QWORD PTR [ecx+0x32b70f6]
  41d105:	inc    edx
  41d106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d107:	mov    ds:0xbd34d783,al
  41d10c:	sbb    BYTE PTR [esi-0x5c8a9ba1],dl
  41d112:	push   0x27
  41d114:	jne    0x41d12e
  41d116:	fldcw  WORD PTR [esi+0xd]
  41d119:	sub    esi,ebp
  41d11b:	sub    esi,DWORD PTR [edx]
  41d11d:	xor    ebx,DWORD PTR [ebx]
  41d11f:	das    
  41d120:	ja     0x41d0a9
  41d122:	in     al,dx
  41d123:	ja     0x41d12f
  41d125:	xchg   ebp,eax
  41d126:	cld    
  41d127:	rcl    BYTE PTR [ecx],0xf6
  41d12a:	retf   0x4715
  41d12d:	mov    DWORD PTR [edi+0x5c5ee7b3],ebp
  41d133:	sbb    ecx,DWORD PTR [edi-0x5]
  41d136:	xchg   ecx,eax
  41d137:	repnz dec eax
  41d139:	add    al,0x18
  41d13b:	cs push 0x6934f8bd
  41d141:	add    ch,BYTE PTR [edx-0x22]
  41d144:	loopne 0x41d127
  41d146:	add    dl,BYTE PTR [ebx+0x711e5d3a]
  41d14c:	dec    ebx
  41d14d:	jp     0x41d162
  41d14f:	imul   DWORD PTR [esi+0x1de76d47]
  41d155:	mov    al,0x21
  41d157:	(bad)  
  41d158:	xor    al,0x50
  41d15a:	jge    0x41d182
  41d15c:	scas   eax,DWORD PTR es:[edi]
  41d15d:	mov    ds,WORD PTR [esi]
  41d15f:	sub    ch,0x81
  41d162:	popf   
  41d163:	imul   edi,DWORD PTR [edi-0x48be1514],0xa7b5a359
  41d16d:	dec    edi
  41d16e:	imul   ebp,DWORD PTR [eax-0x316fc179],0xbaaa723b
  41d178:	mov    eax,0xfeb0150a
  41d17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d17e:	enter  0xb1fc,0xae
  41d182:	xor    ebp,DWORD PTR [eax+0x522e859d]
  41d188:	mov    dl,0x4c
  41d18a:	xchg   edi,eax
  41d18b:	adc    DWORD PTR [ebx+0x60],esp
  41d18e:	shl    BYTE PTR [edi+0x4f],0x84
  41d192:	inc    eax
  41d193:	sar    DWORD PTR [esi+0x3bdc121f],1
  41d199:	paddusw mm1,mm5
  41d19c:	(bad)  
  41d19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d19e:	clc    
  41d19f:	push   esi
  41d1a0:	repz repnz sbb cl,bl
  41d1a4:	or     al,al
  41d1a6:	mov    esp,0x530ce40b
  41d1ab:	sahf   
  41d1ac:	dec    edx
  41d1ad:	int3   
  41d1ae:	out    0x4f,al
  41d1b0:	lea    eax,[ebx]
  41d1b2:	jle    0x41d203
  41d1b4:	pop    ebp
  41d1b5:	xchg   esi,eax
  41d1b6:	fwait
  41d1b7:	sub    ebx,DWORD PTR es:[edx-0x60]
  41d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bc:	sbb    eax,0xe7402422
  41d1c1:	sbb    eax,0xbc3afd6b
  41d1c6:	xor    DWORD PTR [edi+0x4cc6944a],ebx
  41d1cc:	aad    0x23
  41d1ce:	inc    edx
  41d1cf:	xor    ah,bl
  41d1d1:	jns    0x41d1d9
  41d1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d4:	cld    
  41d1d5:	out    0xca,al
  41d1d7:	mov    ds:0x5bcc40eb,eax
  41d1dc:	jnp    0x41d15f
  41d1de:	pop    ss
  41d1df:	sub    al,0x78
  41d1e1:	leave  
  41d1e2:	in     al,0xd6
  41d1e4:	out    dx,eax
  41d1e5:	outs   dx,BYTE PTR ds:[esi]
  41d1e6:	inc    esi
  41d1e7:	dec    ebp
  41d1e8:	mov    cl,0x7f
  41d1ea:	leave  
  41d1eb:	or     al,0x9b
  41d1ed:	test   BYTE PTR [ebp-0x63],bl
  41d1f0:	jno    0x41d1d0
  41d1f2:	sbb    BYTE PTR [esi],dl
  41d1f4:	jb     0x41d1aa
  41d1f6:	mov    edi,0xe0240ad7
  41d1fb:	in     al,dx
  41d1fc:	and    dl,0xed
  41d1ff:	stos   BYTE PTR es:[edi],al
  41d200:	or     esi,DWORD PTR [ebp-0x11ebdc08]
  41d206:	inc    ebx
  41d207:	test   edi,eax
  41d209:	cmp    DWORD PTR [esi],ebx
  41d20b:	ss jbe 0x41d20b
  41d20e:	mov    gs:0x32ae857e,eax
  41d214:	mov    ebx,0x9a6d4844
  41d219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21a:	dec    edi
  41d21b:	or     edi,edx
  41d21d:	push   eax
  41d21e:	ret    
  41d21f:	cmp    eax,0xb2813805
  41d224:	push   0x419746e2
  41d229:	ds sbb ebp,0x5c
  41d22d:	or     al,0xcb
  41d22f:	ja     0x41d1b2
  41d231:	mov    cl,0x1d
  41d233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d234:	push   ecx
  41d235:	mov    bh,0x1b
  41d237:	lock sub ecx,DWORD PTR [eax]
  41d23a:	sub    DWORD PTR [esi-0x713130fd],0xffffffd4
  41d241:	ins    DWORD PTR es:[edi],dx
  41d242:	push   ecx
  41d243:	adc    dh,BYTE PTR [edx-0x8]
  41d246:	jmp    0xe6b5:0xf2b80140
  41d24d:	dec    esp
  41d24e:	sbb    ah,BYTE PTR [esi]
  41d250:	mov    ch,0x3
  41d252:	pop    eax
  41d253:	mov    eax,esp
  41d255:	mov    esi,0x8ae7a0c1
  41d25a:	mov    bh,0x5c
  41d25c:	int    0x44
  41d25e:	(bad)  
  41d25f:	push   edx
  41d260:	fisttp DWORD PTR [eax+0x53]
  41d263:	lods   al,BYTE PTR ds:[esi]
  41d264:	sub    BYTE PTR [edi-0x2b],ah
  41d267:	dec    eax
  41d268:	lock and eax,0xd27412df
  41d26e:	outs   dx,BYTE PTR ds:[esi]
  41d26f:	push   ss
  41d270:	mov    al,0x1f
  41d272:	mov    dl,0x8e
  41d274:	shl    BYTE PTR [edx+eax*8-0x8],1
  41d278:	scas   eax,DWORD PTR es:[edi]
  41d279:	mov    WORD PTR [ecx-0x54],?
  41d27c:	pop    esp
  41d27d:	ins    DWORD PTR es:[edi],dx
  41d27e:	push   ds
  41d27f:	mov    eax,0x1ab485c7
  41d284:	rcr    DWORD PTR [edx+ebx*2-0x45236a5d],0xc7
  41d28c:	and    bl,dl
  41d28e:	fs sub eax,0xd467c52c
  41d294:	in     al,0x9c
  41d296:	jecxz  0x41d2cd
  41d298:	mov    DWORD PTR [edi],edi
  41d29a:	aad    0xf8
  41d29c:	popf   
  41d29d:	inc    esp
  41d29e:	xchg   ecx,eax
  41d29f:	xchg   edx,eax
  41d2a0:	and    ecx,DWORD PTR [eax+esi*2+0x24a7799]
  41d2a7:	repz stc 
  41d2a9:	dec    eax
  41d2aa:	in     eax,0xcf
  41d2ac:	and    al,0xdb
  41d2ae:	lock lea ebp,[ebp-0x7]
  41d2b2:	out    0x35,al
  41d2b4:	mov    dl,0x43
  41d2b6:	mov    eax,ds:0x1e4001ef
  41d2bb:	stos   BYTE PTR es:[edi],al
  41d2bc:	mov    ebx,0xc8e37df7
  41d2c1:	repz push esi
  41d2c3:	inc    ebx
  41d2c4:	popa   
  41d2c5:	fwait
  41d2c6:	in     eax,dx
  41d2c7:	call   0x3b78:0x5b235d8e
  41d2ce:	bound  ecx,QWORD PTR [edi-0x6444019f]
  41d2d4:	sub    eax,0x2a443db1
  41d2d9:	and    ax,0xfba7
  41d2dd:	clc    
  41d2de:	out    dx,eax
  41d2df:	test   BYTE PTR [ebx+0x24],bh
  41d2e2:	mov    edx,0xcf009e45
  41d2e7:	(bad)  
  41d2e8:	out    0x91,eax
  41d2ea:	xor    dh,al
  41d2ec:	ret    0xd1e4
  41d2ef:	stos   DWORD PTR es:[edi],eax
  41d2f0:	jg     0x41d31d
  41d2f2:	(bad)  
  41d2f3:	jge    0x41d2c2
  41d2f5:	hlt    
  41d2f6:	rol    DWORD PTR [edx-0x4c5b1164],0x7d
  41d2fd:	repnz sar DWORD PTR [edx-0x50],1
  41d301:	or     eax,0x9abfdecd
  41d306:	scas   eax,DWORD PTR es:[edi]
  41d307:	loopne 0x41d2d1
  41d309:	dec    esi
  41d30a:	push   esp
  41d30b:	mov    bl,0xfb
  41d30d:	sbb    eax,0xbf62b1fc
  41d312:	arpl   WORD PTR [eax-0x54],ax
  41d315:	dec    edx
  41d316:	je     0x41d329
  41d318:	dec    ecx
  41d319:	mov    eax,0xb5b4c237
  41d31e:	ins    DWORD PTR es:[edi],dx
  41d31f:	outs   dx,DWORD PTR ds:[esi]
  41d320:	mov    ds:0xbe120773,eax
  41d325:	aas    
  41d326:	mov    dh,BYTE PTR [ebp+0x6]
  41d329:	retf   
  41d32a:	rcr    DWORD PTR fs:[esi],1
  41d32d:	push   0xffffffbf
  41d32f:	stos   DWORD PTR es:[edi],eax
  41d330:	dec    esi
  41d331:	popf   
  41d332:	adc    eax,0xe8835a9
  41d337:	xor    ecx,DWORD PTR [eax]
  41d339:	xchg   ebx,eax
  41d33a:	push   ds
  41d33b:	popa   
  41d33c:	popa   
  41d33d:	outs   dx,BYTE PTR ds:[esi]
  41d33e:	popf   
  41d33f:	sbb    edx,DWORD PTR [eax]
  41d341:	jns    0x41d38f
  41d343:	div    DWORD PTR ds:0x8c2b5bc1
  41d349:	aad    0x5d
  41d34b:	call   0xfccf:0xbc52cec7
  41d352:	mov    DWORD PTR [edx],eax
  41d354:	jg     0x41d33c
  41d356:	pop    esi
  41d357:	or     cl,bl
  41d359:	jmp    0x9745123a
  41d35e:	push   cs
  41d35f:	mov    eax,ds:0xd7022444
  41d364:	std    
  41d365:	mov    esi,0x3a21152e
  41d36a:	fadd   QWORD PTR [edx]
  41d36c:	dec    edx
  41d36d:	pop    ebp
  41d36e:	lahf   
  41d36f:	out    0xd4,eax
  41d371:	(bad)  
  41d372:	outs   dx,BYTE PTR ds:[esi]
  41d373:	push   esi
  41d374:	pop    ebp
  41d375:	pop    esp
  41d376:	mov    eax,edx
  41d378:	xor    ebx,ebx
  41d37a:	xchg   esp,eax
  41d37b:	or     eax,0xecdd3e6
  41d380:	or     bl,BYTE PTR [edi]
  41d382:	sub    edx,eax
  41d384:	shr    BYTE PTR [eax+0x28],0x7c
  41d388:	call   0xbdae:0xcf5d454e
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jnp    0x41d35d
  41d392:	sahf   
  41d393:	inc    ebp
  41d394:	ret    
  41d395:	adc    BYTE PTR [edx+edx*2],ah
  41d398:	or     al,BYTE PTR [edi+0x7ce0dd21]
  41d39e:	std    
  41d39f:	adc    eax,0x623f5231
  41d3a4:	out    dx,al
  41d3a5:	inc    BYTE PTR [esi-0x86b69f6]
  41d3ab:	jo     0x41d3ed
  41d3ad:	lods   al,BYTE PTR ds:[esi]
  41d3ae:	test   bl,cl
  41d3b0:	je     0x41d412
  41d3b2:	shl    BYTE PTR [edx-0x127b7ede],cl
  41d3b8:	mov    dh,0xf6
  41d3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3bb:	xchg   BYTE PTR [eax+0x6ce1dc88],dl
  41d3c1:	mov    WORD PTR [esi-0x410a429e],ss
  41d3c7:	call   0x32f9d341
  41d3cc:	pop    ecx
  41d3cd:	cmp    DWORD PTR [esi-0x1311827],ebx
  41d3d3:	push   ebx
  41d3d4:	mov    esp,DWORD PTR es:[esi]
  41d3d7:	mov    edx,0xf123e01
  41d3dc:	cmp    ah,dl
  41d3de:	inc    edi
  41d3df:	and    al,0x24
  41d3e1:	push   0xd048377
  41d3e6:	stc    
  41d3e7:	cmp    DWORD PTR [ebx],edi
  41d3e9:	adc    ah,cl
  41d3eb:	xchg   ebx,eax
  41d3ec:	push   edi
  41d3ed:	out    dx,al
  41d3ee:	imul   DWORD PTR [ebp-0x1b36849e]
  41d3f4:	xor    DWORD PTR [edi+0x5b3d2d74],esp
  41d3fa:	jns    0x41d3dd
  41d3fc:	lahf   
  41d3fd:	sbb    ecx,DWORD PTR ds:0x59e50f84
  41d403:	adc    al,0x30
  41d405:	mov    BYTE PTR [ebx-0x23a6bc98],dl
  41d40b:	aaa    
  41d40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40d:	fdiv   QWORD PTR [edx]
  41d40f:	fwait
  41d410:	mov    ebp,0xe737440b
  41d415:	inc    ecx
  41d416:	jmp    0x9408:0x7d88d487
  41d41d:	fmul   DWORD PTR [eax-0x161cd135]
  41d423:	call   0xcf60a118
  41d428:	adc    eax,0x8538a19
  41d42d:	enter  0x6eca,0x64
  41d431:	enter  0xe0e4,0xb7
  41d435:	(bad)  
  41d436:	leave  
  41d437:	dec    eax
  41d438:	aad    0xb
  41d43a:	mov    dh,0xf8
  41d43c:	push   eax
  41d43d:	fdivp  st(0),st
  41d43f:	sbb    esi,DWORD PTR [eax]
  41d441:	inc    eax
  41d442:	jge    0x41d43d
  41d444:	push   ecx
  41d445:	ins    DWORD PTR es:[edi],dx
  41d446:	xor    esi,DWORD PTR [eax]
  41d448:	sbb    ecx,DWORD PTR [ecx+ebp*2+0x4a]
  41d44c:	fwait
  41d44d:	sub    bh,bl
  41d44f:	cmp    ebx,esi
  41d451:	inc    eax
  41d452:	mov    ch,BYTE PTR ds:0xccb032bd
  41d458:	ja     0x41d451
  41d45a:	fist   DWORD PTR [esi+0x1d]
  41d45d:	mov    cl,0x7a
  41d45f:	ja     0x41d4b9
  41d461:	jnp    0x41d487
  41d463:	jb     0x41d482
  41d465:	push   ss
  41d466:	in     eax,dx
  41d467:	fidiv  WORD PTR [ebx+ecx*2-0x1ffda569]
  41d46e:	repnz fisttp WORD PTR [ebx-0x2591377d]
  41d475:	scas   al,BYTE PTR es:[edi]
  41d476:	dec    edx
  41d477:	fimul  WORD PTR [ecx+0x9]
  41d47a:	icebp  
  41d47b:	fstp   TBYTE PTR ds:0x809c8046
  41d481:	inc    esp
  41d482:	mov    eax,DWORD PTR [edx-0x7df1685f]
  41d488:	push   ebp
  41d489:	pop    edi
  41d48a:	mov    ah,0xd9
  41d48c:	call   0x59ef:0xbf5b68a8
  41d493:	pop    eax
  41d494:	inc    ebp
  41d495:	retf   
  41d496:	xacquire xchg DWORD PTR [ebp+0x37],edx
  41d49a:	pop    eax
  41d49b:	das    
  41d49c:	mov    esi,0xe68ce0a3
  41d4a1:	outs   dx,DWORD PTR ds:[esi]
  41d4a2:	mov    al,ds:0xbf8a1781
  41d4a7:	outs   dx,DWORD PTR ds:[esi]
  41d4a8:	stc    
  41d4a9:	mov    esi,0x6cf76f62
  41d4ae:	popa   
  41d4af:	add    DWORD PTR [ecx-0xb],esp
  41d4b2:	iret   
  41d4b3:	jno    0x41d45e
  41d4b5:	sub    eax,0xc2bd236f
  41d4ba:	jno    0x41d537
  41d4bc:	pop    eax
  41d4bd:	in     eax,dx
  41d4be:	cmp    BYTE PTR [esi],dh
  41d4c0:	imul   ebp,DWORD PTR [ecx],0x790bd7c7
  41d4c6:	int    0x3e
  41d4c8:	inc    esp
  41d4c9:	push   cs
  41d4ca:	sbb    bl,BYTE PTR [ecx+0x5659eca7]
  41d4d0:	scas   al,BYTE PTR es:[edi]
  41d4d1:	jl     0x41d513
  41d4d3:	dec    esi
  41d4d4:	cmp    BYTE PTR [edi+0x75],bh
  41d4d7:	fcom   DWORD PTR [ebp+0x6522788d]
  41d4dd:	test   al,0xb7
  41d4df:	sbb    al,0x78
  41d4e1:	adc    DWORD PTR ds:0xe45898ae,esi
  41d4e7:	cmp    DWORD PTR [ecx+ecx*4-0x5b35a549],edx
  41d4ee:	ja     0x41d56b
  41d4f0:	daa    
  41d4f1:	mov    WORD PTR [edi+esi*8+0x78de19dd],cs
  41d4f8:	jo     0x41d524
  41d4fa:	push   0x83cdd44a
  41d4ff:	outs   dx,BYTE PTR ds:[esi]
  41d500:	ds mov bh,0x1a
  41d503:	push   0xffffffc9
  41d505:	push   esp
  41d506:	lods   eax,DWORD PTR ds:[esi]
  41d507:	mov    bh,0xf3
  41d509:	jns    0x41d499
  41d50b:	mov    dl,0xd5
  41d50d:	mov    al,ds:0xe7315cd8
  41d512:	mov    ds:0xd68afc7,eax
  41d517:	scas   al,BYTE PTR es:[edi]
  41d518:	stc    
  41d519:	(bad)  
  41d51a:	rol    DWORD PTR [edi+0x44],cl
  41d51d:	push   ds
  41d51e:	fimul  DWORD PTR [edx+ebp*8+0x4c]
  41d522:	das    
  41d523:	mov    gs:0x8c620de6,eax
  41d529:	mov    cl,0xc3
  41d52b:	mov    al,ds:0xbfd731d1
  41d530:	lds    esi,FWORD PTR [eax+ebx*8-0x2c]
  41d534:	ret    0x6b50
  41d537:	sbb    DWORD PTR [esi+0x5d],eax
  41d53a:	mov    ah,cl
  41d53c:	call   0xa71f21ee
  41d541:	jecxz  0x41d543
  41d543:	push   edx
  41d544:	jmp    0x4ad5796d
  41d549:	and    BYTE PTR [ecx],ch
  41d54b:	adc    DWORD PTR es:[ecx-0x7a],edx
  41d54f:	pop    edx
  41d550:	mov    edx,0xa444b7d6
  41d555:	jbe    0x41d532
  41d557:	or     bh,ch
  41d559:	in     eax,0xa5
  41d55b:	enter  0x56,0x3e
  41d55f:	or     eax,0xb93a2b25
  41d564:	in     al,0x56
  41d566:	bnd ret 
  41d568:	repnz mov eax,0x64f3e76d
  41d56e:	jg     0x41d5bb
  41d570:	push   0x4cd90635
  41d575:	jno    0xec437e08
  41d57b:	push   es
  41d57c:	push   ebp
  41d57d:	into   
  41d57e:	test   al,0x71
  41d580:	push   esp
  41d581:	and    edi,DWORD PTR [esi+0x4ec6d470]
  41d587:	mov    ebp,0x23a700b5
  41d58c:	icebp  
  41d58d:	loope  0x41d527
  41d58f:	inc    eax
  41d590:	or     al,0x1f
  41d592:	push   edi
  41d593:	sub    eax,0x4dcd4067
  41d598:	push   ds
  41d599:	daa    
  41d59a:	adc    al,0xc8
  41d59c:	nop
  41d59d:	jp     0x41d553
  41d59f:	loope  0x41d596
  41d5a1:	data16 mov al,ds:0x8061cc1e
  41d5a7:	rol    DWORD PTR [ebx+ebx*4+0x3b043778],0x54
  41d5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b0:	pop    esi
  41d5b1:	pop    eax
  41d5b2:	shr    DWORD PTR [esi+0x38839e62],0x33
  41d5b9:	stc    
  41d5ba:	addr16 jp 0x41d541
  41d5bd:	adc    BYTE PTR [edx-0x15ba6649],ch
  41d5c3:	push   esp
  41d5c4:	setnp  BYTE PTR [ecx-0x8469c5]
  41d5cb:	mov    bx,0x1da3
  41d5cf:	loopne 0x41d582
  41d5d1:	jg     0x41d5e2
  41d5d3:	outs   dx,DWORD PTR ds:[esi]
  41d5d4:	out    0x32,eax
  41d5d6:	mov    ch,0xd7
  41d5d8:	sbb    eax,0x777cf5f1
  41d5dd:	shl    DWORD PTR [edx-0x75],cl
  41d5e0:	jno    0x41d5f2
  41d5e2:	test   al,cl
  41d5e4:	mov    edi,DWORD PTR [ecx+0x44]
  41d5e7:	jmp    0xc58a:0xc1aa9d22
  41d5ee:	pop    es
  41d5ef:	add    bh,BYTE PTR [edi+0x1a]
  41d5f2:	push   ebx
  41d5f3:	and    al,0x65
  41d5f5:	cs push ss
  41d5f7:	cmp    eax,DWORD PTR [ebx-0x69]
  41d5fa:	mov    ah,0x8e
  41d5fc:	xchg   edi,eax
  41d5fd:	mov    edx,0x3fb9d5ae
  41d602:	adc    bl,ah
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	mov    esp,0x3dbff606
  41d60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d60b:	and    DWORD PTR [ebx-0x6b],0xebacc115
  41d612:	push   0xffffff95
  41d614:	icebp  
  41d615:	push   esi
  41d616:	sbb    ecx,DWORD PTR [ebp-0x33]
  41d619:	inc    edx
  41d61a:	fidiv  DWORD PTR [ebp-0x64]
  41d61d:	mov    ch,0xbf
  41d61f:	and    eax,ebp
  41d621:	xchg   ecx,eax
  41d622:	cmp    al,0xa0
  41d624:	loopne 0x41d602
  41d626:	mov    WORD PTR [edx-0x67],ds
  41d629:	mov    dh,0x78
  41d62b:	iret   
  41d62c:	dec    eax
  41d62d:	aad    0x90
  41d62f:	xor    ebp,DWORD PTR [esp+edi*2]
  41d632:	daa    
  41d633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d634:	in     eax,dx
  41d635:	mov    ebx,0xce096bf6
  41d63a:	pop    edi
  41d63b:	leave  
  41d63c:	sub    DWORD PTR [edx+0x4feac92],edx
  41d642:	and    ah,BYTE PTR [edi+0x37]
  41d645:	sbb    BYTE PTR [ebx-0x1],ah
  41d648:	in     eax,0xf3
  41d64a:	mov    DWORD PTR [edx-0x1e],eax
  41d64d:	loope  0x41d5e1
  41d64f:	xchg   DWORD PTR [eax-0x20],esi
  41d652:	mov    edi,gs
  41d654:	adc    al,0x4f
  41d656:	mov    ebx,0xb55f81cc
  41d65b:	ret    0x2197
  41d65e:	bound  eax,QWORD PTR [eax]
  41d660:	loop   0x41d697
  41d662:	call   0x3b8:0x6a8eeb4f
  41d669:	push   es
  41d66a:	daa    
  41d66b:	jbe    0x41d6d8
  41d66d:	pushf  
  41d66e:	aaa    
  41d66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d670:	jo     0x41d60e
  41d672:	dec    edx
  41d673:	push   ecx
  41d674:	inc    ebp
  41d675:	loop   0x41d6cb
  41d677:	sub    BYTE PTR [edi],0x76
  41d67a:	dec    edi
  41d67b:	inc    esp
  41d67c:	pop    eax
  41d67d:	out    0x5f,eax
  41d67f:	mov    ah,0xbd
  41d681:	(bad)  
  41d682:	push   edx
  41d683:	mov    dl,0xde
  41d685:	test   eax,0xc18a914
  41d68a:	cli    
  41d68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d68c:	inc    ebx
  41d68d:	push   ss
  41d68e:	sub    eax,0x25834867
  41d693:	into   
  41d694:	or     DWORD PTR [eax],edi
  41d696:	mov    WORD PTR [edi-0x56],?
  41d699:	pop    ebx
  41d69a:	leave  
  41d69b:	add    ecx,DWORD PTR [esi+0x1b]
  41d69e:	(bad)  [esi-0x6d]
  41d6a1:	mov    ds:0x1e34b5be,al
  41d6a6:	fidivr DWORD PTR [ecx+edi*4+0x5f]
  41d6aa:	popf   
  41d6ab:	repnz (bad) 
  41d6ad:	lods   al,BYTE PTR ds:[esi]
  41d6ae:	adc    al,0xb6
  41d6b0:	jge    0x41d6eb
  41d6b2:	les    ebp,FWORD PTR [edx+0x60]
  41d6b5:	mov    bh,0xd1
  41d6b7:	cmp    al,dl
  41d6b9:	cmp    BYTE PTR fs:[ebx-0x54],0xa9
  41d6be:	sub    edx,DWORD PTR [esi]
  41d6c0:	pop    ebp
  41d6c1:	inc    edx
  41d6c2:	and    al,0xb4
  41d6c4:	les    ebp,FWORD PTR [ecx-0x5b50c2e8]
  41d6ca:	inc    ebp
  41d6cb:	xor    BYTE PTR [edx+0x5d],ah
  41d6ce:	pusha  
  41d6cf:	xchg   ebx,eax
  41d6d0:	push   ecx
  41d6d1:	sbb    DWORD PTR [edx-0x1ff1f712],0x3a
  41d6d8:	xchg   ebx,eax
  41d6d9:	jmp    0x12f9:0xfd502467
  41d6e0:	pop    edx
  41d6e1:	inc    eax
  41d6e2:	add    ebx,0xfffffff1
  41d6e5:	sbb    al,0xb4
  41d6e7:	jecxz  0x41d695
  41d6e9:	and    BYTE PTR [edx+0x33a13127],ah
  41d6ef:	cmp    edi,DWORD PTR [edi-0x21e644c9]
  41d6f5:	fmul   DWORD PTR [ebx]
  41d6f7:	and    ecx,DWORD PTR [ecx-0x4f493305]
  41d6fd:	mov    eax,ds:0x73934220
  41d702:	test   BYTE PTR [esi+0x47f8bae1],dl
  41d708:	ds mov dl,0x38
  41d70b:	in     al,0x98
  41d70d:	imul   edi,DWORD PTR [edi+0xb3ad86f],0x5d
  41d714:	xchg   edx,eax
  41d715:	mov    eax,ds:0xaa9beb54
  41d71a:	imul   eax,DWORD PTR [eax+ecx*2-0x131630f9],0x32
  41d722:	sub    esi,DWORD PTR [eax+eiz*1-0x59]
  41d726:	xchg   BYTE PTR ds:0xcdb16d1b,ah
  41d72c:	aas    
  41d72d:	pop    esp
  41d72e:	jb     0x41d6fe
  41d730:	or     dl,dh
  41d732:	(bad)  
  41d733:	mov    dl,0x96
  41d735:	retf   
  41d736:	mov    ch,BYTE PTR [edi-0x7a1de5e]
  41d73c:	(bad)  
  41d73d:	lods   al,BYTE PTR ds:[esi]
  41d73e:	loopne 0x41d730
  41d740:	in     eax,0x96
  41d742:	push   esi
  41d743:	fidivr DWORD PTR [ecx+0x728f0c69]
  41d749:	mov    bh,0xe6
  41d74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74c:	xchg   edx,eax
  41d74d:	fld    DWORD PTR [ebp+0x68f138f6]
  41d753:	jl     0x41d6dd
  41d755:	inc    edx
  41d756:	and    al,0x45
  41d758:	xchg   edi,eax
  41d759:	push   edi
  41d75a:	mov    cl,0x75
  41d75c:	jg     0x41d758
  41d75e:	and    BYTE PTR [ebx+0x44],ch
  41d761:	jecxz  0x41d719
  41d763:	leave  
  41d764:	push   ebx
  41d765:	repnz xor ecx,DWORD PTR [edi-0x44b002cc]
  41d76c:	xchg   esi,eax
  41d76d:	add    BYTE PTR [esi+0x1ca12255],al
  41d773:	popf   
  41d774:	sbb    BYTE PTR [eax+0x55deba28],0x3f
  41d77b:	or     DWORD PTR [ecx],esp
  41d77d:	mov    WORD PTR [eax+ebp*2],fs
  41d780:	ins    BYTE PTR es:[edi],dx
  41d781:	push   0x38ec2ccb
  41d786:	lods   eax,DWORD PTR ds:[esi]
  41d787:	push   esp
  41d788:	sti    
  41d789:	mov    eax,ds:0x88f91e10
  41d78e:	mov    esi,0xdfd5b2a
  41d793:	movups XMMWORD PTR [esi],xmm5
  41d796:	not    al
  41d798:	mov    ecx,0x4d6a7c27
  41d79d:	mov    edx,0x6aef2584
  41d7a2:	clc    
  41d7a3:	scas   eax,DWORD PTR es:[edi]
  41d7a4:	jle    0x41d7c2
  41d7a6:	push   ss
  41d7a7:	xchg   ecx,eax
  41d7a8:	icebp  
  41d7a9:	dec    eax
  41d7aa:	adc    al,bh
  41d7ac:	pop    ss
  41d7ad:	push   edx
  41d7ae:	pusha  
  41d7af:	cmp    edi,eax
  41d7b1:	xor    edx,DWORD PTR [ecx]
  41d7b3:	rol    esi,1
  41d7b5:	les    edi,FWORD PTR [esi+0xe409c34]
  41d7bb:	(bad)  
  41d7bd:	xchg   esi,eax
  41d7be:	xor    al,0xcd
  41d7c0:	test   eax,0x24d02e21
  41d7c5:	leave  
  41d7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7c7:	sub    BYTE PTR [edx-0x78],cl
  41d7ca:	sub    eax,esp
  41d7cc:	out    0xd,al
  41d7ce:	mov    esp,0x872d88e7
  41d7d3:	dec    edx
  41d7d4:	inc    eax
  41d7d5:	adc    bh,bl
  41d7d7:	psubq  mm2,QWORD PTR [ecx]
  41d7da:	dec    ebp
  41d7db:	mov    ebx,0xbf5c250c
  41d7e0:	xchg   DWORD PTR [edi-0x73],ebx
  41d7e3:	cs es push 0x4427ed1
  41d7ea:	rcl    ebx,cl
  41d7ec:	inc    esp
  41d7ee:	je     0x41d84d
  41d7f0:	(bad)  
  41d7f1:	mov    al,0x4f
  41d7f3:	(bad)
  41d7f6:	inc    esi
  41d7f7:	dec    edi
  41d7f8:	mov    ch,0x89
  41d7fa:	mov    ah,BYTE PTR [ecx-0x3f]
  41d7fd:	mov    ebp,DWORD PTR [edi-0x18e2f41e]
  41d803:	jl     0x41d802
  41d805:	cmc    
  41d806:	ja     0x41d7d9
  41d808:	popf   
  41d809:	test   cl,0xb6
  41d80c:	jnp    0x41d883
  41d80e:	(bad)
  41d811:	enter  0x7218,0x27
  41d815:	sub    BYTE PTR [ecx-0x17],0x42
  41d819:	dec    ebx
  41d81a:	bnd ja 0x41d89a
  41d81d:	fwait
  41d81e:	jmp    0xf612c324
  41d823:	bound  esi,QWORD PTR [esi+0xd]
  41d826:	stc    
  41d827:	pop    ebx
  41d828:	out    dx,al
  41d829:	sub    DWORD PTR [esi+eiz*8-0x67be28e6],esi
  41d830:	rol    DWORD PTR [edi+0x67],1
  41d833:	inc    ebp
  41d834:	push   ss
  41d835:	dec    esi
  41d836:	push   ss
  41d837:	add    esi,DWORD PTR [edx]
  41d839:	stos   DWORD PTR es:[edi],eax
  41d83a:	stos   DWORD PTR es:[edi],eax
  41d83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d83c:	jle    0x41d88c
  41d83e:	add    eax,DWORD PTR [ecx-0x296a2643]
  41d844:	lods   eax,DWORD PTR ds:[esi]
  41d845:	dec    esp
  41d846:	fcmove st,st(3)
  41d848:	(bad)  
  41d84a:	xor    BYTE PTR [edx+eiz*8-0x54b6720b],bl
  41d851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d852:	push   ebx
  41d853:	in     al,0x21
  41d855:	jns    0x41d8bf
  41d857:	test   al,0x4a
  41d859:	int    0x79
  41d85b:	std    
  41d85c:	jl     0x41d88e
  41d85e:	sub    DWORD PTR [edi],ebp
  41d860:	xor    eax,0x87c06dd0
  41d865:	add    dh,BYTE PTR [eax-0x19]
  41d868:	inc    ecx
  41d869:	popa   
  41d86a:	in     al,dx
  41d86b:	retf   
  41d86c:	pop    eax
  41d86d:	dec    ebp
  41d86e:	popf   
  41d86f:	lahf   
  41d870:	jmp    0x41d862
  41d872:	fsubr  st,st(4)
  41d874:	loope  0x41d828
  41d876:	xor    eax,0x976b2636
  41d87b:	shr    DWORD PTR [esi-0x62],0xb
  41d87f:	fs stos DWORD PTR es:[edi],eax
  41d881:	or     esp,DWORD PTR [ebp-0x75]
  41d884:	mov    al,0xee
  41d886:	fadd   DWORD PTR [edi+esi*1-0x6b]
  41d88a:	push   ss
  41d88b:	fwait
  41d88c:	packssdw mm3,QWORD PTR [ecx-0x50]
  41d890:	adc    ebx,DWORD PTR [ecx+0x4b8bc8d2]
  41d896:	aam    0x8e
  41d898:	fldcw  WORD PTR [ebp+0x1f]
  41d89b:	dec    esp
  41d89c:	pop    es
  41d89d:	dec    esi
  41d89e:	xchg   ebx,eax
  41d89f:	mov    esi,0x953dd1e
  41d8a4:	scas   eax,DWORD PTR es:[edi]
  41d8a5:	pop    ebp
  41d8a6:	pop    ecx
  41d8a7:	les    ebx,FWORD PTR [ebp-0x475e3d4f]
  41d8ad:	int    0x7
  41d8af:	mov    esp,0xe803932b
  41d8b4:	test   al,0xf4
  41d8b6:	fstp   QWORD PTR ds:0x43869356
  41d8bc:	leave  
  41d8bd:	inc    ecx
  41d8be:	dec    edx
  41d8bf:	lock ror BYTE PTR [ecx],0xf4
  41d8c3:	sub    ebx,ebx
  41d8c5:	mov    BYTE PTR cs:[edx],bl
  41d8c8:	fwait
  41d8c9:	xchg   edi,eax
  41d8ca:	je     0x41d8ed
  41d8cc:	jnp    0x41d918
  41d8ce:	pop    esi
  41d8cf:	popf   
  41d8d0:	push   ebx
  41d8d1:	div    DWORD PTR [ecx-0x74f086c1]
  41d8d7:	inc    ecx
  41d8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8da:	adc    dl,BYTE PTR [ebx+0x7]
  41d8dd:	loop   0x41d8da
  41d8df:	mov    edx,0x12488b65
  41d8e4:	and    eax,0xb2e7936
  41d8e9:	fmul   DWORD PTR [edi]
  41d8eb:	aad    0x7f
  41d8ed:	(bad)  
  41d8ee:	in     al,dx
  41d8ef:	clc    
  41d8f0:	fadd   QWORD PTR [edx]
  41d8f2:	ss popf 
  41d8f4:	jle    0x41d877
  41d8f6:	ficomp DWORD PTR ds:0x6a7f707a
  41d8fc:	imul   edi,DWORD PTR [eax],0xdbf26251
  41d902:	cmp    esi,eax
  41d904:	and    BYTE PTR [ebx],0x89
  41d907:	cli    
  41d908:	jp     0x41d911
  41d90a:	sbb    BYTE PTR [ebp+ebp*1+0x6d7093b9],ah
  41d911:	sahf   
  41d912:	jg     0x41d92b
  41d914:	cmp    BYTE PTR [eax-0x699e9fd],ah
  41d91a:	ja     0x41d922
  41d91c:	xor    al,0xfd
  41d91e:	fcmovnbe st,st(5)
  41d920:	rcl    ebp,1
  41d922:	add    eax,0xd56b84b
  41d927:	xchg   edx,eax
  41d928:	arpl   WORD PTR gs:[edx+0x7c96865a],bx
  41d92f:	mov    bh,0xa3
  41d931:	pop    edx
  41d932:	push   cs
  41d933:	pop    ecx
  41d934:	addr16 inc eax
  41d936:	or     dh,BYTE PTR [eax+0x3a63e6dc]
  41d93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93d:	mov    bh,0x35
  41d93f:	xor    BYTE PTR [eax],ch
  41d941:	or     al,0x64
  41d943:	adc    esp,DWORD PTR [ebx+0x4f9f2c9f]
  41d949:	lds    esp,FWORD PTR [eax]
  41d94b:	mov    ah,0x2
  41d94d:	lods   al,BYTE PTR ds:[esi]
  41d94e:	rol    DWORD PTR [eax],0xa1
  41d951:	int    0xbb
  41d953:	xor    al,0x1d
  41d955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d956:	or     cl,BYTE PTR [edi]
  41d958:	das    
  41d959:	sti    
  41d95a:	xchg   edx,eax
  41d95b:	mov    WORD PTR [ebx],gs
  41d95d:	mov    ds,esi
  41d95f:	inc    ebp
  41d960:	enter  0x8f85,0x1e
  41d964:	add    ebp,edx
  41d966:	mov    ds:0xf8888dfa,eax
  41d96b:	call   0x5903:0x6e89ca61
  41d972:	pop    ecx
  41d973:	pop    ebp
  41d974:	and    bl,dl
  41d976:	xor    DWORD PTR [edx],0xd63f4a6d
  41d97c:	xchg   DWORD PTR [edx-0x16195c50],eax
  41d982:	cld    
  41d983:	out    0xce,eax
  41d985:	adc    eax,0xe13e8492
  41d98a:	xchg   esi,eax
  41d98b:	adc    al,0x18
  41d98d:	xchg   ecx,eax
  41d98e:	push   ds
  41d98f:	popa   
  41d990:	out    0xa5,eax
  41d992:	jb     0x41d974
  41d994:	je     0x41d931
  41d996:	push   ecx
  41d997:	cmp    BYTE PTR [edx],bl
  41d999:	mov    BYTE PTR [eax-0x10],bh
  41d99c:	(bad)  
  41d99d:	(bad)  
  41d99e:	jbe    0x41da08
  41d9a0:	pop    esi
  41d9a1:	std    
  41d9a2:	inc    ebp
  41d9a3:	or     BYTE PTR [ecx-0x1b],0xe3
  41d9a7:	fstp   QWORD PTR [edi-0x4d9c101c]
  41d9ad:	push   ebx
  41d9ae:	sub    ecx,DWORD PTR fs:[edx-0x80]
  41d9b2:	clc    
  41d9b3:	jo     0x41da1f
  41d9b5:	cmp    DWORD PTR [edi],eax
  41d9b7:	xor    DWORD PTR ds:0x4162cec7,ebx
  41d9bd:	outs   dx,BYTE PTR ds:[esi]
  41d9be:	mov    eax,DWORD PTR [ecx+0x732ccc1c]
  41d9c4:	xchg   ecx,eax
  41d9c5:	mov    eax,ds:0xb998d582
  41d9ca:	mov    al,0xec
  41d9cc:	ins    DWORD PTR es:[edi],dx
  41d9cd:	cwde   
  41d9ce:	mov    edi,0xafa87733
  41d9d3:	clc    
  41d9d4:	rol    BYTE PTR [ebx+0x7ebfcb76],1
  41d9da:	lods   eax,DWORD PTR ds:[esi]
  41d9db:	movaps XMMWORD PTR [ebx],xmm1
  41d9de:	sub    eax,0xeb374455
  41d9e3:	adc    al,BYTE PTR [esi+0x31]
  41d9e6:	(bad)  
  41d9e7:	xchg   edx,eax
  41d9e8:	lods   eax,DWORD PTR ds:[esi]
  41d9e9:	mov    ?,WORD PTR [edx+0x565c0168]
  41d9ef:	push   ss
  41d9f0:	mov    ch,0xe9
  41d9f2:	into   
  41d9f3:	daa    
  41d9f4:	lea    esi,[ecx]
  41d9f6:	repz pop edx
  41d9f8:	dec    edi
  41d9f9:	xchg   ebx,eax
  41d9fa:	push   ds
  41d9fb:	adc    ecx,DWORD PTR [edx]
  41d9fd:	or     ah,BYTE PTR [edx-0x2cd39cb7]
  41da03:	xchg   esi,eax
  41da04:	mov    DWORD PTR [esi+0xb],ebp
  41da07:	jmp    0x57702503
  41da0c:	inc    esp
  41da0d:	add    DWORD PTR [ebx+0x7293dc25],eax
  41da13:	push   ecx
  41da14:	inc    edi
  41da15:	jbe    0x41da20
  41da17:	ficom  WORD PTR [ebx-0x14c425a8]
  41da1d:	rcr    DWORD PTR [esi+edx*2+0x21],1
  41da21:	aas    
  41da22:	pop    ebp
  41da23:	imul   eax,DWORD PTR [ecx-0x78004d7a],0xa116ad20
  41da2d:	je     0x41d9e2
  41da2f:	dec    ebp
  41da30:	lahf   
  41da31:	pop    eax
  41da32:	les    eax,FWORD PTR [ebp-0x49]
  41da35:	sbb    BYTE PTR [ecx-0x71],ah
  41da38:	jbe    0x41d9ca
  41da3a:	push   cs
  41da3b:	cli    
  41da3c:	jne    0x41da70
  41da3e:	or     al,0x68
  41da40:	int3   
  41da41:	mov    DWORD PTR [edx],ebx
  41da43:	inc    edx
  41da44:	fiadd  WORD PTR [edi-0x5d]
  41da47:	or     esp,DWORD PTR [edi]
  41da49:	in     al,0xd6
  41da4b:	test   eax,0x792d51b5
  41da50:	loope  0x41d9d2
  41da52:	ins    BYTE PTR es:[edi],dx
  41da53:	inc    eax
  41da54:	stc    
  41da55:	or     ecx,DWORD PTR [esi]
  41da57:	aam    0x39
  41da59:	pop    es
  41da5a:	and    dl,BYTE PTR [ecx+0x33]
  41da5d:	pop    ds
  41da5e:	sar    eax,1
  41da60:	add    bh,BYTE PTR [edx+0x7c]
  41da63:	mov    fs,WORD PTR [eax+0x1c7f3535]
  41da69:	adc    DWORD PTR [edi],esp
  41da6b:	ins    BYTE PTR es:[edi],dx
  41da6c:	adc    ecx,DWORD PTR [ebx+0x5c9ded43]
  41da72:	retf   0x16a3
  41da75:	ins    DWORD PTR es:[edi],dx
  41da76:	push   ebp
  41da77:	lods   eax,DWORD PTR ds:[esi]
  41da78:	stos   BYTE PTR es:[edi],al
  41da79:	call   0x5d6d:0xef2ba1ef
  41da80:	pop    edi
  41da81:	add    ebp,DWORD PTR [edi+edi*8]
  41da84:	repnz xchg ecx,eax
  41da86:	and    eax,0xef15e975
  41da8b:	pusha  
  41da8c:	lods   eax,DWORD PTR ds:[esi]
  41da8d:	test   BYTE PTR [ebx-0x16e4db94],0xd3
  41da94:	pop    edi
  41da95:	or     eax,0x707df1a1
  41da9a:	pop    dx
  41da9c:	pop    esi
  41da9d:	xlat   BYTE PTR ds:[ebx]
  41da9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da9f:	addr16 je 0x41da64
  41daa2:	jmp    0x9152:0x5c2a93be
  41daa9:	jnp    0x41db28
  41daab:	les    edi,FWORD PTR [edi-0x7c]
  41daae:	sub    esp,DWORD PTR [ebx+0x57]
  41dab1:	stc    
  41dab2:	and    al,0x6a
  41dab4:	mov    ch,0x7d
  41dab6:	(bad)  
  41dab7:	fs mov cl,0x44
  41daba:	add    bl,BYTE PTR [edx+0x21]
  41dabd:	mov    eax,0xeeee1a3d
  41dac2:	cdq    
  41dac3:	jae    0x41da9c
  41dac5:	leave  
  41dac6:	out    dx,eax
  41dac7:	gs js  0x41db43
  41daca:	xchg   BYTE PTR [esi-0x3a39b06f],cl
  41dad0:	cwde   
  41dad1:	jmp    0x7aaaaafe
  41dad6:	xor    al,0x7e
  41dad8:	adc    DWORD PTR [ecx],esp
  41dada:	fs jl  0x41da89
  41dadd:	sbb    ah,BYTE PTR [eax]
  41dadf:	sbb    bl,BYTE PTR [edx]
  41dae1:	lods   al,BYTE PTR ds:[esi]
  41dae2:	or     DWORD PTR [esi-0x5b19140e],edi
  41dae8:	leave  
  41dae9:	push   esp
  41daea:	cdq    
  41daeb:	and    esp,DWORD PTR [ebx-0x29]
  41daee:	fisub  WORD PTR [eax]
  41daf1:	adc    BYTE PTR [ecx-0xa03f9a7],0x1b
  41daf8:	ror    esi,1
  41dafa:	push   es
  41dafb:	push   es
  41dafc:	mov    bh,0xcf
  41dafe:	add    eax,0xac39e00d
  41db03:	pop    esi
  41db04:	push   edx
  41db05:	enter  0xc58a,0xf1
  41db09:	retf   0x4683
  41db0c:	add    eax,eax
  41db0e:	cwde   
  41db0f:	cmc    
  41db10:	and    dh,BYTE PTR [ebp-0x32]
  41db13:	sbb    esp,esi
  41db15:	out    0x91,al
  41db17:	inc    ebx
  41db18:	jo     0x41db4d
  41db1a:	pop    es
  41db1b:	jb     0x41db7a
  41db1d:	push   es
  41db1e:	and    al,0x1d
  41db20:	and    bh,cl
  41db22:	sbb    bl,BYTE PTR [esi]
  41db24:	fnstenv [edi]
  41db26:	or     DWORD PTR [ebx],ebx
  41db28:	aad    0x65
  41db2a:	leave  
  41db2b:	cmp    DWORD PTR [ecx-0xb956ac9],ecx
  41db31:	cmp    BYTE PTR [esi],bl
  41db33:	das    
  41db34:	mov    ds:0xa1c49a91,al
  41db39:	push   es
  41db3a:	inc    edi
  41db3b:	or     al,0x7b
  41db3d:	jns    0x41db7e
  41db3f:	test   eax,0xca61ce7c
  41db44:	mov    BYTE PTR [edx-0x5d],dl
  41db47:	mov    ds:0x9234f58b,eax
  41db4c:	shl    DWORD PTR [eax+0x12e25598],0xd8
  41db53:	test   BYTE PTR [ecx],al
  41db55:	je     0x41db19
  41db57:	jge    0x41db45
  41db59:	jmp    0x41db08
  41db5b:	test   eax,0x23d43db3
  41db60:	iret   
  41db61:	rcl    eax,1
  41db63:	mov    ds:0xd852facd,eax
  41db68:	mov    eax,0x22a3adb9
  41db6d:	adc    BYTE PTR [esp+esi*8+0x8],bh
  41db71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db72:	es sahf 
  41db74:	cdq    
  41db75:	hlt    
  41db76:	pop    esi
  41db77:	nop
  41db78:	aas    
  41db79:	sbb    al,BYTE PTR [ebx-0x6e97608e]
  41db7f:	inc    edx
  41db80:	outs   dx,DWORD PTR ds:[esi]
  41db81:	and    DWORD PTR [edi+0x362f5035],0x20dfac1e
  41db8b:	jnp    0x41dbd9
  41db8d:	push   esi
  41db8e:	sub    edi,DWORD PTR [eax+0x7d]
  41db91:	jle    0x41db67
  41db93:	inc    edi
  41db94:	fsub   QWORD PTR [ecx+0x26b46ae1]
  41db9a:	outs   dx,BYTE PTR ds:[esi]
  41db9b:	stos   DWORD PTR es:[edi],eax
  41db9c:	nop
  41db9d:	dec    ebp
  41db9e:	sbb    DWORD PTR [ecx+0x2eaf8fe3],0xfffffffa
  41dba5:	(bad)  
  41dba6:	dec    edx
  41dba7:	and    eax,0x9ed884cb
  41dbac:	push   ss
  41dbad:	sub    bl,BYTE PTR [eax+ebx*4+0x45]
  41dbb1:	pop    es
  41dbb2:	jge    0x41db51
  41dbb4:	cmp    al,0xa3
  41dbb6:	push   DWORD PTR [eax]
  41dbb8:	shl    DWORD PTR [esi-0x10],cl
  41dbbb:	jle    0x41db79
  41dbbd:	(bad)  
  41dbbe:	fwait
  41dbbf:	in     eax,0xe6
  41dbc1:	lods   al,BYTE PTR ds:[esi]
  41dbc2:	cmp    eax,0x77ff7e28
  41dbc7:	fmul   QWORD PTR [ebp-0xc]
  41dbca:	pop    ss
  41dbcb:	add    ah,dh
  41dbcd:	mov    ch,0x53
  41dbcf:	gs scas al,BYTE PTR es:[edi]
  41dbd1:	sbb    al,BYTE PTR [ebp-0x25]
  41dbd4:	adc    BYTE PTR [edi+0x37],0x28
  41dbd8:	inc    BYTE PTR [ebx+0x66]
  41dbdb:	cmp    BYTE PTR [ecx-0x6c],cl
  41dbde:	jbe    0x41dc1c
  41dbe0:	mov    ss,WORD PTR [eax]
  41dbe2:	cmp    dl,BYTE PTR [eax+0x2c]
  41dbe5:	(bad)  
  41dbe6:	adc    al,0xd8
  41dbe8:	neg    al
  41dbea:	rcl    BYTE PTR [esi+0x39],0xa
  41dbee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbef:	inc    edx
  41dbf0:	cmc    
  41dbf1:	mov    ecx,0x5e14752f
  41dbf6:	gs popa 
  41dbf8:	pop    ecx
  41dbf9:	loopne 0x41dc52
  41dbfb:	and    eax,0x9dc563b9
  41dc00:	jge    0x41dbf7
  41dc02:	cli    
  41dc03:	mov    edi,0x378beba6
  41dc08:	scas   eax,DWORD PTR es:[edi]
  41dc09:	fiadd  DWORD PTR [esi+0x2]
  41dc0c:	outs   dx,DWORD PTR ds:[esi]
  41dc0d:	ja     0x41dbd0
  41dc0f:	pop    es
  41dc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc11:	je     0x41db99
  41dc13:	adc    esi,DWORD PTR [esi-0x44aa06e]
  41dc19:	imul   edi,DWORD PTR [eax],0xffffffae
  41dc1c:	push   ds
  41dc1d:	add    BYTE PTR [edx+0x6],ah
  41dc20:	retf   
  41dc21:	mov    ebp,0xacd8e66
  41dc26:	add    al,0xcd
  41dc28:	pop    esp
  41dc29:	mov    dh,0xeb
  41dc2b:	or     eax,0x8567b215
  41dc30:	das    
  41dc31:	lods   al,BYTE PTR ds:[esi]
  41dc32:	push   edx
  41dc33:	adc    al,0x3e
  41dc35:	xchg   edi,eax
  41dc36:	inc    eax
  41dc37:	lds    ebx,FWORD PTR [esi+0x3513b32b]
  41dc3d:	ja     0x41dbfb
  41dc3f:	int3   
  41dc40:	inc    esi
  41dc41:	sub    ch,al
  41dc43:	movhps QWORD PTR [edx+0x479dabe7],xmm6
  41dc4a:	gs cmp esi,edi
  41dc4d:	jg     0x41dc3f
  41dc4f:	mov    cl,0x6
  41dc51:	ins    BYTE PTR es:[edi],dx
  41dc52:	cld    
  41dc53:	mov    edi,0x6defbd86
  41dc58:	mov    ah,ch
  41dc5a:	das    
  41dc5b:	push   0x49bbe6a2
  41dc60:	gs je  0x41dc42
  41dc63:	jne    0x41dbf4
  41dc65:	cmp    bl,dh
  41dc67:	rcr    DWORD PTR [edx-0x12],cl
  41dc6a:	pop    edx
  41dc6b:	cmc    
  41dc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc6d:	scas   eax,DWORD PTR es:[edi]
  41dc6e:	lock lock lock cmp ch,BYTE PTR [esi]
  41dc73:	add    ecx,esi
  41dc75:	xor    al,0xa4
  41dc77:	out    0x4b,al
  41dc79:	push   edi
  41dc7a:	pop    ebp
  41dc7b:	inc    esi
  41dc7c:	jns    0x41dca8
  41dc7e:	int3   
  41dc7f:	xlat   BYTE PTR fs:[ebx]
  41dc81:	jle    0x41dcef
  41dc83:	imul   esp,DWORD PTR [eax],0xf451fefd
  41dc89:	adc    ch,al
  41dc8b:	sub    BYTE PTR [edx-0x51dd7cdd],al
  41dc91:	scas   al,BYTE PTR es:[edi]
  41dc92:	xor    edx,edx
  41dc94:	adc    DWORD PTR [edi-0x392fe168],ebx
  41dc9a:	push   esp
  41dc9b:	jecxz  0x41dc48
  41dc9d:	jge    0x41dcb6
  41dc9f:	out    dx,eax
  41dca0:	adc    al,0x82
  41dca2:	jg     0x41dca0
  41dca4:	out    0x39,al
  41dca6:	leave  
  41dca7:	dec    ecx
  41dca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca9:	mov    ?,esi
  41dcab:	int    0x7e
  41dcad:	(bad)  
  41dcae:	sbb    DWORD PTR [esp+edi*4-0x4c],eax
  41dcb2:	sub    al,0x6c
  41dcb4:	lock or al,BYTE PTR [ecx-0x518f90ac]
  41dcbb:	and    bl,ah
  41dcbd:	and    dh,ch
  41dcbf:	lahf   
  41dcc0:	outs   dx,BYTE PTR ds:[esi]
  41dcc1:	outs   dx,BYTE PTR ds:[esi]
  41dcc2:	fnstsw WORD PTR [edi+esi*4-0x15]
  41dcc6:	fnsave [ecx-0x2491dc75]
  41dccc:	add    ah,BYTE PTR [ebp+0x4f75b06f]
  41dcd2:	and    edi,eax
  41dcd4:	inc    edx
  41dcd5:	or     bh,BYTE PTR [edi+0xd140cc6]
  41dcdb:	adc    dh,BYTE PTR [edi+esi*8-0x3b68079f]
  41dce2:	mov    ebx,0x4002aa3
  41dce7:	mov    dl,BYTE PTR [edx]
  41dce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcea:	iret   
  41dceb:	(bad)  
  41dcec:	fistp  WORD PTR [eax-0x3d]
  41dcef:	sbb    BYTE PTR [ebp-0xf9d4ed6],0x1f
  41dcf6:	mov    eax,ds:0x9bc8a715
  41dcfb:	call   0x3743:0x1ef1491d
  41dd02:	mov    al,ds:0x15b5790a
  41dd07:	fild   QWORD PTR [eax+0x7237f6f7]
  41dd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd0e:	fwait
  41dd0f:	and    ebx,DWORD PTR cs:0xc4ec58d7
  41dd16:	jo     0x41dd25
  41dd18:	push   ebx
  41dd19:	or     ebp,edx
  41dd1b:	fscale 
  41dd1d:	(bad)  
  41dd1e:	repnz inc esp
  41dd20:	lods   eax,DWORD PTR ds:[esi]
  41dd21:	mov    ds:0x9029bf2d,eax
  41dd26:	xchg   edx,eax
  41dd27:	(bad)  
  41dd28:	cli    
  41dd29:	cdq    
  41dd2a:	out    dx,al
  41dd2b:	cdq    
  41dd2c:	xlat   BYTE PTR ds:[ebx]
  41dd2d:	ins    BYTE PTR es:[edi],dx
  41dd2e:	(bad)  
  41dd2f:	stc    
  41dd30:	cdq    
  41dd31:	cmp    BYTE PTR ds:0xc9c5759a,bh
  41dd37:	adc    al,0x97
  41dd39:	sub    DWORD PTR [ebp+0x5d],edx
  41dd3c:	lods   al,BYTE PTR ds:[esi]
  41dd3d:	mov    bh,0xec
  41dd3f:	int3   
  41dd40:	sbb    DWORD PTR [ecx],eax
  41dd42:	retf   
  41dd43:	jle    0x41dd58
  41dd45:	(bad)  
  41dd46:	call   0xf5ecac07
  41dd4b:	clc    
  41dd4c:	loopne 0x41dda8
  41dd4e:	pusha  
  41dd4f:	test   BYTE PTR [ecx],al
  41dd51:	jecxz  0x41dd8a
  41dd53:	jo     0x41dd3c
  41dd55:	das    
  41dd56:	mov    WORD PTR [eax-0x72],fs
  41dd59:	lds    ecx,FWORD PTR [esi]
  41dd5b:	(bad)  
  41dd5c:	ja     0x41dd23
  41dd5e:	add    edx,DWORD PTR [esi-0x15e6ab75]
  41dd64:	xor    DWORD PTR [esi],ecx
  41dd66:	call   0xba18:0x89fb3320
  41dd6d:	scas   al,BYTE PTR es:[edi]
  41dd6e:	jmp    0xba7e3944
  41dd73:	xchg   edi,eax
  41dd74:	enter  0xb949,0x16
  41dd78:	adc    eax,0x4e261485
  41dd7d:	xor    ecx,DWORD PTR [esi-0x4f]
  41dd80:	mov    esp,edx
  41dd82:	loope  0x41ddcf
  41dd84:	mov    bh,0x4a
  41dd86:	es (bad) 
  41dd88:	mov    ecx,0x531ae0e
  41dd8d:	ja     0x41dd39
  41dd8f:	dec    esi
  41dd90:	std    
  41dd91:	adc    BYTE PTR ds:0xe264b3cb,cl
  41dd97:	call   0x3760a362
  41dd9c:	mov    edi,0x10c8a650
  41dda1:	jae    0x41ddd0
  41dda3:	inc    esp
  41dda4:	nop
  41dda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda6:	pop    esi
  41dda7:	xlat   BYTE PTR ds:[ebx]
  41dda8:	sub    al,0x68
  41ddaa:	mov    dl,BYTE PTR [edi-0x7e]
  41ddad:	jmp    0xf67d3439
  41ddb2:	pop    ebx
  41ddb3:	ror    bl,0x8
  41ddb6:	push   0x2a58ccee
  41ddbb:	jb     0x41de27
  41ddbd:	push   0x6e1708c6
  41ddc2:	rcl    BYTE PTR [ebx-0x6e],0xe1
  41ddc6:	sbb    BYTE PTR [eax],al
  41ddc8:	out    0xfb,eax
  41ddca:	inc    esi
  41ddcb:	dec    esi
  41ddcc:	mov    ebx,ecx
  41ddce:	jnp    0x41dd9f
  41ddd0:	add    DWORD PTR [edx],eax
  41ddd2:	sbb    eax,0xa4ff4cff
  41ddd7:	sbb    ecx,DWORD PTR [eax]
  41ddd9:	fdiv   DWORD PTR ds:0x6ad28d59
  41dddf:	mov    al,0x9b
  41dde1:	pop    edi
  41dde2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dde3:	pop    ss
  41dde4:	sti    
  41dde5:	push   ds
  41dde6:	arpl   WORD PTR [edx],sp
  41dde8:	adc    BYTE PTR [edi+0x6c],dh
  41ddeb:	popa   
  41ddec:	sbb    cl,al
  41ddee:	adc    eax,0xac926e2a
  41ddf3:	aad    0xa4
  41ddf5:	push   edx
  41ddf6:	cmp    al,0xcb
  41ddf8:	into   
  41ddf9:	js     0x41ddd5
  41ddfb:	xchg   esi,eax
  41ddfc:	dec    ecx
  41ddfd:	push   ebp
  41ddfe:	jle    0x41ddbb
  41de00:	add    bh,BYTE PTR [ebx-0x5a3bd778]
  41de06:	mov    esi,ecx
  41de08:	loop   0x41ddbd
  41de0a:	xchg   ebp,eax
  41de0b:	cdq    
  41de0c:	addr16 mov dh,0x98
  41de0f:	shl    BYTE PTR [ecx+0xbb98391],0xe5
  41de16:	and    eax,0x5f8e9022
  41de1b:	repnz pop ebx
  41de1d:	imul   ebp,DWORD PTR [ecx-0x1ca102b4],0xffffffff
  41de24:	and    bh,BYTE PTR [ecx-0x5aa91bf8]
  41de2a:	xchg   edi,eax
  41de2b:	dec    ebx
  41de2c:	test   DWORD PTR [esi],eax
  41de2e:	les    ebx,FWORD PTR [edi-0x5d024dc9]
  41de34:	out    0xc1,eax
  41de36:	jle    0x41dea0
  41de38:	cmp    BYTE PTR [eax+0xcf95fd5],ah
  41de3e:	inc    esi
  41de3f:	lods   eax,DWORD PTR ds:[esi]
  41de40:	cdq    
  41de41:	enter  0x255c,0x1
  41de45:	loop   0x41de23
  41de47:	pop    es
  41de48:	pusha  
  41de49:	enter  0x2213,0xa2
  41de4d:	scas   al,BYTE PTR es:[edi]
  41de4e:	pop    es
  41de4f:	in     al,0x2d
  41de51:	mov    cl,BYTE PTR [ebx+0x1d]
  41de54:	stos   DWORD PTR es:[edi],eax
  41de55:	push   esi
  41de56:	es push ecx
  41de58:	pop    ebx
  41de59:	sahf   
  41de5a:	sbb    edx,DWORD PTR [esi+edi*2+0x493c525]
  41de61:	ficom  WORD PTR [eax]
  41de63:	inc    ebp
  41de64:	mov    al,ds:0x828aa243
  41de69:	xchg   esp,eax
  41de6a:	jo     0x41de75
  41de6c:	adc    dh,cl
  41de6e:	(bad)  
  41de6f:	cli    
  41de70:	adc    ebp,DWORD PTR cs:[eax]
  41de73:	add    edx,DWORD PTR [ebp+0x79d976f9]
  41de79:	push   edi
  41de7a:	jo     0x41debb
  41de7c:	ret    0x5375
  41de7f:	pop    ss
  41de80:	inc    esi
  41de81:	inc    ebx
  41de82:	repnz fsubr DWORD PTR [edi+0x5d022644]
  41de89:	sub    dl,BYTE PTR [ebp-0x1b]
  41de8c:	mov    BYTE PTR [ebx-0x4],ch
  41de8f:	out    dx,al
  41de90:	fld    QWORD PTR [ebx-0x4a85aad7]
  41de96:	into   
  41de97:	and    eax,0x6cb144a2
  41de9c:	mov    ds:0xe8f875e5,eax
  41dea1:	test   eax,0x1a017578
  41dea6:	push   ds
  41dea7:	mov    ecx,0xe810cd53
  41deac:	imul   esi,edx,0x8348c799
  41deb2:	lds    ebx,FWORD PTR [eax+eiz*2+0x31789b8a]
  41deb9:	adc    cl,BYTE PTR [ebx]
  41debb:	push   0xffffffd3
  41debd:	mov    WORD PTR [edx-0x1f],?
  41dec0:	adc    DWORD PTR [ecx-0x40],edi
  41dec3:	push   0x91e91033
  41dec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec9:	sub    al,BYTE PTR [esi]
  41decb:	retf   
  41decc:	inc    eax
  41decd:	ins    DWORD PTR es:[edi],dx
  41dece:	mov    bl,0x67
  41ded0:	push   ecx
  41ded1:	adc    ebx,DWORD PTR [ebx]
  41ded3:	in     eax,dx
  41ded4:	sbb    esi,DWORD PTR [edi+eax*1]
  41ded7:	in     al,dx
  41ded8:	lock adc ch,BYTE PTR [ecx+eax*1]
  41dedc:	icebp  
  41dedd:	jbe    0x41dee8
  41dedf:	add    eax,0x9dc2d693
  41dee4:	and    DWORD PTR [edi+0x17fa68de],0x4f
  41deeb:	outs   dx,BYTE PTR ds:[esi]
  41deec:	popf   
  41deed:	ret    
  41deee:	sbb    esi,ebx
  41def0:	imul   ecx,edx,0x1dda88fc
  41def6:	push   0xcaed3c23
  41defb:	adc    BYTE PTR [edi+0x2],dh
  41defe:	mov    esp,0xceffdba2
  41df03:	jge    0x41df42
  41df05:	leave  
  41df06:	jg     0x41df4b
  41df08:	and    eax,0xdddf0933
  41df0d:	in     al,dx
  41df0e:	in     al,0xc9
  41df10:	nop
  41df11:	mov    cl,0xd6
  41df13:	or     DWORD PTR ds:0x557192f1,0xfffffffb
  41df1b:	pop    ebx
  41df1c:	pop    esi
  41df1d:	push   0xe591ae8f
  41df22:	arpl   WORD PTR [edi+0x36f90897],cx
  41df28:	arpl   WORD PTR [eax],ax
  41df2a:	icebp  
  41df2b:	or     bh,al
  41df2d:	mov    ah,0xb4
  41df2f:	sbb    ch,dh
  41df31:	stc    
  41df32:	outs   dx,BYTE PTR ds:[esi]
  41df33:	cmp    DWORD PTR [edi],0x11c8fabf
  41df39:	stos   BYTE PTR es:[edi],al
  41df3a:	fisubr DWORD PTR [eax-0x506954b1]
  41df40:	ficomp WORD PTR [edi]
  41df42:	data16 sbb al,BYTE PTR [edx-0x180925e1]
  41df49:	add    bl,BYTE PTR [edx-0x8]
  41df4c:	cmc    
  41df4d:	scas   eax,DWORD PTR es:[edi]
  41df4e:	out    dx,eax
  41df4f:	test   eax,0x75a11048
  41df54:	xchg   ebx,eax
  41df55:	rcr    DWORD PTR [edi-0x2237fa25],0xa7
  41df5c:	mov    eax,ds:0xb0f5ef2d
  41df61:	ja     0x41def7
  41df63:	les    esp,FWORD PTR [esi]
  41df65:	mov    esp,0x2043a638
  41df6a:	aam    0x9b
  41df6c:	and    eax,eax
  41df6e:	and    al,0xee
  41df70:	fimul  DWORD PTR [edx]
  41df72:	js     0x41dfb5
  41df74:	xchg   BYTE PTR [edi+0x3a],bl
  41df77:	adc    cl,BYTE PTR [ecx-0x54]
  41df7a:	adc    eax,0xe2ae64e5
  41df7f:	mov    DWORD PTR [esi],ecx
  41df81:	out    0xd7,al
  41df83:	repnz gs (bad) 
  41df86:	xchg   esi,eax
  41df87:	(bad)  
  41df89:	arpl   WORD PTR [edx+ebx*2-0x161c639e],si
  41df90:	pop    es
  41df91:	mov    eax,0xd6006b4
  41df96:	pushf  
  41df97:	xchg   BYTE PTR [ebx],dh
  41df99:	aam    0xf6
  41df9b:	popf   
  41df9c:	push   cs
  41df9d:	inc    ebp
  41df9e:	retf   0xe27e
  41dfa1:	dec    eax
  41dfa2:	fadd   QWORD PTR [esi]
  41dfa4:	imul   esi,DWORD PTR [edx],0x136cad20
  41dfaa:	test   eax,0x9f1acae4
  41dfaf:	in     al,0x0
  41dfb1:	cmp    DWORD PTR [ebx],ebx
  41dfb3:	xchg   esp,eax
  41dfb4:	out    dx,al
  41dfb5:	scas   eax,DWORD PTR es:[edi]
  41dfb6:	and    BYTE PTR [ecx],dh
  41dfb8:	push   edx
  41dfb9:	enter  0x386d,0xac
  41dfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfbe:	mov    al,0xb9
  41dfc0:	and    BYTE PTR [ecx+0x26cfbc18],al
  41dfc6:	xor    ebp,DWORD PTR ds:0xa634f497
  41dfcc:	lods   al,BYTE PTR ds:[esi]
  41dfcd:	ja     0x41dfe9
  41dfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd0:	mov    DWORD PTR [ecx+esi*2+0x6ad5d54e],edi
  41dfd7:	int3   
  41dfd8:	xor    eax,0xb3ba8dab
  41dfdd:	fisubr DWORD PTR [esi]
  41dfdf:	pop    edx
  41dfe0:	xlat   BYTE PTR ds:[ebx]
  41dfe1:	mov    bh,0x67
  41dfe3:	clc    
  41dfe4:	or     eax,ebp
  41dfe6:	sbb    DWORD PTR [esi+eax*8],0x7dc45697
  41dfed:	pop    ebp
  41dfee:	cmp    DWORD PTR [ebx+0x29],esi
  41dff1:	sub    ebp,edi
  41dff3:	add    eax,0x40a3acb8
  41dff8:	cmp    BYTE PTR [ebx-0x39cee85c],0x89
  41dfff:	lds    ecx,FWORD PTR [ecx+0x48]
  41e002:	mov    ds:0x2e424213,al
  41e007:	sub    esi,edi
  41e009:	jge    0x41e01d
  41e00b:	pop    ebp
  41e00c:	gs daa 
  41e00e:	stos   DWORD PTR es:[edi],eax
  41e00f:	lock nop
  41e011:	addr16 add esp,ebp
  41e014:	pop    edx
  41e015:	sub    bh,bl
  41e017:	scas   eax,DWORD PTR es:[edi]
  41e018:	int    0xe3
  41e01a:	xchg   esp,eax
  41e01b:	mov    ebx,0x73af3cb5
  41e020:	add    eax,edi
  41e022:	bound  ebp,QWORD PTR [eax]
  41e024:	loope  0x41e097
  41e026:	mov    ebp,0x7dafcf28
  41e02b:	xor    DWORD PTR [eax-0x5c10b685],esp
  41e031:	sub    BYTE PTR [ecx-0x10bc872b],bh
  41e037:	mov    BYTE PTR [bx+si],bh
  41e03a:	or     eax,DWORD PTR [esi+ebp*2-0xd5dbdda]
  41e041:	pop    edi
  41e042:	fwait
  41e043:	pop    ds
  41e044:	fiadd  WORD PTR [ebp+0x34]
  41e047:	cmp    edi,esi
  41e049:	push   eax
  41e04a:	inc    eax
  41e04b:	retf   0x7953
  41e04e:	sbb    al,0x6
  41e050:	rcl    DWORD PTR [ecx],1
  41e052:	push   cs
  41e053:	scas   al,BYTE PTR es:[edi]
  41e054:	(bad)  
  41e055:	enter  0xc43d,0xce
  41e059:	mov    edx,0x6dca6d13
  41e05e:	pusha  
  41e05f:	sub    BYTE PTR [edx],cl
  41e061:	mov    ebx,0xf254e0c7
  41e066:	xor    al,0x5
  41e068:	retf   
  41e069:	(bad)  
  41e06a:	mov    dh,0x5b
  41e06c:	popa   
  41e06d:	addr16 push ebp
  41e06f:	inc    esi
  41e070:	repz mov cl,0x27
  41e073:	mov    ecx,0xd1422ace
  41e078:	mov    al,0x82
  41e07a:	cmp    al,0xc7
  41e07c:	pop    esp
  41e07d:	(bad)  
  41e07e:	out    dx,al
  41e07f:	popa   
  41e080:	sub    eax,0xd5a3b38a
  41e085:	jmp    0x41e0b9
  41e087:	sbb    eax,0xf7bb874a
  41e08c:	push   0x4a25f6cf
  41e091:	or     bh,ch
  41e093:	inc    ebx
  41e094:	pushf  
  41e095:	mov    ebx,0x8b53588a
  41e09a:	mov    ds:0x8883020b,eax
  41e09f:	push   ss
  41e0a0:	or     dh,BYTE PTR [edx+0xe]
  41e0a3:	sub    eax,0x66738ac9
  41e0a8:	loop   0x41e09d
  41e0aa:	daa    
  41e0ab:	pop    ds
  41e0ac:	dec    ebx
  41e0ad:	push   edi
  41e0ae:	xor    DWORD PTR [edx],ecx
  41e0b0:	cmp    DWORD PTR [edi-0x668d436a],esp
  41e0b6:	jg     0x41e098
  41e0b8:	add    ebp,edi
  41e0ba:	xchg   bh,dh
  41e0bc:	inc    ebp
  41e0bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0be:	(bad)
  41e0c1:	fsubr  QWORD PTR [eax]
  41e0c3:	add    DWORD PTR [esi],edx
  41e0c5:	sbb    eax,0x9f547650
  41e0ca:	push   0xfffffff1
  41e0cc:	loopne 0x41e132
  41e0ce:	sar    BYTE PTR [ebx],cl
  41e0d0:	mov    bl,0x3
  41e0d2:	(bad)  
  41e0d3:	iret   
  41e0d4:	jo     0x41e088
  41e0d6:	or     dl,BYTE PTR ss:[esp+ebx*1+0x21]
  41e0db:	mov    cl,al
  41e0dd:	push   edi
  41e0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0df:	jnp    0x41e0d0
  41e0e1:	and    DWORD PTR [edi-0x52],0x18895a67
  41e0e8:	sahf   
  41e0e9:	pop    ss
  41e0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0eb:	add    edi,DWORD PTR [edx+0x58361308]
  41e0f1:	jo     0x41e137
  41e0f3:	rol    DWORD PTR [edi-0x7],1
  41e0f6:	cmp    BYTE PTR [esi-0x9],dh
  41e0f9:	mov    ah,0xb
  41e0fb:	xor    BYTE PTR [esi-0x29],0xe2
  41e0ff:	adc    eax,0x16527aa
  41e104:	push   cs
  41e105:	push   eax
  41e106:	add    eax,0x24bd3fb
  41e10b:	out    0xfa,eax
  41e10d:	jl     0x41e14d
  41e10f:	loop   0x41e18e
  41e111:	fsub   QWORD PTR [eax-0x361669d9]
  41e117:	int3   
  41e118:	dec    esp
  41e119:	or     al,0xe1
  41e11b:	inc    ebx
  41e11c:	and    eax,0x9a6eb253
  41e121:	mov    edx,0xd4a6cd62
  41e126:	dec    ebp
  41e127:	sub    ch,BYTE PTR [edx+0x254720c9]
  41e12d:	out    0x2c,al
  41e12f:	sub    al,0x8f
  41e131:	cmp    BYTE PTR [ebp+0x73],0x29
  41e135:	mov    cl,0xe9
  41e138:	icebp  
  41e139:	jae    0x41e11d
  41e13b:	sub    eax,0xb8bfd8fe
  41e140:	stos   BYTE PTR es:[edi],al
  41e141:	inc    ebx
  41e142:	in     eax,dx
  41e143:	stos   DWORD PTR es:[edi],eax
  41e144:	scas   al,BYTE PTR es:[edi]
  41e145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e146:	data16 (bad) 
  41e148:	stc    
  41e149:	loop   0x41e12c
  41e14b:	sbb    eax,0x1ef31971
  41e150:	dec    ebx
  41e151:	ror    DWORD PTR [ecx-0x3f],0xae
  41e155:	xor    esp,DWORD PTR [ecx-0x4937efb4]
  41e15b:	cmp    eax,0xc322dd0a
  41e160:	btc    DWORD PTR [esi-0x3ca00a18],edi
  41e167:	cmp    al,0x40
  41e169:	mov    WORD PTR [ecx+eiz*2-0x5a],?
  41e16d:	hlt    
  41e16e:	jg     0x41e1df
  41e170:	mul    DWORD PTR ds:0x12352b2f
  41e176:	pop    ecx
  41e177:	jae    0x41e102
  41e179:	push   edi
  41e17a:	or     eax,0xda728929
  41e17f:	adc    al,al
  41e181:	xchg   ecx,eax
  41e182:	xchg   edx,eax
  41e183:	icebp  
  41e184:	and    BYTE PTR [ebp+0x48fa6b97],0x83
  41e18b:	pop    esp
  41e18c:	clc    
  41e18d:	mov    cl,dh
  41e18f:	xchg   edi,eax
  41e190:	dec    ebx
  41e191:	or     ebp,edi
  41e193:	dec    ebx
  41e194:	adc    edi,edi
  41e196:	cmp    ah,BYTE PTR [ecx+ebp*8]
  41e199:	(bad)  
  41e19a:	push   0xffffffa2
  41e19c:	push   ebp
  41e19d:	cmp    dl,ah
  41e19f:	lods   eax,DWORD PTR ds:[esi]
  41e1a0:	jnp    0x41e17f
  41e1a2:	sbb    eax,0xfc7905fa
  41e1a7:	data16 jnp 0x41e1db
  41e1aa:	xlat   BYTE PTR ds:[ebx]
  41e1ab:	inc    ecx
  41e1ac:	dec    eax
  41e1ad:	xlat   BYTE PTR ds:[ebx]
  41e1ae:	jne    0x41e1f6
  41e1b0:	rol    BYTE PTR [edx+0x6780b216],cl
  41e1b6:	pop    edx
  41e1b7:	outs   dx,DWORD PTR ds:[esi]
  41e1b8:	fsub   DWORD PTR [ebx+0x0]
  41e1bb:	adc    al,0xb4
  41e1bd:	test   BYTE PTR [ebp-0x76],dl
  41e1c0:	push   esi
  41e1c1:	into   
  41e1c2:	push   ecx
  41e1c3:	pop    es
  41e1c4:	and    eax,ebp
  41e1c6:	adc    BYTE PTR [edi+0xc985f17],bh
  41e1cc:	xor    al,BYTE PTR [ecx]
  41e1ce:	pop    ecx
  41e1cf:	sbb    eax,0x21506367
  41e1d4:	ins    DWORD PTR es:[edi],dx
  41e1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d6:	pop    esp
  41e1d7:	mov    esp,0xf9db0b76
  41e1dc:	dec    ecx
  41e1dd:	(bad)  
  41e1de:	mov    cl,0xdb
  41e1e0:	jne    0xdc6070a6
  41e1e6:	inc    edx
  41e1e7:	gs cwde 
  41e1e9:	push   ecx
  41e1ea:	push   edx
  41e1eb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41e1ed:	dec    edx
  41e1ee:	dec    esp
  41e1ef:	lahf   
  41e1f0:	and    al,0x1
  41e1f2:	pushf  
  41e1f3:	leave  
  41e1f4:	outs   dx,DWORD PTR ds:[esi]
  41e1f5:	xchg   edx,eax
  41e1f6:	call   0x5ab:0x24cbb43
  41e1fd:	test   BYTE PTR [edi],al
  41e1ff:	imul   ebp,edi,0x31
  41e202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e203:	mov    al,ds:0xe3410db2
  41e208:	lds    esi,FWORD PTR [ebx+0xa17732c]
  41e20e:	cs ret 0xb159
  41e212:	int3   
  41e213:	adc    DWORD PTR [ebx],0x574f6bcb
  41e219:	sub    bh,BYTE PTR [edi+edi*2]
  41e21c:	nop
  41e21d:	or     BYTE PTR [ecx+0x8],al
  41e220:	adc    cl,dl
  41e222:	or     DWORD PTR [ebp-0x4fa9e92f],edx
  41e228:	(bad)  
  41e229:	sar    DWORD PTR [ebx],1
  41e22b:	push   ebp
  41e22c:	pop    ss
  41e22d:	neg    BYTE PTR [edi]
  41e22f:	mov    bl,0xd8
  41e231:	sub    DWORD PTR [ebx+0x403228e4],esi
  41e237:	int    0xf3
  41e239:	rcl    BYTE PTR [ecx-0x21],cl
  41e23c:	jp     0x41e26f
  41e23e:	(bad)  
  41e23f:	push   0x51
  41e241:	mov    al,0x86
  41e243:	imul   ebx,ebp,0x3ba868e6
  41e249:	sbb    eax,0xa348cfee
  41e24e:	adc    eax,DWORD PTR [edi-0x29]
  41e251:	xor    eax,0x7ba0bfce
  41e256:	push   0x79f69fcb
  41e25b:	jne    0x41e1f5
  41e25d:	jbe    0x41e2c8
  41e25f:	mov    ds:0xdc61b399,al
  41e264:	push   esi
  41e265:	test   al,0x5e
  41e267:	mov    ebp,0xadf70458
  41e26c:	dec    ebp
  41e26d:	cmp    DWORD PTR [esi+0x7d],ebp
  41e270:	jmp    0x41e270
  41e272:	addr16 out 0x53,eax
  41e275:	add    BYTE PTR [edx+0xcc13079],dh
  41e27b:	cmovl  edi,DWORD PTR ds:0xfaacc77f
  41e282:	lea    esi,[ebx+ecx*4-0x5e69821a]
  41e289:	xor    al,0xdf
  41e28b:	cmp    al,0x1a
  41e28d:	push   cs
  41e28e:	aad    0x25
  41e290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e291:	mov    es,WORD PTR [ecx]
  41e293:	mov    esp,0x19d1e4f
  41e298:	outs   dx,DWORD PTR ds:[esi]
  41e299:	fst    QWORD PTR [ebx+0x2f419cbd]
  41e29f:	stos   BYTE PTR es:[edi],al
  41e2a0:	je     0x41e234
  41e2a2:	jo     0x41e2e9
  41e2a4:	pop    esp
  41e2a5:	pop    ds
  41e2a6:	cmp    al,0xad
  41e2a8:	call   0x93b6:0x4cb6bd70
  41e2af:	pop    ecx
  41e2b0:	and    bh,bl
  41e2b2:	fucomip st,st(4)
  41e2b4:	inc    ebx
  41e2b5:	sub    BYTE PTR [edi-0x7d],0xb3
  41e2b9:	fstp   QWORD PTR [eax]
  41e2bb:	cmp    eax,0x14985da8
  41e2c0:	popf   
  41e2c1:	pop    ebx
  41e2c2:	push   0x61
  41e2c4:	outs   dx,DWORD PTR ds:[esi]
  41e2c5:	push   esi
  41e2c6:	sahf   
  41e2c7:	fcomp  DWORD PTR [ecx-0x67c4f8da]
  41e2cd:	add    eax,0x734fb51f
  41e2d2:	and    al,0x15
  41e2d4:	mov    dh,0x22
  41e2d6:	xchg   DWORD PTR [esi],edi
  41e2d8:	pop    ebp
  41e2d9:	loope  0x41e28f
  41e2db:	dec    ebp
  41e2dc:	mov    BYTE PTR [ebx+0x781ae8e9],bl
  41e2e2:	jmp    0x41e2bc
  41e2e4:	sub    bh,bl
  41e2e6:	jmp    DWORD PTR [ecx+0x76cbbeb]
  41e2ec:	ss out 0xb,eax
  41e2ef:	fcomp  QWORD PTR [edi]
  41e2f1:	dec    edi
  41e2f2:	xchg   ebp,eax
  41e2f3:	and    cl,cl
  41e2f5:	xchg   edi,eax
  41e2f6:	add    dh,BYTE PTR [eax-0x26]
  41e2f9:	xchg   edx,eax
  41e2fa:	sbb    ch,BYTE PTR [ecx-0x1a5d7191]
  41e300:	hlt    
  41e301:	mov    BYTE PTR [edi+0x5d],cl
  41e304:	(bad)  
  41e305:	push   ecx
  41e306:	dec    esp
  41e307:	adc    eax,0x1b43d980
  41e30c:	fnstcw WORD PTR [esi]
  41e30e:	add    eax,0xe7b42593
  41e313:	push   ebx
  41e314:	jb     0x41e2ba
  41e316:	imul   eax,DWORD PTR [ecx+0x62],0x52
  41e31a:	xchg   esi,eax
  41e31b:	jb     0x41e35e
  41e31d:	out    0x98,al
  41e31f:	mov    bh,0xb4
  41e321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e322:	(bad)  
  41e324:	lahf   
  41e325:	outs   dx,DWORD PTR ds:[esi]
  41e326:	enter  0x3098,0x47
  41e32a:	xor    al,0x60
  41e32c:	outs   dx,DWORD PTR ds:[esi]
  41e32d:	mov    ch,0x8a
  41e32f:	out    0xf8,eax
  41e331:	cmp    BYTE PTR [edi+0x5e0aa638],0x7f
  41e338:	xchg   esp,eax
  41e339:	ss dec esi
  41e33b:	mov    edi,0xb7c14b1d
  41e340:	jge    0x41e342
  41e342:	and    ah,al
  41e344:	or     eax,edi
  41e346:	lods   al,BYTE PTR ds:[esi]
  41e347:	mov    dh,BYTE PTR cs:[ebx+0x37]
  41e34b:	test   BYTE PTR [eax],0x36
  41e34e:	add    ch,ah
  41e350:	mov    dh,dl
  41e352:	(bad)  
  41e353:	in     eax,dx
  41e354:	in     eax,dx
  41e355:	test   eax,0x57ff2b5c
  41e35a:	iret   
  41e35b:	cdq    
  41e35c:	push   0xe94660f
  41e361:	fcom   QWORD PTR [edx]
  41e363:	hlt    
  41e364:	inc    ebp
  41e365:	scas   eax,DWORD PTR es:[edi]
  41e366:	in     eax,0x6a
  41e368:	popa   
  41e369:	(bad)
  41e36c:	pop    edx
  41e36d:	mov    ebp,0x3d94efbf
  41e372:	mov    esp,0x71c6050
  41e377:	fimul  DWORD PTR [esp+esi*4]
  41e37a:	mov    esi,0xb0484b99
  41e37f:	pop    es
  41e380:	fist   DWORD PTR [esi-0x7d4de9f4]
  41e386:	sbb    bh,BYTE PTR [ebx]
  41e388:	cmp    eax,DWORD PTR [edi]
  41e38a:	pop    ss
  41e38b:	fwait
  41e38c:	sbb    ch,dh
  41e38e:	ror    DWORD PTR ds:0xd874,0xa9
  41e394:	(bad)  
  41e395:	out    0x85,al
  41e397:	bound  edi,QWORD PTR [ebx+eax*2+0x700ee81a]
  41e39e:	push   edx
  41e39f:	rol    BYTE PTR [ebx-0x25481c51],cl
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	pop    esi
  41e3a7:	(bad)  
  41e3a8:	xor    eax,0xf0c4b4b0
  41e3ad:	mov    al,ds:0xffb29b40
  41e3b2:	sbb    al,0x3
  41e3b4:	frstor [ecx]
  41e3b6:	xor    DWORD PTR [eax],edi
  41e3b8:	mov    ds:0x280cebef,al
  41e3bd:	adc    cl,dl
  41e3bf:	mov    ah,0x98
  41e3c1:	fdivr  st,st(5)
  41e3c3:	inc    eax
  41e3c4:	or     eax,DWORD PTR [edx-0x1bbf8275]
  41e3ca:	push   0xffffffea
  41e3cc:	pop    eax
  41e3cd:	(bad)  
  41e3ce:	loope  0x41e3cb
  41e3d0:	rol    DWORD PTR [esi],cl
  41e3d2:	repnz or BYTE PTR [eax],ah
  41e3d5:	call   0xfdba:0xb9ba2b93
  41e3dc:	retf   0x5e46
  41e3df:	faddp  st(2),st
  41e3e1:	arpl   WORD PTR [ebx+0xbed5e2a],ax
  41e3e7:	mov    eax,0xdb995d83
  41e3ec:	fcomp  st(6)
  41e3ee:	xchg   al,ch
  41e3f0:	push   esp
  41e3f1:	mov    ds:0xd7ef142e,eax
  41e3f6:	sbb    edx,DWORD PTR [ebx-0x48]
  41e3f9:	arpl   WORD PTR [ecx-0x2489142f],cx
  41e3ff:	fistp  DWORD PTR [ebx+0x34]
  41e402:	test   al,al
  41e404:	popf   
  41e405:	xor    BYTE PTR [edx+0x62],bh
  41e408:	aam    0x6b
  41e40a:	fsubr  st(6),st
  41e40c:	or     bl,BYTE PTR [esi-0x35]
  41e40f:	push   esp
  41e410:	gs ret 
  41e412:	in     eax,dx
  41e413:	xor    eax,0xa5513921
  41e418:	test   eax,0xe65adc31
  41e41d:	ret    
  41e41e:	or     ebp,DWORD PTR [ecx]
  41e420:	fdiv   st,st(7)
  41e422:	iret   
  41e423:	dec    edx
  41e424:	out    0x5f,al
  41e426:	mul    edi
  41e428:	sub    DWORD PTR [ebp+0x5f],edi
  41e42b:	(bad)  
  41e42d:	popf   
  41e42e:	mov    eax,0x9565426f
  41e433:	pop    esi
  41e434:	push   esi
  41e435:	xchg   edx,eax
  41e436:	dec    ebp
  41e437:	mov    ah,0x47
  41e439:	push   edx
  41e43a:	jp     0x41e44d
  41e43c:	addr16 (bad) 
  41e43f:	push   esp
  41e440:	push   ss
  41e441:	leave  
  41e442:	pop    esp
  41e443:	iret   
  41e444:	jae    0x41e4ab
  41e446:	mov    dl,0x7
  41e448:	sub    BYTE PTR [ecx+edx*1-0x19],al
  41e44c:	test   cl,ah
  41e44e:	and    al,0x4f
  41e450:	mov    bh,0x8c
  41e452:	adc    ebx,DWORD PTR [ecx+0x35]
  41e455:	pop    esp
  41e456:	mov    ds:0x4ef520f,al
  41e45b:	pop    ss
  41e45c:	push   eax
  41e45d:	pusha  
  41e45e:	push   0x6b29ce65
  41e463:	retf   0xa847
  41e466:	push   esi
  41e467:	sub    bh,BYTE PTR [esi+esi*2+0x55]
  41e46b:	imul   ebp,DWORD PTR [ecx],0x614c29df
  41e471:	lock repnz hlt 
  41e474:	(bad)  
  41e475:	jp     0x41e468
  41e477:	pushf  
  41e478:	mov    dl,0x81
  41e47a:	pop    ebx
  41e47b:	nop
  41e47c:	fdiv   QWORD PTR ds:[ebx+0x5f]
  41e480:	rcr    BYTE PTR [edi+0x14],1
  41e483:	xchg   ecx,eax
  41e484:	or     edx,DWORD PTR [esp+ebx*4+0x42]
  41e488:	fwait
  41e489:	pop    ebp
  41e48a:	sub    al,0xb2
  41e48c:	pushf  
  41e48d:	mov    bh,0xd3
  41e48f:	inc    ecx
  41e490:	jp     0x41e4a7
  41e492:	js     0x41e46b
  41e494:	call   DWORD PTR [ebx]
  41e496:	adc    ch,BYTE PTR [ecx+0x1c9215dd]
  41e49c:	adc    esp,ecx
  41e49e:	adc    dl,BYTE PTR [edx]
  41e4a0:	xchg   edx,eax
  41e4a1:	mov    bh,0x39
  41e4a3:	mov    ah,0xa7
  41e4a5:	fwait
  41e4a6:	das    
  41e4a7:	mov    al,ds:0x30661ffd
  41e4ac:	mov    ch,0x63
  41e4ae:	lock inc ebx
  41e4b0:	add    al,0x5f
  41e4b2:	jmp    0xb9b0:0xdc819a4c
  41e4b9:	push   cs
  41e4ba:	ds mov cl,0x4d
  41e4bd:	mov    edi,DWORD PTR [ecx+0x1c]
  41e4c0:	ror    WORD PTR [ebx-0x45],1
  41e4c4:	popf   
  41e4c5:	sub    ecx,DWORD PTR [edx]
  41e4c7:	fadd   DWORD PTR [ebx+0x63]
  41e4ca:	lea    ecx,[esi-0x46d92f07]
  41e4d0:	add    dh,ch
  41e4d2:	imul   ebp,DWORD PTR [ecx],0xca6d79c0
  41e4d8:	adc    eax,0x8970c409
  41e4dd:	das    
  41e4de:	mul    dl
  41e4e0:	(bad)  
  41e4e2:	jb     0x41e55b
  41e4e4:	repz scas al,BYTE PTR es:[edi]
  41e4e6:	fsub   DWORD PTR ds:[ebp-0x70]
  41e4ea:	dec    DWORD PTR [edx+0x6c]
  41e4ed:	repz and BYTE PTR [edi],bl
  41e4f0:	out    0x27,eax
  41e4f2:	cld    
  41e4f3:	mov    BYTE PTR [edx+0x51],ah
  41e4f6:	push   edx
  41e4f7:	jmp    0x4f8b:0x79ffba64
  41e4fe:	jae    0x41e541
  41e500:	stos   BYTE PTR es:[edi],al
  41e501:	mov    ds:0x1779f7ec,eax
  41e506:	adc    DWORD PTR [edx+0x36],edx
  41e509:	mov    ebp,0xa9b326b6
  41e50e:	lods   eax,DWORD PTR ds:[esi]
  41e50f:	mul    DWORD PTR [edi-0x7dd01092]
  41e515:	inc    ebx
  41e516:	out    0xa6,eax
  41e518:	(bad)  
  41e519:	mov    ebx,0xa5a6c8b8
  41e51e:	mov    fs,WORD PTR [edx+0x5e]
  41e521:	clc    
  41e522:	sbb    DWORD PTR [esi+0x10],ecx
  41e525:	outs   dx,DWORD PTR ds:[esi]
  41e526:	imul   esi,DWORD PTR [ebp-0x17],0xf4d2965e
  41e52d:	nop
  41e52e:	fild   DWORD PTR [edi]
  41e530:	push   edi
  41e531:	pop    ecx
  41e532:	pop    ds
  41e533:	mov    ah,dh
  41e535:	cmp    cl,BYTE PTR [edi]
  41e537:	loope  0x41e506
  41e539:	mov    eax,0x7fa035a8
  41e53e:	pop    es
  41e53f:	pop    edx
  41e540:	jnp    0x41e54a
  41e542:	sub    al,0xda
  41e544:	fistp  DWORD PTR [esi]
  41e546:	or     bl,BYTE PTR [eax]
  41e548:	(bad)  
  41e549:	sbb    edi,DWORD PTR [edx+0x24]
  41e54c:	nop    esi
  41e54f:	lea    ebp,[esp+edi*4-0x43]
  41e553:	inc    esp
  41e554:	xchg   esp,eax
  41e555:	jns    0x41e502
  41e557:	arpl   cx,dx
  41e559:	in     al,0x3c
  41e55b:	out    dx,al
  41e55c:	mov    eax,0x1af370b1
  41e561:	cmp    BYTE PTR [ebx+0x3b784a16],ah
  41e567:	mov    cl,0xab
  41e569:	stc    
  41e56a:	sub    eax,0x555003d
  41e56f:	push   ss
  41e570:	pop    ds
  41e571:	popf   
  41e572:	fiadd  WORD PTR [ebx]
  41e574:	mov    ch,0xf2
  41e576:	dec    ebp
  41e577:	(bad)  
  41e579:	push   ds
  41e57a:	adc    ebp,ebx
  41e57c:	lods   eax,DWORD PTR ds:[esi]
  41e57d:	push   es
  41e57e:	les    esp,FWORD PTR [ecx]
  41e580:	cmp    bh,dl
  41e582:	aas    
  41e583:	sbb    edx,eax
  41e585:	mov    fs,WORD PTR [eax-0x433985bc]
  41e58b:	icebp  
  41e58c:	ret    
  41e58d:	(bad)  
  41e58e:	popa   
  41e58f:	cmp    BYTE PTR [edx],dl
  41e591:	retf   0x77d2
  41e594:	push   ebx
  41e595:	pop    ebp
  41e596:	cli    
  41e597:	and    BYTE PTR [edi-0x5b],cl
  41e59a:	inc    ebx
  41e59b:	xchg   ebx,eax
  41e59c:	outs   dx,DWORD PTR ds:[esi]
  41e59d:	cmp    edi,esp
  41e59f:	fsubr  QWORD PTR [ebp+0x58]
  41e5a2:	ror    BYTE PTR [esp+edi*2],1
  41e5a5:	addr16 sub eax,0xc1eab349
  41e5ab:	push   edi
  41e5ac:	lods   eax,DWORD PTR ds:[esi]
  41e5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ae:	jnp    0x41e5a0
  41e5b0:	fisubr DWORD PTR [edi-0x21]
  41e5b3:	xchg   DWORD PTR [edx+eax*1],edx
  41e5b6:	sbb    edi,DWORD PTR [ecx+0xe]
  41e5b9:	mov    DWORD PTR [ebx-0x78ae5419],0xef4d3e13
  41e5c3:	enter  0xa5cc,0x41
  41e5c7:	lea    edi,[edx+0x54]
  41e5ca:	mov    ah,0x93
  41e5cc:	cs ins BYTE PTR es:[edi],dx
  41e5ce:	pop    ss
  41e5cf:	pop    esp
  41e5d0:	cmp    ebp,DWORD PTR [ebx+0x65]
  41e5d3:	adc    ecx,DWORD PTR [ebx-0x3e]
  41e5d6:	(bad)  
  41e5d7:	mov    cl,BYTE PTR ds:[bx+di-0x5d]
  41e5dc:	pop    ecx
  41e5dd:	ret    0x4a36
  41e5e0:	jno    0x41e5e4
  41e5e2:	push   ebp
  41e5e3:	gs jbe 0x41e599
  41e5e6:	mov    eax,0x271c7bce
  41e5eb:	adc    ebp,ebp
  41e5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5ee:	push   0x7f
  41e5f0:	jle    0x41e5bf
  41e5f2:	ret    0x7154
  41e5f5:	pop    ebx
  41e5f6:	shl    ebx,0x33
  41e5f9:	call   0x899cc8e5
  41e5fe:	js     0x41e61a
  41e600:	rol    BYTE PTR [edx-0x6bcae1f0],cl
  41e606:	or     BYTE PTR [eax+ecx*1],dl
  41e609:	stc    
  41e60a:	mov    eax,0xfeadd880
  41e60f:	fwait
  41e610:	mov    ecx,0x386ae47b
  41e615:	jno    0x41e5a3
  41e617:	shl    ebx,cl
  41e619:	pop    ebx
  41e61a:	js     0x41e60f
  41e61c:	pop    esp
  41e61d:	out    0xc7,eax
  41e61f:	lods   eax,DWORD PTR ds:[esi]
  41e620:	lock (bad) 
  41e622:	scas   eax,DWORD PTR es:[edi]
  41e623:	int3   
  41e624:	ror    DWORD PTR ds:0xc1a7e905,0xda
  41e62b:	out    dx,eax
  41e62c:	mov    ch,0x8f
  41e62e:	lds    edx,FWORD PTR [edi-0x7d]
  41e631:	mov    ch,dl
  41e633:	cwde   
  41e634:	retf   
  41e635:	and    bh,BYTE PTR [edx-0x2c73af00]
  41e63b:	sub    cl,BYTE PTR [ebx]
  41e63d:	lds    edi,FWORD PTR [ebp-0x6a]
  41e640:	cmp    ch,BYTE PTR [edx]
  41e642:	add    ebx,edx
  41e644:	jns    0x41e603
  41e646:	xchg   esp,eax
  41e647:	adc    ebp,DWORD PTR ds:0xc82e6991
  41e64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e64e:	iret   
  41e64f:	test   al,0x2a
  41e651:	mov    ds:0xf7f06771,eax
  41e656:	(bad)  
  41e657:	je     0x41e60a
  41e659:	sbb    eax,0xefeffe34
  41e65e:	cmp    ch,dl
  41e660:	inc    ecx
  41e661:	mov    al,ds:0xd30a5e0a
  41e666:	dec    esi
  41e667:	out    0x66,eax
  41e669:	xor    eax,0x7bc3145d
  41e66e:	sub    ch,BYTE PTR [esp+edi*4]
  41e671:	pop    esi
  41e672:	jnp    0x41e617
  41e674:	pop    ss
  41e675:	lock shl ecx,cl
  41e678:	fmul   QWORD PTR ds:0x310e348e
  41e67e:	mov    eax,0x87b29bd1
  41e683:	mov    al,0xfa
  41e685:	shr    BYTE PTR [ebx-0x16],cl
  41e688:	nop
  41e689:	fst    st(6)
  41e68b:	pop    ebp
  41e68c:	mov    ebx,0xca3a1cac
  41e691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e692:	pop    ecx
  41e693:	aad    0xbd
  41e695:	sbb    edi,edx
  41e697:	xor    bl,BYTE PTR [ebx+eax*1-0x4f]
  41e69b:	addr16 mov dh,0xb0
  41e69e:	dec    DWORD PTR [ebp-0x6f]
  41e6a1:	fstp   DWORD PTR [edx+0x2c]
  41e6a4:	retf   0x6d5b
  41e6a7:	pop    esi
  41e6a8:	cmc    
  41e6a9:	add    cl,bl
  41e6ab:	pop    ss
  41e6ac:	icebp  
  41e6ad:	adc    DWORD PTR ds:0xebfc1680,ecx
  41e6b3:	icebp  
  41e6b4:	(bad)  
  41e6b5:	fwait
  41e6b6:	popf   
  41e6b7:	aam    0x6b
  41e6b9:	out    dx,al
  41e6ba:	ds sti 
  41e6bc:	or     eax,0x53427e64
  41e6c1:	pop    ebp
  41e6c2:	mov    DWORD PTR [eax+0x1c5173e9],eax
  41e6c8:	les    ebp,FWORD PTR [edx+0x6d3c326e]
  41e6ce:	ins    DWORD PTR es:[edi],dx
  41e6cf:	push   edi
  41e6d0:	pop    ds
  41e6d1:	xchg   ecx,eax
  41e6d2:	mul    dl
  41e6d4:	and    DWORD PTR [edi-0x21f265],ebx
  41e6da:	xchg   esp,eax
  41e6db:	call   0x3de1:0x231fee62
  41e6e2:	or     dh,BYTE PTR [ecx]
  41e6e4:	ins    BYTE PTR es:[edi],dx
  41e6e5:	js     0x41e712
  41e6e7:	cs sahf 
  41e6e9:	rol    edx,0xf1
  41e6ec:	and    DWORD PTR [esi+eiz*4],0x29
  41e6f0:	jns    0x41e686
  41e6f2:	jge    0x41e71d
  41e6f4:	pop    ecx
  41e6f5:	jge    0x41e691
  41e6f7:	pop    edi
  41e6f8:	arpl   WORD PTR [esi-0x41],bp
  41e6fb:	popa   
  41e6fc:	loopne 0x41e6b2
  41e6fe:	pop    ebp
  41e6ff:	and    BYTE PTR [edi-0xb3a97c1],0x4f
  41e706:	sbb    eax,0xb2d9d260
  41e70b:	idiv   ch
  41e70d:	imul   eax,DWORD PTR [ecx+0x12],0xaf44d55a
  41e714:	inc    esi
  41e715:	pop    edi
  41e716:	push   edx
  41e717:	repnz sahf 
  41e719:	and    eax,0x796c0af8
  41e71e:	rol    DWORD PTR [ebp-0x70],1
  41e721:	je     0x41e734
  41e723:	adc    al,0x8e
  41e725:	mov    eax,ds:0x1ca7ecd0
  41e72a:	mov    ch,BYTE PTR [edi+0x60755ce6]
  41e730:	(bad)  
  41e731:	daa    
  41e732:	and    cl,BYTE PTR [edx-0x5d9940e2]
  41e738:	inc    ebp
  41e739:	frstor ds:0x68bb5726
  41e73f:	cmp    al,0xb2
  41e741:	popa   
  41e742:	and    eax,0x7f56520c
  41e747:	sub    eax,0x88e79569
  41e74c:	mov    eax,ds:0x4a8cee4d
  41e751:	jp     0x41e714
  41e753:	pop    ebx
  41e754:	gs in  eax,0xfe
  41e757:	and    eax,0xbc36595b
  41e75c:	iret   
  41e75d:	and    edi,eax
  41e75f:	and    dl,dl
  41e761:	mov    ah,0xba
  41e763:	add    DWORD PTR [esi],0xffffffa4
  41e766:	in     al,dx
  41e767:	leave  
  41e768:	jl     0x41e796
  41e76a:	jae    0x41e7bf
  41e76c:	and    ebx,DWORD PTR [edx]
  41e76e:	aas    
  41e76f:	gs pop ds
  41e771:	sub    ebx,DWORD PTR ds:0x7dec0c42
  41e777:	or     al,0xc
  41e779:	pop    eax
  41e77a:	lock mov eax,ds
  41e77d:	les    ecx,FWORD PTR [eax+ebx*2+0x70]
  41e781:	push   ds
  41e782:	xchg   ebx,eax
  41e783:	cmp    dh,0xb
  41e786:	xor    al,0xb1
  41e788:	pop    edi
  41e789:	mov    DWORD PTR [edi],ebx
  41e78b:	fdivr  DWORD PTR [esi+0x42]
  41e78e:	pop    esi
  41e78f:	ficomp DWORD PTR [ebp+ebx*8+0x4a]
  41e793:	(bad)  
  41e794:	in     eax,dx
  41e795:	cmp    DWORD PTR [edx+eiz*1+0x7c691ec3],ebx
  41e79c:	ror    DWORD PTR ds:0xdee4767c,cl
  41e7a2:	inc    edx
  41e7a3:	std    
  41e7a4:	lock cmp BYTE PTR [ebx+0xf],0x26
  41e7a9:	dec    edi
  41e7aa:	or     BYTE PTR gs:[ecx+0x0],ah
  41e7ae:	hlt    
  41e7af:	jecxz  0x41e748
  41e7b1:	push   ds
  41e7b2:	and    eax,0x2c687e54
  41e7b7:	or     ah,ch
  41e7b9:	mov    dh,bh
  41e7bb:	xchg   DWORD PTR [esi+ebp*2+0x58],edx
  41e7bf:	stos   DWORD PTR es:[edi],eax
  41e7c0:	mov    BYTE PTR [eax],0x6d
  41e7c3:	cmp    DWORD PTR [edx+0x2f],ebp
  41e7c6:	or     DWORD PTR [esi+0xa],edx
  41e7c9:	adc    eax,0xc6e0b9ce
  41e7ce:	pop    ss
  41e7cf:	pop    ebp
  41e7d0:	aam    0x24
  41e7d2:	stos   BYTE PTR es:[edi],al
  41e7d3:	repz or ebp,edi
  41e7d6:	mov    eax,ds:0x175606e3
  41e7db:	cdq    
  41e7dc:	push   0x3b
  41e7de:	mov    bh,0x9e
  41e7e0:	fnsave [eax+0x18]
  41e7e3:	dec    ecx
  41e7e4:	xchg   esi,eax
  41e7e5:	out    dx,eax
  41e7e6:	sub    eax,0x3f53dde1
  41e7eb:	leave  
  41e7ec:	pop    ds
  41e7ed:	and    esp,DWORD PTR [ecx+0x6f]
  41e7f0:	mov    bh,0x9b
  41e7f2:	jecxz  0x41e7ad
  41e7f4:	dec    edi
  41e7f5:	pop    es
  41e7f6:	sahf   
  41e7f7:	jo     0x41e7e8
  41e7f9:	lods   al,BYTE PTR ds:[esi]
  41e7fa:	sbb    DWORD PTR [ecx-0x6b6cd849],eax
  41e800:	js     0x41e7e1
  41e802:	mov    fs,WORD PTR [ecx]
  41e804:	add    eax,0xc90c15fa
  41e809:	dec    ebp
  41e80a:	pop    edi
  41e80b:	jnp    0x41e798
  41e80d:	push   esi
  41e80e:	sbb    BYTE PTR ds:0x1996fd7e,bl
  41e814:	mov    ah,0x99
  41e816:	mov    DWORD PTR [eax],ebp
  41e818:	xor    al,0xcb
  41e81a:	sub    DWORD PTR ss:[ecx+0x33],ecx
  41e81e:	dec    eax
  41e81f:	xchg   edx,eax
  41e820:	mov    ?,WORD PTR ss:[edi]
  41e823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e824:	jmp    0x41e87b
  41e826:	fmul   DWORD PTR [ecx+eax*8+0x4e]
  41e82a:	ffreep st(6)
  41e82c:	ds fwait
  41e82e:	jp     0x41e7b3
  41e830:	fnsave [ebx-0x33e4ff73]
  41e836:	out    dx,al
  41e837:	xchg   DWORD PTR [eax+0x2b],ebx
  41e83a:	jmp    0xf5d1df2e
  41e83f:	cld    
  41e840:	push   ebp
  41e841:	and    eax,0xc2b9d9e1
  41e846:	lds    esi,FWORD PTR [esi]
  41e848:	aad    0x47
  41e84a:	sbb    esi,DWORD PTR [eax+ebp*4-0x1]
  41e84e:	jno    0x41e82c
  41e850:	out    0x85,eax
  41e852:	scas   eax,DWORD PTR es:[edi]
  41e853:	mov    edx,0x65021dc
  41e858:	je     0x41e8b2
  41e85a:	mov    eax,0xbe23e0cc
  41e85f:	pop    ds
  41e860:	xlat   BYTE PTR ds:[ebx]
  41e861:	dec    edx
  41e862:	xor    al,0x53
  41e864:	pop    es
  41e865:	push   ecx
  41e866:	leave  
  41e867:	popa   
  41e868:	out    dx,eax
  41e869:	push   0xffffffd8
  41e86b:	add    eax,0xfc358b0d
  41e870:	aaa    
  41e871:	push   es
  41e872:	(bad)  
  41e873:	jno    0x41e845
  41e875:	push   eax
  41e876:	aam    0x27
  41e878:	push   eax
  41e879:	inc    esp
  41e87a:	mov    ebp,0x458e5eab
  41e87f:	mov    eax,ds:0x1a92fbb
  41e884:	pop    edx
  41e885:	repz push esp
  41e887:	add    eax,DWORD PTR [ecx]
  41e889:	bound  ebp,QWORD PTR [ecx+0x71ee6847]
  41e88f:	sub    edi,edi
  41e891:	and    BYTE PTR [ecx+0x64629c7f],dh
  41e897:	in     eax,0x64
  41e899:	add    ebx,ebp
  41e89b:	imul   edx,DWORD PTR [esi*2+0x2c32780b],0x34428526
  41e8a6:	jae    0x41e8fe
  41e8a8:	and    ecx,ebx
  41e8aa:	xor    eax,0xd6307fe2
  41e8af:	icebp  
  41e8b0:	arpl   bp,di
  41e8b2:	or     al,bh
  41e8b4:	faddp  st(7),st
  41e8b6:	mov    esp,edx
  41e8b8:	shl    dh,0xc3
  41e8bb:	jb     0x41e938
  41e8bd:	and    eax,DWORD PTR [edi+eiz*2]
  41e8c0:	cmp    al,0xf8
  41e8c2:	jmp    0x41e87f
  41e8c4:	(bad)  
  41e8c5:	loope  0x41e8cb
  41e8c7:	(bad)  
  41e8c9:	sbb    edi,DWORD PTR [eax+ebp*2-0x4e]
  41e8cd:	cmp    DWORD PTR ds:0x93d7ad45,edx
  41e8d3:	sub    BYTE PTR [edx+edi*4+0x40],dh
  41e8d7:	loope  0x41e92e
  41e8d9:	sbb    eax,0x7c166b8c
  41e8de:	xchg   ecx,eax
  41e8df:	stc    
  41e8e0:	pop    ecx
  41e8e1:	cmp    ecx,ebp
  41e8e3:	fucomi st,st(5)
  41e8e5:	fadd   DWORD PTR [esi]
  41e8e7:	mov    ecx,DWORD PTR [edx-0x1b94f9b7]
  41e8ed:	in     eax,dx
  41e8ee:	scas   al,BYTE PTR es:[edi]
  41e8ef:	daa    
  41e8f0:	rol    DWORD PTR [esi-0x6c],0x8f
  41e8f4:	or     bl,dh
  41e8f6:	fcom   QWORD PTR [eax-0x4a8863e4]
  41e8fc:	jbe    0x41e90c
  41e8fe:	lods   al,BYTE PTR ds:[esi]
  41e8ff:	jns    0x41e96d
  41e901:	adc    al,0xb3
  41e903:	dec    esi
  41e904:	call   0xe2cf:0x3b6ffa7c
  41e90b:	mov    ebx,0x756a8cda
  41e910:	lahf   
  41e911:	sub    al,0xf8
  41e913:	sbb    BYTE PTR [ebx],cl
  41e915:	aas    
  41e916:	cli    
  41e917:	lods   eax,DWORD PTR ds:[esi]
  41e918:	add    BYTE PTR [ebp+0x65],cl
  41e91b:	inc    esp
  41e91c:	(bad)  
  41e91e:	cmp    bl,BYTE PTR [ebx+0x6db05e4b]
  41e924:	fistp  WORD PTR [edi+0xc85cf8c]
  41e92a:	popa   
  41e92b:	xchg   edx,eax
  41e92c:	cmp    ah,ah
  41e92e:	div    DWORD PTR [ebx+0x5502f4e5]
  41e934:	xor    BYTE PTR [ecx+0x3461e222],0xff
  41e93b:	mov    ebp,0xb0a31c81
  41e940:	rcr    DWORD PTR ds:0x77c934be,cl
  41e946:	adc    bh,BYTE PTR [ebx]
  41e948:	sub    DWORD PTR [ecx],ebx
  41e94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94b:	fist   DWORD PTR [ebp+0x69034556]
  41e951:	outs   dx,BYTE PTR ds:[esi]
  41e952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e953:	fadd   st(4),st
  41e955:	in     eax,0xc0
  41e957:	js     0x41e90b
  41e959:	loopne 0x41e940
  41e95b:	test   eax,0xc428d361
  41e960:	xchg   edx,eax
  41e961:	jmp    0xf5d5af76
  41e966:	mov    al,0x28
  41e968:	nop
  41e969:	(bad)  
  41e96a:	arpl   WORD PTR [edi],cx
  41e96c:	adc    eax,0x4e02f10b
  41e971:	sub    edi,DWORD PTR [edi+0x5c]
  41e974:	(bad)  
  41e975:	adc    eax,DWORD PTR [esi-0x6e825090]
  41e97b:	(bad)  [esi-0x20]
  41e97e:	iret   
  41e97f:	dec    esp
  41e980:	dec    edi
  41e981:	shr    DWORD PTR [edi-0x5f21ce83],cl
  41e987:	sub    BYTE PTR [eax],al
  41e989:	mov    DWORD PTR [esp+ebp*4+0x79],0xd3136cc2
  41e991:	and    DWORD PTR [ebx-0x4f],eax
  41e994:	xlat   BYTE PTR ds:[ebx]
  41e995:	jns    0x41e997
  41e997:	aaa    
  41e998:	out    dx,al
  41e999:	inc    eax
  41e99a:	popa   
  41e99b:	fistp  WORD PTR [eax]
  41e99d:	mov    eax,ds:0xcf1eff50
  41e9a2:	inc    edi
  41e9a3:	add    BYTE PTR [esi+0x4c],cl
  41e9a6:	out    0x9b,eax
  41e9a8:	mov    esp,0xe1e1c07f
  41e9ad:	fnstenv [ecx-0x74f49d26]
  41e9b3:	and    edx,esp
  41e9b5:	fwait
  41e9b6:	add    esi,ebx
  41e9b8:	or     BYTE PTR [edx+0x1615f657],ah
  41e9be:	icebp  
  41e9bf:	mov    esi,edi
  41e9c1:	mov    cs,esp
  41e9c3:	inc    edi
  41e9c4:	in     eax,dx
  41e9c5:	inc    esi
  41e9c6:	rcl    bl,1
  41e9c8:	dec    ecx
  41e9c9:	stc    
  41e9ca:	add    bl,cl
  41e9cc:	call   0xae6d:0x563bd48b
  41e9d3:	mov    bl,0x1a
  41e9d5:	mov    bh,0xab
  41e9d7:	popa   
  41e9d8:	bound  ebp,QWORD PTR [edi+0x74a723d7]
  41e9de:	js     0x41ea38
  41e9e0:	cs or  al,0x13
  41e9e3:	add    al,0x8f
  41e9e5:	mov    edi,0x51e7ff4a
  41e9ea:	daa    
  41e9eb:	mov    edi,0x7d65a938
  41e9f0:	aad    0x57
  41e9f2:	pop    esi
  41e9f3:	les    ecx,FWORD PTR [edx]
  41e9f5:	aaa    
  41e9f6:	lock bound ebx,QWORD PTR [ecx]
  41e9f9:	cmp    DWORD PTR [ecx+0x1c9850d4],ecx
  41e9ff:	push   ecx
  41ea00:	imul   ecx,DWORD PTR [esi],0xffffffb6
  41ea03:	ja     0x41ea63
  41ea05:	fimul  DWORD PTR [edx+0x26]
  41ea08:	inc    ecx
  41ea09:	xchg   DWORD PTR ds:0x3200c56d,eax
  41ea0f:	cmp    DWORD PTR [ecx-0x48],edi
  41ea12:	call   0x1a3f:0x48084021
  41ea19:	push   edx
  41ea1a:	pop    ebp
  41ea1b:	outs   dx,BYTE PTR ds:[esi]
  41ea1c:	and    bl,BYTE PTR ds:0x3b684703
  41ea22:	out    dx,al
  41ea23:	ins    DWORD PTR es:[edi],dx
  41ea24:	mov    esi,DWORD PTR [eax-0x443069c5]
  41ea2a:	pushf  
  41ea2b:	dec    ecx
  41ea2c:	pushf  
  41ea2d:	out    0x72,eax
  41ea2f:	dec    DWORD PTR [ebx-0x78]
  41ea32:	pop    edi
  41ea33:	test   ch,ch
  41ea35:	dec    edx
  41ea36:	push   esi
  41ea37:	mov    eax,0x4daaae92
  41ea3c:	out    0x7,eax
  41ea3e:	dec    ebx
  41ea3f:	scas   eax,DWORD PTR es:[edi]
  41ea40:	dec    ecx
  41ea41:	sub    BYTE PTR [ebp-0x5fe193ee],0x18
  41ea48:	xchg   DWORD PTR [edi+0x8c80d5e],ebp
  41ea4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea4f:	fnsave [edi]
  41ea51:	out    dx,al
  41ea52:	and    edx,DWORD PTR [esi-0x522fa76e]
  41ea58:	jo     0x41ea7a
  41ea5a:	pop    es
  41ea5b:	call   0xb1fcf10e
  41ea60:	mov    ds:0x59a68ae3,eax
  41ea65:	mov    al,0x67
  41ea67:	mov    eax,0x32463298
  41ea6c:	cmp    eax,0xa161e21b
  41ea71:	and    bl,ch
  41ea73:	mov    cl,0x88
  41ea75:	sub    eax,0xe1b7ea1a
  41ea7a:	mov    DWORD PTR [esi+0xd],esp
  41ea7d:	or     edx,DWORD PTR [esi]
  41ea7f:	push   ecx
  41ea80:	mov    ah,bh
  41ea82:	mov    al,BYTE PTR [ecx+ecx*4+0x4]
  41ea86:	pushf  
  41ea87:	dec    ebp
  41ea88:	inc    eax
  41ea89:	std    
  41ea8a:	mov    al,bl
  41ea8c:	pop    esp
  41ea8d:	icebp  
  41ea8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea8f:	imul   ebx,DWORD PTR [eax-0x1e],0xffffffd0
  41ea93:	dec    edx
  41ea94:	xlat   BYTE PTR ds:[ebx]
  41ea95:	cs push esp
  41ea97:	stos   BYTE PTR es:[edi],al
  41ea98:	inc    ecx
  41ea99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea9a:	aad    0xf8
  41ea9c:	sub    al,0xac
  41ea9e:	fist   DWORD PTR [eax+0x34]
  41eaa1:	fidiv  WORD PTR [ecx]
  41eaa3:	pop    ebp
  41eaa4:	push   ds
  41eaa5:	xchg   ebp,eax
  41eaa6:	clc    
  41eaa7:	cmp    al,BYTE PTR [ebx]
  41eaa9:	bswap  ebp
  41eaab:	call   edx
  41eaad:	push   ds
  41eaae:	cmc    
  41eaaf:	push   cs
  41eab0:	scas   al,BYTE PTR es:[edi]
  41eab1:	sub    eax,0x556c0745
  41eab6:	loope  0x41ea56
  41eab8:	xchg   esi,eax
  41eab9:	mov    dh,dl
  41eabb:	imul   ebp,DWORD PTR [edx-0xfa62588],0x38
  41eac2:	outs   dx,DWORD PTR ds:[esi]
  41eac3:	sub    al,BYTE PTR [esi]
  41eac5:	sti    
  41eac6:	in     al,0xe9
  41eac8:	mov    ebx,0xdc38b2e
  41eacd:	jns    0x41eb11
  41eacf:	lods   al,BYTE PTR ds:[esi]
  41ead0:	and    ah,BYTE PTR [ebp+0x3116c204]
  41ead6:	sub    al,0xde
  41ead8:	dec    edi
  41ead9:	and    eax,ecx
  41eadb:	mov    ?,WORD PTR [edx+0x6c]
  41eade:	mov    WORD PTR [ebp-0x17],?
  41eae1:	xor    BYTE PTR [esi+0x41],0x1d
  41eae5:	mov    esp,0xb028d2e6
  41eaea:	cwde   
  41eaeb:	inc    esi
  41eaec:	arpl   WORD PTR [ebx],dx
  41eaee:	xor    DWORD PTR [eax-0x71],esi
  41eaf1:	retf   
  41eaf2:	int3   
  41eaf3:	jae    0x41eb3b
  41eaf5:	call   0xd1592da7
  41eafa:	(bad)  
  41eafc:	loopne 0x41eb4e
  41eafe:	xor    BYTE PTR [eax+ebx*1+0x51ddf840],ah
  41eb05:	sbb    DWORD PTR [edi],ebx
  41eb07:	cmp    al,cl
  41eb09:	mov    eax,0x9ff2916d
  41eb0e:	lds    edx,FWORD PTR [ecx+0xfba1411]
  41eb14:	inc    esp
  41eb15:	cmc    
  41eb16:	jmp    DWORD PTR ss:[edx+0x44]
  41eb1a:	bswap  eax
  41eb1c:	ret    0x4d3c
  41eb1f:	pop    ecx
  41eb20:	pushf  
  41eb21:	pop    ds
  41eb22:	xlat   BYTE PTR ds:[ebx]
  41eb23:	cld    
  41eb24:	daa    
  41eb25:	sub    eax,0xbf1c5c3d
  41eb2a:	mov    al,0xec
  41eb2c:	(bad)  
  41eb2d:	std    
  41eb2e:	adc    DWORD PTR ds:0x288790c,eax
  41eb34:	and    al,0x3d
  41eb36:	jb     0x41eb9a
  41eb38:	or     eax,0xb952180f
  41eb3d:	cmovbe edx,ebx
  41eb40:	jmp    0x313fb9b4
  41eb45:	sbb    eax,0xf77f71b9
  41eb4a:	ja     0x41eaeb
  41eb4c:	nop
  41eb4d:	sub    edi,ecx
  41eb4f:	sub    BYTE PTR [ecx-0x52],dh
  41eb52:	mov    dh,0x76
  41eb54:	pop    ds
  41eb55:	fsubr  st(4),st
  41eb57:	mov    ch,0x60
  41eb59:	jbe    0x41ebae
  41eb5b:	mov    dl,0xc2
  41eb5d:	fadd   QWORD PTR [edx]
  41eb5f:	es stos DWORD PTR es:[edi],eax
  41eb61:	sub    DWORD PTR [ebp+0x79],ecx
  41eb64:	int    0xe3
  41eb66:	mov    ch,0x12
  41eb68:	jns    0x41ebc1
  41eb6a:	jmp    0x2108:0x11d64420
  41eb71:	jg     0x41eb1d
  41eb73:	or     dl,BYTE PTR fs:[ebp+0x3d8a628e]
  41eb7a:	in     eax,0x4b
  41eb7c:	mov    ebp,0xa708346d
  41eb81:	lds    ebp,FWORD PTR [esp+eax*8-0x2e]
  41eb85:	pop    ebx
  41eb86:	jno    0x41eb3c
  41eb88:	shl    DWORD PTR [edx-0x592359ed],cl
  41eb8e:	lahf   
  41eb8f:	out    0x55,eax
  41eb91:	sub    ebx,DWORD PTR [edi-0x1343f273]
  41eb97:	jnp    0x41eb9d
  41eb99:	stos   BYTE PTR es:[edi],al
  41eb9a:	call   0xef21c214
  41eb9f:	mov    esi,0xc3733901
  41eba4:	push   cs
  41eba5:	dec    ecx
  41eba6:	sbb    DWORD PTR [eax],ecx
  41eba8:	scas   eax,DWORD PTR es:[edi]
  41eba9:	mov    cl,0x29
  41ebab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebac:	push   ss
  41ebad:	cwde   
  41ebae:	pop    ecx
  41ebaf:	lahf   
  41ebb0:	mul    al
  41ebb2:	loopne 0x41eb9b
  41ebb4:	and    DWORD PTR [edx+esi*8-0x12],ebx
  41ebb8:	outs   dx,BYTE PTR ds:[esi]
  41ebb9:	pop    ecx
  41ebba:	and    al,0x3d
  41ebbc:	push   eax
  41ebbd:	and    eax,0x344a9d3e
  41ebc2:	jl     0x41eb77
  41ebc4:	mov    ds:0xc2f2e21e,eax
  41ebc9:	sbb    eax,0xfbe8203f
  41ebce:	stos   DWORD PTR es:[edi],eax
  41ebcf:	call   0x2b1f4a6d
  41ebd4:	push   eax
  41ebd5:	mov    esi,0xb5ef80b8
  41ebda:	adc    dh,BYTE PTR [ebp+0xf]
  41ebdd:	cmp    dh,BYTE PTR [ebp-0x19]
  41ebe0:	mov    ecx,0xfb1103e4
  41ebe5:	mov    dh,0x6b
  41ebe7:	sub    eax,0x85868efa
  41ebec:	and    ebp,edx
  41ebee:	iret   
  41ebef:	add    bh,dl
  41ebf1:	popa   
  41ebf2:	out    dx,al
  41ebf3:	int3   
  41ebf4:	das    
  41ebf5:	inc    ebp
  41ebf6:	push   ebx
  41ebf7:	jno    0x41ebbc
  41ebf9:	lods   eax,DWORD PTR ds:[esi]
  41ebfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfb:	sub    dh,BYTE PTR [ebx+esi*1]
  41ebfe:	inc    BYTE PTR [eax]
  41ec00:	and    al,bh
  41ec02:	lods   eax,DWORD PTR ds:[esi]
  41ec03:	gs xchg edi,eax
  41ec05:	jmp    0x41ec45
  41ec07:	mov    ch,BYTE PTR [edi-0x3bb24a48]
  41ec0d:	dec    ebp
  41ec0e:	ficom  WORD PTR [esp]
  41ec11:	jg     0x41ec28
  41ec13:	xor    esp,DWORD PTR [esi-0x4d]
  41ec16:	pop    DWORD PTR [ecx+0x7ceebfaf]
  41ec1c:	adc    ecx,DWORD PTR ds:0x82b8c43b
  41ec22:	add    DWORD PTR [ecx],esp
  41ec24:	push   ebp
  41ec25:	popa   
  41ec26:	lock sbb eax,0x4bfb96b3
  41ec2c:	adc    eax,0xff5e8d7d
  41ec31:	ror    BYTE PTR ds:[ecx],cl
  41ec34:	mov    esp,DWORD PTR [edx]
  41ec36:	js     0x41ebdf
  41ec38:	repz fimul DWORD PTR [edx+0x56faf51c]
  41ec3f:	jecxz  0x41ecb3
  41ec41:	dec    ebp
  41ec42:	in     eax,dx
  41ec43:	inc    edx
  41ec44:	out    dx,al
  41ec45:	pushf  
  41ec46:	adc    ecx,esp
  41ec48:	rcl    DWORD PTR [ebp+0x67],cl
  41ec4b:	shr    BYTE PTR [ebp+0x1717d0a1],cl
  41ec51:	mov    eax,ds:0x3de16941
  41ec56:	cmc    
  41ec57:	jbe    0x41ecb7
  41ec59:	in     eax,dx
  41ec5a:	ins    BYTE PTR es:[edi],dx
  41ec5b:	push   ecx
  41ec5c:	xchg   esi,eax
  41ec5d:	and    DWORD PTR [eax-0x16827f00],esi
  41ec63:	stos   DWORD PTR es:[edi],eax
  41ec64:	or     BYTE PTR [edx],bl
  41ec66:	inc    edx
  41ec67:	sar    DWORD PTR [edi],1
  41ec69:	aad    0xd2
  41ec6b:	test   DWORD PTR [esi],ebp
  41ec6d:	stos   BYTE PTR es:[edi],al
  41ec6e:	test   al,0x44
  41ec70:	das    
  41ec71:	es cld 
  41ec73:	dec    eax
  41ec74:	pop    es
  41ec75:	fnsave [esi-0x24]
  41ec78:	mov    cl,0x11
  41ec7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec7b:	xor    al,0xdd
  41ec7d:	jg     0x41ec10
  41ec7f:	inc    ecx
  41ec80:	xor    DWORD PTR [edi+0x2e6d55e9],ebp
  41ec86:	into   
  41ec87:	ins    DWORD PTR es:[edi],dx
  41ec88:	sub    al,0x56
  41ec8a:	dec    ecx
  41ec8b:	mov    cl,al
  41ec8d:	retf   0xe41a
  41ec90:	shl    BYTE PTR [edi-0x63f78813],0x5d
  41ec97:	je     0x41ec21
  41ec99:	sar    DWORD PTR [edx-0x68f6d137],cl
  41ec9f:	pusha  
  41eca0:	jmp    0x41ece6
  41eca2:	jbe    0x41ec41
  41eca4:	jmp    0x60a8bb31
  41eca9:	test   al,0x63
  41ecab:	mov    DWORD PTR [ebp-0x14fa5704],esp
  41ecb1:	push   0x29
  41ecb3:	inc    edx
  41ecb4:	add    eax,0x5572d9cf
  41ecb9:	pop    ecx
  41ecba:	gs mov dh,0x1c
  41ecbd:	ja     0x41ec4c
  41ecbf:	mov    bh,0x51
  41ecc1:	xchg   ecx,eax
  41ecc2:	dec    eax
  41ecc3:	jbe    0x41ec6c
  41ecc5:	xor    eax,0x74568f4c
  41ecca:	mov    cl,0x88
  41eccc:	push   0xa80fa72
  41ecd1:	mov    ebx,0xf1de9bf9
  41ecd6:	call   0x4630:0xe2c5b8e0
  41ecdd:	out    0x3b,al
  41ecdf:	cli    
  41ece0:	dec    esp
  41ece1:	out    0xb5,eax
  41ece3:	out    dx,al
  41ece4:	unpckhps xmm6,XMMWORD PTR [edx-0x1a3176d5]
  41eceb:	bnd jb 0x41ecc5
  41ecee:	mov    dl,0x31
  41ecf0:	jae    0x41ed56
  41ecf2:	pop    ecx
  41ecf3:	mov    bl,0xc
  41ecf5:	std    
  41ecf6:	pop    ebx
  41ecf7:	clc    
  41ecf8:	or     DWORD PTR [ebp-0x37ddebf7],0xdbedbde0
  41ed02:	jmp    0xb598a9ce
  41ed07:	mov    ebp,0xdf3927b6
  41ed0c:	aam    0xec
  41ed0e:	out    0xb9,al
  41ed10:	fiadd  WORD PTR [esi+0xf]
  41ed13:	push   eax
  41ed14:	or     esi,edx
  41ed16:	inc    ebx
  41ed17:	adc    eax,esp
  41ed19:	and    dh,dl
  41ed1b:	leave  
  41ed1c:	aam    0x49
  41ed1e:	scas   eax,DWORD PTR es:[edi]
  41ed1f:	into   
  41ed20:	rcl    DWORD PTR [eax],0x4f
  41ed23:	sbb    DWORD PTR [eax+0x2e5d02ee],0xffffffd1
  41ed2a:	or     DWORD PTR [edi*2+0x3e364184],esp
  41ed31:	fs aam 0xfc
  41ed34:	ss fxch st(0)
  41ed37:	adc    BYTE PTR [ebx+0x2b3f8420],0x39
  41ed3e:	popa   
  41ed3f:	div    DWORD PTR [edi+0x14fcf952]
  41ed45:	add    cl,BYTE PTR [eax-0x32]
  41ed48:	push   0xffffff81
  41ed4a:	stos   BYTE PTR es:[edi],al
  41ed4b:	out    0x78,eax
  41ed4d:	not    BYTE PTR [edi]
  41ed4f:	jp     0x41eda1
  41ed51:	sar    BYTE PTR [ebp+0x34],1
  41ed54:	dec    esi
  41ed55:	mov    esp,0x49f54b43
  41ed5a:	or     BYTE PTR [ebx+0x61a04ee4],0xa1
  41ed61:	pusha  
  41ed62:	push   ebp
  41ed63:	xor    al,0xfd
  41ed65:	fdivr  QWORD PTR [eax+ebx*8-0x43aae04b]
  41ed6c:	xor    edx,DWORD PTR gs:[ecx]
  41ed6f:	inc    esi
  41ed70:	mov    ecx,0xd2280500
  41ed75:	jae    0x41eda5
  41ed77:	push   ebp
  41ed78:	fscale 
  41ed7a:	ins    DWORD PTR es:[edi],dx
  41ed7b:	or     BYTE PTR [ebx+ebx*8+0x3a2893c1],dh
  41ed82:	add    cl,BYTE PTR [edi+0x29d7bdf7]
  41ed88:	jl     0x41ed0c
  41ed8a:	jno    0x41ed49
  41ed8c:	sbb    BYTE PTR [eax+0x138e7a8a],0x5e
  41ed93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed94:	dec    ebx
  41ed95:	xor    ebx,esi
  41ed97:	leave  
  41ed98:	sbb    esi,edi
  41ed9a:	hlt    
  41ed9b:	jl     0x41ed79
  41ed9d:	mov    ss,WORD PTR [esp+eax*8]
  41eda0:	sub    DWORD PTR [edx+0x3318f387],eax
  41eda6:	inc    ebp
  41eda7:	test   al,0x3e
  41eda9:	xchg   esp,eax
  41edaa:	hlt    
  41edab:	push   ss
  41edac:	in     al,0xa8
  41edae:	push   esp
  41edaf:	cmp    eax,0xb69dcbde
  41edb4:	and    bh,dh
  41edb6:	mov    dh,ch
  41edb8:	push   es
  41edb9:	inc    ebx
  41edba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edbb:	fstp   DWORD PTR [ebx+0x346a684c]
  41edc1:	pop    esi
  41edc2:	loop   0x41ed61
  41edc4:	ins    DWORD PTR es:[edi],dx
  41edc5:	lea    edi,[esi-0x692c59e2]
  41edcb:	push   esp
  41edcc:	add    bh,BYTE PTR ds:[ecx+0x61883835]
  41edd3:	aas    
  41edd4:	in     al,0xe1
  41edd6:	jno    0x41ee14
  41edd8:	push   es
  41edd9:	mov    eax,edx
  41eddb:	sti    
  41eddc:	jne    0x41edeb
  41edde:	pop    es
  41eddf:	xor    DWORD PTR [esi+0x3a92ba4e],esi
  41ede5:	xor    eax,0x8d9b8449
  41edea:	dec    ebx
  41edeb:	pop    esi
  41edec:	adc    eax,DWORD PTR [eax+0x21]
  41edef:	adc    WORD PTR [edx+eiz*1-0x414bc090],bp
  41edf7:	(bad)  
  41edf8:	(bad)  
  41edf9:	icebp  
  41edfa:	daa    
  41edfb:	ret    0x599f
  41edfe:	sbb    DWORD PTR [eax],esi
  41ee00:	pop    esi
  41ee01:	sub    eax,0x37db419f
  41ee06:	mov    si,0x5852
  41ee0a:	and    edx,0x5e5224e9
  41ee10:	imul   eax,edx,0xffffffad
  41ee13:	adc    esi,eax
  41ee15:	or     esi,DWORD PTR [ebx-0x1dc2e7a1]
  41ee1b:	jne    0x41ee14
  41ee1d:	mov    edx,0x3541129f
  41ee22:	xor    BYTE PTR [edx-0xb34eb48],bl
  41ee28:	push   ecx
  41ee29:	xchg   edi,eax
  41ee2a:	fcom   st(3)
  41ee2c:	jg     0x41edf0
  41ee2e:	jns    0x41eea1
  41ee30:	aaa    
  41ee31:	add    esi,DWORD PTR [ecx-0x40]
  41ee34:	inc    ecx
  41ee35:	push   cs
  41ee36:	jecxz  0x41eeb1
  41ee38:	xlat   BYTE PTR ds:[ebx]
  41ee39:	out    0x1b,eax
  41ee3b:	hlt    
  41ee3c:	mov    ecx,0xd9e4f71d
  41ee41:	dec    esp
  41ee42:	stc    
  41ee43:	in     eax,dx
  41ee44:	int    0x52
  41ee46:	pop    esi
  41ee47:	in     eax,0xdc
  41ee49:	outs   dx,DWORD PTR ds:[esi]
  41ee4a:	ret    0x60d0
  41ee4d:	loop   0x41ede3
  41ee4f:	jmp    0x478d:0xfe1d3b2b
  41ee56:	ins    BYTE PTR es:[edi],dx
  41ee57:	pop    esp
  41ee58:	out    0x76,al
  41ee5a:	push   0x3f
  41ee5c:	sti    
  41ee5d:	fstp   st(0)
  41ee5f:	sub    esp,DWORD PTR [edx+0x6deab76e]
  41ee65:	or     dl,BYTE PTR [esi-0x29f83b80]
  41ee6b:	in     eax,dx
  41ee6c:	ret    
  41ee6d:	dec    esp
  41ee6e:	or     eax,0x1cdb9d88
  41ee73:	(bad)  
  41ee74:	pop    esi
  41ee75:	inc    eax
  41ee76:	cld    
  41ee77:	adc    BYTE PTR [ecx],al
  41ee79:	inc    eax
  41ee7a:	xor    eax,0xfa743e3e
  41ee7f:	lods   al,BYTE PTR ds:[esi]
  41ee80:	xchg   edi,eax
  41ee81:	push   esi
  41ee82:	rol    DWORD PTR [ecx-0x68],0x39
  41ee86:	sbb    BYTE PTR [eax+edi*8+0x3c],0x49
  41ee8b:	int    0x67
  41ee8d:	jg     0x41eef1
  41ee8f:	into   
  41ee90:	cld    
  41ee91:	cli    
  41ee92:	jne    0x41eede
  41ee94:	push   edi
  41ee95:	cmp    eax,0xecca2408
  41ee9a:	rcr    DWORD PTR [ecx],0x30
  41ee9d:	cmp    edi,eax
  41ee9f:	and    al,0x23
  41eea1:	int3   
  41eea2:	fdivr  DWORD PTR [ebx+eax*1]
  41eea5:	dec    edx
  41eea6:	(bad)  
  41eea7:	leave  
  41eea8:	dec    edi
  41eea9:	jmp    0x41ee51
  41eeab:	push   edx
  41eeac:	mov    ?,edx
  41eeae:	sbb    eax,0x7425adcd
  41eeb3:	mov    cl,BYTE PTR es:[ecx+0x72]
  41eeb7:	push   ebp
  41eeb8:	jl     0x41eebc
  41eeba:	cmp    eax,0xb2f167ef
  41eebf:	add    BYTE PTR [edx],ch
  41eec1:	mov    ?,WORD PTR [esi]
  41eec3:	mov    ds:0x61841121,al
  41eec8:	or     esp,DWORD PTR [eax-0x213a470b]
  41eece:	and    BYTE PTR ds:0xfda4f79,al
  41eed4:	inc    ebp
  41eed5:	shl    edx,cl
  41eed7:	sbb    DWORD PTR [ebp+0x7f],0x6c
  41eedb:	inc    esp
  41eedc:	inc    esp
  41eedd:	into   
  41eede:	retf   
  41eedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee0:	jb     0x41eee7
  41eee2:	or     DWORD PTR [esi-0x1cf83ec7],esp
  41eee8:	fcmovnbe st,st(3)
  41eeea:	out    dx,eax
  41eeeb:	mov    ebx,0xb075bbf
  41eef0:	jns    0x41ef53
  41eef2:	inc    esp
  41eef3:	cwde   
  41eef4:	xor    DWORD PTR [ecx+0x43],ecx
  41eef7:	add    al,0x44
  41eef9:	mov    ebp,0xd8df95e1
  41eefe:	mov    ch,0x98
  41ef00:	stos   DWORD PTR es:[edi],eax
  41ef01:	pop    ds
  41ef02:	xchg   ebp,eax
  41ef03:	xchg   esi,eax
  41ef04:	iret   
  41ef05:	cwde   
  41ef06:	cwde   
  41ef07:	adc    bl,ah
  41ef09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef0a:	inc    eax
  41ef0b:	mov    DWORD PTR [ebx],esi
  41ef0d:	dec    ebx
  41ef0e:	ss iret 
  41ef10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef11:	pop    ebx
  41ef12:	std    
  41ef13:	or     dh,ch
  41ef15:	(bad)  
  41ef16:	jns    0x41ef6d
  41ef18:	mov    es:0x33667744,al
  41ef1e:	adc    DWORD PTR [ebx],ebx
  41ef20:	scas   al,BYTE PTR es:[edi]
  41ef21:	gs dec esi
  41ef23:	mov    ch,0x39
  41ef25:	arpl   si,cx
  41ef27:	xchg   ebp,esi
  41ef29:	or     dh,0x6e
  41ef2c:	add    bl,BYTE PTR [ebx]
  41ef2e:	add    esi,edi
  41ef30:	add    eax,0x7a4fdb70
  41ef35:	sbb    al,0xd1
  41ef37:	add    ch,cl
  41ef39:	adc    DWORD PTR [edi-0x31f46967],edi
  41ef3f:	clc    
  41ef40:	jns    0x41ef91
  41ef42:	xchg   esp,eax
  41ef43:	ret    0xf641
  41ef46:	mov    esi,0x734b8d09
  41ef4b:	in     al,0x77
  41ef4d:	pop    ebp
  41ef4e:	push   ss
  41ef4f:	inc    eax
  41ef50:	shl    BYTE PTR [ebx+0x241f90eb],cl
  41ef56:	mul    BYTE PTR [edi+0x2b]
  41ef59:	adc    BYTE PTR [ebx-0x567f15cb],dh
  41ef5f:	cwde   
  41ef60:	cs jbe 0x41eef7
  41ef63:	pop    edi
  41ef65:	mov    al,ds:0xa12a9d99
  41ef6a:	in     al,dx
  41ef6b:	mov    eax,ds:0x52a725c5
  41ef70:	outs   dx,DWORD PTR ds:[esi]
  41ef71:	pop    ds
  41ef72:	xor    ecx,DWORD PTR [edi-0x8]
  41ef75:	sub    ebp,DWORD PTR [esi+edx*2]
  41ef78:	loopne 0x41efa2
  41ef7a:	rcl    DWORD PTR [ebp+eiz*4-0x65ea103b],cl
  41ef81:	and    al,0x50
  41ef83:	add    DWORD PTR [ebx],eax
  41ef85:	push   edx
  41ef86:	dec    edi
  41ef87:	fdivr  DWORD PTR [ebp+0x3a]
  41ef8a:	mov    eax,0x5e06d569
  41ef8f:	mov    al,ds:0xebf2883b
  41ef94:	enter  0x7239,0xd1
  41ef98:	xor    BYTE PTR [eax+0x7a],cl
  41ef9b:	iret   
  41ef9c:	jecxz  0x41ef2f
  41ef9e:	add    DWORD PTR [edi+0x36],esp
  41efa1:	dec    ebp
  41efa2:	xor    al,0xe
  41efa4:	loop   0x41f00b
  41efa6:	icebp  
  41efa7:	mov    ch,0x69
  41efa9:	jl     0x41effb
  41efab:	es aaa 
  41efad:	jecxz  0x41effc
  41efaf:	jb     0x41ef50
  41efb1:	aam    0x16
  41efb3:	push   0x54c360db
  41efb8:	clc    
  41efb9:	dec    ebx
  41efba:	inc    edx
  41efbb:	ficomp WORD PTR ds:0xb8eca196
  41efc1:	or     DWORD PTR [esi-0x3f],0xffffffe3
  41efc5:	dec    esi
  41efc6:	arpl   WORD PTR [eax],cx
  41efc8:	call   0x3b72:0xadf10160
  41efcf:	mov    bh,0xb2
  41efd1:	das    
  41efd2:	xchg   edx,eax
  41efd3:	aaa    
  41efd4:	mov    ch,0xee
  41efd6:	retf   0x89c
  41efd9:	mov    BYTE PTR [ecx],cl
  41efdb:	ficomp WORD PTR [edi+0x796df523]
  41efe1:	or     DWORD PTR [ebp-0x10],eax
  41efe4:	push   esp
  41efe5:	js     0x41ef75
  41efe7:	jns    0x41ef98
  41efe9:	or     BYTE PTR [edi+eiz*2+0x7614eed7],bh
  41eff0:	add    bl,ch
  41eff2:	out    0x2f,al
  41eff4:	into   
  41eff5:	stc    
  41eff6:	adc    BYTE PTR [esi],0xb4
  41eff9:	xchg   DWORD PTR [eax-0x32],ecx
  41effc:	mov    ebp,0x3c833a2
  41f001:	into   
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x3a226403
  41f0bf:	or     ebx,DWORD PTR [esi+0x6261d851]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx+0x75]
  41f0ca:	pop    es
  41f0cb:	(bad)  
  41f0cc:	aas    
  41f0cd:	fld    DWORD PTR [eax-0x4]
  41f0d0:	aaa    
  41f0d1:	jmp    FWORD PTR [ecx+edi*4+0x58b03cbe]
  41f0d8:	push   cs
  41f0d9:	(bad)  
  41f0da:	in     al,dx
  41f0db:	stc    
  41f0dc:	imul   esi,DWORD PTR [edi+edi*1-0x55471f15],0xffffffff
  41f0e4:	cmp    al,BYTE PTR [edi]
  41f0e6:	xlat   BYTE PTR ds:[ebx]
  41f0e7:	(bad)  
  41f0e8:	sbb    eax,0x2c67fd5f
  41f0ed:	dec    esi
  41f0ee:	ds adc al,0x15
  41f0f1:	mov    eax,cs:0x6dcb8bbe
  41f0f7:	and    eax,0x3c1422c8
  41f0fc:	call   0xb2a238cb
  41f101:	xlat   BYTE PTR ds:[ebx]
  41f102:	cmp    BYTE PTR [edi+edx*1+0x6b],bl
  41f106:	jo     0x41f148
  41f108:	add    DWORD PTR [ecx-0x6b54b703],0xffffffcf
  41f10f:	pop    edi
  41f110:	ror    BYTE PTR [ebp-0x44],1
  41f113:	outs   dx,BYTE PTR ds:[esi]
  41f114:	mov    dl,dl
  41f116:	out    0xa5,eax
  41f118:	xor    eax,0x382d94b1
  41f11d:	scas   al,BYTE PTR es:[edi]
  41f11e:	jle    0x41f0ea
  41f120:	movd   mm0,ecx
  41f123:	mov    ch,0xd5
  41f125:	mov    eax,0x2f0ccb33
  41f12a:	int    0x8a
  41f12c:	cmp    BYTE PTR [esi+0x120a51fc],bl
  41f132:	cld    
  41f133:	pusha  
  41f134:	jo     0x41f0c5
  41f136:	imul   esi,DWORD PTR [ecx+0x67559e28],0xb4cb18d9
  41f140:	pop    eax
  41f141:	and    DWORD PTR [edi-0x7e],edx
  41f144:	and    al,0x3d
  41f146:	test   dl,ah
  41f148:	ficomp DWORD PTR [edi+ecx*8+0x767aedca]
  41f14f:	(bad)  
  41f150:	cmp    esi,ecx
  41f152:	hlt    
  41f153:	mov    BYTE PTR [edx-0x6fce732f],cl
  41f159:	mov    edx,0x7dc8643c
  41f15e:	shl    DWORD PTR [edi-0xf9c294e],1
  41f164:	add    bh,BYTE PTR [ecx-0x1eb7fab9]
  41f16a:	rol    DWORD PTR [ebp+eax*8-0x1a4c2182],1
  41f171:	adc    ebp,DWORD PTR [ebx+0x5d]
  41f174:	mov    bl,cl
  41f176:	scas   eax,DWORD PTR es:[edi]
  41f177:	xchg   ebp,eax
  41f178:	adc    BYTE PTR [edi+0x1e],ch
  41f17b:	jne    0x41f1cd
  41f17d:	jo     0x41f1f5
  41f17f:	aad    0x1c
  41f181:	into   
  41f182:	repz pop esi
  41f184:	fsubr  st,st(3)
  41f186:	jge    0x41f19f
  41f188:	mov    al,0x9
  41f18b:	jno    0x41f115
  41f18d:	cmp    esi,DWORD PTR [edx+ebx*1-0x20]
  41f191:	pop    edi
  41f192:	inc    edi
  41f193:	stos   DWORD PTR es:[edi],eax
  41f194:	mov    edx,0x5fbe94e2
  41f199:	jmp    0x50f14cc3
  41f19e:	das    
  41f19f:	xchg   ecx,eax
  41f1a0:	std    
  41f1a1:	es jmp 0x866c:0x3af083bc
  41f1a9:	or     bl,BYTE PTR ds:0x5e606c78
  41f1af:	stos   BYTE PTR es:[edi],al
  41f1b0:	mov    ah,0xc3
  41f1b2:	cld    
  41f1b3:	xchg   esp,eax
  41f1b4:	ror    DWORD PTR [ebp+ebx*8+0x4b94f6a1],cl
  41f1bb:	stos   DWORD PTR es:[edi],eax
  41f1bc:	sub    al,0x98
  41f1be:	jp     0x41f1d8
  41f1c0:	aam    0x75
  41f1c2:	ror    DWORD PTR [ebp+0x27],0xaa
  41f1c6:	loope  0x41f1c5
  41f1c8:	(bad)  
  41f1c9:	stos   DWORD PTR es:[edi],eax
  41f1ca:	mov    BYTE PTR [ecx],bl
  41f1cc:	mov    eax,edx
  41f1ce:	sub    DWORD PTR [ebx],ebp
  41f1d0:	rol    DWORD PTR [edi+ebx*8+0x53bd04cc],cl
  41f1d7:	faddp  st(6),st
  41f1d9:	cwde   
  41f1da:	(bad)  
  41f1db:	push   edi
  41f1dc:	fstp   st(4)
  41f1de:	test   DWORD PTR [edx-0x5e],0xc54efd92
  41f1e5:	inc    edx
  41f1e6:	xor    al,0x6c
  41f1e8:	fdiv   st(4),st
  41f1ea:	cmc    
  41f1eb:	sbb    al,0xfa
  41f1ed:	das    
  41f1ee:	push   ds
  41f1ef:	or     BYTE PTR [esi+0x6b],bl
  41f1f2:	out    dx,al
  41f1f3:	mov    BYTE PTR [ebp+edi*8-0x1e],bh
  41f1f7:	xor    BYTE PTR [eax],cl
  41f1f9:	sbb    eax,0x7517b19a
  41f1fe:	mov    ebx,0xe1baf084
  41f203:	das    
  41f204:	jne    0x41f1b0
  41f206:	and    eax,0xe26136a7
  41f20b:	sub    ebp,DWORD PTR ss:[ecx+0x34]
  41f20f:	lea    esi,[ecx+0x75c1eef9]
  41f215:	call   0x53c0:0x9854ace3
  41f21c:	fcmovnbe st,st(4)
  41f21e:	cmp    eax,0xc18f17d9
  41f223:	xchg   ecx,ebp
  41f225:	out    dx,eax
  41f226:	jl     0x41f260
  41f228:	cmp    eax,0xd21d9db0
  41f22d:	jo     0x41f1ff
  41f22f:	mov    esi,0xfa14a111
  41f234:	icebp  
  41f235:	dec    edx
  41f236:	int3   
  41f237:	dec    esp
  41f238:	mov    edx,0xe72e0f72
  41f23d:	pop    es
  41f23e:	push   edi
  41f23f:	push   ecx
  41f240:	dec    ecx
  41f241:	test   DWORD PTR [ebx],eax
  41f243:	dec    edx
  41f244:	jbe    0x41f22c
  41f246:	mov    cl,0xe1
  41f248:	jo     0x41f28e
  41f24a:	data16 mov cl,BYTE PTR [edi+eiz*8]
  41f24e:	imul   ecx,eax,0x3d
  41f251:	xchg   eax,ecx
  41f253:	sbb    eax,0x8e642018
  41f258:	rol    edi,0xfb
  41f25b:	dec    ebx
  41f25c:	clc    
  41f25d:	popf   
  41f25e:	push   edx
  41f25f:	sbb    edi,DWORD PTR [edx]
  41f261:	pop    eax
  41f262:	jl     0x41f240
  41f264:	pushf  
  41f265:	and    al,0x80
  41f267:	mov    eax,ds:0xa6f5d7bc
  41f26c:	les    esi,FWORD PTR [ecx]
  41f26e:	push   ebx
  41f26f:	lea    ecx,[edi]
  41f271:	inc    eax
  41f272:	mov    edi,ebp
  41f274:	sbb    BYTE PTR [ecx-0x33],0x26
  41f278:	repz dec ebp
  41f27a:	(bad)  
  41f27b:	jl     0x41f2f1
  41f27d:	xlat   BYTE PTR ds:[ebx]
  41f27e:	jne    0x41f233
  41f280:	lea    eax,[esi+0x1d]
  41f283:	sbb    DWORD PTR [eax],ecx
  41f285:	xlat   BYTE PTR ds:[ebx]
  41f286:	call   0x3787e4ba
  41f28b:	lds    eax,FWORD PTR [edi-0xda579b4]
  41f291:	dec    esp
  41f292:	lock pop edx
  41f294:	cmp    esi,edx
  41f296:	outs   dx,DWORD PTR ds:[esi]
  41f297:	int3   
  41f298:	push   0xf961b1d9
  41f29d:	popf   
  41f29e:	pop    eax
  41f29f:	xchg   edi,eax
  41f2a0:	dec    esi
  41f2a1:	mov    eax,0x6ebeefbf
  41f2a6:	xchg   edi,eax
  41f2a7:	aas    
  41f2a8:	cli    
  41f2a9:	call   0xaf8ecb89
  41f2ae:	lock sbb al,0x27
  41f2b1:	mov    ds:0xa8f7d36e,eax
  41f2b6:	imul   esi,DWORD PTR [esi+0x27],0xffffffd2
  41f2ba:	mov    ebx,0xda523a2c
  41f2bf:	loope  0x41f2c0
  41f2c1:	cwde   
  41f2c2:	pop    esp
  41f2c3:	int    0xb5
  41f2c5:	fs ds mov ecx,0x47020781
  41f2cc:	mov    ah,0x3c
  41f2ce:	mov    BYTE PTR [ebp-0x416f751c],ah
  41f2d4:	xor    eax,eax
  41f2d6:	xchg   edi,eax
  41f2d7:	pop    ebp
  41f2d8:	not    BYTE PTR [ebx-0x1ee28993]
  41f2de:	imul   ax,WORD PTR [ecx-0x4b7113db],0x9926
  41f2e7:	inc    esp
  41f2e8:	(bad)  [esi-0x50]
  41f2eb:	repnz xchg ebx,eax
  41f2ed:	ror    ebp,cl
  41f2ef:	(bad)  
  41f2f0:	mov    ch,BYTE PTR [ecx+esi*8+0x39]
  41f2f4:	sub    al,0xb9
  41f2f6:	inc    ecx
  41f2f7:	inc    esp
  41f2f8:	outs   dx,DWORD PTR ds:[esi]
  41f2f9:	adc    ebp,DWORD PTR [esi+0x192bdbb2]
  41f2ff:	or     ecx,ebx
  41f301:	loop   0x41f2e2
  41f303:	mov    ch,0xe4
  41f305:	inc    edx
  41f306:	out    dx,al
  41f307:	aad    0x50
  41f309:	outs   dx,DWORD PTR ds:[esi]
  41f30a:	mov    al,ds:0xbdc709c2
  41f30f:	adc    BYTE PTR [edx-0x3f1e14cc],0xba
  41f316:	cmp    esi,ebx
  41f318:	call   0x16c077b8
  41f31d:	adc    DWORD PTR [esi+ecx*2+0x71],eax
  41f321:	repz dec esp
  41f323:	gs repnz dec ebx
  41f326:	(bad)  
  41f327:	stc    
  41f328:	sub    al,0xf7
  41f32a:	pushf  
  41f32b:	and    eax,0x8cc0df7b
  41f330:	inc    edx
  41f331:	inc    ecx
  41f332:	sahf   
  41f333:	aad    0x94
  41f335:	out    0x5e,eax
  41f337:	or     edi,DWORD PTR [esi]
  41f339:	rcl    DWORD PTR ds:0x4582a77,0xd2
  41f340:	xlat   BYTE PTR ds:[ebx]
  41f341:	add    eax,0xf7d7ccf6
  41f346:	adc    DWORD PTR ds:0x25066dd1,0xee5c6c10
  41f350:	inc    edx
  41f351:	push   ecx
  41f352:	xchg   ebp,eax
  41f353:	aas    
  41f354:	pusha  
  41f355:	inc    edx
  41f356:	pop    edi
  41f357:	cmp    eax,0x8540c502
  41f35c:	or     al,BYTE PTR [esi-0x7]
  41f35f:	mov    ecx,0xac07052f
  41f364:	and    eax,0x97d6abbe
  41f369:	push   0x5fb86551
  41f36e:	lods   al,BYTE PTR ds:[esi]
  41f36f:	iret   
  41f370:	push   esi
  41f371:	out    dx,al
  41f372:	sub    BYTE PTR [edi+0x1f],bl
  41f375:	gs push es
  41f377:	test   BYTE PTR [eax],0x2e
  41f37a:	push   es
  41f37b:	cwde   
  41f37c:	cdq    
  41f37d:	sub    al,0x82
  41f37f:	pop    es
  41f380:	inc    edx
  41f381:	mov    al,BYTE PTR [edi+0x1f185bfa]
  41f387:	repnz out 0x9e,eax
  41f38a:	xor    BYTE PTR [esi],dh
  41f38c:	mov    al,BYTE PTR [esi]
  41f38e:	mov    al,ds:0x179d0f10
  41f393:	or     al,0x60
  41f395:	push   esi
  41f396:	int3   
  41f397:	mov    dh,0x10
  41f399:	call   0x272:0x3a2f027d
  41f3a0:	std    
  41f3a1:	push   cs
  41f3a2:	or     bl,BYTE PTR [esi-0x5]
  41f3a5:	push   esi
  41f3a6:	test   eax,0x26004501
  41f3ab:	fucomi st,st(2)
  41f3ad:	add    BYTE PTR [edx],0x66
  41f3b0:	mov    cl,0xe2
  41f3b2:	lahf   
  41f3b3:	out    0x3a,al
  41f3b5:	das    
  41f3b6:	lahf   
  41f3b7:	inc    eax
  41f3b8:	ins    BYTE PTR es:[edi],dx
  41f3b9:	push   ds
  41f3ba:	sar    BYTE PTR [eiz*2+0x2b6893b6],1
  41f3c1:	jmp    0xe415a54a
  41f3c6:	(bad)  
  41f3c7:	loope  0x41f40a
  41f3c9:	sub    BYTE PTR [ecx-0x2a],dh
  41f3cc:	pop    eax
  41f3cd:	pop    ebx
  41f3ce:	shl    edx,0x11
  41f3d1:	test   dh,dl
  41f3d3:	adc    DWORD PTR [ebp+0x6e],edx
  41f3d6:	mov    ds:0x694d4c59,al
  41f3db:	pop    DWORD PTR [edi-0x17]
  41f3de:	inc    edi
  41f3df:	adc    al,0x9
  41f3e1:	ins    DWORD PTR es:[edi],dx
  41f3e2:	inc    esi
  41f3e3:	xchg   ecx,eax
  41f3e4:	pop    ds
  41f3e5:	into   
  41f3e6:	jge    0x41f439
  41f3e8:	sub    DWORD PTR [edx+eiz*8],edi
  41f3eb:	enter  0x42e,0xd2
  41f3ef:	xor    BYTE PTR ds:0xffba2071,al
  41f3f5:	mov    ecx,0x4766abc7
  41f3fa:	jae    0x41f45a
  41f3fc:	out    dx,eax
  41f3fd:	push   ds
  41f3fe:	mov    esi,0xc73b6a7d
  41f403:	xchg   BYTE PTR [eax-0x1edd3853],dh
  41f409:	lock add eax,0xda875790
  41f40f:	ins    DWORD PTR es:[edi],dx
  41f410:	push   esi
  41f411:	gs pushf 
  41f413:	dec    ebx
  41f414:	sub    BYTE PTR [ebx],0x45
  41f417:	fidivr WORD PTR [esi+0x6a817a20]
  41f41d:	scas   eax,DWORD PTR es:[edi]
  41f41e:	es add eax,0xcb094a54
  41f424:	push   ebp
  41f425:	dec    esp
  41f426:	sbb    ebp,DWORD PTR [ebx]
  41f428:	xchg   ebp,eax
  41f429:	adc    eax,0x6c247574
  41f42e:	sbb    eax,0x308bc687
  41f433:	mov    ds:0x8bc275fc,al
  41f438:	xchg   ecx,eax
  41f439:	lock retf 
  41f43b:	push   0x78
  41f43d:	ss shl bl,cl
  41f440:	fisub  DWORD PTR [esp+ebx*1+0x1fa29098]
  41f447:	ret    
  41f448:	inc    eax
  41f449:	cmpxchg DWORD PTR [edi+0x6f1f5ec9],edi
  41f450:	pop    ecx
  41f451:	out    dx,al
  41f452:	dec    esp
  41f453:	push   edi
  41f454:	pop    edi
  41f455:	enter  0xa8d,0xa7
  41f459:	jle    0x41f4a3
  41f45b:	or     ch,al
  41f45d:	ins    DWORD PTR es:[edi],dx
  41f45e:	mov    bl,0x91
  41f460:	inc    esp
  41f461:	xchg   ecx,eax
  41f462:	xchg   ecx,eax
  41f463:	(bad)  
  41f464:	(bad)  ds:0x4167f38a
  41f46a:	pop    esp
  41f46b:	jl     0x41f428
  41f46d:	jns    0x41f489
  41f46f:	mov    es,WORD PTR [eax-0x67de8a91]
  41f475:	push   edi
  41f476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f477:	(bad)  
  41f478:	in     al,dx
  41f479:	in     eax,dx
  41f47a:	adc    al,0xa7
  41f47c:	daa    
  41f47d:	dec    edx
  41f47e:	fstp   DWORD PTR [edi-0xf]
  41f481:	push   edx
  41f482:	dec    edx
  41f483:	fnstcw WORD PTR ds:0xb06fe0d3
  41f489:	push   edx
  41f48a:	test   BYTE PTR [ebx+edx*1-0x72504dab],ah
  41f491:	fisub  DWORD PTR [eax-0x45]
  41f494:	test   al,0xda
  41f496:	loopne 0x41f503
  41f498:	fild   QWORD PTR [ebx+0xe]
  41f49b:	ins    DWORD PTR es:[edi],dx
  41f49c:	out    0x33,eax
  41f49e:	or     dh,dl
  41f4a0:	dec    edx
  41f4a1:	gs mov esp,0x6f17514e
  41f4a7:	jbe    0x41f4e4
  41f4a9:	cdq    
  41f4aa:	xchg   esi,eax
  41f4ab:	stc    
  41f4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ad:	clc    
  41f4ae:	push   eax
  41f4af:	imul   DWORD PTR [edi+0x192ac5d0]
  41f4b5:	cmc    
  41f4b6:	and    al,0x80
  41f4b8:	call   0x4e57:0xdfa51669
  41f4bf:	mov    eax,ds:0x2483fd2a
  41f4c4:	sti    
  41f4c5:	sub    BYTE PTR [ebx+0x4f785083],ah
  41f4cb:	and    esp,DWORD PTR [edi+0x4cd9d0ee]
  41f4d1:	mov    eax,0x1bd1b06e
  41f4d6:	push   edi
  41f4d7:	push   0x2f
  41f4d9:	sub    esi,DWORD PTR [eax+0x1dbdd8fa]
  41f4df:	nop
  41f4e0:	in     al,0x38
  41f4e2:	cs mov ebx,0xb585afc8
  41f4e8:	(bad)  
  41f4e9:	call   0x424:0xadbff87c
  41f4f0:	jno    0x41f482
  41f4f2:	cld    
  41f4f3:	in     eax,0x3f
  41f4f5:	mov    WORD PTR [edx],fs
  41f4f7:	in     al,dx
  41f4f8:	iret   
  41f4f9:	and    esi,DWORD PTR [ebp-0x79befa6]
  41f4ff:	inc    ebx
  41f500:	(bad)  
  41f501:	mov    eax,ds:0x192d1d48
  41f506:	and    DWORD PTR [edi],0xffffffd0
  41f509:	inc    esp
  41f50a:	sti    
  41f50b:	jecxz  0x41f4fc
  41f50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f50e:	fst    DWORD PTR [ebx+0x42]
  41f511:	dec    edx
  41f512:	xor    bl,BYTE PTR [ebx-0x43]
  41f515:	sub    DWORD PTR ds:0xb4263985,ebx
  41f51b:	rcl    DWORD PTR [eax-0x19208adb],0xea
  41f522:	hlt    
  41f523:	and    BYTE PTR [edi],0xe1
  41f526:	in     al,0x4c
  41f528:	cmp    edx,eax
  41f52a:	push   edi
  41f52b:	mov    ds:0x67699fc1,eax
  41f530:	rcl    BYTE PTR [ecx-0xa],0x42
  41f534:	sub    al,0xa7
  41f536:	repnz dec esi
  41f538:	mov    esp,0x91da15b
  41f53d:	ja     0x41f5ba
  41f53f:	fisubr DWORD PTR [edi]
  41f541:	sbb    esi,eax
  41f543:	push   ebx
  41f544:	xchg   DWORD PTR [edi],esp
  41f546:	call   0x3add5103
  41f54b:	add    bl,BYTE PTR [esi]
  41f54d:	sub    eax,0x4cc52164
  41f552:	and    eax,0xb2d3b88
  41f557:	hlt    
  41f558:	or     DWORD PTR [esi+0x3b],ecx
  41f55b:	retf   0x9143
  41f55e:	stc    
  41f55f:	dec    eax
  41f560:	loop   0x41f529
  41f562:	hlt    
  41f563:	call   0x9ad4:0x4ab81343
  41f56a:	sahf   
  41f56b:	retf   0x862
  41f56e:	(bad)  
  41f56f:	aad    0x59
  41f571:	loope  0x41f5f1
  41f573:	es pop ebp
  41f575:	mov    cl,BYTE PTR [edx]
  41f577:	call   0xf67de0a1
  41f57c:	mov    BYTE PTR [edx+ebp*2-0x71],bl
  41f580:	pop    ebx
  41f581:	mov    ds:0x4f9e8aab,eax
  41f586:	(bad)  
  41f587:	mov    ds:0x3af99b7a,al
  41f58c:	xlat   BYTE PTR ds:[ebx]
  41f58d:	leave  
  41f58e:	iret   
  41f58f:	pop    edx
  41f590:	outs   dx,BYTE PTR ds:[esi]
  41f591:	mov    ebp,0x4f42ba76
  41f596:	cmp    ebx,ebx
  41f598:	stos   DWORD PTR es:[edi],eax
  41f599:	cmp    dl,BYTE PTR [ebx-0x41eadfaf]
  41f59f:	mov    eax,0xf3d63010
  41f5a4:	retf   
  41f5a5:	jbe    0x41f5cc
  41f5a7:	add    al,0xc2
  41f5a9:	pop    ecx
  41f5aa:	sub    al,BYTE PTR [ebp+0x2b]
  41f5ad:	mov    cl,dl
  41f5af:	and    BYTE PTR [ecx],bl
  41f5b1:	lahf   
  41f5b2:	mov    al,0xe2
  41f5b4:	xlat   BYTE PTR ds:[ebx]
  41f5b5:	data16 jno 0x41f606
  41f5b8:	cmp    ecx,DWORD PTR [edi-0x49be1e79]
  41f5be:	lods   eax,DWORD PTR ds:[esi]
  41f5bf:	jns    0x41f5d2
  41f5c1:	lahf   
  41f5c2:	xchg   edi,eax
  41f5c3:	and    ecx,eax
  41f5c5:	clc    
  41f5c6:	pop    ebx
  41f5c7:	lahf   
  41f5c8:	sbb    eax,0x3649656b
  41f5cd:	push   ebx
  41f5ce:	out    0xfe,al
  41f5d0:	test   al,0xcc
  41f5d2:	popw   ss
  41f5d4:	mov    al,ds:0xf4b63536
  41f5d9:	pop    ecx
  41f5da:	mov    ?,WORD PTR [edx+0x7d]
  41f5dd:	rcl    BYTE PTR [edi-0xf],cl
  41f5e0:	add    ch,BYTE PTR [ecx-0x713af1b1]
  41f5e6:	ror    DWORD PTR [ecx+eax*2],cl
  41f5e9:	(bad)  
  41f5ea:	pop    DWORD PTR [edi+0x4ebae0e6]
  41f5f0:	add    DWORD PTR [esi-0x22],ebp
  41f5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f4:	imul   bh
  41f5f6:	bound  ebp,QWORD PTR [eax+0x6c7ebe9d]
  41f5fc:	mov    edi,0xbcdec7d4
  41f601:	(bad)  
  41f602:	in     eax,0xfb
  41f604:	dec    edx
  41f605:	xchg   edx,eax
  41f606:	mov    bl,0xd1
  41f608:	sbb    eax,0xb5b151f8
  41f60d:	mov    WORD PTR [eax],fs
  41f60f:	add    DWORD PTR [edx-0x32eb57ae],0x2a3dab8b
  41f619:	jp     0x41f643
  41f61b:	call   FWORD PTR [esi+0x7b]
  41f61e:	mov    esi,0x60b89baf
  41f623:	imul   esp,DWORD PTR [eax+0x2a2361e1],0x652240aa
  41f62d:	dec    ebx
  41f62e:	outs   dx,DWORD PTR ds:[esi]
  41f62f:	pop    edi
  41f630:	jno    0x41f663
  41f632:	call   0xa790:0xaf410539
  41f639:	pop    edi
  41f63a:	rcl    DWORD PTR [ebx+0x34],0xba
  41f63e:	and    edx,DWORD PTR [ebp+ebp*8+0x13]
  41f642:	cmc    
  41f643:	xchg   ebp,eax
  41f644:	cmp    eax,0xefa5171c
  41f649:	loope  0x41f69c
  41f64b:	dec    ebx
  41f64c:	ins    BYTE PTR es:[edi],dx
  41f64d:	ror    DWORD PTR [edi-0x40315b72],1
  41f653:	mov    eax,ds:0x897b824
  41f658:	enter  0x15a9,0x92
  41f65c:	shl    BYTE PTR [edi+0x28949897],cl
  41f662:	push   ds
  41f663:	imul   ebx,DWORD PTR [esi+0xa],0xffffffb3
  41f667:	or     ah,0xe8
  41f66a:	aad    0x5d
  41f66c:	ss push es
  41f66e:	(bad)  
  41f66f:	(bad)  
  41f671:	inc    esp
  41f672:	or     cl,bl
  41f674:	dec    ecx
  41f675:	(bad)  
  41f676:	mov    ecx,0x969ef45c
  41f67b:	adc    ah,BYTE PTR ds:0x61417e25
  41f681:	jnp    0x41f6a9
  41f683:	mov    dh,0x8b
  41f685:	mov    WORD PTR cs:[ebx-0x6c],?
  41f689:	loopne 0x41f6ff
  41f68b:	sbb    DWORD PTR [edx+0x5f2601f8],esp
  41f691:	mov    dl,0x3
  41f693:	test   eax,0x6d035280
  41f698:	add    DWORD PTR [ecx-0x36],0x22
  41f69c:	lock popa 
  41f69e:	inc    esp
  41f69f:	or     al,0xc6
  41f6a1:	pop    edi
  41f6a2:	cmp    DWORD PTR [ecx],edx
  41f6a4:	and    ebx,ebx
  41f6a6:	adc    esi,ebp
  41f6a8:	lock rcr DWORD PTR [esi+0x11b723db],1
  41f6af:	hlt    
  41f6b0:	lods   eax,DWORD PTR cs:[esi]
  41f6b2:	cmp    dh,BYTE PTR [ebp-0x78]
  41f6b5:	sbb    DWORD PTR [edx],0xffffff86
  41f6b8:	loopne 0x41f646
  41f6ba:	fdivr  DWORD PTR [ebp+ebx*8-0x6c]
  41f6be:	into   
  41f6bf:	mov    eax,ds:0xf9d109c2
  41f6c4:	push   edi
  41f6c5:	frstor [edx-0x40]
  41f6c8:	fimul  DWORD PTR [eax]
  41f6ca:	mov    ebx,0xa2dbd0da
  41f6cf:	pop    esi
  41f6d0:	pop    eax
  41f6d1:	std    
  41f6d2:	shl    DWORD PTR [ebp-0x7d],0xb7
  41f6d6:	inc    eax
  41f6d7:	and    dh,bh
  41f6d9:	cmp    eax,0xffffffc1
  41f6dc:	xchg   edx,eax
  41f6dd:	lea    eax,[edi+0x5a3ee244]
  41f6e3:	mov    BYTE PTR [eax+0x6ec89810],cl
  41f6e9:	out    dx,al
  41f6ea:	pusha  
  41f6eb:	dec    edi
  41f6ec:	ins    DWORD PTR es:[edi],dx
  41f6ed:	xor    edx,DWORD PTR [edi+0x19]
  41f6f0:	mov    dh,0x5c
  41f6f2:	xor    al,0x16
  41f6f4:	clc    
  41f6f5:	in     al,0xc1
  41f6f7:	in     eax,dx
  41f6f8:	sub    DWORD PTR [edi],esi
  41f6fa:	call   0x9ce7e943
  41f6ff:	in     eax,dx
  41f700:	outs   dx,BYTE PTR ds:[esi]
  41f701:	pop    ss
  41f702:	jne    0x41f761
  41f704:	push   edx
  41f705:	retf   0xa0c7
  41f708:	xchg   edx,eax
  41f709:	(bad)  
  41f70a:	pop    eax
  41f70b:	inc    ebx
  41f70c:	stos   DWORD PTR es:[edi],eax
  41f70d:	xor    DWORD PTR [ebx],ebx
  41f70f:	push   edx
  41f710:	fimul  WORD PTR [esi]
  41f712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f713:	mov    eax,ds:0x959d0c00
  41f718:	out    dx,al
  41f719:	ins    BYTE PTR es:[edi],dx
  41f71a:	ret    0xcf03
  41f71d:	jmp    0x2648:0x8ea8870a
  41f724:	lods   al,BYTE PTR ds:[esi]
  41f725:	mov    dh,0x73
  41f727:	inc    edi
  41f728:	adc    dl,BYTE PTR [edx]
  41f72a:	nop
  41f72b:	jle    0x41f774
  41f72d:	test   al,0x2c
  41f72f:	int3   
  41f730:	mov    esi,0x7f73d325
  41f735:	push   ecx
  41f736:	xor    BYTE PTR [ecx+0x5b],0x60
  41f73a:	dec    ecx
  41f73b:	lds    ecx,FWORD PTR [ebp+edx*4+0x75]
  41f73f:	arpl   WORD PTR [ecx],bx
  41f741:	push   ds
  41f742:	adc    dl,BYTE PTR [eax-0x2b]
  41f745:	jle    0x41f6d3
  41f747:	mov    al,ds:0xb5355e34
  41f74c:	popa   
  41f74d:	cmp    eax,0x30dc1d14
  41f752:	std    
  41f753:	(bad)  
  41f755:	stos   DWORD PTR es:[edi],eax
  41f756:	xchg   ebx,eax
  41f757:	retf   0xbf03
  41f75a:	jle    0x41f76d
  41f75c:	fst    DWORD PTR [edi]
  41f75e:	jb     0x41f6e1
  41f760:	jmp    0x82aa:0x8fd09d70
  41f767:	repz in al,0x1b
  41f76a:	xor    BYTE PTR ds:[ecx+0x44aaf04f],0xe8
  41f772:	enter  0x541d,0x7f
  41f776:	hlt    
  41f777:	cdq    
  41f778:	mov    eax,0x585f720a
  41f77d:	or     BYTE PTR [edi+0x301ed631],0x98
  41f784:	add    eax,DWORD PTR [edi-0x36]
  41f787:	cli    
  41f788:	fwait
  41f789:	test   bl,dh
  41f78b:	icebp  
  41f78c:	dec    edx
  41f78d:	jmp    0x41f740
  41f78f:	xchg   ebp,eax
  41f790:	call   0x69cf:0xd799d516
  41f797:	lock push esp
  41f799:	push   esi
  41f79a:	mov    dh,0xd1
  41f79c:	mov    cl,0x93
  41f79e:	call   0xe112075c
  41f7a3:	and    eax,0xac28369e
  41f7a8:	lahf   
  41f7a9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ab:	into   
  41f7ac:	mov    al,ds:0x965e1711
  41f7b1:	(bad)  
  41f7b2:	popa   
  41f7b3:	sbb    ah,BYTE PTR [edx+eiz*2-0x1b813c76]
  41f7ba:	mov    al,0xbd
  41f7bc:	sub    al,0x57
  41f7be:	jns    0x41f76d
  41f7c0:	inc    esp
  41f7c1:	test   eax,0xed1bd326
  41f7c6:	retf   0x80db
  41f7c9:	adc    BYTE PTR [ebx],dh
  41f7cb:	rcr    DWORD PTR [eax+0x10129b39],0x4d
  41f7d2:	int    0xab
  41f7d4:	fnstenv [eax+0x60]
  41f7d7:	pushf  
  41f7d8:	aas    
  41f7d9:	in     al,dx
  41f7da:	mov    bl,0xc
  41f7dc:	cld    
  41f7dd:	add    DWORD PTR [eax],eax
  41f7df:	jg     0x41f7f2
  41f7e1:	pop    eax
  41f7e2:	sub    eax,0xc40838b2
  41f7e7:	pop    ebx
  41f7e8:	(bad)  
  41f7e9:	xor    bh,BYTE PTR [esi+eiz*2]
  41f7ec:	into   
  41f7ed:	adc    al,0x46
  41f7ef:	inc    esp
  41f7f0:	xchg   ecx,eax
  41f7f1:	jmp    0xfcc52719
  41f7f6:	mov    ds:0xdf8e057d,eax
  41f7fb:	and    esp,DWORD PTR [edi+esi*1]
  41f7fe:	jne    0x41f781
  41f800:	pop    ecx
  41f801:	into   
  41f802:	in     eax,dx
  41f803:	stc    
  41f804:	clc    
  41f805:	outs   dx,DWORD PTR ds:[esi]
  41f806:	lds    ebx,FWORD PTR [eax]
  41f808:	sbb    esi,ebp
  41f80a:	leave  
  41f80b:	xlat   BYTE PTR ds:[ebx]
  41f80c:	and    eax,0x79fb11c9
  41f811:	fidiv  DWORD PTR [eax]
  41f813:	sub    al,0x92
  41f815:	jp     0x41f86e
  41f817:	fstp   DWORD PTR [edi]
  41f819:	xchg   ecx,eax
  41f81a:	ss dec ebx
  41f81c:	or     al,cl
  41f81e:	pop    esi
  41f81f:	pop    esi
  41f820:	jno    0x41f85e
  41f822:	into   
  41f823:	arpl   cx,bp
  41f825:	mov    esp,DWORD PTR ds:0x9ac5f5eb
  41f82b:	call   0x6011daec
  41f830:	mov    al,ch
  41f832:	inc    esp
  41f833:	rcr    DWORD PTR [ebx+0x46],cl
  41f836:	hlt    
  41f837:	or     dh,dh
  41f839:	out    0x46,al
  41f83b:	fcomip st,st(7)
  41f83d:	fiadd  DWORD PTR [eax]
  41f83f:	add    edx,DWORD PTR [ecx-0x48021a8]
  41f845:	(bad)  
  41f846:	sbb    ebx,DWORD PTR [ecx-0x4]
  41f849:	inc    esi
  41f84a:	mov    ecx,0x80ace806
  41f84f:	lea    edx,[ebx+0x1d7ed78a]
  41f855:	cmp    eax,0xe15c5547
  41f85a:	into   
  41f85b:	hlt    
  41f85c:	dec    esi
  41f85d:	fsubr  st(1),st
  41f85f:	popa   
  41f860:	daa    
  41f861:	popf   
  41f862:	cwde   
  41f863:	popf   
  41f864:	push   es
  41f865:	push   ss
  41f866:	xor    al,0xec
  41f868:	add    DWORD PTR [edi-0xed05be4],0x7a0e669
  41f872:	mov    ch,0xb7
  41f874:	fwait
  41f875:	sbb    al,0xae
  41f877:	pop    ds
  41f878:	push   ss
  41f879:	mov    bh,0xa0
  41f87b:	outs   dx,BYTE PTR ds:[esi]
  41f87c:	cwde   
  41f87d:	pop    ecx
  41f87e:	out    dx,eax
  41f87f:	retf   
  41f880:	pop    DWORD PTR gs:[eax]
  41f883:	pop    es
  41f884:	pusha  
  41f885:	and    ebx,DWORD PTR [edi-0x6b]
  41f888:	pop    ds
  41f889:	push   0x7ae0158
  41f88e:	add    eax,0xe88d5996
  41f893:	sahf   
  41f894:	sbb    DWORD PTR ds:0x8ef669fa,esp
  41f89a:	push   es
  41f89b:	push   ebp
  41f89c:	mov    cl,0xca
  41f89e:	adc    BYTE PTR [edx],cl
  41f8a0:	sub    bl,dh
  41f8a2:	mov    esi,0xbd408e01
  41f8a7:	leave  
  41f8a8:	add    eax,0xb3c2be00
  41f8ad:	push   es
  41f8ae:	mov    DWORD PTR [ebx+esi*8+0x5790c8d2],edx
  41f8b5:	push   cs
  41f8b6:	push   ebp
  41f8b7:	sahf   
  41f8b8:	jns    0x41f933
  41f8ba:	dec    edx
  41f8bb:	(bad)  
  41f8bc:	sar    BYTE PTR [edi+edi*1+0x7fef57d7],cl
  41f8c3:	pop    ss
  41f8c4:	mov    ah,0x5a
  41f8c6:	(bad)  
  41f8c7:	std    
  41f8c8:	ins    BYTE PTR es:[edi],dx
  41f8c9:	inc    ebx
  41f8ca:	mov    dh,0xf5
  41f8cc:	enter  0xc35d,0x61
  41f8d0:	test   dl,cl
  41f8d2:	sbb    esi,DWORD PTR [edi+0x66]
  41f8d5:	mov    bh,0x1d
  41f8d7:	sub    DWORD PTR [ebx+0x5ce2f0e3],0x27f5d453
  41f8e1:	mov    eax,ds:0x19c5d7e4
  41f8e6:	inc    esp
  41f8e7:	dec    esp
  41f8e8:	mov    ds:0x5e0dcbe5,eax
  41f8ed:	out    0xd,al
  41f8ef:	inc    ecx
  41f8f0:	sbb    BYTE PTR [ebx+0x65],ch
  41f8f3:	push   ecx
  41f8f4:	shr    BYTE PTR [ebp+0x5a5fe3b3],cl
  41f8fa:	retf   
  41f8fb:	scas   al,BYTE PTR es:[edi]
  41f8fc:	push   edi
  41f8fd:	push   ebp
  41f8fe:	cwde   
  41f8ff:	cmp    DWORD PTR [ecx-0x58cff22e],edx
  41f905:	je     0x41f8cb
  41f907:	repnz inc esi
  41f909:	fistp  QWORD PTR [ecx]
  41f90b:	lods   eax,DWORD PTR ds:[esi]
  41f90c:	xor    al,0xfd
  41f90e:	icebp  
  41f90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f910:	xchg   ebp,eax
  41f911:	jecxz  0x41f90a
  41f913:	outs   dx,BYTE PTR ds:[esi]
  41f914:	or     edi,DWORD PTR [edi]
  41f916:	hlt    
  41f917:	pop    es
  41f918:	jge    0x41f95c
  41f91a:	mov    eax,DWORD PTR [ecx+0x578f7090]
  41f920:	mov    WORD PTR [esi+edx*2-0x21],ss
  41f924:	inc    ebp
  41f925:	push   0xffffffa8
  41f927:	js     0x41f8d7
  41f929:	sti    
  41f92a:	pusha  
  41f92b:	fs stc 
  41f92d:	pop    es
  41f92e:	popf   
  41f92f:	mov    si,0x8100
  41f933:	jp     0x41f99c
  41f935:	add    ebp,ecx
  41f937:	xchg   DWORD PTR [edx+0x35be2729],esi
  41f93d:	aaa    
  41f93e:	sbb    DWORD PTR [edi-0x50],ebx
  41f941:	inc    edx
  41f942:	cmp    DWORD PTR [ebx+0x1c],ecx
  41f945:	fnstsw WORD PTR [ebx+0xd]
  41f948:	sub    edi,DWORD PTR [ecx-0x474d28d6]
  41f94e:	pop    eax
  41f94f:	lea    ebx,[eiz*4-0x3d9b2dcc]
  41f956:	pusha  
  41f957:	jecxz  0x41f95b
  41f959:	xchg   ecx,eax
  41f95a:	xlat   BYTE PTR ds:[ebx]
  41f95b:	ret    
  41f95c:	fldcw  WORD PTR [esi+eax*1-0x57]
  41f960:	out    0x4,eax
  41f962:	in     al,0x57
  41f964:	add    DWORD PTR [ecx+eax*8-0x2f88a364],eax
  41f96b:	or     bl,BYTE PTR [edi-0x69]
  41f96e:	adc    DWORD PTR [edi-0x14],0x82f5f7cf
  41f975:	aaa    
  41f976:	fisttp WORD PTR ds:0x767064f7
  41f97c:	sbb    edi,DWORD PTR [edx+0x308ee07]
  41f982:	xchg   edi,eax
  41f983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f984:	adc    bh,BYTE PTR [ebp+0x3f]
  41f987:	mov    ah,0x1a
  41f989:	pop    esp
  41f98a:	pop    ss
  41f98b:	nop
  41f98c:	xor    bl,BYTE PTR [ebp+0x51]
  41f98f:	pop    ds
  41f990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f991:	test   eax,0x6b7965ee
  41f996:	pop    esi
  41f997:	sbb    al,0x68
  41f999:	sbb    edx,edx
  41f99b:	fbstp  TBYTE PTR [edi]
  41f99d:	mov    al,ds:0xf253ee41
  41f9a2:	(bad)  
  41f9a3:	xlat   BYTE PTR ds:[ebx]
  41f9a4:	mov    dh,0x60
  41f9a6:	dec    esi
  41f9a7:	push   edi
  41f9a8:	inc    ebx
  41f9a9:	and    eax,0x5bc6145a
  41f9ae:	inc    esi
  41f9af:	test   BYTE PTR [edi+ebx*4-0x589b471c],ah
  41f9b6:	cdq    
  41f9b7:	(bad)  
  41f9b8:	cmc    
  41f9b9:	or     al,0x18
  41f9bb:	dec    esi
  41f9bc:	cld    
  41f9bd:	and    DWORD PTR [edx+eiz*8],0x73
  41f9c1:	inc    edi
  41f9c2:	add    DWORD PTR [ebx+0xdc009fe],ecx
  41f9c8:	pop    ebx
  41f9c9:	shr    WORD PTR [ebx-0x68],cl
  41f9cd:	add    eax,DWORD PTR [ecx-0x2d]
  41f9d0:	mov    bh,0x81
  41f9d2:	inc    DWORD PTR [ecx+ebx*4+0x59]
  41f9d6:	sub    al,0x18
  41f9d8:	or     ebp,esp
  41f9da:	cmp    ah,ch
  41f9dc:	js     0x41fa14
  41f9de:	shl    edx,1
  41f9e0:	aaa    
  41f9e1:	jae    0x41fa58
  41f9e3:	lods   al,BYTE PTR ds:[esi]
  41f9e4:	or     bl,dl
  41f9e6:	push   es
  41f9e7:	or     bl,BYTE PTR [edi]
  41f9e9:	sti    
  41f9ea:	xchg   edi,eax
  41f9eb:	cli    
  41f9ec:	jp     0x41fa03
  41f9ee:	and    eax,0x88622c22
  41f9f3:	leave  
  41f9f4:	fnstsw WORD PTR ss:[ecx-0x36a952f9]
  41f9fb:	inc    eax
  41f9fc:	mov    ebx,0xdca81fad
  41fa01:	push   0x837803b5
  41fa06:	(bad)  
  41fa07:	fisub  WORD PTR [edx]
  41fa09:	and    eax,0xaddd619b
  41fa0e:	addr16 jmp 0x41f9da
  41fa11:	jmp    0x43b83d03
  41fa16:	pop    eax
  41fa17:	idiv   DWORD PTR [ebx*2+0x8af6965]
  41fa1e:	mov    ds:0x93422176,al
  41fa23:	mov    bh,0x90
  41fa25:	dec    esi
  41fa26:	retf   0x1ed4
  41fa29:	sar    BYTE PTR [ebx+0x1f],cl
  41fa2c:	mov    WORD PTR [esi],es
  41fa2e:	daa    
  41fa2f:	js     0x41fa59
  41fa31:	and    al,0xd0
  41fa33:	xchg   BYTE PTR [eax+0x33],cl
  41fa36:	sbb    ebp,DWORD PTR [edx+edx*8]
  41fa39:	sbb    DWORD PTR gs:[ebx+0xd8f3325],esi
  41fa40:	stos   BYTE PTR es:[edi],al
  41fa41:	adc    al,0xfc
  41fa43:	mov    ebp,0xe4fa18e4
  41fa48:	neg    DWORD PTR [eax+0x297ab1ca]
  41fa4e:	push   edi
  41fa4f:	in     al,dx
  41fa50:	or     eax,0xd0aae4fe
  41fa55:	sub    eax,0x7e433fc2
  41fa5a:	mov    esp,0x88dfab2b
  41fa5f:	in     al,0x21
  41fa61:	push   ebx
  41fa62:	xchg   DWORD PTR [esi+0x7e],esi
  41fa65:	aaa    
  41fa66:	xchg   ebx,eax
  41fa67:	and    eax,DWORD PTR [esi+0xf1bdfc8]
  41fa6d:	in     eax,0xd3
  41fa6f:	sub    esi,eax
  41fa71:	push   edi
  41fa72:	fld    DWORD PTR [esi+0x29]
  41fa75:	mov    eax,0x7d4e8015
  41fa7a:	pop    ecx
  41fa7b:	and    DWORD PTR [eax+0x335c9c98],edi
  41fa81:	mov    dh,0x38
  41fa83:	sbb    dh,0xe0
  41fa86:	pop    es
  41fa87:	inc    esi
  41fa88:	test   al,0xc4
  41fa8a:	pop    ecx
  41fa8b:	adc    bh,ch
  41fa8d:	adc    al,0x35
  41fa8f:	loop   0x41fa42
  41fa91:	or     ch,dl
  41fa93:	std    
  41fa94:	mov    eax,0x52ed2d24
  41fa99:	mov    esi,0x765d86b0
  41fa9e:	sub    ebp,DWORD PTR [ebx+ebx*4+0x22d982e0]
  41faa5:	pop    eax
  41faa6:	mov    edi,0x1d77cf97
  41faab:	mov    ebx,0xbcdb4a98
  41fab0:	adc    al,0xb3
  41fab2:	pop    es
  41fab3:	fmul   QWORD PTR [esi]
  41fab5:	out    dx,eax
  41fab6:	inc    edi
  41fab7:	(bad)  
  41fab8:	or     eax,0xa4efe5e1
  41fabd:	push   ebp
  41fabe:	push   0x540b8b9e
  41fac3:	and    eax,0x579a2a0c
  41fac8:	je     0x41facd
  41faca:	pop    eax
  41facb:	retf   0xb6e4
  41face:	push   esp
  41facf:	mov    ah,0x9c
  41fad1:	mov    esi,0x7433a2bd
  41fad6:	fnstcw WORD PTR [ebx]
  41fad8:	test   al,0xd1
  41fadb:	or     ecx,DWORD PTR [ebx]
  41fadd:	and    eax,0xfb9c8759
  41fae2:	sub    eax,0xe21babb0
  41fae7:	add    DWORD PTR [edi+0x3c4bc795],ebp
  41faed:	jmp    0x1fbef6bb
  41faf2:	leave  
  41faf3:	dec    eax
  41faf4:	push   es
  41faf5:	fs cmc 
  41faf7:	out    0xcf,eax
  41faf9:	test   DWORD PTR [edi+edi*1],ebx
  41fafc:	push   DWORD PTR [ebp+0x4c]
  41faff:	retf   
  41fb00:	cdq    
  41fb01:	jp     0x41fb82
  41fb03:	cdq    
  41fb04:	mov    ds:0xa5f0bc80,al
  41fb09:	cmp    BYTE PTR [esi],bl
  41fb0b:	jl     0x41face
  41fb0d:	cwde   
  41fb0e:	repnz out 0x9f,eax
  41fb11:	data16 clc 
  41fb13:	or     esp,DWORD PTR [edx+0x488a5b40]
  41fb19:	fcmovne st,st(2)
  41fb1b:	or     bl,BYTE PTR [ebx-0x4dfe91]
  41fb21:	cld    
  41fb22:	mov    edx,DWORD PTR [eax+0x63]
  41fb25:	mov    al,ds:0x2c4efef
  41fb2a:	xchg   esi,eax
  41fb2b:	sub    DWORD PTR [ebx],edi
  41fb2d:	es aam 0xf6
  41fb30:	fisubr WORD PTR [edi]
  41fb32:	js     0x41fb12
  41fb34:	loopne 0x41fadd
  41fb36:	jne    0x41fab8
  41fb38:	push   ss
  41fb39:	mov    fs,WORD PTR [ebx]
  41fb3b:	and    DWORD PTR [edi-0x73],ebp
  41fb3e:	or     al,0xba
  41fb40:	xchg   BYTE PTR [ebx-0x5d8573af],dl
  41fb46:	inc    eax
  41fb47:	dec    esi
  41fb48:	add    DWORD PTR [ecx-0x5],esi
  41fb4b:	sub    BYTE PTR [ebx-0x25],dl
  41fb4e:	fadd   DWORD PTR ds:0xd8cda344
  41fb54:	add    DWORD PTR [esp+ebx*1+0x54],esi
  41fb58:	rcl    BYTE PTR [esi],cl
  41fb5a:	loop   0x41fbda
  41fb5c:	(bad)  
  41fb5d:	jmp    0xa4703a03
  41fb62:	mov    ebx,0xd4cb812d
  41fb67:	(bad)  
  41fb68:	lea    ebp,[ecx+ecx*4]
  41fb6b:	dec    eax
  41fb6c:	popf   
  41fb6d:	jmp    0xdc18:0x7cda371c
  41fb74:	in     eax,0x51
  41fb76:	mov    eax,ds:0xae4b622d
  41fb7b:	mov    ah,0xe
  41fb7d:	clc    
  41fb7e:	dec    esp
  41fb7f:	dec    ebp
  41fb80:	jns    0x41fbf0
  41fb82:	adc    esp,ecx
  41fb84:	and    edi,ebp
  41fb86:	in     al,dx
  41fb87:	(bad)  
  41fb88:	test   DWORD PTR [eax],0xe79322e6
  41fb8e:	jge    0x41fbbd
  41fb90:	mov    al,0x2
  41fb92:	ret    0xb149
  41fb95:	enter  0x7192,0x49
  41fb99:	(bad)  
  41fb9a:	std    
  41fb9b:	add    BYTE PTR ds:0x48c59d5c,bh
  41fba1:	jae    0x41fb6c
  41fba3:	and    eax,0x190cf44b
  41fba8:	dec    ebp
  41fba9:	inc    eax
  41fbaa:	aas    
  41fbab:	loope  0x41fc10
  41fbad:	std    
  41fbae:	dec    ebp
  41fbaf:	popf   
  41fbb0:	inc    ecx
  41fbb1:	mov    ds:0x19dc24e0,al
  41fbb6:	cmp    al,0x1b
  41fbb8:	cmp    BYTE PTR [bx+di-0x2a1c],al
  41fbbd:	pop    es
  41fbbe:	xchg   BYTE PTR ds:[ebp+eax*8+0x4b9d30c3],bl
  41fbc6:	pop    ds
  41fbc7:	or     al,0x71
  41fbc9:	fidiv  WORD PTR [ebx+0x5e]
  41fbcc:	sbb    bl,BYTE PTR [ebp-0x59]
  41fbcf:	push   0xd97689a0
  41fbd4:	xchg   esi,esi
  41fbd6:	xchg   esp,eax
  41fbd7:	or     edi,DWORD PTR [esi+ecx*4-0x51]
  41fbdb:	(bad)  
  41fbdc:	xchg   ecx,eax
  41fbdd:	jnp    0x41fc00
  41fbdf:	clc    
  41fbe0:	push   0x983cddbc
  41fbe5:	jecxz  0x41fb69
  41fbe7:	cmp    eax,ebp
  41fbe9:	pop    ds
  41fbea:	jbe    0x41fc05
  41fbec:	mul    esi
  41fbee:	in     al,0x5e
  41fbf0:	and    dh,BYTE PTR [eax-0x6eb7960f]
  41fbf6:	loopne 0x41fb95
  41fbf8:	aad    0xc9
  41fbfa:	repz (bad) 
  41fbfd:	ret    0xdc39
  41fc00:	xor    DWORD PTR [edi-0x5b83216f],edi
  41fc06:	inc    esp
  41fc07:	bound  ebx,QWORD PTR [eax+0x1]
  41fc0a:	sbb    al,0xd8
  41fc0c:	dec    edi
  41fc0d:	add    eax,0xef517d17
  41fc12:	fldcw  WORD PTR [edi+0x6a168d6c]
  41fc18:	xchg   BYTE PTR [edx+0xc15f5fd],dl
  41fc1e:	stc    
  41fc1f:	xchg   al,bh
  41fc21:	clc    
  41fc22:	or     eax,0xdf0ad844
  41fc27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc28:	fmul   st(3),st
  41fc2a:	mov    WORD PTR [esi],es
  41fc2c:	pop    ss
  41fc2d:	jg     0x41fbb9
  41fc2f:	jle    0x41fbd1
  41fc31:	and    al,0xbc
  41fc33:	cs pop eax
  41fc35:	lock cmp DWORD PTR [ebx],0xa02d4b7e
  41fc3c:	jnp    0x41fc24
  41fc3e:	dec    esi
  41fc3f:	jmp    0x831d:0x9e81ec84
  41fc46:	inc    esi
  41fc47:	sti    
  41fc48:	fnstsw WORD PTR [esi+esi*2]
  41fc4b:	fstp   TBYTE PTR [edx]
  41fc4d:	in     eax,dx
  41fc4e:	outs   dx,DWORD PTR ds:[esi]
  41fc4f:	mov    edi,0x6747d42a
  41fc54:	pop    ebx
  41fc55:	inc    eax
  41fc56:	push   es
  41fc57:	bound  eax,QWORD PTR [eax]
  41fc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc5a:	xchg   edx,eax
  41fc5b:	loop   0x41fca3
  41fc5d:	outs   dx,BYTE PTR ds:[esi]
  41fc5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc5f:	mov    gs,WORD PTR [esi-0x4e]
  41fc62:	loop   0x41fbfa
  41fc64:	test   al,0xaf
  41fc66:	hlt    
  41fc67:	or     cl,ch
  41fc69:	sti    
  41fc6a:	je     0x41fc52
  41fc6c:	test   eax,0x54b0ebd9
  41fc71:	mov    bh,BYTE PTR [esi]
  41fc73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc74:	mov    esi,0x36816579
  41fc79:	jmp    DWORD PTR ds:0x9c01a42
  41fc7f:	les    esi,FWORD PTR [ebx+0x427bf8b7]
  41fc85:	hlt    
  41fc86:	adc    DWORD PTR [ebx+ebp*4-0x4c],edx
  41fc8a:	stos   BYTE PTR es:[edi],al
  41fc8b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8d:	push   ebp
  41fc8e:	and    eax,0xb2629942
  41fc93:	lds    ebp,FWORD PTR [ecx*2+0x7f8eb37f]
  41fc9a:	push   esp
  41fc9b:	sub    al,BYTE PTR [ebp-0x4dd04580]
  41fca1:	mov    bh,0x80
  41fca3:	inc    ebp
  41fca4:	push   0x44
  41fca6:	add    al,0x56
  41fca8:	hlt    
  41fca9:	test   DWORD PTR [edx],0x4f40953
  41fcaf:	or     dl,ah
  41fcb1:	(bad)  
  41fcb2:	jnp    0x41fd1e
  41fcb4:	mov    al,ds:0xed1f7fbc
  41fcb9:	sahf   
  41fcba:	jmp    0xd94f2641
  41fcbf:	bound  eax,QWORD PTR [ecx+0xc]
  41fcc2:	dec    ebx
  41fcc3:	rol    DWORD PTR [ebx+esi*8],1
  41fcc6:	and    al,0x52
  41fcc8:	or     al,0xad
  41fcca:	loopne 0x41fc96
  41fccc:	enter  0xde27,0x39
  41fcd0:	test   eax,0x96e92810
  41fcd5:	fwait
  41fcd6:	xadd   BYTE PTR [edi+0x45],bh
  41fcda:	cmp    DWORD PTR [eax+0x55],ebx
  41fcdd:	fldenv [ebx-0x5c]
  41fce0:	add    eax,0xf5fd0e7
  41fce5:	jns    0x41fccb
  41fce7:	mov    ebp,edx
  41fce9:	sub    al,0xc
  41fceb:	mov    dh,0x91
  41fced:	jmp    0x41fd4d
  41fcef:	mov    al,0xb2
  41fcf1:	addr16 dec esp
  41fcf3:	push   ecx
  41fcf4:	mov    eax,ds:0x7acfd80e
  41fcf9:	in     al,0xfa
  41fcfb:	cld    
  41fcfc:	push   edx
  41fcfd:	(bad)  
  41fcff:	xchg   DWORD PTR [esi+0x5e],ebp
  41fd02:	out    0x4f,al
  41fd04:	xor    ebx,ebx
  41fd06:	bound  edx,QWORD PTR [esi+ebx*8+0x78e3d1b1]
  41fd0d:	add    esi,edx
  41fd0f:	aaa    
  41fd10:	lods   eax,DWORD PTR ds:[esi]
  41fd11:	lods   al,BYTE PTR ds:[esi]
  41fd12:	popf   
  41fd13:	lea    ebx,[ecx-0x2d06091a]
  41fd19:	xchg   ebp,eax
  41fd1a:	mov    ds:0xe5b80454,al
  41fd1f:	or     ebx,DWORD PTR [edx+0x40]
  41fd22:	loopne 0x41fd48
  41fd24:	dec    ebp
  41fd25:	fcomp  QWORD PTR [edx]
  41fd27:	leave  
  41fd28:	inc    edx
  41fd29:	mov    eax,ds:0xd9f5b498
  41fd2e:	xor    DWORD PTR [edi],edx
  41fd30:	fisubr DWORD PTR ds:0x8a000527
  41fd36:	jmp    0xa4ad:0x4c1e0090
  41fd3d:	or     al,ah
  41fd3f:	jb     0x41fd2e
  41fd41:	cli    
  41fd42:	add    al,0xba
  41fd44:	xchg   ebx,eax
  41fd45:	adc    edi,0x555998fc
  41fd4b:	bound  edx,QWORD PTR [ebp+0x3b2a2522]
  41fd51:	sbb    DWORD PTR [esp+esi*2],ebx
  41fd54:	sti    
  41fd55:	fs jmp 0xbc040549
  41fd5b:	in     al,dx
  41fd5c:	call   FWORD PTR [ebp+0x15d847]
  41fd62:	arpl   si,ax
  41fd64:	sbb    dl,0x9f
  41fd67:	add    ecx,DWORD PTR [eax+ebx*1]
  41fd6a:	sbb    eax,0x879da528
  41fd6f:	(bad)  
  41fd70:	out    0x35,al
  41fd72:	sbb    DWORD PTR [ecx-0x44],0xe
  41fd76:	ret    0xe414
  41fd79:	cmp    al,0x32
  41fd7b:	cmp    DWORD PTR [ebx],ebx
  41fd7d:	mov    gs,WORD PTR [edx*8+0x75d7940d]
  41fd84:	inc    eax
  41fd85:	xor    eax,0x14ec0544
  41fd8a:	or     al,0xa1
  41fd8c:	rcr    BYTE PTR [ebp+eiz*8-0x24],cl
  41fd90:	jle    0x41fdfb
  41fd92:	xchg   edx,eax
  41fd93:	popa   
  41fd94:	xor    DWORD PTR [edx+edi*1-0x65],ebp
  41fd98:	jge    0x41fe00
  41fd9a:	lds    ebx,FWORD PTR [ebx+0x57]
  41fd9d:	sbb    ecx,ecx
  41fd9f:	test   eax,0x450b8c13
  41fda4:	add    DWORD PTR [esi+0x5aef2bb9],ebp
  41fdaa:	sar    edx,0xca
  41fdad:	lods   eax,DWORD PTR ds:[esi]
  41fdae:	retf   
  41fdaf:	outs   dx,DWORD PTR ds:[esi]
  41fdb0:	add    esi,edx
  41fdb2:	pop    edi
  41fdb3:	test   al,0x74
  41fdb5:	(bad)  
  41fdb6:	push   ecx
  41fdb7:	lods   eax,DWORD PTR ds:[esi]
  41fdb8:	pop    ecx
  41fdb9:	cwde   
  41fdba:	in     al,dx
  41fdbb:	je     0x41fdb8
  41fdbd:	inc    esi
  41fdbe:	mov    bh,BYTE PTR [edi+esi*1]
  41fdc1:	es push edx
  41fdc3:	jmp    0x3e0dba99
  41fdc8:	cmp    al,0x5e
  41fdca:	shr    ch,1
  41fdcc:	sub    al,0x5a
  41fdce:	push   esi
  41fdcf:	and    al,0x87
  41fdd1:	sub    DWORD PTR [ecx+0x111be7d3],0xffffffff
  41fdd8:	push   edx
  41fdd9:	dec    esp
  41fdda:	(bad)  
  41fddc:	scas   eax,DWORD PTR es:[edi]
  41fddd:	loop   0x41fdb2
  41fddf:	out    0x36,eax
  41fde1:	push   ebx
  41fde2:	add    BYTE PTR [esp+ecx*2],0xcf
  41fde6:	fadd   QWORD PTR [esi-0x26ea090a]
  41fdec:	or     ecx,DWORD PTR [edi+ecx*4-0x19a94552]
  41fdf3:	adc    BYTE PTR [ebp-0x1e],0x18
  41fdf7:	add    eax,0xc3eeec5f
  41fdfd:	out    0xe6,eax
  41fdff:	sub    al,0x5b
  41fe01:	das    
  41fe02:	js     0x41fd97
  41fe04:	jae    0x41fd91
  41fe06:	fcom   QWORD PTR [esi]
  41fe08:	or     DWORD PTR [eax],edx
  41fe0a:	xchg   ecx,eax
  41fe0b:	imul   esp,DWORD PTR [ebp+0x654a8f5],0xad83da96
  41fe15:	xchg   ecx,eax
  41fe16:	push   ds
  41fe17:	cmp    DWORD PTR [ebx*1-0xf9a750c],esp
  41fe1e:	jno    0x41fdeb
  41fe20:	pop    ebx
  41fe21:	cs stc 
  41fe23:	popf   
  41fe24:	sti    
  41fe25:	aas    
  41fe26:	call   0xf453d63f
  41fe2b:	rcl    DWORD PTR [ebp-0x69405176],0xa0
  41fe32:	jae    0x41fdd7
  41fe34:	mov    ch,0x4a
  41fe36:	sub    DWORD PTR [ecx+0x61],esp
  41fe39:	ret    
  41fe3a:	pop    es
  41fe3b:	jge    0x41fe8c
  41fe3d:	dec    ebp
  41fe3e:	retf   
  41fe3f:	adc    esi,DWORD PTR [esp+ebx*8+0x55276b8a]
  41fe46:	and    al,0x5e
  41fe48:	ss rep stos DWORD PTR es:[edi],eax
  41fe4b:	jne    0x41fe7e
  41fe4d:	push   edx
  41fe4e:	loopne 0x41fe9a
  41fe50:	dec    eax
  41fe51:	vpmaddwd ymm1,ymm2,ymm0
  41fe55:	pop    ss
  41fe56:	clc    
  41fe57:	seto   ah
  41fe5a:	xchg   ebx,eax
  41fe5b:	ror    BYTE PTR [ecx+esi*4+0x637d8764],0x29
  41fe63:	add    DWORD PTR [ebp+0x1f4d097c],0x9a7bde81
  41fe6d:	jmp    0xd7b1664d
  41fe72:	inc    edx
  41fe73:	std    
  41fe74:	pop    eax
  41fe75:	and    edx,ebx
  41fe77:	xor    BYTE PTR [eax],0xf1
  41fe7a:	arpl   WORD PTR [ebp+0x4],ax
  41fe7d:	mov    dh,0xf6
  41fe7f:	mov    DWORD PTR [edi],eax
  41fe81:	mov    BYTE PTR [esi+0x3d18206e],ah
  41fe87:	adc    BYTE PTR [eax],cl
  41fe89:	cmp    al,0x56
  41fe8b:	adc    eax,0xcc2bda22
  41fe90:	jne    0x41fe43
  41fe92:	in     al,dx
  41fe93:	cmc    
  41fe94:	in     al,dx
  41fe95:	test   DWORD PTR [eax-0x6c3d736e],ebx
  41fe9b:	rcl    DWORD PTR [ebx+0x17b41df3],0x8c
  41fea2:	sub    al,0xf1
  41fea4:	jmp    0x41ff00
  41fea6:	cmp    ch,dh
  41fea8:	and    bh,BYTE PTR [edx+0x48fa3c2c]
  41feae:	loope  0x41ff05
  41feb0:	call   0x4b670e65
  41feb5:	ss iret 
  41feb7:	shr    DWORD PTR [ebx-0x70],cl
  41feba:	jbe    0x41fefd
  41febc:	ja     0x41ff26
  41febe:	pop    ebp
  41febf:	dec    ebx
  41fec0:	outs   dx,BYTE PTR ds:[esi]
  41fec1:	jno    0x41ff29
  41fec3:	imul   ebx,DWORD PTR [ecx-0x5a],0xf
  41fec7:	dec    eax
  41fec8:	xor    ebp,DWORD PTR [ebx+edi*8-0x2ed230fa]
  41fecf:	pop    ds
  41fed0:	cmp    al,0xb1
  41fed2:	dec    esp
  41fed3:	pop    es
  41fed4:	adc    DWORD PTR [esi-0x76aedf43],0x8300ab00
  41fede:	and    ch,bl
  41fee0:	loope  0x41ff5a
  41fee2:	jle    0x41fef2
  41fee4:	loopne 0x41fedb
  41fee6:	daa    
  41fee7:	rol    BYTE PTR [esi],0x10
  41feea:	pop    ds
  41feeb:	sub    DWORD PTR [esi],edx
  41feed:	inc    ecx
  41feee:	add    ebx,DWORD PTR [ebp+edx*1-0x5cc38b95]
  41fef5:	push   es
  41fef6:	sbb    DWORD PTR ds:0xd9fb1673,0x76cc2c3a
  41ff00:	push   edi
  41ff01:	test   DWORD PTR [ebp-0x5b],0xd7f36346
  41ff08:	push   0x712edf78
  41ff0d:	test   ch,0x96
  41ff10:	in     al,0xf2
  41ff12:	in     eax,dx
  41ff13:	pop    edi
  41ff14:	int3   
  41ff15:	pop    esp
  41ff16:	stos   BYTE PTR es:[edi],al
  41ff17:	mov    esp,0x94e18437
  41ff1c:	lahf   
  41ff1d:	jo     0x41ff03
  41ff1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff20:	test   DWORD PTR [edi+0x12133479],ecx
  41ff26:	daa    
  41ff27:	repnz xchg edi,eax
  41ff29:	sbb    ebx,0x6c5cfea2
  41ff2f:	lods   eax,DWORD PTR fs:[esi]
  41ff31:	jo     0x41ff1b
  41ff33:	jnp    0x41ff32
  41ff35:	fidivr WORD PTR [eax+0x6b]
  41ff38:	in     al,0x34
  41ff3a:	aam    0x5d
  41ff3c:	cmc    
  41ff3d:	in     al,dx
  41ff3e:	(bad)  
  41ff40:	ss xor eax,eax
  41ff43:	jne    0x41ff24
  41ff45:	or     al,0x2a
  41ff47:	out    dx,al
  41ff48:	pushf  
  41ff49:	cmp    edx,DWORD PTR [edi+0x34]
  41ff4c:	pop    es
  41ff4d:	adc    DWORD PTR [esi-0x59db8e6b],eax
  41ff53:	xchg   ebx,eax
  41ff54:	aas    
  41ff55:	pop    ecx
  41ff56:	fadd   st,st(2)
  41ff58:	hlt    
  41ff59:	jnp    0x41ff2d
  41ff5b:	mov    WORD PTR [eax+0x8],fs
  41ff5e:	fucom  st(5)
  41ff60:	cli    
  41ff61:	pop    ebx
  41ff62:	outs   dx,DWORD PTR ds:[esi]
  41ff63:	xor    al,BYTE PTR ds:0x1a2c85a2
  41ff69:	and    BYTE PTR [ebx],ah
  41ff6b:	bound  esp,QWORD PTR ss:[eax-0x74]
  41ff6f:	fwait
  41ff70:	pop    ebp
  41ff71:	mov    dl,0x98
  41ff73:	adc    ebp,DWORD PTR [bx+di]
  41ff76:	mov    BYTE PTR [ecx],ah
  41ff78:	add    DWORD PTR [ebx+0x5b],esi
  41ff7b:	aaa    
  41ff7c:	repz pop ecx
  41ff7e:	repnz dec edx
  41ff80:	mov    ebx,ecx
  41ff82:	nop
  41ff83:	(bad)  
  41ff85:	add    al,0xb7
  41ff87:	addr16 dec edi
  41ff89:	sbb    eax,0x6fedbd09
  41ff8e:	mov    ah,0xb1
  41ff90:	push   esi
  41ff91:	mov    dl,0x3a
  41ff93:	call   0x4d0c:0x374fe1e5
  41ff9a:	cld    
  41ff9b:	inc    ebp
  41ff9c:	fiadd  WORD PTR ds:[edi-0x310a89aa]
  41ffa3:	lahf   
  41ffa4:	cmp    DWORD PTR [edx],0xa1028471
  41ffaa:	pop    ebp
  41ffab:	int3   
  41ffac:	mov    edi,0x87931bfc
  41ffb1:	ins    BYTE PTR es:[edi],dx
  41ffb2:	dec    edx
  41ffb3:	rol    DWORD PTR [edi],cl
  41ffb5:	in     al,0x60
  41ffb7:	mov    ebx,0x326535d1
  41ffbc:	rol    DWORD PTR [edi-0x34],1
  41ffbf:	inc    eax
  41ffc0:	into   
  41ffc1:	xchg   esi,eax
  41ffc2:	ja     0x41ff7e
  41ffc4:	or     al,0xba
  41ffc7:	out    0x5a,eax
  41ffc9:	stc    
  41ffca:	cmp    ecx,DWORD PTR [esi+0xea2762d]
  41ffd0:	loope  0x41ff8e
  41ffd2:	mov    edi,0xbdb9e706
  41ffd7:	mov    BYTE PTR [ebx+0x42507b4],0xaa
  41ffde:	adc    DWORD PTR [edi-0x28],ecx
  41ffe1:	add    al,BYTE PTR [eax+0x72dda2f1]
  41ffe7:	outs   dx,DWORD PTR ds:[esi]
  41ffe8:	sub    ebx,DWORD PTR [edi-0x12a7efd9]
  41ffee:	adc    bl,BYTE PTR [esi+0x57]
  41fff1:	inc    eax
  41fff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fff4:	adc    al,0x97
  41fff6:	adc    BYTE PTR [edi],dh
  41fff8:	bound  ebp,QWORD PTR [ecx]
  41fffa:	(bad)  
  41fffb:	std    
  41fffc:	jecxz  0x41ffea
  41fffe:	sub    eax,0x3da260cf
  420003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420004:	jns    0x420044
  420006:	mov    edi,0x5739113b
  42000b:	mov    ecx,0x99626ac7
  420010:	fninit 
  420012:	dec    ebx
  420013:	test   al,0x5e
  420015:	or     BYTE PTR ds:0xd88fbd08,0x8f
  42001c:	push   ebp
  42001d:	fnstenv [ebp+0x5277809a]
  420023:	push   edi
  420024:	in     al,0xc4
  420026:	mov    ebp,0x4397d922
  42002b:	dec    eax
  42002c:	xor    esi,DWORD PTR [ebx-0x1382f3c5]
  420032:	cli    
  420033:	mov    eax,ds:0x54ec71
  420038:	sub    ebx,DWORD PTR [ebx]
  42003a:	pop    ebx
  42003b:	shr    BYTE PTR [esi+0x73],1
  42003e:	(bad)  [edx]
  420040:	rol    ecx,0x6
  420043:	sub    esi,edi
  420045:	push   edx
  420046:	xor    eax,0x83dd3683
  42004b:	fisttp QWORD PTR [ebp+ebx*2-0x43]
  42004f:	inc    edx
  420050:	adc    al,bl
  420052:	lock cli 
  420054:	cmp    al,BYTE PTR [ebx-0x11]
  420057:	lods   al,BYTE PTR ds:[esi]
  420058:	cmp    bl,BYTE PTR [ebx-0x6b]
  42005b:	or     DWORD PTR [ecx],0xa456e073
  420061:	or     eax,0x657d2597
  420066:	fisub  DWORD PTR [ecx+esi*8+0x30]
  42006a:	mul    BYTE PTR [esi]
  42006c:	xchg   edx,ecx
  42006e:	out    dx,eax
  42006f:	adc    al,0xb9
  420071:	push   ss
  420072:	jg     0x420082
  420074:	sbb    DWORD PTR ds:0xc0a7e6e,esp
  42007a:	xor    DWORD PTR [ecx],esi
  42007c:	hlt    
  42007d:	sbb    ebx,DWORD PTR [ebp+0x5]
  420080:	jb     0x420082
  420082:	and    eax,0xbd2a41bc
  420087:	pcmpeqb mm5,mm2
  42008a:	pop    ebp
  42008b:	std    
  42008c:	getsec 
  42008e:	out    0xb4,eax
  420090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420091:	add    dl,BYTE PTR [edi-0x12df9b6a]
  420097:	out    dx,al
  420098:	dec    DWORD PTR [ecx-0x2c]
  42009b:	shl    esi,0x6d
  42009e:	push   ebp
  42009f:	pop    esi
  4200a0:	test   DWORD PTR [eax+esi*8-0x3e],ebx
  4200a4:	sbb    al,0x54
  4200a6:	in     al,0x5
  4200a8:	stc    
  4200a9:	push   ebp
  4200aa:	add    esp,esp
  4200ac:	inc    BYTE PTR [eax+0x7dfb2a42]
  4200b2:	cwde   
  4200b3:	(bad)
  4200b6:	push   ebp
  4200b7:	sub    BYTE PTR [eax],0xdb
  4200ba:	or     dh,bh
  4200bc:	lock push ebp
  4200be:	dec    edi
  4200bf:	adc    eax,0x5af3f34c
  4200c5:	cmp    DWORD PTR [ebx+0x65],ebx
  4200c8:	mov    ebx,0x6b2c7aa5
  4200cd:	shl    BYTE PTR [edi+0x36],0x23
  4200d1:	mov    ebp,0x104a528c
  4200d6:	mov    ah,0xad
  4200d8:	dec    ebp
  4200d9:	int3   
  4200da:	jns    0x4200d8
  4200dc:	shr    ch,1
  4200de:	bound  edx,QWORD PTR [ebp-0x71]
  4200e1:	adc    dh,BYTE PTR [eax*1+0xb35282]
  4200e8:	mov    bl,0x5c
  4200ea:	jge    0x420151
  4200ec:	xchg   ebx,eax
  4200ed:	mov    bl,0x1b
  4200ef:	xchg   ecx,eax
  4200f0:	mov    dh,0xa6
  4200f2:	xchg   ecx,eax
  4200f3:	mov    ebx,0x2c0d789d
  4200f8:	jp     0x4200ef
  4200fa:	fist   DWORD PTR [ebp-0xd5f09c6]
  420100:	mov    al,ds:0x368a9032
  420105:	lahf   
  420106:	scas   eax,DWORD PTR es:[edi]
  420107:	mov    bl,0xb4
  420109:	stos   BYTE PTR es:[edi],al
  42010a:	mov    bl,0xc
  42010c:	loopne 0x420099
  42010e:	xchg   si,ax
  420110:	cli    
  420111:	ins    DWORD PTR es:[edi],dx
  420112:	sbb    DWORD PTR [ebx+0x4d69d338],edi
  420118:	inc    esi
  420119:	scas   al,BYTE PTR es:[edi]
  42011a:	outs   dx,DWORD PTR ds:[esi]
  42011b:	cmp    esp,DWORD PTR [ebp-0x620096d7]
  420121:	pushf  
  420122:	das    
  420123:	stc    
  420124:	cmp    al,0xd2
  420126:	mov    ch,0xad
  420128:	les    edx,FWORD PTR [ebp+0x26]
  42012b:	out    0x16,al
  42012d:	mov    ecx,0xfa7bb69d
  420132:	pop    esi
  420133:	(bad)
  420136:	inc    eax
  420137:	mov    bh,0xa5
  420139:	fbld   TBYTE PTR [edi-0x6efa8728]
  42013f:	adc    ax,WORD PTR [edi+0xff5eaa3]
  420146:	stos   DWORD PTR es:[edi],eax
  420147:	(bad)  
  420148:	test   dl,0x44
  42014b:	dec    eax
  42014c:	sbb    edx,eax
  42014e:	or     al,0x38
  420150:	(bad)  
  420151:	(bad)  
  420152:	xchg   ecx,eax
  420153:	cmp    BYTE PTR [esi],0xff
  420156:	psubusb mm4,mm0
  420159:	or     BYTE PTR [edi-0x222156e9],ah
  42015f:	(bad)  
  420160:	stos   DWORD PTR es:[edi],eax
  420161:	out    dx,eax
  420162:	popf   
  420163:	stc    
  420164:	aam    0x76
  420166:	aas    
  420167:	mov    ebx,0xeecbdbe3
  42016c:	call   0xe982e8d1
  420171:	add    ch,0xa7
  420174:	cdq    
  420175:	cli    
  420176:	repz (bad)
  420179:	pop    edx
  42017a:	inc    esi
  42017b:	dec    eax
  42017c:	add    al,0x3a
  42017e:	ds inc edx
  420180:	imul   ebx,DWORD PTR [ebx-0x69],0xffffffdb
  420184:	outs   dx,DWORD PTR ds:[esi]
  420185:	mov    fs,WORD PTR [ebp+ebp*4+0x3a]
  420189:	scas   al,BYTE PTR es:[edi]
  42018a:	pop    esi
  42018b:	mov    BYTE PTR [edx-0x6c956e1],ah
  420191:	popf   
  420192:	push   cs
  420193:	and    bl,BYTE PTR [ecx-0x16]
  420196:	jl     0x42016c
  420198:	stos   DWORD PTR es:[edi],eax
  420199:	mov    cl,0x12
  42019b:	lahf   
  42019c:	ins    DWORD PTR es:[edi],dx
  42019d:	enter  0xf814,0x27
  4201a1:	enter  0x32da,0x94
  4201a5:	add    eax,0xde0ae20d
  4201aa:	sar    BYTE PTR [edx+0x52],0x1f
  4201ae:	push   ss
  4201af:	sbb    ah,BYTE PTR [eax+0x29]
  4201b2:	mov    eax,0xfe3eb436
  4201b7:	mov    ds:0x240d7b9f,al
  4201bc:	dec    ecx
  4201bd:	mov    eax,0xfe19a0e3
  4201c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c3:	imul   ecx,DWORD PTR [eax],0xfffffff5
  4201c6:	cmp    al,0xa5
  4201c8:	xlat   BYTE PTR ds:[ebx]
  4201c9:	loope  0x4201e2
  4201cb:	mov    al,ds:0xc328f314
  4201d0:	push   DWORD PTR [ecx-0x57]
  4201d3:	in     eax,0x31
  4201d5:	(bad)  
  4201d6:	arpl   dx,bp
  4201d8:	inc    ecx
  4201d9:	inc    edi
  4201da:	pop    edi
  4201db:	loope  0x4201e1
  4201dd:	pop    eax
  4201de:	cmp    esp,DWORD PTR [edi-0x1b22f3a8]
  4201e4:	test   BYTE PTR [eax-0x6d],bh
  4201e7:	int    0xf0
  4201e9:	fild   WORD PTR [esi]
  4201eb:	adc    esp,eax
  4201ed:	sbb    eax,0xb66d5966
  4201f2:	inc    eax
  4201f3:	in     eax,dx
  4201f4:	xor    eax,0x6993bea9
  4201f9:	fwait
  4201fa:	clc    
  4201fb:	lea    ebp,[esi]
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	inc    ebx
  4201ff:	popf   
  420200:	sbb    eax,0xd1fcad41
  420205:	ins    BYTE PTR es:[edi],dx
  420206:	stos   BYTE PTR es:[edi],al
  420207:	pop    ecx
  420208:	cli    
  420209:	xchg   DWORD PTR [eax-0x18387c18],edi
  42020f:	mov    cl,0x28
  420211:	jmp    0xe548e720
  420216:	mov    edi,0x9617b80a
  42021b:	bound  edx,QWORD PTR [edi-0x1b25263]
  420221:	sub    BYTE PTR [edx],bl
  420223:	xlat   BYTE PTR ds:[ebx]
  420224:	jl     0x4201b6
  420226:	jbe    0x4201fb
  420228:	pop    ebp
  420229:	mov    ebp,0x616cfa1b
  42022e:	aam    0x6
  420230:	jae    0x420296
  420232:	fcomp  DWORD PTR [esi+0x2acb28b1]
  420238:	lds    ebp,FWORD PTR [edi+0x64]
  42023b:	xchg   ebx,eax
  42023c:	sbb    eax,0xc01eeb21
  420241:	cmp    al,0x75
  420243:	aad    0x2a
  420245:	(bad)  
  420246:	mov    ch,0xcf
  420248:	rcr    DWORD PTR [eax+esi*2-0x79],cl
  42024c:	push   0x40
  42024e:	inc    ecx
  42024f:	fsub   QWORD PTR [ebx+0x325d177e]
  420255:	test   BYTE PTR [edi+0x14f2b7ea],ah
  42025b:	mov    edx,0xee5d3298
  420260:	xchg   ecx,eax
  420261:	rol    DWORD PTR [ecx+0x23a1df65],cl
  420267:	jmp    0xe62d:0xb084825c
  42026e:	push   eax
  42026f:	out    dx,eax
  420270:	pushf  
  420271:	jne    0x4202cc
  420273:	cmp    BYTE PTR [eax+0x58],dl
  420276:	jae    0x4202ab
  420278:	fcmovu st,st(1)
  42027a:	xchg   ebp,eax
  42027b:	xchg   ecx,eax
  42027c:	shr    DWORD PTR [ebx-0x3b],cl
  42027f:	xchg   BYTE PTR [eax+ebp*4],bl
  420282:	adc    al,0xa
  420284:	push   ds
  420285:	sbb    dh,BYTE PTR [ecx]
  420287:	mov    eax,ds:0x891e3778
  42028c:	test   BYTE PTR [eax-0x6a],ch
  42028f:	ds retf 0xafbe
  420293:	sub    ah,bl
  420295:	pop    esp
  420296:	in     al,0xe5
  420298:	xor    edi,esi
  42029a:	call   0x885f:0x101c
  4202a0:	or     ch,ch
  4202a2:	mov    ecx,0x259000cc
  4202a7:	inc    ecx
  4202a8:	jb     0x420322
  4202aa:	data16 jb 0x4202be
  4202ad:	push   esp
  4202ae:	xchg   edi,eax
  4202af:	test   DWORD PTR [ebx-0x45],ebx
  4202b2:	ins    BYTE PTR es:[edi],dx
  4202b3:	xchg   bl,ch
  4202b5:	pop    edx
  4202b6:	pop    esp
  4202b7:	sbb    BYTE PTR [edi+0x998b125],bh
  4202bd:	add    cl,dl
  4202bf:	add    DWORD PTR [eax-0x4c],eax
  4202c2:	dec    esp
  4202c3:	fdivr  QWORD PTR [edx-0x31]
  4202c6:	push   0x9ba6f3bf
  4202cb:	mov    ch,0x56
  4202cd:	xchg   BYTE PTR [esi+0x3fc358ca],cl
  4202d3:	sub    eax,0xd4500255
  4202d8:	pop    ds
  4202d9:	leave  
  4202da:	sbb    bl,dh
  4202dc:	sbb    bh,dl
  4202de:	cmc    
  4202df:	clc    
  4202e0:	mov    cl,0x77
  4202e2:	add    BYTE PTR [ebx-0x34],dh
  4202e5:	loopne 0x420288
  4202e7:	xor    eax,DWORD PTR [esi+0x37]
  4202ea:	inc    esi
  4202eb:	sbb    BYTE PTR [eax+0x65],0x91
  4202ef:	push   cs
  4202f0:	sub    al,0xa1
  4202f2:	add    al,0xbe
  4202f4:	mov    ebx,0x98c51435
  4202f9:	mov    ax,ds:0xc1662769
  4202ff:	xor    esi,DWORD PTR ds:0x364b843e
  420305:	sub    eax,0x115bef5c
  42030a:	mov    al,ch
  42030c:	mov    eax,0xee799cf7
  420311:	push   ss
  420312:	xchg   ebx,eax
  420313:	ret    
  420314:	lods   al,BYTE PTR ds:[esi]
  420315:	(bad)  
  420316:	call   0x4cd3:0xf9004f4b
  42031d:	ficom  DWORD PTR [esi-0x404bfbe1]
  420323:	mov    esi,0xb43894eb
  420328:	dec    ebx
  420329:	jb     0x42035c
  42032b:	scas   eax,DWORD PTR es:[edi]
  42032c:	dec    esi
  42032d:	cmp    al,0x96
  42032f:	cwde   
  420330:	aas    
  420331:	pushf  
  420332:	shl    BYTE PTR [edi],1
  420334:	shl    BYTE PTR [edx],1
  420336:	inc    edi
  420337:	ss cmp eax,0x78faca1c
  42033d:	jge    0x420319
  42033f:	sub    edi,DWORD PTR [ebp+0x38]
  420342:	dec    edx
  420343:	jns    0x420328
  420345:	jle    0x420340
  420347:	dec    ebx
  420348:	pop    ds
  420349:	xchg   esp,eax
  42034a:	repz aas 
  42034c:	imul   esi,esi,0x6f18077d
  420352:	retf   0x2a08
  420355:	push   cs
  420356:	push   eax
  420357:	mov    eax,0x8507fc31
  42035c:	fdivr  st,st(1)
  42035e:	inc    ebx
  42035f:	(bad)  
  420360:	pushf  
  420361:	mov    WORD PTR cs:[eax-0x54b15047],es
  420368:	int3   
  420369:	loopne 0x42031b
  42036b:	out    dx,al
  42036c:	and    ebx,DWORD PTR [esi]
  42036e:	pop    ebx
  42036f:	lods   eax,DWORD PTR ds:[esi]
  420370:	mov    eax,ss
  420372:	adc    ah,bl
  420374:	jmp    0x42038e
  420376:	sub    dl,ch
  420378:	ins    BYTE PTR es:[edi],dx
  420379:	into   
  42037a:	sub    al,0x85
  42037c:	adc    al,0xb7
  42037e:	test   BYTE PTR [ecx],bh
  420380:	cdq    
  420381:	xor    DWORD PTR ds:0x2e4d8651,edi
  420387:	add    dh,0xbd
  42038a:	cmp    dl,BYTE PTR [eax+0x26]
  42038d:	pop    ebx
  42038e:	cs ins DWORD PTR es:[edi],dx
  420390:	or     dh,ch
  420392:	jmp    0x9db7:0xf8888f33
  420399:	gs pop eax
  42039b:	sti    
  42039c:	std    
  42039d:	push   esp
  42039e:	xor    BYTE PTR [ebx-0x659ffde9],dl
  4203a4:	call   0xad87ca54
  4203a9:	adc    eax,0x2e7d1f51
  4203ae:	xchg   edx,eax
  4203af:	xchg   ecx,eax
  4203b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203b1:	xor    eax,0x18e149a6
  4203b6:	mov    ch,0x1d
  4203b8:	xchg   edi,eax
  4203b9:	and    DWORD PTR [ecx+ebp*8-0x2377ada0],ebp
  4203c0:	(bad)  
  4203c2:	dec    edi
  4203c3:	dec    edi
  4203c4:	mov    ecx,0xbc6ea8a2
  4203c9:	test   BYTE PTR [edi+0x474fe8e8],0x79
  4203d0:	dec    edx
  4203d1:	sbb    ebp,DWORD PTR [eax+0x4c68e834]
  4203d7:	stc    
  4203d8:	js     0x420457
  4203da:	fstp   QWORD PTR [ebp+ecx*2-0x659d76c]
  4203e1:	mov    al,ds:0x89b4fcd0
  4203e6:	jae    0x420435
  4203e8:	inc    esi
  4203ea:	bound  ecx,QWORD PTR [ebx+0x6b]
  4203ed:	lock lea edi,[esi]
  4203f0:	adc    al,0xf5
  4203f2:	fs retf 
  4203f4:	call   0x295f:0x2541674e
  4203fb:	mov    esi,0x20cc44bb
  420400:	xchg   edx,eax
  420401:	mov    BYTE PTR [esi-0x10],dl
  420404:	adc    edx,DWORD PTR ds:0xafe667c1
  42040a:	adc    ch,BYTE PTR [eax]
  42040c:	jmp    0x6fc49ad7
  420411:	pop    ss
  420412:	iret   
  420413:	xchg   DWORD PTR [eax+0x64],ecx
  420416:	ja     0x42046b
  420418:	loopne 0x420408
  42041a:	dec    ebx
  42041b:	mov    ch,0x1e
  42041d:	cmp    BYTE PTR [ecx],ah
  42041f:	sbb    al,0x1f
  420421:	and    al,0x31
  420423:	(bad)
  420427:	outs   dx,DWORD PTR ds:[esi]
  420428:	mov    bh,0xf8
  42042a:	pop    ebp
  42042b:	xor    dh,BYTE PTR [ebp+0x7d]
  42042e:	pop    esi
  42042f:	push   esi
  420430:	cmp    al,0xb
  420432:	dec    ebx
  420433:	jg     0x420422
  420435:	inc    ebp
  420436:	adc    BYTE PTR ds:0xe63ffbcd,al
  42043c:	xor    DWORD PTR [esi-0x6e3a9e93],ebp
  420442:	dec    ebx
  420443:	popa   
  420444:	imul   DWORD PTR [ebx]
  420446:	xchg   edi,eax
  420447:	fistp  WORD PTR [eax]
  420449:	test   eax,0x5fc80
  42044e:	out    0x18,al
  420450:	dec    eax
  420451:	ret    
  420452:	adc    eax,0x63bc4ca2
  420457:	cld    
  420458:	or     BYTE PTR [edx-0x6b],0xc9
  42045c:	in     eax,dx
  42045d:	cwde   
  42045e:	call   0x410c:0x2ac9022f
  420465:	fwait
  420466:	xor    BYTE PTR [ebp+0x1051e17b],bh
  42046c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046d:	jp     0x42049d
  42046f:	mov    esi,0xbc97304a
  420474:	stos   BYTE PTR es:[edi],al
  420475:	sub    eax,0xc2ff8676
  42047a:	mov    al,ds:0x4c9bcdcf
  42047f:	imul   esi,DWORD PTR fs:[esi],0x5
  420483:	hlt    
  420484:	retf   
  420485:	push   esi
  420486:	jmp    0xed6f:0x2693936a
  42048d:	call   FWORD PTR [esp+eiz*8]
  420490:	or     eax,0x5d483552
  420495:	outs   dx,BYTE PTR ds:[esi]
  420496:	rcl    DWORD PTR [edi+0x55],0xdf
  42049a:	js     0x420467
  42049c:	(bad)  
  42049d:	mov    ch,0x63
  42049f:	dec    ebx
  4204a0:	push   es
  4204a1:	push   ecx
  4204a2:	(bad)  
  4204a4:	sub    DWORD PTR [eax+0x19aa5cb8],ebp
  4204aa:	sub    BYTE PTR [ecx+0x3e0f922f],0xf1
  4204b1:	test   al,0xb7
  4204b3:	in     eax,0xb5
  4204b5:	push   ds
  4204b6:	xchg   esi,eax
  4204b7:	mov    eax,ds:0xa10c4fdd
  4204bc:	iret   
  4204bd:	clc    
  4204be:	push   0x7
  4204c0:	and    ah,BYTE PTR [edx]
  4204c2:	mov    al,ds:0xec91a3a1
  4204c7:	push   edx
  4204c8:	jmp    0x82016a32
  4204cd:	push   eax
  4204ce:	pop    ebx
  4204cf:	div    BYTE PTR [edx+0x79]
  4204d2:	call   0xc8fb03ff
  4204d7:	aaa    
  4204d8:	lock loop 0x420472
  4204db:	adc    eax,DWORD PTR [edi+0x2d1d3331]
  4204e1:	not    DWORD PTR [eax-0x75f0e2cd]
  4204e7:	dec    esp
  4204e8:	ds pop es
  4204ea:	push   esi
  4204eb:	xor    BYTE PTR [ecx-0x45],0xe7
  4204ef:	imul   esp,DWORD PTR [ebx],0x61edd132
  4204f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f6:	ins    BYTE PTR es:[edi],dx
  4204f7:	or     al,0x25
  4204f9:	lea    esi,[edi]
  4204fb:	(bad)  
  4204fc:	(bad)  
  4204fd:	dec    eax
  4204fe:	mov    ebp,0x476e5526
  420503:	push   eax
  420504:	out    0xd9,eax
  420506:	call   0xdffe:0xa4c645d1
  42050d:	dec    edi
  42050e:	fs push ecx
  420510:	sbb    BYTE PTR ds:0x62565336,ch
  420516:	fwait
  420517:	sbb    BYTE PTR [ebp-0x1d6231d0],cl
  42051d:	dec    esi
  42051e:	rcr    DWORD PTR [edx],0x2c
  420521:	xor    esp,DWORD PTR [ecx-0x75]
  420524:	adc    al,0x94
  420526:	add    BYTE PTR [ebx+0x6d],0x1e
  42052a:	cmp    edi,edx
  42052c:	inc    edi
  42052d:	ins    DWORD PTR es:[edi],dx
  42052e:	xlat   BYTE PTR ds:[ebx]
  42052f:	pop    esi
  420530:	cmp    ebp,DWORD PTR [eax+0x11b8bd0d]
  420536:	mov    gs,WORD PTR [esi+0x1ea76467]
  42053c:	(bad)  
  42053d:	div    bl
  42053f:	xlat   BYTE PTR ds:[ebx]
  420540:	repnz inc ecx
  420542:	les    ebp,FWORD PTR [esi-0x10d2f388]
  420548:	ret    
  420549:	dec    ebx
  42054a:	mov    ebx,0x5f2e2666
  42054f:	pop    esi
  420550:	sbb    eax,0x508f90a7
  420555:	in     al,dx
  420556:	ret    0x587f
  420559:	lds    esp,FWORD PTR [edx]
  42055b:	ficom  WORD PTR [edi-0x799171d9]
  420561:	(bad)  [ecx]
  420563:	add    edx,DWORD PTR [edi+0x14]
  420566:	rcr    DWORD PTR [edi-0x5facb0],cl
  42056c:	inc    ebx
  42056d:	sub    edx,DWORD PTR [esp+esi*2+0x33]
  420571:	std    
  420572:	inc    edi
  420573:	rcr    DWORD PTR [edi-0x3b1f6f33],cl
  420579:	arpl   WORD PTR [esi+0x1f5753b3],cx
  42057f:	push   eax
  420580:	pushf  
  420581:	inc    esp
  420582:	fdiv   DWORD PTR ds:0xba090933
  420588:	mov    BYTE PTR [esi],dl
  42058a:	cmp    eax,0xbd44f23c
  42058f:	push   edx
  420590:	inc    eax
  420591:	or     esi,ebx
  420593:	adc    BYTE PTR [esi+0x298e4ea5],bh
  420599:	addr16 jo 0x4205c6
  42059c:	push   esp
  42059d:	push   edi
  42059e:	or     DWORD PTR [ebx-0x25],edx
  4205a1:	icebp  
  4205a2:	xchg   edi,eax
  4205a3:	or     BYTE PTR [ebp-0x45],cl
  4205a6:	(bad)  
  4205a7:	mov    BYTE PTR [ecx+edi*8+0x492d50f6],dl
  4205ae:	in     al,0xf5
  4205b0:	pop    ds
  4205b1:	test   bl,0xfa
  4205b4:	xor    edi,DWORD PTR [ebp+0x2a]
  4205b7:	loope  0x420634
  4205b9:	(bad)  
  4205ba:	and    ecx,edi
  4205bc:	sbb    esi,edi
  4205be:	mov    ds:0xaa72757b,al
  4205c3:	xchg   edx,eax
  4205c4:	inc    ebp
  4205c5:	aaa    
  4205c6:	cmc    
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	lea    ebp,[ebx]
  4205ca:	push   0x3
  4205cc:	cmp    DWORD PTR [ebx+0x5a],edx
  4205cf:	stc    
  4205d0:	inc    ebp
  4205d1:	jg     0x420569
  4205d3:	push   ds
  4205d4:	es nop
  4205d6:	and    al,cl
  4205d8:	in     al,0x43
  4205da:	dec    esp
  4205db:	push   es
  4205dc:	cmp    BYTE PTR [ebp+0x3a],ah
  4205df:	xchg   ebp,eax
  4205e0:	loopne 0x420580
  4205e2:	sub    BYTE PTR [edi-0x3d76369d],bl
  4205e8:	shr    DWORD PTR [esi+edx*4+0x3c016f11],cl
  4205ef:	int    0x32
  4205f1:	cld    
  4205f2:	rol    DWORD PTR [esi+esi*1+0x772fca95],0x2e
  4205fa:	es inc edx
  4205fc:	xor    BYTE PTR [eax],cl
  4205fe:	gs dec ebx
  420600:	mov    ch,0x52
  420602:	dec    esp
  420603:	(bad)  
  420604:	into   
  420605:	or     esp,edi
  420607:	xchg   BYTE PTR [ecx+0x1b],dl
  42060a:	fnsave [esi]
  42060c:	daa    
  42060d:	inc    esi
  42060e:	pop    esp
  42060f:	xchg   ecx,eax
  420610:	ret    0xf004
  420613:	adc    eax,0xd6b2f529
  420618:	mov    edx,0x9abbf5c5
  42061d:	inc    eax
  42061e:	add    BYTE PTR [edx-0x75],dh
  420621:	xor    DWORD PTR [eax-0x40],esp
  420624:	jl     0x420665
  420626:	xor    ebx,DWORD PTR [ecx-0x74b62225]
  42062c:	in     eax,dx
  42062d:	mov    ebx,0x4daf8d9c
  420632:	dec    eax
  420633:	rdpmc  
  420635:	jmp    0xb0abe04e
  42063a:	or     DWORD PTR [edx-0x1a],edx
  42063d:	pusha  
  42063e:	pusha  
  42063f:	ss cmp al,0x3b
  420642:	rol    ebx,0x9f
  420645:	lea    esp,[ecx+0x70]
  420648:	mov    bh,cl
  42064a:	fnsave [edi-0x6f475376]
  420650:	sub    eax,0x78068754
  420655:	push   ebp
  420656:	push   ss
  420657:	fs mov ebx,0x390af085
  42065d:	imul   esp,DWORD PTR [ebx],0x60105e14
  420663:	push   eax
  420664:	push   es
  420665:	clc    
  420666:	mov    BYTE PTR [ecx],dl
  420668:	cmp    DWORD PTR [eax+0x14],edi
  42066b:	xchg   BYTE PTR [esi-0x3e],bh
  42066e:	pop    eax
  42066f:	xor    eax,0xa65ffddb
  420674:	sub    edx,DWORD PTR [edi+eax*1+0x1b]
  420678:	mov    dh,BYTE PTR [ecx-0x4841d3b0]
  42067e:	jle    0x420609
  420680:	push   edx
  420681:	or     al,0xdb
  420683:	sar    BYTE PTR ds:[edx],1
  420686:	clc    
  420687:	mov    ch,BYTE PTR [esi+0x7c497c94]
  42068d:	cmp    al,0x86
  42068f:	inc    esi
  420690:	push   0xdf06c250
  420695:	rol    DWORD PTR [eax],0x8d
  420698:	ret    
  420699:	sub    BYTE PTR [edx],cl
  42069b:	mov    bl,0xac
  42069d:	daa    
  42069e:	ins    DWORD PTR es:[edi],dx
  42069f:	fdivr  st,st(0)
  4206a1:	push   eax
  4206a2:	dec    BYTE PTR [esi]
  4206a4:	into   
  4206a5:	stos   BYTE PTR es:[edi],al
  4206a6:	cld    
  4206a7:	jne    0x420692
  4206a9:	test   DWORD PTR [ecx-0x3cd751c3],esp
  4206af:	mov    ch,0xd3
  4206b1:	sub    BYTE PTR [edx],al
  4206b3:	mov    eax,0xc7b474bb
  4206b8:	in     al,dx
  4206b9:	jno    0x42065d
  4206bb:	fsub   DWORD PTR [ebp+0xe]
  4206be:	cmp    al,BYTE PTR [esi]
  4206c0:	(bad)  
  4206c1:	cmp    eax,0x6b2c9449
  4206c6:	mov    eax,ds:0xdb06f002
  4206cb:	jmp    0x3646:0x12fea6a1
  4206d2:	test   DWORD PTR [ebp+0x47],0x7ad4bc3c
  4206d9:	push   eax
  4206da:	js     0x420700
  4206dc:	loopne 0x4206e0
  4206de:	jns    0x420716
  4206e0:	call   0xa7487d44
  4206e5:	(bad)  
  4206e6:	adc    al,0x67
  4206e8:	push   ebp
  4206e9:	pusha  
  4206ea:	cmp    DWORD PTR [edi],edi
  4206ec:	push   ecx
  4206ed:	bound  ebx,QWORD PTR [esi]
  4206ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f0:	sub    al,0xa
  4206f2:	pop    ds
  4206f3:	push   esp
  4206f4:	and    DWORD PTR [edi-0x49],ebx
  4206f7:	jmp    0x11ab:0x1f754536
  4206fe:	or     esi,DWORD PTR [ebx+0x30]
  420701:	mov    al,ds:0xefbf7a3e
  420706:	push   edx
  420707:	cmp    eax,DWORD PTR [edi]
  420709:	xchg   edi,eax
  42070a:	shr    DWORD PTR [ebx],0xcb
  42070d:	jecxz  0x4206cc
  42070f:	mov    dl,bl
  420711:	and    al,0xf3
  420713:	repnz xchg edx,eax
  420715:	inc    esp
  420716:	xor    DWORD PTR [edx+eiz*8+0x6f],0xf023ca15
  42071e:	add    eax,0x12d50df7
  420723:	inc    esp
  420724:	lds    esp,FWORD PTR [esi-0x7f]
  420727:	adc    ebp,DWORD PTR gs:[eax-0x22]
  42072b:	pop    ebp
  42072c:	pop    ecx
  42072d:	rcr    DWORD PTR [eax-0x3721b6e6],0xd3
  420734:	cdq    
  420735:	dec    ecx
  420736:	inc    edx
  420737:	xor    al,BYTE PTR [ebx+0x6d]
  42073a:	dec    edi
  42073b:	aam    0x8f
  42073d:	xchg   edx,eax
  42073e:	mov    al,ds:0xd2abe5ad
  420743:	mov    ah,0x7a
  420745:	xchg   ebp,eax
  420746:	jp     0x420777
  420748:	add    dh,dl
  42074a:	add    eax,0x51f814b7
  42074f:	and    eax,0x3e7f4f3f
  420754:	xchg   edi,eax
  420755:	xchg   edx,eax
  420756:	pusha  
  420757:	and    BYTE PTR [eax],0x55
  42075a:	pop    ecx
  42075b:	test   eax,0x9f9ef816
  420760:	mov    ecx,0x953a5150
  420765:	dec    edi
  420766:	push   ds
  420767:	inc    esp
  420768:	mov    eax,0x436c5c1
  42076d:	cmp    dh,BYTE PTR [ebx]
  42076f:	xor    eax,0x6321f246
  420774:	xchg   DWORD PTR [edi],edx
  420776:	fstp   QWORD PTR [ebx-0x5ba2ffb3]
  42077c:	mov    bl,BYTE PTR [ebp-0xf]
  42077f:	xchg   esi,eax
  420780:	push   es
  420781:	hlt    
  420782:	inc    edi
  420783:	push   edx
  420784:	add    DWORD PTR [ecx-0x72ab16a0],esi
  42078a:	out    0xac,al
  42078c:	mov    al,ds:0x6c99efde
  420791:	out    dx,eax
  420792:	in     al,0x56
  420794:	bound  eax,QWORD PTR [eax]
  420796:	add    ecx,edx
  420798:	int    0xe0
  42079a:	add    BYTE PTR [eax-0x7a12aabf],0x7c
  4207a1:	inc    edx
  4207a2:	mov    ecx,0x2ee0040c
  4207a7:	mov    BYTE PTR [edx-0x48f503a0],cl
  4207ad:	xor    ah,dh
  4207af:	add    cl,al
  4207b1:	shr    DWORD PTR [ebx+0xf],1
  4207b4:	xchg   esi,eax
  4207b5:	jb     0x42077a
  4207b7:	mov    ds:0x6344a4e,eax
  4207bc:	mov    fs,WORD PTR [edi+0x2]
  4207bf:	test   BYTE PTR [ecx-0x8f5a042],bh
  4207c5:	xor    ch,ah
  4207c7:	leave  
  4207c8:	adc    BYTE PTR [ebp-0x48fc653f],al
  4207ce:	jae    0x4207bd
  4207d0:	and    DWORD PTR [ecx],ecx
  4207d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d3:	loop   0x42076a
  4207d5:	imul   edi,DWORD PTR [eax],0x2f2ac75b
  4207db:	pop    ebp
  4207dc:	outs   dx,BYTE PTR ds:[esi]
  4207dd:	in     eax,0xe7
  4207df:	and    ebp,esp
  4207e1:	and    DWORD PTR [esi+0x353e0d24],eax
  4207e7:	sbb    al,0xd2
  4207e9:	jle    0x420869
  4207eb:	jg     0x42086b
  4207ed:	mov    dh,cl
  4207ef:	push   es
  4207f0:	pop    ecx
  4207f1:	or     dh,BYTE PTR [ecx-0x7e258746]
  4207f7:	repz dec ecx
  4207f9:	cmp    cl,dl
  4207fb:	stos   BYTE PTR es:[edi],al
  4207fc:	aad    0x6b
  4207fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ff:	inc    eax
  420800:	jle    0x420784
  420802:	inc    esp
  420803:	cmp    edx,edi
  420805:	xor    ah,bh
  420807:	ins    BYTE PTR es:[edi],dx
  420808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420809:	mov    ebx,0x3b837c82
  42080e:	int3   
  42080f:	mov    bl,0x3
  420811:	push   esp
  420812:	and    cl,BYTE PTR [ebp-0x25]
  420815:	dec    edx
  420816:	push   cs
  420817:	ffree  st(0)
  420819:	fdivr  QWORD PTR [esi]
  42081b:	cmp    DWORD PTR [edi],edi
  42081d:	out    0x6d,al
  42081f:	(bad)  
  420821:	mov    ebp,0xb38450af
  420826:	jo     0x420804
  420828:	out    dx,eax
  420829:	mov    ch,BYTE PTR [esp-0x62d4b5bb]
  420830:	add    BYTE PTR [ebx],dh
  420832:	dec    ebx
  420833:	sub    al,0x3e
  420835:	cwde   
  420836:	inc    esi
  420837:	add    esi,esi
  420839:	(bad)  
  42083a:	iret   
  42083b:	xchg   ecx,eax
  42083c:	xchg   ebx,eax
  42083d:	or     ch,0xf7
  420840:	push   ebx
  420841:	cmp    eax,0x981a551c
  420846:	pop    ecx
  420847:	data16 hlt 
  420849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084a:	xchg   edi,eax
  42084b:	lock cmp BYTE PTR [ecx+eiz*1],dl
  42084f:	cwde   
  420850:	cmp    eax,DWORD PTR [eax-0x42]
  420853:	xor    eax,DWORD PTR [ebp+0x4]
  420856:	xchg   ecx,eax
  420857:	and    BYTE PTR [edx],dh
  420859:	lds    esp,FWORD PTR [edx-0x760ad4fc]
  42085f:	call   0xbbda:0x54784b4e
  420866:	cmp    eax,DWORD PTR [ecx+0x67]
  420869:	jo     0x42080d
  42086b:	cmp    BYTE PTR [ebp+ebp*8-0x56a03e17],al
  420872:	jge    0x4208f3
  420874:	fistp  QWORD PTR [edi]
  420876:	dec    DWORD PTR [ecx]
  420878:	jb     0x42089c
  42087a:	cs jecxz 0x420882
  42087d:	add    eax,DWORD PTR [ebp-0x221aebbc]
  420883:	and    esi,esi
  420885:	int    0x46
  420887:	jmp    0x42082f
  420889:	push   edx
  42088a:	ja     0x420815
  42088c:	je     0x42084d
  42088e:	mov    ebp,0x3129e527
  420894:	jmp    0x9414:0xe6e23265
  42089b:	jmp    0xf1cb1ce4
  4208a0:	dec    ebx
  4208a1:	daa    
  4208a2:	ja     0x4208d8
  4208a4:	ss push ds
  4208a6:	in     al,0x3
  4208a8:	(bad)  
  4208a9:	fst    DWORD PTR ds:0xa57a3704
  4208af:	fdiv   DWORD PTR [esi-0x40f15975]
  4208b5:	enter  0xa14c,0x2b
  4208b9:	sbb    dh,BYTE PTR [edi]
  4208bb:	inc    eax
  4208bc:	or     al,0x89
  4208be:	xchg   esi,eax
  4208bf:	mov    esi,0xad35ad9d
  4208c4:	push   edx
  4208c5:	adc    BYTE PTR [ebx],0xc5
  4208c8:	mov    dh,BYTE PTR [ebx+0x9]
  4208cb:	std    
  4208cc:	mov    eax,0xfbe864ec
  4208d1:	dec    edi
  4208d2:	xchg   ebx,eax
  4208d3:	jae    0x420892
  4208d5:	pushf  
  4208d6:	mov    dh,BYTE PTR [edx-0x75]
  4208d9:	push   ss
  4208da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208db:	mov    cl,0x8d
  4208dd:	sub    BYTE PTR [edx-0x7e],dh
  4208e0:	cmp    DWORD PTR [eax],eax
  4208e2:	dec    ebp
  4208e3:	loopne 0x4208cf
  4208e5:	arpl   WORD PTR [ebp+0x6d],cx
  4208e8:	adc    cl,ah
  4208ea:	mov    dh,0x1e
  4208ec:	sub    al,0x60
  4208ee:	mov    bl,0x23
  4208f0:	inc    ebx
  4208f1:	adc    eax,0x73b0c38e
  4208f6:	stos   DWORD PTR es:[edi],eax
  4208f7:	push   eax
  4208f8:	add    al,0x4f
  4208fa:	pop    ds
  4208fb:	jnp    0x420956
  4208fd:	ins    DWORD PTR es:[edi],dx
  4208fe:	sub    al,ah
  420900:	enter  0x9be7,0x15
  420904:	fwait
  420905:	jno    0x42092e
  420907:	ret    0xca14
  42090a:	xlat   BYTE PTR ds:[ebx]
  42090b:	mov    esp,0x44396171
  420910:	sbb    edi,DWORD PTR [eax]
  420912:	jmp    0xdb78:0x3c7c137d
  420919:	adc    al,0xb5
  42091b:	and    al,0x38
  42091e:	sbb    eax,0x9369984a
  420923:	inc    edx
  420924:	mov    ah,0x6b
  420926:	adc    bh,dh
  420928:	ds mov dl,0xa
  42092b:	pop    esp
  42092c:	imul   edi,DWORD PTR [edi],0x16
  42092f:	add    ebp,DWORD PTR [ebx+0x51c16580]
  420935:	xchg   edi,eax
  420936:	jmp    0x420900
  420938:	inc    esi
  420939:	ins    DWORD PTR es:[edi],dx
  42093a:	push   esp
  42093b:	outs   dx,DWORD PTR ds:[esi]
  42093c:	hlt    
  42093d:	pop    edi
  42093e:	inc    ecx
  42093f:	jne    0x4208ed
  420941:	test   al,0x9d
  420943:	mov    cl,BYTE PTR [ecx]
  420945:	sub    eax,0x56da5d1f
  42094a:	sub    al,0xc9
  42094c:	popf   
  42094d:	outs   dx,BYTE PTR ds:[esi]
  42094e:	rol    DWORD PTR [esi+edx*1+0x44],cl
  420952:	dec    ebp
  420953:	inc    esp
  420954:	jns    0x42093d
  420956:	add    DWORD PTR [ebp-0x1b5a6746],esp
  42095c:	bound  ecx,QWORD PTR [ecx-0x749d538]
  420962:	mov    cl,BYTE PTR [ecx-0x6]
  420965:	mov    ds:0x1780081d,eax
  42096a:	lods   al,BYTE PTR ds:[esi]
  42096b:	(bad)  
  42096c:	mov    esi,0x95cd9a59
  420971:	or     eax,0xe50de394
  420976:	cmp    al,0x59
  420978:	pop    esp
  420979:	call   0x2e39:0x326b8017
  420980:	mov    eax,ds:0xb2d2955e
  420985:	mov    ds:0x3c24fb8,al
  42098a:	nop
  42098b:	scas   al,BYTE PTR es:[edi]
  42098c:	pop    ecx
  42098d:	addr16 ret 
  42098f:	sbb    al,0xd7
  420991:	mov    esp,0xb9625b94
  420996:	nop
  420997:	cmp    BYTE PTR [ebp+0x773a0706],0xa
  42099e:	(bad)  
  42099f:	dec    edi
  4209a0:	icebp  
  4209a1:	inc    edx
  4209a2:	ss dec eax
  4209a4:	rcl    BYTE PTR [ebp-0x38],0xb7
  4209a8:	inc    ebx
  4209a9:	scas   eax,DWORD PTR es:[edi]
  4209aa:	cmp    edx,DWORD PTR ds:0xc7a422de
  4209b0:	repz sub al,0xa0
  4209b3:	dec    esp
  4209b4:	pop    ss
  4209b5:	sbb    DWORD PTR [ecx-0x2e],edi
  4209b8:	or     DWORD PTR [ebp+0x6379d497],edi
  4209be:	or     al,0xd1
  4209c0:	mov    esp,db3
  4209c3:	retf   0xe4cf
  4209c6:	jae    0x420a3e
  4209c8:	ss cs jb 0x42096b
  4209cc:	mov    dh,0x54
  4209ce:	int    0x47
  4209d0:	jne    0x420a08
  4209d2:	pop    ecx
  4209d3:	aas    
  4209d4:	jo     0x420981
  4209d6:	fadd   st(4),st
  4209d8:	jnp    0x4209c2
  4209da:	call   0xe804:0x479ba602
  4209e1:	lahf   
  4209e2:	inc    ebp
  4209e3:	pop    eax
  4209e4:	scas   eax,DWORD PTR es:[edi]
  4209e5:	lock mov ch,0x6c
  4209e8:	mov    bh,cl
  4209ea:	lods   eax,DWORD PTR ds:[esi]
  4209eb:	psrad  mm7,QWORD PTR [eax-0x3d]
  4209ef:	push   cs
  4209f0:	mov    edi,0xc203ffd5
  4209f5:	ds push ds
  4209f7:	je     0x4209d0
  4209f9:	mov    ds:0xbce69e74,eax
  4209fe:	fimul  DWORD PTR [esi-0xa]
  420a01:	retf   
  420a02:	ja     0x4209d4
  420a04:	cwde   
  420a05:	xchg   esp,eax
  420a06:	xchg   ebx,eax
  420a07:	xchg   esi,eax
  420a08:	push   ecx
  420a09:	outs   dx,BYTE PTR ds:[esi]
  420a0a:	mov    ch,0x95
  420a0c:	xchg   DWORD PTR [ebp+ebx*2+0x37d6ec90],edi
  420a13:	xor    DWORD PTR [ebx+0x7a9881fd],esi
  420a19:	iret   
  420a1a:	pop    edi
  420a1b:	sub    DWORD PTR [esi],ebx
  420a1d:	clc    
  420a1e:	add    BYTE PTR [ecx],0x24
  420a21:	sar    edx,1
  420a23:	push   es
  420a24:	and    DWORD PTR [ebp+0xc35f342],ebx
  420a2a:	or     eax,0x8312eba3
  420a2f:	xchg   edi,eax
  420a30:	sti    
  420a31:	jne    0x4209e3
  420a33:	ret    0x192d
  420a36:	jecxz  0x420a1f
  420a38:	mov    esp,0xd58896ed
  420a3d:	shl    BYTE PTR [edi],1
  420a3f:	push   ss
  420a40:	icebp  
  420a41:	rcr    DWORD PTR [ecx],1
  420a43:	pop    ss
  420a44:	jae    0x4209e8
  420a46:	xor    BYTE PTR [edi],0x6
  420a49:	fsub   st,st(1)
  420a4b:	cmp    al,0xc8
  420a4d:	ror    edi,1
  420a4f:	adc    eax,0x68e6c7f6
  420a54:	fst    DWORD PTR [eax-0x281fc313]
  420a5a:	sub    BYTE PTR ds:0xbc6de87d,cl
  420a60:	mov    ebx,DWORD PTR [edx-0x65775627]
  420a66:	jno    0x420ab1
  420a68:	add    esp,DWORD PTR [ecx+0x12]
  420a6b:	cmp    BYTE PTR [ecx],bh
  420a6d:	mov    edx,DWORD PTR [ecx]
  420a6f:	rol    DWORD PTR ds:0x9d0be534,0xea
  420a76:	inc    esi
  420a77:	jbe    0x420a62
  420a79:	aas    
  420a7a:	lods   eax,DWORD PTR ds:[esi]
  420a7b:	xor    esi,edi
  420a7d:	ss (bad) 
  420a7f:	dec    edi
  420a80:	push   ecx
  420a81:	push   edx
  420a82:	addr16 into 
  420a84:	div    DWORD PTR [esi-0x28735842]
  420a8a:	repz sbb eax,0x8d961dba
  420a90:	in     al,dx
  420a91:	mov    BYTE PTR [edi-0x39],cl
  420a94:	dec    edx
  420a95:	xchg   esp,eax
  420a96:	mov    BYTE PTR [eax],ch
  420a98:	repnz pop ss
  420a9a:	mov    al,BYTE PTR [edi+0x2c]
  420a9d:	xlat   BYTE PTR ds:[ebx]
  420a9e:	push   ss
  420a9f:	or     esi,edi
  420aa1:	pop    edi
  420aa2:	xor    cl,BYTE PTR [edi+esi*2-0x56961409]
  420aa9:	retf   0x78dc
  420aac:	out    0x31,al
  420aae:	lods   eax,DWORD PTR ds:[esi]
  420aaf:	inc    esp
  420ab0:	mov    esi,0x2d6051a2
  420ab5:	outs   dx,BYTE PTR ds:[esi]
  420ab6:	xlat   BYTE PTR ds:[ebx]
  420ab7:	lods   eax,DWORD PTR ds:[esi]
  420ab8:	fist   WORD PTR [ecx+0x33843e93]
  420abe:	pop    ebp
  420abf:	xor    al,BYTE PTR [ebx-0x6a505052]
  420ac5:	pop    ecx
  420ac6:	xchg   BYTE PTR [edx+0x17],dh
  420ac9:	ficomp DWORD PTR [edi-0x75]
  420acc:	(bad)  
  420acd:	scas   al,BYTE PTR es:[edi]
  420ace:	pop    esp
  420acf:	dec    edx
  420ad0:	stos   BYTE PTR es:[edi],al
  420ad1:	add    al,0x4a
  420ad3:	popa   
  420ad4:	imul   esp,DWORD PTR [edx+0x9],0x5b
  420ad8:	aas    
  420ad9:	test   ebp,ecx
  420adb:	mov    eax,ds:0x246dc768
  420ae0:	retf   
  420ae1:	cmp    al,0x1d
  420ae3:	retf   
  420ae4:	cmp    ebp,esi
  420ae6:	rcr    BYTE PTR [edi+eiz*8-0x1bd4bb92],cl
  420aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aee:	add    bh,BYTE PTR [ebp-0x34]
  420af1:	rol    ebx,0xfd
  420af4:	fdivr  QWORD PTR [edx]
  420af6:	fs jnp 0x420afe
  420af9:	fldenv [ebx]
  420afb:	fstp   TBYTE PTR [edx+0x3c]
  420afe:	push   eax
  420aff:	jae    0x420b47
  420b01:	dec    ebx
  420b02:	arpl   WORD PTR [ecx],di
  420b04:	out    dx,al
  420b05:	ret    0x7866
  420b08:	int3   
  420b09:	retf   
  420b0a:	add    BYTE PTR [ecx],bh
  420b0c:	fs data16 das 
  420b0f:	push   ebp
  420b10:	mov    edx,0xac5d2e90
  420b15:	fistp  DWORD PTR [ecx]
  420b17:	jmp    0x4fec:0x1dc121fa
  420b1e:	xor    eax,0x879d7fae
  420b23:	in     al,dx
  420b24:	imul   esi,ebp,0x6f
  420b27:	mov    dh,0x4e
  420b29:	mov    al,0xe8
  420b2b:	call   0x734c:0xa39ee51b
  420b32:	mov    ds:0xd4dcda02,eax
  420b37:	(bad)  
  420b38:	cli    
  420b39:	addr16 pmulhuw mm3,mm1
  420b3d:	mov    DWORD PTR [esi+0x20],ebp
  420b40:	pop    edx
  420b41:	clc    
  420b42:	fmul   QWORD PTR [ecx]
  420b44:	push   esi
  420b45:	sbb    eax,0xf5df5fcc
  420b4a:	mov    ebp,0xe93fad21
  420b4f:	mov    ecx,0x1125b5a1
  420b54:	enter  0x852f,0xb2
  420b58:	(bad)  
  420b5a:	mul    DWORD PTR [eax-0x63815d31]
  420b60:	inc    ecx
  420b61:	xchg   edi,eax
  420b62:	or     ah,BYTE PTR [ebp+0x64]
  420b65:	sub    ch,ah
  420b67:	cwde   
  420b68:	xor    DWORD PTR [edx+0x7c],0x97ebfec3
  420b6f:	stc    
  420b70:	(bad)  
  420b71:	xchg   ebp,eax
  420b72:	das    
  420b73:	pop    esi
  420b74:	mov    dh,0x46
  420b76:	push   es
  420b77:	push   0xffffffea
  420b79:	mov    DWORD PTR [eax],0x22461d39
  420b7f:	mov    esi,?
  420b81:	es mov dl,0x8b
  420b84:	mov    ecx,DWORD PTR [eax-0x3517356a]
  420b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8b:	sar    BYTE PTR ds:0x5545aecf,cl
  420b91:	dec    ecx
  420b92:	call   0x7f524df8
  420b97:	or     ecx,DWORD PTR [ecx+0x57]
  420b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9b:	out    dx,al
  420b9c:	cs add al,0x57
  420b9f:	nop
  420ba0:	mov    DWORD PTR [esi-0x2f],ebx
  420ba3:	cwde   
  420ba4:	xchg   DWORD PTR [ecx-0x68],eax
  420ba7:	push   ebp
  420ba8:	stos   DWORD PTR es:[edi],eax
  420ba9:	add    eax,0xcbef20eb
  420bae:	add    eax,0x92d699b4
  420bb3:	xchg   edx,eax
  420bb4:	add    al,0x3e
  420bb6:	and    al,0x5
  420bb8:	popaw  
  420bba:	outs   dx,BYTE PTR ds:[esi]
  420bbb:	lods   al,BYTE PTR ds:[esi]
  420bbc:	gs adc eax,0xf3edf7cb
  420bc2:	or     ch,ah
  420bc4:	lahf   
  420bc5:	lods   al,BYTE PTR ds:[esi]
  420bc6:	lea    edi,[esi-0x27eaf28d]
  420bcc:	adc    DWORD PTR [edx+0x44],eax
  420bcf:	adc    al,0x26
  420bd1:	ins    BYTE PTR es:[edi],dx
  420bd2:	fstp   QWORD PTR [ecx-0x796fb6c1]
  420bd8:	aad    0xe5
  420bda:	fs pop es
  420bdc:	nop
  420bdd:	mov    ah,0xa6
  420bdf:	inc    esi
  420be0:	lock (bad) [ebx+eiz*4-0x3c]
  420be5:	add    edx,DWORD PTR [bx+si+0x18f8]
  420bea:	push   ss
  420beb:	add    DWORD PTR [esi+0x62],ebx
  420bee:	or     al,0xa
  420bf0:	cmp    dh,BYTE PTR [ecx-0x2cf22662]
  420bf6:	aad    0x8a
  420bf8:	and    cl,BYTE PTR ds:0x2bd8fa9d
  420bfe:	push   ecx
  420bff:	in     al,dx
  420c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c01:	stc    
  420c02:	das    
  420c03:	lods   al,BYTE PTR ds:[esi]
  420c04:	inc    DWORD PTR [ebx+esi*8-0xd188f]
  420c0b:	jb     0x420c0e
  420c0d:	fcomp  QWORD PTR [edi+edi*2+0x7a6788f4]
  420c14:	or     DWORD PTR [edx+0x60],0x91ac36c
  420c1b:	jno    0x420bf2
  420c1d:	mov    ds:0x9dddc588,eax
  420c22:	(bad)  
  420c23:	lock cdq 
  420c25:	retf   
  420c26:	xchg   ecx,eax
  420c27:	fdivr  st,st(2)
  420c29:	test   al,0x16
  420c2b:	inc    BYTE PTR [esi+0x6b6c673d]
  420c31:	mov    dl,0x22
  420c33:	push   edi
  420c34:	aad    0xe7
  420c36:	call   0x6d5d946
  420c3b:	aad    0xc8
  420c3d:	mov    gs,WORD PTR [edx+0x3e3644b5]
  420c43:	outs   dx,BYTE PTR ds:[esi]
  420c44:	js     0x420c7d
  420c46:	push   0xe618887
  420c4b:	out    0xa2,eax
  420c4d:	ins    DWORD PTR es:[edi],dx
  420c4e:	pop    ds
  420c4f:	cmp    DWORD PTR [eax+0x75],ebx
  420c52:	xchg   BYTE PTR [bx+di+0x3c],al
  420c56:	sub    BYTE PTR [esi+0x3a],0xdb
  420c5a:	inc    ebp
  420c5b:	test   eax,0xf417bf69
  420c60:	pop    ecx
  420c61:	mov    fs,WORD PTR [edi-0x32f12c16]
  420c67:	loopne 0x420c34
  420c69:	push   eax
  420c6a:	das    
  420c6b:	fmul   DWORD PTR [eax+0x7b]
  420c6e:	out    0x1e,eax
  420c70:	(bad)
  420c73:	jns    0x420cdd
  420c75:	in     eax,dx
  420c76:	(bad)  
  420c77:	fisub  DWORD PTR [eax+edx*4]
  420c7a:	fisubr WORD PTR [edi+0x3e]
  420c7d:	inc    esp
  420c7e:	aam    0x7b
  420c80:	sbb    edi,DWORD PTR [esi+esi*1]
  420c83:	sbb    eax,0xf974eb51
  420c88:	push   edi
  420c89:	pop    ebp
  420c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c8b:	cmp    eax,ecx
  420c8d:	pop    ebx
  420c8e:	aam    0x5b
  420c90:	mov    DWORD PTR gs:[ebp-0x61f8df59],esi
  420c97:	cdq    
  420c98:	push   eax
  420c99:	cmp    BYTE PTR [eax+esi*1-0x66],al
  420c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c9e:	push   ebp
  420c9f:	loop   0x420d0f
  420ca1:	cld    
  420ca2:	(bad)  
  420ca3:	pop    esp
  420ca4:	call   0x864f:0xea28e8bc
  420cab:	and    ah,BYTE PTR [ebp-0x288027a4]
  420cb1:	or     BYTE PTR [esi+0x79],al
  420cb4:	lods   al,BYTE PTR ds:[esi]
  420cb5:	mov    dh,0x11
  420cb7:	inc    ecx
  420cb8:	add    ecx,DWORD PTR [edi-0x36a2b586]
  420cbe:	mov    eax,0x9d7c9e54
  420cc3:	mov    dh,0xdd
  420cc5:	pop    ecx
  420cc6:	adc    al,0x18
  420cc8:	js     0x420d2f
  420cca:	test   al,0xc8
  420ccc:	fcomp  DWORD PTR [ebx]
  420cce:	xchg   DWORD PTR [ebx],esi
  420cd0:	hlt    
  420cd1:	sub    ch,BYTE PTR [ecx-0x4643da3e]
  420cd7:	rol    BYTE PTR [eax-0x44a14311],1
  420cdd:	cwde   
  420cde:	push   ebp
  420cdf:	mov    ch,0xc9
  420ce1:	push   ebp
  420ce2:	mov    eax,ds:0x62994bcb
  420ce7:	retf   0xc3
  420cea:	jb     0x420cd5
  420cec:	sbb    edi,ecx
  420cee:	pop    es
  420cef:	cmp    DWORD PTR [edx+0x3f],ebp
  420cf2:	and    ebp,DWORD PTR [edi+0x62]
  420cf5:	rcr    BYTE PTR [esi],cl
  420cf7:	push   cs
  420cf8:	aam    0x21
  420cfa:	push   ss
  420cfb:	cmp    eax,ecx
  420cfd:	xchg   ebp,eax
  420cfe:	xchg   edi,eax
  420cff:	and    eax,0xea76ca2a
  420d04:	adc    eax,0x52e28b0e
  420d09:	cmp    al,0xe4
  420d0b:	inc    eax
  420d0c:	test   DWORD PTR [ebx+0x38],ebp
  420d0f:	mov    al,0x33
  420d11:	das    
  420d12:	rcr    esi,0x24
  420d15:	push   ebx
  420d16:	dec    edx
  420d17:	add    ebp,DWORD PTR [eax]
  420d19:	or     DWORD PTR [ebx+eax*4],edi
  420d1c:	and    DWORD PTR [ebx-0x29],ebx
  420d1f:	add    eax,0x85ae6aa
  420d24:	out    dx,al
  420d25:	jns    0x420cef
  420d27:	pusha  
  420d28:	mov    al,0x28
  420d2a:	or     al,0xce
  420d2c:	push   esi
  420d2d:	cld    
  420d2e:	sub    ah,cl
  420d30:	in     eax,dx
  420d31:	aad    0x81
  420d33:	mul    BYTE PTR [ebx]
  420d35:	in     eax,0xa1
  420d37:	pop    edi
  420d38:	pop    edi
  420d39:	addr16 imul eax,eax,0x79aba6a4
  420d40:	ins    BYTE PTR es:[edi],dx
  420d41:	repnz (bad) 
  420d43:	push   0x5e
  420d45:	mov    ah,0x57
  420d47:	(bad)  
  420d48:	stc    
  420d49:	call   0xf67:0x2fdd34da
  420d50:	(bad)  
  420d51:	push   edi
  420d52:	in     eax,dx
  420d53:	cmp    al,0xf2
  420d55:	sbb    ecx,DWORD PTR [esi]
  420d57:	daa    
  420d58:	mov    bh,0xee
  420d5a:	leave  
  420d5b:	mul    BYTE PTR [eax+0x17]
  420d5e:	(bad)  
  420d5f:	in     eax,0xcf
  420d61:	fldcw  WORD PTR [ebp+0x17]
  420d64:	xor    eax,0x2f984ed9
  420d69:	add    esp,DWORD PTR [edi]
  420d6b:	clc    
  420d6c:	outs   dx,DWORD PTR ds:[esi]
  420d6d:	call   0x22e2:0xd2b031b8
  420d74:	inc    esi
  420d75:	(bad)  
  420d76:	loopne 0x420ddc
  420d78:	stc    
  420d79:	mov    ds:0x74816d98,ax
  420d7f:	pop    edi
  420d80:	shl    ecx,cl
  420d82:	cld    
  420d83:	xor    al,0x80
  420d85:	(bad)  
  420d86:	das    
  420d87:	mov    DWORD PTR [ebp-0x304f6e],eax
  420d8d:	call   0xe3b:0x2700738d
  420d94:	push   ebx
  420d95:	xchg   edi,ebx
  420d97:	cmp    eax,0xc02cd95f
  420d9c:	addr16 inc ebp
  420d9e:	ficomp WORD PTR [ebx]
  420da0:	inc    edi
  420da1:	pop    ebp
  420da2:	loopne 0x420d82
  420da4:	sbb    al,0xa9
  420da6:	inc    esi
  420da7:	cmp    di,ax
  420daa:	sbb    edx,DWORD PTR [ebx-0x57313d2b]
  420db0:	jl     0x420e25
  420db2:	retf   0x3d06
  420db5:	xor    eax,0x39899f28
  420dba:	cmp    ebp,DWORD PTR [esp+ebx*8]
  420dbd:	repnz sub eax,0x3539daae
  420dc3:	stos   BYTE PTR es:[edi],al
  420dc4:	inc    edx
  420dc5:	ds cli 
  420dc7:	push   ebp
  420dc8:	imul   edx,DWORD PTR [ecx],0xffffffbc
  420dcb:	mov    esi,0x6a2ff692
  420dd0:	jmp    0x3a818871
  420dd5:	loop   0x420e1a
  420dd7:	test   al,0x36
  420dd9:	int    0x23
  420ddb:	xchg   esi,eax
  420ddc:	leave  
  420ddd:	or     bl,cl
  420ddf:	inc    eax
  420de0:	push   edx
  420de1:	das    
  420de2:	iret   
  420de3:	ret    0x4367
  420de6:	pop    ds
  420de7:	xchg   edx,eax
  420de8:	popf   
  420de9:	and    al,0xb3
  420deb:	(bad)  
  420dec:	out    dx,al
  420ded:	popa   
  420dee:	xchg   edx,eax
  420def:	ficomp DWORD PTR [esi-0x7d]
  420df2:	mov    edi,0x72e70fbc
  420df7:	jmp    0x420e76
  420df9:	dec    ebx
  420dfa:	cwde   
  420dfb:	sbb    DWORD PTR [esi-0x7b617b2a],ebp
  420e01:	int    0x5c
  420e03:	repz mov edi,?
  420e06:	and    eax,0x4bb7d040
  420e0b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e0d:	mov    DWORD PTR [ebp+0x33d4ce82],esi
  420e13:	scas   eax,DWORD PTR es:[edi]
  420e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e16:	into   
  420e17:	cmp    esp,ebx
  420e19:	mov    esi,0xd0ea5315
  420e1e:	bound  esi,QWORD PTR [edx]
  420e20:	inc    ecx
  420e21:	fst    QWORD PTR [esi-0x1c]
  420e24:	imul   BYTE PTR [ebp+ebp*2+0x46]
  420e28:	sub    bl,BYTE PTR [ecx]
  420e2a:	sub    DWORD PTR [edx-0x65bb1710],esi
  420e30:	adc    eax,ecx
  420e32:	jl     0x420e59
  420e34:	sub    eax,0x4ab31242
  420e39:	sub    BYTE PTR [eax-0x6a],bh
  420e3c:	jmp    0x9f43:0x5cb0789
  420e43:	or     DWORD PTR [ebp-0x21],edi
  420e46:	mov    ebx,DWORD PTR es:[edx-0x77]
  420e4a:	inc    ebp
  420e4b:	iret   
  420e4c:	mov    cl,0xa1
  420e4e:	repz dec esi
  420e50:	pop    esp
  420e51:	inc    eax
  420e52:	mov    ch,0x4f
  420e54:	ret    
  420e55:	fsub   DWORD PTR [edi-0x62]
  420e58:	adc    eax,0x39846f3d
  420e5d:	jnp    0x420ea8
  420e5f:	shr    DWORD PTR [ebp-0x24],cl
  420e62:	(bad)
  420e65:	fcom   QWORD PTR [esi+ebx*4+0x3e]
  420e69:	pop    ebx
  420e6a:	dec    edi
  420e6b:	mov    bl,0x73
  420e6e:	mov    ss,ecx
  420e70:	cli    
  420e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e72:	pop    ss
  420e73:	sahf   
  420e74:	hlt    
  420e75:	jecxz  0x420ec6
  420e77:	outs   dx,BYTE PTR ds:[esi]
  420e78:	popa   
  420e79:	fist   WORD PTR [esi]
  420e7b:	xor    ecx,ebp
  420e7d:	sub    BYTE PTR [ebx+ecx*2+0x3a],ch
  420e81:	jecxz  0x420e16
  420e83:	sbb    eax,0xb9bc5291
  420e88:	(bad)  
  420e89:	ins    BYTE PTR es:[edi],dx
  420e8a:	stos   BYTE PTR es:[edi],al
  420e8b:	popw   es
  420e8d:	push   ds
  420e8e:	loop   0x420e88
  420e90:	push   esp
  420e91:	push   edi
  420e92:	sub    esp,ebx
  420e94:	call   DWORD PTR [ecx-0x29cd37be]
  420e9a:	scas   al,BYTE PTR es:[edi]
  420e9b:	jecxz  0x420ec1
  420e9d:	mov    al,ds:0xb184f1f2
  420ea2:	daa    
  420ea3:	scas   eax,DWORD PTR es:[edi]
  420ea4:	sub    eax,DWORD PTR [edx-0x1b]
  420ea7:	mov    cl,0x8c
  420ea9:	repnz pop eax
  420eab:	jl     0x420e35
  420ead:	in     al,0xbd
  420eaf:	jne    0x420e5b
  420eb1:	jge    0x420e6b
  420eb3:	repnz fadd QWORD PTR [ecx+0x55]
  420eb7:	adc    edi,edx
  420eb9:	arpl   WORD PTR [ebp+0x6],cx
  420ebc:	add    BYTE PTR [esi+0x18b82f48],al
  420ec2:	pop    ss
  420ec3:	mov    ds:0x3e9d92e4,eax
  420ec8:	imul   edx,DWORD PTR [ecx],0xae28e1be
  420ece:	dec    eax
  420ecf:	push   0x2b
  420ed1:	xchg   edi,eax
  420ed2:	fs mov edi,0x7beb1c94
  420ed8:	push   0x4
  420eda:	mov    ch,0x9b
  420edc:	xchg   DWORD PTR ds:0x64a0bbdf,ebp
  420ee2:	sbb    al,0xe5
  420ee4:	outs   dx,DWORD PTR ds:[esi]
  420ee5:	xchg   ebp,eax
  420ee6:	mov    ecx,0x181c87
  420eeb:	retf   0xab4a
  420eee:	cmp    DWORD PTR [ebx+0x215943ab],edx
  420ef4:	mov    dh,0xea
  420ef6:	xor    al,0xc8
  420ef8:	std    
  420ef9:	pop    edx
  420efa:	push   es
  420efb:	sbb    ebx,DWORD PTR [ebx-0x55e4bd21]
  420f01:	or     bh,al
  420f03:	stc    
  420f04:	sub    eax,DWORD PTR [ecx+0x7246c7bc]
  420f0a:	imul   ecx,DWORD PTR [ebx],0x46
  420f0d:	in     al,dx
  420f0e:	iret   
  420f0f:	in     eax,0x79
  420f11:	or     eax,0xbc5b0501
  420f16:	lea    esi,[ecx-0x19941da]
  420f1c:	sub    al,BYTE PTR [edi-0x37eec83f]
  420f22:	lea    eax,[esi-0x74]
  420f25:	sbb    eax,0xd8e3d4df
  420f2a:	leave  
  420f2b:	scas   eax,DWORD PTR es:[edi]
  420f2c:	pop    ebx
  420f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f2e:	or     BYTE PTR [esi-0x5d4fb226],al
  420f34:	js     0x420fb5
  420f36:	stc    
  420f37:	test   DWORD PTR [ecx+0x3e],edx
  420f3a:	xor    al,BYTE PTR [ebp+eiz*2+0xd21e595]
  420f41:	sbb    eax,0x5fc203e6
  420f46:	aaa    
  420f47:	ja     0x420f45
  420f49:	and    BYTE PTR [eax],bh
  420f4b:	in     al,0xda
  420f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f4e:	mov    ebp,0xcedd1dd7
  420f53:	add    bl,BYTE PTR [ecx+0x56]
  420f56:	cli    
  420f57:	nop
  420f58:	mov    esp,0x52eb2ede
  420f5d:	pushf  
  420f5e:	(bad)  
  420f5f:	sub    BYTE PTR [ebx+0xd],ch
  420f62:	dec    edi
  420f63:	(bad)
  420f66:	mov    dh,0x56
  420f68:	or     bl,dl
  420f6a:	ss in  al,dx
  420f6c:	repz xor eax,DWORD PTR [edi+0x68]
  420f70:	into   
  420f71:	push   edi
  420f72:	pop    es
  420f73:	push   ebx
  420f74:	xchg   ebp,eax
  420f75:	dec    edx
  420f76:	xor    BYTE PTR [ecx-0x2],al
  420f79:	sbb    BYTE PTR ds:0x67259ea,cl
  420f7f:	cmp    eax,0x6fdeb42d
  420f84:	aas    
  420f85:	add    esi,DWORD PTR [eax+eiz*4]
  420f88:	sbb    al,0x3a
  420f8a:	adc    DWORD PTR [edx-0x43],eax
  420f8d:	dec    esi
  420f8e:	cmp    edx,DWORD PTR [ebp-0x80]
  420f91:	sub    dl,BYTE PTR [edi-0xd]
  420f94:	xchg   edi,eax
  420f95:	sbb    al,0xfd
  420f97:	mov    bl,BYTE PTR [ebx]
  420f99:	dec    ecx
  420f9a:	mov    bh,0x10
  420f9c:	fldenv [esi]
  420f9e:	mov    bl,0x5b
  420fa0:	in     al,dx
  420fa1:	dec    esi
  420fa2:	rcr    al,1
  420fa4:	cmp    bh,BYTE PTR [edi+0x41fd4e99]
  420faa:	pop    ebx
  420fab:	cmp    al,0x3d
  420fad:	fcom   QWORD PTR [ebx-0x1f]
  420fb0:	in     al,0x4d
  420fb2:	loope  0x420fb0
  420fb4:	pop    ebx
  420fb5:	stos   BYTE PTR es:[edi],al
  420fb6:	jne    0x42101a
  420fb8:	pop    eax
  420fb9:	out    0x0,eax
  420fbb:	or     BYTE PTR [ecx+edi*8-0x77],ah
  420fbf:	inc    ebp
  420fc0:	or     DWORD PTR [ecx-0x2c],ecx
  420fc3:	push   esi
  420fc4:	jmp    0x8ef5:0x644dda02
  420fcb:	popf   
  420fcc:	dec    esi
  420fcd:	mov    ebp,0x2ec2807a
  420fd2:	mov    ebp,0xe7c84cd7
  420fd7:	mov    DWORD PTR [ecx],edx
  420fd9:	lock inc ebp
  420fdb:	call   0xcd9c9a8
  420fe0:	xchg   esi,eax
  420fe1:	(bad)  
  420fe2:	cmc    
  420fe3:	or     esi,DWORD PTR gs:[ebp-0x31]
  420fe7:	and    BYTE PTR [eax+0x74],cl
  420fea:	shl    DWORD PTR [edi+0x7b],cl
  420fed:	aaa    
  420fee:	xlat   BYTE PTR ds:[ebx]
  420fef:	pop    edx
  420ff0:	lock ins BYTE PTR es:[edi],dx
  420ff2:	dec    edx
  420ff3:	mov    bl,0x76
  420ff5:	sar    DWORD PTR [esi+0x69e5d312],0xa2
  420ffc:	jns    0x42101b
  420ffe:	mov    dh,0x75
  421000:	lock mov eax,0xe0598610
  421006:	jnp    0x420f96
  421008:	stc    
  421009:	lods   eax,DWORD PTR ds:[esi]
  42100a:	jnp    0x420fa3
  42100c:	enter  0x1ff4,0x72
  421010:	mov    al,ds:0x7b3c3933
  421015:	and    al,0x68
  421017:	in     eax,dx
  421018:	xor    ebx,DWORD PTR [edi-0x24]
  42101b:	xchg   esp,eax
  42101c:	dec    ecx
  42101d:	rol    bl,0x22
  421020:	ins    BYTE PTR es:[edi],dx
  421021:	cmp    eax,0xc3333c3d
  421026:	and    eax,0xf9faa92c
  42102b:	ret    0x6403
  42102e:	icebp  
  42102f:	loopne 0x420fcd
  421031:	mov    bh,BYTE PTR [eax+0x4f]
  421034:	jb     0x421008
  421036:	add    BYTE PTR [esi],0x82
  421039:	mov    ch,0xb1
  42103b:	mov    WORD PTR [edi],cs
  42103d:	cli    
  42103e:	out    0xd0,ax
  421041:	sti    
  421042:	(bad)  
  421043:	repz add al,0x7f
  421046:	fild   QWORD PTR [edi]
  421048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421049:	rcr    BYTE PTR [ebx],0x73
  42104c:	xchg   BYTE PTR [eax-0x57],cl
  42104f:	mov    bl,0x6d
  421051:	and    DWORD PTR [ecx],edi
  421053:	in     al,0x3d
  421055:	sysexit 
  421057:	mov    edi,0xbb5ba259
  42105c:	sbb    al,0xc6
  42105e:	sti    
  42105f:	addr16 xor eax,0xbe2773b0
  421065:	call   0x94686839
  42106a:	cmp    eax,0x9f6d1efa
  42106f:	add    al,0xb8
  421071:	xchg   esi,eax
  421072:	or     bl,BYTE PTR [ecx*8+0x2a3bab31]
  421079:	xchg   edi,eax
  42107a:	ss mov cl,0x9b
  42107d:	xor    ecx,edx
  42107f:	data16 and al,0xb1
  421082:	push   esi
  421083:	xlat   BYTE PTR ds:[ebx]
  421084:	imul   edx,DWORD PTR [ecx+0x39444f9a],0x1
  42108b:	popa   
  42108c:	mov    DWORD PTR [ebx],eax
  42108e:	std    
  42108f:	mov    dh,0xa3
  421091:	or     eax,0x927343b2
  421096:	ds push ds
  421098:	add    DWORD PTR [edx+0x7d],ebp
  42109b:	shl    DWORD PTR [esi+0x1f],0xcd
  42109f:	sbb    eax,0x17898a29
  4210a4:	mov    WORD PTR [ebx-0x72],?
  4210a7:	push   ss
  4210a8:	je     0x421126
  4210aa:	push   esp
  4210ab:	xchg   esp,eax
  4210ac:	mov    ebp,0xe7a2de56
  4210b1:	inc    ecx
  4210b2:	out    dx,eax
  4210b3:	sub    al,0x49
  4210b5:	and    DWORD PTR [ecx+eax*2+0x2181e074],esi
  4210bc:	in     al,dx
  4210bd:	stos   BYTE PTR es:[edi],al
  4210be:	repz sub DWORD PTR [ebx+0x75],ebp
  4210c2:	jmp    0x898ae18d
  4210c7:	adc    al,0x22
  4210c9:	cmp    eax,0x68ac9c7d
  4210ce:	sub    BYTE PTR [esi+0x3a2f123a],ah
  4210d4:	mov    edx,0xb2750ca2
  4210d9:	xchg   ecx,eax
  4210da:	sbb    eax,0xae476194
  4210df:	outs   dx,BYTE PTR ds:[esi]
  4210e0:	mov    ebx,0x67ddf564
  4210e5:	mov    esi,0x998dd197
  4210ea:	pop    ds
  4210eb:	cs ret 0x882c
  4210ef:	add    DWORD PTR [ebx],0x9d96d635
  4210f5:	xchg   esi,eax
  4210f6:	xchg   BYTE PTR [ecx-0x2b],dl
  4210f9:	sbb    al,0x92
  4210fb:	add    bl,BYTE PTR [ebp+0x34cae7c5]
  421101:	adc    eax,0x2e5a86bb
  421106:	mov    ecx,0xdd747bbd
  42110b:	js     0x4210ff
  42110d:	mov    bh,0x91
  42110f:	in     al,0x92
  421111:	cld    
  421112:	(bad)  
  421113:	out    dx,al
  421114:	js     0x42114f
  421116:	dec    esi
  421117:	test   BYTE PTR [esi+0x5f83f8b1],ch
  42111d:	retf   0x7e7b
  421120:	add    DWORD PTR [edx+0x75],ebp
  421123:	mov    ebp,0xe28589e
  421128:	loope  0x421129
  42112a:	scas   eax,DWORD PTR es:[edi]
  42112b:	xor    al,BYTE PTR [eax+0x6c]
  42112e:	cmp    ch,BYTE PTR [eax+ebp*8-0x1bcc2385]
  421135:	adc    eax,0x8d9e5fd0
  42113a:	fcomp  DWORD PTR [ecx]
  42113c:	clc    
  42113d:	sbb    ecx,DWORD PTR [eax]
  42113f:	jnp    0x42114e
  421141:	jae    0x421130
  421143:	adc    BYTE PTR [ecx-0x37],ch
  421146:	and    eax,0x41e38c5
  42114b:	in     al,dx
  42114c:	stos   DWORD PTR es:[edi],eax
  42114d:	je     0x421125
  42114f:	in     al,0x48
  421151:	add    dh,ch
  421153:	stos   BYTE PTR es:[edi],al
  421154:	daa    
  421155:	adc    edx,eax
  421157:	int3   
  421158:	popa   
  421159:	ins    DWORD PTR es:[edi],dx
  42115a:	ret    0xea4e
  42115d:	test   eax,0xf657e1d
  421162:	out    dx,eax
  421163:	in     eax,0xc2
  421165:	(bad)  
  421166:	rcr    esp,0x15
  421169:	je     0x421197
  42116b:	cmp    dh,BYTE PTR [eax]
  42116d:	mov    ch,0xc7
  42116f:	sub    bh,BYTE PTR [edi]
  421171:	mov    ebx,0x707c6d20
  421176:	push   cs
  421177:	or     esi,DWORD PTR [edi+0x6b3d7154]
  42117d:	daa    
  42117e:	xchg   ecx,eax
  42117f:	sar    DWORD PTR [ecx],cl
  421181:	test   BYTE PTR [ebp-0x486c8c38],bh
  421187:	stos   BYTE PTR es:[edi],al
  421188:	inc    edi
  421189:	inc    esp
  42118a:	sbb    eax,DWORD PTR [eax]
  42118c:	mov    bh,0x81
  42118e:	dec    edi
  42118f:	and    al,0xf
  421191:	xor    esp,esi
  421193:	push   cs
  421194:	jns    0x421163
  421196:	xchg   esp,eax
  421197:	mov    edx,0xd9593207
  42119c:	imul   ebp,DWORD PTR cs:0x73c0332e,0xcc8f8fdd
  4211a7:	xchg   ebx,eax
  4211a8:	ror    DWORD PTR [ecx],cl
  4211aa:	and    al,0xb8
  4211ac:	and    DWORD PTR [edx+edx*4+0x4dcf2f81],ebp
  4211b3:	cmp    eax,0xa606e6cd
  4211b8:	(bad)  
  4211ba:	cmp    DWORD PTR [ecx-0x25cc94d3],ebx
  4211c0:	test   eax,0x4c87f973
  4211c5:	(bad)  
  4211c7:	jmp    0x3788:0xb0b4711b
  4211ce:	and    edx,ebx
  4211d0:	sbb    bh,BYTE PTR [ebp+edi*1+0x13e2e7d3]
  4211d7:	stos   DWORD PTR es:[edi],eax
  4211d8:	loop   0x42115b
  4211da:	mov    eax,ecx
  4211dc:	rcr    BYTE PTR [edx+0x12582be0],0x8f
  4211e3:	es push edi
  4211e5:	je     0x4211b3
  4211e7:	sbb    eax,0x3ff49933
  4211ec:	mov    esp,0xf59c5f82
  4211f1:	add    al,0x19
  4211f3:	or     dh,bh
  4211f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f6:	fwait
  4211f7:	push   esp
  4211f8:	stc    
  4211f9:	push   ebp
  4211fa:	rcr    DWORD PTR [eax],1
  4211fc:	cdq    
  4211fd:	cld    
  4211fe:	push   ds
  4211ff:	nop
  421200:	je     0x4211d4
  421202:	fst    QWORD PTR [esi]
  421204:	jno    0x421213
  421206:	mov    ebx,ebx
  421208:	xor    eax,0x1fb26e93
  42120d:	fwait
  42120e:	mov    eax,0x6060704b
  421213:	cmc    
  421214:	in     eax,dx
  421215:	shl    DWORD PTR [ecx-0x1a],cl
  421218:	lods   eax,DWORD PTR ds:[esi]
  421219:	add    ebx,DWORD PTR [edx]
  42121b:	jp     0x42127e
  42121d:	sar    DWORD PTR [esi],1
  42121f:	imul   esi,DWORD PTR [esi-0xa],0x4d33e3f6
  421226:	jl     0x421236
  421228:	jge    0x4211ef
  42122a:	mov    WORD PTR [ebx-0x3036de0b],cs
  421230:	mov    edi,0xcd180ed7
  421235:	outs   dx,BYTE PTR ds:[esi]
  421236:	xchg   esp,eax
  421237:	fwait
  421238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421239:	bound  esi,QWORD PTR ds:0xbb08f3f3
  42123f:	arpl   WORD PTR [ebx],dx
  421241:	mov    ah,0x87
  421243:	lahf   
  421244:	dec    ebx
  421245:	ror    DWORD PTR [ebx],cl
  421247:	(bad)  
  421249:	dec    ebp
  42124a:	sbb    BYTE PTR [edi+0x72],bl
  42124d:	push   ebx
  42124e:	lods   al,BYTE PTR ds:[esi]
  42124f:	and    DWORD PTR [ecx-0x457bd601],esp
  421255:	leave  
  421256:	js     0x42120f
  421258:	cld    
  421259:	data16 jle 0x4212b4
  42125c:	fcomp  DWORD PTR [ecx]
  42125e:	int    0xed
  421260:	ins    DWORD PTR es:[edi],dx
  421261:	sub    ecx,DWORD PTR [ecx+edi*4-0x15554418]
  421268:	ret    0x28c4
  42126b:	mov    eax,ds:0x639d60de
  421270:	retf   
  421271:	shr    BYTE PTR [esi+0x12],1
  421274:	ds xor dl,ah
  421277:	pop    edi
  421278:	into   
  421279:	inc    ebx
  42127a:	and    ch,BYTE PTR [esi]
  42127c:	lds    ecx,FWORD PTR [edx+ebx*4]
  42127f:	inc    edi
  421280:	mov    DWORD PTR gs:[edx-0x47dcdb6f],esi
  421287:	call   0xc0a8:0xccd77af1
  42128e:	call   0xe166:0x266f4fc1
  421295:	push   cs
  421296:	aas    
  421297:	jbe    0x42127c
  421299:	inc    ecx
  42129a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129b:	push   es
  42129c:	test   al,0xeb
  42129e:	xchg   DWORD PTR [edx+0x22],ebp
  4212a1:	jbe    0x4212a8
  4212a3:	outs   dx,BYTE PTR ds:[esi]
  4212a4:	or     al,0xdf
  4212a6:	aam    0x2
  4212a8:	arpl   bp,di
  4212aa:	or     al,0x7b
  4212ac:	inc    esp
  4212ad:	dec    ebp
  4212ae:	sub    BYTE PTR [ebp+0x7cbc5a7f],0x27
  4212b5:	pop    es
  4212b6:	stc    
  4212b7:	mov    ebp,ebp
  4212b9:	repnz sbb eax,0xa8131f1b
  4212bf:	aaa    
  4212c0:	inc    edx
  4212c1:	rol    DWORD PTR [edx+0x7a],1
  4212c4:	push   ecx
  4212c5:	test   DWORD PTR [esi-0x10bd77f1],edx
  4212cb:	sub    BYTE PTR [ebp+0x7c],ah
  4212ce:	and    eax,0xe9d44674
  4212d3:	fs adc ah,al
  4212d6:	int3   
  4212d7:	and    BYTE PTR [edi+0x248bfa4a],al
  4212dd:	or     al,0xcf
  4212df:	or     al,0x1c
  4212e1:	mov    dh,0x7
  4212e3:	pop    esp
  4212e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e5:	xchg   ecx,eax
  4212e6:	out    dx,al
  4212e7:	outs   dx,DWORD PTR ds:[esi]
  4212e8:	daa    
  4212e9:	pushf  
  4212ea:	int    0x33
  4212ec:	cmp    BYTE PTR [eax+0x707d58c6],ah
  4212f2:	sbb    BYTE PTR [ebp+0x61],dl
  4212f5:	neg    esi
  4212f7:	jno    0x4212dc
  4212f9:	mov    esp,0xa61d7817
  4212fe:	shl    DWORD PTR [ecx+esi*8],0x5b
  421302:	xlat   BYTE PTR ds:[ebx]
  421303:	outs   dx,DWORD PTR ds:[esi]
  421304:	jle    0x4212c3
  421306:	jp     0x421320
  421308:	mov    ebx,0x6a774867
  42130d:	sub    eax,0x91834446
  421312:	sbb    eax,0x8112514a
  421317:	ret    
  421318:	iret   
  421319:	pop    eax
  42131a:	imul   edi,esp,0x72
  42131d:	sbb    al,0x54
  42131f:	add    bh,BYTE PTR [eax]
  421321:	xchg   edi,eax
  421322:	call   0xea7f4506
  421327:	int3   
  421328:	mov    bl,0xc9
  42132a:	jle    0x421343
  42132c:	addr16 in al,0x7e
  42132f:	push   0x53
  421331:	mov    al,0x68
  421333:	xchg   edx,eax
  421334:	pop    ecx
  421335:	repnz dec esi
  421337:	je     0x42136a
  421339:	sbb    bh,0xcc
  42133c:	sbb    BYTE PTR [ecx-0x9],al
  42133f:	jp     0x4212d2
  421341:	fcomp  DWORD PTR [edi]
  421343:	push   0x10e4fb13
  421348:	cmp    ah,BYTE PTR [ebx+0x78bfdb2b]
  42134e:	in     eax,dx
  42134f:	jmp    0x7069:0xa2a28e57
  421356:	outs   dx,BYTE PTR ds:[esi]
  421357:	add    al,0x40
  421359:	pop    edx
  42135a:	arpl   WORD PTR [ebx],di
  42135c:	pop    ds
  42135d:	clc    
  42135e:	sbb    al,0xdf
  421360:	jmp    0xc2b94282
  421365:	jno    0x421399
  421367:	(bad)  
  421368:	in     eax,0xe1
  42136a:	inc    ecx
  42136b:	dec    ebp
  42136c:	iret   
  42136d:	es into 
  42136f:	push   es
  421370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421372:	dec    edx
  421373:	xor    BYTE PTR [esi+0xa],dl
  421376:	cld    
  421377:	rcl    BYTE PTR [ebx-0x47],0xed
  42137b:	pop    esp
  42137c:	lea    edi,[ebx-0x6df6fe6e]
  421382:	add    DWORD PTR [esi],ebp
  421384:	mov    edx,ebp
  421386:	ret    
  421387:	sti    
  421388:	xor    DWORD PTR [eax-0x5c],ecx
  42138b:	xchg   esp,eax
  42138c:	xchg   ebp,eax
  42138d:	cli    
  42138e:	mov    edi,0x7cf28e96
  421393:	xchg   ecx,eax
  421394:	lods   eax,DWORD PTR ds:[esi]
  421395:	nop
  421396:	pop    es
  421397:	test   eax,0x531c8359
  42139c:	repnz xchg edi,eax
  42139e:	repz jge 0x421372
  4213a1:	adc    BYTE PTR [edi+0x31],bl
  4213a4:	aaa    
  4213a5:	cmp    eax,0x8582d2a4
  4213aa:	mov    ch,0xe3
  4213ac:	aam    0x36
  4213ae:	repz into 
  4213b0:	pop    es
  4213b1:	adc    BYTE PTR [eax-0x78dca915],al
  4213b7:	mov    WORD PTR [edx+ebx*2],?
  4213ba:	mov    WORD PTR [ebx],gs
  4213bc:	loop   0x4213e0
  4213be:	adc    ch,ch
  4213c0:	xadd   DWORD PTR [ebx],ebp
  4213c3:	imul   esp,DWORD PTR [ebx-0x534c8b26],0xffffffef
  4213ca:	pop    edi
  4213cb:	or     al,0xe0
  4213cd:	bound  edx,QWORD PTR [eax-0x59642bc7]
  4213d3:	aas    
  4213d4:	aad    0x9a
  4213d6:	(bad)  
  4213d7:	loop   0x421452
  4213d9:	mov    dl,0x9
  4213db:	retf   
  4213dc:	dec    esi
  4213dd:	sbb    eax,0xf7b3c577
  4213e2:	jecxz  0x4213b1
  4213e4:	push   eax
  4213e5:	ret    
  4213e6:	add    DWORD PTR [ecx+eax*4+0x6c],edi
  4213ea:	int3   
  4213eb:	or     BYTE PTR [edx-0x44],0xf0
  4213ef:	add    BYTE PTR [esi],ah
  4213f1:	dec    ebx
  4213f2:	cdq    
  4213f3:	or     BYTE PTR [ebp-0x7c],0xed
  4213f7:	cmp    bl,BYTE PTR [ebx+0x635f9fff]
  4213fd:	icebp  
  4213fe:	call   0x559:0xd147a255
  421405:	(bad)  
  421407:	inc    esp
  421408:	inc    esi
  421409:	dec    ebp
  42140a:	in     eax,0xe3
  42140c:	sahf   
  42140d:	popa   
  42140e:	pop    eax
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0x821588e2
  42147c:	ds pusha 
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	pop    esp
  421483:	add    BYTE PTR [eax],al
  421485:	add    BYTE PTR [edx+edx*8+0x58],bh
  421489:	jle    0x4214e4
  42148b:	jo     0x42149e
  42148d:	inc    ecx
  42148e:	test   al,0x1c
  421490:	scas   al,BYTE PTR es:[edi]
  421491:	add    BYTE PTR [ecx],ch
  421493:	push   0xde92415a
  421498:	std    
  421499:	pop    ds
  42149a:	scas   eax,DWORD PTR es:[edi]
  42149b:	fwait
  42149c:	xchg   esi,eax
  42149d:	iret   
  42149e:	scas   eax,DWORD PTR es:[edi]
  42149f:	xchg   BYTE PTR [ebx-0x590e8839],al
  4214a5:	call   DWORD PTR ds:0x5741eee8
  4214ab:	jne    0x4214b8
  4214ad:	out    0x69,eax
  4214af:	pop    ebx
  4214b0:	aaa    
  4214b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214b2:	fimul  DWORD PTR [ecx]
  4214b4:	mov    ds:0x9b37345e,eax
  4214b9:	scas   eax,DWORD PTR es:[edi]
  4214ba:	inc    eax
  4214bb:	fs inc ecx
  4214bd:	scas   eax,DWORD PTR es:[edi]
  4214be:	push   esi
  4214bf:	cmp    BYTE PTR [eax+0x7a],dl
  4214c2:	rcl    BYTE PTR [ebx],0xd3
  4214c5:	dec    ebx
  4214c6:	add    DWORD PTR [edx],edi
  4214c8:	into   
  4214c9:	bound  esp,QWORD PTR [esi-0x2a]
  4214cc:	repz in eax,0x30
  4214cf:	jb     0x4214f6
  4214d1:	mov    al,ds:0x83266e
  4214d6:	push   esp
  4214d7:	adc    al,0xed
  4214d9:	retf   
  4214da:	add    eax,0x9d73d18a
  4214df:	sbb    BYTE PTR [edx-0x14],0x0
	...
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x2555b23e
  4214fe:	ror    ebp,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    esp
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [ebp+0x56],bl
  421508:	fwait
  421509:	mov    bh,0xeb
  42150b:	add    bh,0x5
  42150e:	mov    BYTE PTR [esi],cl
  421510:	xor    ch,BYTE PTR [esp+ebp*1-0x34ac4185]
  421517:	(bad)
  42151b:	mov    eax,ds:0x9e3a27bd
  421520:	loopne 0x42152e
  421522:	xchg   esi,eax
  421523:	into   
  421524:	dec    ebp
  421525:	inc    ebx
  421526:	bound  ebp,QWORD PTR ds:0xedcbfb4a
  42152c:	sbb    edi,DWORD PTR [ecx+eax*1-0x3c]
  421530:	mov    esi,0x6371b3e9
  421535:	sbb    al,0xc6
  421537:	mov    eax,ds:0xa8ad70f6
  42153c:	sbb    BYTE PTR [ebp-0x6077e0c8],dh
  421542:	or     al,0x6f
  421544:	je     0x4214d6
  421546:	add    DWORD PTR [ecx+0x67],ebp
  421549:	in     al,0x56
  42154b:	dec    ebp
  42154c:	and    BYTE PTR [eax+0x18a179f4],cl
  421552:	adc    al,BYTE PTR [eax]
  421554:	push   ds
  421555:	cmp    edi,0xffffffa0
  421558:	or     eax,0xebd5249
  42155d:	add    BYTE PTR [ebx-0x6],bl
  421560:	clc    
  421561:	fiadd  DWORD PTR [eax]
	...
  42156b:	add    BYTE PTR [eax],al
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x4d3de756],0x2f
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    esp
  421583:	add    BYTE PTR [eax],al
  421585:	add    BYTE PTR [ecx],dl
  421587:	mov    ebp,0xf5d14306
  42158c:	je     0x421547
  42158e:	inc    edx
  42158f:	es pop eax
  421591:	lahf   
  421592:	jmp    0xf6172a77
  421597:	pop    edx
  421598:	mov    WORD PTR [ebx+0x4c],ss
  42159b:	push   edx
  42159c:	mov    al,0x1b
  42159e:	out    dx,al
  42159f:	dec    edi
  4215a0:	in     al,0xc6
  4215a2:	std    
  4215a3:	fnsave [ebp+0x168da3e8]
  4215a9:	jg     0x42155f
  4215ab:	jb     0x4215de
  4215ad:	(bad)  
  4215af:	mov    cl,0x2
  4215b1:	into   
  4215b2:	fcomp  QWORD PTR [edi+0x5a]
  4215b5:	pop    eax
  4215b6:	repz and edx,DWORD PTR [eax+0x7c]
  4215ba:	mov    cl,0xbe
  4215bc:	and    eax,0xbdb416bd
  4215c1:	xchg   edx,eax
  4215c2:	jecxz  0x42157a
  4215c4:	loop   0x421610
  4215c6:	xor    ecx,edi
  4215c8:	xchg   esi,eax
  4215c9:	jg     0x421636
  4215cb:	(bad)  
  4215cc:	xor    edi,eax
  4215ce:	mov    dh,0x15
  4215d0:	xchg   esp,eax
  4215d1:	fwait
  4215d2:	pop    eax
  4215d3:	xchg   esi,eax
  4215d4:	xchg   edi,eax
  4215d5:	in     al,0x97
  4215d7:	rol    DWORD PTR [eax],1
  4215d9:	shl    BYTE PTR [eax+0x5d],cl
  4215dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215dd:	pop    esi
  4215de:	shl    DWORD PTR [eax+esi*1+0x3c],0x0
	...
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	leave  
  4215fb:	ret    0x8d30
  4215fe:	mov    ecx,esi
  421600:	add    DWORD PTR [eax],eax
  421602:	pop    esp
  421603:	add    BYTE PTR [eax],al
  421605:	add    cl,ch
  421607:	arpl   WORD PTR [ebx-0x5],ax
  42160a:	jo     0x421677
  42160c:	jmp    0x4215ce
  42160e:	and    al,0x14
  421610:	lock mov eax,0x34bcbbc6
  421616:	xchg   edx,eax
  421617:	mov    edx,DWORD PTR [edx+0x29]
  42161a:	lds    esp,FWORD PTR [eax]
  42161c:	imul   esp,DWORD PTR [ebx-0x4d],0xd05e4c60
  421623:	mov    edx,0x27bd5da
  421628:	dec    esi
  421629:	sub    esp,edx
  42162b:	(bad)  
  42162d:	lock cmc 
  42162f:	push   cs
  421630:	mov    ebp,0x8298f5bb
  421635:	and    esi,DWORD PTR [eax+0x63]
  421638:	sti    
  421639:	pushf  
  42163a:	jns    0x421676
  42163c:	sti    
  42163d:	cmc    
  42163e:	mov    ds:0x27ba1bba,al
  421643:	fist   WORD PTR [ebx]
  421645:	dec    eax
  421646:	(bad)  
  421647:	mul    DWORD PTR ss:[edi-0x37]
  42164b:	dec    edi
  42164c:	dec    ebp
  42164d:	push   cs
  42164e:	mov    bl,0x55
  421650:	scas   al,BYTE PTR es:[edi]
  421651:	dec    esi
  421652:	jecxz  0x421668
  421654:	xchg   ebx,eax
  421655:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421657:	adc    al,0x53
  421659:	add    eax,0x76bb30cd
  42165e:	sub    edi,DWORD PTR [ebp+0xc34]
	...
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x7d86ff14,al
  42167e:	out    0xce,eax
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    esp
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [edi+0x26c7f5ea],bl
  42168b:	call   DWORD PTR [ebp+0x78]
  42168e:	inc    eax
  42168f:	ret    0x74
  421692:	fstp   DWORD PTR [edx-0x3a]
  421695:	ret    0x995e
  421698:	sub    DWORD PTR [ebx+0x21],esi
  42169b:	lahf   
  42169c:	hlt    
  42169d:	in     eax,0x37
  42169f:	mov    bl,0xff
  4216a1:	xchg   esp,eax
  4216a2:	sti    
  4216a3:	mov    cl,dh
  4216a5:	and    dh,BYTE PTR [eax-0x4f]
  4216a8:	lock outs dx,DWORD PTR ss:[esi]
  4216ab:	sbb    al,0x97
  4216ad:	pop    esi
  4216ae:	sub    ah,BYTE PTR [ebx-0x4ab147fd]
  4216b4:	inc    esp
  4216b5:	mov    ch,0x5
  4216b7:	leave  
  4216b8:	imul   ebx,DWORD PTR [ecx],0xffffffa8
  4216bb:	push   eax
  4216bc:	cwde   
  4216bd:	mov    al,ds:0x6f129a62
  4216c2:	or     BYTE PTR [edi-0x6ece3b47],al
  4216c8:	cli    
  4216c9:	(bad)  
  4216ca:	mov    ds:0xb774fbc,eax
  4216cf:	aam    0x58
  4216d1:	add    ah,bh
  4216d3:	jg     0x42168d
  4216d5:	ss and al,0xeb
  4216d8:	fadd   DWORD PTR [ebp-0x2fbee8d4]
  4216de:	fistp  QWORD PTR [esi]
  4216e1:	aam    0x0
	...
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	(bad)  
  4216fc:	ret    0x439a
  4216ff:	iret   
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    esp
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [ecx+edi*4+0x46b787bf],ah
  42170c:	sub    edx,DWORD PTR [ecx]
  42170e:	adc    eax,0xce4e60e6
  421713:	lods   eax,DWORD PTR ds:[esi]
  421714:	pop    ebp
  421715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421716:	test   eax,0xff332ac2
  42171b:	fiadd  DWORD PTR [eax-0x72f2d6ac]
  421721:	mov    ah,0x2
  421723:	jae    0x421727
  421725:	out    dx,al
  421726:	xchg   ebp,eax
  421727:	cli    
  421728:	popa   
  421729:	aas    
  42172a:	clc    
  42172b:	mov    ah,0xa7
  42172d:	adc    esp,edi
  42172f:	(bad)  
  421730:	out    0x5a,al
  421732:	fsubp  st(6),st
  421734:	cmp    ebp,DWORD PTR [ecx-0x2490e9b8]
  42173a:	loopne 0x4217a8
  42173c:	and    ah,BYTE PTR [ebx]
  42173e:	xor    eax,0xa218feed
  421743:	jge    0x4216ea
  421745:	and    al,0xd6
  421747:	xchg   ebp,eax
  421748:	lods   al,BYTE PTR ds:[esi]
  421749:	adc    al,0x32
  42174b:	and    eax,0x2dfce4e9
  421750:	jle    0x4217be
  421752:	push   0xffffff95
  421754:	jl     0x4217a0
  421756:	push   ds
  421757:	jle    0x42175d
  421759:	or     esp,DWORD PTR [esi-0x3d964d48]
  42175f:	icebp  
  421760:	mov    ds:0xb9,eax
	...
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x7b6a4e09
  42177b:	loop   0x421700
  42177d:	ins    BYTE PTR es:[edi],dx
  42177e:	lahf   
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	pop    esp
  421783:	add    BYTE PTR [eax],al
  421785:	add    BYTE PTR [edi-0x30c48bd7],bl
  42178b:	adc    edx,DWORD PTR [ecx+0x6283904b]
  421791:	jmp    0x26884396
  421796:	jb     0x4217db
  421798:	jle    0x4217f2
  42179a:	and    esi,DWORD PTR [edi+0x5f75bf65]
  4217a0:	sbb    eax,0xda85feaf
  4217a5:	lahf   
  4217a6:	test   DWORD PTR [esi],esp
  4217a8:	data16 jecxz 0x4217ab
  4217ab:	push   eax
  4217ac:	fadd   QWORD PTR [ebx-0xb]
  4217af:	test   al,0xe0
  4217b1:	mov    ebx,0xa9b9f0df
  4217b6:	iret   
  4217b7:	inc    ebp
  4217b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b9:	js     0x42177d
  4217bb:	lahf   
  4217bc:	div    DWORD PTR [bp+si+0x3157]
  4217c1:	stos   DWORD PTR es:[edi],eax
  4217c2:	sbb    edi,esi
  4217c4:	xor    DWORD PTR [ecx+0x4e],esp
  4217c7:	fldcw  WORD PTR [edi]
  4217c9:	dec    ebp
  4217ca:	mov    ebp,0x1fc4f19d
  4217cf:	out    dx,al
  4217d0:	xchg   ecx,eax
  4217d1:	push   ebx
  4217d2:	jbe    0x421846
  4217d4:	das    
  4217d5:	pop    edx
  4217d6:	data16 jl 0x4217b0
  4217d9:	and    ah,BYTE PTR [ebx+0x5eeb0ecd]
  4217df:	adc    edi,DWORD PTR [ebx+0x34]
	...
  4217ed:	add    BYTE PTR [edx],dl
  4217ef:	mov    edx,0xe6f8c6d8
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	sti    
  4217fb:	das    
  4217fc:	and    al,0x74
  4217fe:	cmp    esp,ecx
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    esp
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [ecx-0x339c9f62],dl
  42180b:	ret    
  42180c:	in     al,dx
  42180d:	cmc    
  42180e:	push   ecx
  42180f:	xor    DWORD PTR [esi+0x61],edx
  421812:	add    BYTE PTR [ebp+eax*4+0x44],bl
  421816:	outs   dx,BYTE PTR ds:[esi]
  421817:	outs   dx,DWORD PTR ds:[esi]
  421818:	adc    ah,BYTE PTR [ebp+0x18]
  42181b:	rol    BYTE PTR ds:0x41e0c5a1,cl
  421821:	sbb    DWORD PTR [eax-0x56],esi
  421824:	popf   
  421825:	add    eax,0xd5873f42
  42182a:	fcmovb st,st(5)
  42182c:	pop    ecx
  42182e:	dec    ebp
  42182f:	(bad)  
  421830:	repz rcl BYTE PTR ds:0xc81513c4,0xc3
  421838:	gs sub eax,0xa53f306e
  42183e:	aad    0xa0
  421840:	jge    0x42184e
  421842:	in     eax,0x80
  421844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421845:	mov    ebx,0xc63d70e6
  42184a:	push   esp
  42184b:	push   0xecd62eba
  421850:	cmp    bh,ch
  421852:	mov    dl,ch
  421854:	xor    cl,BYTE PTR [ebx]
  421856:	inc    eax
  421857:	jbe    0x4217e6
  421859:	add    BYTE PTR [ebp+ebx*8-0x3d],bl
  42185d:	inc    DWORD PTR [ecx-0x12]
  421860:	pusha  
  421861:	push   esp
	...
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	loop   0x421879
  42187c:	repz push 0x1e197
  421882:	pop    esp
  421883:	add    BYTE PTR [eax],al
  421885:	add    BYTE PTR [ecx-0x5],ah
  421888:	ror    DWORD PTR [eax+0x3],1
  42188b:	idiv   BYTE PTR [esi+eiz*4+0x154fa64a]
  421892:	(bad)  [edx-0x27]
  421895:	outs   dx,BYTE PTR ds:[esi]
  421896:	scas   al,BYTE PTR es:[edi]
  421897:	outs   dx,BYTE PTR ds:[esi]
  421898:	xchg   edx,eax
  421899:	les    edx,FWORD PTR [edx]
  42189b:	cld    
  42189c:	jmp    DWORD PTR [ecx+0x63]
  42189f:	not    DWORD PTR [edi-0x17]
  4218a2:	dec    edx
  4218a3:	ret    
  4218a4:	cwde   
  4218a5:	jmp    0x1728:0x22e7fd70
  4218ac:	cmp    DWORD PTR [edi],ebp
  4218ae:	or     esp,DWORD PTR [esp+edx*8+0x6c70f2d4]
  4218b5:	in     eax,0xa7
  4218b7:	jge    0x421937
  4218b9:	(bad)  
  4218ba:	and    eax,DWORD PTR ds:0x934a63ef
  4218c0:	jb     0x421880
  4218c2:	fcmovnbe st,st(2)
  4218c4:	out    dx,al
  4218c5:	js     0x421918
  4218c7:	mov    al,ds:0x5e1d2c57
  4218cc:	hlt    
  4218cd:	and    al,0x1e
  4218cf:	fbstp  TBYTE PTR [edx-0x18]
  4218d2:	ret    0xf1c3
  4218d5:	push   es
  4218d6:	pop    ecx
  4218d7:	shl    DWORD PTR [esi],cl
  4218d9:	out    0xa9,eax
  4218db:	into   
  4218dc:	(bad)  
  4218dd:	pop    ss
  4218de:	sub    BYTE PTR [edx],al
  4218e0:	xor    dl,BYTE PTR [edi+0x0]
	...
  4218ee:	addr16 (bad) 
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x34d9da72
  4218fc:	sbb    esp,esi
  4218fe:	repz loope 0x421902
  421901:	add    BYTE PTR [eax+eax*1+0x0],bl
  421905:	add    ch,ch
  421907:	les    edx,FWORD PTR [ecx+0x134c04cd]
  42190d:	fstp   TBYTE PTR [edi]
  42190f:	cmp    al,0xd
  421911:	mov    eax,0xb34e989f
  421916:	push   cs
  421917:	and    edi,esp
  421919:	jns    0x421907
  42191b:	mov    BYTE PTR ds:0xc89f917e,al
  421921:	xchg   ecx,eax
  421922:	mov    ah,BYTE PTR [ebx+0x43]
  421925:	outs   dx,DWORD PTR ds:[esi]
  421926:	js     0x421999
  421928:	mov    ss,WORD PTR [ecx-0x570381ba]
  42192e:	sbb    esp,DWORD PTR [edi-0x70]
  421931:	fisubr WORD PTR ds:0x15c0363e
  421937:	jge    0x4218f4
  421939:	mov    dl,0xef
  42193b:	pop    ecx
  42193c:	inc    eax
  42193d:	add    ecx,esi
  42193f:	rcr    BYTE PTR [edx-0x80],0x18
  421943:	xchg   esi,eax
  421944:	fwait
  421945:	sub    ebp,DWORD PTR [edi+eax*8]
  421948:	mov    dl,0x7a
  42194a:	scas   al,BYTE PTR es:[edi]
  42194b:	fisubr WORD PTR [edx]
  42194d:	inc    esp
  42194e:	popa   
  42194f:	cmc    
  421950:	xchg   ecx,eax
  421951:	iret   
  421952:	arpl   cx,sp
  421954:	adc    ah,BYTE PTR [ecx+edi*8+0x63741aa9]
  42195b:	jg     0x42197b
  42195d:	or     eax,0x512493fb
	...
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0xccf15147,eax
  42197d:	stc    
  42197e:	dec    edi
  42197f:	loop   0x421982
  421981:	add    BYTE PTR [eax+eax*1+0x0],bl
  421985:	add    BYTE PTR [ecx],al
  421987:	mov    ah,0xa3
  421989:	or     al,0x17
  42198b:	sahf   
  42198c:	mov    ds:0xcdbfbacc,eax
  421991:	xor    al,cl
  421993:	mov    DWORD PTR [esi-0x438f1966],ebx
  421999:	ds out dx,al
  42199b:	jmp    0x2e6ae7b8
  4219a0:	lods   eax,DWORD PTR ds:[esi]
  4219a1:	out    dx,eax
  4219a2:	test   DWORD PTR [eax+0x3d],0xbcbbe750
  4219a9:	popa   
  4219aa:	mov    ecx,0xe5763fa8
  4219af:	sbb    ecx,DWORD PTR [eax-0x63879728]
  4219b5:	ror    edi,0x2
  4219b8:	test   al,0x41
  4219ba:	pusha  
  4219bb:	scas   eax,DWORD PTR es:[edi]
  4219bc:	push   ecx
  4219bd:	stos   BYTE PTR es:[edi],al
  4219be:	mul    DWORD PTR [ebx+0x2bf7c935]
  4219c4:	dec    edx
  4219c5:	pop    edi
  4219c6:	dec    ebp
  4219c7:	adc    eax,0x2f05aaff
  4219cc:	stc    
  4219cd:	mov    edi,ebp
  4219cf:	fstp   TBYTE PTR [eax-0x7a0d7e22]
  4219d5:	(bad)  
  4219d6:	cmp    al,cl
  4219d8:	mov    al,ds:0x5e018874
  4219dd:	jge    0x4219e1
  4219df:	jno    0x4219a5
  4219e1:	jb     0x4219e3
	...
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	int    0x49
  4219fc:	push   0xffffffe1
  4219fe:	stos   DWORD PTR es:[edi],eax
  4219ff:	loop   0x421a02
  421a01:	add    BYTE PTR [ecx+0x0],cl
  421a04:	add    BYTE PTR [eax],al
  421a06:	mov    ah,0xc1
  421a08:	mov    BYTE PTR [esi],bh
  421a0a:	or     eax,0xe96d5ae5
  421a0f:	test   DWORD PTR [ebp+0x2e9242f8],esi
  421a15:	adc    bl,BYTE PTR [edx-0x2a]
  421a18:	icebp  
  421a19:	(bad)  
  421a1a:	sbb    edx,DWORD PTR [ebp+edx*8-0x49]
  421a1e:	mov    cl,0x60
  421a20:	hlt    
  421a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a22:	ret    0xbbef
  421a25:	cvtps2pd xmm4,QWORD PTR [edx-0x67]
  421a29:	xchg   ebx,edx
  421a2b:	icebp  
  421a2c:	adc    eax,0x9e10f485
  421a31:	shl    BYTE PTR [eax+0x16975d2d],1
  421a37:	and    eax,0x16bdd076
  421a3c:	mov    dh,0x23
  421a3e:	mov    edi,0x4694e943
  421a43:	inc    ebx
  421a44:	cmc    
  421a45:	push   ebx
  421a46:	inc    DWORD PTR [ecx-0x2008a627]
  421a4c:	dec    ebx
  421a4d:	or     eax,0x14
	...
  421a5e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	jnp    0x421f87
  421fe0:	ficomp DWORD PTR [ebp+0x1d673]
  421fe6:	pop    esp
  421fe7:	add    BYTE PTR [eax],al
  421fe9:	add    BYTE PTR [eax],cl
  421feb:	fwait
  421fec:	push   esp
  421fed:	sbb    DWORD PTR [edi-0x2a],ebp
  421ff0:	jae    0x422031
  421ff2:	xchg   BYTE PTR [eax+ebx*8],al
  421ff5:	stos   DWORD PTR es:[edi],eax
  421ff6:	int    0x89
  421ff8:	jp     0x421fa1
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	or     DWORD PTR [edx-0x74],esi
  421ffe:	push   ecx
  421fff:	adc    BYTE PTR [ebp+0x645b1ee5],dh
  422005:	xchg   edi,eax
  422006:	dec    edx
  422007:	ins    BYTE PTR es:[edi],dx
  422008:	js     0x421fba
  42200a:	call   0x8e82:0x15257a19
  422011:	stc    
  422012:	and    al,0xc3
  422014:	mov    BYTE PTR [edx],ch
  422016:	sbb    ebp,DWORD PTR [esi-0x7f]
  422019:	add    ecx,0x394c3d6f
  42201f:	jns    0x421fb8
  422021:	pusha  
  422022:	mov    ebp,0x6a2b2ff8
  422027:	adc    al,0x26
  422029:	retf   
  42202a:	mov    esi,0x747463aa
  42202f:	rol    bl,1
  422031:	mov    ebx,0xd218860c
  422036:	xor    ebx,0xdface8d
  42203c:	push   ecx
  42203d:	es pusha 
  42203f:	clc    
  422040:	movaps XMMWORD PTR [edx+ebp*8+0x4f],xmm2
  422045:	mov    dl,0x0
	...
  42204f:	add    BYTE PTR [eax],al
  422051:	add    BYTE PTR [eax],ch
  422053:	mov    dl,0xa5
  422055:	push   edx
  422056:	mov    edi,0x7cfaff57
  42205b:	xlat   BYTE PTR fs:[ebx]
  42205d:	push   esi
  42205e:	pop    ds
  42205f:	cmc    
  422060:	lahf   
  422061:	outs   dx,DWORD PTR ds:[esi]
  422062:	iret   
  422063:	(bad)  
  422064:	add    DWORD PTR [eax],eax
  422066:	pop    esp
  422067:	add    BYTE PTR [eax],al
  422069:	add    BYTE PTR [ebx],dh
  42206b:	mov    ?,esp
  42206d:	cs shl ebx,0xfd
  422071:	(bad)  
  422072:	push   ebp
  422073:	mov    eax,0xf28911e3
  422078:	loopne 0x4220e8
  42207a:	nop
  42207b:	inc    esi
  42207c:	mov    ds:0x252d94c,al
  422081:	into   
  422082:	clc    
  422083:	dec    edi
  422084:	sub    ecx,ecx
  422086:	jne    0x4220fe
  422088:	outs   dx,BYTE PTR ds:[esi]
  422089:	jl     0x4220c2
  42208b:	sbb    BYTE PTR [edi+0x5f700829],dh
  422091:	push   ds
  422092:	cmp    eax,0x932181e2
  422097:	jle    0x422059
  422099:	dec    eax
  42209a:	ins    BYTE PTR es:[edi],dx
  42209b:	push   ebp
  42209c:	add    dh,ch
  42209e:	push   edx
  42209f:	mov    edi,0x135fdb44
  4220a4:	pop    ds
  4220a5:	pop    edx
  4220a6:	mov    ds:0xb2d850d0,eax
  4220ab:	mov    ecx,0x471043ea
  4220b0:	push   ebx
  4220b1:	outs   dx,DWORD PTR ds:[esi]
  4220b2:	mov    ds:0x5b451110,al
  4220b7:	push   ds
  4220b8:	cmp    bl,BYTE PTR [ecx+0x152a7d32]
  4220be:	pop    esi
  4220bf:	cld    
  4220c0:	cmp    dh,dl
  4220c2:	mov    ebx,0x98925d
	...
  4220cf:	add    BYTE PTR [eax],al
  4220d1:	add    BYTE PTR [ebx-0x7e80ab],dh
  4220d7:	stos   DWORD PTR es:[edi],eax
  4220d8:	push   DWORD PTR [edi-0x42]
  4220db:	xchg   esi,eax
  4220dc:	push   0x7d753f57
  4220e1:	scas   eax,DWORD PTR es:[edi]
  4220e2:	sub    edx,edi
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	pop    esp
  4220e7:	add    BYTE PTR [eax],al
  4220e9:	add    BYTE PTR [ebx-0x13],dl
  4220ec:	or     DWORD PTR fs:[ebp+0x3bae510c],esp
  4220f3:	pop    ebx
  4220f4:	inc    ebp
  4220f5:	mov    ah,0x75
  4220f7:	sbb    DWORD PTR [esi-0x6b198b4e],ecx
  4220fd:	dec    esp
  4220fe:	aaa    
  4220ff:	mov    bl,0x57
  422101:	and    edi,ecx
  422103:	xchg   ecx,eax
  422104:	stos   BYTE PTR es:[edi],al
  422105:	pop    ebp
  422106:	fild   DWORD PTR [ecx-0x1b]
  422109:	lds    ecx,FWORD PTR [esi+0x39]
  42210c:	add    eax,0x735b2ce0
  422111:	mov    al,ds:0xdec851a6
  422116:	and    al,0x31
  422118:	aas    
  422119:	mov    esp,0xb5a4f055
  42211e:	hlt    
  42211f:	xchg   ebp,eax
  422120:	inc    eax
  422121:	and    al,0xe3
  422123:	adc    dl,BYTE PTR [esi]
  422125:	xchg   ecx,eax
  422126:	hlt    
  422127:	inc    edx
  422128:	leave  
  422129:	je     0x422135
  42212b:	add    dh,ah
  42212d:	push   esp
  42212e:	and    BYTE PTR [edx],cl
  422130:	sub    BYTE PTR [edi+eiz*8+0x49f1fa65],0x23
  422138:	pop    ecx
  422139:	or     al,0x4a
  42213b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42213c:	jmp    FWORD PTR [ecx-0x3becd96b]
  422142:	add    edx,ebx
  422144:	dec    ecx
  422145:	rol    DWORD PTR [eax],cl
	...
  42214f:	add    BYTE PTR [eax],al
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi+0x59ac6bd5]
  42215f:	xchg   edx,eax
  422160:	rcr    DWORD PTR [edx+0x1d787],1
  422166:	pop    esp
  422167:	add    BYTE PTR [eax],al
  422169:	add    BYTE PTR [esi],ch
  42216b:	sbb    esp,0xffffffd5
  42216e:	outs   dx,BYTE PTR ds:[esi]
  42216f:	into   
  422170:	push   esp
  422171:	dec    edi
  422172:	nop
  422173:	xchg   ecx,eax
  422174:	xchg   ecx,eax
  422175:	sub    eax,0xb605724b
  42217a:	sub    ebx,DWORD PTR [ecx]
  42217c:	jle    0x4221db
  42217e:	jl     0x422103
  422180:	dec    esp
  422181:	sbb    cl,BYTE PTR [edi-0x3d]
  422184:	lods   eax,DWORD PTR ds:[esi]
  422185:	fs pop eax
  422187:	mov    esi,0xc7a9a1e6
  42218c:	dec    edx
  42218d:	aaa    
  42218e:	xchg   DWORD PTR [ebx-0xe4a8f0c],ecx
  422194:	sbb    BYTE PTR [edx+0x1e],0xd3
  422198:	fisttp DWORD PTR [ebx-0x8]
  42219b:	pop    esp
  42219c:	mov    esi,0xcb9a433b
  4221a1:	ja     0x42219f
  4221a3:	je     0x42214a
  4221a5:	add    al,0xfa
  4221a7:	call   0x12a5:0x4c3c9408
  4221ae:	pop    esi
  4221af:	aas    
  4221b0:	stc    
  4221b1:	mov    ebp,0xec008176
  4221b6:	mov    ecx,0xcf36caf0
  4221bb:	sbb    BYTE PTR ds:0x55513ff0,al
  4221c1:	xor    ebx,DWORD PTR [edi]
  4221c3:	adc    DWORD PTR [edi],esi
  4221c5:	jecxz  0x4221c7
	...
  4221cf:	add    BYTE PTR [eax],al
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	jl     0x422169
  4221e0:	ror    DWORD PTR [ebx+eiz*8+0x5c0001d7],cl
  4221e7:	add    BYTE PTR [eax],al
  4221e9:	add    bl,cl
  4221eb:	pop    esp
  4221ec:	mov    ecx,DWORD PTR [eax]
  4221ee:	sub    eax,0x5b2d0815
  4221f3:	cmc    
  4221f4:	aad    0xd4
  4221f6:	(bad)  
  4221f8:	out    dx,al
  4221f9:	inc    esi
  4221fa:	loop   0x4221eb
  4221fc:	(bad)  
  4221fd:	mov    eax,0x77c55442
  422202:	cs pop ebx
  422204:	inc    ebx
  422205:	and    al,0x7f
  422207:	mov    esi,0x33368af6
  42220c:	ja     0x4221f4
  42220e:	sahf   
  42220f:	xor    eax,0x9a633ea1
  422214:	mov    ah,0x39
  422216:	cmp    BYTE PTR [esp+ecx*1+0x56],ah
  42221a:	(bad)  
  42221b:	jle    0x422264
  42221d:	sub    esp,DWORD PTR [esi-0x758013ec]
  422223:	or     BYTE PTR [edx-0x5e],dh
  422226:	jmp    0x4221d4
  422228:	cmp    dh,BYTE PTR [edx-0x72]
  42222b:	mov    cl,0x4a
  42222d:	scas   eax,DWORD PTR es:[edi]
  42222e:	hlt    
  42222f:	adc    esi,DWORD PTR [edi]
  422231:	in     al,dx
  422232:	leave  
  422233:	repz mov ch,0x7
  422236:	mov    WORD PTR [esi],ds
  422238:	sbb    ah,cl
  42223a:	ss jg  0x422263
  42223d:	dec    esp
  42223e:	cs (bad) 
  422240:	mov    ebp,0xa1512286
  422245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422252:	fidiv  DWORD PTR [edx]
  422254:	xchg   edi,eax
  422255:	mov    bh,bh
  422257:	scas   eax,DWORD PTR es:[edi]
  422258:	fbstp  TBYTE PTR [edx+0x3]
  42225b:	inc    ebp
  42225c:	mov    ds:0xece0245c,eax
  422261:	cld    
  422262:	aas    
  422263:	fadd   DWORD PTR [ecx]
  422265:	add    BYTE PTR [eax+eax*1+0x0],bl
  422269:	add    cl,cl
  42226b:	mov    edi,DWORD PTR [ebp+0x25]
  42226e:	pop    edi
  42226f:	out    dx,al
  422270:	mov    bl,0x9e
  422272:	in     al,dx
  422273:	xchg   ebx,eax
  422274:	mov    BYTE PTR [eax],dl
  422276:	fisttp QWORD PTR [ebp-0x43dcddaa]
  42227c:	jle    0x422284
  42227e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42227f:	or     eax,0x938f863e
  422284:	or     DWORD PTR [ebx-0x61],esp
  422287:	sbb    eax,0xa31dbc54
  42228c:	fcmovne st,st(7)
  42228e:	stos   DWORD PTR es:[edi],eax
  42228f:	cmp    ah,ah
  422291:	mov    cl,0xa6
  422293:	iret   
  422294:	jno    0x422268
  422296:	xchg   edi,eax
  422297:	test   al,0x9f
  422299:	jecxz  0x422285
  42229b:	xchg   BYTE PTR [ebx],dh
  42229d:	add    DWORD PTR [edx],ebx
  42229f:	pop    edi
  4222a0:	fiadd  DWORD PTR [ebp+0x117d0877]
  4222a6:	adc    al,BYTE PTR [ecx]
  4222a8:	popa   
  4222a9:	ja     0x42230b
  4222ab:	ins    DWORD PTR es:[edi],dx
  4222ac:	test   eax,0xd996dce6
  4222b1:	mov    ds:0xfddb478c,eax
  4222b6:	jbe    0x4222da
  4222b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b9:	xchg   ebp,eax
  4222ba:	test   BYTE PTR [ebp-0xd3e8f25],al
  4222c0:	xchg   esp,eax
  4222c1:	pop    edx
  4222c2:	add    bh,BYTE PTR [ecx+edx*1+0xd8]
	...
  4222d1:	add    BYTE PTR [eax-0x1c],cl
  4222d4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x12e8268f],bl
  4222e1:	dec    edi
  4222e2:	fadd   DWORD PTR [ecx]
  4222e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4222e9:	add    BYTE PTR [edi],cl
  4222eb:	aas    
  4222ec:	imul   edi,DWORD PTR [eax-0x400166d6],0x3d31114b
  4222f6:	lock sub ah,BYTE PTR [ebx]
  4222f9:	jle    0x4222cf
  4222fb:	loopne 0x422298
  4222fd:	xchg   edi,eax
  4222fe:	cmp    bl,0x6d
  422301:	outs   dx,DWORD PTR ds:[esi]
  422302:	xor    BYTE PTR [edx-0x16],ch
  422305:	dec    edx
  422306:	mov    BYTE PTR [edx+0x18c765d0],ch
  42230c:	sbb    al,0xbe
  42230e:	jecxz  0x4222e2
  422310:	inc    edi
  422311:	inc    ebx
  422312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422313:	xchg   ebp,eax
  422314:	outs   dx,BYTE PTR ds:[esi]
  422315:	dec    edx
  422316:	xor    DWORD PTR [ecx+0xa],ebp
  422319:	aaa    
  42231a:	in     eax,0x37
  42231c:	mov    bl,0x97
  42231e:	shl    BYTE PTR [eax-0xcfacfe3],1
  422324:	ficomp WORD PTR [ebx+0x4c78fd79]
  42232a:	(bad)  
  42232b:	rcr    BYTE PTR [edi],1
  42232d:	xor    esp,esi
  42232f:	in     eax,dx
  422330:	cmc    
  422331:	daa    
  422332:	jo     0x4222e4
  422334:	push   ss
  422335:	test   al,0xad
  422337:	outs   dx,DWORD PTR ds:[esi]
  422338:	lods   eax,DWORD PTR ds:[esi]
  422339:	xchg   BYTE PTR [ebp-0x5789014b],ch
  42233f:	and    eax,0x952014fe
  422344:	jnp    0x4223b3
	...
  422352:	push   edx
  422353:	add    al,0xa2
  422355:	xor    dh,0xa6
  422358:	jb     0x42232e
  42235a:	ins    DWORD PTR es:[edi],dx
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0xfe36e132
  422362:	neg    eax
  422364:	add    DWORD PTR [eax],eax
  422366:	pop    esp
  422367:	add    BYTE PTR [eax],al
  422369:	add    BYTE PTR [esi],bl
  42236b:	mov    eax,0xa6d44aec
  422370:	nop
  422371:	std    
  422372:	test   eax,0xba97227f
  422377:	cmp    dh,BYTE PTR [ecx-0x2f6f891]
  42237d:	add    esp,eax
  42237f:	sub    al,0x85
  422381:	jmp    0xa2c7:0xf53541b9
  422388:	adc    eax,0x6e975648
  42238d:	inc    eax
  42238e:	push   eax
  42238f:	xor    dh,BYTE PTR [edx-0x31]
  422392:	mov    al,BYTE PTR [esi]
  422394:	repz inc esp
  422396:	push   esi
  422397:	add    edi,DWORD PTR [eax-0x780917c7]
  42239d:	sub    edi,DWORD PTR [esi+0x1e44a07d]
  4223a3:	push   es
  4223a4:	mov    al,ds:0xb31963a0
  4223a9:	ds in  al,0xa2
  4223ac:	xor    DWORD PTR [esi-0x6d],edx
  4223af:	(bad)  
  4223b0:	xchg   esi,eax
  4223b1:	(bad)  [ecx+0xd8589a4]
  4223b7:	cs scas al,BYTE PTR es:[edi]
  4223b9:	or     cl,0x84
  4223bc:	and    ecx,DWORD PTR [eax+ebp*8+0x60]
  4223c0:	sahf   
  4223c1:	dec    ecx
  4223c2:	(bad)  
  4223c3:	mov    eax,ds:0x791a
	...
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	cmp    BYTE PTR [edx-0x6a],ch
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x13,eax
  4223df:	ins    DWORD PTR es:[edi],dx
  4223e0:	fisub  DWORD PTR [ecx+0x1d953]
  4223e6:	pop    esp
  4223e7:	add    BYTE PTR [eax],al
  4223e9:	add    BYTE PTR [edi+eax*2+0x2360d578],al
  4223f0:	sub    BYTE PTR [eax+0x46],0x44
  4223f4:	add    ecx,DWORD PTR [edx+0x55c865eb]
  4223fa:	fistp  QWORD PTR [esi+0x106482fe]
  422400:	or     edi,edx
  422402:	(bad)  
  422404:	mov    DWORD PTR [edx],0xa260a419
  42240a:	pop    edi
  42240b:	aas    
  42240c:	aaa    
  42240d:	rcr    DWORD PTR [esi+ecx*2-0x6d],0x97
  422412:	cmp    cl,0x2d
  422415:	mov    dl,0xd5
  422417:	fiadd  DWORD PTR [ecx+0x56801752]
  42241d:	mov    al,ds:0x629ac56c
  422422:	iret   
  422423:	stc    
  422424:	push   esp
  422425:	das    
  422426:	scas   al,BYTE PTR es:[edi]
  422427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422428:	cmp    edi,DWORD PTR [esi]
  42242a:	pop    ss
  42242b:	pop    ecx
  42242c:	repz add edi,DWORD PTR [ebx]
  42242f:	lahf   
  422430:	mov    ebp,eax
  422432:	mul    dl
  422434:	cmp    esp,DWORD PTR [ebp-0x45]
  422437:	sbb    DWORD PTR ds:0xd1b2a403,0x3a6725cf
  422441:	dec    esi
  422442:	or     al,0x0
  422444:	cli    
  422445:	xchg   ebp,eax
	...
  422452:	jmp    0x7a729f10
  422457:	repz jmp 0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	sahf   
  42245f:	test   BYTE PTR [esi],0xdf
  422462:	scas   eax,DWORD PTR es:[edi]
  422463:	fld    DWORD PTR [ecx]
  422465:	add    BYTE PTR [eax+eax*1+0x0],bl
  422469:	add    BYTE PTR [ecx],ah
  42246b:	push   esi
  42246c:	ret    0x750d
  42246f:	(bad)  
  422470:	fcomi  st,st(2)
  422472:	lea    eax,ds:0x969b5f8
  422478:	inc    edx
  422479:	inc    eax
  42247a:	ret    0x2154
  42247d:	aas    
  42247e:	outs   dx,DWORD PTR ds:[esi]
  42247f:	and    BYTE PTR [esi],dh
  422481:	cmp    ah,BYTE PTR [edx+edi*4-0x9cfbda6]
  422488:	xor    eax,0x5469ff61
  42248d:	enter  0x17a6,0x19
  422491:	aaa    
  422492:	jecxz  0x4224e0
  422494:	xchg   esp,eax
  422495:	hlt    
  422496:	pop    edx
  422497:	ja     0x422463
  422499:	lahf   
  42249a:	or     ebp,DWORD PTR [ebx+0x2e]
  42249d:	and    ebp,ebp
  42249f:	lods   eax,DWORD PTR ds:[esi]
  4224a0:	mov    ?,edi
  4224a2:	dec    eax
  4224a3:	or     al,0xb7
  4224a5:	ja     0x42243b
  4224a7:	shr    BYTE PTR ds:0xa04a7c35,cl
  4224ad:	and    al,0x5d
  4224af:	pop    ebx
  4224b0:	mov    al,0x1a
  4224b2:	dec    ebx
  4224b3:	fidiv  DWORD PTR [edx+0x54]
  4224b6:	xor    al,bl
  4224b8:	std    
  4224b9:	jp     0x4224f7
  4224bb:	jmp    0x83f4:0xbc3f3b63
  4224c2:	pop    esi
  4224c3:	repz cmp eax,0xd4
	...
  4224d1:	add    BYTE PTR [ebx+0x41],bl
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	iret   
  4224df:	xchg   esp,eax
  4224e0:	bound  ebx,QWORD PTR [ebx+ecx*1+0x5c0001da]
  4224e7:	add    BYTE PTR [eax],al
  4224e9:	add    BYTE PTR [edi],cl
  4224eb:	data16 and BYTE PTR [ebx],bh
  4224ee:	cld    
  4224ef:	xor    al,0x44
  4224f1:	and    ecx,ecx
  4224f3:	ja     0x422531
  4224f5:	push   esi
  4224f6:	jb     0x422525
  4224f8:	adc    DWORD PTR [edi+0x47],esp
  4224fb:	pop    ebx
  4224fc:	jmp    0x7ec3:0x22becfde
  422503:	out    0x23,eax
  422505:	xor    al,0x52
  422507:	mov    eax,0xb511720c
  42250c:	adc    eax,0x97aa2c0
  422511:	stos   DWORD PTR es:[edi],eax
  422512:	xlat   BYTE PTR ds:[ebx]
  422513:	sub    ah,BYTE PTR [edx]
  422515:	dec    esp
  422516:	loopne 0x422527
  422518:	(bad)  
  422519:	and    eax,0x6e3f791d
  42251e:	call   0xaed8:0xd3c9ea5f
  422525:	into   
  422526:	sbb    al,dh
  422528:	mov    ch,BYTE PTR [edi]
  42252a:	lods   eax,DWORD PTR ds:[esi]
  42252b:	mov    ecx,0xcbce832d
  422530:	(bad)  
  422531:	into   
  422532:	ins    DWORD PTR es:[edi],dx
  422533:	mov    ah,0x48
  422535:	rcl    DWORD PTR [ebx+0x28],0x5f
  422539:	mov    ah,0x18
  42253b:	xor    ch,cl
  42253d:	add    bh,dh
  42253f:	pushf  
  422540:	repz xor DWORD PTR [ebx+0xb79abe],ebp
	...
  42254f:	add    BYTE PTR [eax],al
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255f:	mov    BYTE PTR [eax+0x1da679e],dl
  422565:	add    BYTE PTR [eax+eax*1+0x0],bl
  422569:	add    BYTE PTR [ecx-0x26d58f88],bl
  42256f:	ja     0x42251a
  422571:	dec    ebx
  422572:	popa   
  422573:	pop    ecx
  422574:	call   0xeaab:0x4e85a9ca
  42257b:	push   ecx
  42257c:	cmp    BYTE PTR [edx-0x3efa753c],0x96
  422583:	aad    0x69
  422585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422586:	xchg   BYTE PTR [eax+0x7fd9bba1],bh
  42258c:	imul   edx,DWORD PTR [esi],0xffffffcd
  42258f:	sub    ch,dl
  422591:	cwde   
  422592:	jmp    0x13019590
  422597:	cmp    edx,DWORD PTR [esi]
  422599:	mov    dh,0xd9
  42259b:	daa    
  42259c:	push   ebp
  42259d:	(bad)  
  42259e:	jb     0x422565
  4225a0:	jbe    0x422604
  4225a2:	mov    dl,0xc0
  4225a4:	sahf   
  4225a5:	adc    al,dh
  4225a7:	test   al,0x1c
  4225a9:	sahf   
  4225aa:	mov    al,ds:0xc56b0153
  4225af:	pop    ebp
  4225b0:	xchg   esp,eax
  4225b1:	scas   al,BYTE PTR es:[edi]
  4225b2:	mov    ch,BYTE PTR [edi+edi*8+0x4165f0b7]
  4225b9:	mov    dl,0x80
  4225bb:	fidivr DWORD PTR [esi-0x13]
  4225be:	push   cs
  4225bf:	rcr    DWORD PTR fs:[edx+0x188da7e8],cl
	...
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jae    0x4225c5
  4225d5:	retf   0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0x16258ce9
  4225e0:	mov    bh,0x2c
  4225e2:	ret    
  4225e3:	fiadd  DWORD PTR [ecx]
  4225e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4225e9:	add    BYTE PTR [esi+0xb],ah
  4225ec:	fs inc ecx
  4225ee:	jb     0x4225a6
  4225f0:	ret    0x95ad
  4225f3:	sbb    ebp,ebx
  4225f5:	xchg   ebx,eax
  4225f6:	jmp    0x422591
  4225f8:	or     eax,0x5536a982
  4225fd:	add    al,0xb0
  4225ff:	mov    ds:0xa06ac09f,eax
  422604:	adc    al,0xbd
  422606:	fstp   QWORD PTR ds:0x86b899b3
  42260c:	call   0x5a64:0x905a637f
  422613:	hlt    
  422614:	and    eax,0x41b56940
  422619:	ret    
  42261a:	push   eax
  42261b:	inc    di
  42261d:	test   al,0x7a
  42261f:	mov    BYTE PTR [edx+0xd],0x50
  422623:	mov    ebx,DWORD PTR [ecx]
  422625:	popf   
  422626:	add    edx,DWORD PTR [ebx-0x27]
  422629:	xchg   esi,eax
  42262a:	push   esp
  42262b:	gs (bad) 
  42262d:	fld    QWORD PTR [ecx-0x67]
  422630:	inc    esi
  422631:	xor    bl,BYTE PTR [edx-0x1b]
  422634:	and    bl,cl
  422636:	pop    eax
  422637:	jmp    0xca24:0x71f78f3b
  42263e:	adc    DWORD PTR [ebx+0x78],ebx
  422641:	retf   0xd552
  422644:	lea    esi,[eax+0x0]
	...
  422652:	cmc    
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx-0x6032a90a]
  422662:	pop    ds
  422663:	fild   DWORD PTR [ecx]
  422665:	add    BYTE PTR [eax+eax*1+0x0],bl
  422669:	add    BYTE PTR [esi-0x64aed33c],bl
  42266f:	or     BYTE PTR [esp+ecx*4+0xeb8e0a6],dh
  422676:	xor    ah,BYTE PTR [ecx]
  422678:	pop    ebp
  422679:	daa    
  42267a:	loopne 0x422648
  42267c:	mov    cl,0x23
  42267e:	je     0x4226e5
  422680:	outs   dx,DWORD PTR ds:[esi]
  422681:	or     DWORD PTR ds:0x3ab50f79,eax
  422687:	inc    eax
  422688:	loopne 0x4226ed
  42268a:	pusha  
  42268b:	outs   dx,DWORD PTR ds:[esi]
  42268c:	pushf  
  42268d:	fbstp  TBYTE PTR [edi]
  42268f:	enter  0x6fb,0x49
  422693:	ss leave 
  422695:	daa    
  422696:	mov    al,ds:0x761e236c
  42269b:	mov    cx,WORD PTR [esi+0x69]
  42269f:	xchg   esp,eax
  4226a0:	(bad)  
  4226a1:	ret    
  4226a2:	add    DWORD PTR [ebp+0x67e10a4a],edx
  4226a8:	xchg   ebp,eax
  4226a9:	sbb    ecx,esp
  4226ab:	sar    BYTE PTR [edi],1
  4226ad:	sbb    eax,0x8c4feb66
  4226b2:	cld    
  4226b3:	xor    dh,BYTE PTR ds:0xb7fe85b0
  4226b9:	and    eax,0x25f00dd0
  4226be:	mov    bh,0xbf
  4226c0:	and    ebp,ebp
  4226c2:	and    eax,DWORD PTR [ebx-0x49]
  4226c5:	or     eax,DWORD PTR [eax]
	...
  4226cf:	add    BYTE PTR [eax],al
  4226d1:	add    BYTE PTR [ebx],bh
  4226d3:	mov    cl,0x57
  4226d5:	lock fcomip st,st(6)
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	rol    cl,0xc3
  4226e0:	mov    edx,0x1db7be8
  4226e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4226e9:	add    BYTE PTR [eax],bl
  4226eb:	and    esi,DWORD PTR [eax+0x4a]
  4226ee:	xor    DWORD PTR [ecx+edi*2-0xcaa9b21],edx
  4226f5:	arpl   WORD PTR [esp+esi*8],cx
  4226f8:	xchg   esi,eax
  4226f9:	ins    DWORD PTR es:[edi],dx
  4226fa:	int    0xd9
  4226fc:	ror    ecx,1
  4226fe:	pop    ss
  4226ff:	fcom   st(6)
  422701:	out    0xef,al
  422703:	rcr    ebx,1
  422705:	out    0x1b,eax
  422707:	rcr    bh,cl
  422709:	fwait
  42270a:	mov    cl,dl
  42270c:	leave  
  42270d:	pop    edx
  42270e:	stos   DWORD PTR es:[edi],eax
  42270f:	xchg   ebx,eax
  422710:	mov    esp,ecx
  422712:	jmp    0x2f4099f5
  422717:	(bad)  
  422718:	icebp  
  422719:	scas   al,BYTE PTR es:[edi]
  42271a:	arpl   bp,bx
  42271c:	rcl    BYTE PTR [ecx+0x41],cl
  42271f:	into   
  422720:	ds push ecx
  422722:	test   al,0x4c
  422724:	(bad)  
  422725:	imul   edx,DWORD PTR [edi-0x4f],0x8961e029
  42272c:	lods   eax,DWORD PTR ds:[esi]
  42272d:	pop    edi
  42272e:	jle    0x4226da
  422730:	jg     0x422782
  422732:	pop    edx
  422733:	pop    ebx
  422734:	jno    0x42270c
  422736:	test   al,0xae
  422738:	dec    ebp
  422739:	push   eax
  42273a:	jmp    0x517a:0x63ecae46
  422741:	xchg   ebp,eax
  422742:	add    bh,dl
  422744:	push   esp
  422745:	add    DWORD PTR [eax],0x0
  42274b:	add    BYTE PTR [eax],al
  42274d:	add    BYTE PTR [eax],al
  42274f:	add    BYTE PTR [eax],al
  422751:	add    ah,dl
  422753:	sqrtps xmm6,xmm0
  422756:	(bad)  
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	aas    
  42275f:	dec    eax
  422760:	retf   
  422761:	ins    BYTE PTR es:[edi],dx
  422762:	xlat   BYTE PTR ds:[ebx]
  422763:	fild   DWORD PTR [ecx]
  422765:	add    BYTE PTR [eax+eax*1+0x0],bl
  422769:	add    BYTE PTR [ebx-0x2c0abfae],ch
  42276f:	data16 jmp 0x42273b
  422772:	pop    ds
  422773:	shr    BYTE PTR [eax],1
  422775:	bound  esi,QWORD PTR [ecx+ebx*2+0x0]
  422779:	pusha  
  42277a:	shr    BYTE PTR [edi-0x73],0x79
  42277e:	fsub   QWORD PTR [esi]
  422780:	leave  
  422781:	xchg   ecx,eax
  422782:	sub    dl,BYTE PTR [eax]
  422784:	inc    ecx
  422785:	sbb    esp,esi
  422787:	mov    bl,0xb4
  422789:	stos   DWORD PTR es:[edi],eax
  42278a:	test   al,0x11
  42278c:	pop    eax
  42278d:	jg     0x4227ae
  42278f:	mov    ebx,0x3b51eb21
  422794:	das    
  422795:	inc    ecx
  422796:	xor    dh,bl
  422798:	(bad)  
  422799:	fisttp WORD PTR cs:[edi+0x4846c310]
  4227a0:	fild   WORD PTR [ebp+0x6e]
  4227a3:	retf   0xf531
  4227a6:	gs xor dh,0x63
  4227aa:	daa    
  4227ab:	xor    cl,BYTE PTR [ebx+0xd959aac]
  4227b1:	fist   DWORD PTR [edi]
  4227b3:	dec    eax
  4227b4:	sbb    DWORD PTR [ebx],ecx
  4227b6:	loop   0x4227c9
  4227b8:	xor    esp,DWORD PTR [esi-0x5adcfc32]
  4227be:	push   0xffffffda
  4227c0:	stos   DWORD PTR es:[edi],eax
  4227c1:	adc    BYTE PTR [ecx],0x37
  4227c4:	jne    0x4227f8
	...
  4227d2:	int    0x2d
  4227d4:	xchg   ebp,eax
  4227d5:	inc    ebx
  4227d6:	cmc    
  4227d7:	sti    
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	push   edx
  4227df:	sbb    DWORD PTR [esi+0x1dc3360],0x0
  4227e6:	pop    esp
  4227e7:	add    BYTE PTR [eax],al
  4227e9:	add    bl,dl
  4227eb:	data16 cmp dl,BYTE PTR [edx]
  4227ee:	pop    esp
  4227ef:	stos   BYTE PTR es:[edi],al
  4227f0:	leave  
  4227f1:	inc    edx
  4227f2:	and    eax,0x6383b6ab
  4227f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f8:	adc    BYTE PTR [edi+esi*1+0x2f],al
  4227fc:	and    al,cl
  4227fe:	cmp    DWORD PTR [eax+0x72],edi
  422801:	pop    ebx
  422802:	pop    ss
  422803:	sub    eax,0x144389b7
  422808:	mov    ds:0xe8864b3a,al
  42280d:	lahf   
  42280e:	push   edi
  42280f:	dec    eax
  422810:	imul   edx,DWORD PTR [edi]
  422813:	dec    esi
  422814:	inc    esp
  422815:	jl     0x422893
  422817:	and    esp,DWORD PTR [ecx-0x1d69150b]
  42281d:	lea    edx,[edi-0x29eca91d]
  422823:	loope  0x422889
  422825:	out    dx,eax
  422826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422827:	stc    
  422828:	sbb    bl,ah
  42282a:	push   ecx
  42282b:	push   0x68b27272
  422830:	add    ecx,DWORD PTR [esi]
  422832:	pop    esp
  422833:	cmp    BYTE PTR [ebp-0x30f60146],0x72
  42283a:	adc    DWORD PTR ss:[esi],ecx
  42283d:	pop    ebx
  42283e:	xchg   ecx,eax
  42283f:	ins    BYTE PTR es:[edi],dx
  422840:	mov    dh,0x88
  422842:	jo     0x4227d9
  422844:	fs xchg esp,eax
	...
  422852:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422856:	test   DWORD PTR [ebx-0xce58301],0xfd184cfc
  422860:	nop
  422861:	fs (bad) 
  422863:	fadd   QWORD PTR [ecx]
  422865:	add    BYTE PTR [eax+eax*1+0x0],bl
  422869:	add    BYTE PTR [esi+0x7a],cl
  42286c:	mov    DWORD PTR [ecx-0x1ecfdf06],0x4e970147
  422876:	(bad)  
  422877:	fsubr  DWORD PTR [edi-0x50]
  42287a:	div    bl
  42287c:	imul   eax,DWORD PTR [esi+eiz*1+0x4b473031],0xaa2764b
  422887:	jns    0x4228c0
  422889:	mov    ebp,0x7b4efb
  42288e:	mov    ds:0x7ef8c1e2,al
  422893:	or     DWORD PTR [eax-0x6b],0xc42f0f94
  42289a:	jnp    0x422827
  42289c:	sub    al,0x2d
  42289e:	ds mov al,0x2d
  4228a1:	and    edi,DWORD PTR [ecx+0x78]
  4228a4:	aam    0x1f
  4228a6:	test   eax,0x5d26d75a
  4228ab:	sub    ebx,DWORD PTR [edi-0x19]
  4228ae:	jecxz  0x4228ec
  4228b0:	inc    esp
  4228b1:	push   ds
  4228b2:	xchg   esi,eax
  4228b3:	sub    BYTE PTR [ebx+0x686e94d9],cl
  4228b9:	pop    esp
  4228ba:	cli    
  4228bb:	pusha  
  4228bc:	xchg   edi,eax
  4228bd:	push   ss
  4228be:	fdiv   st,st(1)
  4228c0:	push   0x15
  4228c2:	inc    esi
  4228c3:	ror    DWORD PTR [ebp+0x9b],cl
	...
  4228d1:	add    BYTE PTR [esi],dh
  4228d3:	add    dl,BYTE PTR [ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0xc0f417e
  4228e2:	sti    
  4228e3:	iret   
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	pop    esp
  4228e7:	add    BYTE PTR [eax],al
  4228e9:	add    bh,bh
  4228eb:	or     bh,dl
  4228ed:	ret    
  4228ee:	xor    al,0x84
  4228f0:	sub    bl,ah
  4228f2:	mov    ?,ebp
  4228f4:	cmp    DWORD PTR [eax+0x2561801c],ebx
  4228fa:	cmovs  ebx,DWORD PTR [edx-0x70ca956]
  422901:	push   cs
  422902:	adc    BYTE PTR [edx+0x722205d3],cl
  422908:	fldenv [edi]
  42290a:	pop    ebx
  42290b:	inc    esp
  42290c:	je     0x42292c
  42290e:	ror    BYTE PTR [ecx],cl
  422910:	dec    ebp
  422911:	push   cs
  422912:	cmp    BYTE PTR [edx-0x2e1f4918],dl
  422918:	sbb    al,0xa4
  42291a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42291b:	push   ebp
  42291c:	sbb    bl,0x2a
  42291f:	inc    edx
  422920:	test   DWORD PTR [edi],esi
  422922:	and    bh,BYTE PTR [eax+0x52]
  422925:	in     al,0x80
  422927:	jae    0x422921
  422929:	mov    eax,0x82b869d3
  42292e:	in     eax,0x8f
  422930:	and    BYTE PTR [ecx+0x43],ch
  422933:	xchg   ebp,eax
  422934:	dec    ecx
  422935:	xchg   edx,eax
  422936:	(bad)  [edi]
  422938:	pusha  
  422939:	cdq    
  42293a:	lock cld 
  42293c:	(bad)  [esi-0x4b]
  42293f:	cwde   
  422940:	or     eax,0xe39cf664
  422945:	pop    DWORD PTR [eax]
	...
  42294f:	add    BYTE PTR [eax],al
  422951:	add    BYTE PTR [eax],cl
  422953:	mov    cl,0x72
  422955:	cmp    edi,ebx
  422957:	sti    
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd057:0x118d9662
  422964:	add    DWORD PTR [eax],eax
  422966:	pop    esp
  422967:	add    BYTE PTR [eax],al
  422969:	add    BYTE PTR [eax+0x5cd80fca],ch
  42296f:	or     al,BYTE PTR [ebx]
  422971:	test   al,0x22
  422973:	fsub   DWORD PTR [ebx-0x1b]
  422976:	daa    
  422977:	jb     0x42293a
  422979:	sub    eax,0x72ed75e
  42297e:	xchg   ebp,eax
  42297f:	mov    al,ds:0xa919851b
  422984:	dec    ebp
  422985:	mov    dl,0xc
  422987:	pop    ss
  422988:	daa    
  422989:	adc    al,0x3a
  42298b:	mov    ds:0x2ec70e5b,al
  422990:	mov    bh,BYTE PTR [ecx+0x10]
  422993:	mov    dh,0x22
  422995:	add    al,0xc9
  422997:	jmp    0xd319db7c
  42299c:	out    dx,al
  42299d:	push   ebp
  42299e:	or     al,0x3e
  4229a1:	jmp    0x472a:0x2869688d
  4229a8:	mov    ch,0x1a
  4229aa:	(bad)  [edx+0x7791c0d0]
  4229b0:	loopne 0x42295f
  4229b2:	ss jbe 0x422936
  4229b5:	call   0x4256a7b7
  4229ba:	jl     0x42297d
  4229bc:	mov    bl,0x86
  4229be:	fyl2xp1 
  4229c0:	xchg   ebx,eax
  4229c1:	pop    es
  4229c2:	icebp  
  4229c3:	or     eax,0xe518
	...
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	fist   WORD PTR [ebx-0x4e]
  4229d5:	dec    edi
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0x97
  4229df:	and    al,0xf6
  4229e1:	sub    DWORD PTR [ebx+0x5c0001d0],esi
  4229e7:	add    BYTE PTR [eax],al
  4229e9:	add    BYTE PTR [ebp+eiz*8-0x43c0bc6b],cl
  4229f0:	leave  
  4229f1:	push   ds
  4229f2:	imul   esp,DWORD PTR [edi],0x9
  4229f5:	mov    edi,0x7d232e26
  4229fa:	mov    eax,0xfafb83ba
  4229ff:	btr    DWORD PTR [edx],ebx
  422a02:	loopne 0x4229e8
  422a04:	xchg   edi,eax
  422a05:	mov    ch,0x3f
  422a07:	lea    eax,[ecx+0xaa71ec1]
  422a0d:	aas    
  422a0e:	lods   al,BYTE PTR ds:[esi]
  422a0f:	jmp    0x5258:0x164ea54
  422a16:	lock and BYTE PTR [esi],dl
  422a19:	mov    edi,0xa0fc5b3
  422a1e:	add    al,BYTE PTR [ebx-0x5376506d]
  422a24:	sub    ah,BYTE PTR [ecx+0x396efa23]
  422a2a:	in     eax,0x9b
  422a2c:	jne    0x422aa8
  422a2e:	adc    dl,BYTE PTR [ebx-0x5304579e]
  422a34:	push   0xffffffb3
  422a36:	or     cl,dl
  422a38:	imul   eax,DWORD PTR [ebp-0x65],0xffffffdb
  422a3c:	lea    eax,[ecx-0x242ce958]
  422a42:	push   ecx
  422a43:	rcr    BYTE PTR [ebp+0xb],0x0
	...
  422a4f:	add    BYTE PTR [eax],al
  422a51:	add    BYTE PTR [edi-0x24252cf4],al
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	mov    ah,0x27
  422a60:	lahf   
  422a61:	mov    esp,0x1d10f
  422a66:	pop    esp
  422a67:	add    BYTE PTR [eax],al
  422a69:	add    ch,dh
  422a6b:	aad    0x51
  422a6d:	jnp    0x422a24
  422a6f:	sub    dh,0xc0
  422a72:	inc    esi
  422a73:	mov    esi,0xc2f568d4
  422a78:	jnp    0x4229ff
  422a7a:	imul   ebp,eax,0x1ad51219
  422a80:	sbb    BYTE PTR [ecx+eiz*1+0x6a52d6f],0xf3
  422a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a89:	outs   dx,BYTE PTR ds:[esi]
  422a8a:	stc    
  422a8b:	ror    BYTE PTR [eax+0x9fb1ee],cl
  422a91:	fst    QWORD PTR [ebx+0x7b8e30d7]
  422a97:	pop    ecx
  422a98:	pop    edi
  422a99:	nop
  422a9a:	xor    ecx,0x8fb2fa75
  422aa0:	mov    ebp,0x2d0fac9f
  422aa5:	adc    bl,ch
  422aa7:	adc    dh,BYTE PTR [ecx+0xd1e1ade]
  422aad:	ficomp DWORD PTR [eax-0x19]
  422ab0:	jbe    0x422b27
  422ab2:	xor    al,0x38
  422ab4:	lahf   
  422ab5:	dec    ebp
  422ab6:	xchg   edx,eax
  422ab7:	out    0xa,al
  422ab9:	sbb    BYTE PTR [ebx-0x5e],bh
  422abc:	dec    edx
  422abd:	rol    BYTE PTR [eax+0x56504820],1
  422ac3:	(bad)  
  422ac4:	ret    
  422ac5:	pop    edi
	...
  422ad2:	lahf   
  422ad3:	arpl   WORD PTR [ebp+0x72],cx
  422ad6:	std    
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [ebp+edi*2+0x6be9a3da],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422ae9:	add    al,ah
  422aeb:	xchg   esp,eax
  422aec:	lock dec esp
  422aee:	jbe    0x422b64
  422af0:	cmp    DWORD PTR [edx-0x25be08cf],0x552fa0c0
  422afa:	dec    eax
  422afb:	jns    0x422b1f
  422afd:	mov    eax,DWORD PTR [ebx+esi*2+0x47]
  422b01:	int3   
  422b02:	sbb    al,dl
  422b04:	cmp    BYTE PTR [esi-0x20f096c9],0x8d
  422b0b:	cdq    
  422b0c:	xchg   ebx,eax
  422b0d:	loope  0x422ac4
  422b0f:	or     DWORD PTR [ebx+0x78cc04dc],esp
  422b15:	fcomp  DWORD PTR [edx]
  422b17:	pop    ss
  422b18:	jl     0x422acd
  422b1a:	ds cmc 
  422b1c:	xor    DWORD PTR [esp+eiz*4],esi
  422b1f:	dec    ebp
  422b20:	js     0x422ab6
  422b22:	aaa    
  422b23:	xchg   edi,eax
  422b24:	pop    ecx
  422b25:	es dec ebx
  422b27:	xchg   edi,eax
  422b28:	xor    DWORD PTR [ecx+0x19155b68],esi
  422b2e:	add    eax,0x61e2079e
  422b33:	daa    
  422b34:	adc    BYTE PTR ss:[esi+0x66a6960e],ch
  422b3b:	jo     0x422aed
  422b3d:	hlt    
  422b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b3f:	loopne 0x422bba
  422b41:	push   ebx
  422b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b43:	cdq    
  422b44:	pop    eax
  422b45:	or     eax,DWORD PTR [eax]
	...
  422b4f:	add    BYTE PTR [eax],al
  422b51:	add    BYTE PTR [eax+0x23],dh
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax-0x214311e4]
  422b5f:	clc    
  422b60:	add    eax,0x1d1c7d0
  422b65:	add    BYTE PTR [eax+eax*1+0x0],bl
  422b69:	add    BYTE PTR [ecx],cl
  422b6b:	jge    0x422b2e
  422b6d:	loop   0x422be0
  422b6f:	pop    edx
  422b70:	dec    ebp
  422b71:	adc    bh,BYTE PTR ds:0xcef3562f
  422b77:	mov    ds:0x6b64efa5,eax
  422b7c:	dec    ecx
  422b7d:	loope  0x422bcf
  422b7f:	xlat   BYTE PTR ds:[ebx]
  422b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b81:	fcom   QWORD PTR [esi-0x5d]
  422b84:	outs   dx,DWORD PTR ds:[esi]
  422b85:	dec    eax
  422b86:	icebp  
  422b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b88:	lds    edi,FWORD PTR [esp+ebp*2-0x72]
  422b8c:	jno    0x422b80
  422b8e:	in     al,dx
  422b8f:	sbb    al,0xb8
  422b92:	shl    BYTE PTR [eax],cl
  422b94:	add    al,0x44
  422b96:	sub    DWORD PTR [edx],esi
  422b98:	pop    ebp
  422b99:	bound  ebp,QWORD PTR [edi+0x4c]
  422b9c:	or     cl,BYTE PTR [edx+edx*2+0x7e]
  422ba0:	fcom   QWORD PTR [edx+0x76]
  422ba3:	stos   BYTE PTR es:[edi],al
  422ba4:	xchg   ebp,eax
  422ba5:	push   ss
  422ba6:	pop    eax
  422ba7:	push   esp
  422ba8:	mov    al,0xf3
  422baa:	pop    edx
  422bab:	cmp    BYTE PTR [esi-0x76],cl
  422bae:	add    eax,0x75b800f9
  422bb3:	push   ss
  422bb4:	push   ebx
  422bb5:	repnz and DWORD PTR [ecx],eax
  422bb8:	test   DWORD PTR ds:0x3e4532e,ecx
  422bbe:	push   ds
  422bbf:	pop    edi
  422bc0:	ins    BYTE PTR es:[edi],dx
  422bc1:	in     al,0x3f
  422bc3:	push   eax
  422bc4:	mov    ebx,cs
	...
  422bd2:	xchg   esp,eax
  422bd3:	nop
  422bd4:	ffree  st(0)
  422bd6:	(bad)  
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	inc    esi
  422be0:	jl     0x422b8e
  422be2:	and    edx,edx
  422be4:	add    DWORD PTR [eax],eax
  422be6:	pop    esp
  422be7:	add    BYTE PTR [eax],al
  422be9:	add    BYTE PTR [ebp+edx*2-0x68],dh
  422bed:	div    BYTE PTR [edi]
  422bef:	mov    al,0xb8
  422bf1:	mov    al,ds:0xc5311e6c
  422bf6:	in     eax,0xbd
  422bf8:	pop    esi
  422bf9:	or     al,0xe7
  422bfb:	add    eax,0xe1cb3781
  422c00:	and    esi,eax
  422c02:	pushf  
  422c03:	cmp    al,0x45
  422c05:	jns    0x422c5e
  422c07:	outs   dx,BYTE PTR ds:[esi]
  422c08:	pop    ss
  422c09:	scas   al,BYTE PTR es:[edi]
  422c0a:	test   BYTE PTR [esi],al
  422c0c:	xchg   ebp,eax
  422c0d:	pop    es
  422c0e:	(bad)  
  422c0f:	fild   QWORD PTR [edi+edi*2]
  422c12:	(bad)  
  422c13:	bound  edi,QWORD PTR [edi-0x52]
  422c16:	out    dx,eax
  422c17:	ins    BYTE PTR es:[edi],dx
  422c18:	outs   dx,BYTE PTR ds:[esi]
  422c19:	repz push esp
  422c1b:	add    eax,0x963ee1c7
  422c20:	fcom   st(6)
  422c22:	sar    BYTE PTR [ebx+eax*8-0x4d6806dd],1
  422c29:	mov    esi,0x90ad7d63
  422c2e:	sub    eax,0x95315e92
  422c33:	fs mov dh,0x2c
  422c36:	pop    ebx
  422c37:	test   eax,0x34fb1fbd
  422c3c:	adc    esi,DWORD PTR [ebx+0x3f]
  422c3f:	push   ds
  422c40:	cdq    
  422c41:	xor    bl,BYTE PTR [ebp-0x30]
  422c44:	adc    al,BYTE PTR [eax+eax*1+0x0]
	...
  422c50:	add    BYTE PTR [eax],al
  422c52:	hlt    
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	addr16 dec ax
  422c61:	cmp    DWORD PTR [edi-0x2e],edi
  422c64:	add    DWORD PTR [eax],eax
  422c66:	pop    esp
  422c67:	add    BYTE PTR [eax],al
  422c69:	add    BYTE PTR [edi-0x2f865b4c],al
  422c6f:	pop    ss
  422c70:	mov    edi,DWORD PTR [esi+0x71ca1b06]
  422c76:	add    BYTE PTR [ebp+ebx*2-0x22],bh
  422c7a:	mov    al,0x9e
  422c7c:	lock xchg esi,eax
  422c7e:	sub    bh,BYTE PTR [edi]
  422c80:	cld    
  422c81:	jne    0x422c0f
  422c83:	fcom   QWORD PTR [edx+0x88c1b86]
  422c89:	sub    eax,0xf96b2d1f
  422c8e:	rcr    BYTE PTR [ebp-0x31d14358],cl
  422c94:	popa   
  422c95:	test   al,0x1a
  422c97:	hlt    
  422c98:	fcomp  DWORD PTR [esi+0x12]
  422c9b:	jmp    0x9a2d2b0a
  422ca0:	pop    edi
  422ca1:	call   0xcff1cd07
  422ca6:	jo     0x422cf2
  422ca8:	pop    ebp
  422ca9:	frstor [ebx+0x2a]
  422cac:	popf   
  422cad:	inc    esi
  422cae:	scas   al,BYTE PTR es:[edi]
  422caf:	je     0x422cc4
  422cb1:	aas    
  422cb2:	cmp    eax,DWORD PTR [edi]
  422cb4:	add    DWORD PTR [ecx+0x508c8083],ecx
  422cba:	cmc    
  422cbb:	mov    dl,0xba
  422cbd:	lods   eax,DWORD PTR ds:[esi]
  422cbe:	push   eax
  422cbf:	out    0x20,al
  422cc1:	mov    edi,0x6c6188c6
	...
  422cd2:	xor    dl,bl
  422cd4:	into   
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	push   ebp
  422cdf:	popf   
  422ce0:	or     esp,DWORD PTR ds:0x1d2db
  422ce6:	pop    esp
  422ce7:	add    BYTE PTR [eax],al
  422ce9:	add    BYTE PTR [eax+ebx*4-0x7c00634a],bh
  422cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf1:	pop    esi
  422cf2:	add    al,0xc9
  422cf4:	jle    0x422d56
  422cf6:	aaa    
  422cf7:	adc    al,0xc6
  422cf9:	pop    ebp
  422cfa:	(bad)  
  422cfb:	cmp    DWORD PTR [ebx],eax
  422cfd:	pop    edi
  422cfe:	imul   edi,DWORD PTR [edx+0x6],0x6042cb7b
  422d05:	stos   BYTE PTR es:[edi],al
  422d06:	sub    DWORD PTR [eax+0x66a3c12],edx
  422d0c:	jmp    0xb619e871
  422d11:	inc    edi
  422d12:	mov    cl,0x58
  422d14:	mov    eax,0x3bc78b0a
  422d19:	pop    es
  422d1a:	jl     0x422cd2
  422d1c:	call   0x9d73:0xc7a191a5
  422d23:	pop    edx
  422d24:	ss ds push edx
  422d27:	sbb    BYTE PTR [eax-0x3ceb216],dh
  422d2d:	daa    
  422d2e:	xor    BYTE PTR ds:0x7e93ceb3,ah
  422d34:	inc    edi
  422d35:	(bad)  
  422d37:	mov    al,ds:0xcfde328
  422d3c:	(bad)  
  422d3d:	jnp    0x422d16
  422d3f:	mov    dl,0xdf
  422d41:	cld    
  422d42:	aaa    
  422d43:	cld    
  422d44:	out    0x8a,al
	...
  422d52:	fucomi st,st(5)
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp+0x6a7f0d0a],ecx
  422d62:	aaa    
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [eax+eax*1+0x0],bl
  422d69:	add    BYTE PTR [edx-0x683ee3cc],ah
  422d6f:	stos   BYTE PTR es:[edi],al
  422d70:	jb     0x422d43
  422d72:	push   ss
  422d73:	ins    BYTE PTR es:[edi],dx
  422d74:	fnop   
  422d76:	jo     0x422d2e
  422d78:	retf   
  422d79:	rcr    DWORD PTR [ebp+0x622cc5c9],cl
  422d7f:	loop   0x422d39
  422d81:	outs   dx,BYTE PTR ds:[esi]
  422d82:	push   ecx
  422d83:	pop    es
  422d84:	xor    esp,DWORD PTR [eax-0x891120e]
  422d8a:	xchg   ecx,eax
  422d8b:	or     ebp,DWORD PTR [ecx-0x7c87789a]
  422d91:	lea    esp,[ebp+0x6e]
  422d94:	push   eax
  422d95:	das    
  422d96:	mov    ch,0x54
  422d98:	and    bl,BYTE PTR [ecx]
  422d9a:	cs stos DWORD PTR es:[edi],eax
  422d9c:	lds    ecx,FWORD PTR ds:0x8fa60479
  422da2:	mov    esp,ecx
  422da4:	lock fadd st(2),st
  422da7:	imul   eax,DWORD PTR [ecx],0x11
  422daa:	fcmovu st,st(4)
  422dac:	pop    ebx
  422dad:	mov    ebx,0x39e8f5e7
  422db2:	jmp    0xf918:0xe642d560
  422db9:	pop    ecx
  422dba:	inc    ebp
  422dbb:	or     DWORD PTR fs:[ecx-0x22],edx
  422dbf:	mov    eax,0x2cbaf88e
  422dc4:	inc    ecx
  422dc5:	js     0x422dc7
	...
  422dcf:	add    BYTE PTR [eax],al
  422dd1:	add    BYTE PTR ds:0x6f976b22,al
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi-0x6c3bc996],ah
  422de1:	out    dx,eax
  422de2:	xchg   ebx,eax
  422de3:	rol    DWORD PTR [ecx],cl
  422de5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422de9:	add    BYTE PTR [edx],ch
  422deb:	pop    eax
  422dec:	pop    ss
  422ded:	inc    eax
  422dee:	loope  0x422dbb
  422df0:	daa    
  422df1:	lahf   
  422df2:	(bad)  
  422df3:	aas    
  422df4:	fimul  DWORD PTR [ebp+0x5575f09f]
  422dfa:	adc    BYTE PTR [ebp-0x59585e26],ch
  422e00:	loope  0x422d97
  422e02:	scas   al,BYTE PTR es:[edi]
  422e03:	pop    esp
  422e04:	fld    DWORD PTR [edi+0x6f]
  422e07:	neg    DWORD PTR cs:[ecx+0x4b]
  422e0b:	cmp    ecx,edi
  422e0d:	aas    
  422e0e:	or     al,0xbb
  422e10:	repz pop ebp
  422e12:	cmp    DWORD PTR [ecx],edx
  422e14:	dec    edx
  422e15:	test   BYTE PTR [ecx-0x4d],ah
  422e18:	sub    esi,ecx
  422e1a:	movups XMMWORD PTR [eax+0x1c],xmm0
  422e1e:	icebp  
  422e1f:	xchg   ebp,eax
  422e20:	std    
  422e21:	loopne 0x422e7f
  422e23:	pop    ebx
  422e24:	in     eax,0xf1
  422e26:	fld    TBYTE PTR [edx-0x53fafb95]
  422e2c:	push   ss
  422e2d:	mov    BYTE PTR [esi+edi*8],0x1c
  422e31:	fbstp  TBYTE PTR [eax]
  422e33:	xchg   BYTE PTR [eax+0x48e28f20],al
  422e39:	jmp    0x422eac
  422e3b:	sbb    esi,DWORD PTR [ecx+0x75]
  422e3e:	jle    0x422e8b
  422e40:	hlt    
  422e41:	mov    WORD PTR [edx+0xe6b3f6],?
	...
  422e4f:	add    BYTE PTR [eax],al
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	dec    edx
  422e5f:	mov    dh,0xd0
  422e61:	push   ebx
  422e62:	out    dx,eax
  422e63:	rol    DWORD PTR [ecx],cl
  422e65:	add    BYTE PTR [eax+eax*1+0x0],bl
  422e69:	add    dh,dh
  422e6b:	jb     0x422e6c
  422e6d:	xchg   edx,eax
  422e6e:	test   al,0x52
  422e70:	ins    DWORD PTR es:[edi],dx
  422e71:	mov    BYTE PTR ds:0x9f76fd8b,ch
  422e77:	mov    WORD PTR [esi+edi*1],ss
  422e7a:	rep stos BYTE PTR es:[edi],al
  422e7c:	and    ebp,DWORD PTR [esi-0x70]
  422e7f:	add    al,0xf7
  422e81:	in     eax,dx
  422e82:	jmp    0x5ff6:0x3515a7e1
  422e89:	xor    DWORD PTR [eiz*2-0x31320b44],eax
  422e90:	leave  
  422e91:	dec    ebp
  422e92:	or     al,0x51
  422e94:	dec    eax
  422e95:	push   ds
  422e96:	outs   dx,DWORD PTR ds:[esi]
  422e97:	mov    dh,0x1b
  422e99:	xor    BYTE PTR [eax-0x61],bh
  422e9c:	mov    dh,0x87
  422e9e:	xchg   esi,eax
  422e9f:	sbb    DWORD PTR [ebx-0x17],edx
  422ea2:	jne    0x422e6b
  422ea4:	inc    edx
  422ea5:	arpl   WORD PTR [ecx-0x937423d],bx
  422eab:	aas    
  422eac:	sbb    DWORD PTR [ebx-0x6e2c353a],edx
  422eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb3:	push   ds
  422eb4:	aaa    
  422eb5:	ins    BYTE PTR es:[edi],dx
  422eb6:	add    dh,BYTE PTR [edi+0x2e5204c7]
  422ebc:	sbb    al,0x8b
  422ebe:	cmp    ecx,DWORD PTR ds:[edx-0x7a93e9fb]
  422ec5:	int3   
	...
  422ed2:	fisubr WORD PTR [ecx]
  422ed4:	cwde   
  422ed5:	sar    bh,cl
  422ed7:	repz fisubr WORD PTR ds:0x4af35f6
  422ede:	js     0x422f17
  422ee0:	das    
  422ee1:	popf   
  422ee2:	dec    ebx
  422ee3:	aam    0x1
  422ee5:	add    BYTE PTR [eax+eax*1+0x0],bl
  422ee9:	add    BYTE PTR [eax+0x64],ah
  422eec:	jl     0x422f4e
  422eee:	test   al,0xac
  422ef0:	lahf   
  422ef1:	out    dx,al
  422ef2:	inc    esi
  422ef3:	pop    esp
  422ef4:	jecxz  0x422ef7
  422ef6:	adc    BYTE PTR [esi],al
  422ef8:	and    al,0xe1
  422efa:	into   
  422efb:	add    ebp,esi
  422efd:	pop    ecx
  422efe:	mov    ch,0xbf
  422f00:	retf   
  422f01:	inc    edx
  422f02:	sahf   
  422f03:	(bad)  
  422f04:	clc    
  422f05:	lds    ebp,FWORD PTR [ecx+0xe]
  422f08:	icebp  
  422f09:	cmp    eax,0x918ae069
  422f0e:	pop    es
  422f0f:	(bad)  
  422f10:	pushf  
  422f11:	loop   0x422ef3
  422f13:	cmp    BYTE PTR [eax],bh
  422f15:	mov    DWORD PTR [ecx-0x2a],esp
  422f18:	push   eax
  422f19:	aaa    
  422f1a:	out    0xf0,al
  422f1c:	call   0xf8a46547
  422f21:	cld    
  422f22:	dec    esi
  422f23:	and    BYTE PTR [ebx-0x25],dl
  422f26:	ret    0x20f2
  422f29:	nop
  422f2a:	imul   ebx,ebx,0x7
  422f2d:	fmul   DWORD PTR [edi+0x22]
  422f30:	loope  0x422f4c
  422f32:	mov    DWORD PTR [ecx],ebx
  422f34:	lahf   
  422f35:	mov    edx,0x4db68b87
  422f3a:	rol    BYTE PTR [esi-0x4f],0x6b
  422f3e:	or     BYTE PTR [ecx],cl
  422f40:	inc    ebx
  422f41:	pop    edi
  422f42:	test   DWORD PTR [ebx+0x39],esp
  422f45:	test   DWORD PTR [eax],eax
	...
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    BYTE PTR [esi+0x3f],cl
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	jmp    0x422f39
  422f60:	jle    0x422fa3
  422f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f63:	aam    0x1
  422f65:	add    BYTE PTR [eax+eax*1+0x0],bl
  422f69:	add    BYTE PTR [edi+0x4e3c36c1],al
  422f6f:	fwait
  422f70:	cmc    
  422f71:	into   
  422f72:	adc    bh,bh
  422f74:	fucomi st,st(1)
  422f76:	repnz mov esi,0x982f73ea
  422f7c:	mov    al,0xb
  422f7e:	idiv   edi
  422f80:	xchg   ebp,eax
  422f81:	pop    edx
  422f82:	test   eax,0xbcd38081
  422f87:	inc    eax
  422f88:	mov    ebx,0x4a5216f5
  422f8d:	xchg   esi,eax
  422f8e:	jb     0x423009
  422f90:	(bad)  
  422f91:	mov    ecx,esp
  422f93:	ror    DWORD PTR [esi-0x1c],cl
  422f96:	push   ss
  422f97:	rcl    DWORD PTR [edi+0x9],1
  422f9a:	and    BYTE PTR [ebx+0x75],dl
  422f9d:	sbb    eax,0xd98157c1
  422fa2:	push   ds
  422fa3:	fstp   TBYTE PTR [edx]
  422fa5:	jb     0x422fb9
  422fa7:	iret   
  422fa8:	pop    esi
  422fa9:	pop    es
  422faa:	outs   dx,DWORD PTR ds:[esi]
  422fab:	xor    eax,0x37d12257
  422fb0:	mov    eax,ds:0x3f3fae14
  422fb5:	imul   ebx,DWORD PTR ds:0xb523,0x22b44950
  422fbe:	or     ah,ah
  422fc0:	mov    ds:0xf44bb691,al
  422fc5:	cmp    eax,0x0
	...
  422fd2:	push   ds
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	icebp  
  422fdf:	lods   eax,DWORD PTR ds:[esi]
  422fe0:	lods   al,BYTE PTR ds:[esi]
  422fe1:	test   BYTE PTR [ebx],0xd5
  422fe4:	add    DWORD PTR [eax],eax
  422fe6:	pop    esp
  422fe7:	add    BYTE PTR [eax],al
  422fe9:	add    BYTE PTR [ecx+eiz*1],dh
  422fec:	addr16 (bad) 
  422fee:	rcr    al,cl
  422ff0:	repnz mov cl,0x8f
  422ff3:	pop    ebp
  422ff4:	push   ebp
  422ff5:	sub    BYTE PTR [esp+esi*1-0xd09d56e],ch
  422ffc:	mov    ecx,0x392d56e
  423001:	push   edx
  423002:	push   0x1e
  423004:	in     al,dx
  423005:	sub    dl,BYTE PTR [esi-0x2ca1c116]
  42300b:	jge    0x423014
  42300d:	add    ecx,DWORD PTR [ecx-0x1581aa3d]
  423013:	and    BYTE PTR [esi+0x12],dh
  423016:	sbb    al,0x5b
  423018:	jno    0x42305b
  42301a:	cli    
  42301b:	inc    edx
  42301c:	jno    0x422fe2
  42301e:	retf   
  42301f:	sub    DWORD PTR [ebx-0x8],eax
  423022:	imul   dh
  423024:	pop    eax
  423025:	cdq    
  423026:	xchg   esi,eax
  423027:	xor    BYTE PTR [ecx],bh
  423029:	popa   
  42302a:	cld    
  42302b:	cmp    eax,ecx
  42302d:	fsubr  st(4),st
  42302f:	out    dx,eax
  423030:	push   cs
  423031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423032:	call   0x429262f6
  423037:	aam    0xf5
  423039:	dec    eax
  42303a:	mov    edi,0x99c35dea
  42303f:	mov    dh,0xdb
  423041:	dec    ecx
  423042:	stc    
  423043:	out    dx,eax
  423044:	xchg   ecx,eax
  423045:	or     eax,0x0
	...
  423052:	fwait
  423053:	loope  0x4230c2
  423055:	sub    eax,0xf7dbad7f
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [eax+eiz*8],al
  423060:	pop    ds
  423061:	mov    DWORD PTR [edi-0x2b],ebx
  423064:	add    DWORD PTR [eax],eax
  423066:	pop    esp
  423067:	add    BYTE PTR [eax],al
  423069:	add    BYTE PTR [ebx+0x5c],ah
  42306c:	icebp  
  42306d:	stc    
  42306e:	inc    edi
  42306f:	outs   dx,DWORD PTR ds:[esi]
  423070:	fs hlt 
  423072:	lea    ecx,[edi+0x65]
  423075:	jnp    0x423031
  423077:	fwait
  423078:	mov    al,0x80
  42307a:	add    DWORD PTR ds:0x6b24a51,0x2c
  423081:	test   DWORD PTR [ebx-0xbd0fa60],0x332dc0cd
  42308b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42308c:	mov    edx,0x42ad5b7e
  423091:	ror    BYTE PTR [esi],1
  423093:	push   ds
  423094:	mul    DWORD PTR [esi]
  423096:	xchg   esi,eax
  423097:	mov    eax,ds:0xf04430d1
  42309c:	xchg   ecx,eax
  42309d:	rcr    BYTE PTR [ebx],0x1e
  4230a0:	mov    eax,0x4c778695
  4230a5:	and    edx,DWORD PTR [ebp+0x62]
  4230a8:	push   es
  4230a9:	imul   esp,DWORD PTR [edi+0xe56d520],0xffffffa3
  4230b0:	ins    BYTE PTR es:[edi],dx
  4230b1:	(bad)  
  4230b3:	iret   
  4230b4:	mov    esi,0x116509af
  4230b9:	mov    ss,WORD PTR [ebx+0x3493a7e7]
  4230bf:	sub    cl,BYTE PTR [eax+eax*2]
  4230c2:	mov    ch,0x3b
  4230c4:	jne    0x423083
	...
  4230d2:	or     bh,dh
  4230d4:	ja     0x423120
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	jp     0x423120
  4230e0:	into   
  4230e1:	and    eax,0x1d5bb
  4230e6:	pop    esp
  4230e7:	add    BYTE PTR [eax],al
  4230e9:	add    dl,al
  4230eb:	shr    BYTE PTR [edi-0x70bc0432],0x26
  4230f2:	cmp    BYTE PTR [esi+0x3403e260],bh
  4230f8:	not    BYTE PTR ds:0xc1a9a691
  4230fe:	sub    bl,bh
  423100:	daa    
  423101:	xchg   esp,eax
  423102:	adc    DWORD PTR [ecx+0x1d],edx
  423105:	lods   al,BYTE PTR ds:[esi]
  423106:	mov    al,0x9a
  423108:	mov    bp,ax
  42310b:	mov    esi,0xd3e614a9
  423110:	push   ds
  423111:	xor    bl,BYTE PTR [edi]
  423113:	leave  
  423114:	add    al,0xa0
  423116:	adc    al,0x46
  423118:	mov    ch,0x75
  42311a:	outs   dx,BYTE PTR ds:[esi]
  42311b:	jno    0x42319a
  42311d:	inc    ecx
  42311e:	int    0x1b
  423120:	xchg   ebx,eax
  423121:	add    al,0x14
  423123:	repnz int 0xe2
  423126:	dec    esp
  423127:	jmp    0x4e69:0xdb57a239
  42312e:	out    dx,eax
  42312f:	sub    ebx,esp
  423131:	sahf   
  423132:	call   0x15e6c392
  423137:	jle    0x423129
  423139:	das    
  42313a:	push   ds
  42313b:	ins    DWORD PTR es:[edi],dx
  42313c:	outs   dx,DWORD PTR ds:[esi]
  42313d:	xchg   edx,eax
  42313e:	mov    al,ds:0xccdc34a
  423143:	(bad)  
  423144:	dec    esp
  423145:	add    BYTE PTR es:[eax],al
	...
  423150:	add    BYTE PTR [eax],al
  423152:	arpl   WORD PTR ss:[eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	lods   eax,DWORD PTR ds:[esi]
  42315f:	mov    ds:0xd617b837,eax
  423164:	add    DWORD PTR [eax],eax
  423166:	pop    esp
  423167:	add    BYTE PTR [eax],al
  423169:	add    BYTE PTR [edx],dh
  42316b:	fs inc ebx
  42316d:	in     eax,0x82
  42316f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423170:	inc    ebp
  423171:	mov    eax,ds:0x9bf0e25b
  423176:	iret   
  423177:	jmp    0xb4cf:0xb5247300
  42317e:	xlat   BYTE PTR ds:[ebx]
  42317f:	int    0x2c
  423181:	shl    DWORD PTR [ebp+0x5fd361ef],cl
  423187:	jmp    0x4231d7
  423189:	dec    ebx
  42318a:	sbb    edi,DWORD PTR [ebx+0x1c]
  42318d:	rcl    BYTE PTR ds:0x42fc0f2a,cl
  423193:	mov    fs,WORD PTR [ebp-0x5c]
  423196:	stos   DWORD PTR es:[edi],eax
  423197:	rcr    BYTE PTR [edx],0x8
  42319a:	loope  0x42315f
  42319c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42319d:	in     al,dx
  42319e:	and    al,BYTE PTR [esi+0x41]
  4231a1:	dec    esp
  4231a2:	lods   al,BYTE PTR ds:[esi]
  4231a3:	rcr    ah,1
  4231a5:	and    al,0xc1
  4231a7:	scas   eax,DWORD PTR es:[edi]
  4231a8:	xor    BYTE PTR [edx],dh
  4231aa:	fs aad 0xb6
  4231ad:	jno    0x4231dd
  4231af:	dec    eax
  4231b0:	add    ebx,DWORD PTR [edi+edx*2+0x4f]
  4231b4:	out    dx,al
  4231b5:	mov    esp,0xf60c61ba
  4231ba:	ficom  WORD PTR [edx]
  4231bc:	xchg   ebp,eax
  4231bd:	sbb    BYTE PTR [edi-0x49],al
  4231c0:	(bad)  
  4231c1:	fcomp  DWORD PTR [ebx]
  4231c3:	aad    0xed
  4231c5:	cmp    al,BYTE PTR [eax]
	...
  4231cf:	add    BYTE PTR [eax],al
  4231d1:	add    BYTE PTR [edi],ah
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	(bad)
  4231e1:	loop   0x4231ce
  4231e3:	fadd   QWORD PTR [ecx]
  4231e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4231e9:	add    BYTE PTR ds:0x93bafa27,bh
  4231ef:	cmp    al,0x56
  4231f1:	push   0x58
  4231f3:	xchg   ecx,eax
  4231f4:	push   esp
  4231f5:	inc    esi
  4231f6:	xchg   esp,eax
  4231f7:	inc    esp
  4231f8:	cld    
  4231f9:	(bad)  
  4231fa:	cmp    cl,BYTE PTR [edx]
  4231fc:	inc    edx
  4231fd:	mov    al,0x7f
  4231ff:	retf   
  423200:	mov    bl,BYTE PTR [ebx]
  423202:	stos   BYTE PTR es:[edi],al
  423203:	nop
  423204:	mov    ecx,0x5b2088ef
  423209:	out    dx,al
  42320a:	mov    ebx,0xb241ff0e
  42320f:	adc    edi,eax
  423211:	mov    edx,0xa8845d03
  423216:	cld    
  423217:	dec    ebx
  423218:	jns    0x4231ff
  42321a:	lods   eax,DWORD PTR ds:[esi]
  42321b:	mov    ebp,0xb9729ed5
  423220:	retf   
  423221:	jmp    0x8d548b6d
  423226:	aas    
  423227:	iret   
  423228:	sti    
  423229:	in     eax,0x3
  42322b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42322c:	pop    ebx
  42322d:	inc    ebx
  42322e:	and    edx,DWORD PTR [ebp-0x2d]
  423231:	jle    0x423285
  423233:	sbb    BYTE PTR [ecx-0x72373e68],dh
  423239:	jb     0x423231
  42323b:	dec    esp
  42323c:	mov    cl,0xd3
  42323e:	xchg   BYTE PTR [eax-0xa],bl
  423241:	in     al,dx
  423242:	scas   eax,DWORD PTR es:[edi]
  423243:	mov    ebp,0xf9ee
	...
  423250:	add    BYTE PTR [eax],al
  423252:	daa    
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0x746e075b
  423260:	xchg   ebp,eax
  423261:	call   0x5c:0x1dd47
  423268:	add    BYTE PTR [eax],al
  42326a:	in     al,dx
  42326b:	aaa    
  42326c:	out    0x3d,eax
  42326e:	and    al,0x9b
  423270:	retf   
  423271:	sti    
  423272:	shr    BYTE PTR [ebp+0x4637ff16],1
  423278:	mov    ah,0x51
  42327a:	in     eax,0x83
  42327c:	cld    
  42327d:	fist   WORD PTR [edx]
  42327f:	pushw  ss
  423281:	scas   al,BYTE PTR es:[edi]
  423282:	xchg   esp,eax
  423283:	jbe    0x42329d
  423285:	popf   
  423286:	mov    dl,0x9c
  423288:	jle    0x423233
  42328a:	ret    
  42328b:	iret   
  42328c:	pop    ss
  42328d:	lock adc ebp,DWORD PTR [ebx+0x30]
  423291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423292:	dec    esp
  423293:	sub    BYTE PTR [ecx-0x276ca3cb],bh
  423299:	ret    
  42329a:	xchg   ebp,eax
  42329b:	sub    DWORD PTR [ebx-0x54],ebx
  42329e:	test   BYTE PTR [edx],al
  4232a0:	idiv   ecx
  4232a2:	mov    DWORD PTR [eax+0x286305b],ecx
  4232a8:	push   esp
  4232a9:	aas    
  4232aa:	retf   
  4232ab:	mov    ch,0x80
  4232ad:	cmp    BYTE PTR [edi],0x6b
  4232b0:	mov    ss,WORD PTR [edi+0x2c]
  4232b3:	cwde   
  4232b4:	inc    edx
  4232b5:	test   BYTE PTR [ebp-0x24],ch
  4232b8:	ds jmp 0x7691:0xe24b1561
  4232c0:	cs (bad) 
  4232c2:	cmp    al,0xe5
  4232c4:	popf   
  4232c5:	mov    ds:0x0,eax
	...
  4232d2:	aaa    
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0xc9d2:0x48c6eef4
  4232e2:	mov    ds:0x5c0001dd,eax
  4232e7:	add    BYTE PTR [eax],al
  4232e9:	add    BYTE PTR [ebp-0x2bfae5b7],ah
  4232ef:	lea    esi,[esi-0xcb00202]
  4232f5:	add    ch,BYTE PTR [esi+0x7c]
  4232f8:	and    eax,0xab24f33c
  4232fd:	xchg   BYTE PTR [ebp+edi*4-0x2e],dh
  423301:	or     cl,bl
  423303:	jg     0x423327
  423305:	or     DWORD PTR [ebx+edi*1+0x68],0xffffffa0
  42330a:	cwde   
  42330b:	cmp    BYTE PTR [ebx+edx*2],0x19
  42330f:	xchg   ebp,eax
  423310:	cmp    eax,0x302ef67a
  423315:	jo     0x42338f
  423317:	addr16 push esi
  423319:	adc    DWORD PTR [ecx+0x6b3ad06c],ebx
  42331f:	mov    eax,?
  423321:	ins    DWORD PTR es:[edi],dx
  423322:	clc    
  423323:	lods   al,BYTE PTR ds:[esi]
  423324:	push   esp
  423325:	inc    ecx
  423326:	mov    al,0x77
  423328:	push   ebx
  423329:	adc    DWORD PTR [esi],ebp
  42332b:	outs   dx,BYTE PTR ds:[esi]
  42332c:	rol    BYTE PTR [edx-0x1a],1
  42332f:	bound  ecx,QWORD PTR [ecx]
  423331:	les    edx,FWORD PTR [ecx-0x545f3599]
  423337:	mov    ds:0xeb53b81f,eax
  42333c:	js     0x423302
  42333e:	imul   eax,DWORD PTR [edi],0x49defa0
  423344:	aaa    
  423345:	rol    BYTE PTR [eax],cl
	...
  42334f:	add    BYTE PTR [eax],al
  423351:	add    BYTE PTR [esi],dl
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi-0x12b5a0c6],al
  423360:	setne  bh
  423363:	fld    QWORD PTR [ecx]
  423365:	add    BYTE PTR [eax+eax*1+0x0],bl
  423369:	add    BYTE PTR [edx],ah
  42336b:	retf   0x9d64
  42336e:	pusha  
  42336f:	inc    edi
  423370:	out    dx,al
  423371:	sub    ebp,eax
  423373:	std    
  423374:	and    cl,BYTE PTR [edx+0x6c]
  423377:	neg    DWORD PTR [ebp+0x44dd521c]
  42337d:	sub    esi,DWORD PTR [ebp-0x1f367682]
  423383:	fistp  DWORD PTR [esi]
  423385:	ret    0x814c
  423388:	mov    dl,0xe7
  42338a:	mov    DWORD PTR [esi-0x7d],edi
  42338d:	mov    BYTE PTR cs:0x7311af52,dl
  423394:	aam    0x9f
  423396:	jae    0x423379
  423398:	add    dh,BYTE PTR ds:0x70e441a5
  42339e:	retf   0x2ee9
  4233a1:	xor    dh,BYTE PTR [ebx]
  4233a3:	push   edi
  4233a4:	mov    ebp,0xabc8ca3c
  4233a9:	pop    ss
  4233aa:	mov    eax,ds:0xdcaf2c3f
  4233af:	sbb    BYTE PTR [edx-0x392d7420],0xbc
  4233b6:	add    esi,ebx
  4233b8:	adc    eax,0x62f9d050
  4233bd:	out    dx,eax
  4233be:	shr    DWORD PTR [edi],1
  4233c0:	sbb    cl,dh
  4233c2:	xchg   edi,eax
  4233c3:	pop    esp
  4233c4:	adc    bl,BYTE PTR [eax+0x0]
	...
  4233cf:	add    BYTE PTR [eax],al
  4233d1:	add    BYTE PTR [esi+0x76],ch
  4233d4:	in     al,0xca
  4233d6:	cld    
  4233d7:	fisubr DWORD PTR [esi-0xa]
  4233da:	sbb    BYTE PTR [edx-0x74e46879],dl
  4233e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233e1:	sbb    al,0x5b
  4233e3:	fiadd  WORD PTR [ecx]
  4233e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4233e9:	add    BYTE PTR [ebx+0x79],bl
  4233ec:	shr    BYTE PTR [edi],1
  4233ee:	pop    esi
  4233ef:	adc    al,0x19
  4233f1:	dec    ebp
  4233f2:	mov    ds,ebx
  4233f4:	jb     0x4233e3
  4233f6:	stos   DWORD PTR es:[edi],eax
  4233f7:	sub    dl,BYTE PTR [ecx-0x72c52010]
  4233fd:	fidiv  DWORD PTR [edx+0x7a95680a]
  423403:	or     eax,0x6b9bcdd7
  423408:	add    cl,ah
  42340a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42340b:	icebp  
  42340c:	lock or eax,0x69c54391
  423412:	fst    DWORD PTR [ebx+0x4fa95f54]
  423418:	pop    ebx
  423419:	jb     0x4233e4
  42341b:	sbb    eax,0xa98f7cf
  423420:	aam    0xd0
  423422:	mov    WORD PTR [eax],ss
  423424:	mov    gs,WORD PTR [esi+0x4757be35]
  42342a:	adc    BYTE PTR [ecx-0x7e50d923],dh
  423430:	jmp    0x4233e2
  423432:	add    DWORD PTR [ebx+0x3cb6e0c],esp
  423438:	lock ror DWORD PTR [edi+esi*4],cl
  42343c:	loopne 0x423411
  42343e:	test   ecx,eax
  423440:	sti    
  423441:	pop    ebp
  423442:	(bad)  
  423443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423444:	xor    DWORD PTR [edi+0x0],0x0
  42344e:	add    BYTE PTR [eax],al
  423450:	add    BYTE PTR [eax],al
  423452:	cmp    dl,BYTE PTR [edx-0x3c]
  423455:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42345c:	nop
  42345d:	shr    DWORD PTR [ebx-0x35],cl
  423460:	mov    dh,0xd5
  423462:	mov    bh,0xde
  423464:	add    DWORD PTR [eax],eax
  423466:	pop    esp
  423467:	add    BYTE PTR [eax],al
  423469:	add    BYTE PTR [eax+ecx*4+0x462a999f],al
  423470:	ret    
  423471:	mov    bl,0x4e
  423473:	dec    BYTE PTR [ebx]
  423475:	and    ecx,DWORD PTR [ecx]
  423477:	jmp    0x49f3:0xf2f85695
  42347e:	das    
  42347f:	mov    ds:0xb75035d3,eax
  423484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423485:	pop    edi
  423486:	imul   ecx,edi,0xa00c94cc
  42348c:	(bad)  
  42348d:	ins    DWORD PTR es:[edi],dx
  42348e:	push   edi
  42348f:	ss jle 0x423493
  423492:	sbb    al,BYTE PTR [ecx+0x3e]
  423495:	xchg   esp,eax
  423496:	ss mov eax,0xaf338173
  42349c:	(bad)  
  42349d:	lods   al,BYTE PTR ds:[esi]
  42349e:	fisub  WORD PTR [ebx+0xc]
  4234a1:	mov    bh,0x25
  4234a3:	pop    eax
  4234a4:	inc    ebx
  4234a5:	inc    esi
  4234a6:	or     esp,DWORD PTR [ebp+0x42e61798]
  4234ac:	pusha  
  4234ad:	pop    ebp
  4234ae:	mov    al,ds:0xd26cef3c
  4234b3:	xor    ecx,DWORD PTR [edx]
  4234b5:	scas   al,BYTE PTR es:[edi]
  4234b6:	inc    edx
  4234b8:	cmp    BYTE PTR [edi-0x46ea3dff],ah
  4234be:	in     eax,0x86
  4234c0:	mov    ebp,0x6b833828
  4234c5:	out    0x0,al
	...
  4234cf:	add    BYTE PTR [eax],al
  4234d1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234d7:	jle    0x4234ac
  4234d9:	call   DWORD PTR [eax-0x20]
  4234dc:	cli    
  4234dd:	call   0xdf13:0xce6ab28b
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	pop    esp
  4234e7:	add    BYTE PTR [eax],al
  4234e9:	add    dh,ah
  4234eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234ec:	lock add eax,0x2b17d4bb
  4234f2:	mov    WORD PTR [edi-0x1a68c523],?
  4234f8:	jmp    FWORD PTR [ebx]
  4234fa:	out    0xaa,al
  4234fc:	imul   ebx,esi,0x5c
  4234ff:	xchg   edi,eax
  423500:	bound  ecx,QWORD PTR [eax]
  423502:	fdiv   st(3),st
  423504:	dec    ebp
  423505:	fldcw  WORD PTR [ecx]
  423507:	xchg   esp,eax
  423508:	inc    BYTE PTR [ebx-0x2dce9bde]
  42350e:	dec    esp
  42350f:	and    al,0x1c
  423511:	inc    ecx
  423512:	push   0x215dedf2
  423517:	mov    ebx,0x980cfc48
  42351c:	pop    ebx
  42351d:	stos   DWORD PTR es:[edi],eax
  42351e:	in     al,dx
  42351f:	xchg   ebx,eax
  423520:	jle    0x4234d4
  423522:	sbb    bh,bh
  423524:	loopne 0x4234cb
  423526:	jns    0x4234cd
  423528:	into   
  423529:	mov    ch,0xf1
  42352b:	mov    WORD PTR [ecx-0x2d],cs
  42352e:	call   0x8b6e:0xdd94765f
  423535:	icebp  
  423536:	sub    al,0x4b
  423539:	lock push ebp
  42353b:	lods   eax,DWORD PTR ds:[esi]
  42353c:	or     eax,0x6a009cc2
  423541:	jns    0x4234f3
  423543:	out    dx,al
  423544:	mov    esi,0x82
	...
  423551:	add    ah,bl
  423553:	fincstp 
  423555:	shl    bh,0xee
  423558:	(bad)  
  423559:	frstor [ecx+eax*1]
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	dec    esi
  42355f:	fidiv  WORD PTR [edx+edx*8]
  423562:	outs   dx,DWORD PTR ds:[esi]
  423563:	fild   WORD PTR [ecx]
  423565:	add    BYTE PTR [eax+eax*1+0x0],bl
  423569:	add    BYTE PTR [eax+0x60ab65c6],ah
  42356f:	sub    al,0x1c
  423571:	ficomp DWORD PTR [eax]
  423573:	xor    DWORD PTR [eax+esi*2],ebp
  423576:	xor    dl,al
  423578:	stc    
  423579:	push   0x76
  42357b:	dec    edi
  42357c:	mov    cl,0x26
  42357e:	popf   
  42357f:	sub    al,0xc1
  423581:	and    ch,ch
  423583:	mov    ah,0x25
  423585:	fsub   DWORD PTR [ebx]
  423587:	(bad)  
  423588:	sbb    cl,BYTE PTR [ecx+0x1d]
  42358b:	shr    BYTE PTR [ebx+eax*2],1
  42358e:	jmp    0x423575
  423590:	test   eax,0xe77c2e92
  423595:	ret    0xfb8a
  423598:	xchg   BYTE PTR [edx+esi*2-0x3c251a5e],ch
  42359f:	xor    eax,DWORD PTR [ecx+edi*2]
  4235a2:	jg     0x423524
  4235a4:	mov    dl,0x76
  4235a6:	xchg   esp,eax
  4235a7:	lods   al,BYTE PTR ds:[esi]
  4235a8:	daa    
  4235a9:	cmp    esi,DWORD PTR [ebp+0x3e7c3a7f]
  4235af:	inc    ebx
  4235b0:	jecxz  0x4235f2
  4235b2:	ficom  DWORD PTR [ecx]
  4235b4:	sbb    bh,BYTE PTR [ebx-0x1f]
  4235b7:	xchg   ecx,eax
  4235b8:	pop    ecx
  4235b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ba:	mov    ebp,0x3f369156
  4235bf:	test   BYTE PTR [eax+0x1f78a8ce],al
  4235c5:	jno    0x4235c7
	...
  4235cf:	add    BYTE PTR [eax],al
  4235d1:	add    BYTE PTR [edi-0x5e],ch
  4235d4:	aam    0x2a
  4235d6:	fnstsw WORD PTR [esi-0x1]
  4235d9:	out    0x52,eax
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x8d
  4235df:	popa   
  4235e0:	sbb    dh,BYTE PTR [edx]
  4235e2:	retf   
  4235e3:	fild   WORD PTR [ecx]
  4235e5:	add    BYTE PTR [eax+eax*1+0x0],bl
  4235e9:	add    BYTE PTR [eax+0x79],ah
  4235ec:	(bad)
  4235f1:	push   ebx
  4235f2:	mov    eax,0xb0e94b4
  4235f7:	or     BYTE PTR [ebx],ah
  4235f9:	and    BYTE PTR [ecx+edx*2],bh
  4235fc:	jne    0x4235f8
  4235fe:	loope  0x423632
  423600:	ds cs in eax,dx
  423603:	js     0x4235cf
  423605:	add    ecx,DWORD PTR [edx-0x11]
  423608:	jne    0x423595
  42360a:	lds    edx,FWORD PTR [ebx]
  42360c:	adc    BYTE PTR [ebx],bh
  42360e:	test   DWORD PTR [ebx],ebp
  423610:	(bad)  
  423611:	mov    ah,0xa7
  423613:	push   esi
  423614:	jno    0x42367e
  423616:	push   ecx
  423617:	lods   eax,DWORD PTR ds:[esi]
  423618:	dec    edx
  423619:	xchg   ebx,eax
  42361a:	pop    ds
  42361b:	gs cmp dl,cl
  42361e:	adc    BYTE PTR [eax+ecx*2+0x12],ch
  423622:	pop    ebx
  423623:	leave  
  423624:	fldenv [edx]
  423626:	push   esi
  423627:	mov    ah,0xa0
  423629:	push   es
  42362a:	xchg   ebx,eax
  42362b:	push   es
  42362c:	inc    esi
  42362d:	fstp   TBYTE PTR [edi+0x707c74a0]
  423633:	stos   DWORD PTR es:[edi],eax
  423634:	mov    WORD PTR [edi+0x48],?
  423637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423638:	xchg   DWORD PTR [edi],esi
  42363a:	cmp    al,0x3d
  42363c:	imul   eax,DWORD PTR [ebp+0x76],0xffffff97
  423640:	or     eax,0xd664f028
  423645:	mov    edi,0x0
	...
  423652:	stc    
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	bound  esp,QWORD PTR [esi-0x34]
  423661:	pop    edx
  423662:	daa    
  423663:	loopne 0x423666
  423665:	add    BYTE PTR [eax+eax*1+0x0],bl
  423669:	add    bh,dl
  42366b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42366c:	add    ebp,edx
  42366e:	cdq    
  42366f:	inc    eax
  423670:	and    DWORD PTR [esi+0x5eca72a],eax
  423676:	imul   ebp,DWORD PTR [ecx+eiz*8-0x24],0xcd9a46de
  42367e:	pop    ebp
  42367f:	aam    0x9f
  423681:	retf   
  423682:	sbb    cl,dh
  423684:	aad    0xa1
  423686:	out    0x9c,eax
  423688:	sahf   
  423689:	add    eax,DWORD PTR [ebx]
  42368b:	and    DWORD PTR [esi-0x56fb83c2],edi
  423691:	mul    DWORD PTR [ebp+0x41a4fe4a]
  423697:	and    bh,al
  423699:	fwait
  42369a:	push   esi
  42369b:	mov    fs,WORD PTR [edx]
  42369d:	push   ecx
  42369e:	dec    ebp
  42369f:	pop    ss
  4236a0:	iret   
  4236a1:	add    al,0x6e
  4236a3:	call   0xcebb:0x83de6a59
  4236aa:	test   BYTE PTR [edi],ah
  4236ac:	mov    al,ds:0x59b366d0
  4236b1:	ja     0x423696
  4236b3:	mov    bl,0x4b
  4236b5:	xchg   ecx,eax
  4236b6:	stos   BYTE PTR es:[edi],al
  4236b7:	add    al,0xe5
  4236b9:	imul   edi,DWORD PTR [ecx+0x231cb57e],0x26
  4236c0:	shl    BYTE PTR [edx-0x281c26b8],cl
	...
  4236d2:	mov    eax,ds:0x3e8336b9
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0xd61d8c27
  4236e0:	(bad)  
  4236e1:	fadd   DWORD PTR [ebx+0x5c0001e0]
  4236e7:	add    BYTE PTR [eax],al
  4236e9:	add    BYTE PTR [ecx-0xe76ff6c],bh
  4236ef:	xor    BYTE PTR [esi+eiz*1],bl
  4236f2:	or     esp,ecx
  4236f4:	psubusw mm2,QWORD PTR ds:0x8d9b22a4
  4236fb:	(bad)  
  4236fc:	fwait
  4236fd:	(bad)  
  4236fe:	loop   0x423682
  423700:	cmp    ch,ch
  423702:	cwde   
  423703:	xlat   BYTE PTR ds:[ebx]
  423704:	(bad)  [esi-0xbc256b]
  42370a:	loope  0x4236de
  42370c:	dec    ecx
  42370d:	xchg   esi,eax
  42370e:	mov    dh,0x85
  423710:	repz push ss
  423712:	cmp    ecx,edx
  423714:	into   
  423715:	add    BYTE PTR [edx+0xb212bcb],bl
  42371b:	int    0xc0
  42371d:	mov    ss,esi
  42371f:	adc    bl,BYTE PTR [esi+0x5f]
  423722:	int    0xe4
  423724:	sbb    ah,bl
  423726:	mov    BYTE PTR [edx-0x124d8da8],dl
  42372c:	jmp    0xe39a:0xf7eb0644
  423733:	repnz daa 
  423735:	fsubr  QWORD PTR [edi+esi*2]
  423738:	in     al,0x5a
  42373a:	scas   eax,DWORD PTR es:[edi]
  42373b:	inc    edx
  42373c:	stos   BYTE PTR es:[edi],al
  42373d:	fistp  DWORD PTR [ecx-0x1c9ec0e5]
  423743:	mov    esp,0xf2a5
	...
  423750:	add    BYTE PTR [eax],al
  423752:	adc    dl,bh
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	sub    DWORD PTR [edi],ebp
  423760:	nop
  423761:	pop    edx
  423762:	fnstsw ax
  423764:	add    DWORD PTR [eax],eax
  423766:	pop    esp
  423767:	add    BYTE PTR [eax],al
  423769:	add    BYTE PTR [esi],dh
  42376b:	hlt    
  42376c:	inc    eax
  42376d:	pop    eax
  42376e:	bound  esp,QWORD PTR [esi-0x7f]
  423771:	test   esp,esi
  423773:	add    al,0xf2
  423775:	fild   DWORD PTR [esi]
  423777:	retf   0x1bfc
  42377a:	mov    ecx,0xea5e0c56
  42377f:	stos   DWORD PTR es:[edi],eax
  423780:	(bad)  
  423781:	sti    
  423782:	js     0x4237b9
  423784:	cdq    
  423785:	int3   
  423786:	lods   al,BYTE PTR ds:[esi]
  423787:	push   edx
  423788:	mov    al,ds:0x50b11b5d
  42378d:	test   edx,ecx
  42378f:	idiv   DWORD PTR [esi+0x3074d0b2]
  423795:	retf   0x6dc6
  423798:	(bad)  
  423799:	dec    ebx
  42379a:	les    ebp,FWORD PTR [ecx]
  42379c:	js     0x4237a7
  42379e:	sbb    al,0xcc
  4237a0:	pop    edx
  4237a1:	pop    ecx
  4237a2:	in     eax,dx
  4237a3:	jb     0x423727
  4237a5:	aam    0x63
  4237a7:	ret    
  4237a8:	jecxz  0x42376a
  4237aa:	xchg   edi,eax
  4237ab:	push   edi
  4237ac:	sar    ah,cl
  4237ae:	in     eax,dx
  4237af:	not    BYTE PTR [ecx-0xc]
  4237b2:	icebp  
  4237b3:	retf   0x2e0d
  4237b6:	test   eax,0xd3d671e
  4237bb:	std    
  4237bc:	ficom  WORD PTR [eax-0x76]
  4237bf:	ja     0x423836
  4237c1:	outs   dx,BYTE PTR ds:[esi]
  4237c2:	test   BYTE PTR [esi],cl
  4237c4:	jmp    0x0:0xde
	...
  4237d3:	rol    BYTE PTR [edx+0x0],0x4
  4237d7:	rol    BYTE PTR [edx+0x0],0x8
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
